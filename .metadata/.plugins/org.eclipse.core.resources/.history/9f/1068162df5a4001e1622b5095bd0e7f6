/*
 * vocal.c
 *
 *  Created on: Dec 27, 2023
 *      Author: jeffsnyder
 */


#include "main.h"
#include "leaf.h"
#include "codec.h"
#include "i2c.h"
#include "gpio.h"
#include "spi.h"
#include "parameters.h"
#include "audiostream.h"
#include "arm_math.h"
#include "vocal.h"


int prevTractLength = 22;

void __ATTR_ITCMRAM audioInitVocal()
{

}



float __ATTR_ITCMRAM audioTickVocal(void)
{
	float tempSamp = 0.0f;
	for (int i = 0; i < 12; i++)
	{
		knobScaled[i] = tExpSmooth_tick(&knobSmoothers[i]);
	}

	float volumeSmoothed = tExpSmooth_tick(&volumeSmoother);

	int newTractLength = knobScaled[0] * 64 + 1;
	if (newTractLength != prevTractLength)
	{
		tVoc_set_tractLength(&vocal[0], newTractLength);
	}

	tVoc_setDoubleComputeFlag(&vocal[0], knobScaled[1] > 0.5f);

	prevTractLength = newTractLength;
	for (int i = 0; i < numStringsThisBoard; i++)
	{
		tempSamp += tVoc_tick(&vocal[i]) * tADSRT_tickNoInterp(&fenvelopes[i]);
		stringFrequencies[i] = mtof(stringMIDIPitches[i]+ stringOctave[i]);
		tVoc_setFreq(&vocal[i], stringFrequencies[i]);
		tVoc_set_tenseness(&vocal[i], volumeSmoothed);

		//Lfloat tongue = 12.0f + (16.0f * knobScaled[0]);
		//tVoc_set_tongue_shape(&vocal[i], tongue, 2.9f * knobScaled[1] + 0.1f);

	}

	float volIdx = LEAF_clip(47.0f, ((volumeSmoothed * 80.0f) + 47.0f), 127.0f);
	//float volIdx = LEAF_clip(0.0f, ((volumeSmoothed * 80.0f)), 127.0f);
	int volIdxInt = (int) volIdx;
	float alpha = volIdx-volIdxInt;
	int volIdxIntPlus = (volIdxInt + 1) & 127;
	float omAlpha = 1.0f - alpha;
	float outVol = volumeAmps128[volIdxInt] * omAlpha;
	outVol += volumeAmps128[volIdxIntPlus] * alpha;
	tempSamp *= outVol;
	tempSamp *= masterVolFromBrain;
	return tempSamp;
}
