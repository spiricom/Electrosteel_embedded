ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"removeOffsetNoise.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.FilterSignal,"ax",%progbits
  20              		.align	2
  21              		.global	FilterSignal
  22              		.thumb
  23              		.thumb_func
  24              		.type	FilterSignal, %function
  25              	FilterSignal:
  26              	.LFB63:
  27              		.file 1 "removeOffsetNoise.c"
   1:removeOffsetNoise.c **** /******************************************************************************
   2:removeOffsetNoise.c **** * File Name: removeOffsetNoise.c
   3:removeOffsetNoise.c **** *  Version 2.0
   4:removeOffsetNoise.c **** *
   5:removeOffsetNoise.c **** * Description:
   6:removeOffsetNoise.c **** *  This file contains the functions that are used to find offset and perform 
   7:removeOffsetNoise.c **** *  IIR filter
   8:removeOffsetNoise.c **** *
   9:removeOffsetNoise.c **** * Note:
  10:removeOffsetNoise.c **** *
  11:removeOffsetNoise.c **** ********************************************************************************
  12:removeOffsetNoise.c **** * Copyright (2015), Cypress Semiconductor Corporation. All Rights Reserved.
  13:removeOffsetNoise.c **** ********************************************************************************
  14:removeOffsetNoise.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress)
  15:removeOffsetNoise.c **** * and is protected by and subject to worldwide patent protection (United
  16:removeOffsetNoise.c **** * States and foreign), United States copyright laws and international treaty
  17:removeOffsetNoise.c **** * provisions. Cypress hereby grants to licensee a personal, non-exclusive,
  18:removeOffsetNoise.c **** * non-transferable license to copy, use, modify, create derivative works of,
  19:removeOffsetNoise.c **** * and compile the Cypress Source Code and derivative works for the sole
  20:removeOffsetNoise.c **** * purpose of creating custom software in support of licensee product to be
  21:removeOffsetNoise.c **** * used only in conjunction with a Cypress integrated circuit as specified in
  22:removeOffsetNoise.c **** * the applicable agreement. Any reproduction, modification, translation,
  23:removeOffsetNoise.c **** * compilation, or representation of this software except as specified above 
  24:removeOffsetNoise.c **** * is prohibited without the express written permission of Cypress.
  25:removeOffsetNoise.c **** *
  26:removeOffsetNoise.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH 
  27:removeOffsetNoise.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  28:removeOffsetNoise.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:removeOffsetNoise.c **** * Cypress reserves the right to make changes without further notice to the 
  30:removeOffsetNoise.c **** * materials described herein. Cypress does not assume any liability arising out 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 2


  31:removeOffsetNoise.c **** * of the application or use of any product or circuit described herein. Cypress 
  32:removeOffsetNoise.c **** * does not authorize its products for use as critical components in life-support 
  33:removeOffsetNoise.c **** * systems where a malfunction or failure may reasonably be expected to result in 
  34:removeOffsetNoise.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:removeOffsetNoise.c **** * support systems application implies that the manufacturer assumes all risk of 
  36:removeOffsetNoise.c **** * such use and in doing so indemnifies Cypress against all charges. 
  37:removeOffsetNoise.c **** *
  38:removeOffsetNoise.c **** * Use of this Software may be limited by and subject to the applicable Cypress
  39:removeOffsetNoise.c **** * software license agreement. 
  40:removeOffsetNoise.c **** *******************************************************************************/
  41:removeOffsetNoise.c **** #include "removeOffsetNoise.h"
  42:removeOffsetNoise.c **** #include "measurement.h"
  43:removeOffsetNoise.c **** #include <device.h>
  44:removeOffsetNoise.c **** 
  45:removeOffsetNoise.c **** /*******************************************************************************
  46:removeOffsetNoise.c **** *  Function Name: FilterSignal
  47:removeOffsetNoise.c **** ********************************************************************************
  48:removeOffsetNoise.c **** * Summary:
  49:removeOffsetNoise.c **** *  This is IIR filter to process the sampled ADC data. For first sample passed 
  50:removeOffsetNoise.c **** *  the function simply returns the passed ADC sample. for second sample onwards,
  51:removeOffsetNoise.c **** *  Fraction of input signal based upon the filter coefficient, is calculated and 
  52:removeOffsetNoise.c **** *  added to the previously stored filtered value.
  53:removeOffsetNoise.c **** *
  54:removeOffsetNoise.c **** * Parameters:
  55:removeOffsetNoise.c **** * (int32)  ADCSample       - ADC sample read for given signal
  56:removeOffsetNoise.c **** * (uint8)  Sensor		   - Sensor to be Filtered
  57:removeOffsetNoise.c **** *
  58:removeOffsetNoise.c **** * Return: 
  59:removeOffsetNoise.c **** * (int32)filValueRounded - filtered value passed is updated after applying 
  60:removeOffsetNoise.c **** * IIR filter to the ADC sample.
  61:removeOffsetNoise.c **** *
  62:removeOffsetNoise.c **** * Theory:
  63:removeOffsetNoise.c **** * For more information on the IIR filter please refer to Cypress application
  64:removeOffsetNoise.c **** * note AN2099.
  65:removeOffsetNoise.c **** *
  66:removeOffsetNoise.c **** * Side Effects:
  67:removeOffsetNoise.c **** * None
  68:removeOffsetNoise.c **** *******************************************************************************/
  69:removeOffsetNoise.c **** int32 FilterSignal(int32 ADCSample, uint8 sensor)
  70:removeOffsetNoise.c **** {
  28              		.loc 1 70 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              		.cfi_def_cfa_offset 24
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 0B46     		mov	r3, r1
  42 000a FB70     		strb	r3, [r7, #3]
  71:removeOffsetNoise.c **** 	/* Running filtered value accumulator */
  72:removeOffsetNoise.c **** 	static int32 filteredValue[NUM_SENSORS] = {0,0};
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 3


  73:removeOffsetNoise.c **** 	
  74:removeOffsetNoise.c **** 	/* Filtered value rounded-off to 20-bits */
  75:removeOffsetNoise.c **** 	int32 filValueRounded;
  76:removeOffsetNoise.c **** 	
  77:removeOffsetNoise.c **** 	/* Left shift input by MAX_FILTER_COEFF_SHIFT to allow divisions up to MAX_FILTER_COEFF_SHIFT */
  78:removeOffsetNoise.c **** 	ADCSample <<= MAX_FILTER_COEFF_SHIFT;
  43              		.loc 1 78 0
  44 000c 7B68     		ldr	r3, [r7, #4]
  45 000e 1B02     		lsls	r3, r3, #8
  46 0010 7B60     		str	r3, [r7, #4]
  79:removeOffsetNoise.c **** 	   
  80:removeOffsetNoise.c **** 	/* Pass the filter input as it is for fast changes in input */
  81:removeOffsetNoise.c ****     if ( (ADCSample > (filteredValue[sensor] + FILTER_FEEDFORWARD)) || (ADCSample < (filteredValue[
  47              		.loc 1 81 0
  48 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  49 0014 174A     		ldr	r2, .L6
  50 0016 52F82330 		ldr	r3, [r2, r3, lsl #2]
  51 001a 03F54852 		add	r2, r3, #12800
  52 001e 7B68     		ldr	r3, [r7, #4]
  53 0020 9A42     		cmp	r2, r3
  54 0022 08DB     		blt	.L2
  55              		.loc 1 81 0 is_stmt 0 discriminator 1
  56 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  57 0026 134A     		ldr	r2, .L6
  58 0028 52F82330 		ldr	r3, [r2, r3, lsl #2]
  59 002c A3F54852 		sub	r2, r3, #12800
  60 0030 7B68     		ldr	r3, [r7, #4]
  61 0032 9A42     		cmp	r2, r3
  62 0034 05DD     		ble	.L3
  63              	.L2:
  82:removeOffsetNoise.c ****     {
  83:removeOffsetNoise.c ****         filteredValue[sensor] = ADCSample;
  64              		.loc 1 83 0 is_stmt 1
  65 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  66 0038 0E49     		ldr	r1, .L6
  67 003a 7A68     		ldr	r2, [r7, #4]
  68 003c 41F82320 		str	r2, [r1, r3, lsl #2]
  69 0040 04E0     		b	.L4
  70              	.L3:
  84:removeOffsetNoise.c ****     }
  85:removeOffsetNoise.c ****     
  86:removeOffsetNoise.c ****     /* If not the first sample then based on filter coefficient, filter the 
  87:removeOffsetNoise.c ****      * input signal */
  88:removeOffsetNoise.c ****     else
  89:removeOffsetNoise.c ****     {
  90:removeOffsetNoise.c **** 		/* IIR filter */
  91:removeOffsetNoise.c **** 		filteredValue[sensor] = filteredValue[sensor] + ((ADCSample - filteredValue[sensor]) >> RTD_FILTE
  71              		.loc 1 91 0
  72 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  73 0044 0B49     		ldr	r1, .L6
  74 0046 7A68     		ldr	r2, [r7, #4]
  75 0048 41F82320 		str	r2, [r1, r3, lsl #2]
  76              	.L4:
  92:removeOffsetNoise.c **** 	}
  93:removeOffsetNoise.c **** 	
  94:removeOffsetNoise.c **** 	/* Compensate filter result for  left shift of 8 and round off */
  95:removeOffsetNoise.c **** 	filValueRounded = (filteredValue[sensor] >> MAX_FILTER_COEFF_SHIFT) + ((filteredValue[sensor] & 0x
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 4


  77              		.loc 1 95 0
  78 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  79 004e 094A     		ldr	r2, .L6
  80 0050 52F82330 		ldr	r3, [r2, r3, lsl #2]
  81 0054 1A12     		asrs	r2, r3, #8
  82 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  83 0058 0649     		ldr	r1, .L6
  84 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
  85 005e DB11     		asrs	r3, r3, #7
  86 0060 03F00103 		and	r3, r3, #1
  87 0064 1344     		add	r3, r3, r2
  88 0066 FB60     		str	r3, [r7, #12]
  96:removeOffsetNoise.c **** 	
  97:removeOffsetNoise.c ****     return filValueRounded;
  89              		.loc 1 97 0
  90 0068 FB68     		ldr	r3, [r7, #12]
  98:removeOffsetNoise.c **** }
  91              		.loc 1 98 0
  92 006a 1846     		mov	r0, r3
  93 006c 1437     		adds	r7, r7, #20
  94              		.cfi_def_cfa_offset 4
  95 006e BD46     		mov	sp, r7
  96              		.cfi_def_cfa_register 13
  97              		@ sp needed
  98 0070 80BC     		pop	{r7}
  99              		.cfi_restore 7
 100              		.cfi_def_cfa_offset 0
 101 0072 7047     		bx	lr
 102              	.L7:
 103              		.align	2
 104              	.L6:
 105 0074 00000000 		.word	filteredValue.6327
 106              		.cfi_endproc
 107              	.LFE63:
 108              		.size	FilterSignal, .-FilterSignal
 109              		.section	.text.GetOffset,"ax",%progbits
 110              		.align	2
 111              		.global	GetOffset
 112              		.thumb
 113              		.thumb_func
 114              		.type	GetOffset, %function
 115              	GetOffset:
 116              	.LFB64:
  99:removeOffsetNoise.c **** 
 100:removeOffsetNoise.c **** /*******************************************************************************
 101:removeOffsetNoise.c **** *  Function Name: GetOffset
 102:removeOffsetNoise.c **** ********************************************************************************
 103:removeOffsetNoise.c **** * Summary:
 104:removeOffsetNoise.c **** * This function shorts the inputs of the ADC together and reads the offset. 
 105:removeOffsetNoise.c **** *
 106:removeOffsetNoise.c **** * Parameters:
 107:removeOffsetNoise.c **** * void:
 108:removeOffsetNoise.c **** *
 109:removeOffsetNoise.c **** * Return:
 110:removeOffsetNoise.c **** * int32: result (offset value).
 111:removeOffsetNoise.c **** *
 112:removeOffsetNoise.c **** * Theory:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 5


 113:removeOffsetNoise.c **** *
 114:removeOffsetNoise.c **** * Side Effects:
 115:removeOffsetNoise.c **** * None
 116:removeOffsetNoise.c **** *******************************************************************************/
 117:removeOffsetNoise.c **** int32 GetOffset(void)
 118:removeOffsetNoise.c **** {
 117              		.loc 1 118 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 8
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122 0000 80B4     		push	{r7}
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 7, -4
 125 0002 83B0     		sub	sp, sp, #12
 126              		.cfi_def_cfa_offset 16
 127 0004 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
 119:removeOffsetNoise.c **** 	int32 result;
 120:removeOffsetNoise.c **** 
 121:removeOffsetNoise.c ****   	/*Select the MUX channel and Measure the offset voltage*/	
 122:removeOffsetNoise.c **** 	//AMux_FastSelect(AMUX_1_CDS);
 123:removeOffsetNoise.c ****     //ADC_StartConvert();
 124:removeOffsetNoise.c **** 	//ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 125:removeOffsetNoise.c **** 	//result = ADC_GetResult32();
 126:removeOffsetNoise.c **** 
 127:removeOffsetNoise.c ****     return result;
 129              		.loc 1 127 0
 130 0006 7B68     		ldr	r3, [r7, #4]
 128:removeOffsetNoise.c **** }
 131              		.loc 1 128 0
 132 0008 1846     		mov	r0, r3
 133 000a 0C37     		adds	r7, r7, #12
 134              		.cfi_def_cfa_offset 4
 135 000c BD46     		mov	sp, r7
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 000e 80BC     		pop	{r7}
 139              		.cfi_restore 7
 140              		.cfi_def_cfa_offset 0
 141 0010 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE64:
 144              		.size	GetOffset, .-GetOffset
 145 0012 00BF     		.bss
 146              		.align	2
 147              	filteredValue.6327:
 148 0000 00000000 		.space	8
 148      00000000 
 149              		.text
 150              	.Letext0:
 151              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 152              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 153              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 154              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 155              		.section	.debug_info,"",%progbits
 156              	.Ldebug_info0:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 6


 157 0000 57010000 		.4byte	0x157
 158 0004 0400     		.2byte	0x4
 159 0006 00000000 		.4byte	.Ldebug_abbrev0
 160 000a 04       		.byte	0x4
 161 000b 01       		.uleb128 0x1
 162 000c 8B000000 		.4byte	.LASF25
 163 0010 0C       		.byte	0xc
 164 0011 8A010000 		.4byte	.LASF26
 165 0015 A4010000 		.4byte	.LASF27
 166 0019 00000000 		.4byte	.Ldebug_ranges0+0
 167 001d 00000000 		.4byte	0
 168 0021 00000000 		.4byte	.Ldebug_line0
 169 0025 02       		.uleb128 0x2
 170 0026 01       		.byte	0x1
 171 0027 06       		.byte	0x6
 172 0028 68010000 		.4byte	.LASF0
 173 002c 02       		.uleb128 0x2
 174 002d 01       		.byte	0x1
 175 002e 08       		.byte	0x8
 176 002f 27010000 		.4byte	.LASF1
 177 0033 02       		.uleb128 0x2
 178 0034 02       		.byte	0x2
 179 0035 05       		.byte	0x5
 180 0036 1C020000 		.4byte	.LASF2
 181 003a 02       		.uleb128 0x2
 182 003b 02       		.byte	0x2
 183 003c 07       		.byte	0x7
 184 003d 0E000000 		.4byte	.LASF3
 185 0041 03       		.uleb128 0x3
 186 0042 80010000 		.4byte	.LASF9
 187 0046 02       		.byte	0x2
 188 0047 3F       		.byte	0x3f
 189 0048 4C000000 		.4byte	0x4c
 190 004c 02       		.uleb128 0x2
 191 004d 04       		.byte	0x4
 192 004e 05       		.byte	0x5
 193 004f 52010000 		.4byte	.LASF4
 194 0053 02       		.uleb128 0x2
 195 0054 04       		.byte	0x4
 196 0055 07       		.byte	0x7
 197 0056 51000000 		.4byte	.LASF5
 198 005a 02       		.uleb128 0x2
 199 005b 08       		.byte	0x8
 200 005c 05       		.byte	0x5
 201 005d 00000000 		.4byte	.LASF6
 202 0061 02       		.uleb128 0x2
 203 0062 08       		.byte	0x8
 204 0063 07       		.byte	0x7
 205 0064 63000000 		.4byte	.LASF7
 206 0068 04       		.uleb128 0x4
 207 0069 04       		.byte	0x4
 208 006a 05       		.byte	0x5
 209 006b 696E7400 		.ascii	"int\000"
 210 006f 02       		.uleb128 0x2
 211 0070 04       		.byte	0x4
 212 0071 07       		.byte	0x7
 213 0072 21000000 		.4byte	.LASF8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 7


 214 0076 03       		.uleb128 0x3
 215 0077 26020000 		.4byte	.LASF10
 216 007b 03       		.byte	0x3
 217 007c 2C       		.byte	0x2c
 218 007d 41000000 		.4byte	0x41
 219 0081 05       		.uleb128 0x5
 220 0082 4B000000 		.4byte	.LASF11
 221 0086 04       		.byte	0x4
 222 0087 E901     		.2byte	0x1e9
 223 0089 2C000000 		.4byte	0x2c
 224 008d 05       		.uleb128 0x5
 225 008e 37020000 		.4byte	.LASF12
 226 0092 04       		.byte	0x4
 227 0093 EE01     		.2byte	0x1ee
 228 0095 4C000000 		.4byte	0x4c
 229 0099 02       		.uleb128 0x2
 230 009a 04       		.byte	0x4
 231 009b 04       		.byte	0x4
 232 009c 9E010000 		.4byte	.LASF13
 233 00a0 02       		.uleb128 0x2
 234 00a1 08       		.byte	0x8
 235 00a2 04       		.byte	0x4
 236 00a3 4B010000 		.4byte	.LASF14
 237 00a7 02       		.uleb128 0x2
 238 00a8 01       		.byte	0x1
 239 00a9 08       		.byte	0x8
 240 00aa 35010000 		.4byte	.LASF15
 241 00ae 02       		.uleb128 0x2
 242 00af 08       		.byte	0x8
 243 00b0 04       		.byte	0x4
 244 00b1 74010000 		.4byte	.LASF16
 245 00b5 02       		.uleb128 0x2
 246 00b6 04       		.byte	0x4
 247 00b7 07       		.byte	0x7
 248 00b8 2E020000 		.4byte	.LASF17
 249 00bc 06       		.uleb128 0x6
 250 00bd 3E000000 		.4byte	.LASF22
 251 00c1 01       		.byte	0x1
 252 00c2 45       		.byte	0x45
 253 00c3 8D000000 		.4byte	0x8d
 254 00c7 00000000 		.4byte	.LFB63
 255 00cb 78000000 		.4byte	.LFE63-.LFB63
 256 00cf 01       		.uleb128 0x1
 257 00d0 9C       		.byte	0x9c
 258 00d1 11010000 		.4byte	0x111
 259 00d5 07       		.uleb128 0x7
 260 00d6 41010000 		.4byte	.LASF18
 261 00da 01       		.byte	0x1
 262 00db 45       		.byte	0x45
 263 00dc 8D000000 		.4byte	0x8d
 264 00e0 02       		.uleb128 0x2
 265 00e1 91       		.byte	0x91
 266 00e2 6C       		.sleb128 -20
 267 00e3 07       		.uleb128 0x7
 268 00e4 84000000 		.4byte	.LASF19
 269 00e8 01       		.byte	0x1
 270 00e9 45       		.byte	0x45
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 8


 271 00ea 81000000 		.4byte	0x81
 272 00ee 02       		.uleb128 0x2
 273 00ef 91       		.byte	0x91
 274 00f0 6B       		.sleb128 -21
 275 00f1 08       		.uleb128 0x8
 276 00f2 19010000 		.4byte	.LASF20
 277 00f6 01       		.byte	0x1
 278 00f7 48       		.byte	0x48
 279 00f8 11010000 		.4byte	0x111
 280 00fc 05       		.uleb128 0x5
 281 00fd 03       		.byte	0x3
 282 00fe 00000000 		.4byte	filteredValue.6327
 283 0102 08       		.uleb128 0x8
 284 0103 2E000000 		.4byte	.LASF21
 285 0107 01       		.byte	0x1
 286 0108 4B       		.byte	0x4b
 287 0109 8D000000 		.4byte	0x8d
 288 010d 02       		.uleb128 0x2
 289 010e 91       		.byte	0x91
 290 010f 74       		.sleb128 -12
 291 0110 00       		.byte	0
 292 0111 09       		.uleb128 0x9
 293 0112 8D000000 		.4byte	0x8d
 294 0116 21010000 		.4byte	0x121
 295 011a 0A       		.uleb128 0xa
 296 011b B5000000 		.4byte	0xb5
 297 011f 01       		.byte	0x1
 298 0120 00       		.byte	0
 299 0121 06       		.uleb128 0x6
 300 0122 7A000000 		.4byte	.LASF23
 301 0126 01       		.byte	0x1
 302 0127 75       		.byte	0x75
 303 0128 8D000000 		.4byte	0x8d
 304 012c 00000000 		.4byte	.LFB64
 305 0130 12000000 		.4byte	.LFE64-.LFB64
 306 0134 01       		.uleb128 0x1
 307 0135 9C       		.byte	0x9c
 308 0136 49010000 		.4byte	0x149
 309 013a 08       		.uleb128 0x8
 310 013b 3A010000 		.4byte	.LASF24
 311 013f 01       		.byte	0x1
 312 0140 77       		.byte	0x77
 313 0141 8D000000 		.4byte	0x8d
 314 0145 02       		.uleb128 0x2
 315 0146 91       		.byte	0x91
 316 0147 74       		.sleb128 -12
 317 0148 00       		.byte	0
 318 0149 0B       		.uleb128 0xb
 319 014a 5B010000 		.4byte	.LASF28
 320 014e 05       		.byte	0x5
 321 014f 1207     		.2byte	0x712
 322 0151 55010000 		.4byte	0x155
 323 0155 0C       		.uleb128 0xc
 324 0156 76000000 		.4byte	0x76
 325 015a 00       		.byte	0
 326              		.section	.debug_abbrev,"",%progbits
 327              	.Ldebug_abbrev0:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 9


 328 0000 01       		.uleb128 0x1
 329 0001 11       		.uleb128 0x11
 330 0002 01       		.byte	0x1
 331 0003 25       		.uleb128 0x25
 332 0004 0E       		.uleb128 0xe
 333 0005 13       		.uleb128 0x13
 334 0006 0B       		.uleb128 0xb
 335 0007 03       		.uleb128 0x3
 336 0008 0E       		.uleb128 0xe
 337 0009 1B       		.uleb128 0x1b
 338 000a 0E       		.uleb128 0xe
 339 000b 55       		.uleb128 0x55
 340 000c 17       		.uleb128 0x17
 341 000d 11       		.uleb128 0x11
 342 000e 01       		.uleb128 0x1
 343 000f 10       		.uleb128 0x10
 344 0010 17       		.uleb128 0x17
 345 0011 00       		.byte	0
 346 0012 00       		.byte	0
 347 0013 02       		.uleb128 0x2
 348 0014 24       		.uleb128 0x24
 349 0015 00       		.byte	0
 350 0016 0B       		.uleb128 0xb
 351 0017 0B       		.uleb128 0xb
 352 0018 3E       		.uleb128 0x3e
 353 0019 0B       		.uleb128 0xb
 354 001a 03       		.uleb128 0x3
 355 001b 0E       		.uleb128 0xe
 356 001c 00       		.byte	0
 357 001d 00       		.byte	0
 358 001e 03       		.uleb128 0x3
 359 001f 16       		.uleb128 0x16
 360 0020 00       		.byte	0
 361 0021 03       		.uleb128 0x3
 362 0022 0E       		.uleb128 0xe
 363 0023 3A       		.uleb128 0x3a
 364 0024 0B       		.uleb128 0xb
 365 0025 3B       		.uleb128 0x3b
 366 0026 0B       		.uleb128 0xb
 367 0027 49       		.uleb128 0x49
 368 0028 13       		.uleb128 0x13
 369 0029 00       		.byte	0
 370 002a 00       		.byte	0
 371 002b 04       		.uleb128 0x4
 372 002c 24       		.uleb128 0x24
 373 002d 00       		.byte	0
 374 002e 0B       		.uleb128 0xb
 375 002f 0B       		.uleb128 0xb
 376 0030 3E       		.uleb128 0x3e
 377 0031 0B       		.uleb128 0xb
 378 0032 03       		.uleb128 0x3
 379 0033 08       		.uleb128 0x8
 380 0034 00       		.byte	0
 381 0035 00       		.byte	0
 382 0036 05       		.uleb128 0x5
 383 0037 16       		.uleb128 0x16
 384 0038 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 10


 385 0039 03       		.uleb128 0x3
 386 003a 0E       		.uleb128 0xe
 387 003b 3A       		.uleb128 0x3a
 388 003c 0B       		.uleb128 0xb
 389 003d 3B       		.uleb128 0x3b
 390 003e 05       		.uleb128 0x5
 391 003f 49       		.uleb128 0x49
 392 0040 13       		.uleb128 0x13
 393 0041 00       		.byte	0
 394 0042 00       		.byte	0
 395 0043 06       		.uleb128 0x6
 396 0044 2E       		.uleb128 0x2e
 397 0045 01       		.byte	0x1
 398 0046 3F       		.uleb128 0x3f
 399 0047 19       		.uleb128 0x19
 400 0048 03       		.uleb128 0x3
 401 0049 0E       		.uleb128 0xe
 402 004a 3A       		.uleb128 0x3a
 403 004b 0B       		.uleb128 0xb
 404 004c 3B       		.uleb128 0x3b
 405 004d 0B       		.uleb128 0xb
 406 004e 27       		.uleb128 0x27
 407 004f 19       		.uleb128 0x19
 408 0050 49       		.uleb128 0x49
 409 0051 13       		.uleb128 0x13
 410 0052 11       		.uleb128 0x11
 411 0053 01       		.uleb128 0x1
 412 0054 12       		.uleb128 0x12
 413 0055 06       		.uleb128 0x6
 414 0056 40       		.uleb128 0x40
 415 0057 18       		.uleb128 0x18
 416 0058 9742     		.uleb128 0x2117
 417 005a 19       		.uleb128 0x19
 418 005b 01       		.uleb128 0x1
 419 005c 13       		.uleb128 0x13
 420 005d 00       		.byte	0
 421 005e 00       		.byte	0
 422 005f 07       		.uleb128 0x7
 423 0060 05       		.uleb128 0x5
 424 0061 00       		.byte	0
 425 0062 03       		.uleb128 0x3
 426 0063 0E       		.uleb128 0xe
 427 0064 3A       		.uleb128 0x3a
 428 0065 0B       		.uleb128 0xb
 429 0066 3B       		.uleb128 0x3b
 430 0067 0B       		.uleb128 0xb
 431 0068 49       		.uleb128 0x49
 432 0069 13       		.uleb128 0x13
 433 006a 02       		.uleb128 0x2
 434 006b 18       		.uleb128 0x18
 435 006c 00       		.byte	0
 436 006d 00       		.byte	0
 437 006e 08       		.uleb128 0x8
 438 006f 34       		.uleb128 0x34
 439 0070 00       		.byte	0
 440 0071 03       		.uleb128 0x3
 441 0072 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 11


 442 0073 3A       		.uleb128 0x3a
 443 0074 0B       		.uleb128 0xb
 444 0075 3B       		.uleb128 0x3b
 445 0076 0B       		.uleb128 0xb
 446 0077 49       		.uleb128 0x49
 447 0078 13       		.uleb128 0x13
 448 0079 02       		.uleb128 0x2
 449 007a 18       		.uleb128 0x18
 450 007b 00       		.byte	0
 451 007c 00       		.byte	0
 452 007d 09       		.uleb128 0x9
 453 007e 01       		.uleb128 0x1
 454 007f 01       		.byte	0x1
 455 0080 49       		.uleb128 0x49
 456 0081 13       		.uleb128 0x13
 457 0082 01       		.uleb128 0x1
 458 0083 13       		.uleb128 0x13
 459 0084 00       		.byte	0
 460 0085 00       		.byte	0
 461 0086 0A       		.uleb128 0xa
 462 0087 21       		.uleb128 0x21
 463 0088 00       		.byte	0
 464 0089 49       		.uleb128 0x49
 465 008a 13       		.uleb128 0x13
 466 008b 2F       		.uleb128 0x2f
 467 008c 0B       		.uleb128 0xb
 468 008d 00       		.byte	0
 469 008e 00       		.byte	0
 470 008f 0B       		.uleb128 0xb
 471 0090 34       		.uleb128 0x34
 472 0091 00       		.byte	0
 473 0092 03       		.uleb128 0x3
 474 0093 0E       		.uleb128 0xe
 475 0094 3A       		.uleb128 0x3a
 476 0095 0B       		.uleb128 0xb
 477 0096 3B       		.uleb128 0x3b
 478 0097 05       		.uleb128 0x5
 479 0098 49       		.uleb128 0x49
 480 0099 13       		.uleb128 0x13
 481 009a 3F       		.uleb128 0x3f
 482 009b 19       		.uleb128 0x19
 483 009c 3C       		.uleb128 0x3c
 484 009d 19       		.uleb128 0x19
 485 009e 00       		.byte	0
 486 009f 00       		.byte	0
 487 00a0 0C       		.uleb128 0xc
 488 00a1 35       		.uleb128 0x35
 489 00a2 00       		.byte	0
 490 00a3 49       		.uleb128 0x49
 491 00a4 13       		.uleb128 0x13
 492 00a5 00       		.byte	0
 493 00a6 00       		.byte	0
 494 00a7 00       		.byte	0
 495              		.section	.debug_aranges,"",%progbits
 496 0000 24000000 		.4byte	0x24
 497 0004 0200     		.2byte	0x2
 498 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 12


 499 000a 04       		.byte	0x4
 500 000b 00       		.byte	0
 501 000c 0000     		.2byte	0
 502 000e 0000     		.2byte	0
 503 0010 00000000 		.4byte	.LFB63
 504 0014 78000000 		.4byte	.LFE63-.LFB63
 505 0018 00000000 		.4byte	.LFB64
 506 001c 12000000 		.4byte	.LFE64-.LFB64
 507 0020 00000000 		.4byte	0
 508 0024 00000000 		.4byte	0
 509              		.section	.debug_ranges,"",%progbits
 510              	.Ldebug_ranges0:
 511 0000 00000000 		.4byte	.LFB63
 512 0004 78000000 		.4byte	.LFE63
 513 0008 00000000 		.4byte	.LFB64
 514 000c 12000000 		.4byte	.LFE64
 515 0010 00000000 		.4byte	0
 516 0014 00000000 		.4byte	0
 517              		.section	.debug_line,"",%progbits
 518              	.Ldebug_line0:
 519 0000 91010000 		.section	.debug_str,"MS",%progbits,1
 519      02005901 
 519      00000201 
 519      FB0E0D00 
 519      01010101 
 520              	.LASF6:
 521 0000 6C6F6E67 		.ascii	"long long int\000"
 521      206C6F6E 
 521      6720696E 
 521      7400
 522              	.LASF3:
 523 000e 73686F72 		.ascii	"short unsigned int\000"
 523      7420756E 
 523      7369676E 
 523      65642069 
 523      6E7400
 524              	.LASF8:
 525 0021 756E7369 		.ascii	"unsigned int\000"
 525      676E6564 
 525      20696E74 
 525      00
 526              	.LASF21:
 527 002e 66696C56 		.ascii	"filValueRounded\000"
 527      616C7565 
 527      526F756E 
 527      64656400 
 528              	.LASF22:
 529 003e 46696C74 		.ascii	"FilterSignal\000"
 529      65725369 
 529      676E616C 
 529      00
 530              	.LASF11:
 531 004b 75696E74 		.ascii	"uint8\000"
 531      3800
 532              	.LASF5:
 533 0051 6C6F6E67 		.ascii	"long unsigned int\000"
 533      20756E73 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 13


 533      69676E65 
 533      6420696E 
 533      7400
 534              	.LASF7:
 535 0063 6C6F6E67 		.ascii	"long long unsigned int\000"
 535      206C6F6E 
 535      6720756E 
 535      7369676E 
 535      65642069 
 536              	.LASF23:
 537 007a 4765744F 		.ascii	"GetOffset\000"
 537      66667365 
 537      7400
 538              	.LASF19:
 539 0084 73656E73 		.ascii	"sensor\000"
 539      6F7200
 540              	.LASF25:
 541 008b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 541      43313120 
 541      352E342E 
 541      31203230 
 541      31363036 
 542 00be 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 542      20726576 
 542      6973696F 
 542      6E203233 
 542      37373135 
 543 00f1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 543      66756E63 
 543      74696F6E 
 543      2D736563 
 543      74696F6E 
 544              	.LASF20:
 545 0119 66696C74 		.ascii	"filteredValue\000"
 545      65726564 
 545      56616C75 
 545      6500
 546              	.LASF1:
 547 0127 756E7369 		.ascii	"unsigned char\000"
 547      676E6564 
 547      20636861 
 547      7200
 548              	.LASF15:
 549 0135 63686172 		.ascii	"char\000"
 549      00
 550              	.LASF24:
 551 013a 72657375 		.ascii	"result\000"
 551      6C7400
 552              	.LASF18:
 553 0141 41444353 		.ascii	"ADCSample\000"
 553      616D706C 
 553      6500
 554              	.LASF14:
 555 014b 646F7562 		.ascii	"double\000"
 555      6C6500
 556              	.LASF4:
 557 0152 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 14


 557      20696E74 
 557      00
 558              	.LASF28:
 559 015b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 559      52784275 
 559      66666572 
 559      00
 560              	.LASF0:
 561 0168 7369676E 		.ascii	"signed char\000"
 561      65642063 
 561      68617200 
 562              	.LASF16:
 563 0174 6C6F6E67 		.ascii	"long double\000"
 563      20646F75 
 563      626C6500 
 564              	.LASF9:
 565 0180 5F5F696E 		.ascii	"__int32_t\000"
 565      7433325F 
 565      7400
 566              	.LASF26:
 567 018a 72656D6F 		.ascii	"removeOffsetNoise.c\000"
 567      76654F66 
 567      66736574 
 567      4E6F6973 
 567      652E6300 
 568              	.LASF13:
 569 019e 666C6F61 		.ascii	"float\000"
 569      7400
 570              	.LASF27:
 571 01a4 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 571      73657273 
 571      5C4A6566 
 571      66536E79 
 571      6465725C 
 572 01d2 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb\\CE210514_P"
 572      355F656C 
 572      65637472 
 572      6F737465 
 572      656C5F73 
 573 0204 534F4333 		.ascii	"SOC3_5_Thermistor.cydsn\000"
 573      5F355F54 
 573      6865726D 
 573      6973746F 
 573      722E6379 
 574              	.LASF2:
 575 021c 73686F72 		.ascii	"short int\000"
 575      7420696E 
 575      7400
 576              	.LASF10:
 577 0226 696E7433 		.ascii	"int32_t\000"
 577      325F7400 
 578              	.LASF17:
 579 022e 73697A65 		.ascii	"sizetype\000"
 579      74797065 
 579      00
 580              	.LASF12:
 581 0237 696E7433 		.ascii	"int32\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccVhBgE8.s 			page 15


 581      3200
 582              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
