ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	stringCapSensorsOnOff,1,4
  20              		.comm	stringCapSensorsRaw,16,4
  21              		.global	thresholdArray
  22              		.data
  23              		.align	2
  24              		.type	thresholdArray, %object
  25              		.size	thresholdArray, 12
  26              	thresholdArray:
  27 0000 0F       		.byte	15
  28 0001 0F       		.byte	15
  29 0002 0F       		.byte	15
  30 0003 0F       		.byte	15
  31 0004 0F       		.byte	15
  32 0005 0F       		.byte	15
  33 0006 0F       		.byte	15
  34 0007 0F       		.byte	15
  35 0008 0F       		.byte	15
  36 0009 0F       		.byte	15
  37 000a 0F       		.byte	15
  38 000b 0F       		.byte	15
  39              		.comm	barArray,8,4
  40              		.comm	touchArray,4,4
  41              		.comm	linearPotValue32Bit,8,4
  42              		.global	i
  43              		.bss
  44              		.type	i, %object
  45              		.size	i, 1
  46              	i:
  47 0000 00       		.space	1
  48              		.global	counter
  49              		.type	counter, %object
  50              		.size	counter, 1
  51              	counter:
  52 0001 00       		.space	1
  53              		.comm	temper,4,4
  54              		.section	.text.button_press_ISR,"ax",%progbits
  55              		.align	2
  56              		.global	button_press_ISR
  57              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 2


  58              		.thumb_func
  59              		.type	button_press_ISR, %function
  60              	button_press_ISR:
  61              	.LFB64:
  62              		.file 1 "main.c"
   1:main.c        **** /*****************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 3.0
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *   
   8:main.c        **** * 
   9:main.c        **** * Note:
  10:main.c        **** * 	The main project includes the ADC and other components required for the
  11:main.c        **** *   temperature measurement. The Thermistor component is a complete firmware component
  12:main.c        **** *   as decribed in the component datahseet and application note
  13:main.c        **** ******************************************************************************
  14:main.c        **** * Copyright (C) 2015, Cypress Semiconductor Corporation.
  15:main.c        **** ******************************************************************************
  16:main.c        **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:main.c        **** * protected by and subject to worldwide patent protection (United States and
  18:main.c        **** * foreign), United States copyright laws and international treaty provisions.
  19:main.c        **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:main.c        **** * license to copy, use, modify, create derivative works of, and compile the
  21:main.c        **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:main.c        **** * custom software in support of licensee product to be used only in conjunction
  23:main.c        **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:main.c        **** * Any reproduction, modification, translation, compilation, or representation of
  25:main.c        **** * this software except as specified above is prohibited without the express
  26:main.c        **** * written permission of Cypress.
  27:main.c        **** *
  28:main.c        **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:main.c        **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:main.c        **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:main.c        **** * Cypress reserves the right to make changes without further notice to the
  32:main.c        **** * materials described herein. Cypress does not assume any liability arising out
  33:main.c        **** * of the application or use of any product or circuit described herein. Cypress
  34:main.c        **** * does not authorize its products for use as critical components in life-support
  35:main.c        **** * systems where a malfunction or failure may reasonably be expected to result in
  36:main.c        **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:main.c        **** * support systems application implies that the manufacturer assumes all risk of
  38:main.c        **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:main.c        **** * limited by and subject to the applicable Cypress software license agreement.
  40:main.c        **** *****************************************************************************/
  41:main.c        **** #include <device.h>
  42:main.c        **** #include "removeOffsetNoise.h"
  43:main.c        **** #include "measurement.h"
  44:main.c        **** #include <stdio.h>
  45:main.c        **** 
  46:main.c        **** #define REFERENCE_RESISTOR 20000
  47:main.c        **** 
  48:main.c        **** #define barBufferSize 8
  49:main.c        **** #define touchBufferSize 4
  50:main.c        **** 
  51:main.c        **** 
  52:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 3


  53:main.c        **** uint8_t stringCapSensorsOnOff[1];
  54:main.c        **** uint8_t stringCapSensorsRaw[16];
  55:main.c        **** uint8_t thresholdArray[12] = {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15};
  56:main.c        **** uint8 barArray[barBufferSize];
  57:main.c        **** uint8 touchArray[touchBufferSize];
  58:main.c        **** int32_t linearPotValue32Bit[2];
  59:main.c        **** uint8_t i = 0;
  60:main.c        **** uint8_t counter = 0;
  61:main.c        **** int32_t temper;
  62:main.c        **** void scanLinearResistor(uint8_t channel);
  63:main.c        **** 
  64:main.c        **** 
  65:main.c        **** CY_ISR(button_press_ISR) {     /* No need to clear any interrupt source; interrupt component should
  63              		.loc 1 65 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0000 80B4     		push	{r7}
  69              		.cfi_def_cfa_offset 4
  70              		.cfi_offset 7, -4
  71 0002 00AF     		add	r7, sp, #0
  72              		.cfi_def_cfa_register 7
  66:main.c        ****  //FiltReg_Read(); 
  67:main.c        ****     //
  68:main.c        **** }
  73              		.loc 1 68 0
  74 0004 00BF     		nop
  75 0006 BD46     		mov	sp, r7
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
  78 0008 80BC     		pop	{r7}
  79              		.cfi_restore 7
  80              		.cfi_def_cfa_offset 0
  81 000a 7047     		bx	lr
  82              		.cfi_endproc
  83              	.LFE64:
  84              		.size	button_press_ISR, .-button_press_ISR
  85              		.comm	ADC_values,24,4
  86              		.section	.text.main,"ax",%progbits
  87              		.align	2
  88              		.global	main
  89              		.thumb
  90              		.thumb_func
  91              		.type	main, %function
  92              	main:
  93              	.LFB65:
  69:main.c        **** 
  70:main.c        **** uint16_t ADC_values[12];
  71:main.c        **** 
  72:main.c        **** int main(void)
  73:main.c        **** {
  94              		.loc 1 73 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 40
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 4


  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 8AB0     		sub	sp, sp, #40
 103              		.cfi_def_cfa_offset 48
 104 0004 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
  74:main.c        ****     
  75:main.c        **** 	char printBuf[16]={'\0'};
 106              		.loc 1 75 0
 107 0006 3B46     		mov	r3, r7
 108 0008 0022     		movs	r2, #0
 109 000a 1A60     		str	r2, [r3]
 110 000c 5A60     		str	r2, [r3, #4]
 111 000e 9A60     		str	r2, [r3, #8]
 112 0010 DA60     		str	r2, [r3, #12]
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** 	CYGlobalIntEnable; 
 113              		.loc 1 78 0
 114              		.syntax unified
 115              	@ 78 "main.c" 1
 116 0012 62B6     		CPSIE   i
 117              	@ 0 "" 2
  79:main.c        ****     IDAC8_1_Start();
 118              		.loc 1 79 0
 119              		.thumb
 120              		.syntax unified
 121 0014 FFF7FEFF 		bl	IDAC8_1_Start
  80:main.c        **** 	ADC_1_Start();
 122              		.loc 1 80 0
 123 0018 FFF7FEFF 		bl	ADC_1_Start
  81:main.c        **** 	AMux_1_Start();
 124              		.loc 1 81 0
 125 001c FFF7FEFF 		bl	AMux_1_Start
  82:main.c        ****     AMux_2_Start();
 126              		.loc 1 82 0
 127 0020 FFF7FEFF 		bl	AMux_2_Start
  83:main.c        **** 
  84:main.c        **** 
  85:main.c        ****     SPIM_1_Start();
 128              		.loc 1 85 0
 129 0024 FFF7FEFF 		bl	SPIM_1_Start
  86:main.c        ****     SPIM_2_Start();
 130              		.loc 1 86 0
 131 0028 FFF7FEFF 		bl	SPIM_2_Start
  87:main.c        ****     
  88:main.c        ****     CyDelay(2000);
 132              		.loc 1 88 0
 133 002c 4FF4FA60 		mov	r0, #2000
 134 0030 FFF7FEFF 		bl	CyDelay
  89:main.c        ****     CapSense_Start();     
 135              		.loc 1 89 0
 136 0034 FFF7FEFF 		bl	CapSense_Start
  90:main.c        ****     
  91:main.c        ****     CyDelay(500);
 137              		.loc 1 91 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 5


 138 0038 4FF4FA70 		mov	r0, #500
 139 003c FFF7FEFF 		bl	CyDelay
  92:main.c        ****     CapSense_InitializeAllBaselines();
 140              		.loc 1 92 0
 141 0040 FFF7FEFF 		bl	CapSense_InitializeAllBaselines
  93:main.c        ****     uint8_t myArrayCounter = 0;
 142              		.loc 1 93 0
 143 0044 0023     		movs	r3, #0
 144 0046 FB77     		strb	r3, [r7, #31]
  94:main.c        ****     
  95:main.c        ****     CapSense_ScanEnabledWidgets();  
 145              		.loc 1 95 0
 146 0048 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 147              	.L18:
 148              	.LBB2:
  96:main.c        **** 
  97:main.c        **** 
  98:main.c        **** 	for(;;)
  99:main.c        ****     {
 100:main.c        ****         CapSense_ClearSensors();
 149              		.loc 1 100 0
 150 004c FFF7FEFF 		bl	CapSense_ClearSensors
 101:main.c        ****         
 102:main.c        ****         for (i = 0; i < 2; i++)
 151              		.loc 1 102 0
 152 0050 944B     		ldr	r3, .L19
 153 0052 0022     		movs	r2, #0
 154 0054 1A70     		strb	r2, [r3]
 155 0056 0AE0     		b	.L3
 156              	.L4:
 103:main.c        ****         {
 104:main.c        ****            scanLinearResistor(i);
 157              		.loc 1 104 0 discriminator 3
 158 0058 924B     		ldr	r3, .L19
 159 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 160 005c 1846     		mov	r0, r3
 161 005e FFF7FEFF 		bl	scanLinearResistor
 102:main.c        ****         {
 162              		.loc 1 102 0 discriminator 3
 163 0062 904B     		ldr	r3, .L19
 164 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 165 0066 0133     		adds	r3, r3, #1
 166 0068 DAB2     		uxtb	r2, r3
 167 006a 8E4B     		ldr	r3, .L19
 168 006c 1A70     		strb	r2, [r3]
 169              	.L3:
 102:main.c        ****         {
 170              		.loc 1 102 0 is_stmt 0 discriminator 1
 171 006e 8D4B     		ldr	r3, .L19
 172 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173 0072 012B     		cmp	r3, #1
 174 0074 F0D9     		bls	.L4
 105:main.c        ****         }
 106:main.c        **** 
 107:main.c        **** 
 108:main.c        ****         uint8_t byteCounter = 0;
 175              		.loc 1 108 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 6


 176 0076 0023     		movs	r3, #0
 177 0078 BB77     		strb	r3, [r7, #30]
 109:main.c        **** 
 110:main.c        ****         CapSense_UpdateEnabledBaselines();
 178              		.loc 1 110 0
 179 007a FFF7FEFF 		bl	CapSense_UpdateEnabledBaselines
 111:main.c        ****         CapSense_ScanEnabledWidgets();  
 180              		.loc 1 111 0
 181 007e FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 112:main.c        ****         
 113:main.c        ****         int isSensorOn1 = (CapSense_sensorRaw[9] - CapSense_sensorBaseline[9]) > thresholdArray[9];
 182              		.loc 1 113 0
 183 0082 894B     		ldr	r3, .L19+4
 184 0084 5B8A     		ldrh	r3, [r3, #18]
 185 0086 1A46     		mov	r2, r3
 186 0088 884B     		ldr	r3, .L19+8
 187 008a 5B8A     		ldrh	r3, [r3, #18]
 188 008c D31A     		subs	r3, r2, r3
 189 008e 884A     		ldr	r2, .L19+12
 190 0090 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 191 0092 9342     		cmp	r3, r2
 192 0094 CCBF     		ite	gt
 193 0096 0123     		movgt	r3, #1
 194 0098 0023     		movle	r3, #0
 195 009a DBB2     		uxtb	r3, r3
 196 009c BB61     		str	r3, [r7, #24]
 114:main.c        ****         if (isSensorOn1)
 197              		.loc 1 114 0
 198 009e BB69     		ldr	r3, [r7, #24]
 199 00a0 002B     		cmp	r3, #0
 200 00a2 03D0     		beq	.L5
 115:main.c        ****         {
 116:main.c        ****             LED_Write(1);
 201              		.loc 1 116 0
 202 00a4 0120     		movs	r0, #1
 203 00a6 FFF7FEFF 		bl	LED_Write
 204 00aa 02E0     		b	.L6
 205              	.L5:
 117:main.c        ****         }
 118:main.c        ****         else
 119:main.c        ****         {
 120:main.c        ****             LED_Write(0);
 206              		.loc 1 120 0
 207 00ac 0020     		movs	r0, #0
 208 00ae FFF7FEFF 		bl	LED_Write
 209              	.L6:
 121:main.c        ****         }
 122:main.c        **** 
 123:main.c        ****         counter = 0;
 210              		.loc 1 123 0
 211 00b2 804B     		ldr	r3, .L19+16
 212 00b4 0022     		movs	r2, #0
 213 00b6 1A70     		strb	r2, [r3]
 124:main.c        ****         
 125:main.c        ****         for (i = 0; i < 2; i++)
 214              		.loc 1 125 0
 215 00b8 7A4B     		ldr	r3, .L19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 7


 216 00ba 0022     		movs	r2, #0
 217 00bc 1A70     		strb	r2, [r3]
 218 00be 26E0     		b	.L7
 219              	.L8:
 126:main.c        ****         {
 127:main.c        ****             barArray[counter++] = ((uint16_t) linearPotValue32Bit[i]) >> 8;
 220              		.loc 1 127 0 discriminator 3
 221 00c0 7C4B     		ldr	r3, .L19+16
 222 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 223 00c4 5A1C     		adds	r2, r3, #1
 224 00c6 D1B2     		uxtb	r1, r2
 225 00c8 7A4A     		ldr	r2, .L19+16
 226 00ca 1170     		strb	r1, [r2]
 227 00cc 1A46     		mov	r2, r3
 228 00ce 754B     		ldr	r3, .L19
 229 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 230 00d2 1946     		mov	r1, r3
 231 00d4 784B     		ldr	r3, .L19+20
 232 00d6 53F82130 		ldr	r3, [r3, r1, lsl #2]
 233 00da 1B12     		asrs	r3, r3, #8
 234 00dc D9B2     		uxtb	r1, r3
 235 00de 774B     		ldr	r3, .L19+24
 236 00e0 9954     		strb	r1, [r3, r2]
 128:main.c        ****             barArray[counter++] = linearPotValue32Bit[i] & 0xff;
 237              		.loc 1 128 0 discriminator 3
 238 00e2 744B     		ldr	r3, .L19+16
 239 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 240 00e6 5A1C     		adds	r2, r3, #1
 241 00e8 D1B2     		uxtb	r1, r2
 242 00ea 724A     		ldr	r2, .L19+16
 243 00ec 1170     		strb	r1, [r2]
 244 00ee 1A46     		mov	r2, r3
 245 00f0 6C4B     		ldr	r3, .L19
 246 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 247 00f4 1946     		mov	r1, r3
 248 00f6 704B     		ldr	r3, .L19+20
 249 00f8 53F82130 		ldr	r3, [r3, r1, lsl #2]
 250 00fc D9B2     		uxtb	r1, r3
 251 00fe 6F4B     		ldr	r3, .L19+24
 252 0100 9954     		strb	r1, [r3, r2]
 125:main.c        ****         {
 253              		.loc 1 125 0 discriminator 3
 254 0102 684B     		ldr	r3, .L19
 255 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 256 0106 0133     		adds	r3, r3, #1
 257 0108 DAB2     		uxtb	r2, r3
 258 010a 664B     		ldr	r3, .L19
 259 010c 1A70     		strb	r2, [r3]
 260              	.L7:
 125:main.c        ****         {
 261              		.loc 1 125 0 is_stmt 0 discriminator 1
 262 010e 654B     		ldr	r3, .L19
 263 0110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 264 0112 012B     		cmp	r3, #1
 265 0114 D4D9     		bls	.L8
 129:main.c        ****         }
 130:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 8


 131:main.c        **** 
 132:main.c        **** 
 133:main.c        ****         barArray[4] = 0;
 266              		.loc 1 133 0 is_stmt 1
 267 0116 694B     		ldr	r3, .L19+24
 268 0118 0022     		movs	r2, #0
 269 011a 1A71     		strb	r2, [r3, #4]
 134:main.c        ****         barArray[5] = 0;
 270              		.loc 1 134 0
 271 011c 674B     		ldr	r3, .L19+24
 272 011e 0022     		movs	r2, #0
 273 0120 5A71     		strb	r2, [r3, #5]
 135:main.c        ****         barArray[6] = 254;
 274              		.loc 1 135 0
 275 0122 664B     		ldr	r3, .L19+24
 276 0124 FE22     		movs	r2, #254
 277 0126 9A71     		strb	r2, [r3, #6]
 136:main.c        ****         barArray[7] = 253;
 278              		.loc 1 136 0
 279 0128 644B     		ldr	r3, .L19+24
 280 012a FD22     		movs	r2, #253
 281 012c DA71     		strb	r2, [r3, #7]
 137:main.c        ****         
 138:main.c        ****         touchArray[0] = 0;
 282              		.loc 1 138 0
 283 012e 644B     		ldr	r3, .L19+28
 284 0130 0022     		movs	r2, #0
 285 0132 1A70     		strb	r2, [r3]
 139:main.c        ****         touchArray[1] = 0;
 286              		.loc 1 139 0
 287 0134 624B     		ldr	r3, .L19+28
 288 0136 0022     		movs	r2, #0
 289 0138 5A70     		strb	r2, [r3, #1]
 140:main.c        ****         touchArray[2] = 254;
 290              		.loc 1 140 0
 291 013a 614B     		ldr	r3, .L19+28
 292 013c FE22     		movs	r2, #254
 293 013e 9A70     		strb	r2, [r3, #2]
 141:main.c        ****         touchArray[3] = 253;
 294              		.loc 1 141 0
 295 0140 5F4B     		ldr	r3, .L19+28
 296 0142 FD22     		movs	r2, #253
 297 0144 DA70     		strb	r2, [r3, #3]
 142:main.c        **** 
 143:main.c        ****         
 144:main.c        ****         while(CapSense_IsBusy() != 0)  
 298              		.loc 1 144 0
 299 0146 00BF     		nop
 300              	.L9:
 301              		.loc 1 144 0 is_stmt 0 discriminator 1
 302 0148 FFF7FEFF 		bl	CapSense_IsBusy
 303 014c 0346     		mov	r3, r0
 304 014e 002B     		cmp	r3, #0
 305 0150 FAD1     		bne	.L9
 145:main.c        ****         {
 146:main.c        ****             ;//wait until scan is complete
 147:main.c        ****         }  
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 9


 148:main.c        ****         for (i = 0; i < 8; i++)
 306              		.loc 1 148 0 is_stmt 1
 307 0152 544B     		ldr	r3, .L19
 308 0154 0022     		movs	r2, #0
 309 0156 1A70     		strb	r2, [r3]
 310 0158 3AE0     		b	.L10
 311              	.L11:
 312              	.LBB3:
 149:main.c        ****         {
 150:main.c        ****            int isSensorOn = (CapSense_sensorRaw[i] - CapSense_sensorBaseline[i]) > thresholdArray[i
 313              		.loc 1 150 0 discriminator 3
 314 015a 524B     		ldr	r3, .L19
 315 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 316 015e 1A46     		mov	r2, r3
 317 0160 514B     		ldr	r3, .L19+4
 318 0162 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 319 0166 1A46     		mov	r2, r3
 320 0168 4E4B     		ldr	r3, .L19
 321 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 322 016c 1946     		mov	r1, r3
 323 016e 4F4B     		ldr	r3, .L19+8
 324 0170 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 325 0174 D31A     		subs	r3, r2, r3
 326 0176 4B4A     		ldr	r2, .L19
 327 0178 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 328 017a 1146     		mov	r1, r2
 329 017c 4C4A     		ldr	r2, .L19+12
 330 017e 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 331 0180 9342     		cmp	r3, r2
 332 0182 CCBF     		ite	gt
 333 0184 0123     		movgt	r3, #1
 334 0186 0023     		movle	r3, #0
 335 0188 DBB2     		uxtb	r3, r3
 336 018a 7B61     		str	r3, [r7, #20]
 151:main.c        ****             touchArray[0] |= (isSensorOn << i);
 337              		.loc 1 151 0 discriminator 3
 338 018c 4C4B     		ldr	r3, .L19+28
 339 018e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 340 0190 5AB2     		sxtb	r2, r3
 341 0192 444B     		ldr	r3, .L19
 342 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 343 0196 1946     		mov	r1, r3
 344 0198 7B69     		ldr	r3, [r7, #20]
 345 019a 8B40     		lsls	r3, r3, r1
 346 019c 5BB2     		sxtb	r3, r3
 347 019e 1343     		orrs	r3, r3, r2
 348 01a0 5BB2     		sxtb	r3, r3
 349 01a2 DAB2     		uxtb	r2, r3
 350 01a4 464B     		ldr	r3, .L19+28
 351 01a6 1A70     		strb	r2, [r3]
 152:main.c        ****             barArray[4] |= (isSensorOn << i);
 352              		.loc 1 152 0 discriminator 3
 353 01a8 444B     		ldr	r3, .L19+24
 354 01aa 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 355 01ac 5AB2     		sxtb	r2, r3
 356 01ae 3D4B     		ldr	r3, .L19
 357 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 10


 358 01b2 1946     		mov	r1, r3
 359 01b4 7B69     		ldr	r3, [r7, #20]
 360 01b6 8B40     		lsls	r3, r3, r1
 361 01b8 5BB2     		sxtb	r3, r3
 362 01ba 1343     		orrs	r3, r3, r2
 363 01bc 5BB2     		sxtb	r3, r3
 364 01be DAB2     		uxtb	r2, r3
 365 01c0 3E4B     		ldr	r3, .L19+24
 366 01c2 1A71     		strb	r2, [r3, #4]
 367              	.LBE3:
 148:main.c        ****         {
 368              		.loc 1 148 0 discriminator 3
 369 01c4 374B     		ldr	r3, .L19
 370 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 371 01c8 0133     		adds	r3, r3, #1
 372 01ca DAB2     		uxtb	r2, r3
 373 01cc 354B     		ldr	r3, .L19
 374 01ce 1A70     		strb	r2, [r3]
 375              	.L10:
 148:main.c        ****         {
 376              		.loc 1 148 0 is_stmt 0 discriminator 1
 377 01d0 344B     		ldr	r3, .L19
 378 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 379 01d4 072B     		cmp	r3, #7
 380 01d6 C0D9     		bls	.L11
 153:main.c        **** 
 154:main.c        ****         }
 155:main.c        ****         for (i = 8; i < 10; i++)
 381              		.loc 1 155 0 is_stmt 1
 382 01d8 324B     		ldr	r3, .L19
 383 01da 0822     		movs	r2, #8
 384 01dc 1A70     		strb	r2, [r3]
 385 01de 3CE0     		b	.L12
 386              	.L13:
 387              	.LBB4:
 156:main.c        ****         {
 157:main.c        ****            int isSensorOn = (CapSense_sensorRaw[i] - CapSense_sensorBaseline[i]) > thresholdArray[i
 388              		.loc 1 157 0 discriminator 3
 389 01e0 304B     		ldr	r3, .L19
 390 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 391 01e4 1A46     		mov	r2, r3
 392 01e6 304B     		ldr	r3, .L19+4
 393 01e8 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 394 01ec 1A46     		mov	r2, r3
 395 01ee 2D4B     		ldr	r3, .L19
 396 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 397 01f2 1946     		mov	r1, r3
 398 01f4 2D4B     		ldr	r3, .L19+8
 399 01f6 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 400 01fa D31A     		subs	r3, r2, r3
 401 01fc 294A     		ldr	r2, .L19
 402 01fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 403 0200 1146     		mov	r1, r2
 404 0202 2B4A     		ldr	r2, .L19+12
 405 0204 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 406 0206 9342     		cmp	r3, r2
 407 0208 CCBF     		ite	gt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 11


 408 020a 0123     		movgt	r3, #1
 409 020c 0023     		movle	r3, #0
 410 020e DBB2     		uxtb	r3, r3
 411 0210 3B61     		str	r3, [r7, #16]
 158:main.c        ****             touchArray[1] |= (isSensorOn << (i - 8));
 412              		.loc 1 158 0 discriminator 3
 413 0212 2B4B     		ldr	r3, .L19+28
 414 0214 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 415 0216 5AB2     		sxtb	r2, r3
 416 0218 224B     		ldr	r3, .L19
 417 021a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 418 021c 083B     		subs	r3, r3, #8
 419 021e 3969     		ldr	r1, [r7, #16]
 420 0220 01FA03F3 		lsl	r3, r1, r3
 421 0224 5BB2     		sxtb	r3, r3
 422 0226 1343     		orrs	r3, r3, r2
 423 0228 5BB2     		sxtb	r3, r3
 424 022a DAB2     		uxtb	r2, r3
 425 022c 244B     		ldr	r3, .L19+28
 426 022e 5A70     		strb	r2, [r3, #1]
 159:main.c        ****             barArray[5] |= (isSensorOn << (i - 8));
 427              		.loc 1 159 0 discriminator 3
 428 0230 224B     		ldr	r3, .L19+24
 429 0232 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 430 0234 5AB2     		sxtb	r2, r3
 431 0236 1B4B     		ldr	r3, .L19
 432 0238 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 433 023a 083B     		subs	r3, r3, #8
 434 023c 3969     		ldr	r1, [r7, #16]
 435 023e 01FA03F3 		lsl	r3, r1, r3
 436 0242 5BB2     		sxtb	r3, r3
 437 0244 1343     		orrs	r3, r3, r2
 438 0246 5BB2     		sxtb	r3, r3
 439 0248 DAB2     		uxtb	r2, r3
 440 024a 1C4B     		ldr	r3, .L19+24
 441 024c 5A71     		strb	r2, [r3, #5]
 442              	.LBE4:
 155:main.c        ****         {
 443              		.loc 1 155 0 discriminator 3
 444 024e 154B     		ldr	r3, .L19
 445 0250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446 0252 0133     		adds	r3, r3, #1
 447 0254 DAB2     		uxtb	r2, r3
 448 0256 134B     		ldr	r3, .L19
 449 0258 1A70     		strb	r2, [r3]
 450              	.L12:
 155:main.c        ****         {
 451              		.loc 1 155 0 is_stmt 0 discriminator 1
 452 025a 124B     		ldr	r3, .L19
 453 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 454 025e 092B     		cmp	r3, #9
 455 0260 BED9     		bls	.L13
 456              	.LBB5:
 160:main.c        ****         }        
 161:main.c        ****         
 162:main.c        ****         //send data over SPI to pluck detector boards
 163:main.c        ****          for (int i = 0; i < touchBufferSize; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 12


 457              		.loc 1 163 0 is_stmt 1
 458 0262 0023     		movs	r3, #0
 459 0264 7B62     		str	r3, [r7, #36]
 460 0266 09E0     		b	.L14
 461              	.L15:
 164:main.c        ****         {         
 165:main.c        **** 
 166:main.c        ****             SPIM_1_WriteTxData(touchArray[i]);
 462              		.loc 1 166 0 discriminator 3
 463 0268 154A     		ldr	r2, .L19+28
 464 026a 7B6A     		ldr	r3, [r7, #36]
 465 026c 1344     		add	r3, r3, r2
 466 026e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 467 0270 1846     		mov	r0, r3
 468 0272 FFF7FEFF 		bl	SPIM_1_WriteTxData
 163:main.c        ****         {         
 469              		.loc 1 163 0 discriminator 3
 470 0276 7B6A     		ldr	r3, [r7, #36]
 471 0278 0133     		adds	r3, r3, #1
 472 027a 7B62     		str	r3, [r7, #36]
 473              	.L14:
 163:main.c        ****         {         
 474              		.loc 1 163 0 is_stmt 0 discriminator 1
 475 027c 7B6A     		ldr	r3, [r7, #36]
 476 027e 032B     		cmp	r3, #3
 477 0280 F2DD     		ble	.L15
 478              	.LBE5:
 479              	.LBB6:
 167:main.c        **** 
 168:main.c        ****         }
 169:main.c        ****         
 170:main.c        ****         //send data over SPI to brain and synth boards
 171:main.c        ****          for (int i = 0; i < barBufferSize; i++)
 480              		.loc 1 171 0 is_stmt 1
 481 0282 0023     		movs	r3, #0
 482 0284 3B62     		str	r3, [r7, #32]
 483 0286 09E0     		b	.L16
 484              	.L17:
 172:main.c        ****         {         
 173:main.c        ****             SPIM_2_WriteTxData(barArray[i]);
 485              		.loc 1 173 0 discriminator 3
 486 0288 0C4A     		ldr	r2, .L19+24
 487 028a 3B6A     		ldr	r3, [r7, #32]
 488 028c 1344     		add	r3, r3, r2
 489 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 490 0290 1846     		mov	r0, r3
 491 0292 FFF7FEFF 		bl	SPIM_2_WriteTxData
 171:main.c        ****         {         
 492              		.loc 1 171 0 discriminator 3
 493 0296 3B6A     		ldr	r3, [r7, #32]
 494 0298 0133     		adds	r3, r3, #1
 495 029a 3B62     		str	r3, [r7, #32]
 496              	.L16:
 171:main.c        ****         {         
 497              		.loc 1 171 0 is_stmt 0 discriminator 1
 498 029c 3B6A     		ldr	r3, [r7, #32]
 499 029e 072B     		cmp	r3, #7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 13


 500 02a0 F2DD     		ble	.L17
 501              	.LBE6:
 502              	.LBE2:
 174:main.c        ****         }
 175:main.c        ****     }
 503              		.loc 1 175 0 is_stmt 1
 504 02a2 D3E6     		b	.L18
 505              	.L20:
 506              		.align	2
 507              	.L19:
 508 02a4 00000000 		.word	i
 509 02a8 00000000 		.word	CapSense_sensorRaw
 510 02ac 00000000 		.word	CapSense_sensorBaseline
 511 02b0 00000000 		.word	thresholdArray
 512 02b4 00000000 		.word	counter
 513 02b8 00000000 		.word	linearPotValue32Bit
 514 02bc 00000000 		.word	barArray
 515 02c0 00000000 		.word	touchArray
 516              		.cfi_endproc
 517              	.LFE65:
 518              		.size	main, .-main
 519              		.comm	resistorRatio,8,4
 520              		.global	__aeabi_i2f
 521              		.global	__aeabi_fdiv
 522              		.global	__aeabi_fmul
 523              		.global	__aeabi_f2iz
 524              		.section	.text.scanLinearResistor,"ax",%progbits
 525              		.align	2
 526              		.global	scanLinearResistor
 527              		.thumb
 528              		.thumb_func
 529              		.type	scanLinearResistor, %function
 530              	scanLinearResistor:
 531              	.LFB66:
 176:main.c        **** }
 177:main.c        **** float resistorRatio[2];
 178:main.c        **** void scanLinearResistor(uint8_t channel)
 179:main.c        **** {  
 532              		.loc 1 179 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 24
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 B0B5     		push	{r4, r5, r7, lr}
 537              		.cfi_def_cfa_offset 16
 538              		.cfi_offset 4, -16
 539              		.cfi_offset 5, -12
 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 86B0     		sub	sp, sp, #24
 543              		.cfi_def_cfa_offset 40
 544 0004 00AF     		add	r7, sp, #0
 545              		.cfi_def_cfa_register 7
 546 0006 0346     		mov	r3, r0
 547 0008 FB71     		strb	r3, [r7, #7]
 180:main.c        ****         int32 iVtherm = 0;
 548              		.loc 1 180 0
 549 000a 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 14


 550 000c 3B61     		str	r3, [r7, #16]
 181:main.c        ****         int32 iVref = 0;
 551              		.loc 1 181 0
 552 000e 0023     		movs	r3, #0
 553 0010 FB60     		str	r3, [r7, #12]
 182:main.c        ****         int32 iRes = 0;
 554              		.loc 1 182 0
 555 0012 0023     		movs	r3, #0
 556 0014 7B61     		str	r3, [r7, #20]
 183:main.c        ****         int32 offset = 0;
 557              		.loc 1 183 0
 558 0016 0023     		movs	r3, #0
 559 0018 BB60     		str	r3, [r7, #8]
 184:main.c        ****         //connect the iout pin to the correct resistor channel
 185:main.c        ****         AMux_2_FastSelect(channel);
 560              		.loc 1 185 0
 561 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 562 001c 1846     		mov	r0, r3
 563 001e FFF7FEFF 		bl	AMux_2_FastSelect
 186:main.c        ****     
 187:main.c        ****         //select the wiper pins
 188:main.c        ****         AMux_1_FastSelect(channel * 2);
 564              		.loc 1 188 0
 565 0022 FB79     		ldrb	r3, [r7, #7]
 566 0024 5B00     		lsls	r3, r3, #1
 567 0026 DBB2     		uxtb	r3, r3
 568 0028 1846     		mov	r0, r3
 569 002a FFF7FEFF 		bl	AMux_1_FastSelect
 189:main.c        ****         CyDelayUs(5); 
 570              		.loc 1 189 0
 571 002e 0520     		movs	r0, #5
 572 0030 FFF7FEFF 		bl	CyDelayUs
 190:main.c        **** 
 191:main.c        ****        
 192:main.c        ****         ADC_1_StartConvert();
 573              		.loc 1 192 0
 574 0034 FFF7FEFF 		bl	ADC_1_StartConvert
 193:main.c        ****         ADC_1_IsEndConversion(ADC_1_WAIT_FOR_RESULT);
 575              		.loc 1 193 0
 576 0038 0020     		movs	r0, #0
 577 003a FFF7FEFF 		bl	ADC_1_IsEndConversion
 194:main.c        ****         iVtherm = ADC_1_GetResult32();
 578              		.loc 1 194 0
 579 003e FFF7FEFF 		bl	ADC_1_GetResult32
 580 0042 3861     		str	r0, [r7, #16]
 195:main.c        ****         AMux_1_FastSelect((channel * 2) + 1);
 581              		.loc 1 195 0
 582 0044 FB79     		ldrb	r3, [r7, #7]
 583 0046 5B00     		lsls	r3, r3, #1
 584 0048 DBB2     		uxtb	r3, r3
 585 004a 0133     		adds	r3, r3, #1
 586 004c DBB2     		uxtb	r3, r3
 587 004e 1846     		mov	r0, r3
 588 0050 FFF7FEFF 		bl	AMux_1_FastSelect
 196:main.c        ****         CyDelayUs(5); 
 589              		.loc 1 196 0
 590 0054 0520     		movs	r0, #5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 15


 591 0056 FFF7FEFF 		bl	CyDelayUs
 197:main.c        ****         ADC_1_StartConvert();
 592              		.loc 1 197 0
 593 005a FFF7FEFF 		bl	ADC_1_StartConvert
 198:main.c        ****         ADC_1_IsEndConversion(ADC_1_WAIT_FOR_RESULT);
 594              		.loc 1 198 0
 595 005e 0020     		movs	r0, #0
 596 0060 FFF7FEFF 		bl	ADC_1_IsEndConversion
 199:main.c        ****         iVref = ADC_1_GetResult32();
 597              		.loc 1 199 0
 598 0064 FFF7FEFF 		bl	ADC_1_GetResult32
 599 0068 F860     		str	r0, [r7, #12]
 200:main.c        ****         
 201:main.c        ****         
 202:main.c        ****         //iRes = Thermistor_GetResistance(iVtherm, iVref); //check if more efficient than my versio
 203:main.c        ****         if ((iVref > 100) && (iVtherm < 100))
 600              		.loc 1 203 0
 601 006a FB68     		ldr	r3, [r7, #12]
 602 006c 642B     		cmp	r3, #100
 603 006e 06DD     		ble	.L22
 604              		.loc 1 203 0 is_stmt 0 discriminator 1
 605 0070 3B69     		ldr	r3, [r7, #16]
 606 0072 632B     		cmp	r3, #99
 607 0074 03DC     		bgt	.L22
 204:main.c        ****         {
 205:main.c        ****             iRes = 65535;
 608              		.loc 1 205 0 is_stmt 1
 609 0076 4FF6FF73 		movw	r3, #65535
 610 007a 7B61     		str	r3, [r7, #20]
 611 007c 28E0     		b	.L23
 612              	.L22:
 206:main.c        ****         }
 207:main.c        ****         else
 208:main.c        ****         
 209:main.c        ****         {
 210:main.c        ****             resistorRatio[channel] = ((float)iVref / (float)iVtherm);
 613              		.loc 1 210 0
 614 007e FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 615 0080 F868     		ldr	r0, [r7, #12]
 616 0082 FFF7FEFF 		bl	__aeabi_i2f
 617 0086 0546     		mov	r5, r0
 618 0088 3869     		ldr	r0, [r7, #16]
 619 008a FFF7FEFF 		bl	__aeabi_i2f
 620 008e 0346     		mov	r3, r0
 621 0090 1946     		mov	r1, r3
 622 0092 2846     		mov	r0, r5
 623 0094 FFF7FEFF 		bl	__aeabi_fdiv
 624 0098 0346     		mov	r3, r0
 625 009a 1A46     		mov	r2, r3
 626 009c 114B     		ldr	r3, .L24
 627 009e 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
 211:main.c        ****             iRes = (int32)(((float)iVref / (float)iVtherm) * 32000.0f);
 628              		.loc 1 211 0
 629 00a2 F868     		ldr	r0, [r7, #12]
 630 00a4 FFF7FEFF 		bl	__aeabi_i2f
 631 00a8 0446     		mov	r4, r0
 632 00aa 3869     		ldr	r0, [r7, #16]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 16


 633 00ac FFF7FEFF 		bl	__aeabi_i2f
 634 00b0 0346     		mov	r3, r0
 635 00b2 1946     		mov	r1, r3
 636 00b4 2046     		mov	r0, r4
 637 00b6 FFF7FEFF 		bl	__aeabi_fdiv
 638 00ba 0346     		mov	r3, r0
 639 00bc 0A49     		ldr	r1, .L24+4
 640 00be 1846     		mov	r0, r3
 641 00c0 FFF7FEFF 		bl	__aeabi_fmul
 642 00c4 0346     		mov	r3, r0
 643 00c6 1846     		mov	r0, r3
 644 00c8 FFF7FEFF 		bl	__aeabi_f2iz
 645 00cc 0346     		mov	r3, r0
 646 00ce 7B61     		str	r3, [r7, #20]
 647              	.L23:
 212:main.c        ****         }
 213:main.c        ****         
 214:main.c        ****         linearPotValue32Bit[channel] = iRes;
 648              		.loc 1 214 0
 649 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 650 00d2 0649     		ldr	r1, .L24+8
 651 00d4 7A69     		ldr	r2, [r7, #20]
 652 00d6 41F82320 		str	r2, [r1, r3, lsl #2]
 215:main.c        **** }
 653              		.loc 1 215 0
 654 00da 00BF     		nop
 655 00dc 1837     		adds	r7, r7, #24
 656              		.cfi_def_cfa_offset 16
 657 00de BD46     		mov	sp, r7
 658              		.cfi_def_cfa_register 13
 659              		@ sp needed
 660 00e0 B0BD     		pop	{r4, r5, r7, pc}
 661              	.L25:
 662 00e2 00BF     		.align	2
 663              	.L24:
 664 00e4 00000000 		.word	resistorRatio
 665 00e8 0000FA46 		.word	1190789120
 666 00ec 00000000 		.word	linearPotValue32Bit
 667              		.cfi_endproc
 668              	.LFE66:
 669              		.size	scanLinearResistor, .-scanLinearResistor
 670              		.text
 671              	.Letext0:
 672              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 673              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 674              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 675              		.file 5 "Generated_Source\\PSoC5/CapSense.h"
 676              		.file 6 "Generated_Source\\PSoC5/CapSense_CSHL.h"
 677              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 678              		.section	.debug_info,"",%progbits
 679              	.Ldebug_info0:
 680 0000 A4030000 		.4byte	0x3a4
 681 0004 0400     		.2byte	0x4
 682 0006 00000000 		.4byte	.Ldebug_abbrev0
 683 000a 04       		.byte	0x4
 684 000b 01       		.uleb128 0x1
 685 000c 12000000 		.4byte	.LASF45
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 17


 686 0010 0C       		.byte	0xc
 687 0011 C2020000 		.4byte	.LASF46
 688 0015 A0000000 		.4byte	.LASF47
 689 0019 00000000 		.4byte	.Ldebug_ranges0+0
 690 001d 00000000 		.4byte	0
 691 0021 00000000 		.4byte	.Ldebug_line0
 692 0025 02       		.uleb128 0x2
 693 0026 01       		.byte	0x1
 694 0027 06       		.byte	0x6
 695 0028 1E030000 		.4byte	.LASF0
 696 002c 03       		.uleb128 0x3
 697 002d 00000000 		.4byte	.LASF3
 698 0031 02       		.byte	0x2
 699 0032 1D       		.byte	0x1d
 700 0033 37000000 		.4byte	0x37
 701 0037 02       		.uleb128 0x2
 702 0038 01       		.byte	0x1
 703 0039 08       		.byte	0x8
 704 003a A7010000 		.4byte	.LASF1
 705 003e 02       		.uleb128 0x2
 706 003f 02       		.byte	0x2
 707 0040 05       		.byte	0x5
 708 0041 D5020000 		.4byte	.LASF2
 709 0045 03       		.uleb128 0x3
 710 0046 27020000 		.4byte	.LASF4
 711 004a 02       		.byte	0x2
 712 004b 2B       		.byte	0x2b
 713 004c 50000000 		.4byte	0x50
 714 0050 02       		.uleb128 0x2
 715 0051 02       		.byte	0x2
 716 0052 07       		.byte	0x7
 717 0053 5A010000 		.4byte	.LASF5
 718 0057 03       		.uleb128 0x3
 719 0058 23010000 		.4byte	.LASF6
 720 005c 02       		.byte	0x2
 721 005d 3F       		.byte	0x3f
 722 005e 62000000 		.4byte	0x62
 723 0062 02       		.uleb128 0x2
 724 0063 04       		.byte	0x4
 725 0064 05       		.byte	0x5
 726 0065 05020000 		.4byte	.LASF7
 727 0069 02       		.uleb128 0x2
 728 006a 04       		.byte	0x4
 729 006b 07       		.byte	0x7
 730 006c DC010000 		.4byte	.LASF8
 731 0070 02       		.uleb128 0x2
 732 0071 08       		.byte	0x8
 733 0072 05       		.byte	0x5
 734 0073 B4020000 		.4byte	.LASF9
 735 0077 02       		.uleb128 0x2
 736 0078 08       		.byte	0x8
 737 0079 07       		.byte	0x7
 738 007a 70020000 		.4byte	.LASF10
 739 007e 04       		.uleb128 0x4
 740 007f 04       		.byte	0x4
 741 0080 05       		.byte	0x5
 742 0081 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 18


 743 0085 02       		.uleb128 0x2
 744 0086 04       		.byte	0x4
 745 0087 07       		.byte	0x7
 746 0088 63020000 		.4byte	.LASF11
 747 008c 03       		.uleb128 0x3
 748 008d 87020000 		.4byte	.LASF12
 749 0091 03       		.byte	0x3
 750 0092 18       		.byte	0x18
 751 0093 2C000000 		.4byte	0x2c
 752 0097 03       		.uleb128 0x3
 753 0098 DF020000 		.4byte	.LASF13
 754 009c 03       		.byte	0x3
 755 009d 24       		.byte	0x24
 756 009e 45000000 		.4byte	0x45
 757 00a2 03       		.uleb128 0x3
 758 00a3 79010000 		.4byte	.LASF14
 759 00a7 03       		.byte	0x3
 760 00a8 2C       		.byte	0x2c
 761 00a9 57000000 		.4byte	0x57
 762 00ad 05       		.uleb128 0x5
 763 00ae F4010000 		.4byte	.LASF15
 764 00b2 04       		.byte	0x4
 765 00b3 E901     		.2byte	0x1e9
 766 00b5 37000000 		.4byte	0x37
 767 00b9 05       		.uleb128 0x5
 768 00ba 51020000 		.4byte	.LASF16
 769 00be 04       		.byte	0x4
 770 00bf EA01     		.2byte	0x1ea
 771 00c1 50000000 		.4byte	0x50
 772 00c5 05       		.uleb128 0x5
 773 00c6 A5020000 		.4byte	.LASF17
 774 00ca 04       		.byte	0x4
 775 00cb EE01     		.2byte	0x1ee
 776 00cd 62000000 		.4byte	0x62
 777 00d1 02       		.uleb128 0x2
 778 00d2 04       		.byte	0x4
 779 00d3 04       		.byte	0x4
 780 00d4 90010000 		.4byte	.LASF18
 781 00d8 02       		.uleb128 0x2
 782 00d9 08       		.byte	0x8
 783 00da 04       		.byte	0x4
 784 00db 6D010000 		.4byte	.LASF19
 785 00df 02       		.uleb128 0x2
 786 00e0 01       		.byte	0x1
 787 00e1 08       		.byte	0x8
 788 00e2 C9020000 		.4byte	.LASF20
 789 00e6 02       		.uleb128 0x2
 790 00e7 08       		.byte	0x8
 791 00e8 04       		.byte	0x4
 792 00e9 12030000 		.4byte	.LASF21
 793 00ed 02       		.uleb128 0x2
 794 00ee 04       		.byte	0x4
 795 00ef 07       		.byte	0x7
 796 00f0 AB020000 		.4byte	.LASF22
 797 00f4 06       		.uleb128 0x6
 798 00f5 3B020000 		.4byte	.LASF48
 799 00f9 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 19


 800 00fa 41       		.byte	0x41
 801 00fb 00000000 		.4byte	.LFB64
 802 00ff 0C000000 		.4byte	.LFE64-.LFB64
 803 0103 01       		.uleb128 0x1
 804 0104 9C       		.byte	0x9c
 805 0105 07       		.uleb128 0x7
 806 0106 4C020000 		.4byte	.LASF49
 807 010a 01       		.byte	0x1
 808 010b 48       		.byte	0x48
 809 010c 7E000000 		.4byte	0x7e
 810 0110 00000000 		.4byte	.LFB65
 811 0114 C4020000 		.4byte	.LFE65-.LFB65
 812 0118 01       		.uleb128 0x1
 813 0119 9C       		.byte	0x9c
 814 011a C9010000 		.4byte	0x1c9
 815 011e 08       		.uleb128 0x8
 816 011f 32020000 		.4byte	.LASF23
 817 0123 01       		.byte	0x1
 818 0124 4B       		.byte	0x4b
 819 0125 C9010000 		.4byte	0x1c9
 820 0129 02       		.uleb128 0x2
 821 012a 91       		.byte	0x91
 822 012b 50       		.sleb128 -48
 823 012c 08       		.uleb128 0x8
 824 012d 96020000 		.4byte	.LASF24
 825 0131 01       		.byte	0x1
 826 0132 5D       		.byte	0x5d
 827 0133 8C000000 		.4byte	0x8c
 828 0137 02       		.uleb128 0x2
 829 0138 91       		.byte	0x91
 830 0139 6F       		.sleb128 -17
 831 013a 09       		.uleb128 0x9
 832 013b 4C000000 		.4byte	.LBB2
 833 013f 56020000 		.4byte	.LBE2-.LBB2
 834 0143 08       		.uleb128 0x8
 835 0144 1B020000 		.4byte	.LASF25
 836 0148 01       		.byte	0x1
 837 0149 6C       		.byte	0x6c
 838 014a 8C000000 		.4byte	0x8c
 839 014e 02       		.uleb128 0x2
 840 014f 91       		.byte	0x91
 841 0150 6E       		.sleb128 -18
 842 0151 08       		.uleb128 0x8
 843 0152 4E010000 		.4byte	.LASF26
 844 0156 01       		.byte	0x1
 845 0157 71       		.byte	0x71
 846 0158 7E000000 		.4byte	0x7e
 847 015c 02       		.uleb128 0x2
 848 015d 91       		.byte	0x91
 849 015e 68       		.sleb128 -24
 850 015f 0A       		.uleb128 0xa
 851 0160 5A010000 		.4byte	.LBB3
 852 0164 6A000000 		.4byte	.LBE3-.LBB3
 853 0168 7B010000 		.4byte	0x17b
 854 016c 08       		.uleb128 0x8
 855 016d FA010000 		.4byte	.LASF27
 856 0171 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 20


 857 0172 96       		.byte	0x96
 858 0173 7E000000 		.4byte	0x7e
 859 0177 02       		.uleb128 0x2
 860 0178 91       		.byte	0x91
 861 0179 64       		.sleb128 -28
 862 017a 00       		.byte	0
 863 017b 0A       		.uleb128 0xa
 864 017c E0010000 		.4byte	.LBB4
 865 0180 6E000000 		.4byte	.LBE4-.LBB4
 866 0184 97010000 		.4byte	0x197
 867 0188 08       		.uleb128 0x8
 868 0189 FA010000 		.4byte	.LASF27
 869 018d 01       		.byte	0x1
 870 018e 9D       		.byte	0x9d
 871 018f 7E000000 		.4byte	0x7e
 872 0193 02       		.uleb128 0x2
 873 0194 91       		.byte	0x91
 874 0195 60       		.sleb128 -32
 875 0196 00       		.byte	0
 876 0197 0A       		.uleb128 0xa
 877 0198 62020000 		.4byte	.LBB5
 878 019c 20000000 		.4byte	.LBE5-.LBB5
 879 01a0 B1010000 		.4byte	0x1b1
 880 01a4 0B       		.uleb128 0xb
 881 01a5 6900     		.ascii	"i\000"
 882 01a7 01       		.byte	0x1
 883 01a8 A3       		.byte	0xa3
 884 01a9 7E000000 		.4byte	0x7e
 885 01ad 02       		.uleb128 0x2
 886 01ae 91       		.byte	0x91
 887 01af 74       		.sleb128 -12
 888 01b0 00       		.byte	0
 889 01b1 09       		.uleb128 0x9
 890 01b2 82020000 		.4byte	.LBB6
 891 01b6 20000000 		.4byte	.LBE6-.LBB6
 892 01ba 0B       		.uleb128 0xb
 893 01bb 6900     		.ascii	"i\000"
 894 01bd 01       		.byte	0x1
 895 01be AB       		.byte	0xab
 896 01bf 7E000000 		.4byte	0x7e
 897 01c3 02       		.uleb128 0x2
 898 01c4 91       		.byte	0x91
 899 01c5 70       		.sleb128 -16
 900 01c6 00       		.byte	0
 901 01c7 00       		.byte	0
 902 01c8 00       		.byte	0
 903 01c9 0C       		.uleb128 0xc
 904 01ca DF000000 		.4byte	0xdf
 905 01ce D9010000 		.4byte	0x1d9
 906 01d2 0D       		.uleb128 0xd
 907 01d3 ED000000 		.4byte	0xed
 908 01d7 0F       		.byte	0xf
 909 01d8 00       		.byte	0
 910 01d9 0E       		.uleb128 0xe
 911 01da C9010000 		.4byte	.LASF50
 912 01de 01       		.byte	0x1
 913 01df B2       		.byte	0xb2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 21


 914 01e0 00000000 		.4byte	.LFB66
 915 01e4 F0000000 		.4byte	.LFE66-.LFB66
 916 01e8 01       		.uleb128 0x1
 917 01e9 9C       		.byte	0x9c
 918 01ea 35020000 		.4byte	0x235
 919 01ee 0F       		.uleb128 0xf
 920 01ef 0A000000 		.4byte	.LASF51
 921 01f3 01       		.byte	0x1
 922 01f4 B2       		.byte	0xb2
 923 01f5 8C000000 		.4byte	0x8c
 924 01f9 02       		.uleb128 0x2
 925 01fa 91       		.byte	0x91
 926 01fb 5F       		.sleb128 -33
 927 01fc 08       		.uleb128 0x8
 928 01fd 42030000 		.4byte	.LASF28
 929 0201 01       		.byte	0x1
 930 0202 B4       		.byte	0xb4
 931 0203 C5000000 		.4byte	0xc5
 932 0207 02       		.uleb128 0x2
 933 0208 91       		.byte	0x91
 934 0209 68       		.sleb128 -24
 935 020a 08       		.uleb128 0x8
 936 020b EE010000 		.4byte	.LASF29
 937 020f 01       		.byte	0x1
 938 0210 B5       		.byte	0xb5
 939 0211 C5000000 		.4byte	0xc5
 940 0215 02       		.uleb128 0x2
 941 0216 91       		.byte	0x91
 942 0217 64       		.sleb128 -28
 943 0218 08       		.uleb128 0x8
 944 0219 74010000 		.4byte	.LASF30
 945 021d 01       		.byte	0x1
 946 021e B6       		.byte	0xb6
 947 021f C5000000 		.4byte	0xc5
 948 0223 02       		.uleb128 0x2
 949 0224 91       		.byte	0x91
 950 0225 6C       		.sleb128 -20
 951 0226 08       		.uleb128 0x8
 952 0227 CE020000 		.4byte	.LASF31
 953 022b 01       		.byte	0x1
 954 022c B7       		.byte	0xb7
 955 022d C5000000 		.4byte	0xc5
 956 0231 02       		.uleb128 0x2
 957 0232 91       		.byte	0x91
 958 0233 60       		.sleb128 -32
 959 0234 00       		.byte	0
 960 0235 0C       		.uleb128 0xc
 961 0236 B9000000 		.4byte	0xb9
 962 023a 45020000 		.4byte	0x245
 963 023e 0D       		.uleb128 0xd
 964 023f ED000000 		.4byte	0xed
 965 0243 09       		.byte	0x9
 966 0244 00       		.byte	0
 967 0245 10       		.uleb128 0x10
 968 0246 2D010000 		.4byte	.LASF32
 969 024a 05       		.byte	0x5
 970 024b C202     		.2byte	0x2c2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 22


 971 024d 35020000 		.4byte	0x235
 972 0251 10       		.uleb128 0x10
 973 0252 2A030000 		.4byte	.LASF33
 974 0256 06       		.byte	0x6
 975 0257 0F01     		.2byte	0x10f
 976 0259 35020000 		.4byte	0x235
 977 025d 10       		.uleb128 0x10
 978 025e 0E020000 		.4byte	.LASF34
 979 0262 07       		.byte	0x7
 980 0263 1207     		.2byte	0x712
 981 0265 69020000 		.4byte	0x269
 982 0269 11       		.uleb128 0x11
 983 026a A2000000 		.4byte	0xa2
 984 026e 0C       		.uleb128 0xc
 985 026f 8C000000 		.4byte	0x8c
 986 0273 7E020000 		.4byte	0x27e
 987 0277 0D       		.uleb128 0xd
 988 0278 ED000000 		.4byte	0xed
 989 027c 00       		.byte	0
 990 027d 00       		.byte	0
 991 027e 12       		.uleb128 0x12
 992 027f FC020000 		.4byte	.LASF35
 993 0283 01       		.byte	0x1
 994 0284 35       		.byte	0x35
 995 0285 6E020000 		.4byte	0x26e
 996 0289 05       		.uleb128 0x5
 997 028a 03       		.byte	0x3
 998 028b 00000000 		.4byte	stringCapSensorsOnOff
 999 028f 0C       		.uleb128 0xc
 1000 0290 8C000000 		.4byte	0x8c
 1001 0294 9F020000 		.4byte	0x29f
 1002 0298 0D       		.uleb128 0xd
 1003 0299 ED000000 		.4byte	0xed
 1004 029d 0F       		.byte	0xf
 1005 029e 00       		.byte	0
 1006 029f 12       		.uleb128 0x12
 1007 02a0 E8020000 		.4byte	.LASF36
 1008 02a4 01       		.byte	0x1
 1009 02a5 36       		.byte	0x36
 1010 02a6 8F020000 		.4byte	0x28f
 1011 02aa 05       		.uleb128 0x5
 1012 02ab 03       		.byte	0x3
 1013 02ac 00000000 		.4byte	stringCapSensorsRaw
 1014 02b0 0C       		.uleb128 0xc
 1015 02b1 8C000000 		.4byte	0x8c
 1016 02b5 C0020000 		.4byte	0x2c0
 1017 02b9 0D       		.uleb128 0xd
 1018 02ba ED000000 		.4byte	0xed
 1019 02be 0B       		.byte	0xb
 1020 02bf 00       		.byte	0
 1021 02c0 12       		.uleb128 0x12
 1022 02c1 81010000 		.4byte	.LASF37
 1023 02c5 01       		.byte	0x1
 1024 02c6 37       		.byte	0x37
 1025 02c7 B0020000 		.4byte	0x2b0
 1026 02cb 05       		.uleb128 0x5
 1027 02cc 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 23


 1028 02cd 00000000 		.4byte	thresholdArray
 1029 02d1 0C       		.uleb128 0xc
 1030 02d2 AD000000 		.4byte	0xad
 1031 02d6 E1020000 		.4byte	0x2e1
 1032 02da 0D       		.uleb128 0xd
 1033 02db ED000000 		.4byte	0xed
 1034 02df 07       		.byte	0x7
 1035 02e0 00       		.byte	0
 1036 02e1 12       		.uleb128 0x12
 1037 02e2 9E010000 		.4byte	.LASF38
 1038 02e6 01       		.byte	0x1
 1039 02e7 38       		.byte	0x38
 1040 02e8 D1020000 		.4byte	0x2d1
 1041 02ec 05       		.uleb128 0x5
 1042 02ed 03       		.byte	0x3
 1043 02ee 00000000 		.4byte	barArray
 1044 02f2 0C       		.uleb128 0xc
 1045 02f3 AD000000 		.4byte	0xad
 1046 02f7 02030000 		.4byte	0x302
 1047 02fb 0D       		.uleb128 0xd
 1048 02fc ED000000 		.4byte	0xed
 1049 0300 03       		.byte	0x3
 1050 0301 00       		.byte	0
 1051 0302 12       		.uleb128 0x12
 1052 0303 58020000 		.4byte	.LASF39
 1053 0307 01       		.byte	0x1
 1054 0308 39       		.byte	0x39
 1055 0309 F2020000 		.4byte	0x2f2
 1056 030d 05       		.uleb128 0x5
 1057 030e 03       		.byte	0x3
 1058 030f 00000000 		.4byte	touchArray
 1059 0313 0C       		.uleb128 0xc
 1060 0314 A2000000 		.4byte	0xa2
 1061 0318 23030000 		.4byte	0x323
 1062 031c 0D       		.uleb128 0xd
 1063 031d ED000000 		.4byte	0xed
 1064 0321 01       		.byte	0x1
 1065 0322 00       		.byte	0
 1066 0323 12       		.uleb128 0x12
 1067 0324 B5010000 		.4byte	.LASF40
 1068 0328 01       		.byte	0x1
 1069 0329 3A       		.byte	0x3a
 1070 032a 13030000 		.4byte	0x313
 1071 032e 05       		.uleb128 0x5
 1072 032f 03       		.byte	0x3
 1073 0330 00000000 		.4byte	linearPotValue32Bit
 1074 0334 13       		.uleb128 0x13
 1075 0335 6900     		.ascii	"i\000"
 1076 0337 01       		.byte	0x1
 1077 0338 3B       		.byte	0x3b
 1078 0339 8C000000 		.4byte	0x8c
 1079 033d 05       		.uleb128 0x5
 1080 033e 03       		.byte	0x3
 1081 033f 00000000 		.4byte	i
 1082 0343 12       		.uleb128 0x12
 1083 0344 96010000 		.4byte	.LASF41
 1084 0348 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 24


 1085 0349 3C       		.byte	0x3c
 1086 034a 8C000000 		.4byte	0x8c
 1087 034e 05       		.uleb128 0x5
 1088 034f 03       		.byte	0x3
 1089 0350 00000000 		.4byte	counter
 1090 0354 12       		.uleb128 0x12
 1091 0355 8F020000 		.4byte	.LASF42
 1092 0359 01       		.byte	0x1
 1093 035a 3D       		.byte	0x3d
 1094 035b A2000000 		.4byte	0xa2
 1095 035f 05       		.uleb128 0x5
 1096 0360 03       		.byte	0x3
 1097 0361 00000000 		.4byte	temper
 1098 0365 0C       		.uleb128 0xc
 1099 0366 97000000 		.4byte	0x97
 1100 036a 75030000 		.4byte	0x375
 1101 036e 0D       		.uleb128 0xd
 1102 036f ED000000 		.4byte	0xed
 1103 0373 0B       		.byte	0xb
 1104 0374 00       		.byte	0
 1105 0375 12       		.uleb128 0x12
 1106 0376 18010000 		.4byte	.LASF43
 1107 037a 01       		.byte	0x1
 1108 037b 46       		.byte	0x46
 1109 037c 65030000 		.4byte	0x365
 1110 0380 05       		.uleb128 0x5
 1111 0381 03       		.byte	0x3
 1112 0382 00000000 		.4byte	ADC_values
 1113 0386 0C       		.uleb128 0xc
 1114 0387 D1000000 		.4byte	0xd1
 1115 038b 96030000 		.4byte	0x396
 1116 038f 0D       		.uleb128 0xd
 1117 0390 ED000000 		.4byte	0xed
 1118 0394 01       		.byte	0x1
 1119 0395 00       		.byte	0
 1120 0396 12       		.uleb128 0x12
 1121 0397 40010000 		.4byte	.LASF44
 1122 039b 01       		.byte	0x1
 1123 039c B1       		.byte	0xb1
 1124 039d 86030000 		.4byte	0x386
 1125 03a1 05       		.uleb128 0x5
 1126 03a2 03       		.byte	0x3
 1127 03a3 00000000 		.4byte	resistorRatio
 1128 03a7 00       		.byte	0
 1129              		.section	.debug_abbrev,"",%progbits
 1130              	.Ldebug_abbrev0:
 1131 0000 01       		.uleb128 0x1
 1132 0001 11       		.uleb128 0x11
 1133 0002 01       		.byte	0x1
 1134 0003 25       		.uleb128 0x25
 1135 0004 0E       		.uleb128 0xe
 1136 0005 13       		.uleb128 0x13
 1137 0006 0B       		.uleb128 0xb
 1138 0007 03       		.uleb128 0x3
 1139 0008 0E       		.uleb128 0xe
 1140 0009 1B       		.uleb128 0x1b
 1141 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 25


 1142 000b 55       		.uleb128 0x55
 1143 000c 17       		.uleb128 0x17
 1144 000d 11       		.uleb128 0x11
 1145 000e 01       		.uleb128 0x1
 1146 000f 10       		.uleb128 0x10
 1147 0010 17       		.uleb128 0x17
 1148 0011 00       		.byte	0
 1149 0012 00       		.byte	0
 1150 0013 02       		.uleb128 0x2
 1151 0014 24       		.uleb128 0x24
 1152 0015 00       		.byte	0
 1153 0016 0B       		.uleb128 0xb
 1154 0017 0B       		.uleb128 0xb
 1155 0018 3E       		.uleb128 0x3e
 1156 0019 0B       		.uleb128 0xb
 1157 001a 03       		.uleb128 0x3
 1158 001b 0E       		.uleb128 0xe
 1159 001c 00       		.byte	0
 1160 001d 00       		.byte	0
 1161 001e 03       		.uleb128 0x3
 1162 001f 16       		.uleb128 0x16
 1163 0020 00       		.byte	0
 1164 0021 03       		.uleb128 0x3
 1165 0022 0E       		.uleb128 0xe
 1166 0023 3A       		.uleb128 0x3a
 1167 0024 0B       		.uleb128 0xb
 1168 0025 3B       		.uleb128 0x3b
 1169 0026 0B       		.uleb128 0xb
 1170 0027 49       		.uleb128 0x49
 1171 0028 13       		.uleb128 0x13
 1172 0029 00       		.byte	0
 1173 002a 00       		.byte	0
 1174 002b 04       		.uleb128 0x4
 1175 002c 24       		.uleb128 0x24
 1176 002d 00       		.byte	0
 1177 002e 0B       		.uleb128 0xb
 1178 002f 0B       		.uleb128 0xb
 1179 0030 3E       		.uleb128 0x3e
 1180 0031 0B       		.uleb128 0xb
 1181 0032 03       		.uleb128 0x3
 1182 0033 08       		.uleb128 0x8
 1183 0034 00       		.byte	0
 1184 0035 00       		.byte	0
 1185 0036 05       		.uleb128 0x5
 1186 0037 16       		.uleb128 0x16
 1187 0038 00       		.byte	0
 1188 0039 03       		.uleb128 0x3
 1189 003a 0E       		.uleb128 0xe
 1190 003b 3A       		.uleb128 0x3a
 1191 003c 0B       		.uleb128 0xb
 1192 003d 3B       		.uleb128 0x3b
 1193 003e 05       		.uleb128 0x5
 1194 003f 49       		.uleb128 0x49
 1195 0040 13       		.uleb128 0x13
 1196 0041 00       		.byte	0
 1197 0042 00       		.byte	0
 1198 0043 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 26


 1199 0044 2E       		.uleb128 0x2e
 1200 0045 00       		.byte	0
 1201 0046 3F       		.uleb128 0x3f
 1202 0047 19       		.uleb128 0x19
 1203 0048 03       		.uleb128 0x3
 1204 0049 0E       		.uleb128 0xe
 1205 004a 3A       		.uleb128 0x3a
 1206 004b 0B       		.uleb128 0xb
 1207 004c 3B       		.uleb128 0x3b
 1208 004d 0B       		.uleb128 0xb
 1209 004e 27       		.uleb128 0x27
 1210 004f 19       		.uleb128 0x19
 1211 0050 11       		.uleb128 0x11
 1212 0051 01       		.uleb128 0x1
 1213 0052 12       		.uleb128 0x12
 1214 0053 06       		.uleb128 0x6
 1215 0054 40       		.uleb128 0x40
 1216 0055 18       		.uleb128 0x18
 1217 0056 9742     		.uleb128 0x2117
 1218 0058 19       		.uleb128 0x19
 1219 0059 00       		.byte	0
 1220 005a 00       		.byte	0
 1221 005b 07       		.uleb128 0x7
 1222 005c 2E       		.uleb128 0x2e
 1223 005d 01       		.byte	0x1
 1224 005e 3F       		.uleb128 0x3f
 1225 005f 19       		.uleb128 0x19
 1226 0060 03       		.uleb128 0x3
 1227 0061 0E       		.uleb128 0xe
 1228 0062 3A       		.uleb128 0x3a
 1229 0063 0B       		.uleb128 0xb
 1230 0064 3B       		.uleb128 0x3b
 1231 0065 0B       		.uleb128 0xb
 1232 0066 27       		.uleb128 0x27
 1233 0067 19       		.uleb128 0x19
 1234 0068 49       		.uleb128 0x49
 1235 0069 13       		.uleb128 0x13
 1236 006a 11       		.uleb128 0x11
 1237 006b 01       		.uleb128 0x1
 1238 006c 12       		.uleb128 0x12
 1239 006d 06       		.uleb128 0x6
 1240 006e 40       		.uleb128 0x40
 1241 006f 18       		.uleb128 0x18
 1242 0070 9642     		.uleb128 0x2116
 1243 0072 19       		.uleb128 0x19
 1244 0073 01       		.uleb128 0x1
 1245 0074 13       		.uleb128 0x13
 1246 0075 00       		.byte	0
 1247 0076 00       		.byte	0
 1248 0077 08       		.uleb128 0x8
 1249 0078 34       		.uleb128 0x34
 1250 0079 00       		.byte	0
 1251 007a 03       		.uleb128 0x3
 1252 007b 0E       		.uleb128 0xe
 1253 007c 3A       		.uleb128 0x3a
 1254 007d 0B       		.uleb128 0xb
 1255 007e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 27


 1256 007f 0B       		.uleb128 0xb
 1257 0080 49       		.uleb128 0x49
 1258 0081 13       		.uleb128 0x13
 1259 0082 02       		.uleb128 0x2
 1260 0083 18       		.uleb128 0x18
 1261 0084 00       		.byte	0
 1262 0085 00       		.byte	0
 1263 0086 09       		.uleb128 0x9
 1264 0087 0B       		.uleb128 0xb
 1265 0088 01       		.byte	0x1
 1266 0089 11       		.uleb128 0x11
 1267 008a 01       		.uleb128 0x1
 1268 008b 12       		.uleb128 0x12
 1269 008c 06       		.uleb128 0x6
 1270 008d 00       		.byte	0
 1271 008e 00       		.byte	0
 1272 008f 0A       		.uleb128 0xa
 1273 0090 0B       		.uleb128 0xb
 1274 0091 01       		.byte	0x1
 1275 0092 11       		.uleb128 0x11
 1276 0093 01       		.uleb128 0x1
 1277 0094 12       		.uleb128 0x12
 1278 0095 06       		.uleb128 0x6
 1279 0096 01       		.uleb128 0x1
 1280 0097 13       		.uleb128 0x13
 1281 0098 00       		.byte	0
 1282 0099 00       		.byte	0
 1283 009a 0B       		.uleb128 0xb
 1284 009b 34       		.uleb128 0x34
 1285 009c 00       		.byte	0
 1286 009d 03       		.uleb128 0x3
 1287 009e 08       		.uleb128 0x8
 1288 009f 3A       		.uleb128 0x3a
 1289 00a0 0B       		.uleb128 0xb
 1290 00a1 3B       		.uleb128 0x3b
 1291 00a2 0B       		.uleb128 0xb
 1292 00a3 49       		.uleb128 0x49
 1293 00a4 13       		.uleb128 0x13
 1294 00a5 02       		.uleb128 0x2
 1295 00a6 18       		.uleb128 0x18
 1296 00a7 00       		.byte	0
 1297 00a8 00       		.byte	0
 1298 00a9 0C       		.uleb128 0xc
 1299 00aa 01       		.uleb128 0x1
 1300 00ab 01       		.byte	0x1
 1301 00ac 49       		.uleb128 0x49
 1302 00ad 13       		.uleb128 0x13
 1303 00ae 01       		.uleb128 0x1
 1304 00af 13       		.uleb128 0x13
 1305 00b0 00       		.byte	0
 1306 00b1 00       		.byte	0
 1307 00b2 0D       		.uleb128 0xd
 1308 00b3 21       		.uleb128 0x21
 1309 00b4 00       		.byte	0
 1310 00b5 49       		.uleb128 0x49
 1311 00b6 13       		.uleb128 0x13
 1312 00b7 2F       		.uleb128 0x2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 28


 1313 00b8 0B       		.uleb128 0xb
 1314 00b9 00       		.byte	0
 1315 00ba 00       		.byte	0
 1316 00bb 0E       		.uleb128 0xe
 1317 00bc 2E       		.uleb128 0x2e
 1318 00bd 01       		.byte	0x1
 1319 00be 3F       		.uleb128 0x3f
 1320 00bf 19       		.uleb128 0x19
 1321 00c0 03       		.uleb128 0x3
 1322 00c1 0E       		.uleb128 0xe
 1323 00c2 3A       		.uleb128 0x3a
 1324 00c3 0B       		.uleb128 0xb
 1325 00c4 3B       		.uleb128 0x3b
 1326 00c5 0B       		.uleb128 0xb
 1327 00c6 27       		.uleb128 0x27
 1328 00c7 19       		.uleb128 0x19
 1329 00c8 11       		.uleb128 0x11
 1330 00c9 01       		.uleb128 0x1
 1331 00ca 12       		.uleb128 0x12
 1332 00cb 06       		.uleb128 0x6
 1333 00cc 40       		.uleb128 0x40
 1334 00cd 18       		.uleb128 0x18
 1335 00ce 9642     		.uleb128 0x2116
 1336 00d0 19       		.uleb128 0x19
 1337 00d1 01       		.uleb128 0x1
 1338 00d2 13       		.uleb128 0x13
 1339 00d3 00       		.byte	0
 1340 00d4 00       		.byte	0
 1341 00d5 0F       		.uleb128 0xf
 1342 00d6 05       		.uleb128 0x5
 1343 00d7 00       		.byte	0
 1344 00d8 03       		.uleb128 0x3
 1345 00d9 0E       		.uleb128 0xe
 1346 00da 3A       		.uleb128 0x3a
 1347 00db 0B       		.uleb128 0xb
 1348 00dc 3B       		.uleb128 0x3b
 1349 00dd 0B       		.uleb128 0xb
 1350 00de 49       		.uleb128 0x49
 1351 00df 13       		.uleb128 0x13
 1352 00e0 02       		.uleb128 0x2
 1353 00e1 18       		.uleb128 0x18
 1354 00e2 00       		.byte	0
 1355 00e3 00       		.byte	0
 1356 00e4 10       		.uleb128 0x10
 1357 00e5 34       		.uleb128 0x34
 1358 00e6 00       		.byte	0
 1359 00e7 03       		.uleb128 0x3
 1360 00e8 0E       		.uleb128 0xe
 1361 00e9 3A       		.uleb128 0x3a
 1362 00ea 0B       		.uleb128 0xb
 1363 00eb 3B       		.uleb128 0x3b
 1364 00ec 05       		.uleb128 0x5
 1365 00ed 49       		.uleb128 0x49
 1366 00ee 13       		.uleb128 0x13
 1367 00ef 3F       		.uleb128 0x3f
 1368 00f0 19       		.uleb128 0x19
 1369 00f1 3C       		.uleb128 0x3c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 29


 1370 00f2 19       		.uleb128 0x19
 1371 00f3 00       		.byte	0
 1372 00f4 00       		.byte	0
 1373 00f5 11       		.uleb128 0x11
 1374 00f6 35       		.uleb128 0x35
 1375 00f7 00       		.byte	0
 1376 00f8 49       		.uleb128 0x49
 1377 00f9 13       		.uleb128 0x13
 1378 00fa 00       		.byte	0
 1379 00fb 00       		.byte	0
 1380 00fc 12       		.uleb128 0x12
 1381 00fd 34       		.uleb128 0x34
 1382 00fe 00       		.byte	0
 1383 00ff 03       		.uleb128 0x3
 1384 0100 0E       		.uleb128 0xe
 1385 0101 3A       		.uleb128 0x3a
 1386 0102 0B       		.uleb128 0xb
 1387 0103 3B       		.uleb128 0x3b
 1388 0104 0B       		.uleb128 0xb
 1389 0105 49       		.uleb128 0x49
 1390 0106 13       		.uleb128 0x13
 1391 0107 3F       		.uleb128 0x3f
 1392 0108 19       		.uleb128 0x19
 1393 0109 02       		.uleb128 0x2
 1394 010a 18       		.uleb128 0x18
 1395 010b 00       		.byte	0
 1396 010c 00       		.byte	0
 1397 010d 13       		.uleb128 0x13
 1398 010e 34       		.uleb128 0x34
 1399 010f 00       		.byte	0
 1400 0110 03       		.uleb128 0x3
 1401 0111 08       		.uleb128 0x8
 1402 0112 3A       		.uleb128 0x3a
 1403 0113 0B       		.uleb128 0xb
 1404 0114 3B       		.uleb128 0x3b
 1405 0115 0B       		.uleb128 0xb
 1406 0116 49       		.uleb128 0x49
 1407 0117 13       		.uleb128 0x13
 1408 0118 3F       		.uleb128 0x3f
 1409 0119 19       		.uleb128 0x19
 1410 011a 02       		.uleb128 0x2
 1411 011b 18       		.uleb128 0x18
 1412 011c 00       		.byte	0
 1413 011d 00       		.byte	0
 1414 011e 00       		.byte	0
 1415              		.section	.debug_aranges,"",%progbits
 1416 0000 2C000000 		.4byte	0x2c
 1417 0004 0200     		.2byte	0x2
 1418 0006 00000000 		.4byte	.Ldebug_info0
 1419 000a 04       		.byte	0x4
 1420 000b 00       		.byte	0
 1421 000c 0000     		.2byte	0
 1422 000e 0000     		.2byte	0
 1423 0010 00000000 		.4byte	.LFB64
 1424 0014 0C000000 		.4byte	.LFE64-.LFB64
 1425 0018 00000000 		.4byte	.LFB65
 1426 001c C4020000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 30


 1427 0020 00000000 		.4byte	.LFB66
 1428 0024 F0000000 		.4byte	.LFE66-.LFB66
 1429 0028 00000000 		.4byte	0
 1430 002c 00000000 		.4byte	0
 1431              		.section	.debug_ranges,"",%progbits
 1432              	.Ldebug_ranges0:
 1433 0000 00000000 		.4byte	.LFB64
 1434 0004 0C000000 		.4byte	.LFE64
 1435 0008 00000000 		.4byte	.LFB65
 1436 000c C4020000 		.4byte	.LFE65
 1437 0010 00000000 		.4byte	.LFB66
 1438 0014 F0000000 		.4byte	.LFE66
 1439 0018 00000000 		.4byte	0
 1440 001c 00000000 		.4byte	0
 1441              		.section	.debug_line,"",%progbits
 1442              	.Ldebug_line0:
 1443 0000 71020000 		.section	.debug_str,"MS",%progbits,1
 1443      02006D01 
 1443      00000201 
 1443      FB0E0D00 
 1443      01010101 
 1444              	.LASF3:
 1445 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1445      6E74385F 
 1445      7400
 1446              	.LASF51:
 1447 000a 6368616E 		.ascii	"channel\000"
 1447      6E656C00 
 1448              	.LASF45:
 1449 0012 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1449      43313120 
 1449      352E342E 
 1449      31203230 
 1449      31363036 
 1450 0045 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1450      20726576 
 1450      6973696F 
 1450      6E203233 
 1450      37373135 
 1451 0078 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1451      66756E63 
 1451      74696F6E 
 1451      2D736563 
 1451      74696F6E 
 1452              	.LASF47:
 1453 00a0 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 1453      73657273 
 1453      5C4A6566 
 1453      66536E79 
 1453      6465725C 
 1454 00ce 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb\\CE210514_P"
 1454      355F656C 
 1454      65637472 
 1454      6F737465 
 1454      656C5F73 
 1455 0100 534F4333 		.ascii	"SOC3_5_Thermistor.cydsn\000"
 1455      5F355F54 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 31


 1455      6865726D 
 1455      6973746F 
 1455      722E6379 
 1456              	.LASF43:
 1457 0118 4144435F 		.ascii	"ADC_values\000"
 1457      76616C75 
 1457      657300
 1458              	.LASF6:
 1459 0123 5F5F696E 		.ascii	"__int32_t\000"
 1459      7433325F 
 1459      7400
 1460              	.LASF32:
 1461 012d 43617053 		.ascii	"CapSense_sensorRaw\000"
 1461      656E7365 
 1461      5F73656E 
 1461      736F7252 
 1461      617700
 1462              	.LASF44:
 1463 0140 72657369 		.ascii	"resistorRatio\000"
 1463      73746F72 
 1463      52617469 
 1463      6F00
 1464              	.LASF26:
 1465 014e 69735365 		.ascii	"isSensorOn1\000"
 1465      6E736F72 
 1465      4F6E3100 
 1466              	.LASF5:
 1467 015a 73686F72 		.ascii	"short unsigned int\000"
 1467      7420756E 
 1467      7369676E 
 1467      65642069 
 1467      6E7400
 1468              	.LASF19:
 1469 016d 646F7562 		.ascii	"double\000"
 1469      6C6500
 1470              	.LASF30:
 1471 0174 69526573 		.ascii	"iRes\000"
 1471      00
 1472              	.LASF14:
 1473 0179 696E7433 		.ascii	"int32_t\000"
 1473      325F7400 
 1474              	.LASF37:
 1475 0181 74687265 		.ascii	"thresholdArray\000"
 1475      73686F6C 
 1475      64417272 
 1475      617900
 1476              	.LASF18:
 1477 0190 666C6F61 		.ascii	"float\000"
 1477      7400
 1478              	.LASF41:
 1479 0196 636F756E 		.ascii	"counter\000"
 1479      74657200 
 1480              	.LASF38:
 1481 019e 62617241 		.ascii	"barArray\000"
 1481      72726179 
 1481      00
 1482              	.LASF1:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 32


 1483 01a7 756E7369 		.ascii	"unsigned char\000"
 1483      676E6564 
 1483      20636861 
 1483      7200
 1484              	.LASF40:
 1485 01b5 6C696E65 		.ascii	"linearPotValue32Bit\000"
 1485      6172506F 
 1485      7456616C 
 1485      75653332 
 1485      42697400 
 1486              	.LASF50:
 1487 01c9 7363616E 		.ascii	"scanLinearResistor\000"
 1487      4C696E65 
 1487      61725265 
 1487      73697374 
 1487      6F7200
 1488              	.LASF8:
 1489 01dc 6C6F6E67 		.ascii	"long unsigned int\000"
 1489      20756E73 
 1489      69676E65 
 1489      6420696E 
 1489      7400
 1490              	.LASF29:
 1491 01ee 69567265 		.ascii	"iVref\000"
 1491      6600
 1492              	.LASF15:
 1493 01f4 75696E74 		.ascii	"uint8\000"
 1493      3800
 1494              	.LASF27:
 1495 01fa 69735365 		.ascii	"isSensorOn\000"
 1495      6E736F72 
 1495      4F6E00
 1496              	.LASF7:
 1497 0205 6C6F6E67 		.ascii	"long int\000"
 1497      20696E74 
 1497      00
 1498              	.LASF34:
 1499 020e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1499      52784275 
 1499      66666572 
 1499      00
 1500              	.LASF25:
 1501 021b 62797465 		.ascii	"byteCounter\000"
 1501      436F756E 
 1501      74657200 
 1502              	.LASF4:
 1503 0227 5F5F7569 		.ascii	"__uint16_t\000"
 1503      6E743136 
 1503      5F7400
 1504              	.LASF23:
 1505 0232 7072696E 		.ascii	"printBuf\000"
 1505      74427566 
 1505      00
 1506              	.LASF48:
 1507 023b 62757474 		.ascii	"button_press_ISR\000"
 1507      6F6E5F70 
 1507      72657373 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 33


 1507      5F495352 
 1507      00
 1508              	.LASF49:
 1509 024c 6D61696E 		.ascii	"main\000"
 1509      00
 1510              	.LASF16:
 1511 0251 75696E74 		.ascii	"uint16\000"
 1511      313600
 1512              	.LASF39:
 1513 0258 746F7563 		.ascii	"touchArray\000"
 1513      68417272 
 1513      617900
 1514              	.LASF11:
 1515 0263 756E7369 		.ascii	"unsigned int\000"
 1515      676E6564 
 1515      20696E74 
 1515      00
 1516              	.LASF10:
 1517 0270 6C6F6E67 		.ascii	"long long unsigned int\000"
 1517      206C6F6E 
 1517      6720756E 
 1517      7369676E 
 1517      65642069 
 1518              	.LASF12:
 1519 0287 75696E74 		.ascii	"uint8_t\000"
 1519      385F7400 
 1520              	.LASF42:
 1521 028f 74656D70 		.ascii	"temper\000"
 1521      657200
 1522              	.LASF24:
 1523 0296 6D794172 		.ascii	"myArrayCounter\000"
 1523      72617943 
 1523      6F756E74 
 1523      657200
 1524              	.LASF17:
 1525 02a5 696E7433 		.ascii	"int32\000"
 1525      3200
 1526              	.LASF22:
 1527 02ab 73697A65 		.ascii	"sizetype\000"
 1527      74797065 
 1527      00
 1528              	.LASF9:
 1529 02b4 6C6F6E67 		.ascii	"long long int\000"
 1529      206C6F6E 
 1529      6720696E 
 1529      7400
 1530              	.LASF46:
 1531 02c2 6D61696E 		.ascii	"main.c\000"
 1531      2E6300
 1532              	.LASF20:
 1533 02c9 63686172 		.ascii	"char\000"
 1533      00
 1534              	.LASF31:
 1535 02ce 6F666673 		.ascii	"offset\000"
 1535      657400
 1536              	.LASF2:
 1537 02d5 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqAMrR0.s 			page 34


 1537      7420696E 
 1537      7400
 1538              	.LASF13:
 1539 02df 75696E74 		.ascii	"uint16_t\000"
 1539      31365F74 
 1539      00
 1540              	.LASF36:
 1541 02e8 73747269 		.ascii	"stringCapSensorsRaw\000"
 1541      6E674361 
 1541      7053656E 
 1541      736F7273 
 1541      52617700 
 1542              	.LASF35:
 1543 02fc 73747269 		.ascii	"stringCapSensorsOnOff\000"
 1543      6E674361 
 1543      7053656E 
 1543      736F7273 
 1543      4F6E4F66 
 1544              	.LASF21:
 1545 0312 6C6F6E67 		.ascii	"long double\000"
 1545      20646F75 
 1545      626C6500 
 1546              	.LASF0:
 1547 031e 7369676E 		.ascii	"signed char\000"
 1547      65642063 
 1547      68617200 
 1548              	.LASF33:
 1549 032a 43617053 		.ascii	"CapSense_sensorBaseline\000"
 1549      656E7365 
 1549      5F73656E 
 1549      736F7242 
 1549      6173656C 
 1550              	.LASF28:
 1551 0342 69567468 		.ascii	"iVtherm\000"
 1551      65726D00 
 1552              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
