ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_csv,1,1
  23              		.comm	CapSense_sensorIndex,1,1
  24              		.comm	CapSense_sensorRaw,20,4
  25              		.global	CapSense_sensorEnableMask
  26              		.data
  27              		.align	2
  28              		.type	CapSense_sensorEnableMask, %object
  29              		.size	CapSense_sensorEnableMask, 2
  30              	CapSense_sensorEnableMask:
  31 0000 FF       		.byte	-1
  32 0001 03       		.byte	3
  33              		.global	CapSense_pcTable
  34              		.section	.rodata
  35              		.align	2
  36              		.type	CapSense_pcTable, %object
  37              		.size	CapSense_pcTable, 40
  38              	CapSense_pcTable:
  39 0000 17500040 		.word	1073762327
  40 0004 16500040 		.word	1073762326
  41 0008 15500040 		.word	1073762325
  42 000c 14500040 		.word	1073762324
  43 0010 13500040 		.word	1073762323
  44 0014 34500040 		.word	1073762356
  45 0018 35500040 		.word	1073762357
  46 001c 36500040 		.word	1073762358
  47 0020 37500040 		.word	1073762359
  48 0024 10500040 		.word	1073762320
  49              		.global	CapSense_portTable
  50              		.align	2
  51              		.type	CapSense_portTable, %object
  52              		.size	CapSense_portTable, 10
  53              	CapSense_portTable:
  54 0028 02       		.byte	2
  55 0029 02       		.byte	2
  56 002a 02       		.byte	2
  57 002b 02       		.byte	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 2


  58 002c 02       		.byte	2
  59 002d 06       		.byte	6
  60 002e 06       		.byte	6
  61 002f 06       		.byte	6
  62 0030 06       		.byte	6
  63 0031 02       		.byte	2
  64              		.global	CapSense_maskTable
  65 0032 0000     		.align	2
  66              		.type	CapSense_maskTable, %object
  67              		.size	CapSense_maskTable, 10
  68              	CapSense_maskTable:
  69 0034 80       		.byte	-128
  70 0035 40       		.byte	64
  71 0036 20       		.byte	32
  72 0037 10       		.byte	16
  73 0038 08       		.byte	8
  74 0039 10       		.byte	16
  75 003a 20       		.byte	32
  76 003b 40       		.byte	64
  77 003c 80       		.byte	-128
  78 003d 01       		.byte	1
  79              		.global	CapSense_csTable
  80 003e 0000     		.align	2
  81              		.type	CapSense_csTable, %object
  82              		.size	CapSense_csTable, 32
  83              	CapSense_csTable:
  84 0040 06520040 		.word	1073762822
  85 0044 0E520040 		.word	1073762830
  86 0048 16520040 		.word	1073762838
  87 004c 1E520040 		.word	1073762846
  88 0050 26520040 		.word	1073762854
  89 0054 2E520040 		.word	1073762862
  90 0058 36520040 		.word	1073762870
  91 005c 7E520040 		.word	1073762942
  92              		.global	CapSense_idacSettings
  93              		.data
  94 0002 0000     		.align	2
  95              		.type	CapSense_idacSettings, %object
  96              		.size	CapSense_idacSettings, 10
  97              	CapSense_idacSettings:
  98 0004 32       		.byte	50
  99 0005 32       		.byte	50
 100 0006 32       		.byte	50
 101 0007 32       		.byte	50
 102 0008 32       		.byte	50
 103 0009 32       		.byte	50
 104 000a 32       		.byte	50
 105 000b 32       		.byte	50
 106 000c 32       		.byte	50
 107 000d 32       		.byte	50
 108              		.global	CapSense_widgetResolution
 109              		.bss
 110 0001 000000   		.align	2
 111              		.type	CapSense_widgetResolution, %object
 112              		.size	CapSense_widgetResolution, 10
 113              	CapSense_widgetResolution:
 114 0004 00000000 		.space	10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 3


 114      00000000 
 114      0000
 115              		.global	CapSense_analogSwitchDivider
 116              		.data
 117              		.type	CapSense_analogSwitchDivider, %object
 118              		.size	CapSense_analogSwitchDivider, 1
 119              	CapSense_analogSwitchDivider:
 120 000e 1E       		.byte	30
 121              		.global	CapSense_widgetNumber
 122              		.section	.rodata
 123              		.align	2
 124              		.type	CapSense_widgetNumber, %object
 125              		.size	CapSense_widgetNumber, 10
 126              	CapSense_widgetNumber:
 127 0060 00       		.byte	0
 128 0061 01       		.byte	1
 129 0062 02       		.byte	2
 130 0063 03       		.byte	3
 131 0064 04       		.byte	4
 132 0065 05       		.byte	5
 133 0066 06       		.byte	6
 134 0067 07       		.byte	7
 135 0068 08       		.byte	8
 136 0069 09       		.byte	9
 137              		.section	.text.CapSense_Init,"ax",%progbits
 138              		.align	2
 139              		.global	CapSense_Init
 140              		.thumb
 141              		.thumb_func
 142              		.type	CapSense_Init, %function
 143              	CapSense_Init:
 144              	.LFB0:
 145              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** 
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 4


  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0xFFu, 0x3u, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button1__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button2__BTN__PC, 
  50:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button3__BTN__PC, 
  51:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button4__BTN__PC, 
  52:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button5__BTN__PC, 
  53:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button6__BTN__PC, 
  54:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button7__BTN__PC, 
  55:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button8__BTN__PC, 
  56:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button9__BTN__PC, 
  57:Generated_Source\PSoC5/CapSense.c **** };
  58:Generated_Source\PSoC5/CapSense.c **** 
  59:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  60:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__PORT, 
  61:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__PORT, 
  62:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button2__BTN__PORT, 
  63:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button3__BTN__PORT, 
  64:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button4__BTN__PORT, 
  65:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button5__BTN__PORT, 
  66:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button6__BTN__PORT, 
  67:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button7__BTN__PORT, 
  68:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button8__BTN__PORT, 
  69:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button9__BTN__PORT, 
  70:Generated_Source\PSoC5/CapSense.c **** };
  71:Generated_Source\PSoC5/CapSense.c **** 
  72:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  73:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__MASK,
  74:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__MASK,
  75:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button2__BTN__MASK,
  76:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button3__BTN__MASK,
  77:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button4__BTN__MASK,
  78:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button5__BTN__MASK,
  79:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button6__BTN__MASK,
  80:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button7__BTN__MASK,
  81:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button8__BTN__MASK,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 5


  82:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button9__BTN__MASK,
  83:Generated_Source\PSoC5/CapSense.c **** };
  84:Generated_Source\PSoC5/CapSense.c **** 
  85:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  86:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  87:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  88:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  89:Generated_Source\PSoC5/CapSense.c **** };
  90:Generated_Source\PSoC5/CapSense.c **** 
  91:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  92:Generated_Source\PSoC5/CapSense.c ****     50u,50u,50u,50u,50u,50u,50u,50u,50u,50u,
  93:Generated_Source\PSoC5/CapSense.c **** };
  94:Generated_Source\PSoC5/CapSense.c **** 
  95:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  96:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  97:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  98:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  99:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 100:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 101:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 102:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 103:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 104:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 105:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 106:Generated_Source\PSoC5/CapSense.c **** };
 107:Generated_Source\PSoC5/CapSense.c **** 
 108:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider = 30u;
 109:Generated_Source\PSoC5/CapSense.c **** 
 110:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
 111:Generated_Source\PSoC5/CapSense.c ****     0u, /* Button0__BTN */
 112:Generated_Source\PSoC5/CapSense.c ****     1u, /* Button1__BTN */
 113:Generated_Source\PSoC5/CapSense.c ****     2u, /* Button2__BTN */
 114:Generated_Source\PSoC5/CapSense.c ****     3u, /* Button3__BTN */
 115:Generated_Source\PSoC5/CapSense.c ****     4u, /* Button4__BTN */
 116:Generated_Source\PSoC5/CapSense.c ****     5u, /* Button5__BTN */
 117:Generated_Source\PSoC5/CapSense.c ****     6u, /* Button6__BTN */
 118:Generated_Source\PSoC5/CapSense.c ****     7u, /* Button7__BTN */
 119:Generated_Source\PSoC5/CapSense.c ****     8u, /* Button8__BTN */
 120:Generated_Source\PSoC5/CapSense.c ****     9u, /* Button9__BTN */
 121:Generated_Source\PSoC5/CapSense.c ****     
 122:Generated_Source\PSoC5/CapSense.c **** };
 123:Generated_Source\PSoC5/CapSense.c **** 
 124:Generated_Source\PSoC5/CapSense.c **** 
 125:Generated_Source\PSoC5/CapSense.c **** 
 126:Generated_Source\PSoC5/CapSense.c **** 
 127:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 128:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
 129:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 130:Generated_Source\PSoC5/CapSense.c **** *
 131:Generated_Source\PSoC5/CapSense.c **** * Summary:
 132:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
 133:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
 134:Generated_Source\PSoC5/CapSense.c **** *
 135:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 136:Generated_Source\PSoC5/CapSense.c **** *  None
 137:Generated_Source\PSoC5/CapSense.c **** *
 138:Generated_Source\PSoC5/CapSense.c **** * Return:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 6


 139:Generated_Source\PSoC5/CapSense.c **** *  None
 140:Generated_Source\PSoC5/CapSense.c **** *
 141:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 142:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 143:Generated_Source\PSoC5/CapSense.c **** {
 146              		.loc 1 143 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 82B0     		sub	sp, sp, #8
 155              		.cfi_def_cfa_offset 16
 156 0004 00AF     		add	r7, sp, #0
 157              		.cfi_def_cfa_register 7
 144:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 145:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 146:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 147:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 148:Generated_Source\PSoC5/CapSense.c ****         
 149:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 150:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 151:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 152:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 153:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 154:Generated_Source\PSoC5/CapSense.c ****            */
 155:Generated_Source\PSoC5/CapSense.c ****     
 156:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 157:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 158              		.loc 1 157 0
 159 0006 FFF7FEFF 		bl	CapSense_ClearSensors
 158:Generated_Source\PSoC5/CapSense.c **** 
 159:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 160:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 161:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 162:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 163:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 164:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 165:Generated_Source\PSoC5/CapSense.c ****                                                
 166:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 167:Generated_Source\PSoC5/CapSense.c ****     #else
 168:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 169:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 170:Generated_Source\PSoC5/CapSense.c **** 
 171:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 172:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 173:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 160              		.loc 1 173 0
 161 000a 0220     		movs	r0, #2
 162 000c FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 174:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 175:Generated_Source\PSoC5/CapSense.c **** 
 176:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 177:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 178:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 7


 179:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 180:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 181:Generated_Source\PSoC5/CapSense.c ****         
 182:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 183:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 184:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 185:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 186:Generated_Source\PSoC5/CapSense.c ****         
 187:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 188:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 189:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 163              		.loc 1 189 0
 164 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 165 0014 0346     		mov	r3, r0
 166 0016 FB71     		strb	r3, [r7, #7]
 190:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 167              		.loc 1 190 0
 168 0018 3B4A     		ldr	r2, .L2
 169 001a 3B4B     		ldr	r3, .L2
 170 001c 1B78     		ldrb	r3, [r3]
 171 001e DBB2     		uxtb	r3, r3
 172 0020 43F00303 		orr	r3, r3, #3
 173 0024 DBB2     		uxtb	r3, r3
 174 0026 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 175              		.loc 1 191 0
 176 0028 384A     		ldr	r2, .L2+4
 177 002a 384B     		ldr	r3, .L2+4
 178 002c 1B78     		ldrb	r3, [r3]
 179 002e DBB2     		uxtb	r3, r3
 180 0030 43F00303 		orr	r3, r3, #3
 181 0034 DBB2     		uxtb	r3, r3
 182 0036 1370     		strb	r3, [r2]
 192:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 183              		.loc 1 192 0
 184 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 185 003a 1846     		mov	r0, r3
 186 003c FFF7FEFF 		bl	CyExitCriticalSection
 193:Generated_Source\PSoC5/CapSense.c ****         
 194:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 195:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 187              		.loc 1 195 0
 188 0040 334B     		ldr	r3, .L2+8
 189 0042 4FF43442 		mov	r2, #46080
 190 0046 1A80     		strh	r2, [r3]	@ movhi
 196:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 197:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 191              		.loc 1 197 0
 192 0048 324B     		ldr	r3, .L2+12
 193 004a 4FF6FF72 		movw	r2, #65535
 194 004e 1A80     		strh	r2, [r3]	@ movhi
 198:Generated_Source\PSoC5/CapSense.c ****                 
 199:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 200:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 201:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 202:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 203:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 8


 204:Generated_Source\PSoC5/CapSense.c ****         
 205:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 206:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 207:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 208:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 209:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 210:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 211:Generated_Source\PSoC5/CapSense.c ****         
 212:Generated_Source\PSoC5/CapSense.c ****     #else
 213:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 214:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 215:Generated_Source\PSoC5/CapSense.c ****     
 216:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 217:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 195              		.loc 1 217 0
 196 0050 314B     		ldr	r3, .L2+16
 197 0052 0122     		movs	r2, #1
 198 0054 1A70     		strb	r2, [r3]
 218:Generated_Source\PSoC5/CapSense.c ****     
 219:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 220:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 221:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 222:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 223:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 224:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 225:Generated_Source\PSoC5/CapSense.c ****         
 226:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 227:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 228:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 229:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 230:Generated_Source\PSoC5/CapSense.c ****     
 231:Generated_Source\PSoC5/CapSense.c ****     #else
 232:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 233:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 199              		.loc 1 233 0
 200 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 201 005a 0346     		mov	r3, r0
 202 005c FB71     		strb	r3, [r7, #7]
 234:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 203              		.loc 1 234 0
 204 005e 2F4A     		ldr	r2, .L2+20
 205 0060 2E4B     		ldr	r3, .L2+20
 206 0062 1B78     		ldrb	r3, [r3]
 207 0064 DBB2     		uxtb	r3, r3
 208 0066 43F00303 		orr	r3, r3, #3
 209 006a DBB2     		uxtb	r3, r3
 210 006c 1370     		strb	r3, [r2]
 235:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 211              		.loc 1 235 0
 212 006e 2C4A     		ldr	r2, .L2+24
 213 0070 2B4B     		ldr	r3, .L2+24
 214 0072 1B78     		ldrb	r3, [r3]
 215 0074 DBB2     		uxtb	r3, r3
 216 0076 43F00303 		orr	r3, r3, #3
 217 007a DBB2     		uxtb	r3, r3
 218 007c 1370     		strb	r3, [r2]
 236:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 9


 219              		.loc 1 236 0
 220 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 221 0080 1846     		mov	r0, r3
 222 0082 FFF7FEFF 		bl	CyExitCriticalSection
 237:Generated_Source\PSoC5/CapSense.c ****         
 238:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 239:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 223              		.loc 1 239 0
 224 0086 274B     		ldr	r3, .L2+28
 225 0088 FF22     		movs	r2, #255
 226 008a 1A70     		strb	r2, [r3]
 240:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 227              		.loc 1 240 0
 228 008c 264B     		ldr	r3, .L2+32
 229 008e FF22     		movs	r2, #255
 230 0090 1A70     		strb	r2, [r3]
 241:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 231              		.loc 1 241 0
 232 0092 264B     		ldr	r3, .L2+36
 233 0094 FF22     		movs	r2, #255
 234 0096 1A70     		strb	r2, [r3]
 242:Generated_Source\PSoC5/CapSense.c ****         
 243:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 244:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 235              		.loc 1 244 0
 236 0098 254B     		ldr	r3, .L2+40
 237 009a FF22     		movs	r2, #255
 238 009c 1A70     		strb	r2, [r3]
 245:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 239              		.loc 1 245 0
 240 009e 254B     		ldr	r3, .L2+44
 241 00a0 FF22     		movs	r2, #255
 242 00a2 1A70     		strb	r2, [r3]
 246:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 243              		.loc 1 246 0
 244 00a4 244B     		ldr	r3, .L2+48
 245 00a6 FF22     		movs	r2, #255
 246 00a8 1A70     		strb	r2, [r3]
 247:Generated_Source\PSoC5/CapSense.c ****         
 248:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 249:Generated_Source\PSoC5/CapSense.c ****     
 250:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 251:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 252:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 253:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 254:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 255:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 256:Generated_Source\PSoC5/CapSense.c ****             
 257:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 258:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 259:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 260:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 261:Generated_Source\PSoC5/CapSense.c ****            
 262:Generated_Source\PSoC5/CapSense.c ****         #else
 263:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 264:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 265:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 10


 266:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 267:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 268:Generated_Source\PSoC5/CapSense.c ****             
 269:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 270:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 271:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 272:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 273:Generated_Source\PSoC5/CapSense.c ****             
 274:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 275:Generated_Source\PSoC5/CapSense.c ****             
 276:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 277:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 278:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 279:Generated_Source\PSoC5/CapSense.c ****             
 280:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 281:Generated_Source\PSoC5/CapSense.c ****     
 282:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 283:Generated_Source\PSoC5/CapSense.c ****     
 284:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 285:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 247              		.loc 1 285 0
 248 00aa 244B     		ldr	r3, .L2+52
 249 00ac 0122     		movs	r2, #1
 250 00ae 1A60     		str	r2, [r3]
 286:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 251              		.loc 1 286 0
 252 00b0 2349     		ldr	r1, .L2+56
 253 00b2 0020     		movs	r0, #0
 254 00b4 FFF7FEFF 		bl	CyIntSetVector
 287:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 255              		.loc 1 287 0
 256 00b8 0721     		movs	r1, #7
 257 00ba 0020     		movs	r0, #0
 258 00bc FFF7FEFF 		bl	CyIntSetPriority
 288:Generated_Source\PSoC5/CapSense.c ****     
 289:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 290:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 291:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 292:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 293:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 294:Generated_Source\PSoC5/CapSense.c ****     
 295:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 296:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 259              		.loc 1 296 0
 260 00c0 FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 297:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 261              		.loc 1 297 0
 262 00c4 0A20     		movs	r0, #10
 263 00c6 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 298:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 264              		.loc 1 298 0
 265 00ca 0B20     		movs	r0, #11
 266 00cc FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 299:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 300:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 267              		.loc 1 300 0
 268 00d0 0C20     		movs	r0, #12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 11


 269 00d2 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 301:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 302:Generated_Source\PSoC5/CapSense.c ****     
 303:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 304:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 305:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 306:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 307:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 308:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 309:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 310:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 311:Generated_Source\PSoC5/CapSense.c ****     
 312:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 313:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 314:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 315:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 316:Generated_Source\PSoC5/CapSense.c ****     
 317:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 318:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 270              		.loc 1 318 0
 271 00d6 1B4A     		ldr	r2, .L2+60
 272 00d8 1A4B     		ldr	r3, .L2+60
 273 00da 1B78     		ldrb	r3, [r3]
 274 00dc DBB2     		uxtb	r3, r3
 275 00de 43F00403 		orr	r3, r3, #4
 276 00e2 DBB2     		uxtb	r3, r3
 277 00e4 1370     		strb	r3, [r2]
 319:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 320:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 321:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 322:Generated_Source\PSoC5/CapSense.c ****     
 323:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 324:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 278              		.loc 1 324 0
 279 00e6 FFF7FEFF 		bl	CapSense_CompCH0_Init
 325:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 326:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 280              		.loc 1 326 0
 281 00ea FFF7FEFF 		bl	CapSense_IdacCH0_Init
 327:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 282              		.loc 1 327 0
 283 00ee 0020     		movs	r0, #0
 284 00f0 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 328:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 285              		.loc 1 328 0
 286 00f4 0420     		movs	r0, #4
 287 00f6 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 329:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 288              		.loc 1 329 0
 289 00fa 0020     		movs	r0, #0
 290 00fc FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 330:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 331:Generated_Source\PSoC5/CapSense.c ****     
 332:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 333:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 334:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 335:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 12


 336:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 337:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 338:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 339:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 340:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 341:Generated_Source\PSoC5/CapSense.c ****     
 342:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 343:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 344:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 345:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 346:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 347:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 348:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 349:Generated_Source\PSoC5/CapSense.c **** }
 291              		.loc 1 349 0
 292 0100 00BF     		nop
 293 0102 0837     		adds	r7, r7, #8
 294              		.cfi_def_cfa_offset 8
 295 0104 BD46     		mov	sp, r7
 296              		.cfi_def_cfa_register 13
 297              		@ sp needed
 298 0106 80BD     		pop	{r7, pc}
 299              	.L3:
 300              		.align	2
 301              	.L2:
 302 0108 9A640040 		.word	1073767578
 303 010c 9B640040 		.word	1073767579
 304 0110 2A640040 		.word	1073767466
 305 0114 4A640040 		.word	1073767498
 306 0118 8D640040 		.word	1073767565
 307 011c 9D640040 		.word	1073767581
 308 0120 9F640040 		.word	1073767583
 309 0124 2D640040 		.word	1073767469
 310 0128 4D640040 		.word	1073767501
 311 012c 0D640040 		.word	1073767437
 312 0130 2F640040 		.word	1073767471
 313 0134 5F640040 		.word	1073767519
 314 0138 4F640040 		.word	1073767503
 315 013c 80E100E0 		.word	-536813184
 316 0140 00000000 		.word	CapSense_IsrCH0_ISR
 317 0144 7C640040 		.word	1073767548
 318              		.cfi_endproc
 319              	.LFE0:
 320              		.size	CapSense_Init, .-CapSense_Init
 321              		.section	.text.CapSense_Enable,"ax",%progbits
 322              		.align	2
 323              		.global	CapSense_Enable
 324              		.thumb
 325              		.thumb_func
 326              		.type	CapSense_Enable, %function
 327              	CapSense_Enable:
 328              	.LFB1:
 350:Generated_Source\PSoC5/CapSense.c **** 
 351:Generated_Source\PSoC5/CapSense.c **** 
 352:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 353:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 354:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 13


 355:Generated_Source\PSoC5/CapSense.c **** *
 356:Generated_Source\PSoC5/CapSense.c **** * Summary:
 357:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 358:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 359:Generated_Source\PSoC5/CapSense.c **** *
 360:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 361:Generated_Source\PSoC5/CapSense.c **** *  None
 362:Generated_Source\PSoC5/CapSense.c **** *
 363:Generated_Source\PSoC5/CapSense.c **** * Return:
 364:Generated_Source\PSoC5/CapSense.c **** *  None
 365:Generated_Source\PSoC5/CapSense.c **** *
 366:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 368:Generated_Source\PSoC5/CapSense.c **** {
 329              		.loc 1 368 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 82B0     		sub	sp, sp, #8
 338              		.cfi_def_cfa_offset 16
 339 0004 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
 369:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 370:Generated_Source\PSoC5/CapSense.c ****     
 371:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
 341              		.loc 1 371 0
 342 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 343 000a 0346     		mov	r3, r0
 344 000c FB71     		strb	r3, [r7, #7]
 372:Generated_Source\PSoC5/CapSense.c ****     
 373:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 374:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 375:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 376:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 377:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 378:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 379:Generated_Source\PSoC5/CapSense.c ****         
 380:Generated_Source\PSoC5/CapSense.c ****     #else
 381:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 382:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 383:Generated_Source\PSoC5/CapSense.c ****     
 384:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 385:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
 345              		.loc 1 385 0
 346 000e 1C4A     		ldr	r2, .L5
 347 0010 1B4B     		ldr	r3, .L5
 348 0012 1B78     		ldrb	r3, [r3]
 349 0014 DBB2     		uxtb	r3, r3
 350 0016 43F02003 		orr	r3, r3, #32
 351 001a DBB2     		uxtb	r3, r3
 352 001c 1370     		strb	r3, [r2]
 386:Generated_Source\PSoC5/CapSense.c ****     
 387:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 14


 388:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 389:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 390:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 391:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 392:Generated_Source\PSoC5/CapSense.c ****         
 393:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 394:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 395:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 396:Generated_Source\PSoC5/CapSense.c ****         
 397:Generated_Source\PSoC5/CapSense.c ****     #else
 398:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 399:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 400:Generated_Source\PSoC5/CapSense.c ****         
 401:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 402:Generated_Source\PSoC5/CapSense.c ****     
 403:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 404:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 405:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 406:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 407:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 408:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 409:Generated_Source\PSoC5/CapSense.c ****             
 410:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 411:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 412:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 413:Generated_Source\PSoC5/CapSense.c ****            
 414:Generated_Source\PSoC5/CapSense.c ****         #else
 415:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 416:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 417:Generated_Source\PSoC5/CapSense.c ****         
 418:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 419:Generated_Source\PSoC5/CapSense.c ****     
 420:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 421:Generated_Source\PSoC5/CapSense.c ****     
 422:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 423:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 424:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
 353              		.loc 1 424 0
 354 001e FFF7FEFF 		bl	CapSense_IntClock_Start
 425:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 426:Generated_Source\PSoC5/CapSense.c ****     
 427:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 428:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
 355              		.loc 1 428 0
 356 0022 FFF7FEFF 		bl	CapSense_CompCH0_Enable
 429:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 430:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
 357              		.loc 1 430 0
 358 0026 FFF7FEFF 		bl	CapSense_IdacCH0_Enable
 431:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 432:Generated_Source\PSoC5/CapSense.c ****     
 433:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 434:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 435:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 436:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 437:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 438:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 15


 439:Generated_Source\PSoC5/CapSense.c ****     
 440:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 441:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 442:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 443:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 444:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 445:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 446:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 447:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 448:Generated_Source\PSoC5/CapSense.c ****     #else
 449:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 450:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
 359              		.loc 1 450 0
 360 002a 164A     		ldr	r2, .L5+4
 361 002c 154B     		ldr	r3, .L5+4
 362 002e 1B78     		ldrb	r3, [r3]
 363 0030 DBB2     		uxtb	r3, r3
 364 0032 43F01003 		orr	r3, r3, #16
 365 0036 DBB2     		uxtb	r3, r3
 366 0038 1370     		strb	r3, [r2]
 451:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
 367              		.loc 1 451 0
 368 003a 134A     		ldr	r2, .L5+8
 369 003c 124B     		ldr	r3, .L5+8
 370 003e 1B78     		ldrb	r3, [r3]
 371 0040 DBB2     		uxtb	r3, r3
 372 0042 43F01003 		orr	r3, r3, #16
 373 0046 DBB2     		uxtb	r3, r3
 374 0048 1370     		strb	r3, [r2]
 452:Generated_Source\PSoC5/CapSense.c ****         
 453:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 454:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 455:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 456:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 457:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 458:Generated_Source\PSoC5/CapSense.c ****     
 459:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 460:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 461:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 462:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 463:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 464:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 465:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 466:Generated_Source\PSoC5/CapSense.c ****         
 467:Generated_Source\PSoC5/CapSense.c ****     #else
 468:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 469:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 375              		.loc 1 469 0
 376 004a 104A     		ldr	r2, .L5+12
 377 004c 0F4B     		ldr	r3, .L5+12
 378 004e 1B78     		ldrb	r3, [r3]
 379 0050 DBB2     		uxtb	r3, r3
 380 0052 43F00103 		orr	r3, r3, #1
 381 0056 DBB2     		uxtb	r3, r3
 382 0058 1370     		strb	r3, [r2]
 470:Generated_Source\PSoC5/CapSense.c ****         
 471:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 16


 472:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 473:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 474:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 475:Generated_Source\PSoC5/CapSense.c ****     
 476:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
 383              		.loc 1 476 0
 384 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 385 005c 1846     		mov	r0, r3
 386 005e FFF7FEFF 		bl	CyExitCriticalSection
 477:Generated_Source\PSoC5/CapSense.c ****     
 478:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 479:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
 387              		.loc 1 479 0
 388 0062 0B4B     		ldr	r3, .L5+16
 389 0064 0122     		movs	r2, #1
 390 0066 1A60     		str	r2, [r3]
 480:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 481:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 482:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 483:Generated_Source\PSoC5/CapSense.c ****     
 484:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 485:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
 391              		.loc 1 485 0
 392 0068 0A4A     		ldr	r2, .L5+20
 393 006a 0A4B     		ldr	r3, .L5+20
 394 006c 1B78     		ldrb	r3, [r3]
 395 006e DBB2     		uxtb	r3, r3
 396 0070 63F07F03 		orn	r3, r3, #127
 397 0074 DBB2     		uxtb	r3, r3
 398 0076 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/CapSense.c **** }
 399              		.loc 1 486 0
 400 0078 00BF     		nop
 401 007a 0837     		adds	r7, r7, #8
 402              		.cfi_def_cfa_offset 8
 403 007c BD46     		mov	sp, r7
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 007e 80BD     		pop	{r7, pc}
 407              	.L6:
 408              		.align	2
 409              	.L5:
 410 0080 9D640040 		.word	1073767581
 411 0084 BB430040 		.word	1073759163
 412 0088 AB430040 		.word	1073759147
 413 008c 70580040 		.word	1073764464
 414 0090 00E100E0 		.word	-536813312
 415 0094 7C640040 		.word	1073767548
 416              		.cfi_endproc
 417              	.LFE1:
 418              		.size	CapSense_Enable, .-CapSense_Enable
 419              		.section	.text.CapSense_Start,"ax",%progbits
 420              		.align	2
 421              		.global	CapSense_Start
 422              		.thumb
 423              		.thumb_func
 424              		.type	CapSense_Start, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 17


 425              	CapSense_Start:
 426              	.LFB2:
 487:Generated_Source\PSoC5/CapSense.c **** 
 488:Generated_Source\PSoC5/CapSense.c **** 
 489:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 490:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 491:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 492:Generated_Source\PSoC5/CapSense.c **** *
 493:Generated_Source\PSoC5/CapSense.c **** * Summary:
 494:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 495:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 496:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 497:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 498:Generated_Source\PSoC5/CapSense.c **** *
 499:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 500:Generated_Source\PSoC5/CapSense.c **** *  None
 501:Generated_Source\PSoC5/CapSense.c **** *
 502:Generated_Source\PSoC5/CapSense.c **** * Return:
 503:Generated_Source\PSoC5/CapSense.c **** *  None
 504:Generated_Source\PSoC5/CapSense.c **** *
 505:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 506:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 507:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 508:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 509:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 510:Generated_Source\PSoC5/CapSense.c **** *
 511:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 512:Generated_Source\PSoC5/CapSense.c **** *  No
 513:Generated_Source\PSoC5/CapSense.c **** *
 514:Generated_Source\PSoC5/CapSense.c **** * Note:
 515:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 516:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 517:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 518:Generated_Source\PSoC5/CapSense.c **** *
 519:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 521:Generated_Source\PSoC5/CapSense.c **** {
 427              		.loc 1 521 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 1, uses_anonymous_args = 0
 431 0000 80B5     		push	{r7, lr}
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 7, -8
 434              		.cfi_offset 14, -4
 435 0002 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 522:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 437              		.loc 1 522 0
 438 0004 064B     		ldr	r3, .L9
 439 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 440 0008 002B     		cmp	r3, #0
 441 000a 04D1     		bne	.L8
 523:Generated_Source\PSoC5/CapSense.c ****     {
 524:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 442              		.loc 1 524 0
 443 000c FFF7FEFF 		bl	CapSense_Init
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 18


 525:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 444              		.loc 1 525 0
 445 0010 034B     		ldr	r3, .L9
 446 0012 0122     		movs	r2, #1
 447 0014 1A70     		strb	r2, [r3]
 448              	.L8:
 526:Generated_Source\PSoC5/CapSense.c ****     }
 527:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 449              		.loc 1 527 0
 450 0016 FFF7FEFF 		bl	CapSense_Enable
 528:Generated_Source\PSoC5/CapSense.c ****     
 529:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 530:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 531:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 532:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 533:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 534:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 535:Generated_Source\PSoC5/CapSense.c **** }
 451              		.loc 1 535 0
 452 001a 00BF     		nop
 453 001c 80BD     		pop	{r7, pc}
 454              	.L10:
 455 001e 00BF     		.align	2
 456              	.L9:
 457 0020 00000000 		.word	CapSense_initVar
 458              		.cfi_endproc
 459              	.LFE2:
 460              		.size	CapSense_Start, .-CapSense_Start
 461              		.section	.text.CapSense_Stop,"ax",%progbits
 462              		.align	2
 463              		.global	CapSense_Stop
 464              		.thumb
 465              		.thumb_func
 466              		.type	CapSense_Stop, %function
 467              	CapSense_Stop:
 468              	.LFB3:
 536:Generated_Source\PSoC5/CapSense.c **** 
 537:Generated_Source\PSoC5/CapSense.c **** 
 538:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 539:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 540:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 541:Generated_Source\PSoC5/CapSense.c **** *
 542:Generated_Source\PSoC5/CapSense.c **** * Summary:
 543:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 544:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 545:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 546:Generated_Source\PSoC5/CapSense.c **** *
 547:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 548:Generated_Source\PSoC5/CapSense.c **** *  None
 549:Generated_Source\PSoC5/CapSense.c **** *
 550:Generated_Source\PSoC5/CapSense.c **** * Return:
 551:Generated_Source\PSoC5/CapSense.c **** *  None
 552:Generated_Source\PSoC5/CapSense.c **** *
 553:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 554:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 555:Generated_Source\PSoC5/CapSense.c **** *
 556:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 19


 557:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 558:Generated_Source\PSoC5/CapSense.c **** {
 469              		.loc 1 558 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 1, uses_anonymous_args = 0
 473 0000 80B5     		push	{r7, lr}
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 7, -8
 476              		.cfi_offset 14, -4
 477 0002 00AF     		add	r7, sp, #0
 478              		.cfi_def_cfa_register 7
 559:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 560:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 479              		.loc 1 560 0
 480 0004 1E4A     		ldr	r2, .L12
 481 0006 1E4B     		ldr	r3, .L12
 482 0008 1B78     		ldrb	r3, [r3]
 483 000a DBB2     		uxtb	r3, r3
 484 000c 23F00203 		bic	r3, r3, #2
 485 0010 DBB2     		uxtb	r3, r3
 486 0012 1370     		strb	r3, [r2]
 561:Generated_Source\PSoC5/CapSense.c ****     
 562:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 563:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 487              		.loc 1 563 0
 488 0014 1B4B     		ldr	r3, .L12+4
 489 0016 0122     		movs	r2, #1
 490 0018 1A60     		str	r2, [r3]
 564:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 565:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 566:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 567:Generated_Source\PSoC5/CapSense.c ****     
 568:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 569:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 491              		.loc 1 569 0
 492 001a FFF7FEFF 		bl	CapSense_ClearSensors
 570:Generated_Source\PSoC5/CapSense.c ****     
 571:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 572:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 573:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 574:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 575:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 576:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 577:Generated_Source\PSoC5/CapSense.c ****         
 578:Generated_Source\PSoC5/CapSense.c ****     #else
 579:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 580:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 581:Generated_Source\PSoC5/CapSense.c ****     
 582:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 583:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 493              		.loc 1 583 0
 494 001e 1A4A     		ldr	r2, .L12+8
 495 0020 194B     		ldr	r3, .L12+8
 496 0022 1B78     		ldrb	r3, [r3]
 497 0024 DBB2     		uxtb	r3, r3
 498 0026 23F02003 		bic	r3, r3, #32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 20


 499 002a DBB2     		uxtb	r3, r3
 500 002c 1370     		strb	r3, [r2]
 584:Generated_Source\PSoC5/CapSense.c ****     
 585:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 586:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 587:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 588:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 589:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 590:Generated_Source\PSoC5/CapSense.c **** 
 591:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 592:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 593:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 594:Generated_Source\PSoC5/CapSense.c **** 
 595:Generated_Source\PSoC5/CapSense.c ****     #else
 596:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 597:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 598:Generated_Source\PSoC5/CapSense.c ****         
 599:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 600:Generated_Source\PSoC5/CapSense.c ****     
 601:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 602:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 603:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 604:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 605:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 606:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 607:Generated_Source\PSoC5/CapSense.c ****     
 608:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 609:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 610:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 611:Generated_Source\PSoC5/CapSense.c ****            
 612:Generated_Source\PSoC5/CapSense.c ****         #else
 613:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 614:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 615:Generated_Source\PSoC5/CapSense.c ****         
 616:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 617:Generated_Source\PSoC5/CapSense.c ****     
 618:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 619:Generated_Source\PSoC5/CapSense.c ****     
 620:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 621:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 622:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 501              		.loc 1 622 0
 502 002e FFF7FEFF 		bl	CapSense_IntClock_Stop
 623:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 624:Generated_Source\PSoC5/CapSense.c ****     
 625:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 626:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 503              		.loc 1 626 0
 504 0032 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 627:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 628:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 505              		.loc 1 628 0
 506 0036 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 629:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 630:Generated_Source\PSoC5/CapSense.c ****     
 631:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 632:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 21


 633:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 634:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 635:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 636:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 637:Generated_Source\PSoC5/CapSense.c ****     
 638:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 639:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 640:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 641:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 642:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 643:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 644:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 645:Generated_Source\PSoC5/CapSense.c **** 
 646:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 647:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 648:Generated_Source\PSoC5/CapSense.c ****     #else
 649:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 650:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 507              		.loc 1 650 0
 508 003a 144A     		ldr	r2, .L12+12
 509 003c 134B     		ldr	r3, .L12+12
 510 003e 1B78     		ldrb	r3, [r3]
 511 0040 DBB2     		uxtb	r3, r3
 512 0042 23F00103 		bic	r3, r3, #1
 513 0046 DBB2     		uxtb	r3, r3
 514 0048 1370     		strb	r3, [r2]
 651:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 515              		.loc 1 651 0
 516 004a 114A     		ldr	r2, .L12+16
 517 004c 104B     		ldr	r3, .L12+16
 518 004e 1B78     		ldrb	r3, [r3]
 519 0050 DBB2     		uxtb	r3, r3
 520 0052 23F01003 		bic	r3, r3, #16
 521 0056 DBB2     		uxtb	r3, r3
 522 0058 1370     		strb	r3, [r2]
 652:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 523              		.loc 1 652 0
 524 005a 0E4A     		ldr	r2, .L12+20
 525 005c 0D4B     		ldr	r3, .L12+20
 526 005e 1B78     		ldrb	r3, [r3]
 527 0060 DBB2     		uxtb	r3, r3
 528 0062 23F01003 		bic	r3, r3, #16
 529 0066 DBB2     		uxtb	r3, r3
 530 0068 1370     		strb	r3, [r2]
 653:Generated_Source\PSoC5/CapSense.c ****         
 654:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 655:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 656:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 657:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 658:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 659:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 660:Generated_Source\PSoC5/CapSense.c ****     
 661:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 662:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 531              		.loc 1 662 0
 532 006a 054A     		ldr	r2, .L12
 533 006c 044B     		ldr	r3, .L12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 22


 534 006e 1B78     		ldrb	r3, [r3]
 535 0070 DBB2     		uxtb	r3, r3
 536 0072 03F07F03 		and	r3, r3, #127
 537 0076 DBB2     		uxtb	r3, r3
 538 0078 1370     		strb	r3, [r2]
 663:Generated_Source\PSoC5/CapSense.c **** }
 539              		.loc 1 663 0
 540 007a 00BF     		nop
 541 007c 80BD     		pop	{r7, pc}
 542              	.L13:
 543 007e 00BF     		.align	2
 544              	.L12:
 545 0080 7C640040 		.word	1073767548
 546 0084 80E100E0 		.word	-536813184
 547 0088 9D640040 		.word	1073767581
 548 008c 70580040 		.word	1073764464
 549 0090 AB430040 		.word	1073759147
 550 0094 BB430040 		.word	1073759163
 551              		.cfi_endproc
 552              	.LFE3:
 553              		.size	CapSense_Stop, .-CapSense_Stop
 554              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
 555              		.align	2
 556              		.global	CapSense_FindNextSensor
 557              		.thumb
 558              		.thumb_func
 559              		.type	CapSense_FindNextSensor, %function
 560              	CapSense_FindNextSensor:
 561              	.LFB4:
 664:Generated_Source\PSoC5/CapSense.c **** 
 665:Generated_Source\PSoC5/CapSense.c **** 
 666:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 667:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 668:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 669:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 670:Generated_Source\PSoC5/CapSense.c ****     *
 671:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 672:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 673:Generated_Source\PSoC5/CapSense.c ****     *
 674:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 675:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 676:Generated_Source\PSoC5/CapSense.c ****     *
 677:Generated_Source\PSoC5/CapSense.c ****     * Return:
 678:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 679:Generated_Source\PSoC5/CapSense.c ****     *
 680:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 681:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 682:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 683:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 684:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 685:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 686:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 687:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 688:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 689:Generated_Source\PSoC5/CapSense.c ****     *
 690:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 691:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 23


 692:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 693:Generated_Source\PSoC5/CapSense.c ****     *
 694:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 695:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 696:Generated_Source\PSoC5/CapSense.c ****     {
 562              		.loc 1 696 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 16
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0000 80B4     		push	{r7}
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 7, -4
 570 0002 85B0     		sub	sp, sp, #20
 571              		.cfi_def_cfa_offset 24
 572 0004 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 574 0006 0346     		mov	r3, r0
 575 0008 FB71     		strb	r3, [r7, #7]
 576              	.L17:
 697:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 698:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 699:Generated_Source\PSoC5/CapSense.c ****         
 700:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 701:Generated_Source\PSoC5/CapSense.c ****         do
 702:Generated_Source\PSoC5/CapSense.c ****         {
 703:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 704:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 577              		.loc 1 704 0
 578 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 579 000c 0133     		adds	r3, r3, #1
 580 000e FB71     		strb	r3, [r7, #7]
 705:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 581              		.loc 1 705 0
 582 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 583 0012 0A2B     		cmp	r3, #10
 584 0014 12D0     		beq	.L19
 706:Generated_Source\PSoC5/CapSense.c ****             {
 707:Generated_Source\PSoC5/CapSense.c ****                 break;
 708:Generated_Source\PSoC5/CapSense.c ****             }
 709:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 585              		.loc 1 709 0
 586 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 587 0018 DB08     		lsrs	r3, r3, #3
 588 001a FB73     		strb	r3, [r7, #15]
 710:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 589              		.loc 1 710 0
 590 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 591 001e 03F00703 		and	r3, r3, #7
 592 0022 0122     		movs	r2, #1
 593 0024 02FA03F3 		lsl	r3, r2, r3
 594 0028 BB73     		strb	r3, [r7, #14]
 711:Generated_Source\PSoC5/CapSense.c ****         }    
 712:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 595              		.loc 1 712 0
 596 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 597 002c 074A     		ldr	r2, .L20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 24


 598 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 599 0030 BB7B     		ldrb	r3, [r7, #14]
 600 0032 1340     		ands	r3, r3, r2
 601 0034 DBB2     		uxtb	r3, r3
 602 0036 002B     		cmp	r3, #0
 603 0038 E7D0     		beq	.L17
 604 003a 00E0     		b	.L16
 605              	.L19:
 707:Generated_Source\PSoC5/CapSense.c ****             }
 606              		.loc 1 707 0
 607 003c 00BF     		nop
 608              	.L16:
 713:Generated_Source\PSoC5/CapSense.c ****         
 714:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 609              		.loc 1 714 0
 610 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 715:Generated_Source\PSoC5/CapSense.c ****     }
 611              		.loc 1 715 0
 612 0040 1846     		mov	r0, r3
 613 0042 1437     		adds	r7, r7, #20
 614              		.cfi_def_cfa_offset 4
 615 0044 BD46     		mov	sp, r7
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 0046 80BC     		pop	{r7}
 619              		.cfi_restore 7
 620              		.cfi_def_cfa_offset 0
 621 0048 7047     		bx	lr
 622              	.L21:
 623 004a 00BF     		.align	2
 624              	.L20:
 625 004c 00000000 		.word	CapSense_sensorEnableMask
 626              		.cfi_endproc
 627              	.LFE4:
 628              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 629              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 630              		.align	2
 631              		.global	CapSense_SetScanSlotSettings
 632              		.thumb
 633              		.thumb_func
 634              		.type	CapSense_SetScanSlotSettings, %function
 635              	CapSense_SetScanSlotSettings:
 636              	.LFB5:
 716:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 717:Generated_Source\PSoC5/CapSense.c ****  
 718:Generated_Source\PSoC5/CapSense.c ****  
 719:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 720:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 721:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 722:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 723:Generated_Source\PSoC5/CapSense.c ****     *
 724:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 725:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 726:Generated_Source\PSoC5/CapSense.c ****     *  
 727:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 728:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 729:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 25


 730:Generated_Source\PSoC5/CapSense.c ****     * Return:
 731:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 732:Generated_Source\PSoC5/CapSense.c ****     *
 733:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 734:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 735:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 736:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 737:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 738:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 739:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 740:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 741:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 742:Generated_Source\PSoC5/CapSense.c ****     *
 743:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 744:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 745:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 746:Generated_Source\PSoC5/CapSense.c ****     *
 747:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 748:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 749:Generated_Source\PSoC5/CapSense.c ****     {
 750:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 751:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 752:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 753:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 754:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 755:Generated_Source\PSoC5/CapSense.c ****         
 756:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 757:Generated_Source\PSoC5/CapSense.c ****         do
 758:Generated_Source\PSoC5/CapSense.c ****         {
 759:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 760:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 761:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 762:Generated_Source\PSoC5/CapSense.c ****             {
 763:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 764:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 765:Generated_Source\PSoC5/CapSense.c ****                 break;
 766:Generated_Source\PSoC5/CapSense.c ****             }
 767:Generated_Source\PSoC5/CapSense.c ****             
 768:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 769:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 770:Generated_Source\PSoC5/CapSense.c ****         }
 771:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 772:Generated_Source\PSoC5/CapSense.c ****         
 773:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 774:Generated_Source\PSoC5/CapSense.c ****         do
 775:Generated_Source\PSoC5/CapSense.c ****         {
 776:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 777:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 778:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 779:Generated_Source\PSoC5/CapSense.c ****             {
 780:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 781:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 782:Generated_Source\PSoC5/CapSense.c ****                 break;
 783:Generated_Source\PSoC5/CapSense.c ****             }
 784:Generated_Source\PSoC5/CapSense.c ****             
 785:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 786:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 26


 787:Generated_Source\PSoC5/CapSense.c ****         } 
 788:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 789:Generated_Source\PSoC5/CapSense.c ****         
 790:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 791:Generated_Source\PSoC5/CapSense.c ****         
 792:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 793:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 794:Generated_Source\PSoC5/CapSense.c ****         {
 795:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 796:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 797:Generated_Source\PSoC5/CapSense.c ****             
 798:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 799:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 800:Generated_Source\PSoC5/CapSense.c ****         }
 801:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 802:Generated_Source\PSoC5/CapSense.c ****         {
 803:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 804:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 805:Generated_Source\PSoC5/CapSense.c ****            
 806:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 807:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 808:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 809:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 810:Generated_Source\PSoC5/CapSense.c ****         }
 811:Generated_Source\PSoC5/CapSense.c ****         else
 812:Generated_Source\PSoC5/CapSense.c ****         {
 813:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 814:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 815:Generated_Source\PSoC5/CapSense.c ****             
 816:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 817:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 818:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 819:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 820:Generated_Source\PSoC5/CapSense.c ****         }
 821:Generated_Source\PSoC5/CapSense.c ****         
 822:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 823:Generated_Source\PSoC5/CapSense.c ****     }
 824:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 825:Generated_Source\PSoC5/CapSense.c **** 
 826:Generated_Source\PSoC5/CapSense.c **** 
 827:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 829:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 830:Generated_Source\PSoC5/CapSense.c **** *
 831:Generated_Source\PSoC5/CapSense.c **** * Summary:
 832:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 833:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 834:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 835:Generated_Source\PSoC5/CapSense.c **** *  widget.
 836:Generated_Source\PSoC5/CapSense.c **** *
 837:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 838:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 839:Generated_Source\PSoC5/CapSense.c **** *
 840:Generated_Source\PSoC5/CapSense.c **** * Return:
 841:Generated_Source\PSoC5/CapSense.c **** *  None
 842:Generated_Source\PSoC5/CapSense.c **** *
 843:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 27


 844:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 845:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 846:Generated_Source\PSoC5/CapSense.c **** *  widget.
 847:Generated_Source\PSoC5/CapSense.c **** *
 848:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 850:Generated_Source\PSoC5/CapSense.c **** {
 637              		.loc 1 850 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 16
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641 0000 80B5     		push	{r7, lr}
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 84B0     		sub	sp, sp, #16
 646              		.cfi_def_cfa_offset 24
 647 0004 00AF     		add	r7, sp, #0
 648              		.cfi_def_cfa_register 7
 649 0006 0346     		mov	r3, r0
 650 0008 FB71     		strb	r3, [r7, #7]
 851:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 852:Generated_Source\PSoC5/CapSense.c ****     
 853:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 854:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 855:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 651              		.loc 1 855 0
 652 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 653 000c 0B4A     		ldr	r2, .L23
 654 000e D35C     		ldrb	r3, [r2, r3]
 655 0010 FB73     		strb	r3, [r7, #15]
 856:Generated_Source\PSoC5/CapSense.c ****         
 857:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 858:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 859:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 656              		.loc 1 859 0
 657 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 658 0014 0A4A     		ldr	r2, .L23+4
 659 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 660 0018 1846     		mov	r0, r3
 661 001a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 860:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 861:Generated_Source\PSoC5/CapSense.c ****         
 862:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 863:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 864:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 865:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 866:Generated_Source\PSoC5/CapSense.c ****         #else
 867:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 662              		.loc 1 867 0
 663 001e 094A     		ldr	r2, .L23+8
 664 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 665 0022 0949     		ldr	r1, .L23+12
 666 0024 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 667 0026 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 869:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 28


 870:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 871:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 872:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 873:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 874:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 668              		.loc 1 874 0
 669 0028 084B     		ldr	r3, .L23+16
 670 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 671 002c 1846     		mov	r0, r3
 672 002e FFF7FEFF 		bl	CapSense_SetPrescaler
 875:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 876:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 877:Generated_Source\PSoC5/CapSense.c ****                */
 878:Generated_Source\PSoC5/CapSense.c **** 
 879:Generated_Source\PSoC5/CapSense.c ****     #else
 880:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 881:Generated_Source\PSoC5/CapSense.c ****         {
 882:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 883:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 884:Generated_Source\PSoC5/CapSense.c ****             
 885:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 886:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 887:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 888:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 889:Generated_Source\PSoC5/CapSense.c ****             
 890:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 891:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 892:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 893:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 894:Generated_Source\PSoC5/CapSense.c ****             #else
 895:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 896:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 897:Generated_Source\PSoC5/CapSense.c ****         }
 898:Generated_Source\PSoC5/CapSense.c ****         
 899:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 900:Generated_Source\PSoC5/CapSense.c ****         {
 901:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 902:Generated_Source\PSoC5/CapSense.c ****         
 903:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 904:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 905:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 906:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 907:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 908:Generated_Source\PSoC5/CapSense.c ****             
 909:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 910:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 911:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 912:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 913:Generated_Source\PSoC5/CapSense.c ****             #else
 914:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 915:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 916:Generated_Source\PSoC5/CapSense.c ****         }
 917:Generated_Source\PSoC5/CapSense.c **** 
 918:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 919:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 920:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 921:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 29


 922:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 923:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 924:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 925:Generated_Source\PSoC5/CapSense.c ****                */
 926:Generated_Source\PSoC5/CapSense.c **** 
 927:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 928:Generated_Source\PSoC5/CapSense.c **** }
 673              		.loc 1 928 0
 674 0032 00BF     		nop
 675 0034 1037     		adds	r7, r7, #16
 676              		.cfi_def_cfa_offset 8
 677 0036 BD46     		mov	sp, r7
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 0038 80BD     		pop	{r7, pc}
 681              	.L24:
 682 003a 00BF     		.align	2
 683              	.L23:
 684 003c 00000000 		.word	CapSense_widgetNumber
 685 0040 00000000 		.word	CapSense_idacSettings
 686 0044 5D640040 		.word	1073767517
 687 0048 00000000 		.word	CapSense_widgetResolution
 688 004c 00000000 		.word	CapSense_analogSwitchDivider
 689              		.cfi_endproc
 690              	.LFE5:
 691              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 692              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 693              		.align	2
 694              		.global	CapSense_ScanSensor
 695              		.thumb
 696              		.thumb_func
 697              		.type	CapSense_ScanSensor, %function
 698              	CapSense_ScanSensor:
 699              	.LFB6:
 929:Generated_Source\PSoC5/CapSense.c **** 
 930:Generated_Source\PSoC5/CapSense.c **** 
 931:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 932:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 933:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 934:Generated_Source\PSoC5/CapSense.c **** *
 935:Generated_Source\PSoC5/CapSense.c **** * Summary:
 936:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 937:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 938:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 939:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 940:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 941:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 942:Generated_Source\PSoC5/CapSense.c **** *
 943:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 944:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 945:Generated_Source\PSoC5/CapSense.c **** *
 946:Generated_Source\PSoC5/CapSense.c **** * Return:
 947:Generated_Source\PSoC5/CapSense.c **** *  None
 948:Generated_Source\PSoC5/CapSense.c **** *
 949:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 950:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 951:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 30


 952:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 953:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 954:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 955:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 956:Generated_Source\PSoC5/CapSense.c **** *
 957:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 958:Generated_Source\PSoC5/CapSense.c **** *  No
 959:Generated_Source\PSoC5/CapSense.c **** *
 960:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 961:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 962:Generated_Source\PSoC5/CapSense.c **** {
 700              		.loc 1 962 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 8
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 7, -8
 707              		.cfi_offset 14, -4
 708 0002 82B0     		sub	sp, sp, #8
 709              		.cfi_def_cfa_offset 16
 710 0004 00AF     		add	r7, sp, #0
 711              		.cfi_def_cfa_register 7
 712 0006 0346     		mov	r3, r0
 713 0008 FB71     		strb	r3, [r7, #7]
 963:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 964:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 714              		.loc 1 964 0
 715 000a 084B     		ldr	r3, .L26
 716 000c 0022     		movs	r2, #0
 717 000e 1A70     		strb	r2, [r3]
 965:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 718              		.loc 1 965 0
 719 0010 074A     		ldr	r2, .L26+4
 720 0012 FB79     		ldrb	r3, [r7, #7]
 721 0014 1370     		strb	r3, [r2]
 966:Generated_Source\PSoC5/CapSense.c ****     
 967:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 968:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 969:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 722              		.loc 1 969 0
 723 0016 054B     		ldr	r3, .L26
 724 0018 8122     		movs	r2, #129
 725 001a 1A70     		strb	r2, [r3]
 970:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 726              		.loc 1 970 0
 727 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 728 001e 1846     		mov	r0, r3
 729 0020 FFF7FEFF 		bl	CapSense_PreScan
 971:Generated_Source\PSoC5/CapSense.c ****         
 972:Generated_Source\PSoC5/CapSense.c ****     #else
 973:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 974:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 975:Generated_Source\PSoC5/CapSense.c ****         {
 976:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 977:Generated_Source\PSoC5/CapSense.c ****         }
 978:Generated_Source\PSoC5/CapSense.c ****         else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 31


 979:Generated_Source\PSoC5/CapSense.c ****         {
 980:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 981:Generated_Source\PSoC5/CapSense.c ****         }
 982:Generated_Source\PSoC5/CapSense.c ****         
 983:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 984:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 985:Generated_Source\PSoC5/CapSense.c ****         {
 986:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 987:Generated_Source\PSoC5/CapSense.c ****         }
 988:Generated_Source\PSoC5/CapSense.c ****         else
 989:Generated_Source\PSoC5/CapSense.c ****         {
 990:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 991:Generated_Source\PSoC5/CapSense.c ****         }
 992:Generated_Source\PSoC5/CapSense.c ****         
 993:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 994:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 995:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 996:Generated_Source\PSoC5/CapSense.c ****         {
 997:Generated_Source\PSoC5/CapSense.c ****         
 998:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 999:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
1000:Generated_Source\PSoC5/CapSense.c ****         }
1001:Generated_Source\PSoC5/CapSense.c ****         
1002:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1003:Generated_Source\PSoC5/CapSense.c **** }
 730              		.loc 1 1003 0
 731 0024 00BF     		nop
 732 0026 0837     		adds	r7, r7, #8
 733              		.cfi_def_cfa_offset 8
 734 0028 BD46     		mov	sp, r7
 735              		.cfi_def_cfa_register 13
 736              		@ sp needed
 737 002a 80BD     		pop	{r7, pc}
 738              	.L27:
 739              		.align	2
 740              	.L26:
 741 002c 00000000 		.word	CapSense_csv
 742 0030 00000000 		.word	CapSense_sensorIndex
 743              		.cfi_endproc
 744              	.LFE6:
 745              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 746              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 747              		.align	2
 748              		.global	CapSense_ScanEnabledWidgets
 749              		.thumb
 750              		.thumb_func
 751              		.type	CapSense_ScanEnabledWidgets, %function
 752              	CapSense_ScanEnabledWidgets:
 753              	.LFB7:
1004:Generated_Source\PSoC5/CapSense.c **** 
1005:Generated_Source\PSoC5/CapSense.c **** 
1006:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1007:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
1008:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1009:Generated_Source\PSoC5/CapSense.c **** *
1010:Generated_Source\PSoC5/CapSense.c **** * Summary:
1011:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 32


1012:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
1013:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
1014:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
1015:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
1016:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
1017:Generated_Source\PSoC5/CapSense.c **** *
1018:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1019:Generated_Source\PSoC5/CapSense.c **** *  None
1020:Generated_Source\PSoC5/CapSense.c **** *
1021:Generated_Source\PSoC5/CapSense.c **** * Return:
1022:Generated_Source\PSoC5/CapSense.c **** *  None
1023:Generated_Source\PSoC5/CapSense.c **** *
1024:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1025:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1026:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1027:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
1028:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
1029:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
1030:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
1031:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
1032:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
1033:Generated_Source\PSoC5/CapSense.c **** *
1034:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1035:Generated_Source\PSoC5/CapSense.c **** *  No
1036:Generated_Source\PSoC5/CapSense.c **** *
1037:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1038:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
1039:Generated_Source\PSoC5/CapSense.c **** {
 754              		.loc 1 1039 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 80B5     		push	{r7, lr}
 759              		.cfi_def_cfa_offset 8
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
1040:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1041:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 764              		.loc 1 1041 0
 765 0004 124B     		ldr	r3, .L31
 766 0006 0022     		movs	r2, #0
 767 0008 1A70     		strb	r2, [r3]
1042:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 768              		.loc 1 1042 0
 769 000a 124B     		ldr	r3, .L31+4
 770 000c FF22     		movs	r2, #255
 771 000e 1A70     		strb	r2, [r3]
1043:Generated_Source\PSoC5/CapSense.c ****     
1044:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1045:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1046:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
 772              		.loc 1 1046 0
 773 0010 104B     		ldr	r3, .L31+4
 774 0012 1B78     		ldrb	r3, [r3]
 775 0014 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 33


 776 0016 1846     		mov	r0, r3
 777 0018 FFF7FEFF 		bl	CapSense_FindNextSensor
 778 001c 0346     		mov	r3, r0
 779 001e 1A46     		mov	r2, r3
 780 0020 0C4B     		ldr	r3, .L31+4
 781 0022 1A70     		strb	r2, [r3]
1047:Generated_Source\PSoC5/CapSense.c **** 
1048:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1049:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 782              		.loc 1 1049 0
 783 0024 0B4B     		ldr	r3, .L31+4
 784 0026 1B78     		ldrb	r3, [r3]
 785 0028 DBB2     		uxtb	r3, r3
 786 002a 092B     		cmp	r3, #9
 787 002c 0DD8     		bhi	.L30
1050:Generated_Source\PSoC5/CapSense.c ****         {
1051:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
 788              		.loc 1 1051 0
 789 002e 084B     		ldr	r3, .L31
 790 0030 1B78     		ldrb	r3, [r3]
 791 0032 DBB2     		uxtb	r3, r3
 792 0034 43F00103 		orr	r3, r3, #1
 793 0038 DAB2     		uxtb	r2, r3
 794 003a 054B     		ldr	r3, .L31
 795 003c 1A70     		strb	r2, [r3]
1052:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 796              		.loc 1 1052 0
 797 003e 054B     		ldr	r3, .L31+4
 798 0040 1B78     		ldrb	r3, [r3]
 799 0042 DBB2     		uxtb	r3, r3
 800 0044 1846     		mov	r0, r3
 801 0046 FFF7FEFF 		bl	CapSense_PreScan
 802              	.L30:
1053:Generated_Source\PSoC5/CapSense.c ****         }
1054:Generated_Source\PSoC5/CapSense.c ****         
1055:Generated_Source\PSoC5/CapSense.c ****     #else
1056:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1057:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1058:Generated_Source\PSoC5/CapSense.c ****         
1059:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1060:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1061:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1062:Generated_Source\PSoC5/CapSense.c ****         {
1063:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1064:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1065:Generated_Source\PSoC5/CapSense.c ****         }
1066:Generated_Source\PSoC5/CapSense.c ****         
1067:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1068:Generated_Source\PSoC5/CapSense.c **** }
 803              		.loc 1 1068 0
 804 004a 00BF     		nop
 805 004c 80BD     		pop	{r7, pc}
 806              	.L32:
 807 004e 00BF     		.align	2
 808              	.L31:
 809 0050 00000000 		.word	CapSense_csv
 810 0054 00000000 		.word	CapSense_sensorIndex
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 34


 811              		.cfi_endproc
 812              	.LFE7:
 813              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 814              		.section	.text.CapSense_IsBusy,"ax",%progbits
 815              		.align	2
 816              		.global	CapSense_IsBusy
 817              		.thumb
 818              		.thumb_func
 819              		.type	CapSense_IsBusy, %function
 820              	CapSense_IsBusy:
 821              	.LFB8:
1069:Generated_Source\PSoC5/CapSense.c **** 
1070:Generated_Source\PSoC5/CapSense.c **** 
1071:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1072:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1073:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1074:Generated_Source\PSoC5/CapSense.c **** *
1075:Generated_Source\PSoC5/CapSense.c **** * Summary:
1076:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1077:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1078:Generated_Source\PSoC5/CapSense.c **** *
1079:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1080:Generated_Source\PSoC5/CapSense.c **** *  None
1081:Generated_Source\PSoC5/CapSense.c **** *
1082:Generated_Source\PSoC5/CapSense.c **** * Return:
1083:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1084:Generated_Source\PSoC5/CapSense.c **** *  completed.
1085:Generated_Source\PSoC5/CapSense.c **** *
1086:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1087:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1088:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1089:Generated_Source\PSoC5/CapSense.c **** *
1090:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1091:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1092:Generated_Source\PSoC5/CapSense.c **** {
 822              		.loc 1 1092 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 1, uses_anonymous_args = 0
 826              		@ link register save eliminated.
 827 0000 80B4     		push	{r7}
 828              		.cfi_def_cfa_offset 4
 829              		.cfi_offset 7, -4
 830 0002 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
1093:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 832              		.loc 1 1093 0
 833 0004 044B     		ldr	r3, .L35
 834 0006 1B78     		ldrb	r3, [r3]
 835 0008 DBB2     		uxtb	r3, r3
 836 000a 03F00103 		and	r3, r3, #1
 837 000e DBB2     		uxtb	r3, r3
1094:Generated_Source\PSoC5/CapSense.c **** }
 838              		.loc 1 1094 0
 839 0010 1846     		mov	r0, r3
 840 0012 BD46     		mov	sp, r7
 841              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 35


 842              		@ sp needed
 843 0014 80BC     		pop	{r7}
 844              		.cfi_restore 7
 845              		.cfi_def_cfa_offset 0
 846 0016 7047     		bx	lr
 847              	.L36:
 848              		.align	2
 849              	.L35:
 850 0018 00000000 		.word	CapSense_csv
 851              		.cfi_endproc
 852              	.LFE8:
 853              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 854              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 855              		.align	2
 856              		.global	CapSense_ReadSensorRaw
 857              		.thumb
 858              		.thumb_func
 859              		.type	CapSense_ReadSensorRaw, %function
 860              	CapSense_ReadSensorRaw:
 861              	.LFB9:
1095:Generated_Source\PSoC5/CapSense.c **** 
1096:Generated_Source\PSoC5/CapSense.c **** 
1097:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1099:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1100:Generated_Source\PSoC5/CapSense.c **** *
1101:Generated_Source\PSoC5/CapSense.c **** * Summary:
1102:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1103:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1104:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1105:Generated_Source\PSoC5/CapSense.c **** *
1106:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1107:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1108:Generated_Source\PSoC5/CapSense.c **** *
1109:Generated_Source\PSoC5/CapSense.c **** * Return:
1110:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1111:Generated_Source\PSoC5/CapSense.c **** *
1112:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1113:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1114:Generated_Source\PSoC5/CapSense.c **** *
1115:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1116:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1117:Generated_Source\PSoC5/CapSense.c **** {
 862              		.loc 1 1117 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 8
 865              		@ frame_needed = 1, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 867 0000 80B4     		push	{r7}
 868              		.cfi_def_cfa_offset 4
 869              		.cfi_offset 7, -4
 870 0002 83B0     		sub	sp, sp, #12
 871              		.cfi_def_cfa_offset 16
 872 0004 00AF     		add	r7, sp, #0
 873              		.cfi_def_cfa_register 7
 874 0006 0346     		mov	r3, r0
 875 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 36


1118:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
 876              		.loc 1 1118 0
 877 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 878 000c 034A     		ldr	r2, .L39
 879 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1119:Generated_Source\PSoC5/CapSense.c **** }
 880              		.loc 1 1119 0
 881 0012 1846     		mov	r0, r3
 882 0014 0C37     		adds	r7, r7, #12
 883              		.cfi_def_cfa_offset 4
 884 0016 BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 0018 80BC     		pop	{r7}
 888              		.cfi_restore 7
 889              		.cfi_def_cfa_offset 0
 890 001a 7047     		bx	lr
 891              	.L40:
 892              		.align	2
 893              	.L39:
 894 001c 00000000 		.word	CapSense_sensorRaw
 895              		.cfi_endproc
 896              	.LFE9:
 897              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 898              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 899              		.align	2
 900              		.global	CapSense_ClearSensors
 901              		.thumb
 902              		.thumb_func
 903              		.type	CapSense_ClearSensors, %function
 904              	CapSense_ClearSensors:
 905              	.LFB10:
1120:Generated_Source\PSoC5/CapSense.c **** 
1121:Generated_Source\PSoC5/CapSense.c **** 
1122:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1123:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1124:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1125:Generated_Source\PSoC5/CapSense.c **** *
1126:Generated_Source\PSoC5/CapSense.c **** * Summary:
1127:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1128:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1129:Generated_Source\PSoC5/CapSense.c **** *
1130:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1131:Generated_Source\PSoC5/CapSense.c **** *  None
1132:Generated_Source\PSoC5/CapSense.c **** *
1133:Generated_Source\PSoC5/CapSense.c **** * Return:
1134:Generated_Source\PSoC5/CapSense.c **** *  None
1135:Generated_Source\PSoC5/CapSense.c **** *
1136:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1137:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1138:Generated_Source\PSoC5/CapSense.c **** {
 906              		.loc 1 1138 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 8
 909              		@ frame_needed = 1, uses_anonymous_args = 0
 910 0000 80B5     		push	{r7, lr}
 911              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 37


 912              		.cfi_offset 7, -8
 913              		.cfi_offset 14, -4
 914 0002 82B0     		sub	sp, sp, #8
 915              		.cfi_def_cfa_offset 16
 916 0004 00AF     		add	r7, sp, #0
 917              		.cfi_def_cfa_register 7
1139:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1140:Generated_Source\PSoC5/CapSense.c ****    
1141:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 918              		.loc 1 1141 0
 919 0006 0023     		movs	r3, #0
 920 0008 FB71     		strb	r3, [r7, #7]
 921 000a 06E0     		b	.L42
 922              	.L43:
1142:Generated_Source\PSoC5/CapSense.c ****     {
1143:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
 923              		.loc 1 1143 0 discriminator 3
 924 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 925 000e 1846     		mov	r0, r3
 926 0010 FFF7FEFF 		bl	CapSense_DisableSensor
1141:Generated_Source\PSoC5/CapSense.c ****     {
 927              		.loc 1 1141 0 discriminator 3
 928 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 929 0016 0133     		adds	r3, r3, #1
 930 0018 FB71     		strb	r3, [r7, #7]
 931              	.L42:
1141:Generated_Source\PSoC5/CapSense.c ****     {
 932              		.loc 1 1141 0 is_stmt 0 discriminator 1
 933 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 934 001c 092B     		cmp	r3, #9
 935 001e F5D9     		bls	.L43
1144:Generated_Source\PSoC5/CapSense.c ****     }
1145:Generated_Source\PSoC5/CapSense.c **** }
 936              		.loc 1 1145 0 is_stmt 1
 937 0020 00BF     		nop
 938 0022 0837     		adds	r7, r7, #8
 939              		.cfi_def_cfa_offset 8
 940 0024 BD46     		mov	sp, r7
 941              		.cfi_def_cfa_register 13
 942              		@ sp needed
 943 0026 80BD     		pop	{r7, pc}
 944              		.cfi_endproc
 945              	.LFE10:
 946              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 947              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 948              		.align	2
 949              		.global	CapSense_EnableSensor
 950              		.thumb
 951              		.thumb_func
 952              		.type	CapSense_EnableSensor, %function
 953              	CapSense_EnableSensor:
 954              	.LFB11:
1146:Generated_Source\PSoC5/CapSense.c **** 
1147:Generated_Source\PSoC5/CapSense.c **** 
1148:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1149:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1150:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 38


1151:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1152:Generated_Source\PSoC5/CapSense.c ****     *
1153:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1154:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1155:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1156:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1157:Generated_Source\PSoC5/CapSense.c ****     *
1158:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1159:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1160:Generated_Source\PSoC5/CapSense.c ****     *
1161:Generated_Source\PSoC5/CapSense.c ****     * Return:
1162:Generated_Source\PSoC5/CapSense.c ****     *  None
1163:Generated_Source\PSoC5/CapSense.c ****     *
1164:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1165:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1166:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1167:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1168:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1169:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1170:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1171:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1172:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1173:Generated_Source\PSoC5/CapSense.c ****     *
1174:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1175:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1176:Generated_Source\PSoC5/CapSense.c ****     {
1177:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1178:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1179:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1180:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1181:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1182:Generated_Source\PSoC5/CapSense.c ****         
1183:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1184:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1185:Generated_Source\PSoC5/CapSense.c ****         {
1186:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1187:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1188:Generated_Source\PSoC5/CapSense.c ****         }
1189:Generated_Source\PSoC5/CapSense.c ****         else
1190:Generated_Source\PSoC5/CapSense.c ****         {
1191:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1192:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1193:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1194:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1195:Generated_Source\PSoC5/CapSense.c ****                         
1196:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1197:Generated_Source\PSoC5/CapSense.c ****             {
1198:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1199:Generated_Source\PSoC5/CapSense.c ****             }
1200:Generated_Source\PSoC5/CapSense.c ****         } 
1201:Generated_Source\PSoC5/CapSense.c ****     }
1202:Generated_Source\PSoC5/CapSense.c ****     
1203:Generated_Source\PSoC5/CapSense.c ****     
1204:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1205:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1206:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1207:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 39


1208:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1209:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1210:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1211:Generated_Source\PSoC5/CapSense.c ****     *
1212:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1213:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1214:Generated_Source\PSoC5/CapSense.c ****     *
1215:Generated_Source\PSoC5/CapSense.c ****     * Return:
1216:Generated_Source\PSoC5/CapSense.c ****     *  None
1217:Generated_Source\PSoC5/CapSense.c ****     *
1218:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1219:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1220:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1221:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1222:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1223:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1224:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1225:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1226:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1227:Generated_Source\PSoC5/CapSense.c ****     *
1228:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1229:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1230:Generated_Source\PSoC5/CapSense.c ****     {
1231:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1232:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1233:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1234:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1235:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1236:Generated_Source\PSoC5/CapSense.c ****         
1237:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1238:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1239:Generated_Source\PSoC5/CapSense.c ****         {
1240:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1241:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1242:Generated_Source\PSoC5/CapSense.c ****         }
1243:Generated_Source\PSoC5/CapSense.c ****         else
1244:Generated_Source\PSoC5/CapSense.c ****         {
1245:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1246:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1247:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1248:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1249:Generated_Source\PSoC5/CapSense.c ****                         
1250:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1251:Generated_Source\PSoC5/CapSense.c ****             {
1252:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1253:Generated_Source\PSoC5/CapSense.c ****             }
1254:Generated_Source\PSoC5/CapSense.c ****         } 
1255:Generated_Source\PSoC5/CapSense.c ****     }
1256:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1257:Generated_Source\PSoC5/CapSense.c **** 
1258:Generated_Source\PSoC5/CapSense.c **** 
1259:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1260:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1261:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1262:Generated_Source\PSoC5/CapSense.c **** *
1263:Generated_Source\PSoC5/CapSense.c **** * Summary:
1264:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 40


1265:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1266:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1267:Generated_Source\PSoC5/CapSense.c **** *
1268:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1269:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1270:Generated_Source\PSoC5/CapSense.c **** *
1271:Generated_Source\PSoC5/CapSense.c **** * Return:
1272:Generated_Source\PSoC5/CapSense.c **** *  None
1273:Generated_Source\PSoC5/CapSense.c **** *
1274:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1275:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1276:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1277:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1278:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1279:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1280:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1281:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1282:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1283:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1284:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1285:Generated_Source\PSoC5/CapSense.c **** *
1286:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1287:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1288:Generated_Source\PSoC5/CapSense.c **** {
 955              		.loc 1 1288 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 16
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 84B0     		sub	sp, sp, #16
 964              		.cfi_def_cfa_offset 24
 965 0004 00AF     		add	r7, sp, #0
 966              		.cfi_def_cfa_register 7
 967 0006 0346     		mov	r3, r0
 968 0008 FB71     		strb	r3, [r7, #7]
1289:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 969              		.loc 1 1289 0
 970 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 971 000c 134A     		ldr	r2, .L46
 972 000e D35C     		ldrb	r3, [r2, r3]
 973 0010 FB73     		strb	r3, [r7, #15]
1290:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 974              		.loc 1 1290 0
 975 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 976 0014 124A     		ldr	r2, .L46+4
 977 0016 D35C     		ldrb	r3, [r2, r3]
 978 0018 BB73     		strb	r3, [r7, #14]
1291:Generated_Source\PSoC5/CapSense.c ****     
1292:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1293:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1294:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1295:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1296:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1297:Generated_Source\PSoC5/CapSense.c ****             */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 41


1298:Generated_Source\PSoC5/CapSense.c ****     
1299:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1300:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 979              		.loc 1 1300 0
 980 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 981 001c 114A     		ldr	r2, .L46+8
 982 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 983 0022 0922     		movs	r2, #9
 984 0024 1A70     		strb	r2, [r3]
1301:Generated_Source\PSoC5/CapSense.c ****     
1302:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1303:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 985              		.loc 1 1303 0
 986 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 987 0028 0F2B     		cmp	r3, #15
 988 002a 01D1     		bne	.L45
1304:Generated_Source\PSoC5/CapSense.c **** 	{
1305:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 989              		.loc 1 1305 0
 990 002c 0723     		movs	r3, #7
 991 002e FB73     		strb	r3, [r7, #15]
 992              	.L45:
1306:Generated_Source\PSoC5/CapSense.c **** 	}
1307:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 993              		.loc 1 1307 0
 994 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 995 0032 0D4A     		ldr	r2, .L46+12
 996 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 997 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 998 003a 0B49     		ldr	r1, .L46+12
 999 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1000 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1001 0042 BA7B     		ldrb	r2, [r7, #14]
 1002 0044 0A43     		orrs	r2, r2, r1
 1003 0046 D2B2     		uxtb	r2, r2
 1004 0048 1A70     		strb	r2, [r3]
1308:Generated_Source\PSoC5/CapSense.c ****     
1309:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1310:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1311:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1312:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1313:Generated_Source\PSoC5/CapSense.c ****         #else
1314:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 1005              		.loc 1 1314 0
 1006 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1007 004c 1846     		mov	r0, r3
 1008 004e FFF7FEFF 		bl	CapSense_AMuxCH0_Set
1315:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1316:Generated_Source\PSoC5/CapSense.c ****                 
1317:Generated_Source\PSoC5/CapSense.c ****     #else
1318:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1319:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1320:Generated_Source\PSoC5/CapSense.c ****             {
1321:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1322:Generated_Source\PSoC5/CapSense.c ****             } 
1323:Generated_Source\PSoC5/CapSense.c ****             else
1324:Generated_Source\PSoC5/CapSense.c ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 42


1325:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1326:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1327:Generated_Source\PSoC5/CapSense.c ****             }
1328:Generated_Source\PSoC5/CapSense.c ****             
1329:Generated_Source\PSoC5/CapSense.c ****         #else
1330:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1331:Generated_Source\PSoC5/CapSense.c ****             {
1332:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1333:Generated_Source\PSoC5/CapSense.c ****             } 
1334:Generated_Source\PSoC5/CapSense.c ****             else
1335:Generated_Source\PSoC5/CapSense.c ****             {
1336:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1337:Generated_Source\PSoC5/CapSense.c ****             }
1338:Generated_Source\PSoC5/CapSense.c ****             
1339:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1340:Generated_Source\PSoC5/CapSense.c ****         
1341:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1342:Generated_Source\PSoC5/CapSense.c **** }
 1009              		.loc 1 1342 0
 1010 0052 00BF     		nop
 1011 0054 1037     		adds	r7, r7, #16
 1012              		.cfi_def_cfa_offset 8
 1013 0056 BD46     		mov	sp, r7
 1014              		.cfi_def_cfa_register 13
 1015              		@ sp needed
 1016 0058 80BD     		pop	{r7, pc}
 1017              	.L47:
 1018 005a 00BF     		.align	2
 1019              	.L46:
 1020 005c 00000000 		.word	CapSense_portTable
 1021 0060 00000000 		.word	CapSense_maskTable
 1022 0064 00000000 		.word	CapSense_pcTable
 1023 0068 00000000 		.word	CapSense_csTable
 1024              		.cfi_endproc
 1025              	.LFE11:
 1026              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 1027              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 1028              		.align	2
 1029              		.global	CapSense_DisableSensor
 1030              		.thumb
 1031              		.thumb_func
 1032              		.type	CapSense_DisableSensor, %function
 1033              	CapSense_DisableSensor:
 1034              	.LFB12:
1343:Generated_Source\PSoC5/CapSense.c **** 
1344:Generated_Source\PSoC5/CapSense.c **** 
1345:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1346:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1347:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1348:Generated_Source\PSoC5/CapSense.c **** *
1349:Generated_Source\PSoC5/CapSense.c **** * Summary:
1350:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1351:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1352:Generated_Source\PSoC5/CapSense.c **** *
1353:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1354:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1355:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 43


1356:Generated_Source\PSoC5/CapSense.c **** * Return:
1357:Generated_Source\PSoC5/CapSense.c **** *  None
1358:Generated_Source\PSoC5/CapSense.c **** *
1359:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1360:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1361:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1362:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1363:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1364:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1365:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1366:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1367:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1368:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1369:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1370:Generated_Source\PSoC5/CapSense.c **** *
1371:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1372:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1373:Generated_Source\PSoC5/CapSense.c **** {
 1035              		.loc 1 1373 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 16
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039 0000 80B5     		push	{r7, lr}
 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 7, -8
 1042              		.cfi_offset 14, -4
 1043 0002 84B0     		sub	sp, sp, #16
 1044              		.cfi_def_cfa_offset 24
 1045 0004 00AF     		add	r7, sp, #0
 1046              		.cfi_def_cfa_register 7
 1047 0006 0346     		mov	r3, r0
 1048 0008 FB71     		strb	r3, [r7, #7]
1374:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 1049              		.loc 1 1374 0
 1050 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1051 000c 144A     		ldr	r2, .L50
 1052 000e D35C     		ldrb	r3, [r2, r3]
 1053 0010 FB73     		strb	r3, [r7, #15]
1375:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 1054              		.loc 1 1375 0
 1055 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1056 0014 134A     		ldr	r2, .L50+4
 1057 0016 D35C     		ldrb	r3, [r2, r3]
 1058 0018 BB73     		strb	r3, [r7, #14]
1376:Generated_Source\PSoC5/CapSense.c ****     
1377:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1378:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1379:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1380:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1381:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1382:Generated_Source\PSoC5/CapSense.c ****             */
1383:Generated_Source\PSoC5/CapSense.c ****     
1384:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1385:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1386:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1387:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1388:Generated_Source\PSoC5/CapSense.c ****         #else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 44


1389:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 1059              		.loc 1 1389 0
 1060 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1061 001c 1846     		mov	r0, r3
 1062 001e FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
1390:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1391:Generated_Source\PSoC5/CapSense.c ****                 
1392:Generated_Source\PSoC5/CapSense.c ****     #else
1393:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1394:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1395:Generated_Source\PSoC5/CapSense.c ****             {
1396:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1397:Generated_Source\PSoC5/CapSense.c ****             } 
1398:Generated_Source\PSoC5/CapSense.c ****             else
1399:Generated_Source\PSoC5/CapSense.c ****             {
1400:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1401:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1402:Generated_Source\PSoC5/CapSense.c ****             }
1403:Generated_Source\PSoC5/CapSense.c ****             
1404:Generated_Source\PSoC5/CapSense.c ****         #else
1405:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1406:Generated_Source\PSoC5/CapSense.c ****             {
1407:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1408:Generated_Source\PSoC5/CapSense.c ****             } 
1409:Generated_Source\PSoC5/CapSense.c ****             else
1410:Generated_Source\PSoC5/CapSense.c ****             {
1411:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1412:Generated_Source\PSoC5/CapSense.c ****             }
1413:Generated_Source\PSoC5/CapSense.c ****             
1414:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1415:Generated_Source\PSoC5/CapSense.c ****         
1416:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1417:Generated_Source\PSoC5/CapSense.c ****     
1418:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1419:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 1063              		.loc 1 1419 0
 1064 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1065 0024 0F2B     		cmp	r3, #15
 1066 0026 01D1     		bne	.L49
1420:Generated_Source\PSoC5/CapSense.c **** 	{
1421:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 1067              		.loc 1 1421 0
 1068 0028 0723     		movs	r3, #7
 1069 002a FB73     		strb	r3, [r7, #15]
 1070              	.L49:
1422:Generated_Source\PSoC5/CapSense.c **** 	}
1423:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 1071              		.loc 1 1423 0
 1072 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1073 002e 0E4A     		ldr	r2, .L50+8
 1074 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1075 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1076 0036 0C49     		ldr	r1, .L50+8
 1077 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1078 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1079 003e BA7B     		ldrb	r2, [r7, #14]
 1080 0040 D243     		mvns	r2, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 45


 1081 0042 D2B2     		uxtb	r2, r2
 1082 0044 0A40     		ands	r2, r2, r1
 1083 0046 D2B2     		uxtb	r2, r2
 1084 0048 1A70     		strb	r2, [r3]
1424:Generated_Source\PSoC5/CapSense.c ****     
1425:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1426:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1427:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
1428:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1429:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 1085              		.loc 1 1429 0
 1086 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1087 004c 074A     		ldr	r2, .L50+12
 1088 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1089 0052 0922     		movs	r2, #9
 1090 0054 1A70     		strb	r2, [r3]
1430:Generated_Source\PSoC5/CapSense.c ****     #else
1431:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1432:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1433:Generated_Source\PSoC5/CapSense.c **** }
 1091              		.loc 1 1433 0
 1092 0056 00BF     		nop
 1093 0058 1037     		adds	r7, r7, #16
 1094              		.cfi_def_cfa_offset 8
 1095 005a BD46     		mov	sp, r7
 1096              		.cfi_def_cfa_register 13
 1097              		@ sp needed
 1098 005c 80BD     		pop	{r7, pc}
 1099              	.L51:
 1100 005e 00BF     		.align	2
 1101              	.L50:
 1102 0060 00000000 		.word	CapSense_portTable
 1103 0064 00000000 		.word	CapSense_maskTable
 1104 0068 00000000 		.word	CapSense_csTable
 1105 006c 00000000 		.word	CapSense_pcTable
 1106              		.cfi_endproc
 1107              	.LFE12:
 1108              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 1109              		.section	.text.CapSense_PreScan,"ax",%progbits
 1110              		.align	2
 1111              		.global	CapSense_PreScan
 1112              		.thumb
 1113              		.thumb_func
 1114              		.type	CapSense_PreScan, %function
 1115              	CapSense_PreScan:
 1116              	.LFB13:
1434:Generated_Source\PSoC5/CapSense.c **** 
1435:Generated_Source\PSoC5/CapSense.c **** 
1436:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1437:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1438:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1439:Generated_Source\PSoC5/CapSense.c **** *
1440:Generated_Source\PSoC5/CapSense.c **** * Summary:
1441:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1442:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1443:Generated_Source\PSoC5/CapSense.c **** *
1444:Generated_Source\PSoC5/CapSense.c **** * Parameters:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 46


1445:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1446:Generated_Source\PSoC5/CapSense.c **** *
1447:Generated_Source\PSoC5/CapSense.c **** * Return:
1448:Generated_Source\PSoC5/CapSense.c **** *  None
1449:Generated_Source\PSoC5/CapSense.c **** *
1450:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1451:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1452:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1453:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1454:Generated_Source\PSoC5/CapSense.c **** *
1455:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1456:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1457:Generated_Source\PSoC5/CapSense.c **** {
 1117              		.loc 1 1457 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 8
 1120              		@ frame_needed = 1, uses_anonymous_args = 0
 1121 0000 80B5     		push	{r7, lr}
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 82B0     		sub	sp, sp, #8
 1126              		.cfi_def_cfa_offset 16
 1127 0004 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 1129 0006 0346     		mov	r3, r0
 1130 0008 FB71     		strb	r3, [r7, #7]
1458:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1459:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
 1131              		.loc 1 1459 0
 1132 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1133 000c 1846     		mov	r0, r3
 1134 000e FFF7FEFF 		bl	CapSense_SetScanSlotSettings
1460:Generated_Source\PSoC5/CapSense.c ****     
1461:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1462:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1463:Generated_Source\PSoC5/CapSense.c **** 
1464:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1465:Generated_Source\PSoC5/CapSense.c ****     
1466:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1467:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1468:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1469:Generated_Source\PSoC5/CapSense.c **** 
1470:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1471:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
 1135              		.loc 1 1471 0
 1136 0012 104A     		ldr	r2, .L53
 1137 0014 0F4B     		ldr	r3, .L53
 1138 0016 1B78     		ldrb	r3, [r3]
 1139 0018 DBB2     		uxtb	r3, r3
 1140 001a 43F00103 		orr	r3, r3, #1
 1141 001e DBB2     		uxtb	r3, r3
 1142 0020 1370     		strb	r3, [r2]
1472:Generated_Source\PSoC5/CapSense.c ****         
1473:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1474:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1475:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 47


1476:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1477:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1478:Generated_Source\PSoC5/CapSense.c ****             #else
1479:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 1143              		.loc 1 1479 0
 1144 0022 0D4A     		ldr	r2, .L53+4
 1145 0024 0C4B     		ldr	r3, .L53+4
 1146 0026 1B78     		ldrb	r3, [r3]
 1147 0028 DBB2     		uxtb	r3, r3
 1148 002a 23F00103 		bic	r3, r3, #1
 1149 002e DBB2     		uxtb	r3, r3
 1150 0030 1370     		strb	r3, [r2]
1480:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1481:Generated_Source\PSoC5/CapSense.c **** 
1482:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1483:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
 1151              		.loc 1 1483 0
 1152 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1153 0034 1846     		mov	r0, r3
 1154 0036 FFF7FEFF 		bl	CapSense_EnableSensor
1484:Generated_Source\PSoC5/CapSense.c ****             
1485:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1486:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1487:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1488:Generated_Source\PSoC5/CapSense.c ****             
1489:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1490:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1491:Generated_Source\PSoC5/CapSense.c ****                 
1492:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1493:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1494:Generated_Source\PSoC5/CapSense.c ****             
1495:Generated_Source\PSoC5/CapSense.c ****         #else
1496:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1497:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1498:Generated_Source\PSoC5/CapSense.c ****             
1499:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1500:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1501:Generated_Source\PSoC5/CapSense.c ****              
1502:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1503:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1504:Generated_Source\PSoC5/CapSense.c ****         
1505:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1506:Generated_Source\PSoC5/CapSense.c ****         
1507:Generated_Source\PSoC5/CapSense.c ****     #else
1508:Generated_Source\PSoC5/CapSense.c **** 
1509:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1510:Generated_Source\PSoC5/CapSense.c ****         {
1511:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1512:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1513:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1514:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1515:Generated_Source\PSoC5/CapSense.c ****                 #else
1516:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1517:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1518:Generated_Source\PSoC5/CapSense.c ****                 
1519:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1520:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 48


1521:Generated_Source\PSoC5/CapSense.c ****                 
1522:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1523:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1524:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1525:Generated_Source\PSoC5/CapSense.c ****                 
1526:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1527:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1528:Generated_Source\PSoC5/CapSense.c ****                     
1529:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1530:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1531:Generated_Source\PSoC5/CapSense.c ****                 
1532:Generated_Source\PSoC5/CapSense.c ****             #else
1533:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1534:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1535:Generated_Source\PSoC5/CapSense.c ****                 
1536:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1537:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1538:Generated_Source\PSoC5/CapSense.c ****                     
1539:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1540:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1541:Generated_Source\PSoC5/CapSense.c ****             
1542:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1543:Generated_Source\PSoC5/CapSense.c ****             
1544:Generated_Source\PSoC5/CapSense.c ****         }
1545:Generated_Source\PSoC5/CapSense.c ****         
1546:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1547:Generated_Source\PSoC5/CapSense.c ****         {
1548:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1549:Generated_Source\PSoC5/CapSense.c ****             
1550:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1551:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1552:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1553:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1554:Generated_Source\PSoC5/CapSense.c ****                 #else 
1555:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1556:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1557:Generated_Source\PSoC5/CapSense.c ****                 
1558:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1559:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1560:Generated_Source\PSoC5/CapSense.c ****                 
1561:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1562:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1563:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1564:Generated_Source\PSoC5/CapSense.c ****                 
1565:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1566:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1567:Generated_Source\PSoC5/CapSense.c ****                     
1568:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1569:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1570:Generated_Source\PSoC5/CapSense.c ****                 
1571:Generated_Source\PSoC5/CapSense.c ****             #else
1572:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1573:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1574:Generated_Source\PSoC5/CapSense.c ****                 
1575:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1576:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1577:Generated_Source\PSoC5/CapSense.c ****                 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 49


1578:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1579:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1580:Generated_Source\PSoC5/CapSense.c ****             
1581:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1582:Generated_Source\PSoC5/CapSense.c ****         }
1583:Generated_Source\PSoC5/CapSense.c ****     
1584:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1585:Generated_Source\PSoC5/CapSense.c ****     
1586:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1587:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
 1155              		.loc 1 1587 0
 1156 003a 064A     		ldr	r2, .L53
 1157 003c 054B     		ldr	r3, .L53
 1158 003e 1B78     		ldrb	r3, [r3]
 1159 0040 DBB2     		uxtb	r3, r3
 1160 0042 43F00203 		orr	r3, r3, #2
 1161 0046 DBB2     		uxtb	r3, r3
 1162 0048 1370     		strb	r3, [r2]
1588:Generated_Source\PSoC5/CapSense.c ****     
1589:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1590:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1591:Generated_Source\PSoC5/CapSense.c **** 
1592:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1593:Generated_Source\PSoC5/CapSense.c **** 
1594:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1595:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1596:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1597:Generated_Source\PSoC5/CapSense.c **** }
 1163              		.loc 1 1597 0
 1164 004a 00BF     		nop
 1165 004c 0837     		adds	r7, r7, #8
 1166              		.cfi_def_cfa_offset 8
 1167 004e BD46     		mov	sp, r7
 1168              		.cfi_def_cfa_register 13
 1169              		@ sp needed
 1170 0050 80BD     		pop	{r7, pc}
 1171              	.L54:
 1172 0052 00BF     		.align	2
 1173              	.L53:
 1174 0054 7C640040 		.word	1073767548
 1175 0058 70580040 		.word	1073764464
 1176              		.cfi_endproc
 1177              	.LFE13:
 1178              		.size	CapSense_PreScan, .-CapSense_PreScan
 1179              		.section	.text.CapSense_PostScan,"ax",%progbits
 1180              		.align	2
 1181              		.global	CapSense_PostScan
 1182              		.thumb
 1183              		.thumb_func
 1184              		.type	CapSense_PostScan, %function
 1185              	CapSense_PostScan:
 1186              	.LFB14:
1598:Generated_Source\PSoC5/CapSense.c **** 
1599:Generated_Source\PSoC5/CapSense.c **** 
1600:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1601:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1602:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 50


1603:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1604:Generated_Source\PSoC5/CapSense.c ****     *
1605:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1606:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1607:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1608:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1609:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1610:Generated_Source\PSoC5/CapSense.c ****     *
1611:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1612:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1613:Generated_Source\PSoC5/CapSense.c ****     *
1614:Generated_Source\PSoC5/CapSense.c ****     * Return:
1615:Generated_Source\PSoC5/CapSense.c ****     *  None
1616:Generated_Source\PSoC5/CapSense.c ****     *
1617:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1618:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1619:Generated_Source\PSoC5/CapSense.c ****     *
1620:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1621:Generated_Source\PSoC5/CapSense.c ****     *  No
1622:Generated_Source\PSoC5/CapSense.c ****     *
1623:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1624:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1625:Generated_Source\PSoC5/CapSense.c ****     {
 1187              		.loc 1 1625 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 8
 1190              		@ frame_needed = 1, uses_anonymous_args = 0
 1191 0000 80B5     		push	{r7, lr}
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 82B0     		sub	sp, sp, #8
 1196              		.cfi_def_cfa_offset 16
 1197 0004 00AF     		add	r7, sp, #0
 1198              		.cfi_def_cfa_register 7
 1199 0006 0346     		mov	r3, r0
 1200 0008 FB71     		strb	r3, [r7, #7]
1626:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1627:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 1201              		.loc 1 1627 0
 1202 000a 1E4A     		ldr	r2, .L56
 1203 000c 1D4B     		ldr	r3, .L56
 1204 000e 1B78     		ldrb	r3, [r3]
 1205 0010 DBB2     		uxtb	r3, r3
 1206 0012 23F00303 		bic	r3, r3, #3
 1207 0016 DBB2     		uxtb	r3, r3
 1208 0018 1370     		strb	r3, [r2]
1628:Generated_Source\PSoC5/CapSense.c ****         
1629:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1630:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1631:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1632:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1633:Generated_Source\PSoC5/CapSense.c ****         #else
1634:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 1209              		.loc 1 1634 0
 1210 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1211 001c 1A4A     		ldr	r2, .L56+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 51


 1212 001e 1278     		ldrb	r2, [r2]
 1213 0020 D2B2     		uxtb	r2, r2
 1214 0022 92B2     		uxth	r2, r2
 1215 0024 1202     		lsls	r2, r2, #8
 1216 0026 91B2     		uxth	r1, r2
 1217 0028 184A     		ldr	r2, .L56+8
 1218 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1635:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 1219              		.loc 1 1635 0
 1220 002e 184B     		ldr	r3, .L56+12
 1221 0030 1B78     		ldrb	r3, [r3]
 1222 0032 DBB2     		uxtb	r3, r3
 1223 0034 9AB2     		uxth	r2, r3
 1224 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1225 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1226 003a 1448     		ldr	r0, .L56+8
 1227 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1228 0040 0A43     		orrs	r2, r2, r1
 1229 0042 91B2     		uxth	r1, r2
 1230 0044 114A     		ldr	r2, .L56+8
 1231 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1636:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 1232              		.loc 1 1636 0
 1233 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1637:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
 1234              		.loc 1 1637 0
 1235 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1236 004e 0F49     		ldr	r1, .L56+8
 1237 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1636:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 1238              		.loc 1 1636 0
 1239 0054 D243     		mvns	r2, r2
 1240 0056 91B2     		uxth	r1, r2
 1241 0058 0C4A     		ldr	r2, .L56+8
 1242 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1638:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1639:Generated_Source\PSoC5/CapSense.c ****         
1640:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1641:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 1243              		.loc 1 1641 0
 1244 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1245 0060 1846     		mov	r0, r3
 1246 0062 FFF7FEFF 		bl	CapSense_DisableSensor
1642:Generated_Source\PSoC5/CapSense.c ****         
1643:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1644:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1645:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 1247              		.loc 1 1645 0
 1248 0066 0020     		movs	r0, #0
 1249 0068 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
1646:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1647:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1648:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1649:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1650:Generated_Source\PSoC5/CapSense.c ****         #else
1651:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1652:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 52


1653:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1654:Generated_Source\PSoC5/CapSense.c ****             
1655:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1656:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1657:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1658:Generated_Source\PSoC5/CapSense.c ****         #else
1659:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 1250              		.loc 1 1659 0
 1251 006c 094A     		ldr	r2, .L56+16
 1252 006e 094B     		ldr	r3, .L56+16
 1253 0070 1B78     		ldrb	r3, [r3]
 1254 0072 DBB2     		uxtb	r3, r3
 1255 0074 43F00103 		orr	r3, r3, #1
 1256 0078 DBB2     		uxtb	r3, r3
 1257 007a 1370     		strb	r3, [r2]
1660:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1661:Generated_Source\PSoC5/CapSense.c ****     }
 1258              		.loc 1 1661 0
 1259 007c 00BF     		nop
 1260 007e 0837     		adds	r7, r7, #8
 1261              		.cfi_def_cfa_offset 8
 1262 0080 BD46     		mov	sp, r7
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 0082 80BD     		pop	{r7, pc}
 1266              	.L57:
 1267              		.align	2
 1268              	.L56:
 1269 0084 7C640040 		.word	1073767548
 1270 0088 1F640040 		.word	1073767455
 1271 008c 00000000 		.word	CapSense_sensorRaw
 1272 0090 0F640040 		.word	1073767439
 1273 0094 70580040 		.word	1073764464
 1274              		.cfi_endproc
 1275              	.LFE14:
 1276              		.size	CapSense_PostScan, .-CapSense_PostScan
 1277              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 1278              		.align	2
 1279              		.global	CapSense_SetPrescaler
 1280              		.thumb
 1281              		.thumb_func
 1282              		.type	CapSense_SetPrescaler, %function
 1283              	CapSense_SetPrescaler:
 1284              	.LFB15:
1662:Generated_Source\PSoC5/CapSense.c ****     
1663:Generated_Source\PSoC5/CapSense.c **** #else
1664:Generated_Source\PSoC5/CapSense.c **** 
1665:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1666:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1667:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1668:Generated_Source\PSoC5/CapSense.c ****     *
1669:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1670:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1671:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1672:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1673:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1674:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 53


1675:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1676:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1677:Generated_Source\PSoC5/CapSense.c ****     *
1678:Generated_Source\PSoC5/CapSense.c ****     * Return:
1679:Generated_Source\PSoC5/CapSense.c ****     *  None
1680:Generated_Source\PSoC5/CapSense.c ****     *
1681:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1682:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1683:Generated_Source\PSoC5/CapSense.c ****     *
1684:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1685:Generated_Source\PSoC5/CapSense.c ****     *  No
1686:Generated_Source\PSoC5/CapSense.c ****     *
1687:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1688:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1689:Generated_Source\PSoC5/CapSense.c ****     {
1690:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1691:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1692:Generated_Source\PSoC5/CapSense.c ****         {
1693:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1694:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1695:Generated_Source\PSoC5/CapSense.c ****         }
1696:Generated_Source\PSoC5/CapSense.c ****         
1697:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1698:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1699:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1700:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1701:Generated_Source\PSoC5/CapSense.c ****         #else
1702:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1703:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1704:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1705:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1706:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1707:Generated_Source\PSoC5/CapSense.c ****         
1708:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1709:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1710:Generated_Source\PSoC5/CapSense.c ****         
1711:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1712:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1713:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1714:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1715:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1716:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1717:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1718:Generated_Source\PSoC5/CapSense.c ****         #else
1719:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1720:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1721:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1722:Generated_Source\PSoC5/CapSense.c ****         
1723:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1724:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1725:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1726:Generated_Source\PSoC5/CapSense.c ****         #else
1727:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1728:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1729:Generated_Source\PSoC5/CapSense.c ****     }
1730:Generated_Source\PSoC5/CapSense.c ****     
1731:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 54


1732:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1733:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1734:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1735:Generated_Source\PSoC5/CapSense.c ****     *
1736:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1737:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1738:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1739:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1740:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1741:Generated_Source\PSoC5/CapSense.c ****     *
1742:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1743:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1744:Generated_Source\PSoC5/CapSense.c ****     *
1745:Generated_Source\PSoC5/CapSense.c ****     * Return:
1746:Generated_Source\PSoC5/CapSense.c ****     *  None
1747:Generated_Source\PSoC5/CapSense.c ****     *
1748:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1749:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1750:Generated_Source\PSoC5/CapSense.c ****     *
1751:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1752:Generated_Source\PSoC5/CapSense.c ****     *  No
1753:Generated_Source\PSoC5/CapSense.c ****     *
1754:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1755:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1756:Generated_Source\PSoC5/CapSense.c ****     {
1757:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1758:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1759:Generated_Source\PSoC5/CapSense.c ****         {
1760:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1761:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1762:Generated_Source\PSoC5/CapSense.c ****         }
1763:Generated_Source\PSoC5/CapSense.c ****         
1764:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1765:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1766:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1767:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1768:Generated_Source\PSoC5/CapSense.c ****         #else
1769:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1770:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1771:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1772:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1773:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1774:Generated_Source\PSoC5/CapSense.c ****         
1775:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1776:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1777:Generated_Source\PSoC5/CapSense.c ****         
1778:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1779:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1780:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1781:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1782:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1783:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1784:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1785:Generated_Source\PSoC5/CapSense.c ****         #else
1786:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1787:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1788:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 55


1789:Generated_Source\PSoC5/CapSense.c **** 
1790:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1791:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1792:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1793:Generated_Source\PSoC5/CapSense.c ****         #else
1794:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1795:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1796:Generated_Source\PSoC5/CapSense.c ****     }
1797:Generated_Source\PSoC5/CapSense.c ****     
1798:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1799:Generated_Source\PSoC5/CapSense.c **** 
1800:Generated_Source\PSoC5/CapSense.c **** 
1801:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1802:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1803:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1804:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1805:Generated_Source\PSoC5/CapSense.c ****     *
1806:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1807:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1808:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1809:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1810:Generated_Source\PSoC5/CapSense.c ****     *
1811:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1812:Generated_Source\PSoC5/CapSense.c ****     *  None
1813:Generated_Source\PSoC5/CapSense.c ****     *
1814:Generated_Source\PSoC5/CapSense.c ****     * Return:
1815:Generated_Source\PSoC5/CapSense.c ****     *  None
1816:Generated_Source\PSoC5/CapSense.c ****     *
1817:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1818:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1819:Generated_Source\PSoC5/CapSense.c ****     {
1820:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1821:Generated_Source\PSoC5/CapSense.c ****         
1822:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1823:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1824:Generated_Source\PSoC5/CapSense.c ****         {
1825:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1826:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1827:Generated_Source\PSoC5/CapSense.c ****         }
1828:Generated_Source\PSoC5/CapSense.c ****     }
1829:Generated_Source\PSoC5/CapSense.c ****     
1830:Generated_Source\PSoC5/CapSense.c ****     
1831:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1832:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1833:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1834:Generated_Source\PSoC5/CapSense.c ****     *
1835:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1836:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1837:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1838:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1839:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1840:Generated_Source\PSoC5/CapSense.c ****     * 
1841:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1842:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1843:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1844:Generated_Source\PSoC5/CapSense.c ****     *
1845:Generated_Source\PSoC5/CapSense.c ****     * Return:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 56


1846:Generated_Source\PSoC5/CapSense.c ****     *  None
1847:Generated_Source\PSoC5/CapSense.c ****     *
1848:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1849:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1850:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1851:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1852:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1853:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1854:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1855:Generated_Source\PSoC5/CapSense.c ****     *
1856:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1857:Generated_Source\PSoC5/CapSense.c ****     *  No
1858:Generated_Source\PSoC5/CapSense.c ****     *
1859:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1860:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1861:Generated_Source\PSoC5/CapSense.c ****     {
1862:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1863:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1864:Generated_Source\PSoC5/CapSense.c ****             
1865:Generated_Source\PSoC5/CapSense.c ****         #else
1866:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1867:Generated_Source\PSoC5/CapSense.c ****             {
1868:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1869:Generated_Source\PSoC5/CapSense.c ****             }
1870:Generated_Source\PSoC5/CapSense.c ****             else
1871:Generated_Source\PSoC5/CapSense.c ****             {
1872:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1873:Generated_Source\PSoC5/CapSense.c ****             }
1874:Generated_Source\PSoC5/CapSense.c ****     
1875:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1876:Generated_Source\PSoC5/CapSense.c ****     }
1877:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1878:Generated_Source\PSoC5/CapSense.c **** 
1879:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1880:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1881:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1882:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1883:Generated_Source\PSoC5/CapSense.c ****     *
1884:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1885:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1886:Generated_Source\PSoC5/CapSense.c ****     *
1887:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1888:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1889:Generated_Source\PSoC5/CapSense.c ****     *
1890:Generated_Source\PSoC5/CapSense.c ****     * Return:
1891:Generated_Source\PSoC5/CapSense.c ****     *  None
1892:Generated_Source\PSoC5/CapSense.c ****     *
1893:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1894:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1895:Generated_Source\PSoC5/CapSense.c ****     {
 1285              		.loc 1 1895 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 8
 1288              		@ frame_needed = 1, uses_anonymous_args = 0
 1289              		@ link register save eliminated.
 1290 0000 80B4     		push	{r7}
 1291              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 57


 1292              		.cfi_offset 7, -4
 1293 0002 83B0     		sub	sp, sp, #12
 1294              		.cfi_def_cfa_offset 16
 1295 0004 00AF     		add	r7, sp, #0
 1296              		.cfi_def_cfa_register 7
 1297 0006 0346     		mov	r3, r0
 1298 0008 FB71     		strb	r3, [r7, #7]
1896:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1897:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1898:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 1299              		.loc 1 1898 0
 1300 000a 064A     		ldr	r2, .L59
 1301 000c FB79     		ldrb	r3, [r7, #7]
 1302 000e 1370     		strb	r3, [r2]
1899:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1303              		.loc 1 1899 0
 1304 0010 054A     		ldr	r2, .L59+4
 1305 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1306 0014 5B08     		lsrs	r3, r3, #1
 1307 0016 DBB2     		uxtb	r3, r3
 1308 0018 1370     		strb	r3, [r2]
1900:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1901:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1902:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1903:Generated_Source\PSoC5/CapSense.c ****         #else
1904:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1905:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1906:Generated_Source\PSoC5/CapSense.c ****     }
 1309              		.loc 1 1906 0
 1310 001a 00BF     		nop
 1311 001c 0C37     		adds	r7, r7, #12
 1312              		.cfi_def_cfa_offset 4
 1313 001e BD46     		mov	sp, r7
 1314              		.cfi_def_cfa_register 13
 1315              		@ sp needed
 1316 0020 80BC     		pop	{r7}
 1317              		.cfi_restore 7
 1318              		.cfi_def_cfa_offset 0
 1319 0022 7047     		bx	lr
 1320              	.L60:
 1321              		.align	2
 1322              	.L59:
 1323 0024 28640040 		.word	1073767464
 1324 0028 38640040 		.word	1073767480
 1325              		.cfi_endproc
 1326              	.LFE15:
 1327              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 1328              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 1329              		.align	2
 1330              		.global	CapSense_GetPrescaler
 1331              		.thumb
 1332              		.thumb_func
 1333              		.type	CapSense_GetPrescaler, %function
 1334              	CapSense_GetPrescaler:
 1335              	.LFB16:
1907:Generated_Source\PSoC5/CapSense.c **** 
1908:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 58


1909:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1910:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1911:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1912:Generated_Source\PSoC5/CapSense.c ****     *
1913:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1914:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1915:Generated_Source\PSoC5/CapSense.c ****     *
1916:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1917:Generated_Source\PSoC5/CapSense.c ****     *  None
1918:Generated_Source\PSoC5/CapSense.c ****     *
1919:Generated_Source\PSoC5/CapSense.c ****     * Return:
1920:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1921:Generated_Source\PSoC5/CapSense.c ****     *
1922:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1923:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1924:Generated_Source\PSoC5/CapSense.c ****     {
 1336              		.loc 1 1924 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 8
 1339              		@ frame_needed = 1, uses_anonymous_args = 0
 1340              		@ link register save eliminated.
 1341 0000 80B4     		push	{r7}
 1342              		.cfi_def_cfa_offset 4
 1343              		.cfi_offset 7, -4
 1344 0002 83B0     		sub	sp, sp, #12
 1345              		.cfi_def_cfa_offset 16
 1346 0004 00AF     		add	r7, sp, #0
 1347              		.cfi_def_cfa_register 7
1925:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
 1348              		.loc 1 1925 0
 1349 0006 0023     		movs	r3, #0
 1350 0008 FB71     		strb	r3, [r7, #7]
1926:Generated_Source\PSoC5/CapSense.c **** 
1927:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1928:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1929:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 1351              		.loc 1 1929 0
 1352 000a 044B     		ldr	r3, .L63
 1353 000c 1B78     		ldrb	r3, [r3]
 1354 000e FB71     		strb	r3, [r7, #7]
1930:Generated_Source\PSoC5/CapSense.c ****             
1931:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1932:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1933:Generated_Source\PSoC5/CapSense.c ****             
1934:Generated_Source\PSoC5/CapSense.c ****         #else
1935:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1936:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1937:Generated_Source\PSoC5/CapSense.c ****         
1938:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
 1355              		.loc 1 1938 0
 1356 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1939:Generated_Source\PSoC5/CapSense.c ****     }
 1357              		.loc 1 1939 0
 1358 0012 1846     		mov	r0, r3
 1359 0014 0C37     		adds	r7, r7, #12
 1360              		.cfi_def_cfa_offset 4
 1361 0016 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 59


 1362              		.cfi_def_cfa_register 13
 1363              		@ sp needed
 1364 0018 80BC     		pop	{r7}
 1365              		.cfi_restore 7
 1366              		.cfi_def_cfa_offset 0
 1367 001a 7047     		bx	lr
 1368              	.L64:
 1369              		.align	2
 1370              	.L63:
 1371 001c 28640040 		.word	1073767464
 1372              		.cfi_endproc
 1373              	.LFE16:
 1374              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 1375              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 1376              		.align	2
 1377              		.global	CapSense_SetScanSpeed
 1378              		.thumb
 1379              		.thumb_func
 1380              		.type	CapSense_SetScanSpeed, %function
 1381              	CapSense_SetScanSpeed:
 1382              	.LFB17:
1940:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1941:Generated_Source\PSoC5/CapSense.c **** 
1942:Generated_Source\PSoC5/CapSense.c **** 
1943:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1944:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1945:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1946:Generated_Source\PSoC5/CapSense.c **** *
1947:Generated_Source\PSoC5/CapSense.c **** * Summary:
1948:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1949:Generated_Source\PSoC5/CapSense.c **** *
1950:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1951:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1952:Generated_Source\PSoC5/CapSense.c **** *
1953:Generated_Source\PSoC5/CapSense.c **** * Return:
1954:Generated_Source\PSoC5/CapSense.c **** *  None
1955:Generated_Source\PSoC5/CapSense.c **** *
1956:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1957:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1958:Generated_Source\PSoC5/CapSense.c **** {
 1383              		.loc 1 1958 0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 8
 1386              		@ frame_needed = 1, uses_anonymous_args = 0
 1387              		@ link register save eliminated.
 1388 0000 80B4     		push	{r7}
 1389              		.cfi_def_cfa_offset 4
 1390              		.cfi_offset 7, -4
 1391 0002 83B0     		sub	sp, sp, #12
 1392              		.cfi_def_cfa_offset 16
 1393 0004 00AF     		add	r7, sp, #0
 1394              		.cfi_def_cfa_register 7
 1395 0006 0346     		mov	r3, r0
 1396 0008 FB71     		strb	r3, [r7, #7]
1959:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 1397              		.loc 1 1959 0
 1398 000a 044A     		ldr	r2, .L66
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 60


 1399 000c FB79     		ldrb	r3, [r7, #7]
 1400 000e 1370     		strb	r3, [r2]
1960:Generated_Source\PSoC5/CapSense.c **** }
 1401              		.loc 1 1960 0
 1402 0010 00BF     		nop
 1403 0012 0C37     		adds	r7, r7, #12
 1404              		.cfi_def_cfa_offset 4
 1405 0014 BD46     		mov	sp, r7
 1406              		.cfi_def_cfa_register 13
 1407              		@ sp needed
 1408 0016 80BC     		pop	{r7}
 1409              		.cfi_restore 7
 1410              		.cfi_def_cfa_offset 0
 1411 0018 7047     		bx	lr
 1412              	.L67:
 1413 001a 00BF     		.align	2
 1414              	.L66:
 1415 001c 8D640040 		.word	1073767565
 1416              		.cfi_endproc
 1417              	.LFE17:
 1418              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 1419              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 1420              		.align	2
 1421              		.global	CapSense_SetAnalogSwitchesSource
 1422              		.thumb
 1423              		.thumb_func
 1424              		.type	CapSense_SetAnalogSwitchesSource, %function
 1425              	CapSense_SetAnalogSwitchesSource:
 1426              	.LFB18:
1961:Generated_Source\PSoC5/CapSense.c **** 
1962:Generated_Source\PSoC5/CapSense.c **** 
1963:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1964:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1965:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1966:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1967:Generated_Source\PSoC5/CapSense.c ****     *
1968:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1969:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1970:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1971:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1972:Generated_Source\PSoC5/CapSense.c ****     *
1973:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1974:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1975:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1976:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1977:Generated_Source\PSoC5/CapSense.c ****     *
1978:Generated_Source\PSoC5/CapSense.c ****     * Return:
1979:Generated_Source\PSoC5/CapSense.c ****     *  None
1980:Generated_Source\PSoC5/CapSense.c ****     *
1981:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1982:Generated_Source\PSoC5/CapSense.c ****     *  No
1983:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1984:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1985:Generated_Source\PSoC5/CapSense.c ****                       
1986:Generated_Source\PSoC5/CapSense.c ****     {
 1427              		.loc 1 1986 0
 1428              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 61


 1429              		@ args = 0, pretend = 0, frame = 8
 1430              		@ frame_needed = 1, uses_anonymous_args = 0
 1431              		@ link register save eliminated.
 1432 0000 80B4     		push	{r7}
 1433              		.cfi_def_cfa_offset 4
 1434              		.cfi_offset 7, -4
 1435 0002 83B0     		sub	sp, sp, #12
 1436              		.cfi_def_cfa_offset 16
 1437 0004 00AF     		add	r7, sp, #0
 1438              		.cfi_def_cfa_register 7
 1439 0006 0346     		mov	r3, r0
 1440 0008 FB71     		strb	r3, [r7, #7]
1987:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 1441              		.loc 1 1987 0
 1442 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1443 000c 012B     		cmp	r3, #1
 1444 000e 08D1     		bne	.L69
1988:Generated_Source\PSoC5/CapSense.c ****         {
1989:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 1445              		.loc 1 1989 0
 1446 0010 0A4A     		ldr	r2, .L72
 1447 0012 0A4B     		ldr	r3, .L72
 1448 0014 1B78     		ldrb	r3, [r3]
 1449 0016 DBB2     		uxtb	r3, r3
 1450 0018 23F01003 		bic	r3, r3, #16
 1451 001c DBB2     		uxtb	r3, r3
 1452 001e 1370     		strb	r3, [r2]
1990:Generated_Source\PSoC5/CapSense.c ****         }
1991:Generated_Source\PSoC5/CapSense.c ****         else
1992:Generated_Source\PSoC5/CapSense.c ****         {
1993:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
1994:Generated_Source\PSoC5/CapSense.c ****         }
1995:Generated_Source\PSoC5/CapSense.c ****     }
 1453              		.loc 1 1995 0
 1454 0020 07E0     		b	.L71
 1455              	.L69:
1993:Generated_Source\PSoC5/CapSense.c ****         }
 1456              		.loc 1 1993 0
 1457 0022 064A     		ldr	r2, .L72
 1458 0024 054B     		ldr	r3, .L72
 1459 0026 1B78     		ldrb	r3, [r3]
 1460 0028 DBB2     		uxtb	r3, r3
 1461 002a 43F01003 		orr	r3, r3, #16
 1462 002e DBB2     		uxtb	r3, r3
 1463 0030 1370     		strb	r3, [r2]
 1464              	.L71:
 1465              		.loc 1 1995 0
 1466 0032 00BF     		nop
 1467 0034 0C37     		adds	r7, r7, #12
 1468              		.cfi_def_cfa_offset 4
 1469 0036 BD46     		mov	sp, r7
 1470              		.cfi_def_cfa_register 13
 1471              		@ sp needed
 1472 0038 80BC     		pop	{r7}
 1473              		.cfi_restore 7
 1474              		.cfi_def_cfa_offset 0
 1475 003a 7047     		bx	lr
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 62


 1476              	.L73:
 1477              		.align	2
 1478              	.L72:
 1479 003c 7C640040 		.word	1073767548
 1480              		.cfi_endproc
 1481              	.LFE18:
 1482              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 1483              		.text
 1484              	.Letext0:
 1485              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1486              		.section	.debug_info,"",%progbits
 1487              	.Ldebug_info0:
 1488 0000 3F050000 		.4byte	0x53f
 1489 0004 0400     		.2byte	0x4
 1490 0006 00000000 		.4byte	.Ldebug_abbrev0
 1491 000a 04       		.byte	0x4
 1492 000b 01       		.uleb128 0x1
 1493 000c 61000000 		.4byte	.LASF61
 1494 0010 0C       		.byte	0xc
 1495 0011 14000000 		.4byte	.LASF62
 1496 0015 8F020000 		.4byte	.LASF63
 1497 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1498 001d 00000000 		.4byte	0
 1499 0021 00000000 		.4byte	.Ldebug_line0
 1500 0025 02       		.uleb128 0x2
 1501 0026 01       		.byte	0x1
 1502 0027 06       		.byte	0x6
 1503 0028 3A010000 		.4byte	.LASF0
 1504 002c 02       		.uleb128 0x2
 1505 002d 01       		.byte	0x1
 1506 002e 08       		.byte	0x8
 1507 002f CE030000 		.4byte	.LASF1
 1508 0033 02       		.uleb128 0x2
 1509 0034 02       		.byte	0x2
 1510 0035 05       		.byte	0x5
 1511 0036 F6030000 		.4byte	.LASF2
 1512 003a 02       		.uleb128 0x2
 1513 003b 02       		.byte	0x2
 1514 003c 07       		.byte	0x7
 1515 003d 5B020000 		.4byte	.LASF3
 1516 0041 02       		.uleb128 0x2
 1517 0042 04       		.byte	0x4
 1518 0043 05       		.byte	0x5
 1519 0044 67010000 		.4byte	.LASF4
 1520 0048 02       		.uleb128 0x2
 1521 0049 04       		.byte	0x4
 1522 004a 07       		.byte	0x7
 1523 004b 23020000 		.4byte	.LASF5
 1524 004f 02       		.uleb128 0x2
 1525 0050 08       		.byte	0x8
 1526 0051 05       		.byte	0x5
 1527 0052 2C010000 		.4byte	.LASF6
 1528 0056 02       		.uleb128 0x2
 1529 0057 08       		.byte	0x8
 1530 0058 07       		.byte	0x7
 1531 0059 EF000000 		.4byte	.LASF7
 1532 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 63


 1533 005e 04       		.byte	0x4
 1534 005f 05       		.byte	0x5
 1535 0060 696E7400 		.ascii	"int\000"
 1536 0064 02       		.uleb128 0x2
 1537 0065 04       		.byte	0x4
 1538 0066 07       		.byte	0x7
 1539 0067 00020000 		.4byte	.LASF8
 1540 006b 04       		.uleb128 0x4
 1541 006c 76010000 		.4byte	.LASF9
 1542 0070 02       		.byte	0x2
 1543 0071 E901     		.2byte	0x1e9
 1544 0073 2C000000 		.4byte	0x2c
 1545 0077 04       		.uleb128 0x4
 1546 0078 00000000 		.4byte	.LASF10
 1547 007c 02       		.byte	0x2
 1548 007d EA01     		.2byte	0x1ea
 1549 007f 3A000000 		.4byte	0x3a
 1550 0083 04       		.uleb128 0x4
 1551 0084 C6010000 		.4byte	.LASF11
 1552 0088 02       		.byte	0x2
 1553 0089 EB01     		.2byte	0x1eb
 1554 008b 48000000 		.4byte	0x48
 1555 008f 02       		.uleb128 0x2
 1556 0090 04       		.byte	0x4
 1557 0091 04       		.byte	0x4
 1558 0092 8A030000 		.4byte	.LASF12
 1559 0096 02       		.uleb128 0x2
 1560 0097 08       		.byte	0x8
 1561 0098 04       		.byte	0x4
 1562 0099 7C010000 		.4byte	.LASF13
 1563 009d 02       		.uleb128 0x2
 1564 009e 01       		.byte	0x1
 1565 009f 08       		.byte	0x8
 1566 00a0 1D040000 		.4byte	.LASF14
 1567 00a4 04       		.uleb128 0x4
 1568 00a5 9A030000 		.4byte	.LASF15
 1569 00a9 02       		.byte	0x2
 1570 00aa 9302     		.2byte	0x293
 1571 00ac B0000000 		.4byte	0xb0
 1572 00b0 05       		.uleb128 0x5
 1573 00b1 6B000000 		.4byte	0x6b
 1574 00b5 04       		.uleb128 0x4
 1575 00b6 70010000 		.4byte	.LASF16
 1576 00ba 02       		.byte	0x2
 1577 00bb 9402     		.2byte	0x294
 1578 00bd C1000000 		.4byte	0xc1
 1579 00c1 05       		.uleb128 0x5
 1580 00c2 77000000 		.4byte	0x77
 1581 00c6 04       		.uleb128 0x4
 1582 00c7 0C030000 		.4byte	.LASF17
 1583 00cb 02       		.byte	0x2
 1584 00cc 9502     		.2byte	0x295
 1585 00ce D2000000 		.4byte	0xd2
 1586 00d2 05       		.uleb128 0x5
 1587 00d3 83000000 		.4byte	0x83
 1588 00d7 02       		.uleb128 0x2
 1589 00d8 08       		.byte	0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 64


 1590 00d9 04       		.byte	0x4
 1591 00da 49030000 		.4byte	.LASF18
 1592 00de 02       		.uleb128 0x2
 1593 00df 04       		.byte	0x4
 1594 00e0 07       		.byte	0x7
 1595 00e1 2F030000 		.4byte	.LASF19
 1596 00e5 06       		.uleb128 0x6
 1597 00e6 98040000 		.4byte	.LASF20
 1598 00ea 01       		.byte	0x1
 1599 00eb 8E       		.byte	0x8e
 1600 00ec 00000000 		.4byte	.LFB0
 1601 00f0 48010000 		.4byte	.LFE0-.LFB0
 1602 00f4 01       		.uleb128 0x1
 1603 00f5 9C       		.byte	0x9c
 1604 00f6 09010000 		.4byte	0x109
 1605 00fa 07       		.uleb128 0x7
 1606 00fb 59040000 		.4byte	.LASF22
 1607 00ff 01       		.byte	0x1
 1608 0100 95       		.byte	0x95
 1609 0101 6B000000 		.4byte	0x6b
 1610 0105 02       		.uleb128 0x2
 1611 0106 91       		.byte	0x91
 1612 0107 77       		.sleb128 -9
 1613 0108 00       		.byte	0
 1614 0109 08       		.uleb128 0x8
 1615 010a 06010000 		.4byte	.LASF21
 1616 010e 01       		.byte	0x1
 1617 010f 6F01     		.2byte	0x16f
 1618 0111 00000000 		.4byte	.LFB1
 1619 0115 98000000 		.4byte	.LFE1-.LFB1
 1620 0119 01       		.uleb128 0x1
 1621 011a 9C       		.byte	0x9c
 1622 011b 2F010000 		.4byte	0x12f
 1623 011f 09       		.uleb128 0x9
 1624 0120 59040000 		.4byte	.LASF22
 1625 0124 01       		.byte	0x1
 1626 0125 7101     		.2byte	0x171
 1627 0127 6B000000 		.4byte	0x6b
 1628 012b 02       		.uleb128 0x2
 1629 012c 91       		.byte	0x91
 1630 012d 77       		.sleb128 -9
 1631 012e 00       		.byte	0
 1632 012f 0A       		.uleb128 0xa
 1633 0130 38040000 		.4byte	.LASF23
 1634 0134 01       		.byte	0x1
 1635 0135 0802     		.2byte	0x208
 1636 0137 00000000 		.4byte	.LFB2
 1637 013b 24000000 		.4byte	.LFE2-.LFB2
 1638 013f 01       		.uleb128 0x1
 1639 0140 9C       		.byte	0x9c
 1640 0141 0A       		.uleb128 0xa
 1641 0142 55030000 		.4byte	.LASF24
 1642 0146 01       		.byte	0x1
 1643 0147 2D02     		.2byte	0x22d
 1644 0149 00000000 		.4byte	.LFB3
 1645 014d 98000000 		.4byte	.LFE3-.LFB3
 1646 0151 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 65


 1647 0152 9C       		.byte	0x9c
 1648 0153 0B       		.uleb128 0xb
 1649 0154 9F030000 		.4byte	.LASF33
 1650 0158 01       		.byte	0x1
 1651 0159 B702     		.2byte	0x2b7
 1652 015b 6B000000 		.4byte	0x6b
 1653 015f 00000000 		.4byte	.LFB4
 1654 0163 50000000 		.4byte	.LFE4-.LFB4
 1655 0167 01       		.uleb128 0x1
 1656 0168 9C       		.byte	0x9c
 1657 0169 9B010000 		.4byte	0x19b
 1658 016d 0C       		.uleb128 0xc
 1659 016e 58000000 		.4byte	.LASF27
 1660 0172 01       		.byte	0x1
 1661 0173 B702     		.2byte	0x2b7
 1662 0175 6B000000 		.4byte	0x6b
 1663 0179 02       		.uleb128 0x2
 1664 017a 91       		.byte	0x91
 1665 017b 6F       		.sleb128 -17
 1666 017c 0D       		.uleb128 0xd
 1667 017d 706F7300 		.ascii	"pos\000"
 1668 0181 01       		.byte	0x1
 1669 0182 B902     		.2byte	0x2b9
 1670 0184 6B000000 		.4byte	0x6b
 1671 0188 02       		.uleb128 0x2
 1672 0189 91       		.byte	0x91
 1673 018a 77       		.sleb128 -9
 1674 018b 09       		.uleb128 0x9
 1675 018c 6D030000 		.4byte	.LASF25
 1676 0190 01       		.byte	0x1
 1677 0191 BA02     		.2byte	0x2ba
 1678 0193 6B000000 		.4byte	0x6b
 1679 0197 02       		.uleb128 0x2
 1680 0198 91       		.byte	0x91
 1681 0199 76       		.sleb128 -10
 1682 019a 00       		.byte	0
 1683 019b 08       		.uleb128 0x8
 1684 019c 6A040000 		.4byte	.LASF26
 1685 01a0 01       		.byte	0x1
 1686 01a1 5103     		.2byte	0x351
 1687 01a3 00000000 		.4byte	.LFB5
 1688 01a7 50000000 		.4byte	.LFE5-.LFB5
 1689 01ab 01       		.uleb128 0x1
 1690 01ac 9C       		.byte	0x9c
 1691 01ad D0010000 		.4byte	0x1d0
 1692 01b1 0C       		.uleb128 0xc
 1693 01b2 07030000 		.4byte	.LASF28
 1694 01b6 01       		.byte	0x1
 1695 01b7 5103     		.2byte	0x351
 1696 01b9 6B000000 		.4byte	0x6b
 1697 01bd 02       		.uleb128 0x2
 1698 01be 91       		.byte	0x91
 1699 01bf 6F       		.sleb128 -17
 1700 01c0 09       		.uleb128 0x9
 1701 01c1 00040000 		.4byte	.LASF29
 1702 01c5 01       		.byte	0x1
 1703 01c6 5303     		.2byte	0x353
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 66


 1704 01c8 6B000000 		.4byte	0x6b
 1705 01cc 02       		.uleb128 0x2
 1706 01cd 91       		.byte	0x91
 1707 01ce 77       		.sleb128 -9
 1708 01cf 00       		.byte	0
 1709 01d0 08       		.uleb128 0x8
 1710 01d1 EC010000 		.4byte	.LASF30
 1711 01d5 01       		.byte	0x1
 1712 01d6 C103     		.2byte	0x3c1
 1713 01d8 00000000 		.4byte	.LFB6
 1714 01dc 34000000 		.4byte	.LFE6-.LFB6
 1715 01e0 01       		.uleb128 0x1
 1716 01e1 9C       		.byte	0x9c
 1717 01e2 F6010000 		.4byte	0x1f6
 1718 01e6 0C       		.uleb128 0xc
 1719 01e7 6E020000 		.4byte	.LASF31
 1720 01eb 01       		.byte	0x1
 1721 01ec C103     		.2byte	0x3c1
 1722 01ee 6B000000 		.4byte	0x6b
 1723 01f2 02       		.uleb128 0x2
 1724 01f3 91       		.byte	0x91
 1725 01f4 77       		.sleb128 -9
 1726 01f5 00       		.byte	0
 1727 01f6 0A       		.uleb128 0xa
 1728 01f7 B9040000 		.4byte	.LASF32
 1729 01fb 01       		.byte	0x1
 1730 01fc 0E04     		.2byte	0x40e
 1731 01fe 00000000 		.4byte	.LFB7
 1732 0202 58000000 		.4byte	.LFE7-.LFB7
 1733 0206 01       		.uleb128 0x1
 1734 0207 9C       		.byte	0x9c
 1735 0208 0E       		.uleb128 0xe
 1736 0209 D5040000 		.4byte	.LASF64
 1737 020d 01       		.byte	0x1
 1738 020e 4304     		.2byte	0x443
 1739 0210 6B000000 		.4byte	0x6b
 1740 0214 00000000 		.4byte	.LFB8
 1741 0218 1C000000 		.4byte	.LFE8-.LFB8
 1742 021c 01       		.uleb128 0x1
 1743 021d 9C       		.byte	0x9c
 1744 021e 0B       		.uleb128 0xb
 1745 021f AF010000 		.4byte	.LASF34
 1746 0223 01       		.byte	0x1
 1747 0224 5C04     		.2byte	0x45c
 1748 0226 77000000 		.4byte	0x77
 1749 022a 00000000 		.4byte	.LFB9
 1750 022e 20000000 		.4byte	.LFE9-.LFB9
 1751 0232 01       		.uleb128 0x1
 1752 0233 9C       		.byte	0x9c
 1753 0234 48020000 		.4byte	0x248
 1754 0238 0C       		.uleb128 0xc
 1755 0239 6E020000 		.4byte	.LASF31
 1756 023d 01       		.byte	0x1
 1757 023e 5C04     		.2byte	0x45c
 1758 0240 6B000000 		.4byte	0x6b
 1759 0244 02       		.uleb128 0x2
 1760 0245 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 67


 1761 0246 77       		.sleb128 -9
 1762 0247 00       		.byte	0
 1763 0248 08       		.uleb128 0x8
 1764 0249 0D020000 		.4byte	.LASF35
 1765 024d 01       		.byte	0x1
 1766 024e 7104     		.2byte	0x471
 1767 0250 00000000 		.4byte	.LFB10
 1768 0254 28000000 		.4byte	.LFE10-.LFB10
 1769 0258 01       		.uleb128 0x1
 1770 0259 9C       		.byte	0x9c
 1771 025a 6C020000 		.4byte	0x26c
 1772 025e 0D       		.uleb128 0xd
 1773 025f 6900     		.ascii	"i\000"
 1774 0261 01       		.byte	0x1
 1775 0262 7304     		.2byte	0x473
 1776 0264 6B000000 		.4byte	0x6b
 1777 0268 02       		.uleb128 0x2
 1778 0269 91       		.byte	0x91
 1779 026a 77       		.sleb128 -9
 1780 026b 00       		.byte	0
 1781 026c 08       		.uleb128 0x8
 1782 026d 83010000 		.4byte	.LASF36
 1783 0271 01       		.byte	0x1
 1784 0272 0705     		.2byte	0x507
 1785 0274 00000000 		.4byte	.LFB11
 1786 0278 6C000000 		.4byte	.LFE11-.LFB11
 1787 027c 01       		.uleb128 0x1
 1788 027d 9C       		.byte	0x9c
 1789 027e B0020000 		.4byte	0x2b0
 1790 0282 0C       		.uleb128 0xc
 1791 0283 6E020000 		.4byte	.LASF31
 1792 0287 01       		.byte	0x1
 1793 0288 0705     		.2byte	0x507
 1794 028a 6B000000 		.4byte	0x6b
 1795 028e 02       		.uleb128 0x2
 1796 028f 91       		.byte	0x91
 1797 0290 6F       		.sleb128 -17
 1798 0291 09       		.uleb128 0x9
 1799 0292 D2010000 		.4byte	.LASF37
 1800 0296 01       		.byte	0x1
 1801 0297 0905     		.2byte	0x509
 1802 0299 6B000000 		.4byte	0x6b
 1803 029d 02       		.uleb128 0x2
 1804 029e 91       		.byte	0x91
 1805 029f 77       		.sleb128 -9
 1806 02a0 09       		.uleb128 0x9
 1807 02a1 CD010000 		.4byte	.LASF38
 1808 02a5 01       		.byte	0x1
 1809 02a6 0A05     		.2byte	0x50a
 1810 02a8 6B000000 		.4byte	0x6b
 1811 02ac 02       		.uleb128 0x2
 1812 02ad 91       		.byte	0x91
 1813 02ae 76       		.sleb128 -10
 1814 02af 00       		.byte	0
 1815 02b0 08       		.uleb128 0x8
 1816 02b1 B7030000 		.4byte	.LASF39
 1817 02b5 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 68


 1818 02b6 5C05     		.2byte	0x55c
 1819 02b8 00000000 		.4byte	.LFB12
 1820 02bc 70000000 		.4byte	.LFE12-.LFB12
 1821 02c0 01       		.uleb128 0x1
 1822 02c1 9C       		.byte	0x9c
 1823 02c2 F4020000 		.4byte	0x2f4
 1824 02c6 0C       		.uleb128 0xc
 1825 02c7 6E020000 		.4byte	.LASF31
 1826 02cb 01       		.byte	0x1
 1827 02cc 5C05     		.2byte	0x55c
 1828 02ce 6B000000 		.4byte	0x6b
 1829 02d2 02       		.uleb128 0x2
 1830 02d3 91       		.byte	0x91
 1831 02d4 6F       		.sleb128 -17
 1832 02d5 09       		.uleb128 0x9
 1833 02d6 D2010000 		.4byte	.LASF37
 1834 02da 01       		.byte	0x1
 1835 02db 5E05     		.2byte	0x55e
 1836 02dd 6B000000 		.4byte	0x6b
 1837 02e1 02       		.uleb128 0x2
 1838 02e2 91       		.byte	0x91
 1839 02e3 77       		.sleb128 -9
 1840 02e4 09       		.uleb128 0x9
 1841 02e5 CD010000 		.4byte	.LASF38
 1842 02e9 01       		.byte	0x1
 1843 02ea 5F05     		.2byte	0x55f
 1844 02ec 6B000000 		.4byte	0x6b
 1845 02f0 02       		.uleb128 0x2
 1846 02f1 91       		.byte	0x91
 1847 02f2 76       		.sleb128 -10
 1848 02f3 00       		.byte	0
 1849 02f4 08       		.uleb128 0x8
 1850 02f5 87040000 		.4byte	.LASF40
 1851 02f9 01       		.byte	0x1
 1852 02fa B005     		.2byte	0x5b0
 1853 02fc 00000000 		.4byte	.LFB13
 1854 0300 5C000000 		.4byte	.LFE13-.LFB13
 1855 0304 01       		.uleb128 0x1
 1856 0305 9C       		.byte	0x9c
 1857 0306 1A030000 		.4byte	0x31a
 1858 030a 0C       		.uleb128 0xc
 1859 030b 6E020000 		.4byte	.LASF31
 1860 030f 01       		.byte	0x1
 1861 0310 B005     		.2byte	0x5b0
 1862 0312 6B000000 		.4byte	0x6b
 1863 0316 02       		.uleb128 0x2
 1864 0317 91       		.byte	0x91
 1865 0318 77       		.sleb128 -9
 1866 0319 00       		.byte	0
 1867 031a 08       		.uleb128 0x8
 1868 031b 47040000 		.4byte	.LASF41
 1869 031f 01       		.byte	0x1
 1870 0320 5806     		.2byte	0x658
 1871 0322 00000000 		.4byte	.LFB14
 1872 0326 98000000 		.4byte	.LFE14-.LFB14
 1873 032a 01       		.uleb128 0x1
 1874 032b 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 69


 1875 032c 40030000 		.4byte	0x340
 1876 0330 0C       		.uleb128 0xc
 1877 0331 6E020000 		.4byte	.LASF31
 1878 0335 01       		.byte	0x1
 1879 0336 5806     		.2byte	0x658
 1880 0338 6B000000 		.4byte	0x6b
 1881 033c 02       		.uleb128 0x2
 1882 033d 91       		.byte	0x91
 1883 033e 77       		.sleb128 -9
 1884 033f 00       		.byte	0
 1885 0340 0F       		.uleb128 0xf
 1886 0341 16010000 		.4byte	.LASF42
 1887 0345 01       		.byte	0x1
 1888 0346 6607     		.2byte	0x766
 1889 0348 00000000 		.4byte	.LFB15
 1890 034c 2C000000 		.4byte	.LFE15-.LFB15
 1891 0350 01       		.uleb128 0x1
 1892 0351 9C       		.byte	0x9c
 1893 0352 66030000 		.4byte	0x366
 1894 0356 0C       		.uleb128 0xc
 1895 0357 90030000 		.4byte	.LASF43
 1896 035b 01       		.byte	0x1
 1897 035c 6607     		.2byte	0x766
 1898 035e 6B000000 		.4byte	0x6b
 1899 0362 02       		.uleb128 0x2
 1900 0363 91       		.byte	0x91
 1901 0364 77       		.sleb128 -9
 1902 0365 00       		.byte	0
 1903 0366 0B       		.uleb128 0xb
 1904 0367 07040000 		.4byte	.LASF44
 1905 036b 01       		.byte	0x1
 1906 036c 8307     		.2byte	0x783
 1907 036e 6B000000 		.4byte	0x6b
 1908 0372 00000000 		.4byte	.LFB16
 1909 0376 20000000 		.4byte	.LFE16-.LFB16
 1910 037a 01       		.uleb128 0x1
 1911 037b 9C       		.byte	0x9c
 1912 037c 90030000 		.4byte	0x390
 1913 0380 09       		.uleb128 0x9
 1914 0381 90030000 		.4byte	.LASF43
 1915 0385 01       		.byte	0x1
 1916 0386 8507     		.2byte	0x785
 1917 0388 6B000000 		.4byte	0x6b
 1918 038c 02       		.uleb128 0x2
 1919 038d 91       		.byte	0x91
 1920 038e 77       		.sleb128 -9
 1921 038f 00       		.byte	0
 1922 0390 0F       		.uleb128 0xf
 1923 0391 22040000 		.4byte	.LASF45
 1924 0395 01       		.byte	0x1
 1925 0396 A507     		.2byte	0x7a5
 1926 0398 00000000 		.4byte	.LFB17
 1927 039c 20000000 		.4byte	.LFE17-.LFB17
 1928 03a0 01       		.uleb128 0x1
 1929 03a1 9C       		.byte	0x9c
 1930 03a2 B6030000 		.4byte	0x3b6
 1931 03a6 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 70


 1932 03a7 63030000 		.4byte	.LASF46
 1933 03ab 01       		.byte	0x1
 1934 03ac A507     		.2byte	0x7a5
 1935 03ae 6B000000 		.4byte	0x6b
 1936 03b2 02       		.uleb128 0x2
 1937 03b3 91       		.byte	0x91
 1938 03b4 77       		.sleb128 -9
 1939 03b5 00       		.byte	0
 1940 03b6 0F       		.uleb128 0xf
 1941 03b7 46010000 		.4byte	.LASF47
 1942 03bb 01       		.byte	0x1
 1943 03bc C007     		.2byte	0x7c0
 1944 03be 00000000 		.4byte	.LFB18
 1945 03c2 40000000 		.4byte	.LFE18-.LFB18
 1946 03c6 01       		.uleb128 0x1
 1947 03c7 9C       		.byte	0x9c
 1948 03c8 DC030000 		.4byte	0x3dc
 1949 03cc 10       		.uleb128 0x10
 1950 03cd 73726300 		.ascii	"src\000"
 1951 03d1 01       		.byte	0x1
 1952 03d2 C007     		.2byte	0x7c0
 1953 03d4 6B000000 		.4byte	0x6b
 1954 03d8 02       		.uleb128 0x2
 1955 03d9 91       		.byte	0x91
 1956 03da 77       		.sleb128 -9
 1957 03db 00       		.byte	0
 1958 03dc 07       		.uleb128 0x7
 1959 03dd 36000000 		.4byte	.LASF48
 1960 03e1 01       		.byte	0x1
 1961 03e2 16       		.byte	0x16
 1962 03e3 6B000000 		.4byte	0x6b
 1963 03e7 05       		.uleb128 0x5
 1964 03e8 03       		.byte	0x3
 1965 03e9 00000000 		.4byte	CapSense_initVar
 1966 03ed 11       		.uleb128 0x11
 1967 03ee 07000000 		.4byte	.LASF49
 1968 03f2 01       		.byte	0x1
 1969 03f3 19       		.byte	0x19
 1970 03f4 B0000000 		.4byte	0xb0
 1971 03f8 05       		.uleb128 0x5
 1972 03f9 03       		.byte	0x3
 1973 03fa 00000000 		.4byte	CapSense_csv
 1974 03fe 11       		.uleb128 0x11
 1975 03ff D7010000 		.4byte	.LASF50
 1976 0403 01       		.byte	0x1
 1977 0404 1A       		.byte	0x1a
 1978 0405 B0000000 		.4byte	0xb0
 1979 0409 05       		.uleb128 0x5
 1980 040a 03       		.byte	0x3
 1981 040b 00000000 		.4byte	CapSense_sensorIndex
 1982 040f 12       		.uleb128 0x12
 1983 0410 77000000 		.4byte	0x77
 1984 0414 1F040000 		.4byte	0x41f
 1985 0418 13       		.uleb128 0x13
 1986 0419 DE000000 		.4byte	0xde
 1987 041d 09       		.byte	0x9
 1988 041e 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 71


 1989 041f 11       		.uleb128 0x11
 1990 0420 A6040000 		.4byte	.LASF51
 1991 0424 01       		.byte	0x1
 1992 0425 29       		.byte	0x29
 1993 0426 0F040000 		.4byte	0x40f
 1994 042a 05       		.uleb128 0x5
 1995 042b 03       		.byte	0x3
 1996 042c 00000000 		.4byte	CapSense_sensorRaw
 1997 0430 12       		.uleb128 0x12
 1998 0431 6B000000 		.4byte	0x6b
 1999 0435 40040000 		.4byte	0x440
 2000 0439 13       		.uleb128 0x13
 2001 043a DE000000 		.4byte	0xde
 2002 043e 01       		.byte	0x1
 2003 043f 00       		.byte	0
 2004 0440 11       		.uleb128 0x11
 2005 0441 75020000 		.4byte	.LASF52
 2006 0445 01       		.byte	0x1
 2007 0446 2B       		.byte	0x2b
 2008 0447 30040000 		.4byte	0x430
 2009 044b 05       		.uleb128 0x5
 2010 044c 03       		.byte	0x3
 2011 044d 00000000 		.4byte	CapSense_sensorEnableMask
 2012 0451 12       		.uleb128 0x12
 2013 0452 67040000 		.4byte	0x467
 2014 0456 61040000 		.4byte	0x461
 2015 045a 13       		.uleb128 0x13
 2016 045b DE000000 		.4byte	0xde
 2017 045f 09       		.byte	0x9
 2018 0460 00       		.byte	0
 2019 0461 14       		.uleb128 0x14
 2020 0462 04       		.byte	0x4
 2021 0463 6B000000 		.4byte	0x6b
 2022 0467 15       		.uleb128 0x15
 2023 0468 61040000 		.4byte	0x461
 2024 046c 11       		.uleb128 0x11
 2025 046d 47000000 		.4byte	.LASF53
 2026 0471 01       		.byte	0x1
 2027 0472 2E       		.byte	0x2e
 2028 0473 7D040000 		.4byte	0x47d
 2029 0477 05       		.uleb128 0x5
 2030 0478 03       		.byte	0x3
 2031 0479 00000000 		.4byte	CapSense_pcTable
 2032 047d 15       		.uleb128 0x15
 2033 047e 51040000 		.4byte	0x451
 2034 0482 12       		.uleb128 0x12
 2035 0483 92040000 		.4byte	0x492
 2036 0487 92040000 		.4byte	0x492
 2037 048b 13       		.uleb128 0x13
 2038 048c DE000000 		.4byte	0xde
 2039 0490 09       		.byte	0x9
 2040 0491 00       		.byte	0
 2041 0492 15       		.uleb128 0x15
 2042 0493 6B000000 		.4byte	0x6b
 2043 0497 11       		.uleb128 0x11
 2044 0498 48020000 		.4byte	.LASF54
 2045 049c 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 72


 2046 049d 3B       		.byte	0x3b
 2047 049e A8040000 		.4byte	0x4a8
 2048 04a2 05       		.uleb128 0x5
 2049 04a3 03       		.byte	0x3
 2050 04a4 00000000 		.4byte	CapSense_portTable
 2051 04a8 15       		.uleb128 0x15
 2052 04a9 82040000 		.4byte	0x482
 2053 04ad 11       		.uleb128 0x11
 2054 04ae 35020000 		.4byte	.LASF55
 2055 04b2 01       		.byte	0x1
 2056 04b3 48       		.byte	0x48
 2057 04b4 BE040000 		.4byte	0x4be
 2058 04b8 05       		.uleb128 0x5
 2059 04b9 03       		.byte	0x3
 2060 04ba 00000000 		.4byte	CapSense_maskTable
 2061 04be 15       		.uleb128 0x15
 2062 04bf 82040000 		.4byte	0x482
 2063 04c3 12       		.uleb128 0x12
 2064 04c4 67040000 		.4byte	0x467
 2065 04c8 D3040000 		.4byte	0x4d3
 2066 04cc 13       		.uleb128 0x13
 2067 04cd DE000000 		.4byte	0xde
 2068 04d1 07       		.byte	0x7
 2069 04d2 00       		.byte	0
 2070 04d3 11       		.uleb128 0x11
 2071 04d4 38030000 		.4byte	.LASF56
 2072 04d8 01       		.byte	0x1
 2073 04d9 55       		.byte	0x55
 2074 04da E4040000 		.4byte	0x4e4
 2075 04de 05       		.uleb128 0x5
 2076 04df 03       		.byte	0x3
 2077 04e0 00000000 		.4byte	CapSense_csTable
 2078 04e4 15       		.uleb128 0x15
 2079 04e5 C3040000 		.4byte	0x4c3
 2080 04e9 12       		.uleb128 0x12
 2081 04ea 6B000000 		.4byte	0x6b
 2082 04ee F9040000 		.4byte	0x4f9
 2083 04f2 13       		.uleb128 0x13
 2084 04f3 DE000000 		.4byte	0xde
 2085 04f7 09       		.byte	0x9
 2086 04f8 00       		.byte	0
 2087 04f9 11       		.uleb128 0x11
 2088 04fa 74030000 		.4byte	.LASF57
 2089 04fe 01       		.byte	0x1
 2090 04ff 5B       		.byte	0x5b
 2091 0500 E9040000 		.4byte	0x4e9
 2092 0504 05       		.uleb128 0x5
 2093 0505 03       		.byte	0x3
 2094 0506 00000000 		.4byte	CapSense_idacSettings
 2095 050a 11       		.uleb128 0x11
 2096 050b DC030000 		.4byte	.LASF58
 2097 050f 01       		.byte	0x1
 2098 0510 5F       		.byte	0x5f
 2099 0511 E9040000 		.4byte	0x4e9
 2100 0515 05       		.uleb128 0x5
 2101 0516 03       		.byte	0x3
 2102 0517 00000000 		.4byte	CapSense_widgetResolution
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 73


 2103 051b 11       		.uleb128 0x11
 2104 051c 12030000 		.4byte	.LASF59
 2105 0520 01       		.byte	0x1
 2106 0521 6C       		.byte	0x6c
 2107 0522 6B000000 		.4byte	0x6b
 2108 0526 05       		.uleb128 0x5
 2109 0527 03       		.byte	0x3
 2110 0528 00000000 		.4byte	CapSense_analogSwitchDivider
 2111 052c 11       		.uleb128 0x11
 2112 052d 99010000 		.4byte	.LASF60
 2113 0531 01       		.byte	0x1
 2114 0532 6E       		.byte	0x6e
 2115 0533 3D050000 		.4byte	0x53d
 2116 0537 05       		.uleb128 0x5
 2117 0538 03       		.byte	0x3
 2118 0539 00000000 		.4byte	CapSense_widgetNumber
 2119 053d 15       		.uleb128 0x15
 2120 053e 82040000 		.4byte	0x482
 2121 0542 00       		.byte	0
 2122              		.section	.debug_abbrev,"",%progbits
 2123              	.Ldebug_abbrev0:
 2124 0000 01       		.uleb128 0x1
 2125 0001 11       		.uleb128 0x11
 2126 0002 01       		.byte	0x1
 2127 0003 25       		.uleb128 0x25
 2128 0004 0E       		.uleb128 0xe
 2129 0005 13       		.uleb128 0x13
 2130 0006 0B       		.uleb128 0xb
 2131 0007 03       		.uleb128 0x3
 2132 0008 0E       		.uleb128 0xe
 2133 0009 1B       		.uleb128 0x1b
 2134 000a 0E       		.uleb128 0xe
 2135 000b 55       		.uleb128 0x55
 2136 000c 17       		.uleb128 0x17
 2137 000d 11       		.uleb128 0x11
 2138 000e 01       		.uleb128 0x1
 2139 000f 10       		.uleb128 0x10
 2140 0010 17       		.uleb128 0x17
 2141 0011 00       		.byte	0
 2142 0012 00       		.byte	0
 2143 0013 02       		.uleb128 0x2
 2144 0014 24       		.uleb128 0x24
 2145 0015 00       		.byte	0
 2146 0016 0B       		.uleb128 0xb
 2147 0017 0B       		.uleb128 0xb
 2148 0018 3E       		.uleb128 0x3e
 2149 0019 0B       		.uleb128 0xb
 2150 001a 03       		.uleb128 0x3
 2151 001b 0E       		.uleb128 0xe
 2152 001c 00       		.byte	0
 2153 001d 00       		.byte	0
 2154 001e 03       		.uleb128 0x3
 2155 001f 24       		.uleb128 0x24
 2156 0020 00       		.byte	0
 2157 0021 0B       		.uleb128 0xb
 2158 0022 0B       		.uleb128 0xb
 2159 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 74


 2160 0024 0B       		.uleb128 0xb
 2161 0025 03       		.uleb128 0x3
 2162 0026 08       		.uleb128 0x8
 2163 0027 00       		.byte	0
 2164 0028 00       		.byte	0
 2165 0029 04       		.uleb128 0x4
 2166 002a 16       		.uleb128 0x16
 2167 002b 00       		.byte	0
 2168 002c 03       		.uleb128 0x3
 2169 002d 0E       		.uleb128 0xe
 2170 002e 3A       		.uleb128 0x3a
 2171 002f 0B       		.uleb128 0xb
 2172 0030 3B       		.uleb128 0x3b
 2173 0031 05       		.uleb128 0x5
 2174 0032 49       		.uleb128 0x49
 2175 0033 13       		.uleb128 0x13
 2176 0034 00       		.byte	0
 2177 0035 00       		.byte	0
 2178 0036 05       		.uleb128 0x5
 2179 0037 35       		.uleb128 0x35
 2180 0038 00       		.byte	0
 2181 0039 49       		.uleb128 0x49
 2182 003a 13       		.uleb128 0x13
 2183 003b 00       		.byte	0
 2184 003c 00       		.byte	0
 2185 003d 06       		.uleb128 0x6
 2186 003e 2E       		.uleb128 0x2e
 2187 003f 01       		.byte	0x1
 2188 0040 3F       		.uleb128 0x3f
 2189 0041 19       		.uleb128 0x19
 2190 0042 03       		.uleb128 0x3
 2191 0043 0E       		.uleb128 0xe
 2192 0044 3A       		.uleb128 0x3a
 2193 0045 0B       		.uleb128 0xb
 2194 0046 3B       		.uleb128 0x3b
 2195 0047 0B       		.uleb128 0xb
 2196 0048 27       		.uleb128 0x27
 2197 0049 19       		.uleb128 0x19
 2198 004a 11       		.uleb128 0x11
 2199 004b 01       		.uleb128 0x1
 2200 004c 12       		.uleb128 0x12
 2201 004d 06       		.uleb128 0x6
 2202 004e 40       		.uleb128 0x40
 2203 004f 18       		.uleb128 0x18
 2204 0050 9642     		.uleb128 0x2116
 2205 0052 19       		.uleb128 0x19
 2206 0053 01       		.uleb128 0x1
 2207 0054 13       		.uleb128 0x13
 2208 0055 00       		.byte	0
 2209 0056 00       		.byte	0
 2210 0057 07       		.uleb128 0x7
 2211 0058 34       		.uleb128 0x34
 2212 0059 00       		.byte	0
 2213 005a 03       		.uleb128 0x3
 2214 005b 0E       		.uleb128 0xe
 2215 005c 3A       		.uleb128 0x3a
 2216 005d 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 75


 2217 005e 3B       		.uleb128 0x3b
 2218 005f 0B       		.uleb128 0xb
 2219 0060 49       		.uleb128 0x49
 2220 0061 13       		.uleb128 0x13
 2221 0062 02       		.uleb128 0x2
 2222 0063 18       		.uleb128 0x18
 2223 0064 00       		.byte	0
 2224 0065 00       		.byte	0
 2225 0066 08       		.uleb128 0x8
 2226 0067 2E       		.uleb128 0x2e
 2227 0068 01       		.byte	0x1
 2228 0069 3F       		.uleb128 0x3f
 2229 006a 19       		.uleb128 0x19
 2230 006b 03       		.uleb128 0x3
 2231 006c 0E       		.uleb128 0xe
 2232 006d 3A       		.uleb128 0x3a
 2233 006e 0B       		.uleb128 0xb
 2234 006f 3B       		.uleb128 0x3b
 2235 0070 05       		.uleb128 0x5
 2236 0071 27       		.uleb128 0x27
 2237 0072 19       		.uleb128 0x19
 2238 0073 11       		.uleb128 0x11
 2239 0074 01       		.uleb128 0x1
 2240 0075 12       		.uleb128 0x12
 2241 0076 06       		.uleb128 0x6
 2242 0077 40       		.uleb128 0x40
 2243 0078 18       		.uleb128 0x18
 2244 0079 9642     		.uleb128 0x2116
 2245 007b 19       		.uleb128 0x19
 2246 007c 01       		.uleb128 0x1
 2247 007d 13       		.uleb128 0x13
 2248 007e 00       		.byte	0
 2249 007f 00       		.byte	0
 2250 0080 09       		.uleb128 0x9
 2251 0081 34       		.uleb128 0x34
 2252 0082 00       		.byte	0
 2253 0083 03       		.uleb128 0x3
 2254 0084 0E       		.uleb128 0xe
 2255 0085 3A       		.uleb128 0x3a
 2256 0086 0B       		.uleb128 0xb
 2257 0087 3B       		.uleb128 0x3b
 2258 0088 05       		.uleb128 0x5
 2259 0089 49       		.uleb128 0x49
 2260 008a 13       		.uleb128 0x13
 2261 008b 02       		.uleb128 0x2
 2262 008c 18       		.uleb128 0x18
 2263 008d 00       		.byte	0
 2264 008e 00       		.byte	0
 2265 008f 0A       		.uleb128 0xa
 2266 0090 2E       		.uleb128 0x2e
 2267 0091 00       		.byte	0
 2268 0092 3F       		.uleb128 0x3f
 2269 0093 19       		.uleb128 0x19
 2270 0094 03       		.uleb128 0x3
 2271 0095 0E       		.uleb128 0xe
 2272 0096 3A       		.uleb128 0x3a
 2273 0097 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 76


 2274 0098 3B       		.uleb128 0x3b
 2275 0099 05       		.uleb128 0x5
 2276 009a 27       		.uleb128 0x27
 2277 009b 19       		.uleb128 0x19
 2278 009c 11       		.uleb128 0x11
 2279 009d 01       		.uleb128 0x1
 2280 009e 12       		.uleb128 0x12
 2281 009f 06       		.uleb128 0x6
 2282 00a0 40       		.uleb128 0x40
 2283 00a1 18       		.uleb128 0x18
 2284 00a2 9642     		.uleb128 0x2116
 2285 00a4 19       		.uleb128 0x19
 2286 00a5 00       		.byte	0
 2287 00a6 00       		.byte	0
 2288 00a7 0B       		.uleb128 0xb
 2289 00a8 2E       		.uleb128 0x2e
 2290 00a9 01       		.byte	0x1
 2291 00aa 3F       		.uleb128 0x3f
 2292 00ab 19       		.uleb128 0x19
 2293 00ac 03       		.uleb128 0x3
 2294 00ad 0E       		.uleb128 0xe
 2295 00ae 3A       		.uleb128 0x3a
 2296 00af 0B       		.uleb128 0xb
 2297 00b0 3B       		.uleb128 0x3b
 2298 00b1 05       		.uleb128 0x5
 2299 00b2 27       		.uleb128 0x27
 2300 00b3 19       		.uleb128 0x19
 2301 00b4 49       		.uleb128 0x49
 2302 00b5 13       		.uleb128 0x13
 2303 00b6 11       		.uleb128 0x11
 2304 00b7 01       		.uleb128 0x1
 2305 00b8 12       		.uleb128 0x12
 2306 00b9 06       		.uleb128 0x6
 2307 00ba 40       		.uleb128 0x40
 2308 00bb 18       		.uleb128 0x18
 2309 00bc 9742     		.uleb128 0x2117
 2310 00be 19       		.uleb128 0x19
 2311 00bf 01       		.uleb128 0x1
 2312 00c0 13       		.uleb128 0x13
 2313 00c1 00       		.byte	0
 2314 00c2 00       		.byte	0
 2315 00c3 0C       		.uleb128 0xc
 2316 00c4 05       		.uleb128 0x5
 2317 00c5 00       		.byte	0
 2318 00c6 03       		.uleb128 0x3
 2319 00c7 0E       		.uleb128 0xe
 2320 00c8 3A       		.uleb128 0x3a
 2321 00c9 0B       		.uleb128 0xb
 2322 00ca 3B       		.uleb128 0x3b
 2323 00cb 05       		.uleb128 0x5
 2324 00cc 49       		.uleb128 0x49
 2325 00cd 13       		.uleb128 0x13
 2326 00ce 02       		.uleb128 0x2
 2327 00cf 18       		.uleb128 0x18
 2328 00d0 00       		.byte	0
 2329 00d1 00       		.byte	0
 2330 00d2 0D       		.uleb128 0xd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 77


 2331 00d3 34       		.uleb128 0x34
 2332 00d4 00       		.byte	0
 2333 00d5 03       		.uleb128 0x3
 2334 00d6 08       		.uleb128 0x8
 2335 00d7 3A       		.uleb128 0x3a
 2336 00d8 0B       		.uleb128 0xb
 2337 00d9 3B       		.uleb128 0x3b
 2338 00da 05       		.uleb128 0x5
 2339 00db 49       		.uleb128 0x49
 2340 00dc 13       		.uleb128 0x13
 2341 00dd 02       		.uleb128 0x2
 2342 00de 18       		.uleb128 0x18
 2343 00df 00       		.byte	0
 2344 00e0 00       		.byte	0
 2345 00e1 0E       		.uleb128 0xe
 2346 00e2 2E       		.uleb128 0x2e
 2347 00e3 00       		.byte	0
 2348 00e4 3F       		.uleb128 0x3f
 2349 00e5 19       		.uleb128 0x19
 2350 00e6 03       		.uleb128 0x3
 2351 00e7 0E       		.uleb128 0xe
 2352 00e8 3A       		.uleb128 0x3a
 2353 00e9 0B       		.uleb128 0xb
 2354 00ea 3B       		.uleb128 0x3b
 2355 00eb 05       		.uleb128 0x5
 2356 00ec 27       		.uleb128 0x27
 2357 00ed 19       		.uleb128 0x19
 2358 00ee 49       		.uleb128 0x49
 2359 00ef 13       		.uleb128 0x13
 2360 00f0 11       		.uleb128 0x11
 2361 00f1 01       		.uleb128 0x1
 2362 00f2 12       		.uleb128 0x12
 2363 00f3 06       		.uleb128 0x6
 2364 00f4 40       		.uleb128 0x40
 2365 00f5 18       		.uleb128 0x18
 2366 00f6 9742     		.uleb128 0x2117
 2367 00f8 19       		.uleb128 0x19
 2368 00f9 00       		.byte	0
 2369 00fa 00       		.byte	0
 2370 00fb 0F       		.uleb128 0xf
 2371 00fc 2E       		.uleb128 0x2e
 2372 00fd 01       		.byte	0x1
 2373 00fe 3F       		.uleb128 0x3f
 2374 00ff 19       		.uleb128 0x19
 2375 0100 03       		.uleb128 0x3
 2376 0101 0E       		.uleb128 0xe
 2377 0102 3A       		.uleb128 0x3a
 2378 0103 0B       		.uleb128 0xb
 2379 0104 3B       		.uleb128 0x3b
 2380 0105 05       		.uleb128 0x5
 2381 0106 27       		.uleb128 0x27
 2382 0107 19       		.uleb128 0x19
 2383 0108 11       		.uleb128 0x11
 2384 0109 01       		.uleb128 0x1
 2385 010a 12       		.uleb128 0x12
 2386 010b 06       		.uleb128 0x6
 2387 010c 40       		.uleb128 0x40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 78


 2388 010d 18       		.uleb128 0x18
 2389 010e 9742     		.uleb128 0x2117
 2390 0110 19       		.uleb128 0x19
 2391 0111 01       		.uleb128 0x1
 2392 0112 13       		.uleb128 0x13
 2393 0113 00       		.byte	0
 2394 0114 00       		.byte	0
 2395 0115 10       		.uleb128 0x10
 2396 0116 05       		.uleb128 0x5
 2397 0117 00       		.byte	0
 2398 0118 03       		.uleb128 0x3
 2399 0119 08       		.uleb128 0x8
 2400 011a 3A       		.uleb128 0x3a
 2401 011b 0B       		.uleb128 0xb
 2402 011c 3B       		.uleb128 0x3b
 2403 011d 05       		.uleb128 0x5
 2404 011e 49       		.uleb128 0x49
 2405 011f 13       		.uleb128 0x13
 2406 0120 02       		.uleb128 0x2
 2407 0121 18       		.uleb128 0x18
 2408 0122 00       		.byte	0
 2409 0123 00       		.byte	0
 2410 0124 11       		.uleb128 0x11
 2411 0125 34       		.uleb128 0x34
 2412 0126 00       		.byte	0
 2413 0127 03       		.uleb128 0x3
 2414 0128 0E       		.uleb128 0xe
 2415 0129 3A       		.uleb128 0x3a
 2416 012a 0B       		.uleb128 0xb
 2417 012b 3B       		.uleb128 0x3b
 2418 012c 0B       		.uleb128 0xb
 2419 012d 49       		.uleb128 0x49
 2420 012e 13       		.uleb128 0x13
 2421 012f 3F       		.uleb128 0x3f
 2422 0130 19       		.uleb128 0x19
 2423 0131 02       		.uleb128 0x2
 2424 0132 18       		.uleb128 0x18
 2425 0133 00       		.byte	0
 2426 0134 00       		.byte	0
 2427 0135 12       		.uleb128 0x12
 2428 0136 01       		.uleb128 0x1
 2429 0137 01       		.byte	0x1
 2430 0138 49       		.uleb128 0x49
 2431 0139 13       		.uleb128 0x13
 2432 013a 01       		.uleb128 0x1
 2433 013b 13       		.uleb128 0x13
 2434 013c 00       		.byte	0
 2435 013d 00       		.byte	0
 2436 013e 13       		.uleb128 0x13
 2437 013f 21       		.uleb128 0x21
 2438 0140 00       		.byte	0
 2439 0141 49       		.uleb128 0x49
 2440 0142 13       		.uleb128 0x13
 2441 0143 2F       		.uleb128 0x2f
 2442 0144 0B       		.uleb128 0xb
 2443 0145 00       		.byte	0
 2444 0146 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 79


 2445 0147 14       		.uleb128 0x14
 2446 0148 0F       		.uleb128 0xf
 2447 0149 00       		.byte	0
 2448 014a 0B       		.uleb128 0xb
 2449 014b 0B       		.uleb128 0xb
 2450 014c 49       		.uleb128 0x49
 2451 014d 13       		.uleb128 0x13
 2452 014e 00       		.byte	0
 2453 014f 00       		.byte	0
 2454 0150 15       		.uleb128 0x15
 2455 0151 26       		.uleb128 0x26
 2456 0152 00       		.byte	0
 2457 0153 49       		.uleb128 0x49
 2458 0154 13       		.uleb128 0x13
 2459 0155 00       		.byte	0
 2460 0156 00       		.byte	0
 2461 0157 00       		.byte	0
 2462              		.section	.debug_aranges,"",%progbits
 2463 0000 AC000000 		.4byte	0xac
 2464 0004 0200     		.2byte	0x2
 2465 0006 00000000 		.4byte	.Ldebug_info0
 2466 000a 04       		.byte	0x4
 2467 000b 00       		.byte	0
 2468 000c 0000     		.2byte	0
 2469 000e 0000     		.2byte	0
 2470 0010 00000000 		.4byte	.LFB0
 2471 0014 48010000 		.4byte	.LFE0-.LFB0
 2472 0018 00000000 		.4byte	.LFB1
 2473 001c 98000000 		.4byte	.LFE1-.LFB1
 2474 0020 00000000 		.4byte	.LFB2
 2475 0024 24000000 		.4byte	.LFE2-.LFB2
 2476 0028 00000000 		.4byte	.LFB3
 2477 002c 98000000 		.4byte	.LFE3-.LFB3
 2478 0030 00000000 		.4byte	.LFB4
 2479 0034 50000000 		.4byte	.LFE4-.LFB4
 2480 0038 00000000 		.4byte	.LFB5
 2481 003c 50000000 		.4byte	.LFE5-.LFB5
 2482 0040 00000000 		.4byte	.LFB6
 2483 0044 34000000 		.4byte	.LFE6-.LFB6
 2484 0048 00000000 		.4byte	.LFB7
 2485 004c 58000000 		.4byte	.LFE7-.LFB7
 2486 0050 00000000 		.4byte	.LFB8
 2487 0054 1C000000 		.4byte	.LFE8-.LFB8
 2488 0058 00000000 		.4byte	.LFB9
 2489 005c 20000000 		.4byte	.LFE9-.LFB9
 2490 0060 00000000 		.4byte	.LFB10
 2491 0064 28000000 		.4byte	.LFE10-.LFB10
 2492 0068 00000000 		.4byte	.LFB11
 2493 006c 6C000000 		.4byte	.LFE11-.LFB11
 2494 0070 00000000 		.4byte	.LFB12
 2495 0074 70000000 		.4byte	.LFE12-.LFB12
 2496 0078 00000000 		.4byte	.LFB13
 2497 007c 5C000000 		.4byte	.LFE13-.LFB13
 2498 0080 00000000 		.4byte	.LFB14
 2499 0084 98000000 		.4byte	.LFE14-.LFB14
 2500 0088 00000000 		.4byte	.LFB15
 2501 008c 2C000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 80


 2502 0090 00000000 		.4byte	.LFB16
 2503 0094 20000000 		.4byte	.LFE16-.LFB16
 2504 0098 00000000 		.4byte	.LFB17
 2505 009c 20000000 		.4byte	.LFE17-.LFB17
 2506 00a0 00000000 		.4byte	.LFB18
 2507 00a4 40000000 		.4byte	.LFE18-.LFB18
 2508 00a8 00000000 		.4byte	0
 2509 00ac 00000000 		.4byte	0
 2510              		.section	.debug_ranges,"",%progbits
 2511              	.Ldebug_ranges0:
 2512 0000 00000000 		.4byte	.LFB0
 2513 0004 48010000 		.4byte	.LFE0
 2514 0008 00000000 		.4byte	.LFB1
 2515 000c 98000000 		.4byte	.LFE1
 2516 0010 00000000 		.4byte	.LFB2
 2517 0014 24000000 		.4byte	.LFE2
 2518 0018 00000000 		.4byte	.LFB3
 2519 001c 98000000 		.4byte	.LFE3
 2520 0020 00000000 		.4byte	.LFB4
 2521 0024 50000000 		.4byte	.LFE4
 2522 0028 00000000 		.4byte	.LFB5
 2523 002c 50000000 		.4byte	.LFE5
 2524 0030 00000000 		.4byte	.LFB6
 2525 0034 34000000 		.4byte	.LFE6
 2526 0038 00000000 		.4byte	.LFB7
 2527 003c 58000000 		.4byte	.LFE7
 2528 0040 00000000 		.4byte	.LFB8
 2529 0044 1C000000 		.4byte	.LFE8
 2530 0048 00000000 		.4byte	.LFB9
 2531 004c 20000000 		.4byte	.LFE9
 2532 0050 00000000 		.4byte	.LFB10
 2533 0054 28000000 		.4byte	.LFE10
 2534 0058 00000000 		.4byte	.LFB11
 2535 005c 6C000000 		.4byte	.LFE11
 2536 0060 00000000 		.4byte	.LFB12
 2537 0064 70000000 		.4byte	.LFE12
 2538 0068 00000000 		.4byte	.LFB13
 2539 006c 5C000000 		.4byte	.LFE13
 2540 0070 00000000 		.4byte	.LFB14
 2541 0074 98000000 		.4byte	.LFE14
 2542 0078 00000000 		.4byte	.LFB15
 2543 007c 2C000000 		.4byte	.LFE15
 2544 0080 00000000 		.4byte	.LFB16
 2545 0084 20000000 		.4byte	.LFE16
 2546 0088 00000000 		.4byte	.LFB17
 2547 008c 20000000 		.4byte	.LFE17
 2548 0090 00000000 		.4byte	.LFB18
 2549 0094 40000000 		.4byte	.LFE18
 2550 0098 00000000 		.4byte	0
 2551 009c 00000000 		.4byte	0
 2552              		.section	.debug_line,"",%progbits
 2553              	.Ldebug_line0:
 2554 0000 52020000 		.section	.debug_str,"MS",%progbits,1
 2554      02004500 
 2554      00000201 
 2554      FB0E0D00 
 2554      01010101 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 81


 2555              	.LASF10:
 2556 0000 75696E74 		.ascii	"uint16\000"
 2556      313600
 2557              	.LASF49:
 2558 0007 43617053 		.ascii	"CapSense_csv\000"
 2558      656E7365 
 2558      5F637376 
 2558      00
 2559              	.LASF62:
 2560 0014 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 2560      72617465 
 2560      645F536F 
 2560      75726365 
 2560      5C50536F 
 2561              	.LASF48:
 2562 0036 43617053 		.ascii	"CapSense_initVar\000"
 2562      656E7365 
 2562      5F696E69 
 2562      74566172 
 2562      00
 2563              	.LASF53:
 2564 0047 43617053 		.ascii	"CapSense_pcTable\000"
 2564      656E7365 
 2564      5F706354 
 2564      61626C65 
 2564      00
 2565              	.LASF27:
 2566 0058 736E7349 		.ascii	"snsIndex\000"
 2566      6E646578 
 2566      00
 2567              	.LASF61:
 2568 0061 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2568      43313120 
 2568      352E342E 
 2568      31203230 
 2568      31363036 
 2569 0094 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2569      20726576 
 2569      6973696F 
 2569      6E203233 
 2569      37373135 
 2570 00c7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2570      66756E63 
 2570      74696F6E 
 2570      2D736563 
 2570      74696F6E 
 2571              	.LASF7:
 2572 00ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 2572      206C6F6E 
 2572      6720756E 
 2572      7369676E 
 2572      65642069 
 2573              	.LASF21:
 2574 0106 43617053 		.ascii	"CapSense_Enable\000"
 2574      656E7365 
 2574      5F456E61 
 2574      626C6500 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 82


 2575              	.LASF42:
 2576 0116 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2576      656E7365 
 2576      5F536574 
 2576      50726573 
 2576      63616C65 
 2577              	.LASF6:
 2578 012c 6C6F6E67 		.ascii	"long long int\000"
 2578      206C6F6E 
 2578      6720696E 
 2578      7400
 2579              	.LASF0:
 2580 013a 7369676E 		.ascii	"signed char\000"
 2580      65642063 
 2580      68617200 
 2581              	.LASF47:
 2582 0146 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2582      656E7365 
 2582      5F536574 
 2582      416E616C 
 2582      6F675377 
 2583              	.LASF4:
 2584 0167 6C6F6E67 		.ascii	"long int\000"
 2584      20696E74 
 2584      00
 2585              	.LASF16:
 2586 0170 72656731 		.ascii	"reg16\000"
 2586      3600
 2587              	.LASF9:
 2588 0176 75696E74 		.ascii	"uint8\000"
 2588      3800
 2589              	.LASF13:
 2590 017c 646F7562 		.ascii	"double\000"
 2590      6C6500
 2591              	.LASF36:
 2592 0183 43617053 		.ascii	"CapSense_EnableSensor\000"
 2592      656E7365 
 2592      5F456E61 
 2592      626C6553 
 2592      656E736F 
 2593              	.LASF60:
 2594 0199 43617053 		.ascii	"CapSense_widgetNumber\000"
 2594      656E7365 
 2594      5F776964 
 2594      6765744E 
 2594      756D6265 
 2595              	.LASF34:
 2596 01af 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2596      656E7365 
 2596      5F526561 
 2596      6453656E 
 2596      736F7252 
 2597              	.LASF11:
 2598 01c6 75696E74 		.ascii	"uint32\000"
 2598      333200
 2599              	.LASF38:
 2600 01cd 6D61736B 		.ascii	"mask\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 83


 2600      00
 2601              	.LASF37:
 2602 01d2 706F7274 		.ascii	"port\000"
 2602      00
 2603              	.LASF50:
 2604 01d7 43617053 		.ascii	"CapSense_sensorIndex\000"
 2604      656E7365 
 2604      5F73656E 
 2604      736F7249 
 2604      6E646578 
 2605              	.LASF30:
 2606 01ec 43617053 		.ascii	"CapSense_ScanSensor\000"
 2606      656E7365 
 2606      5F536361 
 2606      6E53656E 
 2606      736F7200 
 2607              	.LASF8:
 2608 0200 756E7369 		.ascii	"unsigned int\000"
 2608      676E6564 
 2608      20696E74 
 2608      00
 2609              	.LASF35:
 2610 020d 43617053 		.ascii	"CapSense_ClearSensors\000"
 2610      656E7365 
 2610      5F436C65 
 2610      61725365 
 2610      6E736F72 
 2611              	.LASF5:
 2612 0223 6C6F6E67 		.ascii	"long unsigned int\000"
 2612      20756E73 
 2612      69676E65 
 2612      6420696E 
 2612      7400
 2613              	.LASF55:
 2614 0235 43617053 		.ascii	"CapSense_maskTable\000"
 2614      656E7365 
 2614      5F6D6173 
 2614      6B546162 
 2614      6C6500
 2615              	.LASF54:
 2616 0248 43617053 		.ascii	"CapSense_portTable\000"
 2616      656E7365 
 2616      5F706F72 
 2616      74546162 
 2616      6C6500
 2617              	.LASF3:
 2618 025b 73686F72 		.ascii	"short unsigned int\000"
 2618      7420756E 
 2618      7369676E 
 2618      65642069 
 2618      6E7400
 2619              	.LASF31:
 2620 026e 73656E73 		.ascii	"sensor\000"
 2620      6F7200
 2621              	.LASF52:
 2622 0275 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2622      656E7365 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 84


 2622      5F73656E 
 2622      736F7245 
 2622      6E61626C 
 2623              	.LASF63:
 2624 028f 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 2624      73657273 
 2624      5C4A6566 
 2624      66536E79 
 2624      6465725C 
 2625 02bd 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb\\CE210514_P"
 2625      355F656C 
 2625      65637472 
 2625      6F737465 
 2625      656C5F73 
 2626 02ef 534F4333 		.ascii	"SOC3_5_Thermistor.cydsn\000"
 2626      5F355F54 
 2626      6865726D 
 2626      6973746F 
 2626      722E6379 
 2627              	.LASF28:
 2628 0307 736C6F74 		.ascii	"slot\000"
 2628      00
 2629              	.LASF17:
 2630 030c 72656733 		.ascii	"reg32\000"
 2630      3200
 2631              	.LASF59:
 2632 0312 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2632      656E7365 
 2632      5F616E61 
 2632      6C6F6753 
 2632      77697463 
 2633              	.LASF19:
 2634 032f 73697A65 		.ascii	"sizetype\000"
 2634      74797065 
 2634      00
 2635              	.LASF56:
 2636 0338 43617053 		.ascii	"CapSense_csTable\000"
 2636      656E7365 
 2636      5F637354 
 2636      61626C65 
 2636      00
 2637              	.LASF18:
 2638 0349 6C6F6E67 		.ascii	"long double\000"
 2638      20646F75 
 2638      626C6500 
 2639              	.LASF24:
 2640 0355 43617053 		.ascii	"CapSense_Stop\000"
 2640      656E7365 
 2640      5F53746F 
 2640      7000
 2641              	.LASF46:
 2642 0363 7363616E 		.ascii	"scanSpeed\000"
 2642      53706565 
 2642      6400
 2643              	.LASF25:
 2644 036d 656E4D61 		.ascii	"enMask\000"
 2644      736B00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 85


 2645              	.LASF57:
 2646 0374 43617053 		.ascii	"CapSense_idacSettings\000"
 2646      656E7365 
 2646      5F696461 
 2646      63536574 
 2646      74696E67 
 2647              	.LASF12:
 2648 038a 666C6F61 		.ascii	"float\000"
 2648      7400
 2649              	.LASF43:
 2650 0390 70726573 		.ascii	"prescaler\000"
 2650      63616C65 
 2650      7200
 2651              	.LASF15:
 2652 039a 72656738 		.ascii	"reg8\000"
 2652      00
 2653              	.LASF33:
 2654 039f 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2654      656E7365 
 2654      5F46696E 
 2654      644E6578 
 2654      7453656E 
 2655              	.LASF39:
 2656 03b7 43617053 		.ascii	"CapSense_DisableSensor\000"
 2656      656E7365 
 2656      5F446973 
 2656      61626C65 
 2656      53656E73 
 2657              	.LASF1:
 2658 03ce 756E7369 		.ascii	"unsigned char\000"
 2658      676E6564 
 2658      20636861 
 2658      7200
 2659              	.LASF58:
 2660 03dc 43617053 		.ascii	"CapSense_widgetResolution\000"
 2660      656E7365 
 2660      5F776964 
 2660      67657452 
 2660      65736F6C 
 2661              	.LASF2:
 2662 03f6 73686F72 		.ascii	"short int\000"
 2662      7420696E 
 2662      7400
 2663              	.LASF29:
 2664 0400 77696467 		.ascii	"widget\000"
 2664      657400
 2665              	.LASF44:
 2666 0407 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2666      656E7365 
 2666      5F476574 
 2666      50726573 
 2666      63616C65 
 2667              	.LASF14:
 2668 041d 63686172 		.ascii	"char\000"
 2668      00
 2669              	.LASF45:
 2670 0422 43617053 		.ascii	"CapSense_SetScanSpeed\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccNV7sXE.s 			page 86


 2670      656E7365 
 2670      5F536574 
 2670      5363616E 
 2670      53706565 
 2671              	.LASF23:
 2672 0438 43617053 		.ascii	"CapSense_Start\000"
 2672      656E7365 
 2672      5F537461 
 2672      727400
 2673              	.LASF41:
 2674 0447 43617053 		.ascii	"CapSense_PostScan\000"
 2674      656E7365 
 2674      5F506F73 
 2674      74536361 
 2674      6E00
 2675              	.LASF22:
 2676 0459 656E6162 		.ascii	"enableInterrupts\000"
 2676      6C65496E 
 2676      74657272 
 2676      75707473 
 2676      00
 2677              	.LASF26:
 2678 046a 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2678      656E7365 
 2678      5F536574 
 2678      5363616E 
 2678      536C6F74 
 2679              	.LASF40:
 2680 0487 43617053 		.ascii	"CapSense_PreScan\000"
 2680      656E7365 
 2680      5F507265 
 2680      5363616E 
 2680      00
 2681              	.LASF20:
 2682 0498 43617053 		.ascii	"CapSense_Init\000"
 2682      656E7365 
 2682      5F496E69 
 2682      7400
 2683              	.LASF51:
 2684 04a6 43617053 		.ascii	"CapSense_sensorRaw\000"
 2684      656E7365 
 2684      5F73656E 
 2684      736F7252 
 2684      617700
 2685              	.LASF32:
 2686 04b9 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2686      656E7365 
 2686      5F536361 
 2686      6E456E61 
 2686      626C6564 
 2687              	.LASF64:
 2688 04d5 43617053 		.ascii	"CapSense_IsBusy\000"
 2688      656E7365 
 2688      5F497342 
 2688      75737900 
 2689              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
