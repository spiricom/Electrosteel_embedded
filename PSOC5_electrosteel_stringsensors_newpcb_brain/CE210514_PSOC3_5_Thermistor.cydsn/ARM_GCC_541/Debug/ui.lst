ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ui.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.global	prevEncoderVal
  21              		.bss
  22              		.type	prevEncoderVal, %object
  23              		.size	prevEncoderVal, 1
  24              	prevEncoderVal:
  25 0000 00       		.space	1
  26              		.global	encoderWatch
  27              		.type	encoderWatch, %object
  28              		.size	encoderWatch, 1
  29              	encoderWatch:
  30 0001 00       		.space	1
  31              		.comm	menuPosition,6,4
  32              		.global	semitonesOrCents
  33              		.type	semitonesOrCents, %object
  34              		.size	semitonesOrCents, 1
  35              	semitonesOrCents:
  36 0002 00       		.space	1
  37              		.global	editUp
  38              		.data
  39              		.type	editUp, %object
  40              		.size	editUp, 1
  41              	editUp:
  42 0000 01       		.byte	1
  43              		.global	oct1Up
  44              		.type	oct1Up, %object
  45              		.size	oct1Up, 1
  46              	oct1Up:
  47 0001 01       		.byte	1
  48              		.global	oct4Up
  49              		.type	oct4Up, %object
  50              		.size	oct4Up, 1
  51              	oct4Up:
  52 0002 01       		.byte	1
  53              		.global	encoderUp
  54              		.type	encoderUp, %object
  55              		.size	encoderUp, 1
  56              	encoderUp:
  57 0003 01       		.byte	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 2


  58              		.global	button1Up
  59              		.type	button1Up, %object
  60              		.size	button1Up, 1
  61              	button1Up:
  62 0004 01       		.byte	1
  63              		.global	button2Up
  64              		.type	button2Up, %object
  65              		.size	button2Up, 1
  66              	button2Up:
  67 0005 01       		.byte	1
  68              		.global	button3Up
  69              		.type	button3Up, %object
  70              		.size	button3Up, 1
  71              	button3Up:
  72 0006 01       		.byte	1
  73              		.global	button4Up
  74              		.type	button4Up, %object
  75              		.size	button4Up, 1
  76              	button4Up:
  77 0007 01       		.byte	1
  78              		.global	shiftUp
  79              		.type	shiftUp, %object
  80              		.size	shiftUp, 1
  81              	shiftUp:
  82 0008 01       		.byte	1
  83              		.global	editingSliderRepString
  84              		.bss
  85              		.type	editingSliderRepString, %object
  86              		.size	editingSliderRepString, 1
  87              	editingSliderRepString:
  88 0003 00       		.space	1
  89              		.global	whichMidiSendSelected
  90              		.type	whichMidiSendSelected, %object
  91              		.size	whichMidiSendSelected, 1
  92              	whichMidiSendSelected:
  93 0004 00       		.space	1
  94              		.global	__aeabi_i2f
  95              		.global	__aeabi_fmul
  96              		.global	__aeabi_fsub
  97              		.global	__aeabi_fcmplt
  98              		.global	__aeabi_fcmpgt
  99              		.global	__aeabi_f2uiz
 100              		.global	__aeabi_ui2f
 101              		.section	.rodata
 102              		.align	2
 103              	.LC0:
 104 0000 53313D00 		.ascii	"S1=\000"
 105              		.section	.text.scanUI,"ax",%progbits
 106              		.align	2
 107              		.global	scanUI
 108              		.thumb
 109              		.thumb_func
 110              		.type	scanUI, %function
 111              	scanUI:
 112              	.LFB64:
 113              		.file 1 "ui.c"
   1:ui.c          **** /* ========================================
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 3


   2:ui.c          ****  *
   3:ui.c          ****  * Copyright YOUR COMPANY, THE YEAR
   4:ui.c          ****  * All Rights Reserved
   5:ui.c          ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:ui.c          ****  *
   7:ui.c          ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:ui.c          ****  * WHICH IS THE PROPERTY OF your company.
   9:ui.c          ****  *
  10:ui.c          ****  * ========================================
  11:ui.c          **** */
  12:ui.c          **** 
  13:ui.c          **** #include "main.h"
  14:ui.c          **** #include "ui.h"
  15:ui.c          **** 
  16:ui.c          **** int8_t prevEncoderVal = 0;
  17:ui.c          **** uint8_t encoderWatch = 0;
  18:ui.c          **** //signed so that we can check if it goes below zero
  19:ui.c          **** int8_t menuPosition[3][2];
  20:ui.c          **** enum direction{Left, Right, Down, Up, Enter};
  21:ui.c          **** uint8_t semitonesOrCents = 0;
  22:ui.c          **** uint8_t editUp = 1;
  23:ui.c          **** uint8_t oct1Up = 1;
  24:ui.c          **** uint8_t oct4Up = 1;
  25:ui.c          **** uint8_t encoderUp = 1;
  26:ui.c          **** uint8_t button1Up = 1;
  27:ui.c          **** uint8_t button2Up = 1;
  28:ui.c          **** uint8_t button3Up = 1;
  29:ui.c          **** uint8_t button4Up = 1;
  30:ui.c          **** uint8_t shiftUp = 1;
  31:ui.c          **** uint8_t editingSliderRepString = 0;
  32:ui.c          **** uint8_t whichMidiSendSelected = 0;
  33:ui.c          **** 
  34:ui.c          **** void scanUI(void)
  35:ui.c          **** {
 114              		.loc 1 35 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 32
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0000 90B5     		push	{r4, r7, lr}
 119              		.cfi_def_cfa_offset 12
 120              		.cfi_offset 4, -12
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 8BB0     		sub	sp, sp, #44
 124              		.cfi_def_cfa_offset 56
 125 0004 02AF     		add	r7, sp, #8
 126              		.cfi_def_cfa 7, 48
  36:ui.c          ****     uint8_t tempButtons = Status_Reg_1_Read();
 127              		.loc 1 36 0
 128 0006 FFF7FEFF 		bl	Status_Reg_1_Read
 129 000a 0346     		mov	r3, r0
 130 000c FB75     		strb	r3, [r7, #23]
  37:ui.c          ****     if (!(tempButtons&(1<<4)))
 131              		.loc 1 37 0
 132 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 133 0010 03F01003 		and	r3, r3, #16
 134 0014 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 4


 135 0016 24D1     		bne	.L2
  38:ui.c          ****     {
  39:ui.c          ****         if (octave > 4)
 136              		.loc 1 39 0
 137 0018 AC4B     		ldr	r3, .L60
 138 001a 1B68     		ldr	r3, [r3]
 139 001c 042B     		cmp	r3, #4
 140 001e 03DD     		ble	.L3
  40:ui.c          ****         {
  41:ui.c          ****             octave = 4;
 141              		.loc 1 41 0
 142 0020 AA4B     		ldr	r3, .L60
 143 0022 0422     		movs	r2, #4
 144 0024 1A60     		str	r2, [r3]
 145 0026 0CE0     		b	.L4
 146              	.L3:
  42:ui.c          ****         }
  43:ui.c          ****         else if ((oct1Up) && (octave > 0))
 147              		.loc 1 43 0
 148 0028 A94B     		ldr	r3, .L60+4
 149 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 150 002c 002B     		cmp	r3, #0
 151 002e 08D0     		beq	.L4
 152              		.loc 1 43 0 is_stmt 0 discriminator 1
 153 0030 A64B     		ldr	r3, .L60
 154 0032 1B68     		ldr	r3, [r3]
 155 0034 002B     		cmp	r3, #0
 156 0036 04DD     		ble	.L4
  44:ui.c          ****         {
  45:ui.c          ****             octave--;
 157              		.loc 1 45 0 is_stmt 1
 158 0038 A44B     		ldr	r3, .L60
 159 003a 1B68     		ldr	r3, [r3]
 160 003c 013B     		subs	r3, r3, #1
 161 003e A34A     		ldr	r2, .L60
 162 0040 1360     		str	r3, [r2]
 163              	.L4:
  46:ui.c          ****         }
  47:ui.c          ****         LED_amber1_Write(1);
 164              		.loc 1 47 0
 165 0042 0120     		movs	r0, #1
 166 0044 FFF7FEFF 		bl	LED_amber1_Write
  48:ui.c          ****         LED_amber2_Write(0);
 167              		.loc 1 48 0
 168 0048 0020     		movs	r0, #0
 169 004a FFF7FEFF 		bl	LED_amber2_Write
  49:ui.c          ****         LED_amber3_Write(0);
 170              		.loc 1 49 0
 171 004e 0020     		movs	r0, #0
 172 0050 FFF7FEFF 		bl	LED_amber3_Write
  50:ui.c          ****         LED_amber4_Write(0);
 173              		.loc 1 50 0
 174 0054 0020     		movs	r0, #0
 175 0056 FFF7FEFF 		bl	LED_amber4_Write
  51:ui.c          ****         oct1Up = 0;
 176              		.loc 1 51 0
 177 005a 9D4B     		ldr	r3, .L60+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 5


 178 005c 0022     		movs	r2, #0
 179 005e 1A70     		strb	r2, [r3]
 180 0060 07E0     		b	.L5
 181              	.L2:
  52:ui.c          ****     }
  53:ui.c          ****     
  54:ui.c          ****     else if ((tempButtons&(1<<4)))
 182              		.loc 1 54 0
 183 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 184 0064 03F01003 		and	r3, r3, #16
 185 0068 002B     		cmp	r3, #0
 186 006a 02D0     		beq	.L5
  55:ui.c          ****     {
  56:ui.c          ****         oct1Up = 1;
 187              		.loc 1 56 0
 188 006c 984B     		ldr	r3, .L60+4
 189 006e 0122     		movs	r2, #1
 190 0070 1A70     		strb	r2, [r3]
 191              	.L5:
  57:ui.c          ****     }
  58:ui.c          ****     
  59:ui.c          ****     if (!oct2_Read())
 192              		.loc 1 59 0
 193 0072 FFF7FEFF 		bl	oct2_Read
 194 0076 0346     		mov	r3, r0
 195 0078 002B     		cmp	r3, #0
 196 007a 0ED1     		bne	.L6
  60:ui.c          ****     {
  61:ui.c          ****         octave = 5;
 197              		.loc 1 61 0
 198 007c 934B     		ldr	r3, .L60
 199 007e 0522     		movs	r2, #5
 200 0080 1A60     		str	r2, [r3]
  62:ui.c          ****         LED_amber1_Write(0);
 201              		.loc 1 62 0
 202 0082 0020     		movs	r0, #0
 203 0084 FFF7FEFF 		bl	LED_amber1_Write
  63:ui.c          ****         LED_amber2_Write(1);
 204              		.loc 1 63 0
 205 0088 0120     		movs	r0, #1
 206 008a FFF7FEFF 		bl	LED_amber2_Write
  64:ui.c          ****         LED_amber3_Write(0);
 207              		.loc 1 64 0
 208 008e 0020     		movs	r0, #0
 209 0090 FFF7FEFF 		bl	LED_amber3_Write
  65:ui.c          ****         LED_amber4_Write(0);
 210              		.loc 1 65 0
 211 0094 0020     		movs	r0, #0
 212 0096 FFF7FEFF 		bl	LED_amber4_Write
 213              	.L6:
  66:ui.c          ****     }
  67:ui.c          ****     if (!oct3_Read())
 214              		.loc 1 67 0
 215 009a FFF7FEFF 		bl	oct3_Read
 216 009e 0346     		mov	r3, r0
 217 00a0 002B     		cmp	r3, #0
 218 00a2 0ED1     		bne	.L7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 6


  68:ui.c          ****     {
  69:ui.c          ****         octave = 6;
 219              		.loc 1 69 0
 220 00a4 894B     		ldr	r3, .L60
 221 00a6 0622     		movs	r2, #6
 222 00a8 1A60     		str	r2, [r3]
  70:ui.c          ****         LED_amber1_Write(0);
 223              		.loc 1 70 0
 224 00aa 0020     		movs	r0, #0
 225 00ac FFF7FEFF 		bl	LED_amber1_Write
  71:ui.c          ****         LED_amber2_Write(0);
 226              		.loc 1 71 0
 227 00b0 0020     		movs	r0, #0
 228 00b2 FFF7FEFF 		bl	LED_amber2_Write
  72:ui.c          ****         LED_amber3_Write(1);
 229              		.loc 1 72 0
 230 00b6 0120     		movs	r0, #1
 231 00b8 FFF7FEFF 		bl	LED_amber3_Write
  73:ui.c          ****         LED_amber4_Write(0);            
 232              		.loc 1 73 0
 233 00bc 0020     		movs	r0, #0
 234 00be FFF7FEFF 		bl	LED_amber4_Write
 235              	.L7:
  74:ui.c          ****     }
  75:ui.c          ****     if (!(tempButtons&(1<<5)))
 236              		.loc 1 75 0
 237 00c2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 238 00c4 03F02003 		and	r3, r3, #32
 239 00c8 002B     		cmp	r3, #0
 240 00ca 24D1     		bne	.L8
  76:ui.c          ****     {
  77:ui.c          ****         if (octave < 7)
 241              		.loc 1 77 0
 242 00cc 7F4B     		ldr	r3, .L60
 243 00ce 1B68     		ldr	r3, [r3]
 244 00d0 062B     		cmp	r3, #6
 245 00d2 03DC     		bgt	.L9
  78:ui.c          ****         {
  79:ui.c          ****             octave = 7;
 246              		.loc 1 79 0
 247 00d4 7D4B     		ldr	r3, .L60
 248 00d6 0722     		movs	r2, #7
 249 00d8 1A60     		str	r2, [r3]
 250 00da 0CE0     		b	.L10
 251              	.L9:
  80:ui.c          **** 
  81:ui.c          ****         }
  82:ui.c          ****         else if ((oct4Up) && (octave < 11))
 252              		.loc 1 82 0
 253 00dc 7D4B     		ldr	r3, .L60+8
 254 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 255 00e0 002B     		cmp	r3, #0
 256 00e2 08D0     		beq	.L10
 257              		.loc 1 82 0 is_stmt 0 discriminator 1
 258 00e4 794B     		ldr	r3, .L60
 259 00e6 1B68     		ldr	r3, [r3]
 260 00e8 0A2B     		cmp	r3, #10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 7


 261 00ea 04DC     		bgt	.L10
  83:ui.c          ****         {
  84:ui.c          ****             octave++;
 262              		.loc 1 84 0 is_stmt 1
 263 00ec 774B     		ldr	r3, .L60
 264 00ee 1B68     		ldr	r3, [r3]
 265 00f0 0133     		adds	r3, r3, #1
 266 00f2 764A     		ldr	r2, .L60
 267 00f4 1360     		str	r3, [r2]
 268              	.L10:
  85:ui.c          **** 
  86:ui.c          ****         }
  87:ui.c          ****         LED_amber1_Write(0);
 269              		.loc 1 87 0
 270 00f6 0020     		movs	r0, #0
 271 00f8 FFF7FEFF 		bl	LED_amber1_Write
  88:ui.c          ****         LED_amber2_Write(0);
 272              		.loc 1 88 0
 273 00fc 0020     		movs	r0, #0
 274 00fe FFF7FEFF 		bl	LED_amber2_Write
  89:ui.c          ****         LED_amber3_Write(0);
 275              		.loc 1 89 0
 276 0102 0020     		movs	r0, #0
 277 0104 FFF7FEFF 		bl	LED_amber3_Write
  90:ui.c          ****         LED_amber4_Write(1);
 278              		.loc 1 90 0
 279 0108 0120     		movs	r0, #1
 280 010a FFF7FEFF 		bl	LED_amber4_Write
  91:ui.c          ****         oct4Up = 0;
 281              		.loc 1 91 0
 282 010e 714B     		ldr	r3, .L60+8
 283 0110 0022     		movs	r2, #0
 284 0112 1A70     		strb	r2, [r3]
 285 0114 07E0     		b	.L11
 286              	.L8:
  92:ui.c          ****     }
  93:ui.c          ****     
  94:ui.c          ****     else if ((tempButtons&(1<<5)))
 287              		.loc 1 94 0
 288 0116 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 289 0118 03F02003 		and	r3, r3, #32
 290 011c 002B     		cmp	r3, #0
 291 011e 02D0     		beq	.L11
  95:ui.c          ****     {
  96:ui.c          ****         oct4Up = 1;
 292              		.loc 1 96 0
 293 0120 6C4B     		ldr	r3, .L60+8
 294 0122 0122     		movs	r2, #1
 295 0124 1A70     		strb	r2, [r3]
 296              	.L11:
  97:ui.c          ****     }
  98:ui.c          ****     
  99:ui.c          ****     if (!neck1_button_Read())
 297              		.loc 1 99 0
 298 0126 FFF7FEFF 		bl	neck1_button_Read
 299 012a 0346     		mov	r3, r0
 300 012c 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 8


 301 012e 2FD1     		bne	.L12
 100:ui.c          ****     {
 101:ui.c          ****         currentNeck = 0;
 302              		.loc 1 101 0
 303 0130 694B     		ldr	r3, .L60+12
 304 0132 0022     		movs	r2, #0
 305 0134 1A70     		strb	r2, [r3]
 102:ui.c          ****         currentCopedent = necks[currentNeck];
 306              		.loc 1 102 0
 307 0136 684B     		ldr	r3, .L60+12
 308 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 309 013a 1A46     		mov	r2, r3
 310 013c 674B     		ldr	r3, .L60+16
 311 013e 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 312 0140 674B     		ldr	r3, .L60+20
 313 0142 1A70     		strb	r2, [r3]
 103:ui.c          ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 314              		.loc 1 103 0
 315 0144 654B     		ldr	r3, .L60+16
 316 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 317 0148 5B01     		lsls	r3, r3, #5
 318 014a DAB2     		uxtb	r2, r3
 319 014c 634B     		ldr	r3, .L60+16
 320 014e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 321 0150 9B00     		lsls	r3, r3, #2
 322 0152 DBB2     		uxtb	r3, r3
 323 0154 1344     		add	r3, r3, r2
 324 0156 DAB2     		uxtb	r2, r3
 325 0158 5F4B     		ldr	r3, .L60+12
 326 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 327 015c 1344     		add	r3, r3, r2
 328 015e DAB2     		uxtb	r2, r3
 329 0160 604B     		ldr	r3, .L60+24
 330 0162 1A70     		strb	r2, [r3]
 104:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 331              		.loc 1 104 0
 332 0164 5F4B     		ldr	r3, .L60+24
 333 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 334 0168 40F2FE71 		movw	r1, #2046
 335 016c 1846     		mov	r0, r3
 336 016e FFF7FEFF 		bl	EEPROM_WriteByte
 105:ui.c          ****         LED_red1_Write(0);
 337              		.loc 1 105 0
 338 0172 0020     		movs	r0, #0
 339 0174 FFF7FEFF 		bl	LED_red1_Write
 106:ui.c          ****         LED_green2_Write(1);
 340              		.loc 1 106 0
 341 0178 0120     		movs	r0, #1
 342 017a FFF7FEFF 		bl	LED_green2_Write
 107:ui.c          ****         if (!editMode)
 343              		.loc 1 107 0
 344 017e 5A4B     		ldr	r3, .L60+28
 345 0180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 346 0182 002B     		cmp	r3, #0
 347 0184 02D1     		bne	.L13
 108:ui.c          ****         {
 109:ui.c          ****             displayCurrentPresetNameAndCopedent();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 9


 348              		.loc 1 109 0
 349 0186 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 350 018a 01E0     		b	.L12
 351              	.L13:
 110:ui.c          ****         }
 111:ui.c          ****         else
 112:ui.c          ****         {
 113:ui.c          ****             exitEditModeMenu();   
 352              		.loc 1 113 0
 353 018c FFF7FEFF 		bl	exitEditModeMenu
 354              	.L12:
 114:ui.c          ****         }
 115:ui.c          ****     }
 116:ui.c          ****     if (!neck2_button_Read())
 355              		.loc 1 116 0
 356 0190 FFF7FEFF 		bl	neck2_button_Read
 357 0194 0346     		mov	r3, r0
 358 0196 002B     		cmp	r3, #0
 359 0198 2FD1     		bne	.L14
 117:ui.c          ****     {
 118:ui.c          ****         currentNeck = 1;
 360              		.loc 1 118 0
 361 019a 4F4B     		ldr	r3, .L60+12
 362 019c 0122     		movs	r2, #1
 363 019e 1A70     		strb	r2, [r3]
 119:ui.c          ****         currentCopedent = necks[currentNeck];    
 364              		.loc 1 119 0
 365 01a0 4D4B     		ldr	r3, .L60+12
 366 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 367 01a4 1A46     		mov	r2, r3
 368 01a6 4D4B     		ldr	r3, .L60+16
 369 01a8 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 370 01aa 4D4B     		ldr	r3, .L60+20
 371 01ac 1A70     		strb	r2, [r3]
 120:ui.c          ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 372              		.loc 1 120 0
 373 01ae 4B4B     		ldr	r3, .L60+16
 374 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 375 01b2 5B01     		lsls	r3, r3, #5
 376 01b4 DAB2     		uxtb	r2, r3
 377 01b6 494B     		ldr	r3, .L60+16
 378 01b8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 379 01ba 9B00     		lsls	r3, r3, #2
 380 01bc DBB2     		uxtb	r3, r3
 381 01be 1344     		add	r3, r3, r2
 382 01c0 DAB2     		uxtb	r2, r3
 383 01c2 454B     		ldr	r3, .L60+12
 384 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 385 01c6 1344     		add	r3, r3, r2
 386 01c8 DAB2     		uxtb	r2, r3
 387 01ca 464B     		ldr	r3, .L60+24
 388 01cc 1A70     		strb	r2, [r3]
 121:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 389              		.loc 1 121 0
 390 01ce 454B     		ldr	r3, .L60+24
 391 01d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 392 01d2 40F2FE71 		movw	r1, #2046
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 10


 393 01d6 1846     		mov	r0, r3
 394 01d8 FFF7FEFF 		bl	EEPROM_WriteByte
 122:ui.c          ****         LED_red1_Write(1);
 395              		.loc 1 122 0
 396 01dc 0120     		movs	r0, #1
 397 01de FFF7FEFF 		bl	LED_red1_Write
 123:ui.c          ****         LED_green2_Write(0);          
 398              		.loc 1 123 0
 399 01e2 0020     		movs	r0, #0
 400 01e4 FFF7FEFF 		bl	LED_green2_Write
 124:ui.c          ****         if (!editMode)
 401              		.loc 1 124 0
 402 01e8 3F4B     		ldr	r3, .L60+28
 403 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 404 01ec 002B     		cmp	r3, #0
 405 01ee 02D1     		bne	.L15
 125:ui.c          ****         {
 126:ui.c          ****             displayCurrentPresetNameAndCopedent();
 406              		.loc 1 126 0
 407 01f0 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 408 01f4 01E0     		b	.L14
 409              	.L15:
 127:ui.c          ****         }
 128:ui.c          ****         else
 129:ui.c          ****         {
 130:ui.c          ****             exitEditModeMenu();   
 410              		.loc 1 130 0
 411 01f6 FFF7FEFF 		bl	exitEditModeMenu
 412              	.L14:
 131:ui.c          ****         }
 132:ui.c          ****     }
 133:ui.c          ****     
 134:ui.c          ****     if ((!(tempButtons&(1<<6))) && (shiftUp))
 413              		.loc 1 134 0
 414 01fa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 415 01fc 03F04003 		and	r3, r3, #64
 416 0200 002B     		cmp	r3, #0
 417 0202 1DD1     		bne	.L16
 418              		.loc 1 134 0 is_stmt 0 discriminator 1
 419 0204 394B     		ldr	r3, .L60+32
 420 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 421 0208 002B     		cmp	r3, #0
 422 020a 19D0     		beq	.L16
 135:ui.c          ****     {
 136:ui.c          ****         dualSlider = !dualSlider;
 423              		.loc 1 136 0 is_stmt 1
 424 020c 384B     		ldr	r3, .L60+36
 425 020e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 426 0210 002B     		cmp	r3, #0
 427 0212 0CBF     		ite	eq
 428 0214 0123     		moveq	r3, #1
 429 0216 0023     		movne	r3, #0
 430 0218 DBB2     		uxtb	r3, r3
 431 021a 1A46     		mov	r2, r3
 432 021c 344B     		ldr	r3, .L60+36
 433 021e 1A70     		strb	r2, [r3]
 137:ui.c          ****         LED_green1_Write(dualSlider);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 11


 434              		.loc 1 137 0
 435 0220 334B     		ldr	r3, .L60+36
 436 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 437 0224 1846     		mov	r0, r3
 438 0226 FFF7FEFF 		bl	LED_green1_Write
 138:ui.c          ****         EEPROM_WriteByte(dualSlider, EEPROM_DUAL_SLIDER_OFFSET);
 439              		.loc 1 138 0
 440 022a 314B     		ldr	r3, .L60+36
 441 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 442 022e 40F2FD71 		movw	r1, #2045
 443 0232 1846     		mov	r0, r3
 444 0234 FFF7FEFF 		bl	EEPROM_WriteByte
 139:ui.c          ****         shiftUp = 0;
 445              		.loc 1 139 0
 446 0238 2C4B     		ldr	r3, .L60+32
 447 023a 0022     		movs	r2, #0
 448 023c 1A70     		strb	r2, [r3]
 449 023e 07E0     		b	.L17
 450              	.L16:
 140:ui.c          ****     }
 141:ui.c          ****     else if ((tempButtons&(1<<6)))
 451              		.loc 1 141 0
 452 0240 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 453 0242 03F04003 		and	r3, r3, #64
 454 0246 002B     		cmp	r3, #0
 455 0248 02D0     		beq	.L17
 142:ui.c          ****     {
 143:ui.c          ****         shiftUp = 1;
 456              		.loc 1 143 0
 457 024a 284B     		ldr	r3, .L60+32
 458 024c 0122     		movs	r2, #1
 459 024e 1A70     		strb	r2, [r3]
 460              	.L17:
 144:ui.c          ****     }
 145:ui.c          **** 
 146:ui.c          ****     if ((!(tempButtons&(1<<0))) && (button1Up))
 461              		.loc 1 146 0
 462 0250 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 463 0252 03F00103 		and	r3, r3, #1
 464 0256 002B     		cmp	r3, #0
 465 0258 09D1     		bne	.L18
 466              		.loc 1 146 0 is_stmt 0 discriminator 1
 467 025a 264B     		ldr	r3, .L60+40
 468 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 469 025e 002B     		cmp	r3, #0
 470 0260 05D0     		beq	.L18
 147:ui.c          ****     {
 148:ui.c          ****         leftPressed();
 471              		.loc 1 148 0 is_stmt 1
 472 0262 FFF7FEFF 		bl	leftPressed
 149:ui.c          ****         button1Up = 0;
 473              		.loc 1 149 0
 474 0266 234B     		ldr	r3, .L60+40
 475 0268 0022     		movs	r2, #0
 476 026a 1A70     		strb	r2, [r3]
 477 026c 07E0     		b	.L19
 478              	.L18:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 12


 150:ui.c          ****     }
 151:ui.c          ****     else if ((tempButtons&(1<<0)))
 479              		.loc 1 151 0
 480 026e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 481 0270 03F00103 		and	r3, r3, #1
 482 0274 002B     		cmp	r3, #0
 483 0276 02D0     		beq	.L19
 152:ui.c          ****     {
 153:ui.c          ****         button1Up = 1;
 484              		.loc 1 153 0
 485 0278 1E4B     		ldr	r3, .L60+40
 486 027a 0122     		movs	r2, #1
 487 027c 1A70     		strb	r2, [r3]
 488              	.L19:
 154:ui.c          ****     }
 155:ui.c          ****     
 156:ui.c          ****     if ((!(tempButtons&(1<<1))) && (button2Up))
 489              		.loc 1 156 0
 490 027e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 491 0280 03F00203 		and	r3, r3, #2
 492 0284 002B     		cmp	r3, #0
 493 0286 09D1     		bne	.L20
 494              		.loc 1 156 0 is_stmt 0 discriminator 1
 495 0288 1B4B     		ldr	r3, .L60+44
 496 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 028c 002B     		cmp	r3, #0
 498 028e 05D0     		beq	.L20
 157:ui.c          ****     {
 158:ui.c          ****         rightPressed();
 499              		.loc 1 158 0 is_stmt 1
 500 0290 FFF7FEFF 		bl	rightPressed
 159:ui.c          ****         button2Up = 0;
 501              		.loc 1 159 0
 502 0294 184B     		ldr	r3, .L60+44
 503 0296 0022     		movs	r2, #0
 504 0298 1A70     		strb	r2, [r3]
 505 029a 07E0     		b	.L21
 506              	.L20:
 160:ui.c          ****     }
 161:ui.c          ****     else if ((tempButtons&(1<<1)))
 507              		.loc 1 161 0
 508 029c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 509 029e 03F00203 		and	r3, r3, #2
 510 02a2 002B     		cmp	r3, #0
 511 02a4 02D0     		beq	.L21
 162:ui.c          ****     {
 163:ui.c          ****         button2Up = 1;
 512              		.loc 1 163 0
 513 02a6 144B     		ldr	r3, .L60+44
 514 02a8 0122     		movs	r2, #1
 515 02aa 1A70     		strb	r2, [r3]
 516              	.L21:
 164:ui.c          ****     }
 165:ui.c          ****     
 166:ui.c          ****     if ((!(tempButtons&(1<<2))) && (button3Up))
 517              		.loc 1 166 0
 518 02ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 13


 519 02ae 03F00403 		and	r3, r3, #4
 520 02b2 002B     		cmp	r3, #0
 521 02b4 24D1     		bne	.L22
 522              		.loc 1 166 0 is_stmt 0 discriminator 1
 523 02b6 114B     		ldr	r3, .L60+48
 524 02b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 525 02ba 002B     		cmp	r3, #0
 526 02bc 20D0     		beq	.L22
 167:ui.c          ****     {
 168:ui.c          ****         downPressed();
 527              		.loc 1 168 0 is_stmt 1
 528 02be FFF7FEFF 		bl	downPressed
 169:ui.c          ****         button3Up = 0;
 529              		.loc 1 169 0
 530 02c2 0E4B     		ldr	r3, .L60+48
 531 02c4 0022     		movs	r2, #0
 532 02c6 1A70     		strb	r2, [r3]
 533 02c8 22E0     		b	.L23
 534              	.L61:
 535 02ca 00BF     		.align	2
 536              	.L60:
 537 02cc 00000000 		.word	octave
 538 02d0 00000000 		.word	oct1Up
 539 02d4 00000000 		.word	oct4Up
 540 02d8 00000000 		.word	currentNeck
 541 02dc 00000000 		.word	necks
 542 02e0 00000000 		.word	currentCopedent
 543 02e4 00000000 		.word	neckByte
 544 02e8 00000000 		.word	editMode
 545 02ec 00000000 		.word	shiftUp
 546 02f0 00000000 		.word	dualSlider
 547 02f4 00000000 		.word	button1Up
 548 02f8 00000000 		.word	button2Up
 549 02fc 00000000 		.word	button3Up
 550              	.L22:
 170:ui.c          ****     }
 171:ui.c          ****     else if ((tempButtons&(1<<2)))
 551              		.loc 1 171 0
 552 0300 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 553 0302 03F00403 		and	r3, r3, #4
 554 0306 002B     		cmp	r3, #0
 555 0308 02D0     		beq	.L23
 172:ui.c          ****     {
 173:ui.c          ****         button3Up = 1;
 556              		.loc 1 173 0
 557 030a 6A4B     		ldr	r3, .L62
 558 030c 0122     		movs	r2, #1
 559 030e 1A70     		strb	r2, [r3]
 560              	.L23:
 174:ui.c          ****     }
 175:ui.c          ****     
 176:ui.c          ****     if ((!(tempButtons&(1<<3))) && (button4Up))
 561              		.loc 1 176 0
 562 0310 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 563 0312 03F00803 		and	r3, r3, #8
 564 0316 002B     		cmp	r3, #0
 565 0318 09D1     		bne	.L24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 14


 566              		.loc 1 176 0 is_stmt 0 discriminator 1
 567 031a 674B     		ldr	r3, .L62+4
 568 031c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 569 031e 002B     		cmp	r3, #0
 570 0320 05D0     		beq	.L24
 177:ui.c          ****     {
 178:ui.c          ****         upPressed();
 571              		.loc 1 178 0 is_stmt 1
 572 0322 FFF7FEFF 		bl	upPressed
 179:ui.c          ****         button4Up = 0;
 573              		.loc 1 179 0
 574 0326 644B     		ldr	r3, .L62+4
 575 0328 0022     		movs	r2, #0
 576 032a 1A70     		strb	r2, [r3]
 577 032c 07E0     		b	.L25
 578              	.L24:
 180:ui.c          ****     }
 181:ui.c          ****     else if ((tempButtons&(1<<3)))
 579              		.loc 1 181 0
 580 032e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 581 0330 03F00803 		and	r3, r3, #8
 582 0334 002B     		cmp	r3, #0
 583 0336 02D0     		beq	.L25
 182:ui.c          ****     {
 183:ui.c          ****         button4Up = 1;
 584              		.loc 1 183 0
 585 0338 5F4B     		ldr	r3, .L62+4
 586 033a 0122     		movs	r2, #1
 587 033c 1A70     		strb	r2, [r3]
 588              	.L25:
 184:ui.c          ****     }
 185:ui.c          ****     
 186:ui.c          ****     if ((!edit_button_Read()) && (editUp))
 589              		.loc 1 186 0
 590 033e FFF7FEFF 		bl	edit_button_Read
 591 0342 0346     		mov	r3, r0
 592 0344 002B     		cmp	r3, #0
 593 0346 1AD1     		bne	.L26
 594              		.loc 1 186 0 is_stmt 0 discriminator 1
 595 0348 5C4B     		ldr	r3, .L62+8
 596 034a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 597 034c 002B     		cmp	r3, #0
 598 034e 16D0     		beq	.L26
 187:ui.c          ****     {
 188:ui.c          ****         editMode = !editMode;
 599              		.loc 1 188 0 is_stmt 1
 600 0350 5B4B     		ldr	r3, .L62+12
 601 0352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 602 0354 002B     		cmp	r3, #0
 603 0356 0CBF     		ite	eq
 604 0358 0123     		moveq	r3, #1
 605 035a 0023     		movne	r3, #0
 606 035c DBB2     		uxtb	r3, r3
 607 035e 1A46     		mov	r2, r3
 608 0360 574B     		ldr	r3, .L62+12
 609 0362 1A70     		strb	r2, [r3]
 189:ui.c          ****         if (editMode)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 15


 610              		.loc 1 189 0
 611 0364 564B     		ldr	r3, .L62+12
 612 0366 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 613 0368 002B     		cmp	r3, #0
 614 036a 02D0     		beq	.L27
 190:ui.c          ****         {
 191:ui.c          ****             enterEditModeMenu();
 615              		.loc 1 191 0
 616 036c FFF7FEFF 		bl	enterEditModeMenu
 617 0370 01E0     		b	.L28
 618              	.L27:
 192:ui.c          ****         }
 193:ui.c          ****         else
 194:ui.c          ****         {
 195:ui.c          ****             exitEditModeMenu();
 619              		.loc 1 195 0
 620 0372 FFF7FEFF 		bl	exitEditModeMenu
 621              	.L28:
 196:ui.c          ****         }
 197:ui.c          ****         editUp = 0;
 622              		.loc 1 197 0
 623 0376 514B     		ldr	r3, .L62+8
 624 0378 0022     		movs	r2, #0
 625 037a 1A70     		strb	r2, [r3]
 626 037c 07E0     		b	.L29
 627              	.L26:
 198:ui.c          ****     }
 199:ui.c          ****     else if (edit_button_Read())
 628              		.loc 1 199 0
 629 037e FFF7FEFF 		bl	edit_button_Read
 630 0382 0346     		mov	r3, r0
 631 0384 002B     		cmp	r3, #0
 632 0386 02D0     		beq	.L29
 200:ui.c          ****     {
 201:ui.c          ****         editUp = 1;
 633              		.loc 1 201 0
 634 0388 4C4B     		ldr	r3, .L62+8
 635 038a 0122     		movs	r2, #1
 636 038c 1A70     		strb	r2, [r3]
 637              	.L29:
 202:ui.c          ****     }
 203:ui.c          ****     
 204:ui.c          ****     if ((!(tempButtons&(1<<7))) && (encoderUp))
 638              		.loc 1 204 0
 639 038e 97F91730 		ldrsb	r3, [r7, #23]
 640 0392 002B     		cmp	r3, #0
 641 0394 03DB     		blt	.L30
 642              		.loc 1 204 0 is_stmt 0 discriminator 1
 643 0396 4B4B     		ldr	r3, .L62+16
 644 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 645 039a 002B     		cmp	r3, #0
 646 039c 06D1     		bne	.L31
 647              	.L30:
 205:ui.c          ****     {
 206:ui.c          ****         
 207:ui.c          ****     }
 208:ui.c          ****     else if ((tempButtons&(1<<7)))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 16


 648              		.loc 1 208 0 is_stmt 1
 649 039e 97F91730 		ldrsb	r3, [r7, #23]
 650 03a2 002B     		cmp	r3, #0
 651 03a4 02DA     		bge	.L31
 209:ui.c          ****     {
 210:ui.c          ****         encoderUp = 1;
 652              		.loc 1 210 0
 653 03a6 474B     		ldr	r3, .L62+16
 654 03a8 0122     		movs	r2, #1
 655 03aa 1A70     		strb	r2, [r3]
 656              	.L31:
 211:ui.c          ****     }
 212:ui.c          ****     
 213:ui.c          ****     prevOctave = octave;
 657              		.loc 1 213 0
 658 03ac 464B     		ldr	r3, .L62+20
 659 03ae 1B68     		ldr	r3, [r3]
 660 03b0 464A     		ldr	r2, .L62+24
 661 03b2 1360     		str	r3, [r2]
 214:ui.c          ****     if (editMode)
 662              		.loc 1 214 0
 663 03b4 424B     		ldr	r3, .L62+12
 664 03b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 665 03b8 002B     		cmp	r3, #0
 666 03ba 00F0EE82 		beq	.L59
 215:ui.c          ****     {
 216:ui.c          ****         if (encoderWatch)
 667              		.loc 1 216 0
 668 03be 444B     		ldr	r3, .L62+28
 669 03c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 670 03c2 002B     		cmp	r3, #0
 671 03c4 00F0E982 		beq	.L59
 672              	.LBB2:
 217:ui.c          ****         {
 218:ui.c          ****             int8_t currentEncoderVal = Decoder_1_GetPosition();
 673              		.loc 1 218 0
 674 03c8 FFF7FEFF 		bl	Decoder_1_GetPosition
 675 03cc 0346     		mov	r3, r0
 676 03ce BB75     		strb	r3, [r7, #22]
 219:ui.c          ****             if (menuPosition[0][0] == TransposeMenu) //editing transpose
 677              		.loc 1 219 0
 678 03d0 404B     		ldr	r3, .L62+32
 679 03d2 93F90030 		ldrsb	r3, [r3]
 680 03d6 052B     		cmp	r3, #5
 681 03d8 40F02F81 		bne	.L33
 220:ui.c          ****             {
 221:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 682              		.loc 1 221 0
 683 03dc 3E4B     		ldr	r3, .L62+36
 684 03de 93F90030 		ldrsb	r3, [r3]
 685 03e2 97F91620 		ldrsb	r2, [r7, #22]
 686 03e6 9A42     		cmp	r2, r3
 687 03e8 00F02781 		beq	.L33
 688              	.LBB3:
 222:ui.c          ****                 {
 223:ui.c          ****                     OLEDtextColor(1, 0);
 689              		.loc 1 223 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 17


 690 03ec 0021     		movs	r1, #0
 691 03ee 0120     		movs	r0, #1
 692 03f0 FFF7FEFF 		bl	OLEDtextColor
 224:ui.c          ****                     OLEDclearLine(ThirdLine);
 693              		.loc 1 224 0
 694 03f4 0220     		movs	r0, #2
 695 03f6 FFF7FEFF 		bl	OLEDclearLine
 225:ui.c          ****                     OLEDclearLine(FourthLine);
 696              		.loc 1 225 0
 697 03fa 0320     		movs	r0, #3
 698 03fc FFF7FEFF 		bl	OLEDclearLine
 226:ui.c          ****                     float theMultiplier = 1.0f;
 699              		.loc 1 226 0
 700 0400 4FF07E53 		mov	r3, #1065353216
 701 0404 FB61     		str	r3, [r7, #28]	@ float
 227:ui.c          ****                     if (semitonesOrCents == 1)
 702              		.loc 1 227 0
 703 0406 354B     		ldr	r3, .L62+40
 704 0408 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 705 040a 012B     		cmp	r3, #1
 706 040c 01D1     		bne	.L34
 228:ui.c          ****                     {
 229:ui.c          ****                         theMultiplier = 0.01f;
 707              		.loc 1 229 0
 708 040e 344B     		ldr	r3, .L62+44
 709 0410 FB61     		str	r3, [r7, #28]	@ float
 710              	.L34:
 230:ui.c          ****                     }
 231:ui.c          ****                     myGFX_setFont(1);
 711              		.loc 1 231 0
 712 0412 0120     		movs	r0, #1
 713 0414 FFF7FEFF 		bl	myGFX_setFont
 232:ui.c          ****                     transposeFloat = transposeFloat - (((float)Decoder_1_GetPosition()) * theMultip
 714              		.loc 1 232 0
 715 0418 324B     		ldr	r3, .L62+48
 716 041a 1C68     		ldr	r4, [r3]	@ float
 717 041c FFF7FEFF 		bl	Decoder_1_GetPosition
 718 0420 0346     		mov	r3, r0
 719 0422 1846     		mov	r0, r3
 720 0424 FFF7FEFF 		bl	__aeabi_i2f
 721 0428 0346     		mov	r3, r0
 722 042a F969     		ldr	r1, [r7, #28]	@ float
 723 042c 1846     		mov	r0, r3
 724 042e FFF7FEFF 		bl	__aeabi_fmul
 725 0432 0346     		mov	r3, r0
 726 0434 1946     		mov	r1, r3
 727 0436 2046     		mov	r0, r4
 728 0438 FFF7FEFF 		bl	__aeabi_fsub
 729 043c 0346     		mov	r3, r0
 730 043e 1A46     		mov	r2, r3
 731 0440 284B     		ldr	r3, .L62+48
 732 0442 1A60     		str	r2, [r3]	@ float
 233:ui.c          ****                     Decoder_1_SetPosition(0);
 733              		.loc 1 233 0
 734 0444 0020     		movs	r0, #0
 735 0446 FFF7FEFF 		bl	Decoder_1_SetPosition
 234:ui.c          ****                     if (transposeFloat < -12.0)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 18


 736              		.loc 1 234 0
 737 044a 264B     		ldr	r3, .L62+48
 738 044c 1B68     		ldr	r3, [r3]	@ float
 739 044e 2649     		ldr	r1, .L62+52
 740 0450 1846     		mov	r0, r3
 741 0452 FFF7FEFF 		bl	__aeabi_fcmplt
 742 0456 0346     		mov	r3, r0
 743 0458 002B     		cmp	r3, #0
 744 045a 03D0     		beq	.L57
 235:ui.c          ****                     {
 236:ui.c          ****                         transposeFloat = -12.0;
 745              		.loc 1 236 0
 746 045c 214B     		ldr	r3, .L62+48
 747 045e 224A     		ldr	r2, .L62+52
 748 0460 1A60     		str	r2, [r3]	@ float
 749 0462 0BE0     		b	.L37
 750              	.L57:
 237:ui.c          ****                     }
 238:ui.c          ****                     else if (transposeFloat > 12.0)
 751              		.loc 1 238 0
 752 0464 1F4B     		ldr	r3, .L62+48
 753 0466 1B68     		ldr	r3, [r3]	@ float
 754 0468 2049     		ldr	r1, .L62+56
 755 046a 1846     		mov	r0, r3
 756 046c FFF7FEFF 		bl	__aeabi_fcmpgt
 757 0470 0346     		mov	r3, r0
 758 0472 002B     		cmp	r3, #0
 759 0474 02D0     		beq	.L37
 239:ui.c          ****                     {
 240:ui.c          ****                         transposeFloat = 12.0;
 760              		.loc 1 240 0
 761 0476 1B4B     		ldr	r3, .L62+48
 762 0478 1C4A     		ldr	r2, .L62+56
 763 047a 1A60     		str	r2, [r3]	@ float
 764              	.L37:
 241:ui.c          ****                     }
 242:ui.c          ****                     float absTransposeFloat = transposeFloat;
 765              		.loc 1 242 0
 766 047c 194B     		ldr	r3, .L62+48
 767 047e 1B68     		ldr	r3, [r3]	@ float
 768 0480 BB61     		str	r3, [r7, #24]	@ float
 243:ui.c          ****                     GFXsetCursor(&theGFX, 20,53);
 769              		.loc 1 243 0
 770 0482 3522     		movs	r2, #53
 771 0484 1421     		movs	r1, #20
 772 0486 1A48     		ldr	r0, .L62+60
 773 0488 FFF7FEFF 		bl	GFXsetCursor
 244:ui.c          ****                     if (transposeFloat < 0.0f)
 774              		.loc 1 244 0
 775 048c 154B     		ldr	r3, .L62+48
 776 048e 1B68     		ldr	r3, [r3]	@ float
 777 0490 4FF00001 		mov	r1, #0
 778 0494 1846     		mov	r0, r3
 779 0496 FFF7FEFF 		bl	__aeabi_fcmplt
 780 049a 0346     		mov	r3, r0
 781 049c 002B     		cmp	r3, #0
 782 049e 29D0     		beq	.L58
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 19


 245:ui.c          ****                     {
 246:ui.c          ****                         GFXwrite(&theGFX, 45);
 783              		.loc 1 246 0
 784 04a0 2D21     		movs	r1, #45
 785 04a2 1348     		ldr	r0, .L62+60
 786 04a4 FFF7FEFF 		bl	GFXwrite
 247:ui.c          ****                         absTransposeFloat = -absTransposeFloat;
 787              		.loc 1 247 0
 788 04a8 BB69     		ldr	r3, [r7, #24]
 789 04aa 83F00043 		eor	r3, r3, #-2147483648
 790 04ae BB61     		str	r3, [r7, #24]	@ float
 791 04b0 24E0     		b	.L41
 792              	.L63:
 793 04b2 00BF     		.align	2
 794              	.L62:
 795 04b4 00000000 		.word	button3Up
 796 04b8 00000000 		.word	button4Up
 797 04bc 00000000 		.word	editUp
 798 04c0 00000000 		.word	editMode
 799 04c4 00000000 		.word	encoderUp
 800 04c8 00000000 		.word	octave
 801 04cc 00000000 		.word	prevOctave
 802 04d0 00000000 		.word	encoderWatch
 803 04d4 00000000 		.word	menuPosition
 804 04d8 00000000 		.word	prevEncoderVal
 805 04dc 00000000 		.word	semitonesOrCents
 806 04e0 0AD7233C 		.word	1008981770
 807 04e4 00000000 		.word	transposeFloat
 808 04e8 000040C1 		.word	-1052770304
 809 04ec 00004041 		.word	1094713344
 810 04f0 00000000 		.word	theGFX
 811              	.L58:
 248:ui.c          ****                     }
 249:ui.c          ****                     else
 250:ui.c          ****                     {
 251:ui.c          ****                         GFXwrite(&theGFX, 32);
 812              		.loc 1 251 0
 813 04f4 2021     		movs	r1, #32
 814 04f6 6D48     		ldr	r0, .L64
 815 04f8 FFF7FEFF 		bl	GFXwrite
 816              	.L41:
 252:ui.c          ****                     }
 253:ui.c          ****                     if (!semitonesOrCents)
 817              		.loc 1 253 0
 818 04fc 6C4B     		ldr	r3, .L64+4
 819 04fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 820 0500 002B     		cmp	r3, #0
 821 0502 0ED1     		bne	.L42
 254:ui.c          ****                     {
 255:ui.c          ****                         OLEDtextColor(0, 1);
 822              		.loc 1 255 0
 823 0504 0121     		movs	r1, #1
 824 0506 0020     		movs	r0, #0
 825 0508 FFF7FEFF 		bl	OLEDtextColor
 256:ui.c          ****                         GFXfillRect(&theGFX, 32, 34, 30, 25, theGFX.textbgcolor);
 826              		.loc 1 256 0
 827 050c 674B     		ldr	r3, .L64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 20


 828 050e 5B8A     		ldrh	r3, [r3, #18]
 829 0510 0193     		str	r3, [sp, #4]
 830 0512 1923     		movs	r3, #25
 831 0514 0093     		str	r3, [sp]
 832 0516 1E23     		movs	r3, #30
 833 0518 2222     		movs	r2, #34
 834 051a 2021     		movs	r1, #32
 835 051c 6348     		ldr	r0, .L64
 836 051e FFF7FEFF 		bl	GFXfillRect
 837              	.L42:
 257:ui.c          ****                     }
 258:ui.c          **** 
 259:ui.c          ****                     uint8_t currentChar = ((uint8_t)(absTransposeFloat * 0.1f));  
 838              		.loc 1 259 0
 839 0522 6449     		ldr	r1, .L64+8
 840 0524 B869     		ldr	r0, [r7, #24]	@ float
 841 0526 FFF7FEFF 		bl	__aeabi_fmul
 842 052a 0346     		mov	r3, r0
 843 052c 1846     		mov	r0, r3
 844 052e FFF7FEFF 		bl	__aeabi_f2uiz
 845 0532 0346     		mov	r3, r0
 846 0534 7B75     		strb	r3, [r7, #21]
 260:ui.c          ****                     absTransposeFloat -= currentChar * 10.0f;
 847              		.loc 1 260 0
 848 0536 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 849 0538 1846     		mov	r0, r3
 850 053a FFF7FEFF 		bl	__aeabi_i2f
 851 053e 0346     		mov	r3, r0
 852 0540 5D49     		ldr	r1, .L64+12
 853 0542 1846     		mov	r0, r3
 854 0544 FFF7FEFF 		bl	__aeabi_fmul
 855 0548 0346     		mov	r3, r0
 856 054a 1946     		mov	r1, r3
 857 054c B869     		ldr	r0, [r7, #24]	@ float
 858 054e FFF7FEFF 		bl	__aeabi_fsub
 859 0552 0346     		mov	r3, r0
 860 0554 BB61     		str	r3, [r7, #24]	@ float
 261:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 861              		.loc 1 261 0
 862 0556 7B7D     		ldrb	r3, [r7, #21]
 863 0558 3033     		adds	r3, r3, #48
 864 055a DBB2     		uxtb	r3, r3
 865 055c 1946     		mov	r1, r3
 866 055e 5348     		ldr	r0, .L64
 867 0560 FFF7FEFF 		bl	GFXwrite
 262:ui.c          ****                     currentChar = ((uint8_t)absTransposeFloat);    
 868              		.loc 1 262 0
 869 0564 B869     		ldr	r0, [r7, #24]	@ float
 870 0566 FFF7FEFF 		bl	__aeabi_f2uiz
 871 056a 0346     		mov	r3, r0
 872 056c 7B75     		strb	r3, [r7, #21]
 263:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 873              		.loc 1 263 0
 874 056e 7B7D     		ldrb	r3, [r7, #21]
 875 0570 3033     		adds	r3, r3, #48
 876 0572 DBB2     		uxtb	r3, r3
 877 0574 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 21


 878 0576 4D48     		ldr	r0, .L64
 879 0578 FFF7FEFF 		bl	GFXwrite
 264:ui.c          ****                     OLEDtextColor(1, 0);
 880              		.loc 1 264 0
 881 057c 0021     		movs	r1, #0
 882 057e 0120     		movs	r0, #1
 883 0580 FFF7FEFF 		bl	OLEDtextColor
 265:ui.c          **** 
 266:ui.c          ****                     GFXwrite(&theGFX, 46); //decimal point
 884              		.loc 1 266 0
 885 0584 2E21     		movs	r1, #46
 886 0586 4948     		ldr	r0, .L64
 887 0588 FFF7FEFF 		bl	GFXwrite
 267:ui.c          ****                     if (semitonesOrCents)
 888              		.loc 1 267 0
 889 058c 484B     		ldr	r3, .L64+4
 890 058e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 891 0590 002B     		cmp	r3, #0
 892 0592 0ED0     		beq	.L43
 268:ui.c          ****                     {
 269:ui.c          ****                         OLEDtextColor(0, 1);
 893              		.loc 1 269 0
 894 0594 0121     		movs	r1, #1
 895 0596 0020     		movs	r0, #0
 896 0598 FFF7FEFF 		bl	OLEDtextColor
 270:ui.c          ****                         GFXfillRect(&theGFX, 70, 34, 30, 25, theGFX.textbgcolor);
 897              		.loc 1 270 0
 898 059c 434B     		ldr	r3, .L64
 899 059e 5B8A     		ldrh	r3, [r3, #18]
 900 05a0 0193     		str	r3, [sp, #4]
 901 05a2 1923     		movs	r3, #25
 902 05a4 0093     		str	r3, [sp]
 903 05a6 1E23     		movs	r3, #30
 904 05a8 2222     		movs	r2, #34
 905 05aa 4621     		movs	r1, #70
 906 05ac 3F48     		ldr	r0, .L64
 907 05ae FFF7FEFF 		bl	GFXfillRect
 908              	.L43:
 271:ui.c          ****                     }
 272:ui.c          ****                     absTransposeFloat -= currentChar;
 909              		.loc 1 272 0
 910 05b2 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 911 05b4 1846     		mov	r0, r3
 912 05b6 FFF7FEFF 		bl	__aeabi_i2f
 913 05ba 0346     		mov	r3, r0
 914 05bc 1946     		mov	r1, r3
 915 05be B869     		ldr	r0, [r7, #24]	@ float
 916 05c0 FFF7FEFF 		bl	__aeabi_fsub
 917 05c4 0346     		mov	r3, r0
 918 05c6 BB61     		str	r3, [r7, #24]	@ float
 273:ui.c          ****                     currentChar = ((uint8_t)(absTransposeFloat * 10.0f));    
 919              		.loc 1 273 0
 920 05c8 3B49     		ldr	r1, .L64+12
 921 05ca B869     		ldr	r0, [r7, #24]	@ float
 922 05cc FFF7FEFF 		bl	__aeabi_fmul
 923 05d0 0346     		mov	r3, r0
 924 05d2 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 22


 925 05d4 FFF7FEFF 		bl	__aeabi_f2uiz
 926 05d8 0346     		mov	r3, r0
 927 05da 7B75     		strb	r3, [r7, #21]
 274:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 928              		.loc 1 274 0
 929 05dc 7B7D     		ldrb	r3, [r7, #21]
 930 05de 3033     		adds	r3, r3, #48
 931 05e0 DBB2     		uxtb	r3, r3
 932 05e2 1946     		mov	r1, r3
 933 05e4 3148     		ldr	r0, .L64
 934 05e6 FFF7FEFF 		bl	GFXwrite
 275:ui.c          ****                     absTransposeFloat -= (currentChar * 0.1f);
 935              		.loc 1 275 0
 936 05ea 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 937 05ec 1846     		mov	r0, r3
 938 05ee FFF7FEFF 		bl	__aeabi_i2f
 939 05f2 0346     		mov	r3, r0
 940 05f4 2F49     		ldr	r1, .L64+8
 941 05f6 1846     		mov	r0, r3
 942 05f8 FFF7FEFF 		bl	__aeabi_fmul
 943 05fc 0346     		mov	r3, r0
 944 05fe 1946     		mov	r1, r3
 945 0600 B869     		ldr	r0, [r7, #24]	@ float
 946 0602 FFF7FEFF 		bl	__aeabi_fsub
 947 0606 0346     		mov	r3, r0
 948 0608 BB61     		str	r3, [r7, #24]	@ float
 276:ui.c          ****                     currentChar = ((uint8_t)(absTransposeFloat * 100.0f));    
 949              		.loc 1 276 0
 950 060a 2C49     		ldr	r1, .L64+16
 951 060c B869     		ldr	r0, [r7, #24]	@ float
 952 060e FFF7FEFF 		bl	__aeabi_fmul
 953 0612 0346     		mov	r3, r0
 954 0614 1846     		mov	r0, r3
 955 0616 FFF7FEFF 		bl	__aeabi_f2uiz
 956 061a 0346     		mov	r3, r0
 957 061c 7B75     		strb	r3, [r7, #21]
 277:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 958              		.loc 1 277 0
 959 061e 7B7D     		ldrb	r3, [r7, #21]
 960 0620 3033     		adds	r3, r3, #48
 961 0622 DBB2     		uxtb	r3, r3
 962 0624 1946     		mov	r1, r3
 963 0626 2148     		ldr	r0, .L64
 964 0628 FFF7FEFF 		bl	GFXwrite
 278:ui.c          ****                     OLEDtextColor(1, 0);
 965              		.loc 1 278 0
 966 062c 0021     		movs	r1, #0
 967 062e 0120     		movs	r0, #1
 968 0630 FFF7FEFF 		bl	OLEDtextColor
 279:ui.c          ****                     mainOLEDWaitingToSend = 1;
 969              		.loc 1 279 0
 970 0634 224B     		ldr	r3, .L64+20
 971 0636 0122     		movs	r2, #1
 972 0638 1A70     		strb	r2, [r3]
 973              	.L33:
 974              	.LBE3:
 280:ui.c          ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 23


 281:ui.c          ****             }
 282:ui.c          ****                 
 283:ui.c          ****             if (menuPosition[0][0] == DeadzonesMenu) //editing deadzones
 975              		.loc 1 283 0
 976 063a 224B     		ldr	r3, .L64+24
 977 063c 93F90030 		ldrsb	r3, [r3]
 978 0640 072B     		cmp	r3, #7
 979 0642 40F0D580 		bne	.L44
 284:ui.c          ****             {
 285:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 980              		.loc 1 285 0
 981 0646 204B     		ldr	r3, .L64+28
 982 0648 93F90030 		ldrsb	r3, [r3]
 983 064c 97F91620 		ldrsb	r2, [r7, #22]
 984 0650 9A42     		cmp	r2, r3
 985 0652 00F0CD80 		beq	.L44
 986              	.LBB4:
 286:ui.c          ****                 {
 287:ui.c          ****                     OLEDtextColor(1, 0);
 987              		.loc 1 287 0
 988 0656 0021     		movs	r1, #0
 989 0658 0120     		movs	r0, #1
 990 065a FFF7FEFF 		bl	OLEDtextColor
 288:ui.c          ****                     OLEDclearLine(ThirdLine);
 991              		.loc 1 288 0
 992 065e 0220     		movs	r0, #2
 993 0660 FFF7FEFF 		bl	OLEDclearLine
 289:ui.c          ****                     OLEDclearLine(FourthLine);
 994              		.loc 1 289 0
 995 0664 0320     		movs	r0, #3
 996 0666 FFF7FEFF 		bl	OLEDclearLine
 290:ui.c          ****                     
 291:ui.c          ****                     myGFX_setFont(1);
 997              		.loc 1 291 0
 998 066a 0120     		movs	r0, #1
 999 066c FFF7FEFF 		bl	myGFX_setFont
 292:ui.c          ****                     int16_t deadZoneTemp = deadZone;
 1000              		.loc 1 292 0
 1001 0670 164B     		ldr	r3, .L64+32
 1002 0672 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1003 0674 7B82     		strh	r3, [r7, #18]	@ movhi
 293:ui.c          ****                     
 294:ui.c          ****                     deadZoneTemp = deadZoneTemp - Decoder_1_GetPosition();
 1004              		.loc 1 294 0
 1005 0676 7C8A     		ldrh	r4, [r7, #18]
 1006 0678 FFF7FEFF 		bl	Decoder_1_GetPosition
 1007 067c 0346     		mov	r3, r0
 1008 067e 9BB2     		uxth	r3, r3
 1009 0680 E31A     		subs	r3, r4, r3
 1010 0682 9BB2     		uxth	r3, r3
 1011 0684 7B82     		strh	r3, [r7, #18]	@ movhi
 295:ui.c          ****                     Decoder_1_SetPosition(0);
 1012              		.loc 1 295 0
 1013 0686 0020     		movs	r0, #0
 1014 0688 FFF7FEFF 		bl	Decoder_1_SetPosition
 296:ui.c          ****                     if (deadZoneTemp < 0)
 1015              		.loc 1 296 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 24


 1016 068c B7F91230 		ldrsh	r3, [r7, #18]
 1017 0690 002B     		cmp	r3, #0
 1018 0692 03DA     		bge	.L45
 297:ui.c          ****                     {
 298:ui.c          ****                         deadZone = 0;
 1019              		.loc 1 298 0
 1020 0694 0D4B     		ldr	r3, .L64+32
 1021 0696 0022     		movs	r2, #0
 1022 0698 1A70     		strb	r2, [r3]
 1023 069a 1DE0     		b	.L46
 1024              	.L45:
 299:ui.c          ****                     }
 300:ui.c          ****                     else if (deadZoneTemp > 100)
 1025              		.loc 1 300 0
 1026 069c B7F91230 		ldrsh	r3, [r7, #18]
 1027 06a0 642B     		cmp	r3, #100
 1028 06a2 15DD     		ble	.L47
 301:ui.c          ****                     {
 302:ui.c          ****                         deadZone = 100;
 1029              		.loc 1 302 0
 1030 06a4 094B     		ldr	r3, .L64+32
 1031 06a6 6422     		movs	r2, #100
 1032 06a8 1A70     		strb	r2, [r3]
 1033 06aa 15E0     		b	.L46
 1034              	.L65:
 1035              		.align	2
 1036              	.L64:
 1037 06ac 00000000 		.word	theGFX
 1038 06b0 00000000 		.word	semitonesOrCents
 1039 06b4 CDCCCC3D 		.word	1036831949
 1040 06b8 00002041 		.word	1092616192
 1041 06bc 0000C842 		.word	1120403456
 1042 06c0 00000000 		.word	mainOLEDWaitingToSend
 1043 06c4 00000000 		.word	menuPosition
 1044 06c8 00000000 		.word	prevEncoderVal
 1045 06cc 00000000 		.word	deadZone
 1046              	.L47:
 303:ui.c          ****                     }
 304:ui.c          ****                     else 
 305:ui.c          ****                     {
 306:ui.c          ****                         deadZone = deadZoneTemp;
 1047              		.loc 1 306 0
 1048 06d0 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1049 06d2 DAB2     		uxtb	r2, r3
 1050 06d4 B34B     		ldr	r3, .L66
 1051 06d6 1A70     		strb	r2, [r3]
 1052              	.L46:
 307:ui.c          ****                     }
 308:ui.c          ****                     calculatePedalRatios();
 1053              		.loc 1 308 0
 1054 06d8 FFF7FEFF 		bl	calculatePedalRatios
 309:ui.c          ****                     GFXsetCursor(&theGFX, 30,53);
 1055              		.loc 1 309 0
 1056 06dc 3522     		movs	r2, #53
 1057 06de 1E21     		movs	r1, #30
 1058 06e0 B148     		ldr	r0, .L66+4
 1059 06e2 FFF7FEFF 		bl	GFXsetCursor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 25


 310:ui.c          ****                     
 311:ui.c          ****                     float deadZoneRepresentation = (float)(deadZone) * 0.2f;
 1060              		.loc 1 311 0
 1061 06e6 AF4B     		ldr	r3, .L66
 1062 06e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1063 06ea 1846     		mov	r0, r3
 1064 06ec FFF7FEFF 		bl	__aeabi_ui2f
 1065 06f0 0346     		mov	r3, r0
 1066 06f2 AE49     		ldr	r1, .L66+8
 1067 06f4 1846     		mov	r0, r3
 1068 06f6 FFF7FEFF 		bl	__aeabi_fmul
 1069 06fa 0346     		mov	r3, r0
 1070 06fc FB60     		str	r3, [r7, #12]	@ float
 312:ui.c          ****                     
 313:ui.c          ****                     uint8_t currentChar = ((uint8_t)(deadZoneRepresentation * 0.1f));  
 1071              		.loc 1 313 0
 1072 06fe AC49     		ldr	r1, .L66+12
 1073 0700 F868     		ldr	r0, [r7, #12]	@ float
 1074 0702 FFF7FEFF 		bl	__aeabi_fmul
 1075 0706 0346     		mov	r3, r0
 1076 0708 1846     		mov	r0, r3
 1077 070a FFF7FEFF 		bl	__aeabi_f2uiz
 1078 070e 0346     		mov	r3, r0
 1079 0710 FB72     		strb	r3, [r7, #11]
 314:ui.c          ****                     deadZoneRepresentation -= currentChar * 10.0f;
 1080              		.loc 1 314 0
 1081 0712 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1082 0714 1846     		mov	r0, r3
 1083 0716 FFF7FEFF 		bl	__aeabi_i2f
 1084 071a 0346     		mov	r3, r0
 1085 071c A549     		ldr	r1, .L66+16
 1086 071e 1846     		mov	r0, r3
 1087 0720 FFF7FEFF 		bl	__aeabi_fmul
 1088 0724 0346     		mov	r3, r0
 1089 0726 1946     		mov	r1, r3
 1090 0728 F868     		ldr	r0, [r7, #12]	@ float
 1091 072a FFF7FEFF 		bl	__aeabi_fsub
 1092 072e 0346     		mov	r3, r0
 1093 0730 FB60     		str	r3, [r7, #12]	@ float
 315:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1094              		.loc 1 315 0
 1095 0732 FB7A     		ldrb	r3, [r7, #11]
 1096 0734 3033     		adds	r3, r3, #48
 1097 0736 DBB2     		uxtb	r3, r3
 1098 0738 1946     		mov	r1, r3
 1099 073a 9B48     		ldr	r0, .L66+4
 1100 073c FFF7FEFF 		bl	GFXwrite
 316:ui.c          ****                     currentChar = ((uint8_t)deadZoneRepresentation);    
 1101              		.loc 1 316 0
 1102 0740 F868     		ldr	r0, [r7, #12]	@ float
 1103 0742 FFF7FEFF 		bl	__aeabi_f2uiz
 1104 0746 0346     		mov	r3, r0
 1105 0748 FB72     		strb	r3, [r7, #11]
 317:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1106              		.loc 1 317 0
 1107 074a FB7A     		ldrb	r3, [r7, #11]
 1108 074c 3033     		adds	r3, r3, #48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 26


 1109 074e DBB2     		uxtb	r3, r3
 1110 0750 1946     		mov	r1, r3
 1111 0752 9548     		ldr	r0, .L66+4
 1112 0754 FFF7FEFF 		bl	GFXwrite
 318:ui.c          **** 
 319:ui.c          **** 
 320:ui.c          ****                     GFXwrite(&theGFX, 46); //decimal point
 1113              		.loc 1 320 0
 1114 0758 2E21     		movs	r1, #46
 1115 075a 9348     		ldr	r0, .L66+4
 1116 075c FFF7FEFF 		bl	GFXwrite
 321:ui.c          ****                     
 322:ui.c          ****                     deadZoneRepresentation -= currentChar;
 1117              		.loc 1 322 0
 1118 0760 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1119 0762 1846     		mov	r0, r3
 1120 0764 FFF7FEFF 		bl	__aeabi_i2f
 1121 0768 0346     		mov	r3, r0
 1122 076a 1946     		mov	r1, r3
 1123 076c F868     		ldr	r0, [r7, #12]	@ float
 1124 076e FFF7FEFF 		bl	__aeabi_fsub
 1125 0772 0346     		mov	r3, r0
 1126 0774 FB60     		str	r3, [r7, #12]	@ float
 323:ui.c          ****                     currentChar = ((uint8_t)(deadZoneRepresentation * 10.0f));    
 1127              		.loc 1 323 0
 1128 0776 8F49     		ldr	r1, .L66+16
 1129 0778 F868     		ldr	r0, [r7, #12]	@ float
 1130 077a FFF7FEFF 		bl	__aeabi_fmul
 1131 077e 0346     		mov	r3, r0
 1132 0780 1846     		mov	r0, r3
 1133 0782 FFF7FEFF 		bl	__aeabi_f2uiz
 1134 0786 0346     		mov	r3, r0
 1135 0788 FB72     		strb	r3, [r7, #11]
 324:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1136              		.loc 1 324 0
 1137 078a FB7A     		ldrb	r3, [r7, #11]
 1138 078c 3033     		adds	r3, r3, #48
 1139 078e DBB2     		uxtb	r3, r3
 1140 0790 1946     		mov	r1, r3
 1141 0792 8548     		ldr	r0, .L66+4
 1142 0794 FFF7FEFF 		bl	GFXwrite
 325:ui.c          ****                     deadZoneRepresentation -= (currentChar * 0.1f);
 1143              		.loc 1 325 0
 1144 0798 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1145 079a 1846     		mov	r0, r3
 1146 079c FFF7FEFF 		bl	__aeabi_i2f
 1147 07a0 0346     		mov	r3, r0
 1148 07a2 8349     		ldr	r1, .L66+12
 1149 07a4 1846     		mov	r0, r3
 1150 07a6 FFF7FEFF 		bl	__aeabi_fmul
 1151 07aa 0346     		mov	r3, r0
 1152 07ac 1946     		mov	r1, r3
 1153 07ae F868     		ldr	r0, [r7, #12]	@ float
 1154 07b0 FFF7FEFF 		bl	__aeabi_fsub
 1155 07b4 0346     		mov	r3, r0
 1156 07b6 FB60     		str	r3, [r7, #12]	@ float
 326:ui.c          ****                     currentChar = ((uint8_t)(deadZoneRepresentation*100.0f));    
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 27


 1157              		.loc 1 326 0
 1158 07b8 7F49     		ldr	r1, .L66+20
 1159 07ba F868     		ldr	r0, [r7, #12]	@ float
 1160 07bc FFF7FEFF 		bl	__aeabi_fmul
 1161 07c0 0346     		mov	r3, r0
 1162 07c2 1846     		mov	r0, r3
 1163 07c4 FFF7FEFF 		bl	__aeabi_f2uiz
 1164 07c8 0346     		mov	r3, r0
 1165 07ca FB72     		strb	r3, [r7, #11]
 327:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1166              		.loc 1 327 0
 1167 07cc FB7A     		ldrb	r3, [r7, #11]
 1168 07ce 3033     		adds	r3, r3, #48
 1169 07d0 DBB2     		uxtb	r3, r3
 1170 07d2 1946     		mov	r1, r3
 1171 07d4 7448     		ldr	r0, .L66+4
 1172 07d6 FFF7FEFF 		bl	GFXwrite
 328:ui.c          ****                     GFXwrite(&theGFX, 37); //percent symbol
 1173              		.loc 1 328 0
 1174 07da 2521     		movs	r1, #37
 1175 07dc 7248     		ldr	r0, .L66+4
 1176 07de FFF7FEFF 		bl	GFXwrite
 329:ui.c          ****                     OLEDtextColor(1, 0);
 1177              		.loc 1 329 0
 1178 07e2 0021     		movs	r1, #0
 1179 07e4 0120     		movs	r0, #1
 1180 07e6 FFF7FEFF 		bl	OLEDtextColor
 330:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1181              		.loc 1 330 0
 1182 07ea 744B     		ldr	r3, .L66+24
 1183 07ec 0122     		movs	r2, #1
 1184 07ee 1A70     		strb	r2, [r3]
 1185              	.L44:
 1186              	.LBE4:
 331:ui.c          ****                 }
 332:ui.c          ****             }
 333:ui.c          ****             if (menuPosition[0][0] == SliderRepMenu) //editing string/slider representation
 1187              		.loc 1 333 0
 1188 07f0 734B     		ldr	r3, .L66+28
 1189 07f2 93F90030 		ldrsb	r3, [r3]
 1190 07f6 082B     		cmp	r3, #8
 1191 07f8 40F0CC80 		bne	.L48
 334:ui.c          ****             {
 335:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1192              		.loc 1 335 0
 1193 07fc 714B     		ldr	r3, .L66+32
 1194 07fe 93F90030 		ldrsb	r3, [r3]
 1195 0802 97F91620 		ldrsb	r2, [r7, #22]
 1196 0806 9A42     		cmp	r2, r3
 1197 0808 00F0C480 		beq	.L48
 1198              	.LBB5:
 336:ui.c          ****                 {
 337:ui.c          ****                     OLEDtextColor(1, 0);
 1199              		.loc 1 337 0
 1200 080c 0021     		movs	r1, #0
 1201 080e 0120     		movs	r0, #1
 1202 0810 FFF7FEFF 		bl	OLEDtextColor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 28


 338:ui.c          **** 
 339:ui.c          ****                     myGFX_setFont(2);
 1203              		.loc 1 339 0
 1204 0814 0220     		movs	r0, #2
 1205 0816 FFF7FEFF 		bl	myGFX_setFont
 340:ui.c          **** 
 341:ui.c          ****                     int16_t sliderTemp = stringRepresentation[editingSliderRepString];
 1206              		.loc 1 341 0
 1207 081a 6B4B     		ldr	r3, .L66+36
 1208 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1209 081e 1A46     		mov	r2, r3
 1210 0820 6A4B     		ldr	r3, .L66+40
 1211 0822 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1212 0824 3B81     		strh	r3, [r7, #8]	@ movhi
 342:ui.c          ****                     sliderTemp = sliderTemp - Decoder_1_GetPosition();
 1213              		.loc 1 342 0
 1214 0826 3C89     		ldrh	r4, [r7, #8]
 1215 0828 FFF7FEFF 		bl	Decoder_1_GetPosition
 1216 082c 0346     		mov	r3, r0
 1217 082e 9BB2     		uxth	r3, r3
 1218 0830 E31A     		subs	r3, r4, r3
 1219 0832 9BB2     		uxth	r3, r3
 1220 0834 3B81     		strh	r3, [r7, #8]	@ movhi
 343:ui.c          ****                     Decoder_1_SetPosition(0);
 1221              		.loc 1 343 0
 1222 0836 0020     		movs	r0, #0
 1223 0838 FFF7FEFF 		bl	Decoder_1_SetPosition
 344:ui.c          ****                     if (sliderTemp < 0)
 1224              		.loc 1 344 0
 1225 083c B7F90830 		ldrsh	r3, [r7, #8]
 1226 0840 002B     		cmp	r3, #0
 1227 0842 06DA     		bge	.L49
 345:ui.c          ****                     {
 346:ui.c          ****                          stringRepresentation[editingSliderRepString] = 0;
 1228              		.loc 1 346 0
 1229 0844 604B     		ldr	r3, .L66+36
 1230 0846 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1231 0848 1A46     		mov	r2, r3
 1232 084a 604B     		ldr	r3, .L66+40
 1233 084c 0021     		movs	r1, #0
 1234 084e 9954     		strb	r1, [r3, r2]
 1235 0850 11E0     		b	.L50
 1236              	.L49:
 347:ui.c          ****                     }
 348:ui.c          ****                     else if (sliderTemp > 9)
 1237              		.loc 1 348 0
 1238 0852 B7F90830 		ldrsh	r3, [r7, #8]
 1239 0856 092B     		cmp	r3, #9
 1240 0858 06DD     		ble	.L51
 349:ui.c          ****                     {
 350:ui.c          ****                          stringRepresentation[editingSliderRepString] = 9;
 1241              		.loc 1 350 0
 1242 085a 5B4B     		ldr	r3, .L66+36
 1243 085c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1244 085e 1A46     		mov	r2, r3
 1245 0860 5A4B     		ldr	r3, .L66+40
 1246 0862 0921     		movs	r1, #9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 29


 1247 0864 9954     		strb	r1, [r3, r2]
 1248 0866 06E0     		b	.L50
 1249              	.L51:
 351:ui.c          ****                     }
 352:ui.c          ****                     else 
 353:ui.c          ****                     {
 354:ui.c          ****                          stringRepresentation[editingSliderRepString] = sliderTemp;
 1250              		.loc 1 354 0
 1251 0868 574B     		ldr	r3, .L66+36
 1252 086a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1253 086c 1A46     		mov	r2, r3
 1254 086e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 1255 0870 D9B2     		uxtb	r1, r3
 1256 0872 564B     		ldr	r3, .L66+40
 1257 0874 9954     		strb	r1, [r3, r2]
 1258              	.L50:
 355:ui.c          ****                     }
 356:ui.c          ****                     
 357:ui.c          ****                     uint8_t sliderRepDisplay[2];
 358:ui.c          ****                     sliderRepDisplay[0] = stringRepresentation[0] + 1;
 1259              		.loc 1 358 0
 1260 0876 554B     		ldr	r3, .L66+40
 1261 0878 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1262 087a 0133     		adds	r3, r3, #1
 1263 087c DBB2     		uxtb	r3, r3
 1264 087e 3B71     		strb	r3, [r7, #4]
 359:ui.c          ****                     sliderRepDisplay[1] = stringRepresentation[1] + 1;
 1265              		.loc 1 359 0
 1266 0880 524B     		ldr	r3, .L66+40
 1267 0882 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1268 0884 0133     		adds	r3, r3, #1
 1269 0886 DBB2     		uxtb	r3, r3
 1270 0888 7B71     		strb	r3, [r7, #5]
 360:ui.c          ****                     
 361:ui.c          ****                     OLEDwriteString("S1=", 3, 0, FourthLine);
 1271              		.loc 1 361 0
 1272 088a 0323     		movs	r3, #3
 1273 088c 0022     		movs	r2, #0
 1274 088e 0321     		movs	r1, #3
 1275 0890 4F48     		ldr	r0, .L66+44
 1276 0892 FFF7FEFF 		bl	OLEDwriteString
 362:ui.c          ****                     if (!editingSliderRepString)
 1277              		.loc 1 362 0
 1278 0896 4C4B     		ldr	r3, .L66+36
 1279 0898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1280 089a 002B     		cmp	r3, #0
 1281 089c 0ED1     		bne	.L52
 363:ui.c          ****                     {
 364:ui.c          ****                         OLEDtextColor(0, 1);
 1282              		.loc 1 364 0
 1283 089e 0121     		movs	r1, #1
 1284 08a0 0020     		movs	r0, #0
 1285 08a2 FFF7FEFF 		bl	OLEDtextColor
 365:ui.c          ****                         GFXfillRect(&theGFX, 24, 48, 16, 16, theGFX.textbgcolor);
 1286              		.loc 1 365 0
 1287 08a6 404B     		ldr	r3, .L66+4
 1288 08a8 5B8A     		ldrh	r3, [r3, #18]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 30


 1289 08aa 0193     		str	r3, [sp, #4]
 1290 08ac 1023     		movs	r3, #16
 1291 08ae 0093     		str	r3, [sp]
 1292 08b0 1023     		movs	r3, #16
 1293 08b2 3022     		movs	r2, #48
 1294 08b4 1821     		movs	r1, #24
 1295 08b6 3C48     		ldr	r0, .L66+4
 1296 08b8 FFF7FEFF 		bl	GFXfillRect
 1297              	.L52:
 366:ui.c          ****                     }
 367:ui.c          ****                     uint8_t currentChar = sliderRepDisplay[0] / 10;
 1298              		.loc 1 367 0
 1299 08bc 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1300 08be 454A     		ldr	r2, .L66+48
 1301 08c0 A2FB0323 		umull	r2, r3, r2, r3
 1302 08c4 DB08     		lsrs	r3, r3, #3
 1303 08c6 FB71     		strb	r3, [r7, #7]
 368:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1304              		.loc 1 368 0
 1305 08c8 FB79     		ldrb	r3, [r7, #7]
 1306 08ca 3033     		adds	r3, r3, #48
 1307 08cc DBB2     		uxtb	r3, r3
 1308 08ce 1946     		mov	r1, r3
 1309 08d0 3548     		ldr	r0, .L66+4
 1310 08d2 FFF7FEFF 		bl	GFXwrite
 369:ui.c          ****                     currentChar = sliderRepDisplay[0] - (currentChar*10);
 1311              		.loc 1 369 0
 1312 08d6 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 1313 08d8 FB79     		ldrb	r3, [r7, #7]
 1314 08da 1946     		mov	r1, r3
 1315 08dc 4901     		lsls	r1, r1, #5
 1316 08de C91A     		subs	r1, r1, r3
 1317 08e0 8900     		lsls	r1, r1, #2
 1318 08e2 CB1A     		subs	r3, r1, r3
 1319 08e4 5B00     		lsls	r3, r3, #1
 1320 08e6 DBB2     		uxtb	r3, r3
 1321 08e8 1344     		add	r3, r3, r2
 1322 08ea FB71     		strb	r3, [r7, #7]
 370:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1323              		.loc 1 370 0
 1324 08ec FB79     		ldrb	r3, [r7, #7]
 1325 08ee 3033     		adds	r3, r3, #48
 1326 08f0 DBB2     		uxtb	r3, r3
 1327 08f2 1946     		mov	r1, r3
 1328 08f4 2C48     		ldr	r0, .L66+4
 1329 08f6 FFF7FEFF 		bl	GFXwrite
 371:ui.c          ****                     OLEDtextColor(1, 0);
 1330              		.loc 1 371 0
 1331 08fa 0021     		movs	r1, #0
 1332 08fc 0120     		movs	r0, #1
 1333 08fe FFF7FEFF 		bl	OLEDtextColor
 372:ui.c          **** 
 373:ui.c          ****                     GFXwrite(&theGFX, 32); //space
 1334              		.loc 1 373 0
 1335 0902 2021     		movs	r1, #32
 1336 0904 2848     		ldr	r0, .L66+4
 1337 0906 FFF7FEFF 		bl	GFXwrite
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 31


 374:ui.c          ****                     GFXwrite(&theGFX, 83); //S
 1338              		.loc 1 374 0
 1339 090a 5321     		movs	r1, #83
 1340 090c 2648     		ldr	r0, .L66+4
 1341 090e FFF7FEFF 		bl	GFXwrite
 375:ui.c          ****                     GFXwrite(&theGFX, 50); //2
 1342              		.loc 1 375 0
 1343 0912 3221     		movs	r1, #50
 1344 0914 2448     		ldr	r0, .L66+4
 1345 0916 FFF7FEFF 		bl	GFXwrite
 376:ui.c          ****                     GFXwrite(&theGFX, 61); //=
 1346              		.loc 1 376 0
 1347 091a 3D21     		movs	r1, #61
 1348 091c 2248     		ldr	r0, .L66+4
 1349 091e FFF7FEFF 		bl	GFXwrite
 377:ui.c          ****                     if (editingSliderRepString)
 1350              		.loc 1 377 0
 1351 0922 294B     		ldr	r3, .L66+36
 1352 0924 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1353 0926 002B     		cmp	r3, #0
 1354 0928 0ED0     		beq	.L53
 378:ui.c          ****                     {
 379:ui.c          ****                         OLEDtextColor(0, 1);
 1355              		.loc 1 379 0
 1356 092a 0121     		movs	r1, #1
 1357 092c 0020     		movs	r0, #0
 1358 092e FFF7FEFF 		bl	OLEDtextColor
 380:ui.c          ****                         GFXfillRect(&theGFX, 72, 48, 16, 16, theGFX.textbgcolor);
 1359              		.loc 1 380 0
 1360 0932 1D4B     		ldr	r3, .L66+4
 1361 0934 5B8A     		ldrh	r3, [r3, #18]
 1362 0936 0193     		str	r3, [sp, #4]
 1363 0938 1023     		movs	r3, #16
 1364 093a 0093     		str	r3, [sp]
 1365 093c 1023     		movs	r3, #16
 1366 093e 3022     		movs	r2, #48
 1367 0940 4821     		movs	r1, #72
 1368 0942 1948     		ldr	r0, .L66+4
 1369 0944 FFF7FEFF 		bl	GFXfillRect
 1370              	.L53:
 381:ui.c          ****                     }
 382:ui.c          ****                     currentChar = sliderRepDisplay[1] / 10;
 1371              		.loc 1 382 0
 1372 0948 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1373 094a 224A     		ldr	r2, .L66+48
 1374 094c A2FB0323 		umull	r2, r3, r2, r3
 1375 0950 DB08     		lsrs	r3, r3, #3
 1376 0952 FB71     		strb	r3, [r7, #7]
 383:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1377              		.loc 1 383 0
 1378 0954 FB79     		ldrb	r3, [r7, #7]
 1379 0956 3033     		adds	r3, r3, #48
 1380 0958 DBB2     		uxtb	r3, r3
 1381 095a 1946     		mov	r1, r3
 1382 095c 1248     		ldr	r0, .L66+4
 1383 095e FFF7FEFF 		bl	GFXwrite
 384:ui.c          ****                     currentChar = sliderRepDisplay[1]  - (currentChar*10);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 32


 1384              		.loc 1 384 0
 1385 0962 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1386 0964 FB79     		ldrb	r3, [r7, #7]
 1387 0966 1946     		mov	r1, r3
 1388 0968 4901     		lsls	r1, r1, #5
 1389 096a C91A     		subs	r1, r1, r3
 1390 096c 8900     		lsls	r1, r1, #2
 1391 096e CB1A     		subs	r3, r1, r3
 1392 0970 5B00     		lsls	r3, r3, #1
 1393 0972 DBB2     		uxtb	r3, r3
 1394 0974 1344     		add	r3, r3, r2
 1395 0976 FB71     		strb	r3, [r7, #7]
 385:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1396              		.loc 1 385 0
 1397 0978 FB79     		ldrb	r3, [r7, #7]
 1398 097a 3033     		adds	r3, r3, #48
 1399 097c DBB2     		uxtb	r3, r3
 1400 097e 1946     		mov	r1, r3
 1401 0980 0948     		ldr	r0, .L66+4
 1402 0982 FFF7FEFF 		bl	GFXwrite
 386:ui.c          ****                    
 387:ui.c          ****                     OLEDtextColor(1, 0);
 1403              		.loc 1 387 0
 1404 0986 0021     		movs	r1, #0
 1405 0988 0120     		movs	r0, #1
 1406 098a FFF7FEFF 		bl	OLEDtextColor
 388:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1407              		.loc 1 388 0
 1408 098e 0B4B     		ldr	r3, .L66+24
 1409 0990 0122     		movs	r2, #1
 1410 0992 1A70     		strb	r2, [r3]
 1411              	.L48:
 1412              	.LBE5:
 389:ui.c          ****                 }
 390:ui.c          ****             }
 391:ui.c          ****             prevEncoderVal = currentEncoderVal;
 1413              		.loc 1 391 0
 1414 0994 0B4A     		ldr	r2, .L66+32
 1415 0996 BB7D     		ldrb	r3, [r7, #22]
 1416 0998 1370     		strb	r3, [r2]
 1417              	.L59:
 1418              	.LBE2:
 392:ui.c          ****         }
 393:ui.c          ****     }
 394:ui.c          ****     
 395:ui.c          **** }
 1419              		.loc 1 395 0
 1420 099a 00BF     		nop
 1421 099c 2437     		adds	r7, r7, #36
 1422              		.cfi_def_cfa_offset 12
 1423 099e BD46     		mov	sp, r7
 1424              		.cfi_def_cfa_register 13
 1425              		@ sp needed
 1426 09a0 90BD     		pop	{r4, r7, pc}
 1427              	.L67:
 1428 09a2 00BF     		.align	2
 1429              	.L66:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 33


 1430 09a4 00000000 		.word	deadZone
 1431 09a8 00000000 		.word	theGFX
 1432 09ac CDCC4C3E 		.word	1045220557
 1433 09b0 CDCCCC3D 		.word	1036831949
 1434 09b4 00002041 		.word	1092616192
 1435 09b8 0000C842 		.word	1120403456
 1436 09bc 00000000 		.word	mainOLEDWaitingToSend
 1437 09c0 00000000 		.word	menuPosition
 1438 09c4 00000000 		.word	prevEncoderVal
 1439 09c8 00000000 		.word	editingSliderRepString
 1440 09cc 00000000 		.word	stringRepresentation
 1441 09d0 00000000 		.word	.LC0
 1442 09d4 CDCCCCCC 		.word	-858993459
 1443              		.cfi_endproc
 1444              	.LFE64:
 1445              		.size	scanUI, .-scanUI
 1446              		.global	calibrationNames
 1447              		.section	.rodata
 1448              		.align	2
 1449              	.LC1:
 1450 0004 20205345 		.ascii	"  SET LEVERS \000"
 1450      54204C45 
 1450      56455253 
 1450      2000
 1451 0012 0000     		.align	2
 1452              	.LC2:
 1453 0014 20205345 		.ascii	"  SET FRETS  \000"
 1453      54204652 
 1453      45545320 
 1453      2000
 1454 0022 0000     		.align	2
 1455              		.type	calibrationNames, %object
 1456              		.size	calibrationNames, 12
 1457              	calibrationNames:
 1458 0024 04000000 		.word	.LC1
 1459 0028 14000000 		.word	.LC2
 1460 002c 00000000 		.word	0
 1461              		.global	mainMenuNames
 1462              		.align	2
 1463              	.LC3:
 1464 0030 20204341 		.ascii	"  CALIBRATION\000"
 1464      4C494252 
 1464      4154494F 
 1464      4E00
 1465 003e 0000     		.align	2
 1466              	.LC4:
 1467 0040 20205345 		.ascii	"  SETTINGS   \000"
 1467      5454494E 
 1467      47532020 
 1467      2000
 1468 004e 0000     		.align	2
 1469              		.type	mainMenuNames, %object
 1470              		.size	mainMenuNames, 12
 1471              	mainMenuNames:
 1472 0050 30000000 		.word	.LC3
 1473 0054 40000000 		.word	.LC4
 1474 0058 00000000 		.word	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 34


 1475              		.global	settingsNames
 1476              		.align	2
 1477              	.LC5:
 1478 005c 20205452 		.ascii	"  TRANSPOSE  \000"
 1478      414E5350 
 1478      4F534520 
 1478      2000
 1479 006a 0000     		.align	2
 1480              	.LC6:
 1481 006c 20204F43 		.ascii	"  OCTAVE ACTION\000"
 1481      54415645 
 1481      20414354 
 1481      494F4E00 
 1482              		.align	2
 1483              	.LC7:
 1484 007c 20204445 		.ascii	"  DEADZONES    \000"
 1484      41445A4F 
 1484      4E455320 
 1484      20202000 
 1485              		.align	2
 1486              	.LC8:
 1487 008c 2020534C 		.ascii	"  SLIDER REPR \000"
 1487      49444552 
 1487      20524550 
 1487      522000
 1488 009b 00       		.align	2
 1489              	.LC9:
 1490 009c 2020534D 		.ascii	"  SMOOTHING   \000"
 1490      4F4F5448 
 1490      494E4720 
 1490      202000
 1491 00ab 00       		.align	2
 1492              	.LC10:
 1493 00ac 20204D49 		.ascii	"  MIDI SEND  \000"
 1493      44492053 
 1493      454E4420 
 1493      2000
 1494 00ba 0000     		.align	2
 1495              		.type	settingsNames, %object
 1496              		.size	settingsNames, 28
 1497              	settingsNames:
 1498 00bc 5C000000 		.word	.LC5
 1499 00c0 6C000000 		.word	.LC6
 1500 00c4 7C000000 		.word	.LC7
 1501 00c8 8C000000 		.word	.LC8
 1502 00cc 9C000000 		.word	.LC9
 1503 00d0 AC000000 		.word	.LC10
 1504 00d4 00000000 		.word	0
 1505              		.global	numMainMenuItems
 1506              		.data
 1507              		.type	numMainMenuItems, %object
 1508              		.size	numMainMenuItems, 1
 1509              	numMainMenuItems:
 1510 0009 02       		.byte	2
 1511              		.global	numCalibrationItems
 1512              		.type	numCalibrationItems, %object
 1513              		.size	numCalibrationItems, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 35


 1514              	numCalibrationItems:
 1515 000a 02       		.byte	2
 1516              		.global	numSettingsItems
 1517              		.type	numSettingsItems, %object
 1518              		.size	numSettingsItems, 1
 1519              	numSettingsItems:
 1520 000b 06       		.byte	6
 1521              		.section	.rodata
 1522              		.align	2
 1523              	.LC11:
 1524 00d8 20204341 		.ascii	"  CALIBRATION     \000"
 1524      4C494252 
 1524      4154494F 
 1524      4E202020 
 1524      202000
 1525 00eb 00       		.align	2
 1526              	.LC12:
 1527 00ec 20205345 		.ascii	"  SETTINGS       \000"
 1527      5454494E 
 1527      47532020 
 1527      20202020 
 1527      2000
 1528              		.section	.text.enterEditModeMenu,"ax",%progbits
 1529              		.align	2
 1530              		.global	enterEditModeMenu
 1531              		.thumb
 1532              		.thumb_func
 1533              		.type	enterEditModeMenu, %function
 1534              	enterEditModeMenu:
 1535              	.LFB65:
 396:ui.c          **** 
 397:ui.c          **** 
 398:ui.c          **** 
 399:ui.c          **** 
 400:ui.c          **** const char* const calibrationNames[] = { "  SET LEVERS ", "  SET FRETS  ", 0 }; 
 401:ui.c          **** const char* const mainMenuNames[] =    { "  CALIBRATION", "  SETTINGS   ", 0 }; 
 402:ui.c          **** const char* const settingsNames[] =   { "  TRANSPOSE  ", "  OCTAVE ACTION", "  DEADZONES    ", "  S
 403:ui.c          **** uint8_t numMainMenuItems = 2;
 404:ui.c          **** uint8_t numCalibrationItems = 2;
 405:ui.c          **** uint8_t numSettingsItems = 6;
 406:ui.c          **** 
 407:ui.c          **** void enterEditModeMenu(void)
 408:ui.c          **** {
 1536              		.loc 1 408 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 1, uses_anonymous_args = 0
 1540 0000 80B5     		push	{r7, lr}
 1541              		.cfi_def_cfa_offset 8
 1542              		.cfi_offset 7, -8
 1543              		.cfi_offset 14, -4
 1544 0002 00AF     		add	r7, sp, #0
 1545              		.cfi_def_cfa_register 7
 409:ui.c          **** 
 410:ui.c          ****     OLEDclear(128, 64);
 1546              		.loc 1 410 0
 1547 0004 4021     		movs	r1, #64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 36


 1548 0006 8020     		movs	r0, #128
 1549 0008 FFF7FEFF 		bl	OLEDclear
 411:ui.c          ****     myGFX_setFont(2);
 1550              		.loc 1 411 0
 1551 000c 0220     		movs	r0, #2
 1552 000e FFF7FEFF 		bl	myGFX_setFont
 412:ui.c          ****     OLEDtextColor(0, 1);
 1553              		.loc 1 412 0
 1554 0012 0121     		movs	r1, #1
 1555 0014 0020     		movs	r0, #0
 1556 0016 FFF7FEFF 		bl	OLEDtextColor
 413:ui.c          ****     OLEDwriteString("  CALIBRATION     ", 15, 0, FirstLine);
 1557              		.loc 1 413 0
 1558 001a 0023     		movs	r3, #0
 1559 001c 0022     		movs	r2, #0
 1560 001e 0F21     		movs	r1, #15
 1561 0020 1948     		ldr	r0, .L69
 1562 0022 FFF7FEFF 		bl	OLEDwriteString
 414:ui.c          ****     OLEDwriteArrow(0, FirstLine);
 1563              		.loc 1 414 0
 1564 0026 0021     		movs	r1, #0
 1565 0028 0020     		movs	r0, #0
 1566 002a FFF7FEFF 		bl	OLEDwriteArrow
 415:ui.c          ****     OLEDtextColor(1, 0);
 1567              		.loc 1 415 0
 1568 002e 0021     		movs	r1, #0
 1569 0030 0120     		movs	r0, #1
 1570 0032 FFF7FEFF 		bl	OLEDtextColor
 416:ui.c          ****     OLEDwriteString("  SETTINGS       ", 15, 0, SecondLine);
 1571              		.loc 1 416 0
 1572 0036 0123     		movs	r3, #1
 1573 0038 0022     		movs	r2, #0
 1574 003a 0F21     		movs	r1, #15
 1575 003c 1348     		ldr	r0, .L69+4
 1576 003e FFF7FEFF 		bl	OLEDwriteString
 417:ui.c          ****     OLEDtextColor(1, 0);
 1577              		.loc 1 417 0
 1578 0042 0021     		movs	r1, #0
 1579 0044 0120     		movs	r0, #1
 1580 0046 FFF7FEFF 		bl	OLEDtextColor
 418:ui.c          ****     mainOLEDWaitingToSend = 1;
 1581              		.loc 1 418 0
 1582 004a 114B     		ldr	r3, .L69+8
 1583 004c 0122     		movs	r2, #1
 1584 004e 1A70     		strb	r2, [r3]
 419:ui.c          ****     editMode = 1;
 1585              		.loc 1 419 0
 1586 0050 104B     		ldr	r3, .L69+12
 1587 0052 0122     		movs	r2, #1
 1588 0054 1A70     		strb	r2, [r3]
 420:ui.c          ****     LED_red2_Write(editMode);
 1589              		.loc 1 420 0
 1590 0056 0F4B     		ldr	r3, .L69+12
 1591 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1592 005a 1846     		mov	r0, r3
 1593 005c FFF7FEFF 		bl	LED_red2_Write
 421:ui.c          ****     //initialize menu position to all zero
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 37


 422:ui.c          ****     menuPosition[0][0] = 0; //x
 1594              		.loc 1 422 0
 1595 0060 0D4B     		ldr	r3, .L69+16
 1596 0062 0022     		movs	r2, #0
 1597 0064 1A70     		strb	r2, [r3]
 423:ui.c          ****     menuPosition[0][1] = 0; //y
 1598              		.loc 1 423 0
 1599 0066 0C4B     		ldr	r3, .L69+16
 1600 0068 0022     		movs	r2, #0
 1601 006a 5A70     		strb	r2, [r3, #1]
 424:ui.c          ****     menuPosition[1][0] = 0; //x
 1602              		.loc 1 424 0
 1603 006c 0A4B     		ldr	r3, .L69+16
 1604 006e 0022     		movs	r2, #0
 1605 0070 9A70     		strb	r2, [r3, #2]
 425:ui.c          ****     menuPosition[1][1] = 0; //y
 1606              		.loc 1 425 0
 1607 0072 094B     		ldr	r3, .L69+16
 1608 0074 0022     		movs	r2, #0
 1609 0076 DA70     		strb	r2, [r3, #3]
 426:ui.c          ****     menuPosition[2][0] = 0; //x
 1610              		.loc 1 426 0
 1611 0078 074B     		ldr	r3, .L69+16
 1612 007a 0022     		movs	r2, #0
 1613 007c 1A71     		strb	r2, [r3, #4]
 427:ui.c          ****     menuPosition[2][1] = 0; //y
 1614              		.loc 1 427 0
 1615 007e 064B     		ldr	r3, .L69+16
 1616 0080 0022     		movs	r2, #0
 1617 0082 5A71     		strb	r2, [r3, #5]
 428:ui.c          **** }
 1618              		.loc 1 428 0
 1619 0084 00BF     		nop
 1620 0086 80BD     		pop	{r7, pc}
 1621              	.L70:
 1622              		.align	2
 1623              	.L69:
 1624 0088 D8000000 		.word	.LC11
 1625 008c EC000000 		.word	.LC12
 1626 0090 00000000 		.word	mainOLEDWaitingToSend
 1627 0094 00000000 		.word	editMode
 1628 0098 00000000 		.word	menuPosition
 1629              		.cfi_endproc
 1630              	.LFE65:
 1631              		.size	enterEditModeMenu, .-enterEditModeMenu
 1632              		.global	__aeabi_f2iz
 1633              		.section	.text.exitEditModeMenu,"ax",%progbits
 1634              		.align	2
 1635              		.global	exitEditModeMenu
 1636              		.thumb
 1637              		.thumb_func
 1638              		.type	exitEditModeMenu, %function
 1639              	exitEditModeMenu:
 1640              	.LFB66:
 429:ui.c          **** 
 430:ui.c          **** void exitEditModeMenu(void)
 431:ui.c          **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 38


 1641              		.loc 1 431 0
 1642              		.cfi_startproc
 1643              		@ args = 0, pretend = 0, frame = 8
 1644              		@ frame_needed = 1, uses_anonymous_args = 0
 1645 0000 90B5     		push	{r4, r7, lr}
 1646              		.cfi_def_cfa_offset 12
 1647              		.cfi_offset 4, -12
 1648              		.cfi_offset 7, -8
 1649              		.cfi_offset 14, -4
 1650 0002 83B0     		sub	sp, sp, #12
 1651              		.cfi_def_cfa_offset 24
 1652 0004 00AF     		add	r7, sp, #0
 1653              		.cfi_def_cfa_register 7
 432:ui.c          ****     
 433:ui.c          ****     if (leverCalibrationMode == 1)
 1654              		.loc 1 433 0
 1655 0006 4B4B     		ldr	r3, .L78
 1656 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1657 000a 012B     		cmp	r3, #1
 1658 000c 01D1     		bne	.L72
 434:ui.c          ****     {
 435:ui.c          ****         exitLeverCalibrationMode();
 1659              		.loc 1 435 0
 1660 000e FFF7FEFF 		bl	exitLeverCalibrationMode
 1661              	.L72:
 436:ui.c          ****     }
 437:ui.c          ****     if (fretCalibrationMode == 1)
 1662              		.loc 1 437 0
 1663 0012 494B     		ldr	r3, .L78+4
 1664 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1665 0016 012B     		cmp	r3, #1
 1666 0018 01D1     		bne	.L73
 438:ui.c          ****     {
 439:ui.c          ****         exitFretCalibrationMode();
 1667              		.loc 1 439 0
 1668 001a FFF7FEFF 		bl	exitFretCalibrationMode
 1669              	.L73:
 440:ui.c          ****     }
 441:ui.c          ****     if (menuPosition[0][0] == TransposeMenu)
 1670              		.loc 1 441 0
 1671 001e 474B     		ldr	r3, .L78+8
 1672 0020 93F90030 		ldrsb	r3, [r3]
 1673 0024 052B     		cmp	r3, #5
 1674 0026 34D1     		bne	.L74
 442:ui.c          ****     {
 443:ui.c          ****         transposeSemitones = (int8_t)transposeFloat;
 1675              		.loc 1 443 0
 1676 0028 454B     		ldr	r3, .L78+12
 1677 002a 1B68     		ldr	r3, [r3]	@ float
 1678 002c 1846     		mov	r0, r3
 1679 002e FFF7FEFF 		bl	__aeabi_f2iz
 1680 0032 0346     		mov	r3, r0
 1681 0034 5AB2     		sxtb	r2, r3
 1682 0036 434B     		ldr	r3, .L78+16
 1683 0038 1A70     		strb	r2, [r3]
 444:ui.c          ****         transposeCents = (int8_t)((transposeFloat - transposeSemitones) * 100.0f);
 1684              		.loc 1 444 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 39


 1685 003a 414B     		ldr	r3, .L78+12
 1686 003c 1C68     		ldr	r4, [r3]	@ float
 1687 003e 414B     		ldr	r3, .L78+16
 1688 0040 93F90030 		ldrsb	r3, [r3]
 1689 0044 1846     		mov	r0, r3
 1690 0046 FFF7FEFF 		bl	__aeabi_i2f
 1691 004a 0346     		mov	r3, r0
 1692 004c 1946     		mov	r1, r3
 1693 004e 2046     		mov	r0, r4
 1694 0050 FFF7FEFF 		bl	__aeabi_fsub
 1695 0054 0346     		mov	r3, r0
 1696 0056 3C49     		ldr	r1, .L78+20
 1697 0058 1846     		mov	r0, r3
 1698 005a FFF7FEFF 		bl	__aeabi_fmul
 1699 005e 0346     		mov	r3, r0
 1700 0060 1846     		mov	r0, r3
 1701 0062 FFF7FEFF 		bl	__aeabi_f2iz
 1702 0066 0346     		mov	r3, r0
 1703 0068 5AB2     		sxtb	r2, r3
 1704 006a 384B     		ldr	r3, .L78+24
 1705 006c 1A70     		strb	r2, [r3]
 445:ui.c          ****         EEPROM_WriteByte(transposeSemitones, EEPROM_TRANSPOSE_OFFSET);
 1706              		.loc 1 445 0
 1707 006e 354B     		ldr	r3, .L78+16
 1708 0070 93F90030 		ldrsb	r3, [r3]
 1709 0074 DBB2     		uxtb	r3, r3
 1710 0076 40F2F471 		movw	r1, #2036
 1711 007a 1846     		mov	r0, r3
 1712 007c FFF7FEFF 		bl	EEPROM_WriteByte
 446:ui.c          ****         EEPROM_WriteByte(transposeCents, EEPROM_TRANSPOSE_OFFSET + 1);
 1713              		.loc 1 446 0
 1714 0080 324B     		ldr	r3, .L78+24
 1715 0082 93F90030 		ldrsb	r3, [r3]
 1716 0086 DBB2     		uxtb	r3, r3
 1717 0088 40F2F571 		movw	r1, #2037
 1718 008c 1846     		mov	r0, r3
 1719 008e FFF7FEFF 		bl	EEPROM_WriteByte
 1720              	.L74:
 447:ui.c          ****     }
 448:ui.c          ****     if (menuPosition[0][0] == DeadzonesMenu)
 1721              		.loc 1 448 0
 1722 0092 2A4B     		ldr	r3, .L78+8
 1723 0094 93F90030 		ldrsb	r3, [r3]
 1724 0098 072B     		cmp	r3, #7
 1725 009a 06D1     		bne	.L75
 449:ui.c          ****     {
 450:ui.c          ****         EEPROM_WriteByte(deadZone, EEPROM_DEADZONES_OFFSET);
 1726              		.loc 1 450 0
 1727 009c 2C4B     		ldr	r3, .L78+28
 1728 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1729 00a0 40F2F771 		movw	r1, #2039
 1730 00a4 1846     		mov	r0, r3
 1731 00a6 FFF7FEFF 		bl	EEPROM_WriteByte
 1732              	.L75:
 451:ui.c          ****     }
 452:ui.c          ****     if (menuPosition[0][0] == SliderRepMenu)
 1733              		.loc 1 452 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 40


 1734 00aa 244B     		ldr	r3, .L78+8
 1735 00ac 93F90030 		ldrsb	r3, [r3]
 1736 00b0 082B     		cmp	r3, #8
 1737 00b2 12D1     		bne	.L76
 1738              	.LBB6:
 453:ui.c          ****     {
 454:ui.c          ****         uint8_t tempByte = ((stringRepresentation[0] & 15) << 4) + (stringRepresentation[1] & 15);
 1739              		.loc 1 454 0
 1740 00b4 274B     		ldr	r3, .L78+32
 1741 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1742 00b8 1B01     		lsls	r3, r3, #4
 1743 00ba DAB2     		uxtb	r2, r3
 1744 00bc 254B     		ldr	r3, .L78+32
 1745 00be 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1746 00c0 03F00F03 		and	r3, r3, #15
 1747 00c4 DBB2     		uxtb	r3, r3
 1748 00c6 1344     		add	r3, r3, r2
 1749 00c8 FB71     		strb	r3, [r7, #7]
 455:ui.c          ****         EEPROM_WriteByte(tempByte,EEPROM_STRING_REP_OFFSET);
 1750              		.loc 1 455 0
 1751 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1752 00cc 40F2F371 		movw	r1, #2035
 1753 00d0 1846     		mov	r0, r3
 1754 00d2 FFF7FEFF 		bl	EEPROM_WriteByte
 456:ui.c          ****         calculateStringRepDivider();
 1755              		.loc 1 456 0
 1756 00d6 FFF7FEFF 		bl	calculateStringRepDivider
 1757              	.L76:
 1758              	.LBE6:
 457:ui.c          ****     }
 458:ui.c          ****     if (menuPosition[0][0] == MidiSendMenu)
 1759              		.loc 1 458 0
 1760 00da 184B     		ldr	r3, .L78+8
 1761 00dc 93F90030 		ldrsb	r3, [r3]
 1762 00e0 092B     		cmp	r3, #9
 1763 00e2 13D1     		bne	.L77
 1764              	.LBB7:
 459:ui.c          ****     {
 460:ui.c          ****         uint8_t tempByte = ((midiBarSendOn & 1)<<1) + (midiSendOn & 1);
 1765              		.loc 1 460 0
 1766 00e4 1C4B     		ldr	r3, .L78+36
 1767 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 00e8 5B00     		lsls	r3, r3, #1
 1769 00ea DBB2     		uxtb	r3, r3
 1770 00ec 03F00203 		and	r3, r3, #2
 1771 00f0 DAB2     		uxtb	r2, r3
 1772 00f2 1A4B     		ldr	r3, .L78+40
 1773 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1774 00f6 03F00103 		and	r3, r3, #1
 1775 00fa DBB2     		uxtb	r3, r3
 1776 00fc 1344     		add	r3, r3, r2
 1777 00fe BB71     		strb	r3, [r7, #6]
 461:ui.c          ****         EEPROM_WriteByte(tempByte,EEPROM_MIDI_SEND_OFFSET);
 1778              		.loc 1 461 0
 1779 0100 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1780 0102 40F2FA71 		movw	r1, #2042
 1781 0106 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 41


 1782 0108 FFF7FEFF 		bl	EEPROM_WriteByte
 1783              	.L77:
 1784              	.LBE7:
 462:ui.c          ****     }
 463:ui.c          ****     
 464:ui.c          ****     encoderWatch = 0;
 1785              		.loc 1 464 0
 1786 010c 144B     		ldr	r3, .L78+44
 1787 010e 0022     		movs	r2, #0
 1788 0110 1A70     		strb	r2, [r3]
 465:ui.c          ****     Decoder_1_Stop();
 1789              		.loc 1 465 0
 1790 0112 FFF7FEFF 		bl	Decoder_1_Stop
 466:ui.c          ****     editMode = 0;
 1791              		.loc 1 466 0
 1792 0116 134B     		ldr	r3, .L78+48
 1793 0118 0022     		movs	r2, #0
 1794 011a 1A70     		strb	r2, [r3]
 467:ui.c          ****     LED_red2_Write(editMode);
 1795              		.loc 1 467 0
 1796 011c 114B     		ldr	r3, .L78+48
 1797 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1798 0120 1846     		mov	r0, r3
 1799 0122 FFF7FEFF 		bl	LED_red2_Write
 468:ui.c          ****     displayCurrentPresetNameAndCopedent();
 1800              		.loc 1 468 0
 1801 0126 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 469:ui.c          **** }
 1802              		.loc 1 469 0
 1803 012a 00BF     		nop
 1804 012c 0C37     		adds	r7, r7, #12
 1805              		.cfi_def_cfa_offset 12
 1806 012e BD46     		mov	sp, r7
 1807              		.cfi_def_cfa_register 13
 1808              		@ sp needed
 1809 0130 90BD     		pop	{r4, r7, pc}
 1810              	.L79:
 1811 0132 00BF     		.align	2
 1812              	.L78:
 1813 0134 00000000 		.word	leverCalibrationMode
 1814 0138 00000000 		.word	fretCalibrationMode
 1815 013c 00000000 		.word	menuPosition
 1816 0140 00000000 		.word	transposeFloat
 1817 0144 00000000 		.word	transposeSemitones
 1818 0148 0000C842 		.word	1120403456
 1819 014c 00000000 		.word	transposeCents
 1820 0150 00000000 		.word	deadZone
 1821 0154 00000000 		.word	stringRepresentation
 1822 0158 00000000 		.word	midiBarSendOn
 1823 015c 00000000 		.word	midiSendOn
 1824 0160 00000000 		.word	encoderWatch
 1825 0164 00000000 		.word	editMode
 1826              		.cfi_endproc
 1827              	.LFE66:
 1828              		.size	exitEditModeMenu, .-exitEditModeMenu
 1829              		.global	fretToCalibrate
 1830              		.bss
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 42


 1831              		.type	fretToCalibrate, %object
 1832              		.size	fretToCalibrate, 1
 1833              	fretToCalibrate:
 1834 0005 00       		.space	1
 1835              		.global	whichFretArray
 1836              		.data
 1837              		.align	2
 1838              		.type	whichFretArray, %object
 1839              		.size	whichFretArray, 12
 1840              	whichFretArray:
 1841 000c 00       		.byte	0
 1842 000d 01       		.byte	1
 1843 000e 03       		.byte	3
 1844 000f 05       		.byte	5
 1845 0010 07       		.byte	7
 1846 0011 09       		.byte	9
 1847 0012 0C       		.byte	12
 1848 0013 0F       		.byte	15
 1849 0014 11       		.byte	17
 1850 0015 13       		.byte	19
 1851 0016 15       		.byte	21
 1852 0017 18       		.byte	24
 1853              		.section	.rodata
 1854 00fe 0000     		.align	2
 1855              	.LC13:
 1856 0100 56414C55 		.ascii	"VALUE KNOB SETS\000"
 1856      45204B4E 
 1856      4F422053 
 1856      45545300 
 1857              		.align	2
 1858              	.LC14:
 1859 0110 5452414E 		.ascii	"TRANSPOSITION  \000"
 1859      53504F53 
 1859      4954494F 
 1859      4E202000 
 1860              		.align	2
 1861              	.LC15:
 1862 0120 4F435441 		.ascii	"OCTAVE ACTION  \000"
 1862      56452041 
 1862      4354494F 
 1862      4E202000 
 1863              		.align	2
 1864              	.LC16:
 1865 0130 4F4E204E 		.ascii	"ON NEXT NOTE   \000"
 1865      45585420 
 1865      4E4F5445 
 1865      20202000 
 1866              		.align	2
 1867              	.LC17:
 1868 0140 494D4D45 		.ascii	"IMMEDIATE      \000"
 1868      44494154 
 1868      45202020 
 1868      20202000 
 1869              		.align	2
 1870              	.LC18:
 1871 0150 4C455645 		.ascii	"LEVER DEADZONES\000"
 1871      52204445 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 43


 1871      41445A4F 
 1871      4E455300 
 1872              		.align	2
 1873              	.LC19:
 1874 0160 53455420 		.ascii	"SET WHICH      \000"
 1874      57484943 
 1874      48202020 
 1874      20202000 
 1875              		.align	2
 1876              	.LC20:
 1877 0170 53545249 		.ascii	"STRINGS SLIDERS\000"
 1877      4E475320 
 1877      534C4944 
 1877      45525300 
 1878              		.align	2
 1879              	.LC21:
 1880 0180 52455052 		.ascii	"REPRESENT(1-10)\000"
 1880      4553454E 
 1880      5428312D 
 1880      31302900 
 1881              		.align	2
 1882              	.LC22:
 1883 0190 53454E44 		.ascii	"SEND MIDI \000"
 1883      204D4944 
 1883      492000
 1884 019b 00       		.align	2
 1885              	.LC23:
 1886 019c 53454E44 		.ascii	"SEND BAR  \000"
 1886      20424152 
 1886      202000
 1887 01a7 00       		.align	2
 1888              	.LC24:
 1889 01a8 4E4F5720 		.ascii	"NOW PUT ALL\000"
 1889      50555420 
 1889      414C4C00 
 1890              		.align	2
 1891              	.LC25:
 1892 01b4 50454441 		.ascii	"PEDALS/LEVERS  \000"
 1892      4C532F4C 
 1892      45564552 
 1892      53202000 
 1893              		.align	2
 1894              	.LC26:
 1895 01c4 494E2052 		.ascii	"IN RESTING STATE\000"
 1895      45535449 
 1895      4E472053 
 1895      54415445 
 1895      00
 1896 01d5 000000   		.align	2
 1897              	.LC27:
 1898 01d8 414E4420 		.ascii	"AND PRESS EDIT\000"
 1898      50524553 
 1898      53204544 
 1898      495400
 1899 01e7 00       		.align	2
 1900              	.LC28:
 1901 01e8 20202020 		.ascii	"               \000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 44


 1901      20202020 
 1901      20202020 
 1901      20202000 
 1902              		.section	.text.menuAction,"ax",%progbits
 1903              		.align	2
 1904              		.global	menuAction
 1905              		.thumb
 1906              		.thumb_func
 1907              		.type	menuAction, %function
 1908              	menuAction:
 1909              	.LFB67:
 470:ui.c          **** 
 471:ui.c          **** uint8_t fretToCalibrate = 0;
 472:ui.c          **** uint8_t whichFretArray[NUM_FRET_MEASUREMENTS] = {0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24};
 473:ui.c          **** void menuAction(enum direction action)
 474:ui.c          **** {
 1910              		.loc 1 474 0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 32
 1913              		@ frame_needed = 1, uses_anonymous_args = 0
 1914 0000 80B5     		push	{r7, lr}
 1915              		.cfi_def_cfa_offset 8
 1916              		.cfi_offset 7, -8
 1917              		.cfi_offset 14, -4
 1918 0002 8AB0     		sub	sp, sp, #40
 1919              		.cfi_def_cfa_offset 48
 1920 0004 02AF     		add	r7, sp, #8
 1921              		.cfi_def_cfa 7, 40
 1922 0006 0346     		mov	r3, r0
 1923 0008 FB71     		strb	r3, [r7, #7]
 475:ui.c          ****     uint8_t whatToDraw = 0;
 1924              		.loc 1 475 0
 1925 000a 0023     		movs	r3, #0
 1926 000c FB77     		strb	r3, [r7, #31]
 476:ui.c          ****     
 477:ui.c          ****     if (menuPosition[0][0] == MainMenu) //we are at the main menu
 1927              		.loc 1 477 0
 1928 000e 984B     		ldr	r3, .L165
 1929 0010 93F90030 		ldrsb	r3, [r3]
 1930 0014 002B     		cmp	r3, #0
 1931 0016 4ED1     		bne	.L81
 478:ui.c          ****     {
 479:ui.c          ****         //if we went up or down, switch the menu item
 480:ui.c          ****         if (action == Up)
 1932              		.loc 1 480 0
 1933 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1934 001a 032B     		cmp	r3, #3
 1935 001c 14D1     		bne	.L82
 481:ui.c          ****         {
 482:ui.c          ****             menuPosition[0][1]--;
 1936              		.loc 1 482 0
 1937 001e 944B     		ldr	r3, .L165
 1938 0020 93F90130 		ldrsb	r3, [r3, #1]
 1939 0024 DBB2     		uxtb	r3, r3
 1940 0026 013B     		subs	r3, r3, #1
 1941 0028 DBB2     		uxtb	r3, r3
 1942 002a 5AB2     		sxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 45


 1943 002c 904B     		ldr	r3, .L165
 1944 002e 5A70     		strb	r2, [r3, #1]
 483:ui.c          ****             if (menuPosition[0][1] < 0)
 1945              		.loc 1 483 0
 1946 0030 8F4B     		ldr	r3, .L165
 1947 0032 93F90130 		ldrsb	r3, [r3, #1]
 1948 0036 002B     		cmp	r3, #0
 1949 0038 02DA     		bge	.L83
 484:ui.c          ****             {
 485:ui.c          ****                 menuPosition[0][1] = 0;
 1950              		.loc 1 485 0
 1951 003a 8D4B     		ldr	r3, .L165
 1952 003c 0022     		movs	r2, #0
 1953 003e 5A70     		strb	r2, [r3, #1]
 1954              	.L83:
 486:ui.c          ****             }
 487:ui.c          ****             whatToDraw = 1;
 1955              		.loc 1 487 0
 1956 0040 0123     		movs	r3, #1
 1957 0042 FB77     		strb	r3, [r7, #31]
 1958 0044 00F0C9BC 		b	.L88
 1959              	.L82:
 488:ui.c          ****         }
 489:ui.c          ****         else if (action == Down)
 1960              		.loc 1 489 0
 1961 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1962 004a 022B     		cmp	r3, #2
 1963 004c 1BD1     		bne	.L85
 490:ui.c          ****         {
 491:ui.c          ****             menuPosition[0][1]++;
 1964              		.loc 1 491 0
 1965 004e 884B     		ldr	r3, .L165
 1966 0050 93F90130 		ldrsb	r3, [r3, #1]
 1967 0054 DBB2     		uxtb	r3, r3
 1968 0056 0133     		adds	r3, r3, #1
 1969 0058 DBB2     		uxtb	r3, r3
 1970 005a 5AB2     		sxtb	r2, r3
 1971 005c 844B     		ldr	r3, .L165
 1972 005e 5A70     		strb	r2, [r3, #1]
 492:ui.c          ****             if (menuPosition[0][1] >= numMainMenuItems)
 1973              		.loc 1 492 0
 1974 0060 834B     		ldr	r3, .L165
 1975 0062 93F90130 		ldrsb	r3, [r3, #1]
 1976 0066 1A46     		mov	r2, r3
 1977 0068 824B     		ldr	r3, .L165+4
 1978 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1979 006c 9A42     		cmp	r2, r3
 1980 006e 06DB     		blt	.L86
 493:ui.c          ****             {
 494:ui.c          ****                 menuPosition[0][1] = numMainMenuItems-1;
 1981              		.loc 1 494 0
 1982 0070 804B     		ldr	r3, .L165+4
 1983 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1984 0074 013B     		subs	r3, r3, #1
 1985 0076 DBB2     		uxtb	r3, r3
 1986 0078 5AB2     		sxtb	r2, r3
 1987 007a 7D4B     		ldr	r3, .L165
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 46


 1988 007c 5A70     		strb	r2, [r3, #1]
 1989              	.L86:
 495:ui.c          ****             }
 496:ui.c          ****             whatToDraw = 1;
 1990              		.loc 1 496 0
 1991 007e 0123     		movs	r3, #1
 1992 0080 FB77     		strb	r3, [r7, #31]
 1993 0082 00F0AABC 		b	.L88
 1994              	.L85:
 497:ui.c          ****         }
 498:ui.c          ****         else if ((action == Right) || (action == Enter))
 1995              		.loc 1 498 0
 1996 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1997 0088 012B     		cmp	r3, #1
 1998 008a 03D0     		beq	.L87
 1999              		.loc 1 498 0 is_stmt 0 discriminator 1
 2000 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2001 008e 042B     		cmp	r3, #4
 2002 0090 40F0A384 		bne	.L88
 2003              	.L87:
 499:ui.c          ****         {
 500:ui.c          ****             //select this submenu from the main menu
 501:ui.c          ****             menuPosition[0][0] = menuPosition[0][1]+1; //now [0][0] = 1 means calibration and [0][0
 2004              		.loc 1 501 0 is_stmt 1
 2005 0094 764B     		ldr	r3, .L165
 2006 0096 93F90130 		ldrsb	r3, [r3, #1]
 2007 009a DBB2     		uxtb	r3, r3
 2008 009c 0133     		adds	r3, r3, #1
 2009 009e DBB2     		uxtb	r3, r3
 2010 00a0 5AB2     		sxtb	r2, r3
 2011 00a2 734B     		ldr	r3, .L165
 2012 00a4 1A70     		strb	r2, [r3]
 502:ui.c          ****             whatToDraw = menuPosition[0][0]+1;
 2013              		.loc 1 502 0
 2014 00a6 724B     		ldr	r3, .L165
 2015 00a8 93F90030 		ldrsb	r3, [r3]
 2016 00ac DBB2     		uxtb	r3, r3
 2017 00ae 0133     		adds	r3, r3, #1
 2018 00b0 FB77     		strb	r3, [r7, #31]
 2019 00b2 00F092BC 		b	.L88
 2020              	.L81:
 503:ui.c          ****         }
 504:ui.c          ****         //ignore left button
 505:ui.c          ****     }
 506:ui.c          ****     else if (menuPosition[0][0] == CalibrationMenu) //we are at the calibration submenu
 2021              		.loc 1 506 0
 2022 00b6 6E4B     		ldr	r3, .L165
 2023 00b8 93F90030 		ldrsb	r3, [r3]
 2024 00bc 012B     		cmp	r3, #1
 2025 00be 64D1     		bne	.L89
 507:ui.c          ****     {
 508:ui.c          ****         //if we went up or down, switch the menu item
 509:ui.c          ****         if (action == Up)
 2026              		.loc 1 509 0
 2027 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2028 00c2 032B     		cmp	r3, #3
 2029 00c4 14D1     		bne	.L90
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 47


 510:ui.c          ****         {
 511:ui.c          ****             menuPosition[1][1]--;
 2030              		.loc 1 511 0
 2031 00c6 6A4B     		ldr	r3, .L165
 2032 00c8 93F90330 		ldrsb	r3, [r3, #3]
 2033 00cc DBB2     		uxtb	r3, r3
 2034 00ce 013B     		subs	r3, r3, #1
 2035 00d0 DBB2     		uxtb	r3, r3
 2036 00d2 5AB2     		sxtb	r2, r3
 2037 00d4 664B     		ldr	r3, .L165
 2038 00d6 DA70     		strb	r2, [r3, #3]
 512:ui.c          ****             if (menuPosition[1][1] < 0)
 2039              		.loc 1 512 0
 2040 00d8 654B     		ldr	r3, .L165
 2041 00da 93F90330 		ldrsb	r3, [r3, #3]
 2042 00de 002B     		cmp	r3, #0
 2043 00e0 02DA     		bge	.L91
 513:ui.c          ****             {
 514:ui.c          ****                 menuPosition[1][1] = 0;
 2044              		.loc 1 514 0
 2045 00e2 634B     		ldr	r3, .L165
 2046 00e4 0022     		movs	r2, #0
 2047 00e6 DA70     		strb	r2, [r3, #3]
 2048              	.L91:
 515:ui.c          ****             }
 516:ui.c          ****             whatToDraw = 2;
 2049              		.loc 1 516 0
 2050 00e8 0223     		movs	r3, #2
 2051 00ea FB77     		strb	r3, [r7, #31]
 2052 00ec 00F075BC 		b	.L88
 2053              	.L90:
 517:ui.c          ****         }
 518:ui.c          ****         else if (action == Down)
 2054              		.loc 1 518 0
 2055 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2056 00f2 022B     		cmp	r3, #2
 2057 00f4 1BD1     		bne	.L93
 519:ui.c          ****         {
 520:ui.c          ****             menuPosition[1][1]++;
 2058              		.loc 1 520 0
 2059 00f6 5E4B     		ldr	r3, .L165
 2060 00f8 93F90330 		ldrsb	r3, [r3, #3]
 2061 00fc DBB2     		uxtb	r3, r3
 2062 00fe 0133     		adds	r3, r3, #1
 2063 0100 DBB2     		uxtb	r3, r3
 2064 0102 5AB2     		sxtb	r2, r3
 2065 0104 5A4B     		ldr	r3, .L165
 2066 0106 DA70     		strb	r2, [r3, #3]
 521:ui.c          ****             if (menuPosition[1][1] >= numCalibrationItems)
 2067              		.loc 1 521 0
 2068 0108 594B     		ldr	r3, .L165
 2069 010a 93F90330 		ldrsb	r3, [r3, #3]
 2070 010e 1A46     		mov	r2, r3
 2071 0110 594B     		ldr	r3, .L165+8
 2072 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 0114 9A42     		cmp	r2, r3
 2074 0116 06DB     		blt	.L94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 48


 522:ui.c          ****             {
 523:ui.c          ****                 menuPosition[1][1] = numCalibrationItems-1;
 2075              		.loc 1 523 0
 2076 0118 574B     		ldr	r3, .L165+8
 2077 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2078 011c 013B     		subs	r3, r3, #1
 2079 011e DBB2     		uxtb	r3, r3
 2080 0120 5AB2     		sxtb	r2, r3
 2081 0122 534B     		ldr	r3, .L165
 2082 0124 DA70     		strb	r2, [r3, #3]
 2083              	.L94:
 524:ui.c          ****             }
 525:ui.c          ****             whatToDraw = 2;
 2084              		.loc 1 525 0
 2085 0126 0223     		movs	r3, #2
 2086 0128 FB77     		strb	r3, [r7, #31]
 2087 012a 00F056BC 		b	.L88
 2088              	.L93:
 526:ui.c          ****         }
 527:ui.c          ****         else if ((action == Right) || (action == Enter))
 2089              		.loc 1 527 0
 2090 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2091 0130 012B     		cmp	r3, #1
 2092 0132 02D0     		beq	.L95
 2093              		.loc 1 527 0 is_stmt 0 discriminator 1
 2094 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2095 0136 042B     		cmp	r3, #4
 2096 0138 1CD1     		bne	.L96
 2097              	.L95:
 528:ui.c          ****         {
 529:ui.c          ****             if (menuPosition[1][1] == 0)
 2098              		.loc 1 529 0 is_stmt 1
 2099 013a 4D4B     		ldr	r3, .L165
 2100 013c 93F90330 		ldrsb	r3, [r3, #3]
 2101 0140 002B     		cmp	r3, #0
 2102 0142 08D1     		bne	.L97
 530:ui.c          ****             {
 531:ui.c          ****                 //calibrate levers
 532:ui.c          ****                 menuPosition[0][0] = CalibrateLeversMenu; //means calibrating levers now
 2103              		.loc 1 532 0
 2104 0144 4A4B     		ldr	r3, .L165
 2105 0146 0322     		movs	r2, #3
 2106 0148 1A70     		strb	r2, [r3]
 533:ui.c          ****                 whatToDraw = 0;
 2107              		.loc 1 533 0
 2108 014a 0023     		movs	r3, #0
 2109 014c FB77     		strb	r3, [r7, #31]
 534:ui.c          ****                 enterLeverCalibrationMode();
 2110              		.loc 1 534 0
 2111 014e FFF7FEFF 		bl	enterLeverCalibrationMode
 529:ui.c          ****             {
 2112              		.loc 1 529 0
 2113 0152 00F03FBC 		b	.L162
 2114              	.L97:
 535:ui.c          ****             }
 536:ui.c          ****             else if (menuPosition[1][1] == 1)
 2115              		.loc 1 536 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 49


 2116 0156 464B     		ldr	r3, .L165
 2117 0158 93F90330 		ldrsb	r3, [r3, #3]
 2118 015c 012B     		cmp	r3, #1
 2119 015e 40F03984 		bne	.L162
 537:ui.c          ****             {
 538:ui.c          ****                 //calibrate bar slider frets
 539:ui.c          ****                 menuPosition[0][0] = CalibrateFretsMenu; //means calibrating frets now
 2120              		.loc 1 539 0
 2121 0162 434B     		ldr	r3, .L165
 2122 0164 0422     		movs	r2, #4
 2123 0166 1A70     		strb	r2, [r3]
 540:ui.c          ****                 whatToDraw = 0;
 2124              		.loc 1 540 0
 2125 0168 0023     		movs	r3, #0
 2126 016a FB77     		strb	r3, [r7, #31]
 541:ui.c          ****                 enterFretCalibrationMode();
 2127              		.loc 1 541 0
 2128 016c FFF7FEFF 		bl	enterFretCalibrationMode
 529:ui.c          ****             {
 2129              		.loc 1 529 0
 2130 0170 00F030BC 		b	.L162
 2131              	.L96:
 542:ui.c          ****             }
 543:ui.c          ****         }
 544:ui.c          ****         else if (action == Left) 
 2132              		.loc 1 544 0
 2133 0174 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2134 0176 002B     		cmp	r3, #0
 2135 0178 40F02F84 		bne	.L88
 545:ui.c          ****         {
 546:ui.c          ****             //go back to main menu
 547:ui.c          ****             menuPosition[0][0] = 0;
 2136              		.loc 1 547 0
 2137 017c 3C4B     		ldr	r3, .L165
 2138 017e 0022     		movs	r2, #0
 2139 0180 1A70     		strb	r2, [r3]
 548:ui.c          ****             whatToDraw = 1;
 2140              		.loc 1 548 0
 2141 0182 0123     		movs	r3, #1
 2142 0184 FB77     		strb	r3, [r7, #31]
 2143 0186 00F028BC 		b	.L88
 2144              	.L89:
 549:ui.c          ****         }
 550:ui.c          ****     }
 551:ui.c          ****     else if (menuPosition[0][0] == SettingsMenu) //we are at the settings submenu
 2145              		.loc 1 551 0
 2146 018a 394B     		ldr	r3, .L165
 2147 018c 93F90030 		ldrsb	r3, [r3]
 2148 0190 022B     		cmp	r3, #2
 2149 0192 40F0FF81 		bne	.L99
 552:ui.c          ****     {
 553:ui.c          ****         //if we went up or down, switch the menu item
 554:ui.c          ****         if (action == Up)
 2150              		.loc 1 554 0
 2151 0196 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2152 0198 032B     		cmp	r3, #3
 2153 019a 14D1     		bne	.L100
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 50


 555:ui.c          ****         {
 556:ui.c          ****             menuPosition[2][1]--;
 2154              		.loc 1 556 0
 2155 019c 344B     		ldr	r3, .L165
 2156 019e 93F90530 		ldrsb	r3, [r3, #5]
 2157 01a2 DBB2     		uxtb	r3, r3
 2158 01a4 013B     		subs	r3, r3, #1
 2159 01a6 DBB2     		uxtb	r3, r3
 2160 01a8 5AB2     		sxtb	r2, r3
 2161 01aa 314B     		ldr	r3, .L165
 2162 01ac 5A71     		strb	r2, [r3, #5]
 557:ui.c          ****             if (menuPosition[2][1] < 0)
 2163              		.loc 1 557 0
 2164 01ae 304B     		ldr	r3, .L165
 2165 01b0 93F90530 		ldrsb	r3, [r3, #5]
 2166 01b4 002B     		cmp	r3, #0
 2167 01b6 02DA     		bge	.L101
 558:ui.c          ****             {
 559:ui.c          ****                 menuPosition[2][1] = 0;
 2168              		.loc 1 559 0
 2169 01b8 2D4B     		ldr	r3, .L165
 2170 01ba 0022     		movs	r2, #0
 2171 01bc 5A71     		strb	r2, [r3, #5]
 2172              	.L101:
 560:ui.c          ****             }
 561:ui.c          ****             whatToDraw = 3;
 2173              		.loc 1 561 0
 2174 01be 0323     		movs	r3, #3
 2175 01c0 FB77     		strb	r3, [r7, #31]
 2176 01c2 00F00ABC 		b	.L88
 2177              	.L100:
 562:ui.c          ****         }
 563:ui.c          ****         else if (action == Down)
 2178              		.loc 1 563 0
 2179 01c6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2180 01c8 022B     		cmp	r3, #2
 2181 01ca 1AD1     		bne	.L103
 564:ui.c          ****         {
 565:ui.c          ****             menuPosition[2][1]++;
 2182              		.loc 1 565 0
 2183 01cc 284B     		ldr	r3, .L165
 2184 01ce 93F90530 		ldrsb	r3, [r3, #5]
 2185 01d2 DBB2     		uxtb	r3, r3
 2186 01d4 0133     		adds	r3, r3, #1
 2187 01d6 DBB2     		uxtb	r3, r3
 2188 01d8 5AB2     		sxtb	r2, r3
 2189 01da 254B     		ldr	r3, .L165
 2190 01dc 5A71     		strb	r2, [r3, #5]
 566:ui.c          ****             if (menuPosition[2][1] >= numSettingsItems)
 2191              		.loc 1 566 0
 2192 01de 244B     		ldr	r3, .L165
 2193 01e0 93F90530 		ldrsb	r3, [r3, #5]
 2194 01e4 1A46     		mov	r2, r3
 2195 01e6 254B     		ldr	r3, .L165+12
 2196 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2197 01ea 9A42     		cmp	r2, r3
 2198 01ec 06DB     		blt	.L104
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 51


 567:ui.c          ****             {
 568:ui.c          ****                 menuPosition[2][1] = numSettingsItems-1;
 2199              		.loc 1 568 0
 2200 01ee 234B     		ldr	r3, .L165+12
 2201 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2202 01f2 013B     		subs	r3, r3, #1
 2203 01f4 DBB2     		uxtb	r3, r3
 2204 01f6 5AB2     		sxtb	r2, r3
 2205 01f8 1D4B     		ldr	r3, .L165
 2206 01fa 5A71     		strb	r2, [r3, #5]
 2207              	.L104:
 569:ui.c          ****             }
 570:ui.c          ****             whatToDraw = 3;
 2208              		.loc 1 570 0
 2209 01fc 0323     		movs	r3, #3
 2210 01fe FB77     		strb	r3, [r7, #31]
 2211 0200 EBE3     		b	.L88
 2212              	.L103:
 571:ui.c          ****         }
 572:ui.c          ****         else if ((action == Right) || (action == Enter))
 2213              		.loc 1 572 0
 2214 0202 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2215 0204 012B     		cmp	r3, #1
 2216 0206 03D0     		beq	.L105
 2217              		.loc 1 572 0 is_stmt 0 discriminator 1
 2218 0208 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2219 020a 042B     		cmp	r3, #4
 2220 020c 40F08F81 		bne	.L106
 2221              	.L105:
 573:ui.c          ****         {
 574:ui.c          ****             if (menuPosition[2][1] == 0)
 2222              		.loc 1 574 0 is_stmt 1
 2223 0210 174B     		ldr	r3, .L165
 2224 0212 93F90530 		ldrsb	r3, [r3, #5]
 2225 0216 002B     		cmp	r3, #0
 2226 0218 3CD1     		bne	.L107
 575:ui.c          ****             {
 576:ui.c          ****                 //transpose
 577:ui.c          ****                 menuPosition[0][0] = TransposeMenu;
 2227              		.loc 1 577 0
 2228 021a 154B     		ldr	r3, .L165
 2229 021c 0522     		movs	r2, #5
 2230 021e 1A70     		strb	r2, [r3]
 578:ui.c          ****                 Decoder_1_Start();
 2231              		.loc 1 578 0
 2232 0220 FFF7FEFF 		bl	Decoder_1_Start
 579:ui.c          ****                 whatToDraw = 0;
 2233              		.loc 1 579 0
 2234 0224 0023     		movs	r3, #0
 2235 0226 FB77     		strb	r3, [r7, #31]
 580:ui.c          ****                 encoderWatch = 1;
 2236              		.loc 1 580 0
 2237 0228 154B     		ldr	r3, .L165+16
 2238 022a 0122     		movs	r2, #1
 2239 022c 1A70     		strb	r2, [r3]
 581:ui.c          ****                 OLEDclear(128, 64);
 2240              		.loc 1 581 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 52


 2241 022e 4021     		movs	r1, #64
 2242 0230 8020     		movs	r0, #128
 2243 0232 FFF7FEFF 		bl	OLEDclear
 582:ui.c          ****                 myGFX_setFont(2);
 2244              		.loc 1 582 0
 2245 0236 0220     		movs	r0, #2
 2246 0238 FFF7FEFF 		bl	myGFX_setFont
 583:ui.c          ****                 OLEDtextColor(1, 0);
 2247              		.loc 1 583 0
 2248 023c 0021     		movs	r1, #0
 2249 023e 0120     		movs	r0, #1
 2250 0240 FFF7FEFF 		bl	OLEDtextColor
 584:ui.c          ****                 OLEDwriteString("VALUE KNOB SETS", 15, 0, FirstLine);
 2251              		.loc 1 584 0
 2252 0244 0023     		movs	r3, #0
 2253 0246 0022     		movs	r2, #0
 2254 0248 0F21     		movs	r1, #15
 2255 024a 0E48     		ldr	r0, .L165+20
 2256 024c FFF7FEFF 		bl	OLEDwriteString
 585:ui.c          ****                 OLEDwriteString("TRANSPOSITION  ", 15, 0, SecondLine);
 2257              		.loc 1 585 0
 2258 0250 0123     		movs	r3, #1
 2259 0252 0022     		movs	r2, #0
 2260 0254 0F21     		movs	r1, #15
 2261 0256 0C48     		ldr	r0, .L165+24
 2262 0258 FFF7FEFF 		bl	OLEDwriteString
 586:ui.c          ****                 prevEncoderVal = 127;
 2263              		.loc 1 586 0
 2264 025c 0B4B     		ldr	r3, .L165+28
 2265 025e 7F22     		movs	r2, #127
 2266 0260 1A70     		strb	r2, [r3]
 587:ui.c          ****                 Decoder_1_SetPosition(0);
 2267              		.loc 1 587 0
 2268 0262 0020     		movs	r0, #0
 2269 0264 FFF7FEFF 		bl	Decoder_1_SetPosition
 588:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2270              		.loc 1 588 0
 2271 0268 094B     		ldr	r3, .L165+32
 2272 026a 0122     		movs	r2, #1
 2273 026c 1A70     		strb	r2, [r3]
 574:ui.c          ****             {
 2274              		.loc 1 574 0
 2275 026e B3E3     		b	.L163
 2276              	.L166:
 2277              		.align	2
 2278              	.L165:
 2279 0270 00000000 		.word	menuPosition
 2280 0274 00000000 		.word	numMainMenuItems
 2281 0278 00000000 		.word	numCalibrationItems
 2282 027c 00000000 		.word	numSettingsItems
 2283 0280 00000000 		.word	encoderWatch
 2284 0284 00010000 		.word	.LC13
 2285 0288 10010000 		.word	.LC14
 2286 028c 00000000 		.word	prevEncoderVal
 2287 0290 00000000 		.word	mainOLEDWaitingToSend
 2288              	.L107:
 589:ui.c          ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 53


 590:ui.c          ****             else if (menuPosition[2][1] == 1)
 2289              		.loc 1 590 0
 2290 0294 AB4B     		ldr	r3, .L167
 2291 0296 93F90530 		ldrsb	r3, [r3, #5]
 2292 029a 012B     		cmp	r3, #1
 2293 029c 47D1     		bne	.L109
 591:ui.c          ****             {
 592:ui.c          ****                 //octave action setting
 593:ui.c          ****                 menuPosition[0][0] = OctaveActionMenu;
 2294              		.loc 1 593 0
 2295 029e A94B     		ldr	r3, .L167
 2296 02a0 0622     		movs	r2, #6
 2297 02a2 1A70     		strb	r2, [r3]
 594:ui.c          ****                 whatToDraw = 0;
 2298              		.loc 1 594 0
 2299 02a4 0023     		movs	r3, #0
 2300 02a6 FB77     		strb	r3, [r7, #31]
 595:ui.c          ****                 OLEDclear(128, 64);
 2301              		.loc 1 595 0
 2302 02a8 4021     		movs	r1, #64
 2303 02aa 8020     		movs	r0, #128
 2304 02ac FFF7FEFF 		bl	OLEDclear
 596:ui.c          ****                 myGFX_setFont(2);
 2305              		.loc 1 596 0
 2306 02b0 0220     		movs	r0, #2
 2307 02b2 FFF7FEFF 		bl	myGFX_setFont
 597:ui.c          ****                 OLEDtextColor(1, 0);
 2308              		.loc 1 597 0
 2309 02b6 0021     		movs	r1, #0
 2310 02b8 0120     		movs	r0, #1
 2311 02ba FFF7FEFF 		bl	OLEDtextColor
 598:ui.c          ****                 OLEDwriteString("OCTAVE ACTION  ", 15, 0, FirstLine);
 2312              		.loc 1 598 0
 2313 02be 0023     		movs	r3, #0
 2314 02c0 0022     		movs	r2, #0
 2315 02c2 0F21     		movs	r1, #15
 2316 02c4 A048     		ldr	r0, .L167+4
 2317 02c6 FFF7FEFF 		bl	OLEDwriteString
 599:ui.c          ****                 OLEDtextColor(octaveAction, !octaveAction);
 2318              		.loc 1 599 0
 2319 02ca A04B     		ldr	r3, .L167+8
 2320 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2321 02ce 9AB2     		uxth	r2, r3
 2322 02d0 9E4B     		ldr	r3, .L167+8
 2323 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2324 02d4 002B     		cmp	r3, #0
 2325 02d6 0CBF     		ite	eq
 2326 02d8 0123     		moveq	r3, #1
 2327 02da 0023     		movne	r3, #0
 2328 02dc DBB2     		uxtb	r3, r3
 2329 02de 9BB2     		uxth	r3, r3
 2330 02e0 1946     		mov	r1, r3
 2331 02e2 1046     		mov	r0, r2
 2332 02e4 FFF7FEFF 		bl	OLEDtextColor
 600:ui.c          ****                 OLEDwriteString("ON NEXT NOTE   ", 15, 0, SecondLine);
 2333              		.loc 1 600 0
 2334 02e8 0123     		movs	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 54


 2335 02ea 0022     		movs	r2, #0
 2336 02ec 0F21     		movs	r1, #15
 2337 02ee 9848     		ldr	r0, .L167+12
 2338 02f0 FFF7FEFF 		bl	OLEDwriteString
 601:ui.c          ****                 OLEDtextColor(!octaveAction, octaveAction);
 2339              		.loc 1 601 0
 2340 02f4 954B     		ldr	r3, .L167+8
 2341 02f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2342 02f8 002B     		cmp	r3, #0
 2343 02fa 0CBF     		ite	eq
 2344 02fc 0123     		moveq	r3, #1
 2345 02fe 0023     		movne	r3, #0
 2346 0300 DBB2     		uxtb	r3, r3
 2347 0302 9AB2     		uxth	r2, r3
 2348 0304 914B     		ldr	r3, .L167+8
 2349 0306 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2350 0308 9BB2     		uxth	r3, r3
 2351 030a 1946     		mov	r1, r3
 2352 030c 1046     		mov	r0, r2
 2353 030e FFF7FEFF 		bl	OLEDtextColor
 602:ui.c          ****                 OLEDwriteString("IMMEDIATE      ", 15, 0, ThirdLine);
 2354              		.loc 1 602 0
 2355 0312 0223     		movs	r3, #2
 2356 0314 0022     		movs	r2, #0
 2357 0316 0F21     		movs	r1, #15
 2358 0318 8E48     		ldr	r0, .L167+16
 2359 031a FFF7FEFF 		bl	OLEDwriteString
 603:ui.c          ****                 OLEDtextColor(1, 0);
 2360              		.loc 1 603 0
 2361 031e 0021     		movs	r1, #0
 2362 0320 0120     		movs	r0, #1
 2363 0322 FFF7FEFF 		bl	OLEDtextColor
 604:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2364              		.loc 1 604 0
 2365 0326 8C4B     		ldr	r3, .L167+20
 2366 0328 0122     		movs	r2, #1
 2367 032a 1A70     		strb	r2, [r3]
 574:ui.c          ****             {
 2368              		.loc 1 574 0
 2369 032c 54E3     		b	.L163
 2370              	.L109:
 605:ui.c          ****             }
 606:ui.c          ****             else if (menuPosition[2][1] == 2)
 2371              		.loc 1 606 0
 2372 032e 854B     		ldr	r3, .L167
 2373 0330 93F90530 		ldrsb	r3, [r3, #5]
 2374 0334 022B     		cmp	r3, #2
 2375 0336 2AD1     		bne	.L110
 607:ui.c          ****             {
 608:ui.c          ****                 //dead zone setting
 609:ui.c          ****                 menuPosition[0][0] = DeadzonesMenu;
 2376              		.loc 1 609 0
 2377 0338 824B     		ldr	r3, .L167
 2378 033a 0722     		movs	r2, #7
 2379 033c 1A70     		strb	r2, [r3]
 610:ui.c          ****                 Decoder_1_Start();
 2380              		.loc 1 610 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 55


 2381 033e FFF7FEFF 		bl	Decoder_1_Start
 611:ui.c          ****                 whatToDraw = 0;
 2382              		.loc 1 611 0
 2383 0342 0023     		movs	r3, #0
 2384 0344 FB77     		strb	r3, [r7, #31]
 612:ui.c          ****                 encoderWatch = 1;
 2385              		.loc 1 612 0
 2386 0346 854B     		ldr	r3, .L167+24
 2387 0348 0122     		movs	r2, #1
 2388 034a 1A70     		strb	r2, [r3]
 613:ui.c          ****                 OLEDclear(128, 64);
 2389              		.loc 1 613 0
 2390 034c 4021     		movs	r1, #64
 2391 034e 8020     		movs	r0, #128
 2392 0350 FFF7FEFF 		bl	OLEDclear
 614:ui.c          ****                 myGFX_setFont(2);
 2393              		.loc 1 614 0
 2394 0354 0220     		movs	r0, #2
 2395 0356 FFF7FEFF 		bl	myGFX_setFont
 615:ui.c          ****                 OLEDtextColor(1, 0);
 2396              		.loc 1 615 0
 2397 035a 0021     		movs	r1, #0
 2398 035c 0120     		movs	r0, #1
 2399 035e FFF7FEFF 		bl	OLEDtextColor
 616:ui.c          ****                 OLEDwriteString("VALUE KNOB SETS", 15, 0, FirstLine);
 2400              		.loc 1 616 0
 2401 0362 0023     		movs	r3, #0
 2402 0364 0022     		movs	r2, #0
 2403 0366 0F21     		movs	r1, #15
 2404 0368 7D48     		ldr	r0, .L167+28
 2405 036a FFF7FEFF 		bl	OLEDwriteString
 617:ui.c          ****                 OLEDwriteString("LEVER DEADZONES", 15, 0, SecondLine);
 2406              		.loc 1 617 0
 2407 036e 0123     		movs	r3, #1
 2408 0370 0022     		movs	r2, #0
 2409 0372 0F21     		movs	r1, #15
 2410 0374 7B48     		ldr	r0, .L167+32
 2411 0376 FFF7FEFF 		bl	OLEDwriteString
 618:ui.c          ****                 prevEncoderVal = 127;
 2412              		.loc 1 618 0
 2413 037a 7B4B     		ldr	r3, .L167+36
 2414 037c 7F22     		movs	r2, #127
 2415 037e 1A70     		strb	r2, [r3]
 619:ui.c          ****                 Decoder_1_SetPosition(0);
 2416              		.loc 1 619 0
 2417 0380 0020     		movs	r0, #0
 2418 0382 FFF7FEFF 		bl	Decoder_1_SetPosition
 620:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2419              		.loc 1 620 0
 2420 0386 744B     		ldr	r3, .L167+20
 2421 0388 0122     		movs	r2, #1
 2422 038a 1A70     		strb	r2, [r3]
 574:ui.c          ****             {
 2423              		.loc 1 574 0
 2424 038c 24E3     		b	.L163
 2425              	.L110:
 621:ui.c          ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 56


 622:ui.c          ****             else if (menuPosition[2][1] == 3)
 2426              		.loc 1 622 0
 2427 038e 6D4B     		ldr	r3, .L167
 2428 0390 93F90530 		ldrsb	r3, [r3, #5]
 2429 0394 032B     		cmp	r3, #3
 2430 0396 33D1     		bne	.L111
 623:ui.c          ****             {
 624:ui.c          ****                 //dead zone setting
 625:ui.c          ****                 menuPosition[0][0] = SliderRepMenu;
 2431              		.loc 1 625 0
 2432 0398 6A4B     		ldr	r3, .L167
 2433 039a 0822     		movs	r2, #8
 2434 039c 1A70     		strb	r2, [r3]
 626:ui.c          ****                 Decoder_1_Start();
 2435              		.loc 1 626 0
 2436 039e FFF7FEFF 		bl	Decoder_1_Start
 627:ui.c          ****                 whatToDraw = 0;
 2437              		.loc 1 627 0
 2438 03a2 0023     		movs	r3, #0
 2439 03a4 FB77     		strb	r3, [r7, #31]
 628:ui.c          ****                 encoderWatch = 1;
 2440              		.loc 1 628 0
 2441 03a6 6D4B     		ldr	r3, .L167+24
 2442 03a8 0122     		movs	r2, #1
 2443 03aa 1A70     		strb	r2, [r3]
 629:ui.c          ****                 OLEDclear(128, 64);
 2444              		.loc 1 629 0
 2445 03ac 4021     		movs	r1, #64
 2446 03ae 8020     		movs	r0, #128
 2447 03b0 FFF7FEFF 		bl	OLEDclear
 630:ui.c          ****                 myGFX_setFont(2);
 2448              		.loc 1 630 0
 2449 03b4 0220     		movs	r0, #2
 2450 03b6 FFF7FEFF 		bl	myGFX_setFont
 631:ui.c          ****                 OLEDtextColor(1, 0);
 2451              		.loc 1 631 0
 2452 03ba 0021     		movs	r1, #0
 2453 03bc 0120     		movs	r0, #1
 2454 03be FFF7FEFF 		bl	OLEDtextColor
 632:ui.c          ****                 OLEDwriteString("SET WHICH      ", 15, 0, FirstLine);
 2455              		.loc 1 632 0
 2456 03c2 0023     		movs	r3, #0
 2457 03c4 0022     		movs	r2, #0
 2458 03c6 0F21     		movs	r1, #15
 2459 03c8 6848     		ldr	r0, .L167+40
 2460 03ca FFF7FEFF 		bl	OLEDwriteString
 633:ui.c          ****                 OLEDwriteString("STRINGS SLIDERS", 15, 0, SecondLine);
 2461              		.loc 1 633 0
 2462 03ce 0123     		movs	r3, #1
 2463 03d0 0022     		movs	r2, #0
 2464 03d2 0F21     		movs	r1, #15
 2465 03d4 6648     		ldr	r0, .L167+44
 2466 03d6 FFF7FEFF 		bl	OLEDwriteString
 634:ui.c          ****                 OLEDwriteString("REPRESENT(1-10)", 15, 0, ThirdLine);
 2467              		.loc 1 634 0
 2468 03da 0223     		movs	r3, #2
 2469 03dc 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 57


 2470 03de 0F21     		movs	r1, #15
 2471 03e0 6448     		ldr	r0, .L167+48
 2472 03e2 FFF7FEFF 		bl	OLEDwriteString
 635:ui.c          ****                 prevEncoderVal = 127;
 2473              		.loc 1 635 0
 2474 03e6 604B     		ldr	r3, .L167+36
 2475 03e8 7F22     		movs	r2, #127
 2476 03ea 1A70     		strb	r2, [r3]
 636:ui.c          ****                 Decoder_1_SetPosition(0);
 2477              		.loc 1 636 0
 2478 03ec 0020     		movs	r0, #0
 2479 03ee FFF7FEFF 		bl	Decoder_1_SetPosition
 637:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2480              		.loc 1 637 0
 2481 03f2 594B     		ldr	r3, .L167+20
 2482 03f4 0122     		movs	r2, #1
 2483 03f6 1A70     		strb	r2, [r3]
 638:ui.c          ****                 editingSliderRepString = 0;
 2484              		.loc 1 638 0
 2485 03f8 5F4B     		ldr	r3, .L167+52
 2486 03fa 0022     		movs	r2, #0
 2487 03fc 1A70     		strb	r2, [r3]
 574:ui.c          ****             {
 2488              		.loc 1 574 0
 2489 03fe EBE2     		b	.L163
 2490              	.L111:
 639:ui.c          ****             }
 640:ui.c          ****             else if (menuPosition[2][1] == 5)
 2491              		.loc 1 640 0
 2492 0400 504B     		ldr	r3, .L167
 2493 0402 93F90530 		ldrsb	r3, [r3, #5]
 2494 0406 052B     		cmp	r3, #5
 2495 0408 40F0E682 		bne	.L163
 641:ui.c          ****             {
 642:ui.c          ****                 //midi send setting
 643:ui.c          ****                 menuPosition[0][0] = MidiSendMenu;
 2496              		.loc 1 643 0
 2497 040c 4D4B     		ldr	r3, .L167
 2498 040e 0922     		movs	r2, #9
 2499 0410 1A70     		strb	r2, [r3]
 644:ui.c          ****                 whatToDraw = 0;
 2500              		.loc 1 644 0
 2501 0412 0023     		movs	r3, #0
 2502 0414 FB77     		strb	r3, [r7, #31]
 645:ui.c          ****                 OLEDclear(128, 64);
 2503              		.loc 1 645 0
 2504 0416 4021     		movs	r1, #64
 2505 0418 8020     		movs	r0, #128
 2506 041a FFF7FEFF 		bl	OLEDclear
 646:ui.c          ****                 myGFX_setFont(2);
 2507              		.loc 1 646 0
 2508 041e 0220     		movs	r0, #2
 2509 0420 FFF7FEFF 		bl	myGFX_setFont
 647:ui.c          ****                 OLEDtextColor(1, 0);
 2510              		.loc 1 647 0
 2511 0424 0021     		movs	r1, #0
 2512 0426 0120     		movs	r0, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 58


 2513 0428 FFF7FEFF 		bl	OLEDtextColor
 648:ui.c          ****                 OLEDwriteString("SEND MIDI ", 10, 0, FirstLine);
 2514              		.loc 1 648 0
 2515 042c 0023     		movs	r3, #0
 2516 042e 0022     		movs	r2, #0
 2517 0430 0A21     		movs	r1, #10
 2518 0432 5248     		ldr	r0, .L167+56
 2519 0434 FFF7FEFF 		bl	OLEDwriteString
 649:ui.c          ****                 GFXfillRect(&theGFX, 76, 0, 37, 16, !whichMidiSendSelected);
 2520              		.loc 1 649 0
 2521 0438 514B     		ldr	r3, .L167+60
 2522 043a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2523 043c 002B     		cmp	r3, #0
 2524 043e 0CBF     		ite	eq
 2525 0440 0123     		moveq	r3, #1
 2526 0442 0023     		movne	r3, #0
 2527 0444 DBB2     		uxtb	r3, r3
 2528 0446 9BB2     		uxth	r3, r3
 2529 0448 0193     		str	r3, [sp, #4]
 2530 044a 1023     		movs	r3, #16
 2531 044c 0093     		str	r3, [sp]
 2532 044e 2523     		movs	r3, #37
 2533 0450 0022     		movs	r2, #0
 2534 0452 4C21     		movs	r1, #76
 2535 0454 4B48     		ldr	r0, .L167+64
 2536 0456 FFF7FEFF 		bl	GFXfillRect
 650:ui.c          ****                 OLEDtextColor(whichMidiSendSelected, !whichMidiSendSelected);
 2537              		.loc 1 650 0
 2538 045a 494B     		ldr	r3, .L167+60
 2539 045c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2540 045e 9AB2     		uxth	r2, r3
 2541 0460 474B     		ldr	r3, .L167+60
 2542 0462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2543 0464 002B     		cmp	r3, #0
 2544 0466 0CBF     		ite	eq
 2545 0468 0123     		moveq	r3, #1
 2546 046a 0023     		movne	r3, #0
 2547 046c DBB2     		uxtb	r3, r3
 2548 046e 9BB2     		uxth	r3, r3
 2549 0470 1946     		mov	r1, r3
 2550 0472 1046     		mov	r0, r2
 2551 0474 FFF7FEFF 		bl	OLEDtextColor
 651:ui.c          ****                 if (midiSendOn)
 2552              		.loc 1 651 0
 2553 0478 434B     		ldr	r3, .L167+68
 2554 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2555 047c 002B     		cmp	r3, #0
 2556 047e 08D0     		beq	.L112
 652:ui.c          ****                 {
 653:ui.c          ****                     GFXwrite(&theGFX, 79);
 2557              		.loc 1 653 0
 2558 0480 4F21     		movs	r1, #79
 2559 0482 4048     		ldr	r0, .L167+64
 2560 0484 FFF7FEFF 		bl	GFXwrite
 654:ui.c          ****                     GFXwrite(&theGFX, 78);
 2561              		.loc 1 654 0
 2562 0488 4E21     		movs	r1, #78
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 59


 2563 048a 3E48     		ldr	r0, .L167+64
 2564 048c FFF7FEFF 		bl	GFXwrite
 2565 0490 0BE0     		b	.L113
 2566              	.L112:
 655:ui.c          ****                 }
 656:ui.c          ****                 else
 657:ui.c          ****                 {
 658:ui.c          ****                     GFXwrite(&theGFX, 79);
 2567              		.loc 1 658 0
 2568 0492 4F21     		movs	r1, #79
 2569 0494 3B48     		ldr	r0, .L167+64
 2570 0496 FFF7FEFF 		bl	GFXwrite
 659:ui.c          ****                     GFXwrite(&theGFX, 70);
 2571              		.loc 1 659 0
 2572 049a 4621     		movs	r1, #70
 2573 049c 3948     		ldr	r0, .L167+64
 2574 049e FFF7FEFF 		bl	GFXwrite
 660:ui.c          ****                     GFXwrite(&theGFX, 70);
 2575              		.loc 1 660 0
 2576 04a2 4621     		movs	r1, #70
 2577 04a4 3748     		ldr	r0, .L167+64
 2578 04a6 FFF7FEFF 		bl	GFXwrite
 2579              	.L113:
 661:ui.c          ****                 }
 662:ui.c          ****                 
 663:ui.c          ****                 OLEDtextColor(1, 0);
 2580              		.loc 1 663 0
 2581 04aa 0021     		movs	r1, #0
 2582 04ac 0120     		movs	r0, #1
 2583 04ae FFF7FEFF 		bl	OLEDtextColor
 664:ui.c          ****                 OLEDwriteString("SEND BAR  ", 10, 0, SecondLine);
 2584              		.loc 1 664 0
 2585 04b2 0123     		movs	r3, #1
 2586 04b4 0022     		movs	r2, #0
 2587 04b6 0A21     		movs	r1, #10
 2588 04b8 3448     		ldr	r0, .L167+72
 2589 04ba FFF7FEFF 		bl	OLEDwriteString
 665:ui.c          ****                 
 666:ui.c          ****                 GFXfillRect(&theGFX, 76, 16, 37, 16, whichMidiSendSelected);
 2590              		.loc 1 666 0
 2591 04be 304B     		ldr	r3, .L167+60
 2592 04c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2593 04c2 9BB2     		uxth	r3, r3
 2594 04c4 0193     		str	r3, [sp, #4]
 2595 04c6 1023     		movs	r3, #16
 2596 04c8 0093     		str	r3, [sp]
 2597 04ca 2523     		movs	r3, #37
 2598 04cc 1022     		movs	r2, #16
 2599 04ce 4C21     		movs	r1, #76
 2600 04d0 2C48     		ldr	r0, .L167+64
 2601 04d2 FFF7FEFF 		bl	GFXfillRect
 667:ui.c          ****                 OLEDtextColor(!whichMidiSendSelected, whichMidiSendSelected);
 2602              		.loc 1 667 0
 2603 04d6 2A4B     		ldr	r3, .L167+60
 2604 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2605 04da 002B     		cmp	r3, #0
 2606 04dc 0CBF     		ite	eq
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 60


 2607 04de 0123     		moveq	r3, #1
 2608 04e0 0023     		movne	r3, #0
 2609 04e2 DBB2     		uxtb	r3, r3
 2610 04e4 9AB2     		uxth	r2, r3
 2611 04e6 264B     		ldr	r3, .L167+60
 2612 04e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2613 04ea 9BB2     		uxth	r3, r3
 2614 04ec 1946     		mov	r1, r3
 2615 04ee 1046     		mov	r0, r2
 2616 04f0 FFF7FEFF 		bl	OLEDtextColor
 668:ui.c          ****                 if (midiBarSendOn)
 2617              		.loc 1 668 0
 2618 04f4 264B     		ldr	r3, .L167+76
 2619 04f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2620 04f8 002B     		cmp	r3, #0
 2621 04fa 08D0     		beq	.L114
 669:ui.c          ****                 {
 670:ui.c          ****                     GFXwrite(&theGFX, 79);
 2622              		.loc 1 670 0
 2623 04fc 4F21     		movs	r1, #79
 2624 04fe 2148     		ldr	r0, .L167+64
 2625 0500 FFF7FEFF 		bl	GFXwrite
 671:ui.c          ****                     GFXwrite(&theGFX, 78);
 2626              		.loc 1 671 0
 2627 0504 4E21     		movs	r1, #78
 2628 0506 1F48     		ldr	r0, .L167+64
 2629 0508 FFF7FEFF 		bl	GFXwrite
 2630 050c 0BE0     		b	.L115
 2631              	.L114:
 672:ui.c          ****                 }
 673:ui.c          ****                 else
 674:ui.c          ****                 {
 675:ui.c          ****                     GFXwrite(&theGFX, 79);
 2632              		.loc 1 675 0
 2633 050e 4F21     		movs	r1, #79
 2634 0510 1C48     		ldr	r0, .L167+64
 2635 0512 FFF7FEFF 		bl	GFXwrite
 676:ui.c          ****                     GFXwrite(&theGFX, 70);
 2636              		.loc 1 676 0
 2637 0516 4621     		movs	r1, #70
 2638 0518 1A48     		ldr	r0, .L167+64
 2639 051a FFF7FEFF 		bl	GFXwrite
 677:ui.c          ****                     GFXwrite(&theGFX, 70);
 2640              		.loc 1 677 0
 2641 051e 4621     		movs	r1, #70
 2642 0520 1848     		ldr	r0, .L167+64
 2643 0522 FFF7FEFF 		bl	GFXwrite
 2644              	.L115:
 678:ui.c          ****                 }
 679:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2645              		.loc 1 679 0
 2646 0526 0C4B     		ldr	r3, .L167+20
 2647 0528 0122     		movs	r2, #1
 2648 052a 1A70     		strb	r2, [r3]
 574:ui.c          ****             {
 2649              		.loc 1 574 0
 2650 052c 54E2     		b	.L163
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 61


 2651              	.L106:
 680:ui.c          ****             }
 681:ui.c          ****         }
 682:ui.c          ****         else if (action == Left) 
 2652              		.loc 1 682 0
 2653 052e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2654 0530 002B     		cmp	r3, #0
 2655 0532 40F05282 		bne	.L88
 683:ui.c          ****         {
 684:ui.c          ****             //go back to main menu
 685:ui.c          ****             menuPosition[0][0] = MainMenu;
 2656              		.loc 1 685 0
 2657 0536 034B     		ldr	r3, .L167
 2658 0538 0022     		movs	r2, #0
 2659 053a 1A70     		strb	r2, [r3]
 686:ui.c          ****             whatToDraw = 1;
 2660              		.loc 1 686 0
 2661 053c 0123     		movs	r3, #1
 2662 053e FB77     		strb	r3, [r7, #31]
 2663 0540 4BE2     		b	.L88
 2664              	.L168:
 2665 0542 00BF     		.align	2
 2666              	.L167:
 2667 0544 00000000 		.word	menuPosition
 2668 0548 20010000 		.word	.LC15
 2669 054c 00000000 		.word	octaveAction
 2670 0550 30010000 		.word	.LC16
 2671 0554 40010000 		.word	.LC17
 2672 0558 00000000 		.word	mainOLEDWaitingToSend
 2673 055c 00000000 		.word	encoderWatch
 2674 0560 00010000 		.word	.LC13
 2675 0564 50010000 		.word	.LC18
 2676 0568 00000000 		.word	prevEncoderVal
 2677 056c 60010000 		.word	.LC19
 2678 0570 70010000 		.word	.LC20
 2679 0574 80010000 		.word	.LC21
 2680 0578 00000000 		.word	editingSliderRepString
 2681 057c 90010000 		.word	.LC22
 2682 0580 00000000 		.word	whichMidiSendSelected
 2683 0584 00000000 		.word	theGFX
 2684 0588 00000000 		.word	midiSendOn
 2685 058c 9C010000 		.word	.LC23
 2686 0590 00000000 		.word	midiBarSendOn
 2687              	.L99:
 687:ui.c          ****         }
 688:ui.c          ****     }
 689:ui.c          ****     
 690:ui.c          ****     else if (menuPosition[0][0] == CalibrateLeversMenu) //we are in lever calibration
 2688              		.loc 1 690 0
 2689 0594 AD4B     		ldr	r3, .L169
 2690 0596 93F90030 		ldrsb	r3, [r3]
 2691 059a 032B     		cmp	r3, #3
 2692 059c 31D1     		bne	.L116
 691:ui.c          ****     {
 692:ui.c          ****         if ((action == Right) || (action == Enter))
 2693              		.loc 1 692 0
 2694 059e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 62


 2695 05a0 012B     		cmp	r3, #1
 2696 05a2 03D0     		beq	.L117
 2697              		.loc 1 692 0 is_stmt 0 discriminator 1
 2698 05a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2699 05a6 042B     		cmp	r3, #4
 2700 05a8 40F01782 		bne	.L88
 2701              	.L117:
 693:ui.c          ****         {
 694:ui.c          ****             OLEDclear(128, 64);
 2702              		.loc 1 694 0 is_stmt 1
 2703 05ac 4021     		movs	r1, #64
 2704 05ae 8020     		movs	r0, #128
 2705 05b0 FFF7FEFF 		bl	OLEDclear
 695:ui.c          ****             myGFX_setFont(2);
 2706              		.loc 1 695 0
 2707 05b4 0220     		movs	r0, #2
 2708 05b6 FFF7FEFF 		bl	myGFX_setFont
 696:ui.c          ****             OLEDtextColor(0, 1);
 2709              		.loc 1 696 0
 2710 05ba 0121     		movs	r1, #1
 2711 05bc 0020     		movs	r0, #0
 2712 05be FFF7FEFF 		bl	OLEDtextColor
 697:ui.c          ****             OLEDwriteString("NOW PUT ALL", 11, 1, FirstLine);
 2713              		.loc 1 697 0
 2714 05c2 0023     		movs	r3, #0
 2715 05c4 0122     		movs	r2, #1
 2716 05c6 0B21     		movs	r1, #11
 2717 05c8 A148     		ldr	r0, .L169+4
 2718 05ca FFF7FEFF 		bl	OLEDwriteString
 698:ui.c          ****             OLEDwriteString("PEDALS/LEVERS  ", 15, 1, SecondLine);
 2719              		.loc 1 698 0
 2720 05ce 0123     		movs	r3, #1
 2721 05d0 0122     		movs	r2, #1
 2722 05d2 0F21     		movs	r1, #15
 2723 05d4 9F48     		ldr	r0, .L169+8
 2724 05d6 FFF7FEFF 		bl	OLEDwriteString
 699:ui.c          ****             OLEDwriteString("IN RESTING STATE", 16, 1, ThirdLine);
 2725              		.loc 1 699 0
 2726 05da 0223     		movs	r3, #2
 2727 05dc 0122     		movs	r2, #1
 2728 05de 1021     		movs	r1, #16
 2729 05e0 9D48     		ldr	r0, .L169+12
 2730 05e2 FFF7FEFF 		bl	OLEDwriteString
 700:ui.c          ****             OLEDwriteString("AND PRESS EDIT", 14, 1, FourthLine);
 2731              		.loc 1 700 0
 2732 05e6 0323     		movs	r3, #3
 2733 05e8 0122     		movs	r2, #1
 2734 05ea 0E21     		movs	r1, #14
 2735 05ec 9B48     		ldr	r0, .L169+16
 2736 05ee FFF7FEFF 		bl	OLEDwriteString
 701:ui.c          ****             mainOLEDWaitingToSend = 1;
 2737              		.loc 1 701 0
 2738 05f2 9B4B     		ldr	r3, .L169+20
 2739 05f4 0122     		movs	r2, #1
 2740 05f6 1A70     		strb	r2, [r3]
 702:ui.c          ****             OLEDtextColor(1, 0);
 2741              		.loc 1 702 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 63


 2742 05f8 0021     		movs	r1, #0
 2743 05fa 0120     		movs	r0, #1
 2744 05fc FFF7FEFF 		bl	OLEDtextColor
 2745 0600 EBE1     		b	.L88
 2746              	.L116:
 703:ui.c          ****         }
 704:ui.c          ****     }
 705:ui.c          ****     else if (menuPosition[0][0] == CalibrateFretsMenu) //we are in fret calibration
 2747              		.loc 1 705 0
 2748 0602 924B     		ldr	r3, .L169
 2749 0604 93F90030 		ldrsb	r3, [r3]
 2750 0608 042B     		cmp	r3, #4
 2751 060a 36D1     		bne	.L119
 706:ui.c          ****     {
 707:ui.c          ****         //when user presses -> button, then store the current fret and increment which fret to stor
 708:ui.c          ****         if ((action == Right) || (action == Enter))
 2752              		.loc 1 708 0
 2753 060c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2754 060e 012B     		cmp	r3, #1
 2755 0610 03D0     		beq	.L120
 2756              		.loc 1 708 0 is_stmt 0 discriminator 1
 2757 0612 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2758 0614 042B     		cmp	r3, #4
 2759 0616 40F0E081 		bne	.L88
 2760              	.L120:
 709:ui.c          ****         {
 710:ui.c          ****             fretMeasurements[0][fretToCalibrate] = bar[0];
 2761              		.loc 1 710 0 is_stmt 1
 2762 061a 924B     		ldr	r3, .L169+24
 2763 061c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2764 061e 1A46     		mov	r2, r3
 2765 0620 914B     		ldr	r3, .L169+28
 2766 0622 1B88     		ldrh	r3, [r3]	@ movhi
 2767 0624 99B2     		uxth	r1, r3
 2768 0626 914B     		ldr	r3, .L169+32
 2769 0628 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 711:ui.c          ****             fretMeasurements[1][fretToCalibrate] = bar[1];
 2770              		.loc 1 711 0
 2771 062c 8D4B     		ldr	r3, .L169+24
 2772 062e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773 0630 1846     		mov	r0, r3
 2774 0632 8D4B     		ldr	r3, .L169+28
 2775 0634 5B88     		ldrh	r3, [r3, #2]	@ movhi
 2776 0636 99B2     		uxth	r1, r3
 2777 0638 8C4A     		ldr	r2, .L169+32
 2778 063a 00F10C03 		add	r3, r0, #12
 2779 063e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 712:ui.c          ****             fretToCalibrate++;
 2780              		.loc 1 712 0
 2781 0642 884B     		ldr	r3, .L169+24
 2782 0644 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2783 0646 0133     		adds	r3, r3, #1
 2784 0648 DAB2     		uxtb	r2, r3
 2785 064a 864B     		ldr	r3, .L169+24
 2786 064c 1A70     		strb	r2, [r3]
 713:ui.c          ****             if (fretToCalibrate == NUM_FRET_MEASUREMENTS)
 2787              		.loc 1 713 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 64


 2788 064e 854B     		ldr	r3, .L169+24
 2789 0650 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2790 0652 0C2B     		cmp	r3, #12
 2791 0654 02D1     		bne	.L122
 714:ui.c          ****             {
 715:ui.c          ****                 exitFretCalibrationMode();
 2792              		.loc 1 715 0
 2793 0656 FFF7FEFF 		bl	exitFretCalibrationMode
 2794 065a BEE1     		b	.L88
 2795              	.L122:
 716:ui.c          ****             }
 717:ui.c          ****             else
 718:ui.c          ****             {
 719:ui.c          ****                OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 2796              		.loc 1 719 0
 2797 065c 814B     		ldr	r3, .L169+24
 2798 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2799 0660 1A46     		mov	r2, r3
 2800 0662 834B     		ldr	r3, .L169+36
 2801 0664 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2802 0666 1846     		mov	r0, r3
 2803 0668 0223     		movs	r3, #2
 2804 066a 2822     		movs	r2, #40
 2805 066c 0221     		movs	r1, #2
 2806 066e FFF7FEFF 		bl	OLEDwriteInt
 720:ui.c          ****                mainOLEDWaitingToSend = 1;
 2807              		.loc 1 720 0
 2808 0672 7B4B     		ldr	r3, .L169+20
 2809 0674 0122     		movs	r2, #1
 2810 0676 1A70     		strb	r2, [r3]
 2811 0678 AFE1     		b	.L88
 2812              	.L119:
 721:ui.c          ****             }
 722:ui.c          ****         }
 723:ui.c          ****     }
 724:ui.c          ****     else if (menuPosition[0][0] == TransposeMenu) //we are in transpose
 2813              		.loc 1 724 0
 2814 067a 744B     		ldr	r3, .L169
 2815 067c 93F90030 		ldrsb	r3, [r3]
 2816 0680 052B     		cmp	r3, #5
 2817 0682 20D1     		bne	.L123
 725:ui.c          ****     {
 726:ui.c          ****         
 727:ui.c          ****         if (action == Right)
 2818              		.loc 1 727 0
 2819 0684 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2820 0686 012B     		cmp	r3, #1
 2821 0688 0CD1     		bne	.L124
 728:ui.c          ****         {
 729:ui.c          ****             semitonesOrCents = (semitonesOrCents+1)&1;
 2822              		.loc 1 729 0
 2823 068a 7A4B     		ldr	r3, .L169+40
 2824 068c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2825 068e 0133     		adds	r3, r3, #1
 2826 0690 DBB2     		uxtb	r3, r3
 2827 0692 03F00103 		and	r3, r3, #1
 2828 0696 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 65


 2829 0698 764B     		ldr	r3, .L169+40
 2830 069a 1A70     		strb	r2, [r3]
 730:ui.c          ****             prevEncoderVal = 127;
 2831              		.loc 1 730 0
 2832 069c 764B     		ldr	r3, .L169+44
 2833 069e 7F22     		movs	r2, #127
 2834 06a0 1A70     		strb	r2, [r3]
 2835 06a2 9AE1     		b	.L88
 2836              	.L124:
 731:ui.c          ****         }
 732:ui.c          ****         else if (action == Left)
 2837              		.loc 1 732 0
 2838 06a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2839 06a6 002B     		cmp	r3, #0
 2840 06a8 40F09781 		bne	.L88
 733:ui.c          ****         {
 734:ui.c          ****             semitonesOrCents = (semitonesOrCents-1)&1;
 2841              		.loc 1 734 0
 2842 06ac 714B     		ldr	r3, .L169+40
 2843 06ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2844 06b0 013B     		subs	r3, r3, #1
 2845 06b2 DBB2     		uxtb	r3, r3
 2846 06b4 03F00103 		and	r3, r3, #1
 2847 06b8 DAB2     		uxtb	r2, r3
 2848 06ba 6E4B     		ldr	r3, .L169+40
 2849 06bc 1A70     		strb	r2, [r3]
 735:ui.c          ****             prevEncoderVal = 127;
 2850              		.loc 1 735 0
 2851 06be 6E4B     		ldr	r3, .L169+44
 2852 06c0 7F22     		movs	r2, #127
 2853 06c2 1A70     		strb	r2, [r3]
 2854 06c4 89E1     		b	.L88
 2855              	.L123:
 736:ui.c          ****         }
 737:ui.c          ****     }
 738:ui.c          ****     else if (menuPosition[0][0] == OctaveActionMenu) //we are in octave action
 2856              		.loc 1 738 0
 2857 06c6 614B     		ldr	r3, .L169
 2858 06c8 93F90030 		ldrsb	r3, [r3]
 2859 06cc 062B     		cmp	r3, #6
 2860 06ce 5AD1     		bne	.L126
 739:ui.c          ****     {
 740:ui.c          ****         
 741:ui.c          ****         if (action == Up)
 2861              		.loc 1 741 0
 2862 06d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2863 06d2 032B     		cmp	r3, #3
 2864 06d4 09D1     		bne	.L127
 742:ui.c          ****         {
 743:ui.c          ****             octaveAction = (octaveAction+1)&1;
 2865              		.loc 1 743 0
 2866 06d6 694B     		ldr	r3, .L169+48
 2867 06d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2868 06da 0133     		adds	r3, r3, #1
 2869 06dc DBB2     		uxtb	r3, r3
 2870 06de 03F00103 		and	r3, r3, #1
 2871 06e2 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 66


 2872 06e4 654B     		ldr	r3, .L169+48
 2873 06e6 1A70     		strb	r2, [r3]
 2874 06e8 14E0     		b	.L128
 2875              	.L127:
 744:ui.c          ****         }
 745:ui.c          ****         else if (action == Down)
 2876              		.loc 1 745 0
 2877 06ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2878 06ec 022B     		cmp	r3, #2
 2879 06ee 09D1     		bne	.L129
 746:ui.c          ****         {
 747:ui.c          ****             octaveAction = (octaveAction-1)&1;
 2880              		.loc 1 747 0
 2881 06f0 624B     		ldr	r3, .L169+48
 2882 06f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2883 06f4 013B     		subs	r3, r3, #1
 2884 06f6 DBB2     		uxtb	r3, r3
 2885 06f8 03F00103 		and	r3, r3, #1
 2886 06fc DAB2     		uxtb	r2, r3
 2887 06fe 5F4B     		ldr	r3, .L169+48
 2888 0700 1A70     		strb	r2, [r3]
 2889 0702 07E0     		b	.L128
 2890              	.L129:
 748:ui.c          ****         }
 749:ui.c          ****         
 750:ui.c          ****          else if (action == Left) 
 2891              		.loc 1 750 0
 2892 0704 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2893 0706 002B     		cmp	r3, #0
 2894 0708 04D1     		bne	.L128
 751:ui.c          ****         {
 752:ui.c          ****             //go back to main menu
 753:ui.c          ****             menuPosition[0][0] = SettingsMenu;
 2895              		.loc 1 753 0
 2896 070a 504B     		ldr	r3, .L169
 2897 070c 0222     		movs	r2, #2
 2898 070e 1A70     		strb	r2, [r3]
 754:ui.c          ****             whatToDraw = 1;
 2899              		.loc 1 754 0
 2900 0710 0123     		movs	r3, #1
 2901 0712 FB77     		strb	r3, [r7, #31]
 2902              	.L128:
 755:ui.c          ****         }
 756:ui.c          ****         
 757:ui.c          ****         myGFX_setFont(2);
 2903              		.loc 1 757 0
 2904 0714 0220     		movs	r0, #2
 2905 0716 FFF7FEFF 		bl	myGFX_setFont
 758:ui.c          ****         OLEDtextColor(1, 0);
 2906              		.loc 1 758 0
 2907 071a 0021     		movs	r1, #0
 2908 071c 0120     		movs	r0, #1
 2909 071e FFF7FEFF 		bl	OLEDtextColor
 759:ui.c          ****         OLEDtextColor(octaveAction, !octaveAction);
 2910              		.loc 1 759 0
 2911 0722 564B     		ldr	r3, .L169+48
 2912 0724 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 67


 2913 0726 9AB2     		uxth	r2, r3
 2914 0728 544B     		ldr	r3, .L169+48
 2915 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2916 072c 002B     		cmp	r3, #0
 2917 072e 0CBF     		ite	eq
 2918 0730 0123     		moveq	r3, #1
 2919 0732 0023     		movne	r3, #0
 2920 0734 DBB2     		uxtb	r3, r3
 2921 0736 9BB2     		uxth	r3, r3
 2922 0738 1946     		mov	r1, r3
 2923 073a 1046     		mov	r0, r2
 2924 073c FFF7FEFF 		bl	OLEDtextColor
 760:ui.c          ****         OLEDwriteString("ON NEXT NOTE   ", 15, 0, SecondLine);
 2925              		.loc 1 760 0
 2926 0740 0123     		movs	r3, #1
 2927 0742 0022     		movs	r2, #0
 2928 0744 0F21     		movs	r1, #15
 2929 0746 4E48     		ldr	r0, .L169+52
 2930 0748 FFF7FEFF 		bl	OLEDwriteString
 761:ui.c          ****         OLEDtextColor(!octaveAction, octaveAction);
 2931              		.loc 1 761 0
 2932 074c 4B4B     		ldr	r3, .L169+48
 2933 074e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2934 0750 002B     		cmp	r3, #0
 2935 0752 0CBF     		ite	eq
 2936 0754 0123     		moveq	r3, #1
 2937 0756 0023     		movne	r3, #0
 2938 0758 DBB2     		uxtb	r3, r3
 2939 075a 9AB2     		uxth	r2, r3
 2940 075c 474B     		ldr	r3, .L169+48
 2941 075e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2942 0760 9BB2     		uxth	r3, r3
 2943 0762 1946     		mov	r1, r3
 2944 0764 1046     		mov	r0, r2
 2945 0766 FFF7FEFF 		bl	OLEDtextColor
 762:ui.c          ****         OLEDwriteString("IMMEDIATE      ", 15, 0, ThirdLine);
 2946              		.loc 1 762 0
 2947 076a 0223     		movs	r3, #2
 2948 076c 0022     		movs	r2, #0
 2949 076e 0F21     		movs	r1, #15
 2950 0770 4448     		ldr	r0, .L169+56
 2951 0772 FFF7FEFF 		bl	OLEDwriteString
 763:ui.c          ****         OLEDtextColor(1, 0);
 2952              		.loc 1 763 0
 2953 0776 0021     		movs	r1, #0
 2954 0778 0120     		movs	r0, #1
 2955 077a FFF7FEFF 		bl	OLEDtextColor
 764:ui.c          ****         mainOLEDWaitingToSend = 1;
 2956              		.loc 1 764 0
 2957 077e 384B     		ldr	r3, .L169+20
 2958 0780 0122     		movs	r2, #1
 2959 0782 1A70     		strb	r2, [r3]
 2960 0784 29E1     		b	.L88
 2961              	.L126:
 765:ui.c          ****     }
 766:ui.c          **** 
 767:ui.c          ****     else if (menuPosition[0][0] == SliderRepMenu) //we are in sliderRep
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 68


 2962              		.loc 1 767 0
 2963 0786 314B     		ldr	r3, .L169
 2964 0788 93F90030 		ldrsb	r3, [r3]
 2965 078c 082B     		cmp	r3, #8
 2966 078e 20D1     		bne	.L130
 768:ui.c          ****     {
 769:ui.c          ****        
 770:ui.c          ****         if (action == Right)
 2967              		.loc 1 770 0
 2968 0790 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2969 0792 012B     		cmp	r3, #1
 2970 0794 0CD1     		bne	.L131
 771:ui.c          ****         {
 772:ui.c          ****             editingSliderRepString = (editingSliderRepString+1)&1;
 2971              		.loc 1 772 0
 2972 0796 3C4B     		ldr	r3, .L169+60
 2973 0798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2974 079a 0133     		adds	r3, r3, #1
 2975 079c DBB2     		uxtb	r3, r3
 2976 079e 03F00103 		and	r3, r3, #1
 2977 07a2 DAB2     		uxtb	r2, r3
 2978 07a4 384B     		ldr	r3, .L169+60
 2979 07a6 1A70     		strb	r2, [r3]
 773:ui.c          ****             prevEncoderVal = 127;
 2980              		.loc 1 773 0
 2981 07a8 334B     		ldr	r3, .L169+44
 2982 07aa 7F22     		movs	r2, #127
 2983 07ac 1A70     		strb	r2, [r3]
 2984 07ae 14E1     		b	.L88
 2985              	.L131:
 774:ui.c          ****         }
 775:ui.c          ****         else if (action == Left)
 2986              		.loc 1 775 0
 2987 07b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2988 07b2 002B     		cmp	r3, #0
 2989 07b4 40F01181 		bne	.L88
 776:ui.c          ****         {
 777:ui.c          ****             editingSliderRepString = (editingSliderRepString-1)&1;
 2990              		.loc 1 777 0
 2991 07b8 334B     		ldr	r3, .L169+60
 2992 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2993 07bc 013B     		subs	r3, r3, #1
 2994 07be DBB2     		uxtb	r3, r3
 2995 07c0 03F00103 		and	r3, r3, #1
 2996 07c4 DAB2     		uxtb	r2, r3
 2997 07c6 304B     		ldr	r3, .L169+60
 2998 07c8 1A70     		strb	r2, [r3]
 778:ui.c          ****             prevEncoderVal = 127;
 2999              		.loc 1 778 0
 3000 07ca 2B4B     		ldr	r3, .L169+44
 3001 07cc 7F22     		movs	r2, #127
 3002 07ce 1A70     		strb	r2, [r3]
 3003 07d0 03E1     		b	.L88
 3004              	.L130:
 779:ui.c          ****         }
 780:ui.c          ****     }
 781:ui.c          ****     else if (menuPosition[0][0] == MidiSendMenu) //we are in midisend menu
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 69


 3005              		.loc 1 781 0
 3006 07d2 1E4B     		ldr	r3, .L169
 3007 07d4 93F90030 		ldrsb	r3, [r3]
 3008 07d8 092B     		cmp	r3, #9
 3009 07da 40F0FE80 		bne	.L88
 782:ui.c          ****     {
 783:ui.c          ****         
 784:ui.c          ****         if (action == Right)
 3010              		.loc 1 784 0
 3011 07de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3012 07e0 012B     		cmp	r3, #1
 3013 07e2 17D1     		bne	.L133
 785:ui.c          ****         {
 786:ui.c          ****             if (!whichMidiSendSelected)
 3014              		.loc 1 786 0
 3015 07e4 294B     		ldr	r3, .L169+64
 3016 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3017 07e8 002B     		cmp	r3, #0
 3018 07ea 09D1     		bne	.L134
 787:ui.c          ****             {
 788:ui.c          ****                 midiSendOn = (midiSendOn+1)&1;
 3019              		.loc 1 788 0
 3020 07ec 284B     		ldr	r3, .L169+68
 3021 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3022 07f0 0133     		adds	r3, r3, #1
 3023 07f2 DBB2     		uxtb	r3, r3
 3024 07f4 03F00103 		and	r3, r3, #1
 3025 07f8 DAB2     		uxtb	r2, r3
 3026 07fa 254B     		ldr	r3, .L169+68
 3027 07fc 1A70     		strb	r2, [r3]
 3028 07fe 64E0     		b	.L136
 3029              	.L134:
 789:ui.c          ****             }
 790:ui.c          ****             else
 791:ui.c          ****             {
 792:ui.c          ****                 midiBarSendOn = (midiBarSendOn+1)&1;
 3030              		.loc 1 792 0
 3031 0800 244B     		ldr	r3, .L169+72
 3032 0802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3033 0804 0133     		adds	r3, r3, #1
 3034 0806 DBB2     		uxtb	r3, r3
 3035 0808 03F00103 		and	r3, r3, #1
 3036 080c DAB2     		uxtb	r2, r3
 3037 080e 214B     		ldr	r3, .L169+72
 3038 0810 1A70     		strb	r2, [r3]
 3039 0812 5AE0     		b	.L136
 3040              	.L133:
 793:ui.c          ****             }
 794:ui.c          ****         }
 795:ui.c          ****         else if (action == Left)
 3041              		.loc 1 795 0
 3042 0814 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3043 0816 002B     		cmp	r3, #0
 3044 0818 3ED1     		bne	.L137
 796:ui.c          ****         {
 797:ui.c          ****             if (!whichMidiSendSelected)
 3045              		.loc 1 797 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 70


 3046 081a 1C4B     		ldr	r3, .L169+64
 3047 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3048 081e 002B     		cmp	r3, #0
 3049 0820 09D1     		bne	.L138
 798:ui.c          ****             {
 799:ui.c          ****                 midiSendOn = (midiSendOn-1)&1;
 3050              		.loc 1 799 0
 3051 0822 1B4B     		ldr	r3, .L169+68
 3052 0824 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3053 0826 013B     		subs	r3, r3, #1
 3054 0828 DBB2     		uxtb	r3, r3
 3055 082a 03F00103 		and	r3, r3, #1
 3056 082e DAB2     		uxtb	r2, r3
 3057 0830 174B     		ldr	r3, .L169+68
 3058 0832 1A70     		strb	r2, [r3]
 3059 0834 49E0     		b	.L136
 3060              	.L138:
 800:ui.c          ****             }
 801:ui.c          ****             else
 802:ui.c          ****             {
 803:ui.c          ****                 midiBarSendOn = (midiBarSendOn-1)&1;
 3061              		.loc 1 803 0
 3062 0836 174B     		ldr	r3, .L169+72
 3063 0838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3064 083a 013B     		subs	r3, r3, #1
 3065 083c DBB2     		uxtb	r3, r3
 3066 083e 03F00103 		and	r3, r3, #1
 3067 0842 DAB2     		uxtb	r2, r3
 3068 0844 134B     		ldr	r3, .L169+72
 3069 0846 1A70     		strb	r2, [r3]
 3070 0848 3FE0     		b	.L136
 3071              	.L170:
 3072 084a 00BF     		.align	2
 3073              	.L169:
 3074 084c 00000000 		.word	menuPosition
 3075 0850 A8010000 		.word	.LC24
 3076 0854 B4010000 		.word	.LC25
 3077 0858 C4010000 		.word	.LC26
 3078 085c D8010000 		.word	.LC27
 3079 0860 00000000 		.word	mainOLEDWaitingToSend
 3080 0864 00000000 		.word	fretToCalibrate
 3081 0868 00000000 		.word	bar
 3082 086c 00000000 		.word	fretMeasurements
 3083 0870 00000000 		.word	whichFretArray
 3084 0874 00000000 		.word	semitonesOrCents
 3085 0878 00000000 		.word	prevEncoderVal
 3086 087c 00000000 		.word	octaveAction
 3087 0880 30010000 		.word	.LC16
 3088 0884 40010000 		.word	.LC17
 3089 0888 00000000 		.word	editingSliderRepString
 3090 088c 00000000 		.word	whichMidiSendSelected
 3091 0890 00000000 		.word	midiSendOn
 3092 0894 00000000 		.word	midiBarSendOn
 3093              	.L137:
 804:ui.c          ****             }
 805:ui.c          ****         }
 806:ui.c          ****         else if (action == Up)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 71


 3094              		.loc 1 806 0
 3095 0898 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3096 089a 032B     		cmp	r3, #3
 3097 089c 09D1     		bne	.L140
 807:ui.c          ****         {
 808:ui.c          ****             whichMidiSendSelected = (whichMidiSendSelected+1)&1;
 3098              		.loc 1 808 0
 3099 089e AB4B     		ldr	r3, .L171
 3100 08a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3101 08a2 0133     		adds	r3, r3, #1
 3102 08a4 DBB2     		uxtb	r3, r3
 3103 08a6 03F00103 		and	r3, r3, #1
 3104 08aa DAB2     		uxtb	r2, r3
 3105 08ac A74B     		ldr	r3, .L171
 3106 08ae 1A70     		strb	r2, [r3]
 3107 08b0 0BE0     		b	.L136
 3108              	.L140:
 809:ui.c          ****         }
 810:ui.c          ****         else if (action == Down)
 3109              		.loc 1 810 0
 3110 08b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3111 08b4 022B     		cmp	r3, #2
 3112 08b6 08D1     		bne	.L136
 811:ui.c          ****         {
 812:ui.c          ****             whichMidiSendSelected = (whichMidiSendSelected-1)&1;
 3113              		.loc 1 812 0
 3114 08b8 A44B     		ldr	r3, .L171
 3115 08ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3116 08bc 013B     		subs	r3, r3, #1
 3117 08be DBB2     		uxtb	r3, r3
 3118 08c0 03F00103 		and	r3, r3, #1
 3119 08c4 DAB2     		uxtb	r2, r3
 3120 08c6 A14B     		ldr	r3, .L171
 3121 08c8 1A70     		strb	r2, [r3]
 3122              	.L136:
 813:ui.c          ****         }
 814:ui.c          ****         OLEDtextColor(1, 0);
 3123              		.loc 1 814 0
 3124 08ca 0021     		movs	r1, #0
 3125 08cc 0120     		movs	r0, #1
 3126 08ce FFF7FEFF 		bl	OLEDtextColor
 815:ui.c          ****         OLEDwriteString("SEND MIDI ", 10, 0, FirstLine);
 3127              		.loc 1 815 0
 3128 08d2 0023     		movs	r3, #0
 3129 08d4 0022     		movs	r2, #0
 3130 08d6 0A21     		movs	r1, #10
 3131 08d8 9D48     		ldr	r0, .L171+4
 3132 08da FFF7FEFF 		bl	OLEDwriteString
 816:ui.c          ****         GFXfillRect(&theGFX, 76, 0, 37, 16, !whichMidiSendSelected);
 3133              		.loc 1 816 0
 3134 08de 9B4B     		ldr	r3, .L171
 3135 08e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3136 08e2 002B     		cmp	r3, #0
 3137 08e4 0CBF     		ite	eq
 3138 08e6 0123     		moveq	r3, #1
 3139 08e8 0023     		movne	r3, #0
 3140 08ea DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 72


 3141 08ec 9BB2     		uxth	r3, r3
 3142 08ee 0193     		str	r3, [sp, #4]
 3143 08f0 1023     		movs	r3, #16
 3144 08f2 0093     		str	r3, [sp]
 3145 08f4 2523     		movs	r3, #37
 3146 08f6 0022     		movs	r2, #0
 3147 08f8 4C21     		movs	r1, #76
 3148 08fa 9648     		ldr	r0, .L171+8
 3149 08fc FFF7FEFF 		bl	GFXfillRect
 817:ui.c          ****         OLEDtextColor(whichMidiSendSelected, !whichMidiSendSelected);
 3150              		.loc 1 817 0
 3151 0900 924B     		ldr	r3, .L171
 3152 0902 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3153 0904 9AB2     		uxth	r2, r3
 3154 0906 914B     		ldr	r3, .L171
 3155 0908 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3156 090a 002B     		cmp	r3, #0
 3157 090c 0CBF     		ite	eq
 3158 090e 0123     		moveq	r3, #1
 3159 0910 0023     		movne	r3, #0
 3160 0912 DBB2     		uxtb	r3, r3
 3161 0914 9BB2     		uxth	r3, r3
 3162 0916 1946     		mov	r1, r3
 3163 0918 1046     		mov	r0, r2
 3164 091a FFF7FEFF 		bl	OLEDtextColor
 818:ui.c          ****         if (midiSendOn)
 3165              		.loc 1 818 0
 3166 091e 8E4B     		ldr	r3, .L171+12
 3167 0920 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3168 0922 002B     		cmp	r3, #0
 3169 0924 08D0     		beq	.L141
 819:ui.c          ****         {
 820:ui.c          ****             GFXwrite(&theGFX, 79);
 3170              		.loc 1 820 0
 3171 0926 4F21     		movs	r1, #79
 3172 0928 8A48     		ldr	r0, .L171+8
 3173 092a FFF7FEFF 		bl	GFXwrite
 821:ui.c          ****             GFXwrite(&theGFX, 78);
 3174              		.loc 1 821 0
 3175 092e 4E21     		movs	r1, #78
 3176 0930 8848     		ldr	r0, .L171+8
 3177 0932 FFF7FEFF 		bl	GFXwrite
 3178 0936 0BE0     		b	.L142
 3179              	.L141:
 822:ui.c          ****         }
 823:ui.c          ****         else
 824:ui.c          ****         {
 825:ui.c          ****             GFXwrite(&theGFX, 79);
 3180              		.loc 1 825 0
 3181 0938 4F21     		movs	r1, #79
 3182 093a 8648     		ldr	r0, .L171+8
 3183 093c FFF7FEFF 		bl	GFXwrite
 826:ui.c          ****             GFXwrite(&theGFX, 70);
 3184              		.loc 1 826 0
 3185 0940 4621     		movs	r1, #70
 3186 0942 8448     		ldr	r0, .L171+8
 3187 0944 FFF7FEFF 		bl	GFXwrite
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 73


 827:ui.c          ****             GFXwrite(&theGFX, 70);
 3188              		.loc 1 827 0
 3189 0948 4621     		movs	r1, #70
 3190 094a 8248     		ldr	r0, .L171+8
 3191 094c FFF7FEFF 		bl	GFXwrite
 3192              	.L142:
 828:ui.c          ****         }
 829:ui.c          ****         OLEDtextColor(1, 0);
 3193              		.loc 1 829 0
 3194 0950 0021     		movs	r1, #0
 3195 0952 0120     		movs	r0, #1
 3196 0954 FFF7FEFF 		bl	OLEDtextColor
 830:ui.c          ****         OLEDwriteString("SEND BAR  ", 10, 0, SecondLine);
 3197              		.loc 1 830 0
 3198 0958 0123     		movs	r3, #1
 3199 095a 0022     		movs	r2, #0
 3200 095c 0A21     		movs	r1, #10
 3201 095e 7F48     		ldr	r0, .L171+16
 3202 0960 FFF7FEFF 		bl	OLEDwriteString
 831:ui.c          ****         GFXfillRect(&theGFX, 76, 16, 37, 16, whichMidiSendSelected);
 3203              		.loc 1 831 0
 3204 0964 794B     		ldr	r3, .L171
 3205 0966 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3206 0968 9BB2     		uxth	r3, r3
 3207 096a 0193     		str	r3, [sp, #4]
 3208 096c 1023     		movs	r3, #16
 3209 096e 0093     		str	r3, [sp]
 3210 0970 2523     		movs	r3, #37
 3211 0972 1022     		movs	r2, #16
 3212 0974 4C21     		movs	r1, #76
 3213 0976 7748     		ldr	r0, .L171+8
 3214 0978 FFF7FEFF 		bl	GFXfillRect
 832:ui.c          ****         OLEDtextColor(!whichMidiSendSelected, whichMidiSendSelected);
 3215              		.loc 1 832 0
 3216 097c 734B     		ldr	r3, .L171
 3217 097e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3218 0980 002B     		cmp	r3, #0
 3219 0982 0CBF     		ite	eq
 3220 0984 0123     		moveq	r3, #1
 3221 0986 0023     		movne	r3, #0
 3222 0988 DBB2     		uxtb	r3, r3
 3223 098a 9AB2     		uxth	r2, r3
 3224 098c 6F4B     		ldr	r3, .L171
 3225 098e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3226 0990 9BB2     		uxth	r3, r3
 3227 0992 1946     		mov	r1, r3
 3228 0994 1046     		mov	r0, r2
 3229 0996 FFF7FEFF 		bl	OLEDtextColor
 833:ui.c          ****         if (midiBarSendOn)
 3230              		.loc 1 833 0
 3231 099a 714B     		ldr	r3, .L171+20
 3232 099c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3233 099e 002B     		cmp	r3, #0
 3234 09a0 08D0     		beq	.L143
 834:ui.c          ****         {
 835:ui.c          ****             GFXwrite(&theGFX, 79);
 3235              		.loc 1 835 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 74


 3236 09a2 4F21     		movs	r1, #79
 3237 09a4 6B48     		ldr	r0, .L171+8
 3238 09a6 FFF7FEFF 		bl	GFXwrite
 836:ui.c          ****             GFXwrite(&theGFX, 78);
 3239              		.loc 1 836 0
 3240 09aa 4E21     		movs	r1, #78
 3241 09ac 6948     		ldr	r0, .L171+8
 3242 09ae FFF7FEFF 		bl	GFXwrite
 3243 09b2 0BE0     		b	.L144
 3244              	.L143:
 837:ui.c          ****         }
 838:ui.c          ****         else
 839:ui.c          ****         {
 840:ui.c          ****             GFXwrite(&theGFX, 79);
 3245              		.loc 1 840 0
 3246 09b4 4F21     		movs	r1, #79
 3247 09b6 6748     		ldr	r0, .L171+8
 3248 09b8 FFF7FEFF 		bl	GFXwrite
 841:ui.c          ****             GFXwrite(&theGFX, 70);
 3249              		.loc 1 841 0
 3250 09bc 4621     		movs	r1, #70
 3251 09be 6548     		ldr	r0, .L171+8
 3252 09c0 FFF7FEFF 		bl	GFXwrite
 842:ui.c          ****             GFXwrite(&theGFX, 70);
 3253              		.loc 1 842 0
 3254 09c4 4621     		movs	r1, #70
 3255 09c6 6348     		ldr	r0, .L171+8
 3256 09c8 FFF7FEFF 		bl	GFXwrite
 3257              	.L144:
 843:ui.c          ****         }
 844:ui.c          ****         mainOLEDWaitingToSend = 1;
 3258              		.loc 1 844 0
 3259 09cc 654B     		ldr	r3, .L171+24
 3260 09ce 0122     		movs	r2, #1
 3261 09d0 1A70     		strb	r2, [r3]
 3262 09d2 02E0     		b	.L88
 3263              	.L162:
 529:ui.c          ****             {
 3264              		.loc 1 529 0
 3265 09d4 00BF     		nop
 3266 09d6 00E0     		b	.L88
 3267              	.L163:
 574:ui.c          ****             {
 3268              		.loc 1 574 0
 3269 09d8 00BF     		nop
 3270              	.L88:
 845:ui.c          ****                 
 846:ui.c          ****     }
 847:ui.c          ****     
 848:ui.c          ****     //now draw stuff
 849:ui.c          ****     if (whatToDraw == 1)
 3271              		.loc 1 849 0
 3272 09da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3273 09dc 012B     		cmp	r3, #1
 3274 09de 44D1     		bne	.L145
 850:ui.c          ****     {
 851:ui.c          ****         //draw main menu
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 75


 852:ui.c          ****         OLEDclear(128, 64);
 3275              		.loc 1 852 0
 3276 09e0 4021     		movs	r1, #64
 3277 09e2 8020     		movs	r0, #128
 3278 09e4 FFF7FEFF 		bl	OLEDclear
 853:ui.c          ****         myGFX_setFont(2);
 3279              		.loc 1 853 0
 3280 09e8 0220     		movs	r0, #2
 3281 09ea FFF7FEFF 		bl	myGFX_setFont
 3282              	.LBB8:
 854:ui.c          ****         for (int i = 0; i < numMainMenuItems; i++)
 3283              		.loc 1 854 0
 3284 09ee 0023     		movs	r3, #0
 3285 09f0 BB61     		str	r3, [r7, #24]
 3286 09f2 2CE0     		b	.L146
 3287              	.L149:
 855:ui.c          ****         {
 856:ui.c          ****             if (menuPosition[0][1] == i)
 3288              		.loc 1 856 0
 3289 09f4 5C4B     		ldr	r3, .L171+28
 3290 09f6 93F90130 		ldrsb	r3, [r3, #1]
 3291 09fa 1A46     		mov	r2, r3
 3292 09fc BB69     		ldr	r3, [r7, #24]
 3293 09fe 9A42     		cmp	r2, r3
 3294 0a00 14D1     		bne	.L147
 857:ui.c          ****             {
 858:ui.c          ****                 OLEDtextColor(0, 1);
 3295              		.loc 1 858 0
 3296 0a02 0121     		movs	r1, #1
 3297 0a04 0020     		movs	r0, #0
 3298 0a06 FFF7FEFF 		bl	OLEDtextColor
 859:ui.c          ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
 3299              		.loc 1 859 0
 3300 0a0a 584A     		ldr	r2, .L171+32
 3301 0a0c BB69     		ldr	r3, [r7, #24]
 3302 0a0e 52F82300 		ldr	r0, [r2, r3, lsl #2]
 3303 0a12 BB69     		ldr	r3, [r7, #24]
 3304 0a14 DBB2     		uxtb	r3, r3
 3305 0a16 0022     		movs	r2, #0
 3306 0a18 0F21     		movs	r1, #15
 3307 0a1a FFF7FEFF 		bl	OLEDwriteString
 860:ui.c          ****                 OLEDwriteArrow(0, i);
 3308              		.loc 1 860 0
 3309 0a1e BB69     		ldr	r3, [r7, #24]
 3310 0a20 DBB2     		uxtb	r3, r3
 3311 0a22 1946     		mov	r1, r3
 3312 0a24 0020     		movs	r0, #0
 3313 0a26 FFF7FEFF 		bl	OLEDwriteArrow
 3314 0a2a 0DE0     		b	.L148
 3315              	.L147:
 861:ui.c          ****             }
 862:ui.c          ****             else
 863:ui.c          ****             {
 864:ui.c          ****                 OLEDtextColor(1, 0);
 3316              		.loc 1 864 0
 3317 0a2c 0021     		movs	r1, #0
 3318 0a2e 0120     		movs	r0, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 76


 3319 0a30 FFF7FEFF 		bl	OLEDtextColor
 865:ui.c          ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
 3320              		.loc 1 865 0
 3321 0a34 4D4A     		ldr	r2, .L171+32
 3322 0a36 BB69     		ldr	r3, [r7, #24]
 3323 0a38 52F82300 		ldr	r0, [r2, r3, lsl #2]
 3324 0a3c BB69     		ldr	r3, [r7, #24]
 3325 0a3e DBB2     		uxtb	r3, r3
 3326 0a40 0022     		movs	r2, #0
 3327 0a42 0F21     		movs	r1, #15
 3328 0a44 FFF7FEFF 		bl	OLEDwriteString
 3329              	.L148:
 854:ui.c          ****         {
 3330              		.loc 1 854 0 discriminator 2
 3331 0a48 BB69     		ldr	r3, [r7, #24]
 3332 0a4a 0133     		adds	r3, r3, #1
 3333 0a4c BB61     		str	r3, [r7, #24]
 3334              	.L146:
 854:ui.c          ****         {
 3335              		.loc 1 854 0 is_stmt 0 discriminator 1
 3336 0a4e 484B     		ldr	r3, .L171+36
 3337 0a50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3338 0a52 1A46     		mov	r2, r3
 3339 0a54 BB69     		ldr	r3, [r7, #24]
 3340 0a56 9A42     		cmp	r2, r3
 3341 0a58 CCDC     		bgt	.L149
 3342              	.LBE8:
 866:ui.c          ****                 
 867:ui.c          ****             }
 868:ui.c          **** 
 869:ui.c          ****         }
 870:ui.c          ****         OLEDtextColor(1, 0);
 3343              		.loc 1 870 0 is_stmt 1
 3344 0a5a 0021     		movs	r1, #0
 3345 0a5c 0120     		movs	r0, #1
 3346 0a5e FFF7FEFF 		bl	OLEDtextColor
 871:ui.c          ****         mainOLEDWaitingToSend = 1;
 3347              		.loc 1 871 0
 3348 0a62 404B     		ldr	r3, .L171+24
 3349 0a64 0122     		movs	r2, #1
 3350 0a66 1A70     		strb	r2, [r3]
 872:ui.c          ****     }
 873:ui.c          ****     else if (whatToDraw == 2)
 874:ui.c          ****     {
 875:ui.c          ****         //draw calibration menu
 876:ui.c          ****         OLEDclear(128, 64);
 877:ui.c          ****         myGFX_setFont(2);
 878:ui.c          ****         for (int i = 0; i < numCalibrationItems; i++)
 879:ui.c          ****         {
 880:ui.c          ****             if (menuPosition[1][1] == i)
 881:ui.c          ****             {
 882:ui.c          ****                 OLEDtextColor(0, 1);
 883:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 884:ui.c          ****                 OLEDwriteArrow(0, i);
 885:ui.c          ****             }
 886:ui.c          ****             else
 887:ui.c          ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 77


 888:ui.c          ****                 OLEDtextColor(1, 0);
 889:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 890:ui.c          ****                 
 891:ui.c          ****             }
 892:ui.c          ****         }
 893:ui.c          ****         OLEDtextColor(1, 0);
 894:ui.c          ****         mainOLEDWaitingToSend = 1;
 895:ui.c          ****     }
 896:ui.c          ****     else if (whatToDraw == 3)
 897:ui.c          ****     {
 898:ui.c          ****         //draw settings menu
 899:ui.c          ****         OLEDclear(128, 64);
 900:ui.c          ****         myGFX_setFont(2);
 901:ui.c          ****         uint8_t tempPos = 0;
 902:ui.c          ****         for (int i = 0; i < numSettingsItems; i++)
 903:ui.c          ****         {
 904:ui.c          ****             if (menuPosition[2][1] == i)
 905:ui.c          ****             {
 906:ui.c          ****                 OLEDtextColor(0, 1);
 907:ui.c          ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
 908:ui.c          ****                 OLEDwriteArrow(0, 0);
 909:ui.c          ****             }
 910:ui.c          ****             else if (i > menuPosition[2][1])
 911:ui.c          ****             {
 912:ui.c          ****                 OLEDtextColor(1, 0);
 913:ui.c          ****                 tempPos = (i - menuPosition[2][1]);
 914:ui.c          ****                 if (tempPos < 4)
 915:ui.c          ****                 {
 916:ui.c          ****                     OLEDwriteString(settingsNames[i], 15, 0, tempPos);
 917:ui.c          ****                 } 
 918:ui.c          ****             }
 919:ui.c          ****         }
 920:ui.c          ****         tempPos++;
 921:ui.c          ****         OLEDtextColor(1, 0);
 922:ui.c          ****         while (tempPos < 4)
 923:ui.c          ****         {
 924:ui.c          ****             OLEDwriteString("               ", 15, 0, tempPos);
 925:ui.c          ****             tempPos++;
 926:ui.c          ****         }
 927:ui.c          ****         mainOLEDWaitingToSend = 1;
 928:ui.c          ****     }
 929:ui.c          **** }
 3351              		.loc 1 929 0
 3352 0a68 C9E0     		b	.L164
 3353              	.L145:
 873:ui.c          ****     {
 3354              		.loc 1 873 0
 3355 0a6a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3356 0a6c 022B     		cmp	r3, #2
 3357 0a6e 44D1     		bne	.L151
 876:ui.c          ****         myGFX_setFont(2);
 3358              		.loc 1 876 0
 3359 0a70 4021     		movs	r1, #64
 3360 0a72 8020     		movs	r0, #128
 3361 0a74 FFF7FEFF 		bl	OLEDclear
 877:ui.c          ****         for (int i = 0; i < numCalibrationItems; i++)
 3362              		.loc 1 877 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 78


 3363 0a78 0220     		movs	r0, #2
 3364 0a7a FFF7FEFF 		bl	myGFX_setFont
 3365              	.LBB9:
 878:ui.c          ****         {
 3366              		.loc 1 878 0
 3367 0a7e 0023     		movs	r3, #0
 3368 0a80 7B61     		str	r3, [r7, #20]
 3369 0a82 2CE0     		b	.L152
 3370              	.L155:
 880:ui.c          ****             {
 3371              		.loc 1 880 0
 3372 0a84 384B     		ldr	r3, .L171+28
 3373 0a86 93F90330 		ldrsb	r3, [r3, #3]
 3374 0a8a 1A46     		mov	r2, r3
 3375 0a8c 7B69     		ldr	r3, [r7, #20]
 3376 0a8e 9A42     		cmp	r2, r3
 3377 0a90 14D1     		bne	.L153
 882:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 3378              		.loc 1 882 0
 3379 0a92 0121     		movs	r1, #1
 3380 0a94 0020     		movs	r0, #0
 3381 0a96 FFF7FEFF 		bl	OLEDtextColor
 883:ui.c          ****                 OLEDwriteArrow(0, i);
 3382              		.loc 1 883 0
 3383 0a9a 364A     		ldr	r2, .L171+40
 3384 0a9c 7B69     		ldr	r3, [r7, #20]
 3385 0a9e 52F82300 		ldr	r0, [r2, r3, lsl #2]
 3386 0aa2 7B69     		ldr	r3, [r7, #20]
 3387 0aa4 DBB2     		uxtb	r3, r3
 3388 0aa6 0022     		movs	r2, #0
 3389 0aa8 0F21     		movs	r1, #15
 3390 0aaa FFF7FEFF 		bl	OLEDwriteString
 884:ui.c          ****             }
 3391              		.loc 1 884 0
 3392 0aae 7B69     		ldr	r3, [r7, #20]
 3393 0ab0 DBB2     		uxtb	r3, r3
 3394 0ab2 1946     		mov	r1, r3
 3395 0ab4 0020     		movs	r0, #0
 3396 0ab6 FFF7FEFF 		bl	OLEDwriteArrow
 3397 0aba 0DE0     		b	.L154
 3398              	.L153:
 888:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 3399              		.loc 1 888 0
 3400 0abc 0021     		movs	r1, #0
 3401 0abe 0120     		movs	r0, #1
 3402 0ac0 FFF7FEFF 		bl	OLEDtextColor
 889:ui.c          ****                 
 3403              		.loc 1 889 0
 3404 0ac4 2B4A     		ldr	r2, .L171+40
 3405 0ac6 7B69     		ldr	r3, [r7, #20]
 3406 0ac8 52F82300 		ldr	r0, [r2, r3, lsl #2]
 3407 0acc 7B69     		ldr	r3, [r7, #20]
 3408 0ace DBB2     		uxtb	r3, r3
 3409 0ad0 0022     		movs	r2, #0
 3410 0ad2 0F21     		movs	r1, #15
 3411 0ad4 FFF7FEFF 		bl	OLEDwriteString
 3412              	.L154:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 79


 878:ui.c          ****         {
 3413              		.loc 1 878 0 discriminator 2
 3414 0ad8 7B69     		ldr	r3, [r7, #20]
 3415 0ada 0133     		adds	r3, r3, #1
 3416 0adc 7B61     		str	r3, [r7, #20]
 3417              	.L152:
 878:ui.c          ****         {
 3418              		.loc 1 878 0 is_stmt 0 discriminator 1
 3419 0ade 264B     		ldr	r3, .L171+44
 3420 0ae0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3421 0ae2 1A46     		mov	r2, r3
 3422 0ae4 7B69     		ldr	r3, [r7, #20]
 3423 0ae6 9A42     		cmp	r2, r3
 3424 0ae8 CCDC     		bgt	.L155
 3425              	.LBE9:
 893:ui.c          ****         mainOLEDWaitingToSend = 1;
 3426              		.loc 1 893 0 is_stmt 1
 3427 0aea 0021     		movs	r1, #0
 3428 0aec 0120     		movs	r0, #1
 3429 0aee FFF7FEFF 		bl	OLEDtextColor
 894:ui.c          ****     }
 3430              		.loc 1 894 0
 3431 0af2 1C4B     		ldr	r3, .L171+24
 3432 0af4 0122     		movs	r2, #1
 3433 0af6 1A70     		strb	r2, [r3]
 3434              		.loc 1 929 0
 3435 0af8 81E0     		b	.L164
 3436              	.L151:
 896:ui.c          ****     {
 3437              		.loc 1 896 0
 3438 0afa FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3439 0afc 032B     		cmp	r3, #3
 3440 0afe 7ED1     		bne	.L164
 3441              	.LBB10:
 899:ui.c          ****         myGFX_setFont(2);
 3442              		.loc 1 899 0
 3443 0b00 4021     		movs	r1, #64
 3444 0b02 8020     		movs	r0, #128
 3445 0b04 FFF7FEFF 		bl	OLEDclear
 900:ui.c          ****         uint8_t tempPos = 0;
 3446              		.loc 1 900 0
 3447 0b08 0220     		movs	r0, #2
 3448 0b0a FFF7FEFF 		bl	myGFX_setFont
 901:ui.c          ****         for (int i = 0; i < numSettingsItems; i++)
 3449              		.loc 1 901 0
 3450 0b0e 0023     		movs	r3, #0
 3451 0b10 FB74     		strb	r3, [r7, #19]
 3452              	.LBB11:
 902:ui.c          ****         {
 3453              		.loc 1 902 0
 3454 0b12 0023     		movs	r3, #0
 3455 0b14 FB60     		str	r3, [r7, #12]
 3456 0b16 55E0     		b	.L156
 3457              	.L159:
 904:ui.c          ****             {
 3458              		.loc 1 904 0
 3459 0b18 134B     		ldr	r3, .L171+28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 80


 3460 0b1a 93F90530 		ldrsb	r3, [r3, #5]
 3461 0b1e 1A46     		mov	r2, r3
 3462 0b20 FB68     		ldr	r3, [r7, #12]
 3463 0b22 9A42     		cmp	r2, r3
 3464 0b24 2CD1     		bne	.L157
 906:ui.c          ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
 3465              		.loc 1 906 0
 3466 0b26 0121     		movs	r1, #1
 3467 0b28 0020     		movs	r0, #0
 3468 0b2a FFF7FEFF 		bl	OLEDtextColor
 907:ui.c          ****                 OLEDwriteArrow(0, 0);
 3469              		.loc 1 907 0
 3470 0b2e 134A     		ldr	r2, .L171+48
 3471 0b30 FB68     		ldr	r3, [r7, #12]
 3472 0b32 52F82300 		ldr	r0, [r2, r3, lsl #2]
 3473 0b36 0023     		movs	r3, #0
 3474 0b38 0022     		movs	r2, #0
 3475 0b3a 0F21     		movs	r1, #15
 3476 0b3c FFF7FEFF 		bl	OLEDwriteString
 908:ui.c          ****             }
 3477              		.loc 1 908 0
 3478 0b40 0021     		movs	r1, #0
 3479 0b42 0020     		movs	r0, #0
 3480 0b44 FFF7FEFF 		bl	OLEDwriteArrow
 3481 0b48 39E0     		b	.L158
 3482              	.L172:
 3483 0b4a 00BF     		.align	2
 3484              	.L171:
 3485 0b4c 00000000 		.word	whichMidiSendSelected
 3486 0b50 90010000 		.word	.LC22
 3487 0b54 00000000 		.word	theGFX
 3488 0b58 00000000 		.word	midiSendOn
 3489 0b5c 9C010000 		.word	.LC23
 3490 0b60 00000000 		.word	midiBarSendOn
 3491 0b64 00000000 		.word	mainOLEDWaitingToSend
 3492 0b68 00000000 		.word	menuPosition
 3493 0b6c 00000000 		.word	mainMenuNames
 3494 0b70 00000000 		.word	numMainMenuItems
 3495 0b74 00000000 		.word	calibrationNames
 3496 0b78 00000000 		.word	numCalibrationItems
 3497 0b7c 00000000 		.word	settingsNames
 3498              	.L157:
 910:ui.c          ****             {
 3499              		.loc 1 910 0
 3500 0b80 214B     		ldr	r3, .L173
 3501 0b82 93F90530 		ldrsb	r3, [r3, #5]
 3502 0b86 1A46     		mov	r2, r3
 3503 0b88 FB68     		ldr	r3, [r7, #12]
 3504 0b8a 9A42     		cmp	r2, r3
 3505 0b8c 17DA     		bge	.L158
 912:ui.c          ****                 tempPos = (i - menuPosition[2][1]);
 3506              		.loc 1 912 0
 3507 0b8e 0021     		movs	r1, #0
 3508 0b90 0120     		movs	r0, #1
 3509 0b92 FFF7FEFF 		bl	OLEDtextColor
 913:ui.c          ****                 if (tempPos < 4)
 3510              		.loc 1 913 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 81


 3511 0b96 FB68     		ldr	r3, [r7, #12]
 3512 0b98 DAB2     		uxtb	r2, r3
 3513 0b9a 1B4B     		ldr	r3, .L173
 3514 0b9c 93F90530 		ldrsb	r3, [r3, #5]
 3515 0ba0 DBB2     		uxtb	r3, r3
 3516 0ba2 D31A     		subs	r3, r2, r3
 3517 0ba4 FB74     		strb	r3, [r7, #19]
 914:ui.c          ****                 {
 3518              		.loc 1 914 0
 3519 0ba6 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3520 0ba8 032B     		cmp	r3, #3
 3521 0baa 08D8     		bhi	.L158
 916:ui.c          ****                 } 
 3522              		.loc 1 916 0
 3523 0bac 174A     		ldr	r2, .L173+4
 3524 0bae FB68     		ldr	r3, [r7, #12]
 3525 0bb0 52F82300 		ldr	r0, [r2, r3, lsl #2]
 3526 0bb4 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3527 0bb6 0022     		movs	r2, #0
 3528 0bb8 0F21     		movs	r1, #15
 3529 0bba FFF7FEFF 		bl	OLEDwriteString
 3530              	.L158:
 902:ui.c          ****         {
 3531              		.loc 1 902 0 discriminator 2
 3532 0bbe FB68     		ldr	r3, [r7, #12]
 3533 0bc0 0133     		adds	r3, r3, #1
 3534 0bc2 FB60     		str	r3, [r7, #12]
 3535              	.L156:
 902:ui.c          ****         {
 3536              		.loc 1 902 0 is_stmt 0 discriminator 1
 3537 0bc4 124B     		ldr	r3, .L173+8
 3538 0bc6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3539 0bc8 1A46     		mov	r2, r3
 3540 0bca FB68     		ldr	r3, [r7, #12]
 3541 0bcc 9A42     		cmp	r2, r3
 3542 0bce A3DC     		bgt	.L159
 3543              	.LBE11:
 920:ui.c          ****         OLEDtextColor(1, 0);
 3544              		.loc 1 920 0 is_stmt 1
 3545 0bd0 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3546 0bd2 0133     		adds	r3, r3, #1
 3547 0bd4 FB74     		strb	r3, [r7, #19]
 921:ui.c          ****         while (tempPos < 4)
 3548              		.loc 1 921 0
 3549 0bd6 0021     		movs	r1, #0
 3550 0bd8 0120     		movs	r0, #1
 3551 0bda FFF7FEFF 		bl	OLEDtextColor
 922:ui.c          ****         {
 3552              		.loc 1 922 0
 3553 0bde 08E0     		b	.L160
 3554              	.L161:
 924:ui.c          ****             tempPos++;
 3555              		.loc 1 924 0
 3556 0be0 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3557 0be2 0022     		movs	r2, #0
 3558 0be4 0F21     		movs	r1, #15
 3559 0be6 0B48     		ldr	r0, .L173+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 82


 3560 0be8 FFF7FEFF 		bl	OLEDwriteString
 925:ui.c          ****         }
 3561              		.loc 1 925 0
 3562 0bec FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3563 0bee 0133     		adds	r3, r3, #1
 3564 0bf0 FB74     		strb	r3, [r7, #19]
 3565              	.L160:
 922:ui.c          ****         {
 3566              		.loc 1 922 0
 3567 0bf2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3568 0bf4 032B     		cmp	r3, #3
 3569 0bf6 F3D9     		bls	.L161
 927:ui.c          ****     }
 3570              		.loc 1 927 0
 3571 0bf8 074B     		ldr	r3, .L173+16
 3572 0bfa 0122     		movs	r2, #1
 3573 0bfc 1A70     		strb	r2, [r3]
 3574              	.L164:
 3575              	.LBE10:
 3576              		.loc 1 929 0
 3577 0bfe 00BF     		nop
 3578 0c00 2037     		adds	r7, r7, #32
 3579              		.cfi_def_cfa_offset 8
 3580 0c02 BD46     		mov	sp, r7
 3581              		.cfi_def_cfa_register 13
 3582              		@ sp needed
 3583 0c04 80BD     		pop	{r7, pc}
 3584              	.L174:
 3585 0c06 00BF     		.align	2
 3586              	.L173:
 3587 0c08 00000000 		.word	menuPosition
 3588 0c0c 00000000 		.word	settingsNames
 3589 0c10 00000000 		.word	numSettingsItems
 3590 0c14 E8010000 		.word	.LC28
 3591 0c18 00000000 		.word	mainOLEDWaitingToSend
 3592              		.cfi_endproc
 3593              	.LFE67:
 3594              		.size	menuAction, .-menuAction
 3595              		.section	.text.leftPressed,"ax",%progbits
 3596              		.align	2
 3597              		.global	leftPressed
 3598              		.thumb
 3599              		.thumb_func
 3600              		.type	leftPressed, %function
 3601              	leftPressed:
 3602              	.LFB68:
 930:ui.c          **** 
 931:ui.c          **** 
 932:ui.c          **** 
 933:ui.c          **** void leftPressed()
 934:ui.c          **** {
 3603              		.loc 1 934 0
 3604              		.cfi_startproc
 3605              		@ args = 0, pretend = 0, frame = 0
 3606              		@ frame_needed = 1, uses_anonymous_args = 0
 3607 0000 80B5     		push	{r7, lr}
 3608              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 83


 3609              		.cfi_offset 7, -8
 3610              		.cfi_offset 14, -4
 3611 0002 00AF     		add	r7, sp, #0
 3612              		.cfi_def_cfa_register 7
 935:ui.c          ****     if (!editMode) //normal behavior
 3613              		.loc 1 935 0
 3614 0004 204B     		ldr	r3, .L181
 3615 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3616 0008 002B     		cmp	r3, #0
 3617 000a 38D1     		bne	.L176
 936:ui.c          ****     {
 937:ui.c          ****         if (currentCopedent == 0)
 3618              		.loc 1 937 0
 3619 000c 1F4B     		ldr	r3, .L181+4
 3620 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3621 0010 002B     		cmp	r3, #0
 3622 0012 03D1     		bne	.L177
 938:ui.c          ****         {
 939:ui.c          ****             currentCopedent = MAX_NUM_COPEDENTS-1;
 3623              		.loc 1 939 0
 3624 0014 1D4B     		ldr	r3, .L181+4
 3625 0016 0622     		movs	r2, #6
 3626 0018 1A70     		strb	r2, [r3]
 3627 001a 05E0     		b	.L178
 3628              	.L177:
 940:ui.c          ****         }
 941:ui.c          ****         else
 942:ui.c          ****         {
 943:ui.c          ****             currentCopedent -= 1;
 3629              		.loc 1 943 0
 3630 001c 1B4B     		ldr	r3, .L181+4
 3631 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3632 0020 013B     		subs	r3, r3, #1
 3633 0022 DAB2     		uxtb	r2, r3
 3634 0024 194B     		ldr	r3, .L181+4
 3635 0026 1A70     		strb	r2, [r3]
 3636              	.L178:
 944:ui.c          ****         }
 945:ui.c          ****         necks[currentNeck] = currentCopedent;
 3637              		.loc 1 945 0
 3638 0028 194B     		ldr	r3, .L181+8
 3639 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3640 002c 1A46     		mov	r2, r3
 3641 002e 174B     		ldr	r3, .L181+4
 3642 0030 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3643 0032 184B     		ldr	r3, .L181+12
 3644 0034 9954     		strb	r1, [r3, r2]
 946:ui.c          ****         neckByte = 0;
 3645              		.loc 1 946 0
 3646 0036 184B     		ldr	r3, .L181+16
 3647 0038 0022     		movs	r2, #0
 3648 003a 1A70     		strb	r2, [r3]
 947:ui.c          ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 3649              		.loc 1 947 0
 3650 003c 154B     		ldr	r3, .L181+12
 3651 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3652 0040 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 84


 3653 0042 DAB2     		uxtb	r2, r3
 3654 0044 134B     		ldr	r3, .L181+12
 3655 0046 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3656 0048 9B00     		lsls	r3, r3, #2
 3657 004a DBB2     		uxtb	r3, r3
 3658 004c 1344     		add	r3, r3, r2
 3659 004e DAB2     		uxtb	r2, r3
 3660 0050 0F4B     		ldr	r3, .L181+8
 3661 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3662 0054 1344     		add	r3, r3, r2
 3663 0056 DBB2     		uxtb	r3, r3
 3664 0058 5AB2     		sxtb	r2, r3
 3665 005a 0F4B     		ldr	r3, .L181+16
 3666 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3667 005e 5BB2     		sxtb	r3, r3
 3668 0060 1343     		orrs	r3, r3, r2
 3669 0062 5BB2     		sxtb	r3, r3
 3670 0064 DAB2     		uxtb	r2, r3
 3671 0066 0C4B     		ldr	r3, .L181+16
 3672 0068 1A70     		strb	r2, [r3]
 948:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 3673              		.loc 1 948 0
 3674 006a 0B4B     		ldr	r3, .L181+16
 3675 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3676 006e 40F2FE71 		movw	r1, #2046
 3677 0072 1846     		mov	r0, r3
 3678 0074 FFF7FEFF 		bl	EEPROM_WriteByte
 949:ui.c          ****         displayCurrentPresetNameAndCopedent();
 3679              		.loc 1 949 0
 3680 0078 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 950:ui.c          ****     }
 951:ui.c          ****     else
 952:ui.c          ****     {
 953:ui.c          ****         menuAction(Left);
 954:ui.c          ****     }
 955:ui.c          **** }
 3681              		.loc 1 955 0
 3682 007c 02E0     		b	.L180
 3683              	.L176:
 953:ui.c          ****     }
 3684              		.loc 1 953 0
 3685 007e 0020     		movs	r0, #0
 3686 0080 FFF7FEFF 		bl	menuAction
 3687              	.L180:
 3688              		.loc 1 955 0
 3689 0084 00BF     		nop
 3690 0086 80BD     		pop	{r7, pc}
 3691              	.L182:
 3692              		.align	2
 3693              	.L181:
 3694 0088 00000000 		.word	editMode
 3695 008c 00000000 		.word	currentCopedent
 3696 0090 00000000 		.word	currentNeck
 3697 0094 00000000 		.word	necks
 3698 0098 00000000 		.word	neckByte
 3699              		.cfi_endproc
 3700              	.LFE68:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 85


 3701              		.size	leftPressed, .-leftPressed
 3702              		.section	.text.rightPressed,"ax",%progbits
 3703              		.align	2
 3704              		.global	rightPressed
 3705              		.thumb
 3706              		.thumb_func
 3707              		.type	rightPressed, %function
 3708              	rightPressed:
 3709              	.LFB69:
 956:ui.c          **** 
 957:ui.c          **** void rightPressed()
 958:ui.c          **** {
 3710              		.loc 1 958 0
 3711              		.cfi_startproc
 3712              		@ args = 0, pretend = 0, frame = 0
 3713              		@ frame_needed = 1, uses_anonymous_args = 0
 3714 0000 80B5     		push	{r7, lr}
 3715              		.cfi_def_cfa_offset 8
 3716              		.cfi_offset 7, -8
 3717              		.cfi_offset 14, -4
 3718 0002 00AF     		add	r7, sp, #0
 3719              		.cfi_def_cfa_register 7
 959:ui.c          ****     if (!editMode) //normal behavior
 3720              		.loc 1 959 0
 3721 0004 204B     		ldr	r3, .L188
 3722 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3723 0008 002B     		cmp	r3, #0
 3724 000a 37D1     		bne	.L184
 960:ui.c          ****     {
 961:ui.c          ****         currentCopedent += 1;
 3725              		.loc 1 961 0
 3726 000c 1F4B     		ldr	r3, .L188+4
 3727 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3728 0010 0133     		adds	r3, r3, #1
 3729 0012 DAB2     		uxtb	r2, r3
 3730 0014 1D4B     		ldr	r3, .L188+4
 3731 0016 1A70     		strb	r2, [r3]
 962:ui.c          ****         if (currentCopedent >= MAX_NUM_COPEDENTS)
 3732              		.loc 1 962 0
 3733 0018 1C4B     		ldr	r3, .L188+4
 3734 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3735 001c 062B     		cmp	r3, #6
 3736 001e 02D9     		bls	.L185
 963:ui.c          ****         {
 964:ui.c          ****             currentCopedent = 0;
 3737              		.loc 1 964 0
 3738 0020 1A4B     		ldr	r3, .L188+4
 3739 0022 0022     		movs	r2, #0
 3740 0024 1A70     		strb	r2, [r3]
 3741              	.L185:
 965:ui.c          ****         }
 966:ui.c          ****         necks[currentNeck] = currentCopedent;
 3742              		.loc 1 966 0
 3743 0026 1A4B     		ldr	r3, .L188+8
 3744 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3745 002a 1A46     		mov	r2, r3
 3746 002c 174B     		ldr	r3, .L188+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 86


 3747 002e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3748 0030 184B     		ldr	r3, .L188+12
 3749 0032 9954     		strb	r1, [r3, r2]
 967:ui.c          ****         neckByte = 0;
 3750              		.loc 1 967 0
 3751 0034 184B     		ldr	r3, .L188+16
 3752 0036 0022     		movs	r2, #0
 3753 0038 1A70     		strb	r2, [r3]
 968:ui.c          ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 3754              		.loc 1 968 0
 3755 003a 164B     		ldr	r3, .L188+12
 3756 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3757 003e 5B01     		lsls	r3, r3, #5
 3758 0040 DAB2     		uxtb	r2, r3
 3759 0042 144B     		ldr	r3, .L188+12
 3760 0044 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3761 0046 9B00     		lsls	r3, r3, #2
 3762 0048 DBB2     		uxtb	r3, r3
 3763 004a 1344     		add	r3, r3, r2
 3764 004c DAB2     		uxtb	r2, r3
 3765 004e 104B     		ldr	r3, .L188+8
 3766 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3767 0052 1344     		add	r3, r3, r2
 3768 0054 DBB2     		uxtb	r3, r3
 3769 0056 5AB2     		sxtb	r2, r3
 3770 0058 0F4B     		ldr	r3, .L188+16
 3771 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3772 005c 5BB2     		sxtb	r3, r3
 3773 005e 1343     		orrs	r3, r3, r2
 3774 0060 5BB2     		sxtb	r3, r3
 3775 0062 DAB2     		uxtb	r2, r3
 3776 0064 0C4B     		ldr	r3, .L188+16
 3777 0066 1A70     		strb	r2, [r3]
 969:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 3778              		.loc 1 969 0
 3779 0068 0B4B     		ldr	r3, .L188+16
 3780 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3781 006c 40F2FE71 		movw	r1, #2046
 3782 0070 1846     		mov	r0, r3
 3783 0072 FFF7FEFF 		bl	EEPROM_WriteByte
 970:ui.c          ****         displayCurrentPresetNameAndCopedent();
 3784              		.loc 1 970 0
 3785 0076 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 971:ui.c          ****     }
 972:ui.c          ****     else
 973:ui.c          ****     {
 974:ui.c          ****        menuAction(Right);
 975:ui.c          ****     }
 976:ui.c          **** }
 3786              		.loc 1 976 0
 3787 007a 02E0     		b	.L187
 3788              	.L184:
 974:ui.c          ****     }
 3789              		.loc 1 974 0
 3790 007c 0120     		movs	r0, #1
 3791 007e FFF7FEFF 		bl	menuAction
 3792              	.L187:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 87


 3793              		.loc 1 976 0
 3794 0082 00BF     		nop
 3795 0084 80BD     		pop	{r7, pc}
 3796              	.L189:
 3797 0086 00BF     		.align	2
 3798              	.L188:
 3799 0088 00000000 		.word	editMode
 3800 008c 00000000 		.word	currentCopedent
 3801 0090 00000000 		.word	currentNeck
 3802 0094 00000000 		.word	necks
 3803 0098 00000000 		.word	neckByte
 3804              		.cfi_endproc
 3805              	.LFE69:
 3806              		.size	rightPressed, .-rightPressed
 3807              		.section	.text.downPressed,"ax",%progbits
 3808              		.align	2
 3809              		.global	downPressed
 3810              		.thumb
 3811              		.thumb_func
 3812              		.type	downPressed, %function
 3813              	downPressed:
 3814              	.LFB70:
 977:ui.c          **** 
 978:ui.c          **** void downPressed()
 979:ui.c          **** {
 3815              		.loc 1 979 0
 3816              		.cfi_startproc
 3817              		@ args = 0, pretend = 0, frame = 0
 3818              		@ frame_needed = 1, uses_anonymous_args = 0
 3819 0000 80B5     		push	{r7, lr}
 3820              		.cfi_def_cfa_offset 8
 3821              		.cfi_offset 7, -8
 3822              		.cfi_offset 14, -4
 3823 0002 00AF     		add	r7, sp, #0
 3824              		.cfi_def_cfa_register 7
 980:ui.c          ****     if (!editMode) //normal behavior
 3825              		.loc 1 980 0
 3826 0004 0F4B     		ldr	r3, .L194
 3827 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3828 0008 002B     		cmp	r3, #0
 3829 000a 16D1     		bne	.L191
 981:ui.c          ****     {
 982:ui.c          ****         patchNum -= 1;
 3830              		.loc 1 982 0
 3831 000c 0E4B     		ldr	r3, .L194+4
 3832 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3833 0010 013B     		subs	r3, r3, #1
 3834 0012 DAB2     		uxtb	r2, r3
 3835 0014 0C4B     		ldr	r3, .L194+4
 3836 0016 1A70     		strb	r2, [r3]
 983:ui.c          ****         patchNum &= 63;
 3837              		.loc 1 983 0
 3838 0018 0B4B     		ldr	r3, .L194+4
 3839 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3840 001c 03F03F03 		and	r3, r3, #63
 3841 0020 DAB2     		uxtb	r2, r3
 3842 0022 094B     		ldr	r3, .L194+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 88


 3843 0024 1A70     		strb	r2, [r3]
 984:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 3844              		.loc 1 984 0
 3845 0026 084B     		ldr	r3, .L194+4
 3846 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3847 002a 40F2F271 		movw	r1, #2034
 3848 002e 1846     		mov	r0, r3
 3849 0030 FFF7FEFF 		bl	EEPROM_WriteByte
 985:ui.c          ****         displayCurrentPresetNameAndCopedent();
 3850              		.loc 1 985 0
 3851 0034 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 986:ui.c          ****     }
 987:ui.c          ****     else
 988:ui.c          ****     {
 989:ui.c          ****         menuAction(Down);
 990:ui.c          ****     }
 991:ui.c          **** }
 3852              		.loc 1 991 0
 3853 0038 02E0     		b	.L193
 3854              	.L191:
 989:ui.c          ****     }
 3855              		.loc 1 989 0
 3856 003a 0220     		movs	r0, #2
 3857 003c FFF7FEFF 		bl	menuAction
 3858              	.L193:
 3859              		.loc 1 991 0
 3860 0040 00BF     		nop
 3861 0042 80BD     		pop	{r7, pc}
 3862              	.L195:
 3863              		.align	2
 3864              	.L194:
 3865 0044 00000000 		.word	editMode
 3866 0048 00000000 		.word	patchNum
 3867              		.cfi_endproc
 3868              	.LFE70:
 3869              		.size	downPressed, .-downPressed
 3870              		.section	.text.upPressed,"ax",%progbits
 3871              		.align	2
 3872              		.global	upPressed
 3873              		.thumb
 3874              		.thumb_func
 3875              		.type	upPressed, %function
 3876              	upPressed:
 3877              	.LFB71:
 992:ui.c          **** 
 993:ui.c          **** void upPressed()
 994:ui.c          **** {
 3878              		.loc 1 994 0
 3879              		.cfi_startproc
 3880              		@ args = 0, pretend = 0, frame = 0
 3881              		@ frame_needed = 1, uses_anonymous_args = 0
 3882 0000 80B5     		push	{r7, lr}
 3883              		.cfi_def_cfa_offset 8
 3884              		.cfi_offset 7, -8
 3885              		.cfi_offset 14, -4
 3886 0002 00AF     		add	r7, sp, #0
 3887              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 89


 995:ui.c          ****     if (!editMode) //normal behavior
 3888              		.loc 1 995 0
 3889 0004 0F4B     		ldr	r3, .L200
 3890 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3891 0008 002B     		cmp	r3, #0
 3892 000a 16D1     		bne	.L197
 996:ui.c          ****     {
 997:ui.c          ****         patchNum += 1;
 3893              		.loc 1 997 0
 3894 000c 0E4B     		ldr	r3, .L200+4
 3895 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3896 0010 0133     		adds	r3, r3, #1
 3897 0012 DAB2     		uxtb	r2, r3
 3898 0014 0C4B     		ldr	r3, .L200+4
 3899 0016 1A70     		strb	r2, [r3]
 998:ui.c          ****         patchNum &= 63;
 3900              		.loc 1 998 0
 3901 0018 0B4B     		ldr	r3, .L200+4
 3902 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3903 001c 03F03F03 		and	r3, r3, #63
 3904 0020 DAB2     		uxtb	r2, r3
 3905 0022 094B     		ldr	r3, .L200+4
 3906 0024 1A70     		strb	r2, [r3]
 999:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 3907              		.loc 1 999 0
 3908 0026 084B     		ldr	r3, .L200+4
 3909 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3910 002a 40F2F271 		movw	r1, #2034
 3911 002e 1846     		mov	r0, r3
 3912 0030 FFF7FEFF 		bl	EEPROM_WriteByte
1000:ui.c          ****         displayCurrentPresetNameAndCopedent();
 3913              		.loc 1 1000 0
 3914 0034 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1001:ui.c          ****     }
1002:ui.c          ****     else
1003:ui.c          ****     {
1004:ui.c          ****         menuAction(Up);
1005:ui.c          ****     }
1006:ui.c          **** }
 3915              		.loc 1 1006 0
 3916 0038 02E0     		b	.L199
 3917              	.L197:
1004:ui.c          ****     }
 3918              		.loc 1 1004 0
 3919 003a 0320     		movs	r0, #3
 3920 003c FFF7FEFF 		bl	menuAction
 3921              	.L199:
 3922              		.loc 1 1006 0
 3923 0040 00BF     		nop
 3924 0042 80BD     		pop	{r7, pc}
 3925              	.L201:
 3926              		.align	2
 3927              	.L200:
 3928 0044 00000000 		.word	editMode
 3929 0048 00000000 		.word	patchNum
 3930              		.cfi_endproc
 3931              	.LFE71:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 90


 3932              		.size	upPressed, .-upPressed
 3933              		.section	.text.enterPressed,"ax",%progbits
 3934              		.align	2
 3935              		.global	enterPressed
 3936              		.thumb
 3937              		.thumb_func
 3938              		.type	enterPressed, %function
 3939              	enterPressed:
 3940              	.LFB72:
1007:ui.c          **** 
1008:ui.c          **** void enterPressed()
1009:ui.c          **** {
 3941              		.loc 1 1009 0
 3942              		.cfi_startproc
 3943              		@ args = 0, pretend = 0, frame = 0
 3944              		@ frame_needed = 1, uses_anonymous_args = 0
 3945 0000 80B5     		push	{r7, lr}
 3946              		.cfi_def_cfa_offset 8
 3947              		.cfi_offset 7, -8
 3948              		.cfi_offset 14, -4
 3949 0002 00AF     		add	r7, sp, #0
 3950              		.cfi_def_cfa_register 7
1010:ui.c          ****     if (!editMode) //normal behavior
 3951              		.loc 1 1010 0
 3952 0004 044B     		ldr	r3, .L205
 3953 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3954 0008 002B     		cmp	r3, #0
 3955 000a 02D0     		beq	.L204
1011:ui.c          ****     {
1012:ui.c          ****         ;//nothing
1013:ui.c          ****     }
1014:ui.c          ****     else
1015:ui.c          ****     {
1016:ui.c          ****         menuAction(Enter);
 3956              		.loc 1 1016 0
 3957 000c 0420     		movs	r0, #4
 3958 000e FFF7FEFF 		bl	menuAction
 3959              	.L204:
1017:ui.c          ****     }
1018:ui.c          **** }
 3960              		.loc 1 1018 0
 3961 0012 00BF     		nop
 3962 0014 80BD     		pop	{r7, pc}
 3963              	.L206:
 3964 0016 00BF     		.align	2
 3965              	.L205:
 3966 0018 00000000 		.word	editMode
 3967              		.cfi_endproc
 3968              	.LFE72:
 3969              		.size	enterPressed, .-enterPressed
 3970              		.section	.rodata
 3971              		.align	2
 3972              	.LC29:
 3973 01f8 43414C49 		.ascii	"CALIBRATION\000"
 3973      42524154 
 3973      494F4E00 
 3974              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 91


 3975              	.LC30:
 3976 0204 4D4F5645 		.ascii	"MOVE ALL PEDALS\000"
 3976      20414C4C 
 3976      20504544 
 3976      414C5300 
 3977              		.align	2
 3978              	.LC31:
 3979 0214 414E4420 		.ascii	"AND LEVERS\000"
 3979      4C455645 
 3979      525300
 3980 021f 00       		.align	2
 3981              	.LC32:
 3982 0220 5448454E 		.ascii	"THEN PRESS ->\000"
 3982      20505245 
 3982      5353202D 
 3982      3E00
 3983              		.section	.text.enterLeverCalibrationMode,"ax",%progbits
 3984              		.align	2
 3985              		.global	enterLeverCalibrationMode
 3986              		.thumb
 3987              		.thumb_func
 3988              		.type	enterLeverCalibrationMode, %function
 3989              	enterLeverCalibrationMode:
 3990              	.LFB73:
1019:ui.c          **** 
1020:ui.c          **** void enterLeverCalibrationMode(void)
1021:ui.c          **** {
 3991              		.loc 1 1021 0
 3992              		.cfi_startproc
 3993              		@ args = 0, pretend = 0, frame = 8
 3994              		@ frame_needed = 1, uses_anonymous_args = 0
 3995 0000 80B5     		push	{r7, lr}
 3996              		.cfi_def_cfa_offset 8
 3997              		.cfi_offset 7, -8
 3998              		.cfi_offset 14, -4
 3999 0002 82B0     		sub	sp, sp, #8
 4000              		.cfi_def_cfa_offset 16
 4001 0004 00AF     		add	r7, sp, #0
 4002              		.cfi_def_cfa_register 7
1022:ui.c          ****     OLEDclear(128, 64);
 4003              		.loc 1 1022 0
 4004 0006 4021     		movs	r1, #64
 4005 0008 8020     		movs	r0, #128
 4006 000a FFF7FEFF 		bl	OLEDclear
1023:ui.c          ****     myGFX_setFont(2);
 4007              		.loc 1 1023 0
 4008 000e 0220     		movs	r0, #2
 4009 0010 FFF7FEFF 		bl	myGFX_setFont
1024:ui.c          ****     OLEDtextColor(0, 1);
 4010              		.loc 1 1024 0
 4011 0014 0121     		movs	r1, #1
 4012 0016 0020     		movs	r0, #0
 4013 0018 FFF7FEFF 		bl	OLEDtextColor
1025:ui.c          ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 4014              		.loc 1 1025 0
 4015 001c 0023     		movs	r3, #0
 4016 001e 0122     		movs	r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 92


 4017 0020 0B21     		movs	r1, #11
 4018 0022 1B48     		ldr	r0, .L210
 4019 0024 FFF7FEFF 		bl	OLEDwriteString
1026:ui.c          ****     OLEDwriteString("MOVE ALL PEDALS", 15, 1, SecondLine);
 4020              		.loc 1 1026 0
 4021 0028 0123     		movs	r3, #1
 4022 002a 0122     		movs	r2, #1
 4023 002c 0F21     		movs	r1, #15
 4024 002e 1948     		ldr	r0, .L210+4
 4025 0030 FFF7FEFF 		bl	OLEDwriteString
1027:ui.c          ****     OLEDwriteString("AND LEVERS", 10, 1, ThirdLine);
 4026              		.loc 1 1027 0
 4027 0034 0223     		movs	r3, #2
 4028 0036 0122     		movs	r2, #1
 4029 0038 0A21     		movs	r1, #10
 4030 003a 1748     		ldr	r0, .L210+8
 4031 003c FFF7FEFF 		bl	OLEDwriteString
1028:ui.c          ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 4032              		.loc 1 1028 0
 4033 0040 0323     		movs	r3, #3
 4034 0042 0122     		movs	r2, #1
 4035 0044 0F21     		movs	r1, #15
 4036 0046 1548     		ldr	r0, .L210+12
 4037 0048 FFF7FEFF 		bl	OLEDwriteString
1029:ui.c          ****     mainOLEDWaitingToSend = 1;
 4038              		.loc 1 1029 0
 4039 004c 144B     		ldr	r3, .L210+16
 4040 004e 0122     		movs	r2, #1
 4041 0050 1A70     		strb	r2, [r3]
1030:ui.c          ****     OLEDtextColor(1, 0);
 4042              		.loc 1 1030 0
 4043 0052 0021     		movs	r1, #0
 4044 0054 0120     		movs	r0, #1
 4045 0056 FFF7FEFF 		bl	OLEDtextColor
 4046              	.LBB12:
1031:ui.c          ****     //entering calibration mode, clear the pedals low and high arrays
1032:ui.c          ****     for (int i = 0; i < 10; i++)
 4047              		.loc 1 1032 0
 4048 005a 0023     		movs	r3, #0
 4049 005c 7B60     		str	r3, [r7, #4]
 4050 005e 0DE0     		b	.L208
 4051              	.L209:
1033:ui.c          ****     {
1034:ui.c          ****         pedals_low[i] = 4095;
 4052              		.loc 1 1034 0 discriminator 3
 4053 0060 104A     		ldr	r2, .L210+20
 4054 0062 7B68     		ldr	r3, [r7, #4]
 4055 0064 40F6FF71 		movw	r1, #4095
 4056 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1035:ui.c          ****         pedals_high[i] = 0;
 4057              		.loc 1 1035 0 discriminator 3
 4058 006c 0E4A     		ldr	r2, .L210+24
 4059 006e 7B68     		ldr	r3, [r7, #4]
 4060 0070 0021     		movs	r1, #0
 4061 0072 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1032:ui.c          ****     {
 4062              		.loc 1 1032 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 93


 4063 0076 7B68     		ldr	r3, [r7, #4]
 4064 0078 0133     		adds	r3, r3, #1
 4065 007a 7B60     		str	r3, [r7, #4]
 4066              	.L208:
1032:ui.c          ****     {
 4067              		.loc 1 1032 0 is_stmt 0 discriminator 1
 4068 007c 7B68     		ldr	r3, [r7, #4]
 4069 007e 092B     		cmp	r3, #9
 4070 0080 EEDD     		ble	.L209
 4071              	.LBE12:
1036:ui.c          ****     }
1037:ui.c          ****     leverCalibrationMode = 1;
 4072              		.loc 1 1037 0 is_stmt 1
 4073 0082 0A4B     		ldr	r3, .L210+28
 4074 0084 0122     		movs	r2, #1
 4075 0086 1A70     		strb	r2, [r3]
1038:ui.c          **** }
 4076              		.loc 1 1038 0
 4077 0088 00BF     		nop
 4078 008a 0837     		adds	r7, r7, #8
 4079              		.cfi_def_cfa_offset 8
 4080 008c BD46     		mov	sp, r7
 4081              		.cfi_def_cfa_register 13
 4082              		@ sp needed
 4083 008e 80BD     		pop	{r7, pc}
 4084              	.L211:
 4085              		.align	2
 4086              	.L210:
 4087 0090 F8010000 		.word	.LC29
 4088 0094 04020000 		.word	.LC30
 4089 0098 14020000 		.word	.LC31
 4090 009c 20020000 		.word	.LC32
 4091 00a0 00000000 		.word	mainOLEDWaitingToSend
 4092 00a4 00000000 		.word	pedals_low
 4093 00a8 00000000 		.word	pedals_high
 4094 00ac 00000000 		.word	leverCalibrationMode
 4095              		.cfi_endproc
 4096              	.LFE73:
 4097              		.size	enterLeverCalibrationMode, .-enterLeverCalibrationMode
 4098              		.section	.text.exitLeverCalibrationMode,"ax",%progbits
 4099              		.align	2
 4100              		.global	exitLeverCalibrationMode
 4101              		.thumb
 4102              		.thumb_func
 4103              		.type	exitLeverCalibrationMode, %function
 4104              	exitLeverCalibrationMode:
 4105              	.LFB74:
1039:ui.c          **** 
1040:ui.c          **** void exitLeverCalibrationMode(void)
1041:ui.c          **** {
 4106              		.loc 1 1041 0
 4107              		.cfi_startproc
 4108              		@ args = 0, pretend = 0, frame = 16
 4109              		@ frame_needed = 1, uses_anonymous_args = 0
 4110 0000 80B5     		push	{r7, lr}
 4111              		.cfi_def_cfa_offset 8
 4112              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 94


 4113              		.cfi_offset 14, -4
 4114 0002 84B0     		sub	sp, sp, #16
 4115              		.cfi_def_cfa_offset 24
 4116 0004 00AF     		add	r7, sp, #0
 4117              		.cfi_def_cfa_register 7
1042:ui.c          ****     leverCalibrationMode = 0;
 4118              		.loc 1 1042 0
 4119 0006 4E4B     		ldr	r3, .L221
 4120 0008 0022     		movs	r2, #0
 4121 000a 1A70     		strb	r2, [r3]
 4122              	.LBB13:
1043:ui.c          ****     //draw normal screen
1044:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 4123              		.loc 1 1044 0
 4124 000c 0023     		movs	r3, #0
 4125 000e FB60     		str	r3, [r7, #12]
 4126 0010 19E0     		b	.L213
 4127              	.L216:
1045:ui.c          ****     {
1046:ui.c          ****         //if you are closer to pedal high than pedal low, then switch high and low, the sensor is r
1047:ui.c          ****         if (angle[i] > (pedals_low[i]+20))
 4128              		.loc 1 1047 0
 4129 0012 4C4A     		ldr	r2, .L221+4
 4130 0014 FB68     		ldr	r3, [r7, #12]
 4131 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4132 001a 1946     		mov	r1, r3
 4133 001c 4A4A     		ldr	r2, .L221+8
 4134 001e FB68     		ldr	r3, [r7, #12]
 4135 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4136 0024 1433     		adds	r3, r3, #20
 4137 0026 9942     		cmp	r1, r3
 4138 0028 05DD     		ble	.L214
1048:ui.c          ****         {
1049:ui.c          ****             pedal_inverted[i] = 1;
 4139              		.loc 1 1049 0
 4140 002a 484A     		ldr	r2, .L221+12
 4141 002c FB68     		ldr	r3, [r7, #12]
 4142 002e 1344     		add	r3, r3, r2
 4143 0030 0122     		movs	r2, #1
 4144 0032 1A70     		strb	r2, [r3]
 4145 0034 04E0     		b	.L215
 4146              	.L214:
1050:ui.c          ****         }
1051:ui.c          ****         else
1052:ui.c          ****         {
1053:ui.c          ****             pedal_inverted[i] = 0;
 4147              		.loc 1 1053 0
 4148 0036 454A     		ldr	r2, .L221+12
 4149 0038 FB68     		ldr	r3, [r7, #12]
 4150 003a 1344     		add	r3, r3, r2
 4151 003c 0022     		movs	r2, #0
 4152 003e 1A70     		strb	r2, [r3]
 4153              	.L215:
1044:ui.c          ****     {
 4154              		.loc 1 1044 0 discriminator 2
 4155 0040 FB68     		ldr	r3, [r7, #12]
 4156 0042 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 95


 4157 0044 FB60     		str	r3, [r7, #12]
 4158              	.L213:
1044:ui.c          ****     {
 4159              		.loc 1 1044 0 is_stmt 0 discriminator 1
 4160 0046 FB68     		ldr	r3, [r7, #12]
 4161 0048 092B     		cmp	r3, #9
 4162 004a E2DD     		ble	.L216
 4163              	.LBE13:
1054:ui.c          ****         }
1055:ui.c          ****     }
1056:ui.c          ****     uint16_t pedal_inverted_byte = 0;
 4164              		.loc 1 1056 0 is_stmt 1
 4165 004c 0023     		movs	r3, #0
 4166 004e 7B81     		strh	r3, [r7, #10]	@ movhi
 4167              	.LBB14:
1057:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 4168              		.loc 1 1057 0
 4169 0050 0023     		movs	r3, #0
 4170 0052 7B60     		str	r3, [r7, #4]
 4171 0054 0EE0     		b	.L217
 4172              	.L218:
1058:ui.c          ****     {
1059:ui.c          ****         pedal_inverted_byte += pedal_inverted[i] << i;
 4173              		.loc 1 1059 0 discriminator 3
 4174 0056 3D4A     		ldr	r2, .L221+12
 4175 0058 7B68     		ldr	r3, [r7, #4]
 4176 005a 1344     		add	r3, r3, r2
 4177 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4178 005e 1A46     		mov	r2, r3
 4179 0060 7B68     		ldr	r3, [r7, #4]
 4180 0062 02FA03F3 		lsl	r3, r2, r3
 4181 0066 9AB2     		uxth	r2, r3
 4182 0068 7B89     		ldrh	r3, [r7, #10]	@ movhi
 4183 006a 1344     		add	r3, r3, r2
 4184 006c 7B81     		strh	r3, [r7, #10]	@ movhi
1057:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 4185              		.loc 1 1057 0 discriminator 3
 4186 006e 7B68     		ldr	r3, [r7, #4]
 4187 0070 0133     		adds	r3, r3, #1
 4188 0072 7B60     		str	r3, [r7, #4]
 4189              	.L217:
1057:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 4190              		.loc 1 1057 0 is_stmt 0 discriminator 1
 4191 0074 7B68     		ldr	r3, [r7, #4]
 4192 0076 092B     		cmp	r3, #9
 4193 0078 EDDD     		ble	.L218
 4194              	.LBE14:
1060:ui.c          ****     }
1061:ui.c          ****     EEPROM_WriteByte(pedal_inverted_byte>>8, EEPROM_PEDAL_INVERTED_OFFSET);
 4195              		.loc 1 1061 0 is_stmt 1
 4196 007a 7B89     		ldrh	r3, [r7, #10]
 4197 007c 1B0A     		lsrs	r3, r3, #8
 4198 007e 9BB2     		uxth	r3, r3
 4199 0080 DBB2     		uxtb	r3, r3
 4200 0082 40F2FB71 		movw	r1, #2043
 4201 0086 1846     		mov	r0, r3
 4202 0088 FFF7FEFF 		bl	EEPROM_WriteByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 96


1062:ui.c          ****     EEPROM_WriteByte(pedal_inverted_byte& 255, EEPROM_PEDAL_INVERTED_OFFSET+1);
 4203              		.loc 1 1062 0
 4204 008c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 4205 008e DBB2     		uxtb	r3, r3
 4206 0090 40F2FC71 		movw	r1, #2044
 4207 0094 1846     		mov	r0, r3
 4208 0096 FFF7FEFF 		bl	EEPROM_WriteByte
1063:ui.c          ****     calculatePedalRatios();
 4209              		.loc 1 1063 0
 4210 009a FFF7FEFF 		bl	calculatePedalRatios
 4211              	.LBB15:
1064:ui.c          ****     //now need to store this in EEPROM.                
1065:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 4212              		.loc 1 1065 0
 4213 009e 0023     		movs	r3, #0
 4214 00a0 3B60     		str	r3, [r7]
 4215 00a2 45E0     		b	.L219
 4216              	.L220:
1066:ui.c          ****     {
1067:ui.c          ****          EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + (i*4));
 4217              		.loc 1 1067 0 discriminator 3
 4218 00a4 284A     		ldr	r2, .L221+8
 4219 00a6 3B68     		ldr	r3, [r7]
 4220 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4221 00ac 1B0A     		lsrs	r3, r3, #8
 4222 00ae 9BB2     		uxth	r3, r3
 4223 00b0 DAB2     		uxtb	r2, r3
 4224 00b2 3B68     		ldr	r3, [r7]
 4225 00b4 9BB2     		uxth	r3, r3
 4226 00b6 9B00     		lsls	r3, r3, #2
 4227 00b8 9BB2     		uxth	r3, r3
 4228 00ba 03F29A73 		addw	r3, r3, #1946
 4229 00be 9BB2     		uxth	r3, r3
 4230 00c0 1946     		mov	r1, r3
 4231 00c2 1046     		mov	r0, r2
 4232 00c4 FFF7FEFF 		bl	EEPROM_WriteByte
1068:ui.c          ****          EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 1));
 4233              		.loc 1 1068 0 discriminator 3
 4234 00c8 1F4A     		ldr	r2, .L221+8
 4235 00ca 3B68     		ldr	r3, [r7]
 4236 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4237 00d0 DAB2     		uxtb	r2, r3
 4238 00d2 3B68     		ldr	r3, [r7]
 4239 00d4 9BB2     		uxth	r3, r3
 4240 00d6 9B00     		lsls	r3, r3, #2
 4241 00d8 9BB2     		uxth	r3, r3
 4242 00da 03F29B73 		addw	r3, r3, #1947
 4243 00de 9BB2     		uxth	r3, r3
 4244 00e0 1946     		mov	r1, r3
 4245 00e2 1046     		mov	r0, r2
 4246 00e4 FFF7FEFF 		bl	EEPROM_WriteByte
1069:ui.c          ****          EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2));
 4247              		.loc 1 1069 0 discriminator 3
 4248 00e8 194A     		ldr	r2, .L221+16
 4249 00ea 3B68     		ldr	r3, [r7]
 4250 00ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4251 00f0 1B0A     		lsrs	r3, r3, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 97


 4252 00f2 9BB2     		uxth	r3, r3
 4253 00f4 DAB2     		uxtb	r2, r3
 4254 00f6 3B68     		ldr	r3, [r7]
 4255 00f8 03F2E713 		addw	r3, r3, #487
 4256 00fc 9BB2     		uxth	r3, r3
 4257 00fe 9B00     		lsls	r3, r3, #2
 4258 0100 9BB2     		uxth	r3, r3
 4259 0102 1946     		mov	r1, r3
 4260 0104 1046     		mov	r0, r2
 4261 0106 FFF7FEFF 		bl	EEPROM_WriteByte
1070:ui.c          ****          EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 3));
 4262              		.loc 1 1070 0 discriminator 3
 4263 010a 114A     		ldr	r2, .L221+16
 4264 010c 3B68     		ldr	r3, [r7]
 4265 010e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4266 0112 DAB2     		uxtb	r2, r3
 4267 0114 3B68     		ldr	r3, [r7]
 4268 0116 9BB2     		uxth	r3, r3
 4269 0118 9B00     		lsls	r3, r3, #2
 4270 011a 9BB2     		uxth	r3, r3
 4271 011c 03F29D73 		addw	r3, r3, #1949
 4272 0120 9BB2     		uxth	r3, r3
 4273 0122 1946     		mov	r1, r3
 4274 0124 1046     		mov	r0, r2
 4275 0126 FFF7FEFF 		bl	EEPROM_WriteByte
1065:ui.c          ****     {
 4276              		.loc 1 1065 0 discriminator 3
 4277 012a 3B68     		ldr	r3, [r7]
 4278 012c 0133     		adds	r3, r3, #1
 4279 012e 3B60     		str	r3, [r7]
 4280              	.L219:
1065:ui.c          ****     {
 4281              		.loc 1 1065 0 is_stmt 0 discriminator 1
 4282 0130 3B68     		ldr	r3, [r7]
 4283 0132 092B     		cmp	r3, #9
 4284 0134 B6DD     		ble	.L220
 4285              	.LBE15:
1071:ui.c          ****     }
1072:ui.c          **** }
 4286              		.loc 1 1072 0 is_stmt 1
 4287 0136 00BF     		nop
 4288 0138 1037     		adds	r7, r7, #16
 4289              		.cfi_def_cfa_offset 8
 4290 013a BD46     		mov	sp, r7
 4291              		.cfi_def_cfa_register 13
 4292              		@ sp needed
 4293 013c 80BD     		pop	{r7, pc}
 4294              	.L222:
 4295 013e 00BF     		.align	2
 4296              	.L221:
 4297 0140 00000000 		.word	leverCalibrationMode
 4298 0144 00000000 		.word	angle
 4299 0148 00000000 		.word	pedals_low
 4300 014c 00000000 		.word	pedal_inverted
 4301 0150 00000000 		.word	pedals_high
 4302              		.cfi_endproc
 4303              	.LFE74:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 98


 4304              		.size	exitLeverCalibrationMode, .-exitLeverCalibrationMode
 4305              		.section	.rodata
 4306 022e 0000     		.align	2
 4307              	.LC33:
 4308 0230 504C4143 		.ascii	"PLACE BAR AT \000"
 4308      45204241 
 4308      52204154 
 4308      2000
 4309 023e 0000     		.align	2
 4310              	.LC34:
 4311 0240 46524554 		.ascii	"FRET \000"
 4311      2000
 4312              		.section	.text.enterFretCalibrationMode,"ax",%progbits
 4313              		.align	2
 4314              		.global	enterFretCalibrationMode
 4315              		.thumb
 4316              		.thumb_func
 4317              		.type	enterFretCalibrationMode, %function
 4318              	enterFretCalibrationMode:
 4319              	.LFB75:
1073:ui.c          **** 
1074:ui.c          **** 
1075:ui.c          **** void enterFretCalibrationMode(void)
1076:ui.c          **** {
 4320              		.loc 1 1076 0
 4321              		.cfi_startproc
 4322              		@ args = 0, pretend = 0, frame = 0
 4323              		@ frame_needed = 1, uses_anonymous_args = 0
 4324 0000 80B5     		push	{r7, lr}
 4325              		.cfi_def_cfa_offset 8
 4326              		.cfi_offset 7, -8
 4327              		.cfi_offset 14, -4
 4328 0002 00AF     		add	r7, sp, #0
 4329              		.cfi_def_cfa_register 7
1077:ui.c          ****     OLEDclear(128, 64);
 4330              		.loc 1 1077 0
 4331 0004 4021     		movs	r1, #64
 4332 0006 8020     		movs	r0, #128
 4333 0008 FFF7FEFF 		bl	OLEDclear
1078:ui.c          ****     myGFX_setFont(2);
 4334              		.loc 1 1078 0
 4335 000c 0220     		movs	r0, #2
 4336 000e FFF7FEFF 		bl	myGFX_setFont
1079:ui.c          ****     OLEDtextColor(0, 1);
 4337              		.loc 1 1079 0
 4338 0012 0121     		movs	r1, #1
 4339 0014 0020     		movs	r0, #0
 4340 0016 FFF7FEFF 		bl	OLEDtextColor
1080:ui.c          ****     fretToCalibrate = 0;
 4341              		.loc 1 1080 0
 4342 001a 194B     		ldr	r3, .L224
 4343 001c 0022     		movs	r2, #0
 4344 001e 1A70     		strb	r2, [r3]
1081:ui.c          ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 4345              		.loc 1 1081 0
 4346 0020 0023     		movs	r3, #0
 4347 0022 0122     		movs	r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 99


 4348 0024 0B21     		movs	r1, #11
 4349 0026 1748     		ldr	r0, .L224+4
 4350 0028 FFF7FEFF 		bl	OLEDwriteString
1082:ui.c          ****     OLEDwriteString("PLACE BAR AT ", 15, 1, SecondLine);
 4351              		.loc 1 1082 0
 4352 002c 0123     		movs	r3, #1
 4353 002e 0122     		movs	r2, #1
 4354 0030 0F21     		movs	r1, #15
 4355 0032 1548     		ldr	r0, .L224+8
 4356 0034 FFF7FEFF 		bl	OLEDwriteString
1083:ui.c          ****     OLEDwriteString("FRET ", 5, 1, ThirdLine);
 4357              		.loc 1 1083 0
 4358 0038 0223     		movs	r3, #2
 4359 003a 0122     		movs	r2, #1
 4360 003c 0521     		movs	r1, #5
 4361 003e 1348     		ldr	r0, .L224+12
 4362 0040 FFF7FEFF 		bl	OLEDwriteString
1084:ui.c          ****     OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 4363              		.loc 1 1084 0
 4364 0044 0E4B     		ldr	r3, .L224
 4365 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4366 0048 1A46     		mov	r2, r3
 4367 004a 114B     		ldr	r3, .L224+16
 4368 004c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 4369 004e 1846     		mov	r0, r3
 4370 0050 0223     		movs	r3, #2
 4371 0052 2822     		movs	r2, #40
 4372 0054 0221     		movs	r1, #2
 4373 0056 FFF7FEFF 		bl	OLEDwriteInt
1085:ui.c          ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 4374              		.loc 1 1085 0
 4375 005a 0323     		movs	r3, #3
 4376 005c 0122     		movs	r2, #1
 4377 005e 0F21     		movs	r1, #15
 4378 0060 0C48     		ldr	r0, .L224+20
 4379 0062 FFF7FEFF 		bl	OLEDwriteString
1086:ui.c          ****     mainOLEDWaitingToSend = 1;
 4380              		.loc 1 1086 0
 4381 0066 0C4B     		ldr	r3, .L224+24
 4382 0068 0122     		movs	r2, #1
 4383 006a 1A70     		strb	r2, [r3]
1087:ui.c          ****     OLEDtextColor(1, 0);
 4384              		.loc 1 1087 0
 4385 006c 0021     		movs	r1, #0
 4386 006e 0120     		movs	r0, #1
 4387 0070 FFF7FEFF 		bl	OLEDtextColor
1088:ui.c          ****     fretCalibrationMode = 1;
 4388              		.loc 1 1088 0
 4389 0074 094B     		ldr	r3, .L224+28
 4390 0076 0122     		movs	r2, #1
 4391 0078 1A70     		strb	r2, [r3]
1089:ui.c          **** }
 4392              		.loc 1 1089 0
 4393 007a 00BF     		nop
 4394 007c 80BD     		pop	{r7, pc}
 4395              	.L225:
 4396 007e 00BF     		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 100


 4397              	.L224:
 4398 0080 00000000 		.word	fretToCalibrate
 4399 0084 F8010000 		.word	.LC29
 4400 0088 30020000 		.word	.LC33
 4401 008c 40020000 		.word	.LC34
 4402 0090 00000000 		.word	whichFretArray
 4403 0094 20020000 		.word	.LC32
 4404 0098 00000000 		.word	mainOLEDWaitingToSend
 4405 009c 00000000 		.word	fretCalibrationMode
 4406              		.cfi_endproc
 4407              	.LFE75:
 4408              		.size	enterFretCalibrationMode, .-enterFretCalibrationMode
 4409              		.section	.text.exitFretCalibrationMode,"ax",%progbits
 4410              		.align	2
 4411              		.global	exitFretCalibrationMode
 4412              		.thumb
 4413              		.thumb_func
 4414              		.type	exitFretCalibrationMode, %function
 4415              	exitFretCalibrationMode:
 4416              	.LFB76:
1090:ui.c          **** 
1091:ui.c          **** void exitFretCalibrationMode(void)
1092:ui.c          **** {
 4417              		.loc 1 1092 0
 4418              		.cfi_startproc
 4419              		@ args = 0, pretend = 0, frame = 8
 4420              		@ frame_needed = 1, uses_anonymous_args = 0
 4421 0000 80B5     		push	{r7, lr}
 4422              		.cfi_def_cfa_offset 8
 4423              		.cfi_offset 7, -8
 4424              		.cfi_offset 14, -4
 4425 0002 82B0     		sub	sp, sp, #8
 4426              		.cfi_def_cfa_offset 16
 4427 0004 00AF     		add	r7, sp, #0
 4428              		.cfi_def_cfa_register 7
1093:ui.c          ****     fretCalibrationMode = 0;
 4429              		.loc 1 1093 0
 4430 0006 2B4B     		ldr	r3, .L229
 4431 0008 0022     		movs	r2, #0
 4432 000a 1A70     		strb	r2, [r3]
 4433              	.LBB16:
1094:ui.c          ****     //now need to store this in EEPROM.                
1095:ui.c          ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 4434              		.loc 1 1095 0
 4435 000c 0023     		movs	r3, #0
 4436 000e 7B60     		str	r3, [r7, #4]
 4437 0010 47E0     		b	.L227
 4438              	.L228:
1096:ui.c          ****     {
1097:ui.c          ****          EEPROM_WriteByte((fretMeasurements[0][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + (i*4));
 4439              		.loc 1 1097 0 discriminator 3
 4440 0012 294A     		ldr	r2, .L229+4
 4441 0014 7B68     		ldr	r3, [r7, #4]
 4442 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4443 001a 1B0A     		lsrs	r3, r3, #8
 4444 001c 9BB2     		uxth	r3, r3
 4445 001e DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 101


 4446 0020 7B68     		ldr	r3, [r7, #4]
 4447 0022 9BB2     		uxth	r3, r3
 4448 0024 9B00     		lsls	r3, r3, #2
 4449 0026 9BB2     		uxth	r3, r3
 4450 0028 03F2C273 		addw	r3, r3, #1986
 4451 002c 9BB2     		uxth	r3, r3
 4452 002e 1946     		mov	r1, r3
 4453 0030 1046     		mov	r0, r2
 4454 0032 FFF7FEFF 		bl	EEPROM_WriteByte
1098:ui.c          ****          EEPROM_WriteByte((fretMeasurements[0][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 4455              		.loc 1 1098 0 discriminator 3
 4456 0036 204A     		ldr	r2, .L229+4
 4457 0038 7B68     		ldr	r3, [r7, #4]
 4458 003a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4459 003e DAB2     		uxtb	r2, r3
 4460 0040 7B68     		ldr	r3, [r7, #4]
 4461 0042 9BB2     		uxth	r3, r3
 4462 0044 9B00     		lsls	r3, r3, #2
 4463 0046 9BB2     		uxth	r3, r3
 4464 0048 03F2C373 		addw	r3, r3, #1987
 4465 004c 9BB2     		uxth	r3, r3
 4466 004e 1946     		mov	r1, r3
 4467 0050 1046     		mov	r0, r2
 4468 0052 FFF7FEFF 		bl	EEPROM_WriteByte
1099:ui.c          ****          EEPROM_WriteByte((fretMeasurements[1][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 
 4469              		.loc 1 1099 0 discriminator 3
 4470 0056 184A     		ldr	r2, .L229+4
 4471 0058 7B68     		ldr	r3, [r7, #4]
 4472 005a 0C33     		adds	r3, r3, #12
 4473 005c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4474 0060 1B0A     		lsrs	r3, r3, #8
 4475 0062 9BB2     		uxth	r3, r3
 4476 0064 DAB2     		uxtb	r2, r3
 4477 0066 7B68     		ldr	r3, [r7, #4]
 4478 0068 03F2F113 		addw	r3, r3, #497
 4479 006c 9BB2     		uxth	r3, r3
 4480 006e 9B00     		lsls	r3, r3, #2
 4481 0070 9BB2     		uxth	r3, r3
 4482 0072 1946     		mov	r1, r3
 4483 0074 1046     		mov	r0, r2
 4484 0076 FFF7FEFF 		bl	EEPROM_WriteByte
1100:ui.c          ****          EEPROM_WriteByte((fretMeasurements[1][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 4485              		.loc 1 1100 0 discriminator 3
 4486 007a 0F4A     		ldr	r2, .L229+4
 4487 007c 7B68     		ldr	r3, [r7, #4]
 4488 007e 0C33     		adds	r3, r3, #12
 4489 0080 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4490 0084 DAB2     		uxtb	r2, r3
 4491 0086 7B68     		ldr	r3, [r7, #4]
 4492 0088 9BB2     		uxth	r3, r3
 4493 008a 9B00     		lsls	r3, r3, #2
 4494 008c 9BB2     		uxth	r3, r3
 4495 008e 03F2C573 		addw	r3, r3, #1989
 4496 0092 9BB2     		uxth	r3, r3
 4497 0094 1946     		mov	r1, r3
 4498 0096 1046     		mov	r0, r2
 4499 0098 FFF7FEFF 		bl	EEPROM_WriteByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 102


1095:ui.c          ****     {
 4500              		.loc 1 1095 0 discriminator 3
 4501 009c 7B68     		ldr	r3, [r7, #4]
 4502 009e 0133     		adds	r3, r3, #1
 4503 00a0 7B60     		str	r3, [r7, #4]
 4504              	.L227:
1095:ui.c          ****     {
 4505              		.loc 1 1095 0 is_stmt 0 discriminator 1
 4506 00a2 7B68     		ldr	r3, [r7, #4]
 4507 00a4 0B2B     		cmp	r3, #11
 4508 00a6 B4DD     		ble	.L228
 4509              	.LBE16:
1101:ui.c          ****     }
1102:ui.c          ****     exitEditModeMenu();
 4510              		.loc 1 1102 0 is_stmt 1
 4511 00a8 FFF7FEFF 		bl	exitEditModeMenu
1103:ui.c          **** 
1104:ui.c          **** }
 4512              		.loc 1 1104 0
 4513 00ac 00BF     		nop
 4514 00ae 0837     		adds	r7, r7, #8
 4515              		.cfi_def_cfa_offset 8
 4516 00b0 BD46     		mov	sp, r7
 4517              		.cfi_def_cfa_register 13
 4518              		@ sp needed
 4519 00b2 80BD     		pop	{r7, pc}
 4520              	.L230:
 4521              		.align	2
 4522              	.L229:
 4523 00b4 00000000 		.word	fretCalibrationMode
 4524 00b8 00000000 		.word	fretMeasurements
 4525              		.cfi_endproc
 4526              	.LFE76:
 4527              		.size	exitFretCalibrationMode, .-exitFretCalibrationMode
 4528              		.section	.rodata
 4529 0246 0000     		.align	2
 4530              	.LC35:
 4531 0248 2000     		.ascii	" \000"
 4532              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 4533              		.align	2
 4534              		.global	displayCurrentPresetNameAndCopedent
 4535              		.thumb
 4536              		.thumb_func
 4537              		.type	displayCurrentPresetNameAndCopedent, %function
 4538              	displayCurrentPresetNameAndCopedent:
 4539              	.LFB77:
1105:ui.c          **** 
1106:ui.c          **** 
1107:ui.c          **** void displayCurrentPresetNameAndCopedent(void)
1108:ui.c          **** {
 4540              		.loc 1 1108 0
 4541              		.cfi_startproc
 4542              		@ args = 0, pretend = 0, frame = 8
 4543              		@ frame_needed = 1, uses_anonymous_args = 0
 4544 0000 90B5     		push	{r4, r7, lr}
 4545              		.cfi_def_cfa_offset 12
 4546              		.cfi_offset 4, -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 103


 4547              		.cfi_offset 7, -8
 4548              		.cfi_offset 14, -4
 4549 0002 85B0     		sub	sp, sp, #20
 4550              		.cfi_def_cfa_offset 32
 4551 0004 02AF     		add	r7, sp, #8
 4552              		.cfi_def_cfa 7, 24
1109:ui.c          ****     int macroCheck = 0;
 4553              		.loc 1 1109 0
 4554 0006 0023     		movs	r3, #0
 4555 0008 7B60     		str	r3, [r7, #4]
 4556              	.LBB17:
1110:ui.c          ****     for (int i = 0; i < 8; i++)
 4557              		.loc 1 1110 0
 4558 000a 0023     		movs	r3, #0
 4559 000c 3B60     		str	r3, [r7]
 4560 000e 17E0     		b	.L232
 4561              	.L234:
1111:ui.c          ****     {
1112:ui.c          ****         if (macroNamesArray[patchNum][i][0] == 255)
 4562              		.loc 1 1112 0
 4563 0010 3D4B     		ldr	r3, .L237
 4564 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4565 0014 1846     		mov	r0, r3
 4566 0016 3D49     		ldr	r1, .L237+4
 4567 0018 3B68     		ldr	r3, [r7]
 4568 001a 1A46     		mov	r2, r3
 4569 001c D200     		lsls	r2, r2, #3
 4570 001e D21A     		subs	r2, r2, r3
 4571 0020 5300     		lsls	r3, r2, #1
 4572 0022 1A46     		mov	r2, r3
 4573 0024 0346     		mov	r3, r0
 4574 0026 DB00     		lsls	r3, r3, #3
 4575 0028 1B1A     		subs	r3, r3, r0
 4576 002a 1B01     		lsls	r3, r3, #4
 4577 002c 1344     		add	r3, r3, r2
 4578 002e 0B44     		add	r3, r3, r1
 4579 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4580 0032 FF2B     		cmp	r3, #255
 4581 0034 01D1     		bne	.L233
1113:ui.c          ****         {
1114:ui.c          ****             macroCheck = 1;
 4582              		.loc 1 1114 0
 4583 0036 0123     		movs	r3, #1
 4584 0038 7B60     		str	r3, [r7, #4]
 4585              	.L233:
1110:ui.c          ****     {
 4586              		.loc 1 1110 0 discriminator 2
 4587 003a 3B68     		ldr	r3, [r7]
 4588 003c 0133     		adds	r3, r3, #1
 4589 003e 3B60     		str	r3, [r7]
 4590              	.L232:
1110:ui.c          ****     {
 4591              		.loc 1 1110 0 is_stmt 0 discriminator 1
 4592 0040 3B68     		ldr	r3, [r7]
 4593 0042 072B     		cmp	r3, #7
 4594 0044 E4DD     		ble	.L234
 4595              	.LBE17:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 104


1115:ui.c          ****         }  
1116:ui.c          ****     }
1117:ui.c          ****     if (macroCheck == 0) //don't display if the name data still hasn't been retrieved by the SPI bu
 4596              		.loc 1 1117 0 is_stmt 1
 4597 0046 7B68     		ldr	r3, [r7, #4]
 4598 0048 002B     		cmp	r3, #0
 4599 004a 58D1     		bne	.L236
1118:ui.c          ****     {
1119:ui.c          ****         OLEDclear(128, 64);
 4600              		.loc 1 1119 0
 4601 004c 4021     		movs	r1, #64
 4602 004e 8020     		movs	r0, #128
 4603 0050 FFF7FEFF 		bl	OLEDclear
1120:ui.c          ****         OLEDtextColor(1, 0);
 4604              		.loc 1 1120 0
 4605 0054 0021     		movs	r1, #0
 4606 0056 0120     		movs	r0, #1
 4607 0058 FFF7FEFF 		bl	OLEDtextColor
1121:ui.c          ****         myGFX_setFont(0);
 4608              		.loc 1 1121 0
 4609 005c 0020     		movs	r0, #0
 4610 005e FFF7FEFF 		bl	myGFX_setFont
1122:ui.c          ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 4611              		.loc 1 1122 0
 4612 0062 294B     		ldr	r3, .L237
 4613 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4614 0066 1846     		mov	r0, r3
 4615 0068 0023     		movs	r3, #0
 4616 006a 0022     		movs	r2, #0
 4617 006c 0221     		movs	r1, #2
 4618 006e FFF7FEFF 		bl	OLEDwriteInt
1123:ui.c          ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1124:ui.c          ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], NAME_CLIPPED_LENGTH, 0, SecondLine)
 4619              		.loc 1 1124 0
 4620 0072 254B     		ldr	r3, .L237
 4621 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4622 0076 1A46     		mov	r2, r3
 4623 0078 1346     		mov	r3, r2
 4624 007a DB00     		lsls	r3, r3, #3
 4625 007c 9B1A     		subs	r3, r3, r2
 4626 007e 5B00     		lsls	r3, r3, #1
 4627 0080 234A     		ldr	r2, .L237+8
 4628 0082 9818     		adds	r0, r3, r2
 4629 0084 0123     		movs	r3, #1
 4630 0086 0022     		movs	r2, #0
 4631 0088 0C21     		movs	r1, #12
 4632 008a FFF7FEFF 		bl	OLEDwriteString
1125:ui.c          ****         GFXwriteFastHLine(&theGFX, 0, 40, 128, 1);
 4633              		.loc 1 1125 0
 4634 008e 0123     		movs	r3, #1
 4635 0090 0093     		str	r3, [sp]
 4636 0092 8023     		movs	r3, #128
 4637 0094 2822     		movs	r2, #40
 4638 0096 0021     		movs	r1, #0
 4639 0098 1E48     		ldr	r0, .L237+12
 4640 009a FFF7FEFF 		bl	GFXwriteFastHLine
1126:ui.c          ****         OLEDwriteInt(currentCopedent , 1, 0,FourthLine);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 105


 4641              		.loc 1 1126 0
 4642 009e 1E4B     		ldr	r3, .L237+16
 4643 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4644 00a2 1846     		mov	r0, r3
 4645 00a4 0323     		movs	r3, #3
 4646 00a6 0022     		movs	r2, #0
 4647 00a8 0121     		movs	r1, #1
 4648 00aa FFF7FEFF 		bl	OLEDwriteInt
1127:ui.c          ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 4649              		.loc 1 1127 0
 4650 00ae FFF7FEFF 		bl	OLEDgetCursor
 4651 00b2 0246     		mov	r2, r0
 4652 00b4 0323     		movs	r3, #3
 4653 00b6 0121     		movs	r1, #1
 4654 00b8 1848     		ldr	r0, .L237+20
 4655 00ba FFF7FEFF 		bl	OLEDwriteString
1128:ui.c          ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 4656              		.loc 1 1128 0
 4657 00be 164B     		ldr	r3, .L237+16
 4658 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4659 00c2 1A46     		mov	r2, r3
 4660 00c4 1346     		mov	r3, r2
 4661 00c6 DB00     		lsls	r3, r3, #3
 4662 00c8 9B1A     		subs	r3, r3, r2
 4663 00ca 5B00     		lsls	r3, r3, #1
 4664 00cc 144A     		ldr	r2, .L237+24
 4665 00ce 9C18     		adds	r4, r3, r2
 4666 00d0 FFF7FEFF 		bl	OLEDgetCursor
 4667 00d4 0246     		mov	r2, r0
 4668 00d6 0323     		movs	r3, #3
 4669 00d8 0A21     		movs	r1, #10
 4670 00da 2046     		mov	r0, r4
 4671 00dc FFF7FEFF 		bl	OLEDwriteString
1129:ui.c          ****         mainOLEDWaitingToSend = 1;
 4672              		.loc 1 1129 0
 4673 00e0 104B     		ldr	r3, .L237+28
 4674 00e2 0122     		movs	r2, #1
 4675 00e4 1A70     		strb	r2, [r3]
1130:ui.c          ****         presetAlreadyDisplayed[patchNum] = 1;
 4676              		.loc 1 1130 0
 4677 00e6 084B     		ldr	r3, .L237
 4678 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4679 00ea 1A46     		mov	r2, r3
 4680 00ec 0E4B     		ldr	r3, .L237+32
 4681 00ee 0121     		movs	r1, #1
 4682 00f0 9954     		strb	r1, [r3, r2]
1131:ui.c          ****         //and update the macro OLED screens
1132:ui.c          ****         whichMacro = 0;
 4683              		.loc 1 1132 0
 4684 00f2 0E4B     		ldr	r3, .L237+36
 4685 00f4 0022     		movs	r2, #0
 4686 00f6 1A70     		strb	r2, [r3]
1133:ui.c          ****         macroOLEDWaitingToSend = 1;
 4687              		.loc 1 1133 0
 4688 00f8 0D4B     		ldr	r3, .L237+40
 4689 00fa 0122     		movs	r2, #1
 4690 00fc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 106


 4691              	.L236:
1134:ui.c          ****     }
1135:ui.c          **** }
 4692              		.loc 1 1135 0
 4693 00fe 00BF     		nop
 4694 0100 0C37     		adds	r7, r7, #12
 4695              		.cfi_def_cfa_offset 12
 4696 0102 BD46     		mov	sp, r7
 4697              		.cfi_def_cfa_register 13
 4698              		@ sp needed
 4699 0104 90BD     		pop	{r4, r7, pc}
 4700              	.L238:
 4701 0106 00BF     		.align	2
 4702              	.L237:
 4703 0108 00000000 		.word	patchNum
 4704 010c 00000000 		.word	macroNamesArray
 4705 0110 00000000 		.word	presetNamesArray
 4706 0114 00000000 		.word	theGFX
 4707 0118 00000000 		.word	currentCopedent
 4708 011c 48020000 		.word	.LC35
 4709 0120 00000000 		.word	copedentNamesArray
 4710 0124 00000000 		.word	mainOLEDWaitingToSend
 4711 0128 00000000 		.word	presetAlreadyDisplayed
 4712 012c 00000000 		.word	whichMacro
 4713 0130 00000000 		.word	macroOLEDWaitingToSend
 4714              		.cfi_endproc
 4715              	.LFE77:
 4716              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 4717              		.text
 4718              	.Letext0:
 4719              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4720              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4721              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4722              		.file 5 "gfx_font.h"
 4723              		.file 6 "gfx.h"
 4724              		.file 7 "main.h"
 4725              		.file 8 "oled.h"
 4726              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 4727              		.file 10 "Generated_Source\\PSoC5/Decoder_1.h"
 4728              		.section	.debug_info,"",%progbits
 4729              	.Ldebug_info0:
 4730 0000 DD0A0000 		.4byte	0xadd
 4731 0004 0400     		.2byte	0x4
 4732 0006 00000000 		.4byte	.Ldebug_abbrev0
 4733 000a 04       		.byte	0x4
 4734 000b 01       		.uleb128 0x1
 4735 000c E2000000 		.4byte	.LASF162
 4736 0010 0C       		.byte	0xc
 4737 0011 A1060000 		.4byte	.LASF163
 4738 0015 5D040000 		.4byte	.LASF164
 4739 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4740 001d 00000000 		.4byte	0
 4741 0021 00000000 		.4byte	.Ldebug_line0
 4742 0025 02       		.uleb128 0x2
 4743 0026 98050000 		.4byte	.LASF0
 4744 002a 02       		.byte	0x2
 4745 002b 1B       		.byte	0x1b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 107


 4746 002c 30000000 		.4byte	0x30
 4747 0030 03       		.uleb128 0x3
 4748 0031 01       		.byte	0x1
 4749 0032 06       		.byte	0x6
 4750 0033 5F080000 		.4byte	.LASF2
 4751 0037 02       		.uleb128 0x2
 4752 0038 C3060000 		.4byte	.LASF1
 4753 003c 02       		.byte	0x2
 4754 003d 1D       		.byte	0x1d
 4755 003e 42000000 		.4byte	0x42
 4756 0042 03       		.uleb128 0x3
 4757 0043 01       		.byte	0x1
 4758 0044 08       		.byte	0x8
 4759 0045 7E070000 		.4byte	.LASF3
 4760 0049 02       		.uleb128 0x2
 4761 004a DB040000 		.4byte	.LASF4
 4762 004e 02       		.byte	0x2
 4763 004f 29       		.byte	0x29
 4764 0050 54000000 		.4byte	0x54
 4765 0054 03       		.uleb128 0x3
 4766 0055 02       		.byte	0x2
 4767 0056 05       		.byte	0x5
 4768 0057 24060000 		.4byte	.LASF5
 4769 005b 02       		.uleb128 0x2
 4770 005c 88020000 		.4byte	.LASF6
 4771 0060 02       		.byte	0x2
 4772 0061 2B       		.byte	0x2b
 4773 0062 66000000 		.4byte	0x66
 4774 0066 03       		.uleb128 0x3
 4775 0067 02       		.byte	0x2
 4776 0068 07       		.byte	0x7
 4777 0069 6B080000 		.4byte	.LASF7
 4778 006d 02       		.uleb128 0x2
 4779 006e C5000000 		.4byte	.LASF8
 4780 0072 02       		.byte	0x2
 4781 0073 3F       		.byte	0x3f
 4782 0074 78000000 		.4byte	0x78
 4783 0078 03       		.uleb128 0x3
 4784 0079 04       		.byte	0x4
 4785 007a 05       		.byte	0x5
 4786 007b 51060000 		.4byte	.LASF9
 4787 007f 03       		.uleb128 0x3
 4788 0080 04       		.byte	0x4
 4789 0081 07       		.byte	0x7
 4790 0082 F8060000 		.4byte	.LASF10
 4791 0086 03       		.uleb128 0x3
 4792 0087 08       		.byte	0x8
 4793 0088 05       		.byte	0x5
 4794 0089 10040000 		.4byte	.LASF11
 4795 008d 03       		.uleb128 0x3
 4796 008e 08       		.byte	0x8
 4797 008f 07       		.byte	0x7
 4798 0090 4E020000 		.4byte	.LASF12
 4799 0094 04       		.uleb128 0x4
 4800 0095 04       		.byte	0x4
 4801 0096 05       		.byte	0x5
 4802 0097 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 108


 4803 009b 03       		.uleb128 0x3
 4804 009c 04       		.byte	0x4
 4805 009d 07       		.byte	0x7
 4806 009e 9E000000 		.4byte	.LASF13
 4807 00a2 02       		.uleb128 0x2
 4808 00a3 0C020000 		.4byte	.LASF14
 4809 00a7 03       		.byte	0x3
 4810 00a8 14       		.byte	0x14
 4811 00a9 25000000 		.4byte	0x25
 4812 00ad 02       		.uleb128 0x2
 4813 00ae DD030000 		.4byte	.LASF15
 4814 00b2 03       		.byte	0x3
 4815 00b3 18       		.byte	0x18
 4816 00b4 37000000 		.4byte	0x37
 4817 00b8 02       		.uleb128 0x2
 4818 00b9 46020000 		.4byte	.LASF16
 4819 00bd 03       		.byte	0x3
 4820 00be 20       		.byte	0x20
 4821 00bf 49000000 		.4byte	0x49
 4822 00c3 02       		.uleb128 0x2
 4823 00c4 DF050000 		.4byte	.LASF17
 4824 00c8 03       		.byte	0x3
 4825 00c9 24       		.byte	0x24
 4826 00ca 5B000000 		.4byte	0x5b
 4827 00ce 02       		.uleb128 0x2
 4828 00cf 41070000 		.4byte	.LASF18
 4829 00d3 03       		.byte	0x3
 4830 00d4 2C       		.byte	0x2c
 4831 00d5 6D000000 		.4byte	0x6d
 4832 00d9 05       		.uleb128 0x5
 4833 00da 8C080000 		.4byte	.LASF19
 4834 00de 04       		.byte	0x4
 4835 00df E901     		.2byte	0x1e9
 4836 00e1 42000000 		.4byte	0x42
 4837 00e5 03       		.uleb128 0x3
 4838 00e6 04       		.byte	0x4
 4839 00e7 04       		.byte	0x4
 4840 00e8 18020000 		.4byte	.LASF20
 4841 00ec 03       		.uleb128 0x3
 4842 00ed 08       		.byte	0x8
 4843 00ee 04       		.byte	0x4
 4844 00ef 92080000 		.4byte	.LASF21
 4845 00f3 03       		.uleb128 0x3
 4846 00f4 01       		.byte	0x1
 4847 00f5 08       		.byte	0x8
 4848 00f6 8C030000 		.4byte	.LASF22
 4849 00fa 03       		.uleb128 0x3
 4850 00fb 08       		.byte	0x8
 4851 00fc 04       		.byte	0x4
 4852 00fd BA050000 		.4byte	.LASF23
 4853 0101 03       		.uleb128 0x3
 4854 0102 04       		.byte	0x4
 4855 0103 07       		.byte	0x7
 4856 0104 D5060000 		.4byte	.LASF24
 4857 0108 06       		.uleb128 0x6
 4858 0109 04       		.byte	0x4
 4859 010a 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 109


 4860 010e 07       		.uleb128 0x7
 4861 010f F3000000 		.4byte	0xf3
 4862 0113 08       		.uleb128 0x8
 4863 0114 C3000000 		.4byte	0xc3
 4864 0118 09       		.uleb128 0x9
 4865 0119 E3020000 		.4byte	.LASF65
 4866 011d 01       		.byte	0x1
 4867 011e 42000000 		.4byte	0x42
 4868 0122 07       		.byte	0x7
 4869 0123 77       		.byte	0x77
 4870 0124 6B010000 		.4byte	0x16b
 4871 0128 0A       		.uleb128 0xa
 4872 0129 E5040000 		.4byte	.LASF25
 4873 012d 00       		.byte	0
 4874 012e 0A       		.uleb128 0xa
 4875 012f FC050000 		.4byte	.LASF26
 4876 0133 01       		.byte	0x1
 4877 0134 0A       		.uleb128 0xa
 4878 0135 F8010000 		.4byte	.LASF27
 4879 0139 02       		.byte	0x2
 4880 013a 0A       		.uleb128 0xa
 4881 013b 49070000 		.4byte	.LASF28
 4882 013f 03       		.byte	0x3
 4883 0140 0A       		.uleb128 0xa
 4884 0141 0A070000 		.4byte	.LASF29
 4885 0145 04       		.byte	0x4
 4886 0146 0A       		.uleb128 0xa
 4887 0147 7E080000 		.4byte	.LASF30
 4888 014b 05       		.byte	0x5
 4889 014c 0A       		.uleb128 0xa
 4890 014d C6070000 		.4byte	.LASF31
 4891 0151 06       		.byte	0x6
 4892 0152 0A       		.uleb128 0xa
 4893 0153 11080000 		.4byte	.LASF32
 4894 0157 07       		.byte	0x7
 4895 0158 0A       		.uleb128 0xa
 4896 0159 B8070000 		.4byte	.LASF33
 4897 015d 08       		.byte	0x8
 4898 015e 0A       		.uleb128 0xa
 4899 015f 36080000 		.4byte	.LASF34
 4900 0163 09       		.byte	0x9
 4901 0164 0A       		.uleb128 0xa
 4902 0165 78060000 		.4byte	.LASF35
 4903 0169 0A       		.byte	0xa
 4904 016a 00       		.byte	0
 4905 016b 0B       		.uleb128 0xb
 4906 016c 08       		.byte	0x8
 4907 016d 05       		.byte	0x5
 4908 016e 0C       		.byte	0xc
 4909 016f BC010000 		.4byte	0x1bc
 4910 0173 0C       		.uleb128 0xc
 4911 0174 34030000 		.4byte	.LASF36
 4912 0178 05       		.byte	0x5
 4913 0179 0D       		.byte	0xd
 4914 017a C3000000 		.4byte	0xc3
 4915 017e 00       		.byte	0
 4916 017f 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 110


 4917 0180 41030000 		.4byte	.LASF37
 4918 0184 05       		.byte	0x5
 4919 0185 0E       		.byte	0xe
 4920 0186 AD000000 		.4byte	0xad
 4921 018a 02       		.byte	0x2
 4922 018b 0C       		.uleb128 0xc
 4923 018c 4A050000 		.4byte	.LASF38
 4924 0190 05       		.byte	0x5
 4925 0191 0E       		.byte	0xe
 4926 0192 AD000000 		.4byte	0xad
 4927 0196 03       		.byte	0x3
 4928 0197 0C       		.uleb128 0xc
 4929 0198 F9070000 		.4byte	.LASF39
 4930 019c 05       		.byte	0x5
 4931 019d 0F       		.byte	0xf
 4932 019e AD000000 		.4byte	0xad
 4933 01a2 04       		.byte	0x4
 4934 01a3 0C       		.uleb128 0xc
 4935 01a4 1F080000 		.4byte	.LASF40
 4936 01a8 05       		.byte	0x5
 4937 01a9 10       		.byte	0x10
 4938 01aa A2000000 		.4byte	0xa2
 4939 01ae 05       		.byte	0x5
 4940 01af 0C       		.uleb128 0xc
 4941 01b0 E5030000 		.4byte	.LASF41
 4942 01b4 05       		.byte	0x5
 4943 01b5 10       		.byte	0x10
 4944 01b6 A2000000 		.4byte	0xa2
 4945 01ba 06       		.byte	0x6
 4946 01bb 00       		.byte	0
 4947 01bc 02       		.uleb128 0x2
 4948 01bd A4030000 		.4byte	.LASF42
 4949 01c1 05       		.byte	0x5
 4950 01c2 11       		.byte	0x11
 4951 01c3 6B010000 		.4byte	0x16b
 4952 01c7 0B       		.uleb128 0xb
 4953 01c8 0C       		.byte	0xc
 4954 01c9 05       		.byte	0x5
 4955 01ca 13       		.byte	0x13
 4956 01cb 0C020000 		.4byte	0x20c
 4957 01cf 0C       		.uleb128 0xc
 4958 01d0 8C070000 		.4byte	.LASF43
 4959 01d4 05       		.byte	0x5
 4960 01d5 14       		.byte	0x14
 4961 01d6 0C020000 		.4byte	0x20c
 4962 01da 00       		.byte	0
 4963 01db 0C       		.uleb128 0xc
 4964 01dc 5D070000 		.4byte	.LASF44
 4965 01e0 05       		.byte	0x5
 4966 01e1 15       		.byte	0x15
 4967 01e2 12020000 		.4byte	0x212
 4968 01e6 04       		.byte	0x4
 4969 01e7 0C       		.uleb128 0xc
 4970 01e8 D7070000 		.4byte	.LASF45
 4971 01ec 05       		.byte	0x5
 4972 01ed 16       		.byte	0x16
 4973 01ee AD000000 		.4byte	0xad
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 111


 4974 01f2 08       		.byte	0x8
 4975 01f3 0C       		.uleb128 0xc
 4976 01f4 0A000000 		.4byte	.LASF46
 4977 01f8 05       		.byte	0x5
 4978 01f9 16       		.byte	0x16
 4979 01fa AD000000 		.4byte	0xad
 4980 01fe 09       		.byte	0x9
 4981 01ff 0C       		.uleb128 0xc
 4982 0200 7F020000 		.4byte	.LASF47
 4983 0204 05       		.byte	0x5
 4984 0205 17       		.byte	0x17
 4985 0206 AD000000 		.4byte	0xad
 4986 020a 0A       		.byte	0xa
 4987 020b 00       		.byte	0
 4988 020c 06       		.uleb128 0x6
 4989 020d 04       		.byte	0x4
 4990 020e AD000000 		.4byte	0xad
 4991 0212 06       		.uleb128 0x6
 4992 0213 04       		.byte	0x4
 4993 0214 BC010000 		.4byte	0x1bc
 4994 0218 02       		.uleb128 0x2
 4995 0219 39000000 		.4byte	.LASF48
 4996 021d 05       		.byte	0x5
 4997 021e 18       		.byte	0x18
 4998 021f C7010000 		.4byte	0x1c7
 4999 0223 0D       		.uleb128 0xd
 5000 0224 13020000 		.4byte	.LASF165
 5001 0228 24       		.byte	0x24
 5002 0229 06       		.byte	0x6
 5003 022a 1C       		.byte	0x1c
 5004 022b F0020000 		.4byte	0x2f0
 5005 022f 0C       		.uleb128 0xc
 5006 0230 F8020000 		.4byte	.LASF49
 5007 0234 06       		.byte	0x6
 5008 0235 1E       		.byte	0x1e
 5009 0236 B8000000 		.4byte	0xb8
 5010 023a 00       		.byte	0
 5011 023b 0C       		.uleb128 0xc
 5012 023c 05020000 		.4byte	.LASF50
 5013 0240 06       		.byte	0x6
 5014 0241 1F       		.byte	0x1f
 5015 0242 B8000000 		.4byte	0xb8
 5016 0246 02       		.byte	0x2
 5017 0247 0C       		.uleb128 0xc
 5018 0248 ED030000 		.4byte	.LASF51
 5019 024c 06       		.byte	0x6
 5020 024d 20       		.byte	0x20
 5021 024e C3000000 		.4byte	0xc3
 5022 0252 04       		.byte	0x4
 5023 0253 0C       		.uleb128 0xc
 5024 0254 EE040000 		.4byte	.LASF52
 5025 0258 06       		.byte	0x6
 5026 0259 21       		.byte	0x21
 5027 025a C3000000 		.4byte	0xc3
 5028 025e 06       		.byte	0x6
 5029 025f 0C       		.uleb128 0xc
 5030 0260 EF010000 		.4byte	.LASF53
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 112


 5031 0264 06       		.byte	0x6
 5032 0265 22       		.byte	0x22
 5033 0266 C3000000 		.4byte	0xc3
 5034 026a 08       		.byte	0x8
 5035 026b 0C       		.uleb128 0xc
 5036 026c 27020000 		.4byte	.LASF54
 5037 0270 06       		.byte	0x6
 5038 0271 23       		.byte	0x23
 5039 0272 C3000000 		.4byte	0xc3
 5040 0276 0A       		.byte	0xa
 5041 0277 0C       		.uleb128 0xc
 5042 0278 1E020000 		.4byte	.LASF55
 5043 027c 06       		.byte	0x6
 5044 027d 24       		.byte	0x24
 5045 027e C3000000 		.4byte	0xc3
 5046 0282 0C       		.byte	0xc
 5047 0283 0C       		.uleb128 0xc
 5048 0284 3D020000 		.4byte	.LASF56
 5049 0288 06       		.byte	0x6
 5050 0289 25       		.byte	0x25
 5051 028a C3000000 		.4byte	0xc3
 5052 028e 0E       		.byte	0xe
 5053 028f 0C       		.uleb128 0xc
 5054 0290 99080000 		.4byte	.LASF57
 5055 0294 06       		.byte	0x6
 5056 0295 26       		.byte	0x26
 5057 0296 C3000000 		.4byte	0xc3
 5058 029a 10       		.byte	0x10
 5059 029b 0C       		.uleb128 0xc
 5060 029c BE080000 		.4byte	.LASF58
 5061 02a0 06       		.byte	0x6
 5062 02a1 27       		.byte	0x27
 5063 02a2 C3000000 		.4byte	0xc3
 5064 02a6 12       		.byte	0x12
 5065 02a7 0C       		.uleb128 0xc
 5066 02a8 C0000000 		.4byte	.LASF59
 5067 02ac 06       		.byte	0x6
 5068 02ad 28       		.byte	0x28
 5069 02ae C3000000 		.4byte	0xc3
 5070 02b2 14       		.byte	0x14
 5071 02b3 0C       		.uleb128 0xc
 5072 02b4 AF010000 		.4byte	.LASF60
 5073 02b8 06       		.byte	0x6
 5074 02b9 29       		.byte	0x29
 5075 02ba C3000000 		.4byte	0xc3
 5076 02be 16       		.byte	0x16
 5077 02bf 0C       		.uleb128 0xc
 5078 02c0 CD060000 		.4byte	.LASF61
 5079 02c4 06       		.byte	0x6
 5080 02c5 2A       		.byte	0x2a
 5081 02c6 F0020000 		.4byte	0x2f0
 5082 02ca 18       		.byte	0x18
 5083 02cb 0C       		.uleb128 0xc
 5084 02cc 80060000 		.4byte	.LASF62
 5085 02d0 06       		.byte	0x6
 5086 02d1 2B       		.byte	0x2b
 5087 02d2 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 113


 5088 02d6 1C       		.byte	0x1c
 5089 02d7 0C       		.uleb128 0xc
 5090 02d8 1E040000 		.4byte	.LASF63
 5091 02dc 06       		.byte	0x6
 5092 02dd 2C       		.byte	0x2c
 5093 02de C3000000 		.4byte	0xc3
 5094 02e2 1E       		.byte	0x1e
 5095 02e3 0C       		.uleb128 0xc
 5096 02e4 43080000 		.4byte	.LASF64
 5097 02e8 06       		.byte	0x6
 5098 02e9 2D       		.byte	0x2d
 5099 02ea C3000000 		.4byte	0xc3
 5100 02ee 20       		.byte	0x20
 5101 02ef 00       		.byte	0
 5102 02f0 06       		.uleb128 0x6
 5103 02f1 04       		.byte	0x4
 5104 02f2 18020000 		.4byte	0x218
 5105 02f6 0E       		.uleb128 0xe
 5106 02f7 47465800 		.ascii	"GFX\000"
 5107 02fb 06       		.byte	0x6
 5108 02fc 2E       		.byte	0x2e
 5109 02fd 23020000 		.4byte	0x223
 5110 0301 09       		.uleb128 0x9
 5111 0302 EE020000 		.4byte	.LASF66
 5112 0306 01       		.byte	0x1
 5113 0307 42000000 		.4byte	0x42
 5114 030b 08       		.byte	0x8
 5115 030c 1D       		.byte	0x1d
 5116 030d 30030000 		.4byte	0x330
 5117 0311 0A       		.uleb128 0xa
 5118 0312 93070000 		.4byte	.LASF67
 5119 0316 00       		.byte	0
 5120 0317 0A       		.uleb128 0xa
 5121 0318 51030000 		.4byte	.LASF68
 5122 031c 01       		.byte	0x1
 5123 031d 0A       		.uleb128 0xa
 5124 031e D3030000 		.4byte	.LASF69
 5125 0322 02       		.byte	0x2
 5126 0323 0A       		.uleb128 0xa
 5127 0324 52040000 		.4byte	.LASF70
 5128 0328 03       		.byte	0x3
 5129 0329 0A       		.uleb128 0xa
 5130 032a 70060000 		.4byte	.LASF71
 5131 032e 04       		.byte	0x4
 5132 032f 00       		.byte	0
 5133 0330 09       		.uleb128 0x9
 5134 0331 00000000 		.4byte	.LASF72
 5135 0335 01       		.byte	0x1
 5136 0336 42000000 		.4byte	0x42
 5137 033a 01       		.byte	0x1
 5138 033b 14       		.byte	0x14
 5139 033c 5E030000 		.4byte	0x35e
 5140 0340 0A       		.uleb128 0xa
 5141 0341 C8020000 		.4byte	.LASF73
 5142 0345 00       		.byte	0
 5143 0346 0A       		.uleb128 0xa
 5144 0347 BD060000 		.4byte	.LASF74
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 114


 5145 034b 01       		.byte	0x1
 5146 034c 0A       		.uleb128 0xa
 5147 034d B8060000 		.4byte	.LASF75
 5148 0351 02       		.byte	0x2
 5149 0352 0F       		.uleb128 0xf
 5150 0353 557000   		.ascii	"Up\000"
 5151 0356 03       		.byte	0x3
 5152 0357 0A       		.uleb128 0xa
 5153 0358 A9010000 		.4byte	.LASF76
 5154 035c 04       		.byte	0x4
 5155 035d 00       		.byte	0
 5156 035e 10       		.uleb128 0x10
 5157 035f DD070000 		.4byte	.LASF86
 5158 0363 01       		.byte	0x1
 5159 0364 22       		.byte	0x22
 5160 0365 00000000 		.4byte	.LFB64
 5161 0369 D8090000 		.4byte	.LFE64-.LFB64
 5162 036d 01       		.uleb128 0x1
 5163 036e 9C       		.byte	0x9c
 5164 036f 45040000 		.4byte	0x445
 5165 0373 11       		.uleb128 0x11
 5166 0374 71000000 		.4byte	.LASF77
 5167 0378 01       		.byte	0x1
 5168 0379 24       		.byte	0x24
 5169 037a AD000000 		.4byte	0xad
 5170 037e 02       		.uleb128 0x2
 5171 037f 91       		.byte	0x91
 5172 0380 67       		.sleb128 -25
 5173 0381 12       		.uleb128 0x12
 5174 0382 C8030000 		.4byte	.LBB2
 5175 0386 D2050000 		.4byte	.LBE2-.LBB2
 5176 038a 11       		.uleb128 0x11
 5177 038b 0C060000 		.4byte	.LASF78
 5178 038f 01       		.byte	0x1
 5179 0390 DA       		.byte	0xda
 5180 0391 A2000000 		.4byte	0xa2
 5181 0395 02       		.uleb128 0x2
 5182 0396 91       		.byte	0x91
 5183 0397 66       		.sleb128 -26
 5184 0398 13       		.uleb128 0x13
 5185 0399 EC030000 		.4byte	.LBB3
 5186 039d 4E020000 		.4byte	.LBE3-.LBB3
 5187 03a1 D1030000 		.4byte	0x3d1
 5188 03a5 11       		.uleb128 0x11
 5189 03a6 8A050000 		.4byte	.LASF79
 5190 03aa 01       		.byte	0x1
 5191 03ab E2       		.byte	0xe2
 5192 03ac E5000000 		.4byte	0xe5
 5193 03b0 02       		.uleb128 0x2
 5194 03b1 91       		.byte	0x91
 5195 03b2 6C       		.sleb128 -20
 5196 03b3 11       		.uleb128 0x11
 5197 03b4 A6060000 		.4byte	.LASF80
 5198 03b8 01       		.byte	0x1
 5199 03b9 F2       		.byte	0xf2
 5200 03ba E5000000 		.4byte	0xe5
 5201 03be 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 115


 5202 03bf 91       		.byte	0x91
 5203 03c0 68       		.sleb128 -24
 5204 03c1 14       		.uleb128 0x14
 5205 03c2 63030000 		.4byte	.LASF81
 5206 03c6 01       		.byte	0x1
 5207 03c7 0301     		.2byte	0x103
 5208 03c9 AD000000 		.4byte	0xad
 5209 03cd 02       		.uleb128 0x2
 5210 03ce 91       		.byte	0x91
 5211 03cf 65       		.sleb128 -27
 5212 03d0 00       		.byte	0
 5213 03d1 13       		.uleb128 0x13
 5214 03d2 56060000 		.4byte	.LBB4
 5215 03d6 9A010000 		.4byte	.LBE4-.LBB4
 5216 03da 0C040000 		.4byte	0x40c
 5217 03de 14       		.uleb128 0x14
 5218 03df 30020000 		.4byte	.LASF82
 5219 03e3 01       		.byte	0x1
 5220 03e4 2401     		.2byte	0x124
 5221 03e6 B8000000 		.4byte	0xb8
 5222 03ea 02       		.uleb128 0x2
 5223 03eb 91       		.byte	0x91
 5224 03ec 62       		.sleb128 -30
 5225 03ed 14       		.uleb128 0x14
 5226 03ee 51050000 		.4byte	.LASF83
 5227 03f2 01       		.byte	0x1
 5228 03f3 3701     		.2byte	0x137
 5229 03f5 E5000000 		.4byte	0xe5
 5230 03f9 02       		.uleb128 0x2
 5231 03fa 91       		.byte	0x91
 5232 03fb 5C       		.sleb128 -36
 5233 03fc 14       		.uleb128 0x14
 5234 03fd 63030000 		.4byte	.LASF81
 5235 0401 01       		.byte	0x1
 5236 0402 3901     		.2byte	0x139
 5237 0404 AD000000 		.4byte	0xad
 5238 0408 02       		.uleb128 0x2
 5239 0409 91       		.byte	0x91
 5240 040a 5B       		.sleb128 -37
 5241 040b 00       		.byte	0
 5242 040c 12       		.uleb128 0x12
 5243 040d 0C080000 		.4byte	.LBB5
 5244 0411 88010000 		.4byte	.LBE5-.LBB5
 5245 0415 14       		.uleb128 0x14
 5246 0416 14050000 		.4byte	.LASF84
 5247 041a 01       		.byte	0x1
 5248 041b 5501     		.2byte	0x155
 5249 041d B8000000 		.4byte	0xb8
 5250 0421 02       		.uleb128 0x2
 5251 0422 91       		.byte	0x91
 5252 0423 58       		.sleb128 -40
 5253 0424 14       		.uleb128 0x14
 5254 0425 9D070000 		.4byte	.LASF85
 5255 0429 01       		.byte	0x1
 5256 042a 6501     		.2byte	0x165
 5257 042c 45040000 		.4byte	0x445
 5258 0430 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 116


 5259 0431 91       		.byte	0x91
 5260 0432 54       		.sleb128 -44
 5261 0433 14       		.uleb128 0x14
 5262 0434 63030000 		.4byte	.LASF81
 5263 0438 01       		.byte	0x1
 5264 0439 6F01     		.2byte	0x16f
 5265 043b AD000000 		.4byte	0xad
 5266 043f 02       		.uleb128 0x2
 5267 0440 91       		.byte	0x91
 5268 0441 57       		.sleb128 -41
 5269 0442 00       		.byte	0
 5270 0443 00       		.byte	0
 5271 0444 00       		.byte	0
 5272 0445 15       		.uleb128 0x15
 5273 0446 AD000000 		.4byte	0xad
 5274 044a 55040000 		.4byte	0x455
 5275 044e 16       		.uleb128 0x16
 5276 044f 01010000 		.4byte	0x101
 5277 0453 01       		.byte	0x1
 5278 0454 00       		.byte	0
 5279 0455 17       		.uleb128 0x17
 5280 0456 48000000 		.4byte	.LASF100
 5281 045a 01       		.byte	0x1
 5282 045b 9701     		.2byte	0x197
 5283 045d 00000000 		.4byte	.LFB65
 5284 0461 9C000000 		.4byte	.LFE65-.LFB65
 5285 0465 01       		.uleb128 0x1
 5286 0466 9C       		.byte	0x9c
 5287 0467 18       		.uleb128 0x18
 5288 0468 03050000 		.4byte	.LASF87
 5289 046c 01       		.byte	0x1
 5290 046d AE01     		.2byte	0x1ae
 5291 046f 00000000 		.4byte	.LFB66
 5292 0473 68010000 		.4byte	.LFE66-.LFB66
 5293 0477 01       		.uleb128 0x1
 5294 0478 9C       		.byte	0x9c
 5295 0479 B4040000 		.4byte	0x4b4
 5296 047d 13       		.uleb128 0x13
 5297 047e B4000000 		.4byte	.LBB6
 5298 0482 26000000 		.4byte	.LBE6-.LBB6
 5299 0486 9A040000 		.4byte	0x49a
 5300 048a 14       		.uleb128 0x14
 5301 048b 30000000 		.4byte	.LASF88
 5302 048f 01       		.byte	0x1
 5303 0490 C601     		.2byte	0x1c6
 5304 0492 AD000000 		.4byte	0xad
 5305 0496 02       		.uleb128 0x2
 5306 0497 91       		.byte	0x91
 5307 0498 6F       		.sleb128 -17
 5308 0499 00       		.byte	0
 5309 049a 12       		.uleb128 0x12
 5310 049b E4000000 		.4byte	.LBB7
 5311 049f 28000000 		.4byte	.LBE7-.LBB7
 5312 04a3 14       		.uleb128 0x14
 5313 04a4 30000000 		.4byte	.LASF88
 5314 04a8 01       		.byte	0x1
 5315 04a9 CC01     		.2byte	0x1cc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 117


 5316 04ab AD000000 		.4byte	0xad
 5317 04af 02       		.uleb128 0x2
 5318 04b0 91       		.byte	0x91
 5319 04b1 6E       		.sleb128 -18
 5320 04b2 00       		.byte	0
 5321 04b3 00       		.byte	0
 5322 04b4 18       		.uleb128 0x18
 5323 04b5 1A000000 		.4byte	.LASF89
 5324 04b9 01       		.byte	0x1
 5325 04ba D901     		.2byte	0x1d9
 5326 04bc 00000000 		.4byte	.LFB67
 5327 04c0 1C0C0000 		.4byte	.LFE67-.LFB67
 5328 04c4 01       		.uleb128 0x1
 5329 04c5 9C       		.byte	0x9c
 5330 04c6 4F050000 		.4byte	0x54f
 5331 04ca 19       		.uleb128 0x19
 5332 04cb 9A060000 		.4byte	.LASF166
 5333 04cf 01       		.byte	0x1
 5334 04d0 D901     		.2byte	0x1d9
 5335 04d2 30030000 		.4byte	0x330
 5336 04d6 02       		.uleb128 0x2
 5337 04d7 91       		.byte	0x91
 5338 04d8 5F       		.sleb128 -33
 5339 04d9 14       		.uleb128 0x14
 5340 04da FE020000 		.4byte	.LASF90
 5341 04de 01       		.byte	0x1
 5342 04df DB01     		.2byte	0x1db
 5343 04e1 AD000000 		.4byte	0xad
 5344 04e5 02       		.uleb128 0x2
 5345 04e6 91       		.byte	0x91
 5346 04e7 77       		.sleb128 -9
 5347 04e8 13       		.uleb128 0x13
 5348 04e9 EE090000 		.4byte	.LBB8
 5349 04ed 6C000000 		.4byte	.LBE8-.LBB8
 5350 04f1 03050000 		.4byte	0x503
 5351 04f5 1A       		.uleb128 0x1a
 5352 04f6 6900     		.ascii	"i\000"
 5353 04f8 01       		.byte	0x1
 5354 04f9 5603     		.2byte	0x356
 5355 04fb 94000000 		.4byte	0x94
 5356 04ff 02       		.uleb128 0x2
 5357 0500 91       		.byte	0x91
 5358 0501 70       		.sleb128 -16
 5359 0502 00       		.byte	0
 5360 0503 13       		.uleb128 0x13
 5361 0504 7E0A0000 		.4byte	.LBB9
 5362 0508 6C000000 		.4byte	.LBE9-.LBB9
 5363 050c 1E050000 		.4byte	0x51e
 5364 0510 1A       		.uleb128 0x1a
 5365 0511 6900     		.ascii	"i\000"
 5366 0513 01       		.byte	0x1
 5367 0514 6E03     		.2byte	0x36e
 5368 0516 94000000 		.4byte	0x94
 5369 051a 02       		.uleb128 0x2
 5370 051b 91       		.byte	0x91
 5371 051c 6C       		.sleb128 -20
 5372 051d 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 118


 5373 051e 12       		.uleb128 0x12
 5374 051f 000B0000 		.4byte	.LBB10
 5375 0523 FE000000 		.4byte	.LBE10-.LBB10
 5376 0527 14       		.uleb128 0x14
 5377 0528 69000000 		.4byte	.LASF91
 5378 052c 01       		.byte	0x1
 5379 052d 8503     		.2byte	0x385
 5380 052f AD000000 		.4byte	0xad
 5381 0533 02       		.uleb128 0x2
 5382 0534 91       		.byte	0x91
 5383 0535 6B       		.sleb128 -21
 5384 0536 12       		.uleb128 0x12
 5385 0537 120B0000 		.4byte	.LBB11
 5386 053b BE000000 		.4byte	.LBE11-.LBB11
 5387 053f 1A       		.uleb128 0x1a
 5388 0540 6900     		.ascii	"i\000"
 5389 0542 01       		.byte	0x1
 5390 0543 8603     		.2byte	0x386
 5391 0545 94000000 		.4byte	0x94
 5392 0549 02       		.uleb128 0x2
 5393 054a 91       		.byte	0x91
 5394 054b 64       		.sleb128 -28
 5395 054c 00       		.byte	0
 5396 054d 00       		.byte	0
 5397 054e 00       		.byte	0
 5398 054f 1B       		.uleb128 0x1b
 5399 0550 46040000 		.4byte	.LASF92
 5400 0554 01       		.byte	0x1
 5401 0555 A503     		.2byte	0x3a5
 5402 0557 00000000 		.4byte	.LFB68
 5403 055b 9C000000 		.4byte	.LFE68-.LFB68
 5404 055f 01       		.uleb128 0x1
 5405 0560 9C       		.byte	0x9c
 5406 0561 1B       		.uleb128 0x1b
 5407 0562 39040000 		.4byte	.LASF93
 5408 0566 01       		.byte	0x1
 5409 0567 BD03     		.2byte	0x3bd
 5410 0569 00000000 		.4byte	.LFB69
 5411 056d 9C000000 		.4byte	.LFE69-.LFB69
 5412 0571 01       		.uleb128 0x1
 5413 0572 9C       		.byte	0x9c
 5414 0573 1B       		.uleb128 0x1b
 5415 0574 7D000000 		.4byte	.LASF94
 5416 0578 01       		.byte	0x1
 5417 0579 D203     		.2byte	0x3d2
 5418 057b 00000000 		.4byte	.LFB70
 5419 057f 4C000000 		.4byte	.LFE70-.LFB70
 5420 0583 01       		.uleb128 0x1
 5421 0584 9C       		.byte	0x9c
 5422 0585 1B       		.uleb128 0x1b
 5423 0586 47030000 		.4byte	.LASF95
 5424 058a 01       		.byte	0x1
 5425 058b E103     		.2byte	0x3e1
 5426 058d 00000000 		.4byte	.LFB71
 5427 0591 4C000000 		.4byte	.LFE71-.LFB71
 5428 0595 01       		.uleb128 0x1
 5429 0596 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 119


 5430 0597 1B       		.uleb128 0x1b
 5431 0598 F6040000 		.4byte	.LASF96
 5432 059c 01       		.byte	0x1
 5433 059d F003     		.2byte	0x3f0
 5434 059f 00000000 		.4byte	.LFB72
 5435 05a3 1C000000 		.4byte	.LFE72-.LFB72
 5436 05a7 01       		.uleb128 0x1
 5437 05a8 9C       		.byte	0x9c
 5438 05a9 18       		.uleb128 0x18
 5439 05aa DE060000 		.4byte	.LASF97
 5440 05ae 01       		.byte	0x1
 5441 05af FC03     		.2byte	0x3fc
 5442 05b1 00000000 		.4byte	.LFB73
 5443 05b5 B0000000 		.4byte	.LFE73-.LFB73
 5444 05b9 01       		.uleb128 0x1
 5445 05ba 9C       		.byte	0x9c
 5446 05bb D7050000 		.4byte	0x5d7
 5447 05bf 12       		.uleb128 0x12
 5448 05c0 5A000000 		.4byte	.LBB12
 5449 05c4 28000000 		.4byte	.LBE12-.LBB12
 5450 05c8 1A       		.uleb128 0x1a
 5451 05c9 6900     		.ascii	"i\000"
 5452 05cb 01       		.byte	0x1
 5453 05cc 0804     		.2byte	0x408
 5454 05ce 94000000 		.4byte	0x94
 5455 05d2 02       		.uleb128 0x2
 5456 05d3 91       		.byte	0x91
 5457 05d4 74       		.sleb128 -12
 5458 05d5 00       		.byte	0
 5459 05d6 00       		.byte	0
 5460 05d7 18       		.uleb128 0x18
 5461 05d8 C6050000 		.4byte	.LASF98
 5462 05dc 01       		.byte	0x1
 5463 05dd 1004     		.2byte	0x410
 5464 05df 00000000 		.4byte	.LFB74
 5465 05e3 54010000 		.4byte	.LFE74-.LFB74
 5466 05e7 01       		.uleb128 0x1
 5467 05e8 9C       		.byte	0x9c
 5468 05e9 4A060000 		.4byte	0x64a
 5469 05ed 14       		.uleb128 0x14
 5470 05ee 95010000 		.4byte	.LASF99
 5471 05f2 01       		.byte	0x1
 5472 05f3 2004     		.2byte	0x420
 5473 05f5 C3000000 		.4byte	0xc3
 5474 05f9 02       		.uleb128 0x2
 5475 05fa 91       		.byte	0x91
 5476 05fb 72       		.sleb128 -14
 5477 05fc 13       		.uleb128 0x13
 5478 05fd 0C000000 		.4byte	.LBB13
 5479 0601 40000000 		.4byte	.LBE13-.LBB13
 5480 0605 17060000 		.4byte	0x617
 5481 0609 1A       		.uleb128 0x1a
 5482 060a 6900     		.ascii	"i\000"
 5483 060c 01       		.byte	0x1
 5484 060d 1404     		.2byte	0x414
 5485 060f 94000000 		.4byte	0x94
 5486 0613 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 120


 5487 0614 91       		.byte	0x91
 5488 0615 74       		.sleb128 -12
 5489 0616 00       		.byte	0
 5490 0617 13       		.uleb128 0x13
 5491 0618 50000000 		.4byte	.LBB14
 5492 061c 2A000000 		.4byte	.LBE14-.LBB14
 5493 0620 32060000 		.4byte	0x632
 5494 0624 1A       		.uleb128 0x1a
 5495 0625 6900     		.ascii	"i\000"
 5496 0627 01       		.byte	0x1
 5497 0628 2104     		.2byte	0x421
 5498 062a 94000000 		.4byte	0x94
 5499 062e 02       		.uleb128 0x2
 5500 062f 91       		.byte	0x91
 5501 0630 6C       		.sleb128 -20
 5502 0631 00       		.byte	0
 5503 0632 12       		.uleb128 0x12
 5504 0633 9E000000 		.4byte	.LBB15
 5505 0637 98000000 		.4byte	.LBE15-.LBB15
 5506 063b 1A       		.uleb128 0x1a
 5507 063c 6900     		.ascii	"i\000"
 5508 063e 01       		.byte	0x1
 5509 063f 2904     		.2byte	0x429
 5510 0641 94000000 		.4byte	0x94
 5511 0645 02       		.uleb128 0x2
 5512 0646 91       		.byte	0x91
 5513 0647 68       		.sleb128 -24
 5514 0648 00       		.byte	0
 5515 0649 00       		.byte	0
 5516 064a 17       		.uleb128 0x17
 5517 064b A1050000 		.4byte	.LASF101
 5518 064f 01       		.byte	0x1
 5519 0650 3304     		.2byte	0x433
 5520 0652 00000000 		.4byte	.LFB75
 5521 0656 A0000000 		.4byte	.LFE75-.LFB75
 5522 065a 01       		.uleb128 0x1
 5523 065b 9C       		.byte	0x9c
 5524 065c 18       		.uleb128 0x18
 5525 065d 09030000 		.4byte	.LASF102
 5526 0661 01       		.byte	0x1
 5527 0662 4304     		.2byte	0x443
 5528 0664 00000000 		.4byte	.LFB76
 5529 0668 BC000000 		.4byte	.LFE76-.LFB76
 5530 066c 01       		.uleb128 0x1
 5531 066d 9C       		.byte	0x9c
 5532 066e 8A060000 		.4byte	0x68a
 5533 0672 12       		.uleb128 0x12
 5534 0673 0C000000 		.4byte	.LBB16
 5535 0677 9C000000 		.4byte	.LBE16-.LBB16
 5536 067b 1A       		.uleb128 0x1a
 5537 067c 6900     		.ascii	"i\000"
 5538 067e 01       		.byte	0x1
 5539 067f 4704     		.2byte	0x447
 5540 0681 94000000 		.4byte	0x94
 5541 0685 02       		.uleb128 0x2
 5542 0686 91       		.byte	0x91
 5543 0687 74       		.sleb128 -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 121


 5544 0688 00       		.byte	0
 5545 0689 00       		.byte	0
 5546 068a 18       		.uleb128 0x18
 5547 068b CA080000 		.4byte	.LASF103
 5548 068f 01       		.byte	0x1
 5549 0690 5304     		.2byte	0x453
 5550 0692 00000000 		.4byte	.LFB77
 5551 0696 34010000 		.4byte	.LFE77-.LFB77
 5552 069a 01       		.uleb128 0x1
 5553 069b 9C       		.byte	0x9c
 5554 069c C7060000 		.4byte	0x6c7
 5555 06a0 14       		.uleb128 0x14
 5556 06a1 0F000000 		.4byte	.LASF104
 5557 06a5 01       		.byte	0x1
 5558 06a6 5504     		.2byte	0x455
 5559 06a8 94000000 		.4byte	0x94
 5560 06ac 02       		.uleb128 0x2
 5561 06ad 91       		.byte	0x91
 5562 06ae 6C       		.sleb128 -20
 5563 06af 12       		.uleb128 0x12
 5564 06b0 0A000000 		.4byte	.LBB17
 5565 06b4 3C000000 		.4byte	.LBE17-.LBB17
 5566 06b8 1A       		.uleb128 0x1a
 5567 06b9 6900     		.ascii	"i\000"
 5568 06bb 01       		.byte	0x1
 5569 06bc 5604     		.2byte	0x456
 5570 06be 94000000 		.4byte	0x94
 5571 06c2 02       		.uleb128 0x2
 5572 06c3 91       		.byte	0x91
 5573 06c4 68       		.sleb128 -24
 5574 06c5 00       		.byte	0
 5575 06c6 00       		.byte	0
 5576 06c7 1C       		.uleb128 0x1c
 5577 06c8 63060000 		.4byte	.LASF105
 5578 06cc 09       		.byte	0x9
 5579 06cd 1207     		.2byte	0x712
 5580 06cf D3060000 		.4byte	0x6d3
 5581 06d3 08       		.uleb128 0x8
 5582 06d4 CE000000 		.4byte	0xce
 5583 06d8 1D       		.uleb128 0x1d
 5584 06d9 27040000 		.4byte	.LASF106
 5585 06dd 0A       		.byte	0xa
 5586 06de 41       		.byte	0x41
 5587 06df D9000000 		.4byte	0xd9
 5588 06e3 05       		.uleb128 0x5
 5589 06e4 03       		.byte	0x3
 5590 06e5 00000000 		.4byte	Decoder_1_Enabled
 5591 06e9 1E       		.uleb128 0x1e
 5592 06ea A3080000 		.4byte	.LASF107
 5593 06ee 07       		.byte	0x7
 5594 06ef 54       		.byte	0x54
 5595 06f0 94000000 		.4byte	0x94
 5596 06f4 1E       		.uleb128 0x1e
 5597 06f5 45060000 		.4byte	.LASF108
 5598 06f9 07       		.byte	0x7
 5599 06fa 55       		.byte	0x55
 5600 06fb AD000000 		.4byte	0xad
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 122


 5601 06ff 1E       		.uleb128 0x1e
 5602 0700 DF010000 		.4byte	.LASF109
 5603 0704 07       		.byte	0x7
 5604 0705 56       		.byte	0x56
 5605 0706 AD000000 		.4byte	0xad
 5606 070a 1E       		.uleb128 0x1e
 5607 070b 1D070000 		.4byte	.LASF110
 5608 070f 07       		.byte	0x7
 5609 0710 57       		.byte	0x57
 5610 0711 AD000000 		.4byte	0xad
 5611 0715 1E       		.uleb128 0x1e
 5612 0716 93020000 		.4byte	.LASF111
 5613 071a 07       		.byte	0x7
 5614 071b 58       		.byte	0x58
 5615 071c AD000000 		.4byte	0xad
 5616 0720 1E       		.uleb128 0x1e
 5617 0721 B6010000 		.4byte	.LASF112
 5618 0725 07       		.byte	0x7
 5619 0726 59       		.byte	0x59
 5620 0727 AD000000 		.4byte	0xad
 5621 072b 1E       		.uleb128 0x1e
 5622 072c CD020000 		.4byte	.LASF113
 5623 0730 07       		.byte	0x7
 5624 0731 5A       		.byte	0x5a
 5625 0732 45040000 		.4byte	0x445
 5626 0736 1E       		.uleb128 0x1e
 5627 0737 D9000000 		.4byte	.LASF114
 5628 073b 07       		.byte	0x7
 5629 073c 5B       		.byte	0x5b
 5630 073d AD000000 		.4byte	0xad
 5631 0741 15       		.uleb128 0x15
 5632 0742 AD000000 		.4byte	0xad
 5633 0746 5D070000 		.4byte	0x75d
 5634 074a 16       		.uleb128 0x16
 5635 074b 01010000 		.4byte	0x101
 5636 074f 3F       		.byte	0x3f
 5637 0750 16       		.uleb128 0x16
 5638 0751 01010000 		.4byte	0x101
 5639 0755 07       		.byte	0x7
 5640 0756 16       		.uleb128 0x16
 5641 0757 01010000 		.4byte	0x101
 5642 075b 0D       		.byte	0xd
 5643 075c 00       		.byte	0
 5644 075d 1E       		.uleb128 0x1e
 5645 075e D3020000 		.4byte	.LASF115
 5646 0762 07       		.byte	0x7
 5647 0763 5C       		.byte	0x5c
 5648 0764 41070000 		.4byte	0x741
 5649 0768 1E       		.uleb128 0x1e
 5650 0769 5A060000 		.4byte	.LASF116
 5651 076d 07       		.byte	0x7
 5652 076e 5D       		.byte	0x5d
 5653 076f AD000000 		.4byte	0xad
 5654 0773 15       		.uleb128 0x15
 5655 0774 AD000000 		.4byte	0xad
 5656 0778 89070000 		.4byte	0x789
 5657 077c 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 123


 5658 077d 01010000 		.4byte	0x101
 5659 0781 3F       		.byte	0x3f
 5660 0782 16       		.uleb128 0x16
 5661 0783 01010000 		.4byte	0x101
 5662 0787 0D       		.byte	0xd
 5663 0788 00       		.byte	0
 5664 0789 1E       		.uleb128 0x1e
 5665 078a 70010000 		.4byte	.LASF117
 5666 078e 07       		.byte	0x7
 5667 078f 5F       		.byte	0x5f
 5668 0790 73070000 		.4byte	0x773
 5669 0794 15       		.uleb128 0x15
 5670 0795 AD000000 		.4byte	0xad
 5671 0799 AA070000 		.4byte	0x7aa
 5672 079d 16       		.uleb128 0x16
 5673 079e 01010000 		.4byte	0x101
 5674 07a2 06       		.byte	0x6
 5675 07a3 16       		.uleb128 0x16
 5676 07a4 01010000 		.4byte	0x101
 5677 07a8 0D       		.byte	0xd
 5678 07a9 00       		.byte	0
 5679 07aa 1E       		.uleb128 0x1e
 5680 07ab 21030000 		.4byte	.LASF118
 5681 07af 07       		.byte	0x7
 5682 07b0 61       		.byte	0x61
 5683 07b1 94070000 		.4byte	0x794
 5684 07b5 15       		.uleb128 0x15
 5685 07b6 AD000000 		.4byte	0xad
 5686 07ba C5070000 		.4byte	0x7c5
 5687 07be 16       		.uleb128 0x16
 5688 07bf 01010000 		.4byte	0x101
 5689 07c3 3F       		.byte	0x3f
 5690 07c4 00       		.byte	0
 5691 07c5 1E       		.uleb128 0x1e
 5692 07c6 2E060000 		.4byte	.LASF119
 5693 07ca 07       		.byte	0x7
 5694 07cb 62       		.byte	0x62
 5695 07cc B5070000 		.4byte	0x7b5
 5696 07d0 1E       		.uleb128 0x1e
 5697 07d1 68050000 		.4byte	.LASF120
 5698 07d5 07       		.byte	0x7
 5699 07d6 63       		.byte	0x63
 5700 07d7 AD000000 		.4byte	0xad
 5701 07db 1E       		.uleb128 0x1e
 5702 07dc AA080000 		.4byte	.LASF121
 5703 07e0 07       		.byte	0x7
 5704 07e1 64       		.byte	0x64
 5705 07e2 AD000000 		.4byte	0xad
 5706 07e6 1E       		.uleb128 0x1e
 5707 07e7 89000000 		.4byte	.LASF122
 5708 07eb 07       		.byte	0x7
 5709 07ec 65       		.byte	0x65
 5710 07ed AD000000 		.4byte	0xad
 5711 07f1 15       		.uleb128 0x15
 5712 07f2 C3000000 		.4byte	0xc3
 5713 07f6 07080000 		.4byte	0x807
 5714 07fa 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 124


 5715 07fb 01010000 		.4byte	0x101
 5716 07ff 01       		.byte	0x1
 5717 0800 16       		.uleb128 0x16
 5718 0801 01010000 		.4byte	0x101
 5719 0805 0B       		.byte	0xb
 5720 0806 00       		.byte	0
 5721 0807 1E       		.uleb128 0x1e
 5722 0808 FF030000 		.4byte	.LASF123
 5723 080c 07       		.byte	0x7
 5724 080d 66       		.byte	0x66
 5725 080e F1070000 		.4byte	0x7f1
 5726 0812 15       		.uleb128 0x15
 5727 0813 C3000000 		.4byte	0xc3
 5728 0817 22080000 		.4byte	0x822
 5729 081b 16       		.uleb128 0x16
 5730 081c 01010000 		.4byte	0x101
 5731 0820 09       		.byte	0x9
 5732 0821 00       		.byte	0
 5733 0822 1E       		.uleb128 0x1e
 5734 0823 F4030000 		.4byte	.LASF124
 5735 0827 07       		.byte	0x7
 5736 0828 67       		.byte	0x67
 5737 0829 12080000 		.4byte	0x812
 5738 082d 1E       		.uleb128 0x1e
 5739 082e BD030000 		.4byte	.LASF125
 5740 0832 07       		.byte	0x7
 5741 0833 68       		.byte	0x68
 5742 0834 12080000 		.4byte	0x812
 5743 0838 15       		.uleb128 0x15
 5744 0839 AD000000 		.4byte	0xad
 5745 083d 48080000 		.4byte	0x848
 5746 0841 16       		.uleb128 0x16
 5747 0842 01010000 		.4byte	0x101
 5748 0846 09       		.byte	0x9
 5749 0847 00       		.byte	0
 5750 0848 1E       		.uleb128 0x1e
 5751 0849 8B060000 		.4byte	.LASF126
 5752 084d 07       		.byte	0x7
 5753 084e 69       		.byte	0x69
 5754 084f 38080000 		.4byte	0x838
 5755 0853 1E       		.uleb128 0x1e
 5756 0854 1E060000 		.4byte	.LASF127
 5757 0858 07       		.byte	0x7
 5758 0859 6A       		.byte	0x6a
 5759 085a 12080000 		.4byte	0x812
 5760 085e 15       		.uleb128 0x15
 5761 085f 13010000 		.4byte	0x113
 5762 0863 6E080000 		.4byte	0x86e
 5763 0867 16       		.uleb128 0x16
 5764 0868 01010000 		.4byte	0x101
 5765 086c 01       		.byte	0x1
 5766 086d 00       		.byte	0
 5767 086e 1F       		.uleb128 0x1f
 5768 086f 62617200 		.ascii	"bar\000"
 5769 0873 07       		.byte	0x7
 5770 0874 6B       		.byte	0x6b
 5771 0875 79080000 		.4byte	0x879
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 125


 5772 0879 08       		.uleb128 0x8
 5773 087a 5E080000 		.4byte	0x85e
 5774 087e 1E       		.uleb128 0x1e
 5775 087f 91030000 		.4byte	.LASF128
 5776 0883 07       		.byte	0x7
 5777 0884 6C       		.byte	0x6c
 5778 0885 A2000000 		.4byte	0xa2
 5779 0889 1E       		.uleb128 0x1e
 5780 088a 27080000 		.4byte	.LASF129
 5781 088e 07       		.byte	0x7
 5782 088f 6D       		.byte	0x6d
 5783 0890 A2000000 		.4byte	0xa2
 5784 0894 1E       		.uleb128 0x1e
 5785 0895 5A000000 		.4byte	.LASF130
 5786 0899 07       		.byte	0x7
 5787 089a 6E       		.byte	0x6e
 5788 089b E5000000 		.4byte	0xe5
 5789 089f 1E       		.uleb128 0x1e
 5790 08a0 25000000 		.4byte	.LASF131
 5791 08a4 07       		.byte	0x7
 5792 08a5 6F       		.byte	0x6f
 5793 08a6 94000000 		.4byte	0x94
 5794 08aa 1E       		.uleb128 0x1e
 5795 08ab 1F050000 		.4byte	.LASF132
 5796 08af 07       		.byte	0x7
 5797 08b0 70       		.byte	0x70
 5798 08b1 AD000000 		.4byte	0xad
 5799 08b5 1E       		.uleb128 0x1e
 5800 08b6 65020000 		.4byte	.LASF133
 5801 08ba 07       		.byte	0x7
 5802 08bb 71       		.byte	0x71
 5803 08bc AD000000 		.4byte	0xad
 5804 08c0 1E       		.uleb128 0x1e
 5805 08c1 AB000000 		.4byte	.LASF134
 5806 08c5 07       		.byte	0x7
 5807 08c6 72       		.byte	0x72
 5808 08c7 45040000 		.4byte	0x445
 5809 08cb 1E       		.uleb128 0x1e
 5810 08cc AA020000 		.4byte	.LASF135
 5811 08d0 07       		.byte	0x7
 5812 08d1 73       		.byte	0x73
 5813 08d2 AD000000 		.4byte	0xad
 5814 08d6 1E       		.uleb128 0x1e
 5815 08d7 3F050000 		.4byte	.LASF136
 5816 08db 07       		.byte	0x7
 5817 08dc 74       		.byte	0x74
 5818 08dd AD000000 		.4byte	0xad
 5819 08e1 1E       		.uleb128 0x1e
 5820 08e2 70070000 		.4byte	.LASF137
 5821 08e6 07       		.byte	0x7
 5822 08e7 75       		.byte	0x75
 5823 08e8 AD000000 		.4byte	0xad
 5824 08ec 1E       		.uleb128 0x1e
 5825 08ed 5C030000 		.4byte	.LASF138
 5826 08f1 08       		.byte	0x8
 5827 08f2 77       		.byte	0x77
 5828 08f3 F6020000 		.4byte	0x2f6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 126


 5829 08f7 1D       		.uleb128 0x1d
 5830 08f8 BF010000 		.4byte	.LASF139
 5831 08fc 01       		.byte	0x1
 5832 08fd 10       		.byte	0x10
 5833 08fe A2000000 		.4byte	0xa2
 5834 0902 05       		.uleb128 0x5
 5835 0903 03       		.byte	0x3
 5836 0904 00000000 		.4byte	prevEncoderVal
 5837 0908 1D       		.uleb128 0x1d
 5838 0909 63070000 		.4byte	.LASF140
 5839 090d 01       		.byte	0x1
 5840 090e 11       		.byte	0x11
 5841 090f AD000000 		.4byte	0xad
 5842 0913 05       		.uleb128 0x5
 5843 0914 03       		.byte	0x3
 5844 0915 00000000 		.4byte	encoderWatch
 5845 0919 15       		.uleb128 0x15
 5846 091a A2000000 		.4byte	0xa2
 5847 091e 2F090000 		.4byte	0x92f
 5848 0922 16       		.uleb128 0x16
 5849 0923 01010000 		.4byte	0x101
 5850 0927 02       		.byte	0x2
 5851 0928 16       		.uleb128 0x16
 5852 0929 01010000 		.4byte	0x101
 5853 092d 01       		.byte	0x1
 5854 092e 00       		.byte	0
 5855 092f 1D       		.uleb128 0x1d
 5856 0930 2A050000 		.4byte	.LASF141
 5857 0934 01       		.byte	0x1
 5858 0935 13       		.byte	0x13
 5859 0936 19090000 		.4byte	0x919
 5860 093a 05       		.uleb128 0x5
 5861 093b 03       		.byte	0x3
 5862 093c 00000000 		.4byte	menuPosition
 5863 0940 1D       		.uleb128 0x1d
 5864 0941 B7020000 		.4byte	.LASF142
 5865 0945 01       		.byte	0x1
 5866 0946 15       		.byte	0x15
 5867 0947 AD000000 		.4byte	0xad
 5868 094b 05       		.uleb128 0x5
 5869 094c 03       		.byte	0x3
 5870 094d 00000000 		.4byte	semitonesOrCents
 5871 0951 1D       		.uleb128 0x1d
 5872 0952 41000000 		.4byte	.LASF143
 5873 0956 01       		.byte	0x1
 5874 0957 16       		.byte	0x16
 5875 0958 AD000000 		.4byte	0xad
 5876 095c 05       		.uleb128 0x5
 5877 095d 03       		.byte	0x3
 5878 095e 00000000 		.4byte	editUp
 5879 0962 1D       		.uleb128 0x1d
 5880 0963 F2070000 		.4byte	.LASF144
 5881 0967 01       		.byte	0x1
 5882 0968 17       		.byte	0x17
 5883 0969 AD000000 		.4byte	0xad
 5884 096d 05       		.uleb128 0x5
 5885 096e 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 127


 5886 096f 00000000 		.4byte	oct1Up
 5887 0973 1D       		.uleb128 0x1d
 5888 0974 6F030000 		.4byte	.LASF145
 5889 0978 01       		.byte	0x1
 5890 0979 18       		.byte	0x18
 5891 097a AD000000 		.4byte	0xad
 5892 097e 05       		.uleb128 0x5
 5893 097f 03       		.byte	0x3
 5894 0980 00000000 		.4byte	oct4Up
 5895 0984 1D       		.uleb128 0x1d
 5896 0985 F2050000 		.4byte	.LASF146
 5897 0989 01       		.byte	0x1
 5898 098a 19       		.byte	0x19
 5899 098b AD000000 		.4byte	0xad
 5900 098f 05       		.uleb128 0x5
 5901 0990 03       		.byte	0x3
 5902 0991 00000000 		.4byte	encoderUp
 5903 0995 1D       		.uleb128 0x1d
 5904 0996 C9030000 		.4byte	.LASF147
 5905 099a 01       		.byte	0x1
 5906 099b 1A       		.byte	0x1a
 5907 099c AD000000 		.4byte	0xad
 5908 09a0 05       		.uleb128 0x5
 5909 09a1 03       		.byte	0x3
 5910 09a2 00000000 		.4byte	button1Up
 5911 09a6 1D       		.uleb128 0x1d
 5912 09a7 AE070000 		.4byte	.LASF148
 5913 09ab 01       		.byte	0x1
 5914 09ac 1B       		.byte	0x1b
 5915 09ad AD000000 		.4byte	0xad
 5916 09b1 05       		.uleb128 0x5
 5917 09b2 03       		.byte	0x3
 5918 09b3 00000000 		.4byte	button2Up
 5919 09b7 1D       		.uleb128 0x1d
 5920 09b8 CF000000 		.4byte	.LASF149
 5921 09bc 01       		.byte	0x1
 5922 09bd 1C       		.byte	0x1c
 5923 09be AD000000 		.4byte	0xad
 5924 09c2 05       		.uleb128 0x5
 5925 09c3 03       		.byte	0x3
 5926 09c4 00000000 		.4byte	button3Up
 5927 09c8 1D       		.uleb128 0x1d
 5928 09c9 E8050000 		.4byte	.LASF150
 5929 09cd 01       		.byte	0x1
 5930 09ce 1D       		.byte	0x1d
 5931 09cf AD000000 		.4byte	0xad
 5932 09d3 05       		.uleb128 0x5
 5933 09d4 03       		.byte	0x3
 5934 09d5 00000000 		.4byte	button4Up
 5935 09d9 1D       		.uleb128 0x1d
 5936 09da 37050000 		.4byte	.LASF151
 5937 09de 01       		.byte	0x1
 5938 09df 1E       		.byte	0x1e
 5939 09e0 AD000000 		.4byte	0xad
 5940 09e4 05       		.uleb128 0x5
 5941 09e5 03       		.byte	0x3
 5942 09e6 00000000 		.4byte	shiftUp
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 128


 5943 09ea 1D       		.uleb128 0x1d
 5944 09eb 73050000 		.4byte	.LASF152
 5945 09ef 01       		.byte	0x1
 5946 09f0 1F       		.byte	0x1f
 5947 09f1 AD000000 		.4byte	0xad
 5948 09f5 05       		.uleb128 0x5
 5949 09f6 03       		.byte	0x3
 5950 09f7 00000000 		.4byte	editingSliderRepString
 5951 09fb 1D       		.uleb128 0x1d
 5952 09fc 76030000 		.4byte	.LASF153
 5953 0a00 01       		.byte	0x1
 5954 0a01 20       		.byte	0x20
 5955 0a02 AD000000 		.4byte	0xad
 5956 0a06 05       		.uleb128 0x5
 5957 0a07 03       		.byte	0x3
 5958 0a08 00000000 		.4byte	whichMidiSendSelected
 5959 0a0c 15       		.uleb128 0x15
 5960 0a0d 1C0A0000 		.4byte	0xa1c
 5961 0a11 1C0A0000 		.4byte	0xa1c
 5962 0a15 16       		.uleb128 0x16
 5963 0a16 01010000 		.4byte	0x101
 5964 0a1a 02       		.byte	0x2
 5965 0a1b 00       		.byte	0
 5966 0a1c 07       		.uleb128 0x7
 5967 0a1d 08010000 		.4byte	0x108
 5968 0a21 20       		.uleb128 0x20
 5969 0a22 CE010000 		.4byte	.LASF154
 5970 0a26 01       		.byte	0x1
 5971 0a27 9001     		.2byte	0x190
 5972 0a29 330A0000 		.4byte	0xa33
 5973 0a2d 05       		.uleb128 0x5
 5974 0a2e 03       		.byte	0x3
 5975 0a2f 00000000 		.4byte	calibrationNames
 5976 0a33 07       		.uleb128 0x7
 5977 0a34 0C0A0000 		.4byte	0xa0c
 5978 0a38 20       		.uleb128 0x20
 5979 0a39 33070000 		.4byte	.LASF155
 5980 0a3d 01       		.byte	0x1
 5981 0a3e 9101     		.2byte	0x191
 5982 0a40 4A0A0000 		.4byte	0xa4a
 5983 0a44 05       		.uleb128 0x5
 5984 0a45 03       		.byte	0x3
 5985 0a46 00000000 		.4byte	mainMenuNames
 5986 0a4a 07       		.uleb128 0x7
 5987 0a4b 0C0A0000 		.4byte	0xa0c
 5988 0a4f 15       		.uleb128 0x15
 5989 0a50 1C0A0000 		.4byte	0xa1c
 5990 0a54 5F0A0000 		.4byte	0xa5f
 5991 0a58 16       		.uleb128 0x16
 5992 0a59 01010000 		.4byte	0x101
 5993 0a5d 06       		.byte	0x6
 5994 0a5e 00       		.byte	0
 5995 0a5f 20       		.uleb128 0x20
 5996 0a60 E4070000 		.4byte	.LASF156
 5997 0a64 01       		.byte	0x1
 5998 0a65 9201     		.2byte	0x192
 5999 0a67 710A0000 		.4byte	0xa71
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 129


 6000 0a6b 05       		.uleb128 0x5
 6001 0a6c 03       		.byte	0x3
 6002 0a6d 00000000 		.4byte	settingsNames
 6003 0a71 07       		.uleb128 0x7
 6004 0a72 4F0A0000 		.4byte	0xa4f
 6005 0a76 20       		.uleb128 0x20
 6006 0a77 4E080000 		.4byte	.LASF157
 6007 0a7b 01       		.byte	0x1
 6008 0a7c 9301     		.2byte	0x193
 6009 0a7e AD000000 		.4byte	0xad
 6010 0a82 05       		.uleb128 0x5
 6011 0a83 03       		.byte	0x3
 6012 0a84 00000000 		.4byte	numMainMenuItems
 6013 0a88 20       		.uleb128 0x20
 6014 0a89 81010000 		.4byte	.LASF158
 6015 0a8d 01       		.byte	0x1
 6016 0a8e 9401     		.2byte	0x194
 6017 0a90 AD000000 		.4byte	0xad
 6018 0a94 05       		.uleb128 0x5
 6019 0a95 03       		.byte	0x3
 6020 0a96 00000000 		.4byte	numCalibrationItems
 6021 0a9a 20       		.uleb128 0x20
 6022 0a9b 6E020000 		.4byte	.LASF159
 6023 0a9f 01       		.byte	0x1
 6024 0aa0 9501     		.2byte	0x195
 6025 0aa2 AD000000 		.4byte	0xad
 6026 0aa6 05       		.uleb128 0x5
 6027 0aa7 03       		.byte	0x3
 6028 0aa8 00000000 		.4byte	numSettingsItems
 6029 0aac 20       		.uleb128 0x20
 6030 0aad AD030000 		.4byte	.LASF160
 6031 0ab1 01       		.byte	0x1
 6032 0ab2 D701     		.2byte	0x1d7
 6033 0ab4 AD000000 		.4byte	0xad
 6034 0ab8 05       		.uleb128 0x5
 6035 0ab9 03       		.byte	0x3
 6036 0aba 00000000 		.4byte	fretToCalibrate
 6037 0abe 15       		.uleb128 0x15
 6038 0abf AD000000 		.4byte	0xad
 6039 0ac3 CE0A0000 		.4byte	0xace
 6040 0ac7 16       		.uleb128 0x16
 6041 0ac8 01010000 		.4byte	0x101
 6042 0acc 0B       		.byte	0xb
 6043 0acd 00       		.byte	0
 6044 0ace 20       		.uleb128 0x20
 6045 0acf 02080000 		.4byte	.LASF161
 6046 0ad3 01       		.byte	0x1
 6047 0ad4 D801     		.2byte	0x1d8
 6048 0ad6 BE0A0000 		.4byte	0xabe
 6049 0ada 05       		.uleb128 0x5
 6050 0adb 03       		.byte	0x3
 6051 0adc 00000000 		.4byte	whichFretArray
 6052 0ae0 00       		.byte	0
 6053              		.section	.debug_abbrev,"",%progbits
 6054              	.Ldebug_abbrev0:
 6055 0000 01       		.uleb128 0x1
 6056 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 130


 6057 0002 01       		.byte	0x1
 6058 0003 25       		.uleb128 0x25
 6059 0004 0E       		.uleb128 0xe
 6060 0005 13       		.uleb128 0x13
 6061 0006 0B       		.uleb128 0xb
 6062 0007 03       		.uleb128 0x3
 6063 0008 0E       		.uleb128 0xe
 6064 0009 1B       		.uleb128 0x1b
 6065 000a 0E       		.uleb128 0xe
 6066 000b 55       		.uleb128 0x55
 6067 000c 17       		.uleb128 0x17
 6068 000d 11       		.uleb128 0x11
 6069 000e 01       		.uleb128 0x1
 6070 000f 10       		.uleb128 0x10
 6071 0010 17       		.uleb128 0x17
 6072 0011 00       		.byte	0
 6073 0012 00       		.byte	0
 6074 0013 02       		.uleb128 0x2
 6075 0014 16       		.uleb128 0x16
 6076 0015 00       		.byte	0
 6077 0016 03       		.uleb128 0x3
 6078 0017 0E       		.uleb128 0xe
 6079 0018 3A       		.uleb128 0x3a
 6080 0019 0B       		.uleb128 0xb
 6081 001a 3B       		.uleb128 0x3b
 6082 001b 0B       		.uleb128 0xb
 6083 001c 49       		.uleb128 0x49
 6084 001d 13       		.uleb128 0x13
 6085 001e 00       		.byte	0
 6086 001f 00       		.byte	0
 6087 0020 03       		.uleb128 0x3
 6088 0021 24       		.uleb128 0x24
 6089 0022 00       		.byte	0
 6090 0023 0B       		.uleb128 0xb
 6091 0024 0B       		.uleb128 0xb
 6092 0025 3E       		.uleb128 0x3e
 6093 0026 0B       		.uleb128 0xb
 6094 0027 03       		.uleb128 0x3
 6095 0028 0E       		.uleb128 0xe
 6096 0029 00       		.byte	0
 6097 002a 00       		.byte	0
 6098 002b 04       		.uleb128 0x4
 6099 002c 24       		.uleb128 0x24
 6100 002d 00       		.byte	0
 6101 002e 0B       		.uleb128 0xb
 6102 002f 0B       		.uleb128 0xb
 6103 0030 3E       		.uleb128 0x3e
 6104 0031 0B       		.uleb128 0xb
 6105 0032 03       		.uleb128 0x3
 6106 0033 08       		.uleb128 0x8
 6107 0034 00       		.byte	0
 6108 0035 00       		.byte	0
 6109 0036 05       		.uleb128 0x5
 6110 0037 16       		.uleb128 0x16
 6111 0038 00       		.byte	0
 6112 0039 03       		.uleb128 0x3
 6113 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 131


 6114 003b 3A       		.uleb128 0x3a
 6115 003c 0B       		.uleb128 0xb
 6116 003d 3B       		.uleb128 0x3b
 6117 003e 05       		.uleb128 0x5
 6118 003f 49       		.uleb128 0x49
 6119 0040 13       		.uleb128 0x13
 6120 0041 00       		.byte	0
 6121 0042 00       		.byte	0
 6122 0043 06       		.uleb128 0x6
 6123 0044 0F       		.uleb128 0xf
 6124 0045 00       		.byte	0
 6125 0046 0B       		.uleb128 0xb
 6126 0047 0B       		.uleb128 0xb
 6127 0048 49       		.uleb128 0x49
 6128 0049 13       		.uleb128 0x13
 6129 004a 00       		.byte	0
 6130 004b 00       		.byte	0
 6131 004c 07       		.uleb128 0x7
 6132 004d 26       		.uleb128 0x26
 6133 004e 00       		.byte	0
 6134 004f 49       		.uleb128 0x49
 6135 0050 13       		.uleb128 0x13
 6136 0051 00       		.byte	0
 6137 0052 00       		.byte	0
 6138 0053 08       		.uleb128 0x8
 6139 0054 35       		.uleb128 0x35
 6140 0055 00       		.byte	0
 6141 0056 49       		.uleb128 0x49
 6142 0057 13       		.uleb128 0x13
 6143 0058 00       		.byte	0
 6144 0059 00       		.byte	0
 6145 005a 09       		.uleb128 0x9
 6146 005b 04       		.uleb128 0x4
 6147 005c 01       		.byte	0x1
 6148 005d 03       		.uleb128 0x3
 6149 005e 0E       		.uleb128 0xe
 6150 005f 0B       		.uleb128 0xb
 6151 0060 0B       		.uleb128 0xb
 6152 0061 49       		.uleb128 0x49
 6153 0062 13       		.uleb128 0x13
 6154 0063 3A       		.uleb128 0x3a
 6155 0064 0B       		.uleb128 0xb
 6156 0065 3B       		.uleb128 0x3b
 6157 0066 0B       		.uleb128 0xb
 6158 0067 01       		.uleb128 0x1
 6159 0068 13       		.uleb128 0x13
 6160 0069 00       		.byte	0
 6161 006a 00       		.byte	0
 6162 006b 0A       		.uleb128 0xa
 6163 006c 28       		.uleb128 0x28
 6164 006d 00       		.byte	0
 6165 006e 03       		.uleb128 0x3
 6166 006f 0E       		.uleb128 0xe
 6167 0070 1C       		.uleb128 0x1c
 6168 0071 0B       		.uleb128 0xb
 6169 0072 00       		.byte	0
 6170 0073 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 132


 6171 0074 0B       		.uleb128 0xb
 6172 0075 13       		.uleb128 0x13
 6173 0076 01       		.byte	0x1
 6174 0077 0B       		.uleb128 0xb
 6175 0078 0B       		.uleb128 0xb
 6176 0079 3A       		.uleb128 0x3a
 6177 007a 0B       		.uleb128 0xb
 6178 007b 3B       		.uleb128 0x3b
 6179 007c 0B       		.uleb128 0xb
 6180 007d 01       		.uleb128 0x1
 6181 007e 13       		.uleb128 0x13
 6182 007f 00       		.byte	0
 6183 0080 00       		.byte	0
 6184 0081 0C       		.uleb128 0xc
 6185 0082 0D       		.uleb128 0xd
 6186 0083 00       		.byte	0
 6187 0084 03       		.uleb128 0x3
 6188 0085 0E       		.uleb128 0xe
 6189 0086 3A       		.uleb128 0x3a
 6190 0087 0B       		.uleb128 0xb
 6191 0088 3B       		.uleb128 0x3b
 6192 0089 0B       		.uleb128 0xb
 6193 008a 49       		.uleb128 0x49
 6194 008b 13       		.uleb128 0x13
 6195 008c 38       		.uleb128 0x38
 6196 008d 0B       		.uleb128 0xb
 6197 008e 00       		.byte	0
 6198 008f 00       		.byte	0
 6199 0090 0D       		.uleb128 0xd
 6200 0091 13       		.uleb128 0x13
 6201 0092 01       		.byte	0x1
 6202 0093 03       		.uleb128 0x3
 6203 0094 0E       		.uleb128 0xe
 6204 0095 0B       		.uleb128 0xb
 6205 0096 0B       		.uleb128 0xb
 6206 0097 3A       		.uleb128 0x3a
 6207 0098 0B       		.uleb128 0xb
 6208 0099 3B       		.uleb128 0x3b
 6209 009a 0B       		.uleb128 0xb
 6210 009b 01       		.uleb128 0x1
 6211 009c 13       		.uleb128 0x13
 6212 009d 00       		.byte	0
 6213 009e 00       		.byte	0
 6214 009f 0E       		.uleb128 0xe
 6215 00a0 16       		.uleb128 0x16
 6216 00a1 00       		.byte	0
 6217 00a2 03       		.uleb128 0x3
 6218 00a3 08       		.uleb128 0x8
 6219 00a4 3A       		.uleb128 0x3a
 6220 00a5 0B       		.uleb128 0xb
 6221 00a6 3B       		.uleb128 0x3b
 6222 00a7 0B       		.uleb128 0xb
 6223 00a8 49       		.uleb128 0x49
 6224 00a9 13       		.uleb128 0x13
 6225 00aa 00       		.byte	0
 6226 00ab 00       		.byte	0
 6227 00ac 0F       		.uleb128 0xf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 133


 6228 00ad 28       		.uleb128 0x28
 6229 00ae 00       		.byte	0
 6230 00af 03       		.uleb128 0x3
 6231 00b0 08       		.uleb128 0x8
 6232 00b1 1C       		.uleb128 0x1c
 6233 00b2 0B       		.uleb128 0xb
 6234 00b3 00       		.byte	0
 6235 00b4 00       		.byte	0
 6236 00b5 10       		.uleb128 0x10
 6237 00b6 2E       		.uleb128 0x2e
 6238 00b7 01       		.byte	0x1
 6239 00b8 3F       		.uleb128 0x3f
 6240 00b9 19       		.uleb128 0x19
 6241 00ba 03       		.uleb128 0x3
 6242 00bb 0E       		.uleb128 0xe
 6243 00bc 3A       		.uleb128 0x3a
 6244 00bd 0B       		.uleb128 0xb
 6245 00be 3B       		.uleb128 0x3b
 6246 00bf 0B       		.uleb128 0xb
 6247 00c0 27       		.uleb128 0x27
 6248 00c1 19       		.uleb128 0x19
 6249 00c2 11       		.uleb128 0x11
 6250 00c3 01       		.uleb128 0x1
 6251 00c4 12       		.uleb128 0x12
 6252 00c5 06       		.uleb128 0x6
 6253 00c6 40       		.uleb128 0x40
 6254 00c7 18       		.uleb128 0x18
 6255 00c8 9642     		.uleb128 0x2116
 6256 00ca 19       		.uleb128 0x19
 6257 00cb 01       		.uleb128 0x1
 6258 00cc 13       		.uleb128 0x13
 6259 00cd 00       		.byte	0
 6260 00ce 00       		.byte	0
 6261 00cf 11       		.uleb128 0x11
 6262 00d0 34       		.uleb128 0x34
 6263 00d1 00       		.byte	0
 6264 00d2 03       		.uleb128 0x3
 6265 00d3 0E       		.uleb128 0xe
 6266 00d4 3A       		.uleb128 0x3a
 6267 00d5 0B       		.uleb128 0xb
 6268 00d6 3B       		.uleb128 0x3b
 6269 00d7 0B       		.uleb128 0xb
 6270 00d8 49       		.uleb128 0x49
 6271 00d9 13       		.uleb128 0x13
 6272 00da 02       		.uleb128 0x2
 6273 00db 18       		.uleb128 0x18
 6274 00dc 00       		.byte	0
 6275 00dd 00       		.byte	0
 6276 00de 12       		.uleb128 0x12
 6277 00df 0B       		.uleb128 0xb
 6278 00e0 01       		.byte	0x1
 6279 00e1 11       		.uleb128 0x11
 6280 00e2 01       		.uleb128 0x1
 6281 00e3 12       		.uleb128 0x12
 6282 00e4 06       		.uleb128 0x6
 6283 00e5 00       		.byte	0
 6284 00e6 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 134


 6285 00e7 13       		.uleb128 0x13
 6286 00e8 0B       		.uleb128 0xb
 6287 00e9 01       		.byte	0x1
 6288 00ea 11       		.uleb128 0x11
 6289 00eb 01       		.uleb128 0x1
 6290 00ec 12       		.uleb128 0x12
 6291 00ed 06       		.uleb128 0x6
 6292 00ee 01       		.uleb128 0x1
 6293 00ef 13       		.uleb128 0x13
 6294 00f0 00       		.byte	0
 6295 00f1 00       		.byte	0
 6296 00f2 14       		.uleb128 0x14
 6297 00f3 34       		.uleb128 0x34
 6298 00f4 00       		.byte	0
 6299 00f5 03       		.uleb128 0x3
 6300 00f6 0E       		.uleb128 0xe
 6301 00f7 3A       		.uleb128 0x3a
 6302 00f8 0B       		.uleb128 0xb
 6303 00f9 3B       		.uleb128 0x3b
 6304 00fa 05       		.uleb128 0x5
 6305 00fb 49       		.uleb128 0x49
 6306 00fc 13       		.uleb128 0x13
 6307 00fd 02       		.uleb128 0x2
 6308 00fe 18       		.uleb128 0x18
 6309 00ff 00       		.byte	0
 6310 0100 00       		.byte	0
 6311 0101 15       		.uleb128 0x15
 6312 0102 01       		.uleb128 0x1
 6313 0103 01       		.byte	0x1
 6314 0104 49       		.uleb128 0x49
 6315 0105 13       		.uleb128 0x13
 6316 0106 01       		.uleb128 0x1
 6317 0107 13       		.uleb128 0x13
 6318 0108 00       		.byte	0
 6319 0109 00       		.byte	0
 6320 010a 16       		.uleb128 0x16
 6321 010b 21       		.uleb128 0x21
 6322 010c 00       		.byte	0
 6323 010d 49       		.uleb128 0x49
 6324 010e 13       		.uleb128 0x13
 6325 010f 2F       		.uleb128 0x2f
 6326 0110 0B       		.uleb128 0xb
 6327 0111 00       		.byte	0
 6328 0112 00       		.byte	0
 6329 0113 17       		.uleb128 0x17
 6330 0114 2E       		.uleb128 0x2e
 6331 0115 00       		.byte	0
 6332 0116 3F       		.uleb128 0x3f
 6333 0117 19       		.uleb128 0x19
 6334 0118 03       		.uleb128 0x3
 6335 0119 0E       		.uleb128 0xe
 6336 011a 3A       		.uleb128 0x3a
 6337 011b 0B       		.uleb128 0xb
 6338 011c 3B       		.uleb128 0x3b
 6339 011d 05       		.uleb128 0x5
 6340 011e 27       		.uleb128 0x27
 6341 011f 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 135


 6342 0120 11       		.uleb128 0x11
 6343 0121 01       		.uleb128 0x1
 6344 0122 12       		.uleb128 0x12
 6345 0123 06       		.uleb128 0x6
 6346 0124 40       		.uleb128 0x40
 6347 0125 18       		.uleb128 0x18
 6348 0126 9642     		.uleb128 0x2116
 6349 0128 19       		.uleb128 0x19
 6350 0129 00       		.byte	0
 6351 012a 00       		.byte	0
 6352 012b 18       		.uleb128 0x18
 6353 012c 2E       		.uleb128 0x2e
 6354 012d 01       		.byte	0x1
 6355 012e 3F       		.uleb128 0x3f
 6356 012f 19       		.uleb128 0x19
 6357 0130 03       		.uleb128 0x3
 6358 0131 0E       		.uleb128 0xe
 6359 0132 3A       		.uleb128 0x3a
 6360 0133 0B       		.uleb128 0xb
 6361 0134 3B       		.uleb128 0x3b
 6362 0135 05       		.uleb128 0x5
 6363 0136 27       		.uleb128 0x27
 6364 0137 19       		.uleb128 0x19
 6365 0138 11       		.uleb128 0x11
 6366 0139 01       		.uleb128 0x1
 6367 013a 12       		.uleb128 0x12
 6368 013b 06       		.uleb128 0x6
 6369 013c 40       		.uleb128 0x40
 6370 013d 18       		.uleb128 0x18
 6371 013e 9642     		.uleb128 0x2116
 6372 0140 19       		.uleb128 0x19
 6373 0141 01       		.uleb128 0x1
 6374 0142 13       		.uleb128 0x13
 6375 0143 00       		.byte	0
 6376 0144 00       		.byte	0
 6377 0145 19       		.uleb128 0x19
 6378 0146 05       		.uleb128 0x5
 6379 0147 00       		.byte	0
 6380 0148 03       		.uleb128 0x3
 6381 0149 0E       		.uleb128 0xe
 6382 014a 3A       		.uleb128 0x3a
 6383 014b 0B       		.uleb128 0xb
 6384 014c 3B       		.uleb128 0x3b
 6385 014d 05       		.uleb128 0x5
 6386 014e 49       		.uleb128 0x49
 6387 014f 13       		.uleb128 0x13
 6388 0150 02       		.uleb128 0x2
 6389 0151 18       		.uleb128 0x18
 6390 0152 00       		.byte	0
 6391 0153 00       		.byte	0
 6392 0154 1A       		.uleb128 0x1a
 6393 0155 34       		.uleb128 0x34
 6394 0156 00       		.byte	0
 6395 0157 03       		.uleb128 0x3
 6396 0158 08       		.uleb128 0x8
 6397 0159 3A       		.uleb128 0x3a
 6398 015a 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 136


 6399 015b 3B       		.uleb128 0x3b
 6400 015c 05       		.uleb128 0x5
 6401 015d 49       		.uleb128 0x49
 6402 015e 13       		.uleb128 0x13
 6403 015f 02       		.uleb128 0x2
 6404 0160 18       		.uleb128 0x18
 6405 0161 00       		.byte	0
 6406 0162 00       		.byte	0
 6407 0163 1B       		.uleb128 0x1b
 6408 0164 2E       		.uleb128 0x2e
 6409 0165 00       		.byte	0
 6410 0166 3F       		.uleb128 0x3f
 6411 0167 19       		.uleb128 0x19
 6412 0168 03       		.uleb128 0x3
 6413 0169 0E       		.uleb128 0xe
 6414 016a 3A       		.uleb128 0x3a
 6415 016b 0B       		.uleb128 0xb
 6416 016c 3B       		.uleb128 0x3b
 6417 016d 05       		.uleb128 0x5
 6418 016e 11       		.uleb128 0x11
 6419 016f 01       		.uleb128 0x1
 6420 0170 12       		.uleb128 0x12
 6421 0171 06       		.uleb128 0x6
 6422 0172 40       		.uleb128 0x40
 6423 0173 18       		.uleb128 0x18
 6424 0174 9642     		.uleb128 0x2116
 6425 0176 19       		.uleb128 0x19
 6426 0177 00       		.byte	0
 6427 0178 00       		.byte	0
 6428 0179 1C       		.uleb128 0x1c
 6429 017a 34       		.uleb128 0x34
 6430 017b 00       		.byte	0
 6431 017c 03       		.uleb128 0x3
 6432 017d 0E       		.uleb128 0xe
 6433 017e 3A       		.uleb128 0x3a
 6434 017f 0B       		.uleb128 0xb
 6435 0180 3B       		.uleb128 0x3b
 6436 0181 05       		.uleb128 0x5
 6437 0182 49       		.uleb128 0x49
 6438 0183 13       		.uleb128 0x13
 6439 0184 3F       		.uleb128 0x3f
 6440 0185 19       		.uleb128 0x19
 6441 0186 3C       		.uleb128 0x3c
 6442 0187 19       		.uleb128 0x19
 6443 0188 00       		.byte	0
 6444 0189 00       		.byte	0
 6445 018a 1D       		.uleb128 0x1d
 6446 018b 34       		.uleb128 0x34
 6447 018c 00       		.byte	0
 6448 018d 03       		.uleb128 0x3
 6449 018e 0E       		.uleb128 0xe
 6450 018f 3A       		.uleb128 0x3a
 6451 0190 0B       		.uleb128 0xb
 6452 0191 3B       		.uleb128 0x3b
 6453 0192 0B       		.uleb128 0xb
 6454 0193 49       		.uleb128 0x49
 6455 0194 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 137


 6456 0195 3F       		.uleb128 0x3f
 6457 0196 19       		.uleb128 0x19
 6458 0197 02       		.uleb128 0x2
 6459 0198 18       		.uleb128 0x18
 6460 0199 00       		.byte	0
 6461 019a 00       		.byte	0
 6462 019b 1E       		.uleb128 0x1e
 6463 019c 34       		.uleb128 0x34
 6464 019d 00       		.byte	0
 6465 019e 03       		.uleb128 0x3
 6466 019f 0E       		.uleb128 0xe
 6467 01a0 3A       		.uleb128 0x3a
 6468 01a1 0B       		.uleb128 0xb
 6469 01a2 3B       		.uleb128 0x3b
 6470 01a3 0B       		.uleb128 0xb
 6471 01a4 49       		.uleb128 0x49
 6472 01a5 13       		.uleb128 0x13
 6473 01a6 3F       		.uleb128 0x3f
 6474 01a7 19       		.uleb128 0x19
 6475 01a8 3C       		.uleb128 0x3c
 6476 01a9 19       		.uleb128 0x19
 6477 01aa 00       		.byte	0
 6478 01ab 00       		.byte	0
 6479 01ac 1F       		.uleb128 0x1f
 6480 01ad 34       		.uleb128 0x34
 6481 01ae 00       		.byte	0
 6482 01af 03       		.uleb128 0x3
 6483 01b0 08       		.uleb128 0x8
 6484 01b1 3A       		.uleb128 0x3a
 6485 01b2 0B       		.uleb128 0xb
 6486 01b3 3B       		.uleb128 0x3b
 6487 01b4 0B       		.uleb128 0xb
 6488 01b5 49       		.uleb128 0x49
 6489 01b6 13       		.uleb128 0x13
 6490 01b7 3F       		.uleb128 0x3f
 6491 01b8 19       		.uleb128 0x19
 6492 01b9 3C       		.uleb128 0x3c
 6493 01ba 19       		.uleb128 0x19
 6494 01bb 00       		.byte	0
 6495 01bc 00       		.byte	0
 6496 01bd 20       		.uleb128 0x20
 6497 01be 34       		.uleb128 0x34
 6498 01bf 00       		.byte	0
 6499 01c0 03       		.uleb128 0x3
 6500 01c1 0E       		.uleb128 0xe
 6501 01c2 3A       		.uleb128 0x3a
 6502 01c3 0B       		.uleb128 0xb
 6503 01c4 3B       		.uleb128 0x3b
 6504 01c5 05       		.uleb128 0x5
 6505 01c6 49       		.uleb128 0x49
 6506 01c7 13       		.uleb128 0x13
 6507 01c8 3F       		.uleb128 0x3f
 6508 01c9 19       		.uleb128 0x19
 6509 01ca 02       		.uleb128 0x2
 6510 01cb 18       		.uleb128 0x18
 6511 01cc 00       		.byte	0
 6512 01cd 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 138


 6513 01ce 00       		.byte	0
 6514              		.section	.debug_aranges,"",%progbits
 6515 0000 84000000 		.4byte	0x84
 6516 0004 0200     		.2byte	0x2
 6517 0006 00000000 		.4byte	.Ldebug_info0
 6518 000a 04       		.byte	0x4
 6519 000b 00       		.byte	0
 6520 000c 0000     		.2byte	0
 6521 000e 0000     		.2byte	0
 6522 0010 00000000 		.4byte	.LFB64
 6523 0014 D8090000 		.4byte	.LFE64-.LFB64
 6524 0018 00000000 		.4byte	.LFB65
 6525 001c 9C000000 		.4byte	.LFE65-.LFB65
 6526 0020 00000000 		.4byte	.LFB66
 6527 0024 68010000 		.4byte	.LFE66-.LFB66
 6528 0028 00000000 		.4byte	.LFB67
 6529 002c 1C0C0000 		.4byte	.LFE67-.LFB67
 6530 0030 00000000 		.4byte	.LFB68
 6531 0034 9C000000 		.4byte	.LFE68-.LFB68
 6532 0038 00000000 		.4byte	.LFB69
 6533 003c 9C000000 		.4byte	.LFE69-.LFB69
 6534 0040 00000000 		.4byte	.LFB70
 6535 0044 4C000000 		.4byte	.LFE70-.LFB70
 6536 0048 00000000 		.4byte	.LFB71
 6537 004c 4C000000 		.4byte	.LFE71-.LFB71
 6538 0050 00000000 		.4byte	.LFB72
 6539 0054 1C000000 		.4byte	.LFE72-.LFB72
 6540 0058 00000000 		.4byte	.LFB73
 6541 005c B0000000 		.4byte	.LFE73-.LFB73
 6542 0060 00000000 		.4byte	.LFB74
 6543 0064 54010000 		.4byte	.LFE74-.LFB74
 6544 0068 00000000 		.4byte	.LFB75
 6545 006c A0000000 		.4byte	.LFE75-.LFB75
 6546 0070 00000000 		.4byte	.LFB76
 6547 0074 BC000000 		.4byte	.LFE76-.LFB76
 6548 0078 00000000 		.4byte	.LFB77
 6549 007c 34010000 		.4byte	.LFE77-.LFB77
 6550 0080 00000000 		.4byte	0
 6551 0084 00000000 		.4byte	0
 6552              		.section	.debug_ranges,"",%progbits
 6553              	.Ldebug_ranges0:
 6554 0000 00000000 		.4byte	.LFB64
 6555 0004 D8090000 		.4byte	.LFE64
 6556 0008 00000000 		.4byte	.LFB65
 6557 000c 9C000000 		.4byte	.LFE65
 6558 0010 00000000 		.4byte	.LFB66
 6559 0014 68010000 		.4byte	.LFE66
 6560 0018 00000000 		.4byte	.LFB67
 6561 001c 1C0C0000 		.4byte	.LFE67
 6562 0020 00000000 		.4byte	.LFB68
 6563 0024 9C000000 		.4byte	.LFE68
 6564 0028 00000000 		.4byte	.LFB69
 6565 002c 9C000000 		.4byte	.LFE69
 6566 0030 00000000 		.4byte	.LFB70
 6567 0034 4C000000 		.4byte	.LFE70
 6568 0038 00000000 		.4byte	.LFB71
 6569 003c 4C000000 		.4byte	.LFE71
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 139


 6570 0040 00000000 		.4byte	.LFB72
 6571 0044 1C000000 		.4byte	.LFE72
 6572 0048 00000000 		.4byte	.LFB73
 6573 004c B0000000 		.4byte	.LFE73
 6574 0050 00000000 		.4byte	.LFB74
 6575 0054 54010000 		.4byte	.LFE74
 6576 0058 00000000 		.4byte	.LFB75
 6577 005c A0000000 		.4byte	.LFE75
 6578 0060 00000000 		.4byte	.LFB76
 6579 0064 BC000000 		.4byte	.LFE76
 6580 0068 00000000 		.4byte	.LFB77
 6581 006c 34010000 		.4byte	.LFE77
 6582 0070 00000000 		.4byte	0
 6583 0074 00000000 		.4byte	0
 6584              		.section	.debug_line,"",%progbits
 6585              	.Ldebug_line0:
 6586 0000 35060000 		.section	.debug_str,"MS",%progbits,1
 6586      02008401 
 6586      00000201 
 6586      FB0E0D00 
 6586      01010101 
 6587              	.LASF72:
 6588 0000 64697265 		.ascii	"direction\000"
 6588      6374696F 
 6588      6E00
 6589              	.LASF46:
 6590 000a 6C617374 		.ascii	"last\000"
 6590      00
 6591              	.LASF104:
 6592 000f 6D616372 		.ascii	"macroCheck\000"
 6592      6F436865 
 6592      636B00
 6593              	.LASF89:
 6594 001a 6D656E75 		.ascii	"menuAction\000"
 6594      41637469 
 6594      6F6E00
 6595              	.LASF131:
 6596 0025 70726576 		.ascii	"prevOctave\000"
 6596      4F637461 
 6596      766500
 6597              	.LASF88:
 6598 0030 74656D70 		.ascii	"tempByte\000"
 6598      42797465 
 6598      00
 6599              	.LASF48:
 6600 0039 47465866 		.ascii	"GFXfont\000"
 6600      6F6E7400 
 6601              	.LASF143:
 6602 0041 65646974 		.ascii	"editUp\000"
 6602      557000
 6603              	.LASF100:
 6604 0048 656E7465 		.ascii	"enterEditModeMenu\000"
 6604      72456469 
 6604      744D6F64 
 6604      654D656E 
 6604      7500
 6605              	.LASF130:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 140


 6606 005a 7472616E 		.ascii	"transposeFloat\000"
 6606      73706F73 
 6606      65466C6F 
 6606      617400
 6607              	.LASF91:
 6608 0069 74656D70 		.ascii	"tempPos\000"
 6608      506F7300 
 6609              	.LASF77:
 6610 0071 74656D70 		.ascii	"tempButtons\000"
 6610      42757474 
 6610      6F6E7300 
 6611              	.LASF94:
 6612 007d 646F776E 		.ascii	"downPressed\000"
 6612      50726573 
 6612      73656400 
 6613              	.LASF122:
 6614 0089 6C657665 		.ascii	"leverCalibrationMode\000"
 6614      7243616C 
 6614      69627261 
 6614      74696F6E 
 6614      4D6F6465 
 6615              	.LASF13:
 6616 009e 756E7369 		.ascii	"unsigned int\000"
 6616      676E6564 
 6616      20696E74 
 6616      00
 6617              	.LASF134:
 6618 00ab 73747269 		.ascii	"stringRepresentation\000"
 6618      6E675265 
 6618      70726573 
 6618      656E7461 
 6618      74696F6E 
 6619              	.LASF59:
 6620 00c0 77726170 		.ascii	"wrap\000"
 6620      00
 6621              	.LASF8:
 6622 00c5 5F5F696E 		.ascii	"__int32_t\000"
 6622      7433325F 
 6622      7400
 6623              	.LASF149:
 6624 00cf 62757474 		.ascii	"button3Up\000"
 6624      6F6E3355 
 6624      7000
 6625              	.LASF114:
 6626 00d9 65646974 		.ascii	"editMode\000"
 6626      4D6F6465 
 6626      00
 6627              	.LASF162:
 6628 00e2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6628      43313120 
 6628      352E342E 
 6628      31203230 
 6628      31363036 
 6629 0115 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 6629      20726576 
 6629      6973696F 
 6629      6E203233 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 141


 6629      37373135 
 6630 0148 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6630      66756E63 
 6630      74696F6E 
 6630      2D736563 
 6630      74696F6E 
 6631              	.LASF117:
 6632 0170 70726573 		.ascii	"presetNamesArray\000"
 6632      65744E61 
 6632      6D657341 
 6632      72726179 
 6632      00
 6633              	.LASF158:
 6634 0181 6E756D43 		.ascii	"numCalibrationItems\000"
 6634      616C6962 
 6634      72617469 
 6634      6F6E4974 
 6634      656D7300 
 6635              	.LASF99:
 6636 0195 70656461 		.ascii	"pedal_inverted_byte\000"
 6636      6C5F696E 
 6636      76657274 
 6636      65645F62 
 6636      79746500 
 6637              	.LASF76:
 6638 01a9 456E7465 		.ascii	"Enter\000"
 6638      7200
 6639              	.LASF60:
 6640 01af 5F637034 		.ascii	"_cp437\000"
 6640      333700
 6641              	.LASF112:
 6642 01b6 6E65636B 		.ascii	"neckByte\000"
 6642      42797465 
 6642      00
 6643              	.LASF139:
 6644 01bf 70726576 		.ascii	"prevEncoderVal\000"
 6644      456E636F 
 6644      64657256 
 6644      616C00
 6645              	.LASF154:
 6646 01ce 63616C69 		.ascii	"calibrationNames\000"
 6646      62726174 
 6646      696F6E4E 
 6646      616D6573 
 6646      00
 6647              	.LASF109:
 6648 01df 63757272 		.ascii	"currentCopedent\000"
 6648      656E7443 
 6648      6F706564 
 6648      656E7400 
 6649              	.LASF53:
 6650 01ef 726F7461 		.ascii	"rotation\000"
 6650      74696F6E 
 6650      00
 6651              	.LASF27:
 6652 01f8 53657474 		.ascii	"SettingsMenu\000"
 6652      696E6773 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 142


 6652      4D656E75 
 6652      00
 6653              	.LASF50:
 6654 0205 48454947 		.ascii	"HEIGHT\000"
 6654      485400
 6655              	.LASF14:
 6656 020c 696E7438 		.ascii	"int8_t\000"
 6656      5F7400
 6657              	.LASF165:
 6658 0213 5F474658 		.ascii	"_GFX\000"
 6658      00
 6659              	.LASF20:
 6660 0218 666C6F61 		.ascii	"float\000"
 6660      7400
 6661              	.LASF55:
 6662 021e 63757273 		.ascii	"cursor_x\000"
 6662      6F725F78 
 6662      00
 6663              	.LASF54:
 6664 0227 63757273 		.ascii	"cursor_y\000"
 6664      6F725F79 
 6664      00
 6665              	.LASF82:
 6666 0230 64656164 		.ascii	"deadZoneTemp\000"
 6666      5A6F6E65 
 6666      54656D70 
 6666      00
 6667              	.LASF56:
 6668 023d 74657874 		.ascii	"textsize\000"
 6668      73697A65 
 6668      00
 6669              	.LASF16:
 6670 0246 696E7431 		.ascii	"int16_t\000"
 6670      365F7400 
 6671              	.LASF12:
 6672 024e 6C6F6E67 		.ascii	"long long unsigned int\000"
 6672      206C6F6E 
 6672      6720756E 
 6672      7369676E 
 6672      65642069 
 6673              	.LASF133:
 6674 0265 64656164 		.ascii	"deadZone\000"
 6674      5A6F6E65 
 6674      00
 6675              	.LASF159:
 6676 026e 6E756D53 		.ascii	"numSettingsItems\000"
 6676      65747469 
 6676      6E677349 
 6676      74656D73 
 6676      00
 6677              	.LASF47:
 6678 027f 79416476 		.ascii	"yAdvance\000"
 6678      616E6365 
 6678      00
 6679              	.LASF6:
 6680 0288 5F5F7569 		.ascii	"__uint16_t\000"
 6680      6E743136 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 143


 6680      5F7400
 6681              	.LASF111:
 6682 0293 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 6682      6F4F4C45 
 6682      44576169 
 6682      74696E67 
 6682      546F5365 
 6683              	.LASF135:
 6684 02aa 6F637461 		.ascii	"octaveAction\000"
 6684      76654163 
 6684      74696F6E 
 6684      00
 6685              	.LASF142:
 6686 02b7 73656D69 		.ascii	"semitonesOrCents\000"
 6686      746F6E65 
 6686      734F7243 
 6686      656E7473 
 6686      00
 6687              	.LASF73:
 6688 02c8 4C656674 		.ascii	"Left\000"
 6688      00
 6689              	.LASF113:
 6690 02cd 6E65636B 		.ascii	"necks\000"
 6690      7300
 6691              	.LASF115:
 6692 02d3 6D616372 		.ascii	"macroNamesArray\000"
 6692      6F4E616D 
 6692      65734172 
 6692      72617900 
 6693              	.LASF65:
 6694 02e3 5F4D656E 		.ascii	"_MenuModes\000"
 6694      754D6F64 
 6694      657300
 6695              	.LASF66:
 6696 02ee 5F4F4C45 		.ascii	"_OLEDLine\000"
 6696      444C696E 
 6696      6500
 6697              	.LASF49:
 6698 02f8 57494454 		.ascii	"WIDTH\000"
 6698      4800
 6699              	.LASF90:
 6700 02fe 77686174 		.ascii	"whatToDraw\000"
 6700      546F4472 
 6700      617700
 6701              	.LASF102:
 6702 0309 65786974 		.ascii	"exitFretCalibrationMode\000"
 6702      46726574 
 6702      43616C69 
 6702      62726174 
 6702      696F6E4D 
 6703              	.LASF118:
 6704 0321 636F7065 		.ascii	"copedentNamesArray\000"
 6704      64656E74 
 6704      4E616D65 
 6704      73417272 
 6704      617900
 6705              	.LASF36:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 144


 6706 0334 6269746D 		.ascii	"bitmapOffset\000"
 6706      61704F66 
 6706      66736574 
 6706      00
 6707              	.LASF37:
 6708 0341 77696474 		.ascii	"width\000"
 6708      6800
 6709              	.LASF95:
 6710 0347 75705072 		.ascii	"upPressed\000"
 6710      65737365 
 6710      6400
 6711              	.LASF68:
 6712 0351 5365636F 		.ascii	"SecondLine\000"
 6712      6E644C69 
 6712      6E6500
 6713              	.LASF138:
 6714 035c 74686547 		.ascii	"theGFX\000"
 6714      465800
 6715              	.LASF81:
 6716 0363 63757272 		.ascii	"currentChar\000"
 6716      656E7443 
 6716      68617200 
 6717              	.LASF145:
 6718 036f 6F637434 		.ascii	"oct4Up\000"
 6718      557000
 6719              	.LASF153:
 6720 0376 77686963 		.ascii	"whichMidiSendSelected\000"
 6720      684D6964 
 6720      6953656E 
 6720      6453656C 
 6720      65637465 
 6721              	.LASF22:
 6722 038c 63686172 		.ascii	"char\000"
 6722      00
 6723              	.LASF128:
 6724 0391 7472616E 		.ascii	"transposeSemitones\000"
 6724      73706F73 
 6724      6553656D 
 6724      69746F6E 
 6724      657300
 6725              	.LASF42:
 6726 03a4 47465867 		.ascii	"GFXglyph\000"
 6726      6C797068 
 6726      00
 6727              	.LASF160:
 6728 03ad 66726574 		.ascii	"fretToCalibrate\000"
 6728      546F4361 
 6728      6C696272 
 6728      61746500 
 6729              	.LASF125:
 6730 03bd 70656461 		.ascii	"pedals_high\000"
 6730      6C735F68 
 6730      69676800 
 6731              	.LASF147:
 6732 03c9 62757474 		.ascii	"button1Up\000"
 6732      6F6E3155 
 6732      7000
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 145


 6733              	.LASF69:
 6734 03d3 54686972 		.ascii	"ThirdLine\000"
 6734      644C696E 
 6734      6500
 6735              	.LASF15:
 6736 03dd 75696E74 		.ascii	"uint8_t\000"
 6736      385F7400 
 6737              	.LASF41:
 6738 03e5 794F6666 		.ascii	"yOffset\000"
 6738      73657400 
 6739              	.LASF51:
 6740 03ed 5F776964 		.ascii	"_width\000"
 6740      746800
 6741              	.LASF124:
 6742 03f4 70656461 		.ascii	"pedals_low\000"
 6742      6C735F6C 
 6742      6F7700
 6743              	.LASF123:
 6744 03ff 66726574 		.ascii	"fretMeasurements\000"
 6744      4D656173 
 6744      7572656D 
 6744      656E7473 
 6744      00
 6745              	.LASF11:
 6746 0410 6C6F6E67 		.ascii	"long long int\000"
 6746      206C6F6E 
 6746      6720696E 
 6746      7400
 6747              	.LASF63:
 6748 041e 666F6E74 		.ascii	"fontDesc\000"
 6748      44657363 
 6748      00
 6749              	.LASF106:
 6750 0427 4465636F 		.ascii	"Decoder_1_Enabled\000"
 6750      6465725F 
 6750      315F456E 
 6750      61626C65 
 6750      6400
 6751              	.LASF93:
 6752 0439 72696768 		.ascii	"rightPressed\000"
 6752      74507265 
 6752      73736564 
 6752      00
 6753              	.LASF92:
 6754 0446 6C656674 		.ascii	"leftPressed\000"
 6754      50726573 
 6754      73656400 
 6755              	.LASF70:
 6756 0452 466F7572 		.ascii	"FourthLine\000"
 6756      74684C69 
 6756      6E6500
 6757              	.LASF164:
 6758 045d 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 6758      73657273 
 6758      5C4A6566 
 6758      66536E79 
 6758      6465725C 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 146


 6759 048b 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 6759      355F656C 
 6759      65637472 
 6759      6F737465 
 6759      656C5F73 
 6760 04bd 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 6760      5F50534F 
 6760      43335F35 
 6760      5F546865 
 6760      726D6973 
 6761              	.LASF4:
 6762 04db 5F5F696E 		.ascii	"__int16_t\000"
 6762      7431365F 
 6762      7400
 6763              	.LASF25:
 6764 04e5 4D61696E 		.ascii	"MainMenu\000"
 6764      4D656E75 
 6764      00
 6765              	.LASF52:
 6766 04ee 5F686569 		.ascii	"_height\000"
 6766      67687400 
 6767              	.LASF96:
 6768 04f6 656E7465 		.ascii	"enterPressed\000"
 6768      72507265 
 6768      73736564 
 6768      00
 6769              	.LASF87:
 6770 0503 65786974 		.ascii	"exitEditModeMenu\000"
 6770      45646974 
 6770      4D6F6465 
 6770      4D656E75 
 6770      00
 6771              	.LASF84:
 6772 0514 736C6964 		.ascii	"sliderTemp\000"
 6772      65725465 
 6772      6D7000
 6773              	.LASF132:
 6774 051f 6475616C 		.ascii	"dualSlider\000"
 6774      536C6964 
 6774      657200
 6775              	.LASF141:
 6776 052a 6D656E75 		.ascii	"menuPosition\000"
 6776      506F7369 
 6776      74696F6E 
 6776      00
 6777              	.LASF151:
 6778 0537 73686966 		.ascii	"shiftUp\000"
 6778      74557000 
 6779              	.LASF136:
 6780 053f 6D696469 		.ascii	"midiSendOn\000"
 6780      53656E64 
 6780      4F6E00
 6781              	.LASF38:
 6782 054a 68656967 		.ascii	"height\000"
 6782      687400
 6783              	.LASF83:
 6784 0551 64656164 		.ascii	"deadZoneRepresentation\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 147


 6784      5A6F6E65 
 6784      52657072 
 6784      6573656E 
 6784      74617469 
 6785              	.LASF120:
 6786 0568 77686963 		.ascii	"whichMacro\000"
 6786      684D6163 
 6786      726F00
 6787              	.LASF152:
 6788 0573 65646974 		.ascii	"editingSliderRepString\000"
 6788      696E6753 
 6788      6C696465 
 6788      72526570 
 6788      53747269 
 6789              	.LASF79:
 6790 058a 7468654D 		.ascii	"theMultiplier\000"
 6790      756C7469 
 6790      706C6965 
 6790      7200
 6791              	.LASF0:
 6792 0598 5F5F696E 		.ascii	"__int8_t\000"
 6792      74385F74 
 6792      00
 6793              	.LASF101:
 6794 05a1 656E7465 		.ascii	"enterFretCalibrationMode\000"
 6794      72467265 
 6794      7443616C 
 6794      69627261 
 6794      74696F6E 
 6795              	.LASF23:
 6796 05ba 6C6F6E67 		.ascii	"long double\000"
 6796      20646F75 
 6796      626C6500 
 6797              	.LASF98:
 6798 05c6 65786974 		.ascii	"exitLeverCalibrationMode\000"
 6798      4C657665 
 6798      7243616C 
 6798      69627261 
 6798      74696F6E 
 6799              	.LASF17:
 6800 05df 75696E74 		.ascii	"uint16_t\000"
 6800      31365F74 
 6800      00
 6801              	.LASF150:
 6802 05e8 62757474 		.ascii	"button4Up\000"
 6802      6F6E3455 
 6802      7000
 6803              	.LASF146:
 6804 05f2 656E636F 		.ascii	"encoderUp\000"
 6804      64657255 
 6804      7000
 6805              	.LASF26:
 6806 05fc 43616C69 		.ascii	"CalibrationMenu\000"
 6806      62726174 
 6806      696F6E4D 
 6806      656E7500 
 6807              	.LASF78:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 148


 6808 060c 63757272 		.ascii	"currentEncoderVal\000"
 6808      656E7445 
 6808      6E636F64 
 6808      65725661 
 6808      6C00
 6809              	.LASF127:
 6810 061e 616E676C 		.ascii	"angle\000"
 6810      6500
 6811              	.LASF5:
 6812 0624 73686F72 		.ascii	"short int\000"
 6812      7420696E 
 6812      7400
 6813              	.LASF119:
 6814 062e 70726573 		.ascii	"presetAlreadyDisplayed\000"
 6814      6574416C 
 6814      72656164 
 6814      79446973 
 6814      706C6179 
 6815              	.LASF108:
 6816 0645 63757272 		.ascii	"currentNeck\000"
 6816      656E744E 
 6816      65636B00 
 6817              	.LASF9:
 6818 0651 6C6F6E67 		.ascii	"long int\000"
 6818      20696E74 
 6818      00
 6819              	.LASF116:
 6820 065a 70617463 		.ascii	"patchNum\000"
 6820      684E756D 
 6820      00
 6821              	.LASF105:
 6822 0663 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6822      52784275 
 6822      66666572 
 6822      00
 6823              	.LASF71:
 6824 0670 4E696C4C 		.ascii	"NilLine\000"
 6824      696E6500 
 6825              	.LASF35:
 6826 0678 4E696C4D 		.ascii	"NilMenu\000"
 6826      656E7500 
 6827              	.LASF62:
 6828 0680 666F6E74 		.ascii	"fontHeight\000"
 6828      48656967 
 6828      687400
 6829              	.LASF126:
 6830 068b 70656461 		.ascii	"pedal_inverted\000"
 6830      6C5F696E 
 6830      76657274 
 6830      656400
 6831              	.LASF166:
 6832 069a 61637469 		.ascii	"action\000"
 6832      6F6E00
 6833              	.LASF163:
 6834 06a1 75692E63 		.ascii	"ui.c\000"
 6834      00
 6835              	.LASF80:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 149


 6836 06a6 61627354 		.ascii	"absTransposeFloat\000"
 6836      72616E73 
 6836      706F7365 
 6836      466C6F61 
 6836      7400
 6837              	.LASF75:
 6838 06b8 446F776E 		.ascii	"Down\000"
 6838      00
 6839              	.LASF74:
 6840 06bd 52696768 		.ascii	"Right\000"
 6840      7400
 6841              	.LASF1:
 6842 06c3 5F5F7569 		.ascii	"__uint8_t\000"
 6842      6E74385F 
 6842      7400
 6843              	.LASF61:
 6844 06cd 67667846 		.ascii	"gfxFont\000"
 6844      6F6E7400 
 6845              	.LASF24:
 6846 06d5 73697A65 		.ascii	"sizetype\000"
 6846      74797065 
 6846      00
 6847              	.LASF97:
 6848 06de 656E7465 		.ascii	"enterLeverCalibrationMode\000"
 6848      724C6576 
 6848      65724361 
 6848      6C696272 
 6848      6174696F 
 6849              	.LASF10:
 6850 06f8 6C6F6E67 		.ascii	"long unsigned int\000"
 6850      20756E73 
 6850      69676E65 
 6850      6420696E 
 6850      7400
 6851              	.LASF29:
 6852 070a 43616C69 		.ascii	"CalibrateFretsMenu\000"
 6852      62726174 
 6852      65467265 
 6852      74734D65 
 6852      6E7500
 6853              	.LASF110:
 6854 071d 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 6854      4F4C4544 
 6854      57616974 
 6854      696E6754 
 6854      6F53656E 
 6855              	.LASF155:
 6856 0733 6D61696E 		.ascii	"mainMenuNames\000"
 6856      4D656E75 
 6856      4E616D65 
 6856      7300
 6857              	.LASF18:
 6858 0741 696E7433 		.ascii	"int32_t\000"
 6858      325F7400 
 6859              	.LASF28:
 6860 0749 43616C69 		.ascii	"CalibrateLeversMenu\000"
 6860      62726174 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 150


 6860      654C6576 
 6860      6572734D 
 6860      656E7500 
 6861              	.LASF44:
 6862 075d 676C7970 		.ascii	"glyph\000"
 6862      6800
 6863              	.LASF140:
 6864 0763 656E636F 		.ascii	"encoderWatch\000"
 6864      64657257 
 6864      61746368 
 6864      00
 6865              	.LASF137:
 6866 0770 6D696469 		.ascii	"midiBarSendOn\000"
 6866      42617253 
 6866      656E644F 
 6866      6E00
 6867              	.LASF3:
 6868 077e 756E7369 		.ascii	"unsigned char\000"
 6868      676E6564 
 6868      20636861 
 6868      7200
 6869              	.LASF43:
 6870 078c 6269746D 		.ascii	"bitmap\000"
 6870      617000
 6871              	.LASF67:
 6872 0793 46697273 		.ascii	"FirstLine\000"
 6872      744C696E 
 6872      6500
 6873              	.LASF85:
 6874 079d 736C6964 		.ascii	"sliderRepDisplay\000"
 6874      65725265 
 6874      70446973 
 6874      706C6179 
 6874      00
 6875              	.LASF148:
 6876 07ae 62757474 		.ascii	"button2Up\000"
 6876      6F6E3255 
 6876      7000
 6877              	.LASF33:
 6878 07b8 536C6964 		.ascii	"SliderRepMenu\000"
 6878      65725265 
 6878      704D656E 
 6878      7500
 6879              	.LASF31:
 6880 07c6 4F637461 		.ascii	"OctaveActionMenu\000"
 6880      76654163 
 6880      74696F6E 
 6880      4D656E75 
 6880      00
 6881              	.LASF45:
 6882 07d7 66697273 		.ascii	"first\000"
 6882      7400
 6883              	.LASF86:
 6884 07dd 7363616E 		.ascii	"scanUI\000"
 6884      554900
 6885              	.LASF156:
 6886 07e4 73657474 		.ascii	"settingsNames\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 151


 6886      696E6773 
 6886      4E616D65 
 6886      7300
 6887              	.LASF144:
 6888 07f2 6F637431 		.ascii	"oct1Up\000"
 6888      557000
 6889              	.LASF39:
 6890 07f9 78416476 		.ascii	"xAdvance\000"
 6890      616E6365 
 6890      00
 6891              	.LASF161:
 6892 0802 77686963 		.ascii	"whichFretArray\000"
 6892      68467265 
 6892      74417272 
 6892      617900
 6893              	.LASF32:
 6894 0811 44656164 		.ascii	"DeadzonesMenu\000"
 6894      7A6F6E65 
 6894      734D656E 
 6894      7500
 6895              	.LASF40:
 6896 081f 784F6666 		.ascii	"xOffset\000"
 6896      73657400 
 6897              	.LASF129:
 6898 0827 7472616E 		.ascii	"transposeCents\000"
 6898      73706F73 
 6898      6543656E 
 6898      747300
 6899              	.LASF34:
 6900 0836 4D696469 		.ascii	"MidiSendMenu\000"
 6900      53656E64 
 6900      4D656E75 
 6900      00
 6901              	.LASF64:
 6902 0843 6175746F 		.ascii	"autoscroll\000"
 6902      7363726F 
 6902      6C6C00
 6903              	.LASF157:
 6904 084e 6E756D4D 		.ascii	"numMainMenuItems\000"
 6904      61696E4D 
 6904      656E7549 
 6904      74656D73 
 6904      00
 6905              	.LASF2:
 6906 085f 7369676E 		.ascii	"signed char\000"
 6906      65642063 
 6906      68617200 
 6907              	.LASF7:
 6908 086b 73686F72 		.ascii	"short unsigned int\000"
 6908      7420756E 
 6908      7369676E 
 6908      65642069 
 6908      6E7400
 6909              	.LASF30:
 6910 087e 5472616E 		.ascii	"TransposeMenu\000"
 6910      73706F73 
 6910      654D656E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccUVcu4k.s 			page 152


 6910      7500
 6911              	.LASF19:
 6912 088c 75696E74 		.ascii	"uint8\000"
 6912      3800
 6913              	.LASF21:
 6914 0892 646F7562 		.ascii	"double\000"
 6914      6C6500
 6915              	.LASF57:
 6916 0899 74657874 		.ascii	"textcolor\000"
 6916      636F6C6F 
 6916      7200
 6917              	.LASF107:
 6918 08a3 6F637461 		.ascii	"octave\000"
 6918      766500
 6919              	.LASF121:
 6920 08aa 66726574 		.ascii	"fretCalibrationMode\000"
 6920      43616C69 
 6920      62726174 
 6920      696F6E4D 
 6920      6F646500 
 6921              	.LASF58:
 6922 08be 74657874 		.ascii	"textbgcolor\000"
 6922      6267636F 
 6922      6C6F7200 
 6923              	.LASF103:
 6924 08ca 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 6924      6C617943 
 6924      75727265 
 6924      6E745072 
 6924      65736574 
 6925              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
