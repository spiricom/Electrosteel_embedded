ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ui.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.global	prevEncoderVal
  21              		.bss
  22              		.type	prevEncoderVal, %object
  23              		.size	prevEncoderVal, 1
  24              	prevEncoderVal:
  25 0000 00       		.space	1
  26              		.global	encoderWatch
  27              		.type	encoderWatch, %object
  28              		.size	encoderWatch, 1
  29              	encoderWatch:
  30 0001 00       		.space	1
  31              		.comm	menuPosition,6,4
  32              		.global	semitonesOrCents
  33              		.type	semitonesOrCents, %object
  34              		.size	semitonesOrCents, 1
  35              	semitonesOrCents:
  36 0002 00       		.space	1
  37              		.global	editUp
  38              		.data
  39              		.type	editUp, %object
  40              		.size	editUp, 1
  41              	editUp:
  42 0000 01       		.byte	1
  43              		.global	oct1Up
  44              		.type	oct1Up, %object
  45              		.size	oct1Up, 1
  46              	oct1Up:
  47 0001 01       		.byte	1
  48              		.global	oct4Up
  49              		.type	oct4Up, %object
  50              		.size	oct4Up, 1
  51              	oct4Up:
  52 0002 01       		.byte	1
  53              		.global	encoderUp
  54              		.type	encoderUp, %object
  55              		.size	encoderUp, 1
  56              	encoderUp:
  57 0003 01       		.byte	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 2


  58              		.global	button1Up
  59              		.type	button1Up, %object
  60              		.size	button1Up, 1
  61              	button1Up:
  62 0004 01       		.byte	1
  63              		.global	button2Up
  64              		.type	button2Up, %object
  65              		.size	button2Up, 1
  66              	button2Up:
  67 0005 01       		.byte	1
  68              		.global	button3Up
  69              		.type	button3Up, %object
  70              		.size	button3Up, 1
  71              	button3Up:
  72 0006 01       		.byte	1
  73              		.global	button4Up
  74              		.type	button4Up, %object
  75              		.size	button4Up, 1
  76              	button4Up:
  77 0007 01       		.byte	1
  78              		.global	shiftUp
  79              		.type	shiftUp, %object
  80              		.size	shiftUp, 1
  81              	shiftUp:
  82 0008 01       		.byte	1
  83              		.global	editingSliderRepString
  84              		.bss
  85              		.type	editingSliderRepString, %object
  86              		.size	editingSliderRepString, 1
  87              	editingSliderRepString:
  88 0003 00       		.space	1
  89              		.global	whichMidiSendSelected
  90              		.type	whichMidiSendSelected, %object
  91              		.size	whichMidiSendSelected, 1
  92              	whichMidiSendSelected:
  93 0004 00       		.space	1
  94              		.global	whichFirmwareUpdateSelected
  95              		.type	whichFirmwareUpdateSelected, %object
  96              		.size	whichFirmwareUpdateSelected, 1
  97              	whichFirmwareUpdateSelected:
  98 0005 00       		.space	1
  99              		.global	controlsDisplayed
 100              		.type	controlsDisplayed, %object
 101              		.size	controlsDisplayed, 1
 102              	controlsDisplayed:
 103 0006 00       		.space	1
 104              		.global	presetStoreStage
 105              		.type	presetStoreStage, %object
 106              		.size	presetStoreStage, 1
 107              	presetStoreStage:
 108 0007 00       		.space	1
 109              		.global	whichMacroPageIsActive
 110              		.type	whichMacroPageIsActive, %object
 111              		.size	whichMacroPageIsActive, 1
 112              	whichMacroPageIsActive:
 113 0008 00       		.space	1
 114              		.global	newPresetName
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 3


 115              		.data
 116 0009 000000   		.align	2
 117              		.type	newPresetName, %object
 118              		.size	newPresetName, 14
 119              	newPresetName:
 120 000c 41       		.byte	65
 121 000d 20       		.byte	32
 122 000e 20       		.byte	32
 123 000f 20       		.byte	32
 124 0010 20       		.byte	32
 125 0011 20       		.byte	32
 126 0012 20       		.byte	32
 127 0013 20       		.byte	32
 128 0014 20       		.byte	32
 129 0015 20       		.byte	32
 130 0016 20       		.byte	32
 131 0017 20       		.byte	32
 132 0018 20       		.byte	32
 133 0019 20       		.byte	32
 134              		.global	__aeabi_i2f
 135              		.global	__aeabi_fmul
 136              		.global	__aeabi_fsub
 137              		.global	__aeabi_fcmplt
 138              		.global	__aeabi_fcmpgt
 139              		.global	__aeabi_f2uiz
 140              		.global	__aeabi_i2d
 141              		.global	__aeabi_dcmplt
 142              		.global	__aeabi_dcmpgt
 143              		.global	__aeabi_ui2f
 144              		.section	.rodata
 145              		.align	2
 146              	.LC0:
 147 0000 53313D00 		.ascii	"S1=\000"
 148              		.section	.text.scanUI,"ax",%progbits
 149              		.align	2
 150              		.global	scanUI
 151              		.thumb
 152              		.thumb_func
 153              		.type	scanUI, %function
 154              	scanUI:
 155              	.LFB64:
 156              		.file 1 "ui.c"
   1:ui.c          **** /* ========================================
   2:ui.c          ****  *
   3:ui.c          ****  * Copyright YOUR COMPANY, THE YEAR
   4:ui.c          ****  * All Rights Reserved
   5:ui.c          ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:ui.c          ****  *
   7:ui.c          ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:ui.c          ****  * WHICH IS THE PROPERTY OF your company.
   9:ui.c          ****  *
  10:ui.c          ****  * ========================================
  11:ui.c          **** */
  12:ui.c          **** 
  13:ui.c          **** #include "main.h"
  14:ui.c          **** #include "ui.h"
  15:ui.c          **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 4


  16:ui.c          **** int8_t prevEncoderVal = 0;
  17:ui.c          **** uint8_t encoderWatch = 0;
  18:ui.c          **** //signed so that we can check if it goes below zero
  19:ui.c          **** int8_t menuPosition[3][2];
  20:ui.c          **** enum direction{Left, Right, Down, Up, Enter};
  21:ui.c          **** uint8_t semitonesOrCents = 0;
  22:ui.c          **** uint8_t editUp = 1;
  23:ui.c          **** uint8_t oct1Up = 1;
  24:ui.c          **** uint8_t oct4Up = 1;
  25:ui.c          **** uint8_t encoderUp = 1;
  26:ui.c          **** uint8_t button1Up = 1;
  27:ui.c          **** uint8_t button2Up = 1;
  28:ui.c          **** uint8_t button3Up = 1;
  29:ui.c          **** uint8_t button4Up = 1;
  30:ui.c          **** uint8_t shiftUp = 1;
  31:ui.c          **** uint8_t editingSliderRepString = 0;
  32:ui.c          **** uint8_t whichMidiSendSelected = 0;
  33:ui.c          **** uint8_t whichFirmwareUpdateSelected = 0;
  34:ui.c          **** uint8_t controlsDisplayed = 0;
  35:ui.c          **** 
  36:ui.c          **** uint8_t presetStoreStage = 0;
  37:ui.c          **** 
  38:ui.c          **** uint8_t whichMacroPageIsActive = 0;
  39:ui.c          **** 
  40:ui.c          **** char newPresetName[14] = {'A',32,32,32,32,32,32,32,32,32,32,32,32,32};
  41:ui.c          **** 
  42:ui.c          **** void scanUI(void)
  43:ui.c          **** {
 157              		.loc 1 43 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 48
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 B0B5     		push	{r4, r5, r7, lr}
 162              		.cfi_def_cfa_offset 16
 163              		.cfi_offset 4, -16
 164              		.cfi_offset 5, -12
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 8EB0     		sub	sp, sp, #56
 168              		.cfi_def_cfa_offset 72
 169 0004 02AF     		add	r7, sp, #8
 170              		.cfi_def_cfa 7, 64
  44:ui.c          ****     if (!knobPanelButton1_Read())
 171              		.loc 1 44 0
 172 0006 FFF7FEFF 		bl	knobPanelButton1_Read
 173 000a 0346     		mov	r3, r0
 174 000c 002B     		cmp	r3, #0
 175 000e 29D1     		bne	.L2
  45:ui.c          ****     {
  46:ui.c          ****         if (knobPanelLightActive)
 176              		.loc 1 46 0
 177 0010 9A4B     		ldr	r3, .L78
 178 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 179 0014 002B     		cmp	r3, #0
 180 0016 25D0     		beq	.L2
  47:ui.c          ****         {
  48:ui.c          ****             knobPanelLight1_Write(1);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 5


 181              		.loc 1 48 0
 182 0018 0120     		movs	r0, #1
 183 001a FFF7FEFF 		bl	knobPanelLight1_Write
  49:ui.c          ****             knobPanelLight2_Write(0);
 184              		.loc 1 49 0
 185 001e 0020     		movs	r0, #0
 186 0020 FFF7FEFF 		bl	knobPanelLight2_Write
  50:ui.c          ****             whichMacroPageIsActive = 0;
 187              		.loc 1 50 0
 188 0024 964B     		ldr	r3, .L78+4
 189 0026 0022     		movs	r2, #0
 190 0028 1A70     		strb	r2, [r3]
  51:ui.c          ****             macroOLEDWaitingToSend = 1;
 191              		.loc 1 51 0
 192 002a 964B     		ldr	r3, .L78+8
 193 002c 0122     		movs	r2, #1
 194 002e 1A70     		strb	r2, [r3]
 195              	.LBB2:
  52:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 196              		.loc 1 52 0
 197 0030 0023     		movs	r3, #0
 198 0032 FB62     		str	r3, [r7, #44]
 199 0034 10E0     		b	.L3
 200              	.L4:
  53:ui.c          ****             {
  54:ui.c          ****                 knobFrozen[i] = 1;
 201              		.loc 1 54 0 discriminator 3
 202 0036 944A     		ldr	r2, .L78+12
 203 0038 FB6A     		ldr	r3, [r7, #44]
 204 003a 1344     		add	r3, r3, r2
 205 003c 0122     		movs	r2, #1
 206 003e 1A70     		strb	r2, [r3]
  55:ui.c          ****                 prevMacroKnobValues[i] = prevMacroKnobValues[i+8];
 207              		.loc 1 55 0 discriminator 3
 208 0040 FB6A     		ldr	r3, [r7, #44]
 209 0042 0833     		adds	r3, r3, #8
 210 0044 914A     		ldr	r2, .L78+16
 211 0046 32F91310 		ldrsh	r1, [r2, r3, lsl #1]
 212 004a 904A     		ldr	r2, .L78+16
 213 004c FB6A     		ldr	r3, [r7, #44]
 214 004e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  52:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 215              		.loc 1 52 0 discriminator 3
 216 0052 FB6A     		ldr	r3, [r7, #44]
 217 0054 0133     		adds	r3, r3, #1
 218 0056 FB62     		str	r3, [r7, #44]
 219              	.L3:
  52:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 220              		.loc 1 52 0 is_stmt 0 discriminator 1
 221 0058 FB6A     		ldr	r3, [r7, #44]
 222 005a 072B     		cmp	r3, #7
 223 005c EBDD     		ble	.L4
 224              	.LBE2:
  56:ui.c          ****             }
  57:ui.c          ****             whichMacro = 0;
 225              		.loc 1 57 0 is_stmt 1
 226 005e 8C4B     		ldr	r3, .L78+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 6


 227 0060 0022     		movs	r2, #0
 228 0062 1A70     		strb	r2, [r3]
 229              	.L2:
  58:ui.c          ****         }
  59:ui.c          ****         
  60:ui.c          ****     }
  61:ui.c          ****     if (!knobPanelButton2_Read())
 230              		.loc 1 61 0
 231 0064 FFF7FEFF 		bl	knobPanelButton2_Read
 232 0068 0346     		mov	r3, r0
 233 006a 002B     		cmp	r3, #0
 234 006c 29D1     		bne	.L5
  62:ui.c          ****     {
  63:ui.c          ****         if (knobPanelLightActive)
 235              		.loc 1 63 0
 236 006e 834B     		ldr	r3, .L78
 237 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 238 0072 002B     		cmp	r3, #0
 239 0074 25D0     		beq	.L5
  64:ui.c          ****         {
  65:ui.c          ****             knobPanelLight1_Write(0);
 240              		.loc 1 65 0
 241 0076 0020     		movs	r0, #0
 242 0078 FFF7FEFF 		bl	knobPanelLight1_Write
  66:ui.c          ****             knobPanelLight2_Write(1);
 243              		.loc 1 66 0
 244 007c 0120     		movs	r0, #1
 245 007e FFF7FEFF 		bl	knobPanelLight2_Write
  67:ui.c          ****             whichMacroPageIsActive = 8;
 246              		.loc 1 67 0
 247 0082 7F4B     		ldr	r3, .L78+4
 248 0084 0822     		movs	r2, #8
 249 0086 1A70     		strb	r2, [r3]
  68:ui.c          ****             macroOLEDWaitingToSend = 1;
 250              		.loc 1 68 0
 251 0088 7E4B     		ldr	r3, .L78+8
 252 008a 0122     		movs	r2, #1
 253 008c 1A70     		strb	r2, [r3]
 254              	.LBB3:
  69:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 255              		.loc 1 69 0
 256 008e 0023     		movs	r3, #0
 257 0090 BB62     		str	r3, [r7, #40]
 258 0092 10E0     		b	.L6
 259              	.L7:
  70:ui.c          ****             {
  71:ui.c          ****                 knobFrozen[i+8] = 1;
 260              		.loc 1 71 0 discriminator 3
 261 0094 BB6A     		ldr	r3, [r7, #40]
 262 0096 0833     		adds	r3, r3, #8
 263 0098 7B4A     		ldr	r2, .L78+12
 264 009a 0121     		movs	r1, #1
 265 009c D154     		strb	r1, [r2, r3]
  72:ui.c          ****                 prevMacroKnobValues[i+8] = prevMacroKnobValues[i];
 266              		.loc 1 72 0 discriminator 3
 267 009e BB6A     		ldr	r3, [r7, #40]
 268 00a0 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 7


 269 00a2 7A49     		ldr	r1, .L78+16
 270 00a4 BA6A     		ldr	r2, [r7, #40]
 271 00a6 31F91210 		ldrsh	r1, [r1, r2, lsl #1]
 272 00aa 784A     		ldr	r2, .L78+16
 273 00ac 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  69:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 274              		.loc 1 69 0 discriminator 3
 275 00b0 BB6A     		ldr	r3, [r7, #40]
 276 00b2 0133     		adds	r3, r3, #1
 277 00b4 BB62     		str	r3, [r7, #40]
 278              	.L6:
  69:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 279              		.loc 1 69 0 is_stmt 0 discriminator 1
 280 00b6 BB6A     		ldr	r3, [r7, #40]
 281 00b8 072B     		cmp	r3, #7
 282 00ba EBDD     		ble	.L7
 283              	.LBE3:
  73:ui.c          ****             }
  74:ui.c          ****             whichMacro = 0;
 284              		.loc 1 74 0 is_stmt 1
 285 00bc 744B     		ldr	r3, .L78+20
 286 00be 0022     		movs	r2, #0
 287 00c0 1A70     		strb	r2, [r3]
 288              	.L5:
  75:ui.c          ****         }
  76:ui.c          ****     }
  77:ui.c          ****     
  78:ui.c          ****     
  79:ui.c          ****     
  80:ui.c          ****     uint8_t tempButtons = Status_Reg_1_Read();
 289              		.loc 1 80 0
 290 00c2 FFF7FEFF 		bl	Status_Reg_1_Read
 291 00c6 0346     		mov	r3, r0
 292 00c8 FB77     		strb	r3, [r7, #31]
  81:ui.c          ****     if (!(tempButtons&(1<<4)))
 293              		.loc 1 81 0
 294 00ca FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 295 00cc 03F01003 		and	r3, r3, #16
 296 00d0 002B     		cmp	r3, #0
 297 00d2 24D1     		bne	.L8
  82:ui.c          ****     {
  83:ui.c          ****         if (octave > 4)
 298              		.loc 1 83 0
 299 00d4 6F4B     		ldr	r3, .L78+24
 300 00d6 1B68     		ldr	r3, [r3]
 301 00d8 042B     		cmp	r3, #4
 302 00da 03DD     		ble	.L9
  84:ui.c          ****         {
  85:ui.c          ****             octave = 4;
 303              		.loc 1 85 0
 304 00dc 6D4B     		ldr	r3, .L78+24
 305 00de 0422     		movs	r2, #4
 306 00e0 1A60     		str	r2, [r3]
 307 00e2 0CE0     		b	.L10
 308              	.L9:
  86:ui.c          ****         }
  87:ui.c          ****         else if ((oct1Up) && (octave > 0))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 8


 309              		.loc 1 87 0
 310 00e4 6C4B     		ldr	r3, .L78+28
 311 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 312 00e8 002B     		cmp	r3, #0
 313 00ea 08D0     		beq	.L10
 314              		.loc 1 87 0 is_stmt 0 discriminator 1
 315 00ec 694B     		ldr	r3, .L78+24
 316 00ee 1B68     		ldr	r3, [r3]
 317 00f0 002B     		cmp	r3, #0
 318 00f2 04DD     		ble	.L10
  88:ui.c          ****         {
  89:ui.c          ****             octave--;
 319              		.loc 1 89 0 is_stmt 1
 320 00f4 674B     		ldr	r3, .L78+24
 321 00f6 1B68     		ldr	r3, [r3]
 322 00f8 013B     		subs	r3, r3, #1
 323 00fa 664A     		ldr	r2, .L78+24
 324 00fc 1360     		str	r3, [r2]
 325              	.L10:
  90:ui.c          ****         }
  91:ui.c          ****         LED_amber1_Write(1);
 326              		.loc 1 91 0
 327 00fe 0120     		movs	r0, #1
 328 0100 FFF7FEFF 		bl	LED_amber1_Write
  92:ui.c          ****         LED_amber2_Write(0);
 329              		.loc 1 92 0
 330 0104 0020     		movs	r0, #0
 331 0106 FFF7FEFF 		bl	LED_amber2_Write
  93:ui.c          ****         LED_amber3_Write(0);
 332              		.loc 1 93 0
 333 010a 0020     		movs	r0, #0
 334 010c FFF7FEFF 		bl	LED_amber3_Write
  94:ui.c          ****         LED_amber4_Write(0);
 335              		.loc 1 94 0
 336 0110 0020     		movs	r0, #0
 337 0112 FFF7FEFF 		bl	LED_amber4_Write
  95:ui.c          ****         oct1Up = 0;
 338              		.loc 1 95 0
 339 0116 604B     		ldr	r3, .L78+28
 340 0118 0022     		movs	r2, #0
 341 011a 1A70     		strb	r2, [r3]
 342 011c 07E0     		b	.L11
 343              	.L8:
  96:ui.c          ****     }
  97:ui.c          ****     
  98:ui.c          ****     else if ((tempButtons&(1<<4)))
 344              		.loc 1 98 0
 345 011e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 346 0120 03F01003 		and	r3, r3, #16
 347 0124 002B     		cmp	r3, #0
 348 0126 02D0     		beq	.L11
  99:ui.c          ****     {
 100:ui.c          ****         oct1Up = 1;
 349              		.loc 1 100 0
 350 0128 5B4B     		ldr	r3, .L78+28
 351 012a 0122     		movs	r2, #1
 352 012c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 9


 353              	.L11:
 101:ui.c          ****     }
 102:ui.c          ****     
 103:ui.c          ****     if (!oct2_Read())
 354              		.loc 1 103 0
 355 012e FFF7FEFF 		bl	oct2_Read
 356 0132 0346     		mov	r3, r0
 357 0134 002B     		cmp	r3, #0
 358 0136 0ED1     		bne	.L12
 104:ui.c          ****     {
 105:ui.c          ****         octave = 5;
 359              		.loc 1 105 0
 360 0138 564B     		ldr	r3, .L78+24
 361 013a 0522     		movs	r2, #5
 362 013c 1A60     		str	r2, [r3]
 106:ui.c          ****         LED_amber1_Write(0);
 363              		.loc 1 106 0
 364 013e 0020     		movs	r0, #0
 365 0140 FFF7FEFF 		bl	LED_amber1_Write
 107:ui.c          ****         LED_amber2_Write(1);
 366              		.loc 1 107 0
 367 0144 0120     		movs	r0, #1
 368 0146 FFF7FEFF 		bl	LED_amber2_Write
 108:ui.c          ****         LED_amber3_Write(0);
 369              		.loc 1 108 0
 370 014a 0020     		movs	r0, #0
 371 014c FFF7FEFF 		bl	LED_amber3_Write
 109:ui.c          ****         LED_amber4_Write(0);
 372              		.loc 1 109 0
 373 0150 0020     		movs	r0, #0
 374 0152 FFF7FEFF 		bl	LED_amber4_Write
 375              	.L12:
 110:ui.c          ****     }
 111:ui.c          ****     if (!oct3_Read())
 376              		.loc 1 111 0
 377 0156 FFF7FEFF 		bl	oct3_Read
 378 015a 0346     		mov	r3, r0
 379 015c 002B     		cmp	r3, #0
 380 015e 0ED1     		bne	.L13
 112:ui.c          ****     {
 113:ui.c          ****         octave = 6;
 381              		.loc 1 113 0
 382 0160 4C4B     		ldr	r3, .L78+24
 383 0162 0622     		movs	r2, #6
 384 0164 1A60     		str	r2, [r3]
 114:ui.c          ****         LED_amber1_Write(0);
 385              		.loc 1 114 0
 386 0166 0020     		movs	r0, #0
 387 0168 FFF7FEFF 		bl	LED_amber1_Write
 115:ui.c          ****         LED_amber2_Write(0);
 388              		.loc 1 115 0
 389 016c 0020     		movs	r0, #0
 390 016e FFF7FEFF 		bl	LED_amber2_Write
 116:ui.c          ****         LED_amber3_Write(1);
 391              		.loc 1 116 0
 392 0172 0120     		movs	r0, #1
 393 0174 FFF7FEFF 		bl	LED_amber3_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 10


 117:ui.c          ****         LED_amber4_Write(0);            
 394              		.loc 1 117 0
 395 0178 0020     		movs	r0, #0
 396 017a FFF7FEFF 		bl	LED_amber4_Write
 397              	.L13:
 118:ui.c          ****     }
 119:ui.c          ****     if (!(tempButtons&(1<<5)))
 398              		.loc 1 119 0
 399 017e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 400 0180 03F02003 		and	r3, r3, #32
 401 0184 002B     		cmp	r3, #0
 402 0186 24D1     		bne	.L14
 120:ui.c          ****     {
 121:ui.c          ****         if (octave < 7)
 403              		.loc 1 121 0
 404 0188 424B     		ldr	r3, .L78+24
 405 018a 1B68     		ldr	r3, [r3]
 406 018c 062B     		cmp	r3, #6
 407 018e 03DC     		bgt	.L15
 122:ui.c          ****         {
 123:ui.c          ****             octave = 7;
 408              		.loc 1 123 0
 409 0190 404B     		ldr	r3, .L78+24
 410 0192 0722     		movs	r2, #7
 411 0194 1A60     		str	r2, [r3]
 412 0196 0CE0     		b	.L16
 413              	.L15:
 124:ui.c          **** 
 125:ui.c          ****         }
 126:ui.c          ****         else if ((oct4Up) && (octave < 11))
 414              		.loc 1 126 0
 415 0198 404B     		ldr	r3, .L78+32
 416 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 417 019c 002B     		cmp	r3, #0
 418 019e 08D0     		beq	.L16
 419              		.loc 1 126 0 is_stmt 0 discriminator 1
 420 01a0 3C4B     		ldr	r3, .L78+24
 421 01a2 1B68     		ldr	r3, [r3]
 422 01a4 0A2B     		cmp	r3, #10
 423 01a6 04DC     		bgt	.L16
 127:ui.c          ****         {
 128:ui.c          ****             octave++;
 424              		.loc 1 128 0 is_stmt 1
 425 01a8 3A4B     		ldr	r3, .L78+24
 426 01aa 1B68     		ldr	r3, [r3]
 427 01ac 0133     		adds	r3, r3, #1
 428 01ae 394A     		ldr	r2, .L78+24
 429 01b0 1360     		str	r3, [r2]
 430              	.L16:
 129:ui.c          **** 
 130:ui.c          ****         }
 131:ui.c          ****         LED_amber1_Write(0);
 431              		.loc 1 131 0
 432 01b2 0020     		movs	r0, #0
 433 01b4 FFF7FEFF 		bl	LED_amber1_Write
 132:ui.c          ****         LED_amber2_Write(0);
 434              		.loc 1 132 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 11


 435 01b8 0020     		movs	r0, #0
 436 01ba FFF7FEFF 		bl	LED_amber2_Write
 133:ui.c          ****         LED_amber3_Write(0);
 437              		.loc 1 133 0
 438 01be 0020     		movs	r0, #0
 439 01c0 FFF7FEFF 		bl	LED_amber3_Write
 134:ui.c          ****         LED_amber4_Write(1);
 440              		.loc 1 134 0
 441 01c4 0120     		movs	r0, #1
 442 01c6 FFF7FEFF 		bl	LED_amber4_Write
 135:ui.c          ****         oct4Up = 0;
 443              		.loc 1 135 0
 444 01ca 344B     		ldr	r3, .L78+32
 445 01cc 0022     		movs	r2, #0
 446 01ce 1A70     		strb	r2, [r3]
 447 01d0 07E0     		b	.L17
 448              	.L14:
 136:ui.c          ****     }
 137:ui.c          ****     
 138:ui.c          ****     else if ((tempButtons&(1<<5)))
 449              		.loc 1 138 0
 450 01d2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 451 01d4 03F02003 		and	r3, r3, #32
 452 01d8 002B     		cmp	r3, #0
 453 01da 02D0     		beq	.L17
 139:ui.c          ****     {
 140:ui.c          ****         oct4Up = 1;
 454              		.loc 1 140 0
 455 01dc 2F4B     		ldr	r3, .L78+32
 456 01de 0122     		movs	r2, #1
 457 01e0 1A70     		strb	r2, [r3]
 458              	.L17:
 141:ui.c          ****     }
 142:ui.c          ****     
 143:ui.c          ****     if (!neck1_button_Read())
 459              		.loc 1 143 0
 460 01e2 FFF7FEFF 		bl	neck1_button_Read
 461 01e6 0346     		mov	r3, r0
 462 01e8 002B     		cmp	r3, #0
 463 01ea 69D1     		bne	.L18
 144:ui.c          ****     {
 145:ui.c          ****         currentNeck = 0;
 464              		.loc 1 145 0
 465 01ec 2C4B     		ldr	r3, .L78+36
 466 01ee 0022     		movs	r2, #0
 467 01f0 1A70     		strb	r2, [r3]
 146:ui.c          ****         currentCopedent = necks[currentNeck];
 468              		.loc 1 146 0
 469 01f2 2B4B     		ldr	r3, .L78+36
 470 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 471 01f6 1A46     		mov	r2, r3
 472 01f8 2A4B     		ldr	r3, .L78+40
 473 01fa 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 474 01fc 2A4B     		ldr	r3, .L78+44
 475 01fe 1A70     		strb	r2, [r3]
 147:ui.c          ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 476              		.loc 1 147 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 12


 477 0200 284B     		ldr	r3, .L78+40
 478 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 479 0204 5B01     		lsls	r3, r3, #5
 480 0206 DAB2     		uxtb	r2, r3
 481 0208 264B     		ldr	r3, .L78+40
 482 020a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 483 020c 9B00     		lsls	r3, r3, #2
 484 020e DBB2     		uxtb	r3, r3
 485 0210 1344     		add	r3, r3, r2
 486 0212 DAB2     		uxtb	r2, r3
 487 0214 224B     		ldr	r3, .L78+36
 488 0216 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 489 0218 1344     		add	r3, r3, r2
 490 021a DAB2     		uxtb	r2, r3
 491 021c 234B     		ldr	r3, .L78+48
 492 021e 1A70     		strb	r2, [r3]
 148:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 493              		.loc 1 148 0
 494 0220 224B     		ldr	r3, .L78+48
 495 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 496 0224 40F2E371 		movw	r1, #2019
 497 0228 1846     		mov	r0, r3
 498 022a FFF7FEFF 		bl	EEPROM_WriteByte
 149:ui.c          ****         patchNum = neckPreset[currentNeck];
 499              		.loc 1 149 0
 500 022e 1C4B     		ldr	r3, .L78+36
 501 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 502 0232 1A46     		mov	r2, r3
 503 0234 1E4B     		ldr	r3, .L78+52
 504 0236 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 505 0238 1E4B     		ldr	r3, .L78+56
 506 023a 1A70     		strb	r2, [r3]
 150:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 507              		.loc 1 150 0
 508 023c 1D4B     		ldr	r3, .L78+56
 509 023e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 510 0240 174B     		ldr	r3, .L78+36
 511 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 0244 9BB2     		uxth	r3, r3
 513 0246 03F2DC73 		addw	r3, r3, #2012
 514 024a 9BB2     		uxth	r3, r3
 515 024c 1946     		mov	r1, r3
 516 024e 1046     		mov	r0, r2
 517 0250 FFF7FEFF 		bl	EEPROM_WriteByte
 151:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 518              		.loc 1 151 0
 519 0254 174B     		ldr	r3, .L78+56
 520 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 521 0258 40F2D671 		movw	r1, #2006
 522 025c 1846     		mov	r0, r3
 523 025e FFF7FEFF 		bl	EEPROM_WriteByte
 152:ui.c          ****         LED_red1_Write(0);
 524              		.loc 1 152 0
 525 0262 0020     		movs	r0, #0
 526 0264 FFF7FEFF 		bl	LED_red1_Write
 153:ui.c          ****         LED_green2_Write(1);
 527              		.loc 1 153 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 13


 528 0268 0120     		movs	r0, #1
 529 026a FFF7FEFF 		bl	LED_green2_Write
 154:ui.c          ****         if (!editMode)
 530              		.loc 1 154 0
 531 026e 124B     		ldr	r3, .L78+60
 532 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 533 0272 002B     		cmp	r3, #0
 534 0274 22D1     		bne	.L19
 155:ui.c          ****         {
 156:ui.c          ****             displayCurrentPresetNameAndCopedent();
 535              		.loc 1 156 0
 536 0276 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 537 027a 21E0     		b	.L18
 538              	.L79:
 539              		.align	2
 540              	.L78:
 541 027c 00000000 		.word	knobPanelLightActive
 542 0280 00000000 		.word	whichMacroPageIsActive
 543 0284 00000000 		.word	macroOLEDWaitingToSend
 544 0288 00000000 		.word	knobFrozen
 545 028c 00000000 		.word	prevMacroKnobValues
 546 0290 00000000 		.word	whichMacro
 547 0294 00000000 		.word	octave
 548 0298 00000000 		.word	oct1Up
 549 029c 00000000 		.word	oct4Up
 550 02a0 00000000 		.word	currentNeck
 551 02a4 00000000 		.word	necks
 552 02a8 00000000 		.word	currentCopedent
 553 02ac 00000000 		.word	neckByte
 554 02b0 00000000 		.word	neckPreset
 555 02b4 00000000 		.word	patchNum
 556 02b8 00000000 		.word	editMode
 557              	.L19:
 157:ui.c          ****         }
 158:ui.c          ****         else
 159:ui.c          ****         {
 160:ui.c          ****             exitEditModeMenu();   
 558              		.loc 1 160 0
 559 02bc FFF7FEFF 		bl	exitEditModeMenu
 560              	.L18:
 161:ui.c          ****         }
 162:ui.c          ****     }
 163:ui.c          ****     if (!neck2_button_Read())
 561              		.loc 1 163 0
 562 02c0 FFF7FEFF 		bl	neck2_button_Read
 563 02c4 0346     		mov	r3, r0
 564 02c6 002B     		cmp	r3, #0
 565 02c8 49D1     		bne	.L20
 164:ui.c          ****     {
 165:ui.c          ****         currentNeck = 1;
 566              		.loc 1 165 0
 567 02ca 834B     		ldr	r3, .L80
 568 02cc 0122     		movs	r2, #1
 569 02ce 1A70     		strb	r2, [r3]
 166:ui.c          ****         currentCopedent = necks[currentNeck];    
 570              		.loc 1 166 0
 571 02d0 814B     		ldr	r3, .L80
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 14


 572 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 573 02d4 1A46     		mov	r2, r3
 574 02d6 814B     		ldr	r3, .L80+4
 575 02d8 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 576 02da 814B     		ldr	r3, .L80+8
 577 02dc 1A70     		strb	r2, [r3]
 167:ui.c          ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 578              		.loc 1 167 0
 579 02de 7F4B     		ldr	r3, .L80+4
 580 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 581 02e2 5B01     		lsls	r3, r3, #5
 582 02e4 DAB2     		uxtb	r2, r3
 583 02e6 7D4B     		ldr	r3, .L80+4
 584 02e8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 585 02ea 9B00     		lsls	r3, r3, #2
 586 02ec DBB2     		uxtb	r3, r3
 587 02ee 1344     		add	r3, r3, r2
 588 02f0 DAB2     		uxtb	r2, r3
 589 02f2 794B     		ldr	r3, .L80
 590 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 591 02f6 1344     		add	r3, r3, r2
 592 02f8 DAB2     		uxtb	r2, r3
 593 02fa 7A4B     		ldr	r3, .L80+12
 594 02fc 1A70     		strb	r2, [r3]
 168:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 595              		.loc 1 168 0
 596 02fe 794B     		ldr	r3, .L80+12
 597 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 598 0302 40F2E371 		movw	r1, #2019
 599 0306 1846     		mov	r0, r3
 600 0308 FFF7FEFF 		bl	EEPROM_WriteByte
 169:ui.c          ****         patchNum = neckPreset[currentNeck];
 601              		.loc 1 169 0
 602 030c 724B     		ldr	r3, .L80
 603 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 604 0310 1A46     		mov	r2, r3
 605 0312 754B     		ldr	r3, .L80+16
 606 0314 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 607 0316 754B     		ldr	r3, .L80+20
 608 0318 1A70     		strb	r2, [r3]
 170:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 609              		.loc 1 170 0
 610 031a 744B     		ldr	r3, .L80+20
 611 031c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 612 031e 6E4B     		ldr	r3, .L80
 613 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614 0322 9BB2     		uxth	r3, r3
 615 0324 03F2DC73 		addw	r3, r3, #2012
 616 0328 9BB2     		uxth	r3, r3
 617 032a 1946     		mov	r1, r3
 618 032c 1046     		mov	r0, r2
 619 032e FFF7FEFF 		bl	EEPROM_WriteByte
 171:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 620              		.loc 1 171 0
 621 0332 6E4B     		ldr	r3, .L80+20
 622 0334 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623 0336 40F2D671 		movw	r1, #2006
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 15


 624 033a 1846     		mov	r0, r3
 625 033c FFF7FEFF 		bl	EEPROM_WriteByte
 172:ui.c          ****         LED_red1_Write(1);
 626              		.loc 1 172 0
 627 0340 0120     		movs	r0, #1
 628 0342 FFF7FEFF 		bl	LED_red1_Write
 173:ui.c          ****         LED_green2_Write(0);          
 629              		.loc 1 173 0
 630 0346 0020     		movs	r0, #0
 631 0348 FFF7FEFF 		bl	LED_green2_Write
 174:ui.c          ****         if (!editMode)
 632              		.loc 1 174 0
 633 034c 684B     		ldr	r3, .L80+24
 634 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 635 0350 002B     		cmp	r3, #0
 636 0352 02D1     		bne	.L21
 175:ui.c          ****         {
 176:ui.c          ****             displayCurrentPresetNameAndCopedent();
 637              		.loc 1 176 0
 638 0354 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 639 0358 01E0     		b	.L20
 640              	.L21:
 177:ui.c          ****         }
 178:ui.c          ****         else
 179:ui.c          ****         {
 180:ui.c          ****             exitEditModeMenu();   
 641              		.loc 1 180 0
 642 035a FFF7FEFF 		bl	exitEditModeMenu
 643              	.L20:
 181:ui.c          ****         }
 182:ui.c          ****     }
 183:ui.c          ****     
 184:ui.c          ****     if ((!(tempButtons&(1<<6))) && (shiftUp))
 644              		.loc 1 184 0
 645 035e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 646 0360 03F04003 		and	r3, r3, #64
 647 0364 002B     		cmp	r3, #0
 648 0366 1DD1     		bne	.L22
 649              		.loc 1 184 0 is_stmt 0 discriminator 1
 650 0368 624B     		ldr	r3, .L80+28
 651 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 652 036c 002B     		cmp	r3, #0
 653 036e 19D0     		beq	.L22
 185:ui.c          ****     {
 186:ui.c          ****         dualSlider = !dualSlider;
 654              		.loc 1 186 0 is_stmt 1
 655 0370 614B     		ldr	r3, .L80+32
 656 0372 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657 0374 002B     		cmp	r3, #0
 658 0376 0CBF     		ite	eq
 659 0378 0123     		moveq	r3, #1
 660 037a 0023     		movne	r3, #0
 661 037c DBB2     		uxtb	r3, r3
 662 037e 1A46     		mov	r2, r3
 663 0380 5D4B     		ldr	r3, .L80+32
 664 0382 1A70     		strb	r2, [r3]
 187:ui.c          ****         LED_green1_Write(dualSlider);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 16


 665              		.loc 1 187 0
 666 0384 5C4B     		ldr	r3, .L80+32
 667 0386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 668 0388 1846     		mov	r0, r3
 669 038a FFF7FEFF 		bl	LED_green1_Write
 188:ui.c          ****         EEPROM_WriteByte(dualSlider, EEPROM_DUAL_SLIDER_OFFSET);
 670              		.loc 1 188 0
 671 038e 5A4B     		ldr	r3, .L80+32
 672 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 673 0392 40F2E271 		movw	r1, #2018
 674 0396 1846     		mov	r0, r3
 675 0398 FFF7FEFF 		bl	EEPROM_WriteByte
 189:ui.c          ****         shiftUp = 0;
 676              		.loc 1 189 0
 677 039c 554B     		ldr	r3, .L80+28
 678 039e 0022     		movs	r2, #0
 679 03a0 1A70     		strb	r2, [r3]
 680 03a2 07E0     		b	.L23
 681              	.L22:
 190:ui.c          ****     }
 191:ui.c          ****     else if ((tempButtons&(1<<6)))
 682              		.loc 1 191 0
 683 03a4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 684 03a6 03F04003 		and	r3, r3, #64
 685 03aa 002B     		cmp	r3, #0
 686 03ac 02D0     		beq	.L23
 192:ui.c          ****     {
 193:ui.c          ****         shiftUp = 1;
 687              		.loc 1 193 0
 688 03ae 514B     		ldr	r3, .L80+28
 689 03b0 0122     		movs	r2, #1
 690 03b2 1A70     		strb	r2, [r3]
 691              	.L23:
 194:ui.c          ****     }
 195:ui.c          **** 
 196:ui.c          ****     if ((!(tempButtons&(1<<0))) && (button1Up))
 692              		.loc 1 196 0
 693 03b4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 694 03b6 03F00103 		and	r3, r3, #1
 695 03ba 002B     		cmp	r3, #0
 696 03bc 09D1     		bne	.L24
 697              		.loc 1 196 0 is_stmt 0 discriminator 1
 698 03be 4F4B     		ldr	r3, .L80+36
 699 03c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 700 03c2 002B     		cmp	r3, #0
 701 03c4 05D0     		beq	.L24
 197:ui.c          ****     {
 198:ui.c          ****         leftPressed();
 702              		.loc 1 198 0 is_stmt 1
 703 03c6 FFF7FEFF 		bl	leftPressed
 199:ui.c          ****         button1Up = 0;
 704              		.loc 1 199 0
 705 03ca 4C4B     		ldr	r3, .L80+36
 706 03cc 0022     		movs	r2, #0
 707 03ce 1A70     		strb	r2, [r3]
 708 03d0 07E0     		b	.L25
 709              	.L24:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 17


 200:ui.c          ****     }
 201:ui.c          ****     else if ((tempButtons&(1<<0)))
 710              		.loc 1 201 0
 711 03d2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 712 03d4 03F00103 		and	r3, r3, #1
 713 03d8 002B     		cmp	r3, #0
 714 03da 02D0     		beq	.L25
 202:ui.c          ****     {
 203:ui.c          ****         button1Up = 1;
 715              		.loc 1 203 0
 716 03dc 474B     		ldr	r3, .L80+36
 717 03de 0122     		movs	r2, #1
 718 03e0 1A70     		strb	r2, [r3]
 719              	.L25:
 204:ui.c          ****     }
 205:ui.c          ****     
 206:ui.c          ****     if ((!(tempButtons&(1<<1))) && (button2Up))
 720              		.loc 1 206 0
 721 03e2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 722 03e4 03F00203 		and	r3, r3, #2
 723 03e8 002B     		cmp	r3, #0
 724 03ea 09D1     		bne	.L26
 725              		.loc 1 206 0 is_stmt 0 discriminator 1
 726 03ec 444B     		ldr	r3, .L80+40
 727 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 728 03f0 002B     		cmp	r3, #0
 729 03f2 05D0     		beq	.L26
 207:ui.c          ****     {
 208:ui.c          ****         rightPressed();
 730              		.loc 1 208 0 is_stmt 1
 731 03f4 FFF7FEFF 		bl	rightPressed
 209:ui.c          ****         button2Up = 0;
 732              		.loc 1 209 0
 733 03f8 414B     		ldr	r3, .L80+40
 734 03fa 0022     		movs	r2, #0
 735 03fc 1A70     		strb	r2, [r3]
 736 03fe 07E0     		b	.L27
 737              	.L26:
 210:ui.c          ****     }
 211:ui.c          ****     else if ((tempButtons&(1<<1)))
 738              		.loc 1 211 0
 739 0400 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 740 0402 03F00203 		and	r3, r3, #2
 741 0406 002B     		cmp	r3, #0
 742 0408 02D0     		beq	.L27
 212:ui.c          ****     {
 213:ui.c          ****         button2Up = 1;
 743              		.loc 1 213 0
 744 040a 3D4B     		ldr	r3, .L80+40
 745 040c 0122     		movs	r2, #1
 746 040e 1A70     		strb	r2, [r3]
 747              	.L27:
 214:ui.c          ****     }
 215:ui.c          ****     
 216:ui.c          ****     if ((!(tempButtons&(1<<2))) && (button3Up))
 748              		.loc 1 216 0
 749 0410 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 18


 750 0412 03F00403 		and	r3, r3, #4
 751 0416 002B     		cmp	r3, #0
 752 0418 09D1     		bne	.L28
 753              		.loc 1 216 0 is_stmt 0 discriminator 1
 754 041a 3A4B     		ldr	r3, .L80+44
 755 041c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 756 041e 002B     		cmp	r3, #0
 757 0420 05D0     		beq	.L28
 217:ui.c          ****     {
 218:ui.c          ****         downPressed();
 758              		.loc 1 218 0 is_stmt 1
 759 0422 FFF7FEFF 		bl	downPressed
 219:ui.c          ****         button3Up = 0;
 760              		.loc 1 219 0
 761 0426 374B     		ldr	r3, .L80+44
 762 0428 0022     		movs	r2, #0
 763 042a 1A70     		strb	r2, [r3]
 764 042c 07E0     		b	.L29
 765              	.L28:
 220:ui.c          ****     }
 221:ui.c          ****     else if ((tempButtons&(1<<2)))
 766              		.loc 1 221 0
 767 042e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 768 0430 03F00403 		and	r3, r3, #4
 769 0434 002B     		cmp	r3, #0
 770 0436 02D0     		beq	.L29
 222:ui.c          ****     {
 223:ui.c          ****         button3Up = 1;
 771              		.loc 1 223 0
 772 0438 324B     		ldr	r3, .L80+44
 773 043a 0122     		movs	r2, #1
 774 043c 1A70     		strb	r2, [r3]
 775              	.L29:
 224:ui.c          ****     }
 225:ui.c          ****     
 226:ui.c          ****     if ((!(tempButtons&(1<<3))) && (button4Up))
 776              		.loc 1 226 0
 777 043e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 778 0440 03F00803 		and	r3, r3, #8
 779 0444 002B     		cmp	r3, #0
 780 0446 09D1     		bne	.L30
 781              		.loc 1 226 0 is_stmt 0 discriminator 1
 782 0448 2F4B     		ldr	r3, .L80+48
 783 044a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 784 044c 002B     		cmp	r3, #0
 785 044e 05D0     		beq	.L30
 227:ui.c          ****     {
 228:ui.c          ****         upPressed();
 786              		.loc 1 228 0 is_stmt 1
 787 0450 FFF7FEFF 		bl	upPressed
 229:ui.c          ****         button4Up = 0;
 788              		.loc 1 229 0
 789 0454 2C4B     		ldr	r3, .L80+48
 790 0456 0022     		movs	r2, #0
 791 0458 1A70     		strb	r2, [r3]
 792 045a 07E0     		b	.L31
 793              	.L30:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 19


 230:ui.c          ****     }
 231:ui.c          ****     else if ((tempButtons&(1<<3)))
 794              		.loc 1 231 0
 795 045c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 796 045e 03F00803 		and	r3, r3, #8
 797 0462 002B     		cmp	r3, #0
 798 0464 02D0     		beq	.L31
 232:ui.c          ****     {
 233:ui.c          ****         button4Up = 1;
 799              		.loc 1 233 0
 800 0466 284B     		ldr	r3, .L80+48
 801 0468 0122     		movs	r2, #1
 802 046a 1A70     		strb	r2, [r3]
 803              	.L31:
 234:ui.c          ****     }
 235:ui.c          ****     
 236:ui.c          ****     if ((!edit_button_Read()) && (editUp))
 804              		.loc 1 236 0
 805 046c FFF7FEFF 		bl	edit_button_Read
 806 0470 0346     		mov	r3, r0
 807 0472 002B     		cmp	r3, #0
 808 0474 1AD1     		bne	.L32
 809              		.loc 1 236 0 is_stmt 0 discriminator 1
 810 0476 254B     		ldr	r3, .L80+52
 811 0478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 812 047a 002B     		cmp	r3, #0
 813 047c 16D0     		beq	.L32
 237:ui.c          ****     {
 238:ui.c          ****         editMode = !editMode;
 814              		.loc 1 238 0 is_stmt 1
 815 047e 1C4B     		ldr	r3, .L80+24
 816 0480 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 817 0482 002B     		cmp	r3, #0
 818 0484 0CBF     		ite	eq
 819 0486 0123     		moveq	r3, #1
 820 0488 0023     		movne	r3, #0
 821 048a DBB2     		uxtb	r3, r3
 822 048c 1A46     		mov	r2, r3
 823 048e 184B     		ldr	r3, .L80+24
 824 0490 1A70     		strb	r2, [r3]
 239:ui.c          ****         if (editMode)
 825              		.loc 1 239 0
 826 0492 174B     		ldr	r3, .L80+24
 827 0494 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0496 002B     		cmp	r3, #0
 829 0498 02D0     		beq	.L33
 240:ui.c          ****         {
 241:ui.c          ****             enterEditModeMenu();
 830              		.loc 1 241 0
 831 049a FFF7FEFF 		bl	enterEditModeMenu
 832 049e 01E0     		b	.L34
 833              	.L33:
 242:ui.c          ****         }
 243:ui.c          ****         else
 244:ui.c          ****         {
 245:ui.c          ****             exitEditModeMenu();
 834              		.loc 1 245 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 20


 835 04a0 FFF7FEFF 		bl	exitEditModeMenu
 836              	.L34:
 246:ui.c          ****         }
 247:ui.c          ****         editUp = 0;
 837              		.loc 1 247 0
 838 04a4 194B     		ldr	r3, .L80+52
 839 04a6 0022     		movs	r2, #0
 840 04a8 1A70     		strb	r2, [r3]
 841 04aa 07E0     		b	.L35
 842              	.L32:
 248:ui.c          ****     }
 249:ui.c          ****     else if (edit_button_Read())
 843              		.loc 1 249 0
 844 04ac FFF7FEFF 		bl	edit_button_Read
 845 04b0 0346     		mov	r3, r0
 846 04b2 002B     		cmp	r3, #0
 847 04b4 02D0     		beq	.L35
 250:ui.c          ****     {
 251:ui.c          ****         editUp = 1;
 848              		.loc 1 251 0
 849 04b6 154B     		ldr	r3, .L80+52
 850 04b8 0122     		movs	r2, #1
 851 04ba 1A70     		strb	r2, [r3]
 852              	.L35:
 252:ui.c          ****     }
 253:ui.c          ****     
 254:ui.c          ****     if ((!(tempButtons&(1<<7))) && (encoderUp))
 853              		.loc 1 254 0
 854 04bc 97F91F30 		ldrsb	r3, [r7, #31]
 855 04c0 002B     		cmp	r3, #0
 856 04c2 27DB     		blt	.L36
 857              		.loc 1 254 0 is_stmt 0 discriminator 1
 858 04c4 124B     		ldr	r3, .L80+56
 859 04c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 860 04c8 002B     		cmp	r3, #0
 861 04ca 23D0     		beq	.L36
 255:ui.c          ****     {
 256:ui.c          ****         enterPressed();
 862              		.loc 1 256 0 is_stmt 1
 863 04cc FFF7FEFF 		bl	enterPressed
 257:ui.c          ****         encoderUp = 0;
 864              		.loc 1 257 0
 865 04d0 0F4B     		ldr	r3, .L80+56
 866 04d2 0022     		movs	r2, #0
 867 04d4 1A70     		strb	r2, [r3]
 868 04d6 24E0     		b	.L37
 869              	.L81:
 870              		.align	2
 871              	.L80:
 872 04d8 00000000 		.word	currentNeck
 873 04dc 00000000 		.word	necks
 874 04e0 00000000 		.word	currentCopedent
 875 04e4 00000000 		.word	neckByte
 876 04e8 00000000 		.word	neckPreset
 877 04ec 00000000 		.word	patchNum
 878 04f0 00000000 		.word	editMode
 879 04f4 00000000 		.word	shiftUp
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 21


 880 04f8 00000000 		.word	dualSlider
 881 04fc 00000000 		.word	button1Up
 882 0500 00000000 		.word	button2Up
 883 0504 00000000 		.word	button3Up
 884 0508 00000000 		.word	button4Up
 885 050c 00000000 		.word	editUp
 886 0510 00000000 		.word	encoderUp
 887              	.L36:
 258:ui.c          ****     }
 259:ui.c          ****     else if ((tempButtons&(1<<7)))
 888              		.loc 1 259 0
 889 0514 97F91F30 		ldrsb	r3, [r7, #31]
 890 0518 002B     		cmp	r3, #0
 891 051a 02DA     		bge	.L37
 260:ui.c          ****     {
 261:ui.c          ****         encoderUp = 1;
 892              		.loc 1 261 0
 893 051c 954B     		ldr	r3, .L82
 894 051e 0122     		movs	r2, #1
 895 0520 1A70     		strb	r2, [r3]
 896              	.L37:
 262:ui.c          ****     }
 263:ui.c          ****     
 264:ui.c          ****     prevOctave = octave;
 897              		.loc 1 264 0
 898 0522 954B     		ldr	r3, .L82+4
 899 0524 1B68     		ldr	r3, [r3]
 900 0526 954A     		ldr	r2, .L82+8
 901 0528 1360     		str	r3, [r2]
 265:ui.c          ****     if (editMode)
 902              		.loc 1 265 0
 903 052a 954B     		ldr	r3, .L82+12
 904 052c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 052e 002B     		cmp	r3, #0
 906 0530 00F04984 		beq	.L77
 266:ui.c          ****     {
 267:ui.c          ****         if (encoderWatch)
 907              		.loc 1 267 0
 908 0534 934B     		ldr	r3, .L82+16
 909 0536 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 910 0538 002B     		cmp	r3, #0
 911 053a 00F04484 		beq	.L77
 912              	.LBB4:
 268:ui.c          ****         {
 269:ui.c          ****             int8_t currentEncoderVal = Decoder_1_GetPosition();
 913              		.loc 1 269 0
 914 053e FFF7FEFF 		bl	Decoder_1_GetPosition
 915 0542 0346     		mov	r3, r0
 916 0544 BB77     		strb	r3, [r7, #30]
 270:ui.c          ****             
 271:ui.c          ****             if (menuPosition[0][0] == StorePresetMenu) //SelectingPresetToStore
 917              		.loc 1 271 0
 918 0546 904B     		ldr	r3, .L82+20
 919 0548 93F90030 		ldrsb	r3, [r3]
 920 054c 012B     		cmp	r3, #1
 921 054e 40F0A080 		bne	.L39
 272:ui.c          ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 22


 273:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 922              		.loc 1 273 0
 923 0552 8E4B     		ldr	r3, .L82+24
 924 0554 93F90030 		ldrsb	r3, [r3]
 925 0558 97F91E20 		ldrsb	r2, [r7, #30]
 926 055c 9A42     		cmp	r2, r3
 927 055e 00F09880 		beq	.L39
 274:ui.c          ****                 {
 275:ui.c          ****                     
 276:ui.c          ****                     if (presetStoreStage == 0)
 928              		.loc 1 276 0
 929 0562 8B4B     		ldr	r3, .L82+28
 930 0564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 931 0566 002B     		cmp	r3, #0
 932 0568 6BD1     		bne	.L40
 933              	.LBB5:
 277:ui.c          ****                     {
 278:ui.c          ****                         OLEDtextColor(1, 0);
 934              		.loc 1 278 0
 935 056a 0021     		movs	r1, #0
 936 056c 0120     		movs	r0, #1
 937 056e FFF7FEFF 		bl	OLEDtextColor
 279:ui.c          ****                         GFXfillRect(&theGFX, 84, 32 ,46 ,32, theGFX.textbgcolor);
 938              		.loc 1 279 0
 939 0572 884B     		ldr	r3, .L82+32
 940 0574 5B8A     		ldrh	r3, [r3, #18]
 941 0576 0193     		str	r3, [sp, #4]
 942 0578 2023     		movs	r3, #32
 943 057a 0093     		str	r3, [sp]
 944 057c 2E23     		movs	r3, #46
 945 057e 2022     		movs	r2, #32
 946 0580 5421     		movs	r1, #84
 947 0582 8448     		ldr	r0, .L82+32
 948 0584 FFF7FEFF 		bl	GFXfillRect
 280:ui.c          ****                        
 281:ui.c          **** 
 282:ui.c          ****                         myGFX_setFont(1);
 949              		.loc 1 282 0
 950 0588 0120     		movs	r0, #1
 951 058a FFF7FEFF 		bl	myGFX_setFont
 283:ui.c          ****                         presetNumberToStore = presetNumberToStore - (Decoder_1_GetPosition());
 952              		.loc 1 283 0
 953 058e 824B     		ldr	r3, .L82+36
 954 0590 93F90030 		ldrsb	r3, [r3]
 955 0594 DCB2     		uxtb	r4, r3
 956 0596 FFF7FEFF 		bl	Decoder_1_GetPosition
 957 059a 0346     		mov	r3, r0
 958 059c DBB2     		uxtb	r3, r3
 959 059e E31A     		subs	r3, r4, r3
 960 05a0 DBB2     		uxtb	r3, r3
 961 05a2 5AB2     		sxtb	r2, r3
 962 05a4 7C4B     		ldr	r3, .L82+36
 963 05a6 1A70     		strb	r2, [r3]
 284:ui.c          ****                         if (presetNumberToStore < 0)
 964              		.loc 1 284 0
 965 05a8 7B4B     		ldr	r3, .L82+36
 966 05aa 93F90030 		ldrsb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 23


 967 05ae 002B     		cmp	r3, #0
 968 05b0 08DA     		bge	.L41
 285:ui.c          ****                         {
 286:ui.c          ****                             presetNumberToStore += 59;
 969              		.loc 1 286 0
 970 05b2 794B     		ldr	r3, .L82+36
 971 05b4 93F90030 		ldrsb	r3, [r3]
 972 05b8 DBB2     		uxtb	r3, r3
 973 05ba 3B33     		adds	r3, r3, #59
 974 05bc DBB2     		uxtb	r3, r3
 975 05be 5AB2     		sxtb	r2, r3
 976 05c0 754B     		ldr	r3, .L82+36
 977 05c2 1A70     		strb	r2, [r3]
 978              	.L41:
 287:ui.c          ****                         }
 288:ui.c          ****                         if (presetNumberToStore > 58)
 979              		.loc 1 288 0
 980 05c4 744B     		ldr	r3, .L82+36
 981 05c6 93F90030 		ldrsb	r3, [r3]
 982 05ca 3A2B     		cmp	r3, #58
 983 05cc 08DD     		ble	.L42
 289:ui.c          ****                         {
 290:ui.c          ****                             presetNumberToStore -= 59;
 984              		.loc 1 290 0
 985 05ce 724B     		ldr	r3, .L82+36
 986 05d0 93F90030 		ldrsb	r3, [r3]
 987 05d4 DBB2     		uxtb	r3, r3
 988 05d6 3B3B     		subs	r3, r3, #59
 989 05d8 DBB2     		uxtb	r3, r3
 990 05da 5AB2     		sxtb	r2, r3
 991 05dc 6E4B     		ldr	r3, .L82+36
 992 05de 1A70     		strb	r2, [r3]
 993              	.L42:
 291:ui.c          ****                         }
 292:ui.c          ****                         Decoder_1_SetPosition(0);
 994              		.loc 1 292 0
 995 05e0 0020     		movs	r0, #0
 996 05e2 FFF7FEFF 		bl	Decoder_1_SetPosition
 293:ui.c          ****                         
 294:ui.c          ****                         
 295:ui.c          ****                         GFXsetCursor(&theGFX, 84,58);
 997              		.loc 1 295 0
 998 05e6 3A22     		movs	r2, #58
 999 05e8 5421     		movs	r1, #84
 1000 05ea 6A48     		ldr	r0, .L82+32
 1001 05ec FFF7FEFF 		bl	GFXsetCursor
 296:ui.c          ****                         
 297:ui.c          ****                         int8_t presetNumberToStoreTemp = presetNumberToStore;
 1002              		.loc 1 297 0
 1003 05f0 694B     		ldr	r3, .L82+36
 1004 05f2 1B78     		ldrb	r3, [r3]
 1005 05f4 7B77     		strb	r3, [r7, #29]
 298:ui.c          **** 
 299:ui.c          ****                         uint8_t currentChar = ((uint8_t)presetNumberToStoreTemp / 10);    
 1006              		.loc 1 299 0
 1007 05f6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1008 05f8 684A     		ldr	r2, .L82+40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 24


 1009 05fa A2FB0323 		umull	r2, r3, r2, r3
 1010 05fe DB08     		lsrs	r3, r3, #3
 1011 0600 3B77     		strb	r3, [r7, #28]
 300:ui.c          ****                         GFXwrite(&theGFX, currentChar + 48);
 1012              		.loc 1 300 0
 1013 0602 3B7F     		ldrb	r3, [r7, #28]
 1014 0604 3033     		adds	r3, r3, #48
 1015 0606 DBB2     		uxtb	r3, r3
 1016 0608 1946     		mov	r1, r3
 1017 060a 6248     		ldr	r0, .L82+32
 1018 060c FFF7FEFF 		bl	GFXwrite
 301:ui.c          ****                         presetNumberToStoreTemp -= currentChar * 10;
 1019              		.loc 1 301 0
 1020 0610 3B7F     		ldrb	r3, [r7, #28]
 1021 0612 1A46     		mov	r2, r3
 1022 0614 5201     		lsls	r2, r2, #5
 1023 0616 D21A     		subs	r2, r2, r3
 1024 0618 9200     		lsls	r2, r2, #2
 1025 061a D31A     		subs	r3, r2, r3
 1026 061c 5B00     		lsls	r3, r3, #1
 1027 061e DAB2     		uxtb	r2, r3
 1028 0620 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1029 0622 1344     		add	r3, r3, r2
 1030 0624 DBB2     		uxtb	r3, r3
 1031 0626 7B77     		strb	r3, [r7, #29]
 302:ui.c          ****                         currentChar = ((uint8_t)presetNumberToStoreTemp);    
 1032              		.loc 1 302 0
 1033 0628 7B7F     		ldrb	r3, [r7, #29]
 1034 062a 3B77     		strb	r3, [r7, #28]
 303:ui.c          ****                         GFXwrite(&theGFX, currentChar + 48);
 1035              		.loc 1 303 0
 1036 062c 3B7F     		ldrb	r3, [r7, #28]
 1037 062e 3033     		adds	r3, r3, #48
 1038 0630 DBB2     		uxtb	r3, r3
 1039 0632 1946     		mov	r1, r3
 1040 0634 5748     		ldr	r0, .L82+32
 1041 0636 FFF7FEFF 		bl	GFXwrite
 304:ui.c          ****                         mainOLEDWaitingToSend = 1;
 1042              		.loc 1 304 0
 1043 063a 594B     		ldr	r3, .L82+44
 1044 063c 0122     		movs	r2, #1
 1045 063e 1A70     		strb	r2, [r3]
 1046              	.LBE5:
 1047 0640 27E0     		b	.L39
 1048              	.L40:
 1049              	.LBB6:
 305:ui.c          ****                     }
 306:ui.c          ****                     else
 307:ui.c          ****                     {
 308:ui.c          ****                        uint8_t currentChar = presetStoreStage - 1;
 1050              		.loc 1 308 0
 1051 0642 534B     		ldr	r3, .L82+28
 1052 0644 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 0646 013B     		subs	r3, r3, #1
 1054 0648 FB76     		strb	r3, [r7, #27]
 309:ui.c          ****                         newPresetName[currentChar] = newPresetName[currentChar] - (Decoder_1_GetPos
 1055              		.loc 1 309 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 25


 1056 064a FC7E     		ldrb	r4, [r7, #27]	@ zero_extendqisi2
 1057 064c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1058 064e 554A     		ldr	r2, .L82+48
 1059 0650 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 1060 0652 FFF7FEFF 		bl	Decoder_1_GetPosition
 1061 0656 0346     		mov	r3, r0
 1062 0658 DBB2     		uxtb	r3, r3
 1063 065a EB1A     		subs	r3, r5, r3
 1064 065c DAB2     		uxtb	r2, r3
 1065 065e 514B     		ldr	r3, .L82+48
 1066 0660 1A55     		strb	r2, [r3, r4]
 310:ui.c          ****                         Decoder_1_SetPosition(0);
 1067              		.loc 1 310 0
 1068 0662 0020     		movs	r0, #0
 1069 0664 FFF7FEFF 		bl	Decoder_1_SetPosition
 311:ui.c          ****                         OLEDtextColor(1, 0);
 1070              		.loc 1 311 0
 1071 0668 0021     		movs	r1, #0
 1072 066a 0120     		movs	r0, #1
 1073 066c FFF7FEFF 		bl	OLEDtextColor
 312:ui.c          ****                         myGFX_setFont(0);
 1074              		.loc 1 312 0
 1075 0670 0020     		movs	r0, #0
 1076 0672 FFF7FEFF 		bl	myGFX_setFont
 313:ui.c          ****                         GFXsetCursor(&theGFX, 0,50);
 1077              		.loc 1 313 0
 1078 0676 3222     		movs	r2, #50
 1079 0678 0021     		movs	r1, #0
 1080 067a 4648     		ldr	r0, .L82+32
 1081 067c FFF7FEFF 		bl	GFXsetCursor
 314:ui.c          ****                         OLEDwriteString(newPresetName, 14, 0, ThirdLine);
 1082              		.loc 1 314 0
 1083 0680 0223     		movs	r3, #2
 1084 0682 0022     		movs	r2, #0
 1085 0684 0E21     		movs	r1, #14
 1086 0686 4748     		ldr	r0, .L82+48
 1087 0688 FFF7FEFF 		bl	OLEDwriteString
 315:ui.c          ****                         mainOLEDWaitingToSend = 1;
 1088              		.loc 1 315 0
 1089 068c 444B     		ldr	r3, .L82+44
 1090 068e 0122     		movs	r2, #1
 1091 0690 1A70     		strb	r2, [r3]
 1092              	.L39:
 1093              	.LBE6:
 316:ui.c          ****                     }
 317:ui.c          ****                 }
 318:ui.c          ****             }
 319:ui.c          ****             
 320:ui.c          ****             
 321:ui.c          ****             if (menuPosition[0][0] == TransposeMenu) //editing transpose
 1094              		.loc 1 321 0
 1095 0692 3D4B     		ldr	r3, .L82+20
 1096 0694 93F90030 		ldrsb	r3, [r3]
 1097 0698 062B     		cmp	r3, #6
 1098 069a 40F03281 		bne	.L43
 322:ui.c          ****             {
 323:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 26


 1099              		.loc 1 323 0
 1100 069e 3B4B     		ldr	r3, .L82+24
 1101 06a0 93F90030 		ldrsb	r3, [r3]
 1102 06a4 97F91E20 		ldrsb	r2, [r7, #30]
 1103 06a8 9A42     		cmp	r2, r3
 1104 06aa 00F02A81 		beq	.L43
 1105              	.LBB7:
 324:ui.c          ****                 {
 325:ui.c          ****                     OLEDtextColor(1, 0);
 1106              		.loc 1 325 0
 1107 06ae 0021     		movs	r1, #0
 1108 06b0 0120     		movs	r0, #1
 1109 06b2 FFF7FEFF 		bl	OLEDtextColor
 326:ui.c          ****                     OLEDclearLine(ThirdLine);
 1110              		.loc 1 326 0
 1111 06b6 0220     		movs	r0, #2
 1112 06b8 FFF7FEFF 		bl	OLEDclearLine
 327:ui.c          ****                     OLEDclearLine(FourthLine);
 1113              		.loc 1 327 0
 1114 06bc 0320     		movs	r0, #3
 1115 06be FFF7FEFF 		bl	OLEDclearLine
 328:ui.c          ****                     float theMultiplier = 1.0f;
 1116              		.loc 1 328 0
 1117 06c2 4FF07E53 		mov	r3, #1065353216
 1118 06c6 7B62     		str	r3, [r7, #36]	@ float
 329:ui.c          ****                     if (semitonesOrCents == 1)
 1119              		.loc 1 329 0
 1120 06c8 374B     		ldr	r3, .L82+52
 1121 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1122 06cc 012B     		cmp	r3, #1
 1123 06ce 01D1     		bne	.L44
 330:ui.c          ****                     {
 331:ui.c          ****                         theMultiplier = 0.01f;
 1124              		.loc 1 331 0
 1125 06d0 364B     		ldr	r3, .L82+56
 1126 06d2 7B62     		str	r3, [r7, #36]	@ float
 1127              	.L44:
 332:ui.c          ****                     }
 333:ui.c          ****                     myGFX_setFont(1);
 1128              		.loc 1 333 0
 1129 06d4 0120     		movs	r0, #1
 1130 06d6 FFF7FEFF 		bl	myGFX_setFont
 334:ui.c          ****                     transposeFloat = transposeFloat - (((float)Decoder_1_GetPosition()) * theMultip
 1131              		.loc 1 334 0
 1132 06da 354B     		ldr	r3, .L82+60
 1133 06dc 1C68     		ldr	r4, [r3]	@ float
 1134 06de FFF7FEFF 		bl	Decoder_1_GetPosition
 1135 06e2 0346     		mov	r3, r0
 1136 06e4 1846     		mov	r0, r3
 1137 06e6 FFF7FEFF 		bl	__aeabi_i2f
 1138 06ea 0346     		mov	r3, r0
 1139 06ec 796A     		ldr	r1, [r7, #36]	@ float
 1140 06ee 1846     		mov	r0, r3
 1141 06f0 FFF7FEFF 		bl	__aeabi_fmul
 1142 06f4 0346     		mov	r3, r0
 1143 06f6 1946     		mov	r1, r3
 1144 06f8 2046     		mov	r0, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 27


 1145 06fa FFF7FEFF 		bl	__aeabi_fsub
 1146 06fe 0346     		mov	r3, r0
 1147 0700 1A46     		mov	r2, r3
 1148 0702 2B4B     		ldr	r3, .L82+60
 1149 0704 1A60     		str	r2, [r3]	@ float
 335:ui.c          ****                     Decoder_1_SetPosition(0);
 1150              		.loc 1 335 0
 1151 0706 0020     		movs	r0, #0
 1152 0708 FFF7FEFF 		bl	Decoder_1_SetPosition
 336:ui.c          ****                     if (transposeFloat < -12.0)
 1153              		.loc 1 336 0
 1154 070c 284B     		ldr	r3, .L82+60
 1155 070e 1B68     		ldr	r3, [r3]	@ float
 1156 0710 2849     		ldr	r1, .L82+64
 1157 0712 1846     		mov	r0, r3
 1158 0714 FFF7FEFF 		bl	__aeabi_fcmplt
 1159 0718 0346     		mov	r3, r0
 1160 071a 002B     		cmp	r3, #0
 1161 071c 03D0     		beq	.L74
 337:ui.c          ****                     {
 338:ui.c          ****                         transposeFloat = -12.0;
 1162              		.loc 1 338 0
 1163 071e 244B     		ldr	r3, .L82+60
 1164 0720 244A     		ldr	r2, .L82+64
 1165 0722 1A60     		str	r2, [r3]	@ float
 1166 0724 0BE0     		b	.L47
 1167              	.L74:
 339:ui.c          ****                     }
 340:ui.c          ****                     else if (transposeFloat > 12.0)
 1168              		.loc 1 340 0
 1169 0726 224B     		ldr	r3, .L82+60
 1170 0728 1B68     		ldr	r3, [r3]	@ float
 1171 072a 2349     		ldr	r1, .L82+68
 1172 072c 1846     		mov	r0, r3
 1173 072e FFF7FEFF 		bl	__aeabi_fcmpgt
 1174 0732 0346     		mov	r3, r0
 1175 0734 002B     		cmp	r3, #0
 1176 0736 02D0     		beq	.L47
 341:ui.c          ****                     {
 342:ui.c          ****                         transposeFloat = 12.0;
 1177              		.loc 1 342 0
 1178 0738 1D4B     		ldr	r3, .L82+60
 1179 073a 1F4A     		ldr	r2, .L82+68
 1180 073c 1A60     		str	r2, [r3]	@ float
 1181              	.L47:
 343:ui.c          ****                     }
 344:ui.c          ****                     float absTransposeFloat = transposeFloat;
 1182              		.loc 1 344 0
 1183 073e 1C4B     		ldr	r3, .L82+60
 1184 0740 1B68     		ldr	r3, [r3]	@ float
 1185 0742 3B62     		str	r3, [r7, #32]	@ float
 345:ui.c          ****                     GFXsetCursor(&theGFX, 20,53);
 1186              		.loc 1 345 0
 1187 0744 3522     		movs	r2, #53
 1188 0746 1421     		movs	r1, #20
 1189 0748 1248     		ldr	r0, .L82+32
 1190 074a FFF7FEFF 		bl	GFXsetCursor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 28


 346:ui.c          ****                     if (transposeFloat < 0.0f)
 1191              		.loc 1 346 0
 1192 074e 184B     		ldr	r3, .L82+60
 1193 0750 1B68     		ldr	r3, [r3]	@ float
 1194 0752 4FF00001 		mov	r1, #0
 1195 0756 1846     		mov	r0, r3
 1196 0758 FFF7FEFF 		bl	__aeabi_fcmplt
 1197 075c 0346     		mov	r3, r0
 1198 075e 002B     		cmp	r3, #0
 1199 0760 2CD0     		beq	.L75
 347:ui.c          ****                     {
 348:ui.c          ****                         GFXwrite(&theGFX, 45);
 1200              		.loc 1 348 0
 1201 0762 2D21     		movs	r1, #45
 1202 0764 0B48     		ldr	r0, .L82+32
 1203 0766 FFF7FEFF 		bl	GFXwrite
 349:ui.c          ****                         absTransposeFloat = -absTransposeFloat;
 1204              		.loc 1 349 0
 1205 076a 3B6A     		ldr	r3, [r7, #32]
 1206 076c 83F00043 		eor	r3, r3, #-2147483648
 1207 0770 3B62     		str	r3, [r7, #32]	@ float
 1208 0772 27E0     		b	.L51
 1209              	.L83:
 1210              		.align	2
 1211              	.L82:
 1212 0774 00000000 		.word	encoderUp
 1213 0778 00000000 		.word	octave
 1214 077c 00000000 		.word	prevOctave
 1215 0780 00000000 		.word	editMode
 1216 0784 00000000 		.word	encoderWatch
 1217 0788 00000000 		.word	menuPosition
 1218 078c 00000000 		.word	prevEncoderVal
 1219 0790 00000000 		.word	presetStoreStage
 1220 0794 00000000 		.word	theGFX
 1221 0798 00000000 		.word	presetNumberToStore
 1222 079c CDCCCCCC 		.word	-858993459
 1223 07a0 00000000 		.word	mainOLEDWaitingToSend
 1224 07a4 00000000 		.word	newPresetName
 1225 07a8 00000000 		.word	semitonesOrCents
 1226 07ac 0AD7233C 		.word	1008981770
 1227 07b0 00000000 		.word	transposeFloat
 1228 07b4 000040C1 		.word	-1052770304
 1229 07b8 00004041 		.word	1094713344
 1230              	.L75:
 350:ui.c          ****                     }
 351:ui.c          ****                     else
 352:ui.c          ****                     {
 353:ui.c          ****                         GFXwrite(&theGFX, 32);
 1231              		.loc 1 353 0
 1232 07bc 2021     		movs	r1, #32
 1233 07be C148     		ldr	r0, .L84
 1234 07c0 FFF7FEFF 		bl	GFXwrite
 1235              	.L51:
 354:ui.c          ****                     }
 355:ui.c          ****                     if (!semitonesOrCents)
 1236              		.loc 1 355 0
 1237 07c4 C04B     		ldr	r3, .L84+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 29


 1238 07c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 07c8 002B     		cmp	r3, #0
 1240 07ca 0ED1     		bne	.L52
 356:ui.c          ****                     {
 357:ui.c          ****                         OLEDtextColor(0, 1);
 1241              		.loc 1 357 0
 1242 07cc 0121     		movs	r1, #1
 1243 07ce 0020     		movs	r0, #0
 1244 07d0 FFF7FEFF 		bl	OLEDtextColor
 358:ui.c          ****                         GFXfillRect(&theGFX, 32, 34, 30, 25, theGFX.textbgcolor);
 1245              		.loc 1 358 0
 1246 07d4 BB4B     		ldr	r3, .L84
 1247 07d6 5B8A     		ldrh	r3, [r3, #18]
 1248 07d8 0193     		str	r3, [sp, #4]
 1249 07da 1923     		movs	r3, #25
 1250 07dc 0093     		str	r3, [sp]
 1251 07de 1E23     		movs	r3, #30
 1252 07e0 2222     		movs	r2, #34
 1253 07e2 2021     		movs	r1, #32
 1254 07e4 B748     		ldr	r0, .L84
 1255 07e6 FFF7FEFF 		bl	GFXfillRect
 1256              	.L52:
 359:ui.c          ****                     }
 360:ui.c          **** 
 361:ui.c          ****                     uint8_t currentChar = ((uint8_t)(absTransposeFloat * 0.1f));  
 1257              		.loc 1 361 0
 1258 07ea B849     		ldr	r1, .L84+8
 1259 07ec 386A     		ldr	r0, [r7, #32]	@ float
 1260 07ee FFF7FEFF 		bl	__aeabi_fmul
 1261 07f2 0346     		mov	r3, r0
 1262 07f4 1846     		mov	r0, r3
 1263 07f6 FFF7FEFF 		bl	__aeabi_f2uiz
 1264 07fa 0346     		mov	r3, r0
 1265 07fc BB76     		strb	r3, [r7, #26]
 362:ui.c          ****                     absTransposeFloat -= currentChar * 10.0f;
 1266              		.loc 1 362 0
 1267 07fe BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1268 0800 1846     		mov	r0, r3
 1269 0802 FFF7FEFF 		bl	__aeabi_i2f
 1270 0806 0346     		mov	r3, r0
 1271 0808 B149     		ldr	r1, .L84+12
 1272 080a 1846     		mov	r0, r3
 1273 080c FFF7FEFF 		bl	__aeabi_fmul
 1274 0810 0346     		mov	r3, r0
 1275 0812 1946     		mov	r1, r3
 1276 0814 386A     		ldr	r0, [r7, #32]	@ float
 1277 0816 FFF7FEFF 		bl	__aeabi_fsub
 1278 081a 0346     		mov	r3, r0
 1279 081c 3B62     		str	r3, [r7, #32]	@ float
 363:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1280              		.loc 1 363 0
 1281 081e BB7E     		ldrb	r3, [r7, #26]
 1282 0820 3033     		adds	r3, r3, #48
 1283 0822 DBB2     		uxtb	r3, r3
 1284 0824 1946     		mov	r1, r3
 1285 0826 A748     		ldr	r0, .L84
 1286 0828 FFF7FEFF 		bl	GFXwrite
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 30


 364:ui.c          ****                     currentChar = ((uint8_t)absTransposeFloat);    
 1287              		.loc 1 364 0
 1288 082c 386A     		ldr	r0, [r7, #32]	@ float
 1289 082e FFF7FEFF 		bl	__aeabi_f2uiz
 1290 0832 0346     		mov	r3, r0
 1291 0834 BB76     		strb	r3, [r7, #26]
 365:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1292              		.loc 1 365 0
 1293 0836 BB7E     		ldrb	r3, [r7, #26]
 1294 0838 3033     		adds	r3, r3, #48
 1295 083a DBB2     		uxtb	r3, r3
 1296 083c 1946     		mov	r1, r3
 1297 083e A148     		ldr	r0, .L84
 1298 0840 FFF7FEFF 		bl	GFXwrite
 366:ui.c          ****                     OLEDtextColor(1, 0);
 1299              		.loc 1 366 0
 1300 0844 0021     		movs	r1, #0
 1301 0846 0120     		movs	r0, #1
 1302 0848 FFF7FEFF 		bl	OLEDtextColor
 367:ui.c          **** 
 368:ui.c          ****                     GFXwrite(&theGFX, 46); //decimal point
 1303              		.loc 1 368 0
 1304 084c 2E21     		movs	r1, #46
 1305 084e 9D48     		ldr	r0, .L84
 1306 0850 FFF7FEFF 		bl	GFXwrite
 369:ui.c          ****                     if (semitonesOrCents)
 1307              		.loc 1 369 0
 1308 0854 9C4B     		ldr	r3, .L84+4
 1309 0856 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1310 0858 002B     		cmp	r3, #0
 1311 085a 0ED0     		beq	.L53
 370:ui.c          ****                     {
 371:ui.c          ****                         OLEDtextColor(0, 1);
 1312              		.loc 1 371 0
 1313 085c 0121     		movs	r1, #1
 1314 085e 0020     		movs	r0, #0
 1315 0860 FFF7FEFF 		bl	OLEDtextColor
 372:ui.c          ****                         GFXfillRect(&theGFX, 70, 34, 30, 25, theGFX.textbgcolor);
 1316              		.loc 1 372 0
 1317 0864 974B     		ldr	r3, .L84
 1318 0866 5B8A     		ldrh	r3, [r3, #18]
 1319 0868 0193     		str	r3, [sp, #4]
 1320 086a 1923     		movs	r3, #25
 1321 086c 0093     		str	r3, [sp]
 1322 086e 1E23     		movs	r3, #30
 1323 0870 2222     		movs	r2, #34
 1324 0872 4621     		movs	r1, #70
 1325 0874 9348     		ldr	r0, .L84
 1326 0876 FFF7FEFF 		bl	GFXfillRect
 1327              	.L53:
 373:ui.c          ****                     }
 374:ui.c          ****                     absTransposeFloat -= currentChar;
 1328              		.loc 1 374 0
 1329 087a BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1330 087c 1846     		mov	r0, r3
 1331 087e FFF7FEFF 		bl	__aeabi_i2f
 1332 0882 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 31


 1333 0884 1946     		mov	r1, r3
 1334 0886 386A     		ldr	r0, [r7, #32]	@ float
 1335 0888 FFF7FEFF 		bl	__aeabi_fsub
 1336 088c 0346     		mov	r3, r0
 1337 088e 3B62     		str	r3, [r7, #32]	@ float
 375:ui.c          ****                     currentChar = ((uint8_t)(absTransposeFloat * 10.0f));    
 1338              		.loc 1 375 0
 1339 0890 8F49     		ldr	r1, .L84+12
 1340 0892 386A     		ldr	r0, [r7, #32]	@ float
 1341 0894 FFF7FEFF 		bl	__aeabi_fmul
 1342 0898 0346     		mov	r3, r0
 1343 089a 1846     		mov	r0, r3
 1344 089c FFF7FEFF 		bl	__aeabi_f2uiz
 1345 08a0 0346     		mov	r3, r0
 1346 08a2 BB76     		strb	r3, [r7, #26]
 376:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1347              		.loc 1 376 0
 1348 08a4 BB7E     		ldrb	r3, [r7, #26]
 1349 08a6 3033     		adds	r3, r3, #48
 1350 08a8 DBB2     		uxtb	r3, r3
 1351 08aa 1946     		mov	r1, r3
 1352 08ac 8548     		ldr	r0, .L84
 1353 08ae FFF7FEFF 		bl	GFXwrite
 377:ui.c          ****                     absTransposeFloat -= (currentChar * 0.1f);
 1354              		.loc 1 377 0
 1355 08b2 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1356 08b4 1846     		mov	r0, r3
 1357 08b6 FFF7FEFF 		bl	__aeabi_i2f
 1358 08ba 0346     		mov	r3, r0
 1359 08bc 8349     		ldr	r1, .L84+8
 1360 08be 1846     		mov	r0, r3
 1361 08c0 FFF7FEFF 		bl	__aeabi_fmul
 1362 08c4 0346     		mov	r3, r0
 1363 08c6 1946     		mov	r1, r3
 1364 08c8 386A     		ldr	r0, [r7, #32]	@ float
 1365 08ca FFF7FEFF 		bl	__aeabi_fsub
 1366 08ce 0346     		mov	r3, r0
 1367 08d0 3B62     		str	r3, [r7, #32]	@ float
 378:ui.c          ****                     currentChar = ((uint8_t)(absTransposeFloat * 100.0f));    
 1368              		.loc 1 378 0
 1369 08d2 8049     		ldr	r1, .L84+16
 1370 08d4 386A     		ldr	r0, [r7, #32]	@ float
 1371 08d6 FFF7FEFF 		bl	__aeabi_fmul
 1372 08da 0346     		mov	r3, r0
 1373 08dc 1846     		mov	r0, r3
 1374 08de FFF7FEFF 		bl	__aeabi_f2uiz
 1375 08e2 0346     		mov	r3, r0
 1376 08e4 BB76     		strb	r3, [r7, #26]
 379:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1377              		.loc 1 379 0
 1378 08e6 BB7E     		ldrb	r3, [r7, #26]
 1379 08e8 3033     		adds	r3, r3, #48
 1380 08ea DBB2     		uxtb	r3, r3
 1381 08ec 1946     		mov	r1, r3
 1382 08ee 7548     		ldr	r0, .L84
 1383 08f0 FFF7FEFF 		bl	GFXwrite
 380:ui.c          ****                     OLEDtextColor(1, 0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 32


 1384              		.loc 1 380 0
 1385 08f4 0021     		movs	r1, #0
 1386 08f6 0120     		movs	r0, #1
 1387 08f8 FFF7FEFF 		bl	OLEDtextColor
 381:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1388              		.loc 1 381 0
 1389 08fc 764B     		ldr	r3, .L84+20
 1390 08fe 0122     		movs	r2, #1
 1391 0900 1A70     		strb	r2, [r3]
 1392              	.L43:
 1393              	.LBE7:
 382:ui.c          ****                 }
 383:ui.c          ****             }
 384:ui.c          ****             if (menuPosition[0][0] == VolumeMenu) //editing volume
 1394              		.loc 1 384 0
 1395 0902 764B     		ldr	r3, .L84+24
 1396 0904 93F90030 		ldrsb	r3, [r3]
 1397 0908 0C2B     		cmp	r3, #12
 1398 090a 40F0A180 		bne	.L54
 385:ui.c          ****             {
 386:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1399              		.loc 1 386 0
 1400 090e 744B     		ldr	r3, .L84+28
 1401 0910 93F90030 		ldrsb	r3, [r3]
 1402 0914 97F91E20 		ldrsb	r2, [r7, #30]
 1403 0918 9A42     		cmp	r2, r3
 1404 091a 00F09980 		beq	.L54
 1405              	.LBB8:
 387:ui.c          ****                 {
 388:ui.c          ****                     OLEDtextColor(1, 0);
 1406              		.loc 1 388 0
 1407 091e 0021     		movs	r1, #0
 1408 0920 0120     		movs	r0, #1
 1409 0922 FFF7FEFF 		bl	OLEDtextColor
 389:ui.c          ****                     OLEDclearLine(ThirdLine);
 1410              		.loc 1 389 0
 1411 0926 0220     		movs	r0, #2
 1412 0928 FFF7FEFF 		bl	OLEDclearLine
 390:ui.c          ****                     OLEDclearLine(FourthLine);
 1413              		.loc 1 390 0
 1414 092c 0320     		movs	r0, #3
 1415 092e FFF7FEFF 		bl	OLEDclearLine
 391:ui.c          ****                     float theMultiplier = 1.0f;
 1416              		.loc 1 391 0
 1417 0932 4FF07E53 		mov	r3, #1065353216
 1418 0936 7B61     		str	r3, [r7, #20]	@ float
 392:ui.c          ****  
 393:ui.c          ****                     myGFX_setFont(1);
 1419              		.loc 1 393 0
 1420 0938 0120     		movs	r0, #1
 1421 093a FFF7FEFF 		bl	myGFX_setFont
 394:ui.c          ****                     volumeInt = volumeInt - (Decoder_1_GetPosition());
 1422              		.loc 1 394 0
 1423 093e 694B     		ldr	r3, .L84+32
 1424 0940 93F90030 		ldrsb	r3, [r3]
 1425 0944 DCB2     		uxtb	r4, r3
 1426 0946 FFF7FEFF 		bl	Decoder_1_GetPosition
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 33


 1427 094a 0346     		mov	r3, r0
 1428 094c DBB2     		uxtb	r3, r3
 1429 094e E31A     		subs	r3, r4, r3
 1430 0950 DBB2     		uxtb	r3, r3
 1431 0952 5AB2     		sxtb	r2, r3
 1432 0954 634B     		ldr	r3, .L84+32
 1433 0956 1A70     		strb	r2, [r3]
 395:ui.c          ****                     Decoder_1_SetPosition(0);
 1434              		.loc 1 395 0
 1435 0958 0020     		movs	r0, #0
 1436 095a FFF7FEFF 		bl	Decoder_1_SetPosition
 396:ui.c          ****                     if (volumeInt < 0.0)
 1437              		.loc 1 396 0
 1438 095e 614B     		ldr	r3, .L84+32
 1439 0960 93F90030 		ldrsb	r3, [r3]
 1440 0964 1846     		mov	r0, r3
 1441 0966 FFF7FEFF 		bl	__aeabi_i2d
 1442 096a 4FF00002 		mov	r2, #0
 1443 096e 4FF00003 		mov	r3, #0
 1444 0972 FFF7FEFF 		bl	__aeabi_dcmplt
 1445 0976 0346     		mov	r3, r0
 1446 0978 002B     		cmp	r3, #0
 1447 097a 03D0     		beq	.L76
 397:ui.c          ****                     {
 398:ui.c          ****                         volumeInt = 0.0;
 1448              		.loc 1 398 0
 1449 097c 594B     		ldr	r3, .L84+32
 1450 097e 0022     		movs	r2, #0
 1451 0980 1A70     		strb	r2, [r3]
 1452 0982 10E0     		b	.L57
 1453              	.L76:
 399:ui.c          ****                     }
 400:ui.c          ****                     else if (volumeInt > 100.0)
 1454              		.loc 1 400 0
 1455 0984 574B     		ldr	r3, .L84+32
 1456 0986 93F90030 		ldrsb	r3, [r3]
 1457 098a 1846     		mov	r0, r3
 1458 098c FFF7FEFF 		bl	__aeabi_i2d
 1459 0990 4FF00002 		mov	r2, #0
 1460 0994 544B     		ldr	r3, .L84+36
 1461 0996 FFF7FEFF 		bl	__aeabi_dcmpgt
 1462 099a 0346     		mov	r3, r0
 1463 099c 002B     		cmp	r3, #0
 1464 099e 02D0     		beq	.L57
 401:ui.c          ****                     {
 402:ui.c          ****                         volumeInt = 100.0;
 1465              		.loc 1 402 0
 1466 09a0 504B     		ldr	r3, .L84+32
 1467 09a2 6422     		movs	r2, #100
 1468 09a4 1A70     		strb	r2, [r3]
 1469              	.L57:
 403:ui.c          ****                     }
 404:ui.c          ****                     OLEDtextColor(1, 0);
 1470              		.loc 1 404 0
 1471 09a6 0021     		movs	r1, #0
 1472 09a8 0120     		movs	r0, #1
 1473 09aa FFF7FEFF 		bl	OLEDtextColor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 34


 405:ui.c          ****                     GFXsetCursor(&theGFX, 20,53);
 1474              		.loc 1 405 0
 1475 09ae 3522     		movs	r2, #53
 1476 09b0 1421     		movs	r1, #20
 1477 09b2 4448     		ldr	r0, .L84
 1478 09b4 FFF7FEFF 		bl	GFXsetCursor
 406:ui.c          ****                     GFXwrite(&theGFX, 32);
 1479              		.loc 1 406 0
 1480 09b8 2021     		movs	r1, #32
 1481 09ba 4248     		ldr	r0, .L84
 1482 09bc FFF7FEFF 		bl	GFXwrite
 407:ui.c          ****                     
 408:ui.c          ****                     int8_t volumeIntTemp = volumeInt;
 1483              		.loc 1 408 0
 1484 09c0 484B     		ldr	r3, .L84+32
 1485 09c2 1B78     		ldrb	r3, [r3]
 1486 09c4 FB74     		strb	r3, [r7, #19]
 409:ui.c          ****                     uint8_t currentChar = ((uint8_t)(volumeIntTemp / 100));  
 1487              		.loc 1 409 0
 1488 09c6 97F91330 		ldrsb	r3, [r7, #19]
 1489 09ca 484A     		ldr	r2, .L84+40
 1490 09cc 82FB0312 		smull	r1, r2, r2, r3
 1491 09d0 5211     		asrs	r2, r2, #5
 1492 09d2 DB17     		asrs	r3, r3, #31
 1493 09d4 D31A     		subs	r3, r2, r3
 1494 09d6 5BB2     		sxtb	r3, r3
 1495 09d8 BB74     		strb	r3, [r7, #18]
 410:ui.c          ****                     volumeIntTemp -= currentChar * 100;
 1496              		.loc 1 410 0
 1497 09da BB7C     		ldrb	r3, [r7, #18]
 1498 09dc 1A46     		mov	r2, r3
 1499 09de 9200     		lsls	r2, r2, #2
 1500 09e0 1A44     		add	r2, r2, r3
 1501 09e2 D200     		lsls	r2, r2, #3
 1502 09e4 D31A     		subs	r3, r2, r3
 1503 09e6 9B00     		lsls	r3, r3, #2
 1504 09e8 DAB2     		uxtb	r2, r3
 1505 09ea FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1506 09ec 1344     		add	r3, r3, r2
 1507 09ee DBB2     		uxtb	r3, r3
 1508 09f0 FB74     		strb	r3, [r7, #19]
 411:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1509              		.loc 1 411 0
 1510 09f2 BB7C     		ldrb	r3, [r7, #18]
 1511 09f4 3033     		adds	r3, r3, #48
 1512 09f6 DBB2     		uxtb	r3, r3
 1513 09f8 1946     		mov	r1, r3
 1514 09fa 3248     		ldr	r0, .L84
 1515 09fc FFF7FEFF 		bl	GFXwrite
 412:ui.c          ****                     currentChar = ((uint8_t)volumeIntTemp / 10);    
 1516              		.loc 1 412 0
 1517 0a00 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1518 0a02 3B4A     		ldr	r2, .L84+44
 1519 0a04 A2FB0323 		umull	r2, r3, r2, r3
 1520 0a08 DB08     		lsrs	r3, r3, #3
 1521 0a0a BB74     		strb	r3, [r7, #18]
 413:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 35


 1522              		.loc 1 413 0
 1523 0a0c BB7C     		ldrb	r3, [r7, #18]
 1524 0a0e 3033     		adds	r3, r3, #48
 1525 0a10 DBB2     		uxtb	r3, r3
 1526 0a12 1946     		mov	r1, r3
 1527 0a14 2B48     		ldr	r0, .L84
 1528 0a16 FFF7FEFF 		bl	GFXwrite
 414:ui.c          ****                     volumeIntTemp -= currentChar * 10;
 1529              		.loc 1 414 0
 1530 0a1a BB7C     		ldrb	r3, [r7, #18]
 1531 0a1c 1A46     		mov	r2, r3
 1532 0a1e 5201     		lsls	r2, r2, #5
 1533 0a20 D21A     		subs	r2, r2, r3
 1534 0a22 9200     		lsls	r2, r2, #2
 1535 0a24 D31A     		subs	r3, r2, r3
 1536 0a26 5B00     		lsls	r3, r3, #1
 1537 0a28 DAB2     		uxtb	r2, r3
 1538 0a2a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1539 0a2c 1344     		add	r3, r3, r2
 1540 0a2e DBB2     		uxtb	r3, r3
 1541 0a30 FB74     		strb	r3, [r7, #19]
 415:ui.c          ****                     currentChar = ((uint8_t)volumeIntTemp);    
 1542              		.loc 1 415 0
 1543 0a32 FB7C     		ldrb	r3, [r7, #19]
 1544 0a34 BB74     		strb	r3, [r7, #18]
 416:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1545              		.loc 1 416 0
 1546 0a36 BB7C     		ldrb	r3, [r7, #18]
 1547 0a38 3033     		adds	r3, r3, #48
 1548 0a3a DBB2     		uxtb	r3, r3
 1549 0a3c 1946     		mov	r1, r3
 1550 0a3e 2148     		ldr	r0, .L84
 1551 0a40 FFF7FEFF 		bl	GFXwrite
 417:ui.c          ****                     volumeWaitingToSend = 1;
 1552              		.loc 1 417 0
 1553 0a44 2B4B     		ldr	r3, .L84+48
 1554 0a46 0122     		movs	r2, #1
 1555 0a48 1A70     		strb	r2, [r3]
 418:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1556              		.loc 1 418 0
 1557 0a4a 234B     		ldr	r3, .L84+20
 1558 0a4c 0122     		movs	r2, #1
 1559 0a4e 1A70     		strb	r2, [r3]
 1560              	.L54:
 1561              	.LBE8:
 419:ui.c          ****                 }
 420:ui.c          ****             }
 421:ui.c          ****             if (menuPosition[0][0] == DeadzonesMenu) //editing deadzones
 1562              		.loc 1 421 0
 1563 0a50 224B     		ldr	r3, .L84+24
 1564 0a52 93F90030 		ldrsb	r3, [r3]
 1565 0a56 082B     		cmp	r3, #8
 1566 0a58 40F0E080 		bne	.L59
 422:ui.c          ****             {
 423:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1567              		.loc 1 423 0
 1568 0a5c 204B     		ldr	r3, .L84+28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 36


 1569 0a5e 93F90030 		ldrsb	r3, [r3]
 1570 0a62 97F91E20 		ldrsb	r2, [r7, #30]
 1571 0a66 9A42     		cmp	r2, r3
 1572 0a68 00F0D880 		beq	.L59
 1573              	.LBB9:
 424:ui.c          ****                 {
 425:ui.c          ****                     OLEDtextColor(1, 0);
 1574              		.loc 1 425 0
 1575 0a6c 0021     		movs	r1, #0
 1576 0a6e 0120     		movs	r0, #1
 1577 0a70 FFF7FEFF 		bl	OLEDtextColor
 426:ui.c          ****                     OLEDclearLine(ThirdLine);
 1578              		.loc 1 426 0
 1579 0a74 0220     		movs	r0, #2
 1580 0a76 FFF7FEFF 		bl	OLEDclearLine
 427:ui.c          ****                     OLEDclearLine(FourthLine);
 1581              		.loc 1 427 0
 1582 0a7a 0320     		movs	r0, #3
 1583 0a7c FFF7FEFF 		bl	OLEDclearLine
 428:ui.c          ****                     
 429:ui.c          ****                     myGFX_setFont(1);
 1584              		.loc 1 429 0
 1585 0a80 0120     		movs	r0, #1
 1586 0a82 FFF7FEFF 		bl	myGFX_setFont
 430:ui.c          ****                     int16_t deadZoneTemp = deadZone;
 1587              		.loc 1 430 0
 1588 0a86 1C4B     		ldr	r3, .L84+52
 1589 0a88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 0a8a 3B82     		strh	r3, [r7, #16]	@ movhi
 431:ui.c          ****                     
 432:ui.c          ****                     deadZoneTemp = deadZoneTemp - Decoder_1_GetPosition();
 1591              		.loc 1 432 0
 1592 0a8c 3C8A     		ldrh	r4, [r7, #16]
 1593 0a8e FFF7FEFF 		bl	Decoder_1_GetPosition
 1594 0a92 0346     		mov	r3, r0
 1595 0a94 9BB2     		uxth	r3, r3
 1596 0a96 E31A     		subs	r3, r4, r3
 1597 0a98 9BB2     		uxth	r3, r3
 1598 0a9a 3B82     		strh	r3, [r7, #16]	@ movhi
 433:ui.c          ****                     Decoder_1_SetPosition(0);
 1599              		.loc 1 433 0
 1600 0a9c 0020     		movs	r0, #0
 1601 0a9e FFF7FEFF 		bl	Decoder_1_SetPosition
 434:ui.c          ****                     if (deadZoneTemp < 0)
 1602              		.loc 1 434 0
 1603 0aa2 B7F91030 		ldrsh	r3, [r7, #16]
 1604 0aa6 002B     		cmp	r3, #0
 1605 0aa8 03DA     		bge	.L60
 435:ui.c          ****                     {
 436:ui.c          ****                         deadZone = 0;
 1606              		.loc 1 436 0
 1607 0aaa 134B     		ldr	r3, .L84+52
 1608 0aac 0022     		movs	r2, #0
 1609 0aae 1A70     		strb	r2, [r3]
 1610 0ab0 28E0     		b	.L61
 1611              	.L60:
 437:ui.c          ****                     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 37


 438:ui.c          ****                     else if (deadZoneTemp > 100)
 1612              		.loc 1 438 0
 1613 0ab2 B7F91030 		ldrsh	r3, [r7, #16]
 1614 0ab6 642B     		cmp	r3, #100
 1615 0ab8 20DD     		ble	.L62
 439:ui.c          ****                     {
 440:ui.c          ****                         deadZone = 100;
 1616              		.loc 1 440 0
 1617 0aba 0F4B     		ldr	r3, .L84+52
 1618 0abc 6422     		movs	r2, #100
 1619 0abe 1A70     		strb	r2, [r3]
 1620 0ac0 20E0     		b	.L61
 1621              	.L85:
 1622 0ac2 00BF     		.align	2
 1623              	.L84:
 1624 0ac4 00000000 		.word	theGFX
 1625 0ac8 00000000 		.word	semitonesOrCents
 1626 0acc CDCCCC3D 		.word	1036831949
 1627 0ad0 00002041 		.word	1092616192
 1628 0ad4 0000C842 		.word	1120403456
 1629 0ad8 00000000 		.word	mainOLEDWaitingToSend
 1630 0adc 00000000 		.word	menuPosition
 1631 0ae0 00000000 		.word	prevEncoderVal
 1632 0ae4 00000000 		.word	volumeInt
 1633 0ae8 00005940 		.word	1079574528
 1634 0aec 1F85EB51 		.word	1374389535
 1635 0af0 CDCCCCCC 		.word	-858993459
 1636 0af4 00000000 		.word	volumeWaitingToSend
 1637 0af8 00000000 		.word	deadZone
 1638              	.L62:
 441:ui.c          ****                     }
 442:ui.c          ****                     else 
 443:ui.c          ****                     {
 444:ui.c          ****                         deadZone = deadZoneTemp;
 1639              		.loc 1 444 0
 1640 0afc 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 1641 0afe DAB2     		uxtb	r2, r3
 1642 0b00 B34B     		ldr	r3, .L86
 1643 0b02 1A70     		strb	r2, [r3]
 1644              	.L61:
 445:ui.c          ****                     }
 446:ui.c          ****                     calculatePedalRatios();
 1645              		.loc 1 446 0
 1646 0b04 FFF7FEFF 		bl	calculatePedalRatios
 447:ui.c          ****                     GFXsetCursor(&theGFX, 30,53);
 1647              		.loc 1 447 0
 1648 0b08 3522     		movs	r2, #53
 1649 0b0a 1E21     		movs	r1, #30
 1650 0b0c B148     		ldr	r0, .L86+4
 1651 0b0e FFF7FEFF 		bl	GFXsetCursor
 448:ui.c          ****                     
 449:ui.c          ****                     float deadZoneRepresentation = (float)(deadZone) * 0.2f;
 1652              		.loc 1 449 0
 1653 0b12 AF4B     		ldr	r3, .L86
 1654 0b14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1655 0b16 1846     		mov	r0, r3
 1656 0b18 FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 38


 1657 0b1c 0346     		mov	r3, r0
 1658 0b1e AE49     		ldr	r1, .L86+8
 1659 0b20 1846     		mov	r0, r3
 1660 0b22 FFF7FEFF 		bl	__aeabi_fmul
 1661 0b26 0346     		mov	r3, r0
 1662 0b28 FB60     		str	r3, [r7, #12]	@ float
 450:ui.c          ****                     
 451:ui.c          ****                     uint8_t currentChar = ((uint8_t)(deadZoneRepresentation * 0.1f));  
 1663              		.loc 1 451 0
 1664 0b2a AC49     		ldr	r1, .L86+12
 1665 0b2c F868     		ldr	r0, [r7, #12]	@ float
 1666 0b2e FFF7FEFF 		bl	__aeabi_fmul
 1667 0b32 0346     		mov	r3, r0
 1668 0b34 1846     		mov	r0, r3
 1669 0b36 FFF7FEFF 		bl	__aeabi_f2uiz
 1670 0b3a 0346     		mov	r3, r0
 1671 0b3c FB72     		strb	r3, [r7, #11]
 452:ui.c          ****                     deadZoneRepresentation -= currentChar * 10.0f;
 1672              		.loc 1 452 0
 1673 0b3e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1674 0b40 1846     		mov	r0, r3
 1675 0b42 FFF7FEFF 		bl	__aeabi_i2f
 1676 0b46 0346     		mov	r3, r0
 1677 0b48 A549     		ldr	r1, .L86+16
 1678 0b4a 1846     		mov	r0, r3
 1679 0b4c FFF7FEFF 		bl	__aeabi_fmul
 1680 0b50 0346     		mov	r3, r0
 1681 0b52 1946     		mov	r1, r3
 1682 0b54 F868     		ldr	r0, [r7, #12]	@ float
 1683 0b56 FFF7FEFF 		bl	__aeabi_fsub
 1684 0b5a 0346     		mov	r3, r0
 1685 0b5c FB60     		str	r3, [r7, #12]	@ float
 453:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1686              		.loc 1 453 0
 1687 0b5e FB7A     		ldrb	r3, [r7, #11]
 1688 0b60 3033     		adds	r3, r3, #48
 1689 0b62 DBB2     		uxtb	r3, r3
 1690 0b64 1946     		mov	r1, r3
 1691 0b66 9B48     		ldr	r0, .L86+4
 1692 0b68 FFF7FEFF 		bl	GFXwrite
 454:ui.c          ****                     currentChar = ((uint8_t)deadZoneRepresentation);    
 1693              		.loc 1 454 0
 1694 0b6c F868     		ldr	r0, [r7, #12]	@ float
 1695 0b6e FFF7FEFF 		bl	__aeabi_f2uiz
 1696 0b72 0346     		mov	r3, r0
 1697 0b74 FB72     		strb	r3, [r7, #11]
 455:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1698              		.loc 1 455 0
 1699 0b76 FB7A     		ldrb	r3, [r7, #11]
 1700 0b78 3033     		adds	r3, r3, #48
 1701 0b7a DBB2     		uxtb	r3, r3
 1702 0b7c 1946     		mov	r1, r3
 1703 0b7e 9548     		ldr	r0, .L86+4
 1704 0b80 FFF7FEFF 		bl	GFXwrite
 456:ui.c          **** 
 457:ui.c          **** 
 458:ui.c          ****                     GFXwrite(&theGFX, 46); //decimal point
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 39


 1705              		.loc 1 458 0
 1706 0b84 2E21     		movs	r1, #46
 1707 0b86 9348     		ldr	r0, .L86+4
 1708 0b88 FFF7FEFF 		bl	GFXwrite
 459:ui.c          ****                     
 460:ui.c          ****                     deadZoneRepresentation -= currentChar;
 1709              		.loc 1 460 0
 1710 0b8c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1711 0b8e 1846     		mov	r0, r3
 1712 0b90 FFF7FEFF 		bl	__aeabi_i2f
 1713 0b94 0346     		mov	r3, r0
 1714 0b96 1946     		mov	r1, r3
 1715 0b98 F868     		ldr	r0, [r7, #12]	@ float
 1716 0b9a FFF7FEFF 		bl	__aeabi_fsub
 1717 0b9e 0346     		mov	r3, r0
 1718 0ba0 FB60     		str	r3, [r7, #12]	@ float
 461:ui.c          ****                     currentChar = ((uint8_t)(deadZoneRepresentation * 10.0f));    
 1719              		.loc 1 461 0
 1720 0ba2 8F49     		ldr	r1, .L86+16
 1721 0ba4 F868     		ldr	r0, [r7, #12]	@ float
 1722 0ba6 FFF7FEFF 		bl	__aeabi_fmul
 1723 0baa 0346     		mov	r3, r0
 1724 0bac 1846     		mov	r0, r3
 1725 0bae FFF7FEFF 		bl	__aeabi_f2uiz
 1726 0bb2 0346     		mov	r3, r0
 1727 0bb4 FB72     		strb	r3, [r7, #11]
 462:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1728              		.loc 1 462 0
 1729 0bb6 FB7A     		ldrb	r3, [r7, #11]
 1730 0bb8 3033     		adds	r3, r3, #48
 1731 0bba DBB2     		uxtb	r3, r3
 1732 0bbc 1946     		mov	r1, r3
 1733 0bbe 8548     		ldr	r0, .L86+4
 1734 0bc0 FFF7FEFF 		bl	GFXwrite
 463:ui.c          ****                     deadZoneRepresentation -= (currentChar * 0.1f);
 1735              		.loc 1 463 0
 1736 0bc4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1737 0bc6 1846     		mov	r0, r3
 1738 0bc8 FFF7FEFF 		bl	__aeabi_i2f
 1739 0bcc 0346     		mov	r3, r0
 1740 0bce 8349     		ldr	r1, .L86+12
 1741 0bd0 1846     		mov	r0, r3
 1742 0bd2 FFF7FEFF 		bl	__aeabi_fmul
 1743 0bd6 0346     		mov	r3, r0
 1744 0bd8 1946     		mov	r1, r3
 1745 0bda F868     		ldr	r0, [r7, #12]	@ float
 1746 0bdc FFF7FEFF 		bl	__aeabi_fsub
 1747 0be0 0346     		mov	r3, r0
 1748 0be2 FB60     		str	r3, [r7, #12]	@ float
 464:ui.c          ****                     currentChar = ((uint8_t)(deadZoneRepresentation*100.0f));    
 1749              		.loc 1 464 0
 1750 0be4 7F49     		ldr	r1, .L86+20
 1751 0be6 F868     		ldr	r0, [r7, #12]	@ float
 1752 0be8 FFF7FEFF 		bl	__aeabi_fmul
 1753 0bec 0346     		mov	r3, r0
 1754 0bee 1846     		mov	r0, r3
 1755 0bf0 FFF7FEFF 		bl	__aeabi_f2uiz
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 40


 1756 0bf4 0346     		mov	r3, r0
 1757 0bf6 FB72     		strb	r3, [r7, #11]
 465:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1758              		.loc 1 465 0
 1759 0bf8 FB7A     		ldrb	r3, [r7, #11]
 1760 0bfa 3033     		adds	r3, r3, #48
 1761 0bfc DBB2     		uxtb	r3, r3
 1762 0bfe 1946     		mov	r1, r3
 1763 0c00 7448     		ldr	r0, .L86+4
 1764 0c02 FFF7FEFF 		bl	GFXwrite
 466:ui.c          ****                     GFXwrite(&theGFX, 37); //percent symbol
 1765              		.loc 1 466 0
 1766 0c06 2521     		movs	r1, #37
 1767 0c08 7248     		ldr	r0, .L86+4
 1768 0c0a FFF7FEFF 		bl	GFXwrite
 467:ui.c          ****                     OLEDtextColor(1, 0);
 1769              		.loc 1 467 0
 1770 0c0e 0021     		movs	r1, #0
 1771 0c10 0120     		movs	r0, #1
 1772 0c12 FFF7FEFF 		bl	OLEDtextColor
 468:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1773              		.loc 1 468 0
 1774 0c16 744B     		ldr	r3, .L86+24
 1775 0c18 0122     		movs	r2, #1
 1776 0c1a 1A70     		strb	r2, [r3]
 1777              	.L59:
 1778              	.LBE9:
 469:ui.c          ****                 }
 470:ui.c          ****             }
 471:ui.c          ****             if (menuPosition[0][0] == SliderRepMenu) //editing string/slider representation
 1779              		.loc 1 471 0
 1780 0c1c 734B     		ldr	r3, .L86+28
 1781 0c1e 93F90030 		ldrsb	r3, [r3]
 1782 0c22 092B     		cmp	r3, #9
 1783 0c24 40F0CC80 		bne	.L63
 472:ui.c          ****             {
 473:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1784              		.loc 1 473 0
 1785 0c28 714B     		ldr	r3, .L86+32
 1786 0c2a 93F90030 		ldrsb	r3, [r3]
 1787 0c2e 97F91E20 		ldrsb	r2, [r7, #30]
 1788 0c32 9A42     		cmp	r2, r3
 1789 0c34 00F0C480 		beq	.L63
 1790              	.LBB10:
 474:ui.c          ****                 {
 475:ui.c          ****                     OLEDtextColor(1, 0);
 1791              		.loc 1 475 0
 1792 0c38 0021     		movs	r1, #0
 1793 0c3a 0120     		movs	r0, #1
 1794 0c3c FFF7FEFF 		bl	OLEDtextColor
 476:ui.c          **** 
 477:ui.c          ****                     myGFX_setFont(2);
 1795              		.loc 1 477 0
 1796 0c40 0220     		movs	r0, #2
 1797 0c42 FFF7FEFF 		bl	myGFX_setFont
 478:ui.c          **** 
 479:ui.c          ****                     int16_t sliderTemp = stringRepresentation[editingSliderRepString];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 41


 1798              		.loc 1 479 0
 1799 0c46 6B4B     		ldr	r3, .L86+36
 1800 0c48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 0c4a 1A46     		mov	r2, r3
 1802 0c4c 6A4B     		ldr	r3, .L86+40
 1803 0c4e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1804 0c50 3B81     		strh	r3, [r7, #8]	@ movhi
 480:ui.c          ****                     sliderTemp = sliderTemp - Decoder_1_GetPosition();
 1805              		.loc 1 480 0
 1806 0c52 3C89     		ldrh	r4, [r7, #8]
 1807 0c54 FFF7FEFF 		bl	Decoder_1_GetPosition
 1808 0c58 0346     		mov	r3, r0
 1809 0c5a 9BB2     		uxth	r3, r3
 1810 0c5c E31A     		subs	r3, r4, r3
 1811 0c5e 9BB2     		uxth	r3, r3
 1812 0c60 3B81     		strh	r3, [r7, #8]	@ movhi
 481:ui.c          ****                     Decoder_1_SetPosition(0);
 1813              		.loc 1 481 0
 1814 0c62 0020     		movs	r0, #0
 1815 0c64 FFF7FEFF 		bl	Decoder_1_SetPosition
 482:ui.c          ****                     if (sliderTemp < 0)
 1816              		.loc 1 482 0
 1817 0c68 B7F90830 		ldrsh	r3, [r7, #8]
 1818 0c6c 002B     		cmp	r3, #0
 1819 0c6e 06DA     		bge	.L64
 483:ui.c          ****                     {
 484:ui.c          ****                          stringRepresentation[editingSliderRepString] = 0;
 1820              		.loc 1 484 0
 1821 0c70 604B     		ldr	r3, .L86+36
 1822 0c72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1823 0c74 1A46     		mov	r2, r3
 1824 0c76 604B     		ldr	r3, .L86+40
 1825 0c78 0021     		movs	r1, #0
 1826 0c7a 9954     		strb	r1, [r3, r2]
 1827 0c7c 11E0     		b	.L65
 1828              	.L64:
 485:ui.c          ****                     }
 486:ui.c          ****                     else if (sliderTemp > 9)
 1829              		.loc 1 486 0
 1830 0c7e B7F90830 		ldrsh	r3, [r7, #8]
 1831 0c82 092B     		cmp	r3, #9
 1832 0c84 06DD     		ble	.L66
 487:ui.c          ****                     {
 488:ui.c          ****                          stringRepresentation[editingSliderRepString] = 9;
 1833              		.loc 1 488 0
 1834 0c86 5B4B     		ldr	r3, .L86+36
 1835 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1836 0c8a 1A46     		mov	r2, r3
 1837 0c8c 5A4B     		ldr	r3, .L86+40
 1838 0c8e 0921     		movs	r1, #9
 1839 0c90 9954     		strb	r1, [r3, r2]
 1840 0c92 06E0     		b	.L65
 1841              	.L66:
 489:ui.c          ****                     }
 490:ui.c          ****                     else 
 491:ui.c          ****                     {
 492:ui.c          ****                          stringRepresentation[editingSliderRepString] = sliderTemp;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 42


 1842              		.loc 1 492 0
 1843 0c94 574B     		ldr	r3, .L86+36
 1844 0c96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1845 0c98 1A46     		mov	r2, r3
 1846 0c9a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 1847 0c9c D9B2     		uxtb	r1, r3
 1848 0c9e 564B     		ldr	r3, .L86+40
 1849 0ca0 9954     		strb	r1, [r3, r2]
 1850              	.L65:
 493:ui.c          ****                     }
 494:ui.c          ****                     
 495:ui.c          ****                     uint8_t sliderRepDisplay[2];
 496:ui.c          ****                     sliderRepDisplay[0] = stringRepresentation[0] + 1;
 1851              		.loc 1 496 0
 1852 0ca2 554B     		ldr	r3, .L86+40
 1853 0ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1854 0ca6 0133     		adds	r3, r3, #1
 1855 0ca8 DBB2     		uxtb	r3, r3
 1856 0caa 3B71     		strb	r3, [r7, #4]
 497:ui.c          ****                     sliderRepDisplay[1] = stringRepresentation[1] + 1;
 1857              		.loc 1 497 0
 1858 0cac 524B     		ldr	r3, .L86+40
 1859 0cae 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1860 0cb0 0133     		adds	r3, r3, #1
 1861 0cb2 DBB2     		uxtb	r3, r3
 1862 0cb4 7B71     		strb	r3, [r7, #5]
 498:ui.c          ****                     
 499:ui.c          ****                     OLEDwriteString("S1=", 3, 0, FourthLine);
 1863              		.loc 1 499 0
 1864 0cb6 0323     		movs	r3, #3
 1865 0cb8 0022     		movs	r2, #0
 1866 0cba 0321     		movs	r1, #3
 1867 0cbc 4F48     		ldr	r0, .L86+44
 1868 0cbe FFF7FEFF 		bl	OLEDwriteString
 500:ui.c          ****                     if (!editingSliderRepString)
 1869              		.loc 1 500 0
 1870 0cc2 4C4B     		ldr	r3, .L86+36
 1871 0cc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 0cc6 002B     		cmp	r3, #0
 1873 0cc8 0ED1     		bne	.L67
 501:ui.c          ****                     {
 502:ui.c          ****                         OLEDtextColor(0, 1);
 1874              		.loc 1 502 0
 1875 0cca 0121     		movs	r1, #1
 1876 0ccc 0020     		movs	r0, #0
 1877 0cce FFF7FEFF 		bl	OLEDtextColor
 503:ui.c          ****                         GFXfillRect(&theGFX, 24, 48, 16, 16, theGFX.textbgcolor);
 1878              		.loc 1 503 0
 1879 0cd2 404B     		ldr	r3, .L86+4
 1880 0cd4 5B8A     		ldrh	r3, [r3, #18]
 1881 0cd6 0193     		str	r3, [sp, #4]
 1882 0cd8 1023     		movs	r3, #16
 1883 0cda 0093     		str	r3, [sp]
 1884 0cdc 1023     		movs	r3, #16
 1885 0cde 3022     		movs	r2, #48
 1886 0ce0 1821     		movs	r1, #24
 1887 0ce2 3C48     		ldr	r0, .L86+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 43


 1888 0ce4 FFF7FEFF 		bl	GFXfillRect
 1889              	.L67:
 504:ui.c          ****                     }
 505:ui.c          ****                     uint8_t currentChar = sliderRepDisplay[0] / 10;
 1890              		.loc 1 505 0
 1891 0ce8 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1892 0cea 454A     		ldr	r2, .L86+48
 1893 0cec A2FB0323 		umull	r2, r3, r2, r3
 1894 0cf0 DB08     		lsrs	r3, r3, #3
 1895 0cf2 FB71     		strb	r3, [r7, #7]
 506:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1896              		.loc 1 506 0
 1897 0cf4 FB79     		ldrb	r3, [r7, #7]
 1898 0cf6 3033     		adds	r3, r3, #48
 1899 0cf8 DBB2     		uxtb	r3, r3
 1900 0cfa 1946     		mov	r1, r3
 1901 0cfc 3548     		ldr	r0, .L86+4
 1902 0cfe FFF7FEFF 		bl	GFXwrite
 507:ui.c          ****                     currentChar = sliderRepDisplay[0] - (currentChar*10);
 1903              		.loc 1 507 0
 1904 0d02 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 1905 0d04 FB79     		ldrb	r3, [r7, #7]
 1906 0d06 1946     		mov	r1, r3
 1907 0d08 4901     		lsls	r1, r1, #5
 1908 0d0a C91A     		subs	r1, r1, r3
 1909 0d0c 8900     		lsls	r1, r1, #2
 1910 0d0e CB1A     		subs	r3, r1, r3
 1911 0d10 5B00     		lsls	r3, r3, #1
 1912 0d12 DBB2     		uxtb	r3, r3
 1913 0d14 1344     		add	r3, r3, r2
 1914 0d16 FB71     		strb	r3, [r7, #7]
 508:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1915              		.loc 1 508 0
 1916 0d18 FB79     		ldrb	r3, [r7, #7]
 1917 0d1a 3033     		adds	r3, r3, #48
 1918 0d1c DBB2     		uxtb	r3, r3
 1919 0d1e 1946     		mov	r1, r3
 1920 0d20 2C48     		ldr	r0, .L86+4
 1921 0d22 FFF7FEFF 		bl	GFXwrite
 509:ui.c          ****                     OLEDtextColor(1, 0);
 1922              		.loc 1 509 0
 1923 0d26 0021     		movs	r1, #0
 1924 0d28 0120     		movs	r0, #1
 1925 0d2a FFF7FEFF 		bl	OLEDtextColor
 510:ui.c          **** 
 511:ui.c          ****                     GFXwrite(&theGFX, 32); //space
 1926              		.loc 1 511 0
 1927 0d2e 2021     		movs	r1, #32
 1928 0d30 2848     		ldr	r0, .L86+4
 1929 0d32 FFF7FEFF 		bl	GFXwrite
 512:ui.c          ****                     GFXwrite(&theGFX, 83); //S
 1930              		.loc 1 512 0
 1931 0d36 5321     		movs	r1, #83
 1932 0d38 2648     		ldr	r0, .L86+4
 1933 0d3a FFF7FEFF 		bl	GFXwrite
 513:ui.c          ****                     GFXwrite(&theGFX, 50); //2
 1934              		.loc 1 513 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 44


 1935 0d3e 3221     		movs	r1, #50
 1936 0d40 2448     		ldr	r0, .L86+4
 1937 0d42 FFF7FEFF 		bl	GFXwrite
 514:ui.c          ****                     GFXwrite(&theGFX, 61); //=
 1938              		.loc 1 514 0
 1939 0d46 3D21     		movs	r1, #61
 1940 0d48 2248     		ldr	r0, .L86+4
 1941 0d4a FFF7FEFF 		bl	GFXwrite
 515:ui.c          ****                     if (editingSliderRepString)
 1942              		.loc 1 515 0
 1943 0d4e 294B     		ldr	r3, .L86+36
 1944 0d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1945 0d52 002B     		cmp	r3, #0
 1946 0d54 0ED0     		beq	.L68
 516:ui.c          ****                     {
 517:ui.c          ****                         OLEDtextColor(0, 1);
 1947              		.loc 1 517 0
 1948 0d56 0121     		movs	r1, #1
 1949 0d58 0020     		movs	r0, #0
 1950 0d5a FFF7FEFF 		bl	OLEDtextColor
 518:ui.c          ****                         GFXfillRect(&theGFX, 72, 48, 16, 16, theGFX.textbgcolor);
 1951              		.loc 1 518 0
 1952 0d5e 1D4B     		ldr	r3, .L86+4
 1953 0d60 5B8A     		ldrh	r3, [r3, #18]
 1954 0d62 0193     		str	r3, [sp, #4]
 1955 0d64 1023     		movs	r3, #16
 1956 0d66 0093     		str	r3, [sp]
 1957 0d68 1023     		movs	r3, #16
 1958 0d6a 3022     		movs	r2, #48
 1959 0d6c 4821     		movs	r1, #72
 1960 0d6e 1948     		ldr	r0, .L86+4
 1961 0d70 FFF7FEFF 		bl	GFXfillRect
 1962              	.L68:
 519:ui.c          ****                     }
 520:ui.c          ****                     currentChar = sliderRepDisplay[1] / 10;
 1963              		.loc 1 520 0
 1964 0d74 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1965 0d76 224A     		ldr	r2, .L86+48
 1966 0d78 A2FB0323 		umull	r2, r3, r2, r3
 1967 0d7c DB08     		lsrs	r3, r3, #3
 1968 0d7e FB71     		strb	r3, [r7, #7]
 521:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1969              		.loc 1 521 0
 1970 0d80 FB79     		ldrb	r3, [r7, #7]
 1971 0d82 3033     		adds	r3, r3, #48
 1972 0d84 DBB2     		uxtb	r3, r3
 1973 0d86 1946     		mov	r1, r3
 1974 0d88 1248     		ldr	r0, .L86+4
 1975 0d8a FFF7FEFF 		bl	GFXwrite
 522:ui.c          ****                     currentChar = sliderRepDisplay[1]  - (currentChar*10);
 1976              		.loc 1 522 0
 1977 0d8e 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1978 0d90 FB79     		ldrb	r3, [r7, #7]
 1979 0d92 1946     		mov	r1, r3
 1980 0d94 4901     		lsls	r1, r1, #5
 1981 0d96 C91A     		subs	r1, r1, r3
 1982 0d98 8900     		lsls	r1, r1, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 45


 1983 0d9a CB1A     		subs	r3, r1, r3
 1984 0d9c 5B00     		lsls	r3, r3, #1
 1985 0d9e DBB2     		uxtb	r3, r3
 1986 0da0 1344     		add	r3, r3, r2
 1987 0da2 FB71     		strb	r3, [r7, #7]
 523:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1988              		.loc 1 523 0
 1989 0da4 FB79     		ldrb	r3, [r7, #7]
 1990 0da6 3033     		adds	r3, r3, #48
 1991 0da8 DBB2     		uxtb	r3, r3
 1992 0daa 1946     		mov	r1, r3
 1993 0dac 0948     		ldr	r0, .L86+4
 1994 0dae FFF7FEFF 		bl	GFXwrite
 524:ui.c          ****                    
 525:ui.c          ****                     OLEDtextColor(1, 0);
 1995              		.loc 1 525 0
 1996 0db2 0021     		movs	r1, #0
 1997 0db4 0120     		movs	r0, #1
 1998 0db6 FFF7FEFF 		bl	OLEDtextColor
 526:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1999              		.loc 1 526 0
 2000 0dba 0B4B     		ldr	r3, .L86+24
 2001 0dbc 0122     		movs	r2, #1
 2002 0dbe 1A70     		strb	r2, [r3]
 2003              	.L63:
 2004              	.LBE10:
 527:ui.c          ****                 }
 528:ui.c          ****             }
 529:ui.c          ****             prevEncoderVal = currentEncoderVal;
 2005              		.loc 1 529 0
 2006 0dc0 0B4A     		ldr	r2, .L86+32
 2007 0dc2 BB7F     		ldrb	r3, [r7, #30]
 2008 0dc4 1370     		strb	r3, [r2]
 2009              	.L77:
 2010              	.LBE4:
 530:ui.c          ****         }
 531:ui.c          ****     }
 532:ui.c          ****     
 533:ui.c          **** }
 2011              		.loc 1 533 0
 2012 0dc6 00BF     		nop
 2013 0dc8 3037     		adds	r7, r7, #48
 2014              		.cfi_def_cfa_offset 16
 2015 0dca BD46     		mov	sp, r7
 2016              		.cfi_def_cfa_register 13
 2017              		@ sp needed
 2018 0dcc B0BD     		pop	{r4, r5, r7, pc}
 2019              	.L87:
 2020 0dce 00BF     		.align	2
 2021              	.L86:
 2022 0dd0 00000000 		.word	deadZone
 2023 0dd4 00000000 		.word	theGFX
 2024 0dd8 CDCC4C3E 		.word	1045220557
 2025 0ddc CDCCCC3D 		.word	1036831949
 2026 0de0 00002041 		.word	1092616192
 2027 0de4 0000C842 		.word	1120403456
 2028 0de8 00000000 		.word	mainOLEDWaitingToSend
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 46


 2029 0dec 00000000 		.word	menuPosition
 2030 0df0 00000000 		.word	prevEncoderVal
 2031 0df4 00000000 		.word	editingSliderRepString
 2032 0df8 00000000 		.word	stringRepresentation
 2033 0dfc 00000000 		.word	.LC0
 2034 0e00 CDCCCCCC 		.word	-858993459
 2035              		.cfi_endproc
 2036              	.LFE64:
 2037              		.size	scanUI, .-scanUI
 2038              		.global	calibrationNames
 2039              		.section	.rodata
 2040              		.align	2
 2041              	.LC1:
 2042 0004 20205345 		.ascii	"  SET LEVERS \000"
 2042      54204C45 
 2042      56455253 
 2042      2000
 2043 0012 0000     		.align	2
 2044              	.LC2:
 2045 0014 20205345 		.ascii	"  SET FRETS  \000"
 2045      54204652 
 2045      45545320 
 2045      2000
 2046 0022 0000     		.align	2
 2047              		.type	calibrationNames, %object
 2048              		.size	calibrationNames, 12
 2049              	calibrationNames:
 2050 0024 04000000 		.word	.LC1
 2051 0028 14000000 		.word	.LC2
 2052 002c 00000000 		.word	0
 2053              		.global	mainMenuNames
 2054              		.align	2
 2055              	.LC3:
 2056 0030 20205354 		.ascii	"  STORE_PRESET \000"
 2056      4F52455F 
 2056      50524553 
 2056      45542000 
 2057              		.align	2
 2058              	.LC4:
 2059 0040 20204341 		.ascii	"  CALIBRATION\000"
 2059      4C494252 
 2059      4154494F 
 2059      4E00
 2060 004e 0000     		.align	2
 2061              	.LC5:
 2062 0050 20205345 		.ascii	"  SETTINGS   \000"
 2062      5454494E 
 2062      47532020 
 2062      2000
 2063 005e 0000     		.align	2
 2064              		.type	mainMenuNames, %object
 2065              		.size	mainMenuNames, 16
 2066              	mainMenuNames:
 2067 0060 30000000 		.word	.LC3
 2068 0064 40000000 		.word	.LC4
 2069 0068 50000000 		.word	.LC5
 2070 006c 00000000 		.word	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 47


 2071              		.global	settingsNames
 2072              		.align	2
 2073              	.LC6:
 2074 0070 20205452 		.ascii	"  TRANSPOSE  \000"
 2074      414E5350 
 2074      4F534520 
 2074      2000
 2075 007e 0000     		.align	2
 2076              	.LC7:
 2077 0080 20204F43 		.ascii	"  OCTAVE ACTION\000"
 2077      54415645 
 2077      20414354 
 2077      494F4E00 
 2078              		.align	2
 2079              	.LC8:
 2080 0090 20204445 		.ascii	"  DEADZONES    \000"
 2080      41445A4F 
 2080      4E455320 
 2080      20202000 
 2081              		.align	2
 2082              	.LC9:
 2083 00a0 2020534C 		.ascii	"  SLIDER REPR \000"
 2083      49444552 
 2083      20524550 
 2083      522000
 2084 00af 00       		.align	2
 2085              	.LC10:
 2086 00b0 20205045 		.ascii	"  PEDAL SUM   \000"
 2086      44414C20 
 2086      53554D20 
 2086      202000
 2087 00bf 00       		.align	2
 2088              	.LC11:
 2089 00c0 20204D49 		.ascii	"  MIDI SEND  \000"
 2089      44492053 
 2089      454E4420 
 2089      2000
 2090 00ce 0000     		.align	2
 2091              	.LC12:
 2092 00d0 2020564F 		.ascii	"  VOLUME      \000"
 2092      4C554D45 
 2092      20202020 
 2092      202000
 2093 00df 00       		.align	2
 2094              	.LC13:
 2095 00e0 20204649 		.ascii	"  FIRMWARE UPDT\000"
 2095      524D5741 
 2095      52452055 
 2095      50445400 
 2096              		.align	2
 2097              		.type	settingsNames, %object
 2098              		.size	settingsNames, 36
 2099              	settingsNames:
 2100 00f0 70000000 		.word	.LC6
 2101 00f4 80000000 		.word	.LC7
 2102 00f8 90000000 		.word	.LC8
 2103 00fc A0000000 		.word	.LC9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 48


 2104 0100 B0000000 		.word	.LC10
 2105 0104 C0000000 		.word	.LC11
 2106 0108 D0000000 		.word	.LC12
 2107 010c E0000000 		.word	.LC13
 2108 0110 00000000 		.word	0
 2109              		.global	numMainMenuItems
 2110              		.data
 2111              		.type	numMainMenuItems, %object
 2112              		.size	numMainMenuItems, 1
 2113              	numMainMenuItems:
 2114 001a 03       		.byte	3
 2115              		.global	numCalibrationItems
 2116              		.type	numCalibrationItems, %object
 2117              		.size	numCalibrationItems, 1
 2118              	numCalibrationItems:
 2119 001b 02       		.byte	2
 2120              		.global	numSettingsItems
 2121              		.type	numSettingsItems, %object
 2122              		.size	numSettingsItems, 1
 2123              	numSettingsItems:
 2124 001c 08       		.byte	8
 2125              		.section	.rodata
 2126              		.align	2
 2127              	.LC14:
 2128 0114 20205354 		.ascii	"  STORE PRESET   \000"
 2128      4F524520 
 2128      50524553 
 2128      45542020 
 2128      2000
 2129 0126 0000     		.align	2
 2130              	.LC15:
 2131 0128 20204341 		.ascii	"  CALIBRATION     \000"
 2131      4C494252 
 2131      4154494F 
 2131      4E202020 
 2131      202000
 2132 013b 00       		.align	2
 2133              	.LC16:
 2134 013c 20205345 		.ascii	"  SETTINGS       \000"
 2134      5454494E 
 2134      47532020 
 2134      20202020 
 2134      2000
 2135              		.section	.text.enterEditModeMenu,"ax",%progbits
 2136              		.align	2
 2137              		.global	enterEditModeMenu
 2138              		.thumb
 2139              		.thumb_func
 2140              		.type	enterEditModeMenu, %function
 2141              	enterEditModeMenu:
 2142              	.LFB65:
 534:ui.c          **** 
 535:ui.c          **** 
 536:ui.c          **** 
 537:ui.c          **** 
 538:ui.c          **** const char* const calibrationNames[] = { "  SET LEVERS ", "  SET FRETS  ", 0 }; 
 539:ui.c          **** const char* const mainMenuNames[] =    {"  STORE_PRESET ", "  CALIBRATION", "  SETTINGS   ", 0 }; 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 49


 540:ui.c          **** const char* const settingsNames[] =   { "  TRANSPOSE  ", "  OCTAVE ACTION", "  DEADZONES    ", "  S
 541:ui.c          **** uint8_t numMainMenuItems = 3;
 542:ui.c          **** uint8_t numCalibrationItems = 2;
 543:ui.c          **** uint8_t numSettingsItems = 8;
 544:ui.c          **** 
 545:ui.c          **** void enterEditModeMenu(void)
 546:ui.c          **** {
 2143              		.loc 1 546 0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 0
 2146              		@ frame_needed = 1, uses_anonymous_args = 0
 2147 0000 80B5     		push	{r7, lr}
 2148              		.cfi_def_cfa_offset 8
 2149              		.cfi_offset 7, -8
 2150              		.cfi_offset 14, -4
 2151 0002 00AF     		add	r7, sp, #0
 2152              		.cfi_def_cfa_register 7
 547:ui.c          ****     OLEDclear(128, 64);
 2153              		.loc 1 547 0
 2154 0004 4021     		movs	r1, #64
 2155 0006 8020     		movs	r0, #128
 2156 0008 FFF7FEFF 		bl	OLEDclear
 548:ui.c          ****     myGFX_setFont(2);
 2157              		.loc 1 548 0
 2158 000c 0220     		movs	r0, #2
 2159 000e FFF7FEFF 		bl	myGFX_setFont
 549:ui.c          ****     OLEDtextColor(0, 1);
 2160              		.loc 1 549 0
 2161 0012 0121     		movs	r1, #1
 2162 0014 0020     		movs	r0, #0
 2163 0016 FFF7FEFF 		bl	OLEDtextColor
 550:ui.c          ****     OLEDwriteString("  STORE PRESET   ", 15, 0, FirstLine);
 2164              		.loc 1 550 0
 2165 001a 0023     		movs	r3, #0
 2166 001c 0022     		movs	r2, #0
 2167 001e 0F21     		movs	r1, #15
 2168 0020 1E48     		ldr	r0, .L89
 2169 0022 FFF7FEFF 		bl	OLEDwriteString
 551:ui.c          ****     OLEDwriteArrow(0, FirstLine);
 2170              		.loc 1 551 0
 2171 0026 0021     		movs	r1, #0
 2172 0028 0020     		movs	r0, #0
 2173 002a FFF7FEFF 		bl	OLEDwriteArrow
 552:ui.c          ****     OLEDtextColor(1, 0);
 2174              		.loc 1 552 0
 2175 002e 0021     		movs	r1, #0
 2176 0030 0120     		movs	r0, #1
 2177 0032 FFF7FEFF 		bl	OLEDtextColor
 553:ui.c          ****     OLEDwriteString("  CALIBRATION     ",15, 0, SecondLine);
 2178              		.loc 1 553 0
 2179 0036 0123     		movs	r3, #1
 2180 0038 0022     		movs	r2, #0
 2181 003a 0F21     		movs	r1, #15
 2182 003c 1848     		ldr	r0, .L89+4
 2183 003e FFF7FEFF 		bl	OLEDwriteString
 554:ui.c          ****     OLEDtextColor(1, 0);
 2184              		.loc 1 554 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 50


 2185 0042 0021     		movs	r1, #0
 2186 0044 0120     		movs	r0, #1
 2187 0046 FFF7FEFF 		bl	OLEDtextColor
 555:ui.c          ****     OLEDwriteString("  SETTINGS       ", 15, 0, ThirdLine);
 2188              		.loc 1 555 0
 2189 004a 0223     		movs	r3, #2
 2190 004c 0022     		movs	r2, #0
 2191 004e 0F21     		movs	r1, #15
 2192 0050 1448     		ldr	r0, .L89+8
 2193 0052 FFF7FEFF 		bl	OLEDwriteString
 556:ui.c          ****     OLEDtextColor(1, 0);
 2194              		.loc 1 556 0
 2195 0056 0021     		movs	r1, #0
 2196 0058 0120     		movs	r0, #1
 2197 005a FFF7FEFF 		bl	OLEDtextColor
 557:ui.c          ****     mainOLEDWaitingToSend = 1;
 2198              		.loc 1 557 0
 2199 005e 124B     		ldr	r3, .L89+12
 2200 0060 0122     		movs	r2, #1
 2201 0062 1A70     		strb	r2, [r3]
 558:ui.c          ****     editMode = 1;
 2202              		.loc 1 558 0
 2203 0064 114B     		ldr	r3, .L89+16
 2204 0066 0122     		movs	r2, #1
 2205 0068 1A70     		strb	r2, [r3]
 559:ui.c          ****     LED_red2_Write(editMode);
 2206              		.loc 1 559 0
 2207 006a 104B     		ldr	r3, .L89+16
 2208 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 006e 1846     		mov	r0, r3
 2210 0070 FFF7FEFF 		bl	LED_red2_Write
 560:ui.c          ****     //initialize menu position to all zero
 561:ui.c          ****     menuPosition[0][0] = 0; //x
 2211              		.loc 1 561 0
 2212 0074 0E4B     		ldr	r3, .L89+20
 2213 0076 0022     		movs	r2, #0
 2214 0078 1A70     		strb	r2, [r3]
 562:ui.c          ****     menuPosition[0][1] = 0; //y
 2215              		.loc 1 562 0
 2216 007a 0D4B     		ldr	r3, .L89+20
 2217 007c 0022     		movs	r2, #0
 2218 007e 5A70     		strb	r2, [r3, #1]
 563:ui.c          ****     menuPosition[1][0] = 0; //x
 2219              		.loc 1 563 0
 2220 0080 0B4B     		ldr	r3, .L89+20
 2221 0082 0022     		movs	r2, #0
 2222 0084 9A70     		strb	r2, [r3, #2]
 564:ui.c          ****     menuPosition[1][1] = 0; //y
 2223              		.loc 1 564 0
 2224 0086 0A4B     		ldr	r3, .L89+20
 2225 0088 0022     		movs	r2, #0
 2226 008a DA70     		strb	r2, [r3, #3]
 565:ui.c          ****     menuPosition[2][0] = 0; //x
 2227              		.loc 1 565 0
 2228 008c 084B     		ldr	r3, .L89+20
 2229 008e 0022     		movs	r2, #0
 2230 0090 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 51


 566:ui.c          ****     menuPosition[2][1] = 0; //y
 2231              		.loc 1 566 0
 2232 0092 074B     		ldr	r3, .L89+20
 2233 0094 0022     		movs	r2, #0
 2234 0096 5A71     		strb	r2, [r3, #5]
 567:ui.c          **** }
 2235              		.loc 1 567 0
 2236 0098 00BF     		nop
 2237 009a 80BD     		pop	{r7, pc}
 2238              	.L90:
 2239              		.align	2
 2240              	.L89:
 2241 009c 14010000 		.word	.LC14
 2242 00a0 28010000 		.word	.LC15
 2243 00a4 3C010000 		.word	.LC16
 2244 00a8 00000000 		.word	mainOLEDWaitingToSend
 2245 00ac 00000000 		.word	editMode
 2246 00b0 00000000 		.word	menuPosition
 2247              		.cfi_endproc
 2248              	.LFE65:
 2249              		.size	enterEditModeMenu, .-enterEditModeMenu
 2250              		.global	__aeabi_f2iz
 2251              		.section	.text.exitEditModeMenu,"ax",%progbits
 2252              		.align	2
 2253              		.global	exitEditModeMenu
 2254              		.thumb
 2255              		.thumb_func
 2256              		.type	exitEditModeMenu, %function
 2257              	exitEditModeMenu:
 2258              	.LFB66:
 568:ui.c          **** 
 569:ui.c          **** void exitEditModeMenu(void)
 570:ui.c          **** {
 2259              		.loc 1 570 0
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 8
 2262              		@ frame_needed = 1, uses_anonymous_args = 0
 2263 0000 90B5     		push	{r4, r7, lr}
 2264              		.cfi_def_cfa_offset 12
 2265              		.cfi_offset 4, -12
 2266              		.cfi_offset 7, -8
 2267              		.cfi_offset 14, -4
 2268 0002 83B0     		sub	sp, sp, #12
 2269              		.cfi_def_cfa_offset 24
 2270 0004 00AF     		add	r7, sp, #0
 2271              		.cfi_def_cfa_register 7
 571:ui.c          ****     
 572:ui.c          ****     if (leverCalibrationMode == 1)
 2272              		.loc 1 572 0
 2273 0006 5E4B     		ldr	r3, .L101
 2274 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2275 000a 012B     		cmp	r3, #1
 2276 000c 01D1     		bne	.L92
 573:ui.c          ****     {
 574:ui.c          ****         exitLeverCalibrationMode();
 2277              		.loc 1 574 0
 2278 000e FFF7FEFF 		bl	exitLeverCalibrationMode
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 52


 2279              	.L92:
 575:ui.c          ****     }
 576:ui.c          ****     if (fretCalibrationMode == 1)
 2280              		.loc 1 576 0
 2281 0012 5C4B     		ldr	r3, .L101+4
 2282 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2283 0016 012B     		cmp	r3, #1
 2284 0018 01D1     		bne	.L93
 577:ui.c          ****     {
 578:ui.c          ****         exitFretCalibrationMode();
 2285              		.loc 1 578 0
 2286 001a FFF7FEFF 		bl	exitFretCalibrationMode
 2287              	.L93:
 579:ui.c          ****     }
 580:ui.c          ****     if (menuPosition[0][0] == TransposeMenu)
 2288              		.loc 1 580 0
 2289 001e 5A4B     		ldr	r3, .L101+8
 2290 0020 93F90030 		ldrsb	r3, [r3]
 2291 0024 062B     		cmp	r3, #6
 2292 0026 34D1     		bne	.L94
 581:ui.c          ****     {
 582:ui.c          ****         transposeSemitones = (int8_t)transposeFloat;
 2293              		.loc 1 582 0
 2294 0028 584B     		ldr	r3, .L101+12
 2295 002a 1B68     		ldr	r3, [r3]	@ float
 2296 002c 1846     		mov	r0, r3
 2297 002e FFF7FEFF 		bl	__aeabi_f2iz
 2298 0032 0346     		mov	r3, r0
 2299 0034 5AB2     		sxtb	r2, r3
 2300 0036 564B     		ldr	r3, .L101+16
 2301 0038 1A70     		strb	r2, [r3]
 583:ui.c          ****         transposeCents = (int8_t)((transposeFloat - transposeSemitones) * 100.0f);
 2302              		.loc 1 583 0
 2303 003a 544B     		ldr	r3, .L101+12
 2304 003c 1C68     		ldr	r4, [r3]	@ float
 2305 003e 544B     		ldr	r3, .L101+16
 2306 0040 93F90030 		ldrsb	r3, [r3]
 2307 0044 1846     		mov	r0, r3
 2308 0046 FFF7FEFF 		bl	__aeabi_i2f
 2309 004a 0346     		mov	r3, r0
 2310 004c 1946     		mov	r1, r3
 2311 004e 2046     		mov	r0, r4
 2312 0050 FFF7FEFF 		bl	__aeabi_fsub
 2313 0054 0346     		mov	r3, r0
 2314 0056 4F49     		ldr	r1, .L101+20
 2315 0058 1846     		mov	r0, r3
 2316 005a FFF7FEFF 		bl	__aeabi_fmul
 2317 005e 0346     		mov	r3, r0
 2318 0060 1846     		mov	r0, r3
 2319 0062 FFF7FEFF 		bl	__aeabi_f2iz
 2320 0066 0346     		mov	r3, r0
 2321 0068 5AB2     		sxtb	r2, r3
 2322 006a 4B4B     		ldr	r3, .L101+24
 2323 006c 1A70     		strb	r2, [r3]
 584:ui.c          ****         EEPROM_WriteByte(transposeSemitones, EEPROM_TRANSPOSE_OFFSET);
 2324              		.loc 1 584 0
 2325 006e 484B     		ldr	r3, .L101+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 53


 2326 0070 93F90030 		ldrsb	r3, [r3]
 2327 0074 DBB2     		uxtb	r3, r3
 2328 0076 4FF4FB61 		mov	r1, #2008
 2329 007a 1846     		mov	r0, r3
 2330 007c FFF7FEFF 		bl	EEPROM_WriteByte
 585:ui.c          ****         EEPROM_WriteByte(transposeCents, EEPROM_TRANSPOSE_OFFSET + 1);
 2331              		.loc 1 585 0
 2332 0080 454B     		ldr	r3, .L101+24
 2333 0082 93F90030 		ldrsb	r3, [r3]
 2334 0086 DBB2     		uxtb	r3, r3
 2335 0088 40F2D971 		movw	r1, #2009
 2336 008c 1846     		mov	r0, r3
 2337 008e FFF7FEFF 		bl	EEPROM_WriteByte
 2338              	.L94:
 586:ui.c          ****     }
 587:ui.c          ****     if (menuPosition[0][0] == OctaveActionMenu)
 2339              		.loc 1 587 0
 2340 0092 3D4B     		ldr	r3, .L101+8
 2341 0094 93F90030 		ldrsb	r3, [r3]
 2342 0098 072B     		cmp	r3, #7
 2343 009a 06D1     		bne	.L95
 588:ui.c          ****     {
 589:ui.c          ****         EEPROM_WriteByte(octaveAction, EEPROM_OCTAVE_ACTION_OFFSET);
 2344              		.loc 1 589 0
 2345 009c 3F4B     		ldr	r3, .L101+28
 2346 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2347 00a0 40F2DA71 		movw	r1, #2010
 2348 00a4 1846     		mov	r0, r3
 2349 00a6 FFF7FEFF 		bl	EEPROM_WriteByte
 2350              	.L95:
 590:ui.c          ****     }  
 591:ui.c          ****     if (menuPosition[0][0] == DeadzonesMenu)
 2351              		.loc 1 591 0
 2352 00aa 374B     		ldr	r3, .L101+8
 2353 00ac 93F90030 		ldrsb	r3, [r3]
 2354 00b0 082B     		cmp	r3, #8
 2355 00b2 06D1     		bne	.L96
 592:ui.c          ****     {
 593:ui.c          ****         EEPROM_WriteByte(deadZone, EEPROM_DEADZONES_OFFSET);
 2356              		.loc 1 593 0
 2357 00b4 3A4B     		ldr	r3, .L101+32
 2358 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2359 00b8 40F2DB71 		movw	r1, #2011
 2360 00bc 1846     		mov	r0, r3
 2361 00be FFF7FEFF 		bl	EEPROM_WriteByte
 2362              	.L96:
 594:ui.c          ****     }
 595:ui.c          ****     if (menuPosition[0][0] == SliderRepMenu)
 2363              		.loc 1 595 0
 2364 00c2 314B     		ldr	r3, .L101+8
 2365 00c4 93F90030 		ldrsb	r3, [r3]
 2366 00c8 092B     		cmp	r3, #9
 2367 00ca 12D1     		bne	.L97
 2368              	.LBB11:
 596:ui.c          ****     {
 597:ui.c          ****         uint8_t tempByte = ((stringRepresentation[0] & 15) << 4) + (stringRepresentation[1] & 15);
 2369              		.loc 1 597 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 54


 2370 00cc 354B     		ldr	r3, .L101+36
 2371 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2372 00d0 1B01     		lsls	r3, r3, #4
 2373 00d2 DAB2     		uxtb	r2, r3
 2374 00d4 334B     		ldr	r3, .L101+36
 2375 00d6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2376 00d8 03F00F03 		and	r3, r3, #15
 2377 00dc DBB2     		uxtb	r3, r3
 2378 00de 1344     		add	r3, r3, r2
 2379 00e0 FB71     		strb	r3, [r7, #7]
 598:ui.c          ****         EEPROM_WriteByte(tempByte,EEPROM_STRING_REP_OFFSET);
 2380              		.loc 1 598 0
 2381 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2382 00e4 40F2D771 		movw	r1, #2007
 2383 00e8 1846     		mov	r0, r3
 2384 00ea FFF7FEFF 		bl	EEPROM_WriteByte
 599:ui.c          ****         calculateStringRepDivider();
 2385              		.loc 1 599 0
 2386 00ee FFF7FEFF 		bl	calculateStringRepDivider
 2387              	.L97:
 2388              	.LBE11:
 600:ui.c          ****     }
 601:ui.c          ****     if (menuPosition[0][0] == TraditionalPedalSumMenu)
 2389              		.loc 1 601 0
 2390 00f2 254B     		ldr	r3, .L101+8
 2391 00f4 93F90030 		ldrsb	r3, [r3]
 2392 00f8 0A2B     		cmp	r3, #10
 2393 00fa 06D1     		bne	.L98
 602:ui.c          ****     {
 603:ui.c          ****         EEPROM_WriteByte(traditionalPedalAdd,EEPROM_PEDALSUM_OFFSET);
 2394              		.loc 1 603 0
 2395 00fc 2A4B     		ldr	r3, .L101+40
 2396 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2397 0100 40F2DE71 		movw	r1, #2014
 2398 0104 1846     		mov	r0, r3
 2399 0106 FFF7FEFF 		bl	EEPROM_WriteByte
 2400              	.L98:
 604:ui.c          ****     }
 605:ui.c          ****     if (menuPosition[0][0] == MidiSendMenu)
 2401              		.loc 1 605 0
 2402 010a 1F4B     		ldr	r3, .L101+8
 2403 010c 93F90030 		ldrsb	r3, [r3]
 2404 0110 0B2B     		cmp	r3, #11
 2405 0112 13D1     		bne	.L99
 2406              	.LBB12:
 606:ui.c          ****     {
 607:ui.c          ****         uint8_t tempByte = ((midiBarSendOn & 1)<<1) + (midiSendOn & 1);
 2407              		.loc 1 607 0
 2408 0114 254B     		ldr	r3, .L101+44
 2409 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2410 0118 5B00     		lsls	r3, r3, #1
 2411 011a DBB2     		uxtb	r3, r3
 2412 011c 03F00203 		and	r3, r3, #2
 2413 0120 DAB2     		uxtb	r2, r3
 2414 0122 234B     		ldr	r3, .L101+48
 2415 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2416 0126 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 55


 2417 012a DBB2     		uxtb	r3, r3
 2418 012c 1344     		add	r3, r3, r2
 2419 012e BB71     		strb	r3, [r7, #6]
 608:ui.c          ****         EEPROM_WriteByte(tempByte,EEPROM_MIDI_SEND_OFFSET);
 2420              		.loc 1 608 0
 2421 0130 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2422 0132 40F2DF71 		movw	r1, #2015
 2423 0136 1846     		mov	r0, r3
 2424 0138 FFF7FEFF 		bl	EEPROM_WriteByte
 2425              	.L99:
 2426              	.LBE12:
 609:ui.c          ****     }
 610:ui.c          ****     if (menuPosition[0][0] == VolumeMenu)
 2427              		.loc 1 610 0
 2428 013c 124B     		ldr	r3, .L101+8
 2429 013e 93F90030 		ldrsb	r3, [r3]
 2430 0142 0C2B     		cmp	r3, #12
 2431 0144 08D1     		bne	.L100
 611:ui.c          ****     {
 612:ui.c          ****         EEPROM_WriteByte((uint8_t)volumeInt,EEPROM_VOLUME_OFFSET);
 2432              		.loc 1 612 0
 2433 0146 1B4B     		ldr	r3, .L101+52
 2434 0148 93F90030 		ldrsb	r3, [r3]
 2435 014c DBB2     		uxtb	r3, r3
 2436 014e 40F2E471 		movw	r1, #2020
 2437 0152 1846     		mov	r0, r3
 2438 0154 FFF7FEFF 		bl	EEPROM_WriteByte
 2439              	.L100:
 613:ui.c          ****     }
 614:ui.c          ****     
 615:ui.c          ****     encoderWatch = 0;
 2440              		.loc 1 615 0
 2441 0158 174B     		ldr	r3, .L101+56
 2442 015a 0022     		movs	r2, #0
 2443 015c 1A70     		strb	r2, [r3]
 616:ui.c          ****     Decoder_1_Stop();
 2444              		.loc 1 616 0
 2445 015e FFF7FEFF 		bl	Decoder_1_Stop
 617:ui.c          ****     editMode = 0;
 2446              		.loc 1 617 0
 2447 0162 164B     		ldr	r3, .L101+60
 2448 0164 0022     		movs	r2, #0
 2449 0166 1A70     		strb	r2, [r3]
 618:ui.c          ****     LED_red2_Write(editMode);
 2450              		.loc 1 618 0
 2451 0168 144B     		ldr	r3, .L101+60
 2452 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2453 016c 1846     		mov	r0, r3
 2454 016e FFF7FEFF 		bl	LED_red2_Write
 619:ui.c          ****     displayCurrentPresetNameAndCopedent();
 2455              		.loc 1 619 0
 2456 0172 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 620:ui.c          **** }
 2457              		.loc 1 620 0
 2458 0176 00BF     		nop
 2459 0178 0C37     		adds	r7, r7, #12
 2460              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 56


 2461 017a BD46     		mov	sp, r7
 2462              		.cfi_def_cfa_register 13
 2463              		@ sp needed
 2464 017c 90BD     		pop	{r4, r7, pc}
 2465              	.L102:
 2466 017e 00BF     		.align	2
 2467              	.L101:
 2468 0180 00000000 		.word	leverCalibrationMode
 2469 0184 00000000 		.word	fretCalibrationMode
 2470 0188 00000000 		.word	menuPosition
 2471 018c 00000000 		.word	transposeFloat
 2472 0190 00000000 		.word	transposeSemitones
 2473 0194 0000C842 		.word	1120403456
 2474 0198 00000000 		.word	transposeCents
 2475 019c 00000000 		.word	octaveAction
 2476 01a0 00000000 		.word	deadZone
 2477 01a4 00000000 		.word	stringRepresentation
 2478 01a8 00000000 		.word	traditionalPedalAdd
 2479 01ac 00000000 		.word	midiBarSendOn
 2480 01b0 00000000 		.word	midiSendOn
 2481 01b4 00000000 		.word	volumeInt
 2482 01b8 00000000 		.word	encoderWatch
 2483 01bc 00000000 		.word	editMode
 2484              		.cfi_endproc
 2485              	.LFE66:
 2486              		.size	exitEditModeMenu, .-exitEditModeMenu
 2487              		.global	fretToCalibrate
 2488              		.bss
 2489              		.type	fretToCalibrate, %object
 2490              		.size	fretToCalibrate, 1
 2491              	fretToCalibrate:
 2492 0009 00       		.space	1
 2493              		.global	whichFretArray
 2494              		.data
 2495 001d 000000   		.align	2
 2496              		.type	whichFretArray, %object
 2497              		.size	whichFretArray, 12
 2498              	whichFretArray:
 2499 0020 00       		.byte	0
 2500 0021 01       		.byte	1
 2501 0022 03       		.byte	3
 2502 0023 05       		.byte	5
 2503 0024 07       		.byte	7
 2504 0025 09       		.byte	9
 2505 0026 0C       		.byte	12
 2506 0027 0F       		.byte	15
 2507 0028 11       		.byte	17
 2508 0029 13       		.byte	19
 2509 002a 15       		.byte	21
 2510 002b 18       		.byte	24
 2511              		.section	.rodata
 2512 014e 0000     		.align	2
 2513              	.LC17:
 2514 0150 56414C55 		.ascii	"VALUE KNOB SETS\000"
 2514      45204B4E 
 2514      4F422053 
 2514      45545300 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 57


 2515              		.align	2
 2516              	.LC18:
 2517 0160 5452414E 		.ascii	"TRANSPOSITION  \000"
 2517      53504F53 
 2517      4954494F 
 2517      4E202000 
 2518              		.align	2
 2519              	.LC19:
 2520 0170 4F435441 		.ascii	"OCTAVE ACTION  \000"
 2520      56452041 
 2520      4354494F 
 2520      4E202000 
 2521              		.align	2
 2522              	.LC20:
 2523 0180 4F4E204E 		.ascii	"ON NEXT NOTE   \000"
 2523      45585420 
 2523      4E4F5445 
 2523      20202000 
 2524              		.align	2
 2525              	.LC21:
 2526 0190 494D4D45 		.ascii	"IMMEDIATE      \000"
 2526      44494154 
 2526      45202020 
 2526      20202000 
 2527              		.align	2
 2528              	.LC22:
 2529 01a0 4C455645 		.ascii	"LEVER DEADZONES\000"
 2529      52204445 
 2529      41445A4F 
 2529      4E455300 
 2530              		.align	2
 2531              	.LC23:
 2532 01b0 53455420 		.ascii	"SET WHICH      \000"
 2532      57484943 
 2532      48202020 
 2532      20202000 
 2533              		.align	2
 2534              	.LC24:
 2535 01c0 53545249 		.ascii	"STRINGS SLIDERS\000"
 2535      4E475320 
 2535      534C4944 
 2535      45525300 
 2536              		.align	2
 2537              	.LC25:
 2538 01d0 52455052 		.ascii	"REPRESENT(1-10)\000"
 2538      4553454E 
 2538      5428312D 
 2538      31302900 
 2539              		.align	2
 2540              	.LC26:
 2541 01e0 50454441 		.ascii	"PEDAL SUM MODE:\000"
 2541      4C205355 
 2541      4D204D4F 
 2541      44453A00 
 2542              		.align	2
 2543              	.LC27:
 2544 01f0 53494D50 		.ascii	"SIMPLE ADD     \000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 58


 2544      4C452041 
 2544      44442020 
 2544      20202000 
 2545              		.align	2
 2546              	.LC28:
 2547 0200 54524144 		.ascii	"TRADITIONAL    \000"
 2547      4954494F 
 2547      4E414C20 
 2547      20202000 
 2548              		.align	2
 2549              	.LC29:
 2550 0210 53454E44 		.ascii	"SEND MIDI \000"
 2550      204D4944 
 2550      492000
 2551 021b 00       		.align	2
 2552              	.LC30:
 2553 021c 53454E44 		.ascii	"SEND BAR  \000"
 2553      20424152 
 2553      202000
 2554 0227 00       		.align	2
 2555              	.LC31:
 2556 0228 564F4C55 		.ascii	"VOLUME    \000"
 2556      4D452020 
 2556      202000
 2557 0233 00       		.align	2
 2558              	.LC32:
 2559 0234 55504441 		.ascii	"UPDATE BRAIN\000"
 2559      54452042 
 2559      5241494E 
 2559      00
 2560 0241 000000   		.align	2
 2561              	.LC33:
 2562 0244 4E4F5720 		.ascii	"NOW PUT ALL\000"
 2562      50555420 
 2562      414C4C00 
 2563              		.align	2
 2564              	.LC34:
 2565 0250 50454441 		.ascii	"PEDALS/LEVERS  \000"
 2565      4C532F4C 
 2565      45564552 
 2565      53202000 
 2566              		.align	2
 2567              	.LC35:
 2568 0260 494E2052 		.ascii	"IN RESTING STATE\000"
 2568      45535449 
 2568      4E472053 
 2568      54415445 
 2568      00
 2569 0271 000000   		.align	2
 2570              	.LC36:
 2571 0274 414E4420 		.ascii	"AND PRESS EDIT\000"
 2571      50524553 
 2571      53204544 
 2571      495400
 2572 0283 00       		.align	2
 2573              	.LC37:
 2574 0284 53454C45 		.ascii	"SELECT DEST\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 59


 2574      43542044 
 2574      45535400 
 2575              		.align	2
 2576              	.LC38:
 2577 0290 4C4F4341 		.ascii	"LOCATION THEN \000"
 2577      54494F4E 
 2577      20544845 
 2577      4E2000
 2578 029f 00       		.align	2
 2579              	.LC39:
 2580 02a0 50555348 		.ascii	"PUSH -> \000"
 2580      202D3E20 
 2580      00
 2581 02a9 000000   		.align	2
 2582              	.LC40:
 2583 02ac 55534520 		.ascii	"USE VALUE KNOB\000"
 2583      56414C55 
 2583      45204B4E 
 2583      4F4200
 2584 02bb 00       		.align	2
 2585              	.LC41:
 2586 02bc 544F2043 		.ascii	"TO CREATE NAME\000"
 2586      52454154 
 2586      45204E41 
 2586      4D4500
 2587 02cb 00       		.align	2
 2588              	.LC42:
 2589 02cc 20202020 		.ascii	"               \000"
 2589      20202020 
 2589      20202020 
 2589      20202000 
 2590              		.section	.text.menuAction,"ax",%progbits
 2591              		.align	2
 2592              		.global	menuAction
 2593              		.thumb
 2594              		.thumb_func
 2595              		.type	menuAction, %function
 2596              	menuAction:
 2597              	.LFB67:
 621:ui.c          **** 
 622:ui.c          **** uint8_t fretToCalibrate = 0;
 623:ui.c          **** uint8_t whichFretArray[NUM_FRET_MEASUREMENTS] = {0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24};
 624:ui.c          **** void menuAction(enum direction action)
 625:ui.c          **** {
 2598              		.loc 1 625 0
 2599              		.cfi_startproc
 2600              		@ args = 0, pretend = 0, frame = 40
 2601              		@ frame_needed = 1, uses_anonymous_args = 0
 2602 0000 80B5     		push	{r7, lr}
 2603              		.cfi_def_cfa_offset 8
 2604              		.cfi_offset 7, -8
 2605              		.cfi_offset 14, -4
 2606 0002 8CB0     		sub	sp, sp, #48
 2607              		.cfi_def_cfa_offset 56
 2608 0004 02AF     		add	r7, sp, #8
 2609              		.cfi_def_cfa 7, 48
 2610 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 60


 2611 0008 FB71     		strb	r3, [r7, #7]
 626:ui.c          ****     uint8_t whatToDraw = 0;
 2612              		.loc 1 626 0
 2613 000a 0023     		movs	r3, #0
 2614 000c 87F82730 		strb	r3, [r7, #39]
 627:ui.c          ****     
 628:ui.c          ****     if (menuPosition[0][0] == MainMenu) //we are at the main menu
 2615              		.loc 1 628 0
 2616 0010 9E4B     		ldr	r3, .L211
 2617 0012 93F90030 		ldrsb	r3, [r3]
 2618 0016 002B     		cmp	r3, #0
 2619 0018 51D1     		bne	.L104
 629:ui.c          ****     {
 630:ui.c          ****         //if we went up or down, switch the menu item
 631:ui.c          ****         if (action == Up)
 2620              		.loc 1 631 0
 2621 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2622 001c 032B     		cmp	r3, #3
 2623 001e 15D1     		bne	.L105
 632:ui.c          ****         {
 633:ui.c          ****             menuPosition[0][1]--;
 2624              		.loc 1 633 0
 2625 0020 9A4B     		ldr	r3, .L211
 2626 0022 93F90130 		ldrsb	r3, [r3, #1]
 2627 0026 DBB2     		uxtb	r3, r3
 2628 0028 013B     		subs	r3, r3, #1
 2629 002a DBB2     		uxtb	r3, r3
 2630 002c 5AB2     		sxtb	r2, r3
 2631 002e 974B     		ldr	r3, .L211
 2632 0030 5A70     		strb	r2, [r3, #1]
 634:ui.c          ****             if (menuPosition[0][1] < 0)
 2633              		.loc 1 634 0
 2634 0032 964B     		ldr	r3, .L211
 2635 0034 93F90130 		ldrsb	r3, [r3, #1]
 2636 0038 002B     		cmp	r3, #0
 2637 003a 02DA     		bge	.L106
 635:ui.c          ****             {
 636:ui.c          ****                 menuPosition[0][1] = 0;
 2638              		.loc 1 636 0
 2639 003c 934B     		ldr	r3, .L211
 2640 003e 0022     		movs	r2, #0
 2641 0040 5A70     		strb	r2, [r3, #1]
 2642              	.L106:
 637:ui.c          ****             }
 638:ui.c          ****             whatToDraw = 1;
 2643              		.loc 1 638 0
 2644 0042 0123     		movs	r3, #1
 2645 0044 87F82730 		strb	r3, [r7, #39]
 2646 0048 00F03EBF 		b	.L111
 2647              	.L105:
 639:ui.c          ****         }
 640:ui.c          ****         else if (action == Down)
 2648              		.loc 1 640 0
 2649 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2650 004e 022B     		cmp	r3, #2
 2651 0050 1CD1     		bne	.L108
 641:ui.c          ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 61


 642:ui.c          ****             menuPosition[0][1]++;
 2652              		.loc 1 642 0
 2653 0052 8E4B     		ldr	r3, .L211
 2654 0054 93F90130 		ldrsb	r3, [r3, #1]
 2655 0058 DBB2     		uxtb	r3, r3
 2656 005a 0133     		adds	r3, r3, #1
 2657 005c DBB2     		uxtb	r3, r3
 2658 005e 5AB2     		sxtb	r2, r3
 2659 0060 8A4B     		ldr	r3, .L211
 2660 0062 5A70     		strb	r2, [r3, #1]
 643:ui.c          ****             if (menuPosition[0][1] >= numMainMenuItems)
 2661              		.loc 1 643 0
 2662 0064 894B     		ldr	r3, .L211
 2663 0066 93F90130 		ldrsb	r3, [r3, #1]
 2664 006a 1A46     		mov	r2, r3
 2665 006c 884B     		ldr	r3, .L211+4
 2666 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2667 0070 9A42     		cmp	r2, r3
 2668 0072 06DB     		blt	.L109
 644:ui.c          ****             {
 645:ui.c          ****                 menuPosition[0][1] = numMainMenuItems-1;
 2669              		.loc 1 645 0
 2670 0074 864B     		ldr	r3, .L211+4
 2671 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2672 0078 013B     		subs	r3, r3, #1
 2673 007a DBB2     		uxtb	r3, r3
 2674 007c 5AB2     		sxtb	r2, r3
 2675 007e 834B     		ldr	r3, .L211
 2676 0080 5A70     		strb	r2, [r3, #1]
 2677              	.L109:
 646:ui.c          ****             }
 647:ui.c          ****             whatToDraw = 1;
 2678              		.loc 1 647 0
 2679 0082 0123     		movs	r3, #1
 2680 0084 87F82730 		strb	r3, [r7, #39]
 2681 0088 00F01EBF 		b	.L111
 2682              	.L108:
 648:ui.c          ****         }
 649:ui.c          ****         else if ((action == Right) || (action == Enter))
 2683              		.loc 1 649 0
 2684 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2685 008e 012B     		cmp	r3, #1
 2686 0090 03D0     		beq	.L110
 2687              		.loc 1 649 0 is_stmt 0 discriminator 1
 2688 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2689 0094 042B     		cmp	r3, #4
 2690 0096 40F01787 		bne	.L111
 2691              	.L110:
 650:ui.c          ****         {
 651:ui.c          ****             //select this submenu from the main menu
 652:ui.c          ****             menuPosition[0][0] = menuPosition[0][1]+1; //now [0][0] = 1 means presetStore [0][0] = 
 2692              		.loc 1 652 0 is_stmt 1
 2693 009a 7C4B     		ldr	r3, .L211
 2694 009c 93F90130 		ldrsb	r3, [r3, #1]
 2695 00a0 DBB2     		uxtb	r3, r3
 2696 00a2 0133     		adds	r3, r3, #1
 2697 00a4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 62


 2698 00a6 5AB2     		sxtb	r2, r3
 2699 00a8 784B     		ldr	r3, .L211
 2700 00aa 1A70     		strb	r2, [r3]
 653:ui.c          ****             whatToDraw = menuPosition[0][0]+1;
 2701              		.loc 1 653 0
 2702 00ac 774B     		ldr	r3, .L211
 2703 00ae 93F90030 		ldrsb	r3, [r3]
 2704 00b2 DBB2     		uxtb	r3, r3
 2705 00b4 0133     		adds	r3, r3, #1
 2706 00b6 87F82730 		strb	r3, [r7, #39]
 2707 00ba 00F005BF 		b	.L111
 2708              	.L104:
 654:ui.c          ****         }
 655:ui.c          ****         //ignore left button
 656:ui.c          ****     }
 657:ui.c          ****     else if (menuPosition[0][0] == CalibrationMenu) //we are at the calibration submenu
 2709              		.loc 1 657 0
 2710 00be 734B     		ldr	r3, .L211
 2711 00c0 93F90030 		ldrsb	r3, [r3]
 2712 00c4 022B     		cmp	r3, #2
 2713 00c6 69D1     		bne	.L112
 658:ui.c          ****     {
 659:ui.c          ****         //if we went up or down, switch the menu item
 660:ui.c          ****         if (action == Up)
 2714              		.loc 1 660 0
 2715 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2716 00ca 032B     		cmp	r3, #3
 2717 00cc 15D1     		bne	.L113
 661:ui.c          ****         {
 662:ui.c          ****             menuPosition[1][1]--;
 2718              		.loc 1 662 0
 2719 00ce 6F4B     		ldr	r3, .L211
 2720 00d0 93F90330 		ldrsb	r3, [r3, #3]
 2721 00d4 DBB2     		uxtb	r3, r3
 2722 00d6 013B     		subs	r3, r3, #1
 2723 00d8 DBB2     		uxtb	r3, r3
 2724 00da 5AB2     		sxtb	r2, r3
 2725 00dc 6B4B     		ldr	r3, .L211
 2726 00de DA70     		strb	r2, [r3, #3]
 663:ui.c          ****             if (menuPosition[1][1] < 0)
 2727              		.loc 1 663 0
 2728 00e0 6A4B     		ldr	r3, .L211
 2729 00e2 93F90330 		ldrsb	r3, [r3, #3]
 2730 00e6 002B     		cmp	r3, #0
 2731 00e8 02DA     		bge	.L114
 664:ui.c          ****             {
 665:ui.c          ****                 menuPosition[1][1] = 0;
 2732              		.loc 1 665 0
 2733 00ea 684B     		ldr	r3, .L211
 2734 00ec 0022     		movs	r2, #0
 2735 00ee DA70     		strb	r2, [r3, #3]
 2736              	.L114:
 666:ui.c          ****             }
 667:ui.c          ****             whatToDraw = 3;
 2737              		.loc 1 667 0
 2738 00f0 0323     		movs	r3, #3
 2739 00f2 87F82730 		strb	r3, [r7, #39]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 63


 2740 00f6 00F0E7BE 		b	.L111
 2741              	.L113:
 668:ui.c          ****         }
 669:ui.c          ****         else if (action == Down)
 2742              		.loc 1 669 0
 2743 00fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2744 00fc 022B     		cmp	r3, #2
 2745 00fe 1CD1     		bne	.L116
 670:ui.c          ****         {
 671:ui.c          ****             menuPosition[1][1]++;
 2746              		.loc 1 671 0
 2747 0100 624B     		ldr	r3, .L211
 2748 0102 93F90330 		ldrsb	r3, [r3, #3]
 2749 0106 DBB2     		uxtb	r3, r3
 2750 0108 0133     		adds	r3, r3, #1
 2751 010a DBB2     		uxtb	r3, r3
 2752 010c 5AB2     		sxtb	r2, r3
 2753 010e 5F4B     		ldr	r3, .L211
 2754 0110 DA70     		strb	r2, [r3, #3]
 672:ui.c          ****             if (menuPosition[1][1] >= numCalibrationItems)
 2755              		.loc 1 672 0
 2756 0112 5E4B     		ldr	r3, .L211
 2757 0114 93F90330 		ldrsb	r3, [r3, #3]
 2758 0118 1A46     		mov	r2, r3
 2759 011a 5E4B     		ldr	r3, .L211+8
 2760 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2761 011e 9A42     		cmp	r2, r3
 2762 0120 06DB     		blt	.L117
 673:ui.c          ****             {
 674:ui.c          ****                 menuPosition[1][1] = numCalibrationItems-1;
 2763              		.loc 1 674 0
 2764 0122 5C4B     		ldr	r3, .L211+8
 2765 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2766 0126 013B     		subs	r3, r3, #1
 2767 0128 DBB2     		uxtb	r3, r3
 2768 012a 5AB2     		sxtb	r2, r3
 2769 012c 574B     		ldr	r3, .L211
 2770 012e DA70     		strb	r2, [r3, #3]
 2771              	.L117:
 675:ui.c          ****             }
 676:ui.c          ****             whatToDraw = 3;
 2772              		.loc 1 676 0
 2773 0130 0323     		movs	r3, #3
 2774 0132 87F82730 		strb	r3, [r7, #39]
 2775 0136 00F0C7BE 		b	.L111
 2776              	.L116:
 677:ui.c          ****         }
 678:ui.c          ****         else if ((action == Right) || (action == Enter))
 2777              		.loc 1 678 0
 2778 013a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2779 013c 012B     		cmp	r3, #1
 2780 013e 02D0     		beq	.L118
 2781              		.loc 1 678 0 is_stmt 0 discriminator 1
 2782 0140 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2783 0142 042B     		cmp	r3, #4
 2784 0144 1ED1     		bne	.L119
 2785              	.L118:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 64


 679:ui.c          ****         {
 680:ui.c          ****             if (menuPosition[1][1] == 0)
 2786              		.loc 1 680 0 is_stmt 1
 2787 0146 514B     		ldr	r3, .L211
 2788 0148 93F90330 		ldrsb	r3, [r3, #3]
 2789 014c 002B     		cmp	r3, #0
 2790 014e 09D1     		bne	.L120
 681:ui.c          ****             {
 682:ui.c          ****                 //calibrate levers
 683:ui.c          ****                 menuPosition[0][0] = CalibrateLeversMenu; //means calibrating levers now
 2791              		.loc 1 683 0
 2792 0150 4E4B     		ldr	r3, .L211
 2793 0152 0422     		movs	r2, #4
 2794 0154 1A70     		strb	r2, [r3]
 684:ui.c          ****                 whatToDraw = 0;
 2795              		.loc 1 684 0
 2796 0156 0023     		movs	r3, #0
 2797 0158 87F82730 		strb	r3, [r7, #39]
 685:ui.c          ****                 enterLeverCalibrationMode();
 2798              		.loc 1 685 0
 2799 015c FFF7FEFF 		bl	enterLeverCalibrationMode
 680:ui.c          ****             {
 2800              		.loc 1 680 0
 2801 0160 00F0AFBE 		b	.L208
 2802              	.L120:
 686:ui.c          ****             }
 687:ui.c          ****             else if (menuPosition[1][1] == 1)
 2803              		.loc 1 687 0
 2804 0164 494B     		ldr	r3, .L211
 2805 0166 93F90330 		ldrsb	r3, [r3, #3]
 2806 016a 012B     		cmp	r3, #1
 2807 016c 40F0A986 		bne	.L208
 688:ui.c          ****             {
 689:ui.c          ****                 //calibrate bar slider frets
 690:ui.c          ****                 menuPosition[0][0] = CalibrateFretsMenu; //means calibrating frets now
 2808              		.loc 1 690 0
 2809 0170 464B     		ldr	r3, .L211
 2810 0172 0522     		movs	r2, #5
 2811 0174 1A70     		strb	r2, [r3]
 691:ui.c          ****                 whatToDraw = 0;
 2812              		.loc 1 691 0
 2813 0176 0023     		movs	r3, #0
 2814 0178 87F82730 		strb	r3, [r7, #39]
 692:ui.c          ****                 enterFretCalibrationMode();
 2815              		.loc 1 692 0
 2816 017c FFF7FEFF 		bl	enterFretCalibrationMode
 680:ui.c          ****             {
 2817              		.loc 1 680 0
 2818 0180 00F09FBE 		b	.L208
 2819              	.L119:
 693:ui.c          ****             }
 694:ui.c          ****         }
 695:ui.c          ****         else if (action == Left) 
 2820              		.loc 1 695 0
 2821 0184 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2822 0186 002B     		cmp	r3, #0
 2823 0188 40F09E86 		bne	.L111
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 65


 696:ui.c          ****         {
 697:ui.c          ****             //go back to main menu
 698:ui.c          ****             menuPosition[0][0] = 0;
 2824              		.loc 1 698 0
 2825 018c 3F4B     		ldr	r3, .L211
 2826 018e 0022     		movs	r2, #0
 2827 0190 1A70     		strb	r2, [r3]
 699:ui.c          ****             whatToDraw = 1;
 2828              		.loc 1 699 0
 2829 0192 0123     		movs	r3, #1
 2830 0194 87F82730 		strb	r3, [r7, #39]
 2831 0198 00F096BE 		b	.L111
 2832              	.L112:
 700:ui.c          ****         }
 701:ui.c          ****     }
 702:ui.c          ****     else if (menuPosition[0][0] == SettingsMenu) //we are at the settings submenu
 2833              		.loc 1 702 0
 2834 019c 3B4B     		ldr	r3, .L211
 2835 019e 93F90030 		ldrsb	r3, [r3]
 2836 01a2 032B     		cmp	r3, #3
 2837 01a4 40F0FF82 		bne	.L122
 703:ui.c          ****     {
 704:ui.c          ****         //if we went up or down, switch the menu item
 705:ui.c          ****         if (action == Up)
 2838              		.loc 1 705 0
 2839 01a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2840 01aa 032B     		cmp	r3, #3
 2841 01ac 15D1     		bne	.L123
 706:ui.c          ****         {
 707:ui.c          ****             menuPosition[2][1]--;
 2842              		.loc 1 707 0
 2843 01ae 374B     		ldr	r3, .L211
 2844 01b0 93F90530 		ldrsb	r3, [r3, #5]
 2845 01b4 DBB2     		uxtb	r3, r3
 2846 01b6 013B     		subs	r3, r3, #1
 2847 01b8 DBB2     		uxtb	r3, r3
 2848 01ba 5AB2     		sxtb	r2, r3
 2849 01bc 334B     		ldr	r3, .L211
 2850 01be 5A71     		strb	r2, [r3, #5]
 708:ui.c          ****             if (menuPosition[2][1] < 0)
 2851              		.loc 1 708 0
 2852 01c0 324B     		ldr	r3, .L211
 2853 01c2 93F90530 		ldrsb	r3, [r3, #5]
 2854 01c6 002B     		cmp	r3, #0
 2855 01c8 02DA     		bge	.L124
 709:ui.c          ****             {
 710:ui.c          ****                 menuPosition[2][1] = 0;
 2856              		.loc 1 710 0
 2857 01ca 304B     		ldr	r3, .L211
 2858 01cc 0022     		movs	r2, #0
 2859 01ce 5A71     		strb	r2, [r3, #5]
 2860              	.L124:
 711:ui.c          ****             }
 712:ui.c          ****             whatToDraw = 4;
 2861              		.loc 1 712 0
 2862 01d0 0423     		movs	r3, #4
 2863 01d2 87F82730 		strb	r3, [r7, #39]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 66


 2864 01d6 00F077BE 		b	.L111
 2865              	.L123:
 713:ui.c          ****         }
 714:ui.c          ****         else if (action == Down)
 2866              		.loc 1 714 0
 2867 01da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2868 01dc 022B     		cmp	r3, #2
 2869 01de 1CD1     		bne	.L126
 715:ui.c          ****         {
 716:ui.c          ****             menuPosition[2][1]++;
 2870              		.loc 1 716 0
 2871 01e0 2A4B     		ldr	r3, .L211
 2872 01e2 93F90530 		ldrsb	r3, [r3, #5]
 2873 01e6 DBB2     		uxtb	r3, r3
 2874 01e8 0133     		adds	r3, r3, #1
 2875 01ea DBB2     		uxtb	r3, r3
 2876 01ec 5AB2     		sxtb	r2, r3
 2877 01ee 274B     		ldr	r3, .L211
 2878 01f0 5A71     		strb	r2, [r3, #5]
 717:ui.c          ****             if (menuPosition[2][1] >= numSettingsItems)
 2879              		.loc 1 717 0
 2880 01f2 264B     		ldr	r3, .L211
 2881 01f4 93F90530 		ldrsb	r3, [r3, #5]
 2882 01f8 1A46     		mov	r2, r3
 2883 01fa 274B     		ldr	r3, .L211+12
 2884 01fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2885 01fe 9A42     		cmp	r2, r3
 2886 0200 06DB     		blt	.L127
 718:ui.c          ****             {
 719:ui.c          ****                 menuPosition[2][1] = numSettingsItems-1;
 2887              		.loc 1 719 0
 2888 0202 254B     		ldr	r3, .L211+12
 2889 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2890 0206 013B     		subs	r3, r3, #1
 2891 0208 DBB2     		uxtb	r3, r3
 2892 020a 5AB2     		sxtb	r2, r3
 2893 020c 1F4B     		ldr	r3, .L211
 2894 020e 5A71     		strb	r2, [r3, #5]
 2895              	.L127:
 720:ui.c          ****             }
 721:ui.c          ****             whatToDraw = 4;
 2896              		.loc 1 721 0
 2897 0210 0423     		movs	r3, #4
 2898 0212 87F82730 		strb	r3, [r7, #39]
 2899 0216 00F057BE 		b	.L111
 2900              	.L126:
 722:ui.c          ****         }
 723:ui.c          ****         else if ((action == Right) || (action == Enter))
 2901              		.loc 1 723 0
 2902 021a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2903 021c 012B     		cmp	r3, #1
 2904 021e 03D0     		beq	.L128
 2905              		.loc 1 723 0 is_stmt 0 discriminator 1
 2906 0220 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2907 0222 042B     		cmp	r3, #4
 2908 0224 40F0B482 		bne	.L129
 2909              	.L128:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 67


 724:ui.c          ****         {
 725:ui.c          ****             if (menuPosition[2][1] == 0)
 2910              		.loc 1 725 0 is_stmt 1
 2911 0228 184B     		ldr	r3, .L211
 2912 022a 93F90530 		ldrsb	r3, [r3, #5]
 2913 022e 002B     		cmp	r3, #0
 2914 0230 3ED1     		bne	.L130
 726:ui.c          ****             {
 727:ui.c          ****                 //transpose
 728:ui.c          ****                 menuPosition[0][0] = TransposeMenu;
 2915              		.loc 1 728 0
 2916 0232 164B     		ldr	r3, .L211
 2917 0234 0622     		movs	r2, #6
 2918 0236 1A70     		strb	r2, [r3]
 729:ui.c          ****                 Decoder_1_Start();
 2919              		.loc 1 729 0
 2920 0238 FFF7FEFF 		bl	Decoder_1_Start
 730:ui.c          ****                 whatToDraw = 0;
 2921              		.loc 1 730 0
 2922 023c 0023     		movs	r3, #0
 2923 023e 87F82730 		strb	r3, [r7, #39]
 731:ui.c          ****                 encoderWatch = 1;
 2924              		.loc 1 731 0
 2925 0242 164B     		ldr	r3, .L211+16
 2926 0244 0122     		movs	r2, #1
 2927 0246 1A70     		strb	r2, [r3]
 732:ui.c          ****                 OLEDclear(128, 64);
 2928              		.loc 1 732 0
 2929 0248 4021     		movs	r1, #64
 2930 024a 8020     		movs	r0, #128
 2931 024c FFF7FEFF 		bl	OLEDclear
 733:ui.c          ****                 myGFX_setFont(2);
 2932              		.loc 1 733 0
 2933 0250 0220     		movs	r0, #2
 2934 0252 FFF7FEFF 		bl	myGFX_setFont
 734:ui.c          ****                 OLEDtextColor(1, 0);
 2935              		.loc 1 734 0
 2936 0256 0021     		movs	r1, #0
 2937 0258 0120     		movs	r0, #1
 2938 025a FFF7FEFF 		bl	OLEDtextColor
 735:ui.c          ****                 OLEDwriteString("VALUE KNOB SETS", 15, 0, FirstLine);
 2939              		.loc 1 735 0
 2940 025e 0023     		movs	r3, #0
 2941 0260 0022     		movs	r2, #0
 2942 0262 0F21     		movs	r1, #15
 2943 0264 0E48     		ldr	r0, .L211+20
 2944 0266 FFF7FEFF 		bl	OLEDwriteString
 736:ui.c          ****                 OLEDwriteString("TRANSPOSITION  ", 15, 0, SecondLine);
 2945              		.loc 1 736 0
 2946 026a 0123     		movs	r3, #1
 2947 026c 0022     		movs	r2, #0
 2948 026e 0F21     		movs	r1, #15
 2949 0270 0C48     		ldr	r0, .L211+24
 2950 0272 FFF7FEFF 		bl	OLEDwriteString
 737:ui.c          ****                 prevEncoderVal = 127;
 2951              		.loc 1 737 0
 2952 0276 0C4B     		ldr	r3, .L211+28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 68


 2953 0278 7F22     		movs	r2, #127
 2954 027a 1A70     		strb	r2, [r3]
 738:ui.c          ****                 Decoder_1_SetPosition(0);
 2955              		.loc 1 738 0
 2956 027c 0020     		movs	r0, #0
 2957 027e FFF7FEFF 		bl	Decoder_1_SetPosition
 739:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2958              		.loc 1 739 0
 2959 0282 0A4B     		ldr	r3, .L211+32
 2960 0284 0122     		movs	r2, #1
 2961 0286 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 2962              		.loc 1 725 0
 2963 0288 00F01DBE 		b	.L209
 2964              	.L212:
 2965              		.align	2
 2966              	.L211:
 2967 028c 00000000 		.word	menuPosition
 2968 0290 00000000 		.word	numMainMenuItems
 2969 0294 00000000 		.word	numCalibrationItems
 2970 0298 00000000 		.word	numSettingsItems
 2971 029c 00000000 		.word	encoderWatch
 2972 02a0 50010000 		.word	.LC17
 2973 02a4 60010000 		.word	.LC18
 2974 02a8 00000000 		.word	prevEncoderVal
 2975 02ac 00000000 		.word	mainOLEDWaitingToSend
 2976              	.L130:
 740:ui.c          ****             }
 741:ui.c          ****             else if (menuPosition[2][1] == 1)
 2977              		.loc 1 741 0
 2978 02b0 A64B     		ldr	r3, .L213
 2979 02b2 93F90530 		ldrsb	r3, [r3, #5]
 2980 02b6 012B     		cmp	r3, #1
 2981 02b8 46D1     		bne	.L132
 742:ui.c          ****             {
 743:ui.c          ****                 //octave action setting
 744:ui.c          ****                 menuPosition[0][0] = OctaveActionMenu;
 2982              		.loc 1 744 0
 2983 02ba A44B     		ldr	r3, .L213
 2984 02bc 0722     		movs	r2, #7
 2985 02be 1A70     		strb	r2, [r3]
 745:ui.c          ****       
 746:ui.c          ****                 OLEDclear(128, 64);
 2986              		.loc 1 746 0
 2987 02c0 4021     		movs	r1, #64
 2988 02c2 8020     		movs	r0, #128
 2989 02c4 FFF7FEFF 		bl	OLEDclear
 747:ui.c          ****                 myGFX_setFont(2);
 2990              		.loc 1 747 0
 2991 02c8 0220     		movs	r0, #2
 2992 02ca FFF7FEFF 		bl	myGFX_setFont
 748:ui.c          ****                 OLEDtextColor(1, 0);
 2993              		.loc 1 748 0
 2994 02ce 0021     		movs	r1, #0
 2995 02d0 0120     		movs	r0, #1
 2996 02d2 FFF7FEFF 		bl	OLEDtextColor
 749:ui.c          ****                 OLEDwriteString("OCTAVE ACTION  ", 15, 0, FirstLine);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 69


 2997              		.loc 1 749 0
 2998 02d6 0023     		movs	r3, #0
 2999 02d8 0022     		movs	r2, #0
 3000 02da 0F21     		movs	r1, #15
 3001 02dc 9C48     		ldr	r0, .L213+4
 3002 02de FFF7FEFF 		bl	OLEDwriteString
 750:ui.c          ****                
 751:ui.c          ****                 OLEDtextColor(octaveAction, !octaveAction);
 3003              		.loc 1 751 0
 3004 02e2 9C4B     		ldr	r3, .L213+8
 3005 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3006 02e6 9AB2     		uxth	r2, r3
 3007 02e8 9A4B     		ldr	r3, .L213+8
 3008 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3009 02ec 002B     		cmp	r3, #0
 3010 02ee 0CBF     		ite	eq
 3011 02f0 0123     		moveq	r3, #1
 3012 02f2 0023     		movne	r3, #0
 3013 02f4 DBB2     		uxtb	r3, r3
 3014 02f6 9BB2     		uxth	r3, r3
 3015 02f8 1946     		mov	r1, r3
 3016 02fa 1046     		mov	r0, r2
 3017 02fc FFF7FEFF 		bl	OLEDtextColor
 752:ui.c          ****                 OLEDwriteString("ON NEXT NOTE   ", 15, 0, SecondLine);
 3018              		.loc 1 752 0
 3019 0300 0123     		movs	r3, #1
 3020 0302 0022     		movs	r2, #0
 3021 0304 0F21     		movs	r1, #15
 3022 0306 9448     		ldr	r0, .L213+12
 3023 0308 FFF7FEFF 		bl	OLEDwriteString
 753:ui.c          ****                 OLEDtextColor(!octaveAction, octaveAction);
 3024              		.loc 1 753 0
 3025 030c 914B     		ldr	r3, .L213+8
 3026 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3027 0310 002B     		cmp	r3, #0
 3028 0312 0CBF     		ite	eq
 3029 0314 0123     		moveq	r3, #1
 3030 0316 0023     		movne	r3, #0
 3031 0318 DBB2     		uxtb	r3, r3
 3032 031a 9AB2     		uxth	r2, r3
 3033 031c 8D4B     		ldr	r3, .L213+8
 3034 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3035 0320 9BB2     		uxth	r3, r3
 3036 0322 1946     		mov	r1, r3
 3037 0324 1046     		mov	r0, r2
 3038 0326 FFF7FEFF 		bl	OLEDtextColor
 754:ui.c          ****                 OLEDwriteString("IMMEDIATE      ", 15, 0, ThirdLine);
 3039              		.loc 1 754 0
 3040 032a 0223     		movs	r3, #2
 3041 032c 0022     		movs	r2, #0
 3042 032e 0F21     		movs	r1, #15
 3043 0330 8A48     		ldr	r0, .L213+16
 3044 0332 FFF7FEFF 		bl	OLEDwriteString
 755:ui.c          ****                 OLEDtextColor(1, 0);
 3045              		.loc 1 755 0
 3046 0336 0021     		movs	r1, #0
 3047 0338 0120     		movs	r0, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 70


 3048 033a FFF7FEFF 		bl	OLEDtextColor
 756:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3049              		.loc 1 756 0
 3050 033e 884B     		ldr	r3, .L213+20
 3051 0340 0122     		movs	r2, #1
 3052 0342 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3053              		.loc 1 725 0
 3054 0344 00F0BFBD 		b	.L209
 3055              	.L132:
 757:ui.c          ****             }
 758:ui.c          ****             else if (menuPosition[2][1] == 2)
 3056              		.loc 1 758 0
 3057 0348 804B     		ldr	r3, .L213
 3058 034a 93F90530 		ldrsb	r3, [r3, #5]
 3059 034e 022B     		cmp	r3, #2
 3060 0350 2CD1     		bne	.L133
 759:ui.c          ****             {
 760:ui.c          ****                 //dead zone setting
 761:ui.c          ****                 menuPosition[0][0] = DeadzonesMenu;
 3061              		.loc 1 761 0
 3062 0352 7E4B     		ldr	r3, .L213
 3063 0354 0822     		movs	r2, #8
 3064 0356 1A70     		strb	r2, [r3]
 762:ui.c          ****                 Decoder_1_Start();
 3065              		.loc 1 762 0
 3066 0358 FFF7FEFF 		bl	Decoder_1_Start
 763:ui.c          ****                 whatToDraw = 0;
 3067              		.loc 1 763 0
 3068 035c 0023     		movs	r3, #0
 3069 035e 87F82730 		strb	r3, [r7, #39]
 764:ui.c          ****                 encoderWatch = 1;
 3070              		.loc 1 764 0
 3071 0362 804B     		ldr	r3, .L213+24
 3072 0364 0122     		movs	r2, #1
 3073 0366 1A70     		strb	r2, [r3]
 765:ui.c          ****                 OLEDclear(128, 64);
 3074              		.loc 1 765 0
 3075 0368 4021     		movs	r1, #64
 3076 036a 8020     		movs	r0, #128
 3077 036c FFF7FEFF 		bl	OLEDclear
 766:ui.c          ****                 myGFX_setFont(2);
 3078              		.loc 1 766 0
 3079 0370 0220     		movs	r0, #2
 3080 0372 FFF7FEFF 		bl	myGFX_setFont
 767:ui.c          ****                 OLEDtextColor(1, 0);
 3081              		.loc 1 767 0
 3082 0376 0021     		movs	r1, #0
 3083 0378 0120     		movs	r0, #1
 3084 037a FFF7FEFF 		bl	OLEDtextColor
 768:ui.c          ****                 OLEDwriteString("VALUE KNOB SETS", 15, 0, FirstLine);
 3085              		.loc 1 768 0
 3086 037e 0023     		movs	r3, #0
 3087 0380 0022     		movs	r2, #0
 3088 0382 0F21     		movs	r1, #15
 3089 0384 7848     		ldr	r0, .L213+28
 3090 0386 FFF7FEFF 		bl	OLEDwriteString
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 71


 769:ui.c          ****                 OLEDwriteString("LEVER DEADZONES", 15, 0, SecondLine);
 3091              		.loc 1 769 0
 3092 038a 0123     		movs	r3, #1
 3093 038c 0022     		movs	r2, #0
 3094 038e 0F21     		movs	r1, #15
 3095 0390 7648     		ldr	r0, .L213+32
 3096 0392 FFF7FEFF 		bl	OLEDwriteString
 770:ui.c          ****                 prevEncoderVal = 127;
 3097              		.loc 1 770 0
 3098 0396 764B     		ldr	r3, .L213+36
 3099 0398 7F22     		movs	r2, #127
 3100 039a 1A70     		strb	r2, [r3]
 771:ui.c          ****                 Decoder_1_SetPosition(0);
 3101              		.loc 1 771 0
 3102 039c 0020     		movs	r0, #0
 3103 039e FFF7FEFF 		bl	Decoder_1_SetPosition
 772:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3104              		.loc 1 772 0
 3105 03a2 6F4B     		ldr	r3, .L213+20
 3106 03a4 0122     		movs	r2, #1
 3107 03a6 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3108              		.loc 1 725 0
 3109 03a8 00F08DBD 		b	.L209
 3110              	.L133:
 773:ui.c          ****             }
 774:ui.c          ****             else if (menuPosition[2][1] == 3)
 3111              		.loc 1 774 0
 3112 03ac 674B     		ldr	r3, .L213
 3113 03ae 93F90530 		ldrsb	r3, [r3, #5]
 3114 03b2 032B     		cmp	r3, #3
 3115 03b4 35D1     		bne	.L134
 775:ui.c          ****             {
 776:ui.c          ****                 //dead zone setting
 777:ui.c          ****                 menuPosition[0][0] = SliderRepMenu;
 3116              		.loc 1 777 0
 3117 03b6 654B     		ldr	r3, .L213
 3118 03b8 0922     		movs	r2, #9
 3119 03ba 1A70     		strb	r2, [r3]
 778:ui.c          ****                 Decoder_1_Start();
 3120              		.loc 1 778 0
 3121 03bc FFF7FEFF 		bl	Decoder_1_Start
 779:ui.c          ****                 whatToDraw = 0;
 3122              		.loc 1 779 0
 3123 03c0 0023     		movs	r3, #0
 3124 03c2 87F82730 		strb	r3, [r7, #39]
 780:ui.c          ****                 encoderWatch = 1;
 3125              		.loc 1 780 0
 3126 03c6 674B     		ldr	r3, .L213+24
 3127 03c8 0122     		movs	r2, #1
 3128 03ca 1A70     		strb	r2, [r3]
 781:ui.c          ****                 OLEDclear(128, 64);
 3129              		.loc 1 781 0
 3130 03cc 4021     		movs	r1, #64
 3131 03ce 8020     		movs	r0, #128
 3132 03d0 FFF7FEFF 		bl	OLEDclear
 782:ui.c          ****                 myGFX_setFont(2);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 72


 3133              		.loc 1 782 0
 3134 03d4 0220     		movs	r0, #2
 3135 03d6 FFF7FEFF 		bl	myGFX_setFont
 783:ui.c          ****                 OLEDtextColor(1, 0);
 3136              		.loc 1 783 0
 3137 03da 0021     		movs	r1, #0
 3138 03dc 0120     		movs	r0, #1
 3139 03de FFF7FEFF 		bl	OLEDtextColor
 784:ui.c          ****                 OLEDwriteString("SET WHICH      ", 15, 0, FirstLine);
 3140              		.loc 1 784 0
 3141 03e2 0023     		movs	r3, #0
 3142 03e4 0022     		movs	r2, #0
 3143 03e6 0F21     		movs	r1, #15
 3144 03e8 6248     		ldr	r0, .L213+40
 3145 03ea FFF7FEFF 		bl	OLEDwriteString
 785:ui.c          ****                 OLEDwriteString("STRINGS SLIDERS", 15, 0, SecondLine);
 3146              		.loc 1 785 0
 3147 03ee 0123     		movs	r3, #1
 3148 03f0 0022     		movs	r2, #0
 3149 03f2 0F21     		movs	r1, #15
 3150 03f4 6048     		ldr	r0, .L213+44
 3151 03f6 FFF7FEFF 		bl	OLEDwriteString
 786:ui.c          ****                 OLEDwriteString("REPRESENT(1-10)", 15, 0, ThirdLine);
 3152              		.loc 1 786 0
 3153 03fa 0223     		movs	r3, #2
 3154 03fc 0022     		movs	r2, #0
 3155 03fe 0F21     		movs	r1, #15
 3156 0400 5E48     		ldr	r0, .L213+48
 3157 0402 FFF7FEFF 		bl	OLEDwriteString
 787:ui.c          ****                 prevEncoderVal = 127;
 3158              		.loc 1 787 0
 3159 0406 5A4B     		ldr	r3, .L213+36
 3160 0408 7F22     		movs	r2, #127
 3161 040a 1A70     		strb	r2, [r3]
 788:ui.c          ****                 Decoder_1_SetPosition(0);
 3162              		.loc 1 788 0
 3163 040c 0020     		movs	r0, #0
 3164 040e FFF7FEFF 		bl	Decoder_1_SetPosition
 789:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3165              		.loc 1 789 0
 3166 0412 534B     		ldr	r3, .L213+20
 3167 0414 0122     		movs	r2, #1
 3168 0416 1A70     		strb	r2, [r3]
 790:ui.c          ****                 editingSliderRepString = 0;
 3169              		.loc 1 790 0
 3170 0418 594B     		ldr	r3, .L213+52
 3171 041a 0022     		movs	r2, #0
 3172 041c 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3173              		.loc 1 725 0
 3174 041e 00F052BD 		b	.L209
 3175              	.L134:
 791:ui.c          ****             }
 792:ui.c          ****             else if (menuPosition[2][1] == 4)
 3176              		.loc 1 792 0
 3177 0422 4A4B     		ldr	r3, .L213
 3178 0424 93F90530 		ldrsb	r3, [r3, #5]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 73


 3179 0428 042B     		cmp	r3, #4
 3180 042a 45D1     		bne	.L135
 793:ui.c          ****             {
 794:ui.c          ****                 //dead zone setting
 795:ui.c          ****                 menuPosition[0][0] = TraditionalPedalSumMenu;
 3181              		.loc 1 795 0
 3182 042c 474B     		ldr	r3, .L213
 3183 042e 0A22     		movs	r2, #10
 3184 0430 1A70     		strb	r2, [r3]
 796:ui.c          ****                 whatToDraw = 0;
 3185              		.loc 1 796 0
 3186 0432 0023     		movs	r3, #0
 3187 0434 87F82730 		strb	r3, [r7, #39]
 797:ui.c          ****                 OLEDclear(128, 64);
 3188              		.loc 1 797 0
 3189 0438 4021     		movs	r1, #64
 3190 043a 8020     		movs	r0, #128
 3191 043c FFF7FEFF 		bl	OLEDclear
 798:ui.c          ****                 myGFX_setFont(2);
 3192              		.loc 1 798 0
 3193 0440 0220     		movs	r0, #2
 3194 0442 FFF7FEFF 		bl	myGFX_setFont
 799:ui.c          ****                 OLEDtextColor(1, 0);
 3195              		.loc 1 799 0
 3196 0446 0021     		movs	r1, #0
 3197 0448 0120     		movs	r0, #1
 3198 044a FFF7FEFF 		bl	OLEDtextColor
 800:ui.c          ****                 OLEDwriteString("PEDAL SUM MODE:", 15, 0, FirstLine);
 3199              		.loc 1 800 0
 3200 044e 0023     		movs	r3, #0
 3201 0450 0022     		movs	r2, #0
 3202 0452 0F21     		movs	r1, #15
 3203 0454 4B48     		ldr	r0, .L213+56
 3204 0456 FFF7FEFF 		bl	OLEDwriteString
 801:ui.c          ****                 OLEDtextColor(traditionalPedalAdd, !traditionalPedalAdd);
 3205              		.loc 1 801 0
 3206 045a 4B4B     		ldr	r3, .L213+60
 3207 045c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3208 045e 9AB2     		uxth	r2, r3
 3209 0460 494B     		ldr	r3, .L213+60
 3210 0462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3211 0464 002B     		cmp	r3, #0
 3212 0466 0CBF     		ite	eq
 3213 0468 0123     		moveq	r3, #1
 3214 046a 0023     		movne	r3, #0
 3215 046c DBB2     		uxtb	r3, r3
 3216 046e 9BB2     		uxth	r3, r3
 3217 0470 1946     		mov	r1, r3
 3218 0472 1046     		mov	r0, r2
 3219 0474 FFF7FEFF 		bl	OLEDtextColor
 802:ui.c          ****                 OLEDwriteString("SIMPLE ADD     ", 15, 0, SecondLine);
 3220              		.loc 1 802 0
 3221 0478 0123     		movs	r3, #1
 3222 047a 0022     		movs	r2, #0
 3223 047c 0F21     		movs	r1, #15
 3224 047e 4348     		ldr	r0, .L213+64
 3225 0480 FFF7FEFF 		bl	OLEDwriteString
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 74


 803:ui.c          ****                 OLEDtextColor(!traditionalPedalAdd, traditionalPedalAdd);
 3226              		.loc 1 803 0
 3227 0484 404B     		ldr	r3, .L213+60
 3228 0486 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3229 0488 002B     		cmp	r3, #0
 3230 048a 0CBF     		ite	eq
 3231 048c 0123     		moveq	r3, #1
 3232 048e 0023     		movne	r3, #0
 3233 0490 DBB2     		uxtb	r3, r3
 3234 0492 9AB2     		uxth	r2, r3
 3235 0494 3C4B     		ldr	r3, .L213+60
 3236 0496 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 0498 9BB2     		uxth	r3, r3
 3238 049a 1946     		mov	r1, r3
 3239 049c 1046     		mov	r0, r2
 3240 049e FFF7FEFF 		bl	OLEDtextColor
 804:ui.c          ****                 OLEDwriteString("TRADITIONAL    ", 15, 0, ThirdLine);
 3241              		.loc 1 804 0
 3242 04a2 0223     		movs	r3, #2
 3243 04a4 0022     		movs	r2, #0
 3244 04a6 0F21     		movs	r1, #15
 3245 04a8 3948     		ldr	r0, .L213+68
 3246 04aa FFF7FEFF 		bl	OLEDwriteString
 805:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3247              		.loc 1 805 0
 3248 04ae 2C4B     		ldr	r3, .L213+20
 3249 04b0 0122     		movs	r2, #1
 3250 04b2 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3251              		.loc 1 725 0
 3252 04b4 00F007BD 		b	.L209
 3253              	.L135:
 806:ui.c          ****             }
 807:ui.c          ****             else if (menuPosition[2][1] == 5)
 3254              		.loc 1 807 0
 3255 04b8 244B     		ldr	r3, .L213
 3256 04ba 93F90530 		ldrsb	r3, [r3, #5]
 3257 04be 052B     		cmp	r3, #5
 3258 04c0 40F0BF80 		bne	.L136
 808:ui.c          ****             {
 809:ui.c          ****                 //midi send setting
 810:ui.c          ****                 menuPosition[0][0] = MidiSendMenu;
 3259              		.loc 1 810 0
 3260 04c4 214B     		ldr	r3, .L213
 3261 04c6 0B22     		movs	r2, #11
 3262 04c8 1A70     		strb	r2, [r3]
 811:ui.c          ****                 whatToDraw = 0;
 3263              		.loc 1 811 0
 3264 04ca 0023     		movs	r3, #0
 3265 04cc 87F82730 		strb	r3, [r7, #39]
 812:ui.c          ****                 OLEDclear(128, 64);
 3266              		.loc 1 812 0
 3267 04d0 4021     		movs	r1, #64
 3268 04d2 8020     		movs	r0, #128
 3269 04d4 FFF7FEFF 		bl	OLEDclear
 813:ui.c          ****                 myGFX_setFont(2);
 3270              		.loc 1 813 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 75


 3271 04d8 0220     		movs	r0, #2
 3272 04da FFF7FEFF 		bl	myGFX_setFont
 814:ui.c          ****                 OLEDtextColor(1, 0);
 3273              		.loc 1 814 0
 3274 04de 0021     		movs	r1, #0
 3275 04e0 0120     		movs	r0, #1
 3276 04e2 FFF7FEFF 		bl	OLEDtextColor
 815:ui.c          ****                 OLEDwriteString("SEND MIDI ", 10, 0, FirstLine);
 3277              		.loc 1 815 0
 3278 04e6 0023     		movs	r3, #0
 3279 04e8 0022     		movs	r2, #0
 3280 04ea 0A21     		movs	r1, #10
 3281 04ec 2948     		ldr	r0, .L213+72
 3282 04ee FFF7FEFF 		bl	OLEDwriteString
 816:ui.c          ****                 GFXfillRect(&theGFX, 76, 0, 37, 16, !whichMidiSendSelected);
 3283              		.loc 1 816 0
 3284 04f2 294B     		ldr	r3, .L213+76
 3285 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3286 04f6 002B     		cmp	r3, #0
 3287 04f8 0CBF     		ite	eq
 3288 04fa 0123     		moveq	r3, #1
 3289 04fc 0023     		movne	r3, #0
 3290 04fe DBB2     		uxtb	r3, r3
 3291 0500 9BB2     		uxth	r3, r3
 3292 0502 0193     		str	r3, [sp, #4]
 3293 0504 1023     		movs	r3, #16
 3294 0506 0093     		str	r3, [sp]
 3295 0508 2523     		movs	r3, #37
 3296 050a 0022     		movs	r2, #0
 3297 050c 4C21     		movs	r1, #76
 3298 050e 2348     		ldr	r0, .L213+80
 3299 0510 FFF7FEFF 		bl	GFXfillRect
 817:ui.c          ****                 OLEDtextColor(whichMidiSendSelected, !whichMidiSendSelected);
 3300              		.loc 1 817 0
 3301 0514 204B     		ldr	r3, .L213+76
 3302 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3303 0518 9AB2     		uxth	r2, r3
 3304 051a 1F4B     		ldr	r3, .L213+76
 3305 051c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3306 051e 002B     		cmp	r3, #0
 3307 0520 0CBF     		ite	eq
 3308 0522 0123     		moveq	r3, #1
 3309 0524 0023     		movne	r3, #0
 3310 0526 DBB2     		uxtb	r3, r3
 3311 0528 9BB2     		uxth	r3, r3
 3312 052a 1946     		mov	r1, r3
 3313 052c 1046     		mov	r0, r2
 3314 052e FFF7FEFF 		bl	OLEDtextColor
 818:ui.c          ****                 if (midiSendOn)
 3315              		.loc 1 818 0
 3316 0532 1B4B     		ldr	r3, .L213+84
 3317 0534 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3318 0536 002B     		cmp	r3, #0
 3319 0538 34D0     		beq	.L137
 819:ui.c          ****                 {
 820:ui.c          ****                     GFXwrite(&theGFX, 79);
 3320              		.loc 1 820 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 76


 3321 053a 4F21     		movs	r1, #79
 3322 053c 1748     		ldr	r0, .L213+80
 3323 053e FFF7FEFF 		bl	GFXwrite
 821:ui.c          ****                     GFXwrite(&theGFX, 78);
 3324              		.loc 1 821 0
 3325 0542 4E21     		movs	r1, #78
 3326 0544 1548     		ldr	r0, .L213+80
 3327 0546 FFF7FEFF 		bl	GFXwrite
 3328 054a 37E0     		b	.L138
 3329              	.L214:
 3330              		.align	2
 3331              	.L213:
 3332 054c 00000000 		.word	menuPosition
 3333 0550 70010000 		.word	.LC19
 3334 0554 00000000 		.word	octaveAction
 3335 0558 80010000 		.word	.LC20
 3336 055c 90010000 		.word	.LC21
 3337 0560 00000000 		.word	mainOLEDWaitingToSend
 3338 0564 00000000 		.word	encoderWatch
 3339 0568 50010000 		.word	.LC17
 3340 056c A0010000 		.word	.LC22
 3341 0570 00000000 		.word	prevEncoderVal
 3342 0574 B0010000 		.word	.LC23
 3343 0578 C0010000 		.word	.LC24
 3344 057c D0010000 		.word	.LC25
 3345 0580 00000000 		.word	editingSliderRepString
 3346 0584 E0010000 		.word	.LC26
 3347 0588 00000000 		.word	traditionalPedalAdd
 3348 058c F0010000 		.word	.LC27
 3349 0590 00020000 		.word	.LC28
 3350 0594 10020000 		.word	.LC29
 3351 0598 00000000 		.word	whichMidiSendSelected
 3352 059c 00000000 		.word	theGFX
 3353 05a0 00000000 		.word	midiSendOn
 3354              	.L137:
 822:ui.c          ****                 }
 823:ui.c          ****                 else
 824:ui.c          ****                 {
 825:ui.c          ****                     GFXwrite(&theGFX, 79);
 3355              		.loc 1 825 0
 3356 05a4 4F21     		movs	r1, #79
 3357 05a6 B948     		ldr	r0, .L215
 3358 05a8 FFF7FEFF 		bl	GFXwrite
 826:ui.c          ****                     GFXwrite(&theGFX, 70);
 3359              		.loc 1 826 0
 3360 05ac 4621     		movs	r1, #70
 3361 05ae B748     		ldr	r0, .L215
 3362 05b0 FFF7FEFF 		bl	GFXwrite
 827:ui.c          ****                     GFXwrite(&theGFX, 70);
 3363              		.loc 1 827 0
 3364 05b4 4621     		movs	r1, #70
 3365 05b6 B548     		ldr	r0, .L215
 3366 05b8 FFF7FEFF 		bl	GFXwrite
 3367              	.L138:
 828:ui.c          ****                 }
 829:ui.c          ****                 
 830:ui.c          ****                 OLEDtextColor(1, 0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 77


 3368              		.loc 1 830 0
 3369 05bc 0021     		movs	r1, #0
 3370 05be 0120     		movs	r0, #1
 3371 05c0 FFF7FEFF 		bl	OLEDtextColor
 831:ui.c          ****                 OLEDwriteString("SEND BAR  ", 10, 0, SecondLine);
 3372              		.loc 1 831 0
 3373 05c4 0123     		movs	r3, #1
 3374 05c6 0022     		movs	r2, #0
 3375 05c8 0A21     		movs	r1, #10
 3376 05ca B148     		ldr	r0, .L215+4
 3377 05cc FFF7FEFF 		bl	OLEDwriteString
 832:ui.c          ****                 
 833:ui.c          ****                 GFXfillRect(&theGFX, 76, 16, 37, 16, whichMidiSendSelected);
 3378              		.loc 1 833 0
 3379 05d0 B04B     		ldr	r3, .L215+8
 3380 05d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3381 05d4 9BB2     		uxth	r3, r3
 3382 05d6 0193     		str	r3, [sp, #4]
 3383 05d8 1023     		movs	r3, #16
 3384 05da 0093     		str	r3, [sp]
 3385 05dc 2523     		movs	r3, #37
 3386 05de 1022     		movs	r2, #16
 3387 05e0 4C21     		movs	r1, #76
 3388 05e2 AA48     		ldr	r0, .L215
 3389 05e4 FFF7FEFF 		bl	GFXfillRect
 834:ui.c          ****                 OLEDtextColor(!whichMidiSendSelected, whichMidiSendSelected);
 3390              		.loc 1 834 0
 3391 05e8 AA4B     		ldr	r3, .L215+8
 3392 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3393 05ec 002B     		cmp	r3, #0
 3394 05ee 0CBF     		ite	eq
 3395 05f0 0123     		moveq	r3, #1
 3396 05f2 0023     		movne	r3, #0
 3397 05f4 DBB2     		uxtb	r3, r3
 3398 05f6 9AB2     		uxth	r2, r3
 3399 05f8 A64B     		ldr	r3, .L215+8
 3400 05fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3401 05fc 9BB2     		uxth	r3, r3
 3402 05fe 1946     		mov	r1, r3
 3403 0600 1046     		mov	r0, r2
 3404 0602 FFF7FEFF 		bl	OLEDtextColor
 835:ui.c          ****                 if (midiBarSendOn)
 3405              		.loc 1 835 0
 3406 0606 A44B     		ldr	r3, .L215+12
 3407 0608 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3408 060a 002B     		cmp	r3, #0
 3409 060c 08D0     		beq	.L139
 836:ui.c          ****                 {
 837:ui.c          ****                     GFXwrite(&theGFX, 79);
 3410              		.loc 1 837 0
 3411 060e 4F21     		movs	r1, #79
 3412 0610 9E48     		ldr	r0, .L215
 3413 0612 FFF7FEFF 		bl	GFXwrite
 838:ui.c          ****                     GFXwrite(&theGFX, 78);
 3414              		.loc 1 838 0
 3415 0616 4E21     		movs	r1, #78
 3416 0618 9C48     		ldr	r0, .L215
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 78


 3417 061a FFF7FEFF 		bl	GFXwrite
 3418 061e 0BE0     		b	.L140
 3419              	.L139:
 839:ui.c          ****                 }
 840:ui.c          ****                 else
 841:ui.c          ****                 {
 842:ui.c          ****                     GFXwrite(&theGFX, 79);
 3420              		.loc 1 842 0
 3421 0620 4F21     		movs	r1, #79
 3422 0622 9A48     		ldr	r0, .L215
 3423 0624 FFF7FEFF 		bl	GFXwrite
 843:ui.c          ****                     GFXwrite(&theGFX, 70);
 3424              		.loc 1 843 0
 3425 0628 4621     		movs	r1, #70
 3426 062a 9848     		ldr	r0, .L215
 3427 062c FFF7FEFF 		bl	GFXwrite
 844:ui.c          ****                     GFXwrite(&theGFX, 70);
 3428              		.loc 1 844 0
 3429 0630 4621     		movs	r1, #70
 3430 0632 9648     		ldr	r0, .L215
 3431 0634 FFF7FEFF 		bl	GFXwrite
 3432              	.L140:
 845:ui.c          ****                 }
 846:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3433              		.loc 1 846 0
 3434 0638 984B     		ldr	r3, .L215+16
 3435 063a 0122     		movs	r2, #1
 3436 063c 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3437              		.loc 1 725 0
 3438 063e 00F042BC 		b	.L209
 3439              	.L136:
 847:ui.c          ****             }
 848:ui.c          ****             else if (menuPosition[2][1] == 6)
 3440              		.loc 1 848 0
 3441 0642 974B     		ldr	r3, .L215+20
 3442 0644 93F90530 		ldrsb	r3, [r3, #5]
 3443 0648 062B     		cmp	r3, #6
 3444 064a 71D1     		bne	.L141
 3445              	.LBB13:
 849:ui.c          ****             {
 850:ui.c          ****                 //volume
 851:ui.c          ****                 menuPosition[0][0] = VolumeMenu;
 3446              		.loc 1 851 0
 3447 064c 944B     		ldr	r3, .L215+20
 3448 064e 0C22     		movs	r2, #12
 3449 0650 1A70     		strb	r2, [r3]
 852:ui.c          ****                 Decoder_1_Start();
 3450              		.loc 1 852 0
 3451 0652 FFF7FEFF 		bl	Decoder_1_Start
 853:ui.c          ****                 whatToDraw = 0;
 3452              		.loc 1 853 0
 3453 0656 0023     		movs	r3, #0
 3454 0658 87F82730 		strb	r3, [r7, #39]
 854:ui.c          ****                 OLEDclear(128, 64);
 3455              		.loc 1 854 0
 3456 065c 4021     		movs	r1, #64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 79


 3457 065e 8020     		movs	r0, #128
 3458 0660 FFF7FEFF 		bl	OLEDclear
 855:ui.c          ****                 myGFX_setFont(2);
 3459              		.loc 1 855 0
 3460 0664 0220     		movs	r0, #2
 3461 0666 FFF7FEFF 		bl	myGFX_setFont
 856:ui.c          ****                 OLEDtextColor(1, 0);
 3462              		.loc 1 856 0
 3463 066a 0021     		movs	r1, #0
 3464 066c 0120     		movs	r0, #1
 3465 066e FFF7FEFF 		bl	OLEDtextColor
 857:ui.c          ****                 OLEDwriteString("VOLUME    ", 10, 0, FirstLine);
 3466              		.loc 1 857 0
 3467 0672 0023     		movs	r3, #0
 3468 0674 0022     		movs	r2, #0
 3469 0676 0A21     		movs	r1, #10
 3470 0678 8A48     		ldr	r0, .L215+24
 3471 067a FFF7FEFF 		bl	OLEDwriteString
 858:ui.c          ****                 OLEDtextColor(1, 0);
 3472              		.loc 1 858 0
 3473 067e 0021     		movs	r1, #0
 3474 0680 0120     		movs	r0, #1
 3475 0682 FFF7FEFF 		bl	OLEDtextColor
 859:ui.c          ****                 myGFX_setFont(1);
 3476              		.loc 1 859 0
 3477 0686 0120     		movs	r0, #1
 3478 0688 FFF7FEFF 		bl	myGFX_setFont
 860:ui.c          ****                 GFXsetCursor(&theGFX, 20,53);
 3479              		.loc 1 860 0
 3480 068c 3522     		movs	r2, #53
 3481 068e 1421     		movs	r1, #20
 3482 0690 7E48     		ldr	r0, .L215
 3483 0692 FFF7FEFF 		bl	GFXsetCursor
 861:ui.c          ****                 GFXwrite(&theGFX, 32);
 3484              		.loc 1 861 0
 3485 0696 2021     		movs	r1, #32
 3486 0698 7C48     		ldr	r0, .L215
 3487 069a FFF7FEFF 		bl	GFXwrite
 862:ui.c          ****                 
 863:ui.c          ****                 int8_t volumeIntTemp = volumeInt;
 3488              		.loc 1 863 0
 3489 069e 824B     		ldr	r3, .L215+28
 3490 06a0 1B78     		ldrb	r3, [r3]
 3491 06a2 FB73     		strb	r3, [r7, #15]
 864:ui.c          ****                 uint8_t currentChar = ((uint8_t)(volumeIntTemp / 100));  
 3492              		.loc 1 864 0
 3493 06a4 97F90F30 		ldrsb	r3, [r7, #15]
 3494 06a8 804A     		ldr	r2, .L215+32
 3495 06aa 82FB0312 		smull	r1, r2, r2, r3
 3496 06ae 5211     		asrs	r2, r2, #5
 3497 06b0 DB17     		asrs	r3, r3, #31
 3498 06b2 D31A     		subs	r3, r2, r3
 3499 06b4 5BB2     		sxtb	r3, r3
 3500 06b6 BB73     		strb	r3, [r7, #14]
 865:ui.c          ****                 volumeIntTemp -= currentChar * 100;
 3501              		.loc 1 865 0
 3502 06b8 BB7B     		ldrb	r3, [r7, #14]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 80


 3503 06ba 1A46     		mov	r2, r3
 3504 06bc 9200     		lsls	r2, r2, #2
 3505 06be 1A44     		add	r2, r2, r3
 3506 06c0 D200     		lsls	r2, r2, #3
 3507 06c2 D31A     		subs	r3, r2, r3
 3508 06c4 9B00     		lsls	r3, r3, #2
 3509 06c6 DAB2     		uxtb	r2, r3
 3510 06c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3511 06ca 1344     		add	r3, r3, r2
 3512 06cc DBB2     		uxtb	r3, r3
 3513 06ce FB73     		strb	r3, [r7, #15]
 866:ui.c          ****                 GFXwrite(&theGFX, currentChar + 48);
 3514              		.loc 1 866 0
 3515 06d0 BB7B     		ldrb	r3, [r7, #14]
 3516 06d2 3033     		adds	r3, r3, #48
 3517 06d4 DBB2     		uxtb	r3, r3
 3518 06d6 1946     		mov	r1, r3
 3519 06d8 6C48     		ldr	r0, .L215
 3520 06da FFF7FEFF 		bl	GFXwrite
 867:ui.c          ****                 currentChar = ((uint8_t)volumeIntTemp / 10);    
 3521              		.loc 1 867 0
 3522 06de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3523 06e0 734A     		ldr	r2, .L215+36
 3524 06e2 A2FB0323 		umull	r2, r3, r2, r3
 3525 06e6 DB08     		lsrs	r3, r3, #3
 3526 06e8 BB73     		strb	r3, [r7, #14]
 868:ui.c          ****                 GFXwrite(&theGFX, currentChar + 48);
 3527              		.loc 1 868 0
 3528 06ea BB7B     		ldrb	r3, [r7, #14]
 3529 06ec 3033     		adds	r3, r3, #48
 3530 06ee DBB2     		uxtb	r3, r3
 3531 06f0 1946     		mov	r1, r3
 3532 06f2 6648     		ldr	r0, .L215
 3533 06f4 FFF7FEFF 		bl	GFXwrite
 869:ui.c          ****                 volumeIntTemp -= currentChar * 10;
 3534              		.loc 1 869 0
 3535 06f8 BB7B     		ldrb	r3, [r7, #14]
 3536 06fa 1A46     		mov	r2, r3
 3537 06fc 5201     		lsls	r2, r2, #5
 3538 06fe D21A     		subs	r2, r2, r3
 3539 0700 9200     		lsls	r2, r2, #2
 3540 0702 D31A     		subs	r3, r2, r3
 3541 0704 5B00     		lsls	r3, r3, #1
 3542 0706 DAB2     		uxtb	r2, r3
 3543 0708 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3544 070a 1344     		add	r3, r3, r2
 3545 070c DBB2     		uxtb	r3, r3
 3546 070e FB73     		strb	r3, [r7, #15]
 870:ui.c          ****                 currentChar = ((uint8_t)volumeIntTemp);    
 3547              		.loc 1 870 0
 3548 0710 FB7B     		ldrb	r3, [r7, #15]
 3549 0712 BB73     		strb	r3, [r7, #14]
 871:ui.c          ****                 GFXwrite(&theGFX, currentChar + 48);
 3550              		.loc 1 871 0
 3551 0714 BB7B     		ldrb	r3, [r7, #14]
 3552 0716 3033     		adds	r3, r3, #48
 3553 0718 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 81


 3554 071a 1946     		mov	r1, r3
 3555 071c 5B48     		ldr	r0, .L215
 3556 071e FFF7FEFF 		bl	GFXwrite
 872:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3557              		.loc 1 872 0
 3558 0722 5E4B     		ldr	r3, .L215+16
 3559 0724 0122     		movs	r2, #1
 3560 0726 1A70     		strb	r2, [r3]
 873:ui.c          ****                 encoderWatch = 1;
 3561              		.loc 1 873 0
 3562 0728 624B     		ldr	r3, .L215+40
 3563 072a 0122     		movs	r2, #1
 3564 072c 1A70     		strb	r2, [r3]
 3565              	.LBE13:
 725:ui.c          ****             {
 3566              		.loc 1 725 0
 3567 072e CAE3     		b	.L209
 3568              	.L141:
 874:ui.c          ****             }
 875:ui.c          ****             else if (menuPosition[2][1] == 7)
 3569              		.loc 1 875 0
 3570 0730 5B4B     		ldr	r3, .L215+20
 3571 0732 93F90530 		ldrsb	r3, [r3, #5]
 3572 0736 072B     		cmp	r3, #7
 3573 0738 40F0C583 		bne	.L209
 876:ui.c          ****             {
 877:ui.c          ****                 //volume
 878:ui.c          ****                 menuPosition[0][0] = FirmwareUpdateMenu;
 3574              		.loc 1 878 0
 3575 073c 584B     		ldr	r3, .L215+20
 3576 073e 0D22     		movs	r2, #13
 3577 0740 1A70     		strb	r2, [r3]
 879:ui.c          ****                 whatToDraw = 0;
 3578              		.loc 1 879 0
 3579 0742 0023     		movs	r3, #0
 3580 0744 87F82730 		strb	r3, [r7, #39]
 880:ui.c          ****                 OLEDclear(128, 64);
 3581              		.loc 1 880 0
 3582 0748 4021     		movs	r1, #64
 3583 074a 8020     		movs	r0, #128
 3584 074c FFF7FEFF 		bl	OLEDclear
 881:ui.c          ****                 myGFX_setFont(2);
 3585              		.loc 1 881 0
 3586 0750 0220     		movs	r0, #2
 3587 0752 FFF7FEFF 		bl	myGFX_setFont
 882:ui.c          ****                 OLEDtextColor(whichFirmwareUpdateSelected, !whichFirmwareUpdateSelected);
 3588              		.loc 1 882 0
 3589 0756 584B     		ldr	r3, .L215+44
 3590 0758 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3591 075a 9AB2     		uxth	r2, r3
 3592 075c 564B     		ldr	r3, .L215+44
 3593 075e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3594 0760 002B     		cmp	r3, #0
 3595 0762 0CBF     		ite	eq
 3596 0764 0123     		moveq	r3, #1
 3597 0766 0023     		movne	r3, #0
 3598 0768 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 82


 3599 076a 9BB2     		uxth	r3, r3
 3600 076c 1946     		mov	r1, r3
 3601 076e 1046     		mov	r0, r2
 3602 0770 FFF7FEFF 		bl	OLEDtextColor
 883:ui.c          ****                 OLEDwriteString("UPDATE BRAIN", 12, 0, FirstLine);
 3603              		.loc 1 883 0
 3604 0774 0023     		movs	r3, #0
 3605 0776 0022     		movs	r2, #0
 3606 0778 0C21     		movs	r1, #12
 3607 077a 5048     		ldr	r0, .L215+48
 3608 077c FFF7FEFF 		bl	OLEDwriteString
 884:ui.c          ****                // OLEDtextColor(!whichFirmwareUpdateSelected, whichFirmwareUpdateSelected);
 885:ui.c          ****                 //OLEDwriteString("UPDATE PLUCK", 12, 0, SecondLine);
 886:ui.c          ****                 OLEDtextColor(1, 0);
 3609              		.loc 1 886 0
 3610 0780 0021     		movs	r1, #0
 3611 0782 0120     		movs	r0, #1
 3612 0784 FFF7FEFF 		bl	OLEDtextColor
 887:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3613              		.loc 1 887 0
 3614 0788 444B     		ldr	r3, .L215+16
 3615 078a 0122     		movs	r2, #1
 3616 078c 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3617              		.loc 1 725 0
 3618 078e 9AE3     		b	.L209
 3619              	.L129:
 888:ui.c          ****             }
 889:ui.c          ****         }
 890:ui.c          ****         else if (action == Left) 
 3620              		.loc 1 890 0
 3621 0790 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3622 0792 002B     		cmp	r3, #0
 3623 0794 40F09883 		bne	.L111
 891:ui.c          ****         {
 892:ui.c          ****             //go back to main menu
 893:ui.c          ****             menuPosition[0][0] = MainMenu;
 3624              		.loc 1 893 0
 3625 0798 414B     		ldr	r3, .L215+20
 3626 079a 0022     		movs	r2, #0
 3627 079c 1A70     		strb	r2, [r3]
 894:ui.c          ****             whatToDraw = 1;
 3628              		.loc 1 894 0
 3629 079e 0123     		movs	r3, #1
 3630 07a0 87F82730 		strb	r3, [r7, #39]
 3631 07a4 90E3     		b	.L111
 3632              	.L122:
 895:ui.c          ****         }
 896:ui.c          ****     }
 897:ui.c          ****     
 898:ui.c          ****     else if (menuPosition[0][0] == CalibrateLeversMenu) //we are in lever calibration
 3633              		.loc 1 898 0
 3634 07a6 3E4B     		ldr	r3, .L215+20
 3635 07a8 93F90030 		ldrsb	r3, [r3]
 3636 07ac 042B     		cmp	r3, #4
 3637 07ae 31D1     		bne	.L142
 899:ui.c          ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 83


 900:ui.c          ****         if ((action == Right) || (action == Enter))
 3638              		.loc 1 900 0
 3639 07b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3640 07b2 012B     		cmp	r3, #1
 3641 07b4 03D0     		beq	.L143
 3642              		.loc 1 900 0 is_stmt 0 discriminator 1
 3643 07b6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3644 07b8 042B     		cmp	r3, #4
 3645 07ba 40F08583 		bne	.L111
 3646              	.L143:
 901:ui.c          ****         {
 902:ui.c          ****             OLEDclear(128, 64);
 3647              		.loc 1 902 0 is_stmt 1
 3648 07be 4021     		movs	r1, #64
 3649 07c0 8020     		movs	r0, #128
 3650 07c2 FFF7FEFF 		bl	OLEDclear
 903:ui.c          ****             myGFX_setFont(2);
 3651              		.loc 1 903 0
 3652 07c6 0220     		movs	r0, #2
 3653 07c8 FFF7FEFF 		bl	myGFX_setFont
 904:ui.c          ****             OLEDtextColor(0, 1);
 3654              		.loc 1 904 0
 3655 07cc 0121     		movs	r1, #1
 3656 07ce 0020     		movs	r0, #0
 3657 07d0 FFF7FEFF 		bl	OLEDtextColor
 905:ui.c          ****             OLEDwriteString("NOW PUT ALL", 11, 1, FirstLine);
 3658              		.loc 1 905 0
 3659 07d4 0023     		movs	r3, #0
 3660 07d6 0122     		movs	r2, #1
 3661 07d8 0B21     		movs	r1, #11
 3662 07da 3948     		ldr	r0, .L215+52
 3663 07dc FFF7FEFF 		bl	OLEDwriteString
 906:ui.c          ****             OLEDwriteString("PEDALS/LEVERS  ", 15, 1, SecondLine);
 3664              		.loc 1 906 0
 3665 07e0 0123     		movs	r3, #1
 3666 07e2 0122     		movs	r2, #1
 3667 07e4 0F21     		movs	r1, #15
 3668 07e6 3748     		ldr	r0, .L215+56
 3669 07e8 FFF7FEFF 		bl	OLEDwriteString
 907:ui.c          ****             OLEDwriteString("IN RESTING STATE", 16, 1, ThirdLine);
 3670              		.loc 1 907 0
 3671 07ec 0223     		movs	r3, #2
 3672 07ee 0122     		movs	r2, #1
 3673 07f0 1021     		movs	r1, #16
 3674 07f2 3548     		ldr	r0, .L215+60
 3675 07f4 FFF7FEFF 		bl	OLEDwriteString
 908:ui.c          ****             OLEDwriteString("AND PRESS EDIT", 14, 1, FourthLine);
 3676              		.loc 1 908 0
 3677 07f8 0323     		movs	r3, #3
 3678 07fa 0122     		movs	r2, #1
 3679 07fc 0E21     		movs	r1, #14
 3680 07fe 3348     		ldr	r0, .L215+64
 3681 0800 FFF7FEFF 		bl	OLEDwriteString
 909:ui.c          ****             mainOLEDWaitingToSend = 1;
 3682              		.loc 1 909 0
 3683 0804 254B     		ldr	r3, .L215+16
 3684 0806 0122     		movs	r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 84


 3685 0808 1A70     		strb	r2, [r3]
 910:ui.c          ****             OLEDtextColor(1, 0);
 3686              		.loc 1 910 0
 3687 080a 0021     		movs	r1, #0
 3688 080c 0120     		movs	r0, #1
 3689 080e FFF7FEFF 		bl	OLEDtextColor
 3690 0812 59E3     		b	.L111
 3691              	.L142:
 911:ui.c          ****         }
 912:ui.c          ****     }
 913:ui.c          ****     else if (menuPosition[0][0] == CalibrateFretsMenu) //we are in fret calibration
 3692              		.loc 1 913 0
 3693 0814 224B     		ldr	r3, .L215+20
 3694 0816 93F90030 		ldrsb	r3, [r3]
 3695 081a 052B     		cmp	r3, #5
 3696 081c 60D1     		bne	.L145
 914:ui.c          ****     {
 915:ui.c          ****         //when user presses -> button, then store the current fret and increment which fret to stor
 916:ui.c          ****         if ((action == Right) || (action == Enter))
 3697              		.loc 1 916 0
 3698 081e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3699 0820 012B     		cmp	r3, #1
 3700 0822 03D0     		beq	.L146
 3701              		.loc 1 916 0 is_stmt 0 discriminator 1
 3702 0824 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3703 0826 042B     		cmp	r3, #4
 3704 0828 40F04E83 		bne	.L111
 3705              	.L146:
 917:ui.c          ****         {
 918:ui.c          ****             fretMeasurements[0][fretToCalibrate] = bar[0];
 3706              		.loc 1 918 0 is_stmt 1
 3707 082c 284B     		ldr	r3, .L215+68
 3708 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3709 0830 1A46     		mov	r2, r3
 3710 0832 284B     		ldr	r3, .L215+72
 3711 0834 1B88     		ldrh	r3, [r3]	@ movhi
 3712 0836 99B2     		uxth	r1, r3
 3713 0838 274B     		ldr	r3, .L215+76
 3714 083a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 919:ui.c          ****             fretMeasurements[1][fretToCalibrate] = bar[1];
 3715              		.loc 1 919 0
 3716 083e 244B     		ldr	r3, .L215+68
 3717 0840 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3718 0842 1846     		mov	r0, r3
 3719 0844 234B     		ldr	r3, .L215+72
 3720 0846 5B88     		ldrh	r3, [r3, #2]	@ movhi
 3721 0848 99B2     		uxth	r1, r3
 3722 084a 234A     		ldr	r2, .L215+76
 3723 084c 00F10C03 		add	r3, r0, #12
 3724 0850 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 920:ui.c          ****             fretToCalibrate++;
 3725              		.loc 1 920 0
 3726 0854 1E4B     		ldr	r3, .L215+68
 3727 0856 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3728 0858 0133     		adds	r3, r3, #1
 3729 085a DAB2     		uxtb	r2, r3
 3730 085c 1C4B     		ldr	r3, .L215+68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 85


 3731 085e 1A70     		strb	r2, [r3]
 921:ui.c          ****             if (fretToCalibrate == NUM_FRET_MEASUREMENTS)
 3732              		.loc 1 921 0
 3733 0860 1B4B     		ldr	r3, .L215+68
 3734 0862 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3735 0864 0C2B     		cmp	r3, #12
 3736 0866 02D1     		bne	.L148
 922:ui.c          ****             {
 923:ui.c          ****                 exitFretCalibrationMode();
 3737              		.loc 1 923 0
 3738 0868 FFF7FEFF 		bl	exitFretCalibrationMode
 3739 086c 2CE3     		b	.L111
 3740              	.L148:
 924:ui.c          ****             }
 925:ui.c          ****             else
 926:ui.c          ****             {
 927:ui.c          ****                OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 3741              		.loc 1 927 0
 3742 086e 184B     		ldr	r3, .L215+68
 3743 0870 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3744 0872 1A46     		mov	r2, r3
 3745 0874 194B     		ldr	r3, .L215+80
 3746 0876 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3747 0878 1846     		mov	r0, r3
 3748 087a 0223     		movs	r3, #2
 3749 087c 2822     		movs	r2, #40
 3750 087e 0221     		movs	r1, #2
 3751 0880 FFF7FEFF 		bl	OLEDwriteInt
 928:ui.c          ****                mainOLEDWaitingToSend = 1;
 3752              		.loc 1 928 0
 3753 0884 054B     		ldr	r3, .L215+16
 3754 0886 0122     		movs	r2, #1
 3755 0888 1A70     		strb	r2, [r3]
 3756 088a 1DE3     		b	.L111
 3757              	.L216:
 3758              		.align	2
 3759              	.L215:
 3760 088c 00000000 		.word	theGFX
 3761 0890 1C020000 		.word	.LC30
 3762 0894 00000000 		.word	whichMidiSendSelected
 3763 0898 00000000 		.word	midiBarSendOn
 3764 089c 00000000 		.word	mainOLEDWaitingToSend
 3765 08a0 00000000 		.word	menuPosition
 3766 08a4 28020000 		.word	.LC31
 3767 08a8 00000000 		.word	volumeInt
 3768 08ac 1F85EB51 		.word	1374389535
 3769 08b0 CDCCCCCC 		.word	-858993459
 3770 08b4 00000000 		.word	encoderWatch
 3771 08b8 00000000 		.word	whichFirmwareUpdateSelected
 3772 08bc 34020000 		.word	.LC32
 3773 08c0 44020000 		.word	.LC33
 3774 08c4 50020000 		.word	.LC34
 3775 08c8 60020000 		.word	.LC35
 3776 08cc 74020000 		.word	.LC36
 3777 08d0 00000000 		.word	fretToCalibrate
 3778 08d4 00000000 		.word	bar
 3779 08d8 00000000 		.word	fretMeasurements
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 86


 3780 08dc 00000000 		.word	whichFretArray
 3781              	.L145:
 929:ui.c          ****             }
 930:ui.c          ****         }
 931:ui.c          ****     }
 932:ui.c          ****     else if (menuPosition[0][0] == TransposeMenu) //we are in transpose
 3782              		.loc 1 932 0
 3783 08e0 A94B     		ldr	r3, .L217
 3784 08e2 93F90030 		ldrsb	r3, [r3]
 3785 08e6 062B     		cmp	r3, #6
 3786 08e8 20D1     		bne	.L149
 933:ui.c          ****     {
 934:ui.c          ****         
 935:ui.c          ****         if (action == Right)
 3787              		.loc 1 935 0
 3788 08ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3789 08ec 012B     		cmp	r3, #1
 3790 08ee 0CD1     		bne	.L150
 936:ui.c          ****         {
 937:ui.c          ****             semitonesOrCents = (semitonesOrCents+1)&1;
 3791              		.loc 1 937 0
 3792 08f0 A64B     		ldr	r3, .L217+4
 3793 08f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3794 08f4 0133     		adds	r3, r3, #1
 3795 08f6 DBB2     		uxtb	r3, r3
 3796 08f8 03F00103 		and	r3, r3, #1
 3797 08fc DAB2     		uxtb	r2, r3
 3798 08fe A34B     		ldr	r3, .L217+4
 3799 0900 1A70     		strb	r2, [r3]
 938:ui.c          ****             prevEncoderVal = 127;
 3800              		.loc 1 938 0
 3801 0902 A34B     		ldr	r3, .L217+8
 3802 0904 7F22     		movs	r2, #127
 3803 0906 1A70     		strb	r2, [r3]
 3804 0908 DEE2     		b	.L111
 3805              	.L150:
 939:ui.c          ****         }
 940:ui.c          ****         else if (action == Left)
 3806              		.loc 1 940 0
 3807 090a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3808 090c 002B     		cmp	r3, #0
 3809 090e 40F0DB82 		bne	.L111
 941:ui.c          ****         {
 942:ui.c          ****             semitonesOrCents = (semitonesOrCents-1)&1;
 3810              		.loc 1 942 0
 3811 0912 9E4B     		ldr	r3, .L217+4
 3812 0914 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3813 0916 013B     		subs	r3, r3, #1
 3814 0918 DBB2     		uxtb	r3, r3
 3815 091a 03F00103 		and	r3, r3, #1
 3816 091e DAB2     		uxtb	r2, r3
 3817 0920 9A4B     		ldr	r3, .L217+4
 3818 0922 1A70     		strb	r2, [r3]
 943:ui.c          ****             prevEncoderVal = 127;
 3819              		.loc 1 943 0
 3820 0924 9A4B     		ldr	r3, .L217+8
 3821 0926 7F22     		movs	r2, #127
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 87


 3822 0928 1A70     		strb	r2, [r3]
 3823 092a CDE2     		b	.L111
 3824              	.L149:
 944:ui.c          ****         }
 945:ui.c          ****     }
 946:ui.c          ****     else if (menuPosition[0][0] == OctaveActionMenu) //we are in octave action
 3825              		.loc 1 946 0
 3826 092c 964B     		ldr	r3, .L217
 3827 092e 93F90030 		ldrsb	r3, [r3]
 3828 0932 072B     		cmp	r3, #7
 3829 0934 68D1     		bne	.L152
 947:ui.c          ****     {
 948:ui.c          ****         whatToDraw = 0;
 3830              		.loc 1 948 0
 3831 0936 0023     		movs	r3, #0
 3832 0938 87F82730 		strb	r3, [r7, #39]
 949:ui.c          ****         if (action == Up)
 3833              		.loc 1 949 0
 3834 093c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3835 093e 032B     		cmp	r3, #3
 3836 0940 09D1     		bne	.L153
 950:ui.c          ****         {
 951:ui.c          ****             octaveAction = (octaveAction+1)&1;
 3837              		.loc 1 951 0
 3838 0942 944B     		ldr	r3, .L217+12
 3839 0944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3840 0946 0133     		adds	r3, r3, #1
 3841 0948 DBB2     		uxtb	r3, r3
 3842 094a 03F00103 		and	r3, r3, #1
 3843 094e DAB2     		uxtb	r2, r3
 3844 0950 904B     		ldr	r3, .L217+12
 3845 0952 1A70     		strb	r2, [r3]
 3846 0954 15E0     		b	.L154
 3847              	.L153:
 952:ui.c          ****         }
 953:ui.c          ****         else if (action == Down)
 3848              		.loc 1 953 0
 3849 0956 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3850 0958 022B     		cmp	r3, #2
 3851 095a 09D1     		bne	.L155
 954:ui.c          ****         {
 955:ui.c          ****             octaveAction = (octaveAction-1)&1;
 3852              		.loc 1 955 0
 3853 095c 8D4B     		ldr	r3, .L217+12
 3854 095e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3855 0960 013B     		subs	r3, r3, #1
 3856 0962 DBB2     		uxtb	r3, r3
 3857 0964 03F00103 		and	r3, r3, #1
 3858 0968 DAB2     		uxtb	r2, r3
 3859 096a 8A4B     		ldr	r3, .L217+12
 3860 096c 1A70     		strb	r2, [r3]
 3861 096e 08E0     		b	.L154
 3862              	.L155:
 956:ui.c          ****         }
 957:ui.c          ****         
 958:ui.c          ****          else if (action == Left) 
 3863              		.loc 1 958 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 88


 3864 0970 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3865 0972 002B     		cmp	r3, #0
 3866 0974 05D1     		bne	.L154
 959:ui.c          ****         {
 960:ui.c          ****             //go back to main menu
 961:ui.c          ****             menuPosition[0][0] = SettingsMenu;
 3867              		.loc 1 961 0
 3868 0976 844B     		ldr	r3, .L217
 3869 0978 0322     		movs	r2, #3
 3870 097a 1A70     		strb	r2, [r3]
 962:ui.c          ****             whatToDraw = 1;
 3871              		.loc 1 962 0
 3872 097c 0123     		movs	r3, #1
 3873 097e 87F82730 		strb	r3, [r7, #39]
 3874              	.L154:
 963:ui.c          ****         }
 964:ui.c          ****                 OLEDclear(128, 64);
 3875              		.loc 1 964 0
 3876 0982 4021     		movs	r1, #64
 3877 0984 8020     		movs	r0, #128
 3878 0986 FFF7FEFF 		bl	OLEDclear
 965:ui.c          ****                 myGFX_setFont(2);
 3879              		.loc 1 965 0
 3880 098a 0220     		movs	r0, #2
 3881 098c FFF7FEFF 		bl	myGFX_setFont
 966:ui.c          ****                 OLEDtextColor(1, 0);
 3882              		.loc 1 966 0
 3883 0990 0021     		movs	r1, #0
 3884 0992 0120     		movs	r0, #1
 3885 0994 FFF7FEFF 		bl	OLEDtextColor
 967:ui.c          ****                 OLEDwriteString("OCTAVE ACTION  ", 15, 0, FirstLine);
 3886              		.loc 1 967 0
 3887 0998 0023     		movs	r3, #0
 3888 099a 0022     		movs	r2, #0
 3889 099c 0F21     		movs	r1, #15
 3890 099e 7E48     		ldr	r0, .L217+16
 3891 09a0 FFF7FEFF 		bl	OLEDwriteString
 968:ui.c          ****                
 969:ui.c          ****                 OLEDtextColor(octaveAction, !octaveAction);
 3892              		.loc 1 969 0
 3893 09a4 7B4B     		ldr	r3, .L217+12
 3894 09a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3895 09a8 9AB2     		uxth	r2, r3
 3896 09aa 7A4B     		ldr	r3, .L217+12
 3897 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3898 09ae 002B     		cmp	r3, #0
 3899 09b0 0CBF     		ite	eq
 3900 09b2 0123     		moveq	r3, #1
 3901 09b4 0023     		movne	r3, #0
 3902 09b6 DBB2     		uxtb	r3, r3
 3903 09b8 9BB2     		uxth	r3, r3
 3904 09ba 1946     		mov	r1, r3
 3905 09bc 1046     		mov	r0, r2
 3906 09be FFF7FEFF 		bl	OLEDtextColor
 970:ui.c          ****                 OLEDwriteString("ON NEXT NOTE   ", 15, 0, SecondLine);
 3907              		.loc 1 970 0
 3908 09c2 0123     		movs	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 89


 3909 09c4 0022     		movs	r2, #0
 3910 09c6 0F21     		movs	r1, #15
 3911 09c8 7448     		ldr	r0, .L217+20
 3912 09ca FFF7FEFF 		bl	OLEDwriteString
 971:ui.c          ****                 OLEDtextColor(!octaveAction, octaveAction);
 3913              		.loc 1 971 0
 3914 09ce 714B     		ldr	r3, .L217+12
 3915 09d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3916 09d2 002B     		cmp	r3, #0
 3917 09d4 0CBF     		ite	eq
 3918 09d6 0123     		moveq	r3, #1
 3919 09d8 0023     		movne	r3, #0
 3920 09da DBB2     		uxtb	r3, r3
 3921 09dc 9AB2     		uxth	r2, r3
 3922 09de 6D4B     		ldr	r3, .L217+12
 3923 09e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3924 09e2 9BB2     		uxth	r3, r3
 3925 09e4 1946     		mov	r1, r3
 3926 09e6 1046     		mov	r0, r2
 3927 09e8 FFF7FEFF 		bl	OLEDtextColor
 972:ui.c          ****                 OLEDwriteString("IMMEDIATE      ", 15, 0, ThirdLine);
 3928              		.loc 1 972 0
 3929 09ec 0223     		movs	r3, #2
 3930 09ee 0022     		movs	r2, #0
 3931 09f0 0F21     		movs	r1, #15
 3932 09f2 6B48     		ldr	r0, .L217+24
 3933 09f4 FFF7FEFF 		bl	OLEDwriteString
 973:ui.c          ****                 OLEDtextColor(1, 0);
 3934              		.loc 1 973 0
 3935 09f8 0021     		movs	r1, #0
 3936 09fa 0120     		movs	r0, #1
 3937 09fc FFF7FEFF 		bl	OLEDtextColor
 974:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3938              		.loc 1 974 0
 3939 0a00 684B     		ldr	r3, .L217+28
 3940 0a02 0122     		movs	r2, #1
 3941 0a04 1A70     		strb	r2, [r3]
 3942 0a06 5FE2     		b	.L111
 3943              	.L152:
 975:ui.c          ****     }
 976:ui.c          **** 
 977:ui.c          ****     else if (menuPosition[0][0] == SliderRepMenu) //we are in sliderRep
 3944              		.loc 1 977 0
 3945 0a08 5F4B     		ldr	r3, .L217
 3946 0a0a 93F90030 		ldrsb	r3, [r3]
 3947 0a0e 092B     		cmp	r3, #9
 3948 0a10 20D1     		bne	.L156
 978:ui.c          ****     {
 979:ui.c          ****        
 980:ui.c          ****         if (action == Right)
 3949              		.loc 1 980 0
 3950 0a12 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3951 0a14 012B     		cmp	r3, #1
 3952 0a16 0CD1     		bne	.L157
 981:ui.c          ****         {
 982:ui.c          ****             editingSliderRepString = (editingSliderRepString+1)&1;
 3953              		.loc 1 982 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 90


 3954 0a18 634B     		ldr	r3, .L217+32
 3955 0a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3956 0a1c 0133     		adds	r3, r3, #1
 3957 0a1e DBB2     		uxtb	r3, r3
 3958 0a20 03F00103 		and	r3, r3, #1
 3959 0a24 DAB2     		uxtb	r2, r3
 3960 0a26 604B     		ldr	r3, .L217+32
 3961 0a28 1A70     		strb	r2, [r3]
 983:ui.c          ****             prevEncoderVal = 127;
 3962              		.loc 1 983 0
 3963 0a2a 594B     		ldr	r3, .L217+8
 3964 0a2c 7F22     		movs	r2, #127
 3965 0a2e 1A70     		strb	r2, [r3]
 3966 0a30 4AE2     		b	.L111
 3967              	.L157:
 984:ui.c          ****         }
 985:ui.c          ****         else if (action == Left)
 3968              		.loc 1 985 0
 3969 0a32 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3970 0a34 002B     		cmp	r3, #0
 3971 0a36 40F04782 		bne	.L111
 986:ui.c          ****         {
 987:ui.c          ****             editingSliderRepString = (editingSliderRepString-1)&1;
 3972              		.loc 1 987 0
 3973 0a3a 5B4B     		ldr	r3, .L217+32
 3974 0a3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3975 0a3e 013B     		subs	r3, r3, #1
 3976 0a40 DBB2     		uxtb	r3, r3
 3977 0a42 03F00103 		and	r3, r3, #1
 3978 0a46 DAB2     		uxtb	r2, r3
 3979 0a48 574B     		ldr	r3, .L217+32
 3980 0a4a 1A70     		strb	r2, [r3]
 988:ui.c          ****             prevEncoderVal = 127;
 3981              		.loc 1 988 0
 3982 0a4c 504B     		ldr	r3, .L217+8
 3983 0a4e 7F22     		movs	r2, #127
 3984 0a50 1A70     		strb	r2, [r3]
 3985 0a52 39E2     		b	.L111
 3986              	.L156:
 989:ui.c          ****         }
 990:ui.c          ****     }
 991:ui.c          ****     else if (menuPosition[0][0] == TraditionalPedalSumMenu) //we are in pedal sum menu
 3987              		.loc 1 991 0
 3988 0a54 4C4B     		ldr	r3, .L217
 3989 0a56 93F90030 		ldrsb	r3, [r3]
 3990 0a5a 0A2B     		cmp	r3, #10
 3991 0a5c 40F0AC80 		bne	.L159
 992:ui.c          ****     {
 993:ui.c          ****        
 994:ui.c          ****         if (action == Up)
 3992              		.loc 1 994 0
 3993 0a60 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3994 0a62 032B     		cmp	r3, #3
 3995 0a64 40D1     		bne	.L160
 995:ui.c          ****         {
 996:ui.c          ****             traditionalPedalAdd = (traditionalPedalAdd+1)&1;
 3996              		.loc 1 996 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 91


 3997 0a66 514B     		ldr	r3, .L217+36
 3998 0a68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3999 0a6a 0133     		adds	r3, r3, #1
 4000 0a6c DBB2     		uxtb	r3, r3
 4001 0a6e 03F00103 		and	r3, r3, #1
 4002 0a72 DAB2     		uxtb	r2, r3
 4003 0a74 4D4B     		ldr	r3, .L217+36
 4004 0a76 1A70     		strb	r2, [r3]
 997:ui.c          ****             OLEDclearLine(SecondLine);
 4005              		.loc 1 997 0
 4006 0a78 0120     		movs	r0, #1
 4007 0a7a FFF7FEFF 		bl	OLEDclearLine
 998:ui.c          ****             OLEDclearLine(ThirdLine);
 4008              		.loc 1 998 0
 4009 0a7e 0220     		movs	r0, #2
 4010 0a80 FFF7FEFF 		bl	OLEDclearLine
 999:ui.c          ****             OLEDtextColor(traditionalPedalAdd, !traditionalPedalAdd);
 4011              		.loc 1 999 0
 4012 0a84 494B     		ldr	r3, .L217+36
 4013 0a86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4014 0a88 9AB2     		uxth	r2, r3
 4015 0a8a 484B     		ldr	r3, .L217+36
 4016 0a8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4017 0a8e 002B     		cmp	r3, #0
 4018 0a90 0CBF     		ite	eq
 4019 0a92 0123     		moveq	r3, #1
 4020 0a94 0023     		movne	r3, #0
 4021 0a96 DBB2     		uxtb	r3, r3
 4022 0a98 9BB2     		uxth	r3, r3
 4023 0a9a 1946     		mov	r1, r3
 4024 0a9c 1046     		mov	r0, r2
 4025 0a9e FFF7FEFF 		bl	OLEDtextColor
1000:ui.c          ****             OLEDwriteString("SIMPLE ADD     ", 15, 0, SecondLine);
 4026              		.loc 1 1000 0
 4027 0aa2 0123     		movs	r3, #1
 4028 0aa4 0022     		movs	r2, #0
 4029 0aa6 0F21     		movs	r1, #15
 4030 0aa8 4148     		ldr	r0, .L217+40
 4031 0aaa FFF7FEFF 		bl	OLEDwriteString
1001:ui.c          ****             OLEDtextColor(!traditionalPedalAdd, traditionalPedalAdd);
 4032              		.loc 1 1001 0
 4033 0aae 3F4B     		ldr	r3, .L217+36
 4034 0ab0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4035 0ab2 002B     		cmp	r3, #0
 4036 0ab4 0CBF     		ite	eq
 4037 0ab6 0123     		moveq	r3, #1
 4038 0ab8 0023     		movne	r3, #0
 4039 0aba DBB2     		uxtb	r3, r3
 4040 0abc 9AB2     		uxth	r2, r3
 4041 0abe 3B4B     		ldr	r3, .L217+36
 4042 0ac0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4043 0ac2 9BB2     		uxth	r3, r3
 4044 0ac4 1946     		mov	r1, r3
 4045 0ac6 1046     		mov	r0, r2
 4046 0ac8 FFF7FEFF 		bl	OLEDtextColor
1002:ui.c          ****             OLEDwriteString("TRADITIONAL    ", 15, 0, ThirdLine);
 4047              		.loc 1 1002 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 92


 4048 0acc 0223     		movs	r3, #2
 4049 0ace 0022     		movs	r2, #0
 4050 0ad0 0F21     		movs	r1, #15
 4051 0ad2 3848     		ldr	r0, .L217+44
 4052 0ad4 FFF7FEFF 		bl	OLEDwriteString
1003:ui.c          ****             OLEDtextColor(1, 0);
 4053              		.loc 1 1003 0
 4054 0ad8 0021     		movs	r1, #0
 4055 0ada 0120     		movs	r0, #1
 4056 0adc FFF7FEFF 		bl	OLEDtextColor
1004:ui.c          ****             mainOLEDWaitingToSend = 1;
 4057              		.loc 1 1004 0
 4058 0ae0 304B     		ldr	r3, .L217+28
 4059 0ae2 0122     		movs	r2, #1
 4060 0ae4 1A70     		strb	r2, [r3]
 4061 0ae6 EFE1     		b	.L111
 4062              	.L160:
1005:ui.c          ****         }
1006:ui.c          ****         else if (action == Down)
 4063              		.loc 1 1006 0
 4064 0ae8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4065 0aea 022B     		cmp	r3, #2
 4066 0aec 40D1     		bne	.L162
1007:ui.c          ****         {
1008:ui.c          ****             traditionalPedalAdd = (traditionalPedalAdd-1)&1;
 4067              		.loc 1 1008 0
 4068 0aee 2F4B     		ldr	r3, .L217+36
 4069 0af0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4070 0af2 013B     		subs	r3, r3, #1
 4071 0af4 DBB2     		uxtb	r3, r3
 4072 0af6 03F00103 		and	r3, r3, #1
 4073 0afa DAB2     		uxtb	r2, r3
 4074 0afc 2B4B     		ldr	r3, .L217+36
 4075 0afe 1A70     		strb	r2, [r3]
1009:ui.c          ****             OLEDclearLine(SecondLine);
 4076              		.loc 1 1009 0
 4077 0b00 0120     		movs	r0, #1
 4078 0b02 FFF7FEFF 		bl	OLEDclearLine
1010:ui.c          ****             OLEDclearLine(ThirdLine);
 4079              		.loc 1 1010 0
 4080 0b06 0220     		movs	r0, #2
 4081 0b08 FFF7FEFF 		bl	OLEDclearLine
1011:ui.c          ****             OLEDtextColor(traditionalPedalAdd, !traditionalPedalAdd);
 4082              		.loc 1 1011 0
 4083 0b0c 274B     		ldr	r3, .L217+36
 4084 0b0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4085 0b10 9AB2     		uxth	r2, r3
 4086 0b12 264B     		ldr	r3, .L217+36
 4087 0b14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4088 0b16 002B     		cmp	r3, #0
 4089 0b18 0CBF     		ite	eq
 4090 0b1a 0123     		moveq	r3, #1
 4091 0b1c 0023     		movne	r3, #0
 4092 0b1e DBB2     		uxtb	r3, r3
 4093 0b20 9BB2     		uxth	r3, r3
 4094 0b22 1946     		mov	r1, r3
 4095 0b24 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 93


 4096 0b26 FFF7FEFF 		bl	OLEDtextColor
1012:ui.c          ****             OLEDwriteString("SIMPLE ADD     ", 15, 0, SecondLine);
 4097              		.loc 1 1012 0
 4098 0b2a 0123     		movs	r3, #1
 4099 0b2c 0022     		movs	r2, #0
 4100 0b2e 0F21     		movs	r1, #15
 4101 0b30 1F48     		ldr	r0, .L217+40
 4102 0b32 FFF7FEFF 		bl	OLEDwriteString
1013:ui.c          ****             OLEDtextColor(!traditionalPedalAdd, traditionalPedalAdd);
 4103              		.loc 1 1013 0
 4104 0b36 1D4B     		ldr	r3, .L217+36
 4105 0b38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4106 0b3a 002B     		cmp	r3, #0
 4107 0b3c 0CBF     		ite	eq
 4108 0b3e 0123     		moveq	r3, #1
 4109 0b40 0023     		movne	r3, #0
 4110 0b42 DBB2     		uxtb	r3, r3
 4111 0b44 9AB2     		uxth	r2, r3
 4112 0b46 194B     		ldr	r3, .L217+36
 4113 0b48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4114 0b4a 9BB2     		uxth	r3, r3
 4115 0b4c 1946     		mov	r1, r3
 4116 0b4e 1046     		mov	r0, r2
 4117 0b50 FFF7FEFF 		bl	OLEDtextColor
1014:ui.c          ****             OLEDwriteString("TRADITIONAL    ", 15, 0, ThirdLine);
 4118              		.loc 1 1014 0
 4119 0b54 0223     		movs	r3, #2
 4120 0b56 0022     		movs	r2, #0
 4121 0b58 0F21     		movs	r1, #15
 4122 0b5a 1648     		ldr	r0, .L217+44
 4123 0b5c FFF7FEFF 		bl	OLEDwriteString
1015:ui.c          ****             OLEDtextColor(1, 0);
 4124              		.loc 1 1015 0
 4125 0b60 0021     		movs	r1, #0
 4126 0b62 0120     		movs	r0, #1
 4127 0b64 FFF7FEFF 		bl	OLEDtextColor
1016:ui.c          ****             mainOLEDWaitingToSend = 1;
 4128              		.loc 1 1016 0
 4129 0b68 0E4B     		ldr	r3, .L217+28
 4130 0b6a 0122     		movs	r2, #1
 4131 0b6c 1A70     		strb	r2, [r3]
 4132 0b6e ABE1     		b	.L111
 4133              	.L162:
1017:ui.c          ****         }
1018:ui.c          ****         else if (action == Left) 
 4134              		.loc 1 1018 0
 4135 0b70 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4136 0b72 002B     		cmp	r3, #0
 4137 0b74 40F0A881 		bne	.L111
1019:ui.c          ****         {
1020:ui.c          ****             //go back to main menu
1021:ui.c          ****             menuPosition[0][0] = SettingsMenu;
 4138              		.loc 1 1021 0
 4139 0b78 034B     		ldr	r3, .L217
 4140 0b7a 0322     		movs	r2, #3
 4141 0b7c 1A70     		strb	r2, [r3]
1022:ui.c          ****             whatToDraw = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 94


 4142              		.loc 1 1022 0
 4143 0b7e 0123     		movs	r3, #1
 4144 0b80 87F82730 		strb	r3, [r7, #39]
 4145 0b84 A0E1     		b	.L111
 4146              	.L218:
 4147 0b86 00BF     		.align	2
 4148              	.L217:
 4149 0b88 00000000 		.word	menuPosition
 4150 0b8c 00000000 		.word	semitonesOrCents
 4151 0b90 00000000 		.word	prevEncoderVal
 4152 0b94 00000000 		.word	octaveAction
 4153 0b98 70010000 		.word	.LC19
 4154 0b9c 80010000 		.word	.LC20
 4155 0ba0 90010000 		.word	.LC21
 4156 0ba4 00000000 		.word	mainOLEDWaitingToSend
 4157 0ba8 00000000 		.word	editingSliderRepString
 4158 0bac 00000000 		.word	traditionalPedalAdd
 4159 0bb0 F0010000 		.word	.LC27
 4160 0bb4 00020000 		.word	.LC28
 4161              	.L159:
1023:ui.c          ****         }
1024:ui.c          ****     }
1025:ui.c          ****                
1026:ui.c          ****     else if (menuPosition[0][0] == MidiSendMenu) //we are in midisend menu
 4162              		.loc 1 1026 0
 4163 0bb8 AA4B     		ldr	r3, .L219
 4164 0bba 93F90030 		ldrsb	r3, [r3]
 4165 0bbe 0B2B     		cmp	r3, #11
 4166 0bc0 40F0D480 		bne	.L163
1027:ui.c          ****     {
1028:ui.c          ****         
1029:ui.c          ****         if (action == Right)
 4167              		.loc 1 1029 0
 4168 0bc4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4169 0bc6 012B     		cmp	r3, #1
 4170 0bc8 17D1     		bne	.L164
1030:ui.c          ****         {
1031:ui.c          ****             if (!whichMidiSendSelected)
 4171              		.loc 1 1031 0
 4172 0bca A74B     		ldr	r3, .L219+4
 4173 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4174 0bce 002B     		cmp	r3, #0
 4175 0bd0 09D1     		bne	.L165
1032:ui.c          ****             {
1033:ui.c          ****                 midiSendOn = (midiSendOn+1)&1;
 4176              		.loc 1 1033 0
 4177 0bd2 A64B     		ldr	r3, .L219+8
 4178 0bd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4179 0bd6 0133     		adds	r3, r3, #1
 4180 0bd8 DBB2     		uxtb	r3, r3
 4181 0bda 03F00103 		and	r3, r3, #1
 4182 0bde DAB2     		uxtb	r2, r3
 4183 0be0 A24B     		ldr	r3, .L219+8
 4184 0be2 1A70     		strb	r2, [r3]
 4185 0be4 3DE0     		b	.L167
 4186              	.L165:
1034:ui.c          ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 95


1035:ui.c          ****             else
1036:ui.c          ****             {
1037:ui.c          ****                 midiBarSendOn = (midiBarSendOn+1)&1;
 4187              		.loc 1 1037 0
 4188 0be6 A24B     		ldr	r3, .L219+12
 4189 0be8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4190 0bea 0133     		adds	r3, r3, #1
 4191 0bec DBB2     		uxtb	r3, r3
 4192 0bee 03F00103 		and	r3, r3, #1
 4193 0bf2 DAB2     		uxtb	r2, r3
 4194 0bf4 9E4B     		ldr	r3, .L219+12
 4195 0bf6 1A70     		strb	r2, [r3]
 4196 0bf8 33E0     		b	.L167
 4197              	.L164:
1038:ui.c          ****             }
1039:ui.c          ****         }
1040:ui.c          ****         else if (action == Left)
 4198              		.loc 1 1040 0
 4199 0bfa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4200 0bfc 002B     		cmp	r3, #0
 4201 0bfe 17D1     		bne	.L168
1041:ui.c          ****         {
1042:ui.c          ****             if (!whichMidiSendSelected)
 4202              		.loc 1 1042 0
 4203 0c00 994B     		ldr	r3, .L219+4
 4204 0c02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4205 0c04 002B     		cmp	r3, #0
 4206 0c06 09D1     		bne	.L169
1043:ui.c          ****             {
1044:ui.c          ****                 midiSendOn = (midiSendOn-1)&1;
 4207              		.loc 1 1044 0
 4208 0c08 984B     		ldr	r3, .L219+8
 4209 0c0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4210 0c0c 013B     		subs	r3, r3, #1
 4211 0c0e DBB2     		uxtb	r3, r3
 4212 0c10 03F00103 		and	r3, r3, #1
 4213 0c14 DAB2     		uxtb	r2, r3
 4214 0c16 954B     		ldr	r3, .L219+8
 4215 0c18 1A70     		strb	r2, [r3]
 4216 0c1a 22E0     		b	.L167
 4217              	.L169:
1045:ui.c          ****             }
1046:ui.c          ****             else
1047:ui.c          ****             {
1048:ui.c          ****                 midiBarSendOn = (midiBarSendOn-1)&1;
 4218              		.loc 1 1048 0
 4219 0c1c 944B     		ldr	r3, .L219+12
 4220 0c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4221 0c20 013B     		subs	r3, r3, #1
 4222 0c22 DBB2     		uxtb	r3, r3
 4223 0c24 03F00103 		and	r3, r3, #1
 4224 0c28 DAB2     		uxtb	r2, r3
 4225 0c2a 914B     		ldr	r3, .L219+12
 4226 0c2c 1A70     		strb	r2, [r3]
 4227 0c2e 18E0     		b	.L167
 4228              	.L168:
1049:ui.c          ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 96


1050:ui.c          ****         }
1051:ui.c          ****         else if (action == Up)
 4229              		.loc 1 1051 0
 4230 0c30 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4231 0c32 032B     		cmp	r3, #3
 4232 0c34 09D1     		bne	.L171
1052:ui.c          ****         {
1053:ui.c          ****             whichMidiSendSelected = (whichMidiSendSelected+1)&1;
 4233              		.loc 1 1053 0
 4234 0c36 8C4B     		ldr	r3, .L219+4
 4235 0c38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4236 0c3a 0133     		adds	r3, r3, #1
 4237 0c3c DBB2     		uxtb	r3, r3
 4238 0c3e 03F00103 		and	r3, r3, #1
 4239 0c42 DAB2     		uxtb	r2, r3
 4240 0c44 884B     		ldr	r3, .L219+4
 4241 0c46 1A70     		strb	r2, [r3]
 4242 0c48 0BE0     		b	.L167
 4243              	.L171:
1054:ui.c          ****         }
1055:ui.c          ****         else if (action == Down)
 4244              		.loc 1 1055 0
 4245 0c4a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4246 0c4c 022B     		cmp	r3, #2
 4247 0c4e 08D1     		bne	.L167
1056:ui.c          ****         {
1057:ui.c          ****             whichMidiSendSelected = (whichMidiSendSelected-1)&1;
 4248              		.loc 1 1057 0
 4249 0c50 854B     		ldr	r3, .L219+4
 4250 0c52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4251 0c54 013B     		subs	r3, r3, #1
 4252 0c56 DBB2     		uxtb	r3, r3
 4253 0c58 03F00103 		and	r3, r3, #1
 4254 0c5c DAB2     		uxtb	r2, r3
 4255 0c5e 824B     		ldr	r3, .L219+4
 4256 0c60 1A70     		strb	r2, [r3]
 4257              	.L167:
1058:ui.c          ****         }
1059:ui.c          ****         OLEDtextColor(1, 0);
 4258              		.loc 1 1059 0
 4259 0c62 0021     		movs	r1, #0
 4260 0c64 0120     		movs	r0, #1
 4261 0c66 FFF7FEFF 		bl	OLEDtextColor
1060:ui.c          ****         OLEDwriteString("SEND MIDI ", 10, 0, FirstLine);
 4262              		.loc 1 1060 0
 4263 0c6a 0023     		movs	r3, #0
 4264 0c6c 0022     		movs	r2, #0
 4265 0c6e 0A21     		movs	r1, #10
 4266 0c70 8048     		ldr	r0, .L219+16
 4267 0c72 FFF7FEFF 		bl	OLEDwriteString
1061:ui.c          ****         GFXfillRect(&theGFX, 76, 0, 37, 16, !whichMidiSendSelected);
 4268              		.loc 1 1061 0
 4269 0c76 7C4B     		ldr	r3, .L219+4
 4270 0c78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4271 0c7a 002B     		cmp	r3, #0
 4272 0c7c 0CBF     		ite	eq
 4273 0c7e 0123     		moveq	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 97


 4274 0c80 0023     		movne	r3, #0
 4275 0c82 DBB2     		uxtb	r3, r3
 4276 0c84 9BB2     		uxth	r3, r3
 4277 0c86 0193     		str	r3, [sp, #4]
 4278 0c88 1023     		movs	r3, #16
 4279 0c8a 0093     		str	r3, [sp]
 4280 0c8c 2523     		movs	r3, #37
 4281 0c8e 0022     		movs	r2, #0
 4282 0c90 4C21     		movs	r1, #76
 4283 0c92 7948     		ldr	r0, .L219+20
 4284 0c94 FFF7FEFF 		bl	GFXfillRect
1062:ui.c          ****         OLEDtextColor(whichMidiSendSelected, !whichMidiSendSelected);
 4285              		.loc 1 1062 0
 4286 0c98 734B     		ldr	r3, .L219+4
 4287 0c9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4288 0c9c 9AB2     		uxth	r2, r3
 4289 0c9e 724B     		ldr	r3, .L219+4
 4290 0ca0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4291 0ca2 002B     		cmp	r3, #0
 4292 0ca4 0CBF     		ite	eq
 4293 0ca6 0123     		moveq	r3, #1
 4294 0ca8 0023     		movne	r3, #0
 4295 0caa DBB2     		uxtb	r3, r3
 4296 0cac 9BB2     		uxth	r3, r3
 4297 0cae 1946     		mov	r1, r3
 4298 0cb0 1046     		mov	r0, r2
 4299 0cb2 FFF7FEFF 		bl	OLEDtextColor
1063:ui.c          ****         if (midiSendOn)
 4300              		.loc 1 1063 0
 4301 0cb6 6D4B     		ldr	r3, .L219+8
 4302 0cb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4303 0cba 002B     		cmp	r3, #0
 4304 0cbc 08D0     		beq	.L172
1064:ui.c          ****         {
1065:ui.c          ****             GFXwrite(&theGFX, 79);
 4305              		.loc 1 1065 0
 4306 0cbe 4F21     		movs	r1, #79
 4307 0cc0 6D48     		ldr	r0, .L219+20
 4308 0cc2 FFF7FEFF 		bl	GFXwrite
1066:ui.c          ****             GFXwrite(&theGFX, 78);
 4309              		.loc 1 1066 0
 4310 0cc6 4E21     		movs	r1, #78
 4311 0cc8 6B48     		ldr	r0, .L219+20
 4312 0cca FFF7FEFF 		bl	GFXwrite
 4313 0cce 0BE0     		b	.L173
 4314              	.L172:
1067:ui.c          ****         }
1068:ui.c          ****         else
1069:ui.c          ****         {
1070:ui.c          ****             GFXwrite(&theGFX, 79);
 4315              		.loc 1 1070 0
 4316 0cd0 4F21     		movs	r1, #79
 4317 0cd2 6948     		ldr	r0, .L219+20
 4318 0cd4 FFF7FEFF 		bl	GFXwrite
1071:ui.c          ****             GFXwrite(&theGFX, 70);
 4319              		.loc 1 1071 0
 4320 0cd8 4621     		movs	r1, #70
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 98


 4321 0cda 6748     		ldr	r0, .L219+20
 4322 0cdc FFF7FEFF 		bl	GFXwrite
1072:ui.c          ****             GFXwrite(&theGFX, 70);
 4323              		.loc 1 1072 0
 4324 0ce0 4621     		movs	r1, #70
 4325 0ce2 6548     		ldr	r0, .L219+20
 4326 0ce4 FFF7FEFF 		bl	GFXwrite
 4327              	.L173:
1073:ui.c          ****         }
1074:ui.c          ****         OLEDtextColor(1, 0);
 4328              		.loc 1 1074 0
 4329 0ce8 0021     		movs	r1, #0
 4330 0cea 0120     		movs	r0, #1
 4331 0cec FFF7FEFF 		bl	OLEDtextColor
1075:ui.c          ****         OLEDwriteString("SEND BAR  ", 10, 0, SecondLine);
 4332              		.loc 1 1075 0
 4333 0cf0 0123     		movs	r3, #1
 4334 0cf2 0022     		movs	r2, #0
 4335 0cf4 0A21     		movs	r1, #10
 4336 0cf6 6148     		ldr	r0, .L219+24
 4337 0cf8 FFF7FEFF 		bl	OLEDwriteString
1076:ui.c          ****         GFXfillRect(&theGFX, 76, 16, 37, 16, whichMidiSendSelected);
 4338              		.loc 1 1076 0
 4339 0cfc 5A4B     		ldr	r3, .L219+4
 4340 0cfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4341 0d00 9BB2     		uxth	r3, r3
 4342 0d02 0193     		str	r3, [sp, #4]
 4343 0d04 1023     		movs	r3, #16
 4344 0d06 0093     		str	r3, [sp]
 4345 0d08 2523     		movs	r3, #37
 4346 0d0a 1022     		movs	r2, #16
 4347 0d0c 4C21     		movs	r1, #76
 4348 0d0e 5A48     		ldr	r0, .L219+20
 4349 0d10 FFF7FEFF 		bl	GFXfillRect
1077:ui.c          ****         OLEDtextColor(!whichMidiSendSelected, whichMidiSendSelected);
 4350              		.loc 1 1077 0
 4351 0d14 544B     		ldr	r3, .L219+4
 4352 0d16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4353 0d18 002B     		cmp	r3, #0
 4354 0d1a 0CBF     		ite	eq
 4355 0d1c 0123     		moveq	r3, #1
 4356 0d1e 0023     		movne	r3, #0
 4357 0d20 DBB2     		uxtb	r3, r3
 4358 0d22 9AB2     		uxth	r2, r3
 4359 0d24 504B     		ldr	r3, .L219+4
 4360 0d26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4361 0d28 9BB2     		uxth	r3, r3
 4362 0d2a 1946     		mov	r1, r3
 4363 0d2c 1046     		mov	r0, r2
 4364 0d2e FFF7FEFF 		bl	OLEDtextColor
1078:ui.c          ****         if (midiBarSendOn)
 4365              		.loc 1 1078 0
 4366 0d32 4F4B     		ldr	r3, .L219+12
 4367 0d34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4368 0d36 002B     		cmp	r3, #0
 4369 0d38 08D0     		beq	.L174
1079:ui.c          ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 99


1080:ui.c          ****             GFXwrite(&theGFX, 79);
 4370              		.loc 1 1080 0
 4371 0d3a 4F21     		movs	r1, #79
 4372 0d3c 4E48     		ldr	r0, .L219+20
 4373 0d3e FFF7FEFF 		bl	GFXwrite
1081:ui.c          ****             GFXwrite(&theGFX, 78);
 4374              		.loc 1 1081 0
 4375 0d42 4E21     		movs	r1, #78
 4376 0d44 4C48     		ldr	r0, .L219+20
 4377 0d46 FFF7FEFF 		bl	GFXwrite
 4378 0d4a 0BE0     		b	.L175
 4379              	.L174:
1082:ui.c          ****         }
1083:ui.c          ****         else
1084:ui.c          ****         {
1085:ui.c          ****             GFXwrite(&theGFX, 79);
 4380              		.loc 1 1085 0
 4381 0d4c 4F21     		movs	r1, #79
 4382 0d4e 4A48     		ldr	r0, .L219+20
 4383 0d50 FFF7FEFF 		bl	GFXwrite
1086:ui.c          ****             GFXwrite(&theGFX, 70);
 4384              		.loc 1 1086 0
 4385 0d54 4621     		movs	r1, #70
 4386 0d56 4848     		ldr	r0, .L219+20
 4387 0d58 FFF7FEFF 		bl	GFXwrite
1087:ui.c          ****             GFXwrite(&theGFX, 70);
 4388              		.loc 1 1087 0
 4389 0d5c 4621     		movs	r1, #70
 4390 0d5e 4648     		ldr	r0, .L219+20
 4391 0d60 FFF7FEFF 		bl	GFXwrite
 4392              	.L175:
1088:ui.c          ****         }
1089:ui.c          ****         mainOLEDWaitingToSend = 1;
 4393              		.loc 1 1089 0
 4394 0d64 464B     		ldr	r3, .L219+28
 4395 0d66 0122     		movs	r2, #1
 4396 0d68 1A70     		strb	r2, [r3]
 4397 0d6a ADE0     		b	.L111
 4398              	.L163:
1090:ui.c          ****                 
1091:ui.c          ****     }
1092:ui.c          ****     
1093:ui.c          ****      else if (menuPosition[0][0] == FirmwareUpdateMenu) //we are in firmware update menu
 4399              		.loc 1 1093 0
 4400 0d6c 3D4B     		ldr	r3, .L219
 4401 0d6e 93F90030 		ldrsb	r3, [r3]
 4402 0d72 0D2B     		cmp	r3, #13
 4403 0d74 61D1     		bne	.L176
1094:ui.c          ****     {
1095:ui.c          ****         
1096:ui.c          ****         if (action == Right)
 4404              		.loc 1 1096 0
 4405 0d76 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4406 0d78 012B     		cmp	r3, #1
 4407 0d7a 06D1     		bne	.L177
1097:ui.c          ****         {
1098:ui.c          ****             sendFirmwareUpdateRequest = 1+whichFirmwareUpdateSelected;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 100


 4408              		.loc 1 1098 0
 4409 0d7c 414B     		ldr	r3, .L219+32
 4410 0d7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4411 0d80 0133     		adds	r3, r3, #1
 4412 0d82 DAB2     		uxtb	r2, r3
 4413 0d84 404B     		ldr	r3, .L219+36
 4414 0d86 1A70     		strb	r2, [r3]
 4415 0d88 9EE0     		b	.L111
 4416              	.L177:
1099:ui.c          ****         }
1100:ui.c          ****         else if (action == Left)
 4417              		.loc 1 1100 0
 4418 0d8a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4419 0d8c 002B     		cmp	r3, #0
 4420 0d8e 06D1     		bne	.L179
1101:ui.c          ****         {
1102:ui.c          ****               //go back to main menu
1103:ui.c          ****             menuPosition[0][0] = MainMenu;
 4421              		.loc 1 1103 0
 4422 0d90 344B     		ldr	r3, .L219
 4423 0d92 0022     		movs	r2, #0
 4424 0d94 1A70     		strb	r2, [r3]
1104:ui.c          ****             whatToDraw = 1;
 4425              		.loc 1 1104 0
 4426 0d96 0123     		movs	r3, #1
 4427 0d98 87F82730 		strb	r3, [r7, #39]
 4428 0d9c 94E0     		b	.L111
 4429              	.L179:
1105:ui.c          ****         }
1106:ui.c          ****         else if (action == Up)
 4430              		.loc 1 1106 0
 4431 0d9e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4432 0da0 032B     		cmp	r3, #3
 4433 0da2 23D1     		bne	.L180
1107:ui.c          ****         {
1108:ui.c          ****            // whichFirmwareUpdateSelected = (whichFirmwareUpdateSelected+1)&1;
1109:ui.c          ****             OLEDclear(128, 64);
 4434              		.loc 1 1109 0
 4435 0da4 4021     		movs	r1, #64
 4436 0da6 8020     		movs	r0, #128
 4437 0da8 FFF7FEFF 		bl	OLEDclear
1110:ui.c          ****             myGFX_setFont(2);
 4438              		.loc 1 1110 0
 4439 0dac 0220     		movs	r0, #2
 4440 0dae FFF7FEFF 		bl	myGFX_setFont
1111:ui.c          ****             OLEDtextColor(whichFirmwareUpdateSelected, !whichFirmwareUpdateSelected);
 4441              		.loc 1 1111 0
 4442 0db2 344B     		ldr	r3, .L219+32
 4443 0db4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4444 0db6 9AB2     		uxth	r2, r3
 4445 0db8 324B     		ldr	r3, .L219+32
 4446 0dba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4447 0dbc 002B     		cmp	r3, #0
 4448 0dbe 0CBF     		ite	eq
 4449 0dc0 0123     		moveq	r3, #1
 4450 0dc2 0023     		movne	r3, #0
 4451 0dc4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 101


 4452 0dc6 9BB2     		uxth	r3, r3
 4453 0dc8 1946     		mov	r1, r3
 4454 0dca 1046     		mov	r0, r2
 4455 0dcc FFF7FEFF 		bl	OLEDtextColor
1112:ui.c          ****             OLEDwriteString("UPDATE BRAIN", 12, 0, FirstLine);
 4456              		.loc 1 1112 0
 4457 0dd0 0023     		movs	r3, #0
 4458 0dd2 0022     		movs	r2, #0
 4459 0dd4 0C21     		movs	r1, #12
 4460 0dd6 2D48     		ldr	r0, .L219+40
 4461 0dd8 FFF7FEFF 		bl	OLEDwriteString
1113:ui.c          ****             //OLEDtextColor(!whichFirmwareUpdateSelected, whichFirmwareUpdateSelected);
1114:ui.c          ****             //OLEDwriteString("UPDATE PLUCK", 12, 0, SecondLine);
1115:ui.c          ****             OLEDtextColor(1, 0);
 4462              		.loc 1 1115 0
 4463 0ddc 0021     		movs	r1, #0
 4464 0dde 0120     		movs	r0, #1
 4465 0de0 FFF7FEFF 		bl	OLEDtextColor
1116:ui.c          ****             mainOLEDWaitingToSend = 1;
 4466              		.loc 1 1116 0
 4467 0de4 264B     		ldr	r3, .L219+28
 4468 0de6 0122     		movs	r2, #1
 4469 0de8 1A70     		strb	r2, [r3]
 4470 0dea 6DE0     		b	.L111
 4471              	.L180:
1117:ui.c          ****         }
1118:ui.c          ****         else if (action == Down)
 4472              		.loc 1 1118 0
 4473 0dec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4474 0dee 022B     		cmp	r3, #2
 4475 0df0 6AD1     		bne	.L111
1119:ui.c          ****         {
1120:ui.c          ****            // whichFirmwareUpdateSelected = (whichFirmwareUpdateSelected-1)&1;
1121:ui.c          ****             OLEDclear(128, 64);
 4476              		.loc 1 1121 0
 4477 0df2 4021     		movs	r1, #64
 4478 0df4 8020     		movs	r0, #128
 4479 0df6 FFF7FEFF 		bl	OLEDclear
1122:ui.c          ****             myGFX_setFont(2);
 4480              		.loc 1 1122 0
 4481 0dfa 0220     		movs	r0, #2
 4482 0dfc FFF7FEFF 		bl	myGFX_setFont
1123:ui.c          ****             OLEDtextColor(whichFirmwareUpdateSelected, !whichFirmwareUpdateSelected);
 4483              		.loc 1 1123 0
 4484 0e00 204B     		ldr	r3, .L219+32
 4485 0e02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4486 0e04 9AB2     		uxth	r2, r3
 4487 0e06 1F4B     		ldr	r3, .L219+32
 4488 0e08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4489 0e0a 002B     		cmp	r3, #0
 4490 0e0c 0CBF     		ite	eq
 4491 0e0e 0123     		moveq	r3, #1
 4492 0e10 0023     		movne	r3, #0
 4493 0e12 DBB2     		uxtb	r3, r3
 4494 0e14 9BB2     		uxth	r3, r3
 4495 0e16 1946     		mov	r1, r3
 4496 0e18 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 102


 4497 0e1a FFF7FEFF 		bl	OLEDtextColor
1124:ui.c          ****             OLEDwriteString("UPDATE BRAIN", 12, 0, FirstLine);
 4498              		.loc 1 1124 0
 4499 0e1e 0023     		movs	r3, #0
 4500 0e20 0022     		movs	r2, #0
 4501 0e22 0C21     		movs	r1, #12
 4502 0e24 1948     		ldr	r0, .L219+40
 4503 0e26 FFF7FEFF 		bl	OLEDwriteString
1125:ui.c          ****             //OLEDtextColor(!whichFirmwareUpdateSelected, whichFirmwareUpdateSelected);
1126:ui.c          ****             //OLEDwriteString("UPDATE PLUCK", 12, 0, SecondLine);
1127:ui.c          ****             OLEDtextColor(1, 0);
 4504              		.loc 1 1127 0
 4505 0e2a 0021     		movs	r1, #0
 4506 0e2c 0120     		movs	r0, #1
 4507 0e2e FFF7FEFF 		bl	OLEDtextColor
1128:ui.c          ****             mainOLEDWaitingToSend = 1;
 4508              		.loc 1 1128 0
 4509 0e32 134B     		ldr	r3, .L219+28
 4510 0e34 0122     		movs	r2, #1
 4511 0e36 1A70     		strb	r2, [r3]
 4512 0e38 46E0     		b	.L111
 4513              	.L176:
1129:ui.c          ****         }
1130:ui.c          ****     }
1131:ui.c          ****     
1132:ui.c          ****     else if (menuPosition[0][0] == StorePresetMenu)
 4514              		.loc 1 1132 0
 4515 0e3a 0A4B     		ldr	r3, .L219
 4516 0e3c 93F90030 		ldrsb	r3, [r3]
 4517 0e40 012B     		cmp	r3, #1
 4518 0e42 41D1     		bne	.L111
1133:ui.c          ****     {
1134:ui.c          ****  
1135:ui.c          ****         if (action == Right)
 4519              		.loc 1 1135 0
 4520 0e44 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4521 0e46 012B     		cmp	r3, #1
 4522 0e48 28D1     		bne	.L181
1136:ui.c          ****         {
1137:ui.c          ****             presetStoreStage++;
 4523              		.loc 1 1137 0
 4524 0e4a 114B     		ldr	r3, .L219+44
 4525 0e4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4526 0e4e 0133     		adds	r3, r3, #1
 4527 0e50 DAB2     		uxtb	r2, r3
 4528 0e52 0F4B     		ldr	r3, .L219+44
 4529 0e54 1A70     		strb	r2, [r3]
1138:ui.c          ****             if (presetStoreStage >= 15)
 4530              		.loc 1 1138 0
 4531 0e56 0E4B     		ldr	r3, .L219+44
 4532 0e58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4533 0e5a 0E2B     		cmp	r3, #14
 4534 0e5c 1AD9     		bls	.L182
1139:ui.c          ****             {
1140:ui.c          ****                 exitPresetStoreMenu();
 4535              		.loc 1 1140 0
 4536 0e5e FFF7FEFF 		bl	exitPresetStoreMenu
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 103


 4537 0e62 31E0     		b	.L111
 4538              	.L220:
 4539              		.align	2
 4540              	.L219:
 4541 0e64 00000000 		.word	menuPosition
 4542 0e68 00000000 		.word	whichMidiSendSelected
 4543 0e6c 00000000 		.word	midiSendOn
 4544 0e70 00000000 		.word	midiBarSendOn
 4545 0e74 10020000 		.word	.LC29
 4546 0e78 00000000 		.word	theGFX
 4547 0e7c 1C020000 		.word	.LC30
 4548 0e80 00000000 		.word	mainOLEDWaitingToSend
 4549 0e84 00000000 		.word	whichFirmwareUpdateSelected
 4550 0e88 00000000 		.word	sendFirmwareUpdateRequest
 4551 0e8c 34020000 		.word	.LC32
 4552 0e90 00000000 		.word	presetStoreStage
 4553              	.L182:
1141:ui.c          ****             }
1142:ui.c          ****             else
1143:ui.c          ****             {
1144:ui.c          ****                 whatToDraw = 2;
 4554              		.loc 1 1144 0
 4555 0e94 0223     		movs	r3, #2
 4556 0e96 87F82730 		strb	r3, [r7, #39]
 4557 0e9a 15E0     		b	.L111
 4558              	.L181:
1145:ui.c          ****             }
1146:ui.c          ****         }
1147:ui.c          ****         else if (action == Left)
 4559              		.loc 1 1147 0
 4560 0e9c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4561 0e9e 002B     		cmp	r3, #0
 4562 0ea0 09D1     		bne	.L184
1148:ui.c          ****         {
1149:ui.c          ****             //go back to main menu
1150:ui.c          ****             menuPosition[0][0] = 0;
 4563              		.loc 1 1150 0
 4564 0ea2 BE4B     		ldr	r3, .L221
 4565 0ea4 0022     		movs	r2, #0
 4566 0ea6 1A70     		strb	r2, [r3]
1151:ui.c          ****             whatToDraw = 1;
 4567              		.loc 1 1151 0
 4568 0ea8 0123     		movs	r3, #1
 4569 0eaa 87F82730 		strb	r3, [r7, #39]
1152:ui.c          ****             presetStoreStage = 0;
 4570              		.loc 1 1152 0
 4571 0eae BC4B     		ldr	r3, .L221+4
 4572 0eb0 0022     		movs	r2, #0
 4573 0eb2 1A70     		strb	r2, [r3]
 4574 0eb4 08E0     		b	.L111
 4575              	.L184:
1153:ui.c          ****         }
1154:ui.c          ****         else if (action == Enter)
 4576              		.loc 1 1154 0
 4577 0eb6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4578 0eb8 042B     		cmp	r3, #4
 4579 0eba 05D1     		bne	.L111
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 104


1155:ui.c          ****         {
1156:ui.c          ****              exitPresetStoreMenu();
 4580              		.loc 1 1156 0
 4581 0ebc FFF7FEFF 		bl	exitPresetStoreMenu
 4582 0ec0 02E0     		b	.L111
 4583              	.L208:
 680:ui.c          ****             {
 4584              		.loc 1 680 0
 4585 0ec2 00BF     		nop
 4586 0ec4 00E0     		b	.L111
 4587              	.L209:
 725:ui.c          ****             {
 4588              		.loc 1 725 0
 4589 0ec6 00BF     		nop
 4590              	.L111:
1157:ui.c          ****         }
1158:ui.c          ****         else if (action == Up)
1159:ui.c          ****         {
1160:ui.c          ****             ;
1161:ui.c          ****         }
1162:ui.c          ****         else if (action == Down)
1163:ui.c          ****         {
1164:ui.c          ****             ;
1165:ui.c          ****         }
1166:ui.c          ****         //whatToDraw = 2;
1167:ui.c          ****     }
1168:ui.c          ****     
1169:ui.c          ****     
1170:ui.c          ****     //now draw stuff
1171:ui.c          ****     if (whatToDraw == 1)
 4591              		.loc 1 1171 0
 4592 0ec8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4593 0ecc 012B     		cmp	r3, #1
 4594 0ece 44D1     		bne	.L185
1172:ui.c          ****     {
1173:ui.c          ****         //draw main menu
1174:ui.c          ****         OLEDclear(128, 64);
 4595              		.loc 1 1174 0
 4596 0ed0 4021     		movs	r1, #64
 4597 0ed2 8020     		movs	r0, #128
 4598 0ed4 FFF7FEFF 		bl	OLEDclear
1175:ui.c          ****         myGFX_setFont(2);
 4599              		.loc 1 1175 0
 4600 0ed8 0220     		movs	r0, #2
 4601 0eda FFF7FEFF 		bl	myGFX_setFont
 4602              	.LBB14:
1176:ui.c          ****         for (int i = 0; i < numMainMenuItems; i++)
 4603              		.loc 1 1176 0
 4604 0ede 0023     		movs	r3, #0
 4605 0ee0 3B62     		str	r3, [r7, #32]
 4606 0ee2 2CE0     		b	.L186
 4607              	.L189:
1177:ui.c          ****         {
1178:ui.c          ****             if (menuPosition[0][1] == i)
 4608              		.loc 1 1178 0
 4609 0ee4 AD4B     		ldr	r3, .L221
 4610 0ee6 93F90130 		ldrsb	r3, [r3, #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 105


 4611 0eea 1A46     		mov	r2, r3
 4612 0eec 3B6A     		ldr	r3, [r7, #32]
 4613 0eee 9A42     		cmp	r2, r3
 4614 0ef0 14D1     		bne	.L187
1179:ui.c          ****             {
1180:ui.c          ****                 OLEDtextColor(0, 1);
 4615              		.loc 1 1180 0
 4616 0ef2 0121     		movs	r1, #1
 4617 0ef4 0020     		movs	r0, #0
 4618 0ef6 FFF7FEFF 		bl	OLEDtextColor
1181:ui.c          ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
 4619              		.loc 1 1181 0
 4620 0efa AA4A     		ldr	r2, .L221+8
 4621 0efc 3B6A     		ldr	r3, [r7, #32]
 4622 0efe 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4623 0f02 3B6A     		ldr	r3, [r7, #32]
 4624 0f04 DBB2     		uxtb	r3, r3
 4625 0f06 0022     		movs	r2, #0
 4626 0f08 0F21     		movs	r1, #15
 4627 0f0a FFF7FEFF 		bl	OLEDwriteString
1182:ui.c          ****                 OLEDwriteArrow(0, i);
 4628              		.loc 1 1182 0
 4629 0f0e 3B6A     		ldr	r3, [r7, #32]
 4630 0f10 DBB2     		uxtb	r3, r3
 4631 0f12 1946     		mov	r1, r3
 4632 0f14 0020     		movs	r0, #0
 4633 0f16 FFF7FEFF 		bl	OLEDwriteArrow
 4634 0f1a 0DE0     		b	.L188
 4635              	.L187:
1183:ui.c          ****             }
1184:ui.c          ****             else
1185:ui.c          ****             {
1186:ui.c          ****                 OLEDtextColor(1, 0);
 4636              		.loc 1 1186 0
 4637 0f1c 0021     		movs	r1, #0
 4638 0f1e 0120     		movs	r0, #1
 4639 0f20 FFF7FEFF 		bl	OLEDtextColor
1187:ui.c          ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
 4640              		.loc 1 1187 0
 4641 0f24 9F4A     		ldr	r2, .L221+8
 4642 0f26 3B6A     		ldr	r3, [r7, #32]
 4643 0f28 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4644 0f2c 3B6A     		ldr	r3, [r7, #32]
 4645 0f2e DBB2     		uxtb	r3, r3
 4646 0f30 0022     		movs	r2, #0
 4647 0f32 0F21     		movs	r1, #15
 4648 0f34 FFF7FEFF 		bl	OLEDwriteString
 4649              	.L188:
1176:ui.c          ****         {
 4650              		.loc 1 1176 0 discriminator 2
 4651 0f38 3B6A     		ldr	r3, [r7, #32]
 4652 0f3a 0133     		adds	r3, r3, #1
 4653 0f3c 3B62     		str	r3, [r7, #32]
 4654              	.L186:
1176:ui.c          ****         {
 4655              		.loc 1 1176 0 is_stmt 0 discriminator 1
 4656 0f3e 9A4B     		ldr	r3, .L221+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 106


 4657 0f40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4658 0f42 1A46     		mov	r2, r3
 4659 0f44 3B6A     		ldr	r3, [r7, #32]
 4660 0f46 9A42     		cmp	r2, r3
 4661 0f48 CCDC     		bgt	.L189
 4662              	.LBE14:
1188:ui.c          ****                 
1189:ui.c          ****             }
1190:ui.c          **** 
1191:ui.c          ****         }
1192:ui.c          ****         OLEDtextColor(1, 0);
 4663              		.loc 1 1192 0 is_stmt 1
 4664 0f4a 0021     		movs	r1, #0
 4665 0f4c 0120     		movs	r0, #1
 4666 0f4e FFF7FEFF 		bl	OLEDtextColor
1193:ui.c          ****         mainOLEDWaitingToSend = 1;
 4667              		.loc 1 1193 0
 4668 0f52 964B     		ldr	r3, .L221+16
 4669 0f54 0122     		movs	r2, #1
 4670 0f56 1A70     		strb	r2, [r3]
1194:ui.c          ****     }
1195:ui.c          ****     else if (whatToDraw == 2)
1196:ui.c          ****     {
1197:ui.c          ****         //store preset
1198:ui.c          ****         if (presetStoreStage == 0)
1199:ui.c          ****         {
1200:ui.c          ****             Decoder_1_Start();
1201:ui.c          ****             whatToDraw = 0;
1202:ui.c          ****             OLEDclear(128, 64);
1203:ui.c          ****             myGFX_setFont(2);
1204:ui.c          ****             OLEDtextColor(1, 0);
1205:ui.c          ****             OLEDwriteString("SELECT DEST",11 , 0, FirstLine);
1206:ui.c          ****             OLEDwriteString("LOCATION THEN ",13 , 0, SecondLine);
1207:ui.c          ****             OLEDwriteString("PUSH -> ",8 , 0, ThirdLine);
1208:ui.c          ****             OLEDtextColor(1, 0);
1209:ui.c          ****             myGFX_setFont(1);
1210:ui.c          ****             GFXsetCursor(&theGFX, 84,58);
1211:ui.c          ****            
1212:ui.c          ****             int8_t presetNumberToStoreTemp = presetNumberToStore;
1213:ui.c          **** 
1214:ui.c          ****             uint8_t currentChar = ((uint8_t)presetNumberToStoreTemp / 10);    
1215:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
1216:ui.c          ****             presetNumberToStoreTemp -= currentChar * 10;
1217:ui.c          ****             currentChar = ((uint8_t)presetNumberToStoreTemp);    
1218:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
1219:ui.c          ****             mainOLEDWaitingToSend = 1;
1220:ui.c          ****             encoderWatch = 1;
1221:ui.c          ****         }
1222:ui.c          ****         else if (presetStoreStage == 1)
1223:ui.c          ****         {
1224:ui.c          ****             whatToDraw = 0;
1225:ui.c          ****             OLEDclear(128, 64);
1226:ui.c          ****             newPresetName[0] = 'A';
1227:ui.c          ****             for (int i = 1; i < 14; i++)
1228:ui.c          ****             {
1229:ui.c          ****                 newPresetName[i] = 32;
1230:ui.c          ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 107


1231:ui.c          ****             myGFX_setFont(2);
1232:ui.c          ****             OLEDtextColor(1, 0);
1233:ui.c          ****             OLEDwriteString("USE VALUE KNOB",14 , 0, FirstLine);
1234:ui.c          ****             OLEDwriteString("TO CREATE NAME",14 , 0, SecondLine);
1235:ui.c          ****             OLEDtextColor(1, 0);
1236:ui.c          ****             myGFX_setFont(0);
1237:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
1238:ui.c          ****             
1239:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
1240:ui.c          ****             mainOLEDWaitingToSend = 1;
1241:ui.c          ****         }
1242:ui.c          ****         else
1243:ui.c          ****         {
1244:ui.c          ****             whatToDraw = 0;
1245:ui.c          ****             OLEDtextColor(1, 0);
1246:ui.c          ****             myGFX_setFont(0);
1247:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
1248:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
1249:ui.c          ****             newPresetName[presetStoreStage-1] = 'A' - 1;
1250:ui.c          ****             mainOLEDWaitingToSend = 1;
1251:ui.c          ****         }
1252:ui.c          ****     }
1253:ui.c          **** 
1254:ui.c          **** 
1255:ui.c          ****     
1256:ui.c          ****     else if (whatToDraw == 3)
1257:ui.c          ****     {
1258:ui.c          ****         //draw calibration menu
1259:ui.c          ****         OLEDclear(128, 64);
1260:ui.c          ****         myGFX_setFont(2);
1261:ui.c          ****         for (int i = 0; i < numCalibrationItems; i++)
1262:ui.c          ****         {
1263:ui.c          ****             if (menuPosition[1][1] == i)
1264:ui.c          ****             {
1265:ui.c          ****                 OLEDtextColor(0, 1);
1266:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
1267:ui.c          ****                 OLEDwriteArrow(0, i);
1268:ui.c          ****             }
1269:ui.c          ****             else
1270:ui.c          ****             {
1271:ui.c          ****                 OLEDtextColor(1, 0);
1272:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
1273:ui.c          ****                 
1274:ui.c          ****             }
1275:ui.c          ****         }
1276:ui.c          ****         OLEDtextColor(1, 0);
1277:ui.c          ****         mainOLEDWaitingToSend = 1;
1278:ui.c          ****     }
1279:ui.c          ****     else if (whatToDraw == 4)
1280:ui.c          ****     {
1281:ui.c          ****         //draw settings menu
1282:ui.c          ****         OLEDclear(128, 64);
1283:ui.c          ****         myGFX_setFont(2);
1284:ui.c          ****         uint8_t tempPos = 0;
1285:ui.c          ****         for (int i = 0; i < numSettingsItems; i++)
1286:ui.c          ****         {
1287:ui.c          ****             if (menuPosition[2][1] == i)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 108


1288:ui.c          ****             {
1289:ui.c          ****                 OLEDtextColor(0, 1);
1290:ui.c          ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
1291:ui.c          ****                 OLEDwriteArrow(0, 0);
1292:ui.c          ****             }
1293:ui.c          ****             else if (i > menuPosition[2][1])
1294:ui.c          ****             {
1295:ui.c          ****                 OLEDtextColor(1, 0);
1296:ui.c          ****                 tempPos = (i - menuPosition[2][1]);
1297:ui.c          ****                 if (tempPos < 4)
1298:ui.c          ****                 {
1299:ui.c          ****                     OLEDwriteString(settingsNames[i], 15, 0, tempPos);
1300:ui.c          ****                 } 
1301:ui.c          ****             }
1302:ui.c          ****         }
1303:ui.c          ****         tempPos++;
1304:ui.c          ****         OLEDtextColor(1, 0);
1305:ui.c          ****         while (tempPos < 4)
1306:ui.c          ****         {
1307:ui.c          ****             OLEDwriteString("               ", 15, 0, tempPos);
1308:ui.c          ****             tempPos++;
1309:ui.c          ****         }
1310:ui.c          ****         mainOLEDWaitingToSend = 1;
1311:ui.c          ****     }
1312:ui.c          ****     
1313:ui.c          **** }
 4671              		.loc 1 1313 0
 4672 0f58 9AE1     		b	.L210
 4673              	.L185:
1195:ui.c          ****     {
 4674              		.loc 1 1195 0
 4675 0f5a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4676 0f5e 022B     		cmp	r3, #2
 4677 0f60 40F0C280 		bne	.L191
1198:ui.c          ****         {
 4678              		.loc 1 1198 0
 4679 0f64 8E4B     		ldr	r3, .L221+4
 4680 0f66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4681 0f68 002B     		cmp	r3, #0
 4682 0f6a 59D1     		bne	.L192
 4683              	.LBB15:
1200:ui.c          ****             whatToDraw = 0;
 4684              		.loc 1 1200 0
 4685 0f6c FFF7FEFF 		bl	Decoder_1_Start
1201:ui.c          ****             OLEDclear(128, 64);
 4686              		.loc 1 1201 0
 4687 0f70 0023     		movs	r3, #0
 4688 0f72 87F82730 		strb	r3, [r7, #39]
1202:ui.c          ****             myGFX_setFont(2);
 4689              		.loc 1 1202 0
 4690 0f76 4021     		movs	r1, #64
 4691 0f78 8020     		movs	r0, #128
 4692 0f7a FFF7FEFF 		bl	OLEDclear
1203:ui.c          ****             OLEDtextColor(1, 0);
 4693              		.loc 1 1203 0
 4694 0f7e 0220     		movs	r0, #2
 4695 0f80 FFF7FEFF 		bl	myGFX_setFont
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 109


1204:ui.c          ****             OLEDwriteString("SELECT DEST",11 , 0, FirstLine);
 4696              		.loc 1 1204 0
 4697 0f84 0021     		movs	r1, #0
 4698 0f86 0120     		movs	r0, #1
 4699 0f88 FFF7FEFF 		bl	OLEDtextColor
1205:ui.c          ****             OLEDwriteString("LOCATION THEN ",13 , 0, SecondLine);
 4700              		.loc 1 1205 0
 4701 0f8c 0023     		movs	r3, #0
 4702 0f8e 0022     		movs	r2, #0
 4703 0f90 0B21     		movs	r1, #11
 4704 0f92 8748     		ldr	r0, .L221+20
 4705 0f94 FFF7FEFF 		bl	OLEDwriteString
1206:ui.c          ****             OLEDwriteString("PUSH -> ",8 , 0, ThirdLine);
 4706              		.loc 1 1206 0
 4707 0f98 0123     		movs	r3, #1
 4708 0f9a 0022     		movs	r2, #0
 4709 0f9c 0D21     		movs	r1, #13
 4710 0f9e 8548     		ldr	r0, .L221+24
 4711 0fa0 FFF7FEFF 		bl	OLEDwriteString
1207:ui.c          ****             OLEDtextColor(1, 0);
 4712              		.loc 1 1207 0
 4713 0fa4 0223     		movs	r3, #2
 4714 0fa6 0022     		movs	r2, #0
 4715 0fa8 0821     		movs	r1, #8
 4716 0faa 8348     		ldr	r0, .L221+28
 4717 0fac FFF7FEFF 		bl	OLEDwriteString
1208:ui.c          ****             myGFX_setFont(1);
 4718              		.loc 1 1208 0
 4719 0fb0 0021     		movs	r1, #0
 4720 0fb2 0120     		movs	r0, #1
 4721 0fb4 FFF7FEFF 		bl	OLEDtextColor
1209:ui.c          ****             GFXsetCursor(&theGFX, 84,58);
 4722              		.loc 1 1209 0
 4723 0fb8 0120     		movs	r0, #1
 4724 0fba FFF7FEFF 		bl	myGFX_setFont
1210:ui.c          ****            
 4725              		.loc 1 1210 0
 4726 0fbe 3A22     		movs	r2, #58
 4727 0fc0 5421     		movs	r1, #84
 4728 0fc2 7E48     		ldr	r0, .L221+32
 4729 0fc4 FFF7FEFF 		bl	GFXsetCursor
1212:ui.c          **** 
 4730              		.loc 1 1212 0
 4731 0fc8 7D4B     		ldr	r3, .L221+36
 4732 0fca 1B78     		ldrb	r3, [r3]
 4733 0fcc 7B73     		strb	r3, [r7, #13]
1214:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
 4734              		.loc 1 1214 0
 4735 0fce 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 4736 0fd0 7C4A     		ldr	r2, .L221+40
 4737 0fd2 A2FB0323 		umull	r2, r3, r2, r3
 4738 0fd6 DB08     		lsrs	r3, r3, #3
 4739 0fd8 3B73     		strb	r3, [r7, #12]
1215:ui.c          ****             presetNumberToStoreTemp -= currentChar * 10;
 4740              		.loc 1 1215 0
 4741 0fda 3B7B     		ldrb	r3, [r7, #12]
 4742 0fdc 3033     		adds	r3, r3, #48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 110


 4743 0fde DBB2     		uxtb	r3, r3
 4744 0fe0 1946     		mov	r1, r3
 4745 0fe2 7648     		ldr	r0, .L221+32
 4746 0fe4 FFF7FEFF 		bl	GFXwrite
1216:ui.c          ****             currentChar = ((uint8_t)presetNumberToStoreTemp);    
 4747              		.loc 1 1216 0
 4748 0fe8 3B7B     		ldrb	r3, [r7, #12]
 4749 0fea 1A46     		mov	r2, r3
 4750 0fec 5201     		lsls	r2, r2, #5
 4751 0fee D21A     		subs	r2, r2, r3
 4752 0ff0 9200     		lsls	r2, r2, #2
 4753 0ff2 D31A     		subs	r3, r2, r3
 4754 0ff4 5B00     		lsls	r3, r3, #1
 4755 0ff6 DAB2     		uxtb	r2, r3
 4756 0ff8 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 4757 0ffa 1344     		add	r3, r3, r2
 4758 0ffc DBB2     		uxtb	r3, r3
 4759 0ffe 7B73     		strb	r3, [r7, #13]
1217:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
 4760              		.loc 1 1217 0
 4761 1000 7B7B     		ldrb	r3, [r7, #13]
 4762 1002 3B73     		strb	r3, [r7, #12]
1218:ui.c          ****             mainOLEDWaitingToSend = 1;
 4763              		.loc 1 1218 0
 4764 1004 3B7B     		ldrb	r3, [r7, #12]
 4765 1006 3033     		adds	r3, r3, #48
 4766 1008 DBB2     		uxtb	r3, r3
 4767 100a 1946     		mov	r1, r3
 4768 100c 6B48     		ldr	r0, .L221+32
 4769 100e FFF7FEFF 		bl	GFXwrite
1219:ui.c          ****             encoderWatch = 1;
 4770              		.loc 1 1219 0
 4771 1012 664B     		ldr	r3, .L221+16
 4772 1014 0122     		movs	r2, #1
 4773 1016 1A70     		strb	r2, [r3]
1220:ui.c          ****         }
 4774              		.loc 1 1220 0
 4775 1018 6B4B     		ldr	r3, .L221+44
 4776 101a 0122     		movs	r2, #1
 4777 101c 1A70     		strb	r2, [r3]
 4778              	.LBE15:
 4779              		.loc 1 1313 0
 4780 101e 37E1     		b	.L210
 4781              	.L192:
1222:ui.c          ****         {
 4782              		.loc 1 1222 0
 4783 1020 5F4B     		ldr	r3, .L221+4
 4784 1022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4785 1024 012B     		cmp	r3, #1
 4786 1026 40D1     		bne	.L194
1224:ui.c          ****             OLEDclear(128, 64);
 4787              		.loc 1 1224 0
 4788 1028 0023     		movs	r3, #0
 4789 102a 87F82730 		strb	r3, [r7, #39]
1225:ui.c          ****             newPresetName[0] = 'A';
 4790              		.loc 1 1225 0
 4791 102e 4021     		movs	r1, #64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 111


 4792 1030 8020     		movs	r0, #128
 4793 1032 FFF7FEFF 		bl	OLEDclear
1226:ui.c          ****             for (int i = 1; i < 14; i++)
 4794              		.loc 1 1226 0
 4795 1036 654B     		ldr	r3, .L221+48
 4796 1038 4122     		movs	r2, #65
 4797 103a 1A70     		strb	r2, [r3]
 4798              	.LBB16:
1227:ui.c          ****             {
 4799              		.loc 1 1227 0
 4800 103c 0123     		movs	r3, #1
 4801 103e FB61     		str	r3, [r7, #28]
 4802 1040 07E0     		b	.L195
 4803              	.L196:
1229:ui.c          ****             }
 4804              		.loc 1 1229 0 discriminator 3
 4805 1042 624A     		ldr	r2, .L221+48
 4806 1044 FB69     		ldr	r3, [r7, #28]
 4807 1046 1344     		add	r3, r3, r2
 4808 1048 2022     		movs	r2, #32
 4809 104a 1A70     		strb	r2, [r3]
1227:ui.c          ****             {
 4810              		.loc 1 1227 0 discriminator 3
 4811 104c FB69     		ldr	r3, [r7, #28]
 4812 104e 0133     		adds	r3, r3, #1
 4813 1050 FB61     		str	r3, [r7, #28]
 4814              	.L195:
1227:ui.c          ****             {
 4815              		.loc 1 1227 0 is_stmt 0 discriminator 1
 4816 1052 FB69     		ldr	r3, [r7, #28]
 4817 1054 0D2B     		cmp	r3, #13
 4818 1056 F4DD     		ble	.L196
 4819              	.LBE16:
1231:ui.c          ****             OLEDtextColor(1, 0);
 4820              		.loc 1 1231 0 is_stmt 1
 4821 1058 0220     		movs	r0, #2
 4822 105a FFF7FEFF 		bl	myGFX_setFont
1232:ui.c          ****             OLEDwriteString("USE VALUE KNOB",14 , 0, FirstLine);
 4823              		.loc 1 1232 0
 4824 105e 0021     		movs	r1, #0
 4825 1060 0120     		movs	r0, #1
 4826 1062 FFF7FEFF 		bl	OLEDtextColor
1233:ui.c          ****             OLEDwriteString("TO CREATE NAME",14 , 0, SecondLine);
 4827              		.loc 1 1233 0
 4828 1066 0023     		movs	r3, #0
 4829 1068 0022     		movs	r2, #0
 4830 106a 0E21     		movs	r1, #14
 4831 106c 5848     		ldr	r0, .L221+52
 4832 106e FFF7FEFF 		bl	OLEDwriteString
1234:ui.c          ****             OLEDtextColor(1, 0);
 4833              		.loc 1 1234 0
 4834 1072 0123     		movs	r3, #1
 4835 1074 0022     		movs	r2, #0
 4836 1076 0E21     		movs	r1, #14
 4837 1078 5648     		ldr	r0, .L221+56
 4838 107a FFF7FEFF 		bl	OLEDwriteString
1235:ui.c          ****             myGFX_setFont(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 112


 4839              		.loc 1 1235 0
 4840 107e 0021     		movs	r1, #0
 4841 1080 0120     		movs	r0, #1
 4842 1082 FFF7FEFF 		bl	OLEDtextColor
1236:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
 4843              		.loc 1 1236 0
 4844 1086 0020     		movs	r0, #0
 4845 1088 FFF7FEFF 		bl	myGFX_setFont
1237:ui.c          ****             
 4846              		.loc 1 1237 0
 4847 108c 3222     		movs	r2, #50
 4848 108e 0021     		movs	r1, #0
 4849 1090 4A48     		ldr	r0, .L221+32
 4850 1092 FFF7FEFF 		bl	GFXsetCursor
1239:ui.c          ****             mainOLEDWaitingToSend = 1;
 4851              		.loc 1 1239 0
 4852 1096 0223     		movs	r3, #2
 4853 1098 0022     		movs	r2, #0
 4854 109a 0E21     		movs	r1, #14
 4855 109c 4B48     		ldr	r0, .L221+48
 4856 109e FFF7FEFF 		bl	OLEDwriteString
1240:ui.c          ****         }
 4857              		.loc 1 1240 0
 4858 10a2 424B     		ldr	r3, .L221+16
 4859 10a4 0122     		movs	r2, #1
 4860 10a6 1A70     		strb	r2, [r3]
 4861              		.loc 1 1313 0
 4862 10a8 F2E0     		b	.L210
 4863              	.L194:
1244:ui.c          ****             OLEDtextColor(1, 0);
 4864              		.loc 1 1244 0
 4865 10aa 0023     		movs	r3, #0
 4866 10ac 87F82730 		strb	r3, [r7, #39]
1245:ui.c          ****             myGFX_setFont(0);
 4867              		.loc 1 1245 0
 4868 10b0 0021     		movs	r1, #0
 4869 10b2 0120     		movs	r0, #1
 4870 10b4 FFF7FEFF 		bl	OLEDtextColor
1246:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
 4871              		.loc 1 1246 0
 4872 10b8 0020     		movs	r0, #0
 4873 10ba FFF7FEFF 		bl	myGFX_setFont
1247:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
 4874              		.loc 1 1247 0
 4875 10be 3222     		movs	r2, #50
 4876 10c0 0021     		movs	r1, #0
 4877 10c2 3E48     		ldr	r0, .L221+32
 4878 10c4 FFF7FEFF 		bl	GFXsetCursor
1248:ui.c          ****             newPresetName[presetStoreStage-1] = 'A' - 1;
 4879              		.loc 1 1248 0
 4880 10c8 0223     		movs	r3, #2
 4881 10ca 0022     		movs	r2, #0
 4882 10cc 0E21     		movs	r1, #14
 4883 10ce 3F48     		ldr	r0, .L221+48
 4884 10d0 FFF7FEFF 		bl	OLEDwriteString
1249:ui.c          ****             mainOLEDWaitingToSend = 1;
 4885              		.loc 1 1249 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 113


 4886 10d4 324B     		ldr	r3, .L221+4
 4887 10d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4888 10d8 013B     		subs	r3, r3, #1
 4889 10da 3C4A     		ldr	r2, .L221+48
 4890 10dc 4021     		movs	r1, #64
 4891 10de D154     		strb	r1, [r2, r3]
1250:ui.c          ****         }
 4892              		.loc 1 1250 0
 4893 10e0 324B     		ldr	r3, .L221+16
 4894 10e2 0122     		movs	r2, #1
 4895 10e4 1A70     		strb	r2, [r3]
 4896              		.loc 1 1313 0
 4897 10e6 D3E0     		b	.L210
 4898              	.L191:
1256:ui.c          ****     {
 4899              		.loc 1 1256 0
 4900 10e8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4901 10ec 032B     		cmp	r3, #3
 4902 10ee 44D1     		bne	.L197
1259:ui.c          ****         myGFX_setFont(2);
 4903              		.loc 1 1259 0
 4904 10f0 4021     		movs	r1, #64
 4905 10f2 8020     		movs	r0, #128
 4906 10f4 FFF7FEFF 		bl	OLEDclear
1260:ui.c          ****         for (int i = 0; i < numCalibrationItems; i++)
 4907              		.loc 1 1260 0
 4908 10f8 0220     		movs	r0, #2
 4909 10fa FFF7FEFF 		bl	myGFX_setFont
 4910              	.LBB17:
1261:ui.c          ****         {
 4911              		.loc 1 1261 0
 4912 10fe 0023     		movs	r3, #0
 4913 1100 BB61     		str	r3, [r7, #24]
 4914 1102 2CE0     		b	.L198
 4915              	.L201:
1263:ui.c          ****             {
 4916              		.loc 1 1263 0
 4917 1104 254B     		ldr	r3, .L221
 4918 1106 93F90330 		ldrsb	r3, [r3, #3]
 4919 110a 1A46     		mov	r2, r3
 4920 110c BB69     		ldr	r3, [r7, #24]
 4921 110e 9A42     		cmp	r2, r3
 4922 1110 14D1     		bne	.L199
1265:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 4923              		.loc 1 1265 0
 4924 1112 0121     		movs	r1, #1
 4925 1114 0020     		movs	r0, #0
 4926 1116 FFF7FEFF 		bl	OLEDtextColor
1266:ui.c          ****                 OLEDwriteArrow(0, i);
 4927              		.loc 1 1266 0
 4928 111a 2F4A     		ldr	r2, .L221+60
 4929 111c BB69     		ldr	r3, [r7, #24]
 4930 111e 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4931 1122 BB69     		ldr	r3, [r7, #24]
 4932 1124 DBB2     		uxtb	r3, r3
 4933 1126 0022     		movs	r2, #0
 4934 1128 0F21     		movs	r1, #15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 114


 4935 112a FFF7FEFF 		bl	OLEDwriteString
1267:ui.c          ****             }
 4936              		.loc 1 1267 0
 4937 112e BB69     		ldr	r3, [r7, #24]
 4938 1130 DBB2     		uxtb	r3, r3
 4939 1132 1946     		mov	r1, r3
 4940 1134 0020     		movs	r0, #0
 4941 1136 FFF7FEFF 		bl	OLEDwriteArrow
 4942 113a 0DE0     		b	.L200
 4943              	.L199:
1271:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 4944              		.loc 1 1271 0
 4945 113c 0021     		movs	r1, #0
 4946 113e 0120     		movs	r0, #1
 4947 1140 FFF7FEFF 		bl	OLEDtextColor
1272:ui.c          ****                 
 4948              		.loc 1 1272 0
 4949 1144 244A     		ldr	r2, .L221+60
 4950 1146 BB69     		ldr	r3, [r7, #24]
 4951 1148 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4952 114c BB69     		ldr	r3, [r7, #24]
 4953 114e DBB2     		uxtb	r3, r3
 4954 1150 0022     		movs	r2, #0
 4955 1152 0F21     		movs	r1, #15
 4956 1154 FFF7FEFF 		bl	OLEDwriteString
 4957              	.L200:
1261:ui.c          ****         {
 4958              		.loc 1 1261 0 discriminator 2
 4959 1158 BB69     		ldr	r3, [r7, #24]
 4960 115a 0133     		adds	r3, r3, #1
 4961 115c BB61     		str	r3, [r7, #24]
 4962              	.L198:
1261:ui.c          ****         {
 4963              		.loc 1 1261 0 is_stmt 0 discriminator 1
 4964 115e 1F4B     		ldr	r3, .L221+64
 4965 1160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4966 1162 1A46     		mov	r2, r3
 4967 1164 BB69     		ldr	r3, [r7, #24]
 4968 1166 9A42     		cmp	r2, r3
 4969 1168 CCDC     		bgt	.L201
 4970              	.LBE17:
1276:ui.c          ****         mainOLEDWaitingToSend = 1;
 4971              		.loc 1 1276 0 is_stmt 1
 4972 116a 0021     		movs	r1, #0
 4973 116c 0120     		movs	r0, #1
 4974 116e FFF7FEFF 		bl	OLEDtextColor
1277:ui.c          ****     }
 4975              		.loc 1 1277 0
 4976 1172 0E4B     		ldr	r3, .L221+16
 4977 1174 0122     		movs	r2, #1
 4978 1176 1A70     		strb	r2, [r3]
 4979              		.loc 1 1313 0
 4980 1178 8AE0     		b	.L210
 4981              	.L197:
1279:ui.c          ****     {
 4982              		.loc 1 1279 0
 4983 117a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 115


 4984 117e 042B     		cmp	r3, #4
 4985 1180 40F08680 		bne	.L210
 4986              	.LBB18:
1282:ui.c          ****         myGFX_setFont(2);
 4987              		.loc 1 1282 0
 4988 1184 4021     		movs	r1, #64
 4989 1186 8020     		movs	r0, #128
 4990 1188 FFF7FEFF 		bl	OLEDclear
1283:ui.c          ****         uint8_t tempPos = 0;
 4991              		.loc 1 1283 0
 4992 118c 0220     		movs	r0, #2
 4993 118e FFF7FEFF 		bl	myGFX_setFont
1284:ui.c          ****         for (int i = 0; i < numSettingsItems; i++)
 4994              		.loc 1 1284 0
 4995 1192 0023     		movs	r3, #0
 4996 1194 FB75     		strb	r3, [r7, #23]
 4997              	.LBB19:
1285:ui.c          ****         {
 4998              		.loc 1 1285 0
 4999 1196 0023     		movs	r3, #0
 5000 1198 3B61     		str	r3, [r7, #16]
 5001 119a 5CE0     		b	.L202
 5002              	.L222:
 5003              		.align	2
 5004              	.L221:
 5005 119c 00000000 		.word	menuPosition
 5006 11a0 00000000 		.word	presetStoreStage
 5007 11a4 00000000 		.word	mainMenuNames
 5008 11a8 00000000 		.word	numMainMenuItems
 5009 11ac 00000000 		.word	mainOLEDWaitingToSend
 5010 11b0 84020000 		.word	.LC37
 5011 11b4 90020000 		.word	.LC38
 5012 11b8 A0020000 		.word	.LC39
 5013 11bc 00000000 		.word	theGFX
 5014 11c0 00000000 		.word	presetNumberToStore
 5015 11c4 CDCCCCCC 		.word	-858993459
 5016 11c8 00000000 		.word	encoderWatch
 5017 11cc 00000000 		.word	newPresetName
 5018 11d0 AC020000 		.word	.LC40
 5019 11d4 BC020000 		.word	.LC41
 5020 11d8 00000000 		.word	calibrationNames
 5021 11dc 00000000 		.word	numCalibrationItems
 5022              	.L205:
1287:ui.c          ****             {
 5023              		.loc 1 1287 0
 5024 11e0 2D4B     		ldr	r3, .L223
 5025 11e2 93F90530 		ldrsb	r3, [r3, #5]
 5026 11e6 1A46     		mov	r2, r3
 5027 11e8 3B69     		ldr	r3, [r7, #16]
 5028 11ea 9A42     		cmp	r2, r3
 5029 11ec 11D1     		bne	.L203
1289:ui.c          ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
 5030              		.loc 1 1289 0
 5031 11ee 0121     		movs	r1, #1
 5032 11f0 0020     		movs	r0, #0
 5033 11f2 FFF7FEFF 		bl	OLEDtextColor
1290:ui.c          ****                 OLEDwriteArrow(0, 0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 116


 5034              		.loc 1 1290 0
 5035 11f6 294A     		ldr	r2, .L223+4
 5036 11f8 3B69     		ldr	r3, [r7, #16]
 5037 11fa 52F82300 		ldr	r0, [r2, r3, lsl #2]
 5038 11fe 0023     		movs	r3, #0
 5039 1200 0022     		movs	r2, #0
 5040 1202 0F21     		movs	r1, #15
 5041 1204 FFF7FEFF 		bl	OLEDwriteString
1291:ui.c          ****             }
 5042              		.loc 1 1291 0
 5043 1208 0021     		movs	r1, #0
 5044 120a 0020     		movs	r0, #0
 5045 120c FFF7FEFF 		bl	OLEDwriteArrow
 5046 1210 1EE0     		b	.L204
 5047              	.L203:
1293:ui.c          ****             {
 5048              		.loc 1 1293 0
 5049 1212 214B     		ldr	r3, .L223
 5050 1214 93F90530 		ldrsb	r3, [r3, #5]
 5051 1218 1A46     		mov	r2, r3
 5052 121a 3B69     		ldr	r3, [r7, #16]
 5053 121c 9A42     		cmp	r2, r3
 5054 121e 17DA     		bge	.L204
1295:ui.c          ****                 tempPos = (i - menuPosition[2][1]);
 5055              		.loc 1 1295 0
 5056 1220 0021     		movs	r1, #0
 5057 1222 0120     		movs	r0, #1
 5058 1224 FFF7FEFF 		bl	OLEDtextColor
1296:ui.c          ****                 if (tempPos < 4)
 5059              		.loc 1 1296 0
 5060 1228 3B69     		ldr	r3, [r7, #16]
 5061 122a DAB2     		uxtb	r2, r3
 5062 122c 1A4B     		ldr	r3, .L223
 5063 122e 93F90530 		ldrsb	r3, [r3, #5]
 5064 1232 DBB2     		uxtb	r3, r3
 5065 1234 D31A     		subs	r3, r2, r3
 5066 1236 FB75     		strb	r3, [r7, #23]
1297:ui.c          ****                 {
 5067              		.loc 1 1297 0
 5068 1238 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5069 123a 032B     		cmp	r3, #3
 5070 123c 08D8     		bhi	.L204
1299:ui.c          ****                 } 
 5071              		.loc 1 1299 0
 5072 123e 174A     		ldr	r2, .L223+4
 5073 1240 3B69     		ldr	r3, [r7, #16]
 5074 1242 52F82300 		ldr	r0, [r2, r3, lsl #2]
 5075 1246 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5076 1248 0022     		movs	r2, #0
 5077 124a 0F21     		movs	r1, #15
 5078 124c FFF7FEFF 		bl	OLEDwriteString
 5079              	.L204:
1285:ui.c          ****         {
 5080              		.loc 1 1285 0 discriminator 2
 5081 1250 3B69     		ldr	r3, [r7, #16]
 5082 1252 0133     		adds	r3, r3, #1
 5083 1254 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 117


 5084              	.L202:
1285:ui.c          ****         {
 5085              		.loc 1 1285 0 is_stmt 0 discriminator 1
 5086 1256 124B     		ldr	r3, .L223+8
 5087 1258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5088 125a 1A46     		mov	r2, r3
 5089 125c 3B69     		ldr	r3, [r7, #16]
 5090 125e 9A42     		cmp	r2, r3
 5091 1260 BEDC     		bgt	.L205
 5092              	.LBE19:
1303:ui.c          ****         OLEDtextColor(1, 0);
 5093              		.loc 1 1303 0 is_stmt 1
 5094 1262 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5095 1264 0133     		adds	r3, r3, #1
 5096 1266 FB75     		strb	r3, [r7, #23]
1304:ui.c          ****         while (tempPos < 4)
 5097              		.loc 1 1304 0
 5098 1268 0021     		movs	r1, #0
 5099 126a 0120     		movs	r0, #1
 5100 126c FFF7FEFF 		bl	OLEDtextColor
1305:ui.c          ****         {
 5101              		.loc 1 1305 0
 5102 1270 08E0     		b	.L206
 5103              	.L207:
1307:ui.c          ****             tempPos++;
 5104              		.loc 1 1307 0
 5105 1272 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5106 1274 0022     		movs	r2, #0
 5107 1276 0F21     		movs	r1, #15
 5108 1278 0A48     		ldr	r0, .L223+12
 5109 127a FFF7FEFF 		bl	OLEDwriteString
1308:ui.c          ****         }
 5110              		.loc 1 1308 0
 5111 127e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5112 1280 0133     		adds	r3, r3, #1
 5113 1282 FB75     		strb	r3, [r7, #23]
 5114              	.L206:
1305:ui.c          ****         {
 5115              		.loc 1 1305 0
 5116 1284 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5117 1286 032B     		cmp	r3, #3
 5118 1288 F3D9     		bls	.L207
1310:ui.c          ****     }
 5119              		.loc 1 1310 0
 5120 128a 074B     		ldr	r3, .L223+16
 5121 128c 0122     		movs	r2, #1
 5122 128e 1A70     		strb	r2, [r3]
 5123              	.L210:
 5124              	.LBE18:
 5125              		.loc 1 1313 0
 5126 1290 00BF     		nop
 5127 1292 2837     		adds	r7, r7, #40
 5128              		.cfi_def_cfa_offset 8
 5129 1294 BD46     		mov	sp, r7
 5130              		.cfi_def_cfa_register 13
 5131              		@ sp needed
 5132 1296 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 118


 5133              	.L224:
 5134              		.align	2
 5135              	.L223:
 5136 1298 00000000 		.word	menuPosition
 5137 129c 00000000 		.word	settingsNames
 5138 12a0 00000000 		.word	numSettingsItems
 5139 12a4 CC020000 		.word	.LC42
 5140 12a8 00000000 		.word	mainOLEDWaitingToSend
 5141              		.cfi_endproc
 5142              	.LFE67:
 5143              		.size	menuAction, .-menuAction
 5144              		.section	.text.leftPressed,"ax",%progbits
 5145              		.align	2
 5146              		.global	leftPressed
 5147              		.thumb
 5148              		.thumb_func
 5149              		.type	leftPressed, %function
 5150              	leftPressed:
 5151              	.LFB68:
1314:ui.c          **** 
1315:ui.c          **** void leftPressed()
1316:ui.c          **** {
 5152              		.loc 1 1316 0
 5153              		.cfi_startproc
 5154              		@ args = 0, pretend = 0, frame = 0
 5155              		@ frame_needed = 1, uses_anonymous_args = 0
 5156 0000 80B5     		push	{r7, lr}
 5157              		.cfi_def_cfa_offset 8
 5158              		.cfi_offset 7, -8
 5159              		.cfi_offset 14, -4
 5160 0002 00AF     		add	r7, sp, #0
 5161              		.cfi_def_cfa_register 7
1317:ui.c          ****     if (!editMode) //normal behavior
 5162              		.loc 1 1317 0
 5163 0004 204B     		ldr	r3, .L231
 5164 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5165 0008 002B     		cmp	r3, #0
 5166 000a 38D1     		bne	.L226
1318:ui.c          ****     {
1319:ui.c          ****         if (currentCopedent == 0)
 5167              		.loc 1 1319 0
 5168 000c 1F4B     		ldr	r3, .L231+4
 5169 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5170 0010 002B     		cmp	r3, #0
 5171 0012 03D1     		bne	.L227
1320:ui.c          ****         {
1321:ui.c          ****             currentCopedent = MAX_NUM_COPEDENTS-1;
 5172              		.loc 1 1321 0
 5173 0014 1D4B     		ldr	r3, .L231+4
 5174 0016 0622     		movs	r2, #6
 5175 0018 1A70     		strb	r2, [r3]
 5176 001a 05E0     		b	.L228
 5177              	.L227:
1322:ui.c          ****         }
1323:ui.c          ****         else
1324:ui.c          ****         {
1325:ui.c          ****             currentCopedent -= 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 119


 5178              		.loc 1 1325 0
 5179 001c 1B4B     		ldr	r3, .L231+4
 5180 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5181 0020 013B     		subs	r3, r3, #1
 5182 0022 DAB2     		uxtb	r2, r3
 5183 0024 194B     		ldr	r3, .L231+4
 5184 0026 1A70     		strb	r2, [r3]
 5185              	.L228:
1326:ui.c          ****         }
1327:ui.c          ****         necks[currentNeck] = currentCopedent;
 5186              		.loc 1 1327 0
 5187 0028 194B     		ldr	r3, .L231+8
 5188 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5189 002c 1A46     		mov	r2, r3
 5190 002e 174B     		ldr	r3, .L231+4
 5191 0030 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5192 0032 184B     		ldr	r3, .L231+12
 5193 0034 9954     		strb	r1, [r3, r2]
1328:ui.c          ****         neckByte = 0;
 5194              		.loc 1 1328 0
 5195 0036 184B     		ldr	r3, .L231+16
 5196 0038 0022     		movs	r2, #0
 5197 003a 1A70     		strb	r2, [r3]
1329:ui.c          ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 5198              		.loc 1 1329 0
 5199 003c 154B     		ldr	r3, .L231+12
 5200 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5201 0040 5B01     		lsls	r3, r3, #5
 5202 0042 DAB2     		uxtb	r2, r3
 5203 0044 134B     		ldr	r3, .L231+12
 5204 0046 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5205 0048 9B00     		lsls	r3, r3, #2
 5206 004a DBB2     		uxtb	r3, r3
 5207 004c 1344     		add	r3, r3, r2
 5208 004e DAB2     		uxtb	r2, r3
 5209 0050 0F4B     		ldr	r3, .L231+8
 5210 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5211 0054 1344     		add	r3, r3, r2
 5212 0056 DBB2     		uxtb	r3, r3
 5213 0058 5AB2     		sxtb	r2, r3
 5214 005a 0F4B     		ldr	r3, .L231+16
 5215 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5216 005e 5BB2     		sxtb	r3, r3
 5217 0060 1343     		orrs	r3, r3, r2
 5218 0062 5BB2     		sxtb	r3, r3
 5219 0064 DAB2     		uxtb	r2, r3
 5220 0066 0C4B     		ldr	r3, .L231+16
 5221 0068 1A70     		strb	r2, [r3]
1330:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 5222              		.loc 1 1330 0
 5223 006a 0B4B     		ldr	r3, .L231+16
 5224 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5225 006e 40F2E371 		movw	r1, #2019
 5226 0072 1846     		mov	r0, r3
 5227 0074 FFF7FEFF 		bl	EEPROM_WriteByte
1331:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5228              		.loc 1 1331 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 120


 5229 0078 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1332:ui.c          ****     }
1333:ui.c          ****     else
1334:ui.c          ****     {
1335:ui.c          ****         menuAction(Left);
1336:ui.c          ****     }
1337:ui.c          **** }
 5230              		.loc 1 1337 0
 5231 007c 02E0     		b	.L230
 5232              	.L226:
1335:ui.c          ****     }
 5233              		.loc 1 1335 0
 5234 007e 0020     		movs	r0, #0
 5235 0080 FFF7FEFF 		bl	menuAction
 5236              	.L230:
 5237              		.loc 1 1337 0
 5238 0084 00BF     		nop
 5239 0086 80BD     		pop	{r7, pc}
 5240              	.L232:
 5241              		.align	2
 5242              	.L231:
 5243 0088 00000000 		.word	editMode
 5244 008c 00000000 		.word	currentCopedent
 5245 0090 00000000 		.word	currentNeck
 5246 0094 00000000 		.word	necks
 5247 0098 00000000 		.word	neckByte
 5248              		.cfi_endproc
 5249              	.LFE68:
 5250              		.size	leftPressed, .-leftPressed
 5251              		.section	.text.rightPressed,"ax",%progbits
 5252              		.align	2
 5253              		.global	rightPressed
 5254              		.thumb
 5255              		.thumb_func
 5256              		.type	rightPressed, %function
 5257              	rightPressed:
 5258              	.LFB69:
1338:ui.c          **** 
1339:ui.c          **** void rightPressed()
1340:ui.c          **** {
 5259              		.loc 1 1340 0
 5260              		.cfi_startproc
 5261              		@ args = 0, pretend = 0, frame = 0
 5262              		@ frame_needed = 1, uses_anonymous_args = 0
 5263 0000 80B5     		push	{r7, lr}
 5264              		.cfi_def_cfa_offset 8
 5265              		.cfi_offset 7, -8
 5266              		.cfi_offset 14, -4
 5267 0002 00AF     		add	r7, sp, #0
 5268              		.cfi_def_cfa_register 7
1341:ui.c          ****     if (!editMode) //normal behavior
 5269              		.loc 1 1341 0
 5270 0004 204B     		ldr	r3, .L238
 5271 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5272 0008 002B     		cmp	r3, #0
 5273 000a 37D1     		bne	.L234
1342:ui.c          ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 121


1343:ui.c          ****         currentCopedent += 1;
 5274              		.loc 1 1343 0
 5275 000c 1F4B     		ldr	r3, .L238+4
 5276 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5277 0010 0133     		adds	r3, r3, #1
 5278 0012 DAB2     		uxtb	r2, r3
 5279 0014 1D4B     		ldr	r3, .L238+4
 5280 0016 1A70     		strb	r2, [r3]
1344:ui.c          ****         if (currentCopedent >= MAX_NUM_COPEDENTS)
 5281              		.loc 1 1344 0
 5282 0018 1C4B     		ldr	r3, .L238+4
 5283 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5284 001c 062B     		cmp	r3, #6
 5285 001e 02D9     		bls	.L235
1345:ui.c          ****         {
1346:ui.c          ****             currentCopedent = 0;
 5286              		.loc 1 1346 0
 5287 0020 1A4B     		ldr	r3, .L238+4
 5288 0022 0022     		movs	r2, #0
 5289 0024 1A70     		strb	r2, [r3]
 5290              	.L235:
1347:ui.c          ****         }
1348:ui.c          ****         necks[currentNeck] = currentCopedent;
 5291              		.loc 1 1348 0
 5292 0026 1A4B     		ldr	r3, .L238+8
 5293 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5294 002a 1A46     		mov	r2, r3
 5295 002c 174B     		ldr	r3, .L238+4
 5296 002e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5297 0030 184B     		ldr	r3, .L238+12
 5298 0032 9954     		strb	r1, [r3, r2]
1349:ui.c          ****         neckByte = 0;
 5299              		.loc 1 1349 0
 5300 0034 184B     		ldr	r3, .L238+16
 5301 0036 0022     		movs	r2, #0
 5302 0038 1A70     		strb	r2, [r3]
1350:ui.c          ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 5303              		.loc 1 1350 0
 5304 003a 164B     		ldr	r3, .L238+12
 5305 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5306 003e 5B01     		lsls	r3, r3, #5
 5307 0040 DAB2     		uxtb	r2, r3
 5308 0042 144B     		ldr	r3, .L238+12
 5309 0044 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5310 0046 9B00     		lsls	r3, r3, #2
 5311 0048 DBB2     		uxtb	r3, r3
 5312 004a 1344     		add	r3, r3, r2
 5313 004c DAB2     		uxtb	r2, r3
 5314 004e 104B     		ldr	r3, .L238+8
 5315 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5316 0052 1344     		add	r3, r3, r2
 5317 0054 DBB2     		uxtb	r3, r3
 5318 0056 5AB2     		sxtb	r2, r3
 5319 0058 0F4B     		ldr	r3, .L238+16
 5320 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5321 005c 5BB2     		sxtb	r3, r3
 5322 005e 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 122


 5323 0060 5BB2     		sxtb	r3, r3
 5324 0062 DAB2     		uxtb	r2, r3
 5325 0064 0C4B     		ldr	r3, .L238+16
 5326 0066 1A70     		strb	r2, [r3]
1351:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 5327              		.loc 1 1351 0
 5328 0068 0B4B     		ldr	r3, .L238+16
 5329 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5330 006c 40F2E371 		movw	r1, #2019
 5331 0070 1846     		mov	r0, r3
 5332 0072 FFF7FEFF 		bl	EEPROM_WriteByte
1352:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5333              		.loc 1 1352 0
 5334 0076 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1353:ui.c          ****     }
1354:ui.c          ****     else
1355:ui.c          ****     {
1356:ui.c          ****        menuAction(Right);
1357:ui.c          ****     }
1358:ui.c          **** }
 5335              		.loc 1 1358 0
 5336 007a 02E0     		b	.L237
 5337              	.L234:
1356:ui.c          ****     }
 5338              		.loc 1 1356 0
 5339 007c 0120     		movs	r0, #1
 5340 007e FFF7FEFF 		bl	menuAction
 5341              	.L237:
 5342              		.loc 1 1358 0
 5343 0082 00BF     		nop
 5344 0084 80BD     		pop	{r7, pc}
 5345              	.L239:
 5346 0086 00BF     		.align	2
 5347              	.L238:
 5348 0088 00000000 		.word	editMode
 5349 008c 00000000 		.word	currentCopedent
 5350 0090 00000000 		.word	currentNeck
 5351 0094 00000000 		.word	necks
 5352 0098 00000000 		.word	neckByte
 5353              		.cfi_endproc
 5354              	.LFE69:
 5355              		.size	rightPressed, .-rightPressed
 5356              		.section	.text.downPressed,"ax",%progbits
 5357              		.align	2
 5358              		.global	downPressed
 5359              		.thumb
 5360              		.thumb_func
 5361              		.type	downPressed, %function
 5362              	downPressed:
 5363              	.LFB70:
1359:ui.c          **** 
1360:ui.c          **** void downPressed()
1361:ui.c          **** {
 5364              		.loc 1 1361 0
 5365              		.cfi_startproc
 5366              		@ args = 0, pretend = 0, frame = 0
 5367              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 123


 5368 0000 80B5     		push	{r7, lr}
 5369              		.cfi_def_cfa_offset 8
 5370              		.cfi_offset 7, -8
 5371              		.cfi_offset 14, -4
 5372 0002 00AF     		add	r7, sp, #0
 5373              		.cfi_def_cfa_register 7
1362:ui.c          ****     if (!editMode) //normal behavior
 5374              		.loc 1 1362 0
 5375 0004 194B     		ldr	r3, .L244
 5376 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5377 0008 002B     		cmp	r3, #0
 5378 000a 29D1     		bne	.L241
1363:ui.c          ****     {
1364:ui.c          ****         patchNum -= 1;
 5379              		.loc 1 1364 0
 5380 000c 184B     		ldr	r3, .L244+4
 5381 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5382 0010 013B     		subs	r3, r3, #1
 5383 0012 DAB2     		uxtb	r2, r3
 5384 0014 164B     		ldr	r3, .L244+4
 5385 0016 1A70     		strb	r2, [r3]
1365:ui.c          ****         patchNum &= 63;
 5386              		.loc 1 1365 0
 5387 0018 154B     		ldr	r3, .L244+4
 5388 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5389 001c 03F03F03 		and	r3, r3, #63
 5390 0020 DAB2     		uxtb	r2, r3
 5391 0022 134B     		ldr	r3, .L244+4
 5392 0024 1A70     		strb	r2, [r3]
1366:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 5393              		.loc 1 1366 0
 5394 0026 124B     		ldr	r3, .L244+4
 5395 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5396 002a 40F2D671 		movw	r1, #2006
 5397 002e 1846     		mov	r0, r3
 5398 0030 FFF7FEFF 		bl	EEPROM_WriteByte
1367:ui.c          ****         
1368:ui.c          ****         neckPreset[currentNeck] = patchNum;
 5399              		.loc 1 1368 0
 5400 0034 0F4B     		ldr	r3, .L244+8
 5401 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5402 0038 1A46     		mov	r2, r3
 5403 003a 0D4B     		ldr	r3, .L244+4
 5404 003c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5405 003e 0E4B     		ldr	r3, .L244+12
 5406 0040 9954     		strb	r1, [r3, r2]
1369:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 5407              		.loc 1 1369 0
 5408 0042 0B4B     		ldr	r3, .L244+4
 5409 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5410 0046 0B4B     		ldr	r3, .L244+8
 5411 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5412 004a 9BB2     		uxth	r3, r3
 5413 004c 03F2DC73 		addw	r3, r3, #2012
 5414 0050 9BB2     		uxth	r3, r3
 5415 0052 1946     		mov	r1, r3
 5416 0054 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 124


 5417 0056 FFF7FEFF 		bl	EEPROM_WriteByte
1370:ui.c          ****         
1371:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5418              		.loc 1 1371 0
 5419 005a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1372:ui.c          ****     }
1373:ui.c          ****     else
1374:ui.c          ****     {
1375:ui.c          ****         menuAction(Down);
1376:ui.c          ****     }
1377:ui.c          **** }
 5420              		.loc 1 1377 0
 5421 005e 02E0     		b	.L243
 5422              	.L241:
1375:ui.c          ****     }
 5423              		.loc 1 1375 0
 5424 0060 0220     		movs	r0, #2
 5425 0062 FFF7FEFF 		bl	menuAction
 5426              	.L243:
 5427              		.loc 1 1377 0
 5428 0066 00BF     		nop
 5429 0068 80BD     		pop	{r7, pc}
 5430              	.L245:
 5431 006a 00BF     		.align	2
 5432              	.L244:
 5433 006c 00000000 		.word	editMode
 5434 0070 00000000 		.word	patchNum
 5435 0074 00000000 		.word	currentNeck
 5436 0078 00000000 		.word	neckPreset
 5437              		.cfi_endproc
 5438              	.LFE70:
 5439              		.size	downPressed, .-downPressed
 5440              		.section	.text.upPressed,"ax",%progbits
 5441              		.align	2
 5442              		.global	upPressed
 5443              		.thumb
 5444              		.thumb_func
 5445              		.type	upPressed, %function
 5446              	upPressed:
 5447              	.LFB71:
1378:ui.c          **** 
1379:ui.c          **** void upPressed()
1380:ui.c          **** {
 5448              		.loc 1 1380 0
 5449              		.cfi_startproc
 5450              		@ args = 0, pretend = 0, frame = 0
 5451              		@ frame_needed = 1, uses_anonymous_args = 0
 5452 0000 80B5     		push	{r7, lr}
 5453              		.cfi_def_cfa_offset 8
 5454              		.cfi_offset 7, -8
 5455              		.cfi_offset 14, -4
 5456 0002 00AF     		add	r7, sp, #0
 5457              		.cfi_def_cfa_register 7
1381:ui.c          ****     if (!editMode) //normal behavior
 5458              		.loc 1 1381 0
 5459 0004 194B     		ldr	r3, .L250
 5460 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 125


 5461 0008 002B     		cmp	r3, #0
 5462 000a 29D1     		bne	.L247
1382:ui.c          ****     {
1383:ui.c          ****         patchNum += 1;
 5463              		.loc 1 1383 0
 5464 000c 184B     		ldr	r3, .L250+4
 5465 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5466 0010 0133     		adds	r3, r3, #1
 5467 0012 DAB2     		uxtb	r2, r3
 5468 0014 164B     		ldr	r3, .L250+4
 5469 0016 1A70     		strb	r2, [r3]
1384:ui.c          ****         patchNum &= 63;
 5470              		.loc 1 1384 0
 5471 0018 154B     		ldr	r3, .L250+4
 5472 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5473 001c 03F03F03 		and	r3, r3, #63
 5474 0020 DAB2     		uxtb	r2, r3
 5475 0022 134B     		ldr	r3, .L250+4
 5476 0024 1A70     		strb	r2, [r3]
1385:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 5477              		.loc 1 1385 0
 5478 0026 124B     		ldr	r3, .L250+4
 5479 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5480 002a 40F2D671 		movw	r1, #2006
 5481 002e 1846     		mov	r0, r3
 5482 0030 FFF7FEFF 		bl	EEPROM_WriteByte
1386:ui.c          ****         
1387:ui.c          ****         neckPreset[currentNeck] = patchNum;
 5483              		.loc 1 1387 0
 5484 0034 0F4B     		ldr	r3, .L250+8
 5485 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5486 0038 1A46     		mov	r2, r3
 5487 003a 0D4B     		ldr	r3, .L250+4
 5488 003c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5489 003e 0E4B     		ldr	r3, .L250+12
 5490 0040 9954     		strb	r1, [r3, r2]
1388:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 5491              		.loc 1 1388 0
 5492 0042 0B4B     		ldr	r3, .L250+4
 5493 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5494 0046 0B4B     		ldr	r3, .L250+8
 5495 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5496 004a 9BB2     		uxth	r3, r3
 5497 004c 03F2DC73 		addw	r3, r3, #2012
 5498 0050 9BB2     		uxth	r3, r3
 5499 0052 1946     		mov	r1, r3
 5500 0054 1046     		mov	r0, r2
 5501 0056 FFF7FEFF 		bl	EEPROM_WriteByte
1389:ui.c          ****         
1390:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5502              		.loc 1 1390 0
 5503 005a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1391:ui.c          ****     }
1392:ui.c          ****     else
1393:ui.c          ****     {
1394:ui.c          ****         menuAction(Up);
1395:ui.c          ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 126


1396:ui.c          **** }
 5504              		.loc 1 1396 0
 5505 005e 02E0     		b	.L249
 5506              	.L247:
1394:ui.c          ****     }
 5507              		.loc 1 1394 0
 5508 0060 0320     		movs	r0, #3
 5509 0062 FFF7FEFF 		bl	menuAction
 5510              	.L249:
 5511              		.loc 1 1396 0
 5512 0066 00BF     		nop
 5513 0068 80BD     		pop	{r7, pc}
 5514              	.L251:
 5515 006a 00BF     		.align	2
 5516              	.L250:
 5517 006c 00000000 		.word	editMode
 5518 0070 00000000 		.word	patchNum
 5519 0074 00000000 		.word	currentNeck
 5520 0078 00000000 		.word	neckPreset
 5521              		.cfi_endproc
 5522              	.LFE71:
 5523              		.size	upPressed, .-upPressed
 5524              		.section	.text.enterPressed,"ax",%progbits
 5525              		.align	2
 5526              		.global	enterPressed
 5527              		.thumb
 5528              		.thumb_func
 5529              		.type	enterPressed, %function
 5530              	enterPressed:
 5531              	.LFB72:
1397:ui.c          **** 
1398:ui.c          **** void enterPressed()
1399:ui.c          **** {
 5532              		.loc 1 1399 0
 5533              		.cfi_startproc
 5534              		@ args = 0, pretend = 0, frame = 0
 5535              		@ frame_needed = 1, uses_anonymous_args = 0
 5536 0000 80B5     		push	{r7, lr}
 5537              		.cfi_def_cfa_offset 8
 5538              		.cfi_offset 7, -8
 5539              		.cfi_offset 14, -4
 5540 0002 00AF     		add	r7, sp, #0
 5541              		.cfi_def_cfa_register 7
1400:ui.c          ****     if (!editMode) //normal behavior
 5542              		.loc 1 1400 0
 5543 0004 0E4B     		ldr	r3, .L258
 5544 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5545 0008 002B     		cmp	r3, #0
 5546 000a 13D1     		bne	.L253
1401:ui.c          ****     {
1402:ui.c          ****         controlsDisplayed = !controlsDisplayed;
 5547              		.loc 1 1402 0
 5548 000c 0D4B     		ldr	r3, .L258+4
 5549 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5550 0010 002B     		cmp	r3, #0
 5551 0012 0CBF     		ite	eq
 5552 0014 0123     		moveq	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 127


 5553 0016 0023     		movne	r3, #0
 5554 0018 DBB2     		uxtb	r3, r3
 5555 001a 1A46     		mov	r2, r3
 5556 001c 094B     		ldr	r3, .L258+4
 5557 001e 1A70     		strb	r2, [r3]
1403:ui.c          ****         if (controlsDisplayed)
 5558              		.loc 1 1403 0
 5559 0020 084B     		ldr	r3, .L258+4
 5560 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5561 0024 002B     		cmp	r3, #0
 5562 0026 02D0     		beq	.L254
1404:ui.c          ****         {
1405:ui.c          ****             displayCurrentControlNames();
 5563              		.loc 1 1405 0
 5564 0028 FFF7FEFF 		bl	displayCurrentControlNames
1406:ui.c          ****         }
1407:ui.c          ****         else
1408:ui.c          ****         {
1409:ui.c          ****             displayCurrentPresetNameAndCopedent();
1410:ui.c          ****         }
1411:ui.c          ****     }
1412:ui.c          ****     else
1413:ui.c          ****     {
1414:ui.c          ****         menuAction(Enter);
1415:ui.c          ****     }
1416:ui.c          **** }
 5565              		.loc 1 1416 0
 5566 002c 05E0     		b	.L257
 5567              	.L254:
1409:ui.c          ****         }
 5568              		.loc 1 1409 0
 5569 002e FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5570              		.loc 1 1416 0
 5571 0032 02E0     		b	.L257
 5572              	.L253:
1414:ui.c          ****     }
 5573              		.loc 1 1414 0
 5574 0034 0420     		movs	r0, #4
 5575 0036 FFF7FEFF 		bl	menuAction
 5576              	.L257:
 5577              		.loc 1 1416 0
 5578 003a 00BF     		nop
 5579 003c 80BD     		pop	{r7, pc}
 5580              	.L259:
 5581 003e 00BF     		.align	2
 5582              	.L258:
 5583 0040 00000000 		.word	editMode
 5584 0044 00000000 		.word	controlsDisplayed
 5585              		.cfi_endproc
 5586              	.LFE72:
 5587              		.size	enterPressed, .-enterPressed
 5588              		.section	.rodata
 5589              		.align	2
 5590              	.LC43:
 5591 02dc 43414C49 		.ascii	"CALIBRATION\000"
 5591      42524154 
 5591      494F4E00 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 128


 5592              		.align	2
 5593              	.LC44:
 5594 02e8 4D4F5645 		.ascii	"MOVE ALL PEDALS\000"
 5594      20414C4C 
 5594      20504544 
 5594      414C5300 
 5595              		.align	2
 5596              	.LC45:
 5597 02f8 414E4420 		.ascii	"AND LEVERS\000"
 5597      4C455645 
 5597      525300
 5598 0303 00       		.align	2
 5599              	.LC46:
 5600 0304 5448454E 		.ascii	"THEN PRESS ->\000"
 5600      20505245 
 5600      5353202D 
 5600      3E00
 5601              		.section	.text.enterLeverCalibrationMode,"ax",%progbits
 5602              		.align	2
 5603              		.global	enterLeverCalibrationMode
 5604              		.thumb
 5605              		.thumb_func
 5606              		.type	enterLeverCalibrationMode, %function
 5607              	enterLeverCalibrationMode:
 5608              	.LFB73:
1417:ui.c          **** 
1418:ui.c          **** void enterLeverCalibrationMode(void)
1419:ui.c          **** {
 5609              		.loc 1 1419 0
 5610              		.cfi_startproc
 5611              		@ args = 0, pretend = 0, frame = 8
 5612              		@ frame_needed = 1, uses_anonymous_args = 0
 5613 0000 80B5     		push	{r7, lr}
 5614              		.cfi_def_cfa_offset 8
 5615              		.cfi_offset 7, -8
 5616              		.cfi_offset 14, -4
 5617 0002 82B0     		sub	sp, sp, #8
 5618              		.cfi_def_cfa_offset 16
 5619 0004 00AF     		add	r7, sp, #0
 5620              		.cfi_def_cfa_register 7
1420:ui.c          ****     OLEDclear(128, 64);
 5621              		.loc 1 1420 0
 5622 0006 4021     		movs	r1, #64
 5623 0008 8020     		movs	r0, #128
 5624 000a FFF7FEFF 		bl	OLEDclear
1421:ui.c          ****     myGFX_setFont(2);
 5625              		.loc 1 1421 0
 5626 000e 0220     		movs	r0, #2
 5627 0010 FFF7FEFF 		bl	myGFX_setFont
1422:ui.c          ****     OLEDtextColor(0, 1);
 5628              		.loc 1 1422 0
 5629 0014 0121     		movs	r1, #1
 5630 0016 0020     		movs	r0, #0
 5631 0018 FFF7FEFF 		bl	OLEDtextColor
1423:ui.c          ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 5632              		.loc 1 1423 0
 5633 001c 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 129


 5634 001e 0122     		movs	r2, #1
 5635 0020 0B21     		movs	r1, #11
 5636 0022 1B48     		ldr	r0, .L263
 5637 0024 FFF7FEFF 		bl	OLEDwriteString
1424:ui.c          ****     OLEDwriteString("MOVE ALL PEDALS", 15, 1, SecondLine);
 5638              		.loc 1 1424 0
 5639 0028 0123     		movs	r3, #1
 5640 002a 0122     		movs	r2, #1
 5641 002c 0F21     		movs	r1, #15
 5642 002e 1948     		ldr	r0, .L263+4
 5643 0030 FFF7FEFF 		bl	OLEDwriteString
1425:ui.c          ****     OLEDwriteString("AND LEVERS", 10, 1, ThirdLine);
 5644              		.loc 1 1425 0
 5645 0034 0223     		movs	r3, #2
 5646 0036 0122     		movs	r2, #1
 5647 0038 0A21     		movs	r1, #10
 5648 003a 1748     		ldr	r0, .L263+8
 5649 003c FFF7FEFF 		bl	OLEDwriteString
1426:ui.c          ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 5650              		.loc 1 1426 0
 5651 0040 0323     		movs	r3, #3
 5652 0042 0122     		movs	r2, #1
 5653 0044 0F21     		movs	r1, #15
 5654 0046 1548     		ldr	r0, .L263+12
 5655 0048 FFF7FEFF 		bl	OLEDwriteString
1427:ui.c          ****     mainOLEDWaitingToSend = 1;
 5656              		.loc 1 1427 0
 5657 004c 144B     		ldr	r3, .L263+16
 5658 004e 0122     		movs	r2, #1
 5659 0050 1A70     		strb	r2, [r3]
1428:ui.c          ****     OLEDtextColor(1, 0);
 5660              		.loc 1 1428 0
 5661 0052 0021     		movs	r1, #0
 5662 0054 0120     		movs	r0, #1
 5663 0056 FFF7FEFF 		bl	OLEDtextColor
 5664              	.LBB20:
1429:ui.c          ****     //entering calibration mode, clear the pedals low and high arrays
1430:ui.c          ****     for (int i = 0; i < 10; i++)
 5665              		.loc 1 1430 0
 5666 005a 0023     		movs	r3, #0
 5667 005c 7B60     		str	r3, [r7, #4]
 5668 005e 0DE0     		b	.L261
 5669              	.L262:
1431:ui.c          ****     {
1432:ui.c          ****         pedals_low[i] = 4095;
 5670              		.loc 1 1432 0 discriminator 3
 5671 0060 104A     		ldr	r2, .L263+20
 5672 0062 7B68     		ldr	r3, [r7, #4]
 5673 0064 40F6FF71 		movw	r1, #4095
 5674 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1433:ui.c          ****         pedals_high[i] = 0;
 5675              		.loc 1 1433 0 discriminator 3
 5676 006c 0E4A     		ldr	r2, .L263+24
 5677 006e 7B68     		ldr	r3, [r7, #4]
 5678 0070 0021     		movs	r1, #0
 5679 0072 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1430:ui.c          ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 130


 5680              		.loc 1 1430 0 discriminator 3
 5681 0076 7B68     		ldr	r3, [r7, #4]
 5682 0078 0133     		adds	r3, r3, #1
 5683 007a 7B60     		str	r3, [r7, #4]
 5684              	.L261:
1430:ui.c          ****     {
 5685              		.loc 1 1430 0 is_stmt 0 discriminator 1
 5686 007c 7B68     		ldr	r3, [r7, #4]
 5687 007e 092B     		cmp	r3, #9
 5688 0080 EEDD     		ble	.L262
 5689              	.LBE20:
1434:ui.c          ****     }
1435:ui.c          ****     leverCalibrationMode = 1;
 5690              		.loc 1 1435 0 is_stmt 1
 5691 0082 0A4B     		ldr	r3, .L263+28
 5692 0084 0122     		movs	r2, #1
 5693 0086 1A70     		strb	r2, [r3]
1436:ui.c          **** }
 5694              		.loc 1 1436 0
 5695 0088 00BF     		nop
 5696 008a 0837     		adds	r7, r7, #8
 5697              		.cfi_def_cfa_offset 8
 5698 008c BD46     		mov	sp, r7
 5699              		.cfi_def_cfa_register 13
 5700              		@ sp needed
 5701 008e 80BD     		pop	{r7, pc}
 5702              	.L264:
 5703              		.align	2
 5704              	.L263:
 5705 0090 DC020000 		.word	.LC43
 5706 0094 E8020000 		.word	.LC44
 5707 0098 F8020000 		.word	.LC45
 5708 009c 04030000 		.word	.LC46
 5709 00a0 00000000 		.word	mainOLEDWaitingToSend
 5710 00a4 00000000 		.word	pedals_low
 5711 00a8 00000000 		.word	pedals_high
 5712 00ac 00000000 		.word	leverCalibrationMode
 5713              		.cfi_endproc
 5714              	.LFE73:
 5715              		.size	enterLeverCalibrationMode, .-enterLeverCalibrationMode
 5716              		.section	.text.exitLeverCalibrationMode,"ax",%progbits
 5717              		.align	2
 5718              		.global	exitLeverCalibrationMode
 5719              		.thumb
 5720              		.thumb_func
 5721              		.type	exitLeverCalibrationMode, %function
 5722              	exitLeverCalibrationMode:
 5723              	.LFB74:
1437:ui.c          **** 
1438:ui.c          **** void exitLeverCalibrationMode(void)
1439:ui.c          **** {
 5724              		.loc 1 1439 0
 5725              		.cfi_startproc
 5726              		@ args = 0, pretend = 0, frame = 16
 5727              		@ frame_needed = 1, uses_anonymous_args = 0
 5728 0000 80B5     		push	{r7, lr}
 5729              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 131


 5730              		.cfi_offset 7, -8
 5731              		.cfi_offset 14, -4
 5732 0002 84B0     		sub	sp, sp, #16
 5733              		.cfi_def_cfa_offset 24
 5734 0004 00AF     		add	r7, sp, #0
 5735              		.cfi_def_cfa_register 7
1440:ui.c          ****     leverCalibrationMode = 0;
 5736              		.loc 1 1440 0
 5737 0006 4E4B     		ldr	r3, .L274
 5738 0008 0022     		movs	r2, #0
 5739 000a 1A70     		strb	r2, [r3]
 5740              	.LBB21:
1441:ui.c          ****     //draw normal screen
1442:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 5741              		.loc 1 1442 0
 5742 000c 0023     		movs	r3, #0
 5743 000e FB60     		str	r3, [r7, #12]
 5744 0010 19E0     		b	.L266
 5745              	.L269:
1443:ui.c          ****     {
1444:ui.c          ****         //if you are closer to pedal high than pedal low, then switch high and low, the sensor is r
1445:ui.c          ****         if (angle[i] > (pedals_low[i]+20))
 5746              		.loc 1 1445 0
 5747 0012 4C4A     		ldr	r2, .L274+4
 5748 0014 FB68     		ldr	r3, [r7, #12]
 5749 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5750 001a 1946     		mov	r1, r3
 5751 001c 4A4A     		ldr	r2, .L274+8
 5752 001e FB68     		ldr	r3, [r7, #12]
 5753 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5754 0024 1433     		adds	r3, r3, #20
 5755 0026 9942     		cmp	r1, r3
 5756 0028 05DD     		ble	.L267
1446:ui.c          ****         {
1447:ui.c          ****             pedal_inverted[i] = 1;
 5757              		.loc 1 1447 0
 5758 002a 484A     		ldr	r2, .L274+12
 5759 002c FB68     		ldr	r3, [r7, #12]
 5760 002e 1344     		add	r3, r3, r2
 5761 0030 0122     		movs	r2, #1
 5762 0032 1A70     		strb	r2, [r3]
 5763 0034 04E0     		b	.L268
 5764              	.L267:
1448:ui.c          ****         }
1449:ui.c          ****         else
1450:ui.c          ****         {
1451:ui.c          ****             pedal_inverted[i] = 0;
 5765              		.loc 1 1451 0
 5766 0036 454A     		ldr	r2, .L274+12
 5767 0038 FB68     		ldr	r3, [r7, #12]
 5768 003a 1344     		add	r3, r3, r2
 5769 003c 0022     		movs	r2, #0
 5770 003e 1A70     		strb	r2, [r3]
 5771              	.L268:
1442:ui.c          ****     {
 5772              		.loc 1 1442 0 discriminator 2
 5773 0040 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 132


 5774 0042 0133     		adds	r3, r3, #1
 5775 0044 FB60     		str	r3, [r7, #12]
 5776              	.L266:
1442:ui.c          ****     {
 5777              		.loc 1 1442 0 is_stmt 0 discriminator 1
 5778 0046 FB68     		ldr	r3, [r7, #12]
 5779 0048 092B     		cmp	r3, #9
 5780 004a E2DD     		ble	.L269
 5781              	.LBE21:
1452:ui.c          ****         }
1453:ui.c          ****     }
1454:ui.c          ****     uint16_t pedal_inverted_byte = 0;
 5782              		.loc 1 1454 0 is_stmt 1
 5783 004c 0023     		movs	r3, #0
 5784 004e 7B81     		strh	r3, [r7, #10]	@ movhi
 5785              	.LBB22:
1455:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 5786              		.loc 1 1455 0
 5787 0050 0023     		movs	r3, #0
 5788 0052 7B60     		str	r3, [r7, #4]
 5789 0054 0EE0     		b	.L270
 5790              	.L271:
1456:ui.c          ****     {
1457:ui.c          ****         pedal_inverted_byte += pedal_inverted[i] << i;
 5791              		.loc 1 1457 0 discriminator 3
 5792 0056 3D4A     		ldr	r2, .L274+12
 5793 0058 7B68     		ldr	r3, [r7, #4]
 5794 005a 1344     		add	r3, r3, r2
 5795 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5796 005e 1A46     		mov	r2, r3
 5797 0060 7B68     		ldr	r3, [r7, #4]
 5798 0062 02FA03F3 		lsl	r3, r2, r3
 5799 0066 9AB2     		uxth	r2, r3
 5800 0068 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5801 006a 1344     		add	r3, r3, r2
 5802 006c 7B81     		strh	r3, [r7, #10]	@ movhi
1455:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 5803              		.loc 1 1455 0 discriminator 3
 5804 006e 7B68     		ldr	r3, [r7, #4]
 5805 0070 0133     		adds	r3, r3, #1
 5806 0072 7B60     		str	r3, [r7, #4]
 5807              	.L270:
1455:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 5808              		.loc 1 1455 0 is_stmt 0 discriminator 1
 5809 0074 7B68     		ldr	r3, [r7, #4]
 5810 0076 092B     		cmp	r3, #9
 5811 0078 EDDD     		ble	.L271
 5812              	.LBE22:
1458:ui.c          ****     }
1459:ui.c          ****     EEPROM_WriteByte(pedal_inverted_byte>>8, EEPROM_PEDAL_INVERTED_OFFSET);
 5813              		.loc 1 1459 0 is_stmt 1
 5814 007a 7B89     		ldrh	r3, [r7, #10]
 5815 007c 1B0A     		lsrs	r3, r3, #8
 5816 007e 9BB2     		uxth	r3, r3
 5817 0080 DBB2     		uxtb	r3, r3
 5818 0082 4FF4FC61 		mov	r1, #2016
 5819 0086 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 133


 5820 0088 FFF7FEFF 		bl	EEPROM_WriteByte
1460:ui.c          ****     EEPROM_WriteByte(pedal_inverted_byte& 255, EEPROM_PEDAL_INVERTED_OFFSET+1);
 5821              		.loc 1 1460 0
 5822 008c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5823 008e DBB2     		uxtb	r3, r3
 5824 0090 40F2E171 		movw	r1, #2017
 5825 0094 1846     		mov	r0, r3
 5826 0096 FFF7FEFF 		bl	EEPROM_WriteByte
1461:ui.c          ****     calculatePedalRatios();
 5827              		.loc 1 1461 0
 5828 009a FFF7FEFF 		bl	calculatePedalRatios
 5829              	.LBB23:
1462:ui.c          ****     //now need to store this in EEPROM.                
1463:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 5830              		.loc 1 1463 0
 5831 009e 0023     		movs	r3, #0
 5832 00a0 3B60     		str	r3, [r7]
 5833 00a2 45E0     		b	.L272
 5834              	.L273:
1464:ui.c          ****     {
1465:ui.c          ****          EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + (i*4));
 5835              		.loc 1 1465 0 discriminator 3
 5836 00a4 284A     		ldr	r2, .L274+8
 5837 00a6 3B68     		ldr	r3, [r7]
 5838 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5839 00ac 1B0A     		lsrs	r3, r3, #8
 5840 00ae 9BB2     		uxth	r3, r3
 5841 00b0 DAB2     		uxtb	r2, r3
 5842 00b2 3B68     		ldr	r3, [r7]
 5843 00b4 9BB2     		uxth	r3, r3
 5844 00b6 9B00     		lsls	r3, r3, #2
 5845 00b8 9BB2     		uxth	r3, r3
 5846 00ba 03F27E73 		addw	r3, r3, #1918
 5847 00be 9BB2     		uxth	r3, r3
 5848 00c0 1946     		mov	r1, r3
 5849 00c2 1046     		mov	r0, r2
 5850 00c4 FFF7FEFF 		bl	EEPROM_WriteByte
1466:ui.c          ****          EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 1));
 5851              		.loc 1 1466 0 discriminator 3
 5852 00c8 1F4A     		ldr	r2, .L274+8
 5853 00ca 3B68     		ldr	r3, [r7]
 5854 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5855 00d0 DAB2     		uxtb	r2, r3
 5856 00d2 3B68     		ldr	r3, [r7]
 5857 00d4 9BB2     		uxth	r3, r3
 5858 00d6 9B00     		lsls	r3, r3, #2
 5859 00d8 9BB2     		uxth	r3, r3
 5860 00da 03F27F73 		addw	r3, r3, #1919
 5861 00de 9BB2     		uxth	r3, r3
 5862 00e0 1946     		mov	r1, r3
 5863 00e2 1046     		mov	r0, r2
 5864 00e4 FFF7FEFF 		bl	EEPROM_WriteByte
1467:ui.c          ****          EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2));
 5865              		.loc 1 1467 0 discriminator 3
 5866 00e8 194A     		ldr	r2, .L274+16
 5867 00ea 3B68     		ldr	r3, [r7]
 5868 00ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 134


 5869 00f0 1B0A     		lsrs	r3, r3, #8
 5870 00f2 9BB2     		uxth	r3, r3
 5871 00f4 DAB2     		uxtb	r2, r3
 5872 00f6 3B68     		ldr	r3, [r7]
 5873 00f8 03F5F073 		add	r3, r3, #480
 5874 00fc 9BB2     		uxth	r3, r3
 5875 00fe 9B00     		lsls	r3, r3, #2
 5876 0100 9BB2     		uxth	r3, r3
 5877 0102 1946     		mov	r1, r3
 5878 0104 1046     		mov	r0, r2
 5879 0106 FFF7FEFF 		bl	EEPROM_WriteByte
1468:ui.c          ****          EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 3));
 5880              		.loc 1 1468 0 discriminator 3
 5881 010a 114A     		ldr	r2, .L274+16
 5882 010c 3B68     		ldr	r3, [r7]
 5883 010e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5884 0112 DAB2     		uxtb	r2, r3
 5885 0114 3B68     		ldr	r3, [r7]
 5886 0116 9BB2     		uxth	r3, r3
 5887 0118 9B00     		lsls	r3, r3, #2
 5888 011a 9BB2     		uxth	r3, r3
 5889 011c 03F28173 		addw	r3, r3, #1921
 5890 0120 9BB2     		uxth	r3, r3
 5891 0122 1946     		mov	r1, r3
 5892 0124 1046     		mov	r0, r2
 5893 0126 FFF7FEFF 		bl	EEPROM_WriteByte
1463:ui.c          ****     {
 5894              		.loc 1 1463 0 discriminator 3
 5895 012a 3B68     		ldr	r3, [r7]
 5896 012c 0133     		adds	r3, r3, #1
 5897 012e 3B60     		str	r3, [r7]
 5898              	.L272:
1463:ui.c          ****     {
 5899              		.loc 1 1463 0 is_stmt 0 discriminator 1
 5900 0130 3B68     		ldr	r3, [r7]
 5901 0132 092B     		cmp	r3, #9
 5902 0134 B6DD     		ble	.L273
 5903              	.LBE23:
1469:ui.c          ****     }
1470:ui.c          **** }
 5904              		.loc 1 1470 0 is_stmt 1
 5905 0136 00BF     		nop
 5906 0138 1037     		adds	r7, r7, #16
 5907              		.cfi_def_cfa_offset 8
 5908 013a BD46     		mov	sp, r7
 5909              		.cfi_def_cfa_register 13
 5910              		@ sp needed
 5911 013c 80BD     		pop	{r7, pc}
 5912              	.L275:
 5913 013e 00BF     		.align	2
 5914              	.L274:
 5915 0140 00000000 		.word	leverCalibrationMode
 5916 0144 00000000 		.word	angle
 5917 0148 00000000 		.word	pedals_low
 5918 014c 00000000 		.word	pedal_inverted
 5919 0150 00000000 		.word	pedals_high
 5920              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 135


 5921              	.LFE74:
 5922              		.size	exitLeverCalibrationMode, .-exitLeverCalibrationMode
 5923              		.section	.rodata
 5924 0312 0000     		.align	2
 5925              	.LC47:
 5926 0314 504C4143 		.ascii	"PLACE BAR AT \000"
 5926      45204241 
 5926      52204154 
 5926      2000
 5927 0322 0000     		.align	2
 5928              	.LC48:
 5929 0324 46524554 		.ascii	"FRET \000"
 5929      2000
 5930              		.section	.text.enterFretCalibrationMode,"ax",%progbits
 5931              		.align	2
 5932              		.global	enterFretCalibrationMode
 5933              		.thumb
 5934              		.thumb_func
 5935              		.type	enterFretCalibrationMode, %function
 5936              	enterFretCalibrationMode:
 5937              	.LFB75:
1471:ui.c          **** 
1472:ui.c          **** 
1473:ui.c          **** void enterFretCalibrationMode(void)
1474:ui.c          **** {
 5938              		.loc 1 1474 0
 5939              		.cfi_startproc
 5940              		@ args = 0, pretend = 0, frame = 0
 5941              		@ frame_needed = 1, uses_anonymous_args = 0
 5942 0000 80B5     		push	{r7, lr}
 5943              		.cfi_def_cfa_offset 8
 5944              		.cfi_offset 7, -8
 5945              		.cfi_offset 14, -4
 5946 0002 00AF     		add	r7, sp, #0
 5947              		.cfi_def_cfa_register 7
1475:ui.c          ****     OLEDclear(128, 64);
 5948              		.loc 1 1475 0
 5949 0004 4021     		movs	r1, #64
 5950 0006 8020     		movs	r0, #128
 5951 0008 FFF7FEFF 		bl	OLEDclear
1476:ui.c          ****     myGFX_setFont(2);
 5952              		.loc 1 1476 0
 5953 000c 0220     		movs	r0, #2
 5954 000e FFF7FEFF 		bl	myGFX_setFont
1477:ui.c          ****     OLEDtextColor(0, 1);
 5955              		.loc 1 1477 0
 5956 0012 0121     		movs	r1, #1
 5957 0014 0020     		movs	r0, #0
 5958 0016 FFF7FEFF 		bl	OLEDtextColor
1478:ui.c          ****     fretToCalibrate = 0;
 5959              		.loc 1 1478 0
 5960 001a 194B     		ldr	r3, .L277
 5961 001c 0022     		movs	r2, #0
 5962 001e 1A70     		strb	r2, [r3]
1479:ui.c          ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 5963              		.loc 1 1479 0
 5964 0020 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 136


 5965 0022 0122     		movs	r2, #1
 5966 0024 0B21     		movs	r1, #11
 5967 0026 1748     		ldr	r0, .L277+4
 5968 0028 FFF7FEFF 		bl	OLEDwriteString
1480:ui.c          ****     OLEDwriteString("PLACE BAR AT ", 15, 1, SecondLine);
 5969              		.loc 1 1480 0
 5970 002c 0123     		movs	r3, #1
 5971 002e 0122     		movs	r2, #1
 5972 0030 0F21     		movs	r1, #15
 5973 0032 1548     		ldr	r0, .L277+8
 5974 0034 FFF7FEFF 		bl	OLEDwriteString
1481:ui.c          ****     OLEDwriteString("FRET ", 5, 1, ThirdLine);
 5975              		.loc 1 1481 0
 5976 0038 0223     		movs	r3, #2
 5977 003a 0122     		movs	r2, #1
 5978 003c 0521     		movs	r1, #5
 5979 003e 1348     		ldr	r0, .L277+12
 5980 0040 FFF7FEFF 		bl	OLEDwriteString
1482:ui.c          ****     OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 5981              		.loc 1 1482 0
 5982 0044 0E4B     		ldr	r3, .L277
 5983 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5984 0048 1A46     		mov	r2, r3
 5985 004a 114B     		ldr	r3, .L277+16
 5986 004c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 5987 004e 1846     		mov	r0, r3
 5988 0050 0223     		movs	r3, #2
 5989 0052 2822     		movs	r2, #40
 5990 0054 0221     		movs	r1, #2
 5991 0056 FFF7FEFF 		bl	OLEDwriteInt
1483:ui.c          ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 5992              		.loc 1 1483 0
 5993 005a 0323     		movs	r3, #3
 5994 005c 0122     		movs	r2, #1
 5995 005e 0F21     		movs	r1, #15
 5996 0060 0C48     		ldr	r0, .L277+20
 5997 0062 FFF7FEFF 		bl	OLEDwriteString
1484:ui.c          ****     mainOLEDWaitingToSend = 1;
 5998              		.loc 1 1484 0
 5999 0066 0C4B     		ldr	r3, .L277+24
 6000 0068 0122     		movs	r2, #1
 6001 006a 1A70     		strb	r2, [r3]
1485:ui.c          ****     OLEDtextColor(1, 0);
 6002              		.loc 1 1485 0
 6003 006c 0021     		movs	r1, #0
 6004 006e 0120     		movs	r0, #1
 6005 0070 FFF7FEFF 		bl	OLEDtextColor
1486:ui.c          ****     fretCalibrationMode = 1;
 6006              		.loc 1 1486 0
 6007 0074 094B     		ldr	r3, .L277+28
 6008 0076 0122     		movs	r2, #1
 6009 0078 1A70     		strb	r2, [r3]
1487:ui.c          **** }
 6010              		.loc 1 1487 0
 6011 007a 00BF     		nop
 6012 007c 80BD     		pop	{r7, pc}
 6013              	.L278:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 137


 6014 007e 00BF     		.align	2
 6015              	.L277:
 6016 0080 00000000 		.word	fretToCalibrate
 6017 0084 DC020000 		.word	.LC43
 6018 0088 14030000 		.word	.LC47
 6019 008c 24030000 		.word	.LC48
 6020 0090 00000000 		.word	whichFretArray
 6021 0094 04030000 		.word	.LC46
 6022 0098 00000000 		.word	mainOLEDWaitingToSend
 6023 009c 00000000 		.word	fretCalibrationMode
 6024              		.cfi_endproc
 6025              	.LFE75:
 6026              		.size	enterFretCalibrationMode, .-enterFretCalibrationMode
 6027              		.section	.text.exitFretCalibrationMode,"ax",%progbits
 6028              		.align	2
 6029              		.global	exitFretCalibrationMode
 6030              		.thumb
 6031              		.thumb_func
 6032              		.type	exitFretCalibrationMode, %function
 6033              	exitFretCalibrationMode:
 6034              	.LFB76:
1488:ui.c          **** 
1489:ui.c          **** void exitFretCalibrationMode(void)
1490:ui.c          **** {
 6035              		.loc 1 1490 0
 6036              		.cfi_startproc
 6037              		@ args = 0, pretend = 0, frame = 8
 6038              		@ frame_needed = 1, uses_anonymous_args = 0
 6039 0000 80B5     		push	{r7, lr}
 6040              		.cfi_def_cfa_offset 8
 6041              		.cfi_offset 7, -8
 6042              		.cfi_offset 14, -4
 6043 0002 82B0     		sub	sp, sp, #8
 6044              		.cfi_def_cfa_offset 16
 6045 0004 00AF     		add	r7, sp, #0
 6046              		.cfi_def_cfa_register 7
1491:ui.c          ****     fretCalibrationMode = 0;
 6047              		.loc 1 1491 0
 6048 0006 2B4B     		ldr	r3, .L282
 6049 0008 0022     		movs	r2, #0
 6050 000a 1A70     		strb	r2, [r3]
 6051              	.LBB24:
1492:ui.c          ****     //now need to store this in EEPROM.                
1493:ui.c          ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 6052              		.loc 1 1493 0
 6053 000c 0023     		movs	r3, #0
 6054 000e 7B60     		str	r3, [r7, #4]
 6055 0010 47E0     		b	.L280
 6056              	.L281:
1494:ui.c          ****     {
1495:ui.c          ****          EEPROM_WriteByte((fretMeasurements[0][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + (i*4));
 6057              		.loc 1 1495 0 discriminator 3
 6058 0012 294A     		ldr	r2, .L282+4
 6059 0014 7B68     		ldr	r3, [r7, #4]
 6060 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6061 001a 1B0A     		lsrs	r3, r3, #8
 6062 001c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 138


 6063 001e DAB2     		uxtb	r2, r3
 6064 0020 7B68     		ldr	r3, [r7, #4]
 6065 0022 9BB2     		uxth	r3, r3
 6066 0024 9B00     		lsls	r3, r3, #2
 6067 0026 9BB2     		uxth	r3, r3
 6068 0028 03F2A673 		addw	r3, r3, #1958
 6069 002c 9BB2     		uxth	r3, r3
 6070 002e 1946     		mov	r1, r3
 6071 0030 1046     		mov	r0, r2
 6072 0032 FFF7FEFF 		bl	EEPROM_WriteByte
1496:ui.c          ****          EEPROM_WriteByte((fretMeasurements[0][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 6073              		.loc 1 1496 0 discriminator 3
 6074 0036 204A     		ldr	r2, .L282+4
 6075 0038 7B68     		ldr	r3, [r7, #4]
 6076 003a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6077 003e DAB2     		uxtb	r2, r3
 6078 0040 7B68     		ldr	r3, [r7, #4]
 6079 0042 9BB2     		uxth	r3, r3
 6080 0044 9B00     		lsls	r3, r3, #2
 6081 0046 9BB2     		uxth	r3, r3
 6082 0048 03F2A773 		addw	r3, r3, #1959
 6083 004c 9BB2     		uxth	r3, r3
 6084 004e 1946     		mov	r1, r3
 6085 0050 1046     		mov	r0, r2
 6086 0052 FFF7FEFF 		bl	EEPROM_WriteByte
1497:ui.c          ****          EEPROM_WriteByte((fretMeasurements[1][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 
 6087              		.loc 1 1497 0 discriminator 3
 6088 0056 184A     		ldr	r2, .L282+4
 6089 0058 7B68     		ldr	r3, [r7, #4]
 6090 005a 0C33     		adds	r3, r3, #12
 6091 005c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6092 0060 1B0A     		lsrs	r3, r3, #8
 6093 0062 9BB2     		uxth	r3, r3
 6094 0064 DAB2     		uxtb	r2, r3
 6095 0066 7B68     		ldr	r3, [r7, #4]
 6096 0068 03F5F573 		add	r3, r3, #490
 6097 006c 9BB2     		uxth	r3, r3
 6098 006e 9B00     		lsls	r3, r3, #2
 6099 0070 9BB2     		uxth	r3, r3
 6100 0072 1946     		mov	r1, r3
 6101 0074 1046     		mov	r0, r2
 6102 0076 FFF7FEFF 		bl	EEPROM_WriteByte
1498:ui.c          ****          EEPROM_WriteByte((fretMeasurements[1][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 6103              		.loc 1 1498 0 discriminator 3
 6104 007a 0F4A     		ldr	r2, .L282+4
 6105 007c 7B68     		ldr	r3, [r7, #4]
 6106 007e 0C33     		adds	r3, r3, #12
 6107 0080 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6108 0084 DAB2     		uxtb	r2, r3
 6109 0086 7B68     		ldr	r3, [r7, #4]
 6110 0088 9BB2     		uxth	r3, r3
 6111 008a 9B00     		lsls	r3, r3, #2
 6112 008c 9BB2     		uxth	r3, r3
 6113 008e 03F2A973 		addw	r3, r3, #1961
 6114 0092 9BB2     		uxth	r3, r3
 6115 0094 1946     		mov	r1, r3
 6116 0096 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 139


 6117 0098 FFF7FEFF 		bl	EEPROM_WriteByte
1493:ui.c          ****     {
 6118              		.loc 1 1493 0 discriminator 3
 6119 009c 7B68     		ldr	r3, [r7, #4]
 6120 009e 0133     		adds	r3, r3, #1
 6121 00a0 7B60     		str	r3, [r7, #4]
 6122              	.L280:
1493:ui.c          ****     {
 6123              		.loc 1 1493 0 is_stmt 0 discriminator 1
 6124 00a2 7B68     		ldr	r3, [r7, #4]
 6125 00a4 0B2B     		cmp	r3, #11
 6126 00a6 B4DD     		ble	.L281
 6127              	.LBE24:
1499:ui.c          ****     }
1500:ui.c          ****     exitEditModeMenu();
 6128              		.loc 1 1500 0 is_stmt 1
 6129 00a8 FFF7FEFF 		bl	exitEditModeMenu
1501:ui.c          **** 
1502:ui.c          **** }
 6130              		.loc 1 1502 0
 6131 00ac 00BF     		nop
 6132 00ae 0837     		adds	r7, r7, #8
 6133              		.cfi_def_cfa_offset 8
 6134 00b0 BD46     		mov	sp, r7
 6135              		.cfi_def_cfa_register 13
 6136              		@ sp needed
 6137 00b2 80BD     		pop	{r7, pc}
 6138              	.L283:
 6139              		.align	2
 6140              	.L282:
 6141 00b4 00000000 		.word	fretCalibrationMode
 6142 00b8 00000000 		.word	fretMeasurements
 6143              		.cfi_endproc
 6144              	.LFE76:
 6145              		.size	exitFretCalibrationMode, .-exitFretCalibrationMode
 6146              		.section	.text.exitPresetStoreMenu,"ax",%progbits
 6147              		.align	2
 6148              		.global	exitPresetStoreMenu
 6149              		.thumb
 6150              		.thumb_func
 6151              		.type	exitPresetStoreMenu, %function
 6152              	exitPresetStoreMenu:
 6153              	.LFB77:
1503:ui.c          **** 
1504:ui.c          **** void exitPresetStoreMenu(void)
1505:ui.c          **** {
 6154              		.loc 1 1505 0
 6155              		.cfi_startproc
 6156              		@ args = 0, pretend = 0, frame = 0
 6157              		@ frame_needed = 1, uses_anonymous_args = 0
 6158 0000 80B5     		push	{r7, lr}
 6159              		.cfi_def_cfa_offset 8
 6160              		.cfi_offset 7, -8
 6161              		.cfi_offset 14, -4
 6162 0002 00AF     		add	r7, sp, #0
 6163              		.cfi_def_cfa_register 7
1506:ui.c          ****     presetStoreStage = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 140


 6164              		.loc 1 1506 0
 6165 0004 044B     		ldr	r3, .L285
 6166 0006 0022     		movs	r2, #0
 6167 0008 1A70     		strb	r2, [r3]
1507:ui.c          ****     sendLocalPresetStoreCommand = 1;
 6168              		.loc 1 1507 0
 6169 000a 044B     		ldr	r3, .L285+4
 6170 000c 0122     		movs	r2, #1
 6171 000e 1A70     		strb	r2, [r3]
1508:ui.c          ****    // patchNum = presetNumberToStore;
1509:ui.c          ****     exitEditModeMenu();
 6172              		.loc 1 1509 0
 6173 0010 FFF7FEFF 		bl	exitEditModeMenu
1510:ui.c          **** }
 6174              		.loc 1 1510 0
 6175 0014 00BF     		nop
 6176 0016 80BD     		pop	{r7, pc}
 6177              	.L286:
 6178              		.align	2
 6179              	.L285:
 6180 0018 00000000 		.word	presetStoreStage
 6181 001c 00000000 		.word	sendLocalPresetStoreCommand
 6182              		.cfi_endproc
 6183              	.LFE77:
 6184              		.size	exitPresetStoreMenu, .-exitPresetStoreMenu
 6185              		.section	.rodata
 6186 032a 0000     		.align	2
 6187              	.LC49:
 6188 032c 2000     		.ascii	" \000"
 6189              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 6190              		.align	2
 6191              		.global	displayCurrentPresetNameAndCopedent
 6192              		.thumb
 6193              		.thumb_func
 6194              		.type	displayCurrentPresetNameAndCopedent, %function
 6195              	displayCurrentPresetNameAndCopedent:
 6196              	.LFB78:
1511:ui.c          **** 
1512:ui.c          **** void displayCurrentPresetNameAndCopedent(void)
1513:ui.c          **** {
 6197              		.loc 1 1513 0
 6198              		.cfi_startproc
 6199              		@ args = 0, pretend = 0, frame = 8
 6200              		@ frame_needed = 1, uses_anonymous_args = 0
 6201 0000 90B5     		push	{r4, r7, lr}
 6202              		.cfi_def_cfa_offset 12
 6203              		.cfi_offset 4, -12
 6204              		.cfi_offset 7, -8
 6205              		.cfi_offset 14, -4
 6206 0002 85B0     		sub	sp, sp, #20
 6207              		.cfi_def_cfa_offset 32
 6208 0004 02AF     		add	r7, sp, #8
 6209              		.cfi_def_cfa 7, 24
1514:ui.c          ****     int macroCheck = 0;
 6210              		.loc 1 1514 0
 6211 0006 0023     		movs	r3, #0
 6212 0008 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 141


 6213              	.LBB25:
1515:ui.c          ****     for (int i = 0; i < NUM_MACROS*NUM_MACRO_PAGES; i++)
 6214              		.loc 1 1515 0
 6215 000a 0023     		movs	r3, #0
 6216 000c 3B60     		str	r3, [r7]
 6217 000e 15E0     		b	.L288
 6218              	.L290:
1516:ui.c          ****     {
1517:ui.c          ****         if (macroNamesArray[patchNum][i][0] == 255)
 6219              		.loc 1 1517 0
 6220 0010 5D4B     		ldr	r3, .L295
 6221 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6222 0014 1846     		mov	r0, r3
 6223 0016 5D49     		ldr	r1, .L295+4
 6224 0018 3B68     		ldr	r3, [r7]
 6225 001a 1A46     		mov	r2, r3
 6226 001c D200     		lsls	r2, r2, #3
 6227 001e 1A44     		add	r2, r2, r3
 6228 0020 0346     		mov	r3, r0
 6229 0022 DB00     		lsls	r3, r3, #3
 6230 0024 0344     		add	r3, r3, r0
 6231 0026 1B01     		lsls	r3, r3, #4
 6232 0028 1344     		add	r3, r3, r2
 6233 002a 0B44     		add	r3, r3, r1
 6234 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6235 002e FF2B     		cmp	r3, #255
 6236 0030 01D1     		bne	.L289
1518:ui.c          ****         {
1519:ui.c          ****             macroCheck = 1;
 6237              		.loc 1 1519 0
 6238 0032 0123     		movs	r3, #1
 6239 0034 7B60     		str	r3, [r7, #4]
 6240              	.L289:
1515:ui.c          ****     {
 6241              		.loc 1 1515 0 discriminator 2
 6242 0036 3B68     		ldr	r3, [r7]
 6243 0038 0133     		adds	r3, r3, #1
 6244 003a 3B60     		str	r3, [r7]
 6245              	.L288:
1515:ui.c          ****     {
 6246              		.loc 1 1515 0 is_stmt 0 discriminator 1
 6247 003c 3B68     		ldr	r3, [r7]
 6248 003e 0F2B     		cmp	r3, #15
 6249 0040 E6DD     		ble	.L290
 6250              	.LBE25:
1520:ui.c          ****         }  
1521:ui.c          ****     }
1522:ui.c          ****     
1523:ui.c          ****     if (macroCheck == 0) //don't display if the name data still hasn't been retrieved by the SPI bu
 6251              		.loc 1 1523 0 is_stmt 1
 6252 0042 7B68     		ldr	r3, [r7, #4]
 6253 0044 002B     		cmp	r3, #0
 6254 0046 40F09780 		bne	.L291
1524:ui.c          ****     {
1525:ui.c          ****         OLEDclear(128, 64);
 6255              		.loc 1 1525 0
 6256 004a 4021     		movs	r1, #64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 142


 6257 004c 8020     		movs	r0, #128
 6258 004e FFF7FEFF 		bl	OLEDclear
1526:ui.c          ****         OLEDtextColor(1, 0);
 6259              		.loc 1 1526 0
 6260 0052 0021     		movs	r1, #0
 6261 0054 0120     		movs	r0, #1
 6262 0056 FFF7FEFF 		bl	OLEDtextColor
1527:ui.c          ****         myGFX_setFont(0);
 6263              		.loc 1 1527 0
 6264 005a 0020     		movs	r0, #0
 6265 005c FFF7FEFF 		bl	myGFX_setFont
1528:ui.c          ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 6266              		.loc 1 1528 0
 6267 0060 494B     		ldr	r3, .L295
 6268 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6269 0064 1846     		mov	r0, r3
 6270 0066 0023     		movs	r3, #0
 6271 0068 0022     		movs	r2, #0
 6272 006a 0221     		movs	r1, #2
 6273 006c FFF7FEFF 		bl	OLEDwriteInt
1529:ui.c          ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1530:ui.c          ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], PRESET_NAME_CLIPPED_LENGTH, 0, Seco
 6274              		.loc 1 1530 0
 6275 0070 454B     		ldr	r3, .L295
 6276 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6277 0074 1A46     		mov	r2, r3
 6278 0076 1346     		mov	r3, r2
 6279 0078 DB00     		lsls	r3, r3, #3
 6280 007a 9B1A     		subs	r3, r3, r2
 6281 007c 5B00     		lsls	r3, r3, #1
 6282 007e 444A     		ldr	r2, .L295+8
 6283 0080 9818     		adds	r0, r3, r2
 6284 0082 0123     		movs	r3, #1
 6285 0084 0022     		movs	r2, #0
 6286 0086 0C21     		movs	r1, #12
 6287 0088 FFF7FEFF 		bl	OLEDwriteString
1531:ui.c          ****         GFXwriteFastHLine(&theGFX, 0, 40, 128, 1);
 6288              		.loc 1 1531 0
 6289 008c 0123     		movs	r3, #1
 6290 008e 0093     		str	r3, [sp]
 6291 0090 8023     		movs	r3, #128
 6292 0092 2822     		movs	r2, #40
 6293 0094 0021     		movs	r1, #0
 6294 0096 3F48     		ldr	r0, .L295+12
 6295 0098 FFF7FEFF 		bl	GFXwriteFastHLine
1532:ui.c          ****         OLEDwriteInt(currentCopedent , 1, 0,FourthLine);
 6296              		.loc 1 1532 0
 6297 009c 3E4B     		ldr	r3, .L295+16
 6298 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6299 00a0 1846     		mov	r0, r3
 6300 00a2 0323     		movs	r3, #3
 6301 00a4 0022     		movs	r2, #0
 6302 00a6 0121     		movs	r1, #1
 6303 00a8 FFF7FEFF 		bl	OLEDwriteInt
1533:ui.c          ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 6304              		.loc 1 1533 0
 6305 00ac FFF7FEFF 		bl	OLEDgetCursor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 143


 6306 00b0 0246     		mov	r2, r0
 6307 00b2 0323     		movs	r3, #3
 6308 00b4 0121     		movs	r1, #1
 6309 00b6 3948     		ldr	r0, .L295+20
 6310 00b8 FFF7FEFF 		bl	OLEDwriteString
1534:ui.c          ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 6311              		.loc 1 1534 0
 6312 00bc 364B     		ldr	r3, .L295+16
 6313 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6314 00c0 1A46     		mov	r2, r3
 6315 00c2 1346     		mov	r3, r2
 6316 00c4 9B00     		lsls	r3, r3, #2
 6317 00c6 1344     		add	r3, r3, r2
 6318 00c8 5B00     		lsls	r3, r3, #1
 6319 00ca 354A     		ldr	r2, .L295+24
 6320 00cc 9C18     		adds	r4, r3, r2
 6321 00ce FFF7FEFF 		bl	OLEDgetCursor
 6322 00d2 0246     		mov	r2, r0
 6323 00d4 0323     		movs	r3, #3
 6324 00d6 0A21     		movs	r1, #10
 6325 00d8 2046     		mov	r0, r4
 6326 00da FFF7FEFF 		bl	OLEDwriteString
1535:ui.c          ****         mainOLEDWaitingToSend = 1;
 6327              		.loc 1 1535 0
 6328 00de 314B     		ldr	r3, .L295+28
 6329 00e0 0122     		movs	r2, #1
 6330 00e2 1A70     		strb	r2, [r3]
1536:ui.c          ****         presetAlreadyDisplayed[patchNum] = 1;
 6331              		.loc 1 1536 0
 6332 00e4 284B     		ldr	r3, .L295
 6333 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6334 00e8 1A46     		mov	r2, r3
 6335 00ea 2F4B     		ldr	r3, .L295+32
 6336 00ec 0121     		movs	r1, #1
 6337 00ee 9954     		strb	r1, [r3, r2]
1537:ui.c          ****         //and update the macro OLED screens
1538:ui.c          ****         whichMacro = 0;
 6338              		.loc 1 1538 0
 6339 00f0 2E4B     		ldr	r3, .L295+36
 6340 00f2 0022     		movs	r2, #0
 6341 00f4 1A70     		strb	r2, [r3]
1539:ui.c          ****         macroOLEDWaitingToSend = 1;
 6342              		.loc 1 1539 0
 6343 00f6 2E4B     		ldr	r3, .L295+40
 6344 00f8 0122     		movs	r2, #1
 6345 00fa 1A70     		strb	r2, [r3]
1540:ui.c          ****         volumeWaitingToSend = 1;
 6346              		.loc 1 1540 0
 6347 00fc 2D4B     		ldr	r3, .L295+44
 6348 00fe 0122     		movs	r2, #1
 6349 0100 1A70     		strb	r2, [r3]
1541:ui.c          ****         
1542:ui.c          ****         if ((macroNamesArray[patchNum][8][0] == 32) || (macroNamesArray[patchNum][8][0] == 0))
 6350              		.loc 1 1542 0
 6351 0102 214B     		ldr	r3, .L295
 6352 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6353 0106 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 144


 6354 0108 204A     		ldr	r2, .L295+4
 6355 010a 0B46     		mov	r3, r1
 6356 010c DB00     		lsls	r3, r3, #3
 6357 010e 0B44     		add	r3, r3, r1
 6358 0110 1B01     		lsls	r3, r3, #4
 6359 0112 1344     		add	r3, r3, r2
 6360 0114 4833     		adds	r3, r3, #72
 6361 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6362 0118 202B     		cmp	r3, #32
 6363 011a 0CD0     		beq	.L292
 6364              		.loc 1 1542 0 is_stmt 0 discriminator 1
 6365 011c 1A4B     		ldr	r3, .L295
 6366 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6367 0120 1946     		mov	r1, r3
 6368 0122 1A4A     		ldr	r2, .L295+4
 6369 0124 0B46     		mov	r3, r1
 6370 0126 DB00     		lsls	r3, r3, #3
 6371 0128 0B44     		add	r3, r3, r1
 6372 012a 1B01     		lsls	r3, r3, #4
 6373 012c 1344     		add	r3, r3, r2
 6374 012e 4833     		adds	r3, r3, #72
 6375 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6376 0132 002B     		cmp	r3, #0
 6377 0134 0CD1     		bne	.L293
 6378              	.L292:
1543:ui.c          ****         {
1544:ui.c          ****             knobPanelLightActive = 0;
 6379              		.loc 1 1544 0 is_stmt 1
 6380 0136 204B     		ldr	r3, .L295+48
 6381 0138 0022     		movs	r2, #0
 6382 013a 1A70     		strb	r2, [r3]
1545:ui.c          ****             knobPanelLight1_Write(0);
 6383              		.loc 1 1545 0
 6384 013c 0020     		movs	r0, #0
 6385 013e FFF7FEFF 		bl	knobPanelLight1_Write
1546:ui.c          ****             knobPanelLight2_Write(0);
 6386              		.loc 1 1546 0
 6387 0142 0020     		movs	r0, #0
 6388 0144 FFF7FEFF 		bl	knobPanelLight2_Write
1547:ui.c          ****             whichMacroPageIsActive = 0;
 6389              		.loc 1 1547 0
 6390 0148 1C4B     		ldr	r3, .L295+52
 6391 014a 0022     		movs	r2, #0
 6392 014c 1A70     		strb	r2, [r3]
 6393 014e 13E0     		b	.L291
 6394              	.L293:
1548:ui.c          ****         }  
1549:ui.c          ****         else
1550:ui.c          ****         {
1551:ui.c          ****             knobPanelLightActive = 1;
 6395              		.loc 1 1551 0
 6396 0150 194B     		ldr	r3, .L295+48
 6397 0152 0122     		movs	r2, #1
 6398 0154 1A70     		strb	r2, [r3]
1552:ui.c          ****             if (whichMacroPageIsActive == 0)
 6399              		.loc 1 1552 0
 6400 0156 194B     		ldr	r3, .L295+52
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 145


 6401 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6402 015a 002B     		cmp	r3, #0
 6403 015c 06D1     		bne	.L294
1553:ui.c          ****             {
1554:ui.c          ****                 knobPanelLight1_Write(1);
 6404              		.loc 1 1554 0
 6405 015e 0120     		movs	r0, #1
 6406 0160 FFF7FEFF 		bl	knobPanelLight1_Write
1555:ui.c          ****                 knobPanelLight2_Write(0);
 6407              		.loc 1 1555 0
 6408 0164 0020     		movs	r0, #0
 6409 0166 FFF7FEFF 		bl	knobPanelLight2_Write
 6410 016a 05E0     		b	.L291
 6411              	.L294:
1556:ui.c          ****             }
1557:ui.c          ****             else
1558:ui.c          ****             {
1559:ui.c          ****                 knobPanelLight1_Write(0);
 6412              		.loc 1 1559 0
 6413 016c 0020     		movs	r0, #0
 6414 016e FFF7FEFF 		bl	knobPanelLight1_Write
1560:ui.c          ****                 knobPanelLight2_Write(1);
 6415              		.loc 1 1560 0
 6416 0172 0120     		movs	r0, #1
 6417 0174 FFF7FEFF 		bl	knobPanelLight2_Write
 6418              	.L291:
1561:ui.c          ****             }
1562:ui.c          ****         }
1563:ui.c          ****     }
1564:ui.c          ****     controlsDisplayed = 0;
 6419              		.loc 1 1564 0
 6420 0178 114B     		ldr	r3, .L295+56
 6421 017a 0022     		movs	r2, #0
 6422 017c 1A70     		strb	r2, [r3]
1565:ui.c          **** }
 6423              		.loc 1 1565 0
 6424 017e 00BF     		nop
 6425 0180 0C37     		adds	r7, r7, #12
 6426              		.cfi_def_cfa_offset 12
 6427 0182 BD46     		mov	sp, r7
 6428              		.cfi_def_cfa_register 13
 6429              		@ sp needed
 6430 0184 90BD     		pop	{r4, r7, pc}
 6431              	.L296:
 6432 0186 00BF     		.align	2
 6433              	.L295:
 6434 0188 00000000 		.word	patchNum
 6435 018c 00000000 		.word	macroNamesArray
 6436 0190 00000000 		.word	presetNamesArray
 6437 0194 00000000 		.word	theGFX
 6438 0198 00000000 		.word	currentCopedent
 6439 019c 2C030000 		.word	.LC49
 6440 01a0 00000000 		.word	copedentNamesArray
 6441 01a4 00000000 		.word	mainOLEDWaitingToSend
 6442 01a8 00000000 		.word	presetAlreadyDisplayed
 6443 01ac 00000000 		.word	whichMacro
 6444 01b0 00000000 		.word	macroOLEDWaitingToSend
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 146


 6445 01b4 00000000 		.word	volumeWaitingToSend
 6446 01b8 00000000 		.word	knobPanelLightActive
 6447 01bc 00000000 		.word	whichMacroPageIsActive
 6448 01c0 00000000 		.word	controlsDisplayed
 6449              		.cfi_endproc
 6450              	.LFE78:
 6451              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 6452              		.section	.rodata
 6453 032e 0000     		.align	2
 6454              	.LC50:
 6455 0330 413A2000 		.ascii	"A: \000"
 6456              		.align	2
 6457              	.LC51:
 6458 0334 423A2000 		.ascii	"B: \000"
 6459              		.align	2
 6460              	.LC52:
 6461 0338 583A2000 		.ascii	"X: \000"
 6462              		.align	2
 6463              	.LC53:
 6464 033c 593A2000 		.ascii	"Y: \000"
 6465              		.section	.text.displayCurrentControlNames,"ax",%progbits
 6466              		.align	2
 6467              		.global	displayCurrentControlNames
 6468              		.thumb
 6469              		.thumb_func
 6470              		.type	displayCurrentControlNames, %function
 6471              	displayCurrentControlNames:
 6472              	.LFB79:
1566:ui.c          **** 
1567:ui.c          **** void displayCurrentControlNames(void)
1568:ui.c          **** {
 6473              		.loc 1 1568 0
 6474              		.cfi_startproc
 6475              		@ args = 0, pretend = 0, frame = 8
 6476              		@ frame_needed = 1, uses_anonymous_args = 0
 6477 0000 90B5     		push	{r4, r7, lr}
 6478              		.cfi_def_cfa_offset 12
 6479              		.cfi_offset 4, -12
 6480              		.cfi_offset 7, -8
 6481              		.cfi_offset 14, -4
 6482 0002 83B0     		sub	sp, sp, #12
 6483              		.cfi_def_cfa_offset 24
 6484 0004 00AF     		add	r7, sp, #0
 6485              		.cfi_def_cfa_register 7
1569:ui.c          ****     int controlCheck = 0;
 6486              		.loc 1 1569 0
 6487 0006 0023     		movs	r3, #0
 6488 0008 7B60     		str	r3, [r7, #4]
 6489              	.LBB26:
1570:ui.c          ****     for (int i = 0; i < NUM_CONTROLS; i++)
 6490              		.loc 1 1570 0
 6491 000a 0023     		movs	r3, #0
 6492 000c 3B60     		str	r3, [r7]
 6493 000e 17E0     		b	.L298
 6494              	.L300:
1571:ui.c          ****     {
1572:ui.c          ****         if (controlNamesArray[patchNum][i][0] == 255)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 147


 6495              		.loc 1 1572 0
 6496 0010 494B     		ldr	r3, .L303
 6497 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6498 0014 1846     		mov	r0, r3
 6499 0016 4949     		ldr	r1, .L303+4
 6500 0018 3B68     		ldr	r3, [r7]
 6501 001a 1A46     		mov	r2, r3
 6502 001c 9200     		lsls	r2, r2, #2
 6503 001e 1A44     		add	r2, r2, r3
 6504 0020 5300     		lsls	r3, r2, #1
 6505 0022 1A46     		mov	r2, r3
 6506 0024 0346     		mov	r3, r0
 6507 0026 9B00     		lsls	r3, r3, #2
 6508 0028 0344     		add	r3, r3, r0
 6509 002a DB00     		lsls	r3, r3, #3
 6510 002c 1344     		add	r3, r3, r2
 6511 002e 0B44     		add	r3, r3, r1
 6512 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6513 0032 FF2B     		cmp	r3, #255
 6514 0034 01D1     		bne	.L299
1573:ui.c          ****         {
1574:ui.c          ****             controlCheck = 1;
 6515              		.loc 1 1574 0
 6516 0036 0123     		movs	r3, #1
 6517 0038 7B60     		str	r3, [r7, #4]
 6518              	.L299:
1570:ui.c          ****     {
 6519              		.loc 1 1570 0 discriminator 2
 6520 003a 3B68     		ldr	r3, [r7]
 6521 003c 0133     		adds	r3, r3, #1
 6522 003e 3B60     		str	r3, [r7]
 6523              	.L298:
1570:ui.c          ****     {
 6524              		.loc 1 1570 0 is_stmt 0 discriminator 1
 6525 0040 3B68     		ldr	r3, [r7]
 6526 0042 032B     		cmp	r3, #3
 6527 0044 E4DD     		ble	.L300
 6528              	.LBE26:
1575:ui.c          ****         }  
1576:ui.c          ****     }
1577:ui.c          ****     if (controlCheck == 0) //don't display if the name data still hasn't been retrieved by the SPI 
 6529              		.loc 1 1577 0 is_stmt 1
 6530 0046 7B68     		ldr	r3, [r7, #4]
 6531 0048 002B     		cmp	r3, #0
 6532 004a 70D1     		bne	.L302
1578:ui.c          ****     {
1579:ui.c          ****         OLEDclear(128, 64);
 6533              		.loc 1 1579 0
 6534 004c 4021     		movs	r1, #64
 6535 004e 8020     		movs	r0, #128
 6536 0050 FFF7FEFF 		bl	OLEDclear
1580:ui.c          ****         OLEDtextColor(1, 0);
 6537              		.loc 1 1580 0
 6538 0054 0021     		movs	r1, #0
 6539 0056 0120     		movs	r0, #1
 6540 0058 FFF7FEFF 		bl	OLEDtextColor
1581:ui.c          ****         myGFX_setFont(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 148


 6541              		.loc 1 1581 0
 6542 005c 0020     		movs	r0, #0
 6543 005e FFF7FEFF 		bl	myGFX_setFont
1582:ui.c          ****         OLEDwriteString("A: ", 3, 0, FirstLine);
 6544              		.loc 1 1582 0
 6545 0062 0023     		movs	r3, #0
 6546 0064 0022     		movs	r2, #0
 6547 0066 0321     		movs	r1, #3
 6548 0068 3548     		ldr	r0, .L303+8
 6549 006a FFF7FEFF 		bl	OLEDwriteString
1583:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][0][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6550              		.loc 1 1583 0
 6551 006e 324B     		ldr	r3, .L303
 6552 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6553 0072 1A46     		mov	r2, r3
 6554 0074 1346     		mov	r3, r2
 6555 0076 9B00     		lsls	r3, r3, #2
 6556 0078 1344     		add	r3, r3, r2
 6557 007a DB00     		lsls	r3, r3, #3
 6558 007c 2F4A     		ldr	r2, .L303+4
 6559 007e 9C18     		adds	r4, r3, r2
 6560 0080 FFF7FEFF 		bl	OLEDgetCursor
 6561 0084 0346     		mov	r3, r0
 6562 0086 9A1F     		subs	r2, r3, #6
 6563 0088 0023     		movs	r3, #0
 6564 008a 0A21     		movs	r1, #10
 6565 008c 2046     		mov	r0, r4
 6566 008e FFF7FEFF 		bl	OLEDwriteString
1584:ui.c          ****         OLEDwriteString("B: ", 3, 0, SecondLine);
 6567              		.loc 1 1584 0
 6568 0092 0123     		movs	r3, #1
 6569 0094 0022     		movs	r2, #0
 6570 0096 0321     		movs	r1, #3
 6571 0098 2A48     		ldr	r0, .L303+12
 6572 009a FFF7FEFF 		bl	OLEDwriteString
1585:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][1][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6573              		.loc 1 1585 0
 6574 009e 264B     		ldr	r3, .L303
 6575 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6576 00a2 1A46     		mov	r2, r3
 6577 00a4 1346     		mov	r3, r2
 6578 00a6 9B00     		lsls	r3, r3, #2
 6579 00a8 1344     		add	r3, r3, r2
 6580 00aa DB00     		lsls	r3, r3, #3
 6581 00ac 0A33     		adds	r3, r3, #10
 6582 00ae 234A     		ldr	r2, .L303+4
 6583 00b0 9C18     		adds	r4, r3, r2
 6584 00b2 FFF7FEFF 		bl	OLEDgetCursor
 6585 00b6 0346     		mov	r3, r0
 6586 00b8 9A1F     		subs	r2, r3, #6
 6587 00ba 0123     		movs	r3, #1
 6588 00bc 0A21     		movs	r1, #10
 6589 00be 2046     		mov	r0, r4
 6590 00c0 FFF7FEFF 		bl	OLEDwriteString
1586:ui.c          ****         OLEDwriteString("X: ", 3, 0, ThirdLine);
 6591              		.loc 1 1586 0
 6592 00c4 0223     		movs	r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 149


 6593 00c6 0022     		movs	r2, #0
 6594 00c8 0321     		movs	r1, #3
 6595 00ca 1F48     		ldr	r0, .L303+16
 6596 00cc FFF7FEFF 		bl	OLEDwriteString
1587:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][2][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6597              		.loc 1 1587 0
 6598 00d0 194B     		ldr	r3, .L303
 6599 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6600 00d4 1A46     		mov	r2, r3
 6601 00d6 1346     		mov	r3, r2
 6602 00d8 9B00     		lsls	r3, r3, #2
 6603 00da 1344     		add	r3, r3, r2
 6604 00dc DB00     		lsls	r3, r3, #3
 6605 00de 1433     		adds	r3, r3, #20
 6606 00e0 164A     		ldr	r2, .L303+4
 6607 00e2 9C18     		adds	r4, r3, r2
 6608 00e4 FFF7FEFF 		bl	OLEDgetCursor
 6609 00e8 0346     		mov	r3, r0
 6610 00ea 9A1F     		subs	r2, r3, #6
 6611 00ec 0223     		movs	r3, #2
 6612 00ee 0A21     		movs	r1, #10
 6613 00f0 2046     		mov	r0, r4
 6614 00f2 FFF7FEFF 		bl	OLEDwriteString
1588:ui.c          ****         OLEDwriteString("Y: ", 3, 0, FourthLine);
 6615              		.loc 1 1588 0
 6616 00f6 0323     		movs	r3, #3
 6617 00f8 0022     		movs	r2, #0
 6618 00fa 0321     		movs	r1, #3
 6619 00fc 1348     		ldr	r0, .L303+20
 6620 00fe FFF7FEFF 		bl	OLEDwriteString
1589:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][3][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6621              		.loc 1 1589 0
 6622 0102 0D4B     		ldr	r3, .L303
 6623 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6624 0106 1A46     		mov	r2, r3
 6625 0108 1346     		mov	r3, r2
 6626 010a 9B00     		lsls	r3, r3, #2
 6627 010c 1344     		add	r3, r3, r2
 6628 010e DB00     		lsls	r3, r3, #3
 6629 0110 1E33     		adds	r3, r3, #30
 6630 0112 0A4A     		ldr	r2, .L303+4
 6631 0114 9C18     		adds	r4, r3, r2
 6632 0116 FFF7FEFF 		bl	OLEDgetCursor
 6633 011a 0346     		mov	r3, r0
 6634 011c 9A1F     		subs	r2, r3, #6
 6635 011e 0323     		movs	r3, #3
 6636 0120 0A21     		movs	r1, #10
 6637 0122 2046     		mov	r0, r4
 6638 0124 FFF7FEFF 		bl	OLEDwriteString
1590:ui.c          **** 
1591:ui.c          ****         mainOLEDWaitingToSend = 1;
 6639              		.loc 1 1591 0
 6640 0128 094B     		ldr	r3, .L303+24
 6641 012a 0122     		movs	r2, #1
 6642 012c 1A70     		strb	r2, [r3]
 6643              	.L302:
1592:ui.c          ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 150


1593:ui.c          **** }
 6644              		.loc 1 1593 0
 6645 012e 00BF     		nop
 6646 0130 0C37     		adds	r7, r7, #12
 6647              		.cfi_def_cfa_offset 12
 6648 0132 BD46     		mov	sp, r7
 6649              		.cfi_def_cfa_register 13
 6650              		@ sp needed
 6651 0134 90BD     		pop	{r4, r7, pc}
 6652              	.L304:
 6653 0136 00BF     		.align	2
 6654              	.L303:
 6655 0138 00000000 		.word	patchNum
 6656 013c 00000000 		.word	controlNamesArray
 6657 0140 30030000 		.word	.LC50
 6658 0144 34030000 		.word	.LC51
 6659 0148 38030000 		.word	.LC52
 6660 014c 3C030000 		.word	.LC53
 6661 0150 00000000 		.word	mainOLEDWaitingToSend
 6662              		.cfi_endproc
 6663              	.LFE79:
 6664              		.size	displayCurrentControlNames, .-displayCurrentControlNames
 6665              		.text
 6666              	.Letext0:
 6667              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6668              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6669              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 6670              		.file 5 "gfx_font.h"
 6671              		.file 6 "gfx.h"
 6672              		.file 7 "main.h"
 6673              		.file 8 "oled.h"
 6674              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 6675              		.file 10 "Generated_Source\\PSoC5/Decoder_1.h"
 6676              		.section	.debug_info,"",%progbits
 6677              	.Ldebug_info0:
 6678 0000 9C0D0000 		.4byte	0xd9c
 6679 0004 0400     		.2byte	0x4
 6680 0006 00000000 		.4byte	.Ldebug_abbrev0
 6681 000a 04       		.byte	0x4
 6682 000b 01       		.uleb128 0x1
 6683 000c A1080000 		.4byte	.LASF187
 6684 0010 0C       		.byte	0xc
 6685 0011 E1010000 		.4byte	.LASF188
 6686 0015 CF020000 		.4byte	.LASF189
 6687 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6688 001d 00000000 		.4byte	0
 6689 0021 00000000 		.4byte	.Ldebug_line0
 6690 0025 02       		.uleb128 0x2
 6691 0026 61010000 		.4byte	.LASF0
 6692 002a 02       		.byte	0x2
 6693 002b 1B       		.byte	0x1b
 6694 002c 30000000 		.4byte	0x30
 6695 0030 03       		.uleb128 0x3
 6696 0031 01       		.byte	0x1
 6697 0032 06       		.byte	0x6
 6698 0033 BF010000 		.4byte	.LASF2
 6699 0037 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 151


 6700 0038 B4000000 		.4byte	.LASF1
 6701 003c 02       		.byte	0x2
 6702 003d 1D       		.byte	0x1d
 6703 003e 42000000 		.4byte	0x42
 6704 0042 03       		.uleb128 0x3
 6705 0043 01       		.byte	0x1
 6706 0044 08       		.byte	0x8
 6707 0045 9F060000 		.4byte	.LASF3
 6708 0049 02       		.uleb128 0x2
 6709 004a E5090000 		.4byte	.LASF4
 6710 004e 02       		.byte	0x2
 6711 004f 29       		.byte	0x29
 6712 0050 54000000 		.4byte	0x54
 6713 0054 03       		.uleb128 0x3
 6714 0055 02       		.byte	0x2
 6715 0056 05       		.byte	0x5
 6716 0057 D8060000 		.4byte	.LASF5
 6717 005b 02       		.uleb128 0x2
 6718 005c D1070000 		.4byte	.LASF6
 6719 0060 02       		.byte	0x2
 6720 0061 2B       		.byte	0x2b
 6721 0062 66000000 		.4byte	0x66
 6722 0066 03       		.uleb128 0x3
 6723 0067 02       		.byte	0x2
 6724 0068 07       		.byte	0x7
 6725 0069 44040000 		.4byte	.LASF7
 6726 006d 02       		.uleb128 0x2
 6727 006e 0C080000 		.4byte	.LASF8
 6728 0072 02       		.byte	0x2
 6729 0073 3F       		.byte	0x3f
 6730 0074 78000000 		.4byte	0x78
 6731 0078 03       		.uleb128 0x3
 6732 0079 04       		.byte	0x4
 6733 007a 05       		.byte	0x5
 6734 007b 3B020000 		.4byte	.LASF9
 6735 007f 03       		.uleb128 0x3
 6736 0080 04       		.byte	0x4
 6737 0081 07       		.byte	0x7
 6738 0082 BF030000 		.4byte	.LASF10
 6739 0086 03       		.uleb128 0x3
 6740 0087 08       		.byte	0x8
 6741 0088 05       		.byte	0x5
 6742 0089 B1010000 		.4byte	.LASF11
 6743 008d 03       		.uleb128 0x3
 6744 008e 08       		.byte	0x8
 6745 008f 07       		.byte	0x7
 6746 0090 13010000 		.4byte	.LASF12
 6747 0094 04       		.uleb128 0x4
 6748 0095 04       		.byte	0x4
 6749 0096 05       		.byte	0x5
 6750 0097 696E7400 		.ascii	"int\000"
 6751 009b 03       		.uleb128 0x3
 6752 009c 04       		.byte	0x4
 6753 009d 07       		.byte	0x7
 6754 009e 9F030000 		.4byte	.LASF13
 6755 00a2 02       		.uleb128 0x2
 6756 00a3 93080000 		.4byte	.LASF14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 152


 6757 00a7 03       		.byte	0x3
 6758 00a8 14       		.byte	0x14
 6759 00a9 25000000 		.4byte	0x25
 6760 00ad 02       		.uleb128 0x2
 6761 00ae A3090000 		.4byte	.LASF15
 6762 00b2 03       		.byte	0x3
 6763 00b3 18       		.byte	0x18
 6764 00b4 37000000 		.4byte	0x37
 6765 00b8 02       		.uleb128 0x2
 6766 00b9 16080000 		.4byte	.LASF16
 6767 00bd 03       		.byte	0x3
 6768 00be 20       		.byte	0x20
 6769 00bf 49000000 		.4byte	0x49
 6770 00c3 02       		.uleb128 0x2
 6771 00c4 82020000 		.4byte	.LASF17
 6772 00c8 03       		.byte	0x3
 6773 00c9 24       		.byte	0x24
 6774 00ca 5B000000 		.4byte	0x5b
 6775 00ce 02       		.uleb128 0x2
 6776 00cf 97060000 		.4byte	.LASF18
 6777 00d3 03       		.byte	0x3
 6778 00d4 2C       		.byte	0x2c
 6779 00d5 6D000000 		.4byte	0x6d
 6780 00d9 05       		.uleb128 0x5
 6781 00da 68020000 		.4byte	.LASF19
 6782 00de 04       		.byte	0x4
 6783 00df E901     		.2byte	0x1e9
 6784 00e1 42000000 		.4byte	0x42
 6785 00e5 03       		.uleb128 0x3
 6786 00e6 04       		.byte	0x4
 6787 00e7 04       		.byte	0x4
 6788 00e8 30060000 		.4byte	.LASF20
 6789 00ec 03       		.uleb128 0x3
 6790 00ed 08       		.byte	0x8
 6791 00ee 04       		.byte	0x4
 6792 00ef 8B020000 		.4byte	.LASF21
 6793 00f3 03       		.uleb128 0x3
 6794 00f4 01       		.byte	0x1
 6795 00f5 08       		.byte	0x8
 6796 00f6 A1070000 		.4byte	.LASF22
 6797 00fa 03       		.uleb128 0x3
 6798 00fb 08       		.byte	0x8
 6799 00fc 04       		.byte	0x4
 6800 00fd 50050000 		.4byte	.LASF23
 6801 0101 03       		.uleb128 0x3
 6802 0102 04       		.byte	0x4
 6803 0103 07       		.byte	0x7
 6804 0104 2F050000 		.4byte	.LASF24
 6805 0108 06       		.uleb128 0x6
 6806 0109 04       		.byte	0x4
 6807 010a 0E010000 		.4byte	0x10e
 6808 010e 07       		.uleb128 0x7
 6809 010f F3000000 		.4byte	0xf3
 6810 0113 08       		.uleb128 0x8
 6811 0114 C3000000 		.4byte	0xc3
 6812 0118 09       		.uleb128 0x9
 6813 0119 FC070000 		.4byte	.LASF69
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 153


 6814 011d 01       		.byte	0x1
 6815 011e 42000000 		.4byte	0x42
 6816 0122 07       		.byte	0x7
 6817 0123 90       		.byte	0x90
 6818 0124 83010000 		.4byte	0x183
 6819 0128 0A       		.uleb128 0xa
 6820 0129 77010000 		.4byte	.LASF25
 6821 012d 00       		.byte	0
 6822 012e 0A       		.uleb128 0xa
 6823 012f D5090000 		.4byte	.LASF26
 6824 0133 01       		.byte	0x1
 6825 0134 0A       		.uleb128 0xa
 6826 0135 98020000 		.4byte	.LASF27
 6827 0139 02       		.byte	0x2
 6828 013a 0A       		.uleb128 0xa
 6829 013b 50090000 		.4byte	.LASF28
 6830 013f 03       		.byte	0x3
 6831 0140 0A       		.uleb128 0xa
 6832 0141 2F090000 		.4byte	.LASF29
 6833 0145 04       		.byte	0x4
 6834 0146 0A       		.uleb128 0xa
 6835 0147 57070000 		.4byte	.LASF30
 6836 014b 05       		.byte	0x5
 6837 014c 0A       		.uleb128 0xa
 6838 014d 05050000 		.4byte	.LASF31
 6839 0151 06       		.byte	0x6
 6840 0152 0A       		.uleb128 0xa
 6841 0153 E0050000 		.4byte	.LASF32
 6842 0157 07       		.byte	0x7
 6843 0158 0A       		.uleb128 0xa
 6844 0159 6E050000 		.4byte	.LASF33
 6845 015d 08       		.byte	0x8
 6846 015e 0A       		.uleb128 0xa
 6847 015f C3070000 		.4byte	.LASF34
 6848 0163 09       		.byte	0x9
 6849 0164 0A       		.uleb128 0xa
 6850 0165 00000000 		.4byte	.LASF35
 6851 0169 0A       		.byte	0xa
 6852 016a 0A       		.uleb128 0xa
 6853 016b 80010000 		.4byte	.LASF36
 6854 016f 0B       		.byte	0xb
 6855 0170 0A       		.uleb128 0xa
 6856 0171 6B090000 		.4byte	.LASF37
 6857 0175 0C       		.byte	0xc
 6858 0176 0A       		.uleb128 0xa
 6859 0177 4E060000 		.4byte	.LASF38
 6860 017b 0D       		.byte	0xd
 6861 017c 0A       		.uleb128 0xa
 6862 017d 30010000 		.4byte	.LASF39
 6863 0181 0E       		.byte	0xe
 6864 0182 00       		.byte	0
 6865 0183 0B       		.uleb128 0xb
 6866 0184 08       		.byte	0x8
 6867 0185 05       		.byte	0x5
 6868 0186 0C       		.byte	0xc
 6869 0187 D4010000 		.4byte	0x1d4
 6870 018b 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 154


 6871 018c 680A0000 		.4byte	.LASF40
 6872 0190 05       		.byte	0x5
 6873 0191 0D       		.byte	0xd
 6874 0192 C3000000 		.4byte	0xc3
 6875 0196 00       		.byte	0
 6876 0197 0C       		.uleb128 0xc
 6877 0198 1A040000 		.4byte	.LASF41
 6878 019c 05       		.byte	0x5
 6879 019d 0E       		.byte	0xe
 6880 019e AD000000 		.4byte	0xad
 6881 01a2 02       		.byte	0x2
 6882 01a3 0C       		.uleb128 0xc
 6883 01a4 7F000000 		.4byte	.LASF42
 6884 01a8 05       		.byte	0x5
 6885 01a9 0E       		.byte	0xe
 6886 01aa AD000000 		.4byte	0xad
 6887 01ae 03       		.byte	0x3
 6888 01af 0C       		.uleb128 0xc
 6889 01b0 CF060000 		.4byte	.LASF43
 6890 01b4 05       		.byte	0x5
 6891 01b5 0F       		.byte	0xf
 6892 01b6 AD000000 		.4byte	0xad
 6893 01ba 04       		.byte	0x4
 6894 01bb 0C       		.uleb128 0xc
 6895 01bc 13050000 		.4byte	.LASF44
 6896 01c0 05       		.byte	0x5
 6897 01c1 10       		.byte	0x10
 6898 01c2 A2000000 		.4byte	0xa2
 6899 01c6 05       		.byte	0x5
 6900 01c7 0C       		.uleb128 0xc
 6901 01c8 810A0000 		.4byte	.LASF45
 6902 01cc 05       		.byte	0x5
 6903 01cd 10       		.byte	0x10
 6904 01ce A2000000 		.4byte	0xa2
 6905 01d2 06       		.byte	0x6
 6906 01d3 00       		.byte	0
 6907 01d4 02       		.uleb128 0x2
 6908 01d5 DB030000 		.4byte	.LASF46
 6909 01d9 05       		.byte	0x5
 6910 01da 11       		.byte	0x11
 6911 01db 83010000 		.4byte	0x183
 6912 01df 0B       		.uleb128 0xb
 6913 01e0 0C       		.byte	0xc
 6914 01e1 05       		.byte	0x5
 6915 01e2 13       		.byte	0x13
 6916 01e3 24020000 		.4byte	0x224
 6917 01e7 0C       		.uleb128 0xc
 6918 01e8 CE090000 		.4byte	.LASF47
 6919 01ec 05       		.byte	0x5
 6920 01ed 14       		.byte	0x14
 6921 01ee 24020000 		.4byte	0x224
 6922 01f2 00       		.byte	0
 6923 01f3 0C       		.uleb128 0xc
 6924 01f4 FF030000 		.4byte	.LASF48
 6925 01f8 05       		.byte	0x5
 6926 01f9 15       		.byte	0x15
 6927 01fa 2A020000 		.4byte	0x22a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 155


 6928 01fe 04       		.byte	0x4
 6929 01ff 0C       		.uleb128 0xc
 6930 0200 35020000 		.4byte	.LASF49
 6931 0204 05       		.byte	0x5
 6932 0205 16       		.byte	0x16
 6933 0206 AD000000 		.4byte	0xad
 6934 020a 08       		.byte	0x8
 6935 020b 0C       		.uleb128 0xc
 6936 020c 7E040000 		.4byte	.LASF50
 6937 0210 05       		.byte	0x5
 6938 0211 16       		.byte	0x16
 6939 0212 AD000000 		.4byte	0xad
 6940 0216 09       		.byte	0x9
 6941 0217 0C       		.uleb128 0xc
 6942 0218 7F070000 		.4byte	.LASF51
 6943 021c 05       		.byte	0x5
 6944 021d 17       		.byte	0x17
 6945 021e AD000000 		.4byte	0xad
 6946 0222 0A       		.byte	0xa
 6947 0223 00       		.byte	0
 6948 0224 06       		.uleb128 0x6
 6949 0225 04       		.byte	0x4
 6950 0226 AD000000 		.4byte	0xad
 6951 022a 06       		.uleb128 0x6
 6952 022b 04       		.byte	0x4
 6953 022c D4010000 		.4byte	0x1d4
 6954 0230 02       		.uleb128 0x2
 6955 0231 E1040000 		.4byte	.LASF52
 6956 0235 05       		.byte	0x5
 6957 0236 18       		.byte	0x18
 6958 0237 DF010000 		.4byte	0x1df
 6959 023b 0D       		.uleb128 0xd
 6960 023c A5050000 		.4byte	.LASF190
 6961 0240 24       		.byte	0x24
 6962 0241 06       		.byte	0x6
 6963 0242 1C       		.byte	0x1c
 6964 0243 08030000 		.4byte	0x308
 6965 0247 0C       		.uleb128 0xc
 6966 0248 C10A0000 		.4byte	.LASF53
 6967 024c 06       		.byte	0x6
 6968 024d 1E       		.byte	0x1e
 6969 024e B8000000 		.4byte	0xb8
 6970 0252 00       		.byte	0
 6971 0253 0C       		.uleb128 0xc
 6972 0254 AD060000 		.4byte	.LASF54
 6973 0258 06       		.byte	0x6
 6974 0259 1F       		.byte	0x1f
 6975 025a B8000000 		.4byte	0xb8
 6976 025e 02       		.byte	0x2
 6977 025f 0C       		.uleb128 0xc
 6978 0260 13040000 		.4byte	.LASF55
 6979 0264 06       		.byte	0x6
 6980 0265 20       		.byte	0x20
 6981 0266 C3000000 		.4byte	0xc3
 6982 026a 04       		.byte	0x4
 6983 026b 0C       		.uleb128 0xc
 6984 026c 5D090000 		.4byte	.LASF56
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 156


 6985 0270 06       		.byte	0x6
 6986 0271 21       		.byte	0x21
 6987 0272 C3000000 		.4byte	0xc3
 6988 0276 06       		.byte	0x6
 6989 0277 0C       		.uleb128 0xc
 6990 0278 36080000 		.4byte	.LASF57
 6991 027c 06       		.byte	0x6
 6992 027d 22       		.byte	0x22
 6993 027e C3000000 		.4byte	0xc3
 6994 0282 08       		.byte	0x8
 6995 0283 0C       		.uleb128 0xc
 6996 0284 98070000 		.4byte	.LASF58
 6997 0288 06       		.byte	0x6
 6998 0289 23       		.byte	0x23
 6999 028a C3000000 		.4byte	0xc3
 7000 028e 0A       		.byte	0xa
 7001 028f 0C       		.uleb128 0xc
 7002 0290 65050000 		.4byte	.LASF59
 7003 0294 06       		.byte	0x6
 7004 0295 24       		.byte	0x24
 7005 0296 C3000000 		.4byte	0xc3
 7006 029a 0C       		.byte	0xc
 7007 029b 0C       		.uleb128 0xc
 7008 029c B6030000 		.4byte	.LASF60
 7009 02a0 06       		.byte	0x6
 7010 02a1 25       		.byte	0x25
 7011 02a2 C3000000 		.4byte	0xc3
 7012 02a6 0E       		.byte	0xe
 7013 02a7 0C       		.uleb128 0xc
 7014 02a8 4B080000 		.4byte	.LASF61
 7015 02ac 06       		.byte	0x6
 7016 02ad 26       		.byte	0x26
 7017 02ae C3000000 		.4byte	0xc3
 7018 02b2 10       		.byte	0x10
 7019 02b3 0C       		.uleb128 0xc
 7020 02b4 480A0000 		.4byte	.LASF62
 7021 02b8 06       		.byte	0x6
 7022 02b9 27       		.byte	0x27
 7023 02ba C3000000 		.4byte	0xc3
 7024 02be 12       		.byte	0x12
 7025 02bf 0C       		.uleb128 0xc
 7026 02c0 1F020000 		.4byte	.LASF63
 7027 02c4 06       		.byte	0x6
 7028 02c5 28       		.byte	0x28
 7029 02c6 C3000000 		.4byte	0xc3
 7030 02ca 14       		.byte	0x14
 7031 02cb 0C       		.uleb128 0xc
 7032 02cc AD000000 		.4byte	.LASF64
 7033 02d0 06       		.byte	0x6
 7034 02d1 29       		.byte	0x29
 7035 02d2 C3000000 		.4byte	0xc3
 7036 02d6 16       		.byte	0x16
 7037 02d7 0C       		.uleb128 0xc
 7038 02d8 B0070000 		.4byte	.LASF65
 7039 02dc 06       		.byte	0x6
 7040 02dd 2A       		.byte	0x2a
 7041 02de 08030000 		.4byte	0x308
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 157


 7042 02e2 18       		.byte	0x18
 7043 02e3 0C       		.uleb128 0xc
 7044 02e4 CB010000 		.4byte	.LASF66
 7045 02e8 06       		.byte	0x6
 7046 02e9 2B       		.byte	0x2b
 7047 02ea C3000000 		.4byte	0xc3
 7048 02ee 1C       		.byte	0x1c
 7049 02ef 0C       		.uleb128 0xc
 7050 02f0 B4020000 		.4byte	.LASF67
 7051 02f4 06       		.byte	0x6
 7052 02f5 2C       		.byte	0x2c
 7053 02f6 C3000000 		.4byte	0xc3
 7054 02fa 1E       		.byte	0x1e
 7055 02fb 0C       		.uleb128 0xc
 7056 02fc DC070000 		.4byte	.LASF68
 7057 0300 06       		.byte	0x6
 7058 0301 2D       		.byte	0x2d
 7059 0302 C3000000 		.4byte	0xc3
 7060 0306 20       		.byte	0x20
 7061 0307 00       		.byte	0
 7062 0308 06       		.uleb128 0x6
 7063 0309 04       		.byte	0x4
 7064 030a 30020000 		.4byte	0x230
 7065 030e 0E       		.uleb128 0xe
 7066 030f 47465800 		.ascii	"GFX\000"
 7067 0313 06       		.byte	0x6
 7068 0314 2E       		.byte	0x2e
 7069 0315 3B020000 		.4byte	0x23b
 7070 0319 09       		.uleb128 0x9
 7071 031a B4060000 		.4byte	.LASF70
 7072 031e 01       		.byte	0x1
 7073 031f 42000000 		.4byte	0x42
 7074 0323 08       		.byte	0x8
 7075 0324 1D       		.byte	0x1d
 7076 0325 48030000 		.4byte	0x348
 7077 0329 0A       		.uleb128 0xa
 7078 032a BE040000 		.4byte	.LASF71
 7079 032e 00       		.byte	0
 7080 032f 0A       		.uleb128 0xa
 7081 0330 7C050000 		.4byte	.LASF72
 7082 0334 01       		.byte	0x1
 7083 0335 0A       		.uleb128 0xa
 7084 0336 30070000 		.4byte	.LASF73
 7085 033a 02       		.byte	0x2
 7086 033b 0A       		.uleb128 0xa
 7087 033c D6010000 		.4byte	.LASF74
 7088 0340 03       		.byte	0x3
 7089 0341 0A       		.uleb128 0xa
 7090 0342 D9040000 		.4byte	.LASF75
 7091 0346 04       		.byte	0x4
 7092 0347 00       		.byte	0
 7093 0348 09       		.uleb128 0x9
 7094 0349 CD000000 		.4byte	.LASF76
 7095 034d 01       		.byte	0x1
 7096 034e 42000000 		.4byte	0x42
 7097 0352 01       		.byte	0x1
 7098 0353 14       		.byte	0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 158


 7099 0354 76030000 		.4byte	0x376
 7100 0358 0A       		.uleb128 0xa
 7101 0359 1B050000 		.4byte	.LASF77
 7102 035d 00       		.byte	0
 7103 035e 0A       		.uleb128 0xa
 7104 035f 4D030000 		.4byte	.LASF78
 7105 0363 01       		.byte	0x1
 7106 0364 0A       		.uleb128 0xa
 7107 0365 07080000 		.4byte	.LASF79
 7108 0369 02       		.byte	0x2
 7109 036a 0F       		.uleb128 0xf
 7110 036b 557000   		.ascii	"Up\000"
 7111 036e 03       		.byte	0x3
 7112 036f 0A       		.uleb128 0xa
 7113 0370 92020000 		.4byte	.LASF80
 7114 0374 04       		.byte	0x4
 7115 0375 00       		.byte	0
 7116 0376 10       		.uleb128 0x10
 7117 0377 AE0A0000 		.4byte	.LASF92
 7118 037b 01       		.byte	0x1
 7119 037c 2A       		.byte	0x2a
 7120 037d 00000000 		.4byte	.LFB64
 7121 0381 040E0000 		.4byte	.LFE64-.LFB64
 7122 0385 01       		.uleb128 0x1
 7123 0386 9C       		.byte	0x9c
 7124 0387 18050000 		.4byte	0x518
 7125 038b 11       		.uleb128 0x11
 7126 038c 3F080000 		.4byte	.LASF81
 7127 0390 01       		.byte	0x1
 7128 0391 50       		.byte	0x50
 7129 0392 AD000000 		.4byte	0xad
 7130 0396 02       		.uleb128 0x2
 7131 0397 91       		.byte	0x91
 7132 0398 5F       		.sleb128 -33
 7133 0399 12       		.uleb128 0x12
 7134 039a 30000000 		.4byte	.LBB2
 7135 039e 2E000000 		.4byte	.LBE2-.LBB2
 7136 03a2 B3030000 		.4byte	0x3b3
 7137 03a6 13       		.uleb128 0x13
 7138 03a7 6900     		.ascii	"i\000"
 7139 03a9 01       		.byte	0x1
 7140 03aa 34       		.byte	0x34
 7141 03ab 94000000 		.4byte	0x94
 7142 03af 02       		.uleb128 0x2
 7143 03b0 91       		.byte	0x91
 7144 03b1 6C       		.sleb128 -20
 7145 03b2 00       		.byte	0
 7146 03b3 12       		.uleb128 0x12
 7147 03b4 8E000000 		.4byte	.LBB3
 7148 03b8 2E000000 		.4byte	.LBE3-.LBB3
 7149 03bc CD030000 		.4byte	0x3cd
 7150 03c0 13       		.uleb128 0x13
 7151 03c1 6900     		.ascii	"i\000"
 7152 03c3 01       		.byte	0x1
 7153 03c4 45       		.byte	0x45
 7154 03c5 94000000 		.4byte	0x94
 7155 03c9 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 159


 7156 03ca 91       		.byte	0x91
 7157 03cb 68       		.sleb128 -24
 7158 03cc 00       		.byte	0
 7159 03cd 14       		.uleb128 0x14
 7160 03ce 3E050000 		.4byte	.LBB4
 7161 03d2 88080000 		.4byte	.LBE4-.LBB4
 7162 03d6 15       		.uleb128 0x15
 7163 03d7 61060000 		.4byte	.LASF82
 7164 03db 01       		.byte	0x1
 7165 03dc 0D01     		.2byte	0x10d
 7166 03de A2000000 		.4byte	0xa2
 7167 03e2 02       		.uleb128 0x2
 7168 03e3 91       		.byte	0x91
 7169 03e4 5E       		.sleb128 -34
 7170 03e5 12       		.uleb128 0x12
 7171 03e6 6A050000 		.4byte	.LBB5
 7172 03ea D6000000 		.4byte	.LBE5-.LBB5
 7173 03ee 11040000 		.4byte	0x411
 7174 03f2 15       		.uleb128 0x15
 7175 03f3 68080000 		.4byte	.LASF83
 7176 03f7 01       		.byte	0x1
 7177 03f8 2901     		.2byte	0x129
 7178 03fa A2000000 		.4byte	0xa2
 7179 03fe 02       		.uleb128 0x2
 7180 03ff 91       		.byte	0x91
 7181 0400 5D       		.sleb128 -35
 7182 0401 15       		.uleb128 0x15
 7183 0402 67040000 		.4byte	.LASF84
 7184 0406 01       		.byte	0x1
 7185 0407 2B01     		.2byte	0x12b
 7186 0409 AD000000 		.4byte	0xad
 7187 040d 02       		.uleb128 0x2
 7188 040e 91       		.byte	0x91
 7189 040f 5C       		.sleb128 -36
 7190 0410 00       		.byte	0
 7191 0411 12       		.uleb128 0x12
 7192 0412 42060000 		.4byte	.LBB6
 7193 0416 50000000 		.4byte	.LBE6-.LBB6
 7194 041a 2E040000 		.4byte	0x42e
 7195 041e 15       		.uleb128 0x15
 7196 041f 67040000 		.4byte	.LASF84
 7197 0423 01       		.byte	0x1
 7198 0424 3401     		.2byte	0x134
 7199 0426 AD000000 		.4byte	0xad
 7200 042a 02       		.uleb128 0x2
 7201 042b 91       		.byte	0x91
 7202 042c 5B       		.sleb128 -37
 7203 042d 00       		.byte	0
 7204 042e 12       		.uleb128 0x12
 7205 042f AE060000 		.4byte	.LBB7
 7206 0433 54020000 		.4byte	.LBE7-.LBB7
 7207 0437 69040000 		.4byte	0x469
 7208 043b 15       		.uleb128 0x15
 7209 043c 38010000 		.4byte	.LASF85
 7210 0440 01       		.byte	0x1
 7211 0441 4801     		.2byte	0x148
 7212 0443 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 160


 7213 0447 02       		.uleb128 0x2
 7214 0448 91       		.byte	0x91
 7215 0449 64       		.sleb128 -28
 7216 044a 15       		.uleb128 0x15
 7217 044b BC090000 		.4byte	.LASF86
 7218 044f 01       		.byte	0x1
 7219 0450 5801     		.2byte	0x158
 7220 0452 E5000000 		.4byte	0xe5
 7221 0456 02       		.uleb128 0x2
 7222 0457 91       		.byte	0x91
 7223 0458 60       		.sleb128 -32
 7224 0459 15       		.uleb128 0x15
 7225 045a 67040000 		.4byte	.LASF84
 7226 045e 01       		.byte	0x1
 7227 045f 6901     		.2byte	0x169
 7228 0461 AD000000 		.4byte	0xad
 7229 0465 02       		.uleb128 0x2
 7230 0466 91       		.byte	0x91
 7231 0467 5A       		.sleb128 -38
 7232 0468 00       		.byte	0
 7233 0469 12       		.uleb128 0x12
 7234 046a 1E090000 		.4byte	.LBB8
 7235 046e 32010000 		.4byte	.LBE8-.LBB8
 7236 0472 A4040000 		.4byte	0x4a4
 7237 0476 15       		.uleb128 0x15
 7238 0477 38010000 		.4byte	.LASF85
 7239 047b 01       		.byte	0x1
 7240 047c 8701     		.2byte	0x187
 7241 047e E5000000 		.4byte	0xe5
 7242 0482 02       		.uleb128 0x2
 7243 0483 91       		.byte	0x91
 7244 0484 54       		.sleb128 -44
 7245 0485 15       		.uleb128 0x15
 7246 0486 AA050000 		.4byte	.LASF87
 7247 048a 01       		.byte	0x1
 7248 048b 9801     		.2byte	0x198
 7249 048d A2000000 		.4byte	0xa2
 7250 0491 02       		.uleb128 0x2
 7251 0492 91       		.byte	0x91
 7252 0493 53       		.sleb128 -45
 7253 0494 15       		.uleb128 0x15
 7254 0495 67040000 		.4byte	.LASF84
 7255 0499 01       		.byte	0x1
 7256 049a 9901     		.2byte	0x199
 7257 049c AD000000 		.4byte	0xad
 7258 04a0 02       		.uleb128 0x2
 7259 04a1 91       		.byte	0x91
 7260 04a2 52       		.sleb128 -46
 7261 04a3 00       		.byte	0
 7262 04a4 12       		.uleb128 0x12
 7263 04a5 6C0A0000 		.4byte	.LBB9
 7264 04a9 B0010000 		.4byte	.LBE9-.LBB9
 7265 04ad DF040000 		.4byte	0x4df
 7266 04b1 15       		.uleb128 0x15
 7267 04b2 43050000 		.4byte	.LASF88
 7268 04b6 01       		.byte	0x1
 7269 04b7 AE01     		.2byte	0x1ae
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 161


 7270 04b9 B8000000 		.4byte	0xb8
 7271 04bd 02       		.uleb128 0x2
 7272 04be 91       		.byte	0x91
 7273 04bf 50       		.sleb128 -48
 7274 04c0 15       		.uleb128 0x15
 7275 04c1 5A000000 		.4byte	.LASF89
 7276 04c5 01       		.byte	0x1
 7277 04c6 C101     		.2byte	0x1c1
 7278 04c8 E5000000 		.4byte	0xe5
 7279 04cc 02       		.uleb128 0x2
 7280 04cd 91       		.byte	0x91
 7281 04ce 4C       		.sleb128 -52
 7282 04cf 15       		.uleb128 0x15
 7283 04d0 67040000 		.4byte	.LASF84
 7284 04d4 01       		.byte	0x1
 7285 04d5 C301     		.2byte	0x1c3
 7286 04d7 AD000000 		.4byte	0xad
 7287 04db 02       		.uleb128 0x2
 7288 04dc 91       		.byte	0x91
 7289 04dd 4B       		.sleb128 -53
 7290 04de 00       		.byte	0
 7291 04df 14       		.uleb128 0x14
 7292 04e0 380C0000 		.4byte	.LBB10
 7293 04e4 88010000 		.4byte	.LBE10-.LBB10
 7294 04e8 15       		.uleb128 0x15
 7295 04e9 00020000 		.4byte	.LASF90
 7296 04ed 01       		.byte	0x1
 7297 04ee DF01     		.2byte	0x1df
 7298 04f0 B8000000 		.4byte	0xb8
 7299 04f4 02       		.uleb128 0x2
 7300 04f5 91       		.byte	0x91
 7301 04f6 48       		.sleb128 -56
 7302 04f7 15       		.uleb128 0x15
 7303 04f8 C8040000 		.4byte	.LASF91
 7304 04fc 01       		.byte	0x1
 7305 04fd EF01     		.2byte	0x1ef
 7306 04ff 18050000 		.4byte	0x518
 7307 0503 02       		.uleb128 0x2
 7308 0504 91       		.byte	0x91
 7309 0505 44       		.sleb128 -60
 7310 0506 15       		.uleb128 0x15
 7311 0507 67040000 		.4byte	.LASF84
 7312 050b 01       		.byte	0x1
 7313 050c F901     		.2byte	0x1f9
 7314 050e AD000000 		.4byte	0xad
 7315 0512 02       		.uleb128 0x2
 7316 0513 91       		.byte	0x91
 7317 0514 47       		.sleb128 -57
 7318 0515 00       		.byte	0
 7319 0516 00       		.byte	0
 7320 0517 00       		.byte	0
 7321 0518 16       		.uleb128 0x16
 7322 0519 AD000000 		.4byte	0xad
 7323 051d 28050000 		.4byte	0x528
 7324 0521 17       		.uleb128 0x17
 7325 0522 01010000 		.4byte	0x101
 7326 0526 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 162


 7327 0527 00       		.byte	0
 7328 0528 18       		.uleb128 0x18
 7329 0529 3A070000 		.4byte	.LASF106
 7330 052d 01       		.byte	0x1
 7331 052e 2102     		.2byte	0x221
 7332 0530 00000000 		.4byte	.LFB65
 7333 0534 B4000000 		.4byte	.LFE65-.LFB65
 7334 0538 01       		.uleb128 0x1
 7335 0539 9C       		.byte	0x9c
 7336 053a 19       		.uleb128 0x19
 7337 053b 9C000000 		.4byte	.LASF93
 7338 053f 01       		.byte	0x1
 7339 0540 3902     		.2byte	0x239
 7340 0542 00000000 		.4byte	.LFB66
 7341 0546 C0010000 		.4byte	.LFE66-.LFB66
 7342 054a 01       		.uleb128 0x1
 7343 054b 9C       		.byte	0x9c
 7344 054c 87050000 		.4byte	0x587
 7345 0550 12       		.uleb128 0x12
 7346 0551 CC000000 		.4byte	.LBB11
 7347 0555 26000000 		.4byte	.LBE11-.LBB11
 7348 0559 6D050000 		.4byte	0x56d
 7349 055d 15       		.uleb128 0x15
 7350 055e B5040000 		.4byte	.LASF94
 7351 0562 01       		.byte	0x1
 7352 0563 5502     		.2byte	0x255
 7353 0565 AD000000 		.4byte	0xad
 7354 0569 02       		.uleb128 0x2
 7355 056a 91       		.byte	0x91
 7356 056b 6F       		.sleb128 -17
 7357 056c 00       		.byte	0
 7358 056d 14       		.uleb128 0x14
 7359 056e 14010000 		.4byte	.LBB12
 7360 0572 28000000 		.4byte	.LBE12-.LBB12
 7361 0576 15       		.uleb128 0x15
 7362 0577 B5040000 		.4byte	.LASF94
 7363 057b 01       		.byte	0x1
 7364 057c 5F02     		.2byte	0x25f
 7365 057e AD000000 		.4byte	0xad
 7366 0582 02       		.uleb128 0x2
 7367 0583 91       		.byte	0x91
 7368 0584 6E       		.sleb128 -18
 7369 0585 00       		.byte	0
 7370 0586 00       		.byte	0
 7371 0587 19       		.uleb128 0x19
 7372 0588 2B080000 		.4byte	.LASF95
 7373 058c 01       		.byte	0x1
 7374 058d 7002     		.2byte	0x270
 7375 058f 00000000 		.4byte	.LFB67
 7376 0593 AC120000 		.4byte	.LFE67-.LFB67
 7377 0597 01       		.uleb128 0x1
 7378 0598 9C       		.byte	0x9c
 7379 0599 95060000 		.4byte	0x695
 7380 059d 1A       		.uleb128 0x1a
 7381 059e C8020000 		.4byte	.LASF191
 7382 05a2 01       		.byte	0x1
 7383 05a3 7002     		.2byte	0x270
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 163


 7384 05a5 48030000 		.4byte	0x348
 7385 05a9 02       		.uleb128 0x2
 7386 05aa 91       		.byte	0x91
 7387 05ab 57       		.sleb128 -41
 7388 05ac 15       		.uleb128 0x15
 7389 05ad 89030000 		.4byte	.LASF96
 7390 05b1 01       		.byte	0x1
 7391 05b2 7202     		.2byte	0x272
 7392 05b4 AD000000 		.4byte	0xad
 7393 05b8 02       		.uleb128 0x2
 7394 05b9 91       		.byte	0x91
 7395 05ba 77       		.sleb128 -9
 7396 05bb 12       		.uleb128 0x12
 7397 05bc 4C060000 		.4byte	.LBB13
 7398 05c0 E2000000 		.4byte	.LBE13-.LBB13
 7399 05c4 E7050000 		.4byte	0x5e7
 7400 05c8 15       		.uleb128 0x15
 7401 05c9 AA050000 		.4byte	.LASF87
 7402 05cd 01       		.byte	0x1
 7403 05ce 5F03     		.2byte	0x35f
 7404 05d0 A2000000 		.4byte	0xa2
 7405 05d4 02       		.uleb128 0x2
 7406 05d5 91       		.byte	0x91
 7407 05d6 5F       		.sleb128 -33
 7408 05d7 15       		.uleb128 0x15
 7409 05d8 67040000 		.4byte	.LASF84
 7410 05dc 01       		.byte	0x1
 7411 05dd 6003     		.2byte	0x360
 7412 05df AD000000 		.4byte	0xad
 7413 05e3 02       		.uleb128 0x2
 7414 05e4 91       		.byte	0x91
 7415 05e5 5E       		.sleb128 -34
 7416 05e6 00       		.byte	0
 7417 05e7 12       		.uleb128 0x12
 7418 05e8 DE0E0000 		.4byte	.LBB14
 7419 05ec 6C000000 		.4byte	.LBE14-.LBB14
 7420 05f0 02060000 		.4byte	0x602
 7421 05f4 1B       		.uleb128 0x1b
 7422 05f5 6900     		.ascii	"i\000"
 7423 05f7 01       		.byte	0x1
 7424 05f8 9804     		.2byte	0x498
 7425 05fa 94000000 		.4byte	0x94
 7426 05fe 02       		.uleb128 0x2
 7427 05ff 91       		.byte	0x91
 7428 0600 70       		.sleb128 -16
 7429 0601 00       		.byte	0
 7430 0602 12       		.uleb128 0x12
 7431 0603 6C0F0000 		.4byte	.LBB15
 7432 0607 B2000000 		.4byte	.LBE15-.LBB15
 7433 060b 2E060000 		.4byte	0x62e
 7434 060f 15       		.uleb128 0x15
 7435 0610 68080000 		.4byte	.LASF83
 7436 0614 01       		.byte	0x1
 7437 0615 BC04     		.2byte	0x4bc
 7438 0617 A2000000 		.4byte	0xa2
 7439 061b 02       		.uleb128 0x2
 7440 061c 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 164


 7441 061d 5D       		.sleb128 -35
 7442 061e 15       		.uleb128 0x15
 7443 061f 67040000 		.4byte	.LASF84
 7444 0623 01       		.byte	0x1
 7445 0624 BE04     		.2byte	0x4be
 7446 0626 AD000000 		.4byte	0xad
 7447 062a 02       		.uleb128 0x2
 7448 062b 91       		.byte	0x91
 7449 062c 5C       		.sleb128 -36
 7450 062d 00       		.byte	0
 7451 062e 12       		.uleb128 0x12
 7452 062f 3C100000 		.4byte	.LBB16
 7453 0633 1C000000 		.4byte	.LBE16-.LBB16
 7454 0637 49060000 		.4byte	0x649
 7455 063b 1B       		.uleb128 0x1b
 7456 063c 6900     		.ascii	"i\000"
 7457 063e 01       		.byte	0x1
 7458 063f CB04     		.2byte	0x4cb
 7459 0641 94000000 		.4byte	0x94
 7460 0645 02       		.uleb128 0x2
 7461 0646 91       		.byte	0x91
 7462 0647 6C       		.sleb128 -20
 7463 0648 00       		.byte	0
 7464 0649 12       		.uleb128 0x12
 7465 064a FE100000 		.4byte	.LBB17
 7466 064e 6C000000 		.4byte	.LBE17-.LBB17
 7467 0652 64060000 		.4byte	0x664
 7468 0656 1B       		.uleb128 0x1b
 7469 0657 6900     		.ascii	"i\000"
 7470 0659 01       		.byte	0x1
 7471 065a ED04     		.2byte	0x4ed
 7472 065c 94000000 		.4byte	0x94
 7473 0660 02       		.uleb128 0x2
 7474 0661 91       		.byte	0x91
 7475 0662 68       		.sleb128 -24
 7476 0663 00       		.byte	0
 7477 0664 14       		.uleb128 0x14
 7478 0665 84110000 		.4byte	.LBB18
 7479 0669 0C010000 		.4byte	.LBE18-.LBB18
 7480 066d 15       		.uleb128 0x15
 7481 066e 60020000 		.4byte	.LASF97
 7482 0672 01       		.byte	0x1
 7483 0673 0405     		.2byte	0x504
 7484 0675 AD000000 		.4byte	0xad
 7485 0679 02       		.uleb128 0x2
 7486 067a 91       		.byte	0x91
 7487 067b 67       		.sleb128 -25
 7488 067c 14       		.uleb128 0x14
 7489 067d 96110000 		.4byte	.LBB19
 7490 0681 CC000000 		.4byte	.LBE19-.LBB19
 7491 0685 1B       		.uleb128 0x1b
 7492 0686 6900     		.ascii	"i\000"
 7493 0688 01       		.byte	0x1
 7494 0689 0505     		.2byte	0x505
 7495 068b 94000000 		.4byte	0x94
 7496 068f 02       		.uleb128 0x2
 7497 0690 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 165


 7498 0691 60       		.sleb128 -32
 7499 0692 00       		.byte	0
 7500 0693 00       		.byte	0
 7501 0694 00       		.byte	0
 7502 0695 1C       		.uleb128 0x1c
 7503 0696 750A0000 		.4byte	.LASF98
 7504 069a 01       		.byte	0x1
 7505 069b 2305     		.2byte	0x523
 7506 069d 00000000 		.4byte	.LFB68
 7507 06a1 9C000000 		.4byte	.LFE68-.LFB68
 7508 06a5 01       		.uleb128 0x1
 7509 06a6 9C       		.byte	0x9c
 7510 06a7 1C       		.uleb128 0x1c
 7511 06a8 F6060000 		.4byte	.LASF99
 7512 06ac 01       		.byte	0x1
 7513 06ad 3B05     		.2byte	0x53b
 7514 06af 00000000 		.4byte	.LFB69
 7515 06b3 9C000000 		.4byte	.LFE69-.LFB69
 7516 06b7 01       		.uleb128 0x1
 7517 06b8 9C       		.byte	0x9c
 7518 06b9 1C       		.uleb128 0x1c
 7519 06ba A8020000 		.4byte	.LASF100
 7520 06be 01       		.byte	0x1
 7521 06bf 5005     		.2byte	0x550
 7522 06c1 00000000 		.4byte	.LFB70
 7523 06c5 7C000000 		.4byte	.LFE70-.LFB70
 7524 06c9 01       		.uleb128 0x1
 7525 06ca 9C       		.byte	0x9c
 7526 06cb 1C       		.uleb128 0x1c
 7527 06cc 1C070000 		.4byte	.LASF101
 7528 06d0 01       		.byte	0x1
 7529 06d1 6305     		.2byte	0x563
 7530 06d3 00000000 		.4byte	.LFB71
 7531 06d7 7C000000 		.4byte	.LFE71-.LFB71
 7532 06db 01       		.uleb128 0x1
 7533 06dc 9C       		.byte	0x9c
 7534 06dd 1C       		.uleb128 0x1c
 7535 06de D7000000 		.4byte	.LASF102
 7536 06e2 01       		.byte	0x1
 7537 06e3 7605     		.2byte	0x576
 7538 06e5 00000000 		.4byte	.LFB72
 7539 06e9 48000000 		.4byte	.LFE72-.LFB72
 7540 06ed 01       		.uleb128 0x1
 7541 06ee 9C       		.byte	0x9c
 7542 06ef 19       		.uleb128 0x19
 7543 06f0 090A0000 		.4byte	.LASF103
 7544 06f4 01       		.byte	0x1
 7545 06f5 8A05     		.2byte	0x58a
 7546 06f7 00000000 		.4byte	.LFB73
 7547 06fb B0000000 		.4byte	.LFE73-.LFB73
 7548 06ff 01       		.uleb128 0x1
 7549 0700 9C       		.byte	0x9c
 7550 0701 1D070000 		.4byte	0x71d
 7551 0705 14       		.uleb128 0x14
 7552 0706 5A000000 		.4byte	.LBB20
 7553 070a 28000000 		.4byte	.LBE20-.LBB20
 7554 070e 1B       		.uleb128 0x1b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 166


 7555 070f 6900     		.ascii	"i\000"
 7556 0711 01       		.byte	0x1
 7557 0712 9605     		.2byte	0x596
 7558 0714 94000000 		.4byte	0x94
 7559 0718 02       		.uleb128 0x2
 7560 0719 91       		.byte	0x91
 7561 071a 74       		.sleb128 -12
 7562 071b 00       		.byte	0
 7563 071c 00       		.byte	0
 7564 071d 19       		.uleb128 0x19
 7565 071e 06060000 		.4byte	.LASF104
 7566 0722 01       		.byte	0x1
 7567 0723 9E05     		.2byte	0x59e
 7568 0725 00000000 		.4byte	.LFB74
 7569 0729 54010000 		.4byte	.LFE74-.LFB74
 7570 072d 01       		.uleb128 0x1
 7571 072e 9C       		.byte	0x9c
 7572 072f 90070000 		.4byte	0x790
 7573 0733 15       		.uleb128 0x15
 7574 0734 0B020000 		.4byte	.LASF105
 7575 0738 01       		.byte	0x1
 7576 0739 AE05     		.2byte	0x5ae
 7577 073b C3000000 		.4byte	0xc3
 7578 073f 02       		.uleb128 0x2
 7579 0740 91       		.byte	0x91
 7580 0741 72       		.sleb128 -14
 7581 0742 12       		.uleb128 0x12
 7582 0743 0C000000 		.4byte	.LBB21
 7583 0747 40000000 		.4byte	.LBE21-.LBB21
 7584 074b 5D070000 		.4byte	0x75d
 7585 074f 1B       		.uleb128 0x1b
 7586 0750 6900     		.ascii	"i\000"
 7587 0752 01       		.byte	0x1
 7588 0753 A205     		.2byte	0x5a2
 7589 0755 94000000 		.4byte	0x94
 7590 0759 02       		.uleb128 0x2
 7591 075a 91       		.byte	0x91
 7592 075b 74       		.sleb128 -12
 7593 075c 00       		.byte	0
 7594 075d 12       		.uleb128 0x12
 7595 075e 50000000 		.4byte	.LBB22
 7596 0762 2A000000 		.4byte	.LBE22-.LBB22
 7597 0766 78070000 		.4byte	0x778
 7598 076a 1B       		.uleb128 0x1b
 7599 076b 6900     		.ascii	"i\000"
 7600 076d 01       		.byte	0x1
 7601 076e AF05     		.2byte	0x5af
 7602 0770 94000000 		.4byte	0x94
 7603 0774 02       		.uleb128 0x2
 7604 0775 91       		.byte	0x91
 7605 0776 6C       		.sleb128 -20
 7606 0777 00       		.byte	0
 7607 0778 14       		.uleb128 0x14
 7608 0779 9E000000 		.4byte	.LBB23
 7609 077d 98000000 		.4byte	.LBE23-.LBB23
 7610 0781 1B       		.uleb128 0x1b
 7611 0782 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 167


 7612 0784 01       		.byte	0x1
 7613 0785 B705     		.2byte	0x5b7
 7614 0787 94000000 		.4byte	0x94
 7615 078b 02       		.uleb128 0x2
 7616 078c 91       		.byte	0x91
 7617 078d 68       		.sleb128 -24
 7618 078e 00       		.byte	0
 7619 078f 00       		.byte	0
 7620 0790 18       		.uleb128 0x18
 7621 0791 20040000 		.4byte	.LASF107
 7622 0795 01       		.byte	0x1
 7623 0796 C105     		.2byte	0x5c1
 7624 0798 00000000 		.4byte	.LFB75
 7625 079c A0000000 		.4byte	.LFE75-.LFB75
 7626 07a0 01       		.uleb128 0x1
 7627 07a1 9C       		.byte	0x9c
 7628 07a2 19       		.uleb128 0x19
 7629 07a3 36060000 		.4byte	.LASF108
 7630 07a7 01       		.byte	0x1
 7631 07a8 D105     		.2byte	0x5d1
 7632 07aa 00000000 		.4byte	.LFB76
 7633 07ae BC000000 		.4byte	.LFE76-.LFB76
 7634 07b2 01       		.uleb128 0x1
 7635 07b3 9C       		.byte	0x9c
 7636 07b4 D0070000 		.4byte	0x7d0
 7637 07b8 14       		.uleb128 0x14
 7638 07b9 0C000000 		.4byte	.LBB24
 7639 07bd 9C000000 		.4byte	.LBE24-.LBB24
 7640 07c1 1B       		.uleb128 0x1b
 7641 07c2 6900     		.ascii	"i\000"
 7642 07c4 01       		.byte	0x1
 7643 07c5 D505     		.2byte	0x5d5
 7644 07c7 94000000 		.4byte	0x94
 7645 07cb 02       		.uleb128 0x2
 7646 07cc 91       		.byte	0x91
 7647 07cd 74       		.sleb128 -12
 7648 07ce 00       		.byte	0
 7649 07cf 00       		.byte	0
 7650 07d0 18       		.uleb128 0x18
 7651 07d1 18000000 		.4byte	.LASF109
 7652 07d5 01       		.byte	0x1
 7653 07d6 E005     		.2byte	0x5e0
 7654 07d8 00000000 		.4byte	.LFB77
 7655 07dc 20000000 		.4byte	.LFE77-.LFB77
 7656 07e0 01       		.uleb128 0x1
 7657 07e1 9C       		.byte	0x9c
 7658 07e2 19       		.uleb128 0x19
 7659 07e3 73060000 		.4byte	.LASF110
 7660 07e7 01       		.byte	0x1
 7661 07e8 E805     		.2byte	0x5e8
 7662 07ea 00000000 		.4byte	.LFB78
 7663 07ee C4010000 		.4byte	.LFE78-.LFB78
 7664 07f2 01       		.uleb128 0x1
 7665 07f3 9C       		.byte	0x9c
 7666 07f4 1F080000 		.4byte	0x81f
 7667 07f8 15       		.uleb128 0x15
 7668 07f9 4C070000 		.4byte	.LASF111
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 168


 7669 07fd 01       		.byte	0x1
 7670 07fe EA05     		.2byte	0x5ea
 7671 0800 94000000 		.4byte	0x94
 7672 0804 02       		.uleb128 0x2
 7673 0805 91       		.byte	0x91
 7674 0806 6C       		.sleb128 -20
 7675 0807 14       		.uleb128 0x14
 7676 0808 0A000000 		.4byte	.LBB25
 7677 080c 38000000 		.4byte	.LBE25-.LBB25
 7678 0810 1B       		.uleb128 0x1b
 7679 0811 6900     		.ascii	"i\000"
 7680 0813 01       		.byte	0x1
 7681 0814 EB05     		.2byte	0x5eb
 7682 0816 94000000 		.4byte	0x94
 7683 081a 02       		.uleb128 0x2
 7684 081b 91       		.byte	0x91
 7685 081c 68       		.sleb128 -24
 7686 081d 00       		.byte	0
 7687 081e 00       		.byte	0
 7688 081f 19       		.uleb128 0x19
 7689 0820 E4030000 		.4byte	.LASF112
 7690 0824 01       		.byte	0x1
 7691 0825 1F06     		.2byte	0x61f
 7692 0827 00000000 		.4byte	.LFB79
 7693 082b 54010000 		.4byte	.LFE79-.LFB79
 7694 082f 01       		.uleb128 0x1
 7695 0830 9C       		.byte	0x9c
 7696 0831 5C080000 		.4byte	0x85c
 7697 0835 15       		.uleb128 0x15
 7698 0836 43090000 		.4byte	.LASF113
 7699 083a 01       		.byte	0x1
 7700 083b 2106     		.2byte	0x621
 7701 083d 94000000 		.4byte	0x94
 7702 0841 02       		.uleb128 0x2
 7703 0842 91       		.byte	0x91
 7704 0843 6C       		.sleb128 -20
 7705 0844 14       		.uleb128 0x14
 7706 0845 0A000000 		.4byte	.LBB26
 7707 0849 3C000000 		.4byte	.LBE26-.LBB26
 7708 084d 1B       		.uleb128 0x1b
 7709 084e 6900     		.ascii	"i\000"
 7710 0850 01       		.byte	0x1
 7711 0851 2206     		.2byte	0x622
 7712 0853 94000000 		.4byte	0x94
 7713 0857 02       		.uleb128 0x2
 7714 0858 91       		.byte	0x91
 7715 0859 68       		.sleb128 -24
 7716 085a 00       		.byte	0
 7717 085b 00       		.byte	0
 7718 085c 1D       		.uleb128 0x1d
 7719 085d 6A010000 		.4byte	.LASF114
 7720 0861 09       		.byte	0x9
 7721 0862 1207     		.2byte	0x712
 7722 0864 68080000 		.4byte	0x868
 7723 0868 08       		.uleb128 0x8
 7724 0869 CE000000 		.4byte	0xce
 7725 086d 1E       		.uleb128 0x1e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 169


 7726 086e 87050000 		.4byte	.LASF115
 7727 0872 0A       		.byte	0xa
 7728 0873 41       		.byte	0x41
 7729 0874 D9000000 		.4byte	0xd9
 7730 0878 05       		.uleb128 0x5
 7731 0879 03       		.byte	0x3
 7732 087a 00000000 		.4byte	Decoder_1_Enabled
 7733 087e 1F       		.uleb128 0x1f
 7734 087f 9A080000 		.4byte	.LASF116
 7735 0883 07       		.byte	0x7
 7736 0884 60       		.byte	0x60
 7737 0885 94000000 		.4byte	0x94
 7738 0889 1F       		.uleb128 0x1f
 7739 088a B50A0000 		.4byte	.LASF117
 7740 088e 07       		.byte	0x7
 7741 088f 61       		.byte	0x61
 7742 0890 AD000000 		.4byte	0xad
 7743 0894 1F       		.uleb128 0x1f
 7744 0895 0C070000 		.4byte	.LASF118
 7745 0899 07       		.byte	0x7
 7746 089a 62       		.byte	0x62
 7747 089b AD000000 		.4byte	0xad
 7748 089f 1F       		.uleb128 0x1f
 7749 08a0 E4000000 		.4byte	.LASF119
 7750 08a4 07       		.byte	0x7
 7751 08a5 63       		.byte	0x63
 7752 08a6 AD000000 		.4byte	0xad
 7753 08aa 1F       		.uleb128 0x1f
 7754 08ab 86000000 		.4byte	.LASF120
 7755 08af 07       		.byte	0x7
 7756 08b0 64       		.byte	0x64
 7757 08b1 AD000000 		.4byte	0xad
 7758 08b5 1F       		.uleb128 0x1f
 7759 08b6 540A0000 		.4byte	.LASF121
 7760 08ba 07       		.byte	0x7
 7761 08bb 65       		.byte	0x65
 7762 08bc AD000000 		.4byte	0xad
 7763 08c0 1F       		.uleb128 0x1f
 7764 08c1 2C000000 		.4byte	.LASF122
 7765 08c5 07       		.byte	0x7
 7766 08c6 66       		.byte	0x66
 7767 08c7 AD000000 		.4byte	0xad
 7768 08cb 1F       		.uleb128 0x1f
 7769 08cc 5C050000 		.4byte	.LASF123
 7770 08d0 07       		.byte	0x7
 7771 08d1 67       		.byte	0x67
 7772 08d2 AD000000 		.4byte	0xad
 7773 08d6 1F       		.uleb128 0x1f
 7774 08d7 65090000 		.4byte	.LASF124
 7775 08db 07       		.byte	0x7
 7776 08dc 68       		.byte	0x68
 7777 08dd 18050000 		.4byte	0x518
 7778 08e1 1F       		.uleb128 0x1f
 7779 08e2 EF090000 		.4byte	.LASF125
 7780 08e6 07       		.byte	0x7
 7781 08e7 69       		.byte	0x69
 7782 08e8 AD000000 		.4byte	0xad
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 170


 7783 08ec 16       		.uleb128 0x16
 7784 08ed AD000000 		.4byte	0xad
 7785 08f1 08090000 		.4byte	0x908
 7786 08f5 17       		.uleb128 0x17
 7787 08f6 01010000 		.4byte	0x101
 7788 08fa 3F       		.byte	0x3f
 7789 08fb 17       		.uleb128 0x17
 7790 08fc 01010000 		.4byte	0x101
 7791 0900 0F       		.byte	0xf
 7792 0901 17       		.uleb128 0x17
 7793 0902 01010000 		.4byte	0x101
 7794 0906 08       		.byte	0x8
 7795 0907 00       		.byte	0
 7796 0908 1F       		.uleb128 0x1f
 7797 0909 88070000 		.4byte	.LASF126
 7798 090d 07       		.byte	0x7
 7799 090e 6A       		.byte	0x6a
 7800 090f EC080000 		.4byte	0x8ec
 7801 0913 16       		.uleb128 0x16
 7802 0914 AD000000 		.4byte	0xad
 7803 0918 2F090000 		.4byte	0x92f
 7804 091c 17       		.uleb128 0x17
 7805 091d 01010000 		.4byte	0x101
 7806 0921 3F       		.byte	0x3f
 7807 0922 17       		.uleb128 0x17
 7808 0923 01010000 		.4byte	0x101
 7809 0927 03       		.byte	0x3
 7810 0928 17       		.uleb128 0x17
 7811 0929 01010000 		.4byte	0x101
 7812 092d 09       		.byte	0x9
 7813 092e 00       		.byte	0
 7814 092f 1F       		.uleb128 0x1f
 7815 0930 8A090000 		.4byte	.LASF127
 7816 0934 07       		.byte	0x7
 7817 0935 6B       		.byte	0x6b
 7818 0936 13090000 		.4byte	0x913
 7819 093a 1F       		.uleb128 0x1f
 7820 093b E6010000 		.4byte	.LASF128
 7821 093f 07       		.byte	0x7
 7822 0940 6C       		.byte	0x6c
 7823 0941 AD000000 		.4byte	0xad
 7824 0945 16       		.uleb128 0x16
 7825 0946 AD000000 		.4byte	0xad
 7826 094a 5B090000 		.4byte	0x95b
 7827 094e 17       		.uleb128 0x17
 7828 094f 01010000 		.4byte	0x101
 7829 0953 3F       		.byte	0x3f
 7830 0954 17       		.uleb128 0x17
 7831 0955 01010000 		.4byte	0x101
 7832 0959 0D       		.byte	0xd
 7833 095a 00       		.byte	0
 7834 095b 1F       		.uleb128 0x1f
 7835 095c F8090000 		.4byte	.LASF129
 7836 0960 07       		.byte	0x7
 7837 0961 6E       		.byte	0x6e
 7838 0962 45090000 		.4byte	0x945
 7839 0966 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 171


 7840 0967 AD000000 		.4byte	0xad
 7841 096b 7C090000 		.4byte	0x97c
 7842 096f 17       		.uleb128 0x17
 7843 0970 01010000 		.4byte	0x101
 7844 0974 06       		.byte	0x6
 7845 0975 17       		.uleb128 0x17
 7846 0976 01010000 		.4byte	0x101
 7847 097a 09       		.byte	0x9
 7848 097b 00       		.byte	0
 7849 097c 1F       		.uleb128 0x1f
 7850 097d 55080000 		.4byte	.LASF130
 7851 0981 07       		.byte	0x7
 7852 0982 70       		.byte	0x70
 7853 0983 66090000 		.4byte	0x966
 7854 0987 16       		.uleb128 0x16
 7855 0988 AD000000 		.4byte	0xad
 7856 098c 97090000 		.4byte	0x997
 7857 0990 17       		.uleb128 0x17
 7858 0991 01010000 		.4byte	0x101
 7859 0995 3F       		.byte	0x3f
 7860 0996 00       		.byte	0
 7861 0997 1F       		.uleb128 0x1f
 7862 0998 43000000 		.4byte	.LASF131
 7863 099c 07       		.byte	0x7
 7864 099d 71       		.byte	0x71
 7865 099e 87090000 		.4byte	0x987
 7866 09a2 1F       		.uleb128 0x1f
 7867 09a3 B8070000 		.4byte	.LASF132
 7868 09a7 07       		.byte	0x7
 7869 09a8 72       		.byte	0x72
 7870 09a9 AD000000 		.4byte	0xad
 7871 09ad 1F       		.uleb128 0x1f
 7872 09ae E2060000 		.4byte	.LASF133
 7873 09b2 07       		.byte	0x7
 7874 09b3 73       		.byte	0x73
 7875 09b4 AD000000 		.4byte	0xad
 7876 09b8 1F       		.uleb128 0x1f
 7877 09b9 6A070000 		.4byte	.LASF134
 7878 09bd 07       		.byte	0x7
 7879 09be 74       		.byte	0x74
 7880 09bf AD000000 		.4byte	0xad
 7881 09c3 16       		.uleb128 0x16
 7882 09c4 C3000000 		.4byte	0xc3
 7883 09c8 D9090000 		.4byte	0x9d9
 7884 09cc 17       		.uleb128 0x17
 7885 09cd 01010000 		.4byte	0x101
 7886 09d1 01       		.byte	0x1
 7887 09d2 17       		.uleb128 0x17
 7888 09d3 01010000 		.4byte	0x101
 7889 09d7 0B       		.byte	0xb
 7890 09d8 00       		.byte	0
 7891 09d9 1F       		.uleb128 0x1f
 7892 09da 24020000 		.4byte	.LASF135
 7893 09de 07       		.byte	0x7
 7894 09df 75       		.byte	0x75
 7895 09e0 C3090000 		.4byte	0x9c3
 7896 09e4 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 172


 7897 09e5 C3000000 		.4byte	0xc3
 7898 09e9 F4090000 		.4byte	0x9f4
 7899 09ed 17       		.uleb128 0x17
 7900 09ee 01010000 		.4byte	0x101
 7901 09f2 09       		.byte	0x9
 7902 09f3 00       		.byte	0
 7903 09f4 1F       		.uleb128 0x1f
 7904 09f5 38050000 		.4byte	.LASF136
 7905 09f9 07       		.byte	0x7
 7906 09fa 76       		.byte	0x76
 7907 09fb E4090000 		.4byte	0x9e4
 7908 09ff 1F       		.uleb128 0x1f
 7909 0a00 99050000 		.4byte	.LASF137
 7910 0a04 07       		.byte	0x7
 7911 0a05 77       		.byte	0x77
 7912 0a06 E4090000 		.4byte	0x9e4
 7913 0a0a 16       		.uleb128 0x16
 7914 0a0b AD000000 		.4byte	0xad
 7915 0a0f 1A0A0000 		.4byte	0xa1a
 7916 0a13 17       		.uleb128 0x17
 7917 0a14 01010000 		.4byte	0x101
 7918 0a18 09       		.byte	0x9
 7919 0a19 00       		.byte	0
 7920 0a1a 1F       		.uleb128 0x1f
 7921 0a1b 92040000 		.4byte	.LASF138
 7922 0a1f 07       		.byte	0x7
 7923 0a20 78       		.byte	0x78
 7924 0a21 0A0A0000 		.4byte	0xa0a
 7925 0a25 1F       		.uleb128 0x1f
 7926 0a26 2A010000 		.4byte	.LASF139
 7927 0a2a 07       		.byte	0x7
 7928 0a2b 79       		.byte	0x79
 7929 0a2c E4090000 		.4byte	0x9e4
 7930 0a30 16       		.uleb128 0x16
 7931 0a31 13010000 		.4byte	0x113
 7932 0a35 400A0000 		.4byte	0xa40
 7933 0a39 17       		.uleb128 0x17
 7934 0a3a 01010000 		.4byte	0x101
 7935 0a3e 01       		.byte	0x1
 7936 0a3f 00       		.byte	0
 7937 0a40 20       		.uleb128 0x20
 7938 0a41 62617200 		.ascii	"bar\000"
 7939 0a45 07       		.byte	0x7
 7940 0a46 7A       		.byte	0x7a
 7941 0a47 4B0A0000 		.4byte	0xa4b
 7942 0a4b 08       		.uleb128 0x8
 7943 0a4c 300A0000 		.4byte	0xa30
 7944 0a50 1F       		.uleb128 0x1f
 7945 0a51 80080000 		.4byte	.LASF140
 7946 0a55 07       		.byte	0x7
 7947 0a56 7B       		.byte	0x7b
 7948 0a57 A2000000 		.4byte	0xa2
 7949 0a5b 1F       		.uleb128 0x1f
 7950 0a5c BE000000 		.4byte	.LASF141
 7951 0a60 07       		.byte	0x7
 7952 0a61 7C       		.byte	0x7c
 7953 0a62 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 173


 7954 0a66 1F       		.uleb128 0x1f
 7955 0a67 20050000 		.4byte	.LASF142
 7956 0a6b 07       		.byte	0x7
 7957 0a6c 7D       		.byte	0x7d
 7958 0a6d E5000000 		.4byte	0xe5
 7959 0a71 1F       		.uleb128 0x1f
 7960 0a72 B2090000 		.4byte	.LASF143
 7961 0a76 07       		.byte	0x7
 7962 0a77 7E       		.byte	0x7e
 7963 0a78 A2000000 		.4byte	0xa2
 7964 0a7c 1F       		.uleb128 0x1f
 7965 0a7d 94030000 		.4byte	.LASF144
 7966 0a81 07       		.byte	0x7
 7967 0a82 7F       		.byte	0x7f
 7968 0a83 94000000 		.4byte	0x94
 7969 0a87 1F       		.uleb128 0x1f
 7970 0a88 39040000 		.4byte	.LASF145
 7971 0a8c 07       		.byte	0x7
 7972 0a8d 80       		.byte	0x80
 7973 0a8e AD000000 		.4byte	0xad
 7974 0a92 1F       		.uleb128 0x1f
 7975 0a93 03070000 		.4byte	.LASF146
 7976 0a97 07       		.byte	0x7
 7977 0a98 81       		.byte	0x81
 7978 0a99 AD000000 		.4byte	0xad
 7979 0a9d 1F       		.uleb128 0x1f
 7980 0a9e E7070000 		.4byte	.LASF147
 7981 0aa2 07       		.byte	0x7
 7982 0aa3 82       		.byte	0x82
 7983 0aa4 18050000 		.4byte	0x518
 7984 0aa8 1F       		.uleb128 0x1f
 7985 0aa9 F8000000 		.4byte	.LASF148
 7986 0aad 07       		.byte	0x7
 7987 0aae 83       		.byte	0x83
 7988 0aaf AD000000 		.4byte	0xad
 7989 0ab3 1F       		.uleb128 0x1f
 7990 0ab4 890A0000 		.4byte	.LASF149
 7991 0ab8 07       		.byte	0x7
 7992 0ab9 84       		.byte	0x84
 7993 0aba AD000000 		.4byte	0xad
 7994 0abe 1F       		.uleb128 0x1f
 7995 0abf 71000000 		.4byte	.LASF150
 7996 0ac3 07       		.byte	0x7
 7997 0ac4 85       		.byte	0x85
 7998 0ac5 AD000000 		.4byte	0xad
 7999 0ac9 1F       		.uleb128 0x1f
 8000 0aca 53030000 		.4byte	.LASF151
 8001 0ace 07       		.byte	0x7
 8002 0acf 86       		.byte	0x86
 8003 0ad0 AD000000 		.4byte	0xad
 8004 0ad4 16       		.uleb128 0x16
 8005 0ad5 AD000000 		.4byte	0xad
 8006 0ad9 E40A0000 		.4byte	0xae4
 8007 0add 17       		.uleb128 0x17
 8008 0ade 01010000 		.4byte	0x101
 8009 0ae2 0F       		.byte	0xf
 8010 0ae3 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 174


 8011 0ae4 1F       		.uleb128 0x1f
 8012 0ae5 BD020000 		.4byte	.LASF152
 8013 0ae9 07       		.byte	0x7
 8014 0aea 87       		.byte	0x87
 8015 0aeb D40A0000 		.4byte	0xad4
 8016 0aef 16       		.uleb128 0x16
 8017 0af0 B8000000 		.4byte	0xb8
 8018 0af4 FF0A0000 		.4byte	0xaff
 8019 0af8 17       		.uleb128 0x17
 8020 0af9 01010000 		.4byte	0x101
 8021 0afd 0F       		.byte	0xf
 8022 0afe 00       		.byte	0
 8023 0aff 1F       		.uleb128 0x1f
 8024 0b00 6E020000 		.4byte	.LASF153
 8025 0b04 07       		.byte	0x7
 8026 0b05 88       		.byte	0x88
 8027 0b06 EF0A0000 		.4byte	0xaef
 8028 0b0a 1F       		.uleb128 0x1f
 8029 0b0b 76090000 		.4byte	.LASF154
 8030 0b0f 07       		.byte	0x7
 8031 0b10 89       		.byte	0x89
 8032 0b11 A2000000 		.4byte	0xa2
 8033 0b15 1F       		.uleb128 0x1f
 8034 0b16 6D030000 		.4byte	.LASF155
 8035 0b1a 07       		.byte	0x7
 8036 0b1b 8A       		.byte	0x8a
 8037 0b1c AD000000 		.4byte	0xad
 8038 0b20 16       		.uleb128 0x16
 8039 0b21 F3000000 		.4byte	0xf3
 8040 0b25 300B0000 		.4byte	0xb30
 8041 0b29 17       		.uleb128 0x17
 8042 0b2a 01010000 		.4byte	0x101
 8043 0b2e 0D       		.byte	0xd
 8044 0b2f 00       		.byte	0
 8045 0b30 1E       		.uleb128 0x1e
 8046 0b31 4B020000 		.4byte	.LASF156
 8047 0b35 01       		.byte	0x1
 8048 0b36 28       		.byte	0x28
 8049 0b37 200B0000 		.4byte	0xb20
 8050 0b3b 05       		.uleb128 0x5
 8051 0b3c 03       		.byte	0x3
 8052 0b3d 00000000 		.4byte	newPresetName
 8053 0b41 1F       		.uleb128 0x1f
 8054 0b42 F1050000 		.4byte	.LASF157
 8055 0b46 07       		.byte	0x7
 8056 0b47 8C       		.byte	0x8c
 8057 0b48 AD000000 		.4byte	0xad
 8058 0b4c 1F       		.uleb128 0x1f
 8059 0b4d 73040000 		.4byte	.LASF158
 8060 0b51 07       		.byte	0x7
 8061 0b52 8D       		.byte	0x8d
 8062 0b53 18050000 		.4byte	0x518
 8063 0b57 1F       		.uleb128 0x1f
 8064 0b58 AB090000 		.4byte	.LASF159
 8065 0b5c 08       		.byte	0x8
 8066 0b5d 77       		.byte	0x77
 8067 0b5e 0E030000 		.4byte	0x30e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 175


 8068 0b62 1E       		.uleb128 0x1e
 8069 0b63 8D010000 		.4byte	.LASF160
 8070 0b67 01       		.byte	0x1
 8071 0b68 26       		.byte	0x26
 8072 0b69 AD000000 		.4byte	0xad
 8073 0b6d 05       		.uleb128 0x5
 8074 0b6e 03       		.byte	0x3
 8075 0b6f 00000000 		.4byte	whichMacroPageIsActive
 8076 0b73 1E       		.uleb128 0x1e
 8077 0b74 390A0000 		.4byte	.LASF161
 8078 0b78 01       		.byte	0x1
 8079 0b79 10       		.byte	0x10
 8080 0b7a A2000000 		.4byte	0xa2
 8081 0b7e 05       		.uleb128 0x5
 8082 0b7f 03       		.byte	0x3
 8083 0b80 00000000 		.4byte	prevEncoderVal
 8084 0b84 1E       		.uleb128 0x1e
 8085 0b85 1E080000 		.4byte	.LASF162
 8086 0b89 01       		.byte	0x1
 8087 0b8a 11       		.byte	0x11
 8088 0b8b AD000000 		.4byte	0xad
 8089 0b8f 05       		.uleb128 0x5
 8090 0b90 03       		.byte	0x3
 8091 0b91 00000000 		.4byte	encoderWatch
 8092 0b95 16       		.uleb128 0x16
 8093 0b96 A2000000 		.4byte	0xa2
 8094 0b9a AB0B0000 		.4byte	0xbab
 8095 0b9e 17       		.uleb128 0x17
 8096 0b9f 01010000 		.4byte	0x101
 8097 0ba3 02       		.byte	0x2
 8098 0ba4 17       		.uleb128 0x17
 8099 0ba5 01010000 		.4byte	0x101
 8100 0ba9 01       		.byte	0x1
 8101 0baa 00       		.byte	0
 8102 0bab 1E       		.uleb128 0x1e
 8103 0bac A4010000 		.4byte	.LASF163
 8104 0bb0 01       		.byte	0x1
 8105 0bb1 13       		.byte	0x13
 8106 0bb2 950B0000 		.4byte	0xb95
 8107 0bb6 05       		.uleb128 0x5
 8108 0bb7 03       		.byte	0x3
 8109 0bb8 00000000 		.4byte	menuPosition
 8110 0bbc 1E       		.uleb128 0x1e
 8111 0bbd 50010000 		.4byte	.LASF164
 8112 0bc1 01       		.byte	0x1
 8113 0bc2 15       		.byte	0x15
 8114 0bc3 AD000000 		.4byte	0xad
 8115 0bc7 05       		.uleb128 0x5
 8116 0bc8 03       		.byte	0x3
 8117 0bc9 00000000 		.4byte	semitonesOrCents
 8118 0bcd 1E       		.uleb128 0x1e
 8119 0bce 59020000 		.4byte	.LASF165
 8120 0bd2 01       		.byte	0x1
 8121 0bd3 16       		.byte	0x16
 8122 0bd4 AD000000 		.4byte	0xad
 8123 0bd8 05       		.uleb128 0x5
 8124 0bd9 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 176


 8125 0bda 00000000 		.4byte	editUp
 8126 0bde 1E       		.uleb128 0x1e
 8127 0bdf 44020000 		.4byte	.LASF166
 8128 0be3 01       		.byte	0x1
 8129 0be4 17       		.byte	0x17
 8130 0be5 AD000000 		.4byte	0xad
 8131 0be9 05       		.uleb128 0x5
 8132 0bea 03       		.byte	0x3
 8133 0beb 00000000 		.4byte	oct1Up
 8134 0bef 1E       		.uleb128 0x1e
 8135 0bf0 9C090000 		.4byte	.LASF167
 8136 0bf4 01       		.byte	0x1
 8137 0bf5 18       		.byte	0x18
 8138 0bf6 AD000000 		.4byte	0xad
 8139 0bfa 05       		.uleb128 0x5
 8140 0bfb 03       		.byte	0x3
 8141 0bfc 00000000 		.4byte	oct4Up
 8142 0c00 1E       		.uleb128 0x1e
 8143 0c01 AC030000 		.4byte	.LASF168
 8144 0c05 01       		.byte	0x1
 8145 0c06 19       		.byte	0x19
 8146 0c07 AD000000 		.4byte	0xad
 8147 0c0b 05       		.uleb128 0x5
 8148 0c0c 03       		.byte	0x3
 8149 0c0d 00000000 		.4byte	encoderUp
 8150 0c11 1E       		.uleb128 0x1e
 8151 0c12 26070000 		.4byte	.LASF169
 8152 0c16 01       		.byte	0x1
 8153 0c17 1A       		.byte	0x1a
 8154 0c18 AD000000 		.4byte	0xad
 8155 0c1c 05       		.uleb128 0x5
 8156 0c1d 03       		.byte	0x3
 8157 0c1e 00000000 		.4byte	button1Up
 8158 0c22 1E       		.uleb128 0x1e
 8159 0c23 A6070000 		.4byte	.LASF170
 8160 0c27 01       		.byte	0x1
 8161 0c28 1B       		.byte	0x1b
 8162 0c29 AD000000 		.4byte	0xad
 8163 0c2d 05       		.uleb128 0x5
 8164 0c2e 03       		.byte	0x3
 8165 0c2f 00000000 		.4byte	button2Up
 8166 0c33 1E       		.uleb128 0x1e
 8167 0c34 D1030000 		.4byte	.LASF171
 8168 0c38 01       		.byte	0x1
 8169 0c39 1C       		.byte	0x1c
 8170 0c3a AD000000 		.4byte	0xad
 8171 0c3e 05       		.uleb128 0x5
 8172 0c3f 03       		.byte	0x3
 8173 0c40 00000000 		.4byte	button3Up
 8174 0c44 1E       		.uleb128 0x1e
 8175 0c45 46010000 		.4byte	.LASF172
 8176 0c49 01       		.byte	0x1
 8177 0c4a 1D       		.byte	0x1d
 8178 0c4b AD000000 		.4byte	0xad
 8179 0c4f 05       		.uleb128 0x5
 8180 0c50 03       		.byte	0x3
 8181 0c51 00000000 		.4byte	button4Up
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 177


 8182 0c55 1E       		.uleb128 0x1e
 8183 0c56 940A0000 		.4byte	.LASF173
 8184 0c5a 01       		.byte	0x1
 8185 0c5b 1E       		.byte	0x1e
 8186 0c5c AD000000 		.4byte	0xad
 8187 0c60 05       		.uleb128 0x5
 8188 0c61 03       		.byte	0x3
 8189 0c62 00000000 		.4byte	shiftUp
 8190 0c66 1E       		.uleb128 0x1e
 8191 0c67 C9050000 		.4byte	.LASF174
 8192 0c6b 01       		.byte	0x1
 8193 0c6c 1F       		.byte	0x1f
 8194 0c6d AD000000 		.4byte	0xad
 8195 0c71 05       		.uleb128 0x5
 8196 0c72 03       		.byte	0x3
 8197 0c73 00000000 		.4byte	editingSliderRepString
 8198 0c77 1E       		.uleb128 0x1e
 8199 0c78 230A0000 		.4byte	.LASF175
 8200 0c7c 01       		.byte	0x1
 8201 0c7d 20       		.byte	0x20
 8202 0c7e AD000000 		.4byte	0xad
 8203 0c82 05       		.uleb128 0x5
 8204 0c83 03       		.byte	0x3
 8205 0c84 00000000 		.4byte	whichMidiSendSelected
 8206 0c88 1E       		.uleb128 0x1e
 8207 0c89 E9040000 		.4byte	.LASF176
 8208 0c8d 01       		.byte	0x1
 8209 0c8e 21       		.byte	0x21
 8210 0c8f AD000000 		.4byte	0xad
 8211 0c93 05       		.uleb128 0x5
 8212 0c94 03       		.byte	0x3
 8213 0c95 00000000 		.4byte	whichFirmwareUpdateSelected
 8214 0c99 1E       		.uleb128 0x1e
 8215 0c9a 9C0A0000 		.4byte	.LASF177
 8216 0c9e 01       		.byte	0x1
 8217 0c9f 22       		.byte	0x22
 8218 0ca0 AD000000 		.4byte	0xad
 8219 0ca4 05       		.uleb128 0x5
 8220 0ca5 03       		.byte	0x3
 8221 0ca6 00000000 		.4byte	controlsDisplayed
 8222 0caa 1E       		.uleb128 0x1e
 8223 0cab EF010000 		.4byte	.LASF178
 8224 0caf 01       		.byte	0x1
 8225 0cb0 24       		.byte	0x24
 8226 0cb1 AD000000 		.4byte	0xad
 8227 0cb5 05       		.uleb128 0x5
 8228 0cb6 03       		.byte	0x3
 8229 0cb7 00000000 		.4byte	presetStoreStage
 8230 0cbb 16       		.uleb128 0x16
 8231 0cbc CB0C0000 		.4byte	0xccb
 8232 0cc0 CB0C0000 		.4byte	0xccb
 8233 0cc4 17       		.uleb128 0x17
 8234 0cc5 01010000 		.4byte	0x101
 8235 0cc9 02       		.byte	0x2
 8236 0cca 00       		.byte	0
 8237 0ccb 07       		.uleb128 0x7
 8238 0ccc 08010000 		.4byte	0x108
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 178


 8239 0cd0 21       		.uleb128 0x21
 8240 0cd1 BE060000 		.4byte	.LASF179
 8241 0cd5 01       		.byte	0x1
 8242 0cd6 1A02     		.2byte	0x21a
 8243 0cd8 E20C0000 		.4byte	0xce2
 8244 0cdc 05       		.uleb128 0x5
 8245 0cdd 03       		.byte	0x3
 8246 0cde 00000000 		.4byte	calibrationNames
 8247 0ce2 07       		.uleb128 0x7
 8248 0ce3 BB0C0000 		.4byte	0xcbb
 8249 0ce7 16       		.uleb128 0x16
 8250 0ce8 CB0C0000 		.4byte	0xccb
 8251 0cec F70C0000 		.4byte	0xcf7
 8252 0cf0 17       		.uleb128 0x17
 8253 0cf1 01010000 		.4byte	0x101
 8254 0cf5 03       		.byte	0x3
 8255 0cf6 00       		.byte	0
 8256 0cf7 21       		.uleb128 0x21
 8257 0cf8 05040000 		.4byte	.LASF180
 8258 0cfc 01       		.byte	0x1
 8259 0cfd 1B02     		.2byte	0x21b
 8260 0cff 090D0000 		.4byte	0xd09
 8261 0d03 05       		.uleb128 0x5
 8262 0d04 03       		.byte	0x3
 8263 0d05 00000000 		.4byte	mainMenuNames
 8264 0d09 07       		.uleb128 0x7
 8265 0d0a E70C0000 		.4byte	0xce7
 8266 0d0e 16       		.uleb128 0x16
 8267 0d0f CB0C0000 		.4byte	0xccb
 8268 0d13 1E0D0000 		.4byte	0xd1e
 8269 0d17 17       		.uleb128 0x17
 8270 0d18 01010000 		.4byte	0x101
 8271 0d1c 08       		.byte	0x8
 8272 0d1d 00       		.byte	0
 8273 0d1e 21       		.uleb128 0x21
 8274 0d1f 05010000 		.4byte	.LASF181
 8275 0d23 01       		.byte	0x1
 8276 0d24 1C02     		.2byte	0x21c
 8277 0d26 300D0000 		.4byte	0xd30
 8278 0d2a 05       		.uleb128 0x5
 8279 0d2b 03       		.byte	0x3
 8280 0d2c 00000000 		.4byte	settingsNames
 8281 0d30 07       		.uleb128 0x7
 8282 0d31 0E0D0000 		.4byte	0xd0e
 8283 0d35 21       		.uleb128 0x21
 8284 0d36 B8050000 		.4byte	.LASF182
 8285 0d3a 01       		.byte	0x1
 8286 0d3b 1D02     		.2byte	0x21d
 8287 0d3d AD000000 		.4byte	0xad
 8288 0d41 05       		.uleb128 0x5
 8289 0d42 03       		.byte	0x3
 8290 0d43 00000000 		.4byte	numMainMenuItems
 8291 0d47 21       		.uleb128 0x21
 8292 0d48 A1040000 		.4byte	.LASF183
 8293 0d4c 01       		.byte	0x1
 8294 0d4d 1E02     		.2byte	0x21e
 8295 0d4f AD000000 		.4byte	0xad
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 179


 8296 0d53 05       		.uleb128 0x5
 8297 0d54 03       		.byte	0x3
 8298 0d55 00000000 		.4byte	numCalibrationItems
 8299 0d59 21       		.uleb128 0x21
 8300 0d5a 1F060000 		.4byte	.LASF184
 8301 0d5e 01       		.byte	0x1
 8302 0d5f 1F02     		.2byte	0x21f
 8303 0d61 AD000000 		.4byte	0xad
 8304 0d65 05       		.uleb128 0x5
 8305 0d66 03       		.byte	0x3
 8306 0d67 00000000 		.4byte	numSettingsItems
 8307 0d6b 21       		.uleb128 0x21
 8308 0d6c 57040000 		.4byte	.LASF185
 8309 0d70 01       		.byte	0x1
 8310 0d71 6E02     		.2byte	0x26e
 8311 0d73 AD000000 		.4byte	0xad
 8312 0d77 05       		.uleb128 0x5
 8313 0d78 03       		.byte	0x3
 8314 0d79 00000000 		.4byte	fretToCalibrate
 8315 0d7d 16       		.uleb128 0x16
 8316 0d7e AD000000 		.4byte	0xad
 8317 0d82 8D0D0000 		.4byte	0xd8d
 8318 0d86 17       		.uleb128 0x17
 8319 0d87 01010000 		.4byte	0x101
 8320 0d8b 0B       		.byte	0xb
 8321 0d8c 00       		.byte	0
 8322 0d8d 21       		.uleb128 0x21
 8323 0d8e 83040000 		.4byte	.LASF186
 8324 0d92 01       		.byte	0x1
 8325 0d93 6F02     		.2byte	0x26f
 8326 0d95 7D0D0000 		.4byte	0xd7d
 8327 0d99 05       		.uleb128 0x5
 8328 0d9a 03       		.byte	0x3
 8329 0d9b 00000000 		.4byte	whichFretArray
 8330 0d9f 00       		.byte	0
 8331              		.section	.debug_abbrev,"",%progbits
 8332              	.Ldebug_abbrev0:
 8333 0000 01       		.uleb128 0x1
 8334 0001 11       		.uleb128 0x11
 8335 0002 01       		.byte	0x1
 8336 0003 25       		.uleb128 0x25
 8337 0004 0E       		.uleb128 0xe
 8338 0005 13       		.uleb128 0x13
 8339 0006 0B       		.uleb128 0xb
 8340 0007 03       		.uleb128 0x3
 8341 0008 0E       		.uleb128 0xe
 8342 0009 1B       		.uleb128 0x1b
 8343 000a 0E       		.uleb128 0xe
 8344 000b 55       		.uleb128 0x55
 8345 000c 17       		.uleb128 0x17
 8346 000d 11       		.uleb128 0x11
 8347 000e 01       		.uleb128 0x1
 8348 000f 10       		.uleb128 0x10
 8349 0010 17       		.uleb128 0x17
 8350 0011 00       		.byte	0
 8351 0012 00       		.byte	0
 8352 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 180


 8353 0014 16       		.uleb128 0x16
 8354 0015 00       		.byte	0
 8355 0016 03       		.uleb128 0x3
 8356 0017 0E       		.uleb128 0xe
 8357 0018 3A       		.uleb128 0x3a
 8358 0019 0B       		.uleb128 0xb
 8359 001a 3B       		.uleb128 0x3b
 8360 001b 0B       		.uleb128 0xb
 8361 001c 49       		.uleb128 0x49
 8362 001d 13       		.uleb128 0x13
 8363 001e 00       		.byte	0
 8364 001f 00       		.byte	0
 8365 0020 03       		.uleb128 0x3
 8366 0021 24       		.uleb128 0x24
 8367 0022 00       		.byte	0
 8368 0023 0B       		.uleb128 0xb
 8369 0024 0B       		.uleb128 0xb
 8370 0025 3E       		.uleb128 0x3e
 8371 0026 0B       		.uleb128 0xb
 8372 0027 03       		.uleb128 0x3
 8373 0028 0E       		.uleb128 0xe
 8374 0029 00       		.byte	0
 8375 002a 00       		.byte	0
 8376 002b 04       		.uleb128 0x4
 8377 002c 24       		.uleb128 0x24
 8378 002d 00       		.byte	0
 8379 002e 0B       		.uleb128 0xb
 8380 002f 0B       		.uleb128 0xb
 8381 0030 3E       		.uleb128 0x3e
 8382 0031 0B       		.uleb128 0xb
 8383 0032 03       		.uleb128 0x3
 8384 0033 08       		.uleb128 0x8
 8385 0034 00       		.byte	0
 8386 0035 00       		.byte	0
 8387 0036 05       		.uleb128 0x5
 8388 0037 16       		.uleb128 0x16
 8389 0038 00       		.byte	0
 8390 0039 03       		.uleb128 0x3
 8391 003a 0E       		.uleb128 0xe
 8392 003b 3A       		.uleb128 0x3a
 8393 003c 0B       		.uleb128 0xb
 8394 003d 3B       		.uleb128 0x3b
 8395 003e 05       		.uleb128 0x5
 8396 003f 49       		.uleb128 0x49
 8397 0040 13       		.uleb128 0x13
 8398 0041 00       		.byte	0
 8399 0042 00       		.byte	0
 8400 0043 06       		.uleb128 0x6
 8401 0044 0F       		.uleb128 0xf
 8402 0045 00       		.byte	0
 8403 0046 0B       		.uleb128 0xb
 8404 0047 0B       		.uleb128 0xb
 8405 0048 49       		.uleb128 0x49
 8406 0049 13       		.uleb128 0x13
 8407 004a 00       		.byte	0
 8408 004b 00       		.byte	0
 8409 004c 07       		.uleb128 0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 181


 8410 004d 26       		.uleb128 0x26
 8411 004e 00       		.byte	0
 8412 004f 49       		.uleb128 0x49
 8413 0050 13       		.uleb128 0x13
 8414 0051 00       		.byte	0
 8415 0052 00       		.byte	0
 8416 0053 08       		.uleb128 0x8
 8417 0054 35       		.uleb128 0x35
 8418 0055 00       		.byte	0
 8419 0056 49       		.uleb128 0x49
 8420 0057 13       		.uleb128 0x13
 8421 0058 00       		.byte	0
 8422 0059 00       		.byte	0
 8423 005a 09       		.uleb128 0x9
 8424 005b 04       		.uleb128 0x4
 8425 005c 01       		.byte	0x1
 8426 005d 03       		.uleb128 0x3
 8427 005e 0E       		.uleb128 0xe
 8428 005f 0B       		.uleb128 0xb
 8429 0060 0B       		.uleb128 0xb
 8430 0061 49       		.uleb128 0x49
 8431 0062 13       		.uleb128 0x13
 8432 0063 3A       		.uleb128 0x3a
 8433 0064 0B       		.uleb128 0xb
 8434 0065 3B       		.uleb128 0x3b
 8435 0066 0B       		.uleb128 0xb
 8436 0067 01       		.uleb128 0x1
 8437 0068 13       		.uleb128 0x13
 8438 0069 00       		.byte	0
 8439 006a 00       		.byte	0
 8440 006b 0A       		.uleb128 0xa
 8441 006c 28       		.uleb128 0x28
 8442 006d 00       		.byte	0
 8443 006e 03       		.uleb128 0x3
 8444 006f 0E       		.uleb128 0xe
 8445 0070 1C       		.uleb128 0x1c
 8446 0071 0B       		.uleb128 0xb
 8447 0072 00       		.byte	0
 8448 0073 00       		.byte	0
 8449 0074 0B       		.uleb128 0xb
 8450 0075 13       		.uleb128 0x13
 8451 0076 01       		.byte	0x1
 8452 0077 0B       		.uleb128 0xb
 8453 0078 0B       		.uleb128 0xb
 8454 0079 3A       		.uleb128 0x3a
 8455 007a 0B       		.uleb128 0xb
 8456 007b 3B       		.uleb128 0x3b
 8457 007c 0B       		.uleb128 0xb
 8458 007d 01       		.uleb128 0x1
 8459 007e 13       		.uleb128 0x13
 8460 007f 00       		.byte	0
 8461 0080 00       		.byte	0
 8462 0081 0C       		.uleb128 0xc
 8463 0082 0D       		.uleb128 0xd
 8464 0083 00       		.byte	0
 8465 0084 03       		.uleb128 0x3
 8466 0085 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 182


 8467 0086 3A       		.uleb128 0x3a
 8468 0087 0B       		.uleb128 0xb
 8469 0088 3B       		.uleb128 0x3b
 8470 0089 0B       		.uleb128 0xb
 8471 008a 49       		.uleb128 0x49
 8472 008b 13       		.uleb128 0x13
 8473 008c 38       		.uleb128 0x38
 8474 008d 0B       		.uleb128 0xb
 8475 008e 00       		.byte	0
 8476 008f 00       		.byte	0
 8477 0090 0D       		.uleb128 0xd
 8478 0091 13       		.uleb128 0x13
 8479 0092 01       		.byte	0x1
 8480 0093 03       		.uleb128 0x3
 8481 0094 0E       		.uleb128 0xe
 8482 0095 0B       		.uleb128 0xb
 8483 0096 0B       		.uleb128 0xb
 8484 0097 3A       		.uleb128 0x3a
 8485 0098 0B       		.uleb128 0xb
 8486 0099 3B       		.uleb128 0x3b
 8487 009a 0B       		.uleb128 0xb
 8488 009b 01       		.uleb128 0x1
 8489 009c 13       		.uleb128 0x13
 8490 009d 00       		.byte	0
 8491 009e 00       		.byte	0
 8492 009f 0E       		.uleb128 0xe
 8493 00a0 16       		.uleb128 0x16
 8494 00a1 00       		.byte	0
 8495 00a2 03       		.uleb128 0x3
 8496 00a3 08       		.uleb128 0x8
 8497 00a4 3A       		.uleb128 0x3a
 8498 00a5 0B       		.uleb128 0xb
 8499 00a6 3B       		.uleb128 0x3b
 8500 00a7 0B       		.uleb128 0xb
 8501 00a8 49       		.uleb128 0x49
 8502 00a9 13       		.uleb128 0x13
 8503 00aa 00       		.byte	0
 8504 00ab 00       		.byte	0
 8505 00ac 0F       		.uleb128 0xf
 8506 00ad 28       		.uleb128 0x28
 8507 00ae 00       		.byte	0
 8508 00af 03       		.uleb128 0x3
 8509 00b0 08       		.uleb128 0x8
 8510 00b1 1C       		.uleb128 0x1c
 8511 00b2 0B       		.uleb128 0xb
 8512 00b3 00       		.byte	0
 8513 00b4 00       		.byte	0
 8514 00b5 10       		.uleb128 0x10
 8515 00b6 2E       		.uleb128 0x2e
 8516 00b7 01       		.byte	0x1
 8517 00b8 3F       		.uleb128 0x3f
 8518 00b9 19       		.uleb128 0x19
 8519 00ba 03       		.uleb128 0x3
 8520 00bb 0E       		.uleb128 0xe
 8521 00bc 3A       		.uleb128 0x3a
 8522 00bd 0B       		.uleb128 0xb
 8523 00be 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 183


 8524 00bf 0B       		.uleb128 0xb
 8525 00c0 27       		.uleb128 0x27
 8526 00c1 19       		.uleb128 0x19
 8527 00c2 11       		.uleb128 0x11
 8528 00c3 01       		.uleb128 0x1
 8529 00c4 12       		.uleb128 0x12
 8530 00c5 06       		.uleb128 0x6
 8531 00c6 40       		.uleb128 0x40
 8532 00c7 18       		.uleb128 0x18
 8533 00c8 9642     		.uleb128 0x2116
 8534 00ca 19       		.uleb128 0x19
 8535 00cb 01       		.uleb128 0x1
 8536 00cc 13       		.uleb128 0x13
 8537 00cd 00       		.byte	0
 8538 00ce 00       		.byte	0
 8539 00cf 11       		.uleb128 0x11
 8540 00d0 34       		.uleb128 0x34
 8541 00d1 00       		.byte	0
 8542 00d2 03       		.uleb128 0x3
 8543 00d3 0E       		.uleb128 0xe
 8544 00d4 3A       		.uleb128 0x3a
 8545 00d5 0B       		.uleb128 0xb
 8546 00d6 3B       		.uleb128 0x3b
 8547 00d7 0B       		.uleb128 0xb
 8548 00d8 49       		.uleb128 0x49
 8549 00d9 13       		.uleb128 0x13
 8550 00da 02       		.uleb128 0x2
 8551 00db 18       		.uleb128 0x18
 8552 00dc 00       		.byte	0
 8553 00dd 00       		.byte	0
 8554 00de 12       		.uleb128 0x12
 8555 00df 0B       		.uleb128 0xb
 8556 00e0 01       		.byte	0x1
 8557 00e1 11       		.uleb128 0x11
 8558 00e2 01       		.uleb128 0x1
 8559 00e3 12       		.uleb128 0x12
 8560 00e4 06       		.uleb128 0x6
 8561 00e5 01       		.uleb128 0x1
 8562 00e6 13       		.uleb128 0x13
 8563 00e7 00       		.byte	0
 8564 00e8 00       		.byte	0
 8565 00e9 13       		.uleb128 0x13
 8566 00ea 34       		.uleb128 0x34
 8567 00eb 00       		.byte	0
 8568 00ec 03       		.uleb128 0x3
 8569 00ed 08       		.uleb128 0x8
 8570 00ee 3A       		.uleb128 0x3a
 8571 00ef 0B       		.uleb128 0xb
 8572 00f0 3B       		.uleb128 0x3b
 8573 00f1 0B       		.uleb128 0xb
 8574 00f2 49       		.uleb128 0x49
 8575 00f3 13       		.uleb128 0x13
 8576 00f4 02       		.uleb128 0x2
 8577 00f5 18       		.uleb128 0x18
 8578 00f6 00       		.byte	0
 8579 00f7 00       		.byte	0
 8580 00f8 14       		.uleb128 0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 184


 8581 00f9 0B       		.uleb128 0xb
 8582 00fa 01       		.byte	0x1
 8583 00fb 11       		.uleb128 0x11
 8584 00fc 01       		.uleb128 0x1
 8585 00fd 12       		.uleb128 0x12
 8586 00fe 06       		.uleb128 0x6
 8587 00ff 00       		.byte	0
 8588 0100 00       		.byte	0
 8589 0101 15       		.uleb128 0x15
 8590 0102 34       		.uleb128 0x34
 8591 0103 00       		.byte	0
 8592 0104 03       		.uleb128 0x3
 8593 0105 0E       		.uleb128 0xe
 8594 0106 3A       		.uleb128 0x3a
 8595 0107 0B       		.uleb128 0xb
 8596 0108 3B       		.uleb128 0x3b
 8597 0109 05       		.uleb128 0x5
 8598 010a 49       		.uleb128 0x49
 8599 010b 13       		.uleb128 0x13
 8600 010c 02       		.uleb128 0x2
 8601 010d 18       		.uleb128 0x18
 8602 010e 00       		.byte	0
 8603 010f 00       		.byte	0
 8604 0110 16       		.uleb128 0x16
 8605 0111 01       		.uleb128 0x1
 8606 0112 01       		.byte	0x1
 8607 0113 49       		.uleb128 0x49
 8608 0114 13       		.uleb128 0x13
 8609 0115 01       		.uleb128 0x1
 8610 0116 13       		.uleb128 0x13
 8611 0117 00       		.byte	0
 8612 0118 00       		.byte	0
 8613 0119 17       		.uleb128 0x17
 8614 011a 21       		.uleb128 0x21
 8615 011b 00       		.byte	0
 8616 011c 49       		.uleb128 0x49
 8617 011d 13       		.uleb128 0x13
 8618 011e 2F       		.uleb128 0x2f
 8619 011f 0B       		.uleb128 0xb
 8620 0120 00       		.byte	0
 8621 0121 00       		.byte	0
 8622 0122 18       		.uleb128 0x18
 8623 0123 2E       		.uleb128 0x2e
 8624 0124 00       		.byte	0
 8625 0125 3F       		.uleb128 0x3f
 8626 0126 19       		.uleb128 0x19
 8627 0127 03       		.uleb128 0x3
 8628 0128 0E       		.uleb128 0xe
 8629 0129 3A       		.uleb128 0x3a
 8630 012a 0B       		.uleb128 0xb
 8631 012b 3B       		.uleb128 0x3b
 8632 012c 05       		.uleb128 0x5
 8633 012d 27       		.uleb128 0x27
 8634 012e 19       		.uleb128 0x19
 8635 012f 11       		.uleb128 0x11
 8636 0130 01       		.uleb128 0x1
 8637 0131 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 185


 8638 0132 06       		.uleb128 0x6
 8639 0133 40       		.uleb128 0x40
 8640 0134 18       		.uleb128 0x18
 8641 0135 9642     		.uleb128 0x2116
 8642 0137 19       		.uleb128 0x19
 8643 0138 00       		.byte	0
 8644 0139 00       		.byte	0
 8645 013a 19       		.uleb128 0x19
 8646 013b 2E       		.uleb128 0x2e
 8647 013c 01       		.byte	0x1
 8648 013d 3F       		.uleb128 0x3f
 8649 013e 19       		.uleb128 0x19
 8650 013f 03       		.uleb128 0x3
 8651 0140 0E       		.uleb128 0xe
 8652 0141 3A       		.uleb128 0x3a
 8653 0142 0B       		.uleb128 0xb
 8654 0143 3B       		.uleb128 0x3b
 8655 0144 05       		.uleb128 0x5
 8656 0145 27       		.uleb128 0x27
 8657 0146 19       		.uleb128 0x19
 8658 0147 11       		.uleb128 0x11
 8659 0148 01       		.uleb128 0x1
 8660 0149 12       		.uleb128 0x12
 8661 014a 06       		.uleb128 0x6
 8662 014b 40       		.uleb128 0x40
 8663 014c 18       		.uleb128 0x18
 8664 014d 9642     		.uleb128 0x2116
 8665 014f 19       		.uleb128 0x19
 8666 0150 01       		.uleb128 0x1
 8667 0151 13       		.uleb128 0x13
 8668 0152 00       		.byte	0
 8669 0153 00       		.byte	0
 8670 0154 1A       		.uleb128 0x1a
 8671 0155 05       		.uleb128 0x5
 8672 0156 00       		.byte	0
 8673 0157 03       		.uleb128 0x3
 8674 0158 0E       		.uleb128 0xe
 8675 0159 3A       		.uleb128 0x3a
 8676 015a 0B       		.uleb128 0xb
 8677 015b 3B       		.uleb128 0x3b
 8678 015c 05       		.uleb128 0x5
 8679 015d 49       		.uleb128 0x49
 8680 015e 13       		.uleb128 0x13
 8681 015f 02       		.uleb128 0x2
 8682 0160 18       		.uleb128 0x18
 8683 0161 00       		.byte	0
 8684 0162 00       		.byte	0
 8685 0163 1B       		.uleb128 0x1b
 8686 0164 34       		.uleb128 0x34
 8687 0165 00       		.byte	0
 8688 0166 03       		.uleb128 0x3
 8689 0167 08       		.uleb128 0x8
 8690 0168 3A       		.uleb128 0x3a
 8691 0169 0B       		.uleb128 0xb
 8692 016a 3B       		.uleb128 0x3b
 8693 016b 05       		.uleb128 0x5
 8694 016c 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 186


 8695 016d 13       		.uleb128 0x13
 8696 016e 02       		.uleb128 0x2
 8697 016f 18       		.uleb128 0x18
 8698 0170 00       		.byte	0
 8699 0171 00       		.byte	0
 8700 0172 1C       		.uleb128 0x1c
 8701 0173 2E       		.uleb128 0x2e
 8702 0174 00       		.byte	0
 8703 0175 3F       		.uleb128 0x3f
 8704 0176 19       		.uleb128 0x19
 8705 0177 03       		.uleb128 0x3
 8706 0178 0E       		.uleb128 0xe
 8707 0179 3A       		.uleb128 0x3a
 8708 017a 0B       		.uleb128 0xb
 8709 017b 3B       		.uleb128 0x3b
 8710 017c 05       		.uleb128 0x5
 8711 017d 11       		.uleb128 0x11
 8712 017e 01       		.uleb128 0x1
 8713 017f 12       		.uleb128 0x12
 8714 0180 06       		.uleb128 0x6
 8715 0181 40       		.uleb128 0x40
 8716 0182 18       		.uleb128 0x18
 8717 0183 9642     		.uleb128 0x2116
 8718 0185 19       		.uleb128 0x19
 8719 0186 00       		.byte	0
 8720 0187 00       		.byte	0
 8721 0188 1D       		.uleb128 0x1d
 8722 0189 34       		.uleb128 0x34
 8723 018a 00       		.byte	0
 8724 018b 03       		.uleb128 0x3
 8725 018c 0E       		.uleb128 0xe
 8726 018d 3A       		.uleb128 0x3a
 8727 018e 0B       		.uleb128 0xb
 8728 018f 3B       		.uleb128 0x3b
 8729 0190 05       		.uleb128 0x5
 8730 0191 49       		.uleb128 0x49
 8731 0192 13       		.uleb128 0x13
 8732 0193 3F       		.uleb128 0x3f
 8733 0194 19       		.uleb128 0x19
 8734 0195 3C       		.uleb128 0x3c
 8735 0196 19       		.uleb128 0x19
 8736 0197 00       		.byte	0
 8737 0198 00       		.byte	0
 8738 0199 1E       		.uleb128 0x1e
 8739 019a 34       		.uleb128 0x34
 8740 019b 00       		.byte	0
 8741 019c 03       		.uleb128 0x3
 8742 019d 0E       		.uleb128 0xe
 8743 019e 3A       		.uleb128 0x3a
 8744 019f 0B       		.uleb128 0xb
 8745 01a0 3B       		.uleb128 0x3b
 8746 01a1 0B       		.uleb128 0xb
 8747 01a2 49       		.uleb128 0x49
 8748 01a3 13       		.uleb128 0x13
 8749 01a4 3F       		.uleb128 0x3f
 8750 01a5 19       		.uleb128 0x19
 8751 01a6 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 187


 8752 01a7 18       		.uleb128 0x18
 8753 01a8 00       		.byte	0
 8754 01a9 00       		.byte	0
 8755 01aa 1F       		.uleb128 0x1f
 8756 01ab 34       		.uleb128 0x34
 8757 01ac 00       		.byte	0
 8758 01ad 03       		.uleb128 0x3
 8759 01ae 0E       		.uleb128 0xe
 8760 01af 3A       		.uleb128 0x3a
 8761 01b0 0B       		.uleb128 0xb
 8762 01b1 3B       		.uleb128 0x3b
 8763 01b2 0B       		.uleb128 0xb
 8764 01b3 49       		.uleb128 0x49
 8765 01b4 13       		.uleb128 0x13
 8766 01b5 3F       		.uleb128 0x3f
 8767 01b6 19       		.uleb128 0x19
 8768 01b7 3C       		.uleb128 0x3c
 8769 01b8 19       		.uleb128 0x19
 8770 01b9 00       		.byte	0
 8771 01ba 00       		.byte	0
 8772 01bb 20       		.uleb128 0x20
 8773 01bc 34       		.uleb128 0x34
 8774 01bd 00       		.byte	0
 8775 01be 03       		.uleb128 0x3
 8776 01bf 08       		.uleb128 0x8
 8777 01c0 3A       		.uleb128 0x3a
 8778 01c1 0B       		.uleb128 0xb
 8779 01c2 3B       		.uleb128 0x3b
 8780 01c3 0B       		.uleb128 0xb
 8781 01c4 49       		.uleb128 0x49
 8782 01c5 13       		.uleb128 0x13
 8783 01c6 3F       		.uleb128 0x3f
 8784 01c7 19       		.uleb128 0x19
 8785 01c8 3C       		.uleb128 0x3c
 8786 01c9 19       		.uleb128 0x19
 8787 01ca 00       		.byte	0
 8788 01cb 00       		.byte	0
 8789 01cc 21       		.uleb128 0x21
 8790 01cd 34       		.uleb128 0x34
 8791 01ce 00       		.byte	0
 8792 01cf 03       		.uleb128 0x3
 8793 01d0 0E       		.uleb128 0xe
 8794 01d1 3A       		.uleb128 0x3a
 8795 01d2 0B       		.uleb128 0xb
 8796 01d3 3B       		.uleb128 0x3b
 8797 01d4 05       		.uleb128 0x5
 8798 01d5 49       		.uleb128 0x49
 8799 01d6 13       		.uleb128 0x13
 8800 01d7 3F       		.uleb128 0x3f
 8801 01d8 19       		.uleb128 0x19
 8802 01d9 02       		.uleb128 0x2
 8803 01da 18       		.uleb128 0x18
 8804 01db 00       		.byte	0
 8805 01dc 00       		.byte	0
 8806 01dd 00       		.byte	0
 8807              		.section	.debug_aranges,"",%progbits
 8808 0000 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 188


 8809 0004 0200     		.2byte	0x2
 8810 0006 00000000 		.4byte	.Ldebug_info0
 8811 000a 04       		.byte	0x4
 8812 000b 00       		.byte	0
 8813 000c 0000     		.2byte	0
 8814 000e 0000     		.2byte	0
 8815 0010 00000000 		.4byte	.LFB64
 8816 0014 040E0000 		.4byte	.LFE64-.LFB64
 8817 0018 00000000 		.4byte	.LFB65
 8818 001c B4000000 		.4byte	.LFE65-.LFB65
 8819 0020 00000000 		.4byte	.LFB66
 8820 0024 C0010000 		.4byte	.LFE66-.LFB66
 8821 0028 00000000 		.4byte	.LFB67
 8822 002c AC120000 		.4byte	.LFE67-.LFB67
 8823 0030 00000000 		.4byte	.LFB68
 8824 0034 9C000000 		.4byte	.LFE68-.LFB68
 8825 0038 00000000 		.4byte	.LFB69
 8826 003c 9C000000 		.4byte	.LFE69-.LFB69
 8827 0040 00000000 		.4byte	.LFB70
 8828 0044 7C000000 		.4byte	.LFE70-.LFB70
 8829 0048 00000000 		.4byte	.LFB71
 8830 004c 7C000000 		.4byte	.LFE71-.LFB71
 8831 0050 00000000 		.4byte	.LFB72
 8832 0054 48000000 		.4byte	.LFE72-.LFB72
 8833 0058 00000000 		.4byte	.LFB73
 8834 005c B0000000 		.4byte	.LFE73-.LFB73
 8835 0060 00000000 		.4byte	.LFB74
 8836 0064 54010000 		.4byte	.LFE74-.LFB74
 8837 0068 00000000 		.4byte	.LFB75
 8838 006c A0000000 		.4byte	.LFE75-.LFB75
 8839 0070 00000000 		.4byte	.LFB76
 8840 0074 BC000000 		.4byte	.LFE76-.LFB76
 8841 0078 00000000 		.4byte	.LFB77
 8842 007c 20000000 		.4byte	.LFE77-.LFB77
 8843 0080 00000000 		.4byte	.LFB78
 8844 0084 C4010000 		.4byte	.LFE78-.LFB78
 8845 0088 00000000 		.4byte	.LFB79
 8846 008c 54010000 		.4byte	.LFE79-.LFB79
 8847 0090 00000000 		.4byte	0
 8848 0094 00000000 		.4byte	0
 8849              		.section	.debug_ranges,"",%progbits
 8850              	.Ldebug_ranges0:
 8851 0000 00000000 		.4byte	.LFB64
 8852 0004 040E0000 		.4byte	.LFE64
 8853 0008 00000000 		.4byte	.LFB65
 8854 000c B4000000 		.4byte	.LFE65
 8855 0010 00000000 		.4byte	.LFB66
 8856 0014 C0010000 		.4byte	.LFE66
 8857 0018 00000000 		.4byte	.LFB67
 8858 001c AC120000 		.4byte	.LFE67
 8859 0020 00000000 		.4byte	.LFB68
 8860 0024 9C000000 		.4byte	.LFE68
 8861 0028 00000000 		.4byte	.LFB69
 8862 002c 9C000000 		.4byte	.LFE69
 8863 0030 00000000 		.4byte	.LFB70
 8864 0034 7C000000 		.4byte	.LFE70
 8865 0038 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 189


 8866 003c 7C000000 		.4byte	.LFE71
 8867 0040 00000000 		.4byte	.LFB72
 8868 0044 48000000 		.4byte	.LFE72
 8869 0048 00000000 		.4byte	.LFB73
 8870 004c B0000000 		.4byte	.LFE73
 8871 0050 00000000 		.4byte	.LFB74
 8872 0054 54010000 		.4byte	.LFE74
 8873 0058 00000000 		.4byte	.LFB75
 8874 005c A0000000 		.4byte	.LFE75
 8875 0060 00000000 		.4byte	.LFB76
 8876 0064 BC000000 		.4byte	.LFE76
 8877 0068 00000000 		.4byte	.LFB77
 8878 006c 20000000 		.4byte	.LFE77
 8879 0070 00000000 		.4byte	.LFB78
 8880 0074 C4010000 		.4byte	.LFE78
 8881 0078 00000000 		.4byte	.LFB79
 8882 007c 54010000 		.4byte	.LFE79
 8883 0080 00000000 		.4byte	0
 8884 0084 00000000 		.4byte	0
 8885              		.section	.debug_line,"",%progbits
 8886              	.Ldebug_line0:
 8887 0000 F3070000 		.section	.debug_str,"MS",%progbits,1
 8887      02008401 
 8887      00000201 
 8887      FB0E0D00 
 8887      01010101 
 8888              	.LASF35:
 8889 0000 54726164 		.ascii	"TraditionalPedalSumMenu\000"
 8889      6974696F 
 8889      6E616C50 
 8889      6564616C 
 8889      53756D4D 
 8890              	.LASF109:
 8891 0018 65786974 		.ascii	"exitPresetStoreMenu\000"
 8891      50726573 
 8891      65745374 
 8891      6F72654D 
 8891      656E7500 
 8892              	.LASF122:
 8893 002c 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 8893      6F4F4C45 
 8893      44576169 
 8893      74696E67 
 8893      546F5365 
 8894              	.LASF131:
 8895 0043 70726573 		.ascii	"presetAlreadyDisplayed\000"
 8895      6574416C 
 8895      72656164 
 8895      79446973 
 8895      706C6179 
 8896              	.LASF89:
 8897 005a 64656164 		.ascii	"deadZoneRepresentation\000"
 8897      5A6F6E65 
 8897      52657072 
 8897      6573656E 
 8897      74617469 
 8898              	.LASF150:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 190


 8899 0071 6D696469 		.ascii	"midiBarSendOn\000"
 8899      42617253 
 8899      656E644F 
 8899      6E00
 8900              	.LASF42:
 8901 007f 68656967 		.ascii	"height\000"
 8901      687400
 8902              	.LASF120:
 8903 0086 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 8903      4F4C4544 
 8903      57616974 
 8903      696E6754 
 8903      6F53656E 
 8904              	.LASF93:
 8905 009c 65786974 		.ascii	"exitEditModeMenu\000"
 8905      45646974 
 8905      4D6F6465 
 8905      4D656E75 
 8905      00
 8906              	.LASF64:
 8907 00ad 5F637034 		.ascii	"_cp437\000"
 8907      333700
 8908              	.LASF1:
 8909 00b4 5F5F7569 		.ascii	"__uint8_t\000"
 8909      6E74385F 
 8909      7400
 8910              	.LASF141:
 8911 00be 7472616E 		.ascii	"transposeCents\000"
 8911      73706F73 
 8911      6543656E 
 8911      747300
 8912              	.LASF76:
 8913 00cd 64697265 		.ascii	"direction\000"
 8913      6374696F 
 8913      6E00
 8914              	.LASF102:
 8915 00d7 656E7465 		.ascii	"enterPressed\000"
 8915      72507265 
 8915      73736564 
 8915      00
 8916              	.LASF119:
 8917 00e4 74726164 		.ascii	"traditionalPedalAdd\000"
 8917      6974696F 
 8917      6E616C50 
 8917      6564616C 
 8917      41646400 
 8918              	.LASF148:
 8919 00f8 6F637461 		.ascii	"octaveAction\000"
 8919      76654163 
 8919      74696F6E 
 8919      00
 8920              	.LASF181:
 8921 0105 73657474 		.ascii	"settingsNames\000"
 8921      696E6773 
 8921      4E616D65 
 8921      7300
 8922              	.LASF12:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 191


 8923 0113 6C6F6E67 		.ascii	"long long unsigned int\000"
 8923      206C6F6E 
 8923      6720756E 
 8923      7369676E 
 8923      65642069 
 8924              	.LASF139:
 8925 012a 616E676C 		.ascii	"angle\000"
 8925      6500
 8926              	.LASF39:
 8927 0130 4E696C4D 		.ascii	"NilMenu\000"
 8927      656E7500 
 8928              	.LASF85:
 8929 0138 7468654D 		.ascii	"theMultiplier\000"
 8929      756C7469 
 8929      706C6965 
 8929      7200
 8930              	.LASF172:
 8931 0146 62757474 		.ascii	"button4Up\000"
 8931      6F6E3455 
 8931      7000
 8932              	.LASF164:
 8933 0150 73656D69 		.ascii	"semitonesOrCents\000"
 8933      746F6E65 
 8933      734F7243 
 8933      656E7473 
 8933      00
 8934              	.LASF0:
 8935 0161 5F5F696E 		.ascii	"__int8_t\000"
 8935      74385F74 
 8935      00
 8936              	.LASF114:
 8937 016a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8937      52784275 
 8937      66666572 
 8937      00
 8938              	.LASF25:
 8939 0177 4D61696E 		.ascii	"MainMenu\000"
 8939      4D656E75 
 8939      00
 8940              	.LASF36:
 8941 0180 4D696469 		.ascii	"MidiSendMenu\000"
 8941      53656E64 
 8941      4D656E75 
 8941      00
 8942              	.LASF160:
 8943 018d 77686963 		.ascii	"whichMacroPageIsActive\000"
 8943      684D6163 
 8943      726F5061 
 8943      67654973 
 8943      41637469 
 8944              	.LASF163:
 8945 01a4 6D656E75 		.ascii	"menuPosition\000"
 8945      506F7369 
 8945      74696F6E 
 8945      00
 8946              	.LASF11:
 8947 01b1 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 192


 8947      206C6F6E 
 8947      6720696E 
 8947      7400
 8948              	.LASF2:
 8949 01bf 7369676E 		.ascii	"signed char\000"
 8949      65642063 
 8949      68617200 
 8950              	.LASF66:
 8951 01cb 666F6E74 		.ascii	"fontHeight\000"
 8951      48656967 
 8951      687400
 8952              	.LASF74:
 8953 01d6 466F7572 		.ascii	"FourthLine\000"
 8953      74684C69 
 8953      6E6500
 8954              	.LASF188:
 8955 01e1 75692E63 		.ascii	"ui.c\000"
 8955      00
 8956              	.LASF128:
 8957 01e6 70617463 		.ascii	"patchNum\000"
 8957      684E756D 
 8957      00
 8958              	.LASF178:
 8959 01ef 70726573 		.ascii	"presetStoreStage\000"
 8959      65745374 
 8959      6F726553 
 8959      74616765 
 8959      00
 8960              	.LASF90:
 8961 0200 736C6964 		.ascii	"sliderTemp\000"
 8961      65725465 
 8961      6D7000
 8962              	.LASF105:
 8963 020b 70656461 		.ascii	"pedal_inverted_byte\000"
 8963      6C5F696E 
 8963      76657274 
 8963      65645F62 
 8963      79746500 
 8964              	.LASF63:
 8965 021f 77726170 		.ascii	"wrap\000"
 8965      00
 8966              	.LASF135:
 8967 0224 66726574 		.ascii	"fretMeasurements\000"
 8967      4D656173 
 8967      7572656D 
 8967      656E7473 
 8967      00
 8968              	.LASF49:
 8969 0235 66697273 		.ascii	"first\000"
 8969      7400
 8970              	.LASF9:
 8971 023b 6C6F6E67 		.ascii	"long int\000"
 8971      20696E74 
 8971      00
 8972              	.LASF166:
 8973 0244 6F637431 		.ascii	"oct1Up\000"
 8973      557000
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 193


 8974              	.LASF156:
 8975 024b 6E657750 		.ascii	"newPresetName\000"
 8975      72657365 
 8975      744E616D 
 8975      6500
 8976              	.LASF165:
 8977 0259 65646974 		.ascii	"editUp\000"
 8977      557000
 8978              	.LASF97:
 8979 0260 74656D70 		.ascii	"tempPos\000"
 8979      506F7300 
 8980              	.LASF19:
 8981 0268 75696E74 		.ascii	"uint8\000"
 8981      3800
 8982              	.LASF153:
 8983 026e 70726576 		.ascii	"prevMacroKnobValues\000"
 8983      4D616372 
 8983      6F4B6E6F 
 8983      6256616C 
 8983      75657300 
 8984              	.LASF17:
 8985 0282 75696E74 		.ascii	"uint16_t\000"
 8985      31365F74 
 8985      00
 8986              	.LASF21:
 8987 028b 646F7562 		.ascii	"double\000"
 8987      6C6500
 8988              	.LASF80:
 8989 0292 456E7465 		.ascii	"Enter\000"
 8989      7200
 8990              	.LASF27:
 8991 0298 43616C69 		.ascii	"CalibrationMenu\000"
 8991      62726174 
 8991      696F6E4D 
 8991      656E7500 
 8992              	.LASF100:
 8993 02a8 646F776E 		.ascii	"downPressed\000"
 8993      50726573 
 8993      73656400 
 8994              	.LASF67:
 8995 02b4 666F6E74 		.ascii	"fontDesc\000"
 8995      44657363 
 8995      00
 8996              	.LASF152:
 8997 02bd 6B6E6F62 		.ascii	"knobFrozen\000"
 8997      46726F7A 
 8997      656E00
 8998              	.LASF191:
 8999 02c8 61637469 		.ascii	"action\000"
 8999      6F6E00
 9000              	.LASF189:
 9001 02cf 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 9001      73657273 
 9001      5C4A6566 
 9001      66536E79 
 9001      6465725C 
 9002 02fd 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 194


 9002      355F656C 
 9002      65637472 
 9002      6F737465 
 9002      656C5F73 
 9003 032f 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 9003      5F50534F 
 9003      43335F35 
 9003      5F546865 
 9003      726D6973 
 9004              	.LASF78:
 9005 034d 52696768 		.ascii	"Right\000"
 9005      7400
 9006              	.LASF151:
 9007 0353 73656E64 		.ascii	"sendFirmwareUpdateRequest\000"
 9007      4669726D 
 9007      77617265 
 9007      55706461 
 9007      74655265 
 9008              	.LASF155:
 9009 036d 73656E64 		.ascii	"sendLocalPresetStoreCommand\000"
 9009      4C6F6361 
 9009      6C507265 
 9009      73657453 
 9009      746F7265 
 9010              	.LASF96:
 9011 0389 77686174 		.ascii	"whatToDraw\000"
 9011      546F4472 
 9011      617700
 9012              	.LASF144:
 9013 0394 70726576 		.ascii	"prevOctave\000"
 9013      4F637461 
 9013      766500
 9014              	.LASF13:
 9015 039f 756E7369 		.ascii	"unsigned int\000"
 9015      676E6564 
 9015      20696E74 
 9015      00
 9016              	.LASF168:
 9017 03ac 656E636F 		.ascii	"encoderUp\000"
 9017      64657255 
 9017      7000
 9018              	.LASF60:
 9019 03b6 74657874 		.ascii	"textsize\000"
 9019      73697A65 
 9019      00
 9020              	.LASF10:
 9021 03bf 6C6F6E67 		.ascii	"long unsigned int\000"
 9021      20756E73 
 9021      69676E65 
 9021      6420696E 
 9021      7400
 9022              	.LASF171:
 9023 03d1 62757474 		.ascii	"button3Up\000"
 9023      6F6E3355 
 9023      7000
 9024              	.LASF46:
 9025 03db 47465867 		.ascii	"GFXglyph\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 195


 9025      6C797068 
 9025      00
 9026              	.LASF112:
 9027 03e4 64697370 		.ascii	"displayCurrentControlNames\000"
 9027      6C617943 
 9027      75727265 
 9027      6E74436F 
 9027      6E74726F 
 9028              	.LASF48:
 9029 03ff 676C7970 		.ascii	"glyph\000"
 9029      6800
 9030              	.LASF180:
 9031 0405 6D61696E 		.ascii	"mainMenuNames\000"
 9031      4D656E75 
 9031      4E616D65 
 9031      7300
 9032              	.LASF55:
 9033 0413 5F776964 		.ascii	"_width\000"
 9033      746800
 9034              	.LASF41:
 9035 041a 77696474 		.ascii	"width\000"
 9035      6800
 9036              	.LASF107:
 9037 0420 656E7465 		.ascii	"enterFretCalibrationMode\000"
 9037      72467265 
 9037      7443616C 
 9037      69627261 
 9037      74696F6E 
 9038              	.LASF145:
 9039 0439 6475616C 		.ascii	"dualSlider\000"
 9039      536C6964 
 9039      657200
 9040              	.LASF7:
 9041 0444 73686F72 		.ascii	"short unsigned int\000"
 9041      7420756E 
 9041      7369676E 
 9041      65642069 
 9041      6E7400
 9042              	.LASF185:
 9043 0457 66726574 		.ascii	"fretToCalibrate\000"
 9043      546F4361 
 9043      6C696272 
 9043      61746500 
 9044              	.LASF84:
 9045 0467 63757272 		.ascii	"currentChar\000"
 9045      656E7443 
 9045      68617200 
 9046              	.LASF158:
 9047 0473 6E65636B 		.ascii	"neckPreset\000"
 9047      50726573 
 9047      657400
 9048              	.LASF50:
 9049 047e 6C617374 		.ascii	"last\000"
 9049      00
 9050              	.LASF186:
 9051 0483 77686963 		.ascii	"whichFretArray\000"
 9051      68467265 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 196


 9051      74417272 
 9051      617900
 9052              	.LASF138:
 9053 0492 70656461 		.ascii	"pedal_inverted\000"
 9053      6C5F696E 
 9053      76657274 
 9053      656400
 9054              	.LASF183:
 9055 04a1 6E756D43 		.ascii	"numCalibrationItems\000"
 9055      616C6962 
 9055      72617469 
 9055      6F6E4974 
 9055      656D7300 
 9056              	.LASF94:
 9057 04b5 74656D70 		.ascii	"tempByte\000"
 9057      42797465 
 9057      00
 9058              	.LASF71:
 9059 04be 46697273 		.ascii	"FirstLine\000"
 9059      744C696E 
 9059      6500
 9060              	.LASF91:
 9061 04c8 736C6964 		.ascii	"sliderRepDisplay\000"
 9061      65725265 
 9061      70446973 
 9061      706C6179 
 9061      00
 9062              	.LASF75:
 9063 04d9 4E696C4C 		.ascii	"NilLine\000"
 9063      696E6500 
 9064              	.LASF52:
 9065 04e1 47465866 		.ascii	"GFXfont\000"
 9065      6F6E7400 
 9066              	.LASF176:
 9067 04e9 77686963 		.ascii	"whichFirmwareUpdateSelected\000"
 9067      68466972 
 9067      6D776172 
 9067      65557064 
 9067      61746553 
 9068              	.LASF31:
 9069 0505 5472616E 		.ascii	"TransposeMenu\000"
 9069      73706F73 
 9069      654D656E 
 9069      7500
 9070              	.LASF44:
 9071 0513 784F6666 		.ascii	"xOffset\000"
 9071      73657400 
 9072              	.LASF77:
 9073 051b 4C656674 		.ascii	"Left\000"
 9073      00
 9074              	.LASF142:
 9075 0520 7472616E 		.ascii	"transposeFloat\000"
 9075      73706F73 
 9075      65466C6F 
 9075      617400
 9076              	.LASF24:
 9077 052f 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 197


 9077      74797065 
 9077      00
 9078              	.LASF136:
 9079 0538 70656461 		.ascii	"pedals_low\000"
 9079      6C735F6C 
 9079      6F7700
 9080              	.LASF88:
 9081 0543 64656164 		.ascii	"deadZoneTemp\000"
 9081      5A6F6E65 
 9081      54656D70 
 9081      00
 9082              	.LASF23:
 9083 0550 6C6F6E67 		.ascii	"long double\000"
 9083      20646F75 
 9083      626C6500 
 9084              	.LASF123:
 9085 055c 6E65636B 		.ascii	"neckByte\000"
 9085      42797465 
 9085      00
 9086              	.LASF59:
 9087 0565 63757273 		.ascii	"cursor_x\000"
 9087      6F725F78 
 9087      00
 9088              	.LASF33:
 9089 056e 44656164 		.ascii	"DeadzonesMenu\000"
 9089      7A6F6E65 
 9089      734D656E 
 9089      7500
 9090              	.LASF72:
 9091 057c 5365636F 		.ascii	"SecondLine\000"
 9091      6E644C69 
 9091      6E6500
 9092              	.LASF115:
 9093 0587 4465636F 		.ascii	"Decoder_1_Enabled\000"
 9093      6465725F 
 9093      315F456E 
 9093      61626C65 
 9093      6400
 9094              	.LASF137:
 9095 0599 70656461 		.ascii	"pedals_high\000"
 9095      6C735F68 
 9095      69676800 
 9096              	.LASF190:
 9097 05a5 5F474658 		.ascii	"_GFX\000"
 9097      00
 9098              	.LASF87:
 9099 05aa 766F6C75 		.ascii	"volumeIntTemp\000"
 9099      6D65496E 
 9099      7454656D 
 9099      7000
 9100              	.LASF182:
 9101 05b8 6E756D4D 		.ascii	"numMainMenuItems\000"
 9101      61696E4D 
 9101      656E7549 
 9101      74656D73 
 9101      00
 9102              	.LASF174:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 198


 9103 05c9 65646974 		.ascii	"editingSliderRepString\000"
 9103      696E6753 
 9103      6C696465 
 9103      72526570 
 9103      53747269 
 9104              	.LASF32:
 9105 05e0 4F637461 		.ascii	"OctaveActionMenu\000"
 9105      76654163 
 9105      74696F6E 
 9105      4D656E75 
 9105      00
 9106              	.LASF157:
 9107 05f1 6B6E6F62 		.ascii	"knobPanelLightActive\000"
 9107      50616E65 
 9107      6C4C6967 
 9107      68744163 
 9107      74697665 
 9108              	.LASF104:
 9109 0606 65786974 		.ascii	"exitLeverCalibrationMode\000"
 9109      4C657665 
 9109      7243616C 
 9109      69627261 
 9109      74696F6E 
 9110              	.LASF184:
 9111 061f 6E756D53 		.ascii	"numSettingsItems\000"
 9111      65747469 
 9111      6E677349 
 9111      74656D73 
 9111      00
 9112              	.LASF20:
 9113 0630 666C6F61 		.ascii	"float\000"
 9113      7400
 9114              	.LASF108:
 9115 0636 65786974 		.ascii	"exitFretCalibrationMode\000"
 9115      46726574 
 9115      43616C69 
 9115      62726174 
 9115      696F6E4D 
 9116              	.LASF38:
 9117 064e 4669726D 		.ascii	"FirmwareUpdateMenu\000"
 9117      77617265 
 9117      55706461 
 9117      74654D65 
 9117      6E7500
 9118              	.LASF82:
 9119 0661 63757272 		.ascii	"currentEncoderVal\000"
 9119      656E7445 
 9119      6E636F64 
 9119      65725661 
 9119      6C00
 9120              	.LASF110:
 9121 0673 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 9121      6C617943 
 9121      75727265 
 9121      6E745072 
 9121      65736574 
 9122              	.LASF18:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 199


 9123 0697 696E7433 		.ascii	"int32_t\000"
 9123      325F7400 
 9124              	.LASF3:
 9125 069f 756E7369 		.ascii	"unsigned char\000"
 9125      676E6564 
 9125      20636861 
 9125      7200
 9126              	.LASF54:
 9127 06ad 48454947 		.ascii	"HEIGHT\000"
 9127      485400
 9128              	.LASF70:
 9129 06b4 5F4F4C45 		.ascii	"_OLEDLine\000"
 9129      444C696E 
 9129      6500
 9130              	.LASF179:
 9131 06be 63616C69 		.ascii	"calibrationNames\000"
 9131      62726174 
 9131      696F6E4E 
 9131      616D6573 
 9131      00
 9132              	.LASF43:
 9133 06cf 78416476 		.ascii	"xAdvance\000"
 9133      616E6365 
 9133      00
 9134              	.LASF5:
 9135 06d8 73686F72 		.ascii	"short int\000"
 9135      7420696E 
 9135      7400
 9136              	.LASF133:
 9137 06e2 66726574 		.ascii	"fretCalibrationMode\000"
 9137      43616C69 
 9137      62726174 
 9137      696F6E4D 
 9137      6F646500 
 9138              	.LASF99:
 9139 06f6 72696768 		.ascii	"rightPressed\000"
 9139      74507265 
 9139      73736564 
 9139      00
 9140              	.LASF146:
 9141 0703 64656164 		.ascii	"deadZone\000"
 9141      5A6F6E65 
 9141      00
 9142              	.LASF118:
 9143 070c 63757272 		.ascii	"currentCopedent\000"
 9143      656E7443 
 9143      6F706564 
 9143      656E7400 
 9144              	.LASF101:
 9145 071c 75705072 		.ascii	"upPressed\000"
 9145      65737365 
 9145      6400
 9146              	.LASF169:
 9147 0726 62757474 		.ascii	"button1Up\000"
 9147      6F6E3155 
 9147      7000
 9148              	.LASF73:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 200


 9149 0730 54686972 		.ascii	"ThirdLine\000"
 9149      644C696E 
 9149      6500
 9150              	.LASF106:
 9151 073a 656E7465 		.ascii	"enterEditModeMenu\000"
 9151      72456469 
 9151      744D6F64 
 9151      654D656E 
 9151      7500
 9152              	.LASF111:
 9153 074c 6D616372 		.ascii	"macroCheck\000"
 9153      6F436865 
 9153      636B00
 9154              	.LASF30:
 9155 0757 43616C69 		.ascii	"CalibrateFretsMenu\000"
 9155      62726174 
 9155      65467265 
 9155      74734D65 
 9155      6E7500
 9156              	.LASF134:
 9157 076a 6C657665 		.ascii	"leverCalibrationMode\000"
 9157      7243616C 
 9157      69627261 
 9157      74696F6E 
 9157      4D6F6465 
 9158              	.LASF51:
 9159 077f 79416476 		.ascii	"yAdvance\000"
 9159      616E6365 
 9159      00
 9160              	.LASF126:
 9161 0788 6D616372 		.ascii	"macroNamesArray\000"
 9161      6F4E616D 
 9161      65734172 
 9161      72617900 
 9162              	.LASF58:
 9163 0798 63757273 		.ascii	"cursor_y\000"
 9163      6F725F79 
 9163      00
 9164              	.LASF22:
 9165 07a1 63686172 		.ascii	"char\000"
 9165      00
 9166              	.LASF170:
 9167 07a6 62757474 		.ascii	"button2Up\000"
 9167      6F6E3255 
 9167      7000
 9168              	.LASF65:
 9169 07b0 67667846 		.ascii	"gfxFont\000"
 9169      6F6E7400 
 9170              	.LASF132:
 9171 07b8 77686963 		.ascii	"whichMacro\000"
 9171      684D6163 
 9171      726F00
 9172              	.LASF34:
 9173 07c3 536C6964 		.ascii	"SliderRepMenu\000"
 9173      65725265 
 9173      704D656E 
 9173      7500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 201


 9174              	.LASF6:
 9175 07d1 5F5F7569 		.ascii	"__uint16_t\000"
 9175      6E743136 
 9175      5F7400
 9176              	.LASF68:
 9177 07dc 6175746F 		.ascii	"autoscroll\000"
 9177      7363726F 
 9177      6C6C00
 9178              	.LASF147:
 9179 07e7 73747269 		.ascii	"stringRepresentation\000"
 9179      6E675265 
 9179      70726573 
 9179      656E7461 
 9179      74696F6E 
 9180              	.LASF69:
 9181 07fc 5F4D656E 		.ascii	"_MenuModes\000"
 9181      754D6F64 
 9181      657300
 9182              	.LASF79:
 9183 0807 446F776E 		.ascii	"Down\000"
 9183      00
 9184              	.LASF8:
 9185 080c 5F5F696E 		.ascii	"__int32_t\000"
 9185      7433325F 
 9185      7400
 9186              	.LASF16:
 9187 0816 696E7431 		.ascii	"int16_t\000"
 9187      365F7400 
 9188              	.LASF162:
 9189 081e 656E636F 		.ascii	"encoderWatch\000"
 9189      64657257 
 9189      61746368 
 9189      00
 9190              	.LASF95:
 9191 082b 6D656E75 		.ascii	"menuAction\000"
 9191      41637469 
 9191      6F6E00
 9192              	.LASF57:
 9193 0836 726F7461 		.ascii	"rotation\000"
 9193      74696F6E 
 9193      00
 9194              	.LASF81:
 9195 083f 74656D70 		.ascii	"tempButtons\000"
 9195      42757474 
 9195      6F6E7300 
 9196              	.LASF61:
 9197 084b 74657874 		.ascii	"textcolor\000"
 9197      636F6C6F 
 9197      7200
 9198              	.LASF130:
 9199 0855 636F7065 		.ascii	"copedentNamesArray\000"
 9199      64656E74 
 9199      4E616D65 
 9199      73417272 
 9199      617900
 9200              	.LASF83:
 9201 0868 70726573 		.ascii	"presetNumberToStoreTemp\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 202


 9201      65744E75 
 9201      6D626572 
 9201      546F5374 
 9201      6F726554 
 9202              	.LASF140:
 9203 0880 7472616E 		.ascii	"transposeSemitones\000"
 9203      73706F73 
 9203      6553656D 
 9203      69746F6E 
 9203      657300
 9204              	.LASF14:
 9205 0893 696E7438 		.ascii	"int8_t\000"
 9205      5F7400
 9206              	.LASF116:
 9207 089a 6F637461 		.ascii	"octave\000"
 9207      766500
 9208              	.LASF187:
 9209 08a1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 9209      43313120 
 9209      352E342E 
 9209      31203230 
 9209      31363036 
 9210 08d4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 9210      20726576 
 9210      6973696F 
 9210      6E203233 
 9210      37373135 
 9211 0907 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 9211      66756E63 
 9211      74696F6E 
 9211      2D736563 
 9211      74696F6E 
 9212              	.LASF29:
 9213 092f 43616C69 		.ascii	"CalibrateLeversMenu\000"
 9213      62726174 
 9213      654C6576 
 9213      6572734D 
 9213      656E7500 
 9214              	.LASF113:
 9215 0943 636F6E74 		.ascii	"controlCheck\000"
 9215      726F6C43 
 9215      6865636B 
 9215      00
 9216              	.LASF28:
 9217 0950 53657474 		.ascii	"SettingsMenu\000"
 9217      696E6773 
 9217      4D656E75 
 9217      00
 9218              	.LASF56:
 9219 095d 5F686569 		.ascii	"_height\000"
 9219      67687400 
 9220              	.LASF124:
 9221 0965 6E65636B 		.ascii	"necks\000"
 9221      7300
 9222              	.LASF37:
 9223 096b 566F6C75 		.ascii	"VolumeMenu\000"
 9223      6D654D65 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 203


 9223      6E7500
 9224              	.LASF154:
 9225 0976 70726573 		.ascii	"presetNumberToStore\000"
 9225      65744E75 
 9225      6D626572 
 9225      546F5374 
 9225      6F726500 
 9226              	.LASF127:
 9227 098a 636F6E74 		.ascii	"controlNamesArray\000"
 9227      726F6C4E 
 9227      616D6573 
 9227      41727261 
 9227      7900
 9228              	.LASF167:
 9229 099c 6F637434 		.ascii	"oct4Up\000"
 9229      557000
 9230              	.LASF15:
 9231 09a3 75696E74 		.ascii	"uint8_t\000"
 9231      385F7400 
 9232              	.LASF159:
 9233 09ab 74686547 		.ascii	"theGFX\000"
 9233      465800
 9234              	.LASF143:
 9235 09b2 766F6C75 		.ascii	"volumeInt\000"
 9235      6D65496E 
 9235      7400
 9236              	.LASF86:
 9237 09bc 61627354 		.ascii	"absTransposeFloat\000"
 9237      72616E73 
 9237      706F7365 
 9237      466C6F61 
 9237      7400
 9238              	.LASF47:
 9239 09ce 6269746D 		.ascii	"bitmap\000"
 9239      617000
 9240              	.LASF26:
 9241 09d5 53746F72 		.ascii	"StorePresetMenu\000"
 9241      65507265 
 9241      7365744D 
 9241      656E7500 
 9242              	.LASF4:
 9243 09e5 5F5F696E 		.ascii	"__int16_t\000"
 9243      7431365F 
 9243      7400
 9244              	.LASF125:
 9245 09ef 65646974 		.ascii	"editMode\000"
 9245      4D6F6465 
 9245      00
 9246              	.LASF129:
 9247 09f8 70726573 		.ascii	"presetNamesArray\000"
 9247      65744E61 
 9247      6D657341 
 9247      72726179 
 9247      00
 9248              	.LASF103:
 9249 0a09 656E7465 		.ascii	"enterLeverCalibrationMode\000"
 9249      724C6576 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 204


 9249      65724361 
 9249      6C696272 
 9249      6174696F 
 9250              	.LASF175:
 9251 0a23 77686963 		.ascii	"whichMidiSendSelected\000"
 9251      684D6964 
 9251      6953656E 
 9251      6453656C 
 9251      65637465 
 9252              	.LASF161:
 9253 0a39 70726576 		.ascii	"prevEncoderVal\000"
 9253      456E636F 
 9253      64657256 
 9253      616C00
 9254              	.LASF62:
 9255 0a48 74657874 		.ascii	"textbgcolor\000"
 9255      6267636F 
 9255      6C6F7200 
 9256              	.LASF121:
 9257 0a54 766F6C75 		.ascii	"volumeWaitingToSend\000"
 9257      6D655761 
 9257      6974696E 
 9257      67546F53 
 9257      656E6400 
 9258              	.LASF40:
 9259 0a68 6269746D 		.ascii	"bitmapOffset\000"
 9259      61704F66 
 9259      66736574 
 9259      00
 9260              	.LASF98:
 9261 0a75 6C656674 		.ascii	"leftPressed\000"
 9261      50726573 
 9261      73656400 
 9262              	.LASF45:
 9263 0a81 794F6666 		.ascii	"yOffset\000"
 9263      73657400 
 9264              	.LASF149:
 9265 0a89 6D696469 		.ascii	"midiSendOn\000"
 9265      53656E64 
 9265      4F6E00
 9266              	.LASF173:
 9267 0a94 73686966 		.ascii	"shiftUp\000"
 9267      74557000 
 9268              	.LASF177:
 9269 0a9c 636F6E74 		.ascii	"controlsDisplayed\000"
 9269      726F6C73 
 9269      44697370 
 9269      6C617965 
 9269      6400
 9270              	.LASF92:
 9271 0aae 7363616E 		.ascii	"scanUI\000"
 9271      554900
 9272              	.LASF117:
 9273 0ab5 63757272 		.ascii	"currentNeck\000"
 9273      656E744E 
 9273      65636B00 
 9274              	.LASF53:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4gnx0G.s 			page 205


 9275 0ac1 57494454 		.ascii	"WIDTH\000"
 9275      4800
 9276              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
