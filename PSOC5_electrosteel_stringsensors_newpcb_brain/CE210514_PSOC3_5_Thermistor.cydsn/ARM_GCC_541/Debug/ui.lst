ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ui.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.global	prevEncoderVal
  21              		.bss
  22              		.type	prevEncoderVal, %object
  23              		.size	prevEncoderVal, 1
  24              	prevEncoderVal:
  25 0000 00       		.space	1
  26              		.global	encoderWatch
  27              		.type	encoderWatch, %object
  28              		.size	encoderWatch, 1
  29              	encoderWatch:
  30 0001 00       		.space	1
  31              		.comm	menuPosition,6,4
  32              		.global	semitonesOrCents
  33              		.type	semitonesOrCents, %object
  34              		.size	semitonesOrCents, 1
  35              	semitonesOrCents:
  36 0002 00       		.space	1
  37              		.global	editUp
  38              		.data
  39              		.type	editUp, %object
  40              		.size	editUp, 1
  41              	editUp:
  42 0000 01       		.byte	1
  43              		.global	oct1Up
  44              		.type	oct1Up, %object
  45              		.size	oct1Up, 1
  46              	oct1Up:
  47 0001 01       		.byte	1
  48              		.global	oct4Up
  49              		.type	oct4Up, %object
  50              		.size	oct4Up, 1
  51              	oct4Up:
  52 0002 01       		.byte	1
  53              		.global	encoderUp
  54              		.type	encoderUp, %object
  55              		.size	encoderUp, 1
  56              	encoderUp:
  57 0003 01       		.byte	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 2


  58              		.global	button1Up
  59              		.type	button1Up, %object
  60              		.size	button1Up, 1
  61              	button1Up:
  62 0004 01       		.byte	1
  63              		.global	button2Up
  64              		.type	button2Up, %object
  65              		.size	button2Up, 1
  66              	button2Up:
  67 0005 01       		.byte	1
  68              		.global	button3Up
  69              		.type	button3Up, %object
  70              		.size	button3Up, 1
  71              	button3Up:
  72 0006 01       		.byte	1
  73              		.global	button4Up
  74              		.type	button4Up, %object
  75              		.size	button4Up, 1
  76              	button4Up:
  77 0007 01       		.byte	1
  78              		.global	shiftUp
  79              		.type	shiftUp, %object
  80              		.size	shiftUp, 1
  81              	shiftUp:
  82 0008 01       		.byte	1
  83              		.global	editingSliderRepString
  84              		.bss
  85              		.type	editingSliderRepString, %object
  86              		.size	editingSliderRepString, 1
  87              	editingSliderRepString:
  88 0003 00       		.space	1
  89              		.global	whichMidiSendSelected
  90              		.type	whichMidiSendSelected, %object
  91              		.size	whichMidiSendSelected, 1
  92              	whichMidiSendSelected:
  93 0004 00       		.space	1
  94              		.global	whichFirmwareUpdateSelected
  95              		.type	whichFirmwareUpdateSelected, %object
  96              		.size	whichFirmwareUpdateSelected, 1
  97              	whichFirmwareUpdateSelected:
  98 0005 00       		.space	1
  99              		.global	controlsDisplayed
 100              		.type	controlsDisplayed, %object
 101              		.size	controlsDisplayed, 1
 102              	controlsDisplayed:
 103 0006 00       		.space	1
 104              		.global	presetStoreStage
 105              		.type	presetStoreStage, %object
 106              		.size	presetStoreStage, 1
 107              	presetStoreStage:
 108 0007 00       		.space	1
 109              		.global	whichMacroPageIsActive
 110              		.type	whichMacroPageIsActive, %object
 111              		.size	whichMacroPageIsActive, 1
 112              	whichMacroPageIsActive:
 113 0008 00       		.space	1
 114              		.global	newPresetName
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 3


 115              		.data
 116 0009 000000   		.align	2
 117              		.type	newPresetName, %object
 118              		.size	newPresetName, 14
 119              	newPresetName:
 120 000c 41       		.byte	65
 121 000d 20       		.byte	32
 122 000e 20       		.byte	32
 123 000f 20       		.byte	32
 124 0010 20       		.byte	32
 125 0011 20       		.byte	32
 126 0012 20       		.byte	32
 127 0013 20       		.byte	32
 128 0014 20       		.byte	32
 129 0015 20       		.byte	32
 130 0016 20       		.byte	32
 131 0017 20       		.byte	32
 132 0018 20       		.byte	32
 133 0019 20       		.byte	32
 134              		.global	__aeabi_i2f
 135              		.global	__aeabi_fmul
 136              		.global	__aeabi_fsub
 137              		.global	__aeabi_fcmplt
 138              		.global	__aeabi_fcmpgt
 139              		.global	__aeabi_f2uiz
 140              		.global	__aeabi_i2d
 141              		.global	__aeabi_dcmplt
 142              		.global	__aeabi_dcmpgt
 143              		.global	__aeabi_ui2f
 144              		.section	.rodata
 145              		.align	2
 146              	.LC0:
 147 0000 53313D00 		.ascii	"S1=\000"
 148              		.section	.text.scanUI,"ax",%progbits
 149              		.align	2
 150              		.global	scanUI
 151              		.thumb
 152              		.thumb_func
 153              		.type	scanUI, %function
 154              	scanUI:
 155              	.LFB64:
 156              		.file 1 "ui.c"
   1:ui.c          **** /* ========================================
   2:ui.c          ****  *
   3:ui.c          ****  * Copyright YOUR COMPANY, THE YEAR
   4:ui.c          ****  * All Rights Reserved
   5:ui.c          ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:ui.c          ****  *
   7:ui.c          ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:ui.c          ****  * WHICH IS THE PROPERTY OF your company.
   9:ui.c          ****  *
  10:ui.c          ****  * ========================================
  11:ui.c          **** */
  12:ui.c          **** 
  13:ui.c          **** #include "main.h"
  14:ui.c          **** #include "ui.h"
  15:ui.c          **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 4


  16:ui.c          **** int8_t prevEncoderVal = 0;
  17:ui.c          **** uint8_t encoderWatch = 0;
  18:ui.c          **** //signed so that we can check if it goes below zero
  19:ui.c          **** int8_t menuPosition[3][2];
  20:ui.c          **** enum direction{Left, Right, Down, Up, Enter};
  21:ui.c          **** uint8_t semitonesOrCents = 0;
  22:ui.c          **** uint8_t editUp = 1;
  23:ui.c          **** uint8_t oct1Up = 1;
  24:ui.c          **** uint8_t oct4Up = 1;
  25:ui.c          **** uint8_t encoderUp = 1;
  26:ui.c          **** uint8_t button1Up = 1;
  27:ui.c          **** uint8_t button2Up = 1;
  28:ui.c          **** uint8_t button3Up = 1;
  29:ui.c          **** uint8_t button4Up = 1;
  30:ui.c          **** uint8_t shiftUp = 1;
  31:ui.c          **** uint8_t editingSliderRepString = 0;
  32:ui.c          **** int8_t whichMidiSendSelected = 0;
  33:ui.c          **** uint8_t whichFirmwareUpdateSelected = 0;
  34:ui.c          **** uint8_t controlsDisplayed = 0;
  35:ui.c          **** 
  36:ui.c          **** uint8_t presetStoreStage = 0;
  37:ui.c          **** 
  38:ui.c          **** uint8_t whichMacroPageIsActive = 0;
  39:ui.c          **** 
  40:ui.c          **** char newPresetName[14] = {'A',32,32,32,32,32,32,32,32,32,32,32,32,32};
  41:ui.c          **** 
  42:ui.c          **** void scanUI(void)
  43:ui.c          **** {
 157              		.loc 1 43 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 48
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 B0B5     		push	{r4, r5, r7, lr}
 162              		.cfi_def_cfa_offset 16
 163              		.cfi_offset 4, -16
 164              		.cfi_offset 5, -12
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 8EB0     		sub	sp, sp, #56
 168              		.cfi_def_cfa_offset 72
 169 0004 02AF     		add	r7, sp, #8
 170              		.cfi_def_cfa 7, 64
  44:ui.c          ****     if (!knobPanelButton1_Read())
 171              		.loc 1 44 0
 172 0006 FFF7FEFF 		bl	knobPanelButton1_Read
 173 000a 0346     		mov	r3, r0
 174 000c 002B     		cmp	r3, #0
 175 000e 29D1     		bne	.L2
  45:ui.c          ****     {
  46:ui.c          ****         if (knobPanelLightActive)
 176              		.loc 1 46 0
 177 0010 9A4B     		ldr	r3, .L78
 178 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 179 0014 002B     		cmp	r3, #0
 180 0016 25D0     		beq	.L2
  47:ui.c          ****         {
  48:ui.c          ****             knobPanelLight1_Write(1);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 5


 181              		.loc 1 48 0
 182 0018 0120     		movs	r0, #1
 183 001a FFF7FEFF 		bl	knobPanelLight1_Write
  49:ui.c          ****             knobPanelLight2_Write(0);
 184              		.loc 1 49 0
 185 001e 0020     		movs	r0, #0
 186 0020 FFF7FEFF 		bl	knobPanelLight2_Write
  50:ui.c          ****             whichMacroPageIsActive = 0;
 187              		.loc 1 50 0
 188 0024 964B     		ldr	r3, .L78+4
 189 0026 0022     		movs	r2, #0
 190 0028 1A70     		strb	r2, [r3]
  51:ui.c          ****             macroOLEDWaitingToSend = 1;
 191              		.loc 1 51 0
 192 002a 964B     		ldr	r3, .L78+8
 193 002c 0122     		movs	r2, #1
 194 002e 1A70     		strb	r2, [r3]
 195              	.LBB2:
  52:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 196              		.loc 1 52 0
 197 0030 0023     		movs	r3, #0
 198 0032 FB62     		str	r3, [r7, #44]
 199 0034 10E0     		b	.L3
 200              	.L4:
  53:ui.c          ****             {
  54:ui.c          ****                 knobFrozen[i] = 1;
 201              		.loc 1 54 0 discriminator 3
 202 0036 944A     		ldr	r2, .L78+12
 203 0038 FB6A     		ldr	r3, [r7, #44]
 204 003a 1344     		add	r3, r3, r2
 205 003c 0122     		movs	r2, #1
 206 003e 1A70     		strb	r2, [r3]
  55:ui.c          ****                 prevMacroKnobValues[i] = prevMacroKnobValues[i+8];
 207              		.loc 1 55 0 discriminator 3
 208 0040 FB6A     		ldr	r3, [r7, #44]
 209 0042 0833     		adds	r3, r3, #8
 210 0044 914A     		ldr	r2, .L78+16
 211 0046 32F91310 		ldrsh	r1, [r2, r3, lsl #1]
 212 004a 904A     		ldr	r2, .L78+16
 213 004c FB6A     		ldr	r3, [r7, #44]
 214 004e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  52:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 215              		.loc 1 52 0 discriminator 3
 216 0052 FB6A     		ldr	r3, [r7, #44]
 217 0054 0133     		adds	r3, r3, #1
 218 0056 FB62     		str	r3, [r7, #44]
 219              	.L3:
  52:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 220              		.loc 1 52 0 is_stmt 0 discriminator 1
 221 0058 FB6A     		ldr	r3, [r7, #44]
 222 005a 072B     		cmp	r3, #7
 223 005c EBDD     		ble	.L4
 224              	.LBE2:
  56:ui.c          ****             }
  57:ui.c          ****             whichMacro = 0;
 225              		.loc 1 57 0 is_stmt 1
 226 005e 8C4B     		ldr	r3, .L78+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 6


 227 0060 0022     		movs	r2, #0
 228 0062 1A70     		strb	r2, [r3]
 229              	.L2:
  58:ui.c          ****         }
  59:ui.c          ****         
  60:ui.c          ****     }
  61:ui.c          ****     if (!knobPanelButton2_Read())
 230              		.loc 1 61 0
 231 0064 FFF7FEFF 		bl	knobPanelButton2_Read
 232 0068 0346     		mov	r3, r0
 233 006a 002B     		cmp	r3, #0
 234 006c 29D1     		bne	.L5
  62:ui.c          ****     {
  63:ui.c          ****         if (knobPanelLightActive)
 235              		.loc 1 63 0
 236 006e 834B     		ldr	r3, .L78
 237 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 238 0072 002B     		cmp	r3, #0
 239 0074 25D0     		beq	.L5
  64:ui.c          ****         {
  65:ui.c          ****             knobPanelLight1_Write(0);
 240              		.loc 1 65 0
 241 0076 0020     		movs	r0, #0
 242 0078 FFF7FEFF 		bl	knobPanelLight1_Write
  66:ui.c          ****             knobPanelLight2_Write(1);
 243              		.loc 1 66 0
 244 007c 0120     		movs	r0, #1
 245 007e FFF7FEFF 		bl	knobPanelLight2_Write
  67:ui.c          ****             whichMacroPageIsActive = 8;
 246              		.loc 1 67 0
 247 0082 7F4B     		ldr	r3, .L78+4
 248 0084 0822     		movs	r2, #8
 249 0086 1A70     		strb	r2, [r3]
  68:ui.c          ****             macroOLEDWaitingToSend = 1;
 250              		.loc 1 68 0
 251 0088 7E4B     		ldr	r3, .L78+8
 252 008a 0122     		movs	r2, #1
 253 008c 1A70     		strb	r2, [r3]
 254              	.LBB3:
  69:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 255              		.loc 1 69 0
 256 008e 0023     		movs	r3, #0
 257 0090 BB62     		str	r3, [r7, #40]
 258 0092 10E0     		b	.L6
 259              	.L7:
  70:ui.c          ****             {
  71:ui.c          ****                 knobFrozen[i+8] = 1;
 260              		.loc 1 71 0 discriminator 3
 261 0094 BB6A     		ldr	r3, [r7, #40]
 262 0096 0833     		adds	r3, r3, #8
 263 0098 7B4A     		ldr	r2, .L78+12
 264 009a 0121     		movs	r1, #1
 265 009c D154     		strb	r1, [r2, r3]
  72:ui.c          ****                 prevMacroKnobValues[i+8] = prevMacroKnobValues[i];
 266              		.loc 1 72 0 discriminator 3
 267 009e BB6A     		ldr	r3, [r7, #40]
 268 00a0 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 7


 269 00a2 7A49     		ldr	r1, .L78+16
 270 00a4 BA6A     		ldr	r2, [r7, #40]
 271 00a6 31F91210 		ldrsh	r1, [r1, r2, lsl #1]
 272 00aa 784A     		ldr	r2, .L78+16
 273 00ac 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  69:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 274              		.loc 1 69 0 discriminator 3
 275 00b0 BB6A     		ldr	r3, [r7, #40]
 276 00b2 0133     		adds	r3, r3, #1
 277 00b4 BB62     		str	r3, [r7, #40]
 278              	.L6:
  69:ui.c          ****             for (int i = 0; i < NUM_MACROS; i++)
 279              		.loc 1 69 0 is_stmt 0 discriminator 1
 280 00b6 BB6A     		ldr	r3, [r7, #40]
 281 00b8 072B     		cmp	r3, #7
 282 00ba EBDD     		ble	.L7
 283              	.LBE3:
  73:ui.c          ****             }
  74:ui.c          ****             whichMacro = 0;
 284              		.loc 1 74 0 is_stmt 1
 285 00bc 744B     		ldr	r3, .L78+20
 286 00be 0022     		movs	r2, #0
 287 00c0 1A70     		strb	r2, [r3]
 288              	.L5:
  75:ui.c          ****         }
  76:ui.c          ****     }
  77:ui.c          ****     
  78:ui.c          ****     
  79:ui.c          ****     
  80:ui.c          ****     uint8_t tempButtons = Status_Reg_1_Read();
 289              		.loc 1 80 0
 290 00c2 FFF7FEFF 		bl	Status_Reg_1_Read
 291 00c6 0346     		mov	r3, r0
 292 00c8 FB77     		strb	r3, [r7, #31]
  81:ui.c          ****     if (!(tempButtons&(1<<4)))
 293              		.loc 1 81 0
 294 00ca FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 295 00cc 03F01003 		and	r3, r3, #16
 296 00d0 002B     		cmp	r3, #0
 297 00d2 24D1     		bne	.L8
  82:ui.c          ****     {
  83:ui.c          ****         if (octave > 4)
 298              		.loc 1 83 0
 299 00d4 6F4B     		ldr	r3, .L78+24
 300 00d6 1B68     		ldr	r3, [r3]
 301 00d8 042B     		cmp	r3, #4
 302 00da 03DD     		ble	.L9
  84:ui.c          ****         {
  85:ui.c          ****             octave = 4;
 303              		.loc 1 85 0
 304 00dc 6D4B     		ldr	r3, .L78+24
 305 00de 0422     		movs	r2, #4
 306 00e0 1A60     		str	r2, [r3]
 307 00e2 0CE0     		b	.L10
 308              	.L9:
  86:ui.c          ****         }
  87:ui.c          ****         else if ((oct1Up) && (octave > 0))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 8


 309              		.loc 1 87 0
 310 00e4 6C4B     		ldr	r3, .L78+28
 311 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 312 00e8 002B     		cmp	r3, #0
 313 00ea 08D0     		beq	.L10
 314              		.loc 1 87 0 is_stmt 0 discriminator 1
 315 00ec 694B     		ldr	r3, .L78+24
 316 00ee 1B68     		ldr	r3, [r3]
 317 00f0 002B     		cmp	r3, #0
 318 00f2 04DD     		ble	.L10
  88:ui.c          ****         {
  89:ui.c          ****             octave--;
 319              		.loc 1 89 0 is_stmt 1
 320 00f4 674B     		ldr	r3, .L78+24
 321 00f6 1B68     		ldr	r3, [r3]
 322 00f8 013B     		subs	r3, r3, #1
 323 00fa 664A     		ldr	r2, .L78+24
 324 00fc 1360     		str	r3, [r2]
 325              	.L10:
  90:ui.c          ****         }
  91:ui.c          ****         LED_amber1_Write(1);
 326              		.loc 1 91 0
 327 00fe 0120     		movs	r0, #1
 328 0100 FFF7FEFF 		bl	LED_amber1_Write
  92:ui.c          ****         LED_amber2_Write(0);
 329              		.loc 1 92 0
 330 0104 0020     		movs	r0, #0
 331 0106 FFF7FEFF 		bl	LED_amber2_Write
  93:ui.c          ****         LED_amber3_Write(0);
 332              		.loc 1 93 0
 333 010a 0020     		movs	r0, #0
 334 010c FFF7FEFF 		bl	LED_amber3_Write
  94:ui.c          ****         LED_amber4_Write(0);
 335              		.loc 1 94 0
 336 0110 0020     		movs	r0, #0
 337 0112 FFF7FEFF 		bl	LED_amber4_Write
  95:ui.c          ****         oct1Up = 0;
 338              		.loc 1 95 0
 339 0116 604B     		ldr	r3, .L78+28
 340 0118 0022     		movs	r2, #0
 341 011a 1A70     		strb	r2, [r3]
 342 011c 07E0     		b	.L11
 343              	.L8:
  96:ui.c          ****     }
  97:ui.c          ****     
  98:ui.c          ****     else if ((tempButtons&(1<<4)))
 344              		.loc 1 98 0
 345 011e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 346 0120 03F01003 		and	r3, r3, #16
 347 0124 002B     		cmp	r3, #0
 348 0126 02D0     		beq	.L11
  99:ui.c          ****     {
 100:ui.c          ****         oct1Up = 1;
 349              		.loc 1 100 0
 350 0128 5B4B     		ldr	r3, .L78+28
 351 012a 0122     		movs	r2, #1
 352 012c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 9


 353              	.L11:
 101:ui.c          ****     }
 102:ui.c          ****     
 103:ui.c          ****     if (!oct2_Read())
 354              		.loc 1 103 0
 355 012e FFF7FEFF 		bl	oct2_Read
 356 0132 0346     		mov	r3, r0
 357 0134 002B     		cmp	r3, #0
 358 0136 0ED1     		bne	.L12
 104:ui.c          ****     {
 105:ui.c          ****         octave = 5;
 359              		.loc 1 105 0
 360 0138 564B     		ldr	r3, .L78+24
 361 013a 0522     		movs	r2, #5
 362 013c 1A60     		str	r2, [r3]
 106:ui.c          ****         LED_amber1_Write(0);
 363              		.loc 1 106 0
 364 013e 0020     		movs	r0, #0
 365 0140 FFF7FEFF 		bl	LED_amber1_Write
 107:ui.c          ****         LED_amber2_Write(1);
 366              		.loc 1 107 0
 367 0144 0120     		movs	r0, #1
 368 0146 FFF7FEFF 		bl	LED_amber2_Write
 108:ui.c          ****         LED_amber3_Write(0);
 369              		.loc 1 108 0
 370 014a 0020     		movs	r0, #0
 371 014c FFF7FEFF 		bl	LED_amber3_Write
 109:ui.c          ****         LED_amber4_Write(0);
 372              		.loc 1 109 0
 373 0150 0020     		movs	r0, #0
 374 0152 FFF7FEFF 		bl	LED_amber4_Write
 375              	.L12:
 110:ui.c          ****     }
 111:ui.c          ****     if (!oct3_Read())
 376              		.loc 1 111 0
 377 0156 FFF7FEFF 		bl	oct3_Read
 378 015a 0346     		mov	r3, r0
 379 015c 002B     		cmp	r3, #0
 380 015e 0ED1     		bne	.L13
 112:ui.c          ****     {
 113:ui.c          ****         octave = 6;
 381              		.loc 1 113 0
 382 0160 4C4B     		ldr	r3, .L78+24
 383 0162 0622     		movs	r2, #6
 384 0164 1A60     		str	r2, [r3]
 114:ui.c          ****         LED_amber1_Write(0);
 385              		.loc 1 114 0
 386 0166 0020     		movs	r0, #0
 387 0168 FFF7FEFF 		bl	LED_amber1_Write
 115:ui.c          ****         LED_amber2_Write(0);
 388              		.loc 1 115 0
 389 016c 0020     		movs	r0, #0
 390 016e FFF7FEFF 		bl	LED_amber2_Write
 116:ui.c          ****         LED_amber3_Write(1);
 391              		.loc 1 116 0
 392 0172 0120     		movs	r0, #1
 393 0174 FFF7FEFF 		bl	LED_amber3_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 10


 117:ui.c          ****         LED_amber4_Write(0);            
 394              		.loc 1 117 0
 395 0178 0020     		movs	r0, #0
 396 017a FFF7FEFF 		bl	LED_amber4_Write
 397              	.L13:
 118:ui.c          ****     }
 119:ui.c          ****     if (!(tempButtons&(1<<5)))
 398              		.loc 1 119 0
 399 017e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 400 0180 03F02003 		and	r3, r3, #32
 401 0184 002B     		cmp	r3, #0
 402 0186 24D1     		bne	.L14
 120:ui.c          ****     {
 121:ui.c          ****         if (octave < 7)
 403              		.loc 1 121 0
 404 0188 424B     		ldr	r3, .L78+24
 405 018a 1B68     		ldr	r3, [r3]
 406 018c 062B     		cmp	r3, #6
 407 018e 03DC     		bgt	.L15
 122:ui.c          ****         {
 123:ui.c          ****             octave = 7;
 408              		.loc 1 123 0
 409 0190 404B     		ldr	r3, .L78+24
 410 0192 0722     		movs	r2, #7
 411 0194 1A60     		str	r2, [r3]
 412 0196 0CE0     		b	.L16
 413              	.L15:
 124:ui.c          **** 
 125:ui.c          ****         }
 126:ui.c          ****         else if ((oct4Up) && (octave < 11))
 414              		.loc 1 126 0
 415 0198 404B     		ldr	r3, .L78+32
 416 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 417 019c 002B     		cmp	r3, #0
 418 019e 08D0     		beq	.L16
 419              		.loc 1 126 0 is_stmt 0 discriminator 1
 420 01a0 3C4B     		ldr	r3, .L78+24
 421 01a2 1B68     		ldr	r3, [r3]
 422 01a4 0A2B     		cmp	r3, #10
 423 01a6 04DC     		bgt	.L16
 127:ui.c          ****         {
 128:ui.c          ****             octave++;
 424              		.loc 1 128 0 is_stmt 1
 425 01a8 3A4B     		ldr	r3, .L78+24
 426 01aa 1B68     		ldr	r3, [r3]
 427 01ac 0133     		adds	r3, r3, #1
 428 01ae 394A     		ldr	r2, .L78+24
 429 01b0 1360     		str	r3, [r2]
 430              	.L16:
 129:ui.c          **** 
 130:ui.c          ****         }
 131:ui.c          ****         LED_amber1_Write(0);
 431              		.loc 1 131 0
 432 01b2 0020     		movs	r0, #0
 433 01b4 FFF7FEFF 		bl	LED_amber1_Write
 132:ui.c          ****         LED_amber2_Write(0);
 434              		.loc 1 132 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 11


 435 01b8 0020     		movs	r0, #0
 436 01ba FFF7FEFF 		bl	LED_amber2_Write
 133:ui.c          ****         LED_amber3_Write(0);
 437              		.loc 1 133 0
 438 01be 0020     		movs	r0, #0
 439 01c0 FFF7FEFF 		bl	LED_amber3_Write
 134:ui.c          ****         LED_amber4_Write(1);
 440              		.loc 1 134 0
 441 01c4 0120     		movs	r0, #1
 442 01c6 FFF7FEFF 		bl	LED_amber4_Write
 135:ui.c          ****         oct4Up = 0;
 443              		.loc 1 135 0
 444 01ca 344B     		ldr	r3, .L78+32
 445 01cc 0022     		movs	r2, #0
 446 01ce 1A70     		strb	r2, [r3]
 447 01d0 07E0     		b	.L17
 448              	.L14:
 136:ui.c          ****     }
 137:ui.c          ****     
 138:ui.c          ****     else if ((tempButtons&(1<<5)))
 449              		.loc 1 138 0
 450 01d2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 451 01d4 03F02003 		and	r3, r3, #32
 452 01d8 002B     		cmp	r3, #0
 453 01da 02D0     		beq	.L17
 139:ui.c          ****     {
 140:ui.c          ****         oct4Up = 1;
 454              		.loc 1 140 0
 455 01dc 2F4B     		ldr	r3, .L78+32
 456 01de 0122     		movs	r2, #1
 457 01e0 1A70     		strb	r2, [r3]
 458              	.L17:
 141:ui.c          ****     }
 142:ui.c          ****     
 143:ui.c          ****     if (!neck1_button_Read())
 459              		.loc 1 143 0
 460 01e2 FFF7FEFF 		bl	neck1_button_Read
 461 01e6 0346     		mov	r3, r0
 462 01e8 002B     		cmp	r3, #0
 463 01ea 69D1     		bne	.L18
 144:ui.c          ****     {
 145:ui.c          ****         currentNeck = 0;
 464              		.loc 1 145 0
 465 01ec 2C4B     		ldr	r3, .L78+36
 466 01ee 0022     		movs	r2, #0
 467 01f0 1A70     		strb	r2, [r3]
 146:ui.c          ****         currentCopedent = necks[currentNeck];
 468              		.loc 1 146 0
 469 01f2 2B4B     		ldr	r3, .L78+36
 470 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 471 01f6 1A46     		mov	r2, r3
 472 01f8 2A4B     		ldr	r3, .L78+40
 473 01fa 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 474 01fc 2A4B     		ldr	r3, .L78+44
 475 01fe 1A70     		strb	r2, [r3]
 147:ui.c          ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 476              		.loc 1 147 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 12


 477 0200 284B     		ldr	r3, .L78+40
 478 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 479 0204 5B01     		lsls	r3, r3, #5
 480 0206 DAB2     		uxtb	r2, r3
 481 0208 264B     		ldr	r3, .L78+40
 482 020a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 483 020c 9B00     		lsls	r3, r3, #2
 484 020e DBB2     		uxtb	r3, r3
 485 0210 1344     		add	r3, r3, r2
 486 0212 DAB2     		uxtb	r2, r3
 487 0214 224B     		ldr	r3, .L78+36
 488 0216 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 489 0218 1344     		add	r3, r3, r2
 490 021a DAB2     		uxtb	r2, r3
 491 021c 234B     		ldr	r3, .L78+48
 492 021e 1A70     		strb	r2, [r3]
 148:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 493              		.loc 1 148 0
 494 0220 224B     		ldr	r3, .L78+48
 495 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 496 0224 40F2E371 		movw	r1, #2019
 497 0228 1846     		mov	r0, r3
 498 022a FFF7FEFF 		bl	EEPROM_WriteByte
 149:ui.c          ****         patchNum = neckPreset[currentNeck];
 499              		.loc 1 149 0
 500 022e 1C4B     		ldr	r3, .L78+36
 501 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 502 0232 1A46     		mov	r2, r3
 503 0234 1E4B     		ldr	r3, .L78+52
 504 0236 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 505 0238 1E4B     		ldr	r3, .L78+56
 506 023a 1A70     		strb	r2, [r3]
 150:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 507              		.loc 1 150 0
 508 023c 1D4B     		ldr	r3, .L78+56
 509 023e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 510 0240 174B     		ldr	r3, .L78+36
 511 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 0244 9BB2     		uxth	r3, r3
 513 0246 03F2DC73 		addw	r3, r3, #2012
 514 024a 9BB2     		uxth	r3, r3
 515 024c 1946     		mov	r1, r3
 516 024e 1046     		mov	r0, r2
 517 0250 FFF7FEFF 		bl	EEPROM_WriteByte
 151:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 518              		.loc 1 151 0
 519 0254 174B     		ldr	r3, .L78+56
 520 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 521 0258 40F2D671 		movw	r1, #2006
 522 025c 1846     		mov	r0, r3
 523 025e FFF7FEFF 		bl	EEPROM_WriteByte
 152:ui.c          ****         LED_red1_Write(0);
 524              		.loc 1 152 0
 525 0262 0020     		movs	r0, #0
 526 0264 FFF7FEFF 		bl	LED_red1_Write
 153:ui.c          ****         LED_green2_Write(1);
 527              		.loc 1 153 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 13


 528 0268 0120     		movs	r0, #1
 529 026a FFF7FEFF 		bl	LED_green2_Write
 154:ui.c          ****         if (!editMode)
 530              		.loc 1 154 0
 531 026e 124B     		ldr	r3, .L78+60
 532 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 533 0272 002B     		cmp	r3, #0
 534 0274 22D1     		bne	.L19
 155:ui.c          ****         {
 156:ui.c          ****             displayCurrentPresetNameAndCopedent();
 535              		.loc 1 156 0
 536 0276 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 537 027a 21E0     		b	.L18
 538              	.L79:
 539              		.align	2
 540              	.L78:
 541 027c 00000000 		.word	knobPanelLightActive
 542 0280 00000000 		.word	whichMacroPageIsActive
 543 0284 00000000 		.word	macroOLEDWaitingToSend
 544 0288 00000000 		.word	knobFrozen
 545 028c 00000000 		.word	prevMacroKnobValues
 546 0290 00000000 		.word	whichMacro
 547 0294 00000000 		.word	octave
 548 0298 00000000 		.word	oct1Up
 549 029c 00000000 		.word	oct4Up
 550 02a0 00000000 		.word	currentNeck
 551 02a4 00000000 		.word	necks
 552 02a8 00000000 		.word	currentCopedent
 553 02ac 00000000 		.word	neckByte
 554 02b0 00000000 		.word	neckPreset
 555 02b4 00000000 		.word	patchNum
 556 02b8 00000000 		.word	editMode
 557              	.L19:
 157:ui.c          ****         }
 158:ui.c          ****         else
 159:ui.c          ****         {
 160:ui.c          ****             exitEditModeMenu();   
 558              		.loc 1 160 0
 559 02bc FFF7FEFF 		bl	exitEditModeMenu
 560              	.L18:
 161:ui.c          ****         }
 162:ui.c          ****     }
 163:ui.c          ****     if (!neck2_button_Read())
 561              		.loc 1 163 0
 562 02c0 FFF7FEFF 		bl	neck2_button_Read
 563 02c4 0346     		mov	r3, r0
 564 02c6 002B     		cmp	r3, #0
 565 02c8 49D1     		bne	.L20
 164:ui.c          ****     {
 165:ui.c          ****         currentNeck = 1;
 566              		.loc 1 165 0
 567 02ca 834B     		ldr	r3, .L80
 568 02cc 0122     		movs	r2, #1
 569 02ce 1A70     		strb	r2, [r3]
 166:ui.c          ****         currentCopedent = necks[currentNeck];    
 570              		.loc 1 166 0
 571 02d0 814B     		ldr	r3, .L80
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 14


 572 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 573 02d4 1A46     		mov	r2, r3
 574 02d6 814B     		ldr	r3, .L80+4
 575 02d8 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 576 02da 814B     		ldr	r3, .L80+8
 577 02dc 1A70     		strb	r2, [r3]
 167:ui.c          ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 578              		.loc 1 167 0
 579 02de 7F4B     		ldr	r3, .L80+4
 580 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 581 02e2 5B01     		lsls	r3, r3, #5
 582 02e4 DAB2     		uxtb	r2, r3
 583 02e6 7D4B     		ldr	r3, .L80+4
 584 02e8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 585 02ea 9B00     		lsls	r3, r3, #2
 586 02ec DBB2     		uxtb	r3, r3
 587 02ee 1344     		add	r3, r3, r2
 588 02f0 DAB2     		uxtb	r2, r3
 589 02f2 794B     		ldr	r3, .L80
 590 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 591 02f6 1344     		add	r3, r3, r2
 592 02f8 DAB2     		uxtb	r2, r3
 593 02fa 7A4B     		ldr	r3, .L80+12
 594 02fc 1A70     		strb	r2, [r3]
 168:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 595              		.loc 1 168 0
 596 02fe 794B     		ldr	r3, .L80+12
 597 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 598 0302 40F2E371 		movw	r1, #2019
 599 0306 1846     		mov	r0, r3
 600 0308 FFF7FEFF 		bl	EEPROM_WriteByte
 169:ui.c          ****         patchNum = neckPreset[currentNeck];
 601              		.loc 1 169 0
 602 030c 724B     		ldr	r3, .L80
 603 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 604 0310 1A46     		mov	r2, r3
 605 0312 754B     		ldr	r3, .L80+16
 606 0314 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 607 0316 754B     		ldr	r3, .L80+20
 608 0318 1A70     		strb	r2, [r3]
 170:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 609              		.loc 1 170 0
 610 031a 744B     		ldr	r3, .L80+20
 611 031c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 612 031e 6E4B     		ldr	r3, .L80
 613 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614 0322 9BB2     		uxth	r3, r3
 615 0324 03F2DC73 		addw	r3, r3, #2012
 616 0328 9BB2     		uxth	r3, r3
 617 032a 1946     		mov	r1, r3
 618 032c 1046     		mov	r0, r2
 619 032e FFF7FEFF 		bl	EEPROM_WriteByte
 171:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 620              		.loc 1 171 0
 621 0332 6E4B     		ldr	r3, .L80+20
 622 0334 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623 0336 40F2D671 		movw	r1, #2006
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 15


 624 033a 1846     		mov	r0, r3
 625 033c FFF7FEFF 		bl	EEPROM_WriteByte
 172:ui.c          ****         LED_red1_Write(1);
 626              		.loc 1 172 0
 627 0340 0120     		movs	r0, #1
 628 0342 FFF7FEFF 		bl	LED_red1_Write
 173:ui.c          ****         LED_green2_Write(0);          
 629              		.loc 1 173 0
 630 0346 0020     		movs	r0, #0
 631 0348 FFF7FEFF 		bl	LED_green2_Write
 174:ui.c          ****         if (!editMode)
 632              		.loc 1 174 0
 633 034c 684B     		ldr	r3, .L80+24
 634 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 635 0350 002B     		cmp	r3, #0
 636 0352 02D1     		bne	.L21
 175:ui.c          ****         {
 176:ui.c          ****             displayCurrentPresetNameAndCopedent();
 637              		.loc 1 176 0
 638 0354 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 639 0358 01E0     		b	.L20
 640              	.L21:
 177:ui.c          ****         }
 178:ui.c          ****         else
 179:ui.c          ****         {
 180:ui.c          ****             exitEditModeMenu();   
 641              		.loc 1 180 0
 642 035a FFF7FEFF 		bl	exitEditModeMenu
 643              	.L20:
 181:ui.c          ****         }
 182:ui.c          ****     }
 183:ui.c          ****     
 184:ui.c          ****     if ((!(tempButtons&(1<<6))) && (shiftUp))
 644              		.loc 1 184 0
 645 035e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 646 0360 03F04003 		and	r3, r3, #64
 647 0364 002B     		cmp	r3, #0
 648 0366 1DD1     		bne	.L22
 649              		.loc 1 184 0 is_stmt 0 discriminator 1
 650 0368 624B     		ldr	r3, .L80+28
 651 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 652 036c 002B     		cmp	r3, #0
 653 036e 19D0     		beq	.L22
 185:ui.c          ****     {
 186:ui.c          ****         dualSlider = !dualSlider;
 654              		.loc 1 186 0 is_stmt 1
 655 0370 614B     		ldr	r3, .L80+32
 656 0372 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657 0374 002B     		cmp	r3, #0
 658 0376 0CBF     		ite	eq
 659 0378 0123     		moveq	r3, #1
 660 037a 0023     		movne	r3, #0
 661 037c DBB2     		uxtb	r3, r3
 662 037e 1A46     		mov	r2, r3
 663 0380 5D4B     		ldr	r3, .L80+32
 664 0382 1A70     		strb	r2, [r3]
 187:ui.c          ****         LED_green1_Write(dualSlider);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 16


 665              		.loc 1 187 0
 666 0384 5C4B     		ldr	r3, .L80+32
 667 0386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 668 0388 1846     		mov	r0, r3
 669 038a FFF7FEFF 		bl	LED_green1_Write
 188:ui.c          ****         EEPROM_WriteByte(dualSlider, EEPROM_DUAL_SLIDER_OFFSET);
 670              		.loc 1 188 0
 671 038e 5A4B     		ldr	r3, .L80+32
 672 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 673 0392 40F2E271 		movw	r1, #2018
 674 0396 1846     		mov	r0, r3
 675 0398 FFF7FEFF 		bl	EEPROM_WriteByte
 189:ui.c          ****         shiftUp = 0;
 676              		.loc 1 189 0
 677 039c 554B     		ldr	r3, .L80+28
 678 039e 0022     		movs	r2, #0
 679 03a0 1A70     		strb	r2, [r3]
 680 03a2 07E0     		b	.L23
 681              	.L22:
 190:ui.c          ****     }
 191:ui.c          ****     else if ((tempButtons&(1<<6)))
 682              		.loc 1 191 0
 683 03a4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 684 03a6 03F04003 		and	r3, r3, #64
 685 03aa 002B     		cmp	r3, #0
 686 03ac 02D0     		beq	.L23
 192:ui.c          ****     {
 193:ui.c          ****         shiftUp = 1;
 687              		.loc 1 193 0
 688 03ae 514B     		ldr	r3, .L80+28
 689 03b0 0122     		movs	r2, #1
 690 03b2 1A70     		strb	r2, [r3]
 691              	.L23:
 194:ui.c          ****     }
 195:ui.c          **** 
 196:ui.c          ****     if ((!(tempButtons&(1<<0))) && (button1Up))
 692              		.loc 1 196 0
 693 03b4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 694 03b6 03F00103 		and	r3, r3, #1
 695 03ba 002B     		cmp	r3, #0
 696 03bc 09D1     		bne	.L24
 697              		.loc 1 196 0 is_stmt 0 discriminator 1
 698 03be 4F4B     		ldr	r3, .L80+36
 699 03c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 700 03c2 002B     		cmp	r3, #0
 701 03c4 05D0     		beq	.L24
 197:ui.c          ****     {
 198:ui.c          ****         leftPressed();
 702              		.loc 1 198 0 is_stmt 1
 703 03c6 FFF7FEFF 		bl	leftPressed
 199:ui.c          ****         button1Up = 0;
 704              		.loc 1 199 0
 705 03ca 4C4B     		ldr	r3, .L80+36
 706 03cc 0022     		movs	r2, #0
 707 03ce 1A70     		strb	r2, [r3]
 708 03d0 07E0     		b	.L25
 709              	.L24:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 17


 200:ui.c          ****     }
 201:ui.c          ****     else if ((tempButtons&(1<<0)))
 710              		.loc 1 201 0
 711 03d2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 712 03d4 03F00103 		and	r3, r3, #1
 713 03d8 002B     		cmp	r3, #0
 714 03da 02D0     		beq	.L25
 202:ui.c          ****     {
 203:ui.c          ****         button1Up = 1;
 715              		.loc 1 203 0
 716 03dc 474B     		ldr	r3, .L80+36
 717 03de 0122     		movs	r2, #1
 718 03e0 1A70     		strb	r2, [r3]
 719              	.L25:
 204:ui.c          ****     }
 205:ui.c          ****     
 206:ui.c          ****     if ((!(tempButtons&(1<<1))) && (button2Up))
 720              		.loc 1 206 0
 721 03e2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 722 03e4 03F00203 		and	r3, r3, #2
 723 03e8 002B     		cmp	r3, #0
 724 03ea 09D1     		bne	.L26
 725              		.loc 1 206 0 is_stmt 0 discriminator 1
 726 03ec 444B     		ldr	r3, .L80+40
 727 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 728 03f0 002B     		cmp	r3, #0
 729 03f2 05D0     		beq	.L26
 207:ui.c          ****     {
 208:ui.c          ****         rightPressed();
 730              		.loc 1 208 0 is_stmt 1
 731 03f4 FFF7FEFF 		bl	rightPressed
 209:ui.c          ****         button2Up = 0;
 732              		.loc 1 209 0
 733 03f8 414B     		ldr	r3, .L80+40
 734 03fa 0022     		movs	r2, #0
 735 03fc 1A70     		strb	r2, [r3]
 736 03fe 07E0     		b	.L27
 737              	.L26:
 210:ui.c          ****     }
 211:ui.c          ****     else if ((tempButtons&(1<<1)))
 738              		.loc 1 211 0
 739 0400 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 740 0402 03F00203 		and	r3, r3, #2
 741 0406 002B     		cmp	r3, #0
 742 0408 02D0     		beq	.L27
 212:ui.c          ****     {
 213:ui.c          ****         button2Up = 1;
 743              		.loc 1 213 0
 744 040a 3D4B     		ldr	r3, .L80+40
 745 040c 0122     		movs	r2, #1
 746 040e 1A70     		strb	r2, [r3]
 747              	.L27:
 214:ui.c          ****     }
 215:ui.c          ****     
 216:ui.c          ****     if ((!(tempButtons&(1<<2))) && (button3Up))
 748              		.loc 1 216 0
 749 0410 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 18


 750 0412 03F00403 		and	r3, r3, #4
 751 0416 002B     		cmp	r3, #0
 752 0418 09D1     		bne	.L28
 753              		.loc 1 216 0 is_stmt 0 discriminator 1
 754 041a 3A4B     		ldr	r3, .L80+44
 755 041c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 756 041e 002B     		cmp	r3, #0
 757 0420 05D0     		beq	.L28
 217:ui.c          ****     {
 218:ui.c          ****         downPressed();
 758              		.loc 1 218 0 is_stmt 1
 759 0422 FFF7FEFF 		bl	downPressed
 219:ui.c          ****         button3Up = 0;
 760              		.loc 1 219 0
 761 0426 374B     		ldr	r3, .L80+44
 762 0428 0022     		movs	r2, #0
 763 042a 1A70     		strb	r2, [r3]
 764 042c 07E0     		b	.L29
 765              	.L28:
 220:ui.c          ****     }
 221:ui.c          ****     else if ((tempButtons&(1<<2)))
 766              		.loc 1 221 0
 767 042e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 768 0430 03F00403 		and	r3, r3, #4
 769 0434 002B     		cmp	r3, #0
 770 0436 02D0     		beq	.L29
 222:ui.c          ****     {
 223:ui.c          ****         button3Up = 1;
 771              		.loc 1 223 0
 772 0438 324B     		ldr	r3, .L80+44
 773 043a 0122     		movs	r2, #1
 774 043c 1A70     		strb	r2, [r3]
 775              	.L29:
 224:ui.c          ****     }
 225:ui.c          ****     
 226:ui.c          ****     if ((!(tempButtons&(1<<3))) && (button4Up))
 776              		.loc 1 226 0
 777 043e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 778 0440 03F00803 		and	r3, r3, #8
 779 0444 002B     		cmp	r3, #0
 780 0446 09D1     		bne	.L30
 781              		.loc 1 226 0 is_stmt 0 discriminator 1
 782 0448 2F4B     		ldr	r3, .L80+48
 783 044a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 784 044c 002B     		cmp	r3, #0
 785 044e 05D0     		beq	.L30
 227:ui.c          ****     {
 228:ui.c          ****         upPressed();
 786              		.loc 1 228 0 is_stmt 1
 787 0450 FFF7FEFF 		bl	upPressed
 229:ui.c          ****         button4Up = 0;
 788              		.loc 1 229 0
 789 0454 2C4B     		ldr	r3, .L80+48
 790 0456 0022     		movs	r2, #0
 791 0458 1A70     		strb	r2, [r3]
 792 045a 07E0     		b	.L31
 793              	.L30:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 19


 230:ui.c          ****     }
 231:ui.c          ****     else if ((tempButtons&(1<<3)))
 794              		.loc 1 231 0
 795 045c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 796 045e 03F00803 		and	r3, r3, #8
 797 0462 002B     		cmp	r3, #0
 798 0464 02D0     		beq	.L31
 232:ui.c          ****     {
 233:ui.c          ****         button4Up = 1;
 799              		.loc 1 233 0
 800 0466 284B     		ldr	r3, .L80+48
 801 0468 0122     		movs	r2, #1
 802 046a 1A70     		strb	r2, [r3]
 803              	.L31:
 234:ui.c          ****     }
 235:ui.c          ****     
 236:ui.c          ****     if ((!edit_button_Read()) && (editUp))
 804              		.loc 1 236 0
 805 046c FFF7FEFF 		bl	edit_button_Read
 806 0470 0346     		mov	r3, r0
 807 0472 002B     		cmp	r3, #0
 808 0474 1AD1     		bne	.L32
 809              		.loc 1 236 0 is_stmt 0 discriminator 1
 810 0476 254B     		ldr	r3, .L80+52
 811 0478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 812 047a 002B     		cmp	r3, #0
 813 047c 16D0     		beq	.L32
 237:ui.c          ****     {
 238:ui.c          ****         editMode = !editMode;
 814              		.loc 1 238 0 is_stmt 1
 815 047e 1C4B     		ldr	r3, .L80+24
 816 0480 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 817 0482 002B     		cmp	r3, #0
 818 0484 0CBF     		ite	eq
 819 0486 0123     		moveq	r3, #1
 820 0488 0023     		movne	r3, #0
 821 048a DBB2     		uxtb	r3, r3
 822 048c 1A46     		mov	r2, r3
 823 048e 184B     		ldr	r3, .L80+24
 824 0490 1A70     		strb	r2, [r3]
 239:ui.c          ****         if (editMode)
 825              		.loc 1 239 0
 826 0492 174B     		ldr	r3, .L80+24
 827 0494 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0496 002B     		cmp	r3, #0
 829 0498 02D0     		beq	.L33
 240:ui.c          ****         {
 241:ui.c          ****             enterEditModeMenu();
 830              		.loc 1 241 0
 831 049a FFF7FEFF 		bl	enterEditModeMenu
 832 049e 01E0     		b	.L34
 833              	.L33:
 242:ui.c          ****         }
 243:ui.c          ****         else
 244:ui.c          ****         {
 245:ui.c          ****             exitEditModeMenu();
 834              		.loc 1 245 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 20


 835 04a0 FFF7FEFF 		bl	exitEditModeMenu
 836              	.L34:
 246:ui.c          ****         }
 247:ui.c          ****         editUp = 0;
 837              		.loc 1 247 0
 838 04a4 194B     		ldr	r3, .L80+52
 839 04a6 0022     		movs	r2, #0
 840 04a8 1A70     		strb	r2, [r3]
 841 04aa 07E0     		b	.L35
 842              	.L32:
 248:ui.c          ****     }
 249:ui.c          ****     else if (edit_button_Read())
 843              		.loc 1 249 0
 844 04ac FFF7FEFF 		bl	edit_button_Read
 845 04b0 0346     		mov	r3, r0
 846 04b2 002B     		cmp	r3, #0
 847 04b4 02D0     		beq	.L35
 250:ui.c          ****     {
 251:ui.c          ****         editUp = 1;
 848              		.loc 1 251 0
 849 04b6 154B     		ldr	r3, .L80+52
 850 04b8 0122     		movs	r2, #1
 851 04ba 1A70     		strb	r2, [r3]
 852              	.L35:
 252:ui.c          ****     }
 253:ui.c          ****     
 254:ui.c          ****     if ((!(tempButtons&(1<<7))) && (encoderUp))
 853              		.loc 1 254 0
 854 04bc 97F91F30 		ldrsb	r3, [r7, #31]
 855 04c0 002B     		cmp	r3, #0
 856 04c2 27DB     		blt	.L36
 857              		.loc 1 254 0 is_stmt 0 discriminator 1
 858 04c4 124B     		ldr	r3, .L80+56
 859 04c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 860 04c8 002B     		cmp	r3, #0
 861 04ca 23D0     		beq	.L36
 255:ui.c          ****     {
 256:ui.c          ****         enterPressed();
 862              		.loc 1 256 0 is_stmt 1
 863 04cc FFF7FEFF 		bl	enterPressed
 257:ui.c          ****         encoderUp = 0;
 864              		.loc 1 257 0
 865 04d0 0F4B     		ldr	r3, .L80+56
 866 04d2 0022     		movs	r2, #0
 867 04d4 1A70     		strb	r2, [r3]
 868 04d6 24E0     		b	.L37
 869              	.L81:
 870              		.align	2
 871              	.L80:
 872 04d8 00000000 		.word	currentNeck
 873 04dc 00000000 		.word	necks
 874 04e0 00000000 		.word	currentCopedent
 875 04e4 00000000 		.word	neckByte
 876 04e8 00000000 		.word	neckPreset
 877 04ec 00000000 		.word	patchNum
 878 04f0 00000000 		.word	editMode
 879 04f4 00000000 		.word	shiftUp
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 21


 880 04f8 00000000 		.word	dualSlider
 881 04fc 00000000 		.word	button1Up
 882 0500 00000000 		.word	button2Up
 883 0504 00000000 		.word	button3Up
 884 0508 00000000 		.word	button4Up
 885 050c 00000000 		.word	editUp
 886 0510 00000000 		.word	encoderUp
 887              	.L36:
 258:ui.c          ****     }
 259:ui.c          ****     else if ((tempButtons&(1<<7)))
 888              		.loc 1 259 0
 889 0514 97F91F30 		ldrsb	r3, [r7, #31]
 890 0518 002B     		cmp	r3, #0
 891 051a 02DA     		bge	.L37
 260:ui.c          ****     {
 261:ui.c          ****         encoderUp = 1;
 892              		.loc 1 261 0
 893 051c 954B     		ldr	r3, .L82
 894 051e 0122     		movs	r2, #1
 895 0520 1A70     		strb	r2, [r3]
 896              	.L37:
 262:ui.c          ****     }
 263:ui.c          ****     
 264:ui.c          ****     prevOctave = octave;
 897              		.loc 1 264 0
 898 0522 954B     		ldr	r3, .L82+4
 899 0524 1B68     		ldr	r3, [r3]
 900 0526 954A     		ldr	r2, .L82+8
 901 0528 1360     		str	r3, [r2]
 265:ui.c          ****     if (editMode)
 902              		.loc 1 265 0
 903 052a 954B     		ldr	r3, .L82+12
 904 052c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 052e 002B     		cmp	r3, #0
 906 0530 00F04984 		beq	.L77
 266:ui.c          ****     {
 267:ui.c          ****         if (encoderWatch)
 907              		.loc 1 267 0
 908 0534 934B     		ldr	r3, .L82+16
 909 0536 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 910 0538 002B     		cmp	r3, #0
 911 053a 00F04484 		beq	.L77
 912              	.LBB4:
 268:ui.c          ****         {
 269:ui.c          ****             int8_t currentEncoderVal = Decoder_1_GetPosition();
 913              		.loc 1 269 0
 914 053e FFF7FEFF 		bl	Decoder_1_GetPosition
 915 0542 0346     		mov	r3, r0
 916 0544 BB77     		strb	r3, [r7, #30]
 270:ui.c          ****             
 271:ui.c          ****             if (menuPosition[0][0] == StorePresetMenu) //SelectingPresetToStore
 917              		.loc 1 271 0
 918 0546 904B     		ldr	r3, .L82+20
 919 0548 93F90030 		ldrsb	r3, [r3]
 920 054c 012B     		cmp	r3, #1
 921 054e 40F0A080 		bne	.L39
 272:ui.c          ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 22


 273:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 922              		.loc 1 273 0
 923 0552 8E4B     		ldr	r3, .L82+24
 924 0554 93F90030 		ldrsb	r3, [r3]
 925 0558 97F91E20 		ldrsb	r2, [r7, #30]
 926 055c 9A42     		cmp	r2, r3
 927 055e 00F09880 		beq	.L39
 274:ui.c          ****                 {
 275:ui.c          ****                     
 276:ui.c          ****                     if (presetStoreStage == 0)
 928              		.loc 1 276 0
 929 0562 8B4B     		ldr	r3, .L82+28
 930 0564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 931 0566 002B     		cmp	r3, #0
 932 0568 6BD1     		bne	.L40
 933              	.LBB5:
 277:ui.c          ****                     {
 278:ui.c          ****                         OLEDtextColor(1, 0);
 934              		.loc 1 278 0
 935 056a 0021     		movs	r1, #0
 936 056c 0120     		movs	r0, #1
 937 056e FFF7FEFF 		bl	OLEDtextColor
 279:ui.c          ****                         GFXfillRect(&theGFX, 84, 32 ,46 ,32, theGFX.textbgcolor);
 938              		.loc 1 279 0
 939 0572 884B     		ldr	r3, .L82+32
 940 0574 5B8A     		ldrh	r3, [r3, #18]
 941 0576 0193     		str	r3, [sp, #4]
 942 0578 2023     		movs	r3, #32
 943 057a 0093     		str	r3, [sp]
 944 057c 2E23     		movs	r3, #46
 945 057e 2022     		movs	r2, #32
 946 0580 5421     		movs	r1, #84
 947 0582 8448     		ldr	r0, .L82+32
 948 0584 FFF7FEFF 		bl	GFXfillRect
 280:ui.c          ****                        
 281:ui.c          **** 
 282:ui.c          ****                         myGFX_setFont(1);
 949              		.loc 1 282 0
 950 0588 0120     		movs	r0, #1
 951 058a FFF7FEFF 		bl	myGFX_setFont
 283:ui.c          ****                         presetNumberToStore = presetNumberToStore - (Decoder_1_GetPosition());
 952              		.loc 1 283 0
 953 058e 824B     		ldr	r3, .L82+36
 954 0590 93F90030 		ldrsb	r3, [r3]
 955 0594 DCB2     		uxtb	r4, r3
 956 0596 FFF7FEFF 		bl	Decoder_1_GetPosition
 957 059a 0346     		mov	r3, r0
 958 059c DBB2     		uxtb	r3, r3
 959 059e E31A     		subs	r3, r4, r3
 960 05a0 DBB2     		uxtb	r3, r3
 961 05a2 5AB2     		sxtb	r2, r3
 962 05a4 7C4B     		ldr	r3, .L82+36
 963 05a6 1A70     		strb	r2, [r3]
 284:ui.c          ****                         if (presetNumberToStore < 0)
 964              		.loc 1 284 0
 965 05a8 7B4B     		ldr	r3, .L82+36
 966 05aa 93F90030 		ldrsb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 23


 967 05ae 002B     		cmp	r3, #0
 968 05b0 08DA     		bge	.L41
 285:ui.c          ****                         {
 286:ui.c          ****                             presetNumberToStore += 59;
 969              		.loc 1 286 0
 970 05b2 794B     		ldr	r3, .L82+36
 971 05b4 93F90030 		ldrsb	r3, [r3]
 972 05b8 DBB2     		uxtb	r3, r3
 973 05ba 3B33     		adds	r3, r3, #59
 974 05bc DBB2     		uxtb	r3, r3
 975 05be 5AB2     		sxtb	r2, r3
 976 05c0 754B     		ldr	r3, .L82+36
 977 05c2 1A70     		strb	r2, [r3]
 978              	.L41:
 287:ui.c          ****                         }
 288:ui.c          ****                         if (presetNumberToStore > 58)
 979              		.loc 1 288 0
 980 05c4 744B     		ldr	r3, .L82+36
 981 05c6 93F90030 		ldrsb	r3, [r3]
 982 05ca 3A2B     		cmp	r3, #58
 983 05cc 08DD     		ble	.L42
 289:ui.c          ****                         {
 290:ui.c          ****                             presetNumberToStore -= 59;
 984              		.loc 1 290 0
 985 05ce 724B     		ldr	r3, .L82+36
 986 05d0 93F90030 		ldrsb	r3, [r3]
 987 05d4 DBB2     		uxtb	r3, r3
 988 05d6 3B3B     		subs	r3, r3, #59
 989 05d8 DBB2     		uxtb	r3, r3
 990 05da 5AB2     		sxtb	r2, r3
 991 05dc 6E4B     		ldr	r3, .L82+36
 992 05de 1A70     		strb	r2, [r3]
 993              	.L42:
 291:ui.c          ****                         }
 292:ui.c          ****                         Decoder_1_SetPosition(0);
 994              		.loc 1 292 0
 995 05e0 0020     		movs	r0, #0
 996 05e2 FFF7FEFF 		bl	Decoder_1_SetPosition
 293:ui.c          ****                         
 294:ui.c          ****                         
 295:ui.c          ****                         GFXsetCursor(&theGFX, 84,58);
 997              		.loc 1 295 0
 998 05e6 3A22     		movs	r2, #58
 999 05e8 5421     		movs	r1, #84
 1000 05ea 6A48     		ldr	r0, .L82+32
 1001 05ec FFF7FEFF 		bl	GFXsetCursor
 296:ui.c          ****                         
 297:ui.c          ****                         int8_t presetNumberToStoreTemp = presetNumberToStore;
 1002              		.loc 1 297 0
 1003 05f0 694B     		ldr	r3, .L82+36
 1004 05f2 1B78     		ldrb	r3, [r3]
 1005 05f4 7B77     		strb	r3, [r7, #29]
 298:ui.c          **** 
 299:ui.c          ****                         uint8_t currentChar = ((uint8_t)presetNumberToStoreTemp / 10);    
 1006              		.loc 1 299 0
 1007 05f6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1008 05f8 684A     		ldr	r2, .L82+40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 24


 1009 05fa A2FB0323 		umull	r2, r3, r2, r3
 1010 05fe DB08     		lsrs	r3, r3, #3
 1011 0600 3B77     		strb	r3, [r7, #28]
 300:ui.c          ****                         GFXwrite(&theGFX, currentChar + 48);
 1012              		.loc 1 300 0
 1013 0602 3B7F     		ldrb	r3, [r7, #28]
 1014 0604 3033     		adds	r3, r3, #48
 1015 0606 DBB2     		uxtb	r3, r3
 1016 0608 1946     		mov	r1, r3
 1017 060a 6248     		ldr	r0, .L82+32
 1018 060c FFF7FEFF 		bl	GFXwrite
 301:ui.c          ****                         presetNumberToStoreTemp -= currentChar * 10;
 1019              		.loc 1 301 0
 1020 0610 3B7F     		ldrb	r3, [r7, #28]
 1021 0612 1A46     		mov	r2, r3
 1022 0614 5201     		lsls	r2, r2, #5
 1023 0616 D21A     		subs	r2, r2, r3
 1024 0618 9200     		lsls	r2, r2, #2
 1025 061a D31A     		subs	r3, r2, r3
 1026 061c 5B00     		lsls	r3, r3, #1
 1027 061e DAB2     		uxtb	r2, r3
 1028 0620 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1029 0622 1344     		add	r3, r3, r2
 1030 0624 DBB2     		uxtb	r3, r3
 1031 0626 7B77     		strb	r3, [r7, #29]
 302:ui.c          ****                         currentChar = ((uint8_t)presetNumberToStoreTemp);    
 1032              		.loc 1 302 0
 1033 0628 7B7F     		ldrb	r3, [r7, #29]
 1034 062a 3B77     		strb	r3, [r7, #28]
 303:ui.c          ****                         GFXwrite(&theGFX, currentChar + 48);
 1035              		.loc 1 303 0
 1036 062c 3B7F     		ldrb	r3, [r7, #28]
 1037 062e 3033     		adds	r3, r3, #48
 1038 0630 DBB2     		uxtb	r3, r3
 1039 0632 1946     		mov	r1, r3
 1040 0634 5748     		ldr	r0, .L82+32
 1041 0636 FFF7FEFF 		bl	GFXwrite
 304:ui.c          ****                         mainOLEDWaitingToSend = 1;
 1042              		.loc 1 304 0
 1043 063a 594B     		ldr	r3, .L82+44
 1044 063c 0122     		movs	r2, #1
 1045 063e 1A70     		strb	r2, [r3]
 1046              	.LBE5:
 1047 0640 27E0     		b	.L39
 1048              	.L40:
 1049              	.LBB6:
 305:ui.c          ****                     }
 306:ui.c          ****                     else
 307:ui.c          ****                     {
 308:ui.c          ****                        uint8_t currentChar = presetStoreStage - 1;
 1050              		.loc 1 308 0
 1051 0642 534B     		ldr	r3, .L82+28
 1052 0644 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 0646 013B     		subs	r3, r3, #1
 1054 0648 FB76     		strb	r3, [r7, #27]
 309:ui.c          ****                         newPresetName[currentChar] = newPresetName[currentChar] - (Decoder_1_GetPos
 1055              		.loc 1 309 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 25


 1056 064a FC7E     		ldrb	r4, [r7, #27]	@ zero_extendqisi2
 1057 064c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1058 064e 554A     		ldr	r2, .L82+48
 1059 0650 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 1060 0652 FFF7FEFF 		bl	Decoder_1_GetPosition
 1061 0656 0346     		mov	r3, r0
 1062 0658 DBB2     		uxtb	r3, r3
 1063 065a EB1A     		subs	r3, r5, r3
 1064 065c DAB2     		uxtb	r2, r3
 1065 065e 514B     		ldr	r3, .L82+48
 1066 0660 1A55     		strb	r2, [r3, r4]
 310:ui.c          ****                         Decoder_1_SetPosition(0);
 1067              		.loc 1 310 0
 1068 0662 0020     		movs	r0, #0
 1069 0664 FFF7FEFF 		bl	Decoder_1_SetPosition
 311:ui.c          ****                         OLEDtextColor(1, 0);
 1070              		.loc 1 311 0
 1071 0668 0021     		movs	r1, #0
 1072 066a 0120     		movs	r0, #1
 1073 066c FFF7FEFF 		bl	OLEDtextColor
 312:ui.c          ****                         myGFX_setFont(0);
 1074              		.loc 1 312 0
 1075 0670 0020     		movs	r0, #0
 1076 0672 FFF7FEFF 		bl	myGFX_setFont
 313:ui.c          ****                         GFXsetCursor(&theGFX, 0,50);
 1077              		.loc 1 313 0
 1078 0676 3222     		movs	r2, #50
 1079 0678 0021     		movs	r1, #0
 1080 067a 4648     		ldr	r0, .L82+32
 1081 067c FFF7FEFF 		bl	GFXsetCursor
 314:ui.c          ****                         OLEDwriteString(newPresetName, 14, 0, ThirdLine);
 1082              		.loc 1 314 0
 1083 0680 0223     		movs	r3, #2
 1084 0682 0022     		movs	r2, #0
 1085 0684 0E21     		movs	r1, #14
 1086 0686 4748     		ldr	r0, .L82+48
 1087 0688 FFF7FEFF 		bl	OLEDwriteString
 315:ui.c          ****                         mainOLEDWaitingToSend = 1;
 1088              		.loc 1 315 0
 1089 068c 444B     		ldr	r3, .L82+44
 1090 068e 0122     		movs	r2, #1
 1091 0690 1A70     		strb	r2, [r3]
 1092              	.L39:
 1093              	.LBE6:
 316:ui.c          ****                     }
 317:ui.c          ****                 }
 318:ui.c          ****             }
 319:ui.c          ****             
 320:ui.c          ****             
 321:ui.c          ****             if (menuPosition[0][0] == TransposeMenu) //editing transpose
 1094              		.loc 1 321 0
 1095 0692 3D4B     		ldr	r3, .L82+20
 1096 0694 93F90030 		ldrsb	r3, [r3]
 1097 0698 062B     		cmp	r3, #6
 1098 069a 40F03281 		bne	.L43
 322:ui.c          ****             {
 323:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 26


 1099              		.loc 1 323 0
 1100 069e 3B4B     		ldr	r3, .L82+24
 1101 06a0 93F90030 		ldrsb	r3, [r3]
 1102 06a4 97F91E20 		ldrsb	r2, [r7, #30]
 1103 06a8 9A42     		cmp	r2, r3
 1104 06aa 00F02A81 		beq	.L43
 1105              	.LBB7:
 324:ui.c          ****                 {
 325:ui.c          ****                     OLEDtextColor(1, 0);
 1106              		.loc 1 325 0
 1107 06ae 0021     		movs	r1, #0
 1108 06b0 0120     		movs	r0, #1
 1109 06b2 FFF7FEFF 		bl	OLEDtextColor
 326:ui.c          ****                     OLEDclearLine(ThirdLine);
 1110              		.loc 1 326 0
 1111 06b6 0220     		movs	r0, #2
 1112 06b8 FFF7FEFF 		bl	OLEDclearLine
 327:ui.c          ****                     OLEDclearLine(FourthLine);
 1113              		.loc 1 327 0
 1114 06bc 0320     		movs	r0, #3
 1115 06be FFF7FEFF 		bl	OLEDclearLine
 328:ui.c          ****                     float theMultiplier = 1.0f;
 1116              		.loc 1 328 0
 1117 06c2 4FF07E53 		mov	r3, #1065353216
 1118 06c6 7B62     		str	r3, [r7, #36]	@ float
 329:ui.c          ****                     if (semitonesOrCents == 1)
 1119              		.loc 1 329 0
 1120 06c8 374B     		ldr	r3, .L82+52
 1121 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1122 06cc 012B     		cmp	r3, #1
 1123 06ce 01D1     		bne	.L44
 330:ui.c          ****                     {
 331:ui.c          ****                         theMultiplier = 0.01f;
 1124              		.loc 1 331 0
 1125 06d0 364B     		ldr	r3, .L82+56
 1126 06d2 7B62     		str	r3, [r7, #36]	@ float
 1127              	.L44:
 332:ui.c          ****                     }
 333:ui.c          ****                     myGFX_setFont(1);
 1128              		.loc 1 333 0
 1129 06d4 0120     		movs	r0, #1
 1130 06d6 FFF7FEFF 		bl	myGFX_setFont
 334:ui.c          ****                     transposeFloat = transposeFloat - (((float)Decoder_1_GetPosition()) * theMultip
 1131              		.loc 1 334 0
 1132 06da 354B     		ldr	r3, .L82+60
 1133 06dc 1C68     		ldr	r4, [r3]	@ float
 1134 06de FFF7FEFF 		bl	Decoder_1_GetPosition
 1135 06e2 0346     		mov	r3, r0
 1136 06e4 1846     		mov	r0, r3
 1137 06e6 FFF7FEFF 		bl	__aeabi_i2f
 1138 06ea 0346     		mov	r3, r0
 1139 06ec 796A     		ldr	r1, [r7, #36]	@ float
 1140 06ee 1846     		mov	r0, r3
 1141 06f0 FFF7FEFF 		bl	__aeabi_fmul
 1142 06f4 0346     		mov	r3, r0
 1143 06f6 1946     		mov	r1, r3
 1144 06f8 2046     		mov	r0, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 27


 1145 06fa FFF7FEFF 		bl	__aeabi_fsub
 1146 06fe 0346     		mov	r3, r0
 1147 0700 1A46     		mov	r2, r3
 1148 0702 2B4B     		ldr	r3, .L82+60
 1149 0704 1A60     		str	r2, [r3]	@ float
 335:ui.c          ****                     Decoder_1_SetPosition(0);
 1150              		.loc 1 335 0
 1151 0706 0020     		movs	r0, #0
 1152 0708 FFF7FEFF 		bl	Decoder_1_SetPosition
 336:ui.c          ****                     if (transposeFloat < -12.0)
 1153              		.loc 1 336 0
 1154 070c 284B     		ldr	r3, .L82+60
 1155 070e 1B68     		ldr	r3, [r3]	@ float
 1156 0710 2849     		ldr	r1, .L82+64
 1157 0712 1846     		mov	r0, r3
 1158 0714 FFF7FEFF 		bl	__aeabi_fcmplt
 1159 0718 0346     		mov	r3, r0
 1160 071a 002B     		cmp	r3, #0
 1161 071c 03D0     		beq	.L74
 337:ui.c          ****                     {
 338:ui.c          ****                         transposeFloat = -12.0;
 1162              		.loc 1 338 0
 1163 071e 244B     		ldr	r3, .L82+60
 1164 0720 244A     		ldr	r2, .L82+64
 1165 0722 1A60     		str	r2, [r3]	@ float
 1166 0724 0BE0     		b	.L47
 1167              	.L74:
 339:ui.c          ****                     }
 340:ui.c          ****                     else if (transposeFloat > 12.0)
 1168              		.loc 1 340 0
 1169 0726 224B     		ldr	r3, .L82+60
 1170 0728 1B68     		ldr	r3, [r3]	@ float
 1171 072a 2349     		ldr	r1, .L82+68
 1172 072c 1846     		mov	r0, r3
 1173 072e FFF7FEFF 		bl	__aeabi_fcmpgt
 1174 0732 0346     		mov	r3, r0
 1175 0734 002B     		cmp	r3, #0
 1176 0736 02D0     		beq	.L47
 341:ui.c          ****                     {
 342:ui.c          ****                         transposeFloat = 12.0;
 1177              		.loc 1 342 0
 1178 0738 1D4B     		ldr	r3, .L82+60
 1179 073a 1F4A     		ldr	r2, .L82+68
 1180 073c 1A60     		str	r2, [r3]	@ float
 1181              	.L47:
 343:ui.c          ****                     }
 344:ui.c          ****                     float absTransposeFloat = transposeFloat;
 1182              		.loc 1 344 0
 1183 073e 1C4B     		ldr	r3, .L82+60
 1184 0740 1B68     		ldr	r3, [r3]	@ float
 1185 0742 3B62     		str	r3, [r7, #32]	@ float
 345:ui.c          ****                     GFXsetCursor(&theGFX, 20,53);
 1186              		.loc 1 345 0
 1187 0744 3522     		movs	r2, #53
 1188 0746 1421     		movs	r1, #20
 1189 0748 1248     		ldr	r0, .L82+32
 1190 074a FFF7FEFF 		bl	GFXsetCursor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 28


 346:ui.c          ****                     if (transposeFloat < 0.0f)
 1191              		.loc 1 346 0
 1192 074e 184B     		ldr	r3, .L82+60
 1193 0750 1B68     		ldr	r3, [r3]	@ float
 1194 0752 4FF00001 		mov	r1, #0
 1195 0756 1846     		mov	r0, r3
 1196 0758 FFF7FEFF 		bl	__aeabi_fcmplt
 1197 075c 0346     		mov	r3, r0
 1198 075e 002B     		cmp	r3, #0
 1199 0760 2CD0     		beq	.L75
 347:ui.c          ****                     {
 348:ui.c          ****                         GFXwrite(&theGFX, 45);
 1200              		.loc 1 348 0
 1201 0762 2D21     		movs	r1, #45
 1202 0764 0B48     		ldr	r0, .L82+32
 1203 0766 FFF7FEFF 		bl	GFXwrite
 349:ui.c          ****                         absTransposeFloat = -absTransposeFloat;
 1204              		.loc 1 349 0
 1205 076a 3B6A     		ldr	r3, [r7, #32]
 1206 076c 83F00043 		eor	r3, r3, #-2147483648
 1207 0770 3B62     		str	r3, [r7, #32]	@ float
 1208 0772 27E0     		b	.L51
 1209              	.L83:
 1210              		.align	2
 1211              	.L82:
 1212 0774 00000000 		.word	encoderUp
 1213 0778 00000000 		.word	octave
 1214 077c 00000000 		.word	prevOctave
 1215 0780 00000000 		.word	editMode
 1216 0784 00000000 		.word	encoderWatch
 1217 0788 00000000 		.word	menuPosition
 1218 078c 00000000 		.word	prevEncoderVal
 1219 0790 00000000 		.word	presetStoreStage
 1220 0794 00000000 		.word	theGFX
 1221 0798 00000000 		.word	presetNumberToStore
 1222 079c CDCCCCCC 		.word	-858993459
 1223 07a0 00000000 		.word	mainOLEDWaitingToSend
 1224 07a4 00000000 		.word	newPresetName
 1225 07a8 00000000 		.word	semitonesOrCents
 1226 07ac 0AD7233C 		.word	1008981770
 1227 07b0 00000000 		.word	transposeFloat
 1228 07b4 000040C1 		.word	-1052770304
 1229 07b8 00004041 		.word	1094713344
 1230              	.L75:
 350:ui.c          ****                     }
 351:ui.c          ****                     else
 352:ui.c          ****                     {
 353:ui.c          ****                         GFXwrite(&theGFX, 32);
 1231              		.loc 1 353 0
 1232 07bc 2021     		movs	r1, #32
 1233 07be C148     		ldr	r0, .L84
 1234 07c0 FFF7FEFF 		bl	GFXwrite
 1235              	.L51:
 354:ui.c          ****                     }
 355:ui.c          ****                     if (!semitonesOrCents)
 1236              		.loc 1 355 0
 1237 07c4 C04B     		ldr	r3, .L84+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 29


 1238 07c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 07c8 002B     		cmp	r3, #0
 1240 07ca 0ED1     		bne	.L52
 356:ui.c          ****                     {
 357:ui.c          ****                         OLEDtextColor(0, 1);
 1241              		.loc 1 357 0
 1242 07cc 0121     		movs	r1, #1
 1243 07ce 0020     		movs	r0, #0
 1244 07d0 FFF7FEFF 		bl	OLEDtextColor
 358:ui.c          ****                         GFXfillRect(&theGFX, 32, 34, 30, 25, theGFX.textbgcolor);
 1245              		.loc 1 358 0
 1246 07d4 BB4B     		ldr	r3, .L84
 1247 07d6 5B8A     		ldrh	r3, [r3, #18]
 1248 07d8 0193     		str	r3, [sp, #4]
 1249 07da 1923     		movs	r3, #25
 1250 07dc 0093     		str	r3, [sp]
 1251 07de 1E23     		movs	r3, #30
 1252 07e0 2222     		movs	r2, #34
 1253 07e2 2021     		movs	r1, #32
 1254 07e4 B748     		ldr	r0, .L84
 1255 07e6 FFF7FEFF 		bl	GFXfillRect
 1256              	.L52:
 359:ui.c          ****                     }
 360:ui.c          **** 
 361:ui.c          ****                     uint8_t currentChar = ((uint8_t)(absTransposeFloat * 0.1f));  
 1257              		.loc 1 361 0
 1258 07ea B849     		ldr	r1, .L84+8
 1259 07ec 386A     		ldr	r0, [r7, #32]	@ float
 1260 07ee FFF7FEFF 		bl	__aeabi_fmul
 1261 07f2 0346     		mov	r3, r0
 1262 07f4 1846     		mov	r0, r3
 1263 07f6 FFF7FEFF 		bl	__aeabi_f2uiz
 1264 07fa 0346     		mov	r3, r0
 1265 07fc BB76     		strb	r3, [r7, #26]
 362:ui.c          ****                     absTransposeFloat -= currentChar * 10.0f;
 1266              		.loc 1 362 0
 1267 07fe BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1268 0800 1846     		mov	r0, r3
 1269 0802 FFF7FEFF 		bl	__aeabi_i2f
 1270 0806 0346     		mov	r3, r0
 1271 0808 B149     		ldr	r1, .L84+12
 1272 080a 1846     		mov	r0, r3
 1273 080c FFF7FEFF 		bl	__aeabi_fmul
 1274 0810 0346     		mov	r3, r0
 1275 0812 1946     		mov	r1, r3
 1276 0814 386A     		ldr	r0, [r7, #32]	@ float
 1277 0816 FFF7FEFF 		bl	__aeabi_fsub
 1278 081a 0346     		mov	r3, r0
 1279 081c 3B62     		str	r3, [r7, #32]	@ float
 363:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1280              		.loc 1 363 0
 1281 081e BB7E     		ldrb	r3, [r7, #26]
 1282 0820 3033     		adds	r3, r3, #48
 1283 0822 DBB2     		uxtb	r3, r3
 1284 0824 1946     		mov	r1, r3
 1285 0826 A748     		ldr	r0, .L84
 1286 0828 FFF7FEFF 		bl	GFXwrite
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 30


 364:ui.c          ****                     currentChar = ((uint8_t)absTransposeFloat);    
 1287              		.loc 1 364 0
 1288 082c 386A     		ldr	r0, [r7, #32]	@ float
 1289 082e FFF7FEFF 		bl	__aeabi_f2uiz
 1290 0832 0346     		mov	r3, r0
 1291 0834 BB76     		strb	r3, [r7, #26]
 365:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1292              		.loc 1 365 0
 1293 0836 BB7E     		ldrb	r3, [r7, #26]
 1294 0838 3033     		adds	r3, r3, #48
 1295 083a DBB2     		uxtb	r3, r3
 1296 083c 1946     		mov	r1, r3
 1297 083e A148     		ldr	r0, .L84
 1298 0840 FFF7FEFF 		bl	GFXwrite
 366:ui.c          ****                     OLEDtextColor(1, 0);
 1299              		.loc 1 366 0
 1300 0844 0021     		movs	r1, #0
 1301 0846 0120     		movs	r0, #1
 1302 0848 FFF7FEFF 		bl	OLEDtextColor
 367:ui.c          **** 
 368:ui.c          ****                     GFXwrite(&theGFX, 46); //decimal point
 1303              		.loc 1 368 0
 1304 084c 2E21     		movs	r1, #46
 1305 084e 9D48     		ldr	r0, .L84
 1306 0850 FFF7FEFF 		bl	GFXwrite
 369:ui.c          ****                     if (semitonesOrCents)
 1307              		.loc 1 369 0
 1308 0854 9C4B     		ldr	r3, .L84+4
 1309 0856 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1310 0858 002B     		cmp	r3, #0
 1311 085a 0ED0     		beq	.L53
 370:ui.c          ****                     {
 371:ui.c          ****                         OLEDtextColor(0, 1);
 1312              		.loc 1 371 0
 1313 085c 0121     		movs	r1, #1
 1314 085e 0020     		movs	r0, #0
 1315 0860 FFF7FEFF 		bl	OLEDtextColor
 372:ui.c          ****                         GFXfillRect(&theGFX, 70, 34, 30, 25, theGFX.textbgcolor);
 1316              		.loc 1 372 0
 1317 0864 974B     		ldr	r3, .L84
 1318 0866 5B8A     		ldrh	r3, [r3, #18]
 1319 0868 0193     		str	r3, [sp, #4]
 1320 086a 1923     		movs	r3, #25
 1321 086c 0093     		str	r3, [sp]
 1322 086e 1E23     		movs	r3, #30
 1323 0870 2222     		movs	r2, #34
 1324 0872 4621     		movs	r1, #70
 1325 0874 9348     		ldr	r0, .L84
 1326 0876 FFF7FEFF 		bl	GFXfillRect
 1327              	.L53:
 373:ui.c          ****                     }
 374:ui.c          ****                     absTransposeFloat -= currentChar;
 1328              		.loc 1 374 0
 1329 087a BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1330 087c 1846     		mov	r0, r3
 1331 087e FFF7FEFF 		bl	__aeabi_i2f
 1332 0882 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 31


 1333 0884 1946     		mov	r1, r3
 1334 0886 386A     		ldr	r0, [r7, #32]	@ float
 1335 0888 FFF7FEFF 		bl	__aeabi_fsub
 1336 088c 0346     		mov	r3, r0
 1337 088e 3B62     		str	r3, [r7, #32]	@ float
 375:ui.c          ****                     currentChar = ((uint8_t)(absTransposeFloat * 10.0f));    
 1338              		.loc 1 375 0
 1339 0890 8F49     		ldr	r1, .L84+12
 1340 0892 386A     		ldr	r0, [r7, #32]	@ float
 1341 0894 FFF7FEFF 		bl	__aeabi_fmul
 1342 0898 0346     		mov	r3, r0
 1343 089a 1846     		mov	r0, r3
 1344 089c FFF7FEFF 		bl	__aeabi_f2uiz
 1345 08a0 0346     		mov	r3, r0
 1346 08a2 BB76     		strb	r3, [r7, #26]
 376:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1347              		.loc 1 376 0
 1348 08a4 BB7E     		ldrb	r3, [r7, #26]
 1349 08a6 3033     		adds	r3, r3, #48
 1350 08a8 DBB2     		uxtb	r3, r3
 1351 08aa 1946     		mov	r1, r3
 1352 08ac 8548     		ldr	r0, .L84
 1353 08ae FFF7FEFF 		bl	GFXwrite
 377:ui.c          ****                     absTransposeFloat -= (currentChar * 0.1f);
 1354              		.loc 1 377 0
 1355 08b2 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1356 08b4 1846     		mov	r0, r3
 1357 08b6 FFF7FEFF 		bl	__aeabi_i2f
 1358 08ba 0346     		mov	r3, r0
 1359 08bc 8349     		ldr	r1, .L84+8
 1360 08be 1846     		mov	r0, r3
 1361 08c0 FFF7FEFF 		bl	__aeabi_fmul
 1362 08c4 0346     		mov	r3, r0
 1363 08c6 1946     		mov	r1, r3
 1364 08c8 386A     		ldr	r0, [r7, #32]	@ float
 1365 08ca FFF7FEFF 		bl	__aeabi_fsub
 1366 08ce 0346     		mov	r3, r0
 1367 08d0 3B62     		str	r3, [r7, #32]	@ float
 378:ui.c          ****                     currentChar = ((uint8_t)(absTransposeFloat * 100.0f));    
 1368              		.loc 1 378 0
 1369 08d2 8049     		ldr	r1, .L84+16
 1370 08d4 386A     		ldr	r0, [r7, #32]	@ float
 1371 08d6 FFF7FEFF 		bl	__aeabi_fmul
 1372 08da 0346     		mov	r3, r0
 1373 08dc 1846     		mov	r0, r3
 1374 08de FFF7FEFF 		bl	__aeabi_f2uiz
 1375 08e2 0346     		mov	r3, r0
 1376 08e4 BB76     		strb	r3, [r7, #26]
 379:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1377              		.loc 1 379 0
 1378 08e6 BB7E     		ldrb	r3, [r7, #26]
 1379 08e8 3033     		adds	r3, r3, #48
 1380 08ea DBB2     		uxtb	r3, r3
 1381 08ec 1946     		mov	r1, r3
 1382 08ee 7548     		ldr	r0, .L84
 1383 08f0 FFF7FEFF 		bl	GFXwrite
 380:ui.c          ****                     OLEDtextColor(1, 0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 32


 1384              		.loc 1 380 0
 1385 08f4 0021     		movs	r1, #0
 1386 08f6 0120     		movs	r0, #1
 1387 08f8 FFF7FEFF 		bl	OLEDtextColor
 381:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1388              		.loc 1 381 0
 1389 08fc 764B     		ldr	r3, .L84+20
 1390 08fe 0122     		movs	r2, #1
 1391 0900 1A70     		strb	r2, [r3]
 1392              	.L43:
 1393              	.LBE7:
 382:ui.c          ****                 }
 383:ui.c          ****             }
 384:ui.c          ****             if (menuPosition[0][0] == VolumeMenu) //editing volume
 1394              		.loc 1 384 0
 1395 0902 764B     		ldr	r3, .L84+24
 1396 0904 93F90030 		ldrsb	r3, [r3]
 1397 0908 0C2B     		cmp	r3, #12
 1398 090a 40F0A180 		bne	.L54
 385:ui.c          ****             {
 386:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1399              		.loc 1 386 0
 1400 090e 744B     		ldr	r3, .L84+28
 1401 0910 93F90030 		ldrsb	r3, [r3]
 1402 0914 97F91E20 		ldrsb	r2, [r7, #30]
 1403 0918 9A42     		cmp	r2, r3
 1404 091a 00F09980 		beq	.L54
 1405              	.LBB8:
 387:ui.c          ****                 {
 388:ui.c          ****                     OLEDtextColor(1, 0);
 1406              		.loc 1 388 0
 1407 091e 0021     		movs	r1, #0
 1408 0920 0120     		movs	r0, #1
 1409 0922 FFF7FEFF 		bl	OLEDtextColor
 389:ui.c          ****                     OLEDclearLine(ThirdLine);
 1410              		.loc 1 389 0
 1411 0926 0220     		movs	r0, #2
 1412 0928 FFF7FEFF 		bl	OLEDclearLine
 390:ui.c          ****                     OLEDclearLine(FourthLine);
 1413              		.loc 1 390 0
 1414 092c 0320     		movs	r0, #3
 1415 092e FFF7FEFF 		bl	OLEDclearLine
 391:ui.c          ****                     float theMultiplier = 1.0f;
 1416              		.loc 1 391 0
 1417 0932 4FF07E53 		mov	r3, #1065353216
 1418 0936 7B61     		str	r3, [r7, #20]	@ float
 392:ui.c          ****  
 393:ui.c          ****                     myGFX_setFont(1);
 1419              		.loc 1 393 0
 1420 0938 0120     		movs	r0, #1
 1421 093a FFF7FEFF 		bl	myGFX_setFont
 394:ui.c          ****                     volumeInt = volumeInt - (Decoder_1_GetPosition());
 1422              		.loc 1 394 0
 1423 093e 694B     		ldr	r3, .L84+32
 1424 0940 93F90030 		ldrsb	r3, [r3]
 1425 0944 DCB2     		uxtb	r4, r3
 1426 0946 FFF7FEFF 		bl	Decoder_1_GetPosition
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 33


 1427 094a 0346     		mov	r3, r0
 1428 094c DBB2     		uxtb	r3, r3
 1429 094e E31A     		subs	r3, r4, r3
 1430 0950 DBB2     		uxtb	r3, r3
 1431 0952 5AB2     		sxtb	r2, r3
 1432 0954 634B     		ldr	r3, .L84+32
 1433 0956 1A70     		strb	r2, [r3]
 395:ui.c          ****                     Decoder_1_SetPosition(0);
 1434              		.loc 1 395 0
 1435 0958 0020     		movs	r0, #0
 1436 095a FFF7FEFF 		bl	Decoder_1_SetPosition
 396:ui.c          ****                     if (volumeInt < 0.0)
 1437              		.loc 1 396 0
 1438 095e 614B     		ldr	r3, .L84+32
 1439 0960 93F90030 		ldrsb	r3, [r3]
 1440 0964 1846     		mov	r0, r3
 1441 0966 FFF7FEFF 		bl	__aeabi_i2d
 1442 096a 4FF00002 		mov	r2, #0
 1443 096e 4FF00003 		mov	r3, #0
 1444 0972 FFF7FEFF 		bl	__aeabi_dcmplt
 1445 0976 0346     		mov	r3, r0
 1446 0978 002B     		cmp	r3, #0
 1447 097a 03D0     		beq	.L76
 397:ui.c          ****                     {
 398:ui.c          ****                         volumeInt = 0.0;
 1448              		.loc 1 398 0
 1449 097c 594B     		ldr	r3, .L84+32
 1450 097e 0022     		movs	r2, #0
 1451 0980 1A70     		strb	r2, [r3]
 1452 0982 10E0     		b	.L57
 1453              	.L76:
 399:ui.c          ****                     }
 400:ui.c          ****                     else if (volumeInt > 100.0)
 1454              		.loc 1 400 0
 1455 0984 574B     		ldr	r3, .L84+32
 1456 0986 93F90030 		ldrsb	r3, [r3]
 1457 098a 1846     		mov	r0, r3
 1458 098c FFF7FEFF 		bl	__aeabi_i2d
 1459 0990 4FF00002 		mov	r2, #0
 1460 0994 544B     		ldr	r3, .L84+36
 1461 0996 FFF7FEFF 		bl	__aeabi_dcmpgt
 1462 099a 0346     		mov	r3, r0
 1463 099c 002B     		cmp	r3, #0
 1464 099e 02D0     		beq	.L57
 401:ui.c          ****                     {
 402:ui.c          ****                         volumeInt = 100.0;
 1465              		.loc 1 402 0
 1466 09a0 504B     		ldr	r3, .L84+32
 1467 09a2 6422     		movs	r2, #100
 1468 09a4 1A70     		strb	r2, [r3]
 1469              	.L57:
 403:ui.c          ****                     }
 404:ui.c          ****                     OLEDtextColor(1, 0);
 1470              		.loc 1 404 0
 1471 09a6 0021     		movs	r1, #0
 1472 09a8 0120     		movs	r0, #1
 1473 09aa FFF7FEFF 		bl	OLEDtextColor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 34


 405:ui.c          ****                     GFXsetCursor(&theGFX, 20,53);
 1474              		.loc 1 405 0
 1475 09ae 3522     		movs	r2, #53
 1476 09b0 1421     		movs	r1, #20
 1477 09b2 4448     		ldr	r0, .L84
 1478 09b4 FFF7FEFF 		bl	GFXsetCursor
 406:ui.c          ****                     GFXwrite(&theGFX, 32);
 1479              		.loc 1 406 0
 1480 09b8 2021     		movs	r1, #32
 1481 09ba 4248     		ldr	r0, .L84
 1482 09bc FFF7FEFF 		bl	GFXwrite
 407:ui.c          ****                     
 408:ui.c          ****                     int8_t volumeIntTemp = volumeInt;
 1483              		.loc 1 408 0
 1484 09c0 484B     		ldr	r3, .L84+32
 1485 09c2 1B78     		ldrb	r3, [r3]
 1486 09c4 FB74     		strb	r3, [r7, #19]
 409:ui.c          ****                     uint8_t currentChar = ((uint8_t)(volumeIntTemp / 100));  
 1487              		.loc 1 409 0
 1488 09c6 97F91330 		ldrsb	r3, [r7, #19]
 1489 09ca 484A     		ldr	r2, .L84+40
 1490 09cc 82FB0312 		smull	r1, r2, r2, r3
 1491 09d0 5211     		asrs	r2, r2, #5
 1492 09d2 DB17     		asrs	r3, r3, #31
 1493 09d4 D31A     		subs	r3, r2, r3
 1494 09d6 5BB2     		sxtb	r3, r3
 1495 09d8 BB74     		strb	r3, [r7, #18]
 410:ui.c          ****                     volumeIntTemp -= currentChar * 100;
 1496              		.loc 1 410 0
 1497 09da BB7C     		ldrb	r3, [r7, #18]
 1498 09dc 1A46     		mov	r2, r3
 1499 09de 9200     		lsls	r2, r2, #2
 1500 09e0 1A44     		add	r2, r2, r3
 1501 09e2 D200     		lsls	r2, r2, #3
 1502 09e4 D31A     		subs	r3, r2, r3
 1503 09e6 9B00     		lsls	r3, r3, #2
 1504 09e8 DAB2     		uxtb	r2, r3
 1505 09ea FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1506 09ec 1344     		add	r3, r3, r2
 1507 09ee DBB2     		uxtb	r3, r3
 1508 09f0 FB74     		strb	r3, [r7, #19]
 411:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1509              		.loc 1 411 0
 1510 09f2 BB7C     		ldrb	r3, [r7, #18]
 1511 09f4 3033     		adds	r3, r3, #48
 1512 09f6 DBB2     		uxtb	r3, r3
 1513 09f8 1946     		mov	r1, r3
 1514 09fa 3248     		ldr	r0, .L84
 1515 09fc FFF7FEFF 		bl	GFXwrite
 412:ui.c          ****                     currentChar = ((uint8_t)volumeIntTemp / 10);    
 1516              		.loc 1 412 0
 1517 0a00 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1518 0a02 3B4A     		ldr	r2, .L84+44
 1519 0a04 A2FB0323 		umull	r2, r3, r2, r3
 1520 0a08 DB08     		lsrs	r3, r3, #3
 1521 0a0a BB74     		strb	r3, [r7, #18]
 413:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 35


 1522              		.loc 1 413 0
 1523 0a0c BB7C     		ldrb	r3, [r7, #18]
 1524 0a0e 3033     		adds	r3, r3, #48
 1525 0a10 DBB2     		uxtb	r3, r3
 1526 0a12 1946     		mov	r1, r3
 1527 0a14 2B48     		ldr	r0, .L84
 1528 0a16 FFF7FEFF 		bl	GFXwrite
 414:ui.c          ****                     volumeIntTemp -= currentChar * 10;
 1529              		.loc 1 414 0
 1530 0a1a BB7C     		ldrb	r3, [r7, #18]
 1531 0a1c 1A46     		mov	r2, r3
 1532 0a1e 5201     		lsls	r2, r2, #5
 1533 0a20 D21A     		subs	r2, r2, r3
 1534 0a22 9200     		lsls	r2, r2, #2
 1535 0a24 D31A     		subs	r3, r2, r3
 1536 0a26 5B00     		lsls	r3, r3, #1
 1537 0a28 DAB2     		uxtb	r2, r3
 1538 0a2a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1539 0a2c 1344     		add	r3, r3, r2
 1540 0a2e DBB2     		uxtb	r3, r3
 1541 0a30 FB74     		strb	r3, [r7, #19]
 415:ui.c          ****                     currentChar = ((uint8_t)volumeIntTemp);    
 1542              		.loc 1 415 0
 1543 0a32 FB7C     		ldrb	r3, [r7, #19]
 1544 0a34 BB74     		strb	r3, [r7, #18]
 416:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1545              		.loc 1 416 0
 1546 0a36 BB7C     		ldrb	r3, [r7, #18]
 1547 0a38 3033     		adds	r3, r3, #48
 1548 0a3a DBB2     		uxtb	r3, r3
 1549 0a3c 1946     		mov	r1, r3
 1550 0a3e 2148     		ldr	r0, .L84
 1551 0a40 FFF7FEFF 		bl	GFXwrite
 417:ui.c          ****                     volumeWaitingToSend = 1;
 1552              		.loc 1 417 0
 1553 0a44 2B4B     		ldr	r3, .L84+48
 1554 0a46 0122     		movs	r2, #1
 1555 0a48 1A70     		strb	r2, [r3]
 418:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1556              		.loc 1 418 0
 1557 0a4a 234B     		ldr	r3, .L84+20
 1558 0a4c 0122     		movs	r2, #1
 1559 0a4e 1A70     		strb	r2, [r3]
 1560              	.L54:
 1561              	.LBE8:
 419:ui.c          ****                 }
 420:ui.c          ****             }
 421:ui.c          ****             if (menuPosition[0][0] == DeadzonesMenu) //editing deadzones
 1562              		.loc 1 421 0
 1563 0a50 224B     		ldr	r3, .L84+24
 1564 0a52 93F90030 		ldrsb	r3, [r3]
 1565 0a56 082B     		cmp	r3, #8
 1566 0a58 40F0E080 		bne	.L59
 422:ui.c          ****             {
 423:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1567              		.loc 1 423 0
 1568 0a5c 204B     		ldr	r3, .L84+28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 36


 1569 0a5e 93F90030 		ldrsb	r3, [r3]
 1570 0a62 97F91E20 		ldrsb	r2, [r7, #30]
 1571 0a66 9A42     		cmp	r2, r3
 1572 0a68 00F0D880 		beq	.L59
 1573              	.LBB9:
 424:ui.c          ****                 {
 425:ui.c          ****                     OLEDtextColor(1, 0);
 1574              		.loc 1 425 0
 1575 0a6c 0021     		movs	r1, #0
 1576 0a6e 0120     		movs	r0, #1
 1577 0a70 FFF7FEFF 		bl	OLEDtextColor
 426:ui.c          ****                     OLEDclearLine(ThirdLine);
 1578              		.loc 1 426 0
 1579 0a74 0220     		movs	r0, #2
 1580 0a76 FFF7FEFF 		bl	OLEDclearLine
 427:ui.c          ****                     OLEDclearLine(FourthLine);
 1581              		.loc 1 427 0
 1582 0a7a 0320     		movs	r0, #3
 1583 0a7c FFF7FEFF 		bl	OLEDclearLine
 428:ui.c          ****                     
 429:ui.c          ****                     myGFX_setFont(1);
 1584              		.loc 1 429 0
 1585 0a80 0120     		movs	r0, #1
 1586 0a82 FFF7FEFF 		bl	myGFX_setFont
 430:ui.c          ****                     int16_t deadZoneTemp = deadZone;
 1587              		.loc 1 430 0
 1588 0a86 1C4B     		ldr	r3, .L84+52
 1589 0a88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 0a8a 3B82     		strh	r3, [r7, #16]	@ movhi
 431:ui.c          ****                     
 432:ui.c          ****                     deadZoneTemp = deadZoneTemp - Decoder_1_GetPosition();
 1591              		.loc 1 432 0
 1592 0a8c 3C8A     		ldrh	r4, [r7, #16]
 1593 0a8e FFF7FEFF 		bl	Decoder_1_GetPosition
 1594 0a92 0346     		mov	r3, r0
 1595 0a94 9BB2     		uxth	r3, r3
 1596 0a96 E31A     		subs	r3, r4, r3
 1597 0a98 9BB2     		uxth	r3, r3
 1598 0a9a 3B82     		strh	r3, [r7, #16]	@ movhi
 433:ui.c          ****                     Decoder_1_SetPosition(0);
 1599              		.loc 1 433 0
 1600 0a9c 0020     		movs	r0, #0
 1601 0a9e FFF7FEFF 		bl	Decoder_1_SetPosition
 434:ui.c          ****                     if (deadZoneTemp < 0)
 1602              		.loc 1 434 0
 1603 0aa2 B7F91030 		ldrsh	r3, [r7, #16]
 1604 0aa6 002B     		cmp	r3, #0
 1605 0aa8 03DA     		bge	.L60
 435:ui.c          ****                     {
 436:ui.c          ****                         deadZone = 0;
 1606              		.loc 1 436 0
 1607 0aaa 134B     		ldr	r3, .L84+52
 1608 0aac 0022     		movs	r2, #0
 1609 0aae 1A70     		strb	r2, [r3]
 1610 0ab0 28E0     		b	.L61
 1611              	.L60:
 437:ui.c          ****                     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 37


 438:ui.c          ****                     else if (deadZoneTemp > 100)
 1612              		.loc 1 438 0
 1613 0ab2 B7F91030 		ldrsh	r3, [r7, #16]
 1614 0ab6 642B     		cmp	r3, #100
 1615 0ab8 20DD     		ble	.L62
 439:ui.c          ****                     {
 440:ui.c          ****                         deadZone = 100;
 1616              		.loc 1 440 0
 1617 0aba 0F4B     		ldr	r3, .L84+52
 1618 0abc 6422     		movs	r2, #100
 1619 0abe 1A70     		strb	r2, [r3]
 1620 0ac0 20E0     		b	.L61
 1621              	.L85:
 1622 0ac2 00BF     		.align	2
 1623              	.L84:
 1624 0ac4 00000000 		.word	theGFX
 1625 0ac8 00000000 		.word	semitonesOrCents
 1626 0acc CDCCCC3D 		.word	1036831949
 1627 0ad0 00002041 		.word	1092616192
 1628 0ad4 0000C842 		.word	1120403456
 1629 0ad8 00000000 		.word	mainOLEDWaitingToSend
 1630 0adc 00000000 		.word	menuPosition
 1631 0ae0 00000000 		.word	prevEncoderVal
 1632 0ae4 00000000 		.word	volumeInt
 1633 0ae8 00005940 		.word	1079574528
 1634 0aec 1F85EB51 		.word	1374389535
 1635 0af0 CDCCCCCC 		.word	-858993459
 1636 0af4 00000000 		.word	volumeWaitingToSend
 1637 0af8 00000000 		.word	deadZone
 1638              	.L62:
 441:ui.c          ****                     }
 442:ui.c          ****                     else 
 443:ui.c          ****                     {
 444:ui.c          ****                         deadZone = deadZoneTemp;
 1639              		.loc 1 444 0
 1640 0afc 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 1641 0afe DAB2     		uxtb	r2, r3
 1642 0b00 B34B     		ldr	r3, .L86
 1643 0b02 1A70     		strb	r2, [r3]
 1644              	.L61:
 445:ui.c          ****                     }
 446:ui.c          ****                     calculatePedalRatios();
 1645              		.loc 1 446 0
 1646 0b04 FFF7FEFF 		bl	calculatePedalRatios
 447:ui.c          ****                     GFXsetCursor(&theGFX, 30,53);
 1647              		.loc 1 447 0
 1648 0b08 3522     		movs	r2, #53
 1649 0b0a 1E21     		movs	r1, #30
 1650 0b0c B148     		ldr	r0, .L86+4
 1651 0b0e FFF7FEFF 		bl	GFXsetCursor
 448:ui.c          ****                     
 449:ui.c          ****                     float deadZoneRepresentation = (float)(deadZone) * 0.2f;
 1652              		.loc 1 449 0
 1653 0b12 AF4B     		ldr	r3, .L86
 1654 0b14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1655 0b16 1846     		mov	r0, r3
 1656 0b18 FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 38


 1657 0b1c 0346     		mov	r3, r0
 1658 0b1e AE49     		ldr	r1, .L86+8
 1659 0b20 1846     		mov	r0, r3
 1660 0b22 FFF7FEFF 		bl	__aeabi_fmul
 1661 0b26 0346     		mov	r3, r0
 1662 0b28 FB60     		str	r3, [r7, #12]	@ float
 450:ui.c          ****                     
 451:ui.c          ****                     uint8_t currentChar = ((uint8_t)(deadZoneRepresentation * 0.1f));  
 1663              		.loc 1 451 0
 1664 0b2a AC49     		ldr	r1, .L86+12
 1665 0b2c F868     		ldr	r0, [r7, #12]	@ float
 1666 0b2e FFF7FEFF 		bl	__aeabi_fmul
 1667 0b32 0346     		mov	r3, r0
 1668 0b34 1846     		mov	r0, r3
 1669 0b36 FFF7FEFF 		bl	__aeabi_f2uiz
 1670 0b3a 0346     		mov	r3, r0
 1671 0b3c FB72     		strb	r3, [r7, #11]
 452:ui.c          ****                     deadZoneRepresentation -= currentChar * 10.0f;
 1672              		.loc 1 452 0
 1673 0b3e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1674 0b40 1846     		mov	r0, r3
 1675 0b42 FFF7FEFF 		bl	__aeabi_i2f
 1676 0b46 0346     		mov	r3, r0
 1677 0b48 A549     		ldr	r1, .L86+16
 1678 0b4a 1846     		mov	r0, r3
 1679 0b4c FFF7FEFF 		bl	__aeabi_fmul
 1680 0b50 0346     		mov	r3, r0
 1681 0b52 1946     		mov	r1, r3
 1682 0b54 F868     		ldr	r0, [r7, #12]	@ float
 1683 0b56 FFF7FEFF 		bl	__aeabi_fsub
 1684 0b5a 0346     		mov	r3, r0
 1685 0b5c FB60     		str	r3, [r7, #12]	@ float
 453:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1686              		.loc 1 453 0
 1687 0b5e FB7A     		ldrb	r3, [r7, #11]
 1688 0b60 3033     		adds	r3, r3, #48
 1689 0b62 DBB2     		uxtb	r3, r3
 1690 0b64 1946     		mov	r1, r3
 1691 0b66 9B48     		ldr	r0, .L86+4
 1692 0b68 FFF7FEFF 		bl	GFXwrite
 454:ui.c          ****                     currentChar = ((uint8_t)deadZoneRepresentation);    
 1693              		.loc 1 454 0
 1694 0b6c F868     		ldr	r0, [r7, #12]	@ float
 1695 0b6e FFF7FEFF 		bl	__aeabi_f2uiz
 1696 0b72 0346     		mov	r3, r0
 1697 0b74 FB72     		strb	r3, [r7, #11]
 455:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1698              		.loc 1 455 0
 1699 0b76 FB7A     		ldrb	r3, [r7, #11]
 1700 0b78 3033     		adds	r3, r3, #48
 1701 0b7a DBB2     		uxtb	r3, r3
 1702 0b7c 1946     		mov	r1, r3
 1703 0b7e 9548     		ldr	r0, .L86+4
 1704 0b80 FFF7FEFF 		bl	GFXwrite
 456:ui.c          **** 
 457:ui.c          **** 
 458:ui.c          ****                     GFXwrite(&theGFX, 46); //decimal point
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 39


 1705              		.loc 1 458 0
 1706 0b84 2E21     		movs	r1, #46
 1707 0b86 9348     		ldr	r0, .L86+4
 1708 0b88 FFF7FEFF 		bl	GFXwrite
 459:ui.c          ****                     
 460:ui.c          ****                     deadZoneRepresentation -= currentChar;
 1709              		.loc 1 460 0
 1710 0b8c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1711 0b8e 1846     		mov	r0, r3
 1712 0b90 FFF7FEFF 		bl	__aeabi_i2f
 1713 0b94 0346     		mov	r3, r0
 1714 0b96 1946     		mov	r1, r3
 1715 0b98 F868     		ldr	r0, [r7, #12]	@ float
 1716 0b9a FFF7FEFF 		bl	__aeabi_fsub
 1717 0b9e 0346     		mov	r3, r0
 1718 0ba0 FB60     		str	r3, [r7, #12]	@ float
 461:ui.c          ****                     currentChar = ((uint8_t)(deadZoneRepresentation * 10.0f));    
 1719              		.loc 1 461 0
 1720 0ba2 8F49     		ldr	r1, .L86+16
 1721 0ba4 F868     		ldr	r0, [r7, #12]	@ float
 1722 0ba6 FFF7FEFF 		bl	__aeabi_fmul
 1723 0baa 0346     		mov	r3, r0
 1724 0bac 1846     		mov	r0, r3
 1725 0bae FFF7FEFF 		bl	__aeabi_f2uiz
 1726 0bb2 0346     		mov	r3, r0
 1727 0bb4 FB72     		strb	r3, [r7, #11]
 462:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1728              		.loc 1 462 0
 1729 0bb6 FB7A     		ldrb	r3, [r7, #11]
 1730 0bb8 3033     		adds	r3, r3, #48
 1731 0bba DBB2     		uxtb	r3, r3
 1732 0bbc 1946     		mov	r1, r3
 1733 0bbe 8548     		ldr	r0, .L86+4
 1734 0bc0 FFF7FEFF 		bl	GFXwrite
 463:ui.c          ****                     deadZoneRepresentation -= (currentChar * 0.1f);
 1735              		.loc 1 463 0
 1736 0bc4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1737 0bc6 1846     		mov	r0, r3
 1738 0bc8 FFF7FEFF 		bl	__aeabi_i2f
 1739 0bcc 0346     		mov	r3, r0
 1740 0bce 8349     		ldr	r1, .L86+12
 1741 0bd0 1846     		mov	r0, r3
 1742 0bd2 FFF7FEFF 		bl	__aeabi_fmul
 1743 0bd6 0346     		mov	r3, r0
 1744 0bd8 1946     		mov	r1, r3
 1745 0bda F868     		ldr	r0, [r7, #12]	@ float
 1746 0bdc FFF7FEFF 		bl	__aeabi_fsub
 1747 0be0 0346     		mov	r3, r0
 1748 0be2 FB60     		str	r3, [r7, #12]	@ float
 464:ui.c          ****                     currentChar = ((uint8_t)(deadZoneRepresentation*100.0f));    
 1749              		.loc 1 464 0
 1750 0be4 7F49     		ldr	r1, .L86+20
 1751 0be6 F868     		ldr	r0, [r7, #12]	@ float
 1752 0be8 FFF7FEFF 		bl	__aeabi_fmul
 1753 0bec 0346     		mov	r3, r0
 1754 0bee 1846     		mov	r0, r3
 1755 0bf0 FFF7FEFF 		bl	__aeabi_f2uiz
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 40


 1756 0bf4 0346     		mov	r3, r0
 1757 0bf6 FB72     		strb	r3, [r7, #11]
 465:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1758              		.loc 1 465 0
 1759 0bf8 FB7A     		ldrb	r3, [r7, #11]
 1760 0bfa 3033     		adds	r3, r3, #48
 1761 0bfc DBB2     		uxtb	r3, r3
 1762 0bfe 1946     		mov	r1, r3
 1763 0c00 7448     		ldr	r0, .L86+4
 1764 0c02 FFF7FEFF 		bl	GFXwrite
 466:ui.c          ****                     GFXwrite(&theGFX, 37); //percent symbol
 1765              		.loc 1 466 0
 1766 0c06 2521     		movs	r1, #37
 1767 0c08 7248     		ldr	r0, .L86+4
 1768 0c0a FFF7FEFF 		bl	GFXwrite
 467:ui.c          ****                     OLEDtextColor(1, 0);
 1769              		.loc 1 467 0
 1770 0c0e 0021     		movs	r1, #0
 1771 0c10 0120     		movs	r0, #1
 1772 0c12 FFF7FEFF 		bl	OLEDtextColor
 468:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1773              		.loc 1 468 0
 1774 0c16 744B     		ldr	r3, .L86+24
 1775 0c18 0122     		movs	r2, #1
 1776 0c1a 1A70     		strb	r2, [r3]
 1777              	.L59:
 1778              	.LBE9:
 469:ui.c          ****                 }
 470:ui.c          ****             }
 471:ui.c          ****             if (menuPosition[0][0] == SliderRepMenu) //editing string/slider representation
 1779              		.loc 1 471 0
 1780 0c1c 734B     		ldr	r3, .L86+28
 1781 0c1e 93F90030 		ldrsb	r3, [r3]
 1782 0c22 092B     		cmp	r3, #9
 1783 0c24 40F0CC80 		bne	.L63
 472:ui.c          ****             {
 473:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1784              		.loc 1 473 0
 1785 0c28 714B     		ldr	r3, .L86+32
 1786 0c2a 93F90030 		ldrsb	r3, [r3]
 1787 0c2e 97F91E20 		ldrsb	r2, [r7, #30]
 1788 0c32 9A42     		cmp	r2, r3
 1789 0c34 00F0C480 		beq	.L63
 1790              	.LBB10:
 474:ui.c          ****                 {
 475:ui.c          ****                     OLEDtextColor(1, 0);
 1791              		.loc 1 475 0
 1792 0c38 0021     		movs	r1, #0
 1793 0c3a 0120     		movs	r0, #1
 1794 0c3c FFF7FEFF 		bl	OLEDtextColor
 476:ui.c          **** 
 477:ui.c          ****                     myGFX_setFont(2);
 1795              		.loc 1 477 0
 1796 0c40 0220     		movs	r0, #2
 1797 0c42 FFF7FEFF 		bl	myGFX_setFont
 478:ui.c          **** 
 479:ui.c          ****                     int16_t sliderTemp = stringRepresentation[editingSliderRepString];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 41


 1798              		.loc 1 479 0
 1799 0c46 6B4B     		ldr	r3, .L86+36
 1800 0c48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 0c4a 1A46     		mov	r2, r3
 1802 0c4c 6A4B     		ldr	r3, .L86+40
 1803 0c4e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1804 0c50 3B81     		strh	r3, [r7, #8]	@ movhi
 480:ui.c          ****                     sliderTemp = sliderTemp - Decoder_1_GetPosition();
 1805              		.loc 1 480 0
 1806 0c52 3C89     		ldrh	r4, [r7, #8]
 1807 0c54 FFF7FEFF 		bl	Decoder_1_GetPosition
 1808 0c58 0346     		mov	r3, r0
 1809 0c5a 9BB2     		uxth	r3, r3
 1810 0c5c E31A     		subs	r3, r4, r3
 1811 0c5e 9BB2     		uxth	r3, r3
 1812 0c60 3B81     		strh	r3, [r7, #8]	@ movhi
 481:ui.c          ****                     Decoder_1_SetPosition(0);
 1813              		.loc 1 481 0
 1814 0c62 0020     		movs	r0, #0
 1815 0c64 FFF7FEFF 		bl	Decoder_1_SetPosition
 482:ui.c          ****                     if (sliderTemp < 0)
 1816              		.loc 1 482 0
 1817 0c68 B7F90830 		ldrsh	r3, [r7, #8]
 1818 0c6c 002B     		cmp	r3, #0
 1819 0c6e 06DA     		bge	.L64
 483:ui.c          ****                     {
 484:ui.c          ****                          stringRepresentation[editingSliderRepString] = 0;
 1820              		.loc 1 484 0
 1821 0c70 604B     		ldr	r3, .L86+36
 1822 0c72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1823 0c74 1A46     		mov	r2, r3
 1824 0c76 604B     		ldr	r3, .L86+40
 1825 0c78 0021     		movs	r1, #0
 1826 0c7a 9954     		strb	r1, [r3, r2]
 1827 0c7c 11E0     		b	.L65
 1828              	.L64:
 485:ui.c          ****                     }
 486:ui.c          ****                     else if (sliderTemp > 9)
 1829              		.loc 1 486 0
 1830 0c7e B7F90830 		ldrsh	r3, [r7, #8]
 1831 0c82 092B     		cmp	r3, #9
 1832 0c84 06DD     		ble	.L66
 487:ui.c          ****                     {
 488:ui.c          ****                          stringRepresentation[editingSliderRepString] = 9;
 1833              		.loc 1 488 0
 1834 0c86 5B4B     		ldr	r3, .L86+36
 1835 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1836 0c8a 1A46     		mov	r2, r3
 1837 0c8c 5A4B     		ldr	r3, .L86+40
 1838 0c8e 0921     		movs	r1, #9
 1839 0c90 9954     		strb	r1, [r3, r2]
 1840 0c92 06E0     		b	.L65
 1841              	.L66:
 489:ui.c          ****                     }
 490:ui.c          ****                     else 
 491:ui.c          ****                     {
 492:ui.c          ****                          stringRepresentation[editingSliderRepString] = sliderTemp;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 42


 1842              		.loc 1 492 0
 1843 0c94 574B     		ldr	r3, .L86+36
 1844 0c96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1845 0c98 1A46     		mov	r2, r3
 1846 0c9a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 1847 0c9c D9B2     		uxtb	r1, r3
 1848 0c9e 564B     		ldr	r3, .L86+40
 1849 0ca0 9954     		strb	r1, [r3, r2]
 1850              	.L65:
 493:ui.c          ****                     }
 494:ui.c          ****                     
 495:ui.c          ****                     uint8_t sliderRepDisplay[2];
 496:ui.c          ****                     sliderRepDisplay[0] = stringRepresentation[0] + 1;
 1851              		.loc 1 496 0
 1852 0ca2 554B     		ldr	r3, .L86+40
 1853 0ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1854 0ca6 0133     		adds	r3, r3, #1
 1855 0ca8 DBB2     		uxtb	r3, r3
 1856 0caa 3B71     		strb	r3, [r7, #4]
 497:ui.c          ****                     sliderRepDisplay[1] = stringRepresentation[1] + 1;
 1857              		.loc 1 497 0
 1858 0cac 524B     		ldr	r3, .L86+40
 1859 0cae 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1860 0cb0 0133     		adds	r3, r3, #1
 1861 0cb2 DBB2     		uxtb	r3, r3
 1862 0cb4 7B71     		strb	r3, [r7, #5]
 498:ui.c          ****                     
 499:ui.c          ****                     OLEDwriteString("S1=", 3, 0, FourthLine);
 1863              		.loc 1 499 0
 1864 0cb6 0323     		movs	r3, #3
 1865 0cb8 0022     		movs	r2, #0
 1866 0cba 0321     		movs	r1, #3
 1867 0cbc 4F48     		ldr	r0, .L86+44
 1868 0cbe FFF7FEFF 		bl	OLEDwriteString
 500:ui.c          ****                     if (!editingSliderRepString)
 1869              		.loc 1 500 0
 1870 0cc2 4C4B     		ldr	r3, .L86+36
 1871 0cc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 0cc6 002B     		cmp	r3, #0
 1873 0cc8 0ED1     		bne	.L67
 501:ui.c          ****                     {
 502:ui.c          ****                         OLEDtextColor(0, 1);
 1874              		.loc 1 502 0
 1875 0cca 0121     		movs	r1, #1
 1876 0ccc 0020     		movs	r0, #0
 1877 0cce FFF7FEFF 		bl	OLEDtextColor
 503:ui.c          ****                         GFXfillRect(&theGFX, 24, 48, 16, 16, theGFX.textbgcolor);
 1878              		.loc 1 503 0
 1879 0cd2 404B     		ldr	r3, .L86+4
 1880 0cd4 5B8A     		ldrh	r3, [r3, #18]
 1881 0cd6 0193     		str	r3, [sp, #4]
 1882 0cd8 1023     		movs	r3, #16
 1883 0cda 0093     		str	r3, [sp]
 1884 0cdc 1023     		movs	r3, #16
 1885 0cde 3022     		movs	r2, #48
 1886 0ce0 1821     		movs	r1, #24
 1887 0ce2 3C48     		ldr	r0, .L86+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 43


 1888 0ce4 FFF7FEFF 		bl	GFXfillRect
 1889              	.L67:
 504:ui.c          ****                     }
 505:ui.c          ****                     uint8_t currentChar = sliderRepDisplay[0] / 10;
 1890              		.loc 1 505 0
 1891 0ce8 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1892 0cea 454A     		ldr	r2, .L86+48
 1893 0cec A2FB0323 		umull	r2, r3, r2, r3
 1894 0cf0 DB08     		lsrs	r3, r3, #3
 1895 0cf2 FB71     		strb	r3, [r7, #7]
 506:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1896              		.loc 1 506 0
 1897 0cf4 FB79     		ldrb	r3, [r7, #7]
 1898 0cf6 3033     		adds	r3, r3, #48
 1899 0cf8 DBB2     		uxtb	r3, r3
 1900 0cfa 1946     		mov	r1, r3
 1901 0cfc 3548     		ldr	r0, .L86+4
 1902 0cfe FFF7FEFF 		bl	GFXwrite
 507:ui.c          ****                     currentChar = sliderRepDisplay[0] - (currentChar*10);
 1903              		.loc 1 507 0
 1904 0d02 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 1905 0d04 FB79     		ldrb	r3, [r7, #7]
 1906 0d06 1946     		mov	r1, r3
 1907 0d08 4901     		lsls	r1, r1, #5
 1908 0d0a C91A     		subs	r1, r1, r3
 1909 0d0c 8900     		lsls	r1, r1, #2
 1910 0d0e CB1A     		subs	r3, r1, r3
 1911 0d10 5B00     		lsls	r3, r3, #1
 1912 0d12 DBB2     		uxtb	r3, r3
 1913 0d14 1344     		add	r3, r3, r2
 1914 0d16 FB71     		strb	r3, [r7, #7]
 508:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1915              		.loc 1 508 0
 1916 0d18 FB79     		ldrb	r3, [r7, #7]
 1917 0d1a 3033     		adds	r3, r3, #48
 1918 0d1c DBB2     		uxtb	r3, r3
 1919 0d1e 1946     		mov	r1, r3
 1920 0d20 2C48     		ldr	r0, .L86+4
 1921 0d22 FFF7FEFF 		bl	GFXwrite
 509:ui.c          ****                     OLEDtextColor(1, 0);
 1922              		.loc 1 509 0
 1923 0d26 0021     		movs	r1, #0
 1924 0d28 0120     		movs	r0, #1
 1925 0d2a FFF7FEFF 		bl	OLEDtextColor
 510:ui.c          **** 
 511:ui.c          ****                     GFXwrite(&theGFX, 32); //space
 1926              		.loc 1 511 0
 1927 0d2e 2021     		movs	r1, #32
 1928 0d30 2848     		ldr	r0, .L86+4
 1929 0d32 FFF7FEFF 		bl	GFXwrite
 512:ui.c          ****                     GFXwrite(&theGFX, 83); //S
 1930              		.loc 1 512 0
 1931 0d36 5321     		movs	r1, #83
 1932 0d38 2648     		ldr	r0, .L86+4
 1933 0d3a FFF7FEFF 		bl	GFXwrite
 513:ui.c          ****                     GFXwrite(&theGFX, 50); //2
 1934              		.loc 1 513 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 44


 1935 0d3e 3221     		movs	r1, #50
 1936 0d40 2448     		ldr	r0, .L86+4
 1937 0d42 FFF7FEFF 		bl	GFXwrite
 514:ui.c          ****                     GFXwrite(&theGFX, 61); //=
 1938              		.loc 1 514 0
 1939 0d46 3D21     		movs	r1, #61
 1940 0d48 2248     		ldr	r0, .L86+4
 1941 0d4a FFF7FEFF 		bl	GFXwrite
 515:ui.c          ****                     if (editingSliderRepString)
 1942              		.loc 1 515 0
 1943 0d4e 294B     		ldr	r3, .L86+36
 1944 0d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1945 0d52 002B     		cmp	r3, #0
 1946 0d54 0ED0     		beq	.L68
 516:ui.c          ****                     {
 517:ui.c          ****                         OLEDtextColor(0, 1);
 1947              		.loc 1 517 0
 1948 0d56 0121     		movs	r1, #1
 1949 0d58 0020     		movs	r0, #0
 1950 0d5a FFF7FEFF 		bl	OLEDtextColor
 518:ui.c          ****                         GFXfillRect(&theGFX, 72, 48, 16, 16, theGFX.textbgcolor);
 1951              		.loc 1 518 0
 1952 0d5e 1D4B     		ldr	r3, .L86+4
 1953 0d60 5B8A     		ldrh	r3, [r3, #18]
 1954 0d62 0193     		str	r3, [sp, #4]
 1955 0d64 1023     		movs	r3, #16
 1956 0d66 0093     		str	r3, [sp]
 1957 0d68 1023     		movs	r3, #16
 1958 0d6a 3022     		movs	r2, #48
 1959 0d6c 4821     		movs	r1, #72
 1960 0d6e 1948     		ldr	r0, .L86+4
 1961 0d70 FFF7FEFF 		bl	GFXfillRect
 1962              	.L68:
 519:ui.c          ****                     }
 520:ui.c          ****                     currentChar = sliderRepDisplay[1] / 10;
 1963              		.loc 1 520 0
 1964 0d74 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1965 0d76 224A     		ldr	r2, .L86+48
 1966 0d78 A2FB0323 		umull	r2, r3, r2, r3
 1967 0d7c DB08     		lsrs	r3, r3, #3
 1968 0d7e FB71     		strb	r3, [r7, #7]
 521:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1969              		.loc 1 521 0
 1970 0d80 FB79     		ldrb	r3, [r7, #7]
 1971 0d82 3033     		adds	r3, r3, #48
 1972 0d84 DBB2     		uxtb	r3, r3
 1973 0d86 1946     		mov	r1, r3
 1974 0d88 1248     		ldr	r0, .L86+4
 1975 0d8a FFF7FEFF 		bl	GFXwrite
 522:ui.c          ****                     currentChar = sliderRepDisplay[1]  - (currentChar*10);
 1976              		.loc 1 522 0
 1977 0d8e 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1978 0d90 FB79     		ldrb	r3, [r7, #7]
 1979 0d92 1946     		mov	r1, r3
 1980 0d94 4901     		lsls	r1, r1, #5
 1981 0d96 C91A     		subs	r1, r1, r3
 1982 0d98 8900     		lsls	r1, r1, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 45


 1983 0d9a CB1A     		subs	r3, r1, r3
 1984 0d9c 5B00     		lsls	r3, r3, #1
 1985 0d9e DBB2     		uxtb	r3, r3
 1986 0da0 1344     		add	r3, r3, r2
 1987 0da2 FB71     		strb	r3, [r7, #7]
 523:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1988              		.loc 1 523 0
 1989 0da4 FB79     		ldrb	r3, [r7, #7]
 1990 0da6 3033     		adds	r3, r3, #48
 1991 0da8 DBB2     		uxtb	r3, r3
 1992 0daa 1946     		mov	r1, r3
 1993 0dac 0948     		ldr	r0, .L86+4
 1994 0dae FFF7FEFF 		bl	GFXwrite
 524:ui.c          ****                    
 525:ui.c          ****                     OLEDtextColor(1, 0);
 1995              		.loc 1 525 0
 1996 0db2 0021     		movs	r1, #0
 1997 0db4 0120     		movs	r0, #1
 1998 0db6 FFF7FEFF 		bl	OLEDtextColor
 526:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1999              		.loc 1 526 0
 2000 0dba 0B4B     		ldr	r3, .L86+24
 2001 0dbc 0122     		movs	r2, #1
 2002 0dbe 1A70     		strb	r2, [r3]
 2003              	.L63:
 2004              	.LBE10:
 527:ui.c          ****                 }
 528:ui.c          ****             }
 529:ui.c          ****             prevEncoderVal = currentEncoderVal;
 2005              		.loc 1 529 0
 2006 0dc0 0B4A     		ldr	r2, .L86+32
 2007 0dc2 BB7F     		ldrb	r3, [r7, #30]
 2008 0dc4 1370     		strb	r3, [r2]
 2009              	.L77:
 2010              	.LBE4:
 530:ui.c          ****         }
 531:ui.c          ****     }
 532:ui.c          ****     
 533:ui.c          **** }
 2011              		.loc 1 533 0
 2012 0dc6 00BF     		nop
 2013 0dc8 3037     		adds	r7, r7, #48
 2014              		.cfi_def_cfa_offset 16
 2015 0dca BD46     		mov	sp, r7
 2016              		.cfi_def_cfa_register 13
 2017              		@ sp needed
 2018 0dcc B0BD     		pop	{r4, r5, r7, pc}
 2019              	.L87:
 2020 0dce 00BF     		.align	2
 2021              	.L86:
 2022 0dd0 00000000 		.word	deadZone
 2023 0dd4 00000000 		.word	theGFX
 2024 0dd8 CDCC4C3E 		.word	1045220557
 2025 0ddc CDCCCC3D 		.word	1036831949
 2026 0de0 00002041 		.word	1092616192
 2027 0de4 0000C842 		.word	1120403456
 2028 0de8 00000000 		.word	mainOLEDWaitingToSend
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 46


 2029 0dec 00000000 		.word	menuPosition
 2030 0df0 00000000 		.word	prevEncoderVal
 2031 0df4 00000000 		.word	editingSliderRepString
 2032 0df8 00000000 		.word	stringRepresentation
 2033 0dfc 00000000 		.word	.LC0
 2034 0e00 CDCCCCCC 		.word	-858993459
 2035              		.cfi_endproc
 2036              	.LFE64:
 2037              		.size	scanUI, .-scanUI
 2038              		.global	calibrationNames
 2039              		.section	.rodata
 2040              		.align	2
 2041              	.LC1:
 2042 0004 20205345 		.ascii	"  SET LEVERS \000"
 2042      54204C45 
 2042      56455253 
 2042      2000
 2043 0012 0000     		.align	2
 2044              	.LC2:
 2045 0014 20205345 		.ascii	"  SET FRETS  \000"
 2045      54204652 
 2045      45545320 
 2045      2000
 2046 0022 0000     		.align	2
 2047              		.type	calibrationNames, %object
 2048              		.size	calibrationNames, 12
 2049              	calibrationNames:
 2050 0024 04000000 		.word	.LC1
 2051 0028 14000000 		.word	.LC2
 2052 002c 00000000 		.word	0
 2053              		.global	mainMenuNames
 2054              		.align	2
 2055              	.LC3:
 2056 0030 20205354 		.ascii	"  STORE_PRESET \000"
 2056      4F52455F 
 2056      50524553 
 2056      45542000 
 2057              		.align	2
 2058              	.LC4:
 2059 0040 20204341 		.ascii	"  CALIBRATION\000"
 2059      4C494252 
 2059      4154494F 
 2059      4E00
 2060 004e 0000     		.align	2
 2061              	.LC5:
 2062 0050 20205345 		.ascii	"  SETTINGS   \000"
 2062      5454494E 
 2062      47532020 
 2062      2000
 2063 005e 0000     		.align	2
 2064              		.type	mainMenuNames, %object
 2065              		.size	mainMenuNames, 16
 2066              	mainMenuNames:
 2067 0060 30000000 		.word	.LC3
 2068 0064 40000000 		.word	.LC4
 2069 0068 50000000 		.word	.LC5
 2070 006c 00000000 		.word	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 47


 2071              		.global	settingsNames
 2072              		.align	2
 2073              	.LC6:
 2074 0070 20205452 		.ascii	"  TRANSPOSE  \000"
 2074      414E5350 
 2074      4F534520 
 2074      2000
 2075 007e 0000     		.align	2
 2076              	.LC7:
 2077 0080 20204F43 		.ascii	"  OCTAVE ACTION\000"
 2077      54415645 
 2077      20414354 
 2077      494F4E00 
 2078              		.align	2
 2079              	.LC8:
 2080 0090 20204445 		.ascii	"  DEADZONES    \000"
 2080      41445A4F 
 2080      4E455320 
 2080      20202000 
 2081              		.align	2
 2082              	.LC9:
 2083 00a0 2020534C 		.ascii	"  SLIDER REPR \000"
 2083      49444552 
 2083      20524550 
 2083      522000
 2084 00af 00       		.align	2
 2085              	.LC10:
 2086 00b0 20205045 		.ascii	"  PEDAL SUM   \000"
 2086      44414C20 
 2086      53554D20 
 2086      202000
 2087 00bf 00       		.align	2
 2088              	.LC11:
 2089 00c0 20204D49 		.ascii	"  MIDI SEND  \000"
 2089      44492053 
 2089      454E4420 
 2089      2000
 2090 00ce 0000     		.align	2
 2091              	.LC12:
 2092 00d0 2020564F 		.ascii	"  VOLUME      \000"
 2092      4C554D45 
 2092      20202020 
 2092      202000
 2093 00df 00       		.align	2
 2094              	.LC13:
 2095 00e0 20204649 		.ascii	"  FIRMWARE UPDT\000"
 2095      524D5741 
 2095      52452055 
 2095      50445400 
 2096              		.align	2
 2097              		.type	settingsNames, %object
 2098              		.size	settingsNames, 36
 2099              	settingsNames:
 2100 00f0 70000000 		.word	.LC6
 2101 00f4 80000000 		.word	.LC7
 2102 00f8 90000000 		.word	.LC8
 2103 00fc A0000000 		.word	.LC9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 48


 2104 0100 B0000000 		.word	.LC10
 2105 0104 C0000000 		.word	.LC11
 2106 0108 D0000000 		.word	.LC12
 2107 010c E0000000 		.word	.LC13
 2108 0110 00000000 		.word	0
 2109              		.global	numMainMenuItems
 2110              		.data
 2111              		.type	numMainMenuItems, %object
 2112              		.size	numMainMenuItems, 1
 2113              	numMainMenuItems:
 2114 001a 03       		.byte	3
 2115              		.global	numCalibrationItems
 2116              		.type	numCalibrationItems, %object
 2117              		.size	numCalibrationItems, 1
 2118              	numCalibrationItems:
 2119 001b 02       		.byte	2
 2120              		.global	numSettingsItems
 2121              		.type	numSettingsItems, %object
 2122              		.size	numSettingsItems, 1
 2123              	numSettingsItems:
 2124 001c 08       		.byte	8
 2125              		.section	.rodata
 2126              		.align	2
 2127              	.LC14:
 2128 0114 20205354 		.ascii	"  STORE PRESET   \000"
 2128      4F524520 
 2128      50524553 
 2128      45542020 
 2128      2000
 2129 0126 0000     		.align	2
 2130              	.LC15:
 2131 0128 20204341 		.ascii	"  CALIBRATION     \000"
 2131      4C494252 
 2131      4154494F 
 2131      4E202020 
 2131      202000
 2132 013b 00       		.align	2
 2133              	.LC16:
 2134 013c 20205345 		.ascii	"  SETTINGS       \000"
 2134      5454494E 
 2134      47532020 
 2134      20202020 
 2134      2000
 2135              		.section	.text.enterEditModeMenu,"ax",%progbits
 2136              		.align	2
 2137              		.global	enterEditModeMenu
 2138              		.thumb
 2139              		.thumb_func
 2140              		.type	enterEditModeMenu, %function
 2141              	enterEditModeMenu:
 2142              	.LFB65:
 534:ui.c          **** 
 535:ui.c          **** 
 536:ui.c          **** 
 537:ui.c          **** 
 538:ui.c          **** const char* const calibrationNames[] = { "  SET LEVERS ", "  SET FRETS  ", 0 }; 
 539:ui.c          **** const char* const mainMenuNames[] =    {"  STORE_PRESET ", "  CALIBRATION", "  SETTINGS   ", 0 }; 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 49


 540:ui.c          **** const char* const settingsNames[] =   { "  TRANSPOSE  ", "  OCTAVE ACTION", "  DEADZONES    ", "  S
 541:ui.c          **** uint8_t numMainMenuItems = 3;
 542:ui.c          **** uint8_t numCalibrationItems = 2;
 543:ui.c          **** uint8_t numSettingsItems = 8;
 544:ui.c          **** 
 545:ui.c          **** void enterEditModeMenu(void)
 546:ui.c          **** {
 2143              		.loc 1 546 0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 0
 2146              		@ frame_needed = 1, uses_anonymous_args = 0
 2147 0000 80B5     		push	{r7, lr}
 2148              		.cfi_def_cfa_offset 8
 2149              		.cfi_offset 7, -8
 2150              		.cfi_offset 14, -4
 2151 0002 00AF     		add	r7, sp, #0
 2152              		.cfi_def_cfa_register 7
 547:ui.c          ****     OLEDclear(128, 64);
 2153              		.loc 1 547 0
 2154 0004 4021     		movs	r1, #64
 2155 0006 8020     		movs	r0, #128
 2156 0008 FFF7FEFF 		bl	OLEDclear
 548:ui.c          ****     myGFX_setFont(2);
 2157              		.loc 1 548 0
 2158 000c 0220     		movs	r0, #2
 2159 000e FFF7FEFF 		bl	myGFX_setFont
 549:ui.c          ****     OLEDtextColor(0, 1);
 2160              		.loc 1 549 0
 2161 0012 0121     		movs	r1, #1
 2162 0014 0020     		movs	r0, #0
 2163 0016 FFF7FEFF 		bl	OLEDtextColor
 550:ui.c          ****     OLEDwriteString("  STORE PRESET   ", 15, 0, FirstLine);
 2164              		.loc 1 550 0
 2165 001a 0023     		movs	r3, #0
 2166 001c 0022     		movs	r2, #0
 2167 001e 0F21     		movs	r1, #15
 2168 0020 1E48     		ldr	r0, .L89
 2169 0022 FFF7FEFF 		bl	OLEDwriteString
 551:ui.c          ****     OLEDwriteArrow(0, FirstLine);
 2170              		.loc 1 551 0
 2171 0026 0021     		movs	r1, #0
 2172 0028 0020     		movs	r0, #0
 2173 002a FFF7FEFF 		bl	OLEDwriteArrow
 552:ui.c          ****     OLEDtextColor(1, 0);
 2174              		.loc 1 552 0
 2175 002e 0021     		movs	r1, #0
 2176 0030 0120     		movs	r0, #1
 2177 0032 FFF7FEFF 		bl	OLEDtextColor
 553:ui.c          ****     OLEDwriteString("  CALIBRATION     ",15, 0, SecondLine);
 2178              		.loc 1 553 0
 2179 0036 0123     		movs	r3, #1
 2180 0038 0022     		movs	r2, #0
 2181 003a 0F21     		movs	r1, #15
 2182 003c 1848     		ldr	r0, .L89+4
 2183 003e FFF7FEFF 		bl	OLEDwriteString
 554:ui.c          ****     OLEDtextColor(1, 0);
 2184              		.loc 1 554 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 50


 2185 0042 0021     		movs	r1, #0
 2186 0044 0120     		movs	r0, #1
 2187 0046 FFF7FEFF 		bl	OLEDtextColor
 555:ui.c          ****     OLEDwriteString("  SETTINGS       ", 15, 0, ThirdLine);
 2188              		.loc 1 555 0
 2189 004a 0223     		movs	r3, #2
 2190 004c 0022     		movs	r2, #0
 2191 004e 0F21     		movs	r1, #15
 2192 0050 1448     		ldr	r0, .L89+8
 2193 0052 FFF7FEFF 		bl	OLEDwriteString
 556:ui.c          ****     OLEDtextColor(1, 0);
 2194              		.loc 1 556 0
 2195 0056 0021     		movs	r1, #0
 2196 0058 0120     		movs	r0, #1
 2197 005a FFF7FEFF 		bl	OLEDtextColor
 557:ui.c          ****     mainOLEDWaitingToSend = 1;
 2198              		.loc 1 557 0
 2199 005e 124B     		ldr	r3, .L89+12
 2200 0060 0122     		movs	r2, #1
 2201 0062 1A70     		strb	r2, [r3]
 558:ui.c          ****     editMode = 1;
 2202              		.loc 1 558 0
 2203 0064 114B     		ldr	r3, .L89+16
 2204 0066 0122     		movs	r2, #1
 2205 0068 1A70     		strb	r2, [r3]
 559:ui.c          ****     LED_red2_Write(editMode);
 2206              		.loc 1 559 0
 2207 006a 104B     		ldr	r3, .L89+16
 2208 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 006e 1846     		mov	r0, r3
 2210 0070 FFF7FEFF 		bl	LED_red2_Write
 560:ui.c          ****     //initialize menu position to all zero
 561:ui.c          ****     menuPosition[0][0] = 0; //x
 2211              		.loc 1 561 0
 2212 0074 0E4B     		ldr	r3, .L89+20
 2213 0076 0022     		movs	r2, #0
 2214 0078 1A70     		strb	r2, [r3]
 562:ui.c          ****     menuPosition[0][1] = 0; //y
 2215              		.loc 1 562 0
 2216 007a 0D4B     		ldr	r3, .L89+20
 2217 007c 0022     		movs	r2, #0
 2218 007e 5A70     		strb	r2, [r3, #1]
 563:ui.c          ****     menuPosition[1][0] = 0; //x
 2219              		.loc 1 563 0
 2220 0080 0B4B     		ldr	r3, .L89+20
 2221 0082 0022     		movs	r2, #0
 2222 0084 9A70     		strb	r2, [r3, #2]
 564:ui.c          ****     menuPosition[1][1] = 0; //y
 2223              		.loc 1 564 0
 2224 0086 0A4B     		ldr	r3, .L89+20
 2225 0088 0022     		movs	r2, #0
 2226 008a DA70     		strb	r2, [r3, #3]
 565:ui.c          ****     menuPosition[2][0] = 0; //x
 2227              		.loc 1 565 0
 2228 008c 084B     		ldr	r3, .L89+20
 2229 008e 0022     		movs	r2, #0
 2230 0090 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 51


 566:ui.c          ****     menuPosition[2][1] = 0; //y
 2231              		.loc 1 566 0
 2232 0092 074B     		ldr	r3, .L89+20
 2233 0094 0022     		movs	r2, #0
 2234 0096 5A71     		strb	r2, [r3, #5]
 567:ui.c          **** }
 2235              		.loc 1 567 0
 2236 0098 00BF     		nop
 2237 009a 80BD     		pop	{r7, pc}
 2238              	.L90:
 2239              		.align	2
 2240              	.L89:
 2241 009c 14010000 		.word	.LC14
 2242 00a0 28010000 		.word	.LC15
 2243 00a4 3C010000 		.word	.LC16
 2244 00a8 00000000 		.word	mainOLEDWaitingToSend
 2245 00ac 00000000 		.word	editMode
 2246 00b0 00000000 		.word	menuPosition
 2247              		.cfi_endproc
 2248              	.LFE65:
 2249              		.size	enterEditModeMenu, .-enterEditModeMenu
 2250              		.global	__aeabi_f2iz
 2251              		.section	.text.exitEditModeMenu,"ax",%progbits
 2252              		.align	2
 2253              		.global	exitEditModeMenu
 2254              		.thumb
 2255              		.thumb_func
 2256              		.type	exitEditModeMenu, %function
 2257              	exitEditModeMenu:
 2258              	.LFB66:
 568:ui.c          **** 
 569:ui.c          **** void exitEditModeMenu(void)
 570:ui.c          **** {
 2259              		.loc 1 570 0
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 8
 2262              		@ frame_needed = 1, uses_anonymous_args = 0
 2263 0000 90B5     		push	{r4, r7, lr}
 2264              		.cfi_def_cfa_offset 12
 2265              		.cfi_offset 4, -12
 2266              		.cfi_offset 7, -8
 2267              		.cfi_offset 14, -4
 2268 0002 83B0     		sub	sp, sp, #12
 2269              		.cfi_def_cfa_offset 24
 2270 0004 00AF     		add	r7, sp, #0
 2271              		.cfi_def_cfa_register 7
 571:ui.c          ****     
 572:ui.c          ****     if (leverCalibrationMode == 1)
 2272              		.loc 1 572 0
 2273 0006 5E4B     		ldr	r3, .L101
 2274 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2275 000a 012B     		cmp	r3, #1
 2276 000c 01D1     		bne	.L92
 573:ui.c          ****     {
 574:ui.c          ****         exitLeverCalibrationMode();
 2277              		.loc 1 574 0
 2278 000e FFF7FEFF 		bl	exitLeverCalibrationMode
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 52


 2279              	.L92:
 575:ui.c          ****     }
 576:ui.c          ****     if (fretCalibrationMode == 1)
 2280              		.loc 1 576 0
 2281 0012 5C4B     		ldr	r3, .L101+4
 2282 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2283 0016 012B     		cmp	r3, #1
 2284 0018 01D1     		bne	.L93
 577:ui.c          ****     {
 578:ui.c          ****         exitFretCalibrationMode();
 2285              		.loc 1 578 0
 2286 001a FFF7FEFF 		bl	exitFretCalibrationMode
 2287              	.L93:
 579:ui.c          ****     }
 580:ui.c          ****     if (menuPosition[0][0] == TransposeMenu)
 2288              		.loc 1 580 0
 2289 001e 5A4B     		ldr	r3, .L101+8
 2290 0020 93F90030 		ldrsb	r3, [r3]
 2291 0024 062B     		cmp	r3, #6
 2292 0026 34D1     		bne	.L94
 581:ui.c          ****     {
 582:ui.c          ****         transposeSemitones = (int8_t)transposeFloat;
 2293              		.loc 1 582 0
 2294 0028 584B     		ldr	r3, .L101+12
 2295 002a 1B68     		ldr	r3, [r3]	@ float
 2296 002c 1846     		mov	r0, r3
 2297 002e FFF7FEFF 		bl	__aeabi_f2iz
 2298 0032 0346     		mov	r3, r0
 2299 0034 5AB2     		sxtb	r2, r3
 2300 0036 564B     		ldr	r3, .L101+16
 2301 0038 1A70     		strb	r2, [r3]
 583:ui.c          ****         transposeCents = (int8_t)((transposeFloat - transposeSemitones) * 100.0f);
 2302              		.loc 1 583 0
 2303 003a 544B     		ldr	r3, .L101+12
 2304 003c 1C68     		ldr	r4, [r3]	@ float
 2305 003e 544B     		ldr	r3, .L101+16
 2306 0040 93F90030 		ldrsb	r3, [r3]
 2307 0044 1846     		mov	r0, r3
 2308 0046 FFF7FEFF 		bl	__aeabi_i2f
 2309 004a 0346     		mov	r3, r0
 2310 004c 1946     		mov	r1, r3
 2311 004e 2046     		mov	r0, r4
 2312 0050 FFF7FEFF 		bl	__aeabi_fsub
 2313 0054 0346     		mov	r3, r0
 2314 0056 4F49     		ldr	r1, .L101+20
 2315 0058 1846     		mov	r0, r3
 2316 005a FFF7FEFF 		bl	__aeabi_fmul
 2317 005e 0346     		mov	r3, r0
 2318 0060 1846     		mov	r0, r3
 2319 0062 FFF7FEFF 		bl	__aeabi_f2iz
 2320 0066 0346     		mov	r3, r0
 2321 0068 5AB2     		sxtb	r2, r3
 2322 006a 4B4B     		ldr	r3, .L101+24
 2323 006c 1A70     		strb	r2, [r3]
 584:ui.c          ****         EEPROM_WriteByte(transposeSemitones, EEPROM_TRANSPOSE_OFFSET);
 2324              		.loc 1 584 0
 2325 006e 484B     		ldr	r3, .L101+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 53


 2326 0070 93F90030 		ldrsb	r3, [r3]
 2327 0074 DBB2     		uxtb	r3, r3
 2328 0076 4FF4FB61 		mov	r1, #2008
 2329 007a 1846     		mov	r0, r3
 2330 007c FFF7FEFF 		bl	EEPROM_WriteByte
 585:ui.c          ****         EEPROM_WriteByte(transposeCents, EEPROM_TRANSPOSE_OFFSET + 1);
 2331              		.loc 1 585 0
 2332 0080 454B     		ldr	r3, .L101+24
 2333 0082 93F90030 		ldrsb	r3, [r3]
 2334 0086 DBB2     		uxtb	r3, r3
 2335 0088 40F2D971 		movw	r1, #2009
 2336 008c 1846     		mov	r0, r3
 2337 008e FFF7FEFF 		bl	EEPROM_WriteByte
 2338              	.L94:
 586:ui.c          ****     }
 587:ui.c          ****     if (menuPosition[0][0] == OctaveActionMenu)
 2339              		.loc 1 587 0
 2340 0092 3D4B     		ldr	r3, .L101+8
 2341 0094 93F90030 		ldrsb	r3, [r3]
 2342 0098 072B     		cmp	r3, #7
 2343 009a 06D1     		bne	.L95
 588:ui.c          ****     {
 589:ui.c          ****         EEPROM_WriteByte(octaveAction, EEPROM_OCTAVE_ACTION_OFFSET);
 2344              		.loc 1 589 0
 2345 009c 3F4B     		ldr	r3, .L101+28
 2346 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2347 00a0 40F2DA71 		movw	r1, #2010
 2348 00a4 1846     		mov	r0, r3
 2349 00a6 FFF7FEFF 		bl	EEPROM_WriteByte
 2350              	.L95:
 590:ui.c          ****     }  
 591:ui.c          ****     if (menuPosition[0][0] == DeadzonesMenu)
 2351              		.loc 1 591 0
 2352 00aa 374B     		ldr	r3, .L101+8
 2353 00ac 93F90030 		ldrsb	r3, [r3]
 2354 00b0 082B     		cmp	r3, #8
 2355 00b2 06D1     		bne	.L96
 592:ui.c          ****     {
 593:ui.c          ****         EEPROM_WriteByte(deadZone, EEPROM_DEADZONES_OFFSET);
 2356              		.loc 1 593 0
 2357 00b4 3A4B     		ldr	r3, .L101+32
 2358 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2359 00b8 40F2DB71 		movw	r1, #2011
 2360 00bc 1846     		mov	r0, r3
 2361 00be FFF7FEFF 		bl	EEPROM_WriteByte
 2362              	.L96:
 594:ui.c          ****     }
 595:ui.c          ****     if (menuPosition[0][0] == SliderRepMenu)
 2363              		.loc 1 595 0
 2364 00c2 314B     		ldr	r3, .L101+8
 2365 00c4 93F90030 		ldrsb	r3, [r3]
 2366 00c8 092B     		cmp	r3, #9
 2367 00ca 12D1     		bne	.L97
 2368              	.LBB11:
 596:ui.c          ****     {
 597:ui.c          ****         uint8_t tempByte = ((stringRepresentation[0] & 15) << 4) + (stringRepresentation[1] & 15);
 2369              		.loc 1 597 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 54


 2370 00cc 354B     		ldr	r3, .L101+36
 2371 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2372 00d0 1B01     		lsls	r3, r3, #4
 2373 00d2 DAB2     		uxtb	r2, r3
 2374 00d4 334B     		ldr	r3, .L101+36
 2375 00d6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2376 00d8 03F00F03 		and	r3, r3, #15
 2377 00dc DBB2     		uxtb	r3, r3
 2378 00de 1344     		add	r3, r3, r2
 2379 00e0 FB71     		strb	r3, [r7, #7]
 598:ui.c          ****         EEPROM_WriteByte(tempByte,EEPROM_STRING_REP_OFFSET);
 2380              		.loc 1 598 0
 2381 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2382 00e4 40F2D771 		movw	r1, #2007
 2383 00e8 1846     		mov	r0, r3
 2384 00ea FFF7FEFF 		bl	EEPROM_WriteByte
 599:ui.c          ****         calculateStringRepDivider();
 2385              		.loc 1 599 0
 2386 00ee FFF7FEFF 		bl	calculateStringRepDivider
 2387              	.L97:
 2388              	.LBE11:
 600:ui.c          ****     }
 601:ui.c          ****     if (menuPosition[0][0] == TraditionalPedalSumMenu)
 2389              		.loc 1 601 0
 2390 00f2 254B     		ldr	r3, .L101+8
 2391 00f4 93F90030 		ldrsb	r3, [r3]
 2392 00f8 0A2B     		cmp	r3, #10
 2393 00fa 06D1     		bne	.L98
 602:ui.c          ****     {
 603:ui.c          ****         EEPROM_WriteByte(traditionalPedalAdd,EEPROM_PEDALSUM_OFFSET);
 2394              		.loc 1 603 0
 2395 00fc 2A4B     		ldr	r3, .L101+40
 2396 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2397 0100 40F2DE71 		movw	r1, #2014
 2398 0104 1846     		mov	r0, r3
 2399 0106 FFF7FEFF 		bl	EEPROM_WriteByte
 2400              	.L98:
 604:ui.c          ****     }
 605:ui.c          ****     if (menuPosition[0][0] == MidiSendMenu)
 2401              		.loc 1 605 0
 2402 010a 1F4B     		ldr	r3, .L101+8
 2403 010c 93F90030 		ldrsb	r3, [r3]
 2404 0110 0B2B     		cmp	r3, #11
 2405 0112 13D1     		bne	.L99
 2406              	.LBB12:
 606:ui.c          ****     {
 607:ui.c          ****         uint8_t tempByte = ((midiBarSendOn & 1)<<1) + (midiSendOn & 1);
 2407              		.loc 1 607 0
 2408 0114 254B     		ldr	r3, .L101+44
 2409 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2410 0118 5B00     		lsls	r3, r3, #1
 2411 011a DBB2     		uxtb	r3, r3
 2412 011c 03F00203 		and	r3, r3, #2
 2413 0120 DAB2     		uxtb	r2, r3
 2414 0122 234B     		ldr	r3, .L101+48
 2415 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2416 0126 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 55


 2417 012a DBB2     		uxtb	r3, r3
 2418 012c 1344     		add	r3, r3, r2
 2419 012e BB71     		strb	r3, [r7, #6]
 608:ui.c          ****         EEPROM_WriteByte(tempByte,EEPROM_MIDI_SEND_OFFSET);
 2420              		.loc 1 608 0
 2421 0130 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2422 0132 40F2DF71 		movw	r1, #2015
 2423 0136 1846     		mov	r0, r3
 2424 0138 FFF7FEFF 		bl	EEPROM_WriteByte
 2425              	.L99:
 2426              	.LBE12:
 609:ui.c          ****     }
 610:ui.c          ****     if (menuPosition[0][0] == VolumeMenu)
 2427              		.loc 1 610 0
 2428 013c 124B     		ldr	r3, .L101+8
 2429 013e 93F90030 		ldrsb	r3, [r3]
 2430 0142 0C2B     		cmp	r3, #12
 2431 0144 08D1     		bne	.L100
 611:ui.c          ****     {
 612:ui.c          ****         EEPROM_WriteByte((uint8_t)volumeInt,EEPROM_VOLUME_OFFSET);
 2432              		.loc 1 612 0
 2433 0146 1B4B     		ldr	r3, .L101+52
 2434 0148 93F90030 		ldrsb	r3, [r3]
 2435 014c DBB2     		uxtb	r3, r3
 2436 014e 40F2E471 		movw	r1, #2020
 2437 0152 1846     		mov	r0, r3
 2438 0154 FFF7FEFF 		bl	EEPROM_WriteByte
 2439              	.L100:
 613:ui.c          ****     }
 614:ui.c          ****     
 615:ui.c          ****     encoderWatch = 0;
 2440              		.loc 1 615 0
 2441 0158 174B     		ldr	r3, .L101+56
 2442 015a 0022     		movs	r2, #0
 2443 015c 1A70     		strb	r2, [r3]
 616:ui.c          ****     Decoder_1_Stop();
 2444              		.loc 1 616 0
 2445 015e FFF7FEFF 		bl	Decoder_1_Stop
 617:ui.c          ****     editMode = 0;
 2446              		.loc 1 617 0
 2447 0162 164B     		ldr	r3, .L101+60
 2448 0164 0022     		movs	r2, #0
 2449 0166 1A70     		strb	r2, [r3]
 618:ui.c          ****     LED_red2_Write(editMode);
 2450              		.loc 1 618 0
 2451 0168 144B     		ldr	r3, .L101+60
 2452 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2453 016c 1846     		mov	r0, r3
 2454 016e FFF7FEFF 		bl	LED_red2_Write
 619:ui.c          ****     displayCurrentPresetNameAndCopedent();
 2455              		.loc 1 619 0
 2456 0172 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 620:ui.c          **** }
 2457              		.loc 1 620 0
 2458 0176 00BF     		nop
 2459 0178 0C37     		adds	r7, r7, #12
 2460              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 56


 2461 017a BD46     		mov	sp, r7
 2462              		.cfi_def_cfa_register 13
 2463              		@ sp needed
 2464 017c 90BD     		pop	{r4, r7, pc}
 2465              	.L102:
 2466 017e 00BF     		.align	2
 2467              	.L101:
 2468 0180 00000000 		.word	leverCalibrationMode
 2469 0184 00000000 		.word	fretCalibrationMode
 2470 0188 00000000 		.word	menuPosition
 2471 018c 00000000 		.word	transposeFloat
 2472 0190 00000000 		.word	transposeSemitones
 2473 0194 0000C842 		.word	1120403456
 2474 0198 00000000 		.word	transposeCents
 2475 019c 00000000 		.word	octaveAction
 2476 01a0 00000000 		.word	deadZone
 2477 01a4 00000000 		.word	stringRepresentation
 2478 01a8 00000000 		.word	traditionalPedalAdd
 2479 01ac 00000000 		.word	midiBarSendOn
 2480 01b0 00000000 		.word	midiSendOn
 2481 01b4 00000000 		.word	volumeInt
 2482 01b8 00000000 		.word	encoderWatch
 2483 01bc 00000000 		.word	editMode
 2484              		.cfi_endproc
 2485              	.LFE66:
 2486              		.size	exitEditModeMenu, .-exitEditModeMenu
 2487              		.global	fretToCalibrate
 2488              		.bss
 2489              		.type	fretToCalibrate, %object
 2490              		.size	fretToCalibrate, 1
 2491              	fretToCalibrate:
 2492 0009 00       		.space	1
 2493              		.global	whichFretArray
 2494              		.data
 2495 001d 000000   		.align	2
 2496              		.type	whichFretArray, %object
 2497              		.size	whichFretArray, 12
 2498              	whichFretArray:
 2499 0020 00       		.byte	0
 2500 0021 01       		.byte	1
 2501 0022 03       		.byte	3
 2502 0023 05       		.byte	5
 2503 0024 07       		.byte	7
 2504 0025 09       		.byte	9
 2505 0026 0C       		.byte	12
 2506 0027 0F       		.byte	15
 2507 0028 11       		.byte	17
 2508 0029 13       		.byte	19
 2509 002a 15       		.byte	21
 2510 002b 18       		.byte	24
 2511              		.section	.rodata
 2512 014e 0000     		.align	2
 2513              	.LC17:
 2514 0150 56414C55 		.ascii	"VALUE KNOB SETS\000"
 2514      45204B4E 
 2514      4F422053 
 2514      45545300 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 57


 2515              		.align	2
 2516              	.LC18:
 2517 0160 5452414E 		.ascii	"TRANSPOSITION  \000"
 2517      53504F53 
 2517      4954494F 
 2517      4E202000 
 2518              		.align	2
 2519              	.LC19:
 2520 0170 4F435441 		.ascii	"OCTAVE ACTION  \000"
 2520      56452041 
 2520      4354494F 
 2520      4E202000 
 2521              		.align	2
 2522              	.LC20:
 2523 0180 4F4E204E 		.ascii	"ON NEXT NOTE   \000"
 2523      45585420 
 2523      4E4F5445 
 2523      20202000 
 2524              		.align	2
 2525              	.LC21:
 2526 0190 494D4D45 		.ascii	"IMMEDIATE      \000"
 2526      44494154 
 2526      45202020 
 2526      20202000 
 2527              		.align	2
 2528              	.LC22:
 2529 01a0 4C455645 		.ascii	"LEVER DEADZONES\000"
 2529      52204445 
 2529      41445A4F 
 2529      4E455300 
 2530              		.align	2
 2531              	.LC23:
 2532 01b0 53455420 		.ascii	"SET WHICH      \000"
 2532      57484943 
 2532      48202020 
 2532      20202000 
 2533              		.align	2
 2534              	.LC24:
 2535 01c0 53545249 		.ascii	"STRINGS SLIDERS\000"
 2535      4E475320 
 2535      534C4944 
 2535      45525300 
 2536              		.align	2
 2537              	.LC25:
 2538 01d0 52455052 		.ascii	"REPRESENT(1-10)\000"
 2538      4553454E 
 2538      5428312D 
 2538      31302900 
 2539              		.align	2
 2540              	.LC26:
 2541 01e0 50454441 		.ascii	"PEDAL SUM MODE:\000"
 2541      4C205355 
 2541      4D204D4F 
 2541      44453A00 
 2542              		.align	2
 2543              	.LC27:
 2544 01f0 53494D50 		.ascii	"SIMPLE ADD     \000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 58


 2544      4C452041 
 2544      44442020 
 2544      20202000 
 2545              		.align	2
 2546              	.LC28:
 2547 0200 54524144 		.ascii	"TRADITIONAL    \000"
 2547      4954494F 
 2547      4E414C20 
 2547      20202000 
 2548              		.align	2
 2549              	.LC29:
 2550 0210 53454E44 		.ascii	"SEND MIDI  \000"
 2550      204D4944 
 2550      49202000 
 2551              		.align	2
 2552              	.LC30:
 2553 021c 53454E44 		.ascii	"SEND BAR   \000"
 2553      20424152 
 2553      20202000 
 2554              		.align	2
 2555              	.LC31:
 2556 0228 53454E44 		.ascii	"SEND DEBUG \000"
 2556      20444542 
 2556      55472000 
 2557              		.align	2
 2558              	.LC32:
 2559 0234 564F4C55 		.ascii	"VOLUME    \000"
 2559      4D452020 
 2559      202000
 2560 023f 00       		.align	2
 2561              	.LC33:
 2562 0240 55504441 		.ascii	"UPDATE BRAIN\000"
 2562      54452042 
 2562      5241494E 
 2562      00
 2563 024d 000000   		.align	2
 2564              	.LC34:
 2565 0250 4E4F5720 		.ascii	"NOW PUT ALL\000"
 2565      50555420 
 2565      414C4C00 
 2566              		.align	2
 2567              	.LC35:
 2568 025c 50454441 		.ascii	"PEDALS/LEVERS  \000"
 2568      4C532F4C 
 2568      45564552 
 2568      53202000 
 2569              		.align	2
 2570              	.LC36:
 2571 026c 494E2052 		.ascii	"IN RESTING STATE\000"
 2571      45535449 
 2571      4E472053 
 2571      54415445 
 2571      00
 2572 027d 000000   		.align	2
 2573              	.LC37:
 2574 0280 414E4420 		.ascii	"AND PRESS EDIT\000"
 2574      50524553 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 59


 2574      53204544 
 2574      495400
 2575 028f 00       		.align	2
 2576              	.LC38:
 2577 0290 53454C45 		.ascii	"SELECT DEST\000"
 2577      43542044 
 2577      45535400 
 2578              		.align	2
 2579              	.LC39:
 2580 029c 4C4F4341 		.ascii	"LOCATION THEN \000"
 2580      54494F4E 
 2580      20544845 
 2580      4E2000
 2581 02ab 00       		.align	2
 2582              	.LC40:
 2583 02ac 50555348 		.ascii	"PUSH -> \000"
 2583      202D3E20 
 2583      00
 2584 02b5 000000   		.align	2
 2585              	.LC41:
 2586 02b8 55534520 		.ascii	"USE VALUE KNOB\000"
 2586      56414C55 
 2586      45204B4E 
 2586      4F4200
 2587 02c7 00       		.align	2
 2588              	.LC42:
 2589 02c8 544F2043 		.ascii	"TO CREATE NAME\000"
 2589      52454154 
 2589      45204E41 
 2589      4D4500
 2590 02d7 00       		.align	2
 2591              	.LC43:
 2592 02d8 20202020 		.ascii	"               \000"
 2592      20202020 
 2592      20202020 
 2592      20202000 
 2593              		.section	.text.menuAction,"ax",%progbits
 2594              		.align	2
 2595              		.global	menuAction
 2596              		.thumb
 2597              		.thumb_func
 2598              		.type	menuAction, %function
 2599              	menuAction:
 2600              	.LFB67:
 621:ui.c          **** 
 622:ui.c          **** uint8_t fretToCalibrate = 0;
 623:ui.c          **** uint8_t whichFretArray[NUM_FRET_MEASUREMENTS] = {0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24};
 624:ui.c          **** void menuAction(enum direction action)
 625:ui.c          **** {
 2601              		.loc 1 625 0
 2602              		.cfi_startproc
 2603              		@ args = 0, pretend = 0, frame = 40
 2604              		@ frame_needed = 1, uses_anonymous_args = 0
 2605 0000 80B5     		push	{r7, lr}
 2606              		.cfi_def_cfa_offset 8
 2607              		.cfi_offset 7, -8
 2608              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 60


 2609 0002 8CB0     		sub	sp, sp, #48
 2610              		.cfi_def_cfa_offset 56
 2611 0004 02AF     		add	r7, sp, #8
 2612              		.cfi_def_cfa 7, 48
 2613 0006 0346     		mov	r3, r0
 2614 0008 FB71     		strb	r3, [r7, #7]
 626:ui.c          ****     uint8_t whatToDraw = 0;
 2615              		.loc 1 626 0
 2616 000a 0023     		movs	r3, #0
 2617 000c 87F82730 		strb	r3, [r7, #39]
 627:ui.c          ****     
 628:ui.c          ****     if (menuPosition[0][0] == MainMenu) //we are at the main menu
 2618              		.loc 1 628 0
 2619 0010 9E4B     		ldr	r3, .L219
 2620 0012 93F90030 		ldrsb	r3, [r3]
 2621 0016 002B     		cmp	r3, #0
 2622 0018 51D1     		bne	.L104
 629:ui.c          ****     {
 630:ui.c          ****         //if we went up or down, switch the menu item
 631:ui.c          ****         if (action == Up)
 2623              		.loc 1 631 0
 2624 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2625 001c 032B     		cmp	r3, #3
 2626 001e 15D1     		bne	.L105
 632:ui.c          ****         {
 633:ui.c          ****             menuPosition[0][1]--;
 2627              		.loc 1 633 0
 2628 0020 9A4B     		ldr	r3, .L219
 2629 0022 93F90130 		ldrsb	r3, [r3, #1]
 2630 0026 DBB2     		uxtb	r3, r3
 2631 0028 013B     		subs	r3, r3, #1
 2632 002a DBB2     		uxtb	r3, r3
 2633 002c 5AB2     		sxtb	r2, r3
 2634 002e 974B     		ldr	r3, .L219
 2635 0030 5A70     		strb	r2, [r3, #1]
 634:ui.c          ****             if (menuPosition[0][1] < 0)
 2636              		.loc 1 634 0
 2637 0032 964B     		ldr	r3, .L219
 2638 0034 93F90130 		ldrsb	r3, [r3, #1]
 2639 0038 002B     		cmp	r3, #0
 2640 003a 02DA     		bge	.L106
 635:ui.c          ****             {
 636:ui.c          ****                 menuPosition[0][1] = 0;
 2641              		.loc 1 636 0
 2642 003c 934B     		ldr	r3, .L219
 2643 003e 0022     		movs	r2, #0
 2644 0040 5A70     		strb	r2, [r3, #1]
 2645              	.L106:
 637:ui.c          ****             }
 638:ui.c          ****             whatToDraw = 1;
 2646              		.loc 1 638 0
 2647 0042 0123     		movs	r3, #1
 2648 0044 87F82730 		strb	r3, [r7, #39]
 2649 0048 01F022B8 		b	.L111
 2650              	.L105:
 639:ui.c          ****         }
 640:ui.c          ****         else if (action == Down)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 61


 2651              		.loc 1 640 0
 2652 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2653 004e 022B     		cmp	r3, #2
 2654 0050 1CD1     		bne	.L108
 641:ui.c          ****         {
 642:ui.c          ****             menuPosition[0][1]++;
 2655              		.loc 1 642 0
 2656 0052 8E4B     		ldr	r3, .L219
 2657 0054 93F90130 		ldrsb	r3, [r3, #1]
 2658 0058 DBB2     		uxtb	r3, r3
 2659 005a 0133     		adds	r3, r3, #1
 2660 005c DBB2     		uxtb	r3, r3
 2661 005e 5AB2     		sxtb	r2, r3
 2662 0060 8A4B     		ldr	r3, .L219
 2663 0062 5A70     		strb	r2, [r3, #1]
 643:ui.c          ****             if (menuPosition[0][1] >= numMainMenuItems)
 2664              		.loc 1 643 0
 2665 0064 894B     		ldr	r3, .L219
 2666 0066 93F90130 		ldrsb	r3, [r3, #1]
 2667 006a 1A46     		mov	r2, r3
 2668 006c 884B     		ldr	r3, .L219+4
 2669 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2670 0070 9A42     		cmp	r2, r3
 2671 0072 06DB     		blt	.L109
 644:ui.c          ****             {
 645:ui.c          ****                 menuPosition[0][1] = numMainMenuItems-1;
 2672              		.loc 1 645 0
 2673 0074 864B     		ldr	r3, .L219+4
 2674 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2675 0078 013B     		subs	r3, r3, #1
 2676 007a DBB2     		uxtb	r3, r3
 2677 007c 5AB2     		sxtb	r2, r3
 2678 007e 834B     		ldr	r3, .L219
 2679 0080 5A70     		strb	r2, [r3, #1]
 2680              	.L109:
 646:ui.c          ****             }
 647:ui.c          ****             whatToDraw = 1;
 2681              		.loc 1 647 0
 2682 0082 0123     		movs	r3, #1
 2683 0084 87F82730 		strb	r3, [r7, #39]
 2684 0088 01F002B8 		b	.L111
 2685              	.L108:
 648:ui.c          ****         }
 649:ui.c          ****         else if ((action == Right) || (action == Enter))
 2686              		.loc 1 649 0
 2687 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2688 008e 012B     		cmp	r3, #1
 2689 0090 03D0     		beq	.L110
 2690              		.loc 1 649 0 is_stmt 0 discriminator 1
 2691 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2692 0094 042B     		cmp	r3, #4
 2693 0096 40F0FB87 		bne	.L111
 2694              	.L110:
 650:ui.c          ****         {
 651:ui.c          ****             //select this submenu from the main menu
 652:ui.c          ****             menuPosition[0][0] = menuPosition[0][1]+1; //now [0][0] = 1 means presetStore [0][0] = 
 2695              		.loc 1 652 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 62


 2696 009a 7C4B     		ldr	r3, .L219
 2697 009c 93F90130 		ldrsb	r3, [r3, #1]
 2698 00a0 DBB2     		uxtb	r3, r3
 2699 00a2 0133     		adds	r3, r3, #1
 2700 00a4 DBB2     		uxtb	r3, r3
 2701 00a6 5AB2     		sxtb	r2, r3
 2702 00a8 784B     		ldr	r3, .L219
 2703 00aa 1A70     		strb	r2, [r3]
 653:ui.c          ****             whatToDraw = menuPosition[0][0]+1;
 2704              		.loc 1 653 0
 2705 00ac 774B     		ldr	r3, .L219
 2706 00ae 93F90030 		ldrsb	r3, [r3]
 2707 00b2 DBB2     		uxtb	r3, r3
 2708 00b4 0133     		adds	r3, r3, #1
 2709 00b6 87F82730 		strb	r3, [r7, #39]
 2710 00ba 00F0E9BF 		b	.L111
 2711              	.L104:
 654:ui.c          ****         }
 655:ui.c          ****         //ignore left button
 656:ui.c          ****     }
 657:ui.c          ****     else if (menuPosition[0][0] == CalibrationMenu) //we are at the calibration submenu
 2712              		.loc 1 657 0
 2713 00be 734B     		ldr	r3, .L219
 2714 00c0 93F90030 		ldrsb	r3, [r3]
 2715 00c4 022B     		cmp	r3, #2
 2716 00c6 69D1     		bne	.L112
 658:ui.c          ****     {
 659:ui.c          ****         //if we went up or down, switch the menu item
 660:ui.c          ****         if (action == Up)
 2717              		.loc 1 660 0
 2718 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2719 00ca 032B     		cmp	r3, #3
 2720 00cc 15D1     		bne	.L113
 661:ui.c          ****         {
 662:ui.c          ****             menuPosition[1][1]--;
 2721              		.loc 1 662 0
 2722 00ce 6F4B     		ldr	r3, .L219
 2723 00d0 93F90330 		ldrsb	r3, [r3, #3]
 2724 00d4 DBB2     		uxtb	r3, r3
 2725 00d6 013B     		subs	r3, r3, #1
 2726 00d8 DBB2     		uxtb	r3, r3
 2727 00da 5AB2     		sxtb	r2, r3
 2728 00dc 6B4B     		ldr	r3, .L219
 2729 00de DA70     		strb	r2, [r3, #3]
 663:ui.c          ****             if (menuPosition[1][1] < 0)
 2730              		.loc 1 663 0
 2731 00e0 6A4B     		ldr	r3, .L219
 2732 00e2 93F90330 		ldrsb	r3, [r3, #3]
 2733 00e6 002B     		cmp	r3, #0
 2734 00e8 02DA     		bge	.L114
 664:ui.c          ****             {
 665:ui.c          ****                 menuPosition[1][1] = 0;
 2735              		.loc 1 665 0
 2736 00ea 684B     		ldr	r3, .L219
 2737 00ec 0022     		movs	r2, #0
 2738 00ee DA70     		strb	r2, [r3, #3]
 2739              	.L114:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 63


 666:ui.c          ****             }
 667:ui.c          ****             whatToDraw = 3;
 2740              		.loc 1 667 0
 2741 00f0 0323     		movs	r3, #3
 2742 00f2 87F82730 		strb	r3, [r7, #39]
 2743 00f6 00F0CBBF 		b	.L111
 2744              	.L113:
 668:ui.c          ****         }
 669:ui.c          ****         else if (action == Down)
 2745              		.loc 1 669 0
 2746 00fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2747 00fc 022B     		cmp	r3, #2
 2748 00fe 1CD1     		bne	.L116
 670:ui.c          ****         {
 671:ui.c          ****             menuPosition[1][1]++;
 2749              		.loc 1 671 0
 2750 0100 624B     		ldr	r3, .L219
 2751 0102 93F90330 		ldrsb	r3, [r3, #3]
 2752 0106 DBB2     		uxtb	r3, r3
 2753 0108 0133     		adds	r3, r3, #1
 2754 010a DBB2     		uxtb	r3, r3
 2755 010c 5AB2     		sxtb	r2, r3
 2756 010e 5F4B     		ldr	r3, .L219
 2757 0110 DA70     		strb	r2, [r3, #3]
 672:ui.c          ****             if (menuPosition[1][1] >= numCalibrationItems)
 2758              		.loc 1 672 0
 2759 0112 5E4B     		ldr	r3, .L219
 2760 0114 93F90330 		ldrsb	r3, [r3, #3]
 2761 0118 1A46     		mov	r2, r3
 2762 011a 5E4B     		ldr	r3, .L219+8
 2763 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2764 011e 9A42     		cmp	r2, r3
 2765 0120 06DB     		blt	.L117
 673:ui.c          ****             {
 674:ui.c          ****                 menuPosition[1][1] = numCalibrationItems-1;
 2766              		.loc 1 674 0
 2767 0122 5C4B     		ldr	r3, .L219+8
 2768 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2769 0126 013B     		subs	r3, r3, #1
 2770 0128 DBB2     		uxtb	r3, r3
 2771 012a 5AB2     		sxtb	r2, r3
 2772 012c 574B     		ldr	r3, .L219
 2773 012e DA70     		strb	r2, [r3, #3]
 2774              	.L117:
 675:ui.c          ****             }
 676:ui.c          ****             whatToDraw = 3;
 2775              		.loc 1 676 0
 2776 0130 0323     		movs	r3, #3
 2777 0132 87F82730 		strb	r3, [r7, #39]
 2778 0136 00F0ABBF 		b	.L111
 2779              	.L116:
 677:ui.c          ****         }
 678:ui.c          ****         else if ((action == Right) || (action == Enter))
 2780              		.loc 1 678 0
 2781 013a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2782 013c 012B     		cmp	r3, #1
 2783 013e 02D0     		beq	.L118
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 64


 2784              		.loc 1 678 0 is_stmt 0 discriminator 1
 2785 0140 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2786 0142 042B     		cmp	r3, #4
 2787 0144 1ED1     		bne	.L119
 2788              	.L118:
 679:ui.c          ****         {
 680:ui.c          ****             if (menuPosition[1][1] == 0)
 2789              		.loc 1 680 0 is_stmt 1
 2790 0146 514B     		ldr	r3, .L219
 2791 0148 93F90330 		ldrsb	r3, [r3, #3]
 2792 014c 002B     		cmp	r3, #0
 2793 014e 09D1     		bne	.L120
 681:ui.c          ****             {
 682:ui.c          ****                 //calibrate levers
 683:ui.c          ****                 menuPosition[0][0] = CalibrateLeversMenu; //means calibrating levers now
 2794              		.loc 1 683 0
 2795 0150 4E4B     		ldr	r3, .L219
 2796 0152 0422     		movs	r2, #4
 2797 0154 1A70     		strb	r2, [r3]
 684:ui.c          ****                 whatToDraw = 0;
 2798              		.loc 1 684 0
 2799 0156 0023     		movs	r3, #0
 2800 0158 87F82730 		strb	r3, [r7, #39]
 685:ui.c          ****                 enterLeverCalibrationMode();
 2801              		.loc 1 685 0
 2802 015c FFF7FEFF 		bl	enterLeverCalibrationMode
 680:ui.c          ****             {
 2803              		.loc 1 680 0
 2804 0160 00F093BF 		b	.L216
 2805              	.L120:
 686:ui.c          ****             }
 687:ui.c          ****             else if (menuPosition[1][1] == 1)
 2806              		.loc 1 687 0
 2807 0164 494B     		ldr	r3, .L219
 2808 0166 93F90330 		ldrsb	r3, [r3, #3]
 2809 016a 012B     		cmp	r3, #1
 2810 016c 40F08D87 		bne	.L216
 688:ui.c          ****             {
 689:ui.c          ****                 //calibrate bar slider frets
 690:ui.c          ****                 menuPosition[0][0] = CalibrateFretsMenu; //means calibrating frets now
 2811              		.loc 1 690 0
 2812 0170 464B     		ldr	r3, .L219
 2813 0172 0522     		movs	r2, #5
 2814 0174 1A70     		strb	r2, [r3]
 691:ui.c          ****                 whatToDraw = 0;
 2815              		.loc 1 691 0
 2816 0176 0023     		movs	r3, #0
 2817 0178 87F82730 		strb	r3, [r7, #39]
 692:ui.c          ****                 enterFretCalibrationMode();
 2818              		.loc 1 692 0
 2819 017c FFF7FEFF 		bl	enterFretCalibrationMode
 680:ui.c          ****             {
 2820              		.loc 1 680 0
 2821 0180 00F083BF 		b	.L216
 2822              	.L119:
 693:ui.c          ****             }
 694:ui.c          ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 65


 695:ui.c          ****         else if (action == Left) 
 2823              		.loc 1 695 0
 2824 0184 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2825 0186 002B     		cmp	r3, #0
 2826 0188 40F08287 		bne	.L111
 696:ui.c          ****         {
 697:ui.c          ****             //go back to main menu
 698:ui.c          ****             menuPosition[0][0] = 0;
 2827              		.loc 1 698 0
 2828 018c 3F4B     		ldr	r3, .L219
 2829 018e 0022     		movs	r2, #0
 2830 0190 1A70     		strb	r2, [r3]
 699:ui.c          ****             whatToDraw = 1;
 2831              		.loc 1 699 0
 2832 0192 0123     		movs	r3, #1
 2833 0194 87F82730 		strb	r3, [r7, #39]
 2834 0198 00F07ABF 		b	.L111
 2835              	.L112:
 700:ui.c          ****         }
 701:ui.c          ****     }
 702:ui.c          ****     else if (menuPosition[0][0] == SettingsMenu) //we are at the settings submenu
 2836              		.loc 1 702 0
 2837 019c 3B4B     		ldr	r3, .L219
 2838 019e 93F90030 		ldrsb	r3, [r3]
 2839 01a2 032B     		cmp	r3, #3
 2840 01a4 40F04E83 		bne	.L122
 703:ui.c          ****     {
 704:ui.c          ****         //if we went up or down, switch the menu item
 705:ui.c          ****         if (action == Up)
 2841              		.loc 1 705 0
 2842 01a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2843 01aa 032B     		cmp	r3, #3
 2844 01ac 15D1     		bne	.L123
 706:ui.c          ****         {
 707:ui.c          ****             menuPosition[2][1]--;
 2845              		.loc 1 707 0
 2846 01ae 374B     		ldr	r3, .L219
 2847 01b0 93F90530 		ldrsb	r3, [r3, #5]
 2848 01b4 DBB2     		uxtb	r3, r3
 2849 01b6 013B     		subs	r3, r3, #1
 2850 01b8 DBB2     		uxtb	r3, r3
 2851 01ba 5AB2     		sxtb	r2, r3
 2852 01bc 334B     		ldr	r3, .L219
 2853 01be 5A71     		strb	r2, [r3, #5]
 708:ui.c          ****             if (menuPosition[2][1] < 0)
 2854              		.loc 1 708 0
 2855 01c0 324B     		ldr	r3, .L219
 2856 01c2 93F90530 		ldrsb	r3, [r3, #5]
 2857 01c6 002B     		cmp	r3, #0
 2858 01c8 02DA     		bge	.L124
 709:ui.c          ****             {
 710:ui.c          ****                 menuPosition[2][1] = 0;
 2859              		.loc 1 710 0
 2860 01ca 304B     		ldr	r3, .L219
 2861 01cc 0022     		movs	r2, #0
 2862 01ce 5A71     		strb	r2, [r3, #5]
 2863              	.L124:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 66


 711:ui.c          ****             }
 712:ui.c          ****             whatToDraw = 4;
 2864              		.loc 1 712 0
 2865 01d0 0423     		movs	r3, #4
 2866 01d2 87F82730 		strb	r3, [r7, #39]
 2867 01d6 00F05BBF 		b	.L111
 2868              	.L123:
 713:ui.c          ****         }
 714:ui.c          ****         else if (action == Down)
 2869              		.loc 1 714 0
 2870 01da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2871 01dc 022B     		cmp	r3, #2
 2872 01de 1CD1     		bne	.L126
 715:ui.c          ****         {
 716:ui.c          ****             menuPosition[2][1]++;
 2873              		.loc 1 716 0
 2874 01e0 2A4B     		ldr	r3, .L219
 2875 01e2 93F90530 		ldrsb	r3, [r3, #5]
 2876 01e6 DBB2     		uxtb	r3, r3
 2877 01e8 0133     		adds	r3, r3, #1
 2878 01ea DBB2     		uxtb	r3, r3
 2879 01ec 5AB2     		sxtb	r2, r3
 2880 01ee 274B     		ldr	r3, .L219
 2881 01f0 5A71     		strb	r2, [r3, #5]
 717:ui.c          ****             if (menuPosition[2][1] >= numSettingsItems)
 2882              		.loc 1 717 0
 2883 01f2 264B     		ldr	r3, .L219
 2884 01f4 93F90530 		ldrsb	r3, [r3, #5]
 2885 01f8 1A46     		mov	r2, r3
 2886 01fa 274B     		ldr	r3, .L219+12
 2887 01fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2888 01fe 9A42     		cmp	r2, r3
 2889 0200 06DB     		blt	.L127
 718:ui.c          ****             {
 719:ui.c          ****                 menuPosition[2][1] = numSettingsItems-1;
 2890              		.loc 1 719 0
 2891 0202 254B     		ldr	r3, .L219+12
 2892 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2893 0206 013B     		subs	r3, r3, #1
 2894 0208 DBB2     		uxtb	r3, r3
 2895 020a 5AB2     		sxtb	r2, r3
 2896 020c 1F4B     		ldr	r3, .L219
 2897 020e 5A71     		strb	r2, [r3, #5]
 2898              	.L127:
 720:ui.c          ****             }
 721:ui.c          ****             whatToDraw = 4;
 2899              		.loc 1 721 0
 2900 0210 0423     		movs	r3, #4
 2901 0212 87F82730 		strb	r3, [r7, #39]
 2902 0216 00F03BBF 		b	.L111
 2903              	.L126:
 722:ui.c          ****         }
 723:ui.c          ****         else if ((action == Right) || (action == Enter))
 2904              		.loc 1 723 0
 2905 021a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2906 021c 012B     		cmp	r3, #1
 2907 021e 03D0     		beq	.L128
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 67


 2908              		.loc 1 723 0 is_stmt 0 discriminator 1
 2909 0220 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2910 0222 042B     		cmp	r3, #4
 2911 0224 40F00283 		bne	.L129
 2912              	.L128:
 724:ui.c          ****         {
 725:ui.c          ****             if (menuPosition[2][1] == 0)
 2913              		.loc 1 725 0 is_stmt 1
 2914 0228 184B     		ldr	r3, .L219
 2915 022a 93F90530 		ldrsb	r3, [r3, #5]
 2916 022e 002B     		cmp	r3, #0
 2917 0230 3ED1     		bne	.L130
 726:ui.c          ****             {
 727:ui.c          ****                 //transpose
 728:ui.c          ****                 menuPosition[0][0] = TransposeMenu;
 2918              		.loc 1 728 0
 2919 0232 164B     		ldr	r3, .L219
 2920 0234 0622     		movs	r2, #6
 2921 0236 1A70     		strb	r2, [r3]
 729:ui.c          ****                 Decoder_1_Start();
 2922              		.loc 1 729 0
 2923 0238 FFF7FEFF 		bl	Decoder_1_Start
 730:ui.c          ****                 whatToDraw = 0;
 2924              		.loc 1 730 0
 2925 023c 0023     		movs	r3, #0
 2926 023e 87F82730 		strb	r3, [r7, #39]
 731:ui.c          ****                 encoderWatch = 1;
 2927              		.loc 1 731 0
 2928 0242 164B     		ldr	r3, .L219+16
 2929 0244 0122     		movs	r2, #1
 2930 0246 1A70     		strb	r2, [r3]
 732:ui.c          ****                 OLEDclear(128, 64);
 2931              		.loc 1 732 0
 2932 0248 4021     		movs	r1, #64
 2933 024a 8020     		movs	r0, #128
 2934 024c FFF7FEFF 		bl	OLEDclear
 733:ui.c          ****                 myGFX_setFont(2);
 2935              		.loc 1 733 0
 2936 0250 0220     		movs	r0, #2
 2937 0252 FFF7FEFF 		bl	myGFX_setFont
 734:ui.c          ****                 OLEDtextColor(1, 0);
 2938              		.loc 1 734 0
 2939 0256 0021     		movs	r1, #0
 2940 0258 0120     		movs	r0, #1
 2941 025a FFF7FEFF 		bl	OLEDtextColor
 735:ui.c          ****                 OLEDwriteString("VALUE KNOB SETS", 15, 0, FirstLine);
 2942              		.loc 1 735 0
 2943 025e 0023     		movs	r3, #0
 2944 0260 0022     		movs	r2, #0
 2945 0262 0F21     		movs	r1, #15
 2946 0264 0E48     		ldr	r0, .L219+20
 2947 0266 FFF7FEFF 		bl	OLEDwriteString
 736:ui.c          ****                 OLEDwriteString("TRANSPOSITION  ", 15, 0, SecondLine);
 2948              		.loc 1 736 0
 2949 026a 0123     		movs	r3, #1
 2950 026c 0022     		movs	r2, #0
 2951 026e 0F21     		movs	r1, #15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 68


 2952 0270 0C48     		ldr	r0, .L219+24
 2953 0272 FFF7FEFF 		bl	OLEDwriteString
 737:ui.c          ****                 prevEncoderVal = 127;
 2954              		.loc 1 737 0
 2955 0276 0C4B     		ldr	r3, .L219+28
 2956 0278 7F22     		movs	r2, #127
 2957 027a 1A70     		strb	r2, [r3]
 738:ui.c          ****                 Decoder_1_SetPosition(0);
 2958              		.loc 1 738 0
 2959 027c 0020     		movs	r0, #0
 2960 027e FFF7FEFF 		bl	Decoder_1_SetPosition
 739:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2961              		.loc 1 739 0
 2962 0282 0A4B     		ldr	r3, .L219+32
 2963 0284 0122     		movs	r2, #1
 2964 0286 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 2965              		.loc 1 725 0
 2966 0288 00F001BF 		b	.L217
 2967              	.L220:
 2968              		.align	2
 2969              	.L219:
 2970 028c 00000000 		.word	menuPosition
 2971 0290 00000000 		.word	numMainMenuItems
 2972 0294 00000000 		.word	numCalibrationItems
 2973 0298 00000000 		.word	numSettingsItems
 2974 029c 00000000 		.word	encoderWatch
 2975 02a0 50010000 		.word	.LC17
 2976 02a4 60010000 		.word	.LC18
 2977 02a8 00000000 		.word	prevEncoderVal
 2978 02ac 00000000 		.word	mainOLEDWaitingToSend
 2979              	.L130:
 740:ui.c          ****             }
 741:ui.c          ****             else if (menuPosition[2][1] == 1)
 2980              		.loc 1 741 0
 2981 02b0 A74B     		ldr	r3, .L221
 2982 02b2 93F90530 		ldrsb	r3, [r3, #5]
 2983 02b6 012B     		cmp	r3, #1
 2984 02b8 46D1     		bne	.L132
 742:ui.c          ****             {
 743:ui.c          ****                 //octave action setting
 744:ui.c          ****                 menuPosition[0][0] = OctaveActionMenu;
 2985              		.loc 1 744 0
 2986 02ba A54B     		ldr	r3, .L221
 2987 02bc 0722     		movs	r2, #7
 2988 02be 1A70     		strb	r2, [r3]
 745:ui.c          ****       
 746:ui.c          ****                 OLEDclear(128, 64);
 2989              		.loc 1 746 0
 2990 02c0 4021     		movs	r1, #64
 2991 02c2 8020     		movs	r0, #128
 2992 02c4 FFF7FEFF 		bl	OLEDclear
 747:ui.c          ****                 myGFX_setFont(2);
 2993              		.loc 1 747 0
 2994 02c8 0220     		movs	r0, #2
 2995 02ca FFF7FEFF 		bl	myGFX_setFont
 748:ui.c          ****                 OLEDtextColor(1, 0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 69


 2996              		.loc 1 748 0
 2997 02ce 0021     		movs	r1, #0
 2998 02d0 0120     		movs	r0, #1
 2999 02d2 FFF7FEFF 		bl	OLEDtextColor
 749:ui.c          ****                 OLEDwriteString("OCTAVE ACTION  ", 15, 0, FirstLine);
 3000              		.loc 1 749 0
 3001 02d6 0023     		movs	r3, #0
 3002 02d8 0022     		movs	r2, #0
 3003 02da 0F21     		movs	r1, #15
 3004 02dc 9D48     		ldr	r0, .L221+4
 3005 02de FFF7FEFF 		bl	OLEDwriteString
 750:ui.c          ****                
 751:ui.c          ****                 OLEDtextColor(octaveAction, !octaveAction);
 3006              		.loc 1 751 0
 3007 02e2 9D4B     		ldr	r3, .L221+8
 3008 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3009 02e6 9AB2     		uxth	r2, r3
 3010 02e8 9B4B     		ldr	r3, .L221+8
 3011 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3012 02ec 002B     		cmp	r3, #0
 3013 02ee 0CBF     		ite	eq
 3014 02f0 0123     		moveq	r3, #1
 3015 02f2 0023     		movne	r3, #0
 3016 02f4 DBB2     		uxtb	r3, r3
 3017 02f6 9BB2     		uxth	r3, r3
 3018 02f8 1946     		mov	r1, r3
 3019 02fa 1046     		mov	r0, r2
 3020 02fc FFF7FEFF 		bl	OLEDtextColor
 752:ui.c          ****                 OLEDwriteString("ON NEXT NOTE   ", 15, 0, SecondLine);
 3021              		.loc 1 752 0
 3022 0300 0123     		movs	r3, #1
 3023 0302 0022     		movs	r2, #0
 3024 0304 0F21     		movs	r1, #15
 3025 0306 9548     		ldr	r0, .L221+12
 3026 0308 FFF7FEFF 		bl	OLEDwriteString
 753:ui.c          ****                 OLEDtextColor(!octaveAction, octaveAction);
 3027              		.loc 1 753 0
 3028 030c 924B     		ldr	r3, .L221+8
 3029 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3030 0310 002B     		cmp	r3, #0
 3031 0312 0CBF     		ite	eq
 3032 0314 0123     		moveq	r3, #1
 3033 0316 0023     		movne	r3, #0
 3034 0318 DBB2     		uxtb	r3, r3
 3035 031a 9AB2     		uxth	r2, r3
 3036 031c 8E4B     		ldr	r3, .L221+8
 3037 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3038 0320 9BB2     		uxth	r3, r3
 3039 0322 1946     		mov	r1, r3
 3040 0324 1046     		mov	r0, r2
 3041 0326 FFF7FEFF 		bl	OLEDtextColor
 754:ui.c          ****                 OLEDwriteString("IMMEDIATE      ", 15, 0, ThirdLine);
 3042              		.loc 1 754 0
 3043 032a 0223     		movs	r3, #2
 3044 032c 0022     		movs	r2, #0
 3045 032e 0F21     		movs	r1, #15
 3046 0330 8B48     		ldr	r0, .L221+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 70


 3047 0332 FFF7FEFF 		bl	OLEDwriteString
 755:ui.c          ****                 OLEDtextColor(1, 0);
 3048              		.loc 1 755 0
 3049 0336 0021     		movs	r1, #0
 3050 0338 0120     		movs	r0, #1
 3051 033a FFF7FEFF 		bl	OLEDtextColor
 756:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3052              		.loc 1 756 0
 3053 033e 894B     		ldr	r3, .L221+20
 3054 0340 0122     		movs	r2, #1
 3055 0342 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3056              		.loc 1 725 0
 3057 0344 00F0A3BE 		b	.L217
 3058              	.L132:
 757:ui.c          ****             }
 758:ui.c          ****             else if (menuPosition[2][1] == 2)
 3059              		.loc 1 758 0
 3060 0348 814B     		ldr	r3, .L221
 3061 034a 93F90530 		ldrsb	r3, [r3, #5]
 3062 034e 022B     		cmp	r3, #2
 3063 0350 2CD1     		bne	.L133
 759:ui.c          ****             {
 760:ui.c          ****                 //dead zone setting
 761:ui.c          ****                 menuPosition[0][0] = DeadzonesMenu;
 3064              		.loc 1 761 0
 3065 0352 7F4B     		ldr	r3, .L221
 3066 0354 0822     		movs	r2, #8
 3067 0356 1A70     		strb	r2, [r3]
 762:ui.c          ****                 Decoder_1_Start();
 3068              		.loc 1 762 0
 3069 0358 FFF7FEFF 		bl	Decoder_1_Start
 763:ui.c          ****                 whatToDraw = 0;
 3070              		.loc 1 763 0
 3071 035c 0023     		movs	r3, #0
 3072 035e 87F82730 		strb	r3, [r7, #39]
 764:ui.c          ****                 encoderWatch = 1;
 3073              		.loc 1 764 0
 3074 0362 814B     		ldr	r3, .L221+24
 3075 0364 0122     		movs	r2, #1
 3076 0366 1A70     		strb	r2, [r3]
 765:ui.c          ****                 OLEDclear(128, 64);
 3077              		.loc 1 765 0
 3078 0368 4021     		movs	r1, #64
 3079 036a 8020     		movs	r0, #128
 3080 036c FFF7FEFF 		bl	OLEDclear
 766:ui.c          ****                 myGFX_setFont(2);
 3081              		.loc 1 766 0
 3082 0370 0220     		movs	r0, #2
 3083 0372 FFF7FEFF 		bl	myGFX_setFont
 767:ui.c          ****                 OLEDtextColor(1, 0);
 3084              		.loc 1 767 0
 3085 0376 0021     		movs	r1, #0
 3086 0378 0120     		movs	r0, #1
 3087 037a FFF7FEFF 		bl	OLEDtextColor
 768:ui.c          ****                 OLEDwriteString("VALUE KNOB SETS", 15, 0, FirstLine);
 3088              		.loc 1 768 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 71


 3089 037e 0023     		movs	r3, #0
 3090 0380 0022     		movs	r2, #0
 3091 0382 0F21     		movs	r1, #15
 3092 0384 7948     		ldr	r0, .L221+28
 3093 0386 FFF7FEFF 		bl	OLEDwriteString
 769:ui.c          ****                 OLEDwriteString("LEVER DEADZONES", 15, 0, SecondLine);
 3094              		.loc 1 769 0
 3095 038a 0123     		movs	r3, #1
 3096 038c 0022     		movs	r2, #0
 3097 038e 0F21     		movs	r1, #15
 3098 0390 7748     		ldr	r0, .L221+32
 3099 0392 FFF7FEFF 		bl	OLEDwriteString
 770:ui.c          ****                 prevEncoderVal = 127;
 3100              		.loc 1 770 0
 3101 0396 774B     		ldr	r3, .L221+36
 3102 0398 7F22     		movs	r2, #127
 3103 039a 1A70     		strb	r2, [r3]
 771:ui.c          ****                 Decoder_1_SetPosition(0);
 3104              		.loc 1 771 0
 3105 039c 0020     		movs	r0, #0
 3106 039e FFF7FEFF 		bl	Decoder_1_SetPosition
 772:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3107              		.loc 1 772 0
 3108 03a2 704B     		ldr	r3, .L221+20
 3109 03a4 0122     		movs	r2, #1
 3110 03a6 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3111              		.loc 1 725 0
 3112 03a8 00F071BE 		b	.L217
 3113              	.L133:
 773:ui.c          ****             }
 774:ui.c          ****             else if (menuPosition[2][1] == 3)
 3114              		.loc 1 774 0
 3115 03ac 684B     		ldr	r3, .L221
 3116 03ae 93F90530 		ldrsb	r3, [r3, #5]
 3117 03b2 032B     		cmp	r3, #3
 3118 03b4 35D1     		bne	.L134
 775:ui.c          ****             {
 776:ui.c          ****                 //dead zone setting
 777:ui.c          ****                 menuPosition[0][0] = SliderRepMenu;
 3119              		.loc 1 777 0
 3120 03b6 664B     		ldr	r3, .L221
 3121 03b8 0922     		movs	r2, #9
 3122 03ba 1A70     		strb	r2, [r3]
 778:ui.c          ****                 Decoder_1_Start();
 3123              		.loc 1 778 0
 3124 03bc FFF7FEFF 		bl	Decoder_1_Start
 779:ui.c          ****                 whatToDraw = 0;
 3125              		.loc 1 779 0
 3126 03c0 0023     		movs	r3, #0
 3127 03c2 87F82730 		strb	r3, [r7, #39]
 780:ui.c          ****                 encoderWatch = 1;
 3128              		.loc 1 780 0
 3129 03c6 684B     		ldr	r3, .L221+24
 3130 03c8 0122     		movs	r2, #1
 3131 03ca 1A70     		strb	r2, [r3]
 781:ui.c          ****                 OLEDclear(128, 64);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 72


 3132              		.loc 1 781 0
 3133 03cc 4021     		movs	r1, #64
 3134 03ce 8020     		movs	r0, #128
 3135 03d0 FFF7FEFF 		bl	OLEDclear
 782:ui.c          ****                 myGFX_setFont(2);
 3136              		.loc 1 782 0
 3137 03d4 0220     		movs	r0, #2
 3138 03d6 FFF7FEFF 		bl	myGFX_setFont
 783:ui.c          ****                 OLEDtextColor(1, 0);
 3139              		.loc 1 783 0
 3140 03da 0021     		movs	r1, #0
 3141 03dc 0120     		movs	r0, #1
 3142 03de FFF7FEFF 		bl	OLEDtextColor
 784:ui.c          ****                 OLEDwriteString("SET WHICH      ", 15, 0, FirstLine);
 3143              		.loc 1 784 0
 3144 03e2 0023     		movs	r3, #0
 3145 03e4 0022     		movs	r2, #0
 3146 03e6 0F21     		movs	r1, #15
 3147 03e8 6348     		ldr	r0, .L221+40
 3148 03ea FFF7FEFF 		bl	OLEDwriteString
 785:ui.c          ****                 OLEDwriteString("STRINGS SLIDERS", 15, 0, SecondLine);
 3149              		.loc 1 785 0
 3150 03ee 0123     		movs	r3, #1
 3151 03f0 0022     		movs	r2, #0
 3152 03f2 0F21     		movs	r1, #15
 3153 03f4 6148     		ldr	r0, .L221+44
 3154 03f6 FFF7FEFF 		bl	OLEDwriteString
 786:ui.c          ****                 OLEDwriteString("REPRESENT(1-10)", 15, 0, ThirdLine);
 3155              		.loc 1 786 0
 3156 03fa 0223     		movs	r3, #2
 3157 03fc 0022     		movs	r2, #0
 3158 03fe 0F21     		movs	r1, #15
 3159 0400 5F48     		ldr	r0, .L221+48
 3160 0402 FFF7FEFF 		bl	OLEDwriteString
 787:ui.c          ****                 prevEncoderVal = 127;
 3161              		.loc 1 787 0
 3162 0406 5B4B     		ldr	r3, .L221+36
 3163 0408 7F22     		movs	r2, #127
 3164 040a 1A70     		strb	r2, [r3]
 788:ui.c          ****                 Decoder_1_SetPosition(0);
 3165              		.loc 1 788 0
 3166 040c 0020     		movs	r0, #0
 3167 040e FFF7FEFF 		bl	Decoder_1_SetPosition
 789:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3168              		.loc 1 789 0
 3169 0412 544B     		ldr	r3, .L221+20
 3170 0414 0122     		movs	r2, #1
 3171 0416 1A70     		strb	r2, [r3]
 790:ui.c          ****                 editingSliderRepString = 0;
 3172              		.loc 1 790 0
 3173 0418 5A4B     		ldr	r3, .L221+52
 3174 041a 0022     		movs	r2, #0
 3175 041c 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3176              		.loc 1 725 0
 3177 041e 00F036BE 		b	.L217
 3178              	.L134:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 73


 791:ui.c          ****             }
 792:ui.c          ****             else if (menuPosition[2][1] == 4)
 3179              		.loc 1 792 0
 3180 0422 4B4B     		ldr	r3, .L221
 3181 0424 93F90530 		ldrsb	r3, [r3, #5]
 3182 0428 042B     		cmp	r3, #4
 3183 042a 45D1     		bne	.L135
 793:ui.c          ****             {
 794:ui.c          ****                 //dead zone setting
 795:ui.c          ****                 menuPosition[0][0] = TraditionalPedalSumMenu;
 3184              		.loc 1 795 0
 3185 042c 484B     		ldr	r3, .L221
 3186 042e 0A22     		movs	r2, #10
 3187 0430 1A70     		strb	r2, [r3]
 796:ui.c          ****                 whatToDraw = 0;
 3188              		.loc 1 796 0
 3189 0432 0023     		movs	r3, #0
 3190 0434 87F82730 		strb	r3, [r7, #39]
 797:ui.c          ****                 OLEDclear(128, 64);
 3191              		.loc 1 797 0
 3192 0438 4021     		movs	r1, #64
 3193 043a 8020     		movs	r0, #128
 3194 043c FFF7FEFF 		bl	OLEDclear
 798:ui.c          ****                 myGFX_setFont(2);
 3195              		.loc 1 798 0
 3196 0440 0220     		movs	r0, #2
 3197 0442 FFF7FEFF 		bl	myGFX_setFont
 799:ui.c          ****                 OLEDtextColor(1, 0);
 3198              		.loc 1 799 0
 3199 0446 0021     		movs	r1, #0
 3200 0448 0120     		movs	r0, #1
 3201 044a FFF7FEFF 		bl	OLEDtextColor
 800:ui.c          ****                 OLEDwriteString("PEDAL SUM MODE:", 15, 0, FirstLine);
 3202              		.loc 1 800 0
 3203 044e 0023     		movs	r3, #0
 3204 0450 0022     		movs	r2, #0
 3205 0452 0F21     		movs	r1, #15
 3206 0454 4C48     		ldr	r0, .L221+56
 3207 0456 FFF7FEFF 		bl	OLEDwriteString
 801:ui.c          ****                 OLEDtextColor(traditionalPedalAdd, !traditionalPedalAdd);
 3208              		.loc 1 801 0
 3209 045a 4C4B     		ldr	r3, .L221+60
 3210 045c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3211 045e 9AB2     		uxth	r2, r3
 3212 0460 4A4B     		ldr	r3, .L221+60
 3213 0462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3214 0464 002B     		cmp	r3, #0
 3215 0466 0CBF     		ite	eq
 3216 0468 0123     		moveq	r3, #1
 3217 046a 0023     		movne	r3, #0
 3218 046c DBB2     		uxtb	r3, r3
 3219 046e 9BB2     		uxth	r3, r3
 3220 0470 1946     		mov	r1, r3
 3221 0472 1046     		mov	r0, r2
 3222 0474 FFF7FEFF 		bl	OLEDtextColor
 802:ui.c          ****                 OLEDwriteString("SIMPLE ADD     ", 15, 0, SecondLine);
 3223              		.loc 1 802 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 74


 3224 0478 0123     		movs	r3, #1
 3225 047a 0022     		movs	r2, #0
 3226 047c 0F21     		movs	r1, #15
 3227 047e 4448     		ldr	r0, .L221+64
 3228 0480 FFF7FEFF 		bl	OLEDwriteString
 803:ui.c          ****                 OLEDtextColor(!traditionalPedalAdd, traditionalPedalAdd);
 3229              		.loc 1 803 0
 3230 0484 414B     		ldr	r3, .L221+60
 3231 0486 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3232 0488 002B     		cmp	r3, #0
 3233 048a 0CBF     		ite	eq
 3234 048c 0123     		moveq	r3, #1
 3235 048e 0023     		movne	r3, #0
 3236 0490 DBB2     		uxtb	r3, r3
 3237 0492 9AB2     		uxth	r2, r3
 3238 0494 3D4B     		ldr	r3, .L221+60
 3239 0496 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3240 0498 9BB2     		uxth	r3, r3
 3241 049a 1946     		mov	r1, r3
 3242 049c 1046     		mov	r0, r2
 3243 049e FFF7FEFF 		bl	OLEDtextColor
 804:ui.c          ****                 OLEDwriteString("TRADITIONAL    ", 15, 0, ThirdLine);
 3244              		.loc 1 804 0
 3245 04a2 0223     		movs	r3, #2
 3246 04a4 0022     		movs	r2, #0
 3247 04a6 0F21     		movs	r1, #15
 3248 04a8 3A48     		ldr	r0, .L221+68
 3249 04aa FFF7FEFF 		bl	OLEDwriteString
 805:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3250              		.loc 1 805 0
 3251 04ae 2D4B     		ldr	r3, .L221+20
 3252 04b0 0122     		movs	r2, #1
 3253 04b2 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3254              		.loc 1 725 0
 3255 04b4 00F0EBBD 		b	.L217
 3256              	.L135:
 806:ui.c          ****             }
 807:ui.c          ****             else if (menuPosition[2][1] == 5)
 3257              		.loc 1 807 0
 3258 04b8 254B     		ldr	r3, .L221
 3259 04ba 93F90530 		ldrsb	r3, [r3, #5]
 3260 04be 052B     		cmp	r3, #5
 3261 04c0 40F00B81 		bne	.L136
 3262              	.LBB13:
 808:ui.c          ****             {
 809:ui.c          ****                 //midi send setting
 810:ui.c          ****                 menuPosition[0][0] = MidiSendMenu;
 3263              		.loc 1 810 0
 3264 04c4 224B     		ldr	r3, .L221
 3265 04c6 0B22     		movs	r2, #11
 3266 04c8 1A70     		strb	r2, [r3]
 811:ui.c          ****                 whatToDraw = 0;
 3267              		.loc 1 811 0
 3268 04ca 0023     		movs	r3, #0
 3269 04cc 87F82730 		strb	r3, [r7, #39]
 812:ui.c          ****                 OLEDclear(128, 64);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 75


 3270              		.loc 1 812 0
 3271 04d0 4021     		movs	r1, #64
 3272 04d2 8020     		movs	r0, #128
 3273 04d4 FFF7FEFF 		bl	OLEDclear
 813:ui.c          ****                 myGFX_setFont(2);
 3274              		.loc 1 813 0
 3275 04d8 0220     		movs	r0, #2
 3276 04da FFF7FEFF 		bl	myGFX_setFont
 814:ui.c          ****                 OLEDtextColor(1, 0);
 3277              		.loc 1 814 0
 3278 04de 0021     		movs	r1, #0
 3279 04e0 0120     		movs	r0, #1
 3280 04e2 FFF7FEFF 		bl	OLEDtextColor
 815:ui.c          ****                 OLEDwriteString("SEND MIDI  ", 11, 0, FirstLine);
 3281              		.loc 1 815 0
 3282 04e6 0023     		movs	r3, #0
 3283 04e8 0022     		movs	r2, #0
 3284 04ea 0B21     		movs	r1, #11
 3285 04ec 2A48     		ldr	r0, .L221+72
 3286 04ee FFF7FEFF 		bl	OLEDwriteString
 816:ui.c          ****                 uint8_t midiselected= (whichMidiSendSelected==0);
 3287              		.loc 1 816 0
 3288 04f2 2A4B     		ldr	r3, .L221+76
 3289 04f4 93F90030 		ldrsb	r3, [r3]
 3290 04f8 002B     		cmp	r3, #0
 3291 04fa 0CBF     		ite	eq
 3292 04fc 0123     		moveq	r3, #1
 3293 04fe 0023     		movne	r3, #0
 3294 0500 DBB2     		uxtb	r3, r3
 3295 0502 FB73     		strb	r3, [r7, #15]
 817:ui.c          ****                 GFXfillRect(&theGFX, 80, 0, 37, 16, midiselected);
 3296              		.loc 1 817 0
 3297 0504 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3298 0506 9BB2     		uxth	r3, r3
 3299 0508 0193     		str	r3, [sp, #4]
 3300 050a 1023     		movs	r3, #16
 3301 050c 0093     		str	r3, [sp]
 3302 050e 2523     		movs	r3, #37
 3303 0510 0022     		movs	r2, #0
 3304 0512 5021     		movs	r1, #80
 3305 0514 2248     		ldr	r0, .L221+80
 3306 0516 FFF7FEFF 		bl	GFXfillRect
 818:ui.c          ****                 OLEDtextColor(!midiselected,midiselected);
 3307              		.loc 1 818 0
 3308 051a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3309 051c 002B     		cmp	r3, #0
 3310 051e 0CBF     		ite	eq
 3311 0520 0123     		moveq	r3, #1
 3312 0522 0023     		movne	r3, #0
 3313 0524 DBB2     		uxtb	r3, r3
 3314 0526 9BB2     		uxth	r3, r3
 3315 0528 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3316 052a 92B2     		uxth	r2, r2
 3317 052c 1146     		mov	r1, r2
 3318 052e 1846     		mov	r0, r3
 3319 0530 FFF7FEFF 		bl	OLEDtextColor
 819:ui.c          ****                 if (midiSendOn)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 76


 3320              		.loc 1 819 0
 3321 0534 1B4B     		ldr	r3, .L221+84
 3322 0536 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3323 0538 002B     		cmp	r3, #0
 3324 053a 35D0     		beq	.L137
 820:ui.c          ****                 {
 821:ui.c          ****                     GFXwrite(&theGFX, 79);
 3325              		.loc 1 821 0
 3326 053c 4F21     		movs	r1, #79
 3327 053e 1848     		ldr	r0, .L221+80
 3328 0540 FFF7FEFF 		bl	GFXwrite
 822:ui.c          ****                     GFXwrite(&theGFX, 78);
 3329              		.loc 1 822 0
 3330 0544 4E21     		movs	r1, #78
 3331 0546 1648     		ldr	r0, .L221+80
 3332 0548 FFF7FEFF 		bl	GFXwrite
 3333 054c 38E0     		b	.L138
 3334              	.L222:
 3335 054e 00BF     		.align	2
 3336              	.L221:
 3337 0550 00000000 		.word	menuPosition
 3338 0554 70010000 		.word	.LC19
 3339 0558 00000000 		.word	octaveAction
 3340 055c 80010000 		.word	.LC20
 3341 0560 90010000 		.word	.LC21
 3342 0564 00000000 		.word	mainOLEDWaitingToSend
 3343 0568 00000000 		.word	encoderWatch
 3344 056c 50010000 		.word	.LC17
 3345 0570 A0010000 		.word	.LC22
 3346 0574 00000000 		.word	prevEncoderVal
 3347 0578 B0010000 		.word	.LC23
 3348 057c C0010000 		.word	.LC24
 3349 0580 D0010000 		.word	.LC25
 3350 0584 00000000 		.word	editingSliderRepString
 3351 0588 E0010000 		.word	.LC26
 3352 058c 00000000 		.word	traditionalPedalAdd
 3353 0590 F0010000 		.word	.LC27
 3354 0594 00020000 		.word	.LC28
 3355 0598 10020000 		.word	.LC29
 3356 059c 00000000 		.word	whichMidiSendSelected
 3357 05a0 00000000 		.word	theGFX
 3358 05a4 00000000 		.word	midiSendOn
 3359              	.L137:
 823:ui.c          ****                 }
 824:ui.c          ****                 else
 825:ui.c          ****                 {
 826:ui.c          ****                     GFXwrite(&theGFX, 79);
 3360              		.loc 1 826 0
 3361 05a8 4F21     		movs	r1, #79
 3362 05aa C248     		ldr	r0, .L223
 3363 05ac FFF7FEFF 		bl	GFXwrite
 827:ui.c          ****                     GFXwrite(&theGFX, 70);
 3364              		.loc 1 827 0
 3365 05b0 4621     		movs	r1, #70
 3366 05b2 C048     		ldr	r0, .L223
 3367 05b4 FFF7FEFF 		bl	GFXwrite
 828:ui.c          ****                     GFXwrite(&theGFX, 70);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 77


 3368              		.loc 1 828 0
 3369 05b8 4621     		movs	r1, #70
 3370 05ba BE48     		ldr	r0, .L223
 3371 05bc FFF7FEFF 		bl	GFXwrite
 3372              	.L138:
 829:ui.c          ****                 }
 830:ui.c          ****                 OLEDtextColor(1, 0);
 3373              		.loc 1 830 0
 3374 05c0 0021     		movs	r1, #0
 3375 05c2 0120     		movs	r0, #1
 3376 05c4 FFF7FEFF 		bl	OLEDtextColor
 831:ui.c          ****                 OLEDwriteString("SEND BAR   ", 11, 0, SecondLine);
 3377              		.loc 1 831 0
 3378 05c8 0123     		movs	r3, #1
 3379 05ca 0022     		movs	r2, #0
 3380 05cc 0B21     		movs	r1, #11
 3381 05ce BA48     		ldr	r0, .L223+4
 3382 05d0 FFF7FEFF 		bl	OLEDwriteString
 832:ui.c          ****                 midiselected= (whichMidiSendSelected==1);
 3383              		.loc 1 832 0
 3384 05d4 B94B     		ldr	r3, .L223+8
 3385 05d6 93F90030 		ldrsb	r3, [r3]
 3386 05da 012B     		cmp	r3, #1
 3387 05dc 0CBF     		ite	eq
 3388 05de 0123     		moveq	r3, #1
 3389 05e0 0023     		movne	r3, #0
 3390 05e2 DBB2     		uxtb	r3, r3
 3391 05e4 FB73     		strb	r3, [r7, #15]
 833:ui.c          ****                 GFXfillRect(&theGFX, 80, 16, 37, 16, midiselected);
 3392              		.loc 1 833 0
 3393 05e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3394 05e8 9BB2     		uxth	r3, r3
 3395 05ea 0193     		str	r3, [sp, #4]
 3396 05ec 1023     		movs	r3, #16
 3397 05ee 0093     		str	r3, [sp]
 3398 05f0 2523     		movs	r3, #37
 3399 05f2 1022     		movs	r2, #16
 3400 05f4 5021     		movs	r1, #80
 3401 05f6 AF48     		ldr	r0, .L223
 3402 05f8 FFF7FEFF 		bl	GFXfillRect
 834:ui.c          ****                 OLEDtextColor(!midiselected,midiselected);
 3403              		.loc 1 834 0
 3404 05fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3405 05fe 002B     		cmp	r3, #0
 3406 0600 0CBF     		ite	eq
 3407 0602 0123     		moveq	r3, #1
 3408 0604 0023     		movne	r3, #0
 3409 0606 DBB2     		uxtb	r3, r3
 3410 0608 9BB2     		uxth	r3, r3
 3411 060a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3412 060c 92B2     		uxth	r2, r2
 3413 060e 1146     		mov	r1, r2
 3414 0610 1846     		mov	r0, r3
 3415 0612 FFF7FEFF 		bl	OLEDtextColor
 835:ui.c          ****                 if (midiBarSendOn)
 3416              		.loc 1 835 0
 3417 0616 AA4B     		ldr	r3, .L223+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 78


 3418 0618 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3419 061a 002B     		cmp	r3, #0
 3420 061c 08D0     		beq	.L139
 836:ui.c          ****                 {
 837:ui.c          ****                     GFXwrite(&theGFX, 79);
 3421              		.loc 1 837 0
 3422 061e 4F21     		movs	r1, #79
 3423 0620 A448     		ldr	r0, .L223
 3424 0622 FFF7FEFF 		bl	GFXwrite
 838:ui.c          ****                     GFXwrite(&theGFX, 78);
 3425              		.loc 1 838 0
 3426 0626 4E21     		movs	r1, #78
 3427 0628 A248     		ldr	r0, .L223
 3428 062a FFF7FEFF 		bl	GFXwrite
 3429 062e 0BE0     		b	.L140
 3430              	.L139:
 839:ui.c          ****                 }
 840:ui.c          ****                 else
 841:ui.c          ****                 {
 842:ui.c          ****                     GFXwrite(&theGFX, 79);
 3431              		.loc 1 842 0
 3432 0630 4F21     		movs	r1, #79
 3433 0632 A048     		ldr	r0, .L223
 3434 0634 FFF7FEFF 		bl	GFXwrite
 843:ui.c          ****                     GFXwrite(&theGFX, 70);
 3435              		.loc 1 843 0
 3436 0638 4621     		movs	r1, #70
 3437 063a 9E48     		ldr	r0, .L223
 3438 063c FFF7FEFF 		bl	GFXwrite
 844:ui.c          ****                     GFXwrite(&theGFX, 70);
 3439              		.loc 1 844 0
 3440 0640 4621     		movs	r1, #70
 3441 0642 9C48     		ldr	r0, .L223
 3442 0644 FFF7FEFF 		bl	GFXwrite
 3443              	.L140:
 845:ui.c          ****                 }
 846:ui.c          ****                 OLEDtextColor(1, 0);
 3444              		.loc 1 846 0
 3445 0648 0021     		movs	r1, #0
 3446 064a 0120     		movs	r0, #1
 3447 064c FFF7FEFF 		bl	OLEDtextColor
 847:ui.c          ****                 OLEDwriteString("SEND DEBUG ", 11, 0, ThirdLine);
 3448              		.loc 1 847 0
 3449 0650 0223     		movs	r3, #2
 3450 0652 0022     		movs	r2, #0
 3451 0654 0B21     		movs	r1, #11
 3452 0656 9B48     		ldr	r0, .L223+16
 3453 0658 FFF7FEFF 		bl	OLEDwriteString
 848:ui.c          ****                 midiselected= (whichMidiSendSelected==2);
 3454              		.loc 1 848 0
 3455 065c 974B     		ldr	r3, .L223+8
 3456 065e 93F90030 		ldrsb	r3, [r3]
 3457 0662 022B     		cmp	r3, #2
 3458 0664 0CBF     		ite	eq
 3459 0666 0123     		moveq	r3, #1
 3460 0668 0023     		movne	r3, #0
 3461 066a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 79


 3462 066c FB73     		strb	r3, [r7, #15]
 849:ui.c          ****                 GFXfillRect(&theGFX, 80, 32, 37, 16, midiselected);
 3463              		.loc 1 849 0
 3464 066e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3465 0670 9BB2     		uxth	r3, r3
 3466 0672 0193     		str	r3, [sp, #4]
 3467 0674 1023     		movs	r3, #16
 3468 0676 0093     		str	r3, [sp]
 3469 0678 2523     		movs	r3, #37
 3470 067a 2022     		movs	r2, #32
 3471 067c 5021     		movs	r1, #80
 3472 067e 8D48     		ldr	r0, .L223
 3473 0680 FFF7FEFF 		bl	GFXfillRect
 850:ui.c          ****                 OLEDtextColor(!midiselected,midiselected);
 3474              		.loc 1 850 0
 3475 0684 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3476 0686 002B     		cmp	r3, #0
 3477 0688 0CBF     		ite	eq
 3478 068a 0123     		moveq	r3, #1
 3479 068c 0023     		movne	r3, #0
 3480 068e DBB2     		uxtb	r3, r3
 3481 0690 9BB2     		uxth	r3, r3
 3482 0692 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3483 0694 92B2     		uxth	r2, r2
 3484 0696 1146     		mov	r1, r2
 3485 0698 1846     		mov	r0, r3
 3486 069a FFF7FEFF 		bl	OLEDtextColor
 851:ui.c          ****                 if (midiDebugSendOn)
 3487              		.loc 1 851 0
 3488 069e 8A4B     		ldr	r3, .L223+20
 3489 06a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3490 06a2 002B     		cmp	r3, #0
 3491 06a4 08D0     		beq	.L141
 852:ui.c          ****                 {
 853:ui.c          ****                     GFXwrite(&theGFX, 79);
 3492              		.loc 1 853 0
 3493 06a6 4F21     		movs	r1, #79
 3494 06a8 8248     		ldr	r0, .L223
 3495 06aa FFF7FEFF 		bl	GFXwrite
 854:ui.c          ****                     GFXwrite(&theGFX, 78);
 3496              		.loc 1 854 0
 3497 06ae 4E21     		movs	r1, #78
 3498 06b0 8048     		ldr	r0, .L223
 3499 06b2 FFF7FEFF 		bl	GFXwrite
 3500 06b6 0BE0     		b	.L142
 3501              	.L141:
 855:ui.c          ****                 }
 856:ui.c          ****                 else
 857:ui.c          ****                 {
 858:ui.c          ****                     GFXwrite(&theGFX, 79);
 3502              		.loc 1 858 0
 3503 06b8 4F21     		movs	r1, #79
 3504 06ba 7E48     		ldr	r0, .L223
 3505 06bc FFF7FEFF 		bl	GFXwrite
 859:ui.c          ****                     GFXwrite(&theGFX, 70);
 3506              		.loc 1 859 0
 3507 06c0 4621     		movs	r1, #70
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 80


 3508 06c2 7C48     		ldr	r0, .L223
 3509 06c4 FFF7FEFF 		bl	GFXwrite
 860:ui.c          ****                     GFXwrite(&theGFX, 70);
 3510              		.loc 1 860 0
 3511 06c8 4621     		movs	r1, #70
 3512 06ca 7A48     		ldr	r0, .L223
 3513 06cc FFF7FEFF 		bl	GFXwrite
 3514              	.L142:
 861:ui.c          ****                 }
 862:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3515              		.loc 1 862 0
 3516 06d0 7E4B     		ldr	r3, .L223+24
 3517 06d2 0122     		movs	r2, #1
 3518 06d4 1A70     		strb	r2, [r3]
 3519              	.LBE13:
 725:ui.c          ****             {
 3520              		.loc 1 725 0
 3521 06d6 00F0DABC 		b	.L217
 3522              	.L136:
 863:ui.c          ****             }
 864:ui.c          ****             else if (menuPosition[2][1] == 6)
 3523              		.loc 1 864 0
 3524 06da 7D4B     		ldr	r3, .L223+28
 3525 06dc 93F90530 		ldrsb	r3, [r3, #5]
 3526 06e0 062B     		cmp	r3, #6
 3527 06e2 72D1     		bne	.L143
 3528              	.LBB14:
 865:ui.c          ****             {
 866:ui.c          ****                 //volume
 867:ui.c          ****                 menuPosition[0][0] = VolumeMenu;
 3529              		.loc 1 867 0
 3530 06e4 7A4B     		ldr	r3, .L223+28
 3531 06e6 0C22     		movs	r2, #12
 3532 06e8 1A70     		strb	r2, [r3]
 868:ui.c          ****                 Decoder_1_Start();
 3533              		.loc 1 868 0
 3534 06ea FFF7FEFF 		bl	Decoder_1_Start
 869:ui.c          ****                 whatToDraw = 0;
 3535              		.loc 1 869 0
 3536 06ee 0023     		movs	r3, #0
 3537 06f0 87F82730 		strb	r3, [r7, #39]
 870:ui.c          ****                 OLEDclear(128, 64);
 3538              		.loc 1 870 0
 3539 06f4 4021     		movs	r1, #64
 3540 06f6 8020     		movs	r0, #128
 3541 06f8 FFF7FEFF 		bl	OLEDclear
 871:ui.c          ****                 myGFX_setFont(2);
 3542              		.loc 1 871 0
 3543 06fc 0220     		movs	r0, #2
 3544 06fe FFF7FEFF 		bl	myGFX_setFont
 872:ui.c          ****                 OLEDtextColor(1, 0);
 3545              		.loc 1 872 0
 3546 0702 0021     		movs	r1, #0
 3547 0704 0120     		movs	r0, #1
 3548 0706 FFF7FEFF 		bl	OLEDtextColor
 873:ui.c          ****                 OLEDwriteString("VOLUME    ", 10, 0, FirstLine);
 3549              		.loc 1 873 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 81


 3550 070a 0023     		movs	r3, #0
 3551 070c 0022     		movs	r2, #0
 3552 070e 0A21     		movs	r1, #10
 3553 0710 7048     		ldr	r0, .L223+32
 3554 0712 FFF7FEFF 		bl	OLEDwriteString
 874:ui.c          ****                 OLEDtextColor(1, 0);
 3555              		.loc 1 874 0
 3556 0716 0021     		movs	r1, #0
 3557 0718 0120     		movs	r0, #1
 3558 071a FFF7FEFF 		bl	OLEDtextColor
 875:ui.c          ****                 myGFX_setFont(1);
 3559              		.loc 1 875 0
 3560 071e 0120     		movs	r0, #1
 3561 0720 FFF7FEFF 		bl	myGFX_setFont
 876:ui.c          ****                 GFXsetCursor(&theGFX, 20,53);
 3562              		.loc 1 876 0
 3563 0724 3522     		movs	r2, #53
 3564 0726 1421     		movs	r1, #20
 3565 0728 6248     		ldr	r0, .L223
 3566 072a FFF7FEFF 		bl	GFXsetCursor
 877:ui.c          ****                 GFXwrite(&theGFX, 32);
 3567              		.loc 1 877 0
 3568 072e 2021     		movs	r1, #32
 3569 0730 6048     		ldr	r0, .L223
 3570 0732 FFF7FEFF 		bl	GFXwrite
 878:ui.c          ****                 
 879:ui.c          ****                 int8_t volumeIntTemp = volumeInt;
 3571              		.loc 1 879 0
 3572 0736 684B     		ldr	r3, .L223+36
 3573 0738 1B78     		ldrb	r3, [r3]
 3574 073a BB73     		strb	r3, [r7, #14]
 880:ui.c          ****                 uint8_t currentChar = ((uint8_t)(volumeIntTemp / 100));  
 3575              		.loc 1 880 0
 3576 073c 97F90E30 		ldrsb	r3, [r7, #14]
 3577 0740 664A     		ldr	r2, .L223+40
 3578 0742 82FB0312 		smull	r1, r2, r2, r3
 3579 0746 5211     		asrs	r2, r2, #5
 3580 0748 DB17     		asrs	r3, r3, #31
 3581 074a D31A     		subs	r3, r2, r3
 3582 074c 5BB2     		sxtb	r3, r3
 3583 074e 7B73     		strb	r3, [r7, #13]
 881:ui.c          ****                 volumeIntTemp -= currentChar * 100;
 3584              		.loc 1 881 0
 3585 0750 7B7B     		ldrb	r3, [r7, #13]
 3586 0752 1A46     		mov	r2, r3
 3587 0754 9200     		lsls	r2, r2, #2
 3588 0756 1A44     		add	r2, r2, r3
 3589 0758 D200     		lsls	r2, r2, #3
 3590 075a D31A     		subs	r3, r2, r3
 3591 075c 9B00     		lsls	r3, r3, #2
 3592 075e DAB2     		uxtb	r2, r3
 3593 0760 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3594 0762 1344     		add	r3, r3, r2
 3595 0764 DBB2     		uxtb	r3, r3
 3596 0766 BB73     		strb	r3, [r7, #14]
 882:ui.c          ****                 GFXwrite(&theGFX, currentChar + 48);
 3597              		.loc 1 882 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 82


 3598 0768 7B7B     		ldrb	r3, [r7, #13]
 3599 076a 3033     		adds	r3, r3, #48
 3600 076c DBB2     		uxtb	r3, r3
 3601 076e 1946     		mov	r1, r3
 3602 0770 5048     		ldr	r0, .L223
 3603 0772 FFF7FEFF 		bl	GFXwrite
 883:ui.c          ****                 currentChar = ((uint8_t)volumeIntTemp / 10);    
 3604              		.loc 1 883 0
 3605 0776 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3606 0778 594A     		ldr	r2, .L223+44
 3607 077a A2FB0323 		umull	r2, r3, r2, r3
 3608 077e DB08     		lsrs	r3, r3, #3
 3609 0780 7B73     		strb	r3, [r7, #13]
 884:ui.c          ****                 GFXwrite(&theGFX, currentChar + 48);
 3610              		.loc 1 884 0
 3611 0782 7B7B     		ldrb	r3, [r7, #13]
 3612 0784 3033     		adds	r3, r3, #48
 3613 0786 DBB2     		uxtb	r3, r3
 3614 0788 1946     		mov	r1, r3
 3615 078a 4A48     		ldr	r0, .L223
 3616 078c FFF7FEFF 		bl	GFXwrite
 885:ui.c          ****                 volumeIntTemp -= currentChar * 10;
 3617              		.loc 1 885 0
 3618 0790 7B7B     		ldrb	r3, [r7, #13]
 3619 0792 1A46     		mov	r2, r3
 3620 0794 5201     		lsls	r2, r2, #5
 3621 0796 D21A     		subs	r2, r2, r3
 3622 0798 9200     		lsls	r2, r2, #2
 3623 079a D31A     		subs	r3, r2, r3
 3624 079c 5B00     		lsls	r3, r3, #1
 3625 079e DAB2     		uxtb	r2, r3
 3626 07a0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3627 07a2 1344     		add	r3, r3, r2
 3628 07a4 DBB2     		uxtb	r3, r3
 3629 07a6 BB73     		strb	r3, [r7, #14]
 886:ui.c          ****                 currentChar = ((uint8_t)volumeIntTemp);    
 3630              		.loc 1 886 0
 3631 07a8 BB7B     		ldrb	r3, [r7, #14]
 3632 07aa 7B73     		strb	r3, [r7, #13]
 887:ui.c          ****                 GFXwrite(&theGFX, currentChar + 48);
 3633              		.loc 1 887 0
 3634 07ac 7B7B     		ldrb	r3, [r7, #13]
 3635 07ae 3033     		adds	r3, r3, #48
 3636 07b0 DBB2     		uxtb	r3, r3
 3637 07b2 1946     		mov	r1, r3
 3638 07b4 3F48     		ldr	r0, .L223
 3639 07b6 FFF7FEFF 		bl	GFXwrite
 888:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3640              		.loc 1 888 0
 3641 07ba 444B     		ldr	r3, .L223+24
 3642 07bc 0122     		movs	r2, #1
 3643 07be 1A70     		strb	r2, [r3]
 889:ui.c          ****                 encoderWatch = 1;
 3644              		.loc 1 889 0
 3645 07c0 484B     		ldr	r3, .L223+48
 3646 07c2 0122     		movs	r2, #1
 3647 07c4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 83


 3648              	.LBE14:
 725:ui.c          ****             {
 3649              		.loc 1 725 0
 3650 07c6 00F062BC 		b	.L217
 3651              	.L143:
 890:ui.c          ****             }
 891:ui.c          ****             else if (menuPosition[2][1] == 7)
 3652              		.loc 1 891 0
 3653 07ca 414B     		ldr	r3, .L223+28
 3654 07cc 93F90530 		ldrsb	r3, [r3, #5]
 3655 07d0 072B     		cmp	r3, #7
 3656 07d2 40F05C84 		bne	.L217
 892:ui.c          ****             {
 893:ui.c          ****                 //volume
 894:ui.c          ****                 menuPosition[0][0] = FirmwareUpdateMenu;
 3657              		.loc 1 894 0
 3658 07d6 3E4B     		ldr	r3, .L223+28
 3659 07d8 0D22     		movs	r2, #13
 3660 07da 1A70     		strb	r2, [r3]
 895:ui.c          ****                 whatToDraw = 0;
 3661              		.loc 1 895 0
 3662 07dc 0023     		movs	r3, #0
 3663 07de 87F82730 		strb	r3, [r7, #39]
 896:ui.c          ****                 OLEDclear(128, 64);
 3664              		.loc 1 896 0
 3665 07e2 4021     		movs	r1, #64
 3666 07e4 8020     		movs	r0, #128
 3667 07e6 FFF7FEFF 		bl	OLEDclear
 897:ui.c          ****                 myGFX_setFont(2);
 3668              		.loc 1 897 0
 3669 07ea 0220     		movs	r0, #2
 3670 07ec FFF7FEFF 		bl	myGFX_setFont
 898:ui.c          ****                 OLEDtextColor(whichFirmwareUpdateSelected, !whichFirmwareUpdateSelected);
 3671              		.loc 1 898 0
 3672 07f0 3D4B     		ldr	r3, .L223+52
 3673 07f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3674 07f4 9AB2     		uxth	r2, r3
 3675 07f6 3C4B     		ldr	r3, .L223+52
 3676 07f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3677 07fa 002B     		cmp	r3, #0
 3678 07fc 0CBF     		ite	eq
 3679 07fe 0123     		moveq	r3, #1
 3680 0800 0023     		movne	r3, #0
 3681 0802 DBB2     		uxtb	r3, r3
 3682 0804 9BB2     		uxth	r3, r3
 3683 0806 1946     		mov	r1, r3
 3684 0808 1046     		mov	r0, r2
 3685 080a FFF7FEFF 		bl	OLEDtextColor
 899:ui.c          ****                 OLEDwriteString("UPDATE BRAIN", 12, 0, FirstLine);
 3686              		.loc 1 899 0
 3687 080e 0023     		movs	r3, #0
 3688 0810 0022     		movs	r2, #0
 3689 0812 0C21     		movs	r1, #12
 3690 0814 3548     		ldr	r0, .L223+56
 3691 0816 FFF7FEFF 		bl	OLEDwriteString
 900:ui.c          ****                // OLEDtextColor(!whichFirmwareUpdateSelected, whichFirmwareUpdateSelected);
 901:ui.c          ****                 //OLEDwriteString("UPDATE PLUCK", 12, 0, SecondLine);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 84


 902:ui.c          ****                 OLEDtextColor(1, 0);
 3692              		.loc 1 902 0
 3693 081a 0021     		movs	r1, #0
 3694 081c 0120     		movs	r0, #1
 3695 081e FFF7FEFF 		bl	OLEDtextColor
 903:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3696              		.loc 1 903 0
 3697 0822 2A4B     		ldr	r3, .L223+24
 3698 0824 0122     		movs	r2, #1
 3699 0826 1A70     		strb	r2, [r3]
 725:ui.c          ****             {
 3700              		.loc 1 725 0
 3701 0828 00F031BC 		b	.L217
 3702              	.L129:
 904:ui.c          ****             }
 905:ui.c          ****         }
 906:ui.c          ****         else if (action == Left) 
 3703              		.loc 1 906 0
 3704 082c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3705 082e 002B     		cmp	r3, #0
 3706 0830 40F02E84 		bne	.L111
 907:ui.c          ****         {
 908:ui.c          ****             //go back to main menu
 909:ui.c          ****             menuPosition[0][0] = MainMenu;
 3707              		.loc 1 909 0
 3708 0834 264B     		ldr	r3, .L223+28
 3709 0836 0022     		movs	r2, #0
 3710 0838 1A70     		strb	r2, [r3]
 910:ui.c          ****             whatToDraw = 1;
 3711              		.loc 1 910 0
 3712 083a 0123     		movs	r3, #1
 3713 083c 87F82730 		strb	r3, [r7, #39]
 3714 0840 00F026BC 		b	.L111
 3715              	.L122:
 911:ui.c          ****         }
 912:ui.c          ****     }
 913:ui.c          ****     
 914:ui.c          ****     else if (menuPosition[0][0] == CalibrateLeversMenu) //we are in lever calibration
 3716              		.loc 1 914 0
 3717 0844 224B     		ldr	r3, .L223+28
 3718 0846 93F90030 		ldrsb	r3, [r3]
 3719 084a 042B     		cmp	r3, #4
 3720 084c 58D1     		bne	.L144
 915:ui.c          ****     {
 916:ui.c          ****         if ((action == Right) || (action == Enter))
 3721              		.loc 1 916 0
 3722 084e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3723 0850 012B     		cmp	r3, #1
 3724 0852 03D0     		beq	.L145
 3725              		.loc 1 916 0 is_stmt 0 discriminator 1
 3726 0854 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3727 0856 042B     		cmp	r3, #4
 3728 0858 40F01A84 		bne	.L111
 3729              	.L145:
 917:ui.c          ****         {
 918:ui.c          ****             OLEDclear(128, 64);
 3730              		.loc 1 918 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 85


 3731 085c 4021     		movs	r1, #64
 3732 085e 8020     		movs	r0, #128
 3733 0860 FFF7FEFF 		bl	OLEDclear
 919:ui.c          ****             myGFX_setFont(2);
 3734              		.loc 1 919 0
 3735 0864 0220     		movs	r0, #2
 3736 0866 FFF7FEFF 		bl	myGFX_setFont
 920:ui.c          ****             OLEDtextColor(0, 1);
 3737              		.loc 1 920 0
 3738 086a 0121     		movs	r1, #1
 3739 086c 0020     		movs	r0, #0
 3740 086e FFF7FEFF 		bl	OLEDtextColor
 921:ui.c          ****             OLEDwriteString("NOW PUT ALL", 11, 1, FirstLine);
 3741              		.loc 1 921 0
 3742 0872 0023     		movs	r3, #0
 3743 0874 0122     		movs	r2, #1
 3744 0876 0B21     		movs	r1, #11
 3745 0878 1D48     		ldr	r0, .L223+60
 3746 087a FFF7FEFF 		bl	OLEDwriteString
 922:ui.c          ****             OLEDwriteString("PEDALS/LEVERS  ", 15, 1, SecondLine);
 3747              		.loc 1 922 0
 3748 087e 0123     		movs	r3, #1
 3749 0880 0122     		movs	r2, #1
 3750 0882 0F21     		movs	r1, #15
 3751 0884 1B48     		ldr	r0, .L223+64
 3752 0886 FFF7FEFF 		bl	OLEDwriteString
 923:ui.c          ****             OLEDwriteString("IN RESTING STATE", 16, 1, ThirdLine);
 3753              		.loc 1 923 0
 3754 088a 0223     		movs	r3, #2
 3755 088c 0122     		movs	r2, #1
 3756 088e 1021     		movs	r1, #16
 3757 0890 1948     		ldr	r0, .L223+68
 3758 0892 FFF7FEFF 		bl	OLEDwriteString
 924:ui.c          ****             OLEDwriteString("AND PRESS EDIT", 14, 1, FourthLine);
 3759              		.loc 1 924 0
 3760 0896 0323     		movs	r3, #3
 3761 0898 0122     		movs	r2, #1
 3762 089a 0E21     		movs	r1, #14
 3763 089c 1748     		ldr	r0, .L223+72
 3764 089e FFF7FEFF 		bl	OLEDwriteString
 925:ui.c          ****             mainOLEDWaitingToSend = 1;
 3765              		.loc 1 925 0
 3766 08a2 0A4B     		ldr	r3, .L223+24
 3767 08a4 0122     		movs	r2, #1
 3768 08a6 1A70     		strb	r2, [r3]
 926:ui.c          ****             OLEDtextColor(1, 0);
 3769              		.loc 1 926 0
 3770 08a8 0021     		movs	r1, #0
 3771 08aa 0120     		movs	r0, #1
 3772 08ac FFF7FEFF 		bl	OLEDtextColor
 3773 08b0 EEE3     		b	.L111
 3774              	.L224:
 3775 08b2 00BF     		.align	2
 3776              	.L223:
 3777 08b4 00000000 		.word	theGFX
 3778 08b8 1C020000 		.word	.LC30
 3779 08bc 00000000 		.word	whichMidiSendSelected
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 86


 3780 08c0 00000000 		.word	midiBarSendOn
 3781 08c4 28020000 		.word	.LC31
 3782 08c8 00000000 		.word	midiDebugSendOn
 3783 08cc 00000000 		.word	mainOLEDWaitingToSend
 3784 08d0 00000000 		.word	menuPosition
 3785 08d4 34020000 		.word	.LC32
 3786 08d8 00000000 		.word	volumeInt
 3787 08dc 1F85EB51 		.word	1374389535
 3788 08e0 CDCCCCCC 		.word	-858993459
 3789 08e4 00000000 		.word	encoderWatch
 3790 08e8 00000000 		.word	whichFirmwareUpdateSelected
 3791 08ec 40020000 		.word	.LC33
 3792 08f0 50020000 		.word	.LC34
 3793 08f4 5C020000 		.word	.LC35
 3794 08f8 6C020000 		.word	.LC36
 3795 08fc 80020000 		.word	.LC37
 3796              	.L144:
 927:ui.c          ****         }
 928:ui.c          ****     }
 929:ui.c          ****     else if (menuPosition[0][0] == CalibrateFretsMenu) //we are in fret calibration
 3797              		.loc 1 929 0
 3798 0900 A44B     		ldr	r3, .L225
 3799 0902 93F90030 		ldrsb	r3, [r3]
 3800 0906 052B     		cmp	r3, #5
 3801 0908 40D1     		bne	.L147
 930:ui.c          ****     {
 931:ui.c          ****         //when user presses -> button, then store the current fret and increment which fret to stor
 932:ui.c          ****         if ((action == Right) || (action == Enter))
 3802              		.loc 1 932 0
 3803 090a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3804 090c 012B     		cmp	r3, #1
 3805 090e 03D0     		beq	.L148
 3806              		.loc 1 932 0 is_stmt 0 discriminator 1
 3807 0910 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3808 0912 042B     		cmp	r3, #4
 3809 0914 40F0BC83 		bne	.L111
 3810              	.L148:
 933:ui.c          ****         {
 934:ui.c          ****             fretMeasurements[0][fretToCalibrate] = bar[0];
 3811              		.loc 1 934 0 is_stmt 1
 3812 0918 9F4B     		ldr	r3, .L225+4
 3813 091a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3814 091c 1A46     		mov	r2, r3
 3815 091e 9F4B     		ldr	r3, .L225+8
 3816 0920 1B88     		ldrh	r3, [r3]	@ movhi
 3817 0922 99B2     		uxth	r1, r3
 3818 0924 9E4B     		ldr	r3, .L225+12
 3819 0926 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 935:ui.c          ****             sendMIDIControlChange(64, bar[0]/512, 1);
 3820              		.loc 1 935 0
 3821 092a 9C4B     		ldr	r3, .L225+8
 3822 092c 1B88     		ldrh	r3, [r3]	@ movhi
 3823 092e 9BB2     		uxth	r3, r3
 3824 0930 5B0A     		lsrs	r3, r3, #9
 3825 0932 9BB2     		uxth	r3, r3
 3826 0934 0122     		movs	r2, #1
 3827 0936 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 87


 3828 0938 4020     		movs	r0, #64
 3829 093a FFF7FEFF 		bl	sendMIDIControlChange
 936:ui.c          ****             fretMeasurements[1][fretToCalibrate] = bar[1];
 3830              		.loc 1 936 0
 3831 093e 964B     		ldr	r3, .L225+4
 3832 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3833 0942 1846     		mov	r0, r3
 3834 0944 954B     		ldr	r3, .L225+8
 3835 0946 5B88     		ldrh	r3, [r3, #2]	@ movhi
 3836 0948 99B2     		uxth	r1, r3
 3837 094a 954A     		ldr	r2, .L225+12
 3838 094c 00F10C03 		add	r3, r0, #12
 3839 0950 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 937:ui.c          ****             fretToCalibrate++;
 3840              		.loc 1 937 0
 3841 0954 904B     		ldr	r3, .L225+4
 3842 0956 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3843 0958 0133     		adds	r3, r3, #1
 3844 095a DAB2     		uxtb	r2, r3
 3845 095c 8E4B     		ldr	r3, .L225+4
 3846 095e 1A70     		strb	r2, [r3]
 938:ui.c          ****             if (fretToCalibrate == NUM_FRET_MEASUREMENTS)
 3847              		.loc 1 938 0
 3848 0960 8D4B     		ldr	r3, .L225+4
 3849 0962 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3850 0964 0C2B     		cmp	r3, #12
 3851 0966 02D1     		bne	.L150
 939:ui.c          ****             {
 940:ui.c          ****                 exitFretCalibrationMode();
 3852              		.loc 1 940 0
 3853 0968 FFF7FEFF 		bl	exitFretCalibrationMode
 3854 096c 90E3     		b	.L111
 3855              	.L150:
 941:ui.c          ****             }
 942:ui.c          ****             else
 943:ui.c          ****             {
 944:ui.c          ****                OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 3856              		.loc 1 944 0
 3857 096e 8A4B     		ldr	r3, .L225+4
 3858 0970 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3859 0972 1A46     		mov	r2, r3
 3860 0974 8B4B     		ldr	r3, .L225+16
 3861 0976 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3862 0978 1846     		mov	r0, r3
 3863 097a 0223     		movs	r3, #2
 3864 097c 2822     		movs	r2, #40
 3865 097e 0221     		movs	r1, #2
 3866 0980 FFF7FEFF 		bl	OLEDwriteInt
 945:ui.c          ****                mainOLEDWaitingToSend = 1;
 3867              		.loc 1 945 0
 3868 0984 884B     		ldr	r3, .L225+20
 3869 0986 0122     		movs	r2, #1
 3870 0988 1A70     		strb	r2, [r3]
 3871 098a 81E3     		b	.L111
 3872              	.L147:
 946:ui.c          ****             }
 947:ui.c          ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 88


 948:ui.c          ****     }
 949:ui.c          ****     else if (menuPosition[0][0] == TransposeMenu) //we are in transpose
 3873              		.loc 1 949 0
 3874 098c 814B     		ldr	r3, .L225
 3875 098e 93F90030 		ldrsb	r3, [r3]
 3876 0992 062B     		cmp	r3, #6
 3877 0994 20D1     		bne	.L151
 950:ui.c          ****     {
 951:ui.c          ****         
 952:ui.c          ****         if (action == Right)
 3878              		.loc 1 952 0
 3879 0996 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3880 0998 012B     		cmp	r3, #1
 3881 099a 0CD1     		bne	.L152
 953:ui.c          ****         {
 954:ui.c          ****             semitonesOrCents = (semitonesOrCents+1)&1;
 3882              		.loc 1 954 0
 3883 099c 834B     		ldr	r3, .L225+24
 3884 099e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3885 09a0 0133     		adds	r3, r3, #1
 3886 09a2 DBB2     		uxtb	r3, r3
 3887 09a4 03F00103 		and	r3, r3, #1
 3888 09a8 DAB2     		uxtb	r2, r3
 3889 09aa 804B     		ldr	r3, .L225+24
 3890 09ac 1A70     		strb	r2, [r3]
 955:ui.c          ****             prevEncoderVal = 127;
 3891              		.loc 1 955 0
 3892 09ae 804B     		ldr	r3, .L225+28
 3893 09b0 7F22     		movs	r2, #127
 3894 09b2 1A70     		strb	r2, [r3]
 3895 09b4 6CE3     		b	.L111
 3896              	.L152:
 956:ui.c          ****         }
 957:ui.c          ****         else if (action == Left)
 3897              		.loc 1 957 0
 3898 09b6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3899 09b8 002B     		cmp	r3, #0
 3900 09ba 40F06983 		bne	.L111
 958:ui.c          ****         {
 959:ui.c          ****             semitonesOrCents = (semitonesOrCents-1)&1;
 3901              		.loc 1 959 0
 3902 09be 7B4B     		ldr	r3, .L225+24
 3903 09c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3904 09c2 013B     		subs	r3, r3, #1
 3905 09c4 DBB2     		uxtb	r3, r3
 3906 09c6 03F00103 		and	r3, r3, #1
 3907 09ca DAB2     		uxtb	r2, r3
 3908 09cc 774B     		ldr	r3, .L225+24
 3909 09ce 1A70     		strb	r2, [r3]
 960:ui.c          ****             prevEncoderVal = 127;
 3910              		.loc 1 960 0
 3911 09d0 774B     		ldr	r3, .L225+28
 3912 09d2 7F22     		movs	r2, #127
 3913 09d4 1A70     		strb	r2, [r3]
 3914 09d6 5BE3     		b	.L111
 3915              	.L151:
 961:ui.c          ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 89


 962:ui.c          ****     }
 963:ui.c          ****     else if (menuPosition[0][0] == OctaveActionMenu) //we are in octave action
 3916              		.loc 1 963 0
 3917 09d8 6E4B     		ldr	r3, .L225
 3918 09da 93F90030 		ldrsb	r3, [r3]
 3919 09de 072B     		cmp	r3, #7
 3920 09e0 68D1     		bne	.L154
 964:ui.c          ****     {
 965:ui.c          ****         whatToDraw = 0;
 3921              		.loc 1 965 0
 3922 09e2 0023     		movs	r3, #0
 3923 09e4 87F82730 		strb	r3, [r7, #39]
 966:ui.c          ****         if (action == Up)
 3924              		.loc 1 966 0
 3925 09e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3926 09ea 032B     		cmp	r3, #3
 3927 09ec 09D1     		bne	.L155
 967:ui.c          ****         {
 968:ui.c          ****             octaveAction = (octaveAction+1)&1;
 3928              		.loc 1 968 0
 3929 09ee 714B     		ldr	r3, .L225+32
 3930 09f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3931 09f2 0133     		adds	r3, r3, #1
 3932 09f4 DBB2     		uxtb	r3, r3
 3933 09f6 03F00103 		and	r3, r3, #1
 3934 09fa DAB2     		uxtb	r2, r3
 3935 09fc 6D4B     		ldr	r3, .L225+32
 3936 09fe 1A70     		strb	r2, [r3]
 3937 0a00 15E0     		b	.L156
 3938              	.L155:
 969:ui.c          ****         }
 970:ui.c          ****         else if (action == Down)
 3939              		.loc 1 970 0
 3940 0a02 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3941 0a04 022B     		cmp	r3, #2
 3942 0a06 09D1     		bne	.L157
 971:ui.c          ****         {
 972:ui.c          ****             octaveAction = (octaveAction-1)&1;
 3943              		.loc 1 972 0
 3944 0a08 6A4B     		ldr	r3, .L225+32
 3945 0a0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3946 0a0c 013B     		subs	r3, r3, #1
 3947 0a0e DBB2     		uxtb	r3, r3
 3948 0a10 03F00103 		and	r3, r3, #1
 3949 0a14 DAB2     		uxtb	r2, r3
 3950 0a16 674B     		ldr	r3, .L225+32
 3951 0a18 1A70     		strb	r2, [r3]
 3952 0a1a 08E0     		b	.L156
 3953              	.L157:
 973:ui.c          ****         }
 974:ui.c          ****         
 975:ui.c          ****          else if (action == Left) 
 3954              		.loc 1 975 0
 3955 0a1c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3956 0a1e 002B     		cmp	r3, #0
 3957 0a20 05D1     		bne	.L156
 976:ui.c          ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 90


 977:ui.c          ****             //go back to main menu
 978:ui.c          ****             menuPosition[0][0] = SettingsMenu;
 3958              		.loc 1 978 0
 3959 0a22 5C4B     		ldr	r3, .L225
 3960 0a24 0322     		movs	r2, #3
 3961 0a26 1A70     		strb	r2, [r3]
 979:ui.c          ****             whatToDraw = 1;
 3962              		.loc 1 979 0
 3963 0a28 0123     		movs	r3, #1
 3964 0a2a 87F82730 		strb	r3, [r7, #39]
 3965              	.L156:
 980:ui.c          ****         }
 981:ui.c          ****                 OLEDclear(128, 64);
 3966              		.loc 1 981 0
 3967 0a2e 4021     		movs	r1, #64
 3968 0a30 8020     		movs	r0, #128
 3969 0a32 FFF7FEFF 		bl	OLEDclear
 982:ui.c          ****                 myGFX_setFont(2);
 3970              		.loc 1 982 0
 3971 0a36 0220     		movs	r0, #2
 3972 0a38 FFF7FEFF 		bl	myGFX_setFont
 983:ui.c          ****                 OLEDtextColor(1, 0);
 3973              		.loc 1 983 0
 3974 0a3c 0021     		movs	r1, #0
 3975 0a3e 0120     		movs	r0, #1
 3976 0a40 FFF7FEFF 		bl	OLEDtextColor
 984:ui.c          ****                 OLEDwriteString("OCTAVE ACTION  ", 15, 0, FirstLine);
 3977              		.loc 1 984 0
 3978 0a44 0023     		movs	r3, #0
 3979 0a46 0022     		movs	r2, #0
 3980 0a48 0F21     		movs	r1, #15
 3981 0a4a 5B48     		ldr	r0, .L225+36
 3982 0a4c FFF7FEFF 		bl	OLEDwriteString
 985:ui.c          ****                
 986:ui.c          ****                 OLEDtextColor(octaveAction, !octaveAction);
 3983              		.loc 1 986 0
 3984 0a50 584B     		ldr	r3, .L225+32
 3985 0a52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3986 0a54 9AB2     		uxth	r2, r3
 3987 0a56 574B     		ldr	r3, .L225+32
 3988 0a58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3989 0a5a 002B     		cmp	r3, #0
 3990 0a5c 0CBF     		ite	eq
 3991 0a5e 0123     		moveq	r3, #1
 3992 0a60 0023     		movne	r3, #0
 3993 0a62 DBB2     		uxtb	r3, r3
 3994 0a64 9BB2     		uxth	r3, r3
 3995 0a66 1946     		mov	r1, r3
 3996 0a68 1046     		mov	r0, r2
 3997 0a6a FFF7FEFF 		bl	OLEDtextColor
 987:ui.c          ****                 OLEDwriteString("ON NEXT NOTE   ", 15, 0, SecondLine);
 3998              		.loc 1 987 0
 3999 0a6e 0123     		movs	r3, #1
 4000 0a70 0022     		movs	r2, #0
 4001 0a72 0F21     		movs	r1, #15
 4002 0a74 5148     		ldr	r0, .L225+40
 4003 0a76 FFF7FEFF 		bl	OLEDwriteString
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 91


 988:ui.c          ****                 OLEDtextColor(!octaveAction, octaveAction);
 4004              		.loc 1 988 0
 4005 0a7a 4E4B     		ldr	r3, .L225+32
 4006 0a7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4007 0a7e 002B     		cmp	r3, #0
 4008 0a80 0CBF     		ite	eq
 4009 0a82 0123     		moveq	r3, #1
 4010 0a84 0023     		movne	r3, #0
 4011 0a86 DBB2     		uxtb	r3, r3
 4012 0a88 9AB2     		uxth	r2, r3
 4013 0a8a 4A4B     		ldr	r3, .L225+32
 4014 0a8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4015 0a8e 9BB2     		uxth	r3, r3
 4016 0a90 1946     		mov	r1, r3
 4017 0a92 1046     		mov	r0, r2
 4018 0a94 FFF7FEFF 		bl	OLEDtextColor
 989:ui.c          ****                 OLEDwriteString("IMMEDIATE      ", 15, 0, ThirdLine);
 4019              		.loc 1 989 0
 4020 0a98 0223     		movs	r3, #2
 4021 0a9a 0022     		movs	r2, #0
 4022 0a9c 0F21     		movs	r1, #15
 4023 0a9e 4848     		ldr	r0, .L225+44
 4024 0aa0 FFF7FEFF 		bl	OLEDwriteString
 990:ui.c          ****                 OLEDtextColor(1, 0);
 4025              		.loc 1 990 0
 4026 0aa4 0021     		movs	r1, #0
 4027 0aa6 0120     		movs	r0, #1
 4028 0aa8 FFF7FEFF 		bl	OLEDtextColor
 991:ui.c          ****                 mainOLEDWaitingToSend = 1;
 4029              		.loc 1 991 0
 4030 0aac 3E4B     		ldr	r3, .L225+20
 4031 0aae 0122     		movs	r2, #1
 4032 0ab0 1A70     		strb	r2, [r3]
 4033 0ab2 EDE2     		b	.L111
 4034              	.L154:
 992:ui.c          ****     }
 993:ui.c          **** 
 994:ui.c          ****     else if (menuPosition[0][0] == SliderRepMenu) //we are in sliderRep
 4035              		.loc 1 994 0
 4036 0ab4 374B     		ldr	r3, .L225
 4037 0ab6 93F90030 		ldrsb	r3, [r3]
 4038 0aba 092B     		cmp	r3, #9
 4039 0abc 20D1     		bne	.L158
 995:ui.c          ****     {
 996:ui.c          ****        
 997:ui.c          ****         if (action == Right)
 4040              		.loc 1 997 0
 4041 0abe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4042 0ac0 012B     		cmp	r3, #1
 4043 0ac2 0CD1     		bne	.L159
 998:ui.c          ****         {
 999:ui.c          ****             editingSliderRepString = (editingSliderRepString+1)&1;
 4044              		.loc 1 999 0
 4045 0ac4 3F4B     		ldr	r3, .L225+48
 4046 0ac6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4047 0ac8 0133     		adds	r3, r3, #1
 4048 0aca DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 92


 4049 0acc 03F00103 		and	r3, r3, #1
 4050 0ad0 DAB2     		uxtb	r2, r3
 4051 0ad2 3C4B     		ldr	r3, .L225+48
 4052 0ad4 1A70     		strb	r2, [r3]
1000:ui.c          ****             prevEncoderVal = 127;
 4053              		.loc 1 1000 0
 4054 0ad6 364B     		ldr	r3, .L225+28
 4055 0ad8 7F22     		movs	r2, #127
 4056 0ada 1A70     		strb	r2, [r3]
 4057 0adc D8E2     		b	.L111
 4058              	.L159:
1001:ui.c          ****         }
1002:ui.c          ****         else if (action == Left)
 4059              		.loc 1 1002 0
 4060 0ade FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4061 0ae0 002B     		cmp	r3, #0
 4062 0ae2 40F0D582 		bne	.L111
1003:ui.c          ****         {
1004:ui.c          ****             editingSliderRepString = (editingSliderRepString-1)&1;
 4063              		.loc 1 1004 0
 4064 0ae6 374B     		ldr	r3, .L225+48
 4065 0ae8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4066 0aea 013B     		subs	r3, r3, #1
 4067 0aec DBB2     		uxtb	r3, r3
 4068 0aee 03F00103 		and	r3, r3, #1
 4069 0af2 DAB2     		uxtb	r2, r3
 4070 0af4 334B     		ldr	r3, .L225+48
 4071 0af6 1A70     		strb	r2, [r3]
1005:ui.c          ****             prevEncoderVal = 127;
 4072              		.loc 1 1005 0
 4073 0af8 2D4B     		ldr	r3, .L225+28
 4074 0afa 7F22     		movs	r2, #127
 4075 0afc 1A70     		strb	r2, [r3]
 4076 0afe C7E2     		b	.L111
 4077              	.L158:
1006:ui.c          ****         }
1007:ui.c          ****     }
1008:ui.c          ****     else if (menuPosition[0][0] == TraditionalPedalSumMenu) //we are in pedal sum menu
 4078              		.loc 1 1008 0
 4079 0b00 244B     		ldr	r3, .L225
 4080 0b02 93F90030 		ldrsb	r3, [r3]
 4081 0b06 0A2B     		cmp	r3, #10
 4082 0b08 40F0B380 		bne	.L161
1009:ui.c          ****     {
1010:ui.c          ****        
1011:ui.c          ****         if (action == Up)
 4083              		.loc 1 1011 0
 4084 0b0c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4085 0b0e 032B     		cmp	r3, #3
 4086 0b10 60D1     		bne	.L162
1012:ui.c          ****         {
1013:ui.c          ****             traditionalPedalAdd = (traditionalPedalAdd+1)&1;
 4087              		.loc 1 1013 0
 4088 0b12 2D4B     		ldr	r3, .L225+52
 4089 0b14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4090 0b16 0133     		adds	r3, r3, #1
 4091 0b18 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 93


 4092 0b1a 03F00103 		and	r3, r3, #1
 4093 0b1e DAB2     		uxtb	r2, r3
 4094 0b20 294B     		ldr	r3, .L225+52
 4095 0b22 1A70     		strb	r2, [r3]
1014:ui.c          ****             OLEDclearLine(SecondLine);
 4096              		.loc 1 1014 0
 4097 0b24 0120     		movs	r0, #1
 4098 0b26 FFF7FEFF 		bl	OLEDclearLine
1015:ui.c          ****             OLEDclearLine(ThirdLine);
 4099              		.loc 1 1015 0
 4100 0b2a 0220     		movs	r0, #2
 4101 0b2c FFF7FEFF 		bl	OLEDclearLine
1016:ui.c          ****             OLEDtextColor(traditionalPedalAdd, !traditionalPedalAdd);
 4102              		.loc 1 1016 0
 4103 0b30 254B     		ldr	r3, .L225+52
 4104 0b32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4105 0b34 9AB2     		uxth	r2, r3
 4106 0b36 244B     		ldr	r3, .L225+52
 4107 0b38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4108 0b3a 002B     		cmp	r3, #0
 4109 0b3c 0CBF     		ite	eq
 4110 0b3e 0123     		moveq	r3, #1
 4111 0b40 0023     		movne	r3, #0
 4112 0b42 DBB2     		uxtb	r3, r3
 4113 0b44 9BB2     		uxth	r3, r3
 4114 0b46 1946     		mov	r1, r3
 4115 0b48 1046     		mov	r0, r2
 4116 0b4a FFF7FEFF 		bl	OLEDtextColor
1017:ui.c          ****             OLEDwriteString("SIMPLE ADD     ", 15, 0, SecondLine);
 4117              		.loc 1 1017 0
 4118 0b4e 0123     		movs	r3, #1
 4119 0b50 0022     		movs	r2, #0
 4120 0b52 0F21     		movs	r1, #15
 4121 0b54 1D48     		ldr	r0, .L225+56
 4122 0b56 FFF7FEFF 		bl	OLEDwriteString
1018:ui.c          ****             OLEDtextColor(!traditionalPedalAdd, traditionalPedalAdd);
 4123              		.loc 1 1018 0
 4124 0b5a 1B4B     		ldr	r3, .L225+52
 4125 0b5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4126 0b5e 002B     		cmp	r3, #0
 4127 0b60 0CBF     		ite	eq
 4128 0b62 0123     		moveq	r3, #1
 4129 0b64 0023     		movne	r3, #0
 4130 0b66 DBB2     		uxtb	r3, r3
 4131 0b68 9AB2     		uxth	r2, r3
 4132 0b6a 174B     		ldr	r3, .L225+52
 4133 0b6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4134 0b6e 9BB2     		uxth	r3, r3
 4135 0b70 1946     		mov	r1, r3
 4136 0b72 1046     		mov	r0, r2
 4137 0b74 FFF7FEFF 		bl	OLEDtextColor
1019:ui.c          ****             OLEDwriteString("TRADITIONAL    ", 15, 0, ThirdLine);
 4138              		.loc 1 1019 0
 4139 0b78 0223     		movs	r3, #2
 4140 0b7a 0022     		movs	r2, #0
 4141 0b7c 0F21     		movs	r1, #15
 4142 0b7e 1448     		ldr	r0, .L225+60
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 94


 4143 0b80 FFF7FEFF 		bl	OLEDwriteString
1020:ui.c          ****             OLEDtextColor(1, 0);
 4144              		.loc 1 1020 0
 4145 0b84 0021     		movs	r1, #0
 4146 0b86 0120     		movs	r0, #1
 4147 0b88 FFF7FEFF 		bl	OLEDtextColor
1021:ui.c          ****             mainOLEDWaitingToSend = 1;
 4148              		.loc 1 1021 0
 4149 0b8c 064B     		ldr	r3, .L225+20
 4150 0b8e 0122     		movs	r2, #1
 4151 0b90 1A70     		strb	r2, [r3]
 4152 0b92 7DE2     		b	.L111
 4153              	.L226:
 4154              		.align	2
 4155              	.L225:
 4156 0b94 00000000 		.word	menuPosition
 4157 0b98 00000000 		.word	fretToCalibrate
 4158 0b9c 00000000 		.word	bar
 4159 0ba0 00000000 		.word	fretMeasurements
 4160 0ba4 00000000 		.word	whichFretArray
 4161 0ba8 00000000 		.word	mainOLEDWaitingToSend
 4162 0bac 00000000 		.word	semitonesOrCents
 4163 0bb0 00000000 		.word	prevEncoderVal
 4164 0bb4 00000000 		.word	octaveAction
 4165 0bb8 70010000 		.word	.LC19
 4166 0bbc 80010000 		.word	.LC20
 4167 0bc0 90010000 		.word	.LC21
 4168 0bc4 00000000 		.word	editingSliderRepString
 4169 0bc8 00000000 		.word	traditionalPedalAdd
 4170 0bcc F0010000 		.word	.LC27
 4171 0bd0 00020000 		.word	.LC28
 4172              	.L162:
1022:ui.c          ****         }
1023:ui.c          ****         else if (action == Down)
 4173              		.loc 1 1023 0
 4174 0bd4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4175 0bd6 022B     		cmp	r3, #2
 4176 0bd8 40D1     		bne	.L164
1024:ui.c          ****         {
1025:ui.c          ****             traditionalPedalAdd = (traditionalPedalAdd-1)&1;
 4177              		.loc 1 1025 0
 4178 0bda AC4B     		ldr	r3, .L227
 4179 0bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4180 0bde 013B     		subs	r3, r3, #1
 4181 0be0 DBB2     		uxtb	r3, r3
 4182 0be2 03F00103 		and	r3, r3, #1
 4183 0be6 DAB2     		uxtb	r2, r3
 4184 0be8 A84B     		ldr	r3, .L227
 4185 0bea 1A70     		strb	r2, [r3]
1026:ui.c          ****             OLEDclearLine(SecondLine);
 4186              		.loc 1 1026 0
 4187 0bec 0120     		movs	r0, #1
 4188 0bee FFF7FEFF 		bl	OLEDclearLine
1027:ui.c          ****             OLEDclearLine(ThirdLine);
 4189              		.loc 1 1027 0
 4190 0bf2 0220     		movs	r0, #2
 4191 0bf4 FFF7FEFF 		bl	OLEDclearLine
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 95


1028:ui.c          ****             OLEDtextColor(traditionalPedalAdd, !traditionalPedalAdd);
 4192              		.loc 1 1028 0
 4193 0bf8 A44B     		ldr	r3, .L227
 4194 0bfa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4195 0bfc 9AB2     		uxth	r2, r3
 4196 0bfe A34B     		ldr	r3, .L227
 4197 0c00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4198 0c02 002B     		cmp	r3, #0
 4199 0c04 0CBF     		ite	eq
 4200 0c06 0123     		moveq	r3, #1
 4201 0c08 0023     		movne	r3, #0
 4202 0c0a DBB2     		uxtb	r3, r3
 4203 0c0c 9BB2     		uxth	r3, r3
 4204 0c0e 1946     		mov	r1, r3
 4205 0c10 1046     		mov	r0, r2
 4206 0c12 FFF7FEFF 		bl	OLEDtextColor
1029:ui.c          ****             OLEDwriteString("SIMPLE ADD     ", 15, 0, SecondLine);
 4207              		.loc 1 1029 0
 4208 0c16 0123     		movs	r3, #1
 4209 0c18 0022     		movs	r2, #0
 4210 0c1a 0F21     		movs	r1, #15
 4211 0c1c 9C48     		ldr	r0, .L227+4
 4212 0c1e FFF7FEFF 		bl	OLEDwriteString
1030:ui.c          ****             OLEDtextColor(!traditionalPedalAdd, traditionalPedalAdd);
 4213              		.loc 1 1030 0
 4214 0c22 9A4B     		ldr	r3, .L227
 4215 0c24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4216 0c26 002B     		cmp	r3, #0
 4217 0c28 0CBF     		ite	eq
 4218 0c2a 0123     		moveq	r3, #1
 4219 0c2c 0023     		movne	r3, #0
 4220 0c2e DBB2     		uxtb	r3, r3
 4221 0c30 9AB2     		uxth	r2, r3
 4222 0c32 964B     		ldr	r3, .L227
 4223 0c34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4224 0c36 9BB2     		uxth	r3, r3
 4225 0c38 1946     		mov	r1, r3
 4226 0c3a 1046     		mov	r0, r2
 4227 0c3c FFF7FEFF 		bl	OLEDtextColor
1031:ui.c          ****             OLEDwriteString("TRADITIONAL    ", 15, 0, ThirdLine);
 4228              		.loc 1 1031 0
 4229 0c40 0223     		movs	r3, #2
 4230 0c42 0022     		movs	r2, #0
 4231 0c44 0F21     		movs	r1, #15
 4232 0c46 9348     		ldr	r0, .L227+8
 4233 0c48 FFF7FEFF 		bl	OLEDwriteString
1032:ui.c          ****             OLEDtextColor(1, 0);
 4234              		.loc 1 1032 0
 4235 0c4c 0021     		movs	r1, #0
 4236 0c4e 0120     		movs	r0, #1
 4237 0c50 FFF7FEFF 		bl	OLEDtextColor
1033:ui.c          ****             mainOLEDWaitingToSend = 1;
 4238              		.loc 1 1033 0
 4239 0c54 904B     		ldr	r3, .L227+12
 4240 0c56 0122     		movs	r2, #1
 4241 0c58 1A70     		strb	r2, [r3]
 4242 0c5a 19E2     		b	.L111
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 96


 4243              	.L164:
1034:ui.c          ****         }
1035:ui.c          ****         else if (action == Left) 
 4244              		.loc 1 1035 0
 4245 0c5c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4246 0c5e 002B     		cmp	r3, #0
 4247 0c60 40F01682 		bne	.L111
1036:ui.c          ****         {
1037:ui.c          ****             //go back to main menu
1038:ui.c          ****             menuPosition[0][0] = SettingsMenu;
 4248              		.loc 1 1038 0
 4249 0c64 8D4B     		ldr	r3, .L227+16
 4250 0c66 0322     		movs	r2, #3
 4251 0c68 1A70     		strb	r2, [r3]
1039:ui.c          ****             whatToDraw = 1;
 4252              		.loc 1 1039 0
 4253 0c6a 0123     		movs	r3, #1
 4254 0c6c 87F82730 		strb	r3, [r7, #39]
 4255 0c70 0EE2     		b	.L111
 4256              	.L161:
1040:ui.c          ****         }
1041:ui.c          ****     }
1042:ui.c          ****                
1043:ui.c          ****     else if (menuPosition[0][0] == MidiSendMenu) //we are in midisend menu
 4257              		.loc 1 1043 0
 4258 0c72 8A4B     		ldr	r3, .L227+16
 4259 0c74 93F90030 		ldrsb	r3, [r3]
 4260 0c78 0B2B     		cmp	r3, #11
 4261 0c7a 40F07381 		bne	.L165
 4262              	.LBB15:
1044:ui.c          ****     {
1045:ui.c          ****         
1046:ui.c          ****         if (action == Right)
 4263              		.loc 1 1046 0
 4264 0c7e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4265 0c80 012B     		cmp	r3, #1
 4266 0c82 2CD1     		bne	.L166
1047:ui.c          ****         {
1048:ui.c          ****             if (whichMidiSendSelected ==0)
 4267              		.loc 1 1048 0
 4268 0c84 864B     		ldr	r3, .L227+20
 4269 0c86 93F90030 		ldrsb	r3, [r3]
 4270 0c8a 002B     		cmp	r3, #0
 4271 0c8c 09D1     		bne	.L167
1049:ui.c          ****             {
1050:ui.c          ****                 midiSendOn = (midiSendOn+1)&1;
 4272              		.loc 1 1050 0
 4273 0c8e 854B     		ldr	r3, .L227+24
 4274 0c90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4275 0c92 0133     		adds	r3, r3, #1
 4276 0c94 DBB2     		uxtb	r3, r3
 4277 0c96 03F00103 		and	r3, r3, #1
 4278 0c9a DAB2     		uxtb	r2, r3
 4279 0c9c 814B     		ldr	r3, .L227+24
 4280 0c9e 1A70     		strb	r2, [r3]
 4281 0ca0 66E0     		b	.L170
 4282              	.L167:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 97


1051:ui.c          ****             }
1052:ui.c          ****             else if (whichMidiSendSelected == 1)
 4283              		.loc 1 1052 0
 4284 0ca2 7F4B     		ldr	r3, .L227+20
 4285 0ca4 93F90030 		ldrsb	r3, [r3]
 4286 0ca8 012B     		cmp	r3, #1
 4287 0caa 09D1     		bne	.L169
1053:ui.c          ****             {
1054:ui.c          ****                 midiBarSendOn = (midiBarSendOn+1)&1;
 4288              		.loc 1 1054 0
 4289 0cac 7E4B     		ldr	r3, .L227+28
 4290 0cae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4291 0cb0 0133     		adds	r3, r3, #1
 4292 0cb2 DBB2     		uxtb	r3, r3
 4293 0cb4 03F00103 		and	r3, r3, #1
 4294 0cb8 DAB2     		uxtb	r2, r3
 4295 0cba 7B4B     		ldr	r3, .L227+28
 4296 0cbc 1A70     		strb	r2, [r3]
 4297 0cbe 57E0     		b	.L170
 4298              	.L169:
1055:ui.c          ****             }
1056:ui.c          ****             else if (whichMidiSendSelected == 2)
 4299              		.loc 1 1056 0
 4300 0cc0 774B     		ldr	r3, .L227+20
 4301 0cc2 93F90030 		ldrsb	r3, [r3]
 4302 0cc6 022B     		cmp	r3, #2
 4303 0cc8 52D1     		bne	.L170
1057:ui.c          ****             {
1058:ui.c          ****                 midiDebugSendOn = (midiDebugSendOn+1)&1;
 4304              		.loc 1 1058 0
 4305 0cca 784B     		ldr	r3, .L227+32
 4306 0ccc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4307 0cce 0133     		adds	r3, r3, #1
 4308 0cd0 DBB2     		uxtb	r3, r3
 4309 0cd2 03F00103 		and	r3, r3, #1
 4310 0cd6 DAB2     		uxtb	r2, r3
 4311 0cd8 744B     		ldr	r3, .L227+32
 4312 0cda 1A70     		strb	r2, [r3]
 4313 0cdc 48E0     		b	.L170
 4314              	.L166:
1059:ui.c          ****             }
1060:ui.c          ****         }
1061:ui.c          ****         else if (action == Left)
 4315              		.loc 1 1061 0
 4316 0cde FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4317 0ce0 002B     		cmp	r3, #0
 4318 0ce2 2CD1     		bne	.L171
1062:ui.c          ****         {
1063:ui.c          ****             if (whichMidiSendSelected ==0)
 4319              		.loc 1 1063 0
 4320 0ce4 6E4B     		ldr	r3, .L227+20
 4321 0ce6 93F90030 		ldrsb	r3, [r3]
 4322 0cea 002B     		cmp	r3, #0
 4323 0cec 09D1     		bne	.L172
1064:ui.c          ****             {
1065:ui.c          ****                 midiSendOn = (midiSendOn-1)&1;
 4324              		.loc 1 1065 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 98


 4325 0cee 6D4B     		ldr	r3, .L227+24
 4326 0cf0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4327 0cf2 013B     		subs	r3, r3, #1
 4328 0cf4 DBB2     		uxtb	r3, r3
 4329 0cf6 03F00103 		and	r3, r3, #1
 4330 0cfa DAB2     		uxtb	r2, r3
 4331 0cfc 694B     		ldr	r3, .L227+24
 4332 0cfe 1A70     		strb	r2, [r3]
 4333 0d00 36E0     		b	.L170
 4334              	.L172:
1066:ui.c          ****             }
1067:ui.c          ****             else if (whichMidiSendSelected == 1)
 4335              		.loc 1 1067 0
 4336 0d02 674B     		ldr	r3, .L227+20
 4337 0d04 93F90030 		ldrsb	r3, [r3]
 4338 0d08 012B     		cmp	r3, #1
 4339 0d0a 09D1     		bne	.L174
1068:ui.c          ****             {
1069:ui.c          ****                 midiBarSendOn = (midiBarSendOn-1)&1;
 4340              		.loc 1 1069 0
 4341 0d0c 664B     		ldr	r3, .L227+28
 4342 0d0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4343 0d10 013B     		subs	r3, r3, #1
 4344 0d12 DBB2     		uxtb	r3, r3
 4345 0d14 03F00103 		and	r3, r3, #1
 4346 0d18 DAB2     		uxtb	r2, r3
 4347 0d1a 634B     		ldr	r3, .L227+28
 4348 0d1c 1A70     		strb	r2, [r3]
 4349 0d1e 27E0     		b	.L170
 4350              	.L174:
1070:ui.c          ****             }
1071:ui.c          ****             else if (whichMidiSendSelected == 2)
 4351              		.loc 1 1071 0
 4352 0d20 5F4B     		ldr	r3, .L227+20
 4353 0d22 93F90030 		ldrsb	r3, [r3]
 4354 0d26 022B     		cmp	r3, #2
 4355 0d28 22D1     		bne	.L170
1072:ui.c          ****             {
1073:ui.c          ****                 midiDebugSendOn = (midiDebugSendOn-1)&1;
 4356              		.loc 1 1073 0
 4357 0d2a 604B     		ldr	r3, .L227+32
 4358 0d2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4359 0d2e 013B     		subs	r3, r3, #1
 4360 0d30 DBB2     		uxtb	r3, r3
 4361 0d32 03F00103 		and	r3, r3, #1
 4362 0d36 DAB2     		uxtb	r2, r3
 4363 0d38 5C4B     		ldr	r3, .L227+32
 4364 0d3a 1A70     		strb	r2, [r3]
 4365 0d3c 18E0     		b	.L170
 4366              	.L171:
1074:ui.c          ****             }
1075:ui.c          ****         }
1076:ui.c          ****         else if (action == Up)
 4367              		.loc 1 1076 0
 4368 0d3e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4369 0d40 032B     		cmp	r3, #3
 4370 0d42 09D1     		bne	.L175
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 99


1077:ui.c          ****         {
1078:ui.c          ****             whichMidiSendSelected = (whichMidiSendSelected-1);
 4371              		.loc 1 1078 0
 4372 0d44 564B     		ldr	r3, .L227+20
 4373 0d46 93F90030 		ldrsb	r3, [r3]
 4374 0d4a DBB2     		uxtb	r3, r3
 4375 0d4c 013B     		subs	r3, r3, #1
 4376 0d4e DBB2     		uxtb	r3, r3
 4377 0d50 5AB2     		sxtb	r2, r3
 4378 0d52 534B     		ldr	r3, .L227+20
 4379 0d54 1A70     		strb	r2, [r3]
 4380 0d56 0BE0     		b	.L170
 4381              	.L175:
1079:ui.c          ****         }
1080:ui.c          ****         else if (action == Down)
 4382              		.loc 1 1080 0
 4383 0d58 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4384 0d5a 022B     		cmp	r3, #2
 4385 0d5c 08D1     		bne	.L170
1081:ui.c          ****         {
1082:ui.c          ****             whichMidiSendSelected = (whichMidiSendSelected+1);
 4386              		.loc 1 1082 0
 4387 0d5e 504B     		ldr	r3, .L227+20
 4388 0d60 93F90030 		ldrsb	r3, [r3]
 4389 0d64 DBB2     		uxtb	r3, r3
 4390 0d66 0133     		adds	r3, r3, #1
 4391 0d68 DBB2     		uxtb	r3, r3
 4392 0d6a 5AB2     		sxtb	r2, r3
 4393 0d6c 4C4B     		ldr	r3, .L227+20
 4394 0d6e 1A70     		strb	r2, [r3]
 4395              	.L170:
1083:ui.c          ****         }
1084:ui.c          ****         if (whichMidiSendSelected < 0)
 4396              		.loc 1 1084 0
 4397 0d70 4B4B     		ldr	r3, .L227+20
 4398 0d72 93F90030 		ldrsb	r3, [r3]
 4399 0d76 002B     		cmp	r3, #0
 4400 0d78 03DA     		bge	.L176
1085:ui.c          ****         {
1086:ui.c          ****             whichMidiSendSelected = 2;
 4401              		.loc 1 1086 0
 4402 0d7a 494B     		ldr	r3, .L227+20
 4403 0d7c 0222     		movs	r2, #2
 4404 0d7e 1A70     		strb	r2, [r3]
 4405 0d80 07E0     		b	.L177
 4406              	.L176:
1087:ui.c          ****         }
1088:ui.c          ****         else if (whichMidiSendSelected > 2)
 4407              		.loc 1 1088 0
 4408 0d82 474B     		ldr	r3, .L227+20
 4409 0d84 93F90030 		ldrsb	r3, [r3]
 4410 0d88 022B     		cmp	r3, #2
 4411 0d8a 02DD     		ble	.L177
1089:ui.c          ****         {
1090:ui.c          ****             whichMidiSendSelected = 0;
 4412              		.loc 1 1090 0
 4413 0d8c 444B     		ldr	r3, .L227+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 100


 4414 0d8e 0022     		movs	r2, #0
 4415 0d90 1A70     		strb	r2, [r3]
 4416              	.L177:
1091:ui.c          ****         }
1092:ui.c          ****         OLEDtextColor(1, 0);
 4417              		.loc 1 1092 0
 4418 0d92 0021     		movs	r1, #0
 4419 0d94 0120     		movs	r0, #1
 4420 0d96 FFF7FEFF 		bl	OLEDtextColor
1093:ui.c          ****         OLEDwriteString("SEND MIDI  ", 11, 0, FirstLine);
 4421              		.loc 1 1093 0
 4422 0d9a 0023     		movs	r3, #0
 4423 0d9c 0022     		movs	r2, #0
 4424 0d9e 0B21     		movs	r1, #11
 4425 0da0 4348     		ldr	r0, .L227+36
 4426 0da2 FFF7FEFF 		bl	OLEDwriteString
1094:ui.c          ****         uint8_t midiselected= (whichMidiSendSelected==0);
 4427              		.loc 1 1094 0
 4428 0da6 3E4B     		ldr	r3, .L227+20
 4429 0da8 93F90030 		ldrsb	r3, [r3]
 4430 0dac 002B     		cmp	r3, #0
 4431 0dae 0CBF     		ite	eq
 4432 0db0 0123     		moveq	r3, #1
 4433 0db2 0023     		movne	r3, #0
 4434 0db4 DBB2     		uxtb	r3, r3
 4435 0db6 3B73     		strb	r3, [r7, #12]
1095:ui.c          ****         GFXfillRect(&theGFX, 80, 0, 37, 16, midiselected);
 4436              		.loc 1 1095 0
 4437 0db8 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4438 0dba 9BB2     		uxth	r3, r3
 4439 0dbc 0193     		str	r3, [sp, #4]
 4440 0dbe 1023     		movs	r3, #16
 4441 0dc0 0093     		str	r3, [sp]
 4442 0dc2 2523     		movs	r3, #37
 4443 0dc4 0022     		movs	r2, #0
 4444 0dc6 5021     		movs	r1, #80
 4445 0dc8 3A48     		ldr	r0, .L227+40
 4446 0dca FFF7FEFF 		bl	GFXfillRect
1096:ui.c          ****         OLEDtextColor(!midiselected,midiselected);
 4447              		.loc 1 1096 0
 4448 0dce 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4449 0dd0 002B     		cmp	r3, #0
 4450 0dd2 0CBF     		ite	eq
 4451 0dd4 0123     		moveq	r3, #1
 4452 0dd6 0023     		movne	r3, #0
 4453 0dd8 DBB2     		uxtb	r3, r3
 4454 0dda 9BB2     		uxth	r3, r3
 4455 0ddc 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 4456 0dde 92B2     		uxth	r2, r2
 4457 0de0 1146     		mov	r1, r2
 4458 0de2 1846     		mov	r0, r3
 4459 0de4 FFF7FEFF 		bl	OLEDtextColor
1097:ui.c          ****         if (midiSendOn)
 4460              		.loc 1 1097 0
 4461 0de8 2E4B     		ldr	r3, .L227+24
 4462 0dea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4463 0dec 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 101


 4464 0dee 08D0     		beq	.L178
1098:ui.c          ****         {
1099:ui.c          ****             GFXwrite(&theGFX, 79);
 4465              		.loc 1 1099 0
 4466 0df0 4F21     		movs	r1, #79
 4467 0df2 3048     		ldr	r0, .L227+40
 4468 0df4 FFF7FEFF 		bl	GFXwrite
1100:ui.c          ****             GFXwrite(&theGFX, 78);
 4469              		.loc 1 1100 0
 4470 0df8 4E21     		movs	r1, #78
 4471 0dfa 2E48     		ldr	r0, .L227+40
 4472 0dfc FFF7FEFF 		bl	GFXwrite
 4473 0e00 0BE0     		b	.L179
 4474              	.L178:
1101:ui.c          ****         }
1102:ui.c          ****         else
1103:ui.c          ****         {
1104:ui.c          ****             GFXwrite(&theGFX, 79);
 4475              		.loc 1 1104 0
 4476 0e02 4F21     		movs	r1, #79
 4477 0e04 2B48     		ldr	r0, .L227+40
 4478 0e06 FFF7FEFF 		bl	GFXwrite
1105:ui.c          ****             GFXwrite(&theGFX, 70);
 4479              		.loc 1 1105 0
 4480 0e0a 4621     		movs	r1, #70
 4481 0e0c 2948     		ldr	r0, .L227+40
 4482 0e0e FFF7FEFF 		bl	GFXwrite
1106:ui.c          ****             GFXwrite(&theGFX, 70);
 4483              		.loc 1 1106 0
 4484 0e12 4621     		movs	r1, #70
 4485 0e14 2748     		ldr	r0, .L227+40
 4486 0e16 FFF7FEFF 		bl	GFXwrite
 4487              	.L179:
1107:ui.c          ****         }
1108:ui.c          ****         OLEDtextColor(1, 0);
 4488              		.loc 1 1108 0
 4489 0e1a 0021     		movs	r1, #0
 4490 0e1c 0120     		movs	r0, #1
 4491 0e1e FFF7FEFF 		bl	OLEDtextColor
1109:ui.c          ****         OLEDwriteString("SEND BAR   ", 11, 0, SecondLine);
 4492              		.loc 1 1109 0
 4493 0e22 0123     		movs	r3, #1
 4494 0e24 0022     		movs	r2, #0
 4495 0e26 0B21     		movs	r1, #11
 4496 0e28 2348     		ldr	r0, .L227+44
 4497 0e2a FFF7FEFF 		bl	OLEDwriteString
1110:ui.c          ****         midiselected= (whichMidiSendSelected==1);
 4498              		.loc 1 1110 0
 4499 0e2e 1C4B     		ldr	r3, .L227+20
 4500 0e30 93F90030 		ldrsb	r3, [r3]
 4501 0e34 012B     		cmp	r3, #1
 4502 0e36 0CBF     		ite	eq
 4503 0e38 0123     		moveq	r3, #1
 4504 0e3a 0023     		movne	r3, #0
 4505 0e3c DBB2     		uxtb	r3, r3
 4506 0e3e 3B73     		strb	r3, [r7, #12]
1111:ui.c          ****         GFXfillRect(&theGFX, 80, 16, 37, 16, midiselected);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 102


 4507              		.loc 1 1111 0
 4508 0e40 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4509 0e42 9BB2     		uxth	r3, r3
 4510 0e44 0193     		str	r3, [sp, #4]
 4511 0e46 1023     		movs	r3, #16
 4512 0e48 0093     		str	r3, [sp]
 4513 0e4a 2523     		movs	r3, #37
 4514 0e4c 1022     		movs	r2, #16
 4515 0e4e 5021     		movs	r1, #80
 4516 0e50 1848     		ldr	r0, .L227+40
 4517 0e52 FFF7FEFF 		bl	GFXfillRect
1112:ui.c          ****         OLEDtextColor(!midiselected,midiselected);
 4518              		.loc 1 1112 0
 4519 0e56 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4520 0e58 002B     		cmp	r3, #0
 4521 0e5a 0CBF     		ite	eq
 4522 0e5c 0123     		moveq	r3, #1
 4523 0e5e 0023     		movne	r3, #0
 4524 0e60 DBB2     		uxtb	r3, r3
 4525 0e62 9BB2     		uxth	r3, r3
 4526 0e64 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 4527 0e66 92B2     		uxth	r2, r2
 4528 0e68 1146     		mov	r1, r2
 4529 0e6a 1846     		mov	r0, r3
 4530 0e6c FFF7FEFF 		bl	OLEDtextColor
1113:ui.c          ****         if (midiBarSendOn)
 4531              		.loc 1 1113 0
 4532 0e70 0D4B     		ldr	r3, .L227+28
 4533 0e72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4534 0e74 002B     		cmp	r3, #0
 4535 0e76 21D0     		beq	.L180
1114:ui.c          ****         {
1115:ui.c          ****             GFXwrite(&theGFX, 79);
 4536              		.loc 1 1115 0
 4537 0e78 4F21     		movs	r1, #79
 4538 0e7a 0E48     		ldr	r0, .L227+40
 4539 0e7c FFF7FEFF 		bl	GFXwrite
1116:ui.c          ****             GFXwrite(&theGFX, 78);
 4540              		.loc 1 1116 0
 4541 0e80 4E21     		movs	r1, #78
 4542 0e82 0C48     		ldr	r0, .L227+40
 4543 0e84 FFF7FEFF 		bl	GFXwrite
 4544 0e88 24E0     		b	.L181
 4545              	.L228:
 4546 0e8a 00BF     		.align	2
 4547              	.L227:
 4548 0e8c 00000000 		.word	traditionalPedalAdd
 4549 0e90 F0010000 		.word	.LC27
 4550 0e94 00020000 		.word	.LC28
 4551 0e98 00000000 		.word	mainOLEDWaitingToSend
 4552 0e9c 00000000 		.word	menuPosition
 4553 0ea0 00000000 		.word	whichMidiSendSelected
 4554 0ea4 00000000 		.word	midiSendOn
 4555 0ea8 00000000 		.word	midiBarSendOn
 4556 0eac 00000000 		.word	midiDebugSendOn
 4557 0eb0 10020000 		.word	.LC29
 4558 0eb4 00000000 		.word	theGFX
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 103


 4559 0eb8 1C020000 		.word	.LC30
 4560              	.L180:
1117:ui.c          ****         }
1118:ui.c          ****         else
1119:ui.c          ****         {
1120:ui.c          ****             GFXwrite(&theGFX, 79);
 4561              		.loc 1 1120 0
 4562 0ebc 4F21     		movs	r1, #79
 4563 0ebe 9948     		ldr	r0, .L229
 4564 0ec0 FFF7FEFF 		bl	GFXwrite
1121:ui.c          ****             GFXwrite(&theGFX, 70);
 4565              		.loc 1 1121 0
 4566 0ec4 4621     		movs	r1, #70
 4567 0ec6 9748     		ldr	r0, .L229
 4568 0ec8 FFF7FEFF 		bl	GFXwrite
1122:ui.c          ****             GFXwrite(&theGFX, 70);
 4569              		.loc 1 1122 0
 4570 0ecc 4621     		movs	r1, #70
 4571 0ece 9548     		ldr	r0, .L229
 4572 0ed0 FFF7FEFF 		bl	GFXwrite
 4573              	.L181:
1123:ui.c          ****         }
1124:ui.c          ****         OLEDtextColor(1, 0);
 4574              		.loc 1 1124 0
 4575 0ed4 0021     		movs	r1, #0
 4576 0ed6 0120     		movs	r0, #1
 4577 0ed8 FFF7FEFF 		bl	OLEDtextColor
1125:ui.c          ****         OLEDwriteString("SEND DEBUG ", 11, 0, ThirdLine);
 4578              		.loc 1 1125 0
 4579 0edc 0223     		movs	r3, #2
 4580 0ede 0022     		movs	r2, #0
 4581 0ee0 0B21     		movs	r1, #11
 4582 0ee2 9148     		ldr	r0, .L229+4
 4583 0ee4 FFF7FEFF 		bl	OLEDwriteString
1126:ui.c          ****         midiselected= (whichMidiSendSelected==2);
 4584              		.loc 1 1126 0
 4585 0ee8 904B     		ldr	r3, .L229+8
 4586 0eea 93F90030 		ldrsb	r3, [r3]
 4587 0eee 022B     		cmp	r3, #2
 4588 0ef0 0CBF     		ite	eq
 4589 0ef2 0123     		moveq	r3, #1
 4590 0ef4 0023     		movne	r3, #0
 4591 0ef6 DBB2     		uxtb	r3, r3
 4592 0ef8 3B73     		strb	r3, [r7, #12]
1127:ui.c          ****         GFXfillRect(&theGFX, 80, 32, 37, 16, midiselected);
 4593              		.loc 1 1127 0
 4594 0efa 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4595 0efc 9BB2     		uxth	r3, r3
 4596 0efe 0193     		str	r3, [sp, #4]
 4597 0f00 1023     		movs	r3, #16
 4598 0f02 0093     		str	r3, [sp]
 4599 0f04 2523     		movs	r3, #37
 4600 0f06 2022     		movs	r2, #32
 4601 0f08 5021     		movs	r1, #80
 4602 0f0a 8648     		ldr	r0, .L229
 4603 0f0c FFF7FEFF 		bl	GFXfillRect
1128:ui.c          ****         OLEDtextColor(!midiselected,midiselected);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 104


 4604              		.loc 1 1128 0
 4605 0f10 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4606 0f12 002B     		cmp	r3, #0
 4607 0f14 0CBF     		ite	eq
 4608 0f16 0123     		moveq	r3, #1
 4609 0f18 0023     		movne	r3, #0
 4610 0f1a DBB2     		uxtb	r3, r3
 4611 0f1c 9BB2     		uxth	r3, r3
 4612 0f1e 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 4613 0f20 92B2     		uxth	r2, r2
 4614 0f22 1146     		mov	r1, r2
 4615 0f24 1846     		mov	r0, r3
 4616 0f26 FFF7FEFF 		bl	OLEDtextColor
1129:ui.c          ****         if (midiDebugSendOn)
 4617              		.loc 1 1129 0
 4618 0f2a 814B     		ldr	r3, .L229+12
 4619 0f2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4620 0f2e 002B     		cmp	r3, #0
 4621 0f30 08D0     		beq	.L182
1130:ui.c          ****         {
1131:ui.c          ****             GFXwrite(&theGFX, 79);
 4622              		.loc 1 1131 0
 4623 0f32 4F21     		movs	r1, #79
 4624 0f34 7B48     		ldr	r0, .L229
 4625 0f36 FFF7FEFF 		bl	GFXwrite
1132:ui.c          ****             GFXwrite(&theGFX, 78);
 4626              		.loc 1 1132 0
 4627 0f3a 4E21     		movs	r1, #78
 4628 0f3c 7948     		ldr	r0, .L229
 4629 0f3e FFF7FEFF 		bl	GFXwrite
 4630 0f42 0BE0     		b	.L183
 4631              	.L182:
1133:ui.c          ****         }
1134:ui.c          ****         else
1135:ui.c          ****         {
1136:ui.c          ****             GFXwrite(&theGFX, 79);
 4632              		.loc 1 1136 0
 4633 0f44 4F21     		movs	r1, #79
 4634 0f46 7748     		ldr	r0, .L229
 4635 0f48 FFF7FEFF 		bl	GFXwrite
1137:ui.c          ****             GFXwrite(&theGFX, 70);
 4636              		.loc 1 1137 0
 4637 0f4c 4621     		movs	r1, #70
 4638 0f4e 7548     		ldr	r0, .L229
 4639 0f50 FFF7FEFF 		bl	GFXwrite
1138:ui.c          ****             GFXwrite(&theGFX, 70);
 4640              		.loc 1 1138 0
 4641 0f54 4621     		movs	r1, #70
 4642 0f56 7348     		ldr	r0, .L229
 4643 0f58 FFF7FEFF 		bl	GFXwrite
 4644              	.L183:
1139:ui.c          ****         }
1140:ui.c          ****         mainOLEDWaitingToSend = 1;
 4645              		.loc 1 1140 0
 4646 0f5c 754B     		ldr	r3, .L229+16
 4647 0f5e 0122     		movs	r2, #1
 4648 0f60 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 105


 4649              	.LBE15:
 4650 0f62 95E0     		b	.L111
 4651              	.L165:
1141:ui.c          ****                 
1142:ui.c          ****     }
1143:ui.c          ****     
1144:ui.c          ****      else if (menuPosition[0][0] == FirmwareUpdateMenu) //we are in firmware update menu
 4652              		.loc 1 1144 0
 4653 0f64 744B     		ldr	r3, .L229+20
 4654 0f66 93F90030 		ldrsb	r3, [r3]
 4655 0f6a 0D2B     		cmp	r3, #13
 4656 0f6c 61D1     		bne	.L184
1145:ui.c          ****     {
1146:ui.c          ****         
1147:ui.c          ****         if (action == Right)
 4657              		.loc 1 1147 0
 4658 0f6e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4659 0f70 012B     		cmp	r3, #1
 4660 0f72 06D1     		bne	.L185
1148:ui.c          ****         {
1149:ui.c          ****             sendFirmwareUpdateRequest = 1+whichFirmwareUpdateSelected;
 4661              		.loc 1 1149 0
 4662 0f74 714B     		ldr	r3, .L229+24
 4663 0f76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4664 0f78 0133     		adds	r3, r3, #1
 4665 0f7a DAB2     		uxtb	r2, r3
 4666 0f7c 704B     		ldr	r3, .L229+28
 4667 0f7e 1A70     		strb	r2, [r3]
 4668 0f80 86E0     		b	.L111
 4669              	.L185:
1150:ui.c          ****         }
1151:ui.c          ****         else if (action == Left)
 4670              		.loc 1 1151 0
 4671 0f82 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4672 0f84 002B     		cmp	r3, #0
 4673 0f86 06D1     		bne	.L187
1152:ui.c          ****         {
1153:ui.c          ****               //go back to main menu
1154:ui.c          ****             menuPosition[0][0] = MainMenu;
 4674              		.loc 1 1154 0
 4675 0f88 6B4B     		ldr	r3, .L229+20
 4676 0f8a 0022     		movs	r2, #0
 4677 0f8c 1A70     		strb	r2, [r3]
1155:ui.c          ****             whatToDraw = 1;
 4678              		.loc 1 1155 0
 4679 0f8e 0123     		movs	r3, #1
 4680 0f90 87F82730 		strb	r3, [r7, #39]
 4681 0f94 7CE0     		b	.L111
 4682              	.L187:
1156:ui.c          ****         }
1157:ui.c          ****         else if (action == Up)
 4683              		.loc 1 1157 0
 4684 0f96 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4685 0f98 032B     		cmp	r3, #3
 4686 0f9a 23D1     		bne	.L188
1158:ui.c          ****         {
1159:ui.c          ****            // whichFirmwareUpdateSelected = (whichFirmwareUpdateSelected+1)&1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 106


1160:ui.c          ****             OLEDclear(128, 64);
 4687              		.loc 1 1160 0
 4688 0f9c 4021     		movs	r1, #64
 4689 0f9e 8020     		movs	r0, #128
 4690 0fa0 FFF7FEFF 		bl	OLEDclear
1161:ui.c          ****             myGFX_setFont(2);
 4691              		.loc 1 1161 0
 4692 0fa4 0220     		movs	r0, #2
 4693 0fa6 FFF7FEFF 		bl	myGFX_setFont
1162:ui.c          ****             OLEDtextColor(whichFirmwareUpdateSelected, !whichFirmwareUpdateSelected);
 4694              		.loc 1 1162 0
 4695 0faa 644B     		ldr	r3, .L229+24
 4696 0fac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4697 0fae 9AB2     		uxth	r2, r3
 4698 0fb0 624B     		ldr	r3, .L229+24
 4699 0fb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4700 0fb4 002B     		cmp	r3, #0
 4701 0fb6 0CBF     		ite	eq
 4702 0fb8 0123     		moveq	r3, #1
 4703 0fba 0023     		movne	r3, #0
 4704 0fbc DBB2     		uxtb	r3, r3
 4705 0fbe 9BB2     		uxth	r3, r3
 4706 0fc0 1946     		mov	r1, r3
 4707 0fc2 1046     		mov	r0, r2
 4708 0fc4 FFF7FEFF 		bl	OLEDtextColor
1163:ui.c          ****             OLEDwriteString("UPDATE BRAIN", 12, 0, FirstLine);
 4709              		.loc 1 1163 0
 4710 0fc8 0023     		movs	r3, #0
 4711 0fca 0022     		movs	r2, #0
 4712 0fcc 0C21     		movs	r1, #12
 4713 0fce 5D48     		ldr	r0, .L229+32
 4714 0fd0 FFF7FEFF 		bl	OLEDwriteString
1164:ui.c          ****             //OLEDtextColor(!whichFirmwareUpdateSelected, whichFirmwareUpdateSelected);
1165:ui.c          ****             //OLEDwriteString("UPDATE PLUCK", 12, 0, SecondLine);
1166:ui.c          ****             OLEDtextColor(1, 0);
 4715              		.loc 1 1166 0
 4716 0fd4 0021     		movs	r1, #0
 4717 0fd6 0120     		movs	r0, #1
 4718 0fd8 FFF7FEFF 		bl	OLEDtextColor
1167:ui.c          ****             mainOLEDWaitingToSend = 1;
 4719              		.loc 1 1167 0
 4720 0fdc 554B     		ldr	r3, .L229+16
 4721 0fde 0122     		movs	r2, #1
 4722 0fe0 1A70     		strb	r2, [r3]
 4723 0fe2 55E0     		b	.L111
 4724              	.L188:
1168:ui.c          ****         }
1169:ui.c          ****         else if (action == Down)
 4725              		.loc 1 1169 0
 4726 0fe4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4727 0fe6 022B     		cmp	r3, #2
 4728 0fe8 52D1     		bne	.L111
1170:ui.c          ****         {
1171:ui.c          ****            // whichFirmwareUpdateSelected = (whichFirmwareUpdateSelected-1)&1;
1172:ui.c          ****             OLEDclear(128, 64);
 4729              		.loc 1 1172 0
 4730 0fea 4021     		movs	r1, #64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 107


 4731 0fec 8020     		movs	r0, #128
 4732 0fee FFF7FEFF 		bl	OLEDclear
1173:ui.c          ****             myGFX_setFont(2);
 4733              		.loc 1 1173 0
 4734 0ff2 0220     		movs	r0, #2
 4735 0ff4 FFF7FEFF 		bl	myGFX_setFont
1174:ui.c          ****             OLEDtextColor(whichFirmwareUpdateSelected, !whichFirmwareUpdateSelected);
 4736              		.loc 1 1174 0
 4737 0ff8 504B     		ldr	r3, .L229+24
 4738 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4739 0ffc 9AB2     		uxth	r2, r3
 4740 0ffe 4F4B     		ldr	r3, .L229+24
 4741 1000 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4742 1002 002B     		cmp	r3, #0
 4743 1004 0CBF     		ite	eq
 4744 1006 0123     		moveq	r3, #1
 4745 1008 0023     		movne	r3, #0
 4746 100a DBB2     		uxtb	r3, r3
 4747 100c 9BB2     		uxth	r3, r3
 4748 100e 1946     		mov	r1, r3
 4749 1010 1046     		mov	r0, r2
 4750 1012 FFF7FEFF 		bl	OLEDtextColor
1175:ui.c          ****             OLEDwriteString("UPDATE BRAIN", 12, 0, FirstLine);
 4751              		.loc 1 1175 0
 4752 1016 0023     		movs	r3, #0
 4753 1018 0022     		movs	r2, #0
 4754 101a 0C21     		movs	r1, #12
 4755 101c 4948     		ldr	r0, .L229+32
 4756 101e FFF7FEFF 		bl	OLEDwriteString
1176:ui.c          ****             //OLEDtextColor(!whichFirmwareUpdateSelected, whichFirmwareUpdateSelected);
1177:ui.c          ****             //OLEDwriteString("UPDATE PLUCK", 12, 0, SecondLine);
1178:ui.c          ****             OLEDtextColor(1, 0);
 4757              		.loc 1 1178 0
 4758 1022 0021     		movs	r1, #0
 4759 1024 0120     		movs	r0, #1
 4760 1026 FFF7FEFF 		bl	OLEDtextColor
1179:ui.c          ****             mainOLEDWaitingToSend = 1;
 4761              		.loc 1 1179 0
 4762 102a 424B     		ldr	r3, .L229+16
 4763 102c 0122     		movs	r2, #1
 4764 102e 1A70     		strb	r2, [r3]
 4765 1030 2EE0     		b	.L111
 4766              	.L184:
1180:ui.c          ****         }
1181:ui.c          ****     }
1182:ui.c          ****     
1183:ui.c          ****     else if (menuPosition[0][0] == StorePresetMenu)
 4767              		.loc 1 1183 0
 4768 1032 414B     		ldr	r3, .L229+20
 4769 1034 93F90030 		ldrsb	r3, [r3]
 4770 1038 012B     		cmp	r3, #1
 4771 103a 29D1     		bne	.L111
1184:ui.c          ****     {
1185:ui.c          ****  
1186:ui.c          ****         if (action == Right)
 4772              		.loc 1 1186 0
 4773 103c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 108


 4774 103e 012B     		cmp	r3, #1
 4775 1040 10D1     		bne	.L189
1187:ui.c          ****         {
1188:ui.c          ****             presetStoreStage++;
 4776              		.loc 1 1188 0
 4777 1042 414B     		ldr	r3, .L229+36
 4778 1044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4779 1046 0133     		adds	r3, r3, #1
 4780 1048 DAB2     		uxtb	r2, r3
 4781 104a 3F4B     		ldr	r3, .L229+36
 4782 104c 1A70     		strb	r2, [r3]
1189:ui.c          ****             if (presetStoreStage >= 15)
 4783              		.loc 1 1189 0
 4784 104e 3E4B     		ldr	r3, .L229+36
 4785 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4786 1052 0E2B     		cmp	r3, #14
 4787 1054 02D9     		bls	.L190
1190:ui.c          ****             {
1191:ui.c          ****                 exitPresetStoreMenu();
 4788              		.loc 1 1191 0
 4789 1056 FFF7FEFF 		bl	exitPresetStoreMenu
 4790 105a 19E0     		b	.L111
 4791              	.L190:
1192:ui.c          ****             }
1193:ui.c          ****             else
1194:ui.c          ****             {
1195:ui.c          ****                 whatToDraw = 2;
 4792              		.loc 1 1195 0
 4793 105c 0223     		movs	r3, #2
 4794 105e 87F82730 		strb	r3, [r7, #39]
 4795 1062 15E0     		b	.L111
 4796              	.L189:
1196:ui.c          ****             }
1197:ui.c          ****         }
1198:ui.c          ****         else if (action == Left)
 4797              		.loc 1 1198 0
 4798 1064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4799 1066 002B     		cmp	r3, #0
 4800 1068 09D1     		bne	.L192
1199:ui.c          ****         {
1200:ui.c          ****             //go back to main menu
1201:ui.c          ****             menuPosition[0][0] = 0;
 4801              		.loc 1 1201 0
 4802 106a 334B     		ldr	r3, .L229+20
 4803 106c 0022     		movs	r2, #0
 4804 106e 1A70     		strb	r2, [r3]
1202:ui.c          ****             whatToDraw = 1;
 4805              		.loc 1 1202 0
 4806 1070 0123     		movs	r3, #1
 4807 1072 87F82730 		strb	r3, [r7, #39]
1203:ui.c          ****             presetStoreStage = 0;
 4808              		.loc 1 1203 0
 4809 1076 344B     		ldr	r3, .L229+36
 4810 1078 0022     		movs	r2, #0
 4811 107a 1A70     		strb	r2, [r3]
 4812 107c 08E0     		b	.L111
 4813              	.L192:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 109


1204:ui.c          ****         }
1205:ui.c          ****         else if (action == Enter)
 4814              		.loc 1 1205 0
 4815 107e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4816 1080 042B     		cmp	r3, #4
 4817 1082 05D1     		bne	.L111
1206:ui.c          ****         {
1207:ui.c          ****              exitPresetStoreMenu();
 4818              		.loc 1 1207 0
 4819 1084 FFF7FEFF 		bl	exitPresetStoreMenu
 4820 1088 02E0     		b	.L111
 4821              	.L216:
 680:ui.c          ****             {
 4822              		.loc 1 680 0
 4823 108a 00BF     		nop
 4824 108c 00E0     		b	.L111
 4825              	.L217:
 725:ui.c          ****             {
 4826              		.loc 1 725 0
 4827 108e 00BF     		nop
 4828              	.L111:
1208:ui.c          ****         }
1209:ui.c          ****         else if (action == Up)
1210:ui.c          ****         {
1211:ui.c          ****             ;
1212:ui.c          ****         }
1213:ui.c          ****         else if (action == Down)
1214:ui.c          ****         {
1215:ui.c          ****             ;
1216:ui.c          ****         }
1217:ui.c          ****         //whatToDraw = 2;
1218:ui.c          ****     }
1219:ui.c          ****     
1220:ui.c          ****     
1221:ui.c          ****     //now draw stuff
1222:ui.c          ****     if (whatToDraw == 1)
 4829              		.loc 1 1222 0
 4830 1090 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4831 1094 012B     		cmp	r3, #1
 4832 1096 5DD1     		bne	.L193
1223:ui.c          ****     {
1224:ui.c          ****         //draw main menu
1225:ui.c          ****         OLEDclear(128, 64);
 4833              		.loc 1 1225 0
 4834 1098 4021     		movs	r1, #64
 4835 109a 8020     		movs	r0, #128
 4836 109c FFF7FEFF 		bl	OLEDclear
1226:ui.c          ****         myGFX_setFont(2);
 4837              		.loc 1 1226 0
 4838 10a0 0220     		movs	r0, #2
 4839 10a2 FFF7FEFF 		bl	myGFX_setFont
 4840              	.LBB16:
1227:ui.c          ****         for (int i = 0; i < numMainMenuItems; i++)
 4841              		.loc 1 1227 0
 4842 10a6 0023     		movs	r3, #0
 4843 10a8 3B62     		str	r3, [r7, #32]
 4844 10aa 2CE0     		b	.L194
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 110


 4845              	.L197:
1228:ui.c          ****         {
1229:ui.c          ****             if (menuPosition[0][1] == i)
 4846              		.loc 1 1229 0
 4847 10ac 224B     		ldr	r3, .L229+20
 4848 10ae 93F90130 		ldrsb	r3, [r3, #1]
 4849 10b2 1A46     		mov	r2, r3
 4850 10b4 3B6A     		ldr	r3, [r7, #32]
 4851 10b6 9A42     		cmp	r2, r3
 4852 10b8 14D1     		bne	.L195
1230:ui.c          ****             {
1231:ui.c          ****                 OLEDtextColor(0, 1);
 4853              		.loc 1 1231 0
 4854 10ba 0121     		movs	r1, #1
 4855 10bc 0020     		movs	r0, #0
 4856 10be FFF7FEFF 		bl	OLEDtextColor
1232:ui.c          ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
 4857              		.loc 1 1232 0
 4858 10c2 224A     		ldr	r2, .L229+40
 4859 10c4 3B6A     		ldr	r3, [r7, #32]
 4860 10c6 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4861 10ca 3B6A     		ldr	r3, [r7, #32]
 4862 10cc DBB2     		uxtb	r3, r3
 4863 10ce 0022     		movs	r2, #0
 4864 10d0 0F21     		movs	r1, #15
 4865 10d2 FFF7FEFF 		bl	OLEDwriteString
1233:ui.c          ****                 OLEDwriteArrow(0, i);
 4866              		.loc 1 1233 0
 4867 10d6 3B6A     		ldr	r3, [r7, #32]
 4868 10d8 DBB2     		uxtb	r3, r3
 4869 10da 1946     		mov	r1, r3
 4870 10dc 0020     		movs	r0, #0
 4871 10de FFF7FEFF 		bl	OLEDwriteArrow
 4872 10e2 0DE0     		b	.L196
 4873              	.L195:
1234:ui.c          ****             }
1235:ui.c          ****             else
1236:ui.c          ****             {
1237:ui.c          ****                 OLEDtextColor(1, 0);
 4874              		.loc 1 1237 0
 4875 10e4 0021     		movs	r1, #0
 4876 10e6 0120     		movs	r0, #1
 4877 10e8 FFF7FEFF 		bl	OLEDtextColor
1238:ui.c          ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
 4878              		.loc 1 1238 0
 4879 10ec 174A     		ldr	r2, .L229+40
 4880 10ee 3B6A     		ldr	r3, [r7, #32]
 4881 10f0 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4882 10f4 3B6A     		ldr	r3, [r7, #32]
 4883 10f6 DBB2     		uxtb	r3, r3
 4884 10f8 0022     		movs	r2, #0
 4885 10fa 0F21     		movs	r1, #15
 4886 10fc FFF7FEFF 		bl	OLEDwriteString
 4887              	.L196:
1227:ui.c          ****         {
 4888              		.loc 1 1227 0 discriminator 2
 4889 1100 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 111


 4890 1102 0133     		adds	r3, r3, #1
 4891 1104 3B62     		str	r3, [r7, #32]
 4892              	.L194:
1227:ui.c          ****         {
 4893              		.loc 1 1227 0 is_stmt 0 discriminator 1
 4894 1106 124B     		ldr	r3, .L229+44
 4895 1108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4896 110a 1A46     		mov	r2, r3
 4897 110c 3B6A     		ldr	r3, [r7, #32]
 4898 110e 9A42     		cmp	r2, r3
 4899 1110 CCDC     		bgt	.L197
 4900              	.LBE16:
1239:ui.c          ****                 
1240:ui.c          ****             }
1241:ui.c          **** 
1242:ui.c          ****         }
1243:ui.c          ****         OLEDtextColor(1, 0);
 4901              		.loc 1 1243 0 is_stmt 1
 4902 1112 0021     		movs	r1, #0
 4903 1114 0120     		movs	r0, #1
 4904 1116 FFF7FEFF 		bl	OLEDtextColor
1244:ui.c          ****         mainOLEDWaitingToSend = 1;
 4905              		.loc 1 1244 0
 4906 111a 064B     		ldr	r3, .L229+16
 4907 111c 0122     		movs	r2, #1
 4908 111e 1A70     		strb	r2, [r3]
1245:ui.c          ****     }
1246:ui.c          ****     else if (whatToDraw == 2)
1247:ui.c          ****     {
1248:ui.c          ****         //store preset
1249:ui.c          ****         if (presetStoreStage == 0)
1250:ui.c          ****         {
1251:ui.c          ****             Decoder_1_Start();
1252:ui.c          ****             whatToDraw = 0;
1253:ui.c          ****             OLEDclear(128, 64);
1254:ui.c          ****             myGFX_setFont(2);
1255:ui.c          ****             OLEDtextColor(1, 0);
1256:ui.c          ****             OLEDwriteString("SELECT DEST",11 , 0, FirstLine);
1257:ui.c          ****             OLEDwriteString("LOCATION THEN ",13 , 0, SecondLine);
1258:ui.c          ****             OLEDwriteString("PUSH -> ",8 , 0, ThirdLine);
1259:ui.c          ****             OLEDtextColor(1, 0);
1260:ui.c          ****             myGFX_setFont(1);
1261:ui.c          ****             GFXsetCursor(&theGFX, 84,58);
1262:ui.c          ****            
1263:ui.c          ****             int8_t presetNumberToStoreTemp = presetNumberToStore;
1264:ui.c          **** 
1265:ui.c          ****             uint8_t currentChar = ((uint8_t)presetNumberToStoreTemp / 10);    
1266:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
1267:ui.c          ****             presetNumberToStoreTemp -= currentChar * 10;
1268:ui.c          ****             currentChar = ((uint8_t)presetNumberToStoreTemp);    
1269:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
1270:ui.c          ****             mainOLEDWaitingToSend = 1;
1271:ui.c          ****             encoderWatch = 1;
1272:ui.c          ****         }
1273:ui.c          ****         else if (presetStoreStage == 1)
1274:ui.c          ****         {
1275:ui.c          ****             whatToDraw = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 112


1276:ui.c          ****             OLEDclear(128, 64);
1277:ui.c          ****             newPresetName[0] = 'A';
1278:ui.c          ****             for (int i = 1; i < 14; i++)
1279:ui.c          ****             {
1280:ui.c          ****                 newPresetName[i] = 32;
1281:ui.c          ****             }
1282:ui.c          ****             myGFX_setFont(2);
1283:ui.c          ****             OLEDtextColor(1, 0);
1284:ui.c          ****             OLEDwriteString("USE VALUE KNOB",14 , 0, FirstLine);
1285:ui.c          ****             OLEDwriteString("TO CREATE NAME",14 , 0, SecondLine);
1286:ui.c          ****             OLEDtextColor(1, 0);
1287:ui.c          ****             myGFX_setFont(0);
1288:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
1289:ui.c          ****             
1290:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
1291:ui.c          ****             mainOLEDWaitingToSend = 1;
1292:ui.c          ****         }
1293:ui.c          ****         else
1294:ui.c          ****         {
1295:ui.c          ****             whatToDraw = 0;
1296:ui.c          ****             OLEDtextColor(1, 0);
1297:ui.c          ****             myGFX_setFont(0);
1298:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
1299:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
1300:ui.c          ****             newPresetName[presetStoreStage-1] = 'A' - 1;
1301:ui.c          ****             mainOLEDWaitingToSend = 1;
1302:ui.c          ****         }
1303:ui.c          ****     }
1304:ui.c          **** 
1305:ui.c          **** 
1306:ui.c          ****     
1307:ui.c          ****     else if (whatToDraw == 3)
1308:ui.c          ****     {
1309:ui.c          ****         //draw calibration menu
1310:ui.c          ****         OLEDclear(128, 64);
1311:ui.c          ****         myGFX_setFont(2);
1312:ui.c          ****         for (int i = 0; i < numCalibrationItems; i++)
1313:ui.c          ****         {
1314:ui.c          ****             if (menuPosition[1][1] == i)
1315:ui.c          ****             {
1316:ui.c          ****                 OLEDtextColor(0, 1);
1317:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
1318:ui.c          ****                 OLEDwriteArrow(0, i);
1319:ui.c          ****             }
1320:ui.c          ****             else
1321:ui.c          ****             {
1322:ui.c          ****                 OLEDtextColor(1, 0);
1323:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
1324:ui.c          ****                 
1325:ui.c          ****             }
1326:ui.c          ****         }
1327:ui.c          ****         OLEDtextColor(1, 0);
1328:ui.c          ****         mainOLEDWaitingToSend = 1;
1329:ui.c          ****     }
1330:ui.c          ****     else if (whatToDraw == 4)
1331:ui.c          ****     {
1332:ui.c          ****         //draw settings menu
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 113


1333:ui.c          ****         OLEDclear(128, 64);
1334:ui.c          ****         myGFX_setFont(2);
1335:ui.c          ****         uint8_t tempPos = 0;
1336:ui.c          ****         for (int i = 0; i < numSettingsItems; i++)
1337:ui.c          ****         {
1338:ui.c          ****             if (menuPosition[2][1] == i)
1339:ui.c          ****             {
1340:ui.c          ****                 OLEDtextColor(0, 1);
1341:ui.c          ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
1342:ui.c          ****                 OLEDwriteArrow(0, 0);
1343:ui.c          ****             }
1344:ui.c          ****             else if (i > menuPosition[2][1])
1345:ui.c          ****             {
1346:ui.c          ****                 OLEDtextColor(1, 0);
1347:ui.c          ****                 tempPos = (i - menuPosition[2][1]);
1348:ui.c          ****                 if (tempPos < 4)
1349:ui.c          ****                 {
1350:ui.c          ****                     OLEDwriteString(settingsNames[i], 15, 0, tempPos);
1351:ui.c          ****                 } 
1352:ui.c          ****             }
1353:ui.c          ****         }
1354:ui.c          ****         tempPos++;
1355:ui.c          ****         OLEDtextColor(1, 0);
1356:ui.c          ****         while (tempPos < 4)
1357:ui.c          ****         {
1358:ui.c          ****             OLEDwriteString("               ", 15, 0, tempPos);
1359:ui.c          ****             tempPos++;
1360:ui.c          ****         }
1361:ui.c          ****         mainOLEDWaitingToSend = 1;
1362:ui.c          ****     }
1363:ui.c          ****     
1364:ui.c          **** }
 4909              		.loc 1 1364 0
 4910 1120 90E1     		b	.L218
 4911              	.L230:
 4912 1122 00BF     		.align	2
 4913              	.L229:
 4914 1124 00000000 		.word	theGFX
 4915 1128 28020000 		.word	.LC31
 4916 112c 00000000 		.word	whichMidiSendSelected
 4917 1130 00000000 		.word	midiDebugSendOn
 4918 1134 00000000 		.word	mainOLEDWaitingToSend
 4919 1138 00000000 		.word	menuPosition
 4920 113c 00000000 		.word	whichFirmwareUpdateSelected
 4921 1140 00000000 		.word	sendFirmwareUpdateRequest
 4922 1144 40020000 		.word	.LC33
 4923 1148 00000000 		.word	presetStoreStage
 4924 114c 00000000 		.word	mainMenuNames
 4925 1150 00000000 		.word	numMainMenuItems
 4926              	.L193:
1246:ui.c          ****     {
 4927              		.loc 1 1246 0
 4928 1154 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4929 1158 022B     		cmp	r3, #2
 4930 115a 40F0C280 		bne	.L199
1249:ui.c          ****         {
 4931              		.loc 1 1249 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 114


 4932 115e BB4B     		ldr	r3, .L231
 4933 1160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4934 1162 002B     		cmp	r3, #0
 4935 1164 59D1     		bne	.L200
 4936              	.LBB17:
1251:ui.c          ****             whatToDraw = 0;
 4937              		.loc 1 1251 0
 4938 1166 FFF7FEFF 		bl	Decoder_1_Start
1252:ui.c          ****             OLEDclear(128, 64);
 4939              		.loc 1 1252 0
 4940 116a 0023     		movs	r3, #0
 4941 116c 87F82730 		strb	r3, [r7, #39]
1253:ui.c          ****             myGFX_setFont(2);
 4942              		.loc 1 1253 0
 4943 1170 4021     		movs	r1, #64
 4944 1172 8020     		movs	r0, #128
 4945 1174 FFF7FEFF 		bl	OLEDclear
1254:ui.c          ****             OLEDtextColor(1, 0);
 4946              		.loc 1 1254 0
 4947 1178 0220     		movs	r0, #2
 4948 117a FFF7FEFF 		bl	myGFX_setFont
1255:ui.c          ****             OLEDwriteString("SELECT DEST",11 , 0, FirstLine);
 4949              		.loc 1 1255 0
 4950 117e 0021     		movs	r1, #0
 4951 1180 0120     		movs	r0, #1
 4952 1182 FFF7FEFF 		bl	OLEDtextColor
1256:ui.c          ****             OLEDwriteString("LOCATION THEN ",13 , 0, SecondLine);
 4953              		.loc 1 1256 0
 4954 1186 0023     		movs	r3, #0
 4955 1188 0022     		movs	r2, #0
 4956 118a 0B21     		movs	r1, #11
 4957 118c B048     		ldr	r0, .L231+4
 4958 118e FFF7FEFF 		bl	OLEDwriteString
1257:ui.c          ****             OLEDwriteString("PUSH -> ",8 , 0, ThirdLine);
 4959              		.loc 1 1257 0
 4960 1192 0123     		movs	r3, #1
 4961 1194 0022     		movs	r2, #0
 4962 1196 0D21     		movs	r1, #13
 4963 1198 AE48     		ldr	r0, .L231+8
 4964 119a FFF7FEFF 		bl	OLEDwriteString
1258:ui.c          ****             OLEDtextColor(1, 0);
 4965              		.loc 1 1258 0
 4966 119e 0223     		movs	r3, #2
 4967 11a0 0022     		movs	r2, #0
 4968 11a2 0821     		movs	r1, #8
 4969 11a4 AC48     		ldr	r0, .L231+12
 4970 11a6 FFF7FEFF 		bl	OLEDwriteString
1259:ui.c          ****             myGFX_setFont(1);
 4971              		.loc 1 1259 0
 4972 11aa 0021     		movs	r1, #0
 4973 11ac 0120     		movs	r0, #1
 4974 11ae FFF7FEFF 		bl	OLEDtextColor
1260:ui.c          ****             GFXsetCursor(&theGFX, 84,58);
 4975              		.loc 1 1260 0
 4976 11b2 0120     		movs	r0, #1
 4977 11b4 FFF7FEFF 		bl	myGFX_setFont
1261:ui.c          ****            
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 115


 4978              		.loc 1 1261 0
 4979 11b8 3A22     		movs	r2, #58
 4980 11ba 5421     		movs	r1, #84
 4981 11bc A748     		ldr	r0, .L231+16
 4982 11be FFF7FEFF 		bl	GFXsetCursor
1263:ui.c          **** 
 4983              		.loc 1 1263 0
 4984 11c2 A74B     		ldr	r3, .L231+20
 4985 11c4 1B78     		ldrb	r3, [r3]
 4986 11c6 FB72     		strb	r3, [r7, #11]
1265:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
 4987              		.loc 1 1265 0
 4988 11c8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4989 11ca A64A     		ldr	r2, .L231+24
 4990 11cc A2FB0323 		umull	r2, r3, r2, r3
 4991 11d0 DB08     		lsrs	r3, r3, #3
 4992 11d2 BB72     		strb	r3, [r7, #10]
1266:ui.c          ****             presetNumberToStoreTemp -= currentChar * 10;
 4993              		.loc 1 1266 0
 4994 11d4 BB7A     		ldrb	r3, [r7, #10]
 4995 11d6 3033     		adds	r3, r3, #48
 4996 11d8 DBB2     		uxtb	r3, r3
 4997 11da 1946     		mov	r1, r3
 4998 11dc 9F48     		ldr	r0, .L231+16
 4999 11de FFF7FEFF 		bl	GFXwrite
1267:ui.c          ****             currentChar = ((uint8_t)presetNumberToStoreTemp);    
 5000              		.loc 1 1267 0
 5001 11e2 BB7A     		ldrb	r3, [r7, #10]
 5002 11e4 1A46     		mov	r2, r3
 5003 11e6 5201     		lsls	r2, r2, #5
 5004 11e8 D21A     		subs	r2, r2, r3
 5005 11ea 9200     		lsls	r2, r2, #2
 5006 11ec D31A     		subs	r3, r2, r3
 5007 11ee 5B00     		lsls	r3, r3, #1
 5008 11f0 DAB2     		uxtb	r2, r3
 5009 11f2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 5010 11f4 1344     		add	r3, r3, r2
 5011 11f6 DBB2     		uxtb	r3, r3
 5012 11f8 FB72     		strb	r3, [r7, #11]
1268:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
 5013              		.loc 1 1268 0
 5014 11fa FB7A     		ldrb	r3, [r7, #11]
 5015 11fc BB72     		strb	r3, [r7, #10]
1269:ui.c          ****             mainOLEDWaitingToSend = 1;
 5016              		.loc 1 1269 0
 5017 11fe BB7A     		ldrb	r3, [r7, #10]
 5018 1200 3033     		adds	r3, r3, #48
 5019 1202 DBB2     		uxtb	r3, r3
 5020 1204 1946     		mov	r1, r3
 5021 1206 9548     		ldr	r0, .L231+16
 5022 1208 FFF7FEFF 		bl	GFXwrite
1270:ui.c          ****             encoderWatch = 1;
 5023              		.loc 1 1270 0
 5024 120c 964B     		ldr	r3, .L231+28
 5025 120e 0122     		movs	r2, #1
 5026 1210 1A70     		strb	r2, [r3]
1271:ui.c          ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 116


 5027              		.loc 1 1271 0
 5028 1212 964B     		ldr	r3, .L231+32
 5029 1214 0122     		movs	r2, #1
 5030 1216 1A70     		strb	r2, [r3]
 5031              	.LBE17:
 5032              		.loc 1 1364 0
 5033 1218 14E1     		b	.L218
 5034              	.L200:
1273:ui.c          ****         {
 5035              		.loc 1 1273 0
 5036 121a 8C4B     		ldr	r3, .L231
 5037 121c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5038 121e 012B     		cmp	r3, #1
 5039 1220 40D1     		bne	.L202
1275:ui.c          ****             OLEDclear(128, 64);
 5040              		.loc 1 1275 0
 5041 1222 0023     		movs	r3, #0
 5042 1224 87F82730 		strb	r3, [r7, #39]
1276:ui.c          ****             newPresetName[0] = 'A';
 5043              		.loc 1 1276 0
 5044 1228 4021     		movs	r1, #64
 5045 122a 8020     		movs	r0, #128
 5046 122c FFF7FEFF 		bl	OLEDclear
1277:ui.c          ****             for (int i = 1; i < 14; i++)
 5047              		.loc 1 1277 0
 5048 1230 8F4B     		ldr	r3, .L231+36
 5049 1232 4122     		movs	r2, #65
 5050 1234 1A70     		strb	r2, [r3]
 5051              	.LBB18:
1278:ui.c          ****             {
 5052              		.loc 1 1278 0
 5053 1236 0123     		movs	r3, #1
 5054 1238 FB61     		str	r3, [r7, #28]
 5055 123a 07E0     		b	.L203
 5056              	.L204:
1280:ui.c          ****             }
 5057              		.loc 1 1280 0 discriminator 3
 5058 123c 8C4A     		ldr	r2, .L231+36
 5059 123e FB69     		ldr	r3, [r7, #28]
 5060 1240 1344     		add	r3, r3, r2
 5061 1242 2022     		movs	r2, #32
 5062 1244 1A70     		strb	r2, [r3]
1278:ui.c          ****             {
 5063              		.loc 1 1278 0 discriminator 3
 5064 1246 FB69     		ldr	r3, [r7, #28]
 5065 1248 0133     		adds	r3, r3, #1
 5066 124a FB61     		str	r3, [r7, #28]
 5067              	.L203:
1278:ui.c          ****             {
 5068              		.loc 1 1278 0 is_stmt 0 discriminator 1
 5069 124c FB69     		ldr	r3, [r7, #28]
 5070 124e 0D2B     		cmp	r3, #13
 5071 1250 F4DD     		ble	.L204
 5072              	.LBE18:
1282:ui.c          ****             OLEDtextColor(1, 0);
 5073              		.loc 1 1282 0 is_stmt 1
 5074 1252 0220     		movs	r0, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 117


 5075 1254 FFF7FEFF 		bl	myGFX_setFont
1283:ui.c          ****             OLEDwriteString("USE VALUE KNOB",14 , 0, FirstLine);
 5076              		.loc 1 1283 0
 5077 1258 0021     		movs	r1, #0
 5078 125a 0120     		movs	r0, #1
 5079 125c FFF7FEFF 		bl	OLEDtextColor
1284:ui.c          ****             OLEDwriteString("TO CREATE NAME",14 , 0, SecondLine);
 5080              		.loc 1 1284 0
 5081 1260 0023     		movs	r3, #0
 5082 1262 0022     		movs	r2, #0
 5083 1264 0E21     		movs	r1, #14
 5084 1266 8348     		ldr	r0, .L231+40
 5085 1268 FFF7FEFF 		bl	OLEDwriteString
1285:ui.c          ****             OLEDtextColor(1, 0);
 5086              		.loc 1 1285 0
 5087 126c 0123     		movs	r3, #1
 5088 126e 0022     		movs	r2, #0
 5089 1270 0E21     		movs	r1, #14
 5090 1272 8148     		ldr	r0, .L231+44
 5091 1274 FFF7FEFF 		bl	OLEDwriteString
1286:ui.c          ****             myGFX_setFont(0);
 5092              		.loc 1 1286 0
 5093 1278 0021     		movs	r1, #0
 5094 127a 0120     		movs	r0, #1
 5095 127c FFF7FEFF 		bl	OLEDtextColor
1287:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
 5096              		.loc 1 1287 0
 5097 1280 0020     		movs	r0, #0
 5098 1282 FFF7FEFF 		bl	myGFX_setFont
1288:ui.c          ****             
 5099              		.loc 1 1288 0
 5100 1286 3222     		movs	r2, #50
 5101 1288 0021     		movs	r1, #0
 5102 128a 7448     		ldr	r0, .L231+16
 5103 128c FFF7FEFF 		bl	GFXsetCursor
1290:ui.c          ****             mainOLEDWaitingToSend = 1;
 5104              		.loc 1 1290 0
 5105 1290 0223     		movs	r3, #2
 5106 1292 0022     		movs	r2, #0
 5107 1294 0E21     		movs	r1, #14
 5108 1296 7648     		ldr	r0, .L231+36
 5109 1298 FFF7FEFF 		bl	OLEDwriteString
1291:ui.c          ****         }
 5110              		.loc 1 1291 0
 5111 129c 724B     		ldr	r3, .L231+28
 5112 129e 0122     		movs	r2, #1
 5113 12a0 1A70     		strb	r2, [r3]
 5114              		.loc 1 1364 0
 5115 12a2 CFE0     		b	.L218
 5116              	.L202:
1295:ui.c          ****             OLEDtextColor(1, 0);
 5117              		.loc 1 1295 0
 5118 12a4 0023     		movs	r3, #0
 5119 12a6 87F82730 		strb	r3, [r7, #39]
1296:ui.c          ****             myGFX_setFont(0);
 5120              		.loc 1 1296 0
 5121 12aa 0021     		movs	r1, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 118


 5122 12ac 0120     		movs	r0, #1
 5123 12ae FFF7FEFF 		bl	OLEDtextColor
1297:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
 5124              		.loc 1 1297 0
 5125 12b2 0020     		movs	r0, #0
 5126 12b4 FFF7FEFF 		bl	myGFX_setFont
1298:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
 5127              		.loc 1 1298 0
 5128 12b8 3222     		movs	r2, #50
 5129 12ba 0021     		movs	r1, #0
 5130 12bc 6748     		ldr	r0, .L231+16
 5131 12be FFF7FEFF 		bl	GFXsetCursor
1299:ui.c          ****             newPresetName[presetStoreStage-1] = 'A' - 1;
 5132              		.loc 1 1299 0
 5133 12c2 0223     		movs	r3, #2
 5134 12c4 0022     		movs	r2, #0
 5135 12c6 0E21     		movs	r1, #14
 5136 12c8 6948     		ldr	r0, .L231+36
 5137 12ca FFF7FEFF 		bl	OLEDwriteString
1300:ui.c          ****             mainOLEDWaitingToSend = 1;
 5138              		.loc 1 1300 0
 5139 12ce 5F4B     		ldr	r3, .L231
 5140 12d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5141 12d2 013B     		subs	r3, r3, #1
 5142 12d4 664A     		ldr	r2, .L231+36
 5143 12d6 4021     		movs	r1, #64
 5144 12d8 D154     		strb	r1, [r2, r3]
1301:ui.c          ****         }
 5145              		.loc 1 1301 0
 5146 12da 634B     		ldr	r3, .L231+28
 5147 12dc 0122     		movs	r2, #1
 5148 12de 1A70     		strb	r2, [r3]
 5149              		.loc 1 1364 0
 5150 12e0 B0E0     		b	.L218
 5151              	.L199:
1307:ui.c          ****     {
 5152              		.loc 1 1307 0
 5153 12e2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5154 12e6 032B     		cmp	r3, #3
 5155 12e8 44D1     		bne	.L205
1310:ui.c          ****         myGFX_setFont(2);
 5156              		.loc 1 1310 0
 5157 12ea 4021     		movs	r1, #64
 5158 12ec 8020     		movs	r0, #128
 5159 12ee FFF7FEFF 		bl	OLEDclear
1311:ui.c          ****         for (int i = 0; i < numCalibrationItems; i++)
 5160              		.loc 1 1311 0
 5161 12f2 0220     		movs	r0, #2
 5162 12f4 FFF7FEFF 		bl	myGFX_setFont
 5163              	.LBB19:
1312:ui.c          ****         {
 5164              		.loc 1 1312 0
 5165 12f8 0023     		movs	r3, #0
 5166 12fa BB61     		str	r3, [r7, #24]
 5167 12fc 2CE0     		b	.L206
 5168              	.L209:
1314:ui.c          ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 119


 5169              		.loc 1 1314 0
 5170 12fe 5F4B     		ldr	r3, .L231+48
 5171 1300 93F90330 		ldrsb	r3, [r3, #3]
 5172 1304 1A46     		mov	r2, r3
 5173 1306 BB69     		ldr	r3, [r7, #24]
 5174 1308 9A42     		cmp	r2, r3
 5175 130a 14D1     		bne	.L207
1316:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 5176              		.loc 1 1316 0
 5177 130c 0121     		movs	r1, #1
 5178 130e 0020     		movs	r0, #0
 5179 1310 FFF7FEFF 		bl	OLEDtextColor
1317:ui.c          ****                 OLEDwriteArrow(0, i);
 5180              		.loc 1 1317 0
 5181 1314 5A4A     		ldr	r2, .L231+52
 5182 1316 BB69     		ldr	r3, [r7, #24]
 5183 1318 52F82300 		ldr	r0, [r2, r3, lsl #2]
 5184 131c BB69     		ldr	r3, [r7, #24]
 5185 131e DBB2     		uxtb	r3, r3
 5186 1320 0022     		movs	r2, #0
 5187 1322 0F21     		movs	r1, #15
 5188 1324 FFF7FEFF 		bl	OLEDwriteString
1318:ui.c          ****             }
 5189              		.loc 1 1318 0
 5190 1328 BB69     		ldr	r3, [r7, #24]
 5191 132a DBB2     		uxtb	r3, r3
 5192 132c 1946     		mov	r1, r3
 5193 132e 0020     		movs	r0, #0
 5194 1330 FFF7FEFF 		bl	OLEDwriteArrow
 5195 1334 0DE0     		b	.L208
 5196              	.L207:
1322:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 5197              		.loc 1 1322 0
 5198 1336 0021     		movs	r1, #0
 5199 1338 0120     		movs	r0, #1
 5200 133a FFF7FEFF 		bl	OLEDtextColor
1323:ui.c          ****                 
 5201              		.loc 1 1323 0
 5202 133e 504A     		ldr	r2, .L231+52
 5203 1340 BB69     		ldr	r3, [r7, #24]
 5204 1342 52F82300 		ldr	r0, [r2, r3, lsl #2]
 5205 1346 BB69     		ldr	r3, [r7, #24]
 5206 1348 DBB2     		uxtb	r3, r3
 5207 134a 0022     		movs	r2, #0
 5208 134c 0F21     		movs	r1, #15
 5209 134e FFF7FEFF 		bl	OLEDwriteString
 5210              	.L208:
1312:ui.c          ****         {
 5211              		.loc 1 1312 0 discriminator 2
 5212 1352 BB69     		ldr	r3, [r7, #24]
 5213 1354 0133     		adds	r3, r3, #1
 5214 1356 BB61     		str	r3, [r7, #24]
 5215              	.L206:
1312:ui.c          ****         {
 5216              		.loc 1 1312 0 is_stmt 0 discriminator 1
 5217 1358 4A4B     		ldr	r3, .L231+56
 5218 135a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 120


 5219 135c 1A46     		mov	r2, r3
 5220 135e BB69     		ldr	r3, [r7, #24]
 5221 1360 9A42     		cmp	r2, r3
 5222 1362 CCDC     		bgt	.L209
 5223              	.LBE19:
1327:ui.c          ****         mainOLEDWaitingToSend = 1;
 5224              		.loc 1 1327 0 is_stmt 1
 5225 1364 0021     		movs	r1, #0
 5226 1366 0120     		movs	r0, #1
 5227 1368 FFF7FEFF 		bl	OLEDtextColor
1328:ui.c          ****     }
 5228              		.loc 1 1328 0
 5229 136c 3E4B     		ldr	r3, .L231+28
 5230 136e 0122     		movs	r2, #1
 5231 1370 1A70     		strb	r2, [r3]
 5232              		.loc 1 1364 0
 5233 1372 67E0     		b	.L218
 5234              	.L205:
1330:ui.c          ****     {
 5235              		.loc 1 1330 0
 5236 1374 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5237 1378 042B     		cmp	r3, #4
 5238 137a 63D1     		bne	.L218
 5239              	.LBB20:
1333:ui.c          ****         myGFX_setFont(2);
 5240              		.loc 1 1333 0
 5241 137c 4021     		movs	r1, #64
 5242 137e 8020     		movs	r0, #128
 5243 1380 FFF7FEFF 		bl	OLEDclear
1334:ui.c          ****         uint8_t tempPos = 0;
 5244              		.loc 1 1334 0
 5245 1384 0220     		movs	r0, #2
 5246 1386 FFF7FEFF 		bl	myGFX_setFont
1335:ui.c          ****         for (int i = 0; i < numSettingsItems; i++)
 5247              		.loc 1 1335 0
 5248 138a 0023     		movs	r3, #0
 5249 138c FB75     		strb	r3, [r7, #23]
 5250              	.LBB21:
1336:ui.c          ****         {
 5251              		.loc 1 1336 0
 5252 138e 0023     		movs	r3, #0
 5253 1390 3B61     		str	r3, [r7, #16]
 5254 1392 3AE0     		b	.L210
 5255              	.L213:
1338:ui.c          ****             {
 5256              		.loc 1 1338 0
 5257 1394 394B     		ldr	r3, .L231+48
 5258 1396 93F90530 		ldrsb	r3, [r3, #5]
 5259 139a 1A46     		mov	r2, r3
 5260 139c 3B69     		ldr	r3, [r7, #16]
 5261 139e 9A42     		cmp	r2, r3
 5262 13a0 11D1     		bne	.L211
1340:ui.c          ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
 5263              		.loc 1 1340 0
 5264 13a2 0121     		movs	r1, #1
 5265 13a4 0020     		movs	r0, #0
 5266 13a6 FFF7FEFF 		bl	OLEDtextColor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 121


1341:ui.c          ****                 OLEDwriteArrow(0, 0);
 5267              		.loc 1 1341 0
 5268 13aa 374A     		ldr	r2, .L231+60
 5269 13ac 3B69     		ldr	r3, [r7, #16]
 5270 13ae 52F82300 		ldr	r0, [r2, r3, lsl #2]
 5271 13b2 0023     		movs	r3, #0
 5272 13b4 0022     		movs	r2, #0
 5273 13b6 0F21     		movs	r1, #15
 5274 13b8 FFF7FEFF 		bl	OLEDwriteString
1342:ui.c          ****             }
 5275              		.loc 1 1342 0
 5276 13bc 0021     		movs	r1, #0
 5277 13be 0020     		movs	r0, #0
 5278 13c0 FFF7FEFF 		bl	OLEDwriteArrow
 5279 13c4 1EE0     		b	.L212
 5280              	.L211:
1344:ui.c          ****             {
 5281              		.loc 1 1344 0
 5282 13c6 2D4B     		ldr	r3, .L231+48
 5283 13c8 93F90530 		ldrsb	r3, [r3, #5]
 5284 13cc 1A46     		mov	r2, r3
 5285 13ce 3B69     		ldr	r3, [r7, #16]
 5286 13d0 9A42     		cmp	r2, r3
 5287 13d2 17DA     		bge	.L212
1346:ui.c          ****                 tempPos = (i - menuPosition[2][1]);
 5288              		.loc 1 1346 0
 5289 13d4 0021     		movs	r1, #0
 5290 13d6 0120     		movs	r0, #1
 5291 13d8 FFF7FEFF 		bl	OLEDtextColor
1347:ui.c          ****                 if (tempPos < 4)
 5292              		.loc 1 1347 0
 5293 13dc 3B69     		ldr	r3, [r7, #16]
 5294 13de DAB2     		uxtb	r2, r3
 5295 13e0 264B     		ldr	r3, .L231+48
 5296 13e2 93F90530 		ldrsb	r3, [r3, #5]
 5297 13e6 DBB2     		uxtb	r3, r3
 5298 13e8 D31A     		subs	r3, r2, r3
 5299 13ea FB75     		strb	r3, [r7, #23]
1348:ui.c          ****                 {
 5300              		.loc 1 1348 0
 5301 13ec FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5302 13ee 032B     		cmp	r3, #3
 5303 13f0 08D8     		bhi	.L212
1350:ui.c          ****                 } 
 5304              		.loc 1 1350 0
 5305 13f2 254A     		ldr	r2, .L231+60
 5306 13f4 3B69     		ldr	r3, [r7, #16]
 5307 13f6 52F82300 		ldr	r0, [r2, r3, lsl #2]
 5308 13fa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5309 13fc 0022     		movs	r2, #0
 5310 13fe 0F21     		movs	r1, #15
 5311 1400 FFF7FEFF 		bl	OLEDwriteString
 5312              	.L212:
1336:ui.c          ****         {
 5313              		.loc 1 1336 0 discriminator 2
 5314 1404 3B69     		ldr	r3, [r7, #16]
 5315 1406 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 122


 5316 1408 3B61     		str	r3, [r7, #16]
 5317              	.L210:
1336:ui.c          ****         {
 5318              		.loc 1 1336 0 is_stmt 0 discriminator 1
 5319 140a 204B     		ldr	r3, .L231+64
 5320 140c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5321 140e 1A46     		mov	r2, r3
 5322 1410 3B69     		ldr	r3, [r7, #16]
 5323 1412 9A42     		cmp	r2, r3
 5324 1414 BEDC     		bgt	.L213
 5325              	.LBE21:
1354:ui.c          ****         OLEDtextColor(1, 0);
 5326              		.loc 1 1354 0 is_stmt 1
 5327 1416 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5328 1418 0133     		adds	r3, r3, #1
 5329 141a FB75     		strb	r3, [r7, #23]
1355:ui.c          ****         while (tempPos < 4)
 5330              		.loc 1 1355 0
 5331 141c 0021     		movs	r1, #0
 5332 141e 0120     		movs	r0, #1
 5333 1420 FFF7FEFF 		bl	OLEDtextColor
1356:ui.c          ****         {
 5334              		.loc 1 1356 0
 5335 1424 08E0     		b	.L214
 5336              	.L215:
1358:ui.c          ****             tempPos++;
 5337              		.loc 1 1358 0
 5338 1426 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5339 1428 0022     		movs	r2, #0
 5340 142a 0F21     		movs	r1, #15
 5341 142c 1848     		ldr	r0, .L231+68
 5342 142e FFF7FEFF 		bl	OLEDwriteString
1359:ui.c          ****         }
 5343              		.loc 1 1359 0
 5344 1432 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5345 1434 0133     		adds	r3, r3, #1
 5346 1436 FB75     		strb	r3, [r7, #23]
 5347              	.L214:
1356:ui.c          ****         {
 5348              		.loc 1 1356 0
 5349 1438 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5350 143a 032B     		cmp	r3, #3
 5351 143c F3D9     		bls	.L215
1361:ui.c          ****     }
 5352              		.loc 1 1361 0
 5353 143e 0A4B     		ldr	r3, .L231+28
 5354 1440 0122     		movs	r2, #1
 5355 1442 1A70     		strb	r2, [r3]
 5356              	.L218:
 5357              	.LBE20:
 5358              		.loc 1 1364 0
 5359 1444 00BF     		nop
 5360 1446 2837     		adds	r7, r7, #40
 5361              		.cfi_def_cfa_offset 8
 5362 1448 BD46     		mov	sp, r7
 5363              		.cfi_def_cfa_register 13
 5364              		@ sp needed
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 123


 5365 144a 80BD     		pop	{r7, pc}
 5366              	.L232:
 5367              		.align	2
 5368              	.L231:
 5369 144c 00000000 		.word	presetStoreStage
 5370 1450 90020000 		.word	.LC38
 5371 1454 9C020000 		.word	.LC39
 5372 1458 AC020000 		.word	.LC40
 5373 145c 00000000 		.word	theGFX
 5374 1460 00000000 		.word	presetNumberToStore
 5375 1464 CDCCCCCC 		.word	-858993459
 5376 1468 00000000 		.word	mainOLEDWaitingToSend
 5377 146c 00000000 		.word	encoderWatch
 5378 1470 00000000 		.word	newPresetName
 5379 1474 B8020000 		.word	.LC41
 5380 1478 C8020000 		.word	.LC42
 5381 147c 00000000 		.word	menuPosition
 5382 1480 00000000 		.word	calibrationNames
 5383 1484 00000000 		.word	numCalibrationItems
 5384 1488 00000000 		.word	settingsNames
 5385 148c 00000000 		.word	numSettingsItems
 5386 1490 D8020000 		.word	.LC43
 5387              		.cfi_endproc
 5388              	.LFE67:
 5389              		.size	menuAction, .-menuAction
 5390              		.section	.text.leftPressed,"ax",%progbits
 5391              		.align	2
 5392              		.global	leftPressed
 5393              		.thumb
 5394              		.thumb_func
 5395              		.type	leftPressed, %function
 5396              	leftPressed:
 5397              	.LFB68:
1365:ui.c          **** 
1366:ui.c          **** void leftPressed()
1367:ui.c          **** {
 5398              		.loc 1 1367 0
 5399              		.cfi_startproc
 5400              		@ args = 0, pretend = 0, frame = 0
 5401              		@ frame_needed = 1, uses_anonymous_args = 0
 5402 0000 80B5     		push	{r7, lr}
 5403              		.cfi_def_cfa_offset 8
 5404              		.cfi_offset 7, -8
 5405              		.cfi_offset 14, -4
 5406 0002 00AF     		add	r7, sp, #0
 5407              		.cfi_def_cfa_register 7
1368:ui.c          ****     if (!editMode) //normal behavior
 5408              		.loc 1 1368 0
 5409 0004 204B     		ldr	r3, .L239
 5410 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5411 0008 002B     		cmp	r3, #0
 5412 000a 38D1     		bne	.L234
1369:ui.c          ****     {
1370:ui.c          ****         if (currentCopedent == 0)
 5413              		.loc 1 1370 0
 5414 000c 1F4B     		ldr	r3, .L239+4
 5415 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 124


 5416 0010 002B     		cmp	r3, #0
 5417 0012 03D1     		bne	.L235
1371:ui.c          ****         {
1372:ui.c          ****             currentCopedent = MAX_NUM_COPEDENTS-1;
 5418              		.loc 1 1372 0
 5419 0014 1D4B     		ldr	r3, .L239+4
 5420 0016 0622     		movs	r2, #6
 5421 0018 1A70     		strb	r2, [r3]
 5422 001a 05E0     		b	.L236
 5423              	.L235:
1373:ui.c          ****         }
1374:ui.c          ****         else
1375:ui.c          ****         {
1376:ui.c          ****             currentCopedent -= 1;
 5424              		.loc 1 1376 0
 5425 001c 1B4B     		ldr	r3, .L239+4
 5426 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5427 0020 013B     		subs	r3, r3, #1
 5428 0022 DAB2     		uxtb	r2, r3
 5429 0024 194B     		ldr	r3, .L239+4
 5430 0026 1A70     		strb	r2, [r3]
 5431              	.L236:
1377:ui.c          ****         }
1378:ui.c          ****         necks[currentNeck] = currentCopedent;
 5432              		.loc 1 1378 0
 5433 0028 194B     		ldr	r3, .L239+8
 5434 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5435 002c 1A46     		mov	r2, r3
 5436 002e 174B     		ldr	r3, .L239+4
 5437 0030 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5438 0032 184B     		ldr	r3, .L239+12
 5439 0034 9954     		strb	r1, [r3, r2]
1379:ui.c          ****         neckByte = 0;
 5440              		.loc 1 1379 0
 5441 0036 184B     		ldr	r3, .L239+16
 5442 0038 0022     		movs	r2, #0
 5443 003a 1A70     		strb	r2, [r3]
1380:ui.c          ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 5444              		.loc 1 1380 0
 5445 003c 154B     		ldr	r3, .L239+12
 5446 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5447 0040 5B01     		lsls	r3, r3, #5
 5448 0042 DAB2     		uxtb	r2, r3
 5449 0044 134B     		ldr	r3, .L239+12
 5450 0046 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5451 0048 9B00     		lsls	r3, r3, #2
 5452 004a DBB2     		uxtb	r3, r3
 5453 004c 1344     		add	r3, r3, r2
 5454 004e DAB2     		uxtb	r2, r3
 5455 0050 0F4B     		ldr	r3, .L239+8
 5456 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5457 0054 1344     		add	r3, r3, r2
 5458 0056 DBB2     		uxtb	r3, r3
 5459 0058 5AB2     		sxtb	r2, r3
 5460 005a 0F4B     		ldr	r3, .L239+16
 5461 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5462 005e 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 125


 5463 0060 1343     		orrs	r3, r3, r2
 5464 0062 5BB2     		sxtb	r3, r3
 5465 0064 DAB2     		uxtb	r2, r3
 5466 0066 0C4B     		ldr	r3, .L239+16
 5467 0068 1A70     		strb	r2, [r3]
1381:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 5468              		.loc 1 1381 0
 5469 006a 0B4B     		ldr	r3, .L239+16
 5470 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5471 006e 40F2E371 		movw	r1, #2019
 5472 0072 1846     		mov	r0, r3
 5473 0074 FFF7FEFF 		bl	EEPROM_WriteByte
1382:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5474              		.loc 1 1382 0
 5475 0078 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1383:ui.c          ****     }
1384:ui.c          ****     else
1385:ui.c          ****     {
1386:ui.c          ****         menuAction(Left);
1387:ui.c          ****     }
1388:ui.c          **** }
 5476              		.loc 1 1388 0
 5477 007c 02E0     		b	.L238
 5478              	.L234:
1386:ui.c          ****     }
 5479              		.loc 1 1386 0
 5480 007e 0020     		movs	r0, #0
 5481 0080 FFF7FEFF 		bl	menuAction
 5482              	.L238:
 5483              		.loc 1 1388 0
 5484 0084 00BF     		nop
 5485 0086 80BD     		pop	{r7, pc}
 5486              	.L240:
 5487              		.align	2
 5488              	.L239:
 5489 0088 00000000 		.word	editMode
 5490 008c 00000000 		.word	currentCopedent
 5491 0090 00000000 		.word	currentNeck
 5492 0094 00000000 		.word	necks
 5493 0098 00000000 		.word	neckByte
 5494              		.cfi_endproc
 5495              	.LFE68:
 5496              		.size	leftPressed, .-leftPressed
 5497              		.section	.text.rightPressed,"ax",%progbits
 5498              		.align	2
 5499              		.global	rightPressed
 5500              		.thumb
 5501              		.thumb_func
 5502              		.type	rightPressed, %function
 5503              	rightPressed:
 5504              	.LFB69:
1389:ui.c          **** 
1390:ui.c          **** void rightPressed()
1391:ui.c          **** {
 5505              		.loc 1 1391 0
 5506              		.cfi_startproc
 5507              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 126


 5508              		@ frame_needed = 1, uses_anonymous_args = 0
 5509 0000 80B5     		push	{r7, lr}
 5510              		.cfi_def_cfa_offset 8
 5511              		.cfi_offset 7, -8
 5512              		.cfi_offset 14, -4
 5513 0002 00AF     		add	r7, sp, #0
 5514              		.cfi_def_cfa_register 7
1392:ui.c          ****     if (!editMode) //normal behavior
 5515              		.loc 1 1392 0
 5516 0004 204B     		ldr	r3, .L246
 5517 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5518 0008 002B     		cmp	r3, #0
 5519 000a 37D1     		bne	.L242
1393:ui.c          ****     {
1394:ui.c          ****         currentCopedent += 1;
 5520              		.loc 1 1394 0
 5521 000c 1F4B     		ldr	r3, .L246+4
 5522 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5523 0010 0133     		adds	r3, r3, #1
 5524 0012 DAB2     		uxtb	r2, r3
 5525 0014 1D4B     		ldr	r3, .L246+4
 5526 0016 1A70     		strb	r2, [r3]
1395:ui.c          ****         if (currentCopedent >= MAX_NUM_COPEDENTS)
 5527              		.loc 1 1395 0
 5528 0018 1C4B     		ldr	r3, .L246+4
 5529 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5530 001c 062B     		cmp	r3, #6
 5531 001e 02D9     		bls	.L243
1396:ui.c          ****         {
1397:ui.c          ****             currentCopedent = 0;
 5532              		.loc 1 1397 0
 5533 0020 1A4B     		ldr	r3, .L246+4
 5534 0022 0022     		movs	r2, #0
 5535 0024 1A70     		strb	r2, [r3]
 5536              	.L243:
1398:ui.c          ****         }
1399:ui.c          ****         necks[currentNeck] = currentCopedent;
 5537              		.loc 1 1399 0
 5538 0026 1A4B     		ldr	r3, .L246+8
 5539 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5540 002a 1A46     		mov	r2, r3
 5541 002c 174B     		ldr	r3, .L246+4
 5542 002e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5543 0030 184B     		ldr	r3, .L246+12
 5544 0032 9954     		strb	r1, [r3, r2]
1400:ui.c          ****         neckByte = 0;
 5545              		.loc 1 1400 0
 5546 0034 184B     		ldr	r3, .L246+16
 5547 0036 0022     		movs	r2, #0
 5548 0038 1A70     		strb	r2, [r3]
1401:ui.c          ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 5549              		.loc 1 1401 0
 5550 003a 164B     		ldr	r3, .L246+12
 5551 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5552 003e 5B01     		lsls	r3, r3, #5
 5553 0040 DAB2     		uxtb	r2, r3
 5554 0042 144B     		ldr	r3, .L246+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 127


 5555 0044 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5556 0046 9B00     		lsls	r3, r3, #2
 5557 0048 DBB2     		uxtb	r3, r3
 5558 004a 1344     		add	r3, r3, r2
 5559 004c DAB2     		uxtb	r2, r3
 5560 004e 104B     		ldr	r3, .L246+8
 5561 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5562 0052 1344     		add	r3, r3, r2
 5563 0054 DBB2     		uxtb	r3, r3
 5564 0056 5AB2     		sxtb	r2, r3
 5565 0058 0F4B     		ldr	r3, .L246+16
 5566 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5567 005c 5BB2     		sxtb	r3, r3
 5568 005e 1343     		orrs	r3, r3, r2
 5569 0060 5BB2     		sxtb	r3, r3
 5570 0062 DAB2     		uxtb	r2, r3
 5571 0064 0C4B     		ldr	r3, .L246+16
 5572 0066 1A70     		strb	r2, [r3]
1402:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 5573              		.loc 1 1402 0
 5574 0068 0B4B     		ldr	r3, .L246+16
 5575 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5576 006c 40F2E371 		movw	r1, #2019
 5577 0070 1846     		mov	r0, r3
 5578 0072 FFF7FEFF 		bl	EEPROM_WriteByte
1403:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5579              		.loc 1 1403 0
 5580 0076 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1404:ui.c          ****     }
1405:ui.c          ****     else
1406:ui.c          ****     {
1407:ui.c          ****        menuAction(Right);
1408:ui.c          ****     }
1409:ui.c          **** }
 5581              		.loc 1 1409 0
 5582 007a 02E0     		b	.L245
 5583              	.L242:
1407:ui.c          ****     }
 5584              		.loc 1 1407 0
 5585 007c 0120     		movs	r0, #1
 5586 007e FFF7FEFF 		bl	menuAction
 5587              	.L245:
 5588              		.loc 1 1409 0
 5589 0082 00BF     		nop
 5590 0084 80BD     		pop	{r7, pc}
 5591              	.L247:
 5592 0086 00BF     		.align	2
 5593              	.L246:
 5594 0088 00000000 		.word	editMode
 5595 008c 00000000 		.word	currentCopedent
 5596 0090 00000000 		.word	currentNeck
 5597 0094 00000000 		.word	necks
 5598 0098 00000000 		.word	neckByte
 5599              		.cfi_endproc
 5600              	.LFE69:
 5601              		.size	rightPressed, .-rightPressed
 5602              		.section	.text.downPressed,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 128


 5603              		.align	2
 5604              		.global	downPressed
 5605              		.thumb
 5606              		.thumb_func
 5607              		.type	downPressed, %function
 5608              	downPressed:
 5609              	.LFB70:
1410:ui.c          **** 
1411:ui.c          **** void downPressed()
1412:ui.c          **** {
 5610              		.loc 1 1412 0
 5611              		.cfi_startproc
 5612              		@ args = 0, pretend = 0, frame = 0
 5613              		@ frame_needed = 1, uses_anonymous_args = 0
 5614 0000 80B5     		push	{r7, lr}
 5615              		.cfi_def_cfa_offset 8
 5616              		.cfi_offset 7, -8
 5617              		.cfi_offset 14, -4
 5618 0002 00AF     		add	r7, sp, #0
 5619              		.cfi_def_cfa_register 7
1413:ui.c          ****     if (!editMode) //normal behavior
 5620              		.loc 1 1413 0
 5621 0004 194B     		ldr	r3, .L252
 5622 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5623 0008 002B     		cmp	r3, #0
 5624 000a 29D1     		bne	.L249
1414:ui.c          ****     {
1415:ui.c          ****         patchNum -= 1;
 5625              		.loc 1 1415 0
 5626 000c 184B     		ldr	r3, .L252+4
 5627 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5628 0010 013B     		subs	r3, r3, #1
 5629 0012 DAB2     		uxtb	r2, r3
 5630 0014 164B     		ldr	r3, .L252+4
 5631 0016 1A70     		strb	r2, [r3]
1416:ui.c          ****         patchNum &= 63;
 5632              		.loc 1 1416 0
 5633 0018 154B     		ldr	r3, .L252+4
 5634 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5635 001c 03F03F03 		and	r3, r3, #63
 5636 0020 DAB2     		uxtb	r2, r3
 5637 0022 134B     		ldr	r3, .L252+4
 5638 0024 1A70     		strb	r2, [r3]
1417:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 5639              		.loc 1 1417 0
 5640 0026 124B     		ldr	r3, .L252+4
 5641 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5642 002a 40F2D671 		movw	r1, #2006
 5643 002e 1846     		mov	r0, r3
 5644 0030 FFF7FEFF 		bl	EEPROM_WriteByte
1418:ui.c          ****         
1419:ui.c          ****         neckPreset[currentNeck] = patchNum;
 5645              		.loc 1 1419 0
 5646 0034 0F4B     		ldr	r3, .L252+8
 5647 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5648 0038 1A46     		mov	r2, r3
 5649 003a 0D4B     		ldr	r3, .L252+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 129


 5650 003c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5651 003e 0E4B     		ldr	r3, .L252+12
 5652 0040 9954     		strb	r1, [r3, r2]
1420:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 5653              		.loc 1 1420 0
 5654 0042 0B4B     		ldr	r3, .L252+4
 5655 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5656 0046 0B4B     		ldr	r3, .L252+8
 5657 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5658 004a 9BB2     		uxth	r3, r3
 5659 004c 03F2DC73 		addw	r3, r3, #2012
 5660 0050 9BB2     		uxth	r3, r3
 5661 0052 1946     		mov	r1, r3
 5662 0054 1046     		mov	r0, r2
 5663 0056 FFF7FEFF 		bl	EEPROM_WriteByte
1421:ui.c          ****         
1422:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5664              		.loc 1 1422 0
 5665 005a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1423:ui.c          ****     }
1424:ui.c          ****     else
1425:ui.c          ****     {
1426:ui.c          ****         menuAction(Down);
1427:ui.c          ****     }
1428:ui.c          **** }
 5666              		.loc 1 1428 0
 5667 005e 02E0     		b	.L251
 5668              	.L249:
1426:ui.c          ****     }
 5669              		.loc 1 1426 0
 5670 0060 0220     		movs	r0, #2
 5671 0062 FFF7FEFF 		bl	menuAction
 5672              	.L251:
 5673              		.loc 1 1428 0
 5674 0066 00BF     		nop
 5675 0068 80BD     		pop	{r7, pc}
 5676              	.L253:
 5677 006a 00BF     		.align	2
 5678              	.L252:
 5679 006c 00000000 		.word	editMode
 5680 0070 00000000 		.word	patchNum
 5681 0074 00000000 		.word	currentNeck
 5682 0078 00000000 		.word	neckPreset
 5683              		.cfi_endproc
 5684              	.LFE70:
 5685              		.size	downPressed, .-downPressed
 5686              		.section	.text.upPressed,"ax",%progbits
 5687              		.align	2
 5688              		.global	upPressed
 5689              		.thumb
 5690              		.thumb_func
 5691              		.type	upPressed, %function
 5692              	upPressed:
 5693              	.LFB71:
1429:ui.c          **** 
1430:ui.c          **** void upPressed()
1431:ui.c          **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 130


 5694              		.loc 1 1431 0
 5695              		.cfi_startproc
 5696              		@ args = 0, pretend = 0, frame = 0
 5697              		@ frame_needed = 1, uses_anonymous_args = 0
 5698 0000 80B5     		push	{r7, lr}
 5699              		.cfi_def_cfa_offset 8
 5700              		.cfi_offset 7, -8
 5701              		.cfi_offset 14, -4
 5702 0002 00AF     		add	r7, sp, #0
 5703              		.cfi_def_cfa_register 7
1432:ui.c          ****     if (!editMode) //normal behavior
 5704              		.loc 1 1432 0
 5705 0004 194B     		ldr	r3, .L258
 5706 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5707 0008 002B     		cmp	r3, #0
 5708 000a 29D1     		bne	.L255
1433:ui.c          ****     {
1434:ui.c          ****         patchNum += 1;
 5709              		.loc 1 1434 0
 5710 000c 184B     		ldr	r3, .L258+4
 5711 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5712 0010 0133     		adds	r3, r3, #1
 5713 0012 DAB2     		uxtb	r2, r3
 5714 0014 164B     		ldr	r3, .L258+4
 5715 0016 1A70     		strb	r2, [r3]
1435:ui.c          ****         patchNum &= 63;
 5716              		.loc 1 1435 0
 5717 0018 154B     		ldr	r3, .L258+4
 5718 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5719 001c 03F03F03 		and	r3, r3, #63
 5720 0020 DAB2     		uxtb	r2, r3
 5721 0022 134B     		ldr	r3, .L258+4
 5722 0024 1A70     		strb	r2, [r3]
1436:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 5723              		.loc 1 1436 0
 5724 0026 124B     		ldr	r3, .L258+4
 5725 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5726 002a 40F2D671 		movw	r1, #2006
 5727 002e 1846     		mov	r0, r3
 5728 0030 FFF7FEFF 		bl	EEPROM_WriteByte
1437:ui.c          ****         
1438:ui.c          ****         neckPreset[currentNeck] = patchNum;
 5729              		.loc 1 1438 0
 5730 0034 0F4B     		ldr	r3, .L258+8
 5731 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5732 0038 1A46     		mov	r2, r3
 5733 003a 0D4B     		ldr	r3, .L258+4
 5734 003c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5735 003e 0E4B     		ldr	r3, .L258+12
 5736 0040 9954     		strb	r1, [r3, r2]
1439:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 5737              		.loc 1 1439 0
 5738 0042 0B4B     		ldr	r3, .L258+4
 5739 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5740 0046 0B4B     		ldr	r3, .L258+8
 5741 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5742 004a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 131


 5743 004c 03F2DC73 		addw	r3, r3, #2012
 5744 0050 9BB2     		uxth	r3, r3
 5745 0052 1946     		mov	r1, r3
 5746 0054 1046     		mov	r0, r2
 5747 0056 FFF7FEFF 		bl	EEPROM_WriteByte
1440:ui.c          ****         
1441:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5748              		.loc 1 1441 0
 5749 005a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1442:ui.c          ****     }
1443:ui.c          ****     else
1444:ui.c          ****     {
1445:ui.c          ****         menuAction(Up);
1446:ui.c          ****     }
1447:ui.c          **** }
 5750              		.loc 1 1447 0
 5751 005e 02E0     		b	.L257
 5752              	.L255:
1445:ui.c          ****     }
 5753              		.loc 1 1445 0
 5754 0060 0320     		movs	r0, #3
 5755 0062 FFF7FEFF 		bl	menuAction
 5756              	.L257:
 5757              		.loc 1 1447 0
 5758 0066 00BF     		nop
 5759 0068 80BD     		pop	{r7, pc}
 5760              	.L259:
 5761 006a 00BF     		.align	2
 5762              	.L258:
 5763 006c 00000000 		.word	editMode
 5764 0070 00000000 		.word	patchNum
 5765 0074 00000000 		.word	currentNeck
 5766 0078 00000000 		.word	neckPreset
 5767              		.cfi_endproc
 5768              	.LFE71:
 5769              		.size	upPressed, .-upPressed
 5770              		.section	.text.enterPressed,"ax",%progbits
 5771              		.align	2
 5772              		.global	enterPressed
 5773              		.thumb
 5774              		.thumb_func
 5775              		.type	enterPressed, %function
 5776              	enterPressed:
 5777              	.LFB72:
1448:ui.c          **** 
1449:ui.c          **** void enterPressed()
1450:ui.c          **** {
 5778              		.loc 1 1450 0
 5779              		.cfi_startproc
 5780              		@ args = 0, pretend = 0, frame = 0
 5781              		@ frame_needed = 1, uses_anonymous_args = 0
 5782 0000 80B5     		push	{r7, lr}
 5783              		.cfi_def_cfa_offset 8
 5784              		.cfi_offset 7, -8
 5785              		.cfi_offset 14, -4
 5786 0002 00AF     		add	r7, sp, #0
 5787              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 132


1451:ui.c          ****     if (!editMode) //normal behavior
 5788              		.loc 1 1451 0
 5789 0004 0E4B     		ldr	r3, .L266
 5790 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5791 0008 002B     		cmp	r3, #0
 5792 000a 13D1     		bne	.L261
1452:ui.c          ****     {
1453:ui.c          ****         controlsDisplayed = !controlsDisplayed;
 5793              		.loc 1 1453 0
 5794 000c 0D4B     		ldr	r3, .L266+4
 5795 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5796 0010 002B     		cmp	r3, #0
 5797 0012 0CBF     		ite	eq
 5798 0014 0123     		moveq	r3, #1
 5799 0016 0023     		movne	r3, #0
 5800 0018 DBB2     		uxtb	r3, r3
 5801 001a 1A46     		mov	r2, r3
 5802 001c 094B     		ldr	r3, .L266+4
 5803 001e 1A70     		strb	r2, [r3]
1454:ui.c          ****         if (controlsDisplayed)
 5804              		.loc 1 1454 0
 5805 0020 084B     		ldr	r3, .L266+4
 5806 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5807 0024 002B     		cmp	r3, #0
 5808 0026 02D0     		beq	.L262
1455:ui.c          ****         {
1456:ui.c          ****             displayCurrentControlNames();
 5809              		.loc 1 1456 0
 5810 0028 FFF7FEFF 		bl	displayCurrentControlNames
1457:ui.c          ****         }
1458:ui.c          ****         else
1459:ui.c          ****         {
1460:ui.c          ****             displayCurrentPresetNameAndCopedent();
1461:ui.c          ****         }
1462:ui.c          ****     }
1463:ui.c          ****     else
1464:ui.c          ****     {
1465:ui.c          ****         menuAction(Enter);
1466:ui.c          ****     }
1467:ui.c          **** }
 5811              		.loc 1 1467 0
 5812 002c 05E0     		b	.L265
 5813              	.L262:
1460:ui.c          ****         }
 5814              		.loc 1 1460 0
 5815 002e FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5816              		.loc 1 1467 0
 5817 0032 02E0     		b	.L265
 5818              	.L261:
1465:ui.c          ****     }
 5819              		.loc 1 1465 0
 5820 0034 0420     		movs	r0, #4
 5821 0036 FFF7FEFF 		bl	menuAction
 5822              	.L265:
 5823              		.loc 1 1467 0
 5824 003a 00BF     		nop
 5825 003c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 133


 5826              	.L267:
 5827 003e 00BF     		.align	2
 5828              	.L266:
 5829 0040 00000000 		.word	editMode
 5830 0044 00000000 		.word	controlsDisplayed
 5831              		.cfi_endproc
 5832              	.LFE72:
 5833              		.size	enterPressed, .-enterPressed
 5834              		.section	.rodata
 5835              		.align	2
 5836              	.LC44:
 5837 02e8 43414C49 		.ascii	"CALIBRATION\000"
 5837      42524154 
 5837      494F4E00 
 5838              		.align	2
 5839              	.LC45:
 5840 02f4 4D4F5645 		.ascii	"MOVE ALL PEDALS\000"
 5840      20414C4C 
 5840      20504544 
 5840      414C5300 
 5841              		.align	2
 5842              	.LC46:
 5843 0304 414E4420 		.ascii	"AND LEVERS\000"
 5843      4C455645 
 5843      525300
 5844 030f 00       		.align	2
 5845              	.LC47:
 5846 0310 5448454E 		.ascii	"THEN PRESS ->\000"
 5846      20505245 
 5846      5353202D 
 5846      3E00
 5847              		.section	.text.enterLeverCalibrationMode,"ax",%progbits
 5848              		.align	2
 5849              		.global	enterLeverCalibrationMode
 5850              		.thumb
 5851              		.thumb_func
 5852              		.type	enterLeverCalibrationMode, %function
 5853              	enterLeverCalibrationMode:
 5854              	.LFB73:
1468:ui.c          **** 
1469:ui.c          **** void enterLeverCalibrationMode(void)
1470:ui.c          **** {
 5855              		.loc 1 1470 0
 5856              		.cfi_startproc
 5857              		@ args = 0, pretend = 0, frame = 8
 5858              		@ frame_needed = 1, uses_anonymous_args = 0
 5859 0000 80B5     		push	{r7, lr}
 5860              		.cfi_def_cfa_offset 8
 5861              		.cfi_offset 7, -8
 5862              		.cfi_offset 14, -4
 5863 0002 82B0     		sub	sp, sp, #8
 5864              		.cfi_def_cfa_offset 16
 5865 0004 00AF     		add	r7, sp, #0
 5866              		.cfi_def_cfa_register 7
1471:ui.c          ****     OLEDclear(128, 64);
 5867              		.loc 1 1471 0
 5868 0006 4021     		movs	r1, #64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 134


 5869 0008 8020     		movs	r0, #128
 5870 000a FFF7FEFF 		bl	OLEDclear
1472:ui.c          ****     myGFX_setFont(2);
 5871              		.loc 1 1472 0
 5872 000e 0220     		movs	r0, #2
 5873 0010 FFF7FEFF 		bl	myGFX_setFont
1473:ui.c          ****     OLEDtextColor(0, 1);
 5874              		.loc 1 1473 0
 5875 0014 0121     		movs	r1, #1
 5876 0016 0020     		movs	r0, #0
 5877 0018 FFF7FEFF 		bl	OLEDtextColor
1474:ui.c          ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 5878              		.loc 1 1474 0
 5879 001c 0023     		movs	r3, #0
 5880 001e 0122     		movs	r2, #1
 5881 0020 0B21     		movs	r1, #11
 5882 0022 1B48     		ldr	r0, .L271
 5883 0024 FFF7FEFF 		bl	OLEDwriteString
1475:ui.c          ****     OLEDwriteString("MOVE ALL PEDALS", 15, 1, SecondLine);
 5884              		.loc 1 1475 0
 5885 0028 0123     		movs	r3, #1
 5886 002a 0122     		movs	r2, #1
 5887 002c 0F21     		movs	r1, #15
 5888 002e 1948     		ldr	r0, .L271+4
 5889 0030 FFF7FEFF 		bl	OLEDwriteString
1476:ui.c          ****     OLEDwriteString("AND LEVERS", 10, 1, ThirdLine);
 5890              		.loc 1 1476 0
 5891 0034 0223     		movs	r3, #2
 5892 0036 0122     		movs	r2, #1
 5893 0038 0A21     		movs	r1, #10
 5894 003a 1748     		ldr	r0, .L271+8
 5895 003c FFF7FEFF 		bl	OLEDwriteString
1477:ui.c          ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 5896              		.loc 1 1477 0
 5897 0040 0323     		movs	r3, #3
 5898 0042 0122     		movs	r2, #1
 5899 0044 0F21     		movs	r1, #15
 5900 0046 1548     		ldr	r0, .L271+12
 5901 0048 FFF7FEFF 		bl	OLEDwriteString
1478:ui.c          ****     mainOLEDWaitingToSend = 1;
 5902              		.loc 1 1478 0
 5903 004c 144B     		ldr	r3, .L271+16
 5904 004e 0122     		movs	r2, #1
 5905 0050 1A70     		strb	r2, [r3]
1479:ui.c          ****     OLEDtextColor(1, 0);
 5906              		.loc 1 1479 0
 5907 0052 0021     		movs	r1, #0
 5908 0054 0120     		movs	r0, #1
 5909 0056 FFF7FEFF 		bl	OLEDtextColor
 5910              	.LBB22:
1480:ui.c          ****     //entering calibration mode, clear the pedals low and high arrays
1481:ui.c          ****     for (int i = 0; i < 10; i++)
 5911              		.loc 1 1481 0
 5912 005a 0023     		movs	r3, #0
 5913 005c 7B60     		str	r3, [r7, #4]
 5914 005e 0DE0     		b	.L269
 5915              	.L270:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 135


1482:ui.c          ****     {
1483:ui.c          ****         pedals_low[i] = 4095;
 5916              		.loc 1 1483 0 discriminator 3
 5917 0060 104A     		ldr	r2, .L271+20
 5918 0062 7B68     		ldr	r3, [r7, #4]
 5919 0064 40F6FF71 		movw	r1, #4095
 5920 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1484:ui.c          ****         pedals_high[i] = 0;
 5921              		.loc 1 1484 0 discriminator 3
 5922 006c 0E4A     		ldr	r2, .L271+24
 5923 006e 7B68     		ldr	r3, [r7, #4]
 5924 0070 0021     		movs	r1, #0
 5925 0072 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1481:ui.c          ****     {
 5926              		.loc 1 1481 0 discriminator 3
 5927 0076 7B68     		ldr	r3, [r7, #4]
 5928 0078 0133     		adds	r3, r3, #1
 5929 007a 7B60     		str	r3, [r7, #4]
 5930              	.L269:
1481:ui.c          ****     {
 5931              		.loc 1 1481 0 is_stmt 0 discriminator 1
 5932 007c 7B68     		ldr	r3, [r7, #4]
 5933 007e 092B     		cmp	r3, #9
 5934 0080 EEDD     		ble	.L270
 5935              	.LBE22:
1485:ui.c          ****     }
1486:ui.c          ****     leverCalibrationMode = 1;
 5936              		.loc 1 1486 0 is_stmt 1
 5937 0082 0A4B     		ldr	r3, .L271+28
 5938 0084 0122     		movs	r2, #1
 5939 0086 1A70     		strb	r2, [r3]
1487:ui.c          **** }
 5940              		.loc 1 1487 0
 5941 0088 00BF     		nop
 5942 008a 0837     		adds	r7, r7, #8
 5943              		.cfi_def_cfa_offset 8
 5944 008c BD46     		mov	sp, r7
 5945              		.cfi_def_cfa_register 13
 5946              		@ sp needed
 5947 008e 80BD     		pop	{r7, pc}
 5948              	.L272:
 5949              		.align	2
 5950              	.L271:
 5951 0090 E8020000 		.word	.LC44
 5952 0094 F4020000 		.word	.LC45
 5953 0098 04030000 		.word	.LC46
 5954 009c 10030000 		.word	.LC47
 5955 00a0 00000000 		.word	mainOLEDWaitingToSend
 5956 00a4 00000000 		.word	pedals_low
 5957 00a8 00000000 		.word	pedals_high
 5958 00ac 00000000 		.word	leverCalibrationMode
 5959              		.cfi_endproc
 5960              	.LFE73:
 5961              		.size	enterLeverCalibrationMode, .-enterLeverCalibrationMode
 5962              		.section	.text.exitLeverCalibrationMode,"ax",%progbits
 5963              		.align	2
 5964              		.global	exitLeverCalibrationMode
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 136


 5965              		.thumb
 5966              		.thumb_func
 5967              		.type	exitLeverCalibrationMode, %function
 5968              	exitLeverCalibrationMode:
 5969              	.LFB74:
1488:ui.c          **** 
1489:ui.c          **** void exitLeverCalibrationMode(void)
1490:ui.c          **** {
 5970              		.loc 1 1490 0
 5971              		.cfi_startproc
 5972              		@ args = 0, pretend = 0, frame = 24
 5973              		@ frame_needed = 1, uses_anonymous_args = 0
 5974 0000 80B5     		push	{r7, lr}
 5975              		.cfi_def_cfa_offset 8
 5976              		.cfi_offset 7, -8
 5977              		.cfi_offset 14, -4
 5978 0002 86B0     		sub	sp, sp, #24
 5979              		.cfi_def_cfa_offset 32
 5980 0004 00AF     		add	r7, sp, #0
 5981              		.cfi_def_cfa_register 7
1491:ui.c          ****     leverCalibrationMode = 0;
 5982              		.loc 1 1491 0
 5983 0006 5B4B     		ldr	r3, .L284
 5984 0008 0022     		movs	r2, #0
 5985 000a 1A70     		strb	r2, [r3]
 5986              	.LBB23:
1492:ui.c          ****     //draw normal screen
1493:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 5987              		.loc 1 1493 0
 5988 000c 0023     		movs	r3, #0
 5989 000e 7B61     		str	r3, [r7, #20]
 5990 0010 33E0     		b	.L274
 5991              	.L279:
 5992              	.LBB24:
1494:ui.c          ****     {
1495:ui.c          ****         //if you are closer to pedal high than pedal low, then switch high and low, the sensor is r
1496:ui.c          ****         int distanceFromLow = (angle[i] - pedals_low[i]);
 5993              		.loc 1 1496 0
 5994 0012 594A     		ldr	r2, .L284+4
 5995 0014 7B69     		ldr	r3, [r7, #20]
 5996 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5997 001a 1946     		mov	r1, r3
 5998 001c 574A     		ldr	r2, .L284+8
 5999 001e 7B69     		ldr	r3, [r7, #20]
 6000 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6001 0024 CB1A     		subs	r3, r1, r3
 6002 0026 3B61     		str	r3, [r7, #16]
1497:ui.c          ****         if (distanceFromLow < 0)
 6003              		.loc 1 1497 0
 6004 0028 3B69     		ldr	r3, [r7, #16]
 6005 002a 002B     		cmp	r3, #0
 6006 002c 02DA     		bge	.L275
1498:ui.c          ****         {
1499:ui.c          ****             distanceFromLow *= -1;
 6007              		.loc 1 1499 0
 6008 002e 3B69     		ldr	r3, [r7, #16]
 6009 0030 5B42     		negs	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 137


 6010 0032 3B61     		str	r3, [r7, #16]
 6011              	.L275:
1500:ui.c          ****         }
1501:ui.c          ****         int distanceFromHigh = (angle[i] - pedals_high[i]);
 6012              		.loc 1 1501 0
 6013 0034 504A     		ldr	r2, .L284+4
 6014 0036 7B69     		ldr	r3, [r7, #20]
 6015 0038 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6016 003c 1946     		mov	r1, r3
 6017 003e 504A     		ldr	r2, .L284+12
 6018 0040 7B69     		ldr	r3, [r7, #20]
 6019 0042 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6020 0046 CB1A     		subs	r3, r1, r3
 6021 0048 FB60     		str	r3, [r7, #12]
1502:ui.c          ****         if (distanceFromHigh < 0)
 6022              		.loc 1 1502 0
 6023 004a FB68     		ldr	r3, [r7, #12]
 6024 004c 002B     		cmp	r3, #0
 6025 004e 02DA     		bge	.L276
1503:ui.c          ****         {
1504:ui.c          ****             distanceFromHigh *= -1;
 6026              		.loc 1 1504 0
 6027 0050 FB68     		ldr	r3, [r7, #12]
 6028 0052 5B42     		negs	r3, r3
 6029 0054 FB60     		str	r3, [r7, #12]
 6030              	.L276:
1505:ui.c          ****         }
1506:ui.c          ****         if (distanceFromLow > distanceFromHigh)
 6031              		.loc 1 1506 0
 6032 0056 3A69     		ldr	r2, [r7, #16]
 6033 0058 FB68     		ldr	r3, [r7, #12]
 6034 005a 9A42     		cmp	r2, r3
 6035 005c 05DD     		ble	.L277
1507:ui.c          ****         {
1508:ui.c          ****             pedal_inverted[i] = 1;
 6036              		.loc 1 1508 0
 6037 005e 494A     		ldr	r2, .L284+16
 6038 0060 7B69     		ldr	r3, [r7, #20]
 6039 0062 1344     		add	r3, r3, r2
 6040 0064 0122     		movs	r2, #1
 6041 0066 1A70     		strb	r2, [r3]
 6042 0068 04E0     		b	.L278
 6043              	.L277:
1509:ui.c          ****         }
1510:ui.c          ****         else
1511:ui.c          ****         {
1512:ui.c          ****             pedal_inverted[i] = 0;
 6044              		.loc 1 1512 0
 6045 006a 464A     		ldr	r2, .L284+16
 6046 006c 7B69     		ldr	r3, [r7, #20]
 6047 006e 1344     		add	r3, r3, r2
 6048 0070 0022     		movs	r2, #0
 6049 0072 1A70     		strb	r2, [r3]
 6050              	.L278:
 6051              	.LBE24:
1493:ui.c          ****     {
 6052              		.loc 1 1493 0 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 138


 6053 0074 7B69     		ldr	r3, [r7, #20]
 6054 0076 0133     		adds	r3, r3, #1
 6055 0078 7B61     		str	r3, [r7, #20]
 6056              	.L274:
1493:ui.c          ****     {
 6057              		.loc 1 1493 0 is_stmt 0 discriminator 1
 6058 007a 7B69     		ldr	r3, [r7, #20]
 6059 007c 092B     		cmp	r3, #9
 6060 007e C8DD     		ble	.L279
 6061              	.LBE23:
1513:ui.c          ****         }
1514:ui.c          ****     }
1515:ui.c          ****     uint16_t pedal_inverted_byte = 0;
 6062              		.loc 1 1515 0 is_stmt 1
 6063 0080 0023     		movs	r3, #0
 6064 0082 7B81     		strh	r3, [r7, #10]	@ movhi
 6065              	.LBB25:
1516:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 6066              		.loc 1 1516 0
 6067 0084 0023     		movs	r3, #0
 6068 0086 7B60     		str	r3, [r7, #4]
 6069 0088 0EE0     		b	.L280
 6070              	.L281:
1517:ui.c          ****     {
1518:ui.c          ****         pedal_inverted_byte += pedal_inverted[i] << i;
 6071              		.loc 1 1518 0 discriminator 3
 6072 008a 3E4A     		ldr	r2, .L284+16
 6073 008c 7B68     		ldr	r3, [r7, #4]
 6074 008e 1344     		add	r3, r3, r2
 6075 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6076 0092 1A46     		mov	r2, r3
 6077 0094 7B68     		ldr	r3, [r7, #4]
 6078 0096 02FA03F3 		lsl	r3, r2, r3
 6079 009a 9AB2     		uxth	r2, r3
 6080 009c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6081 009e 1344     		add	r3, r3, r2
 6082 00a0 7B81     		strh	r3, [r7, #10]	@ movhi
1516:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 6083              		.loc 1 1516 0 discriminator 3
 6084 00a2 7B68     		ldr	r3, [r7, #4]
 6085 00a4 0133     		adds	r3, r3, #1
 6086 00a6 7B60     		str	r3, [r7, #4]
 6087              	.L280:
1516:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 6088              		.loc 1 1516 0 is_stmt 0 discriminator 1
 6089 00a8 7B68     		ldr	r3, [r7, #4]
 6090 00aa 092B     		cmp	r3, #9
 6091 00ac EDDD     		ble	.L281
 6092              	.LBE25:
1519:ui.c          ****     }
1520:ui.c          ****     EEPROM_WriteByte(pedal_inverted_byte>>8, EEPROM_PEDAL_INVERTED_OFFSET);
 6093              		.loc 1 1520 0 is_stmt 1
 6094 00ae 7B89     		ldrh	r3, [r7, #10]
 6095 00b0 1B0A     		lsrs	r3, r3, #8
 6096 00b2 9BB2     		uxth	r3, r3
 6097 00b4 DBB2     		uxtb	r3, r3
 6098 00b6 4FF4FC61 		mov	r1, #2016
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 139


 6099 00ba 1846     		mov	r0, r3
 6100 00bc FFF7FEFF 		bl	EEPROM_WriteByte
1521:ui.c          ****     EEPROM_WriteByte(pedal_inverted_byte& 255, EEPROM_PEDAL_INVERTED_OFFSET+1);
 6101              		.loc 1 1521 0
 6102 00c0 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6103 00c2 DBB2     		uxtb	r3, r3
 6104 00c4 40F2E171 		movw	r1, #2017
 6105 00c8 1846     		mov	r0, r3
 6106 00ca FFF7FEFF 		bl	EEPROM_WriteByte
1522:ui.c          ****     calculatePedalRatios();
 6107              		.loc 1 1522 0
 6108 00ce FFF7FEFF 		bl	calculatePedalRatios
 6109              	.LBB26:
1523:ui.c          ****     //now need to store this in EEPROM.                
1524:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 6110              		.loc 1 1524 0
 6111 00d2 0023     		movs	r3, #0
 6112 00d4 3B60     		str	r3, [r7]
 6113 00d6 45E0     		b	.L282
 6114              	.L283:
1525:ui.c          ****     {
1526:ui.c          ****          EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + (i*4));
 6115              		.loc 1 1526 0 discriminator 3
 6116 00d8 284A     		ldr	r2, .L284+8
 6117 00da 3B68     		ldr	r3, [r7]
 6118 00dc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6119 00e0 1B0A     		lsrs	r3, r3, #8
 6120 00e2 9BB2     		uxth	r3, r3
 6121 00e4 DAB2     		uxtb	r2, r3
 6122 00e6 3B68     		ldr	r3, [r7]
 6123 00e8 9BB2     		uxth	r3, r3
 6124 00ea 9B00     		lsls	r3, r3, #2
 6125 00ec 9BB2     		uxth	r3, r3
 6126 00ee 03F27E73 		addw	r3, r3, #1918
 6127 00f2 9BB2     		uxth	r3, r3
 6128 00f4 1946     		mov	r1, r3
 6129 00f6 1046     		mov	r0, r2
 6130 00f8 FFF7FEFF 		bl	EEPROM_WriteByte
1527:ui.c          ****          EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 1));
 6131              		.loc 1 1527 0 discriminator 3
 6132 00fc 1F4A     		ldr	r2, .L284+8
 6133 00fe 3B68     		ldr	r3, [r7]
 6134 0100 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6135 0104 DAB2     		uxtb	r2, r3
 6136 0106 3B68     		ldr	r3, [r7]
 6137 0108 9BB2     		uxth	r3, r3
 6138 010a 9B00     		lsls	r3, r3, #2
 6139 010c 9BB2     		uxth	r3, r3
 6140 010e 03F27F73 		addw	r3, r3, #1919
 6141 0112 9BB2     		uxth	r3, r3
 6142 0114 1946     		mov	r1, r3
 6143 0116 1046     		mov	r0, r2
 6144 0118 FFF7FEFF 		bl	EEPROM_WriteByte
1528:ui.c          ****          EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2));
 6145              		.loc 1 1528 0 discriminator 3
 6146 011c 184A     		ldr	r2, .L284+12
 6147 011e 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 140


 6148 0120 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6149 0124 1B0A     		lsrs	r3, r3, #8
 6150 0126 9BB2     		uxth	r3, r3
 6151 0128 DAB2     		uxtb	r2, r3
 6152 012a 3B68     		ldr	r3, [r7]
 6153 012c 03F5F073 		add	r3, r3, #480
 6154 0130 9BB2     		uxth	r3, r3
 6155 0132 9B00     		lsls	r3, r3, #2
 6156 0134 9BB2     		uxth	r3, r3
 6157 0136 1946     		mov	r1, r3
 6158 0138 1046     		mov	r0, r2
 6159 013a FFF7FEFF 		bl	EEPROM_WriteByte
1529:ui.c          ****          EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 3));
 6160              		.loc 1 1529 0 discriminator 3
 6161 013e 104A     		ldr	r2, .L284+12
 6162 0140 3B68     		ldr	r3, [r7]
 6163 0142 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6164 0146 DAB2     		uxtb	r2, r3
 6165 0148 3B68     		ldr	r3, [r7]
 6166 014a 9BB2     		uxth	r3, r3
 6167 014c 9B00     		lsls	r3, r3, #2
 6168 014e 9BB2     		uxth	r3, r3
 6169 0150 03F28173 		addw	r3, r3, #1921
 6170 0154 9BB2     		uxth	r3, r3
 6171 0156 1946     		mov	r1, r3
 6172 0158 1046     		mov	r0, r2
 6173 015a FFF7FEFF 		bl	EEPROM_WriteByte
1524:ui.c          ****     {
 6174              		.loc 1 1524 0 discriminator 3
 6175 015e 3B68     		ldr	r3, [r7]
 6176 0160 0133     		adds	r3, r3, #1
 6177 0162 3B60     		str	r3, [r7]
 6178              	.L282:
1524:ui.c          ****     {
 6179              		.loc 1 1524 0 is_stmt 0 discriminator 1
 6180 0164 3B68     		ldr	r3, [r7]
 6181 0166 092B     		cmp	r3, #9
 6182 0168 B6DD     		ble	.L283
 6183              	.LBE26:
1530:ui.c          ****     }
1531:ui.c          **** }
 6184              		.loc 1 1531 0 is_stmt 1
 6185 016a 00BF     		nop
 6186 016c 1837     		adds	r7, r7, #24
 6187              		.cfi_def_cfa_offset 8
 6188 016e BD46     		mov	sp, r7
 6189              		.cfi_def_cfa_register 13
 6190              		@ sp needed
 6191 0170 80BD     		pop	{r7, pc}
 6192              	.L285:
 6193 0172 00BF     		.align	2
 6194              	.L284:
 6195 0174 00000000 		.word	leverCalibrationMode
 6196 0178 00000000 		.word	angle
 6197 017c 00000000 		.word	pedals_low
 6198 0180 00000000 		.word	pedals_high
 6199 0184 00000000 		.word	pedal_inverted
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 141


 6200              		.cfi_endproc
 6201              	.LFE74:
 6202              		.size	exitLeverCalibrationMode, .-exitLeverCalibrationMode
 6203              		.section	.rodata
 6204 031e 0000     		.align	2
 6205              	.LC48:
 6206 0320 504C4143 		.ascii	"PLACE BAR AT \000"
 6206      45204241 
 6206      52204154 
 6206      2000
 6207 032e 0000     		.align	2
 6208              	.LC49:
 6209 0330 46524554 		.ascii	"FRET \000"
 6209      2000
 6210              		.section	.text.enterFretCalibrationMode,"ax",%progbits
 6211              		.align	2
 6212              		.global	enterFretCalibrationMode
 6213              		.thumb
 6214              		.thumb_func
 6215              		.type	enterFretCalibrationMode, %function
 6216              	enterFretCalibrationMode:
 6217              	.LFB75:
1532:ui.c          **** 
1533:ui.c          **** 
1534:ui.c          **** void enterFretCalibrationMode(void)
1535:ui.c          **** {
 6218              		.loc 1 1535 0
 6219              		.cfi_startproc
 6220              		@ args = 0, pretend = 0, frame = 0
 6221              		@ frame_needed = 1, uses_anonymous_args = 0
 6222 0000 80B5     		push	{r7, lr}
 6223              		.cfi_def_cfa_offset 8
 6224              		.cfi_offset 7, -8
 6225              		.cfi_offset 14, -4
 6226 0002 00AF     		add	r7, sp, #0
 6227              		.cfi_def_cfa_register 7
1536:ui.c          ****     OLEDclear(128, 64);
 6228              		.loc 1 1536 0
 6229 0004 4021     		movs	r1, #64
 6230 0006 8020     		movs	r0, #128
 6231 0008 FFF7FEFF 		bl	OLEDclear
1537:ui.c          ****     myGFX_setFont(2);
 6232              		.loc 1 1537 0
 6233 000c 0220     		movs	r0, #2
 6234 000e FFF7FEFF 		bl	myGFX_setFont
1538:ui.c          ****     OLEDtextColor(0, 1);
 6235              		.loc 1 1538 0
 6236 0012 0121     		movs	r1, #1
 6237 0014 0020     		movs	r0, #0
 6238 0016 FFF7FEFF 		bl	OLEDtextColor
1539:ui.c          ****     fretToCalibrate = 0;
 6239              		.loc 1 1539 0
 6240 001a 194B     		ldr	r3, .L287
 6241 001c 0022     		movs	r2, #0
 6242 001e 1A70     		strb	r2, [r3]
1540:ui.c          ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 6243              		.loc 1 1540 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 142


 6244 0020 0023     		movs	r3, #0
 6245 0022 0122     		movs	r2, #1
 6246 0024 0B21     		movs	r1, #11
 6247 0026 1748     		ldr	r0, .L287+4
 6248 0028 FFF7FEFF 		bl	OLEDwriteString
1541:ui.c          ****     OLEDwriteString("PLACE BAR AT ", 15, 1, SecondLine);
 6249              		.loc 1 1541 0
 6250 002c 0123     		movs	r3, #1
 6251 002e 0122     		movs	r2, #1
 6252 0030 0F21     		movs	r1, #15
 6253 0032 1548     		ldr	r0, .L287+8
 6254 0034 FFF7FEFF 		bl	OLEDwriteString
1542:ui.c          ****     OLEDwriteString("FRET ", 5, 1, ThirdLine);
 6255              		.loc 1 1542 0
 6256 0038 0223     		movs	r3, #2
 6257 003a 0122     		movs	r2, #1
 6258 003c 0521     		movs	r1, #5
 6259 003e 1348     		ldr	r0, .L287+12
 6260 0040 FFF7FEFF 		bl	OLEDwriteString
1543:ui.c          ****     OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 6261              		.loc 1 1543 0
 6262 0044 0E4B     		ldr	r3, .L287
 6263 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6264 0048 1A46     		mov	r2, r3
 6265 004a 114B     		ldr	r3, .L287+16
 6266 004c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 6267 004e 1846     		mov	r0, r3
 6268 0050 0223     		movs	r3, #2
 6269 0052 2822     		movs	r2, #40
 6270 0054 0221     		movs	r1, #2
 6271 0056 FFF7FEFF 		bl	OLEDwriteInt
1544:ui.c          ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 6272              		.loc 1 1544 0
 6273 005a 0323     		movs	r3, #3
 6274 005c 0122     		movs	r2, #1
 6275 005e 0F21     		movs	r1, #15
 6276 0060 0C48     		ldr	r0, .L287+20
 6277 0062 FFF7FEFF 		bl	OLEDwriteString
1545:ui.c          ****     mainOLEDWaitingToSend = 1;
 6278              		.loc 1 1545 0
 6279 0066 0C4B     		ldr	r3, .L287+24
 6280 0068 0122     		movs	r2, #1
 6281 006a 1A70     		strb	r2, [r3]
1546:ui.c          ****     OLEDtextColor(1, 0);
 6282              		.loc 1 1546 0
 6283 006c 0021     		movs	r1, #0
 6284 006e 0120     		movs	r0, #1
 6285 0070 FFF7FEFF 		bl	OLEDtextColor
1547:ui.c          ****     fretCalibrationMode = 1;
 6286              		.loc 1 1547 0
 6287 0074 094B     		ldr	r3, .L287+28
 6288 0076 0122     		movs	r2, #1
 6289 0078 1A70     		strb	r2, [r3]
1548:ui.c          **** }
 6290              		.loc 1 1548 0
 6291 007a 00BF     		nop
 6292 007c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 143


 6293              	.L288:
 6294 007e 00BF     		.align	2
 6295              	.L287:
 6296 0080 00000000 		.word	fretToCalibrate
 6297 0084 E8020000 		.word	.LC44
 6298 0088 20030000 		.word	.LC48
 6299 008c 30030000 		.word	.LC49
 6300 0090 00000000 		.word	whichFretArray
 6301 0094 10030000 		.word	.LC47
 6302 0098 00000000 		.word	mainOLEDWaitingToSend
 6303 009c 00000000 		.word	fretCalibrationMode
 6304              		.cfi_endproc
 6305              	.LFE75:
 6306              		.size	enterFretCalibrationMode, .-enterFretCalibrationMode
 6307              		.section	.text.exitFretCalibrationMode,"ax",%progbits
 6308              		.align	2
 6309              		.global	exitFretCalibrationMode
 6310              		.thumb
 6311              		.thumb_func
 6312              		.type	exitFretCalibrationMode, %function
 6313              	exitFretCalibrationMode:
 6314              	.LFB76:
1549:ui.c          **** 
1550:ui.c          **** void exitFretCalibrationMode(void)
1551:ui.c          **** {
 6315              		.loc 1 1551 0
 6316              		.cfi_startproc
 6317              		@ args = 0, pretend = 0, frame = 8
 6318              		@ frame_needed = 1, uses_anonymous_args = 0
 6319 0000 80B5     		push	{r7, lr}
 6320              		.cfi_def_cfa_offset 8
 6321              		.cfi_offset 7, -8
 6322              		.cfi_offset 14, -4
 6323 0002 82B0     		sub	sp, sp, #8
 6324              		.cfi_def_cfa_offset 16
 6325 0004 00AF     		add	r7, sp, #0
 6326              		.cfi_def_cfa_register 7
1552:ui.c          ****     fretCalibrationMode = 0;
 6327              		.loc 1 1552 0
 6328 0006 2B4B     		ldr	r3, .L292
 6329 0008 0022     		movs	r2, #0
 6330 000a 1A70     		strb	r2, [r3]
 6331              	.LBB27:
1553:ui.c          ****     //now need to store this in EEPROM.                
1554:ui.c          ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 6332              		.loc 1 1554 0
 6333 000c 0023     		movs	r3, #0
 6334 000e 7B60     		str	r3, [r7, #4]
 6335 0010 47E0     		b	.L290
 6336              	.L291:
1555:ui.c          ****     {
1556:ui.c          ****          EEPROM_WriteByte((fretMeasurements[0][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + (i*4));
 6337              		.loc 1 1556 0 discriminator 3
 6338 0012 294A     		ldr	r2, .L292+4
 6339 0014 7B68     		ldr	r3, [r7, #4]
 6340 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6341 001a 1B0A     		lsrs	r3, r3, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 144


 6342 001c 9BB2     		uxth	r3, r3
 6343 001e DAB2     		uxtb	r2, r3
 6344 0020 7B68     		ldr	r3, [r7, #4]
 6345 0022 9BB2     		uxth	r3, r3
 6346 0024 9B00     		lsls	r3, r3, #2
 6347 0026 9BB2     		uxth	r3, r3
 6348 0028 03F2A673 		addw	r3, r3, #1958
 6349 002c 9BB2     		uxth	r3, r3
 6350 002e 1946     		mov	r1, r3
 6351 0030 1046     		mov	r0, r2
 6352 0032 FFF7FEFF 		bl	EEPROM_WriteByte
1557:ui.c          ****          EEPROM_WriteByte((fretMeasurements[0][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 6353              		.loc 1 1557 0 discriminator 3
 6354 0036 204A     		ldr	r2, .L292+4
 6355 0038 7B68     		ldr	r3, [r7, #4]
 6356 003a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6357 003e DAB2     		uxtb	r2, r3
 6358 0040 7B68     		ldr	r3, [r7, #4]
 6359 0042 9BB2     		uxth	r3, r3
 6360 0044 9B00     		lsls	r3, r3, #2
 6361 0046 9BB2     		uxth	r3, r3
 6362 0048 03F2A773 		addw	r3, r3, #1959
 6363 004c 9BB2     		uxth	r3, r3
 6364 004e 1946     		mov	r1, r3
 6365 0050 1046     		mov	r0, r2
 6366 0052 FFF7FEFF 		bl	EEPROM_WriteByte
1558:ui.c          ****          EEPROM_WriteByte((fretMeasurements[1][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 
 6367              		.loc 1 1558 0 discriminator 3
 6368 0056 184A     		ldr	r2, .L292+4
 6369 0058 7B68     		ldr	r3, [r7, #4]
 6370 005a 0C33     		adds	r3, r3, #12
 6371 005c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6372 0060 1B0A     		lsrs	r3, r3, #8
 6373 0062 9BB2     		uxth	r3, r3
 6374 0064 DAB2     		uxtb	r2, r3
 6375 0066 7B68     		ldr	r3, [r7, #4]
 6376 0068 03F5F573 		add	r3, r3, #490
 6377 006c 9BB2     		uxth	r3, r3
 6378 006e 9B00     		lsls	r3, r3, #2
 6379 0070 9BB2     		uxth	r3, r3
 6380 0072 1946     		mov	r1, r3
 6381 0074 1046     		mov	r0, r2
 6382 0076 FFF7FEFF 		bl	EEPROM_WriteByte
1559:ui.c          ****          EEPROM_WriteByte((fretMeasurements[1][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 6383              		.loc 1 1559 0 discriminator 3
 6384 007a 0F4A     		ldr	r2, .L292+4
 6385 007c 7B68     		ldr	r3, [r7, #4]
 6386 007e 0C33     		adds	r3, r3, #12
 6387 0080 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6388 0084 DAB2     		uxtb	r2, r3
 6389 0086 7B68     		ldr	r3, [r7, #4]
 6390 0088 9BB2     		uxth	r3, r3
 6391 008a 9B00     		lsls	r3, r3, #2
 6392 008c 9BB2     		uxth	r3, r3
 6393 008e 03F2A973 		addw	r3, r3, #1961
 6394 0092 9BB2     		uxth	r3, r3
 6395 0094 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 145


 6396 0096 1046     		mov	r0, r2
 6397 0098 FFF7FEFF 		bl	EEPROM_WriteByte
1554:ui.c          ****     {
 6398              		.loc 1 1554 0 discriminator 3
 6399 009c 7B68     		ldr	r3, [r7, #4]
 6400 009e 0133     		adds	r3, r3, #1
 6401 00a0 7B60     		str	r3, [r7, #4]
 6402              	.L290:
1554:ui.c          ****     {
 6403              		.loc 1 1554 0 is_stmt 0 discriminator 1
 6404 00a2 7B68     		ldr	r3, [r7, #4]
 6405 00a4 0B2B     		cmp	r3, #11
 6406 00a6 B4DD     		ble	.L291
 6407              	.LBE27:
1560:ui.c          ****     }
1561:ui.c          ****     exitEditModeMenu();
 6408              		.loc 1 1561 0 is_stmt 1
 6409 00a8 FFF7FEFF 		bl	exitEditModeMenu
1562:ui.c          **** 
1563:ui.c          **** }
 6410              		.loc 1 1563 0
 6411 00ac 00BF     		nop
 6412 00ae 0837     		adds	r7, r7, #8
 6413              		.cfi_def_cfa_offset 8
 6414 00b0 BD46     		mov	sp, r7
 6415              		.cfi_def_cfa_register 13
 6416              		@ sp needed
 6417 00b2 80BD     		pop	{r7, pc}
 6418              	.L293:
 6419              		.align	2
 6420              	.L292:
 6421 00b4 00000000 		.word	fretCalibrationMode
 6422 00b8 00000000 		.word	fretMeasurements
 6423              		.cfi_endproc
 6424              	.LFE76:
 6425              		.size	exitFretCalibrationMode, .-exitFretCalibrationMode
 6426              		.section	.text.exitPresetStoreMenu,"ax",%progbits
 6427              		.align	2
 6428              		.global	exitPresetStoreMenu
 6429              		.thumb
 6430              		.thumb_func
 6431              		.type	exitPresetStoreMenu, %function
 6432              	exitPresetStoreMenu:
 6433              	.LFB77:
1564:ui.c          **** 
1565:ui.c          **** void exitPresetStoreMenu(void)
1566:ui.c          **** {
 6434              		.loc 1 1566 0
 6435              		.cfi_startproc
 6436              		@ args = 0, pretend = 0, frame = 0
 6437              		@ frame_needed = 1, uses_anonymous_args = 0
 6438 0000 80B5     		push	{r7, lr}
 6439              		.cfi_def_cfa_offset 8
 6440              		.cfi_offset 7, -8
 6441              		.cfi_offset 14, -4
 6442 0002 00AF     		add	r7, sp, #0
 6443              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 146


1567:ui.c          ****     presetStoreStage = 0;
 6444              		.loc 1 1567 0
 6445 0004 044B     		ldr	r3, .L295
 6446 0006 0022     		movs	r2, #0
 6447 0008 1A70     		strb	r2, [r3]
1568:ui.c          ****     sendLocalPresetStoreCommand = 1;
 6448              		.loc 1 1568 0
 6449 000a 044B     		ldr	r3, .L295+4
 6450 000c 0122     		movs	r2, #1
 6451 000e 1A70     		strb	r2, [r3]
1569:ui.c          ****    // patchNum = presetNumberToStore;
1570:ui.c          ****     exitEditModeMenu();
 6452              		.loc 1 1570 0
 6453 0010 FFF7FEFF 		bl	exitEditModeMenu
1571:ui.c          **** }
 6454              		.loc 1 1571 0
 6455 0014 00BF     		nop
 6456 0016 80BD     		pop	{r7, pc}
 6457              	.L296:
 6458              		.align	2
 6459              	.L295:
 6460 0018 00000000 		.word	presetStoreStage
 6461 001c 00000000 		.word	sendLocalPresetStoreCommand
 6462              		.cfi_endproc
 6463              	.LFE77:
 6464              		.size	exitPresetStoreMenu, .-exitPresetStoreMenu
 6465              		.section	.rodata
 6466 0336 0000     		.align	2
 6467              	.LC50:
 6468 0338 2000     		.ascii	" \000"
 6469              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 6470              		.align	2
 6471              		.global	displayCurrentPresetNameAndCopedent
 6472              		.thumb
 6473              		.thumb_func
 6474              		.type	displayCurrentPresetNameAndCopedent, %function
 6475              	displayCurrentPresetNameAndCopedent:
 6476              	.LFB78:
1572:ui.c          **** 
1573:ui.c          **** void displayCurrentPresetNameAndCopedent(void)
1574:ui.c          **** {
 6477              		.loc 1 1574 0
 6478              		.cfi_startproc
 6479              		@ args = 0, pretend = 0, frame = 8
 6480              		@ frame_needed = 1, uses_anonymous_args = 0
 6481 0000 90B5     		push	{r4, r7, lr}
 6482              		.cfi_def_cfa_offset 12
 6483              		.cfi_offset 4, -12
 6484              		.cfi_offset 7, -8
 6485              		.cfi_offset 14, -4
 6486 0002 85B0     		sub	sp, sp, #20
 6487              		.cfi_def_cfa_offset 32
 6488 0004 02AF     		add	r7, sp, #8
 6489              		.cfi_def_cfa 7, 24
1575:ui.c          ****     int macroCheck = 0;
 6490              		.loc 1 1575 0
 6491 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 147


 6492 0008 7B60     		str	r3, [r7, #4]
 6493              	.LBB28:
1576:ui.c          ****     for (int i = 0; i < NUM_MACROS*NUM_MACRO_PAGES; i++)
 6494              		.loc 1 1576 0
 6495 000a 0023     		movs	r3, #0
 6496 000c 3B60     		str	r3, [r7]
 6497 000e 15E0     		b	.L298
 6498              	.L300:
1577:ui.c          ****     {
1578:ui.c          ****         if (macroNamesArray[patchNum][i][0] == 255)
 6499              		.loc 1 1578 0
 6500 0010 5D4B     		ldr	r3, .L305
 6501 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6502 0014 1846     		mov	r0, r3
 6503 0016 5D49     		ldr	r1, .L305+4
 6504 0018 3B68     		ldr	r3, [r7]
 6505 001a 1A46     		mov	r2, r3
 6506 001c D200     		lsls	r2, r2, #3
 6507 001e 1A44     		add	r2, r2, r3
 6508 0020 0346     		mov	r3, r0
 6509 0022 DB00     		lsls	r3, r3, #3
 6510 0024 0344     		add	r3, r3, r0
 6511 0026 1B01     		lsls	r3, r3, #4
 6512 0028 1344     		add	r3, r3, r2
 6513 002a 0B44     		add	r3, r3, r1
 6514 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6515 002e FF2B     		cmp	r3, #255
 6516 0030 01D1     		bne	.L299
1579:ui.c          ****         {
1580:ui.c          ****             macroCheck = 1;
 6517              		.loc 1 1580 0
 6518 0032 0123     		movs	r3, #1
 6519 0034 7B60     		str	r3, [r7, #4]
 6520              	.L299:
1576:ui.c          ****     {
 6521              		.loc 1 1576 0 discriminator 2
 6522 0036 3B68     		ldr	r3, [r7]
 6523 0038 0133     		adds	r3, r3, #1
 6524 003a 3B60     		str	r3, [r7]
 6525              	.L298:
1576:ui.c          ****     {
 6526              		.loc 1 1576 0 is_stmt 0 discriminator 1
 6527 003c 3B68     		ldr	r3, [r7]
 6528 003e 0F2B     		cmp	r3, #15
 6529 0040 E6DD     		ble	.L300
 6530              	.LBE28:
1581:ui.c          ****         }  
1582:ui.c          ****     }
1583:ui.c          ****     
1584:ui.c          ****     if (macroCheck == 0) //don't display if the name data still hasn't been retrieved by the SPI bu
 6531              		.loc 1 1584 0 is_stmt 1
 6532 0042 7B68     		ldr	r3, [r7, #4]
 6533 0044 002B     		cmp	r3, #0
 6534 0046 40F09780 		bne	.L301
1585:ui.c          ****     {
1586:ui.c          ****         OLEDclear(128, 64);
 6535              		.loc 1 1586 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 148


 6536 004a 4021     		movs	r1, #64
 6537 004c 8020     		movs	r0, #128
 6538 004e FFF7FEFF 		bl	OLEDclear
1587:ui.c          ****         OLEDtextColor(1, 0);
 6539              		.loc 1 1587 0
 6540 0052 0021     		movs	r1, #0
 6541 0054 0120     		movs	r0, #1
 6542 0056 FFF7FEFF 		bl	OLEDtextColor
1588:ui.c          ****         myGFX_setFont(0);
 6543              		.loc 1 1588 0
 6544 005a 0020     		movs	r0, #0
 6545 005c FFF7FEFF 		bl	myGFX_setFont
1589:ui.c          ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 6546              		.loc 1 1589 0
 6547 0060 494B     		ldr	r3, .L305
 6548 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6549 0064 1846     		mov	r0, r3
 6550 0066 0023     		movs	r3, #0
 6551 0068 0022     		movs	r2, #0
 6552 006a 0221     		movs	r1, #2
 6553 006c FFF7FEFF 		bl	OLEDwriteInt
1590:ui.c          ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1591:ui.c          ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], PRESET_NAME_CLIPPED_LENGTH, 0, Seco
 6554              		.loc 1 1591 0
 6555 0070 454B     		ldr	r3, .L305
 6556 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6557 0074 1A46     		mov	r2, r3
 6558 0076 1346     		mov	r3, r2
 6559 0078 DB00     		lsls	r3, r3, #3
 6560 007a 9B1A     		subs	r3, r3, r2
 6561 007c 5B00     		lsls	r3, r3, #1
 6562 007e 444A     		ldr	r2, .L305+8
 6563 0080 9818     		adds	r0, r3, r2
 6564 0082 0123     		movs	r3, #1
 6565 0084 0022     		movs	r2, #0
 6566 0086 0C21     		movs	r1, #12
 6567 0088 FFF7FEFF 		bl	OLEDwriteString
1592:ui.c          ****         GFXwriteFastHLine(&theGFX, 0, 40, 128, 1);
 6568              		.loc 1 1592 0
 6569 008c 0123     		movs	r3, #1
 6570 008e 0093     		str	r3, [sp]
 6571 0090 8023     		movs	r3, #128
 6572 0092 2822     		movs	r2, #40
 6573 0094 0021     		movs	r1, #0
 6574 0096 3F48     		ldr	r0, .L305+12
 6575 0098 FFF7FEFF 		bl	GFXwriteFastHLine
1593:ui.c          ****         OLEDwriteInt(currentCopedent , 1, 0,FourthLine);
 6576              		.loc 1 1593 0
 6577 009c 3E4B     		ldr	r3, .L305+16
 6578 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6579 00a0 1846     		mov	r0, r3
 6580 00a2 0323     		movs	r3, #3
 6581 00a4 0022     		movs	r2, #0
 6582 00a6 0121     		movs	r1, #1
 6583 00a8 FFF7FEFF 		bl	OLEDwriteInt
1594:ui.c          ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 6584              		.loc 1 1594 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 149


 6585 00ac FFF7FEFF 		bl	OLEDgetCursor
 6586 00b0 0246     		mov	r2, r0
 6587 00b2 0323     		movs	r3, #3
 6588 00b4 0121     		movs	r1, #1
 6589 00b6 3948     		ldr	r0, .L305+20
 6590 00b8 FFF7FEFF 		bl	OLEDwriteString
1595:ui.c          ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 6591              		.loc 1 1595 0
 6592 00bc 364B     		ldr	r3, .L305+16
 6593 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6594 00c0 1A46     		mov	r2, r3
 6595 00c2 1346     		mov	r3, r2
 6596 00c4 9B00     		lsls	r3, r3, #2
 6597 00c6 1344     		add	r3, r3, r2
 6598 00c8 5B00     		lsls	r3, r3, #1
 6599 00ca 354A     		ldr	r2, .L305+24
 6600 00cc 9C18     		adds	r4, r3, r2
 6601 00ce FFF7FEFF 		bl	OLEDgetCursor
 6602 00d2 0246     		mov	r2, r0
 6603 00d4 0323     		movs	r3, #3
 6604 00d6 0A21     		movs	r1, #10
 6605 00d8 2046     		mov	r0, r4
 6606 00da FFF7FEFF 		bl	OLEDwriteString
1596:ui.c          ****         mainOLEDWaitingToSend = 1;
 6607              		.loc 1 1596 0
 6608 00de 314B     		ldr	r3, .L305+28
 6609 00e0 0122     		movs	r2, #1
 6610 00e2 1A70     		strb	r2, [r3]
1597:ui.c          ****         presetAlreadyDisplayed[patchNum] = 1;
 6611              		.loc 1 1597 0
 6612 00e4 284B     		ldr	r3, .L305
 6613 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6614 00e8 1A46     		mov	r2, r3
 6615 00ea 2F4B     		ldr	r3, .L305+32
 6616 00ec 0121     		movs	r1, #1
 6617 00ee 9954     		strb	r1, [r3, r2]
1598:ui.c          ****         //and update the macro OLED screens
1599:ui.c          ****         whichMacro = 0;
 6618              		.loc 1 1599 0
 6619 00f0 2E4B     		ldr	r3, .L305+36
 6620 00f2 0022     		movs	r2, #0
 6621 00f4 1A70     		strb	r2, [r3]
1600:ui.c          ****         macroOLEDWaitingToSend = 1;
 6622              		.loc 1 1600 0
 6623 00f6 2E4B     		ldr	r3, .L305+40
 6624 00f8 0122     		movs	r2, #1
 6625 00fa 1A70     		strb	r2, [r3]
1601:ui.c          ****         volumeWaitingToSend = 1;
 6626              		.loc 1 1601 0
 6627 00fc 2D4B     		ldr	r3, .L305+44
 6628 00fe 0122     		movs	r2, #1
 6629 0100 1A70     		strb	r2, [r3]
1602:ui.c          ****         
1603:ui.c          ****         if ((macroNamesArray[patchNum][8][0] == 32) || (macroNamesArray[patchNum][8][0] == 0))
 6630              		.loc 1 1603 0
 6631 0102 214B     		ldr	r3, .L305
 6632 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 150


 6633 0106 1946     		mov	r1, r3
 6634 0108 204A     		ldr	r2, .L305+4
 6635 010a 0B46     		mov	r3, r1
 6636 010c DB00     		lsls	r3, r3, #3
 6637 010e 0B44     		add	r3, r3, r1
 6638 0110 1B01     		lsls	r3, r3, #4
 6639 0112 1344     		add	r3, r3, r2
 6640 0114 4833     		adds	r3, r3, #72
 6641 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6642 0118 202B     		cmp	r3, #32
 6643 011a 0CD0     		beq	.L302
 6644              		.loc 1 1603 0 is_stmt 0 discriminator 1
 6645 011c 1A4B     		ldr	r3, .L305
 6646 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6647 0120 1946     		mov	r1, r3
 6648 0122 1A4A     		ldr	r2, .L305+4
 6649 0124 0B46     		mov	r3, r1
 6650 0126 DB00     		lsls	r3, r3, #3
 6651 0128 0B44     		add	r3, r3, r1
 6652 012a 1B01     		lsls	r3, r3, #4
 6653 012c 1344     		add	r3, r3, r2
 6654 012e 4833     		adds	r3, r3, #72
 6655 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6656 0132 002B     		cmp	r3, #0
 6657 0134 0CD1     		bne	.L303
 6658              	.L302:
1604:ui.c          ****         {
1605:ui.c          ****             knobPanelLightActive = 0;
 6659              		.loc 1 1605 0 is_stmt 1
 6660 0136 204B     		ldr	r3, .L305+48
 6661 0138 0022     		movs	r2, #0
 6662 013a 1A70     		strb	r2, [r3]
1606:ui.c          ****             knobPanelLight1_Write(0);
 6663              		.loc 1 1606 0
 6664 013c 0020     		movs	r0, #0
 6665 013e FFF7FEFF 		bl	knobPanelLight1_Write
1607:ui.c          ****             knobPanelLight2_Write(0);
 6666              		.loc 1 1607 0
 6667 0142 0020     		movs	r0, #0
 6668 0144 FFF7FEFF 		bl	knobPanelLight2_Write
1608:ui.c          ****             whichMacroPageIsActive = 0;
 6669              		.loc 1 1608 0
 6670 0148 1C4B     		ldr	r3, .L305+52
 6671 014a 0022     		movs	r2, #0
 6672 014c 1A70     		strb	r2, [r3]
 6673 014e 13E0     		b	.L301
 6674              	.L303:
1609:ui.c          ****         }  
1610:ui.c          ****         else
1611:ui.c          ****         {
1612:ui.c          ****             knobPanelLightActive = 1;
 6675              		.loc 1 1612 0
 6676 0150 194B     		ldr	r3, .L305+48
 6677 0152 0122     		movs	r2, #1
 6678 0154 1A70     		strb	r2, [r3]
1613:ui.c          ****             if (whichMacroPageIsActive == 0)
 6679              		.loc 1 1613 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 151


 6680 0156 194B     		ldr	r3, .L305+52
 6681 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6682 015a 002B     		cmp	r3, #0
 6683 015c 06D1     		bne	.L304
1614:ui.c          ****             {
1615:ui.c          ****                 knobPanelLight1_Write(1);
 6684              		.loc 1 1615 0
 6685 015e 0120     		movs	r0, #1
 6686 0160 FFF7FEFF 		bl	knobPanelLight1_Write
1616:ui.c          ****                 knobPanelLight2_Write(0);
 6687              		.loc 1 1616 0
 6688 0164 0020     		movs	r0, #0
 6689 0166 FFF7FEFF 		bl	knobPanelLight2_Write
 6690 016a 05E0     		b	.L301
 6691              	.L304:
1617:ui.c          ****             }
1618:ui.c          ****             else
1619:ui.c          ****             {
1620:ui.c          ****                 knobPanelLight1_Write(0);
 6692              		.loc 1 1620 0
 6693 016c 0020     		movs	r0, #0
 6694 016e FFF7FEFF 		bl	knobPanelLight1_Write
1621:ui.c          ****                 knobPanelLight2_Write(1);
 6695              		.loc 1 1621 0
 6696 0172 0120     		movs	r0, #1
 6697 0174 FFF7FEFF 		bl	knobPanelLight2_Write
 6698              	.L301:
1622:ui.c          ****             }
1623:ui.c          ****         }
1624:ui.c          ****     }
1625:ui.c          ****     controlsDisplayed = 0;
 6699              		.loc 1 1625 0
 6700 0178 114B     		ldr	r3, .L305+56
 6701 017a 0022     		movs	r2, #0
 6702 017c 1A70     		strb	r2, [r3]
1626:ui.c          **** }
 6703              		.loc 1 1626 0
 6704 017e 00BF     		nop
 6705 0180 0C37     		adds	r7, r7, #12
 6706              		.cfi_def_cfa_offset 12
 6707 0182 BD46     		mov	sp, r7
 6708              		.cfi_def_cfa_register 13
 6709              		@ sp needed
 6710 0184 90BD     		pop	{r4, r7, pc}
 6711              	.L306:
 6712 0186 00BF     		.align	2
 6713              	.L305:
 6714 0188 00000000 		.word	patchNum
 6715 018c 00000000 		.word	macroNamesArray
 6716 0190 00000000 		.word	presetNamesArray
 6717 0194 00000000 		.word	theGFX
 6718 0198 00000000 		.word	currentCopedent
 6719 019c 38030000 		.word	.LC50
 6720 01a0 00000000 		.word	copedentNamesArray
 6721 01a4 00000000 		.word	mainOLEDWaitingToSend
 6722 01a8 00000000 		.word	presetAlreadyDisplayed
 6723 01ac 00000000 		.word	whichMacro
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 152


 6724 01b0 00000000 		.word	macroOLEDWaitingToSend
 6725 01b4 00000000 		.word	volumeWaitingToSend
 6726 01b8 00000000 		.word	knobPanelLightActive
 6727 01bc 00000000 		.word	whichMacroPageIsActive
 6728 01c0 00000000 		.word	controlsDisplayed
 6729              		.cfi_endproc
 6730              	.LFE78:
 6731              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 6732              		.section	.rodata
 6733 033a 0000     		.align	2
 6734              	.LC51:
 6735 033c 413A2000 		.ascii	"A: \000"
 6736              		.align	2
 6737              	.LC52:
 6738 0340 423A2000 		.ascii	"B: \000"
 6739              		.align	2
 6740              	.LC53:
 6741 0344 583A2000 		.ascii	"X: \000"
 6742              		.align	2
 6743              	.LC54:
 6744 0348 593A2000 		.ascii	"Y: \000"
 6745              		.section	.text.displayCurrentControlNames,"ax",%progbits
 6746              		.align	2
 6747              		.global	displayCurrentControlNames
 6748              		.thumb
 6749              		.thumb_func
 6750              		.type	displayCurrentControlNames, %function
 6751              	displayCurrentControlNames:
 6752              	.LFB79:
1627:ui.c          **** 
1628:ui.c          **** void displayCurrentControlNames(void)
1629:ui.c          **** {
 6753              		.loc 1 1629 0
 6754              		.cfi_startproc
 6755              		@ args = 0, pretend = 0, frame = 8
 6756              		@ frame_needed = 1, uses_anonymous_args = 0
 6757 0000 90B5     		push	{r4, r7, lr}
 6758              		.cfi_def_cfa_offset 12
 6759              		.cfi_offset 4, -12
 6760              		.cfi_offset 7, -8
 6761              		.cfi_offset 14, -4
 6762 0002 83B0     		sub	sp, sp, #12
 6763              		.cfi_def_cfa_offset 24
 6764 0004 00AF     		add	r7, sp, #0
 6765              		.cfi_def_cfa_register 7
1630:ui.c          ****     int controlCheck = 0;
 6766              		.loc 1 1630 0
 6767 0006 0023     		movs	r3, #0
 6768 0008 7B60     		str	r3, [r7, #4]
 6769              	.LBB29:
1631:ui.c          ****     for (int i = 0; i < NUM_CONTROLS; i++)
 6770              		.loc 1 1631 0
 6771 000a 0023     		movs	r3, #0
 6772 000c 3B60     		str	r3, [r7]
 6773 000e 17E0     		b	.L308
 6774              	.L310:
1632:ui.c          ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 153


1633:ui.c          ****         if (controlNamesArray[patchNum][i][0] == 255)
 6775              		.loc 1 1633 0
 6776 0010 494B     		ldr	r3, .L313
 6777 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6778 0014 1846     		mov	r0, r3
 6779 0016 4949     		ldr	r1, .L313+4
 6780 0018 3B68     		ldr	r3, [r7]
 6781 001a 1A46     		mov	r2, r3
 6782 001c 9200     		lsls	r2, r2, #2
 6783 001e 1A44     		add	r2, r2, r3
 6784 0020 5300     		lsls	r3, r2, #1
 6785 0022 1A46     		mov	r2, r3
 6786 0024 0346     		mov	r3, r0
 6787 0026 9B00     		lsls	r3, r3, #2
 6788 0028 0344     		add	r3, r3, r0
 6789 002a DB00     		lsls	r3, r3, #3
 6790 002c 1344     		add	r3, r3, r2
 6791 002e 0B44     		add	r3, r3, r1
 6792 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6793 0032 FF2B     		cmp	r3, #255
 6794 0034 01D1     		bne	.L309
1634:ui.c          ****         {
1635:ui.c          ****             controlCheck = 1;
 6795              		.loc 1 1635 0
 6796 0036 0123     		movs	r3, #1
 6797 0038 7B60     		str	r3, [r7, #4]
 6798              	.L309:
1631:ui.c          ****     {
 6799              		.loc 1 1631 0 discriminator 2
 6800 003a 3B68     		ldr	r3, [r7]
 6801 003c 0133     		adds	r3, r3, #1
 6802 003e 3B60     		str	r3, [r7]
 6803              	.L308:
1631:ui.c          ****     {
 6804              		.loc 1 1631 0 is_stmt 0 discriminator 1
 6805 0040 3B68     		ldr	r3, [r7]
 6806 0042 032B     		cmp	r3, #3
 6807 0044 E4DD     		ble	.L310
 6808              	.LBE29:
1636:ui.c          ****         }  
1637:ui.c          ****     }
1638:ui.c          ****     if (controlCheck == 0) //don't display if the name data still hasn't been retrieved by the SPI 
 6809              		.loc 1 1638 0 is_stmt 1
 6810 0046 7B68     		ldr	r3, [r7, #4]
 6811 0048 002B     		cmp	r3, #0
 6812 004a 70D1     		bne	.L312
1639:ui.c          ****     {
1640:ui.c          ****         OLEDclear(128, 64);
 6813              		.loc 1 1640 0
 6814 004c 4021     		movs	r1, #64
 6815 004e 8020     		movs	r0, #128
 6816 0050 FFF7FEFF 		bl	OLEDclear
1641:ui.c          ****         OLEDtextColor(1, 0);
 6817              		.loc 1 1641 0
 6818 0054 0021     		movs	r1, #0
 6819 0056 0120     		movs	r0, #1
 6820 0058 FFF7FEFF 		bl	OLEDtextColor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 154


1642:ui.c          ****         myGFX_setFont(0);
 6821              		.loc 1 1642 0
 6822 005c 0020     		movs	r0, #0
 6823 005e FFF7FEFF 		bl	myGFX_setFont
1643:ui.c          ****         OLEDwriteString("A: ", 3, 0, FirstLine);
 6824              		.loc 1 1643 0
 6825 0062 0023     		movs	r3, #0
 6826 0064 0022     		movs	r2, #0
 6827 0066 0321     		movs	r1, #3
 6828 0068 3548     		ldr	r0, .L313+8
 6829 006a FFF7FEFF 		bl	OLEDwriteString
1644:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][0][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6830              		.loc 1 1644 0
 6831 006e 324B     		ldr	r3, .L313
 6832 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6833 0072 1A46     		mov	r2, r3
 6834 0074 1346     		mov	r3, r2
 6835 0076 9B00     		lsls	r3, r3, #2
 6836 0078 1344     		add	r3, r3, r2
 6837 007a DB00     		lsls	r3, r3, #3
 6838 007c 2F4A     		ldr	r2, .L313+4
 6839 007e 9C18     		adds	r4, r3, r2
 6840 0080 FFF7FEFF 		bl	OLEDgetCursor
 6841 0084 0346     		mov	r3, r0
 6842 0086 9A1F     		subs	r2, r3, #6
 6843 0088 0023     		movs	r3, #0
 6844 008a 0A21     		movs	r1, #10
 6845 008c 2046     		mov	r0, r4
 6846 008e FFF7FEFF 		bl	OLEDwriteString
1645:ui.c          ****         OLEDwriteString("B: ", 3, 0, SecondLine);
 6847              		.loc 1 1645 0
 6848 0092 0123     		movs	r3, #1
 6849 0094 0022     		movs	r2, #0
 6850 0096 0321     		movs	r1, #3
 6851 0098 2A48     		ldr	r0, .L313+12
 6852 009a FFF7FEFF 		bl	OLEDwriteString
1646:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][1][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6853              		.loc 1 1646 0
 6854 009e 264B     		ldr	r3, .L313
 6855 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6856 00a2 1A46     		mov	r2, r3
 6857 00a4 1346     		mov	r3, r2
 6858 00a6 9B00     		lsls	r3, r3, #2
 6859 00a8 1344     		add	r3, r3, r2
 6860 00aa DB00     		lsls	r3, r3, #3
 6861 00ac 0A33     		adds	r3, r3, #10
 6862 00ae 234A     		ldr	r2, .L313+4
 6863 00b0 9C18     		adds	r4, r3, r2
 6864 00b2 FFF7FEFF 		bl	OLEDgetCursor
 6865 00b6 0346     		mov	r3, r0
 6866 00b8 9A1F     		subs	r2, r3, #6
 6867 00ba 0123     		movs	r3, #1
 6868 00bc 0A21     		movs	r1, #10
 6869 00be 2046     		mov	r0, r4
 6870 00c0 FFF7FEFF 		bl	OLEDwriteString
1647:ui.c          ****         OLEDwriteString("X: ", 3, 0, ThirdLine);
 6871              		.loc 1 1647 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 155


 6872 00c4 0223     		movs	r3, #2
 6873 00c6 0022     		movs	r2, #0
 6874 00c8 0321     		movs	r1, #3
 6875 00ca 1F48     		ldr	r0, .L313+16
 6876 00cc FFF7FEFF 		bl	OLEDwriteString
1648:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][2][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6877              		.loc 1 1648 0
 6878 00d0 194B     		ldr	r3, .L313
 6879 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6880 00d4 1A46     		mov	r2, r3
 6881 00d6 1346     		mov	r3, r2
 6882 00d8 9B00     		lsls	r3, r3, #2
 6883 00da 1344     		add	r3, r3, r2
 6884 00dc DB00     		lsls	r3, r3, #3
 6885 00de 1433     		adds	r3, r3, #20
 6886 00e0 164A     		ldr	r2, .L313+4
 6887 00e2 9C18     		adds	r4, r3, r2
 6888 00e4 FFF7FEFF 		bl	OLEDgetCursor
 6889 00e8 0346     		mov	r3, r0
 6890 00ea 9A1F     		subs	r2, r3, #6
 6891 00ec 0223     		movs	r3, #2
 6892 00ee 0A21     		movs	r1, #10
 6893 00f0 2046     		mov	r0, r4
 6894 00f2 FFF7FEFF 		bl	OLEDwriteString
1649:ui.c          ****         OLEDwriteString("Y: ", 3, 0, FourthLine);
 6895              		.loc 1 1649 0
 6896 00f6 0323     		movs	r3, #3
 6897 00f8 0022     		movs	r2, #0
 6898 00fa 0321     		movs	r1, #3
 6899 00fc 1348     		ldr	r0, .L313+20
 6900 00fe FFF7FEFF 		bl	OLEDwriteString
1650:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][3][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6901              		.loc 1 1650 0
 6902 0102 0D4B     		ldr	r3, .L313
 6903 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6904 0106 1A46     		mov	r2, r3
 6905 0108 1346     		mov	r3, r2
 6906 010a 9B00     		lsls	r3, r3, #2
 6907 010c 1344     		add	r3, r3, r2
 6908 010e DB00     		lsls	r3, r3, #3
 6909 0110 1E33     		adds	r3, r3, #30
 6910 0112 0A4A     		ldr	r2, .L313+4
 6911 0114 9C18     		adds	r4, r3, r2
 6912 0116 FFF7FEFF 		bl	OLEDgetCursor
 6913 011a 0346     		mov	r3, r0
 6914 011c 9A1F     		subs	r2, r3, #6
 6915 011e 0323     		movs	r3, #3
 6916 0120 0A21     		movs	r1, #10
 6917 0122 2046     		mov	r0, r4
 6918 0124 FFF7FEFF 		bl	OLEDwriteString
1651:ui.c          **** 
1652:ui.c          ****         mainOLEDWaitingToSend = 1;
 6919              		.loc 1 1652 0
 6920 0128 094B     		ldr	r3, .L313+24
 6921 012a 0122     		movs	r2, #1
 6922 012c 1A70     		strb	r2, [r3]
 6923              	.L312:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 156


1653:ui.c          ****     }
1654:ui.c          **** }
 6924              		.loc 1 1654 0
 6925 012e 00BF     		nop
 6926 0130 0C37     		adds	r7, r7, #12
 6927              		.cfi_def_cfa_offset 12
 6928 0132 BD46     		mov	sp, r7
 6929              		.cfi_def_cfa_register 13
 6930              		@ sp needed
 6931 0134 90BD     		pop	{r4, r7, pc}
 6932              	.L314:
 6933 0136 00BF     		.align	2
 6934              	.L313:
 6935 0138 00000000 		.word	patchNum
 6936 013c 00000000 		.word	controlNamesArray
 6937 0140 3C030000 		.word	.LC51
 6938 0144 40030000 		.word	.LC52
 6939 0148 44030000 		.word	.LC53
 6940 014c 48030000 		.word	.LC54
 6941 0150 00000000 		.word	mainOLEDWaitingToSend
 6942              		.cfi_endproc
 6943              	.LFE79:
 6944              		.size	displayCurrentControlNames, .-displayCurrentControlNames
 6945              		.text
 6946              	.Letext0:
 6947              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6948              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6949              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 6950              		.file 5 "gfx_font.h"
 6951              		.file 6 "gfx.h"
 6952              		.file 7 "main.h"
 6953              		.file 8 "oled.h"
 6954              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 6955              		.file 10 "Generated_Source\\PSoC5/Decoder_1.h"
 6956              		.section	.debug_info,"",%progbits
 6957              	.Ldebug_info0:
 6958 0000 090E0000 		.4byte	0xe09
 6959 0004 0400     		.2byte	0x4
 6960 0006 00000000 		.4byte	.Ldebug_abbrev0
 6961 000a 04       		.byte	0x4
 6962 000b 01       		.uleb128 0x1
 6963 000c D2080000 		.4byte	.LASF191
 6964 0010 0C       		.byte	0xc
 6965 0011 E1010000 		.4byte	.LASF192
 6966 0015 CF020000 		.4byte	.LASF193
 6967 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6968 001d 00000000 		.4byte	0
 6969 0021 00000000 		.4byte	.Ldebug_line0
 6970 0025 02       		.uleb128 0x2
 6971 0026 61010000 		.4byte	.LASF0
 6972 002a 02       		.byte	0x2
 6973 002b 1B       		.byte	0x1b
 6974 002c 30000000 		.4byte	0x30
 6975 0030 03       		.uleb128 0x3
 6976 0031 01       		.byte	0x1
 6977 0032 06       		.byte	0x6
 6978 0033 BF010000 		.4byte	.LASF2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 157


 6979 0037 02       		.uleb128 0x2
 6980 0038 B4000000 		.4byte	.LASF1
 6981 003c 02       		.byte	0x2
 6982 003d 1D       		.byte	0x1d
 6983 003e 42000000 		.4byte	0x42
 6984 0042 03       		.uleb128 0x3
 6985 0043 01       		.byte	0x1
 6986 0044 08       		.byte	0x8
 6987 0045 D0060000 		.4byte	.LASF3
 6988 0049 02       		.uleb128 0x2
 6989 004a 230A0000 		.4byte	.LASF4
 6990 004e 02       		.byte	0x2
 6991 004f 29       		.byte	0x29
 6992 0050 54000000 		.4byte	0x54
 6993 0054 03       		.uleb128 0x3
 6994 0055 02       		.byte	0x2
 6995 0056 05       		.byte	0x5
 6996 0057 09070000 		.4byte	.LASF5
 6997 005b 02       		.uleb128 0x2
 6998 005c 02080000 		.4byte	.LASF6
 6999 0060 02       		.byte	0x2
 7000 0061 2B       		.byte	0x2b
 7001 0062 66000000 		.4byte	0x66
 7002 0066 03       		.uleb128 0x3
 7003 0067 02       		.byte	0x2
 7004 0068 07       		.byte	0x7
 7005 0069 4B040000 		.4byte	.LASF7
 7006 006d 02       		.uleb128 0x2
 7007 006e 3D080000 		.4byte	.LASF8
 7008 0072 02       		.byte	0x2
 7009 0073 3F       		.byte	0x3f
 7010 0074 78000000 		.4byte	0x78
 7011 0078 03       		.uleb128 0x3
 7012 0079 04       		.byte	0x4
 7013 007a 05       		.byte	0x5
 7014 007b 3B020000 		.4byte	.LASF9
 7015 007f 03       		.uleb128 0x3
 7016 0080 04       		.byte	0x4
 7017 0081 07       		.byte	0x7
 7018 0082 BF030000 		.4byte	.LASF10
 7019 0086 03       		.uleb128 0x3
 7020 0087 08       		.byte	0x8
 7021 0088 05       		.byte	0x5
 7022 0089 B1010000 		.4byte	.LASF11
 7023 008d 03       		.uleb128 0x3
 7024 008e 08       		.byte	0x8
 7025 008f 07       		.byte	0x7
 7026 0090 13010000 		.4byte	.LASF12
 7027 0094 04       		.uleb128 0x4
 7028 0095 04       		.byte	0x4
 7029 0096 05       		.byte	0x5
 7030 0097 696E7400 		.ascii	"int\000"
 7031 009b 03       		.uleb128 0x3
 7032 009c 04       		.byte	0x4
 7033 009d 07       		.byte	0x7
 7034 009e 9F030000 		.4byte	.LASF13
 7035 00a2 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 158


 7036 00a3 C4080000 		.4byte	.LASF14
 7037 00a7 03       		.byte	0x3
 7038 00a8 14       		.byte	0x14
 7039 00a9 25000000 		.4byte	0x25
 7040 00ad 02       		.uleb128 0x2
 7041 00ae E1090000 		.4byte	.LASF15
 7042 00b2 03       		.byte	0x3
 7043 00b3 18       		.byte	0x18
 7044 00b4 37000000 		.4byte	0x37
 7045 00b8 02       		.uleb128 0x2
 7046 00b9 47080000 		.4byte	.LASF16
 7047 00bd 03       		.byte	0x3
 7048 00be 20       		.byte	0x20
 7049 00bf 49000000 		.4byte	0x49
 7050 00c3 02       		.uleb128 0x2
 7051 00c4 82020000 		.4byte	.LASF17
 7052 00c8 03       		.byte	0x3
 7053 00c9 24       		.byte	0x24
 7054 00ca 5B000000 		.4byte	0x5b
 7055 00ce 02       		.uleb128 0x2
 7056 00cf C8060000 		.4byte	.LASF18
 7057 00d3 03       		.byte	0x3
 7058 00d4 2C       		.byte	0x2c
 7059 00d5 6D000000 		.4byte	0x6d
 7060 00d9 05       		.uleb128 0x5
 7061 00da 68020000 		.4byte	.LASF19
 7062 00de 04       		.byte	0x4
 7063 00df E901     		.2byte	0x1e9
 7064 00e1 42000000 		.4byte	0x42
 7065 00e5 03       		.uleb128 0x3
 7066 00e6 04       		.byte	0x4
 7067 00e7 04       		.byte	0x4
 7068 00e8 61060000 		.4byte	.LASF20
 7069 00ec 03       		.uleb128 0x3
 7070 00ed 08       		.byte	0x8
 7071 00ee 04       		.byte	0x4
 7072 00ef 8B020000 		.4byte	.LASF21
 7073 00f3 03       		.uleb128 0x3
 7074 00f4 01       		.byte	0x1
 7075 00f5 08       		.byte	0x8
 7076 00f6 D2070000 		.4byte	.LASF22
 7077 00fa 03       		.uleb128 0x3
 7078 00fb 08       		.byte	0x8
 7079 00fc 04       		.byte	0x4
 7080 00fd 77050000 		.4byte	.LASF23
 7081 0101 03       		.uleb128 0x3
 7082 0102 04       		.byte	0x4
 7083 0103 07       		.byte	0x7
 7084 0104 56050000 		.4byte	.LASF24
 7085 0108 06       		.uleb128 0x6
 7086 0109 04       		.byte	0x4
 7087 010a 0E010000 		.4byte	0x10e
 7088 010e 07       		.uleb128 0x7
 7089 010f F3000000 		.4byte	0xf3
 7090 0113 08       		.uleb128 0x8
 7091 0114 C3000000 		.4byte	0xc3
 7092 0118 09       		.uleb128 0x9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 159


 7093 0119 2D080000 		.4byte	.LASF69
 7094 011d 01       		.byte	0x1
 7095 011e 42000000 		.4byte	0x42
 7096 0122 07       		.byte	0x7
 7097 0123 91       		.byte	0x91
 7098 0124 83010000 		.4byte	0x183
 7099 0128 0A       		.uleb128 0xa
 7100 0129 77010000 		.4byte	.LASF25
 7101 012d 00       		.byte	0
 7102 012e 0A       		.uleb128 0xa
 7103 012f 130A0000 		.4byte	.LASF26
 7104 0133 01       		.byte	0x1
 7105 0134 0A       		.uleb128 0xa
 7106 0135 98020000 		.4byte	.LASF27
 7107 0139 02       		.byte	0x2
 7108 013a 0A       		.uleb128 0xa
 7109 013b 81090000 		.4byte	.LASF28
 7110 013f 03       		.byte	0x3
 7111 0140 0A       		.uleb128 0xa
 7112 0141 60090000 		.4byte	.LASF29
 7113 0145 04       		.byte	0x4
 7114 0146 0A       		.uleb128 0xa
 7115 0147 88070000 		.4byte	.LASF30
 7116 014b 05       		.byte	0x5
 7117 014c 0A       		.uleb128 0xa
 7118 014d 2C050000 		.4byte	.LASF31
 7119 0151 06       		.byte	0x6
 7120 0152 0A       		.uleb128 0xa
 7121 0153 11060000 		.4byte	.LASF32
 7122 0157 07       		.byte	0x7
 7123 0158 0A       		.uleb128 0xa
 7124 0159 9F050000 		.4byte	.LASF33
 7125 015d 08       		.byte	0x8
 7126 015e 0A       		.uleb128 0xa
 7127 015f F4070000 		.4byte	.LASF34
 7128 0163 09       		.byte	0x9
 7129 0164 0A       		.uleb128 0xa
 7130 0165 00000000 		.4byte	.LASF35
 7131 0169 0A       		.byte	0xa
 7132 016a 0A       		.uleb128 0xa
 7133 016b 80010000 		.4byte	.LASF36
 7134 016f 0B       		.byte	0xb
 7135 0170 0A       		.uleb128 0xa
 7136 0171 9C090000 		.4byte	.LASF37
 7137 0175 0C       		.byte	0xc
 7138 0176 0A       		.uleb128 0xa
 7139 0177 7F060000 		.4byte	.LASF38
 7140 017b 0D       		.byte	0xd
 7141 017c 0A       		.uleb128 0xa
 7142 017d 30010000 		.4byte	.LASF39
 7143 0181 0E       		.byte	0xe
 7144 0182 00       		.byte	0
 7145 0183 0B       		.uleb128 0xb
 7146 0184 08       		.byte	0x8
 7147 0185 05       		.byte	0x5
 7148 0186 0C       		.byte	0xc
 7149 0187 D4010000 		.4byte	0x1d4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 160


 7150 018b 0C       		.uleb128 0xc
 7151 018c A60A0000 		.4byte	.LASF40
 7152 0190 05       		.byte	0x5
 7153 0191 0D       		.byte	0xd
 7154 0192 C3000000 		.4byte	0xc3
 7155 0196 00       		.byte	0
 7156 0197 0C       		.uleb128 0xc
 7157 0198 21040000 		.4byte	.LASF41
 7158 019c 05       		.byte	0x5
 7159 019d 0E       		.byte	0xe
 7160 019e AD000000 		.4byte	0xad
 7161 01a2 02       		.byte	0x2
 7162 01a3 0C       		.uleb128 0xc
 7163 01a4 7F000000 		.4byte	.LASF42
 7164 01a8 05       		.byte	0x5
 7165 01a9 0E       		.byte	0xe
 7166 01aa AD000000 		.4byte	0xad
 7167 01ae 03       		.byte	0x3
 7168 01af 0C       		.uleb128 0xc
 7169 01b0 00070000 		.4byte	.LASF43
 7170 01b4 05       		.byte	0x5
 7171 01b5 0F       		.byte	0xf
 7172 01b6 AD000000 		.4byte	0xad
 7173 01ba 04       		.byte	0x4
 7174 01bb 0C       		.uleb128 0xc
 7175 01bc 3A050000 		.4byte	.LASF44
 7176 01c0 05       		.byte	0x5
 7177 01c1 10       		.byte	0x10
 7178 01c2 A2000000 		.4byte	0xa2
 7179 01c6 05       		.byte	0x5
 7180 01c7 0C       		.uleb128 0xc
 7181 01c8 BF0A0000 		.4byte	.LASF45
 7182 01cc 05       		.byte	0x5
 7183 01cd 10       		.byte	0x10
 7184 01ce A2000000 		.4byte	0xa2
 7185 01d2 06       		.byte	0x6
 7186 01d3 00       		.byte	0
 7187 01d4 02       		.uleb128 0x2
 7188 01d5 E2030000 		.4byte	.LASF46
 7189 01d9 05       		.byte	0x5
 7190 01da 11       		.byte	0x11
 7191 01db 83010000 		.4byte	0x183
 7192 01df 0B       		.uleb128 0xb
 7193 01e0 0C       		.byte	0xc
 7194 01e1 05       		.byte	0x5
 7195 01e2 13       		.byte	0x13
 7196 01e3 24020000 		.4byte	0x224
 7197 01e7 0C       		.uleb128 0xc
 7198 01e8 0C0A0000 		.4byte	.LASF47
 7199 01ec 05       		.byte	0x5
 7200 01ed 14       		.byte	0x14
 7201 01ee 24020000 		.4byte	0x224
 7202 01f2 00       		.byte	0
 7203 01f3 0C       		.uleb128 0xc
 7204 01f4 06040000 		.4byte	.LASF48
 7205 01f8 05       		.byte	0x5
 7206 01f9 15       		.byte	0x15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 161


 7207 01fa 2A020000 		.4byte	0x22a
 7208 01fe 04       		.byte	0x4
 7209 01ff 0C       		.uleb128 0xc
 7210 0200 35020000 		.4byte	.LASF49
 7211 0204 05       		.byte	0x5
 7212 0205 16       		.byte	0x16
 7213 0206 AD000000 		.4byte	0xad
 7214 020a 08       		.byte	0x8
 7215 020b 0C       		.uleb128 0xc
 7216 020c A5040000 		.4byte	.LASF50
 7217 0210 05       		.byte	0x5
 7218 0211 16       		.byte	0x16
 7219 0212 AD000000 		.4byte	0xad
 7220 0216 09       		.byte	0x9
 7221 0217 0C       		.uleb128 0xc
 7222 0218 B0070000 		.4byte	.LASF51
 7223 021c 05       		.byte	0x5
 7224 021d 17       		.byte	0x17
 7225 021e AD000000 		.4byte	0xad
 7226 0222 0A       		.byte	0xa
 7227 0223 00       		.byte	0
 7228 0224 06       		.uleb128 0x6
 7229 0225 04       		.byte	0x4
 7230 0226 AD000000 		.4byte	0xad
 7231 022a 06       		.uleb128 0x6
 7232 022b 04       		.byte	0x4
 7233 022c D4010000 		.4byte	0x1d4
 7234 0230 02       		.uleb128 0x2
 7235 0231 08050000 		.4byte	.LASF52
 7236 0235 05       		.byte	0x5
 7237 0236 18       		.byte	0x18
 7238 0237 DF010000 		.4byte	0x1df
 7239 023b 0D       		.uleb128 0xd
 7240 023c D6050000 		.4byte	.LASF194
 7241 0240 24       		.byte	0x24
 7242 0241 06       		.byte	0x6
 7243 0242 1C       		.byte	0x1c
 7244 0243 08030000 		.4byte	0x308
 7245 0247 0C       		.uleb128 0xc
 7246 0248 FF0A0000 		.4byte	.LASF53
 7247 024c 06       		.byte	0x6
 7248 024d 1E       		.byte	0x1e
 7249 024e B8000000 		.4byte	0xb8
 7250 0252 00       		.byte	0
 7251 0253 0C       		.uleb128 0xc
 7252 0254 DE060000 		.4byte	.LASF54
 7253 0258 06       		.byte	0x6
 7254 0259 1F       		.byte	0x1f
 7255 025a B8000000 		.4byte	0xb8
 7256 025e 02       		.byte	0x2
 7257 025f 0C       		.uleb128 0xc
 7258 0260 1A040000 		.4byte	.LASF55
 7259 0264 06       		.byte	0x6
 7260 0265 20       		.byte	0x20
 7261 0266 C3000000 		.4byte	0xc3
 7262 026a 04       		.byte	0x4
 7263 026b 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 162


 7264 026c 8E090000 		.4byte	.LASF56
 7265 0270 06       		.byte	0x6
 7266 0271 21       		.byte	0x21
 7267 0272 C3000000 		.4byte	0xc3
 7268 0276 06       		.byte	0x6
 7269 0277 0C       		.uleb128 0xc
 7270 0278 67080000 		.4byte	.LASF57
 7271 027c 06       		.byte	0x6
 7272 027d 22       		.byte	0x22
 7273 027e C3000000 		.4byte	0xc3
 7274 0282 08       		.byte	0x8
 7275 0283 0C       		.uleb128 0xc
 7276 0284 C9070000 		.4byte	.LASF58
 7277 0288 06       		.byte	0x6
 7278 0289 23       		.byte	0x23
 7279 028a C3000000 		.4byte	0xc3
 7280 028e 0A       		.byte	0xa
 7281 028f 0C       		.uleb128 0xc
 7282 0290 96050000 		.4byte	.LASF59
 7283 0294 06       		.byte	0x6
 7284 0295 24       		.byte	0x24
 7285 0296 C3000000 		.4byte	0xc3
 7286 029a 0C       		.byte	0xc
 7287 029b 0C       		.uleb128 0xc
 7288 029c B6030000 		.4byte	.LASF60
 7289 02a0 06       		.byte	0x6
 7290 02a1 25       		.byte	0x25
 7291 02a2 C3000000 		.4byte	0xc3
 7292 02a6 0E       		.byte	0xe
 7293 02a7 0C       		.uleb128 0xc
 7294 02a8 7C080000 		.4byte	.LASF61
 7295 02ac 06       		.byte	0x6
 7296 02ad 26       		.byte	0x26
 7297 02ae C3000000 		.4byte	0xc3
 7298 02b2 10       		.byte	0x10
 7299 02b3 0C       		.uleb128 0xc
 7300 02b4 860A0000 		.4byte	.LASF62
 7301 02b8 06       		.byte	0x6
 7302 02b9 27       		.byte	0x27
 7303 02ba C3000000 		.4byte	0xc3
 7304 02be 12       		.byte	0x12
 7305 02bf 0C       		.uleb128 0xc
 7306 02c0 1F020000 		.4byte	.LASF63
 7307 02c4 06       		.byte	0x6
 7308 02c5 28       		.byte	0x28
 7309 02c6 C3000000 		.4byte	0xc3
 7310 02ca 14       		.byte	0x14
 7311 02cb 0C       		.uleb128 0xc
 7312 02cc AD000000 		.4byte	.LASF64
 7313 02d0 06       		.byte	0x6
 7314 02d1 29       		.byte	0x29
 7315 02d2 C3000000 		.4byte	0xc3
 7316 02d6 16       		.byte	0x16
 7317 02d7 0C       		.uleb128 0xc
 7318 02d8 E1070000 		.4byte	.LASF65
 7319 02dc 06       		.byte	0x6
 7320 02dd 2A       		.byte	0x2a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 163


 7321 02de 08030000 		.4byte	0x308
 7322 02e2 18       		.byte	0x18
 7323 02e3 0C       		.uleb128 0xc
 7324 02e4 CB010000 		.4byte	.LASF66
 7325 02e8 06       		.byte	0x6
 7326 02e9 2B       		.byte	0x2b
 7327 02ea C3000000 		.4byte	0xc3
 7328 02ee 1C       		.byte	0x1c
 7329 02ef 0C       		.uleb128 0xc
 7330 02f0 B4020000 		.4byte	.LASF67
 7331 02f4 06       		.byte	0x6
 7332 02f5 2C       		.byte	0x2c
 7333 02f6 C3000000 		.4byte	0xc3
 7334 02fa 1E       		.byte	0x1e
 7335 02fb 0C       		.uleb128 0xc
 7336 02fc 0D080000 		.4byte	.LASF68
 7337 0300 06       		.byte	0x6
 7338 0301 2D       		.byte	0x2d
 7339 0302 C3000000 		.4byte	0xc3
 7340 0306 20       		.byte	0x20
 7341 0307 00       		.byte	0
 7342 0308 06       		.uleb128 0x6
 7343 0309 04       		.byte	0x4
 7344 030a 30020000 		.4byte	0x230
 7345 030e 0E       		.uleb128 0xe
 7346 030f 47465800 		.ascii	"GFX\000"
 7347 0313 06       		.byte	0x6
 7348 0314 2E       		.byte	0x2e
 7349 0315 3B020000 		.4byte	0x23b
 7350 0319 09       		.uleb128 0x9
 7351 031a E5060000 		.4byte	.LASF70
 7352 031e 01       		.byte	0x1
 7353 031f 42000000 		.4byte	0x42
 7354 0323 08       		.byte	0x8
 7355 0324 1D       		.byte	0x1d
 7356 0325 48030000 		.4byte	0x348
 7357 0329 0A       		.uleb128 0xa
 7358 032a E5040000 		.4byte	.LASF71
 7359 032e 00       		.byte	0
 7360 032f 0A       		.uleb128 0xa
 7361 0330 AD050000 		.4byte	.LASF72
 7362 0334 01       		.byte	0x1
 7363 0335 0A       		.uleb128 0xa
 7364 0336 61070000 		.4byte	.LASF73
 7365 033a 02       		.byte	0x2
 7366 033b 0A       		.uleb128 0xa
 7367 033c D6010000 		.4byte	.LASF74
 7368 0340 03       		.byte	0x3
 7369 0341 0A       		.uleb128 0xa
 7370 0342 00050000 		.4byte	.LASF75
 7371 0346 04       		.byte	0x4
 7372 0347 00       		.byte	0
 7373 0348 09       		.uleb128 0x9
 7374 0349 CD000000 		.4byte	.LASF76
 7375 034d 01       		.byte	0x1
 7376 034e 42000000 		.4byte	0x42
 7377 0352 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 164


 7378 0353 14       		.byte	0x14
 7379 0354 76030000 		.4byte	0x376
 7380 0358 0A       		.uleb128 0xa
 7381 0359 42050000 		.4byte	.LASF77
 7382 035d 00       		.byte	0
 7383 035e 0A       		.uleb128 0xa
 7384 035f 4D030000 		.4byte	.LASF78
 7385 0363 01       		.byte	0x1
 7386 0364 0A       		.uleb128 0xa
 7387 0365 38080000 		.4byte	.LASF79
 7388 0369 02       		.byte	0x2
 7389 036a 0F       		.uleb128 0xf
 7390 036b 557000   		.ascii	"Up\000"
 7391 036e 03       		.byte	0x3
 7392 036f 0A       		.uleb128 0xa
 7393 0370 92020000 		.4byte	.LASF80
 7394 0374 04       		.byte	0x4
 7395 0375 00       		.byte	0
 7396 0376 10       		.uleb128 0x10
 7397 0377 EC0A0000 		.4byte	.LASF92
 7398 037b 01       		.byte	0x1
 7399 037c 2A       		.byte	0x2a
 7400 037d 00000000 		.4byte	.LFB64
 7401 0381 040E0000 		.4byte	.LFE64-.LFB64
 7402 0385 01       		.uleb128 0x1
 7403 0386 9C       		.byte	0x9c
 7404 0387 18050000 		.4byte	0x518
 7405 038b 11       		.uleb128 0x11
 7406 038c 70080000 		.4byte	.LASF81
 7407 0390 01       		.byte	0x1
 7408 0391 50       		.byte	0x50
 7409 0392 AD000000 		.4byte	0xad
 7410 0396 02       		.uleb128 0x2
 7411 0397 91       		.byte	0x91
 7412 0398 5F       		.sleb128 -33
 7413 0399 12       		.uleb128 0x12
 7414 039a 30000000 		.4byte	.LBB2
 7415 039e 2E000000 		.4byte	.LBE2-.LBB2
 7416 03a2 B3030000 		.4byte	0x3b3
 7417 03a6 13       		.uleb128 0x13
 7418 03a7 6900     		.ascii	"i\000"
 7419 03a9 01       		.byte	0x1
 7420 03aa 34       		.byte	0x34
 7421 03ab 94000000 		.4byte	0x94
 7422 03af 02       		.uleb128 0x2
 7423 03b0 91       		.byte	0x91
 7424 03b1 6C       		.sleb128 -20
 7425 03b2 00       		.byte	0
 7426 03b3 12       		.uleb128 0x12
 7427 03b4 8E000000 		.4byte	.LBB3
 7428 03b8 2E000000 		.4byte	.LBE3-.LBB3
 7429 03bc CD030000 		.4byte	0x3cd
 7430 03c0 13       		.uleb128 0x13
 7431 03c1 6900     		.ascii	"i\000"
 7432 03c3 01       		.byte	0x1
 7433 03c4 45       		.byte	0x45
 7434 03c5 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 165


 7435 03c9 02       		.uleb128 0x2
 7436 03ca 91       		.byte	0x91
 7437 03cb 68       		.sleb128 -24
 7438 03cc 00       		.byte	0
 7439 03cd 14       		.uleb128 0x14
 7440 03ce 3E050000 		.4byte	.LBB4
 7441 03d2 88080000 		.4byte	.LBE4-.LBB4
 7442 03d6 15       		.uleb128 0x15
 7443 03d7 92060000 		.4byte	.LASF82
 7444 03db 01       		.byte	0x1
 7445 03dc 0D01     		.2byte	0x10d
 7446 03de A2000000 		.4byte	0xa2
 7447 03e2 02       		.uleb128 0x2
 7448 03e3 91       		.byte	0x91
 7449 03e4 5E       		.sleb128 -34
 7450 03e5 12       		.uleb128 0x12
 7451 03e6 6A050000 		.4byte	.LBB5
 7452 03ea D6000000 		.4byte	.LBE5-.LBB5
 7453 03ee 11040000 		.4byte	0x411
 7454 03f2 15       		.uleb128 0x15
 7455 03f3 99080000 		.4byte	.LASF83
 7456 03f7 01       		.byte	0x1
 7457 03f8 2901     		.2byte	0x129
 7458 03fa A2000000 		.4byte	0xa2
 7459 03fe 02       		.uleb128 0x2
 7460 03ff 91       		.byte	0x91
 7461 0400 5D       		.sleb128 -35
 7462 0401 15       		.uleb128 0x15
 7463 0402 8E040000 		.4byte	.LASF84
 7464 0406 01       		.byte	0x1
 7465 0407 2B01     		.2byte	0x12b
 7466 0409 AD000000 		.4byte	0xad
 7467 040d 02       		.uleb128 0x2
 7468 040e 91       		.byte	0x91
 7469 040f 5C       		.sleb128 -36
 7470 0410 00       		.byte	0
 7471 0411 12       		.uleb128 0x12
 7472 0412 42060000 		.4byte	.LBB6
 7473 0416 50000000 		.4byte	.LBE6-.LBB6
 7474 041a 2E040000 		.4byte	0x42e
 7475 041e 15       		.uleb128 0x15
 7476 041f 8E040000 		.4byte	.LASF84
 7477 0423 01       		.byte	0x1
 7478 0424 3401     		.2byte	0x134
 7479 0426 AD000000 		.4byte	0xad
 7480 042a 02       		.uleb128 0x2
 7481 042b 91       		.byte	0x91
 7482 042c 5B       		.sleb128 -37
 7483 042d 00       		.byte	0
 7484 042e 12       		.uleb128 0x12
 7485 042f AE060000 		.4byte	.LBB7
 7486 0433 54020000 		.4byte	.LBE7-.LBB7
 7487 0437 69040000 		.4byte	0x469
 7488 043b 15       		.uleb128 0x15
 7489 043c 38010000 		.4byte	.LASF85
 7490 0440 01       		.byte	0x1
 7491 0441 4801     		.2byte	0x148
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 166


 7492 0443 E5000000 		.4byte	0xe5
 7493 0447 02       		.uleb128 0x2
 7494 0448 91       		.byte	0x91
 7495 0449 64       		.sleb128 -28
 7496 044a 15       		.uleb128 0x15
 7497 044b FA090000 		.4byte	.LASF86
 7498 044f 01       		.byte	0x1
 7499 0450 5801     		.2byte	0x158
 7500 0452 E5000000 		.4byte	0xe5
 7501 0456 02       		.uleb128 0x2
 7502 0457 91       		.byte	0x91
 7503 0458 60       		.sleb128 -32
 7504 0459 15       		.uleb128 0x15
 7505 045a 8E040000 		.4byte	.LASF84
 7506 045e 01       		.byte	0x1
 7507 045f 6901     		.2byte	0x169
 7508 0461 AD000000 		.4byte	0xad
 7509 0465 02       		.uleb128 0x2
 7510 0466 91       		.byte	0x91
 7511 0467 5A       		.sleb128 -38
 7512 0468 00       		.byte	0
 7513 0469 12       		.uleb128 0x12
 7514 046a 1E090000 		.4byte	.LBB8
 7515 046e 32010000 		.4byte	.LBE8-.LBB8
 7516 0472 A4040000 		.4byte	0x4a4
 7517 0476 15       		.uleb128 0x15
 7518 0477 38010000 		.4byte	.LASF85
 7519 047b 01       		.byte	0x1
 7520 047c 8701     		.2byte	0x187
 7521 047e E5000000 		.4byte	0xe5
 7522 0482 02       		.uleb128 0x2
 7523 0483 91       		.byte	0x91
 7524 0484 54       		.sleb128 -44
 7525 0485 15       		.uleb128 0x15
 7526 0486 DB050000 		.4byte	.LASF87
 7527 048a 01       		.byte	0x1
 7528 048b 9801     		.2byte	0x198
 7529 048d A2000000 		.4byte	0xa2
 7530 0491 02       		.uleb128 0x2
 7531 0492 91       		.byte	0x91
 7532 0493 53       		.sleb128 -45
 7533 0494 15       		.uleb128 0x15
 7534 0495 8E040000 		.4byte	.LASF84
 7535 0499 01       		.byte	0x1
 7536 049a 9901     		.2byte	0x199
 7537 049c AD000000 		.4byte	0xad
 7538 04a0 02       		.uleb128 0x2
 7539 04a1 91       		.byte	0x91
 7540 04a2 52       		.sleb128 -46
 7541 04a3 00       		.byte	0
 7542 04a4 12       		.uleb128 0x12
 7543 04a5 6C0A0000 		.4byte	.LBB9
 7544 04a9 B0010000 		.4byte	.LBE9-.LBB9
 7545 04ad DF040000 		.4byte	0x4df
 7546 04b1 15       		.uleb128 0x15
 7547 04b2 6A050000 		.4byte	.LASF88
 7548 04b6 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 167


 7549 04b7 AE01     		.2byte	0x1ae
 7550 04b9 B8000000 		.4byte	0xb8
 7551 04bd 02       		.uleb128 0x2
 7552 04be 91       		.byte	0x91
 7553 04bf 50       		.sleb128 -48
 7554 04c0 15       		.uleb128 0x15
 7555 04c1 5A000000 		.4byte	.LASF89
 7556 04c5 01       		.byte	0x1
 7557 04c6 C101     		.2byte	0x1c1
 7558 04c8 E5000000 		.4byte	0xe5
 7559 04cc 02       		.uleb128 0x2
 7560 04cd 91       		.byte	0x91
 7561 04ce 4C       		.sleb128 -52
 7562 04cf 15       		.uleb128 0x15
 7563 04d0 8E040000 		.4byte	.LASF84
 7564 04d4 01       		.byte	0x1
 7565 04d5 C301     		.2byte	0x1c3
 7566 04d7 AD000000 		.4byte	0xad
 7567 04db 02       		.uleb128 0x2
 7568 04dc 91       		.byte	0x91
 7569 04dd 4B       		.sleb128 -53
 7570 04de 00       		.byte	0
 7571 04df 14       		.uleb128 0x14
 7572 04e0 380C0000 		.4byte	.LBB10
 7573 04e4 88010000 		.4byte	.LBE10-.LBB10
 7574 04e8 15       		.uleb128 0x15
 7575 04e9 00020000 		.4byte	.LASF90
 7576 04ed 01       		.byte	0x1
 7577 04ee DF01     		.2byte	0x1df
 7578 04f0 B8000000 		.4byte	0xb8
 7579 04f4 02       		.uleb128 0x2
 7580 04f5 91       		.byte	0x91
 7581 04f6 48       		.sleb128 -56
 7582 04f7 15       		.uleb128 0x15
 7583 04f8 EF040000 		.4byte	.LASF91
 7584 04fc 01       		.byte	0x1
 7585 04fd EF01     		.2byte	0x1ef
 7586 04ff 18050000 		.4byte	0x518
 7587 0503 02       		.uleb128 0x2
 7588 0504 91       		.byte	0x91
 7589 0505 44       		.sleb128 -60
 7590 0506 15       		.uleb128 0x15
 7591 0507 8E040000 		.4byte	.LASF84
 7592 050b 01       		.byte	0x1
 7593 050c F901     		.2byte	0x1f9
 7594 050e AD000000 		.4byte	0xad
 7595 0512 02       		.uleb128 0x2
 7596 0513 91       		.byte	0x91
 7597 0514 47       		.sleb128 -57
 7598 0515 00       		.byte	0
 7599 0516 00       		.byte	0
 7600 0517 00       		.byte	0
 7601 0518 16       		.uleb128 0x16
 7602 0519 AD000000 		.4byte	0xad
 7603 051d 28050000 		.4byte	0x528
 7604 0521 17       		.uleb128 0x17
 7605 0522 01010000 		.4byte	0x101
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 168


 7606 0526 01       		.byte	0x1
 7607 0527 00       		.byte	0
 7608 0528 18       		.uleb128 0x18
 7609 0529 6B070000 		.4byte	.LASF109
 7610 052d 01       		.byte	0x1
 7611 052e 2102     		.2byte	0x221
 7612 0530 00000000 		.4byte	.LFB65
 7613 0534 B4000000 		.4byte	.LFE65-.LFB65
 7614 0538 01       		.uleb128 0x1
 7615 0539 9C       		.byte	0x9c
 7616 053a 19       		.uleb128 0x19
 7617 053b 9C000000 		.4byte	.LASF93
 7618 053f 01       		.byte	0x1
 7619 0540 3902     		.2byte	0x239
 7620 0542 00000000 		.4byte	.LFB66
 7621 0546 C0010000 		.4byte	.LFE66-.LFB66
 7622 054a 01       		.uleb128 0x1
 7623 054b 9C       		.byte	0x9c
 7624 054c 87050000 		.4byte	0x587
 7625 0550 12       		.uleb128 0x12
 7626 0551 CC000000 		.4byte	.LBB11
 7627 0555 26000000 		.4byte	.LBE11-.LBB11
 7628 0559 6D050000 		.4byte	0x56d
 7629 055d 15       		.uleb128 0x15
 7630 055e DC040000 		.4byte	.LASF94
 7631 0562 01       		.byte	0x1
 7632 0563 5502     		.2byte	0x255
 7633 0565 AD000000 		.4byte	0xad
 7634 0569 02       		.uleb128 0x2
 7635 056a 91       		.byte	0x91
 7636 056b 6F       		.sleb128 -17
 7637 056c 00       		.byte	0
 7638 056d 14       		.uleb128 0x14
 7639 056e 14010000 		.4byte	.LBB12
 7640 0572 28000000 		.4byte	.LBE12-.LBB12
 7641 0576 15       		.uleb128 0x15
 7642 0577 DC040000 		.4byte	.LASF94
 7643 057b 01       		.byte	0x1
 7644 057c 5F02     		.2byte	0x25f
 7645 057e AD000000 		.4byte	0xad
 7646 0582 02       		.uleb128 0x2
 7647 0583 91       		.byte	0x91
 7648 0584 6E       		.sleb128 -18
 7649 0585 00       		.byte	0
 7650 0586 00       		.byte	0
 7651 0587 19       		.uleb128 0x19
 7652 0588 5C080000 		.4byte	.LASF95
 7653 058c 01       		.byte	0x1
 7654 058d 7002     		.2byte	0x270
 7655 058f 00000000 		.4byte	.LFB67
 7656 0593 94140000 		.4byte	.LFE67-.LFB67
 7657 0597 01       		.uleb128 0x1
 7658 0598 9C       		.byte	0x9c
 7659 0599 CF060000 		.4byte	0x6cf
 7660 059d 1A       		.uleb128 0x1a
 7661 059e C8020000 		.4byte	.LASF195
 7662 05a2 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 169


 7663 05a3 7002     		.2byte	0x270
 7664 05a5 48030000 		.4byte	0x348
 7665 05a9 02       		.uleb128 0x2
 7666 05aa 91       		.byte	0x91
 7667 05ab 57       		.sleb128 -41
 7668 05ac 15       		.uleb128 0x15
 7669 05ad 89030000 		.4byte	.LASF96
 7670 05b1 01       		.byte	0x1
 7671 05b2 7202     		.2byte	0x272
 7672 05b4 AD000000 		.4byte	0xad
 7673 05b8 02       		.uleb128 0x2
 7674 05b9 91       		.byte	0x91
 7675 05ba 77       		.sleb128 -9
 7676 05bb 12       		.uleb128 0x12
 7677 05bc C4040000 		.4byte	.LBB13
 7678 05c0 12020000 		.4byte	.LBE13-.LBB13
 7679 05c4 D8050000 		.4byte	0x5d8
 7680 05c8 15       		.uleb128 0x15
 7681 05c9 A7090000 		.4byte	.LASF97
 7682 05cd 01       		.byte	0x1
 7683 05ce 3003     		.2byte	0x330
 7684 05d0 AD000000 		.4byte	0xad
 7685 05d4 02       		.uleb128 0x2
 7686 05d5 91       		.byte	0x91
 7687 05d6 5F       		.sleb128 -33
 7688 05d7 00       		.byte	0
 7689 05d8 12       		.uleb128 0x12
 7690 05d9 E4060000 		.4byte	.LBB14
 7691 05dd E2000000 		.4byte	.LBE14-.LBB14
 7692 05e1 04060000 		.4byte	0x604
 7693 05e5 15       		.uleb128 0x15
 7694 05e6 DB050000 		.4byte	.LASF87
 7695 05ea 01       		.byte	0x1
 7696 05eb 6F03     		.2byte	0x36f
 7697 05ed A2000000 		.4byte	0xa2
 7698 05f1 02       		.uleb128 0x2
 7699 05f2 91       		.byte	0x91
 7700 05f3 5E       		.sleb128 -34
 7701 05f4 15       		.uleb128 0x15
 7702 05f5 8E040000 		.4byte	.LASF84
 7703 05f9 01       		.byte	0x1
 7704 05fa 7003     		.2byte	0x370
 7705 05fc AD000000 		.4byte	0xad
 7706 0600 02       		.uleb128 0x2
 7707 0601 91       		.byte	0x91
 7708 0602 5D       		.sleb128 -35
 7709 0603 00       		.byte	0
 7710 0604 12       		.uleb128 0x12
 7711 0605 7E0C0000 		.4byte	.LBB15
 7712 0609 E4020000 		.4byte	.LBE15-.LBB15
 7713 060d 21060000 		.4byte	0x621
 7714 0611 15       		.uleb128 0x15
 7715 0612 A7090000 		.4byte	.LASF97
 7716 0616 01       		.byte	0x1
 7717 0617 4604     		.2byte	0x446
 7718 0619 AD000000 		.4byte	0xad
 7719 061d 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 170


 7720 061e 91       		.byte	0x91
 7721 061f 5C       		.sleb128 -36
 7722 0620 00       		.byte	0
 7723 0621 12       		.uleb128 0x12
 7724 0622 A6100000 		.4byte	.LBB16
 7725 0626 6C000000 		.4byte	.LBE16-.LBB16
 7726 062a 3C060000 		.4byte	0x63c
 7727 062e 1B       		.uleb128 0x1b
 7728 062f 6900     		.ascii	"i\000"
 7729 0631 01       		.byte	0x1
 7730 0632 CB04     		.2byte	0x4cb
 7731 0634 94000000 		.4byte	0x94
 7732 0638 02       		.uleb128 0x2
 7733 0639 91       		.byte	0x91
 7734 063a 70       		.sleb128 -16
 7735 063b 00       		.byte	0
 7736 063c 12       		.uleb128 0x12
 7737 063d 66110000 		.4byte	.LBB17
 7738 0641 B2000000 		.4byte	.LBE17-.LBB17
 7739 0645 68060000 		.4byte	0x668
 7740 0649 15       		.uleb128 0x15
 7741 064a 99080000 		.4byte	.LASF83
 7742 064e 01       		.byte	0x1
 7743 064f EF04     		.2byte	0x4ef
 7744 0651 A2000000 		.4byte	0xa2
 7745 0655 02       		.uleb128 0x2
 7746 0656 91       		.byte	0x91
 7747 0657 5B       		.sleb128 -37
 7748 0658 15       		.uleb128 0x15
 7749 0659 8E040000 		.4byte	.LASF84
 7750 065d 01       		.byte	0x1
 7751 065e F104     		.2byte	0x4f1
 7752 0660 AD000000 		.4byte	0xad
 7753 0664 02       		.uleb128 0x2
 7754 0665 91       		.byte	0x91
 7755 0666 5A       		.sleb128 -38
 7756 0667 00       		.byte	0
 7757 0668 12       		.uleb128 0x12
 7758 0669 36120000 		.4byte	.LBB18
 7759 066d 1C000000 		.4byte	.LBE18-.LBB18
 7760 0671 83060000 		.4byte	0x683
 7761 0675 1B       		.uleb128 0x1b
 7762 0676 6900     		.ascii	"i\000"
 7763 0678 01       		.byte	0x1
 7764 0679 FE04     		.2byte	0x4fe
 7765 067b 94000000 		.4byte	0x94
 7766 067f 02       		.uleb128 0x2
 7767 0680 91       		.byte	0x91
 7768 0681 6C       		.sleb128 -20
 7769 0682 00       		.byte	0
 7770 0683 12       		.uleb128 0x12
 7771 0684 F8120000 		.4byte	.LBB19
 7772 0688 6C000000 		.4byte	.LBE19-.LBB19
 7773 068c 9E060000 		.4byte	0x69e
 7774 0690 1B       		.uleb128 0x1b
 7775 0691 6900     		.ascii	"i\000"
 7776 0693 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 171


 7777 0694 2005     		.2byte	0x520
 7778 0696 94000000 		.4byte	0x94
 7779 069a 02       		.uleb128 0x2
 7780 069b 91       		.byte	0x91
 7781 069c 68       		.sleb128 -24
 7782 069d 00       		.byte	0
 7783 069e 14       		.uleb128 0x14
 7784 069f 7C130000 		.4byte	.LBB20
 7785 06a3 C8000000 		.4byte	.LBE20-.LBB20
 7786 06a7 15       		.uleb128 0x15
 7787 06a8 60020000 		.4byte	.LASF98
 7788 06ac 01       		.byte	0x1
 7789 06ad 3705     		.2byte	0x537
 7790 06af AD000000 		.4byte	0xad
 7791 06b3 02       		.uleb128 0x2
 7792 06b4 91       		.byte	0x91
 7793 06b5 67       		.sleb128 -25
 7794 06b6 14       		.uleb128 0x14
 7795 06b7 8E130000 		.4byte	.LBB21
 7796 06bb 88000000 		.4byte	.LBE21-.LBB21
 7797 06bf 1B       		.uleb128 0x1b
 7798 06c0 6900     		.ascii	"i\000"
 7799 06c2 01       		.byte	0x1
 7800 06c3 3805     		.2byte	0x538
 7801 06c5 94000000 		.4byte	0x94
 7802 06c9 02       		.uleb128 0x2
 7803 06ca 91       		.byte	0x91
 7804 06cb 60       		.sleb128 -32
 7805 06cc 00       		.byte	0
 7806 06cd 00       		.byte	0
 7807 06ce 00       		.byte	0
 7808 06cf 1C       		.uleb128 0x1c
 7809 06d0 B30A0000 		.4byte	.LASF99
 7810 06d4 01       		.byte	0x1
 7811 06d5 5605     		.2byte	0x556
 7812 06d7 00000000 		.4byte	.LFB68
 7813 06db 9C000000 		.4byte	.LFE68-.LFB68
 7814 06df 01       		.uleb128 0x1
 7815 06e0 9C       		.byte	0x9c
 7816 06e1 1C       		.uleb128 0x1c
 7817 06e2 27070000 		.4byte	.LASF100
 7818 06e6 01       		.byte	0x1
 7819 06e7 6E05     		.2byte	0x56e
 7820 06e9 00000000 		.4byte	.LFB69
 7821 06ed 9C000000 		.4byte	.LFE69-.LFB69
 7822 06f1 01       		.uleb128 0x1
 7823 06f2 9C       		.byte	0x9c
 7824 06f3 1C       		.uleb128 0x1c
 7825 06f4 A8020000 		.4byte	.LASF101
 7826 06f8 01       		.byte	0x1
 7827 06f9 8305     		.2byte	0x583
 7828 06fb 00000000 		.4byte	.LFB70
 7829 06ff 7C000000 		.4byte	.LFE70-.LFB70
 7830 0703 01       		.uleb128 0x1
 7831 0704 9C       		.byte	0x9c
 7832 0705 1C       		.uleb128 0x1c
 7833 0706 4D070000 		.4byte	.LASF102
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 172


 7834 070a 01       		.byte	0x1
 7835 070b 9605     		.2byte	0x596
 7836 070d 00000000 		.4byte	.LFB71
 7837 0711 7C000000 		.4byte	.LFE71-.LFB71
 7838 0715 01       		.uleb128 0x1
 7839 0716 9C       		.byte	0x9c
 7840 0717 1C       		.uleb128 0x1c
 7841 0718 D7000000 		.4byte	.LASF103
 7842 071c 01       		.byte	0x1
 7843 071d A905     		.2byte	0x5a9
 7844 071f 00000000 		.4byte	.LFB72
 7845 0723 48000000 		.4byte	.LFE72-.LFB72
 7846 0727 01       		.uleb128 0x1
 7847 0728 9C       		.byte	0x9c
 7848 0729 19       		.uleb128 0x19
 7849 072a 470A0000 		.4byte	.LASF104
 7850 072e 01       		.byte	0x1
 7851 072f BD05     		.2byte	0x5bd
 7852 0731 00000000 		.4byte	.LFB73
 7853 0735 B0000000 		.4byte	.LFE73-.LFB73
 7854 0739 01       		.uleb128 0x1
 7855 073a 9C       		.byte	0x9c
 7856 073b 57070000 		.4byte	0x757
 7857 073f 14       		.uleb128 0x14
 7858 0740 5A000000 		.4byte	.LBB22
 7859 0744 28000000 		.4byte	.LBE22-.LBB22
 7860 0748 1B       		.uleb128 0x1b
 7861 0749 6900     		.ascii	"i\000"
 7862 074b 01       		.byte	0x1
 7863 074c C905     		.2byte	0x5c9
 7864 074e 94000000 		.4byte	0x94
 7865 0752 02       		.uleb128 0x2
 7866 0753 91       		.byte	0x91
 7867 0754 74       		.sleb128 -12
 7868 0755 00       		.byte	0
 7869 0756 00       		.byte	0
 7870 0757 19       		.uleb128 0x19
 7871 0758 37060000 		.4byte	.LASF105
 7872 075c 01       		.byte	0x1
 7873 075d D105     		.2byte	0x5d1
 7874 075f 00000000 		.4byte	.LFB74
 7875 0763 88010000 		.4byte	.LFE74-.LFB74
 7876 0767 01       		.uleb128 0x1
 7877 0768 9C       		.byte	0x9c
 7878 0769 F2070000 		.4byte	0x7f2
 7879 076d 15       		.uleb128 0x15
 7880 076e 0B020000 		.4byte	.LASF106
 7881 0772 01       		.byte	0x1
 7882 0773 EB05     		.2byte	0x5eb
 7883 0775 C3000000 		.4byte	0xc3
 7884 0779 02       		.uleb128 0x2
 7885 077a 91       		.byte	0x91
 7886 077b 6A       		.sleb128 -22
 7887 077c 12       		.uleb128 0x12
 7888 077d 0C000000 		.4byte	.LBB23
 7889 0781 74000000 		.4byte	.LBE23-.LBB23
 7890 0785 BF070000 		.4byte	0x7bf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 173


 7891 0789 1B       		.uleb128 0x1b
 7892 078a 6900     		.ascii	"i\000"
 7893 078c 01       		.byte	0x1
 7894 078d D505     		.2byte	0x5d5
 7895 078f 94000000 		.4byte	0x94
 7896 0793 02       		.uleb128 0x2
 7897 0794 91       		.byte	0x91
 7898 0795 74       		.sleb128 -12
 7899 0796 14       		.uleb128 0x14
 7900 0797 12000000 		.4byte	.LBB24
 7901 079b 62000000 		.4byte	.LBE24-.LBB24
 7902 079f 15       		.uleb128 0x15
 7903 07a0 5E040000 		.4byte	.LASF107
 7904 07a4 01       		.byte	0x1
 7905 07a5 D805     		.2byte	0x5d8
 7906 07a7 94000000 		.4byte	0x94
 7907 07ab 02       		.uleb128 0x2
 7908 07ac 91       		.byte	0x91
 7909 07ad 70       		.sleb128 -16
 7910 07ae 15       		.uleb128 0x15
 7911 07af D1030000 		.4byte	.LASF108
 7912 07b3 01       		.byte	0x1
 7913 07b4 DD05     		.2byte	0x5dd
 7914 07b6 94000000 		.4byte	0x94
 7915 07ba 02       		.uleb128 0x2
 7916 07bb 91       		.byte	0x91
 7917 07bc 6C       		.sleb128 -20
 7918 07bd 00       		.byte	0
 7919 07be 00       		.byte	0
 7920 07bf 12       		.uleb128 0x12
 7921 07c0 84000000 		.4byte	.LBB25
 7922 07c4 2A000000 		.4byte	.LBE25-.LBB25
 7923 07c8 DA070000 		.4byte	0x7da
 7924 07cc 1B       		.uleb128 0x1b
 7925 07cd 6900     		.ascii	"i\000"
 7926 07cf 01       		.byte	0x1
 7927 07d0 EC05     		.2byte	0x5ec
 7928 07d2 94000000 		.4byte	0x94
 7929 07d6 02       		.uleb128 0x2
 7930 07d7 91       		.byte	0x91
 7931 07d8 64       		.sleb128 -28
 7932 07d9 00       		.byte	0
 7933 07da 14       		.uleb128 0x14
 7934 07db D2000000 		.4byte	.LBB26
 7935 07df 98000000 		.4byte	.LBE26-.LBB26
 7936 07e3 1B       		.uleb128 0x1b
 7937 07e4 6900     		.ascii	"i\000"
 7938 07e6 01       		.byte	0x1
 7939 07e7 F405     		.2byte	0x5f4
 7940 07e9 94000000 		.4byte	0x94
 7941 07ed 02       		.uleb128 0x2
 7942 07ee 91       		.byte	0x91
 7943 07ef 60       		.sleb128 -32
 7944 07f0 00       		.byte	0
 7945 07f1 00       		.byte	0
 7946 07f2 18       		.uleb128 0x18
 7947 07f3 27040000 		.4byte	.LASF110
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 174


 7948 07f7 01       		.byte	0x1
 7949 07f8 FE05     		.2byte	0x5fe
 7950 07fa 00000000 		.4byte	.LFB75
 7951 07fe A0000000 		.4byte	.LFE75-.LFB75
 7952 0802 01       		.uleb128 0x1
 7953 0803 9C       		.byte	0x9c
 7954 0804 19       		.uleb128 0x19
 7955 0805 67060000 		.4byte	.LASF111
 7956 0809 01       		.byte	0x1
 7957 080a 0E06     		.2byte	0x60e
 7958 080c 00000000 		.4byte	.LFB76
 7959 0810 BC000000 		.4byte	.LFE76-.LFB76
 7960 0814 01       		.uleb128 0x1
 7961 0815 9C       		.byte	0x9c
 7962 0816 32080000 		.4byte	0x832
 7963 081a 14       		.uleb128 0x14
 7964 081b 0C000000 		.4byte	.LBB27
 7965 081f 9C000000 		.4byte	.LBE27-.LBB27
 7966 0823 1B       		.uleb128 0x1b
 7967 0824 6900     		.ascii	"i\000"
 7968 0826 01       		.byte	0x1
 7969 0827 1206     		.2byte	0x612
 7970 0829 94000000 		.4byte	0x94
 7971 082d 02       		.uleb128 0x2
 7972 082e 91       		.byte	0x91
 7973 082f 74       		.sleb128 -12
 7974 0830 00       		.byte	0
 7975 0831 00       		.byte	0
 7976 0832 18       		.uleb128 0x18
 7977 0833 18000000 		.4byte	.LASF112
 7978 0837 01       		.byte	0x1
 7979 0838 1D06     		.2byte	0x61d
 7980 083a 00000000 		.4byte	.LFB77
 7981 083e 20000000 		.4byte	.LFE77-.LFB77
 7982 0842 01       		.uleb128 0x1
 7983 0843 9C       		.byte	0x9c
 7984 0844 19       		.uleb128 0x19
 7985 0845 A4060000 		.4byte	.LASF113
 7986 0849 01       		.byte	0x1
 7987 084a 2506     		.2byte	0x625
 7988 084c 00000000 		.4byte	.LFB78
 7989 0850 C4010000 		.4byte	.LFE78-.LFB78
 7990 0854 01       		.uleb128 0x1
 7991 0855 9C       		.byte	0x9c
 7992 0856 81080000 		.4byte	0x881
 7993 085a 15       		.uleb128 0x15
 7994 085b 7D070000 		.4byte	.LASF114
 7995 085f 01       		.byte	0x1
 7996 0860 2706     		.2byte	0x627
 7997 0862 94000000 		.4byte	0x94
 7998 0866 02       		.uleb128 0x2
 7999 0867 91       		.byte	0x91
 8000 0868 6C       		.sleb128 -20
 8001 0869 14       		.uleb128 0x14
 8002 086a 0A000000 		.4byte	.LBB28
 8003 086e 38000000 		.4byte	.LBE28-.LBB28
 8004 0872 1B       		.uleb128 0x1b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 175


 8005 0873 6900     		.ascii	"i\000"
 8006 0875 01       		.byte	0x1
 8007 0876 2806     		.2byte	0x628
 8008 0878 94000000 		.4byte	0x94
 8009 087c 02       		.uleb128 0x2
 8010 087d 91       		.byte	0x91
 8011 087e 68       		.sleb128 -24
 8012 087f 00       		.byte	0
 8013 0880 00       		.byte	0
 8014 0881 19       		.uleb128 0x19
 8015 0882 EB030000 		.4byte	.LASF115
 8016 0886 01       		.byte	0x1
 8017 0887 5C06     		.2byte	0x65c
 8018 0889 00000000 		.4byte	.LFB79
 8019 088d 54010000 		.4byte	.LFE79-.LFB79
 8020 0891 01       		.uleb128 0x1
 8021 0892 9C       		.byte	0x9c
 8022 0893 BE080000 		.4byte	0x8be
 8023 0897 15       		.uleb128 0x15
 8024 0898 74090000 		.4byte	.LASF116
 8025 089c 01       		.byte	0x1
 8026 089d 5E06     		.2byte	0x65e
 8027 089f 94000000 		.4byte	0x94
 8028 08a3 02       		.uleb128 0x2
 8029 08a4 91       		.byte	0x91
 8030 08a5 6C       		.sleb128 -20
 8031 08a6 14       		.uleb128 0x14
 8032 08a7 0A000000 		.4byte	.LBB29
 8033 08ab 3C000000 		.4byte	.LBE29-.LBB29
 8034 08af 1B       		.uleb128 0x1b
 8035 08b0 6900     		.ascii	"i\000"
 8036 08b2 01       		.byte	0x1
 8037 08b3 5F06     		.2byte	0x65f
 8038 08b5 94000000 		.4byte	0x94
 8039 08b9 02       		.uleb128 0x2
 8040 08ba 91       		.byte	0x91
 8041 08bb 68       		.sleb128 -24
 8042 08bc 00       		.byte	0
 8043 08bd 00       		.byte	0
 8044 08be 1D       		.uleb128 0x1d
 8045 08bf 6A010000 		.4byte	.LASF117
 8046 08c3 09       		.byte	0x9
 8047 08c4 1207     		.2byte	0x712
 8048 08c6 CA080000 		.4byte	0x8ca
 8049 08ca 08       		.uleb128 0x8
 8050 08cb CE000000 		.4byte	0xce
 8051 08cf 1E       		.uleb128 0x1e
 8052 08d0 B8050000 		.4byte	.LASF118
 8053 08d4 0A       		.byte	0xa
 8054 08d5 41       		.byte	0x41
 8055 08d6 D9000000 		.4byte	0xd9
 8056 08da 05       		.uleb128 0x5
 8057 08db 03       		.byte	0x3
 8058 08dc 00000000 		.4byte	Decoder_1_Enabled
 8059 08e0 1F       		.uleb128 0x1f
 8060 08e1 CB080000 		.4byte	.LASF119
 8061 08e5 07       		.byte	0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 176


 8062 08e6 60       		.byte	0x60
 8063 08e7 94000000 		.4byte	0x94
 8064 08eb 1F       		.uleb128 0x1f
 8065 08ec F30A0000 		.4byte	.LASF120
 8066 08f0 07       		.byte	0x7
 8067 08f1 61       		.byte	0x61
 8068 08f2 AD000000 		.4byte	0xad
 8069 08f6 1F       		.uleb128 0x1f
 8070 08f7 3D070000 		.4byte	.LASF121
 8071 08fb 07       		.byte	0x7
 8072 08fc 62       		.byte	0x62
 8073 08fd AD000000 		.4byte	0xad
 8074 0901 1F       		.uleb128 0x1f
 8075 0902 E4000000 		.4byte	.LASF122
 8076 0906 07       		.byte	0x7
 8077 0907 63       		.byte	0x63
 8078 0908 AD000000 		.4byte	0xad
 8079 090c 1F       		.uleb128 0x1f
 8080 090d 86000000 		.4byte	.LASF123
 8081 0911 07       		.byte	0x7
 8082 0912 64       		.byte	0x64
 8083 0913 AD000000 		.4byte	0xad
 8084 0917 1F       		.uleb128 0x1f
 8085 0918 920A0000 		.4byte	.LASF124
 8086 091c 07       		.byte	0x7
 8087 091d 65       		.byte	0x65
 8088 091e AD000000 		.4byte	0xad
 8089 0922 1F       		.uleb128 0x1f
 8090 0923 2C000000 		.4byte	.LASF125
 8091 0927 07       		.byte	0x7
 8092 0928 66       		.byte	0x66
 8093 0929 AD000000 		.4byte	0xad
 8094 092d 1F       		.uleb128 0x1f
 8095 092e 8D050000 		.4byte	.LASF126
 8096 0932 07       		.byte	0x7
 8097 0933 67       		.byte	0x67
 8098 0934 AD000000 		.4byte	0xad
 8099 0938 1F       		.uleb128 0x1f
 8100 0939 96090000 		.4byte	.LASF127
 8101 093d 07       		.byte	0x7
 8102 093e 68       		.byte	0x68
 8103 093f 18050000 		.4byte	0x518
 8104 0943 1F       		.uleb128 0x1f
 8105 0944 2D0A0000 		.4byte	.LASF128
 8106 0948 07       		.byte	0x7
 8107 0949 69       		.byte	0x69
 8108 094a AD000000 		.4byte	0xad
 8109 094e 16       		.uleb128 0x16
 8110 094f AD000000 		.4byte	0xad
 8111 0953 6A090000 		.4byte	0x96a
 8112 0957 17       		.uleb128 0x17
 8113 0958 01010000 		.4byte	0x101
 8114 095c 3F       		.byte	0x3f
 8115 095d 17       		.uleb128 0x17
 8116 095e 01010000 		.4byte	0x101
 8117 0962 0F       		.byte	0xf
 8118 0963 17       		.uleb128 0x17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 177


 8119 0964 01010000 		.4byte	0x101
 8120 0968 08       		.byte	0x8
 8121 0969 00       		.byte	0
 8122 096a 1F       		.uleb128 0x1f
 8123 096b B9070000 		.4byte	.LASF129
 8124 096f 07       		.byte	0x7
 8125 0970 6A       		.byte	0x6a
 8126 0971 4E090000 		.4byte	0x94e
 8127 0975 16       		.uleb128 0x16
 8128 0976 AD000000 		.4byte	0xad
 8129 097a 91090000 		.4byte	0x991
 8130 097e 17       		.uleb128 0x17
 8131 097f 01010000 		.4byte	0x101
 8132 0983 3F       		.byte	0x3f
 8133 0984 17       		.uleb128 0x17
 8134 0985 01010000 		.4byte	0x101
 8135 0989 03       		.byte	0x3
 8136 098a 17       		.uleb128 0x17
 8137 098b 01010000 		.4byte	0x101
 8138 098f 09       		.byte	0x9
 8139 0990 00       		.byte	0
 8140 0991 1F       		.uleb128 0x1f
 8141 0992 C8090000 		.4byte	.LASF130
 8142 0996 07       		.byte	0x7
 8143 0997 6B       		.byte	0x6b
 8144 0998 75090000 		.4byte	0x975
 8145 099c 1F       		.uleb128 0x1f
 8146 099d E6010000 		.4byte	.LASF131
 8147 09a1 07       		.byte	0x7
 8148 09a2 6C       		.byte	0x6c
 8149 09a3 AD000000 		.4byte	0xad
 8150 09a7 16       		.uleb128 0x16
 8151 09a8 AD000000 		.4byte	0xad
 8152 09ac BD090000 		.4byte	0x9bd
 8153 09b0 17       		.uleb128 0x17
 8154 09b1 01010000 		.4byte	0x101
 8155 09b5 3F       		.byte	0x3f
 8156 09b6 17       		.uleb128 0x17
 8157 09b7 01010000 		.4byte	0x101
 8158 09bb 0D       		.byte	0xd
 8159 09bc 00       		.byte	0
 8160 09bd 1F       		.uleb128 0x1f
 8161 09be 360A0000 		.4byte	.LASF132
 8162 09c2 07       		.byte	0x7
 8163 09c3 6E       		.byte	0x6e
 8164 09c4 A7090000 		.4byte	0x9a7
 8165 09c8 16       		.uleb128 0x16
 8166 09c9 AD000000 		.4byte	0xad
 8167 09cd DE090000 		.4byte	0x9de
 8168 09d1 17       		.uleb128 0x17
 8169 09d2 01010000 		.4byte	0x101
 8170 09d6 06       		.byte	0x6
 8171 09d7 17       		.uleb128 0x17
 8172 09d8 01010000 		.4byte	0x101
 8173 09dc 09       		.byte	0x9
 8174 09dd 00       		.byte	0
 8175 09de 1F       		.uleb128 0x1f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 178


 8176 09df 86080000 		.4byte	.LASF133
 8177 09e3 07       		.byte	0x7
 8178 09e4 70       		.byte	0x70
 8179 09e5 C8090000 		.4byte	0x9c8
 8180 09e9 16       		.uleb128 0x16
 8181 09ea AD000000 		.4byte	0xad
 8182 09ee F9090000 		.4byte	0x9f9
 8183 09f2 17       		.uleb128 0x17
 8184 09f3 01010000 		.4byte	0x101
 8185 09f7 3F       		.byte	0x3f
 8186 09f8 00       		.byte	0
 8187 09f9 1F       		.uleb128 0x1f
 8188 09fa 43000000 		.4byte	.LASF134
 8189 09fe 07       		.byte	0x7
 8190 09ff 71       		.byte	0x71
 8191 0a00 E9090000 		.4byte	0x9e9
 8192 0a04 1F       		.uleb128 0x1f
 8193 0a05 E9070000 		.4byte	.LASF135
 8194 0a09 07       		.byte	0x7
 8195 0a0a 72       		.byte	0x72
 8196 0a0b AD000000 		.4byte	0xad
 8197 0a0f 1F       		.uleb128 0x1f
 8198 0a10 13070000 		.4byte	.LASF136
 8199 0a14 07       		.byte	0x7
 8200 0a15 73       		.byte	0x73
 8201 0a16 AD000000 		.4byte	0xad
 8202 0a1a 1F       		.uleb128 0x1f
 8203 0a1b 9B070000 		.4byte	.LASF137
 8204 0a1f 07       		.byte	0x7
 8205 0a20 74       		.byte	0x74
 8206 0a21 AD000000 		.4byte	0xad
 8207 0a25 16       		.uleb128 0x16
 8208 0a26 C3000000 		.4byte	0xc3
 8209 0a2a 3B0A0000 		.4byte	0xa3b
 8210 0a2e 17       		.uleb128 0x17
 8211 0a2f 01010000 		.4byte	0x101
 8212 0a33 01       		.byte	0x1
 8213 0a34 17       		.uleb128 0x17
 8214 0a35 01010000 		.4byte	0x101
 8215 0a39 0B       		.byte	0xb
 8216 0a3a 00       		.byte	0
 8217 0a3b 1F       		.uleb128 0x1f
 8218 0a3c 24020000 		.4byte	.LASF138
 8219 0a40 07       		.byte	0x7
 8220 0a41 75       		.byte	0x75
 8221 0a42 250A0000 		.4byte	0xa25
 8222 0a46 16       		.uleb128 0x16
 8223 0a47 C3000000 		.4byte	0xc3
 8224 0a4b 560A0000 		.4byte	0xa56
 8225 0a4f 17       		.uleb128 0x17
 8226 0a50 01010000 		.4byte	0x101
 8227 0a54 09       		.byte	0x9
 8228 0a55 00       		.byte	0
 8229 0a56 1F       		.uleb128 0x1f
 8230 0a57 5F050000 		.4byte	.LASF139
 8231 0a5b 07       		.byte	0x7
 8232 0a5c 76       		.byte	0x76
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 179


 8233 0a5d 460A0000 		.4byte	0xa46
 8234 0a61 1F       		.uleb128 0x1f
 8235 0a62 CA050000 		.4byte	.LASF140
 8236 0a66 07       		.byte	0x7
 8237 0a67 77       		.byte	0x77
 8238 0a68 460A0000 		.4byte	0xa46
 8239 0a6c 16       		.uleb128 0x16
 8240 0a6d AD000000 		.4byte	0xad
 8241 0a71 7C0A0000 		.4byte	0xa7c
 8242 0a75 17       		.uleb128 0x17
 8243 0a76 01010000 		.4byte	0x101
 8244 0a7a 09       		.byte	0x9
 8245 0a7b 00       		.byte	0
 8246 0a7c 1F       		.uleb128 0x1f
 8247 0a7d B9040000 		.4byte	.LASF141
 8248 0a81 07       		.byte	0x7
 8249 0a82 78       		.byte	0x78
 8250 0a83 6C0A0000 		.4byte	0xa6c
 8251 0a87 1F       		.uleb128 0x1f
 8252 0a88 2A010000 		.4byte	.LASF142
 8253 0a8c 07       		.byte	0x7
 8254 0a8d 79       		.byte	0x79
 8255 0a8e 460A0000 		.4byte	0xa46
 8256 0a92 16       		.uleb128 0x16
 8257 0a93 13010000 		.4byte	0x113
 8258 0a97 A20A0000 		.4byte	0xaa2
 8259 0a9b 17       		.uleb128 0x17
 8260 0a9c 01010000 		.4byte	0x101
 8261 0aa0 01       		.byte	0x1
 8262 0aa1 00       		.byte	0
 8263 0aa2 20       		.uleb128 0x20
 8264 0aa3 62617200 		.ascii	"bar\000"
 8265 0aa7 07       		.byte	0x7
 8266 0aa8 7A       		.byte	0x7a
 8267 0aa9 AD0A0000 		.4byte	0xaad
 8268 0aad 08       		.uleb128 0x8
 8269 0aae 920A0000 		.4byte	0xa92
 8270 0ab2 1F       		.uleb128 0x1f
 8271 0ab3 B1080000 		.4byte	.LASF143
 8272 0ab7 07       		.byte	0x7
 8273 0ab8 7B       		.byte	0x7b
 8274 0ab9 A2000000 		.4byte	0xa2
 8275 0abd 1F       		.uleb128 0x1f
 8276 0abe BE000000 		.4byte	.LASF144
 8277 0ac2 07       		.byte	0x7
 8278 0ac3 7C       		.byte	0x7c
 8279 0ac4 A2000000 		.4byte	0xa2
 8280 0ac8 1F       		.uleb128 0x1f
 8281 0ac9 47050000 		.4byte	.LASF145
 8282 0acd 07       		.byte	0x7
 8283 0ace 7D       		.byte	0x7d
 8284 0acf E5000000 		.4byte	0xe5
 8285 0ad3 1F       		.uleb128 0x1f
 8286 0ad4 F0090000 		.4byte	.LASF146
 8287 0ad8 07       		.byte	0x7
 8288 0ad9 7E       		.byte	0x7e
 8289 0ada A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 180


 8290 0ade 1F       		.uleb128 0x1f
 8291 0adf 94030000 		.4byte	.LASF147
 8292 0ae3 07       		.byte	0x7
 8293 0ae4 7F       		.byte	0x7f
 8294 0ae5 94000000 		.4byte	0x94
 8295 0ae9 1F       		.uleb128 0x1f
 8296 0aea 40040000 		.4byte	.LASF148
 8297 0aee 07       		.byte	0x7
 8298 0aef 80       		.byte	0x80
 8299 0af0 AD000000 		.4byte	0xad
 8300 0af4 1F       		.uleb128 0x1f
 8301 0af5 34070000 		.4byte	.LASF149
 8302 0af9 07       		.byte	0x7
 8303 0afa 81       		.byte	0x81
 8304 0afb AD000000 		.4byte	0xad
 8305 0aff 1F       		.uleb128 0x1f
 8306 0b00 18080000 		.4byte	.LASF150
 8307 0b04 07       		.byte	0x7
 8308 0b05 82       		.byte	0x82
 8309 0b06 18050000 		.4byte	0x518
 8310 0b0a 1F       		.uleb128 0x1f
 8311 0b0b F8000000 		.4byte	.LASF151
 8312 0b0f 07       		.byte	0x7
 8313 0b10 83       		.byte	0x83
 8314 0b11 AD000000 		.4byte	0xad
 8315 0b15 1F       		.uleb128 0x1f
 8316 0b16 C70A0000 		.4byte	.LASF152
 8317 0b1a 07       		.byte	0x7
 8318 0b1b 84       		.byte	0x84
 8319 0b1c AD000000 		.4byte	0xad
 8320 0b20 1F       		.uleb128 0x1f
 8321 0b21 71000000 		.4byte	.LASF153
 8322 0b25 07       		.byte	0x7
 8323 0b26 85       		.byte	0x85
 8324 0b27 AD000000 		.4byte	0xad
 8325 0b2b 1F       		.uleb128 0x1f
 8326 0b2c 7E040000 		.4byte	.LASF154
 8327 0b30 07       		.byte	0x7
 8328 0b31 86       		.byte	0x86
 8329 0b32 AD000000 		.4byte	0xad
 8330 0b36 1F       		.uleb128 0x1f
 8331 0b37 53030000 		.4byte	.LASF155
 8332 0b3b 07       		.byte	0x7
 8333 0b3c 87       		.byte	0x87
 8334 0b3d AD000000 		.4byte	0xad
 8335 0b41 16       		.uleb128 0x16
 8336 0b42 AD000000 		.4byte	0xad
 8337 0b46 510B0000 		.4byte	0xb51
 8338 0b4a 17       		.uleb128 0x17
 8339 0b4b 01010000 		.4byte	0x101
 8340 0b4f 0F       		.byte	0xf
 8341 0b50 00       		.byte	0
 8342 0b51 1F       		.uleb128 0x1f
 8343 0b52 BD020000 		.4byte	.LASF156
 8344 0b56 07       		.byte	0x7
 8345 0b57 88       		.byte	0x88
 8346 0b58 410B0000 		.4byte	0xb41
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 181


 8347 0b5c 16       		.uleb128 0x16
 8348 0b5d B8000000 		.4byte	0xb8
 8349 0b61 6C0B0000 		.4byte	0xb6c
 8350 0b65 17       		.uleb128 0x17
 8351 0b66 01010000 		.4byte	0x101
 8352 0b6a 0F       		.byte	0xf
 8353 0b6b 00       		.byte	0
 8354 0b6c 1F       		.uleb128 0x1f
 8355 0b6d 6E020000 		.4byte	.LASF157
 8356 0b71 07       		.byte	0x7
 8357 0b72 89       		.byte	0x89
 8358 0b73 5C0B0000 		.4byte	0xb5c
 8359 0b77 1F       		.uleb128 0x1f
 8360 0b78 B4090000 		.4byte	.LASF158
 8361 0b7c 07       		.byte	0x7
 8362 0b7d 8A       		.byte	0x8a
 8363 0b7e A2000000 		.4byte	0xa2
 8364 0b82 1F       		.uleb128 0x1f
 8365 0b83 6D030000 		.4byte	.LASF159
 8366 0b87 07       		.byte	0x7
 8367 0b88 8B       		.byte	0x8b
 8368 0b89 AD000000 		.4byte	0xad
 8369 0b8d 16       		.uleb128 0x16
 8370 0b8e F3000000 		.4byte	0xf3
 8371 0b92 9D0B0000 		.4byte	0xb9d
 8372 0b96 17       		.uleb128 0x17
 8373 0b97 01010000 		.4byte	0x101
 8374 0b9b 0D       		.byte	0xd
 8375 0b9c 00       		.byte	0
 8376 0b9d 1E       		.uleb128 0x1e
 8377 0b9e 4B020000 		.4byte	.LASF160
 8378 0ba2 01       		.byte	0x1
 8379 0ba3 28       		.byte	0x28
 8380 0ba4 8D0B0000 		.4byte	0xb8d
 8381 0ba8 05       		.uleb128 0x5
 8382 0ba9 03       		.byte	0x3
 8383 0baa 00000000 		.4byte	newPresetName
 8384 0bae 1F       		.uleb128 0x1f
 8385 0baf 22060000 		.4byte	.LASF161
 8386 0bb3 07       		.byte	0x7
 8387 0bb4 8D       		.byte	0x8d
 8388 0bb5 AD000000 		.4byte	0xad
 8389 0bb9 1F       		.uleb128 0x1f
 8390 0bba 9A040000 		.4byte	.LASF162
 8391 0bbe 07       		.byte	0x7
 8392 0bbf 8E       		.byte	0x8e
 8393 0bc0 18050000 		.4byte	0x518
 8394 0bc4 1F       		.uleb128 0x1f
 8395 0bc5 E9090000 		.4byte	.LASF163
 8396 0bc9 08       		.byte	0x8
 8397 0bca 77       		.byte	0x77
 8398 0bcb 0E030000 		.4byte	0x30e
 8399 0bcf 1E       		.uleb128 0x1e
 8400 0bd0 8D010000 		.4byte	.LASF164
 8401 0bd4 01       		.byte	0x1
 8402 0bd5 26       		.byte	0x26
 8403 0bd6 AD000000 		.4byte	0xad
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 182


 8404 0bda 05       		.uleb128 0x5
 8405 0bdb 03       		.byte	0x3
 8406 0bdc 00000000 		.4byte	whichMacroPageIsActive
 8407 0be0 1E       		.uleb128 0x1e
 8408 0be1 770A0000 		.4byte	.LASF165
 8409 0be5 01       		.byte	0x1
 8410 0be6 10       		.byte	0x10
 8411 0be7 A2000000 		.4byte	0xa2
 8412 0beb 05       		.uleb128 0x5
 8413 0bec 03       		.byte	0x3
 8414 0bed 00000000 		.4byte	prevEncoderVal
 8415 0bf1 1E       		.uleb128 0x1e
 8416 0bf2 4F080000 		.4byte	.LASF166
 8417 0bf6 01       		.byte	0x1
 8418 0bf7 11       		.byte	0x11
 8419 0bf8 AD000000 		.4byte	0xad
 8420 0bfc 05       		.uleb128 0x5
 8421 0bfd 03       		.byte	0x3
 8422 0bfe 00000000 		.4byte	encoderWatch
 8423 0c02 16       		.uleb128 0x16
 8424 0c03 A2000000 		.4byte	0xa2
 8425 0c07 180C0000 		.4byte	0xc18
 8426 0c0b 17       		.uleb128 0x17
 8427 0c0c 01010000 		.4byte	0x101
 8428 0c10 02       		.byte	0x2
 8429 0c11 17       		.uleb128 0x17
 8430 0c12 01010000 		.4byte	0x101
 8431 0c16 01       		.byte	0x1
 8432 0c17 00       		.byte	0
 8433 0c18 1E       		.uleb128 0x1e
 8434 0c19 A4010000 		.4byte	.LASF167
 8435 0c1d 01       		.byte	0x1
 8436 0c1e 13       		.byte	0x13
 8437 0c1f 020C0000 		.4byte	0xc02
 8438 0c23 05       		.uleb128 0x5
 8439 0c24 03       		.byte	0x3
 8440 0c25 00000000 		.4byte	menuPosition
 8441 0c29 1E       		.uleb128 0x1e
 8442 0c2a 50010000 		.4byte	.LASF168
 8443 0c2e 01       		.byte	0x1
 8444 0c2f 15       		.byte	0x15
 8445 0c30 AD000000 		.4byte	0xad
 8446 0c34 05       		.uleb128 0x5
 8447 0c35 03       		.byte	0x3
 8448 0c36 00000000 		.4byte	semitonesOrCents
 8449 0c3a 1E       		.uleb128 0x1e
 8450 0c3b 59020000 		.4byte	.LASF169
 8451 0c3f 01       		.byte	0x1
 8452 0c40 16       		.byte	0x16
 8453 0c41 AD000000 		.4byte	0xad
 8454 0c45 05       		.uleb128 0x5
 8455 0c46 03       		.byte	0x3
 8456 0c47 00000000 		.4byte	editUp
 8457 0c4b 1E       		.uleb128 0x1e
 8458 0c4c 44020000 		.4byte	.LASF170
 8459 0c50 01       		.byte	0x1
 8460 0c51 17       		.byte	0x17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 183


 8461 0c52 AD000000 		.4byte	0xad
 8462 0c56 05       		.uleb128 0x5
 8463 0c57 03       		.byte	0x3
 8464 0c58 00000000 		.4byte	oct1Up
 8465 0c5c 1E       		.uleb128 0x1e
 8466 0c5d DA090000 		.4byte	.LASF171
 8467 0c61 01       		.byte	0x1
 8468 0c62 18       		.byte	0x18
 8469 0c63 AD000000 		.4byte	0xad
 8470 0c67 05       		.uleb128 0x5
 8471 0c68 03       		.byte	0x3
 8472 0c69 00000000 		.4byte	oct4Up
 8473 0c6d 1E       		.uleb128 0x1e
 8474 0c6e AC030000 		.4byte	.LASF172
 8475 0c72 01       		.byte	0x1
 8476 0c73 19       		.byte	0x19
 8477 0c74 AD000000 		.4byte	0xad
 8478 0c78 05       		.uleb128 0x5
 8479 0c79 03       		.byte	0x3
 8480 0c7a 00000000 		.4byte	encoderUp
 8481 0c7e 1E       		.uleb128 0x1e
 8482 0c7f 57070000 		.4byte	.LASF173
 8483 0c83 01       		.byte	0x1
 8484 0c84 1A       		.byte	0x1a
 8485 0c85 AD000000 		.4byte	0xad
 8486 0c89 05       		.uleb128 0x5
 8487 0c8a 03       		.byte	0x3
 8488 0c8b 00000000 		.4byte	button1Up
 8489 0c8f 1E       		.uleb128 0x1e
 8490 0c90 D7070000 		.4byte	.LASF174
 8491 0c94 01       		.byte	0x1
 8492 0c95 1B       		.byte	0x1b
 8493 0c96 AD000000 		.4byte	0xad
 8494 0c9a 05       		.uleb128 0x5
 8495 0c9b 03       		.byte	0x3
 8496 0c9c 00000000 		.4byte	button2Up
 8497 0ca0 1E       		.uleb128 0x1e
 8498 0ca1 83050000 		.4byte	.LASF175
 8499 0ca5 01       		.byte	0x1
 8500 0ca6 1C       		.byte	0x1c
 8501 0ca7 AD000000 		.4byte	0xad
 8502 0cab 05       		.uleb128 0x5
 8503 0cac 03       		.byte	0x3
 8504 0cad 00000000 		.4byte	button3Up
 8505 0cb1 1E       		.uleb128 0x1e
 8506 0cb2 46010000 		.4byte	.LASF176
 8507 0cb6 01       		.byte	0x1
 8508 0cb7 1D       		.byte	0x1d
 8509 0cb8 AD000000 		.4byte	0xad
 8510 0cbc 05       		.uleb128 0x5
 8511 0cbd 03       		.byte	0x3
 8512 0cbe 00000000 		.4byte	button4Up
 8513 0cc2 1E       		.uleb128 0x1e
 8514 0cc3 D20A0000 		.4byte	.LASF177
 8515 0cc7 01       		.byte	0x1
 8516 0cc8 1E       		.byte	0x1e
 8517 0cc9 AD000000 		.4byte	0xad
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 184


 8518 0ccd 05       		.uleb128 0x5
 8519 0cce 03       		.byte	0x3
 8520 0ccf 00000000 		.4byte	shiftUp
 8521 0cd3 1E       		.uleb128 0x1e
 8522 0cd4 FA050000 		.4byte	.LASF178
 8523 0cd8 01       		.byte	0x1
 8524 0cd9 1F       		.byte	0x1f
 8525 0cda AD000000 		.4byte	0xad
 8526 0cde 05       		.uleb128 0x5
 8527 0cdf 03       		.byte	0x3
 8528 0ce0 00000000 		.4byte	editingSliderRepString
 8529 0ce4 1E       		.uleb128 0x1e
 8530 0ce5 610A0000 		.4byte	.LASF179
 8531 0ce9 01       		.byte	0x1
 8532 0cea 20       		.byte	0x20
 8533 0ceb A2000000 		.4byte	0xa2
 8534 0cef 05       		.uleb128 0x5
 8535 0cf0 03       		.byte	0x3
 8536 0cf1 00000000 		.4byte	whichMidiSendSelected
 8537 0cf5 1E       		.uleb128 0x1e
 8538 0cf6 10050000 		.4byte	.LASF180
 8539 0cfa 01       		.byte	0x1
 8540 0cfb 21       		.byte	0x21
 8541 0cfc AD000000 		.4byte	0xad
 8542 0d00 05       		.uleb128 0x5
 8543 0d01 03       		.byte	0x3
 8544 0d02 00000000 		.4byte	whichFirmwareUpdateSelected
 8545 0d06 1E       		.uleb128 0x1e
 8546 0d07 DA0A0000 		.4byte	.LASF181
 8547 0d0b 01       		.byte	0x1
 8548 0d0c 22       		.byte	0x22
 8549 0d0d AD000000 		.4byte	0xad
 8550 0d11 05       		.uleb128 0x5
 8551 0d12 03       		.byte	0x3
 8552 0d13 00000000 		.4byte	controlsDisplayed
 8553 0d17 1E       		.uleb128 0x1e
 8554 0d18 EF010000 		.4byte	.LASF182
 8555 0d1c 01       		.byte	0x1
 8556 0d1d 24       		.byte	0x24
 8557 0d1e AD000000 		.4byte	0xad
 8558 0d22 05       		.uleb128 0x5
 8559 0d23 03       		.byte	0x3
 8560 0d24 00000000 		.4byte	presetStoreStage
 8561 0d28 16       		.uleb128 0x16
 8562 0d29 380D0000 		.4byte	0xd38
 8563 0d2d 380D0000 		.4byte	0xd38
 8564 0d31 17       		.uleb128 0x17
 8565 0d32 01010000 		.4byte	0x101
 8566 0d36 02       		.byte	0x2
 8567 0d37 00       		.byte	0
 8568 0d38 07       		.uleb128 0x7
 8569 0d39 08010000 		.4byte	0x108
 8570 0d3d 21       		.uleb128 0x21
 8571 0d3e EF060000 		.4byte	.LASF183
 8572 0d42 01       		.byte	0x1
 8573 0d43 1A02     		.2byte	0x21a
 8574 0d45 4F0D0000 		.4byte	0xd4f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 185


 8575 0d49 05       		.uleb128 0x5
 8576 0d4a 03       		.byte	0x3
 8577 0d4b 00000000 		.4byte	calibrationNames
 8578 0d4f 07       		.uleb128 0x7
 8579 0d50 280D0000 		.4byte	0xd28
 8580 0d54 16       		.uleb128 0x16
 8581 0d55 380D0000 		.4byte	0xd38
 8582 0d59 640D0000 		.4byte	0xd64
 8583 0d5d 17       		.uleb128 0x17
 8584 0d5e 01010000 		.4byte	0x101
 8585 0d62 03       		.byte	0x3
 8586 0d63 00       		.byte	0
 8587 0d64 21       		.uleb128 0x21
 8588 0d65 0C040000 		.4byte	.LASF184
 8589 0d69 01       		.byte	0x1
 8590 0d6a 1B02     		.2byte	0x21b
 8591 0d6c 760D0000 		.4byte	0xd76
 8592 0d70 05       		.uleb128 0x5
 8593 0d71 03       		.byte	0x3
 8594 0d72 00000000 		.4byte	mainMenuNames
 8595 0d76 07       		.uleb128 0x7
 8596 0d77 540D0000 		.4byte	0xd54
 8597 0d7b 16       		.uleb128 0x16
 8598 0d7c 380D0000 		.4byte	0xd38
 8599 0d80 8B0D0000 		.4byte	0xd8b
 8600 0d84 17       		.uleb128 0x17
 8601 0d85 01010000 		.4byte	0x101
 8602 0d89 08       		.byte	0x8
 8603 0d8a 00       		.byte	0
 8604 0d8b 21       		.uleb128 0x21
 8605 0d8c 05010000 		.4byte	.LASF185
 8606 0d90 01       		.byte	0x1
 8607 0d91 1C02     		.2byte	0x21c
 8608 0d93 9D0D0000 		.4byte	0xd9d
 8609 0d97 05       		.uleb128 0x5
 8610 0d98 03       		.byte	0x3
 8611 0d99 00000000 		.4byte	settingsNames
 8612 0d9d 07       		.uleb128 0x7
 8613 0d9e 7B0D0000 		.4byte	0xd7b
 8614 0da2 21       		.uleb128 0x21
 8615 0da3 E9050000 		.4byte	.LASF186
 8616 0da7 01       		.byte	0x1
 8617 0da8 1D02     		.2byte	0x21d
 8618 0daa AD000000 		.4byte	0xad
 8619 0dae 05       		.uleb128 0x5
 8620 0daf 03       		.byte	0x3
 8621 0db0 00000000 		.4byte	numMainMenuItems
 8622 0db4 21       		.uleb128 0x21
 8623 0db5 C8040000 		.4byte	.LASF187
 8624 0db9 01       		.byte	0x1
 8625 0dba 1E02     		.2byte	0x21e
 8626 0dbc AD000000 		.4byte	0xad
 8627 0dc0 05       		.uleb128 0x5
 8628 0dc1 03       		.byte	0x3
 8629 0dc2 00000000 		.4byte	numCalibrationItems
 8630 0dc6 21       		.uleb128 0x21
 8631 0dc7 50060000 		.4byte	.LASF188
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 186


 8632 0dcb 01       		.byte	0x1
 8633 0dcc 1F02     		.2byte	0x21f
 8634 0dce AD000000 		.4byte	0xad
 8635 0dd2 05       		.uleb128 0x5
 8636 0dd3 03       		.byte	0x3
 8637 0dd4 00000000 		.4byte	numSettingsItems
 8638 0dd8 21       		.uleb128 0x21
 8639 0dd9 6E040000 		.4byte	.LASF189
 8640 0ddd 01       		.byte	0x1
 8641 0dde 6E02     		.2byte	0x26e
 8642 0de0 AD000000 		.4byte	0xad
 8643 0de4 05       		.uleb128 0x5
 8644 0de5 03       		.byte	0x3
 8645 0de6 00000000 		.4byte	fretToCalibrate
 8646 0dea 16       		.uleb128 0x16
 8647 0deb AD000000 		.4byte	0xad
 8648 0def FA0D0000 		.4byte	0xdfa
 8649 0df3 17       		.uleb128 0x17
 8650 0df4 01010000 		.4byte	0x101
 8651 0df8 0B       		.byte	0xb
 8652 0df9 00       		.byte	0
 8653 0dfa 21       		.uleb128 0x21
 8654 0dfb AA040000 		.4byte	.LASF190
 8655 0dff 01       		.byte	0x1
 8656 0e00 6F02     		.2byte	0x26f
 8657 0e02 EA0D0000 		.4byte	0xdea
 8658 0e06 05       		.uleb128 0x5
 8659 0e07 03       		.byte	0x3
 8660 0e08 00000000 		.4byte	whichFretArray
 8661 0e0c 00       		.byte	0
 8662              		.section	.debug_abbrev,"",%progbits
 8663              	.Ldebug_abbrev0:
 8664 0000 01       		.uleb128 0x1
 8665 0001 11       		.uleb128 0x11
 8666 0002 01       		.byte	0x1
 8667 0003 25       		.uleb128 0x25
 8668 0004 0E       		.uleb128 0xe
 8669 0005 13       		.uleb128 0x13
 8670 0006 0B       		.uleb128 0xb
 8671 0007 03       		.uleb128 0x3
 8672 0008 0E       		.uleb128 0xe
 8673 0009 1B       		.uleb128 0x1b
 8674 000a 0E       		.uleb128 0xe
 8675 000b 55       		.uleb128 0x55
 8676 000c 17       		.uleb128 0x17
 8677 000d 11       		.uleb128 0x11
 8678 000e 01       		.uleb128 0x1
 8679 000f 10       		.uleb128 0x10
 8680 0010 17       		.uleb128 0x17
 8681 0011 00       		.byte	0
 8682 0012 00       		.byte	0
 8683 0013 02       		.uleb128 0x2
 8684 0014 16       		.uleb128 0x16
 8685 0015 00       		.byte	0
 8686 0016 03       		.uleb128 0x3
 8687 0017 0E       		.uleb128 0xe
 8688 0018 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 187


 8689 0019 0B       		.uleb128 0xb
 8690 001a 3B       		.uleb128 0x3b
 8691 001b 0B       		.uleb128 0xb
 8692 001c 49       		.uleb128 0x49
 8693 001d 13       		.uleb128 0x13
 8694 001e 00       		.byte	0
 8695 001f 00       		.byte	0
 8696 0020 03       		.uleb128 0x3
 8697 0021 24       		.uleb128 0x24
 8698 0022 00       		.byte	0
 8699 0023 0B       		.uleb128 0xb
 8700 0024 0B       		.uleb128 0xb
 8701 0025 3E       		.uleb128 0x3e
 8702 0026 0B       		.uleb128 0xb
 8703 0027 03       		.uleb128 0x3
 8704 0028 0E       		.uleb128 0xe
 8705 0029 00       		.byte	0
 8706 002a 00       		.byte	0
 8707 002b 04       		.uleb128 0x4
 8708 002c 24       		.uleb128 0x24
 8709 002d 00       		.byte	0
 8710 002e 0B       		.uleb128 0xb
 8711 002f 0B       		.uleb128 0xb
 8712 0030 3E       		.uleb128 0x3e
 8713 0031 0B       		.uleb128 0xb
 8714 0032 03       		.uleb128 0x3
 8715 0033 08       		.uleb128 0x8
 8716 0034 00       		.byte	0
 8717 0035 00       		.byte	0
 8718 0036 05       		.uleb128 0x5
 8719 0037 16       		.uleb128 0x16
 8720 0038 00       		.byte	0
 8721 0039 03       		.uleb128 0x3
 8722 003a 0E       		.uleb128 0xe
 8723 003b 3A       		.uleb128 0x3a
 8724 003c 0B       		.uleb128 0xb
 8725 003d 3B       		.uleb128 0x3b
 8726 003e 05       		.uleb128 0x5
 8727 003f 49       		.uleb128 0x49
 8728 0040 13       		.uleb128 0x13
 8729 0041 00       		.byte	0
 8730 0042 00       		.byte	0
 8731 0043 06       		.uleb128 0x6
 8732 0044 0F       		.uleb128 0xf
 8733 0045 00       		.byte	0
 8734 0046 0B       		.uleb128 0xb
 8735 0047 0B       		.uleb128 0xb
 8736 0048 49       		.uleb128 0x49
 8737 0049 13       		.uleb128 0x13
 8738 004a 00       		.byte	0
 8739 004b 00       		.byte	0
 8740 004c 07       		.uleb128 0x7
 8741 004d 26       		.uleb128 0x26
 8742 004e 00       		.byte	0
 8743 004f 49       		.uleb128 0x49
 8744 0050 13       		.uleb128 0x13
 8745 0051 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 188


 8746 0052 00       		.byte	0
 8747 0053 08       		.uleb128 0x8
 8748 0054 35       		.uleb128 0x35
 8749 0055 00       		.byte	0
 8750 0056 49       		.uleb128 0x49
 8751 0057 13       		.uleb128 0x13
 8752 0058 00       		.byte	0
 8753 0059 00       		.byte	0
 8754 005a 09       		.uleb128 0x9
 8755 005b 04       		.uleb128 0x4
 8756 005c 01       		.byte	0x1
 8757 005d 03       		.uleb128 0x3
 8758 005e 0E       		.uleb128 0xe
 8759 005f 0B       		.uleb128 0xb
 8760 0060 0B       		.uleb128 0xb
 8761 0061 49       		.uleb128 0x49
 8762 0062 13       		.uleb128 0x13
 8763 0063 3A       		.uleb128 0x3a
 8764 0064 0B       		.uleb128 0xb
 8765 0065 3B       		.uleb128 0x3b
 8766 0066 0B       		.uleb128 0xb
 8767 0067 01       		.uleb128 0x1
 8768 0068 13       		.uleb128 0x13
 8769 0069 00       		.byte	0
 8770 006a 00       		.byte	0
 8771 006b 0A       		.uleb128 0xa
 8772 006c 28       		.uleb128 0x28
 8773 006d 00       		.byte	0
 8774 006e 03       		.uleb128 0x3
 8775 006f 0E       		.uleb128 0xe
 8776 0070 1C       		.uleb128 0x1c
 8777 0071 0B       		.uleb128 0xb
 8778 0072 00       		.byte	0
 8779 0073 00       		.byte	0
 8780 0074 0B       		.uleb128 0xb
 8781 0075 13       		.uleb128 0x13
 8782 0076 01       		.byte	0x1
 8783 0077 0B       		.uleb128 0xb
 8784 0078 0B       		.uleb128 0xb
 8785 0079 3A       		.uleb128 0x3a
 8786 007a 0B       		.uleb128 0xb
 8787 007b 3B       		.uleb128 0x3b
 8788 007c 0B       		.uleb128 0xb
 8789 007d 01       		.uleb128 0x1
 8790 007e 13       		.uleb128 0x13
 8791 007f 00       		.byte	0
 8792 0080 00       		.byte	0
 8793 0081 0C       		.uleb128 0xc
 8794 0082 0D       		.uleb128 0xd
 8795 0083 00       		.byte	0
 8796 0084 03       		.uleb128 0x3
 8797 0085 0E       		.uleb128 0xe
 8798 0086 3A       		.uleb128 0x3a
 8799 0087 0B       		.uleb128 0xb
 8800 0088 3B       		.uleb128 0x3b
 8801 0089 0B       		.uleb128 0xb
 8802 008a 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 189


 8803 008b 13       		.uleb128 0x13
 8804 008c 38       		.uleb128 0x38
 8805 008d 0B       		.uleb128 0xb
 8806 008e 00       		.byte	0
 8807 008f 00       		.byte	0
 8808 0090 0D       		.uleb128 0xd
 8809 0091 13       		.uleb128 0x13
 8810 0092 01       		.byte	0x1
 8811 0093 03       		.uleb128 0x3
 8812 0094 0E       		.uleb128 0xe
 8813 0095 0B       		.uleb128 0xb
 8814 0096 0B       		.uleb128 0xb
 8815 0097 3A       		.uleb128 0x3a
 8816 0098 0B       		.uleb128 0xb
 8817 0099 3B       		.uleb128 0x3b
 8818 009a 0B       		.uleb128 0xb
 8819 009b 01       		.uleb128 0x1
 8820 009c 13       		.uleb128 0x13
 8821 009d 00       		.byte	0
 8822 009e 00       		.byte	0
 8823 009f 0E       		.uleb128 0xe
 8824 00a0 16       		.uleb128 0x16
 8825 00a1 00       		.byte	0
 8826 00a2 03       		.uleb128 0x3
 8827 00a3 08       		.uleb128 0x8
 8828 00a4 3A       		.uleb128 0x3a
 8829 00a5 0B       		.uleb128 0xb
 8830 00a6 3B       		.uleb128 0x3b
 8831 00a7 0B       		.uleb128 0xb
 8832 00a8 49       		.uleb128 0x49
 8833 00a9 13       		.uleb128 0x13
 8834 00aa 00       		.byte	0
 8835 00ab 00       		.byte	0
 8836 00ac 0F       		.uleb128 0xf
 8837 00ad 28       		.uleb128 0x28
 8838 00ae 00       		.byte	0
 8839 00af 03       		.uleb128 0x3
 8840 00b0 08       		.uleb128 0x8
 8841 00b1 1C       		.uleb128 0x1c
 8842 00b2 0B       		.uleb128 0xb
 8843 00b3 00       		.byte	0
 8844 00b4 00       		.byte	0
 8845 00b5 10       		.uleb128 0x10
 8846 00b6 2E       		.uleb128 0x2e
 8847 00b7 01       		.byte	0x1
 8848 00b8 3F       		.uleb128 0x3f
 8849 00b9 19       		.uleb128 0x19
 8850 00ba 03       		.uleb128 0x3
 8851 00bb 0E       		.uleb128 0xe
 8852 00bc 3A       		.uleb128 0x3a
 8853 00bd 0B       		.uleb128 0xb
 8854 00be 3B       		.uleb128 0x3b
 8855 00bf 0B       		.uleb128 0xb
 8856 00c0 27       		.uleb128 0x27
 8857 00c1 19       		.uleb128 0x19
 8858 00c2 11       		.uleb128 0x11
 8859 00c3 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 190


 8860 00c4 12       		.uleb128 0x12
 8861 00c5 06       		.uleb128 0x6
 8862 00c6 40       		.uleb128 0x40
 8863 00c7 18       		.uleb128 0x18
 8864 00c8 9642     		.uleb128 0x2116
 8865 00ca 19       		.uleb128 0x19
 8866 00cb 01       		.uleb128 0x1
 8867 00cc 13       		.uleb128 0x13
 8868 00cd 00       		.byte	0
 8869 00ce 00       		.byte	0
 8870 00cf 11       		.uleb128 0x11
 8871 00d0 34       		.uleb128 0x34
 8872 00d1 00       		.byte	0
 8873 00d2 03       		.uleb128 0x3
 8874 00d3 0E       		.uleb128 0xe
 8875 00d4 3A       		.uleb128 0x3a
 8876 00d5 0B       		.uleb128 0xb
 8877 00d6 3B       		.uleb128 0x3b
 8878 00d7 0B       		.uleb128 0xb
 8879 00d8 49       		.uleb128 0x49
 8880 00d9 13       		.uleb128 0x13
 8881 00da 02       		.uleb128 0x2
 8882 00db 18       		.uleb128 0x18
 8883 00dc 00       		.byte	0
 8884 00dd 00       		.byte	0
 8885 00de 12       		.uleb128 0x12
 8886 00df 0B       		.uleb128 0xb
 8887 00e0 01       		.byte	0x1
 8888 00e1 11       		.uleb128 0x11
 8889 00e2 01       		.uleb128 0x1
 8890 00e3 12       		.uleb128 0x12
 8891 00e4 06       		.uleb128 0x6
 8892 00e5 01       		.uleb128 0x1
 8893 00e6 13       		.uleb128 0x13
 8894 00e7 00       		.byte	0
 8895 00e8 00       		.byte	0
 8896 00e9 13       		.uleb128 0x13
 8897 00ea 34       		.uleb128 0x34
 8898 00eb 00       		.byte	0
 8899 00ec 03       		.uleb128 0x3
 8900 00ed 08       		.uleb128 0x8
 8901 00ee 3A       		.uleb128 0x3a
 8902 00ef 0B       		.uleb128 0xb
 8903 00f0 3B       		.uleb128 0x3b
 8904 00f1 0B       		.uleb128 0xb
 8905 00f2 49       		.uleb128 0x49
 8906 00f3 13       		.uleb128 0x13
 8907 00f4 02       		.uleb128 0x2
 8908 00f5 18       		.uleb128 0x18
 8909 00f6 00       		.byte	0
 8910 00f7 00       		.byte	0
 8911 00f8 14       		.uleb128 0x14
 8912 00f9 0B       		.uleb128 0xb
 8913 00fa 01       		.byte	0x1
 8914 00fb 11       		.uleb128 0x11
 8915 00fc 01       		.uleb128 0x1
 8916 00fd 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 191


 8917 00fe 06       		.uleb128 0x6
 8918 00ff 00       		.byte	0
 8919 0100 00       		.byte	0
 8920 0101 15       		.uleb128 0x15
 8921 0102 34       		.uleb128 0x34
 8922 0103 00       		.byte	0
 8923 0104 03       		.uleb128 0x3
 8924 0105 0E       		.uleb128 0xe
 8925 0106 3A       		.uleb128 0x3a
 8926 0107 0B       		.uleb128 0xb
 8927 0108 3B       		.uleb128 0x3b
 8928 0109 05       		.uleb128 0x5
 8929 010a 49       		.uleb128 0x49
 8930 010b 13       		.uleb128 0x13
 8931 010c 02       		.uleb128 0x2
 8932 010d 18       		.uleb128 0x18
 8933 010e 00       		.byte	0
 8934 010f 00       		.byte	0
 8935 0110 16       		.uleb128 0x16
 8936 0111 01       		.uleb128 0x1
 8937 0112 01       		.byte	0x1
 8938 0113 49       		.uleb128 0x49
 8939 0114 13       		.uleb128 0x13
 8940 0115 01       		.uleb128 0x1
 8941 0116 13       		.uleb128 0x13
 8942 0117 00       		.byte	0
 8943 0118 00       		.byte	0
 8944 0119 17       		.uleb128 0x17
 8945 011a 21       		.uleb128 0x21
 8946 011b 00       		.byte	0
 8947 011c 49       		.uleb128 0x49
 8948 011d 13       		.uleb128 0x13
 8949 011e 2F       		.uleb128 0x2f
 8950 011f 0B       		.uleb128 0xb
 8951 0120 00       		.byte	0
 8952 0121 00       		.byte	0
 8953 0122 18       		.uleb128 0x18
 8954 0123 2E       		.uleb128 0x2e
 8955 0124 00       		.byte	0
 8956 0125 3F       		.uleb128 0x3f
 8957 0126 19       		.uleb128 0x19
 8958 0127 03       		.uleb128 0x3
 8959 0128 0E       		.uleb128 0xe
 8960 0129 3A       		.uleb128 0x3a
 8961 012a 0B       		.uleb128 0xb
 8962 012b 3B       		.uleb128 0x3b
 8963 012c 05       		.uleb128 0x5
 8964 012d 27       		.uleb128 0x27
 8965 012e 19       		.uleb128 0x19
 8966 012f 11       		.uleb128 0x11
 8967 0130 01       		.uleb128 0x1
 8968 0131 12       		.uleb128 0x12
 8969 0132 06       		.uleb128 0x6
 8970 0133 40       		.uleb128 0x40
 8971 0134 18       		.uleb128 0x18
 8972 0135 9642     		.uleb128 0x2116
 8973 0137 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 192


 8974 0138 00       		.byte	0
 8975 0139 00       		.byte	0
 8976 013a 19       		.uleb128 0x19
 8977 013b 2E       		.uleb128 0x2e
 8978 013c 01       		.byte	0x1
 8979 013d 3F       		.uleb128 0x3f
 8980 013e 19       		.uleb128 0x19
 8981 013f 03       		.uleb128 0x3
 8982 0140 0E       		.uleb128 0xe
 8983 0141 3A       		.uleb128 0x3a
 8984 0142 0B       		.uleb128 0xb
 8985 0143 3B       		.uleb128 0x3b
 8986 0144 05       		.uleb128 0x5
 8987 0145 27       		.uleb128 0x27
 8988 0146 19       		.uleb128 0x19
 8989 0147 11       		.uleb128 0x11
 8990 0148 01       		.uleb128 0x1
 8991 0149 12       		.uleb128 0x12
 8992 014a 06       		.uleb128 0x6
 8993 014b 40       		.uleb128 0x40
 8994 014c 18       		.uleb128 0x18
 8995 014d 9642     		.uleb128 0x2116
 8996 014f 19       		.uleb128 0x19
 8997 0150 01       		.uleb128 0x1
 8998 0151 13       		.uleb128 0x13
 8999 0152 00       		.byte	0
 9000 0153 00       		.byte	0
 9001 0154 1A       		.uleb128 0x1a
 9002 0155 05       		.uleb128 0x5
 9003 0156 00       		.byte	0
 9004 0157 03       		.uleb128 0x3
 9005 0158 0E       		.uleb128 0xe
 9006 0159 3A       		.uleb128 0x3a
 9007 015a 0B       		.uleb128 0xb
 9008 015b 3B       		.uleb128 0x3b
 9009 015c 05       		.uleb128 0x5
 9010 015d 49       		.uleb128 0x49
 9011 015e 13       		.uleb128 0x13
 9012 015f 02       		.uleb128 0x2
 9013 0160 18       		.uleb128 0x18
 9014 0161 00       		.byte	0
 9015 0162 00       		.byte	0
 9016 0163 1B       		.uleb128 0x1b
 9017 0164 34       		.uleb128 0x34
 9018 0165 00       		.byte	0
 9019 0166 03       		.uleb128 0x3
 9020 0167 08       		.uleb128 0x8
 9021 0168 3A       		.uleb128 0x3a
 9022 0169 0B       		.uleb128 0xb
 9023 016a 3B       		.uleb128 0x3b
 9024 016b 05       		.uleb128 0x5
 9025 016c 49       		.uleb128 0x49
 9026 016d 13       		.uleb128 0x13
 9027 016e 02       		.uleb128 0x2
 9028 016f 18       		.uleb128 0x18
 9029 0170 00       		.byte	0
 9030 0171 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 193


 9031 0172 1C       		.uleb128 0x1c
 9032 0173 2E       		.uleb128 0x2e
 9033 0174 00       		.byte	0
 9034 0175 3F       		.uleb128 0x3f
 9035 0176 19       		.uleb128 0x19
 9036 0177 03       		.uleb128 0x3
 9037 0178 0E       		.uleb128 0xe
 9038 0179 3A       		.uleb128 0x3a
 9039 017a 0B       		.uleb128 0xb
 9040 017b 3B       		.uleb128 0x3b
 9041 017c 05       		.uleb128 0x5
 9042 017d 11       		.uleb128 0x11
 9043 017e 01       		.uleb128 0x1
 9044 017f 12       		.uleb128 0x12
 9045 0180 06       		.uleb128 0x6
 9046 0181 40       		.uleb128 0x40
 9047 0182 18       		.uleb128 0x18
 9048 0183 9642     		.uleb128 0x2116
 9049 0185 19       		.uleb128 0x19
 9050 0186 00       		.byte	0
 9051 0187 00       		.byte	0
 9052 0188 1D       		.uleb128 0x1d
 9053 0189 34       		.uleb128 0x34
 9054 018a 00       		.byte	0
 9055 018b 03       		.uleb128 0x3
 9056 018c 0E       		.uleb128 0xe
 9057 018d 3A       		.uleb128 0x3a
 9058 018e 0B       		.uleb128 0xb
 9059 018f 3B       		.uleb128 0x3b
 9060 0190 05       		.uleb128 0x5
 9061 0191 49       		.uleb128 0x49
 9062 0192 13       		.uleb128 0x13
 9063 0193 3F       		.uleb128 0x3f
 9064 0194 19       		.uleb128 0x19
 9065 0195 3C       		.uleb128 0x3c
 9066 0196 19       		.uleb128 0x19
 9067 0197 00       		.byte	0
 9068 0198 00       		.byte	0
 9069 0199 1E       		.uleb128 0x1e
 9070 019a 34       		.uleb128 0x34
 9071 019b 00       		.byte	0
 9072 019c 03       		.uleb128 0x3
 9073 019d 0E       		.uleb128 0xe
 9074 019e 3A       		.uleb128 0x3a
 9075 019f 0B       		.uleb128 0xb
 9076 01a0 3B       		.uleb128 0x3b
 9077 01a1 0B       		.uleb128 0xb
 9078 01a2 49       		.uleb128 0x49
 9079 01a3 13       		.uleb128 0x13
 9080 01a4 3F       		.uleb128 0x3f
 9081 01a5 19       		.uleb128 0x19
 9082 01a6 02       		.uleb128 0x2
 9083 01a7 18       		.uleb128 0x18
 9084 01a8 00       		.byte	0
 9085 01a9 00       		.byte	0
 9086 01aa 1F       		.uleb128 0x1f
 9087 01ab 34       		.uleb128 0x34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 194


 9088 01ac 00       		.byte	0
 9089 01ad 03       		.uleb128 0x3
 9090 01ae 0E       		.uleb128 0xe
 9091 01af 3A       		.uleb128 0x3a
 9092 01b0 0B       		.uleb128 0xb
 9093 01b1 3B       		.uleb128 0x3b
 9094 01b2 0B       		.uleb128 0xb
 9095 01b3 49       		.uleb128 0x49
 9096 01b4 13       		.uleb128 0x13
 9097 01b5 3F       		.uleb128 0x3f
 9098 01b6 19       		.uleb128 0x19
 9099 01b7 3C       		.uleb128 0x3c
 9100 01b8 19       		.uleb128 0x19
 9101 01b9 00       		.byte	0
 9102 01ba 00       		.byte	0
 9103 01bb 20       		.uleb128 0x20
 9104 01bc 34       		.uleb128 0x34
 9105 01bd 00       		.byte	0
 9106 01be 03       		.uleb128 0x3
 9107 01bf 08       		.uleb128 0x8
 9108 01c0 3A       		.uleb128 0x3a
 9109 01c1 0B       		.uleb128 0xb
 9110 01c2 3B       		.uleb128 0x3b
 9111 01c3 0B       		.uleb128 0xb
 9112 01c4 49       		.uleb128 0x49
 9113 01c5 13       		.uleb128 0x13
 9114 01c6 3F       		.uleb128 0x3f
 9115 01c7 19       		.uleb128 0x19
 9116 01c8 3C       		.uleb128 0x3c
 9117 01c9 19       		.uleb128 0x19
 9118 01ca 00       		.byte	0
 9119 01cb 00       		.byte	0
 9120 01cc 21       		.uleb128 0x21
 9121 01cd 34       		.uleb128 0x34
 9122 01ce 00       		.byte	0
 9123 01cf 03       		.uleb128 0x3
 9124 01d0 0E       		.uleb128 0xe
 9125 01d1 3A       		.uleb128 0x3a
 9126 01d2 0B       		.uleb128 0xb
 9127 01d3 3B       		.uleb128 0x3b
 9128 01d4 05       		.uleb128 0x5
 9129 01d5 49       		.uleb128 0x49
 9130 01d6 13       		.uleb128 0x13
 9131 01d7 3F       		.uleb128 0x3f
 9132 01d8 19       		.uleb128 0x19
 9133 01d9 02       		.uleb128 0x2
 9134 01da 18       		.uleb128 0x18
 9135 01db 00       		.byte	0
 9136 01dc 00       		.byte	0
 9137 01dd 00       		.byte	0
 9138              		.section	.debug_aranges,"",%progbits
 9139 0000 94000000 		.4byte	0x94
 9140 0004 0200     		.2byte	0x2
 9141 0006 00000000 		.4byte	.Ldebug_info0
 9142 000a 04       		.byte	0x4
 9143 000b 00       		.byte	0
 9144 000c 0000     		.2byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 195


 9145 000e 0000     		.2byte	0
 9146 0010 00000000 		.4byte	.LFB64
 9147 0014 040E0000 		.4byte	.LFE64-.LFB64
 9148 0018 00000000 		.4byte	.LFB65
 9149 001c B4000000 		.4byte	.LFE65-.LFB65
 9150 0020 00000000 		.4byte	.LFB66
 9151 0024 C0010000 		.4byte	.LFE66-.LFB66
 9152 0028 00000000 		.4byte	.LFB67
 9153 002c 94140000 		.4byte	.LFE67-.LFB67
 9154 0030 00000000 		.4byte	.LFB68
 9155 0034 9C000000 		.4byte	.LFE68-.LFB68
 9156 0038 00000000 		.4byte	.LFB69
 9157 003c 9C000000 		.4byte	.LFE69-.LFB69
 9158 0040 00000000 		.4byte	.LFB70
 9159 0044 7C000000 		.4byte	.LFE70-.LFB70
 9160 0048 00000000 		.4byte	.LFB71
 9161 004c 7C000000 		.4byte	.LFE71-.LFB71
 9162 0050 00000000 		.4byte	.LFB72
 9163 0054 48000000 		.4byte	.LFE72-.LFB72
 9164 0058 00000000 		.4byte	.LFB73
 9165 005c B0000000 		.4byte	.LFE73-.LFB73
 9166 0060 00000000 		.4byte	.LFB74
 9167 0064 88010000 		.4byte	.LFE74-.LFB74
 9168 0068 00000000 		.4byte	.LFB75
 9169 006c A0000000 		.4byte	.LFE75-.LFB75
 9170 0070 00000000 		.4byte	.LFB76
 9171 0074 BC000000 		.4byte	.LFE76-.LFB76
 9172 0078 00000000 		.4byte	.LFB77
 9173 007c 20000000 		.4byte	.LFE77-.LFB77
 9174 0080 00000000 		.4byte	.LFB78
 9175 0084 C4010000 		.4byte	.LFE78-.LFB78
 9176 0088 00000000 		.4byte	.LFB79
 9177 008c 54010000 		.4byte	.LFE79-.LFB79
 9178 0090 00000000 		.4byte	0
 9179 0094 00000000 		.4byte	0
 9180              		.section	.debug_ranges,"",%progbits
 9181              	.Ldebug_ranges0:
 9182 0000 00000000 		.4byte	.LFB64
 9183 0004 040E0000 		.4byte	.LFE64
 9184 0008 00000000 		.4byte	.LFB65
 9185 000c B4000000 		.4byte	.LFE65
 9186 0010 00000000 		.4byte	.LFB66
 9187 0014 C0010000 		.4byte	.LFE66
 9188 0018 00000000 		.4byte	.LFB67
 9189 001c 94140000 		.4byte	.LFE67
 9190 0020 00000000 		.4byte	.LFB68
 9191 0024 9C000000 		.4byte	.LFE68
 9192 0028 00000000 		.4byte	.LFB69
 9193 002c 9C000000 		.4byte	.LFE69
 9194 0030 00000000 		.4byte	.LFB70
 9195 0034 7C000000 		.4byte	.LFE70
 9196 0038 00000000 		.4byte	.LFB71
 9197 003c 7C000000 		.4byte	.LFE71
 9198 0040 00000000 		.4byte	.LFB72
 9199 0044 48000000 		.4byte	.LFE72
 9200 0048 00000000 		.4byte	.LFB73
 9201 004c B0000000 		.4byte	.LFE73
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 196


 9202 0050 00000000 		.4byte	.LFB74
 9203 0054 88010000 		.4byte	.LFE74
 9204 0058 00000000 		.4byte	.LFB75
 9205 005c A0000000 		.4byte	.LFE75
 9206 0060 00000000 		.4byte	.LFB76
 9207 0064 BC000000 		.4byte	.LFE76
 9208 0068 00000000 		.4byte	.LFB77
 9209 006c 20000000 		.4byte	.LFE77
 9210 0070 00000000 		.4byte	.LFB78
 9211 0074 C4010000 		.4byte	.LFE78
 9212 0078 00000000 		.4byte	.LFB79
 9213 007c 54010000 		.4byte	.LFE79
 9214 0080 00000000 		.4byte	0
 9215 0084 00000000 		.4byte	0
 9216              		.section	.debug_line,"",%progbits
 9217              	.Ldebug_line0:
 9218 0000 1C080000 		.section	.debug_str,"MS",%progbits,1
 9218      02008401 
 9218      00000201 
 9218      FB0E0D00 
 9218      01010101 
 9219              	.LASF35:
 9220 0000 54726164 		.ascii	"TraditionalPedalSumMenu\000"
 9220      6974696F 
 9220      6E616C50 
 9220      6564616C 
 9220      53756D4D 
 9221              	.LASF112:
 9222 0018 65786974 		.ascii	"exitPresetStoreMenu\000"
 9222      50726573 
 9222      65745374 
 9222      6F72654D 
 9222      656E7500 
 9223              	.LASF125:
 9224 002c 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 9224      6F4F4C45 
 9224      44576169 
 9224      74696E67 
 9224      546F5365 
 9225              	.LASF134:
 9226 0043 70726573 		.ascii	"presetAlreadyDisplayed\000"
 9226      6574416C 
 9226      72656164 
 9226      79446973 
 9226      706C6179 
 9227              	.LASF89:
 9228 005a 64656164 		.ascii	"deadZoneRepresentation\000"
 9228      5A6F6E65 
 9228      52657072 
 9228      6573656E 
 9228      74617469 
 9229              	.LASF153:
 9230 0071 6D696469 		.ascii	"midiBarSendOn\000"
 9230      42617253 
 9230      656E644F 
 9230      6E00
 9231              	.LASF42:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 197


 9232 007f 68656967 		.ascii	"height\000"
 9232      687400
 9233              	.LASF123:
 9234 0086 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 9234      4F4C4544 
 9234      57616974 
 9234      696E6754 
 9234      6F53656E 
 9235              	.LASF93:
 9236 009c 65786974 		.ascii	"exitEditModeMenu\000"
 9236      45646974 
 9236      4D6F6465 
 9236      4D656E75 
 9236      00
 9237              	.LASF64:
 9238 00ad 5F637034 		.ascii	"_cp437\000"
 9238      333700
 9239              	.LASF1:
 9240 00b4 5F5F7569 		.ascii	"__uint8_t\000"
 9240      6E74385F 
 9240      7400
 9241              	.LASF144:
 9242 00be 7472616E 		.ascii	"transposeCents\000"
 9242      73706F73 
 9242      6543656E 
 9242      747300
 9243              	.LASF76:
 9244 00cd 64697265 		.ascii	"direction\000"
 9244      6374696F 
 9244      6E00
 9245              	.LASF103:
 9246 00d7 656E7465 		.ascii	"enterPressed\000"
 9246      72507265 
 9246      73736564 
 9246      00
 9247              	.LASF122:
 9248 00e4 74726164 		.ascii	"traditionalPedalAdd\000"
 9248      6974696F 
 9248      6E616C50 
 9248      6564616C 
 9248      41646400 
 9249              	.LASF151:
 9250 00f8 6F637461 		.ascii	"octaveAction\000"
 9250      76654163 
 9250      74696F6E 
 9250      00
 9251              	.LASF185:
 9252 0105 73657474 		.ascii	"settingsNames\000"
 9252      696E6773 
 9252      4E616D65 
 9252      7300
 9253              	.LASF12:
 9254 0113 6C6F6E67 		.ascii	"long long unsigned int\000"
 9254      206C6F6E 
 9254      6720756E 
 9254      7369676E 
 9254      65642069 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 198


 9255              	.LASF142:
 9256 012a 616E676C 		.ascii	"angle\000"
 9256      6500
 9257              	.LASF39:
 9258 0130 4E696C4D 		.ascii	"NilMenu\000"
 9258      656E7500 
 9259              	.LASF85:
 9260 0138 7468654D 		.ascii	"theMultiplier\000"
 9260      756C7469 
 9260      706C6965 
 9260      7200
 9261              	.LASF176:
 9262 0146 62757474 		.ascii	"button4Up\000"
 9262      6F6E3455 
 9262      7000
 9263              	.LASF168:
 9264 0150 73656D69 		.ascii	"semitonesOrCents\000"
 9264      746F6E65 
 9264      734F7243 
 9264      656E7473 
 9264      00
 9265              	.LASF0:
 9266 0161 5F5F696E 		.ascii	"__int8_t\000"
 9266      74385F74 
 9266      00
 9267              	.LASF117:
 9268 016a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 9268      52784275 
 9268      66666572 
 9268      00
 9269              	.LASF25:
 9270 0177 4D61696E 		.ascii	"MainMenu\000"
 9270      4D656E75 
 9270      00
 9271              	.LASF36:
 9272 0180 4D696469 		.ascii	"MidiSendMenu\000"
 9272      53656E64 
 9272      4D656E75 
 9272      00
 9273              	.LASF164:
 9274 018d 77686963 		.ascii	"whichMacroPageIsActive\000"
 9274      684D6163 
 9274      726F5061 
 9274      67654973 
 9274      41637469 
 9275              	.LASF167:
 9276 01a4 6D656E75 		.ascii	"menuPosition\000"
 9276      506F7369 
 9276      74696F6E 
 9276      00
 9277              	.LASF11:
 9278 01b1 6C6F6E67 		.ascii	"long long int\000"
 9278      206C6F6E 
 9278      6720696E 
 9278      7400
 9279              	.LASF2:
 9280 01bf 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 199


 9280      65642063 
 9280      68617200 
 9281              	.LASF66:
 9282 01cb 666F6E74 		.ascii	"fontHeight\000"
 9282      48656967 
 9282      687400
 9283              	.LASF74:
 9284 01d6 466F7572 		.ascii	"FourthLine\000"
 9284      74684C69 
 9284      6E6500
 9285              	.LASF192:
 9286 01e1 75692E63 		.ascii	"ui.c\000"
 9286      00
 9287              	.LASF131:
 9288 01e6 70617463 		.ascii	"patchNum\000"
 9288      684E756D 
 9288      00
 9289              	.LASF182:
 9290 01ef 70726573 		.ascii	"presetStoreStage\000"
 9290      65745374 
 9290      6F726553 
 9290      74616765 
 9290      00
 9291              	.LASF90:
 9292 0200 736C6964 		.ascii	"sliderTemp\000"
 9292      65725465 
 9292      6D7000
 9293              	.LASF106:
 9294 020b 70656461 		.ascii	"pedal_inverted_byte\000"
 9294      6C5F696E 
 9294      76657274 
 9294      65645F62 
 9294      79746500 
 9295              	.LASF63:
 9296 021f 77726170 		.ascii	"wrap\000"
 9296      00
 9297              	.LASF138:
 9298 0224 66726574 		.ascii	"fretMeasurements\000"
 9298      4D656173 
 9298      7572656D 
 9298      656E7473 
 9298      00
 9299              	.LASF49:
 9300 0235 66697273 		.ascii	"first\000"
 9300      7400
 9301              	.LASF9:
 9302 023b 6C6F6E67 		.ascii	"long int\000"
 9302      20696E74 
 9302      00
 9303              	.LASF170:
 9304 0244 6F637431 		.ascii	"oct1Up\000"
 9304      557000
 9305              	.LASF160:
 9306 024b 6E657750 		.ascii	"newPresetName\000"
 9306      72657365 
 9306      744E616D 
 9306      6500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 200


 9307              	.LASF169:
 9308 0259 65646974 		.ascii	"editUp\000"
 9308      557000
 9309              	.LASF98:
 9310 0260 74656D70 		.ascii	"tempPos\000"
 9310      506F7300 
 9311              	.LASF19:
 9312 0268 75696E74 		.ascii	"uint8\000"
 9312      3800
 9313              	.LASF157:
 9314 026e 70726576 		.ascii	"prevMacroKnobValues\000"
 9314      4D616372 
 9314      6F4B6E6F 
 9314      6256616C 
 9314      75657300 
 9315              	.LASF17:
 9316 0282 75696E74 		.ascii	"uint16_t\000"
 9316      31365F74 
 9316      00
 9317              	.LASF21:
 9318 028b 646F7562 		.ascii	"double\000"
 9318      6C6500
 9319              	.LASF80:
 9320 0292 456E7465 		.ascii	"Enter\000"
 9320      7200
 9321              	.LASF27:
 9322 0298 43616C69 		.ascii	"CalibrationMenu\000"
 9322      62726174 
 9322      696F6E4D 
 9322      656E7500 
 9323              	.LASF101:
 9324 02a8 646F776E 		.ascii	"downPressed\000"
 9324      50726573 
 9324      73656400 
 9325              	.LASF67:
 9326 02b4 666F6E74 		.ascii	"fontDesc\000"
 9326      44657363 
 9326      00
 9327              	.LASF156:
 9328 02bd 6B6E6F62 		.ascii	"knobFrozen\000"
 9328      46726F7A 
 9328      656E00
 9329              	.LASF195:
 9330 02c8 61637469 		.ascii	"action\000"
 9330      6F6E00
 9331              	.LASF193:
 9332 02cf 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 9332      73657273 
 9332      5C4A6566 
 9332      66536E79 
 9332      6465725C 
 9333 02fd 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 9333      355F656C 
 9333      65637472 
 9333      6F737465 
 9333      656C5F73 
 9334 032f 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 201


 9334      5F50534F 
 9334      43335F35 
 9334      5F546865 
 9334      726D6973 
 9335              	.LASF78:
 9336 034d 52696768 		.ascii	"Right\000"
 9336      7400
 9337              	.LASF155:
 9338 0353 73656E64 		.ascii	"sendFirmwareUpdateRequest\000"
 9338      4669726D 
 9338      77617265 
 9338      55706461 
 9338      74655265 
 9339              	.LASF159:
 9340 036d 73656E64 		.ascii	"sendLocalPresetStoreCommand\000"
 9340      4C6F6361 
 9340      6C507265 
 9340      73657453 
 9340      746F7265 
 9341              	.LASF96:
 9342 0389 77686174 		.ascii	"whatToDraw\000"
 9342      546F4472 
 9342      617700
 9343              	.LASF147:
 9344 0394 70726576 		.ascii	"prevOctave\000"
 9344      4F637461 
 9344      766500
 9345              	.LASF13:
 9346 039f 756E7369 		.ascii	"unsigned int\000"
 9346      676E6564 
 9346      20696E74 
 9346      00
 9347              	.LASF172:
 9348 03ac 656E636F 		.ascii	"encoderUp\000"
 9348      64657255 
 9348      7000
 9349              	.LASF60:
 9350 03b6 74657874 		.ascii	"textsize\000"
 9350      73697A65 
 9350      00
 9351              	.LASF10:
 9352 03bf 6C6F6E67 		.ascii	"long unsigned int\000"
 9352      20756E73 
 9352      69676E65 
 9352      6420696E 
 9352      7400
 9353              	.LASF108:
 9354 03d1 64697374 		.ascii	"distanceFromHigh\000"
 9354      616E6365 
 9354      46726F6D 
 9354      48696768 
 9354      00
 9355              	.LASF46:
 9356 03e2 47465867 		.ascii	"GFXglyph\000"
 9356      6C797068 
 9356      00
 9357              	.LASF115:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 202


 9358 03eb 64697370 		.ascii	"displayCurrentControlNames\000"
 9358      6C617943 
 9358      75727265 
 9358      6E74436F 
 9358      6E74726F 
 9359              	.LASF48:
 9360 0406 676C7970 		.ascii	"glyph\000"
 9360      6800
 9361              	.LASF184:
 9362 040c 6D61696E 		.ascii	"mainMenuNames\000"
 9362      4D656E75 
 9362      4E616D65 
 9362      7300
 9363              	.LASF55:
 9364 041a 5F776964 		.ascii	"_width\000"
 9364      746800
 9365              	.LASF41:
 9366 0421 77696474 		.ascii	"width\000"
 9366      6800
 9367              	.LASF110:
 9368 0427 656E7465 		.ascii	"enterFretCalibrationMode\000"
 9368      72467265 
 9368      7443616C 
 9368      69627261 
 9368      74696F6E 
 9369              	.LASF148:
 9370 0440 6475616C 		.ascii	"dualSlider\000"
 9370      536C6964 
 9370      657200
 9371              	.LASF7:
 9372 044b 73686F72 		.ascii	"short unsigned int\000"
 9372      7420756E 
 9372      7369676E 
 9372      65642069 
 9372      6E7400
 9373              	.LASF107:
 9374 045e 64697374 		.ascii	"distanceFromLow\000"
 9374      616E6365 
 9374      46726F6D 
 9374      4C6F7700 
 9375              	.LASF189:
 9376 046e 66726574 		.ascii	"fretToCalibrate\000"
 9376      546F4361 
 9376      6C696272 
 9376      61746500 
 9377              	.LASF154:
 9378 047e 6D696469 		.ascii	"midiDebugSendOn\000"
 9378      44656275 
 9378      6753656E 
 9378      644F6E00 
 9379              	.LASF84:
 9380 048e 63757272 		.ascii	"currentChar\000"
 9380      656E7443 
 9380      68617200 
 9381              	.LASF162:
 9382 049a 6E65636B 		.ascii	"neckPreset\000"
 9382      50726573 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 203


 9382      657400
 9383              	.LASF50:
 9384 04a5 6C617374 		.ascii	"last\000"
 9384      00
 9385              	.LASF190:
 9386 04aa 77686963 		.ascii	"whichFretArray\000"
 9386      68467265 
 9386      74417272 
 9386      617900
 9387              	.LASF141:
 9388 04b9 70656461 		.ascii	"pedal_inverted\000"
 9388      6C5F696E 
 9388      76657274 
 9388      656400
 9389              	.LASF187:
 9390 04c8 6E756D43 		.ascii	"numCalibrationItems\000"
 9390      616C6962 
 9390      72617469 
 9390      6F6E4974 
 9390      656D7300 
 9391              	.LASF94:
 9392 04dc 74656D70 		.ascii	"tempByte\000"
 9392      42797465 
 9392      00
 9393              	.LASF71:
 9394 04e5 46697273 		.ascii	"FirstLine\000"
 9394      744C696E 
 9394      6500
 9395              	.LASF91:
 9396 04ef 736C6964 		.ascii	"sliderRepDisplay\000"
 9396      65725265 
 9396      70446973 
 9396      706C6179 
 9396      00
 9397              	.LASF75:
 9398 0500 4E696C4C 		.ascii	"NilLine\000"
 9398      696E6500 
 9399              	.LASF52:
 9400 0508 47465866 		.ascii	"GFXfont\000"
 9400      6F6E7400 
 9401              	.LASF180:
 9402 0510 77686963 		.ascii	"whichFirmwareUpdateSelected\000"
 9402      68466972 
 9402      6D776172 
 9402      65557064 
 9402      61746553 
 9403              	.LASF31:
 9404 052c 5472616E 		.ascii	"TransposeMenu\000"
 9404      73706F73 
 9404      654D656E 
 9404      7500
 9405              	.LASF44:
 9406 053a 784F6666 		.ascii	"xOffset\000"
 9406      73657400 
 9407              	.LASF77:
 9408 0542 4C656674 		.ascii	"Left\000"
 9408      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 204


 9409              	.LASF145:
 9410 0547 7472616E 		.ascii	"transposeFloat\000"
 9410      73706F73 
 9410      65466C6F 
 9410      617400
 9411              	.LASF24:
 9412 0556 73697A65 		.ascii	"sizetype\000"
 9412      74797065 
 9412      00
 9413              	.LASF139:
 9414 055f 70656461 		.ascii	"pedals_low\000"
 9414      6C735F6C 
 9414      6F7700
 9415              	.LASF88:
 9416 056a 64656164 		.ascii	"deadZoneTemp\000"
 9416      5A6F6E65 
 9416      54656D70 
 9416      00
 9417              	.LASF23:
 9418 0577 6C6F6E67 		.ascii	"long double\000"
 9418      20646F75 
 9418      626C6500 
 9419              	.LASF175:
 9420 0583 62757474 		.ascii	"button3Up\000"
 9420      6F6E3355 
 9420      7000
 9421              	.LASF126:
 9422 058d 6E65636B 		.ascii	"neckByte\000"
 9422      42797465 
 9422      00
 9423              	.LASF59:
 9424 0596 63757273 		.ascii	"cursor_x\000"
 9424      6F725F78 
 9424      00
 9425              	.LASF33:
 9426 059f 44656164 		.ascii	"DeadzonesMenu\000"
 9426      7A6F6E65 
 9426      734D656E 
 9426      7500
 9427              	.LASF72:
 9428 05ad 5365636F 		.ascii	"SecondLine\000"
 9428      6E644C69 
 9428      6E6500
 9429              	.LASF118:
 9430 05b8 4465636F 		.ascii	"Decoder_1_Enabled\000"
 9430      6465725F 
 9430      315F456E 
 9430      61626C65 
 9430      6400
 9431              	.LASF140:
 9432 05ca 70656461 		.ascii	"pedals_high\000"
 9432      6C735F68 
 9432      69676800 
 9433              	.LASF194:
 9434 05d6 5F474658 		.ascii	"_GFX\000"
 9434      00
 9435              	.LASF87:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 205


 9436 05db 766F6C75 		.ascii	"volumeIntTemp\000"
 9436      6D65496E 
 9436      7454656D 
 9436      7000
 9437              	.LASF186:
 9438 05e9 6E756D4D 		.ascii	"numMainMenuItems\000"
 9438      61696E4D 
 9438      656E7549 
 9438      74656D73 
 9438      00
 9439              	.LASF178:
 9440 05fa 65646974 		.ascii	"editingSliderRepString\000"
 9440      696E6753 
 9440      6C696465 
 9440      72526570 
 9440      53747269 
 9441              	.LASF32:
 9442 0611 4F637461 		.ascii	"OctaveActionMenu\000"
 9442      76654163 
 9442      74696F6E 
 9442      4D656E75 
 9442      00
 9443              	.LASF161:
 9444 0622 6B6E6F62 		.ascii	"knobPanelLightActive\000"
 9444      50616E65 
 9444      6C4C6967 
 9444      68744163 
 9444      74697665 
 9445              	.LASF105:
 9446 0637 65786974 		.ascii	"exitLeverCalibrationMode\000"
 9446      4C657665 
 9446      7243616C 
 9446      69627261 
 9446      74696F6E 
 9447              	.LASF188:
 9448 0650 6E756D53 		.ascii	"numSettingsItems\000"
 9448      65747469 
 9448      6E677349 
 9448      74656D73 
 9448      00
 9449              	.LASF20:
 9450 0661 666C6F61 		.ascii	"float\000"
 9450      7400
 9451              	.LASF111:
 9452 0667 65786974 		.ascii	"exitFretCalibrationMode\000"
 9452      46726574 
 9452      43616C69 
 9452      62726174 
 9452      696F6E4D 
 9453              	.LASF38:
 9454 067f 4669726D 		.ascii	"FirmwareUpdateMenu\000"
 9454      77617265 
 9454      55706461 
 9454      74654D65 
 9454      6E7500
 9455              	.LASF82:
 9456 0692 63757272 		.ascii	"currentEncoderVal\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 206


 9456      656E7445 
 9456      6E636F64 
 9456      65725661 
 9456      6C00
 9457              	.LASF113:
 9458 06a4 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 9458      6C617943 
 9458      75727265 
 9458      6E745072 
 9458      65736574 
 9459              	.LASF18:
 9460 06c8 696E7433 		.ascii	"int32_t\000"
 9460      325F7400 
 9461              	.LASF3:
 9462 06d0 756E7369 		.ascii	"unsigned char\000"
 9462      676E6564 
 9462      20636861 
 9462      7200
 9463              	.LASF54:
 9464 06de 48454947 		.ascii	"HEIGHT\000"
 9464      485400
 9465              	.LASF70:
 9466 06e5 5F4F4C45 		.ascii	"_OLEDLine\000"
 9466      444C696E 
 9466      6500
 9467              	.LASF183:
 9468 06ef 63616C69 		.ascii	"calibrationNames\000"
 9468      62726174 
 9468      696F6E4E 
 9468      616D6573 
 9468      00
 9469              	.LASF43:
 9470 0700 78416476 		.ascii	"xAdvance\000"
 9470      616E6365 
 9470      00
 9471              	.LASF5:
 9472 0709 73686F72 		.ascii	"short int\000"
 9472      7420696E 
 9472      7400
 9473              	.LASF136:
 9474 0713 66726574 		.ascii	"fretCalibrationMode\000"
 9474      43616C69 
 9474      62726174 
 9474      696F6E4D 
 9474      6F646500 
 9475              	.LASF100:
 9476 0727 72696768 		.ascii	"rightPressed\000"
 9476      74507265 
 9476      73736564 
 9476      00
 9477              	.LASF149:
 9478 0734 64656164 		.ascii	"deadZone\000"
 9478      5A6F6E65 
 9478      00
 9479              	.LASF121:
 9480 073d 63757272 		.ascii	"currentCopedent\000"
 9480      656E7443 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 207


 9480      6F706564 
 9480      656E7400 
 9481              	.LASF102:
 9482 074d 75705072 		.ascii	"upPressed\000"
 9482      65737365 
 9482      6400
 9483              	.LASF173:
 9484 0757 62757474 		.ascii	"button1Up\000"
 9484      6F6E3155 
 9484      7000
 9485              	.LASF73:
 9486 0761 54686972 		.ascii	"ThirdLine\000"
 9486      644C696E 
 9486      6500
 9487              	.LASF109:
 9488 076b 656E7465 		.ascii	"enterEditModeMenu\000"
 9488      72456469 
 9488      744D6F64 
 9488      654D656E 
 9488      7500
 9489              	.LASF114:
 9490 077d 6D616372 		.ascii	"macroCheck\000"
 9490      6F436865 
 9490      636B00
 9491              	.LASF30:
 9492 0788 43616C69 		.ascii	"CalibrateFretsMenu\000"
 9492      62726174 
 9492      65467265 
 9492      74734D65 
 9492      6E7500
 9493              	.LASF137:
 9494 079b 6C657665 		.ascii	"leverCalibrationMode\000"
 9494      7243616C 
 9494      69627261 
 9494      74696F6E 
 9494      4D6F6465 
 9495              	.LASF51:
 9496 07b0 79416476 		.ascii	"yAdvance\000"
 9496      616E6365 
 9496      00
 9497              	.LASF129:
 9498 07b9 6D616372 		.ascii	"macroNamesArray\000"
 9498      6F4E616D 
 9498      65734172 
 9498      72617900 
 9499              	.LASF58:
 9500 07c9 63757273 		.ascii	"cursor_y\000"
 9500      6F725F79 
 9500      00
 9501              	.LASF22:
 9502 07d2 63686172 		.ascii	"char\000"
 9502      00
 9503              	.LASF174:
 9504 07d7 62757474 		.ascii	"button2Up\000"
 9504      6F6E3255 
 9504      7000
 9505              	.LASF65:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 208


 9506 07e1 67667846 		.ascii	"gfxFont\000"
 9506      6F6E7400 
 9507              	.LASF135:
 9508 07e9 77686963 		.ascii	"whichMacro\000"
 9508      684D6163 
 9508      726F00
 9509              	.LASF34:
 9510 07f4 536C6964 		.ascii	"SliderRepMenu\000"
 9510      65725265 
 9510      704D656E 
 9510      7500
 9511              	.LASF6:
 9512 0802 5F5F7569 		.ascii	"__uint16_t\000"
 9512      6E743136 
 9512      5F7400
 9513              	.LASF68:
 9514 080d 6175746F 		.ascii	"autoscroll\000"
 9514      7363726F 
 9514      6C6C00
 9515              	.LASF150:
 9516 0818 73747269 		.ascii	"stringRepresentation\000"
 9516      6E675265 
 9516      70726573 
 9516      656E7461 
 9516      74696F6E 
 9517              	.LASF69:
 9518 082d 5F4D656E 		.ascii	"_MenuModes\000"
 9518      754D6F64 
 9518      657300
 9519              	.LASF79:
 9520 0838 446F776E 		.ascii	"Down\000"
 9520      00
 9521              	.LASF8:
 9522 083d 5F5F696E 		.ascii	"__int32_t\000"
 9522      7433325F 
 9522      7400
 9523              	.LASF16:
 9524 0847 696E7431 		.ascii	"int16_t\000"
 9524      365F7400 
 9525              	.LASF166:
 9526 084f 656E636F 		.ascii	"encoderWatch\000"
 9526      64657257 
 9526      61746368 
 9526      00
 9527              	.LASF95:
 9528 085c 6D656E75 		.ascii	"menuAction\000"
 9528      41637469 
 9528      6F6E00
 9529              	.LASF57:
 9530 0867 726F7461 		.ascii	"rotation\000"
 9530      74696F6E 
 9530      00
 9531              	.LASF81:
 9532 0870 74656D70 		.ascii	"tempButtons\000"
 9532      42757474 
 9532      6F6E7300 
 9533              	.LASF61:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 209


 9534 087c 74657874 		.ascii	"textcolor\000"
 9534      636F6C6F 
 9534      7200
 9535              	.LASF133:
 9536 0886 636F7065 		.ascii	"copedentNamesArray\000"
 9536      64656E74 
 9536      4E616D65 
 9536      73417272 
 9536      617900
 9537              	.LASF83:
 9538 0899 70726573 		.ascii	"presetNumberToStoreTemp\000"
 9538      65744E75 
 9538      6D626572 
 9538      546F5374 
 9538      6F726554 
 9539              	.LASF143:
 9540 08b1 7472616E 		.ascii	"transposeSemitones\000"
 9540      73706F73 
 9540      6553656D 
 9540      69746F6E 
 9540      657300
 9541              	.LASF14:
 9542 08c4 696E7438 		.ascii	"int8_t\000"
 9542      5F7400
 9543              	.LASF119:
 9544 08cb 6F637461 		.ascii	"octave\000"
 9544      766500
 9545              	.LASF191:
 9546 08d2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 9546      43313120 
 9546      352E342E 
 9546      31203230 
 9546      31363036 
 9547 0905 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 9547      20726576 
 9547      6973696F 
 9547      6E203233 
 9547      37373135 
 9548 0938 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 9548      66756E63 
 9548      74696F6E 
 9548      2D736563 
 9548      74696F6E 
 9549              	.LASF29:
 9550 0960 43616C69 		.ascii	"CalibrateLeversMenu\000"
 9550      62726174 
 9550      654C6576 
 9550      6572734D 
 9550      656E7500 
 9551              	.LASF116:
 9552 0974 636F6E74 		.ascii	"controlCheck\000"
 9552      726F6C43 
 9552      6865636B 
 9552      00
 9553              	.LASF28:
 9554 0981 53657474 		.ascii	"SettingsMenu\000"
 9554      696E6773 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 210


 9554      4D656E75 
 9554      00
 9555              	.LASF56:
 9556 098e 5F686569 		.ascii	"_height\000"
 9556      67687400 
 9557              	.LASF127:
 9558 0996 6E65636B 		.ascii	"necks\000"
 9558      7300
 9559              	.LASF37:
 9560 099c 566F6C75 		.ascii	"VolumeMenu\000"
 9560      6D654D65 
 9560      6E7500
 9561              	.LASF97:
 9562 09a7 6D696469 		.ascii	"midiselected\000"
 9562      73656C65 
 9562      63746564 
 9562      00
 9563              	.LASF158:
 9564 09b4 70726573 		.ascii	"presetNumberToStore\000"
 9564      65744E75 
 9564      6D626572 
 9564      546F5374 
 9564      6F726500 
 9565              	.LASF130:
 9566 09c8 636F6E74 		.ascii	"controlNamesArray\000"
 9566      726F6C4E 
 9566      616D6573 
 9566      41727261 
 9566      7900
 9567              	.LASF171:
 9568 09da 6F637434 		.ascii	"oct4Up\000"
 9568      557000
 9569              	.LASF15:
 9570 09e1 75696E74 		.ascii	"uint8_t\000"
 9570      385F7400 
 9571              	.LASF163:
 9572 09e9 74686547 		.ascii	"theGFX\000"
 9572      465800
 9573              	.LASF146:
 9574 09f0 766F6C75 		.ascii	"volumeInt\000"
 9574      6D65496E 
 9574      7400
 9575              	.LASF86:
 9576 09fa 61627354 		.ascii	"absTransposeFloat\000"
 9576      72616E73 
 9576      706F7365 
 9576      466C6F61 
 9576      7400
 9577              	.LASF47:
 9578 0a0c 6269746D 		.ascii	"bitmap\000"
 9578      617000
 9579              	.LASF26:
 9580 0a13 53746F72 		.ascii	"StorePresetMenu\000"
 9580      65507265 
 9580      7365744D 
 9580      656E7500 
 9581              	.LASF4:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 211


 9582 0a23 5F5F696E 		.ascii	"__int16_t\000"
 9582      7431365F 
 9582      7400
 9583              	.LASF128:
 9584 0a2d 65646974 		.ascii	"editMode\000"
 9584      4D6F6465 
 9584      00
 9585              	.LASF132:
 9586 0a36 70726573 		.ascii	"presetNamesArray\000"
 9586      65744E61 
 9586      6D657341 
 9586      72726179 
 9586      00
 9587              	.LASF104:
 9588 0a47 656E7465 		.ascii	"enterLeverCalibrationMode\000"
 9588      724C6576 
 9588      65724361 
 9588      6C696272 
 9588      6174696F 
 9589              	.LASF179:
 9590 0a61 77686963 		.ascii	"whichMidiSendSelected\000"
 9590      684D6964 
 9590      6953656E 
 9590      6453656C 
 9590      65637465 
 9591              	.LASF165:
 9592 0a77 70726576 		.ascii	"prevEncoderVal\000"
 9592      456E636F 
 9592      64657256 
 9592      616C00
 9593              	.LASF62:
 9594 0a86 74657874 		.ascii	"textbgcolor\000"
 9594      6267636F 
 9594      6C6F7200 
 9595              	.LASF124:
 9596 0a92 766F6C75 		.ascii	"volumeWaitingToSend\000"
 9596      6D655761 
 9596      6974696E 
 9596      67546F53 
 9596      656E6400 
 9597              	.LASF40:
 9598 0aa6 6269746D 		.ascii	"bitmapOffset\000"
 9598      61704F66 
 9598      66736574 
 9598      00
 9599              	.LASF99:
 9600 0ab3 6C656674 		.ascii	"leftPressed\000"
 9600      50726573 
 9600      73656400 
 9601              	.LASF45:
 9602 0abf 794F6666 		.ascii	"yOffset\000"
 9602      73657400 
 9603              	.LASF152:
 9604 0ac7 6D696469 		.ascii	"midiSendOn\000"
 9604      53656E64 
 9604      4F6E00
 9605              	.LASF177:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccqzpJ3U.s 			page 212


 9606 0ad2 73686966 		.ascii	"shiftUp\000"
 9606      74557000 
 9607              	.LASF181:
 9608 0ada 636F6E74 		.ascii	"controlsDisplayed\000"
 9608      726F6C73 
 9608      44697370 
 9608      6C617965 
 9608      6400
 9609              	.LASF92:
 9610 0aec 7363616E 		.ascii	"scanUI\000"
 9610      554900
 9611              	.LASF120:
 9612 0af3 63757272 		.ascii	"currentNeck\000"
 9612      656E744E 
 9612      65636B00 
 9613              	.LASF53:
 9614 0aff 57494454 		.ascii	"WIDTH\000"
 9614      4800
 9615              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
