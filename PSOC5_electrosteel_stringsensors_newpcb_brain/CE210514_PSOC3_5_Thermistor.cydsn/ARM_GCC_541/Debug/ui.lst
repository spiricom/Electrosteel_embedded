ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ui.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.global	prevEncoderVal
  21              		.bss
  22              		.type	prevEncoderVal, %object
  23              		.size	prevEncoderVal, 1
  24              	prevEncoderVal:
  25 0000 00       		.space	1
  26              		.global	encoderWatch
  27              		.type	encoderWatch, %object
  28              		.size	encoderWatch, 1
  29              	encoderWatch:
  30 0001 00       		.space	1
  31              		.comm	menuPosition,6,4
  32              		.global	semitonesOrCents
  33              		.type	semitonesOrCents, %object
  34              		.size	semitonesOrCents, 1
  35              	semitonesOrCents:
  36 0002 00       		.space	1
  37              		.global	editUp
  38              		.data
  39              		.type	editUp, %object
  40              		.size	editUp, 1
  41              	editUp:
  42 0000 01       		.byte	1
  43              		.global	oct1Up
  44              		.type	oct1Up, %object
  45              		.size	oct1Up, 1
  46              	oct1Up:
  47 0001 01       		.byte	1
  48              		.global	oct4Up
  49              		.type	oct4Up, %object
  50              		.size	oct4Up, 1
  51              	oct4Up:
  52 0002 01       		.byte	1
  53              		.global	encoderUp
  54              		.type	encoderUp, %object
  55              		.size	encoderUp, 1
  56              	encoderUp:
  57 0003 01       		.byte	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 2


  58              		.global	button1Up
  59              		.type	button1Up, %object
  60              		.size	button1Up, 1
  61              	button1Up:
  62 0004 01       		.byte	1
  63              		.global	button2Up
  64              		.type	button2Up, %object
  65              		.size	button2Up, 1
  66              	button2Up:
  67 0005 01       		.byte	1
  68              		.global	button3Up
  69              		.type	button3Up, %object
  70              		.size	button3Up, 1
  71              	button3Up:
  72 0006 01       		.byte	1
  73              		.global	button4Up
  74              		.type	button4Up, %object
  75              		.size	button4Up, 1
  76              	button4Up:
  77 0007 01       		.byte	1
  78              		.global	shiftUp
  79              		.type	shiftUp, %object
  80              		.size	shiftUp, 1
  81              	shiftUp:
  82 0008 01       		.byte	1
  83              		.global	editingSliderRepString
  84              		.bss
  85              		.type	editingSliderRepString, %object
  86              		.size	editingSliderRepString, 1
  87              	editingSliderRepString:
  88 0003 00       		.space	1
  89              		.global	whichMidiSendSelected
  90              		.type	whichMidiSendSelected, %object
  91              		.size	whichMidiSendSelected, 1
  92              	whichMidiSendSelected:
  93 0004 00       		.space	1
  94              		.global	whichFirmwareUpdateSelected
  95              		.type	whichFirmwareUpdateSelected, %object
  96              		.size	whichFirmwareUpdateSelected, 1
  97              	whichFirmwareUpdateSelected:
  98 0005 00       		.space	1
  99              		.global	controlsDisplayed
 100              		.type	controlsDisplayed, %object
 101              		.size	controlsDisplayed, 1
 102              	controlsDisplayed:
 103 0006 00       		.space	1
 104              		.global	presetStoreStage
 105              		.type	presetStoreStage, %object
 106              		.size	presetStoreStage, 1
 107              	presetStoreStage:
 108 0007 00       		.space	1
 109              		.global	whichMacroPageIsActive
 110              		.type	whichMacroPageIsActive, %object
 111              		.size	whichMacroPageIsActive, 1
 112              	whichMacroPageIsActive:
 113 0008 00       		.space	1
 114              		.global	newPresetName
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 3


 115              		.data
 116 0009 000000   		.align	2
 117              		.type	newPresetName, %object
 118              		.size	newPresetName, 14
 119              	newPresetName:
 120 000c 41       		.byte	65
 121 000d 20       		.byte	32
 122 000e 20       		.byte	32
 123 000f 20       		.byte	32
 124 0010 20       		.byte	32
 125 0011 20       		.byte	32
 126 0012 20       		.byte	32
 127 0013 20       		.byte	32
 128 0014 20       		.byte	32
 129 0015 20       		.byte	32
 130 0016 20       		.byte	32
 131 0017 20       		.byte	32
 132 0018 20       		.byte	32
 133 0019 20       		.byte	32
 134              		.global	__aeabi_i2f
 135              		.global	__aeabi_fmul
 136              		.global	__aeabi_fsub
 137              		.global	__aeabi_fcmplt
 138              		.global	__aeabi_fcmpgt
 139              		.global	__aeabi_f2uiz
 140              		.global	__aeabi_i2d
 141              		.global	__aeabi_dcmplt
 142              		.global	__aeabi_dcmpgt
 143              		.global	__aeabi_ui2f
 144              		.section	.rodata
 145              		.align	2
 146              	.LC0:
 147 0000 53313D00 		.ascii	"S1=\000"
 148              		.section	.text.scanUI,"ax",%progbits
 149              		.align	2
 150              		.global	scanUI
 151              		.thumb
 152              		.thumb_func
 153              		.type	scanUI, %function
 154              	scanUI:
 155              	.LFB64:
 156              		.file 1 "ui.c"
   1:ui.c          **** /* ========================================
   2:ui.c          ****  *
   3:ui.c          ****  * Copyright YOUR COMPANY, THE YEAR
   4:ui.c          ****  * All Rights Reserved
   5:ui.c          ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:ui.c          ****  *
   7:ui.c          ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:ui.c          ****  * WHICH IS THE PROPERTY OF your company.
   9:ui.c          ****  *
  10:ui.c          ****  * ========================================
  11:ui.c          **** */
  12:ui.c          **** 
  13:ui.c          **** #include "main.h"
  14:ui.c          **** #include "ui.h"
  15:ui.c          **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 4


  16:ui.c          **** int8_t prevEncoderVal = 0;
  17:ui.c          **** uint8_t encoderWatch = 0;
  18:ui.c          **** //signed so that we can check if it goes below zero
  19:ui.c          **** int8_t menuPosition[3][2];
  20:ui.c          **** enum direction{Left, Right, Down, Up, Enter};
  21:ui.c          **** uint8_t semitonesOrCents = 0;
  22:ui.c          **** uint8_t editUp = 1;
  23:ui.c          **** uint8_t oct1Up = 1;
  24:ui.c          **** uint8_t oct4Up = 1;
  25:ui.c          **** uint8_t encoderUp = 1;
  26:ui.c          **** uint8_t button1Up = 1;
  27:ui.c          **** uint8_t button2Up = 1;
  28:ui.c          **** uint8_t button3Up = 1;
  29:ui.c          **** uint8_t button4Up = 1;
  30:ui.c          **** uint8_t shiftUp = 1;
  31:ui.c          **** uint8_t editingSliderRepString = 0;
  32:ui.c          **** uint8_t whichMidiSendSelected = 0;
  33:ui.c          **** uint8_t whichFirmwareUpdateSelected = 0;
  34:ui.c          **** uint8_t controlsDisplayed = 0;
  35:ui.c          **** 
  36:ui.c          **** uint8_t presetStoreStage = 0;
  37:ui.c          **** 
  38:ui.c          **** uint8_t whichMacroPageIsActive = 0;
  39:ui.c          **** 
  40:ui.c          **** char newPresetName[14] = {'A',32,32,32,32,32,32,32,32,32,32,32,32,32};
  41:ui.c          **** 
  42:ui.c          **** void scanUI(void)
  43:ui.c          **** {
 157              		.loc 1 43 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 48
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 B0B5     		push	{r4, r5, r7, lr}
 162              		.cfi_def_cfa_offset 16
 163              		.cfi_offset 4, -16
 164              		.cfi_offset 5, -12
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 8EB0     		sub	sp, sp, #56
 168              		.cfi_def_cfa_offset 72
 169 0004 02AF     		add	r7, sp, #8
 170              		.cfi_def_cfa 7, 64
  44:ui.c          ****     if (!knobPanelButton1_Read())
 171              		.loc 1 44 0
 172 0006 FFF7FEFF 		bl	knobPanelButton1_Read
 173 000a 0346     		mov	r3, r0
 174 000c 002B     		cmp	r3, #0
 175 000e 25D1     		bne	.L2
  45:ui.c          ****     {
  46:ui.c          ****         knobPanelLight1_Write(1);
 176              		.loc 1 46 0
 177 0010 0120     		movs	r0, #1
 178 0012 FFF7FEFF 		bl	knobPanelLight1_Write
  47:ui.c          ****         knobPanelLight2_Write(0);
 179              		.loc 1 47 0
 180 0016 0020     		movs	r0, #0
 181 0018 FFF7FEFF 		bl	knobPanelLight2_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 5


  48:ui.c          ****         whichMacroPageIsActive = 0;
 182              		.loc 1 48 0
 183 001c A14B     		ldr	r3, .L76
 184 001e 0022     		movs	r2, #0
 185 0020 1A70     		strb	r2, [r3]
  49:ui.c          ****         macroOLEDWaitingToSend = 1;
 186              		.loc 1 49 0
 187 0022 A14B     		ldr	r3, .L76+4
 188 0024 0122     		movs	r2, #1
 189 0026 1A70     		strb	r2, [r3]
 190              	.LBB2:
  50:ui.c          ****         for (int i = 0; i < NUM_MACROS; i++)
 191              		.loc 1 50 0
 192 0028 0023     		movs	r3, #0
 193 002a FB62     		str	r3, [r7, #44]
 194 002c 10E0     		b	.L3
 195              	.L4:
  51:ui.c          ****         {
  52:ui.c          ****             knobFrozen[i] = 1;
 196              		.loc 1 52 0 discriminator 3
 197 002e 9F4A     		ldr	r2, .L76+8
 198 0030 FB6A     		ldr	r3, [r7, #44]
 199 0032 1344     		add	r3, r3, r2
 200 0034 0122     		movs	r2, #1
 201 0036 1A70     		strb	r2, [r3]
  53:ui.c          ****             prevMacroKnobValues[i] = prevMacroKnobValues[i+8];
 202              		.loc 1 53 0 discriminator 3
 203 0038 FB6A     		ldr	r3, [r7, #44]
 204 003a 0833     		adds	r3, r3, #8
 205 003c 9C4A     		ldr	r2, .L76+12
 206 003e 32F91310 		ldrsh	r1, [r2, r3, lsl #1]
 207 0042 9B4A     		ldr	r2, .L76+12
 208 0044 FB6A     		ldr	r3, [r7, #44]
 209 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  50:ui.c          ****         for (int i = 0; i < NUM_MACROS; i++)
 210              		.loc 1 50 0 discriminator 3
 211 004a FB6A     		ldr	r3, [r7, #44]
 212 004c 0133     		adds	r3, r3, #1
 213 004e FB62     		str	r3, [r7, #44]
 214              	.L3:
  50:ui.c          ****         for (int i = 0; i < NUM_MACROS; i++)
 215              		.loc 1 50 0 is_stmt 0 discriminator 1
 216 0050 FB6A     		ldr	r3, [r7, #44]
 217 0052 072B     		cmp	r3, #7
 218 0054 EBDD     		ble	.L4
 219              	.LBE2:
  54:ui.c          ****         }
  55:ui.c          ****         whichMacro = 0;
 220              		.loc 1 55 0 is_stmt 1
 221 0056 974B     		ldr	r3, .L76+16
 222 0058 0022     		movs	r2, #0
 223 005a 1A70     		strb	r2, [r3]
 224              	.L2:
  56:ui.c          ****         
  57:ui.c          ****     }
  58:ui.c          ****     if (!knobPanelButton2_Read())
 225              		.loc 1 58 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 6


 226 005c FFF7FEFF 		bl	knobPanelButton2_Read
 227 0060 0346     		mov	r3, r0
 228 0062 002B     		cmp	r3, #0
 229 0064 25D1     		bne	.L5
  59:ui.c          ****     {
  60:ui.c          ****         knobPanelLight1_Write(0);
 230              		.loc 1 60 0
 231 0066 0020     		movs	r0, #0
 232 0068 FFF7FEFF 		bl	knobPanelLight1_Write
  61:ui.c          ****         knobPanelLight2_Write(1);
 233              		.loc 1 61 0
 234 006c 0120     		movs	r0, #1
 235 006e FFF7FEFF 		bl	knobPanelLight2_Write
  62:ui.c          ****         whichMacroPageIsActive = 8;
 236              		.loc 1 62 0
 237 0072 8C4B     		ldr	r3, .L76
 238 0074 0822     		movs	r2, #8
 239 0076 1A70     		strb	r2, [r3]
  63:ui.c          ****         macroOLEDWaitingToSend = 1;
 240              		.loc 1 63 0
 241 0078 8B4B     		ldr	r3, .L76+4
 242 007a 0122     		movs	r2, #1
 243 007c 1A70     		strb	r2, [r3]
 244              	.LBB3:
  64:ui.c          ****         for (int i = 0; i < NUM_MACROS; i++)
 245              		.loc 1 64 0
 246 007e 0023     		movs	r3, #0
 247 0080 BB62     		str	r3, [r7, #40]
 248 0082 10E0     		b	.L6
 249              	.L7:
  65:ui.c          ****         {
  66:ui.c          ****             knobFrozen[i] = 1;
 250              		.loc 1 66 0 discriminator 3
 251 0084 894A     		ldr	r2, .L76+8
 252 0086 BB6A     		ldr	r3, [r7, #40]
 253 0088 1344     		add	r3, r3, r2
 254 008a 0122     		movs	r2, #1
 255 008c 1A70     		strb	r2, [r3]
  67:ui.c          ****             prevMacroKnobValues[i+8] = prevMacroKnobValues[i];
 256              		.loc 1 67 0 discriminator 3
 257 008e BB6A     		ldr	r3, [r7, #40]
 258 0090 0833     		adds	r3, r3, #8
 259 0092 8749     		ldr	r1, .L76+12
 260 0094 BA6A     		ldr	r2, [r7, #40]
 261 0096 31F91210 		ldrsh	r1, [r1, r2, lsl #1]
 262 009a 854A     		ldr	r2, .L76+12
 263 009c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  64:ui.c          ****         for (int i = 0; i < NUM_MACROS; i++)
 264              		.loc 1 64 0 discriminator 3
 265 00a0 BB6A     		ldr	r3, [r7, #40]
 266 00a2 0133     		adds	r3, r3, #1
 267 00a4 BB62     		str	r3, [r7, #40]
 268              	.L6:
  64:ui.c          ****         for (int i = 0; i < NUM_MACROS; i++)
 269              		.loc 1 64 0 is_stmt 0 discriminator 1
 270 00a6 BB6A     		ldr	r3, [r7, #40]
 271 00a8 072B     		cmp	r3, #7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 7


 272 00aa EBDD     		ble	.L7
 273              	.LBE3:
  68:ui.c          ****         }
  69:ui.c          ****         whichMacro = 0;
 274              		.loc 1 69 0 is_stmt 1
 275 00ac 814B     		ldr	r3, .L76+16
 276 00ae 0022     		movs	r2, #0
 277 00b0 1A70     		strb	r2, [r3]
 278              	.L5:
  70:ui.c          ****     }
  71:ui.c          ****     
  72:ui.c          ****     
  73:ui.c          ****     
  74:ui.c          ****     uint8_t tempButtons = Status_Reg_1_Read();
 279              		.loc 1 74 0
 280 00b2 FFF7FEFF 		bl	Status_Reg_1_Read
 281 00b6 0346     		mov	r3, r0
 282 00b8 FB77     		strb	r3, [r7, #31]
  75:ui.c          ****     if (!(tempButtons&(1<<4)))
 283              		.loc 1 75 0
 284 00ba FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 285 00bc 03F01003 		and	r3, r3, #16
 286 00c0 002B     		cmp	r3, #0
 287 00c2 24D1     		bne	.L8
  76:ui.c          ****     {
  77:ui.c          ****         if (octave > 4)
 288              		.loc 1 77 0
 289 00c4 7C4B     		ldr	r3, .L76+20
 290 00c6 1B68     		ldr	r3, [r3]
 291 00c8 042B     		cmp	r3, #4
 292 00ca 03DD     		ble	.L9
  78:ui.c          ****         {
  79:ui.c          ****             octave = 4;
 293              		.loc 1 79 0
 294 00cc 7A4B     		ldr	r3, .L76+20
 295 00ce 0422     		movs	r2, #4
 296 00d0 1A60     		str	r2, [r3]
 297 00d2 0CE0     		b	.L10
 298              	.L9:
  80:ui.c          ****         }
  81:ui.c          ****         else if ((oct1Up) && (octave > 0))
 299              		.loc 1 81 0
 300 00d4 794B     		ldr	r3, .L76+24
 301 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 00d8 002B     		cmp	r3, #0
 303 00da 08D0     		beq	.L10
 304              		.loc 1 81 0 is_stmt 0 discriminator 1
 305 00dc 764B     		ldr	r3, .L76+20
 306 00de 1B68     		ldr	r3, [r3]
 307 00e0 002B     		cmp	r3, #0
 308 00e2 04DD     		ble	.L10
  82:ui.c          ****         {
  83:ui.c          ****             octave--;
 309              		.loc 1 83 0 is_stmt 1
 310 00e4 744B     		ldr	r3, .L76+20
 311 00e6 1B68     		ldr	r3, [r3]
 312 00e8 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 8


 313 00ea 734A     		ldr	r2, .L76+20
 314 00ec 1360     		str	r3, [r2]
 315              	.L10:
  84:ui.c          ****         }
  85:ui.c          ****         LED_amber1_Write(1);
 316              		.loc 1 85 0
 317 00ee 0120     		movs	r0, #1
 318 00f0 FFF7FEFF 		bl	LED_amber1_Write
  86:ui.c          ****         LED_amber2_Write(0);
 319              		.loc 1 86 0
 320 00f4 0020     		movs	r0, #0
 321 00f6 FFF7FEFF 		bl	LED_amber2_Write
  87:ui.c          ****         LED_amber3_Write(0);
 322              		.loc 1 87 0
 323 00fa 0020     		movs	r0, #0
 324 00fc FFF7FEFF 		bl	LED_amber3_Write
  88:ui.c          ****         LED_amber4_Write(0);
 325              		.loc 1 88 0
 326 0100 0020     		movs	r0, #0
 327 0102 FFF7FEFF 		bl	LED_amber4_Write
  89:ui.c          ****         oct1Up = 0;
 328              		.loc 1 89 0
 329 0106 6D4B     		ldr	r3, .L76+24
 330 0108 0022     		movs	r2, #0
 331 010a 1A70     		strb	r2, [r3]
 332 010c 07E0     		b	.L11
 333              	.L8:
  90:ui.c          ****     }
  91:ui.c          ****     
  92:ui.c          ****     else if ((tempButtons&(1<<4)))
 334              		.loc 1 92 0
 335 010e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 336 0110 03F01003 		and	r3, r3, #16
 337 0114 002B     		cmp	r3, #0
 338 0116 02D0     		beq	.L11
  93:ui.c          ****     {
  94:ui.c          ****         oct1Up = 1;
 339              		.loc 1 94 0
 340 0118 684B     		ldr	r3, .L76+24
 341 011a 0122     		movs	r2, #1
 342 011c 1A70     		strb	r2, [r3]
 343              	.L11:
  95:ui.c          ****     }
  96:ui.c          ****     
  97:ui.c          ****     if (!oct2_Read())
 344              		.loc 1 97 0
 345 011e FFF7FEFF 		bl	oct2_Read
 346 0122 0346     		mov	r3, r0
 347 0124 002B     		cmp	r3, #0
 348 0126 0ED1     		bne	.L12
  98:ui.c          ****     {
  99:ui.c          ****         octave = 5;
 349              		.loc 1 99 0
 350 0128 634B     		ldr	r3, .L76+20
 351 012a 0522     		movs	r2, #5
 352 012c 1A60     		str	r2, [r3]
 100:ui.c          ****         LED_amber1_Write(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 9


 353              		.loc 1 100 0
 354 012e 0020     		movs	r0, #0
 355 0130 FFF7FEFF 		bl	LED_amber1_Write
 101:ui.c          ****         LED_amber2_Write(1);
 356              		.loc 1 101 0
 357 0134 0120     		movs	r0, #1
 358 0136 FFF7FEFF 		bl	LED_amber2_Write
 102:ui.c          ****         LED_amber3_Write(0);
 359              		.loc 1 102 0
 360 013a 0020     		movs	r0, #0
 361 013c FFF7FEFF 		bl	LED_amber3_Write
 103:ui.c          ****         LED_amber4_Write(0);
 362              		.loc 1 103 0
 363 0140 0020     		movs	r0, #0
 364 0142 FFF7FEFF 		bl	LED_amber4_Write
 365              	.L12:
 104:ui.c          ****     }
 105:ui.c          ****     if (!oct3_Read())
 366              		.loc 1 105 0
 367 0146 FFF7FEFF 		bl	oct3_Read
 368 014a 0346     		mov	r3, r0
 369 014c 002B     		cmp	r3, #0
 370 014e 0ED1     		bne	.L13
 106:ui.c          ****     {
 107:ui.c          ****         octave = 6;
 371              		.loc 1 107 0
 372 0150 594B     		ldr	r3, .L76+20
 373 0152 0622     		movs	r2, #6
 374 0154 1A60     		str	r2, [r3]
 108:ui.c          ****         LED_amber1_Write(0);
 375              		.loc 1 108 0
 376 0156 0020     		movs	r0, #0
 377 0158 FFF7FEFF 		bl	LED_amber1_Write
 109:ui.c          ****         LED_amber2_Write(0);
 378              		.loc 1 109 0
 379 015c 0020     		movs	r0, #0
 380 015e FFF7FEFF 		bl	LED_amber2_Write
 110:ui.c          ****         LED_amber3_Write(1);
 381              		.loc 1 110 0
 382 0162 0120     		movs	r0, #1
 383 0164 FFF7FEFF 		bl	LED_amber3_Write
 111:ui.c          ****         LED_amber4_Write(0);            
 384              		.loc 1 111 0
 385 0168 0020     		movs	r0, #0
 386 016a FFF7FEFF 		bl	LED_amber4_Write
 387              	.L13:
 112:ui.c          ****     }
 113:ui.c          ****     if (!(tempButtons&(1<<5)))
 388              		.loc 1 113 0
 389 016e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 390 0170 03F02003 		and	r3, r3, #32
 391 0174 002B     		cmp	r3, #0
 392 0176 24D1     		bne	.L14
 114:ui.c          ****     {
 115:ui.c          ****         if (octave < 7)
 393              		.loc 1 115 0
 394 0178 4F4B     		ldr	r3, .L76+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 10


 395 017a 1B68     		ldr	r3, [r3]
 396 017c 062B     		cmp	r3, #6
 397 017e 03DC     		bgt	.L15
 116:ui.c          ****         {
 117:ui.c          ****             octave = 7;
 398              		.loc 1 117 0
 399 0180 4D4B     		ldr	r3, .L76+20
 400 0182 0722     		movs	r2, #7
 401 0184 1A60     		str	r2, [r3]
 402 0186 0CE0     		b	.L16
 403              	.L15:
 118:ui.c          **** 
 119:ui.c          ****         }
 120:ui.c          ****         else if ((oct4Up) && (octave < 11))
 404              		.loc 1 120 0
 405 0188 4D4B     		ldr	r3, .L76+28
 406 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 407 018c 002B     		cmp	r3, #0
 408 018e 08D0     		beq	.L16
 409              		.loc 1 120 0 is_stmt 0 discriminator 1
 410 0190 494B     		ldr	r3, .L76+20
 411 0192 1B68     		ldr	r3, [r3]
 412 0194 0A2B     		cmp	r3, #10
 413 0196 04DC     		bgt	.L16
 121:ui.c          ****         {
 122:ui.c          ****             octave++;
 414              		.loc 1 122 0 is_stmt 1
 415 0198 474B     		ldr	r3, .L76+20
 416 019a 1B68     		ldr	r3, [r3]
 417 019c 0133     		adds	r3, r3, #1
 418 019e 464A     		ldr	r2, .L76+20
 419 01a0 1360     		str	r3, [r2]
 420              	.L16:
 123:ui.c          **** 
 124:ui.c          ****         }
 125:ui.c          ****         LED_amber1_Write(0);
 421              		.loc 1 125 0
 422 01a2 0020     		movs	r0, #0
 423 01a4 FFF7FEFF 		bl	LED_amber1_Write
 126:ui.c          ****         LED_amber2_Write(0);
 424              		.loc 1 126 0
 425 01a8 0020     		movs	r0, #0
 426 01aa FFF7FEFF 		bl	LED_amber2_Write
 127:ui.c          ****         LED_amber3_Write(0);
 427              		.loc 1 127 0
 428 01ae 0020     		movs	r0, #0
 429 01b0 FFF7FEFF 		bl	LED_amber3_Write
 128:ui.c          ****         LED_amber4_Write(1);
 430              		.loc 1 128 0
 431 01b4 0120     		movs	r0, #1
 432 01b6 FFF7FEFF 		bl	LED_amber4_Write
 129:ui.c          ****         oct4Up = 0;
 433              		.loc 1 129 0
 434 01ba 414B     		ldr	r3, .L76+28
 435 01bc 0022     		movs	r2, #0
 436 01be 1A70     		strb	r2, [r3]
 437 01c0 07E0     		b	.L17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 11


 438              	.L14:
 130:ui.c          ****     }
 131:ui.c          ****     
 132:ui.c          ****     else if ((tempButtons&(1<<5)))
 439              		.loc 1 132 0
 440 01c2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 441 01c4 03F02003 		and	r3, r3, #32
 442 01c8 002B     		cmp	r3, #0
 443 01ca 02D0     		beq	.L17
 133:ui.c          ****     {
 134:ui.c          ****         oct4Up = 1;
 444              		.loc 1 134 0
 445 01cc 3C4B     		ldr	r3, .L76+28
 446 01ce 0122     		movs	r2, #1
 447 01d0 1A70     		strb	r2, [r3]
 448              	.L17:
 135:ui.c          ****     }
 136:ui.c          ****     
 137:ui.c          ****     if (!neck1_button_Read())
 449              		.loc 1 137 0
 450 01d2 FFF7FEFF 		bl	neck1_button_Read
 451 01d6 0346     		mov	r3, r0
 452 01d8 002B     		cmp	r3, #0
 453 01da 2FD1     		bne	.L18
 138:ui.c          ****     {
 139:ui.c          ****         currentNeck = 0;
 454              		.loc 1 139 0
 455 01dc 394B     		ldr	r3, .L76+32
 456 01de 0022     		movs	r2, #0
 457 01e0 1A70     		strb	r2, [r3]
 140:ui.c          ****         currentCopedent = necks[currentNeck];
 458              		.loc 1 140 0
 459 01e2 384B     		ldr	r3, .L76+32
 460 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 461 01e6 1A46     		mov	r2, r3
 462 01e8 374B     		ldr	r3, .L76+36
 463 01ea 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 464 01ec 374B     		ldr	r3, .L76+40
 465 01ee 1A70     		strb	r2, [r3]
 141:ui.c          ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 466              		.loc 1 141 0
 467 01f0 354B     		ldr	r3, .L76+36
 468 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 469 01f4 5B01     		lsls	r3, r3, #5
 470 01f6 DAB2     		uxtb	r2, r3
 471 01f8 334B     		ldr	r3, .L76+36
 472 01fa 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 473 01fc 9B00     		lsls	r3, r3, #2
 474 01fe DBB2     		uxtb	r3, r3
 475 0200 1344     		add	r3, r3, r2
 476 0202 DAB2     		uxtb	r2, r3
 477 0204 2F4B     		ldr	r3, .L76+32
 478 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 479 0208 1344     		add	r3, r3, r2
 480 020a DAB2     		uxtb	r2, r3
 481 020c 304B     		ldr	r3, .L76+44
 482 020e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 12


 142:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 483              		.loc 1 142 0
 484 0210 2F4B     		ldr	r3, .L76+44
 485 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 486 0214 40F2E271 		movw	r1, #2018
 487 0218 1846     		mov	r0, r3
 488 021a FFF7FEFF 		bl	EEPROM_WriteByte
 143:ui.c          ****         LED_red1_Write(0);
 489              		.loc 1 143 0
 490 021e 0020     		movs	r0, #0
 491 0220 FFF7FEFF 		bl	LED_red1_Write
 144:ui.c          ****         LED_green2_Write(1);
 492              		.loc 1 144 0
 493 0224 0120     		movs	r0, #1
 494 0226 FFF7FEFF 		bl	LED_green2_Write
 145:ui.c          ****         if (!editMode)
 495              		.loc 1 145 0
 496 022a 2A4B     		ldr	r3, .L76+48
 497 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 498 022e 002B     		cmp	r3, #0
 499 0230 02D1     		bne	.L19
 146:ui.c          ****         {
 147:ui.c          ****             displayCurrentPresetNameAndCopedent();
 500              		.loc 1 147 0
 501 0232 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 502 0236 01E0     		b	.L18
 503              	.L19:
 148:ui.c          ****         }
 149:ui.c          ****         else
 150:ui.c          ****         {
 151:ui.c          ****             exitEditModeMenu();   
 504              		.loc 1 151 0
 505 0238 FFF7FEFF 		bl	exitEditModeMenu
 506              	.L18:
 152:ui.c          ****         }
 153:ui.c          ****     }
 154:ui.c          ****     if (!neck2_button_Read())
 507              		.loc 1 154 0
 508 023c FFF7FEFF 		bl	neck2_button_Read
 509 0240 0346     		mov	r3, r0
 510 0242 002B     		cmp	r3, #0
 511 0244 4AD1     		bne	.L20
 155:ui.c          ****     {
 156:ui.c          ****         currentNeck = 1;
 512              		.loc 1 156 0
 513 0246 1F4B     		ldr	r3, .L76+32
 514 0248 0122     		movs	r2, #1
 515 024a 1A70     		strb	r2, [r3]
 157:ui.c          ****         currentCopedent = necks[currentNeck];    
 516              		.loc 1 157 0
 517 024c 1D4B     		ldr	r3, .L76+32
 518 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 519 0250 1A46     		mov	r2, r3
 520 0252 1D4B     		ldr	r3, .L76+36
 521 0254 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 522 0256 1D4B     		ldr	r3, .L76+40
 523 0258 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 13


 158:ui.c          ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 524              		.loc 1 158 0
 525 025a 1B4B     		ldr	r3, .L76+36
 526 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 025e 5B01     		lsls	r3, r3, #5
 528 0260 DAB2     		uxtb	r2, r3
 529 0262 194B     		ldr	r3, .L76+36
 530 0264 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 531 0266 9B00     		lsls	r3, r3, #2
 532 0268 DBB2     		uxtb	r3, r3
 533 026a 1344     		add	r3, r3, r2
 534 026c DAB2     		uxtb	r2, r3
 535 026e 154B     		ldr	r3, .L76+32
 536 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 537 0272 1344     		add	r3, r3, r2
 538 0274 DAB2     		uxtb	r2, r3
 539 0276 164B     		ldr	r3, .L76+44
 540 0278 1A70     		strb	r2, [r3]
 159:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 541              		.loc 1 159 0
 542 027a 154B     		ldr	r3, .L76+44
 543 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 544 027e 40F2E271 		movw	r1, #2018
 545 0282 1846     		mov	r0, r3
 546 0284 FFF7FEFF 		bl	EEPROM_WriteByte
 160:ui.c          ****         LED_red1_Write(1);
 547              		.loc 1 160 0
 548 0288 0120     		movs	r0, #1
 549 028a FFF7FEFF 		bl	LED_red1_Write
 161:ui.c          ****         LED_green2_Write(0);          
 550              		.loc 1 161 0
 551 028e 0020     		movs	r0, #0
 552 0290 FFF7FEFF 		bl	LED_green2_Write
 162:ui.c          ****         if (!editMode)
 553              		.loc 1 162 0
 554 0294 0F4B     		ldr	r3, .L76+48
 555 0296 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 0298 002B     		cmp	r3, #0
 557 029a 1DD1     		bne	.L21
 163:ui.c          ****         {
 164:ui.c          ****             displayCurrentPresetNameAndCopedent();
 558              		.loc 1 164 0
 559 029c FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 560 02a0 1CE0     		b	.L20
 561              	.L77:
 562 02a2 00BF     		.align	2
 563              	.L76:
 564 02a4 00000000 		.word	whichMacroPageIsActive
 565 02a8 00000000 		.word	macroOLEDWaitingToSend
 566 02ac 00000000 		.word	knobFrozen
 567 02b0 00000000 		.word	prevMacroKnobValues
 568 02b4 00000000 		.word	whichMacro
 569 02b8 00000000 		.word	octave
 570 02bc 00000000 		.word	oct1Up
 571 02c0 00000000 		.word	oct4Up
 572 02c4 00000000 		.word	currentNeck
 573 02c8 00000000 		.word	necks
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 14


 574 02cc 00000000 		.word	currentCopedent
 575 02d0 00000000 		.word	neckByte
 576 02d4 00000000 		.word	editMode
 577              	.L21:
 165:ui.c          ****         }
 166:ui.c          ****         else
 167:ui.c          ****         {
 168:ui.c          ****             exitEditModeMenu();   
 578              		.loc 1 168 0
 579 02d8 FFF7FEFF 		bl	exitEditModeMenu
 580              	.L20:
 169:ui.c          ****         }
 170:ui.c          ****     }
 171:ui.c          ****     
 172:ui.c          ****     if ((!(tempButtons&(1<<6))) && (shiftUp))
 581              		.loc 1 172 0
 582 02dc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 583 02de 03F04003 		and	r3, r3, #64
 584 02e2 002B     		cmp	r3, #0
 585 02e4 1DD1     		bne	.L22
 586              		.loc 1 172 0 is_stmt 0 discriminator 1
 587 02e6 984B     		ldr	r3, .L78
 588 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 589 02ea 002B     		cmp	r3, #0
 590 02ec 19D0     		beq	.L22
 173:ui.c          ****     {
 174:ui.c          ****         dualSlider = !dualSlider;
 591              		.loc 1 174 0 is_stmt 1
 592 02ee 974B     		ldr	r3, .L78+4
 593 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 594 02f2 002B     		cmp	r3, #0
 595 02f4 0CBF     		ite	eq
 596 02f6 0123     		moveq	r3, #1
 597 02f8 0023     		movne	r3, #0
 598 02fa DBB2     		uxtb	r3, r3
 599 02fc 1A46     		mov	r2, r3
 600 02fe 934B     		ldr	r3, .L78+4
 601 0300 1A70     		strb	r2, [r3]
 175:ui.c          ****         LED_green1_Write(dualSlider);
 602              		.loc 1 175 0
 603 0302 924B     		ldr	r3, .L78+4
 604 0304 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 605 0306 1846     		mov	r0, r3
 606 0308 FFF7FEFF 		bl	LED_green1_Write
 176:ui.c          ****         EEPROM_WriteByte(dualSlider, EEPROM_DUAL_SLIDER_OFFSET);
 607              		.loc 1 176 0
 608 030c 8F4B     		ldr	r3, .L78+4
 609 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 610 0310 40F2E171 		movw	r1, #2017
 611 0314 1846     		mov	r0, r3
 612 0316 FFF7FEFF 		bl	EEPROM_WriteByte
 177:ui.c          ****         shiftUp = 0;
 613              		.loc 1 177 0
 614 031a 8B4B     		ldr	r3, .L78
 615 031c 0022     		movs	r2, #0
 616 031e 1A70     		strb	r2, [r3]
 617 0320 07E0     		b	.L23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 15


 618              	.L22:
 178:ui.c          ****     }
 179:ui.c          ****     else if ((tempButtons&(1<<6)))
 619              		.loc 1 179 0
 620 0322 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 621 0324 03F04003 		and	r3, r3, #64
 622 0328 002B     		cmp	r3, #0
 623 032a 02D0     		beq	.L23
 180:ui.c          ****     {
 181:ui.c          ****         shiftUp = 1;
 624              		.loc 1 181 0
 625 032c 864B     		ldr	r3, .L78
 626 032e 0122     		movs	r2, #1
 627 0330 1A70     		strb	r2, [r3]
 628              	.L23:
 182:ui.c          ****     }
 183:ui.c          **** 
 184:ui.c          ****     if ((!(tempButtons&(1<<0))) && (button1Up))
 629              		.loc 1 184 0
 630 0332 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 631 0334 03F00103 		and	r3, r3, #1
 632 0338 002B     		cmp	r3, #0
 633 033a 09D1     		bne	.L24
 634              		.loc 1 184 0 is_stmt 0 discriminator 1
 635 033c 844B     		ldr	r3, .L78+8
 636 033e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 637 0340 002B     		cmp	r3, #0
 638 0342 05D0     		beq	.L24
 185:ui.c          ****     {
 186:ui.c          ****         leftPressed();
 639              		.loc 1 186 0 is_stmt 1
 640 0344 FFF7FEFF 		bl	leftPressed
 187:ui.c          ****         button1Up = 0;
 641              		.loc 1 187 0
 642 0348 814B     		ldr	r3, .L78+8
 643 034a 0022     		movs	r2, #0
 644 034c 1A70     		strb	r2, [r3]
 645 034e 07E0     		b	.L25
 646              	.L24:
 188:ui.c          ****     }
 189:ui.c          ****     else if ((tempButtons&(1<<0)))
 647              		.loc 1 189 0
 648 0350 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 649 0352 03F00103 		and	r3, r3, #1
 650 0356 002B     		cmp	r3, #0
 651 0358 02D0     		beq	.L25
 190:ui.c          ****     {
 191:ui.c          ****         button1Up = 1;
 652              		.loc 1 191 0
 653 035a 7D4B     		ldr	r3, .L78+8
 654 035c 0122     		movs	r2, #1
 655 035e 1A70     		strb	r2, [r3]
 656              	.L25:
 192:ui.c          ****     }
 193:ui.c          ****     
 194:ui.c          ****     if ((!(tempButtons&(1<<1))) && (button2Up))
 657              		.loc 1 194 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 16


 658 0360 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 659 0362 03F00203 		and	r3, r3, #2
 660 0366 002B     		cmp	r3, #0
 661 0368 09D1     		bne	.L26
 662              		.loc 1 194 0 is_stmt 0 discriminator 1
 663 036a 7A4B     		ldr	r3, .L78+12
 664 036c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 665 036e 002B     		cmp	r3, #0
 666 0370 05D0     		beq	.L26
 195:ui.c          ****     {
 196:ui.c          ****         rightPressed();
 667              		.loc 1 196 0 is_stmt 1
 668 0372 FFF7FEFF 		bl	rightPressed
 197:ui.c          ****         button2Up = 0;
 669              		.loc 1 197 0
 670 0376 774B     		ldr	r3, .L78+12
 671 0378 0022     		movs	r2, #0
 672 037a 1A70     		strb	r2, [r3]
 673 037c 07E0     		b	.L27
 674              	.L26:
 198:ui.c          ****     }
 199:ui.c          ****     else if ((tempButtons&(1<<1)))
 675              		.loc 1 199 0
 676 037e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 677 0380 03F00203 		and	r3, r3, #2
 678 0384 002B     		cmp	r3, #0
 679 0386 02D0     		beq	.L27
 200:ui.c          ****     {
 201:ui.c          ****         button2Up = 1;
 680              		.loc 1 201 0
 681 0388 724B     		ldr	r3, .L78+12
 682 038a 0122     		movs	r2, #1
 683 038c 1A70     		strb	r2, [r3]
 684              	.L27:
 202:ui.c          ****     }
 203:ui.c          ****     
 204:ui.c          ****     if ((!(tempButtons&(1<<2))) && (button3Up))
 685              		.loc 1 204 0
 686 038e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 687 0390 03F00403 		and	r3, r3, #4
 688 0394 002B     		cmp	r3, #0
 689 0396 09D1     		bne	.L28
 690              		.loc 1 204 0 is_stmt 0 discriminator 1
 691 0398 6F4B     		ldr	r3, .L78+16
 692 039a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 693 039c 002B     		cmp	r3, #0
 694 039e 05D0     		beq	.L28
 205:ui.c          ****     {
 206:ui.c          ****         downPressed();
 695              		.loc 1 206 0 is_stmt 1
 696 03a0 FFF7FEFF 		bl	downPressed
 207:ui.c          ****         button3Up = 0;
 697              		.loc 1 207 0
 698 03a4 6C4B     		ldr	r3, .L78+16
 699 03a6 0022     		movs	r2, #0
 700 03a8 1A70     		strb	r2, [r3]
 701 03aa 07E0     		b	.L29
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 17


 702              	.L28:
 208:ui.c          ****     }
 209:ui.c          ****     else if ((tempButtons&(1<<2)))
 703              		.loc 1 209 0
 704 03ac FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 705 03ae 03F00403 		and	r3, r3, #4
 706 03b2 002B     		cmp	r3, #0
 707 03b4 02D0     		beq	.L29
 210:ui.c          ****     {
 211:ui.c          ****         button3Up = 1;
 708              		.loc 1 211 0
 709 03b6 684B     		ldr	r3, .L78+16
 710 03b8 0122     		movs	r2, #1
 711 03ba 1A70     		strb	r2, [r3]
 712              	.L29:
 212:ui.c          ****     }
 213:ui.c          ****     
 214:ui.c          ****     if ((!(tempButtons&(1<<3))) && (button4Up))
 713              		.loc 1 214 0
 714 03bc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 715 03be 03F00803 		and	r3, r3, #8
 716 03c2 002B     		cmp	r3, #0
 717 03c4 09D1     		bne	.L30
 718              		.loc 1 214 0 is_stmt 0 discriminator 1
 719 03c6 654B     		ldr	r3, .L78+20
 720 03c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 721 03ca 002B     		cmp	r3, #0
 722 03cc 05D0     		beq	.L30
 215:ui.c          ****     {
 216:ui.c          ****         upPressed();
 723              		.loc 1 216 0 is_stmt 1
 724 03ce FFF7FEFF 		bl	upPressed
 217:ui.c          ****         button4Up = 0;
 725              		.loc 1 217 0
 726 03d2 624B     		ldr	r3, .L78+20
 727 03d4 0022     		movs	r2, #0
 728 03d6 1A70     		strb	r2, [r3]
 729 03d8 07E0     		b	.L31
 730              	.L30:
 218:ui.c          ****     }
 219:ui.c          ****     else if ((tempButtons&(1<<3)))
 731              		.loc 1 219 0
 732 03da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 733 03dc 03F00803 		and	r3, r3, #8
 734 03e0 002B     		cmp	r3, #0
 735 03e2 02D0     		beq	.L31
 220:ui.c          ****     {
 221:ui.c          ****         button4Up = 1;
 736              		.loc 1 221 0
 737 03e4 5D4B     		ldr	r3, .L78+20
 738 03e6 0122     		movs	r2, #1
 739 03e8 1A70     		strb	r2, [r3]
 740              	.L31:
 222:ui.c          ****     }
 223:ui.c          ****     
 224:ui.c          ****     if ((!edit_button_Read()) && (editUp))
 741              		.loc 1 224 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 18


 742 03ea FFF7FEFF 		bl	edit_button_Read
 743 03ee 0346     		mov	r3, r0
 744 03f0 002B     		cmp	r3, #0
 745 03f2 1AD1     		bne	.L32
 746              		.loc 1 224 0 is_stmt 0 discriminator 1
 747 03f4 5A4B     		ldr	r3, .L78+24
 748 03f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 749 03f8 002B     		cmp	r3, #0
 750 03fa 16D0     		beq	.L32
 225:ui.c          ****     {
 226:ui.c          ****         editMode = !editMode;
 751              		.loc 1 226 0 is_stmt 1
 752 03fc 594B     		ldr	r3, .L78+28
 753 03fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 754 0400 002B     		cmp	r3, #0
 755 0402 0CBF     		ite	eq
 756 0404 0123     		moveq	r3, #1
 757 0406 0023     		movne	r3, #0
 758 0408 DBB2     		uxtb	r3, r3
 759 040a 1A46     		mov	r2, r3
 760 040c 554B     		ldr	r3, .L78+28
 761 040e 1A70     		strb	r2, [r3]
 227:ui.c          ****         if (editMode)
 762              		.loc 1 227 0
 763 0410 544B     		ldr	r3, .L78+28
 764 0412 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 765 0414 002B     		cmp	r3, #0
 766 0416 02D0     		beq	.L33
 228:ui.c          ****         {
 229:ui.c          ****             enterEditModeMenu();
 767              		.loc 1 229 0
 768 0418 FFF7FEFF 		bl	enterEditModeMenu
 769 041c 01E0     		b	.L34
 770              	.L33:
 230:ui.c          ****         }
 231:ui.c          ****         else
 232:ui.c          ****         {
 233:ui.c          ****             exitEditModeMenu();
 771              		.loc 1 233 0
 772 041e FFF7FEFF 		bl	exitEditModeMenu
 773              	.L34:
 234:ui.c          ****         }
 235:ui.c          ****         editUp = 0;
 774              		.loc 1 235 0
 775 0422 4F4B     		ldr	r3, .L78+24
 776 0424 0022     		movs	r2, #0
 777 0426 1A70     		strb	r2, [r3]
 778 0428 07E0     		b	.L35
 779              	.L32:
 236:ui.c          ****     }
 237:ui.c          ****     else if (edit_button_Read())
 780              		.loc 1 237 0
 781 042a FFF7FEFF 		bl	edit_button_Read
 782 042e 0346     		mov	r3, r0
 783 0430 002B     		cmp	r3, #0
 784 0432 02D0     		beq	.L35
 238:ui.c          ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 19


 239:ui.c          ****         editUp = 1;
 785              		.loc 1 239 0
 786 0434 4A4B     		ldr	r3, .L78+24
 787 0436 0122     		movs	r2, #1
 788 0438 1A70     		strb	r2, [r3]
 789              	.L35:
 240:ui.c          ****     }
 241:ui.c          ****     
 242:ui.c          ****     if ((!(tempButtons&(1<<7))) && (encoderUp))
 790              		.loc 1 242 0
 791 043a 97F91F30 		ldrsb	r3, [r7, #31]
 792 043e 002B     		cmp	r3, #0
 793 0440 09DB     		blt	.L36
 794              		.loc 1 242 0 is_stmt 0 discriminator 1
 795 0442 494B     		ldr	r3, .L78+32
 796 0444 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 797 0446 002B     		cmp	r3, #0
 798 0448 05D0     		beq	.L36
 243:ui.c          ****     {
 244:ui.c          ****         enterPressed();
 799              		.loc 1 244 0 is_stmt 1
 800 044a FFF7FEFF 		bl	enterPressed
 245:ui.c          ****         encoderUp = 0;
 801              		.loc 1 245 0
 802 044e 464B     		ldr	r3, .L78+32
 803 0450 0022     		movs	r2, #0
 804 0452 1A70     		strb	r2, [r3]
 805 0454 06E0     		b	.L37
 806              	.L36:
 246:ui.c          ****     }
 247:ui.c          ****     else if ((tempButtons&(1<<7)))
 807              		.loc 1 247 0
 808 0456 97F91F30 		ldrsb	r3, [r7, #31]
 809 045a 002B     		cmp	r3, #0
 810 045c 02DA     		bge	.L37
 248:ui.c          ****     {
 249:ui.c          ****         encoderUp = 1;
 811              		.loc 1 249 0
 812 045e 424B     		ldr	r3, .L78+32
 813 0460 0122     		movs	r2, #1
 814 0462 1A70     		strb	r2, [r3]
 815              	.L37:
 250:ui.c          ****     }
 251:ui.c          ****     
 252:ui.c          ****     prevOctave = octave;
 816              		.loc 1 252 0
 817 0464 414B     		ldr	r3, .L78+36
 818 0466 1B68     		ldr	r3, [r3]
 819 0468 414A     		ldr	r2, .L78+40
 820 046a 1360     		str	r3, [r2]
 253:ui.c          ****     if (editMode)
 821              		.loc 1 253 0
 822 046c 3D4B     		ldr	r3, .L78+28
 823 046e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 824 0470 002B     		cmp	r3, #0
 825 0472 00F04484 		beq	.L75
 254:ui.c          ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 20


 255:ui.c          ****         if (encoderWatch)
 826              		.loc 1 255 0
 827 0476 3F4B     		ldr	r3, .L78+44
 828 0478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 829 047a 002B     		cmp	r3, #0
 830 047c 00F03F84 		beq	.L75
 831              	.LBB4:
 256:ui.c          ****         {
 257:ui.c          ****             int8_t currentEncoderVal = Decoder_1_GetPosition();
 832              		.loc 1 257 0
 833 0480 FFF7FEFF 		bl	Decoder_1_GetPosition
 834 0484 0346     		mov	r3, r0
 835 0486 BB77     		strb	r3, [r7, #30]
 258:ui.c          ****             
 259:ui.c          ****             if (menuPosition[0][0] == StorePresetMenu) //SelectingPresetToStore
 836              		.loc 1 259 0
 837 0488 3B4B     		ldr	r3, .L78+48
 838 048a 93F90030 		ldrsb	r3, [r3]
 839 048e 012B     		cmp	r3, #1
 840 0490 40F0A880 		bne	.L39
 260:ui.c          ****             {
 261:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 841              		.loc 1 261 0
 842 0494 394B     		ldr	r3, .L78+52
 843 0496 93F90030 		ldrsb	r3, [r3]
 844 049a 97F91E20 		ldrsb	r2, [r7, #30]
 845 049e 9A42     		cmp	r2, r3
 846 04a0 00F0A080 		beq	.L39
 262:ui.c          ****                 {
 263:ui.c          ****                     
 264:ui.c          ****                     if (presetStoreStage == 0)
 847              		.loc 1 264 0
 848 04a4 364B     		ldr	r3, .L78+56
 849 04a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 850 04a8 002B     		cmp	r3, #0
 851 04aa 73D1     		bne	.L40
 852              	.LBB5:
 265:ui.c          ****                     {
 266:ui.c          ****                         OLEDtextColor(1, 0);
 853              		.loc 1 266 0
 854 04ac 0021     		movs	r1, #0
 855 04ae 0120     		movs	r0, #1
 856 04b0 FFF7FEFF 		bl	OLEDtextColor
 267:ui.c          ****                         GFXfillRect(&theGFX, 84, 32 ,46 ,32, theGFX.textbgcolor);
 857              		.loc 1 267 0
 858 04b4 334B     		ldr	r3, .L78+60
 859 04b6 5B8A     		ldrh	r3, [r3, #18]
 860 04b8 0193     		str	r3, [sp, #4]
 861 04ba 2023     		movs	r3, #32
 862 04bc 0093     		str	r3, [sp]
 863 04be 2E23     		movs	r3, #46
 864 04c0 2022     		movs	r2, #32
 865 04c2 5421     		movs	r1, #84
 866 04c4 2F48     		ldr	r0, .L78+60
 867 04c6 FFF7FEFF 		bl	GFXfillRect
 268:ui.c          ****                        
 269:ui.c          **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 21


 270:ui.c          ****                         myGFX_setFont(1);
 868              		.loc 1 270 0
 869 04ca 0120     		movs	r0, #1
 870 04cc FFF7FEFF 		bl	myGFX_setFont
 271:ui.c          ****                         presetNumberToStore = presetNumberToStore - (Decoder_1_GetPosition());
 871              		.loc 1 271 0
 872 04d0 2D4B     		ldr	r3, .L78+64
 873 04d2 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 874 04d4 FFF7FEFF 		bl	Decoder_1_GetPosition
 875 04d8 0346     		mov	r3, r0
 876 04da DBB2     		uxtb	r3, r3
 877 04dc E31A     		subs	r3, r4, r3
 878 04de DAB2     		uxtb	r2, r3
 879 04e0 294B     		ldr	r3, .L78+64
 880 04e2 1A70     		strb	r2, [r3]
 272:ui.c          ****                         Decoder_1_SetPosition(0);
 881              		.loc 1 272 0
 882 04e4 0020     		movs	r0, #0
 883 04e6 FFF7FEFF 		bl	Decoder_1_SetPosition
 273:ui.c          ****                         
 274:ui.c          ****                         
 275:ui.c          ****                         GFXsetCursor(&theGFX, 84,58);
 884              		.loc 1 275 0
 885 04ea 3A22     		movs	r2, #58
 886 04ec 5421     		movs	r1, #84
 887 04ee 2548     		ldr	r0, .L78+60
 888 04f0 FFF7FEFF 		bl	GFXsetCursor
 276:ui.c          ****                         
 277:ui.c          ****                         int8_t presetNumberToStoreTemp = presetNumberToStore;
 889              		.loc 1 277 0
 890 04f4 244B     		ldr	r3, .L78+64
 891 04f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 892 04f8 7B77     		strb	r3, [r7, #29]
 278:ui.c          **** 
 279:ui.c          ****                         uint8_t currentChar = ((uint8_t)presetNumberToStoreTemp / 10);    
 893              		.loc 1 279 0
 894 04fa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 895 04fc 234A     		ldr	r2, .L78+68
 896 04fe A2FB0323 		umull	r2, r3, r2, r3
 897 0502 DB08     		lsrs	r3, r3, #3
 898 0504 3B77     		strb	r3, [r7, #28]
 280:ui.c          ****                         GFXwrite(&theGFX, currentChar + 48);
 899              		.loc 1 280 0
 900 0506 3B7F     		ldrb	r3, [r7, #28]
 901 0508 3033     		adds	r3, r3, #48
 902 050a DBB2     		uxtb	r3, r3
 903 050c 1946     		mov	r1, r3
 904 050e 1D48     		ldr	r0, .L78+60
 905 0510 FFF7FEFF 		bl	GFXwrite
 281:ui.c          ****                         presetNumberToStoreTemp -= currentChar * 10;
 906              		.loc 1 281 0
 907 0514 3B7F     		ldrb	r3, [r7, #28]
 908 0516 1A46     		mov	r2, r3
 909 0518 5201     		lsls	r2, r2, #5
 910 051a D21A     		subs	r2, r2, r3
 911 051c 9200     		lsls	r2, r2, #2
 912 051e D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 22


 913 0520 5B00     		lsls	r3, r3, #1
 914 0522 DAB2     		uxtb	r2, r3
 915 0524 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 916 0526 1344     		add	r3, r3, r2
 917 0528 DBB2     		uxtb	r3, r3
 918 052a 7B77     		strb	r3, [r7, #29]
 282:ui.c          ****                         currentChar = ((uint8_t)presetNumberToStoreTemp);    
 919              		.loc 1 282 0
 920 052c 7B7F     		ldrb	r3, [r7, #29]
 921 052e 3B77     		strb	r3, [r7, #28]
 283:ui.c          ****                         GFXwrite(&theGFX, currentChar + 48);
 922              		.loc 1 283 0
 923 0530 3B7F     		ldrb	r3, [r7, #28]
 924 0532 3033     		adds	r3, r3, #48
 925 0534 DBB2     		uxtb	r3, r3
 926 0536 1946     		mov	r1, r3
 927 0538 1248     		ldr	r0, .L78+60
 928 053a FFF7FEFF 		bl	GFXwrite
 284:ui.c          ****                         mainOLEDWaitingToSend = 1;
 929              		.loc 1 284 0
 930 053e 144B     		ldr	r3, .L78+72
 931 0540 0122     		movs	r2, #1
 932 0542 1A70     		strb	r2, [r3]
 933              	.LBE5:
 934 0544 4EE0     		b	.L39
 935              	.L79:
 936 0546 00BF     		.align	2
 937              	.L78:
 938 0548 00000000 		.word	shiftUp
 939 054c 00000000 		.word	dualSlider
 940 0550 00000000 		.word	button1Up
 941 0554 00000000 		.word	button2Up
 942 0558 00000000 		.word	button3Up
 943 055c 00000000 		.word	button4Up
 944 0560 00000000 		.word	editUp
 945 0564 00000000 		.word	editMode
 946 0568 00000000 		.word	encoderUp
 947 056c 00000000 		.word	octave
 948 0570 00000000 		.word	prevOctave
 949 0574 00000000 		.word	encoderWatch
 950 0578 00000000 		.word	menuPosition
 951 057c 00000000 		.word	prevEncoderVal
 952 0580 00000000 		.word	presetStoreStage
 953 0584 00000000 		.word	theGFX
 954 0588 00000000 		.word	presetNumberToStore
 955 058c CDCCCCCC 		.word	-858993459
 956 0590 00000000 		.word	mainOLEDWaitingToSend
 957              	.L40:
 958              	.LBB6:
 285:ui.c          ****                     }
 286:ui.c          ****                     else
 287:ui.c          ****                     {
 288:ui.c          ****                        uint8_t currentChar = presetStoreStage - 1;
 959              		.loc 1 288 0
 960 0594 4C4B     		ldr	r3, .L80
 961 0596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0598 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 23


 963 059a FB76     		strb	r3, [r7, #27]
 289:ui.c          ****                         newPresetName[currentChar] = newPresetName[currentChar] - (Decoder_1_GetPos
 964              		.loc 1 289 0
 965 059c FC7E     		ldrb	r4, [r7, #27]	@ zero_extendqisi2
 966 059e FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 967 05a0 4A4A     		ldr	r2, .L80+4
 968 05a2 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 969 05a4 FFF7FEFF 		bl	Decoder_1_GetPosition
 970 05a8 0346     		mov	r3, r0
 971 05aa DBB2     		uxtb	r3, r3
 972 05ac EB1A     		subs	r3, r5, r3
 973 05ae DAB2     		uxtb	r2, r3
 974 05b0 464B     		ldr	r3, .L80+4
 975 05b2 1A55     		strb	r2, [r3, r4]
 290:ui.c          ****                         Decoder_1_SetPosition(0);
 976              		.loc 1 290 0
 977 05b4 0020     		movs	r0, #0
 978 05b6 FFF7FEFF 		bl	Decoder_1_SetPosition
 291:ui.c          ****                         OLEDtextColor(1, 0);
 979              		.loc 1 291 0
 980 05ba 0021     		movs	r1, #0
 981 05bc 0120     		movs	r0, #1
 982 05be FFF7FEFF 		bl	OLEDtextColor
 292:ui.c          ****                         myGFX_setFont(0);
 983              		.loc 1 292 0
 984 05c2 0020     		movs	r0, #0
 985 05c4 FFF7FEFF 		bl	myGFX_setFont
 293:ui.c          ****                         GFXsetCursor(&theGFX, 0,50);
 986              		.loc 1 293 0
 987 05c8 3222     		movs	r2, #50
 988 05ca 0021     		movs	r1, #0
 989 05cc 4048     		ldr	r0, .L80+8
 990 05ce FFF7FEFF 		bl	GFXsetCursor
 294:ui.c          ****                         OLEDwriteString(newPresetName, 14, 0, ThirdLine);
 991              		.loc 1 294 0
 992 05d2 0223     		movs	r3, #2
 993 05d4 0022     		movs	r2, #0
 994 05d6 0E21     		movs	r1, #14
 995 05d8 3C48     		ldr	r0, .L80+4
 996 05da FFF7FEFF 		bl	OLEDwriteString
 295:ui.c          ****                         mainOLEDWaitingToSend = 1;
 997              		.loc 1 295 0
 998 05de 3D4B     		ldr	r3, .L80+12
 999 05e0 0122     		movs	r2, #1
 1000 05e2 1A70     		strb	r2, [r3]
 1001              	.L39:
 1002              	.LBE6:
 296:ui.c          ****                     }
 297:ui.c          ****                 }
 298:ui.c          ****             }
 299:ui.c          ****             
 300:ui.c          ****             
 301:ui.c          ****             if (menuPosition[0][0] == TransposeMenu) //editing transpose
 1003              		.loc 1 301 0
 1004 05e4 3C4B     		ldr	r3, .L80+16
 1005 05e6 93F90030 		ldrsb	r3, [r3]
 1006 05ea 062B     		cmp	r3, #6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 24


 1007 05ec 40F02581 		bne	.L41
 302:ui.c          ****             {
 303:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1008              		.loc 1 303 0
 1009 05f0 3A4B     		ldr	r3, .L80+20
 1010 05f2 93F90030 		ldrsb	r3, [r3]
 1011 05f6 97F91E20 		ldrsb	r2, [r7, #30]
 1012 05fa 9A42     		cmp	r2, r3
 1013 05fc 00F01D81 		beq	.L41
 1014              	.LBB7:
 304:ui.c          ****                 {
 305:ui.c          ****                     OLEDtextColor(1, 0);
 1015              		.loc 1 305 0
 1016 0600 0021     		movs	r1, #0
 1017 0602 0120     		movs	r0, #1
 1018 0604 FFF7FEFF 		bl	OLEDtextColor
 306:ui.c          ****                     OLEDclearLine(ThirdLine);
 1019              		.loc 1 306 0
 1020 0608 0220     		movs	r0, #2
 1021 060a FFF7FEFF 		bl	OLEDclearLine
 307:ui.c          ****                     OLEDclearLine(FourthLine);
 1022              		.loc 1 307 0
 1023 060e 0320     		movs	r0, #3
 1024 0610 FFF7FEFF 		bl	OLEDclearLine
 308:ui.c          ****                     float theMultiplier = 1.0f;
 1025              		.loc 1 308 0
 1026 0614 4FF07E53 		mov	r3, #1065353216
 1027 0618 7B62     		str	r3, [r7, #36]	@ float
 309:ui.c          ****                     if (semitonesOrCents == 1)
 1028              		.loc 1 309 0
 1029 061a 314B     		ldr	r3, .L80+24
 1030 061c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1031 061e 012B     		cmp	r3, #1
 1032 0620 01D1     		bne	.L42
 310:ui.c          ****                     {
 311:ui.c          ****                         theMultiplier = 0.01f;
 1033              		.loc 1 311 0
 1034 0622 304B     		ldr	r3, .L80+28
 1035 0624 7B62     		str	r3, [r7, #36]	@ float
 1036              	.L42:
 312:ui.c          ****                     }
 313:ui.c          ****                     myGFX_setFont(1);
 1037              		.loc 1 313 0
 1038 0626 0120     		movs	r0, #1
 1039 0628 FFF7FEFF 		bl	myGFX_setFont
 314:ui.c          ****                     transposeFloat = transposeFloat - (((float)Decoder_1_GetPosition()) * theMultip
 1040              		.loc 1 314 0
 1041 062c 2E4B     		ldr	r3, .L80+32
 1042 062e 1C68     		ldr	r4, [r3]	@ float
 1043 0630 FFF7FEFF 		bl	Decoder_1_GetPosition
 1044 0634 0346     		mov	r3, r0
 1045 0636 1846     		mov	r0, r3
 1046 0638 FFF7FEFF 		bl	__aeabi_i2f
 1047 063c 0346     		mov	r3, r0
 1048 063e 796A     		ldr	r1, [r7, #36]	@ float
 1049 0640 1846     		mov	r0, r3
 1050 0642 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 25


 1051 0646 0346     		mov	r3, r0
 1052 0648 1946     		mov	r1, r3
 1053 064a 2046     		mov	r0, r4
 1054 064c FFF7FEFF 		bl	__aeabi_fsub
 1055 0650 0346     		mov	r3, r0
 1056 0652 1A46     		mov	r2, r3
 1057 0654 244B     		ldr	r3, .L80+32
 1058 0656 1A60     		str	r2, [r3]	@ float
 315:ui.c          ****                     Decoder_1_SetPosition(0);
 1059              		.loc 1 315 0
 1060 0658 0020     		movs	r0, #0
 1061 065a FFF7FEFF 		bl	Decoder_1_SetPosition
 316:ui.c          ****                     if (transposeFloat < -12.0)
 1062              		.loc 1 316 0
 1063 065e 224B     		ldr	r3, .L80+32
 1064 0660 1B68     		ldr	r3, [r3]	@ float
 1065 0662 2249     		ldr	r1, .L80+36
 1066 0664 1846     		mov	r0, r3
 1067 0666 FFF7FEFF 		bl	__aeabi_fcmplt
 1068 066a 0346     		mov	r3, r0
 1069 066c 002B     		cmp	r3, #0
 1070 066e 03D0     		beq	.L72
 317:ui.c          ****                     {
 318:ui.c          ****                         transposeFloat = -12.0;
 1071              		.loc 1 318 0
 1072 0670 1D4B     		ldr	r3, .L80+32
 1073 0672 1E4A     		ldr	r2, .L80+36
 1074 0674 1A60     		str	r2, [r3]	@ float
 1075 0676 0BE0     		b	.L45
 1076              	.L72:
 319:ui.c          ****                     }
 320:ui.c          ****                     else if (transposeFloat > 12.0)
 1077              		.loc 1 320 0
 1078 0678 1B4B     		ldr	r3, .L80+32
 1079 067a 1B68     		ldr	r3, [r3]	@ float
 1080 067c 1C49     		ldr	r1, .L80+40
 1081 067e 1846     		mov	r0, r3
 1082 0680 FFF7FEFF 		bl	__aeabi_fcmpgt
 1083 0684 0346     		mov	r3, r0
 1084 0686 002B     		cmp	r3, #0
 1085 0688 02D0     		beq	.L45
 321:ui.c          ****                     {
 322:ui.c          ****                         transposeFloat = 12.0;
 1086              		.loc 1 322 0
 1087 068a 174B     		ldr	r3, .L80+32
 1088 068c 184A     		ldr	r2, .L80+40
 1089 068e 1A60     		str	r2, [r3]	@ float
 1090              	.L45:
 323:ui.c          ****                     }
 324:ui.c          ****                     float absTransposeFloat = transposeFloat;
 1091              		.loc 1 324 0
 1092 0690 154B     		ldr	r3, .L80+32
 1093 0692 1B68     		ldr	r3, [r3]	@ float
 1094 0694 3B62     		str	r3, [r7, #32]	@ float
 325:ui.c          ****                     GFXsetCursor(&theGFX, 20,53);
 1095              		.loc 1 325 0
 1096 0696 3522     		movs	r2, #53
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 26


 1097 0698 1421     		movs	r1, #20
 1098 069a 0D48     		ldr	r0, .L80+8
 1099 069c FFF7FEFF 		bl	GFXsetCursor
 326:ui.c          ****                     if (transposeFloat < 0.0f)
 1100              		.loc 1 326 0
 1101 06a0 114B     		ldr	r3, .L80+32
 1102 06a2 1B68     		ldr	r3, [r3]	@ float
 1103 06a4 4FF00001 		mov	r1, #0
 1104 06a8 1846     		mov	r0, r3
 1105 06aa FFF7FEFF 		bl	__aeabi_fcmplt
 1106 06ae 0346     		mov	r3, r0
 1107 06b0 002B     		cmp	r3, #0
 1108 06b2 1FD0     		beq	.L73
 327:ui.c          ****                     {
 328:ui.c          ****                         GFXwrite(&theGFX, 45);
 1109              		.loc 1 328 0
 1110 06b4 2D21     		movs	r1, #45
 1111 06b6 0648     		ldr	r0, .L80+8
 1112 06b8 FFF7FEFF 		bl	GFXwrite
 329:ui.c          ****                         absTransposeFloat = -absTransposeFloat;
 1113              		.loc 1 329 0
 1114 06bc 3B6A     		ldr	r3, [r7, #32]
 1115 06be 83F00043 		eor	r3, r3, #-2147483648
 1116 06c2 3B62     		str	r3, [r7, #32]	@ float
 1117 06c4 1AE0     		b	.L49
 1118              	.L81:
 1119 06c6 00BF     		.align	2
 1120              	.L80:
 1121 06c8 00000000 		.word	presetStoreStage
 1122 06cc 00000000 		.word	newPresetName
 1123 06d0 00000000 		.word	theGFX
 1124 06d4 00000000 		.word	mainOLEDWaitingToSend
 1125 06d8 00000000 		.word	menuPosition
 1126 06dc 00000000 		.word	prevEncoderVal
 1127 06e0 00000000 		.word	semitonesOrCents
 1128 06e4 0AD7233C 		.word	1008981770
 1129 06e8 00000000 		.word	transposeFloat
 1130 06ec 000040C1 		.word	-1052770304
 1131 06f0 00004041 		.word	1094713344
 1132              	.L73:
 330:ui.c          ****                     }
 331:ui.c          ****                     else
 332:ui.c          ****                     {
 333:ui.c          ****                         GFXwrite(&theGFX, 32);
 1133              		.loc 1 333 0
 1134 06f4 2021     		movs	r1, #32
 1135 06f6 C148     		ldr	r0, .L82
 1136 06f8 FFF7FEFF 		bl	GFXwrite
 1137              	.L49:
 334:ui.c          ****                     }
 335:ui.c          ****                     if (!semitonesOrCents)
 1138              		.loc 1 335 0
 1139 06fc C04B     		ldr	r3, .L82+4
 1140 06fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1141 0700 002B     		cmp	r3, #0
 1142 0702 0ED1     		bne	.L50
 336:ui.c          ****                     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 27


 337:ui.c          ****                         OLEDtextColor(0, 1);
 1143              		.loc 1 337 0
 1144 0704 0121     		movs	r1, #1
 1145 0706 0020     		movs	r0, #0
 1146 0708 FFF7FEFF 		bl	OLEDtextColor
 338:ui.c          ****                         GFXfillRect(&theGFX, 32, 34, 30, 25, theGFX.textbgcolor);
 1147              		.loc 1 338 0
 1148 070c BB4B     		ldr	r3, .L82
 1149 070e 5B8A     		ldrh	r3, [r3, #18]
 1150 0710 0193     		str	r3, [sp, #4]
 1151 0712 1923     		movs	r3, #25
 1152 0714 0093     		str	r3, [sp]
 1153 0716 1E23     		movs	r3, #30
 1154 0718 2222     		movs	r2, #34
 1155 071a 2021     		movs	r1, #32
 1156 071c B748     		ldr	r0, .L82
 1157 071e FFF7FEFF 		bl	GFXfillRect
 1158              	.L50:
 339:ui.c          ****                     }
 340:ui.c          **** 
 341:ui.c          ****                     uint8_t currentChar = ((uint8_t)(absTransposeFloat * 0.1f));  
 1159              		.loc 1 341 0
 1160 0722 B849     		ldr	r1, .L82+8
 1161 0724 386A     		ldr	r0, [r7, #32]	@ float
 1162 0726 FFF7FEFF 		bl	__aeabi_fmul
 1163 072a 0346     		mov	r3, r0
 1164 072c 1846     		mov	r0, r3
 1165 072e FFF7FEFF 		bl	__aeabi_f2uiz
 1166 0732 0346     		mov	r3, r0
 1167 0734 BB76     		strb	r3, [r7, #26]
 342:ui.c          ****                     absTransposeFloat -= currentChar * 10.0f;
 1168              		.loc 1 342 0
 1169 0736 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1170 0738 1846     		mov	r0, r3
 1171 073a FFF7FEFF 		bl	__aeabi_i2f
 1172 073e 0346     		mov	r3, r0
 1173 0740 B149     		ldr	r1, .L82+12
 1174 0742 1846     		mov	r0, r3
 1175 0744 FFF7FEFF 		bl	__aeabi_fmul
 1176 0748 0346     		mov	r3, r0
 1177 074a 1946     		mov	r1, r3
 1178 074c 386A     		ldr	r0, [r7, #32]	@ float
 1179 074e FFF7FEFF 		bl	__aeabi_fsub
 1180 0752 0346     		mov	r3, r0
 1181 0754 3B62     		str	r3, [r7, #32]	@ float
 343:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1182              		.loc 1 343 0
 1183 0756 BB7E     		ldrb	r3, [r7, #26]
 1184 0758 3033     		adds	r3, r3, #48
 1185 075a DBB2     		uxtb	r3, r3
 1186 075c 1946     		mov	r1, r3
 1187 075e A748     		ldr	r0, .L82
 1188 0760 FFF7FEFF 		bl	GFXwrite
 344:ui.c          ****                     currentChar = ((uint8_t)absTransposeFloat);    
 1189              		.loc 1 344 0
 1190 0764 386A     		ldr	r0, [r7, #32]	@ float
 1191 0766 FFF7FEFF 		bl	__aeabi_f2uiz
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 28


 1192 076a 0346     		mov	r3, r0
 1193 076c BB76     		strb	r3, [r7, #26]
 345:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1194              		.loc 1 345 0
 1195 076e BB7E     		ldrb	r3, [r7, #26]
 1196 0770 3033     		adds	r3, r3, #48
 1197 0772 DBB2     		uxtb	r3, r3
 1198 0774 1946     		mov	r1, r3
 1199 0776 A148     		ldr	r0, .L82
 1200 0778 FFF7FEFF 		bl	GFXwrite
 346:ui.c          ****                     OLEDtextColor(1, 0);
 1201              		.loc 1 346 0
 1202 077c 0021     		movs	r1, #0
 1203 077e 0120     		movs	r0, #1
 1204 0780 FFF7FEFF 		bl	OLEDtextColor
 347:ui.c          **** 
 348:ui.c          ****                     GFXwrite(&theGFX, 46); //decimal point
 1205              		.loc 1 348 0
 1206 0784 2E21     		movs	r1, #46
 1207 0786 9D48     		ldr	r0, .L82
 1208 0788 FFF7FEFF 		bl	GFXwrite
 349:ui.c          ****                     if (semitonesOrCents)
 1209              		.loc 1 349 0
 1210 078c 9C4B     		ldr	r3, .L82+4
 1211 078e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1212 0790 002B     		cmp	r3, #0
 1213 0792 0ED0     		beq	.L51
 350:ui.c          ****                     {
 351:ui.c          ****                         OLEDtextColor(0, 1);
 1214              		.loc 1 351 0
 1215 0794 0121     		movs	r1, #1
 1216 0796 0020     		movs	r0, #0
 1217 0798 FFF7FEFF 		bl	OLEDtextColor
 352:ui.c          ****                         GFXfillRect(&theGFX, 70, 34, 30, 25, theGFX.textbgcolor);
 1218              		.loc 1 352 0
 1219 079c 974B     		ldr	r3, .L82
 1220 079e 5B8A     		ldrh	r3, [r3, #18]
 1221 07a0 0193     		str	r3, [sp, #4]
 1222 07a2 1923     		movs	r3, #25
 1223 07a4 0093     		str	r3, [sp]
 1224 07a6 1E23     		movs	r3, #30
 1225 07a8 2222     		movs	r2, #34
 1226 07aa 4621     		movs	r1, #70
 1227 07ac 9348     		ldr	r0, .L82
 1228 07ae FFF7FEFF 		bl	GFXfillRect
 1229              	.L51:
 353:ui.c          ****                     }
 354:ui.c          ****                     absTransposeFloat -= currentChar;
 1230              		.loc 1 354 0
 1231 07b2 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1232 07b4 1846     		mov	r0, r3
 1233 07b6 FFF7FEFF 		bl	__aeabi_i2f
 1234 07ba 0346     		mov	r3, r0
 1235 07bc 1946     		mov	r1, r3
 1236 07be 386A     		ldr	r0, [r7, #32]	@ float
 1237 07c0 FFF7FEFF 		bl	__aeabi_fsub
 1238 07c4 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 29


 1239 07c6 3B62     		str	r3, [r7, #32]	@ float
 355:ui.c          ****                     currentChar = ((uint8_t)(absTransposeFloat * 10.0f));    
 1240              		.loc 1 355 0
 1241 07c8 8F49     		ldr	r1, .L82+12
 1242 07ca 386A     		ldr	r0, [r7, #32]	@ float
 1243 07cc FFF7FEFF 		bl	__aeabi_fmul
 1244 07d0 0346     		mov	r3, r0
 1245 07d2 1846     		mov	r0, r3
 1246 07d4 FFF7FEFF 		bl	__aeabi_f2uiz
 1247 07d8 0346     		mov	r3, r0
 1248 07da BB76     		strb	r3, [r7, #26]
 356:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1249              		.loc 1 356 0
 1250 07dc BB7E     		ldrb	r3, [r7, #26]
 1251 07de 3033     		adds	r3, r3, #48
 1252 07e0 DBB2     		uxtb	r3, r3
 1253 07e2 1946     		mov	r1, r3
 1254 07e4 8548     		ldr	r0, .L82
 1255 07e6 FFF7FEFF 		bl	GFXwrite
 357:ui.c          ****                     absTransposeFloat -= (currentChar * 0.1f);
 1256              		.loc 1 357 0
 1257 07ea BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 1258 07ec 1846     		mov	r0, r3
 1259 07ee FFF7FEFF 		bl	__aeabi_i2f
 1260 07f2 0346     		mov	r3, r0
 1261 07f4 8349     		ldr	r1, .L82+8
 1262 07f6 1846     		mov	r0, r3
 1263 07f8 FFF7FEFF 		bl	__aeabi_fmul
 1264 07fc 0346     		mov	r3, r0
 1265 07fe 1946     		mov	r1, r3
 1266 0800 386A     		ldr	r0, [r7, #32]	@ float
 1267 0802 FFF7FEFF 		bl	__aeabi_fsub
 1268 0806 0346     		mov	r3, r0
 1269 0808 3B62     		str	r3, [r7, #32]	@ float
 358:ui.c          ****                     currentChar = ((uint8_t)(absTransposeFloat * 100.0f));    
 1270              		.loc 1 358 0
 1271 080a 8049     		ldr	r1, .L82+16
 1272 080c 386A     		ldr	r0, [r7, #32]	@ float
 1273 080e FFF7FEFF 		bl	__aeabi_fmul
 1274 0812 0346     		mov	r3, r0
 1275 0814 1846     		mov	r0, r3
 1276 0816 FFF7FEFF 		bl	__aeabi_f2uiz
 1277 081a 0346     		mov	r3, r0
 1278 081c BB76     		strb	r3, [r7, #26]
 359:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1279              		.loc 1 359 0
 1280 081e BB7E     		ldrb	r3, [r7, #26]
 1281 0820 3033     		adds	r3, r3, #48
 1282 0822 DBB2     		uxtb	r3, r3
 1283 0824 1946     		mov	r1, r3
 1284 0826 7548     		ldr	r0, .L82
 1285 0828 FFF7FEFF 		bl	GFXwrite
 360:ui.c          ****                     OLEDtextColor(1, 0);
 1286              		.loc 1 360 0
 1287 082c 0021     		movs	r1, #0
 1288 082e 0120     		movs	r0, #1
 1289 0830 FFF7FEFF 		bl	OLEDtextColor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 30


 361:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1290              		.loc 1 361 0
 1291 0834 764B     		ldr	r3, .L82+20
 1292 0836 0122     		movs	r2, #1
 1293 0838 1A70     		strb	r2, [r3]
 1294              	.L41:
 1295              	.LBE7:
 362:ui.c          ****                 }
 363:ui.c          ****             }
 364:ui.c          ****             if (menuPosition[0][0] == VolumeMenu) //editing volume
 1296              		.loc 1 364 0
 1297 083a 764B     		ldr	r3, .L82+24
 1298 083c 93F90030 		ldrsb	r3, [r3]
 1299 0840 0B2B     		cmp	r3, #11
 1300 0842 40F0A180 		bne	.L52
 365:ui.c          ****             {
 366:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1301              		.loc 1 366 0
 1302 0846 744B     		ldr	r3, .L82+28
 1303 0848 93F90030 		ldrsb	r3, [r3]
 1304 084c 97F91E20 		ldrsb	r2, [r7, #30]
 1305 0850 9A42     		cmp	r2, r3
 1306 0852 00F09980 		beq	.L52
 1307              	.LBB8:
 367:ui.c          ****                 {
 368:ui.c          ****                     OLEDtextColor(1, 0);
 1308              		.loc 1 368 0
 1309 0856 0021     		movs	r1, #0
 1310 0858 0120     		movs	r0, #1
 1311 085a FFF7FEFF 		bl	OLEDtextColor
 369:ui.c          ****                     OLEDclearLine(ThirdLine);
 1312              		.loc 1 369 0
 1313 085e 0220     		movs	r0, #2
 1314 0860 FFF7FEFF 		bl	OLEDclearLine
 370:ui.c          ****                     OLEDclearLine(FourthLine);
 1315              		.loc 1 370 0
 1316 0864 0320     		movs	r0, #3
 1317 0866 FFF7FEFF 		bl	OLEDclearLine
 371:ui.c          ****                     float theMultiplier = 1.0f;
 1318              		.loc 1 371 0
 1319 086a 4FF07E53 		mov	r3, #1065353216
 1320 086e 7B61     		str	r3, [r7, #20]	@ float
 372:ui.c          ****  
 373:ui.c          ****                     myGFX_setFont(1);
 1321              		.loc 1 373 0
 1322 0870 0120     		movs	r0, #1
 1323 0872 FFF7FEFF 		bl	myGFX_setFont
 374:ui.c          ****                     volumeInt = volumeInt - (Decoder_1_GetPosition());
 1324              		.loc 1 374 0
 1325 0876 694B     		ldr	r3, .L82+32
 1326 0878 93F90030 		ldrsb	r3, [r3]
 1327 087c DCB2     		uxtb	r4, r3
 1328 087e FFF7FEFF 		bl	Decoder_1_GetPosition
 1329 0882 0346     		mov	r3, r0
 1330 0884 DBB2     		uxtb	r3, r3
 1331 0886 E31A     		subs	r3, r4, r3
 1332 0888 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 31


 1333 088a 5AB2     		sxtb	r2, r3
 1334 088c 634B     		ldr	r3, .L82+32
 1335 088e 1A70     		strb	r2, [r3]
 375:ui.c          ****                     Decoder_1_SetPosition(0);
 1336              		.loc 1 375 0
 1337 0890 0020     		movs	r0, #0
 1338 0892 FFF7FEFF 		bl	Decoder_1_SetPosition
 376:ui.c          ****                     if (volumeInt < 0.0)
 1339              		.loc 1 376 0
 1340 0896 614B     		ldr	r3, .L82+32
 1341 0898 93F90030 		ldrsb	r3, [r3]
 1342 089c 1846     		mov	r0, r3
 1343 089e FFF7FEFF 		bl	__aeabi_i2d
 1344 08a2 4FF00002 		mov	r2, #0
 1345 08a6 4FF00003 		mov	r3, #0
 1346 08aa FFF7FEFF 		bl	__aeabi_dcmplt
 1347 08ae 0346     		mov	r3, r0
 1348 08b0 002B     		cmp	r3, #0
 1349 08b2 03D0     		beq	.L74
 377:ui.c          ****                     {
 378:ui.c          ****                         volumeInt = 0.0;
 1350              		.loc 1 378 0
 1351 08b4 594B     		ldr	r3, .L82+32
 1352 08b6 0022     		movs	r2, #0
 1353 08b8 1A70     		strb	r2, [r3]
 1354 08ba 10E0     		b	.L55
 1355              	.L74:
 379:ui.c          ****                     }
 380:ui.c          ****                     else if (volumeInt > 100.0)
 1356              		.loc 1 380 0
 1357 08bc 574B     		ldr	r3, .L82+32
 1358 08be 93F90030 		ldrsb	r3, [r3]
 1359 08c2 1846     		mov	r0, r3
 1360 08c4 FFF7FEFF 		bl	__aeabi_i2d
 1361 08c8 4FF00002 		mov	r2, #0
 1362 08cc 544B     		ldr	r3, .L82+36
 1363 08ce FFF7FEFF 		bl	__aeabi_dcmpgt
 1364 08d2 0346     		mov	r3, r0
 1365 08d4 002B     		cmp	r3, #0
 1366 08d6 02D0     		beq	.L55
 381:ui.c          ****                     {
 382:ui.c          ****                         volumeInt = 100.0;
 1367              		.loc 1 382 0
 1368 08d8 504B     		ldr	r3, .L82+32
 1369 08da 6422     		movs	r2, #100
 1370 08dc 1A70     		strb	r2, [r3]
 1371              	.L55:
 383:ui.c          ****                     }
 384:ui.c          ****                     OLEDtextColor(1, 0);
 1372              		.loc 1 384 0
 1373 08de 0021     		movs	r1, #0
 1374 08e0 0120     		movs	r0, #1
 1375 08e2 FFF7FEFF 		bl	OLEDtextColor
 385:ui.c          ****                     GFXsetCursor(&theGFX, 20,53);
 1376              		.loc 1 385 0
 1377 08e6 3522     		movs	r2, #53
 1378 08e8 1421     		movs	r1, #20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 32


 1379 08ea 4448     		ldr	r0, .L82
 1380 08ec FFF7FEFF 		bl	GFXsetCursor
 386:ui.c          ****                     GFXwrite(&theGFX, 32);
 1381              		.loc 1 386 0
 1382 08f0 2021     		movs	r1, #32
 1383 08f2 4248     		ldr	r0, .L82
 1384 08f4 FFF7FEFF 		bl	GFXwrite
 387:ui.c          ****                     
 388:ui.c          ****                     int8_t volumeIntTemp = volumeInt;
 1385              		.loc 1 388 0
 1386 08f8 484B     		ldr	r3, .L82+32
 1387 08fa 1B78     		ldrb	r3, [r3]
 1388 08fc FB74     		strb	r3, [r7, #19]
 389:ui.c          ****                     uint8_t currentChar = ((uint8_t)(volumeIntTemp / 100));  
 1389              		.loc 1 389 0
 1390 08fe 97F91330 		ldrsb	r3, [r7, #19]
 1391 0902 484A     		ldr	r2, .L82+40
 1392 0904 82FB0312 		smull	r1, r2, r2, r3
 1393 0908 5211     		asrs	r2, r2, #5
 1394 090a DB17     		asrs	r3, r3, #31
 1395 090c D31A     		subs	r3, r2, r3
 1396 090e 5BB2     		sxtb	r3, r3
 1397 0910 BB74     		strb	r3, [r7, #18]
 390:ui.c          ****                     volumeIntTemp -= currentChar * 100;
 1398              		.loc 1 390 0
 1399 0912 BB7C     		ldrb	r3, [r7, #18]
 1400 0914 1A46     		mov	r2, r3
 1401 0916 9200     		lsls	r2, r2, #2
 1402 0918 1A44     		add	r2, r2, r3
 1403 091a D200     		lsls	r2, r2, #3
 1404 091c D31A     		subs	r3, r2, r3
 1405 091e 9B00     		lsls	r3, r3, #2
 1406 0920 DAB2     		uxtb	r2, r3
 1407 0922 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1408 0924 1344     		add	r3, r3, r2
 1409 0926 DBB2     		uxtb	r3, r3
 1410 0928 FB74     		strb	r3, [r7, #19]
 391:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1411              		.loc 1 391 0
 1412 092a BB7C     		ldrb	r3, [r7, #18]
 1413 092c 3033     		adds	r3, r3, #48
 1414 092e DBB2     		uxtb	r3, r3
 1415 0930 1946     		mov	r1, r3
 1416 0932 3248     		ldr	r0, .L82
 1417 0934 FFF7FEFF 		bl	GFXwrite
 392:ui.c          ****                     currentChar = ((uint8_t)volumeIntTemp / 10);    
 1418              		.loc 1 392 0
 1419 0938 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1420 093a 3B4A     		ldr	r2, .L82+44
 1421 093c A2FB0323 		umull	r2, r3, r2, r3
 1422 0940 DB08     		lsrs	r3, r3, #3
 1423 0942 BB74     		strb	r3, [r7, #18]
 393:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1424              		.loc 1 393 0
 1425 0944 BB7C     		ldrb	r3, [r7, #18]
 1426 0946 3033     		adds	r3, r3, #48
 1427 0948 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 33


 1428 094a 1946     		mov	r1, r3
 1429 094c 2B48     		ldr	r0, .L82
 1430 094e FFF7FEFF 		bl	GFXwrite
 394:ui.c          ****                     volumeIntTemp -= currentChar * 10;
 1431              		.loc 1 394 0
 1432 0952 BB7C     		ldrb	r3, [r7, #18]
 1433 0954 1A46     		mov	r2, r3
 1434 0956 5201     		lsls	r2, r2, #5
 1435 0958 D21A     		subs	r2, r2, r3
 1436 095a 9200     		lsls	r2, r2, #2
 1437 095c D31A     		subs	r3, r2, r3
 1438 095e 5B00     		lsls	r3, r3, #1
 1439 0960 DAB2     		uxtb	r2, r3
 1440 0962 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1441 0964 1344     		add	r3, r3, r2
 1442 0966 DBB2     		uxtb	r3, r3
 1443 0968 FB74     		strb	r3, [r7, #19]
 395:ui.c          ****                     currentChar = ((uint8_t)volumeIntTemp);    
 1444              		.loc 1 395 0
 1445 096a FB7C     		ldrb	r3, [r7, #19]
 1446 096c BB74     		strb	r3, [r7, #18]
 396:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1447              		.loc 1 396 0
 1448 096e BB7C     		ldrb	r3, [r7, #18]
 1449 0970 3033     		adds	r3, r3, #48
 1450 0972 DBB2     		uxtb	r3, r3
 1451 0974 1946     		mov	r1, r3
 1452 0976 2148     		ldr	r0, .L82
 1453 0978 FFF7FEFF 		bl	GFXwrite
 397:ui.c          ****                     volumeWaitingToSend = 1;
 1454              		.loc 1 397 0
 1455 097c 2B4B     		ldr	r3, .L82+48
 1456 097e 0122     		movs	r2, #1
 1457 0980 1A70     		strb	r2, [r3]
 398:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1458              		.loc 1 398 0
 1459 0982 234B     		ldr	r3, .L82+20
 1460 0984 0122     		movs	r2, #1
 1461 0986 1A70     		strb	r2, [r3]
 1462              	.L52:
 1463              	.LBE8:
 399:ui.c          ****                 }
 400:ui.c          ****             }
 401:ui.c          ****             if (menuPosition[0][0] == DeadzonesMenu) //editing deadzones
 1464              		.loc 1 401 0
 1465 0988 224B     		ldr	r3, .L82+24
 1466 098a 93F90030 		ldrsb	r3, [r3]
 1467 098e 082B     		cmp	r3, #8
 1468 0990 40F0E080 		bne	.L57
 402:ui.c          ****             {
 403:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1469              		.loc 1 403 0
 1470 0994 204B     		ldr	r3, .L82+28
 1471 0996 93F90030 		ldrsb	r3, [r3]
 1472 099a 97F91E20 		ldrsb	r2, [r7, #30]
 1473 099e 9A42     		cmp	r2, r3
 1474 09a0 00F0D880 		beq	.L57
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 34


 1475              	.LBB9:
 404:ui.c          ****                 {
 405:ui.c          ****                     OLEDtextColor(1, 0);
 1476              		.loc 1 405 0
 1477 09a4 0021     		movs	r1, #0
 1478 09a6 0120     		movs	r0, #1
 1479 09a8 FFF7FEFF 		bl	OLEDtextColor
 406:ui.c          ****                     OLEDclearLine(ThirdLine);
 1480              		.loc 1 406 0
 1481 09ac 0220     		movs	r0, #2
 1482 09ae FFF7FEFF 		bl	OLEDclearLine
 407:ui.c          ****                     OLEDclearLine(FourthLine);
 1483              		.loc 1 407 0
 1484 09b2 0320     		movs	r0, #3
 1485 09b4 FFF7FEFF 		bl	OLEDclearLine
 408:ui.c          ****                     
 409:ui.c          ****                     myGFX_setFont(1);
 1486              		.loc 1 409 0
 1487 09b8 0120     		movs	r0, #1
 1488 09ba FFF7FEFF 		bl	myGFX_setFont
 410:ui.c          ****                     int16_t deadZoneTemp = deadZone;
 1489              		.loc 1 410 0
 1490 09be 1C4B     		ldr	r3, .L82+52
 1491 09c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1492 09c2 3B82     		strh	r3, [r7, #16]	@ movhi
 411:ui.c          ****                     
 412:ui.c          ****                     deadZoneTemp = deadZoneTemp - Decoder_1_GetPosition();
 1493              		.loc 1 412 0
 1494 09c4 3C8A     		ldrh	r4, [r7, #16]
 1495 09c6 FFF7FEFF 		bl	Decoder_1_GetPosition
 1496 09ca 0346     		mov	r3, r0
 1497 09cc 9BB2     		uxth	r3, r3
 1498 09ce E31A     		subs	r3, r4, r3
 1499 09d0 9BB2     		uxth	r3, r3
 1500 09d2 3B82     		strh	r3, [r7, #16]	@ movhi
 413:ui.c          ****                     Decoder_1_SetPosition(0);
 1501              		.loc 1 413 0
 1502 09d4 0020     		movs	r0, #0
 1503 09d6 FFF7FEFF 		bl	Decoder_1_SetPosition
 414:ui.c          ****                     if (deadZoneTemp < 0)
 1504              		.loc 1 414 0
 1505 09da B7F91030 		ldrsh	r3, [r7, #16]
 1506 09de 002B     		cmp	r3, #0
 1507 09e0 03DA     		bge	.L58
 415:ui.c          ****                     {
 416:ui.c          ****                         deadZone = 0;
 1508              		.loc 1 416 0
 1509 09e2 134B     		ldr	r3, .L82+52
 1510 09e4 0022     		movs	r2, #0
 1511 09e6 1A70     		strb	r2, [r3]
 1512 09e8 28E0     		b	.L59
 1513              	.L58:
 417:ui.c          ****                     }
 418:ui.c          ****                     else if (deadZoneTemp > 100)
 1514              		.loc 1 418 0
 1515 09ea B7F91030 		ldrsh	r3, [r7, #16]
 1516 09ee 642B     		cmp	r3, #100
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 35


 1517 09f0 20DD     		ble	.L60
 419:ui.c          ****                     {
 420:ui.c          ****                         deadZone = 100;
 1518              		.loc 1 420 0
 1519 09f2 0F4B     		ldr	r3, .L82+52
 1520 09f4 6422     		movs	r2, #100
 1521 09f6 1A70     		strb	r2, [r3]
 1522 09f8 20E0     		b	.L59
 1523              	.L83:
 1524 09fa 00BF     		.align	2
 1525              	.L82:
 1526 09fc 00000000 		.word	theGFX
 1527 0a00 00000000 		.word	semitonesOrCents
 1528 0a04 CDCCCC3D 		.word	1036831949
 1529 0a08 00002041 		.word	1092616192
 1530 0a0c 0000C842 		.word	1120403456
 1531 0a10 00000000 		.word	mainOLEDWaitingToSend
 1532 0a14 00000000 		.word	menuPosition
 1533 0a18 00000000 		.word	prevEncoderVal
 1534 0a1c 00000000 		.word	volumeInt
 1535 0a20 00005940 		.word	1079574528
 1536 0a24 1F85EB51 		.word	1374389535
 1537 0a28 CDCCCCCC 		.word	-858993459
 1538 0a2c 00000000 		.word	volumeWaitingToSend
 1539 0a30 00000000 		.word	deadZone
 1540              	.L60:
 421:ui.c          ****                     }
 422:ui.c          ****                     else 
 423:ui.c          ****                     {
 424:ui.c          ****                         deadZone = deadZoneTemp;
 1541              		.loc 1 424 0
 1542 0a34 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 1543 0a36 DAB2     		uxtb	r2, r3
 1544 0a38 B34B     		ldr	r3, .L84
 1545 0a3a 1A70     		strb	r2, [r3]
 1546              	.L59:
 425:ui.c          ****                     }
 426:ui.c          ****                     calculatePedalRatios();
 1547              		.loc 1 426 0
 1548 0a3c FFF7FEFF 		bl	calculatePedalRatios
 427:ui.c          ****                     GFXsetCursor(&theGFX, 30,53);
 1549              		.loc 1 427 0
 1550 0a40 3522     		movs	r2, #53
 1551 0a42 1E21     		movs	r1, #30
 1552 0a44 B148     		ldr	r0, .L84+4
 1553 0a46 FFF7FEFF 		bl	GFXsetCursor
 428:ui.c          ****                     
 429:ui.c          ****                     float deadZoneRepresentation = (float)(deadZone) * 0.2f;
 1554              		.loc 1 429 0
 1555 0a4a AF4B     		ldr	r3, .L84
 1556 0a4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 0a4e 1846     		mov	r0, r3
 1558 0a50 FFF7FEFF 		bl	__aeabi_ui2f
 1559 0a54 0346     		mov	r3, r0
 1560 0a56 AE49     		ldr	r1, .L84+8
 1561 0a58 1846     		mov	r0, r3
 1562 0a5a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 36


 1563 0a5e 0346     		mov	r3, r0
 1564 0a60 FB60     		str	r3, [r7, #12]	@ float
 430:ui.c          ****                     
 431:ui.c          ****                     uint8_t currentChar = ((uint8_t)(deadZoneRepresentation * 0.1f));  
 1565              		.loc 1 431 0
 1566 0a62 AC49     		ldr	r1, .L84+12
 1567 0a64 F868     		ldr	r0, [r7, #12]	@ float
 1568 0a66 FFF7FEFF 		bl	__aeabi_fmul
 1569 0a6a 0346     		mov	r3, r0
 1570 0a6c 1846     		mov	r0, r3
 1571 0a6e FFF7FEFF 		bl	__aeabi_f2uiz
 1572 0a72 0346     		mov	r3, r0
 1573 0a74 FB72     		strb	r3, [r7, #11]
 432:ui.c          ****                     deadZoneRepresentation -= currentChar * 10.0f;
 1574              		.loc 1 432 0
 1575 0a76 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1576 0a78 1846     		mov	r0, r3
 1577 0a7a FFF7FEFF 		bl	__aeabi_i2f
 1578 0a7e 0346     		mov	r3, r0
 1579 0a80 A549     		ldr	r1, .L84+16
 1580 0a82 1846     		mov	r0, r3
 1581 0a84 FFF7FEFF 		bl	__aeabi_fmul
 1582 0a88 0346     		mov	r3, r0
 1583 0a8a 1946     		mov	r1, r3
 1584 0a8c F868     		ldr	r0, [r7, #12]	@ float
 1585 0a8e FFF7FEFF 		bl	__aeabi_fsub
 1586 0a92 0346     		mov	r3, r0
 1587 0a94 FB60     		str	r3, [r7, #12]	@ float
 433:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1588              		.loc 1 433 0
 1589 0a96 FB7A     		ldrb	r3, [r7, #11]
 1590 0a98 3033     		adds	r3, r3, #48
 1591 0a9a DBB2     		uxtb	r3, r3
 1592 0a9c 1946     		mov	r1, r3
 1593 0a9e 9B48     		ldr	r0, .L84+4
 1594 0aa0 FFF7FEFF 		bl	GFXwrite
 434:ui.c          ****                     currentChar = ((uint8_t)deadZoneRepresentation);    
 1595              		.loc 1 434 0
 1596 0aa4 F868     		ldr	r0, [r7, #12]	@ float
 1597 0aa6 FFF7FEFF 		bl	__aeabi_f2uiz
 1598 0aaa 0346     		mov	r3, r0
 1599 0aac FB72     		strb	r3, [r7, #11]
 435:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1600              		.loc 1 435 0
 1601 0aae FB7A     		ldrb	r3, [r7, #11]
 1602 0ab0 3033     		adds	r3, r3, #48
 1603 0ab2 DBB2     		uxtb	r3, r3
 1604 0ab4 1946     		mov	r1, r3
 1605 0ab6 9548     		ldr	r0, .L84+4
 1606 0ab8 FFF7FEFF 		bl	GFXwrite
 436:ui.c          **** 
 437:ui.c          **** 
 438:ui.c          ****                     GFXwrite(&theGFX, 46); //decimal point
 1607              		.loc 1 438 0
 1608 0abc 2E21     		movs	r1, #46
 1609 0abe 9348     		ldr	r0, .L84+4
 1610 0ac0 FFF7FEFF 		bl	GFXwrite
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 37


 439:ui.c          ****                     
 440:ui.c          ****                     deadZoneRepresentation -= currentChar;
 1611              		.loc 1 440 0
 1612 0ac4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1613 0ac6 1846     		mov	r0, r3
 1614 0ac8 FFF7FEFF 		bl	__aeabi_i2f
 1615 0acc 0346     		mov	r3, r0
 1616 0ace 1946     		mov	r1, r3
 1617 0ad0 F868     		ldr	r0, [r7, #12]	@ float
 1618 0ad2 FFF7FEFF 		bl	__aeabi_fsub
 1619 0ad6 0346     		mov	r3, r0
 1620 0ad8 FB60     		str	r3, [r7, #12]	@ float
 441:ui.c          ****                     currentChar = ((uint8_t)(deadZoneRepresentation * 10.0f));    
 1621              		.loc 1 441 0
 1622 0ada 8F49     		ldr	r1, .L84+16
 1623 0adc F868     		ldr	r0, [r7, #12]	@ float
 1624 0ade FFF7FEFF 		bl	__aeabi_fmul
 1625 0ae2 0346     		mov	r3, r0
 1626 0ae4 1846     		mov	r0, r3
 1627 0ae6 FFF7FEFF 		bl	__aeabi_f2uiz
 1628 0aea 0346     		mov	r3, r0
 1629 0aec FB72     		strb	r3, [r7, #11]
 442:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1630              		.loc 1 442 0
 1631 0aee FB7A     		ldrb	r3, [r7, #11]
 1632 0af0 3033     		adds	r3, r3, #48
 1633 0af2 DBB2     		uxtb	r3, r3
 1634 0af4 1946     		mov	r1, r3
 1635 0af6 8548     		ldr	r0, .L84+4
 1636 0af8 FFF7FEFF 		bl	GFXwrite
 443:ui.c          ****                     deadZoneRepresentation -= (currentChar * 0.1f);
 1637              		.loc 1 443 0
 1638 0afc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1639 0afe 1846     		mov	r0, r3
 1640 0b00 FFF7FEFF 		bl	__aeabi_i2f
 1641 0b04 0346     		mov	r3, r0
 1642 0b06 8349     		ldr	r1, .L84+12
 1643 0b08 1846     		mov	r0, r3
 1644 0b0a FFF7FEFF 		bl	__aeabi_fmul
 1645 0b0e 0346     		mov	r3, r0
 1646 0b10 1946     		mov	r1, r3
 1647 0b12 F868     		ldr	r0, [r7, #12]	@ float
 1648 0b14 FFF7FEFF 		bl	__aeabi_fsub
 1649 0b18 0346     		mov	r3, r0
 1650 0b1a FB60     		str	r3, [r7, #12]	@ float
 444:ui.c          ****                     currentChar = ((uint8_t)(deadZoneRepresentation*100.0f));    
 1651              		.loc 1 444 0
 1652 0b1c 7F49     		ldr	r1, .L84+20
 1653 0b1e F868     		ldr	r0, [r7, #12]	@ float
 1654 0b20 FFF7FEFF 		bl	__aeabi_fmul
 1655 0b24 0346     		mov	r3, r0
 1656 0b26 1846     		mov	r0, r3
 1657 0b28 FFF7FEFF 		bl	__aeabi_f2uiz
 1658 0b2c 0346     		mov	r3, r0
 1659 0b2e FB72     		strb	r3, [r7, #11]
 445:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1660              		.loc 1 445 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 38


 1661 0b30 FB7A     		ldrb	r3, [r7, #11]
 1662 0b32 3033     		adds	r3, r3, #48
 1663 0b34 DBB2     		uxtb	r3, r3
 1664 0b36 1946     		mov	r1, r3
 1665 0b38 7448     		ldr	r0, .L84+4
 1666 0b3a FFF7FEFF 		bl	GFXwrite
 446:ui.c          ****                     GFXwrite(&theGFX, 37); //percent symbol
 1667              		.loc 1 446 0
 1668 0b3e 2521     		movs	r1, #37
 1669 0b40 7248     		ldr	r0, .L84+4
 1670 0b42 FFF7FEFF 		bl	GFXwrite
 447:ui.c          ****                     OLEDtextColor(1, 0);
 1671              		.loc 1 447 0
 1672 0b46 0021     		movs	r1, #0
 1673 0b48 0120     		movs	r0, #1
 1674 0b4a FFF7FEFF 		bl	OLEDtextColor
 448:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1675              		.loc 1 448 0
 1676 0b4e 744B     		ldr	r3, .L84+24
 1677 0b50 0122     		movs	r2, #1
 1678 0b52 1A70     		strb	r2, [r3]
 1679              	.L57:
 1680              	.LBE9:
 449:ui.c          ****                 }
 450:ui.c          ****             }
 451:ui.c          ****             if (menuPosition[0][0] == SliderRepMenu) //editing string/slider representation
 1681              		.loc 1 451 0
 1682 0b54 734B     		ldr	r3, .L84+28
 1683 0b56 93F90030 		ldrsb	r3, [r3]
 1684 0b5a 092B     		cmp	r3, #9
 1685 0b5c 40F0CC80 		bne	.L61
 452:ui.c          ****             {
 453:ui.c          ****                 if (prevEncoderVal != currentEncoderVal)
 1686              		.loc 1 453 0
 1687 0b60 714B     		ldr	r3, .L84+32
 1688 0b62 93F90030 		ldrsb	r3, [r3]
 1689 0b66 97F91E20 		ldrsb	r2, [r7, #30]
 1690 0b6a 9A42     		cmp	r2, r3
 1691 0b6c 00F0C480 		beq	.L61
 1692              	.LBB10:
 454:ui.c          ****                 {
 455:ui.c          ****                     OLEDtextColor(1, 0);
 1693              		.loc 1 455 0
 1694 0b70 0021     		movs	r1, #0
 1695 0b72 0120     		movs	r0, #1
 1696 0b74 FFF7FEFF 		bl	OLEDtextColor
 456:ui.c          **** 
 457:ui.c          ****                     myGFX_setFont(2);
 1697              		.loc 1 457 0
 1698 0b78 0220     		movs	r0, #2
 1699 0b7a FFF7FEFF 		bl	myGFX_setFont
 458:ui.c          **** 
 459:ui.c          ****                     int16_t sliderTemp = stringRepresentation[editingSliderRepString];
 1700              		.loc 1 459 0
 1701 0b7e 6B4B     		ldr	r3, .L84+36
 1702 0b80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1703 0b82 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 39


 1704 0b84 6A4B     		ldr	r3, .L84+40
 1705 0b86 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1706 0b88 3B81     		strh	r3, [r7, #8]	@ movhi
 460:ui.c          ****                     sliderTemp = sliderTemp - Decoder_1_GetPosition();
 1707              		.loc 1 460 0
 1708 0b8a 3C89     		ldrh	r4, [r7, #8]
 1709 0b8c FFF7FEFF 		bl	Decoder_1_GetPosition
 1710 0b90 0346     		mov	r3, r0
 1711 0b92 9BB2     		uxth	r3, r3
 1712 0b94 E31A     		subs	r3, r4, r3
 1713 0b96 9BB2     		uxth	r3, r3
 1714 0b98 3B81     		strh	r3, [r7, #8]	@ movhi
 461:ui.c          ****                     Decoder_1_SetPosition(0);
 1715              		.loc 1 461 0
 1716 0b9a 0020     		movs	r0, #0
 1717 0b9c FFF7FEFF 		bl	Decoder_1_SetPosition
 462:ui.c          ****                     if (sliderTemp < 0)
 1718              		.loc 1 462 0
 1719 0ba0 B7F90830 		ldrsh	r3, [r7, #8]
 1720 0ba4 002B     		cmp	r3, #0
 1721 0ba6 06DA     		bge	.L62
 463:ui.c          ****                     {
 464:ui.c          ****                          stringRepresentation[editingSliderRepString] = 0;
 1722              		.loc 1 464 0
 1723 0ba8 604B     		ldr	r3, .L84+36
 1724 0baa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1725 0bac 1A46     		mov	r2, r3
 1726 0bae 604B     		ldr	r3, .L84+40
 1727 0bb0 0021     		movs	r1, #0
 1728 0bb2 9954     		strb	r1, [r3, r2]
 1729 0bb4 11E0     		b	.L63
 1730              	.L62:
 465:ui.c          ****                     }
 466:ui.c          ****                     else if (sliderTemp > 9)
 1731              		.loc 1 466 0
 1732 0bb6 B7F90830 		ldrsh	r3, [r7, #8]
 1733 0bba 092B     		cmp	r3, #9
 1734 0bbc 06DD     		ble	.L64
 467:ui.c          ****                     {
 468:ui.c          ****                          stringRepresentation[editingSliderRepString] = 9;
 1735              		.loc 1 468 0
 1736 0bbe 5B4B     		ldr	r3, .L84+36
 1737 0bc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1738 0bc2 1A46     		mov	r2, r3
 1739 0bc4 5A4B     		ldr	r3, .L84+40
 1740 0bc6 0921     		movs	r1, #9
 1741 0bc8 9954     		strb	r1, [r3, r2]
 1742 0bca 06E0     		b	.L63
 1743              	.L64:
 469:ui.c          ****                     }
 470:ui.c          ****                     else 
 471:ui.c          ****                     {
 472:ui.c          ****                          stringRepresentation[editingSliderRepString] = sliderTemp;
 1744              		.loc 1 472 0
 1745 0bcc 574B     		ldr	r3, .L84+36
 1746 0bce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1747 0bd0 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 40


 1748 0bd2 3B89     		ldrh	r3, [r7, #8]	@ movhi
 1749 0bd4 D9B2     		uxtb	r1, r3
 1750 0bd6 564B     		ldr	r3, .L84+40
 1751 0bd8 9954     		strb	r1, [r3, r2]
 1752              	.L63:
 473:ui.c          ****                     }
 474:ui.c          ****                     
 475:ui.c          ****                     uint8_t sliderRepDisplay[2];
 476:ui.c          ****                     sliderRepDisplay[0] = stringRepresentation[0] + 1;
 1753              		.loc 1 476 0
 1754 0bda 554B     		ldr	r3, .L84+40
 1755 0bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1756 0bde 0133     		adds	r3, r3, #1
 1757 0be0 DBB2     		uxtb	r3, r3
 1758 0be2 3B71     		strb	r3, [r7, #4]
 477:ui.c          ****                     sliderRepDisplay[1] = stringRepresentation[1] + 1;
 1759              		.loc 1 477 0
 1760 0be4 524B     		ldr	r3, .L84+40
 1761 0be6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1762 0be8 0133     		adds	r3, r3, #1
 1763 0bea DBB2     		uxtb	r3, r3
 1764 0bec 7B71     		strb	r3, [r7, #5]
 478:ui.c          ****                     
 479:ui.c          ****                     OLEDwriteString("S1=", 3, 0, FourthLine);
 1765              		.loc 1 479 0
 1766 0bee 0323     		movs	r3, #3
 1767 0bf0 0022     		movs	r2, #0
 1768 0bf2 0321     		movs	r1, #3
 1769 0bf4 4F48     		ldr	r0, .L84+44
 1770 0bf6 FFF7FEFF 		bl	OLEDwriteString
 480:ui.c          ****                     if (!editingSliderRepString)
 1771              		.loc 1 480 0
 1772 0bfa 4C4B     		ldr	r3, .L84+36
 1773 0bfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1774 0bfe 002B     		cmp	r3, #0
 1775 0c00 0ED1     		bne	.L65
 481:ui.c          ****                     {
 482:ui.c          ****                         OLEDtextColor(0, 1);
 1776              		.loc 1 482 0
 1777 0c02 0121     		movs	r1, #1
 1778 0c04 0020     		movs	r0, #0
 1779 0c06 FFF7FEFF 		bl	OLEDtextColor
 483:ui.c          ****                         GFXfillRect(&theGFX, 24, 48, 16, 16, theGFX.textbgcolor);
 1780              		.loc 1 483 0
 1781 0c0a 404B     		ldr	r3, .L84+4
 1782 0c0c 5B8A     		ldrh	r3, [r3, #18]
 1783 0c0e 0193     		str	r3, [sp, #4]
 1784 0c10 1023     		movs	r3, #16
 1785 0c12 0093     		str	r3, [sp]
 1786 0c14 1023     		movs	r3, #16
 1787 0c16 3022     		movs	r2, #48
 1788 0c18 1821     		movs	r1, #24
 1789 0c1a 3C48     		ldr	r0, .L84+4
 1790 0c1c FFF7FEFF 		bl	GFXfillRect
 1791              	.L65:
 484:ui.c          ****                     }
 485:ui.c          ****                     uint8_t currentChar = sliderRepDisplay[0] / 10;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 41


 1792              		.loc 1 485 0
 1793 0c20 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1794 0c22 454A     		ldr	r2, .L84+48
 1795 0c24 A2FB0323 		umull	r2, r3, r2, r3
 1796 0c28 DB08     		lsrs	r3, r3, #3
 1797 0c2a FB71     		strb	r3, [r7, #7]
 486:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1798              		.loc 1 486 0
 1799 0c2c FB79     		ldrb	r3, [r7, #7]
 1800 0c2e 3033     		adds	r3, r3, #48
 1801 0c30 DBB2     		uxtb	r3, r3
 1802 0c32 1946     		mov	r1, r3
 1803 0c34 3548     		ldr	r0, .L84+4
 1804 0c36 FFF7FEFF 		bl	GFXwrite
 487:ui.c          ****                     currentChar = sliderRepDisplay[0] - (currentChar*10);
 1805              		.loc 1 487 0
 1806 0c3a 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 1807 0c3c FB79     		ldrb	r3, [r7, #7]
 1808 0c3e 1946     		mov	r1, r3
 1809 0c40 4901     		lsls	r1, r1, #5
 1810 0c42 C91A     		subs	r1, r1, r3
 1811 0c44 8900     		lsls	r1, r1, #2
 1812 0c46 CB1A     		subs	r3, r1, r3
 1813 0c48 5B00     		lsls	r3, r3, #1
 1814 0c4a DBB2     		uxtb	r3, r3
 1815 0c4c 1344     		add	r3, r3, r2
 1816 0c4e FB71     		strb	r3, [r7, #7]
 488:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1817              		.loc 1 488 0
 1818 0c50 FB79     		ldrb	r3, [r7, #7]
 1819 0c52 3033     		adds	r3, r3, #48
 1820 0c54 DBB2     		uxtb	r3, r3
 1821 0c56 1946     		mov	r1, r3
 1822 0c58 2C48     		ldr	r0, .L84+4
 1823 0c5a FFF7FEFF 		bl	GFXwrite
 489:ui.c          ****                     OLEDtextColor(1, 0);
 1824              		.loc 1 489 0
 1825 0c5e 0021     		movs	r1, #0
 1826 0c60 0120     		movs	r0, #1
 1827 0c62 FFF7FEFF 		bl	OLEDtextColor
 490:ui.c          **** 
 491:ui.c          ****                     GFXwrite(&theGFX, 32); //space
 1828              		.loc 1 491 0
 1829 0c66 2021     		movs	r1, #32
 1830 0c68 2848     		ldr	r0, .L84+4
 1831 0c6a FFF7FEFF 		bl	GFXwrite
 492:ui.c          ****                     GFXwrite(&theGFX, 83); //S
 1832              		.loc 1 492 0
 1833 0c6e 5321     		movs	r1, #83
 1834 0c70 2648     		ldr	r0, .L84+4
 1835 0c72 FFF7FEFF 		bl	GFXwrite
 493:ui.c          ****                     GFXwrite(&theGFX, 50); //2
 1836              		.loc 1 493 0
 1837 0c76 3221     		movs	r1, #50
 1838 0c78 2448     		ldr	r0, .L84+4
 1839 0c7a FFF7FEFF 		bl	GFXwrite
 494:ui.c          ****                     GFXwrite(&theGFX, 61); //=
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 42


 1840              		.loc 1 494 0
 1841 0c7e 3D21     		movs	r1, #61
 1842 0c80 2248     		ldr	r0, .L84+4
 1843 0c82 FFF7FEFF 		bl	GFXwrite
 495:ui.c          ****                     if (editingSliderRepString)
 1844              		.loc 1 495 0
 1845 0c86 294B     		ldr	r3, .L84+36
 1846 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 0c8a 002B     		cmp	r3, #0
 1848 0c8c 0ED0     		beq	.L66
 496:ui.c          ****                     {
 497:ui.c          ****                         OLEDtextColor(0, 1);
 1849              		.loc 1 497 0
 1850 0c8e 0121     		movs	r1, #1
 1851 0c90 0020     		movs	r0, #0
 1852 0c92 FFF7FEFF 		bl	OLEDtextColor
 498:ui.c          ****                         GFXfillRect(&theGFX, 72, 48, 16, 16, theGFX.textbgcolor);
 1853              		.loc 1 498 0
 1854 0c96 1D4B     		ldr	r3, .L84+4
 1855 0c98 5B8A     		ldrh	r3, [r3, #18]
 1856 0c9a 0193     		str	r3, [sp, #4]
 1857 0c9c 1023     		movs	r3, #16
 1858 0c9e 0093     		str	r3, [sp]
 1859 0ca0 1023     		movs	r3, #16
 1860 0ca2 3022     		movs	r2, #48
 1861 0ca4 4821     		movs	r1, #72
 1862 0ca6 1948     		ldr	r0, .L84+4
 1863 0ca8 FFF7FEFF 		bl	GFXfillRect
 1864              	.L66:
 499:ui.c          ****                     }
 500:ui.c          ****                     currentChar = sliderRepDisplay[1] / 10;
 1865              		.loc 1 500 0
 1866 0cac 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1867 0cae 224A     		ldr	r2, .L84+48
 1868 0cb0 A2FB0323 		umull	r2, r3, r2, r3
 1869 0cb4 DB08     		lsrs	r3, r3, #3
 1870 0cb6 FB71     		strb	r3, [r7, #7]
 501:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1871              		.loc 1 501 0
 1872 0cb8 FB79     		ldrb	r3, [r7, #7]
 1873 0cba 3033     		adds	r3, r3, #48
 1874 0cbc DBB2     		uxtb	r3, r3
 1875 0cbe 1946     		mov	r1, r3
 1876 0cc0 1248     		ldr	r0, .L84+4
 1877 0cc2 FFF7FEFF 		bl	GFXwrite
 502:ui.c          ****                     currentChar = sliderRepDisplay[1]  - (currentChar*10);
 1878              		.loc 1 502 0
 1879 0cc6 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1880 0cc8 FB79     		ldrb	r3, [r7, #7]
 1881 0cca 1946     		mov	r1, r3
 1882 0ccc 4901     		lsls	r1, r1, #5
 1883 0cce C91A     		subs	r1, r1, r3
 1884 0cd0 8900     		lsls	r1, r1, #2
 1885 0cd2 CB1A     		subs	r3, r1, r3
 1886 0cd4 5B00     		lsls	r3, r3, #1
 1887 0cd6 DBB2     		uxtb	r3, r3
 1888 0cd8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 43


 1889 0cda FB71     		strb	r3, [r7, #7]
 503:ui.c          ****                     GFXwrite(&theGFX, currentChar + 48);
 1890              		.loc 1 503 0
 1891 0cdc FB79     		ldrb	r3, [r7, #7]
 1892 0cde 3033     		adds	r3, r3, #48
 1893 0ce0 DBB2     		uxtb	r3, r3
 1894 0ce2 1946     		mov	r1, r3
 1895 0ce4 0948     		ldr	r0, .L84+4
 1896 0ce6 FFF7FEFF 		bl	GFXwrite
 504:ui.c          ****                    
 505:ui.c          ****                     OLEDtextColor(1, 0);
 1897              		.loc 1 505 0
 1898 0cea 0021     		movs	r1, #0
 1899 0cec 0120     		movs	r0, #1
 1900 0cee FFF7FEFF 		bl	OLEDtextColor
 506:ui.c          ****                     mainOLEDWaitingToSend = 1;
 1901              		.loc 1 506 0
 1902 0cf2 0B4B     		ldr	r3, .L84+24
 1903 0cf4 0122     		movs	r2, #1
 1904 0cf6 1A70     		strb	r2, [r3]
 1905              	.L61:
 1906              	.LBE10:
 507:ui.c          ****                 }
 508:ui.c          ****             }
 509:ui.c          ****             prevEncoderVal = currentEncoderVal;
 1907              		.loc 1 509 0
 1908 0cf8 0B4A     		ldr	r2, .L84+32
 1909 0cfa BB7F     		ldrb	r3, [r7, #30]
 1910 0cfc 1370     		strb	r3, [r2]
 1911              	.L75:
 1912              	.LBE4:
 510:ui.c          ****         }
 511:ui.c          ****     }
 512:ui.c          ****     
 513:ui.c          **** }
 1913              		.loc 1 513 0
 1914 0cfe 00BF     		nop
 1915 0d00 3037     		adds	r7, r7, #48
 1916              		.cfi_def_cfa_offset 16
 1917 0d02 BD46     		mov	sp, r7
 1918              		.cfi_def_cfa_register 13
 1919              		@ sp needed
 1920 0d04 B0BD     		pop	{r4, r5, r7, pc}
 1921              	.L85:
 1922 0d06 00BF     		.align	2
 1923              	.L84:
 1924 0d08 00000000 		.word	deadZone
 1925 0d0c 00000000 		.word	theGFX
 1926 0d10 CDCC4C3E 		.word	1045220557
 1927 0d14 CDCCCC3D 		.word	1036831949
 1928 0d18 00002041 		.word	1092616192
 1929 0d1c 0000C842 		.word	1120403456
 1930 0d20 00000000 		.word	mainOLEDWaitingToSend
 1931 0d24 00000000 		.word	menuPosition
 1932 0d28 00000000 		.word	prevEncoderVal
 1933 0d2c 00000000 		.word	editingSliderRepString
 1934 0d30 00000000 		.word	stringRepresentation
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 44


 1935 0d34 00000000 		.word	.LC0
 1936 0d38 CDCCCCCC 		.word	-858993459
 1937              		.cfi_endproc
 1938              	.LFE64:
 1939              		.size	scanUI, .-scanUI
 1940              		.global	calibrationNames
 1941              		.section	.rodata
 1942              		.align	2
 1943              	.LC1:
 1944 0004 20205345 		.ascii	"  SET LEVERS \000"
 1944      54204C45 
 1944      56455253 
 1944      2000
 1945 0012 0000     		.align	2
 1946              	.LC2:
 1947 0014 20205345 		.ascii	"  SET FRETS  \000"
 1947      54204652 
 1947      45545320 
 1947      2000
 1948 0022 0000     		.align	2
 1949              		.type	calibrationNames, %object
 1950              		.size	calibrationNames, 12
 1951              	calibrationNames:
 1952 0024 04000000 		.word	.LC1
 1953 0028 14000000 		.word	.LC2
 1954 002c 00000000 		.word	0
 1955              		.global	mainMenuNames
 1956              		.align	2
 1957              	.LC3:
 1958 0030 20205354 		.ascii	"  STORE_PRESET \000"
 1958      4F52455F 
 1958      50524553 
 1958      45542000 
 1959              		.align	2
 1960              	.LC4:
 1961 0040 20204341 		.ascii	"  CALIBRATION\000"
 1961      4C494252 
 1961      4154494F 
 1961      4E00
 1962 004e 0000     		.align	2
 1963              	.LC5:
 1964 0050 20205345 		.ascii	"  SETTINGS   \000"
 1964      5454494E 
 1964      47532020 
 1964      2000
 1965 005e 0000     		.align	2
 1966              		.type	mainMenuNames, %object
 1967              		.size	mainMenuNames, 16
 1968              	mainMenuNames:
 1969 0060 30000000 		.word	.LC3
 1970 0064 40000000 		.word	.LC4
 1971 0068 50000000 		.word	.LC5
 1972 006c 00000000 		.word	0
 1973              		.global	settingsNames
 1974              		.align	2
 1975              	.LC6:
 1976 0070 20205452 		.ascii	"  TRANSPOSE  \000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 45


 1976      414E5350 
 1976      4F534520 
 1976      2000
 1977 007e 0000     		.align	2
 1978              	.LC7:
 1979 0080 20204F43 		.ascii	"  OCTAVE ACTION\000"
 1979      54415645 
 1979      20414354 
 1979      494F4E00 
 1980              		.align	2
 1981              	.LC8:
 1982 0090 20204445 		.ascii	"  DEADZONES    \000"
 1982      41445A4F 
 1982      4E455320 
 1982      20202000 
 1983              		.align	2
 1984              	.LC9:
 1985 00a0 2020534C 		.ascii	"  SLIDER REPR \000"
 1985      49444552 
 1985      20524550 
 1985      522000
 1986 00af 00       		.align	2
 1987              	.LC10:
 1988 00b0 2020534D 		.ascii	"  SMOOTHING   \000"
 1988      4F4F5448 
 1988      494E4720 
 1988      202000
 1989 00bf 00       		.align	2
 1990              	.LC11:
 1991 00c0 20204D49 		.ascii	"  MIDI SEND  \000"
 1991      44492053 
 1991      454E4420 
 1991      2000
 1992 00ce 0000     		.align	2
 1993              	.LC12:
 1994 00d0 2020564F 		.ascii	"  VOLUME      \000"
 1994      4C554D45 
 1994      20202020 
 1994      202000
 1995 00df 00       		.align	2
 1996              	.LC13:
 1997 00e0 20204649 		.ascii	"  FIRMWARE UPDT\000"
 1997      524D5741 
 1997      52452055 
 1997      50445400 
 1998              		.align	2
 1999              		.type	settingsNames, %object
 2000              		.size	settingsNames, 36
 2001              	settingsNames:
 2002 00f0 70000000 		.word	.LC6
 2003 00f4 80000000 		.word	.LC7
 2004 00f8 90000000 		.word	.LC8
 2005 00fc A0000000 		.word	.LC9
 2006 0100 B0000000 		.word	.LC10
 2007 0104 C0000000 		.word	.LC11
 2008 0108 D0000000 		.word	.LC12
 2009 010c E0000000 		.word	.LC13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 46


 2010 0110 00000000 		.word	0
 2011              		.global	numMainMenuItems
 2012              		.data
 2013              		.type	numMainMenuItems, %object
 2014              		.size	numMainMenuItems, 1
 2015              	numMainMenuItems:
 2016 001a 03       		.byte	3
 2017              		.global	numCalibrationItems
 2018              		.type	numCalibrationItems, %object
 2019              		.size	numCalibrationItems, 1
 2020              	numCalibrationItems:
 2021 001b 02       		.byte	2
 2022              		.global	numSettingsItems
 2023              		.type	numSettingsItems, %object
 2024              		.size	numSettingsItems, 1
 2025              	numSettingsItems:
 2026 001c 08       		.byte	8
 2027              		.section	.rodata
 2028              		.align	2
 2029              	.LC14:
 2030 0114 20205354 		.ascii	"  STORE PRESET   \000"
 2030      4F524520 
 2030      50524553 
 2030      45542020 
 2030      2000
 2031 0126 0000     		.align	2
 2032              	.LC15:
 2033 0128 20204341 		.ascii	"  CALIBRATION     \000"
 2033      4C494252 
 2033      4154494F 
 2033      4E202020 
 2033      202000
 2034 013b 00       		.align	2
 2035              	.LC16:
 2036 013c 20205345 		.ascii	"  SETTINGS       \000"
 2036      5454494E 
 2036      47532020 
 2036      20202020 
 2036      2000
 2037              		.section	.text.enterEditModeMenu,"ax",%progbits
 2038              		.align	2
 2039              		.global	enterEditModeMenu
 2040              		.thumb
 2041              		.thumb_func
 2042              		.type	enterEditModeMenu, %function
 2043              	enterEditModeMenu:
 2044              	.LFB65:
 514:ui.c          **** 
 515:ui.c          **** 
 516:ui.c          **** 
 517:ui.c          **** 
 518:ui.c          **** const char* const calibrationNames[] = { "  SET LEVERS ", "  SET FRETS  ", 0 }; 
 519:ui.c          **** const char* const mainMenuNames[] =    {"  STORE_PRESET ", "  CALIBRATION", "  SETTINGS   ", 0 }; 
 520:ui.c          **** const char* const settingsNames[] =   { "  TRANSPOSE  ", "  OCTAVE ACTION", "  DEADZONES    ", "  S
 521:ui.c          **** uint8_t numMainMenuItems = 3;
 522:ui.c          **** uint8_t numCalibrationItems = 2;
 523:ui.c          **** uint8_t numSettingsItems = 8;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 47


 524:ui.c          **** 
 525:ui.c          **** void enterEditModeMenu(void)
 526:ui.c          **** {
 2045              		.loc 1 526 0
 2046              		.cfi_startproc
 2047              		@ args = 0, pretend = 0, frame = 0
 2048              		@ frame_needed = 1, uses_anonymous_args = 0
 2049 0000 80B5     		push	{r7, lr}
 2050              		.cfi_def_cfa_offset 8
 2051              		.cfi_offset 7, -8
 2052              		.cfi_offset 14, -4
 2053 0002 00AF     		add	r7, sp, #0
 2054              		.cfi_def_cfa_register 7
 527:ui.c          ****     OLEDclear(128, 64);
 2055              		.loc 1 527 0
 2056 0004 4021     		movs	r1, #64
 2057 0006 8020     		movs	r0, #128
 2058 0008 FFF7FEFF 		bl	OLEDclear
 528:ui.c          ****     myGFX_setFont(2);
 2059              		.loc 1 528 0
 2060 000c 0220     		movs	r0, #2
 2061 000e FFF7FEFF 		bl	myGFX_setFont
 529:ui.c          ****     OLEDtextColor(0, 1);
 2062              		.loc 1 529 0
 2063 0012 0121     		movs	r1, #1
 2064 0014 0020     		movs	r0, #0
 2065 0016 FFF7FEFF 		bl	OLEDtextColor
 530:ui.c          ****     OLEDwriteString("  STORE PRESET   ", 15, 0, FirstLine);
 2066              		.loc 1 530 0
 2067 001a 0023     		movs	r3, #0
 2068 001c 0022     		movs	r2, #0
 2069 001e 0F21     		movs	r1, #15
 2070 0020 1E48     		ldr	r0, .L87
 2071 0022 FFF7FEFF 		bl	OLEDwriteString
 531:ui.c          ****     OLEDwriteArrow(0, FirstLine);
 2072              		.loc 1 531 0
 2073 0026 0021     		movs	r1, #0
 2074 0028 0020     		movs	r0, #0
 2075 002a FFF7FEFF 		bl	OLEDwriteArrow
 532:ui.c          ****     OLEDtextColor(1, 0);
 2076              		.loc 1 532 0
 2077 002e 0021     		movs	r1, #0
 2078 0030 0120     		movs	r0, #1
 2079 0032 FFF7FEFF 		bl	OLEDtextColor
 533:ui.c          ****     OLEDwriteString("  CALIBRATION     ",15, 0, SecondLine);
 2080              		.loc 1 533 0
 2081 0036 0123     		movs	r3, #1
 2082 0038 0022     		movs	r2, #0
 2083 003a 0F21     		movs	r1, #15
 2084 003c 1848     		ldr	r0, .L87+4
 2085 003e FFF7FEFF 		bl	OLEDwriteString
 534:ui.c          ****     OLEDtextColor(1, 0);
 2086              		.loc 1 534 0
 2087 0042 0021     		movs	r1, #0
 2088 0044 0120     		movs	r0, #1
 2089 0046 FFF7FEFF 		bl	OLEDtextColor
 535:ui.c          ****     OLEDwriteString("  SETTINGS       ", 15, 0, ThirdLine);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 48


 2090              		.loc 1 535 0
 2091 004a 0223     		movs	r3, #2
 2092 004c 0022     		movs	r2, #0
 2093 004e 0F21     		movs	r1, #15
 2094 0050 1448     		ldr	r0, .L87+8
 2095 0052 FFF7FEFF 		bl	OLEDwriteString
 536:ui.c          ****     OLEDtextColor(1, 0);
 2096              		.loc 1 536 0
 2097 0056 0021     		movs	r1, #0
 2098 0058 0120     		movs	r0, #1
 2099 005a FFF7FEFF 		bl	OLEDtextColor
 537:ui.c          ****     mainOLEDWaitingToSend = 1;
 2100              		.loc 1 537 0
 2101 005e 124B     		ldr	r3, .L87+12
 2102 0060 0122     		movs	r2, #1
 2103 0062 1A70     		strb	r2, [r3]
 538:ui.c          ****     editMode = 1;
 2104              		.loc 1 538 0
 2105 0064 114B     		ldr	r3, .L87+16
 2106 0066 0122     		movs	r2, #1
 2107 0068 1A70     		strb	r2, [r3]
 539:ui.c          ****     LED_red2_Write(editMode);
 2108              		.loc 1 539 0
 2109 006a 104B     		ldr	r3, .L87+16
 2110 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2111 006e 1846     		mov	r0, r3
 2112 0070 FFF7FEFF 		bl	LED_red2_Write
 540:ui.c          ****     //initialize menu position to all zero
 541:ui.c          ****     menuPosition[0][0] = 0; //x
 2113              		.loc 1 541 0
 2114 0074 0E4B     		ldr	r3, .L87+20
 2115 0076 0022     		movs	r2, #0
 2116 0078 1A70     		strb	r2, [r3]
 542:ui.c          ****     menuPosition[0][1] = 0; //y
 2117              		.loc 1 542 0
 2118 007a 0D4B     		ldr	r3, .L87+20
 2119 007c 0022     		movs	r2, #0
 2120 007e 5A70     		strb	r2, [r3, #1]
 543:ui.c          ****     menuPosition[1][0] = 0; //x
 2121              		.loc 1 543 0
 2122 0080 0B4B     		ldr	r3, .L87+20
 2123 0082 0022     		movs	r2, #0
 2124 0084 9A70     		strb	r2, [r3, #2]
 544:ui.c          ****     menuPosition[1][1] = 0; //y
 2125              		.loc 1 544 0
 2126 0086 0A4B     		ldr	r3, .L87+20
 2127 0088 0022     		movs	r2, #0
 2128 008a DA70     		strb	r2, [r3, #3]
 545:ui.c          ****     menuPosition[2][0] = 0; //x
 2129              		.loc 1 545 0
 2130 008c 084B     		ldr	r3, .L87+20
 2131 008e 0022     		movs	r2, #0
 2132 0090 1A71     		strb	r2, [r3, #4]
 546:ui.c          ****     menuPosition[2][1] = 0; //y
 2133              		.loc 1 546 0
 2134 0092 074B     		ldr	r3, .L87+20
 2135 0094 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 49


 2136 0096 5A71     		strb	r2, [r3, #5]
 547:ui.c          **** }
 2137              		.loc 1 547 0
 2138 0098 00BF     		nop
 2139 009a 80BD     		pop	{r7, pc}
 2140              	.L88:
 2141              		.align	2
 2142              	.L87:
 2143 009c 14010000 		.word	.LC14
 2144 00a0 28010000 		.word	.LC15
 2145 00a4 3C010000 		.word	.LC16
 2146 00a8 00000000 		.word	mainOLEDWaitingToSend
 2147 00ac 00000000 		.word	editMode
 2148 00b0 00000000 		.word	menuPosition
 2149              		.cfi_endproc
 2150              	.LFE65:
 2151              		.size	enterEditModeMenu, .-enterEditModeMenu
 2152              		.global	__aeabi_f2iz
 2153              		.section	.text.exitEditModeMenu,"ax",%progbits
 2154              		.align	2
 2155              		.global	exitEditModeMenu
 2156              		.thumb
 2157              		.thumb_func
 2158              		.type	exitEditModeMenu, %function
 2159              	exitEditModeMenu:
 2160              	.LFB66:
 548:ui.c          **** 
 549:ui.c          **** void exitEditModeMenu(void)
 550:ui.c          **** {
 2161              		.loc 1 550 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 8
 2164              		@ frame_needed = 1, uses_anonymous_args = 0
 2165 0000 90B5     		push	{r4, r7, lr}
 2166              		.cfi_def_cfa_offset 12
 2167              		.cfi_offset 4, -12
 2168              		.cfi_offset 7, -8
 2169              		.cfi_offset 14, -4
 2170 0002 83B0     		sub	sp, sp, #12
 2171              		.cfi_def_cfa_offset 24
 2172 0004 00AF     		add	r7, sp, #0
 2173              		.cfi_def_cfa_register 7
 551:ui.c          ****     
 552:ui.c          ****     if (leverCalibrationMode == 1)
 2174              		.loc 1 552 0
 2175 0006 584B     		ldr	r3, .L98
 2176 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2177 000a 012B     		cmp	r3, #1
 2178 000c 01D1     		bne	.L90
 553:ui.c          ****     {
 554:ui.c          ****         exitLeverCalibrationMode();
 2179              		.loc 1 554 0
 2180 000e FFF7FEFF 		bl	exitLeverCalibrationMode
 2181              	.L90:
 555:ui.c          ****     }
 556:ui.c          ****     if (fretCalibrationMode == 1)
 2182              		.loc 1 556 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 50


 2183 0012 564B     		ldr	r3, .L98+4
 2184 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2185 0016 012B     		cmp	r3, #1
 2186 0018 01D1     		bne	.L91
 557:ui.c          ****     {
 558:ui.c          ****         exitFretCalibrationMode();
 2187              		.loc 1 558 0
 2188 001a FFF7FEFF 		bl	exitFretCalibrationMode
 2189              	.L91:
 559:ui.c          ****     }
 560:ui.c          ****     if (menuPosition[0][0] == TransposeMenu)
 2190              		.loc 1 560 0
 2191 001e 544B     		ldr	r3, .L98+8
 2192 0020 93F90030 		ldrsb	r3, [r3]
 2193 0024 062B     		cmp	r3, #6
 2194 0026 34D1     		bne	.L92
 561:ui.c          ****     {
 562:ui.c          ****         transposeSemitones = (int8_t)transposeFloat;
 2195              		.loc 1 562 0
 2196 0028 524B     		ldr	r3, .L98+12
 2197 002a 1B68     		ldr	r3, [r3]	@ float
 2198 002c 1846     		mov	r0, r3
 2199 002e FFF7FEFF 		bl	__aeabi_f2iz
 2200 0032 0346     		mov	r3, r0
 2201 0034 5AB2     		sxtb	r2, r3
 2202 0036 504B     		ldr	r3, .L98+16
 2203 0038 1A70     		strb	r2, [r3]
 563:ui.c          ****         transposeCents = (int8_t)((transposeFloat - transposeSemitones) * 100.0f);
 2204              		.loc 1 563 0
 2205 003a 4E4B     		ldr	r3, .L98+12
 2206 003c 1C68     		ldr	r4, [r3]	@ float
 2207 003e 4E4B     		ldr	r3, .L98+16
 2208 0040 93F90030 		ldrsb	r3, [r3]
 2209 0044 1846     		mov	r0, r3
 2210 0046 FFF7FEFF 		bl	__aeabi_i2f
 2211 004a 0346     		mov	r3, r0
 2212 004c 1946     		mov	r1, r3
 2213 004e 2046     		mov	r0, r4
 2214 0050 FFF7FEFF 		bl	__aeabi_fsub
 2215 0054 0346     		mov	r3, r0
 2216 0056 4949     		ldr	r1, .L98+20
 2217 0058 1846     		mov	r0, r3
 2218 005a FFF7FEFF 		bl	__aeabi_fmul
 2219 005e 0346     		mov	r3, r0
 2220 0060 1846     		mov	r0, r3
 2221 0062 FFF7FEFF 		bl	__aeabi_f2iz
 2222 0066 0346     		mov	r3, r0
 2223 0068 5AB2     		sxtb	r2, r3
 2224 006a 454B     		ldr	r3, .L98+24
 2225 006c 1A70     		strb	r2, [r3]
 564:ui.c          ****         EEPROM_WriteByte(transposeSemitones, EEPROM_TRANSPOSE_OFFSET);
 2226              		.loc 1 564 0
 2227 006e 424B     		ldr	r3, .L98+16
 2228 0070 93F90030 		ldrsb	r3, [r3]
 2229 0074 DBB2     		uxtb	r3, r3
 2230 0076 4FF4FB61 		mov	r1, #2008
 2231 007a 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 51


 2232 007c FFF7FEFF 		bl	EEPROM_WriteByte
 565:ui.c          ****         EEPROM_WriteByte(transposeCents, EEPROM_TRANSPOSE_OFFSET + 1);
 2233              		.loc 1 565 0
 2234 0080 3F4B     		ldr	r3, .L98+24
 2235 0082 93F90030 		ldrsb	r3, [r3]
 2236 0086 DBB2     		uxtb	r3, r3
 2237 0088 40F2D971 		movw	r1, #2009
 2238 008c 1846     		mov	r0, r3
 2239 008e FFF7FEFF 		bl	EEPROM_WriteByte
 2240              	.L92:
 566:ui.c          ****     }
 567:ui.c          ****     if (menuPosition[0][0] == OctaveActionMenu)
 2241              		.loc 1 567 0
 2242 0092 374B     		ldr	r3, .L98+8
 2243 0094 93F90030 		ldrsb	r3, [r3]
 2244 0098 072B     		cmp	r3, #7
 2245 009a 06D1     		bne	.L93
 568:ui.c          ****     {
 569:ui.c          ****         EEPROM_WriteByte(octaveAction, EEPROM_OCTAVE_ACTION_OFFSET);
 2246              		.loc 1 569 0
 2247 009c 394B     		ldr	r3, .L98+28
 2248 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2249 00a0 40F2DA71 		movw	r1, #2010
 2250 00a4 1846     		mov	r0, r3
 2251 00a6 FFF7FEFF 		bl	EEPROM_WriteByte
 2252              	.L93:
 570:ui.c          ****     }  
 571:ui.c          ****     if (menuPosition[0][0] == DeadzonesMenu)
 2253              		.loc 1 571 0
 2254 00aa 314B     		ldr	r3, .L98+8
 2255 00ac 93F90030 		ldrsb	r3, [r3]
 2256 00b0 082B     		cmp	r3, #8
 2257 00b2 06D1     		bne	.L94
 572:ui.c          ****     {
 573:ui.c          ****         EEPROM_WriteByte(deadZone, EEPROM_DEADZONES_OFFSET);
 2258              		.loc 1 573 0
 2259 00b4 344B     		ldr	r3, .L98+32
 2260 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2261 00b8 40F2DB71 		movw	r1, #2011
 2262 00bc 1846     		mov	r0, r3
 2263 00be FFF7FEFF 		bl	EEPROM_WriteByte
 2264              	.L94:
 574:ui.c          ****     }
 575:ui.c          ****     if (menuPosition[0][0] == SliderRepMenu)
 2265              		.loc 1 575 0
 2266 00c2 2B4B     		ldr	r3, .L98+8
 2267 00c4 93F90030 		ldrsb	r3, [r3]
 2268 00c8 092B     		cmp	r3, #9
 2269 00ca 12D1     		bne	.L95
 2270              	.LBB11:
 576:ui.c          ****     {
 577:ui.c          ****         uint8_t tempByte = ((stringRepresentation[0] & 15) << 4) + (stringRepresentation[1] & 15);
 2271              		.loc 1 577 0
 2272 00cc 2F4B     		ldr	r3, .L98+36
 2273 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2274 00d0 1B01     		lsls	r3, r3, #4
 2275 00d2 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 52


 2276 00d4 2D4B     		ldr	r3, .L98+36
 2277 00d6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2278 00d8 03F00F03 		and	r3, r3, #15
 2279 00dc DBB2     		uxtb	r3, r3
 2280 00de 1344     		add	r3, r3, r2
 2281 00e0 FB71     		strb	r3, [r7, #7]
 578:ui.c          ****         EEPROM_WriteByte(tempByte,EEPROM_STRING_REP_OFFSET);
 2282              		.loc 1 578 0
 2283 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2284 00e4 40F2D771 		movw	r1, #2007
 2285 00e8 1846     		mov	r0, r3
 2286 00ea FFF7FEFF 		bl	EEPROM_WriteByte
 579:ui.c          ****         calculateStringRepDivider();
 2287              		.loc 1 579 0
 2288 00ee FFF7FEFF 		bl	calculateStringRepDivider
 2289              	.L95:
 2290              	.LBE11:
 580:ui.c          ****     }
 581:ui.c          ****     if (menuPosition[0][0] == MidiSendMenu)
 2291              		.loc 1 581 0
 2292 00f2 1F4B     		ldr	r3, .L98+8
 2293 00f4 93F90030 		ldrsb	r3, [r3]
 2294 00f8 0A2B     		cmp	r3, #10
 2295 00fa 13D1     		bne	.L96
 2296              	.LBB12:
 582:ui.c          ****     {
 583:ui.c          ****         uint8_t tempByte = ((midiBarSendOn & 1)<<1) + (midiSendOn & 1);
 2297              		.loc 1 583 0
 2298 00fc 244B     		ldr	r3, .L98+40
 2299 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2300 0100 5B00     		lsls	r3, r3, #1
 2301 0102 DBB2     		uxtb	r3, r3
 2302 0104 03F00203 		and	r3, r3, #2
 2303 0108 DAB2     		uxtb	r2, r3
 2304 010a 224B     		ldr	r3, .L98+44
 2305 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2306 010e 03F00103 		and	r3, r3, #1
 2307 0112 DBB2     		uxtb	r3, r3
 2308 0114 1344     		add	r3, r3, r2
 2309 0116 BB71     		strb	r3, [r7, #6]
 584:ui.c          ****         EEPROM_WriteByte(tempByte,EEPROM_MIDI_SEND_OFFSET);
 2310              		.loc 1 584 0
 2311 0118 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2312 011a 40F2DE71 		movw	r1, #2014
 2313 011e 1846     		mov	r0, r3
 2314 0120 FFF7FEFF 		bl	EEPROM_WriteByte
 2315              	.L96:
 2316              	.LBE12:
 585:ui.c          ****     }
 586:ui.c          ****     if (menuPosition[0][0] == VolumeMenu)
 2317              		.loc 1 586 0
 2318 0124 124B     		ldr	r3, .L98+8
 2319 0126 93F90030 		ldrsb	r3, [r3]
 2320 012a 0B2B     		cmp	r3, #11
 2321 012c 08D1     		bne	.L97
 587:ui.c          ****     {
 588:ui.c          ****         EEPROM_WriteByte((uint8_t)volumeInt,EEPROM_VOLUME_OFFSET);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 53


 2322              		.loc 1 588 0
 2323 012e 1A4B     		ldr	r3, .L98+48
 2324 0130 93F90030 		ldrsb	r3, [r3]
 2325 0134 DBB2     		uxtb	r3, r3
 2326 0136 40F2E371 		movw	r1, #2019
 2327 013a 1846     		mov	r0, r3
 2328 013c FFF7FEFF 		bl	EEPROM_WriteByte
 2329              	.L97:
 589:ui.c          ****     }
 590:ui.c          ****     
 591:ui.c          ****     encoderWatch = 0;
 2330              		.loc 1 591 0
 2331 0140 164B     		ldr	r3, .L98+52
 2332 0142 0022     		movs	r2, #0
 2333 0144 1A70     		strb	r2, [r3]
 592:ui.c          ****     Decoder_1_Stop();
 2334              		.loc 1 592 0
 2335 0146 FFF7FEFF 		bl	Decoder_1_Stop
 593:ui.c          ****     editMode = 0;
 2336              		.loc 1 593 0
 2337 014a 154B     		ldr	r3, .L98+56
 2338 014c 0022     		movs	r2, #0
 2339 014e 1A70     		strb	r2, [r3]
 594:ui.c          ****     LED_red2_Write(editMode);
 2340              		.loc 1 594 0
 2341 0150 134B     		ldr	r3, .L98+56
 2342 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2343 0154 1846     		mov	r0, r3
 2344 0156 FFF7FEFF 		bl	LED_red2_Write
 595:ui.c          ****     displayCurrentPresetNameAndCopedent();
 2345              		.loc 1 595 0
 2346 015a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 596:ui.c          **** }
 2347              		.loc 1 596 0
 2348 015e 00BF     		nop
 2349 0160 0C37     		adds	r7, r7, #12
 2350              		.cfi_def_cfa_offset 12
 2351 0162 BD46     		mov	sp, r7
 2352              		.cfi_def_cfa_register 13
 2353              		@ sp needed
 2354 0164 90BD     		pop	{r4, r7, pc}
 2355              	.L99:
 2356 0166 00BF     		.align	2
 2357              	.L98:
 2358 0168 00000000 		.word	leverCalibrationMode
 2359 016c 00000000 		.word	fretCalibrationMode
 2360 0170 00000000 		.word	menuPosition
 2361 0174 00000000 		.word	transposeFloat
 2362 0178 00000000 		.word	transposeSemitones
 2363 017c 0000C842 		.word	1120403456
 2364 0180 00000000 		.word	transposeCents
 2365 0184 00000000 		.word	octaveAction
 2366 0188 00000000 		.word	deadZone
 2367 018c 00000000 		.word	stringRepresentation
 2368 0190 00000000 		.word	midiBarSendOn
 2369 0194 00000000 		.word	midiSendOn
 2370 0198 00000000 		.word	volumeInt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 54


 2371 019c 00000000 		.word	encoderWatch
 2372 01a0 00000000 		.word	editMode
 2373              		.cfi_endproc
 2374              	.LFE66:
 2375              		.size	exitEditModeMenu, .-exitEditModeMenu
 2376              		.global	fretToCalibrate
 2377              		.bss
 2378              		.type	fretToCalibrate, %object
 2379              		.size	fretToCalibrate, 1
 2380              	fretToCalibrate:
 2381 0009 00       		.space	1
 2382              		.global	whichFretArray
 2383              		.data
 2384 001d 000000   		.align	2
 2385              		.type	whichFretArray, %object
 2386              		.size	whichFretArray, 12
 2387              	whichFretArray:
 2388 0020 00       		.byte	0
 2389 0021 01       		.byte	1
 2390 0022 03       		.byte	3
 2391 0023 05       		.byte	5
 2392 0024 07       		.byte	7
 2393 0025 09       		.byte	9
 2394 0026 0C       		.byte	12
 2395 0027 0F       		.byte	15
 2396 0028 11       		.byte	17
 2397 0029 13       		.byte	19
 2398 002a 15       		.byte	21
 2399 002b 18       		.byte	24
 2400              		.section	.rodata
 2401 014e 0000     		.align	2
 2402              	.LC17:
 2403 0150 56414C55 		.ascii	"VALUE KNOB SETS\000"
 2403      45204B4E 
 2403      4F422053 
 2403      45545300 
 2404              		.align	2
 2405              	.LC18:
 2406 0160 5452414E 		.ascii	"TRANSPOSITION  \000"
 2406      53504F53 
 2406      4954494F 
 2406      4E202000 
 2407              		.align	2
 2408              	.LC19:
 2409 0170 4F435441 		.ascii	"OCTAVE ACTION  \000"
 2409      56452041 
 2409      4354494F 
 2409      4E202000 
 2410              		.align	2
 2411              	.LC20:
 2412 0180 4F4E204E 		.ascii	"ON NEXT NOTE   \000"
 2412      45585420 
 2412      4E4F5445 
 2412      20202000 
 2413              		.align	2
 2414              	.LC21:
 2415 0190 494D4D45 		.ascii	"IMMEDIATE      \000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 55


 2415      44494154 
 2415      45202020 
 2415      20202000 
 2416              		.align	2
 2417              	.LC22:
 2418 01a0 4C455645 		.ascii	"LEVER DEADZONES\000"
 2418      52204445 
 2418      41445A4F 
 2418      4E455300 
 2419              		.align	2
 2420              	.LC23:
 2421 01b0 53455420 		.ascii	"SET WHICH      \000"
 2421      57484943 
 2421      48202020 
 2421      20202000 
 2422              		.align	2
 2423              	.LC24:
 2424 01c0 53545249 		.ascii	"STRINGS SLIDERS\000"
 2424      4E475320 
 2424      534C4944 
 2424      45525300 
 2425              		.align	2
 2426              	.LC25:
 2427 01d0 52455052 		.ascii	"REPRESENT(1-10)\000"
 2427      4553454E 
 2427      5428312D 
 2427      31302900 
 2428              		.align	2
 2429              	.LC26:
 2430 01e0 53454E44 		.ascii	"SEND MIDI \000"
 2430      204D4944 
 2430      492000
 2431 01eb 00       		.align	2
 2432              	.LC27:
 2433 01ec 53454E44 		.ascii	"SEND BAR  \000"
 2433      20424152 
 2433      202000
 2434 01f7 00       		.align	2
 2435              	.LC28:
 2436 01f8 564F4C55 		.ascii	"VOLUME    \000"
 2436      4D452020 
 2436      202000
 2437 0203 00       		.align	2
 2438              	.LC29:
 2439 0204 55504441 		.ascii	"UPDATE BRAIN\000"
 2439      54452042 
 2439      5241494E 
 2439      00
 2440 0211 000000   		.align	2
 2441              	.LC30:
 2442 0214 55504441 		.ascii	"UPDATE PLUCK\000"
 2442      54452050 
 2442      4C55434B 
 2442      00
 2443 0221 000000   		.align	2
 2444              	.LC31:
 2445 0224 4E4F5720 		.ascii	"NOW PUT ALL\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 56


 2445      50555420 
 2445      414C4C00 
 2446              		.align	2
 2447              	.LC32:
 2448 0230 50454441 		.ascii	"PEDALS/LEVERS  \000"
 2448      4C532F4C 
 2448      45564552 
 2448      53202000 
 2449              		.align	2
 2450              	.LC33:
 2451 0240 494E2052 		.ascii	"IN RESTING STATE\000"
 2451      45535449 
 2451      4E472053 
 2451      54415445 
 2451      00
 2452 0251 000000   		.align	2
 2453              	.LC34:
 2454 0254 414E4420 		.ascii	"AND PRESS EDIT\000"
 2454      50524553 
 2454      53204544 
 2454      495400
 2455 0263 00       		.align	2
 2456              	.LC35:
 2457 0264 53454C45 		.ascii	"SELECT DEST\000"
 2457      43542044 
 2457      45535400 
 2458              		.align	2
 2459              	.LC36:
 2460 0270 4C4F4341 		.ascii	"LOCATION THEN \000"
 2460      54494F4E 
 2460      20544845 
 2460      4E2000
 2461 027f 00       		.align	2
 2462              	.LC37:
 2463 0280 50555348 		.ascii	"PUSH -> \000"
 2463      202D3E20 
 2463      00
 2464 0289 000000   		.align	2
 2465              	.LC38:
 2466 028c 55534520 		.ascii	"USE VALUE KNOB\000"
 2466      56414C55 
 2466      45204B4E 
 2466      4F4200
 2467 029b 00       		.align	2
 2468              	.LC39:
 2469 029c 544F2043 		.ascii	"TO CREATE NAME\000"
 2469      52454154 
 2469      45204E41 
 2469      4D4500
 2470 02ab 00       		.align	2
 2471              	.LC40:
 2472 02ac 20202020 		.ascii	"               \000"
 2472      20202020 
 2472      20202020 
 2472      20202000 
 2473              		.section	.text.menuAction,"ax",%progbits
 2474              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 57


 2475              		.global	menuAction
 2476              		.thumb
 2477              		.thumb_func
 2478              		.type	menuAction, %function
 2479              	menuAction:
 2480              	.LFB67:
 597:ui.c          **** 
 598:ui.c          **** uint8_t fretToCalibrate = 0;
 599:ui.c          **** uint8_t whichFretArray[NUM_FRET_MEASUREMENTS] = {0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24};
 600:ui.c          **** void menuAction(enum direction action)
 601:ui.c          **** {
 2481              		.loc 1 601 0
 2482              		.cfi_startproc
 2483              		@ args = 0, pretend = 0, frame = 32
 2484              		@ frame_needed = 1, uses_anonymous_args = 0
 2485 0000 80B5     		push	{r7, lr}
 2486              		.cfi_def_cfa_offset 8
 2487              		.cfi_offset 7, -8
 2488              		.cfi_offset 14, -4
 2489 0002 8AB0     		sub	sp, sp, #40
 2490              		.cfi_def_cfa_offset 48
 2491 0004 02AF     		add	r7, sp, #8
 2492              		.cfi_def_cfa 7, 40
 2493 0006 0346     		mov	r3, r0
 2494 0008 FB71     		strb	r3, [r7, #7]
 602:ui.c          ****     uint8_t whatToDraw = 0;
 2495              		.loc 1 602 0
 2496 000a 0023     		movs	r3, #0
 2497 000c FB77     		strb	r3, [r7, #31]
 603:ui.c          ****     
 604:ui.c          ****     if (menuPosition[0][0] == MainMenu) //we are at the main menu
 2498              		.loc 1 604 0
 2499 000e 994B     		ldr	r3, .L200
 2500 0010 93F90030 		ldrsb	r3, [r3]
 2501 0014 002B     		cmp	r3, #0
 2502 0016 4ED1     		bne	.L101
 605:ui.c          ****     {
 606:ui.c          ****         //if we went up or down, switch the menu item
 607:ui.c          ****         if (action == Up)
 2503              		.loc 1 607 0
 2504 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2505 001a 032B     		cmp	r3, #3
 2506 001c 14D1     		bne	.L102
 608:ui.c          ****         {
 609:ui.c          ****             menuPosition[0][1]--;
 2507              		.loc 1 609 0
 2508 001e 954B     		ldr	r3, .L200
 2509 0020 93F90130 		ldrsb	r3, [r3, #1]
 2510 0024 DBB2     		uxtb	r3, r3
 2511 0026 013B     		subs	r3, r3, #1
 2512 0028 DBB2     		uxtb	r3, r3
 2513 002a 5AB2     		sxtb	r2, r3
 2514 002c 914B     		ldr	r3, .L200
 2515 002e 5A70     		strb	r2, [r3, #1]
 610:ui.c          ****             if (menuPosition[0][1] < 0)
 2516              		.loc 1 610 0
 2517 0030 904B     		ldr	r3, .L200
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 58


 2518 0032 93F90130 		ldrsb	r3, [r3, #1]
 2519 0036 002B     		cmp	r3, #0
 2520 0038 02DA     		bge	.L103
 611:ui.c          ****             {
 612:ui.c          ****                 menuPosition[0][1] = 0;
 2521              		.loc 1 612 0
 2522 003a 8E4B     		ldr	r3, .L200
 2523 003c 0022     		movs	r2, #0
 2524 003e 5A70     		strb	r2, [r3, #1]
 2525              	.L103:
 613:ui.c          ****             }
 614:ui.c          ****             whatToDraw = 1;
 2526              		.loc 1 614 0
 2527 0040 0123     		movs	r3, #1
 2528 0042 FB77     		strb	r3, [r7, #31]
 2529 0044 00F07DBE 		b	.L108
 2530              	.L102:
 615:ui.c          ****         }
 616:ui.c          ****         else if (action == Down)
 2531              		.loc 1 616 0
 2532 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2533 004a 022B     		cmp	r3, #2
 2534 004c 1BD1     		bne	.L105
 617:ui.c          ****         {
 618:ui.c          ****             menuPosition[0][1]++;
 2535              		.loc 1 618 0
 2536 004e 894B     		ldr	r3, .L200
 2537 0050 93F90130 		ldrsb	r3, [r3, #1]
 2538 0054 DBB2     		uxtb	r3, r3
 2539 0056 0133     		adds	r3, r3, #1
 2540 0058 DBB2     		uxtb	r3, r3
 2541 005a 5AB2     		sxtb	r2, r3
 2542 005c 854B     		ldr	r3, .L200
 2543 005e 5A70     		strb	r2, [r3, #1]
 619:ui.c          ****             if (menuPosition[0][1] >= numMainMenuItems)
 2544              		.loc 1 619 0
 2545 0060 844B     		ldr	r3, .L200
 2546 0062 93F90130 		ldrsb	r3, [r3, #1]
 2547 0066 1A46     		mov	r2, r3
 2548 0068 834B     		ldr	r3, .L200+4
 2549 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2550 006c 9A42     		cmp	r2, r3
 2551 006e 06DB     		blt	.L106
 620:ui.c          ****             {
 621:ui.c          ****                 menuPosition[0][1] = numMainMenuItems-1;
 2552              		.loc 1 621 0
 2553 0070 814B     		ldr	r3, .L200+4
 2554 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2555 0074 013B     		subs	r3, r3, #1
 2556 0076 DBB2     		uxtb	r3, r3
 2557 0078 5AB2     		sxtb	r2, r3
 2558 007a 7E4B     		ldr	r3, .L200
 2559 007c 5A70     		strb	r2, [r3, #1]
 2560              	.L106:
 622:ui.c          ****             }
 623:ui.c          ****             whatToDraw = 1;
 2561              		.loc 1 623 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 59


 2562 007e 0123     		movs	r3, #1
 2563 0080 FB77     		strb	r3, [r7, #31]
 2564 0082 00F05EBE 		b	.L108
 2565              	.L105:
 624:ui.c          ****         }
 625:ui.c          ****         else if ((action == Right) || (action == Enter))
 2566              		.loc 1 625 0
 2567 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2568 0088 012B     		cmp	r3, #1
 2569 008a 03D0     		beq	.L107
 2570              		.loc 1 625 0 is_stmt 0 discriminator 1
 2571 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2572 008e 042B     		cmp	r3, #4
 2573 0090 40F05786 		bne	.L108
 2574              	.L107:
 626:ui.c          ****         {
 627:ui.c          ****             //select this submenu from the main menu
 628:ui.c          ****             menuPosition[0][0] = menuPosition[0][1]+1; //now [0][0] = 1 means presetStore [0][0] = 
 2575              		.loc 1 628 0 is_stmt 1
 2576 0094 774B     		ldr	r3, .L200
 2577 0096 93F90130 		ldrsb	r3, [r3, #1]
 2578 009a DBB2     		uxtb	r3, r3
 2579 009c 0133     		adds	r3, r3, #1
 2580 009e DBB2     		uxtb	r3, r3
 2581 00a0 5AB2     		sxtb	r2, r3
 2582 00a2 744B     		ldr	r3, .L200
 2583 00a4 1A70     		strb	r2, [r3]
 629:ui.c          ****             whatToDraw = menuPosition[0][0]+1;
 2584              		.loc 1 629 0
 2585 00a6 734B     		ldr	r3, .L200
 2586 00a8 93F90030 		ldrsb	r3, [r3]
 2587 00ac DBB2     		uxtb	r3, r3
 2588 00ae 0133     		adds	r3, r3, #1
 2589 00b0 FB77     		strb	r3, [r7, #31]
 2590 00b2 00F046BE 		b	.L108
 2591              	.L101:
 630:ui.c          ****         }
 631:ui.c          ****         //ignore left button
 632:ui.c          ****     }
 633:ui.c          ****     else if (menuPosition[0][0] == CalibrationMenu) //we are at the calibration submenu
 2592              		.loc 1 633 0
 2593 00b6 6F4B     		ldr	r3, .L200
 2594 00b8 93F90030 		ldrsb	r3, [r3]
 2595 00bc 022B     		cmp	r3, #2
 2596 00be 64D1     		bne	.L109
 634:ui.c          ****     {
 635:ui.c          ****         //if we went up or down, switch the menu item
 636:ui.c          ****         if (action == Up)
 2597              		.loc 1 636 0
 2598 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2599 00c2 032B     		cmp	r3, #3
 2600 00c4 14D1     		bne	.L110
 637:ui.c          ****         {
 638:ui.c          ****             menuPosition[1][1]--;
 2601              		.loc 1 638 0
 2602 00c6 6B4B     		ldr	r3, .L200
 2603 00c8 93F90330 		ldrsb	r3, [r3, #3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 60


 2604 00cc DBB2     		uxtb	r3, r3
 2605 00ce 013B     		subs	r3, r3, #1
 2606 00d0 DBB2     		uxtb	r3, r3
 2607 00d2 5AB2     		sxtb	r2, r3
 2608 00d4 674B     		ldr	r3, .L200
 2609 00d6 DA70     		strb	r2, [r3, #3]
 639:ui.c          ****             if (menuPosition[1][1] < 0)
 2610              		.loc 1 639 0
 2611 00d8 664B     		ldr	r3, .L200
 2612 00da 93F90330 		ldrsb	r3, [r3, #3]
 2613 00de 002B     		cmp	r3, #0
 2614 00e0 02DA     		bge	.L111
 640:ui.c          ****             {
 641:ui.c          ****                 menuPosition[1][1] = 0;
 2615              		.loc 1 641 0
 2616 00e2 644B     		ldr	r3, .L200
 2617 00e4 0022     		movs	r2, #0
 2618 00e6 DA70     		strb	r2, [r3, #3]
 2619              	.L111:
 642:ui.c          ****             }
 643:ui.c          ****             whatToDraw = 3;
 2620              		.loc 1 643 0
 2621 00e8 0323     		movs	r3, #3
 2622 00ea FB77     		strb	r3, [r7, #31]
 2623 00ec 00F029BE 		b	.L108
 2624              	.L110:
 644:ui.c          ****         }
 645:ui.c          ****         else if (action == Down)
 2625              		.loc 1 645 0
 2626 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2627 00f2 022B     		cmp	r3, #2
 2628 00f4 1BD1     		bne	.L113
 646:ui.c          ****         {
 647:ui.c          ****             menuPosition[1][1]++;
 2629              		.loc 1 647 0
 2630 00f6 5F4B     		ldr	r3, .L200
 2631 00f8 93F90330 		ldrsb	r3, [r3, #3]
 2632 00fc DBB2     		uxtb	r3, r3
 2633 00fe 0133     		adds	r3, r3, #1
 2634 0100 DBB2     		uxtb	r3, r3
 2635 0102 5AB2     		sxtb	r2, r3
 2636 0104 5B4B     		ldr	r3, .L200
 2637 0106 DA70     		strb	r2, [r3, #3]
 648:ui.c          ****             if (menuPosition[1][1] >= numCalibrationItems)
 2638              		.loc 1 648 0
 2639 0108 5A4B     		ldr	r3, .L200
 2640 010a 93F90330 		ldrsb	r3, [r3, #3]
 2641 010e 1A46     		mov	r2, r3
 2642 0110 5A4B     		ldr	r3, .L200+8
 2643 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2644 0114 9A42     		cmp	r2, r3
 2645 0116 06DB     		blt	.L114
 649:ui.c          ****             {
 650:ui.c          ****                 menuPosition[1][1] = numCalibrationItems-1;
 2646              		.loc 1 650 0
 2647 0118 584B     		ldr	r3, .L200+8
 2648 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 61


 2649 011c 013B     		subs	r3, r3, #1
 2650 011e DBB2     		uxtb	r3, r3
 2651 0120 5AB2     		sxtb	r2, r3
 2652 0122 544B     		ldr	r3, .L200
 2653 0124 DA70     		strb	r2, [r3, #3]
 2654              	.L114:
 651:ui.c          ****             }
 652:ui.c          ****             whatToDraw = 3;
 2655              		.loc 1 652 0
 2656 0126 0323     		movs	r3, #3
 2657 0128 FB77     		strb	r3, [r7, #31]
 2658 012a 00F00ABE 		b	.L108
 2659              	.L113:
 653:ui.c          ****         }
 654:ui.c          ****         else if ((action == Right) || (action == Enter))
 2660              		.loc 1 654 0
 2661 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2662 0130 012B     		cmp	r3, #1
 2663 0132 02D0     		beq	.L115
 2664              		.loc 1 654 0 is_stmt 0 discriminator 1
 2665 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2666 0136 042B     		cmp	r3, #4
 2667 0138 1CD1     		bne	.L116
 2668              	.L115:
 655:ui.c          ****         {
 656:ui.c          ****             if (menuPosition[1][1] == 0)
 2669              		.loc 1 656 0 is_stmt 1
 2670 013a 4E4B     		ldr	r3, .L200
 2671 013c 93F90330 		ldrsb	r3, [r3, #3]
 2672 0140 002B     		cmp	r3, #0
 2673 0142 08D1     		bne	.L117
 657:ui.c          ****             {
 658:ui.c          ****                 //calibrate levers
 659:ui.c          ****                 menuPosition[0][0] = CalibrateLeversMenu; //means calibrating levers now
 2674              		.loc 1 659 0
 2675 0144 4B4B     		ldr	r3, .L200
 2676 0146 0422     		movs	r2, #4
 2677 0148 1A70     		strb	r2, [r3]
 660:ui.c          ****                 whatToDraw = 0;
 2678              		.loc 1 660 0
 2679 014a 0023     		movs	r3, #0
 2680 014c FB77     		strb	r3, [r7, #31]
 661:ui.c          ****                 enterLeverCalibrationMode();
 2681              		.loc 1 661 0
 2682 014e FFF7FEFF 		bl	enterLeverCalibrationMode
 656:ui.c          ****             {
 2683              		.loc 1 656 0
 2684 0152 00F0F3BD 		b	.L197
 2685              	.L117:
 662:ui.c          ****             }
 663:ui.c          ****             else if (menuPosition[1][1] == 1)
 2686              		.loc 1 663 0
 2687 0156 474B     		ldr	r3, .L200
 2688 0158 93F90330 		ldrsb	r3, [r3, #3]
 2689 015c 012B     		cmp	r3, #1
 2690 015e 40F0ED85 		bne	.L197
 664:ui.c          ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 62


 665:ui.c          ****                 //calibrate bar slider frets
 666:ui.c          ****                 menuPosition[0][0] = CalibrateFretsMenu; //means calibrating frets now
 2691              		.loc 1 666 0
 2692 0162 444B     		ldr	r3, .L200
 2693 0164 0522     		movs	r2, #5
 2694 0166 1A70     		strb	r2, [r3]
 667:ui.c          ****                 whatToDraw = 0;
 2695              		.loc 1 667 0
 2696 0168 0023     		movs	r3, #0
 2697 016a FB77     		strb	r3, [r7, #31]
 668:ui.c          ****                 enterFretCalibrationMode();
 2698              		.loc 1 668 0
 2699 016c FFF7FEFF 		bl	enterFretCalibrationMode
 656:ui.c          ****             {
 2700              		.loc 1 656 0
 2701 0170 00F0E4BD 		b	.L197
 2702              	.L116:
 669:ui.c          ****             }
 670:ui.c          ****         }
 671:ui.c          ****         else if (action == Left) 
 2703              		.loc 1 671 0
 2704 0174 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2705 0176 002B     		cmp	r3, #0
 2706 0178 40F0E385 		bne	.L108
 672:ui.c          ****         {
 673:ui.c          ****             //go back to main menu
 674:ui.c          ****             menuPosition[0][0] = 0;
 2707              		.loc 1 674 0
 2708 017c 3D4B     		ldr	r3, .L200
 2709 017e 0022     		movs	r2, #0
 2710 0180 1A70     		strb	r2, [r3]
 675:ui.c          ****             whatToDraw = 1;
 2711              		.loc 1 675 0
 2712 0182 0123     		movs	r3, #1
 2713 0184 FB77     		strb	r3, [r7, #31]
 2714 0186 00F0DCBD 		b	.L108
 2715              	.L109:
 676:ui.c          ****         }
 677:ui.c          ****     }
 678:ui.c          ****     else if (menuPosition[0][0] == SettingsMenu) //we are at the settings submenu
 2716              		.loc 1 678 0
 2717 018a 3A4B     		ldr	r3, .L200
 2718 018c 93F90030 		ldrsb	r3, [r3]
 2719 0190 032B     		cmp	r3, #3
 2720 0192 40F0BD82 		bne	.L119
 679:ui.c          ****     {
 680:ui.c          ****         //if we went up or down, switch the menu item
 681:ui.c          ****         if (action == Up)
 2721              		.loc 1 681 0
 2722 0196 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2723 0198 032B     		cmp	r3, #3
 2724 019a 14D1     		bne	.L120
 682:ui.c          ****         {
 683:ui.c          ****             menuPosition[2][1]--;
 2725              		.loc 1 683 0
 2726 019c 354B     		ldr	r3, .L200
 2727 019e 93F90530 		ldrsb	r3, [r3, #5]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 63


 2728 01a2 DBB2     		uxtb	r3, r3
 2729 01a4 013B     		subs	r3, r3, #1
 2730 01a6 DBB2     		uxtb	r3, r3
 2731 01a8 5AB2     		sxtb	r2, r3
 2732 01aa 324B     		ldr	r3, .L200
 2733 01ac 5A71     		strb	r2, [r3, #5]
 684:ui.c          ****             if (menuPosition[2][1] < 0)
 2734              		.loc 1 684 0
 2735 01ae 314B     		ldr	r3, .L200
 2736 01b0 93F90530 		ldrsb	r3, [r3, #5]
 2737 01b4 002B     		cmp	r3, #0
 2738 01b6 02DA     		bge	.L121
 685:ui.c          ****             {
 686:ui.c          ****                 menuPosition[2][1] = 0;
 2739              		.loc 1 686 0
 2740 01b8 2E4B     		ldr	r3, .L200
 2741 01ba 0022     		movs	r2, #0
 2742 01bc 5A71     		strb	r2, [r3, #5]
 2743              	.L121:
 687:ui.c          ****             }
 688:ui.c          ****             whatToDraw = 4;
 2744              		.loc 1 688 0
 2745 01be 0423     		movs	r3, #4
 2746 01c0 FB77     		strb	r3, [r7, #31]
 2747 01c2 00F0BEBD 		b	.L108
 2748              	.L120:
 689:ui.c          ****         }
 690:ui.c          ****         else if (action == Down)
 2749              		.loc 1 690 0
 2750 01c6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2751 01c8 022B     		cmp	r3, #2
 2752 01ca 1BD1     		bne	.L123
 691:ui.c          ****         {
 692:ui.c          ****             menuPosition[2][1]++;
 2753              		.loc 1 692 0
 2754 01cc 294B     		ldr	r3, .L200
 2755 01ce 93F90530 		ldrsb	r3, [r3, #5]
 2756 01d2 DBB2     		uxtb	r3, r3
 2757 01d4 0133     		adds	r3, r3, #1
 2758 01d6 DBB2     		uxtb	r3, r3
 2759 01d8 5AB2     		sxtb	r2, r3
 2760 01da 264B     		ldr	r3, .L200
 2761 01dc 5A71     		strb	r2, [r3, #5]
 693:ui.c          ****             if (menuPosition[2][1] >= numSettingsItems)
 2762              		.loc 1 693 0
 2763 01de 254B     		ldr	r3, .L200
 2764 01e0 93F90530 		ldrsb	r3, [r3, #5]
 2765 01e4 1A46     		mov	r2, r3
 2766 01e6 264B     		ldr	r3, .L200+12
 2767 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2768 01ea 9A42     		cmp	r2, r3
 2769 01ec 06DB     		blt	.L124
 694:ui.c          ****             {
 695:ui.c          ****                 menuPosition[2][1] = numSettingsItems-1;
 2770              		.loc 1 695 0
 2771 01ee 244B     		ldr	r3, .L200+12
 2772 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 64


 2773 01f2 013B     		subs	r3, r3, #1
 2774 01f4 DBB2     		uxtb	r3, r3
 2775 01f6 5AB2     		sxtb	r2, r3
 2776 01f8 1E4B     		ldr	r3, .L200
 2777 01fa 5A71     		strb	r2, [r3, #5]
 2778              	.L124:
 696:ui.c          ****             }
 697:ui.c          ****             whatToDraw = 4;
 2779              		.loc 1 697 0
 2780 01fc 0423     		movs	r3, #4
 2781 01fe FB77     		strb	r3, [r7, #31]
 2782 0200 00F09FBD 		b	.L108
 2783              	.L123:
 698:ui.c          ****         }
 699:ui.c          ****         else if ((action == Right) || (action == Enter))
 2784              		.loc 1 699 0
 2785 0204 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2786 0206 012B     		cmp	r3, #1
 2787 0208 03D0     		beq	.L125
 2788              		.loc 1 699 0 is_stmt 0 discriminator 1
 2789 020a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2790 020c 042B     		cmp	r3, #4
 2791 020e 40F07582 		bne	.L126
 2792              	.L125:
 700:ui.c          ****         {
 701:ui.c          ****             if (menuPosition[2][1] == 0)
 2793              		.loc 1 701 0 is_stmt 1
 2794 0212 184B     		ldr	r3, .L200
 2795 0214 93F90530 		ldrsb	r3, [r3, #5]
 2796 0218 002B     		cmp	r3, #0
 2797 021a 3DD1     		bne	.L127
 702:ui.c          ****             {
 703:ui.c          ****                 //transpose
 704:ui.c          ****                 menuPosition[0][0] = TransposeMenu;
 2798              		.loc 1 704 0
 2799 021c 154B     		ldr	r3, .L200
 2800 021e 0622     		movs	r2, #6
 2801 0220 1A70     		strb	r2, [r3]
 705:ui.c          ****                 Decoder_1_Start();
 2802              		.loc 1 705 0
 2803 0222 FFF7FEFF 		bl	Decoder_1_Start
 706:ui.c          ****                 whatToDraw = 0;
 2804              		.loc 1 706 0
 2805 0226 0023     		movs	r3, #0
 2806 0228 FB77     		strb	r3, [r7, #31]
 707:ui.c          ****                 encoderWatch = 1;
 2807              		.loc 1 707 0
 2808 022a 164B     		ldr	r3, .L200+16
 2809 022c 0122     		movs	r2, #1
 2810 022e 1A70     		strb	r2, [r3]
 708:ui.c          ****                 OLEDclear(128, 64);
 2811              		.loc 1 708 0
 2812 0230 4021     		movs	r1, #64
 2813 0232 8020     		movs	r0, #128
 2814 0234 FFF7FEFF 		bl	OLEDclear
 709:ui.c          ****                 myGFX_setFont(2);
 2815              		.loc 1 709 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 65


 2816 0238 0220     		movs	r0, #2
 2817 023a FFF7FEFF 		bl	myGFX_setFont
 710:ui.c          ****                 OLEDtextColor(1, 0);
 2818              		.loc 1 710 0
 2819 023e 0021     		movs	r1, #0
 2820 0240 0120     		movs	r0, #1
 2821 0242 FFF7FEFF 		bl	OLEDtextColor
 711:ui.c          ****                 OLEDwriteString("VALUE KNOB SETS", 15, 0, FirstLine);
 2822              		.loc 1 711 0
 2823 0246 0023     		movs	r3, #0
 2824 0248 0022     		movs	r2, #0
 2825 024a 0F21     		movs	r1, #15
 2826 024c 0E48     		ldr	r0, .L200+20
 2827 024e FFF7FEFF 		bl	OLEDwriteString
 712:ui.c          ****                 OLEDwriteString("TRANSPOSITION  ", 15, 0, SecondLine);
 2828              		.loc 1 712 0
 2829 0252 0123     		movs	r3, #1
 2830 0254 0022     		movs	r2, #0
 2831 0256 0F21     		movs	r1, #15
 2832 0258 0C48     		ldr	r0, .L200+24
 2833 025a FFF7FEFF 		bl	OLEDwriteString
 713:ui.c          ****                 prevEncoderVal = 127;
 2834              		.loc 1 713 0
 2835 025e 0C4B     		ldr	r3, .L200+28
 2836 0260 7F22     		movs	r2, #127
 2837 0262 1A70     		strb	r2, [r3]
 714:ui.c          ****                 Decoder_1_SetPosition(0);
 2838              		.loc 1 714 0
 2839 0264 0020     		movs	r0, #0
 2840 0266 FFF7FEFF 		bl	Decoder_1_SetPosition
 715:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2841              		.loc 1 715 0
 2842 026a 0A4B     		ldr	r3, .L200+32
 2843 026c 0122     		movs	r2, #1
 2844 026e 1A70     		strb	r2, [r3]
 701:ui.c          ****             {
 2845              		.loc 1 701 0
 2846 0270 00F066BD 		b	.L198
 2847              	.L201:
 2848              		.align	2
 2849              	.L200:
 2850 0274 00000000 		.word	menuPosition
 2851 0278 00000000 		.word	numMainMenuItems
 2852 027c 00000000 		.word	numCalibrationItems
 2853 0280 00000000 		.word	numSettingsItems
 2854 0284 00000000 		.word	encoderWatch
 2855 0288 50010000 		.word	.LC17
 2856 028c 60010000 		.word	.LC18
 2857 0290 00000000 		.word	prevEncoderVal
 2858 0294 00000000 		.word	mainOLEDWaitingToSend
 2859              	.L127:
 716:ui.c          ****             }
 717:ui.c          ****             else if (menuPosition[2][1] == 1)
 2860              		.loc 1 717 0
 2861 0298 A74B     		ldr	r3, .L202
 2862 029a 93F90530 		ldrsb	r3, [r3, #5]
 2863 029e 012B     		cmp	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 66


 2864 02a0 46D1     		bne	.L129
 718:ui.c          ****             {
 719:ui.c          ****                 //octave action setting
 720:ui.c          ****                 menuPosition[0][0] = OctaveActionMenu;
 2865              		.loc 1 720 0
 2866 02a2 A54B     		ldr	r3, .L202
 2867 02a4 0722     		movs	r2, #7
 2868 02a6 1A70     		strb	r2, [r3]
 721:ui.c          ****       
 722:ui.c          ****                 OLEDclear(128, 64);
 2869              		.loc 1 722 0
 2870 02a8 4021     		movs	r1, #64
 2871 02aa 8020     		movs	r0, #128
 2872 02ac FFF7FEFF 		bl	OLEDclear
 723:ui.c          ****                 myGFX_setFont(2);
 2873              		.loc 1 723 0
 2874 02b0 0220     		movs	r0, #2
 2875 02b2 FFF7FEFF 		bl	myGFX_setFont
 724:ui.c          ****                 OLEDtextColor(1, 0);
 2876              		.loc 1 724 0
 2877 02b6 0021     		movs	r1, #0
 2878 02b8 0120     		movs	r0, #1
 2879 02ba FFF7FEFF 		bl	OLEDtextColor
 725:ui.c          ****                 OLEDwriteString("OCTAVE ACTION  ", 15, 0, FirstLine);
 2880              		.loc 1 725 0
 2881 02be 0023     		movs	r3, #0
 2882 02c0 0022     		movs	r2, #0
 2883 02c2 0F21     		movs	r1, #15
 2884 02c4 9D48     		ldr	r0, .L202+4
 2885 02c6 FFF7FEFF 		bl	OLEDwriteString
 726:ui.c          ****                
 727:ui.c          ****                 OLEDtextColor(octaveAction, !octaveAction);
 2886              		.loc 1 727 0
 2887 02ca 9D4B     		ldr	r3, .L202+8
 2888 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2889 02ce 9AB2     		uxth	r2, r3
 2890 02d0 9B4B     		ldr	r3, .L202+8
 2891 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2892 02d4 002B     		cmp	r3, #0
 2893 02d6 0CBF     		ite	eq
 2894 02d8 0123     		moveq	r3, #1
 2895 02da 0023     		movne	r3, #0
 2896 02dc DBB2     		uxtb	r3, r3
 2897 02de 9BB2     		uxth	r3, r3
 2898 02e0 1946     		mov	r1, r3
 2899 02e2 1046     		mov	r0, r2
 2900 02e4 FFF7FEFF 		bl	OLEDtextColor
 728:ui.c          ****                 OLEDwriteString("ON NEXT NOTE   ", 15, 0, SecondLine);
 2901              		.loc 1 728 0
 2902 02e8 0123     		movs	r3, #1
 2903 02ea 0022     		movs	r2, #0
 2904 02ec 0F21     		movs	r1, #15
 2905 02ee 9548     		ldr	r0, .L202+12
 2906 02f0 FFF7FEFF 		bl	OLEDwriteString
 729:ui.c          ****                 OLEDtextColor(!octaveAction, octaveAction);
 2907              		.loc 1 729 0
 2908 02f4 924B     		ldr	r3, .L202+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 67


 2909 02f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2910 02f8 002B     		cmp	r3, #0
 2911 02fa 0CBF     		ite	eq
 2912 02fc 0123     		moveq	r3, #1
 2913 02fe 0023     		movne	r3, #0
 2914 0300 DBB2     		uxtb	r3, r3
 2915 0302 9AB2     		uxth	r2, r3
 2916 0304 8E4B     		ldr	r3, .L202+8
 2917 0306 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2918 0308 9BB2     		uxth	r3, r3
 2919 030a 1946     		mov	r1, r3
 2920 030c 1046     		mov	r0, r2
 2921 030e FFF7FEFF 		bl	OLEDtextColor
 730:ui.c          ****                 OLEDwriteString("IMMEDIATE      ", 15, 0, ThirdLine);
 2922              		.loc 1 730 0
 2923 0312 0223     		movs	r3, #2
 2924 0314 0022     		movs	r2, #0
 2925 0316 0F21     		movs	r1, #15
 2926 0318 8B48     		ldr	r0, .L202+16
 2927 031a FFF7FEFF 		bl	OLEDwriteString
 731:ui.c          ****                 OLEDtextColor(1, 0);
 2928              		.loc 1 731 0
 2929 031e 0021     		movs	r1, #0
 2930 0320 0120     		movs	r0, #1
 2931 0322 FFF7FEFF 		bl	OLEDtextColor
 732:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2932              		.loc 1 732 0
 2933 0326 894B     		ldr	r3, .L202+20
 2934 0328 0122     		movs	r2, #1
 2935 032a 1A70     		strb	r2, [r3]
 701:ui.c          ****             {
 2936              		.loc 1 701 0
 2937 032c 00F008BD 		b	.L198
 2938              	.L129:
 733:ui.c          ****             }
 734:ui.c          ****             else if (menuPosition[2][1] == 2)
 2939              		.loc 1 734 0
 2940 0330 814B     		ldr	r3, .L202
 2941 0332 93F90530 		ldrsb	r3, [r3, #5]
 2942 0336 022B     		cmp	r3, #2
 2943 0338 2BD1     		bne	.L130
 735:ui.c          ****             {
 736:ui.c          ****                 //dead zone setting
 737:ui.c          ****                 menuPosition[0][0] = DeadzonesMenu;
 2944              		.loc 1 737 0
 2945 033a 7F4B     		ldr	r3, .L202
 2946 033c 0822     		movs	r2, #8
 2947 033e 1A70     		strb	r2, [r3]
 738:ui.c          ****                 Decoder_1_Start();
 2948              		.loc 1 738 0
 2949 0340 FFF7FEFF 		bl	Decoder_1_Start
 739:ui.c          ****                 whatToDraw = 0;
 2950              		.loc 1 739 0
 2951 0344 0023     		movs	r3, #0
 2952 0346 FB77     		strb	r3, [r7, #31]
 740:ui.c          ****                 encoderWatch = 1;
 2953              		.loc 1 740 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 68


 2954 0348 814B     		ldr	r3, .L202+24
 2955 034a 0122     		movs	r2, #1
 2956 034c 1A70     		strb	r2, [r3]
 741:ui.c          ****                 OLEDclear(128, 64);
 2957              		.loc 1 741 0
 2958 034e 4021     		movs	r1, #64
 2959 0350 8020     		movs	r0, #128
 2960 0352 FFF7FEFF 		bl	OLEDclear
 742:ui.c          ****                 myGFX_setFont(2);
 2961              		.loc 1 742 0
 2962 0356 0220     		movs	r0, #2
 2963 0358 FFF7FEFF 		bl	myGFX_setFont
 743:ui.c          ****                 OLEDtextColor(1, 0);
 2964              		.loc 1 743 0
 2965 035c 0021     		movs	r1, #0
 2966 035e 0120     		movs	r0, #1
 2967 0360 FFF7FEFF 		bl	OLEDtextColor
 744:ui.c          ****                 OLEDwriteString("VALUE KNOB SETS", 15, 0, FirstLine);
 2968              		.loc 1 744 0
 2969 0364 0023     		movs	r3, #0
 2970 0366 0022     		movs	r2, #0
 2971 0368 0F21     		movs	r1, #15
 2972 036a 7A48     		ldr	r0, .L202+28
 2973 036c FFF7FEFF 		bl	OLEDwriteString
 745:ui.c          ****                 OLEDwriteString("LEVER DEADZONES", 15, 0, SecondLine);
 2974              		.loc 1 745 0
 2975 0370 0123     		movs	r3, #1
 2976 0372 0022     		movs	r2, #0
 2977 0374 0F21     		movs	r1, #15
 2978 0376 7848     		ldr	r0, .L202+32
 2979 0378 FFF7FEFF 		bl	OLEDwriteString
 746:ui.c          ****                 prevEncoderVal = 127;
 2980              		.loc 1 746 0
 2981 037c 774B     		ldr	r3, .L202+36
 2982 037e 7F22     		movs	r2, #127
 2983 0380 1A70     		strb	r2, [r3]
 747:ui.c          ****                 Decoder_1_SetPosition(0);
 2984              		.loc 1 747 0
 2985 0382 0020     		movs	r0, #0
 2986 0384 FFF7FEFF 		bl	Decoder_1_SetPosition
 748:ui.c          ****                 mainOLEDWaitingToSend = 1;
 2987              		.loc 1 748 0
 2988 0388 704B     		ldr	r3, .L202+20
 2989 038a 0122     		movs	r2, #1
 2990 038c 1A70     		strb	r2, [r3]
 701:ui.c          ****             {
 2991              		.loc 1 701 0
 2992 038e 00F0D7BC 		b	.L198
 2993              	.L130:
 749:ui.c          ****             }
 750:ui.c          ****             else if (menuPosition[2][1] == 3)
 2994              		.loc 1 750 0
 2995 0392 694B     		ldr	r3, .L202
 2996 0394 93F90530 		ldrsb	r3, [r3, #5]
 2997 0398 032B     		cmp	r3, #3
 2998 039a 34D1     		bne	.L131
 751:ui.c          ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 69


 752:ui.c          ****                 //dead zone setting
 753:ui.c          ****                 menuPosition[0][0] = SliderRepMenu;
 2999              		.loc 1 753 0
 3000 039c 664B     		ldr	r3, .L202
 3001 039e 0922     		movs	r2, #9
 3002 03a0 1A70     		strb	r2, [r3]
 754:ui.c          ****                 Decoder_1_Start();
 3003              		.loc 1 754 0
 3004 03a2 FFF7FEFF 		bl	Decoder_1_Start
 755:ui.c          ****                 whatToDraw = 0;
 3005              		.loc 1 755 0
 3006 03a6 0023     		movs	r3, #0
 3007 03a8 FB77     		strb	r3, [r7, #31]
 756:ui.c          ****                 encoderWatch = 1;
 3008              		.loc 1 756 0
 3009 03aa 694B     		ldr	r3, .L202+24
 3010 03ac 0122     		movs	r2, #1
 3011 03ae 1A70     		strb	r2, [r3]
 757:ui.c          ****                 OLEDclear(128, 64);
 3012              		.loc 1 757 0
 3013 03b0 4021     		movs	r1, #64
 3014 03b2 8020     		movs	r0, #128
 3015 03b4 FFF7FEFF 		bl	OLEDclear
 758:ui.c          ****                 myGFX_setFont(2);
 3016              		.loc 1 758 0
 3017 03b8 0220     		movs	r0, #2
 3018 03ba FFF7FEFF 		bl	myGFX_setFont
 759:ui.c          ****                 OLEDtextColor(1, 0);
 3019              		.loc 1 759 0
 3020 03be 0021     		movs	r1, #0
 3021 03c0 0120     		movs	r0, #1
 3022 03c2 FFF7FEFF 		bl	OLEDtextColor
 760:ui.c          ****                 OLEDwriteString("SET WHICH      ", 15, 0, FirstLine);
 3023              		.loc 1 760 0
 3024 03c6 0023     		movs	r3, #0
 3025 03c8 0022     		movs	r2, #0
 3026 03ca 0F21     		movs	r1, #15
 3027 03cc 6448     		ldr	r0, .L202+40
 3028 03ce FFF7FEFF 		bl	OLEDwriteString
 761:ui.c          ****                 OLEDwriteString("STRINGS SLIDERS", 15, 0, SecondLine);
 3029              		.loc 1 761 0
 3030 03d2 0123     		movs	r3, #1
 3031 03d4 0022     		movs	r2, #0
 3032 03d6 0F21     		movs	r1, #15
 3033 03d8 6248     		ldr	r0, .L202+44
 3034 03da FFF7FEFF 		bl	OLEDwriteString
 762:ui.c          ****                 OLEDwriteString("REPRESENT(1-10)", 15, 0, ThirdLine);
 3035              		.loc 1 762 0
 3036 03de 0223     		movs	r3, #2
 3037 03e0 0022     		movs	r2, #0
 3038 03e2 0F21     		movs	r1, #15
 3039 03e4 6048     		ldr	r0, .L202+48
 3040 03e6 FFF7FEFF 		bl	OLEDwriteString
 763:ui.c          ****                 prevEncoderVal = 127;
 3041              		.loc 1 763 0
 3042 03ea 5C4B     		ldr	r3, .L202+36
 3043 03ec 7F22     		movs	r2, #127
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 70


 3044 03ee 1A70     		strb	r2, [r3]
 764:ui.c          ****                 Decoder_1_SetPosition(0);
 3045              		.loc 1 764 0
 3046 03f0 0020     		movs	r0, #0
 3047 03f2 FFF7FEFF 		bl	Decoder_1_SetPosition
 765:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3048              		.loc 1 765 0
 3049 03f6 554B     		ldr	r3, .L202+20
 3050 03f8 0122     		movs	r2, #1
 3051 03fa 1A70     		strb	r2, [r3]
 766:ui.c          ****                 editingSliderRepString = 0;
 3052              		.loc 1 766 0
 3053 03fc 5B4B     		ldr	r3, .L202+52
 3054 03fe 0022     		movs	r2, #0
 3055 0400 1A70     		strb	r2, [r3]
 701:ui.c          ****             {
 3056              		.loc 1 701 0
 3057 0402 00F09DBC 		b	.L198
 3058              	.L131:
 767:ui.c          ****             }
 768:ui.c          ****             else if (menuPosition[2][1] == 5)
 3059              		.loc 1 768 0
 3060 0406 4C4B     		ldr	r3, .L202
 3061 0408 93F90530 		ldrsb	r3, [r3, #5]
 3062 040c 052B     		cmp	r3, #5
 3063 040e 40F0BB80 		bne	.L132
 769:ui.c          ****             {
 770:ui.c          ****                 //midi send setting
 771:ui.c          ****                 menuPosition[0][0] = MidiSendMenu;
 3064              		.loc 1 771 0
 3065 0412 494B     		ldr	r3, .L202
 3066 0414 0A22     		movs	r2, #10
 3067 0416 1A70     		strb	r2, [r3]
 772:ui.c          ****                 whatToDraw = 0;
 3068              		.loc 1 772 0
 3069 0418 0023     		movs	r3, #0
 3070 041a FB77     		strb	r3, [r7, #31]
 773:ui.c          ****                 OLEDclear(128, 64);
 3071              		.loc 1 773 0
 3072 041c 4021     		movs	r1, #64
 3073 041e 8020     		movs	r0, #128
 3074 0420 FFF7FEFF 		bl	OLEDclear
 774:ui.c          ****                 myGFX_setFont(2);
 3075              		.loc 1 774 0
 3076 0424 0220     		movs	r0, #2
 3077 0426 FFF7FEFF 		bl	myGFX_setFont
 775:ui.c          ****                 OLEDtextColor(1, 0);
 3078              		.loc 1 775 0
 3079 042a 0021     		movs	r1, #0
 3080 042c 0120     		movs	r0, #1
 3081 042e FFF7FEFF 		bl	OLEDtextColor
 776:ui.c          ****                 OLEDwriteString("SEND MIDI ", 10, 0, FirstLine);
 3082              		.loc 1 776 0
 3083 0432 0023     		movs	r3, #0
 3084 0434 0022     		movs	r2, #0
 3085 0436 0A21     		movs	r1, #10
 3086 0438 4D48     		ldr	r0, .L202+56
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 71


 3087 043a FFF7FEFF 		bl	OLEDwriteString
 777:ui.c          ****                 GFXfillRect(&theGFX, 76, 0, 37, 16, !whichMidiSendSelected);
 3088              		.loc 1 777 0
 3089 043e 4D4B     		ldr	r3, .L202+60
 3090 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3091 0442 002B     		cmp	r3, #0
 3092 0444 0CBF     		ite	eq
 3093 0446 0123     		moveq	r3, #1
 3094 0448 0023     		movne	r3, #0
 3095 044a DBB2     		uxtb	r3, r3
 3096 044c 9BB2     		uxth	r3, r3
 3097 044e 0193     		str	r3, [sp, #4]
 3098 0450 1023     		movs	r3, #16
 3099 0452 0093     		str	r3, [sp]
 3100 0454 2523     		movs	r3, #37
 3101 0456 0022     		movs	r2, #0
 3102 0458 4C21     		movs	r1, #76
 3103 045a 4748     		ldr	r0, .L202+64
 3104 045c FFF7FEFF 		bl	GFXfillRect
 778:ui.c          ****                 OLEDtextColor(whichMidiSendSelected, !whichMidiSendSelected);
 3105              		.loc 1 778 0
 3106 0460 444B     		ldr	r3, .L202+60
 3107 0462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3108 0464 9AB2     		uxth	r2, r3
 3109 0466 434B     		ldr	r3, .L202+60
 3110 0468 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3111 046a 002B     		cmp	r3, #0
 3112 046c 0CBF     		ite	eq
 3113 046e 0123     		moveq	r3, #1
 3114 0470 0023     		movne	r3, #0
 3115 0472 DBB2     		uxtb	r3, r3
 3116 0474 9BB2     		uxth	r3, r3
 3117 0476 1946     		mov	r1, r3
 3118 0478 1046     		mov	r0, r2
 3119 047a FFF7FEFF 		bl	OLEDtextColor
 779:ui.c          ****                 if (midiSendOn)
 3120              		.loc 1 779 0
 3121 047e 3F4B     		ldr	r3, .L202+68
 3122 0480 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3123 0482 002B     		cmp	r3, #0
 3124 0484 08D0     		beq	.L133
 780:ui.c          ****                 {
 781:ui.c          ****                     GFXwrite(&theGFX, 79);
 3125              		.loc 1 781 0
 3126 0486 4F21     		movs	r1, #79
 3127 0488 3B48     		ldr	r0, .L202+64
 3128 048a FFF7FEFF 		bl	GFXwrite
 782:ui.c          ****                     GFXwrite(&theGFX, 78);
 3129              		.loc 1 782 0
 3130 048e 4E21     		movs	r1, #78
 3131 0490 3948     		ldr	r0, .L202+64
 3132 0492 FFF7FEFF 		bl	GFXwrite
 3133 0496 0BE0     		b	.L134
 3134              	.L133:
 783:ui.c          ****                 }
 784:ui.c          ****                 else
 785:ui.c          ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 72


 786:ui.c          ****                     GFXwrite(&theGFX, 79);
 3135              		.loc 1 786 0
 3136 0498 4F21     		movs	r1, #79
 3137 049a 3748     		ldr	r0, .L202+64
 3138 049c FFF7FEFF 		bl	GFXwrite
 787:ui.c          ****                     GFXwrite(&theGFX, 70);
 3139              		.loc 1 787 0
 3140 04a0 4621     		movs	r1, #70
 3141 04a2 3548     		ldr	r0, .L202+64
 3142 04a4 FFF7FEFF 		bl	GFXwrite
 788:ui.c          ****                     GFXwrite(&theGFX, 70);
 3143              		.loc 1 788 0
 3144 04a8 4621     		movs	r1, #70
 3145 04aa 3348     		ldr	r0, .L202+64
 3146 04ac FFF7FEFF 		bl	GFXwrite
 3147              	.L134:
 789:ui.c          ****                 }
 790:ui.c          ****                 
 791:ui.c          ****                 OLEDtextColor(1, 0);
 3148              		.loc 1 791 0
 3149 04b0 0021     		movs	r1, #0
 3150 04b2 0120     		movs	r0, #1
 3151 04b4 FFF7FEFF 		bl	OLEDtextColor
 792:ui.c          ****                 OLEDwriteString("SEND BAR  ", 10, 0, SecondLine);
 3152              		.loc 1 792 0
 3153 04b8 0123     		movs	r3, #1
 3154 04ba 0022     		movs	r2, #0
 3155 04bc 0A21     		movs	r1, #10
 3156 04be 3048     		ldr	r0, .L202+72
 3157 04c0 FFF7FEFF 		bl	OLEDwriteString
 793:ui.c          ****                 
 794:ui.c          ****                 GFXfillRect(&theGFX, 76, 16, 37, 16, whichMidiSendSelected);
 3158              		.loc 1 794 0
 3159 04c4 2B4B     		ldr	r3, .L202+60
 3160 04c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3161 04c8 9BB2     		uxth	r3, r3
 3162 04ca 0193     		str	r3, [sp, #4]
 3163 04cc 1023     		movs	r3, #16
 3164 04ce 0093     		str	r3, [sp]
 3165 04d0 2523     		movs	r3, #37
 3166 04d2 1022     		movs	r2, #16
 3167 04d4 4C21     		movs	r1, #76
 3168 04d6 2848     		ldr	r0, .L202+64
 3169 04d8 FFF7FEFF 		bl	GFXfillRect
 795:ui.c          ****                 OLEDtextColor(!whichMidiSendSelected, whichMidiSendSelected);
 3170              		.loc 1 795 0
 3171 04dc 254B     		ldr	r3, .L202+60
 3172 04de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3173 04e0 002B     		cmp	r3, #0
 3174 04e2 0CBF     		ite	eq
 3175 04e4 0123     		moveq	r3, #1
 3176 04e6 0023     		movne	r3, #0
 3177 04e8 DBB2     		uxtb	r3, r3
 3178 04ea 9AB2     		uxth	r2, r3
 3179 04ec 214B     		ldr	r3, .L202+60
 3180 04ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3181 04f0 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 73


 3182 04f2 1946     		mov	r1, r3
 3183 04f4 1046     		mov	r0, r2
 3184 04f6 FFF7FEFF 		bl	OLEDtextColor
 796:ui.c          ****                 if (midiBarSendOn)
 3185              		.loc 1 796 0
 3186 04fa 224B     		ldr	r3, .L202+76
 3187 04fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3188 04fe 002B     		cmp	r3, #0
 3189 0500 08D0     		beq	.L135
 797:ui.c          ****                 {
 798:ui.c          ****                     GFXwrite(&theGFX, 79);
 3190              		.loc 1 798 0
 3191 0502 4F21     		movs	r1, #79
 3192 0504 1C48     		ldr	r0, .L202+64
 3193 0506 FFF7FEFF 		bl	GFXwrite
 799:ui.c          ****                     GFXwrite(&theGFX, 78);
 3194              		.loc 1 799 0
 3195 050a 4E21     		movs	r1, #78
 3196 050c 1A48     		ldr	r0, .L202+64
 3197 050e FFF7FEFF 		bl	GFXwrite
 3198 0512 0BE0     		b	.L136
 3199              	.L135:
 800:ui.c          ****                 }
 801:ui.c          ****                 else
 802:ui.c          ****                 {
 803:ui.c          ****                     GFXwrite(&theGFX, 79);
 3200              		.loc 1 803 0
 3201 0514 4F21     		movs	r1, #79
 3202 0516 1848     		ldr	r0, .L202+64
 3203 0518 FFF7FEFF 		bl	GFXwrite
 804:ui.c          ****                     GFXwrite(&theGFX, 70);
 3204              		.loc 1 804 0
 3205 051c 4621     		movs	r1, #70
 3206 051e 1648     		ldr	r0, .L202+64
 3207 0520 FFF7FEFF 		bl	GFXwrite
 805:ui.c          ****                     GFXwrite(&theGFX, 70);
 3208              		.loc 1 805 0
 3209 0524 4621     		movs	r1, #70
 3210 0526 1448     		ldr	r0, .L202+64
 3211 0528 FFF7FEFF 		bl	GFXwrite
 3212              	.L136:
 806:ui.c          ****                 }
 807:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3213              		.loc 1 807 0
 3214 052c 074B     		ldr	r3, .L202+20
 3215 052e 0122     		movs	r2, #1
 3216 0530 1A70     		strb	r2, [r3]
 701:ui.c          ****             {
 3217              		.loc 1 701 0
 3218 0532 00F005BC 		b	.L198
 3219              	.L203:
 3220 0536 00BF     		.align	2
 3221              	.L202:
 3222 0538 00000000 		.word	menuPosition
 3223 053c 70010000 		.word	.LC19
 3224 0540 00000000 		.word	octaveAction
 3225 0544 80010000 		.word	.LC20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 74


 3226 0548 90010000 		.word	.LC21
 3227 054c 00000000 		.word	mainOLEDWaitingToSend
 3228 0550 00000000 		.word	encoderWatch
 3229 0554 50010000 		.word	.LC17
 3230 0558 A0010000 		.word	.LC22
 3231 055c 00000000 		.word	prevEncoderVal
 3232 0560 B0010000 		.word	.LC23
 3233 0564 C0010000 		.word	.LC24
 3234 0568 D0010000 		.word	.LC25
 3235 056c 00000000 		.word	editingSliderRepString
 3236 0570 E0010000 		.word	.LC26
 3237 0574 00000000 		.word	whichMidiSendSelected
 3238 0578 00000000 		.word	theGFX
 3239 057c 00000000 		.word	midiSendOn
 3240 0580 EC010000 		.word	.LC27
 3241 0584 00000000 		.word	midiBarSendOn
 3242              	.L132:
 808:ui.c          ****             }
 809:ui.c          ****             else if (menuPosition[2][1] == 6)
 3243              		.loc 1 809 0
 3244 0588 B84B     		ldr	r3, .L204
 3245 058a 93F90530 		ldrsb	r3, [r3, #5]
 3246 058e 062B     		cmp	r3, #6
 3247 0590 70D1     		bne	.L137
 3248              	.LBB13:
 810:ui.c          ****             {
 811:ui.c          ****                 //volume
 812:ui.c          ****                 menuPosition[0][0] = VolumeMenu;
 3249              		.loc 1 812 0
 3250 0592 B64B     		ldr	r3, .L204
 3251 0594 0B22     		movs	r2, #11
 3252 0596 1A70     		strb	r2, [r3]
 813:ui.c          ****                 Decoder_1_Start();
 3253              		.loc 1 813 0
 3254 0598 FFF7FEFF 		bl	Decoder_1_Start
 814:ui.c          ****                 whatToDraw = 0;
 3255              		.loc 1 814 0
 3256 059c 0023     		movs	r3, #0
 3257 059e FB77     		strb	r3, [r7, #31]
 815:ui.c          ****                 OLEDclear(128, 64);
 3258              		.loc 1 815 0
 3259 05a0 4021     		movs	r1, #64
 3260 05a2 8020     		movs	r0, #128
 3261 05a4 FFF7FEFF 		bl	OLEDclear
 816:ui.c          ****                 myGFX_setFont(2);
 3262              		.loc 1 816 0
 3263 05a8 0220     		movs	r0, #2
 3264 05aa FFF7FEFF 		bl	myGFX_setFont
 817:ui.c          ****                 OLEDtextColor(1, 0);
 3265              		.loc 1 817 0
 3266 05ae 0021     		movs	r1, #0
 3267 05b0 0120     		movs	r0, #1
 3268 05b2 FFF7FEFF 		bl	OLEDtextColor
 818:ui.c          ****                 OLEDwriteString("VOLUME    ", 10, 0, FirstLine);
 3269              		.loc 1 818 0
 3270 05b6 0023     		movs	r3, #0
 3271 05b8 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 75


 3272 05ba 0A21     		movs	r1, #10
 3273 05bc AC48     		ldr	r0, .L204+4
 3274 05be FFF7FEFF 		bl	OLEDwriteString
 819:ui.c          ****                 OLEDtextColor(1, 0);
 3275              		.loc 1 819 0
 3276 05c2 0021     		movs	r1, #0
 3277 05c4 0120     		movs	r0, #1
 3278 05c6 FFF7FEFF 		bl	OLEDtextColor
 820:ui.c          ****                 myGFX_setFont(1);
 3279              		.loc 1 820 0
 3280 05ca 0120     		movs	r0, #1
 3281 05cc FFF7FEFF 		bl	myGFX_setFont
 821:ui.c          ****                 GFXsetCursor(&theGFX, 20,53);
 3282              		.loc 1 821 0
 3283 05d0 3522     		movs	r2, #53
 3284 05d2 1421     		movs	r1, #20
 3285 05d4 A748     		ldr	r0, .L204+8
 3286 05d6 FFF7FEFF 		bl	GFXsetCursor
 822:ui.c          ****                 GFXwrite(&theGFX, 32);
 3287              		.loc 1 822 0
 3288 05da 2021     		movs	r1, #32
 3289 05dc A548     		ldr	r0, .L204+8
 3290 05de FFF7FEFF 		bl	GFXwrite
 823:ui.c          ****                 
 824:ui.c          ****                 int8_t volumeIntTemp = volumeInt;
 3291              		.loc 1 824 0
 3292 05e2 A54B     		ldr	r3, .L204+12
 3293 05e4 1B78     		ldrb	r3, [r3]
 3294 05e6 FB72     		strb	r3, [r7, #11]
 825:ui.c          ****                 uint8_t currentChar = ((uint8_t)(volumeIntTemp / 100));  
 3295              		.loc 1 825 0
 3296 05e8 97F90B30 		ldrsb	r3, [r7, #11]
 3297 05ec A34A     		ldr	r2, .L204+16
 3298 05ee 82FB0312 		smull	r1, r2, r2, r3
 3299 05f2 5211     		asrs	r2, r2, #5
 3300 05f4 DB17     		asrs	r3, r3, #31
 3301 05f6 D31A     		subs	r3, r2, r3
 3302 05f8 5BB2     		sxtb	r3, r3
 3303 05fa BB72     		strb	r3, [r7, #10]
 826:ui.c          ****                 volumeIntTemp -= currentChar * 100;
 3304              		.loc 1 826 0
 3305 05fc BB7A     		ldrb	r3, [r7, #10]
 3306 05fe 1A46     		mov	r2, r3
 3307 0600 9200     		lsls	r2, r2, #2
 3308 0602 1A44     		add	r2, r2, r3
 3309 0604 D200     		lsls	r2, r2, #3
 3310 0606 D31A     		subs	r3, r2, r3
 3311 0608 9B00     		lsls	r3, r3, #2
 3312 060a DAB2     		uxtb	r2, r3
 3313 060c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3314 060e 1344     		add	r3, r3, r2
 3315 0610 DBB2     		uxtb	r3, r3
 3316 0612 FB72     		strb	r3, [r7, #11]
 827:ui.c          ****                 GFXwrite(&theGFX, currentChar + 48);
 3317              		.loc 1 827 0
 3318 0614 BB7A     		ldrb	r3, [r7, #10]
 3319 0616 3033     		adds	r3, r3, #48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 76


 3320 0618 DBB2     		uxtb	r3, r3
 3321 061a 1946     		mov	r1, r3
 3322 061c 9548     		ldr	r0, .L204+8
 3323 061e FFF7FEFF 		bl	GFXwrite
 828:ui.c          ****                 currentChar = ((uint8_t)volumeIntTemp / 10);    
 3324              		.loc 1 828 0
 3325 0622 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3326 0624 964A     		ldr	r2, .L204+20
 3327 0626 A2FB0323 		umull	r2, r3, r2, r3
 3328 062a DB08     		lsrs	r3, r3, #3
 3329 062c BB72     		strb	r3, [r7, #10]
 829:ui.c          ****                 GFXwrite(&theGFX, currentChar + 48);
 3330              		.loc 1 829 0
 3331 062e BB7A     		ldrb	r3, [r7, #10]
 3332 0630 3033     		adds	r3, r3, #48
 3333 0632 DBB2     		uxtb	r3, r3
 3334 0634 1946     		mov	r1, r3
 3335 0636 8F48     		ldr	r0, .L204+8
 3336 0638 FFF7FEFF 		bl	GFXwrite
 830:ui.c          ****                 volumeIntTemp -= currentChar * 10;
 3337              		.loc 1 830 0
 3338 063c BB7A     		ldrb	r3, [r7, #10]
 3339 063e 1A46     		mov	r2, r3
 3340 0640 5201     		lsls	r2, r2, #5
 3341 0642 D21A     		subs	r2, r2, r3
 3342 0644 9200     		lsls	r2, r2, #2
 3343 0646 D31A     		subs	r3, r2, r3
 3344 0648 5B00     		lsls	r3, r3, #1
 3345 064a DAB2     		uxtb	r2, r3
 3346 064c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3347 064e 1344     		add	r3, r3, r2
 3348 0650 DBB2     		uxtb	r3, r3
 3349 0652 FB72     		strb	r3, [r7, #11]
 831:ui.c          ****                 currentChar = ((uint8_t)volumeIntTemp);    
 3350              		.loc 1 831 0
 3351 0654 FB7A     		ldrb	r3, [r7, #11]
 3352 0656 BB72     		strb	r3, [r7, #10]
 832:ui.c          ****                 GFXwrite(&theGFX, currentChar + 48);
 3353              		.loc 1 832 0
 3354 0658 BB7A     		ldrb	r3, [r7, #10]
 3355 065a 3033     		adds	r3, r3, #48
 3356 065c DBB2     		uxtb	r3, r3
 3357 065e 1946     		mov	r1, r3
 3358 0660 8448     		ldr	r0, .L204+8
 3359 0662 FFF7FEFF 		bl	GFXwrite
 833:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3360              		.loc 1 833 0
 3361 0666 874B     		ldr	r3, .L204+24
 3362 0668 0122     		movs	r2, #1
 3363 066a 1A70     		strb	r2, [r3]
 834:ui.c          ****                 encoderWatch = 1;
 3364              		.loc 1 834 0
 3365 066c 864B     		ldr	r3, .L204+28
 3366 066e 0122     		movs	r2, #1
 3367 0670 1A70     		strb	r2, [r3]
 3368              	.LBE13:
 701:ui.c          ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 77


 3369              		.loc 1 701 0
 3370 0672 65E3     		b	.L198
 3371              	.L137:
 835:ui.c          ****             }
 836:ui.c          ****             else if (menuPosition[2][1] == 7)
 3372              		.loc 1 836 0
 3373 0674 7D4B     		ldr	r3, .L204
 3374 0676 93F90530 		ldrsb	r3, [r3, #5]
 3375 067a 072B     		cmp	r3, #7
 3376 067c 40F06083 		bne	.L198
 837:ui.c          ****             {
 838:ui.c          ****                 //volume
 839:ui.c          ****                 menuPosition[0][0] = FirmwareUpdateMenu;
 3377              		.loc 1 839 0
 3378 0680 7A4B     		ldr	r3, .L204
 3379 0682 0C22     		movs	r2, #12
 3380 0684 1A70     		strb	r2, [r3]
 840:ui.c          ****                 whatToDraw = 0;
 3381              		.loc 1 840 0
 3382 0686 0023     		movs	r3, #0
 3383 0688 FB77     		strb	r3, [r7, #31]
 841:ui.c          ****                 OLEDclear(128, 64);
 3384              		.loc 1 841 0
 3385 068a 4021     		movs	r1, #64
 3386 068c 8020     		movs	r0, #128
 3387 068e FFF7FEFF 		bl	OLEDclear
 842:ui.c          ****                 myGFX_setFont(2);
 3388              		.loc 1 842 0
 3389 0692 0220     		movs	r0, #2
 3390 0694 FFF7FEFF 		bl	myGFX_setFont
 843:ui.c          ****                 OLEDtextColor(whichFirmwareUpdateSelected, !whichFirmwareUpdateSelected);
 3391              		.loc 1 843 0
 3392 0698 7C4B     		ldr	r3, .L204+32
 3393 069a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3394 069c 9AB2     		uxth	r2, r3
 3395 069e 7B4B     		ldr	r3, .L204+32
 3396 06a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3397 06a2 002B     		cmp	r3, #0
 3398 06a4 0CBF     		ite	eq
 3399 06a6 0123     		moveq	r3, #1
 3400 06a8 0023     		movne	r3, #0
 3401 06aa DBB2     		uxtb	r3, r3
 3402 06ac 9BB2     		uxth	r3, r3
 3403 06ae 1946     		mov	r1, r3
 3404 06b0 1046     		mov	r0, r2
 3405 06b2 FFF7FEFF 		bl	OLEDtextColor
 844:ui.c          ****                 OLEDwriteString("UPDATE BRAIN", 12, 0, FirstLine);
 3406              		.loc 1 844 0
 3407 06b6 0023     		movs	r3, #0
 3408 06b8 0022     		movs	r2, #0
 3409 06ba 0C21     		movs	r1, #12
 3410 06bc 7448     		ldr	r0, .L204+36
 3411 06be FFF7FEFF 		bl	OLEDwriteString
 845:ui.c          ****                 OLEDtextColor(!whichFirmwareUpdateSelected, whichFirmwareUpdateSelected);
 3412              		.loc 1 845 0
 3413 06c2 724B     		ldr	r3, .L204+32
 3414 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 78


 3415 06c6 002B     		cmp	r3, #0
 3416 06c8 0CBF     		ite	eq
 3417 06ca 0123     		moveq	r3, #1
 3418 06cc 0023     		movne	r3, #0
 3419 06ce DBB2     		uxtb	r3, r3
 3420 06d0 9AB2     		uxth	r2, r3
 3421 06d2 6E4B     		ldr	r3, .L204+32
 3422 06d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3423 06d6 9BB2     		uxth	r3, r3
 3424 06d8 1946     		mov	r1, r3
 3425 06da 1046     		mov	r0, r2
 3426 06dc FFF7FEFF 		bl	OLEDtextColor
 846:ui.c          ****                 OLEDwriteString("UPDATE PLUCK", 12, 0, SecondLine);
 3427              		.loc 1 846 0
 3428 06e0 0123     		movs	r3, #1
 3429 06e2 0022     		movs	r2, #0
 3430 06e4 0C21     		movs	r1, #12
 3431 06e6 6B48     		ldr	r0, .L204+40
 3432 06e8 FFF7FEFF 		bl	OLEDwriteString
 847:ui.c          ****                 OLEDtextColor(1, 0);
 3433              		.loc 1 847 0
 3434 06ec 0021     		movs	r1, #0
 3435 06ee 0120     		movs	r0, #1
 3436 06f0 FFF7FEFF 		bl	OLEDtextColor
 848:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3437              		.loc 1 848 0
 3438 06f4 634B     		ldr	r3, .L204+24
 3439 06f6 0122     		movs	r2, #1
 3440 06f8 1A70     		strb	r2, [r3]
 701:ui.c          ****             {
 3441              		.loc 1 701 0
 3442 06fa 21E3     		b	.L198
 3443              	.L126:
 849:ui.c          ****             }
 850:ui.c          ****         }
 851:ui.c          ****         else if (action == Left) 
 3444              		.loc 1 851 0
 3445 06fc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3446 06fe 002B     		cmp	r3, #0
 3447 0700 40F01F83 		bne	.L108
 852:ui.c          ****         {
 853:ui.c          ****             //go back to main menu
 854:ui.c          ****             menuPosition[0][0] = MainMenu;
 3448              		.loc 1 854 0
 3449 0704 594B     		ldr	r3, .L204
 3450 0706 0022     		movs	r2, #0
 3451 0708 1A70     		strb	r2, [r3]
 855:ui.c          ****             whatToDraw = 1;
 3452              		.loc 1 855 0
 3453 070a 0123     		movs	r3, #1
 3454 070c FB77     		strb	r3, [r7, #31]
 3455 070e 18E3     		b	.L108
 3456              	.L119:
 856:ui.c          ****         }
 857:ui.c          ****     }
 858:ui.c          ****     
 859:ui.c          ****     else if (menuPosition[0][0] == CalibrateLeversMenu) //we are in lever calibration
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 79


 3457              		.loc 1 859 0
 3458 0710 564B     		ldr	r3, .L204
 3459 0712 93F90030 		ldrsb	r3, [r3]
 3460 0716 042B     		cmp	r3, #4
 3461 0718 31D1     		bne	.L138
 860:ui.c          ****     {
 861:ui.c          ****         if ((action == Right) || (action == Enter))
 3462              		.loc 1 861 0
 3463 071a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3464 071c 012B     		cmp	r3, #1
 3465 071e 03D0     		beq	.L139
 3466              		.loc 1 861 0 is_stmt 0 discriminator 1
 3467 0720 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3468 0722 042B     		cmp	r3, #4
 3469 0724 40F00D83 		bne	.L108
 3470              	.L139:
 862:ui.c          ****         {
 863:ui.c          ****             OLEDclear(128, 64);
 3471              		.loc 1 863 0 is_stmt 1
 3472 0728 4021     		movs	r1, #64
 3473 072a 8020     		movs	r0, #128
 3474 072c FFF7FEFF 		bl	OLEDclear
 864:ui.c          ****             myGFX_setFont(2);
 3475              		.loc 1 864 0
 3476 0730 0220     		movs	r0, #2
 3477 0732 FFF7FEFF 		bl	myGFX_setFont
 865:ui.c          ****             OLEDtextColor(0, 1);
 3478              		.loc 1 865 0
 3479 0736 0121     		movs	r1, #1
 3480 0738 0020     		movs	r0, #0
 3481 073a FFF7FEFF 		bl	OLEDtextColor
 866:ui.c          ****             OLEDwriteString("NOW PUT ALL", 11, 1, FirstLine);
 3482              		.loc 1 866 0
 3483 073e 0023     		movs	r3, #0
 3484 0740 0122     		movs	r2, #1
 3485 0742 0B21     		movs	r1, #11
 3486 0744 5448     		ldr	r0, .L204+44
 3487 0746 FFF7FEFF 		bl	OLEDwriteString
 867:ui.c          ****             OLEDwriteString("PEDALS/LEVERS  ", 15, 1, SecondLine);
 3488              		.loc 1 867 0
 3489 074a 0123     		movs	r3, #1
 3490 074c 0122     		movs	r2, #1
 3491 074e 0F21     		movs	r1, #15
 3492 0750 5248     		ldr	r0, .L204+48
 3493 0752 FFF7FEFF 		bl	OLEDwriteString
 868:ui.c          ****             OLEDwriteString("IN RESTING STATE", 16, 1, ThirdLine);
 3494              		.loc 1 868 0
 3495 0756 0223     		movs	r3, #2
 3496 0758 0122     		movs	r2, #1
 3497 075a 1021     		movs	r1, #16
 3498 075c 5048     		ldr	r0, .L204+52
 3499 075e FFF7FEFF 		bl	OLEDwriteString
 869:ui.c          ****             OLEDwriteString("AND PRESS EDIT", 14, 1, FourthLine);
 3500              		.loc 1 869 0
 3501 0762 0323     		movs	r3, #3
 3502 0764 0122     		movs	r2, #1
 3503 0766 0E21     		movs	r1, #14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 80


 3504 0768 4E48     		ldr	r0, .L204+56
 3505 076a FFF7FEFF 		bl	OLEDwriteString
 870:ui.c          ****             mainOLEDWaitingToSend = 1;
 3506              		.loc 1 870 0
 3507 076e 454B     		ldr	r3, .L204+24
 3508 0770 0122     		movs	r2, #1
 3509 0772 1A70     		strb	r2, [r3]
 871:ui.c          ****             OLEDtextColor(1, 0);
 3510              		.loc 1 871 0
 3511 0774 0021     		movs	r1, #0
 3512 0776 0120     		movs	r0, #1
 3513 0778 FFF7FEFF 		bl	OLEDtextColor
 3514 077c E1E2     		b	.L108
 3515              	.L138:
 872:ui.c          ****         }
 873:ui.c          ****     }
 874:ui.c          ****     else if (menuPosition[0][0] == CalibrateFretsMenu) //we are in fret calibration
 3516              		.loc 1 874 0
 3517 077e 3B4B     		ldr	r3, .L204
 3518 0780 93F90030 		ldrsb	r3, [r3]
 3519 0784 052B     		cmp	r3, #5
 3520 0786 36D1     		bne	.L141
 875:ui.c          ****     {
 876:ui.c          ****         //when user presses -> button, then store the current fret and increment which fret to stor
 877:ui.c          ****         if ((action == Right) || (action == Enter))
 3521              		.loc 1 877 0
 3522 0788 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3523 078a 012B     		cmp	r3, #1
 3524 078c 03D0     		beq	.L142
 3525              		.loc 1 877 0 is_stmt 0 discriminator 1
 3526 078e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3527 0790 042B     		cmp	r3, #4
 3528 0792 40F0D682 		bne	.L108
 3529              	.L142:
 878:ui.c          ****         {
 879:ui.c          ****             fretMeasurements[0][fretToCalibrate] = bar[0];
 3530              		.loc 1 879 0 is_stmt 1
 3531 0796 444B     		ldr	r3, .L204+60
 3532 0798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3533 079a 1A46     		mov	r2, r3
 3534 079c 434B     		ldr	r3, .L204+64
 3535 079e 1B88     		ldrh	r3, [r3]	@ movhi
 3536 07a0 99B2     		uxth	r1, r3
 3537 07a2 434B     		ldr	r3, .L204+68
 3538 07a4 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 880:ui.c          ****             fretMeasurements[1][fretToCalibrate] = bar[1];
 3539              		.loc 1 880 0
 3540 07a8 3F4B     		ldr	r3, .L204+60
 3541 07aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3542 07ac 1846     		mov	r0, r3
 3543 07ae 3F4B     		ldr	r3, .L204+64
 3544 07b0 5B88     		ldrh	r3, [r3, #2]	@ movhi
 3545 07b2 99B2     		uxth	r1, r3
 3546 07b4 3E4A     		ldr	r2, .L204+68
 3547 07b6 00F10C03 		add	r3, r0, #12
 3548 07ba 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 881:ui.c          ****             fretToCalibrate++;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 81


 3549              		.loc 1 881 0
 3550 07be 3A4B     		ldr	r3, .L204+60
 3551 07c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3552 07c2 0133     		adds	r3, r3, #1
 3553 07c4 DAB2     		uxtb	r2, r3
 3554 07c6 384B     		ldr	r3, .L204+60
 3555 07c8 1A70     		strb	r2, [r3]
 882:ui.c          ****             if (fretToCalibrate == NUM_FRET_MEASUREMENTS)
 3556              		.loc 1 882 0
 3557 07ca 374B     		ldr	r3, .L204+60
 3558 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3559 07ce 0C2B     		cmp	r3, #12
 3560 07d0 02D1     		bne	.L144
 883:ui.c          ****             {
 884:ui.c          ****                 exitFretCalibrationMode();
 3561              		.loc 1 884 0
 3562 07d2 FFF7FEFF 		bl	exitFretCalibrationMode
 3563 07d6 B4E2     		b	.L108
 3564              	.L144:
 885:ui.c          ****             }
 886:ui.c          ****             else
 887:ui.c          ****             {
 888:ui.c          ****                OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 3565              		.loc 1 888 0
 3566 07d8 334B     		ldr	r3, .L204+60
 3567 07da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3568 07dc 1A46     		mov	r2, r3
 3569 07de 354B     		ldr	r3, .L204+72
 3570 07e0 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3571 07e2 1846     		mov	r0, r3
 3572 07e4 0223     		movs	r3, #2
 3573 07e6 2822     		movs	r2, #40
 3574 07e8 0221     		movs	r1, #2
 3575 07ea FFF7FEFF 		bl	OLEDwriteInt
 889:ui.c          ****                mainOLEDWaitingToSend = 1;
 3576              		.loc 1 889 0
 3577 07ee 254B     		ldr	r3, .L204+24
 3578 07f0 0122     		movs	r2, #1
 3579 07f2 1A70     		strb	r2, [r3]
 3580 07f4 A5E2     		b	.L108
 3581              	.L141:
 890:ui.c          ****             }
 891:ui.c          ****         }
 892:ui.c          ****     }
 893:ui.c          ****     else if (menuPosition[0][0] == TransposeMenu) //we are in transpose
 3582              		.loc 1 893 0
 3583 07f6 1D4B     		ldr	r3, .L204
 3584 07f8 93F90030 		ldrsb	r3, [r3]
 3585 07fc 062B     		cmp	r3, #6
 3586 07fe 20D1     		bne	.L145
 894:ui.c          ****     {
 895:ui.c          ****         
 896:ui.c          ****         if (action == Right)
 3587              		.loc 1 896 0
 3588 0800 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3589 0802 012B     		cmp	r3, #1
 3590 0804 0CD1     		bne	.L146
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 82


 897:ui.c          ****         {
 898:ui.c          ****             semitonesOrCents = (semitonesOrCents+1)&1;
 3591              		.loc 1 898 0
 3592 0806 2C4B     		ldr	r3, .L204+76
 3593 0808 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3594 080a 0133     		adds	r3, r3, #1
 3595 080c DBB2     		uxtb	r3, r3
 3596 080e 03F00103 		and	r3, r3, #1
 3597 0812 DAB2     		uxtb	r2, r3
 3598 0814 284B     		ldr	r3, .L204+76
 3599 0816 1A70     		strb	r2, [r3]
 899:ui.c          ****             prevEncoderVal = 127;
 3600              		.loc 1 899 0
 3601 0818 284B     		ldr	r3, .L204+80
 3602 081a 7F22     		movs	r2, #127
 3603 081c 1A70     		strb	r2, [r3]
 3604 081e 90E2     		b	.L108
 3605              	.L146:
 900:ui.c          ****         }
 901:ui.c          ****         else if (action == Left)
 3606              		.loc 1 901 0
 3607 0820 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3608 0822 002B     		cmp	r3, #0
 3609 0824 40F08D82 		bne	.L108
 902:ui.c          ****         {
 903:ui.c          ****             semitonesOrCents = (semitonesOrCents-1)&1;
 3610              		.loc 1 903 0
 3611 0828 234B     		ldr	r3, .L204+76
 3612 082a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3613 082c 013B     		subs	r3, r3, #1
 3614 082e DBB2     		uxtb	r3, r3
 3615 0830 03F00103 		and	r3, r3, #1
 3616 0834 DAB2     		uxtb	r2, r3
 3617 0836 204B     		ldr	r3, .L204+76
 3618 0838 1A70     		strb	r2, [r3]
 904:ui.c          ****             prevEncoderVal = 127;
 3619              		.loc 1 904 0
 3620 083a 204B     		ldr	r3, .L204+80
 3621 083c 7F22     		movs	r2, #127
 3622 083e 1A70     		strb	r2, [r3]
 3623 0840 7FE2     		b	.L108
 3624              	.L145:
 905:ui.c          ****         }
 906:ui.c          ****     }
 907:ui.c          ****     else if (menuPosition[0][0] == OctaveActionMenu) //we are in octave action
 3625              		.loc 1 907 0
 3626 0842 0A4B     		ldr	r3, .L204
 3627 0844 93F90030 		ldrsb	r3, [r3]
 3628 0848 072B     		cmp	r3, #7
 3629 084a 40F09380 		bne	.L148
 908:ui.c          ****     {
 909:ui.c          ****         whatToDraw = 0;
 3630              		.loc 1 909 0
 3631 084e 0023     		movs	r3, #0
 3632 0850 FB77     		strb	r3, [r7, #31]
 910:ui.c          ****         if (action == Up)
 3633              		.loc 1 910 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 83


 3634 0852 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3635 0854 032B     		cmp	r3, #3
 3636 0856 35D1     		bne	.L149
 911:ui.c          ****         {
 912:ui.c          ****             octaveAction = (octaveAction+1)&1;
 3637              		.loc 1 912 0
 3638 0858 194B     		ldr	r3, .L204+84
 3639 085a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3640 085c 0133     		adds	r3, r3, #1
 3641 085e DBB2     		uxtb	r3, r3
 3642 0860 03F00103 		and	r3, r3, #1
 3643 0864 DAB2     		uxtb	r2, r3
 3644 0866 164B     		ldr	r3, .L204+84
 3645 0868 1A70     		strb	r2, [r3]
 3646 086a 40E0     		b	.L150
 3647              	.L205:
 3648              		.align	2
 3649              	.L204:
 3650 086c 00000000 		.word	menuPosition
 3651 0870 F8010000 		.word	.LC28
 3652 0874 00000000 		.word	theGFX
 3653 0878 00000000 		.word	volumeInt
 3654 087c 1F85EB51 		.word	1374389535
 3655 0880 CDCCCCCC 		.word	-858993459
 3656 0884 00000000 		.word	mainOLEDWaitingToSend
 3657 0888 00000000 		.word	encoderWatch
 3658 088c 00000000 		.word	whichFirmwareUpdateSelected
 3659 0890 04020000 		.word	.LC29
 3660 0894 14020000 		.word	.LC30
 3661 0898 24020000 		.word	.LC31
 3662 089c 30020000 		.word	.LC32
 3663 08a0 40020000 		.word	.LC33
 3664 08a4 54020000 		.word	.LC34
 3665 08a8 00000000 		.word	fretToCalibrate
 3666 08ac 00000000 		.word	bar
 3667 08b0 00000000 		.word	fretMeasurements
 3668 08b4 00000000 		.word	whichFretArray
 3669 08b8 00000000 		.word	semitonesOrCents
 3670 08bc 00000000 		.word	prevEncoderVal
 3671 08c0 00000000 		.word	octaveAction
 3672              	.L149:
 913:ui.c          ****         }
 914:ui.c          ****         else if (action == Down)
 3673              		.loc 1 914 0
 3674 08c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3675 08c6 022B     		cmp	r3, #2
 3676 08c8 09D1     		bne	.L151
 915:ui.c          ****         {
 916:ui.c          ****             octaveAction = (octaveAction-1)&1;
 3677              		.loc 1 916 0
 3678 08ca AA4B     		ldr	r3, .L206
 3679 08cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3680 08ce 013B     		subs	r3, r3, #1
 3681 08d0 DBB2     		uxtb	r3, r3
 3682 08d2 03F00103 		and	r3, r3, #1
 3683 08d6 DAB2     		uxtb	r2, r3
 3684 08d8 A64B     		ldr	r3, .L206
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 84


 3685 08da 1A70     		strb	r2, [r3]
 3686 08dc 07E0     		b	.L150
 3687              	.L151:
 917:ui.c          ****         }
 918:ui.c          ****         
 919:ui.c          ****          else if (action == Left) 
 3688              		.loc 1 919 0
 3689 08de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3690 08e0 002B     		cmp	r3, #0
 3691 08e2 04D1     		bne	.L150
 920:ui.c          ****         {
 921:ui.c          ****             //go back to main menu
 922:ui.c          ****             menuPosition[0][0] = SettingsMenu;
 3692              		.loc 1 922 0
 3693 08e4 A44B     		ldr	r3, .L206+4
 3694 08e6 0322     		movs	r2, #3
 3695 08e8 1A70     		strb	r2, [r3]
 923:ui.c          ****             whatToDraw = 1;
 3696              		.loc 1 923 0
 3697 08ea 0123     		movs	r3, #1
 3698 08ec FB77     		strb	r3, [r7, #31]
 3699              	.L150:
 924:ui.c          ****         }
 925:ui.c          ****                 OLEDclear(128, 64);
 3700              		.loc 1 925 0
 3701 08ee 4021     		movs	r1, #64
 3702 08f0 8020     		movs	r0, #128
 3703 08f2 FFF7FEFF 		bl	OLEDclear
 926:ui.c          ****                 myGFX_setFont(2);
 3704              		.loc 1 926 0
 3705 08f6 0220     		movs	r0, #2
 3706 08f8 FFF7FEFF 		bl	myGFX_setFont
 927:ui.c          ****                 OLEDtextColor(1, 0);
 3707              		.loc 1 927 0
 3708 08fc 0021     		movs	r1, #0
 3709 08fe 0120     		movs	r0, #1
 3710 0900 FFF7FEFF 		bl	OLEDtextColor
 928:ui.c          ****                 OLEDwriteString("OCTAVE ACTION  ", 15, 0, FirstLine);
 3711              		.loc 1 928 0
 3712 0904 0023     		movs	r3, #0
 3713 0906 0022     		movs	r2, #0
 3714 0908 0F21     		movs	r1, #15
 3715 090a 9C48     		ldr	r0, .L206+8
 3716 090c FFF7FEFF 		bl	OLEDwriteString
 929:ui.c          ****                
 930:ui.c          ****                 OLEDtextColor(octaveAction, !octaveAction);
 3717              		.loc 1 930 0
 3718 0910 984B     		ldr	r3, .L206
 3719 0912 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3720 0914 9AB2     		uxth	r2, r3
 3721 0916 974B     		ldr	r3, .L206
 3722 0918 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3723 091a 002B     		cmp	r3, #0
 3724 091c 0CBF     		ite	eq
 3725 091e 0123     		moveq	r3, #1
 3726 0920 0023     		movne	r3, #0
 3727 0922 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 85


 3728 0924 9BB2     		uxth	r3, r3
 3729 0926 1946     		mov	r1, r3
 3730 0928 1046     		mov	r0, r2
 3731 092a FFF7FEFF 		bl	OLEDtextColor
 931:ui.c          ****                 OLEDwriteString("ON NEXT NOTE   ", 15, 0, SecondLine);
 3732              		.loc 1 931 0
 3733 092e 0123     		movs	r3, #1
 3734 0930 0022     		movs	r2, #0
 3735 0932 0F21     		movs	r1, #15
 3736 0934 9248     		ldr	r0, .L206+12
 3737 0936 FFF7FEFF 		bl	OLEDwriteString
 932:ui.c          ****                 OLEDtextColor(!octaveAction, octaveAction);
 3738              		.loc 1 932 0
 3739 093a 8E4B     		ldr	r3, .L206
 3740 093c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3741 093e 002B     		cmp	r3, #0
 3742 0940 0CBF     		ite	eq
 3743 0942 0123     		moveq	r3, #1
 3744 0944 0023     		movne	r3, #0
 3745 0946 DBB2     		uxtb	r3, r3
 3746 0948 9AB2     		uxth	r2, r3
 3747 094a 8A4B     		ldr	r3, .L206
 3748 094c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3749 094e 9BB2     		uxth	r3, r3
 3750 0950 1946     		mov	r1, r3
 3751 0952 1046     		mov	r0, r2
 3752 0954 FFF7FEFF 		bl	OLEDtextColor
 933:ui.c          ****                 OLEDwriteString("IMMEDIATE      ", 15, 0, ThirdLine);
 3753              		.loc 1 933 0
 3754 0958 0223     		movs	r3, #2
 3755 095a 0022     		movs	r2, #0
 3756 095c 0F21     		movs	r1, #15
 3757 095e 8948     		ldr	r0, .L206+16
 3758 0960 FFF7FEFF 		bl	OLEDwriteString
 934:ui.c          ****                 OLEDtextColor(1, 0);
 3759              		.loc 1 934 0
 3760 0964 0021     		movs	r1, #0
 3761 0966 0120     		movs	r0, #1
 3762 0968 FFF7FEFF 		bl	OLEDtextColor
 935:ui.c          ****                 mainOLEDWaitingToSend = 1;
 3763              		.loc 1 935 0
 3764 096c 864B     		ldr	r3, .L206+20
 3765 096e 0122     		movs	r2, #1
 3766 0970 1A70     		strb	r2, [r3]
 3767 0972 E6E1     		b	.L108
 3768              	.L148:
 936:ui.c          ****     }
 937:ui.c          **** 
 938:ui.c          ****     else if (menuPosition[0][0] == SliderRepMenu) //we are in sliderRep
 3769              		.loc 1 938 0
 3770 0974 804B     		ldr	r3, .L206+4
 3771 0976 93F90030 		ldrsb	r3, [r3]
 3772 097a 092B     		cmp	r3, #9
 3773 097c 20D1     		bne	.L152
 939:ui.c          ****     {
 940:ui.c          ****        
 941:ui.c          ****         if (action == Right)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 86


 3774              		.loc 1 941 0
 3775 097e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3776 0980 012B     		cmp	r3, #1
 3777 0982 0CD1     		bne	.L153
 942:ui.c          ****         {
 943:ui.c          ****             editingSliderRepString = (editingSliderRepString+1)&1;
 3778              		.loc 1 943 0
 3779 0984 814B     		ldr	r3, .L206+24
 3780 0986 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3781 0988 0133     		adds	r3, r3, #1
 3782 098a DBB2     		uxtb	r3, r3
 3783 098c 03F00103 		and	r3, r3, #1
 3784 0990 DAB2     		uxtb	r2, r3
 3785 0992 7E4B     		ldr	r3, .L206+24
 3786 0994 1A70     		strb	r2, [r3]
 944:ui.c          ****             prevEncoderVal = 127;
 3787              		.loc 1 944 0
 3788 0996 7E4B     		ldr	r3, .L206+28
 3789 0998 7F22     		movs	r2, #127
 3790 099a 1A70     		strb	r2, [r3]
 3791 099c D1E1     		b	.L108
 3792              	.L153:
 945:ui.c          ****         }
 946:ui.c          ****         else if (action == Left)
 3793              		.loc 1 946 0
 3794 099e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3795 09a0 002B     		cmp	r3, #0
 3796 09a2 40F0CE81 		bne	.L108
 947:ui.c          ****         {
 948:ui.c          ****             editingSliderRepString = (editingSliderRepString-1)&1;
 3797              		.loc 1 948 0
 3798 09a6 794B     		ldr	r3, .L206+24
 3799 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3800 09aa 013B     		subs	r3, r3, #1
 3801 09ac DBB2     		uxtb	r3, r3
 3802 09ae 03F00103 		and	r3, r3, #1
 3803 09b2 DAB2     		uxtb	r2, r3
 3804 09b4 754B     		ldr	r3, .L206+24
 3805 09b6 1A70     		strb	r2, [r3]
 949:ui.c          ****             prevEncoderVal = 127;
 3806              		.loc 1 949 0
 3807 09b8 754B     		ldr	r3, .L206+28
 3808 09ba 7F22     		movs	r2, #127
 3809 09bc 1A70     		strb	r2, [r3]
 3810 09be C0E1     		b	.L108
 3811              	.L152:
 950:ui.c          ****         }
 951:ui.c          ****     }
 952:ui.c          ****     else if (menuPosition[0][0] == MidiSendMenu) //we are in midisend menu
 3812              		.loc 1 952 0
 3813 09c0 6D4B     		ldr	r3, .L206+4
 3814 09c2 93F90030 		ldrsb	r3, [r3]
 3815 09c6 0A2B     		cmp	r3, #10
 3816 09c8 40F0F080 		bne	.L155
 953:ui.c          ****     {
 954:ui.c          ****         
 955:ui.c          ****         if (action == Right)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 87


 3817              		.loc 1 955 0
 3818 09cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3819 09ce 012B     		cmp	r3, #1
 3820 09d0 17D1     		bne	.L156
 956:ui.c          ****         {
 957:ui.c          ****             if (!whichMidiSendSelected)
 3821              		.loc 1 957 0
 3822 09d2 704B     		ldr	r3, .L206+32
 3823 09d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3824 09d6 002B     		cmp	r3, #0
 3825 09d8 09D1     		bne	.L157
 958:ui.c          ****             {
 959:ui.c          ****                 midiSendOn = (midiSendOn+1)&1;
 3826              		.loc 1 959 0
 3827 09da 6F4B     		ldr	r3, .L206+36
 3828 09dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3829 09de 0133     		adds	r3, r3, #1
 3830 09e0 DBB2     		uxtb	r3, r3
 3831 09e2 03F00103 		and	r3, r3, #1
 3832 09e6 DAB2     		uxtb	r2, r3
 3833 09e8 6B4B     		ldr	r3, .L206+36
 3834 09ea 1A70     		strb	r2, [r3]
 3835 09ec 3DE0     		b	.L159
 3836              	.L157:
 960:ui.c          ****             }
 961:ui.c          ****             else
 962:ui.c          ****             {
 963:ui.c          ****                 midiBarSendOn = (midiBarSendOn+1)&1;
 3837              		.loc 1 963 0
 3838 09ee 6B4B     		ldr	r3, .L206+40
 3839 09f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3840 09f2 0133     		adds	r3, r3, #1
 3841 09f4 DBB2     		uxtb	r3, r3
 3842 09f6 03F00103 		and	r3, r3, #1
 3843 09fa DAB2     		uxtb	r2, r3
 3844 09fc 674B     		ldr	r3, .L206+40
 3845 09fe 1A70     		strb	r2, [r3]
 3846 0a00 33E0     		b	.L159
 3847              	.L156:
 964:ui.c          ****             }
 965:ui.c          ****         }
 966:ui.c          ****         else if (action == Left)
 3848              		.loc 1 966 0
 3849 0a02 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3850 0a04 002B     		cmp	r3, #0
 3851 0a06 17D1     		bne	.L160
 967:ui.c          ****         {
 968:ui.c          ****             if (!whichMidiSendSelected)
 3852              		.loc 1 968 0
 3853 0a08 624B     		ldr	r3, .L206+32
 3854 0a0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3855 0a0c 002B     		cmp	r3, #0
 3856 0a0e 09D1     		bne	.L161
 969:ui.c          ****             {
 970:ui.c          ****                 midiSendOn = (midiSendOn-1)&1;
 3857              		.loc 1 970 0
 3858 0a10 614B     		ldr	r3, .L206+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 88


 3859 0a12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3860 0a14 013B     		subs	r3, r3, #1
 3861 0a16 DBB2     		uxtb	r3, r3
 3862 0a18 03F00103 		and	r3, r3, #1
 3863 0a1c DAB2     		uxtb	r2, r3
 3864 0a1e 5E4B     		ldr	r3, .L206+36
 3865 0a20 1A70     		strb	r2, [r3]
 3866 0a22 22E0     		b	.L159
 3867              	.L161:
 971:ui.c          ****             }
 972:ui.c          ****             else
 973:ui.c          ****             {
 974:ui.c          ****                 midiBarSendOn = (midiBarSendOn-1)&1;
 3868              		.loc 1 974 0
 3869 0a24 5D4B     		ldr	r3, .L206+40
 3870 0a26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3871 0a28 013B     		subs	r3, r3, #1
 3872 0a2a DBB2     		uxtb	r3, r3
 3873 0a2c 03F00103 		and	r3, r3, #1
 3874 0a30 DAB2     		uxtb	r2, r3
 3875 0a32 5A4B     		ldr	r3, .L206+40
 3876 0a34 1A70     		strb	r2, [r3]
 3877 0a36 18E0     		b	.L159
 3878              	.L160:
 975:ui.c          ****             }
 976:ui.c          ****         }
 977:ui.c          ****         else if (action == Up)
 3879              		.loc 1 977 0
 3880 0a38 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3881 0a3a 032B     		cmp	r3, #3
 3882 0a3c 09D1     		bne	.L163
 978:ui.c          ****         {
 979:ui.c          ****             whichMidiSendSelected = (whichMidiSendSelected+1)&1;
 3883              		.loc 1 979 0
 3884 0a3e 554B     		ldr	r3, .L206+32
 3885 0a40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3886 0a42 0133     		adds	r3, r3, #1
 3887 0a44 DBB2     		uxtb	r3, r3
 3888 0a46 03F00103 		and	r3, r3, #1
 3889 0a4a DAB2     		uxtb	r2, r3
 3890 0a4c 514B     		ldr	r3, .L206+32
 3891 0a4e 1A70     		strb	r2, [r3]
 3892 0a50 0BE0     		b	.L159
 3893              	.L163:
 980:ui.c          ****         }
 981:ui.c          ****         else if (action == Down)
 3894              		.loc 1 981 0
 3895 0a52 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3896 0a54 022B     		cmp	r3, #2
 3897 0a56 08D1     		bne	.L159
 982:ui.c          ****         {
 983:ui.c          ****             whichMidiSendSelected = (whichMidiSendSelected-1)&1;
 3898              		.loc 1 983 0
 3899 0a58 4E4B     		ldr	r3, .L206+32
 3900 0a5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3901 0a5c 013B     		subs	r3, r3, #1
 3902 0a5e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 89


 3903 0a60 03F00103 		and	r3, r3, #1
 3904 0a64 DAB2     		uxtb	r2, r3
 3905 0a66 4B4B     		ldr	r3, .L206+32
 3906 0a68 1A70     		strb	r2, [r3]
 3907              	.L159:
 984:ui.c          ****         }
 985:ui.c          ****         OLEDtextColor(1, 0);
 3908              		.loc 1 985 0
 3909 0a6a 0021     		movs	r1, #0
 3910 0a6c 0120     		movs	r0, #1
 3911 0a6e FFF7FEFF 		bl	OLEDtextColor
 986:ui.c          ****         OLEDwriteString("SEND MIDI ", 10, 0, FirstLine);
 3912              		.loc 1 986 0
 3913 0a72 0023     		movs	r3, #0
 3914 0a74 0022     		movs	r2, #0
 3915 0a76 0A21     		movs	r1, #10
 3916 0a78 4948     		ldr	r0, .L206+44
 3917 0a7a FFF7FEFF 		bl	OLEDwriteString
 987:ui.c          ****         GFXfillRect(&theGFX, 76, 0, 37, 16, !whichMidiSendSelected);
 3918              		.loc 1 987 0
 3919 0a7e 454B     		ldr	r3, .L206+32
 3920 0a80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3921 0a82 002B     		cmp	r3, #0
 3922 0a84 0CBF     		ite	eq
 3923 0a86 0123     		moveq	r3, #1
 3924 0a88 0023     		movne	r3, #0
 3925 0a8a DBB2     		uxtb	r3, r3
 3926 0a8c 9BB2     		uxth	r3, r3
 3927 0a8e 0193     		str	r3, [sp, #4]
 3928 0a90 1023     		movs	r3, #16
 3929 0a92 0093     		str	r3, [sp]
 3930 0a94 2523     		movs	r3, #37
 3931 0a96 0022     		movs	r2, #0
 3932 0a98 4C21     		movs	r1, #76
 3933 0a9a 4248     		ldr	r0, .L206+48
 3934 0a9c FFF7FEFF 		bl	GFXfillRect
 988:ui.c          ****         OLEDtextColor(whichMidiSendSelected, !whichMidiSendSelected);
 3935              		.loc 1 988 0
 3936 0aa0 3C4B     		ldr	r3, .L206+32
 3937 0aa2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3938 0aa4 9AB2     		uxth	r2, r3
 3939 0aa6 3B4B     		ldr	r3, .L206+32
 3940 0aa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3941 0aaa 002B     		cmp	r3, #0
 3942 0aac 0CBF     		ite	eq
 3943 0aae 0123     		moveq	r3, #1
 3944 0ab0 0023     		movne	r3, #0
 3945 0ab2 DBB2     		uxtb	r3, r3
 3946 0ab4 9BB2     		uxth	r3, r3
 3947 0ab6 1946     		mov	r1, r3
 3948 0ab8 1046     		mov	r0, r2
 3949 0aba FFF7FEFF 		bl	OLEDtextColor
 989:ui.c          ****         if (midiSendOn)
 3950              		.loc 1 989 0
 3951 0abe 364B     		ldr	r3, .L206+36
 3952 0ac0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3953 0ac2 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 90


 3954 0ac4 08D0     		beq	.L164
 990:ui.c          ****         {
 991:ui.c          ****             GFXwrite(&theGFX, 79);
 3955              		.loc 1 991 0
 3956 0ac6 4F21     		movs	r1, #79
 3957 0ac8 3648     		ldr	r0, .L206+48
 3958 0aca FFF7FEFF 		bl	GFXwrite
 992:ui.c          ****             GFXwrite(&theGFX, 78);
 3959              		.loc 1 992 0
 3960 0ace 4E21     		movs	r1, #78
 3961 0ad0 3448     		ldr	r0, .L206+48
 3962 0ad2 FFF7FEFF 		bl	GFXwrite
 3963 0ad6 0BE0     		b	.L165
 3964              	.L164:
 993:ui.c          ****         }
 994:ui.c          ****         else
 995:ui.c          ****         {
 996:ui.c          ****             GFXwrite(&theGFX, 79);
 3965              		.loc 1 996 0
 3966 0ad8 4F21     		movs	r1, #79
 3967 0ada 3248     		ldr	r0, .L206+48
 3968 0adc FFF7FEFF 		bl	GFXwrite
 997:ui.c          ****             GFXwrite(&theGFX, 70);
 3969              		.loc 1 997 0
 3970 0ae0 4621     		movs	r1, #70
 3971 0ae2 3048     		ldr	r0, .L206+48
 3972 0ae4 FFF7FEFF 		bl	GFXwrite
 998:ui.c          ****             GFXwrite(&theGFX, 70);
 3973              		.loc 1 998 0
 3974 0ae8 4621     		movs	r1, #70
 3975 0aea 2E48     		ldr	r0, .L206+48
 3976 0aec FFF7FEFF 		bl	GFXwrite
 3977              	.L165:
 999:ui.c          ****         }
1000:ui.c          ****         OLEDtextColor(1, 0);
 3978              		.loc 1 1000 0
 3979 0af0 0021     		movs	r1, #0
 3980 0af2 0120     		movs	r0, #1
 3981 0af4 FFF7FEFF 		bl	OLEDtextColor
1001:ui.c          ****         OLEDwriteString("SEND BAR  ", 10, 0, SecondLine);
 3982              		.loc 1 1001 0
 3983 0af8 0123     		movs	r3, #1
 3984 0afa 0022     		movs	r2, #0
 3985 0afc 0A21     		movs	r1, #10
 3986 0afe 2A48     		ldr	r0, .L206+52
 3987 0b00 FFF7FEFF 		bl	OLEDwriteString
1002:ui.c          ****         GFXfillRect(&theGFX, 76, 16, 37, 16, whichMidiSendSelected);
 3988              		.loc 1 1002 0
 3989 0b04 234B     		ldr	r3, .L206+32
 3990 0b06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3991 0b08 9BB2     		uxth	r3, r3
 3992 0b0a 0193     		str	r3, [sp, #4]
 3993 0b0c 1023     		movs	r3, #16
 3994 0b0e 0093     		str	r3, [sp]
 3995 0b10 2523     		movs	r3, #37
 3996 0b12 1022     		movs	r2, #16
 3997 0b14 4C21     		movs	r1, #76
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 91


 3998 0b16 2348     		ldr	r0, .L206+48
 3999 0b18 FFF7FEFF 		bl	GFXfillRect
1003:ui.c          ****         OLEDtextColor(!whichMidiSendSelected, whichMidiSendSelected);
 4000              		.loc 1 1003 0
 4001 0b1c 1D4B     		ldr	r3, .L206+32
 4002 0b1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4003 0b20 002B     		cmp	r3, #0
 4004 0b22 0CBF     		ite	eq
 4005 0b24 0123     		moveq	r3, #1
 4006 0b26 0023     		movne	r3, #0
 4007 0b28 DBB2     		uxtb	r3, r3
 4008 0b2a 9AB2     		uxth	r2, r3
 4009 0b2c 194B     		ldr	r3, .L206+32
 4010 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4011 0b30 9BB2     		uxth	r3, r3
 4012 0b32 1946     		mov	r1, r3
 4013 0b34 1046     		mov	r0, r2
 4014 0b36 FFF7FEFF 		bl	OLEDtextColor
1004:ui.c          ****         if (midiBarSendOn)
 4015              		.loc 1 1004 0
 4016 0b3a 184B     		ldr	r3, .L206+40
 4017 0b3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4018 0b3e 002B     		cmp	r3, #0
 4019 0b40 08D0     		beq	.L166
1005:ui.c          ****         {
1006:ui.c          ****             GFXwrite(&theGFX, 79);
 4020              		.loc 1 1006 0
 4021 0b42 4F21     		movs	r1, #79
 4022 0b44 1748     		ldr	r0, .L206+48
 4023 0b46 FFF7FEFF 		bl	GFXwrite
1007:ui.c          ****             GFXwrite(&theGFX, 78);
 4024              		.loc 1 1007 0
 4025 0b4a 4E21     		movs	r1, #78
 4026 0b4c 1548     		ldr	r0, .L206+48
 4027 0b4e FFF7FEFF 		bl	GFXwrite
 4028 0b52 0BE0     		b	.L167
 4029              	.L166:
1008:ui.c          ****         }
1009:ui.c          ****         else
1010:ui.c          ****         {
1011:ui.c          ****             GFXwrite(&theGFX, 79);
 4030              		.loc 1 1011 0
 4031 0b54 4F21     		movs	r1, #79
 4032 0b56 1348     		ldr	r0, .L206+48
 4033 0b58 FFF7FEFF 		bl	GFXwrite
1012:ui.c          ****             GFXwrite(&theGFX, 70);
 4034              		.loc 1 1012 0
 4035 0b5c 4621     		movs	r1, #70
 4036 0b5e 1148     		ldr	r0, .L206+48
 4037 0b60 FFF7FEFF 		bl	GFXwrite
1013:ui.c          ****             GFXwrite(&theGFX, 70);
 4038              		.loc 1 1013 0
 4039 0b64 4621     		movs	r1, #70
 4040 0b66 0F48     		ldr	r0, .L206+48
 4041 0b68 FFF7FEFF 		bl	GFXwrite
 4042              	.L167:
1014:ui.c          ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 92


1015:ui.c          ****         mainOLEDWaitingToSend = 1;
 4043              		.loc 1 1015 0
 4044 0b6c 064B     		ldr	r3, .L206+20
 4045 0b6e 0122     		movs	r2, #1
 4046 0b70 1A70     		strb	r2, [r3]
 4047 0b72 E6E0     		b	.L108
 4048              	.L207:
 4049              		.align	2
 4050              	.L206:
 4051 0b74 00000000 		.word	octaveAction
 4052 0b78 00000000 		.word	menuPosition
 4053 0b7c 70010000 		.word	.LC19
 4054 0b80 80010000 		.word	.LC20
 4055 0b84 90010000 		.word	.LC21
 4056 0b88 00000000 		.word	mainOLEDWaitingToSend
 4057 0b8c 00000000 		.word	editingSliderRepString
 4058 0b90 00000000 		.word	prevEncoderVal
 4059 0b94 00000000 		.word	whichMidiSendSelected
 4060 0b98 00000000 		.word	midiSendOn
 4061 0b9c 00000000 		.word	midiBarSendOn
 4062 0ba0 E0010000 		.word	.LC26
 4063 0ba4 00000000 		.word	theGFX
 4064 0ba8 EC010000 		.word	.LC27
 4065              	.L155:
1016:ui.c          ****                 
1017:ui.c          ****     }
1018:ui.c          ****     
1019:ui.c          ****      else if (menuPosition[0][0] == FirmwareUpdateMenu) //we are in midisend menu
 4066              		.loc 1 1019 0
 4067 0bac 894B     		ldr	r3, .L208
 4068 0bae 93F90030 		ldrsb	r3, [r3]
 4069 0bb2 0C2B     		cmp	r3, #12
 4070 0bb4 40F09880 		bne	.L168
1020:ui.c          ****     {
1021:ui.c          ****         
1022:ui.c          ****         if (action == Right)
 4071              		.loc 1 1022 0
 4072 0bb8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4073 0bba 012B     		cmp	r3, #1
 4074 0bbc 06D1     		bne	.L169
1023:ui.c          ****         {
1024:ui.c          ****             sendFirmwareUpdateRequest = 1+whichFirmwareUpdateSelected;
 4075              		.loc 1 1024 0
 4076 0bbe 864B     		ldr	r3, .L208+4
 4077 0bc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4078 0bc2 0133     		adds	r3, r3, #1
 4079 0bc4 DAB2     		uxtb	r2, r3
 4080 0bc6 854B     		ldr	r3, .L208+8
 4081 0bc8 1A70     		strb	r2, [r3]
 4082 0bca BAE0     		b	.L108
 4083              	.L169:
1025:ui.c          ****         }
1026:ui.c          ****         else if (action == Left)
 4084              		.loc 1 1026 0
 4085 0bcc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4086 0bce 002B     		cmp	r3, #0
 4087 0bd0 00F0B780 		beq	.L108
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 93


1027:ui.c          ****         {
1028:ui.c          ****   
1029:ui.c          ****         }
1030:ui.c          ****         else if (action == Up)
 4088              		.loc 1 1030 0
 4089 0bd4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4090 0bd6 032B     		cmp	r3, #3
 4091 0bd8 41D1     		bne	.L171
1031:ui.c          ****         {
1032:ui.c          ****             whichFirmwareUpdateSelected = (whichFirmwareUpdateSelected+1)&1;
 4092              		.loc 1 1032 0
 4093 0bda 7F4B     		ldr	r3, .L208+4
 4094 0bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4095 0bde 0133     		adds	r3, r3, #1
 4096 0be0 DBB2     		uxtb	r3, r3
 4097 0be2 03F00103 		and	r3, r3, #1
 4098 0be6 DAB2     		uxtb	r2, r3
 4099 0be8 7B4B     		ldr	r3, .L208+4
 4100 0bea 1A70     		strb	r2, [r3]
1033:ui.c          ****             OLEDclear(128, 64);
 4101              		.loc 1 1033 0
 4102 0bec 4021     		movs	r1, #64
 4103 0bee 8020     		movs	r0, #128
 4104 0bf0 FFF7FEFF 		bl	OLEDclear
1034:ui.c          ****             myGFX_setFont(2);
 4105              		.loc 1 1034 0
 4106 0bf4 0220     		movs	r0, #2
 4107 0bf6 FFF7FEFF 		bl	myGFX_setFont
1035:ui.c          ****             OLEDtextColor(whichFirmwareUpdateSelected, !whichFirmwareUpdateSelected);
 4108              		.loc 1 1035 0
 4109 0bfa 774B     		ldr	r3, .L208+4
 4110 0bfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4111 0bfe 9AB2     		uxth	r2, r3
 4112 0c00 754B     		ldr	r3, .L208+4
 4113 0c02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4114 0c04 002B     		cmp	r3, #0
 4115 0c06 0CBF     		ite	eq
 4116 0c08 0123     		moveq	r3, #1
 4117 0c0a 0023     		movne	r3, #0
 4118 0c0c DBB2     		uxtb	r3, r3
 4119 0c0e 9BB2     		uxth	r3, r3
 4120 0c10 1946     		mov	r1, r3
 4121 0c12 1046     		mov	r0, r2
 4122 0c14 FFF7FEFF 		bl	OLEDtextColor
1036:ui.c          ****             OLEDwriteString("UPDATE BRAIN", 12, 0, FirstLine);
 4123              		.loc 1 1036 0
 4124 0c18 0023     		movs	r3, #0
 4125 0c1a 0022     		movs	r2, #0
 4126 0c1c 0C21     		movs	r1, #12
 4127 0c1e 7048     		ldr	r0, .L208+12
 4128 0c20 FFF7FEFF 		bl	OLEDwriteString
1037:ui.c          ****             OLEDtextColor(!whichFirmwareUpdateSelected, whichFirmwareUpdateSelected);
 4129              		.loc 1 1037 0
 4130 0c24 6C4B     		ldr	r3, .L208+4
 4131 0c26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4132 0c28 002B     		cmp	r3, #0
 4133 0c2a 0CBF     		ite	eq
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 94


 4134 0c2c 0123     		moveq	r3, #1
 4135 0c2e 0023     		movne	r3, #0
 4136 0c30 DBB2     		uxtb	r3, r3
 4137 0c32 9AB2     		uxth	r2, r3
 4138 0c34 684B     		ldr	r3, .L208+4
 4139 0c36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4140 0c38 9BB2     		uxth	r3, r3
 4141 0c3a 1946     		mov	r1, r3
 4142 0c3c 1046     		mov	r0, r2
 4143 0c3e FFF7FEFF 		bl	OLEDtextColor
1038:ui.c          ****             OLEDwriteString("UPDATE PLUCK", 12, 0, SecondLine);
 4144              		.loc 1 1038 0
 4145 0c42 0123     		movs	r3, #1
 4146 0c44 0022     		movs	r2, #0
 4147 0c46 0C21     		movs	r1, #12
 4148 0c48 6648     		ldr	r0, .L208+16
 4149 0c4a FFF7FEFF 		bl	OLEDwriteString
1039:ui.c          ****             OLEDtextColor(1, 0);
 4150              		.loc 1 1039 0
 4151 0c4e 0021     		movs	r1, #0
 4152 0c50 0120     		movs	r0, #1
 4153 0c52 FFF7FEFF 		bl	OLEDtextColor
1040:ui.c          ****             mainOLEDWaitingToSend = 1;
 4154              		.loc 1 1040 0
 4155 0c56 644B     		ldr	r3, .L208+20
 4156 0c58 0122     		movs	r2, #1
 4157 0c5a 1A70     		strb	r2, [r3]
 4158 0c5c 71E0     		b	.L108
 4159              	.L171:
1041:ui.c          ****         }
1042:ui.c          ****         else if (action == Down)
 4160              		.loc 1 1042 0
 4161 0c5e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4162 0c60 022B     		cmp	r3, #2
 4163 0c62 6ED1     		bne	.L108
1043:ui.c          ****         {
1044:ui.c          ****             whichFirmwareUpdateSelected = (whichFirmwareUpdateSelected-1)&1;
 4164              		.loc 1 1044 0
 4165 0c64 5C4B     		ldr	r3, .L208+4
 4166 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4167 0c68 013B     		subs	r3, r3, #1
 4168 0c6a DBB2     		uxtb	r3, r3
 4169 0c6c 03F00103 		and	r3, r3, #1
 4170 0c70 DAB2     		uxtb	r2, r3
 4171 0c72 594B     		ldr	r3, .L208+4
 4172 0c74 1A70     		strb	r2, [r3]
1045:ui.c          ****             OLEDclear(128, 64);
 4173              		.loc 1 1045 0
 4174 0c76 4021     		movs	r1, #64
 4175 0c78 8020     		movs	r0, #128
 4176 0c7a FFF7FEFF 		bl	OLEDclear
1046:ui.c          ****             myGFX_setFont(2);
 4177              		.loc 1 1046 0
 4178 0c7e 0220     		movs	r0, #2
 4179 0c80 FFF7FEFF 		bl	myGFX_setFont
1047:ui.c          ****             OLEDtextColor(whichFirmwareUpdateSelected, !whichFirmwareUpdateSelected);
 4180              		.loc 1 1047 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 95


 4181 0c84 544B     		ldr	r3, .L208+4
 4182 0c86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4183 0c88 9AB2     		uxth	r2, r3
 4184 0c8a 534B     		ldr	r3, .L208+4
 4185 0c8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4186 0c8e 002B     		cmp	r3, #0
 4187 0c90 0CBF     		ite	eq
 4188 0c92 0123     		moveq	r3, #1
 4189 0c94 0023     		movne	r3, #0
 4190 0c96 DBB2     		uxtb	r3, r3
 4191 0c98 9BB2     		uxth	r3, r3
 4192 0c9a 1946     		mov	r1, r3
 4193 0c9c 1046     		mov	r0, r2
 4194 0c9e FFF7FEFF 		bl	OLEDtextColor
1048:ui.c          ****             OLEDwriteString("UPDATE BRAIN", 12, 0, FirstLine);
 4195              		.loc 1 1048 0
 4196 0ca2 0023     		movs	r3, #0
 4197 0ca4 0022     		movs	r2, #0
 4198 0ca6 0C21     		movs	r1, #12
 4199 0ca8 4D48     		ldr	r0, .L208+12
 4200 0caa FFF7FEFF 		bl	OLEDwriteString
1049:ui.c          ****             OLEDtextColor(!whichFirmwareUpdateSelected, whichFirmwareUpdateSelected);
 4201              		.loc 1 1049 0
 4202 0cae 4A4B     		ldr	r3, .L208+4
 4203 0cb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4204 0cb2 002B     		cmp	r3, #0
 4205 0cb4 0CBF     		ite	eq
 4206 0cb6 0123     		moveq	r3, #1
 4207 0cb8 0023     		movne	r3, #0
 4208 0cba DBB2     		uxtb	r3, r3
 4209 0cbc 9AB2     		uxth	r2, r3
 4210 0cbe 464B     		ldr	r3, .L208+4
 4211 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4212 0cc2 9BB2     		uxth	r3, r3
 4213 0cc4 1946     		mov	r1, r3
 4214 0cc6 1046     		mov	r0, r2
 4215 0cc8 FFF7FEFF 		bl	OLEDtextColor
1050:ui.c          ****             OLEDwriteString("UPDATE PLUCK", 12, 0, SecondLine);
 4216              		.loc 1 1050 0
 4217 0ccc 0123     		movs	r3, #1
 4218 0cce 0022     		movs	r2, #0
 4219 0cd0 0C21     		movs	r1, #12
 4220 0cd2 4448     		ldr	r0, .L208+16
 4221 0cd4 FFF7FEFF 		bl	OLEDwriteString
1051:ui.c          ****             OLEDtextColor(1, 0);
 4222              		.loc 1 1051 0
 4223 0cd8 0021     		movs	r1, #0
 4224 0cda 0120     		movs	r0, #1
 4225 0cdc FFF7FEFF 		bl	OLEDtextColor
1052:ui.c          ****             mainOLEDWaitingToSend = 1;
 4226              		.loc 1 1052 0
 4227 0ce0 414B     		ldr	r3, .L208+20
 4228 0ce2 0122     		movs	r2, #1
 4229 0ce4 1A70     		strb	r2, [r3]
 4230 0ce6 2CE0     		b	.L108
 4231              	.L168:
1053:ui.c          ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 96


1054:ui.c          ****     }
1055:ui.c          ****     
1056:ui.c          ****     else if (menuPosition[0][0] == StorePresetMenu)
 4232              		.loc 1 1056 0
 4233 0ce8 3A4B     		ldr	r3, .L208
 4234 0cea 93F90030 		ldrsb	r3, [r3]
 4235 0cee 012B     		cmp	r3, #1
 4236 0cf0 27D1     		bne	.L108
1057:ui.c          ****     {
1058:ui.c          ****  
1059:ui.c          ****         if (action == Right)
 4237              		.loc 1 1059 0
 4238 0cf2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4239 0cf4 012B     		cmp	r3, #1
 4240 0cf6 0FD1     		bne	.L172
1060:ui.c          ****         {
1061:ui.c          ****             presetStoreStage++;
 4241              		.loc 1 1061 0
 4242 0cf8 3C4B     		ldr	r3, .L208+24
 4243 0cfa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4244 0cfc 0133     		adds	r3, r3, #1
 4245 0cfe DAB2     		uxtb	r2, r3
 4246 0d00 3A4B     		ldr	r3, .L208+24
 4247 0d02 1A70     		strb	r2, [r3]
1062:ui.c          ****             if (presetStoreStage >= 15)
 4248              		.loc 1 1062 0
 4249 0d04 394B     		ldr	r3, .L208+24
 4250 0d06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4251 0d08 0E2B     		cmp	r3, #14
 4252 0d0a 02D9     		bls	.L173
1063:ui.c          ****             {
1064:ui.c          ****                 exitPresetStoreMenu();
 4253              		.loc 1 1064 0
 4254 0d0c FFF7FEFF 		bl	exitPresetStoreMenu
 4255 0d10 17E0     		b	.L108
 4256              	.L173:
1065:ui.c          ****             }
1066:ui.c          ****             else
1067:ui.c          ****             {
1068:ui.c          ****                 whatToDraw = 2;
 4257              		.loc 1 1068 0
 4258 0d12 0223     		movs	r3, #2
 4259 0d14 FB77     		strb	r3, [r7, #31]
 4260 0d16 14E0     		b	.L108
 4261              	.L172:
1069:ui.c          ****             }
1070:ui.c          ****         }
1071:ui.c          ****         else if (action == Left)
 4262              		.loc 1 1071 0
 4263 0d18 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4264 0d1a 002B     		cmp	r3, #0
 4265 0d1c 08D1     		bne	.L175
1072:ui.c          ****         {
1073:ui.c          ****             //go back to main menu
1074:ui.c          ****             menuPosition[0][0] = 0;
 4266              		.loc 1 1074 0
 4267 0d1e 2D4B     		ldr	r3, .L208
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 97


 4268 0d20 0022     		movs	r2, #0
 4269 0d22 1A70     		strb	r2, [r3]
1075:ui.c          ****             whatToDraw = 1;
 4270              		.loc 1 1075 0
 4271 0d24 0123     		movs	r3, #1
 4272 0d26 FB77     		strb	r3, [r7, #31]
1076:ui.c          ****             presetStoreStage = 0;
 4273              		.loc 1 1076 0
 4274 0d28 304B     		ldr	r3, .L208+24
 4275 0d2a 0022     		movs	r2, #0
 4276 0d2c 1A70     		strb	r2, [r3]
 4277 0d2e 08E0     		b	.L108
 4278              	.L175:
1077:ui.c          ****         }
1078:ui.c          ****         else if (action == Enter)
 4279              		.loc 1 1078 0
 4280 0d30 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4281 0d32 042B     		cmp	r3, #4
 4282 0d34 05D1     		bne	.L108
1079:ui.c          ****         {
1080:ui.c          ****              exitPresetStoreMenu();
 4283              		.loc 1 1080 0
 4284 0d36 FFF7FEFF 		bl	exitPresetStoreMenu
 4285 0d3a 02E0     		b	.L108
 4286              	.L197:
 656:ui.c          ****             {
 4287              		.loc 1 656 0
 4288 0d3c 00BF     		nop
 4289 0d3e 00E0     		b	.L108
 4290              	.L198:
 701:ui.c          ****             {
 4291              		.loc 1 701 0
 4292 0d40 00BF     		nop
 4293              	.L108:
1081:ui.c          ****         }
1082:ui.c          ****         else if (action == Up)
1083:ui.c          ****         {
1084:ui.c          ****             ;
1085:ui.c          ****         }
1086:ui.c          ****         else if (action == Down)
1087:ui.c          ****         {
1088:ui.c          ****             ;
1089:ui.c          ****         }
1090:ui.c          ****         //whatToDraw = 2;
1091:ui.c          ****     }
1092:ui.c          ****     
1093:ui.c          ****     
1094:ui.c          ****     //now draw stuff
1095:ui.c          ****     if (whatToDraw == 1)
 4294              		.loc 1 1095 0
 4295 0d42 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4296 0d44 012B     		cmp	r3, #1
 4297 0d46 57D1     		bne	.L176
1096:ui.c          ****     {
1097:ui.c          ****         //draw main menu
1098:ui.c          ****         OLEDclear(128, 64);
 4298              		.loc 1 1098 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 98


 4299 0d48 4021     		movs	r1, #64
 4300 0d4a 8020     		movs	r0, #128
 4301 0d4c FFF7FEFF 		bl	OLEDclear
1099:ui.c          ****         myGFX_setFont(2);
 4302              		.loc 1 1099 0
 4303 0d50 0220     		movs	r0, #2
 4304 0d52 FFF7FEFF 		bl	myGFX_setFont
 4305              	.LBB14:
1100:ui.c          ****         for (int i = 0; i < numMainMenuItems; i++)
 4306              		.loc 1 1100 0
 4307 0d56 0023     		movs	r3, #0
 4308 0d58 BB61     		str	r3, [r7, #24]
 4309 0d5a 2CE0     		b	.L177
 4310              	.L180:
1101:ui.c          ****         {
1102:ui.c          ****             if (menuPosition[0][1] == i)
 4311              		.loc 1 1102 0
 4312 0d5c 1D4B     		ldr	r3, .L208
 4313 0d5e 93F90130 		ldrsb	r3, [r3, #1]
 4314 0d62 1A46     		mov	r2, r3
 4315 0d64 BB69     		ldr	r3, [r7, #24]
 4316 0d66 9A42     		cmp	r2, r3
 4317 0d68 14D1     		bne	.L178
1103:ui.c          ****             {
1104:ui.c          ****                 OLEDtextColor(0, 1);
 4318              		.loc 1 1104 0
 4319 0d6a 0121     		movs	r1, #1
 4320 0d6c 0020     		movs	r0, #0
 4321 0d6e FFF7FEFF 		bl	OLEDtextColor
1105:ui.c          ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
 4322              		.loc 1 1105 0
 4323 0d72 1F4A     		ldr	r2, .L208+28
 4324 0d74 BB69     		ldr	r3, [r7, #24]
 4325 0d76 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4326 0d7a BB69     		ldr	r3, [r7, #24]
 4327 0d7c DBB2     		uxtb	r3, r3
 4328 0d7e 0022     		movs	r2, #0
 4329 0d80 0F21     		movs	r1, #15
 4330 0d82 FFF7FEFF 		bl	OLEDwriteString
1106:ui.c          ****                 OLEDwriteArrow(0, i);
 4331              		.loc 1 1106 0
 4332 0d86 BB69     		ldr	r3, [r7, #24]
 4333 0d88 DBB2     		uxtb	r3, r3
 4334 0d8a 1946     		mov	r1, r3
 4335 0d8c 0020     		movs	r0, #0
 4336 0d8e FFF7FEFF 		bl	OLEDwriteArrow
 4337 0d92 0DE0     		b	.L179
 4338              	.L178:
1107:ui.c          ****             }
1108:ui.c          ****             else
1109:ui.c          ****             {
1110:ui.c          ****                 OLEDtextColor(1, 0);
 4339              		.loc 1 1110 0
 4340 0d94 0021     		movs	r1, #0
 4341 0d96 0120     		movs	r0, #1
 4342 0d98 FFF7FEFF 		bl	OLEDtextColor
1111:ui.c          ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 99


 4343              		.loc 1 1111 0
 4344 0d9c 144A     		ldr	r2, .L208+28
 4345 0d9e BB69     		ldr	r3, [r7, #24]
 4346 0da0 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4347 0da4 BB69     		ldr	r3, [r7, #24]
 4348 0da6 DBB2     		uxtb	r3, r3
 4349 0da8 0022     		movs	r2, #0
 4350 0daa 0F21     		movs	r1, #15
 4351 0dac FFF7FEFF 		bl	OLEDwriteString
 4352              	.L179:
1100:ui.c          ****         {
 4353              		.loc 1 1100 0 discriminator 2
 4354 0db0 BB69     		ldr	r3, [r7, #24]
 4355 0db2 0133     		adds	r3, r3, #1
 4356 0db4 BB61     		str	r3, [r7, #24]
 4357              	.L177:
1100:ui.c          ****         {
 4358              		.loc 1 1100 0 is_stmt 0 discriminator 1
 4359 0db6 0F4B     		ldr	r3, .L208+32
 4360 0db8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4361 0dba 1A46     		mov	r2, r3
 4362 0dbc BB69     		ldr	r3, [r7, #24]
 4363 0dbe 9A42     		cmp	r2, r3
 4364 0dc0 CCDC     		bgt	.L180
 4365              	.LBE14:
1112:ui.c          ****                 
1113:ui.c          ****             }
1114:ui.c          **** 
1115:ui.c          ****         }
1116:ui.c          ****         OLEDtextColor(1, 0);
 4366              		.loc 1 1116 0 is_stmt 1
 4367 0dc2 0021     		movs	r1, #0
 4368 0dc4 0120     		movs	r0, #1
 4369 0dc6 FFF7FEFF 		bl	OLEDtextColor
1117:ui.c          ****         mainOLEDWaitingToSend = 1;
 4370              		.loc 1 1117 0
 4371 0dca 074B     		ldr	r3, .L208+20
 4372 0dcc 0122     		movs	r2, #1
 4373 0dce 1A70     		strb	r2, [r3]
1118:ui.c          ****     }
1119:ui.c          ****     else if (whatToDraw == 2)
1120:ui.c          ****     {
1121:ui.c          ****         
1122:ui.c          ****         //store preset
1123:ui.c          ****         if (presetStoreStage == 0)
1124:ui.c          ****         {
1125:ui.c          ****             Decoder_1_Start();
1126:ui.c          ****             whatToDraw = 0;
1127:ui.c          ****             OLEDclear(128, 64);
1128:ui.c          ****             myGFX_setFont(2);
1129:ui.c          ****             OLEDtextColor(1, 0);
1130:ui.c          ****             OLEDwriteString("SELECT DEST",11 , 0, FirstLine);
1131:ui.c          ****             OLEDwriteString("LOCATION THEN ",13 , 0, SecondLine);
1132:ui.c          ****             OLEDwriteString("PUSH -> ",8 , 0, ThirdLine);
1133:ui.c          ****             OLEDtextColor(1, 0);
1134:ui.c          ****             myGFX_setFont(1);
1135:ui.c          ****             GFXsetCursor(&theGFX, 84,58);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 100


1136:ui.c          ****            
1137:ui.c          ****             int8_t presetNumberToStoreTemp = presetNumberToStore;
1138:ui.c          **** 
1139:ui.c          ****             uint8_t currentChar = ((uint8_t)presetNumberToStoreTemp / 10);    
1140:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
1141:ui.c          ****             presetNumberToStoreTemp -= currentChar * 10;
1142:ui.c          ****             currentChar = ((uint8_t)presetNumberToStoreTemp);    
1143:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
1144:ui.c          ****             mainOLEDWaitingToSend = 1;
1145:ui.c          ****             encoderWatch = 1;
1146:ui.c          ****         }
1147:ui.c          ****         else if (presetStoreStage == 1)
1148:ui.c          ****         {
1149:ui.c          ****             whatToDraw = 0;
1150:ui.c          ****             OLEDclear(128, 64);
1151:ui.c          ****             myGFX_setFont(2);
1152:ui.c          ****             OLEDtextColor(1, 0);
1153:ui.c          ****             OLEDwriteString("USE VALUE KNOB",14 , 0, FirstLine);
1154:ui.c          ****             OLEDwriteString("TO CREATE NAME",14 , 0, SecondLine);
1155:ui.c          ****             OLEDtextColor(1, 0);
1156:ui.c          ****             myGFX_setFont(0);
1157:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
1158:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
1159:ui.c          ****             mainOLEDWaitingToSend = 1;
1160:ui.c          ****         }
1161:ui.c          ****         else
1162:ui.c          ****         {
1163:ui.c          ****             whatToDraw = 0;
1164:ui.c          ****             OLEDtextColor(1, 0);
1165:ui.c          ****             myGFX_setFont(0);
1166:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
1167:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
1168:ui.c          ****             mainOLEDWaitingToSend = 1;
1169:ui.c          ****         }
1170:ui.c          ****     }
1171:ui.c          **** 
1172:ui.c          **** 
1173:ui.c          ****     
1174:ui.c          ****     else if (whatToDraw == 3)
1175:ui.c          ****     {
1176:ui.c          ****         //draw calibration menu
1177:ui.c          ****         OLEDclear(128, 64);
1178:ui.c          ****         myGFX_setFont(2);
1179:ui.c          ****         for (int i = 0; i < numCalibrationItems; i++)
1180:ui.c          ****         {
1181:ui.c          ****             if (menuPosition[1][1] == i)
1182:ui.c          ****             {
1183:ui.c          ****                 OLEDtextColor(0, 1);
1184:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
1185:ui.c          ****                 OLEDwriteArrow(0, i);
1186:ui.c          ****             }
1187:ui.c          ****             else
1188:ui.c          ****             {
1189:ui.c          ****                 OLEDtextColor(1, 0);
1190:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
1191:ui.c          ****                 
1192:ui.c          ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 101


1193:ui.c          ****         }
1194:ui.c          ****         OLEDtextColor(1, 0);
1195:ui.c          ****         mainOLEDWaitingToSend = 1;
1196:ui.c          ****     }
1197:ui.c          ****     else if (whatToDraw == 4)
1198:ui.c          ****     {
1199:ui.c          ****         //draw settings menu
1200:ui.c          ****         OLEDclear(128, 64);
1201:ui.c          ****         myGFX_setFont(2);
1202:ui.c          ****         uint8_t tempPos = 0;
1203:ui.c          ****         for (int i = 0; i < numSettingsItems; i++)
1204:ui.c          ****         {
1205:ui.c          ****             if (menuPosition[2][1] == i)
1206:ui.c          ****             {
1207:ui.c          ****                 OLEDtextColor(0, 1);
1208:ui.c          ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
1209:ui.c          ****                 OLEDwriteArrow(0, 0);
1210:ui.c          ****             }
1211:ui.c          ****             else if (i > menuPosition[2][1])
1212:ui.c          ****             {
1213:ui.c          ****                 OLEDtextColor(1, 0);
1214:ui.c          ****                 tempPos = (i - menuPosition[2][1]);
1215:ui.c          ****                 if (tempPos < 4)
1216:ui.c          ****                 {
1217:ui.c          ****                     OLEDwriteString(settingsNames[i], 15, 0, tempPos);
1218:ui.c          ****                 } 
1219:ui.c          ****             }
1220:ui.c          ****         }
1221:ui.c          ****         tempPos++;
1222:ui.c          ****         OLEDtextColor(1, 0);
1223:ui.c          ****         while (tempPos < 4)
1224:ui.c          ****         {
1225:ui.c          ****             OLEDwriteString("               ", 15, 0, tempPos);
1226:ui.c          ****             tempPos++;
1227:ui.c          ****         }
1228:ui.c          ****         mainOLEDWaitingToSend = 1;
1229:ui.c          ****     }
1230:ui.c          ****     
1231:ui.c          **** }
 4374              		.loc 1 1231 0
 4375 0dd0 6DE1     		b	.L199
 4376              	.L209:
 4377 0dd2 00BF     		.align	2
 4378              	.L208:
 4379 0dd4 00000000 		.word	menuPosition
 4380 0dd8 00000000 		.word	whichFirmwareUpdateSelected
 4381 0ddc 00000000 		.word	sendFirmwareUpdateRequest
 4382 0de0 04020000 		.word	.LC29
 4383 0de4 14020000 		.word	.LC30
 4384 0de8 00000000 		.word	mainOLEDWaitingToSend
 4385 0dec 00000000 		.word	presetStoreStage
 4386 0df0 00000000 		.word	mainMenuNames
 4387 0df4 00000000 		.word	numMainMenuItems
 4388              	.L176:
1119:ui.c          ****     {
 4389              		.loc 1 1119 0
 4390 0df8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 102


 4391 0dfa 022B     		cmp	r3, #2
 4392 0dfc 40F0A880 		bne	.L182
1123:ui.c          ****         {
 4393              		.loc 1 1123 0
 4394 0e00 AD4B     		ldr	r3, .L210
 4395 0e02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4396 0e04 002B     		cmp	r3, #0
 4397 0e06 58D1     		bne	.L183
 4398              	.LBB15:
1125:ui.c          ****             whatToDraw = 0;
 4399              		.loc 1 1125 0
 4400 0e08 FFF7FEFF 		bl	Decoder_1_Start
1126:ui.c          ****             OLEDclear(128, 64);
 4401              		.loc 1 1126 0
 4402 0e0c 0023     		movs	r3, #0
 4403 0e0e FB77     		strb	r3, [r7, #31]
1127:ui.c          ****             myGFX_setFont(2);
 4404              		.loc 1 1127 0
 4405 0e10 4021     		movs	r1, #64
 4406 0e12 8020     		movs	r0, #128
 4407 0e14 FFF7FEFF 		bl	OLEDclear
1128:ui.c          ****             OLEDtextColor(1, 0);
 4408              		.loc 1 1128 0
 4409 0e18 0220     		movs	r0, #2
 4410 0e1a FFF7FEFF 		bl	myGFX_setFont
1129:ui.c          ****             OLEDwriteString("SELECT DEST",11 , 0, FirstLine);
 4411              		.loc 1 1129 0
 4412 0e1e 0021     		movs	r1, #0
 4413 0e20 0120     		movs	r0, #1
 4414 0e22 FFF7FEFF 		bl	OLEDtextColor
1130:ui.c          ****             OLEDwriteString("LOCATION THEN ",13 , 0, SecondLine);
 4415              		.loc 1 1130 0
 4416 0e26 0023     		movs	r3, #0
 4417 0e28 0022     		movs	r2, #0
 4418 0e2a 0B21     		movs	r1, #11
 4419 0e2c A348     		ldr	r0, .L210+4
 4420 0e2e FFF7FEFF 		bl	OLEDwriteString
1131:ui.c          ****             OLEDwriteString("PUSH -> ",8 , 0, ThirdLine);
 4421              		.loc 1 1131 0
 4422 0e32 0123     		movs	r3, #1
 4423 0e34 0022     		movs	r2, #0
 4424 0e36 0D21     		movs	r1, #13
 4425 0e38 A148     		ldr	r0, .L210+8
 4426 0e3a FFF7FEFF 		bl	OLEDwriteString
1132:ui.c          ****             OLEDtextColor(1, 0);
 4427              		.loc 1 1132 0
 4428 0e3e 0223     		movs	r3, #2
 4429 0e40 0022     		movs	r2, #0
 4430 0e42 0821     		movs	r1, #8
 4431 0e44 9F48     		ldr	r0, .L210+12
 4432 0e46 FFF7FEFF 		bl	OLEDwriteString
1133:ui.c          ****             myGFX_setFont(1);
 4433              		.loc 1 1133 0
 4434 0e4a 0021     		movs	r1, #0
 4435 0e4c 0120     		movs	r0, #1
 4436 0e4e FFF7FEFF 		bl	OLEDtextColor
1134:ui.c          ****             GFXsetCursor(&theGFX, 84,58);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 103


 4437              		.loc 1 1134 0
 4438 0e52 0120     		movs	r0, #1
 4439 0e54 FFF7FEFF 		bl	myGFX_setFont
1135:ui.c          ****            
 4440              		.loc 1 1135 0
 4441 0e58 3A22     		movs	r2, #58
 4442 0e5a 5421     		movs	r1, #84
 4443 0e5c 9A48     		ldr	r0, .L210+16
 4444 0e5e FFF7FEFF 		bl	GFXsetCursor
1137:ui.c          **** 
 4445              		.loc 1 1137 0
 4446 0e62 9A4B     		ldr	r3, .L210+20
 4447 0e64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4448 0e66 7B72     		strb	r3, [r7, #9]
1139:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
 4449              		.loc 1 1139 0
 4450 0e68 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 4451 0e6a 994A     		ldr	r2, .L210+24
 4452 0e6c A2FB0323 		umull	r2, r3, r2, r3
 4453 0e70 DB08     		lsrs	r3, r3, #3
 4454 0e72 3B72     		strb	r3, [r7, #8]
1140:ui.c          ****             presetNumberToStoreTemp -= currentChar * 10;
 4455              		.loc 1 1140 0
 4456 0e74 3B7A     		ldrb	r3, [r7, #8]
 4457 0e76 3033     		adds	r3, r3, #48
 4458 0e78 DBB2     		uxtb	r3, r3
 4459 0e7a 1946     		mov	r1, r3
 4460 0e7c 9248     		ldr	r0, .L210+16
 4461 0e7e FFF7FEFF 		bl	GFXwrite
1141:ui.c          ****             currentChar = ((uint8_t)presetNumberToStoreTemp);    
 4462              		.loc 1 1141 0
 4463 0e82 3B7A     		ldrb	r3, [r7, #8]
 4464 0e84 1A46     		mov	r2, r3
 4465 0e86 5201     		lsls	r2, r2, #5
 4466 0e88 D21A     		subs	r2, r2, r3
 4467 0e8a 9200     		lsls	r2, r2, #2
 4468 0e8c D31A     		subs	r3, r2, r3
 4469 0e8e 5B00     		lsls	r3, r3, #1
 4470 0e90 DAB2     		uxtb	r2, r3
 4471 0e92 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 4472 0e94 1344     		add	r3, r3, r2
 4473 0e96 DBB2     		uxtb	r3, r3
 4474 0e98 7B72     		strb	r3, [r7, #9]
1142:ui.c          ****             GFXwrite(&theGFX, currentChar + 48);
 4475              		.loc 1 1142 0
 4476 0e9a 7B7A     		ldrb	r3, [r7, #9]
 4477 0e9c 3B72     		strb	r3, [r7, #8]
1143:ui.c          ****             mainOLEDWaitingToSend = 1;
 4478              		.loc 1 1143 0
 4479 0e9e 3B7A     		ldrb	r3, [r7, #8]
 4480 0ea0 3033     		adds	r3, r3, #48
 4481 0ea2 DBB2     		uxtb	r3, r3
 4482 0ea4 1946     		mov	r1, r3
 4483 0ea6 8848     		ldr	r0, .L210+16
 4484 0ea8 FFF7FEFF 		bl	GFXwrite
1144:ui.c          ****             encoderWatch = 1;
 4485              		.loc 1 1144 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 104


 4486 0eac 894B     		ldr	r3, .L210+28
 4487 0eae 0122     		movs	r2, #1
 4488 0eb0 1A70     		strb	r2, [r3]
1145:ui.c          ****         }
 4489              		.loc 1 1145 0
 4490 0eb2 894B     		ldr	r3, .L210+32
 4491 0eb4 0122     		movs	r2, #1
 4492 0eb6 1A70     		strb	r2, [r3]
 4493              	.LBE15:
 4494              		.loc 1 1231 0
 4495 0eb8 F9E0     		b	.L199
 4496              	.L183:
1147:ui.c          ****         {
 4497              		.loc 1 1147 0
 4498 0eba 7F4B     		ldr	r3, .L210
 4499 0ebc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4500 0ebe 012B     		cmp	r3, #1
 4501 0ec0 2ED1     		bne	.L185
1149:ui.c          ****             OLEDclear(128, 64);
 4502              		.loc 1 1149 0
 4503 0ec2 0023     		movs	r3, #0
 4504 0ec4 FB77     		strb	r3, [r7, #31]
1150:ui.c          ****             myGFX_setFont(2);
 4505              		.loc 1 1150 0
 4506 0ec6 4021     		movs	r1, #64
 4507 0ec8 8020     		movs	r0, #128
 4508 0eca FFF7FEFF 		bl	OLEDclear
1151:ui.c          ****             OLEDtextColor(1, 0);
 4509              		.loc 1 1151 0
 4510 0ece 0220     		movs	r0, #2
 4511 0ed0 FFF7FEFF 		bl	myGFX_setFont
1152:ui.c          ****             OLEDwriteString("USE VALUE KNOB",14 , 0, FirstLine);
 4512              		.loc 1 1152 0
 4513 0ed4 0021     		movs	r1, #0
 4514 0ed6 0120     		movs	r0, #1
 4515 0ed8 FFF7FEFF 		bl	OLEDtextColor
1153:ui.c          ****             OLEDwriteString("TO CREATE NAME",14 , 0, SecondLine);
 4516              		.loc 1 1153 0
 4517 0edc 0023     		movs	r3, #0
 4518 0ede 0022     		movs	r2, #0
 4519 0ee0 0E21     		movs	r1, #14
 4520 0ee2 7E48     		ldr	r0, .L210+36
 4521 0ee4 FFF7FEFF 		bl	OLEDwriteString
1154:ui.c          ****             OLEDtextColor(1, 0);
 4522              		.loc 1 1154 0
 4523 0ee8 0123     		movs	r3, #1
 4524 0eea 0022     		movs	r2, #0
 4525 0eec 0E21     		movs	r1, #14
 4526 0eee 7C48     		ldr	r0, .L210+40
 4527 0ef0 FFF7FEFF 		bl	OLEDwriteString
1155:ui.c          ****             myGFX_setFont(0);
 4528              		.loc 1 1155 0
 4529 0ef4 0021     		movs	r1, #0
 4530 0ef6 0120     		movs	r0, #1
 4531 0ef8 FFF7FEFF 		bl	OLEDtextColor
1156:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
 4532              		.loc 1 1156 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 105


 4533 0efc 0020     		movs	r0, #0
 4534 0efe FFF7FEFF 		bl	myGFX_setFont
1157:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
 4535              		.loc 1 1157 0
 4536 0f02 3222     		movs	r2, #50
 4537 0f04 0021     		movs	r1, #0
 4538 0f06 7048     		ldr	r0, .L210+16
 4539 0f08 FFF7FEFF 		bl	GFXsetCursor
1158:ui.c          ****             mainOLEDWaitingToSend = 1;
 4540              		.loc 1 1158 0
 4541 0f0c 0223     		movs	r3, #2
 4542 0f0e 0022     		movs	r2, #0
 4543 0f10 0E21     		movs	r1, #14
 4544 0f12 7448     		ldr	r0, .L210+44
 4545 0f14 FFF7FEFF 		bl	OLEDwriteString
1159:ui.c          ****         }
 4546              		.loc 1 1159 0
 4547 0f18 6E4B     		ldr	r3, .L210+28
 4548 0f1a 0122     		movs	r2, #1
 4549 0f1c 1A70     		strb	r2, [r3]
 4550              		.loc 1 1231 0
 4551 0f1e C6E0     		b	.L199
 4552              	.L185:
1163:ui.c          ****             OLEDtextColor(1, 0);
 4553              		.loc 1 1163 0
 4554 0f20 0023     		movs	r3, #0
 4555 0f22 FB77     		strb	r3, [r7, #31]
1164:ui.c          ****             myGFX_setFont(0);
 4556              		.loc 1 1164 0
 4557 0f24 0021     		movs	r1, #0
 4558 0f26 0120     		movs	r0, #1
 4559 0f28 FFF7FEFF 		bl	OLEDtextColor
1165:ui.c          ****             GFXsetCursor(&theGFX, 0,50);
 4560              		.loc 1 1165 0
 4561 0f2c 0020     		movs	r0, #0
 4562 0f2e FFF7FEFF 		bl	myGFX_setFont
1166:ui.c          ****             OLEDwriteString(newPresetName, 14, 0, ThirdLine);
 4563              		.loc 1 1166 0
 4564 0f32 3222     		movs	r2, #50
 4565 0f34 0021     		movs	r1, #0
 4566 0f36 6448     		ldr	r0, .L210+16
 4567 0f38 FFF7FEFF 		bl	GFXsetCursor
1167:ui.c          ****             mainOLEDWaitingToSend = 1;
 4568              		.loc 1 1167 0
 4569 0f3c 0223     		movs	r3, #2
 4570 0f3e 0022     		movs	r2, #0
 4571 0f40 0E21     		movs	r1, #14
 4572 0f42 6848     		ldr	r0, .L210+44
 4573 0f44 FFF7FEFF 		bl	OLEDwriteString
1168:ui.c          ****         }
 4574              		.loc 1 1168 0
 4575 0f48 624B     		ldr	r3, .L210+28
 4576 0f4a 0122     		movs	r2, #1
 4577 0f4c 1A70     		strb	r2, [r3]
 4578              		.loc 1 1231 0
 4579 0f4e AEE0     		b	.L199
 4580              	.L182:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 106


1174:ui.c          ****     {
 4581              		.loc 1 1174 0
 4582 0f50 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4583 0f52 032B     		cmp	r3, #3
 4584 0f54 44D1     		bne	.L186
1177:ui.c          ****         myGFX_setFont(2);
 4585              		.loc 1 1177 0
 4586 0f56 4021     		movs	r1, #64
 4587 0f58 8020     		movs	r0, #128
 4588 0f5a FFF7FEFF 		bl	OLEDclear
1178:ui.c          ****         for (int i = 0; i < numCalibrationItems; i++)
 4589              		.loc 1 1178 0
 4590 0f5e 0220     		movs	r0, #2
 4591 0f60 FFF7FEFF 		bl	myGFX_setFont
 4592              	.LBB16:
1179:ui.c          ****         {
 4593              		.loc 1 1179 0
 4594 0f64 0023     		movs	r3, #0
 4595 0f66 7B61     		str	r3, [r7, #20]
 4596 0f68 2CE0     		b	.L187
 4597              	.L190:
1181:ui.c          ****             {
 4598              		.loc 1 1181 0
 4599 0f6a 5F4B     		ldr	r3, .L210+48
 4600 0f6c 93F90330 		ldrsb	r3, [r3, #3]
 4601 0f70 1A46     		mov	r2, r3
 4602 0f72 7B69     		ldr	r3, [r7, #20]
 4603 0f74 9A42     		cmp	r2, r3
 4604 0f76 14D1     		bne	.L188
1183:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 4605              		.loc 1 1183 0
 4606 0f78 0121     		movs	r1, #1
 4607 0f7a 0020     		movs	r0, #0
 4608 0f7c FFF7FEFF 		bl	OLEDtextColor
1184:ui.c          ****                 OLEDwriteArrow(0, i);
 4609              		.loc 1 1184 0
 4610 0f80 5A4A     		ldr	r2, .L210+52
 4611 0f82 7B69     		ldr	r3, [r7, #20]
 4612 0f84 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4613 0f88 7B69     		ldr	r3, [r7, #20]
 4614 0f8a DBB2     		uxtb	r3, r3
 4615 0f8c 0022     		movs	r2, #0
 4616 0f8e 0F21     		movs	r1, #15
 4617 0f90 FFF7FEFF 		bl	OLEDwriteString
1185:ui.c          ****             }
 4618              		.loc 1 1185 0
 4619 0f94 7B69     		ldr	r3, [r7, #20]
 4620 0f96 DBB2     		uxtb	r3, r3
 4621 0f98 1946     		mov	r1, r3
 4622 0f9a 0020     		movs	r0, #0
 4623 0f9c FFF7FEFF 		bl	OLEDwriteArrow
 4624 0fa0 0DE0     		b	.L189
 4625              	.L188:
1189:ui.c          ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 4626              		.loc 1 1189 0
 4627 0fa2 0021     		movs	r1, #0
 4628 0fa4 0120     		movs	r0, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 107


 4629 0fa6 FFF7FEFF 		bl	OLEDtextColor
1190:ui.c          ****                 
 4630              		.loc 1 1190 0
 4631 0faa 504A     		ldr	r2, .L210+52
 4632 0fac 7B69     		ldr	r3, [r7, #20]
 4633 0fae 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4634 0fb2 7B69     		ldr	r3, [r7, #20]
 4635 0fb4 DBB2     		uxtb	r3, r3
 4636 0fb6 0022     		movs	r2, #0
 4637 0fb8 0F21     		movs	r1, #15
 4638 0fba FFF7FEFF 		bl	OLEDwriteString
 4639              	.L189:
1179:ui.c          ****         {
 4640              		.loc 1 1179 0 discriminator 2
 4641 0fbe 7B69     		ldr	r3, [r7, #20]
 4642 0fc0 0133     		adds	r3, r3, #1
 4643 0fc2 7B61     		str	r3, [r7, #20]
 4644              	.L187:
1179:ui.c          ****         {
 4645              		.loc 1 1179 0 is_stmt 0 discriminator 1
 4646 0fc4 4A4B     		ldr	r3, .L210+56
 4647 0fc6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4648 0fc8 1A46     		mov	r2, r3
 4649 0fca 7B69     		ldr	r3, [r7, #20]
 4650 0fcc 9A42     		cmp	r2, r3
 4651 0fce CCDC     		bgt	.L190
 4652              	.LBE16:
1194:ui.c          ****         mainOLEDWaitingToSend = 1;
 4653              		.loc 1 1194 0 is_stmt 1
 4654 0fd0 0021     		movs	r1, #0
 4655 0fd2 0120     		movs	r0, #1
 4656 0fd4 FFF7FEFF 		bl	OLEDtextColor
1195:ui.c          ****     }
 4657              		.loc 1 1195 0
 4658 0fd8 3E4B     		ldr	r3, .L210+28
 4659 0fda 0122     		movs	r2, #1
 4660 0fdc 1A70     		strb	r2, [r3]
 4661              		.loc 1 1231 0
 4662 0fde 66E0     		b	.L199
 4663              	.L186:
1197:ui.c          ****     {
 4664              		.loc 1 1197 0
 4665 0fe0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4666 0fe2 042B     		cmp	r3, #4
 4667 0fe4 63D1     		bne	.L199
 4668              	.LBB17:
1200:ui.c          ****         myGFX_setFont(2);
 4669              		.loc 1 1200 0
 4670 0fe6 4021     		movs	r1, #64
 4671 0fe8 8020     		movs	r0, #128
 4672 0fea FFF7FEFF 		bl	OLEDclear
1201:ui.c          ****         uint8_t tempPos = 0;
 4673              		.loc 1 1201 0
 4674 0fee 0220     		movs	r0, #2
 4675 0ff0 FFF7FEFF 		bl	myGFX_setFont
1202:ui.c          ****         for (int i = 0; i < numSettingsItems; i++)
 4676              		.loc 1 1202 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 108


 4677 0ff4 0023     		movs	r3, #0
 4678 0ff6 FB74     		strb	r3, [r7, #19]
 4679              	.LBB18:
1203:ui.c          ****         {
 4680              		.loc 1 1203 0
 4681 0ff8 0023     		movs	r3, #0
 4682 0ffa FB60     		str	r3, [r7, #12]
 4683 0ffc 3AE0     		b	.L191
 4684              	.L194:
1205:ui.c          ****             {
 4685              		.loc 1 1205 0
 4686 0ffe 3A4B     		ldr	r3, .L210+48
 4687 1000 93F90530 		ldrsb	r3, [r3, #5]
 4688 1004 1A46     		mov	r2, r3
 4689 1006 FB68     		ldr	r3, [r7, #12]
 4690 1008 9A42     		cmp	r2, r3
 4691 100a 11D1     		bne	.L192
1207:ui.c          ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
 4692              		.loc 1 1207 0
 4693 100c 0121     		movs	r1, #1
 4694 100e 0020     		movs	r0, #0
 4695 1010 FFF7FEFF 		bl	OLEDtextColor
1208:ui.c          ****                 OLEDwriteArrow(0, 0);
 4696              		.loc 1 1208 0
 4697 1014 374A     		ldr	r2, .L210+60
 4698 1016 FB68     		ldr	r3, [r7, #12]
 4699 1018 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4700 101c 0023     		movs	r3, #0
 4701 101e 0022     		movs	r2, #0
 4702 1020 0F21     		movs	r1, #15
 4703 1022 FFF7FEFF 		bl	OLEDwriteString
1209:ui.c          ****             }
 4704              		.loc 1 1209 0
 4705 1026 0021     		movs	r1, #0
 4706 1028 0020     		movs	r0, #0
 4707 102a FFF7FEFF 		bl	OLEDwriteArrow
 4708 102e 1EE0     		b	.L193
 4709              	.L192:
1211:ui.c          ****             {
 4710              		.loc 1 1211 0
 4711 1030 2D4B     		ldr	r3, .L210+48
 4712 1032 93F90530 		ldrsb	r3, [r3, #5]
 4713 1036 1A46     		mov	r2, r3
 4714 1038 FB68     		ldr	r3, [r7, #12]
 4715 103a 9A42     		cmp	r2, r3
 4716 103c 17DA     		bge	.L193
1213:ui.c          ****                 tempPos = (i - menuPosition[2][1]);
 4717              		.loc 1 1213 0
 4718 103e 0021     		movs	r1, #0
 4719 1040 0120     		movs	r0, #1
 4720 1042 FFF7FEFF 		bl	OLEDtextColor
1214:ui.c          ****                 if (tempPos < 4)
 4721              		.loc 1 1214 0
 4722 1046 FB68     		ldr	r3, [r7, #12]
 4723 1048 DAB2     		uxtb	r2, r3
 4724 104a 274B     		ldr	r3, .L210+48
 4725 104c 93F90530 		ldrsb	r3, [r3, #5]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 109


 4726 1050 DBB2     		uxtb	r3, r3
 4727 1052 D31A     		subs	r3, r2, r3
 4728 1054 FB74     		strb	r3, [r7, #19]
1215:ui.c          ****                 {
 4729              		.loc 1 1215 0
 4730 1056 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4731 1058 032B     		cmp	r3, #3
 4732 105a 08D8     		bhi	.L193
1217:ui.c          ****                 } 
 4733              		.loc 1 1217 0
 4734 105c 254A     		ldr	r2, .L210+60
 4735 105e FB68     		ldr	r3, [r7, #12]
 4736 1060 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4737 1064 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4738 1066 0022     		movs	r2, #0
 4739 1068 0F21     		movs	r1, #15
 4740 106a FFF7FEFF 		bl	OLEDwriteString
 4741              	.L193:
1203:ui.c          ****         {
 4742              		.loc 1 1203 0 discriminator 2
 4743 106e FB68     		ldr	r3, [r7, #12]
 4744 1070 0133     		adds	r3, r3, #1
 4745 1072 FB60     		str	r3, [r7, #12]
 4746              	.L191:
1203:ui.c          ****         {
 4747              		.loc 1 1203 0 is_stmt 0 discriminator 1
 4748 1074 204B     		ldr	r3, .L210+64
 4749 1076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4750 1078 1A46     		mov	r2, r3
 4751 107a FB68     		ldr	r3, [r7, #12]
 4752 107c 9A42     		cmp	r2, r3
 4753 107e BEDC     		bgt	.L194
 4754              	.LBE18:
1221:ui.c          ****         OLEDtextColor(1, 0);
 4755              		.loc 1 1221 0 is_stmt 1
 4756 1080 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4757 1082 0133     		adds	r3, r3, #1
 4758 1084 FB74     		strb	r3, [r7, #19]
1222:ui.c          ****         while (tempPos < 4)
 4759              		.loc 1 1222 0
 4760 1086 0021     		movs	r1, #0
 4761 1088 0120     		movs	r0, #1
 4762 108a FFF7FEFF 		bl	OLEDtextColor
1223:ui.c          ****         {
 4763              		.loc 1 1223 0
 4764 108e 08E0     		b	.L195
 4765              	.L196:
1225:ui.c          ****             tempPos++;
 4766              		.loc 1 1225 0
 4767 1090 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4768 1092 0022     		movs	r2, #0
 4769 1094 0F21     		movs	r1, #15
 4770 1096 1948     		ldr	r0, .L210+68
 4771 1098 FFF7FEFF 		bl	OLEDwriteString
1226:ui.c          ****         }
 4772              		.loc 1 1226 0
 4773 109c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 110


 4774 109e 0133     		adds	r3, r3, #1
 4775 10a0 FB74     		strb	r3, [r7, #19]
 4776              	.L195:
1223:ui.c          ****         {
 4777              		.loc 1 1223 0
 4778 10a2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4779 10a4 032B     		cmp	r3, #3
 4780 10a6 F3D9     		bls	.L196
1228:ui.c          ****     }
 4781              		.loc 1 1228 0
 4782 10a8 0A4B     		ldr	r3, .L210+28
 4783 10aa 0122     		movs	r2, #1
 4784 10ac 1A70     		strb	r2, [r3]
 4785              	.L199:
 4786              	.LBE17:
 4787              		.loc 1 1231 0
 4788 10ae 00BF     		nop
 4789 10b0 2037     		adds	r7, r7, #32
 4790              		.cfi_def_cfa_offset 8
 4791 10b2 BD46     		mov	sp, r7
 4792              		.cfi_def_cfa_register 13
 4793              		@ sp needed
 4794 10b4 80BD     		pop	{r7, pc}
 4795              	.L211:
 4796 10b6 00BF     		.align	2
 4797              	.L210:
 4798 10b8 00000000 		.word	presetStoreStage
 4799 10bc 64020000 		.word	.LC35
 4800 10c0 70020000 		.word	.LC36
 4801 10c4 80020000 		.word	.LC37
 4802 10c8 00000000 		.word	theGFX
 4803 10cc 00000000 		.word	presetNumberToStore
 4804 10d0 CDCCCCCC 		.word	-858993459
 4805 10d4 00000000 		.word	mainOLEDWaitingToSend
 4806 10d8 00000000 		.word	encoderWatch
 4807 10dc 8C020000 		.word	.LC38
 4808 10e0 9C020000 		.word	.LC39
 4809 10e4 00000000 		.word	newPresetName
 4810 10e8 00000000 		.word	menuPosition
 4811 10ec 00000000 		.word	calibrationNames
 4812 10f0 00000000 		.word	numCalibrationItems
 4813 10f4 00000000 		.word	settingsNames
 4814 10f8 00000000 		.word	numSettingsItems
 4815 10fc AC020000 		.word	.LC40
 4816              		.cfi_endproc
 4817              	.LFE67:
 4818              		.size	menuAction, .-menuAction
 4819              		.section	.text.leftPressed,"ax",%progbits
 4820              		.align	2
 4821              		.global	leftPressed
 4822              		.thumb
 4823              		.thumb_func
 4824              		.type	leftPressed, %function
 4825              	leftPressed:
 4826              	.LFB68:
1232:ui.c          **** 
1233:ui.c          **** void leftPressed()
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 111


1234:ui.c          **** {
 4827              		.loc 1 1234 0
 4828              		.cfi_startproc
 4829              		@ args = 0, pretend = 0, frame = 0
 4830              		@ frame_needed = 1, uses_anonymous_args = 0
 4831 0000 80B5     		push	{r7, lr}
 4832              		.cfi_def_cfa_offset 8
 4833              		.cfi_offset 7, -8
 4834              		.cfi_offset 14, -4
 4835 0002 00AF     		add	r7, sp, #0
 4836              		.cfi_def_cfa_register 7
1235:ui.c          ****     if (!editMode) //normal behavior
 4837              		.loc 1 1235 0
 4838 0004 204B     		ldr	r3, .L218
 4839 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4840 0008 002B     		cmp	r3, #0
 4841 000a 38D1     		bne	.L213
1236:ui.c          ****     {
1237:ui.c          ****         if (currentCopedent == 0)
 4842              		.loc 1 1237 0
 4843 000c 1F4B     		ldr	r3, .L218+4
 4844 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4845 0010 002B     		cmp	r3, #0
 4846 0012 03D1     		bne	.L214
1238:ui.c          ****         {
1239:ui.c          ****             currentCopedent = MAX_NUM_COPEDENTS-1;
 4847              		.loc 1 1239 0
 4848 0014 1D4B     		ldr	r3, .L218+4
 4849 0016 0622     		movs	r2, #6
 4850 0018 1A70     		strb	r2, [r3]
 4851 001a 05E0     		b	.L215
 4852              	.L214:
1240:ui.c          ****         }
1241:ui.c          ****         else
1242:ui.c          ****         {
1243:ui.c          ****             currentCopedent -= 1;
 4853              		.loc 1 1243 0
 4854 001c 1B4B     		ldr	r3, .L218+4
 4855 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4856 0020 013B     		subs	r3, r3, #1
 4857 0022 DAB2     		uxtb	r2, r3
 4858 0024 194B     		ldr	r3, .L218+4
 4859 0026 1A70     		strb	r2, [r3]
 4860              	.L215:
1244:ui.c          ****         }
1245:ui.c          ****         necks[currentNeck] = currentCopedent;
 4861              		.loc 1 1245 0
 4862 0028 194B     		ldr	r3, .L218+8
 4863 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4864 002c 1A46     		mov	r2, r3
 4865 002e 174B     		ldr	r3, .L218+4
 4866 0030 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4867 0032 184B     		ldr	r3, .L218+12
 4868 0034 9954     		strb	r1, [r3, r2]
1246:ui.c          ****         neckByte = 0;
 4869              		.loc 1 1246 0
 4870 0036 184B     		ldr	r3, .L218+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 112


 4871 0038 0022     		movs	r2, #0
 4872 003a 1A70     		strb	r2, [r3]
1247:ui.c          ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 4873              		.loc 1 1247 0
 4874 003c 154B     		ldr	r3, .L218+12
 4875 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4876 0040 5B01     		lsls	r3, r3, #5
 4877 0042 DAB2     		uxtb	r2, r3
 4878 0044 134B     		ldr	r3, .L218+12
 4879 0046 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4880 0048 9B00     		lsls	r3, r3, #2
 4881 004a DBB2     		uxtb	r3, r3
 4882 004c 1344     		add	r3, r3, r2
 4883 004e DAB2     		uxtb	r2, r3
 4884 0050 0F4B     		ldr	r3, .L218+8
 4885 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4886 0054 1344     		add	r3, r3, r2
 4887 0056 DBB2     		uxtb	r3, r3
 4888 0058 5AB2     		sxtb	r2, r3
 4889 005a 0F4B     		ldr	r3, .L218+16
 4890 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4891 005e 5BB2     		sxtb	r3, r3
 4892 0060 1343     		orrs	r3, r3, r2
 4893 0062 5BB2     		sxtb	r3, r3
 4894 0064 DAB2     		uxtb	r2, r3
 4895 0066 0C4B     		ldr	r3, .L218+16
 4896 0068 1A70     		strb	r2, [r3]
1248:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 4897              		.loc 1 1248 0
 4898 006a 0B4B     		ldr	r3, .L218+16
 4899 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4900 006e 40F2E271 		movw	r1, #2018
 4901 0072 1846     		mov	r0, r3
 4902 0074 FFF7FEFF 		bl	EEPROM_WriteByte
1249:ui.c          ****         displayCurrentPresetNameAndCopedent();
 4903              		.loc 1 1249 0
 4904 0078 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1250:ui.c          ****     }
1251:ui.c          ****     else
1252:ui.c          ****     {
1253:ui.c          ****         menuAction(Left);
1254:ui.c          ****     }
1255:ui.c          **** }
 4905              		.loc 1 1255 0
 4906 007c 02E0     		b	.L217
 4907              	.L213:
1253:ui.c          ****     }
 4908              		.loc 1 1253 0
 4909 007e 0020     		movs	r0, #0
 4910 0080 FFF7FEFF 		bl	menuAction
 4911              	.L217:
 4912              		.loc 1 1255 0
 4913 0084 00BF     		nop
 4914 0086 80BD     		pop	{r7, pc}
 4915              	.L219:
 4916              		.align	2
 4917              	.L218:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 113


 4918 0088 00000000 		.word	editMode
 4919 008c 00000000 		.word	currentCopedent
 4920 0090 00000000 		.word	currentNeck
 4921 0094 00000000 		.word	necks
 4922 0098 00000000 		.word	neckByte
 4923              		.cfi_endproc
 4924              	.LFE68:
 4925              		.size	leftPressed, .-leftPressed
 4926              		.section	.text.rightPressed,"ax",%progbits
 4927              		.align	2
 4928              		.global	rightPressed
 4929              		.thumb
 4930              		.thumb_func
 4931              		.type	rightPressed, %function
 4932              	rightPressed:
 4933              	.LFB69:
1256:ui.c          **** 
1257:ui.c          **** void rightPressed()
1258:ui.c          **** {
 4934              		.loc 1 1258 0
 4935              		.cfi_startproc
 4936              		@ args = 0, pretend = 0, frame = 0
 4937              		@ frame_needed = 1, uses_anonymous_args = 0
 4938 0000 80B5     		push	{r7, lr}
 4939              		.cfi_def_cfa_offset 8
 4940              		.cfi_offset 7, -8
 4941              		.cfi_offset 14, -4
 4942 0002 00AF     		add	r7, sp, #0
 4943              		.cfi_def_cfa_register 7
1259:ui.c          ****     if (!editMode) //normal behavior
 4944              		.loc 1 1259 0
 4945 0004 204B     		ldr	r3, .L225
 4946 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4947 0008 002B     		cmp	r3, #0
 4948 000a 37D1     		bne	.L221
1260:ui.c          ****     {
1261:ui.c          ****         currentCopedent += 1;
 4949              		.loc 1 1261 0
 4950 000c 1F4B     		ldr	r3, .L225+4
 4951 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4952 0010 0133     		adds	r3, r3, #1
 4953 0012 DAB2     		uxtb	r2, r3
 4954 0014 1D4B     		ldr	r3, .L225+4
 4955 0016 1A70     		strb	r2, [r3]
1262:ui.c          ****         if (currentCopedent >= MAX_NUM_COPEDENTS)
 4956              		.loc 1 1262 0
 4957 0018 1C4B     		ldr	r3, .L225+4
 4958 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4959 001c 062B     		cmp	r3, #6
 4960 001e 02D9     		bls	.L222
1263:ui.c          ****         {
1264:ui.c          ****             currentCopedent = 0;
 4961              		.loc 1 1264 0
 4962 0020 1A4B     		ldr	r3, .L225+4
 4963 0022 0022     		movs	r2, #0
 4964 0024 1A70     		strb	r2, [r3]
 4965              	.L222:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 114


1265:ui.c          ****         }
1266:ui.c          ****         necks[currentNeck] = currentCopedent;
 4966              		.loc 1 1266 0
 4967 0026 1A4B     		ldr	r3, .L225+8
 4968 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4969 002a 1A46     		mov	r2, r3
 4970 002c 174B     		ldr	r3, .L225+4
 4971 002e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4972 0030 184B     		ldr	r3, .L225+12
 4973 0032 9954     		strb	r1, [r3, r2]
1267:ui.c          ****         neckByte = 0;
 4974              		.loc 1 1267 0
 4975 0034 184B     		ldr	r3, .L225+16
 4976 0036 0022     		movs	r2, #0
 4977 0038 1A70     		strb	r2, [r3]
1268:ui.c          ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 4978              		.loc 1 1268 0
 4979 003a 164B     		ldr	r3, .L225+12
 4980 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4981 003e 5B01     		lsls	r3, r3, #5
 4982 0040 DAB2     		uxtb	r2, r3
 4983 0042 144B     		ldr	r3, .L225+12
 4984 0044 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4985 0046 9B00     		lsls	r3, r3, #2
 4986 0048 DBB2     		uxtb	r3, r3
 4987 004a 1344     		add	r3, r3, r2
 4988 004c DAB2     		uxtb	r2, r3
 4989 004e 104B     		ldr	r3, .L225+8
 4990 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4991 0052 1344     		add	r3, r3, r2
 4992 0054 DBB2     		uxtb	r3, r3
 4993 0056 5AB2     		sxtb	r2, r3
 4994 0058 0F4B     		ldr	r3, .L225+16
 4995 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4996 005c 5BB2     		sxtb	r3, r3
 4997 005e 1343     		orrs	r3, r3, r2
 4998 0060 5BB2     		sxtb	r3, r3
 4999 0062 DAB2     		uxtb	r2, r3
 5000 0064 0C4B     		ldr	r3, .L225+16
 5001 0066 1A70     		strb	r2, [r3]
1269:ui.c          ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 5002              		.loc 1 1269 0
 5003 0068 0B4B     		ldr	r3, .L225+16
 5004 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5005 006c 40F2E271 		movw	r1, #2018
 5006 0070 1846     		mov	r0, r3
 5007 0072 FFF7FEFF 		bl	EEPROM_WriteByte
1270:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5008              		.loc 1 1270 0
 5009 0076 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1271:ui.c          ****     }
1272:ui.c          ****     else
1273:ui.c          ****     {
1274:ui.c          ****        menuAction(Right);
1275:ui.c          ****     }
1276:ui.c          **** }
 5010              		.loc 1 1276 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 115


 5011 007a 02E0     		b	.L224
 5012              	.L221:
1274:ui.c          ****     }
 5013              		.loc 1 1274 0
 5014 007c 0120     		movs	r0, #1
 5015 007e FFF7FEFF 		bl	menuAction
 5016              	.L224:
 5017              		.loc 1 1276 0
 5018 0082 00BF     		nop
 5019 0084 80BD     		pop	{r7, pc}
 5020              	.L226:
 5021 0086 00BF     		.align	2
 5022              	.L225:
 5023 0088 00000000 		.word	editMode
 5024 008c 00000000 		.word	currentCopedent
 5025 0090 00000000 		.word	currentNeck
 5026 0094 00000000 		.word	necks
 5027 0098 00000000 		.word	neckByte
 5028              		.cfi_endproc
 5029              	.LFE69:
 5030              		.size	rightPressed, .-rightPressed
 5031              		.section	.text.downPressed,"ax",%progbits
 5032              		.align	2
 5033              		.global	downPressed
 5034              		.thumb
 5035              		.thumb_func
 5036              		.type	downPressed, %function
 5037              	downPressed:
 5038              	.LFB70:
1277:ui.c          **** 
1278:ui.c          **** void downPressed()
1279:ui.c          **** {
 5039              		.loc 1 1279 0
 5040              		.cfi_startproc
 5041              		@ args = 0, pretend = 0, frame = 0
 5042              		@ frame_needed = 1, uses_anonymous_args = 0
 5043 0000 80B5     		push	{r7, lr}
 5044              		.cfi_def_cfa_offset 8
 5045              		.cfi_offset 7, -8
 5046              		.cfi_offset 14, -4
 5047 0002 00AF     		add	r7, sp, #0
 5048              		.cfi_def_cfa_register 7
1280:ui.c          ****     if (!editMode) //normal behavior
 5049              		.loc 1 1280 0
 5050 0004 0F4B     		ldr	r3, .L231
 5051 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5052 0008 002B     		cmp	r3, #0
 5053 000a 16D1     		bne	.L228
1281:ui.c          ****     {
1282:ui.c          ****         patchNum -= 1;
 5054              		.loc 1 1282 0
 5055 000c 0E4B     		ldr	r3, .L231+4
 5056 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5057 0010 013B     		subs	r3, r3, #1
 5058 0012 DAB2     		uxtb	r2, r3
 5059 0014 0C4B     		ldr	r3, .L231+4
 5060 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 116


1283:ui.c          ****         patchNum &= 63;
 5061              		.loc 1 1283 0
 5062 0018 0B4B     		ldr	r3, .L231+4
 5063 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5064 001c 03F03F03 		and	r3, r3, #63
 5065 0020 DAB2     		uxtb	r2, r3
 5066 0022 094B     		ldr	r3, .L231+4
 5067 0024 1A70     		strb	r2, [r3]
1284:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 5068              		.loc 1 1284 0
 5069 0026 084B     		ldr	r3, .L231+4
 5070 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5071 002a 40F2D671 		movw	r1, #2006
 5072 002e 1846     		mov	r0, r3
 5073 0030 FFF7FEFF 		bl	EEPROM_WriteByte
1285:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5074              		.loc 1 1285 0
 5075 0034 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1286:ui.c          ****     }
1287:ui.c          ****     else
1288:ui.c          ****     {
1289:ui.c          ****         menuAction(Down);
1290:ui.c          ****     }
1291:ui.c          **** }
 5076              		.loc 1 1291 0
 5077 0038 02E0     		b	.L230
 5078              	.L228:
1289:ui.c          ****     }
 5079              		.loc 1 1289 0
 5080 003a 0220     		movs	r0, #2
 5081 003c FFF7FEFF 		bl	menuAction
 5082              	.L230:
 5083              		.loc 1 1291 0
 5084 0040 00BF     		nop
 5085 0042 80BD     		pop	{r7, pc}
 5086              	.L232:
 5087              		.align	2
 5088              	.L231:
 5089 0044 00000000 		.word	editMode
 5090 0048 00000000 		.word	patchNum
 5091              		.cfi_endproc
 5092              	.LFE70:
 5093              		.size	downPressed, .-downPressed
 5094              		.section	.text.upPressed,"ax",%progbits
 5095              		.align	2
 5096              		.global	upPressed
 5097              		.thumb
 5098              		.thumb_func
 5099              		.type	upPressed, %function
 5100              	upPressed:
 5101              	.LFB71:
1292:ui.c          **** 
1293:ui.c          **** void upPressed()
1294:ui.c          **** {
 5102              		.loc 1 1294 0
 5103              		.cfi_startproc
 5104              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 117


 5105              		@ frame_needed = 1, uses_anonymous_args = 0
 5106 0000 80B5     		push	{r7, lr}
 5107              		.cfi_def_cfa_offset 8
 5108              		.cfi_offset 7, -8
 5109              		.cfi_offset 14, -4
 5110 0002 00AF     		add	r7, sp, #0
 5111              		.cfi_def_cfa_register 7
1295:ui.c          ****     if (!editMode) //normal behavior
 5112              		.loc 1 1295 0
 5113 0004 0F4B     		ldr	r3, .L237
 5114 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5115 0008 002B     		cmp	r3, #0
 5116 000a 16D1     		bne	.L234
1296:ui.c          ****     {
1297:ui.c          ****         patchNum += 1;
 5117              		.loc 1 1297 0
 5118 000c 0E4B     		ldr	r3, .L237+4
 5119 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5120 0010 0133     		adds	r3, r3, #1
 5121 0012 DAB2     		uxtb	r2, r3
 5122 0014 0C4B     		ldr	r3, .L237+4
 5123 0016 1A70     		strb	r2, [r3]
1298:ui.c          ****         patchNum &= 63;
 5124              		.loc 1 1298 0
 5125 0018 0B4B     		ldr	r3, .L237+4
 5126 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5127 001c 03F03F03 		and	r3, r3, #63
 5128 0020 DAB2     		uxtb	r2, r3
 5129 0022 094B     		ldr	r3, .L237+4
 5130 0024 1A70     		strb	r2, [r3]
1299:ui.c          ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 5131              		.loc 1 1299 0
 5132 0026 084B     		ldr	r3, .L237+4
 5133 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5134 002a 40F2D671 		movw	r1, #2006
 5135 002e 1846     		mov	r0, r3
 5136 0030 FFF7FEFF 		bl	EEPROM_WriteByte
1300:ui.c          ****         displayCurrentPresetNameAndCopedent();
 5137              		.loc 1 1300 0
 5138 0034 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1301:ui.c          ****     }
1302:ui.c          ****     else
1303:ui.c          ****     {
1304:ui.c          ****         menuAction(Up);
1305:ui.c          ****     }
1306:ui.c          **** }
 5139              		.loc 1 1306 0
 5140 0038 02E0     		b	.L236
 5141              	.L234:
1304:ui.c          ****     }
 5142              		.loc 1 1304 0
 5143 003a 0320     		movs	r0, #3
 5144 003c FFF7FEFF 		bl	menuAction
 5145              	.L236:
 5146              		.loc 1 1306 0
 5147 0040 00BF     		nop
 5148 0042 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 118


 5149              	.L238:
 5150              		.align	2
 5151              	.L237:
 5152 0044 00000000 		.word	editMode
 5153 0048 00000000 		.word	patchNum
 5154              		.cfi_endproc
 5155              	.LFE71:
 5156              		.size	upPressed, .-upPressed
 5157              		.section	.text.enterPressed,"ax",%progbits
 5158              		.align	2
 5159              		.global	enterPressed
 5160              		.thumb
 5161              		.thumb_func
 5162              		.type	enterPressed, %function
 5163              	enterPressed:
 5164              	.LFB72:
1307:ui.c          **** 
1308:ui.c          **** void enterPressed()
1309:ui.c          **** {
 5165              		.loc 1 1309 0
 5166              		.cfi_startproc
 5167              		@ args = 0, pretend = 0, frame = 0
 5168              		@ frame_needed = 1, uses_anonymous_args = 0
 5169 0000 80B5     		push	{r7, lr}
 5170              		.cfi_def_cfa_offset 8
 5171              		.cfi_offset 7, -8
 5172              		.cfi_offset 14, -4
 5173 0002 00AF     		add	r7, sp, #0
 5174              		.cfi_def_cfa_register 7
1310:ui.c          ****     if (!editMode) //normal behavior
 5175              		.loc 1 1310 0
 5176 0004 0E4B     		ldr	r3, .L245
 5177 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5178 0008 002B     		cmp	r3, #0
 5179 000a 13D1     		bne	.L240
1311:ui.c          ****     {
1312:ui.c          ****         controlsDisplayed = !controlsDisplayed;
 5180              		.loc 1 1312 0
 5181 000c 0D4B     		ldr	r3, .L245+4
 5182 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5183 0010 002B     		cmp	r3, #0
 5184 0012 0CBF     		ite	eq
 5185 0014 0123     		moveq	r3, #1
 5186 0016 0023     		movne	r3, #0
 5187 0018 DBB2     		uxtb	r3, r3
 5188 001a 1A46     		mov	r2, r3
 5189 001c 094B     		ldr	r3, .L245+4
 5190 001e 1A70     		strb	r2, [r3]
1313:ui.c          ****         if (controlsDisplayed)
 5191              		.loc 1 1313 0
 5192 0020 084B     		ldr	r3, .L245+4
 5193 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5194 0024 002B     		cmp	r3, #0
 5195 0026 02D0     		beq	.L241
1314:ui.c          ****         {
1315:ui.c          ****             displayCurrentControlNames();
 5196              		.loc 1 1315 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 119


 5197 0028 FFF7FEFF 		bl	displayCurrentControlNames
1316:ui.c          ****         }
1317:ui.c          ****         else
1318:ui.c          ****         {
1319:ui.c          ****             displayCurrentPresetNameAndCopedent();
1320:ui.c          ****         }
1321:ui.c          ****     }
1322:ui.c          ****     else
1323:ui.c          ****     {
1324:ui.c          ****         menuAction(Enter);
1325:ui.c          ****     }
1326:ui.c          **** }
 5198              		.loc 1 1326 0
 5199 002c 05E0     		b	.L244
 5200              	.L241:
1319:ui.c          ****         }
 5201              		.loc 1 1319 0
 5202 002e FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5203              		.loc 1 1326 0
 5204 0032 02E0     		b	.L244
 5205              	.L240:
1324:ui.c          ****     }
 5206              		.loc 1 1324 0
 5207 0034 0420     		movs	r0, #4
 5208 0036 FFF7FEFF 		bl	menuAction
 5209              	.L244:
 5210              		.loc 1 1326 0
 5211 003a 00BF     		nop
 5212 003c 80BD     		pop	{r7, pc}
 5213              	.L246:
 5214 003e 00BF     		.align	2
 5215              	.L245:
 5216 0040 00000000 		.word	editMode
 5217 0044 00000000 		.word	controlsDisplayed
 5218              		.cfi_endproc
 5219              	.LFE72:
 5220              		.size	enterPressed, .-enterPressed
 5221              		.section	.rodata
 5222              		.align	2
 5223              	.LC41:
 5224 02bc 43414C49 		.ascii	"CALIBRATION\000"
 5224      42524154 
 5224      494F4E00 
 5225              		.align	2
 5226              	.LC42:
 5227 02c8 4D4F5645 		.ascii	"MOVE ALL PEDALS\000"
 5227      20414C4C 
 5227      20504544 
 5227      414C5300 
 5228              		.align	2
 5229              	.LC43:
 5230 02d8 414E4420 		.ascii	"AND LEVERS\000"
 5230      4C455645 
 5230      525300
 5231 02e3 00       		.align	2
 5232              	.LC44:
 5233 02e4 5448454E 		.ascii	"THEN PRESS ->\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 120


 5233      20505245 
 5233      5353202D 
 5233      3E00
 5234              		.section	.text.enterLeverCalibrationMode,"ax",%progbits
 5235              		.align	2
 5236              		.global	enterLeverCalibrationMode
 5237              		.thumb
 5238              		.thumb_func
 5239              		.type	enterLeverCalibrationMode, %function
 5240              	enterLeverCalibrationMode:
 5241              	.LFB73:
1327:ui.c          **** 
1328:ui.c          **** void enterLeverCalibrationMode(void)
1329:ui.c          **** {
 5242              		.loc 1 1329 0
 5243              		.cfi_startproc
 5244              		@ args = 0, pretend = 0, frame = 8
 5245              		@ frame_needed = 1, uses_anonymous_args = 0
 5246 0000 80B5     		push	{r7, lr}
 5247              		.cfi_def_cfa_offset 8
 5248              		.cfi_offset 7, -8
 5249              		.cfi_offset 14, -4
 5250 0002 82B0     		sub	sp, sp, #8
 5251              		.cfi_def_cfa_offset 16
 5252 0004 00AF     		add	r7, sp, #0
 5253              		.cfi_def_cfa_register 7
1330:ui.c          ****     OLEDclear(128, 64);
 5254              		.loc 1 1330 0
 5255 0006 4021     		movs	r1, #64
 5256 0008 8020     		movs	r0, #128
 5257 000a FFF7FEFF 		bl	OLEDclear
1331:ui.c          ****     myGFX_setFont(2);
 5258              		.loc 1 1331 0
 5259 000e 0220     		movs	r0, #2
 5260 0010 FFF7FEFF 		bl	myGFX_setFont
1332:ui.c          ****     OLEDtextColor(0, 1);
 5261              		.loc 1 1332 0
 5262 0014 0121     		movs	r1, #1
 5263 0016 0020     		movs	r0, #0
 5264 0018 FFF7FEFF 		bl	OLEDtextColor
1333:ui.c          ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 5265              		.loc 1 1333 0
 5266 001c 0023     		movs	r3, #0
 5267 001e 0122     		movs	r2, #1
 5268 0020 0B21     		movs	r1, #11
 5269 0022 1B48     		ldr	r0, .L250
 5270 0024 FFF7FEFF 		bl	OLEDwriteString
1334:ui.c          ****     OLEDwriteString("MOVE ALL PEDALS", 15, 1, SecondLine);
 5271              		.loc 1 1334 0
 5272 0028 0123     		movs	r3, #1
 5273 002a 0122     		movs	r2, #1
 5274 002c 0F21     		movs	r1, #15
 5275 002e 1948     		ldr	r0, .L250+4
 5276 0030 FFF7FEFF 		bl	OLEDwriteString
1335:ui.c          ****     OLEDwriteString("AND LEVERS", 10, 1, ThirdLine);
 5277              		.loc 1 1335 0
 5278 0034 0223     		movs	r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 121


 5279 0036 0122     		movs	r2, #1
 5280 0038 0A21     		movs	r1, #10
 5281 003a 1748     		ldr	r0, .L250+8
 5282 003c FFF7FEFF 		bl	OLEDwriteString
1336:ui.c          ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 5283              		.loc 1 1336 0
 5284 0040 0323     		movs	r3, #3
 5285 0042 0122     		movs	r2, #1
 5286 0044 0F21     		movs	r1, #15
 5287 0046 1548     		ldr	r0, .L250+12
 5288 0048 FFF7FEFF 		bl	OLEDwriteString
1337:ui.c          ****     mainOLEDWaitingToSend = 1;
 5289              		.loc 1 1337 0
 5290 004c 144B     		ldr	r3, .L250+16
 5291 004e 0122     		movs	r2, #1
 5292 0050 1A70     		strb	r2, [r3]
1338:ui.c          ****     OLEDtextColor(1, 0);
 5293              		.loc 1 1338 0
 5294 0052 0021     		movs	r1, #0
 5295 0054 0120     		movs	r0, #1
 5296 0056 FFF7FEFF 		bl	OLEDtextColor
 5297              	.LBB19:
1339:ui.c          ****     //entering calibration mode, clear the pedals low and high arrays
1340:ui.c          ****     for (int i = 0; i < 10; i++)
 5298              		.loc 1 1340 0
 5299 005a 0023     		movs	r3, #0
 5300 005c 7B60     		str	r3, [r7, #4]
 5301 005e 0DE0     		b	.L248
 5302              	.L249:
1341:ui.c          ****     {
1342:ui.c          ****         pedals_low[i] = 4095;
 5303              		.loc 1 1342 0 discriminator 3
 5304 0060 104A     		ldr	r2, .L250+20
 5305 0062 7B68     		ldr	r3, [r7, #4]
 5306 0064 40F6FF71 		movw	r1, #4095
 5307 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1343:ui.c          ****         pedals_high[i] = 0;
 5308              		.loc 1 1343 0 discriminator 3
 5309 006c 0E4A     		ldr	r2, .L250+24
 5310 006e 7B68     		ldr	r3, [r7, #4]
 5311 0070 0021     		movs	r1, #0
 5312 0072 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1340:ui.c          ****     {
 5313              		.loc 1 1340 0 discriminator 3
 5314 0076 7B68     		ldr	r3, [r7, #4]
 5315 0078 0133     		adds	r3, r3, #1
 5316 007a 7B60     		str	r3, [r7, #4]
 5317              	.L248:
1340:ui.c          ****     {
 5318              		.loc 1 1340 0 is_stmt 0 discriminator 1
 5319 007c 7B68     		ldr	r3, [r7, #4]
 5320 007e 092B     		cmp	r3, #9
 5321 0080 EEDD     		ble	.L249
 5322              	.LBE19:
1344:ui.c          ****     }
1345:ui.c          ****     leverCalibrationMode = 1;
 5323              		.loc 1 1345 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 122


 5324 0082 0A4B     		ldr	r3, .L250+28
 5325 0084 0122     		movs	r2, #1
 5326 0086 1A70     		strb	r2, [r3]
1346:ui.c          **** }
 5327              		.loc 1 1346 0
 5328 0088 00BF     		nop
 5329 008a 0837     		adds	r7, r7, #8
 5330              		.cfi_def_cfa_offset 8
 5331 008c BD46     		mov	sp, r7
 5332              		.cfi_def_cfa_register 13
 5333              		@ sp needed
 5334 008e 80BD     		pop	{r7, pc}
 5335              	.L251:
 5336              		.align	2
 5337              	.L250:
 5338 0090 BC020000 		.word	.LC41
 5339 0094 C8020000 		.word	.LC42
 5340 0098 D8020000 		.word	.LC43
 5341 009c E4020000 		.word	.LC44
 5342 00a0 00000000 		.word	mainOLEDWaitingToSend
 5343 00a4 00000000 		.word	pedals_low
 5344 00a8 00000000 		.word	pedals_high
 5345 00ac 00000000 		.word	leverCalibrationMode
 5346              		.cfi_endproc
 5347              	.LFE73:
 5348              		.size	enterLeverCalibrationMode, .-enterLeverCalibrationMode
 5349              		.section	.text.exitLeverCalibrationMode,"ax",%progbits
 5350              		.align	2
 5351              		.global	exitLeverCalibrationMode
 5352              		.thumb
 5353              		.thumb_func
 5354              		.type	exitLeverCalibrationMode, %function
 5355              	exitLeverCalibrationMode:
 5356              	.LFB74:
1347:ui.c          **** 
1348:ui.c          **** void exitLeverCalibrationMode(void)
1349:ui.c          **** {
 5357              		.loc 1 1349 0
 5358              		.cfi_startproc
 5359              		@ args = 0, pretend = 0, frame = 16
 5360              		@ frame_needed = 1, uses_anonymous_args = 0
 5361 0000 80B5     		push	{r7, lr}
 5362              		.cfi_def_cfa_offset 8
 5363              		.cfi_offset 7, -8
 5364              		.cfi_offset 14, -4
 5365 0002 84B0     		sub	sp, sp, #16
 5366              		.cfi_def_cfa_offset 24
 5367 0004 00AF     		add	r7, sp, #0
 5368              		.cfi_def_cfa_register 7
1350:ui.c          ****     leverCalibrationMode = 0;
 5369              		.loc 1 1350 0
 5370 0006 4E4B     		ldr	r3, .L261
 5371 0008 0022     		movs	r2, #0
 5372 000a 1A70     		strb	r2, [r3]
 5373              	.LBB20:
1351:ui.c          ****     //draw normal screen
1352:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 123


 5374              		.loc 1 1352 0
 5375 000c 0023     		movs	r3, #0
 5376 000e FB60     		str	r3, [r7, #12]
 5377 0010 19E0     		b	.L253
 5378              	.L256:
1353:ui.c          ****     {
1354:ui.c          ****         //if you are closer to pedal high than pedal low, then switch high and low, the sensor is r
1355:ui.c          ****         if (angle[i] > (pedals_low[i]+20))
 5379              		.loc 1 1355 0
 5380 0012 4C4A     		ldr	r2, .L261+4
 5381 0014 FB68     		ldr	r3, [r7, #12]
 5382 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5383 001a 1946     		mov	r1, r3
 5384 001c 4A4A     		ldr	r2, .L261+8
 5385 001e FB68     		ldr	r3, [r7, #12]
 5386 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5387 0024 1433     		adds	r3, r3, #20
 5388 0026 9942     		cmp	r1, r3
 5389 0028 05DD     		ble	.L254
1356:ui.c          ****         {
1357:ui.c          ****             pedal_inverted[i] = 1;
 5390              		.loc 1 1357 0
 5391 002a 484A     		ldr	r2, .L261+12
 5392 002c FB68     		ldr	r3, [r7, #12]
 5393 002e 1344     		add	r3, r3, r2
 5394 0030 0122     		movs	r2, #1
 5395 0032 1A70     		strb	r2, [r3]
 5396 0034 04E0     		b	.L255
 5397              	.L254:
1358:ui.c          ****         }
1359:ui.c          ****         else
1360:ui.c          ****         {
1361:ui.c          ****             pedal_inverted[i] = 0;
 5398              		.loc 1 1361 0
 5399 0036 454A     		ldr	r2, .L261+12
 5400 0038 FB68     		ldr	r3, [r7, #12]
 5401 003a 1344     		add	r3, r3, r2
 5402 003c 0022     		movs	r2, #0
 5403 003e 1A70     		strb	r2, [r3]
 5404              	.L255:
1352:ui.c          ****     {
 5405              		.loc 1 1352 0 discriminator 2
 5406 0040 FB68     		ldr	r3, [r7, #12]
 5407 0042 0133     		adds	r3, r3, #1
 5408 0044 FB60     		str	r3, [r7, #12]
 5409              	.L253:
1352:ui.c          ****     {
 5410              		.loc 1 1352 0 is_stmt 0 discriminator 1
 5411 0046 FB68     		ldr	r3, [r7, #12]
 5412 0048 092B     		cmp	r3, #9
 5413 004a E2DD     		ble	.L256
 5414              	.LBE20:
1362:ui.c          ****         }
1363:ui.c          ****     }
1364:ui.c          ****     uint16_t pedal_inverted_byte = 0;
 5415              		.loc 1 1364 0 is_stmt 1
 5416 004c 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 124


 5417 004e 7B81     		strh	r3, [r7, #10]	@ movhi
 5418              	.LBB21:
1365:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 5419              		.loc 1 1365 0
 5420 0050 0023     		movs	r3, #0
 5421 0052 7B60     		str	r3, [r7, #4]
 5422 0054 0EE0     		b	.L257
 5423              	.L258:
1366:ui.c          ****     {
1367:ui.c          ****         pedal_inverted_byte += pedal_inverted[i] << i;
 5424              		.loc 1 1367 0 discriminator 3
 5425 0056 3D4A     		ldr	r2, .L261+12
 5426 0058 7B68     		ldr	r3, [r7, #4]
 5427 005a 1344     		add	r3, r3, r2
 5428 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5429 005e 1A46     		mov	r2, r3
 5430 0060 7B68     		ldr	r3, [r7, #4]
 5431 0062 02FA03F3 		lsl	r3, r2, r3
 5432 0066 9AB2     		uxth	r2, r3
 5433 0068 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5434 006a 1344     		add	r3, r3, r2
 5435 006c 7B81     		strh	r3, [r7, #10]	@ movhi
1365:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 5436              		.loc 1 1365 0 discriminator 3
 5437 006e 7B68     		ldr	r3, [r7, #4]
 5438 0070 0133     		adds	r3, r3, #1
 5439 0072 7B60     		str	r3, [r7, #4]
 5440              	.L257:
1365:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
 5441              		.loc 1 1365 0 is_stmt 0 discriminator 1
 5442 0074 7B68     		ldr	r3, [r7, #4]
 5443 0076 092B     		cmp	r3, #9
 5444 0078 EDDD     		ble	.L258
 5445              	.LBE21:
1368:ui.c          ****     }
1369:ui.c          ****     EEPROM_WriteByte(pedal_inverted_byte>>8, EEPROM_PEDAL_INVERTED_OFFSET);
 5446              		.loc 1 1369 0 is_stmt 1
 5447 007a 7B89     		ldrh	r3, [r7, #10]
 5448 007c 1B0A     		lsrs	r3, r3, #8
 5449 007e 9BB2     		uxth	r3, r3
 5450 0080 DBB2     		uxtb	r3, r3
 5451 0082 40F2DF71 		movw	r1, #2015
 5452 0086 1846     		mov	r0, r3
 5453 0088 FFF7FEFF 		bl	EEPROM_WriteByte
1370:ui.c          ****     EEPROM_WriteByte(pedal_inverted_byte& 255, EEPROM_PEDAL_INVERTED_OFFSET+1);
 5454              		.loc 1 1370 0
 5455 008c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5456 008e DBB2     		uxtb	r3, r3
 5457 0090 4FF4FC61 		mov	r1, #2016
 5458 0094 1846     		mov	r0, r3
 5459 0096 FFF7FEFF 		bl	EEPROM_WriteByte
1371:ui.c          ****     calculatePedalRatios();
 5460              		.loc 1 1371 0
 5461 009a FFF7FEFF 		bl	calculatePedalRatios
 5462              	.LBB22:
1372:ui.c          ****     //now need to store this in EEPROM.                
1373:ui.c          ****     for (int i = 0; i < NUM_PEDALS; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 125


 5463              		.loc 1 1373 0
 5464 009e 0023     		movs	r3, #0
 5465 00a0 3B60     		str	r3, [r7]
 5466 00a2 45E0     		b	.L259
 5467              	.L260:
1374:ui.c          ****     {
1375:ui.c          ****          EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + (i*4));
 5468              		.loc 1 1375 0 discriminator 3
 5469 00a4 284A     		ldr	r2, .L261+8
 5470 00a6 3B68     		ldr	r3, [r7]
 5471 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5472 00ac 1B0A     		lsrs	r3, r3, #8
 5473 00ae 9BB2     		uxth	r3, r3
 5474 00b0 DAB2     		uxtb	r2, r3
 5475 00b2 3B68     		ldr	r3, [r7]
 5476 00b4 9BB2     		uxth	r3, r3
 5477 00b6 9B00     		lsls	r3, r3, #2
 5478 00b8 9BB2     		uxth	r3, r3
 5479 00ba 03F27E73 		addw	r3, r3, #1918
 5480 00be 9BB2     		uxth	r3, r3
 5481 00c0 1946     		mov	r1, r3
 5482 00c2 1046     		mov	r0, r2
 5483 00c4 FFF7FEFF 		bl	EEPROM_WriteByte
1376:ui.c          ****          EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 1));
 5484              		.loc 1 1376 0 discriminator 3
 5485 00c8 1F4A     		ldr	r2, .L261+8
 5486 00ca 3B68     		ldr	r3, [r7]
 5487 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5488 00d0 DAB2     		uxtb	r2, r3
 5489 00d2 3B68     		ldr	r3, [r7]
 5490 00d4 9BB2     		uxth	r3, r3
 5491 00d6 9B00     		lsls	r3, r3, #2
 5492 00d8 9BB2     		uxth	r3, r3
 5493 00da 03F27F73 		addw	r3, r3, #1919
 5494 00de 9BB2     		uxth	r3, r3
 5495 00e0 1946     		mov	r1, r3
 5496 00e2 1046     		mov	r0, r2
 5497 00e4 FFF7FEFF 		bl	EEPROM_WriteByte
1377:ui.c          ****          EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2));
 5498              		.loc 1 1377 0 discriminator 3
 5499 00e8 194A     		ldr	r2, .L261+16
 5500 00ea 3B68     		ldr	r3, [r7]
 5501 00ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5502 00f0 1B0A     		lsrs	r3, r3, #8
 5503 00f2 9BB2     		uxth	r3, r3
 5504 00f4 DAB2     		uxtb	r2, r3
 5505 00f6 3B68     		ldr	r3, [r7]
 5506 00f8 03F5F073 		add	r3, r3, #480
 5507 00fc 9BB2     		uxth	r3, r3
 5508 00fe 9B00     		lsls	r3, r3, #2
 5509 0100 9BB2     		uxth	r3, r3
 5510 0102 1946     		mov	r1, r3
 5511 0104 1046     		mov	r0, r2
 5512 0106 FFF7FEFF 		bl	EEPROM_WriteByte
1378:ui.c          ****          EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 3));
 5513              		.loc 1 1378 0 discriminator 3
 5514 010a 114A     		ldr	r2, .L261+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 126


 5515 010c 3B68     		ldr	r3, [r7]
 5516 010e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5517 0112 DAB2     		uxtb	r2, r3
 5518 0114 3B68     		ldr	r3, [r7]
 5519 0116 9BB2     		uxth	r3, r3
 5520 0118 9B00     		lsls	r3, r3, #2
 5521 011a 9BB2     		uxth	r3, r3
 5522 011c 03F28173 		addw	r3, r3, #1921
 5523 0120 9BB2     		uxth	r3, r3
 5524 0122 1946     		mov	r1, r3
 5525 0124 1046     		mov	r0, r2
 5526 0126 FFF7FEFF 		bl	EEPROM_WriteByte
1373:ui.c          ****     {
 5527              		.loc 1 1373 0 discriminator 3
 5528 012a 3B68     		ldr	r3, [r7]
 5529 012c 0133     		adds	r3, r3, #1
 5530 012e 3B60     		str	r3, [r7]
 5531              	.L259:
1373:ui.c          ****     {
 5532              		.loc 1 1373 0 is_stmt 0 discriminator 1
 5533 0130 3B68     		ldr	r3, [r7]
 5534 0132 092B     		cmp	r3, #9
 5535 0134 B6DD     		ble	.L260
 5536              	.LBE22:
1379:ui.c          ****     }
1380:ui.c          **** }
 5537              		.loc 1 1380 0 is_stmt 1
 5538 0136 00BF     		nop
 5539 0138 1037     		adds	r7, r7, #16
 5540              		.cfi_def_cfa_offset 8
 5541 013a BD46     		mov	sp, r7
 5542              		.cfi_def_cfa_register 13
 5543              		@ sp needed
 5544 013c 80BD     		pop	{r7, pc}
 5545              	.L262:
 5546 013e 00BF     		.align	2
 5547              	.L261:
 5548 0140 00000000 		.word	leverCalibrationMode
 5549 0144 00000000 		.word	angle
 5550 0148 00000000 		.word	pedals_low
 5551 014c 00000000 		.word	pedal_inverted
 5552 0150 00000000 		.word	pedals_high
 5553              		.cfi_endproc
 5554              	.LFE74:
 5555              		.size	exitLeverCalibrationMode, .-exitLeverCalibrationMode
 5556              		.section	.rodata
 5557 02f2 0000     		.align	2
 5558              	.LC45:
 5559 02f4 504C4143 		.ascii	"PLACE BAR AT \000"
 5559      45204241 
 5559      52204154 
 5559      2000
 5560 0302 0000     		.align	2
 5561              	.LC46:
 5562 0304 46524554 		.ascii	"FRET \000"
 5562      2000
 5563              		.section	.text.enterFretCalibrationMode,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 127


 5564              		.align	2
 5565              		.global	enterFretCalibrationMode
 5566              		.thumb
 5567              		.thumb_func
 5568              		.type	enterFretCalibrationMode, %function
 5569              	enterFretCalibrationMode:
 5570              	.LFB75:
1381:ui.c          **** 
1382:ui.c          **** 
1383:ui.c          **** void enterFretCalibrationMode(void)
1384:ui.c          **** {
 5571              		.loc 1 1384 0
 5572              		.cfi_startproc
 5573              		@ args = 0, pretend = 0, frame = 0
 5574              		@ frame_needed = 1, uses_anonymous_args = 0
 5575 0000 80B5     		push	{r7, lr}
 5576              		.cfi_def_cfa_offset 8
 5577              		.cfi_offset 7, -8
 5578              		.cfi_offset 14, -4
 5579 0002 00AF     		add	r7, sp, #0
 5580              		.cfi_def_cfa_register 7
1385:ui.c          ****     OLEDclear(128, 64);
 5581              		.loc 1 1385 0
 5582 0004 4021     		movs	r1, #64
 5583 0006 8020     		movs	r0, #128
 5584 0008 FFF7FEFF 		bl	OLEDclear
1386:ui.c          ****     myGFX_setFont(2);
 5585              		.loc 1 1386 0
 5586 000c 0220     		movs	r0, #2
 5587 000e FFF7FEFF 		bl	myGFX_setFont
1387:ui.c          ****     OLEDtextColor(0, 1);
 5588              		.loc 1 1387 0
 5589 0012 0121     		movs	r1, #1
 5590 0014 0020     		movs	r0, #0
 5591 0016 FFF7FEFF 		bl	OLEDtextColor
1388:ui.c          ****     fretToCalibrate = 0;
 5592              		.loc 1 1388 0
 5593 001a 194B     		ldr	r3, .L264
 5594 001c 0022     		movs	r2, #0
 5595 001e 1A70     		strb	r2, [r3]
1389:ui.c          ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 5596              		.loc 1 1389 0
 5597 0020 0023     		movs	r3, #0
 5598 0022 0122     		movs	r2, #1
 5599 0024 0B21     		movs	r1, #11
 5600 0026 1748     		ldr	r0, .L264+4
 5601 0028 FFF7FEFF 		bl	OLEDwriteString
1390:ui.c          ****     OLEDwriteString("PLACE BAR AT ", 15, 1, SecondLine);
 5602              		.loc 1 1390 0
 5603 002c 0123     		movs	r3, #1
 5604 002e 0122     		movs	r2, #1
 5605 0030 0F21     		movs	r1, #15
 5606 0032 1548     		ldr	r0, .L264+8
 5607 0034 FFF7FEFF 		bl	OLEDwriteString
1391:ui.c          ****     OLEDwriteString("FRET ", 5, 1, ThirdLine);
 5608              		.loc 1 1391 0
 5609 0038 0223     		movs	r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 128


 5610 003a 0122     		movs	r2, #1
 5611 003c 0521     		movs	r1, #5
 5612 003e 1348     		ldr	r0, .L264+12
 5613 0040 FFF7FEFF 		bl	OLEDwriteString
1392:ui.c          ****     OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 5614              		.loc 1 1392 0
 5615 0044 0E4B     		ldr	r3, .L264
 5616 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5617 0048 1A46     		mov	r2, r3
 5618 004a 114B     		ldr	r3, .L264+16
 5619 004c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 5620 004e 1846     		mov	r0, r3
 5621 0050 0223     		movs	r3, #2
 5622 0052 2822     		movs	r2, #40
 5623 0054 0221     		movs	r1, #2
 5624 0056 FFF7FEFF 		bl	OLEDwriteInt
1393:ui.c          ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 5625              		.loc 1 1393 0
 5626 005a 0323     		movs	r3, #3
 5627 005c 0122     		movs	r2, #1
 5628 005e 0F21     		movs	r1, #15
 5629 0060 0C48     		ldr	r0, .L264+20
 5630 0062 FFF7FEFF 		bl	OLEDwriteString
1394:ui.c          ****     mainOLEDWaitingToSend = 1;
 5631              		.loc 1 1394 0
 5632 0066 0C4B     		ldr	r3, .L264+24
 5633 0068 0122     		movs	r2, #1
 5634 006a 1A70     		strb	r2, [r3]
1395:ui.c          ****     OLEDtextColor(1, 0);
 5635              		.loc 1 1395 0
 5636 006c 0021     		movs	r1, #0
 5637 006e 0120     		movs	r0, #1
 5638 0070 FFF7FEFF 		bl	OLEDtextColor
1396:ui.c          ****     fretCalibrationMode = 1;
 5639              		.loc 1 1396 0
 5640 0074 094B     		ldr	r3, .L264+28
 5641 0076 0122     		movs	r2, #1
 5642 0078 1A70     		strb	r2, [r3]
1397:ui.c          **** }
 5643              		.loc 1 1397 0
 5644 007a 00BF     		nop
 5645 007c 80BD     		pop	{r7, pc}
 5646              	.L265:
 5647 007e 00BF     		.align	2
 5648              	.L264:
 5649 0080 00000000 		.word	fretToCalibrate
 5650 0084 BC020000 		.word	.LC41
 5651 0088 F4020000 		.word	.LC45
 5652 008c 04030000 		.word	.LC46
 5653 0090 00000000 		.word	whichFretArray
 5654 0094 E4020000 		.word	.LC44
 5655 0098 00000000 		.word	mainOLEDWaitingToSend
 5656 009c 00000000 		.word	fretCalibrationMode
 5657              		.cfi_endproc
 5658              	.LFE75:
 5659              		.size	enterFretCalibrationMode, .-enterFretCalibrationMode
 5660              		.section	.text.exitFretCalibrationMode,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 129


 5661              		.align	2
 5662              		.global	exitFretCalibrationMode
 5663              		.thumb
 5664              		.thumb_func
 5665              		.type	exitFretCalibrationMode, %function
 5666              	exitFretCalibrationMode:
 5667              	.LFB76:
1398:ui.c          **** 
1399:ui.c          **** void exitFretCalibrationMode(void)
1400:ui.c          **** {
 5668              		.loc 1 1400 0
 5669              		.cfi_startproc
 5670              		@ args = 0, pretend = 0, frame = 8
 5671              		@ frame_needed = 1, uses_anonymous_args = 0
 5672 0000 80B5     		push	{r7, lr}
 5673              		.cfi_def_cfa_offset 8
 5674              		.cfi_offset 7, -8
 5675              		.cfi_offset 14, -4
 5676 0002 82B0     		sub	sp, sp, #8
 5677              		.cfi_def_cfa_offset 16
 5678 0004 00AF     		add	r7, sp, #0
 5679              		.cfi_def_cfa_register 7
1401:ui.c          ****     fretCalibrationMode = 0;
 5680              		.loc 1 1401 0
 5681 0006 2B4B     		ldr	r3, .L269
 5682 0008 0022     		movs	r2, #0
 5683 000a 1A70     		strb	r2, [r3]
 5684              	.LBB23:
1402:ui.c          ****     //now need to store this in EEPROM.                
1403:ui.c          ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 5685              		.loc 1 1403 0
 5686 000c 0023     		movs	r3, #0
 5687 000e 7B60     		str	r3, [r7, #4]
 5688 0010 47E0     		b	.L267
 5689              	.L268:
1404:ui.c          ****     {
1405:ui.c          ****          EEPROM_WriteByte((fretMeasurements[0][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + (i*4));
 5690              		.loc 1 1405 0 discriminator 3
 5691 0012 294A     		ldr	r2, .L269+4
 5692 0014 7B68     		ldr	r3, [r7, #4]
 5693 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5694 001a 1B0A     		lsrs	r3, r3, #8
 5695 001c 9BB2     		uxth	r3, r3
 5696 001e DAB2     		uxtb	r2, r3
 5697 0020 7B68     		ldr	r3, [r7, #4]
 5698 0022 9BB2     		uxth	r3, r3
 5699 0024 9B00     		lsls	r3, r3, #2
 5700 0026 9BB2     		uxth	r3, r3
 5701 0028 03F2A673 		addw	r3, r3, #1958
 5702 002c 9BB2     		uxth	r3, r3
 5703 002e 1946     		mov	r1, r3
 5704 0030 1046     		mov	r0, r2
 5705 0032 FFF7FEFF 		bl	EEPROM_WriteByte
1406:ui.c          ****          EEPROM_WriteByte((fretMeasurements[0][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 5706              		.loc 1 1406 0 discriminator 3
 5707 0036 204A     		ldr	r2, .L269+4
 5708 0038 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 130


 5709 003a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5710 003e DAB2     		uxtb	r2, r3
 5711 0040 7B68     		ldr	r3, [r7, #4]
 5712 0042 9BB2     		uxth	r3, r3
 5713 0044 9B00     		lsls	r3, r3, #2
 5714 0046 9BB2     		uxth	r3, r3
 5715 0048 03F2A773 		addw	r3, r3, #1959
 5716 004c 9BB2     		uxth	r3, r3
 5717 004e 1946     		mov	r1, r3
 5718 0050 1046     		mov	r0, r2
 5719 0052 FFF7FEFF 		bl	EEPROM_WriteByte
1407:ui.c          ****          EEPROM_WriteByte((fretMeasurements[1][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 
 5720              		.loc 1 1407 0 discriminator 3
 5721 0056 184A     		ldr	r2, .L269+4
 5722 0058 7B68     		ldr	r3, [r7, #4]
 5723 005a 0C33     		adds	r3, r3, #12
 5724 005c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5725 0060 1B0A     		lsrs	r3, r3, #8
 5726 0062 9BB2     		uxth	r3, r3
 5727 0064 DAB2     		uxtb	r2, r3
 5728 0066 7B68     		ldr	r3, [r7, #4]
 5729 0068 03F5F573 		add	r3, r3, #490
 5730 006c 9BB2     		uxth	r3, r3
 5731 006e 9B00     		lsls	r3, r3, #2
 5732 0070 9BB2     		uxth	r3, r3
 5733 0072 1946     		mov	r1, r3
 5734 0074 1046     		mov	r0, r2
 5735 0076 FFF7FEFF 		bl	EEPROM_WriteByte
1408:ui.c          ****          EEPROM_WriteByte((fretMeasurements[1][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 5736              		.loc 1 1408 0 discriminator 3
 5737 007a 0F4A     		ldr	r2, .L269+4
 5738 007c 7B68     		ldr	r3, [r7, #4]
 5739 007e 0C33     		adds	r3, r3, #12
 5740 0080 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 5741 0084 DAB2     		uxtb	r2, r3
 5742 0086 7B68     		ldr	r3, [r7, #4]
 5743 0088 9BB2     		uxth	r3, r3
 5744 008a 9B00     		lsls	r3, r3, #2
 5745 008c 9BB2     		uxth	r3, r3
 5746 008e 03F2A973 		addw	r3, r3, #1961
 5747 0092 9BB2     		uxth	r3, r3
 5748 0094 1946     		mov	r1, r3
 5749 0096 1046     		mov	r0, r2
 5750 0098 FFF7FEFF 		bl	EEPROM_WriteByte
1403:ui.c          ****     {
 5751              		.loc 1 1403 0 discriminator 3
 5752 009c 7B68     		ldr	r3, [r7, #4]
 5753 009e 0133     		adds	r3, r3, #1
 5754 00a0 7B60     		str	r3, [r7, #4]
 5755              	.L267:
1403:ui.c          ****     {
 5756              		.loc 1 1403 0 is_stmt 0 discriminator 1
 5757 00a2 7B68     		ldr	r3, [r7, #4]
 5758 00a4 0B2B     		cmp	r3, #11
 5759 00a6 B4DD     		ble	.L268
 5760              	.LBE23:
1409:ui.c          ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 131


1410:ui.c          ****     exitEditModeMenu();
 5761              		.loc 1 1410 0 is_stmt 1
 5762 00a8 FFF7FEFF 		bl	exitEditModeMenu
1411:ui.c          **** 
1412:ui.c          **** }
 5763              		.loc 1 1412 0
 5764 00ac 00BF     		nop
 5765 00ae 0837     		adds	r7, r7, #8
 5766              		.cfi_def_cfa_offset 8
 5767 00b0 BD46     		mov	sp, r7
 5768              		.cfi_def_cfa_register 13
 5769              		@ sp needed
 5770 00b2 80BD     		pop	{r7, pc}
 5771              	.L270:
 5772              		.align	2
 5773              	.L269:
 5774 00b4 00000000 		.word	fretCalibrationMode
 5775 00b8 00000000 		.word	fretMeasurements
 5776              		.cfi_endproc
 5777              	.LFE76:
 5778              		.size	exitFretCalibrationMode, .-exitFretCalibrationMode
 5779              		.section	.text.exitPresetStoreMenu,"ax",%progbits
 5780              		.align	2
 5781              		.global	exitPresetStoreMenu
 5782              		.thumb
 5783              		.thumb_func
 5784              		.type	exitPresetStoreMenu, %function
 5785              	exitPresetStoreMenu:
 5786              	.LFB77:
1413:ui.c          **** 
1414:ui.c          **** void exitPresetStoreMenu(void)
1415:ui.c          **** {
 5787              		.loc 1 1415 0
 5788              		.cfi_startproc
 5789              		@ args = 0, pretend = 0, frame = 0
 5790              		@ frame_needed = 1, uses_anonymous_args = 0
 5791 0000 80B5     		push	{r7, lr}
 5792              		.cfi_def_cfa_offset 8
 5793              		.cfi_offset 7, -8
 5794              		.cfi_offset 14, -4
 5795 0002 00AF     		add	r7, sp, #0
 5796              		.cfi_def_cfa_register 7
1416:ui.c          ****     presetStoreStage = 0;
 5797              		.loc 1 1416 0
 5798 0004 044B     		ldr	r3, .L272
 5799 0006 0022     		movs	r2, #0
 5800 0008 1A70     		strb	r2, [r3]
1417:ui.c          ****     sendLocalPresetStoreCommand = 1;
 5801              		.loc 1 1417 0
 5802 000a 044B     		ldr	r3, .L272+4
 5803 000c 0122     		movs	r2, #1
 5804 000e 1A70     		strb	r2, [r3]
1418:ui.c          ****     exitEditModeMenu();
 5805              		.loc 1 1418 0
 5806 0010 FFF7FEFF 		bl	exitEditModeMenu
1419:ui.c          **** }
 5807              		.loc 1 1419 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 132


 5808 0014 00BF     		nop
 5809 0016 80BD     		pop	{r7, pc}
 5810              	.L273:
 5811              		.align	2
 5812              	.L272:
 5813 0018 00000000 		.word	presetStoreStage
 5814 001c 00000000 		.word	sendLocalPresetStoreCommand
 5815              		.cfi_endproc
 5816              	.LFE77:
 5817              		.size	exitPresetStoreMenu, .-exitPresetStoreMenu
 5818              		.section	.rodata
 5819 030a 0000     		.align	2
 5820              	.LC47:
 5821 030c 2000     		.ascii	" \000"
 5822              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 5823              		.align	2
 5824              		.global	displayCurrentPresetNameAndCopedent
 5825              		.thumb
 5826              		.thumb_func
 5827              		.type	displayCurrentPresetNameAndCopedent, %function
 5828              	displayCurrentPresetNameAndCopedent:
 5829              	.LFB78:
1420:ui.c          **** 
1421:ui.c          **** void displayCurrentPresetNameAndCopedent(void)
1422:ui.c          **** {
 5830              		.loc 1 1422 0
 5831              		.cfi_startproc
 5832              		@ args = 0, pretend = 0, frame = 8
 5833              		@ frame_needed = 1, uses_anonymous_args = 0
 5834 0000 90B5     		push	{r4, r7, lr}
 5835              		.cfi_def_cfa_offset 12
 5836              		.cfi_offset 4, -12
 5837              		.cfi_offset 7, -8
 5838              		.cfi_offset 14, -4
 5839 0002 85B0     		sub	sp, sp, #20
 5840              		.cfi_def_cfa_offset 32
 5841 0004 02AF     		add	r7, sp, #8
 5842              		.cfi_def_cfa 7, 24
1423:ui.c          ****     int macroCheck = 0;
 5843              		.loc 1 1423 0
 5844 0006 0023     		movs	r3, #0
 5845 0008 7B60     		str	r3, [r7, #4]
 5846              	.LBB24:
1424:ui.c          ****     for (int i = 0; i < NUM_MACROS; i++)
 5847              		.loc 1 1424 0
 5848 000a 0023     		movs	r3, #0
 5849 000c 3B60     		str	r3, [r7]
 5850 000e 15E0     		b	.L275
 5851              	.L277:
1425:ui.c          ****     {
1426:ui.c          ****         if (macroNamesArray[patchNum][i][0] == 255)
 5852              		.loc 1 1426 0
 5853 0010 3F4B     		ldr	r3, .L279
 5854 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5855 0014 1846     		mov	r0, r3
 5856 0016 3F49     		ldr	r1, .L279+4
 5857 0018 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 133


 5858 001a 1A46     		mov	r2, r3
 5859 001c D200     		lsls	r2, r2, #3
 5860 001e 1A44     		add	r2, r2, r3
 5861 0020 0346     		mov	r3, r0
 5862 0022 DB00     		lsls	r3, r3, #3
 5863 0024 0344     		add	r3, r3, r0
 5864 0026 1B01     		lsls	r3, r3, #4
 5865 0028 1344     		add	r3, r3, r2
 5866 002a 0B44     		add	r3, r3, r1
 5867 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5868 002e FF2B     		cmp	r3, #255
 5869 0030 01D1     		bne	.L276
1427:ui.c          ****         {
1428:ui.c          ****             macroCheck = 1;
 5870              		.loc 1 1428 0
 5871 0032 0123     		movs	r3, #1
 5872 0034 7B60     		str	r3, [r7, #4]
 5873              	.L276:
1424:ui.c          ****     {
 5874              		.loc 1 1424 0 discriminator 2
 5875 0036 3B68     		ldr	r3, [r7]
 5876 0038 0133     		adds	r3, r3, #1
 5877 003a 3B60     		str	r3, [r7]
 5878              	.L275:
1424:ui.c          ****     {
 5879              		.loc 1 1424 0 is_stmt 0 discriminator 1
 5880 003c 3B68     		ldr	r3, [r7]
 5881 003e 072B     		cmp	r3, #7
 5882 0040 E6DD     		ble	.L277
 5883              	.LBE24:
1429:ui.c          ****         }  
1430:ui.c          ****     }
1431:ui.c          ****     if (macroCheck == 0) //don't display if the name data still hasn't been retrieved by the SPI bu
 5884              		.loc 1 1431 0 is_stmt 1
 5885 0042 7B68     		ldr	r3, [r7, #4]
 5886 0044 002B     		cmp	r3, #0
 5887 0046 5BD1     		bne	.L278
1432:ui.c          ****     {
1433:ui.c          ****         OLEDclear(128, 64);
 5888              		.loc 1 1433 0
 5889 0048 4021     		movs	r1, #64
 5890 004a 8020     		movs	r0, #128
 5891 004c FFF7FEFF 		bl	OLEDclear
1434:ui.c          ****         OLEDtextColor(1, 0);
 5892              		.loc 1 1434 0
 5893 0050 0021     		movs	r1, #0
 5894 0052 0120     		movs	r0, #1
 5895 0054 FFF7FEFF 		bl	OLEDtextColor
1435:ui.c          ****         myGFX_setFont(0);
 5896              		.loc 1 1435 0
 5897 0058 0020     		movs	r0, #0
 5898 005a FFF7FEFF 		bl	myGFX_setFont
1436:ui.c          ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 5899              		.loc 1 1436 0
 5900 005e 2C4B     		ldr	r3, .L279
 5901 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5902 0062 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 134


 5903 0064 0023     		movs	r3, #0
 5904 0066 0022     		movs	r2, #0
 5905 0068 0221     		movs	r1, #2
 5906 006a FFF7FEFF 		bl	OLEDwriteInt
1437:ui.c          ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1438:ui.c          ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], PRESET_NAME_CLIPPED_LENGTH, 0, Seco
 5907              		.loc 1 1438 0
 5908 006e 284B     		ldr	r3, .L279
 5909 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5910 0072 1A46     		mov	r2, r3
 5911 0074 1346     		mov	r3, r2
 5912 0076 DB00     		lsls	r3, r3, #3
 5913 0078 9B1A     		subs	r3, r3, r2
 5914 007a 5B00     		lsls	r3, r3, #1
 5915 007c 264A     		ldr	r2, .L279+8
 5916 007e 9818     		adds	r0, r3, r2
 5917 0080 0123     		movs	r3, #1
 5918 0082 0022     		movs	r2, #0
 5919 0084 0C21     		movs	r1, #12
 5920 0086 FFF7FEFF 		bl	OLEDwriteString
1439:ui.c          ****         GFXwriteFastHLine(&theGFX, 0, 40, 128, 1);
 5921              		.loc 1 1439 0
 5922 008a 0123     		movs	r3, #1
 5923 008c 0093     		str	r3, [sp]
 5924 008e 8023     		movs	r3, #128
 5925 0090 2822     		movs	r2, #40
 5926 0092 0021     		movs	r1, #0
 5927 0094 2148     		ldr	r0, .L279+12
 5928 0096 FFF7FEFF 		bl	GFXwriteFastHLine
1440:ui.c          ****         OLEDwriteInt(currentCopedent , 1, 0,FourthLine);
 5929              		.loc 1 1440 0
 5930 009a 214B     		ldr	r3, .L279+16
 5931 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5932 009e 1846     		mov	r0, r3
 5933 00a0 0323     		movs	r3, #3
 5934 00a2 0022     		movs	r2, #0
 5935 00a4 0121     		movs	r1, #1
 5936 00a6 FFF7FEFF 		bl	OLEDwriteInt
1441:ui.c          ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 5937              		.loc 1 1441 0
 5938 00aa FFF7FEFF 		bl	OLEDgetCursor
 5939 00ae 0246     		mov	r2, r0
 5940 00b0 0323     		movs	r3, #3
 5941 00b2 0121     		movs	r1, #1
 5942 00b4 1B48     		ldr	r0, .L279+20
 5943 00b6 FFF7FEFF 		bl	OLEDwriteString
1442:ui.c          ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 5944              		.loc 1 1442 0
 5945 00ba 194B     		ldr	r3, .L279+16
 5946 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5947 00be 1A46     		mov	r2, r3
 5948 00c0 1346     		mov	r3, r2
 5949 00c2 9B00     		lsls	r3, r3, #2
 5950 00c4 1344     		add	r3, r3, r2
 5951 00c6 5B00     		lsls	r3, r3, #1
 5952 00c8 174A     		ldr	r2, .L279+24
 5953 00ca 9C18     		adds	r4, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 135


 5954 00cc FFF7FEFF 		bl	OLEDgetCursor
 5955 00d0 0246     		mov	r2, r0
 5956 00d2 0323     		movs	r3, #3
 5957 00d4 0A21     		movs	r1, #10
 5958 00d6 2046     		mov	r0, r4
 5959 00d8 FFF7FEFF 		bl	OLEDwriteString
1443:ui.c          ****         mainOLEDWaitingToSend = 1;
 5960              		.loc 1 1443 0
 5961 00dc 134B     		ldr	r3, .L279+28
 5962 00de 0122     		movs	r2, #1
 5963 00e0 1A70     		strb	r2, [r3]
1444:ui.c          ****         presetAlreadyDisplayed[patchNum] = 1;
 5964              		.loc 1 1444 0
 5965 00e2 0B4B     		ldr	r3, .L279
 5966 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5967 00e6 1A46     		mov	r2, r3
 5968 00e8 114B     		ldr	r3, .L279+32
 5969 00ea 0121     		movs	r1, #1
 5970 00ec 9954     		strb	r1, [r3, r2]
1445:ui.c          ****         //and update the macro OLED screens
1446:ui.c          ****         whichMacro = 0;
 5971              		.loc 1 1446 0
 5972 00ee 114B     		ldr	r3, .L279+36
 5973 00f0 0022     		movs	r2, #0
 5974 00f2 1A70     		strb	r2, [r3]
1447:ui.c          ****         macroOLEDWaitingToSend = 1;
 5975              		.loc 1 1447 0
 5976 00f4 104B     		ldr	r3, .L279+40
 5977 00f6 0122     		movs	r2, #1
 5978 00f8 1A70     		strb	r2, [r3]
1448:ui.c          ****         volumeWaitingToSend = 1;
 5979              		.loc 1 1448 0
 5980 00fa 104B     		ldr	r3, .L279+44
 5981 00fc 0122     		movs	r2, #1
 5982 00fe 1A70     		strb	r2, [r3]
 5983              	.L278:
1449:ui.c          ****     }
1450:ui.c          ****     controlsDisplayed = 0;
 5984              		.loc 1 1450 0
 5985 0100 0F4B     		ldr	r3, .L279+48
 5986 0102 0022     		movs	r2, #0
 5987 0104 1A70     		strb	r2, [r3]
1451:ui.c          **** }
 5988              		.loc 1 1451 0
 5989 0106 00BF     		nop
 5990 0108 0C37     		adds	r7, r7, #12
 5991              		.cfi_def_cfa_offset 12
 5992 010a BD46     		mov	sp, r7
 5993              		.cfi_def_cfa_register 13
 5994              		@ sp needed
 5995 010c 90BD     		pop	{r4, r7, pc}
 5996              	.L280:
 5997 010e 00BF     		.align	2
 5998              	.L279:
 5999 0110 00000000 		.word	patchNum
 6000 0114 00000000 		.word	macroNamesArray
 6001 0118 00000000 		.word	presetNamesArray
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 136


 6002 011c 00000000 		.word	theGFX
 6003 0120 00000000 		.word	currentCopedent
 6004 0124 0C030000 		.word	.LC47
 6005 0128 00000000 		.word	copedentNamesArray
 6006 012c 00000000 		.word	mainOLEDWaitingToSend
 6007 0130 00000000 		.word	presetAlreadyDisplayed
 6008 0134 00000000 		.word	whichMacro
 6009 0138 00000000 		.word	macroOLEDWaitingToSend
 6010 013c 00000000 		.word	volumeWaitingToSend
 6011 0140 00000000 		.word	controlsDisplayed
 6012              		.cfi_endproc
 6013              	.LFE78:
 6014              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 6015              		.section	.rodata
 6016 030e 0000     		.align	2
 6017              	.LC48:
 6018 0310 413A2000 		.ascii	"A: \000"
 6019              		.align	2
 6020              	.LC49:
 6021 0314 423A2000 		.ascii	"B: \000"
 6022              		.align	2
 6023              	.LC50:
 6024 0318 583A2000 		.ascii	"X: \000"
 6025              		.align	2
 6026              	.LC51:
 6027 031c 593A2000 		.ascii	"Y: \000"
 6028              		.section	.text.displayCurrentControlNames,"ax",%progbits
 6029              		.align	2
 6030              		.global	displayCurrentControlNames
 6031              		.thumb
 6032              		.thumb_func
 6033              		.type	displayCurrentControlNames, %function
 6034              	displayCurrentControlNames:
 6035              	.LFB79:
1452:ui.c          **** 
1453:ui.c          **** void displayCurrentControlNames(void)
1454:ui.c          **** {
 6036              		.loc 1 1454 0
 6037              		.cfi_startproc
 6038              		@ args = 0, pretend = 0, frame = 8
 6039              		@ frame_needed = 1, uses_anonymous_args = 0
 6040 0000 90B5     		push	{r4, r7, lr}
 6041              		.cfi_def_cfa_offset 12
 6042              		.cfi_offset 4, -12
 6043              		.cfi_offset 7, -8
 6044              		.cfi_offset 14, -4
 6045 0002 83B0     		sub	sp, sp, #12
 6046              		.cfi_def_cfa_offset 24
 6047 0004 00AF     		add	r7, sp, #0
 6048              		.cfi_def_cfa_register 7
1455:ui.c          ****     int controlCheck = 0;
 6049              		.loc 1 1455 0
 6050 0006 0023     		movs	r3, #0
 6051 0008 7B60     		str	r3, [r7, #4]
 6052              	.LBB25:
1456:ui.c          ****     for (int i = 0; i < NUM_CONTROLS; i++)
 6053              		.loc 1 1456 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 137


 6054 000a 0023     		movs	r3, #0
 6055 000c 3B60     		str	r3, [r7]
 6056 000e 17E0     		b	.L282
 6057              	.L284:
1457:ui.c          ****     {
1458:ui.c          ****         if (controlNamesArray[patchNum][i][0] == 255)
 6058              		.loc 1 1458 0
 6059 0010 494B     		ldr	r3, .L287
 6060 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6061 0014 1846     		mov	r0, r3
 6062 0016 4949     		ldr	r1, .L287+4
 6063 0018 3B68     		ldr	r3, [r7]
 6064 001a 1A46     		mov	r2, r3
 6065 001c 9200     		lsls	r2, r2, #2
 6066 001e 1A44     		add	r2, r2, r3
 6067 0020 5300     		lsls	r3, r2, #1
 6068 0022 1A46     		mov	r2, r3
 6069 0024 0346     		mov	r3, r0
 6070 0026 9B00     		lsls	r3, r3, #2
 6071 0028 0344     		add	r3, r3, r0
 6072 002a DB00     		lsls	r3, r3, #3
 6073 002c 1344     		add	r3, r3, r2
 6074 002e 0B44     		add	r3, r3, r1
 6075 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6076 0032 FF2B     		cmp	r3, #255
 6077 0034 01D1     		bne	.L283
1459:ui.c          ****         {
1460:ui.c          ****             controlCheck = 1;
 6078              		.loc 1 1460 0
 6079 0036 0123     		movs	r3, #1
 6080 0038 7B60     		str	r3, [r7, #4]
 6081              	.L283:
1456:ui.c          ****     {
 6082              		.loc 1 1456 0 discriminator 2
 6083 003a 3B68     		ldr	r3, [r7]
 6084 003c 0133     		adds	r3, r3, #1
 6085 003e 3B60     		str	r3, [r7]
 6086              	.L282:
1456:ui.c          ****     {
 6087              		.loc 1 1456 0 is_stmt 0 discriminator 1
 6088 0040 3B68     		ldr	r3, [r7]
 6089 0042 032B     		cmp	r3, #3
 6090 0044 E4DD     		ble	.L284
 6091              	.LBE25:
1461:ui.c          ****         }  
1462:ui.c          ****     }
1463:ui.c          ****     if (controlCheck == 0) //don't display if the name data still hasn't been retrieved by the SPI 
 6092              		.loc 1 1463 0 is_stmt 1
 6093 0046 7B68     		ldr	r3, [r7, #4]
 6094 0048 002B     		cmp	r3, #0
 6095 004a 70D1     		bne	.L286
1464:ui.c          ****     {
1465:ui.c          ****         OLEDclear(128, 64);
 6096              		.loc 1 1465 0
 6097 004c 4021     		movs	r1, #64
 6098 004e 8020     		movs	r0, #128
 6099 0050 FFF7FEFF 		bl	OLEDclear
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 138


1466:ui.c          ****         OLEDtextColor(1, 0);
 6100              		.loc 1 1466 0
 6101 0054 0021     		movs	r1, #0
 6102 0056 0120     		movs	r0, #1
 6103 0058 FFF7FEFF 		bl	OLEDtextColor
1467:ui.c          ****         myGFX_setFont(0);
 6104              		.loc 1 1467 0
 6105 005c 0020     		movs	r0, #0
 6106 005e FFF7FEFF 		bl	myGFX_setFont
1468:ui.c          ****         OLEDwriteString("A: ", 3, 0, FirstLine);
 6107              		.loc 1 1468 0
 6108 0062 0023     		movs	r3, #0
 6109 0064 0022     		movs	r2, #0
 6110 0066 0321     		movs	r1, #3
 6111 0068 3548     		ldr	r0, .L287+8
 6112 006a FFF7FEFF 		bl	OLEDwriteString
1469:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][0][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6113              		.loc 1 1469 0
 6114 006e 324B     		ldr	r3, .L287
 6115 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6116 0072 1A46     		mov	r2, r3
 6117 0074 1346     		mov	r3, r2
 6118 0076 9B00     		lsls	r3, r3, #2
 6119 0078 1344     		add	r3, r3, r2
 6120 007a DB00     		lsls	r3, r3, #3
 6121 007c 2F4A     		ldr	r2, .L287+4
 6122 007e 9C18     		adds	r4, r3, r2
 6123 0080 FFF7FEFF 		bl	OLEDgetCursor
 6124 0084 0346     		mov	r3, r0
 6125 0086 9A1F     		subs	r2, r3, #6
 6126 0088 0023     		movs	r3, #0
 6127 008a 0A21     		movs	r1, #10
 6128 008c 2046     		mov	r0, r4
 6129 008e FFF7FEFF 		bl	OLEDwriteString
1470:ui.c          ****         OLEDwriteString("B: ", 3, 0, SecondLine);
 6130              		.loc 1 1470 0
 6131 0092 0123     		movs	r3, #1
 6132 0094 0022     		movs	r2, #0
 6133 0096 0321     		movs	r1, #3
 6134 0098 2A48     		ldr	r0, .L287+12
 6135 009a FFF7FEFF 		bl	OLEDwriteString
1471:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][1][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6136              		.loc 1 1471 0
 6137 009e 264B     		ldr	r3, .L287
 6138 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6139 00a2 1A46     		mov	r2, r3
 6140 00a4 1346     		mov	r3, r2
 6141 00a6 9B00     		lsls	r3, r3, #2
 6142 00a8 1344     		add	r3, r3, r2
 6143 00aa DB00     		lsls	r3, r3, #3
 6144 00ac 0A33     		adds	r3, r3, #10
 6145 00ae 234A     		ldr	r2, .L287+4
 6146 00b0 9C18     		adds	r4, r3, r2
 6147 00b2 FFF7FEFF 		bl	OLEDgetCursor
 6148 00b6 0346     		mov	r3, r0
 6149 00b8 9A1F     		subs	r2, r3, #6
 6150 00ba 0123     		movs	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 139


 6151 00bc 0A21     		movs	r1, #10
 6152 00be 2046     		mov	r0, r4
 6153 00c0 FFF7FEFF 		bl	OLEDwriteString
1472:ui.c          ****         OLEDwriteString("X: ", 3, 0, ThirdLine);
 6154              		.loc 1 1472 0
 6155 00c4 0223     		movs	r3, #2
 6156 00c6 0022     		movs	r2, #0
 6157 00c8 0321     		movs	r1, #3
 6158 00ca 1F48     		ldr	r0, .L287+16
 6159 00cc FFF7FEFF 		bl	OLEDwriteString
1473:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][2][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6160              		.loc 1 1473 0
 6161 00d0 194B     		ldr	r3, .L287
 6162 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6163 00d4 1A46     		mov	r2, r3
 6164 00d6 1346     		mov	r3, r2
 6165 00d8 9B00     		lsls	r3, r3, #2
 6166 00da 1344     		add	r3, r3, r2
 6167 00dc DB00     		lsls	r3, r3, #3
 6168 00de 1433     		adds	r3, r3, #20
 6169 00e0 164A     		ldr	r2, .L287+4
 6170 00e2 9C18     		adds	r4, r3, r2
 6171 00e4 FFF7FEFF 		bl	OLEDgetCursor
 6172 00e8 0346     		mov	r3, r0
 6173 00ea 9A1F     		subs	r2, r3, #6
 6174 00ec 0223     		movs	r3, #2
 6175 00ee 0A21     		movs	r1, #10
 6176 00f0 2046     		mov	r0, r4
 6177 00f2 FFF7FEFF 		bl	OLEDwriteString
1474:ui.c          ****         OLEDwriteString("Y: ", 3, 0, FourthLine);
 6178              		.loc 1 1474 0
 6179 00f6 0323     		movs	r3, #3
 6180 00f8 0022     		movs	r2, #0
 6181 00fa 0321     		movs	r1, #3
 6182 00fc 1348     		ldr	r0, .L287+20
 6183 00fe FFF7FEFF 		bl	OLEDwriteString
1475:ui.c          ****         OLEDwriteString((char *)&controlNamesArray[patchNum][3][0], CONTROL_NAME_CLIPPED_LENGTH, OL
 6184              		.loc 1 1475 0
 6185 0102 0D4B     		ldr	r3, .L287
 6186 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6187 0106 1A46     		mov	r2, r3
 6188 0108 1346     		mov	r3, r2
 6189 010a 9B00     		lsls	r3, r3, #2
 6190 010c 1344     		add	r3, r3, r2
 6191 010e DB00     		lsls	r3, r3, #3
 6192 0110 1E33     		adds	r3, r3, #30
 6193 0112 0A4A     		ldr	r2, .L287+4
 6194 0114 9C18     		adds	r4, r3, r2
 6195 0116 FFF7FEFF 		bl	OLEDgetCursor
 6196 011a 0346     		mov	r3, r0
 6197 011c 9A1F     		subs	r2, r3, #6
 6198 011e 0323     		movs	r3, #3
 6199 0120 0A21     		movs	r1, #10
 6200 0122 2046     		mov	r0, r4
 6201 0124 FFF7FEFF 		bl	OLEDwriteString
1476:ui.c          **** 
1477:ui.c          ****         mainOLEDWaitingToSend = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 140


 6202              		.loc 1 1477 0
 6203 0128 094B     		ldr	r3, .L287+24
 6204 012a 0122     		movs	r2, #1
 6205 012c 1A70     		strb	r2, [r3]
 6206              	.L286:
1478:ui.c          ****     }
1479:ui.c          **** }
 6207              		.loc 1 1479 0
 6208 012e 00BF     		nop
 6209 0130 0C37     		adds	r7, r7, #12
 6210              		.cfi_def_cfa_offset 12
 6211 0132 BD46     		mov	sp, r7
 6212              		.cfi_def_cfa_register 13
 6213              		@ sp needed
 6214 0134 90BD     		pop	{r4, r7, pc}
 6215              	.L288:
 6216 0136 00BF     		.align	2
 6217              	.L287:
 6218 0138 00000000 		.word	patchNum
 6219 013c 00000000 		.word	controlNamesArray
 6220 0140 10030000 		.word	.LC48
 6221 0144 14030000 		.word	.LC49
 6222 0148 18030000 		.word	.LC50
 6223 014c 1C030000 		.word	.LC51
 6224 0150 00000000 		.word	mainOLEDWaitingToSend
 6225              		.cfi_endproc
 6226              	.LFE79:
 6227              		.size	displayCurrentControlNames, .-displayCurrentControlNames
 6228              		.text
 6229              	.Letext0:
 6230              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6231              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6232              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 6233              		.file 5 "gfx_font.h"
 6234              		.file 6 "gfx.h"
 6235              		.file 7 "main.h"
 6236              		.file 8 "oled.h"
 6237              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 6238              		.file 10 "Generated_Source\\PSoC5/Decoder_1.h"
 6239              		.section	.debug_info,"",%progbits
 6240              	.Ldebug_info0:
 6241 0000 5A0D0000 		.4byte	0xd5a
 6242 0004 0400     		.2byte	0x4
 6243 0006 00000000 		.4byte	.Ldebug_abbrev0
 6244 000a 04       		.byte	0x4
 6245 000b 01       		.uleb128 0x1
 6246 000c EF000000 		.4byte	.LASF183
 6247 0010 0C       		.byte	0xc
 6248 0011 95070000 		.4byte	.LASF184
 6249 0015 0C050000 		.4byte	.LASF185
 6250 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6251 001d 00000000 		.4byte	0
 6252 0021 00000000 		.4byte	.Ldebug_line0
 6253 0025 02       		.uleb128 0x2
 6254 0026 68060000 		.4byte	.LASF0
 6255 002a 02       		.byte	0x2
 6256 002b 1B       		.byte	0x1b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 141


 6257 002c 30000000 		.4byte	0x30
 6258 0030 03       		.uleb128 0x3
 6259 0031 01       		.byte	0x1
 6260 0032 06       		.byte	0x6
 6261 0033 B3090000 		.4byte	.LASF2
 6262 0037 02       		.uleb128 0x2
 6263 0038 B7070000 		.4byte	.LASF1
 6264 003c 02       		.byte	0x2
 6265 003d 1D       		.byte	0x1d
 6266 003e 42000000 		.4byte	0x42
 6267 0042 03       		.uleb128 0x3
 6268 0043 01       		.byte	0x1
 6269 0044 08       		.byte	0x8
 6270 0045 C0080000 		.4byte	.LASF3
 6271 0049 02       		.uleb128 0x2
 6272 004a 8A050000 		.4byte	.LASF4
 6273 004e 02       		.byte	0x2
 6274 004f 29       		.byte	0x29
 6275 0050 54000000 		.4byte	0x54
 6276 0054 03       		.uleb128 0x3
 6277 0055 02       		.byte	0x2
 6278 0056 05       		.byte	0x5
 6279 0057 FC060000 		.4byte	.LASF5
 6280 005b 02       		.uleb128 0x2
 6281 005c B6020000 		.4byte	.LASF6
 6282 0060 02       		.byte	0x2
 6283 0061 2B       		.byte	0x2b
 6284 0062 66000000 		.4byte	0x66
 6285 0066 03       		.uleb128 0x3
 6286 0067 02       		.byte	0x2
 6287 0068 07       		.byte	0x7
 6288 0069 BF090000 		.4byte	.LASF7
 6289 006d 02       		.uleb128 0x2
 6290 006e D2000000 		.4byte	.LASF8
 6291 0072 02       		.byte	0x2
 6292 0073 3F       		.byte	0x3f
 6293 0074 78000000 		.4byte	0x78
 6294 0078 03       		.uleb128 0x3
 6295 0079 04       		.byte	0x4
 6296 007a 05       		.byte	0x5
 6297 007b 29070000 		.4byte	.LASF9
 6298 007f 03       		.uleb128 0x3
 6299 0080 04       		.byte	0x4
 6300 0081 07       		.byte	0x7
 6301 0082 26080000 		.4byte	.LASF10
 6302 0086 03       		.uleb128 0x3
 6303 0087 08       		.byte	0x8
 6304 0088 05       		.byte	0x5
 6305 0089 95040000 		.4byte	.LASF11
 6306 008d 03       		.uleb128 0x3
 6307 008e 08       		.byte	0x8
 6308 008f 07       		.byte	0x7
 6309 0090 7C020000 		.4byte	.LASF12
 6310 0094 04       		.uleb128 0x4
 6311 0095 04       		.byte	0x4
 6312 0096 05       		.byte	0x5
 6313 0097 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 142


 6314 009b 03       		.uleb128 0x3
 6315 009c 04       		.byte	0x4
 6316 009d 07       		.byte	0x7
 6317 009e AB000000 		.4byte	.LASF13
 6318 00a2 02       		.uleb128 0x2
 6319 00a3 2C020000 		.4byte	.LASF14
 6320 00a7 03       		.byte	0x3
 6321 00a8 14       		.byte	0x14
 6322 00a9 25000000 		.4byte	0x25
 6323 00ad 02       		.uleb128 0x2
 6324 00ae 3E040000 		.4byte	.LASF15
 6325 00b2 03       		.byte	0x3
 6326 00b3 18       		.byte	0x18
 6327 00b4 37000000 		.4byte	0x37
 6328 00b8 02       		.uleb128 0x2
 6329 00b9 74020000 		.4byte	.LASF16
 6330 00bd 03       		.byte	0x3
 6331 00be 20       		.byte	0x20
 6332 00bf 49000000 		.4byte	0x49
 6333 00c3 02       		.uleb128 0x2
 6334 00c4 AF060000 		.4byte	.LASF17
 6335 00c8 03       		.byte	0x3
 6336 00c9 24       		.byte	0x24
 6337 00ca 5B000000 		.4byte	0x5b
 6338 00ce 02       		.uleb128 0x2
 6339 00cf 6F080000 		.4byte	.LASF18
 6340 00d3 03       		.byte	0x3
 6341 00d4 2C       		.byte	0x2c
 6342 00d5 6D000000 		.4byte	0x6d
 6343 00d9 05       		.uleb128 0x5
 6344 00da 0E0A0000 		.4byte	.LASF19
 6345 00de 04       		.byte	0x4
 6346 00df E901     		.2byte	0x1e9
 6347 00e1 42000000 		.4byte	0x42
 6348 00e5 03       		.uleb128 0x3
 6349 00e6 04       		.byte	0x4
 6350 00e7 04       		.byte	0x4
 6351 00e8 46020000 		.4byte	.LASF20
 6352 00ec 03       		.uleb128 0x3
 6353 00ed 08       		.byte	0x8
 6354 00ee 04       		.byte	0x4
 6355 00ef 140A0000 		.4byte	.LASF21
 6356 00f3 03       		.uleb128 0x3
 6357 00f4 01       		.byte	0x1
 6358 00f5 08       		.byte	0x8
 6359 00f6 D5030000 		.4byte	.LASF22
 6360 00fa 03       		.uleb128 0x3
 6361 00fb 08       		.byte	0x8
 6362 00fc 04       		.byte	0x4
 6363 00fd 8A060000 		.4byte	.LASF23
 6364 0101 03       		.uleb128 0x3
 6365 0102 04       		.byte	0x4
 6366 0103 07       		.byte	0x7
 6367 0104 F1070000 		.4byte	.LASF24
 6368 0108 06       		.uleb128 0x6
 6369 0109 04       		.byte	0x4
 6370 010a 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 143


 6371 010e 07       		.uleb128 0x7
 6372 010f F3000000 		.4byte	0xf3
 6373 0113 08       		.uleb128 0x8
 6374 0114 C3000000 		.4byte	0xc3
 6375 0118 09       		.uleb128 0x9
 6376 0119 1C030000 		.4byte	.LASF68
 6377 011d 01       		.byte	0x1
 6378 011e 42000000 		.4byte	0x42
 6379 0122 07       		.byte	0x7
 6380 0123 8C       		.byte	0x8c
 6381 0124 7D010000 		.4byte	0x17d
 6382 0128 0A       		.uleb128 0xa
 6383 0129 A8050000 		.4byte	.LASF25
 6384 012d 00       		.byte	0
 6385 012e 0A       		.uleb128 0xa
 6386 012f 80030000 		.4byte	.LASF26
 6387 0133 01       		.byte	0x1
 6388 0134 0A       		.uleb128 0xa
 6389 0135 CC060000 		.4byte	.LASF27
 6390 0139 02       		.byte	0x2
 6391 013a 0A       		.uleb128 0xa
 6392 013b 18020000 		.4byte	.LASF28
 6393 013f 03       		.byte	0x3
 6394 0140 0A       		.uleb128 0xa
 6395 0141 77080000 		.4byte	.LASF29
 6396 0145 04       		.byte	0x4
 6397 0146 0A       		.uleb128 0xa
 6398 0147 38080000 		.4byte	.LASF30
 6399 014b 05       		.byte	0x5
 6400 014c 0A       		.uleb128 0xa
 6401 014d D2090000 		.4byte	.LASF31
 6402 0151 06       		.byte	0x6
 6403 0152 0A       		.uleb128 0xa
 6404 0153 08090000 		.4byte	.LASF32
 6405 0157 07       		.byte	0x7
 6406 0158 0A       		.uleb128 0xa
 6407 0159 65090000 		.4byte	.LASF33
 6408 015d 08       		.byte	0x8
 6409 015e 0A       		.uleb128 0xa
 6410 015f FA080000 		.4byte	.LASF34
 6411 0163 09       		.byte	0x9
 6412 0164 0A       		.uleb128 0xa
 6413 0165 8A090000 		.4byte	.LASF35
 6414 0169 0A       		.byte	0xa
 6415 016a 0A       		.uleb128 0xa
 6416 016b 0F060000 		.4byte	.LASF36
 6417 016f 0B       		.byte	0xb
 6418 0170 0A       		.uleb128 0xa
 6419 0171 CC010000 		.4byte	.LASF37
 6420 0175 0C       		.byte	0xc
 6421 0176 0A       		.uleb128 0xa
 6422 0177 50070000 		.4byte	.LASF38
 6423 017b 0D       		.byte	0xd
 6424 017c 00       		.byte	0
 6425 017d 0B       		.uleb128 0xb
 6426 017e 08       		.byte	0x8
 6427 017f 05       		.byte	0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 144


 6428 0180 0C       		.byte	0xc
 6429 0181 CE010000 		.4byte	0x1ce
 6430 0185 0C       		.uleb128 0xc
 6431 0186 6D030000 		.4byte	.LASF39
 6432 018a 05       		.byte	0x5
 6433 018b 0D       		.byte	0xd
 6434 018c C3000000 		.4byte	0xc3
 6435 0190 00       		.byte	0
 6436 0191 0C       		.uleb128 0xc
 6437 0192 7A030000 		.4byte	.LASF40
 6438 0196 05       		.byte	0x5
 6439 0197 0E       		.byte	0xe
 6440 0198 AD000000 		.4byte	0xad
 6441 019c 02       		.byte	0x2
 6442 019d 0C       		.uleb128 0xc
 6443 019e 1A060000 		.4byte	.LASF41
 6444 01a2 05       		.byte	0x5
 6445 01a3 0E       		.byte	0xe
 6446 01a4 AD000000 		.4byte	0xad
 6447 01a8 03       		.byte	0x3
 6448 01a9 0C       		.uleb128 0xc
 6449 01aa 4D090000 		.4byte	.LASF42
 6450 01ae 05       		.byte	0x5
 6451 01af 0F       		.byte	0xf
 6452 01b0 AD000000 		.4byte	0xad
 6453 01b4 04       		.byte	0x4
 6454 01b5 0C       		.uleb128 0xc
 6455 01b6 73090000 		.4byte	.LASF43
 6456 01ba 05       		.byte	0x5
 6457 01bb 10       		.byte	0x10
 6458 01bc A2000000 		.4byte	0xa2
 6459 01c0 05       		.byte	0x5
 6460 01c1 0C       		.uleb128 0xc
 6461 01c2 46040000 		.4byte	.LASF44
 6462 01c6 05       		.byte	0x5
 6463 01c7 10       		.byte	0x10
 6464 01c8 A2000000 		.4byte	0xa2
 6465 01cc 06       		.byte	0x6
 6466 01cd 00       		.byte	0
 6467 01ce 02       		.uleb128 0x2
 6468 01cf ED030000 		.4byte	.LASF45
 6469 01d3 05       		.byte	0x5
 6470 01d4 11       		.byte	0x11
 6471 01d5 7D010000 		.4byte	0x17d
 6472 01d9 0B       		.uleb128 0xb
 6473 01da 0C       		.byte	0xc
 6474 01db 05       		.byte	0x5
 6475 01dc 13       		.byte	0x13
 6476 01dd 1E020000 		.4byte	0x21e
 6477 01e1 0C       		.uleb128 0xc
 6478 01e2 CE080000 		.4byte	.LASF46
 6479 01e6 05       		.byte	0x5
 6480 01e7 14       		.byte	0x14
 6481 01e8 1E020000 		.4byte	0x21e
 6482 01ec 00       		.byte	0
 6483 01ed 0C       		.uleb128 0xc
 6484 01ee 8B080000 		.4byte	.LASF47
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 145


 6485 01f2 05       		.byte	0x5
 6486 01f3 15       		.byte	0x15
 6487 01f4 24020000 		.4byte	0x224
 6488 01f8 04       		.byte	0x4
 6489 01f9 0C       		.uleb128 0xc
 6490 01fa 19090000 		.4byte	.LASF48
 6491 01fe 05       		.byte	0x5
 6492 01ff 16       		.byte	0x16
 6493 0200 AD000000 		.4byte	0xad
 6494 0204 08       		.byte	0x8
 6495 0205 0C       		.uleb128 0xc
 6496 0206 0A000000 		.4byte	.LASF49
 6497 020a 05       		.byte	0x5
 6498 020b 16       		.byte	0x16
 6499 020c AD000000 		.4byte	0xad
 6500 0210 09       		.byte	0x9
 6501 0211 0C       		.uleb128 0xc
 6502 0212 AD020000 		.4byte	.LASF50
 6503 0216 05       		.byte	0x5
 6504 0217 17       		.byte	0x17
 6505 0218 AD000000 		.4byte	0xad
 6506 021c 0A       		.byte	0xa
 6507 021d 00       		.byte	0
 6508 021e 06       		.uleb128 0x6
 6509 021f 04       		.byte	0x4
 6510 0220 AD000000 		.4byte	0xad
 6511 0224 06       		.uleb128 0x6
 6512 0225 04       		.byte	0x4
 6513 0226 CE010000 		.4byte	0x1ce
 6514 022a 02       		.uleb128 0x2
 6515 022b 39000000 		.4byte	.LASF51
 6516 022f 05       		.byte	0x5
 6517 0230 18       		.byte	0x18
 6518 0231 D9010000 		.4byte	0x1d9
 6519 0235 0D       		.uleb128 0xd
 6520 0236 41020000 		.4byte	.LASF186
 6521 023a 24       		.byte	0x24
 6522 023b 06       		.byte	0x6
 6523 023c 1C       		.byte	0x1c
 6524 023d 02030000 		.4byte	0x302
 6525 0241 0C       		.uleb128 0xc
 6526 0242 31030000 		.4byte	.LASF52
 6527 0246 06       		.byte	0x6
 6528 0247 1E       		.byte	0x1e
 6529 0248 B8000000 		.4byte	0xb8
 6530 024c 00       		.byte	0
 6531 024d 0C       		.uleb128 0xc
 6532 024e 25020000 		.4byte	.LASF53
 6533 0252 06       		.byte	0x6
 6534 0253 1F       		.byte	0x1f
 6535 0254 B8000000 		.4byte	0xb8
 6536 0258 02       		.byte	0x2
 6537 0259 0C       		.uleb128 0xc
 6538 025a 4E040000 		.4byte	.LASF54
 6539 025e 06       		.byte	0x6
 6540 025f 20       		.byte	0x20
 6541 0260 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 146


 6542 0264 04       		.byte	0x4
 6543 0265 0C       		.uleb128 0xc
 6544 0266 B1050000 		.4byte	.LASF55
 6545 026a 06       		.byte	0x6
 6546 026b 21       		.byte	0x21
 6547 026c C3000000 		.4byte	0xc3
 6548 0270 06       		.byte	0x6
 6549 0271 0C       		.uleb128 0xc
 6550 0272 0F020000 		.4byte	.LASF56
 6551 0276 06       		.byte	0x6
 6552 0277 22       		.byte	0x22
 6553 0278 C3000000 		.4byte	0xc3
 6554 027c 08       		.byte	0x8
 6555 027d 0C       		.uleb128 0xc
 6556 027e 55020000 		.4byte	.LASF57
 6557 0282 06       		.byte	0x6
 6558 0283 23       		.byte	0x23
 6559 0284 C3000000 		.4byte	0xc3
 6560 0288 0A       		.byte	0xa
 6561 0289 0C       		.uleb128 0xc
 6562 028a 4C020000 		.4byte	.LASF58
 6563 028e 06       		.byte	0x6
 6564 028f 24       		.byte	0x24
 6565 0290 C3000000 		.4byte	0xc3
 6566 0294 0C       		.byte	0xc
 6567 0295 0C       		.uleb128 0xc
 6568 0296 6B020000 		.4byte	.LASF59
 6569 029a 06       		.byte	0x6
 6570 029b 25       		.byte	0x25
 6571 029c C3000000 		.4byte	0xc3
 6572 02a0 0E       		.byte	0xe
 6573 02a1 0C       		.uleb128 0xc
 6574 02a2 1B0A0000 		.4byte	.LASF60
 6575 02a6 06       		.byte	0x6
 6576 02a7 26       		.byte	0x26
 6577 02a8 C3000000 		.4byte	0xc3
 6578 02ac 10       		.byte	0x10
 6579 02ad 0C       		.uleb128 0xc
 6580 02ae 400A0000 		.4byte	.LASF61
 6581 02b2 06       		.byte	0x6
 6582 02b3 27       		.byte	0x27
 6583 02b4 C3000000 		.4byte	0xc3
 6584 02b8 12       		.byte	0x12
 6585 02b9 0C       		.uleb128 0xc
 6586 02ba CD000000 		.4byte	.LASF62
 6587 02be 06       		.byte	0x6
 6588 02bf 28       		.byte	0x28
 6589 02c0 C3000000 		.4byte	0xc3
 6590 02c4 14       		.byte	0x14
 6591 02c5 0C       		.uleb128 0xc
 6592 02c6 BC010000 		.4byte	.LASF63
 6593 02ca 06       		.byte	0x6
 6594 02cb 29       		.byte	0x29
 6595 02cc C3000000 		.4byte	0xc3
 6596 02d0 16       		.byte	0x16
 6597 02d1 0C       		.uleb128 0xc
 6598 02d2 D8070000 		.4byte	.LASF64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 147


 6599 02d6 06       		.byte	0x6
 6600 02d7 2A       		.byte	0x2a
 6601 02d8 02030000 		.4byte	0x302
 6602 02dc 18       		.byte	0x18
 6603 02dd 0C       		.uleb128 0xc
 6604 02de 58070000 		.4byte	.LASF65
 6605 02e2 06       		.byte	0x6
 6606 02e3 2B       		.byte	0x2b
 6607 02e4 C3000000 		.4byte	0xc3
 6608 02e8 1C       		.byte	0x1c
 6609 02e9 0C       		.uleb128 0xc
 6610 02ea A3040000 		.4byte	.LASF66
 6611 02ee 06       		.byte	0x6
 6612 02ef 2C       		.byte	0x2c
 6613 02f0 C3000000 		.4byte	0xc3
 6614 02f4 1E       		.byte	0x1e
 6615 02f5 0C       		.uleb128 0xc
 6616 02f6 97090000 		.4byte	.LASF67
 6617 02fa 06       		.byte	0x6
 6618 02fb 2D       		.byte	0x2d
 6619 02fc C3000000 		.4byte	0xc3
 6620 0300 20       		.byte	0x20
 6621 0301 00       		.byte	0
 6622 0302 06       		.uleb128 0x6
 6623 0303 04       		.byte	0x4
 6624 0304 2A020000 		.4byte	0x22a
 6625 0308 0E       		.uleb128 0xe
 6626 0309 47465800 		.ascii	"GFX\000"
 6627 030d 06       		.byte	0x6
 6628 030e 2E       		.byte	0x2e
 6629 030f 35020000 		.4byte	0x235
 6630 0313 09       		.uleb128 0x9
 6631 0314 27030000 		.4byte	.LASF69
 6632 0318 01       		.byte	0x1
 6633 0319 42000000 		.4byte	0x42
 6634 031d 08       		.byte	0x8
 6635 031e 1D       		.byte	0x1d
 6636 031f 42030000 		.4byte	0x342
 6637 0323 0A       		.uleb128 0xa
 6638 0324 D5080000 		.4byte	.LASF70
 6639 0328 00       		.byte	0
 6640 0329 0A       		.uleb128 0xa
 6641 032a 9A030000 		.4byte	.LASF71
 6642 032e 01       		.byte	0x1
 6643 032f 0A       		.uleb128 0xa
 6644 0330 34040000 		.4byte	.LASF72
 6645 0334 02       		.byte	0x2
 6646 0335 0A       		.uleb128 0xa
 6647 0336 01050000 		.4byte	.LASF73
 6648 033a 03       		.byte	0x3
 6649 033b 0A       		.uleb128 0xa
 6650 033c 48070000 		.4byte	.LASF74
 6651 0340 04       		.byte	0x4
 6652 0341 00       		.byte	0
 6653 0342 09       		.uleb128 0x9
 6654 0343 00000000 		.4byte	.LASF75
 6655 0347 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 148


 6656 0348 42000000 		.4byte	0x42
 6657 034c 01       		.byte	0x1
 6658 034d 14       		.byte	0x14
 6659 034e 70030000 		.4byte	0x370
 6660 0352 0A       		.uleb128 0xa
 6661 0353 01030000 		.4byte	.LASF76
 6662 0357 00       		.byte	0
 6663 0358 0A       		.uleb128 0xa
 6664 0359 B1070000 		.4byte	.LASF77
 6665 035d 01       		.byte	0x1
 6666 035e 0A       		.uleb128 0xa
 6667 035f AC070000 		.4byte	.LASF78
 6668 0363 02       		.byte	0x2
 6669 0364 0F       		.uleb128 0xf
 6670 0365 557000   		.ascii	"Up\000"
 6671 0368 03       		.byte	0x3
 6672 0369 0A       		.uleb128 0xa
 6673 036a B6010000 		.4byte	.LASF79
 6674 036e 04       		.byte	0x4
 6675 036f 00       		.byte	0
 6676 0370 10       		.uleb128 0x10
 6677 0371 1F090000 		.4byte	.LASF91
 6678 0375 01       		.byte	0x1
 6679 0376 2A       		.byte	0x2a
 6680 0377 00000000 		.4byte	.LFB64
 6681 037b 3C0D0000 		.4byte	.LFE64-.LFB64
 6682 037f 01       		.uleb128 0x1
 6683 0380 9C       		.byte	0x9c
 6684 0381 12050000 		.4byte	0x512
 6685 0385 11       		.uleb128 0x11
 6686 0386 71000000 		.4byte	.LASF80
 6687 038a 01       		.byte	0x1
 6688 038b 4A       		.byte	0x4a
 6689 038c AD000000 		.4byte	0xad
 6690 0390 02       		.uleb128 0x2
 6691 0391 91       		.byte	0x91
 6692 0392 5F       		.sleb128 -33
 6693 0393 12       		.uleb128 0x12
 6694 0394 28000000 		.4byte	.LBB2
 6695 0398 2E000000 		.4byte	.LBE2-.LBB2
 6696 039c AD030000 		.4byte	0x3ad
 6697 03a0 13       		.uleb128 0x13
 6698 03a1 6900     		.ascii	"i\000"
 6699 03a3 01       		.byte	0x1
 6700 03a4 32       		.byte	0x32
 6701 03a5 94000000 		.4byte	0x94
 6702 03a9 02       		.uleb128 0x2
 6703 03aa 91       		.byte	0x91
 6704 03ab 6C       		.sleb128 -20
 6705 03ac 00       		.byte	0
 6706 03ad 12       		.uleb128 0x12
 6707 03ae 7E000000 		.4byte	.LBB3
 6708 03b2 2E000000 		.4byte	.LBE3-.LBB3
 6709 03b6 C7030000 		.4byte	0x3c7
 6710 03ba 13       		.uleb128 0x13
 6711 03bb 6900     		.ascii	"i\000"
 6712 03bd 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 149


 6713 03be 40       		.byte	0x40
 6714 03bf 94000000 		.4byte	0x94
 6715 03c3 02       		.uleb128 0x2
 6716 03c4 91       		.byte	0x91
 6717 03c5 68       		.sleb128 -24
 6718 03c6 00       		.byte	0
 6719 03c7 14       		.uleb128 0x14
 6720 03c8 80040000 		.4byte	.LBB4
 6721 03cc 7E080000 		.4byte	.LBE4-.LBB4
 6722 03d0 15       		.uleb128 0x15
 6723 03d1 DC060000 		.4byte	.LASF81
 6724 03d5 01       		.byte	0x1
 6725 03d6 0101     		.2byte	0x101
 6726 03d8 A2000000 		.4byte	0xa2
 6727 03dc 02       		.uleb128 0x2
 6728 03dd 91       		.byte	0x91
 6729 03de 5E       		.sleb128 -34
 6730 03df 12       		.uleb128 0x12
 6731 03e0 AC040000 		.4byte	.LBB5
 6732 03e4 98000000 		.4byte	.LBE5-.LBB5
 6733 03e8 0B040000 		.4byte	0x40b
 6734 03ec 15       		.uleb128 0x15
 6735 03ed 9E080000 		.4byte	.LASF82
 6736 03f1 01       		.byte	0x1
 6737 03f2 1501     		.2byte	0x115
 6738 03f4 A2000000 		.4byte	0xa2
 6739 03f8 02       		.uleb128 0x2
 6740 03f9 91       		.byte	0x91
 6741 03fa 5D       		.sleb128 -35
 6742 03fb 15       		.uleb128 0x15
 6743 03fc AC030000 		.4byte	.LASF83
 6744 0400 01       		.byte	0x1
 6745 0401 1701     		.2byte	0x117
 6746 0403 AD000000 		.4byte	0xad
 6747 0407 02       		.uleb128 0x2
 6748 0408 91       		.byte	0x91
 6749 0409 5C       		.sleb128 -36
 6750 040a 00       		.byte	0
 6751 040b 12       		.uleb128 0x12
 6752 040c 94050000 		.4byte	.LBB6
 6753 0410 50000000 		.4byte	.LBE6-.LBB6
 6754 0414 28040000 		.4byte	0x428
 6755 0418 15       		.uleb128 0x15
 6756 0419 AC030000 		.4byte	.LASF83
 6757 041d 01       		.byte	0x1
 6758 041e 2001     		.2byte	0x120
 6759 0420 AD000000 		.4byte	0xad
 6760 0424 02       		.uleb128 0x2
 6761 0425 91       		.byte	0x91
 6762 0426 5B       		.sleb128 -37
 6763 0427 00       		.byte	0
 6764 0428 12       		.uleb128 0x12
 6765 0429 00060000 		.4byte	.LBB7
 6766 042d 3A020000 		.4byte	.LBE7-.LBB7
 6767 0431 63040000 		.4byte	0x463
 6768 0435 15       		.uleb128 0x15
 6769 0436 5A060000 		.4byte	.LASF84
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 150


 6770 043a 01       		.byte	0x1
 6771 043b 3401     		.2byte	0x134
 6772 043d E5000000 		.4byte	0xe5
 6773 0441 02       		.uleb128 0x2
 6774 0442 91       		.byte	0x91
 6775 0443 64       		.sleb128 -28
 6776 0444 15       		.uleb128 0x15
 6777 0445 9A070000 		.4byte	.LASF85
 6778 0449 01       		.byte	0x1
 6779 044a 4401     		.2byte	0x144
 6780 044c E5000000 		.4byte	0xe5
 6781 0450 02       		.uleb128 0x2
 6782 0451 91       		.byte	0x91
 6783 0452 60       		.sleb128 -32
 6784 0453 15       		.uleb128 0x15
 6785 0454 AC030000 		.4byte	.LASF83
 6786 0458 01       		.byte	0x1
 6787 0459 5501     		.2byte	0x155
 6788 045b AD000000 		.4byte	0xad
 6789 045f 02       		.uleb128 0x2
 6790 0460 91       		.byte	0x91
 6791 0461 5A       		.sleb128 -38
 6792 0462 00       		.byte	0
 6793 0463 12       		.uleb128 0x12
 6794 0464 56080000 		.4byte	.LBB8
 6795 0468 32010000 		.4byte	.LBE8-.LBB8
 6796 046c 9E040000 		.4byte	0x49e
 6797 0470 15       		.uleb128 0x15
 6798 0471 5A060000 		.4byte	.LASF84
 6799 0475 01       		.byte	0x1
 6800 0476 7301     		.2byte	0x173
 6801 0478 E5000000 		.4byte	0xe5
 6802 047c 02       		.uleb128 0x2
 6803 047d 91       		.byte	0x91
 6804 047e 54       		.sleb128 -44
 6805 047f 15       		.uleb128 0x15
 6806 0480 33020000 		.4byte	.LASF86
 6807 0484 01       		.byte	0x1
 6808 0485 8401     		.2byte	0x184
 6809 0487 A2000000 		.4byte	0xa2
 6810 048b 02       		.uleb128 0x2
 6811 048c 91       		.byte	0x91
 6812 048d 53       		.sleb128 -45
 6813 048e 15       		.uleb128 0x15
 6814 048f AC030000 		.4byte	.LASF83
 6815 0493 01       		.byte	0x1
 6816 0494 8501     		.2byte	0x185
 6817 0496 AD000000 		.4byte	0xad
 6818 049a 02       		.uleb128 0x2
 6819 049b 91       		.byte	0x91
 6820 049c 52       		.sleb128 -46
 6821 049d 00       		.byte	0
 6822 049e 12       		.uleb128 0x12
 6823 049f A4090000 		.4byte	.LBB9
 6824 04a3 B0010000 		.4byte	.LBE9-.LBB9
 6825 04a7 D9040000 		.4byte	0x4d9
 6826 04ab 15       		.uleb128 0x15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 151


 6827 04ac 5E020000 		.4byte	.LASF87
 6828 04b0 01       		.byte	0x1
 6829 04b1 9A01     		.2byte	0x19a
 6830 04b3 B8000000 		.4byte	0xb8
 6831 04b7 02       		.uleb128 0x2
 6832 04b8 91       		.byte	0x91
 6833 04b9 50       		.sleb128 -48
 6834 04ba 15       		.uleb128 0x15
 6835 04bb 21060000 		.4byte	.LASF88
 6836 04bf 01       		.byte	0x1
 6837 04c0 AD01     		.2byte	0x1ad
 6838 04c2 E5000000 		.4byte	0xe5
 6839 04c6 02       		.uleb128 0x2
 6840 04c7 91       		.byte	0x91
 6841 04c8 4C       		.sleb128 -52
 6842 04c9 15       		.uleb128 0x15
 6843 04ca AC030000 		.4byte	.LASF83
 6844 04ce 01       		.byte	0x1
 6845 04cf AF01     		.2byte	0x1af
 6846 04d1 AD000000 		.4byte	0xad
 6847 04d5 02       		.uleb128 0x2
 6848 04d6 91       		.byte	0x91
 6849 04d7 4B       		.sleb128 -53
 6850 04d8 00       		.byte	0
 6851 04d9 14       		.uleb128 0x14
 6852 04da 700B0000 		.4byte	.LBB10
 6853 04de 88010000 		.4byte	.LBE10-.LBB10
 6854 04e2 15       		.uleb128 0x15
 6855 04e3 D7050000 		.4byte	.LASF89
 6856 04e7 01       		.byte	0x1
 6857 04e8 CB01     		.2byte	0x1cb
 6858 04ea B8000000 		.4byte	0xb8
 6859 04ee 02       		.uleb128 0x2
 6860 04ef 91       		.byte	0x91
 6861 04f0 48       		.sleb128 -56
 6862 04f1 15       		.uleb128 0x15
 6863 04f2 DF080000 		.4byte	.LASF90
 6864 04f6 01       		.byte	0x1
 6865 04f7 DB01     		.2byte	0x1db
 6866 04f9 12050000 		.4byte	0x512
 6867 04fd 02       		.uleb128 0x2
 6868 04fe 91       		.byte	0x91
 6869 04ff 44       		.sleb128 -60
 6870 0500 15       		.uleb128 0x15
 6871 0501 AC030000 		.4byte	.LASF83
 6872 0505 01       		.byte	0x1
 6873 0506 E501     		.2byte	0x1e5
 6874 0508 AD000000 		.4byte	0xad
 6875 050c 02       		.uleb128 0x2
 6876 050d 91       		.byte	0x91
 6877 050e 47       		.sleb128 -57
 6878 050f 00       		.byte	0
 6879 0510 00       		.byte	0
 6880 0511 00       		.byte	0
 6881 0512 16       		.uleb128 0x16
 6882 0513 AD000000 		.4byte	0xad
 6883 0517 22050000 		.4byte	0x522
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 152


 6884 051b 17       		.uleb128 0x17
 6885 051c 01010000 		.4byte	0x101
 6886 0520 01       		.byte	0x1
 6887 0521 00       		.byte	0
 6888 0522 18       		.uleb128 0x18
 6889 0523 48000000 		.4byte	.LASF105
 6890 0527 01       		.byte	0x1
 6891 0528 0D02     		.2byte	0x20d
 6892 052a 00000000 		.4byte	.LFB65
 6893 052e B4000000 		.4byte	.LFE65-.LFB65
 6894 0532 01       		.uleb128 0x1
 6895 0533 9C       		.byte	0x9c
 6896 0534 19       		.uleb128 0x19
 6897 0535 C6050000 		.4byte	.LASF92
 6898 0539 01       		.byte	0x1
 6899 053a 2502     		.2byte	0x225
 6900 053c 00000000 		.4byte	.LFB66
 6901 0540 A4010000 		.4byte	.LFE66-.LFB66
 6902 0544 01       		.uleb128 0x1
 6903 0545 9C       		.byte	0x9c
 6904 0546 81050000 		.4byte	0x581
 6905 054a 12       		.uleb128 0x12
 6906 054b CC000000 		.4byte	.LBB11
 6907 054f 26000000 		.4byte	.LBE11-.LBB11
 6908 0553 67050000 		.4byte	0x567
 6909 0557 15       		.uleb128 0x15
 6910 0558 30000000 		.4byte	.LASF93
 6911 055c 01       		.byte	0x1
 6912 055d 4102     		.2byte	0x241
 6913 055f AD000000 		.4byte	0xad
 6914 0563 02       		.uleb128 0x2
 6915 0564 91       		.byte	0x91
 6916 0565 6F       		.sleb128 -17
 6917 0566 00       		.byte	0
 6918 0567 14       		.uleb128 0x14
 6919 0568 FC000000 		.4byte	.LBB12
 6920 056c 28000000 		.4byte	.LBE12-.LBB12
 6921 0570 15       		.uleb128 0x15
 6922 0571 30000000 		.4byte	.LASF93
 6923 0575 01       		.byte	0x1
 6924 0576 4702     		.2byte	0x247
 6925 0578 AD000000 		.4byte	0xad
 6926 057c 02       		.uleb128 0x2
 6927 057d 91       		.byte	0x91
 6928 057e 6E       		.sleb128 -18
 6929 057f 00       		.byte	0
 6930 0580 00       		.byte	0
 6931 0581 19       		.uleb128 0x19
 6932 0582 1A000000 		.4byte	.LASF94
 6933 0586 01       		.byte	0x1
 6934 0587 5802     		.2byte	0x258
 6935 0589 00000000 		.4byte	.LFB67
 6936 058d 00110000 		.4byte	.LFE67-.LFB67
 6937 0591 01       		.uleb128 0x1
 6938 0592 9C       		.byte	0x9c
 6939 0593 74060000 		.4byte	0x674
 6940 0597 1A       		.uleb128 0x1a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 153


 6941 0598 8E070000 		.4byte	.LASF187
 6942 059c 01       		.byte	0x1
 6943 059d 5802     		.2byte	0x258
 6944 059f 42030000 		.4byte	0x342
 6945 05a3 02       		.uleb128 0x2
 6946 05a4 91       		.byte	0x91
 6947 05a5 5F       		.sleb128 -33
 6948 05a6 15       		.uleb128 0x15
 6949 05a7 37030000 		.4byte	.LASF95
 6950 05ab 01       		.byte	0x1
 6951 05ac 5A02     		.2byte	0x25a
 6952 05ae AD000000 		.4byte	0xad
 6953 05b2 02       		.uleb128 0x2
 6954 05b3 91       		.byte	0x91
 6955 05b4 77       		.sleb128 -9
 6956 05b5 12       		.uleb128 0x12
 6957 05b6 92050000 		.4byte	.LBB13
 6958 05ba E0000000 		.4byte	.LBE13-.LBB13
 6959 05be E1050000 		.4byte	0x5e1
 6960 05c2 15       		.uleb128 0x15
 6961 05c3 33020000 		.4byte	.LASF86
 6962 05c7 01       		.byte	0x1
 6963 05c8 3803     		.2byte	0x338
 6964 05ca A2000000 		.4byte	0xa2
 6965 05ce 02       		.uleb128 0x2
 6966 05cf 91       		.byte	0x91
 6967 05d0 63       		.sleb128 -29
 6968 05d1 15       		.uleb128 0x15
 6969 05d2 AC030000 		.4byte	.LASF83
 6970 05d6 01       		.byte	0x1
 6971 05d7 3903     		.2byte	0x339
 6972 05d9 AD000000 		.4byte	0xad
 6973 05dd 02       		.uleb128 0x2
 6974 05de 91       		.byte	0x91
 6975 05df 62       		.sleb128 -30
 6976 05e0 00       		.byte	0
 6977 05e1 12       		.uleb128 0x12
 6978 05e2 560D0000 		.4byte	.LBB14
 6979 05e6 6C000000 		.4byte	.LBE14-.LBB14
 6980 05ea FC050000 		.4byte	0x5fc
 6981 05ee 1B       		.uleb128 0x1b
 6982 05ef 6900     		.ascii	"i\000"
 6983 05f1 01       		.byte	0x1
 6984 05f2 4C04     		.2byte	0x44c
 6985 05f4 94000000 		.4byte	0x94
 6986 05f8 02       		.uleb128 0x2
 6987 05f9 91       		.byte	0x91
 6988 05fa 70       		.sleb128 -16
 6989 05fb 00       		.byte	0
 6990 05fc 12       		.uleb128 0x12
 6991 05fd 080E0000 		.4byte	.LBB15
 6992 0601 B0000000 		.4byte	.LBE15-.LBB15
 6993 0605 28060000 		.4byte	0x628
 6994 0609 15       		.uleb128 0x15
 6995 060a 9E080000 		.4byte	.LASF82
 6996 060e 01       		.byte	0x1
 6997 060f 7104     		.2byte	0x471
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 154


 6998 0611 A2000000 		.4byte	0xa2
 6999 0615 02       		.uleb128 0x2
 7000 0616 91       		.byte	0x91
 7001 0617 61       		.sleb128 -31
 7002 0618 15       		.uleb128 0x15
 7003 0619 AC030000 		.4byte	.LASF83
 7004 061d 01       		.byte	0x1
 7005 061e 7304     		.2byte	0x473
 7006 0620 AD000000 		.4byte	0xad
 7007 0624 02       		.uleb128 0x2
 7008 0625 91       		.byte	0x91
 7009 0626 60       		.sleb128 -32
 7010 0627 00       		.byte	0
 7011 0628 12       		.uleb128 0x12
 7012 0629 640F0000 		.4byte	.LBB16
 7013 062d 6C000000 		.4byte	.LBE16-.LBB16
 7014 0631 43060000 		.4byte	0x643
 7015 0635 1B       		.uleb128 0x1b
 7016 0636 6900     		.ascii	"i\000"
 7017 0638 01       		.byte	0x1
 7018 0639 9B04     		.2byte	0x49b
 7019 063b 94000000 		.4byte	0x94
 7020 063f 02       		.uleb128 0x2
 7021 0640 91       		.byte	0x91
 7022 0641 6C       		.sleb128 -20
 7023 0642 00       		.byte	0
 7024 0643 14       		.uleb128 0x14
 7025 0644 E60F0000 		.4byte	.LBB17
 7026 0648 C8000000 		.4byte	.LBE17-.LBB17
 7027 064c 15       		.uleb128 0x15
 7028 064d 69000000 		.4byte	.LASF96
 7029 0651 01       		.byte	0x1
 7030 0652 B204     		.2byte	0x4b2
 7031 0654 AD000000 		.4byte	0xad
 7032 0658 02       		.uleb128 0x2
 7033 0659 91       		.byte	0x91
 7034 065a 6B       		.sleb128 -21
 7035 065b 14       		.uleb128 0x14
 7036 065c F80F0000 		.4byte	.LBB18
 7037 0660 88000000 		.4byte	.LBE18-.LBB18
 7038 0664 1B       		.uleb128 0x1b
 7039 0665 6900     		.ascii	"i\000"
 7040 0667 01       		.byte	0x1
 7041 0668 B304     		.2byte	0x4b3
 7042 066a 94000000 		.4byte	0x94
 7043 066e 02       		.uleb128 0x2
 7044 066f 91       		.byte	0x91
 7045 0670 64       		.sleb128 -28
 7046 0671 00       		.byte	0
 7047 0672 00       		.byte	0
 7048 0673 00       		.byte	0
 7049 0674 1C       		.uleb128 0x1c
 7050 0675 F5040000 		.4byte	.LASF97
 7051 0679 01       		.byte	0x1
 7052 067a D104     		.2byte	0x4d1
 7053 067c 00000000 		.4byte	.LFB68
 7054 0680 9C000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 155


 7055 0684 01       		.uleb128 0x1
 7056 0685 9C       		.byte	0x9c
 7057 0686 1C       		.uleb128 0x1c
 7058 0687 DA040000 		.4byte	.LASF98
 7059 068b 01       		.byte	0x1
 7060 068c E904     		.2byte	0x4e9
 7061 068e 00000000 		.4byte	.LFB69
 7062 0692 9C000000 		.4byte	.LFE69-.LFB69
 7063 0696 01       		.uleb128 0x1
 7064 0697 9C       		.byte	0x9c
 7065 0698 1C       		.uleb128 0x1c
 7066 0699 7D000000 		.4byte	.LASF99
 7067 069d 01       		.byte	0x1
 7068 069e FE04     		.2byte	0x4fe
 7069 06a0 00000000 		.4byte	.LFB70
 7070 06a4 4C000000 		.4byte	.LFE70-.LFB70
 7071 06a8 01       		.uleb128 0x1
 7072 06a9 9C       		.byte	0x9c
 7073 06aa 1C       		.uleb128 0x1c
 7074 06ab 90030000 		.4byte	.LASF100
 7075 06af 01       		.byte	0x1
 7076 06b0 0D05     		.2byte	0x50d
 7077 06b2 00000000 		.4byte	.LFB71
 7078 06b6 4C000000 		.4byte	.LFE71-.LFB71
 7079 06ba 01       		.uleb128 0x1
 7080 06bb 9C       		.byte	0x9c
 7081 06bc 1C       		.uleb128 0x1c
 7082 06bd B9050000 		.4byte	.LASF101
 7083 06c1 01       		.byte	0x1
 7084 06c2 1C05     		.2byte	0x51c
 7085 06c4 00000000 		.4byte	.LFB72
 7086 06c8 48000000 		.4byte	.LFE72-.LFB72
 7087 06cc 01       		.uleb128 0x1
 7088 06cd 9C       		.byte	0x9c
 7089 06ce 19       		.uleb128 0x19
 7090 06cf FA070000 		.4byte	.LASF102
 7091 06d3 01       		.byte	0x1
 7092 06d4 3005     		.2byte	0x530
 7093 06d6 00000000 		.4byte	.LFB73
 7094 06da B0000000 		.4byte	.LFE73-.LFB73
 7095 06de 01       		.uleb128 0x1
 7096 06df 9C       		.byte	0x9c
 7097 06e0 FC060000 		.4byte	0x6fc
 7098 06e4 14       		.uleb128 0x14
 7099 06e5 5A000000 		.4byte	.LBB19
 7100 06e9 28000000 		.4byte	.LBE19-.LBB19
 7101 06ed 1B       		.uleb128 0x1b
 7102 06ee 6900     		.ascii	"i\000"
 7103 06f0 01       		.byte	0x1
 7104 06f1 3C05     		.2byte	0x53c
 7105 06f3 94000000 		.4byte	0x94
 7106 06f7 02       		.uleb128 0x2
 7107 06f8 91       		.byte	0x91
 7108 06f9 74       		.sleb128 -12
 7109 06fa 00       		.byte	0
 7110 06fb 00       		.byte	0
 7111 06fc 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 156


 7112 06fd 96060000 		.4byte	.LASF103
 7113 0701 01       		.byte	0x1
 7114 0702 4405     		.2byte	0x544
 7115 0704 00000000 		.4byte	.LFB74
 7116 0708 54010000 		.4byte	.LFE74-.LFB74
 7117 070c 01       		.uleb128 0x1
 7118 070d 9C       		.byte	0x9c
 7119 070e 6F070000 		.4byte	0x76f
 7120 0712 15       		.uleb128 0x15
 7121 0713 A2010000 		.4byte	.LASF104
 7122 0717 01       		.byte	0x1
 7123 0718 5405     		.2byte	0x554
 7124 071a C3000000 		.4byte	0xc3
 7125 071e 02       		.uleb128 0x2
 7126 071f 91       		.byte	0x91
 7127 0720 72       		.sleb128 -14
 7128 0721 12       		.uleb128 0x12
 7129 0722 0C000000 		.4byte	.LBB20
 7130 0726 40000000 		.4byte	.LBE20-.LBB20
 7131 072a 3C070000 		.4byte	0x73c
 7132 072e 1B       		.uleb128 0x1b
 7133 072f 6900     		.ascii	"i\000"
 7134 0731 01       		.byte	0x1
 7135 0732 4805     		.2byte	0x548
 7136 0734 94000000 		.4byte	0x94
 7137 0738 02       		.uleb128 0x2
 7138 0739 91       		.byte	0x91
 7139 073a 74       		.sleb128 -12
 7140 073b 00       		.byte	0
 7141 073c 12       		.uleb128 0x12
 7142 073d 50000000 		.4byte	.LBB21
 7143 0741 2A000000 		.4byte	.LBE21-.LBB21
 7144 0745 57070000 		.4byte	0x757
 7145 0749 1B       		.uleb128 0x1b
 7146 074a 6900     		.ascii	"i\000"
 7147 074c 01       		.byte	0x1
 7148 074d 5505     		.2byte	0x555
 7149 074f 94000000 		.4byte	0x94
 7150 0753 02       		.uleb128 0x2
 7151 0754 91       		.byte	0x91
 7152 0755 6C       		.sleb128 -20
 7153 0756 00       		.byte	0
 7154 0757 14       		.uleb128 0x14
 7155 0758 9E000000 		.4byte	.LBB22
 7156 075c 98000000 		.4byte	.LBE22-.LBB22
 7157 0760 1B       		.uleb128 0x1b
 7158 0761 6900     		.ascii	"i\000"
 7159 0763 01       		.byte	0x1
 7160 0764 5D05     		.2byte	0x55d
 7161 0766 94000000 		.4byte	0x94
 7162 076a 02       		.uleb128 0x2
 7163 076b 91       		.byte	0x91
 7164 076c 68       		.sleb128 -24
 7165 076d 00       		.byte	0
 7166 076e 00       		.byte	0
 7167 076f 18       		.uleb128 0x18
 7168 0770 71060000 		.4byte	.LASF106
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 157


 7169 0774 01       		.byte	0x1
 7170 0775 6705     		.2byte	0x567
 7171 0777 00000000 		.4byte	.LFB75
 7172 077b A0000000 		.4byte	.LFE75-.LFB75
 7173 077f 01       		.uleb128 0x1
 7174 0780 9C       		.byte	0x9c
 7175 0781 19       		.uleb128 0x19
 7176 0782 42030000 		.4byte	.LASF107
 7177 0786 01       		.byte	0x1
 7178 0787 7705     		.2byte	0x577
 7179 0789 00000000 		.4byte	.LFB76
 7180 078d BC000000 		.4byte	.LFE76-.LFB76
 7181 0791 01       		.uleb128 0x1
 7182 0792 9C       		.byte	0x9c
 7183 0793 AF070000 		.4byte	0x7af
 7184 0797 14       		.uleb128 0x14
 7185 0798 0C000000 		.4byte	.LBB23
 7186 079c 9C000000 		.4byte	.LBE23-.LBB23
 7187 07a0 1B       		.uleb128 0x1b
 7188 07a1 6900     		.ascii	"i\000"
 7189 07a3 01       		.byte	0x1
 7190 07a4 7B05     		.2byte	0x57b
 7191 07a6 94000000 		.4byte	0x94
 7192 07aa 02       		.uleb128 0x2
 7193 07ab 91       		.byte	0x91
 7194 07ac 74       		.sleb128 -12
 7195 07ad 00       		.byte	0
 7196 07ae 00       		.byte	0
 7197 07af 18       		.uleb128 0x18
 7198 07b0 FA090000 		.4byte	.LASF108
 7199 07b4 01       		.byte	0x1
 7200 07b5 8605     		.2byte	0x586
 7201 07b7 00000000 		.4byte	.LFB77
 7202 07bb 20000000 		.4byte	.LFE77-.LFB77
 7203 07bf 01       		.uleb128 0x1
 7204 07c0 9C       		.byte	0x9c
 7205 07c1 19       		.uleb128 0x19
 7206 07c2 570A0000 		.4byte	.LASF109
 7207 07c6 01       		.byte	0x1
 7208 07c7 8D05     		.2byte	0x58d
 7209 07c9 00000000 		.4byte	.LFB78
 7210 07cd 44010000 		.4byte	.LFE78-.LFB78
 7211 07d1 01       		.uleb128 0x1
 7212 07d2 9C       		.byte	0x9c
 7213 07d3 FE070000 		.4byte	0x7fe
 7214 07d7 15       		.uleb128 0x15
 7215 07d8 0F000000 		.4byte	.LASF110
 7216 07dc 01       		.byte	0x1
 7217 07dd 8F05     		.2byte	0x58f
 7218 07df 94000000 		.4byte	0x94
 7219 07e3 02       		.uleb128 0x2
 7220 07e4 91       		.byte	0x91
 7221 07e5 6C       		.sleb128 -20
 7222 07e6 14       		.uleb128 0x14
 7223 07e7 0A000000 		.4byte	.LBB24
 7224 07eb 38000000 		.4byte	.LBE24-.LBB24
 7225 07ef 1B       		.uleb128 0x1b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 158


 7226 07f0 6900     		.ascii	"i\000"
 7227 07f2 01       		.byte	0x1
 7228 07f3 9005     		.2byte	0x590
 7229 07f5 94000000 		.4byte	0x94
 7230 07f9 02       		.uleb128 0x2
 7231 07fa 91       		.byte	0x91
 7232 07fb 68       		.sleb128 -24
 7233 07fc 00       		.byte	0
 7234 07fd 00       		.byte	0
 7235 07fe 19       		.uleb128 0x19
 7236 07ff 55040000 		.4byte	.LASF111
 7237 0803 01       		.byte	0x1
 7238 0804 AD05     		.2byte	0x5ad
 7239 0806 00000000 		.4byte	.LFB79
 7240 080a 54010000 		.4byte	.LFE79-.LFB79
 7241 080e 01       		.uleb128 0x1
 7242 080f 9C       		.byte	0x9c
 7243 0810 3B080000 		.4byte	0x83b
 7244 0814 15       		.uleb128 0x15
 7245 0815 89000000 		.4byte	.LASF112
 7246 0819 01       		.byte	0x1
 7247 081a AF05     		.2byte	0x5af
 7248 081c 94000000 		.4byte	0x94
 7249 0820 02       		.uleb128 0x2
 7250 0821 91       		.byte	0x91
 7251 0822 6C       		.sleb128 -20
 7252 0823 14       		.uleb128 0x14
 7253 0824 0A000000 		.4byte	.LBB25
 7254 0828 3C000000 		.4byte	.LBE25-.LBB25
 7255 082c 1B       		.uleb128 0x1b
 7256 082d 6900     		.ascii	"i\000"
 7257 082f 01       		.byte	0x1
 7258 0830 B005     		.2byte	0x5b0
 7259 0832 94000000 		.4byte	0x94
 7260 0836 02       		.uleb128 0x2
 7261 0837 91       		.byte	0x91
 7262 0838 68       		.sleb128 -24
 7263 0839 00       		.byte	0
 7264 083a 00       		.byte	0
 7265 083b 1D       		.uleb128 0x1d
 7266 083c 3B070000 		.4byte	.LASF113
 7267 0840 09       		.byte	0x9
 7268 0841 1207     		.2byte	0x712
 7269 0843 47080000 		.4byte	0x847
 7270 0847 08       		.uleb128 0x8
 7271 0848 CE000000 		.4byte	0xce
 7272 084c 1E       		.uleb128 0x1e
 7273 084d C8040000 		.4byte	.LASF114
 7274 0851 0A       		.byte	0xa
 7275 0852 41       		.byte	0x41
 7276 0853 D9000000 		.4byte	0xd9
 7277 0857 05       		.uleb128 0x5
 7278 0858 03       		.byte	0x3
 7279 0859 00000000 		.4byte	Decoder_1_Enabled
 7280 085d 1F       		.uleb128 0x1f
 7281 085e 250A0000 		.4byte	.LASF115
 7282 0862 07       		.byte	0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 159


 7283 0863 60       		.byte	0x60
 7284 0864 94000000 		.4byte	0x94
 7285 0868 1F       		.uleb128 0x1f
 7286 0869 1D070000 		.4byte	.LASF116
 7287 086d 07       		.byte	0x7
 7288 086e 61       		.byte	0x61
 7289 086f AD000000 		.4byte	0xad
 7290 0873 1F       		.uleb128 0x1f
 7291 0874 FF010000 		.4byte	.LASF117
 7292 0878 07       		.byte	0x7
 7293 0879 62       		.byte	0x62
 7294 087a AD000000 		.4byte	0xad
 7295 087e 1F       		.uleb128 0x1f
 7296 087f 4B080000 		.4byte	.LASF118
 7297 0883 07       		.byte	0x7
 7298 0884 63       		.byte	0x63
 7299 0885 AD000000 		.4byte	0xad
 7300 0889 1F       		.uleb128 0x1f
 7301 088a 12040000 		.4byte	.LASF119
 7302 088e 07       		.byte	0x7
 7303 088f 64       		.byte	0x64
 7304 0890 AD000000 		.4byte	0xad
 7305 0894 1F       		.uleb128 0x1f
 7306 0895 C1020000 		.4byte	.LASF120
 7307 0899 07       		.byte	0x7
 7308 089a 65       		.byte	0x65
 7309 089b AD000000 		.4byte	0xad
 7310 089f 1F       		.uleb128 0x1f
 7311 08a0 C3010000 		.4byte	.LASF121
 7312 08a4 07       		.byte	0x7
 7313 08a5 66       		.byte	0x66
 7314 08a6 AD000000 		.4byte	0xad
 7315 08aa 1F       		.uleb128 0x1f
 7316 08ab 06030000 		.4byte	.LASF122
 7317 08af 07       		.byte	0x7
 7318 08b0 67       		.byte	0x67
 7319 08b1 12050000 		.4byte	0x512
 7320 08b5 1F       		.uleb128 0x1f
 7321 08b6 E6000000 		.4byte	.LASF123
 7322 08ba 07       		.byte	0x7
 7323 08bb 68       		.byte	0x68
 7324 08bc AD000000 		.4byte	0xad
 7325 08c0 16       		.uleb128 0x16
 7326 08c1 AD000000 		.4byte	0xad
 7327 08c5 DC080000 		.4byte	0x8dc
 7328 08c9 17       		.uleb128 0x17
 7329 08ca 01010000 		.4byte	0x101
 7330 08ce 3F       		.byte	0x3f
 7331 08cf 17       		.uleb128 0x17
 7332 08d0 01010000 		.4byte	0x101
 7333 08d4 0F       		.byte	0xf
 7334 08d5 17       		.uleb128 0x17
 7335 08d6 01010000 		.4byte	0x101
 7336 08da 08       		.byte	0x8
 7337 08db 00       		.byte	0
 7338 08dc 1F       		.uleb128 0x1f
 7339 08dd 0C030000 		.4byte	.LASF124
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 160


 7340 08e1 07       		.byte	0x7
 7341 08e2 69       		.byte	0x69
 7342 08e3 C0080000 		.4byte	0x8c0
 7343 08e7 16       		.uleb128 0x16
 7344 08e8 AD000000 		.4byte	0xad
 7345 08ec 03090000 		.4byte	0x903
 7346 08f0 17       		.uleb128 0x17
 7347 08f1 01010000 		.4byte	0x101
 7348 08f5 3F       		.byte	0x3f
 7349 08f6 17       		.uleb128 0x17
 7350 08f7 01010000 		.4byte	0x101
 7351 08fb 03       		.byte	0x3
 7352 08fc 17       		.uleb128 0x17
 7353 08fd 01010000 		.4byte	0x101
 7354 0901 09       		.byte	0x9
 7355 0902 00       		.byte	0
 7356 0903 1F       		.uleb128 0x1f
 7357 0904 14080000 		.4byte	.LASF125
 7358 0908 07       		.byte	0x7
 7359 0909 6A       		.byte	0x6a
 7360 090a E7080000 		.4byte	0x8e7
 7361 090e 1F       		.uleb128 0x1f
 7362 090f 32070000 		.4byte	.LASF126
 7363 0913 07       		.byte	0x7
 7364 0914 6B       		.byte	0x6b
 7365 0915 AD000000 		.4byte	0xad
 7366 0919 16       		.uleb128 0x16
 7367 091a AD000000 		.4byte	0xad
 7368 091e 2F090000 		.4byte	0x92f
 7369 0922 17       		.uleb128 0x17
 7370 0923 01010000 		.4byte	0x101
 7371 0927 3F       		.byte	0x3f
 7372 0928 17       		.uleb128 0x17
 7373 0929 01010000 		.4byte	0x101
 7374 092d 0D       		.byte	0xd
 7375 092e 00       		.byte	0
 7376 092f 1F       		.uleb128 0x1f
 7377 0930 7D010000 		.4byte	.LASF127
 7378 0934 07       		.byte	0x7
 7379 0935 6D       		.byte	0x6d
 7380 0936 19090000 		.4byte	0x919
 7381 093a 16       		.uleb128 0x16
 7382 093b AD000000 		.4byte	0xad
 7383 093f 50090000 		.4byte	0x950
 7384 0943 17       		.uleb128 0x17
 7385 0944 01010000 		.4byte	0x101
 7386 0948 06       		.byte	0x6
 7387 0949 17       		.uleb128 0x17
 7388 094a 01010000 		.4byte	0x101
 7389 094e 09       		.byte	0x9
 7390 094f 00       		.byte	0
 7391 0950 1F       		.uleb128 0x1f
 7392 0951 5A030000 		.4byte	.LASF128
 7393 0955 07       		.byte	0x7
 7394 0956 6F       		.byte	0x6f
 7395 0957 3A090000 		.4byte	0x93a
 7396 095b 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 161


 7397 095c AD000000 		.4byte	0xad
 7398 0960 6B090000 		.4byte	0x96b
 7399 0964 17       		.uleb128 0x17
 7400 0965 01010000 		.4byte	0x101
 7401 0969 3F       		.byte	0x3f
 7402 096a 00       		.byte	0
 7403 096b 1F       		.uleb128 0x1f
 7404 096c 06070000 		.4byte	.LASF129
 7405 0970 07       		.byte	0x7
 7406 0971 70       		.byte	0x70
 7407 0972 5B090000 		.4byte	0x95b
 7408 0976 1F       		.uleb128 0x1f
 7409 0977 38060000 		.4byte	.LASF130
 7410 097b 07       		.byte	0x7
 7411 097c 71       		.byte	0x71
 7412 097d AD000000 		.4byte	0xad
 7413 0981 1F       		.uleb128 0x1f
 7414 0982 2C0A0000 		.4byte	.LASF131
 7415 0986 07       		.byte	0x7
 7416 0987 72       		.byte	0x72
 7417 0988 AD000000 		.4byte	0xad
 7418 098c 1F       		.uleb128 0x1f
 7419 098d 96000000 		.4byte	.LASF132
 7420 0991 07       		.byte	0x7
 7421 0992 73       		.byte	0x73
 7422 0993 AD000000 		.4byte	0xad
 7423 0997 16       		.uleb128 0x16
 7424 0998 C3000000 		.4byte	0xc3
 7425 099c AD090000 		.4byte	0x9ad
 7426 09a0 17       		.uleb128 0x17
 7427 09a1 01010000 		.4byte	0x101
 7428 09a5 01       		.byte	0x1
 7429 09a6 17       		.uleb128 0x17
 7430 09a7 01010000 		.4byte	0x101
 7431 09ab 0B       		.byte	0xb
 7432 09ac 00       		.byte	0
 7433 09ad 1F       		.uleb128 0x1f
 7434 09ae 84040000 		.4byte	.LASF133
 7435 09b2 07       		.byte	0x7
 7436 09b3 74       		.byte	0x74
 7437 09b4 97090000 		.4byte	0x997
 7438 09b8 16       		.uleb128 0x16
 7439 09b9 C3000000 		.4byte	0xc3
 7440 09bd C8090000 		.4byte	0x9c8
 7441 09c1 17       		.uleb128 0x17
 7442 09c2 01010000 		.4byte	0x101
 7443 09c6 09       		.byte	0x9
 7444 09c7 00       		.byte	0
 7445 09c8 1F       		.uleb128 0x1f
 7446 09c9 D8020000 		.4byte	.LASF134
 7447 09cd 07       		.byte	0x7
 7448 09ce 75       		.byte	0x75
 7449 09cf B8090000 		.4byte	0x9b8
 7450 09d3 1F       		.uleb128 0x1f
 7451 09d4 06040000 		.4byte	.LASF135
 7452 09d8 07       		.byte	0x7
 7453 09d9 76       		.byte	0x76
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 162


 7454 09da B8090000 		.4byte	0x9b8
 7455 09de 16       		.uleb128 0x16
 7456 09df AD000000 		.4byte	0xad
 7457 09e3 EE090000 		.4byte	0x9ee
 7458 09e7 17       		.uleb128 0x17
 7459 09e8 01010000 		.4byte	0x101
 7460 09ec 09       		.byte	0x9
 7461 09ed 00       		.byte	0
 7462 09ee 1F       		.uleb128 0x1f
 7463 09ef 7F070000 		.4byte	.LASF136
 7464 09f3 07       		.byte	0x7
 7465 09f4 77       		.byte	0x77
 7466 09f5 DE090000 		.4byte	0x9de
 7467 09f9 1F       		.uleb128 0x1f
 7468 09fa EE060000 		.4byte	.LASF137
 7469 09fe 07       		.byte	0x7
 7470 09ff 78       		.byte	0x78
 7471 0a00 B8090000 		.4byte	0x9b8
 7472 0a04 16       		.uleb128 0x16
 7473 0a05 13010000 		.4byte	0x113
 7474 0a09 140A0000 		.4byte	0xa14
 7475 0a0d 17       		.uleb128 0x17
 7476 0a0e 01010000 		.4byte	0x101
 7477 0a12 01       		.byte	0x1
 7478 0a13 00       		.byte	0
 7479 0a14 20       		.uleb128 0x20
 7480 0a15 62617200 		.ascii	"bar\000"
 7481 0a19 07       		.byte	0x7
 7482 0a1a 79       		.byte	0x79
 7483 0a1b 1F0A0000 		.4byte	0xa1f
 7484 0a1f 08       		.uleb128 0x8
 7485 0a20 040A0000 		.4byte	0xa04
 7486 0a24 1F       		.uleb128 0x1f
 7487 0a25 DA030000 		.4byte	.LASF138
 7488 0a29 07       		.byte	0x7
 7489 0a2a 7A       		.byte	0x7a
 7490 0a2b A2000000 		.4byte	0xa2
 7491 0a2f 1F       		.uleb128 0x1f
 7492 0a30 7B090000 		.4byte	.LASF139
 7493 0a34 07       		.byte	0x7
 7494 0a35 7B       		.byte	0x7b
 7495 0a36 A2000000 		.4byte	0xa2
 7496 0a3a 1F       		.uleb128 0x1f
 7497 0a3b 5A000000 		.4byte	.LASF140
 7498 0a3f 07       		.byte	0x7
 7499 0a40 7C       		.byte	0x7c
 7500 0a41 E5000000 		.4byte	0xe5
 7501 0a45 1F       		.uleb128 0x1f
 7502 0a46 B6080000 		.4byte	.LASF141
 7503 0a4a 07       		.byte	0x7
 7504 0a4b 7D       		.byte	0x7d
 7505 0a4c A2000000 		.4byte	0xa2
 7506 0a50 1F       		.uleb128 0x1f
 7507 0a51 25000000 		.4byte	.LASF142
 7508 0a55 07       		.byte	0x7
 7509 0a56 7E       		.byte	0x7e
 7510 0a57 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 163


 7511 0a5b 1F       		.uleb128 0x1f
 7512 0a5c E2050000 		.4byte	.LASF143
 7513 0a60 07       		.byte	0x7
 7514 0a61 7F       		.byte	0x7f
 7515 0a62 AD000000 		.4byte	0xad
 7516 0a66 1F       		.uleb128 0x1f
 7517 0a67 93020000 		.4byte	.LASF144
 7518 0a6b 07       		.byte	0x7
 7519 0a6c 80       		.byte	0x80
 7520 0a6d AD000000 		.4byte	0xad
 7521 0a71 1F       		.uleb128 0x1f
 7522 0a72 B8000000 		.4byte	.LASF145
 7523 0a76 07       		.byte	0x7
 7524 0a77 81       		.byte	0x81
 7525 0a78 12050000 		.4byte	0x512
 7526 0a7c 1F       		.uleb128 0x1f
 7527 0a7d E3020000 		.4byte	.LASF146
 7528 0a81 07       		.byte	0x7
 7529 0a82 82       		.byte	0x82
 7530 0a83 AD000000 		.4byte	0xad
 7531 0a87 1F       		.uleb128 0x1f
 7532 0a88 04060000 		.4byte	.LASF147
 7533 0a8c 07       		.byte	0x7
 7534 0a8d 83       		.byte	0x83
 7535 0a8e AD000000 		.4byte	0xad
 7536 0a92 1F       		.uleb128 0x1f
 7537 0a93 26040000 		.4byte	.LASF148
 7538 0a97 07       		.byte	0x7
 7539 0a98 84       		.byte	0x84
 7540 0a99 AD000000 		.4byte	0xad
 7541 0a9d 1F       		.uleb128 0x1f
 7542 0a9e E0090000 		.4byte	.LASF149
 7543 0aa2 07       		.byte	0x7
 7544 0aa3 85       		.byte	0x85
 7545 0aa4 AD000000 		.4byte	0xad
 7546 0aa8 16       		.uleb128 0x16
 7547 0aa9 AD000000 		.4byte	0xad
 7548 0aad B80A0000 		.4byte	0xab8
 7549 0ab1 17       		.uleb128 0x17
 7550 0ab2 01010000 		.4byte	0x101
 7551 0ab6 0F       		.byte	0xf
 7552 0ab7 00       		.byte	0
 7553 0ab8 1F       		.uleb128 0x1f
 7554 0ab9 4C0A0000 		.4byte	.LASF150
 7555 0abd 07       		.byte	0x7
 7556 0abe 86       		.byte	0x86
 7557 0abf A80A0000 		.4byte	0xaa8
 7558 0ac3 16       		.uleb128 0x16
 7559 0ac4 B8000000 		.4byte	0xb8
 7560 0ac8 D30A0000 		.4byte	0xad3
 7561 0acc 17       		.uleb128 0x17
 7562 0acd 01010000 		.4byte	0x101
 7563 0ad1 0F       		.byte	0xf
 7564 0ad2 00       		.byte	0
 7565 0ad3 1F       		.uleb128 0x1f
 7566 0ad4 94050000 		.4byte	.LASF151
 7567 0ad8 07       		.byte	0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 164


 7568 0ad9 87       		.byte	0x87
 7569 0ada C30A0000 		.4byte	0xac3
 7570 0ade 1F       		.uleb128 0x1f
 7571 0adf 70040000 		.4byte	.LASF152
 7572 0ae3 07       		.byte	0x7
 7573 0ae4 88       		.byte	0x88
 7574 0ae5 AD000000 		.4byte	0xad
 7575 0ae9 1F       		.uleb128 0x1f
 7576 0aea 63070000 		.4byte	.LASF153
 7577 0aee 07       		.byte	0x7
 7578 0aef 89       		.byte	0x89
 7579 0af0 AD000000 		.4byte	0xad
 7580 0af4 16       		.uleb128 0x16
 7581 0af5 F3000000 		.4byte	0xf3
 7582 0af9 040B0000 		.4byte	0xb04
 7583 0afd 17       		.uleb128 0x17
 7584 0afe 01010000 		.4byte	0x101
 7585 0b02 0D       		.byte	0xd
 7586 0b03 00       		.byte	0
 7587 0b04 1E       		.uleb128 0x1e
 7588 0b05 E7040000 		.4byte	.LASF154
 7589 0b09 01       		.byte	0x1
 7590 0b0a 28       		.byte	0x28
 7591 0b0b F40A0000 		.4byte	0xaf4
 7592 0b0f 05       		.uleb128 0x5
 7593 0b10 03       		.byte	0x3
 7594 0b11 00000000 		.4byte	newPresetName
 7595 0b15 1F       		.uleb128 0x1f
 7596 0b16 A5030000 		.4byte	.LASF155
 7597 0b1a 08       		.byte	0x8
 7598 0b1b 77       		.byte	0x77
 7599 0b1c 08030000 		.4byte	0x308
 7600 0b20 1E       		.uleb128 0x1e
 7601 0b21 C1070000 		.4byte	.LASF156
 7602 0b25 01       		.byte	0x1
 7603 0b26 26       		.byte	0x26
 7604 0b27 AD000000 		.4byte	0xad
 7605 0b2b 05       		.uleb128 0x5
 7606 0b2c 03       		.byte	0x3
 7607 0b2d 00000000 		.4byte	whichMacroPageIsActive
 7608 0b31 1E       		.uleb128 0x1e
 7609 0b32 DF010000 		.4byte	.LASF157
 7610 0b36 01       		.byte	0x1
 7611 0b37 10       		.byte	0x10
 7612 0b38 A2000000 		.4byte	0xa2
 7613 0b3c 05       		.uleb128 0x5
 7614 0b3d 03       		.byte	0x3
 7615 0b3e 00000000 		.4byte	prevEncoderVal
 7616 0b42 1E       		.uleb128 0x1e
 7617 0b43 91080000 		.4byte	.LASF158
 7618 0b47 01       		.byte	0x1
 7619 0b48 11       		.byte	0x11
 7620 0b49 AD000000 		.4byte	0xad
 7621 0b4d 05       		.uleb128 0x5
 7622 0b4e 03       		.byte	0x3
 7623 0b4f 00000000 		.4byte	encoderWatch
 7624 0b53 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 165


 7625 0b54 A2000000 		.4byte	0xa2
 7626 0b58 690B0000 		.4byte	0xb69
 7627 0b5c 17       		.uleb128 0x17
 7628 0b5d 01010000 		.4byte	0x101
 7629 0b61 02       		.byte	0x2
 7630 0b62 17       		.uleb128 0x17
 7631 0b63 01010000 		.4byte	0x101
 7632 0b67 01       		.byte	0x1
 7633 0b68 00       		.byte	0
 7634 0b69 1E       		.uleb128 0x1e
 7635 0b6a ED050000 		.4byte	.LASF159
 7636 0b6e 01       		.byte	0x1
 7637 0b6f 13       		.byte	0x13
 7638 0b70 530B0000 		.4byte	0xb53
 7639 0b74 05       		.uleb128 0x5
 7640 0b75 03       		.byte	0x3
 7641 0b76 00000000 		.4byte	menuPosition
 7642 0b7a 1E       		.uleb128 0x1e
 7643 0b7b F0020000 		.4byte	.LASF160
 7644 0b7f 01       		.byte	0x1
 7645 0b80 15       		.byte	0x15
 7646 0b81 AD000000 		.4byte	0xad
 7647 0b85 05       		.uleb128 0x5
 7648 0b86 03       		.byte	0x3
 7649 0b87 00000000 		.4byte	semitonesOrCents
 7650 0b8b 1E       		.uleb128 0x1e
 7651 0b8c 41000000 		.4byte	.LASF161
 7652 0b90 01       		.byte	0x1
 7653 0b91 16       		.byte	0x16
 7654 0b92 AD000000 		.4byte	0xad
 7655 0b96 05       		.uleb128 0x5
 7656 0b97 03       		.byte	0x3
 7657 0b98 00000000 		.4byte	editUp
 7658 0b9c 1E       		.uleb128 0x1e
 7659 0b9d 34090000 		.4byte	.LASF162
 7660 0ba1 01       		.byte	0x1
 7661 0ba2 17       		.byte	0x17
 7662 0ba3 AD000000 		.4byte	0xad
 7663 0ba7 05       		.uleb128 0x5
 7664 0ba8 03       		.byte	0x3
 7665 0ba9 00000000 		.4byte	oct1Up
 7666 0bad 1E       		.uleb128 0x1e
 7667 0bae B8030000 		.4byte	.LASF163
 7668 0bb2 01       		.byte	0x1
 7669 0bb3 18       		.byte	0x18
 7670 0bb4 AD000000 		.4byte	0xad
 7671 0bb8 05       		.uleb128 0x5
 7672 0bb9 03       		.byte	0x3
 7673 0bba 00000000 		.4byte	oct4Up
 7674 0bbe 1E       		.uleb128 0x1e
 7675 0bbf C2060000 		.4byte	.LASF164
 7676 0bc3 01       		.byte	0x1
 7677 0bc4 19       		.byte	0x19
 7678 0bc5 AD000000 		.4byte	0xad
 7679 0bc9 05       		.uleb128 0x5
 7680 0bca 03       		.byte	0x3
 7681 0bcb 00000000 		.4byte	encoderUp
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 166


 7682 0bcf 1E       		.uleb128 0x1e
 7683 0bd0 FA050000 		.4byte	.LASF165
 7684 0bd4 01       		.byte	0x1
 7685 0bd5 1A       		.byte	0x1a
 7686 0bd6 AD000000 		.4byte	0xad
 7687 0bda 05       		.uleb128 0x5
 7688 0bdb 03       		.byte	0x3
 7689 0bdc 00000000 		.4byte	button1Up
 7690 0be0 1E       		.uleb128 0x1e
 7691 0be1 F0080000 		.4byte	.LASF166
 7692 0be5 01       		.byte	0x1
 7693 0be6 1B       		.byte	0x1b
 7694 0be7 AD000000 		.4byte	0xad
 7695 0beb 05       		.uleb128 0x5
 7696 0bec 03       		.byte	0x3
 7697 0bed 00000000 		.4byte	button2Up
 7698 0bf1 1E       		.uleb128 0x1e
 7699 0bf2 DC000000 		.4byte	.LASF167
 7700 0bf6 01       		.byte	0x1
 7701 0bf7 1C       		.byte	0x1c
 7702 0bf8 AD000000 		.4byte	0xad
 7703 0bfc 05       		.uleb128 0x5
 7704 0bfd 03       		.byte	0x3
 7705 0bfe 00000000 		.4byte	button3Up
 7706 0c02 1E       		.uleb128 0x1e
 7707 0c03 B8060000 		.4byte	.LASF168
 7708 0c07 01       		.byte	0x1
 7709 0c08 1D       		.byte	0x1d
 7710 0c09 AD000000 		.4byte	0xad
 7711 0c0d 05       		.uleb128 0x5
 7712 0c0e 03       		.byte	0x3
 7713 0c0f 00000000 		.4byte	button4Up
 7714 0c13 1E       		.uleb128 0x1e
 7715 0c14 F4060000 		.4byte	.LASF169
 7716 0c18 01       		.byte	0x1
 7717 0c19 1E       		.byte	0x1e
 7718 0c1a AD000000 		.4byte	0xad
 7719 0c1e 05       		.uleb128 0x5
 7720 0c1f 03       		.byte	0x3
 7721 0c20 00000000 		.4byte	shiftUp
 7722 0c24 1E       		.uleb128 0x1e
 7723 0c25 43060000 		.4byte	.LASF170
 7724 0c29 01       		.byte	0x1
 7725 0c2a 1F       		.byte	0x1f
 7726 0c2b AD000000 		.4byte	0xad
 7727 0c2f 05       		.uleb128 0x5
 7728 0c30 03       		.byte	0x3
 7729 0c31 00000000 		.4byte	editingSliderRepString
 7730 0c35 1E       		.uleb128 0x1e
 7731 0c36 BF030000 		.4byte	.LASF171
 7732 0c3a 01       		.byte	0x1
 7733 0c3b 20       		.byte	0x20
 7734 0c3c AD000000 		.4byte	0xad
 7735 0c40 05       		.uleb128 0x5
 7736 0c41 03       		.byte	0x3
 7737 0c42 00000000 		.4byte	whichMidiSendSelected
 7738 0c46 1E       		.uleb128 0x1e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 167


 7739 0c47 AC040000 		.4byte	.LASF172
 7740 0c4b 01       		.byte	0x1
 7741 0c4c 21       		.byte	0x21
 7742 0c4d AD000000 		.4byte	0xad
 7743 0c51 05       		.uleb128 0x5
 7744 0c52 03       		.byte	0x3
 7745 0c53 00000000 		.4byte	whichFirmwareUpdateSelected
 7746 0c57 1E       		.uleb128 0x1e
 7747 0c58 3B090000 		.4byte	.LASF173
 7748 0c5c 01       		.byte	0x1
 7749 0c5d 22       		.byte	0x22
 7750 0c5e AD000000 		.4byte	0xad
 7751 0c62 05       		.uleb128 0x5
 7752 0c63 03       		.byte	0x3
 7753 0c64 00000000 		.4byte	controlsDisplayed
 7754 0c68 1E       		.uleb128 0x1e
 7755 0c69 E0070000 		.4byte	.LASF174
 7756 0c6d 01       		.byte	0x1
 7757 0c6e 24       		.byte	0x24
 7758 0c6f AD000000 		.4byte	0xad
 7759 0c73 05       		.uleb128 0x5
 7760 0c74 03       		.byte	0x3
 7761 0c75 00000000 		.4byte	presetStoreStage
 7762 0c79 16       		.uleb128 0x16
 7763 0c7a 890C0000 		.4byte	0xc89
 7764 0c7e 890C0000 		.4byte	0xc89
 7765 0c82 17       		.uleb128 0x17
 7766 0c83 01010000 		.4byte	0x101
 7767 0c87 02       		.byte	0x2
 7768 0c88 00       		.byte	0
 7769 0c89 07       		.uleb128 0x7
 7770 0c8a 08010000 		.4byte	0x108
 7771 0c8e 21       		.uleb128 0x21
 7772 0c8f EE010000 		.4byte	.LASF175
 7773 0c93 01       		.byte	0x1
 7774 0c94 0602     		.2byte	0x206
 7775 0c96 A00C0000 		.4byte	0xca0
 7776 0c9a 05       		.uleb128 0x5
 7777 0c9b 03       		.byte	0x3
 7778 0c9c 00000000 		.4byte	calibrationNames
 7779 0ca0 07       		.uleb128 0x7
 7780 0ca1 790C0000 		.4byte	0xc79
 7781 0ca5 16       		.uleb128 0x16
 7782 0ca6 890C0000 		.4byte	0xc89
 7783 0caa B50C0000 		.4byte	0xcb5
 7784 0cae 17       		.uleb128 0x17
 7785 0caf 01010000 		.4byte	0x101
 7786 0cb3 03       		.byte	0x3
 7787 0cb4 00       		.byte	0
 7788 0cb5 21       		.uleb128 0x21
 7789 0cb6 61080000 		.4byte	.LASF176
 7790 0cba 01       		.byte	0x1
 7791 0cbb 0702     		.2byte	0x207
 7792 0cbd C70C0000 		.4byte	0xcc7
 7793 0cc1 05       		.uleb128 0x5
 7794 0cc2 03       		.byte	0x3
 7795 0cc3 00000000 		.4byte	mainMenuNames
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 168


 7796 0cc7 07       		.uleb128 0x7
 7797 0cc8 A50C0000 		.4byte	0xca5
 7798 0ccc 16       		.uleb128 0x16
 7799 0ccd 890C0000 		.4byte	0xc89
 7800 0cd1 DC0C0000 		.4byte	0xcdc
 7801 0cd5 17       		.uleb128 0x17
 7802 0cd6 01010000 		.4byte	0x101
 7803 0cda 08       		.byte	0x8
 7804 0cdb 00       		.byte	0
 7805 0cdc 21       		.uleb128 0x21
 7806 0cdd 26090000 		.4byte	.LASF177
 7807 0ce1 01       		.byte	0x1
 7808 0ce2 0802     		.2byte	0x208
 7809 0ce4 EE0C0000 		.4byte	0xcee
 7810 0ce8 05       		.uleb128 0x5
 7811 0ce9 03       		.byte	0x3
 7812 0cea 00000000 		.4byte	settingsNames
 7813 0cee 07       		.uleb128 0x7
 7814 0cef CC0C0000 		.4byte	0xccc
 7815 0cf3 21       		.uleb128 0x21
 7816 0cf4 A2090000 		.4byte	.LASF178
 7817 0cf8 01       		.byte	0x1
 7818 0cf9 0902     		.2byte	0x209
 7819 0cfb AD000000 		.4byte	0xad
 7820 0cff 05       		.uleb128 0x5
 7821 0d00 03       		.byte	0x3
 7822 0d01 00000000 		.4byte	numMainMenuItems
 7823 0d05 21       		.uleb128 0x21
 7824 0d06 8E010000 		.4byte	.LASF179
 7825 0d0a 01       		.byte	0x1
 7826 0d0b 0A02     		.2byte	0x20a
 7827 0d0d AD000000 		.4byte	0xad
 7828 0d11 05       		.uleb128 0x5
 7829 0d12 03       		.byte	0x3
 7830 0d13 00000000 		.4byte	numCalibrationItems
 7831 0d17 21       		.uleb128 0x21
 7832 0d18 9C020000 		.4byte	.LASF180
 7833 0d1c 01       		.byte	0x1
 7834 0d1d 0B02     		.2byte	0x20b
 7835 0d1f AD000000 		.4byte	0xad
 7836 0d23 05       		.uleb128 0x5
 7837 0d24 03       		.byte	0x3
 7838 0d25 00000000 		.4byte	numSettingsItems
 7839 0d29 21       		.uleb128 0x21
 7840 0d2a F6030000 		.4byte	.LASF181
 7841 0d2e 01       		.byte	0x1
 7842 0d2f 5602     		.2byte	0x256
 7843 0d31 AD000000 		.4byte	0xad
 7844 0d35 05       		.uleb128 0x5
 7845 0d36 03       		.byte	0x3
 7846 0d37 00000000 		.4byte	fretToCalibrate
 7847 0d3b 16       		.uleb128 0x16
 7848 0d3c AD000000 		.4byte	0xad
 7849 0d40 4B0D0000 		.4byte	0xd4b
 7850 0d44 17       		.uleb128 0x17
 7851 0d45 01010000 		.4byte	0x101
 7852 0d49 0B       		.byte	0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 169


 7853 0d4a 00       		.byte	0
 7854 0d4b 21       		.uleb128 0x21
 7855 0d4c 56090000 		.4byte	.LASF182
 7856 0d50 01       		.byte	0x1
 7857 0d51 5702     		.2byte	0x257
 7858 0d53 3B0D0000 		.4byte	0xd3b
 7859 0d57 05       		.uleb128 0x5
 7860 0d58 03       		.byte	0x3
 7861 0d59 00000000 		.4byte	whichFretArray
 7862 0d5d 00       		.byte	0
 7863              		.section	.debug_abbrev,"",%progbits
 7864              	.Ldebug_abbrev0:
 7865 0000 01       		.uleb128 0x1
 7866 0001 11       		.uleb128 0x11
 7867 0002 01       		.byte	0x1
 7868 0003 25       		.uleb128 0x25
 7869 0004 0E       		.uleb128 0xe
 7870 0005 13       		.uleb128 0x13
 7871 0006 0B       		.uleb128 0xb
 7872 0007 03       		.uleb128 0x3
 7873 0008 0E       		.uleb128 0xe
 7874 0009 1B       		.uleb128 0x1b
 7875 000a 0E       		.uleb128 0xe
 7876 000b 55       		.uleb128 0x55
 7877 000c 17       		.uleb128 0x17
 7878 000d 11       		.uleb128 0x11
 7879 000e 01       		.uleb128 0x1
 7880 000f 10       		.uleb128 0x10
 7881 0010 17       		.uleb128 0x17
 7882 0011 00       		.byte	0
 7883 0012 00       		.byte	0
 7884 0013 02       		.uleb128 0x2
 7885 0014 16       		.uleb128 0x16
 7886 0015 00       		.byte	0
 7887 0016 03       		.uleb128 0x3
 7888 0017 0E       		.uleb128 0xe
 7889 0018 3A       		.uleb128 0x3a
 7890 0019 0B       		.uleb128 0xb
 7891 001a 3B       		.uleb128 0x3b
 7892 001b 0B       		.uleb128 0xb
 7893 001c 49       		.uleb128 0x49
 7894 001d 13       		.uleb128 0x13
 7895 001e 00       		.byte	0
 7896 001f 00       		.byte	0
 7897 0020 03       		.uleb128 0x3
 7898 0021 24       		.uleb128 0x24
 7899 0022 00       		.byte	0
 7900 0023 0B       		.uleb128 0xb
 7901 0024 0B       		.uleb128 0xb
 7902 0025 3E       		.uleb128 0x3e
 7903 0026 0B       		.uleb128 0xb
 7904 0027 03       		.uleb128 0x3
 7905 0028 0E       		.uleb128 0xe
 7906 0029 00       		.byte	0
 7907 002a 00       		.byte	0
 7908 002b 04       		.uleb128 0x4
 7909 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 170


 7910 002d 00       		.byte	0
 7911 002e 0B       		.uleb128 0xb
 7912 002f 0B       		.uleb128 0xb
 7913 0030 3E       		.uleb128 0x3e
 7914 0031 0B       		.uleb128 0xb
 7915 0032 03       		.uleb128 0x3
 7916 0033 08       		.uleb128 0x8
 7917 0034 00       		.byte	0
 7918 0035 00       		.byte	0
 7919 0036 05       		.uleb128 0x5
 7920 0037 16       		.uleb128 0x16
 7921 0038 00       		.byte	0
 7922 0039 03       		.uleb128 0x3
 7923 003a 0E       		.uleb128 0xe
 7924 003b 3A       		.uleb128 0x3a
 7925 003c 0B       		.uleb128 0xb
 7926 003d 3B       		.uleb128 0x3b
 7927 003e 05       		.uleb128 0x5
 7928 003f 49       		.uleb128 0x49
 7929 0040 13       		.uleb128 0x13
 7930 0041 00       		.byte	0
 7931 0042 00       		.byte	0
 7932 0043 06       		.uleb128 0x6
 7933 0044 0F       		.uleb128 0xf
 7934 0045 00       		.byte	0
 7935 0046 0B       		.uleb128 0xb
 7936 0047 0B       		.uleb128 0xb
 7937 0048 49       		.uleb128 0x49
 7938 0049 13       		.uleb128 0x13
 7939 004a 00       		.byte	0
 7940 004b 00       		.byte	0
 7941 004c 07       		.uleb128 0x7
 7942 004d 26       		.uleb128 0x26
 7943 004e 00       		.byte	0
 7944 004f 49       		.uleb128 0x49
 7945 0050 13       		.uleb128 0x13
 7946 0051 00       		.byte	0
 7947 0052 00       		.byte	0
 7948 0053 08       		.uleb128 0x8
 7949 0054 35       		.uleb128 0x35
 7950 0055 00       		.byte	0
 7951 0056 49       		.uleb128 0x49
 7952 0057 13       		.uleb128 0x13
 7953 0058 00       		.byte	0
 7954 0059 00       		.byte	0
 7955 005a 09       		.uleb128 0x9
 7956 005b 04       		.uleb128 0x4
 7957 005c 01       		.byte	0x1
 7958 005d 03       		.uleb128 0x3
 7959 005e 0E       		.uleb128 0xe
 7960 005f 0B       		.uleb128 0xb
 7961 0060 0B       		.uleb128 0xb
 7962 0061 49       		.uleb128 0x49
 7963 0062 13       		.uleb128 0x13
 7964 0063 3A       		.uleb128 0x3a
 7965 0064 0B       		.uleb128 0xb
 7966 0065 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 171


 7967 0066 0B       		.uleb128 0xb
 7968 0067 01       		.uleb128 0x1
 7969 0068 13       		.uleb128 0x13
 7970 0069 00       		.byte	0
 7971 006a 00       		.byte	0
 7972 006b 0A       		.uleb128 0xa
 7973 006c 28       		.uleb128 0x28
 7974 006d 00       		.byte	0
 7975 006e 03       		.uleb128 0x3
 7976 006f 0E       		.uleb128 0xe
 7977 0070 1C       		.uleb128 0x1c
 7978 0071 0B       		.uleb128 0xb
 7979 0072 00       		.byte	0
 7980 0073 00       		.byte	0
 7981 0074 0B       		.uleb128 0xb
 7982 0075 13       		.uleb128 0x13
 7983 0076 01       		.byte	0x1
 7984 0077 0B       		.uleb128 0xb
 7985 0078 0B       		.uleb128 0xb
 7986 0079 3A       		.uleb128 0x3a
 7987 007a 0B       		.uleb128 0xb
 7988 007b 3B       		.uleb128 0x3b
 7989 007c 0B       		.uleb128 0xb
 7990 007d 01       		.uleb128 0x1
 7991 007e 13       		.uleb128 0x13
 7992 007f 00       		.byte	0
 7993 0080 00       		.byte	0
 7994 0081 0C       		.uleb128 0xc
 7995 0082 0D       		.uleb128 0xd
 7996 0083 00       		.byte	0
 7997 0084 03       		.uleb128 0x3
 7998 0085 0E       		.uleb128 0xe
 7999 0086 3A       		.uleb128 0x3a
 8000 0087 0B       		.uleb128 0xb
 8001 0088 3B       		.uleb128 0x3b
 8002 0089 0B       		.uleb128 0xb
 8003 008a 49       		.uleb128 0x49
 8004 008b 13       		.uleb128 0x13
 8005 008c 38       		.uleb128 0x38
 8006 008d 0B       		.uleb128 0xb
 8007 008e 00       		.byte	0
 8008 008f 00       		.byte	0
 8009 0090 0D       		.uleb128 0xd
 8010 0091 13       		.uleb128 0x13
 8011 0092 01       		.byte	0x1
 8012 0093 03       		.uleb128 0x3
 8013 0094 0E       		.uleb128 0xe
 8014 0095 0B       		.uleb128 0xb
 8015 0096 0B       		.uleb128 0xb
 8016 0097 3A       		.uleb128 0x3a
 8017 0098 0B       		.uleb128 0xb
 8018 0099 3B       		.uleb128 0x3b
 8019 009a 0B       		.uleb128 0xb
 8020 009b 01       		.uleb128 0x1
 8021 009c 13       		.uleb128 0x13
 8022 009d 00       		.byte	0
 8023 009e 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 172


 8024 009f 0E       		.uleb128 0xe
 8025 00a0 16       		.uleb128 0x16
 8026 00a1 00       		.byte	0
 8027 00a2 03       		.uleb128 0x3
 8028 00a3 08       		.uleb128 0x8
 8029 00a4 3A       		.uleb128 0x3a
 8030 00a5 0B       		.uleb128 0xb
 8031 00a6 3B       		.uleb128 0x3b
 8032 00a7 0B       		.uleb128 0xb
 8033 00a8 49       		.uleb128 0x49
 8034 00a9 13       		.uleb128 0x13
 8035 00aa 00       		.byte	0
 8036 00ab 00       		.byte	0
 8037 00ac 0F       		.uleb128 0xf
 8038 00ad 28       		.uleb128 0x28
 8039 00ae 00       		.byte	0
 8040 00af 03       		.uleb128 0x3
 8041 00b0 08       		.uleb128 0x8
 8042 00b1 1C       		.uleb128 0x1c
 8043 00b2 0B       		.uleb128 0xb
 8044 00b3 00       		.byte	0
 8045 00b4 00       		.byte	0
 8046 00b5 10       		.uleb128 0x10
 8047 00b6 2E       		.uleb128 0x2e
 8048 00b7 01       		.byte	0x1
 8049 00b8 3F       		.uleb128 0x3f
 8050 00b9 19       		.uleb128 0x19
 8051 00ba 03       		.uleb128 0x3
 8052 00bb 0E       		.uleb128 0xe
 8053 00bc 3A       		.uleb128 0x3a
 8054 00bd 0B       		.uleb128 0xb
 8055 00be 3B       		.uleb128 0x3b
 8056 00bf 0B       		.uleb128 0xb
 8057 00c0 27       		.uleb128 0x27
 8058 00c1 19       		.uleb128 0x19
 8059 00c2 11       		.uleb128 0x11
 8060 00c3 01       		.uleb128 0x1
 8061 00c4 12       		.uleb128 0x12
 8062 00c5 06       		.uleb128 0x6
 8063 00c6 40       		.uleb128 0x40
 8064 00c7 18       		.uleb128 0x18
 8065 00c8 9642     		.uleb128 0x2116
 8066 00ca 19       		.uleb128 0x19
 8067 00cb 01       		.uleb128 0x1
 8068 00cc 13       		.uleb128 0x13
 8069 00cd 00       		.byte	0
 8070 00ce 00       		.byte	0
 8071 00cf 11       		.uleb128 0x11
 8072 00d0 34       		.uleb128 0x34
 8073 00d1 00       		.byte	0
 8074 00d2 03       		.uleb128 0x3
 8075 00d3 0E       		.uleb128 0xe
 8076 00d4 3A       		.uleb128 0x3a
 8077 00d5 0B       		.uleb128 0xb
 8078 00d6 3B       		.uleb128 0x3b
 8079 00d7 0B       		.uleb128 0xb
 8080 00d8 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 173


 8081 00d9 13       		.uleb128 0x13
 8082 00da 02       		.uleb128 0x2
 8083 00db 18       		.uleb128 0x18
 8084 00dc 00       		.byte	0
 8085 00dd 00       		.byte	0
 8086 00de 12       		.uleb128 0x12
 8087 00df 0B       		.uleb128 0xb
 8088 00e0 01       		.byte	0x1
 8089 00e1 11       		.uleb128 0x11
 8090 00e2 01       		.uleb128 0x1
 8091 00e3 12       		.uleb128 0x12
 8092 00e4 06       		.uleb128 0x6
 8093 00e5 01       		.uleb128 0x1
 8094 00e6 13       		.uleb128 0x13
 8095 00e7 00       		.byte	0
 8096 00e8 00       		.byte	0
 8097 00e9 13       		.uleb128 0x13
 8098 00ea 34       		.uleb128 0x34
 8099 00eb 00       		.byte	0
 8100 00ec 03       		.uleb128 0x3
 8101 00ed 08       		.uleb128 0x8
 8102 00ee 3A       		.uleb128 0x3a
 8103 00ef 0B       		.uleb128 0xb
 8104 00f0 3B       		.uleb128 0x3b
 8105 00f1 0B       		.uleb128 0xb
 8106 00f2 49       		.uleb128 0x49
 8107 00f3 13       		.uleb128 0x13
 8108 00f4 02       		.uleb128 0x2
 8109 00f5 18       		.uleb128 0x18
 8110 00f6 00       		.byte	0
 8111 00f7 00       		.byte	0
 8112 00f8 14       		.uleb128 0x14
 8113 00f9 0B       		.uleb128 0xb
 8114 00fa 01       		.byte	0x1
 8115 00fb 11       		.uleb128 0x11
 8116 00fc 01       		.uleb128 0x1
 8117 00fd 12       		.uleb128 0x12
 8118 00fe 06       		.uleb128 0x6
 8119 00ff 00       		.byte	0
 8120 0100 00       		.byte	0
 8121 0101 15       		.uleb128 0x15
 8122 0102 34       		.uleb128 0x34
 8123 0103 00       		.byte	0
 8124 0104 03       		.uleb128 0x3
 8125 0105 0E       		.uleb128 0xe
 8126 0106 3A       		.uleb128 0x3a
 8127 0107 0B       		.uleb128 0xb
 8128 0108 3B       		.uleb128 0x3b
 8129 0109 05       		.uleb128 0x5
 8130 010a 49       		.uleb128 0x49
 8131 010b 13       		.uleb128 0x13
 8132 010c 02       		.uleb128 0x2
 8133 010d 18       		.uleb128 0x18
 8134 010e 00       		.byte	0
 8135 010f 00       		.byte	0
 8136 0110 16       		.uleb128 0x16
 8137 0111 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 174


 8138 0112 01       		.byte	0x1
 8139 0113 49       		.uleb128 0x49
 8140 0114 13       		.uleb128 0x13
 8141 0115 01       		.uleb128 0x1
 8142 0116 13       		.uleb128 0x13
 8143 0117 00       		.byte	0
 8144 0118 00       		.byte	0
 8145 0119 17       		.uleb128 0x17
 8146 011a 21       		.uleb128 0x21
 8147 011b 00       		.byte	0
 8148 011c 49       		.uleb128 0x49
 8149 011d 13       		.uleb128 0x13
 8150 011e 2F       		.uleb128 0x2f
 8151 011f 0B       		.uleb128 0xb
 8152 0120 00       		.byte	0
 8153 0121 00       		.byte	0
 8154 0122 18       		.uleb128 0x18
 8155 0123 2E       		.uleb128 0x2e
 8156 0124 00       		.byte	0
 8157 0125 3F       		.uleb128 0x3f
 8158 0126 19       		.uleb128 0x19
 8159 0127 03       		.uleb128 0x3
 8160 0128 0E       		.uleb128 0xe
 8161 0129 3A       		.uleb128 0x3a
 8162 012a 0B       		.uleb128 0xb
 8163 012b 3B       		.uleb128 0x3b
 8164 012c 05       		.uleb128 0x5
 8165 012d 27       		.uleb128 0x27
 8166 012e 19       		.uleb128 0x19
 8167 012f 11       		.uleb128 0x11
 8168 0130 01       		.uleb128 0x1
 8169 0131 12       		.uleb128 0x12
 8170 0132 06       		.uleb128 0x6
 8171 0133 40       		.uleb128 0x40
 8172 0134 18       		.uleb128 0x18
 8173 0135 9642     		.uleb128 0x2116
 8174 0137 19       		.uleb128 0x19
 8175 0138 00       		.byte	0
 8176 0139 00       		.byte	0
 8177 013a 19       		.uleb128 0x19
 8178 013b 2E       		.uleb128 0x2e
 8179 013c 01       		.byte	0x1
 8180 013d 3F       		.uleb128 0x3f
 8181 013e 19       		.uleb128 0x19
 8182 013f 03       		.uleb128 0x3
 8183 0140 0E       		.uleb128 0xe
 8184 0141 3A       		.uleb128 0x3a
 8185 0142 0B       		.uleb128 0xb
 8186 0143 3B       		.uleb128 0x3b
 8187 0144 05       		.uleb128 0x5
 8188 0145 27       		.uleb128 0x27
 8189 0146 19       		.uleb128 0x19
 8190 0147 11       		.uleb128 0x11
 8191 0148 01       		.uleb128 0x1
 8192 0149 12       		.uleb128 0x12
 8193 014a 06       		.uleb128 0x6
 8194 014b 40       		.uleb128 0x40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 175


 8195 014c 18       		.uleb128 0x18
 8196 014d 9642     		.uleb128 0x2116
 8197 014f 19       		.uleb128 0x19
 8198 0150 01       		.uleb128 0x1
 8199 0151 13       		.uleb128 0x13
 8200 0152 00       		.byte	0
 8201 0153 00       		.byte	0
 8202 0154 1A       		.uleb128 0x1a
 8203 0155 05       		.uleb128 0x5
 8204 0156 00       		.byte	0
 8205 0157 03       		.uleb128 0x3
 8206 0158 0E       		.uleb128 0xe
 8207 0159 3A       		.uleb128 0x3a
 8208 015a 0B       		.uleb128 0xb
 8209 015b 3B       		.uleb128 0x3b
 8210 015c 05       		.uleb128 0x5
 8211 015d 49       		.uleb128 0x49
 8212 015e 13       		.uleb128 0x13
 8213 015f 02       		.uleb128 0x2
 8214 0160 18       		.uleb128 0x18
 8215 0161 00       		.byte	0
 8216 0162 00       		.byte	0
 8217 0163 1B       		.uleb128 0x1b
 8218 0164 34       		.uleb128 0x34
 8219 0165 00       		.byte	0
 8220 0166 03       		.uleb128 0x3
 8221 0167 08       		.uleb128 0x8
 8222 0168 3A       		.uleb128 0x3a
 8223 0169 0B       		.uleb128 0xb
 8224 016a 3B       		.uleb128 0x3b
 8225 016b 05       		.uleb128 0x5
 8226 016c 49       		.uleb128 0x49
 8227 016d 13       		.uleb128 0x13
 8228 016e 02       		.uleb128 0x2
 8229 016f 18       		.uleb128 0x18
 8230 0170 00       		.byte	0
 8231 0171 00       		.byte	0
 8232 0172 1C       		.uleb128 0x1c
 8233 0173 2E       		.uleb128 0x2e
 8234 0174 00       		.byte	0
 8235 0175 3F       		.uleb128 0x3f
 8236 0176 19       		.uleb128 0x19
 8237 0177 03       		.uleb128 0x3
 8238 0178 0E       		.uleb128 0xe
 8239 0179 3A       		.uleb128 0x3a
 8240 017a 0B       		.uleb128 0xb
 8241 017b 3B       		.uleb128 0x3b
 8242 017c 05       		.uleb128 0x5
 8243 017d 11       		.uleb128 0x11
 8244 017e 01       		.uleb128 0x1
 8245 017f 12       		.uleb128 0x12
 8246 0180 06       		.uleb128 0x6
 8247 0181 40       		.uleb128 0x40
 8248 0182 18       		.uleb128 0x18
 8249 0183 9642     		.uleb128 0x2116
 8250 0185 19       		.uleb128 0x19
 8251 0186 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 176


 8252 0187 00       		.byte	0
 8253 0188 1D       		.uleb128 0x1d
 8254 0189 34       		.uleb128 0x34
 8255 018a 00       		.byte	0
 8256 018b 03       		.uleb128 0x3
 8257 018c 0E       		.uleb128 0xe
 8258 018d 3A       		.uleb128 0x3a
 8259 018e 0B       		.uleb128 0xb
 8260 018f 3B       		.uleb128 0x3b
 8261 0190 05       		.uleb128 0x5
 8262 0191 49       		.uleb128 0x49
 8263 0192 13       		.uleb128 0x13
 8264 0193 3F       		.uleb128 0x3f
 8265 0194 19       		.uleb128 0x19
 8266 0195 3C       		.uleb128 0x3c
 8267 0196 19       		.uleb128 0x19
 8268 0197 00       		.byte	0
 8269 0198 00       		.byte	0
 8270 0199 1E       		.uleb128 0x1e
 8271 019a 34       		.uleb128 0x34
 8272 019b 00       		.byte	0
 8273 019c 03       		.uleb128 0x3
 8274 019d 0E       		.uleb128 0xe
 8275 019e 3A       		.uleb128 0x3a
 8276 019f 0B       		.uleb128 0xb
 8277 01a0 3B       		.uleb128 0x3b
 8278 01a1 0B       		.uleb128 0xb
 8279 01a2 49       		.uleb128 0x49
 8280 01a3 13       		.uleb128 0x13
 8281 01a4 3F       		.uleb128 0x3f
 8282 01a5 19       		.uleb128 0x19
 8283 01a6 02       		.uleb128 0x2
 8284 01a7 18       		.uleb128 0x18
 8285 01a8 00       		.byte	0
 8286 01a9 00       		.byte	0
 8287 01aa 1F       		.uleb128 0x1f
 8288 01ab 34       		.uleb128 0x34
 8289 01ac 00       		.byte	0
 8290 01ad 03       		.uleb128 0x3
 8291 01ae 0E       		.uleb128 0xe
 8292 01af 3A       		.uleb128 0x3a
 8293 01b0 0B       		.uleb128 0xb
 8294 01b1 3B       		.uleb128 0x3b
 8295 01b2 0B       		.uleb128 0xb
 8296 01b3 49       		.uleb128 0x49
 8297 01b4 13       		.uleb128 0x13
 8298 01b5 3F       		.uleb128 0x3f
 8299 01b6 19       		.uleb128 0x19
 8300 01b7 3C       		.uleb128 0x3c
 8301 01b8 19       		.uleb128 0x19
 8302 01b9 00       		.byte	0
 8303 01ba 00       		.byte	0
 8304 01bb 20       		.uleb128 0x20
 8305 01bc 34       		.uleb128 0x34
 8306 01bd 00       		.byte	0
 8307 01be 03       		.uleb128 0x3
 8308 01bf 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 177


 8309 01c0 3A       		.uleb128 0x3a
 8310 01c1 0B       		.uleb128 0xb
 8311 01c2 3B       		.uleb128 0x3b
 8312 01c3 0B       		.uleb128 0xb
 8313 01c4 49       		.uleb128 0x49
 8314 01c5 13       		.uleb128 0x13
 8315 01c6 3F       		.uleb128 0x3f
 8316 01c7 19       		.uleb128 0x19
 8317 01c8 3C       		.uleb128 0x3c
 8318 01c9 19       		.uleb128 0x19
 8319 01ca 00       		.byte	0
 8320 01cb 00       		.byte	0
 8321 01cc 21       		.uleb128 0x21
 8322 01cd 34       		.uleb128 0x34
 8323 01ce 00       		.byte	0
 8324 01cf 03       		.uleb128 0x3
 8325 01d0 0E       		.uleb128 0xe
 8326 01d1 3A       		.uleb128 0x3a
 8327 01d2 0B       		.uleb128 0xb
 8328 01d3 3B       		.uleb128 0x3b
 8329 01d4 05       		.uleb128 0x5
 8330 01d5 49       		.uleb128 0x49
 8331 01d6 13       		.uleb128 0x13
 8332 01d7 3F       		.uleb128 0x3f
 8333 01d8 19       		.uleb128 0x19
 8334 01d9 02       		.uleb128 0x2
 8335 01da 18       		.uleb128 0x18
 8336 01db 00       		.byte	0
 8337 01dc 00       		.byte	0
 8338 01dd 00       		.byte	0
 8339              		.section	.debug_aranges,"",%progbits
 8340 0000 94000000 		.4byte	0x94
 8341 0004 0200     		.2byte	0x2
 8342 0006 00000000 		.4byte	.Ldebug_info0
 8343 000a 04       		.byte	0x4
 8344 000b 00       		.byte	0
 8345 000c 0000     		.2byte	0
 8346 000e 0000     		.2byte	0
 8347 0010 00000000 		.4byte	.LFB64
 8348 0014 3C0D0000 		.4byte	.LFE64-.LFB64
 8349 0018 00000000 		.4byte	.LFB65
 8350 001c B4000000 		.4byte	.LFE65-.LFB65
 8351 0020 00000000 		.4byte	.LFB66
 8352 0024 A4010000 		.4byte	.LFE66-.LFB66
 8353 0028 00000000 		.4byte	.LFB67
 8354 002c 00110000 		.4byte	.LFE67-.LFB67
 8355 0030 00000000 		.4byte	.LFB68
 8356 0034 9C000000 		.4byte	.LFE68-.LFB68
 8357 0038 00000000 		.4byte	.LFB69
 8358 003c 9C000000 		.4byte	.LFE69-.LFB69
 8359 0040 00000000 		.4byte	.LFB70
 8360 0044 4C000000 		.4byte	.LFE70-.LFB70
 8361 0048 00000000 		.4byte	.LFB71
 8362 004c 4C000000 		.4byte	.LFE71-.LFB71
 8363 0050 00000000 		.4byte	.LFB72
 8364 0054 48000000 		.4byte	.LFE72-.LFB72
 8365 0058 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 178


 8366 005c B0000000 		.4byte	.LFE73-.LFB73
 8367 0060 00000000 		.4byte	.LFB74
 8368 0064 54010000 		.4byte	.LFE74-.LFB74
 8369 0068 00000000 		.4byte	.LFB75
 8370 006c A0000000 		.4byte	.LFE75-.LFB75
 8371 0070 00000000 		.4byte	.LFB76
 8372 0074 BC000000 		.4byte	.LFE76-.LFB76
 8373 0078 00000000 		.4byte	.LFB77
 8374 007c 20000000 		.4byte	.LFE77-.LFB77
 8375 0080 00000000 		.4byte	.LFB78
 8376 0084 44010000 		.4byte	.LFE78-.LFB78
 8377 0088 00000000 		.4byte	.LFB79
 8378 008c 54010000 		.4byte	.LFE79-.LFB79
 8379 0090 00000000 		.4byte	0
 8380 0094 00000000 		.4byte	0
 8381              		.section	.debug_ranges,"",%progbits
 8382              	.Ldebug_ranges0:
 8383 0000 00000000 		.4byte	.LFB64
 8384 0004 3C0D0000 		.4byte	.LFE64
 8385 0008 00000000 		.4byte	.LFB65
 8386 000c B4000000 		.4byte	.LFE65
 8387 0010 00000000 		.4byte	.LFB66
 8388 0014 A4010000 		.4byte	.LFE66
 8389 0018 00000000 		.4byte	.LFB67
 8390 001c 00110000 		.4byte	.LFE67
 8391 0020 00000000 		.4byte	.LFB68
 8392 0024 9C000000 		.4byte	.LFE68
 8393 0028 00000000 		.4byte	.LFB69
 8394 002c 9C000000 		.4byte	.LFE69
 8395 0030 00000000 		.4byte	.LFB70
 8396 0034 4C000000 		.4byte	.LFE70
 8397 0038 00000000 		.4byte	.LFB71
 8398 003c 4C000000 		.4byte	.LFE71
 8399 0040 00000000 		.4byte	.LFB72
 8400 0044 48000000 		.4byte	.LFE72
 8401 0048 00000000 		.4byte	.LFB73
 8402 004c B0000000 		.4byte	.LFE73
 8403 0050 00000000 		.4byte	.LFB74
 8404 0054 54010000 		.4byte	.LFE74
 8405 0058 00000000 		.4byte	.LFB75
 8406 005c A0000000 		.4byte	.LFE75
 8407 0060 00000000 		.4byte	.LFB76
 8408 0064 BC000000 		.4byte	.LFE76
 8409 0068 00000000 		.4byte	.LFB77
 8410 006c 20000000 		.4byte	.LFE77
 8411 0070 00000000 		.4byte	.LFB78
 8412 0074 44010000 		.4byte	.LFE78
 8413 0078 00000000 		.4byte	.LFB79
 8414 007c 54010000 		.4byte	.LFE79
 8415 0080 00000000 		.4byte	0
 8416 0084 00000000 		.4byte	0
 8417              		.section	.debug_line,"",%progbits
 8418              	.Ldebug_line0:
 8419 0000 92070000 		.section	.debug_str,"MS",%progbits,1
 8419      02008401 
 8419      00000201 
 8419      FB0E0D00 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 179


 8419      01010101 
 8420              	.LASF75:
 8421 0000 64697265 		.ascii	"direction\000"
 8421      6374696F 
 8421      6E00
 8422              	.LASF49:
 8423 000a 6C617374 		.ascii	"last\000"
 8423      00
 8424              	.LASF110:
 8425 000f 6D616372 		.ascii	"macroCheck\000"
 8425      6F436865 
 8425      636B00
 8426              	.LASF94:
 8427 001a 6D656E75 		.ascii	"menuAction\000"
 8427      41637469 
 8427      6F6E00
 8428              	.LASF142:
 8429 0025 70726576 		.ascii	"prevOctave\000"
 8429      4F637461 
 8429      766500
 8430              	.LASF93:
 8431 0030 74656D70 		.ascii	"tempByte\000"
 8431      42797465 
 8431      00
 8432              	.LASF51:
 8433 0039 47465866 		.ascii	"GFXfont\000"
 8433      6F6E7400 
 8434              	.LASF161:
 8435 0041 65646974 		.ascii	"editUp\000"
 8435      557000
 8436              	.LASF105:
 8437 0048 656E7465 		.ascii	"enterEditModeMenu\000"
 8437      72456469 
 8437      744D6F64 
 8437      654D656E 
 8437      7500
 8438              	.LASF140:
 8439 005a 7472616E 		.ascii	"transposeFloat\000"
 8439      73706F73 
 8439      65466C6F 
 8439      617400
 8440              	.LASF96:
 8441 0069 74656D70 		.ascii	"tempPos\000"
 8441      506F7300 
 8442              	.LASF80:
 8443 0071 74656D70 		.ascii	"tempButtons\000"
 8443      42757474 
 8443      6F6E7300 
 8444              	.LASF99:
 8445 007d 646F776E 		.ascii	"downPressed\000"
 8445      50726573 
 8445      73656400 
 8446              	.LASF112:
 8447 0089 636F6E74 		.ascii	"controlCheck\000"
 8447      726F6C43 
 8447      6865636B 
 8447      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 180


 8448              	.LASF132:
 8449 0096 6C657665 		.ascii	"leverCalibrationMode\000"
 8449      7243616C 
 8449      69627261 
 8449      74696F6E 
 8449      4D6F6465 
 8450              	.LASF13:
 8451 00ab 756E7369 		.ascii	"unsigned int\000"
 8451      676E6564 
 8451      20696E74 
 8451      00
 8452              	.LASF145:
 8453 00b8 73747269 		.ascii	"stringRepresentation\000"
 8453      6E675265 
 8453      70726573 
 8453      656E7461 
 8453      74696F6E 
 8454              	.LASF62:
 8455 00cd 77726170 		.ascii	"wrap\000"
 8455      00
 8456              	.LASF8:
 8457 00d2 5F5F696E 		.ascii	"__int32_t\000"
 8457      7433325F 
 8457      7400
 8458              	.LASF167:
 8459 00dc 62757474 		.ascii	"button3Up\000"
 8459      6F6E3355 
 8459      7000
 8460              	.LASF123:
 8461 00e6 65646974 		.ascii	"editMode\000"
 8461      4D6F6465 
 8461      00
 8462              	.LASF183:
 8463 00ef 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8463      43313120 
 8463      352E342E 
 8463      31203230 
 8463      31363036 
 8464 0122 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 8464      20726576 
 8464      6973696F 
 8464      6E203233 
 8464      37373135 
 8465 0155 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8465      66756E63 
 8465      74696F6E 
 8465      2D736563 
 8465      74696F6E 
 8466              	.LASF127:
 8467 017d 70726573 		.ascii	"presetNamesArray\000"
 8467      65744E61 
 8467      6D657341 
 8467      72726179 
 8467      00
 8468              	.LASF179:
 8469 018e 6E756D43 		.ascii	"numCalibrationItems\000"
 8469      616C6962 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 181


 8469      72617469 
 8469      6F6E4974 
 8469      656D7300 
 8470              	.LASF104:
 8471 01a2 70656461 		.ascii	"pedal_inverted_byte\000"
 8471      6C5F696E 
 8471      76657274 
 8471      65645F62 
 8471      79746500 
 8472              	.LASF79:
 8473 01b6 456E7465 		.ascii	"Enter\000"
 8473      7200
 8474              	.LASF63:
 8475 01bc 5F637034 		.ascii	"_cp437\000"
 8475      333700
 8476              	.LASF121:
 8477 01c3 6E65636B 		.ascii	"neckByte\000"
 8477      42797465 
 8477      00
 8478              	.LASF37:
 8479 01cc 4669726D 		.ascii	"FirmwareUpdateMenu\000"
 8479      77617265 
 8479      55706461 
 8479      74654D65 
 8479      6E7500
 8480              	.LASF157:
 8481 01df 70726576 		.ascii	"prevEncoderVal\000"
 8481      456E636F 
 8481      64657256 
 8481      616C00
 8482              	.LASF175:
 8483 01ee 63616C69 		.ascii	"calibrationNames\000"
 8483      62726174 
 8483      696F6E4E 
 8483      616D6573 
 8483      00
 8484              	.LASF117:
 8485 01ff 63757272 		.ascii	"currentCopedent\000"
 8485      656E7443 
 8485      6F706564 
 8485      656E7400 
 8486              	.LASF56:
 8487 020f 726F7461 		.ascii	"rotation\000"
 8487      74696F6E 
 8487      00
 8488              	.LASF28:
 8489 0218 53657474 		.ascii	"SettingsMenu\000"
 8489      696E6773 
 8489      4D656E75 
 8489      00
 8490              	.LASF53:
 8491 0225 48454947 		.ascii	"HEIGHT\000"
 8491      485400
 8492              	.LASF14:
 8493 022c 696E7438 		.ascii	"int8_t\000"
 8493      5F7400
 8494              	.LASF86:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 182


 8495 0233 766F6C75 		.ascii	"volumeIntTemp\000"
 8495      6D65496E 
 8495      7454656D 
 8495      7000
 8496              	.LASF186:
 8497 0241 5F474658 		.ascii	"_GFX\000"
 8497      00
 8498              	.LASF20:
 8499 0246 666C6F61 		.ascii	"float\000"
 8499      7400
 8500              	.LASF58:
 8501 024c 63757273 		.ascii	"cursor_x\000"
 8501      6F725F78 
 8501      00
 8502              	.LASF57:
 8503 0255 63757273 		.ascii	"cursor_y\000"
 8503      6F725F79 
 8503      00
 8504              	.LASF87:
 8505 025e 64656164 		.ascii	"deadZoneTemp\000"
 8505      5A6F6E65 
 8505      54656D70 
 8505      00
 8506              	.LASF59:
 8507 026b 74657874 		.ascii	"textsize\000"
 8507      73697A65 
 8507      00
 8508              	.LASF16:
 8509 0274 696E7431 		.ascii	"int16_t\000"
 8509      365F7400 
 8510              	.LASF12:
 8511 027c 6C6F6E67 		.ascii	"long long unsigned int\000"
 8511      206C6F6E 
 8511      6720756E 
 8511      7369676E 
 8511      65642069 
 8512              	.LASF144:
 8513 0293 64656164 		.ascii	"deadZone\000"
 8513      5A6F6E65 
 8513      00
 8514              	.LASF180:
 8515 029c 6E756D53 		.ascii	"numSettingsItems\000"
 8515      65747469 
 8515      6E677349 
 8515      74656D73 
 8515      00
 8516              	.LASF50:
 8517 02ad 79416476 		.ascii	"yAdvance\000"
 8517      616E6365 
 8517      00
 8518              	.LASF6:
 8519 02b6 5F5F7569 		.ascii	"__uint16_t\000"
 8519      6E743136 
 8519      5F7400
 8520              	.LASF120:
 8521 02c1 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 8521      6F4F4C45 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 183


 8521      44576169 
 8521      74696E67 
 8521      546F5365 
 8522              	.LASF134:
 8523 02d8 70656461 		.ascii	"pedals_low\000"
 8523      6C735F6C 
 8523      6F7700
 8524              	.LASF146:
 8525 02e3 6F637461 		.ascii	"octaveAction\000"
 8525      76654163 
 8525      74696F6E 
 8525      00
 8526              	.LASF160:
 8527 02f0 73656D69 		.ascii	"semitonesOrCents\000"
 8527      746F6E65 
 8527      734F7243 
 8527      656E7473 
 8527      00
 8528              	.LASF76:
 8529 0301 4C656674 		.ascii	"Left\000"
 8529      00
 8530              	.LASF122:
 8531 0306 6E65636B 		.ascii	"necks\000"
 8531      7300
 8532              	.LASF124:
 8533 030c 6D616372 		.ascii	"macroNamesArray\000"
 8533      6F4E616D 
 8533      65734172 
 8533      72617900 
 8534              	.LASF68:
 8535 031c 5F4D656E 		.ascii	"_MenuModes\000"
 8535      754D6F64 
 8535      657300
 8536              	.LASF69:
 8537 0327 5F4F4C45 		.ascii	"_OLEDLine\000"
 8537      444C696E 
 8537      6500
 8538              	.LASF52:
 8539 0331 57494454 		.ascii	"WIDTH\000"
 8539      4800
 8540              	.LASF95:
 8541 0337 77686174 		.ascii	"whatToDraw\000"
 8541      546F4472 
 8541      617700
 8542              	.LASF107:
 8543 0342 65786974 		.ascii	"exitFretCalibrationMode\000"
 8543      46726574 
 8543      43616C69 
 8543      62726174 
 8543      696F6E4D 
 8544              	.LASF128:
 8545 035a 636F7065 		.ascii	"copedentNamesArray\000"
 8545      64656E74 
 8545      4E616D65 
 8545      73417272 
 8545      617900
 8546              	.LASF39:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 184


 8547 036d 6269746D 		.ascii	"bitmapOffset\000"
 8547      61704F66 
 8547      66736574 
 8547      00
 8548              	.LASF40:
 8549 037a 77696474 		.ascii	"width\000"
 8549      6800
 8550              	.LASF26:
 8551 0380 53746F72 		.ascii	"StorePresetMenu\000"
 8551      65507265 
 8551      7365744D 
 8551      656E7500 
 8552              	.LASF100:
 8553 0390 75705072 		.ascii	"upPressed\000"
 8553      65737365 
 8553      6400
 8554              	.LASF71:
 8555 039a 5365636F 		.ascii	"SecondLine\000"
 8555      6E644C69 
 8555      6E6500
 8556              	.LASF155:
 8557 03a5 74686547 		.ascii	"theGFX\000"
 8557      465800
 8558              	.LASF83:
 8559 03ac 63757272 		.ascii	"currentChar\000"
 8559      656E7443 
 8559      68617200 
 8560              	.LASF163:
 8561 03b8 6F637434 		.ascii	"oct4Up\000"
 8561      557000
 8562              	.LASF171:
 8563 03bf 77686963 		.ascii	"whichMidiSendSelected\000"
 8563      684D6964 
 8563      6953656E 
 8563      6453656C 
 8563      65637465 
 8564              	.LASF22:
 8565 03d5 63686172 		.ascii	"char\000"
 8565      00
 8566              	.LASF138:
 8567 03da 7472616E 		.ascii	"transposeSemitones\000"
 8567      73706F73 
 8567      6553656D 
 8567      69746F6E 
 8567      657300
 8568              	.LASF45:
 8569 03ed 47465867 		.ascii	"GFXglyph\000"
 8569      6C797068 
 8569      00
 8570              	.LASF181:
 8571 03f6 66726574 		.ascii	"fretToCalibrate\000"
 8571      546F4361 
 8571      6C696272 
 8571      61746500 
 8572              	.LASF135:
 8573 0406 70656461 		.ascii	"pedals_high\000"
 8573      6C735F68 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 185


 8573      69676800 
 8574              	.LASF119:
 8575 0412 766F6C75 		.ascii	"volumeWaitingToSend\000"
 8575      6D655761 
 8575      6974696E 
 8575      67546F53 
 8575      656E6400 
 8576              	.LASF148:
 8577 0426 6D696469 		.ascii	"midiBarSendOn\000"
 8577      42617253 
 8577      656E644F 
 8577      6E00
 8578              	.LASF72:
 8579 0434 54686972 		.ascii	"ThirdLine\000"
 8579      644C696E 
 8579      6500
 8580              	.LASF15:
 8581 043e 75696E74 		.ascii	"uint8_t\000"
 8581      385F7400 
 8582              	.LASF44:
 8583 0446 794F6666 		.ascii	"yOffset\000"
 8583      73657400 
 8584              	.LASF54:
 8585 044e 5F776964 		.ascii	"_width\000"
 8585      746800
 8586              	.LASF111:
 8587 0455 64697370 		.ascii	"displayCurrentControlNames\000"
 8587      6C617943 
 8587      75727265 
 8587      6E74436F 
 8587      6E74726F 
 8588              	.LASF152:
 8589 0470 70726573 		.ascii	"presetNumberToStore\000"
 8589      65744E75 
 8589      6D626572 
 8589      546F5374 
 8589      6F726500 
 8590              	.LASF133:
 8591 0484 66726574 		.ascii	"fretMeasurements\000"
 8591      4D656173 
 8591      7572656D 
 8591      656E7473 
 8591      00
 8592              	.LASF11:
 8593 0495 6C6F6E67 		.ascii	"long long int\000"
 8593      206C6F6E 
 8593      6720696E 
 8593      7400
 8594              	.LASF66:
 8595 04a3 666F6E74 		.ascii	"fontDesc\000"
 8595      44657363 
 8595      00
 8596              	.LASF172:
 8597 04ac 77686963 		.ascii	"whichFirmwareUpdateSelected\000"
 8597      68466972 
 8597      6D776172 
 8597      65557064 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 186


 8597      61746553 
 8598              	.LASF114:
 8599 04c8 4465636F 		.ascii	"Decoder_1_Enabled\000"
 8599      6465725F 
 8599      315F456E 
 8599      61626C65 
 8599      6400
 8600              	.LASF98:
 8601 04da 72696768 		.ascii	"rightPressed\000"
 8601      74507265 
 8601      73736564 
 8601      00
 8602              	.LASF154:
 8603 04e7 6E657750 		.ascii	"newPresetName\000"
 8603      72657365 
 8603      744E616D 
 8603      6500
 8604              	.LASF97:
 8605 04f5 6C656674 		.ascii	"leftPressed\000"
 8605      50726573 
 8605      73656400 
 8606              	.LASF73:
 8607 0501 466F7572 		.ascii	"FourthLine\000"
 8607      74684C69 
 8607      6E6500
 8608              	.LASF185:
 8609 050c 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 8609      73657273 
 8609      5C4A6566 
 8609      66536E79 
 8609      6465725C 
 8610 053a 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 8610      355F656C 
 8610      65637472 
 8610      6F737465 
 8610      656C5F73 
 8611 056c 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 8611      5F50534F 
 8611      43335F35 
 8611      5F546865 
 8611      726D6973 
 8612              	.LASF4:
 8613 058a 5F5F696E 		.ascii	"__int16_t\000"
 8613      7431365F 
 8613      7400
 8614              	.LASF151:
 8615 0594 70726576 		.ascii	"prevMacroKnobValues\000"
 8615      4D616372 
 8615      6F4B6E6F 
 8615      6256616C 
 8615      75657300 
 8616              	.LASF25:
 8617 05a8 4D61696E 		.ascii	"MainMenu\000"
 8617      4D656E75 
 8617      00
 8618              	.LASF55:
 8619 05b1 5F686569 		.ascii	"_height\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 187


 8619      67687400 
 8620              	.LASF101:
 8621 05b9 656E7465 		.ascii	"enterPressed\000"
 8621      72507265 
 8621      73736564 
 8621      00
 8622              	.LASF92:
 8623 05c6 65786974 		.ascii	"exitEditModeMenu\000"
 8623      45646974 
 8623      4D6F6465 
 8623      4D656E75 
 8623      00
 8624              	.LASF89:
 8625 05d7 736C6964 		.ascii	"sliderTemp\000"
 8625      65725465 
 8625      6D7000
 8626              	.LASF143:
 8627 05e2 6475616C 		.ascii	"dualSlider\000"
 8627      536C6964 
 8627      657200
 8628              	.LASF159:
 8629 05ed 6D656E75 		.ascii	"menuPosition\000"
 8629      506F7369 
 8629      74696F6E 
 8629      00
 8630              	.LASF165:
 8631 05fa 62757474 		.ascii	"button1Up\000"
 8631      6F6E3155 
 8631      7000
 8632              	.LASF147:
 8633 0604 6D696469 		.ascii	"midiSendOn\000"
 8633      53656E64 
 8633      4F6E00
 8634              	.LASF36:
 8635 060f 566F6C75 		.ascii	"VolumeMenu\000"
 8635      6D654D65 
 8635      6E7500
 8636              	.LASF41:
 8637 061a 68656967 		.ascii	"height\000"
 8637      687400
 8638              	.LASF88:
 8639 0621 64656164 		.ascii	"deadZoneRepresentation\000"
 8639      5A6F6E65 
 8639      52657072 
 8639      6573656E 
 8639      74617469 
 8640              	.LASF130:
 8641 0638 77686963 		.ascii	"whichMacro\000"
 8641      684D6163 
 8641      726F00
 8642              	.LASF170:
 8643 0643 65646974 		.ascii	"editingSliderRepString\000"
 8643      696E6753 
 8643      6C696465 
 8643      72526570 
 8643      53747269 
 8644              	.LASF84:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 188


 8645 065a 7468654D 		.ascii	"theMultiplier\000"
 8645      756C7469 
 8645      706C6965 
 8645      7200
 8646              	.LASF0:
 8647 0668 5F5F696E 		.ascii	"__int8_t\000"
 8647      74385F74 
 8647      00
 8648              	.LASF106:
 8649 0671 656E7465 		.ascii	"enterFretCalibrationMode\000"
 8649      72467265 
 8649      7443616C 
 8649      69627261 
 8649      74696F6E 
 8650              	.LASF23:
 8651 068a 6C6F6E67 		.ascii	"long double\000"
 8651      20646F75 
 8651      626C6500 
 8652              	.LASF103:
 8653 0696 65786974 		.ascii	"exitLeverCalibrationMode\000"
 8653      4C657665 
 8653      7243616C 
 8653      69627261 
 8653      74696F6E 
 8654              	.LASF17:
 8655 06af 75696E74 		.ascii	"uint16_t\000"
 8655      31365F74 
 8655      00
 8656              	.LASF168:
 8657 06b8 62757474 		.ascii	"button4Up\000"
 8657      6F6E3455 
 8657      7000
 8658              	.LASF164:
 8659 06c2 656E636F 		.ascii	"encoderUp\000"
 8659      64657255 
 8659      7000
 8660              	.LASF27:
 8661 06cc 43616C69 		.ascii	"CalibrationMenu\000"
 8661      62726174 
 8661      696F6E4D 
 8661      656E7500 
 8662              	.LASF81:
 8663 06dc 63757272 		.ascii	"currentEncoderVal\000"
 8663      656E7445 
 8663      6E636F64 
 8663      65725661 
 8663      6C00
 8664              	.LASF137:
 8665 06ee 616E676C 		.ascii	"angle\000"
 8665      6500
 8666              	.LASF169:
 8667 06f4 73686966 		.ascii	"shiftUp\000"
 8667      74557000 
 8668              	.LASF5:
 8669 06fc 73686F72 		.ascii	"short int\000"
 8669      7420696E 
 8669      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 189


 8670              	.LASF129:
 8671 0706 70726573 		.ascii	"presetAlreadyDisplayed\000"
 8671      6574416C 
 8671      72656164 
 8671      79446973 
 8671      706C6179 
 8672              	.LASF116:
 8673 071d 63757272 		.ascii	"currentNeck\000"
 8673      656E744E 
 8673      65636B00 
 8674              	.LASF9:
 8675 0729 6C6F6E67 		.ascii	"long int\000"
 8675      20696E74 
 8675      00
 8676              	.LASF126:
 8677 0732 70617463 		.ascii	"patchNum\000"
 8677      684E756D 
 8677      00
 8678              	.LASF113:
 8679 073b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8679      52784275 
 8679      66666572 
 8679      00
 8680              	.LASF74:
 8681 0748 4E696C4C 		.ascii	"NilLine\000"
 8681      696E6500 
 8682              	.LASF38:
 8683 0750 4E696C4D 		.ascii	"NilMenu\000"
 8683      656E7500 
 8684              	.LASF65:
 8685 0758 666F6E74 		.ascii	"fontHeight\000"
 8685      48656967 
 8685      687400
 8686              	.LASF153:
 8687 0763 73656E64 		.ascii	"sendLocalPresetStoreCommand\000"
 8687      4C6F6361 
 8687      6C507265 
 8687      73657453 
 8687      746F7265 
 8688              	.LASF136:
 8689 077f 70656461 		.ascii	"pedal_inverted\000"
 8689      6C5F696E 
 8689      76657274 
 8689      656400
 8690              	.LASF187:
 8691 078e 61637469 		.ascii	"action\000"
 8691      6F6E00
 8692              	.LASF184:
 8693 0795 75692E63 		.ascii	"ui.c\000"
 8693      00
 8694              	.LASF85:
 8695 079a 61627354 		.ascii	"absTransposeFloat\000"
 8695      72616E73 
 8695      706F7365 
 8695      466C6F61 
 8695      7400
 8696              	.LASF78:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 190


 8697 07ac 446F776E 		.ascii	"Down\000"
 8697      00
 8698              	.LASF77:
 8699 07b1 52696768 		.ascii	"Right\000"
 8699      7400
 8700              	.LASF1:
 8701 07b7 5F5F7569 		.ascii	"__uint8_t\000"
 8701      6E74385F 
 8701      7400
 8702              	.LASF156:
 8703 07c1 77686963 		.ascii	"whichMacroPageIsActive\000"
 8703      684D6163 
 8703      726F5061 
 8703      67654973 
 8703      41637469 
 8704              	.LASF64:
 8705 07d8 67667846 		.ascii	"gfxFont\000"
 8705      6F6E7400 
 8706              	.LASF174:
 8707 07e0 70726573 		.ascii	"presetStoreStage\000"
 8707      65745374 
 8707      6F726553 
 8707      74616765 
 8707      00
 8708              	.LASF24:
 8709 07f1 73697A65 		.ascii	"sizetype\000"
 8709      74797065 
 8709      00
 8710              	.LASF102:
 8711 07fa 656E7465 		.ascii	"enterLeverCalibrationMode\000"
 8711      724C6576 
 8711      65724361 
 8711      6C696272 
 8711      6174696F 
 8712              	.LASF125:
 8713 0814 636F6E74 		.ascii	"controlNamesArray\000"
 8713      726F6C4E 
 8713      616D6573 
 8713      41727261 
 8713      7900
 8714              	.LASF10:
 8715 0826 6C6F6E67 		.ascii	"long unsigned int\000"
 8715      20756E73 
 8715      69676E65 
 8715      6420696E 
 8715      7400
 8716              	.LASF30:
 8717 0838 43616C69 		.ascii	"CalibrateFretsMenu\000"
 8717      62726174 
 8717      65467265 
 8717      74734D65 
 8717      6E7500
 8718              	.LASF118:
 8719 084b 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 8719      4F4C4544 
 8719      57616974 
 8719      696E6754 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 191


 8719      6F53656E 
 8720              	.LASF176:
 8721 0861 6D61696E 		.ascii	"mainMenuNames\000"
 8721      4D656E75 
 8721      4E616D65 
 8721      7300
 8722              	.LASF18:
 8723 086f 696E7433 		.ascii	"int32_t\000"
 8723      325F7400 
 8724              	.LASF29:
 8725 0877 43616C69 		.ascii	"CalibrateLeversMenu\000"
 8725      62726174 
 8725      654C6576 
 8725      6572734D 
 8725      656E7500 
 8726              	.LASF47:
 8727 088b 676C7970 		.ascii	"glyph\000"
 8727      6800
 8728              	.LASF158:
 8729 0891 656E636F 		.ascii	"encoderWatch\000"
 8729      64657257 
 8729      61746368 
 8729      00
 8730              	.LASF82:
 8731 089e 70726573 		.ascii	"presetNumberToStoreTemp\000"
 8731      65744E75 
 8731      6D626572 
 8731      546F5374 
 8731      6F726554 
 8732              	.LASF141:
 8733 08b6 766F6C75 		.ascii	"volumeInt\000"
 8733      6D65496E 
 8733      7400
 8734              	.LASF3:
 8735 08c0 756E7369 		.ascii	"unsigned char\000"
 8735      676E6564 
 8735      20636861 
 8735      7200
 8736              	.LASF46:
 8737 08ce 6269746D 		.ascii	"bitmap\000"
 8737      617000
 8738              	.LASF70:
 8739 08d5 46697273 		.ascii	"FirstLine\000"
 8739      744C696E 
 8739      6500
 8740              	.LASF90:
 8741 08df 736C6964 		.ascii	"sliderRepDisplay\000"
 8741      65725265 
 8741      70446973 
 8741      706C6179 
 8741      00
 8742              	.LASF166:
 8743 08f0 62757474 		.ascii	"button2Up\000"
 8743      6F6E3255 
 8743      7000
 8744              	.LASF34:
 8745 08fa 536C6964 		.ascii	"SliderRepMenu\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 192


 8745      65725265 
 8745      704D656E 
 8745      7500
 8746              	.LASF32:
 8747 0908 4F637461 		.ascii	"OctaveActionMenu\000"
 8747      76654163 
 8747      74696F6E 
 8747      4D656E75 
 8747      00
 8748              	.LASF48:
 8749 0919 66697273 		.ascii	"first\000"
 8749      7400
 8750              	.LASF91:
 8751 091f 7363616E 		.ascii	"scanUI\000"
 8751      554900
 8752              	.LASF177:
 8753 0926 73657474 		.ascii	"settingsNames\000"
 8753      696E6773 
 8753      4E616D65 
 8753      7300
 8754              	.LASF162:
 8755 0934 6F637431 		.ascii	"oct1Up\000"
 8755      557000
 8756              	.LASF173:
 8757 093b 636F6E74 		.ascii	"controlsDisplayed\000"
 8757      726F6C73 
 8757      44697370 
 8757      6C617965 
 8757      6400
 8758              	.LASF42:
 8759 094d 78416476 		.ascii	"xAdvance\000"
 8759      616E6365 
 8759      00
 8760              	.LASF182:
 8761 0956 77686963 		.ascii	"whichFretArray\000"
 8761      68467265 
 8761      74417272 
 8761      617900
 8762              	.LASF33:
 8763 0965 44656164 		.ascii	"DeadzonesMenu\000"
 8763      7A6F6E65 
 8763      734D656E 
 8763      7500
 8764              	.LASF43:
 8765 0973 784F6666 		.ascii	"xOffset\000"
 8765      73657400 
 8766              	.LASF139:
 8767 097b 7472616E 		.ascii	"transposeCents\000"
 8767      73706F73 
 8767      6543656E 
 8767      747300
 8768              	.LASF35:
 8769 098a 4D696469 		.ascii	"MidiSendMenu\000"
 8769      53656E64 
 8769      4D656E75 
 8769      00
 8770              	.LASF67:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 193


 8771 0997 6175746F 		.ascii	"autoscroll\000"
 8771      7363726F 
 8771      6C6C00
 8772              	.LASF178:
 8773 09a2 6E756D4D 		.ascii	"numMainMenuItems\000"
 8773      61696E4D 
 8773      656E7549 
 8773      74656D73 
 8773      00
 8774              	.LASF2:
 8775 09b3 7369676E 		.ascii	"signed char\000"
 8775      65642063 
 8775      68617200 
 8776              	.LASF7:
 8777 09bf 73686F72 		.ascii	"short unsigned int\000"
 8777      7420756E 
 8777      7369676E 
 8777      65642069 
 8777      6E7400
 8778              	.LASF31:
 8779 09d2 5472616E 		.ascii	"TransposeMenu\000"
 8779      73706F73 
 8779      654D656E 
 8779      7500
 8780              	.LASF149:
 8781 09e0 73656E64 		.ascii	"sendFirmwareUpdateRequest\000"
 8781      4669726D 
 8781      77617265 
 8781      55706461 
 8781      74655265 
 8782              	.LASF108:
 8783 09fa 65786974 		.ascii	"exitPresetStoreMenu\000"
 8783      50726573 
 8783      65745374 
 8783      6F72654D 
 8783      656E7500 
 8784              	.LASF19:
 8785 0a0e 75696E74 		.ascii	"uint8\000"
 8785      3800
 8786              	.LASF21:
 8787 0a14 646F7562 		.ascii	"double\000"
 8787      6C6500
 8788              	.LASF60:
 8789 0a1b 74657874 		.ascii	"textcolor\000"
 8789      636F6C6F 
 8789      7200
 8790              	.LASF115:
 8791 0a25 6F637461 		.ascii	"octave\000"
 8791      766500
 8792              	.LASF131:
 8793 0a2c 66726574 		.ascii	"fretCalibrationMode\000"
 8793      43616C69 
 8793      62726174 
 8793      696F6E4D 
 8793      6F646500 
 8794              	.LASF61:
 8795 0a40 74657874 		.ascii	"textbgcolor\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc1KZKBe.s 			page 194


 8795      6267636F 
 8795      6C6F7200 
 8796              	.LASF150:
 8797 0a4c 6B6E6F62 		.ascii	"knobFrozen\000"
 8797      46726F7A 
 8797      656E00
 8798              	.LASF109:
 8799 0a57 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 8799      6C617943 
 8799      75727265 
 8799      6E745072 
 8799      65736574 
 8800              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
