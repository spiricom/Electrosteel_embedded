ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"gfx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.GFXinit,"ax",%progbits
  20              		.align	2
  21              		.global	GFXinit
  22              		.thumb
  23              		.thumb_func
  24              		.type	GFXinit, %function
  25              	GFXinit:
  26              	.LFB64:
  27              		.file 1 "gfx.c"
   1:gfx.c         **** /*
   2:gfx.c         ****  * gfx.c
   3:gfx.c         ****  *  a C port of the Adafruit GFX library
   4:gfx.c         ****  *  Created on: Jul 8, 2018
   5:gfx.c         ****  *      Author: jeffsnyder
   6:gfx.c         ****  */
   7:gfx.c         **** 
   8:gfx.c         **** 
   9:gfx.c         **** /*
  10:gfx.c         ****  This is the core graphics library for all our displays, providing a common
  11:gfx.c         ****  set of graphics primitives (points, lines, circles, etc.).  It needs to be
  12:gfx.c         ****  paired with a hardware-specific library for each display device we carry
  13:gfx.c         ****  (to handle the lower-level functions).
  14:gfx.c         ****  
  15:gfx.c         ****  Adafruit invests time and resources providing this open source code, please
  16:gfx.c         ****  support Adafruit & open-source hardware by purchasing products from Adafruit!
  17:gfx.c         ****  
  18:gfx.c         ****  Copyright (c) 2013 Adafruit Industries.  All rights reserved.
  19:gfx.c         ****  
  20:gfx.c         ****  Redistribution and use in source and binary forms, with or without
  21:gfx.c         ****  modification, are permitted provided that the following conditions are met:
  22:gfx.c         ****  
  23:gfx.c         ****  - Redistributions of source code must retain the above copyright notice,
  24:gfx.c         ****  this list of conditions and the following disclaimer.
  25:gfx.c         ****  - Redistributions in binary form must reproduce the above copyright notice,
  26:gfx.c         ****  this list of conditions and the following disclaimer in the documentation
  27:gfx.c         ****  and/or other materials provided with the distribution.
  28:gfx.c         ****  
  29:gfx.c         ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:gfx.c         ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 2


  31:gfx.c         ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  32:gfx.c         ****  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  33:gfx.c         ****  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  34:gfx.c         ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  35:gfx.c         ****  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  36:gfx.c         ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  37:gfx.c         ****  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  38:gfx.c         ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:gfx.c         ****  POSSIBILITY OF SUCH DAMAGE.
  40:gfx.c         ****  */
  41:gfx.c         **** 
  42:gfx.c         **** 
  43:gfx.c         **** #include "gfx.h"
  44:gfx.c         **** #include <stdint.h>
  45:gfx.c         **** 
  46:gfx.c         **** 
  47:gfx.c         ****         
  48:gfx.c         ****         // Many (but maybe not all) non-AVR board installs define macros
  49:gfx.c         ****         // for compatibility with existing PROGMEM-reading AVR code.
  50:gfx.c         ****         // Do our own checks and defines here for good measure...
  51:gfx.c         ****         
  52:gfx.c         **** #ifndef pgm_read_byte
  53:gfx.c         **** #define pgm_read_byte(addr) (*(const unsigned char *)(addr))
  54:gfx.c         **** #endif
  55:gfx.c         **** #ifndef pgm_read_word
  56:gfx.c         **** #define pgm_read_word(addr) (*(const unsigned short *)(addr))
  57:gfx.c         **** #endif
  58:gfx.c         **** #ifndef pgm_read_dword
  59:gfx.c         **** #define pgm_read_dword(addr) (*(const unsigned long long *)(addr))
  60:gfx.c         **** #endif
  61:gfx.c         ****         
  62:gfx.c         ****         // Pointers are a peculiar case...typically 16-bit on AVR boards,
  63:gfx.c         ****         // 32 bits elsewhere.  Try to accommodate both...
  64:gfx.c         ****         
  65:gfx.c         ****         
  66:gfx.c         **** #define pgm_read_pointer(addr) ((void *)pgm_read_dword(addr))
  67:gfx.c         ****         
  68:gfx.c         ****         
  69:gfx.c         **** #ifndef min
  70:gfx.c         **** #define min(a,b) (((a) < (b)) ? (a) : (b))
  71:gfx.c         **** #endif
  72:gfx.c         ****         
  73:gfx.c         **** #ifndef _swap_int16_t
  74:gfx.c         **** #define _swap_int16_t(a, b) { int16_t t = a; a = b; b = t; }
  75:gfx.c         **** #endif
  76:gfx.c         ****         
  77:gfx.c         ****         void GFXinit(GFX* myGfx, int16_t w, int16_t h)
  78:gfx.c         ****         {
  28              		.loc 1 78 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 3


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 0B46     		mov	r3, r1
  42 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  43 000c 1346     		mov	r3, r2	@ movhi
  44 000e 3B80     		strh	r3, [r7]	@ movhi
  79:gfx.c         ****             myGfx->WIDTH = w;
  45              		.loc 1 79 0
  46 0010 7B68     		ldr	r3, [r7, #4]
  47 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
  48 0014 1A80     		strh	r2, [r3]	@ movhi
  80:gfx.c         ****             myGfx->HEIGHT = h;
  49              		.loc 1 80 0
  50 0016 7B68     		ldr	r3, [r7, #4]
  51 0018 3A88     		ldrh	r2, [r7]	@ movhi
  52 001a 5A80     		strh	r2, [r3, #2]	@ movhi
  81:gfx.c         ****             myGfx->_width    = w;
  53              		.loc 1 81 0
  54 001c 7A88     		ldrh	r2, [r7, #2]
  55 001e 7B68     		ldr	r3, [r7, #4]
  56 0020 9A80     		strh	r2, [r3, #4]	@ movhi
  82:gfx.c         ****             myGfx->_height   = h;
  57              		.loc 1 82 0
  58 0022 3A88     		ldrh	r2, [r7]
  59 0024 7B68     		ldr	r3, [r7, #4]
  60 0026 DA80     		strh	r2, [r3, #6]	@ movhi
  83:gfx.c         ****             myGfx->rotation  = 0;
  61              		.loc 1 83 0
  62 0028 7B68     		ldr	r3, [r7, #4]
  63 002a 0022     		movs	r2, #0
  64 002c 1A81     		strh	r2, [r3, #8]	@ movhi
  84:gfx.c         ****             myGfx->cursor_y  = 0;
  65              		.loc 1 84 0
  66 002e 7B68     		ldr	r3, [r7, #4]
  67 0030 0022     		movs	r2, #0
  68 0032 5A81     		strh	r2, [r3, #10]	@ movhi
  85:gfx.c         ****             myGfx->cursor_x = 0;
  69              		.loc 1 85 0
  70 0034 7B68     		ldr	r3, [r7, #4]
  71 0036 0022     		movs	r2, #0
  72 0038 9A81     		strh	r2, [r3, #12]	@ movhi
  86:gfx.c         ****             myGfx->textsize  = 1;
  73              		.loc 1 86 0
  74 003a 7B68     		ldr	r3, [r7, #4]
  75 003c 0122     		movs	r2, #1
  76 003e DA81     		strh	r2, [r3, #14]	@ movhi
  87:gfx.c         ****             myGfx->textcolor = 0xFFFF;
  77              		.loc 1 87 0
  78 0040 7B68     		ldr	r3, [r7, #4]
  79 0042 4FF6FF72 		movw	r2, #65535
  80 0046 1A82     		strh	r2, [r3, #16]	@ movhi
  88:gfx.c         ****             myGfx->textbgcolor = 0xFFFF;
  81              		.loc 1 88 0
  82 0048 7B68     		ldr	r3, [r7, #4]
  83 004a 4FF6FF72 		movw	r2, #65535
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 4


  84 004e 5A82     		strh	r2, [r3, #18]	@ movhi
  89:gfx.c         ****             myGfx->wrap      = 1;
  85              		.loc 1 89 0
  86 0050 7B68     		ldr	r3, [r7, #4]
  87 0052 0122     		movs	r2, #1
  88 0054 9A82     		strh	r2, [r3, #20]	@ movhi
  90:gfx.c         ****             myGfx->_cp437    = 0;
  89              		.loc 1 90 0
  90 0056 7B68     		ldr	r3, [r7, #4]
  91 0058 0022     		movs	r2, #0
  92 005a DA82     		strh	r2, [r3, #22]	@ movhi
  91:gfx.c         ****             myGfx->gfxFont   = NULL;
  93              		.loc 1 91 0
  94 005c 7B68     		ldr	r3, [r7, #4]
  95 005e 0022     		movs	r2, #0
  96 0060 9A61     		str	r2, [r3, #24]
  92:gfx.c         ****             myGfx->rotation = 0;
  97              		.loc 1 92 0
  98 0062 7B68     		ldr	r3, [r7, #4]
  99 0064 0022     		movs	r2, #0
 100 0066 1A81     		strh	r2, [r3, #8]	@ movhi
  93:gfx.c         ****             myGfx->fontDesc = 0;
 101              		.loc 1 93 0
 102 0068 7B68     		ldr	r3, [r7, #4]
 103 006a 0022     		movs	r2, #0
 104 006c DA83     		strh	r2, [r3, #30]	@ movhi
  94:gfx.c         ****             myGfx->fontHeight = 8;
 105              		.loc 1 94 0
 106 006e 7B68     		ldr	r3, [r7, #4]
 107 0070 0822     		movs	r2, #8
 108 0072 9A83     		strh	r2, [r3, #28]	@ movhi
  95:gfx.c         ****         }
 109              		.loc 1 95 0
 110 0074 00BF     		nop
 111 0076 0C37     		adds	r7, r7, #12
 112              		.cfi_def_cfa_offset 4
 113 0078 BD46     		mov	sp, r7
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 007a 80BC     		pop	{r7}
 117              		.cfi_restore 7
 118              		.cfi_def_cfa_offset 0
 119 007c 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE64:
 122              		.size	GFXinit, .-GFXinit
 123 007e 00BF     		.section	.text.GFXwriteLine,"ax",%progbits
 124              		.align	2
 125              		.global	GFXwriteLine
 126              		.thumb
 127              		.thumb_func
 128              		.type	GFXwriteLine, %function
 129              	GFXwriteLine:
 130              	.LFB65:
  96:gfx.c         ****         
  97:gfx.c         ****         // Bresenham's algorithm - thx wikpedia
  98:gfx.c         ****         void GFXwriteLine(GFX* myGFX, int16_t x0, int16_t y0, int16_t x1, int16_t y1,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 5


  99:gfx.c         ****                           uint16_t color) {
 131              		.loc 1 99 0
 132              		.cfi_startproc
 133              		@ args = 8, pretend = 0, frame = 40
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 8AB0     		sub	sp, sp, #40
 140              		.cfi_def_cfa_offset 48
 141 0004 00AF     		add	r7, sp, #0
 142              		.cfi_def_cfa_register 7
 143 0006 F860     		str	r0, [r7, #12]
 144 0008 0846     		mov	r0, r1
 145 000a 1146     		mov	r1, r2
 146 000c 1A46     		mov	r2, r3
 147 000e 0346     		mov	r3, r0	@ movhi
 148 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 149 0012 0B46     		mov	r3, r1	@ movhi
 150 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 151 0016 1346     		mov	r3, r2	@ movhi
 152 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 100:gfx.c         ****             int16_t steep = abs(y1 - y0) > abs(x1 - x0);
 153              		.loc 1 100 0
 154 001a B7F93020 		ldrsh	r2, [r7, #48]
 155 001e B7F90830 		ldrsh	r3, [r7, #8]
 156 0022 D31A     		subs	r3, r2, r3
 157 0024 83EAE372 		eor	r2, r3, r3, asr #31
 158 0028 A2EBE372 		sub	r2, r2, r3, asr #31
 159 002c B7F90610 		ldrsh	r1, [r7, #6]
 160 0030 B7F90A30 		ldrsh	r3, [r7, #10]
 161 0034 CB1A     		subs	r3, r1, r3
 162 0036 002B     		cmp	r3, #0
 163 0038 B8BF     		it	lt
 164 003a 5B42     		rsblt	r3, r3, #0
 165 003c 9A42     		cmp	r2, r3
 166 003e CCBF     		ite	gt
 167 0040 0123     		movgt	r3, #1
 168 0042 0023     		movle	r3, #0
 169 0044 DBB2     		uxtb	r3, r3
 170 0046 7B84     		strh	r3, [r7, #34]	@ movhi
 101:gfx.c         ****             if (steep) {
 171              		.loc 1 101 0
 172 0048 B7F92230 		ldrsh	r3, [r7, #34]
 173 004c 002B     		cmp	r3, #0
 174 004e 0BD0     		beq	.L3
 175              	.LBB2:
 102:gfx.c         ****                 _swap_int16_t(x0, y0);
 176              		.loc 1 102 0
 177 0050 7B89     		ldrh	r3, [r7, #10]	@ movhi
 178 0052 3B84     		strh	r3, [r7, #32]	@ movhi
 179 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 180 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 181 0058 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 182 005a 3B81     		strh	r3, [r7, #8]	@ movhi
 183              	.LBE2:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 6


 184              	.LBB3:
 103:gfx.c         ****                 _swap_int16_t(x1, y1);
 185              		.loc 1 103 0
 186 005c FB88     		ldrh	r3, [r7, #6]	@ movhi
 187 005e FB83     		strh	r3, [r7, #30]	@ movhi
 188 0060 3B8E     		ldrh	r3, [r7, #48]	@ movhi
 189 0062 FB80     		strh	r3, [r7, #6]	@ movhi
 190 0064 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 191 0066 3B86     		strh	r3, [r7, #48]	@ movhi
 192              	.L3:
 193              	.LBE3:
 104:gfx.c         ****             }
 105:gfx.c         ****             
 106:gfx.c         ****             if (x0 > x1) {
 194              		.loc 1 106 0
 195 0068 B7F90A20 		ldrsh	r2, [r7, #10]
 196 006c B7F90630 		ldrsh	r3, [r7, #6]
 197 0070 9A42     		cmp	r2, r3
 198 0072 0BDD     		ble	.L4
 199              	.LBB4:
 107:gfx.c         ****                 _swap_int16_t(x0, x1);
 200              		.loc 1 107 0
 201 0074 7B89     		ldrh	r3, [r7, #10]	@ movhi
 202 0076 BB83     		strh	r3, [r7, #28]	@ movhi
 203 0078 FB88     		ldrh	r3, [r7, #6]	@ movhi
 204 007a 7B81     		strh	r3, [r7, #10]	@ movhi
 205 007c BB8B     		ldrh	r3, [r7, #28]	@ movhi
 206 007e FB80     		strh	r3, [r7, #6]	@ movhi
 207              	.LBE4:
 208              	.LBB5:
 108:gfx.c         ****                 _swap_int16_t(y0, y1);
 209              		.loc 1 108 0
 210 0080 3B89     		ldrh	r3, [r7, #8]	@ movhi
 211 0082 7B83     		strh	r3, [r7, #26]	@ movhi
 212 0084 3B8E     		ldrh	r3, [r7, #48]	@ movhi
 213 0086 3B81     		strh	r3, [r7, #8]	@ movhi
 214 0088 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 215 008a 3B86     		strh	r3, [r7, #48]	@ movhi
 216              	.L4:
 217              	.LBE5:
 109:gfx.c         ****             }
 110:gfx.c         ****             
 111:gfx.c         ****             int16_t dx, dy;
 112:gfx.c         ****             dx = x1 - x0;
 218              		.loc 1 112 0
 219 008c FA88     		ldrh	r2, [r7, #6]
 220 008e 7B89     		ldrh	r3, [r7, #10]
 221 0090 D31A     		subs	r3, r2, r3
 222 0092 9BB2     		uxth	r3, r3
 223 0094 3B83     		strh	r3, [r7, #24]	@ movhi
 113:gfx.c         ****             dy = abs(y1 - y0);
 224              		.loc 1 113 0
 225 0096 B7F93020 		ldrsh	r2, [r7, #48]
 226 009a B7F90830 		ldrsh	r3, [r7, #8]
 227 009e D31A     		subs	r3, r2, r3
 228 00a0 002B     		cmp	r3, #0
 229 00a2 B8BF     		it	lt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 7


 230 00a4 5B42     		rsblt	r3, r3, #0
 231 00a6 FB82     		strh	r3, [r7, #22]	@ movhi
 114:gfx.c         ****             
 115:gfx.c         ****             int16_t err = dx / 2;
 232              		.loc 1 115 0
 233 00a8 B7F91830 		ldrsh	r3, [r7, #24]
 234 00ac DA0F     		lsrs	r2, r3, #31
 235 00ae 1344     		add	r3, r3, r2
 236 00b0 5B10     		asrs	r3, r3, #1
 237 00b2 FB84     		strh	r3, [r7, #38]	@ movhi
 116:gfx.c         ****             int16_t ystep;
 117:gfx.c         ****             
 118:gfx.c         ****             if (y0 < y1) {
 238              		.loc 1 118 0
 239 00b4 B7F90820 		ldrsh	r2, [r7, #8]
 240 00b8 B7F93030 		ldrsh	r3, [r7, #48]
 241 00bc 9A42     		cmp	r2, r3
 242 00be 02DA     		bge	.L5
 119:gfx.c         ****                 ystep = 1;
 243              		.loc 1 119 0
 244 00c0 0123     		movs	r3, #1
 245 00c2 BB84     		strh	r3, [r7, #36]	@ movhi
 246 00c4 31E0     		b	.L7
 247              	.L5:
 120:gfx.c         ****             } else {
 121:gfx.c         ****                 ystep = -1;
 248              		.loc 1 121 0
 249 00c6 4FF6FF73 		movw	r3, #65535
 250 00ca BB84     		strh	r3, [r7, #36]	@ movhi
 122:gfx.c         ****             }
 123:gfx.c         ****             
 124:gfx.c         ****             for (; x0<=x1; x0++) {
 251              		.loc 1 124 0
 252 00cc 2DE0     		b	.L7
 253              	.L11:
 125:gfx.c         ****                 if (steep) {
 254              		.loc 1 125 0
 255 00ce B7F92230 		ldrsh	r3, [r7, #34]
 256 00d2 002B     		cmp	r3, #0
 257 00d4 08D0     		beq	.L8
 126:gfx.c         ****                     GFXwritePixel(myGFX, y0, x0, color);
 258              		.loc 1 126 0
 259 00d6 BB8E     		ldrh	r3, [r7, #52]
 260 00d8 B7F90A20 		ldrsh	r2, [r7, #10]
 261 00dc B7F90810 		ldrsh	r1, [r7, #8]
 262 00e0 F868     		ldr	r0, [r7, #12]
 263 00e2 FFF7FEFF 		bl	GFXwritePixel
 264 00e6 07E0     		b	.L9
 265              	.L8:
 127:gfx.c         ****                 } else {
 128:gfx.c         ****                     GFXwritePixel(myGFX, x0, y0, color);
 266              		.loc 1 128 0
 267 00e8 BB8E     		ldrh	r3, [r7, #52]
 268 00ea B7F90820 		ldrsh	r2, [r7, #8]
 269 00ee B7F90A10 		ldrsh	r1, [r7, #10]
 270 00f2 F868     		ldr	r0, [r7, #12]
 271 00f4 FFF7FEFF 		bl	GFXwritePixel
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 8


 272              	.L9:
 129:gfx.c         ****                 }
 130:gfx.c         ****                 err -= dy;
 273              		.loc 1 130 0
 274 00f8 FA8C     		ldrh	r2, [r7, #38]
 275 00fa FB8A     		ldrh	r3, [r7, #22]
 276 00fc D31A     		subs	r3, r2, r3
 277 00fe 9BB2     		uxth	r3, r3
 278 0100 FB84     		strh	r3, [r7, #38]	@ movhi
 131:gfx.c         ****                 if (err < 0) {
 279              		.loc 1 131 0
 280 0102 B7F92630 		ldrsh	r3, [r7, #38]
 281 0106 002B     		cmp	r3, #0
 282 0108 09DA     		bge	.L10
 132:gfx.c         ****                     y0 += ystep;
 283              		.loc 1 132 0
 284 010a 3A89     		ldrh	r2, [r7, #8]
 285 010c BB8C     		ldrh	r3, [r7, #36]
 286 010e 1344     		add	r3, r3, r2
 287 0110 9BB2     		uxth	r3, r3
 288 0112 3B81     		strh	r3, [r7, #8]	@ movhi
 133:gfx.c         ****                     err += dx;
 289              		.loc 1 133 0
 290 0114 FA8C     		ldrh	r2, [r7, #38]
 291 0116 3B8B     		ldrh	r3, [r7, #24]
 292 0118 1344     		add	r3, r3, r2
 293 011a 9BB2     		uxth	r3, r3
 294 011c FB84     		strh	r3, [r7, #38]	@ movhi
 295              	.L10:
 124:gfx.c         ****                 if (steep) {
 296              		.loc 1 124 0
 297 011e B7F90A30 		ldrsh	r3, [r7, #10]
 298 0122 9BB2     		uxth	r3, r3
 299 0124 0133     		adds	r3, r3, #1
 300 0126 9BB2     		uxth	r3, r3
 301 0128 7B81     		strh	r3, [r7, #10]	@ movhi
 302              	.L7:
 124:gfx.c         ****                 if (steep) {
 303              		.loc 1 124 0 is_stmt 0 discriminator 1
 304 012a B7F90A20 		ldrsh	r2, [r7, #10]
 305 012e B7F90630 		ldrsh	r3, [r7, #6]
 306 0132 9A42     		cmp	r2, r3
 307 0134 CBDD     		ble	.L11
 134:gfx.c         ****                 }
 135:gfx.c         ****             }
 136:gfx.c         ****         }
 308              		.loc 1 136 0 is_stmt 1
 309 0136 00BF     		nop
 310 0138 2837     		adds	r7, r7, #40
 311              		.cfi_def_cfa_offset 8
 312 013a BD46     		mov	sp, r7
 313              		.cfi_def_cfa_register 13
 314              		@ sp needed
 315 013c 80BD     		pop	{r7, pc}
 316              		.cfi_endproc
 317              	.LFE65:
 318              		.size	GFXwriteLine, .-GFXwriteLine
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 9


 319 013e 00BF     		.section	.text.GFXstartWrite,"ax",%progbits
 320              		.align	2
 321              		.global	GFXstartWrite
 322              		.thumb
 323              		.thumb_func
 324              		.type	GFXstartWrite, %function
 325              	GFXstartWrite:
 326              	.LFB66:
 137:gfx.c         ****         
 138:gfx.c         ****         void GFXstartWrite(GFX* myGFX){
 327              		.loc 1 138 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 8
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 332 0000 80B4     		push	{r7}
 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 7, -4
 335 0002 83B0     		sub	sp, sp, #12
 336              		.cfi_def_cfa_offset 16
 337 0004 00AF     		add	r7, sp, #0
 338              		.cfi_def_cfa_register 7
 339 0006 7860     		str	r0, [r7, #4]
 139:gfx.c         ****             // Overwrite in subclasses if desired!
 140:gfx.c         ****         }
 340              		.loc 1 140 0
 341 0008 00BF     		nop
 342 000a 0C37     		adds	r7, r7, #12
 343              		.cfi_def_cfa_offset 4
 344 000c BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 000e 80BC     		pop	{r7}
 348              		.cfi_restore 7
 349              		.cfi_def_cfa_offset 0
 350 0010 7047     		bx	lr
 351              		.cfi_endproc
 352              	.LFE66:
 353              		.size	GFXstartWrite, .-GFXstartWrite
 354 0012 00BF     		.section	.text.GFXdrawPixel,"ax",%progbits
 355              		.align	2
 356              		.global	GFXdrawPixel
 357              		.thumb
 358              		.thumb_func
 359              		.type	GFXdrawPixel, %function
 360              	GFXdrawPixel:
 361              	.LFB67:
 141:gfx.c         ****         
 142:gfx.c         ****         // the most basic function, set a single pixel
 143:gfx.c         ****         void GFXdrawPixel(GFX* myGFX, int16_t x, int16_t y, uint16_t color) {
 362              		.loc 1 143 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 24
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366 0000 80B5     		push	{r7, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 10


 369              		.cfi_offset 14, -4
 370 0002 86B0     		sub	sp, sp, #24
 371              		.cfi_def_cfa_offset 32
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 F860     		str	r0, [r7, #12]
 375 0008 0846     		mov	r0, r1
 376 000a 1146     		mov	r1, r2
 377 000c 1A46     		mov	r2, r3
 378 000e 0346     		mov	r3, r0	@ movhi
 379 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 380 0012 0B46     		mov	r3, r1	@ movhi
 381 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 382 0016 1346     		mov	r3, r2	@ movhi
 383 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 144:gfx.c         ****             if ((x < 0) || (x >= myGFX->_width) || (y < 0) || (y >= myGFX->_height))
 384              		.loc 1 144 0
 385 001a B7F90A30 		ldrsh	r3, [r7, #10]
 386 001e 002B     		cmp	r3, #0
 387 0020 C0F2D780 		blt	.L27
 388              		.loc 1 144 0 is_stmt 0 discriminator 1
 389 0024 B7F90A30 		ldrsh	r3, [r7, #10]
 390 0028 FA68     		ldr	r2, [r7, #12]
 391 002a 9288     		ldrh	r2, [r2, #4]
 392 002c 9342     		cmp	r3, r2
 393 002e 80F2D080 		bge	.L27
 394              		.loc 1 144 0 discriminator 2
 395 0032 B7F90830 		ldrsh	r3, [r7, #8]
 396 0036 002B     		cmp	r3, #0
 397 0038 C0F2CB80 		blt	.L27
 398              		.loc 1 144 0 discriminator 3
 399 003c B7F90830 		ldrsh	r3, [r7, #8]
 400 0040 FA68     		ldr	r2, [r7, #12]
 401 0042 D288     		ldrh	r2, [r2, #6]
 402 0044 9342     		cmp	r3, r2
 403 0046 80F2C480 		bge	.L27
 145:gfx.c         ****                 return;
 146:gfx.c         ****             
 147:gfx.c         ****             // check rotation, move pixel around if necessary
 148:gfx.c         ****             switch (GFXgetRotation(myGFX)) {
 404              		.loc 1 148 0 is_stmt 1
 405 004a F868     		ldr	r0, [r7, #12]
 406 004c FFF7FEFF 		bl	GFXgetRotation
 407 0050 0346     		mov	r3, r0
 408 0052 022B     		cmp	r3, #2
 409 0054 14D0     		beq	.L18
 410 0056 032B     		cmp	r3, #3
 411 0058 27D0     		beq	.L19
 412 005a 012B     		cmp	r3, #1
 413 005c 36D1     		bne	.L17
 414              	.LBB6:
 149:gfx.c         ****                 case 1:
 150:gfx.c         ****                     _swap_int16_t(x, y);
 415              		.loc 1 150 0
 416 005e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 417 0060 FB82     		strh	r3, [r7, #22]	@ movhi
 418 0062 3B89     		ldrh	r3, [r7, #8]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 11


 419 0064 7B81     		strh	r3, [r7, #10]	@ movhi
 420 0066 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 421 0068 3B81     		strh	r3, [r7, #8]	@ movhi
 422              	.LBE6:
 151:gfx.c         ****                     x = myGFX->WIDTH - x - 1;
 423              		.loc 1 151 0
 424 006a FB68     		ldr	r3, [r7, #12]
 425 006c B3F90030 		ldrsh	r3, [r3]
 426 0070 9AB2     		uxth	r2, r3
 427 0072 7B89     		ldrh	r3, [r7, #10]
 428 0074 D31A     		subs	r3, r2, r3
 429 0076 9BB2     		uxth	r3, r3
 430 0078 013B     		subs	r3, r3, #1
 431 007a 9BB2     		uxth	r3, r3
 432 007c 7B81     		strh	r3, [r7, #10]	@ movhi
 152:gfx.c         ****                     break;
 433              		.loc 1 152 0
 434 007e 25E0     		b	.L17
 435              	.L18:
 153:gfx.c         ****                 case 2:
 154:gfx.c         ****                     x = myGFX->WIDTH - x - 1;
 436              		.loc 1 154 0
 437 0080 FB68     		ldr	r3, [r7, #12]
 438 0082 B3F90030 		ldrsh	r3, [r3]
 439 0086 9AB2     		uxth	r2, r3
 440 0088 7B89     		ldrh	r3, [r7, #10]
 441 008a D31A     		subs	r3, r2, r3
 442 008c 9BB2     		uxth	r3, r3
 443 008e 013B     		subs	r3, r3, #1
 444 0090 9BB2     		uxth	r3, r3
 445 0092 7B81     		strh	r3, [r7, #10]	@ movhi
 155:gfx.c         ****                     y = myGFX->HEIGHT - y - 1;
 446              		.loc 1 155 0
 447 0094 FB68     		ldr	r3, [r7, #12]
 448 0096 B3F90230 		ldrsh	r3, [r3, #2]
 449 009a 9AB2     		uxth	r2, r3
 450 009c 3B89     		ldrh	r3, [r7, #8]
 451 009e D31A     		subs	r3, r2, r3
 452 00a0 9BB2     		uxth	r3, r3
 453 00a2 013B     		subs	r3, r3, #1
 454 00a4 9BB2     		uxth	r3, r3
 455 00a6 3B81     		strh	r3, [r7, #8]	@ movhi
 156:gfx.c         ****                     break;
 456              		.loc 1 156 0
 457 00a8 10E0     		b	.L17
 458              	.L19:
 459              	.LBB7:
 157:gfx.c         ****                 case 3:
 158:gfx.c         ****                     _swap_int16_t(x, y);
 460              		.loc 1 158 0
 461 00aa 7B89     		ldrh	r3, [r7, #10]	@ movhi
 462 00ac BB82     		strh	r3, [r7, #20]	@ movhi
 463 00ae 3B89     		ldrh	r3, [r7, #8]	@ movhi
 464 00b0 7B81     		strh	r3, [r7, #10]	@ movhi
 465 00b2 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 466 00b4 3B81     		strh	r3, [r7, #8]	@ movhi
 467              	.LBE7:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 12


 159:gfx.c         ****                     y = myGFX->HEIGHT - y - 1;
 468              		.loc 1 159 0
 469 00b6 FB68     		ldr	r3, [r7, #12]
 470 00b8 B3F90230 		ldrsh	r3, [r3, #2]
 471 00bc 9AB2     		uxth	r2, r3
 472 00be 3B89     		ldrh	r3, [r7, #8]
 473 00c0 D31A     		subs	r3, r2, r3
 474 00c2 9BB2     		uxth	r3, r3
 475 00c4 013B     		subs	r3, r3, #1
 476 00c6 9BB2     		uxth	r3, r3
 477 00c8 3B81     		strh	r3, [r7, #8]	@ movhi
 160:gfx.c         ****                     break;
 478              		.loc 1 160 0
 479 00ca 00BF     		nop
 480              	.L17:
 161:gfx.c         ****             }
 162:gfx.c         ****             
 163:gfx.c         ****             // x is which column
 164:gfx.c         ****             switch (color)
 481              		.loc 1 164 0
 482 00cc FB88     		ldrh	r3, [r7, #6]
 483 00ce 012B     		cmp	r3, #1
 484 00d0 04D0     		beq	.L21
 485 00d2 022B     		cmp	r3, #2
 486 00d4 54D0     		beq	.L22
 487 00d6 002B     		cmp	r3, #0
 488 00d8 28D0     		beq	.L23
 489 00da 7BE0     		b	.L13
 490              	.L21:
 165:gfx.c         ****             {
 166:gfx.c         ****                 case WHITE:   buffer[x+ (y/8)*myGFX->WIDTH] |=  (1 << (y&7)); break;
 491              		.loc 1 166 0
 492 00dc B7F90A20 		ldrsh	r2, [r7, #10]
 493 00e0 B7F90830 		ldrsh	r3, [r7, #8]
 494 00e4 002B     		cmp	r3, #0
 495 00e6 00DA     		bge	.L24
 496 00e8 0733     		adds	r3, r3, #7
 497              	.L24:
 498 00ea DB10     		asrs	r3, r3, #3
 499 00ec 18B2     		sxth	r0, r3
 500 00ee 0146     		mov	r1, r0
 501 00f0 FB68     		ldr	r3, [r7, #12]
 502 00f2 B3F90030 		ldrsh	r3, [r3]
 503 00f6 03FB01F3 		mul	r3, r3, r1
 504 00fa 1344     		add	r3, r3, r2
 505 00fc B7F90A10 		ldrsh	r1, [r7, #10]
 506 0100 FA68     		ldr	r2, [r7, #12]
 507 0102 B2F90020 		ldrsh	r2, [r2]
 508 0106 02FB00F2 		mul	r2, r2, r0
 509 010a 0A44     		add	r2, r2, r1
 510 010c 3349     		ldr	r1, .L28
 511 010e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 512 0110 51B2     		sxtb	r1, r2
 513 0112 3A89     		ldrh	r2, [r7, #8]
 514 0114 02F00702 		and	r2, r2, #7
 515 0118 0120     		movs	r0, #1
 516 011a 00FA02F2 		lsl	r2, r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 13


 517 011e 52B2     		sxtb	r2, r2
 518 0120 0A43     		orrs	r2, r2, r1
 519 0122 52B2     		sxtb	r2, r2
 520 0124 D1B2     		uxtb	r1, r2
 521 0126 2D4A     		ldr	r2, .L28
 522 0128 D154     		strb	r1, [r2, r3]
 523 012a 53E0     		b	.L13
 524              	.L23:
 167:gfx.c         ****                 case BLACK:   buffer[x+ (y/8)*myGFX->WIDTH] &= ~(1 << (y&7)); break;
 525              		.loc 1 167 0
 526 012c B7F90A20 		ldrsh	r2, [r7, #10]
 527 0130 B7F90830 		ldrsh	r3, [r7, #8]
 528 0134 002B     		cmp	r3, #0
 529 0136 00DA     		bge	.L25
 530 0138 0733     		adds	r3, r3, #7
 531              	.L25:
 532 013a DB10     		asrs	r3, r3, #3
 533 013c 18B2     		sxth	r0, r3
 534 013e 0146     		mov	r1, r0
 535 0140 FB68     		ldr	r3, [r7, #12]
 536 0142 B3F90030 		ldrsh	r3, [r3]
 537 0146 03FB01F3 		mul	r3, r3, r1
 538 014a 1344     		add	r3, r3, r2
 539 014c B7F90A10 		ldrsh	r1, [r7, #10]
 540 0150 FA68     		ldr	r2, [r7, #12]
 541 0152 B2F90020 		ldrsh	r2, [r2]
 542 0156 02FB00F2 		mul	r2, r2, r0
 543 015a 0A44     		add	r2, r2, r1
 544 015c 1F49     		ldr	r1, .L28
 545 015e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 546 0160 51B2     		sxtb	r1, r2
 547 0162 3A89     		ldrh	r2, [r7, #8]
 548 0164 02F00702 		and	r2, r2, #7
 549 0168 0120     		movs	r0, #1
 550 016a 00FA02F2 		lsl	r2, r0, r2
 551 016e 52B2     		sxtb	r2, r2
 552 0170 D243     		mvns	r2, r2
 553 0172 52B2     		sxtb	r2, r2
 554 0174 0A40     		ands	r2, r2, r1
 555 0176 52B2     		sxtb	r2, r2
 556 0178 D1B2     		uxtb	r1, r2
 557 017a 184A     		ldr	r2, .L28
 558 017c D154     		strb	r1, [r2, r3]
 559 017e 29E0     		b	.L13
 560              	.L22:
 168:gfx.c         ****                 case INVERSE: buffer[x+ (y/8)*myGFX->WIDTH] ^=  (1 << (y&7)); break;
 561              		.loc 1 168 0
 562 0180 B7F90A20 		ldrsh	r2, [r7, #10]
 563 0184 B7F90830 		ldrsh	r3, [r7, #8]
 564 0188 002B     		cmp	r3, #0
 565 018a 00DA     		bge	.L26
 566 018c 0733     		adds	r3, r3, #7
 567              	.L26:
 568 018e DB10     		asrs	r3, r3, #3
 569 0190 18B2     		sxth	r0, r3
 570 0192 0146     		mov	r1, r0
 571 0194 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 14


 572 0196 B3F90030 		ldrsh	r3, [r3]
 573 019a 03FB01F3 		mul	r3, r3, r1
 574 019e 1344     		add	r3, r3, r2
 575 01a0 B7F90A10 		ldrsh	r1, [r7, #10]
 576 01a4 FA68     		ldr	r2, [r7, #12]
 577 01a6 B2F90020 		ldrsh	r2, [r2]
 578 01aa 02FB00F2 		mul	r2, r2, r0
 579 01ae 0A44     		add	r2, r2, r1
 580 01b0 0A49     		ldr	r1, .L28
 581 01b2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 582 01b4 51B2     		sxtb	r1, r2
 583 01b6 3A89     		ldrh	r2, [r7, #8]
 584 01b8 02F00702 		and	r2, r2, #7
 585 01bc 0120     		movs	r0, #1
 586 01be 00FA02F2 		lsl	r2, r0, r2
 587 01c2 52B2     		sxtb	r2, r2
 588 01c4 4A40     		eors	r2, r2, r1
 589 01c6 52B2     		sxtb	r2, r2
 590 01c8 D1B2     		uxtb	r1, r2
 591 01ca 044A     		ldr	r2, .L28
 592 01cc D154     		strb	r1, [r2, r3]
 593 01ce 00BF     		nop
 594 01d0 00E0     		b	.L13
 595              	.L27:
 145:gfx.c         ****             
 596              		.loc 1 145 0
 597 01d2 00BF     		nop
 598              	.L13:
 169:gfx.c         ****             }
 170:gfx.c         ****             
 171:gfx.c         ****         }
 599              		.loc 1 171 0
 600 01d4 1837     		adds	r7, r7, #24
 601              		.cfi_def_cfa_offset 8
 602 01d6 BD46     		mov	sp, r7
 603              		.cfi_def_cfa_register 13
 604              		@ sp needed
 605 01d8 80BD     		pop	{r7, pc}
 606              	.L29:
 607 01da 00BF     		.align	2
 608              	.L28:
 609 01dc 00000000 		.word	buffer
 610              		.cfi_endproc
 611              	.LFE67:
 612              		.size	GFXdrawPixel, .-GFXdrawPixel
 613              		.section	.text.GFXwritePixel,"ax",%progbits
 614              		.align	2
 615              		.global	GFXwritePixel
 616              		.thumb
 617              		.thumb_func
 618              		.type	GFXwritePixel, %function
 619              	GFXwritePixel:
 620              	.LFB68:
 172:gfx.c         ****         
 173:gfx.c         ****         void GFXwritePixel(GFX* myGFX,int16_t x, int16_t y, uint16_t color){
 621              		.loc 1 173 0
 622              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 15


 623              		@ args = 0, pretend = 0, frame = 16
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 0000 80B5     		push	{r7, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 84B0     		sub	sp, sp, #16
 630              		.cfi_def_cfa_offset 24
 631 0004 00AF     		add	r7, sp, #0
 632              		.cfi_def_cfa_register 7
 633 0006 F860     		str	r0, [r7, #12]
 634 0008 0846     		mov	r0, r1
 635 000a 1146     		mov	r1, r2
 636 000c 1A46     		mov	r2, r3
 637 000e 0346     		mov	r3, r0	@ movhi
 638 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 639 0012 0B46     		mov	r3, r1	@ movhi
 640 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 641 0016 1346     		mov	r3, r2	@ movhi
 642 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 174:gfx.c         ****             // Overwrite in subclasses if startWrite is defined!
 175:gfx.c         ****             GFXdrawPixel(myGFX, x, y, color);
 643              		.loc 1 175 0
 644 001a FB88     		ldrh	r3, [r7, #6]
 645 001c B7F90820 		ldrsh	r2, [r7, #8]
 646 0020 B7F90A10 		ldrsh	r1, [r7, #10]
 647 0024 F868     		ldr	r0, [r7, #12]
 648 0026 FFF7FEFF 		bl	GFXdrawPixel
 176:gfx.c         ****         }
 649              		.loc 1 176 0
 650 002a 00BF     		nop
 651 002c 1037     		adds	r7, r7, #16
 652              		.cfi_def_cfa_offset 8
 653 002e BD46     		mov	sp, r7
 654              		.cfi_def_cfa_register 13
 655              		@ sp needed
 656 0030 80BD     		pop	{r7, pc}
 657              		.cfi_endproc
 658              	.LFE68:
 659              		.size	GFXwritePixel, .-GFXwritePixel
 660 0032 00BF     		.section	.text.GFXwriteFastVLine,"ax",%progbits
 661              		.align	2
 662              		.global	GFXwriteFastVLine
 663              		.thumb
 664              		.thumb_func
 665              		.type	GFXwriteFastVLine, %function
 666              	GFXwriteFastVLine:
 667              	.LFB69:
 177:gfx.c         ****         
 178:gfx.c         ****         // (x,y) is topmost point; if unsure, calling function
 179:gfx.c         ****         // should sort endpoints or call writeLine() instead
 180:gfx.c         ****         void GFXwriteFastVLine(GFX* myGFX,int16_t x, int16_t y,
 181:gfx.c         ****                                int16_t h, uint16_t color) {
 668              		.loc 1 181 0
 669              		.cfi_startproc
 670              		@ args = 4, pretend = 0, frame = 16
 671              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 16


 672 0000 80B5     		push	{r7, lr}
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 86B0     		sub	sp, sp, #24
 677              		.cfi_def_cfa_offset 32
 678 0004 02AF     		add	r7, sp, #8
 679              		.cfi_def_cfa 7, 24
 680 0006 F860     		str	r0, [r7, #12]
 681 0008 0846     		mov	r0, r1
 682 000a 1146     		mov	r1, r2
 683 000c 1A46     		mov	r2, r3
 684 000e 0346     		mov	r3, r0	@ movhi
 685 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 686 0012 0B46     		mov	r3, r1	@ movhi
 687 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 688 0016 1346     		mov	r3, r2	@ movhi
 689 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 182:gfx.c         ****             // Overwrite in subclasses if startWrite is defined!
 183:gfx.c         ****             // Can be just writeLine(x, y, x, y+h-1, color);
 184:gfx.c         ****             // or writeFillRect(x, y, 1, h, color);
 185:gfx.c         ****             GFXdrawFastVLine(myGFX, x, y, h, color);
 690              		.loc 1 185 0
 691 001a B7F90600 		ldrsh	r0, [r7, #6]
 692 001e B7F90820 		ldrsh	r2, [r7, #8]
 693 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 694 0026 3B8B     		ldrh	r3, [r7, #24]
 695 0028 0093     		str	r3, [sp]
 696 002a 0346     		mov	r3, r0
 697 002c F868     		ldr	r0, [r7, #12]
 698 002e FFF7FEFF 		bl	GFXdrawFastVLine
 186:gfx.c         ****         }
 699              		.loc 1 186 0
 700 0032 00BF     		nop
 701 0034 1037     		adds	r7, r7, #16
 702              		.cfi_def_cfa_offset 8
 703 0036 BD46     		mov	sp, r7
 704              		.cfi_def_cfa_register 13
 705              		@ sp needed
 706 0038 80BD     		pop	{r7, pc}
 707              		.cfi_endproc
 708              	.LFE69:
 709              		.size	GFXwriteFastVLine, .-GFXwriteFastVLine
 710 003a 00BF     		.section	.text.GFXwriteFastHLine,"ax",%progbits
 711              		.align	2
 712              		.global	GFXwriteFastHLine
 713              		.thumb
 714              		.thumb_func
 715              		.type	GFXwriteFastHLine, %function
 716              	GFXwriteFastHLine:
 717              	.LFB70:
 187:gfx.c         ****         
 188:gfx.c         ****         // (x,y) is leftmost point; if unsure, calling function
 189:gfx.c         ****         // should sort endpoints or call writeLine() instead
 190:gfx.c         ****         void GFXwriteFastHLine(GFX* myGFX, int16_t x, int16_t y,
 191:gfx.c         ****                                int16_t w, uint16_t color) {
 718              		.loc 1 191 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 17


 719              		.cfi_startproc
 720              		@ args = 4, pretend = 0, frame = 16
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722 0000 80B5     		push	{r7, lr}
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 86B0     		sub	sp, sp, #24
 727              		.cfi_def_cfa_offset 32
 728 0004 02AF     		add	r7, sp, #8
 729              		.cfi_def_cfa 7, 24
 730 0006 F860     		str	r0, [r7, #12]
 731 0008 0846     		mov	r0, r1
 732 000a 1146     		mov	r1, r2
 733 000c 1A46     		mov	r2, r3
 734 000e 0346     		mov	r3, r0	@ movhi
 735 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 736 0012 0B46     		mov	r3, r1	@ movhi
 737 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 738 0016 1346     		mov	r3, r2	@ movhi
 739 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 192:gfx.c         ****             // Overwrite in subclasses if startWrite is defined!
 193:gfx.c         ****             // Example: writeLine(x, y, x+w-1, y, color);
 194:gfx.c         ****             // or writeFillRect(x, y, w, 1, color);
 195:gfx.c         ****             GFXdrawFastHLine(myGFX,x, y, w, color);
 740              		.loc 1 195 0
 741 001a B7F90600 		ldrsh	r0, [r7, #6]
 742 001e B7F90820 		ldrsh	r2, [r7, #8]
 743 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 744 0026 3B8B     		ldrh	r3, [r7, #24]
 745 0028 0093     		str	r3, [sp]
 746 002a 0346     		mov	r3, r0
 747 002c F868     		ldr	r0, [r7, #12]
 748 002e FFF7FEFF 		bl	GFXdrawFastHLine
 196:gfx.c         ****         }
 749              		.loc 1 196 0
 750 0032 00BF     		nop
 751 0034 1037     		adds	r7, r7, #16
 752              		.cfi_def_cfa_offset 8
 753 0036 BD46     		mov	sp, r7
 754              		.cfi_def_cfa_register 13
 755              		@ sp needed
 756 0038 80BD     		pop	{r7, pc}
 757              		.cfi_endproc
 758              	.LFE70:
 759              		.size	GFXwriteFastHLine, .-GFXwriteFastHLine
 760 003a 00BF     		.section	.text.GFXwriteFillRect,"ax",%progbits
 761              		.align	2
 762              		.global	GFXwriteFillRect
 763              		.thumb
 764              		.thumb_func
 765              		.type	GFXwriteFillRect, %function
 766              	GFXwriteFillRect:
 767              	.LFB71:
 197:gfx.c         ****         
 198:gfx.c         ****         void GFXwriteFillRect(GFX* myGFX,int16_t x, int16_t y, int16_t w, int16_t h,
 199:gfx.c         ****                               uint16_t color) {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 18


 768              		.loc 1 199 0
 769              		.cfi_startproc
 770              		@ args = 8, pretend = 0, frame = 16
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772 0000 80B5     		push	{r7, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 7, -8
 775              		.cfi_offset 14, -4
 776 0002 86B0     		sub	sp, sp, #24
 777              		.cfi_def_cfa_offset 32
 778 0004 02AF     		add	r7, sp, #8
 779              		.cfi_def_cfa 7, 24
 780 0006 F860     		str	r0, [r7, #12]
 781 0008 0846     		mov	r0, r1
 782 000a 1146     		mov	r1, r2
 783 000c 1A46     		mov	r2, r3
 784 000e 0346     		mov	r3, r0	@ movhi
 785 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 786 0012 0B46     		mov	r3, r1	@ movhi
 787 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 788 0016 1346     		mov	r3, r2	@ movhi
 789 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 200:gfx.c         ****             // Overwrite in subclasses if desired!
 201:gfx.c         ****             GFXfillRect(myGFX,x,y,w,h,color);
 790              		.loc 1 201 0
 791 001a B7F90600 		ldrsh	r0, [r7, #6]
 792 001e B7F90820 		ldrsh	r2, [r7, #8]
 793 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 794 0026 BB8B     		ldrh	r3, [r7, #28]
 795 0028 0193     		str	r3, [sp, #4]
 796 002a B7F91830 		ldrsh	r3, [r7, #24]
 797 002e 0093     		str	r3, [sp]
 798 0030 0346     		mov	r3, r0
 799 0032 F868     		ldr	r0, [r7, #12]
 800 0034 FFF7FEFF 		bl	GFXfillRect
 202:gfx.c         ****         }
 801              		.loc 1 202 0
 802 0038 00BF     		nop
 803 003a 1037     		adds	r7, r7, #16
 804              		.cfi_def_cfa_offset 8
 805 003c BD46     		mov	sp, r7
 806              		.cfi_def_cfa_register 13
 807              		@ sp needed
 808 003e 80BD     		pop	{r7, pc}
 809              		.cfi_endproc
 810              	.LFE71:
 811              		.size	GFXwriteFillRect, .-GFXwriteFillRect
 812              		.section	.text.GFXendWrite,"ax",%progbits
 813              		.align	2
 814              		.global	GFXendWrite
 815              		.thumb
 816              		.thumb_func
 817              		.type	GFXendWrite, %function
 818              	GFXendWrite:
 819              	.LFB72:
 203:gfx.c         ****         
 204:gfx.c         ****         void GFXendWrite(GFX* myGFX){
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 19


 820              		.loc 1 204 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 8
 823              		@ frame_needed = 1, uses_anonymous_args = 0
 824              		@ link register save eliminated.
 825 0000 80B4     		push	{r7}
 826              		.cfi_def_cfa_offset 4
 827              		.cfi_offset 7, -4
 828 0002 83B0     		sub	sp, sp, #12
 829              		.cfi_def_cfa_offset 16
 830 0004 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
 832 0006 7860     		str	r0, [r7, #4]
 205:gfx.c         ****             // Overwrite in subclasses if startWrite is defined!
 206:gfx.c         ****         }
 833              		.loc 1 206 0
 834 0008 00BF     		nop
 835 000a 0C37     		adds	r7, r7, #12
 836              		.cfi_def_cfa_offset 4
 837 000c BD46     		mov	sp, r7
 838              		.cfi_def_cfa_register 13
 839              		@ sp needed
 840 000e 80BC     		pop	{r7}
 841              		.cfi_restore 7
 842              		.cfi_def_cfa_offset 0
 843 0010 7047     		bx	lr
 844              		.cfi_endproc
 845              	.LFE72:
 846              		.size	GFXendWrite, .-GFXendWrite
 847 0012 00BF     		.section	.text.GFXdrawFastVLine,"ax",%progbits
 848              		.align	2
 849              		.global	GFXdrawFastVLine
 850              		.thumb
 851              		.thumb_func
 852              		.type	GFXdrawFastVLine, %function
 853              	GFXdrawFastVLine:
 854              	.LFB73:
 207:gfx.c         ****         
 208:gfx.c         ****         // (x,y) is topmost point; if unsure, calling function
 209:gfx.c         ****         // should sort endpoints or call drawLine() instead
 210:gfx.c         ****         void GFXdrawFastVLine(GFX* myGFX,int16_t x, int16_t y,
 211:gfx.c         ****                               int16_t h, uint16_t color) {
 855              		.loc 1 211 0
 856              		.cfi_startproc
 857              		@ args = 4, pretend = 0, frame = 16
 858              		@ frame_needed = 1, uses_anonymous_args = 0
 859 0000 90B5     		push	{r4, r7, lr}
 860              		.cfi_def_cfa_offset 12
 861              		.cfi_offset 4, -12
 862              		.cfi_offset 7, -8
 863              		.cfi_offset 14, -4
 864 0002 87B0     		sub	sp, sp, #28
 865              		.cfi_def_cfa_offset 40
 866 0004 02AF     		add	r7, sp, #8
 867              		.cfi_def_cfa 7, 32
 868 0006 F860     		str	r0, [r7, #12]
 869 0008 0846     		mov	r0, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 20


 870 000a 1146     		mov	r1, r2
 871 000c 1A46     		mov	r2, r3
 872 000e 0346     		mov	r3, r0	@ movhi
 873 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 874 0012 0B46     		mov	r3, r1	@ movhi
 875 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 876 0016 1346     		mov	r3, r2	@ movhi
 877 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 212:gfx.c         ****             // Update in subclasses if desired!
 213:gfx.c         ****             GFXwriteLine(myGFX,x, y, x, y+h-1, color);
 878              		.loc 1 213 0
 879 001a 3A89     		ldrh	r2, [r7, #8]
 880 001c FB88     		ldrh	r3, [r7, #6]
 881 001e 1344     		add	r3, r3, r2
 882 0020 9BB2     		uxth	r3, r3
 883 0022 013B     		subs	r3, r3, #1
 884 0024 9BB2     		uxth	r3, r3
 885 0026 1BB2     		sxth	r3, r3
 886 0028 B7F90A40 		ldrsh	r4, [r7, #10]
 887 002c B7F90800 		ldrsh	r0, [r7, #8]
 888 0030 B7F90A10 		ldrsh	r1, [r7, #10]
 889 0034 3A8C     		ldrh	r2, [r7, #32]
 890 0036 0192     		str	r2, [sp, #4]
 891 0038 0093     		str	r3, [sp]
 892 003a 2346     		mov	r3, r4
 893 003c 0246     		mov	r2, r0
 894 003e F868     		ldr	r0, [r7, #12]
 895 0040 FFF7FEFF 		bl	GFXwriteLine
 214:gfx.c         ****         }
 896              		.loc 1 214 0
 897 0044 00BF     		nop
 898 0046 1437     		adds	r7, r7, #20
 899              		.cfi_def_cfa_offset 12
 900 0048 BD46     		mov	sp, r7
 901              		.cfi_def_cfa_register 13
 902              		@ sp needed
 903 004a 90BD     		pop	{r4, r7, pc}
 904              		.cfi_endproc
 905              	.LFE73:
 906              		.size	GFXdrawFastVLine, .-GFXdrawFastVLine
 907              		.section	.text.GFXdrawFastHLine,"ax",%progbits
 908              		.align	2
 909              		.global	GFXdrawFastHLine
 910              		.thumb
 911              		.thumb_func
 912              		.type	GFXdrawFastHLine, %function
 913              	GFXdrawFastHLine:
 914              	.LFB74:
 215:gfx.c         ****         
 216:gfx.c         ****         // (x,y) is leftmost point; if unsure, calling function
 217:gfx.c         ****         // should sort endpoints or call drawLine() instead
 218:gfx.c         ****         void GFXdrawFastHLine(GFX* myGFX,int16_t x, int16_t y,
 219:gfx.c         ****                               int16_t w, uint16_t color) {
 915              		.loc 1 219 0
 916              		.cfi_startproc
 917              		@ args = 4, pretend = 0, frame = 16
 918              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 21


 919 0000 80B5     		push	{r7, lr}
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 7, -8
 922              		.cfi_offset 14, -4
 923 0002 86B0     		sub	sp, sp, #24
 924              		.cfi_def_cfa_offset 32
 925 0004 02AF     		add	r7, sp, #8
 926              		.cfi_def_cfa 7, 24
 927 0006 F860     		str	r0, [r7, #12]
 928 0008 0846     		mov	r0, r1
 929 000a 1146     		mov	r1, r2
 930 000c 1A46     		mov	r2, r3
 931 000e 0346     		mov	r3, r0	@ movhi
 932 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 933 0012 0B46     		mov	r3, r1	@ movhi
 934 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 935 0016 1346     		mov	r3, r2	@ movhi
 936 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 220:gfx.c         ****             // Update in subclasses if desired!
 221:gfx.c         ****             GFXwriteLine(myGFX,x, y, x+w-1, y, color);
 937              		.loc 1 221 0
 938 001a 7A89     		ldrh	r2, [r7, #10]
 939 001c FB88     		ldrh	r3, [r7, #6]
 940 001e 1344     		add	r3, r3, r2
 941 0020 9BB2     		uxth	r3, r3
 942 0022 013B     		subs	r3, r3, #1
 943 0024 9BB2     		uxth	r3, r3
 944 0026 18B2     		sxth	r0, r3
 945 0028 B7F90820 		ldrsh	r2, [r7, #8]
 946 002c B7F90A10 		ldrsh	r1, [r7, #10]
 947 0030 3B8B     		ldrh	r3, [r7, #24]
 948 0032 0193     		str	r3, [sp, #4]
 949 0034 B7F90830 		ldrsh	r3, [r7, #8]
 950 0038 0093     		str	r3, [sp]
 951 003a 0346     		mov	r3, r0
 952 003c F868     		ldr	r0, [r7, #12]
 953 003e FFF7FEFF 		bl	GFXwriteLine
 222:gfx.c         ****         }
 954              		.loc 1 222 0
 955 0042 00BF     		nop
 956 0044 1037     		adds	r7, r7, #16
 957              		.cfi_def_cfa_offset 8
 958 0046 BD46     		mov	sp, r7
 959              		.cfi_def_cfa_register 13
 960              		@ sp needed
 961 0048 80BD     		pop	{r7, pc}
 962              		.cfi_endproc
 963              	.LFE74:
 964              		.size	GFXdrawFastHLine, .-GFXdrawFastHLine
 965 004a 00BF     		.section	.text.GFXfillRect,"ax",%progbits
 966              		.align	2
 967              		.global	GFXfillRect
 968              		.thumb
 969              		.thumb_func
 970              		.type	GFXfillRect, %function
 971              	GFXfillRect:
 972              	.LFB75:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 22


 223:gfx.c         ****         
 224:gfx.c         ****         void GFXfillRect(GFX* myGFX,int16_t x, int16_t y, int16_t w, int16_t h,
 225:gfx.c         ****                          uint16_t color) {
 973              		.loc 1 225 0
 974              		.cfi_startproc
 975              		@ args = 8, pretend = 0, frame = 24
 976              		@ frame_needed = 1, uses_anonymous_args = 0
 977 0000 80B5     		push	{r7, lr}
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 7, -8
 980              		.cfi_offset 14, -4
 981 0002 88B0     		sub	sp, sp, #32
 982              		.cfi_def_cfa_offset 40
 983 0004 02AF     		add	r7, sp, #8
 984              		.cfi_def_cfa 7, 32
 985 0006 F860     		str	r0, [r7, #12]
 986 0008 0846     		mov	r0, r1
 987 000a 1146     		mov	r1, r2
 988 000c 1A46     		mov	r2, r3
 989 000e 0346     		mov	r3, r0	@ movhi
 990 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 991 0012 0B46     		mov	r3, r1	@ movhi
 992 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 993 0016 1346     		mov	r3, r2	@ movhi
 994 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 995              	.LBB8:
 226:gfx.c         ****             // Update in subclasses if desired!
 227:gfx.c         ****             for (int16_t i=x; i<x+w; i++) {
 996              		.loc 1 227 0
 997 001a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 998 001c FB82     		strh	r3, [r7, #22]	@ movhi
 999 001e 11E0     		b	.L38
 1000              	.L39:
 228:gfx.c         ****                 GFXwriteFastVLine(myGFX,i, y, h, color);
 1001              		.loc 1 228 0 discriminator 3
 1002 0020 B7F92000 		ldrsh	r0, [r7, #32]
 1003 0024 B7F90820 		ldrsh	r2, [r7, #8]
 1004 0028 B7F91610 		ldrsh	r1, [r7, #22]
 1005 002c BB8C     		ldrh	r3, [r7, #36]
 1006 002e 0093     		str	r3, [sp]
 1007 0030 0346     		mov	r3, r0
 1008 0032 F868     		ldr	r0, [r7, #12]
 1009 0034 FFF7FEFF 		bl	GFXwriteFastVLine
 227:gfx.c         ****                 GFXwriteFastVLine(myGFX,i, y, h, color);
 1010              		.loc 1 227 0 discriminator 3
 1011 0038 B7F91630 		ldrsh	r3, [r7, #22]
 1012 003c 9BB2     		uxth	r3, r3
 1013 003e 0133     		adds	r3, r3, #1
 1014 0040 9BB2     		uxth	r3, r3
 1015 0042 FB82     		strh	r3, [r7, #22]	@ movhi
 1016              	.L38:
 227:gfx.c         ****                 GFXwriteFastVLine(myGFX,i, y, h, color);
 1017              		.loc 1 227 0 is_stmt 0 discriminator 1
 1018 0044 B7F91620 		ldrsh	r2, [r7, #22]
 1019 0048 B7F90A10 		ldrsh	r1, [r7, #10]
 1020 004c B7F90630 		ldrsh	r3, [r7, #6]
 1021 0050 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 23


 1022 0052 9A42     		cmp	r2, r3
 1023 0054 E4DB     		blt	.L39
 1024              	.LBE8:
 229:gfx.c         ****             }
 230:gfx.c         ****         }
 1025              		.loc 1 230 0 is_stmt 1
 1026 0056 00BF     		nop
 1027 0058 1837     		adds	r7, r7, #24
 1028              		.cfi_def_cfa_offset 8
 1029 005a BD46     		mov	sp, r7
 1030              		.cfi_def_cfa_register 13
 1031              		@ sp needed
 1032 005c 80BD     		pop	{r7, pc}
 1033              		.cfi_endproc
 1034              	.LFE75:
 1035              		.size	GFXfillRect, .-GFXfillRect
 1036 005e 00BF     		.section	.text.GFXfillScreen,"ax",%progbits
 1037              		.align	2
 1038              		.global	GFXfillScreen
 1039              		.thumb
 1040              		.thumb_func
 1041              		.type	GFXfillScreen, %function
 1042              	GFXfillScreen:
 1043              	.LFB76:
 231:gfx.c         ****         
 232:gfx.c         ****         void GFXfillScreen(GFX* myGFX,uint16_t color) {
 1044              		.loc 1 232 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 8
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 0000 80B5     		push	{r7, lr}
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 7, -8
 1051              		.cfi_offset 14, -4
 1052 0002 84B0     		sub	sp, sp, #16
 1053              		.cfi_def_cfa_offset 24
 1054 0004 02AF     		add	r7, sp, #8
 1055              		.cfi_def_cfa 7, 16
 1056 0006 7860     		str	r0, [r7, #4]
 1057 0008 0B46     		mov	r3, r1
 1058 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 233:gfx.c         ****             // Update in subclasses if desired!
 234:gfx.c         ****             GFXfillRect(myGFX,0, 0, myGFX->_width, myGFX->_height, color);
 1059              		.loc 1 234 0
 1060 000c 7B68     		ldr	r3, [r7, #4]
 1061 000e 9B88     		ldrh	r3, [r3, #4]
 1062 0010 19B2     		sxth	r1, r3
 1063 0012 7B68     		ldr	r3, [r7, #4]
 1064 0014 DB88     		ldrh	r3, [r3, #6]
 1065 0016 1BB2     		sxth	r3, r3
 1066 0018 7A88     		ldrh	r2, [r7, #2]
 1067 001a 0192     		str	r2, [sp, #4]
 1068 001c 0093     		str	r3, [sp]
 1069 001e 0B46     		mov	r3, r1
 1070 0020 0022     		movs	r2, #0
 1071 0022 0021     		movs	r1, #0
 1072 0024 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 24


 1073 0026 FFF7FEFF 		bl	GFXfillRect
 235:gfx.c         ****         }
 1074              		.loc 1 235 0
 1075 002a 00BF     		nop
 1076 002c 0837     		adds	r7, r7, #8
 1077              		.cfi_def_cfa_offset 8
 1078 002e BD46     		mov	sp, r7
 1079              		.cfi_def_cfa_register 13
 1080              		@ sp needed
 1081 0030 80BD     		pop	{r7, pc}
 1082              		.cfi_endproc
 1083              	.LFE76:
 1084              		.size	GFXfillScreen, .-GFXfillScreen
 1085 0032 00BF     		.section	.text.GFXdrawLine,"ax",%progbits
 1086              		.align	2
 1087              		.global	GFXdrawLine
 1088              		.thumb
 1089              		.thumb_func
 1090              		.type	GFXdrawLine, %function
 1091              	GFXdrawLine:
 1092              	.LFB77:
 236:gfx.c         ****         
 237:gfx.c         ****         void GFXdrawLine(GFX* myGFX,int16_t x0, int16_t y0, int16_t x1, int16_t y1,
 238:gfx.c         ****                          uint16_t color) {
 1093              		.loc 1 238 0
 1094              		.cfi_startproc
 1095              		@ args = 8, pretend = 0, frame = 24
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097 0000 80B5     		push	{r7, lr}
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 7, -8
 1100              		.cfi_offset 14, -4
 1101 0002 88B0     		sub	sp, sp, #32
 1102              		.cfi_def_cfa_offset 40
 1103 0004 02AF     		add	r7, sp, #8
 1104              		.cfi_def_cfa 7, 32
 1105 0006 F860     		str	r0, [r7, #12]
 1106 0008 0846     		mov	r0, r1
 1107 000a 1146     		mov	r1, r2
 1108 000c 1A46     		mov	r2, r3
 1109 000e 0346     		mov	r3, r0	@ movhi
 1110 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1111 0012 0B46     		mov	r3, r1	@ movhi
 1112 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1113 0016 1346     		mov	r3, r2	@ movhi
 1114 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 239:gfx.c         ****             // Update in subclasses if desired!
 240:gfx.c         ****             if(x0 == x1){
 1115              		.loc 1 240 0
 1116 001a B7F90A20 		ldrsh	r2, [r7, #10]
 1117 001e B7F90630 		ldrsh	r3, [r7, #6]
 1118 0022 9A42     		cmp	r2, r3
 1119 0024 1DD1     		bne	.L42
 241:gfx.c         ****                 if(y0 > y1) _swap_int16_t(y0, y1);
 1120              		.loc 1 241 0
 1121 0026 B7F90820 		ldrsh	r2, [r7, #8]
 1122 002a B7F92030 		ldrsh	r3, [r7, #32]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 25


 1123 002e 9A42     		cmp	r2, r3
 1124 0030 05DD     		ble	.L43
 1125              	.LBB9:
 1126              		.loc 1 241 0 is_stmt 0 discriminator 1
 1127 0032 3B89     		ldrh	r3, [r7, #8]	@ movhi
 1128 0034 FB82     		strh	r3, [r7, #22]	@ movhi
 1129 0036 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1130 0038 3B81     		strh	r3, [r7, #8]	@ movhi
 1131 003a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1132 003c 3B84     		strh	r3, [r7, #32]	@ movhi
 1133              	.L43:
 1134              	.LBE9:
 242:gfx.c         ****                 GFXdrawFastVLine(myGFX,x0, y0, y1 - y0 + 1, color);
 1135              		.loc 1 242 0 is_stmt 1
 1136 003e 3A8C     		ldrh	r2, [r7, #32]
 1137 0040 3B89     		ldrh	r3, [r7, #8]
 1138 0042 D31A     		subs	r3, r2, r3
 1139 0044 9BB2     		uxth	r3, r3
 1140 0046 0133     		adds	r3, r3, #1
 1141 0048 9BB2     		uxth	r3, r3
 1142 004a 18B2     		sxth	r0, r3
 1143 004c B7F90820 		ldrsh	r2, [r7, #8]
 1144 0050 B7F90A10 		ldrsh	r1, [r7, #10]
 1145 0054 BB8C     		ldrh	r3, [r7, #36]
 1146 0056 0093     		str	r3, [sp]
 1147 0058 0346     		mov	r3, r0
 1148 005a F868     		ldr	r0, [r7, #12]
 1149 005c FFF7FEFF 		bl	GFXdrawFastVLine
 243:gfx.c         ****             } else if(y0 == y1){
 244:gfx.c         ****                 if(x0 > x1) _swap_int16_t(x0, x1);
 245:gfx.c         ****                 GFXdrawFastHLine(myGFX,x0, y0, x1 - x0 + 1, color);
 246:gfx.c         ****             } else {
 247:gfx.c         ****                 GFXwriteLine(myGFX,x0, y0, x1, y1, color);
 248:gfx.c         ****             }
 249:gfx.c         ****         }
 1150              		.loc 1 249 0
 1151 0060 32E0     		b	.L47
 1152              	.L42:
 243:gfx.c         ****             } else if(y0 == y1){
 1153              		.loc 1 243 0
 1154 0062 B7F90820 		ldrsh	r2, [r7, #8]
 1155 0066 B7F92030 		ldrsh	r3, [r7, #32]
 1156 006a 9A42     		cmp	r2, r3
 1157 006c 1DD1     		bne	.L45
 244:gfx.c         ****                 GFXdrawFastHLine(myGFX,x0, y0, x1 - x0 + 1, color);
 1158              		.loc 1 244 0
 1159 006e B7F90A20 		ldrsh	r2, [r7, #10]
 1160 0072 B7F90630 		ldrsh	r3, [r7, #6]
 1161 0076 9A42     		cmp	r2, r3
 1162 0078 05DD     		ble	.L46
 1163              	.LBB10:
 244:gfx.c         ****                 GFXdrawFastHLine(myGFX,x0, y0, x1 - x0 + 1, color);
 1164              		.loc 1 244 0 is_stmt 0 discriminator 1
 1165 007a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1166 007c BB82     		strh	r3, [r7, #20]	@ movhi
 1167 007e FB88     		ldrh	r3, [r7, #6]	@ movhi
 1168 0080 7B81     		strh	r3, [r7, #10]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 26


 1169 0082 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1170 0084 FB80     		strh	r3, [r7, #6]	@ movhi
 1171              	.L46:
 1172              	.LBE10:
 245:gfx.c         ****             } else {
 1173              		.loc 1 245 0 is_stmt 1
 1174 0086 FA88     		ldrh	r2, [r7, #6]
 1175 0088 7B89     		ldrh	r3, [r7, #10]
 1176 008a D31A     		subs	r3, r2, r3
 1177 008c 9BB2     		uxth	r3, r3
 1178 008e 0133     		adds	r3, r3, #1
 1179 0090 9BB2     		uxth	r3, r3
 1180 0092 18B2     		sxth	r0, r3
 1181 0094 B7F90820 		ldrsh	r2, [r7, #8]
 1182 0098 B7F90A10 		ldrsh	r1, [r7, #10]
 1183 009c BB8C     		ldrh	r3, [r7, #36]
 1184 009e 0093     		str	r3, [sp]
 1185 00a0 0346     		mov	r3, r0
 1186 00a2 F868     		ldr	r0, [r7, #12]
 1187 00a4 FFF7FEFF 		bl	GFXdrawFastHLine
 1188              		.loc 1 249 0
 1189 00a8 0EE0     		b	.L47
 1190              	.L45:
 247:gfx.c         ****             }
 1191              		.loc 1 247 0
 1192 00aa B7F90600 		ldrsh	r0, [r7, #6]
 1193 00ae B7F90820 		ldrsh	r2, [r7, #8]
 1194 00b2 B7F90A10 		ldrsh	r1, [r7, #10]
 1195 00b6 BB8C     		ldrh	r3, [r7, #36]
 1196 00b8 0193     		str	r3, [sp, #4]
 1197 00ba B7F92030 		ldrsh	r3, [r7, #32]
 1198 00be 0093     		str	r3, [sp]
 1199 00c0 0346     		mov	r3, r0
 1200 00c2 F868     		ldr	r0, [r7, #12]
 1201 00c4 FFF7FEFF 		bl	GFXwriteLine
 1202              	.L47:
 1203              		.loc 1 249 0
 1204 00c8 00BF     		nop
 1205 00ca 1837     		adds	r7, r7, #24
 1206              		.cfi_def_cfa_offset 8
 1207 00cc BD46     		mov	sp, r7
 1208              		.cfi_def_cfa_register 13
 1209              		@ sp needed
 1210 00ce 80BD     		pop	{r7, pc}
 1211              		.cfi_endproc
 1212              	.LFE77:
 1213              		.size	GFXdrawLine, .-GFXdrawLine
 1214              		.section	.text.GFXdrawCircle,"ax",%progbits
 1215              		.align	2
 1216              		.global	GFXdrawCircle
 1217              		.thumb
 1218              		.thumb_func
 1219              		.type	GFXdrawCircle, %function
 1220              	GFXdrawCircle:
 1221              	.LFB78:
 250:gfx.c         ****         
 251:gfx.c         ****         // Draw a circle outline
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 27


 252:gfx.c         ****         void GFXdrawCircle(GFX* myGFX,int16_t x0, int16_t y0, int16_t r,
 253:gfx.c         ****                            uint16_t color) {
 1222              		.loc 1 253 0
 1223              		.cfi_startproc
 1224              		@ args = 4, pretend = 0, frame = 32
 1225              		@ frame_needed = 1, uses_anonymous_args = 0
 1226 0000 80B5     		push	{r7, lr}
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 7, -8
 1229              		.cfi_offset 14, -4
 1230 0002 88B0     		sub	sp, sp, #32
 1231              		.cfi_def_cfa_offset 40
 1232 0004 00AF     		add	r7, sp, #0
 1233              		.cfi_def_cfa_register 7
 1234 0006 F860     		str	r0, [r7, #12]
 1235 0008 0846     		mov	r0, r1
 1236 000a 1146     		mov	r1, r2
 1237 000c 1A46     		mov	r2, r3
 1238 000e 0346     		mov	r3, r0	@ movhi
 1239 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1240 0012 0B46     		mov	r3, r1	@ movhi
 1241 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1242 0016 1346     		mov	r3, r2	@ movhi
 1243 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 254:gfx.c         ****             int16_t f = 1 - r;
 1244              		.loc 1 254 0
 1245 001a FB88     		ldrh	r3, [r7, #6]
 1246 001c C3F10103 		rsb	r3, r3, #1
 1247 0020 9BB2     		uxth	r3, r3
 1248 0022 FB83     		strh	r3, [r7, #30]	@ movhi
 255:gfx.c         ****             int16_t ddF_x = 1;
 1249              		.loc 1 255 0
 1250 0024 0123     		movs	r3, #1
 1251 0026 BB83     		strh	r3, [r7, #28]	@ movhi
 256:gfx.c         ****             int16_t ddF_y = -2 * r;
 1252              		.loc 1 256 0
 1253 0028 FB88     		ldrh	r3, [r7, #6]
 1254 002a 1A46     		mov	r2, r3	@ movhi
 1255 002c D203     		lsls	r2, r2, #15
 1256 002e D31A     		subs	r3, r2, r3
 1257 0030 5B00     		lsls	r3, r3, #1
 1258 0032 9BB2     		uxth	r3, r3
 1259 0034 7B83     		strh	r3, [r7, #26]	@ movhi
 257:gfx.c         ****             int16_t x = 0;
 1260              		.loc 1 257 0
 1261 0036 0023     		movs	r3, #0
 1262 0038 3B83     		strh	r3, [r7, #24]	@ movhi
 258:gfx.c         ****             int16_t y = r;
 1263              		.loc 1 258 0
 1264 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1265 003c FB82     		strh	r3, [r7, #22]	@ movhi
 259:gfx.c         ****             
 260:gfx.c         ****             GFXwritePixel(myGFX,x0  , y0+r, color);
 1266              		.loc 1 260 0
 1267 003e 3A89     		ldrh	r2, [r7, #8]
 1268 0040 FB88     		ldrh	r3, [r7, #6]
 1269 0042 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 28


 1270 0044 9BB2     		uxth	r3, r3
 1271 0046 1AB2     		sxth	r2, r3
 1272 0048 3B8D     		ldrh	r3, [r7, #40]
 1273 004a B7F90A10 		ldrsh	r1, [r7, #10]
 1274 004e F868     		ldr	r0, [r7, #12]
 1275 0050 FFF7FEFF 		bl	GFXwritePixel
 261:gfx.c         ****             GFXwritePixel(myGFX,x0  , y0-r, color);
 1276              		.loc 1 261 0
 1277 0054 3A89     		ldrh	r2, [r7, #8]
 1278 0056 FB88     		ldrh	r3, [r7, #6]
 1279 0058 D31A     		subs	r3, r2, r3
 1280 005a 9BB2     		uxth	r3, r3
 1281 005c 1AB2     		sxth	r2, r3
 1282 005e 3B8D     		ldrh	r3, [r7, #40]
 1283 0060 B7F90A10 		ldrsh	r1, [r7, #10]
 1284 0064 F868     		ldr	r0, [r7, #12]
 1285 0066 FFF7FEFF 		bl	GFXwritePixel
 262:gfx.c         ****             GFXwritePixel(myGFX,x0+r, y0  , color);
 1286              		.loc 1 262 0
 1287 006a 7A89     		ldrh	r2, [r7, #10]
 1288 006c FB88     		ldrh	r3, [r7, #6]
 1289 006e 1344     		add	r3, r3, r2
 1290 0070 9BB2     		uxth	r3, r3
 1291 0072 19B2     		sxth	r1, r3
 1292 0074 3B8D     		ldrh	r3, [r7, #40]
 1293 0076 B7F90820 		ldrsh	r2, [r7, #8]
 1294 007a F868     		ldr	r0, [r7, #12]
 1295 007c FFF7FEFF 		bl	GFXwritePixel
 263:gfx.c         ****             GFXwritePixel(myGFX,x0-r, y0  , color);
 1296              		.loc 1 263 0
 1297 0080 7A89     		ldrh	r2, [r7, #10]
 1298 0082 FB88     		ldrh	r3, [r7, #6]
 1299 0084 D31A     		subs	r3, r2, r3
 1300 0086 9BB2     		uxth	r3, r3
 1301 0088 19B2     		sxth	r1, r3
 1302 008a 3B8D     		ldrh	r3, [r7, #40]
 1303 008c B7F90820 		ldrsh	r2, [r7, #8]
 1304 0090 F868     		ldr	r0, [r7, #12]
 1305 0092 FFF7FEFF 		bl	GFXwritePixel
 264:gfx.c         ****             
 265:gfx.c         ****             while (x<y) {
 1306              		.loc 1 265 0
 1307 0096 91E0     		b	.L49
 1308              	.L51:
 266:gfx.c         ****                 if (f >= 0) {
 1309              		.loc 1 266 0
 1310 0098 B7F91E30 		ldrsh	r3, [r7, #30]
 1311 009c 002B     		cmp	r3, #0
 1312 009e 0EDB     		blt	.L50
 267:gfx.c         ****                     y--;
 1313              		.loc 1 267 0
 1314 00a0 B7F91630 		ldrsh	r3, [r7, #22]
 1315 00a4 9BB2     		uxth	r3, r3
 1316 00a6 013B     		subs	r3, r3, #1
 1317 00a8 9BB2     		uxth	r3, r3
 1318 00aa FB82     		strh	r3, [r7, #22]	@ movhi
 268:gfx.c         ****                     ddF_y += 2;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 29


 1319              		.loc 1 268 0
 1320 00ac 7B8B     		ldrh	r3, [r7, #26]
 1321 00ae 0233     		adds	r3, r3, #2
 1322 00b0 9BB2     		uxth	r3, r3
 1323 00b2 7B83     		strh	r3, [r7, #26]	@ movhi
 269:gfx.c         ****                     f += ddF_y;
 1324              		.loc 1 269 0
 1325 00b4 FA8B     		ldrh	r2, [r7, #30]
 1326 00b6 7B8B     		ldrh	r3, [r7, #26]
 1327 00b8 1344     		add	r3, r3, r2
 1328 00ba 9BB2     		uxth	r3, r3
 1329 00bc FB83     		strh	r3, [r7, #30]	@ movhi
 1330              	.L50:
 270:gfx.c         ****                 }
 271:gfx.c         ****                 x++;
 1331              		.loc 1 271 0
 1332 00be B7F91830 		ldrsh	r3, [r7, #24]
 1333 00c2 9BB2     		uxth	r3, r3
 1334 00c4 0133     		adds	r3, r3, #1
 1335 00c6 9BB2     		uxth	r3, r3
 1336 00c8 3B83     		strh	r3, [r7, #24]	@ movhi
 272:gfx.c         ****                 ddF_x += 2;
 1337              		.loc 1 272 0
 1338 00ca BB8B     		ldrh	r3, [r7, #28]
 1339 00cc 0233     		adds	r3, r3, #2
 1340 00ce 9BB2     		uxth	r3, r3
 1341 00d0 BB83     		strh	r3, [r7, #28]	@ movhi
 273:gfx.c         ****                 f += ddF_x;
 1342              		.loc 1 273 0
 1343 00d2 FA8B     		ldrh	r2, [r7, #30]
 1344 00d4 BB8B     		ldrh	r3, [r7, #28]
 1345 00d6 1344     		add	r3, r3, r2
 1346 00d8 9BB2     		uxth	r3, r3
 1347 00da FB83     		strh	r3, [r7, #30]	@ movhi
 274:gfx.c         ****                 
 275:gfx.c         ****                 GFXwritePixel(myGFX,x0 + x, y0 + y, color);
 1348              		.loc 1 275 0
 1349 00dc 7A89     		ldrh	r2, [r7, #10]
 1350 00de 3B8B     		ldrh	r3, [r7, #24]
 1351 00e0 1344     		add	r3, r3, r2
 1352 00e2 9BB2     		uxth	r3, r3
 1353 00e4 19B2     		sxth	r1, r3
 1354 00e6 3A89     		ldrh	r2, [r7, #8]
 1355 00e8 FB8A     		ldrh	r3, [r7, #22]
 1356 00ea 1344     		add	r3, r3, r2
 1357 00ec 9BB2     		uxth	r3, r3
 1358 00ee 1AB2     		sxth	r2, r3
 1359 00f0 3B8D     		ldrh	r3, [r7, #40]
 1360 00f2 F868     		ldr	r0, [r7, #12]
 1361 00f4 FFF7FEFF 		bl	GFXwritePixel
 276:gfx.c         ****                 GFXwritePixel(myGFX,x0 - x, y0 + y, color);
 1362              		.loc 1 276 0
 1363 00f8 7A89     		ldrh	r2, [r7, #10]
 1364 00fa 3B8B     		ldrh	r3, [r7, #24]
 1365 00fc D31A     		subs	r3, r2, r3
 1366 00fe 9BB2     		uxth	r3, r3
 1367 0100 19B2     		sxth	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 30


 1368 0102 3A89     		ldrh	r2, [r7, #8]
 1369 0104 FB8A     		ldrh	r3, [r7, #22]
 1370 0106 1344     		add	r3, r3, r2
 1371 0108 9BB2     		uxth	r3, r3
 1372 010a 1AB2     		sxth	r2, r3
 1373 010c 3B8D     		ldrh	r3, [r7, #40]
 1374 010e F868     		ldr	r0, [r7, #12]
 1375 0110 FFF7FEFF 		bl	GFXwritePixel
 277:gfx.c         ****                 GFXwritePixel(myGFX,x0 + x, y0 - y, color);
 1376              		.loc 1 277 0
 1377 0114 7A89     		ldrh	r2, [r7, #10]
 1378 0116 3B8B     		ldrh	r3, [r7, #24]
 1379 0118 1344     		add	r3, r3, r2
 1380 011a 9BB2     		uxth	r3, r3
 1381 011c 19B2     		sxth	r1, r3
 1382 011e 3A89     		ldrh	r2, [r7, #8]
 1383 0120 FB8A     		ldrh	r3, [r7, #22]
 1384 0122 D31A     		subs	r3, r2, r3
 1385 0124 9BB2     		uxth	r3, r3
 1386 0126 1AB2     		sxth	r2, r3
 1387 0128 3B8D     		ldrh	r3, [r7, #40]
 1388 012a F868     		ldr	r0, [r7, #12]
 1389 012c FFF7FEFF 		bl	GFXwritePixel
 278:gfx.c         ****                 GFXwritePixel(myGFX,x0 - x, y0 - y, color);
 1390              		.loc 1 278 0
 1391 0130 7A89     		ldrh	r2, [r7, #10]
 1392 0132 3B8B     		ldrh	r3, [r7, #24]
 1393 0134 D31A     		subs	r3, r2, r3
 1394 0136 9BB2     		uxth	r3, r3
 1395 0138 19B2     		sxth	r1, r3
 1396 013a 3A89     		ldrh	r2, [r7, #8]
 1397 013c FB8A     		ldrh	r3, [r7, #22]
 1398 013e D31A     		subs	r3, r2, r3
 1399 0140 9BB2     		uxth	r3, r3
 1400 0142 1AB2     		sxth	r2, r3
 1401 0144 3B8D     		ldrh	r3, [r7, #40]
 1402 0146 F868     		ldr	r0, [r7, #12]
 1403 0148 FFF7FEFF 		bl	GFXwritePixel
 279:gfx.c         ****                 GFXwritePixel(myGFX,x0 + y, y0 + x, color);
 1404              		.loc 1 279 0
 1405 014c 7A89     		ldrh	r2, [r7, #10]
 1406 014e FB8A     		ldrh	r3, [r7, #22]
 1407 0150 1344     		add	r3, r3, r2
 1408 0152 9BB2     		uxth	r3, r3
 1409 0154 19B2     		sxth	r1, r3
 1410 0156 3A89     		ldrh	r2, [r7, #8]
 1411 0158 3B8B     		ldrh	r3, [r7, #24]
 1412 015a 1344     		add	r3, r3, r2
 1413 015c 9BB2     		uxth	r3, r3
 1414 015e 1AB2     		sxth	r2, r3
 1415 0160 3B8D     		ldrh	r3, [r7, #40]
 1416 0162 F868     		ldr	r0, [r7, #12]
 1417 0164 FFF7FEFF 		bl	GFXwritePixel
 280:gfx.c         ****                 GFXwritePixel(myGFX,x0 - y, y0 + x, color);
 1418              		.loc 1 280 0
 1419 0168 7A89     		ldrh	r2, [r7, #10]
 1420 016a FB8A     		ldrh	r3, [r7, #22]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 31


 1421 016c D31A     		subs	r3, r2, r3
 1422 016e 9BB2     		uxth	r3, r3
 1423 0170 19B2     		sxth	r1, r3
 1424 0172 3A89     		ldrh	r2, [r7, #8]
 1425 0174 3B8B     		ldrh	r3, [r7, #24]
 1426 0176 1344     		add	r3, r3, r2
 1427 0178 9BB2     		uxth	r3, r3
 1428 017a 1AB2     		sxth	r2, r3
 1429 017c 3B8D     		ldrh	r3, [r7, #40]
 1430 017e F868     		ldr	r0, [r7, #12]
 1431 0180 FFF7FEFF 		bl	GFXwritePixel
 281:gfx.c         ****                 GFXwritePixel(myGFX,x0 + y, y0 - x, color);
 1432              		.loc 1 281 0
 1433 0184 7A89     		ldrh	r2, [r7, #10]
 1434 0186 FB8A     		ldrh	r3, [r7, #22]
 1435 0188 1344     		add	r3, r3, r2
 1436 018a 9BB2     		uxth	r3, r3
 1437 018c 19B2     		sxth	r1, r3
 1438 018e 3A89     		ldrh	r2, [r7, #8]
 1439 0190 3B8B     		ldrh	r3, [r7, #24]
 1440 0192 D31A     		subs	r3, r2, r3
 1441 0194 9BB2     		uxth	r3, r3
 1442 0196 1AB2     		sxth	r2, r3
 1443 0198 3B8D     		ldrh	r3, [r7, #40]
 1444 019a F868     		ldr	r0, [r7, #12]
 1445 019c FFF7FEFF 		bl	GFXwritePixel
 282:gfx.c         ****                 GFXwritePixel(myGFX,x0 - y, y0 - x, color);
 1446              		.loc 1 282 0
 1447 01a0 7A89     		ldrh	r2, [r7, #10]
 1448 01a2 FB8A     		ldrh	r3, [r7, #22]
 1449 01a4 D31A     		subs	r3, r2, r3
 1450 01a6 9BB2     		uxth	r3, r3
 1451 01a8 19B2     		sxth	r1, r3
 1452 01aa 3A89     		ldrh	r2, [r7, #8]
 1453 01ac 3B8B     		ldrh	r3, [r7, #24]
 1454 01ae D31A     		subs	r3, r2, r3
 1455 01b0 9BB2     		uxth	r3, r3
 1456 01b2 1AB2     		sxth	r2, r3
 1457 01b4 3B8D     		ldrh	r3, [r7, #40]
 1458 01b6 F868     		ldr	r0, [r7, #12]
 1459 01b8 FFF7FEFF 		bl	GFXwritePixel
 1460              	.L49:
 265:gfx.c         ****                 if (f >= 0) {
 1461              		.loc 1 265 0
 1462 01bc B7F91820 		ldrsh	r2, [r7, #24]
 1463 01c0 B7F91630 		ldrsh	r3, [r7, #22]
 1464 01c4 9A42     		cmp	r2, r3
 1465 01c6 FFF667AF 		blt	.L51
 283:gfx.c         ****             }
 284:gfx.c         ****             
 285:gfx.c         ****         }
 1466              		.loc 1 285 0
 1467 01ca 00BF     		nop
 1468 01cc 2037     		adds	r7, r7, #32
 1469              		.cfi_def_cfa_offset 8
 1470 01ce BD46     		mov	sp, r7
 1471              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 32


 1472              		@ sp needed
 1473 01d0 80BD     		pop	{r7, pc}
 1474              		.cfi_endproc
 1475              	.LFE78:
 1476              		.size	GFXdrawCircle, .-GFXdrawCircle
 1477 01d2 00BF     		.section	.text.GFXdrawCircleHelper,"ax",%progbits
 1478              		.align	2
 1479              		.global	GFXdrawCircleHelper
 1480              		.thumb
 1481              		.thumb_func
 1482              		.type	GFXdrawCircleHelper, %function
 1483              	GFXdrawCircleHelper:
 1484              	.LFB79:
 286:gfx.c         ****         
 287:gfx.c         ****         void GFXdrawCircleHelper(GFX* myGFX,int16_t x0, int16_t y0,
 288:gfx.c         ****                                  int16_t r, uint8_t cornername, uint16_t color) {
 1485              		.loc 1 288 0
 1486              		.cfi_startproc
 1487              		@ args = 8, pretend = 0, frame = 32
 1488              		@ frame_needed = 1, uses_anonymous_args = 0
 1489 0000 80B5     		push	{r7, lr}
 1490              		.cfi_def_cfa_offset 8
 1491              		.cfi_offset 7, -8
 1492              		.cfi_offset 14, -4
 1493 0002 88B0     		sub	sp, sp, #32
 1494              		.cfi_def_cfa_offset 40
 1495 0004 00AF     		add	r7, sp, #0
 1496              		.cfi_def_cfa_register 7
 1497 0006 F860     		str	r0, [r7, #12]
 1498 0008 0846     		mov	r0, r1
 1499 000a 1146     		mov	r1, r2
 1500 000c 1A46     		mov	r2, r3
 1501 000e 0346     		mov	r3, r0	@ movhi
 1502 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1503 0012 0B46     		mov	r3, r1	@ movhi
 1504 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1505 0016 1346     		mov	r3, r2	@ movhi
 1506 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 289:gfx.c         ****             int16_t f     = 1 - r;
 1507              		.loc 1 289 0
 1508 001a FB88     		ldrh	r3, [r7, #6]
 1509 001c C3F10103 		rsb	r3, r3, #1
 1510 0020 9BB2     		uxth	r3, r3
 1511 0022 FB83     		strh	r3, [r7, #30]	@ movhi
 290:gfx.c         ****             int16_t ddF_x = 1;
 1512              		.loc 1 290 0
 1513 0024 0123     		movs	r3, #1
 1514 0026 BB83     		strh	r3, [r7, #28]	@ movhi
 291:gfx.c         ****             int16_t ddF_y = -2 * r;
 1515              		.loc 1 291 0
 1516 0028 FB88     		ldrh	r3, [r7, #6]
 1517 002a 1A46     		mov	r2, r3	@ movhi
 1518 002c D203     		lsls	r2, r2, #15
 1519 002e D31A     		subs	r3, r2, r3
 1520 0030 5B00     		lsls	r3, r3, #1
 1521 0032 9BB2     		uxth	r3, r3
 1522 0034 7B83     		strh	r3, [r7, #26]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 33


 292:gfx.c         ****             int16_t x     = 0;
 1523              		.loc 1 292 0
 1524 0036 0023     		movs	r3, #0
 1525 0038 3B83     		strh	r3, [r7, #24]	@ movhi
 293:gfx.c         ****             int16_t y     = r;
 1526              		.loc 1 293 0
 1527 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1528 003c FB82     		strh	r3, [r7, #22]	@ movhi
 294:gfx.c         ****             
 295:gfx.c         ****             while (x<y) {
 1529              		.loc 1 295 0
 1530 003e A9E0     		b	.L53
 1531              	.L58:
 296:gfx.c         ****                 if (f >= 0) {
 1532              		.loc 1 296 0
 1533 0040 B7F91E30 		ldrsh	r3, [r7, #30]
 1534 0044 002B     		cmp	r3, #0
 1535 0046 0EDB     		blt	.L54
 297:gfx.c         ****                     y--;
 1536              		.loc 1 297 0
 1537 0048 B7F91630 		ldrsh	r3, [r7, #22]
 1538 004c 9BB2     		uxth	r3, r3
 1539 004e 013B     		subs	r3, r3, #1
 1540 0050 9BB2     		uxth	r3, r3
 1541 0052 FB82     		strh	r3, [r7, #22]	@ movhi
 298:gfx.c         ****                     ddF_y += 2;
 1542              		.loc 1 298 0
 1543 0054 7B8B     		ldrh	r3, [r7, #26]
 1544 0056 0233     		adds	r3, r3, #2
 1545 0058 9BB2     		uxth	r3, r3
 1546 005a 7B83     		strh	r3, [r7, #26]	@ movhi
 299:gfx.c         ****                     f     += ddF_y;
 1547              		.loc 1 299 0
 1548 005c FA8B     		ldrh	r2, [r7, #30]
 1549 005e 7B8B     		ldrh	r3, [r7, #26]
 1550 0060 1344     		add	r3, r3, r2
 1551 0062 9BB2     		uxth	r3, r3
 1552 0064 FB83     		strh	r3, [r7, #30]	@ movhi
 1553              	.L54:
 300:gfx.c         ****                 }
 301:gfx.c         ****                 x++;
 1554              		.loc 1 301 0
 1555 0066 B7F91830 		ldrsh	r3, [r7, #24]
 1556 006a 9BB2     		uxth	r3, r3
 1557 006c 0133     		adds	r3, r3, #1
 1558 006e 9BB2     		uxth	r3, r3
 1559 0070 3B83     		strh	r3, [r7, #24]	@ movhi
 302:gfx.c         ****                 ddF_x += 2;
 1560              		.loc 1 302 0
 1561 0072 BB8B     		ldrh	r3, [r7, #28]
 1562 0074 0233     		adds	r3, r3, #2
 1563 0076 9BB2     		uxth	r3, r3
 1564 0078 BB83     		strh	r3, [r7, #28]	@ movhi
 303:gfx.c         ****                 f     += ddF_x;
 1565              		.loc 1 303 0
 1566 007a FA8B     		ldrh	r2, [r7, #30]
 1567 007c BB8B     		ldrh	r3, [r7, #28]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 34


 1568 007e 1344     		add	r3, r3, r2
 1569 0080 9BB2     		uxth	r3, r3
 1570 0082 FB83     		strh	r3, [r7, #30]	@ movhi
 304:gfx.c         ****                 if (cornername & 0x4) {
 1571              		.loc 1 304 0
 1572 0084 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1573 0088 03F00403 		and	r3, r3, #4
 1574 008c 002B     		cmp	r3, #0
 1575 008e 1BD0     		beq	.L55
 305:gfx.c         ****                     GFXwritePixel(myGFX, x0 + x, y0 + y, color);
 1576              		.loc 1 305 0
 1577 0090 7A89     		ldrh	r2, [r7, #10]
 1578 0092 3B8B     		ldrh	r3, [r7, #24]
 1579 0094 1344     		add	r3, r3, r2
 1580 0096 9BB2     		uxth	r3, r3
 1581 0098 19B2     		sxth	r1, r3
 1582 009a 3A89     		ldrh	r2, [r7, #8]
 1583 009c FB8A     		ldrh	r3, [r7, #22]
 1584 009e 1344     		add	r3, r3, r2
 1585 00a0 9BB2     		uxth	r3, r3
 1586 00a2 1AB2     		sxth	r2, r3
 1587 00a4 BB8D     		ldrh	r3, [r7, #44]
 1588 00a6 F868     		ldr	r0, [r7, #12]
 1589 00a8 FFF7FEFF 		bl	GFXwritePixel
 306:gfx.c         ****                     GFXwritePixel(myGFX, x0 + y, y0 + x, color);
 1590              		.loc 1 306 0
 1591 00ac 7A89     		ldrh	r2, [r7, #10]
 1592 00ae FB8A     		ldrh	r3, [r7, #22]
 1593 00b0 1344     		add	r3, r3, r2
 1594 00b2 9BB2     		uxth	r3, r3
 1595 00b4 19B2     		sxth	r1, r3
 1596 00b6 3A89     		ldrh	r2, [r7, #8]
 1597 00b8 3B8B     		ldrh	r3, [r7, #24]
 1598 00ba 1344     		add	r3, r3, r2
 1599 00bc 9BB2     		uxth	r3, r3
 1600 00be 1AB2     		sxth	r2, r3
 1601 00c0 BB8D     		ldrh	r3, [r7, #44]
 1602 00c2 F868     		ldr	r0, [r7, #12]
 1603 00c4 FFF7FEFF 		bl	GFXwritePixel
 1604              	.L55:
 307:gfx.c         ****                 }
 308:gfx.c         ****                 if (cornername & 0x2) {
 1605              		.loc 1 308 0
 1606 00c8 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1607 00cc 03F00203 		and	r3, r3, #2
 1608 00d0 002B     		cmp	r3, #0
 1609 00d2 1BD0     		beq	.L56
 309:gfx.c         ****                     GFXwritePixel(myGFX, x0 + x, y0 - y, color);
 1610              		.loc 1 309 0
 1611 00d4 7A89     		ldrh	r2, [r7, #10]
 1612 00d6 3B8B     		ldrh	r3, [r7, #24]
 1613 00d8 1344     		add	r3, r3, r2
 1614 00da 9BB2     		uxth	r3, r3
 1615 00dc 19B2     		sxth	r1, r3
 1616 00de 3A89     		ldrh	r2, [r7, #8]
 1617 00e0 FB8A     		ldrh	r3, [r7, #22]
 1618 00e2 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 35


 1619 00e4 9BB2     		uxth	r3, r3
 1620 00e6 1AB2     		sxth	r2, r3
 1621 00e8 BB8D     		ldrh	r3, [r7, #44]
 1622 00ea F868     		ldr	r0, [r7, #12]
 1623 00ec FFF7FEFF 		bl	GFXwritePixel
 310:gfx.c         ****                     GFXwritePixel(myGFX, x0 + y, y0 - x, color);
 1624              		.loc 1 310 0
 1625 00f0 7A89     		ldrh	r2, [r7, #10]
 1626 00f2 FB8A     		ldrh	r3, [r7, #22]
 1627 00f4 1344     		add	r3, r3, r2
 1628 00f6 9BB2     		uxth	r3, r3
 1629 00f8 19B2     		sxth	r1, r3
 1630 00fa 3A89     		ldrh	r2, [r7, #8]
 1631 00fc 3B8B     		ldrh	r3, [r7, #24]
 1632 00fe D31A     		subs	r3, r2, r3
 1633 0100 9BB2     		uxth	r3, r3
 1634 0102 1AB2     		sxth	r2, r3
 1635 0104 BB8D     		ldrh	r3, [r7, #44]
 1636 0106 F868     		ldr	r0, [r7, #12]
 1637 0108 FFF7FEFF 		bl	GFXwritePixel
 1638              	.L56:
 311:gfx.c         ****                 }
 312:gfx.c         ****                 if (cornername & 0x8) {
 1639              		.loc 1 312 0
 1640 010c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1641 0110 03F00803 		and	r3, r3, #8
 1642 0114 002B     		cmp	r3, #0
 1643 0116 1BD0     		beq	.L57
 313:gfx.c         ****                     GFXwritePixel(myGFX, x0 - y, y0 + x, color);
 1644              		.loc 1 313 0
 1645 0118 7A89     		ldrh	r2, [r7, #10]
 1646 011a FB8A     		ldrh	r3, [r7, #22]
 1647 011c D31A     		subs	r3, r2, r3
 1648 011e 9BB2     		uxth	r3, r3
 1649 0120 19B2     		sxth	r1, r3
 1650 0122 3A89     		ldrh	r2, [r7, #8]
 1651 0124 3B8B     		ldrh	r3, [r7, #24]
 1652 0126 1344     		add	r3, r3, r2
 1653 0128 9BB2     		uxth	r3, r3
 1654 012a 1AB2     		sxth	r2, r3
 1655 012c BB8D     		ldrh	r3, [r7, #44]
 1656 012e F868     		ldr	r0, [r7, #12]
 1657 0130 FFF7FEFF 		bl	GFXwritePixel
 314:gfx.c         ****                     GFXwritePixel(myGFX, x0 - x, y0 + y, color);
 1658              		.loc 1 314 0
 1659 0134 7A89     		ldrh	r2, [r7, #10]
 1660 0136 3B8B     		ldrh	r3, [r7, #24]
 1661 0138 D31A     		subs	r3, r2, r3
 1662 013a 9BB2     		uxth	r3, r3
 1663 013c 19B2     		sxth	r1, r3
 1664 013e 3A89     		ldrh	r2, [r7, #8]
 1665 0140 FB8A     		ldrh	r3, [r7, #22]
 1666 0142 1344     		add	r3, r3, r2
 1667 0144 9BB2     		uxth	r3, r3
 1668 0146 1AB2     		sxth	r2, r3
 1669 0148 BB8D     		ldrh	r3, [r7, #44]
 1670 014a F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 36


 1671 014c FFF7FEFF 		bl	GFXwritePixel
 1672              	.L57:
 315:gfx.c         ****                 }
 316:gfx.c         ****                 if (cornername & 0x1) {
 1673              		.loc 1 316 0
 1674 0150 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1675 0154 03F00103 		and	r3, r3, #1
 1676 0158 002B     		cmp	r3, #0
 1677 015a 1BD0     		beq	.L53
 317:gfx.c         ****                     GFXwritePixel(myGFX, x0 - y, y0 - x, color);
 1678              		.loc 1 317 0
 1679 015c 7A89     		ldrh	r2, [r7, #10]
 1680 015e FB8A     		ldrh	r3, [r7, #22]
 1681 0160 D31A     		subs	r3, r2, r3
 1682 0162 9BB2     		uxth	r3, r3
 1683 0164 19B2     		sxth	r1, r3
 1684 0166 3A89     		ldrh	r2, [r7, #8]
 1685 0168 3B8B     		ldrh	r3, [r7, #24]
 1686 016a D31A     		subs	r3, r2, r3
 1687 016c 9BB2     		uxth	r3, r3
 1688 016e 1AB2     		sxth	r2, r3
 1689 0170 BB8D     		ldrh	r3, [r7, #44]
 1690 0172 F868     		ldr	r0, [r7, #12]
 1691 0174 FFF7FEFF 		bl	GFXwritePixel
 318:gfx.c         ****                     GFXwritePixel(myGFX, x0 - x, y0 - y, color);
 1692              		.loc 1 318 0
 1693 0178 7A89     		ldrh	r2, [r7, #10]
 1694 017a 3B8B     		ldrh	r3, [r7, #24]
 1695 017c D31A     		subs	r3, r2, r3
 1696 017e 9BB2     		uxth	r3, r3
 1697 0180 19B2     		sxth	r1, r3
 1698 0182 3A89     		ldrh	r2, [r7, #8]
 1699 0184 FB8A     		ldrh	r3, [r7, #22]
 1700 0186 D31A     		subs	r3, r2, r3
 1701 0188 9BB2     		uxth	r3, r3
 1702 018a 1AB2     		sxth	r2, r3
 1703 018c BB8D     		ldrh	r3, [r7, #44]
 1704 018e F868     		ldr	r0, [r7, #12]
 1705 0190 FFF7FEFF 		bl	GFXwritePixel
 1706              	.L53:
 295:gfx.c         ****                 if (f >= 0) {
 1707              		.loc 1 295 0
 1708 0194 B7F91820 		ldrsh	r2, [r7, #24]
 1709 0198 B7F91630 		ldrsh	r3, [r7, #22]
 1710 019c 9A42     		cmp	r2, r3
 1711 019e FFF64FAF 		blt	.L58
 319:gfx.c         ****                 }
 320:gfx.c         ****             }
 321:gfx.c         ****         }
 1712              		.loc 1 321 0
 1713 01a2 00BF     		nop
 1714 01a4 2037     		adds	r7, r7, #32
 1715              		.cfi_def_cfa_offset 8
 1716 01a6 BD46     		mov	sp, r7
 1717              		.cfi_def_cfa_register 13
 1718              		@ sp needed
 1719 01a8 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 37


 1720              		.cfi_endproc
 1721              	.LFE79:
 1722              		.size	GFXdrawCircleHelper, .-GFXdrawCircleHelper
 1723 01aa 00BF     		.section	.text.GFXfillCircle,"ax",%progbits
 1724              		.align	2
 1725              		.global	GFXfillCircle
 1726              		.thumb
 1727              		.thumb_func
 1728              		.type	GFXfillCircle, %function
 1729              	GFXfillCircle:
 1730              	.LFB80:
 322:gfx.c         ****         
 323:gfx.c         ****         void GFXfillCircle(GFX* myGFX, int16_t x0, int16_t y0, int16_t r,
 324:gfx.c         ****                            uint16_t color) {
 1731              		.loc 1 324 0
 1732              		.cfi_startproc
 1733              		@ args = 4, pretend = 0, frame = 16
 1734              		@ frame_needed = 1, uses_anonymous_args = 0
 1735 0000 80B5     		push	{r7, lr}
 1736              		.cfi_def_cfa_offset 8
 1737              		.cfi_offset 7, -8
 1738              		.cfi_offset 14, -4
 1739 0002 88B0     		sub	sp, sp, #32
 1740              		.cfi_def_cfa_offset 40
 1741 0004 04AF     		add	r7, sp, #16
 1742              		.cfi_def_cfa 7, 24
 1743 0006 F860     		str	r0, [r7, #12]
 1744 0008 0846     		mov	r0, r1
 1745 000a 1146     		mov	r1, r2
 1746 000c 1A46     		mov	r2, r3
 1747 000e 0346     		mov	r3, r0	@ movhi
 1748 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1749 0012 0B46     		mov	r3, r1	@ movhi
 1750 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1751 0016 1346     		mov	r3, r2	@ movhi
 1752 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 325:gfx.c         ****             
 326:gfx.c         ****             GFXwriteFastVLine(myGFX, x0, y0-r, 2*r+1, color);
 1753              		.loc 1 326 0
 1754 001a 3A89     		ldrh	r2, [r7, #8]
 1755 001c FB88     		ldrh	r3, [r7, #6]
 1756 001e D31A     		subs	r3, r2, r3
 1757 0020 9BB2     		uxth	r3, r3
 1758 0022 1AB2     		sxth	r2, r3
 1759 0024 FB88     		ldrh	r3, [r7, #6]
 1760 0026 5B00     		lsls	r3, r3, #1
 1761 0028 9BB2     		uxth	r3, r3
 1762 002a 0133     		adds	r3, r3, #1
 1763 002c 9BB2     		uxth	r3, r3
 1764 002e 18B2     		sxth	r0, r3
 1765 0030 B7F90A10 		ldrsh	r1, [r7, #10]
 1766 0034 3B8B     		ldrh	r3, [r7, #24]
 1767 0036 0093     		str	r3, [sp]
 1768 0038 0346     		mov	r3, r0
 1769 003a F868     		ldr	r0, [r7, #12]
 1770 003c FFF7FEFF 		bl	GFXwriteFastVLine
 327:gfx.c         ****             GFXfillCircleHelper(myGFX, x0, y0, r, 3, 0, color);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 38


 1771              		.loc 1 327 0
 1772 0040 B7F90600 		ldrsh	r0, [r7, #6]
 1773 0044 B7F90820 		ldrsh	r2, [r7, #8]
 1774 0048 B7F90A10 		ldrsh	r1, [r7, #10]
 1775 004c 3B8B     		ldrh	r3, [r7, #24]
 1776 004e 0293     		str	r3, [sp, #8]
 1777 0050 0023     		movs	r3, #0
 1778 0052 0193     		str	r3, [sp, #4]
 1779 0054 0323     		movs	r3, #3
 1780 0056 0093     		str	r3, [sp]
 1781 0058 0346     		mov	r3, r0
 1782 005a F868     		ldr	r0, [r7, #12]
 1783 005c FFF7FEFF 		bl	GFXfillCircleHelper
 328:gfx.c         ****             
 329:gfx.c         ****         }
 1784              		.loc 1 329 0
 1785 0060 00BF     		nop
 1786 0062 1037     		adds	r7, r7, #16
 1787              		.cfi_def_cfa_offset 8
 1788 0064 BD46     		mov	sp, r7
 1789              		.cfi_def_cfa_register 13
 1790              		@ sp needed
 1791 0066 80BD     		pop	{r7, pc}
 1792              		.cfi_endproc
 1793              	.LFE80:
 1794              		.size	GFXfillCircle, .-GFXfillCircle
 1795              		.section	.text.GFXfillCircleHelper,"ax",%progbits
 1796              		.align	2
 1797              		.global	GFXfillCircleHelper
 1798              		.thumb
 1799              		.thumb_func
 1800              		.type	GFXfillCircleHelper, %function
 1801              	GFXfillCircleHelper:
 1802              	.LFB81:
 330:gfx.c         ****         
 331:gfx.c         ****         // Used to do circles and roundrects
 332:gfx.c         ****         void GFXfillCircleHelper(GFX* myGFX, int16_t x0, int16_t y0, int16_t r,
 333:gfx.c         ****                                  uint8_t cornername, int16_t delta, uint16_t color) {
 1803              		.loc 1 333 0
 1804              		.cfi_startproc
 1805              		@ args = 12, pretend = 0, frame = 32
 1806              		@ frame_needed = 1, uses_anonymous_args = 0
 1807 0000 80B5     		push	{r7, lr}
 1808              		.cfi_def_cfa_offset 8
 1809              		.cfi_offset 7, -8
 1810              		.cfi_offset 14, -4
 1811 0002 8AB0     		sub	sp, sp, #40
 1812              		.cfi_def_cfa_offset 48
 1813 0004 02AF     		add	r7, sp, #8
 1814              		.cfi_def_cfa 7, 40
 1815 0006 F860     		str	r0, [r7, #12]
 1816 0008 0846     		mov	r0, r1
 1817 000a 1146     		mov	r1, r2
 1818 000c 1A46     		mov	r2, r3
 1819 000e 0346     		mov	r3, r0	@ movhi
 1820 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1821 0012 0B46     		mov	r3, r1	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 39


 1822 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1823 0016 1346     		mov	r3, r2	@ movhi
 1824 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 334:gfx.c         ****             
 335:gfx.c         ****             int16_t f     = 1 - r;
 1825              		.loc 1 335 0
 1826 001a FB88     		ldrh	r3, [r7, #6]
 1827 001c C3F10103 		rsb	r3, r3, #1
 1828 0020 9BB2     		uxth	r3, r3
 1829 0022 FB83     		strh	r3, [r7, #30]	@ movhi
 336:gfx.c         ****             int16_t ddF_x = 1;
 1830              		.loc 1 336 0
 1831 0024 0123     		movs	r3, #1
 1832 0026 BB83     		strh	r3, [r7, #28]	@ movhi
 337:gfx.c         ****             int16_t ddF_y = -2 * r;
 1833              		.loc 1 337 0
 1834 0028 FB88     		ldrh	r3, [r7, #6]
 1835 002a 1A46     		mov	r2, r3	@ movhi
 1836 002c D203     		lsls	r2, r2, #15
 1837 002e D31A     		subs	r3, r2, r3
 1838 0030 5B00     		lsls	r3, r3, #1
 1839 0032 9BB2     		uxth	r3, r3
 1840 0034 7B83     		strh	r3, [r7, #26]	@ movhi
 338:gfx.c         ****             int16_t x     = 0;
 1841              		.loc 1 338 0
 1842 0036 0023     		movs	r3, #0
 1843 0038 3B83     		strh	r3, [r7, #24]	@ movhi
 339:gfx.c         ****             int16_t y     = r;
 1844              		.loc 1 339 0
 1845 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1846 003c FB82     		strh	r3, [r7, #22]	@ movhi
 340:gfx.c         ****             
 341:gfx.c         ****             while (x<y) {
 1847              		.loc 1 341 0
 1848 003e 95E0     		b	.L61
 1849              	.L64:
 342:gfx.c         ****                 if (f >= 0) {
 1850              		.loc 1 342 0
 1851 0040 B7F91E30 		ldrsh	r3, [r7, #30]
 1852 0044 002B     		cmp	r3, #0
 1853 0046 0EDB     		blt	.L62
 343:gfx.c         ****                     y--;
 1854              		.loc 1 343 0
 1855 0048 B7F91630 		ldrsh	r3, [r7, #22]
 1856 004c 9BB2     		uxth	r3, r3
 1857 004e 013B     		subs	r3, r3, #1
 1858 0050 9BB2     		uxth	r3, r3
 1859 0052 FB82     		strh	r3, [r7, #22]	@ movhi
 344:gfx.c         ****                     ddF_y += 2;
 1860              		.loc 1 344 0
 1861 0054 7B8B     		ldrh	r3, [r7, #26]
 1862 0056 0233     		adds	r3, r3, #2
 1863 0058 9BB2     		uxth	r3, r3
 1864 005a 7B83     		strh	r3, [r7, #26]	@ movhi
 345:gfx.c         ****                     f     += ddF_y;
 1865              		.loc 1 345 0
 1866 005c FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 40


 1867 005e 7B8B     		ldrh	r3, [r7, #26]
 1868 0060 1344     		add	r3, r3, r2
 1869 0062 9BB2     		uxth	r3, r3
 1870 0064 FB83     		strh	r3, [r7, #30]	@ movhi
 1871              	.L62:
 346:gfx.c         ****                 }
 347:gfx.c         ****                 x++;
 1872              		.loc 1 347 0
 1873 0066 B7F91830 		ldrsh	r3, [r7, #24]
 1874 006a 9BB2     		uxth	r3, r3
 1875 006c 0133     		adds	r3, r3, #1
 1876 006e 9BB2     		uxth	r3, r3
 1877 0070 3B83     		strh	r3, [r7, #24]	@ movhi
 348:gfx.c         ****                 ddF_x += 2;
 1878              		.loc 1 348 0
 1879 0072 BB8B     		ldrh	r3, [r7, #28]
 1880 0074 0233     		adds	r3, r3, #2
 1881 0076 9BB2     		uxth	r3, r3
 1882 0078 BB83     		strh	r3, [r7, #28]	@ movhi
 349:gfx.c         ****                 f     += ddF_x;
 1883              		.loc 1 349 0
 1884 007a FA8B     		ldrh	r2, [r7, #30]
 1885 007c BB8B     		ldrh	r3, [r7, #28]
 1886 007e 1344     		add	r3, r3, r2
 1887 0080 9BB2     		uxth	r3, r3
 1888 0082 FB83     		strh	r3, [r7, #30]	@ movhi
 350:gfx.c         ****                 
 351:gfx.c         ****                 if (cornername & 0x1) {
 1889              		.loc 1 351 0
 1890 0084 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1891 0088 03F00103 		and	r3, r3, #1
 1892 008c 002B     		cmp	r3, #0
 1893 008e 33D0     		beq	.L63
 352:gfx.c         ****                     GFXwriteFastVLine(myGFX, x0+x, y0-y, 2*y+1+delta, color);
 1894              		.loc 1 352 0
 1895 0090 7A89     		ldrh	r2, [r7, #10]
 1896 0092 3B8B     		ldrh	r3, [r7, #24]
 1897 0094 1344     		add	r3, r3, r2
 1898 0096 9BB2     		uxth	r3, r3
 1899 0098 19B2     		sxth	r1, r3
 1900 009a 3A89     		ldrh	r2, [r7, #8]
 1901 009c FB8A     		ldrh	r3, [r7, #22]
 1902 009e D31A     		subs	r3, r2, r3
 1903 00a0 9BB2     		uxth	r3, r3
 1904 00a2 18B2     		sxth	r0, r3
 1905 00a4 FB8A     		ldrh	r3, [r7, #22]
 1906 00a6 5B00     		lsls	r3, r3, #1
 1907 00a8 9AB2     		uxth	r2, r3
 1908 00aa BB8D     		ldrh	r3, [r7, #44]
 1909 00ac 1344     		add	r3, r3, r2
 1910 00ae 9BB2     		uxth	r3, r3
 1911 00b0 0133     		adds	r3, r3, #1
 1912 00b2 9BB2     		uxth	r3, r3
 1913 00b4 1AB2     		sxth	r2, r3
 1914 00b6 3B8E     		ldrh	r3, [r7, #48]
 1915 00b8 0093     		str	r3, [sp]
 1916 00ba 1346     		mov	r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 41


 1917 00bc 0246     		mov	r2, r0
 1918 00be F868     		ldr	r0, [r7, #12]
 1919 00c0 FFF7FEFF 		bl	GFXwriteFastVLine
 353:gfx.c         ****                     GFXwriteFastVLine(myGFX, x0+y, y0-x, 2*x+1+delta, color);
 1920              		.loc 1 353 0
 1921 00c4 7A89     		ldrh	r2, [r7, #10]
 1922 00c6 FB8A     		ldrh	r3, [r7, #22]
 1923 00c8 1344     		add	r3, r3, r2
 1924 00ca 9BB2     		uxth	r3, r3
 1925 00cc 19B2     		sxth	r1, r3
 1926 00ce 3A89     		ldrh	r2, [r7, #8]
 1927 00d0 3B8B     		ldrh	r3, [r7, #24]
 1928 00d2 D31A     		subs	r3, r2, r3
 1929 00d4 9BB2     		uxth	r3, r3
 1930 00d6 18B2     		sxth	r0, r3
 1931 00d8 3B8B     		ldrh	r3, [r7, #24]
 1932 00da 5B00     		lsls	r3, r3, #1
 1933 00dc 9AB2     		uxth	r2, r3
 1934 00de BB8D     		ldrh	r3, [r7, #44]
 1935 00e0 1344     		add	r3, r3, r2
 1936 00e2 9BB2     		uxth	r3, r3
 1937 00e4 0133     		adds	r3, r3, #1
 1938 00e6 9BB2     		uxth	r3, r3
 1939 00e8 1AB2     		sxth	r2, r3
 1940 00ea 3B8E     		ldrh	r3, [r7, #48]
 1941 00ec 0093     		str	r3, [sp]
 1942 00ee 1346     		mov	r3, r2
 1943 00f0 0246     		mov	r2, r0
 1944 00f2 F868     		ldr	r0, [r7, #12]
 1945 00f4 FFF7FEFF 		bl	GFXwriteFastVLine
 1946              	.L63:
 354:gfx.c         ****                 }
 355:gfx.c         ****                 if (cornername & 0x2) {
 1947              		.loc 1 355 0
 1948 00f8 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1949 00fc 03F00203 		and	r3, r3, #2
 1950 0100 002B     		cmp	r3, #0
 1951 0102 33D0     		beq	.L61
 356:gfx.c         ****                     GFXwriteFastVLine(myGFX, x0-x, y0-y, 2*y+1+delta, color);
 1952              		.loc 1 356 0
 1953 0104 7A89     		ldrh	r2, [r7, #10]
 1954 0106 3B8B     		ldrh	r3, [r7, #24]
 1955 0108 D31A     		subs	r3, r2, r3
 1956 010a 9BB2     		uxth	r3, r3
 1957 010c 19B2     		sxth	r1, r3
 1958 010e 3A89     		ldrh	r2, [r7, #8]
 1959 0110 FB8A     		ldrh	r3, [r7, #22]
 1960 0112 D31A     		subs	r3, r2, r3
 1961 0114 9BB2     		uxth	r3, r3
 1962 0116 18B2     		sxth	r0, r3
 1963 0118 FB8A     		ldrh	r3, [r7, #22]
 1964 011a 5B00     		lsls	r3, r3, #1
 1965 011c 9AB2     		uxth	r2, r3
 1966 011e BB8D     		ldrh	r3, [r7, #44]
 1967 0120 1344     		add	r3, r3, r2
 1968 0122 9BB2     		uxth	r3, r3
 1969 0124 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 42


 1970 0126 9BB2     		uxth	r3, r3
 1971 0128 1AB2     		sxth	r2, r3
 1972 012a 3B8E     		ldrh	r3, [r7, #48]
 1973 012c 0093     		str	r3, [sp]
 1974 012e 1346     		mov	r3, r2
 1975 0130 0246     		mov	r2, r0
 1976 0132 F868     		ldr	r0, [r7, #12]
 1977 0134 FFF7FEFF 		bl	GFXwriteFastVLine
 357:gfx.c         ****                     GFXwriteFastVLine(myGFX, x0-y, y0-x, 2*x+1+delta, color);
 1978              		.loc 1 357 0
 1979 0138 7A89     		ldrh	r2, [r7, #10]
 1980 013a FB8A     		ldrh	r3, [r7, #22]
 1981 013c D31A     		subs	r3, r2, r3
 1982 013e 9BB2     		uxth	r3, r3
 1983 0140 19B2     		sxth	r1, r3
 1984 0142 3A89     		ldrh	r2, [r7, #8]
 1985 0144 3B8B     		ldrh	r3, [r7, #24]
 1986 0146 D31A     		subs	r3, r2, r3
 1987 0148 9BB2     		uxth	r3, r3
 1988 014a 18B2     		sxth	r0, r3
 1989 014c 3B8B     		ldrh	r3, [r7, #24]
 1990 014e 5B00     		lsls	r3, r3, #1
 1991 0150 9AB2     		uxth	r2, r3
 1992 0152 BB8D     		ldrh	r3, [r7, #44]
 1993 0154 1344     		add	r3, r3, r2
 1994 0156 9BB2     		uxth	r3, r3
 1995 0158 0133     		adds	r3, r3, #1
 1996 015a 9BB2     		uxth	r3, r3
 1997 015c 1AB2     		sxth	r2, r3
 1998 015e 3B8E     		ldrh	r3, [r7, #48]
 1999 0160 0093     		str	r3, [sp]
 2000 0162 1346     		mov	r3, r2
 2001 0164 0246     		mov	r2, r0
 2002 0166 F868     		ldr	r0, [r7, #12]
 2003 0168 FFF7FEFF 		bl	GFXwriteFastVLine
 2004              	.L61:
 341:gfx.c         ****                 if (f >= 0) {
 2005              		.loc 1 341 0
 2006 016c B7F91820 		ldrsh	r2, [r7, #24]
 2007 0170 B7F91630 		ldrsh	r3, [r7, #22]
 2008 0174 9A42     		cmp	r2, r3
 2009 0176 FFF663AF 		blt	.L64
 358:gfx.c         ****                 }
 359:gfx.c         ****             }
 360:gfx.c         ****         }
 2010              		.loc 1 360 0
 2011 017a 00BF     		nop
 2012 017c 2037     		adds	r7, r7, #32
 2013              		.cfi_def_cfa_offset 8
 2014 017e BD46     		mov	sp, r7
 2015              		.cfi_def_cfa_register 13
 2016              		@ sp needed
 2017 0180 80BD     		pop	{r7, pc}
 2018              		.cfi_endproc
 2019              	.LFE81:
 2020              		.size	GFXfillCircleHelper, .-GFXfillCircleHelper
 2021 0182 00BF     		.section	.text.GFXdrawRect,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 43


 2022              		.align	2
 2023              		.global	GFXdrawRect
 2024              		.thumb
 2025              		.thumb_func
 2026              		.type	GFXdrawRect, %function
 2027              	GFXdrawRect:
 2028              	.LFB82:
 361:gfx.c         ****         
 362:gfx.c         ****         // Draw a rectangle
 363:gfx.c         ****         void GFXdrawRect(GFX* myGFX, int16_t x, int16_t y, int16_t w, int16_t h,
 364:gfx.c         ****                          uint16_t color) {
 2029              		.loc 1 364 0
 2030              		.cfi_startproc
 2031              		@ args = 8, pretend = 0, frame = 16
 2032              		@ frame_needed = 1, uses_anonymous_args = 0
 2033 0000 80B5     		push	{r7, lr}
 2034              		.cfi_def_cfa_offset 8
 2035              		.cfi_offset 7, -8
 2036              		.cfi_offset 14, -4
 2037 0002 86B0     		sub	sp, sp, #24
 2038              		.cfi_def_cfa_offset 32
 2039 0004 02AF     		add	r7, sp, #8
 2040              		.cfi_def_cfa 7, 24
 2041 0006 F860     		str	r0, [r7, #12]
 2042 0008 0846     		mov	r0, r1
 2043 000a 1146     		mov	r1, r2
 2044 000c 1A46     		mov	r2, r3
 2045 000e 0346     		mov	r3, r0	@ movhi
 2046 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 2047 0012 0B46     		mov	r3, r1	@ movhi
 2048 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2049 0016 1346     		mov	r3, r2	@ movhi
 2050 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 365:gfx.c         ****             
 366:gfx.c         ****             GFXwriteFastHLine(myGFX, x, y, w, color);
 2051              		.loc 1 366 0
 2052 001a B7F90600 		ldrsh	r0, [r7, #6]
 2053 001e B7F90820 		ldrsh	r2, [r7, #8]
 2054 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 2055 0026 BB8B     		ldrh	r3, [r7, #28]
 2056 0028 0093     		str	r3, [sp]
 2057 002a 0346     		mov	r3, r0
 2058 002c F868     		ldr	r0, [r7, #12]
 2059 002e FFF7FEFF 		bl	GFXwriteFastHLine
 367:gfx.c         ****             GFXwriteFastHLine(myGFX, x, y+h-1, w, color);
 2060              		.loc 1 367 0
 2061 0032 3A89     		ldrh	r2, [r7, #8]
 2062 0034 3B8B     		ldrh	r3, [r7, #24]
 2063 0036 1344     		add	r3, r3, r2
 2064 0038 9BB2     		uxth	r3, r3
 2065 003a 013B     		subs	r3, r3, #1
 2066 003c 9BB2     		uxth	r3, r3
 2067 003e 1AB2     		sxth	r2, r3
 2068 0040 B7F90600 		ldrsh	r0, [r7, #6]
 2069 0044 B7F90A10 		ldrsh	r1, [r7, #10]
 2070 0048 BB8B     		ldrh	r3, [r7, #28]
 2071 004a 0093     		str	r3, [sp]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 44


 2072 004c 0346     		mov	r3, r0
 2073 004e F868     		ldr	r0, [r7, #12]
 2074 0050 FFF7FEFF 		bl	GFXwriteFastHLine
 368:gfx.c         ****             GFXwriteFastVLine(myGFX, x, y, h, color);
 2075              		.loc 1 368 0
 2076 0054 B7F91800 		ldrsh	r0, [r7, #24]
 2077 0058 B7F90820 		ldrsh	r2, [r7, #8]
 2078 005c B7F90A10 		ldrsh	r1, [r7, #10]
 2079 0060 BB8B     		ldrh	r3, [r7, #28]
 2080 0062 0093     		str	r3, [sp]
 2081 0064 0346     		mov	r3, r0
 2082 0066 F868     		ldr	r0, [r7, #12]
 2083 0068 FFF7FEFF 		bl	GFXwriteFastVLine
 369:gfx.c         ****             GFXwriteFastVLine(myGFX, x+w-1, y, h, color);
 2084              		.loc 1 369 0
 2085 006c 7A89     		ldrh	r2, [r7, #10]
 2086 006e FB88     		ldrh	r3, [r7, #6]
 2087 0070 1344     		add	r3, r3, r2
 2088 0072 9BB2     		uxth	r3, r3
 2089 0074 013B     		subs	r3, r3, #1
 2090 0076 9BB2     		uxth	r3, r3
 2091 0078 19B2     		sxth	r1, r3
 2092 007a B7F91800 		ldrsh	r0, [r7, #24]
 2093 007e B7F90820 		ldrsh	r2, [r7, #8]
 2094 0082 BB8B     		ldrh	r3, [r7, #28]
 2095 0084 0093     		str	r3, [sp]
 2096 0086 0346     		mov	r3, r0
 2097 0088 F868     		ldr	r0, [r7, #12]
 2098 008a FFF7FEFF 		bl	GFXwriteFastVLine
 370:gfx.c         ****             
 371:gfx.c         ****         }
 2099              		.loc 1 371 0
 2100 008e 00BF     		nop
 2101 0090 1037     		adds	r7, r7, #16
 2102              		.cfi_def_cfa_offset 8
 2103 0092 BD46     		mov	sp, r7
 2104              		.cfi_def_cfa_register 13
 2105              		@ sp needed
 2106 0094 80BD     		pop	{r7, pc}
 2107              		.cfi_endproc
 2108              	.LFE82:
 2109              		.size	GFXdrawRect, .-GFXdrawRect
 2110 0096 00BF     		.section	.text.GFXdrawRoundRect,"ax",%progbits
 2111              		.align	2
 2112              		.global	GFXdrawRoundRect
 2113              		.thumb
 2114              		.thumb_func
 2115              		.type	GFXdrawRoundRect, %function
 2116              	GFXdrawRoundRect:
 2117              	.LFB83:
 372:gfx.c         ****         
 373:gfx.c         ****         // Draw a rounded rectangle
 374:gfx.c         ****         void GFXdrawRoundRect(GFX* myGFX, int16_t x, int16_t y, int16_t w,
 375:gfx.c         ****                               int16_t h, int16_t r, uint16_t color) {
 2118              		.loc 1 375 0
 2119              		.cfi_startproc
 2120              		@ args = 12, pretend = 0, frame = 16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 45


 2121              		@ frame_needed = 1, uses_anonymous_args = 0
 2122 0000 80B5     		push	{r7, lr}
 2123              		.cfi_def_cfa_offset 8
 2124              		.cfi_offset 7, -8
 2125              		.cfi_offset 14, -4
 2126 0002 86B0     		sub	sp, sp, #24
 2127              		.cfi_def_cfa_offset 32
 2128 0004 02AF     		add	r7, sp, #8
 2129              		.cfi_def_cfa 7, 24
 2130 0006 F860     		str	r0, [r7, #12]
 2131 0008 0846     		mov	r0, r1
 2132 000a 1146     		mov	r1, r2
 2133 000c 1A46     		mov	r2, r3
 2134 000e 0346     		mov	r3, r0	@ movhi
 2135 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 2136 0012 0B46     		mov	r3, r1	@ movhi
 2137 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2138 0016 1346     		mov	r3, r2	@ movhi
 2139 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 376:gfx.c         ****             // smarter version
 377:gfx.c         ****             GFXwriteFastHLine(myGFX, x+r  , y    , w-2*r, color); // Top
 2140              		.loc 1 377 0
 2141 001a 7A89     		ldrh	r2, [r7, #10]
 2142 001c BB8B     		ldrh	r3, [r7, #28]
 2143 001e 1344     		add	r3, r3, r2
 2144 0020 9BB2     		uxth	r3, r3
 2145 0022 19B2     		sxth	r1, r3
 2146 0024 FA88     		ldrh	r2, [r7, #6]
 2147 0026 BB8B     		ldrh	r3, [r7, #28]
 2148 0028 5B00     		lsls	r3, r3, #1
 2149 002a 9BB2     		uxth	r3, r3
 2150 002c D31A     		subs	r3, r2, r3
 2151 002e 9BB2     		uxth	r3, r3
 2152 0030 18B2     		sxth	r0, r3
 2153 0032 B7F90820 		ldrsh	r2, [r7, #8]
 2154 0036 3B8C     		ldrh	r3, [r7, #32]
 2155 0038 0093     		str	r3, [sp]
 2156 003a 0346     		mov	r3, r0
 2157 003c F868     		ldr	r0, [r7, #12]
 2158 003e FFF7FEFF 		bl	GFXwriteFastHLine
 378:gfx.c         ****             GFXwriteFastHLine(myGFX, x+r  , y+h-1, w-2*r, color); // Bottom
 2159              		.loc 1 378 0
 2160 0042 7A89     		ldrh	r2, [r7, #10]
 2161 0044 BB8B     		ldrh	r3, [r7, #28]
 2162 0046 1344     		add	r3, r3, r2
 2163 0048 9BB2     		uxth	r3, r3
 2164 004a 19B2     		sxth	r1, r3
 2165 004c 3A89     		ldrh	r2, [r7, #8]
 2166 004e 3B8B     		ldrh	r3, [r7, #24]
 2167 0050 1344     		add	r3, r3, r2
 2168 0052 9BB2     		uxth	r3, r3
 2169 0054 013B     		subs	r3, r3, #1
 2170 0056 9BB2     		uxth	r3, r3
 2171 0058 18B2     		sxth	r0, r3
 2172 005a FA88     		ldrh	r2, [r7, #6]
 2173 005c BB8B     		ldrh	r3, [r7, #28]
 2174 005e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 46


 2175 0060 9BB2     		uxth	r3, r3
 2176 0062 D31A     		subs	r3, r2, r3
 2177 0064 9BB2     		uxth	r3, r3
 2178 0066 1AB2     		sxth	r2, r3
 2179 0068 3B8C     		ldrh	r3, [r7, #32]
 2180 006a 0093     		str	r3, [sp]
 2181 006c 1346     		mov	r3, r2
 2182 006e 0246     		mov	r2, r0
 2183 0070 F868     		ldr	r0, [r7, #12]
 2184 0072 FFF7FEFF 		bl	GFXwriteFastHLine
 379:gfx.c         ****             GFXwriteFastVLine(myGFX, x    , y+r  , h-2*r, color); // Left
 2185              		.loc 1 379 0
 2186 0076 3A89     		ldrh	r2, [r7, #8]
 2187 0078 BB8B     		ldrh	r3, [r7, #28]
 2188 007a 1344     		add	r3, r3, r2
 2189 007c 9BB2     		uxth	r3, r3
 2190 007e 18B2     		sxth	r0, r3
 2191 0080 3A8B     		ldrh	r2, [r7, #24]
 2192 0082 BB8B     		ldrh	r3, [r7, #28]
 2193 0084 5B00     		lsls	r3, r3, #1
 2194 0086 9BB2     		uxth	r3, r3
 2195 0088 D31A     		subs	r3, r2, r3
 2196 008a 9BB2     		uxth	r3, r3
 2197 008c 1AB2     		sxth	r2, r3
 2198 008e B7F90A10 		ldrsh	r1, [r7, #10]
 2199 0092 3B8C     		ldrh	r3, [r7, #32]
 2200 0094 0093     		str	r3, [sp]
 2201 0096 1346     		mov	r3, r2
 2202 0098 0246     		mov	r2, r0
 2203 009a F868     		ldr	r0, [r7, #12]
 2204 009c FFF7FEFF 		bl	GFXwriteFastVLine
 380:gfx.c         ****             GFXwriteFastVLine(myGFX, x+w-1, y+r  , h-2*r, color); // Right
 2205              		.loc 1 380 0
 2206 00a0 7A89     		ldrh	r2, [r7, #10]
 2207 00a2 FB88     		ldrh	r3, [r7, #6]
 2208 00a4 1344     		add	r3, r3, r2
 2209 00a6 9BB2     		uxth	r3, r3
 2210 00a8 013B     		subs	r3, r3, #1
 2211 00aa 9BB2     		uxth	r3, r3
 2212 00ac 19B2     		sxth	r1, r3
 2213 00ae 3A89     		ldrh	r2, [r7, #8]
 2214 00b0 BB8B     		ldrh	r3, [r7, #28]
 2215 00b2 1344     		add	r3, r3, r2
 2216 00b4 9BB2     		uxth	r3, r3
 2217 00b6 18B2     		sxth	r0, r3
 2218 00b8 3A8B     		ldrh	r2, [r7, #24]
 2219 00ba BB8B     		ldrh	r3, [r7, #28]
 2220 00bc 5B00     		lsls	r3, r3, #1
 2221 00be 9BB2     		uxth	r3, r3
 2222 00c0 D31A     		subs	r3, r2, r3
 2223 00c2 9BB2     		uxth	r3, r3
 2224 00c4 1AB2     		sxth	r2, r3
 2225 00c6 3B8C     		ldrh	r3, [r7, #32]
 2226 00c8 0093     		str	r3, [sp]
 2227 00ca 1346     		mov	r3, r2
 2228 00cc 0246     		mov	r2, r0
 2229 00ce F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 47


 2230 00d0 FFF7FEFF 		bl	GFXwriteFastVLine
 381:gfx.c         ****             // draw four corners
 382:gfx.c         ****             GFXdrawCircleHelper(myGFX, x+r    , y+r    , r, 1, color);
 2231              		.loc 1 382 0
 2232 00d4 7A89     		ldrh	r2, [r7, #10]
 2233 00d6 BB8B     		ldrh	r3, [r7, #28]
 2234 00d8 1344     		add	r3, r3, r2
 2235 00da 9BB2     		uxth	r3, r3
 2236 00dc 19B2     		sxth	r1, r3
 2237 00de 3A89     		ldrh	r2, [r7, #8]
 2238 00e0 BB8B     		ldrh	r3, [r7, #28]
 2239 00e2 1344     		add	r3, r3, r2
 2240 00e4 9BB2     		uxth	r3, r3
 2241 00e6 1AB2     		sxth	r2, r3
 2242 00e8 B7F91C00 		ldrsh	r0, [r7, #28]
 2243 00ec 3B8C     		ldrh	r3, [r7, #32]
 2244 00ee 0193     		str	r3, [sp, #4]
 2245 00f0 0123     		movs	r3, #1
 2246 00f2 0093     		str	r3, [sp]
 2247 00f4 0346     		mov	r3, r0
 2248 00f6 F868     		ldr	r0, [r7, #12]
 2249 00f8 FFF7FEFF 		bl	GFXdrawCircleHelper
 383:gfx.c         ****             GFXdrawCircleHelper(myGFX, x+w-r-1, y+r    , r, 2, color);
 2250              		.loc 1 383 0
 2251 00fc 7A89     		ldrh	r2, [r7, #10]
 2252 00fe FB88     		ldrh	r3, [r7, #6]
 2253 0100 1344     		add	r3, r3, r2
 2254 0102 9AB2     		uxth	r2, r3
 2255 0104 BB8B     		ldrh	r3, [r7, #28]
 2256 0106 D31A     		subs	r3, r2, r3
 2257 0108 9BB2     		uxth	r3, r3
 2258 010a 013B     		subs	r3, r3, #1
 2259 010c 9BB2     		uxth	r3, r3
 2260 010e 19B2     		sxth	r1, r3
 2261 0110 3A89     		ldrh	r2, [r7, #8]
 2262 0112 BB8B     		ldrh	r3, [r7, #28]
 2263 0114 1344     		add	r3, r3, r2
 2264 0116 9BB2     		uxth	r3, r3
 2265 0118 1AB2     		sxth	r2, r3
 2266 011a B7F91C00 		ldrsh	r0, [r7, #28]
 2267 011e 3B8C     		ldrh	r3, [r7, #32]
 2268 0120 0193     		str	r3, [sp, #4]
 2269 0122 0223     		movs	r3, #2
 2270 0124 0093     		str	r3, [sp]
 2271 0126 0346     		mov	r3, r0
 2272 0128 F868     		ldr	r0, [r7, #12]
 2273 012a FFF7FEFF 		bl	GFXdrawCircleHelper
 384:gfx.c         ****             GFXdrawCircleHelper(myGFX, x+w-r-1, y+h-r-1, r, 4, color);
 2274              		.loc 1 384 0
 2275 012e 7A89     		ldrh	r2, [r7, #10]
 2276 0130 FB88     		ldrh	r3, [r7, #6]
 2277 0132 1344     		add	r3, r3, r2
 2278 0134 9AB2     		uxth	r2, r3
 2279 0136 BB8B     		ldrh	r3, [r7, #28]
 2280 0138 D31A     		subs	r3, r2, r3
 2281 013a 9BB2     		uxth	r3, r3
 2282 013c 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 48


 2283 013e 9BB2     		uxth	r3, r3
 2284 0140 19B2     		sxth	r1, r3
 2285 0142 3A89     		ldrh	r2, [r7, #8]
 2286 0144 3B8B     		ldrh	r3, [r7, #24]
 2287 0146 1344     		add	r3, r3, r2
 2288 0148 9AB2     		uxth	r2, r3
 2289 014a BB8B     		ldrh	r3, [r7, #28]
 2290 014c D31A     		subs	r3, r2, r3
 2291 014e 9BB2     		uxth	r3, r3
 2292 0150 013B     		subs	r3, r3, #1
 2293 0152 9BB2     		uxth	r3, r3
 2294 0154 1AB2     		sxth	r2, r3
 2295 0156 B7F91C00 		ldrsh	r0, [r7, #28]
 2296 015a 3B8C     		ldrh	r3, [r7, #32]
 2297 015c 0193     		str	r3, [sp, #4]
 2298 015e 0423     		movs	r3, #4
 2299 0160 0093     		str	r3, [sp]
 2300 0162 0346     		mov	r3, r0
 2301 0164 F868     		ldr	r0, [r7, #12]
 2302 0166 FFF7FEFF 		bl	GFXdrawCircleHelper
 385:gfx.c         ****             GFXdrawCircleHelper(myGFX, x+r    , y+h-r-1, r, 8, color);
 2303              		.loc 1 385 0
 2304 016a 7A89     		ldrh	r2, [r7, #10]
 2305 016c BB8B     		ldrh	r3, [r7, #28]
 2306 016e 1344     		add	r3, r3, r2
 2307 0170 9BB2     		uxth	r3, r3
 2308 0172 19B2     		sxth	r1, r3
 2309 0174 3A89     		ldrh	r2, [r7, #8]
 2310 0176 3B8B     		ldrh	r3, [r7, #24]
 2311 0178 1344     		add	r3, r3, r2
 2312 017a 9AB2     		uxth	r2, r3
 2313 017c BB8B     		ldrh	r3, [r7, #28]
 2314 017e D31A     		subs	r3, r2, r3
 2315 0180 9BB2     		uxth	r3, r3
 2316 0182 013B     		subs	r3, r3, #1
 2317 0184 9BB2     		uxth	r3, r3
 2318 0186 1AB2     		sxth	r2, r3
 2319 0188 B7F91C00 		ldrsh	r0, [r7, #28]
 2320 018c 3B8C     		ldrh	r3, [r7, #32]
 2321 018e 0193     		str	r3, [sp, #4]
 2322 0190 0823     		movs	r3, #8
 2323 0192 0093     		str	r3, [sp]
 2324 0194 0346     		mov	r3, r0
 2325 0196 F868     		ldr	r0, [r7, #12]
 2326 0198 FFF7FEFF 		bl	GFXdrawCircleHelper
 386:gfx.c         ****             
 387:gfx.c         ****         }
 2327              		.loc 1 387 0
 2328 019c 00BF     		nop
 2329 019e 1037     		adds	r7, r7, #16
 2330              		.cfi_def_cfa_offset 8
 2331 01a0 BD46     		mov	sp, r7
 2332              		.cfi_def_cfa_register 13
 2333              		@ sp needed
 2334 01a2 80BD     		pop	{r7, pc}
 2335              		.cfi_endproc
 2336              	.LFE83:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 49


 2337              		.size	GFXdrawRoundRect, .-GFXdrawRoundRect
 2338              		.section	.text.GFXfillRoundRect,"ax",%progbits
 2339              		.align	2
 2340              		.global	GFXfillRoundRect
 2341              		.thumb
 2342              		.thumb_func
 2343              		.type	GFXfillRoundRect, %function
 2344              	GFXfillRoundRect:
 2345              	.LFB84:
 388:gfx.c         ****         
 389:gfx.c         ****         // Fill a rounded rectangle
 390:gfx.c         ****         void GFXfillRoundRect(GFX* myGFX, int16_t x, int16_t y, int16_t w,
 391:gfx.c         ****                               int16_t h, int16_t r, uint16_t color) {
 2346              		.loc 1 391 0
 2347              		.cfi_startproc
 2348              		@ args = 12, pretend = 0, frame = 16
 2349              		@ frame_needed = 1, uses_anonymous_args = 0
 2350 0000 90B5     		push	{r4, r7, lr}
 2351              		.cfi_def_cfa_offset 12
 2352              		.cfi_offset 4, -12
 2353              		.cfi_offset 7, -8
 2354              		.cfi_offset 14, -4
 2355 0002 89B0     		sub	sp, sp, #36
 2356              		.cfi_def_cfa_offset 48
 2357 0004 04AF     		add	r7, sp, #16
 2358              		.cfi_def_cfa 7, 32
 2359 0006 F860     		str	r0, [r7, #12]
 2360 0008 0846     		mov	r0, r1
 2361 000a 1146     		mov	r1, r2
 2362 000c 1A46     		mov	r2, r3
 2363 000e 0346     		mov	r3, r0	@ movhi
 2364 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 2365 0012 0B46     		mov	r3, r1	@ movhi
 2366 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2367 0016 1346     		mov	r3, r2	@ movhi
 2368 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 392:gfx.c         ****             // smarter version
 393:gfx.c         ****             GFXwriteFillRect(myGFX, x+r, y, w-2*r, h, color);
 2369              		.loc 1 393 0
 2370 001a 7A89     		ldrh	r2, [r7, #10]
 2371 001c BB8C     		ldrh	r3, [r7, #36]
 2372 001e 1344     		add	r3, r3, r2
 2373 0020 9BB2     		uxth	r3, r3
 2374 0022 19B2     		sxth	r1, r3
 2375 0024 FA88     		ldrh	r2, [r7, #6]
 2376 0026 BB8C     		ldrh	r3, [r7, #36]
 2377 0028 5B00     		lsls	r3, r3, #1
 2378 002a 9BB2     		uxth	r3, r3
 2379 002c D31A     		subs	r3, r2, r3
 2380 002e 9BB2     		uxth	r3, r3
 2381 0030 18B2     		sxth	r0, r3
 2382 0032 B7F90820 		ldrsh	r2, [r7, #8]
 2383 0036 3B8D     		ldrh	r3, [r7, #40]
 2384 0038 0193     		str	r3, [sp, #4]
 2385 003a B7F92030 		ldrsh	r3, [r7, #32]
 2386 003e 0093     		str	r3, [sp]
 2387 0040 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 50


 2388 0042 F868     		ldr	r0, [r7, #12]
 2389 0044 FFF7FEFF 		bl	GFXwriteFillRect
 394:gfx.c         ****             // draw four corners
 395:gfx.c         ****             GFXfillCircleHelper(myGFX, x+w-r-1, y+r, r, 1, h-2*r-1, color);
 2390              		.loc 1 395 0
 2391 0048 7A89     		ldrh	r2, [r7, #10]
 2392 004a FB88     		ldrh	r3, [r7, #6]
 2393 004c 1344     		add	r3, r3, r2
 2394 004e 9AB2     		uxth	r2, r3
 2395 0050 BB8C     		ldrh	r3, [r7, #36]
 2396 0052 D31A     		subs	r3, r2, r3
 2397 0054 9BB2     		uxth	r3, r3
 2398 0056 013B     		subs	r3, r3, #1
 2399 0058 9BB2     		uxth	r3, r3
 2400 005a 19B2     		sxth	r1, r3
 2401 005c 3A89     		ldrh	r2, [r7, #8]
 2402 005e BB8C     		ldrh	r3, [r7, #36]
 2403 0060 1344     		add	r3, r3, r2
 2404 0062 9BB2     		uxth	r3, r3
 2405 0064 18B2     		sxth	r0, r3
 2406 0066 3A8C     		ldrh	r2, [r7, #32]
 2407 0068 BB8C     		ldrh	r3, [r7, #36]
 2408 006a 5B00     		lsls	r3, r3, #1
 2409 006c 9BB2     		uxth	r3, r3
 2410 006e D31A     		subs	r3, r2, r3
 2411 0070 9BB2     		uxth	r3, r3
 2412 0072 013B     		subs	r3, r3, #1
 2413 0074 9BB2     		uxth	r3, r3
 2414 0076 1BB2     		sxth	r3, r3
 2415 0078 B7F92440 		ldrsh	r4, [r7, #36]
 2416 007c 3A8D     		ldrh	r2, [r7, #40]
 2417 007e 0292     		str	r2, [sp, #8]
 2418 0080 0193     		str	r3, [sp, #4]
 2419 0082 0123     		movs	r3, #1
 2420 0084 0093     		str	r3, [sp]
 2421 0086 2346     		mov	r3, r4
 2422 0088 0246     		mov	r2, r0
 2423 008a F868     		ldr	r0, [r7, #12]
 2424 008c FFF7FEFF 		bl	GFXfillCircleHelper
 396:gfx.c         ****             GFXfillCircleHelper(myGFX, x+r    , y+r, r, 2, h-2*r-1, color);
 2425              		.loc 1 396 0
 2426 0090 7A89     		ldrh	r2, [r7, #10]
 2427 0092 BB8C     		ldrh	r3, [r7, #36]
 2428 0094 1344     		add	r3, r3, r2
 2429 0096 9BB2     		uxth	r3, r3
 2430 0098 19B2     		sxth	r1, r3
 2431 009a 3A89     		ldrh	r2, [r7, #8]
 2432 009c BB8C     		ldrh	r3, [r7, #36]
 2433 009e 1344     		add	r3, r3, r2
 2434 00a0 9BB2     		uxth	r3, r3
 2435 00a2 18B2     		sxth	r0, r3
 2436 00a4 3A8C     		ldrh	r2, [r7, #32]
 2437 00a6 BB8C     		ldrh	r3, [r7, #36]
 2438 00a8 5B00     		lsls	r3, r3, #1
 2439 00aa 9BB2     		uxth	r3, r3
 2440 00ac D31A     		subs	r3, r2, r3
 2441 00ae 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 51


 2442 00b0 013B     		subs	r3, r3, #1
 2443 00b2 9BB2     		uxth	r3, r3
 2444 00b4 1BB2     		sxth	r3, r3
 2445 00b6 B7F92440 		ldrsh	r4, [r7, #36]
 2446 00ba 3A8D     		ldrh	r2, [r7, #40]
 2447 00bc 0292     		str	r2, [sp, #8]
 2448 00be 0193     		str	r3, [sp, #4]
 2449 00c0 0223     		movs	r3, #2
 2450 00c2 0093     		str	r3, [sp]
 2451 00c4 2346     		mov	r3, r4
 2452 00c6 0246     		mov	r2, r0
 2453 00c8 F868     		ldr	r0, [r7, #12]
 2454 00ca FFF7FEFF 		bl	GFXfillCircleHelper
 397:gfx.c         ****             
 398:gfx.c         ****         }
 2455              		.loc 1 398 0
 2456 00ce 00BF     		nop
 2457 00d0 1437     		adds	r7, r7, #20
 2458              		.cfi_def_cfa_offset 12
 2459 00d2 BD46     		mov	sp, r7
 2460              		.cfi_def_cfa_register 13
 2461              		@ sp needed
 2462 00d4 90BD     		pop	{r4, r7, pc}
 2463              		.cfi_endproc
 2464              	.LFE84:
 2465              		.size	GFXfillRoundRect, .-GFXfillRoundRect
 2466 00d6 00BF     		.section	.text.GFXdrawTriangle,"ax",%progbits
 2467              		.align	2
 2468              		.global	GFXdrawTriangle
 2469              		.thumb
 2470              		.thumb_func
 2471              		.type	GFXdrawTriangle, %function
 2472              	GFXdrawTriangle:
 2473              	.LFB85:
 399:gfx.c         ****         
 400:gfx.c         ****         // Draw a triangle
 401:gfx.c         ****         void GFXdrawTriangle(GFX* myGFX, int16_t x0, int16_t y0,
 402:gfx.c         ****                              int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color) {
 2474              		.loc 1 402 0
 2475              		.cfi_startproc
 2476              		@ args = 16, pretend = 0, frame = 16
 2477              		@ frame_needed = 1, uses_anonymous_args = 0
 2478 0000 80B5     		push	{r7, lr}
 2479              		.cfi_def_cfa_offset 8
 2480              		.cfi_offset 7, -8
 2481              		.cfi_offset 14, -4
 2482 0002 86B0     		sub	sp, sp, #24
 2483              		.cfi_def_cfa_offset 32
 2484 0004 02AF     		add	r7, sp, #8
 2485              		.cfi_def_cfa 7, 24
 2486 0006 F860     		str	r0, [r7, #12]
 2487 0008 0846     		mov	r0, r1
 2488 000a 1146     		mov	r1, r2
 2489 000c 1A46     		mov	r2, r3
 2490 000e 0346     		mov	r3, r0	@ movhi
 2491 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 2492 0012 0B46     		mov	r3, r1	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 52


 2493 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2494 0016 1346     		mov	r3, r2	@ movhi
 2495 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 403:gfx.c         ****             GFXdrawLine(myGFX, x0, y0, x1, y1, color);
 2496              		.loc 1 403 0
 2497 001a B7F90600 		ldrsh	r0, [r7, #6]
 2498 001e B7F90820 		ldrsh	r2, [r7, #8]
 2499 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 2500 0026 BB8C     		ldrh	r3, [r7, #36]
 2501 0028 0193     		str	r3, [sp, #4]
 2502 002a B7F91830 		ldrsh	r3, [r7, #24]
 2503 002e 0093     		str	r3, [sp]
 2504 0030 0346     		mov	r3, r0
 2505 0032 F868     		ldr	r0, [r7, #12]
 2506 0034 FFF7FEFF 		bl	GFXdrawLine
 404:gfx.c         ****             GFXdrawLine(myGFX, x1, y1, x2, y2, color);
 2507              		.loc 1 404 0
 2508 0038 B7F91C00 		ldrsh	r0, [r7, #28]
 2509 003c B7F91820 		ldrsh	r2, [r7, #24]
 2510 0040 B7F90610 		ldrsh	r1, [r7, #6]
 2511 0044 BB8C     		ldrh	r3, [r7, #36]
 2512 0046 0193     		str	r3, [sp, #4]
 2513 0048 B7F92030 		ldrsh	r3, [r7, #32]
 2514 004c 0093     		str	r3, [sp]
 2515 004e 0346     		mov	r3, r0
 2516 0050 F868     		ldr	r0, [r7, #12]
 2517 0052 FFF7FEFF 		bl	GFXdrawLine
 405:gfx.c         ****             GFXdrawLine(myGFX, x2, y2, x0, y0, color);
 2518              		.loc 1 405 0
 2519 0056 B7F90A00 		ldrsh	r0, [r7, #10]
 2520 005a B7F92020 		ldrsh	r2, [r7, #32]
 2521 005e B7F91C10 		ldrsh	r1, [r7, #28]
 2522 0062 BB8C     		ldrh	r3, [r7, #36]
 2523 0064 0193     		str	r3, [sp, #4]
 2524 0066 B7F90830 		ldrsh	r3, [r7, #8]
 2525 006a 0093     		str	r3, [sp]
 2526 006c 0346     		mov	r3, r0
 2527 006e F868     		ldr	r0, [r7, #12]
 2528 0070 FFF7FEFF 		bl	GFXdrawLine
 406:gfx.c         ****         }
 2529              		.loc 1 406 0
 2530 0074 00BF     		nop
 2531 0076 1037     		adds	r7, r7, #16
 2532              		.cfi_def_cfa_offset 8
 2533 0078 BD46     		mov	sp, r7
 2534              		.cfi_def_cfa_register 13
 2535              		@ sp needed
 2536 007a 80BD     		pop	{r7, pc}
 2537              		.cfi_endproc
 2538              	.LFE85:
 2539              		.size	GFXdrawTriangle, .-GFXdrawTriangle
 2540              		.section	.text.GFXfillTriangle,"ax",%progbits
 2541              		.align	2
 2542              		.global	GFXfillTriangle
 2543              		.thumb
 2544              		.thumb_func
 2545              		.type	GFXfillTriangle, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 53


 2546              	GFXfillTriangle:
 2547              	.LFB86:
 407:gfx.c         ****         
 408:gfx.c         ****         // Fill a triangle
 409:gfx.c         ****         void GFXfillTriangle(GFX* myGFX, int16_t x0, int16_t y0,
 410:gfx.c         ****                              int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color) {
 2548              		.loc 1 410 0
 2549              		.cfi_startproc
 2550              		@ args = 16, pretend = 0, frame = 64
 2551              		@ frame_needed = 1, uses_anonymous_args = 0
 2552 0000 80B5     		push	{r7, lr}
 2553              		.cfi_def_cfa_offset 8
 2554              		.cfi_offset 7, -8
 2555              		.cfi_offset 14, -4
 2556 0002 92B0     		sub	sp, sp, #72
 2557              		.cfi_def_cfa_offset 80
 2558 0004 02AF     		add	r7, sp, #8
 2559              		.cfi_def_cfa 7, 72
 2560 0006 F860     		str	r0, [r7, #12]
 2561 0008 0846     		mov	r0, r1
 2562 000a 1146     		mov	r1, r2
 2563 000c 1A46     		mov	r2, r3
 2564 000e 0346     		mov	r3, r0	@ movhi
 2565 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 2566 0012 0B46     		mov	r3, r1	@ movhi
 2567 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2568 0016 1346     		mov	r3, r2	@ movhi
 2569 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 411:gfx.c         ****             
 412:gfx.c         ****             int16_t a, b, y, last;
 413:gfx.c         ****             
 414:gfx.c         ****             // Sort coordinates by Y order (y2 >= y1 >= y0)
 415:gfx.c         ****             if (y0 > y1) {
 2570              		.loc 1 415 0
 2571 001a B7F90820 		ldrsh	r2, [r7, #8]
 2572 001e B7F94830 		ldrsh	r3, [r7, #72]
 2573 0022 9A42     		cmp	r2, r3
 2574 0024 0DDD     		ble	.L70
 2575              	.LBB11:
 416:gfx.c         ****                 _swap_int16_t(y0, y1); _swap_int16_t(x0, x1);
 2576              		.loc 1 416 0
 2577 0026 3B89     		ldrh	r3, [r7, #8]	@ movhi
 2578 0028 FB85     		strh	r3, [r7, #46]	@ movhi
 2579 002a B7F84830 		ldrh	r3, [r7, #72]	@ movhi
 2580 002e 3B81     		strh	r3, [r7, #8]	@ movhi
 2581 0030 FB8D     		ldrh	r3, [r7, #46]	@ movhi
 2582 0032 A7F84830 		strh	r3, [r7, #72]	@ movhi
 2583              	.LBE11:
 2584              	.LBB12:
 2585 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 2586 0038 BB85     		strh	r3, [r7, #44]	@ movhi
 2587 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 2588 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 2589 003e BB8D     		ldrh	r3, [r7, #44]	@ movhi
 2590 0040 FB80     		strh	r3, [r7, #6]	@ movhi
 2591              	.L70:
 2592              	.LBE12:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 54


 417:gfx.c         ****             }
 418:gfx.c         ****             if (y1 > y2) {
 2593              		.loc 1 418 0
 2594 0042 B7F94820 		ldrsh	r2, [r7, #72]
 2595 0046 B7F95030 		ldrsh	r3, [r7, #80]
 2596 004a 9A42     		cmp	r2, r3
 2597 004c 11DD     		ble	.L71
 2598              	.LBB13:
 419:gfx.c         ****                 _swap_int16_t(y2, y1); _swap_int16_t(x2, x1);
 2599              		.loc 1 419 0
 2600 004e B7F85030 		ldrh	r3, [r7, #80]	@ movhi
 2601 0052 7B85     		strh	r3, [r7, #42]	@ movhi
 2602 0054 B7F84830 		ldrh	r3, [r7, #72]	@ movhi
 2603 0058 A7F85030 		strh	r3, [r7, #80]	@ movhi
 2604 005c 7B8D     		ldrh	r3, [r7, #42]	@ movhi
 2605 005e A7F84830 		strh	r3, [r7, #72]	@ movhi
 2606              	.LBE13:
 2607              	.LBB14:
 2608 0062 B7F84C30 		ldrh	r3, [r7, #76]	@ movhi
 2609 0066 3B85     		strh	r3, [r7, #40]	@ movhi
 2610 0068 FB88     		ldrh	r3, [r7, #6]	@ movhi
 2611 006a A7F84C30 		strh	r3, [r7, #76]	@ movhi
 2612 006e 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 2613 0070 FB80     		strh	r3, [r7, #6]	@ movhi
 2614              	.L71:
 2615              	.LBE14:
 420:gfx.c         ****             }
 421:gfx.c         ****             if (y0 > y1) {
 2616              		.loc 1 421 0
 2617 0072 B7F90820 		ldrsh	r2, [r7, #8]
 2618 0076 B7F94830 		ldrsh	r3, [r7, #72]
 2619 007a 9A42     		cmp	r2, r3
 2620 007c 0DDD     		ble	.L72
 2621              	.LBB15:
 422:gfx.c         ****                 _swap_int16_t(y0, y1); _swap_int16_t(x0, x1);
 2622              		.loc 1 422 0
 2623 007e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 2624 0080 FB84     		strh	r3, [r7, #38]	@ movhi
 2625 0082 B7F84830 		ldrh	r3, [r7, #72]	@ movhi
 2626 0086 3B81     		strh	r3, [r7, #8]	@ movhi
 2627 0088 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 2628 008a A7F84830 		strh	r3, [r7, #72]	@ movhi
 2629              	.LBE15:
 2630              	.LBB16:
 2631 008e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 2632 0090 BB84     		strh	r3, [r7, #36]	@ movhi
 2633 0092 FB88     		ldrh	r3, [r7, #6]	@ movhi
 2634 0094 7B81     		strh	r3, [r7, #10]	@ movhi
 2635 0096 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 2636 0098 FB80     		strh	r3, [r7, #6]	@ movhi
 2637              	.L72:
 2638              	.LBE16:
 423:gfx.c         ****             }
 424:gfx.c         ****             
 425:gfx.c         ****             
 426:gfx.c         ****             if(y0 == y2) { // Handle awkward all-on-same-line case as its own thing
 2639              		.loc 1 426 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 55


 2640 009a B7F90820 		ldrsh	r2, [r7, #8]
 2641 009e B7F95030 		ldrsh	r3, [r7, #80]
 2642 00a2 9A42     		cmp	r2, r3
 2643 00a4 3AD1     		bne	.L73
 427:gfx.c         ****                 a = b = x0;
 2644              		.loc 1 427 0
 2645 00a6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 2646 00a8 BB87     		strh	r3, [r7, #60]	@ movhi
 2647 00aa BB8F     		ldrh	r3, [r7, #60]	@ movhi
 2648 00ac FB87     		strh	r3, [r7, #62]	@ movhi
 428:gfx.c         ****                 if(x1 < a)      a = x1;
 2649              		.loc 1 428 0
 2650 00ae B7F90620 		ldrsh	r2, [r7, #6]
 2651 00b2 B7F93E30 		ldrsh	r3, [r7, #62]
 2652 00b6 9A42     		cmp	r2, r3
 2653 00b8 02DA     		bge	.L74
 2654              		.loc 1 428 0 is_stmt 0 discriminator 1
 2655 00ba FB88     		ldrh	r3, [r7, #6]	@ movhi
 2656 00bc FB87     		strh	r3, [r7, #62]	@ movhi
 2657 00be 07E0     		b	.L75
 2658              	.L74:
 429:gfx.c         ****                 else if(x1 > b) b = x1;
 2659              		.loc 1 429 0 is_stmt 1
 2660 00c0 B7F90620 		ldrsh	r2, [r7, #6]
 2661 00c4 B7F93C30 		ldrsh	r3, [r7, #60]
 2662 00c8 9A42     		cmp	r2, r3
 2663 00ca 01DD     		ble	.L75
 2664              		.loc 1 429 0 is_stmt 0 discriminator 1
 2665 00cc FB88     		ldrh	r3, [r7, #6]	@ movhi
 2666 00ce BB87     		strh	r3, [r7, #60]	@ movhi
 2667              	.L75:
 430:gfx.c         ****                 if(x2 < a)      a = x2;
 2668              		.loc 1 430 0 is_stmt 1
 2669 00d0 B7F94C20 		ldrsh	r2, [r7, #76]
 2670 00d4 B7F93E30 		ldrsh	r3, [r7, #62]
 2671 00d8 9A42     		cmp	r2, r3
 2672 00da 03DA     		bge	.L76
 2673              		.loc 1 430 0 is_stmt 0 discriminator 1
 2674 00dc B7F84C30 		ldrh	r3, [r7, #76]	@ movhi
 2675 00e0 FB87     		strh	r3, [r7, #62]	@ movhi
 2676 00e2 08E0     		b	.L77
 2677              	.L76:
 431:gfx.c         ****                 else if(x2 > b) b = x2;
 2678              		.loc 1 431 0 is_stmt 1
 2679 00e4 B7F94C20 		ldrsh	r2, [r7, #76]
 2680 00e8 B7F93C30 		ldrsh	r3, [r7, #60]
 2681 00ec 9A42     		cmp	r2, r3
 2682 00ee 02DD     		ble	.L77
 2683              		.loc 1 431 0 is_stmt 0 discriminator 1
 2684 00f0 B7F84C30 		ldrh	r3, [r7, #76]	@ movhi
 2685 00f4 BB87     		strh	r3, [r7, #60]	@ movhi
 2686              	.L77:
 432:gfx.c         ****                 GFXwriteFastHLine(myGFX, a, y0, b-a+1, color);
 2687              		.loc 1 432 0 is_stmt 1
 2688 00f6 BA8F     		ldrh	r2, [r7, #60]
 2689 00f8 FB8F     		ldrh	r3, [r7, #62]
 2690 00fa D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 56


 2691 00fc 9BB2     		uxth	r3, r3
 2692 00fe 0133     		adds	r3, r3, #1
 2693 0100 9BB2     		uxth	r3, r3
 2694 0102 18B2     		sxth	r0, r3
 2695 0104 B7F90820 		ldrsh	r2, [r7, #8]
 2696 0108 B7F93E10 		ldrsh	r1, [r7, #62]
 2697 010c B7F85430 		ldrh	r3, [r7, #84]
 2698 0110 0093     		str	r3, [sp]
 2699 0112 0346     		mov	r3, r0
 2700 0114 F868     		ldr	r0, [r7, #12]
 2701 0116 FFF7FEFF 		bl	GFXwriteFastHLine
 433:gfx.c         ****                 
 434:gfx.c         ****                 return;
 2702              		.loc 1 434 0
 2703 011a DEE0     		b	.L69
 2704              	.L73:
 435:gfx.c         ****             }
 436:gfx.c         ****             
 437:gfx.c         ****             int16_t
 438:gfx.c         ****             dx01 = x1 - x0,
 2705              		.loc 1 438 0
 2706 011c FA88     		ldrh	r2, [r7, #6]
 2707 011e 7B89     		ldrh	r3, [r7, #10]
 2708 0120 D31A     		subs	r3, r2, r3
 2709 0122 9BB2     		uxth	r3, r3
 2710 0124 7B84     		strh	r3, [r7, #34]	@ movhi
 439:gfx.c         ****             dy01 = y1 - y0,
 2711              		.loc 1 439 0
 2712 0126 B7F84820 		ldrh	r2, [r7, #72]
 2713 012a 3B89     		ldrh	r3, [r7, #8]
 2714 012c D31A     		subs	r3, r2, r3
 2715 012e 9BB2     		uxth	r3, r3
 2716 0130 3B84     		strh	r3, [r7, #32]	@ movhi
 440:gfx.c         ****             dx02 = x2 - x0,
 2717              		.loc 1 440 0
 2718 0132 B7F84C20 		ldrh	r2, [r7, #76]
 2719 0136 7B89     		ldrh	r3, [r7, #10]
 2720 0138 D31A     		subs	r3, r2, r3
 2721 013a 9BB2     		uxth	r3, r3
 2722 013c FB83     		strh	r3, [r7, #30]	@ movhi
 441:gfx.c         ****             dy02 = y2 - y0,
 2723              		.loc 1 441 0
 2724 013e B7F85020 		ldrh	r2, [r7, #80]
 2725 0142 3B89     		ldrh	r3, [r7, #8]
 2726 0144 D31A     		subs	r3, r2, r3
 2727 0146 9BB2     		uxth	r3, r3
 2728 0148 BB83     		strh	r3, [r7, #28]	@ movhi
 442:gfx.c         ****             dx12 = x2 - x1,
 2729              		.loc 1 442 0
 2730 014a B7F84C20 		ldrh	r2, [r7, #76]
 2731 014e FB88     		ldrh	r3, [r7, #6]
 2732 0150 D31A     		subs	r3, r2, r3
 2733 0152 9BB2     		uxth	r3, r3
 2734 0154 7B83     		strh	r3, [r7, #26]	@ movhi
 443:gfx.c         ****             dy12 = y2 - y1;
 2735              		.loc 1 443 0
 2736 0156 B7F85020 		ldrh	r2, [r7, #80]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 57


 2737 015a B7F84830 		ldrh	r3, [r7, #72]
 2738 015e D31A     		subs	r3, r2, r3
 2739 0160 9BB2     		uxth	r3, r3
 2740 0162 3B83     		strh	r3, [r7, #24]	@ movhi
 444:gfx.c         ****             int32_t
 445:gfx.c         ****             sa   = 0,
 2741              		.loc 1 445 0
 2742 0164 0023     		movs	r3, #0
 2743 0166 7B63     		str	r3, [r7, #52]
 446:gfx.c         ****             sb   = 0;
 2744              		.loc 1 446 0
 2745 0168 0023     		movs	r3, #0
 2746 016a 3B63     		str	r3, [r7, #48]
 447:gfx.c         ****             
 448:gfx.c         ****             // For upper part of triangle, find scanline crossings for segments
 449:gfx.c         ****             // 0-1 and 0-2.  If y1=y2 (flat-bottomed triangle), the scanline y1
 450:gfx.c         ****             // is included here (and second loop will be skipped, avoiding a /0
 451:gfx.c         ****             // error there), otherwise scanline y1 is skipped here and handled
 452:gfx.c         ****             // in the second loop...which also avoids a /0 error here if y0=y1
 453:gfx.c         ****             // (flat-topped triangle).
 454:gfx.c         ****             if(y1 == y2) last = y1;   // Include y1 scanline
 2747              		.loc 1 454 0
 2748 016c B7F94820 		ldrsh	r2, [r7, #72]
 2749 0170 B7F95030 		ldrsh	r3, [r7, #80]
 2750 0174 9A42     		cmp	r2, r3
 2751 0176 03D1     		bne	.L79
 2752              		.loc 1 454 0 is_stmt 0 discriminator 1
 2753 0178 B7F84830 		ldrh	r3, [r7, #72]	@ movhi
 2754 017c 3B87     		strh	r3, [r7, #56]	@ movhi
 2755 017e 04E0     		b	.L80
 2756              	.L79:
 455:gfx.c         ****             else         last = y1-1; // Skip it
 2757              		.loc 1 455 0 is_stmt 1
 2758 0180 B7F84830 		ldrh	r3, [r7, #72]
 2759 0184 013B     		subs	r3, r3, #1
 2760 0186 9BB2     		uxth	r3, r3
 2761 0188 3B87     		strh	r3, [r7, #56]	@ movhi
 2762              	.L80:
 456:gfx.c         ****             
 457:gfx.c         ****             for(y=y0; y<=last; y++) {
 2763              		.loc 1 457 0
 2764 018a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 2765 018c 7B87     		strh	r3, [r7, #58]	@ movhi
 2766 018e 41E0     		b	.L81
 2767              	.L83:
 458:gfx.c         ****                 a   = x0 + sa / dy01;
 2768              		.loc 1 458 0
 2769 0190 B7F92030 		ldrsh	r3, [r7, #32]
 2770 0194 7A6B     		ldr	r2, [r7, #52]
 2771 0196 92FBF3F3 		sdiv	r3, r2, r3
 2772 019a 9AB2     		uxth	r2, r3
 2773 019c 7B89     		ldrh	r3, [r7, #10]
 2774 019e 1344     		add	r3, r3, r2
 2775 01a0 9BB2     		uxth	r3, r3
 2776 01a2 FB87     		strh	r3, [r7, #62]	@ movhi
 459:gfx.c         ****                 b   = x0 + sb / dy02;
 2777              		.loc 1 459 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 58


 2778 01a4 B7F91C30 		ldrsh	r3, [r7, #28]
 2779 01a8 3A6B     		ldr	r2, [r7, #48]
 2780 01aa 92FBF3F3 		sdiv	r3, r2, r3
 2781 01ae 9AB2     		uxth	r2, r3
 2782 01b0 7B89     		ldrh	r3, [r7, #10]
 2783 01b2 1344     		add	r3, r3, r2
 2784 01b4 9BB2     		uxth	r3, r3
 2785 01b6 BB87     		strh	r3, [r7, #60]	@ movhi
 460:gfx.c         ****                 sa += dx01;
 2786              		.loc 1 460 0
 2787 01b8 B7F92230 		ldrsh	r3, [r7, #34]
 2788 01bc 7A6B     		ldr	r2, [r7, #52]
 2789 01be 1344     		add	r3, r3, r2
 2790 01c0 7B63     		str	r3, [r7, #52]
 461:gfx.c         ****                 sb += dx02;
 2791              		.loc 1 461 0
 2792 01c2 B7F91E30 		ldrsh	r3, [r7, #30]
 2793 01c6 3A6B     		ldr	r2, [r7, #48]
 2794 01c8 1344     		add	r3, r3, r2
 2795 01ca 3B63     		str	r3, [r7, #48]
 462:gfx.c         ****                 /* longhand:
 463:gfx.c         ****                  a = x0 + (x1 - x0) * (y - y0) / (y1 - y0);
 464:gfx.c         ****                  b = x0 + (x2 - x0) * (y - y0) / (y2 - y0);
 465:gfx.c         ****                  */
 466:gfx.c         ****                 if(a > b) _swap_int16_t(a,b);
 2796              		.loc 1 466 0
 2797 01cc B7F93E20 		ldrsh	r2, [r7, #62]
 2798 01d0 B7F93C30 		ldrsh	r3, [r7, #60]
 2799 01d4 9A42     		cmp	r2, r3
 2800 01d6 05DD     		ble	.L82
 2801              	.LBB17:
 2802              		.loc 1 466 0 is_stmt 0 discriminator 1
 2803 01d8 FB8F     		ldrh	r3, [r7, #62]	@ movhi
 2804 01da FB82     		strh	r3, [r7, #22]	@ movhi
 2805 01dc BB8F     		ldrh	r3, [r7, #60]	@ movhi
 2806 01de FB87     		strh	r3, [r7, #62]	@ movhi
 2807 01e0 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2808 01e2 BB87     		strh	r3, [r7, #60]	@ movhi
 2809              	.L82:
 2810              	.LBE17:
 467:gfx.c         ****                 GFXwriteFastHLine(myGFX,a, y, b-a+1, color);
 2811              		.loc 1 467 0 is_stmt 1 discriminator 2
 2812 01e4 BA8F     		ldrh	r2, [r7, #60]
 2813 01e6 FB8F     		ldrh	r3, [r7, #62]
 2814 01e8 D31A     		subs	r3, r2, r3
 2815 01ea 9BB2     		uxth	r3, r3
 2816 01ec 0133     		adds	r3, r3, #1
 2817 01ee 9BB2     		uxth	r3, r3
 2818 01f0 18B2     		sxth	r0, r3
 2819 01f2 B7F93A20 		ldrsh	r2, [r7, #58]
 2820 01f6 B7F93E10 		ldrsh	r1, [r7, #62]
 2821 01fa B7F85430 		ldrh	r3, [r7, #84]
 2822 01fe 0093     		str	r3, [sp]
 2823 0200 0346     		mov	r3, r0
 2824 0202 F868     		ldr	r0, [r7, #12]
 2825 0204 FFF7FEFF 		bl	GFXwriteFastHLine
 457:gfx.c         ****                 a   = x0 + sa / dy01;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 59


 2826              		.loc 1 457 0 discriminator 2
 2827 0208 B7F93A30 		ldrsh	r3, [r7, #58]
 2828 020c 9BB2     		uxth	r3, r3
 2829 020e 0133     		adds	r3, r3, #1
 2830 0210 9BB2     		uxth	r3, r3
 2831 0212 7B87     		strh	r3, [r7, #58]	@ movhi
 2832              	.L81:
 457:gfx.c         ****                 a   = x0 + sa / dy01;
 2833              		.loc 1 457 0 is_stmt 0 discriminator 1
 2834 0214 B7F93A20 		ldrsh	r2, [r7, #58]
 2835 0218 B7F93830 		ldrsh	r3, [r7, #56]
 2836 021c 9A42     		cmp	r2, r3
 2837 021e B7DD     		ble	.L83
 468:gfx.c         ****             }
 469:gfx.c         ****             
 470:gfx.c         ****             // For lower part of triangle, find scanline crossings for segments
 471:gfx.c         ****             // 0-2 and 1-2.  This loop is skipped if y1=y2.
 472:gfx.c         ****             sa = dx12 * (y - y1);
 2838              		.loc 1 472 0 is_stmt 1
 2839 0220 B7F91A30 		ldrsh	r3, [r7, #26]
 2840 0224 B7F93A10 		ldrsh	r1, [r7, #58]
 2841 0228 B7F94820 		ldrsh	r2, [r7, #72]
 2842 022c 8A1A     		subs	r2, r1, r2
 2843 022e 02FB03F3 		mul	r3, r2, r3
 2844 0232 7B63     		str	r3, [r7, #52]
 473:gfx.c         ****             sb = dx02 * (y - y0);
 2845              		.loc 1 473 0
 2846 0234 B7F91E30 		ldrsh	r3, [r7, #30]
 2847 0238 B7F93A10 		ldrsh	r1, [r7, #58]
 2848 023c B7F90820 		ldrsh	r2, [r7, #8]
 2849 0240 8A1A     		subs	r2, r1, r2
 2850 0242 02FB03F3 		mul	r3, r2, r3
 2851 0246 3B63     		str	r3, [r7, #48]
 474:gfx.c         ****             for(; y<=y2; y++) {
 2852              		.loc 1 474 0
 2853 0248 41E0     		b	.L84
 2854              	.L86:
 475:gfx.c         ****                 a   = x1 + sa / dy12;
 2855              		.loc 1 475 0
 2856 024a B7F91830 		ldrsh	r3, [r7, #24]
 2857 024e 7A6B     		ldr	r2, [r7, #52]
 2858 0250 92FBF3F3 		sdiv	r3, r2, r3
 2859 0254 9AB2     		uxth	r2, r3
 2860 0256 FB88     		ldrh	r3, [r7, #6]
 2861 0258 1344     		add	r3, r3, r2
 2862 025a 9BB2     		uxth	r3, r3
 2863 025c FB87     		strh	r3, [r7, #62]	@ movhi
 476:gfx.c         ****                 b   = x0 + sb / dy02;
 2864              		.loc 1 476 0
 2865 025e B7F91C30 		ldrsh	r3, [r7, #28]
 2866 0262 3A6B     		ldr	r2, [r7, #48]
 2867 0264 92FBF3F3 		sdiv	r3, r2, r3
 2868 0268 9AB2     		uxth	r2, r3
 2869 026a 7B89     		ldrh	r3, [r7, #10]
 2870 026c 1344     		add	r3, r3, r2
 2871 026e 9BB2     		uxth	r3, r3
 2872 0270 BB87     		strh	r3, [r7, #60]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 60


 477:gfx.c         ****                 sa += dx12;
 2873              		.loc 1 477 0
 2874 0272 B7F91A30 		ldrsh	r3, [r7, #26]
 2875 0276 7A6B     		ldr	r2, [r7, #52]
 2876 0278 1344     		add	r3, r3, r2
 2877 027a 7B63     		str	r3, [r7, #52]
 478:gfx.c         ****                 sb += dx02;
 2878              		.loc 1 478 0
 2879 027c B7F91E30 		ldrsh	r3, [r7, #30]
 2880 0280 3A6B     		ldr	r2, [r7, #48]
 2881 0282 1344     		add	r3, r3, r2
 2882 0284 3B63     		str	r3, [r7, #48]
 479:gfx.c         ****                 /* longhand:
 480:gfx.c         ****                  a = x1 + (x2 - x1) * (y - y1) / (y2 - y1);
 481:gfx.c         ****                  b = x0 + (x2 - x0) * (y - y0) / (y2 - y0);
 482:gfx.c         ****                  */
 483:gfx.c         ****                 if(a > b) _swap_int16_t(a,b);
 2883              		.loc 1 483 0
 2884 0286 B7F93E20 		ldrsh	r2, [r7, #62]
 2885 028a B7F93C30 		ldrsh	r3, [r7, #60]
 2886 028e 9A42     		cmp	r2, r3
 2887 0290 05DD     		ble	.L85
 2888              	.LBB18:
 2889              		.loc 1 483 0 is_stmt 0 discriminator 1
 2890 0292 FB8F     		ldrh	r3, [r7, #62]	@ movhi
 2891 0294 BB82     		strh	r3, [r7, #20]	@ movhi
 2892 0296 BB8F     		ldrh	r3, [r7, #60]	@ movhi
 2893 0298 FB87     		strh	r3, [r7, #62]	@ movhi
 2894 029a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2895 029c BB87     		strh	r3, [r7, #60]	@ movhi
 2896              	.L85:
 2897              	.LBE18:
 484:gfx.c         ****                 GFXwriteFastHLine(myGFX, a, y, b-a+1, color);
 2898              		.loc 1 484 0 is_stmt 1
 2899 029e BA8F     		ldrh	r2, [r7, #60]
 2900 02a0 FB8F     		ldrh	r3, [r7, #62]
 2901 02a2 D31A     		subs	r3, r2, r3
 2902 02a4 9BB2     		uxth	r3, r3
 2903 02a6 0133     		adds	r3, r3, #1
 2904 02a8 9BB2     		uxth	r3, r3
 2905 02aa 18B2     		sxth	r0, r3
 2906 02ac B7F93A20 		ldrsh	r2, [r7, #58]
 2907 02b0 B7F93E10 		ldrsh	r1, [r7, #62]
 2908 02b4 B7F85430 		ldrh	r3, [r7, #84]
 2909 02b8 0093     		str	r3, [sp]
 2910 02ba 0346     		mov	r3, r0
 2911 02bc F868     		ldr	r0, [r7, #12]
 2912 02be FFF7FEFF 		bl	GFXwriteFastHLine
 474:gfx.c         ****                 a   = x1 + sa / dy12;
 2913              		.loc 1 474 0
 2914 02c2 B7F93A30 		ldrsh	r3, [r7, #58]
 2915 02c6 9BB2     		uxth	r3, r3
 2916 02c8 0133     		adds	r3, r3, #1
 2917 02ca 9BB2     		uxth	r3, r3
 2918 02cc 7B87     		strh	r3, [r7, #58]	@ movhi
 2919              	.L84:
 474:gfx.c         ****                 a   = x1 + sa / dy12;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 61


 2920              		.loc 1 474 0 is_stmt 0 discriminator 1
 2921 02ce B7F93A20 		ldrsh	r2, [r7, #58]
 2922 02d2 B7F95030 		ldrsh	r3, [r7, #80]
 2923 02d6 9A42     		cmp	r2, r3
 2924 02d8 B7DD     		ble	.L86
 2925              	.L69:
 485:gfx.c         ****             }
 486:gfx.c         ****             
 487:gfx.c         ****         }
 2926              		.loc 1 487 0 is_stmt 1
 2927 02da 4037     		adds	r7, r7, #64
 2928              		.cfi_def_cfa_offset 8
 2929 02dc BD46     		mov	sp, r7
 2930              		.cfi_def_cfa_register 13
 2931              		@ sp needed
 2932 02de 80BD     		pop	{r7, pc}
 2933              		.cfi_endproc
 2934              	.LFE86:
 2935              		.size	GFXfillTriangle, .-GFXfillTriangle
 2936              		.section	.text.GFXdrawBitmap,"ax",%progbits
 2937              		.align	2
 2938              		.global	GFXdrawBitmap
 2939              		.thumb
 2940              		.thumb_func
 2941              		.type	GFXdrawBitmap, %function
 2942              	GFXdrawBitmap:
 2943              	.LFB87:
 488:gfx.c         ****         
 489:gfx.c         ****         // BITMAP / XBITMAP / GRAYSCALE / RGB BITMAP FUNCTIONS ---------------------
 490:gfx.c         ****         
 491:gfx.c         ****         
 492:gfx.c         ****         
 493:gfx.c         ****         // Draw a RAM-resident 1-bit image at the specified (x,y) position,
 494:gfx.c         ****         // using the specified foreground (for set bits) and background (unset
 495:gfx.c         ****         // bits) colors.
 496:gfx.c         ****         void GFXdrawBitmap(GFX* myGFX, int16_t x, int16_t y,
 497:gfx.c         ****                            uint8_t *bitmap, int16_t w, int16_t h, uint16_t color, uint16_t bg) {
 2944              		.loc 1 497 0
 2945              		.cfi_startproc
 2946              		@ args = 16, pretend = 0, frame = 24
 2947              		@ frame_needed = 1, uses_anonymous_args = 0
 2948 0000 80B5     		push	{r7, lr}
 2949              		.cfi_def_cfa_offset 8
 2950              		.cfi_offset 7, -8
 2951              		.cfi_offset 14, -4
 2952 0002 86B0     		sub	sp, sp, #24
 2953              		.cfi_def_cfa_offset 32
 2954 0004 00AF     		add	r7, sp, #0
 2955              		.cfi_def_cfa_register 7
 2956 0006 F860     		str	r0, [r7, #12]
 2957 0008 7B60     		str	r3, [r7, #4]
 2958 000a 0B46     		mov	r3, r1	@ movhi
 2959 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 2960 000e 1346     		mov	r3, r2	@ movhi
 2961 0010 3B81     		strh	r3, [r7, #8]	@ movhi
 498:gfx.c         ****             
 499:gfx.c         **** // Getting a bit messy with these #ifndefs but startWrite() and endWrite()
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 62


 500:gfx.c         **** // don't seem to exist anywhere in the Vocodec code. Doesn't cause a build
 501:gfx.c         **** // error for the hardware version but does for JUCE version.
 502:gfx.c         **** #ifndef __cplusplus
 503:gfx.c         ****             int16_t byteWidth = (w + 7) / 8; // Bitmap scanline pad = whole byte
 2962              		.loc 1 503 0
 2963 0012 B7F92030 		ldrsh	r3, [r7, #32]
 2964 0016 0733     		adds	r3, r3, #7
 2965 0018 002B     		cmp	r3, #0
 2966 001a 00DA     		bge	.L88
 2967 001c 0733     		adds	r3, r3, #7
 2968              	.L88:
 2969 001e DB10     		asrs	r3, r3, #3
 2970 0020 3B82     		strh	r3, [r7, #16]	@ movhi
 504:gfx.c         ****             uint8_t byte = 0;
 2971              		.loc 1 504 0
 2972 0022 0023     		movs	r3, #0
 2973 0024 FB75     		strb	r3, [r7, #23]
 505:gfx.c         ****             startWrite();
 2974              		.loc 1 505 0
 2975 0026 FFF7FEFF 		bl	startWrite
 2976              	.LBB19:
 506:gfx.c         ****             for(int16_t j=0; j<h; j++, y++) {
 2977              		.loc 1 506 0
 2978 002a 0023     		movs	r3, #0
 2979 002c BB82     		strh	r3, [r7, #20]	@ movhi
 2980 002e 47E0     		b	.L89
 2981              	.L97:
 2982              	.LBB20:
 507:gfx.c         ****                 for(int16_t i=0; i<w; i++ ) {
 2983              		.loc 1 507 0
 2984 0030 0023     		movs	r3, #0
 2985 0032 7B82     		strh	r3, [r7, #18]	@ movhi
 2986 0034 32E0     		b	.L90
 2987              	.L96:
 508:gfx.c         ****                     if(i & 7) byte <<= 1;
 2988              		.loc 1 508 0
 2989 0036 7B8A     		ldrh	r3, [r7, #18]
 2990 0038 03F00703 		and	r3, r3, #7
 2991 003c 002B     		cmp	r3, #0
 2992 003e 03D0     		beq	.L91
 2993              		.loc 1 508 0 is_stmt 0 discriminator 1
 2994 0040 FB7D     		ldrb	r3, [r7, #23]
 2995 0042 5B00     		lsls	r3, r3, #1
 2996 0044 FB75     		strb	r3, [r7, #23]
 2997 0046 12E0     		b	.L92
 2998              	.L91:
 509:gfx.c         ****                     else      byte   = bitmap[j * byteWidth + i / 8];
 2999              		.loc 1 509 0 is_stmt 1
 3000 0048 B7F91430 		ldrsh	r3, [r7, #20]
 3001 004c B7F91020 		ldrsh	r2, [r7, #16]
 3002 0050 02FB03F2 		mul	r2, r2, r3
 3003 0054 B7F91230 		ldrsh	r3, [r7, #18]
 3004 0058 002B     		cmp	r3, #0
 3005 005a 00DA     		bge	.L93
 3006 005c 0733     		adds	r3, r3, #7
 3007              	.L93:
 3008 005e DB10     		asrs	r3, r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 63


 3009 0060 1BB2     		sxth	r3, r3
 3010 0062 1344     		add	r3, r3, r2
 3011 0064 1A46     		mov	r2, r3
 3012 0066 7B68     		ldr	r3, [r7, #4]
 3013 0068 1344     		add	r3, r3, r2
 3014 006a 1B78     		ldrb	r3, [r3]
 3015 006c FB75     		strb	r3, [r7, #23]
 3016              	.L92:
 510:gfx.c         ****                     GFXwritePixel(myGFX, x+i, y, (byte & 0x80) ? color : bg);
 3017              		.loc 1 510 0
 3018 006e 7A89     		ldrh	r2, [r7, #10]
 3019 0070 7B8A     		ldrh	r3, [r7, #18]
 3020 0072 1344     		add	r3, r3, r2
 3021 0074 9BB2     		uxth	r3, r3
 3022 0076 19B2     		sxth	r1, r3
 3023 0078 97F91730 		ldrsb	r3, [r7, #23]
 3024 007c 002B     		cmp	r3, #0
 3025 007e 01DA     		bge	.L94
 3026              		.loc 1 510 0 is_stmt 0 discriminator 1
 3027 0080 3B8D     		ldrh	r3, [r7, #40]
 3028 0082 00E0     		b	.L95
 3029              	.L94:
 3030              		.loc 1 510 0 discriminator 2
 3031 0084 BB8D     		ldrh	r3, [r7, #44]
 3032              	.L95:
 3033              		.loc 1 510 0 discriminator 4
 3034 0086 B7F90820 		ldrsh	r2, [r7, #8]
 3035 008a F868     		ldr	r0, [r7, #12]
 3036 008c FFF7FEFF 		bl	GFXwritePixel
 507:gfx.c         ****                     if(i & 7) byte <<= 1;
 3037              		.loc 1 507 0 is_stmt 1 discriminator 4
 3038 0090 B7F91230 		ldrsh	r3, [r7, #18]
 3039 0094 9BB2     		uxth	r3, r3
 3040 0096 0133     		adds	r3, r3, #1
 3041 0098 9BB2     		uxth	r3, r3
 3042 009a 7B82     		strh	r3, [r7, #18]	@ movhi
 3043              	.L90:
 507:gfx.c         ****                     if(i & 7) byte <<= 1;
 3044              		.loc 1 507 0 is_stmt 0 discriminator 2
 3045 009c B7F91220 		ldrsh	r2, [r7, #18]
 3046 00a0 B7F92030 		ldrsh	r3, [r7, #32]
 3047 00a4 9A42     		cmp	r2, r3
 3048 00a6 C6DB     		blt	.L96
 3049              	.LBE20:
 506:gfx.c         ****                 for(int16_t i=0; i<w; i++ ) {
 3050              		.loc 1 506 0 is_stmt 1 discriminator 2
 3051 00a8 B7F91430 		ldrsh	r3, [r7, #20]
 3052 00ac 9BB2     		uxth	r3, r3
 3053 00ae 0133     		adds	r3, r3, #1
 3054 00b0 9BB2     		uxth	r3, r3
 3055 00b2 BB82     		strh	r3, [r7, #20]	@ movhi
 3056 00b4 B7F90830 		ldrsh	r3, [r7, #8]
 3057 00b8 9BB2     		uxth	r3, r3
 3058 00ba 0133     		adds	r3, r3, #1
 3059 00bc 9BB2     		uxth	r3, r3
 3060 00be 3B81     		strh	r3, [r7, #8]	@ movhi
 3061              	.L89:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 64


 506:gfx.c         ****                 for(int16_t i=0; i<w; i++ ) {
 3062              		.loc 1 506 0 is_stmt 0 discriminator 1
 3063 00c0 B7F91420 		ldrsh	r2, [r7, #20]
 3064 00c4 B7F92430 		ldrsh	r3, [r7, #36]
 3065 00c8 9A42     		cmp	r2, r3
 3066 00ca B1DB     		blt	.L97
 3067              	.LBE19:
 511:gfx.c         ****                 }
 512:gfx.c         ****             }
 513:gfx.c         ****             endWrite();
 3068              		.loc 1 513 0 is_stmt 1
 3069 00cc FFF7FEFF 		bl	endWrite
 514:gfx.c         **** #endif
 515:gfx.c         ****         }
 3070              		.loc 1 515 0
 3071 00d0 00BF     		nop
 3072 00d2 1837     		adds	r7, r7, #24
 3073              		.cfi_def_cfa_offset 8
 3074 00d4 BD46     		mov	sp, r7
 3075              		.cfi_def_cfa_register 13
 3076              		@ sp needed
 3077 00d6 80BD     		pop	{r7, pc}
 3078              		.cfi_endproc
 3079              	.LFE87:
 3080              		.size	GFXdrawBitmap, .-GFXdrawBitmap
 3081              		.section	.text.GFXdrawChar,"ax",%progbits
 3082              		.align	2
 3083              		.global	GFXdrawChar
 3084              		.thumb
 3085              		.thumb_func
 3086              		.type	GFXdrawChar, %function
 3087              	GFXdrawChar:
 3088              	.LFB88:
 516:gfx.c         ****         
 517:gfx.c         ****         
 518:gfx.c         ****         
 519:gfx.c         ****         // TEXT- AND CHARACTER-HANDLING FUNCTIONS ----------------------------------
 520:gfx.c         ****         
 521:gfx.c         ****         // Draw a character
 522:gfx.c         ****         void GFXdrawChar(GFX* myGFX, int16_t x, int16_t y, unsigned char c,
 523:gfx.c         ****                          uint16_t color, uint16_t bg, uint8_t size) {
 3089              		.loc 1 523 0
 3090              		.cfi_startproc
 3091              		@ args = 12, pretend = 0, frame = 48
 3092              		@ frame_needed = 1, uses_anonymous_args = 0
 3093 0000 90B5     		push	{r4, r7, lr}
 3094              		.cfi_def_cfa_offset 12
 3095              		.cfi_offset 4, -12
 3096              		.cfi_offset 7, -8
 3097              		.cfi_offset 14, -4
 3098 0002 8FB0     		sub	sp, sp, #60
 3099              		.cfi_def_cfa_offset 72
 3100 0004 02AF     		add	r7, sp, #8
 3101              		.cfi_def_cfa 7, 64
 3102 0006 F860     		str	r0, [r7, #12]
 3103 0008 0846     		mov	r0, r1
 3104 000a 1146     		mov	r1, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 65


 3105 000c 1A46     		mov	r2, r3
 3106 000e 0346     		mov	r3, r0	@ movhi
 3107 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 3108 0012 0B46     		mov	r3, r1	@ movhi
 3109 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 3110 0016 1346     		mov	r3, r2
 3111 0018 FB71     		strb	r3, [r7, #7]
 524:gfx.c         ****             
 525:gfx.c         ****             if(!myGFX->gfxFont) { // 'Classic' built-in font
 3112              		.loc 1 525 0
 3113 001a FB68     		ldr	r3, [r7, #12]
 3114 001c 9B69     		ldr	r3, [r3, #24]
 3115 001e 002B     		cmp	r3, #0
 3116 0020 40F02E81 		bne	.L99
 526:gfx.c         ****                 
 527:gfx.c         ****                 if((x >= myGFX->_width)            || // Clip right
 3117              		.loc 1 527 0
 3118 0024 B7F90A30 		ldrsh	r3, [r7, #10]
 3119 0028 FA68     		ldr	r2, [r7, #12]
 3120 002a 9288     		ldrh	r2, [r2, #4]
 3121 002c 9342     		cmp	r3, r2
 3122 002e 80F2E981 		bge	.L123
 528:gfx.c         ****                    (y >= myGFX->_height)           || // Clip bottom
 3123              		.loc 1 528 0 discriminator 1
 3124 0032 B7F90830 		ldrsh	r3, [r7, #8]
 3125 0036 FA68     		ldr	r2, [r7, #12]
 3126 0038 D288     		ldrh	r2, [r2, #6]
 527:gfx.c         ****                    (y >= myGFX->_height)           || // Clip bottom
 3127              		.loc 1 527 0 discriminator 1
 3128 003a 9342     		cmp	r3, r2
 3129 003c 80F2E281 		bge	.L123
 529:gfx.c         ****                    ((x + 6 * size - 1) < 0) || // Clip left
 3130              		.loc 1 529 0
 3131 0040 B7F90A10 		ldrsh	r1, [r7, #10]
 3132 0044 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3133 0048 1346     		mov	r3, r2
 3134 004a 5B00     		lsls	r3, r3, #1
 3135 004c 1344     		add	r3, r3, r2
 3136 004e 5B00     		lsls	r3, r3, #1
 3137 0050 0B44     		add	r3, r3, r1
 3138 0052 013B     		subs	r3, r3, #1
 528:gfx.c         ****                    (y >= myGFX->_height)           || // Clip bottom
 3139              		.loc 1 528 0
 3140 0054 002B     		cmp	r3, #0
 3141 0056 C0F2D581 		blt	.L123
 530:gfx.c         ****                    ((y + 8 * size - 1) < 0))   // Clip top
 3142              		.loc 1 530 0
 3143 005a B7F90820 		ldrsh	r2, [r7, #8]
 3144 005e 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3145 0062 DB00     		lsls	r3, r3, #3
 3146 0064 1344     		add	r3, r3, r2
 3147 0066 013B     		subs	r3, r3, #1
 529:gfx.c         ****                    ((x + 6 * size - 1) < 0) || // Clip left
 3148              		.loc 1 529 0
 3149 0068 002B     		cmp	r3, #0
 3150 006a C0F2CB81 		blt	.L123
 531:gfx.c         ****                     return;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 66


 532:gfx.c         ****                 
 533:gfx.c         ****                 if(!myGFX->_cp437 && (c >= 176)) c++; // Handle 'classic' charset behavior
 3151              		.loc 1 533 0
 3152 006e FB68     		ldr	r3, [r7, #12]
 3153 0070 DB8A     		ldrh	r3, [r3, #22]
 3154 0072 002B     		cmp	r3, #0
 3155 0074 05D1     		bne	.L103
 3156              		.loc 1 533 0 is_stmt 0 discriminator 1
 3157 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3158 0078 AF2B     		cmp	r3, #175
 3159 007a 02D9     		bls	.L103
 3160              		.loc 1 533 0 discriminator 2
 3161 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3162 007e 0133     		adds	r3, r3, #1
 3163 0080 FB71     		strb	r3, [r7, #7]
 3164              	.L103:
 3165              	.LBB21:
 534:gfx.c         ****                 
 535:gfx.c         ****                 //startWrite();
 536:gfx.c         ****                 for(int8_t i=0; i<5; i++ ) { // Char bitmap = 5 columns
 3166              		.loc 1 536 0 is_stmt 1
 3167 0082 0023     		movs	r3, #0
 3168 0084 87F82F30 		strb	r3, [r7, #47]
 3169 0088 BCE0     		b	.L104
 3170              	.L112:
 3171              	.LBB22:
 537:gfx.c         ****                     uint8_t line = pgm_read_byte(&myGFX->gfxFont[c * 5 + i]);
 3172              		.loc 1 537 0
 3173 008a FB68     		ldr	r3, [r7, #12]
 3174 008c 9969     		ldr	r1, [r3, #24]
 3175 008e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3176 0090 1346     		mov	r3, r2
 3177 0092 9B00     		lsls	r3, r3, #2
 3178 0094 1A44     		add	r2, r2, r3
 3179 0096 97F92F30 		ldrsb	r3, [r7, #47]
 3180 009a 1344     		add	r3, r3, r2
 3181 009c 1A46     		mov	r2, r3
 3182 009e 1346     		mov	r3, r2
 3183 00a0 5B00     		lsls	r3, r3, #1
 3184 00a2 1344     		add	r3, r3, r2
 3185 00a4 9B00     		lsls	r3, r3, #2
 3186 00a6 0B44     		add	r3, r3, r1
 3187 00a8 1B78     		ldrb	r3, [r3]
 3188 00aa 87F82E30 		strb	r3, [r7, #46]
 3189              	.LBB23:
 538:gfx.c         ****                     for(int8_t j=0; j<8; j++, line >>= 1) {
 3190              		.loc 1 538 0
 3191 00ae 0023     		movs	r3, #0
 3192 00b0 87F82D30 		strb	r3, [r7, #45]
 3193 00b4 9AE0     		b	.L105
 3194              	.L111:
 539:gfx.c         ****                         if(line & 1) {
 3195              		.loc 1 539 0
 3196 00b6 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 3197 00ba 03F00103 		and	r3, r3, #1
 3198 00be 002B     		cmp	r3, #0
 3199 00c0 41D0     		beq	.L106
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 67


 540:gfx.c         ****                             if(size == 1)
 3200              		.loc 1 540 0
 3201 00c2 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3202 00c6 012B     		cmp	r3, #1
 3203 00c8 13D1     		bne	.L107
 541:gfx.c         ****                                 GFXwritePixel(myGFX,x+i, y+j, color);
 3204              		.loc 1 541 0
 3205 00ca 97F92F30 		ldrsb	r3, [r7, #47]
 3206 00ce 9AB2     		uxth	r2, r3
 3207 00d0 7B89     		ldrh	r3, [r7, #10]
 3208 00d2 1344     		add	r3, r3, r2
 3209 00d4 9BB2     		uxth	r3, r3
 3210 00d6 19B2     		sxth	r1, r3
 3211 00d8 97F92D30 		ldrsb	r3, [r7, #45]
 3212 00dc 9AB2     		uxth	r2, r3
 3213 00de 3B89     		ldrh	r3, [r7, #8]
 3214 00e0 1344     		add	r3, r3, r2
 3215 00e2 9BB2     		uxth	r3, r3
 3216 00e4 1AB2     		sxth	r2, r3
 3217 00e6 B7F84030 		ldrh	r3, [r7, #64]
 3218 00ea F868     		ldr	r0, [r7, #12]
 3219 00ec FFF7FEFF 		bl	GFXwritePixel
 3220 00f0 70E0     		b	.L109
 3221              	.L107:
 542:gfx.c         ****                             else
 543:gfx.c         ****                                 GFXwriteFillRect(myGFX,x+i*size, y+j*size, size, size, color);
 3222              		.loc 1 543 0
 3223 00f2 97F92F30 		ldrsb	r3, [r7, #47]
 3224 00f6 9BB2     		uxth	r3, r3
 3225 00f8 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3226 00fc 92B2     		uxth	r2, r2
 3227 00fe 02FB03F3 		mul	r3, r2, r3
 3228 0102 9AB2     		uxth	r2, r3
 3229 0104 7B89     		ldrh	r3, [r7, #10]
 3230 0106 1344     		add	r3, r3, r2
 3231 0108 9BB2     		uxth	r3, r3
 3232 010a 19B2     		sxth	r1, r3
 3233 010c 97F92D30 		ldrsb	r3, [r7, #45]
 3234 0110 9BB2     		uxth	r3, r3
 3235 0112 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3236 0116 92B2     		uxth	r2, r2
 3237 0118 02FB03F3 		mul	r3, r2, r3
 3238 011c 9AB2     		uxth	r2, r3
 3239 011e 3B89     		ldrh	r3, [r7, #8]
 3240 0120 1344     		add	r3, r3, r2
 3241 0122 9BB2     		uxth	r3, r3
 3242 0124 18B2     		sxth	r0, r3
 3243 0126 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3244 012a 1CB2     		sxth	r4, r3
 3245 012c 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3246 0130 1BB2     		sxth	r3, r3
 3247 0132 B7F84020 		ldrh	r2, [r7, #64]
 3248 0136 0192     		str	r2, [sp, #4]
 3249 0138 0093     		str	r3, [sp]
 3250 013a 2346     		mov	r3, r4
 3251 013c 0246     		mov	r2, r0
 3252 013e F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 68


 3253 0140 FFF7FEFF 		bl	GFXwriteFillRect
 3254 0144 46E0     		b	.L109
 3255              	.L106:
 544:gfx.c         ****                         } else if(bg != color) {
 3256              		.loc 1 544 0
 3257 0146 B7F84420 		ldrh	r2, [r7, #68]
 3258 014a B7F84030 		ldrh	r3, [r7, #64]
 3259 014e 9A42     		cmp	r2, r3
 3260 0150 40D0     		beq	.L109
 545:gfx.c         ****                             if(size == 1)
 3261              		.loc 1 545 0
 3262 0152 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3263 0156 012B     		cmp	r3, #1
 3264 0158 13D1     		bne	.L110
 546:gfx.c         ****                                 GFXwritePixel(myGFX,x+i, y+j, bg);
 3265              		.loc 1 546 0
 3266 015a 97F92F30 		ldrsb	r3, [r7, #47]
 3267 015e 9AB2     		uxth	r2, r3
 3268 0160 7B89     		ldrh	r3, [r7, #10]
 3269 0162 1344     		add	r3, r3, r2
 3270 0164 9BB2     		uxth	r3, r3
 3271 0166 19B2     		sxth	r1, r3
 3272 0168 97F92D30 		ldrsb	r3, [r7, #45]
 3273 016c 9AB2     		uxth	r2, r3
 3274 016e 3B89     		ldrh	r3, [r7, #8]
 3275 0170 1344     		add	r3, r3, r2
 3276 0172 9BB2     		uxth	r3, r3
 3277 0174 1AB2     		sxth	r2, r3
 3278 0176 B7F84430 		ldrh	r3, [r7, #68]
 3279 017a F868     		ldr	r0, [r7, #12]
 3280 017c FFF7FEFF 		bl	GFXwritePixel
 3281 0180 28E0     		b	.L109
 3282              	.L110:
 547:gfx.c         ****                             else
 548:gfx.c         ****                                 GFXwriteFillRect(myGFX,x+i*size, y+j*size, size, size, bg);
 3283              		.loc 1 548 0
 3284 0182 97F92F30 		ldrsb	r3, [r7, #47]
 3285 0186 9BB2     		uxth	r3, r3
 3286 0188 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3287 018c 92B2     		uxth	r2, r2
 3288 018e 02FB03F3 		mul	r3, r2, r3
 3289 0192 9AB2     		uxth	r2, r3
 3290 0194 7B89     		ldrh	r3, [r7, #10]
 3291 0196 1344     		add	r3, r3, r2
 3292 0198 9BB2     		uxth	r3, r3
 3293 019a 19B2     		sxth	r1, r3
 3294 019c 97F92D30 		ldrsb	r3, [r7, #45]
 3295 01a0 9BB2     		uxth	r3, r3
 3296 01a2 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3297 01a6 92B2     		uxth	r2, r2
 3298 01a8 02FB03F3 		mul	r3, r2, r3
 3299 01ac 9AB2     		uxth	r2, r3
 3300 01ae 3B89     		ldrh	r3, [r7, #8]
 3301 01b0 1344     		add	r3, r3, r2
 3302 01b2 9BB2     		uxth	r3, r3
 3303 01b4 18B2     		sxth	r0, r3
 3304 01b6 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 69


 3305 01ba 1CB2     		sxth	r4, r3
 3306 01bc 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3307 01c0 1BB2     		sxth	r3, r3
 3308 01c2 B7F84420 		ldrh	r2, [r7, #68]
 3309 01c6 0192     		str	r2, [sp, #4]
 3310 01c8 0093     		str	r3, [sp]
 3311 01ca 2346     		mov	r3, r4
 3312 01cc 0246     		mov	r2, r0
 3313 01ce F868     		ldr	r0, [r7, #12]
 3314 01d0 FFF7FEFF 		bl	GFXwriteFillRect
 3315              	.L109:
 538:gfx.c         ****                         if(line & 1) {
 3316              		.loc 1 538 0 discriminator 2
 3317 01d4 97F92D30 		ldrsb	r3, [r7, #45]
 3318 01d8 DBB2     		uxtb	r3, r3
 3319 01da 0133     		adds	r3, r3, #1
 3320 01dc DBB2     		uxtb	r3, r3
 3321 01de 87F82D30 		strb	r3, [r7, #45]
 3322 01e2 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 3323 01e6 5B08     		lsrs	r3, r3, #1
 3324 01e8 87F82E30 		strb	r3, [r7, #46]
 3325              	.L105:
 538:gfx.c         ****                         if(line & 1) {
 3326              		.loc 1 538 0 is_stmt 0 discriminator 1
 3327 01ec 97F92D30 		ldrsb	r3, [r7, #45]
 3328 01f0 072B     		cmp	r3, #7
 3329 01f2 7FF760AF 		ble	.L111
 3330              	.LBE23:
 3331              	.LBE22:
 536:gfx.c         ****                     uint8_t line = pgm_read_byte(&myGFX->gfxFont[c * 5 + i]);
 3332              		.loc 1 536 0 is_stmt 1 discriminator 2
 3333 01f6 97F92F30 		ldrsb	r3, [r7, #47]
 3334 01fa DBB2     		uxtb	r3, r3
 3335 01fc 0133     		adds	r3, r3, #1
 3336 01fe DBB2     		uxtb	r3, r3
 3337 0200 87F82F30 		strb	r3, [r7, #47]
 3338              	.L104:
 536:gfx.c         ****                     uint8_t line = pgm_read_byte(&myGFX->gfxFont[c * 5 + i]);
 3339              		.loc 1 536 0 is_stmt 0 discriminator 1
 3340 0204 97F92F30 		ldrsb	r3, [r7, #47]
 3341 0208 042B     		cmp	r3, #4
 3342 020a 7FF73EAF 		ble	.L112
 3343              	.LBE21:
 549:gfx.c         ****                         }
 550:gfx.c         ****                     }
 551:gfx.c         ****                 }
 552:gfx.c         ****                 if(bg != color) { // If opaque, draw vertical line for last column
 3344              		.loc 1 552 0 is_stmt 1
 3345 020e B7F84420 		ldrh	r2, [r7, #68]
 3346 0212 B7F84030 		ldrh	r3, [r7, #64]
 3347 0216 9A42     		cmp	r2, r3
 3348 0218 00F0F580 		beq	.L98
 553:gfx.c         ****                     if(size == 1) GFXwriteFastVLine(myGFX,x+5, y, 8, bg);
 3349              		.loc 1 553 0
 3350 021c 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3351 0220 012B     		cmp	r3, #1
 3352 0222 0DD1     		bne	.L114
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 70


 3353              		.loc 1 553 0 is_stmt 0 discriminator 1
 3354 0224 7B89     		ldrh	r3, [r7, #10]
 3355 0226 0533     		adds	r3, r3, #5
 3356 0228 9BB2     		uxth	r3, r3
 3357 022a 19B2     		sxth	r1, r3
 3358 022c B7F90820 		ldrsh	r2, [r7, #8]
 3359 0230 B7F84430 		ldrh	r3, [r7, #68]
 3360 0234 0093     		str	r3, [sp]
 3361 0236 0823     		movs	r3, #8
 3362 0238 F868     		ldr	r0, [r7, #12]
 3363 023a FFF7FEFF 		bl	GFXwriteFastVLine
 3364 023e E2E0     		b	.L98
 3365              	.L114:
 554:gfx.c         ****                     else          GFXwriteFillRect(myGFX,x+5*size, y, size, 8*size, bg);
 3366              		.loc 1 554 0 is_stmt 1
 3367 0240 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3368 0244 9BB2     		uxth	r3, r3
 3369 0246 1A46     		mov	r2, r3	@ movhi
 3370 0248 9200     		lsls	r2, r2, #2
 3371 024a 1344     		add	r3, r3, r2
 3372 024c 9AB2     		uxth	r2, r3
 3373 024e 7B89     		ldrh	r3, [r7, #10]
 3374 0250 1344     		add	r3, r3, r2
 3375 0252 9BB2     		uxth	r3, r3
 3376 0254 19B2     		sxth	r1, r3
 3377 0256 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3378 025a 1CB2     		sxth	r4, r3
 3379 025c 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3380 0260 9BB2     		uxth	r3, r3
 3381 0262 DB00     		lsls	r3, r3, #3
 3382 0264 9BB2     		uxth	r3, r3
 3383 0266 1BB2     		sxth	r3, r3
 3384 0268 B7F90800 		ldrsh	r0, [r7, #8]
 3385 026c B7F84420 		ldrh	r2, [r7, #68]
 3386 0270 0192     		str	r2, [sp, #4]
 3387 0272 0093     		str	r3, [sp]
 3388 0274 2346     		mov	r3, r4
 3389 0276 0246     		mov	r2, r0
 3390 0278 F868     		ldr	r0, [r7, #12]
 3391 027a FFF7FEFF 		bl	GFXwriteFillRect
 3392 027e C2E0     		b	.L98
 3393              	.L99:
 3394              	.LBB24:
 555:gfx.c         ****                 }
 556:gfx.c         ****                 //endWrite();
 557:gfx.c         ****                 
 558:gfx.c         ****             } else { // Custom font
 559:gfx.c         ****                 
 560:gfx.c         ****                 // Character is assumed previously filtered by write() to eliminate
 561:gfx.c         ****                 // newlines, returns, non-printable characters, etc.  Calling
 562:gfx.c         ****                 // drawChar() directly with 'bad' characters of font may cause mayhem!
 563:gfx.c         ****                 
 564:gfx.c         ****                 c -= (uint8_t)pgm_read_byte(&myGFX->gfxFont->first);
 3395              		.loc 1 564 0
 3396 0280 FB68     		ldr	r3, [r7, #12]
 3397 0282 9B69     		ldr	r3, [r3, #24]
 3398 0284 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 71


 3399 0286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3400 0288 FA79     		ldrb	r2, [r7, #7]
 3401 028a D31A     		subs	r3, r2, r3
 3402 028c FB71     		strb	r3, [r7, #7]
 565:gfx.c         ****                 GFXglyph *glyph  = &(((GFXglyph *)pgm_read_pointer(&myGFX->gfxFont->glyph))[c]);
 3403              		.loc 1 565 0
 3404 028e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3405 0290 DA00     		lsls	r2, r3, #3
 3406 0292 FB68     		ldr	r3, [r7, #12]
 3407 0294 9B69     		ldr	r3, [r3, #24]
 3408 0296 0433     		adds	r3, r3, #4
 3409 0298 18CB     		ldmia	r3, {r3-r4}
 3410 029a 1344     		add	r3, r3, r2
 3411 029c FB61     		str	r3, [r7, #28]
 566:gfx.c         ****                 uint8_t  *bitmap = (uint8_t *)pgm_read_pointer(&myGFX->gfxFont->bitmap);
 3412              		.loc 1 566 0
 3413 029e FB68     		ldr	r3, [r7, #12]
 3414 02a0 9B69     		ldr	r3, [r3, #24]
 3415 02a2 18CB     		ldmia	r3, {r3-r4}
 3416 02a4 BB61     		str	r3, [r7, #24]
 567:gfx.c         ****                 
 568:gfx.c         ****                 uint16_t bo = pgm_read_word(&glyph->bitmapOffset);
 3417              		.loc 1 568 0
 3418 02a6 FB69     		ldr	r3, [r7, #28]
 3419 02a8 1B88     		ldrh	r3, [r3]	@ movhi
 3420 02aa 7B85     		strh	r3, [r7, #42]	@ movhi
 569:gfx.c         ****                 uint8_t  w  = pgm_read_byte(&glyph->width),
 3421              		.loc 1 569 0
 3422 02ac FB69     		ldr	r3, [r7, #28]
 3423 02ae 9B78     		ldrb	r3, [r3, #2]
 3424 02b0 FB75     		strb	r3, [r7, #23]
 570:gfx.c         ****                 h  = pgm_read_byte(&glyph->height);
 3425              		.loc 1 570 0
 3426 02b2 FB69     		ldr	r3, [r7, #28]
 3427 02b4 DB78     		ldrb	r3, [r3, #3]
 3428 02b6 BB75     		strb	r3, [r7, #22]
 571:gfx.c         ****                 int8_t   xo = pgm_read_byte(&glyph->xOffset),
 3429              		.loc 1 571 0
 3430 02b8 FB69     		ldr	r3, [r7, #28]
 3431 02ba 0533     		adds	r3, r3, #5
 3432 02bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3433 02be 7B75     		strb	r3, [r7, #21]
 572:gfx.c         ****                 yo = pgm_read_byte(&glyph->yOffset);
 3434              		.loc 1 572 0
 3435 02c0 FB69     		ldr	r3, [r7, #28]
 3436 02c2 0633     		adds	r3, r3, #6
 3437 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3438 02c6 3B75     		strb	r3, [r7, #20]
 573:gfx.c         ****                 uint8_t  xx, yy, bits = 0, bit = 0;
 3439              		.loc 1 573 0
 3440 02c8 0023     		movs	r3, #0
 3441 02ca 87F82730 		strb	r3, [r7, #39]
 3442 02ce 0023     		movs	r3, #0
 3443 02d0 87F82630 		strb	r3, [r7, #38]
 574:gfx.c         ****                 int16_t  xo16 = 0, yo16 = 0;
 3444              		.loc 1 574 0
 3445 02d4 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 72


 3446 02d6 BB84     		strh	r3, [r7, #36]	@ movhi
 3447 02d8 0023     		movs	r3, #0
 3448 02da 7B84     		strh	r3, [r7, #34]	@ movhi
 575:gfx.c         ****                 
 576:gfx.c         ****                 if(size > 1) {
 3449              		.loc 1 576 0
 3450 02dc 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3451 02e0 012B     		cmp	r3, #1
 3452 02e2 05D9     		bls	.L115
 577:gfx.c         ****                     xo16 = xo;
 3453              		.loc 1 577 0
 3454 02e4 97F91530 		ldrsb	r3, [r7, #21]
 3455 02e8 BB84     		strh	r3, [r7, #36]	@ movhi
 578:gfx.c         ****                     yo16 = yo;
 3456              		.loc 1 578 0
 3457 02ea 97F91430 		ldrsb	r3, [r7, #20]
 3458 02ee 7B84     		strh	r3, [r7, #34]	@ movhi
 3459              	.L115:
 579:gfx.c         ****                 }
 580:gfx.c         ****                 
 581:gfx.c         ****                 // Todo: Add character clipping here
 582:gfx.c         ****                 
 583:gfx.c         ****                 // NOTE: THERE IS NO 'BACKGROUND' COLOR OPTION ON CUSTOM FONTS.
 584:gfx.c         ****                 // THIS IS ON PURPOSE AND BY DESIGN.  The background color feature
 585:gfx.c         ****                 // has typically been used with the 'classic' font to overwrite old
 586:gfx.c         ****                 // screen contents with new data.  This ONLY works because the
 587:gfx.c         ****                 // characters are a uniform size; it's not a sensible thing to do with
 588:gfx.c         ****                 // proportionally-spaced fonts with glyphs of varying sizes (and that
 589:gfx.c         ****                 // may overlap).  To replace previously-drawn text when using a custom
 590:gfx.c         ****                 // font, use the getTextBounds() function to determine the smallest
 591:gfx.c         ****                 // rectangle encompassing a string, erase the area with fillRect(),
 592:gfx.c         ****                 // then draw new text.  This WILL infortunately 'blink' the text, but
 593:gfx.c         ****                 // is unavoidable.  Drawing 'background' pixels will NOT fix this,
 594:gfx.c         ****                 // only creates a new set of problems.  Have an idea to work around
 595:gfx.c         ****                 // this (a canvas object type for MCUs that can afford the RAM and
 596:gfx.c         ****                 // displays supporting setAddrWindow() and pushColors()), but haven't
 597:gfx.c         ****                 // implemented this yet.
 598:gfx.c         ****                 
 599:gfx.c         ****                 //startWrite();
 600:gfx.c         ****                 for(yy=0; yy<h; yy++) {
 3460              		.loc 1 600 0
 3461 02f0 0023     		movs	r3, #0
 3462 02f2 87F82830 		strb	r3, [r7, #40]
 3463 02f6 7EE0     		b	.L116
 3464              	.L122:
 601:gfx.c         ****                     for(xx=0; xx<w; xx++) {
 3465              		.loc 1 601 0
 3466 02f8 0023     		movs	r3, #0
 3467 02fa 87F82930 		strb	r3, [r7, #41]
 3468 02fe 70E0     		b	.L117
 3469              	.L121:
 602:gfx.c         ****                         if(!(bit++ & 7)) {
 3470              		.loc 1 602 0
 3471 0300 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3472 0304 5A1C     		adds	r2, r3, #1
 3473 0306 87F82620 		strb	r2, [r7, #38]
 3474 030a 03F00703 		and	r3, r3, #7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 73


 3475 030e 002B     		cmp	r3, #0
 3476 0310 08D1     		bne	.L118
 603:gfx.c         ****                             bits = pgm_read_byte(&bitmap[bo++]);
 3477              		.loc 1 603 0
 3478 0312 7B8D     		ldrh	r3, [r7, #42]
 3479 0314 5A1C     		adds	r2, r3, #1
 3480 0316 7A85     		strh	r2, [r7, #42]	@ movhi
 3481 0318 1A46     		mov	r2, r3
 3482 031a BB69     		ldr	r3, [r7, #24]
 3483 031c 1344     		add	r3, r3, r2
 3484 031e 1B78     		ldrb	r3, [r3]
 3485 0320 87F82730 		strb	r3, [r7, #39]
 3486              	.L118:
 604:gfx.c         ****                         }
 605:gfx.c         ****                         if(bits & 0x80) {
 3487              		.loc 1 605 0
 3488 0324 97F92730 		ldrsb	r3, [r7, #39]
 3489 0328 002B     		cmp	r3, #0
 3490 032a 50DA     		bge	.L119
 606:gfx.c         ****                             if(size == 1) {
 3491              		.loc 1 606 0
 3492 032c 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3493 0330 012B     		cmp	r3, #1
 3494 0332 1DD1     		bne	.L120
 607:gfx.c         ****                                 GFXwritePixel(myGFX,x+xo+xx, y+yo+yy, color);
 3495              		.loc 1 607 0
 3496 0334 97F91530 		ldrsb	r3, [r7, #21]
 3497 0338 9AB2     		uxth	r2, r3
 3498 033a 7B89     		ldrh	r3, [r7, #10]
 3499 033c 1344     		add	r3, r3, r2
 3500 033e 9AB2     		uxth	r2, r3
 3501 0340 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 3502 0344 9BB2     		uxth	r3, r3
 3503 0346 1344     		add	r3, r3, r2
 3504 0348 9BB2     		uxth	r3, r3
 3505 034a 19B2     		sxth	r1, r3
 3506 034c 97F91430 		ldrsb	r3, [r7, #20]
 3507 0350 9AB2     		uxth	r2, r3
 3508 0352 3B89     		ldrh	r3, [r7, #8]
 3509 0354 1344     		add	r3, r3, r2
 3510 0356 9AB2     		uxth	r2, r3
 3511 0358 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 3512 035c 9BB2     		uxth	r3, r3
 3513 035e 1344     		add	r3, r3, r2
 3514 0360 9BB2     		uxth	r3, r3
 3515 0362 1AB2     		sxth	r2, r3
 3516 0364 B7F84030 		ldrh	r3, [r7, #64]
 3517 0368 F868     		ldr	r0, [r7, #12]
 3518 036a FFF7FEFF 		bl	GFXwritePixel
 3519 036e 2EE0     		b	.L119
 3520              	.L120:
 608:gfx.c         ****                             } else {
 609:gfx.c         ****                                 GFXwriteFillRect(myGFX,x+(xo16+xx)*size, y+(yo16+yy)*size,
 3521              		.loc 1 609 0
 3522 0370 B7F92420 		ldrsh	r2, [r7, #36]
 3523 0374 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 3524 0378 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 74


 3525 037a 9BB2     		uxth	r3, r3
 3526 037c 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3527 0380 92B2     		uxth	r2, r2
 3528 0382 02FB03F3 		mul	r3, r2, r3
 3529 0386 9AB2     		uxth	r2, r3
 3530 0388 7B89     		ldrh	r3, [r7, #10]
 3531 038a 1344     		add	r3, r3, r2
 3532 038c 9BB2     		uxth	r3, r3
 3533 038e 19B2     		sxth	r1, r3
 3534 0390 B7F92220 		ldrsh	r2, [r7, #34]
 3535 0394 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 3536 0398 1344     		add	r3, r3, r2
 3537 039a 9BB2     		uxth	r3, r3
 3538 039c 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3539 03a0 92B2     		uxth	r2, r2
 3540 03a2 02FB03F3 		mul	r3, r2, r3
 3541 03a6 9AB2     		uxth	r2, r3
 3542 03a8 3B89     		ldrh	r3, [r7, #8]
 3543 03aa 1344     		add	r3, r3, r2
 3544 03ac 9BB2     		uxth	r3, r3
 3545 03ae 18B2     		sxth	r0, r3
 3546 03b0 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3547 03b4 1CB2     		sxth	r4, r3
 3548 03b6 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3549 03ba 1BB2     		sxth	r3, r3
 3550 03bc B7F84020 		ldrh	r2, [r7, #64]
 3551 03c0 0192     		str	r2, [sp, #4]
 3552 03c2 0093     		str	r3, [sp]
 3553 03c4 2346     		mov	r3, r4
 3554 03c6 0246     		mov	r2, r0
 3555 03c8 F868     		ldr	r0, [r7, #12]
 3556 03ca FFF7FEFF 		bl	GFXwriteFillRect
 3557              	.L119:
 610:gfx.c         ****                                                  size, size, color);
 611:gfx.c         ****                             }
 612:gfx.c         ****                         }
 613:gfx.c         ****                         bits <<= 1;
 3558              		.loc 1 613 0 discriminator 2
 3559 03ce 97F82730 		ldrb	r3, [r7, #39]
 3560 03d2 5B00     		lsls	r3, r3, #1
 3561 03d4 87F82730 		strb	r3, [r7, #39]
 601:gfx.c         ****                         if(!(bit++ & 7)) {
 3562              		.loc 1 601 0 discriminator 2
 3563 03d8 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 3564 03dc 0133     		adds	r3, r3, #1
 3565 03de 87F82930 		strb	r3, [r7, #41]
 3566              	.L117:
 601:gfx.c         ****                         if(!(bit++ & 7)) {
 3567              		.loc 1 601 0 is_stmt 0 discriminator 1
 3568 03e2 97F82920 		ldrb	r2, [r7, #41]	@ zero_extendqisi2
 3569 03e6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3570 03e8 9A42     		cmp	r2, r3
 3571 03ea 89D3     		bcc	.L121
 600:gfx.c         ****                     for(xx=0; xx<w; xx++) {
 3572              		.loc 1 600 0 is_stmt 1 discriminator 2
 3573 03ec 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 3574 03f0 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 75


 3575 03f2 87F82830 		strb	r3, [r7, #40]
 3576              	.L116:
 600:gfx.c         ****                     for(xx=0; xx<w; xx++) {
 3577              		.loc 1 600 0 is_stmt 0 discriminator 1
 3578 03f6 97F82820 		ldrb	r2, [r7, #40]	@ zero_extendqisi2
 3579 03fa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3580 03fc 9A42     		cmp	r2, r3
 3581 03fe FFF47BAF 		bcc	.L122
 3582 0402 00E0     		b	.L98
 3583              	.L123:
 3584              	.LBE24:
 531:gfx.c         ****                 
 3585              		.loc 1 531 0 is_stmt 1
 3586 0404 00BF     		nop
 3587              	.L98:
 614:gfx.c         ****                     }
 615:gfx.c         ****                 }
 616:gfx.c         ****                 //endWrite();
 617:gfx.c         ****                 
 618:gfx.c         ****             } // End classic vs custom font
 619:gfx.c         ****         }
 3588              		.loc 1 619 0
 3589 0406 3437     		adds	r7, r7, #52
 3590              		.cfi_def_cfa_offset 12
 3591 0408 BD46     		mov	sp, r7
 3592              		.cfi_def_cfa_register 13
 3593              		@ sp needed
 3594 040a 90BD     		pop	{r4, r7, pc}
 3595              		.cfi_endproc
 3596              	.LFE88:
 3597              		.size	GFXdrawChar, .-GFXdrawChar
 3598              		.section	.text.GFXcheckScrollWrap,"ax",%progbits
 3599              		.align	2
 3600              		.global	GFXcheckScrollWrap
 3601              		.thumb
 3602              		.thumb_func
 3603              		.type	GFXcheckScrollWrap, %function
 3604              	GFXcheckScrollWrap:
 3605              	.LFB89:
 620:gfx.c         ****         
 621:gfx.c         ****         
 622:gfx.c         ****         void GFXcheckScrollWrap(GFX* myGFX, int16_t fontWidth) {
 3606              		.loc 1 622 0
 3607              		.cfi_startproc
 3608              		@ args = 0, pretend = 0, frame = 16
 3609              		@ frame_needed = 1, uses_anonymous_args = 0
 3610 0000 80B5     		push	{r7, lr}
 3611              		.cfi_def_cfa_offset 8
 3612              		.cfi_offset 7, -8
 3613              		.cfi_offset 14, -4
 3614 0002 84B0     		sub	sp, sp, #16
 3615              		.cfi_def_cfa_offset 24
 3616 0004 00AF     		add	r7, sp, #0
 3617              		.cfi_def_cfa_register 7
 3618 0006 7860     		str	r0, [r7, #4]
 3619 0008 0B46     		mov	r3, r1
 3620 000a 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 76


 623:gfx.c         ****             if(myGFX->wrap && ((myGFX->cursor_x + fontWidth) >= myGFX->_width)) { // Heading off ed
 3621              		.loc 1 623 0
 3622 000c 7B68     		ldr	r3, [r7, #4]
 3623 000e 9B8A     		ldrh	r3, [r3, #20]
 3624 0010 002B     		cmp	r3, #0
 3625 0012 19D0     		beq	.L125
 3626              		.loc 1 623 0 is_stmt 0 discriminator 1
 3627 0014 7B68     		ldr	r3, [r7, #4]
 3628 0016 9B89     		ldrh	r3, [r3, #12]
 3629 0018 1A46     		mov	r2, r3
 3630 001a B7F90230 		ldrsh	r3, [r7, #2]
 3631 001e 1344     		add	r3, r3, r2
 3632 0020 7A68     		ldr	r2, [r7, #4]
 3633 0022 9288     		ldrh	r2, [r2, #4]
 3634 0024 9342     		cmp	r3, r2
 3635 0026 0FDB     		blt	.L125
 624:gfx.c         ****                 myGFX->cursor_x  = 0;            // Reset x to zero
 3636              		.loc 1 624 0 is_stmt 1
 3637 0028 7B68     		ldr	r3, [r7, #4]
 3638 002a 0022     		movs	r2, #0
 3639 002c 9A81     		strh	r2, [r3, #12]	@ movhi
 625:gfx.c         ****                 myGFX->cursor_y += myGFX->fontHeight * myGFX->textsize; // Advance y one line
 3640              		.loc 1 625 0
 3641 002e 7B68     		ldr	r3, [r7, #4]
 3642 0030 5A89     		ldrh	r2, [r3, #10]
 3643 0032 7B68     		ldr	r3, [r7, #4]
 3644 0034 9B8B     		ldrh	r3, [r3, #28]
 3645 0036 7968     		ldr	r1, [r7, #4]
 3646 0038 C989     		ldrh	r1, [r1, #14]
 3647 003a 01FB03F3 		mul	r3, r1, r3
 3648 003e 9BB2     		uxth	r3, r3
 3649 0040 1344     		add	r3, r3, r2
 3650 0042 9AB2     		uxth	r2, r3
 3651 0044 7B68     		ldr	r3, [r7, #4]
 3652 0046 5A81     		strh	r2, [r3, #10]	@ movhi
 3653              	.L125:
 626:gfx.c         ****             }
 627:gfx.c         ****             
 628:gfx.c         ****             if (myGFX->autoscroll) {
 3654              		.loc 1 628 0
 3655 0048 7B68     		ldr	r3, [r7, #4]
 3656 004a 1B8C     		ldrh	r3, [r3, #32]
 3657 004c 002B     		cmp	r3, #0
 3658 004e 4FD0     		beq	.L131
 3659              	.LBB25:
 629:gfx.c         ****                 int16_t fontOffset;
 630:gfx.c         ****                 
 631:gfx.c         ****                 if(!myGFX->gfxFont) { // 'Classic' built-in font
 3660              		.loc 1 631 0
 3661 0050 7B68     		ldr	r3, [r7, #4]
 3662 0052 9B69     		ldr	r3, [r3, #24]
 3663 0054 002B     		cmp	r3, #0
 3664 0056 0AD1     		bne	.L127
 632:gfx.c         ****                     fontOffset = (myGFX->fontHeight * myGFX->textsize)-1; // cursor defines upper l
 3665              		.loc 1 632 0
 3666 0058 7B68     		ldr	r3, [r7, #4]
 3667 005a 9B8B     		ldrh	r3, [r3, #28]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 77


 3668 005c 7A68     		ldr	r2, [r7, #4]
 3669 005e D289     		ldrh	r2, [r2, #14]
 3670 0060 02FB03F3 		mul	r3, r2, r3
 3671 0064 9BB2     		uxth	r3, r3
 3672 0066 013B     		subs	r3, r3, #1
 3673 0068 9BB2     		uxth	r3, r3
 3674 006a FB81     		strh	r3, [r7, #14]	@ movhi
 3675 006c 01E0     		b	.L128
 3676              	.L127:
 633:gfx.c         ****                 } else {       // Custom font
 634:gfx.c         ****                     fontOffset = 0;                         // cursor defines lower left corner of 
 3677              		.loc 1 634 0
 3678 006e 0023     		movs	r3, #0
 3679 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 3680              	.L128:
 635:gfx.c         ****                 }
 636:gfx.c         ****                 
 637:gfx.c         ****                 // lower unified border of character
 638:gfx.c         ****                 // these does not apply to charachters like "g" oder "j" which will be cut off
 639:gfx.c         ****                 uint16_t cursor = myGFX->cursor_y + fontOffset + myGFX->fontDesc * myGFX->textsize;
 3681              		.loc 1 639 0
 3682 0072 7B68     		ldr	r3, [r7, #4]
 3683 0074 5A89     		ldrh	r2, [r3, #10]
 3684 0076 FB89     		ldrh	r3, [r7, #14]
 3685 0078 1344     		add	r3, r3, r2
 3686 007a 9AB2     		uxth	r2, r3
 3687 007c 7B68     		ldr	r3, [r7, #4]
 3688 007e DB8B     		ldrh	r3, [r3, #30]
 3689 0080 7968     		ldr	r1, [r7, #4]
 3690 0082 C989     		ldrh	r1, [r1, #14]
 3691 0084 01FB03F3 		mul	r3, r1, r3
 3692 0088 9BB2     		uxth	r3, r3
 3693 008a 1344     		add	r3, r3, r2
 3694 008c BB81     		strh	r3, [r7, #12]	@ movhi
 640:gfx.c         ****                 
 641:gfx.c         ****                 if (cursor >= myGFX->_height) {
 3695              		.loc 1 641 0
 3696 008e 7B68     		ldr	r3, [r7, #4]
 3697 0090 DB88     		ldrh	r3, [r3, #6]
 3698 0092 BA89     		ldrh	r2, [r7, #12]
 3699 0094 9A42     		cmp	r2, r3
 3700 0096 2BD3     		bcc	.L131
 642:gfx.c         ****                     GFXscrollUp(myGFX, cursor - myGFX->_height+1, myGFX->textcolor != myGFX->textbg
 3701              		.loc 1 642 0
 3702 0098 BB89     		ldrh	r3, [r7, #12]	@ movhi
 3703 009a DAB2     		uxtb	r2, r3
 3704 009c 7B68     		ldr	r3, [r7, #4]
 3705 009e DB88     		ldrh	r3, [r3, #6]
 3706 00a0 DBB2     		uxtb	r3, r3
 3707 00a2 D31A     		subs	r3, r2, r3
 3708 00a4 DBB2     		uxtb	r3, r3
 3709 00a6 0133     		adds	r3, r3, #1
 3710 00a8 D9B2     		uxtb	r1, r3
 3711 00aa 7B68     		ldr	r3, [r7, #4]
 3712 00ac 1A8A     		ldrh	r2, [r3, #16]
 3713 00ae 7B68     		ldr	r3, [r7, #4]
 3714 00b0 5B8A     		ldrh	r3, [r3, #18]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 78


 3715 00b2 9A42     		cmp	r2, r3
 3716 00b4 02D0     		beq	.L129
 3717              		.loc 1 642 0 is_stmt 0 discriminator 1
 3718 00b6 7B68     		ldr	r3, [r7, #4]
 3719 00b8 5B8A     		ldrh	r3, [r3, #18]
 3720 00ba 00E0     		b	.L130
 3721              	.L129:
 3722              		.loc 1 642 0 discriminator 2
 3723 00bc 0023     		movs	r3, #0
 3724              	.L130:
 3725              		.loc 1 642 0 discriminator 4
 3726 00be 1A46     		mov	r2, r3
 3727 00c0 7868     		ldr	r0, [r7, #4]
 3728 00c2 FFF7FEFF 		bl	GFXscrollUp
 643:gfx.c         ****                     
 644:gfx.c         ****                     myGFX->cursor_x  = 0;
 3729              		.loc 1 644 0 is_stmt 1 discriminator 4
 3730 00c6 7B68     		ldr	r3, [r7, #4]
 3731 00c8 0022     		movs	r2, #0
 3732 00ca 9A81     		strh	r2, [r3, #12]	@ movhi
 645:gfx.c         ****                     myGFX->cursor_y = myGFX->_height - fontOffset-1 - myGFX->fontDesc * myGFX->text
 3733              		.loc 1 645 0 discriminator 4
 3734 00cc 7B68     		ldr	r3, [r7, #4]
 3735 00ce DA88     		ldrh	r2, [r3, #6]
 3736 00d0 FB89     		ldrh	r3, [r7, #14]
 3737 00d2 D31A     		subs	r3, r2, r3
 3738 00d4 9AB2     		uxth	r2, r3
 3739 00d6 7B68     		ldr	r3, [r7, #4]
 3740 00d8 DB8B     		ldrh	r3, [r3, #30]
 3741 00da 7968     		ldr	r1, [r7, #4]
 3742 00dc C989     		ldrh	r1, [r1, #14]
 3743 00de 01FB03F3 		mul	r3, r1, r3
 3744 00e2 9BB2     		uxth	r3, r3
 3745 00e4 D31A     		subs	r3, r2, r3
 3746 00e6 9BB2     		uxth	r3, r3
 3747 00e8 013B     		subs	r3, r3, #1
 3748 00ea 9AB2     		uxth	r2, r3
 3749 00ec 7B68     		ldr	r3, [r7, #4]
 3750 00ee 5A81     		strh	r2, [r3, #10]	@ movhi
 3751              	.L131:
 3752              	.LBE25:
 646:gfx.c         ****                 }
 647:gfx.c         ****             }
 648:gfx.c         ****         }
 3753              		.loc 1 648 0
 3754 00f0 00BF     		nop
 3755 00f2 1037     		adds	r7, r7, #16
 3756              		.cfi_def_cfa_offset 8
 3757 00f4 BD46     		mov	sp, r7
 3758              		.cfi_def_cfa_register 13
 3759              		@ sp needed
 3760 00f6 80BD     		pop	{r7, pc}
 3761              		.cfi_endproc
 3762              	.LFE89:
 3763              		.size	GFXcheckScrollWrap, .-GFXcheckScrollWrap
 3764              		.section	.text.GFXwrite,"ax",%progbits
 3765              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 79


 3766              		.global	GFXwrite
 3767              		.thumb
 3768              		.thumb_func
 3769              		.type	GFXwrite, %function
 3770              	GFXwrite:
 3771              	.LFB90:
 649:gfx.c         ****         
 650:gfx.c         ****         
 651:gfx.c         ****         void GFXwrite(GFX* myGFX, uint8_t c) {
 3772              		.loc 1 651 0
 3773              		.cfi_startproc
 3774              		@ args = 0, pretend = 0, frame = 24
 3775              		@ frame_needed = 1, uses_anonymous_args = 0
 3776 0000 B0B5     		push	{r4, r5, r7, lr}
 3777              		.cfi_def_cfa_offset 16
 3778              		.cfi_offset 4, -16
 3779              		.cfi_offset 5, -12
 3780              		.cfi_offset 7, -8
 3781              		.cfi_offset 14, -4
 3782 0002 8AB0     		sub	sp, sp, #40
 3783              		.cfi_def_cfa_offset 56
 3784 0004 04AF     		add	r7, sp, #16
 3785              		.cfi_def_cfa 7, 40
 3786 0006 7860     		str	r0, [r7, #4]
 3787 0008 0B46     		mov	r3, r1
 3788 000a FB70     		strb	r3, [r7, #3]
 652:gfx.c         ****             if(!myGFX->gfxFont) { // 'Classic' built-in font
 3789              		.loc 1 652 0
 3790 000c 7B68     		ldr	r3, [r7, #4]
 3791 000e 9B69     		ldr	r3, [r3, #24]
 3792 0010 002B     		cmp	r3, #0
 3793 0012 45D1     		bne	.L133
 653:gfx.c         ****                 if(c == '\n') {                        // Newline?
 3794              		.loc 1 653 0
 3795 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3796 0016 0A2B     		cmp	r3, #10
 3797 0018 10D1     		bne	.L134
 654:gfx.c         ****                     myGFX->cursor_y += myGFX->fontHeight * myGFX->textsize;
 3798              		.loc 1 654 0
 3799 001a 7B68     		ldr	r3, [r7, #4]
 3800 001c 5A89     		ldrh	r2, [r3, #10]
 3801 001e 7B68     		ldr	r3, [r7, #4]
 3802 0020 9B8B     		ldrh	r3, [r3, #28]
 3803 0022 7968     		ldr	r1, [r7, #4]
 3804 0024 C989     		ldrh	r1, [r1, #14]
 3805 0026 01FB03F3 		mul	r3, r1, r3
 3806 002a 9BB2     		uxth	r3, r3
 3807 002c 1344     		add	r3, r3, r2
 3808 002e 9AB2     		uxth	r2, r3
 3809 0030 7B68     		ldr	r3, [r7, #4]
 3810 0032 5A81     		strh	r2, [r3, #10]	@ movhi
 655:gfx.c         ****                     myGFX->cursor_x  = 0;                     // Reset x to zero,
 3811              		.loc 1 655 0
 3812 0034 7B68     		ldr	r3, [r7, #4]
 3813 0036 0022     		movs	r2, #0
 3814 0038 9A81     		strh	r2, [r3, #12]	@ movhi
 656:gfx.c         ****                     //cursor_y += textsize * 8;          // advance y one line
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 80


 657:gfx.c         ****                 } else if(c != '\r') {                 // Ignore carriage returns
 658:gfx.c         ****                     // if(wrap && ((cursor_x + textsize * 6) > _width)) { // Off right?
 659:gfx.c         ****                     //     cursor_x  = 0;                 // Reset x to zero,
 660:gfx.c         ****                     //     cursor_y += textsize * 8;      // advance y one line
 661:gfx.c         ****                     // }
 662:gfx.c         ****                     GFXcheckScrollWrap(myGFX, myGFX->textsize * 6 - myGFX->textsize * 2);
 663:gfx.c         ****                     GFXdrawChar(myGFX, myGFX->cursor_x, myGFX->cursor_y, c, myGFX->textcolor, myGFX
 664:gfx.c         ****                     myGFX->cursor_x += myGFX->textsize * 6;          // Advance x one char
 665:gfx.c         ****                 }
 666:gfx.c         ****                 
 667:gfx.c         ****             } else { // Custom font
 668:gfx.c         ****                 
 669:gfx.c         ****                 if(c == '\n') {
 670:gfx.c         ****                     myGFX->cursor_x  = 0;
 671:gfx.c         ****                     myGFX->cursor_y += (int16_t)myGFX->textsize *
 672:gfx.c         ****                     (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvance);
 673:gfx.c         ****                 } else if(c != '\r') {
 674:gfx.c         ****                     uint8_t first = pgm_read_byte(&myGFX->gfxFont->first);
 675:gfx.c         ****                     if((c >= first) && (c <= (uint8_t)pgm_read_byte(&myGFX->gfxFont->last))) {
 676:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 677:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 678:gfx.c         ****                         uint8_t   w     = pgm_read_byte(&glyph->width),
 679:gfx.c         ****                         h     = pgm_read_byte(&glyph->height);
 680:gfx.c         ****                         if((w > 0) && (h > 0)) { // Is there an associated bitmap?
 681:gfx.c         ****                             int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
 682:gfx.c         ****                             GFXcheckScrollWrap(myGFX, myGFX->textsize * (xo + w));
 683:gfx.c         ****                             // if(wrap && ((cursor_x + textsize * (xo + w)) > _width)) {
 684:gfx.c         ****                             //     cursor_x  = 0;
 685:gfx.c         ****                             //     cursor_y += (int16_t)textsize *
 686:gfx.c         ****                             //       (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
 687:gfx.c         ****                             // }
 688:gfx.c         ****                             GFXdrawChar(myGFX, myGFX->cursor_x, myGFX->cursor_y, c, myGFX->textcolo
 689:gfx.c         ****                         }
 690:gfx.c         ****                         myGFX->cursor_x += (uint8_t)pgm_read_byte(&glyph->xAdvance) * (int16_t)myGF
 691:gfx.c         ****                     }
 692:gfx.c         ****                 }
 693:gfx.c         ****                 
 694:gfx.c         ****             }
 695:gfx.c         ****         }
 3815              		.loc 1 695 0
 3816 003a AAE0     		b	.L139
 3817              	.L134:
 657:gfx.c         ****                     // if(wrap && ((cursor_x + textsize * 6) > _width)) { // Off right?
 3818              		.loc 1 657 0
 3819 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3820 003e 0D2B     		cmp	r3, #13
 3821 0040 00F0A780 		beq	.L139
 662:gfx.c         ****                     GFXdrawChar(myGFX, myGFX->cursor_x, myGFX->cursor_y, c, myGFX->textcolor, myGFX
 3822              		.loc 1 662 0
 3823 0044 7B68     		ldr	r3, [r7, #4]
 3824 0046 DB89     		ldrh	r3, [r3, #14]
 3825 0048 9B00     		lsls	r3, r3, #2
 3826 004a 9BB2     		uxth	r3, r3
 3827 004c 1BB2     		sxth	r3, r3
 3828 004e 1946     		mov	r1, r3
 3829 0050 7868     		ldr	r0, [r7, #4]
 3830 0052 FFF7FEFF 		bl	GFXcheckScrollWrap
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 81


 663:gfx.c         ****                     myGFX->cursor_x += myGFX->textsize * 6;          // Advance x one char
 3831              		.loc 1 663 0
 3832 0056 7B68     		ldr	r3, [r7, #4]
 3833 0058 9B89     		ldrh	r3, [r3, #12]
 3834 005a 18B2     		sxth	r0, r3
 3835 005c 7B68     		ldr	r3, [r7, #4]
 3836 005e 5B89     		ldrh	r3, [r3, #10]
 3837 0060 1CB2     		sxth	r4, r3
 3838 0062 7B68     		ldr	r3, [r7, #4]
 3839 0064 1B8A     		ldrh	r3, [r3, #16]
 3840 0066 7A68     		ldr	r2, [r7, #4]
 3841 0068 528A     		ldrh	r2, [r2, #18]
 3842 006a 7968     		ldr	r1, [r7, #4]
 3843 006c C989     		ldrh	r1, [r1, #14]
 3844 006e C9B2     		uxtb	r1, r1
 3845 0070 FD78     		ldrb	r5, [r7, #3]	@ zero_extendqisi2
 3846 0072 0291     		str	r1, [sp, #8]
 3847 0074 0192     		str	r2, [sp, #4]
 3848 0076 0093     		str	r3, [sp]
 3849 0078 2B46     		mov	r3, r5
 3850 007a 2246     		mov	r2, r4
 3851 007c 0146     		mov	r1, r0
 3852 007e 7868     		ldr	r0, [r7, #4]
 3853 0080 FFF7FEFF 		bl	GFXdrawChar
 664:gfx.c         ****                 }
 3854              		.loc 1 664 0
 3855 0084 7B68     		ldr	r3, [r7, #4]
 3856 0086 9A89     		ldrh	r2, [r3, #12]
 3857 0088 7B68     		ldr	r3, [r7, #4]
 3858 008a DB89     		ldrh	r3, [r3, #14]
 3859 008c 1946     		mov	r1, r3	@ movhi
 3860 008e 4900     		lsls	r1, r1, #1
 3861 0090 0B44     		add	r3, r3, r1
 3862 0092 5B00     		lsls	r3, r3, #1
 3863 0094 9BB2     		uxth	r3, r3
 3864 0096 1344     		add	r3, r3, r2
 3865 0098 9AB2     		uxth	r2, r3
 3866 009a 7B68     		ldr	r3, [r7, #4]
 3867 009c 9A81     		strh	r2, [r3, #12]	@ movhi
 3868              		.loc 1 695 0
 3869 009e 78E0     		b	.L139
 3870              	.L133:
 669:gfx.c         ****                     myGFX->cursor_x  = 0;
 3871              		.loc 1 669 0
 3872 00a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3873 00a2 0A2B     		cmp	r3, #10
 3874 00a4 13D1     		bne	.L137
 670:gfx.c         ****                     myGFX->cursor_y += (int16_t)myGFX->textsize *
 3875              		.loc 1 670 0
 3876 00a6 7B68     		ldr	r3, [r7, #4]
 3877 00a8 0022     		movs	r2, #0
 3878 00aa 9A81     		strh	r2, [r3, #12]	@ movhi
 671:gfx.c         ****                     (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvance);
 3879              		.loc 1 671 0
 3880 00ac 7B68     		ldr	r3, [r7, #4]
 3881 00ae 5A89     		ldrh	r2, [r3, #10]
 3882 00b0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 82


 3883 00b2 DB89     		ldrh	r3, [r3, #14]
 672:gfx.c         ****                 } else if(c != '\r') {
 3884              		.loc 1 672 0
 3885 00b4 7968     		ldr	r1, [r7, #4]
 3886 00b6 8969     		ldr	r1, [r1, #24]
 3887 00b8 0A31     		adds	r1, r1, #10
 3888 00ba 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 671:gfx.c         ****                     (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvance);
 3889              		.loc 1 671 0
 3890 00bc 89B2     		uxth	r1, r1
 3891 00be 01FB03F3 		mul	r3, r1, r3
 3892 00c2 9BB2     		uxth	r3, r3
 3893 00c4 1344     		add	r3, r3, r2
 3894 00c6 9AB2     		uxth	r2, r3
 3895 00c8 7B68     		ldr	r3, [r7, #4]
 3896 00ca 5A81     		strh	r2, [r3, #10]	@ movhi
 3897              		.loc 1 695 0
 3898 00cc 61E0     		b	.L139
 3899              	.L137:
 673:gfx.c         ****                     uint8_t first = pgm_read_byte(&myGFX->gfxFont->first);
 3900              		.loc 1 673 0
 3901 00ce FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3902 00d0 0D2B     		cmp	r3, #13
 3903 00d2 5ED0     		beq	.L139
 3904              	.LBB26:
 674:gfx.c         ****                     if((c >= first) && (c <= (uint8_t)pgm_read_byte(&myGFX->gfxFont->last))) {
 3905              		.loc 1 674 0
 3906 00d4 7B68     		ldr	r3, [r7, #4]
 3907 00d6 9B69     		ldr	r3, [r3, #24]
 3908 00d8 1B7A     		ldrb	r3, [r3, #8]
 3909 00da FB75     		strb	r3, [r7, #23]
 675:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 3910              		.loc 1 675 0
 3911 00dc FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3912 00de FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3913 00e0 9A42     		cmp	r2, r3
 3914 00e2 56D3     		bcc	.L139
 675:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 3915              		.loc 1 675 0 is_stmt 0 discriminator 1
 3916 00e4 7B68     		ldr	r3, [r7, #4]
 3917 00e6 9B69     		ldr	r3, [r3, #24]
 3918 00e8 0933     		adds	r3, r3, #9
 3919 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3920 00ec FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3921 00ee 9A42     		cmp	r2, r3
 3922 00f0 4FD8     		bhi	.L139
 3923              	.LBB27:
 677:gfx.c         ****                         uint8_t   w     = pgm_read_byte(&glyph->width),
 3924              		.loc 1 677 0 is_stmt 1
 3925 00f2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3926 00f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3927 00f6 D31A     		subs	r3, r2, r3
 3928 00f8 DA00     		lsls	r2, r3, #3
 676:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 3929              		.loc 1 676 0
 3930 00fa 7B68     		ldr	r3, [r7, #4]
 3931 00fc 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 83


 3932 00fe 0433     		adds	r3, r3, #4
 3933 0100 18CB     		ldmia	r3, {r3-r4}
 677:gfx.c         ****                         uint8_t   w     = pgm_read_byte(&glyph->width),
 3934              		.loc 1 677 0
 3935 0102 1344     		add	r3, r3, r2
 676:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 3936              		.loc 1 676 0
 3937 0104 3B61     		str	r3, [r7, #16]
 678:gfx.c         ****                         h     = pgm_read_byte(&glyph->height);
 3938              		.loc 1 678 0
 3939 0106 3B69     		ldr	r3, [r7, #16]
 3940 0108 9B78     		ldrb	r3, [r3, #2]
 3941 010a FB73     		strb	r3, [r7, #15]
 679:gfx.c         ****                         if((w > 0) && (h > 0)) { // Is there an associated bitmap?
 3942              		.loc 1 679 0
 3943 010c 3B69     		ldr	r3, [r7, #16]
 3944 010e DB78     		ldrb	r3, [r3, #3]
 3945 0110 BB73     		strb	r3, [r7, #14]
 680:gfx.c         ****                             int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
 3946              		.loc 1 680 0
 3947 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3948 0114 002B     		cmp	r3, #0
 3949 0116 2DD0     		beq	.L138
 680:gfx.c         ****                             int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
 3950              		.loc 1 680 0 is_stmt 0 discriminator 1
 3951 0118 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3952 011a 002B     		cmp	r3, #0
 3953 011c 2AD0     		beq	.L138
 3954              	.LBB28:
 681:gfx.c         ****                             GFXcheckScrollWrap(myGFX, myGFX->textsize * (xo + w));
 3955              		.loc 1 681 0 is_stmt 1
 3956 011e 3B69     		ldr	r3, [r7, #16]
 3957 0120 0533     		adds	r3, r3, #5
 3958 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3959 0124 5BB2     		sxtb	r3, r3
 3960 0126 BB81     		strh	r3, [r7, #12]	@ movhi
 682:gfx.c         ****                             // if(wrap && ((cursor_x + textsize * (xo + w)) > _width)) {
 3961              		.loc 1 682 0
 3962 0128 7B68     		ldr	r3, [r7, #4]
 3963 012a DB89     		ldrh	r3, [r3, #14]
 3964 012c B7F90C10 		ldrsh	r1, [r7, #12]
 3965 0130 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3966 0132 0A44     		add	r2, r2, r1
 3967 0134 92B2     		uxth	r2, r2
 3968 0136 02FB03F3 		mul	r3, r2, r3
 3969 013a 9BB2     		uxth	r3, r3
 3970 013c 1BB2     		sxth	r3, r3
 3971 013e 1946     		mov	r1, r3
 3972 0140 7868     		ldr	r0, [r7, #4]
 3973 0142 FFF7FEFF 		bl	GFXcheckScrollWrap
 688:gfx.c         ****                         }
 3974              		.loc 1 688 0
 3975 0146 7B68     		ldr	r3, [r7, #4]
 3976 0148 9B89     		ldrh	r3, [r3, #12]
 3977 014a 18B2     		sxth	r0, r3
 3978 014c 7B68     		ldr	r3, [r7, #4]
 3979 014e 5B89     		ldrh	r3, [r3, #10]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 84


 3980 0150 1CB2     		sxth	r4, r3
 3981 0152 7B68     		ldr	r3, [r7, #4]
 3982 0154 1B8A     		ldrh	r3, [r3, #16]
 3983 0156 7A68     		ldr	r2, [r7, #4]
 3984 0158 528A     		ldrh	r2, [r2, #18]
 3985 015a 7968     		ldr	r1, [r7, #4]
 3986 015c C989     		ldrh	r1, [r1, #14]
 3987 015e C9B2     		uxtb	r1, r1
 3988 0160 FD78     		ldrb	r5, [r7, #3]	@ zero_extendqisi2
 3989 0162 0291     		str	r1, [sp, #8]
 3990 0164 0192     		str	r2, [sp, #4]
 3991 0166 0093     		str	r3, [sp]
 3992 0168 2B46     		mov	r3, r5
 3993 016a 2246     		mov	r2, r4
 3994 016c 0146     		mov	r1, r0
 3995 016e 7868     		ldr	r0, [r7, #4]
 3996 0170 FFF7FEFF 		bl	GFXdrawChar
 3997              	.L138:
 3998              	.LBE28:
 690:gfx.c         ****                     }
 3999              		.loc 1 690 0
 4000 0174 7B68     		ldr	r3, [r7, #4]
 4001 0176 9A89     		ldrh	r2, [r3, #12]
 4002 0178 3B69     		ldr	r3, [r7, #16]
 4003 017a 0433     		adds	r3, r3, #4
 4004 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4005 017e 9BB2     		uxth	r3, r3
 4006 0180 7968     		ldr	r1, [r7, #4]
 4007 0182 C989     		ldrh	r1, [r1, #14]
 4008 0184 01FB03F3 		mul	r3, r1, r3
 4009 0188 9BB2     		uxth	r3, r3
 4010 018a 1344     		add	r3, r3, r2
 4011 018c 9AB2     		uxth	r2, r3
 4012 018e 7B68     		ldr	r3, [r7, #4]
 4013 0190 9A81     		strh	r2, [r3, #12]	@ movhi
 4014              	.L139:
 4015              	.LBE27:
 4016              	.LBE26:
 4017              		.loc 1 695 0
 4018 0192 00BF     		nop
 4019 0194 1837     		adds	r7, r7, #24
 4020              		.cfi_def_cfa_offset 16
 4021 0196 BD46     		mov	sp, r7
 4022              		.cfi_def_cfa_register 13
 4023              		@ sp needed
 4024 0198 B0BD     		pop	{r4, r5, r7, pc}
 4025              		.cfi_endproc
 4026              	.LFE90:
 4027              		.size	GFXwrite, .-GFXwrite
 4028 019a 00BF     		.section	.text.GFXsetCursor,"ax",%progbits
 4029              		.align	2
 4030              		.global	GFXsetCursor
 4031              		.thumb
 4032              		.thumb_func
 4033              		.type	GFXsetCursor, %function
 4034              	GFXsetCursor:
 4035              	.LFB91:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 85


 696:gfx.c         ****         
 697:gfx.c         ****         void GFXsetCursor(GFX* myGFX, int16_t x, int16_t y) {
 4036              		.loc 1 697 0
 4037              		.cfi_startproc
 4038              		@ args = 0, pretend = 0, frame = 8
 4039              		@ frame_needed = 1, uses_anonymous_args = 0
 4040              		@ link register save eliminated.
 4041 0000 80B4     		push	{r7}
 4042              		.cfi_def_cfa_offset 4
 4043              		.cfi_offset 7, -4
 4044 0002 83B0     		sub	sp, sp, #12
 4045              		.cfi_def_cfa_offset 16
 4046 0004 00AF     		add	r7, sp, #0
 4047              		.cfi_def_cfa_register 7
 4048 0006 7860     		str	r0, [r7, #4]
 4049 0008 0B46     		mov	r3, r1
 4050 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 4051 000c 1346     		mov	r3, r2	@ movhi
 4052 000e 3B80     		strh	r3, [r7]	@ movhi
 698:gfx.c         ****             myGFX->cursor_x = x;
 4053              		.loc 1 698 0
 4054 0010 7A88     		ldrh	r2, [r7, #2]
 4055 0012 7B68     		ldr	r3, [r7, #4]
 4056 0014 9A81     		strh	r2, [r3, #12]	@ movhi
 699:gfx.c         ****             myGFX->cursor_y = y;
 4057              		.loc 1 699 0
 4058 0016 3A88     		ldrh	r2, [r7]
 4059 0018 7B68     		ldr	r3, [r7, #4]
 4060 001a 5A81     		strh	r2, [r3, #10]	@ movhi
 700:gfx.c         ****         }
 4061              		.loc 1 700 0
 4062 001c 00BF     		nop
 4063 001e 0C37     		adds	r7, r7, #12
 4064              		.cfi_def_cfa_offset 4
 4065 0020 BD46     		mov	sp, r7
 4066              		.cfi_def_cfa_register 13
 4067              		@ sp needed
 4068 0022 80BC     		pop	{r7}
 4069              		.cfi_restore 7
 4070              		.cfi_def_cfa_offset 0
 4071 0024 7047     		bx	lr
 4072              		.cfi_endproc
 4073              	.LFE91:
 4074              		.size	GFXsetCursor, .-GFXsetCursor
 4075 0026 00BF     		.section	.text.GFXgetCursorX,"ax",%progbits
 4076              		.align	2
 4077              		.global	GFXgetCursorX
 4078              		.thumb
 4079              		.thumb_func
 4080              		.type	GFXgetCursorX, %function
 4081              	GFXgetCursorX:
 4082              	.LFB92:
 701:gfx.c         ****         
 702:gfx.c         ****         int16_t GFXgetCursorX(GFX* myGFX)
 703:gfx.c         ****         {
 4083              		.loc 1 703 0
 4084              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 86


 4085              		@ args = 0, pretend = 0, frame = 8
 4086              		@ frame_needed = 1, uses_anonymous_args = 0
 4087              		@ link register save eliminated.
 4088 0000 80B4     		push	{r7}
 4089              		.cfi_def_cfa_offset 4
 4090              		.cfi_offset 7, -4
 4091 0002 83B0     		sub	sp, sp, #12
 4092              		.cfi_def_cfa_offset 16
 4093 0004 00AF     		add	r7, sp, #0
 4094              		.cfi_def_cfa_register 7
 4095 0006 7860     		str	r0, [r7, #4]
 704:gfx.c         ****             return myGFX->cursor_x;
 4096              		.loc 1 704 0
 4097 0008 7B68     		ldr	r3, [r7, #4]
 4098 000a 9B89     		ldrh	r3, [r3, #12]
 4099 000c 1BB2     		sxth	r3, r3
 705:gfx.c         ****         }
 4100              		.loc 1 705 0
 4101 000e 1846     		mov	r0, r3
 4102 0010 0C37     		adds	r7, r7, #12
 4103              		.cfi_def_cfa_offset 4
 4104 0012 BD46     		mov	sp, r7
 4105              		.cfi_def_cfa_register 13
 4106              		@ sp needed
 4107 0014 80BC     		pop	{r7}
 4108              		.cfi_restore 7
 4109              		.cfi_def_cfa_offset 0
 4110 0016 7047     		bx	lr
 4111              		.cfi_endproc
 4112              	.LFE92:
 4113              		.size	GFXgetCursorX, .-GFXgetCursorX
 4114              		.section	.text.GFXgetCursorY,"ax",%progbits
 4115              		.align	2
 4116              		.global	GFXgetCursorY
 4117              		.thumb
 4118              		.thumb_func
 4119              		.type	GFXgetCursorY, %function
 4120              	GFXgetCursorY:
 4121              	.LFB93:
 706:gfx.c         ****         
 707:gfx.c         ****         int16_t GFXgetCursorY(GFX* myGFX)
 708:gfx.c         ****         {
 4122              		.loc 1 708 0
 4123              		.cfi_startproc
 4124              		@ args = 0, pretend = 0, frame = 8
 4125              		@ frame_needed = 1, uses_anonymous_args = 0
 4126              		@ link register save eliminated.
 4127 0000 80B4     		push	{r7}
 4128              		.cfi_def_cfa_offset 4
 4129              		.cfi_offset 7, -4
 4130 0002 83B0     		sub	sp, sp, #12
 4131              		.cfi_def_cfa_offset 16
 4132 0004 00AF     		add	r7, sp, #0
 4133              		.cfi_def_cfa_register 7
 4134 0006 7860     		str	r0, [r7, #4]
 709:gfx.c         ****             return myGFX->cursor_y;
 4135              		.loc 1 709 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 87


 4136 0008 7B68     		ldr	r3, [r7, #4]
 4137 000a 5B89     		ldrh	r3, [r3, #10]
 4138 000c 1BB2     		sxth	r3, r3
 710:gfx.c         ****         }
 4139              		.loc 1 710 0
 4140 000e 1846     		mov	r0, r3
 4141 0010 0C37     		adds	r7, r7, #12
 4142              		.cfi_def_cfa_offset 4
 4143 0012 BD46     		mov	sp, r7
 4144              		.cfi_def_cfa_register 13
 4145              		@ sp needed
 4146 0014 80BC     		pop	{r7}
 4147              		.cfi_restore 7
 4148              		.cfi_def_cfa_offset 0
 4149 0016 7047     		bx	lr
 4150              		.cfi_endproc
 4151              	.LFE93:
 4152              		.size	GFXgetCursorY, .-GFXgetCursorY
 4153              		.section	.text.GFXsetTextSize,"ax",%progbits
 4154              		.align	2
 4155              		.global	GFXsetTextSize
 4156              		.thumb
 4157              		.thumb_func
 4158              		.type	GFXsetTextSize, %function
 4159              	GFXsetTextSize:
 4160              	.LFB94:
 711:gfx.c         ****         
 712:gfx.c         ****         void GFXsetTextSize(GFX* myGFX, uint8_t s) {
 4161              		.loc 1 712 0
 4162              		.cfi_startproc
 4163              		@ args = 0, pretend = 0, frame = 8
 4164              		@ frame_needed = 1, uses_anonymous_args = 0
 4165              		@ link register save eliminated.
 4166 0000 80B4     		push	{r7}
 4167              		.cfi_def_cfa_offset 4
 4168              		.cfi_offset 7, -4
 4169 0002 83B0     		sub	sp, sp, #12
 4170              		.cfi_def_cfa_offset 16
 4171 0004 00AF     		add	r7, sp, #0
 4172              		.cfi_def_cfa_register 7
 4173 0006 7860     		str	r0, [r7, #4]
 4174 0008 0B46     		mov	r3, r1
 4175 000a FB70     		strb	r3, [r7, #3]
 713:gfx.c         ****             myGFX->textsize = (s > 0) ? s : 1;
 4176              		.loc 1 713 0
 4177 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4178 000e 002B     		cmp	r3, #0
 4179 0010 02D0     		beq	.L146
 4180              		.loc 1 713 0 is_stmt 0 discriminator 1
 4181 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4182 0014 9AB2     		uxth	r2, r3
 4183 0016 00E0     		b	.L147
 4184              	.L146:
 4185              		.loc 1 713 0 discriminator 2
 4186 0018 0122     		movs	r2, #1
 4187              	.L147:
 4188              		.loc 1 713 0 discriminator 4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 88


 4189 001a 7B68     		ldr	r3, [r7, #4]
 4190 001c DA81     		strh	r2, [r3, #14]	@ movhi
 714:gfx.c         ****         }
 4191              		.loc 1 714 0 is_stmt 1 discriminator 4
 4192 001e 00BF     		nop
 4193 0020 0C37     		adds	r7, r7, #12
 4194              		.cfi_def_cfa_offset 4
 4195 0022 BD46     		mov	sp, r7
 4196              		.cfi_def_cfa_register 13
 4197              		@ sp needed
 4198 0024 80BC     		pop	{r7}
 4199              		.cfi_restore 7
 4200              		.cfi_def_cfa_offset 0
 4201 0026 7047     		bx	lr
 4202              		.cfi_endproc
 4203              	.LFE94:
 4204              		.size	GFXsetTextSize, .-GFXsetTextSize
 4205              		.section	.text.GFXsetTextColor,"ax",%progbits
 4206              		.align	2
 4207              		.global	GFXsetTextColor
 4208              		.thumb
 4209              		.thumb_func
 4210              		.type	GFXsetTextColor, %function
 4211              	GFXsetTextColor:
 4212              	.LFB95:
 715:gfx.c         ****         
 716:gfx.c         ****         void GFXsetTextColor(GFX* myGFX, uint16_t c, uint16_t b) {
 4213              		.loc 1 716 0
 4214              		.cfi_startproc
 4215              		@ args = 0, pretend = 0, frame = 8
 4216              		@ frame_needed = 1, uses_anonymous_args = 0
 4217              		@ link register save eliminated.
 4218 0000 80B4     		push	{r7}
 4219              		.cfi_def_cfa_offset 4
 4220              		.cfi_offset 7, -4
 4221 0002 83B0     		sub	sp, sp, #12
 4222              		.cfi_def_cfa_offset 16
 4223 0004 00AF     		add	r7, sp, #0
 4224              		.cfi_def_cfa_register 7
 4225 0006 7860     		str	r0, [r7, #4]
 4226 0008 0B46     		mov	r3, r1
 4227 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 4228 000c 1346     		mov	r3, r2	@ movhi
 4229 000e 3B80     		strh	r3, [r7]	@ movhi
 717:gfx.c         ****             myGFX->textcolor   = c;
 4230              		.loc 1 717 0
 4231 0010 7B68     		ldr	r3, [r7, #4]
 4232 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4233 0014 1A82     		strh	r2, [r3, #16]	@ movhi
 718:gfx.c         ****             myGFX->textbgcolor = b;
 4234              		.loc 1 718 0
 4235 0016 7B68     		ldr	r3, [r7, #4]
 4236 0018 3A88     		ldrh	r2, [r7]	@ movhi
 4237 001a 5A82     		strh	r2, [r3, #18]	@ movhi
 719:gfx.c         ****         }
 4238              		.loc 1 719 0
 4239 001c 00BF     		nop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 89


 4240 001e 0C37     		adds	r7, r7, #12
 4241              		.cfi_def_cfa_offset 4
 4242 0020 BD46     		mov	sp, r7
 4243              		.cfi_def_cfa_register 13
 4244              		@ sp needed
 4245 0022 80BC     		pop	{r7}
 4246              		.cfi_restore 7
 4247              		.cfi_def_cfa_offset 0
 4248 0024 7047     		bx	lr
 4249              		.cfi_endproc
 4250              	.LFE95:
 4251              		.size	GFXsetTextColor, .-GFXsetTextColor
 4252 0026 00BF     		.section	.text.GFXsetTextWrap,"ax",%progbits
 4253              		.align	2
 4254              		.global	GFXsetTextWrap
 4255              		.thumb
 4256              		.thumb_func
 4257              		.type	GFXsetTextWrap, %function
 4258              	GFXsetTextWrap:
 4259              	.LFB96:
 720:gfx.c         ****         
 721:gfx.c         ****         void GFXsetTextWrap(GFX* myGFX, uint8_t w) {
 4260              		.loc 1 721 0
 4261              		.cfi_startproc
 4262              		@ args = 0, pretend = 0, frame = 8
 4263              		@ frame_needed = 1, uses_anonymous_args = 0
 4264              		@ link register save eliminated.
 4265 0000 80B4     		push	{r7}
 4266              		.cfi_def_cfa_offset 4
 4267              		.cfi_offset 7, -4
 4268 0002 83B0     		sub	sp, sp, #12
 4269              		.cfi_def_cfa_offset 16
 4270 0004 00AF     		add	r7, sp, #0
 4271              		.cfi_def_cfa_register 7
 4272 0006 7860     		str	r0, [r7, #4]
 4273 0008 0B46     		mov	r3, r1
 4274 000a FB70     		strb	r3, [r7, #3]
 722:gfx.c         ****             myGFX->wrap = w;
 4275              		.loc 1 722 0
 4276 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4277 000e 9AB2     		uxth	r2, r3
 4278 0010 7B68     		ldr	r3, [r7, #4]
 4279 0012 9A82     		strh	r2, [r3, #20]	@ movhi
 723:gfx.c         ****         }
 4280              		.loc 1 723 0
 4281 0014 00BF     		nop
 4282 0016 0C37     		adds	r7, r7, #12
 4283              		.cfi_def_cfa_offset 4
 4284 0018 BD46     		mov	sp, r7
 4285              		.cfi_def_cfa_register 13
 4286              		@ sp needed
 4287 001a 80BC     		pop	{r7}
 4288              		.cfi_restore 7
 4289              		.cfi_def_cfa_offset 0
 4290 001c 7047     		bx	lr
 4291              		.cfi_endproc
 4292              	.LFE96:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 90


 4293              		.size	GFXsetTextWrap, .-GFXsetTextWrap
 4294 001e 00BF     		.section	.text.GFXgetRotation,"ax",%progbits
 4295              		.align	2
 4296              		.global	GFXgetRotation
 4297              		.thumb
 4298              		.thumb_func
 4299              		.type	GFXgetRotation, %function
 4300              	GFXgetRotation:
 4301              	.LFB97:
 724:gfx.c         ****         
 725:gfx.c         ****         uint8_t GFXgetRotation(GFX* myGFX)  {
 4302              		.loc 1 725 0
 4303              		.cfi_startproc
 4304              		@ args = 0, pretend = 0, frame = 8
 4305              		@ frame_needed = 1, uses_anonymous_args = 0
 4306              		@ link register save eliminated.
 4307 0000 80B4     		push	{r7}
 4308              		.cfi_def_cfa_offset 4
 4309              		.cfi_offset 7, -4
 4310 0002 83B0     		sub	sp, sp, #12
 4311              		.cfi_def_cfa_offset 16
 4312 0004 00AF     		add	r7, sp, #0
 4313              		.cfi_def_cfa_register 7
 4314 0006 7860     		str	r0, [r7, #4]
 726:gfx.c         ****             return myGFX->rotation;
 4315              		.loc 1 726 0
 4316 0008 7B68     		ldr	r3, [r7, #4]
 4317 000a 1B89     		ldrh	r3, [r3, #8]
 4318 000c DBB2     		uxtb	r3, r3
 727:gfx.c         ****         }
 4319              		.loc 1 727 0
 4320 000e 1846     		mov	r0, r3
 4321 0010 0C37     		adds	r7, r7, #12
 4322              		.cfi_def_cfa_offset 4
 4323 0012 BD46     		mov	sp, r7
 4324              		.cfi_def_cfa_register 13
 4325              		@ sp needed
 4326 0014 80BC     		pop	{r7}
 4327              		.cfi_restore 7
 4328              		.cfi_def_cfa_offset 0
 4329 0016 7047     		bx	lr
 4330              		.cfi_endproc
 4331              	.LFE97:
 4332              		.size	GFXgetRotation, .-GFXgetRotation
 4333              		.section	.text.GFXsetRotation,"ax",%progbits
 4334              		.align	2
 4335              		.global	GFXsetRotation
 4336              		.thumb
 4337              		.thumb_func
 4338              		.type	GFXsetRotation, %function
 4339              	GFXsetRotation:
 4340              	.LFB98:
 728:gfx.c         ****         
 729:gfx.c         ****         void GFXsetRotation(GFX* myGFX, uint8_t x) {
 4341              		.loc 1 729 0
 4342              		.cfi_startproc
 4343              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 91


 4344              		@ frame_needed = 1, uses_anonymous_args = 0
 4345              		@ link register save eliminated.
 4346 0000 80B4     		push	{r7}
 4347              		.cfi_def_cfa_offset 4
 4348              		.cfi_offset 7, -4
 4349 0002 83B0     		sub	sp, sp, #12
 4350              		.cfi_def_cfa_offset 16
 4351 0004 00AF     		add	r7, sp, #0
 4352              		.cfi_def_cfa_register 7
 4353 0006 7860     		str	r0, [r7, #4]
 4354 0008 0B46     		mov	r3, r1
 4355 000a FB70     		strb	r3, [r7, #3]
 730:gfx.c         ****             myGFX->rotation = (x & 3);
 4356              		.loc 1 730 0
 4357 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4358 000e 9BB2     		uxth	r3, r3
 4359 0010 03F00303 		and	r3, r3, #3
 4360 0014 9AB2     		uxth	r2, r3
 4361 0016 7B68     		ldr	r3, [r7, #4]
 4362 0018 1A81     		strh	r2, [r3, #8]	@ movhi
 731:gfx.c         ****             switch(myGFX->rotation) {
 4363              		.loc 1 731 0
 4364 001a 7B68     		ldr	r3, [r7, #4]
 4365 001c 1B89     		ldrh	r3, [r3, #8]
 4366 001e 032B     		cmp	r3, #3
 4367 0020 24D8     		bhi	.L157
 4368 0022 01A2     		adr	r2, .L155
 4369 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4370              		.p2align 2
 4371              	.L155:
 4372 0028 39000000 		.word	.L154+1
 4373 002c 53000000 		.word	.L156+1
 4374 0030 39000000 		.word	.L154+1
 4375 0034 53000000 		.word	.L156+1
 4376              		.p2align 1
 4377              	.L154:
 732:gfx.c         ****                 case 0:
 733:gfx.c         ****                 case 2:
 734:gfx.c         ****                     myGFX->_width  = myGFX->WIDTH;
 4378              		.loc 1 734 0
 4379 0038 7B68     		ldr	r3, [r7, #4]
 4380 003a B3F90030 		ldrsh	r3, [r3]
 4381 003e 9AB2     		uxth	r2, r3
 4382 0040 7B68     		ldr	r3, [r7, #4]
 4383 0042 9A80     		strh	r2, [r3, #4]	@ movhi
 735:gfx.c         ****                     myGFX->_height = myGFX->HEIGHT;
 4384              		.loc 1 735 0
 4385 0044 7B68     		ldr	r3, [r7, #4]
 4386 0046 B3F90230 		ldrsh	r3, [r3, #2]
 4387 004a 9AB2     		uxth	r2, r3
 4388 004c 7B68     		ldr	r3, [r7, #4]
 4389 004e DA80     		strh	r2, [r3, #6]	@ movhi
 736:gfx.c         ****                     break;
 4390              		.loc 1 736 0
 4391 0050 0CE0     		b	.L153
 4392              	.L156:
 737:gfx.c         ****                 case 1:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 92


 738:gfx.c         ****                 case 3:
 739:gfx.c         ****                     myGFX->_width  = myGFX->HEIGHT;
 4393              		.loc 1 739 0
 4394 0052 7B68     		ldr	r3, [r7, #4]
 4395 0054 B3F90230 		ldrsh	r3, [r3, #2]
 4396 0058 9AB2     		uxth	r2, r3
 4397 005a 7B68     		ldr	r3, [r7, #4]
 4398 005c 9A80     		strh	r2, [r3, #4]	@ movhi
 740:gfx.c         ****                     myGFX->_height = myGFX->WIDTH;
 4399              		.loc 1 740 0
 4400 005e 7B68     		ldr	r3, [r7, #4]
 4401 0060 B3F90030 		ldrsh	r3, [r3]
 4402 0064 9AB2     		uxth	r2, r3
 4403 0066 7B68     		ldr	r3, [r7, #4]
 4404 0068 DA80     		strh	r2, [r3, #6]	@ movhi
 741:gfx.c         ****                     break;
 4405              		.loc 1 741 0
 4406 006a 00BF     		nop
 4407              	.L153:
 4408              	.L157:
 742:gfx.c         ****             }
 743:gfx.c         ****         }
 4409              		.loc 1 743 0
 4410 006c 00BF     		nop
 4411 006e 0C37     		adds	r7, r7, #12
 4412              		.cfi_def_cfa_offset 4
 4413 0070 BD46     		mov	sp, r7
 4414              		.cfi_def_cfa_register 13
 4415              		@ sp needed
 4416 0072 80BC     		pop	{r7}
 4417              		.cfi_restore 7
 4418              		.cfi_def_cfa_offset 0
 4419 0074 7047     		bx	lr
 4420              		.cfi_endproc
 4421              	.LFE98:
 4422              		.size	GFXsetRotation, .-GFXsetRotation
 4423 0076 00BF     		.section	.text.GFXcp437,"ax",%progbits
 4424              		.align	2
 4425              		.global	GFXcp437
 4426              		.thumb
 4427              		.thumb_func
 4428              		.type	GFXcp437, %function
 4429              	GFXcp437:
 4430              	.LFB99:
 744:gfx.c         ****         
 745:gfx.c         ****         // Enable (or disable) Code Page 437-compatible charset.
 746:gfx.c         ****         // There was an error in glcdfont.c for the longest time -- one character
 747:gfx.c         ****         // (#176, the 'light shade' block) was missing -- this threw off the index
 748:gfx.c         ****         // of every character that followed it.  But a TON of code has been written
 749:gfx.c         ****         // with the erroneous character indices.  By default, the library uses the
 750:gfx.c         ****         // original 'wrong' behavior and old sketches will still work.  Pass 'true'
 751:gfx.c         ****         // to this function to use correct CP437 character values in your code.
 752:gfx.c         ****         void GFXcp437(GFX* myGFX, uint8_t x) {
 4431              		.loc 1 752 0
 4432              		.cfi_startproc
 4433              		@ args = 0, pretend = 0, frame = 8
 4434              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 93


 4435              		@ link register save eliminated.
 4436 0000 80B4     		push	{r7}
 4437              		.cfi_def_cfa_offset 4
 4438              		.cfi_offset 7, -4
 4439 0002 83B0     		sub	sp, sp, #12
 4440              		.cfi_def_cfa_offset 16
 4441 0004 00AF     		add	r7, sp, #0
 4442              		.cfi_def_cfa_register 7
 4443 0006 7860     		str	r0, [r7, #4]
 4444 0008 0B46     		mov	r3, r1
 4445 000a FB70     		strb	r3, [r7, #3]
 753:gfx.c         ****             myGFX->_cp437 = x;
 4446              		.loc 1 753 0
 4447 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4448 000e 9AB2     		uxth	r2, r3
 4449 0010 7B68     		ldr	r3, [r7, #4]
 4450 0012 DA82     		strh	r2, [r3, #22]	@ movhi
 754:gfx.c         ****         }
 4451              		.loc 1 754 0
 4452 0014 00BF     		nop
 4453 0016 0C37     		adds	r7, r7, #12
 4454              		.cfi_def_cfa_offset 4
 4455 0018 BD46     		mov	sp, r7
 4456              		.cfi_def_cfa_register 13
 4457              		@ sp needed
 4458 001a 80BC     		pop	{r7}
 4459              		.cfi_restore 7
 4460              		.cfi_def_cfa_offset 0
 4461 001c 7047     		bx	lr
 4462              		.cfi_endproc
 4463              	.LFE99:
 4464              		.size	GFXcp437, .-GFXcp437
 4465 001e 00BF     		.section	.text.GFXsetFont,"ax",%progbits
 4466              		.align	2
 4467              		.global	GFXsetFont
 4468              		.thumb
 4469              		.thumb_func
 4470              		.type	GFXsetFont, %function
 4471              	GFXsetFont:
 4472              	.LFB100:
 755:gfx.c         ****         
 756:gfx.c         ****         void GFXsetFont(GFX* myGFX, const GFXfont *f) {
 4473              		.loc 1 756 0
 4474              		.cfi_startproc
 4475              		@ args = 0, pretend = 0, frame = 24
 4476              		@ frame_needed = 1, uses_anonymous_args = 0
 4477              		@ link register save eliminated.
 4478 0000 90B4     		push	{r4, r7}
 4479              		.cfi_def_cfa_offset 8
 4480              		.cfi_offset 4, -8
 4481              		.cfi_offset 7, -4
 4482 0002 86B0     		sub	sp, sp, #24
 4483              		.cfi_def_cfa_offset 32
 4484 0004 00AF     		add	r7, sp, #0
 4485              		.cfi_def_cfa_register 7
 4486 0006 7860     		str	r0, [r7, #4]
 4487 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 94


 757:gfx.c         ****             
 758:gfx.c         ****             if(f)
 4488              		.loc 1 758 0
 4489 000a 3B68     		ldr	r3, [r7]
 4490 000c 002B     		cmp	r3, #0
 4491 000e 0AD0     		beq	.L160
 759:gfx.c         ****             {            // Font struct pointer passed in?
 760:gfx.c         ****                 if(!myGFX->gfxFont) { // And no current font struct?
 4492              		.loc 1 760 0
 4493 0010 7B68     		ldr	r3, [r7, #4]
 4494 0012 9B69     		ldr	r3, [r3, #24]
 4495 0014 002B     		cmp	r3, #0
 4496 0016 59D1     		bne	.L162
 761:gfx.c         ****                     // Switching from classic to new font behavior.
 762:gfx.c         ****                     // Move cursor pos down 6 pixels so it's on baseline.
 763:gfx.c         ****                     myGFX->cursor_y += 6;
 4497              		.loc 1 763 0
 4498 0018 7B68     		ldr	r3, [r7, #4]
 4499 001a 5B89     		ldrh	r3, [r3, #10]
 4500 001c 0633     		adds	r3, r3, #6
 4501 001e 9AB2     		uxth	r2, r3
 4502 0020 7B68     		ldr	r3, [r7, #4]
 4503 0022 5A81     		strh	r2, [r3, #10]	@ movhi
 4504 0024 52E0     		b	.L162
 4505              	.L160:
 764:gfx.c         ****                 }
 765:gfx.c         ****             }
 766:gfx.c         ****             else if(myGFX->gfxFont)
 4506              		.loc 1 766 0
 4507 0026 7B68     		ldr	r3, [r7, #4]
 4508 0028 9B69     		ldr	r3, [r3, #24]
 4509 002a 002B     		cmp	r3, #0
 4510 002c 3ED0     		beq	.L163
 4511              	.LBB29:
 767:gfx.c         ****             { // NULL passed.  Current font struct defined?
 768:gfx.c         ****                 // Switching from new to classic font behavior.
 769:gfx.c         ****                 // Move cursor pos up 6 pixels so it's at top-left of char.
 770:gfx.c         ****                 //cursor_y -= 6;
 771:gfx.c         ****                 // calculate max descender ("j" or "g")
 772:gfx.c         ****                 myGFX->fontDesc = 0;
 4512              		.loc 1 772 0
 4513 002e 7B68     		ldr	r3, [r7, #4]
 4514 0030 0022     		movs	r2, #0
 4515 0032 DA83     		strh	r2, [r3, #30]	@ movhi
 773:gfx.c         ****                 
 774:gfx.c         ****                 uint8_t first  = (uint8_t) pgm_read_byte(&f->first);
 4516              		.loc 1 774 0
 4517 0034 3B68     		ldr	r3, [r7]
 4518 0036 0833     		adds	r3, r3, #8
 4519 0038 1B78     		ldrb	r3, [r3]
 4520 003a BB75     		strb	r3, [r7, #22]
 775:gfx.c         ****                 uint8_t last  = (uint8_t) pgm_read_byte(&f->last);
 4521              		.loc 1 775 0
 4522 003c 3B68     		ldr	r3, [r7]
 4523 003e 0933     		adds	r3, r3, #9
 4524 0040 1B78     		ldrb	r3, [r3]
 4525 0042 7B75     		strb	r3, [r7, #21]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 95


 4526              	.LBB30:
 776:gfx.c         ****                 for (uint8_t i = first; i <= last; i++)
 4527              		.loc 1 776 0
 4528 0044 BB7D     		ldrb	r3, [r7, #22]
 4529 0046 FB75     		strb	r3, [r7, #23]
 4530 0048 25E0     		b	.L164
 4531              	.L166:
 4532              	.LBB31:
 777:gfx.c         ****                 {
 778:gfx.c         ****                     GFXglyph *glyph;
 779:gfx.c         ****                     uint8_t gh;
 780:gfx.c         ****                     int8_t  yo;
 781:gfx.c         ****                     
 782:gfx.c         ****                     glyph = &(((GFXglyph *)pgm_read_pointer(&f->glyph))[i-first]);
 4533              		.loc 1 782 0
 4534 004a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4535 004c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4536 004e D31A     		subs	r3, r2, r3
 4537 0050 DA00     		lsls	r2, r3, #3
 4538 0052 3B68     		ldr	r3, [r7]
 4539 0054 0433     		adds	r3, r3, #4
 4540 0056 18CB     		ldmia	r3, {r3-r4}
 4541 0058 1344     		add	r3, r3, r2
 4542 005a 3B61     		str	r3, [r7, #16]
 783:gfx.c         ****                     
 784:gfx.c         ****                     gh = (uint8_t) pgm_read_byte(&glyph->height);
 4543              		.loc 1 784 0
 4544 005c 3B69     		ldr	r3, [r7, #16]
 4545 005e 0333     		adds	r3, r3, #3
 4546 0060 1B78     		ldrb	r3, [r3]
 4547 0062 FB73     		strb	r3, [r7, #15]
 785:gfx.c         ****                     yo = (int8_t) pgm_read_byte(&glyph->yOffset);
 4548              		.loc 1 785 0
 4549 0064 3B69     		ldr	r3, [r7, #16]
 4550 0066 0633     		adds	r3, r3, #6
 4551 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4552 006a BB73     		strb	r3, [r7, #14]
 786:gfx.c         ****                     
 787:gfx.c         ****                     if (gh + yo > myGFX->fontDesc)
 4553              		.loc 1 787 0
 4554 006c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4555 006e 97F90E30 		ldrsb	r3, [r7, #14]
 4556 0072 1344     		add	r3, r3, r2
 4557 0074 7A68     		ldr	r2, [r7, #4]
 4558 0076 D28B     		ldrh	r2, [r2, #30]
 4559 0078 9342     		cmp	r3, r2
 4560 007a 09DD     		ble	.L165
 788:gfx.c         ****                     {
 789:gfx.c         ****                         myGFX->fontDesc = gh + yo;
 4561              		.loc 1 789 0
 4562 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4563 007e 1AB2     		sxth	r2, r3
 4564 0080 97F90E30 		ldrsb	r3, [r7, #14]
 4565 0084 1BB2     		sxth	r3, r3
 4566 0086 1344     		add	r3, r3, r2
 4567 0088 1BB2     		sxth	r3, r3
 4568 008a 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 96


 4569 008c 7B68     		ldr	r3, [r7, #4]
 4570 008e DA83     		strh	r2, [r3, #30]	@ movhi
 4571              	.L165:
 4572              	.LBE31:
 776:gfx.c         ****                 {
 4573              		.loc 1 776 0 discriminator 2
 4574 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4575 0092 0133     		adds	r3, r3, #1
 4576 0094 FB75     		strb	r3, [r7, #23]
 4577              	.L164:
 776:gfx.c         ****                 {
 4578              		.loc 1 776 0 is_stmt 0 discriminator 1
 4579 0096 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4580 0098 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4581 009a 9A42     		cmp	r2, r3
 4582 009c D5D9     		bls	.L166
 4583              	.LBE30:
 790:gfx.c         ****                     }
 791:gfx.c         ****                 }
 792:gfx.c         ****                 
 793:gfx.c         ****                 myGFX->fontHeight = (int16_t) pgm_read_byte(&f->yAdvance);
 4584              		.loc 1 793 0 is_stmt 1
 4585 009e 3B68     		ldr	r3, [r7]
 4586 00a0 0A33     		adds	r3, r3, #10
 4587 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4588 00a4 9AB2     		uxth	r2, r3
 4589 00a6 7B68     		ldr	r3, [r7, #4]
 4590 00a8 9A83     		strh	r2, [r3, #28]	@ movhi
 4591              	.LBE29:
 4592 00aa 0FE0     		b	.L162
 4593              	.L163:
 794:gfx.c         ****             }
 795:gfx.c         ****             else
 796:gfx.c         ****             {
 797:gfx.c         ****                 if(myGFX->gfxFont)
 4594              		.loc 1 797 0
 4595 00ac 7B68     		ldr	r3, [r7, #4]
 4596 00ae 9B69     		ldr	r3, [r3, #24]
 4597 00b0 002B     		cmp	r3, #0
 4598 00b2 05D0     		beq	.L167
 798:gfx.c         ****                 { // NULL passed.  Current font struct defined?
 799:gfx.c         ****                     // Switching from new to classic font behavior.
 800:gfx.c         ****                     // Move cursor pos up 6 pixels so it's at top-left of char.
 801:gfx.c         ****                     myGFX->cursor_y -= 6;
 4599              		.loc 1 801 0
 4600 00b4 7B68     		ldr	r3, [r7, #4]
 4601 00b6 5B89     		ldrh	r3, [r3, #10]
 4602 00b8 063B     		subs	r3, r3, #6
 4603 00ba 9AB2     		uxth	r2, r3
 4604 00bc 7B68     		ldr	r3, [r7, #4]
 4605 00be 5A81     		strh	r2, [r3, #10]	@ movhi
 4606              	.L167:
 802:gfx.c         ****                 }
 803:gfx.c         ****                 
 804:gfx.c         ****                 myGFX->fontHeight = 8;
 4607              		.loc 1 804 0
 4608 00c0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 97


 4609 00c2 0822     		movs	r2, #8
 4610 00c4 9A83     		strh	r2, [r3, #28]	@ movhi
 805:gfx.c         ****                 myGFX->fontDesc = 0;
 4611              		.loc 1 805 0
 4612 00c6 7B68     		ldr	r3, [r7, #4]
 4613 00c8 0022     		movs	r2, #0
 4614 00ca DA83     		strh	r2, [r3, #30]	@ movhi
 4615              	.L162:
 806:gfx.c         ****             }
 807:gfx.c         ****             myGFX->gfxFont = (GFXfont *)f;
 4616              		.loc 1 807 0
 4617 00cc 7B68     		ldr	r3, [r7, #4]
 4618 00ce 3A68     		ldr	r2, [r7]
 4619 00d0 9A61     		str	r2, [r3, #24]
 808:gfx.c         ****         }
 4620              		.loc 1 808 0
 4621 00d2 00BF     		nop
 4622 00d4 1837     		adds	r7, r7, #24
 4623              		.cfi_def_cfa_offset 8
 4624 00d6 BD46     		mov	sp, r7
 4625              		.cfi_def_cfa_register 13
 4626              		@ sp needed
 4627 00d8 90BC     		pop	{r4, r7}
 4628              		.cfi_restore 7
 4629              		.cfi_restore 4
 4630              		.cfi_def_cfa_offset 0
 4631 00da 7047     		bx	lr
 4632              		.cfi_endproc
 4633              	.LFE100:
 4634              		.size	GFXsetFont, .-GFXsetFont
 4635              		.section	.text.GFXcharBounds,"ax",%progbits
 4636              		.align	2
 4637              		.global	GFXcharBounds
 4638              		.thumb
 4639              		.thumb_func
 4640              		.type	GFXcharBounds, %function
 4641              	GFXcharBounds:
 4642              	.LFB101:
 809:gfx.c         ****         
 810:gfx.c         ****         
 811:gfx.c         ****         
 812:gfx.c         ****         
 813:gfx.c         ****         
 814:gfx.c         ****         
 815:gfx.c         ****         
 816:gfx.c         ****         // Broke this out as it's used by both the PROGMEM- and RAM-resident
 817:gfx.c         ****         // getTextBounds() functions.
 818:gfx.c         ****         void GFXcharBounds(GFX* myGFX, char c, int16_t *x, int16_t *y,
 819:gfx.c         ****                            int16_t *minx, int16_t *miny, int16_t *maxx, int16_t *maxy) {
 4643              		.loc 1 819 0
 4644              		.cfi_startproc
 4645              		@ args = 16, pretend = 0, frame = 48
 4646              		@ frame_needed = 1, uses_anonymous_args = 0
 4647              		@ link register save eliminated.
 4648 0000 90B4     		push	{r4, r7}
 4649              		.cfi_def_cfa_offset 8
 4650              		.cfi_offset 4, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 98


 4651              		.cfi_offset 7, -4
 4652 0002 8CB0     		sub	sp, sp, #48
 4653              		.cfi_def_cfa_offset 56
 4654 0004 00AF     		add	r7, sp, #0
 4655              		.cfi_def_cfa_register 7
 4656 0006 F860     		str	r0, [r7, #12]
 4657 0008 7A60     		str	r2, [r7, #4]
 4658 000a 3B60     		str	r3, [r7]
 4659 000c 0B46     		mov	r3, r1
 4660 000e FB72     		strb	r3, [r7, #11]
 820:gfx.c         ****             
 821:gfx.c         ****             if(myGFX->gfxFont) {
 4661              		.loc 1 821 0
 4662 0010 FB68     		ldr	r3, [r7, #12]
 4663 0012 9B69     		ldr	r3, [r3, #24]
 4664 0014 002B     		cmp	r3, #0
 4665 0016 00F0F380 		beq	.L169
 822:gfx.c         ****                 
 823:gfx.c         ****                 if(c == '\n') { // Newline?
 4666              		.loc 1 823 0
 4667 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4668 001c 0A2B     		cmp	r3, #10
 4669 001e 16D1     		bne	.L170
 824:gfx.c         ****                     *x  = 0;    // Reset x to zero, advance y by one line
 4670              		.loc 1 824 0
 4671 0020 7B68     		ldr	r3, [r7, #4]
 4672 0022 0022     		movs	r2, #0
 4673 0024 1A80     		strh	r2, [r3]	@ movhi
 825:gfx.c         ****                     *y += myGFX->textsize * (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvance);
 4674              		.loc 1 825 0
 4675 0026 3B68     		ldr	r3, [r7]
 4676 0028 B3F90030 		ldrsh	r3, [r3]
 4677 002c 9AB2     		uxth	r2, r3
 4678 002e FB68     		ldr	r3, [r7, #12]
 4679 0030 DB89     		ldrh	r3, [r3, #14]
 4680 0032 F968     		ldr	r1, [r7, #12]
 4681 0034 8969     		ldr	r1, [r1, #24]
 4682 0036 0A31     		adds	r1, r1, #10
 4683 0038 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4684 003a 89B2     		uxth	r1, r1
 4685 003c 01FB03F3 		mul	r3, r1, r3
 4686 0040 9BB2     		uxth	r3, r3
 4687 0042 1344     		add	r3, r3, r2
 4688 0044 9BB2     		uxth	r3, r3
 4689 0046 1AB2     		sxth	r2, r3
 4690 0048 3B68     		ldr	r3, [r7]
 4691 004a 1A80     		strh	r2, [r3]	@ movhi
 826:gfx.c         ****                 } else if(c != '\r') { // Not a carriage return; is normal char
 827:gfx.c         ****                     uint8_t first = pgm_read_byte(&myGFX->gfxFont->first),
 828:gfx.c         ****                     last  = pgm_read_byte(&myGFX->gfxFont->last);
 829:gfx.c         ****                     if((c >= first) && (c <= last)) { // Char present in this font?
 830:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 831:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 832:gfx.c         ****                         uint8_t gw = pgm_read_byte(&glyph->width),
 833:gfx.c         ****                         gh = pgm_read_byte(&glyph->height),
 834:gfx.c         ****                         xa = pgm_read_byte(&glyph->xAdvance);
 835:gfx.c         ****                         int8_t  xo = pgm_read_byte(&glyph->xOffset),
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 99


 836:gfx.c         ****                         yo = pgm_read_byte(&glyph->yOffset);
 837:gfx.c         ****                         if(myGFX->wrap && ((*x+(((int16_t)xo+gw)*myGFX->textsize)) > myGFX->_width)
 838:gfx.c         ****                             *x  = 0; // Reset x to zero, advance y by one line
 839:gfx.c         ****                             *y += myGFX->textsize * (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvanc
 840:gfx.c         ****                         }
 841:gfx.c         ****                         int16_t ts = (int16_t)myGFX->textsize,
 842:gfx.c         ****                         x1 = *x + xo * ts,
 843:gfx.c         ****                         y1 = *y + yo * ts,
 844:gfx.c         ****                         x2 = x1 + gw * ts - 1,
 845:gfx.c         ****                         y2 = y1 + gh * ts - 1;
 846:gfx.c         ****                         if(x1 < *minx) *minx = x1;
 847:gfx.c         ****                         if(y1 < *miny) *miny = y1;
 848:gfx.c         ****                         if(x2 > *maxx) *maxx = x2;
 849:gfx.c         ****                         if(y2 > *maxy) *maxy = y2;
 850:gfx.c         ****                         *x += xa * ts;
 851:gfx.c         ****                     }
 852:gfx.c         ****                 }
 853:gfx.c         ****                 
 854:gfx.c         ****             } else { // Default font
 855:gfx.c         ****                 
 856:gfx.c         ****                 if(c == '\n') {                     // Newline?
 857:gfx.c         ****                     *x  = 0;                        // Reset x to zero,
 858:gfx.c         ****                     *y += myGFX->textsize * 8;             // advance y one line
 859:gfx.c         ****                     // min/max x/y unchaged -- that waits for next 'normal' character
 860:gfx.c         ****                 } else if(c != '\r') {  // Normal char; ignore carriage returns
 861:gfx.c         ****                     if(myGFX->wrap && ((*x + myGFX->textsize * 6) > myGFX->_width)) { // Off right?
 862:gfx.c         ****                         *x  = 0;                    // Reset x to zero,
 863:gfx.c         ****                         *y += myGFX->textsize * 8;         // advance y one line
 864:gfx.c         ****                     }
 865:gfx.c         ****                     int x2 = *x + myGFX->textsize * 6 - 1, // Lower-right pixel of char
 866:gfx.c         ****                     y2 = *y + myGFX->textsize * 8 - 1;
 867:gfx.c         ****                     if(x2 > *maxx) *maxx = x2;      // Track max x, y
 868:gfx.c         ****                     if(y2 > *maxy) *maxy = y2;
 869:gfx.c         ****                     if(*x < *minx) *minx = *x;      // Track min x, y
 870:gfx.c         ****                     if(*y < *miny) *miny = *y;
 871:gfx.c         ****                     *x += myGFX->textsize * 6;             // Advance x one char
 872:gfx.c         ****                 }
 873:gfx.c         ****             }
 874:gfx.c         ****         }
 4692              		.loc 1 874 0
 4693 004c 6BE1     		b	.L184
 4694              	.L170:
 826:gfx.c         ****                 } else if(c != '\r') { // Not a carriage return; is normal char
 4695              		.loc 1 826 0
 4696 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4697 0050 0D2B     		cmp	r3, #13
 4698 0052 00F06881 		beq	.L184
 4699              	.LBB32:
 827:gfx.c         ****                     last  = pgm_read_byte(&myGFX->gfxFont->last);
 4700              		.loc 1 827 0
 4701 0056 FB68     		ldr	r3, [r7, #12]
 4702 0058 9B69     		ldr	r3, [r3, #24]
 4703 005a 1B7A     		ldrb	r3, [r3, #8]
 4704 005c 87F82F30 		strb	r3, [r7, #47]
 828:gfx.c         ****                     if((c >= first) && (c <= last)) { // Char present in this font?
 4705              		.loc 1 828 0
 4706 0060 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 100


 4707 0062 9B69     		ldr	r3, [r3, #24]
 4708 0064 5B7A     		ldrb	r3, [r3, #9]
 4709 0066 87F82E30 		strb	r3, [r7, #46]
 829:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 4710              		.loc 1 829 0
 4711 006a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 4712 006c 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4713 0070 9A42     		cmp	r2, r3
 4714 0072 C0F05881 		bcc	.L184
 829:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 4715              		.loc 1 829 0 is_stmt 0 discriminator 1
 4716 0076 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 4717 0078 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 4718 007c 9A42     		cmp	r2, r3
 4719 007e 00F25281 		bhi	.L184
 4720              	.LBB33:
 831:gfx.c         ****                         uint8_t gw = pgm_read_byte(&glyph->width),
 4721              		.loc 1 831 0 is_stmt 1
 4722 0082 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 4723 0084 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4724 0088 D31A     		subs	r3, r2, r3
 4725 008a DA00     		lsls	r2, r3, #3
 830:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 4726              		.loc 1 830 0
 4727 008c FB68     		ldr	r3, [r7, #12]
 4728 008e 9B69     		ldr	r3, [r3, #24]
 4729 0090 0433     		adds	r3, r3, #4
 4730 0092 18CB     		ldmia	r3, {r3-r4}
 831:gfx.c         ****                         uint8_t gw = pgm_read_byte(&glyph->width),
 4731              		.loc 1 831 0
 4732 0094 1344     		add	r3, r3, r2
 830:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 4733              		.loc 1 830 0
 4734 0096 BB62     		str	r3, [r7, #40]
 832:gfx.c         ****                         gh = pgm_read_byte(&glyph->height),
 4735              		.loc 1 832 0
 4736 0098 BB6A     		ldr	r3, [r7, #40]
 4737 009a 9B78     		ldrb	r3, [r3, #2]
 4738 009c 87F82730 		strb	r3, [r7, #39]
 833:gfx.c         ****                         xa = pgm_read_byte(&glyph->xAdvance);
 4739              		.loc 1 833 0
 4740 00a0 BB6A     		ldr	r3, [r7, #40]
 4741 00a2 DB78     		ldrb	r3, [r3, #3]
 4742 00a4 87F82630 		strb	r3, [r7, #38]
 834:gfx.c         ****                         int8_t  xo = pgm_read_byte(&glyph->xOffset),
 4743              		.loc 1 834 0
 4744 00a8 BB6A     		ldr	r3, [r7, #40]
 4745 00aa 1B79     		ldrb	r3, [r3, #4]
 4746 00ac 87F82530 		strb	r3, [r7, #37]
 835:gfx.c         ****                         yo = pgm_read_byte(&glyph->yOffset);
 4747              		.loc 1 835 0
 4748 00b0 BB6A     		ldr	r3, [r7, #40]
 4749 00b2 0533     		adds	r3, r3, #5
 4750 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4751 00b6 87F82430 		strb	r3, [r7, #36]
 836:gfx.c         ****                         if(myGFX->wrap && ((*x+(((int16_t)xo+gw)*myGFX->textsize)) > myGFX->_width)
 4752              		.loc 1 836 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 101


 4753 00ba BB6A     		ldr	r3, [r7, #40]
 4754 00bc 0633     		adds	r3, r3, #6
 4755 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4756 00c0 87F82330 		strb	r3, [r7, #35]
 837:gfx.c         ****                             *x  = 0; // Reset x to zero, advance y by one line
 4757              		.loc 1 837 0
 4758 00c4 FB68     		ldr	r3, [r7, #12]
 4759 00c6 9B8A     		ldrh	r3, [r3, #20]
 4760 00c8 002B     		cmp	r3, #0
 4761 00ca 27D0     		beq	.L172
 837:gfx.c         ****                             *x  = 0; // Reset x to zero, advance y by one line
 4762              		.loc 1 837 0 is_stmt 0 discriminator 1
 4763 00cc 7B68     		ldr	r3, [r7, #4]
 4764 00ce B3F90030 		ldrsh	r3, [r3]
 4765 00d2 1946     		mov	r1, r3
 4766 00d4 97F92420 		ldrsb	r2, [r7, #36]
 4767 00d8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4768 00dc 1344     		add	r3, r3, r2
 4769 00de FA68     		ldr	r2, [r7, #12]
 4770 00e0 D289     		ldrh	r2, [r2, #14]
 4771 00e2 02FB03F3 		mul	r3, r2, r3
 4772 00e6 0B44     		add	r3, r3, r1
 4773 00e8 FA68     		ldr	r2, [r7, #12]
 4774 00ea 9288     		ldrh	r2, [r2, #4]
 4775 00ec 9342     		cmp	r3, r2
 4776 00ee 15DD     		ble	.L172
 838:gfx.c         ****                             *y += myGFX->textsize * (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvanc
 4777              		.loc 1 838 0 is_stmt 1
 4778 00f0 7B68     		ldr	r3, [r7, #4]
 4779 00f2 0022     		movs	r2, #0
 4780 00f4 1A80     		strh	r2, [r3]	@ movhi
 839:gfx.c         ****                         }
 4781              		.loc 1 839 0
 4782 00f6 3B68     		ldr	r3, [r7]
 4783 00f8 B3F90030 		ldrsh	r3, [r3]
 4784 00fc 9AB2     		uxth	r2, r3
 4785 00fe FB68     		ldr	r3, [r7, #12]
 4786 0100 DB89     		ldrh	r3, [r3, #14]
 4787 0102 F968     		ldr	r1, [r7, #12]
 4788 0104 8969     		ldr	r1, [r1, #24]
 4789 0106 0A31     		adds	r1, r1, #10
 4790 0108 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4791 010a 89B2     		uxth	r1, r1
 4792 010c 01FB03F3 		mul	r3, r1, r3
 4793 0110 9BB2     		uxth	r3, r3
 4794 0112 1344     		add	r3, r3, r2
 4795 0114 9BB2     		uxth	r3, r3
 4796 0116 1AB2     		sxth	r2, r3
 4797 0118 3B68     		ldr	r3, [r7]
 4798 011a 1A80     		strh	r2, [r3]	@ movhi
 4799              	.L172:
 841:gfx.c         ****                         x1 = *x + xo * ts,
 4800              		.loc 1 841 0
 4801 011c FB68     		ldr	r3, [r7, #12]
 4802 011e DB89     		ldrh	r3, [r3, #14]
 4803 0120 3B84     		strh	r3, [r7, #32]	@ movhi
 842:gfx.c         ****                         y1 = *y + yo * ts,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 102


 4804              		.loc 1 842 0
 4805 0122 7B68     		ldr	r3, [r7, #4]
 4806 0124 B3F90030 		ldrsh	r3, [r3]
 4807 0128 9AB2     		uxth	r2, r3
 4808 012a 97F92430 		ldrsb	r3, [r7, #36]
 4809 012e 9BB2     		uxth	r3, r3
 4810 0130 398C     		ldrh	r1, [r7, #32]
 4811 0132 01FB03F3 		mul	r3, r1, r3
 4812 0136 9BB2     		uxth	r3, r3
 4813 0138 1344     		add	r3, r3, r2
 4814 013a 9BB2     		uxth	r3, r3
 4815 013c FB83     		strh	r3, [r7, #30]	@ movhi
 843:gfx.c         ****                         x2 = x1 + gw * ts - 1,
 4816              		.loc 1 843 0
 4817 013e 3B68     		ldr	r3, [r7]
 4818 0140 B3F90030 		ldrsh	r3, [r3]
 4819 0144 9AB2     		uxth	r2, r3
 4820 0146 97F92330 		ldrsb	r3, [r7, #35]
 4821 014a 9BB2     		uxth	r3, r3
 4822 014c 398C     		ldrh	r1, [r7, #32]
 4823 014e 01FB03F3 		mul	r3, r1, r3
 4824 0152 9BB2     		uxth	r3, r3
 4825 0154 1344     		add	r3, r3, r2
 4826 0156 9BB2     		uxth	r3, r3
 4827 0158 BB83     		strh	r3, [r7, #28]	@ movhi
 844:gfx.c         ****                         y2 = y1 + gh * ts - 1;
 4828              		.loc 1 844 0
 4829 015a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4830 015e 9BB2     		uxth	r3, r3
 4831 0160 3A8C     		ldrh	r2, [r7, #32]
 4832 0162 02FB03F3 		mul	r3, r2, r3
 4833 0166 9AB2     		uxth	r2, r3
 4834 0168 FB8B     		ldrh	r3, [r7, #30]
 4835 016a 1344     		add	r3, r3, r2
 4836 016c 9BB2     		uxth	r3, r3
 4837 016e 013B     		subs	r3, r3, #1
 4838 0170 9BB2     		uxth	r3, r3
 4839 0172 7B83     		strh	r3, [r7, #26]	@ movhi
 845:gfx.c         ****                         if(x1 < *minx) *minx = x1;
 4840              		.loc 1 845 0
 4841 0174 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 4842 0178 9BB2     		uxth	r3, r3
 4843 017a 3A8C     		ldrh	r2, [r7, #32]
 4844 017c 02FB03F3 		mul	r3, r2, r3
 4845 0180 9AB2     		uxth	r2, r3
 4846 0182 BB8B     		ldrh	r3, [r7, #28]
 4847 0184 1344     		add	r3, r3, r2
 4848 0186 9BB2     		uxth	r3, r3
 4849 0188 013B     		subs	r3, r3, #1
 4850 018a 9BB2     		uxth	r3, r3
 4851 018c 3B83     		strh	r3, [r7, #24]	@ movhi
 846:gfx.c         ****                         if(y1 < *miny) *miny = y1;
 4852              		.loc 1 846 0
 4853 018e BB6B     		ldr	r3, [r7, #56]
 4854 0190 B3F90030 		ldrsh	r3, [r3]
 4855 0194 B7F91E20 		ldrsh	r2, [r7, #30]
 4856 0198 9A42     		cmp	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 103


 4857 019a 02DA     		bge	.L173
 846:gfx.c         ****                         if(y1 < *miny) *miny = y1;
 4858              		.loc 1 846 0 is_stmt 0 discriminator 1
 4859 019c BB6B     		ldr	r3, [r7, #56]
 4860 019e FA8B     		ldrh	r2, [r7, #30]	@ movhi
 4861 01a0 1A80     		strh	r2, [r3]	@ movhi
 4862              	.L173:
 847:gfx.c         ****                         if(x2 > *maxx) *maxx = x2;
 4863              		.loc 1 847 0 is_stmt 1
 4864 01a2 FB6B     		ldr	r3, [r7, #60]
 4865 01a4 B3F90030 		ldrsh	r3, [r3]
 4866 01a8 B7F91C20 		ldrsh	r2, [r7, #28]
 4867 01ac 9A42     		cmp	r2, r3
 4868 01ae 02DA     		bge	.L174
 847:gfx.c         ****                         if(x2 > *maxx) *maxx = x2;
 4869              		.loc 1 847 0 is_stmt 0 discriminator 1
 4870 01b0 FB6B     		ldr	r3, [r7, #60]
 4871 01b2 BA8B     		ldrh	r2, [r7, #28]	@ movhi
 4872 01b4 1A80     		strh	r2, [r3]	@ movhi
 4873              	.L174:
 848:gfx.c         ****                         if(y2 > *maxy) *maxy = y2;
 4874              		.loc 1 848 0 is_stmt 1
 4875 01b6 3B6C     		ldr	r3, [r7, #64]
 4876 01b8 B3F90030 		ldrsh	r3, [r3]
 4877 01bc B7F91A20 		ldrsh	r2, [r7, #26]
 4878 01c0 9A42     		cmp	r2, r3
 4879 01c2 02DD     		ble	.L175
 848:gfx.c         ****                         if(y2 > *maxy) *maxy = y2;
 4880              		.loc 1 848 0 is_stmt 0 discriminator 1
 4881 01c4 3B6C     		ldr	r3, [r7, #64]
 4882 01c6 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 4883 01c8 1A80     		strh	r2, [r3]	@ movhi
 4884              	.L175:
 849:gfx.c         ****                         *x += xa * ts;
 4885              		.loc 1 849 0 is_stmt 1
 4886 01ca 7B6C     		ldr	r3, [r7, #68]
 4887 01cc B3F90030 		ldrsh	r3, [r3]
 4888 01d0 B7F91820 		ldrsh	r2, [r7, #24]
 4889 01d4 9A42     		cmp	r2, r3
 4890 01d6 02DD     		ble	.L176
 849:gfx.c         ****                         *x += xa * ts;
 4891              		.loc 1 849 0 is_stmt 0 discriminator 1
 4892 01d8 7B6C     		ldr	r3, [r7, #68]
 4893 01da 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 4894 01dc 1A80     		strh	r2, [r3]	@ movhi
 4895              	.L176:
 850:gfx.c         ****                     }
 4896              		.loc 1 850 0 is_stmt 1
 4897 01de 7B68     		ldr	r3, [r7, #4]
 4898 01e0 B3F90030 		ldrsh	r3, [r3]
 4899 01e4 9AB2     		uxth	r2, r3
 4900 01e6 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 4901 01ea 9BB2     		uxth	r3, r3
 4902 01ec 398C     		ldrh	r1, [r7, #32]
 4903 01ee 01FB03F3 		mul	r3, r1, r3
 4904 01f2 9BB2     		uxth	r3, r3
 4905 01f4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 104


 4906 01f6 9BB2     		uxth	r3, r3
 4907 01f8 1AB2     		sxth	r2, r3
 4908 01fa 7B68     		ldr	r3, [r7, #4]
 4909 01fc 1A80     		strh	r2, [r3]	@ movhi
 4910              	.LBE33:
 4911              	.LBE32:
 4912              		.loc 1 874 0
 4913 01fe 92E0     		b	.L184
 4914              	.L169:
 856:gfx.c         ****                     *x  = 0;                        // Reset x to zero,
 4915              		.loc 1 856 0
 4916 0200 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4917 0202 0A2B     		cmp	r3, #10
 4918 0204 10D1     		bne	.L178
 857:gfx.c         ****                     *y += myGFX->textsize * 8;             // advance y one line
 4919              		.loc 1 857 0
 4920 0206 7B68     		ldr	r3, [r7, #4]
 4921 0208 0022     		movs	r2, #0
 4922 020a 1A80     		strh	r2, [r3]	@ movhi
 858:gfx.c         ****                     // min/max x/y unchaged -- that waits for next 'normal' character
 4923              		.loc 1 858 0
 4924 020c 3B68     		ldr	r3, [r7]
 4925 020e B3F90030 		ldrsh	r3, [r3]
 4926 0212 9AB2     		uxth	r2, r3
 4927 0214 FB68     		ldr	r3, [r7, #12]
 4928 0216 DB89     		ldrh	r3, [r3, #14]
 4929 0218 DB00     		lsls	r3, r3, #3
 4930 021a 9BB2     		uxth	r3, r3
 4931 021c 1344     		add	r3, r3, r2
 4932 021e 9BB2     		uxth	r3, r3
 4933 0220 1AB2     		sxth	r2, r3
 4934 0222 3B68     		ldr	r3, [r7]
 4935 0224 1A80     		strh	r2, [r3]	@ movhi
 4936              		.loc 1 874 0
 4937 0226 7EE0     		b	.L184
 4938              	.L178:
 860:gfx.c         ****                     if(myGFX->wrap && ((*x + myGFX->textsize * 6) > myGFX->_width)) { // Off right?
 4939              		.loc 1 860 0
 4940 0228 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4941 022a 0D2B     		cmp	r3, #13
 4942 022c 7BD0     		beq	.L184
 4943              	.LBB34:
 861:gfx.c         ****                         *x  = 0;                    // Reset x to zero,
 4944              		.loc 1 861 0
 4945 022e FB68     		ldr	r3, [r7, #12]
 4946 0230 9B8A     		ldrh	r3, [r3, #20]
 4947 0232 002B     		cmp	r3, #0
 4948 0234 1FD0     		beq	.L179
 861:gfx.c         ****                         *x  = 0;                    // Reset x to zero,
 4949              		.loc 1 861 0 is_stmt 0 discriminator 1
 4950 0236 7B68     		ldr	r3, [r7, #4]
 4951 0238 B3F90030 		ldrsh	r3, [r3]
 4952 023c 1946     		mov	r1, r3
 4953 023e FB68     		ldr	r3, [r7, #12]
 4954 0240 DB89     		ldrh	r3, [r3, #14]
 4955 0242 1A46     		mov	r2, r3
 4956 0244 1346     		mov	r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 105


 4957 0246 5B00     		lsls	r3, r3, #1
 4958 0248 1344     		add	r3, r3, r2
 4959 024a 5B00     		lsls	r3, r3, #1
 4960 024c 0B44     		add	r3, r3, r1
 4961 024e FA68     		ldr	r2, [r7, #12]
 4962 0250 9288     		ldrh	r2, [r2, #4]
 4963 0252 9342     		cmp	r3, r2
 4964 0254 0FDD     		ble	.L179
 862:gfx.c         ****                         *y += myGFX->textsize * 8;         // advance y one line
 4965              		.loc 1 862 0 is_stmt 1
 4966 0256 7B68     		ldr	r3, [r7, #4]
 4967 0258 0022     		movs	r2, #0
 4968 025a 1A80     		strh	r2, [r3]	@ movhi
 863:gfx.c         ****                     }
 4969              		.loc 1 863 0
 4970 025c 3B68     		ldr	r3, [r7]
 4971 025e B3F90030 		ldrsh	r3, [r3]
 4972 0262 9AB2     		uxth	r2, r3
 4973 0264 FB68     		ldr	r3, [r7, #12]
 4974 0266 DB89     		ldrh	r3, [r3, #14]
 4975 0268 DB00     		lsls	r3, r3, #3
 4976 026a 9BB2     		uxth	r3, r3
 4977 026c 1344     		add	r3, r3, r2
 4978 026e 9BB2     		uxth	r3, r3
 4979 0270 1AB2     		sxth	r2, r3
 4980 0272 3B68     		ldr	r3, [r7]
 4981 0274 1A80     		strh	r2, [r3]	@ movhi
 4982              	.L179:
 865:gfx.c         ****                     y2 = *y + myGFX->textsize * 8 - 1;
 4983              		.loc 1 865 0
 4984 0276 7B68     		ldr	r3, [r7, #4]
 4985 0278 B3F90030 		ldrsh	r3, [r3]
 4986 027c 1946     		mov	r1, r3
 4987 027e FB68     		ldr	r3, [r7, #12]
 4988 0280 DB89     		ldrh	r3, [r3, #14]
 4989 0282 1A46     		mov	r2, r3
 4990 0284 1346     		mov	r3, r2
 4991 0286 5B00     		lsls	r3, r3, #1
 4992 0288 1344     		add	r3, r3, r2
 4993 028a 5B00     		lsls	r3, r3, #1
 4994 028c 0B44     		add	r3, r3, r1
 4995 028e 013B     		subs	r3, r3, #1
 4996 0290 7B61     		str	r3, [r7, #20]
 866:gfx.c         ****                     if(x2 > *maxx) *maxx = x2;      // Track max x, y
 4997              		.loc 1 866 0
 4998 0292 3B68     		ldr	r3, [r7]
 4999 0294 B3F90030 		ldrsh	r3, [r3]
 5000 0298 1A46     		mov	r2, r3
 5001 029a FB68     		ldr	r3, [r7, #12]
 5002 029c DB89     		ldrh	r3, [r3, #14]
 5003 029e DB00     		lsls	r3, r3, #3
 5004 02a0 1344     		add	r3, r3, r2
 5005 02a2 013B     		subs	r3, r3, #1
 5006 02a4 3B61     		str	r3, [r7, #16]
 867:gfx.c         ****                     if(y2 > *maxy) *maxy = y2;
 5007              		.loc 1 867 0
 5008 02a6 3B6C     		ldr	r3, [r7, #64]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 106


 5009 02a8 B3F90030 		ldrsh	r3, [r3]
 5010 02ac 1A46     		mov	r2, r3
 5011 02ae 7B69     		ldr	r3, [r7, #20]
 5012 02b0 9A42     		cmp	r2, r3
 5013 02b2 03DA     		bge	.L180
 867:gfx.c         ****                     if(y2 > *maxy) *maxy = y2;
 5014              		.loc 1 867 0 is_stmt 0 discriminator 1
 5015 02b4 7B69     		ldr	r3, [r7, #20]
 5016 02b6 1AB2     		sxth	r2, r3
 5017 02b8 3B6C     		ldr	r3, [r7, #64]
 5018 02ba 1A80     		strh	r2, [r3]	@ movhi
 5019              	.L180:
 868:gfx.c         ****                     if(*x < *minx) *minx = *x;      // Track min x, y
 5020              		.loc 1 868 0 is_stmt 1
 5021 02bc 7B6C     		ldr	r3, [r7, #68]
 5022 02be B3F90030 		ldrsh	r3, [r3]
 5023 02c2 1A46     		mov	r2, r3
 5024 02c4 3B69     		ldr	r3, [r7, #16]
 5025 02c6 9A42     		cmp	r2, r3
 5026 02c8 03DA     		bge	.L181
 868:gfx.c         ****                     if(*x < *minx) *minx = *x;      // Track min x, y
 5027              		.loc 1 868 0 is_stmt 0 discriminator 1
 5028 02ca 3B69     		ldr	r3, [r7, #16]
 5029 02cc 1AB2     		sxth	r2, r3
 5030 02ce 7B6C     		ldr	r3, [r7, #68]
 5031 02d0 1A80     		strh	r2, [r3]	@ movhi
 5032              	.L181:
 869:gfx.c         ****                     if(*y < *miny) *miny = *y;
 5033              		.loc 1 869 0 is_stmt 1
 5034 02d2 7B68     		ldr	r3, [r7, #4]
 5035 02d4 B3F90020 		ldrsh	r2, [r3]
 5036 02d8 BB6B     		ldr	r3, [r7, #56]
 5037 02da B3F90030 		ldrsh	r3, [r3]
 5038 02de 9A42     		cmp	r2, r3
 5039 02e0 04DA     		bge	.L182
 869:gfx.c         ****                     if(*y < *miny) *miny = *y;
 5040              		.loc 1 869 0 is_stmt 0 discriminator 1
 5041 02e2 7B68     		ldr	r3, [r7, #4]
 5042 02e4 B3F90020 		ldrsh	r2, [r3]
 5043 02e8 BB6B     		ldr	r3, [r7, #56]
 5044 02ea 1A80     		strh	r2, [r3]	@ movhi
 5045              	.L182:
 870:gfx.c         ****                     *x += myGFX->textsize * 6;             // Advance x one char
 5046              		.loc 1 870 0 is_stmt 1
 5047 02ec 3B68     		ldr	r3, [r7]
 5048 02ee B3F90020 		ldrsh	r2, [r3]
 5049 02f2 FB6B     		ldr	r3, [r7, #60]
 5050 02f4 B3F90030 		ldrsh	r3, [r3]
 5051 02f8 9A42     		cmp	r2, r3
 5052 02fa 04DA     		bge	.L183
 870:gfx.c         ****                     *x += myGFX->textsize * 6;             // Advance x one char
 5053              		.loc 1 870 0 is_stmt 0 discriminator 1
 5054 02fc 3B68     		ldr	r3, [r7]
 5055 02fe B3F90020 		ldrsh	r2, [r3]
 5056 0302 FB6B     		ldr	r3, [r7, #60]
 5057 0304 1A80     		strh	r2, [r3]	@ movhi
 5058              	.L183:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 107


 871:gfx.c         ****                 }
 5059              		.loc 1 871 0 is_stmt 1
 5060 0306 7B68     		ldr	r3, [r7, #4]
 5061 0308 B3F90030 		ldrsh	r3, [r3]
 5062 030c 9AB2     		uxth	r2, r3
 5063 030e FB68     		ldr	r3, [r7, #12]
 5064 0310 DB89     		ldrh	r3, [r3, #14]
 5065 0312 1946     		mov	r1, r3	@ movhi
 5066 0314 4900     		lsls	r1, r1, #1
 5067 0316 0B44     		add	r3, r3, r1
 5068 0318 5B00     		lsls	r3, r3, #1
 5069 031a 9BB2     		uxth	r3, r3
 5070 031c 1344     		add	r3, r3, r2
 5071 031e 9BB2     		uxth	r3, r3
 5072 0320 1AB2     		sxth	r2, r3
 5073 0322 7B68     		ldr	r3, [r7, #4]
 5074 0324 1A80     		strh	r2, [r3]	@ movhi
 5075              	.L184:
 5076              	.LBE34:
 5077              		.loc 1 874 0
 5078 0326 00BF     		nop
 5079 0328 3037     		adds	r7, r7, #48
 5080              		.cfi_def_cfa_offset 8
 5081 032a BD46     		mov	sp, r7
 5082              		.cfi_def_cfa_register 13
 5083              		@ sp needed
 5084 032c 90BC     		pop	{r4, r7}
 5085              		.cfi_restore 7
 5086              		.cfi_restore 4
 5087              		.cfi_def_cfa_offset 0
 5088 032e 7047     		bx	lr
 5089              		.cfi_endproc
 5090              	.LFE101:
 5091              		.size	GFXcharBounds, .-GFXcharBounds
 5092              		.section	.text.GFXgetTextBounds,"ax",%progbits
 5093              		.align	2
 5094              		.global	GFXgetTextBounds
 5095              		.thumb
 5096              		.thumb_func
 5097              		.type	GFXgetTextBounds, %function
 5098              	GFXgetTextBounds:
 5099              	.LFB102:
 875:gfx.c         ****         
 876:gfx.c         ****         
 877:gfx.c         ****         // Pass string and a cursor position, returns UL corner and W,H.
 878:gfx.c         ****         void GFXgetTextBounds(GFX* myGFX, char *str, int16_t x, int16_t y,
 879:gfx.c         ****                               int16_t *x1, int16_t *y1, uint16_t *w, uint16_t *h) {
 5100              		.loc 1 879 0
 5101              		.cfi_startproc
 5102              		@ args = 16, pretend = 0, frame = 32
 5103              		@ frame_needed = 1, uses_anonymous_args = 0
 5104 0000 80B5     		push	{r7, lr}
 5105              		.cfi_def_cfa_offset 8
 5106              		.cfi_offset 7, -8
 5107              		.cfi_offset 14, -4
 5108 0002 8CB0     		sub	sp, sp, #48
 5109              		.cfi_def_cfa_offset 56
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 108


 5110 0004 04AF     		add	r7, sp, #16
 5111              		.cfi_def_cfa 7, 40
 5112 0006 F860     		str	r0, [r7, #12]
 5113 0008 B960     		str	r1, [r7, #8]
 5114 000a 1146     		mov	r1, r2
 5115 000c 1A46     		mov	r2, r3
 5116 000e 0B46     		mov	r3, r1	@ movhi
 5117 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 5118 0012 1346     		mov	r3, r2	@ movhi
 5119 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 880:gfx.c         ****             uint8_t c; // Current character
 881:gfx.c         ****             
 882:gfx.c         ****             *x1 = x;
 5120              		.loc 1 882 0
 5121 0016 B7F90620 		ldrsh	r2, [r7, #6]
 5122 001a BB6A     		ldr	r3, [r7, #40]
 5123 001c 1A80     		strh	r2, [r3]	@ movhi
 883:gfx.c         ****             *y1 = y;
 5124              		.loc 1 883 0
 5125 001e B7F90420 		ldrsh	r2, [r7, #4]
 5126 0022 FB6A     		ldr	r3, [r7, #44]
 5127 0024 1A80     		strh	r2, [r3]	@ movhi
 884:gfx.c         ****             *w  = *h = 0;
 5128              		.loc 1 884 0
 5129 0026 7B6B     		ldr	r3, [r7, #52]
 5130 0028 0022     		movs	r2, #0
 5131 002a 1A80     		strh	r2, [r3]	@ movhi
 5132 002c 7B6B     		ldr	r3, [r7, #52]
 5133 002e 1A88     		ldrh	r2, [r3]
 5134 0030 3B6B     		ldr	r3, [r7, #48]
 5135 0032 1A80     		strh	r2, [r3]	@ movhi
 885:gfx.c         ****             
 886:gfx.c         ****             int16_t minx = myGFX->_width, miny = myGFX->_height, maxx = -1, maxy = -1;
 5136              		.loc 1 886 0
 5137 0034 FB68     		ldr	r3, [r7, #12]
 5138 0036 9B88     		ldrh	r3, [r3, #4]
 5139 0038 1BB2     		sxth	r3, r3
 5140 003a BB83     		strh	r3, [r7, #28]	@ movhi
 5141 003c FB68     		ldr	r3, [r7, #12]
 5142 003e DB88     		ldrh	r3, [r3, #6]
 5143 0040 1BB2     		sxth	r3, r3
 5144 0042 7B83     		strh	r3, [r7, #26]	@ movhi
 5145 0044 4FF6FF73 		movw	r3, #65535
 5146 0048 3B83     		strh	r3, [r7, #24]	@ movhi
 5147 004a 4FF6FF73 		movw	r3, #65535
 5148 004e FB82     		strh	r3, [r7, #22]	@ movhi
 887:gfx.c         ****             
 888:gfx.c         ****             while((c = *str++))
 5149              		.loc 1 888 0
 5150 0050 12E0     		b	.L186
 5151              	.L187:
 889:gfx.c         ****                 GFXcharBounds(myGFX, c, &x, &y, &minx, &miny, &maxx, &maxy);
 5152              		.loc 1 889 0
 5153 0052 381D     		adds	r0, r7, #4
 5154 0054 BA1D     		adds	r2, r7, #6
 5155 0056 F97F     		ldrb	r1, [r7, #31]	@ zero_extendqisi2
 5156 0058 07F11603 		add	r3, r7, #22
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 109


 5157 005c 0393     		str	r3, [sp, #12]
 5158 005e 07F11803 		add	r3, r7, #24
 5159 0062 0293     		str	r3, [sp, #8]
 5160 0064 07F11A03 		add	r3, r7, #26
 5161 0068 0193     		str	r3, [sp, #4]
 5162 006a 07F11C03 		add	r3, r7, #28
 5163 006e 0093     		str	r3, [sp]
 5164 0070 0346     		mov	r3, r0
 5165 0072 F868     		ldr	r0, [r7, #12]
 5166 0074 FFF7FEFF 		bl	GFXcharBounds
 5167              	.L186:
 888:gfx.c         ****                 GFXcharBounds(myGFX, c, &x, &y, &minx, &miny, &maxx, &maxy);
 5168              		.loc 1 888 0
 5169 0078 BB68     		ldr	r3, [r7, #8]
 5170 007a 5A1C     		adds	r2, r3, #1
 5171 007c BA60     		str	r2, [r7, #8]
 5172 007e 1B78     		ldrb	r3, [r3]
 5173 0080 FB77     		strb	r3, [r7, #31]
 5174 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5175 0084 002B     		cmp	r3, #0
 5176 0086 E4D1     		bne	.L187
 890:gfx.c         ****             
 891:gfx.c         ****             if(maxx >= minx) {
 5177              		.loc 1 891 0
 5178 0088 B7F91820 		ldrsh	r2, [r7, #24]
 5179 008c B7F91C30 		ldrsh	r3, [r7, #28]
 5180 0090 9A42     		cmp	r2, r3
 5181 0092 0FDB     		blt	.L188
 892:gfx.c         ****                 *x1 = minx;
 5182              		.loc 1 892 0
 5183 0094 B7F91C20 		ldrsh	r2, [r7, #28]
 5184 0098 BB6A     		ldr	r3, [r7, #40]
 5185 009a 1A80     		strh	r2, [r3]	@ movhi
 893:gfx.c         ****                 *w  = maxx - minx + 1;
 5186              		.loc 1 893 0
 5187 009c B7F91830 		ldrsh	r3, [r7, #24]
 5188 00a0 9AB2     		uxth	r2, r3
 5189 00a2 B7F91C30 		ldrsh	r3, [r7, #28]
 5190 00a6 9BB2     		uxth	r3, r3
 5191 00a8 D31A     		subs	r3, r2, r3
 5192 00aa 9BB2     		uxth	r3, r3
 5193 00ac 0133     		adds	r3, r3, #1
 5194 00ae 9AB2     		uxth	r2, r3
 5195 00b0 3B6B     		ldr	r3, [r7, #48]
 5196 00b2 1A80     		strh	r2, [r3]	@ movhi
 5197              	.L188:
 894:gfx.c         ****             }
 895:gfx.c         ****             if(maxy >= miny) {
 5198              		.loc 1 895 0
 5199 00b4 B7F91620 		ldrsh	r2, [r7, #22]
 5200 00b8 B7F91A30 		ldrsh	r3, [r7, #26]
 5201 00bc 9A42     		cmp	r2, r3
 5202 00be 0FDB     		blt	.L190
 896:gfx.c         ****                 *y1 = miny;
 5203              		.loc 1 896 0
 5204 00c0 B7F91A20 		ldrsh	r2, [r7, #26]
 5205 00c4 FB6A     		ldr	r3, [r7, #44]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 110


 5206 00c6 1A80     		strh	r2, [r3]	@ movhi
 897:gfx.c         ****                 *h  = maxy - miny + 1;
 5207              		.loc 1 897 0
 5208 00c8 B7F91630 		ldrsh	r3, [r7, #22]
 5209 00cc 9AB2     		uxth	r2, r3
 5210 00ce B7F91A30 		ldrsh	r3, [r7, #26]
 5211 00d2 9BB2     		uxth	r3, r3
 5212 00d4 D31A     		subs	r3, r2, r3
 5213 00d6 9BB2     		uxth	r3, r3
 5214 00d8 0133     		adds	r3, r3, #1
 5215 00da 9AB2     		uxth	r2, r3
 5216 00dc 7B6B     		ldr	r3, [r7, #52]
 5217 00de 1A80     		strh	r2, [r3]	@ movhi
 5218              	.L190:
 898:gfx.c         ****             }
 899:gfx.c         ****         }
 5219              		.loc 1 899 0
 5220 00e0 00BF     		nop
 5221 00e2 2037     		adds	r7, r7, #32
 5222              		.cfi_def_cfa_offset 8
 5223 00e4 BD46     		mov	sp, r7
 5224              		.cfi_def_cfa_register 13
 5225              		@ sp needed
 5226 00e6 80BD     		pop	{r7, pc}
 5227              		.cfi_endproc
 5228              	.LFE102:
 5229              		.size	GFXgetTextBounds, .-GFXgetTextBounds
 5230              		.section	.text.GFXwidth,"ax",%progbits
 5231              		.align	2
 5232              		.global	GFXwidth
 5233              		.thumb
 5234              		.thumb_func
 5235              		.type	GFXwidth, %function
 5236              	GFXwidth:
 5237              	.LFB103:
 900:gfx.c         ****         
 901:gfx.c         ****         
 902:gfx.c         ****         
 903:gfx.c         ****         // Return the size of the display (per current rotation)
 904:gfx.c         ****         int16_t GFXwidth(GFX* myGFX ) {
 5238              		.loc 1 904 0
 5239              		.cfi_startproc
 5240              		@ args = 0, pretend = 0, frame = 8
 5241              		@ frame_needed = 1, uses_anonymous_args = 0
 5242              		@ link register save eliminated.
 5243 0000 80B4     		push	{r7}
 5244              		.cfi_def_cfa_offset 4
 5245              		.cfi_offset 7, -4
 5246 0002 83B0     		sub	sp, sp, #12
 5247              		.cfi_def_cfa_offset 16
 5248 0004 00AF     		add	r7, sp, #0
 5249              		.cfi_def_cfa_register 7
 5250 0006 7860     		str	r0, [r7, #4]
 905:gfx.c         ****             return myGFX->_width;
 5251              		.loc 1 905 0
 5252 0008 7B68     		ldr	r3, [r7, #4]
 5253 000a 9B88     		ldrh	r3, [r3, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 111


 5254 000c 1BB2     		sxth	r3, r3
 906:gfx.c         ****         }
 5255              		.loc 1 906 0
 5256 000e 1846     		mov	r0, r3
 5257 0010 0C37     		adds	r7, r7, #12
 5258              		.cfi_def_cfa_offset 4
 5259 0012 BD46     		mov	sp, r7
 5260              		.cfi_def_cfa_register 13
 5261              		@ sp needed
 5262 0014 80BC     		pop	{r7}
 5263              		.cfi_restore 7
 5264              		.cfi_def_cfa_offset 0
 5265 0016 7047     		bx	lr
 5266              		.cfi_endproc
 5267              	.LFE103:
 5268              		.size	GFXwidth, .-GFXwidth
 5269              		.section	.text.GFXheight,"ax",%progbits
 5270              		.align	2
 5271              		.global	GFXheight
 5272              		.thumb
 5273              		.thumb_func
 5274              		.type	GFXheight, %function
 5275              	GFXheight:
 5276              	.LFB104:
 907:gfx.c         ****         
 908:gfx.c         ****         int16_t GFXheight(GFX* myGFX)  {
 5277              		.loc 1 908 0
 5278              		.cfi_startproc
 5279              		@ args = 0, pretend = 0, frame = 8
 5280              		@ frame_needed = 1, uses_anonymous_args = 0
 5281              		@ link register save eliminated.
 5282 0000 80B4     		push	{r7}
 5283              		.cfi_def_cfa_offset 4
 5284              		.cfi_offset 7, -4
 5285 0002 83B0     		sub	sp, sp, #12
 5286              		.cfi_def_cfa_offset 16
 5287 0004 00AF     		add	r7, sp, #0
 5288              		.cfi_def_cfa_register 7
 5289 0006 7860     		str	r0, [r7, #4]
 909:gfx.c         ****             return myGFX->_height;
 5290              		.loc 1 909 0
 5291 0008 7B68     		ldr	r3, [r7, #4]
 5292 000a DB88     		ldrh	r3, [r3, #6]
 5293 000c 1BB2     		sxth	r3, r3
 910:gfx.c         ****         }
 5294              		.loc 1 910 0
 5295 000e 1846     		mov	r0, r3
 5296 0010 0C37     		adds	r7, r7, #12
 5297              		.cfi_def_cfa_offset 4
 5298 0012 BD46     		mov	sp, r7
 5299              		.cfi_def_cfa_register 13
 5300              		@ sp needed
 5301 0014 80BC     		pop	{r7}
 5302              		.cfi_restore 7
 5303              		.cfi_def_cfa_offset 0
 5304 0016 7047     		bx	lr
 5305              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 112


 5306              	.LFE104:
 5307              		.size	GFXheight, .-GFXheight
 5308              		.section	.text.GFXinvertDisplay,"ax",%progbits
 5309              		.align	2
 5310              		.global	GFXinvertDisplay
 5311              		.thumb
 5312              		.thumb_func
 5313              		.type	GFXinvertDisplay, %function
 5314              	GFXinvertDisplay:
 5315              	.LFB105:
 911:gfx.c         ****         
 912:gfx.c         ****         void GFXinvertDisplay(GFX* myGFX, uint8_t i) {
 5316              		.loc 1 912 0
 5317              		.cfi_startproc
 5318              		@ args = 0, pretend = 0, frame = 8
 5319              		@ frame_needed = 1, uses_anonymous_args = 0
 5320              		@ link register save eliminated.
 5321 0000 80B4     		push	{r7}
 5322              		.cfi_def_cfa_offset 4
 5323              		.cfi_offset 7, -4
 5324 0002 83B0     		sub	sp, sp, #12
 5325              		.cfi_def_cfa_offset 16
 5326 0004 00AF     		add	r7, sp, #0
 5327              		.cfi_def_cfa_register 7
 5328 0006 7860     		str	r0, [r7, #4]
 5329 0008 0B46     		mov	r3, r1
 5330 000a FB70     		strb	r3, [r7, #3]
 913:gfx.c         ****             // Do nothing, must be subclassed if supported by hardware
 914:gfx.c         ****         }
 5331              		.loc 1 914 0
 5332 000c 00BF     		nop
 5333 000e 0C37     		adds	r7, r7, #12
 5334              		.cfi_def_cfa_offset 4
 5335 0010 BD46     		mov	sp, r7
 5336              		.cfi_def_cfa_register 13
 5337              		@ sp needed
 5338 0012 80BC     		pop	{r7}
 5339              		.cfi_restore 7
 5340              		.cfi_def_cfa_offset 0
 5341 0014 7047     		bx	lr
 5342              		.cfi_endproc
 5343              	.LFE105:
 5344              		.size	GFXinvertDisplay, .-GFXinvertDisplay
 5345              		.global	pitches
 5346 0016 00BF     		.data
 5347              		.align	2
 5348              		.type	pitches, %object
 5349              		.size	pitches, 24
 5350              	pitches:
 5351 0000 43       		.byte	67
 5352 0001 20       		.byte	32
 5353 0002 43       		.byte	67
 5354 0003 23       		.byte	35
 5355 0004 44       		.byte	68
 5356 0005 20       		.byte	32
 5357 0006 44       		.byte	68
 5358 0007 23       		.byte	35
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 113


 5359 0008 45       		.byte	69
 5360 0009 20       		.byte	32
 5361 000a 46       		.byte	70
 5362 000b 20       		.byte	32
 5363 000c 46       		.byte	70
 5364 000d 23       		.byte	35
 5365 000e 47       		.byte	71
 5366 000f 20       		.byte	32
 5367 0010 47       		.byte	71
 5368 0011 23       		.byte	35
 5369 0012 41       		.byte	65
 5370 0013 20       		.byte	32
 5371 0014 41       		.byte	65
 5372 0015 23       		.byte	35
 5373 0016 42       		.byte	66
 5374 0017 20       		.byte	32
 5375              		.global	__aeabi_i2f
 5376              		.global	__aeabi_f2uiz
 5377              		.section	.text.OLEDparseInt,"ax",%progbits
 5378              		.align	2
 5379              		.global	OLEDparseInt
 5380              		.thumb
 5381              		.thumb_func
 5382              		.type	OLEDparseInt, %function
 5383              	OLEDparseInt:
 5384              	.LFB106:
 915:gfx.c         ****         
 916:gfx.c         ****         uint8_t pitches[24] =
 917:gfx.c         ****         {
 918:gfx.c         ****             'C', ' ',
 919:gfx.c         ****             'C', '#',
 920:gfx.c         ****             'D', ' ',
 921:gfx.c         ****             'D', '#',
 922:gfx.c         ****             'E', ' ',
 923:gfx.c         ****             'F', ' ',
 924:gfx.c         ****             'F', '#',
 925:gfx.c         ****             'G', ' ',
 926:gfx.c         ****             'G', '#',
 927:gfx.c         ****             'A', ' ',
 928:gfx.c         ****             'A', '#',
 929:gfx.c         ****             'B', ' '
 930:gfx.c         ****         };
 931:gfx.c         ****         
 932:gfx.c         ****         int OLEDparseInt(char* buffer, uint32_t myNumber, uint8_t numDigits)
 933:gfx.c         ****         {
 5385              		.loc 1 933 0
 5386              		.cfi_startproc
 5387              		@ args = 0, pretend = 0, frame = 32
 5388              		@ frame_needed = 1, uses_anonymous_args = 0
 5389 0000 80B5     		push	{r7, lr}
 5390              		.cfi_def_cfa_offset 8
 5391              		.cfi_offset 7, -8
 5392              		.cfi_offset 14, -4
 5393 0002 88B0     		sub	sp, sp, #32
 5394              		.cfi_def_cfa_offset 40
 5395 0004 00AF     		add	r7, sp, #0
 5396              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 114


 5397 0006 F860     		str	r0, [r7, #12]
 5398 0008 B960     		str	r1, [r7, #8]
 5399 000a 1346     		mov	r3, r2
 5400 000c FB71     		strb	r3, [r7, #7]
 5401              	.LBB35:
 934:gfx.c         ****             for (int i = 0; i < numDigits; i++)
 5402              		.loc 1 934 0
 5403 000e 0023     		movs	r3, #0
 5404 0010 FB61     		str	r3, [r7, #28]
 5405 0012 29E0     		b	.L197
 5406              	.L198:
 5407              	.LBB36:
 935:gfx.c         ****             {
 936:gfx.c         ****                 int whichPlace = (uint32_t)(powf(10.0f,(numDigits - 1) - i));
 5408              		.loc 1 936 0 discriminator 3
 5409 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5410 0016 5A1E     		subs	r2, r3, #1
 5411 0018 FB69     		ldr	r3, [r7, #28]
 5412 001a D31A     		subs	r3, r2, r3
 5413 001c 1846     		mov	r0, r3
 5414 001e FFF7FEFF 		bl	__aeabi_i2f
 5415 0022 0346     		mov	r3, r0
 5416 0024 1946     		mov	r1, r3
 5417 0026 1548     		ldr	r0, .L200
 5418 0028 FFF7FEFF 		bl	powf
 5419 002c 0346     		mov	r3, r0
 5420 002e 1846     		mov	r0, r3
 5421 0030 FFF7FEFF 		bl	__aeabi_f2uiz
 5422 0034 0346     		mov	r3, r0
 5423 0036 BB61     		str	r3, [r7, #24]
 937:gfx.c         ****                 int thisDigit = (myNumber / whichPlace);
 5424              		.loc 1 937 0 discriminator 3
 5425 0038 BB69     		ldr	r3, [r7, #24]
 5426 003a BA68     		ldr	r2, [r7, #8]
 5427 003c B2FBF3F3 		udiv	r3, r2, r3
 5428 0040 7B61     		str	r3, [r7, #20]
 938:gfx.c         ****                 buffer[i] = thisDigit + 48;
 5429              		.loc 1 938 0 discriminator 3
 5430 0042 FB69     		ldr	r3, [r7, #28]
 5431 0044 FA68     		ldr	r2, [r7, #12]
 5432 0046 1344     		add	r3, r3, r2
 5433 0048 7A69     		ldr	r2, [r7, #20]
 5434 004a D2B2     		uxtb	r2, r2
 5435 004c 3032     		adds	r2, r2, #48
 5436 004e D2B2     		uxtb	r2, r2
 5437 0050 1A70     		strb	r2, [r3]
 939:gfx.c         ****                 myNumber -= thisDigit * whichPlace;
 5438              		.loc 1 939 0 discriminator 3
 5439 0052 7B69     		ldr	r3, [r7, #20]
 5440 0054 BA69     		ldr	r2, [r7, #24]
 5441 0056 02FB03F3 		mul	r3, r2, r3
 5442 005a 1A46     		mov	r2, r3
 5443 005c BB68     		ldr	r3, [r7, #8]
 5444 005e 9B1A     		subs	r3, r3, r2
 5445 0060 BB60     		str	r3, [r7, #8]
 5446              	.LBE36:
 934:gfx.c         ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 115


 5447              		.loc 1 934 0 discriminator 3
 5448 0062 FB69     		ldr	r3, [r7, #28]
 5449 0064 0133     		adds	r3, r3, #1
 5450 0066 FB61     		str	r3, [r7, #28]
 5451              	.L197:
 934:gfx.c         ****             {
 5452              		.loc 1 934 0 is_stmt 0 discriminator 1
 5453 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5454 006a FB69     		ldr	r3, [r7, #28]
 5455 006c 9A42     		cmp	r2, r3
 5456 006e D1DC     		bgt	.L198
 5457              	.LBE35:
 940:gfx.c         ****             }
 941:gfx.c         ****             
 942:gfx.c         ****             return numDigits;
 5458              		.loc 1 942 0 is_stmt 1
 5459 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 943:gfx.c         ****         }
 5460              		.loc 1 943 0
 5461 0072 1846     		mov	r0, r3
 5462 0074 2037     		adds	r7, r7, #32
 5463              		.cfi_def_cfa_offset 8
 5464 0076 BD46     		mov	sp, r7
 5465              		.cfi_def_cfa_register 13
 5466              		@ sp needed
 5467 0078 80BD     		pop	{r7, pc}
 5468              	.L201:
 5469 007a 00BF     		.align	2
 5470              	.L200:
 5471 007c 00002041 		.word	1092616192
 5472              		.cfi_endproc
 5473              	.LFE106:
 5474              		.size	OLEDparseInt, .-OLEDparseInt
 5475              		.global	__aeabi_f2iz
 5476              		.global	__aeabi_fsub
 5477              		.global	__aeabi_fadd
 5478              		.global	__aeabi_fcmpgt
 5479              		.global	__aeabi_fmul
 5480              		.section	.text.OLEDparsePitch,"ax",%progbits
 5481              		.align	2
 5482              		.global	OLEDparsePitch
 5483              		.thumb
 5484              		.thumb_func
 5485              		.type	OLEDparsePitch, %function
 5486              	OLEDparsePitch:
 5487              	.LFB107:
 944:gfx.c         ****         
 945:gfx.c         ****         int OLEDparsePitch(char* buffer, float midi, uint8_t showCents)
 946:gfx.c         ****         {
 5488              		.loc 1 946 0
 5489              		.cfi_startproc
 5490              		@ args = 0, pretend = 0, frame = 40
 5491              		@ frame_needed = 1, uses_anonymous_args = 0
 5492 0000 90B5     		push	{r4, r7, lr}
 5493              		.cfi_def_cfa_offset 12
 5494              		.cfi_offset 4, -12
 5495              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 116


 5496              		.cfi_offset 14, -4
 5497 0002 8BB0     		sub	sp, sp, #44
 5498              		.cfi_def_cfa_offset 56
 5499 0004 00AF     		add	r7, sp, #0
 5500              		.cfi_def_cfa_register 7
 5501 0006 F860     		str	r0, [r7, #12]
 5502 0008 B960     		str	r1, [r7, #8]	@ float
 5503 000a 1346     		mov	r3, r2
 5504 000c FB71     		strb	r3, [r7, #7]
 947:gfx.c         ****             int pclass, octave, note, neg = 0; float offset;
 5505              		.loc 1 947 0
 5506 000e 0023     		movs	r3, #0
 5507 0010 3B62     		str	r3, [r7, #32]
 948:gfx.c         ****             
 949:gfx.c         ****             note = (int)midi;
 5508              		.loc 1 949 0
 5509 0012 B868     		ldr	r0, [r7, #8]	@ float
 5510 0014 FFF7FEFF 		bl	__aeabi_f2iz
 5511 0018 0346     		mov	r3, r0
 5512 001a 7B62     		str	r3, [r7, #36]
 950:gfx.c         ****             offset = midi - note;
 5513              		.loc 1 950 0
 5514 001c 786A     		ldr	r0, [r7, #36]
 5515 001e FFF7FEFF 		bl	__aeabi_i2f
 5516 0022 0346     		mov	r3, r0
 5517 0024 1946     		mov	r1, r3
 5518 0026 B868     		ldr	r0, [r7, #8]	@ float
 5519 0028 FFF7FEFF 		bl	__aeabi_fsub
 5520 002c 0346     		mov	r3, r0
 5521 002e FB61     		str	r3, [r7, #28]	@ float
 951:gfx.c         ****             
 952:gfx.c         ****             if ((midi + 0.5f) > (note+1))
 5522              		.loc 1 952 0
 5523 0030 4FF07C51 		mov	r1, #1056964608
 5524 0034 B868     		ldr	r0, [r7, #8]	@ float
 5525 0036 FFF7FEFF 		bl	__aeabi_fadd
 5526 003a 0346     		mov	r3, r0
 5527 003c 1C46     		mov	r4, r3
 5528 003e 7B6A     		ldr	r3, [r7, #36]
 5529 0040 0133     		adds	r3, r3, #1
 5530 0042 1846     		mov	r0, r3
 5531 0044 FFF7FEFF 		bl	__aeabi_i2f
 5532 0048 0346     		mov	r3, r0
 5533 004a 1946     		mov	r1, r3
 5534 004c 2046     		mov	r0, r4
 5535 004e FFF7FEFF 		bl	__aeabi_fcmpgt
 5536 0052 0346     		mov	r3, r0
 5537 0054 002B     		cmp	r3, #0
 5538 0056 10D0     		beq	.L203
 953:gfx.c         ****             {
 954:gfx.c         ****                 note += 1;
 5539              		.loc 1 954 0
 5540 0058 7B6A     		ldr	r3, [r7, #36]
 5541 005a 0133     		adds	r3, r3, #1
 5542 005c 7B62     		str	r3, [r7, #36]
 955:gfx.c         ****                 offset = (1.0f - offset) + 0.01f;
 5543              		.loc 1 955 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 117


 5544 005e F969     		ldr	r1, [r7, #28]	@ float
 5545 0060 4FF07E50 		mov	r0, #1065353216
 5546 0064 FFF7FEFF 		bl	__aeabi_fsub
 5547 0068 0346     		mov	r3, r0
 5548 006a 3D49     		ldr	r1, .L210
 5549 006c 1846     		mov	r0, r3
 5550 006e FFF7FEFF 		bl	__aeabi_fadd
 5551 0072 0346     		mov	r3, r0
 5552 0074 FB61     		str	r3, [r7, #28]	@ float
 956:gfx.c         ****                 neg = 1;
 5553              		.loc 1 956 0
 5554 0076 0123     		movs	r3, #1
 5555 0078 3B62     		str	r3, [r7, #32]
 5556              	.L203:
 957:gfx.c         ****             }
 958:gfx.c         ****             
 959:gfx.c         ****             pclass = (note % 12);
 5557              		.loc 1 959 0
 5558 007a 7A6A     		ldr	r2, [r7, #36]
 5559 007c 394B     		ldr	r3, .L210+4
 5560 007e 83FB0213 		smull	r1, r3, r3, r2
 5561 0082 5910     		asrs	r1, r3, #1
 5562 0084 D317     		asrs	r3, r2, #31
 5563 0086 C91A     		subs	r1, r1, r3
 5564 0088 0B46     		mov	r3, r1
 5565 008a 5B00     		lsls	r3, r3, #1
 5566 008c 0B44     		add	r3, r3, r1
 5567 008e 9B00     		lsls	r3, r3, #2
 5568 0090 D31A     		subs	r3, r2, r3
 5569 0092 7B61     		str	r3, [r7, #20]
 960:gfx.c         ****             octave = (int)(note / 12) - 1;
 5570              		.loc 1 960 0
 5571 0094 7B6A     		ldr	r3, [r7, #36]
 5572 0096 334A     		ldr	r2, .L210+4
 5573 0098 82FB0312 		smull	r1, r2, r2, r3
 5574 009c 5210     		asrs	r2, r2, #1
 5575 009e DB17     		asrs	r3, r3, #31
 5576 00a0 D31A     		subs	r3, r2, r3
 5577 00a2 013B     		subs	r3, r3, #1
 5578 00a4 3B61     		str	r3, [r7, #16]
 961:gfx.c         ****             
 962:gfx.c         ****             int idx = 0;
 5579              		.loc 1 962 0
 5580 00a6 0023     		movs	r3, #0
 5581 00a8 BB61     		str	r3, [r7, #24]
 963:gfx.c         ****             
 964:gfx.c         ****             buffer[idx++] = pitches[pclass*2];
 5582              		.loc 1 964 0
 5583 00aa BB69     		ldr	r3, [r7, #24]
 5584 00ac 5A1C     		adds	r2, r3, #1
 5585 00ae BA61     		str	r2, [r7, #24]
 5586 00b0 1A46     		mov	r2, r3
 5587 00b2 FB68     		ldr	r3, [r7, #12]
 5588 00b4 1344     		add	r3, r3, r2
 5589 00b6 7A69     		ldr	r2, [r7, #20]
 5590 00b8 5200     		lsls	r2, r2, #1
 5591 00ba 2B49     		ldr	r1, .L210+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 118


 5592 00bc 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5593 00be 1A70     		strb	r2, [r3]
 965:gfx.c         ****             buffer[idx++] = pitches[pclass*2+1];
 5594              		.loc 1 965 0
 5595 00c0 BB69     		ldr	r3, [r7, #24]
 5596 00c2 5A1C     		adds	r2, r3, #1
 5597 00c4 BA61     		str	r2, [r7, #24]
 5598 00c6 1A46     		mov	r2, r3
 5599 00c8 FB68     		ldr	r3, [r7, #12]
 5600 00ca 1344     		add	r3, r3, r2
 5601 00cc 7A69     		ldr	r2, [r7, #20]
 5602 00ce 5200     		lsls	r2, r2, #1
 5603 00d0 0132     		adds	r2, r2, #1
 5604 00d2 2549     		ldr	r1, .L210+8
 5605 00d4 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5606 00d6 1A70     		strb	r2, [r3]
 966:gfx.c         ****             
 967:gfx.c         ****             OLEDparseInt(&buffer[idx++], octave, 1);
 5607              		.loc 1 967 0
 5608 00d8 BB69     		ldr	r3, [r7, #24]
 5609 00da 5A1C     		adds	r2, r3, #1
 5610 00dc BA61     		str	r2, [r7, #24]
 5611 00de 1A46     		mov	r2, r3
 5612 00e0 FB68     		ldr	r3, [r7, #12]
 5613 00e2 1344     		add	r3, r3, r2
 5614 00e4 3969     		ldr	r1, [r7, #16]
 5615 00e6 0122     		movs	r2, #1
 5616 00e8 1846     		mov	r0, r3
 5617 00ea FFF7FEFF 		bl	OLEDparseInt
 968:gfx.c         ****             
 969:gfx.c         ****             if (showCents)
 5618              		.loc 1 969 0
 5619 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5620 00f0 002B     		cmp	r3, #0
 5621 00f2 2FD0     		beq	.L205
 970:gfx.c         ****             {
 971:gfx.c         ****                 buffer[idx++] = ' ';
 5622              		.loc 1 971 0
 5623 00f4 BB69     		ldr	r3, [r7, #24]
 5624 00f6 5A1C     		adds	r2, r3, #1
 5625 00f8 BA61     		str	r2, [r7, #24]
 5626 00fa 1A46     		mov	r2, r3
 5627 00fc FB68     		ldr	r3, [r7, #12]
 5628 00fe 1344     		add	r3, r3, r2
 5629 0100 2022     		movs	r2, #32
 5630 0102 1A70     		strb	r2, [r3]
 972:gfx.c         ****                 
 973:gfx.c         ****                 if (neg == 1)
 5631              		.loc 1 973 0
 5632 0104 3B6A     		ldr	r3, [r7, #32]
 5633 0106 012B     		cmp	r3, #1
 5634 0108 08D1     		bne	.L206
 974:gfx.c         ****                     buffer[idx++] = '-';
 5635              		.loc 1 974 0
 5636 010a BB69     		ldr	r3, [r7, #24]
 5637 010c 5A1C     		adds	r2, r3, #1
 5638 010e BA61     		str	r2, [r7, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 119


 5639 0110 1A46     		mov	r2, r3
 5640 0112 FB68     		ldr	r3, [r7, #12]
 5641 0114 1344     		add	r3, r3, r2
 5642 0116 2D22     		movs	r2, #45
 5643 0118 1A70     		strb	r2, [r3]
 5644 011a 07E0     		b	.L207
 5645              	.L206:
 975:gfx.c         ****                 else
 976:gfx.c         ****                     buffer[idx++] = '+';
 5646              		.loc 1 976 0
 5647 011c BB69     		ldr	r3, [r7, #24]
 5648 011e 5A1C     		adds	r2, r3, #1
 5649 0120 BA61     		str	r2, [r7, #24]
 5650 0122 1A46     		mov	r2, r3
 5651 0124 FB68     		ldr	r3, [r7, #12]
 5652 0126 1344     		add	r3, r3, r2
 5653 0128 2B22     		movs	r2, #43
 5654 012a 1A70     		strb	r2, [r3]
 5655              	.L207:
 977:gfx.c         ****                 
 978:gfx.c         ****                 OLEDparseInt(&buffer[idx], (uint32_t) (offset * 100.0f), 2);
 5656              		.loc 1 978 0
 5657 012c BB69     		ldr	r3, [r7, #24]
 5658 012e FA68     		ldr	r2, [r7, #12]
 5659 0130 D418     		adds	r4, r2, r3
 5660 0132 0E49     		ldr	r1, .L210+12
 5661 0134 F869     		ldr	r0, [r7, #28]	@ float
 5662 0136 FFF7FEFF 		bl	__aeabi_fmul
 5663 013a 0346     		mov	r3, r0
 5664 013c 1846     		mov	r0, r3
 5665 013e FFF7FEFF 		bl	__aeabi_f2uiz
 5666 0142 0346     		mov	r3, r0
 5667 0144 0222     		movs	r2, #2
 5668 0146 1946     		mov	r1, r3
 5669 0148 2046     		mov	r0, r4
 5670 014a FFF7FEFF 		bl	OLEDparseInt
 979:gfx.c         ****                 idx += 2;
 5671              		.loc 1 979 0
 5672 014e BB69     		ldr	r3, [r7, #24]
 5673 0150 0233     		adds	r3, r3, #2
 5674 0152 BB61     		str	r3, [r7, #24]
 5675              	.L205:
 980:gfx.c         ****             }
 981:gfx.c         ****             
 982:gfx.c         ****             return idx;
 5676              		.loc 1 982 0
 5677 0154 BB69     		ldr	r3, [r7, #24]
 983:gfx.c         ****         }
 5678              		.loc 1 983 0
 5679 0156 1846     		mov	r0, r3
 5680 0158 2C37     		adds	r7, r7, #44
 5681              		.cfi_def_cfa_offset 12
 5682 015a BD46     		mov	sp, r7
 5683              		.cfi_def_cfa_register 13
 5684              		@ sp needed
 5685 015c 90BD     		pop	{r4, r7, pc}
 5686              	.L211:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 120


 5687 015e 00BF     		.align	2
 5688              	.L210:
 5689 0160 0AD7233C 		.word	1008981770
 5690 0164 ABAAAA2A 		.word	715827883
 5691 0168 00000000 		.word	pitches
 5692 016c 0000C842 		.word	1120403456
 5693              		.cfi_endproc
 5694              	.LFE107:
 5695              		.size	OLEDparsePitch, .-OLEDparsePitch
 5696              		.section	.text.OLEDparsePitchClass,"ax",%progbits
 5697              		.align	2
 5698              		.global	OLEDparsePitchClass
 5699              		.thumb
 5700              		.thumb_func
 5701              		.type	OLEDparsePitchClass, %function
 5702              	OLEDparsePitchClass:
 5703              	.LFB108:
 984:gfx.c         ****         
 985:gfx.c         ****         int OLEDparsePitchClass(char* buffer, float midi)
 986:gfx.c         ****         {
 5704              		.loc 1 986 0
 5705              		.cfi_startproc
 5706              		@ args = 0, pretend = 0, frame = 24
 5707              		@ frame_needed = 1, uses_anonymous_args = 0
 5708 0000 90B5     		push	{r4, r7, lr}
 5709              		.cfi_def_cfa_offset 12
 5710              		.cfi_offset 4, -12
 5711              		.cfi_offset 7, -8
 5712              		.cfi_offset 14, -4
 5713 0002 87B0     		sub	sp, sp, #28
 5714              		.cfi_def_cfa_offset 40
 5715 0004 00AF     		add	r7, sp, #0
 5716              		.cfi_def_cfa_register 7
 5717 0006 7860     		str	r0, [r7, #4]
 5718 0008 3960     		str	r1, [r7]	@ float
 987:gfx.c         ****             int pclass, note;
 988:gfx.c         ****             float offset;
 989:gfx.c         ****             
 990:gfx.c         ****             note = (int)midi;
 5719              		.loc 1 990 0
 5720 000a 3868     		ldr	r0, [r7]	@ float
 5721 000c FFF7FEFF 		bl	__aeabi_f2iz
 5722 0010 0346     		mov	r3, r0
 5723 0012 7B61     		str	r3, [r7, #20]
 991:gfx.c         ****             offset = midi - note;
 5724              		.loc 1 991 0
 5725 0014 7869     		ldr	r0, [r7, #20]
 5726 0016 FFF7FEFF 		bl	__aeabi_i2f
 5727 001a 0346     		mov	r3, r0
 5728 001c 1946     		mov	r1, r3
 5729 001e 3868     		ldr	r0, [r7]	@ float
 5730 0020 FFF7FEFF 		bl	__aeabi_fsub
 5731 0024 0346     		mov	r3, r0
 5732 0026 3B61     		str	r3, [r7, #16]	@ float
 992:gfx.c         ****             
 993:gfx.c         ****             if ((midi + 0.5f) > (note+1))
 5733              		.loc 1 993 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 121


 5734 0028 4FF07C51 		mov	r1, #1056964608
 5735 002c 3868     		ldr	r0, [r7]	@ float
 5736 002e FFF7FEFF 		bl	__aeabi_fadd
 5737 0032 0346     		mov	r3, r0
 5738 0034 1C46     		mov	r4, r3
 5739 0036 7B69     		ldr	r3, [r7, #20]
 5740 0038 0133     		adds	r3, r3, #1
 5741 003a 1846     		mov	r0, r3
 5742 003c FFF7FEFF 		bl	__aeabi_i2f
 5743 0040 0346     		mov	r3, r0
 5744 0042 1946     		mov	r1, r3
 5745 0044 2046     		mov	r0, r4
 5746 0046 FFF7FEFF 		bl	__aeabi_fcmpgt
 5747 004a 0346     		mov	r3, r0
 5748 004c 002B     		cmp	r3, #0
 5749 004e 0ED0     		beq	.L213
 994:gfx.c         ****             {
 995:gfx.c         ****                 note += 1;
 5750              		.loc 1 995 0
 5751 0050 7B69     		ldr	r3, [r7, #20]
 5752 0052 0133     		adds	r3, r3, #1
 5753 0054 7B61     		str	r3, [r7, #20]
 996:gfx.c         ****                 offset = (1.0f - offset) + 0.01f;
 5754              		.loc 1 996 0
 5755 0056 3969     		ldr	r1, [r7, #16]	@ float
 5756 0058 4FF07E50 		mov	r0, #1065353216
 5757 005c FFF7FEFF 		bl	__aeabi_fsub
 5758 0060 0346     		mov	r3, r0
 5759 0062 1849     		ldr	r1, .L217
 5760 0064 1846     		mov	r0, r3
 5761 0066 FFF7FEFF 		bl	__aeabi_fadd
 5762 006a 0346     		mov	r3, r0
 5763 006c 3B61     		str	r3, [r7, #16]	@ float
 5764              	.L213:
 997:gfx.c         ****             }
 998:gfx.c         ****             
 999:gfx.c         ****             pclass = (note % 12);
 5765              		.loc 1 999 0
 5766 006e 7A69     		ldr	r2, [r7, #20]
 5767 0070 154B     		ldr	r3, .L217+4
 5768 0072 83FB0213 		smull	r1, r3, r3, r2
 5769 0076 5910     		asrs	r1, r3, #1
 5770 0078 D317     		asrs	r3, r2, #31
 5771 007a C91A     		subs	r1, r1, r3
 5772 007c 0B46     		mov	r3, r1
 5773 007e 5B00     		lsls	r3, r3, #1
 5774 0080 0B44     		add	r3, r3, r1
 5775 0082 9B00     		lsls	r3, r3, #2
 5776 0084 D31A     		subs	r3, r2, r3
 5777 0086 FB60     		str	r3, [r7, #12]
1000:gfx.c         ****             
1001:gfx.c         ****             int idx = 0;
 5778              		.loc 1 1001 0
 5779 0088 0023     		movs	r3, #0
 5780 008a BB60     		str	r3, [r7, #8]
1002:gfx.c         ****             
1003:gfx.c         ****             buffer[idx++] = pitches[pclass*2];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 122


 5781              		.loc 1 1003 0
 5782 008c BB68     		ldr	r3, [r7, #8]
 5783 008e 5A1C     		adds	r2, r3, #1
 5784 0090 BA60     		str	r2, [r7, #8]
 5785 0092 1A46     		mov	r2, r3
 5786 0094 7B68     		ldr	r3, [r7, #4]
 5787 0096 1344     		add	r3, r3, r2
 5788 0098 FA68     		ldr	r2, [r7, #12]
 5789 009a 5200     		lsls	r2, r2, #1
 5790 009c 0B49     		ldr	r1, .L217+8
 5791 009e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5792 00a0 1A70     		strb	r2, [r3]
1004:gfx.c         ****             buffer[idx++] = pitches[pclass*2+1];
 5793              		.loc 1 1004 0
 5794 00a2 BB68     		ldr	r3, [r7, #8]
 5795 00a4 5A1C     		adds	r2, r3, #1
 5796 00a6 BA60     		str	r2, [r7, #8]
 5797 00a8 1A46     		mov	r2, r3
 5798 00aa 7B68     		ldr	r3, [r7, #4]
 5799 00ac 1344     		add	r3, r3, r2
 5800 00ae FA68     		ldr	r2, [r7, #12]
 5801 00b0 5200     		lsls	r2, r2, #1
 5802 00b2 0132     		adds	r2, r2, #1
 5803 00b4 0549     		ldr	r1, .L217+8
 5804 00b6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5805 00b8 1A70     		strb	r2, [r3]
1005:gfx.c         ****             
1006:gfx.c         ****             return idx;
 5806              		.loc 1 1006 0
 5807 00ba BB68     		ldr	r3, [r7, #8]
1007:gfx.c         ****         }
 5808              		.loc 1 1007 0
 5809 00bc 1846     		mov	r0, r3
 5810 00be 1C37     		adds	r7, r7, #28
 5811              		.cfi_def_cfa_offset 12
 5812 00c0 BD46     		mov	sp, r7
 5813              		.cfi_def_cfa_register 13
 5814              		@ sp needed
 5815 00c2 90BD     		pop	{r4, r7, pc}
 5816              	.L218:
 5817              		.align	2
 5818              	.L217:
 5819 00c4 0AD7233C 		.word	1008981770
 5820 00c8 ABAAAA2A 		.word	715827883
 5821 00cc 00000000 		.word	pitches
 5822              		.cfi_endproc
 5823              	.LFE108:
 5824              		.size	OLEDparsePitchClass, .-OLEDparsePitchClass
 5825              		.global	__aeabi_ui2f
 5826              		.global	__aeabi_fdiv
 5827              		.section	.text.OLEDparseFixedFloat,"ax",%progbits
 5828              		.align	2
 5829              		.global	OLEDparseFixedFloat
 5830              		.thumb
 5831              		.thumb_func
 5832              		.type	OLEDparseFixedFloat, %function
 5833              	OLEDparseFixedFloat:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 123


 5834              	.LFB109:
1008:gfx.c         ****         
1009:gfx.c         ****         int OLEDparseFixedFloat(char* buffer, float input, uint8_t numDigits, uint8_t numDecimal)
1010:gfx.c         ****         {
 5835              		.loc 1 1010 0
 5836              		.cfi_startproc
 5837              		@ args = 0, pretend = 0, frame = 56
 5838              		@ frame_needed = 1, uses_anonymous_args = 0
 5839 0000 80B5     		push	{r7, lr}
 5840              		.cfi_def_cfa_offset 8
 5841              		.cfi_offset 7, -8
 5842              		.cfi_offset 14, -4
 5843 0002 8EB0     		sub	sp, sp, #56
 5844              		.cfi_def_cfa_offset 64
 5845 0004 00AF     		add	r7, sp, #0
 5846              		.cfi_def_cfa_register 7
 5847 0006 F860     		str	r0, [r7, #12]
 5848 0008 B960     		str	r1, [r7, #8]	@ float
 5849 000a 1146     		mov	r1, r2
 5850 000c 1A46     		mov	r2, r3
 5851 000e 0B46     		mov	r3, r1
 5852 0010 FB71     		strb	r3, [r7, #7]
 5853 0012 1346     		mov	r3, r2
 5854 0014 BB71     		strb	r3, [r7, #6]
1011:gfx.c         ****             float power = powf(10.0f, numDecimal);
 5855              		.loc 1 1011 0
 5856 0016 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5857 0018 1846     		mov	r0, r3
 5858 001a FFF7FEFF 		bl	__aeabi_ui2f
 5859 001e 0346     		mov	r3, r0
 5860 0020 1946     		mov	r1, r3
 5861 0022 5A48     		ldr	r0, .L230
 5862 0024 FFF7FEFF 		bl	powf
 5863 0028 3862     		str	r0, [r7, #32]	@ float
1012:gfx.c         ****             float f = ((float)(int)(input * power + 0.5f)) / power;
 5864              		.loc 1 1012 0
 5865 002a 396A     		ldr	r1, [r7, #32]	@ float
 5866 002c B868     		ldr	r0, [r7, #8]	@ float
 5867 002e FFF7FEFF 		bl	__aeabi_fmul
 5868 0032 0346     		mov	r3, r0
 5869 0034 4FF07C51 		mov	r1, #1056964608
 5870 0038 1846     		mov	r0, r3
 5871 003a FFF7FEFF 		bl	__aeabi_fadd
 5872 003e 0346     		mov	r3, r0
 5873 0040 1846     		mov	r0, r3
 5874 0042 FFF7FEFF 		bl	__aeabi_f2iz
 5875 0046 0346     		mov	r3, r0
 5876 0048 1846     		mov	r0, r3
 5877 004a FFF7FEFF 		bl	__aeabi_i2f
 5878 004e 0346     		mov	r3, r0
 5879 0050 396A     		ldr	r1, [r7, #32]	@ float
 5880 0052 1846     		mov	r0, r3
 5881 0054 FFF7FEFF 		bl	__aeabi_fdiv
 5882 0058 0346     		mov	r3, r0
 5883 005a FB61     		str	r3, [r7, #28]	@ float
1013:gfx.c         ****             
1014:gfx.c         ****             int nonzeroHasHappened = 0, decimalHasHappened = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 124


 5884              		.loc 1 1014 0
 5885 005c 0023     		movs	r3, #0
 5886 005e 7B63     		str	r3, [r7, #52]
 5887 0060 0023     		movs	r3, #0
 5888 0062 3B63     		str	r3, [r7, #48]
1015:gfx.c         ****             
1016:gfx.c         ****             int myNumber = (int)(f * power);
 5889              		.loc 1 1016 0
 5890 0064 396A     		ldr	r1, [r7, #32]	@ float
 5891 0066 F869     		ldr	r0, [r7, #28]	@ float
 5892 0068 FFF7FEFF 		bl	__aeabi_fmul
 5893 006c 0346     		mov	r3, r0
 5894 006e 1846     		mov	r0, r3
 5895 0070 FFF7FEFF 		bl	__aeabi_f2iz
 5896 0074 0346     		mov	r3, r0
 5897 0076 FB62     		str	r3, [r7, #44]
1017:gfx.c         ****             
1018:gfx.c         ****             int idx = 0, i = 0;
 5898              		.loc 1 1018 0
 5899 0078 0023     		movs	r3, #0
 5900 007a BB62     		str	r3, [r7, #40]
 5901 007c 0023     		movs	r3, #0
 5902 007e 7B62     		str	r3, [r7, #36]
1019:gfx.c         ****             
1020:gfx.c         ****             if (myNumber < 0)
 5903              		.loc 1 1020 0
 5904 0080 FB6A     		ldr	r3, [r7, #44]
 5905 0082 002B     		cmp	r3, #0
 5906 0084 79DA     		bge	.L221
1021:gfx.c         ****             {
1022:gfx.c         ****                 myNumber *= -1;
 5907              		.loc 1 1022 0
 5908 0086 FB6A     		ldr	r3, [r7, #44]
 5909 0088 5B42     		negs	r3, r3
 5910 008a FB62     		str	r3, [r7, #44]
1023:gfx.c         ****                 buffer[idx++] = '-';
 5911              		.loc 1 1023 0
 5912 008c BB6A     		ldr	r3, [r7, #40]
 5913 008e 5A1C     		adds	r2, r3, #1
 5914 0090 BA62     		str	r2, [r7, #40]
 5915 0092 1A46     		mov	r2, r3
 5916 0094 FB68     		ldr	r3, [r7, #12]
 5917 0096 1344     		add	r3, r3, r2
 5918 0098 2D22     		movs	r2, #45
 5919 009a 1A70     		strb	r2, [r3]
1024:gfx.c         ****                 i++;
 5920              		.loc 1 1024 0
 5921 009c 7B6A     		ldr	r3, [r7, #36]
 5922 009e 0133     		adds	r3, r3, #1
 5923 00a0 7B62     		str	r3, [r7, #36]
1025:gfx.c         ****             }
1026:gfx.c         ****             
1027:gfx.c         ****             while (i < numDigits)
 5924              		.loc 1 1027 0
 5925 00a2 6AE0     		b	.L221
 5926              	.L228:
1028:gfx.c         ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 125


1029:gfx.c         ****                 if ((decimalHasHappened == 0) && ((numDigits-i) == numDecimal))
 5927              		.loc 1 1029 0
 5928 00a4 3B6B     		ldr	r3, [r7, #48]
 5929 00a6 002B     		cmp	r3, #0
 5930 00a8 1ED1     		bne	.L222
 5931              		.loc 1 1029 0 is_stmt 0 discriminator 1
 5932 00aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5933 00ac 7B6A     		ldr	r3, [r7, #36]
 5934 00ae D21A     		subs	r2, r2, r3
 5935 00b0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5936 00b2 9A42     		cmp	r2, r3
 5937 00b4 18D1     		bne	.L222
1030:gfx.c         ****                 {
1031:gfx.c         ****                     if (nonzeroHasHappened == 0)
 5938              		.loc 1 1031 0 is_stmt 1
 5939 00b6 7B6B     		ldr	r3, [r7, #52]
 5940 00b8 002B     		cmp	r3, #0
 5941 00ba 0AD1     		bne	.L223
1032:gfx.c         ****                     {
1033:gfx.c         ****                         idx++; //get past the negative if there is one - this is hacky should figur
 5942              		.loc 1 1033 0
 5943 00bc BB6A     		ldr	r3, [r7, #40]
 5944 00be 0133     		adds	r3, r3, #1
 5945 00c0 BB62     		str	r3, [r7, #40]
1034:gfx.c         ****                         buffer[idx-1] = '0';
 5946              		.loc 1 1034 0
 5947 00c2 BB6A     		ldr	r3, [r7, #40]
 5948 00c4 013B     		subs	r3, r3, #1
 5949 00c6 FA68     		ldr	r2, [r7, #12]
 5950 00c8 1344     		add	r3, r3, r2
 5951 00ca 3022     		movs	r2, #48
 5952 00cc 1A70     		strb	r2, [r3]
1035:gfx.c         ****                         nonzeroHasHappened = 1;
 5953              		.loc 1 1035 0
 5954 00ce 0123     		movs	r3, #1
 5955 00d0 7B63     		str	r3, [r7, #52]
 5956              	.L223:
1036:gfx.c         ****                     }
1037:gfx.c         ****                     
1038:gfx.c         ****                     buffer[idx++] = '.';
 5957              		.loc 1 1038 0
 5958 00d2 BB6A     		ldr	r3, [r7, #40]
 5959 00d4 5A1C     		adds	r2, r3, #1
 5960 00d6 BA62     		str	r2, [r7, #40]
 5961 00d8 1A46     		mov	r2, r3
 5962 00da FB68     		ldr	r3, [r7, #12]
 5963 00dc 1344     		add	r3, r3, r2
 5964 00de 2E22     		movs	r2, #46
 5965 00e0 1A70     		strb	r2, [r3]
1039:gfx.c         ****                     decimalHasHappened = 1;
 5966              		.loc 1 1039 0
 5967 00e2 0123     		movs	r3, #1
 5968 00e4 3B63     		str	r3, [r7, #48]
 5969 00e6 48E0     		b	.L221
 5970              	.L222:
 5971              	.LBB37:
1040:gfx.c         ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 126


1041:gfx.c         ****                 else
1042:gfx.c         ****                 {
1043:gfx.c         ****                     
1044:gfx.c         ****                     int whichPlace = (uint32_t) powf(10.0f,(numDigits - 1 - i));
 5972              		.loc 1 1044 0
 5973 00e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5974 00ea 5A1E     		subs	r2, r3, #1
 5975 00ec 7B6A     		ldr	r3, [r7, #36]
 5976 00ee D31A     		subs	r3, r2, r3
 5977 00f0 1846     		mov	r0, r3
 5978 00f2 FFF7FEFF 		bl	__aeabi_i2f
 5979 00f6 0346     		mov	r3, r0
 5980 00f8 1946     		mov	r1, r3
 5981 00fa 2448     		ldr	r0, .L230
 5982 00fc FFF7FEFF 		bl	powf
 5983 0100 0346     		mov	r3, r0
 5984 0102 1846     		mov	r0, r3
 5985 0104 FFF7FEFF 		bl	__aeabi_f2uiz
 5986 0108 0346     		mov	r3, r0
 5987 010a BB61     		str	r3, [r7, #24]
1045:gfx.c         ****                     int thisDigit = (myNumber / whichPlace);
 5988              		.loc 1 1045 0
 5989 010c FA6A     		ldr	r2, [r7, #44]
 5990 010e BB69     		ldr	r3, [r7, #24]
 5991 0110 92FBF3F3 		sdiv	r3, r2, r3
 5992 0114 7B61     		str	r3, [r7, #20]
1046:gfx.c         ****                     
1047:gfx.c         ****                     if (nonzeroHasHappened == 0)
 5993              		.loc 1 1047 0
 5994 0116 7B6B     		ldr	r3, [r7, #52]
 5995 0118 002B     		cmp	r3, #0
 5996 011a 19D1     		bne	.L224
1048:gfx.c         ****                     {
1049:gfx.c         ****                         if (thisDigit > 0)
 5997              		.loc 1 1049 0
 5998 011c 7B69     		ldr	r3, [r7, #20]
 5999 011e 002B     		cmp	r3, #0
 6000 0120 0DDD     		ble	.L225
1050:gfx.c         ****                         {
1051:gfx.c         ****                             buffer[idx++] = thisDigit + 48;
 6001              		.loc 1 1051 0
 6002 0122 BB6A     		ldr	r3, [r7, #40]
 6003 0124 5A1C     		adds	r2, r3, #1
 6004 0126 BA62     		str	r2, [r7, #40]
 6005 0128 1A46     		mov	r2, r3
 6006 012a FB68     		ldr	r3, [r7, #12]
 6007 012c 1344     		add	r3, r3, r2
 6008 012e 7A69     		ldr	r2, [r7, #20]
 6009 0130 D2B2     		uxtb	r2, r2
 6010 0132 3032     		adds	r2, r2, #48
 6011 0134 D2B2     		uxtb	r2, r2
 6012 0136 1A70     		strb	r2, [r3]
1052:gfx.c         ****                             nonzeroHasHappened = 1;
 6013              		.loc 1 1052 0
 6014 0138 0123     		movs	r3, #1
 6015 013a 7B63     		str	r3, [r7, #52]
 6016 013c 13E0     		b	.L227
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 127


 6017              	.L225:
1053:gfx.c         ****                         }
1054:gfx.c         ****                         else
1055:gfx.c         ****                         {
1056:gfx.c         ****                             buffer[idx++] = ' ';
 6018              		.loc 1 1056 0
 6019 013e BB6A     		ldr	r3, [r7, #40]
 6020 0140 5A1C     		adds	r2, r3, #1
 6021 0142 BA62     		str	r2, [r7, #40]
 6022 0144 1A46     		mov	r2, r3
 6023 0146 FB68     		ldr	r3, [r7, #12]
 6024 0148 1344     		add	r3, r3, r2
 6025 014a 2022     		movs	r2, #32
 6026 014c 1A70     		strb	r2, [r3]
 6027 014e 0AE0     		b	.L227
 6028              	.L224:
1057:gfx.c         ****                         }
1058:gfx.c         ****                     }
1059:gfx.c         ****                     else
1060:gfx.c         ****                     {
1061:gfx.c         ****                         buffer[idx++] = thisDigit + 48;
 6029              		.loc 1 1061 0
 6030 0150 BB6A     		ldr	r3, [r7, #40]
 6031 0152 5A1C     		adds	r2, r3, #1
 6032 0154 BA62     		str	r2, [r7, #40]
 6033 0156 1A46     		mov	r2, r3
 6034 0158 FB68     		ldr	r3, [r7, #12]
 6035 015a 1344     		add	r3, r3, r2
 6036 015c 7A69     		ldr	r2, [r7, #20]
 6037 015e D2B2     		uxtb	r2, r2
 6038 0160 3032     		adds	r2, r2, #48
 6039 0162 D2B2     		uxtb	r2, r2
 6040 0164 1A70     		strb	r2, [r3]
 6041              	.L227:
1062:gfx.c         ****                     }
1063:gfx.c         ****                     
1064:gfx.c         ****                     myNumber -= thisDigit * whichPlace;
 6042              		.loc 1 1064 0
 6043 0166 7B69     		ldr	r3, [r7, #20]
 6044 0168 BA69     		ldr	r2, [r7, #24]
 6045 016a 02FB03F3 		mul	r3, r2, r3
 6046 016e FA6A     		ldr	r2, [r7, #44]
 6047 0170 D31A     		subs	r3, r2, r3
 6048 0172 FB62     		str	r3, [r7, #44]
1065:gfx.c         ****                     
1066:gfx.c         ****                     i++;
 6049              		.loc 1 1066 0
 6050 0174 7B6A     		ldr	r3, [r7, #36]
 6051 0176 0133     		adds	r3, r3, #1
 6052 0178 7B62     		str	r3, [r7, #36]
 6053              	.L221:
 6054              	.LBE37:
1027:gfx.c         ****             {
 6055              		.loc 1 1027 0
 6056 017a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6057 017c 7B6A     		ldr	r3, [r7, #36]
 6058 017e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 128


 6059 0180 90DC     		bgt	.L228
1067:gfx.c         ****                 }
1068:gfx.c         ****             }
1069:gfx.c         ****             
1070:gfx.c         ****             return idx;
 6060              		.loc 1 1070 0
 6061 0182 BB6A     		ldr	r3, [r7, #40]
1071:gfx.c         ****         }
 6062              		.loc 1 1071 0
 6063 0184 1846     		mov	r0, r3
 6064 0186 3837     		adds	r7, r7, #56
 6065              		.cfi_def_cfa_offset 8
 6066 0188 BD46     		mov	sp, r7
 6067              		.cfi_def_cfa_register 13
 6068              		@ sp needed
 6069 018a 80BD     		pop	{r7, pc}
 6070              	.L231:
 6071              		.align	2
 6072              	.L230:
 6073 018c 00002041 		.word	1092616192
 6074              		.cfi_endproc
 6075              	.LFE109:
 6076              		.size	OLEDparseFixedFloat, .-OLEDparseFixedFloat
 6077              		.section	.text.GFXscrollUp,"ax",%progbits
 6078              		.align	2
 6079              		.global	GFXscrollUp
 6080              		.thumb
 6081              		.thumb_func
 6082              		.type	GFXscrollUp, %function
 6083              	GFXscrollUp:
 6084              	.LFB110:
1072:gfx.c         ****         
1073:gfx.c         ****         
1074:gfx.c         ****         
1075:gfx.c         ****         void GFXscrollUp(GFX* myGFX, uint8_t c, uint16_t color) {
 6085              		.loc 1 1075 0
 6086              		.cfi_startproc
 6087              		@ args = 0, pretend = 0, frame = 8
 6088              		@ frame_needed = 1, uses_anonymous_args = 0
 6089              		@ link register save eliminated.
 6090 0000 80B4     		push	{r7}
 6091              		.cfi_def_cfa_offset 4
 6092              		.cfi_offset 7, -4
 6093 0002 83B0     		sub	sp, sp, #12
 6094              		.cfi_def_cfa_offset 16
 6095 0004 00AF     		add	r7, sp, #0
 6096              		.cfi_def_cfa_register 7
 6097 0006 7860     		str	r0, [r7, #4]
 6098 0008 0B46     		mov	r3, r1
 6099 000a FB70     		strb	r3, [r7, #3]
 6100 000c 1346     		mov	r3, r2	@ movhi
 6101 000e 3B80     		strh	r3, [r7]	@ movhi
1076:gfx.c         ****             // map to logical orientation
1077:gfx.c         ****             ;
1078:gfx.c         ****         }
 6102              		.loc 1 1078 0
 6103 0010 00BF     		nop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 129


 6104 0012 0C37     		adds	r7, r7, #12
 6105              		.cfi_def_cfa_offset 4
 6106 0014 BD46     		mov	sp, r7
 6107              		.cfi_def_cfa_register 13
 6108              		@ sp needed
 6109 0016 80BC     		pop	{r7}
 6110              		.cfi_restore 7
 6111              		.cfi_def_cfa_offset 0
 6112 0018 7047     		bx	lr
 6113              		.cfi_endproc
 6114              	.LFE110:
 6115              		.size	GFXscrollUp, .-GFXscrollUp
 6116 001a 00BF     		.section	.text.GFXscrollDown,"ax",%progbits
 6117              		.align	2
 6118              		.global	GFXscrollDown
 6119              		.thumb
 6120              		.thumb_func
 6121              		.type	GFXscrollDown, %function
 6122              	GFXscrollDown:
 6123              	.LFB111:
1079:gfx.c         ****         
1080:gfx.c         ****         void GFXscrollDown(GFX* myGFX, uint8_t c, uint16_t color) {
 6124              		.loc 1 1080 0
 6125              		.cfi_startproc
 6126              		@ args = 0, pretend = 0, frame = 8
 6127              		@ frame_needed = 1, uses_anonymous_args = 0
 6128              		@ link register save eliminated.
 6129 0000 80B4     		push	{r7}
 6130              		.cfi_def_cfa_offset 4
 6131              		.cfi_offset 7, -4
 6132 0002 83B0     		sub	sp, sp, #12
 6133              		.cfi_def_cfa_offset 16
 6134 0004 00AF     		add	r7, sp, #0
 6135              		.cfi_def_cfa_register 7
 6136 0006 7860     		str	r0, [r7, #4]
 6137 0008 0B46     		mov	r3, r1
 6138 000a FB70     		strb	r3, [r7, #3]
 6139 000c 1346     		mov	r3, r2	@ movhi
 6140 000e 3B80     		strh	r3, [r7]	@ movhi
1081:gfx.c         ****             // map to logical orientation
1082:gfx.c         ****             ;
1083:gfx.c         ****         }
 6141              		.loc 1 1083 0
 6142 0010 00BF     		nop
 6143 0012 0C37     		adds	r7, r7, #12
 6144              		.cfi_def_cfa_offset 4
 6145 0014 BD46     		mov	sp, r7
 6146              		.cfi_def_cfa_register 13
 6147              		@ sp needed
 6148 0016 80BC     		pop	{r7}
 6149              		.cfi_restore 7
 6150              		.cfi_def_cfa_offset 0
 6151 0018 7047     		bx	lr
 6152              		.cfi_endproc
 6153              	.LFE111:
 6154              		.size	GFXscrollDown, .-GFXscrollDown
 6155 001a 00BF     		.section	.text.GFXscrollLeft,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 130


 6156              		.align	2
 6157              		.global	GFXscrollLeft
 6158              		.thumb
 6159              		.thumb_func
 6160              		.type	GFXscrollLeft, %function
 6161              	GFXscrollLeft:
 6162              	.LFB112:
1084:gfx.c         ****         
1085:gfx.c         ****         void GFXscrollLeft(GFX* myGFX, uint8_t c, uint16_t color) {
 6163              		.loc 1 1085 0
 6164              		.cfi_startproc
 6165              		@ args = 0, pretend = 0, frame = 8
 6166              		@ frame_needed = 1, uses_anonymous_args = 0
 6167              		@ link register save eliminated.
 6168 0000 80B4     		push	{r7}
 6169              		.cfi_def_cfa_offset 4
 6170              		.cfi_offset 7, -4
 6171 0002 83B0     		sub	sp, sp, #12
 6172              		.cfi_def_cfa_offset 16
 6173 0004 00AF     		add	r7, sp, #0
 6174              		.cfi_def_cfa_register 7
 6175 0006 7860     		str	r0, [r7, #4]
 6176 0008 0B46     		mov	r3, r1
 6177 000a FB70     		strb	r3, [r7, #3]
 6178 000c 1346     		mov	r3, r2	@ movhi
 6179 000e 3B80     		strh	r3, [r7]	@ movhi
1086:gfx.c         ****             // map to logical orientation
1087:gfx.c         ****             ;
1088:gfx.c         ****         }
 6180              		.loc 1 1088 0
 6181 0010 00BF     		nop
 6182 0012 0C37     		adds	r7, r7, #12
 6183              		.cfi_def_cfa_offset 4
 6184 0014 BD46     		mov	sp, r7
 6185              		.cfi_def_cfa_register 13
 6186              		@ sp needed
 6187 0016 80BC     		pop	{r7}
 6188              		.cfi_restore 7
 6189              		.cfi_def_cfa_offset 0
 6190 0018 7047     		bx	lr
 6191              		.cfi_endproc
 6192              	.LFE112:
 6193              		.size	GFXscrollLeft, .-GFXscrollLeft
 6194 001a 00BF     		.section	.text.GFXscrollRight,"ax",%progbits
 6195              		.align	2
 6196              		.global	GFXscrollRight
 6197              		.thumb
 6198              		.thumb_func
 6199              		.type	GFXscrollRight, %function
 6200              	GFXscrollRight:
 6201              	.LFB113:
1089:gfx.c         ****         
1090:gfx.c         ****         void GFXscrollRight(GFX* myGFX, uint8_t c, uint16_t color) {
 6202              		.loc 1 1090 0
 6203              		.cfi_startproc
 6204              		@ args = 0, pretend = 0, frame = 8
 6205              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 131


 6206              		@ link register save eliminated.
 6207 0000 80B4     		push	{r7}
 6208              		.cfi_def_cfa_offset 4
 6209              		.cfi_offset 7, -4
 6210 0002 83B0     		sub	sp, sp, #12
 6211              		.cfi_def_cfa_offset 16
 6212 0004 00AF     		add	r7, sp, #0
 6213              		.cfi_def_cfa_register 7
 6214 0006 7860     		str	r0, [r7, #4]
 6215 0008 0B46     		mov	r3, r1
 6216 000a FB70     		strb	r3, [r7, #3]
 6217 000c 1346     		mov	r3, r2	@ movhi
 6218 000e 3B80     		strh	r3, [r7]	@ movhi
1091:gfx.c         ****             // map to logical orientation
1092:gfx.c         ****             ;
1093:gfx.c         ****         }
 6219              		.loc 1 1093 0
 6220 0010 00BF     		nop
 6221 0012 0C37     		adds	r7, r7, #12
 6222              		.cfi_def_cfa_offset 4
 6223 0014 BD46     		mov	sp, r7
 6224              		.cfi_def_cfa_register 13
 6225              		@ sp needed
 6226 0016 80BC     		pop	{r7}
 6227              		.cfi_restore 7
 6228              		.cfi_def_cfa_offset 0
 6229 0018 7047     		bx	lr
 6230              		.cfi_endproc
 6231              	.LFE113:
 6232              		.size	GFXscrollRight, .-GFXscrollRight
 6233 001a 00BF     		.text
 6234              	.Letext0:
 6235              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6236              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6237              		.file 4 "gfx_font.h"
 6238              		.file 5 "gfx.h"
 6239              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 6240              		.file 7 "ssd1306.h"
 6241              		.file 8 "<built-in>"
 6242              		.section	.debug_info,"",%progbits
 6243              	.Ldebug_info0:
 6244 0000 081B0000 		.4byte	0x1b08
 6245 0004 0400     		.2byte	0x4
 6246 0006 00000000 		.4byte	.Ldebug_abbrev0
 6247 000a 04       		.byte	0x4
 6248 000b 01       		.uleb128 0x1
 6249 000c BD000000 		.4byte	.LASF154
 6250 0010 0C       		.byte	0xc
 6251 0011 59040000 		.4byte	.LASF155
 6252 0015 B1020000 		.4byte	.LASF156
 6253 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6254 001d 00000000 		.4byte	0
 6255 0021 00000000 		.4byte	.Ldebug_line0
 6256 0025 02       		.uleb128 0x2
 6257 0026 4A040000 		.4byte	.LASF0
 6258 002a 02       		.byte	0x2
 6259 002b 1B       		.byte	0x1b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 132


 6260 002c 30000000 		.4byte	0x30
 6261 0030 03       		.uleb128 0x3
 6262 0031 01       		.byte	0x1
 6263 0032 06       		.byte	0x6
 6264 0033 C8060000 		.4byte	.LASF2
 6265 0037 02       		.uleb128 0x2
 6266 0038 3F050000 		.4byte	.LASF1
 6267 003c 02       		.byte	0x2
 6268 003d 1D       		.byte	0x1d
 6269 003e 42000000 		.4byte	0x42
 6270 0042 03       		.uleb128 0x3
 6271 0043 01       		.byte	0x1
 6272 0044 08       		.byte	0x8
 6273 0045 0E060000 		.4byte	.LASF3
 6274 0049 02       		.uleb128 0x2
 6275 004a D0030000 		.4byte	.LASF4
 6276 004e 02       		.byte	0x2
 6277 004f 29       		.byte	0x29
 6278 0050 54000000 		.4byte	0x54
 6279 0054 03       		.uleb128 0x3
 6280 0055 02       		.byte	0x2
 6281 0056 05       		.byte	0x5
 6282 0057 9D040000 		.4byte	.LASF5
 6283 005b 02       		.uleb128 0x2
 6284 005c 55020000 		.4byte	.LASF6
 6285 0060 02       		.byte	0x2
 6286 0061 2B       		.byte	0x2b
 6287 0062 66000000 		.4byte	0x66
 6288 0066 03       		.uleb128 0x3
 6289 0067 02       		.byte	0x2
 6290 0068 07       		.byte	0x7
 6291 0069 DA060000 		.4byte	.LASF7
 6292 006d 02       		.uleb128 0x2
 6293 006e A6000000 		.4byte	.LASF8
 6294 0072 02       		.byte	0x2
 6295 0073 3F       		.byte	0x3f
 6296 0074 78000000 		.4byte	0x78
 6297 0078 03       		.uleb128 0x3
 6298 0079 04       		.byte	0x4
 6299 007a 05       		.byte	0x5
 6300 007b A7040000 		.4byte	.LASF9
 6301 007f 02       		.uleb128 0x2
 6302 0080 23060000 		.4byte	.LASF10
 6303 0084 02       		.byte	0x2
 6304 0085 41       		.byte	0x41
 6305 0086 8A000000 		.4byte	0x8a
 6306 008a 03       		.uleb128 0x3
 6307 008b 04       		.byte	0x4
 6308 008c 07       		.byte	0x7
 6309 008d 8B050000 		.4byte	.LASF11
 6310 0091 03       		.uleb128 0x3
 6311 0092 08       		.byte	0x8
 6312 0093 05       		.byte	0x5
 6313 0094 AA030000 		.4byte	.LASF12
 6314 0098 03       		.uleb128 0x3
 6315 0099 08       		.byte	0x8
 6316 009a 07       		.byte	0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 133


 6317 009b 00020000 		.4byte	.LASF13
 6318 009f 04       		.uleb128 0x4
 6319 00a0 04       		.byte	0x4
 6320 00a1 05       		.byte	0x5
 6321 00a2 696E7400 		.ascii	"int\000"
 6322 00a6 03       		.uleb128 0x3
 6323 00a7 04       		.byte	0x4
 6324 00a8 07       		.byte	0x7
 6325 00a9 94000000 		.4byte	.LASF14
 6326 00ad 02       		.uleb128 0x2
 6327 00ae A5010000 		.4byte	.LASF15
 6328 00b2 03       		.byte	0x3
 6329 00b3 14       		.byte	0x14
 6330 00b4 25000000 		.4byte	0x25
 6331 00b8 02       		.uleb128 0x2
 6332 00b9 5B030000 		.4byte	.LASF16
 6333 00bd 03       		.byte	0x3
 6334 00be 18       		.byte	0x18
 6335 00bf 37000000 		.4byte	0x37
 6336 00c3 02       		.uleb128 0x2
 6337 00c4 F8010000 		.4byte	.LASF17
 6338 00c8 03       		.byte	0x3
 6339 00c9 20       		.byte	0x20
 6340 00ca 49000000 		.4byte	0x49
 6341 00ce 02       		.uleb128 0x2
 6342 00cf 6B040000 		.4byte	.LASF18
 6343 00d3 03       		.byte	0x3
 6344 00d4 24       		.byte	0x24
 6345 00d5 5B000000 		.4byte	0x5b
 6346 00d9 02       		.uleb128 0x2
 6347 00da DC050000 		.4byte	.LASF19
 6348 00de 03       		.byte	0x3
 6349 00df 2C       		.byte	0x2c
 6350 00e0 6D000000 		.4byte	0x6d
 6351 00e4 02       		.uleb128 0x2
 6352 00e5 9C010000 		.4byte	.LASF20
 6353 00e9 03       		.byte	0x3
 6354 00ea 30       		.byte	0x30
 6355 00eb 7F000000 		.4byte	0x7f
 6356 00ef 05       		.uleb128 0x5
 6357 00f0 08       		.byte	0x8
 6358 00f1 04       		.byte	0x4
 6359 00f2 0C       		.byte	0xc
 6360 00f3 40010000 		.4byte	0x140
 6361 00f7 06       		.uleb128 0x6
 6362 00f8 80020000 		.4byte	.LASF21
 6363 00fc 04       		.byte	0x4
 6364 00fd 0D       		.byte	0xd
 6365 00fe CE000000 		.4byte	0xce
 6366 0102 00       		.byte	0
 6367 0103 06       		.uleb128 0x6
 6368 0104 99020000 		.4byte	.LASF22
 6369 0108 04       		.byte	0x4
 6370 0109 0E       		.byte	0xe
 6371 010a B8000000 		.4byte	0xb8
 6372 010e 02       		.byte	0x2
 6373 010f 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 134


 6374 0110 34040000 		.4byte	.LASF23
 6375 0114 04       		.byte	0x4
 6376 0115 0E       		.byte	0xe
 6377 0116 B8000000 		.4byte	0xb8
 6378 011a 03       		.byte	0x3
 6379 011b 06       		.uleb128 0x6
 6380 011c 8E060000 		.4byte	.LASF24
 6381 0120 04       		.byte	0x4
 6382 0121 0F       		.byte	0xf
 6383 0122 B8000000 		.4byte	0xb8
 6384 0126 04       		.byte	0x4
 6385 0127 06       		.uleb128 0x6
 6386 0128 A9060000 		.4byte	.LASF25
 6387 012c 04       		.byte	0x4
 6388 012d 10       		.byte	0x10
 6389 012e AD000000 		.4byte	0xad
 6390 0132 05       		.byte	0x5
 6391 0133 06       		.uleb128 0x6
 6392 0134 63030000 		.4byte	.LASF26
 6393 0138 04       		.byte	0x4
 6394 0139 10       		.byte	0x10
 6395 013a AD000000 		.4byte	0xad
 6396 013e 06       		.byte	0x6
 6397 013f 00       		.byte	0
 6398 0140 02       		.uleb128 0x2
 6399 0141 37030000 		.4byte	.LASF27
 6400 0145 04       		.byte	0x4
 6401 0146 11       		.byte	0x11
 6402 0147 EF000000 		.4byte	0xef
 6403 014b 05       		.uleb128 0x5
 6404 014c 0C       		.byte	0xc
 6405 014d 04       		.byte	0x4
 6406 014e 13       		.byte	0x13
 6407 014f 90010000 		.4byte	0x190
 6408 0153 06       		.uleb128 0x6
 6409 0154 1C060000 		.4byte	.LASF28
 6410 0158 04       		.byte	0x4
 6411 0159 14       		.byte	0x14
 6412 015a 90010000 		.4byte	0x190
 6413 015e 00       		.byte	0
 6414 015f 06       		.uleb128 0x6
 6415 0160 E4050000 		.4byte	.LASF29
 6416 0164 04       		.byte	0x4
 6417 0165 15       		.byte	0x15
 6418 0166 96010000 		.4byte	0x196
 6419 016a 04       		.byte	0x4
 6420 016b 06       		.uleb128 0x6
 6421 016c 62060000 		.4byte	.LASF30
 6422 0170 04       		.byte	0x4
 6423 0171 16       		.byte	0x16
 6424 0172 B8000000 		.4byte	0xb8
 6425 0176 08       		.byte	0x8
 6426 0177 06       		.uleb128 0x6
 6427 0178 0E000000 		.4byte	.LASF31
 6428 017c 04       		.byte	0x4
 6429 017d 16       		.byte	0x16
 6430 017e B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 135


 6431 0182 09       		.byte	0x9
 6432 0183 06       		.uleb128 0x6
 6433 0184 4C020000 		.4byte	.LASF32
 6434 0188 04       		.byte	0x4
 6435 0189 17       		.byte	0x17
 6436 018a B8000000 		.4byte	0xb8
 6437 018e 0A       		.byte	0xa
 6438 018f 00       		.byte	0
 6439 0190 07       		.uleb128 0x7
 6440 0191 04       		.byte	0x4
 6441 0192 B8000000 		.4byte	0xb8
 6442 0196 07       		.uleb128 0x7
 6443 0197 04       		.byte	0x4
 6444 0198 40010000 		.4byte	0x140
 6445 019c 02       		.uleb128 0x2
 6446 019d 1D000000 		.4byte	.LASF33
 6447 01a1 04       		.byte	0x4
 6448 01a2 18       		.byte	0x18
 6449 01a3 4B010000 		.4byte	0x14b
 6450 01a7 03       		.uleb128 0x3
 6451 01a8 04       		.byte	0x4
 6452 01a9 04       		.byte	0x4
 6453 01aa C9010000 		.4byte	.LASF34
 6454 01ae 03       		.uleb128 0x3
 6455 01af 08       		.byte	0x8
 6456 01b0 04       		.byte	0x4
 6457 01b1 00070000 		.4byte	.LASF35
 6458 01b5 03       		.uleb128 0x3
 6459 01b6 01       		.byte	0x1
 6460 01b7 08       		.byte	0x8
 6461 01b8 32030000 		.4byte	.LASF36
 6462 01bc 03       		.uleb128 0x3
 6463 01bd 08       		.byte	0x8
 6464 01be 04       		.byte	0x4
 6465 01bf 5F040000 		.4byte	.LASF37
 6466 01c3 03       		.uleb128 0x3
 6467 01c4 04       		.byte	0x4
 6468 01c5 07       		.byte	0x7
 6469 01c6 82050000 		.4byte	.LASF38
 6470 01ca 07       		.uleb128 0x7
 6471 01cb 04       		.byte	0x4
 6472 01cc B5010000 		.4byte	0x1b5
 6473 01d0 08       		.uleb128 0x8
 6474 01d1 C4010000 		.4byte	.LASF157
 6475 01d5 24       		.byte	0x24
 6476 01d6 05       		.byte	0x5
 6477 01d7 1C       		.byte	0x1c
 6478 01d8 9D020000 		.4byte	0x29d
 6479 01dc 06       		.uleb128 0x6
 6480 01dd 7A020000 		.4byte	.LASF39
 6481 01e1 05       		.byte	0x5
 6482 01e2 1E       		.byte	0x1e
 6483 01e3 C3000000 		.4byte	0xc3
 6484 01e7 00       		.byte	0
 6485 01e8 06       		.uleb128 0x6
 6486 01e9 95010000 		.4byte	.LASF40
 6487 01ed 05       		.byte	0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 136


 6488 01ee 1F       		.byte	0x1f
 6489 01ef C3000000 		.4byte	0xc3
 6490 01f3 02       		.byte	0x2
 6491 01f4 06       		.uleb128 0x6
 6492 01f5 6B030000 		.4byte	.LASF41
 6493 01f9 05       		.byte	0x5
 6494 01fa 20       		.byte	0x20
 6495 01fb CE000000 		.4byte	0xce
 6496 01ff 04       		.byte	0x4
 6497 0200 06       		.uleb128 0x6
 6498 0201 DA030000 		.4byte	.LASF42
 6499 0205 05       		.byte	0x5
 6500 0206 21       		.byte	0x21
 6501 0207 CE000000 		.4byte	0xce
 6502 020b 06       		.byte	0x6
 6503 020c 06       		.uleb128 0x6
 6504 020d 7A010000 		.4byte	.LASF43
 6505 0211 05       		.byte	0x5
 6506 0212 22       		.byte	0x22
 6507 0213 CE000000 		.4byte	0xce
 6508 0217 08       		.byte	0x8
 6509 0218 06       		.uleb128 0x6
 6510 0219 E6010000 		.4byte	.LASF44
 6511 021d 05       		.byte	0x5
 6512 021e 23       		.byte	0x23
 6513 021f CE000000 		.4byte	0xce
 6514 0223 0A       		.byte	0xa
 6515 0224 06       		.uleb128 0x6
 6516 0225 DD010000 		.4byte	.LASF45
 6517 0229 05       		.byte	0x5
 6518 022a 24       		.byte	0x24
 6519 022b CE000000 		.4byte	0xce
 6520 022f 0C       		.byte	0xc
 6521 0230 06       		.uleb128 0x6
 6522 0231 EF010000 		.4byte	.LASF46
 6523 0235 05       		.byte	0x5
 6524 0236 25       		.byte	0x25
 6525 0237 CE000000 		.4byte	0xce
 6526 023b 0E       		.byte	0xe
 6527 023c 06       		.uleb128 0x6
 6528 023d 07070000 		.4byte	.LASF47
 6529 0241 05       		.byte	0x5
 6530 0242 26       		.byte	0x26
 6531 0243 CE000000 		.4byte	0xce
 6532 0247 10       		.byte	0x10
 6533 0248 06       		.uleb128 0x6
 6534 0249 3D070000 		.4byte	.LASF48
 6535 024d 05       		.byte	0x5
 6536 024e 27       		.byte	0x27
 6537 024f CE000000 		.4byte	0xce
 6538 0253 12       		.byte	0x12
 6539 0254 06       		.uleb128 0x6
 6540 0255 A1000000 		.4byte	.LASF49
 6541 0259 05       		.byte	0x5
 6542 025a 28       		.byte	0x28
 6543 025b CE000000 		.4byte	0xce
 6544 025f 14       		.byte	0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 137


 6545 0260 06       		.uleb128 0x6
 6546 0261 50010000 		.4byte	.LASF50
 6547 0265 05       		.byte	0x5
 6548 0266 29       		.byte	0x29
 6549 0267 CE000000 		.4byte	0xce
 6550 026b 16       		.byte	0x16
 6551 026c 06       		.uleb128 0x6
 6552 026d 7A050000 		.4byte	.LASF51
 6553 0271 05       		.byte	0x5
 6554 0272 2A       		.byte	0x2a
 6555 0273 9D020000 		.4byte	0x29d
 6556 0277 18       		.byte	0x18
 6557 0278 06       		.uleb128 0x6
 6558 0279 E2040000 		.4byte	.LASF52
 6559 027d 05       		.byte	0x5
 6560 027e 2B       		.byte	0x2b
 6561 027f CE000000 		.4byte	0xce
 6562 0283 1C       		.byte	0x1c
 6563 0284 06       		.uleb128 0x6
 6564 0285 B8030000 		.4byte	.LASF53
 6565 0289 05       		.byte	0x5
 6566 028a 2C       		.byte	0x2c
 6567 028b CE000000 		.4byte	0xce
 6568 028f 1E       		.byte	0x1e
 6569 0290 06       		.uleb128 0x6
 6570 0291 B1060000 		.4byte	.LASF54
 6571 0295 05       		.byte	0x5
 6572 0296 2D       		.byte	0x2d
 6573 0297 CE000000 		.4byte	0xce
 6574 029b 20       		.byte	0x20
 6575 029c 00       		.byte	0
 6576 029d 07       		.uleb128 0x7
 6577 029e 04       		.byte	0x4
 6578 029f 9C010000 		.4byte	0x19c
 6579 02a3 09       		.uleb128 0x9
 6580 02a4 47465800 		.ascii	"GFX\000"
 6581 02a8 05       		.byte	0x5
 6582 02a9 2E       		.byte	0x2e
 6583 02aa D0010000 		.4byte	0x1d0
 6584 02ae 0A       		.uleb128 0xa
 6585 02af 2B000000 		.4byte	.LASF56
 6586 02b3 01       		.byte	0x1
 6587 02b4 4D       		.byte	0x4d
 6588 02b5 00000000 		.4byte	.LFB64
 6589 02b9 7E000000 		.4byte	.LFE64-.LFB64
 6590 02bd 01       		.uleb128 0x1
 6591 02be 9C       		.byte	0x9c
 6592 02bf EA020000 		.4byte	0x2ea
 6593 02c3 0B       		.uleb128 0xb
 6594 02c4 39050000 		.4byte	.LASF55
 6595 02c8 01       		.byte	0x1
 6596 02c9 4D       		.byte	0x4d
 6597 02ca EA020000 		.4byte	0x2ea
 6598 02ce 02       		.uleb128 0x2
 6599 02cf 91       		.byte	0x91
 6600 02d0 74       		.sleb128 -12
 6601 02d1 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 138


 6602 02d2 7700     		.ascii	"w\000"
 6603 02d4 01       		.byte	0x1
 6604 02d5 4D       		.byte	0x4d
 6605 02d6 C3000000 		.4byte	0xc3
 6606 02da 02       		.uleb128 0x2
 6607 02db 91       		.byte	0x91
 6608 02dc 72       		.sleb128 -14
 6609 02dd 0C       		.uleb128 0xc
 6610 02de 6800     		.ascii	"h\000"
 6611 02e0 01       		.byte	0x1
 6612 02e1 4D       		.byte	0x4d
 6613 02e2 C3000000 		.4byte	0xc3
 6614 02e6 02       		.uleb128 0x2
 6615 02e7 91       		.byte	0x91
 6616 02e8 70       		.sleb128 -16
 6617 02e9 00       		.byte	0
 6618 02ea 07       		.uleb128 0x7
 6619 02eb 04       		.byte	0x4
 6620 02ec A3020000 		.4byte	0x2a3
 6621 02f0 0D       		.uleb128 0xd
 6622 02f1 2E060000 		.4byte	.LASF57
 6623 02f5 01       		.byte	0x1
 6624 02f6 62       		.byte	0x62
 6625 02f7 00000000 		.4byte	.LFB65
 6626 02fb 3E010000 		.4byte	.LFE65-.LFB65
 6627 02ff 01       		.uleb128 0x1
 6628 0300 9C       		.byte	0x9c
 6629 0301 0F040000 		.4byte	0x40f
 6630 0305 0B       		.uleb128 0xb
 6631 0306 53040000 		.4byte	.LASF58
 6632 030a 01       		.byte	0x1
 6633 030b 62       		.byte	0x62
 6634 030c EA020000 		.4byte	0x2ea
 6635 0310 02       		.uleb128 0x2
 6636 0311 91       		.byte	0x91
 6637 0312 5C       		.sleb128 -36
 6638 0313 0C       		.uleb128 0xc
 6639 0314 783000   		.ascii	"x0\000"
 6640 0317 01       		.byte	0x1
 6641 0318 62       		.byte	0x62
 6642 0319 C3000000 		.4byte	0xc3
 6643 031d 02       		.uleb128 0x2
 6644 031e 91       		.byte	0x91
 6645 031f 5A       		.sleb128 -38
 6646 0320 0C       		.uleb128 0xc
 6647 0321 793000   		.ascii	"y0\000"
 6648 0324 01       		.byte	0x1
 6649 0325 62       		.byte	0x62
 6650 0326 C3000000 		.4byte	0xc3
 6651 032a 02       		.uleb128 0x2
 6652 032b 91       		.byte	0x91
 6653 032c 58       		.sleb128 -40
 6654 032d 0C       		.uleb128 0xc
 6655 032e 783100   		.ascii	"x1\000"
 6656 0331 01       		.byte	0x1
 6657 0332 62       		.byte	0x62
 6658 0333 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 139


 6659 0337 02       		.uleb128 0x2
 6660 0338 91       		.byte	0x91
 6661 0339 56       		.sleb128 -42
 6662 033a 0C       		.uleb128 0xc
 6663 033b 793100   		.ascii	"y1\000"
 6664 033e 01       		.byte	0x1
 6665 033f 62       		.byte	0x62
 6666 0340 C3000000 		.4byte	0xc3
 6667 0344 02       		.uleb128 0x2
 6668 0345 91       		.byte	0x91
 6669 0346 00       		.sleb128 0
 6670 0347 0B       		.uleb128 0xb
 6671 0348 28050000 		.4byte	.LASF59
 6672 034c 01       		.byte	0x1
 6673 034d 63       		.byte	0x63
 6674 034e CE000000 		.4byte	0xce
 6675 0352 02       		.uleb128 0x2
 6676 0353 91       		.byte	0x91
 6677 0354 04       		.sleb128 4
 6678 0355 0E       		.uleb128 0xe
 6679 0356 98030000 		.4byte	.LASF60
 6680 035a 01       		.byte	0x1
 6681 035b 64       		.byte	0x64
 6682 035c C3000000 		.4byte	0xc3
 6683 0360 02       		.uleb128 0x2
 6684 0361 91       		.byte	0x91
 6685 0362 72       		.sleb128 -14
 6686 0363 0F       		.uleb128 0xf
 6687 0364 61627300 		.ascii	"abs\000"
 6688 0368 08       		.byte	0x8
 6689 0369 00       		.byte	0
 6690 036a 9F000000 		.4byte	0x9f
 6691 036e 74030000 		.4byte	0x374
 6692 0372 10       		.uleb128 0x10
 6693 0373 00       		.byte	0
 6694 0374 11       		.uleb128 0x11
 6695 0375 647800   		.ascii	"dx\000"
 6696 0378 01       		.byte	0x1
 6697 0379 6F       		.byte	0x6f
 6698 037a C3000000 		.4byte	0xc3
 6699 037e 02       		.uleb128 0x2
 6700 037f 91       		.byte	0x91
 6701 0380 68       		.sleb128 -24
 6702 0381 11       		.uleb128 0x11
 6703 0382 647900   		.ascii	"dy\000"
 6704 0385 01       		.byte	0x1
 6705 0386 6F       		.byte	0x6f
 6706 0387 C3000000 		.4byte	0xc3
 6707 038b 02       		.uleb128 0x2
 6708 038c 91       		.byte	0x91
 6709 038d 66       		.sleb128 -26
 6710 038e 11       		.uleb128 0x11
 6711 038f 65727200 		.ascii	"err\000"
 6712 0393 01       		.byte	0x1
 6713 0394 73       		.byte	0x73
 6714 0395 C3000000 		.4byte	0xc3
 6715 0399 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 140


 6716 039a 91       		.byte	0x91
 6717 039b 76       		.sleb128 -10
 6718 039c 0E       		.uleb128 0xe
 6719 039d 4E050000 		.4byte	.LASF61
 6720 03a1 01       		.byte	0x1
 6721 03a2 74       		.byte	0x74
 6722 03a3 C3000000 		.4byte	0xc3
 6723 03a7 02       		.uleb128 0x2
 6724 03a8 91       		.byte	0x91
 6725 03a9 74       		.sleb128 -12
 6726 03aa 12       		.uleb128 0x12
 6727 03ab 50000000 		.4byte	.LBB2
 6728 03af 0C000000 		.4byte	.LBE2-.LBB2
 6729 03b3 C4030000 		.4byte	0x3c4
 6730 03b7 11       		.uleb128 0x11
 6731 03b8 7400     		.ascii	"t\000"
 6732 03ba 01       		.byte	0x1
 6733 03bb 66       		.byte	0x66
 6734 03bc C3000000 		.4byte	0xc3
 6735 03c0 02       		.uleb128 0x2
 6736 03c1 91       		.byte	0x91
 6737 03c2 70       		.sleb128 -16
 6738 03c3 00       		.byte	0
 6739 03c4 12       		.uleb128 0x12
 6740 03c5 5C000000 		.4byte	.LBB3
 6741 03c9 0C000000 		.4byte	.LBE3-.LBB3
 6742 03cd DE030000 		.4byte	0x3de
 6743 03d1 11       		.uleb128 0x11
 6744 03d2 7400     		.ascii	"t\000"
 6745 03d4 01       		.byte	0x1
 6746 03d5 67       		.byte	0x67
 6747 03d6 C3000000 		.4byte	0xc3
 6748 03da 02       		.uleb128 0x2
 6749 03db 91       		.byte	0x91
 6750 03dc 6E       		.sleb128 -18
 6751 03dd 00       		.byte	0
 6752 03de 12       		.uleb128 0x12
 6753 03df 74000000 		.4byte	.LBB4
 6754 03e3 0C000000 		.4byte	.LBE4-.LBB4
 6755 03e7 F8030000 		.4byte	0x3f8
 6756 03eb 11       		.uleb128 0x11
 6757 03ec 7400     		.ascii	"t\000"
 6758 03ee 01       		.byte	0x1
 6759 03ef 6B       		.byte	0x6b
 6760 03f0 C3000000 		.4byte	0xc3
 6761 03f4 02       		.uleb128 0x2
 6762 03f5 91       		.byte	0x91
 6763 03f6 6C       		.sleb128 -20
 6764 03f7 00       		.byte	0
 6765 03f8 13       		.uleb128 0x13
 6766 03f9 80000000 		.4byte	.LBB5
 6767 03fd 0C000000 		.4byte	.LBE5-.LBB5
 6768 0401 11       		.uleb128 0x11
 6769 0402 7400     		.ascii	"t\000"
 6770 0404 01       		.byte	0x1
 6771 0405 6C       		.byte	0x6c
 6772 0406 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 141


 6773 040a 02       		.uleb128 0x2
 6774 040b 91       		.byte	0x91
 6775 040c 6A       		.sleb128 -22
 6776 040d 00       		.byte	0
 6777 040e 00       		.byte	0
 6778 040f 0A       		.uleb128 0xa
 6779 0410 BE040000 		.4byte	.LASF62
 6780 0414 01       		.byte	0x1
 6781 0415 8A       		.byte	0x8a
 6782 0416 00000000 		.4byte	.LFB66
 6783 041a 12000000 		.4byte	.LFE66-.LFB66
 6784 041e 01       		.uleb128 0x1
 6785 041f 9C       		.byte	0x9c
 6786 0420 33040000 		.4byte	0x433
 6787 0424 0B       		.uleb128 0xb
 6788 0425 53040000 		.4byte	.LASF58
 6789 0429 01       		.byte	0x1
 6790 042a 8A       		.byte	0x8a
 6791 042b EA020000 		.4byte	0x2ea
 6792 042f 02       		.uleb128 0x2
 6793 0430 91       		.byte	0x91
 6794 0431 74       		.sleb128 -12
 6795 0432 00       		.byte	0
 6796 0433 0D       		.uleb128 0xd
 6797 0434 B0000000 		.4byte	.LASF63
 6798 0438 01       		.byte	0x1
 6799 0439 8F       		.byte	0x8f
 6800 043a 00000000 		.4byte	.LFB67
 6801 043e E0010000 		.4byte	.LFE67-.LFB67
 6802 0442 01       		.uleb128 0x1
 6803 0443 9C       		.byte	0x9c
 6804 0444 AD040000 		.4byte	0x4ad
 6805 0448 0B       		.uleb128 0xb
 6806 0449 53040000 		.4byte	.LASF58
 6807 044d 01       		.byte	0x1
 6808 044e 8F       		.byte	0x8f
 6809 044f EA020000 		.4byte	0x2ea
 6810 0453 02       		.uleb128 0x2
 6811 0454 91       		.byte	0x91
 6812 0455 6C       		.sleb128 -20
 6813 0456 0C       		.uleb128 0xc
 6814 0457 7800     		.ascii	"x\000"
 6815 0459 01       		.byte	0x1
 6816 045a 8F       		.byte	0x8f
 6817 045b C3000000 		.4byte	0xc3
 6818 045f 02       		.uleb128 0x2
 6819 0460 91       		.byte	0x91
 6820 0461 6A       		.sleb128 -22
 6821 0462 0C       		.uleb128 0xc
 6822 0463 7900     		.ascii	"y\000"
 6823 0465 01       		.byte	0x1
 6824 0466 8F       		.byte	0x8f
 6825 0467 C3000000 		.4byte	0xc3
 6826 046b 02       		.uleb128 0x2
 6827 046c 91       		.byte	0x91
 6828 046d 68       		.sleb128 -24
 6829 046e 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 142


 6830 046f 28050000 		.4byte	.LASF59
 6831 0473 01       		.byte	0x1
 6832 0474 8F       		.byte	0x8f
 6833 0475 CE000000 		.4byte	0xce
 6834 0479 02       		.uleb128 0x2
 6835 047a 91       		.byte	0x91
 6836 047b 66       		.sleb128 -26
 6837 047c 12       		.uleb128 0x12
 6838 047d 5E000000 		.4byte	.LBB6
 6839 0481 0C000000 		.4byte	.LBE6-.LBB6
 6840 0485 96040000 		.4byte	0x496
 6841 0489 11       		.uleb128 0x11
 6842 048a 7400     		.ascii	"t\000"
 6843 048c 01       		.byte	0x1
 6844 048d 96       		.byte	0x96
 6845 048e C3000000 		.4byte	0xc3
 6846 0492 02       		.uleb128 0x2
 6847 0493 91       		.byte	0x91
 6848 0494 76       		.sleb128 -10
 6849 0495 00       		.byte	0
 6850 0496 13       		.uleb128 0x13
 6851 0497 AA000000 		.4byte	.LBB7
 6852 049b 0C000000 		.4byte	.LBE7-.LBB7
 6853 049f 11       		.uleb128 0x11
 6854 04a0 7400     		.ascii	"t\000"
 6855 04a2 01       		.byte	0x1
 6856 04a3 9E       		.byte	0x9e
 6857 04a4 C3000000 		.4byte	0xc3
 6858 04a8 02       		.uleb128 0x2
 6859 04a9 91       		.byte	0x91
 6860 04aa 74       		.sleb128 -12
 6861 04ab 00       		.byte	0
 6862 04ac 00       		.byte	0
 6863 04ad 0D       		.uleb128 0xd
 6864 04ae AD050000 		.4byte	.LASF64
 6865 04b2 01       		.byte	0x1
 6866 04b3 AD       		.byte	0xad
 6867 04b4 00000000 		.4byte	.LFB68
 6868 04b8 32000000 		.4byte	.LFE68-.LFB68
 6869 04bc 01       		.uleb128 0x1
 6870 04bd 9C       		.byte	0x9c
 6871 04be F7040000 		.4byte	0x4f7
 6872 04c2 0B       		.uleb128 0xb
 6873 04c3 53040000 		.4byte	.LASF58
 6874 04c7 01       		.byte	0x1
 6875 04c8 AD       		.byte	0xad
 6876 04c9 EA020000 		.4byte	0x2ea
 6877 04cd 02       		.uleb128 0x2
 6878 04ce 91       		.byte	0x91
 6879 04cf 74       		.sleb128 -12
 6880 04d0 0C       		.uleb128 0xc
 6881 04d1 7800     		.ascii	"x\000"
 6882 04d3 01       		.byte	0x1
 6883 04d4 AD       		.byte	0xad
 6884 04d5 C3000000 		.4byte	0xc3
 6885 04d9 02       		.uleb128 0x2
 6886 04da 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 143


 6887 04db 72       		.sleb128 -14
 6888 04dc 0C       		.uleb128 0xc
 6889 04dd 7900     		.ascii	"y\000"
 6890 04df 01       		.byte	0x1
 6891 04e0 AD       		.byte	0xad
 6892 04e1 C3000000 		.4byte	0xc3
 6893 04e5 02       		.uleb128 0x2
 6894 04e6 91       		.byte	0x91
 6895 04e7 70       		.sleb128 -16
 6896 04e8 0B       		.uleb128 0xb
 6897 04e9 28050000 		.4byte	.LASF59
 6898 04ed 01       		.byte	0x1
 6899 04ee AD       		.byte	0xad
 6900 04ef CE000000 		.4byte	0xce
 6901 04f3 02       		.uleb128 0x2
 6902 04f4 91       		.byte	0x91
 6903 04f5 6E       		.sleb128 -18
 6904 04f6 00       		.byte	0
 6905 04f7 0D       		.uleb128 0xd
 6906 04f8 2F020000 		.4byte	.LASF65
 6907 04fc 01       		.byte	0x1
 6908 04fd B4       		.byte	0xb4
 6909 04fe 00000000 		.4byte	.LFB69
 6910 0502 3A000000 		.4byte	.LFE69-.LFB69
 6911 0506 01       		.uleb128 0x1
 6912 0507 9C       		.byte	0x9c
 6913 0508 4D050000 		.4byte	0x54d
 6914 050c 0B       		.uleb128 0xb
 6915 050d 53040000 		.4byte	.LASF58
 6916 0511 01       		.byte	0x1
 6917 0512 B4       		.byte	0xb4
 6918 0513 EA020000 		.4byte	0x2ea
 6919 0517 02       		.uleb128 0x2
 6920 0518 91       		.byte	0x91
 6921 0519 74       		.sleb128 -12
 6922 051a 0C       		.uleb128 0xc
 6923 051b 7800     		.ascii	"x\000"
 6924 051d 01       		.byte	0x1
 6925 051e B4       		.byte	0xb4
 6926 051f C3000000 		.4byte	0xc3
 6927 0523 02       		.uleb128 0x2
 6928 0524 91       		.byte	0x91
 6929 0525 72       		.sleb128 -14
 6930 0526 0C       		.uleb128 0xc
 6931 0527 7900     		.ascii	"y\000"
 6932 0529 01       		.byte	0x1
 6933 052a B4       		.byte	0xb4
 6934 052b C3000000 		.4byte	0xc3
 6935 052f 02       		.uleb128 0x2
 6936 0530 91       		.byte	0x91
 6937 0531 70       		.sleb128 -16
 6938 0532 0C       		.uleb128 0xc
 6939 0533 6800     		.ascii	"h\000"
 6940 0535 01       		.byte	0x1
 6941 0536 B5       		.byte	0xb5
 6942 0537 C3000000 		.4byte	0xc3
 6943 053b 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 144


 6944 053c 91       		.byte	0x91
 6945 053d 6E       		.sleb128 -18
 6946 053e 0B       		.uleb128 0xb
 6947 053f 28050000 		.4byte	.LASF59
 6948 0543 01       		.byte	0x1
 6949 0544 B5       		.byte	0xb5
 6950 0545 CE000000 		.4byte	0xce
 6951 0549 02       		.uleb128 0x2
 6952 054a 91       		.byte	0x91
 6953 054b 00       		.sleb128 0
 6954 054c 00       		.byte	0
 6955 054d 0D       		.uleb128 0xd
 6956 054e 68010000 		.4byte	.LASF66
 6957 0552 01       		.byte	0x1
 6958 0553 BE       		.byte	0xbe
 6959 0554 00000000 		.4byte	.LFB70
 6960 0558 3A000000 		.4byte	.LFE70-.LFB70
 6961 055c 01       		.uleb128 0x1
 6962 055d 9C       		.byte	0x9c
 6963 055e A3050000 		.4byte	0x5a3
 6964 0562 0B       		.uleb128 0xb
 6965 0563 53040000 		.4byte	.LASF58
 6966 0567 01       		.byte	0x1
 6967 0568 BE       		.byte	0xbe
 6968 0569 EA020000 		.4byte	0x2ea
 6969 056d 02       		.uleb128 0x2
 6970 056e 91       		.byte	0x91
 6971 056f 74       		.sleb128 -12
 6972 0570 0C       		.uleb128 0xc
 6973 0571 7800     		.ascii	"x\000"
 6974 0573 01       		.byte	0x1
 6975 0574 BE       		.byte	0xbe
 6976 0575 C3000000 		.4byte	0xc3
 6977 0579 02       		.uleb128 0x2
 6978 057a 91       		.byte	0x91
 6979 057b 72       		.sleb128 -14
 6980 057c 0C       		.uleb128 0xc
 6981 057d 7900     		.ascii	"y\000"
 6982 057f 01       		.byte	0x1
 6983 0580 BE       		.byte	0xbe
 6984 0581 C3000000 		.4byte	0xc3
 6985 0585 02       		.uleb128 0x2
 6986 0586 91       		.byte	0x91
 6987 0587 70       		.sleb128 -16
 6988 0588 0C       		.uleb128 0xc
 6989 0589 7700     		.ascii	"w\000"
 6990 058b 01       		.byte	0x1
 6991 058c BF       		.byte	0xbf
 6992 058d C3000000 		.4byte	0xc3
 6993 0591 02       		.uleb128 0x2
 6994 0592 91       		.byte	0x91
 6995 0593 6E       		.sleb128 -18
 6996 0594 0B       		.uleb128 0xb
 6997 0595 28050000 		.4byte	.LASF59
 6998 0599 01       		.byte	0x1
 6999 059a BF       		.byte	0xbf
 7000 059b CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 145


 7001 059f 02       		.uleb128 0x2
 7002 05a0 91       		.byte	0x91
 7003 05a1 00       		.sleb128 0
 7004 05a2 00       		.byte	0
 7005 05a3 0D       		.uleb128 0xd
 7006 05a4 17050000 		.4byte	.LASF67
 7007 05a8 01       		.byte	0x1
 7008 05a9 C6       		.byte	0xc6
 7009 05aa 00000000 		.4byte	.LFB71
 7010 05ae 40000000 		.4byte	.LFE71-.LFB71
 7011 05b2 01       		.uleb128 0x1
 7012 05b3 9C       		.byte	0x9c
 7013 05b4 05060000 		.4byte	0x605
 7014 05b8 0B       		.uleb128 0xb
 7015 05b9 53040000 		.4byte	.LASF58
 7016 05bd 01       		.byte	0x1
 7017 05be C6       		.byte	0xc6
 7018 05bf EA020000 		.4byte	0x2ea
 7019 05c3 02       		.uleb128 0x2
 7020 05c4 91       		.byte	0x91
 7021 05c5 74       		.sleb128 -12
 7022 05c6 0C       		.uleb128 0xc
 7023 05c7 7800     		.ascii	"x\000"
 7024 05c9 01       		.byte	0x1
 7025 05ca C6       		.byte	0xc6
 7026 05cb C3000000 		.4byte	0xc3
 7027 05cf 02       		.uleb128 0x2
 7028 05d0 91       		.byte	0x91
 7029 05d1 72       		.sleb128 -14
 7030 05d2 0C       		.uleb128 0xc
 7031 05d3 7900     		.ascii	"y\000"
 7032 05d5 01       		.byte	0x1
 7033 05d6 C6       		.byte	0xc6
 7034 05d7 C3000000 		.4byte	0xc3
 7035 05db 02       		.uleb128 0x2
 7036 05dc 91       		.byte	0x91
 7037 05dd 70       		.sleb128 -16
 7038 05de 0C       		.uleb128 0xc
 7039 05df 7700     		.ascii	"w\000"
 7040 05e1 01       		.byte	0x1
 7041 05e2 C6       		.byte	0xc6
 7042 05e3 C3000000 		.4byte	0xc3
 7043 05e7 02       		.uleb128 0x2
 7044 05e8 91       		.byte	0x91
 7045 05e9 6E       		.sleb128 -18
 7046 05ea 0C       		.uleb128 0xc
 7047 05eb 6800     		.ascii	"h\000"
 7048 05ed 01       		.byte	0x1
 7049 05ee C6       		.byte	0xc6
 7050 05ef C3000000 		.4byte	0xc3
 7051 05f3 02       		.uleb128 0x2
 7052 05f4 91       		.byte	0x91
 7053 05f5 00       		.sleb128 0
 7054 05f6 0B       		.uleb128 0xb
 7055 05f7 28050000 		.4byte	.LASF59
 7056 05fb 01       		.byte	0x1
 7057 05fc C7       		.byte	0xc7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 146


 7058 05fd CE000000 		.4byte	0xce
 7059 0601 02       		.uleb128 0x2
 7060 0602 91       		.byte	0x91
 7061 0603 04       		.sleb128 4
 7062 0604 00       		.byte	0
 7063 0605 0A       		.uleb128 0xa
 7064 0606 02060000 		.4byte	.LASF68
 7065 060a 01       		.byte	0x1
 7066 060b CC       		.byte	0xcc
 7067 060c 00000000 		.4byte	.LFB72
 7068 0610 12000000 		.4byte	.LFE72-.LFB72
 7069 0614 01       		.uleb128 0x1
 7070 0615 9C       		.byte	0x9c
 7071 0616 29060000 		.4byte	0x629
 7072 061a 0B       		.uleb128 0xb
 7073 061b 53040000 		.4byte	.LASF58
 7074 061f 01       		.byte	0x1
 7075 0620 CC       		.byte	0xcc
 7076 0621 EA020000 		.4byte	0x2ea
 7077 0625 02       		.uleb128 0x2
 7078 0626 91       		.byte	0x91
 7079 0627 74       		.sleb128 -12
 7080 0628 00       		.byte	0
 7081 0629 0D       		.uleb128 0xd
 7082 062a F6030000 		.4byte	.LASF69
 7083 062e 01       		.byte	0x1
 7084 062f D2       		.byte	0xd2
 7085 0630 00000000 		.4byte	.LFB73
 7086 0634 4C000000 		.4byte	.LFE73-.LFB73
 7087 0638 01       		.uleb128 0x1
 7088 0639 9C       		.byte	0x9c
 7089 063a 7F060000 		.4byte	0x67f
 7090 063e 0B       		.uleb128 0xb
 7091 063f 53040000 		.4byte	.LASF58
 7092 0643 01       		.byte	0x1
 7093 0644 D2       		.byte	0xd2
 7094 0645 EA020000 		.4byte	0x2ea
 7095 0649 02       		.uleb128 0x2
 7096 064a 91       		.byte	0x91
 7097 064b 6C       		.sleb128 -20
 7098 064c 0C       		.uleb128 0xc
 7099 064d 7800     		.ascii	"x\000"
 7100 064f 01       		.byte	0x1
 7101 0650 D2       		.byte	0xd2
 7102 0651 C3000000 		.4byte	0xc3
 7103 0655 02       		.uleb128 0x2
 7104 0656 91       		.byte	0x91
 7105 0657 6A       		.sleb128 -22
 7106 0658 0C       		.uleb128 0xc
 7107 0659 7900     		.ascii	"y\000"
 7108 065b 01       		.byte	0x1
 7109 065c D2       		.byte	0xd2
 7110 065d C3000000 		.4byte	0xc3
 7111 0661 02       		.uleb128 0x2
 7112 0662 91       		.byte	0x91
 7113 0663 68       		.sleb128 -24
 7114 0664 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 147


 7115 0665 6800     		.ascii	"h\000"
 7116 0667 01       		.byte	0x1
 7117 0668 D3       		.byte	0xd3
 7118 0669 C3000000 		.4byte	0xc3
 7119 066d 02       		.uleb128 0x2
 7120 066e 91       		.byte	0x91
 7121 066f 66       		.sleb128 -26
 7122 0670 0B       		.uleb128 0xb
 7123 0671 28050000 		.4byte	.LASF59
 7124 0675 01       		.byte	0x1
 7125 0676 D3       		.byte	0xd3
 7126 0677 CE000000 		.4byte	0xce
 7127 067b 02       		.uleb128 0x2
 7128 067c 91       		.byte	0x91
 7129 067d 00       		.sleb128 0
 7130 067e 00       		.byte	0
 7131 067f 0D       		.uleb128 0xd
 7132 0680 17020000 		.4byte	.LASF70
 7133 0684 01       		.byte	0x1
 7134 0685 DA       		.byte	0xda
 7135 0686 00000000 		.4byte	.LFB74
 7136 068a 4A000000 		.4byte	.LFE74-.LFB74
 7137 068e 01       		.uleb128 0x1
 7138 068f 9C       		.byte	0x9c
 7139 0690 D5060000 		.4byte	0x6d5
 7140 0694 0B       		.uleb128 0xb
 7141 0695 53040000 		.4byte	.LASF58
 7142 0699 01       		.byte	0x1
 7143 069a DA       		.byte	0xda
 7144 069b EA020000 		.4byte	0x2ea
 7145 069f 02       		.uleb128 0x2
 7146 06a0 91       		.byte	0x91
 7147 06a1 74       		.sleb128 -12
 7148 06a2 0C       		.uleb128 0xc
 7149 06a3 7800     		.ascii	"x\000"
 7150 06a5 01       		.byte	0x1
 7151 06a6 DA       		.byte	0xda
 7152 06a7 C3000000 		.4byte	0xc3
 7153 06ab 02       		.uleb128 0x2
 7154 06ac 91       		.byte	0x91
 7155 06ad 72       		.sleb128 -14
 7156 06ae 0C       		.uleb128 0xc
 7157 06af 7900     		.ascii	"y\000"
 7158 06b1 01       		.byte	0x1
 7159 06b2 DA       		.byte	0xda
 7160 06b3 C3000000 		.4byte	0xc3
 7161 06b7 02       		.uleb128 0x2
 7162 06b8 91       		.byte	0x91
 7163 06b9 70       		.sleb128 -16
 7164 06ba 0C       		.uleb128 0xc
 7165 06bb 7700     		.ascii	"w\000"
 7166 06bd 01       		.byte	0x1
 7167 06be DB       		.byte	0xdb
 7168 06bf C3000000 		.4byte	0xc3
 7169 06c3 02       		.uleb128 0x2
 7170 06c4 91       		.byte	0x91
 7171 06c5 6E       		.sleb128 -18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 148


 7172 06c6 0B       		.uleb128 0xb
 7173 06c7 28050000 		.4byte	.LASF59
 7174 06cb 01       		.byte	0x1
 7175 06cc DB       		.byte	0xdb
 7176 06cd CE000000 		.4byte	0xce
 7177 06d1 02       		.uleb128 0x2
 7178 06d2 91       		.byte	0x91
 7179 06d3 00       		.sleb128 0
 7180 06d4 00       		.byte	0
 7181 06d5 0D       		.uleb128 0xd
 7182 06d6 01050000 		.4byte	.LASF71
 7183 06da 01       		.byte	0x1
 7184 06db E0       		.byte	0xe0
 7185 06dc 00000000 		.4byte	.LFB75
 7186 06e0 5E000000 		.4byte	.LFE75-.LFB75
 7187 06e4 01       		.uleb128 0x1
 7188 06e5 9C       		.byte	0x9c
 7189 06e6 4D070000 		.4byte	0x74d
 7190 06ea 0B       		.uleb128 0xb
 7191 06eb 53040000 		.4byte	.LASF58
 7192 06ef 01       		.byte	0x1
 7193 06f0 E0       		.byte	0xe0
 7194 06f1 EA020000 		.4byte	0x2ea
 7195 06f5 02       		.uleb128 0x2
 7196 06f6 91       		.byte	0x91
 7197 06f7 6C       		.sleb128 -20
 7198 06f8 0C       		.uleb128 0xc
 7199 06f9 7800     		.ascii	"x\000"
 7200 06fb 01       		.byte	0x1
 7201 06fc E0       		.byte	0xe0
 7202 06fd C3000000 		.4byte	0xc3
 7203 0701 02       		.uleb128 0x2
 7204 0702 91       		.byte	0x91
 7205 0703 6A       		.sleb128 -22
 7206 0704 0C       		.uleb128 0xc
 7207 0705 7900     		.ascii	"y\000"
 7208 0707 01       		.byte	0x1
 7209 0708 E0       		.byte	0xe0
 7210 0709 C3000000 		.4byte	0xc3
 7211 070d 02       		.uleb128 0x2
 7212 070e 91       		.byte	0x91
 7213 070f 68       		.sleb128 -24
 7214 0710 0C       		.uleb128 0xc
 7215 0711 7700     		.ascii	"w\000"
 7216 0713 01       		.byte	0x1
 7217 0714 E0       		.byte	0xe0
 7218 0715 C3000000 		.4byte	0xc3
 7219 0719 02       		.uleb128 0x2
 7220 071a 91       		.byte	0x91
 7221 071b 66       		.sleb128 -26
 7222 071c 0C       		.uleb128 0xc
 7223 071d 6800     		.ascii	"h\000"
 7224 071f 01       		.byte	0x1
 7225 0720 E0       		.byte	0xe0
 7226 0721 C3000000 		.4byte	0xc3
 7227 0725 02       		.uleb128 0x2
 7228 0726 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 149


 7229 0727 00       		.sleb128 0
 7230 0728 0B       		.uleb128 0xb
 7231 0729 28050000 		.4byte	.LASF59
 7232 072d 01       		.byte	0x1
 7233 072e E1       		.byte	0xe1
 7234 072f CE000000 		.4byte	0xce
 7235 0733 02       		.uleb128 0x2
 7236 0734 91       		.byte	0x91
 7237 0735 04       		.sleb128 4
 7238 0736 13       		.uleb128 0x13
 7239 0737 1A000000 		.4byte	.LBB8
 7240 073b 3C000000 		.4byte	.LBE8-.LBB8
 7241 073f 11       		.uleb128 0x11
 7242 0740 6900     		.ascii	"i\000"
 7243 0742 01       		.byte	0x1
 7244 0743 E3       		.byte	0xe3
 7245 0744 C3000000 		.4byte	0xc3
 7246 0748 02       		.uleb128 0x2
 7247 0749 91       		.byte	0x91
 7248 074a 76       		.sleb128 -10
 7249 074b 00       		.byte	0
 7250 074c 00       		.byte	0
 7251 074d 0D       		.uleb128 0xd
 7252 074e ED060000 		.4byte	.LASF72
 7253 0752 01       		.byte	0x1
 7254 0753 E8       		.byte	0xe8
 7255 0754 00000000 		.4byte	.LFB76
 7256 0758 32000000 		.4byte	.LFE76-.LFB76
 7257 075c 01       		.uleb128 0x1
 7258 075d 9C       		.byte	0x9c
 7259 075e 7F070000 		.4byte	0x77f
 7260 0762 0B       		.uleb128 0xb
 7261 0763 53040000 		.4byte	.LASF58
 7262 0767 01       		.byte	0x1
 7263 0768 E8       		.byte	0xe8
 7264 0769 EA020000 		.4byte	0x2ea
 7265 076d 02       		.uleb128 0x2
 7266 076e 91       		.byte	0x91
 7267 076f 74       		.sleb128 -12
 7268 0770 0B       		.uleb128 0xb
 7269 0771 28050000 		.4byte	.LASF59
 7270 0775 01       		.byte	0x1
 7271 0776 E8       		.byte	0xe8
 7272 0777 CE000000 		.4byte	0xce
 7273 077b 02       		.uleb128 0x2
 7274 077c 91       		.byte	0x91
 7275 077d 72       		.sleb128 -14
 7276 077e 00       		.byte	0
 7277 077f 0D       		.uleb128 0xd
 7278 0780 8D020000 		.4byte	.LASF73
 7279 0784 01       		.byte	0x1
 7280 0785 ED       		.byte	0xed
 7281 0786 00000000 		.4byte	.LFB77
 7282 078a D0000000 		.4byte	.LFE77-.LFB77
 7283 078e 01       		.uleb128 0x1
 7284 078f 9C       		.byte	0x9c
 7285 0790 15080000 		.4byte	0x815
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 150


 7286 0794 0B       		.uleb128 0xb
 7287 0795 53040000 		.4byte	.LASF58
 7288 0799 01       		.byte	0x1
 7289 079a ED       		.byte	0xed
 7290 079b EA020000 		.4byte	0x2ea
 7291 079f 02       		.uleb128 0x2
 7292 07a0 91       		.byte	0x91
 7293 07a1 6C       		.sleb128 -20
 7294 07a2 0C       		.uleb128 0xc
 7295 07a3 783000   		.ascii	"x0\000"
 7296 07a6 01       		.byte	0x1
 7297 07a7 ED       		.byte	0xed
 7298 07a8 C3000000 		.4byte	0xc3
 7299 07ac 02       		.uleb128 0x2
 7300 07ad 91       		.byte	0x91
 7301 07ae 6A       		.sleb128 -22
 7302 07af 0C       		.uleb128 0xc
 7303 07b0 793000   		.ascii	"y0\000"
 7304 07b3 01       		.byte	0x1
 7305 07b4 ED       		.byte	0xed
 7306 07b5 C3000000 		.4byte	0xc3
 7307 07b9 02       		.uleb128 0x2
 7308 07ba 91       		.byte	0x91
 7309 07bb 68       		.sleb128 -24
 7310 07bc 0C       		.uleb128 0xc
 7311 07bd 783100   		.ascii	"x1\000"
 7312 07c0 01       		.byte	0x1
 7313 07c1 ED       		.byte	0xed
 7314 07c2 C3000000 		.4byte	0xc3
 7315 07c6 02       		.uleb128 0x2
 7316 07c7 91       		.byte	0x91
 7317 07c8 66       		.sleb128 -26
 7318 07c9 0C       		.uleb128 0xc
 7319 07ca 793100   		.ascii	"y1\000"
 7320 07cd 01       		.byte	0x1
 7321 07ce ED       		.byte	0xed
 7322 07cf C3000000 		.4byte	0xc3
 7323 07d3 02       		.uleb128 0x2
 7324 07d4 91       		.byte	0x91
 7325 07d5 00       		.sleb128 0
 7326 07d6 0B       		.uleb128 0xb
 7327 07d7 28050000 		.4byte	.LASF59
 7328 07db 01       		.byte	0x1
 7329 07dc EE       		.byte	0xee
 7330 07dd CE000000 		.4byte	0xce
 7331 07e1 02       		.uleb128 0x2
 7332 07e2 91       		.byte	0x91
 7333 07e3 04       		.sleb128 4
 7334 07e4 12       		.uleb128 0x12
 7335 07e5 32000000 		.4byte	.LBB9
 7336 07e9 0C000000 		.4byte	.LBE9-.LBB9
 7337 07ed FE070000 		.4byte	0x7fe
 7338 07f1 11       		.uleb128 0x11
 7339 07f2 7400     		.ascii	"t\000"
 7340 07f4 01       		.byte	0x1
 7341 07f5 F1       		.byte	0xf1
 7342 07f6 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 151


 7343 07fa 02       		.uleb128 0x2
 7344 07fb 91       		.byte	0x91
 7345 07fc 76       		.sleb128 -10
 7346 07fd 00       		.byte	0
 7347 07fe 13       		.uleb128 0x13
 7348 07ff 7A000000 		.4byte	.LBB10
 7349 0803 0C000000 		.4byte	.LBE10-.LBB10
 7350 0807 11       		.uleb128 0x11
 7351 0808 7400     		.ascii	"t\000"
 7352 080a 01       		.byte	0x1
 7353 080b F4       		.byte	0xf4
 7354 080c C3000000 		.4byte	0xc3
 7355 0810 02       		.uleb128 0x2
 7356 0811 91       		.byte	0x91
 7357 0812 74       		.sleb128 -12
 7358 0813 00       		.byte	0
 7359 0814 00       		.byte	0
 7360 0815 0D       		.uleb128 0xd
 7361 0816 00000000 		.4byte	.LASF74
 7362 081a 01       		.byte	0x1
 7363 081b FC       		.byte	0xfc
 7364 081c 00000000 		.4byte	.LFB78
 7365 0820 D2010000 		.4byte	.LFE78-.LFB78
 7366 0824 01       		.uleb128 0x1
 7367 0825 9C       		.byte	0x9c
 7368 0826 B0080000 		.4byte	0x8b0
 7369 082a 0B       		.uleb128 0xb
 7370 082b 53040000 		.4byte	.LASF58
 7371 082f 01       		.byte	0x1
 7372 0830 FC       		.byte	0xfc
 7373 0831 EA020000 		.4byte	0x2ea
 7374 0835 02       		.uleb128 0x2
 7375 0836 91       		.byte	0x91
 7376 0837 64       		.sleb128 -28
 7377 0838 0C       		.uleb128 0xc
 7378 0839 783000   		.ascii	"x0\000"
 7379 083c 01       		.byte	0x1
 7380 083d FC       		.byte	0xfc
 7381 083e C3000000 		.4byte	0xc3
 7382 0842 02       		.uleb128 0x2
 7383 0843 91       		.byte	0x91
 7384 0844 62       		.sleb128 -30
 7385 0845 0C       		.uleb128 0xc
 7386 0846 793000   		.ascii	"y0\000"
 7387 0849 01       		.byte	0x1
 7388 084a FC       		.byte	0xfc
 7389 084b C3000000 		.4byte	0xc3
 7390 084f 02       		.uleb128 0x2
 7391 0850 91       		.byte	0x91
 7392 0851 60       		.sleb128 -32
 7393 0852 0C       		.uleb128 0xc
 7394 0853 7200     		.ascii	"r\000"
 7395 0855 01       		.byte	0x1
 7396 0856 FC       		.byte	0xfc
 7397 0857 C3000000 		.4byte	0xc3
 7398 085b 02       		.uleb128 0x2
 7399 085c 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 152


 7400 085d 5E       		.sleb128 -34
 7401 085e 0B       		.uleb128 0xb
 7402 085f 28050000 		.4byte	.LASF59
 7403 0863 01       		.byte	0x1
 7404 0864 FD       		.byte	0xfd
 7405 0865 CE000000 		.4byte	0xce
 7406 0869 02       		.uleb128 0x2
 7407 086a 91       		.byte	0x91
 7408 086b 00       		.sleb128 0
 7409 086c 11       		.uleb128 0x11
 7410 086d 6600     		.ascii	"f\000"
 7411 086f 01       		.byte	0x1
 7412 0870 FE       		.byte	0xfe
 7413 0871 C3000000 		.4byte	0xc3
 7414 0875 02       		.uleb128 0x2
 7415 0876 91       		.byte	0x91
 7416 0877 76       		.sleb128 -10
 7417 0878 0E       		.uleb128 0xe
 7418 0879 BC060000 		.4byte	.LASF75
 7419 087d 01       		.byte	0x1
 7420 087e FF       		.byte	0xff
 7421 087f C3000000 		.4byte	0xc3
 7422 0883 02       		.uleb128 0x2
 7423 0884 91       		.byte	0x91
 7424 0885 74       		.sleb128 -12
 7425 0886 14       		.uleb128 0x14
 7426 0887 C2060000 		.4byte	.LASF76
 7427 088b 01       		.byte	0x1
 7428 088c 0001     		.2byte	0x100
 7429 088e C3000000 		.4byte	0xc3
 7430 0892 02       		.uleb128 0x2
 7431 0893 91       		.byte	0x91
 7432 0894 72       		.sleb128 -14
 7433 0895 15       		.uleb128 0x15
 7434 0896 7800     		.ascii	"x\000"
 7435 0898 01       		.byte	0x1
 7436 0899 0101     		.2byte	0x101
 7437 089b C3000000 		.4byte	0xc3
 7438 089f 02       		.uleb128 0x2
 7439 08a0 91       		.byte	0x91
 7440 08a1 70       		.sleb128 -16
 7441 08a2 15       		.uleb128 0x15
 7442 08a3 7900     		.ascii	"y\000"
 7443 08a5 01       		.byte	0x1
 7444 08a6 0201     		.2byte	0x102
 7445 08a8 C3000000 		.4byte	0xc3
 7446 08ac 02       		.uleb128 0x2
 7447 08ad 91       		.byte	0x91
 7448 08ae 6E       		.sleb128 -18
 7449 08af 00       		.byte	0
 7450 08b0 16       		.uleb128 0x16
 7451 08b1 E2030000 		.4byte	.LASF77
 7452 08b5 01       		.byte	0x1
 7453 08b6 1F01     		.2byte	0x11f
 7454 08b8 00000000 		.4byte	.LFB79
 7455 08bc AA010000 		.4byte	.LFE79-.LFB79
 7456 08c0 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 153


 7457 08c1 9C       		.byte	0x9c
 7458 08c2 62090000 		.4byte	0x962
 7459 08c6 17       		.uleb128 0x17
 7460 08c7 53040000 		.4byte	.LASF58
 7461 08cb 01       		.byte	0x1
 7462 08cc 1F01     		.2byte	0x11f
 7463 08ce EA020000 		.4byte	0x2ea
 7464 08d2 02       		.uleb128 0x2
 7465 08d3 91       		.byte	0x91
 7466 08d4 64       		.sleb128 -28
 7467 08d5 18       		.uleb128 0x18
 7468 08d6 783000   		.ascii	"x0\000"
 7469 08d9 01       		.byte	0x1
 7470 08da 1F01     		.2byte	0x11f
 7471 08dc C3000000 		.4byte	0xc3
 7472 08e0 02       		.uleb128 0x2
 7473 08e1 91       		.byte	0x91
 7474 08e2 62       		.sleb128 -30
 7475 08e3 18       		.uleb128 0x18
 7476 08e4 793000   		.ascii	"y0\000"
 7477 08e7 01       		.byte	0x1
 7478 08e8 1F01     		.2byte	0x11f
 7479 08ea C3000000 		.4byte	0xc3
 7480 08ee 02       		.uleb128 0x2
 7481 08ef 91       		.byte	0x91
 7482 08f0 60       		.sleb128 -32
 7483 08f1 18       		.uleb128 0x18
 7484 08f2 7200     		.ascii	"r\000"
 7485 08f4 01       		.byte	0x1
 7486 08f5 2001     		.2byte	0x120
 7487 08f7 C3000000 		.4byte	0xc3
 7488 08fb 02       		.uleb128 0x2
 7489 08fc 91       		.byte	0x91
 7490 08fd 5E       		.sleb128 -34
 7491 08fe 17       		.uleb128 0x17
 7492 08ff 76060000 		.4byte	.LASF78
 7493 0903 01       		.byte	0x1
 7494 0904 2001     		.2byte	0x120
 7495 0906 B8000000 		.4byte	0xb8
 7496 090a 02       		.uleb128 0x2
 7497 090b 91       		.byte	0x91
 7498 090c 00       		.sleb128 0
 7499 090d 17       		.uleb128 0x17
 7500 090e 28050000 		.4byte	.LASF59
 7501 0912 01       		.byte	0x1
 7502 0913 2001     		.2byte	0x120
 7503 0915 CE000000 		.4byte	0xce
 7504 0919 02       		.uleb128 0x2
 7505 091a 91       		.byte	0x91
 7506 091b 04       		.sleb128 4
 7507 091c 15       		.uleb128 0x15
 7508 091d 6600     		.ascii	"f\000"
 7509 091f 01       		.byte	0x1
 7510 0920 2101     		.2byte	0x121
 7511 0922 C3000000 		.4byte	0xc3
 7512 0926 02       		.uleb128 0x2
 7513 0927 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 154


 7514 0928 76       		.sleb128 -10
 7515 0929 14       		.uleb128 0x14
 7516 092a BC060000 		.4byte	.LASF75
 7517 092e 01       		.byte	0x1
 7518 092f 2201     		.2byte	0x122
 7519 0931 C3000000 		.4byte	0xc3
 7520 0935 02       		.uleb128 0x2
 7521 0936 91       		.byte	0x91
 7522 0937 74       		.sleb128 -12
 7523 0938 14       		.uleb128 0x14
 7524 0939 C2060000 		.4byte	.LASF76
 7525 093d 01       		.byte	0x1
 7526 093e 2301     		.2byte	0x123
 7527 0940 C3000000 		.4byte	0xc3
 7528 0944 02       		.uleb128 0x2
 7529 0945 91       		.byte	0x91
 7530 0946 72       		.sleb128 -14
 7531 0947 15       		.uleb128 0x15
 7532 0948 7800     		.ascii	"x\000"
 7533 094a 01       		.byte	0x1
 7534 094b 2401     		.2byte	0x124
 7535 094d C3000000 		.4byte	0xc3
 7536 0951 02       		.uleb128 0x2
 7537 0952 91       		.byte	0x91
 7538 0953 70       		.sleb128 -16
 7539 0954 15       		.uleb128 0x15
 7540 0955 7900     		.ascii	"y\000"
 7541 0957 01       		.byte	0x1
 7542 0958 2501     		.2byte	0x125
 7543 095a C3000000 		.4byte	0xc3
 7544 095e 02       		.uleb128 0x2
 7545 095f 91       		.byte	0x91
 7546 0960 6E       		.sleb128 -18
 7547 0961 00       		.byte	0
 7548 0962 16       		.uleb128 0x16
 7549 0963 C4050000 		.4byte	.LASF79
 7550 0967 01       		.byte	0x1
 7551 0968 4301     		.2byte	0x143
 7552 096a 00000000 		.4byte	.LFB80
 7553 096e 68000000 		.4byte	.LFE80-.LFB80
 7554 0972 01       		.uleb128 0x1
 7555 0973 9C       		.byte	0x9c
 7556 0974 C0090000 		.4byte	0x9c0
 7557 0978 17       		.uleb128 0x17
 7558 0979 53040000 		.4byte	.LASF58
 7559 097d 01       		.byte	0x1
 7560 097e 4301     		.2byte	0x143
 7561 0980 EA020000 		.4byte	0x2ea
 7562 0984 02       		.uleb128 0x2
 7563 0985 91       		.byte	0x91
 7564 0986 74       		.sleb128 -12
 7565 0987 18       		.uleb128 0x18
 7566 0988 783000   		.ascii	"x0\000"
 7567 098b 01       		.byte	0x1
 7568 098c 4301     		.2byte	0x143
 7569 098e C3000000 		.4byte	0xc3
 7570 0992 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 155


 7571 0993 91       		.byte	0x91
 7572 0994 72       		.sleb128 -14
 7573 0995 18       		.uleb128 0x18
 7574 0996 793000   		.ascii	"y0\000"
 7575 0999 01       		.byte	0x1
 7576 099a 4301     		.2byte	0x143
 7577 099c C3000000 		.4byte	0xc3
 7578 09a0 02       		.uleb128 0x2
 7579 09a1 91       		.byte	0x91
 7580 09a2 70       		.sleb128 -16
 7581 09a3 18       		.uleb128 0x18
 7582 09a4 7200     		.ascii	"r\000"
 7583 09a6 01       		.byte	0x1
 7584 09a7 4301     		.2byte	0x143
 7585 09a9 C3000000 		.4byte	0xc3
 7586 09ad 02       		.uleb128 0x2
 7587 09ae 91       		.byte	0x91
 7588 09af 6E       		.sleb128 -18
 7589 09b0 17       		.uleb128 0x17
 7590 09b1 28050000 		.4byte	.LASF59
 7591 09b5 01       		.byte	0x1
 7592 09b6 4401     		.2byte	0x144
 7593 09b8 CE000000 		.4byte	0xce
 7594 09bc 02       		.uleb128 0x2
 7595 09bd 91       		.byte	0x91
 7596 09be 00       		.sleb128 0
 7597 09bf 00       		.byte	0
 7598 09c0 16       		.uleb128 0x16
 7599 09c1 29070000 		.4byte	.LASF80
 7600 09c5 01       		.byte	0x1
 7601 09c6 4C01     		.2byte	0x14c
 7602 09c8 00000000 		.4byte	.LFB81
 7603 09cc 82010000 		.4byte	.LFE81-.LFB81
 7604 09d0 01       		.uleb128 0x1
 7605 09d1 9C       		.byte	0x9c
 7606 09d2 810A0000 		.4byte	0xa81
 7607 09d6 17       		.uleb128 0x17
 7608 09d7 53040000 		.4byte	.LASF58
 7609 09db 01       		.byte	0x1
 7610 09dc 4C01     		.2byte	0x14c
 7611 09de EA020000 		.4byte	0x2ea
 7612 09e2 02       		.uleb128 0x2
 7613 09e3 91       		.byte	0x91
 7614 09e4 64       		.sleb128 -28
 7615 09e5 18       		.uleb128 0x18
 7616 09e6 783000   		.ascii	"x0\000"
 7617 09e9 01       		.byte	0x1
 7618 09ea 4C01     		.2byte	0x14c
 7619 09ec C3000000 		.4byte	0xc3
 7620 09f0 02       		.uleb128 0x2
 7621 09f1 91       		.byte	0x91
 7622 09f2 62       		.sleb128 -30
 7623 09f3 18       		.uleb128 0x18
 7624 09f4 793000   		.ascii	"y0\000"
 7625 09f7 01       		.byte	0x1
 7626 09f8 4C01     		.2byte	0x14c
 7627 09fa C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 156


 7628 09fe 02       		.uleb128 0x2
 7629 09ff 91       		.byte	0x91
 7630 0a00 60       		.sleb128 -32
 7631 0a01 18       		.uleb128 0x18
 7632 0a02 7200     		.ascii	"r\000"
 7633 0a04 01       		.byte	0x1
 7634 0a05 4C01     		.2byte	0x14c
 7635 0a07 C3000000 		.4byte	0xc3
 7636 0a0b 02       		.uleb128 0x2
 7637 0a0c 91       		.byte	0x91
 7638 0a0d 5E       		.sleb128 -34
 7639 0a0e 17       		.uleb128 0x17
 7640 0a0f 76060000 		.4byte	.LASF78
 7641 0a13 01       		.byte	0x1
 7642 0a14 4D01     		.2byte	0x14d
 7643 0a16 B8000000 		.4byte	0xb8
 7644 0a1a 02       		.uleb128 0x2
 7645 0a1b 91       		.byte	0x91
 7646 0a1c 00       		.sleb128 0
 7647 0a1d 17       		.uleb128 0x17
 7648 0a1e D4060000 		.4byte	.LASF81
 7649 0a22 01       		.byte	0x1
 7650 0a23 4D01     		.2byte	0x14d
 7651 0a25 C3000000 		.4byte	0xc3
 7652 0a29 02       		.uleb128 0x2
 7653 0a2a 91       		.byte	0x91
 7654 0a2b 04       		.sleb128 4
 7655 0a2c 17       		.uleb128 0x17
 7656 0a2d 28050000 		.4byte	.LASF59
 7657 0a31 01       		.byte	0x1
 7658 0a32 4D01     		.2byte	0x14d
 7659 0a34 CE000000 		.4byte	0xce
 7660 0a38 02       		.uleb128 0x2
 7661 0a39 91       		.byte	0x91
 7662 0a3a 08       		.sleb128 8
 7663 0a3b 15       		.uleb128 0x15
 7664 0a3c 6600     		.ascii	"f\000"
 7665 0a3e 01       		.byte	0x1
 7666 0a3f 4F01     		.2byte	0x14f
 7667 0a41 C3000000 		.4byte	0xc3
 7668 0a45 02       		.uleb128 0x2
 7669 0a46 91       		.byte	0x91
 7670 0a47 76       		.sleb128 -10
 7671 0a48 14       		.uleb128 0x14
 7672 0a49 BC060000 		.4byte	.LASF75
 7673 0a4d 01       		.byte	0x1
 7674 0a4e 5001     		.2byte	0x150
 7675 0a50 C3000000 		.4byte	0xc3
 7676 0a54 02       		.uleb128 0x2
 7677 0a55 91       		.byte	0x91
 7678 0a56 74       		.sleb128 -12
 7679 0a57 14       		.uleb128 0x14
 7680 0a58 C2060000 		.4byte	.LASF76
 7681 0a5c 01       		.byte	0x1
 7682 0a5d 5101     		.2byte	0x151
 7683 0a5f C3000000 		.4byte	0xc3
 7684 0a63 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 157


 7685 0a64 91       		.byte	0x91
 7686 0a65 72       		.sleb128 -14
 7687 0a66 15       		.uleb128 0x15
 7688 0a67 7800     		.ascii	"x\000"
 7689 0a69 01       		.byte	0x1
 7690 0a6a 5201     		.2byte	0x152
 7691 0a6c C3000000 		.4byte	0xc3
 7692 0a70 02       		.uleb128 0x2
 7693 0a71 91       		.byte	0x91
 7694 0a72 70       		.sleb128 -16
 7695 0a73 15       		.uleb128 0x15
 7696 0a74 7900     		.ascii	"y\000"
 7697 0a76 01       		.byte	0x1
 7698 0a77 5301     		.2byte	0x153
 7699 0a79 C3000000 		.4byte	0xc3
 7700 0a7d 02       		.uleb128 0x2
 7701 0a7e 91       		.byte	0x91
 7702 0a7f 6E       		.sleb128 -18
 7703 0a80 00       		.byte	0
 7704 0a81 16       		.uleb128 0x16
 7705 0a82 9E030000 		.4byte	.LASF82
 7706 0a86 01       		.byte	0x1
 7707 0a87 6B01     		.2byte	0x16b
 7708 0a89 00000000 		.4byte	.LFB82
 7709 0a8d 96000000 		.4byte	.LFE82-.LFB82
 7710 0a91 01       		.uleb128 0x1
 7711 0a92 9C       		.byte	0x9c
 7712 0a93 EA0A0000 		.4byte	0xaea
 7713 0a97 17       		.uleb128 0x17
 7714 0a98 53040000 		.4byte	.LASF58
 7715 0a9c 01       		.byte	0x1
 7716 0a9d 6B01     		.2byte	0x16b
 7717 0a9f EA020000 		.4byte	0x2ea
 7718 0aa3 02       		.uleb128 0x2
 7719 0aa4 91       		.byte	0x91
 7720 0aa5 74       		.sleb128 -12
 7721 0aa6 18       		.uleb128 0x18
 7722 0aa7 7800     		.ascii	"x\000"
 7723 0aa9 01       		.byte	0x1
 7724 0aaa 6B01     		.2byte	0x16b
 7725 0aac C3000000 		.4byte	0xc3
 7726 0ab0 02       		.uleb128 0x2
 7727 0ab1 91       		.byte	0x91
 7728 0ab2 72       		.sleb128 -14
 7729 0ab3 18       		.uleb128 0x18
 7730 0ab4 7900     		.ascii	"y\000"
 7731 0ab6 01       		.byte	0x1
 7732 0ab7 6B01     		.2byte	0x16b
 7733 0ab9 C3000000 		.4byte	0xc3
 7734 0abd 02       		.uleb128 0x2
 7735 0abe 91       		.byte	0x91
 7736 0abf 70       		.sleb128 -16
 7737 0ac0 18       		.uleb128 0x18
 7738 0ac1 7700     		.ascii	"w\000"
 7739 0ac3 01       		.byte	0x1
 7740 0ac4 6B01     		.2byte	0x16b
 7741 0ac6 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 158


 7742 0aca 02       		.uleb128 0x2
 7743 0acb 91       		.byte	0x91
 7744 0acc 6E       		.sleb128 -18
 7745 0acd 18       		.uleb128 0x18
 7746 0ace 6800     		.ascii	"h\000"
 7747 0ad0 01       		.byte	0x1
 7748 0ad1 6B01     		.2byte	0x16b
 7749 0ad3 C3000000 		.4byte	0xc3
 7750 0ad7 02       		.uleb128 0x2
 7751 0ad8 91       		.byte	0x91
 7752 0ad9 00       		.sleb128 0
 7753 0ada 17       		.uleb128 0x17
 7754 0adb 28050000 		.4byte	.LASF59
 7755 0adf 01       		.byte	0x1
 7756 0ae0 6C01     		.2byte	0x16c
 7757 0ae2 CE000000 		.4byte	0xce
 7758 0ae6 02       		.uleb128 0x2
 7759 0ae7 91       		.byte	0x91
 7760 0ae8 04       		.sleb128 4
 7761 0ae9 00       		.byte	0
 7762 0aea 16       		.uleb128 0x16
 7763 0aeb 81040000 		.4byte	.LASF83
 7764 0aef 01       		.byte	0x1
 7765 0af0 7601     		.2byte	0x176
 7766 0af2 00000000 		.4byte	.LFB83
 7767 0af6 A4010000 		.4byte	.LFE83-.LFB83
 7768 0afa 01       		.uleb128 0x1
 7769 0afb 9C       		.byte	0x9c
 7770 0afc 600B0000 		.4byte	0xb60
 7771 0b00 17       		.uleb128 0x17
 7772 0b01 53040000 		.4byte	.LASF58
 7773 0b05 01       		.byte	0x1
 7774 0b06 7601     		.2byte	0x176
 7775 0b08 EA020000 		.4byte	0x2ea
 7776 0b0c 02       		.uleb128 0x2
 7777 0b0d 91       		.byte	0x91
 7778 0b0e 74       		.sleb128 -12
 7779 0b0f 18       		.uleb128 0x18
 7780 0b10 7800     		.ascii	"x\000"
 7781 0b12 01       		.byte	0x1
 7782 0b13 7601     		.2byte	0x176
 7783 0b15 C3000000 		.4byte	0xc3
 7784 0b19 02       		.uleb128 0x2
 7785 0b1a 91       		.byte	0x91
 7786 0b1b 72       		.sleb128 -14
 7787 0b1c 18       		.uleb128 0x18
 7788 0b1d 7900     		.ascii	"y\000"
 7789 0b1f 01       		.byte	0x1
 7790 0b20 7601     		.2byte	0x176
 7791 0b22 C3000000 		.4byte	0xc3
 7792 0b26 02       		.uleb128 0x2
 7793 0b27 91       		.byte	0x91
 7794 0b28 70       		.sleb128 -16
 7795 0b29 18       		.uleb128 0x18
 7796 0b2a 7700     		.ascii	"w\000"
 7797 0b2c 01       		.byte	0x1
 7798 0b2d 7601     		.2byte	0x176
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 159


 7799 0b2f C3000000 		.4byte	0xc3
 7800 0b33 02       		.uleb128 0x2
 7801 0b34 91       		.byte	0x91
 7802 0b35 6E       		.sleb128 -18
 7803 0b36 18       		.uleb128 0x18
 7804 0b37 6800     		.ascii	"h\000"
 7805 0b39 01       		.byte	0x1
 7806 0b3a 7701     		.2byte	0x177
 7807 0b3c C3000000 		.4byte	0xc3
 7808 0b40 02       		.uleb128 0x2
 7809 0b41 91       		.byte	0x91
 7810 0b42 00       		.sleb128 0
 7811 0b43 18       		.uleb128 0x18
 7812 0b44 7200     		.ascii	"r\000"
 7813 0b46 01       		.byte	0x1
 7814 0b47 7701     		.2byte	0x177
 7815 0b49 C3000000 		.4byte	0xc3
 7816 0b4d 02       		.uleb128 0x2
 7817 0b4e 91       		.byte	0x91
 7818 0b4f 04       		.sleb128 4
 7819 0b50 17       		.uleb128 0x17
 7820 0b51 28050000 		.4byte	.LASF59
 7821 0b55 01       		.byte	0x1
 7822 0b56 7701     		.2byte	0x177
 7823 0b58 CE000000 		.4byte	0xce
 7824 0b5c 02       		.uleb128 0x2
 7825 0b5d 91       		.byte	0x91
 7826 0b5e 08       		.sleb128 8
 7827 0b5f 00       		.byte	0
 7828 0b60 16       		.uleb128 0x16
 7829 0b61 11070000 		.4byte	.LASF84
 7830 0b65 01       		.byte	0x1
 7831 0b66 8601     		.2byte	0x186
 7832 0b68 00000000 		.4byte	.LFB84
 7833 0b6c D6000000 		.4byte	.LFE84-.LFB84
 7834 0b70 01       		.uleb128 0x1
 7835 0b71 9C       		.byte	0x9c
 7836 0b72 D60B0000 		.4byte	0xbd6
 7837 0b76 17       		.uleb128 0x17
 7838 0b77 53040000 		.4byte	.LASF58
 7839 0b7b 01       		.byte	0x1
 7840 0b7c 8601     		.2byte	0x186
 7841 0b7e EA020000 		.4byte	0x2ea
 7842 0b82 02       		.uleb128 0x2
 7843 0b83 91       		.byte	0x91
 7844 0b84 6C       		.sleb128 -20
 7845 0b85 18       		.uleb128 0x18
 7846 0b86 7800     		.ascii	"x\000"
 7847 0b88 01       		.byte	0x1
 7848 0b89 8601     		.2byte	0x186
 7849 0b8b C3000000 		.4byte	0xc3
 7850 0b8f 02       		.uleb128 0x2
 7851 0b90 91       		.byte	0x91
 7852 0b91 6A       		.sleb128 -22
 7853 0b92 18       		.uleb128 0x18
 7854 0b93 7900     		.ascii	"y\000"
 7855 0b95 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 160


 7856 0b96 8601     		.2byte	0x186
 7857 0b98 C3000000 		.4byte	0xc3
 7858 0b9c 02       		.uleb128 0x2
 7859 0b9d 91       		.byte	0x91
 7860 0b9e 68       		.sleb128 -24
 7861 0b9f 18       		.uleb128 0x18
 7862 0ba0 7700     		.ascii	"w\000"
 7863 0ba2 01       		.byte	0x1
 7864 0ba3 8601     		.2byte	0x186
 7865 0ba5 C3000000 		.4byte	0xc3
 7866 0ba9 02       		.uleb128 0x2
 7867 0baa 91       		.byte	0x91
 7868 0bab 66       		.sleb128 -26
 7869 0bac 18       		.uleb128 0x18
 7870 0bad 6800     		.ascii	"h\000"
 7871 0baf 01       		.byte	0x1
 7872 0bb0 8701     		.2byte	0x187
 7873 0bb2 C3000000 		.4byte	0xc3
 7874 0bb6 02       		.uleb128 0x2
 7875 0bb7 91       		.byte	0x91
 7876 0bb8 00       		.sleb128 0
 7877 0bb9 18       		.uleb128 0x18
 7878 0bba 7200     		.ascii	"r\000"
 7879 0bbc 01       		.byte	0x1
 7880 0bbd 8701     		.2byte	0x187
 7881 0bbf C3000000 		.4byte	0xc3
 7882 0bc3 02       		.uleb128 0x2
 7883 0bc4 91       		.byte	0x91
 7884 0bc5 04       		.sleb128 4
 7885 0bc6 17       		.uleb128 0x17
 7886 0bc7 28050000 		.4byte	.LASF59
 7887 0bcb 01       		.byte	0x1
 7888 0bcc 8701     		.2byte	0x187
 7889 0bce CE000000 		.4byte	0xce
 7890 0bd2 02       		.uleb128 0x2
 7891 0bd3 91       		.byte	0x91
 7892 0bd4 08       		.sleb128 8
 7893 0bd5 00       		.byte	0
 7894 0bd6 16       		.uleb128 0x16
 7895 0bd7 9D050000 		.4byte	.LASF85
 7896 0bdb 01       		.byte	0x1
 7897 0bdc 9101     		.2byte	0x191
 7898 0bde 00000000 		.4byte	.LFB85
 7899 0be2 7C000000 		.4byte	.LFE85-.LFB85
 7900 0be6 01       		.uleb128 0x1
 7901 0be7 9C       		.byte	0x9c
 7902 0be8 5F0C0000 		.4byte	0xc5f
 7903 0bec 17       		.uleb128 0x17
 7904 0bed 53040000 		.4byte	.LASF58
 7905 0bf1 01       		.byte	0x1
 7906 0bf2 9101     		.2byte	0x191
 7907 0bf4 EA020000 		.4byte	0x2ea
 7908 0bf8 02       		.uleb128 0x2
 7909 0bf9 91       		.byte	0x91
 7910 0bfa 74       		.sleb128 -12
 7911 0bfb 18       		.uleb128 0x18
 7912 0bfc 783000   		.ascii	"x0\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 161


 7913 0bff 01       		.byte	0x1
 7914 0c00 9101     		.2byte	0x191
 7915 0c02 C3000000 		.4byte	0xc3
 7916 0c06 02       		.uleb128 0x2
 7917 0c07 91       		.byte	0x91
 7918 0c08 72       		.sleb128 -14
 7919 0c09 18       		.uleb128 0x18
 7920 0c0a 793000   		.ascii	"y0\000"
 7921 0c0d 01       		.byte	0x1
 7922 0c0e 9101     		.2byte	0x191
 7923 0c10 C3000000 		.4byte	0xc3
 7924 0c14 02       		.uleb128 0x2
 7925 0c15 91       		.byte	0x91
 7926 0c16 70       		.sleb128 -16
 7927 0c17 18       		.uleb128 0x18
 7928 0c18 783100   		.ascii	"x1\000"
 7929 0c1b 01       		.byte	0x1
 7930 0c1c 9201     		.2byte	0x192
 7931 0c1e C3000000 		.4byte	0xc3
 7932 0c22 02       		.uleb128 0x2
 7933 0c23 91       		.byte	0x91
 7934 0c24 6E       		.sleb128 -18
 7935 0c25 18       		.uleb128 0x18
 7936 0c26 793100   		.ascii	"y1\000"
 7937 0c29 01       		.byte	0x1
 7938 0c2a 9201     		.2byte	0x192
 7939 0c2c C3000000 		.4byte	0xc3
 7940 0c30 02       		.uleb128 0x2
 7941 0c31 91       		.byte	0x91
 7942 0c32 00       		.sleb128 0
 7943 0c33 18       		.uleb128 0x18
 7944 0c34 783200   		.ascii	"x2\000"
 7945 0c37 01       		.byte	0x1
 7946 0c38 9201     		.2byte	0x192
 7947 0c3a C3000000 		.4byte	0xc3
 7948 0c3e 02       		.uleb128 0x2
 7949 0c3f 91       		.byte	0x91
 7950 0c40 04       		.sleb128 4
 7951 0c41 18       		.uleb128 0x18
 7952 0c42 793200   		.ascii	"y2\000"
 7953 0c45 01       		.byte	0x1
 7954 0c46 9201     		.2byte	0x192
 7955 0c48 C3000000 		.4byte	0xc3
 7956 0c4c 02       		.uleb128 0x2
 7957 0c4d 91       		.byte	0x91
 7958 0c4e 08       		.sleb128 8
 7959 0c4f 17       		.uleb128 0x17
 7960 0c50 28050000 		.4byte	.LASF59
 7961 0c54 01       		.byte	0x1
 7962 0c55 9201     		.2byte	0x192
 7963 0c57 CE000000 		.4byte	0xce
 7964 0c5b 02       		.uleb128 0x2
 7965 0c5c 91       		.byte	0x91
 7966 0c5d 0C       		.sleb128 12
 7967 0c5e 00       		.byte	0
 7968 0c5f 16       		.uleb128 0x16
 7969 0c60 88030000 		.4byte	.LASF86
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 162


 7970 0c64 01       		.byte	0x1
 7971 0c65 9901     		.2byte	0x199
 7972 0c67 00000000 		.4byte	.LFB86
 7973 0c6b E0020000 		.4byte	.LFE86-.LFB86
 7974 0c6f 01       		.uleb128 0x1
 7975 0c70 9C       		.byte	0x9c
 7976 0c71 690E0000 		.4byte	0xe69
 7977 0c75 17       		.uleb128 0x17
 7978 0c76 53040000 		.4byte	.LASF58
 7979 0c7a 01       		.byte	0x1
 7980 0c7b 9901     		.2byte	0x199
 7981 0c7d EA020000 		.4byte	0x2ea
 7982 0c81 02       		.uleb128 0x2
 7983 0c82 91       		.byte	0x91
 7984 0c83 44       		.sleb128 -60
 7985 0c84 18       		.uleb128 0x18
 7986 0c85 783000   		.ascii	"x0\000"
 7987 0c88 01       		.byte	0x1
 7988 0c89 9901     		.2byte	0x199
 7989 0c8b C3000000 		.4byte	0xc3
 7990 0c8f 02       		.uleb128 0x2
 7991 0c90 91       		.byte	0x91
 7992 0c91 42       		.sleb128 -62
 7993 0c92 18       		.uleb128 0x18
 7994 0c93 793000   		.ascii	"y0\000"
 7995 0c96 01       		.byte	0x1
 7996 0c97 9901     		.2byte	0x199
 7997 0c99 C3000000 		.4byte	0xc3
 7998 0c9d 02       		.uleb128 0x2
 7999 0c9e 91       		.byte	0x91
 8000 0c9f 40       		.sleb128 -64
 8001 0ca0 18       		.uleb128 0x18
 8002 0ca1 783100   		.ascii	"x1\000"
 8003 0ca4 01       		.byte	0x1
 8004 0ca5 9A01     		.2byte	0x19a
 8005 0ca7 C3000000 		.4byte	0xc3
 8006 0cab 03       		.uleb128 0x3
 8007 0cac 91       		.byte	0x91
 8008 0cad BE7F     		.sleb128 -66
 8009 0caf 18       		.uleb128 0x18
 8010 0cb0 793100   		.ascii	"y1\000"
 8011 0cb3 01       		.byte	0x1
 8012 0cb4 9A01     		.2byte	0x19a
 8013 0cb6 C3000000 		.4byte	0xc3
 8014 0cba 02       		.uleb128 0x2
 8015 0cbb 91       		.byte	0x91
 8016 0cbc 00       		.sleb128 0
 8017 0cbd 18       		.uleb128 0x18
 8018 0cbe 783200   		.ascii	"x2\000"
 8019 0cc1 01       		.byte	0x1
 8020 0cc2 9A01     		.2byte	0x19a
 8021 0cc4 C3000000 		.4byte	0xc3
 8022 0cc8 02       		.uleb128 0x2
 8023 0cc9 91       		.byte	0x91
 8024 0cca 04       		.sleb128 4
 8025 0ccb 18       		.uleb128 0x18
 8026 0ccc 793200   		.ascii	"y2\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 163


 8027 0ccf 01       		.byte	0x1
 8028 0cd0 9A01     		.2byte	0x19a
 8029 0cd2 C3000000 		.4byte	0xc3
 8030 0cd6 02       		.uleb128 0x2
 8031 0cd7 91       		.byte	0x91
 8032 0cd8 08       		.sleb128 8
 8033 0cd9 17       		.uleb128 0x17
 8034 0cda 28050000 		.4byte	.LASF59
 8035 0cde 01       		.byte	0x1
 8036 0cdf 9A01     		.2byte	0x19a
 8037 0ce1 CE000000 		.4byte	0xce
 8038 0ce5 02       		.uleb128 0x2
 8039 0ce6 91       		.byte	0x91
 8040 0ce7 0C       		.sleb128 12
 8041 0ce8 15       		.uleb128 0x15
 8042 0ce9 6100     		.ascii	"a\000"
 8043 0ceb 01       		.byte	0x1
 8044 0cec 9C01     		.2byte	0x19c
 8045 0cee C3000000 		.4byte	0xc3
 8046 0cf2 02       		.uleb128 0x2
 8047 0cf3 91       		.byte	0x91
 8048 0cf4 76       		.sleb128 -10
 8049 0cf5 15       		.uleb128 0x15
 8050 0cf6 6200     		.ascii	"b\000"
 8051 0cf8 01       		.byte	0x1
 8052 0cf9 9C01     		.2byte	0x19c
 8053 0cfb C3000000 		.4byte	0xc3
 8054 0cff 02       		.uleb128 0x2
 8055 0d00 91       		.byte	0x91
 8056 0d01 74       		.sleb128 -12
 8057 0d02 15       		.uleb128 0x15
 8058 0d03 7900     		.ascii	"y\000"
 8059 0d05 01       		.byte	0x1
 8060 0d06 9C01     		.2byte	0x19c
 8061 0d08 C3000000 		.4byte	0xc3
 8062 0d0c 02       		.uleb128 0x2
 8063 0d0d 91       		.byte	0x91
 8064 0d0e 72       		.sleb128 -14
 8065 0d0f 14       		.uleb128 0x14
 8066 0d10 0E000000 		.4byte	.LASF31
 8067 0d14 01       		.byte	0x1
 8068 0d15 9C01     		.2byte	0x19c
 8069 0d17 C3000000 		.4byte	0xc3
 8070 0d1b 02       		.uleb128 0x2
 8071 0d1c 91       		.byte	0x91
 8072 0d1d 70       		.sleb128 -16
 8073 0d1e 14       		.uleb128 0x14
 8074 0d1f 60000000 		.4byte	.LASF87
 8075 0d23 01       		.byte	0x1
 8076 0d24 B601     		.2byte	0x1b6
 8077 0d26 C3000000 		.4byte	0xc3
 8078 0d2a 02       		.uleb128 0x2
 8079 0d2b 91       		.byte	0x91
 8080 0d2c 5A       		.sleb128 -38
 8081 0d2d 14       		.uleb128 0x14
 8082 0d2e 51030000 		.4byte	.LASF88
 8083 0d32 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 164


 8084 0d33 B701     		.2byte	0x1b7
 8085 0d35 C3000000 		.4byte	0xc3
 8086 0d39 02       		.uleb128 0x2
 8087 0d3a 91       		.byte	0x91
 8088 0d3b 58       		.sleb128 -40
 8089 0d3c 14       		.uleb128 0x14
 8090 0d3d 65000000 		.4byte	.LASF89
 8091 0d41 01       		.byte	0x1
 8092 0d42 B801     		.2byte	0x1b8
 8093 0d44 C3000000 		.4byte	0xc3
 8094 0d48 02       		.uleb128 0x2
 8095 0d49 91       		.byte	0x91
 8096 0d4a 56       		.sleb128 -42
 8097 0d4b 14       		.uleb128 0x14
 8098 0d4c 56030000 		.4byte	.LASF90
 8099 0d50 01       		.byte	0x1
 8100 0d51 B901     		.2byte	0x1b9
 8101 0d53 C3000000 		.4byte	0xc3
 8102 0d57 02       		.uleb128 0x2
 8103 0d58 91       		.byte	0x91
 8104 0d59 54       		.sleb128 -44
 8105 0d5a 14       		.uleb128 0x14
 8106 0d5b 4B010000 		.4byte	.LASF91
 8107 0d5f 01       		.byte	0x1
 8108 0d60 BA01     		.2byte	0x1ba
 8109 0d62 C3000000 		.4byte	0xc3
 8110 0d66 02       		.uleb128 0x2
 8111 0d67 91       		.byte	0x91
 8112 0d68 52       		.sleb128 -46
 8113 0d69 14       		.uleb128 0x14
 8114 0d6a C1030000 		.4byte	.LASF92
 8115 0d6e 01       		.byte	0x1
 8116 0d6f BB01     		.2byte	0x1bb
 8117 0d71 C3000000 		.4byte	0xc3
 8118 0d75 02       		.uleb128 0x2
 8119 0d76 91       		.byte	0x91
 8120 0d77 50       		.sleb128 -48
 8121 0d78 15       		.uleb128 0x15
 8122 0d79 736100   		.ascii	"sa\000"
 8123 0d7c 01       		.byte	0x1
 8124 0d7d BD01     		.2byte	0x1bd
 8125 0d7f D9000000 		.4byte	0xd9
 8126 0d83 02       		.uleb128 0x2
 8127 0d84 91       		.byte	0x91
 8128 0d85 6C       		.sleb128 -20
 8129 0d86 15       		.uleb128 0x15
 8130 0d87 736200   		.ascii	"sb\000"
 8131 0d8a 01       		.byte	0x1
 8132 0d8b BE01     		.2byte	0x1be
 8133 0d8d D9000000 		.4byte	0xd9
 8134 0d91 02       		.uleb128 0x2
 8135 0d92 91       		.byte	0x91
 8136 0d93 68       		.sleb128 -24
 8137 0d94 12       		.uleb128 0x12
 8138 0d95 26000000 		.4byte	.LBB11
 8139 0d99 10000000 		.4byte	.LBE11-.LBB11
 8140 0d9d AF0D0000 		.4byte	0xdaf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 165


 8141 0da1 15       		.uleb128 0x15
 8142 0da2 7400     		.ascii	"t\000"
 8143 0da4 01       		.byte	0x1
 8144 0da5 A001     		.2byte	0x1a0
 8145 0da7 C3000000 		.4byte	0xc3
 8146 0dab 02       		.uleb128 0x2
 8147 0dac 91       		.byte	0x91
 8148 0dad 66       		.sleb128 -26
 8149 0dae 00       		.byte	0
 8150 0daf 12       		.uleb128 0x12
 8151 0db0 36000000 		.4byte	.LBB12
 8152 0db4 0C000000 		.4byte	.LBE12-.LBB12
 8153 0db8 CA0D0000 		.4byte	0xdca
 8154 0dbc 15       		.uleb128 0x15
 8155 0dbd 7400     		.ascii	"t\000"
 8156 0dbf 01       		.byte	0x1
 8157 0dc0 A001     		.2byte	0x1a0
 8158 0dc2 C3000000 		.4byte	0xc3
 8159 0dc6 02       		.uleb128 0x2
 8160 0dc7 91       		.byte	0x91
 8161 0dc8 64       		.sleb128 -28
 8162 0dc9 00       		.byte	0
 8163 0dca 12       		.uleb128 0x12
 8164 0dcb 4E000000 		.4byte	.LBB13
 8165 0dcf 14000000 		.4byte	.LBE13-.LBB13
 8166 0dd3 E50D0000 		.4byte	0xde5
 8167 0dd7 15       		.uleb128 0x15
 8168 0dd8 7400     		.ascii	"t\000"
 8169 0dda 01       		.byte	0x1
 8170 0ddb A301     		.2byte	0x1a3
 8171 0ddd C3000000 		.4byte	0xc3
 8172 0de1 02       		.uleb128 0x2
 8173 0de2 91       		.byte	0x91
 8174 0de3 62       		.sleb128 -30
 8175 0de4 00       		.byte	0
 8176 0de5 12       		.uleb128 0x12
 8177 0de6 62000000 		.4byte	.LBB14
 8178 0dea 10000000 		.4byte	.LBE14-.LBB14
 8179 0dee 000E0000 		.4byte	0xe00
 8180 0df2 15       		.uleb128 0x15
 8181 0df3 7400     		.ascii	"t\000"
 8182 0df5 01       		.byte	0x1
 8183 0df6 A301     		.2byte	0x1a3
 8184 0df8 C3000000 		.4byte	0xc3
 8185 0dfc 02       		.uleb128 0x2
 8186 0dfd 91       		.byte	0x91
 8187 0dfe 60       		.sleb128 -32
 8188 0dff 00       		.byte	0
 8189 0e00 12       		.uleb128 0x12
 8190 0e01 7E000000 		.4byte	.LBB15
 8191 0e05 10000000 		.4byte	.LBE15-.LBB15
 8192 0e09 1B0E0000 		.4byte	0xe1b
 8193 0e0d 15       		.uleb128 0x15
 8194 0e0e 7400     		.ascii	"t\000"
 8195 0e10 01       		.byte	0x1
 8196 0e11 A601     		.2byte	0x1a6
 8197 0e13 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 166


 8198 0e17 02       		.uleb128 0x2
 8199 0e18 91       		.byte	0x91
 8200 0e19 5E       		.sleb128 -34
 8201 0e1a 00       		.byte	0
 8202 0e1b 12       		.uleb128 0x12
 8203 0e1c 8E000000 		.4byte	.LBB16
 8204 0e20 0C000000 		.4byte	.LBE16-.LBB16
 8205 0e24 360E0000 		.4byte	0xe36
 8206 0e28 15       		.uleb128 0x15
 8207 0e29 7400     		.ascii	"t\000"
 8208 0e2b 01       		.byte	0x1
 8209 0e2c A601     		.2byte	0x1a6
 8210 0e2e C3000000 		.4byte	0xc3
 8211 0e32 02       		.uleb128 0x2
 8212 0e33 91       		.byte	0x91
 8213 0e34 5C       		.sleb128 -36
 8214 0e35 00       		.byte	0
 8215 0e36 12       		.uleb128 0x12
 8216 0e37 D8010000 		.4byte	.LBB17
 8217 0e3b 0C000000 		.4byte	.LBE17-.LBB17
 8218 0e3f 510E0000 		.4byte	0xe51
 8219 0e43 15       		.uleb128 0x15
 8220 0e44 7400     		.ascii	"t\000"
 8221 0e46 01       		.byte	0x1
 8222 0e47 D201     		.2byte	0x1d2
 8223 0e49 C3000000 		.4byte	0xc3
 8224 0e4d 02       		.uleb128 0x2
 8225 0e4e 91       		.byte	0x91
 8226 0e4f 4E       		.sleb128 -50
 8227 0e50 00       		.byte	0
 8228 0e51 13       		.uleb128 0x13
 8229 0e52 92020000 		.4byte	.LBB18
 8230 0e56 0C000000 		.4byte	.LBE18-.LBB18
 8231 0e5a 15       		.uleb128 0x15
 8232 0e5b 7400     		.ascii	"t\000"
 8233 0e5d 01       		.byte	0x1
 8234 0e5e E301     		.2byte	0x1e3
 8235 0e60 C3000000 		.4byte	0xc3
 8236 0e64 02       		.uleb128 0x2
 8237 0e65 91       		.byte	0x91
 8238 0e66 4C       		.sleb128 -52
 8239 0e67 00       		.byte	0
 8240 0e68 00       		.byte	0
 8241 0e69 16       		.uleb128 0x16
 8242 0e6a 68060000 		.4byte	.LASF93
 8243 0e6e 01       		.byte	0x1
 8244 0e6f F001     		.2byte	0x1f0
 8245 0e71 00000000 		.4byte	.LFB87
 8246 0e75 D8000000 		.4byte	.LFE87-.LFB87
 8247 0e79 01       		.uleb128 0x1
 8248 0e7a 9C       		.byte	0x9c
 8249 0e7b 5F0F0000 		.4byte	0xf5f
 8250 0e7f 17       		.uleb128 0x17
 8251 0e80 53040000 		.4byte	.LASF58
 8252 0e84 01       		.byte	0x1
 8253 0e85 F001     		.2byte	0x1f0
 8254 0e87 EA020000 		.4byte	0x2ea
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 167


 8255 0e8b 02       		.uleb128 0x2
 8256 0e8c 91       		.byte	0x91
 8257 0e8d 6C       		.sleb128 -20
 8258 0e8e 18       		.uleb128 0x18
 8259 0e8f 7800     		.ascii	"x\000"
 8260 0e91 01       		.byte	0x1
 8261 0e92 F001     		.2byte	0x1f0
 8262 0e94 C3000000 		.4byte	0xc3
 8263 0e98 02       		.uleb128 0x2
 8264 0e99 91       		.byte	0x91
 8265 0e9a 6A       		.sleb128 -22
 8266 0e9b 18       		.uleb128 0x18
 8267 0e9c 7900     		.ascii	"y\000"
 8268 0e9e 01       		.byte	0x1
 8269 0e9f F001     		.2byte	0x1f0
 8270 0ea1 C3000000 		.4byte	0xc3
 8271 0ea5 02       		.uleb128 0x2
 8272 0ea6 91       		.byte	0x91
 8273 0ea7 68       		.sleb128 -24
 8274 0ea8 17       		.uleb128 0x17
 8275 0ea9 1C060000 		.4byte	.LASF28
 8276 0ead 01       		.byte	0x1
 8277 0eae F101     		.2byte	0x1f1
 8278 0eb0 90010000 		.4byte	0x190
 8279 0eb4 02       		.uleb128 0x2
 8280 0eb5 91       		.byte	0x91
 8281 0eb6 64       		.sleb128 -28
 8282 0eb7 18       		.uleb128 0x18
 8283 0eb8 7700     		.ascii	"w\000"
 8284 0eba 01       		.byte	0x1
 8285 0ebb F101     		.2byte	0x1f1
 8286 0ebd C3000000 		.4byte	0xc3
 8287 0ec1 02       		.uleb128 0x2
 8288 0ec2 91       		.byte	0x91
 8289 0ec3 00       		.sleb128 0
 8290 0ec4 18       		.uleb128 0x18
 8291 0ec5 6800     		.ascii	"h\000"
 8292 0ec7 01       		.byte	0x1
 8293 0ec8 F101     		.2byte	0x1f1
 8294 0eca C3000000 		.4byte	0xc3
 8295 0ece 02       		.uleb128 0x2
 8296 0ecf 91       		.byte	0x91
 8297 0ed0 04       		.sleb128 4
 8298 0ed1 17       		.uleb128 0x17
 8299 0ed2 28050000 		.4byte	.LASF59
 8300 0ed6 01       		.byte	0x1
 8301 0ed7 F101     		.2byte	0x1f1
 8302 0ed9 CE000000 		.4byte	0xce
 8303 0edd 02       		.uleb128 0x2
 8304 0ede 91       		.byte	0x91
 8305 0edf 08       		.sleb128 8
 8306 0ee0 18       		.uleb128 0x18
 8307 0ee1 626700   		.ascii	"bg\000"
 8308 0ee4 01       		.byte	0x1
 8309 0ee5 F101     		.2byte	0x1f1
 8310 0ee7 CE000000 		.4byte	0xce
 8311 0eeb 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 168


 8312 0eec 91       		.byte	0x91
 8313 0eed 0C       		.sleb128 12
 8314 0eee 14       		.uleb128 0x14
 8315 0eef C6030000 		.4byte	.LASF94
 8316 0ef3 01       		.byte	0x1
 8317 0ef4 F701     		.2byte	0x1f7
 8318 0ef6 C3000000 		.4byte	0xc3
 8319 0efa 02       		.uleb128 0x2
 8320 0efb 91       		.byte	0x91
 8321 0efc 70       		.sleb128 -16
 8322 0efd 14       		.uleb128 0x14
 8323 0efe EA050000 		.4byte	.LASF95
 8324 0f02 01       		.byte	0x1
 8325 0f03 F801     		.2byte	0x1f8
 8326 0f05 B8000000 		.4byte	0xb8
 8327 0f09 02       		.uleb128 0x2
 8328 0f0a 91       		.byte	0x91
 8329 0f0b 77       		.sleb128 -9
 8330 0f0c 19       		.uleb128 0x19
 8331 0f0d 92040000 		.4byte	.LASF96
 8332 0f11 01       		.byte	0x1
 8333 0f12 F901     		.2byte	0x1f9
 8334 0f14 9F000000 		.4byte	0x9f
 8335 0f18 1E0F0000 		.4byte	0xf1e
 8336 0f1c 10       		.uleb128 0x10
 8337 0f1d 00       		.byte	0
 8338 0f1e 19       		.uleb128 0x19
 8339 0f1f BB050000 		.4byte	.LASF97
 8340 0f23 01       		.byte	0x1
 8341 0f24 0102     		.2byte	0x201
 8342 0f26 9F000000 		.4byte	0x9f
 8343 0f2a 300F0000 		.4byte	0xf30
 8344 0f2e 10       		.uleb128 0x10
 8345 0f2f 00       		.byte	0
 8346 0f30 13       		.uleb128 0x13
 8347 0f31 2A000000 		.4byte	.LBB19
 8348 0f35 A2000000 		.4byte	.LBE19-.LBB19
 8349 0f39 15       		.uleb128 0x15
 8350 0f3a 6A00     		.ascii	"j\000"
 8351 0f3c 01       		.byte	0x1
 8352 0f3d FA01     		.2byte	0x1fa
 8353 0f3f C3000000 		.4byte	0xc3
 8354 0f43 02       		.uleb128 0x2
 8355 0f44 91       		.byte	0x91
 8356 0f45 74       		.sleb128 -12
 8357 0f46 13       		.uleb128 0x13
 8358 0f47 30000000 		.4byte	.LBB20
 8359 0f4b 78000000 		.4byte	.LBE20-.LBB20
 8360 0f4f 15       		.uleb128 0x15
 8361 0f50 6900     		.ascii	"i\000"
 8362 0f52 01       		.byte	0x1
 8363 0f53 FB01     		.2byte	0x1fb
 8364 0f55 C3000000 		.4byte	0xc3
 8365 0f59 02       		.uleb128 0x2
 8366 0f5a 91       		.byte	0x91
 8367 0f5b 72       		.sleb128 -14
 8368 0f5c 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 169


 8369 0f5d 00       		.byte	0
 8370 0f5e 00       		.byte	0
 8371 0f5f 16       		.uleb128 0x16
 8372 0f60 97060000 		.4byte	.LASF98
 8373 0f64 01       		.byte	0x1
 8374 0f65 0A02     		.2byte	0x20a
 8375 0f67 00000000 		.4byte	.LFB88
 8376 0f6b 0C040000 		.4byte	.LFE88-.LFB88
 8377 0f6f 01       		.uleb128 0x1
 8378 0f70 9C       		.byte	0x9c
 8379 0f71 E7100000 		.4byte	0x10e7
 8380 0f75 17       		.uleb128 0x17
 8381 0f76 53040000 		.4byte	.LASF58
 8382 0f7a 01       		.byte	0x1
 8383 0f7b 0A02     		.2byte	0x20a
 8384 0f7d EA020000 		.4byte	0x2ea
 8385 0f81 02       		.uleb128 0x2
 8386 0f82 91       		.byte	0x91
 8387 0f83 4C       		.sleb128 -52
 8388 0f84 18       		.uleb128 0x18
 8389 0f85 7800     		.ascii	"x\000"
 8390 0f87 01       		.byte	0x1
 8391 0f88 0A02     		.2byte	0x20a
 8392 0f8a C3000000 		.4byte	0xc3
 8393 0f8e 02       		.uleb128 0x2
 8394 0f8f 91       		.byte	0x91
 8395 0f90 4A       		.sleb128 -54
 8396 0f91 18       		.uleb128 0x18
 8397 0f92 7900     		.ascii	"y\000"
 8398 0f94 01       		.byte	0x1
 8399 0f95 0A02     		.2byte	0x20a
 8400 0f97 C3000000 		.4byte	0xc3
 8401 0f9b 02       		.uleb128 0x2
 8402 0f9c 91       		.byte	0x91
 8403 0f9d 48       		.sleb128 -56
 8404 0f9e 18       		.uleb128 0x18
 8405 0f9f 6300     		.ascii	"c\000"
 8406 0fa1 01       		.byte	0x1
 8407 0fa2 0A02     		.2byte	0x20a
 8408 0fa4 42000000 		.4byte	0x42
 8409 0fa8 02       		.uleb128 0x2
 8410 0fa9 91       		.byte	0x91
 8411 0faa 47       		.sleb128 -57
 8412 0fab 17       		.uleb128 0x17
 8413 0fac 28050000 		.4byte	.LASF59
 8414 0fb0 01       		.byte	0x1
 8415 0fb1 0B02     		.2byte	0x20b
 8416 0fb3 CE000000 		.4byte	0xce
 8417 0fb7 02       		.uleb128 0x2
 8418 0fb8 91       		.byte	0x91
 8419 0fb9 00       		.sleb128 0
 8420 0fba 18       		.uleb128 0x18
 8421 0fbb 626700   		.ascii	"bg\000"
 8422 0fbe 01       		.byte	0x1
 8423 0fbf 0B02     		.2byte	0x20b
 8424 0fc1 CE000000 		.4byte	0xce
 8425 0fc5 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 170


 8426 0fc6 91       		.byte	0x91
 8427 0fc7 04       		.sleb128 4
 8428 0fc8 17       		.uleb128 0x17
 8429 0fc9 07040000 		.4byte	.LASF99
 8430 0fcd 01       		.byte	0x1
 8431 0fce 0B02     		.2byte	0x20b
 8432 0fd0 B8000000 		.4byte	0xb8
 8433 0fd4 02       		.uleb128 0x2
 8434 0fd5 91       		.byte	0x91
 8435 0fd6 08       		.sleb128 8
 8436 0fd7 12       		.uleb128 0x12
 8437 0fd8 82000000 		.4byte	.LBB21
 8438 0fdc 8C010000 		.4byte	.LBE21-.LBB21
 8439 0fe0 22100000 		.4byte	0x1022
 8440 0fe4 15       		.uleb128 0x15
 8441 0fe5 6900     		.ascii	"i\000"
 8442 0fe7 01       		.byte	0x1
 8443 0fe8 1802     		.2byte	0x218
 8444 0fea AD000000 		.4byte	0xad
 8445 0fee 02       		.uleb128 0x2
 8446 0fef 91       		.byte	0x91
 8447 0ff0 6F       		.sleb128 -17
 8448 0ff1 13       		.uleb128 0x13
 8449 0ff2 8A000000 		.4byte	.LBB22
 8450 0ff6 6C010000 		.4byte	.LBE22-.LBB22
 8451 0ffa 14       		.uleb128 0x14
 8452 0ffb 4E060000 		.4byte	.LASF100
 8453 0fff 01       		.byte	0x1
 8454 1000 1902     		.2byte	0x219
 8455 1002 B8000000 		.4byte	0xb8
 8456 1006 02       		.uleb128 0x2
 8457 1007 91       		.byte	0x91
 8458 1008 6E       		.sleb128 -18
 8459 1009 13       		.uleb128 0x13
 8460 100a AE000000 		.4byte	.LBB23
 8461 100e 48010000 		.4byte	.LBE23-.LBB23
 8462 1012 15       		.uleb128 0x15
 8463 1013 6A00     		.ascii	"j\000"
 8464 1015 01       		.byte	0x1
 8465 1016 1A02     		.2byte	0x21a
 8466 1018 AD000000 		.4byte	0xad
 8467 101c 02       		.uleb128 0x2
 8468 101d 91       		.byte	0x91
 8469 101e 6D       		.sleb128 -19
 8470 101f 00       		.byte	0
 8471 1020 00       		.byte	0
 8472 1021 00       		.byte	0
 8473 1022 13       		.uleb128 0x13
 8474 1023 80020000 		.4byte	.LBB24
 8475 1027 84010000 		.4byte	.LBE24-.LBB24
 8476 102b 14       		.uleb128 0x14
 8477 102c E4050000 		.4byte	.LASF29
 8478 1030 01       		.byte	0x1
 8479 1031 3502     		.2byte	0x235
 8480 1033 96010000 		.4byte	0x196
 8481 1037 02       		.uleb128 0x2
 8482 1038 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 171


 8483 1039 5C       		.sleb128 -36
 8484 103a 14       		.uleb128 0x14
 8485 103b 1C060000 		.4byte	.LASF28
 8486 103f 01       		.byte	0x1
 8487 1040 3602     		.2byte	0x236
 8488 1042 90010000 		.4byte	0x190
 8489 1046 02       		.uleb128 0x2
 8490 1047 91       		.byte	0x91
 8491 1048 58       		.sleb128 -40
 8492 1049 15       		.uleb128 0x15
 8493 104a 626F00   		.ascii	"bo\000"
 8494 104d 01       		.byte	0x1
 8495 104e 3802     		.2byte	0x238
 8496 1050 CE000000 		.4byte	0xce
 8497 1054 02       		.uleb128 0x2
 8498 1055 91       		.byte	0x91
 8499 1056 6A       		.sleb128 -22
 8500 1057 15       		.uleb128 0x15
 8501 1058 7700     		.ascii	"w\000"
 8502 105a 01       		.byte	0x1
 8503 105b 3902     		.2byte	0x239
 8504 105d B8000000 		.4byte	0xb8
 8505 1061 02       		.uleb128 0x2
 8506 1062 91       		.byte	0x91
 8507 1063 57       		.sleb128 -41
 8508 1064 15       		.uleb128 0x15
 8509 1065 6800     		.ascii	"h\000"
 8510 1067 01       		.byte	0x1
 8511 1068 3A02     		.2byte	0x23a
 8512 106a B8000000 		.4byte	0xb8
 8513 106e 02       		.uleb128 0x2
 8514 106f 91       		.byte	0x91
 8515 1070 56       		.sleb128 -42
 8516 1071 15       		.uleb128 0x15
 8517 1072 786F00   		.ascii	"xo\000"
 8518 1075 01       		.byte	0x1
 8519 1076 3B02     		.2byte	0x23b
 8520 1078 AD000000 		.4byte	0xad
 8521 107c 02       		.uleb128 0x2
 8522 107d 91       		.byte	0x91
 8523 107e 55       		.sleb128 -43
 8524 107f 15       		.uleb128 0x15
 8525 1080 796F00   		.ascii	"yo\000"
 8526 1083 01       		.byte	0x1
 8527 1084 3C02     		.2byte	0x23c
 8528 1086 AD000000 		.4byte	0xad
 8529 108a 02       		.uleb128 0x2
 8530 108b 91       		.byte	0x91
 8531 108c 54       		.sleb128 -44
 8532 108d 15       		.uleb128 0x15
 8533 108e 787800   		.ascii	"xx\000"
 8534 1091 01       		.byte	0x1
 8535 1092 3D02     		.2byte	0x23d
 8536 1094 B8000000 		.4byte	0xb8
 8537 1098 02       		.uleb128 0x2
 8538 1099 91       		.byte	0x91
 8539 109a 69       		.sleb128 -23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 172


 8540 109b 15       		.uleb128 0x15
 8541 109c 797900   		.ascii	"yy\000"
 8542 109f 01       		.byte	0x1
 8543 10a0 3D02     		.2byte	0x23d
 8544 10a2 B8000000 		.4byte	0xb8
 8545 10a6 02       		.uleb128 0x2
 8546 10a7 91       		.byte	0x91
 8547 10a8 68       		.sleb128 -24
 8548 10a9 14       		.uleb128 0x14
 8549 10aa 72030000 		.4byte	.LASF101
 8550 10ae 01       		.byte	0x1
 8551 10af 3D02     		.2byte	0x23d
 8552 10b1 B8000000 		.4byte	0xb8
 8553 10b5 02       		.uleb128 0x2
 8554 10b6 91       		.byte	0x91
 8555 10b7 67       		.sleb128 -25
 8556 10b8 15       		.uleb128 0x15
 8557 10b9 62697400 		.ascii	"bit\000"
 8558 10bd 01       		.byte	0x1
 8559 10be 3D02     		.2byte	0x23d
 8560 10c0 B8000000 		.4byte	0xb8
 8561 10c4 02       		.uleb128 0x2
 8562 10c5 91       		.byte	0x91
 8563 10c6 66       		.sleb128 -26
 8564 10c7 14       		.uleb128 0x14
 8565 10c8 49070000 		.4byte	.LASF102
 8566 10cc 01       		.byte	0x1
 8567 10cd 3E02     		.2byte	0x23e
 8568 10cf C3000000 		.4byte	0xc3
 8569 10d3 02       		.uleb128 0x2
 8570 10d4 91       		.byte	0x91
 8571 10d5 64       		.sleb128 -28
 8572 10d6 14       		.uleb128 0x14
 8573 10d7 0C040000 		.4byte	.LASF103
 8574 10db 01       		.byte	0x1
 8575 10dc 3E02     		.2byte	0x23e
 8576 10de C3000000 		.4byte	0xc3
 8577 10e2 02       		.uleb128 0x2
 8578 10e3 91       		.byte	0x91
 8579 10e4 62       		.sleb128 -30
 8580 10e5 00       		.byte	0
 8581 10e6 00       		.byte	0
 8582 10e7 16       		.uleb128 0x16
 8583 10e8 3B060000 		.4byte	.LASF104
 8584 10ec 01       		.byte	0x1
 8585 10ed 6E02     		.2byte	0x26e
 8586 10ef 00000000 		.4byte	.LFB89
 8587 10f3 F8000000 		.4byte	.LFE89-.LFB89
 8588 10f7 01       		.uleb128 0x1
 8589 10f8 9C       		.byte	0x9c
 8590 10f9 44110000 		.4byte	0x1144
 8591 10fd 17       		.uleb128 0x17
 8592 10fe 53040000 		.4byte	.LASF58
 8593 1102 01       		.byte	0x1
 8594 1103 6E02     		.2byte	0x26e
 8595 1105 EA020000 		.4byte	0x2ea
 8596 1109 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 173


 8597 110a 91       		.byte	0x91
 8598 110b 6C       		.sleb128 -20
 8599 110c 17       		.uleb128 0x17
 8600 110d D2050000 		.4byte	.LASF105
 8601 1111 01       		.byte	0x1
 8602 1112 6E02     		.2byte	0x26e
 8603 1114 C3000000 		.4byte	0xc3
 8604 1118 02       		.uleb128 0x2
 8605 1119 91       		.byte	0x91
 8606 111a 6A       		.sleb128 -22
 8607 111b 13       		.uleb128 0x13
 8608 111c 50000000 		.4byte	.LBB25
 8609 1120 A0000000 		.4byte	.LBE25-.LBB25
 8610 1124 14       		.uleb128 0x14
 8611 1125 A6020000 		.4byte	.LASF106
 8612 1129 01       		.byte	0x1
 8613 112a 7502     		.2byte	0x275
 8614 112c C3000000 		.4byte	0xc3
 8615 1130 02       		.uleb128 0x2
 8616 1131 91       		.byte	0x91
 8617 1132 76       		.sleb128 -10
 8618 1133 14       		.uleb128 0x14
 8619 1134 40030000 		.4byte	.LASF107
 8620 1138 01       		.byte	0x1
 8621 1139 7F02     		.2byte	0x27f
 8622 113b CE000000 		.4byte	0xce
 8623 113f 02       		.uleb128 0x2
 8624 1140 91       		.byte	0x91
 8625 1141 74       		.sleb128 -12
 8626 1142 00       		.byte	0
 8627 1143 00       		.byte	0
 8628 1144 16       		.uleb128 0x16
 8629 1145 AC010000 		.4byte	.LASF108
 8630 1149 01       		.byte	0x1
 8631 114a 8B02     		.2byte	0x28b
 8632 114c 00000000 		.4byte	.LFB90
 8633 1150 9A010000 		.4byte	.LFE90-.LFB90
 8634 1154 01       		.uleb128 0x1
 8635 1155 9C       		.byte	0x9c
 8636 1156 DB110000 		.4byte	0x11db
 8637 115a 17       		.uleb128 0x17
 8638 115b 53040000 		.4byte	.LASF58
 8639 115f 01       		.byte	0x1
 8640 1160 8B02     		.2byte	0x28b
 8641 1162 EA020000 		.4byte	0x2ea
 8642 1166 02       		.uleb128 0x2
 8643 1167 91       		.byte	0x91
 8644 1168 5C       		.sleb128 -36
 8645 1169 18       		.uleb128 0x18
 8646 116a 6300     		.ascii	"c\000"
 8647 116c 01       		.byte	0x1
 8648 116d 8B02     		.2byte	0x28b
 8649 116f B8000000 		.4byte	0xb8
 8650 1173 02       		.uleb128 0x2
 8651 1174 91       		.byte	0x91
 8652 1175 5B       		.sleb128 -37
 8653 1176 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 174


 8654 1177 D4000000 		.4byte	.LBB26
 8655 117b BE000000 		.4byte	.LBE26-.LBB26
 8656 117f 14       		.uleb128 0x14
 8657 1180 62060000 		.4byte	.LASF30
 8658 1184 01       		.byte	0x1
 8659 1185 A202     		.2byte	0x2a2
 8660 1187 B8000000 		.4byte	0xb8
 8661 118b 02       		.uleb128 0x2
 8662 118c 91       		.byte	0x91
 8663 118d 6F       		.sleb128 -17
 8664 118e 13       		.uleb128 0x13
 8665 118f F2000000 		.4byte	.LBB27
 8666 1193 A0000000 		.4byte	.LBE27-.LBB27
 8667 1197 14       		.uleb128 0x14
 8668 1198 E4050000 		.4byte	.LASF29
 8669 119c 01       		.byte	0x1
 8670 119d A402     		.2byte	0x2a4
 8671 119f 96010000 		.4byte	0x196
 8672 11a3 02       		.uleb128 0x2
 8673 11a4 91       		.byte	0x91
 8674 11a5 68       		.sleb128 -24
 8675 11a6 15       		.uleb128 0x15
 8676 11a7 7700     		.ascii	"w\000"
 8677 11a9 01       		.byte	0x1
 8678 11aa A602     		.2byte	0x2a6
 8679 11ac B8000000 		.4byte	0xb8
 8680 11b0 02       		.uleb128 0x2
 8681 11b1 91       		.byte	0x91
 8682 11b2 67       		.sleb128 -25
 8683 11b3 15       		.uleb128 0x15
 8684 11b4 6800     		.ascii	"h\000"
 8685 11b6 01       		.byte	0x1
 8686 11b7 A702     		.2byte	0x2a7
 8687 11b9 B8000000 		.4byte	0xb8
 8688 11bd 02       		.uleb128 0x2
 8689 11be 91       		.byte	0x91
 8690 11bf 66       		.sleb128 -26
 8691 11c0 13       		.uleb128 0x13
 8692 11c1 1E010000 		.4byte	.LBB28
 8693 11c5 56000000 		.4byte	.LBE28-.LBB28
 8694 11c9 15       		.uleb128 0x15
 8695 11ca 786F00   		.ascii	"xo\000"
 8696 11cd 01       		.byte	0x1
 8697 11ce A902     		.2byte	0x2a9
 8698 11d0 C3000000 		.4byte	0xc3
 8699 11d4 02       		.uleb128 0x2
 8700 11d5 91       		.byte	0x91
 8701 11d6 64       		.sleb128 -28
 8702 11d7 00       		.byte	0
 8703 11d8 00       		.byte	0
 8704 11d9 00       		.byte	0
 8705 11da 00       		.byte	0
 8706 11db 1A       		.uleb128 0x1a
 8707 11dc 74040000 		.4byte	.LASF109
 8708 11e0 01       		.byte	0x1
 8709 11e1 B902     		.2byte	0x2b9
 8710 11e3 00000000 		.4byte	.LFB91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 175


 8711 11e7 26000000 		.4byte	.LFE91-.LFB91
 8712 11eb 01       		.uleb128 0x1
 8713 11ec 9C       		.byte	0x9c
 8714 11ed 1B120000 		.4byte	0x121b
 8715 11f1 17       		.uleb128 0x17
 8716 11f2 53040000 		.4byte	.LASF58
 8717 11f6 01       		.byte	0x1
 8718 11f7 B902     		.2byte	0x2b9
 8719 11f9 EA020000 		.4byte	0x2ea
 8720 11fd 02       		.uleb128 0x2
 8721 11fe 91       		.byte	0x91
 8722 11ff 74       		.sleb128 -12
 8723 1200 18       		.uleb128 0x18
 8724 1201 7800     		.ascii	"x\000"
 8725 1203 01       		.byte	0x1
 8726 1204 B902     		.2byte	0x2b9
 8727 1206 C3000000 		.4byte	0xc3
 8728 120a 02       		.uleb128 0x2
 8729 120b 91       		.byte	0x91
 8730 120c 72       		.sleb128 -14
 8731 120d 18       		.uleb128 0x18
 8732 120e 7900     		.ascii	"y\000"
 8733 1210 01       		.byte	0x1
 8734 1211 B902     		.2byte	0x2b9
 8735 1213 C3000000 		.4byte	0xc3
 8736 1217 02       		.uleb128 0x2
 8737 1218 91       		.byte	0x91
 8738 1219 70       		.sleb128 -16
 8739 121a 00       		.byte	0
 8740 121b 1B       		.uleb128 0x1b
 8741 121c 5E050000 		.4byte	.LASF110
 8742 1220 01       		.byte	0x1
 8743 1221 BE02     		.2byte	0x2be
 8744 1223 C3000000 		.4byte	0xc3
 8745 1227 00000000 		.4byte	.LFB92
 8746 122b 18000000 		.4byte	.LFE92-.LFB92
 8747 122f 01       		.uleb128 0x1
 8748 1230 9C       		.byte	0x9c
 8749 1231 45120000 		.4byte	0x1245
 8750 1235 17       		.uleb128 0x17
 8751 1236 53040000 		.4byte	.LASF58
 8752 123a 01       		.byte	0x1
 8753 123b BE02     		.2byte	0x2be
 8754 123d EA020000 		.4byte	0x2ea
 8755 1241 02       		.uleb128 0x2
 8756 1242 91       		.byte	0x91
 8757 1243 74       		.sleb128 -12
 8758 1244 00       		.byte	0
 8759 1245 1B       		.uleb128 0x1b
 8760 1246 6C050000 		.4byte	.LASF111
 8761 124a 01       		.byte	0x1
 8762 124b C302     		.2byte	0x2c3
 8763 124d C3000000 		.4byte	0xc3
 8764 1251 00000000 		.4byte	.LFB93
 8765 1255 18000000 		.4byte	.LFE93-.LFB93
 8766 1259 01       		.uleb128 0x1
 8767 125a 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 176


 8768 125b 6F120000 		.4byte	0x126f
 8769 125f 17       		.uleb128 0x17
 8770 1260 53040000 		.4byte	.LASF58
 8771 1264 01       		.byte	0x1
 8772 1265 C302     		.2byte	0x2c3
 8773 1267 EA020000 		.4byte	0x2ea
 8774 126b 02       		.uleb128 0x2
 8775 126c 91       		.byte	0x91
 8776 126d 74       		.sleb128 -12
 8777 126e 00       		.byte	0
 8778 126f 1A       		.uleb128 0x1a
 8779 1270 3B040000 		.4byte	.LASF112
 8780 1274 01       		.byte	0x1
 8781 1275 C802     		.2byte	0x2c8
 8782 1277 00000000 		.4byte	.LFB94
 8783 127b 28000000 		.4byte	.LFE94-.LFB94
 8784 127f 01       		.uleb128 0x1
 8785 1280 9C       		.byte	0x9c
 8786 1281 A2120000 		.4byte	0x12a2
 8787 1285 17       		.uleb128 0x17
 8788 1286 53040000 		.4byte	.LASF58
 8789 128a 01       		.byte	0x1
 8790 128b C802     		.2byte	0x2c8
 8791 128d EA020000 		.4byte	0x2ea
 8792 1291 02       		.uleb128 0x2
 8793 1292 91       		.byte	0x91
 8794 1293 74       		.sleb128 -12
 8795 1294 18       		.uleb128 0x18
 8796 1295 7300     		.ascii	"s\000"
 8797 1297 01       		.byte	0x1
 8798 1298 C802     		.2byte	0x2c8
 8799 129a B8000000 		.4byte	0xb8
 8800 129e 02       		.uleb128 0x2
 8801 129f 91       		.byte	0x91
 8802 12a0 73       		.sleb128 -13
 8803 12a1 00       		.byte	0
 8804 12a2 1A       		.uleb128 0x1a
 8805 12a3 71000000 		.4byte	.LASF113
 8806 12a7 01       		.byte	0x1
 8807 12a8 CC02     		.2byte	0x2cc
 8808 12aa 00000000 		.4byte	.LFB95
 8809 12ae 26000000 		.4byte	.LFE95-.LFB95
 8810 12b2 01       		.uleb128 0x1
 8811 12b3 9C       		.byte	0x9c
 8812 12b4 E2120000 		.4byte	0x12e2
 8813 12b8 17       		.uleb128 0x17
 8814 12b9 53040000 		.4byte	.LASF58
 8815 12bd 01       		.byte	0x1
 8816 12be CC02     		.2byte	0x2cc
 8817 12c0 EA020000 		.4byte	0x2ea
 8818 12c4 02       		.uleb128 0x2
 8819 12c5 91       		.byte	0x91
 8820 12c6 74       		.sleb128 -12
 8821 12c7 18       		.uleb128 0x18
 8822 12c8 6300     		.ascii	"c\000"
 8823 12ca 01       		.byte	0x1
 8824 12cb CC02     		.2byte	0x2cc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 177


 8825 12cd CE000000 		.4byte	0xce
 8826 12d1 02       		.uleb128 0x2
 8827 12d2 91       		.byte	0x91
 8828 12d3 72       		.sleb128 -14
 8829 12d4 18       		.uleb128 0x18
 8830 12d5 6200     		.ascii	"b\000"
 8831 12d7 01       		.byte	0x1
 8832 12d8 CC02     		.2byte	0x2cc
 8833 12da CE000000 		.4byte	0xce
 8834 12de 02       		.uleb128 0x2
 8835 12df 91       		.byte	0x91
 8836 12e0 70       		.sleb128 -16
 8837 12e1 00       		.byte	0
 8838 12e2 1A       		.uleb128 0x1a
 8839 12e3 53060000 		.4byte	.LASF114
 8840 12e7 01       		.byte	0x1
 8841 12e8 D102     		.2byte	0x2d1
 8842 12ea 00000000 		.4byte	.LFB96
 8843 12ee 1E000000 		.4byte	.LFE96-.LFB96
 8844 12f2 01       		.uleb128 0x1
 8845 12f3 9C       		.byte	0x9c
 8846 12f4 15130000 		.4byte	0x1315
 8847 12f8 17       		.uleb128 0x17
 8848 12f9 53040000 		.4byte	.LASF58
 8849 12fd 01       		.byte	0x1
 8850 12fe D102     		.2byte	0x2d1
 8851 1300 EA020000 		.4byte	0x2ea
 8852 1304 02       		.uleb128 0x2
 8853 1305 91       		.byte	0x91
 8854 1306 74       		.sleb128 -12
 8855 1307 18       		.uleb128 0x18
 8856 1308 7700     		.ascii	"w\000"
 8857 130a 01       		.byte	0x1
 8858 130b D102     		.2byte	0x2d1
 8859 130d B8000000 		.4byte	0xb8
 8860 1311 02       		.uleb128 0x2
 8861 1312 91       		.byte	0x91
 8862 1313 73       		.sleb128 -13
 8863 1314 00       		.byte	0
 8864 1315 1B       		.uleb128 0x1b
 8865 1316 4E070000 		.4byte	.LASF115
 8866 131a 01       		.byte	0x1
 8867 131b D502     		.2byte	0x2d5
 8868 131d B8000000 		.4byte	0xb8
 8869 1321 00000000 		.4byte	.LFB97
 8870 1325 18000000 		.4byte	.LFE97-.LFB97
 8871 1329 01       		.uleb128 0x1
 8872 132a 9C       		.byte	0x9c
 8873 132b 3F130000 		.4byte	0x133f
 8874 132f 17       		.uleb128 0x17
 8875 1330 53040000 		.4byte	.LASF58
 8876 1334 01       		.byte	0x1
 8877 1335 D502     		.2byte	0x2d5
 8878 1337 EA020000 		.4byte	0x2ea
 8879 133b 02       		.uleb128 0x2
 8880 133c 91       		.byte	0x91
 8881 133d 74       		.sleb128 -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 178


 8882 133e 00       		.byte	0
 8883 133f 1A       		.uleb128 0x1a
 8884 1340 B5010000 		.4byte	.LASF116
 8885 1344 01       		.byte	0x1
 8886 1345 D902     		.2byte	0x2d9
 8887 1347 00000000 		.4byte	.LFB98
 8888 134b 76000000 		.4byte	.LFE98-.LFB98
 8889 134f 01       		.uleb128 0x1
 8890 1350 9C       		.byte	0x9c
 8891 1351 72130000 		.4byte	0x1372
 8892 1355 17       		.uleb128 0x17
 8893 1356 53040000 		.4byte	.LASF58
 8894 135a 01       		.byte	0x1
 8895 135b D902     		.2byte	0x2d9
 8896 135d EA020000 		.4byte	0x2ea
 8897 1361 02       		.uleb128 0x2
 8898 1362 91       		.byte	0x91
 8899 1363 74       		.sleb128 -12
 8900 1364 18       		.uleb128 0x18
 8901 1365 7800     		.ascii	"x\000"
 8902 1367 01       		.byte	0x1
 8903 1368 D902     		.2byte	0x2d9
 8904 136a B8000000 		.4byte	0xb8
 8905 136e 02       		.uleb128 0x2
 8906 136f 91       		.byte	0x91
 8907 1370 73       		.sleb128 -13
 8908 1371 00       		.byte	0
 8909 1372 1A       		.uleb128 0x1a
 8910 1373 D9040000 		.4byte	.LASF117
 8911 1377 01       		.byte	0x1
 8912 1378 F002     		.2byte	0x2f0
 8913 137a 00000000 		.4byte	.LFB99
 8914 137e 1E000000 		.4byte	.LFE99-.LFB99
 8915 1382 01       		.uleb128 0x1
 8916 1383 9C       		.byte	0x9c
 8917 1384 A5130000 		.4byte	0x13a5
 8918 1388 17       		.uleb128 0x17
 8919 1389 53040000 		.4byte	.LASF58
 8920 138d 01       		.byte	0x1
 8921 138e F002     		.2byte	0x2f0
 8922 1390 EA020000 		.4byte	0x2ea
 8923 1394 02       		.uleb128 0x2
 8924 1395 91       		.byte	0x91
 8925 1396 74       		.sleb128 -12
 8926 1397 18       		.uleb128 0x18
 8927 1398 7800     		.ascii	"x\000"
 8928 139a 01       		.byte	0x1
 8929 139b F002     		.2byte	0x2f0
 8930 139d B8000000 		.4byte	0xb8
 8931 13a1 02       		.uleb128 0x2
 8932 13a2 91       		.byte	0x91
 8933 13a3 73       		.sleb128 -13
 8934 13a4 00       		.byte	0
 8935 13a5 1A       		.uleb128 0x1a
 8936 13a6 41020000 		.4byte	.LASF118
 8937 13aa 01       		.byte	0x1
 8938 13ab F402     		.2byte	0x2f4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 179


 8939 13ad 00000000 		.4byte	.LFB100
 8940 13b1 DC000000 		.4byte	.LFE100-.LFB100
 8941 13b5 01       		.uleb128 0x1
 8942 13b6 9C       		.byte	0x9c
 8943 13b7 4C140000 		.4byte	0x144c
 8944 13bb 17       		.uleb128 0x17
 8945 13bc 53040000 		.4byte	.LASF58
 8946 13c0 01       		.byte	0x1
 8947 13c1 F402     		.2byte	0x2f4
 8948 13c3 EA020000 		.4byte	0x2ea
 8949 13c7 02       		.uleb128 0x2
 8950 13c8 91       		.byte	0x91
 8951 13c9 64       		.sleb128 -28
 8952 13ca 18       		.uleb128 0x18
 8953 13cb 6600     		.ascii	"f\000"
 8954 13cd 01       		.byte	0x1
 8955 13ce F402     		.2byte	0x2f4
 8956 13d0 4C140000 		.4byte	0x144c
 8957 13d4 02       		.uleb128 0x2
 8958 13d5 91       		.byte	0x91
 8959 13d6 60       		.sleb128 -32
 8960 13d7 13       		.uleb128 0x13
 8961 13d8 2E000000 		.4byte	.LBB29
 8962 13dc 7C000000 		.4byte	.LBE29-.LBB29
 8963 13e0 14       		.uleb128 0x14
 8964 13e1 62060000 		.4byte	.LASF30
 8965 13e5 01       		.byte	0x1
 8966 13e6 0603     		.2byte	0x306
 8967 13e8 B8000000 		.4byte	0xb8
 8968 13ec 02       		.uleb128 0x2
 8969 13ed 91       		.byte	0x91
 8970 13ee 76       		.sleb128 -10
 8971 13ef 14       		.uleb128 0x14
 8972 13f0 0E000000 		.4byte	.LASF31
 8973 13f4 01       		.byte	0x1
 8974 13f5 0703     		.2byte	0x307
 8975 13f7 B8000000 		.4byte	0xb8
 8976 13fb 02       		.uleb128 0x2
 8977 13fc 91       		.byte	0x91
 8978 13fd 75       		.sleb128 -11
 8979 13fe 13       		.uleb128 0x13
 8980 13ff 44000000 		.4byte	.LBB30
 8981 1403 5A000000 		.4byte	.LBE30-.LBB30
 8982 1407 15       		.uleb128 0x15
 8983 1408 6900     		.ascii	"i\000"
 8984 140a 01       		.byte	0x1
 8985 140b 0803     		.2byte	0x308
 8986 140d B8000000 		.4byte	0xb8
 8987 1411 02       		.uleb128 0x2
 8988 1412 91       		.byte	0x91
 8989 1413 77       		.sleb128 -9
 8990 1414 13       		.uleb128 0x13
 8991 1415 4A000000 		.4byte	.LBB31
 8992 1419 46000000 		.4byte	.LBE31-.LBB31
 8993 141d 14       		.uleb128 0x14
 8994 141e E4050000 		.4byte	.LASF29
 8995 1422 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 180


 8996 1423 0A03     		.2byte	0x30a
 8997 1425 96010000 		.4byte	0x196
 8998 1429 02       		.uleb128 0x2
 8999 142a 91       		.byte	0x91
 9000 142b 70       		.sleb128 -16
 9001 142c 15       		.uleb128 0x15
 9002 142d 676800   		.ascii	"gh\000"
 9003 1430 01       		.byte	0x1
 9004 1431 0B03     		.2byte	0x30b
 9005 1433 B8000000 		.4byte	0xb8
 9006 1437 02       		.uleb128 0x2
 9007 1438 91       		.byte	0x91
 9008 1439 6F       		.sleb128 -17
 9009 143a 15       		.uleb128 0x15
 9010 143b 796F00   		.ascii	"yo\000"
 9011 143e 01       		.byte	0x1
 9012 143f 0C03     		.2byte	0x30c
 9013 1441 AD000000 		.4byte	0xad
 9014 1445 02       		.uleb128 0x2
 9015 1446 91       		.byte	0x91
 9016 1447 6E       		.sleb128 -18
 9017 1448 00       		.byte	0
 9018 1449 00       		.byte	0
 9019 144a 00       		.byte	0
 9020 144b 00       		.byte	0
 9021 144c 07       		.uleb128 0x7
 9022 144d 04       		.byte	0x4
 9023 144e 52140000 		.4byte	0x1452
 9024 1452 1C       		.uleb128 0x1c
 9025 1453 9C010000 		.4byte	0x19c
 9026 1457 1A       		.uleb128 0x1a
 9027 1458 3C000000 		.4byte	.LASF119
 9028 145c 01       		.byte	0x1
 9029 145d 3203     		.2byte	0x332
 9030 145f 00000000 		.4byte	.LFB101
 9031 1463 30030000 		.4byte	.LFE101-.LFB101
 9032 1467 01       		.uleb128 0x1
 9033 1468 9C       		.byte	0x9c
 9034 1469 D7150000 		.4byte	0x15d7
 9035 146d 17       		.uleb128 0x17
 9036 146e 53040000 		.4byte	.LASF58
 9037 1472 01       		.byte	0x1
 9038 1473 3203     		.2byte	0x332
 9039 1475 EA020000 		.4byte	0x2ea
 9040 1479 02       		.uleb128 0x2
 9041 147a 91       		.byte	0x91
 9042 147b 54       		.sleb128 -44
 9043 147c 18       		.uleb128 0x18
 9044 147d 6300     		.ascii	"c\000"
 9045 147f 01       		.byte	0x1
 9046 1480 3203     		.2byte	0x332
 9047 1482 B5010000 		.4byte	0x1b5
 9048 1486 02       		.uleb128 0x2
 9049 1487 91       		.byte	0x91
 9050 1488 53       		.sleb128 -45
 9051 1489 18       		.uleb128 0x18
 9052 148a 7800     		.ascii	"x\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 181


 9053 148c 01       		.byte	0x1
 9054 148d 3203     		.2byte	0x332
 9055 148f D7150000 		.4byte	0x15d7
 9056 1493 02       		.uleb128 0x2
 9057 1494 91       		.byte	0x91
 9058 1495 4C       		.sleb128 -52
 9059 1496 18       		.uleb128 0x18
 9060 1497 7900     		.ascii	"y\000"
 9061 1499 01       		.byte	0x1
 9062 149a 3203     		.2byte	0x332
 9063 149c D7150000 		.4byte	0x15d7
 9064 14a0 02       		.uleb128 0x2
 9065 14a1 91       		.byte	0x91
 9066 14a2 48       		.sleb128 -56
 9067 14a3 17       		.uleb128 0x17
 9068 14a4 47030000 		.4byte	.LASF120
 9069 14a8 01       		.byte	0x1
 9070 14a9 3303     		.2byte	0x333
 9071 14ab D7150000 		.4byte	0x15d7
 9072 14af 02       		.uleb128 0x2
 9073 14b0 91       		.byte	0x91
 9074 14b1 00       		.sleb128 0
 9075 14b2 17       		.uleb128 0x17
 9076 14b3 4C030000 		.4byte	.LASF121
 9077 14b7 01       		.byte	0x1
 9078 14b8 3303     		.2byte	0x333
 9079 14ba D7150000 		.4byte	0x15d7
 9080 14be 02       		.uleb128 0x2
 9081 14bf 91       		.byte	0x91
 9082 14c0 04       		.sleb128 4
 9083 14c1 17       		.uleb128 0x17
 9084 14c2 59050000 		.4byte	.LASF122
 9085 14c6 01       		.byte	0x1
 9086 14c7 3303     		.2byte	0x333
 9087 14c9 D7150000 		.4byte	0x15d7
 9088 14cd 02       		.uleb128 0x2
 9089 14ce 91       		.byte	0x91
 9090 14cf 08       		.sleb128 8
 9091 14d0 17       		.uleb128 0x17
 9092 14d1 FB060000 		.4byte	.LASF123
 9093 14d5 01       		.byte	0x1
 9094 14d6 3303     		.2byte	0x333
 9095 14d8 D7150000 		.4byte	0x15d7
 9096 14dc 02       		.uleb128 0x2
 9097 14dd 91       		.byte	0x91
 9098 14de 0C       		.sleb128 12
 9099 14df 12       		.uleb128 0x12
 9100 14e0 56000000 		.4byte	.LBB32
 9101 14e4 A8010000 		.4byte	.LBE32-.LBB32
 9102 14e8 B0150000 		.4byte	0x15b0
 9103 14ec 14       		.uleb128 0x14
 9104 14ed 62060000 		.4byte	.LASF30
 9105 14f1 01       		.byte	0x1
 9106 14f2 3B03     		.2byte	0x33b
 9107 14f4 B8000000 		.4byte	0xb8
 9108 14f8 02       		.uleb128 0x2
 9109 14f9 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 182


 9110 14fa 77       		.sleb128 -9
 9111 14fb 14       		.uleb128 0x14
 9112 14fc 0E000000 		.4byte	.LASF31
 9113 1500 01       		.byte	0x1
 9114 1501 3C03     		.2byte	0x33c
 9115 1503 B8000000 		.4byte	0xb8
 9116 1507 02       		.uleb128 0x2
 9117 1508 91       		.byte	0x91
 9118 1509 76       		.sleb128 -10
 9119 150a 13       		.uleb128 0x13
 9120 150b 82000000 		.4byte	.LBB33
 9121 150f 7C010000 		.4byte	.LBE33-.LBB33
 9122 1513 14       		.uleb128 0x14
 9123 1514 E4050000 		.4byte	.LASF29
 9124 1518 01       		.byte	0x1
 9125 1519 3E03     		.2byte	0x33e
 9126 151b 96010000 		.4byte	0x196
 9127 151f 02       		.uleb128 0x2
 9128 1520 91       		.byte	0x91
 9129 1521 70       		.sleb128 -16
 9130 1522 15       		.uleb128 0x15
 9131 1523 677700   		.ascii	"gw\000"
 9132 1526 01       		.byte	0x1
 9133 1527 4003     		.2byte	0x340
 9134 1529 B8000000 		.4byte	0xb8
 9135 152d 02       		.uleb128 0x2
 9136 152e 91       		.byte	0x91
 9137 152f 6F       		.sleb128 -17
 9138 1530 15       		.uleb128 0x15
 9139 1531 676800   		.ascii	"gh\000"
 9140 1534 01       		.byte	0x1
 9141 1535 4103     		.2byte	0x341
 9142 1537 B8000000 		.4byte	0xb8
 9143 153b 02       		.uleb128 0x2
 9144 153c 91       		.byte	0x91
 9145 153d 6E       		.sleb128 -18
 9146 153e 15       		.uleb128 0x15
 9147 153f 786100   		.ascii	"xa\000"
 9148 1542 01       		.byte	0x1
 9149 1543 4203     		.2byte	0x342
 9150 1545 B8000000 		.4byte	0xb8
 9151 1549 02       		.uleb128 0x2
 9152 154a 91       		.byte	0x91
 9153 154b 6D       		.sleb128 -19
 9154 154c 15       		.uleb128 0x15
 9155 154d 786F00   		.ascii	"xo\000"
 9156 1550 01       		.byte	0x1
 9157 1551 4303     		.2byte	0x343
 9158 1553 AD000000 		.4byte	0xad
 9159 1557 02       		.uleb128 0x2
 9160 1558 91       		.byte	0x91
 9161 1559 6C       		.sleb128 -20
 9162 155a 15       		.uleb128 0x15
 9163 155b 796F00   		.ascii	"yo\000"
 9164 155e 01       		.byte	0x1
 9165 155f 4403     		.2byte	0x344
 9166 1561 AD000000 		.4byte	0xad
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 183


 9167 1565 02       		.uleb128 0x2
 9168 1566 91       		.byte	0x91
 9169 1567 6B       		.sleb128 -21
 9170 1568 15       		.uleb128 0x15
 9171 1569 747300   		.ascii	"ts\000"
 9172 156c 01       		.byte	0x1
 9173 156d 4903     		.2byte	0x349
 9174 156f C3000000 		.4byte	0xc3
 9175 1573 02       		.uleb128 0x2
 9176 1574 91       		.byte	0x91
 9177 1575 68       		.sleb128 -24
 9178 1576 15       		.uleb128 0x15
 9179 1577 783100   		.ascii	"x1\000"
 9180 157a 01       		.byte	0x1
 9181 157b 4A03     		.2byte	0x34a
 9182 157d C3000000 		.4byte	0xc3
 9183 1581 02       		.uleb128 0x2
 9184 1582 91       		.byte	0x91
 9185 1583 66       		.sleb128 -26
 9186 1584 15       		.uleb128 0x15
 9187 1585 793100   		.ascii	"y1\000"
 9188 1588 01       		.byte	0x1
 9189 1589 4B03     		.2byte	0x34b
 9190 158b C3000000 		.4byte	0xc3
 9191 158f 02       		.uleb128 0x2
 9192 1590 91       		.byte	0x91
 9193 1591 64       		.sleb128 -28
 9194 1592 15       		.uleb128 0x15
 9195 1593 783200   		.ascii	"x2\000"
 9196 1596 01       		.byte	0x1
 9197 1597 4C03     		.2byte	0x34c
 9198 1599 C3000000 		.4byte	0xc3
 9199 159d 02       		.uleb128 0x2
 9200 159e 91       		.byte	0x91
 9201 159f 62       		.sleb128 -30
 9202 15a0 15       		.uleb128 0x15
 9203 15a1 793200   		.ascii	"y2\000"
 9204 15a4 01       		.byte	0x1
 9205 15a5 4D03     		.2byte	0x34d
 9206 15a7 C3000000 		.4byte	0xc3
 9207 15ab 02       		.uleb128 0x2
 9208 15ac 91       		.byte	0x91
 9209 15ad 60       		.sleb128 -32
 9210 15ae 00       		.byte	0
 9211 15af 00       		.byte	0
 9212 15b0 13       		.uleb128 0x13
 9213 15b1 2E020000 		.4byte	.LBB34
 9214 15b5 F8000000 		.4byte	.LBE34-.LBB34
 9215 15b9 15       		.uleb128 0x15
 9216 15ba 783200   		.ascii	"x2\000"
 9217 15bd 01       		.byte	0x1
 9218 15be 6103     		.2byte	0x361
 9219 15c0 9F000000 		.4byte	0x9f
 9220 15c4 02       		.uleb128 0x2
 9221 15c5 91       		.byte	0x91
 9222 15c6 5C       		.sleb128 -36
 9223 15c7 15       		.uleb128 0x15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 184


 9224 15c8 793200   		.ascii	"y2\000"
 9225 15cb 01       		.byte	0x1
 9226 15cc 6203     		.2byte	0x362
 9227 15ce 9F000000 		.4byte	0x9f
 9228 15d2 02       		.uleb128 0x2
 9229 15d3 91       		.byte	0x91
 9230 15d4 58       		.sleb128 -40
 9231 15d5 00       		.byte	0
 9232 15d6 00       		.byte	0
 9233 15d7 07       		.uleb128 0x7
 9234 15d8 04       		.byte	0x4
 9235 15d9 C3000000 		.4byte	0xc3
 9236 15dd 16       		.uleb128 0x16
 9237 15de 77030000 		.4byte	.LASF124
 9238 15e2 01       		.byte	0x1
 9239 15e3 6E03     		.2byte	0x36e
 9240 15e5 00000000 		.4byte	.LFB102
 9241 15e9 E8000000 		.4byte	.LFE102-.LFB102
 9242 15ed 01       		.uleb128 0x1
 9243 15ee 9C       		.byte	0x9c
 9244 15ef AB160000 		.4byte	0x16ab
 9245 15f3 17       		.uleb128 0x17
 9246 15f4 53040000 		.4byte	.LASF58
 9247 15f8 01       		.byte	0x1
 9248 15f9 6E03     		.2byte	0x36e
 9249 15fb EA020000 		.4byte	0x2ea
 9250 15ff 02       		.uleb128 0x2
 9251 1600 91       		.byte	0x91
 9252 1601 64       		.sleb128 -28
 9253 1602 18       		.uleb128 0x18
 9254 1603 73747200 		.ascii	"str\000"
 9255 1607 01       		.byte	0x1
 9256 1608 6E03     		.2byte	0x36e
 9257 160a CA010000 		.4byte	0x1ca
 9258 160e 02       		.uleb128 0x2
 9259 160f 91       		.byte	0x91
 9260 1610 60       		.sleb128 -32
 9261 1611 18       		.uleb128 0x18
 9262 1612 7800     		.ascii	"x\000"
 9263 1614 01       		.byte	0x1
 9264 1615 6E03     		.2byte	0x36e
 9265 1617 C3000000 		.4byte	0xc3
 9266 161b 02       		.uleb128 0x2
 9267 161c 91       		.byte	0x91
 9268 161d 5E       		.sleb128 -34
 9269 161e 18       		.uleb128 0x18
 9270 161f 7900     		.ascii	"y\000"
 9271 1621 01       		.byte	0x1
 9272 1622 6E03     		.2byte	0x36e
 9273 1624 C3000000 		.4byte	0xc3
 9274 1628 02       		.uleb128 0x2
 9275 1629 91       		.byte	0x91
 9276 162a 5C       		.sleb128 -36
 9277 162b 18       		.uleb128 0x18
 9278 162c 783100   		.ascii	"x1\000"
 9279 162f 01       		.byte	0x1
 9280 1630 6F03     		.2byte	0x36f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 185


 9281 1632 D7150000 		.4byte	0x15d7
 9282 1636 02       		.uleb128 0x2
 9283 1637 91       		.byte	0x91
 9284 1638 00       		.sleb128 0
 9285 1639 18       		.uleb128 0x18
 9286 163a 793100   		.ascii	"y1\000"
 9287 163d 01       		.byte	0x1
 9288 163e 6F03     		.2byte	0x36f
 9289 1640 D7150000 		.4byte	0x15d7
 9290 1644 02       		.uleb128 0x2
 9291 1645 91       		.byte	0x91
 9292 1646 04       		.sleb128 4
 9293 1647 18       		.uleb128 0x18
 9294 1648 7700     		.ascii	"w\000"
 9295 164a 01       		.byte	0x1
 9296 164b 6F03     		.2byte	0x36f
 9297 164d AB160000 		.4byte	0x16ab
 9298 1651 02       		.uleb128 0x2
 9299 1652 91       		.byte	0x91
 9300 1653 08       		.sleb128 8
 9301 1654 18       		.uleb128 0x18
 9302 1655 6800     		.ascii	"h\000"
 9303 1657 01       		.byte	0x1
 9304 1658 6F03     		.2byte	0x36f
 9305 165a AB160000 		.4byte	0x16ab
 9306 165e 02       		.uleb128 0x2
 9307 165f 91       		.byte	0x91
 9308 1660 0C       		.sleb128 12
 9309 1661 15       		.uleb128 0x15
 9310 1662 6300     		.ascii	"c\000"
 9311 1664 01       		.byte	0x1
 9312 1665 7003     		.2byte	0x370
 9313 1667 B8000000 		.4byte	0xb8
 9314 166b 02       		.uleb128 0x2
 9315 166c 91       		.byte	0x91
 9316 166d 77       		.sleb128 -9
 9317 166e 14       		.uleb128 0x14
 9318 166f 47030000 		.4byte	.LASF120
 9319 1673 01       		.byte	0x1
 9320 1674 7603     		.2byte	0x376
 9321 1676 C3000000 		.4byte	0xc3
 9322 167a 02       		.uleb128 0x2
 9323 167b 91       		.byte	0x91
 9324 167c 74       		.sleb128 -12
 9325 167d 14       		.uleb128 0x14
 9326 167e 4C030000 		.4byte	.LASF121
 9327 1682 01       		.byte	0x1
 9328 1683 7603     		.2byte	0x376
 9329 1685 C3000000 		.4byte	0xc3
 9330 1689 02       		.uleb128 0x2
 9331 168a 91       		.byte	0x91
 9332 168b 72       		.sleb128 -14
 9333 168c 14       		.uleb128 0x14
 9334 168d 59050000 		.4byte	.LASF122
 9335 1691 01       		.byte	0x1
 9336 1692 7603     		.2byte	0x376
 9337 1694 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 186


 9338 1698 02       		.uleb128 0x2
 9339 1699 91       		.byte	0x91
 9340 169a 70       		.sleb128 -16
 9341 169b 14       		.uleb128 0x14
 9342 169c FB060000 		.4byte	.LASF123
 9343 16a0 01       		.byte	0x1
 9344 16a1 7603     		.2byte	0x376
 9345 16a3 C3000000 		.4byte	0xc3
 9346 16a7 02       		.uleb128 0x2
 9347 16a8 91       		.byte	0x91
 9348 16a9 6E       		.sleb128 -18
 9349 16aa 00       		.byte	0
 9350 16ab 07       		.uleb128 0x7
 9351 16ac 04       		.byte	0x4
 9352 16ad CE000000 		.4byte	0xce
 9353 16b1 1B       		.uleb128 0x1b
 9354 16b2 33000000 		.4byte	.LASF125
 9355 16b6 01       		.byte	0x1
 9356 16b7 8803     		.2byte	0x388
 9357 16b9 C3000000 		.4byte	0xc3
 9358 16bd 00000000 		.4byte	.LFB103
 9359 16c1 18000000 		.4byte	.LFE103-.LFB103
 9360 16c5 01       		.uleb128 0x1
 9361 16c6 9C       		.byte	0x9c
 9362 16c7 DB160000 		.4byte	0x16db
 9363 16cb 17       		.uleb128 0x17
 9364 16cc 53040000 		.4byte	.LASF58
 9365 16d0 01       		.byte	0x1
 9366 16d1 8803     		.2byte	0x388
 9367 16d3 EA020000 		.4byte	0x2ea
 9368 16d7 02       		.uleb128 0x2
 9369 16d8 91       		.byte	0x91
 9370 16d9 74       		.sleb128 -12
 9371 16da 00       		.byte	0
 9372 16db 1B       		.uleb128 0x1b
 9373 16dc 0D050000 		.4byte	.LASF126
 9374 16e0 01       		.byte	0x1
 9375 16e1 8C03     		.2byte	0x38c
 9376 16e3 C3000000 		.4byte	0xc3
 9377 16e7 00000000 		.4byte	.LFB104
 9378 16eb 18000000 		.4byte	.LFE104-.LFB104
 9379 16ef 01       		.uleb128 0x1
 9380 16f0 9C       		.byte	0x9c
 9381 16f1 05170000 		.4byte	0x1705
 9382 16f5 17       		.uleb128 0x17
 9383 16f6 53040000 		.4byte	.LASF58
 9384 16fa 01       		.byte	0x1
 9385 16fb 8C03     		.2byte	0x38c
 9386 16fd EA020000 		.4byte	0x2ea
 9387 1701 02       		.uleb128 0x2
 9388 1702 91       		.byte	0x91
 9389 1703 74       		.sleb128 -12
 9390 1704 00       		.byte	0
 9391 1705 1A       		.uleb128 0x1a
 9392 1706 57010000 		.4byte	.LASF127
 9393 170a 01       		.byte	0x1
 9394 170b 9003     		.2byte	0x390
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 187


 9395 170d 00000000 		.4byte	.LFB105
 9396 1711 16000000 		.4byte	.LFE105-.LFB105
 9397 1715 01       		.uleb128 0x1
 9398 1716 9C       		.byte	0x9c
 9399 1717 38170000 		.4byte	0x1738
 9400 171b 17       		.uleb128 0x17
 9401 171c 53040000 		.4byte	.LASF58
 9402 1720 01       		.byte	0x1
 9403 1721 9003     		.2byte	0x390
 9404 1723 EA020000 		.4byte	0x2ea
 9405 1727 02       		.uleb128 0x2
 9406 1728 91       		.byte	0x91
 9407 1729 74       		.sleb128 -12
 9408 172a 18       		.uleb128 0x18
 9409 172b 6900     		.ascii	"i\000"
 9410 172d 01       		.byte	0x1
 9411 172e 9003     		.2byte	0x390
 9412 1730 B8000000 		.4byte	0xb8
 9413 1734 02       		.uleb128 0x2
 9414 1735 91       		.byte	0x91
 9415 1736 73       		.sleb128 -13
 9416 1737 00       		.byte	0
 9417 1738 1D       		.uleb128 0x1d
 9418 1739 81060000 		.4byte	.LASF128
 9419 173d 01       		.byte	0x1
 9420 173e A403     		.2byte	0x3a4
 9421 1740 9F000000 		.4byte	0x9f
 9422 1744 00000000 		.4byte	.LFB106
 9423 1748 80000000 		.4byte	.LFE106-.LFB106
 9424 174c 01       		.uleb128 0x1
 9425 174d 9C       		.byte	0x9c
 9426 174e BF170000 		.4byte	0x17bf
 9427 1752 17       		.uleb128 0x17
 9428 1753 6A000000 		.4byte	.LASF129
 9429 1757 01       		.byte	0x1
 9430 1758 A403     		.2byte	0x3a4
 9431 175a CA010000 		.4byte	0x1ca
 9432 175e 02       		.uleb128 0x2
 9433 175f 91       		.byte	0x91
 9434 1760 64       		.sleb128 -28
 9435 1761 17       		.uleb128 0x17
 9436 1762 29030000 		.4byte	.LASF130
 9437 1766 01       		.byte	0x1
 9438 1767 A403     		.2byte	0x3a4
 9439 1769 E4000000 		.4byte	0xe4
 9440 176d 02       		.uleb128 0x2
 9441 176e 91       		.byte	0x91
 9442 176f 60       		.sleb128 -32
 9443 1770 17       		.uleb128 0x17
 9444 1771 8B010000 		.4byte	.LASF131
 9445 1775 01       		.byte	0x1
 9446 1776 A403     		.2byte	0x3a4
 9447 1778 B8000000 		.4byte	0xb8
 9448 177c 02       		.uleb128 0x2
 9449 177d 91       		.byte	0x91
 9450 177e 5F       		.sleb128 -33
 9451 177f 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 188


 9452 1780 0E000000 		.4byte	.LBB35
 9453 1784 62000000 		.4byte	.LBE35-.LBB35
 9454 1788 15       		.uleb128 0x15
 9455 1789 6900     		.ascii	"i\000"
 9456 178b 01       		.byte	0x1
 9457 178c A603     		.2byte	0x3a6
 9458 178e 9F000000 		.4byte	0x9f
 9459 1792 02       		.uleb128 0x2
 9460 1793 91       		.byte	0x91
 9461 1794 74       		.sleb128 -12
 9462 1795 13       		.uleb128 0x13
 9463 1796 14000000 		.4byte	.LBB36
 9464 179a 4E000000 		.4byte	.LBE36-.LBB36
 9465 179e 14       		.uleb128 0x14
 9466 179f 2E050000 		.4byte	.LASF132
 9467 17a3 01       		.byte	0x1
 9468 17a4 A803     		.2byte	0x3a8
 9469 17a6 9F000000 		.4byte	0x9f
 9470 17aa 02       		.uleb128 0x2
 9471 17ab 91       		.byte	0x91
 9472 17ac 70       		.sleb128 -16
 9473 17ad 14       		.uleb128 0x14
 9474 17ae 56000000 		.4byte	.LASF133
 9475 17b2 01       		.byte	0x1
 9476 17b3 A903     		.2byte	0x3a9
 9477 17b5 9F000000 		.4byte	0x9f
 9478 17b9 02       		.uleb128 0x2
 9479 17ba 91       		.byte	0x91
 9480 17bb 6C       		.sleb128 -20
 9481 17bc 00       		.byte	0
 9482 17bd 00       		.byte	0
 9483 17be 00       		.byte	0
 9484 17bf 1D       		.uleb128 0x1d
 9485 17c0 6B020000 		.4byte	.LASF134
 9486 17c4 01       		.byte	0x1
 9487 17c5 B103     		.2byte	0x3b1
 9488 17c7 9F000000 		.4byte	0x9f
 9489 17cb 00000000 		.4byte	.LFB107
 9490 17cf 70010000 		.4byte	.LFE107-.LFB107
 9491 17d3 01       		.uleb128 0x1
 9492 17d4 9C       		.byte	0x9c
 9493 17d5 61180000 		.4byte	0x1861
 9494 17d9 17       		.uleb128 0x17
 9495 17da 6A000000 		.4byte	.LASF129
 9496 17de 01       		.byte	0x1
 9497 17df B103     		.2byte	0x3b1
 9498 17e1 CA010000 		.4byte	0x1ca
 9499 17e5 02       		.uleb128 0x2
 9500 17e6 91       		.byte	0x91
 9501 17e7 54       		.sleb128 -44
 9502 17e8 17       		.uleb128 0x17
 9503 17e9 49050000 		.4byte	.LASF135
 9504 17ed 01       		.byte	0x1
 9505 17ee B103     		.2byte	0x3b1
 9506 17f0 A7010000 		.4byte	0x1a7
 9507 17f4 02       		.uleb128 0x2
 9508 17f5 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 189


 9509 17f6 50       		.sleb128 -48
 9510 17f7 17       		.uleb128 0x17
 9511 17f8 13000000 		.4byte	.LASF136
 9512 17fc 01       		.byte	0x1
 9513 17fd B103     		.2byte	0x3b1
 9514 17ff B8000000 		.4byte	0xb8
 9515 1803 02       		.uleb128 0x2
 9516 1804 91       		.byte	0x91
 9517 1805 4F       		.sleb128 -49
 9518 1806 14       		.uleb128 0x14
 9519 1807 28020000 		.4byte	.LASF137
 9520 180b 01       		.byte	0x1
 9521 180c B303     		.2byte	0x3b3
 9522 180e 9F000000 		.4byte	0x9f
 9523 1812 02       		.uleb128 0x2
 9524 1813 91       		.byte	0x91
 9525 1814 5C       		.sleb128 -36
 9526 1815 14       		.uleb128 0x14
 9527 1816 22070000 		.4byte	.LASF138
 9528 181a 01       		.byte	0x1
 9529 181b B303     		.2byte	0x3b3
 9530 181d 9F000000 		.4byte	0x9f
 9531 1821 02       		.uleb128 0x2
 9532 1822 91       		.byte	0x91
 9533 1823 58       		.sleb128 -40
 9534 1824 14       		.uleb128 0x14
 9535 1825 54050000 		.4byte	.LASF139
 9536 1829 01       		.byte	0x1
 9537 182a B303     		.2byte	0x3b3
 9538 182c 9F000000 		.4byte	0x9f
 9539 1830 02       		.uleb128 0x2
 9540 1831 91       		.byte	0x91
 9541 1832 6C       		.sleb128 -20
 9542 1833 15       		.uleb128 0x15
 9543 1834 6E656700 		.ascii	"neg\000"
 9544 1838 01       		.byte	0x1
 9545 1839 B303     		.2byte	0x3b3
 9546 183b 9F000000 		.4byte	0x9f
 9547 183f 02       		.uleb128 0x2
 9548 1840 91       		.byte	0x91
 9549 1841 68       		.sleb128 -24
 9550 1842 14       		.uleb128 0x14
 9551 1843 9F020000 		.4byte	.LASF140
 9552 1847 01       		.byte	0x1
 9553 1848 B303     		.2byte	0x3b3
 9554 184a A7010000 		.4byte	0x1a7
 9555 184e 02       		.uleb128 0x2
 9556 184f 91       		.byte	0x91
 9557 1850 64       		.sleb128 -28
 9558 1851 15       		.uleb128 0x15
 9559 1852 69647800 		.ascii	"idx\000"
 9560 1856 01       		.byte	0x1
 9561 1857 C203     		.2byte	0x3c2
 9562 1859 9F000000 		.4byte	0x9f
 9563 185d 02       		.uleb128 0x2
 9564 185e 91       		.byte	0x91
 9565 185f 60       		.sleb128 -32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 190


 9566 1860 00       		.byte	0
 9567 1861 1D       		.uleb128 0x1d
 9568 1862 20040000 		.4byte	.LASF141
 9569 1866 01       		.byte	0x1
 9570 1867 D903     		.2byte	0x3d9
 9571 1869 9F000000 		.4byte	0x9f
 9572 186d 00000000 		.4byte	.LFB108
 9573 1871 D0000000 		.4byte	.LFE108-.LFB108
 9574 1875 01       		.uleb128 0x1
 9575 1876 9C       		.byte	0x9c
 9576 1877 D6180000 		.4byte	0x18d6
 9577 187b 17       		.uleb128 0x17
 9578 187c 6A000000 		.4byte	.LASF129
 9579 1880 01       		.byte	0x1
 9580 1881 D903     		.2byte	0x3d9
 9581 1883 CA010000 		.4byte	0x1ca
 9582 1887 02       		.uleb128 0x2
 9583 1888 91       		.byte	0x91
 9584 1889 5C       		.sleb128 -36
 9585 188a 17       		.uleb128 0x17
 9586 188b 49050000 		.4byte	.LASF135
 9587 188f 01       		.byte	0x1
 9588 1890 D903     		.2byte	0x3d9
 9589 1892 A7010000 		.4byte	0x1a7
 9590 1896 02       		.uleb128 0x2
 9591 1897 91       		.byte	0x91
 9592 1898 58       		.sleb128 -40
 9593 1899 14       		.uleb128 0x14
 9594 189a 28020000 		.4byte	.LASF137
 9595 189e 01       		.byte	0x1
 9596 189f DB03     		.2byte	0x3db
 9597 18a1 9F000000 		.4byte	0x9f
 9598 18a5 02       		.uleb128 0x2
 9599 18a6 91       		.byte	0x91
 9600 18a7 64       		.sleb128 -28
 9601 18a8 14       		.uleb128 0x14
 9602 18a9 54050000 		.4byte	.LASF139
 9603 18ad 01       		.byte	0x1
 9604 18ae DB03     		.2byte	0x3db
 9605 18b0 9F000000 		.4byte	0x9f
 9606 18b4 02       		.uleb128 0x2
 9607 18b5 91       		.byte	0x91
 9608 18b6 6C       		.sleb128 -20
 9609 18b7 14       		.uleb128 0x14
 9610 18b8 9F020000 		.4byte	.LASF140
 9611 18bc 01       		.byte	0x1
 9612 18bd DC03     		.2byte	0x3dc
 9613 18bf A7010000 		.4byte	0x1a7
 9614 18c3 02       		.uleb128 0x2
 9615 18c4 91       		.byte	0x91
 9616 18c5 68       		.sleb128 -24
 9617 18c6 15       		.uleb128 0x15
 9618 18c7 69647800 		.ascii	"idx\000"
 9619 18cb 01       		.byte	0x1
 9620 18cc E903     		.2byte	0x3e9
 9621 18ce 9F000000 		.4byte	0x9f
 9622 18d2 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 191


 9623 18d3 91       		.byte	0x91
 9624 18d4 60       		.sleb128 -32
 9625 18d5 00       		.byte	0
 9626 18d6 1D       		.uleb128 0x1d
 9627 18d7 ED040000 		.4byte	.LASF142
 9628 18db 01       		.byte	0x1
 9629 18dc F103     		.2byte	0x3f1
 9630 18de 9F000000 		.4byte	0x9f
 9631 18e2 00000000 		.4byte	.LFB109
 9632 18e6 90010000 		.4byte	.LFE109-.LFB109
 9633 18ea 01       		.uleb128 0x1
 9634 18eb 9C       		.byte	0x9c
 9635 18ec BA190000 		.4byte	0x19ba
 9636 18f0 17       		.uleb128 0x17
 9637 18f1 6A000000 		.4byte	.LASF129
 9638 18f5 01       		.byte	0x1
 9639 18f6 F103     		.2byte	0x3f1
 9640 18f8 CA010000 		.4byte	0x1ca
 9641 18fc 02       		.uleb128 0x2
 9642 18fd 91       		.byte	0x91
 9643 18fe 4C       		.sleb128 -52
 9644 18ff 17       		.uleb128 0x17
 9645 1900 25000000 		.4byte	.LASF143
 9646 1904 01       		.byte	0x1
 9647 1905 F103     		.2byte	0x3f1
 9648 1907 A7010000 		.4byte	0x1a7
 9649 190b 02       		.uleb128 0x2
 9650 190c 91       		.byte	0x91
 9651 190d 48       		.sleb128 -56
 9652 190e 17       		.uleb128 0x17
 9653 190f 8B010000 		.4byte	.LASF131
 9654 1913 01       		.byte	0x1
 9655 1914 F103     		.2byte	0x3f1
 9656 1916 B8000000 		.4byte	0xb8
 9657 191a 02       		.uleb128 0x2
 9658 191b 91       		.byte	0x91
 9659 191c 47       		.sleb128 -57
 9660 191d 17       		.uleb128 0x17
 9661 191e 60020000 		.4byte	.LASF144
 9662 1922 01       		.byte	0x1
 9663 1923 F103     		.2byte	0x3f1
 9664 1925 B8000000 		.4byte	0xb8
 9665 1929 02       		.uleb128 0x2
 9666 192a 91       		.byte	0x91
 9667 192b 46       		.sleb128 -58
 9668 192c 14       		.uleb128 0x14
 9669 192d A3060000 		.4byte	.LASF145
 9670 1931 01       		.byte	0x1
 9671 1932 F303     		.2byte	0x3f3
 9672 1934 A7010000 		.4byte	0x1a7
 9673 1938 02       		.uleb128 0x2
 9674 1939 91       		.byte	0x91
 9675 193a 60       		.sleb128 -32
 9676 193b 15       		.uleb128 0x15
 9677 193c 6600     		.ascii	"f\000"
 9678 193e 01       		.byte	0x1
 9679 193f F403     		.2byte	0x3f4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 192


 9680 1941 A7010000 		.4byte	0x1a7
 9681 1945 02       		.uleb128 0x2
 9682 1946 91       		.byte	0x91
 9683 1947 5C       		.sleb128 -36
 9684 1948 14       		.uleb128 0x14
 9685 1949 EF050000 		.4byte	.LASF146
 9686 194d 01       		.byte	0x1
 9687 194e F603     		.2byte	0x3f6
 9688 1950 9F000000 		.4byte	0x9f
 9689 1954 02       		.uleb128 0x2
 9690 1955 91       		.byte	0x91
 9691 1956 74       		.sleb128 -12
 9692 1957 14       		.uleb128 0x14
 9693 1958 81000000 		.4byte	.LASF147
 9694 195c 01       		.byte	0x1
 9695 195d F603     		.2byte	0x3f6
 9696 195f 9F000000 		.4byte	0x9f
 9697 1963 02       		.uleb128 0x2
 9698 1964 91       		.byte	0x91
 9699 1965 70       		.sleb128 -16
 9700 1966 14       		.uleb128 0x14
 9701 1967 29030000 		.4byte	.LASF130
 9702 196b 01       		.byte	0x1
 9703 196c F803     		.2byte	0x3f8
 9704 196e 9F000000 		.4byte	0x9f
 9705 1972 02       		.uleb128 0x2
 9706 1973 91       		.byte	0x91
 9707 1974 6C       		.sleb128 -20
 9708 1975 15       		.uleb128 0x15
 9709 1976 69647800 		.ascii	"idx\000"
 9710 197a 01       		.byte	0x1
 9711 197b FA03     		.2byte	0x3fa
 9712 197d 9F000000 		.4byte	0x9f
 9713 1981 02       		.uleb128 0x2
 9714 1982 91       		.byte	0x91
 9715 1983 68       		.sleb128 -24
 9716 1984 15       		.uleb128 0x15
 9717 1985 6900     		.ascii	"i\000"
 9718 1987 01       		.byte	0x1
 9719 1988 FA03     		.2byte	0x3fa
 9720 198a 9F000000 		.4byte	0x9f
 9721 198e 02       		.uleb128 0x2
 9722 198f 91       		.byte	0x91
 9723 1990 64       		.sleb128 -28
 9724 1991 13       		.uleb128 0x13
 9725 1992 E8000000 		.4byte	.LBB37
 9726 1996 92000000 		.4byte	.LBE37-.LBB37
 9727 199a 14       		.uleb128 0x14
 9728 199b 2E050000 		.4byte	.LASF132
 9729 199f 01       		.byte	0x1
 9730 19a0 1404     		.2byte	0x414
 9731 19a2 9F000000 		.4byte	0x9f
 9732 19a6 02       		.uleb128 0x2
 9733 19a7 91       		.byte	0x91
 9734 19a8 58       		.sleb128 -40
 9735 19a9 14       		.uleb128 0x14
 9736 19aa 56000000 		.4byte	.LASF133
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 193


 9737 19ae 01       		.byte	0x1
 9738 19af 1504     		.2byte	0x415
 9739 19b1 9F000000 		.4byte	0x9f
 9740 19b5 02       		.uleb128 0x2
 9741 19b6 91       		.byte	0x91
 9742 19b7 54       		.sleb128 -44
 9743 19b8 00       		.byte	0
 9744 19b9 00       		.byte	0
 9745 19ba 1A       		.uleb128 0x1a
 9746 19bb 4A000000 		.4byte	.LASF148
 9747 19bf 01       		.byte	0x1
 9748 19c0 3304     		.2byte	0x433
 9749 19c2 00000000 		.4byte	.LFB110
 9750 19c6 1A000000 		.4byte	.LFE110-.LFB110
 9751 19ca 01       		.uleb128 0x1
 9752 19cb 9C       		.byte	0x9c
 9753 19cc FC190000 		.4byte	0x19fc
 9754 19d0 17       		.uleb128 0x17
 9755 19d1 53040000 		.4byte	.LASF58
 9756 19d5 01       		.byte	0x1
 9757 19d6 3304     		.2byte	0x433
 9758 19d8 EA020000 		.4byte	0x2ea
 9759 19dc 02       		.uleb128 0x2
 9760 19dd 91       		.byte	0x91
 9761 19de 74       		.sleb128 -12
 9762 19df 18       		.uleb128 0x18
 9763 19e0 6300     		.ascii	"c\000"
 9764 19e2 01       		.byte	0x1
 9765 19e3 3304     		.2byte	0x433
 9766 19e5 B8000000 		.4byte	0xb8
 9767 19e9 02       		.uleb128 0x2
 9768 19ea 91       		.byte	0x91
 9769 19eb 73       		.sleb128 -13
 9770 19ec 17       		.uleb128 0x17
 9771 19ed 28050000 		.4byte	.LASF59
 9772 19f1 01       		.byte	0x1
 9773 19f2 3304     		.2byte	0x433
 9774 19f4 CE000000 		.4byte	0xce
 9775 19f8 02       		.uleb128 0x2
 9776 19f9 91       		.byte	0x91
 9777 19fa 70       		.sleb128 -16
 9778 19fb 00       		.byte	0
 9779 19fc 1A       		.uleb128 0x1a
 9780 19fd B0040000 		.4byte	.LASF149
 9781 1a01 01       		.byte	0x1
 9782 1a02 3804     		.2byte	0x438
 9783 1a04 00000000 		.4byte	.LFB111
 9784 1a08 1A000000 		.4byte	.LFE111-.LFB111
 9785 1a0c 01       		.uleb128 0x1
 9786 1a0d 9C       		.byte	0x9c
 9787 1a0e 3E1A0000 		.4byte	0x1a3e
 9788 1a12 17       		.uleb128 0x17
 9789 1a13 53040000 		.4byte	.LASF58
 9790 1a17 01       		.byte	0x1
 9791 1a18 3804     		.2byte	0x438
 9792 1a1a EA020000 		.4byte	0x2ea
 9793 1a1e 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 194


 9794 1a1f 91       		.byte	0x91
 9795 1a20 74       		.sleb128 -12
 9796 1a21 18       		.uleb128 0x18
 9797 1a22 6300     		.ascii	"c\000"
 9798 1a24 01       		.byte	0x1
 9799 1a25 3804     		.2byte	0x438
 9800 1a27 B8000000 		.4byte	0xb8
 9801 1a2b 02       		.uleb128 0x2
 9802 1a2c 91       		.byte	0x91
 9803 1a2d 73       		.sleb128 -13
 9804 1a2e 17       		.uleb128 0x17
 9805 1a2f 28050000 		.4byte	.LASF59
 9806 1a33 01       		.byte	0x1
 9807 1a34 3804     		.2byte	0x438
 9808 1a36 CE000000 		.4byte	0xce
 9809 1a3a 02       		.uleb128 0x2
 9810 1a3b 91       		.byte	0x91
 9811 1a3c 70       		.sleb128 -16
 9812 1a3d 00       		.byte	0
 9813 1a3e 1A       		.uleb128 0x1a
 9814 1a3f CF010000 		.4byte	.LASF150
 9815 1a43 01       		.byte	0x1
 9816 1a44 3D04     		.2byte	0x43d
 9817 1a46 00000000 		.4byte	.LFB112
 9818 1a4a 1A000000 		.4byte	.LFE112-.LFB112
 9819 1a4e 01       		.uleb128 0x1
 9820 1a4f 9C       		.byte	0x9c
 9821 1a50 801A0000 		.4byte	0x1a80
 9822 1a54 17       		.uleb128 0x17
 9823 1a55 53040000 		.4byte	.LASF58
 9824 1a59 01       		.byte	0x1
 9825 1a5a 3D04     		.2byte	0x43d
 9826 1a5c EA020000 		.4byte	0x2ea
 9827 1a60 02       		.uleb128 0x2
 9828 1a61 91       		.byte	0x91
 9829 1a62 74       		.sleb128 -12
 9830 1a63 18       		.uleb128 0x18
 9831 1a64 6300     		.ascii	"c\000"
 9832 1a66 01       		.byte	0x1
 9833 1a67 3D04     		.2byte	0x43d
 9834 1a69 B8000000 		.4byte	0xb8
 9835 1a6d 02       		.uleb128 0x2
 9836 1a6e 91       		.byte	0x91
 9837 1a6f 73       		.sleb128 -13
 9838 1a70 17       		.uleb128 0x17
 9839 1a71 28050000 		.4byte	.LASF59
 9840 1a75 01       		.byte	0x1
 9841 1a76 3D04     		.2byte	0x43d
 9842 1a78 CE000000 		.4byte	0xce
 9843 1a7c 02       		.uleb128 0x2
 9844 1a7d 91       		.byte	0x91
 9845 1a7e 70       		.sleb128 -16
 9846 1a7f 00       		.byte	0
 9847 1a80 1A       		.uleb128 0x1a
 9848 1a81 11040000 		.4byte	.LASF151
 9849 1a85 01       		.byte	0x1
 9850 1a86 4204     		.2byte	0x442
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 195


 9851 1a88 00000000 		.4byte	.LFB113
 9852 1a8c 1A000000 		.4byte	.LFE113-.LFB113
 9853 1a90 01       		.uleb128 0x1
 9854 1a91 9C       		.byte	0x9c
 9855 1a92 C21A0000 		.4byte	0x1ac2
 9856 1a96 17       		.uleb128 0x17
 9857 1a97 53040000 		.4byte	.LASF58
 9858 1a9b 01       		.byte	0x1
 9859 1a9c 4204     		.2byte	0x442
 9860 1a9e EA020000 		.4byte	0x2ea
 9861 1aa2 02       		.uleb128 0x2
 9862 1aa3 91       		.byte	0x91
 9863 1aa4 74       		.sleb128 -12
 9864 1aa5 18       		.uleb128 0x18
 9865 1aa6 6300     		.ascii	"c\000"
 9866 1aa8 01       		.byte	0x1
 9867 1aa9 4204     		.2byte	0x442
 9868 1aab B8000000 		.4byte	0xb8
 9869 1aaf 02       		.uleb128 0x2
 9870 1ab0 91       		.byte	0x91
 9871 1ab1 73       		.sleb128 -13
 9872 1ab2 17       		.uleb128 0x17
 9873 1ab3 28050000 		.4byte	.LASF59
 9874 1ab7 01       		.byte	0x1
 9875 1ab8 4204     		.2byte	0x442
 9876 1aba CE000000 		.4byte	0xce
 9877 1abe 02       		.uleb128 0x2
 9878 1abf 91       		.byte	0x91
 9879 1ac0 70       		.sleb128 -16
 9880 1ac1 00       		.byte	0
 9881 1ac2 1E       		.uleb128 0x1e
 9882 1ac3 CC040000 		.4byte	.LASF152
 9883 1ac7 06       		.byte	0x6
 9884 1ac8 1207     		.2byte	0x712
 9885 1aca CE1A0000 		.4byte	0x1ace
 9886 1ace 1F       		.uleb128 0x1f
 9887 1acf D9000000 		.4byte	0xd9
 9888 1ad3 20       		.uleb128 0x20
 9889 1ad4 42000000 		.4byte	0x42
 9890 1ad8 DE1A0000 		.4byte	0x1ade
 9891 1adc 21       		.uleb128 0x21
 9892 1add 00       		.byte	0
 9893 1ade 22       		.uleb128 0x22
 9894 1adf 6A000000 		.4byte	.LASF129
 9895 1ae3 07       		.byte	0x7
 9896 1ae4 6F       		.byte	0x6f
 9897 1ae5 D31A0000 		.4byte	0x1ad3
 9898 1ae9 20       		.uleb128 0x20
 9899 1aea B8000000 		.4byte	0xb8
 9900 1aee F91A0000 		.4byte	0x1af9
 9901 1af2 23       		.uleb128 0x23
 9902 1af3 C3010000 		.4byte	0x1c3
 9903 1af7 17       		.byte	0x17
 9904 1af8 00       		.byte	0
 9905 1af9 24       		.uleb128 0x24
 9906 1afa 83010000 		.4byte	.LASF153
 9907 1afe 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 196


 9908 1aff 9403     		.2byte	0x394
 9909 1b01 E91A0000 		.4byte	0x1ae9
 9910 1b05 05       		.uleb128 0x5
 9911 1b06 03       		.byte	0x3
 9912 1b07 00000000 		.4byte	pitches
 9913 1b0b 00       		.byte	0
 9914              		.section	.debug_abbrev,"",%progbits
 9915              	.Ldebug_abbrev0:
 9916 0000 01       		.uleb128 0x1
 9917 0001 11       		.uleb128 0x11
 9918 0002 01       		.byte	0x1
 9919 0003 25       		.uleb128 0x25
 9920 0004 0E       		.uleb128 0xe
 9921 0005 13       		.uleb128 0x13
 9922 0006 0B       		.uleb128 0xb
 9923 0007 03       		.uleb128 0x3
 9924 0008 0E       		.uleb128 0xe
 9925 0009 1B       		.uleb128 0x1b
 9926 000a 0E       		.uleb128 0xe
 9927 000b 55       		.uleb128 0x55
 9928 000c 17       		.uleb128 0x17
 9929 000d 11       		.uleb128 0x11
 9930 000e 01       		.uleb128 0x1
 9931 000f 10       		.uleb128 0x10
 9932 0010 17       		.uleb128 0x17
 9933 0011 00       		.byte	0
 9934 0012 00       		.byte	0
 9935 0013 02       		.uleb128 0x2
 9936 0014 16       		.uleb128 0x16
 9937 0015 00       		.byte	0
 9938 0016 03       		.uleb128 0x3
 9939 0017 0E       		.uleb128 0xe
 9940 0018 3A       		.uleb128 0x3a
 9941 0019 0B       		.uleb128 0xb
 9942 001a 3B       		.uleb128 0x3b
 9943 001b 0B       		.uleb128 0xb
 9944 001c 49       		.uleb128 0x49
 9945 001d 13       		.uleb128 0x13
 9946 001e 00       		.byte	0
 9947 001f 00       		.byte	0
 9948 0020 03       		.uleb128 0x3
 9949 0021 24       		.uleb128 0x24
 9950 0022 00       		.byte	0
 9951 0023 0B       		.uleb128 0xb
 9952 0024 0B       		.uleb128 0xb
 9953 0025 3E       		.uleb128 0x3e
 9954 0026 0B       		.uleb128 0xb
 9955 0027 03       		.uleb128 0x3
 9956 0028 0E       		.uleb128 0xe
 9957 0029 00       		.byte	0
 9958 002a 00       		.byte	0
 9959 002b 04       		.uleb128 0x4
 9960 002c 24       		.uleb128 0x24
 9961 002d 00       		.byte	0
 9962 002e 0B       		.uleb128 0xb
 9963 002f 0B       		.uleb128 0xb
 9964 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 197


 9965 0031 0B       		.uleb128 0xb
 9966 0032 03       		.uleb128 0x3
 9967 0033 08       		.uleb128 0x8
 9968 0034 00       		.byte	0
 9969 0035 00       		.byte	0
 9970 0036 05       		.uleb128 0x5
 9971 0037 13       		.uleb128 0x13
 9972 0038 01       		.byte	0x1
 9973 0039 0B       		.uleb128 0xb
 9974 003a 0B       		.uleb128 0xb
 9975 003b 3A       		.uleb128 0x3a
 9976 003c 0B       		.uleb128 0xb
 9977 003d 3B       		.uleb128 0x3b
 9978 003e 0B       		.uleb128 0xb
 9979 003f 01       		.uleb128 0x1
 9980 0040 13       		.uleb128 0x13
 9981 0041 00       		.byte	0
 9982 0042 00       		.byte	0
 9983 0043 06       		.uleb128 0x6
 9984 0044 0D       		.uleb128 0xd
 9985 0045 00       		.byte	0
 9986 0046 03       		.uleb128 0x3
 9987 0047 0E       		.uleb128 0xe
 9988 0048 3A       		.uleb128 0x3a
 9989 0049 0B       		.uleb128 0xb
 9990 004a 3B       		.uleb128 0x3b
 9991 004b 0B       		.uleb128 0xb
 9992 004c 49       		.uleb128 0x49
 9993 004d 13       		.uleb128 0x13
 9994 004e 38       		.uleb128 0x38
 9995 004f 0B       		.uleb128 0xb
 9996 0050 00       		.byte	0
 9997 0051 00       		.byte	0
 9998 0052 07       		.uleb128 0x7
 9999 0053 0F       		.uleb128 0xf
 10000 0054 00       		.byte	0
 10001 0055 0B       		.uleb128 0xb
 10002 0056 0B       		.uleb128 0xb
 10003 0057 49       		.uleb128 0x49
 10004 0058 13       		.uleb128 0x13
 10005 0059 00       		.byte	0
 10006 005a 00       		.byte	0
 10007 005b 08       		.uleb128 0x8
 10008 005c 13       		.uleb128 0x13
 10009 005d 01       		.byte	0x1
 10010 005e 03       		.uleb128 0x3
 10011 005f 0E       		.uleb128 0xe
 10012 0060 0B       		.uleb128 0xb
 10013 0061 0B       		.uleb128 0xb
 10014 0062 3A       		.uleb128 0x3a
 10015 0063 0B       		.uleb128 0xb
 10016 0064 3B       		.uleb128 0x3b
 10017 0065 0B       		.uleb128 0xb
 10018 0066 01       		.uleb128 0x1
 10019 0067 13       		.uleb128 0x13
 10020 0068 00       		.byte	0
 10021 0069 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 198


 10022 006a 09       		.uleb128 0x9
 10023 006b 16       		.uleb128 0x16
 10024 006c 00       		.byte	0
 10025 006d 03       		.uleb128 0x3
 10026 006e 08       		.uleb128 0x8
 10027 006f 3A       		.uleb128 0x3a
 10028 0070 0B       		.uleb128 0xb
 10029 0071 3B       		.uleb128 0x3b
 10030 0072 0B       		.uleb128 0xb
 10031 0073 49       		.uleb128 0x49
 10032 0074 13       		.uleb128 0x13
 10033 0075 00       		.byte	0
 10034 0076 00       		.byte	0
 10035 0077 0A       		.uleb128 0xa
 10036 0078 2E       		.uleb128 0x2e
 10037 0079 01       		.byte	0x1
 10038 007a 3F       		.uleb128 0x3f
 10039 007b 19       		.uleb128 0x19
 10040 007c 03       		.uleb128 0x3
 10041 007d 0E       		.uleb128 0xe
 10042 007e 3A       		.uleb128 0x3a
 10043 007f 0B       		.uleb128 0xb
 10044 0080 3B       		.uleb128 0x3b
 10045 0081 0B       		.uleb128 0xb
 10046 0082 27       		.uleb128 0x27
 10047 0083 19       		.uleb128 0x19
 10048 0084 11       		.uleb128 0x11
 10049 0085 01       		.uleb128 0x1
 10050 0086 12       		.uleb128 0x12
 10051 0087 06       		.uleb128 0x6
 10052 0088 40       		.uleb128 0x40
 10053 0089 18       		.uleb128 0x18
 10054 008a 9742     		.uleb128 0x2117
 10055 008c 19       		.uleb128 0x19
 10056 008d 01       		.uleb128 0x1
 10057 008e 13       		.uleb128 0x13
 10058 008f 00       		.byte	0
 10059 0090 00       		.byte	0
 10060 0091 0B       		.uleb128 0xb
 10061 0092 05       		.uleb128 0x5
 10062 0093 00       		.byte	0
 10063 0094 03       		.uleb128 0x3
 10064 0095 0E       		.uleb128 0xe
 10065 0096 3A       		.uleb128 0x3a
 10066 0097 0B       		.uleb128 0xb
 10067 0098 3B       		.uleb128 0x3b
 10068 0099 0B       		.uleb128 0xb
 10069 009a 49       		.uleb128 0x49
 10070 009b 13       		.uleb128 0x13
 10071 009c 02       		.uleb128 0x2
 10072 009d 18       		.uleb128 0x18
 10073 009e 00       		.byte	0
 10074 009f 00       		.byte	0
 10075 00a0 0C       		.uleb128 0xc
 10076 00a1 05       		.uleb128 0x5
 10077 00a2 00       		.byte	0
 10078 00a3 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 199


 10079 00a4 08       		.uleb128 0x8
 10080 00a5 3A       		.uleb128 0x3a
 10081 00a6 0B       		.uleb128 0xb
 10082 00a7 3B       		.uleb128 0x3b
 10083 00a8 0B       		.uleb128 0xb
 10084 00a9 49       		.uleb128 0x49
 10085 00aa 13       		.uleb128 0x13
 10086 00ab 02       		.uleb128 0x2
 10087 00ac 18       		.uleb128 0x18
 10088 00ad 00       		.byte	0
 10089 00ae 00       		.byte	0
 10090 00af 0D       		.uleb128 0xd
 10091 00b0 2E       		.uleb128 0x2e
 10092 00b1 01       		.byte	0x1
 10093 00b2 3F       		.uleb128 0x3f
 10094 00b3 19       		.uleb128 0x19
 10095 00b4 03       		.uleb128 0x3
 10096 00b5 0E       		.uleb128 0xe
 10097 00b6 3A       		.uleb128 0x3a
 10098 00b7 0B       		.uleb128 0xb
 10099 00b8 3B       		.uleb128 0x3b
 10100 00b9 0B       		.uleb128 0xb
 10101 00ba 27       		.uleb128 0x27
 10102 00bb 19       		.uleb128 0x19
 10103 00bc 11       		.uleb128 0x11
 10104 00bd 01       		.uleb128 0x1
 10105 00be 12       		.uleb128 0x12
 10106 00bf 06       		.uleb128 0x6
 10107 00c0 40       		.uleb128 0x40
 10108 00c1 18       		.uleb128 0x18
 10109 00c2 9642     		.uleb128 0x2116
 10110 00c4 19       		.uleb128 0x19
 10111 00c5 01       		.uleb128 0x1
 10112 00c6 13       		.uleb128 0x13
 10113 00c7 00       		.byte	0
 10114 00c8 00       		.byte	0
 10115 00c9 0E       		.uleb128 0xe
 10116 00ca 34       		.uleb128 0x34
 10117 00cb 00       		.byte	0
 10118 00cc 03       		.uleb128 0x3
 10119 00cd 0E       		.uleb128 0xe
 10120 00ce 3A       		.uleb128 0x3a
 10121 00cf 0B       		.uleb128 0xb
 10122 00d0 3B       		.uleb128 0x3b
 10123 00d1 0B       		.uleb128 0xb
 10124 00d2 49       		.uleb128 0x49
 10125 00d3 13       		.uleb128 0x13
 10126 00d4 02       		.uleb128 0x2
 10127 00d5 18       		.uleb128 0x18
 10128 00d6 00       		.byte	0
 10129 00d7 00       		.byte	0
 10130 00d8 0F       		.uleb128 0xf
 10131 00d9 2E       		.uleb128 0x2e
 10132 00da 01       		.byte	0x1
 10133 00db 3F       		.uleb128 0x3f
 10134 00dc 19       		.uleb128 0x19
 10135 00dd 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 200


 10136 00de 08       		.uleb128 0x8
 10137 00df 3A       		.uleb128 0x3a
 10138 00e0 0B       		.uleb128 0xb
 10139 00e1 3B       		.uleb128 0x3b
 10140 00e2 0B       		.uleb128 0xb
 10141 00e3 49       		.uleb128 0x49
 10142 00e4 13       		.uleb128 0x13
 10143 00e5 3C       		.uleb128 0x3c
 10144 00e6 19       		.uleb128 0x19
 10145 00e7 01       		.uleb128 0x1
 10146 00e8 13       		.uleb128 0x13
 10147 00e9 00       		.byte	0
 10148 00ea 00       		.byte	0
 10149 00eb 10       		.uleb128 0x10
 10150 00ec 18       		.uleb128 0x18
 10151 00ed 00       		.byte	0
 10152 00ee 00       		.byte	0
 10153 00ef 00       		.byte	0
 10154 00f0 11       		.uleb128 0x11
 10155 00f1 34       		.uleb128 0x34
 10156 00f2 00       		.byte	0
 10157 00f3 03       		.uleb128 0x3
 10158 00f4 08       		.uleb128 0x8
 10159 00f5 3A       		.uleb128 0x3a
 10160 00f6 0B       		.uleb128 0xb
 10161 00f7 3B       		.uleb128 0x3b
 10162 00f8 0B       		.uleb128 0xb
 10163 00f9 49       		.uleb128 0x49
 10164 00fa 13       		.uleb128 0x13
 10165 00fb 02       		.uleb128 0x2
 10166 00fc 18       		.uleb128 0x18
 10167 00fd 00       		.byte	0
 10168 00fe 00       		.byte	0
 10169 00ff 12       		.uleb128 0x12
 10170 0100 0B       		.uleb128 0xb
 10171 0101 01       		.byte	0x1
 10172 0102 11       		.uleb128 0x11
 10173 0103 01       		.uleb128 0x1
 10174 0104 12       		.uleb128 0x12
 10175 0105 06       		.uleb128 0x6
 10176 0106 01       		.uleb128 0x1
 10177 0107 13       		.uleb128 0x13
 10178 0108 00       		.byte	0
 10179 0109 00       		.byte	0
 10180 010a 13       		.uleb128 0x13
 10181 010b 0B       		.uleb128 0xb
 10182 010c 01       		.byte	0x1
 10183 010d 11       		.uleb128 0x11
 10184 010e 01       		.uleb128 0x1
 10185 010f 12       		.uleb128 0x12
 10186 0110 06       		.uleb128 0x6
 10187 0111 00       		.byte	0
 10188 0112 00       		.byte	0
 10189 0113 14       		.uleb128 0x14
 10190 0114 34       		.uleb128 0x34
 10191 0115 00       		.byte	0
 10192 0116 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 201


 10193 0117 0E       		.uleb128 0xe
 10194 0118 3A       		.uleb128 0x3a
 10195 0119 0B       		.uleb128 0xb
 10196 011a 3B       		.uleb128 0x3b
 10197 011b 05       		.uleb128 0x5
 10198 011c 49       		.uleb128 0x49
 10199 011d 13       		.uleb128 0x13
 10200 011e 02       		.uleb128 0x2
 10201 011f 18       		.uleb128 0x18
 10202 0120 00       		.byte	0
 10203 0121 00       		.byte	0
 10204 0122 15       		.uleb128 0x15
 10205 0123 34       		.uleb128 0x34
 10206 0124 00       		.byte	0
 10207 0125 03       		.uleb128 0x3
 10208 0126 08       		.uleb128 0x8
 10209 0127 3A       		.uleb128 0x3a
 10210 0128 0B       		.uleb128 0xb
 10211 0129 3B       		.uleb128 0x3b
 10212 012a 05       		.uleb128 0x5
 10213 012b 49       		.uleb128 0x49
 10214 012c 13       		.uleb128 0x13
 10215 012d 02       		.uleb128 0x2
 10216 012e 18       		.uleb128 0x18
 10217 012f 00       		.byte	0
 10218 0130 00       		.byte	0
 10219 0131 16       		.uleb128 0x16
 10220 0132 2E       		.uleb128 0x2e
 10221 0133 01       		.byte	0x1
 10222 0134 3F       		.uleb128 0x3f
 10223 0135 19       		.uleb128 0x19
 10224 0136 03       		.uleb128 0x3
 10225 0137 0E       		.uleb128 0xe
 10226 0138 3A       		.uleb128 0x3a
 10227 0139 0B       		.uleb128 0xb
 10228 013a 3B       		.uleb128 0x3b
 10229 013b 05       		.uleb128 0x5
 10230 013c 27       		.uleb128 0x27
 10231 013d 19       		.uleb128 0x19
 10232 013e 11       		.uleb128 0x11
 10233 013f 01       		.uleb128 0x1
 10234 0140 12       		.uleb128 0x12
 10235 0141 06       		.uleb128 0x6
 10236 0142 40       		.uleb128 0x40
 10237 0143 18       		.uleb128 0x18
 10238 0144 9642     		.uleb128 0x2116
 10239 0146 19       		.uleb128 0x19
 10240 0147 01       		.uleb128 0x1
 10241 0148 13       		.uleb128 0x13
 10242 0149 00       		.byte	0
 10243 014a 00       		.byte	0
 10244 014b 17       		.uleb128 0x17
 10245 014c 05       		.uleb128 0x5
 10246 014d 00       		.byte	0
 10247 014e 03       		.uleb128 0x3
 10248 014f 0E       		.uleb128 0xe
 10249 0150 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 202


 10250 0151 0B       		.uleb128 0xb
 10251 0152 3B       		.uleb128 0x3b
 10252 0153 05       		.uleb128 0x5
 10253 0154 49       		.uleb128 0x49
 10254 0155 13       		.uleb128 0x13
 10255 0156 02       		.uleb128 0x2
 10256 0157 18       		.uleb128 0x18
 10257 0158 00       		.byte	0
 10258 0159 00       		.byte	0
 10259 015a 18       		.uleb128 0x18
 10260 015b 05       		.uleb128 0x5
 10261 015c 00       		.byte	0
 10262 015d 03       		.uleb128 0x3
 10263 015e 08       		.uleb128 0x8
 10264 015f 3A       		.uleb128 0x3a
 10265 0160 0B       		.uleb128 0xb
 10266 0161 3B       		.uleb128 0x3b
 10267 0162 05       		.uleb128 0x5
 10268 0163 49       		.uleb128 0x49
 10269 0164 13       		.uleb128 0x13
 10270 0165 02       		.uleb128 0x2
 10271 0166 18       		.uleb128 0x18
 10272 0167 00       		.byte	0
 10273 0168 00       		.byte	0
 10274 0169 19       		.uleb128 0x19
 10275 016a 2E       		.uleb128 0x2e
 10276 016b 01       		.byte	0x1
 10277 016c 3F       		.uleb128 0x3f
 10278 016d 19       		.uleb128 0x19
 10279 016e 03       		.uleb128 0x3
 10280 016f 0E       		.uleb128 0xe
 10281 0170 3A       		.uleb128 0x3a
 10282 0171 0B       		.uleb128 0xb
 10283 0172 3B       		.uleb128 0x3b
 10284 0173 05       		.uleb128 0x5
 10285 0174 49       		.uleb128 0x49
 10286 0175 13       		.uleb128 0x13
 10287 0176 3C       		.uleb128 0x3c
 10288 0177 19       		.uleb128 0x19
 10289 0178 01       		.uleb128 0x1
 10290 0179 13       		.uleb128 0x13
 10291 017a 00       		.byte	0
 10292 017b 00       		.byte	0
 10293 017c 1A       		.uleb128 0x1a
 10294 017d 2E       		.uleb128 0x2e
 10295 017e 01       		.byte	0x1
 10296 017f 3F       		.uleb128 0x3f
 10297 0180 19       		.uleb128 0x19
 10298 0181 03       		.uleb128 0x3
 10299 0182 0E       		.uleb128 0xe
 10300 0183 3A       		.uleb128 0x3a
 10301 0184 0B       		.uleb128 0xb
 10302 0185 3B       		.uleb128 0x3b
 10303 0186 05       		.uleb128 0x5
 10304 0187 27       		.uleb128 0x27
 10305 0188 19       		.uleb128 0x19
 10306 0189 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 203


 10307 018a 01       		.uleb128 0x1
 10308 018b 12       		.uleb128 0x12
 10309 018c 06       		.uleb128 0x6
 10310 018d 40       		.uleb128 0x40
 10311 018e 18       		.uleb128 0x18
 10312 018f 9742     		.uleb128 0x2117
 10313 0191 19       		.uleb128 0x19
 10314 0192 01       		.uleb128 0x1
 10315 0193 13       		.uleb128 0x13
 10316 0194 00       		.byte	0
 10317 0195 00       		.byte	0
 10318 0196 1B       		.uleb128 0x1b
 10319 0197 2E       		.uleb128 0x2e
 10320 0198 01       		.byte	0x1
 10321 0199 3F       		.uleb128 0x3f
 10322 019a 19       		.uleb128 0x19
 10323 019b 03       		.uleb128 0x3
 10324 019c 0E       		.uleb128 0xe
 10325 019d 3A       		.uleb128 0x3a
 10326 019e 0B       		.uleb128 0xb
 10327 019f 3B       		.uleb128 0x3b
 10328 01a0 05       		.uleb128 0x5
 10329 01a1 27       		.uleb128 0x27
 10330 01a2 19       		.uleb128 0x19
 10331 01a3 49       		.uleb128 0x49
 10332 01a4 13       		.uleb128 0x13
 10333 01a5 11       		.uleb128 0x11
 10334 01a6 01       		.uleb128 0x1
 10335 01a7 12       		.uleb128 0x12
 10336 01a8 06       		.uleb128 0x6
 10337 01a9 40       		.uleb128 0x40
 10338 01aa 18       		.uleb128 0x18
 10339 01ab 9742     		.uleb128 0x2117
 10340 01ad 19       		.uleb128 0x19
 10341 01ae 01       		.uleb128 0x1
 10342 01af 13       		.uleb128 0x13
 10343 01b0 00       		.byte	0
 10344 01b1 00       		.byte	0
 10345 01b2 1C       		.uleb128 0x1c
 10346 01b3 26       		.uleb128 0x26
 10347 01b4 00       		.byte	0
 10348 01b5 49       		.uleb128 0x49
 10349 01b6 13       		.uleb128 0x13
 10350 01b7 00       		.byte	0
 10351 01b8 00       		.byte	0
 10352 01b9 1D       		.uleb128 0x1d
 10353 01ba 2E       		.uleb128 0x2e
 10354 01bb 01       		.byte	0x1
 10355 01bc 3F       		.uleb128 0x3f
 10356 01bd 19       		.uleb128 0x19
 10357 01be 03       		.uleb128 0x3
 10358 01bf 0E       		.uleb128 0xe
 10359 01c0 3A       		.uleb128 0x3a
 10360 01c1 0B       		.uleb128 0xb
 10361 01c2 3B       		.uleb128 0x3b
 10362 01c3 05       		.uleb128 0x5
 10363 01c4 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 204


 10364 01c5 19       		.uleb128 0x19
 10365 01c6 49       		.uleb128 0x49
 10366 01c7 13       		.uleb128 0x13
 10367 01c8 11       		.uleb128 0x11
 10368 01c9 01       		.uleb128 0x1
 10369 01ca 12       		.uleb128 0x12
 10370 01cb 06       		.uleb128 0x6
 10371 01cc 40       		.uleb128 0x40
 10372 01cd 18       		.uleb128 0x18
 10373 01ce 9642     		.uleb128 0x2116
 10374 01d0 19       		.uleb128 0x19
 10375 01d1 01       		.uleb128 0x1
 10376 01d2 13       		.uleb128 0x13
 10377 01d3 00       		.byte	0
 10378 01d4 00       		.byte	0
 10379 01d5 1E       		.uleb128 0x1e
 10380 01d6 34       		.uleb128 0x34
 10381 01d7 00       		.byte	0
 10382 01d8 03       		.uleb128 0x3
 10383 01d9 0E       		.uleb128 0xe
 10384 01da 3A       		.uleb128 0x3a
 10385 01db 0B       		.uleb128 0xb
 10386 01dc 3B       		.uleb128 0x3b
 10387 01dd 05       		.uleb128 0x5
 10388 01de 49       		.uleb128 0x49
 10389 01df 13       		.uleb128 0x13
 10390 01e0 3F       		.uleb128 0x3f
 10391 01e1 19       		.uleb128 0x19
 10392 01e2 3C       		.uleb128 0x3c
 10393 01e3 19       		.uleb128 0x19
 10394 01e4 00       		.byte	0
 10395 01e5 00       		.byte	0
 10396 01e6 1F       		.uleb128 0x1f
 10397 01e7 35       		.uleb128 0x35
 10398 01e8 00       		.byte	0
 10399 01e9 49       		.uleb128 0x49
 10400 01ea 13       		.uleb128 0x13
 10401 01eb 00       		.byte	0
 10402 01ec 00       		.byte	0
 10403 01ed 20       		.uleb128 0x20
 10404 01ee 01       		.uleb128 0x1
 10405 01ef 01       		.byte	0x1
 10406 01f0 49       		.uleb128 0x49
 10407 01f1 13       		.uleb128 0x13
 10408 01f2 01       		.uleb128 0x1
 10409 01f3 13       		.uleb128 0x13
 10410 01f4 00       		.byte	0
 10411 01f5 00       		.byte	0
 10412 01f6 21       		.uleb128 0x21
 10413 01f7 21       		.uleb128 0x21
 10414 01f8 00       		.byte	0
 10415 01f9 00       		.byte	0
 10416 01fa 00       		.byte	0
 10417 01fb 22       		.uleb128 0x22
 10418 01fc 34       		.uleb128 0x34
 10419 01fd 00       		.byte	0
 10420 01fe 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 205


 10421 01ff 0E       		.uleb128 0xe
 10422 0200 3A       		.uleb128 0x3a
 10423 0201 0B       		.uleb128 0xb
 10424 0202 3B       		.uleb128 0x3b
 10425 0203 0B       		.uleb128 0xb
 10426 0204 49       		.uleb128 0x49
 10427 0205 13       		.uleb128 0x13
 10428 0206 3F       		.uleb128 0x3f
 10429 0207 19       		.uleb128 0x19
 10430 0208 3C       		.uleb128 0x3c
 10431 0209 19       		.uleb128 0x19
 10432 020a 00       		.byte	0
 10433 020b 00       		.byte	0
 10434 020c 23       		.uleb128 0x23
 10435 020d 21       		.uleb128 0x21
 10436 020e 00       		.byte	0
 10437 020f 49       		.uleb128 0x49
 10438 0210 13       		.uleb128 0x13
 10439 0211 2F       		.uleb128 0x2f
 10440 0212 0B       		.uleb128 0xb
 10441 0213 00       		.byte	0
 10442 0214 00       		.byte	0
 10443 0215 24       		.uleb128 0x24
 10444 0216 34       		.uleb128 0x34
 10445 0217 00       		.byte	0
 10446 0218 03       		.uleb128 0x3
 10447 0219 0E       		.uleb128 0xe
 10448 021a 3A       		.uleb128 0x3a
 10449 021b 0B       		.uleb128 0xb
 10450 021c 3B       		.uleb128 0x3b
 10451 021d 05       		.uleb128 0x5
 10452 021e 49       		.uleb128 0x49
 10453 021f 13       		.uleb128 0x13
 10454 0220 3F       		.uleb128 0x3f
 10455 0221 19       		.uleb128 0x19
 10456 0222 02       		.uleb128 0x2
 10457 0223 18       		.uleb128 0x18
 10458 0224 00       		.byte	0
 10459 0225 00       		.byte	0
 10460 0226 00       		.byte	0
 10461              		.section	.debug_aranges,"",%progbits
 10462 0000 A4010000 		.4byte	0x1a4
 10463 0004 0200     		.2byte	0x2
 10464 0006 00000000 		.4byte	.Ldebug_info0
 10465 000a 04       		.byte	0x4
 10466 000b 00       		.byte	0
 10467 000c 0000     		.2byte	0
 10468 000e 0000     		.2byte	0
 10469 0010 00000000 		.4byte	.LFB64
 10470 0014 7E000000 		.4byte	.LFE64-.LFB64
 10471 0018 00000000 		.4byte	.LFB65
 10472 001c 3E010000 		.4byte	.LFE65-.LFB65
 10473 0020 00000000 		.4byte	.LFB66
 10474 0024 12000000 		.4byte	.LFE66-.LFB66
 10475 0028 00000000 		.4byte	.LFB67
 10476 002c E0010000 		.4byte	.LFE67-.LFB67
 10477 0030 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 206


 10478 0034 32000000 		.4byte	.LFE68-.LFB68
 10479 0038 00000000 		.4byte	.LFB69
 10480 003c 3A000000 		.4byte	.LFE69-.LFB69
 10481 0040 00000000 		.4byte	.LFB70
 10482 0044 3A000000 		.4byte	.LFE70-.LFB70
 10483 0048 00000000 		.4byte	.LFB71
 10484 004c 40000000 		.4byte	.LFE71-.LFB71
 10485 0050 00000000 		.4byte	.LFB72
 10486 0054 12000000 		.4byte	.LFE72-.LFB72
 10487 0058 00000000 		.4byte	.LFB73
 10488 005c 4C000000 		.4byte	.LFE73-.LFB73
 10489 0060 00000000 		.4byte	.LFB74
 10490 0064 4A000000 		.4byte	.LFE74-.LFB74
 10491 0068 00000000 		.4byte	.LFB75
 10492 006c 5E000000 		.4byte	.LFE75-.LFB75
 10493 0070 00000000 		.4byte	.LFB76
 10494 0074 32000000 		.4byte	.LFE76-.LFB76
 10495 0078 00000000 		.4byte	.LFB77
 10496 007c D0000000 		.4byte	.LFE77-.LFB77
 10497 0080 00000000 		.4byte	.LFB78
 10498 0084 D2010000 		.4byte	.LFE78-.LFB78
 10499 0088 00000000 		.4byte	.LFB79
 10500 008c AA010000 		.4byte	.LFE79-.LFB79
 10501 0090 00000000 		.4byte	.LFB80
 10502 0094 68000000 		.4byte	.LFE80-.LFB80
 10503 0098 00000000 		.4byte	.LFB81
 10504 009c 82010000 		.4byte	.LFE81-.LFB81
 10505 00a0 00000000 		.4byte	.LFB82
 10506 00a4 96000000 		.4byte	.LFE82-.LFB82
 10507 00a8 00000000 		.4byte	.LFB83
 10508 00ac A4010000 		.4byte	.LFE83-.LFB83
 10509 00b0 00000000 		.4byte	.LFB84
 10510 00b4 D6000000 		.4byte	.LFE84-.LFB84
 10511 00b8 00000000 		.4byte	.LFB85
 10512 00bc 7C000000 		.4byte	.LFE85-.LFB85
 10513 00c0 00000000 		.4byte	.LFB86
 10514 00c4 E0020000 		.4byte	.LFE86-.LFB86
 10515 00c8 00000000 		.4byte	.LFB87
 10516 00cc D8000000 		.4byte	.LFE87-.LFB87
 10517 00d0 00000000 		.4byte	.LFB88
 10518 00d4 0C040000 		.4byte	.LFE88-.LFB88
 10519 00d8 00000000 		.4byte	.LFB89
 10520 00dc F8000000 		.4byte	.LFE89-.LFB89
 10521 00e0 00000000 		.4byte	.LFB90
 10522 00e4 9A010000 		.4byte	.LFE90-.LFB90
 10523 00e8 00000000 		.4byte	.LFB91
 10524 00ec 26000000 		.4byte	.LFE91-.LFB91
 10525 00f0 00000000 		.4byte	.LFB92
 10526 00f4 18000000 		.4byte	.LFE92-.LFB92
 10527 00f8 00000000 		.4byte	.LFB93
 10528 00fc 18000000 		.4byte	.LFE93-.LFB93
 10529 0100 00000000 		.4byte	.LFB94
 10530 0104 28000000 		.4byte	.LFE94-.LFB94
 10531 0108 00000000 		.4byte	.LFB95
 10532 010c 26000000 		.4byte	.LFE95-.LFB95
 10533 0110 00000000 		.4byte	.LFB96
 10534 0114 1E000000 		.4byte	.LFE96-.LFB96
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 207


 10535 0118 00000000 		.4byte	.LFB97
 10536 011c 18000000 		.4byte	.LFE97-.LFB97
 10537 0120 00000000 		.4byte	.LFB98
 10538 0124 76000000 		.4byte	.LFE98-.LFB98
 10539 0128 00000000 		.4byte	.LFB99
 10540 012c 1E000000 		.4byte	.LFE99-.LFB99
 10541 0130 00000000 		.4byte	.LFB100
 10542 0134 DC000000 		.4byte	.LFE100-.LFB100
 10543 0138 00000000 		.4byte	.LFB101
 10544 013c 30030000 		.4byte	.LFE101-.LFB101
 10545 0140 00000000 		.4byte	.LFB102
 10546 0144 E8000000 		.4byte	.LFE102-.LFB102
 10547 0148 00000000 		.4byte	.LFB103
 10548 014c 18000000 		.4byte	.LFE103-.LFB103
 10549 0150 00000000 		.4byte	.LFB104
 10550 0154 18000000 		.4byte	.LFE104-.LFB104
 10551 0158 00000000 		.4byte	.LFB105
 10552 015c 16000000 		.4byte	.LFE105-.LFB105
 10553 0160 00000000 		.4byte	.LFB106
 10554 0164 80000000 		.4byte	.LFE106-.LFB106
 10555 0168 00000000 		.4byte	.LFB107
 10556 016c 70010000 		.4byte	.LFE107-.LFB107
 10557 0170 00000000 		.4byte	.LFB108
 10558 0174 D0000000 		.4byte	.LFE108-.LFB108
 10559 0178 00000000 		.4byte	.LFB109
 10560 017c 90010000 		.4byte	.LFE109-.LFB109
 10561 0180 00000000 		.4byte	.LFB110
 10562 0184 1A000000 		.4byte	.LFE110-.LFB110
 10563 0188 00000000 		.4byte	.LFB111
 10564 018c 1A000000 		.4byte	.LFE111-.LFB111
 10565 0190 00000000 		.4byte	.LFB112
 10566 0194 1A000000 		.4byte	.LFE112-.LFB112
 10567 0198 00000000 		.4byte	.LFB113
 10568 019c 1A000000 		.4byte	.LFE113-.LFB113
 10569 01a0 00000000 		.4byte	0
 10570 01a4 00000000 		.4byte	0
 10571              		.section	.debug_ranges,"",%progbits
 10572              	.Ldebug_ranges0:
 10573 0000 00000000 		.4byte	.LFB64
 10574 0004 7E000000 		.4byte	.LFE64
 10575 0008 00000000 		.4byte	.LFB65
 10576 000c 3E010000 		.4byte	.LFE65
 10577 0010 00000000 		.4byte	.LFB66
 10578 0014 12000000 		.4byte	.LFE66
 10579 0018 00000000 		.4byte	.LFB67
 10580 001c E0010000 		.4byte	.LFE67
 10581 0020 00000000 		.4byte	.LFB68
 10582 0024 32000000 		.4byte	.LFE68
 10583 0028 00000000 		.4byte	.LFB69
 10584 002c 3A000000 		.4byte	.LFE69
 10585 0030 00000000 		.4byte	.LFB70
 10586 0034 3A000000 		.4byte	.LFE70
 10587 0038 00000000 		.4byte	.LFB71
 10588 003c 40000000 		.4byte	.LFE71
 10589 0040 00000000 		.4byte	.LFB72
 10590 0044 12000000 		.4byte	.LFE72
 10591 0048 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 208


 10592 004c 4C000000 		.4byte	.LFE73
 10593 0050 00000000 		.4byte	.LFB74
 10594 0054 4A000000 		.4byte	.LFE74
 10595 0058 00000000 		.4byte	.LFB75
 10596 005c 5E000000 		.4byte	.LFE75
 10597 0060 00000000 		.4byte	.LFB76
 10598 0064 32000000 		.4byte	.LFE76
 10599 0068 00000000 		.4byte	.LFB77
 10600 006c D0000000 		.4byte	.LFE77
 10601 0070 00000000 		.4byte	.LFB78
 10602 0074 D2010000 		.4byte	.LFE78
 10603 0078 00000000 		.4byte	.LFB79
 10604 007c AA010000 		.4byte	.LFE79
 10605 0080 00000000 		.4byte	.LFB80
 10606 0084 68000000 		.4byte	.LFE80
 10607 0088 00000000 		.4byte	.LFB81
 10608 008c 82010000 		.4byte	.LFE81
 10609 0090 00000000 		.4byte	.LFB82
 10610 0094 96000000 		.4byte	.LFE82
 10611 0098 00000000 		.4byte	.LFB83
 10612 009c A4010000 		.4byte	.LFE83
 10613 00a0 00000000 		.4byte	.LFB84
 10614 00a4 D6000000 		.4byte	.LFE84
 10615 00a8 00000000 		.4byte	.LFB85
 10616 00ac 7C000000 		.4byte	.LFE85
 10617 00b0 00000000 		.4byte	.LFB86
 10618 00b4 E0020000 		.4byte	.LFE86
 10619 00b8 00000000 		.4byte	.LFB87
 10620 00bc D8000000 		.4byte	.LFE87
 10621 00c0 00000000 		.4byte	.LFB88
 10622 00c4 0C040000 		.4byte	.LFE88
 10623 00c8 00000000 		.4byte	.LFB89
 10624 00cc F8000000 		.4byte	.LFE89
 10625 00d0 00000000 		.4byte	.LFB90
 10626 00d4 9A010000 		.4byte	.LFE90
 10627 00d8 00000000 		.4byte	.LFB91
 10628 00dc 26000000 		.4byte	.LFE91
 10629 00e0 00000000 		.4byte	.LFB92
 10630 00e4 18000000 		.4byte	.LFE92
 10631 00e8 00000000 		.4byte	.LFB93
 10632 00ec 18000000 		.4byte	.LFE93
 10633 00f0 00000000 		.4byte	.LFB94
 10634 00f4 28000000 		.4byte	.LFE94
 10635 00f8 00000000 		.4byte	.LFB95
 10636 00fc 26000000 		.4byte	.LFE95
 10637 0100 00000000 		.4byte	.LFB96
 10638 0104 1E000000 		.4byte	.LFE96
 10639 0108 00000000 		.4byte	.LFB97
 10640 010c 18000000 		.4byte	.LFE97
 10641 0110 00000000 		.4byte	.LFB98
 10642 0114 76000000 		.4byte	.LFE98
 10643 0118 00000000 		.4byte	.LFB99
 10644 011c 1E000000 		.4byte	.LFE99
 10645 0120 00000000 		.4byte	.LFB100
 10646 0124 DC000000 		.4byte	.LFE100
 10647 0128 00000000 		.4byte	.LFB101
 10648 012c 30030000 		.4byte	.LFE101
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 209


 10649 0130 00000000 		.4byte	.LFB102
 10650 0134 E8000000 		.4byte	.LFE102
 10651 0138 00000000 		.4byte	.LFB103
 10652 013c 18000000 		.4byte	.LFE103
 10653 0140 00000000 		.4byte	.LFB104
 10654 0144 18000000 		.4byte	.LFE104
 10655 0148 00000000 		.4byte	.LFB105
 10656 014c 16000000 		.4byte	.LFE105
 10657 0150 00000000 		.4byte	.LFB106
 10658 0154 80000000 		.4byte	.LFE106
 10659 0158 00000000 		.4byte	.LFB107
 10660 015c 70010000 		.4byte	.LFE107
 10661 0160 00000000 		.4byte	.LFB108
 10662 0164 D0000000 		.4byte	.LFE108
 10663 0168 00000000 		.4byte	.LFB109
 10664 016c 90010000 		.4byte	.LFE109
 10665 0170 00000000 		.4byte	.LFB110
 10666 0174 1A000000 		.4byte	.LFE110
 10667 0178 00000000 		.4byte	.LFB111
 10668 017c 1A000000 		.4byte	.LFE111
 10669 0180 00000000 		.4byte	.LFB112
 10670 0184 1A000000 		.4byte	.LFE112
 10671 0188 00000000 		.4byte	.LFB113
 10672 018c 1A000000 		.4byte	.LFE113
 10673 0190 00000000 		.4byte	0
 10674 0194 00000000 		.4byte	0
 10675              		.section	.debug_line,"",%progbits
 10676              	.Ldebug_line0:
 10677 0000 E0080000 		.section	.debug_str,"MS",%progbits,1
 10677      02007001 
 10677      00000201 
 10677      FB0E0D00 
 10677      01010101 
 10678              	.LASF74:
 10679 0000 47465864 		.ascii	"GFXdrawCircle\000"
 10679      72617743 
 10679      6972636C 
 10679      6500
 10680              	.LASF31:
 10681 000e 6C617374 		.ascii	"last\000"
 10681      00
 10682              	.LASF136:
 10683 0013 73686F77 		.ascii	"showCents\000"
 10683      43656E74 
 10683      7300
 10684              	.LASF33:
 10685 001d 47465866 		.ascii	"GFXfont\000"
 10685      6F6E7400 
 10686              	.LASF143:
 10687 0025 696E7075 		.ascii	"input\000"
 10687      7400
 10688              	.LASF56:
 10689 002b 47465869 		.ascii	"GFXinit\000"
 10689      6E697400 
 10690              	.LASF125:
 10691 0033 47465877 		.ascii	"GFXwidth\000"
 10691      69647468 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 210


 10691      00
 10692              	.LASF119:
 10693 003c 47465863 		.ascii	"GFXcharBounds\000"
 10693      68617242 
 10693      6F756E64 
 10693      7300
 10694              	.LASF148:
 10695 004a 47465873 		.ascii	"GFXscrollUp\000"
 10695      63726F6C 
 10695      6C557000 
 10696              	.LASF133:
 10697 0056 74686973 		.ascii	"thisDigit\000"
 10697      44696769 
 10697      7400
 10698              	.LASF87:
 10699 0060 64783031 		.ascii	"dx01\000"
 10699      00
 10700              	.LASF89:
 10701 0065 64783032 		.ascii	"dx02\000"
 10701      00
 10702              	.LASF129:
 10703 006a 62756666 		.ascii	"buffer\000"
 10703      657200
 10704              	.LASF113:
 10705 0071 47465873 		.ascii	"GFXsetTextColor\000"
 10705      65745465 
 10705      7874436F 
 10705      6C6F7200 
 10706              	.LASF147:
 10707 0081 64656369 		.ascii	"decimalHasHappened\000"
 10707      6D616C48 
 10707      61734861 
 10707      7070656E 
 10707      656400
 10708              	.LASF14:
 10709 0094 756E7369 		.ascii	"unsigned int\000"
 10709      676E6564 
 10709      20696E74 
 10709      00
 10710              	.LASF49:
 10711 00a1 77726170 		.ascii	"wrap\000"
 10711      00
 10712              	.LASF8:
 10713 00a6 5F5F696E 		.ascii	"__int32_t\000"
 10713      7433325F 
 10713      7400
 10714              	.LASF63:
 10715 00b0 47465864 		.ascii	"GFXdrawPixel\000"
 10715      72617750 
 10715      6978656C 
 10715      00
 10716              	.LASF154:
 10717 00bd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 10717      43313120 
 10717      352E342E 
 10717      31203230 
 10717      31363036 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 211


 10718 00f0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 10718      20726576 
 10718      6973696F 
 10718      6E203233 
 10718      37373135 
 10719 0123 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 10719      66756E63 
 10719      74696F6E 
 10719      2D736563 
 10719      74696F6E 
 10720              	.LASF91:
 10721 014b 64783132 		.ascii	"dx12\000"
 10721      00
 10722              	.LASF50:
 10723 0150 5F637034 		.ascii	"_cp437\000"
 10723      333700
 10724              	.LASF127:
 10725 0157 47465869 		.ascii	"GFXinvertDisplay\000"
 10725      6E766572 
 10725      74446973 
 10725      706C6179 
 10725      00
 10726              	.LASF66:
 10727 0168 47465877 		.ascii	"GFXwriteFastHLine\000"
 10727      72697465 
 10727      46617374 
 10727      484C696E 
 10727      6500
 10728              	.LASF43:
 10729 017a 726F7461 		.ascii	"rotation\000"
 10729      74696F6E 
 10729      00
 10730              	.LASF153:
 10731 0183 70697463 		.ascii	"pitches\000"
 10731      68657300 
 10732              	.LASF131:
 10733 018b 6E756D44 		.ascii	"numDigits\000"
 10733      69676974 
 10733      7300
 10734              	.LASF40:
 10735 0195 48454947 		.ascii	"HEIGHT\000"
 10735      485400
 10736              	.LASF20:
 10737 019c 75696E74 		.ascii	"uint32_t\000"
 10737      33325F74 
 10737      00
 10738              	.LASF15:
 10739 01a5 696E7438 		.ascii	"int8_t\000"
 10739      5F7400
 10740              	.LASF108:
 10741 01ac 47465877 		.ascii	"GFXwrite\000"
 10741      72697465 
 10741      00
 10742              	.LASF116:
 10743 01b5 47465873 		.ascii	"GFXsetRotation\000"
 10743      6574526F 
 10743      74617469 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 212


 10743      6F6E00
 10744              	.LASF157:
 10745 01c4 5F474658 		.ascii	"_GFX\000"
 10745      00
 10746              	.LASF34:
 10747 01c9 666C6F61 		.ascii	"float\000"
 10747      7400
 10748              	.LASF150:
 10749 01cf 47465873 		.ascii	"GFXscrollLeft\000"
 10749      63726F6C 
 10749      6C4C6566 
 10749      7400
 10750              	.LASF45:
 10751 01dd 63757273 		.ascii	"cursor_x\000"
 10751      6F725F78 
 10751      00
 10752              	.LASF44:
 10753 01e6 63757273 		.ascii	"cursor_y\000"
 10753      6F725F79 
 10753      00
 10754              	.LASF46:
 10755 01ef 74657874 		.ascii	"textsize\000"
 10755      73697A65 
 10755      00
 10756              	.LASF17:
 10757 01f8 696E7431 		.ascii	"int16_t\000"
 10757      365F7400 
 10758              	.LASF13:
 10759 0200 6C6F6E67 		.ascii	"long long unsigned int\000"
 10759      206C6F6E 
 10759      6720756E 
 10759      7369676E 
 10759      65642069 
 10760              	.LASF70:
 10761 0217 47465864 		.ascii	"GFXdrawFastHLine\000"
 10761      72617746 
 10761      61737448 
 10761      4C696E65 
 10761      00
 10762              	.LASF137:
 10763 0228 70636C61 		.ascii	"pclass\000"
 10763      737300
 10764              	.LASF65:
 10765 022f 47465877 		.ascii	"GFXwriteFastVLine\000"
 10765      72697465 
 10765      46617374 
 10765      564C696E 
 10765      6500
 10766              	.LASF118:
 10767 0241 47465873 		.ascii	"GFXsetFont\000"
 10767      6574466F 
 10767      6E7400
 10768              	.LASF32:
 10769 024c 79416476 		.ascii	"yAdvance\000"
 10769      616E6365 
 10769      00
 10770              	.LASF6:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 213


 10771 0255 5F5F7569 		.ascii	"__uint16_t\000"
 10771      6E743136 
 10771      5F7400
 10772              	.LASF144:
 10773 0260 6E756D44 		.ascii	"numDecimal\000"
 10773      6563696D 
 10773      616C00
 10774              	.LASF134:
 10775 026b 4F4C4544 		.ascii	"OLEDparsePitch\000"
 10775      70617273 
 10775      65506974 
 10775      636800
 10776              	.LASF39:
 10777 027a 57494454 		.ascii	"WIDTH\000"
 10777      4800
 10778              	.LASF21:
 10779 0280 6269746D 		.ascii	"bitmapOffset\000"
 10779      61704F66 
 10779      66736574 
 10779      00
 10780              	.LASF73:
 10781 028d 47465864 		.ascii	"GFXdrawLine\000"
 10781      7261774C 
 10781      696E6500 
 10782              	.LASF22:
 10783 0299 77696474 		.ascii	"width\000"
 10783      6800
 10784              	.LASF140:
 10785 029f 6F666673 		.ascii	"offset\000"
 10785      657400
 10786              	.LASF106:
 10787 02a6 666F6E74 		.ascii	"fontOffset\000"
 10787      4F666673 
 10787      657400
 10788              	.LASF156:
 10789 02b1 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Desktop\\psoc_steel3\\PSOC5_"
 10789      73657273 
 10789      5C4A6566 
 10789      66536E79 
 10789      6465725C 
 10790 02df 656C6563 		.ascii	"electrosteel_stringsensors_newpcb_brain\\CE210514_P"
 10790      74726F73 
 10790      7465656C 
 10790      5F737472 
 10790      696E6773 
 10791 0311 534F4333 		.ascii	"SOC3_5_Thermistor.cydsn\000"
 10791      5F355F54 
 10791      6865726D 
 10791      6973746F 
 10791      722E6379 
 10792              	.LASF130:
 10793 0329 6D794E75 		.ascii	"myNumber\000"
 10793      6D626572 
 10793      00
 10794              	.LASF36:
 10795 0332 63686172 		.ascii	"char\000"
 10795      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 214


 10796              	.LASF27:
 10797 0337 47465867 		.ascii	"GFXglyph\000"
 10797      6C797068 
 10797      00
 10798              	.LASF107:
 10799 0340 63757273 		.ascii	"cursor\000"
 10799      6F7200
 10800              	.LASF120:
 10801 0347 6D696E78 		.ascii	"minx\000"
 10801      00
 10802              	.LASF121:
 10803 034c 6D696E79 		.ascii	"miny\000"
 10803      00
 10804              	.LASF88:
 10805 0351 64793031 		.ascii	"dy01\000"
 10805      00
 10806              	.LASF90:
 10807 0356 64793032 		.ascii	"dy02\000"
 10807      00
 10808              	.LASF16:
 10809 035b 75696E74 		.ascii	"uint8_t\000"
 10809      385F7400 
 10810              	.LASF26:
 10811 0363 794F6666 		.ascii	"yOffset\000"
 10811      73657400 
 10812              	.LASF41:
 10813 036b 5F776964 		.ascii	"_width\000"
 10813      746800
 10814              	.LASF101:
 10815 0372 62697473 		.ascii	"bits\000"
 10815      00
 10816              	.LASF124:
 10817 0377 47465867 		.ascii	"GFXgetTextBounds\000"
 10817      65745465 
 10817      7874426F 
 10817      756E6473 
 10817      00
 10818              	.LASF86:
 10819 0388 47465866 		.ascii	"GFXfillTriangle\000"
 10819      696C6C54 
 10819      7269616E 
 10819      676C6500 
 10820              	.LASF60:
 10821 0398 73746565 		.ascii	"steep\000"
 10821      7000
 10822              	.LASF82:
 10823 039e 47465864 		.ascii	"GFXdrawRect\000"
 10823      72617752 
 10823      65637400 
 10824              	.LASF12:
 10825 03aa 6C6F6E67 		.ascii	"long long int\000"
 10825      206C6F6E 
 10825      6720696E 
 10825      7400
 10826              	.LASF53:
 10827 03b8 666F6E74 		.ascii	"fontDesc\000"
 10827      44657363 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 215


 10827      00
 10828              	.LASF92:
 10829 03c1 64793132 		.ascii	"dy12\000"
 10829      00
 10830              	.LASF94:
 10831 03c6 62797465 		.ascii	"byteWidth\000"
 10831      57696474 
 10831      6800
 10832              	.LASF4:
 10833 03d0 5F5F696E 		.ascii	"__int16_t\000"
 10833      7431365F 
 10833      7400
 10834              	.LASF42:
 10835 03da 5F686569 		.ascii	"_height\000"
 10835      67687400 
 10836              	.LASF77:
 10837 03e2 47465864 		.ascii	"GFXdrawCircleHelper\000"
 10837      72617743 
 10837      6972636C 
 10837      6548656C 
 10837      70657200 
 10838              	.LASF69:
 10839 03f6 47465864 		.ascii	"GFXdrawFastVLine\000"
 10839      72617746 
 10839      61737456 
 10839      4C696E65 
 10839      00
 10840              	.LASF99:
 10841 0407 73697A65 		.ascii	"size\000"
 10841      00
 10842              	.LASF103:
 10843 040c 796F3136 		.ascii	"yo16\000"
 10843      00
 10844              	.LASF151:
 10845 0411 47465873 		.ascii	"GFXscrollRight\000"
 10845      63726F6C 
 10845      6C526967 
 10845      687400
 10846              	.LASF141:
 10847 0420 4F4C4544 		.ascii	"OLEDparsePitchClass\000"
 10847      70617273 
 10847      65506974 
 10847      6368436C 
 10847      61737300 
 10848              	.LASF23:
 10849 0434 68656967 		.ascii	"height\000"
 10849      687400
 10850              	.LASF112:
 10851 043b 47465873 		.ascii	"GFXsetTextSize\000"
 10851      65745465 
 10851      78745369 
 10851      7A6500
 10852              	.LASF0:
 10853 044a 5F5F696E 		.ascii	"__int8_t\000"
 10853      74385F74 
 10853      00
 10854              	.LASF58:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 216


 10855 0453 6D794746 		.ascii	"myGFX\000"
 10855      5800
 10856              	.LASF155:
 10857 0459 6766782E 		.ascii	"gfx.c\000"
 10857      6300
 10858              	.LASF37:
 10859 045f 6C6F6E67 		.ascii	"long double\000"
 10859      20646F75 
 10859      626C6500 
 10860              	.LASF18:
 10861 046b 75696E74 		.ascii	"uint16_t\000"
 10861      31365F74 
 10861      00
 10862              	.LASF109:
 10863 0474 47465873 		.ascii	"GFXsetCursor\000"
 10863      65744375 
 10863      72736F72 
 10863      00
 10864              	.LASF83:
 10865 0481 47465864 		.ascii	"GFXdrawRoundRect\000"
 10865      72617752 
 10865      6F756E64 
 10865      52656374 
 10865      00
 10866              	.LASF96:
 10867 0492 73746172 		.ascii	"startWrite\000"
 10867      74577269 
 10867      746500
 10868              	.LASF5:
 10869 049d 73686F72 		.ascii	"short int\000"
 10869      7420696E 
 10869      7400
 10870              	.LASF9:
 10871 04a7 6C6F6E67 		.ascii	"long int\000"
 10871      20696E74 
 10871      00
 10872              	.LASF149:
 10873 04b0 47465873 		.ascii	"GFXscrollDown\000"
 10873      63726F6C 
 10873      6C446F77 
 10873      6E00
 10874              	.LASF62:
 10875 04be 47465873 		.ascii	"GFXstartWrite\000"
 10875      74617274 
 10875      57726974 
 10875      6500
 10876              	.LASF152:
 10877 04cc 49544D5F 		.ascii	"ITM_RxBuffer\000"
 10877      52784275 
 10877      66666572 
 10877      00
 10878              	.LASF117:
 10879 04d9 47465863 		.ascii	"GFXcp437\000"
 10879      70343337 
 10879      00
 10880              	.LASF52:
 10881 04e2 666F6E74 		.ascii	"fontHeight\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 217


 10881      48656967 
 10881      687400
 10882              	.LASF142:
 10883 04ed 4F4C4544 		.ascii	"OLEDparseFixedFloat\000"
 10883      70617273 
 10883      65466978 
 10883      6564466C 
 10883      6F617400 
 10884              	.LASF71:
 10885 0501 47465866 		.ascii	"GFXfillRect\000"
 10885      696C6C52 
 10885      65637400 
 10886              	.LASF126:
 10887 050d 47465868 		.ascii	"GFXheight\000"
 10887      65696768 
 10887      7400
 10888              	.LASF67:
 10889 0517 47465877 		.ascii	"GFXwriteFillRect\000"
 10889      72697465 
 10889      46696C6C 
 10889      52656374 
 10889      00
 10890              	.LASF59:
 10891 0528 636F6C6F 		.ascii	"color\000"
 10891      7200
 10892              	.LASF132:
 10893 052e 77686963 		.ascii	"whichPlace\000"
 10893      68506C61 
 10893      636500
 10894              	.LASF55:
 10895 0539 6D794766 		.ascii	"myGfx\000"
 10895      7800
 10896              	.LASF1:
 10897 053f 5F5F7569 		.ascii	"__uint8_t\000"
 10897      6E74385F 
 10897      7400
 10898              	.LASF135:
 10899 0549 6D696469 		.ascii	"midi\000"
 10899      00
 10900              	.LASF61:
 10901 054e 79737465 		.ascii	"ystep\000"
 10901      7000
 10902              	.LASF139:
 10903 0554 6E6F7465 		.ascii	"note\000"
 10903      00
 10904              	.LASF122:
 10905 0559 6D617878 		.ascii	"maxx\000"
 10905      00
 10906              	.LASF110:
 10907 055e 47465867 		.ascii	"GFXgetCursorX\000"
 10907      65744375 
 10907      72736F72 
 10907      5800
 10908              	.LASF111:
 10909 056c 47465867 		.ascii	"GFXgetCursorY\000"
 10909      65744375 
 10909      72736F72 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 218


 10909      5900
 10910              	.LASF51:
 10911 057a 67667846 		.ascii	"gfxFont\000"
 10911      6F6E7400 
 10912              	.LASF38:
 10913 0582 73697A65 		.ascii	"sizetype\000"
 10913      74797065 
 10913      00
 10914              	.LASF11:
 10915 058b 6C6F6E67 		.ascii	"long unsigned int\000"
 10915      20756E73 
 10915      69676E65 
 10915      6420696E 
 10915      7400
 10916              	.LASF85:
 10917 059d 47465864 		.ascii	"GFXdrawTriangle\000"
 10917      72617754 
 10917      7269616E 
 10917      676C6500 
 10918              	.LASF64:
 10919 05ad 47465877 		.ascii	"GFXwritePixel\000"
 10919      72697465 
 10919      50697865 
 10919      6C00
 10920              	.LASF97:
 10921 05bb 656E6457 		.ascii	"endWrite\000"
 10921      72697465 
 10921      00
 10922              	.LASF79:
 10923 05c4 47465866 		.ascii	"GFXfillCircle\000"
 10923      696C6C43 
 10923      6972636C 
 10923      6500
 10924              	.LASF105:
 10925 05d2 666F6E74 		.ascii	"fontWidth\000"
 10925      57696474 
 10925      6800
 10926              	.LASF19:
 10927 05dc 696E7433 		.ascii	"int32_t\000"
 10927      325F7400 
 10928              	.LASF29:
 10929 05e4 676C7970 		.ascii	"glyph\000"
 10929      6800
 10930              	.LASF95:
 10931 05ea 62797465 		.ascii	"byte\000"
 10931      00
 10932              	.LASF146:
 10933 05ef 6E6F6E7A 		.ascii	"nonzeroHasHappened\000"
 10933      65726F48 
 10933      61734861 
 10933      7070656E 
 10933      656400
 10934              	.LASF68:
 10935 0602 47465865 		.ascii	"GFXendWrite\000"
 10935      6E645772 
 10935      69746500 
 10936              	.LASF3:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 219


 10937 060e 756E7369 		.ascii	"unsigned char\000"
 10937      676E6564 
 10937      20636861 
 10937      7200
 10938              	.LASF28:
 10939 061c 6269746D 		.ascii	"bitmap\000"
 10939      617000
 10940              	.LASF10:
 10941 0623 5F5F7569 		.ascii	"__uint32_t\000"
 10941      6E743332 
 10941      5F7400
 10942              	.LASF57:
 10943 062e 47465877 		.ascii	"GFXwriteLine\000"
 10943      72697465 
 10943      4C696E65 
 10943      00
 10944              	.LASF104:
 10945 063b 47465863 		.ascii	"GFXcheckScrollWrap\000"
 10945      6865636B 
 10945      5363726F 
 10945      6C6C5772 
 10945      617000
 10946              	.LASF100:
 10947 064e 6C696E65 		.ascii	"line\000"
 10947      00
 10948              	.LASF114:
 10949 0653 47465873 		.ascii	"GFXsetTextWrap\000"
 10949      65745465 
 10949      78745772 
 10949      617000
 10950              	.LASF30:
 10951 0662 66697273 		.ascii	"first\000"
 10951      7400
 10952              	.LASF93:
 10953 0668 47465864 		.ascii	"GFXdrawBitmap\000"
 10953      72617742 
 10953      69746D61 
 10953      7000
 10954              	.LASF78:
 10955 0676 636F726E 		.ascii	"cornername\000"
 10955      65726E61 
 10955      6D6500
 10956              	.LASF128:
 10957 0681 4F4C4544 		.ascii	"OLEDparseInt\000"
 10957      70617273 
 10957      65496E74 
 10957      00
 10958              	.LASF24:
 10959 068e 78416476 		.ascii	"xAdvance\000"
 10959      616E6365 
 10959      00
 10960              	.LASF98:
 10961 0697 47465864 		.ascii	"GFXdrawChar\000"
 10961      72617743 
 10961      68617200 
 10962              	.LASF145:
 10963 06a3 706F7765 		.ascii	"power\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 220


 10963      7200
 10964              	.LASF25:
 10965 06a9 784F6666 		.ascii	"xOffset\000"
 10965      73657400 
 10966              	.LASF54:
 10967 06b1 6175746F 		.ascii	"autoscroll\000"
 10967      7363726F 
 10967      6C6C00
 10968              	.LASF75:
 10969 06bc 6464465F 		.ascii	"ddF_x\000"
 10969      7800
 10970              	.LASF76:
 10971 06c2 6464465F 		.ascii	"ddF_y\000"
 10971      7900
 10972              	.LASF2:
 10973 06c8 7369676E 		.ascii	"signed char\000"
 10973      65642063 
 10973      68617200 
 10974              	.LASF81:
 10975 06d4 64656C74 		.ascii	"delta\000"
 10975      6100
 10976              	.LASF7:
 10977 06da 73686F72 		.ascii	"short unsigned int\000"
 10977      7420756E 
 10977      7369676E 
 10977      65642069 
 10977      6E7400
 10978              	.LASF72:
 10979 06ed 47465866 		.ascii	"GFXfillScreen\000"
 10979      696C6C53 
 10979      63726565 
 10979      6E00
 10980              	.LASF123:
 10981 06fb 6D617879 		.ascii	"maxy\000"
 10981      00
 10982              	.LASF35:
 10983 0700 646F7562 		.ascii	"double\000"
 10983      6C6500
 10984              	.LASF47:
 10985 0707 74657874 		.ascii	"textcolor\000"
 10985      636F6C6F 
 10985      7200
 10986              	.LASF84:
 10987 0711 47465866 		.ascii	"GFXfillRoundRect\000"
 10987      696C6C52 
 10987      6F756E64 
 10987      52656374 
 10987      00
 10988              	.LASF138:
 10989 0722 6F637461 		.ascii	"octave\000"
 10989      766500
 10990              	.LASF80:
 10991 0729 47465866 		.ascii	"GFXfillCircleHelper\000"
 10991      696C6C43 
 10991      6972636C 
 10991      6548656C 
 10991      70657200 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpSM1KX.s 			page 221


 10992              	.LASF48:
 10993 073d 74657874 		.ascii	"textbgcolor\000"
 10993      6267636F 
 10993      6C6F7200 
 10994              	.LASF102:
 10995 0749 786F3136 		.ascii	"xo16\000"
 10995      00
 10996              	.LASF115:
 10997 074e 47465867 		.ascii	"GFXgetRotation\000"
 10997      6574526F 
 10997      74617469 
 10997      6F6E00
 10998              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
