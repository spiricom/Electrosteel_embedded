ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"gfx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.section	.text.GFXinit,"ax",%progbits
  21              		.align	2
  22              		.global	GFXinit
  23              		.thumb
  24              		.thumb_func
  25              		.type	GFXinit, %function
  26              	GFXinit:
  27              	.LFB64:
  28              		.file 1 "gfx.c"
   1:gfx.c         **** /*
   2:gfx.c         ****  * gfx.c
   3:gfx.c         ****  *  a C port of the Adafruit GFX library
   4:gfx.c         ****  *  Created on: Jul 8, 2018
   5:gfx.c         ****  *      Author: jeffsnyder
   6:gfx.c         ****  */
   7:gfx.c         **** 
   8:gfx.c         **** 
   9:gfx.c         **** /*
  10:gfx.c         ****  This is the core graphics library for all our displays, providing a common
  11:gfx.c         ****  set of graphics primitives (points, lines, circles, etc.).  It needs to be
  12:gfx.c         ****  paired with a hardware-specific library for each display device we carry
  13:gfx.c         ****  (to handle the lower-level functions).
  14:gfx.c         ****  
  15:gfx.c         ****  Adafruit invests time and resources providing this open source code, please
  16:gfx.c         ****  support Adafruit & open-source hardware by purchasing products from Adafruit!
  17:gfx.c         ****  
  18:gfx.c         ****  Copyright (c) 2013 Adafruit Industries.  All rights reserved.
  19:gfx.c         ****  
  20:gfx.c         ****  Redistribution and use in source and binary forms, with or without
  21:gfx.c         ****  modification, are permitted provided that the following conditions are met:
  22:gfx.c         ****  
  23:gfx.c         ****  - Redistributions of source code must retain the above copyright notice,
  24:gfx.c         ****  this list of conditions and the following disclaimer.
  25:gfx.c         ****  - Redistributions in binary form must reproduce the above copyright notice,
  26:gfx.c         ****  this list of conditions and the following disclaimer in the documentation
  27:gfx.c         ****  and/or other materials provided with the distribution.
  28:gfx.c         ****  
  29:gfx.c         ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 2


  30:gfx.c         ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:gfx.c         ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  32:gfx.c         ****  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  33:gfx.c         ****  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  34:gfx.c         ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  35:gfx.c         ****  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  36:gfx.c         ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  37:gfx.c         ****  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  38:gfx.c         ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:gfx.c         ****  POSSIBILITY OF SUCH DAMAGE.
  40:gfx.c         ****  */
  41:gfx.c         **** 
  42:gfx.c         **** 
  43:gfx.c         **** #include "gfx.h"
  44:gfx.c         **** #include <stdint.h>
  45:gfx.c         **** #include <stdlib.h>
  46:gfx.c         **** 
  47:gfx.c         ****         
  48:gfx.c         ****         // Many (but maybe not all) non-AVR board installs define macros
  49:gfx.c         ****         // for compatibility with existing PROGMEM-reading AVR code.
  50:gfx.c         ****         // Do our own checks and defines here for good measure...
  51:gfx.c         ****         
  52:gfx.c         **** #ifndef pgm_read_byte
  53:gfx.c         **** #define pgm_read_byte(addr) (*(const unsigned char *)(addr))
  54:gfx.c         **** #endif
  55:gfx.c         **** #ifndef pgm_read_word
  56:gfx.c         **** #define pgm_read_word(addr) (*(const unsigned short *)(addr))
  57:gfx.c         **** #endif
  58:gfx.c         **** #ifndef pgm_read_dword
  59:gfx.c         **** #define pgm_read_dword(addr) (*(const unsigned long long *)(addr))
  60:gfx.c         **** #endif
  61:gfx.c         ****         
  62:gfx.c         ****         // Pointers are a peculiar case...typically 16-bit on AVR boards,
  63:gfx.c         ****         // 32 bits elsewhere.  Try to accommodate both...
  64:gfx.c         ****         
  65:gfx.c         ****         
  66:gfx.c         **** #define pgm_read_pointer(addr) ((void *)pgm_read_dword(addr))
  67:gfx.c         ****         
  68:gfx.c         ****         
  69:gfx.c         **** #ifndef min
  70:gfx.c         **** #define min(a,b) (((a) < (b)) ? (a) : (b))
  71:gfx.c         **** #endif
  72:gfx.c         ****         
  73:gfx.c         **** #ifndef _swap_int16_t
  74:gfx.c         **** #define _swap_int16_t(a, b) { int16_t t = a; a = b; b = t; }
  75:gfx.c         **** #endif
  76:gfx.c         ****         
  77:gfx.c         ****         void GFXinit(GFX* myGfx, int16_t w, int16_t h)
  78:gfx.c         ****         {
  29              		.loc 1 78 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 3


  37 0002 83B0     		sub	sp, sp, #12
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  42 0008 0B46     		mov	r3, r1
  43 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  44 000c 1346     		mov	r3, r2	@ movhi
  45 000e 3B80     		strh	r3, [r7]	@ movhi
  79:gfx.c         ****             myGfx->WIDTH = w;
  46              		.loc 1 79 0
  47 0010 7B68     		ldr	r3, [r7, #4]
  48 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
  49 0014 1A80     		strh	r2, [r3]	@ movhi
  80:gfx.c         ****             myGfx->HEIGHT = h;
  50              		.loc 1 80 0
  51 0016 7B68     		ldr	r3, [r7, #4]
  52 0018 3A88     		ldrh	r2, [r7]	@ movhi
  53 001a 5A80     		strh	r2, [r3, #2]	@ movhi
  81:gfx.c         ****             myGfx->_width    = w;
  54              		.loc 1 81 0
  55 001c 7A88     		ldrh	r2, [r7, #2]
  56 001e 7B68     		ldr	r3, [r7, #4]
  57 0020 9A80     		strh	r2, [r3, #4]	@ movhi
  82:gfx.c         ****             myGfx->_height   = h;
  58              		.loc 1 82 0
  59 0022 3A88     		ldrh	r2, [r7]
  60 0024 7B68     		ldr	r3, [r7, #4]
  61 0026 DA80     		strh	r2, [r3, #6]	@ movhi
  83:gfx.c         ****             myGfx->rotation  = 0;
  62              		.loc 1 83 0
  63 0028 7B68     		ldr	r3, [r7, #4]
  64 002a 0022     		movs	r2, #0
  65 002c 1A81     		strh	r2, [r3, #8]	@ movhi
  84:gfx.c         ****             myGfx->cursor_y  = 0;
  66              		.loc 1 84 0
  67 002e 7B68     		ldr	r3, [r7, #4]
  68 0030 0022     		movs	r2, #0
  69 0032 5A81     		strh	r2, [r3, #10]	@ movhi
  85:gfx.c         ****             myGfx->cursor_x = 0;
  70              		.loc 1 85 0
  71 0034 7B68     		ldr	r3, [r7, #4]
  72 0036 0022     		movs	r2, #0
  73 0038 9A81     		strh	r2, [r3, #12]	@ movhi
  86:gfx.c         ****             myGfx->textsize  = 1;
  74              		.loc 1 86 0
  75 003a 7B68     		ldr	r3, [r7, #4]
  76 003c 0122     		movs	r2, #1
  77 003e DA81     		strh	r2, [r3, #14]	@ movhi
  87:gfx.c         ****             myGfx->textcolor = 0xFFFF;
  78              		.loc 1 87 0
  79 0040 7B68     		ldr	r3, [r7, #4]
  80 0042 4FF6FF72 		movw	r2, #65535
  81 0046 1A82     		strh	r2, [r3, #16]	@ movhi
  88:gfx.c         ****             myGfx->textbgcolor = 0xFFFF;
  82              		.loc 1 88 0
  83 0048 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 4


  84 004a 4FF6FF72 		movw	r2, #65535
  85 004e 5A82     		strh	r2, [r3, #18]	@ movhi
  89:gfx.c         ****             myGfx->wrap      = 1;
  86              		.loc 1 89 0
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 0122     		movs	r2, #1
  89 0054 9A82     		strh	r2, [r3, #20]	@ movhi
  90:gfx.c         ****             myGfx->_cp437    = 0;
  90              		.loc 1 90 0
  91 0056 7B68     		ldr	r3, [r7, #4]
  92 0058 0022     		movs	r2, #0
  93 005a DA82     		strh	r2, [r3, #22]	@ movhi
  91:gfx.c         ****             myGfx->gfxFont   = NULL;
  94              		.loc 1 91 0
  95 005c 7B68     		ldr	r3, [r7, #4]
  96 005e 0022     		movs	r2, #0
  97 0060 9A61     		str	r2, [r3, #24]
  92:gfx.c         ****             myGfx->rotation = 0;
  98              		.loc 1 92 0
  99 0062 7B68     		ldr	r3, [r7, #4]
 100 0064 0022     		movs	r2, #0
 101 0066 1A81     		strh	r2, [r3, #8]	@ movhi
  93:gfx.c         ****             myGfx->fontDesc = 0;
 102              		.loc 1 93 0
 103 0068 7B68     		ldr	r3, [r7, #4]
 104 006a 0022     		movs	r2, #0
 105 006c DA83     		strh	r2, [r3, #30]	@ movhi
  94:gfx.c         ****             myGfx->fontHeight = 8;
 106              		.loc 1 94 0
 107 006e 7B68     		ldr	r3, [r7, #4]
 108 0070 0822     		movs	r2, #8
 109 0072 9A83     		strh	r2, [r3, #28]	@ movhi
  95:gfx.c         ****         }
 110              		.loc 1 95 0
 111 0074 00BF     		nop
 112 0076 0C37     		adds	r7, r7, #12
 113              		.cfi_def_cfa_offset 4
 114 0078 BD46     		mov	sp, r7
 115              		.cfi_def_cfa_register 13
 116              		@ sp needed
 117 007a 80BC     		pop	{r7}
 118              		.cfi_restore 7
 119              		.cfi_def_cfa_offset 0
 120 007c 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE64:
 123              		.size	GFXinit, .-GFXinit
 124 007e 00BF     		.section	.text.GFXwriteLine,"ax",%progbits
 125              		.align	2
 126              		.global	GFXwriteLine
 127              		.thumb
 128              		.thumb_func
 129              		.type	GFXwriteLine, %function
 130              	GFXwriteLine:
 131              	.LFB65:
  96:gfx.c         ****         
  97:gfx.c         ****         // Bresenham's algorithm - thx wikpedia
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 5


  98:gfx.c         ****         void GFXwriteLine(GFX* myGFX, int16_t x0, int16_t y0, int16_t x1, int16_t y1,
  99:gfx.c         ****                           uint16_t color) {
 132              		.loc 1 99 0
 133              		.cfi_startproc
 134              		@ args = 8, pretend = 0, frame = 40
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136 0000 80B5     		push	{r7, lr}
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 8AB0     		sub	sp, sp, #40
 141              		.cfi_def_cfa_offset 48
 142 0004 00AF     		add	r7, sp, #0
 143              		.cfi_def_cfa_register 7
 144 0006 F860     		str	r0, [r7, #12]
 145 0008 0846     		mov	r0, r1
 146 000a 1146     		mov	r1, r2
 147 000c 1A46     		mov	r2, r3
 148 000e 0346     		mov	r3, r0	@ movhi
 149 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 150 0012 0B46     		mov	r3, r1	@ movhi
 151 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 152 0016 1346     		mov	r3, r2	@ movhi
 153 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 100:gfx.c         ****             int16_t steep = abs(y1 - y0) > abs(x1 - x0);
 154              		.loc 1 100 0
 155 001a B7F93020 		ldrsh	r2, [r7, #48]
 156 001e B7F90830 		ldrsh	r3, [r7, #8]
 157 0022 D31A     		subs	r3, r2, r3
 158 0024 83EAE372 		eor	r2, r3, r3, asr #31
 159 0028 A2EBE372 		sub	r2, r2, r3, asr #31
 160 002c B7F90610 		ldrsh	r1, [r7, #6]
 161 0030 B7F90A30 		ldrsh	r3, [r7, #10]
 162 0034 CB1A     		subs	r3, r1, r3
 163 0036 002B     		cmp	r3, #0
 164 0038 B8BF     		it	lt
 165 003a 5B42     		rsblt	r3, r3, #0
 166 003c 9A42     		cmp	r2, r3
 167 003e CCBF     		ite	gt
 168 0040 0123     		movgt	r3, #1
 169 0042 0023     		movle	r3, #0
 170 0044 DBB2     		uxtb	r3, r3
 171 0046 7B84     		strh	r3, [r7, #34]	@ movhi
 101:gfx.c         ****             if (steep) {
 172              		.loc 1 101 0
 173 0048 B7F92230 		ldrsh	r3, [r7, #34]
 174 004c 002B     		cmp	r3, #0
 175 004e 0BD0     		beq	.L3
 176              	.LBB2:
 102:gfx.c         ****                 _swap_int16_t(x0, y0);
 177              		.loc 1 102 0
 178 0050 7B89     		ldrh	r3, [r7, #10]	@ movhi
 179 0052 3B84     		strh	r3, [r7, #32]	@ movhi
 180 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 181 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 182 0058 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 183 005a 3B81     		strh	r3, [r7, #8]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 6


 184              	.LBE2:
 185              	.LBB3:
 103:gfx.c         ****                 _swap_int16_t(x1, y1);
 186              		.loc 1 103 0
 187 005c FB88     		ldrh	r3, [r7, #6]	@ movhi
 188 005e FB83     		strh	r3, [r7, #30]	@ movhi
 189 0060 3B8E     		ldrh	r3, [r7, #48]	@ movhi
 190 0062 FB80     		strh	r3, [r7, #6]	@ movhi
 191 0064 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 192 0066 3B86     		strh	r3, [r7, #48]	@ movhi
 193              	.L3:
 194              	.LBE3:
 104:gfx.c         ****             }
 105:gfx.c         ****             
 106:gfx.c         ****             if (x0 > x1) {
 195              		.loc 1 106 0
 196 0068 B7F90A20 		ldrsh	r2, [r7, #10]
 197 006c B7F90630 		ldrsh	r3, [r7, #6]
 198 0070 9A42     		cmp	r2, r3
 199 0072 0BDD     		ble	.L4
 200              	.LBB4:
 107:gfx.c         ****                 _swap_int16_t(x0, x1);
 201              		.loc 1 107 0
 202 0074 7B89     		ldrh	r3, [r7, #10]	@ movhi
 203 0076 BB83     		strh	r3, [r7, #28]	@ movhi
 204 0078 FB88     		ldrh	r3, [r7, #6]	@ movhi
 205 007a 7B81     		strh	r3, [r7, #10]	@ movhi
 206 007c BB8B     		ldrh	r3, [r7, #28]	@ movhi
 207 007e FB80     		strh	r3, [r7, #6]	@ movhi
 208              	.LBE4:
 209              	.LBB5:
 108:gfx.c         ****                 _swap_int16_t(y0, y1);
 210              		.loc 1 108 0
 211 0080 3B89     		ldrh	r3, [r7, #8]	@ movhi
 212 0082 7B83     		strh	r3, [r7, #26]	@ movhi
 213 0084 3B8E     		ldrh	r3, [r7, #48]	@ movhi
 214 0086 3B81     		strh	r3, [r7, #8]	@ movhi
 215 0088 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 216 008a 3B86     		strh	r3, [r7, #48]	@ movhi
 217              	.L4:
 218              	.LBE5:
 109:gfx.c         ****             }
 110:gfx.c         ****             
 111:gfx.c         ****             int16_t dx, dy;
 112:gfx.c         ****             dx = x1 - x0;
 219              		.loc 1 112 0
 220 008c FA88     		ldrh	r2, [r7, #6]
 221 008e 7B89     		ldrh	r3, [r7, #10]
 222 0090 D31A     		subs	r3, r2, r3
 223 0092 9BB2     		uxth	r3, r3
 224 0094 3B83     		strh	r3, [r7, #24]	@ movhi
 113:gfx.c         ****             dy = abs(y1 - y0);
 225              		.loc 1 113 0
 226 0096 B7F93020 		ldrsh	r2, [r7, #48]
 227 009a B7F90830 		ldrsh	r3, [r7, #8]
 228 009e D31A     		subs	r3, r2, r3
 229 00a0 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 7


 230 00a2 B8BF     		it	lt
 231 00a4 5B42     		rsblt	r3, r3, #0
 232 00a6 FB82     		strh	r3, [r7, #22]	@ movhi
 114:gfx.c         ****             
 115:gfx.c         ****             int16_t err = dx / 2;
 233              		.loc 1 115 0
 234 00a8 B7F91830 		ldrsh	r3, [r7, #24]
 235 00ac DA0F     		lsrs	r2, r3, #31
 236 00ae 1344     		add	r3, r3, r2
 237 00b0 5B10     		asrs	r3, r3, #1
 238 00b2 FB84     		strh	r3, [r7, #38]	@ movhi
 116:gfx.c         ****             int16_t ystep;
 117:gfx.c         ****             
 118:gfx.c         ****             if (y0 < y1) {
 239              		.loc 1 118 0
 240 00b4 B7F90820 		ldrsh	r2, [r7, #8]
 241 00b8 B7F93030 		ldrsh	r3, [r7, #48]
 242 00bc 9A42     		cmp	r2, r3
 243 00be 02DA     		bge	.L5
 119:gfx.c         ****                 ystep = 1;
 244              		.loc 1 119 0
 245 00c0 0123     		movs	r3, #1
 246 00c2 BB84     		strh	r3, [r7, #36]	@ movhi
 247 00c4 31E0     		b	.L7
 248              	.L5:
 120:gfx.c         ****             } else {
 121:gfx.c         ****                 ystep = -1;
 249              		.loc 1 121 0
 250 00c6 4FF6FF73 		movw	r3, #65535
 251 00ca BB84     		strh	r3, [r7, #36]	@ movhi
 122:gfx.c         ****             }
 123:gfx.c         ****             
 124:gfx.c         ****             for (; x0<=x1; x0++) {
 252              		.loc 1 124 0
 253 00cc 2DE0     		b	.L7
 254              	.L11:
 125:gfx.c         ****                 if (steep) {
 255              		.loc 1 125 0
 256 00ce B7F92230 		ldrsh	r3, [r7, #34]
 257 00d2 002B     		cmp	r3, #0
 258 00d4 08D0     		beq	.L8
 126:gfx.c         ****                     GFXwritePixel(myGFX, y0, x0, color);
 259              		.loc 1 126 0
 260 00d6 BB8E     		ldrh	r3, [r7, #52]
 261 00d8 B7F90A20 		ldrsh	r2, [r7, #10]
 262 00dc B7F90810 		ldrsh	r1, [r7, #8]
 263 00e0 F868     		ldr	r0, [r7, #12]
 264 00e2 FFF7FEFF 		bl	GFXwritePixel
 265 00e6 07E0     		b	.L9
 266              	.L8:
 127:gfx.c         ****                 } else {
 128:gfx.c         ****                     GFXwritePixel(myGFX, x0, y0, color);
 267              		.loc 1 128 0
 268 00e8 BB8E     		ldrh	r3, [r7, #52]
 269 00ea B7F90820 		ldrsh	r2, [r7, #8]
 270 00ee B7F90A10 		ldrsh	r1, [r7, #10]
 271 00f2 F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 8


 272 00f4 FFF7FEFF 		bl	GFXwritePixel
 273              	.L9:
 129:gfx.c         ****                 }
 130:gfx.c         ****                 err -= dy;
 274              		.loc 1 130 0
 275 00f8 FA8C     		ldrh	r2, [r7, #38]
 276 00fa FB8A     		ldrh	r3, [r7, #22]
 277 00fc D31A     		subs	r3, r2, r3
 278 00fe 9BB2     		uxth	r3, r3
 279 0100 FB84     		strh	r3, [r7, #38]	@ movhi
 131:gfx.c         ****                 if (err < 0) {
 280              		.loc 1 131 0
 281 0102 B7F92630 		ldrsh	r3, [r7, #38]
 282 0106 002B     		cmp	r3, #0
 283 0108 09DA     		bge	.L10
 132:gfx.c         ****                     y0 += ystep;
 284              		.loc 1 132 0
 285 010a 3A89     		ldrh	r2, [r7, #8]
 286 010c BB8C     		ldrh	r3, [r7, #36]
 287 010e 1344     		add	r3, r3, r2
 288 0110 9BB2     		uxth	r3, r3
 289 0112 3B81     		strh	r3, [r7, #8]	@ movhi
 133:gfx.c         ****                     err += dx;
 290              		.loc 1 133 0
 291 0114 FA8C     		ldrh	r2, [r7, #38]
 292 0116 3B8B     		ldrh	r3, [r7, #24]
 293 0118 1344     		add	r3, r3, r2
 294 011a 9BB2     		uxth	r3, r3
 295 011c FB84     		strh	r3, [r7, #38]	@ movhi
 296              	.L10:
 124:gfx.c         ****                 if (steep) {
 297              		.loc 1 124 0
 298 011e B7F90A30 		ldrsh	r3, [r7, #10]
 299 0122 9BB2     		uxth	r3, r3
 300 0124 0133     		adds	r3, r3, #1
 301 0126 9BB2     		uxth	r3, r3
 302 0128 7B81     		strh	r3, [r7, #10]	@ movhi
 303              	.L7:
 124:gfx.c         ****                 if (steep) {
 304              		.loc 1 124 0 is_stmt 0 discriminator 1
 305 012a B7F90A20 		ldrsh	r2, [r7, #10]
 306 012e B7F90630 		ldrsh	r3, [r7, #6]
 307 0132 9A42     		cmp	r2, r3
 308 0134 CBDD     		ble	.L11
 134:gfx.c         ****                 }
 135:gfx.c         ****             }
 136:gfx.c         ****         }
 309              		.loc 1 136 0 is_stmt 1
 310 0136 00BF     		nop
 311 0138 2837     		adds	r7, r7, #40
 312              		.cfi_def_cfa_offset 8
 313 013a BD46     		mov	sp, r7
 314              		.cfi_def_cfa_register 13
 315              		@ sp needed
 316 013c 80BD     		pop	{r7, pc}
 317              		.cfi_endproc
 318              	.LFE65:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 9


 319              		.size	GFXwriteLine, .-GFXwriteLine
 320 013e 00BF     		.section	.text.GFXstartWrite,"ax",%progbits
 321              		.align	2
 322              		.global	GFXstartWrite
 323              		.thumb
 324              		.thumb_func
 325              		.type	GFXstartWrite, %function
 326              	GFXstartWrite:
 327              	.LFB66:
 137:gfx.c         ****         
 138:gfx.c         ****         void GFXstartWrite(GFX* myGFX){
 328              		.loc 1 138 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 8
 331              		@ frame_needed = 1, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333 0000 80B4     		push	{r7}
 334              		.cfi_def_cfa_offset 4
 335              		.cfi_offset 7, -4
 336 0002 83B0     		sub	sp, sp, #12
 337              		.cfi_def_cfa_offset 16
 338 0004 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 340 0006 7860     		str	r0, [r7, #4]
 139:gfx.c         ****             // Overwrite in subclasses if desired!
 140:gfx.c         ****         }
 341              		.loc 1 140 0
 342 0008 00BF     		nop
 343 000a 0C37     		adds	r7, r7, #12
 344              		.cfi_def_cfa_offset 4
 345 000c BD46     		mov	sp, r7
 346              		.cfi_def_cfa_register 13
 347              		@ sp needed
 348 000e 80BC     		pop	{r7}
 349              		.cfi_restore 7
 350              		.cfi_def_cfa_offset 0
 351 0010 7047     		bx	lr
 352              		.cfi_endproc
 353              	.LFE66:
 354              		.size	GFXstartWrite, .-GFXstartWrite
 355 0012 00BF     		.section	.text.GFXdrawPixel,"ax",%progbits
 356              		.align	2
 357              		.global	GFXdrawPixel
 358              		.thumb
 359              		.thumb_func
 360              		.type	GFXdrawPixel, %function
 361              	GFXdrawPixel:
 362              	.LFB67:
 141:gfx.c         ****         
 142:gfx.c         ****         // the most basic function, set a single pixel
 143:gfx.c         ****         void GFXdrawPixel(GFX* myGFX, int16_t x, int16_t y, uint16_t color) {
 363              		.loc 1 143 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 24
 366              		@ frame_needed = 1, uses_anonymous_args = 0
 367 0000 80B5     		push	{r7, lr}
 368              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 10


 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 86B0     		sub	sp, sp, #24
 372              		.cfi_def_cfa_offset 32
 373 0004 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
 375 0006 F860     		str	r0, [r7, #12]
 376 0008 0846     		mov	r0, r1
 377 000a 1146     		mov	r1, r2
 378 000c 1A46     		mov	r2, r3
 379 000e 0346     		mov	r3, r0	@ movhi
 380 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 381 0012 0B46     		mov	r3, r1	@ movhi
 382 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 383 0016 1346     		mov	r3, r2	@ movhi
 384 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 144:gfx.c         ****             if ((x < 0) || (x >= myGFX->_width) || (y < 0) || (y >= myGFX->_height))
 385              		.loc 1 144 0
 386 001a B7F90A30 		ldrsh	r3, [r7, #10]
 387 001e 002B     		cmp	r3, #0
 388 0020 C0F2D780 		blt	.L27
 389              		.loc 1 144 0 is_stmt 0 discriminator 1
 390 0024 B7F90A30 		ldrsh	r3, [r7, #10]
 391 0028 FA68     		ldr	r2, [r7, #12]
 392 002a 9288     		ldrh	r2, [r2, #4]
 393 002c 9342     		cmp	r3, r2
 394 002e 80F2D080 		bge	.L27
 395              		.loc 1 144 0 discriminator 2
 396 0032 B7F90830 		ldrsh	r3, [r7, #8]
 397 0036 002B     		cmp	r3, #0
 398 0038 C0F2CB80 		blt	.L27
 399              		.loc 1 144 0 discriminator 3
 400 003c B7F90830 		ldrsh	r3, [r7, #8]
 401 0040 FA68     		ldr	r2, [r7, #12]
 402 0042 D288     		ldrh	r2, [r2, #6]
 403 0044 9342     		cmp	r3, r2
 404 0046 80F2C480 		bge	.L27
 145:gfx.c         ****                 return;
 146:gfx.c         ****             
 147:gfx.c         ****             // check rotation, move pixel around if necessary
 148:gfx.c         ****             switch (GFXgetRotation(myGFX)) {
 405              		.loc 1 148 0 is_stmt 1
 406 004a F868     		ldr	r0, [r7, #12]
 407 004c FFF7FEFF 		bl	GFXgetRotation
 408 0050 0346     		mov	r3, r0
 409 0052 022B     		cmp	r3, #2
 410 0054 14D0     		beq	.L18
 411 0056 032B     		cmp	r3, #3
 412 0058 27D0     		beq	.L19
 413 005a 012B     		cmp	r3, #1
 414 005c 36D1     		bne	.L17
 415              	.LBB6:
 149:gfx.c         ****                 case 1:
 150:gfx.c         ****                     _swap_int16_t(x, y);
 416              		.loc 1 150 0
 417 005e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 418 0060 FB82     		strh	r3, [r7, #22]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 11


 419 0062 3B89     		ldrh	r3, [r7, #8]	@ movhi
 420 0064 7B81     		strh	r3, [r7, #10]	@ movhi
 421 0066 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 422 0068 3B81     		strh	r3, [r7, #8]	@ movhi
 423              	.LBE6:
 151:gfx.c         ****                     x = myGFX->WIDTH - x - 1;
 424              		.loc 1 151 0
 425 006a FB68     		ldr	r3, [r7, #12]
 426 006c B3F90030 		ldrsh	r3, [r3]
 427 0070 9AB2     		uxth	r2, r3
 428 0072 7B89     		ldrh	r3, [r7, #10]
 429 0074 D31A     		subs	r3, r2, r3
 430 0076 9BB2     		uxth	r3, r3
 431 0078 013B     		subs	r3, r3, #1
 432 007a 9BB2     		uxth	r3, r3
 433 007c 7B81     		strh	r3, [r7, #10]	@ movhi
 152:gfx.c         ****                     break;
 434              		.loc 1 152 0
 435 007e 25E0     		b	.L17
 436              	.L18:
 153:gfx.c         ****                 case 2:
 154:gfx.c         ****                     x = myGFX->WIDTH - x - 1;
 437              		.loc 1 154 0
 438 0080 FB68     		ldr	r3, [r7, #12]
 439 0082 B3F90030 		ldrsh	r3, [r3]
 440 0086 9AB2     		uxth	r2, r3
 441 0088 7B89     		ldrh	r3, [r7, #10]
 442 008a D31A     		subs	r3, r2, r3
 443 008c 9BB2     		uxth	r3, r3
 444 008e 013B     		subs	r3, r3, #1
 445 0090 9BB2     		uxth	r3, r3
 446 0092 7B81     		strh	r3, [r7, #10]	@ movhi
 155:gfx.c         ****                     y = myGFX->HEIGHT - y - 1;
 447              		.loc 1 155 0
 448 0094 FB68     		ldr	r3, [r7, #12]
 449 0096 B3F90230 		ldrsh	r3, [r3, #2]
 450 009a 9AB2     		uxth	r2, r3
 451 009c 3B89     		ldrh	r3, [r7, #8]
 452 009e D31A     		subs	r3, r2, r3
 453 00a0 9BB2     		uxth	r3, r3
 454 00a2 013B     		subs	r3, r3, #1
 455 00a4 9BB2     		uxth	r3, r3
 456 00a6 3B81     		strh	r3, [r7, #8]	@ movhi
 156:gfx.c         ****                     break;
 457              		.loc 1 156 0
 458 00a8 10E0     		b	.L17
 459              	.L19:
 460              	.LBB7:
 157:gfx.c         ****                 case 3:
 158:gfx.c         ****                     _swap_int16_t(x, y);
 461              		.loc 1 158 0
 462 00aa 7B89     		ldrh	r3, [r7, #10]	@ movhi
 463 00ac BB82     		strh	r3, [r7, #20]	@ movhi
 464 00ae 3B89     		ldrh	r3, [r7, #8]	@ movhi
 465 00b0 7B81     		strh	r3, [r7, #10]	@ movhi
 466 00b2 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 467 00b4 3B81     		strh	r3, [r7, #8]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 12


 468              	.LBE7:
 159:gfx.c         ****                     y = myGFX->HEIGHT - y - 1;
 469              		.loc 1 159 0
 470 00b6 FB68     		ldr	r3, [r7, #12]
 471 00b8 B3F90230 		ldrsh	r3, [r3, #2]
 472 00bc 9AB2     		uxth	r2, r3
 473 00be 3B89     		ldrh	r3, [r7, #8]
 474 00c0 D31A     		subs	r3, r2, r3
 475 00c2 9BB2     		uxth	r3, r3
 476 00c4 013B     		subs	r3, r3, #1
 477 00c6 9BB2     		uxth	r3, r3
 478 00c8 3B81     		strh	r3, [r7, #8]	@ movhi
 160:gfx.c         ****                     break;
 479              		.loc 1 160 0
 480 00ca 00BF     		nop
 481              	.L17:
 161:gfx.c         ****             }
 162:gfx.c         ****             
 163:gfx.c         ****             // x is which column
 164:gfx.c         ****             switch (color)
 482              		.loc 1 164 0
 483 00cc FB88     		ldrh	r3, [r7, #6]
 484 00ce 012B     		cmp	r3, #1
 485 00d0 04D0     		beq	.L21
 486 00d2 022B     		cmp	r3, #2
 487 00d4 54D0     		beq	.L22
 488 00d6 002B     		cmp	r3, #0
 489 00d8 28D0     		beq	.L23
 490 00da 7BE0     		b	.L13
 491              	.L21:
 165:gfx.c         ****             {
 166:gfx.c         ****                 case WHITE:   buffer[x+ (y/8)*myGFX->WIDTH] |=  (1 << (y&7)); break;
 492              		.loc 1 166 0
 493 00dc B7F90A20 		ldrsh	r2, [r7, #10]
 494 00e0 B7F90830 		ldrsh	r3, [r7, #8]
 495 00e4 002B     		cmp	r3, #0
 496 00e6 00DA     		bge	.L24
 497 00e8 0733     		adds	r3, r3, #7
 498              	.L24:
 499 00ea DB10     		asrs	r3, r3, #3
 500 00ec 18B2     		sxth	r0, r3
 501 00ee 0146     		mov	r1, r0
 502 00f0 FB68     		ldr	r3, [r7, #12]
 503 00f2 B3F90030 		ldrsh	r3, [r3]
 504 00f6 03FB01F3 		mul	r3, r3, r1
 505 00fa 1344     		add	r3, r3, r2
 506 00fc B7F90A10 		ldrsh	r1, [r7, #10]
 507 0100 FA68     		ldr	r2, [r7, #12]
 508 0102 B2F90020 		ldrsh	r2, [r2]
 509 0106 02FB00F2 		mul	r2, r2, r0
 510 010a 0A44     		add	r2, r2, r1
 511 010c 3349     		ldr	r1, .L28
 512 010e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 513 0110 51B2     		sxtb	r1, r2
 514 0112 3A89     		ldrh	r2, [r7, #8]
 515 0114 02F00702 		and	r2, r2, #7
 516 0118 0120     		movs	r0, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 13


 517 011a 00FA02F2 		lsl	r2, r0, r2
 518 011e 52B2     		sxtb	r2, r2
 519 0120 0A43     		orrs	r2, r2, r1
 520 0122 52B2     		sxtb	r2, r2
 521 0124 D1B2     		uxtb	r1, r2
 522 0126 2D4A     		ldr	r2, .L28
 523 0128 D154     		strb	r1, [r2, r3]
 524 012a 53E0     		b	.L13
 525              	.L23:
 167:gfx.c         ****                 case BLACK:   buffer[x+ (y/8)*myGFX->WIDTH] &= ~(1 << (y&7)); break;
 526              		.loc 1 167 0
 527 012c B7F90A20 		ldrsh	r2, [r7, #10]
 528 0130 B7F90830 		ldrsh	r3, [r7, #8]
 529 0134 002B     		cmp	r3, #0
 530 0136 00DA     		bge	.L25
 531 0138 0733     		adds	r3, r3, #7
 532              	.L25:
 533 013a DB10     		asrs	r3, r3, #3
 534 013c 18B2     		sxth	r0, r3
 535 013e 0146     		mov	r1, r0
 536 0140 FB68     		ldr	r3, [r7, #12]
 537 0142 B3F90030 		ldrsh	r3, [r3]
 538 0146 03FB01F3 		mul	r3, r3, r1
 539 014a 1344     		add	r3, r3, r2
 540 014c B7F90A10 		ldrsh	r1, [r7, #10]
 541 0150 FA68     		ldr	r2, [r7, #12]
 542 0152 B2F90020 		ldrsh	r2, [r2]
 543 0156 02FB00F2 		mul	r2, r2, r0
 544 015a 0A44     		add	r2, r2, r1
 545 015c 1F49     		ldr	r1, .L28
 546 015e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 547 0160 51B2     		sxtb	r1, r2
 548 0162 3A89     		ldrh	r2, [r7, #8]
 549 0164 02F00702 		and	r2, r2, #7
 550 0168 0120     		movs	r0, #1
 551 016a 00FA02F2 		lsl	r2, r0, r2
 552 016e 52B2     		sxtb	r2, r2
 553 0170 D243     		mvns	r2, r2
 554 0172 52B2     		sxtb	r2, r2
 555 0174 0A40     		ands	r2, r2, r1
 556 0176 52B2     		sxtb	r2, r2
 557 0178 D1B2     		uxtb	r1, r2
 558 017a 184A     		ldr	r2, .L28
 559 017c D154     		strb	r1, [r2, r3]
 560 017e 29E0     		b	.L13
 561              	.L22:
 168:gfx.c         ****                 case INVERSE: buffer[x+ (y/8)*myGFX->WIDTH] ^=  (1 << (y&7)); break;
 562              		.loc 1 168 0
 563 0180 B7F90A20 		ldrsh	r2, [r7, #10]
 564 0184 B7F90830 		ldrsh	r3, [r7, #8]
 565 0188 002B     		cmp	r3, #0
 566 018a 00DA     		bge	.L26
 567 018c 0733     		adds	r3, r3, #7
 568              	.L26:
 569 018e DB10     		asrs	r3, r3, #3
 570 0190 18B2     		sxth	r0, r3
 571 0192 0146     		mov	r1, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 14


 572 0194 FB68     		ldr	r3, [r7, #12]
 573 0196 B3F90030 		ldrsh	r3, [r3]
 574 019a 03FB01F3 		mul	r3, r3, r1
 575 019e 1344     		add	r3, r3, r2
 576 01a0 B7F90A10 		ldrsh	r1, [r7, #10]
 577 01a4 FA68     		ldr	r2, [r7, #12]
 578 01a6 B2F90020 		ldrsh	r2, [r2]
 579 01aa 02FB00F2 		mul	r2, r2, r0
 580 01ae 0A44     		add	r2, r2, r1
 581 01b0 0A49     		ldr	r1, .L28
 582 01b2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 583 01b4 51B2     		sxtb	r1, r2
 584 01b6 3A89     		ldrh	r2, [r7, #8]
 585 01b8 02F00702 		and	r2, r2, #7
 586 01bc 0120     		movs	r0, #1
 587 01be 00FA02F2 		lsl	r2, r0, r2
 588 01c2 52B2     		sxtb	r2, r2
 589 01c4 4A40     		eors	r2, r2, r1
 590 01c6 52B2     		sxtb	r2, r2
 591 01c8 D1B2     		uxtb	r1, r2
 592 01ca 044A     		ldr	r2, .L28
 593 01cc D154     		strb	r1, [r2, r3]
 594 01ce 00BF     		nop
 595 01d0 00E0     		b	.L13
 596              	.L27:
 145:gfx.c         ****             
 597              		.loc 1 145 0
 598 01d2 00BF     		nop
 599              	.L13:
 169:gfx.c         ****             }
 170:gfx.c         ****             
 171:gfx.c         ****         }
 600              		.loc 1 171 0
 601 01d4 1837     		adds	r7, r7, #24
 602              		.cfi_def_cfa_offset 8
 603 01d6 BD46     		mov	sp, r7
 604              		.cfi_def_cfa_register 13
 605              		@ sp needed
 606 01d8 80BD     		pop	{r7, pc}
 607              	.L29:
 608 01da 00BF     		.align	2
 609              	.L28:
 610 01dc 00000000 		.word	buffer
 611              		.cfi_endproc
 612              	.LFE67:
 613              		.size	GFXdrawPixel, .-GFXdrawPixel
 614              		.section	.text.GFXwritePixel,"ax",%progbits
 615              		.align	2
 616              		.global	GFXwritePixel
 617              		.thumb
 618              		.thumb_func
 619              		.type	GFXwritePixel, %function
 620              	GFXwritePixel:
 621              	.LFB68:
 172:gfx.c         ****         
 173:gfx.c         ****         void GFXwritePixel(GFX* myGFX,int16_t x, int16_t y, uint16_t color){
 622              		.loc 1 173 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 15


 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 16
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626 0000 80B5     		push	{r7, lr}
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
 630 0002 84B0     		sub	sp, sp, #16
 631              		.cfi_def_cfa_offset 24
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 F860     		str	r0, [r7, #12]
 635 0008 0846     		mov	r0, r1
 636 000a 1146     		mov	r1, r2
 637 000c 1A46     		mov	r2, r3
 638 000e 0346     		mov	r3, r0	@ movhi
 639 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 640 0012 0B46     		mov	r3, r1	@ movhi
 641 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 642 0016 1346     		mov	r3, r2	@ movhi
 643 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 174:gfx.c         ****             // Overwrite in subclasses if startWrite is defined!
 175:gfx.c         ****             GFXdrawPixel(myGFX, x, y, color);
 644              		.loc 1 175 0
 645 001a FB88     		ldrh	r3, [r7, #6]
 646 001c B7F90820 		ldrsh	r2, [r7, #8]
 647 0020 B7F90A10 		ldrsh	r1, [r7, #10]
 648 0024 F868     		ldr	r0, [r7, #12]
 649 0026 FFF7FEFF 		bl	GFXdrawPixel
 176:gfx.c         ****         }
 650              		.loc 1 176 0
 651 002a 00BF     		nop
 652 002c 1037     		adds	r7, r7, #16
 653              		.cfi_def_cfa_offset 8
 654 002e BD46     		mov	sp, r7
 655              		.cfi_def_cfa_register 13
 656              		@ sp needed
 657 0030 80BD     		pop	{r7, pc}
 658              		.cfi_endproc
 659              	.LFE68:
 660              		.size	GFXwritePixel, .-GFXwritePixel
 661 0032 00BF     		.section	.text.GFXwriteFastVLine,"ax",%progbits
 662              		.align	2
 663              		.global	GFXwriteFastVLine
 664              		.thumb
 665              		.thumb_func
 666              		.type	GFXwriteFastVLine, %function
 667              	GFXwriteFastVLine:
 668              	.LFB69:
 177:gfx.c         ****         
 178:gfx.c         ****         // (x,y) is topmost point; if unsure, calling function
 179:gfx.c         ****         // should sort endpoints or call writeLine() instead
 180:gfx.c         ****         void GFXwriteFastVLine(GFX* myGFX,int16_t x, int16_t y,
 181:gfx.c         ****                                int16_t h, uint16_t color) {
 669              		.loc 1 181 0
 670              		.cfi_startproc
 671              		@ args = 4, pretend = 0, frame = 16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 16


 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673 0000 80B5     		push	{r7, lr}
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 86B0     		sub	sp, sp, #24
 678              		.cfi_def_cfa_offset 32
 679 0004 02AF     		add	r7, sp, #8
 680              		.cfi_def_cfa 7, 24
 681 0006 F860     		str	r0, [r7, #12]
 682 0008 0846     		mov	r0, r1
 683 000a 1146     		mov	r1, r2
 684 000c 1A46     		mov	r2, r3
 685 000e 0346     		mov	r3, r0	@ movhi
 686 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 687 0012 0B46     		mov	r3, r1	@ movhi
 688 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 689 0016 1346     		mov	r3, r2	@ movhi
 690 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 182:gfx.c         ****             // Overwrite in subclasses if startWrite is defined!
 183:gfx.c         ****             // Can be just writeLine(x, y, x, y+h-1, color);
 184:gfx.c         ****             // or writeFillRect(x, y, 1, h, color);
 185:gfx.c         ****             GFXdrawFastVLine(myGFX, x, y, h, color);
 691              		.loc 1 185 0
 692 001a B7F90600 		ldrsh	r0, [r7, #6]
 693 001e B7F90820 		ldrsh	r2, [r7, #8]
 694 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 695 0026 3B8B     		ldrh	r3, [r7, #24]
 696 0028 0093     		str	r3, [sp]
 697 002a 0346     		mov	r3, r0
 698 002c F868     		ldr	r0, [r7, #12]
 699 002e FFF7FEFF 		bl	GFXdrawFastVLine
 186:gfx.c         ****         }
 700              		.loc 1 186 0
 701 0032 00BF     		nop
 702 0034 1037     		adds	r7, r7, #16
 703              		.cfi_def_cfa_offset 8
 704 0036 BD46     		mov	sp, r7
 705              		.cfi_def_cfa_register 13
 706              		@ sp needed
 707 0038 80BD     		pop	{r7, pc}
 708              		.cfi_endproc
 709              	.LFE69:
 710              		.size	GFXwriteFastVLine, .-GFXwriteFastVLine
 711 003a 00BF     		.section	.text.GFXwriteFastHLine,"ax",%progbits
 712              		.align	2
 713              		.global	GFXwriteFastHLine
 714              		.thumb
 715              		.thumb_func
 716              		.type	GFXwriteFastHLine, %function
 717              	GFXwriteFastHLine:
 718              	.LFB70:
 187:gfx.c         ****         
 188:gfx.c         ****         // (x,y) is leftmost point; if unsure, calling function
 189:gfx.c         ****         // should sort endpoints or call writeLine() instead
 190:gfx.c         ****         void GFXwriteFastHLine(GFX* myGFX, int16_t x, int16_t y,
 191:gfx.c         ****                                int16_t w, uint16_t color) {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 17


 719              		.loc 1 191 0
 720              		.cfi_startproc
 721              		@ args = 4, pretend = 0, frame = 16
 722              		@ frame_needed = 1, uses_anonymous_args = 0
 723 0000 80B5     		push	{r7, lr}
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 86B0     		sub	sp, sp, #24
 728              		.cfi_def_cfa_offset 32
 729 0004 02AF     		add	r7, sp, #8
 730              		.cfi_def_cfa 7, 24
 731 0006 F860     		str	r0, [r7, #12]
 732 0008 0846     		mov	r0, r1
 733 000a 1146     		mov	r1, r2
 734 000c 1A46     		mov	r2, r3
 735 000e 0346     		mov	r3, r0	@ movhi
 736 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 737 0012 0B46     		mov	r3, r1	@ movhi
 738 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 739 0016 1346     		mov	r3, r2	@ movhi
 740 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 192:gfx.c         ****             // Overwrite in subclasses if startWrite is defined!
 193:gfx.c         ****             // Example: writeLine(x, y, x+w-1, y, color);
 194:gfx.c         ****             // or writeFillRect(x, y, w, 1, color);
 195:gfx.c         ****             GFXdrawFastHLine(myGFX,x, y, w, color);
 741              		.loc 1 195 0
 742 001a B7F90600 		ldrsh	r0, [r7, #6]
 743 001e B7F90820 		ldrsh	r2, [r7, #8]
 744 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 745 0026 3B8B     		ldrh	r3, [r7, #24]
 746 0028 0093     		str	r3, [sp]
 747 002a 0346     		mov	r3, r0
 748 002c F868     		ldr	r0, [r7, #12]
 749 002e FFF7FEFF 		bl	GFXdrawFastHLine
 196:gfx.c         ****         }
 750              		.loc 1 196 0
 751 0032 00BF     		nop
 752 0034 1037     		adds	r7, r7, #16
 753              		.cfi_def_cfa_offset 8
 754 0036 BD46     		mov	sp, r7
 755              		.cfi_def_cfa_register 13
 756              		@ sp needed
 757 0038 80BD     		pop	{r7, pc}
 758              		.cfi_endproc
 759              	.LFE70:
 760              		.size	GFXwriteFastHLine, .-GFXwriteFastHLine
 761 003a 00BF     		.section	.text.GFXwriteFillRect,"ax",%progbits
 762              		.align	2
 763              		.global	GFXwriteFillRect
 764              		.thumb
 765              		.thumb_func
 766              		.type	GFXwriteFillRect, %function
 767              	GFXwriteFillRect:
 768              	.LFB71:
 197:gfx.c         ****         
 198:gfx.c         ****         void GFXwriteFillRect(GFX* myGFX,int16_t x, int16_t y, int16_t w, int16_t h,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 18


 199:gfx.c         ****                               uint16_t color) {
 769              		.loc 1 199 0
 770              		.cfi_startproc
 771              		@ args = 8, pretend = 0, frame = 16
 772              		@ frame_needed = 1, uses_anonymous_args = 0
 773 0000 80B5     		push	{r7, lr}
 774              		.cfi_def_cfa_offset 8
 775              		.cfi_offset 7, -8
 776              		.cfi_offset 14, -4
 777 0002 86B0     		sub	sp, sp, #24
 778              		.cfi_def_cfa_offset 32
 779 0004 02AF     		add	r7, sp, #8
 780              		.cfi_def_cfa 7, 24
 781 0006 F860     		str	r0, [r7, #12]
 782 0008 0846     		mov	r0, r1
 783 000a 1146     		mov	r1, r2
 784 000c 1A46     		mov	r2, r3
 785 000e 0346     		mov	r3, r0	@ movhi
 786 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 787 0012 0B46     		mov	r3, r1	@ movhi
 788 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 789 0016 1346     		mov	r3, r2	@ movhi
 790 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 200:gfx.c         ****             // Overwrite in subclasses if desired!
 201:gfx.c         ****             GFXfillRect(myGFX,x,y,w,h,color);
 791              		.loc 1 201 0
 792 001a B7F90600 		ldrsh	r0, [r7, #6]
 793 001e B7F90820 		ldrsh	r2, [r7, #8]
 794 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 795 0026 BB8B     		ldrh	r3, [r7, #28]
 796 0028 0193     		str	r3, [sp, #4]
 797 002a B7F91830 		ldrsh	r3, [r7, #24]
 798 002e 0093     		str	r3, [sp]
 799 0030 0346     		mov	r3, r0
 800 0032 F868     		ldr	r0, [r7, #12]
 801 0034 FFF7FEFF 		bl	GFXfillRect
 202:gfx.c         ****         }
 802              		.loc 1 202 0
 803 0038 00BF     		nop
 804 003a 1037     		adds	r7, r7, #16
 805              		.cfi_def_cfa_offset 8
 806 003c BD46     		mov	sp, r7
 807              		.cfi_def_cfa_register 13
 808              		@ sp needed
 809 003e 80BD     		pop	{r7, pc}
 810              		.cfi_endproc
 811              	.LFE71:
 812              		.size	GFXwriteFillRect, .-GFXwriteFillRect
 813              		.section	.text.GFXendWrite,"ax",%progbits
 814              		.align	2
 815              		.global	GFXendWrite
 816              		.thumb
 817              		.thumb_func
 818              		.type	GFXendWrite, %function
 819              	GFXendWrite:
 820              	.LFB72:
 203:gfx.c         ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 19


 204:gfx.c         ****         void GFXendWrite(GFX* myGFX){
 821              		.loc 1 204 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 8
 824              		@ frame_needed = 1, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 826 0000 80B4     		push	{r7}
 827              		.cfi_def_cfa_offset 4
 828              		.cfi_offset 7, -4
 829 0002 83B0     		sub	sp, sp, #12
 830              		.cfi_def_cfa_offset 16
 831 0004 00AF     		add	r7, sp, #0
 832              		.cfi_def_cfa_register 7
 833 0006 7860     		str	r0, [r7, #4]
 205:gfx.c         ****             // Overwrite in subclasses if startWrite is defined!
 206:gfx.c         ****         }
 834              		.loc 1 206 0
 835 0008 00BF     		nop
 836 000a 0C37     		adds	r7, r7, #12
 837              		.cfi_def_cfa_offset 4
 838 000c BD46     		mov	sp, r7
 839              		.cfi_def_cfa_register 13
 840              		@ sp needed
 841 000e 80BC     		pop	{r7}
 842              		.cfi_restore 7
 843              		.cfi_def_cfa_offset 0
 844 0010 7047     		bx	lr
 845              		.cfi_endproc
 846              	.LFE72:
 847              		.size	GFXendWrite, .-GFXendWrite
 848 0012 00BF     		.section	.text.GFXdrawFastVLine,"ax",%progbits
 849              		.align	2
 850              		.global	GFXdrawFastVLine
 851              		.thumb
 852              		.thumb_func
 853              		.type	GFXdrawFastVLine, %function
 854              	GFXdrawFastVLine:
 855              	.LFB73:
 207:gfx.c         ****         
 208:gfx.c         ****         // (x,y) is topmost point; if unsure, calling function
 209:gfx.c         ****         // should sort endpoints or call drawLine() instead
 210:gfx.c         ****         void GFXdrawFastVLine(GFX* myGFX,int16_t x, int16_t y,
 211:gfx.c         ****                               int16_t h, uint16_t color) {
 856              		.loc 1 211 0
 857              		.cfi_startproc
 858              		@ args = 4, pretend = 0, frame = 16
 859              		@ frame_needed = 1, uses_anonymous_args = 0
 860 0000 90B5     		push	{r4, r7, lr}
 861              		.cfi_def_cfa_offset 12
 862              		.cfi_offset 4, -12
 863              		.cfi_offset 7, -8
 864              		.cfi_offset 14, -4
 865 0002 87B0     		sub	sp, sp, #28
 866              		.cfi_def_cfa_offset 40
 867 0004 02AF     		add	r7, sp, #8
 868              		.cfi_def_cfa 7, 32
 869 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 20


 870 0008 0846     		mov	r0, r1
 871 000a 1146     		mov	r1, r2
 872 000c 1A46     		mov	r2, r3
 873 000e 0346     		mov	r3, r0	@ movhi
 874 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 875 0012 0B46     		mov	r3, r1	@ movhi
 876 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 877 0016 1346     		mov	r3, r2	@ movhi
 878 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 212:gfx.c         ****             // Update in subclasses if desired!
 213:gfx.c         ****             GFXwriteLine(myGFX,x, y, x, y+h-1, color);
 879              		.loc 1 213 0
 880 001a 3A89     		ldrh	r2, [r7, #8]
 881 001c FB88     		ldrh	r3, [r7, #6]
 882 001e 1344     		add	r3, r3, r2
 883 0020 9BB2     		uxth	r3, r3
 884 0022 013B     		subs	r3, r3, #1
 885 0024 9BB2     		uxth	r3, r3
 886 0026 1BB2     		sxth	r3, r3
 887 0028 B7F90A40 		ldrsh	r4, [r7, #10]
 888 002c B7F90800 		ldrsh	r0, [r7, #8]
 889 0030 B7F90A10 		ldrsh	r1, [r7, #10]
 890 0034 3A8C     		ldrh	r2, [r7, #32]
 891 0036 0192     		str	r2, [sp, #4]
 892 0038 0093     		str	r3, [sp]
 893 003a 2346     		mov	r3, r4
 894 003c 0246     		mov	r2, r0
 895 003e F868     		ldr	r0, [r7, #12]
 896 0040 FFF7FEFF 		bl	GFXwriteLine
 214:gfx.c         ****         }
 897              		.loc 1 214 0
 898 0044 00BF     		nop
 899 0046 1437     		adds	r7, r7, #20
 900              		.cfi_def_cfa_offset 12
 901 0048 BD46     		mov	sp, r7
 902              		.cfi_def_cfa_register 13
 903              		@ sp needed
 904 004a 90BD     		pop	{r4, r7, pc}
 905              		.cfi_endproc
 906              	.LFE73:
 907              		.size	GFXdrawFastVLine, .-GFXdrawFastVLine
 908              		.section	.text.GFXdrawFastHLine,"ax",%progbits
 909              		.align	2
 910              		.global	GFXdrawFastHLine
 911              		.thumb
 912              		.thumb_func
 913              		.type	GFXdrawFastHLine, %function
 914              	GFXdrawFastHLine:
 915              	.LFB74:
 215:gfx.c         ****         
 216:gfx.c         ****         // (x,y) is leftmost point; if unsure, calling function
 217:gfx.c         ****         // should sort endpoints or call drawLine() instead
 218:gfx.c         ****         void GFXdrawFastHLine(GFX* myGFX,int16_t x, int16_t y,
 219:gfx.c         ****                               int16_t w, uint16_t color) {
 916              		.loc 1 219 0
 917              		.cfi_startproc
 918              		@ args = 4, pretend = 0, frame = 16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 21


 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
 924 0002 86B0     		sub	sp, sp, #24
 925              		.cfi_def_cfa_offset 32
 926 0004 02AF     		add	r7, sp, #8
 927              		.cfi_def_cfa 7, 24
 928 0006 F860     		str	r0, [r7, #12]
 929 0008 0846     		mov	r0, r1
 930 000a 1146     		mov	r1, r2
 931 000c 1A46     		mov	r2, r3
 932 000e 0346     		mov	r3, r0	@ movhi
 933 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 934 0012 0B46     		mov	r3, r1	@ movhi
 935 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 936 0016 1346     		mov	r3, r2	@ movhi
 937 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 220:gfx.c         ****             // Update in subclasses if desired!
 221:gfx.c         ****             GFXwriteLine(myGFX,x, y, x+w-1, y, color);
 938              		.loc 1 221 0
 939 001a 7A89     		ldrh	r2, [r7, #10]
 940 001c FB88     		ldrh	r3, [r7, #6]
 941 001e 1344     		add	r3, r3, r2
 942 0020 9BB2     		uxth	r3, r3
 943 0022 013B     		subs	r3, r3, #1
 944 0024 9BB2     		uxth	r3, r3
 945 0026 18B2     		sxth	r0, r3
 946 0028 B7F90820 		ldrsh	r2, [r7, #8]
 947 002c B7F90A10 		ldrsh	r1, [r7, #10]
 948 0030 3B8B     		ldrh	r3, [r7, #24]
 949 0032 0193     		str	r3, [sp, #4]
 950 0034 B7F90830 		ldrsh	r3, [r7, #8]
 951 0038 0093     		str	r3, [sp]
 952 003a 0346     		mov	r3, r0
 953 003c F868     		ldr	r0, [r7, #12]
 954 003e FFF7FEFF 		bl	GFXwriteLine
 222:gfx.c         ****         }
 955              		.loc 1 222 0
 956 0042 00BF     		nop
 957 0044 1037     		adds	r7, r7, #16
 958              		.cfi_def_cfa_offset 8
 959 0046 BD46     		mov	sp, r7
 960              		.cfi_def_cfa_register 13
 961              		@ sp needed
 962 0048 80BD     		pop	{r7, pc}
 963              		.cfi_endproc
 964              	.LFE74:
 965              		.size	GFXdrawFastHLine, .-GFXdrawFastHLine
 966 004a 00BF     		.section	.text.GFXfillRect,"ax",%progbits
 967              		.align	2
 968              		.global	GFXfillRect
 969              		.thumb
 970              		.thumb_func
 971              		.type	GFXfillRect, %function
 972              	GFXfillRect:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 22


 973              	.LFB75:
 223:gfx.c         ****         
 224:gfx.c         ****         void GFXfillRect(GFX* myGFX,int16_t x, int16_t y, int16_t w, int16_t h,
 225:gfx.c         ****                          uint16_t color) {
 974              		.loc 1 225 0
 975              		.cfi_startproc
 976              		@ args = 8, pretend = 0, frame = 24
 977              		@ frame_needed = 1, uses_anonymous_args = 0
 978 0000 80B5     		push	{r7, lr}
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 7, -8
 981              		.cfi_offset 14, -4
 982 0002 88B0     		sub	sp, sp, #32
 983              		.cfi_def_cfa_offset 40
 984 0004 02AF     		add	r7, sp, #8
 985              		.cfi_def_cfa 7, 32
 986 0006 F860     		str	r0, [r7, #12]
 987 0008 0846     		mov	r0, r1
 988 000a 1146     		mov	r1, r2
 989 000c 1A46     		mov	r2, r3
 990 000e 0346     		mov	r3, r0	@ movhi
 991 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 992 0012 0B46     		mov	r3, r1	@ movhi
 993 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 994 0016 1346     		mov	r3, r2	@ movhi
 995 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 996              	.LBB8:
 226:gfx.c         ****             // Update in subclasses if desired!
 227:gfx.c         ****             for (int16_t i=x; i<x+w; i++) {
 997              		.loc 1 227 0
 998 001a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 999 001c FB82     		strh	r3, [r7, #22]	@ movhi
 1000 001e 11E0     		b	.L38
 1001              	.L39:
 228:gfx.c         ****                 GFXwriteFastVLine(myGFX,i, y, h, color);
 1002              		.loc 1 228 0 discriminator 3
 1003 0020 B7F92000 		ldrsh	r0, [r7, #32]
 1004 0024 B7F90820 		ldrsh	r2, [r7, #8]
 1005 0028 B7F91610 		ldrsh	r1, [r7, #22]
 1006 002c BB8C     		ldrh	r3, [r7, #36]
 1007 002e 0093     		str	r3, [sp]
 1008 0030 0346     		mov	r3, r0
 1009 0032 F868     		ldr	r0, [r7, #12]
 1010 0034 FFF7FEFF 		bl	GFXwriteFastVLine
 227:gfx.c         ****                 GFXwriteFastVLine(myGFX,i, y, h, color);
 1011              		.loc 1 227 0 discriminator 3
 1012 0038 B7F91630 		ldrsh	r3, [r7, #22]
 1013 003c 9BB2     		uxth	r3, r3
 1014 003e 0133     		adds	r3, r3, #1
 1015 0040 9BB2     		uxth	r3, r3
 1016 0042 FB82     		strh	r3, [r7, #22]	@ movhi
 1017              	.L38:
 227:gfx.c         ****                 GFXwriteFastVLine(myGFX,i, y, h, color);
 1018              		.loc 1 227 0 is_stmt 0 discriminator 1
 1019 0044 B7F91620 		ldrsh	r2, [r7, #22]
 1020 0048 B7F90A10 		ldrsh	r1, [r7, #10]
 1021 004c B7F90630 		ldrsh	r3, [r7, #6]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 23


 1022 0050 0B44     		add	r3, r3, r1
 1023 0052 9A42     		cmp	r2, r3
 1024 0054 E4DB     		blt	.L39
 1025              	.LBE8:
 229:gfx.c         ****             }
 230:gfx.c         ****         }
 1026              		.loc 1 230 0 is_stmt 1
 1027 0056 00BF     		nop
 1028 0058 1837     		adds	r7, r7, #24
 1029              		.cfi_def_cfa_offset 8
 1030 005a BD46     		mov	sp, r7
 1031              		.cfi_def_cfa_register 13
 1032              		@ sp needed
 1033 005c 80BD     		pop	{r7, pc}
 1034              		.cfi_endproc
 1035              	.LFE75:
 1036              		.size	GFXfillRect, .-GFXfillRect
 1037 005e 00BF     		.section	.text.GFXfillScreen,"ax",%progbits
 1038              		.align	2
 1039              		.global	GFXfillScreen
 1040              		.thumb
 1041              		.thumb_func
 1042              		.type	GFXfillScreen, %function
 1043              	GFXfillScreen:
 1044              	.LFB76:
 231:gfx.c         ****         
 232:gfx.c         ****         void GFXfillScreen(GFX* myGFX,uint16_t color) {
 1045              		.loc 1 232 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 8
 1048              		@ frame_needed = 1, uses_anonymous_args = 0
 1049 0000 80B5     		push	{r7, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 84B0     		sub	sp, sp, #16
 1054              		.cfi_def_cfa_offset 24
 1055 0004 02AF     		add	r7, sp, #8
 1056              		.cfi_def_cfa 7, 16
 1057 0006 7860     		str	r0, [r7, #4]
 1058 0008 0B46     		mov	r3, r1
 1059 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 233:gfx.c         ****             // Update in subclasses if desired!
 234:gfx.c         ****             GFXfillRect(myGFX,0, 0, myGFX->_width, myGFX->_height, color);
 1060              		.loc 1 234 0
 1061 000c 7B68     		ldr	r3, [r7, #4]
 1062 000e 9B88     		ldrh	r3, [r3, #4]
 1063 0010 19B2     		sxth	r1, r3
 1064 0012 7B68     		ldr	r3, [r7, #4]
 1065 0014 DB88     		ldrh	r3, [r3, #6]
 1066 0016 1BB2     		sxth	r3, r3
 1067 0018 7A88     		ldrh	r2, [r7, #2]
 1068 001a 0192     		str	r2, [sp, #4]
 1069 001c 0093     		str	r3, [sp]
 1070 001e 0B46     		mov	r3, r1
 1071 0020 0022     		movs	r2, #0
 1072 0022 0021     		movs	r1, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 24


 1073 0024 7868     		ldr	r0, [r7, #4]
 1074 0026 FFF7FEFF 		bl	GFXfillRect
 235:gfx.c         ****         }
 1075              		.loc 1 235 0
 1076 002a 00BF     		nop
 1077 002c 0837     		adds	r7, r7, #8
 1078              		.cfi_def_cfa_offset 8
 1079 002e BD46     		mov	sp, r7
 1080              		.cfi_def_cfa_register 13
 1081              		@ sp needed
 1082 0030 80BD     		pop	{r7, pc}
 1083              		.cfi_endproc
 1084              	.LFE76:
 1085              		.size	GFXfillScreen, .-GFXfillScreen
 1086 0032 00BF     		.section	.text.GFXdrawLine,"ax",%progbits
 1087              		.align	2
 1088              		.global	GFXdrawLine
 1089              		.thumb
 1090              		.thumb_func
 1091              		.type	GFXdrawLine, %function
 1092              	GFXdrawLine:
 1093              	.LFB77:
 236:gfx.c         ****         
 237:gfx.c         ****         void GFXdrawLine(GFX* myGFX,int16_t x0, int16_t y0, int16_t x1, int16_t y1,
 238:gfx.c         ****                          uint16_t color) {
 1094              		.loc 1 238 0
 1095              		.cfi_startproc
 1096              		@ args = 8, pretend = 0, frame = 24
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098 0000 80B5     		push	{r7, lr}
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 0002 88B0     		sub	sp, sp, #32
 1103              		.cfi_def_cfa_offset 40
 1104 0004 02AF     		add	r7, sp, #8
 1105              		.cfi_def_cfa 7, 32
 1106 0006 F860     		str	r0, [r7, #12]
 1107 0008 0846     		mov	r0, r1
 1108 000a 1146     		mov	r1, r2
 1109 000c 1A46     		mov	r2, r3
 1110 000e 0346     		mov	r3, r0	@ movhi
 1111 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1112 0012 0B46     		mov	r3, r1	@ movhi
 1113 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1114 0016 1346     		mov	r3, r2	@ movhi
 1115 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 239:gfx.c         ****             // Update in subclasses if desired!
 240:gfx.c         ****             if(x0 == x1){
 1116              		.loc 1 240 0
 1117 001a B7F90A20 		ldrsh	r2, [r7, #10]
 1118 001e B7F90630 		ldrsh	r3, [r7, #6]
 1119 0022 9A42     		cmp	r2, r3
 1120 0024 1DD1     		bne	.L42
 241:gfx.c         ****                 if(y0 > y1) _swap_int16_t(y0, y1);
 1121              		.loc 1 241 0
 1122 0026 B7F90820 		ldrsh	r2, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 25


 1123 002a B7F92030 		ldrsh	r3, [r7, #32]
 1124 002e 9A42     		cmp	r2, r3
 1125 0030 05DD     		ble	.L43
 1126              	.LBB9:
 1127              		.loc 1 241 0 is_stmt 0 discriminator 1
 1128 0032 3B89     		ldrh	r3, [r7, #8]	@ movhi
 1129 0034 FB82     		strh	r3, [r7, #22]	@ movhi
 1130 0036 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1131 0038 3B81     		strh	r3, [r7, #8]	@ movhi
 1132 003a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1133 003c 3B84     		strh	r3, [r7, #32]	@ movhi
 1134              	.L43:
 1135              	.LBE9:
 242:gfx.c         ****                 GFXdrawFastVLine(myGFX,x0, y0, y1 - y0 + 1, color);
 1136              		.loc 1 242 0 is_stmt 1
 1137 003e 3A8C     		ldrh	r2, [r7, #32]
 1138 0040 3B89     		ldrh	r3, [r7, #8]
 1139 0042 D31A     		subs	r3, r2, r3
 1140 0044 9BB2     		uxth	r3, r3
 1141 0046 0133     		adds	r3, r3, #1
 1142 0048 9BB2     		uxth	r3, r3
 1143 004a 18B2     		sxth	r0, r3
 1144 004c B7F90820 		ldrsh	r2, [r7, #8]
 1145 0050 B7F90A10 		ldrsh	r1, [r7, #10]
 1146 0054 BB8C     		ldrh	r3, [r7, #36]
 1147 0056 0093     		str	r3, [sp]
 1148 0058 0346     		mov	r3, r0
 1149 005a F868     		ldr	r0, [r7, #12]
 1150 005c FFF7FEFF 		bl	GFXdrawFastVLine
 243:gfx.c         ****             } else if(y0 == y1){
 244:gfx.c         ****                 if(x0 > x1) _swap_int16_t(x0, x1);
 245:gfx.c         ****                 GFXdrawFastHLine(myGFX,x0, y0, x1 - x0 + 1, color);
 246:gfx.c         ****             } else {
 247:gfx.c         ****                 GFXwriteLine(myGFX,x0, y0, x1, y1, color);
 248:gfx.c         ****             }
 249:gfx.c         ****         }
 1151              		.loc 1 249 0
 1152 0060 32E0     		b	.L47
 1153              	.L42:
 243:gfx.c         ****             } else if(y0 == y1){
 1154              		.loc 1 243 0
 1155 0062 B7F90820 		ldrsh	r2, [r7, #8]
 1156 0066 B7F92030 		ldrsh	r3, [r7, #32]
 1157 006a 9A42     		cmp	r2, r3
 1158 006c 1DD1     		bne	.L45
 244:gfx.c         ****                 GFXdrawFastHLine(myGFX,x0, y0, x1 - x0 + 1, color);
 1159              		.loc 1 244 0
 1160 006e B7F90A20 		ldrsh	r2, [r7, #10]
 1161 0072 B7F90630 		ldrsh	r3, [r7, #6]
 1162 0076 9A42     		cmp	r2, r3
 1163 0078 05DD     		ble	.L46
 1164              	.LBB10:
 244:gfx.c         ****                 GFXdrawFastHLine(myGFX,x0, y0, x1 - x0 + 1, color);
 1165              		.loc 1 244 0 is_stmt 0 discriminator 1
 1166 007a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1167 007c BB82     		strh	r3, [r7, #20]	@ movhi
 1168 007e FB88     		ldrh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 26


 1169 0080 7B81     		strh	r3, [r7, #10]	@ movhi
 1170 0082 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1171 0084 FB80     		strh	r3, [r7, #6]	@ movhi
 1172              	.L46:
 1173              	.LBE10:
 245:gfx.c         ****             } else {
 1174              		.loc 1 245 0 is_stmt 1
 1175 0086 FA88     		ldrh	r2, [r7, #6]
 1176 0088 7B89     		ldrh	r3, [r7, #10]
 1177 008a D31A     		subs	r3, r2, r3
 1178 008c 9BB2     		uxth	r3, r3
 1179 008e 0133     		adds	r3, r3, #1
 1180 0090 9BB2     		uxth	r3, r3
 1181 0092 18B2     		sxth	r0, r3
 1182 0094 B7F90820 		ldrsh	r2, [r7, #8]
 1183 0098 B7F90A10 		ldrsh	r1, [r7, #10]
 1184 009c BB8C     		ldrh	r3, [r7, #36]
 1185 009e 0093     		str	r3, [sp]
 1186 00a0 0346     		mov	r3, r0
 1187 00a2 F868     		ldr	r0, [r7, #12]
 1188 00a4 FFF7FEFF 		bl	GFXdrawFastHLine
 1189              		.loc 1 249 0
 1190 00a8 0EE0     		b	.L47
 1191              	.L45:
 247:gfx.c         ****             }
 1192              		.loc 1 247 0
 1193 00aa B7F90600 		ldrsh	r0, [r7, #6]
 1194 00ae B7F90820 		ldrsh	r2, [r7, #8]
 1195 00b2 B7F90A10 		ldrsh	r1, [r7, #10]
 1196 00b6 BB8C     		ldrh	r3, [r7, #36]
 1197 00b8 0193     		str	r3, [sp, #4]
 1198 00ba B7F92030 		ldrsh	r3, [r7, #32]
 1199 00be 0093     		str	r3, [sp]
 1200 00c0 0346     		mov	r3, r0
 1201 00c2 F868     		ldr	r0, [r7, #12]
 1202 00c4 FFF7FEFF 		bl	GFXwriteLine
 1203              	.L47:
 1204              		.loc 1 249 0
 1205 00c8 00BF     		nop
 1206 00ca 1837     		adds	r7, r7, #24
 1207              		.cfi_def_cfa_offset 8
 1208 00cc BD46     		mov	sp, r7
 1209              		.cfi_def_cfa_register 13
 1210              		@ sp needed
 1211 00ce 80BD     		pop	{r7, pc}
 1212              		.cfi_endproc
 1213              	.LFE77:
 1214              		.size	GFXdrawLine, .-GFXdrawLine
 1215              		.section	.text.GFXdrawCircle,"ax",%progbits
 1216              		.align	2
 1217              		.global	GFXdrawCircle
 1218              		.thumb
 1219              		.thumb_func
 1220              		.type	GFXdrawCircle, %function
 1221              	GFXdrawCircle:
 1222              	.LFB78:
 250:gfx.c         ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 27


 251:gfx.c         ****         // Draw a circle outline
 252:gfx.c         ****         void GFXdrawCircle(GFX* myGFX,int16_t x0, int16_t y0, int16_t r,
 253:gfx.c         ****                            uint16_t color) {
 1223              		.loc 1 253 0
 1224              		.cfi_startproc
 1225              		@ args = 4, pretend = 0, frame = 32
 1226              		@ frame_needed = 1, uses_anonymous_args = 0
 1227 0000 80B5     		push	{r7, lr}
 1228              		.cfi_def_cfa_offset 8
 1229              		.cfi_offset 7, -8
 1230              		.cfi_offset 14, -4
 1231 0002 88B0     		sub	sp, sp, #32
 1232              		.cfi_def_cfa_offset 40
 1233 0004 00AF     		add	r7, sp, #0
 1234              		.cfi_def_cfa_register 7
 1235 0006 F860     		str	r0, [r7, #12]
 1236 0008 0846     		mov	r0, r1
 1237 000a 1146     		mov	r1, r2
 1238 000c 1A46     		mov	r2, r3
 1239 000e 0346     		mov	r3, r0	@ movhi
 1240 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1241 0012 0B46     		mov	r3, r1	@ movhi
 1242 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1243 0016 1346     		mov	r3, r2	@ movhi
 1244 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 254:gfx.c         ****             int16_t f = 1 - r;
 1245              		.loc 1 254 0
 1246 001a FB88     		ldrh	r3, [r7, #6]
 1247 001c C3F10103 		rsb	r3, r3, #1
 1248 0020 9BB2     		uxth	r3, r3
 1249 0022 FB83     		strh	r3, [r7, #30]	@ movhi
 255:gfx.c         ****             int16_t ddF_x = 1;
 1250              		.loc 1 255 0
 1251 0024 0123     		movs	r3, #1
 1252 0026 BB83     		strh	r3, [r7, #28]	@ movhi
 256:gfx.c         ****             int16_t ddF_y = -2 * r;
 1253              		.loc 1 256 0
 1254 0028 FB88     		ldrh	r3, [r7, #6]
 1255 002a 1A46     		mov	r2, r3	@ movhi
 1256 002c D203     		lsls	r2, r2, #15
 1257 002e D31A     		subs	r3, r2, r3
 1258 0030 5B00     		lsls	r3, r3, #1
 1259 0032 9BB2     		uxth	r3, r3
 1260 0034 7B83     		strh	r3, [r7, #26]	@ movhi
 257:gfx.c         ****             int16_t x = 0;
 1261              		.loc 1 257 0
 1262 0036 0023     		movs	r3, #0
 1263 0038 3B83     		strh	r3, [r7, #24]	@ movhi
 258:gfx.c         ****             int16_t y = r;
 1264              		.loc 1 258 0
 1265 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1266 003c FB82     		strh	r3, [r7, #22]	@ movhi
 259:gfx.c         ****             
 260:gfx.c         ****             GFXwritePixel(myGFX,x0  , y0+r, color);
 1267              		.loc 1 260 0
 1268 003e 3A89     		ldrh	r2, [r7, #8]
 1269 0040 FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 28


 1270 0042 1344     		add	r3, r3, r2
 1271 0044 9BB2     		uxth	r3, r3
 1272 0046 1AB2     		sxth	r2, r3
 1273 0048 3B8D     		ldrh	r3, [r7, #40]
 1274 004a B7F90A10 		ldrsh	r1, [r7, #10]
 1275 004e F868     		ldr	r0, [r7, #12]
 1276 0050 FFF7FEFF 		bl	GFXwritePixel
 261:gfx.c         ****             GFXwritePixel(myGFX,x0  , y0-r, color);
 1277              		.loc 1 261 0
 1278 0054 3A89     		ldrh	r2, [r7, #8]
 1279 0056 FB88     		ldrh	r3, [r7, #6]
 1280 0058 D31A     		subs	r3, r2, r3
 1281 005a 9BB2     		uxth	r3, r3
 1282 005c 1AB2     		sxth	r2, r3
 1283 005e 3B8D     		ldrh	r3, [r7, #40]
 1284 0060 B7F90A10 		ldrsh	r1, [r7, #10]
 1285 0064 F868     		ldr	r0, [r7, #12]
 1286 0066 FFF7FEFF 		bl	GFXwritePixel
 262:gfx.c         ****             GFXwritePixel(myGFX,x0+r, y0  , color);
 1287              		.loc 1 262 0
 1288 006a 7A89     		ldrh	r2, [r7, #10]
 1289 006c FB88     		ldrh	r3, [r7, #6]
 1290 006e 1344     		add	r3, r3, r2
 1291 0070 9BB2     		uxth	r3, r3
 1292 0072 19B2     		sxth	r1, r3
 1293 0074 3B8D     		ldrh	r3, [r7, #40]
 1294 0076 B7F90820 		ldrsh	r2, [r7, #8]
 1295 007a F868     		ldr	r0, [r7, #12]
 1296 007c FFF7FEFF 		bl	GFXwritePixel
 263:gfx.c         ****             GFXwritePixel(myGFX,x0-r, y0  , color);
 1297              		.loc 1 263 0
 1298 0080 7A89     		ldrh	r2, [r7, #10]
 1299 0082 FB88     		ldrh	r3, [r7, #6]
 1300 0084 D31A     		subs	r3, r2, r3
 1301 0086 9BB2     		uxth	r3, r3
 1302 0088 19B2     		sxth	r1, r3
 1303 008a 3B8D     		ldrh	r3, [r7, #40]
 1304 008c B7F90820 		ldrsh	r2, [r7, #8]
 1305 0090 F868     		ldr	r0, [r7, #12]
 1306 0092 FFF7FEFF 		bl	GFXwritePixel
 264:gfx.c         ****             
 265:gfx.c         ****             while (x<y) {
 1307              		.loc 1 265 0
 1308 0096 91E0     		b	.L49
 1309              	.L51:
 266:gfx.c         ****                 if (f >= 0) {
 1310              		.loc 1 266 0
 1311 0098 B7F91E30 		ldrsh	r3, [r7, #30]
 1312 009c 002B     		cmp	r3, #0
 1313 009e 0EDB     		blt	.L50
 267:gfx.c         ****                     y--;
 1314              		.loc 1 267 0
 1315 00a0 B7F91630 		ldrsh	r3, [r7, #22]
 1316 00a4 9BB2     		uxth	r3, r3
 1317 00a6 013B     		subs	r3, r3, #1
 1318 00a8 9BB2     		uxth	r3, r3
 1319 00aa FB82     		strh	r3, [r7, #22]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 29


 268:gfx.c         ****                     ddF_y += 2;
 1320              		.loc 1 268 0
 1321 00ac 7B8B     		ldrh	r3, [r7, #26]
 1322 00ae 0233     		adds	r3, r3, #2
 1323 00b0 9BB2     		uxth	r3, r3
 1324 00b2 7B83     		strh	r3, [r7, #26]	@ movhi
 269:gfx.c         ****                     f += ddF_y;
 1325              		.loc 1 269 0
 1326 00b4 FA8B     		ldrh	r2, [r7, #30]
 1327 00b6 7B8B     		ldrh	r3, [r7, #26]
 1328 00b8 1344     		add	r3, r3, r2
 1329 00ba 9BB2     		uxth	r3, r3
 1330 00bc FB83     		strh	r3, [r7, #30]	@ movhi
 1331              	.L50:
 270:gfx.c         ****                 }
 271:gfx.c         ****                 x++;
 1332              		.loc 1 271 0
 1333 00be B7F91830 		ldrsh	r3, [r7, #24]
 1334 00c2 9BB2     		uxth	r3, r3
 1335 00c4 0133     		adds	r3, r3, #1
 1336 00c6 9BB2     		uxth	r3, r3
 1337 00c8 3B83     		strh	r3, [r7, #24]	@ movhi
 272:gfx.c         ****                 ddF_x += 2;
 1338              		.loc 1 272 0
 1339 00ca BB8B     		ldrh	r3, [r7, #28]
 1340 00cc 0233     		adds	r3, r3, #2
 1341 00ce 9BB2     		uxth	r3, r3
 1342 00d0 BB83     		strh	r3, [r7, #28]	@ movhi
 273:gfx.c         ****                 f += ddF_x;
 1343              		.loc 1 273 0
 1344 00d2 FA8B     		ldrh	r2, [r7, #30]
 1345 00d4 BB8B     		ldrh	r3, [r7, #28]
 1346 00d6 1344     		add	r3, r3, r2
 1347 00d8 9BB2     		uxth	r3, r3
 1348 00da FB83     		strh	r3, [r7, #30]	@ movhi
 274:gfx.c         ****                 
 275:gfx.c         ****                 GFXwritePixel(myGFX,x0 + x, y0 + y, color);
 1349              		.loc 1 275 0
 1350 00dc 7A89     		ldrh	r2, [r7, #10]
 1351 00de 3B8B     		ldrh	r3, [r7, #24]
 1352 00e0 1344     		add	r3, r3, r2
 1353 00e2 9BB2     		uxth	r3, r3
 1354 00e4 19B2     		sxth	r1, r3
 1355 00e6 3A89     		ldrh	r2, [r7, #8]
 1356 00e8 FB8A     		ldrh	r3, [r7, #22]
 1357 00ea 1344     		add	r3, r3, r2
 1358 00ec 9BB2     		uxth	r3, r3
 1359 00ee 1AB2     		sxth	r2, r3
 1360 00f0 3B8D     		ldrh	r3, [r7, #40]
 1361 00f2 F868     		ldr	r0, [r7, #12]
 1362 00f4 FFF7FEFF 		bl	GFXwritePixel
 276:gfx.c         ****                 GFXwritePixel(myGFX,x0 - x, y0 + y, color);
 1363              		.loc 1 276 0
 1364 00f8 7A89     		ldrh	r2, [r7, #10]
 1365 00fa 3B8B     		ldrh	r3, [r7, #24]
 1366 00fc D31A     		subs	r3, r2, r3
 1367 00fe 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 30


 1368 0100 19B2     		sxth	r1, r3
 1369 0102 3A89     		ldrh	r2, [r7, #8]
 1370 0104 FB8A     		ldrh	r3, [r7, #22]
 1371 0106 1344     		add	r3, r3, r2
 1372 0108 9BB2     		uxth	r3, r3
 1373 010a 1AB2     		sxth	r2, r3
 1374 010c 3B8D     		ldrh	r3, [r7, #40]
 1375 010e F868     		ldr	r0, [r7, #12]
 1376 0110 FFF7FEFF 		bl	GFXwritePixel
 277:gfx.c         ****                 GFXwritePixel(myGFX,x0 + x, y0 - y, color);
 1377              		.loc 1 277 0
 1378 0114 7A89     		ldrh	r2, [r7, #10]
 1379 0116 3B8B     		ldrh	r3, [r7, #24]
 1380 0118 1344     		add	r3, r3, r2
 1381 011a 9BB2     		uxth	r3, r3
 1382 011c 19B2     		sxth	r1, r3
 1383 011e 3A89     		ldrh	r2, [r7, #8]
 1384 0120 FB8A     		ldrh	r3, [r7, #22]
 1385 0122 D31A     		subs	r3, r2, r3
 1386 0124 9BB2     		uxth	r3, r3
 1387 0126 1AB2     		sxth	r2, r3
 1388 0128 3B8D     		ldrh	r3, [r7, #40]
 1389 012a F868     		ldr	r0, [r7, #12]
 1390 012c FFF7FEFF 		bl	GFXwritePixel
 278:gfx.c         ****                 GFXwritePixel(myGFX,x0 - x, y0 - y, color);
 1391              		.loc 1 278 0
 1392 0130 7A89     		ldrh	r2, [r7, #10]
 1393 0132 3B8B     		ldrh	r3, [r7, #24]
 1394 0134 D31A     		subs	r3, r2, r3
 1395 0136 9BB2     		uxth	r3, r3
 1396 0138 19B2     		sxth	r1, r3
 1397 013a 3A89     		ldrh	r2, [r7, #8]
 1398 013c FB8A     		ldrh	r3, [r7, #22]
 1399 013e D31A     		subs	r3, r2, r3
 1400 0140 9BB2     		uxth	r3, r3
 1401 0142 1AB2     		sxth	r2, r3
 1402 0144 3B8D     		ldrh	r3, [r7, #40]
 1403 0146 F868     		ldr	r0, [r7, #12]
 1404 0148 FFF7FEFF 		bl	GFXwritePixel
 279:gfx.c         ****                 GFXwritePixel(myGFX,x0 + y, y0 + x, color);
 1405              		.loc 1 279 0
 1406 014c 7A89     		ldrh	r2, [r7, #10]
 1407 014e FB8A     		ldrh	r3, [r7, #22]
 1408 0150 1344     		add	r3, r3, r2
 1409 0152 9BB2     		uxth	r3, r3
 1410 0154 19B2     		sxth	r1, r3
 1411 0156 3A89     		ldrh	r2, [r7, #8]
 1412 0158 3B8B     		ldrh	r3, [r7, #24]
 1413 015a 1344     		add	r3, r3, r2
 1414 015c 9BB2     		uxth	r3, r3
 1415 015e 1AB2     		sxth	r2, r3
 1416 0160 3B8D     		ldrh	r3, [r7, #40]
 1417 0162 F868     		ldr	r0, [r7, #12]
 1418 0164 FFF7FEFF 		bl	GFXwritePixel
 280:gfx.c         ****                 GFXwritePixel(myGFX,x0 - y, y0 + x, color);
 1419              		.loc 1 280 0
 1420 0168 7A89     		ldrh	r2, [r7, #10]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 31


 1421 016a FB8A     		ldrh	r3, [r7, #22]
 1422 016c D31A     		subs	r3, r2, r3
 1423 016e 9BB2     		uxth	r3, r3
 1424 0170 19B2     		sxth	r1, r3
 1425 0172 3A89     		ldrh	r2, [r7, #8]
 1426 0174 3B8B     		ldrh	r3, [r7, #24]
 1427 0176 1344     		add	r3, r3, r2
 1428 0178 9BB2     		uxth	r3, r3
 1429 017a 1AB2     		sxth	r2, r3
 1430 017c 3B8D     		ldrh	r3, [r7, #40]
 1431 017e F868     		ldr	r0, [r7, #12]
 1432 0180 FFF7FEFF 		bl	GFXwritePixel
 281:gfx.c         ****                 GFXwritePixel(myGFX,x0 + y, y0 - x, color);
 1433              		.loc 1 281 0
 1434 0184 7A89     		ldrh	r2, [r7, #10]
 1435 0186 FB8A     		ldrh	r3, [r7, #22]
 1436 0188 1344     		add	r3, r3, r2
 1437 018a 9BB2     		uxth	r3, r3
 1438 018c 19B2     		sxth	r1, r3
 1439 018e 3A89     		ldrh	r2, [r7, #8]
 1440 0190 3B8B     		ldrh	r3, [r7, #24]
 1441 0192 D31A     		subs	r3, r2, r3
 1442 0194 9BB2     		uxth	r3, r3
 1443 0196 1AB2     		sxth	r2, r3
 1444 0198 3B8D     		ldrh	r3, [r7, #40]
 1445 019a F868     		ldr	r0, [r7, #12]
 1446 019c FFF7FEFF 		bl	GFXwritePixel
 282:gfx.c         ****                 GFXwritePixel(myGFX,x0 - y, y0 - x, color);
 1447              		.loc 1 282 0
 1448 01a0 7A89     		ldrh	r2, [r7, #10]
 1449 01a2 FB8A     		ldrh	r3, [r7, #22]
 1450 01a4 D31A     		subs	r3, r2, r3
 1451 01a6 9BB2     		uxth	r3, r3
 1452 01a8 19B2     		sxth	r1, r3
 1453 01aa 3A89     		ldrh	r2, [r7, #8]
 1454 01ac 3B8B     		ldrh	r3, [r7, #24]
 1455 01ae D31A     		subs	r3, r2, r3
 1456 01b0 9BB2     		uxth	r3, r3
 1457 01b2 1AB2     		sxth	r2, r3
 1458 01b4 3B8D     		ldrh	r3, [r7, #40]
 1459 01b6 F868     		ldr	r0, [r7, #12]
 1460 01b8 FFF7FEFF 		bl	GFXwritePixel
 1461              	.L49:
 265:gfx.c         ****                 if (f >= 0) {
 1462              		.loc 1 265 0
 1463 01bc B7F91820 		ldrsh	r2, [r7, #24]
 1464 01c0 B7F91630 		ldrsh	r3, [r7, #22]
 1465 01c4 9A42     		cmp	r2, r3
 1466 01c6 FFF667AF 		blt	.L51
 283:gfx.c         ****             }
 284:gfx.c         ****             
 285:gfx.c         ****         }
 1467              		.loc 1 285 0
 1468 01ca 00BF     		nop
 1469 01cc 2037     		adds	r7, r7, #32
 1470              		.cfi_def_cfa_offset 8
 1471 01ce BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 32


 1472              		.cfi_def_cfa_register 13
 1473              		@ sp needed
 1474 01d0 80BD     		pop	{r7, pc}
 1475              		.cfi_endproc
 1476              	.LFE78:
 1477              		.size	GFXdrawCircle, .-GFXdrawCircle
 1478 01d2 00BF     		.section	.text.GFXdrawCircleHelper,"ax",%progbits
 1479              		.align	2
 1480              		.global	GFXdrawCircleHelper
 1481              		.thumb
 1482              		.thumb_func
 1483              		.type	GFXdrawCircleHelper, %function
 1484              	GFXdrawCircleHelper:
 1485              	.LFB79:
 286:gfx.c         ****         
 287:gfx.c         ****         void GFXdrawCircleHelper(GFX* myGFX,int16_t x0, int16_t y0,
 288:gfx.c         ****                                  int16_t r, uint8_t cornername, uint16_t color) {
 1486              		.loc 1 288 0
 1487              		.cfi_startproc
 1488              		@ args = 8, pretend = 0, frame = 32
 1489              		@ frame_needed = 1, uses_anonymous_args = 0
 1490 0000 80B5     		push	{r7, lr}
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 7, -8
 1493              		.cfi_offset 14, -4
 1494 0002 88B0     		sub	sp, sp, #32
 1495              		.cfi_def_cfa_offset 40
 1496 0004 00AF     		add	r7, sp, #0
 1497              		.cfi_def_cfa_register 7
 1498 0006 F860     		str	r0, [r7, #12]
 1499 0008 0846     		mov	r0, r1
 1500 000a 1146     		mov	r1, r2
 1501 000c 1A46     		mov	r2, r3
 1502 000e 0346     		mov	r3, r0	@ movhi
 1503 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1504 0012 0B46     		mov	r3, r1	@ movhi
 1505 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1506 0016 1346     		mov	r3, r2	@ movhi
 1507 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 289:gfx.c         ****             int16_t f     = 1 - r;
 1508              		.loc 1 289 0
 1509 001a FB88     		ldrh	r3, [r7, #6]
 1510 001c C3F10103 		rsb	r3, r3, #1
 1511 0020 9BB2     		uxth	r3, r3
 1512 0022 FB83     		strh	r3, [r7, #30]	@ movhi
 290:gfx.c         ****             int16_t ddF_x = 1;
 1513              		.loc 1 290 0
 1514 0024 0123     		movs	r3, #1
 1515 0026 BB83     		strh	r3, [r7, #28]	@ movhi
 291:gfx.c         ****             int16_t ddF_y = -2 * r;
 1516              		.loc 1 291 0
 1517 0028 FB88     		ldrh	r3, [r7, #6]
 1518 002a 1A46     		mov	r2, r3	@ movhi
 1519 002c D203     		lsls	r2, r2, #15
 1520 002e D31A     		subs	r3, r2, r3
 1521 0030 5B00     		lsls	r3, r3, #1
 1522 0032 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 33


 1523 0034 7B83     		strh	r3, [r7, #26]	@ movhi
 292:gfx.c         ****             int16_t x     = 0;
 1524              		.loc 1 292 0
 1525 0036 0023     		movs	r3, #0
 1526 0038 3B83     		strh	r3, [r7, #24]	@ movhi
 293:gfx.c         ****             int16_t y     = r;
 1527              		.loc 1 293 0
 1528 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1529 003c FB82     		strh	r3, [r7, #22]	@ movhi
 294:gfx.c         ****             
 295:gfx.c         ****             while (x<y) {
 1530              		.loc 1 295 0
 1531 003e A9E0     		b	.L53
 1532              	.L58:
 296:gfx.c         ****                 if (f >= 0) {
 1533              		.loc 1 296 0
 1534 0040 B7F91E30 		ldrsh	r3, [r7, #30]
 1535 0044 002B     		cmp	r3, #0
 1536 0046 0EDB     		blt	.L54
 297:gfx.c         ****                     y--;
 1537              		.loc 1 297 0
 1538 0048 B7F91630 		ldrsh	r3, [r7, #22]
 1539 004c 9BB2     		uxth	r3, r3
 1540 004e 013B     		subs	r3, r3, #1
 1541 0050 9BB2     		uxth	r3, r3
 1542 0052 FB82     		strh	r3, [r7, #22]	@ movhi
 298:gfx.c         ****                     ddF_y += 2;
 1543              		.loc 1 298 0
 1544 0054 7B8B     		ldrh	r3, [r7, #26]
 1545 0056 0233     		adds	r3, r3, #2
 1546 0058 9BB2     		uxth	r3, r3
 1547 005a 7B83     		strh	r3, [r7, #26]	@ movhi
 299:gfx.c         ****                     f     += ddF_y;
 1548              		.loc 1 299 0
 1549 005c FA8B     		ldrh	r2, [r7, #30]
 1550 005e 7B8B     		ldrh	r3, [r7, #26]
 1551 0060 1344     		add	r3, r3, r2
 1552 0062 9BB2     		uxth	r3, r3
 1553 0064 FB83     		strh	r3, [r7, #30]	@ movhi
 1554              	.L54:
 300:gfx.c         ****                 }
 301:gfx.c         ****                 x++;
 1555              		.loc 1 301 0
 1556 0066 B7F91830 		ldrsh	r3, [r7, #24]
 1557 006a 9BB2     		uxth	r3, r3
 1558 006c 0133     		adds	r3, r3, #1
 1559 006e 9BB2     		uxth	r3, r3
 1560 0070 3B83     		strh	r3, [r7, #24]	@ movhi
 302:gfx.c         ****                 ddF_x += 2;
 1561              		.loc 1 302 0
 1562 0072 BB8B     		ldrh	r3, [r7, #28]
 1563 0074 0233     		adds	r3, r3, #2
 1564 0076 9BB2     		uxth	r3, r3
 1565 0078 BB83     		strh	r3, [r7, #28]	@ movhi
 303:gfx.c         ****                 f     += ddF_x;
 1566              		.loc 1 303 0
 1567 007a FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 34


 1568 007c BB8B     		ldrh	r3, [r7, #28]
 1569 007e 1344     		add	r3, r3, r2
 1570 0080 9BB2     		uxth	r3, r3
 1571 0082 FB83     		strh	r3, [r7, #30]	@ movhi
 304:gfx.c         ****                 if (cornername & 0x4) {
 1572              		.loc 1 304 0
 1573 0084 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1574 0088 03F00403 		and	r3, r3, #4
 1575 008c 002B     		cmp	r3, #0
 1576 008e 1BD0     		beq	.L55
 305:gfx.c         ****                     GFXwritePixel(myGFX, x0 + x, y0 + y, color);
 1577              		.loc 1 305 0
 1578 0090 7A89     		ldrh	r2, [r7, #10]
 1579 0092 3B8B     		ldrh	r3, [r7, #24]
 1580 0094 1344     		add	r3, r3, r2
 1581 0096 9BB2     		uxth	r3, r3
 1582 0098 19B2     		sxth	r1, r3
 1583 009a 3A89     		ldrh	r2, [r7, #8]
 1584 009c FB8A     		ldrh	r3, [r7, #22]
 1585 009e 1344     		add	r3, r3, r2
 1586 00a0 9BB2     		uxth	r3, r3
 1587 00a2 1AB2     		sxth	r2, r3
 1588 00a4 BB8D     		ldrh	r3, [r7, #44]
 1589 00a6 F868     		ldr	r0, [r7, #12]
 1590 00a8 FFF7FEFF 		bl	GFXwritePixel
 306:gfx.c         ****                     GFXwritePixel(myGFX, x0 + y, y0 + x, color);
 1591              		.loc 1 306 0
 1592 00ac 7A89     		ldrh	r2, [r7, #10]
 1593 00ae FB8A     		ldrh	r3, [r7, #22]
 1594 00b0 1344     		add	r3, r3, r2
 1595 00b2 9BB2     		uxth	r3, r3
 1596 00b4 19B2     		sxth	r1, r3
 1597 00b6 3A89     		ldrh	r2, [r7, #8]
 1598 00b8 3B8B     		ldrh	r3, [r7, #24]
 1599 00ba 1344     		add	r3, r3, r2
 1600 00bc 9BB2     		uxth	r3, r3
 1601 00be 1AB2     		sxth	r2, r3
 1602 00c0 BB8D     		ldrh	r3, [r7, #44]
 1603 00c2 F868     		ldr	r0, [r7, #12]
 1604 00c4 FFF7FEFF 		bl	GFXwritePixel
 1605              	.L55:
 307:gfx.c         ****                 }
 308:gfx.c         ****                 if (cornername & 0x2) {
 1606              		.loc 1 308 0
 1607 00c8 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1608 00cc 03F00203 		and	r3, r3, #2
 1609 00d0 002B     		cmp	r3, #0
 1610 00d2 1BD0     		beq	.L56
 309:gfx.c         ****                     GFXwritePixel(myGFX, x0 + x, y0 - y, color);
 1611              		.loc 1 309 0
 1612 00d4 7A89     		ldrh	r2, [r7, #10]
 1613 00d6 3B8B     		ldrh	r3, [r7, #24]
 1614 00d8 1344     		add	r3, r3, r2
 1615 00da 9BB2     		uxth	r3, r3
 1616 00dc 19B2     		sxth	r1, r3
 1617 00de 3A89     		ldrh	r2, [r7, #8]
 1618 00e0 FB8A     		ldrh	r3, [r7, #22]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 35


 1619 00e2 D31A     		subs	r3, r2, r3
 1620 00e4 9BB2     		uxth	r3, r3
 1621 00e6 1AB2     		sxth	r2, r3
 1622 00e8 BB8D     		ldrh	r3, [r7, #44]
 1623 00ea F868     		ldr	r0, [r7, #12]
 1624 00ec FFF7FEFF 		bl	GFXwritePixel
 310:gfx.c         ****                     GFXwritePixel(myGFX, x0 + y, y0 - x, color);
 1625              		.loc 1 310 0
 1626 00f0 7A89     		ldrh	r2, [r7, #10]
 1627 00f2 FB8A     		ldrh	r3, [r7, #22]
 1628 00f4 1344     		add	r3, r3, r2
 1629 00f6 9BB2     		uxth	r3, r3
 1630 00f8 19B2     		sxth	r1, r3
 1631 00fa 3A89     		ldrh	r2, [r7, #8]
 1632 00fc 3B8B     		ldrh	r3, [r7, #24]
 1633 00fe D31A     		subs	r3, r2, r3
 1634 0100 9BB2     		uxth	r3, r3
 1635 0102 1AB2     		sxth	r2, r3
 1636 0104 BB8D     		ldrh	r3, [r7, #44]
 1637 0106 F868     		ldr	r0, [r7, #12]
 1638 0108 FFF7FEFF 		bl	GFXwritePixel
 1639              	.L56:
 311:gfx.c         ****                 }
 312:gfx.c         ****                 if (cornername & 0x8) {
 1640              		.loc 1 312 0
 1641 010c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1642 0110 03F00803 		and	r3, r3, #8
 1643 0114 002B     		cmp	r3, #0
 1644 0116 1BD0     		beq	.L57
 313:gfx.c         ****                     GFXwritePixel(myGFX, x0 - y, y0 + x, color);
 1645              		.loc 1 313 0
 1646 0118 7A89     		ldrh	r2, [r7, #10]
 1647 011a FB8A     		ldrh	r3, [r7, #22]
 1648 011c D31A     		subs	r3, r2, r3
 1649 011e 9BB2     		uxth	r3, r3
 1650 0120 19B2     		sxth	r1, r3
 1651 0122 3A89     		ldrh	r2, [r7, #8]
 1652 0124 3B8B     		ldrh	r3, [r7, #24]
 1653 0126 1344     		add	r3, r3, r2
 1654 0128 9BB2     		uxth	r3, r3
 1655 012a 1AB2     		sxth	r2, r3
 1656 012c BB8D     		ldrh	r3, [r7, #44]
 1657 012e F868     		ldr	r0, [r7, #12]
 1658 0130 FFF7FEFF 		bl	GFXwritePixel
 314:gfx.c         ****                     GFXwritePixel(myGFX, x0 - x, y0 + y, color);
 1659              		.loc 1 314 0
 1660 0134 7A89     		ldrh	r2, [r7, #10]
 1661 0136 3B8B     		ldrh	r3, [r7, #24]
 1662 0138 D31A     		subs	r3, r2, r3
 1663 013a 9BB2     		uxth	r3, r3
 1664 013c 19B2     		sxth	r1, r3
 1665 013e 3A89     		ldrh	r2, [r7, #8]
 1666 0140 FB8A     		ldrh	r3, [r7, #22]
 1667 0142 1344     		add	r3, r3, r2
 1668 0144 9BB2     		uxth	r3, r3
 1669 0146 1AB2     		sxth	r2, r3
 1670 0148 BB8D     		ldrh	r3, [r7, #44]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 36


 1671 014a F868     		ldr	r0, [r7, #12]
 1672 014c FFF7FEFF 		bl	GFXwritePixel
 1673              	.L57:
 315:gfx.c         ****                 }
 316:gfx.c         ****                 if (cornername & 0x1) {
 1674              		.loc 1 316 0
 1675 0150 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1676 0154 03F00103 		and	r3, r3, #1
 1677 0158 002B     		cmp	r3, #0
 1678 015a 1BD0     		beq	.L53
 317:gfx.c         ****                     GFXwritePixel(myGFX, x0 - y, y0 - x, color);
 1679              		.loc 1 317 0
 1680 015c 7A89     		ldrh	r2, [r7, #10]
 1681 015e FB8A     		ldrh	r3, [r7, #22]
 1682 0160 D31A     		subs	r3, r2, r3
 1683 0162 9BB2     		uxth	r3, r3
 1684 0164 19B2     		sxth	r1, r3
 1685 0166 3A89     		ldrh	r2, [r7, #8]
 1686 0168 3B8B     		ldrh	r3, [r7, #24]
 1687 016a D31A     		subs	r3, r2, r3
 1688 016c 9BB2     		uxth	r3, r3
 1689 016e 1AB2     		sxth	r2, r3
 1690 0170 BB8D     		ldrh	r3, [r7, #44]
 1691 0172 F868     		ldr	r0, [r7, #12]
 1692 0174 FFF7FEFF 		bl	GFXwritePixel
 318:gfx.c         ****                     GFXwritePixel(myGFX, x0 - x, y0 - y, color);
 1693              		.loc 1 318 0
 1694 0178 7A89     		ldrh	r2, [r7, #10]
 1695 017a 3B8B     		ldrh	r3, [r7, #24]
 1696 017c D31A     		subs	r3, r2, r3
 1697 017e 9BB2     		uxth	r3, r3
 1698 0180 19B2     		sxth	r1, r3
 1699 0182 3A89     		ldrh	r2, [r7, #8]
 1700 0184 FB8A     		ldrh	r3, [r7, #22]
 1701 0186 D31A     		subs	r3, r2, r3
 1702 0188 9BB2     		uxth	r3, r3
 1703 018a 1AB2     		sxth	r2, r3
 1704 018c BB8D     		ldrh	r3, [r7, #44]
 1705 018e F868     		ldr	r0, [r7, #12]
 1706 0190 FFF7FEFF 		bl	GFXwritePixel
 1707              	.L53:
 295:gfx.c         ****                 if (f >= 0) {
 1708              		.loc 1 295 0
 1709 0194 B7F91820 		ldrsh	r2, [r7, #24]
 1710 0198 B7F91630 		ldrsh	r3, [r7, #22]
 1711 019c 9A42     		cmp	r2, r3
 1712 019e FFF64FAF 		blt	.L58
 319:gfx.c         ****                 }
 320:gfx.c         ****             }
 321:gfx.c         ****         }
 1713              		.loc 1 321 0
 1714 01a2 00BF     		nop
 1715 01a4 2037     		adds	r7, r7, #32
 1716              		.cfi_def_cfa_offset 8
 1717 01a6 BD46     		mov	sp, r7
 1718              		.cfi_def_cfa_register 13
 1719              		@ sp needed
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 37


 1720 01a8 80BD     		pop	{r7, pc}
 1721              		.cfi_endproc
 1722              	.LFE79:
 1723              		.size	GFXdrawCircleHelper, .-GFXdrawCircleHelper
 1724 01aa 00BF     		.section	.text.GFXfillCircle,"ax",%progbits
 1725              		.align	2
 1726              		.global	GFXfillCircle
 1727              		.thumb
 1728              		.thumb_func
 1729              		.type	GFXfillCircle, %function
 1730              	GFXfillCircle:
 1731              	.LFB80:
 322:gfx.c         ****         
 323:gfx.c         ****         void GFXfillCircle(GFX* myGFX, int16_t x0, int16_t y0, int16_t r,
 324:gfx.c         ****                            uint16_t color) {
 1732              		.loc 1 324 0
 1733              		.cfi_startproc
 1734              		@ args = 4, pretend = 0, frame = 16
 1735              		@ frame_needed = 1, uses_anonymous_args = 0
 1736 0000 80B5     		push	{r7, lr}
 1737              		.cfi_def_cfa_offset 8
 1738              		.cfi_offset 7, -8
 1739              		.cfi_offset 14, -4
 1740 0002 88B0     		sub	sp, sp, #32
 1741              		.cfi_def_cfa_offset 40
 1742 0004 04AF     		add	r7, sp, #16
 1743              		.cfi_def_cfa 7, 24
 1744 0006 F860     		str	r0, [r7, #12]
 1745 0008 0846     		mov	r0, r1
 1746 000a 1146     		mov	r1, r2
 1747 000c 1A46     		mov	r2, r3
 1748 000e 0346     		mov	r3, r0	@ movhi
 1749 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1750 0012 0B46     		mov	r3, r1	@ movhi
 1751 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1752 0016 1346     		mov	r3, r2	@ movhi
 1753 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 325:gfx.c         ****             
 326:gfx.c         ****             GFXwriteFastVLine(myGFX, x0, y0-r, 2*r+1, color);
 1754              		.loc 1 326 0
 1755 001a 3A89     		ldrh	r2, [r7, #8]
 1756 001c FB88     		ldrh	r3, [r7, #6]
 1757 001e D31A     		subs	r3, r2, r3
 1758 0020 9BB2     		uxth	r3, r3
 1759 0022 1AB2     		sxth	r2, r3
 1760 0024 FB88     		ldrh	r3, [r7, #6]
 1761 0026 5B00     		lsls	r3, r3, #1
 1762 0028 9BB2     		uxth	r3, r3
 1763 002a 0133     		adds	r3, r3, #1
 1764 002c 9BB2     		uxth	r3, r3
 1765 002e 18B2     		sxth	r0, r3
 1766 0030 B7F90A10 		ldrsh	r1, [r7, #10]
 1767 0034 3B8B     		ldrh	r3, [r7, #24]
 1768 0036 0093     		str	r3, [sp]
 1769 0038 0346     		mov	r3, r0
 1770 003a F868     		ldr	r0, [r7, #12]
 1771 003c FFF7FEFF 		bl	GFXwriteFastVLine
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 38


 327:gfx.c         ****             GFXfillCircleHelper(myGFX, x0, y0, r, 3, 0, color);
 1772              		.loc 1 327 0
 1773 0040 B7F90600 		ldrsh	r0, [r7, #6]
 1774 0044 B7F90820 		ldrsh	r2, [r7, #8]
 1775 0048 B7F90A10 		ldrsh	r1, [r7, #10]
 1776 004c 3B8B     		ldrh	r3, [r7, #24]
 1777 004e 0293     		str	r3, [sp, #8]
 1778 0050 0023     		movs	r3, #0
 1779 0052 0193     		str	r3, [sp, #4]
 1780 0054 0323     		movs	r3, #3
 1781 0056 0093     		str	r3, [sp]
 1782 0058 0346     		mov	r3, r0
 1783 005a F868     		ldr	r0, [r7, #12]
 1784 005c FFF7FEFF 		bl	GFXfillCircleHelper
 328:gfx.c         ****             
 329:gfx.c         ****         }
 1785              		.loc 1 329 0
 1786 0060 00BF     		nop
 1787 0062 1037     		adds	r7, r7, #16
 1788              		.cfi_def_cfa_offset 8
 1789 0064 BD46     		mov	sp, r7
 1790              		.cfi_def_cfa_register 13
 1791              		@ sp needed
 1792 0066 80BD     		pop	{r7, pc}
 1793              		.cfi_endproc
 1794              	.LFE80:
 1795              		.size	GFXfillCircle, .-GFXfillCircle
 1796              		.section	.text.GFXfillCircleHelper,"ax",%progbits
 1797              		.align	2
 1798              		.global	GFXfillCircleHelper
 1799              		.thumb
 1800              		.thumb_func
 1801              		.type	GFXfillCircleHelper, %function
 1802              	GFXfillCircleHelper:
 1803              	.LFB81:
 330:gfx.c         ****         
 331:gfx.c         ****         // Used to do circles and roundrects
 332:gfx.c         ****         void GFXfillCircleHelper(GFX* myGFX, int16_t x0, int16_t y0, int16_t r,
 333:gfx.c         ****                                  uint8_t cornername, int16_t delta, uint16_t color) {
 1804              		.loc 1 333 0
 1805              		.cfi_startproc
 1806              		@ args = 12, pretend = 0, frame = 32
 1807              		@ frame_needed = 1, uses_anonymous_args = 0
 1808 0000 80B5     		push	{r7, lr}
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 7, -8
 1811              		.cfi_offset 14, -4
 1812 0002 8AB0     		sub	sp, sp, #40
 1813              		.cfi_def_cfa_offset 48
 1814 0004 02AF     		add	r7, sp, #8
 1815              		.cfi_def_cfa 7, 40
 1816 0006 F860     		str	r0, [r7, #12]
 1817 0008 0846     		mov	r0, r1
 1818 000a 1146     		mov	r1, r2
 1819 000c 1A46     		mov	r2, r3
 1820 000e 0346     		mov	r3, r0	@ movhi
 1821 0010 7B81     		strh	r3, [r7, #10]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 39


 1822 0012 0B46     		mov	r3, r1	@ movhi
 1823 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1824 0016 1346     		mov	r3, r2	@ movhi
 1825 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 334:gfx.c         ****             
 335:gfx.c         ****             int16_t f     = 1 - r;
 1826              		.loc 1 335 0
 1827 001a FB88     		ldrh	r3, [r7, #6]
 1828 001c C3F10103 		rsb	r3, r3, #1
 1829 0020 9BB2     		uxth	r3, r3
 1830 0022 FB83     		strh	r3, [r7, #30]	@ movhi
 336:gfx.c         ****             int16_t ddF_x = 1;
 1831              		.loc 1 336 0
 1832 0024 0123     		movs	r3, #1
 1833 0026 BB83     		strh	r3, [r7, #28]	@ movhi
 337:gfx.c         ****             int16_t ddF_y = -2 * r;
 1834              		.loc 1 337 0
 1835 0028 FB88     		ldrh	r3, [r7, #6]
 1836 002a 1A46     		mov	r2, r3	@ movhi
 1837 002c D203     		lsls	r2, r2, #15
 1838 002e D31A     		subs	r3, r2, r3
 1839 0030 5B00     		lsls	r3, r3, #1
 1840 0032 9BB2     		uxth	r3, r3
 1841 0034 7B83     		strh	r3, [r7, #26]	@ movhi
 338:gfx.c         ****             int16_t x     = 0;
 1842              		.loc 1 338 0
 1843 0036 0023     		movs	r3, #0
 1844 0038 3B83     		strh	r3, [r7, #24]	@ movhi
 339:gfx.c         ****             int16_t y     = r;
 1845              		.loc 1 339 0
 1846 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1847 003c FB82     		strh	r3, [r7, #22]	@ movhi
 340:gfx.c         ****             
 341:gfx.c         ****             while (x<y) {
 1848              		.loc 1 341 0
 1849 003e 95E0     		b	.L61
 1850              	.L64:
 342:gfx.c         ****                 if (f >= 0) {
 1851              		.loc 1 342 0
 1852 0040 B7F91E30 		ldrsh	r3, [r7, #30]
 1853 0044 002B     		cmp	r3, #0
 1854 0046 0EDB     		blt	.L62
 343:gfx.c         ****                     y--;
 1855              		.loc 1 343 0
 1856 0048 B7F91630 		ldrsh	r3, [r7, #22]
 1857 004c 9BB2     		uxth	r3, r3
 1858 004e 013B     		subs	r3, r3, #1
 1859 0050 9BB2     		uxth	r3, r3
 1860 0052 FB82     		strh	r3, [r7, #22]	@ movhi
 344:gfx.c         ****                     ddF_y += 2;
 1861              		.loc 1 344 0
 1862 0054 7B8B     		ldrh	r3, [r7, #26]
 1863 0056 0233     		adds	r3, r3, #2
 1864 0058 9BB2     		uxth	r3, r3
 1865 005a 7B83     		strh	r3, [r7, #26]	@ movhi
 345:gfx.c         ****                     f     += ddF_y;
 1866              		.loc 1 345 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 40


 1867 005c FA8B     		ldrh	r2, [r7, #30]
 1868 005e 7B8B     		ldrh	r3, [r7, #26]
 1869 0060 1344     		add	r3, r3, r2
 1870 0062 9BB2     		uxth	r3, r3
 1871 0064 FB83     		strh	r3, [r7, #30]	@ movhi
 1872              	.L62:
 346:gfx.c         ****                 }
 347:gfx.c         ****                 x++;
 1873              		.loc 1 347 0
 1874 0066 B7F91830 		ldrsh	r3, [r7, #24]
 1875 006a 9BB2     		uxth	r3, r3
 1876 006c 0133     		adds	r3, r3, #1
 1877 006e 9BB2     		uxth	r3, r3
 1878 0070 3B83     		strh	r3, [r7, #24]	@ movhi
 348:gfx.c         ****                 ddF_x += 2;
 1879              		.loc 1 348 0
 1880 0072 BB8B     		ldrh	r3, [r7, #28]
 1881 0074 0233     		adds	r3, r3, #2
 1882 0076 9BB2     		uxth	r3, r3
 1883 0078 BB83     		strh	r3, [r7, #28]	@ movhi
 349:gfx.c         ****                 f     += ddF_x;
 1884              		.loc 1 349 0
 1885 007a FA8B     		ldrh	r2, [r7, #30]
 1886 007c BB8B     		ldrh	r3, [r7, #28]
 1887 007e 1344     		add	r3, r3, r2
 1888 0080 9BB2     		uxth	r3, r3
 1889 0082 FB83     		strh	r3, [r7, #30]	@ movhi
 350:gfx.c         ****                 
 351:gfx.c         ****                 if (cornername & 0x1) {
 1890              		.loc 1 351 0
 1891 0084 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1892 0088 03F00103 		and	r3, r3, #1
 1893 008c 002B     		cmp	r3, #0
 1894 008e 33D0     		beq	.L63
 352:gfx.c         ****                     GFXwriteFastVLine(myGFX, x0+x, y0-y, 2*y+1+delta, color);
 1895              		.loc 1 352 0
 1896 0090 7A89     		ldrh	r2, [r7, #10]
 1897 0092 3B8B     		ldrh	r3, [r7, #24]
 1898 0094 1344     		add	r3, r3, r2
 1899 0096 9BB2     		uxth	r3, r3
 1900 0098 19B2     		sxth	r1, r3
 1901 009a 3A89     		ldrh	r2, [r7, #8]
 1902 009c FB8A     		ldrh	r3, [r7, #22]
 1903 009e D31A     		subs	r3, r2, r3
 1904 00a0 9BB2     		uxth	r3, r3
 1905 00a2 18B2     		sxth	r0, r3
 1906 00a4 FB8A     		ldrh	r3, [r7, #22]
 1907 00a6 5B00     		lsls	r3, r3, #1
 1908 00a8 9AB2     		uxth	r2, r3
 1909 00aa BB8D     		ldrh	r3, [r7, #44]
 1910 00ac 1344     		add	r3, r3, r2
 1911 00ae 9BB2     		uxth	r3, r3
 1912 00b0 0133     		adds	r3, r3, #1
 1913 00b2 9BB2     		uxth	r3, r3
 1914 00b4 1AB2     		sxth	r2, r3
 1915 00b6 3B8E     		ldrh	r3, [r7, #48]
 1916 00b8 0093     		str	r3, [sp]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 41


 1917 00ba 1346     		mov	r3, r2
 1918 00bc 0246     		mov	r2, r0
 1919 00be F868     		ldr	r0, [r7, #12]
 1920 00c0 FFF7FEFF 		bl	GFXwriteFastVLine
 353:gfx.c         ****                     GFXwriteFastVLine(myGFX, x0+y, y0-x, 2*x+1+delta, color);
 1921              		.loc 1 353 0
 1922 00c4 7A89     		ldrh	r2, [r7, #10]
 1923 00c6 FB8A     		ldrh	r3, [r7, #22]
 1924 00c8 1344     		add	r3, r3, r2
 1925 00ca 9BB2     		uxth	r3, r3
 1926 00cc 19B2     		sxth	r1, r3
 1927 00ce 3A89     		ldrh	r2, [r7, #8]
 1928 00d0 3B8B     		ldrh	r3, [r7, #24]
 1929 00d2 D31A     		subs	r3, r2, r3
 1930 00d4 9BB2     		uxth	r3, r3
 1931 00d6 18B2     		sxth	r0, r3
 1932 00d8 3B8B     		ldrh	r3, [r7, #24]
 1933 00da 5B00     		lsls	r3, r3, #1
 1934 00dc 9AB2     		uxth	r2, r3
 1935 00de BB8D     		ldrh	r3, [r7, #44]
 1936 00e0 1344     		add	r3, r3, r2
 1937 00e2 9BB2     		uxth	r3, r3
 1938 00e4 0133     		adds	r3, r3, #1
 1939 00e6 9BB2     		uxth	r3, r3
 1940 00e8 1AB2     		sxth	r2, r3
 1941 00ea 3B8E     		ldrh	r3, [r7, #48]
 1942 00ec 0093     		str	r3, [sp]
 1943 00ee 1346     		mov	r3, r2
 1944 00f0 0246     		mov	r2, r0
 1945 00f2 F868     		ldr	r0, [r7, #12]
 1946 00f4 FFF7FEFF 		bl	GFXwriteFastVLine
 1947              	.L63:
 354:gfx.c         ****                 }
 355:gfx.c         ****                 if (cornername & 0x2) {
 1948              		.loc 1 355 0
 1949 00f8 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1950 00fc 03F00203 		and	r3, r3, #2
 1951 0100 002B     		cmp	r3, #0
 1952 0102 33D0     		beq	.L61
 356:gfx.c         ****                     GFXwriteFastVLine(myGFX, x0-x, y0-y, 2*y+1+delta, color);
 1953              		.loc 1 356 0
 1954 0104 7A89     		ldrh	r2, [r7, #10]
 1955 0106 3B8B     		ldrh	r3, [r7, #24]
 1956 0108 D31A     		subs	r3, r2, r3
 1957 010a 9BB2     		uxth	r3, r3
 1958 010c 19B2     		sxth	r1, r3
 1959 010e 3A89     		ldrh	r2, [r7, #8]
 1960 0110 FB8A     		ldrh	r3, [r7, #22]
 1961 0112 D31A     		subs	r3, r2, r3
 1962 0114 9BB2     		uxth	r3, r3
 1963 0116 18B2     		sxth	r0, r3
 1964 0118 FB8A     		ldrh	r3, [r7, #22]
 1965 011a 5B00     		lsls	r3, r3, #1
 1966 011c 9AB2     		uxth	r2, r3
 1967 011e BB8D     		ldrh	r3, [r7, #44]
 1968 0120 1344     		add	r3, r3, r2
 1969 0122 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 42


 1970 0124 0133     		adds	r3, r3, #1
 1971 0126 9BB2     		uxth	r3, r3
 1972 0128 1AB2     		sxth	r2, r3
 1973 012a 3B8E     		ldrh	r3, [r7, #48]
 1974 012c 0093     		str	r3, [sp]
 1975 012e 1346     		mov	r3, r2
 1976 0130 0246     		mov	r2, r0
 1977 0132 F868     		ldr	r0, [r7, #12]
 1978 0134 FFF7FEFF 		bl	GFXwriteFastVLine
 357:gfx.c         ****                     GFXwriteFastVLine(myGFX, x0-y, y0-x, 2*x+1+delta, color);
 1979              		.loc 1 357 0
 1980 0138 7A89     		ldrh	r2, [r7, #10]
 1981 013a FB8A     		ldrh	r3, [r7, #22]
 1982 013c D31A     		subs	r3, r2, r3
 1983 013e 9BB2     		uxth	r3, r3
 1984 0140 19B2     		sxth	r1, r3
 1985 0142 3A89     		ldrh	r2, [r7, #8]
 1986 0144 3B8B     		ldrh	r3, [r7, #24]
 1987 0146 D31A     		subs	r3, r2, r3
 1988 0148 9BB2     		uxth	r3, r3
 1989 014a 18B2     		sxth	r0, r3
 1990 014c 3B8B     		ldrh	r3, [r7, #24]
 1991 014e 5B00     		lsls	r3, r3, #1
 1992 0150 9AB2     		uxth	r2, r3
 1993 0152 BB8D     		ldrh	r3, [r7, #44]
 1994 0154 1344     		add	r3, r3, r2
 1995 0156 9BB2     		uxth	r3, r3
 1996 0158 0133     		adds	r3, r3, #1
 1997 015a 9BB2     		uxth	r3, r3
 1998 015c 1AB2     		sxth	r2, r3
 1999 015e 3B8E     		ldrh	r3, [r7, #48]
 2000 0160 0093     		str	r3, [sp]
 2001 0162 1346     		mov	r3, r2
 2002 0164 0246     		mov	r2, r0
 2003 0166 F868     		ldr	r0, [r7, #12]
 2004 0168 FFF7FEFF 		bl	GFXwriteFastVLine
 2005              	.L61:
 341:gfx.c         ****                 if (f >= 0) {
 2006              		.loc 1 341 0
 2007 016c B7F91820 		ldrsh	r2, [r7, #24]
 2008 0170 B7F91630 		ldrsh	r3, [r7, #22]
 2009 0174 9A42     		cmp	r2, r3
 2010 0176 FFF663AF 		blt	.L64
 358:gfx.c         ****                 }
 359:gfx.c         ****             }
 360:gfx.c         ****         }
 2011              		.loc 1 360 0
 2012 017a 00BF     		nop
 2013 017c 2037     		adds	r7, r7, #32
 2014              		.cfi_def_cfa_offset 8
 2015 017e BD46     		mov	sp, r7
 2016              		.cfi_def_cfa_register 13
 2017              		@ sp needed
 2018 0180 80BD     		pop	{r7, pc}
 2019              		.cfi_endproc
 2020              	.LFE81:
 2021              		.size	GFXfillCircleHelper, .-GFXfillCircleHelper
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 43


 2022 0182 00BF     		.section	.text.GFXdrawRect,"ax",%progbits
 2023              		.align	2
 2024              		.global	GFXdrawRect
 2025              		.thumb
 2026              		.thumb_func
 2027              		.type	GFXdrawRect, %function
 2028              	GFXdrawRect:
 2029              	.LFB82:
 361:gfx.c         ****         
 362:gfx.c         ****         // Draw a rectangle
 363:gfx.c         ****         void GFXdrawRect(GFX* myGFX, int16_t x, int16_t y, int16_t w, int16_t h,
 364:gfx.c         ****                          uint16_t color) {
 2030              		.loc 1 364 0
 2031              		.cfi_startproc
 2032              		@ args = 8, pretend = 0, frame = 16
 2033              		@ frame_needed = 1, uses_anonymous_args = 0
 2034 0000 80B5     		push	{r7, lr}
 2035              		.cfi_def_cfa_offset 8
 2036              		.cfi_offset 7, -8
 2037              		.cfi_offset 14, -4
 2038 0002 86B0     		sub	sp, sp, #24
 2039              		.cfi_def_cfa_offset 32
 2040 0004 02AF     		add	r7, sp, #8
 2041              		.cfi_def_cfa 7, 24
 2042 0006 F860     		str	r0, [r7, #12]
 2043 0008 0846     		mov	r0, r1
 2044 000a 1146     		mov	r1, r2
 2045 000c 1A46     		mov	r2, r3
 2046 000e 0346     		mov	r3, r0	@ movhi
 2047 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 2048 0012 0B46     		mov	r3, r1	@ movhi
 2049 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2050 0016 1346     		mov	r3, r2	@ movhi
 2051 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 365:gfx.c         ****             
 366:gfx.c         ****             GFXwriteFastHLine(myGFX, x, y, w, color);
 2052              		.loc 1 366 0
 2053 001a B7F90600 		ldrsh	r0, [r7, #6]
 2054 001e B7F90820 		ldrsh	r2, [r7, #8]
 2055 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 2056 0026 BB8B     		ldrh	r3, [r7, #28]
 2057 0028 0093     		str	r3, [sp]
 2058 002a 0346     		mov	r3, r0
 2059 002c F868     		ldr	r0, [r7, #12]
 2060 002e FFF7FEFF 		bl	GFXwriteFastHLine
 367:gfx.c         ****             GFXwriteFastHLine(myGFX, x, y+h-1, w, color);
 2061              		.loc 1 367 0
 2062 0032 3A89     		ldrh	r2, [r7, #8]
 2063 0034 3B8B     		ldrh	r3, [r7, #24]
 2064 0036 1344     		add	r3, r3, r2
 2065 0038 9BB2     		uxth	r3, r3
 2066 003a 013B     		subs	r3, r3, #1
 2067 003c 9BB2     		uxth	r3, r3
 2068 003e 1AB2     		sxth	r2, r3
 2069 0040 B7F90600 		ldrsh	r0, [r7, #6]
 2070 0044 B7F90A10 		ldrsh	r1, [r7, #10]
 2071 0048 BB8B     		ldrh	r3, [r7, #28]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 44


 2072 004a 0093     		str	r3, [sp]
 2073 004c 0346     		mov	r3, r0
 2074 004e F868     		ldr	r0, [r7, #12]
 2075 0050 FFF7FEFF 		bl	GFXwriteFastHLine
 368:gfx.c         ****             GFXwriteFastVLine(myGFX, x, y, h, color);
 2076              		.loc 1 368 0
 2077 0054 B7F91800 		ldrsh	r0, [r7, #24]
 2078 0058 B7F90820 		ldrsh	r2, [r7, #8]
 2079 005c B7F90A10 		ldrsh	r1, [r7, #10]
 2080 0060 BB8B     		ldrh	r3, [r7, #28]
 2081 0062 0093     		str	r3, [sp]
 2082 0064 0346     		mov	r3, r0
 2083 0066 F868     		ldr	r0, [r7, #12]
 2084 0068 FFF7FEFF 		bl	GFXwriteFastVLine
 369:gfx.c         ****             GFXwriteFastVLine(myGFX, x+w-1, y, h, color);
 2085              		.loc 1 369 0
 2086 006c 7A89     		ldrh	r2, [r7, #10]
 2087 006e FB88     		ldrh	r3, [r7, #6]
 2088 0070 1344     		add	r3, r3, r2
 2089 0072 9BB2     		uxth	r3, r3
 2090 0074 013B     		subs	r3, r3, #1
 2091 0076 9BB2     		uxth	r3, r3
 2092 0078 19B2     		sxth	r1, r3
 2093 007a B7F91800 		ldrsh	r0, [r7, #24]
 2094 007e B7F90820 		ldrsh	r2, [r7, #8]
 2095 0082 BB8B     		ldrh	r3, [r7, #28]
 2096 0084 0093     		str	r3, [sp]
 2097 0086 0346     		mov	r3, r0
 2098 0088 F868     		ldr	r0, [r7, #12]
 2099 008a FFF7FEFF 		bl	GFXwriteFastVLine
 370:gfx.c         ****             
 371:gfx.c         ****         }
 2100              		.loc 1 371 0
 2101 008e 00BF     		nop
 2102 0090 1037     		adds	r7, r7, #16
 2103              		.cfi_def_cfa_offset 8
 2104 0092 BD46     		mov	sp, r7
 2105              		.cfi_def_cfa_register 13
 2106              		@ sp needed
 2107 0094 80BD     		pop	{r7, pc}
 2108              		.cfi_endproc
 2109              	.LFE82:
 2110              		.size	GFXdrawRect, .-GFXdrawRect
 2111 0096 00BF     		.section	.text.GFXdrawRoundRect,"ax",%progbits
 2112              		.align	2
 2113              		.global	GFXdrawRoundRect
 2114              		.thumb
 2115              		.thumb_func
 2116              		.type	GFXdrawRoundRect, %function
 2117              	GFXdrawRoundRect:
 2118              	.LFB83:
 372:gfx.c         ****         
 373:gfx.c         ****         // Draw a rounded rectangle
 374:gfx.c         ****         void GFXdrawRoundRect(GFX* myGFX, int16_t x, int16_t y, int16_t w,
 375:gfx.c         ****                               int16_t h, int16_t r, uint16_t color) {
 2119              		.loc 1 375 0
 2120              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 45


 2121              		@ args = 12, pretend = 0, frame = 16
 2122              		@ frame_needed = 1, uses_anonymous_args = 0
 2123 0000 80B5     		push	{r7, lr}
 2124              		.cfi_def_cfa_offset 8
 2125              		.cfi_offset 7, -8
 2126              		.cfi_offset 14, -4
 2127 0002 86B0     		sub	sp, sp, #24
 2128              		.cfi_def_cfa_offset 32
 2129 0004 02AF     		add	r7, sp, #8
 2130              		.cfi_def_cfa 7, 24
 2131 0006 F860     		str	r0, [r7, #12]
 2132 0008 0846     		mov	r0, r1
 2133 000a 1146     		mov	r1, r2
 2134 000c 1A46     		mov	r2, r3
 2135 000e 0346     		mov	r3, r0	@ movhi
 2136 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 2137 0012 0B46     		mov	r3, r1	@ movhi
 2138 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2139 0016 1346     		mov	r3, r2	@ movhi
 2140 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 376:gfx.c         ****             // smarter version
 377:gfx.c         ****             GFXwriteFastHLine(myGFX, x+r  , y    , w-2*r, color); // Top
 2141              		.loc 1 377 0
 2142 001a 7A89     		ldrh	r2, [r7, #10]
 2143 001c BB8B     		ldrh	r3, [r7, #28]
 2144 001e 1344     		add	r3, r3, r2
 2145 0020 9BB2     		uxth	r3, r3
 2146 0022 19B2     		sxth	r1, r3
 2147 0024 FA88     		ldrh	r2, [r7, #6]
 2148 0026 BB8B     		ldrh	r3, [r7, #28]
 2149 0028 5B00     		lsls	r3, r3, #1
 2150 002a 9BB2     		uxth	r3, r3
 2151 002c D31A     		subs	r3, r2, r3
 2152 002e 9BB2     		uxth	r3, r3
 2153 0030 18B2     		sxth	r0, r3
 2154 0032 B7F90820 		ldrsh	r2, [r7, #8]
 2155 0036 3B8C     		ldrh	r3, [r7, #32]
 2156 0038 0093     		str	r3, [sp]
 2157 003a 0346     		mov	r3, r0
 2158 003c F868     		ldr	r0, [r7, #12]
 2159 003e FFF7FEFF 		bl	GFXwriteFastHLine
 378:gfx.c         ****             GFXwriteFastHLine(myGFX, x+r  , y+h-1, w-2*r, color); // Bottom
 2160              		.loc 1 378 0
 2161 0042 7A89     		ldrh	r2, [r7, #10]
 2162 0044 BB8B     		ldrh	r3, [r7, #28]
 2163 0046 1344     		add	r3, r3, r2
 2164 0048 9BB2     		uxth	r3, r3
 2165 004a 19B2     		sxth	r1, r3
 2166 004c 3A89     		ldrh	r2, [r7, #8]
 2167 004e 3B8B     		ldrh	r3, [r7, #24]
 2168 0050 1344     		add	r3, r3, r2
 2169 0052 9BB2     		uxth	r3, r3
 2170 0054 013B     		subs	r3, r3, #1
 2171 0056 9BB2     		uxth	r3, r3
 2172 0058 18B2     		sxth	r0, r3
 2173 005a FA88     		ldrh	r2, [r7, #6]
 2174 005c BB8B     		ldrh	r3, [r7, #28]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 46


 2175 005e 5B00     		lsls	r3, r3, #1
 2176 0060 9BB2     		uxth	r3, r3
 2177 0062 D31A     		subs	r3, r2, r3
 2178 0064 9BB2     		uxth	r3, r3
 2179 0066 1AB2     		sxth	r2, r3
 2180 0068 3B8C     		ldrh	r3, [r7, #32]
 2181 006a 0093     		str	r3, [sp]
 2182 006c 1346     		mov	r3, r2
 2183 006e 0246     		mov	r2, r0
 2184 0070 F868     		ldr	r0, [r7, #12]
 2185 0072 FFF7FEFF 		bl	GFXwriteFastHLine
 379:gfx.c         ****             GFXwriteFastVLine(myGFX, x    , y+r  , h-2*r, color); // Left
 2186              		.loc 1 379 0
 2187 0076 3A89     		ldrh	r2, [r7, #8]
 2188 0078 BB8B     		ldrh	r3, [r7, #28]
 2189 007a 1344     		add	r3, r3, r2
 2190 007c 9BB2     		uxth	r3, r3
 2191 007e 18B2     		sxth	r0, r3
 2192 0080 3A8B     		ldrh	r2, [r7, #24]
 2193 0082 BB8B     		ldrh	r3, [r7, #28]
 2194 0084 5B00     		lsls	r3, r3, #1
 2195 0086 9BB2     		uxth	r3, r3
 2196 0088 D31A     		subs	r3, r2, r3
 2197 008a 9BB2     		uxth	r3, r3
 2198 008c 1AB2     		sxth	r2, r3
 2199 008e B7F90A10 		ldrsh	r1, [r7, #10]
 2200 0092 3B8C     		ldrh	r3, [r7, #32]
 2201 0094 0093     		str	r3, [sp]
 2202 0096 1346     		mov	r3, r2
 2203 0098 0246     		mov	r2, r0
 2204 009a F868     		ldr	r0, [r7, #12]
 2205 009c FFF7FEFF 		bl	GFXwriteFastVLine
 380:gfx.c         ****             GFXwriteFastVLine(myGFX, x+w-1, y+r  , h-2*r, color); // Right
 2206              		.loc 1 380 0
 2207 00a0 7A89     		ldrh	r2, [r7, #10]
 2208 00a2 FB88     		ldrh	r3, [r7, #6]
 2209 00a4 1344     		add	r3, r3, r2
 2210 00a6 9BB2     		uxth	r3, r3
 2211 00a8 013B     		subs	r3, r3, #1
 2212 00aa 9BB2     		uxth	r3, r3
 2213 00ac 19B2     		sxth	r1, r3
 2214 00ae 3A89     		ldrh	r2, [r7, #8]
 2215 00b0 BB8B     		ldrh	r3, [r7, #28]
 2216 00b2 1344     		add	r3, r3, r2
 2217 00b4 9BB2     		uxth	r3, r3
 2218 00b6 18B2     		sxth	r0, r3
 2219 00b8 3A8B     		ldrh	r2, [r7, #24]
 2220 00ba BB8B     		ldrh	r3, [r7, #28]
 2221 00bc 5B00     		lsls	r3, r3, #1
 2222 00be 9BB2     		uxth	r3, r3
 2223 00c0 D31A     		subs	r3, r2, r3
 2224 00c2 9BB2     		uxth	r3, r3
 2225 00c4 1AB2     		sxth	r2, r3
 2226 00c6 3B8C     		ldrh	r3, [r7, #32]
 2227 00c8 0093     		str	r3, [sp]
 2228 00ca 1346     		mov	r3, r2
 2229 00cc 0246     		mov	r2, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 47


 2230 00ce F868     		ldr	r0, [r7, #12]
 2231 00d0 FFF7FEFF 		bl	GFXwriteFastVLine
 381:gfx.c         ****             // draw four corners
 382:gfx.c         ****             GFXdrawCircleHelper(myGFX, x+r    , y+r    , r, 1, color);
 2232              		.loc 1 382 0
 2233 00d4 7A89     		ldrh	r2, [r7, #10]
 2234 00d6 BB8B     		ldrh	r3, [r7, #28]
 2235 00d8 1344     		add	r3, r3, r2
 2236 00da 9BB2     		uxth	r3, r3
 2237 00dc 19B2     		sxth	r1, r3
 2238 00de 3A89     		ldrh	r2, [r7, #8]
 2239 00e0 BB8B     		ldrh	r3, [r7, #28]
 2240 00e2 1344     		add	r3, r3, r2
 2241 00e4 9BB2     		uxth	r3, r3
 2242 00e6 1AB2     		sxth	r2, r3
 2243 00e8 B7F91C00 		ldrsh	r0, [r7, #28]
 2244 00ec 3B8C     		ldrh	r3, [r7, #32]
 2245 00ee 0193     		str	r3, [sp, #4]
 2246 00f0 0123     		movs	r3, #1
 2247 00f2 0093     		str	r3, [sp]
 2248 00f4 0346     		mov	r3, r0
 2249 00f6 F868     		ldr	r0, [r7, #12]
 2250 00f8 FFF7FEFF 		bl	GFXdrawCircleHelper
 383:gfx.c         ****             GFXdrawCircleHelper(myGFX, x+w-r-1, y+r    , r, 2, color);
 2251              		.loc 1 383 0
 2252 00fc 7A89     		ldrh	r2, [r7, #10]
 2253 00fe FB88     		ldrh	r3, [r7, #6]
 2254 0100 1344     		add	r3, r3, r2
 2255 0102 9AB2     		uxth	r2, r3
 2256 0104 BB8B     		ldrh	r3, [r7, #28]
 2257 0106 D31A     		subs	r3, r2, r3
 2258 0108 9BB2     		uxth	r3, r3
 2259 010a 013B     		subs	r3, r3, #1
 2260 010c 9BB2     		uxth	r3, r3
 2261 010e 19B2     		sxth	r1, r3
 2262 0110 3A89     		ldrh	r2, [r7, #8]
 2263 0112 BB8B     		ldrh	r3, [r7, #28]
 2264 0114 1344     		add	r3, r3, r2
 2265 0116 9BB2     		uxth	r3, r3
 2266 0118 1AB2     		sxth	r2, r3
 2267 011a B7F91C00 		ldrsh	r0, [r7, #28]
 2268 011e 3B8C     		ldrh	r3, [r7, #32]
 2269 0120 0193     		str	r3, [sp, #4]
 2270 0122 0223     		movs	r3, #2
 2271 0124 0093     		str	r3, [sp]
 2272 0126 0346     		mov	r3, r0
 2273 0128 F868     		ldr	r0, [r7, #12]
 2274 012a FFF7FEFF 		bl	GFXdrawCircleHelper
 384:gfx.c         ****             GFXdrawCircleHelper(myGFX, x+w-r-1, y+h-r-1, r, 4, color);
 2275              		.loc 1 384 0
 2276 012e 7A89     		ldrh	r2, [r7, #10]
 2277 0130 FB88     		ldrh	r3, [r7, #6]
 2278 0132 1344     		add	r3, r3, r2
 2279 0134 9AB2     		uxth	r2, r3
 2280 0136 BB8B     		ldrh	r3, [r7, #28]
 2281 0138 D31A     		subs	r3, r2, r3
 2282 013a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 48


 2283 013c 013B     		subs	r3, r3, #1
 2284 013e 9BB2     		uxth	r3, r3
 2285 0140 19B2     		sxth	r1, r3
 2286 0142 3A89     		ldrh	r2, [r7, #8]
 2287 0144 3B8B     		ldrh	r3, [r7, #24]
 2288 0146 1344     		add	r3, r3, r2
 2289 0148 9AB2     		uxth	r2, r3
 2290 014a BB8B     		ldrh	r3, [r7, #28]
 2291 014c D31A     		subs	r3, r2, r3
 2292 014e 9BB2     		uxth	r3, r3
 2293 0150 013B     		subs	r3, r3, #1
 2294 0152 9BB2     		uxth	r3, r3
 2295 0154 1AB2     		sxth	r2, r3
 2296 0156 B7F91C00 		ldrsh	r0, [r7, #28]
 2297 015a 3B8C     		ldrh	r3, [r7, #32]
 2298 015c 0193     		str	r3, [sp, #4]
 2299 015e 0423     		movs	r3, #4
 2300 0160 0093     		str	r3, [sp]
 2301 0162 0346     		mov	r3, r0
 2302 0164 F868     		ldr	r0, [r7, #12]
 2303 0166 FFF7FEFF 		bl	GFXdrawCircleHelper
 385:gfx.c         ****             GFXdrawCircleHelper(myGFX, x+r    , y+h-r-1, r, 8, color);
 2304              		.loc 1 385 0
 2305 016a 7A89     		ldrh	r2, [r7, #10]
 2306 016c BB8B     		ldrh	r3, [r7, #28]
 2307 016e 1344     		add	r3, r3, r2
 2308 0170 9BB2     		uxth	r3, r3
 2309 0172 19B2     		sxth	r1, r3
 2310 0174 3A89     		ldrh	r2, [r7, #8]
 2311 0176 3B8B     		ldrh	r3, [r7, #24]
 2312 0178 1344     		add	r3, r3, r2
 2313 017a 9AB2     		uxth	r2, r3
 2314 017c BB8B     		ldrh	r3, [r7, #28]
 2315 017e D31A     		subs	r3, r2, r3
 2316 0180 9BB2     		uxth	r3, r3
 2317 0182 013B     		subs	r3, r3, #1
 2318 0184 9BB2     		uxth	r3, r3
 2319 0186 1AB2     		sxth	r2, r3
 2320 0188 B7F91C00 		ldrsh	r0, [r7, #28]
 2321 018c 3B8C     		ldrh	r3, [r7, #32]
 2322 018e 0193     		str	r3, [sp, #4]
 2323 0190 0823     		movs	r3, #8
 2324 0192 0093     		str	r3, [sp]
 2325 0194 0346     		mov	r3, r0
 2326 0196 F868     		ldr	r0, [r7, #12]
 2327 0198 FFF7FEFF 		bl	GFXdrawCircleHelper
 386:gfx.c         ****             
 387:gfx.c         ****         }
 2328              		.loc 1 387 0
 2329 019c 00BF     		nop
 2330 019e 1037     		adds	r7, r7, #16
 2331              		.cfi_def_cfa_offset 8
 2332 01a0 BD46     		mov	sp, r7
 2333              		.cfi_def_cfa_register 13
 2334              		@ sp needed
 2335 01a2 80BD     		pop	{r7, pc}
 2336              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 49


 2337              	.LFE83:
 2338              		.size	GFXdrawRoundRect, .-GFXdrawRoundRect
 2339              		.section	.text.GFXfillRoundRect,"ax",%progbits
 2340              		.align	2
 2341              		.global	GFXfillRoundRect
 2342              		.thumb
 2343              		.thumb_func
 2344              		.type	GFXfillRoundRect, %function
 2345              	GFXfillRoundRect:
 2346              	.LFB84:
 388:gfx.c         ****         
 389:gfx.c         ****         // Fill a rounded rectangle
 390:gfx.c         ****         void GFXfillRoundRect(GFX* myGFX, int16_t x, int16_t y, int16_t w,
 391:gfx.c         ****                               int16_t h, int16_t r, uint16_t color) {
 2347              		.loc 1 391 0
 2348              		.cfi_startproc
 2349              		@ args = 12, pretend = 0, frame = 16
 2350              		@ frame_needed = 1, uses_anonymous_args = 0
 2351 0000 90B5     		push	{r4, r7, lr}
 2352              		.cfi_def_cfa_offset 12
 2353              		.cfi_offset 4, -12
 2354              		.cfi_offset 7, -8
 2355              		.cfi_offset 14, -4
 2356 0002 89B0     		sub	sp, sp, #36
 2357              		.cfi_def_cfa_offset 48
 2358 0004 04AF     		add	r7, sp, #16
 2359              		.cfi_def_cfa 7, 32
 2360 0006 F860     		str	r0, [r7, #12]
 2361 0008 0846     		mov	r0, r1
 2362 000a 1146     		mov	r1, r2
 2363 000c 1A46     		mov	r2, r3
 2364 000e 0346     		mov	r3, r0	@ movhi
 2365 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 2366 0012 0B46     		mov	r3, r1	@ movhi
 2367 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2368 0016 1346     		mov	r3, r2	@ movhi
 2369 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 392:gfx.c         ****             // smarter version
 393:gfx.c         ****             GFXwriteFillRect(myGFX, x+r, y, w-2*r, h, color);
 2370              		.loc 1 393 0
 2371 001a 7A89     		ldrh	r2, [r7, #10]
 2372 001c BB8C     		ldrh	r3, [r7, #36]
 2373 001e 1344     		add	r3, r3, r2
 2374 0020 9BB2     		uxth	r3, r3
 2375 0022 19B2     		sxth	r1, r3
 2376 0024 FA88     		ldrh	r2, [r7, #6]
 2377 0026 BB8C     		ldrh	r3, [r7, #36]
 2378 0028 5B00     		lsls	r3, r3, #1
 2379 002a 9BB2     		uxth	r3, r3
 2380 002c D31A     		subs	r3, r2, r3
 2381 002e 9BB2     		uxth	r3, r3
 2382 0030 18B2     		sxth	r0, r3
 2383 0032 B7F90820 		ldrsh	r2, [r7, #8]
 2384 0036 3B8D     		ldrh	r3, [r7, #40]
 2385 0038 0193     		str	r3, [sp, #4]
 2386 003a B7F92030 		ldrsh	r3, [r7, #32]
 2387 003e 0093     		str	r3, [sp]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 50


 2388 0040 0346     		mov	r3, r0
 2389 0042 F868     		ldr	r0, [r7, #12]
 2390 0044 FFF7FEFF 		bl	GFXwriteFillRect
 394:gfx.c         ****             // draw four corners
 395:gfx.c         ****             GFXfillCircleHelper(myGFX, x+w-r-1, y+r, r, 1, h-2*r-1, color);
 2391              		.loc 1 395 0
 2392 0048 7A89     		ldrh	r2, [r7, #10]
 2393 004a FB88     		ldrh	r3, [r7, #6]
 2394 004c 1344     		add	r3, r3, r2
 2395 004e 9AB2     		uxth	r2, r3
 2396 0050 BB8C     		ldrh	r3, [r7, #36]
 2397 0052 D31A     		subs	r3, r2, r3
 2398 0054 9BB2     		uxth	r3, r3
 2399 0056 013B     		subs	r3, r3, #1
 2400 0058 9BB2     		uxth	r3, r3
 2401 005a 19B2     		sxth	r1, r3
 2402 005c 3A89     		ldrh	r2, [r7, #8]
 2403 005e BB8C     		ldrh	r3, [r7, #36]
 2404 0060 1344     		add	r3, r3, r2
 2405 0062 9BB2     		uxth	r3, r3
 2406 0064 18B2     		sxth	r0, r3
 2407 0066 3A8C     		ldrh	r2, [r7, #32]
 2408 0068 BB8C     		ldrh	r3, [r7, #36]
 2409 006a 5B00     		lsls	r3, r3, #1
 2410 006c 9BB2     		uxth	r3, r3
 2411 006e D31A     		subs	r3, r2, r3
 2412 0070 9BB2     		uxth	r3, r3
 2413 0072 013B     		subs	r3, r3, #1
 2414 0074 9BB2     		uxth	r3, r3
 2415 0076 1BB2     		sxth	r3, r3
 2416 0078 B7F92440 		ldrsh	r4, [r7, #36]
 2417 007c 3A8D     		ldrh	r2, [r7, #40]
 2418 007e 0292     		str	r2, [sp, #8]
 2419 0080 0193     		str	r3, [sp, #4]
 2420 0082 0123     		movs	r3, #1
 2421 0084 0093     		str	r3, [sp]
 2422 0086 2346     		mov	r3, r4
 2423 0088 0246     		mov	r2, r0
 2424 008a F868     		ldr	r0, [r7, #12]
 2425 008c FFF7FEFF 		bl	GFXfillCircleHelper
 396:gfx.c         ****             GFXfillCircleHelper(myGFX, x+r    , y+r, r, 2, h-2*r-1, color);
 2426              		.loc 1 396 0
 2427 0090 7A89     		ldrh	r2, [r7, #10]
 2428 0092 BB8C     		ldrh	r3, [r7, #36]
 2429 0094 1344     		add	r3, r3, r2
 2430 0096 9BB2     		uxth	r3, r3
 2431 0098 19B2     		sxth	r1, r3
 2432 009a 3A89     		ldrh	r2, [r7, #8]
 2433 009c BB8C     		ldrh	r3, [r7, #36]
 2434 009e 1344     		add	r3, r3, r2
 2435 00a0 9BB2     		uxth	r3, r3
 2436 00a2 18B2     		sxth	r0, r3
 2437 00a4 3A8C     		ldrh	r2, [r7, #32]
 2438 00a6 BB8C     		ldrh	r3, [r7, #36]
 2439 00a8 5B00     		lsls	r3, r3, #1
 2440 00aa 9BB2     		uxth	r3, r3
 2441 00ac D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 51


 2442 00ae 9BB2     		uxth	r3, r3
 2443 00b0 013B     		subs	r3, r3, #1
 2444 00b2 9BB2     		uxth	r3, r3
 2445 00b4 1BB2     		sxth	r3, r3
 2446 00b6 B7F92440 		ldrsh	r4, [r7, #36]
 2447 00ba 3A8D     		ldrh	r2, [r7, #40]
 2448 00bc 0292     		str	r2, [sp, #8]
 2449 00be 0193     		str	r3, [sp, #4]
 2450 00c0 0223     		movs	r3, #2
 2451 00c2 0093     		str	r3, [sp]
 2452 00c4 2346     		mov	r3, r4
 2453 00c6 0246     		mov	r2, r0
 2454 00c8 F868     		ldr	r0, [r7, #12]
 2455 00ca FFF7FEFF 		bl	GFXfillCircleHelper
 397:gfx.c         ****             
 398:gfx.c         ****         }
 2456              		.loc 1 398 0
 2457 00ce 00BF     		nop
 2458 00d0 1437     		adds	r7, r7, #20
 2459              		.cfi_def_cfa_offset 12
 2460 00d2 BD46     		mov	sp, r7
 2461              		.cfi_def_cfa_register 13
 2462              		@ sp needed
 2463 00d4 90BD     		pop	{r4, r7, pc}
 2464              		.cfi_endproc
 2465              	.LFE84:
 2466              		.size	GFXfillRoundRect, .-GFXfillRoundRect
 2467 00d6 00BF     		.section	.text.GFXdrawTriangle,"ax",%progbits
 2468              		.align	2
 2469              		.global	GFXdrawTriangle
 2470              		.thumb
 2471              		.thumb_func
 2472              		.type	GFXdrawTriangle, %function
 2473              	GFXdrawTriangle:
 2474              	.LFB85:
 399:gfx.c         ****         
 400:gfx.c         ****         // Draw a triangle
 401:gfx.c         ****         void GFXdrawTriangle(GFX* myGFX, int16_t x0, int16_t y0,
 402:gfx.c         ****                              int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color) {
 2475              		.loc 1 402 0
 2476              		.cfi_startproc
 2477              		@ args = 16, pretend = 0, frame = 16
 2478              		@ frame_needed = 1, uses_anonymous_args = 0
 2479 0000 80B5     		push	{r7, lr}
 2480              		.cfi_def_cfa_offset 8
 2481              		.cfi_offset 7, -8
 2482              		.cfi_offset 14, -4
 2483 0002 86B0     		sub	sp, sp, #24
 2484              		.cfi_def_cfa_offset 32
 2485 0004 02AF     		add	r7, sp, #8
 2486              		.cfi_def_cfa 7, 24
 2487 0006 F860     		str	r0, [r7, #12]
 2488 0008 0846     		mov	r0, r1
 2489 000a 1146     		mov	r1, r2
 2490 000c 1A46     		mov	r2, r3
 2491 000e 0346     		mov	r3, r0	@ movhi
 2492 0010 7B81     		strh	r3, [r7, #10]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 52


 2493 0012 0B46     		mov	r3, r1	@ movhi
 2494 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2495 0016 1346     		mov	r3, r2	@ movhi
 2496 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 403:gfx.c         ****             GFXdrawLine(myGFX, x0, y0, x1, y1, color);
 2497              		.loc 1 403 0
 2498 001a B7F90600 		ldrsh	r0, [r7, #6]
 2499 001e B7F90820 		ldrsh	r2, [r7, #8]
 2500 0022 B7F90A10 		ldrsh	r1, [r7, #10]
 2501 0026 BB8C     		ldrh	r3, [r7, #36]
 2502 0028 0193     		str	r3, [sp, #4]
 2503 002a B7F91830 		ldrsh	r3, [r7, #24]
 2504 002e 0093     		str	r3, [sp]
 2505 0030 0346     		mov	r3, r0
 2506 0032 F868     		ldr	r0, [r7, #12]
 2507 0034 FFF7FEFF 		bl	GFXdrawLine
 404:gfx.c         ****             GFXdrawLine(myGFX, x1, y1, x2, y2, color);
 2508              		.loc 1 404 0
 2509 0038 B7F91C00 		ldrsh	r0, [r7, #28]
 2510 003c B7F91820 		ldrsh	r2, [r7, #24]
 2511 0040 B7F90610 		ldrsh	r1, [r7, #6]
 2512 0044 BB8C     		ldrh	r3, [r7, #36]
 2513 0046 0193     		str	r3, [sp, #4]
 2514 0048 B7F92030 		ldrsh	r3, [r7, #32]
 2515 004c 0093     		str	r3, [sp]
 2516 004e 0346     		mov	r3, r0
 2517 0050 F868     		ldr	r0, [r7, #12]
 2518 0052 FFF7FEFF 		bl	GFXdrawLine
 405:gfx.c         ****             GFXdrawLine(myGFX, x2, y2, x0, y0, color);
 2519              		.loc 1 405 0
 2520 0056 B7F90A00 		ldrsh	r0, [r7, #10]
 2521 005a B7F92020 		ldrsh	r2, [r7, #32]
 2522 005e B7F91C10 		ldrsh	r1, [r7, #28]
 2523 0062 BB8C     		ldrh	r3, [r7, #36]
 2524 0064 0193     		str	r3, [sp, #4]
 2525 0066 B7F90830 		ldrsh	r3, [r7, #8]
 2526 006a 0093     		str	r3, [sp]
 2527 006c 0346     		mov	r3, r0
 2528 006e F868     		ldr	r0, [r7, #12]
 2529 0070 FFF7FEFF 		bl	GFXdrawLine
 406:gfx.c         ****         }
 2530              		.loc 1 406 0
 2531 0074 00BF     		nop
 2532 0076 1037     		adds	r7, r7, #16
 2533              		.cfi_def_cfa_offset 8
 2534 0078 BD46     		mov	sp, r7
 2535              		.cfi_def_cfa_register 13
 2536              		@ sp needed
 2537 007a 80BD     		pop	{r7, pc}
 2538              		.cfi_endproc
 2539              	.LFE85:
 2540              		.size	GFXdrawTriangle, .-GFXdrawTriangle
 2541              		.section	.text.GFXfillTriangle,"ax",%progbits
 2542              		.align	2
 2543              		.global	GFXfillTriangle
 2544              		.thumb
 2545              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 53


 2546              		.type	GFXfillTriangle, %function
 2547              	GFXfillTriangle:
 2548              	.LFB86:
 407:gfx.c         ****         
 408:gfx.c         ****         // Fill a triangle
 409:gfx.c         ****         void GFXfillTriangle(GFX* myGFX, int16_t x0, int16_t y0,
 410:gfx.c         ****                              int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color) {
 2549              		.loc 1 410 0
 2550              		.cfi_startproc
 2551              		@ args = 16, pretend = 0, frame = 64
 2552              		@ frame_needed = 1, uses_anonymous_args = 0
 2553 0000 80B5     		push	{r7, lr}
 2554              		.cfi_def_cfa_offset 8
 2555              		.cfi_offset 7, -8
 2556              		.cfi_offset 14, -4
 2557 0002 92B0     		sub	sp, sp, #72
 2558              		.cfi_def_cfa_offset 80
 2559 0004 02AF     		add	r7, sp, #8
 2560              		.cfi_def_cfa 7, 72
 2561 0006 F860     		str	r0, [r7, #12]
 2562 0008 0846     		mov	r0, r1
 2563 000a 1146     		mov	r1, r2
 2564 000c 1A46     		mov	r2, r3
 2565 000e 0346     		mov	r3, r0	@ movhi
 2566 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 2567 0012 0B46     		mov	r3, r1	@ movhi
 2568 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 2569 0016 1346     		mov	r3, r2	@ movhi
 2570 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 411:gfx.c         ****             
 412:gfx.c         ****             int16_t a, b, y, last;
 413:gfx.c         ****             
 414:gfx.c         ****             // Sort coordinates by Y order (y2 >= y1 >= y0)
 415:gfx.c         ****             if (y0 > y1) {
 2571              		.loc 1 415 0
 2572 001a B7F90820 		ldrsh	r2, [r7, #8]
 2573 001e B7F94830 		ldrsh	r3, [r7, #72]
 2574 0022 9A42     		cmp	r2, r3
 2575 0024 0DDD     		ble	.L70
 2576              	.LBB11:
 416:gfx.c         ****                 _swap_int16_t(y0, y1); _swap_int16_t(x0, x1);
 2577              		.loc 1 416 0
 2578 0026 3B89     		ldrh	r3, [r7, #8]	@ movhi
 2579 0028 FB85     		strh	r3, [r7, #46]	@ movhi
 2580 002a B7F84830 		ldrh	r3, [r7, #72]	@ movhi
 2581 002e 3B81     		strh	r3, [r7, #8]	@ movhi
 2582 0030 FB8D     		ldrh	r3, [r7, #46]	@ movhi
 2583 0032 A7F84830 		strh	r3, [r7, #72]	@ movhi
 2584              	.LBE11:
 2585              	.LBB12:
 2586 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 2587 0038 BB85     		strh	r3, [r7, #44]	@ movhi
 2588 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 2589 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 2590 003e BB8D     		ldrh	r3, [r7, #44]	@ movhi
 2591 0040 FB80     		strh	r3, [r7, #6]	@ movhi
 2592              	.L70:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 54


 2593              	.LBE12:
 417:gfx.c         ****             }
 418:gfx.c         ****             if (y1 > y2) {
 2594              		.loc 1 418 0
 2595 0042 B7F94820 		ldrsh	r2, [r7, #72]
 2596 0046 B7F95030 		ldrsh	r3, [r7, #80]
 2597 004a 9A42     		cmp	r2, r3
 2598 004c 11DD     		ble	.L71
 2599              	.LBB13:
 419:gfx.c         ****                 _swap_int16_t(y2, y1); _swap_int16_t(x2, x1);
 2600              		.loc 1 419 0
 2601 004e B7F85030 		ldrh	r3, [r7, #80]	@ movhi
 2602 0052 7B85     		strh	r3, [r7, #42]	@ movhi
 2603 0054 B7F84830 		ldrh	r3, [r7, #72]	@ movhi
 2604 0058 A7F85030 		strh	r3, [r7, #80]	@ movhi
 2605 005c 7B8D     		ldrh	r3, [r7, #42]	@ movhi
 2606 005e A7F84830 		strh	r3, [r7, #72]	@ movhi
 2607              	.LBE13:
 2608              	.LBB14:
 2609 0062 B7F84C30 		ldrh	r3, [r7, #76]	@ movhi
 2610 0066 3B85     		strh	r3, [r7, #40]	@ movhi
 2611 0068 FB88     		ldrh	r3, [r7, #6]	@ movhi
 2612 006a A7F84C30 		strh	r3, [r7, #76]	@ movhi
 2613 006e 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 2614 0070 FB80     		strh	r3, [r7, #6]	@ movhi
 2615              	.L71:
 2616              	.LBE14:
 420:gfx.c         ****             }
 421:gfx.c         ****             if (y0 > y1) {
 2617              		.loc 1 421 0
 2618 0072 B7F90820 		ldrsh	r2, [r7, #8]
 2619 0076 B7F94830 		ldrsh	r3, [r7, #72]
 2620 007a 9A42     		cmp	r2, r3
 2621 007c 0DDD     		ble	.L72
 2622              	.LBB15:
 422:gfx.c         ****                 _swap_int16_t(y0, y1); _swap_int16_t(x0, x1);
 2623              		.loc 1 422 0
 2624 007e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 2625 0080 FB84     		strh	r3, [r7, #38]	@ movhi
 2626 0082 B7F84830 		ldrh	r3, [r7, #72]	@ movhi
 2627 0086 3B81     		strh	r3, [r7, #8]	@ movhi
 2628 0088 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 2629 008a A7F84830 		strh	r3, [r7, #72]	@ movhi
 2630              	.LBE15:
 2631              	.LBB16:
 2632 008e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 2633 0090 BB84     		strh	r3, [r7, #36]	@ movhi
 2634 0092 FB88     		ldrh	r3, [r7, #6]	@ movhi
 2635 0094 7B81     		strh	r3, [r7, #10]	@ movhi
 2636 0096 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 2637 0098 FB80     		strh	r3, [r7, #6]	@ movhi
 2638              	.L72:
 2639              	.LBE16:
 423:gfx.c         ****             }
 424:gfx.c         ****             
 425:gfx.c         ****             
 426:gfx.c         ****             if(y0 == y2) { // Handle awkward all-on-same-line case as its own thing
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 55


 2640              		.loc 1 426 0
 2641 009a B7F90820 		ldrsh	r2, [r7, #8]
 2642 009e B7F95030 		ldrsh	r3, [r7, #80]
 2643 00a2 9A42     		cmp	r2, r3
 2644 00a4 3AD1     		bne	.L73
 427:gfx.c         ****                 a = b = x0;
 2645              		.loc 1 427 0
 2646 00a6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 2647 00a8 BB87     		strh	r3, [r7, #60]	@ movhi
 2648 00aa BB8F     		ldrh	r3, [r7, #60]	@ movhi
 2649 00ac FB87     		strh	r3, [r7, #62]	@ movhi
 428:gfx.c         ****                 if(x1 < a)      a = x1;
 2650              		.loc 1 428 0
 2651 00ae B7F90620 		ldrsh	r2, [r7, #6]
 2652 00b2 B7F93E30 		ldrsh	r3, [r7, #62]
 2653 00b6 9A42     		cmp	r2, r3
 2654 00b8 02DA     		bge	.L74
 2655              		.loc 1 428 0 is_stmt 0 discriminator 1
 2656 00ba FB88     		ldrh	r3, [r7, #6]	@ movhi
 2657 00bc FB87     		strh	r3, [r7, #62]	@ movhi
 2658 00be 07E0     		b	.L75
 2659              	.L74:
 429:gfx.c         ****                 else if(x1 > b) b = x1;
 2660              		.loc 1 429 0 is_stmt 1
 2661 00c0 B7F90620 		ldrsh	r2, [r7, #6]
 2662 00c4 B7F93C30 		ldrsh	r3, [r7, #60]
 2663 00c8 9A42     		cmp	r2, r3
 2664 00ca 01DD     		ble	.L75
 2665              		.loc 1 429 0 is_stmt 0 discriminator 1
 2666 00cc FB88     		ldrh	r3, [r7, #6]	@ movhi
 2667 00ce BB87     		strh	r3, [r7, #60]	@ movhi
 2668              	.L75:
 430:gfx.c         ****                 if(x2 < a)      a = x2;
 2669              		.loc 1 430 0 is_stmt 1
 2670 00d0 B7F94C20 		ldrsh	r2, [r7, #76]
 2671 00d4 B7F93E30 		ldrsh	r3, [r7, #62]
 2672 00d8 9A42     		cmp	r2, r3
 2673 00da 03DA     		bge	.L76
 2674              		.loc 1 430 0 is_stmt 0 discriminator 1
 2675 00dc B7F84C30 		ldrh	r3, [r7, #76]	@ movhi
 2676 00e0 FB87     		strh	r3, [r7, #62]	@ movhi
 2677 00e2 08E0     		b	.L77
 2678              	.L76:
 431:gfx.c         ****                 else if(x2 > b) b = x2;
 2679              		.loc 1 431 0 is_stmt 1
 2680 00e4 B7F94C20 		ldrsh	r2, [r7, #76]
 2681 00e8 B7F93C30 		ldrsh	r3, [r7, #60]
 2682 00ec 9A42     		cmp	r2, r3
 2683 00ee 02DD     		ble	.L77
 2684              		.loc 1 431 0 is_stmt 0 discriminator 1
 2685 00f0 B7F84C30 		ldrh	r3, [r7, #76]	@ movhi
 2686 00f4 BB87     		strh	r3, [r7, #60]	@ movhi
 2687              	.L77:
 432:gfx.c         ****                 GFXwriteFastHLine(myGFX, a, y0, b-a+1, color);
 2688              		.loc 1 432 0 is_stmt 1
 2689 00f6 BA8F     		ldrh	r2, [r7, #60]
 2690 00f8 FB8F     		ldrh	r3, [r7, #62]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 56


 2691 00fa D31A     		subs	r3, r2, r3
 2692 00fc 9BB2     		uxth	r3, r3
 2693 00fe 0133     		adds	r3, r3, #1
 2694 0100 9BB2     		uxth	r3, r3
 2695 0102 18B2     		sxth	r0, r3
 2696 0104 B7F90820 		ldrsh	r2, [r7, #8]
 2697 0108 B7F93E10 		ldrsh	r1, [r7, #62]
 2698 010c B7F85430 		ldrh	r3, [r7, #84]
 2699 0110 0093     		str	r3, [sp]
 2700 0112 0346     		mov	r3, r0
 2701 0114 F868     		ldr	r0, [r7, #12]
 2702 0116 FFF7FEFF 		bl	GFXwriteFastHLine
 433:gfx.c         ****                 
 434:gfx.c         ****                 return;
 2703              		.loc 1 434 0
 2704 011a DEE0     		b	.L69
 2705              	.L73:
 435:gfx.c         ****             }
 436:gfx.c         ****             
 437:gfx.c         ****             int16_t
 438:gfx.c         ****             dx01 = x1 - x0,
 2706              		.loc 1 438 0
 2707 011c FA88     		ldrh	r2, [r7, #6]
 2708 011e 7B89     		ldrh	r3, [r7, #10]
 2709 0120 D31A     		subs	r3, r2, r3
 2710 0122 9BB2     		uxth	r3, r3
 2711 0124 7B84     		strh	r3, [r7, #34]	@ movhi
 439:gfx.c         ****             dy01 = y1 - y0,
 2712              		.loc 1 439 0
 2713 0126 B7F84820 		ldrh	r2, [r7, #72]
 2714 012a 3B89     		ldrh	r3, [r7, #8]
 2715 012c D31A     		subs	r3, r2, r3
 2716 012e 9BB2     		uxth	r3, r3
 2717 0130 3B84     		strh	r3, [r7, #32]	@ movhi
 440:gfx.c         ****             dx02 = x2 - x0,
 2718              		.loc 1 440 0
 2719 0132 B7F84C20 		ldrh	r2, [r7, #76]
 2720 0136 7B89     		ldrh	r3, [r7, #10]
 2721 0138 D31A     		subs	r3, r2, r3
 2722 013a 9BB2     		uxth	r3, r3
 2723 013c FB83     		strh	r3, [r7, #30]	@ movhi
 441:gfx.c         ****             dy02 = y2 - y0,
 2724              		.loc 1 441 0
 2725 013e B7F85020 		ldrh	r2, [r7, #80]
 2726 0142 3B89     		ldrh	r3, [r7, #8]
 2727 0144 D31A     		subs	r3, r2, r3
 2728 0146 9BB2     		uxth	r3, r3
 2729 0148 BB83     		strh	r3, [r7, #28]	@ movhi
 442:gfx.c         ****             dx12 = x2 - x1,
 2730              		.loc 1 442 0
 2731 014a B7F84C20 		ldrh	r2, [r7, #76]
 2732 014e FB88     		ldrh	r3, [r7, #6]
 2733 0150 D31A     		subs	r3, r2, r3
 2734 0152 9BB2     		uxth	r3, r3
 2735 0154 7B83     		strh	r3, [r7, #26]	@ movhi
 443:gfx.c         ****             dy12 = y2 - y1;
 2736              		.loc 1 443 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 57


 2737 0156 B7F85020 		ldrh	r2, [r7, #80]
 2738 015a B7F84830 		ldrh	r3, [r7, #72]
 2739 015e D31A     		subs	r3, r2, r3
 2740 0160 9BB2     		uxth	r3, r3
 2741 0162 3B83     		strh	r3, [r7, #24]	@ movhi
 444:gfx.c         ****             int32_t
 445:gfx.c         ****             sa   = 0,
 2742              		.loc 1 445 0
 2743 0164 0023     		movs	r3, #0
 2744 0166 7B63     		str	r3, [r7, #52]
 446:gfx.c         ****             sb   = 0;
 2745              		.loc 1 446 0
 2746 0168 0023     		movs	r3, #0
 2747 016a 3B63     		str	r3, [r7, #48]
 447:gfx.c         ****             
 448:gfx.c         ****             // For upper part of triangle, find scanline crossings for segments
 449:gfx.c         ****             // 0-1 and 0-2.  If y1=y2 (flat-bottomed triangle), the scanline y1
 450:gfx.c         ****             // is included here (and second loop will be skipped, avoiding a /0
 451:gfx.c         ****             // error there), otherwise scanline y1 is skipped here and handled
 452:gfx.c         ****             // in the second loop...which also avoids a /0 error here if y0=y1
 453:gfx.c         ****             // (flat-topped triangle).
 454:gfx.c         ****             if(y1 == y2) last = y1;   // Include y1 scanline
 2748              		.loc 1 454 0
 2749 016c B7F94820 		ldrsh	r2, [r7, #72]
 2750 0170 B7F95030 		ldrsh	r3, [r7, #80]
 2751 0174 9A42     		cmp	r2, r3
 2752 0176 03D1     		bne	.L79
 2753              		.loc 1 454 0 is_stmt 0 discriminator 1
 2754 0178 B7F84830 		ldrh	r3, [r7, #72]	@ movhi
 2755 017c 3B87     		strh	r3, [r7, #56]	@ movhi
 2756 017e 04E0     		b	.L80
 2757              	.L79:
 455:gfx.c         ****             else         last = y1-1; // Skip it
 2758              		.loc 1 455 0 is_stmt 1
 2759 0180 B7F84830 		ldrh	r3, [r7, #72]
 2760 0184 013B     		subs	r3, r3, #1
 2761 0186 9BB2     		uxth	r3, r3
 2762 0188 3B87     		strh	r3, [r7, #56]	@ movhi
 2763              	.L80:
 456:gfx.c         ****             
 457:gfx.c         ****             for(y=y0; y<=last; y++) {
 2764              		.loc 1 457 0
 2765 018a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 2766 018c 7B87     		strh	r3, [r7, #58]	@ movhi
 2767 018e 41E0     		b	.L81
 2768              	.L83:
 458:gfx.c         ****                 a   = x0 + sa / dy01;
 2769              		.loc 1 458 0
 2770 0190 B7F92030 		ldrsh	r3, [r7, #32]
 2771 0194 7A6B     		ldr	r2, [r7, #52]
 2772 0196 92FBF3F3 		sdiv	r3, r2, r3
 2773 019a 9AB2     		uxth	r2, r3
 2774 019c 7B89     		ldrh	r3, [r7, #10]
 2775 019e 1344     		add	r3, r3, r2
 2776 01a0 9BB2     		uxth	r3, r3
 2777 01a2 FB87     		strh	r3, [r7, #62]	@ movhi
 459:gfx.c         ****                 b   = x0 + sb / dy02;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 58


 2778              		.loc 1 459 0
 2779 01a4 B7F91C30 		ldrsh	r3, [r7, #28]
 2780 01a8 3A6B     		ldr	r2, [r7, #48]
 2781 01aa 92FBF3F3 		sdiv	r3, r2, r3
 2782 01ae 9AB2     		uxth	r2, r3
 2783 01b0 7B89     		ldrh	r3, [r7, #10]
 2784 01b2 1344     		add	r3, r3, r2
 2785 01b4 9BB2     		uxth	r3, r3
 2786 01b6 BB87     		strh	r3, [r7, #60]	@ movhi
 460:gfx.c         ****                 sa += dx01;
 2787              		.loc 1 460 0
 2788 01b8 B7F92230 		ldrsh	r3, [r7, #34]
 2789 01bc 7A6B     		ldr	r2, [r7, #52]
 2790 01be 1344     		add	r3, r3, r2
 2791 01c0 7B63     		str	r3, [r7, #52]
 461:gfx.c         ****                 sb += dx02;
 2792              		.loc 1 461 0
 2793 01c2 B7F91E30 		ldrsh	r3, [r7, #30]
 2794 01c6 3A6B     		ldr	r2, [r7, #48]
 2795 01c8 1344     		add	r3, r3, r2
 2796 01ca 3B63     		str	r3, [r7, #48]
 462:gfx.c         ****                 /* longhand:
 463:gfx.c         ****                  a = x0 + (x1 - x0) * (y - y0) / (y1 - y0);
 464:gfx.c         ****                  b = x0 + (x2 - x0) * (y - y0) / (y2 - y0);
 465:gfx.c         ****                  */
 466:gfx.c         ****                 if(a > b) _swap_int16_t(a,b);
 2797              		.loc 1 466 0
 2798 01cc B7F93E20 		ldrsh	r2, [r7, #62]
 2799 01d0 B7F93C30 		ldrsh	r3, [r7, #60]
 2800 01d4 9A42     		cmp	r2, r3
 2801 01d6 05DD     		ble	.L82
 2802              	.LBB17:
 2803              		.loc 1 466 0 is_stmt 0 discriminator 1
 2804 01d8 FB8F     		ldrh	r3, [r7, #62]	@ movhi
 2805 01da FB82     		strh	r3, [r7, #22]	@ movhi
 2806 01dc BB8F     		ldrh	r3, [r7, #60]	@ movhi
 2807 01de FB87     		strh	r3, [r7, #62]	@ movhi
 2808 01e0 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2809 01e2 BB87     		strh	r3, [r7, #60]	@ movhi
 2810              	.L82:
 2811              	.LBE17:
 467:gfx.c         ****                 GFXwriteFastHLine(myGFX,a, y, b-a+1, color);
 2812              		.loc 1 467 0 is_stmt 1 discriminator 2
 2813 01e4 BA8F     		ldrh	r2, [r7, #60]
 2814 01e6 FB8F     		ldrh	r3, [r7, #62]
 2815 01e8 D31A     		subs	r3, r2, r3
 2816 01ea 9BB2     		uxth	r3, r3
 2817 01ec 0133     		adds	r3, r3, #1
 2818 01ee 9BB2     		uxth	r3, r3
 2819 01f0 18B2     		sxth	r0, r3
 2820 01f2 B7F93A20 		ldrsh	r2, [r7, #58]
 2821 01f6 B7F93E10 		ldrsh	r1, [r7, #62]
 2822 01fa B7F85430 		ldrh	r3, [r7, #84]
 2823 01fe 0093     		str	r3, [sp]
 2824 0200 0346     		mov	r3, r0
 2825 0202 F868     		ldr	r0, [r7, #12]
 2826 0204 FFF7FEFF 		bl	GFXwriteFastHLine
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 59


 457:gfx.c         ****                 a   = x0 + sa / dy01;
 2827              		.loc 1 457 0 discriminator 2
 2828 0208 B7F93A30 		ldrsh	r3, [r7, #58]
 2829 020c 9BB2     		uxth	r3, r3
 2830 020e 0133     		adds	r3, r3, #1
 2831 0210 9BB2     		uxth	r3, r3
 2832 0212 7B87     		strh	r3, [r7, #58]	@ movhi
 2833              	.L81:
 457:gfx.c         ****                 a   = x0 + sa / dy01;
 2834              		.loc 1 457 0 is_stmt 0 discriminator 1
 2835 0214 B7F93A20 		ldrsh	r2, [r7, #58]
 2836 0218 B7F93830 		ldrsh	r3, [r7, #56]
 2837 021c 9A42     		cmp	r2, r3
 2838 021e B7DD     		ble	.L83
 468:gfx.c         ****             }
 469:gfx.c         ****             
 470:gfx.c         ****             // For lower part of triangle, find scanline crossings for segments
 471:gfx.c         ****             // 0-2 and 1-2.  This loop is skipped if y1=y2.
 472:gfx.c         ****             sa = dx12 * (y - y1);
 2839              		.loc 1 472 0 is_stmt 1
 2840 0220 B7F91A30 		ldrsh	r3, [r7, #26]
 2841 0224 B7F93A10 		ldrsh	r1, [r7, #58]
 2842 0228 B7F94820 		ldrsh	r2, [r7, #72]
 2843 022c 8A1A     		subs	r2, r1, r2
 2844 022e 02FB03F3 		mul	r3, r2, r3
 2845 0232 7B63     		str	r3, [r7, #52]
 473:gfx.c         ****             sb = dx02 * (y - y0);
 2846              		.loc 1 473 0
 2847 0234 B7F91E30 		ldrsh	r3, [r7, #30]
 2848 0238 B7F93A10 		ldrsh	r1, [r7, #58]
 2849 023c B7F90820 		ldrsh	r2, [r7, #8]
 2850 0240 8A1A     		subs	r2, r1, r2
 2851 0242 02FB03F3 		mul	r3, r2, r3
 2852 0246 3B63     		str	r3, [r7, #48]
 474:gfx.c         ****             for(; y<=y2; y++) {
 2853              		.loc 1 474 0
 2854 0248 41E0     		b	.L84
 2855              	.L86:
 475:gfx.c         ****                 a   = x1 + sa / dy12;
 2856              		.loc 1 475 0
 2857 024a B7F91830 		ldrsh	r3, [r7, #24]
 2858 024e 7A6B     		ldr	r2, [r7, #52]
 2859 0250 92FBF3F3 		sdiv	r3, r2, r3
 2860 0254 9AB2     		uxth	r2, r3
 2861 0256 FB88     		ldrh	r3, [r7, #6]
 2862 0258 1344     		add	r3, r3, r2
 2863 025a 9BB2     		uxth	r3, r3
 2864 025c FB87     		strh	r3, [r7, #62]	@ movhi
 476:gfx.c         ****                 b   = x0 + sb / dy02;
 2865              		.loc 1 476 0
 2866 025e B7F91C30 		ldrsh	r3, [r7, #28]
 2867 0262 3A6B     		ldr	r2, [r7, #48]
 2868 0264 92FBF3F3 		sdiv	r3, r2, r3
 2869 0268 9AB2     		uxth	r2, r3
 2870 026a 7B89     		ldrh	r3, [r7, #10]
 2871 026c 1344     		add	r3, r3, r2
 2872 026e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 60


 2873 0270 BB87     		strh	r3, [r7, #60]	@ movhi
 477:gfx.c         ****                 sa += dx12;
 2874              		.loc 1 477 0
 2875 0272 B7F91A30 		ldrsh	r3, [r7, #26]
 2876 0276 7A6B     		ldr	r2, [r7, #52]
 2877 0278 1344     		add	r3, r3, r2
 2878 027a 7B63     		str	r3, [r7, #52]
 478:gfx.c         ****                 sb += dx02;
 2879              		.loc 1 478 0
 2880 027c B7F91E30 		ldrsh	r3, [r7, #30]
 2881 0280 3A6B     		ldr	r2, [r7, #48]
 2882 0282 1344     		add	r3, r3, r2
 2883 0284 3B63     		str	r3, [r7, #48]
 479:gfx.c         ****                 /* longhand:
 480:gfx.c         ****                  a = x1 + (x2 - x1) * (y - y1) / (y2 - y1);
 481:gfx.c         ****                  b = x0 + (x2 - x0) * (y - y0) / (y2 - y0);
 482:gfx.c         ****                  */
 483:gfx.c         ****                 if(a > b) _swap_int16_t(a,b);
 2884              		.loc 1 483 0
 2885 0286 B7F93E20 		ldrsh	r2, [r7, #62]
 2886 028a B7F93C30 		ldrsh	r3, [r7, #60]
 2887 028e 9A42     		cmp	r2, r3
 2888 0290 05DD     		ble	.L85
 2889              	.LBB18:
 2890              		.loc 1 483 0 is_stmt 0 discriminator 1
 2891 0292 FB8F     		ldrh	r3, [r7, #62]	@ movhi
 2892 0294 BB82     		strh	r3, [r7, #20]	@ movhi
 2893 0296 BB8F     		ldrh	r3, [r7, #60]	@ movhi
 2894 0298 FB87     		strh	r3, [r7, #62]	@ movhi
 2895 029a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2896 029c BB87     		strh	r3, [r7, #60]	@ movhi
 2897              	.L85:
 2898              	.LBE18:
 484:gfx.c         ****                 GFXwriteFastHLine(myGFX, a, y, b-a+1, color);
 2899              		.loc 1 484 0 is_stmt 1
 2900 029e BA8F     		ldrh	r2, [r7, #60]
 2901 02a0 FB8F     		ldrh	r3, [r7, #62]
 2902 02a2 D31A     		subs	r3, r2, r3
 2903 02a4 9BB2     		uxth	r3, r3
 2904 02a6 0133     		adds	r3, r3, #1
 2905 02a8 9BB2     		uxth	r3, r3
 2906 02aa 18B2     		sxth	r0, r3
 2907 02ac B7F93A20 		ldrsh	r2, [r7, #58]
 2908 02b0 B7F93E10 		ldrsh	r1, [r7, #62]
 2909 02b4 B7F85430 		ldrh	r3, [r7, #84]
 2910 02b8 0093     		str	r3, [sp]
 2911 02ba 0346     		mov	r3, r0
 2912 02bc F868     		ldr	r0, [r7, #12]
 2913 02be FFF7FEFF 		bl	GFXwriteFastHLine
 474:gfx.c         ****                 a   = x1 + sa / dy12;
 2914              		.loc 1 474 0
 2915 02c2 B7F93A30 		ldrsh	r3, [r7, #58]
 2916 02c6 9BB2     		uxth	r3, r3
 2917 02c8 0133     		adds	r3, r3, #1
 2918 02ca 9BB2     		uxth	r3, r3
 2919 02cc 7B87     		strh	r3, [r7, #58]	@ movhi
 2920              	.L84:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 61


 474:gfx.c         ****                 a   = x1 + sa / dy12;
 2921              		.loc 1 474 0 is_stmt 0 discriminator 1
 2922 02ce B7F93A20 		ldrsh	r2, [r7, #58]
 2923 02d2 B7F95030 		ldrsh	r3, [r7, #80]
 2924 02d6 9A42     		cmp	r2, r3
 2925 02d8 B7DD     		ble	.L86
 2926              	.L69:
 485:gfx.c         ****             }
 486:gfx.c         ****             
 487:gfx.c         ****         }
 2927              		.loc 1 487 0 is_stmt 1
 2928 02da 4037     		adds	r7, r7, #64
 2929              		.cfi_def_cfa_offset 8
 2930 02dc BD46     		mov	sp, r7
 2931              		.cfi_def_cfa_register 13
 2932              		@ sp needed
 2933 02de 80BD     		pop	{r7, pc}
 2934              		.cfi_endproc
 2935              	.LFE86:
 2936              		.size	GFXfillTriangle, .-GFXfillTriangle
 2937              		.section	.text.GFXdrawBitmap,"ax",%progbits
 2938              		.align	2
 2939              		.global	GFXdrawBitmap
 2940              		.thumb
 2941              		.thumb_func
 2942              		.type	GFXdrawBitmap, %function
 2943              	GFXdrawBitmap:
 2944              	.LFB87:
 488:gfx.c         ****         
 489:gfx.c         ****         // BITMAP / XBITMAP / GRAYSCALE / RGB BITMAP FUNCTIONS ---------------------
 490:gfx.c         ****         
 491:gfx.c         ****         
 492:gfx.c         ****         
 493:gfx.c         ****         // Draw a RAM-resident 1-bit image at the specified (x,y) position,
 494:gfx.c         ****         // using the specified foreground (for set bits) and background (unset
 495:gfx.c         ****         // bits) colors.
 496:gfx.c         ****         void GFXdrawBitmap(GFX* myGFX, int16_t x, int16_t y,
 497:gfx.c         ****                            uint8_t *bitmap, int16_t w, int16_t h, uint16_t color, uint16_t bg) {
 2945              		.loc 1 497 0
 2946              		.cfi_startproc
 2947              		@ args = 16, pretend = 0, frame = 24
 2948              		@ frame_needed = 1, uses_anonymous_args = 0
 2949 0000 80B5     		push	{r7, lr}
 2950              		.cfi_def_cfa_offset 8
 2951              		.cfi_offset 7, -8
 2952              		.cfi_offset 14, -4
 2953 0002 86B0     		sub	sp, sp, #24
 2954              		.cfi_def_cfa_offset 32
 2955 0004 00AF     		add	r7, sp, #0
 2956              		.cfi_def_cfa_register 7
 2957 0006 F860     		str	r0, [r7, #12]
 2958 0008 7B60     		str	r3, [r7, #4]
 2959 000a 0B46     		mov	r3, r1	@ movhi
 2960 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 2961 000e 1346     		mov	r3, r2	@ movhi
 2962 0010 3B81     		strh	r3, [r7, #8]	@ movhi
 498:gfx.c         ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 62


 499:gfx.c         **** // Getting a bit messy with these #ifndefs but startWrite() and endWrite()
 500:gfx.c         **** // don't seem to exist anywhere in the Vocodec code. Doesn't cause a build
 501:gfx.c         **** // error for the hardware version but does for JUCE version.
 502:gfx.c         **** #ifndef __cplusplus
 503:gfx.c         ****             int16_t byteWidth = (w + 7) / 8; // Bitmap scanline pad = whole byte
 2963              		.loc 1 503 0
 2964 0012 B7F92030 		ldrsh	r3, [r7, #32]
 2965 0016 0733     		adds	r3, r3, #7
 2966 0018 002B     		cmp	r3, #0
 2967 001a 00DA     		bge	.L88
 2968 001c 0733     		adds	r3, r3, #7
 2969              	.L88:
 2970 001e DB10     		asrs	r3, r3, #3
 2971 0020 3B82     		strh	r3, [r7, #16]	@ movhi
 504:gfx.c         ****             uint8_t byte = 0;
 2972              		.loc 1 504 0
 2973 0022 0023     		movs	r3, #0
 2974 0024 FB75     		strb	r3, [r7, #23]
 505:gfx.c         ****             startWrite();
 2975              		.loc 1 505 0
 2976 0026 FFF7FEFF 		bl	startWrite
 2977              	.LBB19:
 506:gfx.c         ****             for(int16_t j=0; j<h; j++, y++) {
 2978              		.loc 1 506 0
 2979 002a 0023     		movs	r3, #0
 2980 002c BB82     		strh	r3, [r7, #20]	@ movhi
 2981 002e 47E0     		b	.L89
 2982              	.L97:
 2983              	.LBB20:
 507:gfx.c         ****                 for(int16_t i=0; i<w; i++ ) {
 2984              		.loc 1 507 0
 2985 0030 0023     		movs	r3, #0
 2986 0032 7B82     		strh	r3, [r7, #18]	@ movhi
 2987 0034 32E0     		b	.L90
 2988              	.L96:
 508:gfx.c         ****                     if(i & 7) byte <<= 1;
 2989              		.loc 1 508 0
 2990 0036 7B8A     		ldrh	r3, [r7, #18]
 2991 0038 03F00703 		and	r3, r3, #7
 2992 003c 002B     		cmp	r3, #0
 2993 003e 03D0     		beq	.L91
 2994              		.loc 1 508 0 is_stmt 0 discriminator 1
 2995 0040 FB7D     		ldrb	r3, [r7, #23]
 2996 0042 5B00     		lsls	r3, r3, #1
 2997 0044 FB75     		strb	r3, [r7, #23]
 2998 0046 12E0     		b	.L92
 2999              	.L91:
 509:gfx.c         ****                     else      byte   = bitmap[j * byteWidth + i / 8];
 3000              		.loc 1 509 0 is_stmt 1
 3001 0048 B7F91430 		ldrsh	r3, [r7, #20]
 3002 004c B7F91020 		ldrsh	r2, [r7, #16]
 3003 0050 02FB03F2 		mul	r2, r2, r3
 3004 0054 B7F91230 		ldrsh	r3, [r7, #18]
 3005 0058 002B     		cmp	r3, #0
 3006 005a 00DA     		bge	.L93
 3007 005c 0733     		adds	r3, r3, #7
 3008              	.L93:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 63


 3009 005e DB10     		asrs	r3, r3, #3
 3010 0060 1BB2     		sxth	r3, r3
 3011 0062 1344     		add	r3, r3, r2
 3012 0064 1A46     		mov	r2, r3
 3013 0066 7B68     		ldr	r3, [r7, #4]
 3014 0068 1344     		add	r3, r3, r2
 3015 006a 1B78     		ldrb	r3, [r3]
 3016 006c FB75     		strb	r3, [r7, #23]
 3017              	.L92:
 510:gfx.c         ****                     GFXwritePixel(myGFX, x+i, y, (byte & 0x80) ? color : bg);
 3018              		.loc 1 510 0
 3019 006e 7A89     		ldrh	r2, [r7, #10]
 3020 0070 7B8A     		ldrh	r3, [r7, #18]
 3021 0072 1344     		add	r3, r3, r2
 3022 0074 9BB2     		uxth	r3, r3
 3023 0076 19B2     		sxth	r1, r3
 3024 0078 97F91730 		ldrsb	r3, [r7, #23]
 3025 007c 002B     		cmp	r3, #0
 3026 007e 01DA     		bge	.L94
 3027              		.loc 1 510 0 is_stmt 0 discriminator 1
 3028 0080 3B8D     		ldrh	r3, [r7, #40]
 3029 0082 00E0     		b	.L95
 3030              	.L94:
 3031              		.loc 1 510 0 discriminator 2
 3032 0084 BB8D     		ldrh	r3, [r7, #44]
 3033              	.L95:
 3034              		.loc 1 510 0 discriminator 4
 3035 0086 B7F90820 		ldrsh	r2, [r7, #8]
 3036 008a F868     		ldr	r0, [r7, #12]
 3037 008c FFF7FEFF 		bl	GFXwritePixel
 507:gfx.c         ****                     if(i & 7) byte <<= 1;
 3038              		.loc 1 507 0 is_stmt 1 discriminator 4
 3039 0090 B7F91230 		ldrsh	r3, [r7, #18]
 3040 0094 9BB2     		uxth	r3, r3
 3041 0096 0133     		adds	r3, r3, #1
 3042 0098 9BB2     		uxth	r3, r3
 3043 009a 7B82     		strh	r3, [r7, #18]	@ movhi
 3044              	.L90:
 507:gfx.c         ****                     if(i & 7) byte <<= 1;
 3045              		.loc 1 507 0 is_stmt 0 discriminator 2
 3046 009c B7F91220 		ldrsh	r2, [r7, #18]
 3047 00a0 B7F92030 		ldrsh	r3, [r7, #32]
 3048 00a4 9A42     		cmp	r2, r3
 3049 00a6 C6DB     		blt	.L96
 3050              	.LBE20:
 506:gfx.c         ****                 for(int16_t i=0; i<w; i++ ) {
 3051              		.loc 1 506 0 is_stmt 1 discriminator 2
 3052 00a8 B7F91430 		ldrsh	r3, [r7, #20]
 3053 00ac 9BB2     		uxth	r3, r3
 3054 00ae 0133     		adds	r3, r3, #1
 3055 00b0 9BB2     		uxth	r3, r3
 3056 00b2 BB82     		strh	r3, [r7, #20]	@ movhi
 3057 00b4 B7F90830 		ldrsh	r3, [r7, #8]
 3058 00b8 9BB2     		uxth	r3, r3
 3059 00ba 0133     		adds	r3, r3, #1
 3060 00bc 9BB2     		uxth	r3, r3
 3061 00be 3B81     		strh	r3, [r7, #8]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 64


 3062              	.L89:
 506:gfx.c         ****                 for(int16_t i=0; i<w; i++ ) {
 3063              		.loc 1 506 0 is_stmt 0 discriminator 1
 3064 00c0 B7F91420 		ldrsh	r2, [r7, #20]
 3065 00c4 B7F92430 		ldrsh	r3, [r7, #36]
 3066 00c8 9A42     		cmp	r2, r3
 3067 00ca B1DB     		blt	.L97
 3068              	.LBE19:
 511:gfx.c         ****                 }
 512:gfx.c         ****             }
 513:gfx.c         ****             endWrite();
 3069              		.loc 1 513 0 is_stmt 1
 3070 00cc FFF7FEFF 		bl	endWrite
 514:gfx.c         **** #endif
 515:gfx.c         ****         }
 3071              		.loc 1 515 0
 3072 00d0 00BF     		nop
 3073 00d2 1837     		adds	r7, r7, #24
 3074              		.cfi_def_cfa_offset 8
 3075 00d4 BD46     		mov	sp, r7
 3076              		.cfi_def_cfa_register 13
 3077              		@ sp needed
 3078 00d6 80BD     		pop	{r7, pc}
 3079              		.cfi_endproc
 3080              	.LFE87:
 3081              		.size	GFXdrawBitmap, .-GFXdrawBitmap
 3082              		.section	.text.GFXdrawChar,"ax",%progbits
 3083              		.align	2
 3084              		.global	GFXdrawChar
 3085              		.thumb
 3086              		.thumb_func
 3087              		.type	GFXdrawChar, %function
 3088              	GFXdrawChar:
 3089              	.LFB88:
 516:gfx.c         ****         
 517:gfx.c         ****         
 518:gfx.c         ****         
 519:gfx.c         ****         // TEXT- AND CHARACTER-HANDLING FUNCTIONS ----------------------------------
 520:gfx.c         ****         
 521:gfx.c         ****         // Draw a character
 522:gfx.c         ****         void GFXdrawChar(GFX* myGFX, int16_t x, int16_t y, unsigned char c,
 523:gfx.c         ****                          uint16_t color, uint16_t bg, uint8_t size) {
 3090              		.loc 1 523 0
 3091              		.cfi_startproc
 3092              		@ args = 12, pretend = 0, frame = 48
 3093              		@ frame_needed = 1, uses_anonymous_args = 0
 3094 0000 90B5     		push	{r4, r7, lr}
 3095              		.cfi_def_cfa_offset 12
 3096              		.cfi_offset 4, -12
 3097              		.cfi_offset 7, -8
 3098              		.cfi_offset 14, -4
 3099 0002 8FB0     		sub	sp, sp, #60
 3100              		.cfi_def_cfa_offset 72
 3101 0004 02AF     		add	r7, sp, #8
 3102              		.cfi_def_cfa 7, 64
 3103 0006 F860     		str	r0, [r7, #12]
 3104 0008 0846     		mov	r0, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 65


 3105 000a 1146     		mov	r1, r2
 3106 000c 1A46     		mov	r2, r3
 3107 000e 0346     		mov	r3, r0	@ movhi
 3108 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 3109 0012 0B46     		mov	r3, r1	@ movhi
 3110 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 3111 0016 1346     		mov	r3, r2
 3112 0018 FB71     		strb	r3, [r7, #7]
 524:gfx.c         ****             
 525:gfx.c         ****             if(!myGFX->gfxFont) { // 'Classic' built-in font
 3113              		.loc 1 525 0
 3114 001a FB68     		ldr	r3, [r7, #12]
 3115 001c 9B69     		ldr	r3, [r3, #24]
 3116 001e 002B     		cmp	r3, #0
 3117 0020 40F02E81 		bne	.L99
 526:gfx.c         ****                 
 527:gfx.c         ****                 if((x >= myGFX->_width)            || // Clip right
 3118              		.loc 1 527 0
 3119 0024 B7F90A30 		ldrsh	r3, [r7, #10]
 3120 0028 FA68     		ldr	r2, [r7, #12]
 3121 002a 9288     		ldrh	r2, [r2, #4]
 3122 002c 9342     		cmp	r3, r2
 3123 002e 80F2E981 		bge	.L123
 528:gfx.c         ****                    (y >= myGFX->_height)           || // Clip bottom
 3124              		.loc 1 528 0 discriminator 1
 3125 0032 B7F90830 		ldrsh	r3, [r7, #8]
 3126 0036 FA68     		ldr	r2, [r7, #12]
 3127 0038 D288     		ldrh	r2, [r2, #6]
 527:gfx.c         ****                    (y >= myGFX->_height)           || // Clip bottom
 3128              		.loc 1 527 0 discriminator 1
 3129 003a 9342     		cmp	r3, r2
 3130 003c 80F2E281 		bge	.L123
 529:gfx.c         ****                    ((x + 6 * size - 1) < 0) || // Clip left
 3131              		.loc 1 529 0
 3132 0040 B7F90A10 		ldrsh	r1, [r7, #10]
 3133 0044 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3134 0048 1346     		mov	r3, r2
 3135 004a 5B00     		lsls	r3, r3, #1
 3136 004c 1344     		add	r3, r3, r2
 3137 004e 5B00     		lsls	r3, r3, #1
 3138 0050 0B44     		add	r3, r3, r1
 3139 0052 013B     		subs	r3, r3, #1
 528:gfx.c         ****                    (y >= myGFX->_height)           || // Clip bottom
 3140              		.loc 1 528 0
 3141 0054 002B     		cmp	r3, #0
 3142 0056 C0F2D581 		blt	.L123
 530:gfx.c         ****                    ((y + 8 * size - 1) < 0))   // Clip top
 3143              		.loc 1 530 0
 3144 005a B7F90820 		ldrsh	r2, [r7, #8]
 3145 005e 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3146 0062 DB00     		lsls	r3, r3, #3
 3147 0064 1344     		add	r3, r3, r2
 3148 0066 013B     		subs	r3, r3, #1
 529:gfx.c         ****                    ((x + 6 * size - 1) < 0) || // Clip left
 3149              		.loc 1 529 0
 3150 0068 002B     		cmp	r3, #0
 3151 006a C0F2CB81 		blt	.L123
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 66


 531:gfx.c         ****                     return;
 532:gfx.c         ****                 
 533:gfx.c         ****                 if(!myGFX->_cp437 && (c >= 176)) c++; // Handle 'classic' charset behavior
 3152              		.loc 1 533 0
 3153 006e FB68     		ldr	r3, [r7, #12]
 3154 0070 DB8A     		ldrh	r3, [r3, #22]
 3155 0072 002B     		cmp	r3, #0
 3156 0074 05D1     		bne	.L103
 3157              		.loc 1 533 0 is_stmt 0 discriminator 1
 3158 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3159 0078 AF2B     		cmp	r3, #175
 3160 007a 02D9     		bls	.L103
 3161              		.loc 1 533 0 discriminator 2
 3162 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3163 007e 0133     		adds	r3, r3, #1
 3164 0080 FB71     		strb	r3, [r7, #7]
 3165              	.L103:
 3166              	.LBB21:
 534:gfx.c         ****                 
 535:gfx.c         ****                 //startWrite();
 536:gfx.c         ****                 for(int8_t i=0; i<5; i++ ) { // Char bitmap = 5 columns
 3167              		.loc 1 536 0 is_stmt 1
 3168 0082 0023     		movs	r3, #0
 3169 0084 87F82F30 		strb	r3, [r7, #47]
 3170 0088 BCE0     		b	.L104
 3171              	.L112:
 3172              	.LBB22:
 537:gfx.c         ****                     uint8_t line = pgm_read_byte(&myGFX->gfxFont[c * 5 + i]);
 3173              		.loc 1 537 0
 3174 008a FB68     		ldr	r3, [r7, #12]
 3175 008c 9969     		ldr	r1, [r3, #24]
 3176 008e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3177 0090 1346     		mov	r3, r2
 3178 0092 9B00     		lsls	r3, r3, #2
 3179 0094 1A44     		add	r2, r2, r3
 3180 0096 97F92F30 		ldrsb	r3, [r7, #47]
 3181 009a 1344     		add	r3, r3, r2
 3182 009c 1A46     		mov	r2, r3
 3183 009e 1346     		mov	r3, r2
 3184 00a0 5B00     		lsls	r3, r3, #1
 3185 00a2 1344     		add	r3, r3, r2
 3186 00a4 9B00     		lsls	r3, r3, #2
 3187 00a6 0B44     		add	r3, r3, r1
 3188 00a8 1B78     		ldrb	r3, [r3]
 3189 00aa 87F82E30 		strb	r3, [r7, #46]
 3190              	.LBB23:
 538:gfx.c         ****                     for(int8_t j=0; j<8; j++, line >>= 1) {
 3191              		.loc 1 538 0
 3192 00ae 0023     		movs	r3, #0
 3193 00b0 87F82D30 		strb	r3, [r7, #45]
 3194 00b4 9AE0     		b	.L105
 3195              	.L111:
 539:gfx.c         ****                         if(line & 1) {
 3196              		.loc 1 539 0
 3197 00b6 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 3198 00ba 03F00103 		and	r3, r3, #1
 3199 00be 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 67


 3200 00c0 41D0     		beq	.L106
 540:gfx.c         ****                             if(size == 1)
 3201              		.loc 1 540 0
 3202 00c2 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3203 00c6 012B     		cmp	r3, #1
 3204 00c8 13D1     		bne	.L107
 541:gfx.c         ****                                 GFXwritePixel(myGFX,x+i, y+j, color);
 3205              		.loc 1 541 0
 3206 00ca 97F92F30 		ldrsb	r3, [r7, #47]
 3207 00ce 9AB2     		uxth	r2, r3
 3208 00d0 7B89     		ldrh	r3, [r7, #10]
 3209 00d2 1344     		add	r3, r3, r2
 3210 00d4 9BB2     		uxth	r3, r3
 3211 00d6 19B2     		sxth	r1, r3
 3212 00d8 97F92D30 		ldrsb	r3, [r7, #45]
 3213 00dc 9AB2     		uxth	r2, r3
 3214 00de 3B89     		ldrh	r3, [r7, #8]
 3215 00e0 1344     		add	r3, r3, r2
 3216 00e2 9BB2     		uxth	r3, r3
 3217 00e4 1AB2     		sxth	r2, r3
 3218 00e6 B7F84030 		ldrh	r3, [r7, #64]
 3219 00ea F868     		ldr	r0, [r7, #12]
 3220 00ec FFF7FEFF 		bl	GFXwritePixel
 3221 00f0 70E0     		b	.L109
 3222              	.L107:
 542:gfx.c         ****                             else
 543:gfx.c         ****                                 GFXwriteFillRect(myGFX,x+i*size, y+j*size, size, size, color);
 3223              		.loc 1 543 0
 3224 00f2 97F92F30 		ldrsb	r3, [r7, #47]
 3225 00f6 9BB2     		uxth	r3, r3
 3226 00f8 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3227 00fc 92B2     		uxth	r2, r2
 3228 00fe 02FB03F3 		mul	r3, r2, r3
 3229 0102 9AB2     		uxth	r2, r3
 3230 0104 7B89     		ldrh	r3, [r7, #10]
 3231 0106 1344     		add	r3, r3, r2
 3232 0108 9BB2     		uxth	r3, r3
 3233 010a 19B2     		sxth	r1, r3
 3234 010c 97F92D30 		ldrsb	r3, [r7, #45]
 3235 0110 9BB2     		uxth	r3, r3
 3236 0112 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3237 0116 92B2     		uxth	r2, r2
 3238 0118 02FB03F3 		mul	r3, r2, r3
 3239 011c 9AB2     		uxth	r2, r3
 3240 011e 3B89     		ldrh	r3, [r7, #8]
 3241 0120 1344     		add	r3, r3, r2
 3242 0122 9BB2     		uxth	r3, r3
 3243 0124 18B2     		sxth	r0, r3
 3244 0126 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3245 012a 1CB2     		sxth	r4, r3
 3246 012c 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3247 0130 1BB2     		sxth	r3, r3
 3248 0132 B7F84020 		ldrh	r2, [r7, #64]
 3249 0136 0192     		str	r2, [sp, #4]
 3250 0138 0093     		str	r3, [sp]
 3251 013a 2346     		mov	r3, r4
 3252 013c 0246     		mov	r2, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 68


 3253 013e F868     		ldr	r0, [r7, #12]
 3254 0140 FFF7FEFF 		bl	GFXwriteFillRect
 3255 0144 46E0     		b	.L109
 3256              	.L106:
 544:gfx.c         ****                         } else if(bg != color) {
 3257              		.loc 1 544 0
 3258 0146 B7F84420 		ldrh	r2, [r7, #68]
 3259 014a B7F84030 		ldrh	r3, [r7, #64]
 3260 014e 9A42     		cmp	r2, r3
 3261 0150 40D0     		beq	.L109
 545:gfx.c         ****                             if(size == 1)
 3262              		.loc 1 545 0
 3263 0152 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3264 0156 012B     		cmp	r3, #1
 3265 0158 13D1     		bne	.L110
 546:gfx.c         ****                                 GFXwritePixel(myGFX,x+i, y+j, bg);
 3266              		.loc 1 546 0
 3267 015a 97F92F30 		ldrsb	r3, [r7, #47]
 3268 015e 9AB2     		uxth	r2, r3
 3269 0160 7B89     		ldrh	r3, [r7, #10]
 3270 0162 1344     		add	r3, r3, r2
 3271 0164 9BB2     		uxth	r3, r3
 3272 0166 19B2     		sxth	r1, r3
 3273 0168 97F92D30 		ldrsb	r3, [r7, #45]
 3274 016c 9AB2     		uxth	r2, r3
 3275 016e 3B89     		ldrh	r3, [r7, #8]
 3276 0170 1344     		add	r3, r3, r2
 3277 0172 9BB2     		uxth	r3, r3
 3278 0174 1AB2     		sxth	r2, r3
 3279 0176 B7F84430 		ldrh	r3, [r7, #68]
 3280 017a F868     		ldr	r0, [r7, #12]
 3281 017c FFF7FEFF 		bl	GFXwritePixel
 3282 0180 28E0     		b	.L109
 3283              	.L110:
 547:gfx.c         ****                             else
 548:gfx.c         ****                                 GFXwriteFillRect(myGFX,x+i*size, y+j*size, size, size, bg);
 3284              		.loc 1 548 0
 3285 0182 97F92F30 		ldrsb	r3, [r7, #47]
 3286 0186 9BB2     		uxth	r3, r3
 3287 0188 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3288 018c 92B2     		uxth	r2, r2
 3289 018e 02FB03F3 		mul	r3, r2, r3
 3290 0192 9AB2     		uxth	r2, r3
 3291 0194 7B89     		ldrh	r3, [r7, #10]
 3292 0196 1344     		add	r3, r3, r2
 3293 0198 9BB2     		uxth	r3, r3
 3294 019a 19B2     		sxth	r1, r3
 3295 019c 97F92D30 		ldrsb	r3, [r7, #45]
 3296 01a0 9BB2     		uxth	r3, r3
 3297 01a2 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3298 01a6 92B2     		uxth	r2, r2
 3299 01a8 02FB03F3 		mul	r3, r2, r3
 3300 01ac 9AB2     		uxth	r2, r3
 3301 01ae 3B89     		ldrh	r3, [r7, #8]
 3302 01b0 1344     		add	r3, r3, r2
 3303 01b2 9BB2     		uxth	r3, r3
 3304 01b4 18B2     		sxth	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 69


 3305 01b6 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3306 01ba 1CB2     		sxth	r4, r3
 3307 01bc 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3308 01c0 1BB2     		sxth	r3, r3
 3309 01c2 B7F84420 		ldrh	r2, [r7, #68]
 3310 01c6 0192     		str	r2, [sp, #4]
 3311 01c8 0093     		str	r3, [sp]
 3312 01ca 2346     		mov	r3, r4
 3313 01cc 0246     		mov	r2, r0
 3314 01ce F868     		ldr	r0, [r7, #12]
 3315 01d0 FFF7FEFF 		bl	GFXwriteFillRect
 3316              	.L109:
 538:gfx.c         ****                         if(line & 1) {
 3317              		.loc 1 538 0 discriminator 2
 3318 01d4 97F92D30 		ldrsb	r3, [r7, #45]
 3319 01d8 DBB2     		uxtb	r3, r3
 3320 01da 0133     		adds	r3, r3, #1
 3321 01dc DBB2     		uxtb	r3, r3
 3322 01de 87F82D30 		strb	r3, [r7, #45]
 3323 01e2 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 3324 01e6 5B08     		lsrs	r3, r3, #1
 3325 01e8 87F82E30 		strb	r3, [r7, #46]
 3326              	.L105:
 538:gfx.c         ****                         if(line & 1) {
 3327              		.loc 1 538 0 is_stmt 0 discriminator 1
 3328 01ec 97F92D30 		ldrsb	r3, [r7, #45]
 3329 01f0 072B     		cmp	r3, #7
 3330 01f2 7FF760AF 		ble	.L111
 3331              	.LBE23:
 3332              	.LBE22:
 536:gfx.c         ****                     uint8_t line = pgm_read_byte(&myGFX->gfxFont[c * 5 + i]);
 3333              		.loc 1 536 0 is_stmt 1 discriminator 2
 3334 01f6 97F92F30 		ldrsb	r3, [r7, #47]
 3335 01fa DBB2     		uxtb	r3, r3
 3336 01fc 0133     		adds	r3, r3, #1
 3337 01fe DBB2     		uxtb	r3, r3
 3338 0200 87F82F30 		strb	r3, [r7, #47]
 3339              	.L104:
 536:gfx.c         ****                     uint8_t line = pgm_read_byte(&myGFX->gfxFont[c * 5 + i]);
 3340              		.loc 1 536 0 is_stmt 0 discriminator 1
 3341 0204 97F92F30 		ldrsb	r3, [r7, #47]
 3342 0208 042B     		cmp	r3, #4
 3343 020a 7FF73EAF 		ble	.L112
 3344              	.LBE21:
 549:gfx.c         ****                         }
 550:gfx.c         ****                     }
 551:gfx.c         ****                 }
 552:gfx.c         ****                 if(bg != color) { // If opaque, draw vertical line for last column
 3345              		.loc 1 552 0 is_stmt 1
 3346 020e B7F84420 		ldrh	r2, [r7, #68]
 3347 0212 B7F84030 		ldrh	r3, [r7, #64]
 3348 0216 9A42     		cmp	r2, r3
 3349 0218 00F0F580 		beq	.L98
 553:gfx.c         ****                     if(size == 1) GFXwriteFastVLine(myGFX,x+5, y, 8, bg);
 3350              		.loc 1 553 0
 3351 021c 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3352 0220 012B     		cmp	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 70


 3353 0222 0DD1     		bne	.L114
 3354              		.loc 1 553 0 is_stmt 0 discriminator 1
 3355 0224 7B89     		ldrh	r3, [r7, #10]
 3356 0226 0533     		adds	r3, r3, #5
 3357 0228 9BB2     		uxth	r3, r3
 3358 022a 19B2     		sxth	r1, r3
 3359 022c B7F90820 		ldrsh	r2, [r7, #8]
 3360 0230 B7F84430 		ldrh	r3, [r7, #68]
 3361 0234 0093     		str	r3, [sp]
 3362 0236 0823     		movs	r3, #8
 3363 0238 F868     		ldr	r0, [r7, #12]
 3364 023a FFF7FEFF 		bl	GFXwriteFastVLine
 3365 023e E2E0     		b	.L98
 3366              	.L114:
 554:gfx.c         ****                     else          GFXwriteFillRect(myGFX,x+5*size, y, size, 8*size, bg);
 3367              		.loc 1 554 0 is_stmt 1
 3368 0240 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3369 0244 9BB2     		uxth	r3, r3
 3370 0246 1A46     		mov	r2, r3	@ movhi
 3371 0248 9200     		lsls	r2, r2, #2
 3372 024a 1344     		add	r3, r3, r2
 3373 024c 9AB2     		uxth	r2, r3
 3374 024e 7B89     		ldrh	r3, [r7, #10]
 3375 0250 1344     		add	r3, r3, r2
 3376 0252 9BB2     		uxth	r3, r3
 3377 0254 19B2     		sxth	r1, r3
 3378 0256 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3379 025a 1CB2     		sxth	r4, r3
 3380 025c 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3381 0260 9BB2     		uxth	r3, r3
 3382 0262 DB00     		lsls	r3, r3, #3
 3383 0264 9BB2     		uxth	r3, r3
 3384 0266 1BB2     		sxth	r3, r3
 3385 0268 B7F90800 		ldrsh	r0, [r7, #8]
 3386 026c B7F84420 		ldrh	r2, [r7, #68]
 3387 0270 0192     		str	r2, [sp, #4]
 3388 0272 0093     		str	r3, [sp]
 3389 0274 2346     		mov	r3, r4
 3390 0276 0246     		mov	r2, r0
 3391 0278 F868     		ldr	r0, [r7, #12]
 3392 027a FFF7FEFF 		bl	GFXwriteFillRect
 3393 027e C2E0     		b	.L98
 3394              	.L99:
 3395              	.LBB24:
 555:gfx.c         ****                 }
 556:gfx.c         ****                 //endWrite();
 557:gfx.c         ****                 
 558:gfx.c         ****             } else { // Custom font
 559:gfx.c         ****                 
 560:gfx.c         ****                 // Character is assumed previously filtered by write() to eliminate
 561:gfx.c         ****                 // newlines, returns, non-printable characters, etc.  Calling
 562:gfx.c         ****                 // drawChar() directly with 'bad' characters of font may cause mayhem!
 563:gfx.c         ****                 
 564:gfx.c         ****                 c -= (uint8_t)pgm_read_byte(&myGFX->gfxFont->first);
 3396              		.loc 1 564 0
 3397 0280 FB68     		ldr	r3, [r7, #12]
 3398 0282 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 71


 3399 0284 0833     		adds	r3, r3, #8
 3400 0286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3401 0288 FA79     		ldrb	r2, [r7, #7]
 3402 028a D31A     		subs	r3, r2, r3
 3403 028c FB71     		strb	r3, [r7, #7]
 565:gfx.c         ****                 GFXglyph *glyph  = &(((GFXglyph *)pgm_read_pointer(&myGFX->gfxFont->glyph))[c]);
 3404              		.loc 1 565 0
 3405 028e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3406 0290 DA00     		lsls	r2, r3, #3
 3407 0292 FB68     		ldr	r3, [r7, #12]
 3408 0294 9B69     		ldr	r3, [r3, #24]
 3409 0296 0433     		adds	r3, r3, #4
 3410 0298 18CB     		ldmia	r3, {r3-r4}
 3411 029a 1344     		add	r3, r3, r2
 3412 029c FB61     		str	r3, [r7, #28]
 566:gfx.c         ****                 uint8_t  *bitmap = (uint8_t *)pgm_read_pointer(&myGFX->gfxFont->bitmap);
 3413              		.loc 1 566 0
 3414 029e FB68     		ldr	r3, [r7, #12]
 3415 02a0 9B69     		ldr	r3, [r3, #24]
 3416 02a2 18CB     		ldmia	r3, {r3-r4}
 3417 02a4 BB61     		str	r3, [r7, #24]
 567:gfx.c         ****                 
 568:gfx.c         ****                 uint16_t bo = pgm_read_word(&glyph->bitmapOffset);
 3418              		.loc 1 568 0
 3419 02a6 FB69     		ldr	r3, [r7, #28]
 3420 02a8 1B88     		ldrh	r3, [r3]	@ movhi
 3421 02aa 7B85     		strh	r3, [r7, #42]	@ movhi
 569:gfx.c         ****                 uint8_t  w  = pgm_read_byte(&glyph->width),
 3422              		.loc 1 569 0
 3423 02ac FB69     		ldr	r3, [r7, #28]
 3424 02ae 9B78     		ldrb	r3, [r3, #2]
 3425 02b0 FB75     		strb	r3, [r7, #23]
 570:gfx.c         ****                 h  = pgm_read_byte(&glyph->height);
 3426              		.loc 1 570 0
 3427 02b2 FB69     		ldr	r3, [r7, #28]
 3428 02b4 DB78     		ldrb	r3, [r3, #3]
 3429 02b6 BB75     		strb	r3, [r7, #22]
 571:gfx.c         ****                 int8_t   xo = pgm_read_byte(&glyph->xOffset),
 3430              		.loc 1 571 0
 3431 02b8 FB69     		ldr	r3, [r7, #28]
 3432 02ba 0533     		adds	r3, r3, #5
 3433 02bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3434 02be 7B75     		strb	r3, [r7, #21]
 572:gfx.c         ****                 yo = pgm_read_byte(&glyph->yOffset);
 3435              		.loc 1 572 0
 3436 02c0 FB69     		ldr	r3, [r7, #28]
 3437 02c2 0633     		adds	r3, r3, #6
 3438 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3439 02c6 3B75     		strb	r3, [r7, #20]
 573:gfx.c         ****                 uint8_t  xx, yy, bits = 0, bit = 0;
 3440              		.loc 1 573 0
 3441 02c8 0023     		movs	r3, #0
 3442 02ca 87F82730 		strb	r3, [r7, #39]
 3443 02ce 0023     		movs	r3, #0
 3444 02d0 87F82630 		strb	r3, [r7, #38]
 574:gfx.c         ****                 int16_t  xo16 = 0, yo16 = 0;
 3445              		.loc 1 574 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 72


 3446 02d4 0023     		movs	r3, #0
 3447 02d6 BB84     		strh	r3, [r7, #36]	@ movhi
 3448 02d8 0023     		movs	r3, #0
 3449 02da 7B84     		strh	r3, [r7, #34]	@ movhi
 575:gfx.c         ****                 
 576:gfx.c         ****                 if(size > 1) {
 3450              		.loc 1 576 0
 3451 02dc 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3452 02e0 012B     		cmp	r3, #1
 3453 02e2 05D9     		bls	.L115
 577:gfx.c         ****                     xo16 = xo;
 3454              		.loc 1 577 0
 3455 02e4 97F91530 		ldrsb	r3, [r7, #21]
 3456 02e8 BB84     		strh	r3, [r7, #36]	@ movhi
 578:gfx.c         ****                     yo16 = yo;
 3457              		.loc 1 578 0
 3458 02ea 97F91430 		ldrsb	r3, [r7, #20]
 3459 02ee 7B84     		strh	r3, [r7, #34]	@ movhi
 3460              	.L115:
 579:gfx.c         ****                 }
 580:gfx.c         ****                 
 581:gfx.c         ****                 // Todo: Add character clipping here
 582:gfx.c         ****                 
 583:gfx.c         ****                 // NOTE: THERE IS NO 'BACKGROUND' COLOR OPTION ON CUSTOM FONTS.
 584:gfx.c         ****                 // THIS IS ON PURPOSE AND BY DESIGN.  The background color feature
 585:gfx.c         ****                 // has typically been used with the 'classic' font to overwrite old
 586:gfx.c         ****                 // screen contents with new data.  This ONLY works because the
 587:gfx.c         ****                 // characters are a uniform size; it's not a sensible thing to do with
 588:gfx.c         ****                 // proportionally-spaced fonts with glyphs of varying sizes (and that
 589:gfx.c         ****                 // may overlap).  To replace previously-drawn text when using a custom
 590:gfx.c         ****                 // font, use the getTextBounds() function to determine the smallest
 591:gfx.c         ****                 // rectangle encompassing a string, erase the area with fillRect(),
 592:gfx.c         ****                 // then draw new text.  This WILL infortunately 'blink' the text, but
 593:gfx.c         ****                 // is unavoidable.  Drawing 'background' pixels will NOT fix this,
 594:gfx.c         ****                 // only creates a new set of problems.  Have an idea to work around
 595:gfx.c         ****                 // this (a canvas object type for MCUs that can afford the RAM and
 596:gfx.c         ****                 // displays supporting setAddrWindow() and pushColors()), but haven't
 597:gfx.c         ****                 // implemented this yet.
 598:gfx.c         ****                 
 599:gfx.c         ****                 //startWrite();
 600:gfx.c         ****                 for(yy=0; yy<h; yy++) {
 3461              		.loc 1 600 0
 3462 02f0 0023     		movs	r3, #0
 3463 02f2 87F82830 		strb	r3, [r7, #40]
 3464 02f6 7EE0     		b	.L116
 3465              	.L122:
 601:gfx.c         ****                     for(xx=0; xx<w; xx++) {
 3466              		.loc 1 601 0
 3467 02f8 0023     		movs	r3, #0
 3468 02fa 87F82930 		strb	r3, [r7, #41]
 3469 02fe 70E0     		b	.L117
 3470              	.L121:
 602:gfx.c         ****                         if(!(bit++ & 7)) {
 3471              		.loc 1 602 0
 3472 0300 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3473 0304 5A1C     		adds	r2, r3, #1
 3474 0306 87F82620 		strb	r2, [r7, #38]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 73


 3475 030a 03F00703 		and	r3, r3, #7
 3476 030e 002B     		cmp	r3, #0
 3477 0310 08D1     		bne	.L118
 603:gfx.c         ****                             bits = pgm_read_byte(&bitmap[bo++]);
 3478              		.loc 1 603 0
 3479 0312 7B8D     		ldrh	r3, [r7, #42]
 3480 0314 5A1C     		adds	r2, r3, #1
 3481 0316 7A85     		strh	r2, [r7, #42]	@ movhi
 3482 0318 1A46     		mov	r2, r3
 3483 031a BB69     		ldr	r3, [r7, #24]
 3484 031c 1344     		add	r3, r3, r2
 3485 031e 1B78     		ldrb	r3, [r3]
 3486 0320 87F82730 		strb	r3, [r7, #39]
 3487              	.L118:
 604:gfx.c         ****                         }
 605:gfx.c         ****                         if(bits & 0x80) {
 3488              		.loc 1 605 0
 3489 0324 97F92730 		ldrsb	r3, [r7, #39]
 3490 0328 002B     		cmp	r3, #0
 3491 032a 50DA     		bge	.L119
 606:gfx.c         ****                             if(size == 1) {
 3492              		.loc 1 606 0
 3493 032c 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3494 0330 012B     		cmp	r3, #1
 3495 0332 1DD1     		bne	.L120
 607:gfx.c         ****                                 GFXwritePixel(myGFX,x+xo+xx, y+yo+yy, color);
 3496              		.loc 1 607 0
 3497 0334 97F91530 		ldrsb	r3, [r7, #21]
 3498 0338 9AB2     		uxth	r2, r3
 3499 033a 7B89     		ldrh	r3, [r7, #10]
 3500 033c 1344     		add	r3, r3, r2
 3501 033e 9AB2     		uxth	r2, r3
 3502 0340 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 3503 0344 9BB2     		uxth	r3, r3
 3504 0346 1344     		add	r3, r3, r2
 3505 0348 9BB2     		uxth	r3, r3
 3506 034a 19B2     		sxth	r1, r3
 3507 034c 97F91430 		ldrsb	r3, [r7, #20]
 3508 0350 9AB2     		uxth	r2, r3
 3509 0352 3B89     		ldrh	r3, [r7, #8]
 3510 0354 1344     		add	r3, r3, r2
 3511 0356 9AB2     		uxth	r2, r3
 3512 0358 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 3513 035c 9BB2     		uxth	r3, r3
 3514 035e 1344     		add	r3, r3, r2
 3515 0360 9BB2     		uxth	r3, r3
 3516 0362 1AB2     		sxth	r2, r3
 3517 0364 B7F84030 		ldrh	r3, [r7, #64]
 3518 0368 F868     		ldr	r0, [r7, #12]
 3519 036a FFF7FEFF 		bl	GFXwritePixel
 3520 036e 2EE0     		b	.L119
 3521              	.L120:
 608:gfx.c         ****                             } else {
 609:gfx.c         ****                                 GFXwriteFillRect(myGFX,x+(xo16+xx)*size, y+(yo16+yy)*size,
 3522              		.loc 1 609 0
 3523 0370 B7F92420 		ldrsh	r2, [r7, #36]
 3524 0374 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 74


 3525 0378 1344     		add	r3, r3, r2
 3526 037a 9BB2     		uxth	r3, r3
 3527 037c 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3528 0380 92B2     		uxth	r2, r2
 3529 0382 02FB03F3 		mul	r3, r2, r3
 3530 0386 9AB2     		uxth	r2, r3
 3531 0388 7B89     		ldrh	r3, [r7, #10]
 3532 038a 1344     		add	r3, r3, r2
 3533 038c 9BB2     		uxth	r3, r3
 3534 038e 19B2     		sxth	r1, r3
 3535 0390 B7F92220 		ldrsh	r2, [r7, #34]
 3536 0394 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 3537 0398 1344     		add	r3, r3, r2
 3538 039a 9BB2     		uxth	r3, r3
 3539 039c 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 3540 03a0 92B2     		uxth	r2, r2
 3541 03a2 02FB03F3 		mul	r3, r2, r3
 3542 03a6 9AB2     		uxth	r2, r3
 3543 03a8 3B89     		ldrh	r3, [r7, #8]
 3544 03aa 1344     		add	r3, r3, r2
 3545 03ac 9BB2     		uxth	r3, r3
 3546 03ae 18B2     		sxth	r0, r3
 3547 03b0 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3548 03b4 1CB2     		sxth	r4, r3
 3549 03b6 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 3550 03ba 1BB2     		sxth	r3, r3
 3551 03bc B7F84020 		ldrh	r2, [r7, #64]
 3552 03c0 0192     		str	r2, [sp, #4]
 3553 03c2 0093     		str	r3, [sp]
 3554 03c4 2346     		mov	r3, r4
 3555 03c6 0246     		mov	r2, r0
 3556 03c8 F868     		ldr	r0, [r7, #12]
 3557 03ca FFF7FEFF 		bl	GFXwriteFillRect
 3558              	.L119:
 610:gfx.c         ****                                                  size, size, color);
 611:gfx.c         ****                             }
 612:gfx.c         ****                         }
 613:gfx.c         ****                         bits <<= 1;
 3559              		.loc 1 613 0 discriminator 2
 3560 03ce 97F82730 		ldrb	r3, [r7, #39]
 3561 03d2 5B00     		lsls	r3, r3, #1
 3562 03d4 87F82730 		strb	r3, [r7, #39]
 601:gfx.c         ****                         if(!(bit++ & 7)) {
 3563              		.loc 1 601 0 discriminator 2
 3564 03d8 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 3565 03dc 0133     		adds	r3, r3, #1
 3566 03de 87F82930 		strb	r3, [r7, #41]
 3567              	.L117:
 601:gfx.c         ****                         if(!(bit++ & 7)) {
 3568              		.loc 1 601 0 is_stmt 0 discriminator 1
 3569 03e2 97F82920 		ldrb	r2, [r7, #41]	@ zero_extendqisi2
 3570 03e6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3571 03e8 9A42     		cmp	r2, r3
 3572 03ea 89D3     		bcc	.L121
 600:gfx.c         ****                     for(xx=0; xx<w; xx++) {
 3573              		.loc 1 600 0 is_stmt 1 discriminator 2
 3574 03ec 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 75


 3575 03f0 0133     		adds	r3, r3, #1
 3576 03f2 87F82830 		strb	r3, [r7, #40]
 3577              	.L116:
 600:gfx.c         ****                     for(xx=0; xx<w; xx++) {
 3578              		.loc 1 600 0 is_stmt 0 discriminator 1
 3579 03f6 97F82820 		ldrb	r2, [r7, #40]	@ zero_extendqisi2
 3580 03fa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3581 03fc 9A42     		cmp	r2, r3
 3582 03fe FFF47BAF 		bcc	.L122
 3583 0402 00E0     		b	.L98
 3584              	.L123:
 3585              	.LBE24:
 531:gfx.c         ****                 
 3586              		.loc 1 531 0 is_stmt 1
 3587 0404 00BF     		nop
 3588              	.L98:
 614:gfx.c         ****                     }
 615:gfx.c         ****                 }
 616:gfx.c         ****                 //endWrite();
 617:gfx.c         ****                 
 618:gfx.c         ****             } // End classic vs custom font
 619:gfx.c         ****         }
 3589              		.loc 1 619 0
 3590 0406 3437     		adds	r7, r7, #52
 3591              		.cfi_def_cfa_offset 12
 3592 0408 BD46     		mov	sp, r7
 3593              		.cfi_def_cfa_register 13
 3594              		@ sp needed
 3595 040a 90BD     		pop	{r4, r7, pc}
 3596              		.cfi_endproc
 3597              	.LFE88:
 3598              		.size	GFXdrawChar, .-GFXdrawChar
 3599              		.section	.text.GFXcheckScrollWrap,"ax",%progbits
 3600              		.align	2
 3601              		.global	GFXcheckScrollWrap
 3602              		.thumb
 3603              		.thumb_func
 3604              		.type	GFXcheckScrollWrap, %function
 3605              	GFXcheckScrollWrap:
 3606              	.LFB89:
 620:gfx.c         ****         
 621:gfx.c         ****         
 622:gfx.c         ****         void GFXcheckScrollWrap(GFX* myGFX, int16_t fontWidth) {
 3607              		.loc 1 622 0
 3608              		.cfi_startproc
 3609              		@ args = 0, pretend = 0, frame = 16
 3610              		@ frame_needed = 1, uses_anonymous_args = 0
 3611 0000 80B5     		push	{r7, lr}
 3612              		.cfi_def_cfa_offset 8
 3613              		.cfi_offset 7, -8
 3614              		.cfi_offset 14, -4
 3615 0002 84B0     		sub	sp, sp, #16
 3616              		.cfi_def_cfa_offset 24
 3617 0004 00AF     		add	r7, sp, #0
 3618              		.cfi_def_cfa_register 7
 3619 0006 7860     		str	r0, [r7, #4]
 3620 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 76


 3621 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 623:gfx.c         ****             if(myGFX->wrap && ((myGFX->cursor_x + fontWidth) >= myGFX->_width)) { // Heading off ed
 3622              		.loc 1 623 0
 3623 000c 7B68     		ldr	r3, [r7, #4]
 3624 000e 9B8A     		ldrh	r3, [r3, #20]
 3625 0010 002B     		cmp	r3, #0
 3626 0012 19D0     		beq	.L125
 3627              		.loc 1 623 0 is_stmt 0 discriminator 1
 3628 0014 7B68     		ldr	r3, [r7, #4]
 3629 0016 9B89     		ldrh	r3, [r3, #12]
 3630 0018 1A46     		mov	r2, r3
 3631 001a B7F90230 		ldrsh	r3, [r7, #2]
 3632 001e 1344     		add	r3, r3, r2
 3633 0020 7A68     		ldr	r2, [r7, #4]
 3634 0022 9288     		ldrh	r2, [r2, #4]
 3635 0024 9342     		cmp	r3, r2
 3636 0026 0FDB     		blt	.L125
 624:gfx.c         ****                 myGFX->cursor_x  = 0;            // Reset x to zero
 3637              		.loc 1 624 0 is_stmt 1
 3638 0028 7B68     		ldr	r3, [r7, #4]
 3639 002a 0022     		movs	r2, #0
 3640 002c 9A81     		strh	r2, [r3, #12]	@ movhi
 625:gfx.c         ****                 myGFX->cursor_y += myGFX->fontHeight * myGFX->textsize; // Advance y one line
 3641              		.loc 1 625 0
 3642 002e 7B68     		ldr	r3, [r7, #4]
 3643 0030 5A89     		ldrh	r2, [r3, #10]
 3644 0032 7B68     		ldr	r3, [r7, #4]
 3645 0034 9B8B     		ldrh	r3, [r3, #28]
 3646 0036 7968     		ldr	r1, [r7, #4]
 3647 0038 C989     		ldrh	r1, [r1, #14]
 3648 003a 01FB03F3 		mul	r3, r1, r3
 3649 003e 9BB2     		uxth	r3, r3
 3650 0040 1344     		add	r3, r3, r2
 3651 0042 9AB2     		uxth	r2, r3
 3652 0044 7B68     		ldr	r3, [r7, #4]
 3653 0046 5A81     		strh	r2, [r3, #10]	@ movhi
 3654              	.L125:
 626:gfx.c         ****             }
 627:gfx.c         ****             
 628:gfx.c         ****             if (myGFX->autoscroll) {
 3655              		.loc 1 628 0
 3656 0048 7B68     		ldr	r3, [r7, #4]
 3657 004a 1B8C     		ldrh	r3, [r3, #32]
 3658 004c 002B     		cmp	r3, #0
 3659 004e 4FD0     		beq	.L131
 3660              	.LBB25:
 629:gfx.c         ****                 int16_t fontOffset;
 630:gfx.c         ****                 
 631:gfx.c         ****                 if(!myGFX->gfxFont) { // 'Classic' built-in font
 3661              		.loc 1 631 0
 3662 0050 7B68     		ldr	r3, [r7, #4]
 3663 0052 9B69     		ldr	r3, [r3, #24]
 3664 0054 002B     		cmp	r3, #0
 3665 0056 0AD1     		bne	.L127
 632:gfx.c         ****                     fontOffset = (myGFX->fontHeight * myGFX->textsize)-1; // cursor defines upper l
 3666              		.loc 1 632 0
 3667 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 77


 3668 005a 9B8B     		ldrh	r3, [r3, #28]
 3669 005c 7A68     		ldr	r2, [r7, #4]
 3670 005e D289     		ldrh	r2, [r2, #14]
 3671 0060 02FB03F3 		mul	r3, r2, r3
 3672 0064 9BB2     		uxth	r3, r3
 3673 0066 013B     		subs	r3, r3, #1
 3674 0068 9BB2     		uxth	r3, r3
 3675 006a FB81     		strh	r3, [r7, #14]	@ movhi
 3676 006c 01E0     		b	.L128
 3677              	.L127:
 633:gfx.c         ****                 } else {       // Custom font
 634:gfx.c         ****                     fontOffset = 0;                         // cursor defines lower left corner of 
 3678              		.loc 1 634 0
 3679 006e 0023     		movs	r3, #0
 3680 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 3681              	.L128:
 635:gfx.c         ****                 }
 636:gfx.c         ****                 
 637:gfx.c         ****                 // lower unified border of character
 638:gfx.c         ****                 // these does not apply to charachters like "g" oder "j" which will be cut off
 639:gfx.c         ****                 uint16_t cursor = myGFX->cursor_y + fontOffset + myGFX->fontDesc * myGFX->textsize;
 3682              		.loc 1 639 0
 3683 0072 7B68     		ldr	r3, [r7, #4]
 3684 0074 5A89     		ldrh	r2, [r3, #10]
 3685 0076 FB89     		ldrh	r3, [r7, #14]
 3686 0078 1344     		add	r3, r3, r2
 3687 007a 9AB2     		uxth	r2, r3
 3688 007c 7B68     		ldr	r3, [r7, #4]
 3689 007e DB8B     		ldrh	r3, [r3, #30]
 3690 0080 7968     		ldr	r1, [r7, #4]
 3691 0082 C989     		ldrh	r1, [r1, #14]
 3692 0084 01FB03F3 		mul	r3, r1, r3
 3693 0088 9BB2     		uxth	r3, r3
 3694 008a 1344     		add	r3, r3, r2
 3695 008c BB81     		strh	r3, [r7, #12]	@ movhi
 640:gfx.c         ****                 
 641:gfx.c         ****                 if (cursor >= myGFX->_height) {
 3696              		.loc 1 641 0
 3697 008e 7B68     		ldr	r3, [r7, #4]
 3698 0090 DB88     		ldrh	r3, [r3, #6]
 3699 0092 BA89     		ldrh	r2, [r7, #12]
 3700 0094 9A42     		cmp	r2, r3
 3701 0096 2BD3     		bcc	.L131
 642:gfx.c         ****                     GFXscrollUp(myGFX, cursor - myGFX->_height+1, myGFX->textcolor != myGFX->textbg
 3702              		.loc 1 642 0
 3703 0098 BB89     		ldrh	r3, [r7, #12]	@ movhi
 3704 009a DAB2     		uxtb	r2, r3
 3705 009c 7B68     		ldr	r3, [r7, #4]
 3706 009e DB88     		ldrh	r3, [r3, #6]
 3707 00a0 DBB2     		uxtb	r3, r3
 3708 00a2 D31A     		subs	r3, r2, r3
 3709 00a4 DBB2     		uxtb	r3, r3
 3710 00a6 0133     		adds	r3, r3, #1
 3711 00a8 D9B2     		uxtb	r1, r3
 3712 00aa 7B68     		ldr	r3, [r7, #4]
 3713 00ac 1A8A     		ldrh	r2, [r3, #16]
 3714 00ae 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 78


 3715 00b0 5B8A     		ldrh	r3, [r3, #18]
 3716 00b2 9A42     		cmp	r2, r3
 3717 00b4 02D0     		beq	.L129
 3718              		.loc 1 642 0 is_stmt 0 discriminator 1
 3719 00b6 7B68     		ldr	r3, [r7, #4]
 3720 00b8 5B8A     		ldrh	r3, [r3, #18]
 3721 00ba 00E0     		b	.L130
 3722              	.L129:
 3723              		.loc 1 642 0 discriminator 2
 3724 00bc 0023     		movs	r3, #0
 3725              	.L130:
 3726              		.loc 1 642 0 discriminator 4
 3727 00be 1A46     		mov	r2, r3
 3728 00c0 7868     		ldr	r0, [r7, #4]
 3729 00c2 FFF7FEFF 		bl	GFXscrollUp
 643:gfx.c         ****                     
 644:gfx.c         ****                     myGFX->cursor_x  = 0;
 3730              		.loc 1 644 0 is_stmt 1 discriminator 4
 3731 00c6 7B68     		ldr	r3, [r7, #4]
 3732 00c8 0022     		movs	r2, #0
 3733 00ca 9A81     		strh	r2, [r3, #12]	@ movhi
 645:gfx.c         ****                     myGFX->cursor_y = myGFX->_height - fontOffset-1 - myGFX->fontDesc * myGFX->text
 3734              		.loc 1 645 0 discriminator 4
 3735 00cc 7B68     		ldr	r3, [r7, #4]
 3736 00ce DA88     		ldrh	r2, [r3, #6]
 3737 00d0 FB89     		ldrh	r3, [r7, #14]
 3738 00d2 D31A     		subs	r3, r2, r3
 3739 00d4 9AB2     		uxth	r2, r3
 3740 00d6 7B68     		ldr	r3, [r7, #4]
 3741 00d8 DB8B     		ldrh	r3, [r3, #30]
 3742 00da 7968     		ldr	r1, [r7, #4]
 3743 00dc C989     		ldrh	r1, [r1, #14]
 3744 00de 01FB03F3 		mul	r3, r1, r3
 3745 00e2 9BB2     		uxth	r3, r3
 3746 00e4 D31A     		subs	r3, r2, r3
 3747 00e6 9BB2     		uxth	r3, r3
 3748 00e8 013B     		subs	r3, r3, #1
 3749 00ea 9AB2     		uxth	r2, r3
 3750 00ec 7B68     		ldr	r3, [r7, #4]
 3751 00ee 5A81     		strh	r2, [r3, #10]	@ movhi
 3752              	.L131:
 3753              	.LBE25:
 646:gfx.c         ****                 }
 647:gfx.c         ****             }
 648:gfx.c         ****         }
 3754              		.loc 1 648 0
 3755 00f0 00BF     		nop
 3756 00f2 1037     		adds	r7, r7, #16
 3757              		.cfi_def_cfa_offset 8
 3758 00f4 BD46     		mov	sp, r7
 3759              		.cfi_def_cfa_register 13
 3760              		@ sp needed
 3761 00f6 80BD     		pop	{r7, pc}
 3762              		.cfi_endproc
 3763              	.LFE89:
 3764              		.size	GFXcheckScrollWrap, .-GFXcheckScrollWrap
 3765              		.section	.text.GFXwrite,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 79


 3766              		.align	2
 3767              		.global	GFXwrite
 3768              		.thumb
 3769              		.thumb_func
 3770              		.type	GFXwrite, %function
 3771              	GFXwrite:
 3772              	.LFB90:
 649:gfx.c         ****         
 650:gfx.c         ****         
 651:gfx.c         ****         void GFXwrite(GFX* myGFX, uint8_t c) {
 3773              		.loc 1 651 0
 3774              		.cfi_startproc
 3775              		@ args = 0, pretend = 0, frame = 24
 3776              		@ frame_needed = 1, uses_anonymous_args = 0
 3777 0000 B0B5     		push	{r4, r5, r7, lr}
 3778              		.cfi_def_cfa_offset 16
 3779              		.cfi_offset 4, -16
 3780              		.cfi_offset 5, -12
 3781              		.cfi_offset 7, -8
 3782              		.cfi_offset 14, -4
 3783 0002 8AB0     		sub	sp, sp, #40
 3784              		.cfi_def_cfa_offset 56
 3785 0004 04AF     		add	r7, sp, #16
 3786              		.cfi_def_cfa 7, 40
 3787 0006 7860     		str	r0, [r7, #4]
 3788 0008 0B46     		mov	r3, r1
 3789 000a FB70     		strb	r3, [r7, #3]
 652:gfx.c         ****             if(!myGFX->gfxFont) { // 'Classic' built-in font
 3790              		.loc 1 652 0
 3791 000c 7B68     		ldr	r3, [r7, #4]
 3792 000e 9B69     		ldr	r3, [r3, #24]
 3793 0010 002B     		cmp	r3, #0
 3794 0012 45D1     		bne	.L133
 653:gfx.c         ****                 if(c == '\n') {                        // Newline?
 3795              		.loc 1 653 0
 3796 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3797 0016 0A2B     		cmp	r3, #10
 3798 0018 10D1     		bne	.L134
 654:gfx.c         ****                     myGFX->cursor_y += myGFX->fontHeight * myGFX->textsize;
 3799              		.loc 1 654 0
 3800 001a 7B68     		ldr	r3, [r7, #4]
 3801 001c 5A89     		ldrh	r2, [r3, #10]
 3802 001e 7B68     		ldr	r3, [r7, #4]
 3803 0020 9B8B     		ldrh	r3, [r3, #28]
 3804 0022 7968     		ldr	r1, [r7, #4]
 3805 0024 C989     		ldrh	r1, [r1, #14]
 3806 0026 01FB03F3 		mul	r3, r1, r3
 3807 002a 9BB2     		uxth	r3, r3
 3808 002c 1344     		add	r3, r3, r2
 3809 002e 9AB2     		uxth	r2, r3
 3810 0030 7B68     		ldr	r3, [r7, #4]
 3811 0032 5A81     		strh	r2, [r3, #10]	@ movhi
 655:gfx.c         ****                     myGFX->cursor_x  = 0;                     // Reset x to zero,
 3812              		.loc 1 655 0
 3813 0034 7B68     		ldr	r3, [r7, #4]
 3814 0036 0022     		movs	r2, #0
 3815 0038 9A81     		strh	r2, [r3, #12]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 80


 656:gfx.c         ****                     //cursor_y += textsize * 8;          // advance y one line
 657:gfx.c         ****                 } else if(c != '\r') {                 // Ignore carriage returns
 658:gfx.c         ****                     // if(wrap && ((cursor_x + textsize * 6) > _width)) { // Off right?
 659:gfx.c         ****                     //     cursor_x  = 0;                 // Reset x to zero,
 660:gfx.c         ****                     //     cursor_y += textsize * 8;      // advance y one line
 661:gfx.c         ****                     // }
 662:gfx.c         ****                     GFXcheckScrollWrap(myGFX, myGFX->textsize * 6 - myGFX->textsize * 2);
 663:gfx.c         ****                     GFXdrawChar(myGFX, myGFX->cursor_x, myGFX->cursor_y, c, myGFX->textcolor, myGFX
 664:gfx.c         ****                     myGFX->cursor_x += myGFX->textsize * 6;          // Advance x one char
 665:gfx.c         ****                 }
 666:gfx.c         ****                 
 667:gfx.c         ****             } else { // Custom font
 668:gfx.c         ****                 
 669:gfx.c         ****                 if(c == '\n') {
 670:gfx.c         ****                     myGFX->cursor_x  = 0;
 671:gfx.c         ****                     myGFX->cursor_y += (int16_t)myGFX->textsize *
 672:gfx.c         ****                     (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvance);
 673:gfx.c         ****                 } else if(c != '\r') {
 674:gfx.c         ****                     uint8_t first = pgm_read_byte(&myGFX->gfxFont->first);
 675:gfx.c         ****                     if((c >= first) && (c <= (uint8_t)pgm_read_byte(&myGFX->gfxFont->last))) {
 676:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 677:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 678:gfx.c         ****                         uint8_t   w     = pgm_read_byte(&glyph->width),
 679:gfx.c         ****                         h     = pgm_read_byte(&glyph->height);
 680:gfx.c         ****                         if((w > 0) && (h > 0)) { // Is there an associated bitmap?
 681:gfx.c         ****                             int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
 682:gfx.c         ****                             GFXcheckScrollWrap(myGFX, myGFX->textsize * (xo + w));
 683:gfx.c         ****                             // if(wrap && ((cursor_x + textsize * (xo + w)) > _width)) {
 684:gfx.c         ****                             //     cursor_x  = 0;
 685:gfx.c         ****                             //     cursor_y += (int16_t)textsize *
 686:gfx.c         ****                             //       (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
 687:gfx.c         ****                             // }
 688:gfx.c         ****                             GFXdrawChar(myGFX, myGFX->cursor_x, myGFX->cursor_y, c, myGFX->textcolo
 689:gfx.c         ****                         }
 690:gfx.c         ****                         myGFX->cursor_x += (uint8_t)pgm_read_byte(&glyph->xAdvance) * (int16_t)myGF
 691:gfx.c         ****                     }
 692:gfx.c         ****                 }
 693:gfx.c         ****                 
 694:gfx.c         ****             }
 695:gfx.c         ****         }
 3816              		.loc 1 695 0
 3817 003a AAE0     		b	.L139
 3818              	.L134:
 657:gfx.c         ****                     // if(wrap && ((cursor_x + textsize * 6) > _width)) { // Off right?
 3819              		.loc 1 657 0
 3820 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3821 003e 0D2B     		cmp	r3, #13
 3822 0040 00F0A780 		beq	.L139
 662:gfx.c         ****                     GFXdrawChar(myGFX, myGFX->cursor_x, myGFX->cursor_y, c, myGFX->textcolor, myGFX
 3823              		.loc 1 662 0
 3824 0044 7B68     		ldr	r3, [r7, #4]
 3825 0046 DB89     		ldrh	r3, [r3, #14]
 3826 0048 9B00     		lsls	r3, r3, #2
 3827 004a 9BB2     		uxth	r3, r3
 3828 004c 1BB2     		sxth	r3, r3
 3829 004e 1946     		mov	r1, r3
 3830 0050 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 81


 3831 0052 FFF7FEFF 		bl	GFXcheckScrollWrap
 663:gfx.c         ****                     myGFX->cursor_x += myGFX->textsize * 6;          // Advance x one char
 3832              		.loc 1 663 0
 3833 0056 7B68     		ldr	r3, [r7, #4]
 3834 0058 9B89     		ldrh	r3, [r3, #12]
 3835 005a 18B2     		sxth	r0, r3
 3836 005c 7B68     		ldr	r3, [r7, #4]
 3837 005e 5B89     		ldrh	r3, [r3, #10]
 3838 0060 1CB2     		sxth	r4, r3
 3839 0062 7B68     		ldr	r3, [r7, #4]
 3840 0064 1B8A     		ldrh	r3, [r3, #16]
 3841 0066 7A68     		ldr	r2, [r7, #4]
 3842 0068 528A     		ldrh	r2, [r2, #18]
 3843 006a 7968     		ldr	r1, [r7, #4]
 3844 006c C989     		ldrh	r1, [r1, #14]
 3845 006e C9B2     		uxtb	r1, r1
 3846 0070 FD78     		ldrb	r5, [r7, #3]	@ zero_extendqisi2
 3847 0072 0291     		str	r1, [sp, #8]
 3848 0074 0192     		str	r2, [sp, #4]
 3849 0076 0093     		str	r3, [sp]
 3850 0078 2B46     		mov	r3, r5
 3851 007a 2246     		mov	r2, r4
 3852 007c 0146     		mov	r1, r0
 3853 007e 7868     		ldr	r0, [r7, #4]
 3854 0080 FFF7FEFF 		bl	GFXdrawChar
 664:gfx.c         ****                 }
 3855              		.loc 1 664 0
 3856 0084 7B68     		ldr	r3, [r7, #4]
 3857 0086 9A89     		ldrh	r2, [r3, #12]
 3858 0088 7B68     		ldr	r3, [r7, #4]
 3859 008a DB89     		ldrh	r3, [r3, #14]
 3860 008c 1946     		mov	r1, r3	@ movhi
 3861 008e 4900     		lsls	r1, r1, #1
 3862 0090 0B44     		add	r3, r3, r1
 3863 0092 5B00     		lsls	r3, r3, #1
 3864 0094 9BB2     		uxth	r3, r3
 3865 0096 1344     		add	r3, r3, r2
 3866 0098 9AB2     		uxth	r2, r3
 3867 009a 7B68     		ldr	r3, [r7, #4]
 3868 009c 9A81     		strh	r2, [r3, #12]	@ movhi
 3869              		.loc 1 695 0
 3870 009e 78E0     		b	.L139
 3871              	.L133:
 669:gfx.c         ****                     myGFX->cursor_x  = 0;
 3872              		.loc 1 669 0
 3873 00a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3874 00a2 0A2B     		cmp	r3, #10
 3875 00a4 13D1     		bne	.L137
 670:gfx.c         ****                     myGFX->cursor_y += (int16_t)myGFX->textsize *
 3876              		.loc 1 670 0
 3877 00a6 7B68     		ldr	r3, [r7, #4]
 3878 00a8 0022     		movs	r2, #0
 3879 00aa 9A81     		strh	r2, [r3, #12]	@ movhi
 671:gfx.c         ****                     (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvance);
 3880              		.loc 1 671 0
 3881 00ac 7B68     		ldr	r3, [r7, #4]
 3882 00ae 5A89     		ldrh	r2, [r3, #10]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 82


 3883 00b0 7B68     		ldr	r3, [r7, #4]
 3884 00b2 DB89     		ldrh	r3, [r3, #14]
 672:gfx.c         ****                 } else if(c != '\r') {
 3885              		.loc 1 672 0
 3886 00b4 7968     		ldr	r1, [r7, #4]
 3887 00b6 8969     		ldr	r1, [r1, #24]
 3888 00b8 0A31     		adds	r1, r1, #10
 3889 00ba 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 671:gfx.c         ****                     (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvance);
 3890              		.loc 1 671 0
 3891 00bc 89B2     		uxth	r1, r1
 3892 00be 01FB03F3 		mul	r3, r1, r3
 3893 00c2 9BB2     		uxth	r3, r3
 3894 00c4 1344     		add	r3, r3, r2
 3895 00c6 9AB2     		uxth	r2, r3
 3896 00c8 7B68     		ldr	r3, [r7, #4]
 3897 00ca 5A81     		strh	r2, [r3, #10]	@ movhi
 3898              		.loc 1 695 0
 3899 00cc 61E0     		b	.L139
 3900              	.L137:
 673:gfx.c         ****                     uint8_t first = pgm_read_byte(&myGFX->gfxFont->first);
 3901              		.loc 1 673 0
 3902 00ce FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3903 00d0 0D2B     		cmp	r3, #13
 3904 00d2 5ED0     		beq	.L139
 3905              	.LBB26:
 674:gfx.c         ****                     if((c >= first) && (c <= (uint8_t)pgm_read_byte(&myGFX->gfxFont->last))) {
 3906              		.loc 1 674 0
 3907 00d4 7B68     		ldr	r3, [r7, #4]
 3908 00d6 9B69     		ldr	r3, [r3, #24]
 3909 00d8 1B7A     		ldrb	r3, [r3, #8]
 3910 00da FB75     		strb	r3, [r7, #23]
 675:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 3911              		.loc 1 675 0
 3912 00dc FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3913 00de FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3914 00e0 9A42     		cmp	r2, r3
 3915 00e2 56D3     		bcc	.L139
 675:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 3916              		.loc 1 675 0 is_stmt 0 discriminator 1
 3917 00e4 7B68     		ldr	r3, [r7, #4]
 3918 00e6 9B69     		ldr	r3, [r3, #24]
 3919 00e8 0933     		adds	r3, r3, #9
 3920 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3921 00ec FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3922 00ee 9A42     		cmp	r2, r3
 3923 00f0 4FD8     		bhi	.L139
 3924              	.LBB27:
 677:gfx.c         ****                         uint8_t   w     = pgm_read_byte(&glyph->width),
 3925              		.loc 1 677 0 is_stmt 1
 3926 00f2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3927 00f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3928 00f6 D31A     		subs	r3, r2, r3
 3929 00f8 DA00     		lsls	r2, r3, #3
 676:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 3930              		.loc 1 676 0
 3931 00fa 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 83


 3932 00fc 9B69     		ldr	r3, [r3, #24]
 3933 00fe 0433     		adds	r3, r3, #4
 3934 0100 18CB     		ldmia	r3, {r3-r4}
 677:gfx.c         ****                         uint8_t   w     = pgm_read_byte(&glyph->width),
 3935              		.loc 1 677 0
 3936 0102 1344     		add	r3, r3, r2
 676:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 3937              		.loc 1 676 0
 3938 0104 3B61     		str	r3, [r7, #16]
 678:gfx.c         ****                         h     = pgm_read_byte(&glyph->height);
 3939              		.loc 1 678 0
 3940 0106 3B69     		ldr	r3, [r7, #16]
 3941 0108 9B78     		ldrb	r3, [r3, #2]
 3942 010a FB73     		strb	r3, [r7, #15]
 679:gfx.c         ****                         if((w > 0) && (h > 0)) { // Is there an associated bitmap?
 3943              		.loc 1 679 0
 3944 010c 3B69     		ldr	r3, [r7, #16]
 3945 010e DB78     		ldrb	r3, [r3, #3]
 3946 0110 BB73     		strb	r3, [r7, #14]
 680:gfx.c         ****                             int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
 3947              		.loc 1 680 0
 3948 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3949 0114 002B     		cmp	r3, #0
 3950 0116 2DD0     		beq	.L138
 680:gfx.c         ****                             int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
 3951              		.loc 1 680 0 is_stmt 0 discriminator 1
 3952 0118 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3953 011a 002B     		cmp	r3, #0
 3954 011c 2AD0     		beq	.L138
 3955              	.LBB28:
 681:gfx.c         ****                             GFXcheckScrollWrap(myGFX, myGFX->textsize * (xo + w));
 3956              		.loc 1 681 0 is_stmt 1
 3957 011e 3B69     		ldr	r3, [r7, #16]
 3958 0120 0533     		adds	r3, r3, #5
 3959 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3960 0124 5BB2     		sxtb	r3, r3
 3961 0126 BB81     		strh	r3, [r7, #12]	@ movhi
 682:gfx.c         ****                             // if(wrap && ((cursor_x + textsize * (xo + w)) > _width)) {
 3962              		.loc 1 682 0
 3963 0128 7B68     		ldr	r3, [r7, #4]
 3964 012a DB89     		ldrh	r3, [r3, #14]
 3965 012c B7F90C10 		ldrsh	r1, [r7, #12]
 3966 0130 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3967 0132 0A44     		add	r2, r2, r1
 3968 0134 92B2     		uxth	r2, r2
 3969 0136 02FB03F3 		mul	r3, r2, r3
 3970 013a 9BB2     		uxth	r3, r3
 3971 013c 1BB2     		sxth	r3, r3
 3972 013e 1946     		mov	r1, r3
 3973 0140 7868     		ldr	r0, [r7, #4]
 3974 0142 FFF7FEFF 		bl	GFXcheckScrollWrap
 688:gfx.c         ****                         }
 3975              		.loc 1 688 0
 3976 0146 7B68     		ldr	r3, [r7, #4]
 3977 0148 9B89     		ldrh	r3, [r3, #12]
 3978 014a 18B2     		sxth	r0, r3
 3979 014c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 84


 3980 014e 5B89     		ldrh	r3, [r3, #10]
 3981 0150 1CB2     		sxth	r4, r3
 3982 0152 7B68     		ldr	r3, [r7, #4]
 3983 0154 1B8A     		ldrh	r3, [r3, #16]
 3984 0156 7A68     		ldr	r2, [r7, #4]
 3985 0158 528A     		ldrh	r2, [r2, #18]
 3986 015a 7968     		ldr	r1, [r7, #4]
 3987 015c C989     		ldrh	r1, [r1, #14]
 3988 015e C9B2     		uxtb	r1, r1
 3989 0160 FD78     		ldrb	r5, [r7, #3]	@ zero_extendqisi2
 3990 0162 0291     		str	r1, [sp, #8]
 3991 0164 0192     		str	r2, [sp, #4]
 3992 0166 0093     		str	r3, [sp]
 3993 0168 2B46     		mov	r3, r5
 3994 016a 2246     		mov	r2, r4
 3995 016c 0146     		mov	r1, r0
 3996 016e 7868     		ldr	r0, [r7, #4]
 3997 0170 FFF7FEFF 		bl	GFXdrawChar
 3998              	.L138:
 3999              	.LBE28:
 690:gfx.c         ****                     }
 4000              		.loc 1 690 0
 4001 0174 7B68     		ldr	r3, [r7, #4]
 4002 0176 9A89     		ldrh	r2, [r3, #12]
 4003 0178 3B69     		ldr	r3, [r7, #16]
 4004 017a 0433     		adds	r3, r3, #4
 4005 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4006 017e 9BB2     		uxth	r3, r3
 4007 0180 7968     		ldr	r1, [r7, #4]
 4008 0182 C989     		ldrh	r1, [r1, #14]
 4009 0184 01FB03F3 		mul	r3, r1, r3
 4010 0188 9BB2     		uxth	r3, r3
 4011 018a 1344     		add	r3, r3, r2
 4012 018c 9AB2     		uxth	r2, r3
 4013 018e 7B68     		ldr	r3, [r7, #4]
 4014 0190 9A81     		strh	r2, [r3, #12]	@ movhi
 4015              	.L139:
 4016              	.LBE27:
 4017              	.LBE26:
 4018              		.loc 1 695 0
 4019 0192 00BF     		nop
 4020 0194 1837     		adds	r7, r7, #24
 4021              		.cfi_def_cfa_offset 16
 4022 0196 BD46     		mov	sp, r7
 4023              		.cfi_def_cfa_register 13
 4024              		@ sp needed
 4025 0198 B0BD     		pop	{r4, r5, r7, pc}
 4026              		.cfi_endproc
 4027              	.LFE90:
 4028              		.size	GFXwrite, .-GFXwrite
 4029 019a 00BF     		.section	.text.GFXsetCursor,"ax",%progbits
 4030              		.align	2
 4031              		.global	GFXsetCursor
 4032              		.thumb
 4033              		.thumb_func
 4034              		.type	GFXsetCursor, %function
 4035              	GFXsetCursor:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 85


 4036              	.LFB91:
 696:gfx.c         ****         
 697:gfx.c         ****         void GFXsetCursor(GFX* myGFX, int16_t x, int16_t y) {
 4037              		.loc 1 697 0
 4038              		.cfi_startproc
 4039              		@ args = 0, pretend = 0, frame = 8
 4040              		@ frame_needed = 1, uses_anonymous_args = 0
 4041              		@ link register save eliminated.
 4042 0000 80B4     		push	{r7}
 4043              		.cfi_def_cfa_offset 4
 4044              		.cfi_offset 7, -4
 4045 0002 83B0     		sub	sp, sp, #12
 4046              		.cfi_def_cfa_offset 16
 4047 0004 00AF     		add	r7, sp, #0
 4048              		.cfi_def_cfa_register 7
 4049 0006 7860     		str	r0, [r7, #4]
 4050 0008 0B46     		mov	r3, r1
 4051 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 4052 000c 1346     		mov	r3, r2	@ movhi
 4053 000e 3B80     		strh	r3, [r7]	@ movhi
 698:gfx.c         ****             myGFX->cursor_x = x;
 4054              		.loc 1 698 0
 4055 0010 7A88     		ldrh	r2, [r7, #2]
 4056 0012 7B68     		ldr	r3, [r7, #4]
 4057 0014 9A81     		strh	r2, [r3, #12]	@ movhi
 699:gfx.c         ****             myGFX->cursor_y = y;
 4058              		.loc 1 699 0
 4059 0016 3A88     		ldrh	r2, [r7]
 4060 0018 7B68     		ldr	r3, [r7, #4]
 4061 001a 5A81     		strh	r2, [r3, #10]	@ movhi
 700:gfx.c         ****         }
 4062              		.loc 1 700 0
 4063 001c 00BF     		nop
 4064 001e 0C37     		adds	r7, r7, #12
 4065              		.cfi_def_cfa_offset 4
 4066 0020 BD46     		mov	sp, r7
 4067              		.cfi_def_cfa_register 13
 4068              		@ sp needed
 4069 0022 80BC     		pop	{r7}
 4070              		.cfi_restore 7
 4071              		.cfi_def_cfa_offset 0
 4072 0024 7047     		bx	lr
 4073              		.cfi_endproc
 4074              	.LFE91:
 4075              		.size	GFXsetCursor, .-GFXsetCursor
 4076 0026 00BF     		.section	.text.GFXgetCursorX,"ax",%progbits
 4077              		.align	2
 4078              		.global	GFXgetCursorX
 4079              		.thumb
 4080              		.thumb_func
 4081              		.type	GFXgetCursorX, %function
 4082              	GFXgetCursorX:
 4083              	.LFB92:
 701:gfx.c         ****         
 702:gfx.c         ****         int16_t GFXgetCursorX(GFX* myGFX)
 703:gfx.c         ****         {
 4084              		.loc 1 703 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 86


 4085              		.cfi_startproc
 4086              		@ args = 0, pretend = 0, frame = 8
 4087              		@ frame_needed = 1, uses_anonymous_args = 0
 4088              		@ link register save eliminated.
 4089 0000 80B4     		push	{r7}
 4090              		.cfi_def_cfa_offset 4
 4091              		.cfi_offset 7, -4
 4092 0002 83B0     		sub	sp, sp, #12
 4093              		.cfi_def_cfa_offset 16
 4094 0004 00AF     		add	r7, sp, #0
 4095              		.cfi_def_cfa_register 7
 4096 0006 7860     		str	r0, [r7, #4]
 704:gfx.c         ****             return myGFX->cursor_x;
 4097              		.loc 1 704 0
 4098 0008 7B68     		ldr	r3, [r7, #4]
 4099 000a 9B89     		ldrh	r3, [r3, #12]
 4100 000c 1BB2     		sxth	r3, r3
 705:gfx.c         ****         }
 4101              		.loc 1 705 0
 4102 000e 1846     		mov	r0, r3
 4103 0010 0C37     		adds	r7, r7, #12
 4104              		.cfi_def_cfa_offset 4
 4105 0012 BD46     		mov	sp, r7
 4106              		.cfi_def_cfa_register 13
 4107              		@ sp needed
 4108 0014 80BC     		pop	{r7}
 4109              		.cfi_restore 7
 4110              		.cfi_def_cfa_offset 0
 4111 0016 7047     		bx	lr
 4112              		.cfi_endproc
 4113              	.LFE92:
 4114              		.size	GFXgetCursorX, .-GFXgetCursorX
 4115              		.section	.text.GFXgetCursorY,"ax",%progbits
 4116              		.align	2
 4117              		.global	GFXgetCursorY
 4118              		.thumb
 4119              		.thumb_func
 4120              		.type	GFXgetCursorY, %function
 4121              	GFXgetCursorY:
 4122              	.LFB93:
 706:gfx.c         ****         
 707:gfx.c         ****         int16_t GFXgetCursorY(GFX* myGFX)
 708:gfx.c         ****         {
 4123              		.loc 1 708 0
 4124              		.cfi_startproc
 4125              		@ args = 0, pretend = 0, frame = 8
 4126              		@ frame_needed = 1, uses_anonymous_args = 0
 4127              		@ link register save eliminated.
 4128 0000 80B4     		push	{r7}
 4129              		.cfi_def_cfa_offset 4
 4130              		.cfi_offset 7, -4
 4131 0002 83B0     		sub	sp, sp, #12
 4132              		.cfi_def_cfa_offset 16
 4133 0004 00AF     		add	r7, sp, #0
 4134              		.cfi_def_cfa_register 7
 4135 0006 7860     		str	r0, [r7, #4]
 709:gfx.c         ****             return myGFX->cursor_y;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 87


 4136              		.loc 1 709 0
 4137 0008 7B68     		ldr	r3, [r7, #4]
 4138 000a 5B89     		ldrh	r3, [r3, #10]
 4139 000c 1BB2     		sxth	r3, r3
 710:gfx.c         ****         }
 4140              		.loc 1 710 0
 4141 000e 1846     		mov	r0, r3
 4142 0010 0C37     		adds	r7, r7, #12
 4143              		.cfi_def_cfa_offset 4
 4144 0012 BD46     		mov	sp, r7
 4145              		.cfi_def_cfa_register 13
 4146              		@ sp needed
 4147 0014 80BC     		pop	{r7}
 4148              		.cfi_restore 7
 4149              		.cfi_def_cfa_offset 0
 4150 0016 7047     		bx	lr
 4151              		.cfi_endproc
 4152              	.LFE93:
 4153              		.size	GFXgetCursorY, .-GFXgetCursorY
 4154              		.section	.text.GFXsetTextSize,"ax",%progbits
 4155              		.align	2
 4156              		.global	GFXsetTextSize
 4157              		.thumb
 4158              		.thumb_func
 4159              		.type	GFXsetTextSize, %function
 4160              	GFXsetTextSize:
 4161              	.LFB94:
 711:gfx.c         ****         
 712:gfx.c         ****         void GFXsetTextSize(GFX* myGFX, uint8_t s) {
 4162              		.loc 1 712 0
 4163              		.cfi_startproc
 4164              		@ args = 0, pretend = 0, frame = 8
 4165              		@ frame_needed = 1, uses_anonymous_args = 0
 4166              		@ link register save eliminated.
 4167 0000 80B4     		push	{r7}
 4168              		.cfi_def_cfa_offset 4
 4169              		.cfi_offset 7, -4
 4170 0002 83B0     		sub	sp, sp, #12
 4171              		.cfi_def_cfa_offset 16
 4172 0004 00AF     		add	r7, sp, #0
 4173              		.cfi_def_cfa_register 7
 4174 0006 7860     		str	r0, [r7, #4]
 4175 0008 0B46     		mov	r3, r1
 4176 000a FB70     		strb	r3, [r7, #3]
 713:gfx.c         ****             myGFX->textsize = (s > 0) ? s : 1;
 4177              		.loc 1 713 0
 4178 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4179 000e 002B     		cmp	r3, #0
 4180 0010 02D0     		beq	.L146
 4181              		.loc 1 713 0 is_stmt 0 discriminator 1
 4182 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4183 0014 9AB2     		uxth	r2, r3
 4184 0016 00E0     		b	.L147
 4185              	.L146:
 4186              		.loc 1 713 0 discriminator 2
 4187 0018 0122     		movs	r2, #1
 4188              	.L147:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 88


 4189              		.loc 1 713 0 discriminator 4
 4190 001a 7B68     		ldr	r3, [r7, #4]
 4191 001c DA81     		strh	r2, [r3, #14]	@ movhi
 714:gfx.c         ****         }
 4192              		.loc 1 714 0 is_stmt 1 discriminator 4
 4193 001e 00BF     		nop
 4194 0020 0C37     		adds	r7, r7, #12
 4195              		.cfi_def_cfa_offset 4
 4196 0022 BD46     		mov	sp, r7
 4197              		.cfi_def_cfa_register 13
 4198              		@ sp needed
 4199 0024 80BC     		pop	{r7}
 4200              		.cfi_restore 7
 4201              		.cfi_def_cfa_offset 0
 4202 0026 7047     		bx	lr
 4203              		.cfi_endproc
 4204              	.LFE94:
 4205              		.size	GFXsetTextSize, .-GFXsetTextSize
 4206              		.section	.text.GFXsetTextColor,"ax",%progbits
 4207              		.align	2
 4208              		.global	GFXsetTextColor
 4209              		.thumb
 4210              		.thumb_func
 4211              		.type	GFXsetTextColor, %function
 4212              	GFXsetTextColor:
 4213              	.LFB95:
 715:gfx.c         ****         
 716:gfx.c         ****         void GFXsetTextColor(GFX* myGFX, uint16_t c, uint16_t b) {
 4214              		.loc 1 716 0
 4215              		.cfi_startproc
 4216              		@ args = 0, pretend = 0, frame = 8
 4217              		@ frame_needed = 1, uses_anonymous_args = 0
 4218              		@ link register save eliminated.
 4219 0000 80B4     		push	{r7}
 4220              		.cfi_def_cfa_offset 4
 4221              		.cfi_offset 7, -4
 4222 0002 83B0     		sub	sp, sp, #12
 4223              		.cfi_def_cfa_offset 16
 4224 0004 00AF     		add	r7, sp, #0
 4225              		.cfi_def_cfa_register 7
 4226 0006 7860     		str	r0, [r7, #4]
 4227 0008 0B46     		mov	r3, r1
 4228 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 4229 000c 1346     		mov	r3, r2	@ movhi
 4230 000e 3B80     		strh	r3, [r7]	@ movhi
 717:gfx.c         ****             myGFX->textcolor   = c;
 4231              		.loc 1 717 0
 4232 0010 7B68     		ldr	r3, [r7, #4]
 4233 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4234 0014 1A82     		strh	r2, [r3, #16]	@ movhi
 718:gfx.c         ****             myGFX->textbgcolor = b;
 4235              		.loc 1 718 0
 4236 0016 7B68     		ldr	r3, [r7, #4]
 4237 0018 3A88     		ldrh	r2, [r7]	@ movhi
 4238 001a 5A82     		strh	r2, [r3, #18]	@ movhi
 719:gfx.c         ****         }
 4239              		.loc 1 719 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 89


 4240 001c 00BF     		nop
 4241 001e 0C37     		adds	r7, r7, #12
 4242              		.cfi_def_cfa_offset 4
 4243 0020 BD46     		mov	sp, r7
 4244              		.cfi_def_cfa_register 13
 4245              		@ sp needed
 4246 0022 80BC     		pop	{r7}
 4247              		.cfi_restore 7
 4248              		.cfi_def_cfa_offset 0
 4249 0024 7047     		bx	lr
 4250              		.cfi_endproc
 4251              	.LFE95:
 4252              		.size	GFXsetTextColor, .-GFXsetTextColor
 4253 0026 00BF     		.section	.text.GFXsetTextWrap,"ax",%progbits
 4254              		.align	2
 4255              		.global	GFXsetTextWrap
 4256              		.thumb
 4257              		.thumb_func
 4258              		.type	GFXsetTextWrap, %function
 4259              	GFXsetTextWrap:
 4260              	.LFB96:
 720:gfx.c         ****         
 721:gfx.c         ****         void GFXsetTextWrap(GFX* myGFX, uint8_t w) {
 4261              		.loc 1 721 0
 4262              		.cfi_startproc
 4263              		@ args = 0, pretend = 0, frame = 8
 4264              		@ frame_needed = 1, uses_anonymous_args = 0
 4265              		@ link register save eliminated.
 4266 0000 80B4     		push	{r7}
 4267              		.cfi_def_cfa_offset 4
 4268              		.cfi_offset 7, -4
 4269 0002 83B0     		sub	sp, sp, #12
 4270              		.cfi_def_cfa_offset 16
 4271 0004 00AF     		add	r7, sp, #0
 4272              		.cfi_def_cfa_register 7
 4273 0006 7860     		str	r0, [r7, #4]
 4274 0008 0B46     		mov	r3, r1
 4275 000a FB70     		strb	r3, [r7, #3]
 722:gfx.c         ****             myGFX->wrap = w;
 4276              		.loc 1 722 0
 4277 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4278 000e 9AB2     		uxth	r2, r3
 4279 0010 7B68     		ldr	r3, [r7, #4]
 4280 0012 9A82     		strh	r2, [r3, #20]	@ movhi
 723:gfx.c         ****         }
 4281              		.loc 1 723 0
 4282 0014 00BF     		nop
 4283 0016 0C37     		adds	r7, r7, #12
 4284              		.cfi_def_cfa_offset 4
 4285 0018 BD46     		mov	sp, r7
 4286              		.cfi_def_cfa_register 13
 4287              		@ sp needed
 4288 001a 80BC     		pop	{r7}
 4289              		.cfi_restore 7
 4290              		.cfi_def_cfa_offset 0
 4291 001c 7047     		bx	lr
 4292              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 90


 4293              	.LFE96:
 4294              		.size	GFXsetTextWrap, .-GFXsetTextWrap
 4295 001e 00BF     		.section	.text.GFXgetRotation,"ax",%progbits
 4296              		.align	2
 4297              		.global	GFXgetRotation
 4298              		.thumb
 4299              		.thumb_func
 4300              		.type	GFXgetRotation, %function
 4301              	GFXgetRotation:
 4302              	.LFB97:
 724:gfx.c         ****         
 725:gfx.c         ****         uint8_t GFXgetRotation(GFX* myGFX)  {
 4303              		.loc 1 725 0
 4304              		.cfi_startproc
 4305              		@ args = 0, pretend = 0, frame = 8
 4306              		@ frame_needed = 1, uses_anonymous_args = 0
 4307              		@ link register save eliminated.
 4308 0000 80B4     		push	{r7}
 4309              		.cfi_def_cfa_offset 4
 4310              		.cfi_offset 7, -4
 4311 0002 83B0     		sub	sp, sp, #12
 4312              		.cfi_def_cfa_offset 16
 4313 0004 00AF     		add	r7, sp, #0
 4314              		.cfi_def_cfa_register 7
 4315 0006 7860     		str	r0, [r7, #4]
 726:gfx.c         ****             return myGFX->rotation;
 4316              		.loc 1 726 0
 4317 0008 7B68     		ldr	r3, [r7, #4]
 4318 000a 1B89     		ldrh	r3, [r3, #8]
 4319 000c DBB2     		uxtb	r3, r3
 727:gfx.c         ****         }
 4320              		.loc 1 727 0
 4321 000e 1846     		mov	r0, r3
 4322 0010 0C37     		adds	r7, r7, #12
 4323              		.cfi_def_cfa_offset 4
 4324 0012 BD46     		mov	sp, r7
 4325              		.cfi_def_cfa_register 13
 4326              		@ sp needed
 4327 0014 80BC     		pop	{r7}
 4328              		.cfi_restore 7
 4329              		.cfi_def_cfa_offset 0
 4330 0016 7047     		bx	lr
 4331              		.cfi_endproc
 4332              	.LFE97:
 4333              		.size	GFXgetRotation, .-GFXgetRotation
 4334              		.section	.text.GFXsetRotation,"ax",%progbits
 4335              		.align	2
 4336              		.global	GFXsetRotation
 4337              		.thumb
 4338              		.thumb_func
 4339              		.type	GFXsetRotation, %function
 4340              	GFXsetRotation:
 4341              	.LFB98:
 728:gfx.c         ****         
 729:gfx.c         ****         void GFXsetRotation(GFX* myGFX, uint8_t x) {
 4342              		.loc 1 729 0
 4343              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 91


 4344              		@ args = 0, pretend = 0, frame = 8
 4345              		@ frame_needed = 1, uses_anonymous_args = 0
 4346              		@ link register save eliminated.
 4347 0000 80B4     		push	{r7}
 4348              		.cfi_def_cfa_offset 4
 4349              		.cfi_offset 7, -4
 4350 0002 83B0     		sub	sp, sp, #12
 4351              		.cfi_def_cfa_offset 16
 4352 0004 00AF     		add	r7, sp, #0
 4353              		.cfi_def_cfa_register 7
 4354 0006 7860     		str	r0, [r7, #4]
 4355 0008 0B46     		mov	r3, r1
 4356 000a FB70     		strb	r3, [r7, #3]
 730:gfx.c         ****             myGFX->rotation = (x & 3);
 4357              		.loc 1 730 0
 4358 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4359 000e 9BB2     		uxth	r3, r3
 4360 0010 03F00303 		and	r3, r3, #3
 4361 0014 9AB2     		uxth	r2, r3
 4362 0016 7B68     		ldr	r3, [r7, #4]
 4363 0018 1A81     		strh	r2, [r3, #8]	@ movhi
 731:gfx.c         ****             switch(myGFX->rotation) {
 4364              		.loc 1 731 0
 4365 001a 7B68     		ldr	r3, [r7, #4]
 4366 001c 1B89     		ldrh	r3, [r3, #8]
 4367 001e 032B     		cmp	r3, #3
 4368 0020 24D8     		bhi	.L157
 4369 0022 01A2     		adr	r2, .L155
 4370 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4371              		.p2align 2
 4372              	.L155:
 4373 0028 39000000 		.word	.L154+1
 4374 002c 53000000 		.word	.L156+1
 4375 0030 39000000 		.word	.L154+1
 4376 0034 53000000 		.word	.L156+1
 4377              		.p2align 1
 4378              	.L154:
 732:gfx.c         ****                 case 0:
 733:gfx.c         ****                 case 2:
 734:gfx.c         ****                     myGFX->_width  = myGFX->WIDTH;
 4379              		.loc 1 734 0
 4380 0038 7B68     		ldr	r3, [r7, #4]
 4381 003a B3F90030 		ldrsh	r3, [r3]
 4382 003e 9AB2     		uxth	r2, r3
 4383 0040 7B68     		ldr	r3, [r7, #4]
 4384 0042 9A80     		strh	r2, [r3, #4]	@ movhi
 735:gfx.c         ****                     myGFX->_height = myGFX->HEIGHT;
 4385              		.loc 1 735 0
 4386 0044 7B68     		ldr	r3, [r7, #4]
 4387 0046 B3F90230 		ldrsh	r3, [r3, #2]
 4388 004a 9AB2     		uxth	r2, r3
 4389 004c 7B68     		ldr	r3, [r7, #4]
 4390 004e DA80     		strh	r2, [r3, #6]	@ movhi
 736:gfx.c         ****                     break;
 4391              		.loc 1 736 0
 4392 0050 0CE0     		b	.L153
 4393              	.L156:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 92


 737:gfx.c         ****                 case 1:
 738:gfx.c         ****                 case 3:
 739:gfx.c         ****                     myGFX->_width  = myGFX->HEIGHT;
 4394              		.loc 1 739 0
 4395 0052 7B68     		ldr	r3, [r7, #4]
 4396 0054 B3F90230 		ldrsh	r3, [r3, #2]
 4397 0058 9AB2     		uxth	r2, r3
 4398 005a 7B68     		ldr	r3, [r7, #4]
 4399 005c 9A80     		strh	r2, [r3, #4]	@ movhi
 740:gfx.c         ****                     myGFX->_height = myGFX->WIDTH;
 4400              		.loc 1 740 0
 4401 005e 7B68     		ldr	r3, [r7, #4]
 4402 0060 B3F90030 		ldrsh	r3, [r3]
 4403 0064 9AB2     		uxth	r2, r3
 4404 0066 7B68     		ldr	r3, [r7, #4]
 4405 0068 DA80     		strh	r2, [r3, #6]	@ movhi
 741:gfx.c         ****                     break;
 4406              		.loc 1 741 0
 4407 006a 00BF     		nop
 4408              	.L153:
 4409              	.L157:
 742:gfx.c         ****             }
 743:gfx.c         ****         }
 4410              		.loc 1 743 0
 4411 006c 00BF     		nop
 4412 006e 0C37     		adds	r7, r7, #12
 4413              		.cfi_def_cfa_offset 4
 4414 0070 BD46     		mov	sp, r7
 4415              		.cfi_def_cfa_register 13
 4416              		@ sp needed
 4417 0072 80BC     		pop	{r7}
 4418              		.cfi_restore 7
 4419              		.cfi_def_cfa_offset 0
 4420 0074 7047     		bx	lr
 4421              		.cfi_endproc
 4422              	.LFE98:
 4423              		.size	GFXsetRotation, .-GFXsetRotation
 4424 0076 00BF     		.section	.text.GFXcp437,"ax",%progbits
 4425              		.align	2
 4426              		.global	GFXcp437
 4427              		.thumb
 4428              		.thumb_func
 4429              		.type	GFXcp437, %function
 4430              	GFXcp437:
 4431              	.LFB99:
 744:gfx.c         ****         
 745:gfx.c         ****         // Enable (or disable) Code Page 437-compatible charset.
 746:gfx.c         ****         // There was an error in glcdfont.c for the longest time -- one character
 747:gfx.c         ****         // (#176, the 'light shade' block) was missing -- this threw off the index
 748:gfx.c         ****         // of every character that followed it.  But a TON of code has been written
 749:gfx.c         ****         // with the erroneous character indices.  By default, the library uses the
 750:gfx.c         ****         // original 'wrong' behavior and old sketches will still work.  Pass 'true'
 751:gfx.c         ****         // to this function to use correct CP437 character values in your code.
 752:gfx.c         ****         void GFXcp437(GFX* myGFX, uint8_t x) {
 4432              		.loc 1 752 0
 4433              		.cfi_startproc
 4434              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 93


 4435              		@ frame_needed = 1, uses_anonymous_args = 0
 4436              		@ link register save eliminated.
 4437 0000 80B4     		push	{r7}
 4438              		.cfi_def_cfa_offset 4
 4439              		.cfi_offset 7, -4
 4440 0002 83B0     		sub	sp, sp, #12
 4441              		.cfi_def_cfa_offset 16
 4442 0004 00AF     		add	r7, sp, #0
 4443              		.cfi_def_cfa_register 7
 4444 0006 7860     		str	r0, [r7, #4]
 4445 0008 0B46     		mov	r3, r1
 4446 000a FB70     		strb	r3, [r7, #3]
 753:gfx.c         ****             myGFX->_cp437 = x;
 4447              		.loc 1 753 0
 4448 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4449 000e 9AB2     		uxth	r2, r3
 4450 0010 7B68     		ldr	r3, [r7, #4]
 4451 0012 DA82     		strh	r2, [r3, #22]	@ movhi
 754:gfx.c         ****         }
 4452              		.loc 1 754 0
 4453 0014 00BF     		nop
 4454 0016 0C37     		adds	r7, r7, #12
 4455              		.cfi_def_cfa_offset 4
 4456 0018 BD46     		mov	sp, r7
 4457              		.cfi_def_cfa_register 13
 4458              		@ sp needed
 4459 001a 80BC     		pop	{r7}
 4460              		.cfi_restore 7
 4461              		.cfi_def_cfa_offset 0
 4462 001c 7047     		bx	lr
 4463              		.cfi_endproc
 4464              	.LFE99:
 4465              		.size	GFXcp437, .-GFXcp437
 4466 001e 00BF     		.section	.text.GFXsetFont,"ax",%progbits
 4467              		.align	2
 4468              		.global	GFXsetFont
 4469              		.thumb
 4470              		.thumb_func
 4471              		.type	GFXsetFont, %function
 4472              	GFXsetFont:
 4473              	.LFB100:
 755:gfx.c         ****         
 756:gfx.c         ****         void GFXsetFont(GFX* myGFX, const GFXfont *f) {
 4474              		.loc 1 756 0
 4475              		.cfi_startproc
 4476              		@ args = 0, pretend = 0, frame = 24
 4477              		@ frame_needed = 1, uses_anonymous_args = 0
 4478              		@ link register save eliminated.
 4479 0000 90B4     		push	{r4, r7}
 4480              		.cfi_def_cfa_offset 8
 4481              		.cfi_offset 4, -8
 4482              		.cfi_offset 7, -4
 4483 0002 86B0     		sub	sp, sp, #24
 4484              		.cfi_def_cfa_offset 32
 4485 0004 00AF     		add	r7, sp, #0
 4486              		.cfi_def_cfa_register 7
 4487 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 94


 4488 0008 3960     		str	r1, [r7]
 757:gfx.c         ****             
 758:gfx.c         ****             if(f)
 4489              		.loc 1 758 0
 4490 000a 3B68     		ldr	r3, [r7]
 4491 000c 002B     		cmp	r3, #0
 4492 000e 0AD0     		beq	.L160
 759:gfx.c         ****             {            // Font struct pointer passed in?
 760:gfx.c         ****                 if(!myGFX->gfxFont) { // And no current font struct?
 4493              		.loc 1 760 0
 4494 0010 7B68     		ldr	r3, [r7, #4]
 4495 0012 9B69     		ldr	r3, [r3, #24]
 4496 0014 002B     		cmp	r3, #0
 4497 0016 59D1     		bne	.L162
 761:gfx.c         ****                     // Switching from classic to new font behavior.
 762:gfx.c         ****                     // Move cursor pos down 6 pixels so it's on baseline.
 763:gfx.c         ****                     myGFX->cursor_y += 6;
 4498              		.loc 1 763 0
 4499 0018 7B68     		ldr	r3, [r7, #4]
 4500 001a 5B89     		ldrh	r3, [r3, #10]
 4501 001c 0633     		adds	r3, r3, #6
 4502 001e 9AB2     		uxth	r2, r3
 4503 0020 7B68     		ldr	r3, [r7, #4]
 4504 0022 5A81     		strh	r2, [r3, #10]	@ movhi
 4505 0024 52E0     		b	.L162
 4506              	.L160:
 764:gfx.c         ****                 }
 765:gfx.c         ****             }
 766:gfx.c         ****             else if(myGFX->gfxFont)
 4507              		.loc 1 766 0
 4508 0026 7B68     		ldr	r3, [r7, #4]
 4509 0028 9B69     		ldr	r3, [r3, #24]
 4510 002a 002B     		cmp	r3, #0
 4511 002c 3ED0     		beq	.L163
 4512              	.LBB29:
 767:gfx.c         ****             { // NULL passed.  Current font struct defined?
 768:gfx.c         ****                 // Switching from new to classic font behavior.
 769:gfx.c         ****                 // Move cursor pos up 6 pixels so it's at top-left of char.
 770:gfx.c         ****                 //cursor_y -= 6;
 771:gfx.c         ****                 // calculate max descender ("j" or "g")
 772:gfx.c         ****                 myGFX->fontDesc = 0;
 4513              		.loc 1 772 0
 4514 002e 7B68     		ldr	r3, [r7, #4]
 4515 0030 0022     		movs	r2, #0
 4516 0032 DA83     		strh	r2, [r3, #30]	@ movhi
 773:gfx.c         ****                 
 774:gfx.c         ****                 uint8_t first  = (uint8_t) pgm_read_byte(&f->first);
 4517              		.loc 1 774 0
 4518 0034 3B68     		ldr	r3, [r7]
 4519 0036 0833     		adds	r3, r3, #8
 4520 0038 1B78     		ldrb	r3, [r3]
 4521 003a BB75     		strb	r3, [r7, #22]
 775:gfx.c         ****                 uint8_t last  = (uint8_t) pgm_read_byte(&f->last);
 4522              		.loc 1 775 0
 4523 003c 3B68     		ldr	r3, [r7]
 4524 003e 0933     		adds	r3, r3, #9
 4525 0040 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 95


 4526 0042 7B75     		strb	r3, [r7, #21]
 4527              	.LBB30:
 776:gfx.c         ****                 for (uint8_t i = first; i <= last; i++)
 4528              		.loc 1 776 0
 4529 0044 BB7D     		ldrb	r3, [r7, #22]
 4530 0046 FB75     		strb	r3, [r7, #23]
 4531 0048 25E0     		b	.L164
 4532              	.L166:
 4533              	.LBB31:
 777:gfx.c         ****                 {
 778:gfx.c         ****                     GFXglyph *glyph;
 779:gfx.c         ****                     uint8_t gh;
 780:gfx.c         ****                     int8_t  yo;
 781:gfx.c         ****                     
 782:gfx.c         ****                     glyph = &(((GFXglyph *)pgm_read_pointer(&f->glyph))[i-first]);
 4534              		.loc 1 782 0
 4535 004a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4536 004c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4537 004e D31A     		subs	r3, r2, r3
 4538 0050 DA00     		lsls	r2, r3, #3
 4539 0052 3B68     		ldr	r3, [r7]
 4540 0054 0433     		adds	r3, r3, #4
 4541 0056 18CB     		ldmia	r3, {r3-r4}
 4542 0058 1344     		add	r3, r3, r2
 4543 005a 3B61     		str	r3, [r7, #16]
 783:gfx.c         ****                     
 784:gfx.c         ****                     gh = (uint8_t) pgm_read_byte(&glyph->height);
 4544              		.loc 1 784 0
 4545 005c 3B69     		ldr	r3, [r7, #16]
 4546 005e 0333     		adds	r3, r3, #3
 4547 0060 1B78     		ldrb	r3, [r3]
 4548 0062 FB73     		strb	r3, [r7, #15]
 785:gfx.c         ****                     yo = (int8_t) pgm_read_byte(&glyph->yOffset);
 4549              		.loc 1 785 0
 4550 0064 3B69     		ldr	r3, [r7, #16]
 4551 0066 0633     		adds	r3, r3, #6
 4552 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4553 006a BB73     		strb	r3, [r7, #14]
 786:gfx.c         ****                     
 787:gfx.c         ****                     if (gh + yo > myGFX->fontDesc)
 4554              		.loc 1 787 0
 4555 006c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4556 006e 97F90E30 		ldrsb	r3, [r7, #14]
 4557 0072 1344     		add	r3, r3, r2
 4558 0074 7A68     		ldr	r2, [r7, #4]
 4559 0076 D28B     		ldrh	r2, [r2, #30]
 4560 0078 9342     		cmp	r3, r2
 4561 007a 09DD     		ble	.L165
 788:gfx.c         ****                     {
 789:gfx.c         ****                         myGFX->fontDesc = gh + yo;
 4562              		.loc 1 789 0
 4563 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4564 007e 1AB2     		sxth	r2, r3
 4565 0080 97F90E30 		ldrsb	r3, [r7, #14]
 4566 0084 1BB2     		sxth	r3, r3
 4567 0086 1344     		add	r3, r3, r2
 4568 0088 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 96


 4569 008a 9AB2     		uxth	r2, r3
 4570 008c 7B68     		ldr	r3, [r7, #4]
 4571 008e DA83     		strh	r2, [r3, #30]	@ movhi
 4572              	.L165:
 4573              	.LBE31:
 776:gfx.c         ****                 {
 4574              		.loc 1 776 0 discriminator 2
 4575 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4576 0092 0133     		adds	r3, r3, #1
 4577 0094 FB75     		strb	r3, [r7, #23]
 4578              	.L164:
 776:gfx.c         ****                 {
 4579              		.loc 1 776 0 is_stmt 0 discriminator 1
 4580 0096 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4581 0098 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4582 009a 9A42     		cmp	r2, r3
 4583 009c D5D9     		bls	.L166
 4584              	.LBE30:
 790:gfx.c         ****                     }
 791:gfx.c         ****                 }
 792:gfx.c         ****                 
 793:gfx.c         ****                 myGFX->fontHeight = (int16_t) pgm_read_byte(&f->yAdvance);
 4585              		.loc 1 793 0 is_stmt 1
 4586 009e 3B68     		ldr	r3, [r7]
 4587 00a0 0A33     		adds	r3, r3, #10
 4588 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4589 00a4 9AB2     		uxth	r2, r3
 4590 00a6 7B68     		ldr	r3, [r7, #4]
 4591 00a8 9A83     		strh	r2, [r3, #28]	@ movhi
 4592              	.LBE29:
 4593 00aa 0FE0     		b	.L162
 4594              	.L163:
 794:gfx.c         ****             }
 795:gfx.c         ****             else
 796:gfx.c         ****             {
 797:gfx.c         ****                 if(myGFX->gfxFont)
 4595              		.loc 1 797 0
 4596 00ac 7B68     		ldr	r3, [r7, #4]
 4597 00ae 9B69     		ldr	r3, [r3, #24]
 4598 00b0 002B     		cmp	r3, #0
 4599 00b2 05D0     		beq	.L167
 798:gfx.c         ****                 { // NULL passed.  Current font struct defined?
 799:gfx.c         ****                     // Switching from new to classic font behavior.
 800:gfx.c         ****                     // Move cursor pos up 6 pixels so it's at top-left of char.
 801:gfx.c         ****                     myGFX->cursor_y -= 6;
 4600              		.loc 1 801 0
 4601 00b4 7B68     		ldr	r3, [r7, #4]
 4602 00b6 5B89     		ldrh	r3, [r3, #10]
 4603 00b8 063B     		subs	r3, r3, #6
 4604 00ba 9AB2     		uxth	r2, r3
 4605 00bc 7B68     		ldr	r3, [r7, #4]
 4606 00be 5A81     		strh	r2, [r3, #10]	@ movhi
 4607              	.L167:
 802:gfx.c         ****                 }
 803:gfx.c         ****                 
 804:gfx.c         ****                 myGFX->fontHeight = 8;
 4608              		.loc 1 804 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 97


 4609 00c0 7B68     		ldr	r3, [r7, #4]
 4610 00c2 0822     		movs	r2, #8
 4611 00c4 9A83     		strh	r2, [r3, #28]	@ movhi
 805:gfx.c         ****                 myGFX->fontDesc = 0;
 4612              		.loc 1 805 0
 4613 00c6 7B68     		ldr	r3, [r7, #4]
 4614 00c8 0022     		movs	r2, #0
 4615 00ca DA83     		strh	r2, [r3, #30]	@ movhi
 4616              	.L162:
 806:gfx.c         ****             }
 807:gfx.c         ****             myGFX->gfxFont = (GFXfont *)f;
 4617              		.loc 1 807 0
 4618 00cc 7B68     		ldr	r3, [r7, #4]
 4619 00ce 3A68     		ldr	r2, [r7]
 4620 00d0 9A61     		str	r2, [r3, #24]
 808:gfx.c         ****         }
 4621              		.loc 1 808 0
 4622 00d2 00BF     		nop
 4623 00d4 1837     		adds	r7, r7, #24
 4624              		.cfi_def_cfa_offset 8
 4625 00d6 BD46     		mov	sp, r7
 4626              		.cfi_def_cfa_register 13
 4627              		@ sp needed
 4628 00d8 90BC     		pop	{r4, r7}
 4629              		.cfi_restore 7
 4630              		.cfi_restore 4
 4631              		.cfi_def_cfa_offset 0
 4632 00da 7047     		bx	lr
 4633              		.cfi_endproc
 4634              	.LFE100:
 4635              		.size	GFXsetFont, .-GFXsetFont
 4636              		.section	.text.GFXcharBounds,"ax",%progbits
 4637              		.align	2
 4638              		.global	GFXcharBounds
 4639              		.thumb
 4640              		.thumb_func
 4641              		.type	GFXcharBounds, %function
 4642              	GFXcharBounds:
 4643              	.LFB101:
 809:gfx.c         ****         
 810:gfx.c         ****         
 811:gfx.c         ****         
 812:gfx.c         ****         
 813:gfx.c         ****         
 814:gfx.c         ****         
 815:gfx.c         ****         
 816:gfx.c         ****         // Broke this out as it's used by both the PROGMEM- and RAM-resident
 817:gfx.c         ****         // getTextBounds() functions.
 818:gfx.c         ****         void GFXcharBounds(GFX* myGFX, char c, int16_t *x, int16_t *y,
 819:gfx.c         ****                            int16_t *minx, int16_t *miny, int16_t *maxx, int16_t *maxy) {
 4644              		.loc 1 819 0
 4645              		.cfi_startproc
 4646              		@ args = 16, pretend = 0, frame = 48
 4647              		@ frame_needed = 1, uses_anonymous_args = 0
 4648              		@ link register save eliminated.
 4649 0000 90B4     		push	{r4, r7}
 4650              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 98


 4651              		.cfi_offset 4, -8
 4652              		.cfi_offset 7, -4
 4653 0002 8CB0     		sub	sp, sp, #48
 4654              		.cfi_def_cfa_offset 56
 4655 0004 00AF     		add	r7, sp, #0
 4656              		.cfi_def_cfa_register 7
 4657 0006 F860     		str	r0, [r7, #12]
 4658 0008 7A60     		str	r2, [r7, #4]
 4659 000a 3B60     		str	r3, [r7]
 4660 000c 0B46     		mov	r3, r1
 4661 000e FB72     		strb	r3, [r7, #11]
 820:gfx.c         ****             
 821:gfx.c         ****             if(myGFX->gfxFont) {
 4662              		.loc 1 821 0
 4663 0010 FB68     		ldr	r3, [r7, #12]
 4664 0012 9B69     		ldr	r3, [r3, #24]
 4665 0014 002B     		cmp	r3, #0
 4666 0016 00F0F380 		beq	.L169
 822:gfx.c         ****                 
 823:gfx.c         ****                 if(c == '\n') { // Newline?
 4667              		.loc 1 823 0
 4668 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4669 001c 0A2B     		cmp	r3, #10
 4670 001e 16D1     		bne	.L170
 824:gfx.c         ****                     *x  = 0;    // Reset x to zero, advance y by one line
 4671              		.loc 1 824 0
 4672 0020 7B68     		ldr	r3, [r7, #4]
 4673 0022 0022     		movs	r2, #0
 4674 0024 1A80     		strh	r2, [r3]	@ movhi
 825:gfx.c         ****                     *y += myGFX->textsize * (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvance);
 4675              		.loc 1 825 0
 4676 0026 3B68     		ldr	r3, [r7]
 4677 0028 B3F90030 		ldrsh	r3, [r3]
 4678 002c 9AB2     		uxth	r2, r3
 4679 002e FB68     		ldr	r3, [r7, #12]
 4680 0030 DB89     		ldrh	r3, [r3, #14]
 4681 0032 F968     		ldr	r1, [r7, #12]
 4682 0034 8969     		ldr	r1, [r1, #24]
 4683 0036 0A31     		adds	r1, r1, #10
 4684 0038 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4685 003a 89B2     		uxth	r1, r1
 4686 003c 01FB03F3 		mul	r3, r1, r3
 4687 0040 9BB2     		uxth	r3, r3
 4688 0042 1344     		add	r3, r3, r2
 4689 0044 9BB2     		uxth	r3, r3
 4690 0046 1AB2     		sxth	r2, r3
 4691 0048 3B68     		ldr	r3, [r7]
 4692 004a 1A80     		strh	r2, [r3]	@ movhi
 826:gfx.c         ****                 } else if(c != '\r') { // Not a carriage return; is normal char
 827:gfx.c         ****                     uint8_t first = pgm_read_byte(&myGFX->gfxFont->first),
 828:gfx.c         ****                     last  = pgm_read_byte(&myGFX->gfxFont->last);
 829:gfx.c         ****                     if((c >= first) && (c <= last)) { // Char present in this font?
 830:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 831:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 832:gfx.c         ****                         uint8_t gw = pgm_read_byte(&glyph->width),
 833:gfx.c         ****                         gh = pgm_read_byte(&glyph->height),
 834:gfx.c         ****                         xa = pgm_read_byte(&glyph->xAdvance);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 99


 835:gfx.c         ****                         int8_t  xo = pgm_read_byte(&glyph->xOffset),
 836:gfx.c         ****                         yo = pgm_read_byte(&glyph->yOffset);
 837:gfx.c         ****                         if(myGFX->wrap && ((*x+(((int16_t)xo+gw)*myGFX->textsize)) > myGFX->_width)
 838:gfx.c         ****                             *x  = 0; // Reset x to zero, advance y by one line
 839:gfx.c         ****                             *y += myGFX->textsize * (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvanc
 840:gfx.c         ****                         }
 841:gfx.c         ****                         int16_t ts = (int16_t)myGFX->textsize,
 842:gfx.c         ****                         x1 = *x + xo * ts,
 843:gfx.c         ****                         y1 = *y + yo * ts,
 844:gfx.c         ****                         x2 = x1 + gw * ts - 1,
 845:gfx.c         ****                         y2 = y1 + gh * ts - 1;
 846:gfx.c         ****                         if(x1 < *minx) *minx = x1;
 847:gfx.c         ****                         if(y1 < *miny) *miny = y1;
 848:gfx.c         ****                         if(x2 > *maxx) *maxx = x2;
 849:gfx.c         ****                         if(y2 > *maxy) *maxy = y2;
 850:gfx.c         ****                         *x += xa * ts;
 851:gfx.c         ****                     }
 852:gfx.c         ****                 }
 853:gfx.c         ****                 
 854:gfx.c         ****             } else { // Default font
 855:gfx.c         ****                 
 856:gfx.c         ****                 if(c == '\n') {                     // Newline?
 857:gfx.c         ****                     *x  = 0;                        // Reset x to zero,
 858:gfx.c         ****                     *y += myGFX->textsize * 8;             // advance y one line
 859:gfx.c         ****                     // min/max x/y unchaged -- that waits for next 'normal' character
 860:gfx.c         ****                 } else if(c != '\r') {  // Normal char; ignore carriage returns
 861:gfx.c         ****                     if(myGFX->wrap && ((*x + myGFX->textsize * 6) > myGFX->_width)) { // Off right?
 862:gfx.c         ****                         *x  = 0;                    // Reset x to zero,
 863:gfx.c         ****                         *y += myGFX->textsize * 8;         // advance y one line
 864:gfx.c         ****                     }
 865:gfx.c         ****                     int x2 = *x + myGFX->textsize * 6 - 1, // Lower-right pixel of char
 866:gfx.c         ****                     y2 = *y + myGFX->textsize * 8 - 1;
 867:gfx.c         ****                     if(x2 > *maxx) *maxx = x2;      // Track max x, y
 868:gfx.c         ****                     if(y2 > *maxy) *maxy = y2;
 869:gfx.c         ****                     if(*x < *minx) *minx = *x;      // Track min x, y
 870:gfx.c         ****                     if(*y < *miny) *miny = *y;
 871:gfx.c         ****                     *x += myGFX->textsize * 6;             // Advance x one char
 872:gfx.c         ****                 }
 873:gfx.c         ****             }
 874:gfx.c         ****         }
 4693              		.loc 1 874 0
 4694 004c 6BE1     		b	.L184
 4695              	.L170:
 826:gfx.c         ****                 } else if(c != '\r') { // Not a carriage return; is normal char
 4696              		.loc 1 826 0
 4697 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4698 0050 0D2B     		cmp	r3, #13
 4699 0052 00F06881 		beq	.L184
 4700              	.LBB32:
 827:gfx.c         ****                     last  = pgm_read_byte(&myGFX->gfxFont->last);
 4701              		.loc 1 827 0
 4702 0056 FB68     		ldr	r3, [r7, #12]
 4703 0058 9B69     		ldr	r3, [r3, #24]
 4704 005a 1B7A     		ldrb	r3, [r3, #8]
 4705 005c 87F82F30 		strb	r3, [r7, #47]
 828:gfx.c         ****                     if((c >= first) && (c <= last)) { // Char present in this font?
 4706              		.loc 1 828 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 100


 4707 0060 FB68     		ldr	r3, [r7, #12]
 4708 0062 9B69     		ldr	r3, [r3, #24]
 4709 0064 5B7A     		ldrb	r3, [r3, #9]
 4710 0066 87F82E30 		strb	r3, [r7, #46]
 829:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 4711              		.loc 1 829 0
 4712 006a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 4713 006c 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4714 0070 9A42     		cmp	r2, r3
 4715 0072 C0F05881 		bcc	.L184
 829:gfx.c         ****                         GFXglyph *glyph = &(((GFXglyph *)pgm_read_pointer(
 4716              		.loc 1 829 0 is_stmt 0 discriminator 1
 4717 0076 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 4718 0078 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 4719 007c 9A42     		cmp	r2, r3
 4720 007e 00F25281 		bhi	.L184
 4721              	.LBB33:
 831:gfx.c         ****                         uint8_t gw = pgm_read_byte(&glyph->width),
 4722              		.loc 1 831 0 is_stmt 1
 4723 0082 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 4724 0084 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4725 0088 D31A     		subs	r3, r2, r3
 4726 008a DA00     		lsls	r2, r3, #3
 830:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 4727              		.loc 1 830 0
 4728 008c FB68     		ldr	r3, [r7, #12]
 4729 008e 9B69     		ldr	r3, [r3, #24]
 4730 0090 0433     		adds	r3, r3, #4
 4731 0092 18CB     		ldmia	r3, {r3-r4}
 831:gfx.c         ****                         uint8_t gw = pgm_read_byte(&glyph->width),
 4732              		.loc 1 831 0
 4733 0094 1344     		add	r3, r3, r2
 830:gfx.c         ****                                                                           &myGFX->gfxFont->glyph))[
 4734              		.loc 1 830 0
 4735 0096 BB62     		str	r3, [r7, #40]
 832:gfx.c         ****                         gh = pgm_read_byte(&glyph->height),
 4736              		.loc 1 832 0
 4737 0098 BB6A     		ldr	r3, [r7, #40]
 4738 009a 9B78     		ldrb	r3, [r3, #2]
 4739 009c 87F82730 		strb	r3, [r7, #39]
 833:gfx.c         ****                         xa = pgm_read_byte(&glyph->xAdvance);
 4740              		.loc 1 833 0
 4741 00a0 BB6A     		ldr	r3, [r7, #40]
 4742 00a2 DB78     		ldrb	r3, [r3, #3]
 4743 00a4 87F82630 		strb	r3, [r7, #38]
 834:gfx.c         ****                         int8_t  xo = pgm_read_byte(&glyph->xOffset),
 4744              		.loc 1 834 0
 4745 00a8 BB6A     		ldr	r3, [r7, #40]
 4746 00aa 1B79     		ldrb	r3, [r3, #4]
 4747 00ac 87F82530 		strb	r3, [r7, #37]
 835:gfx.c         ****                         yo = pgm_read_byte(&glyph->yOffset);
 4748              		.loc 1 835 0
 4749 00b0 BB6A     		ldr	r3, [r7, #40]
 4750 00b2 0533     		adds	r3, r3, #5
 4751 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4752 00b6 87F82430 		strb	r3, [r7, #36]
 836:gfx.c         ****                         if(myGFX->wrap && ((*x+(((int16_t)xo+gw)*myGFX->textsize)) > myGFX->_width)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 101


 4753              		.loc 1 836 0
 4754 00ba BB6A     		ldr	r3, [r7, #40]
 4755 00bc 0633     		adds	r3, r3, #6
 4756 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4757 00c0 87F82330 		strb	r3, [r7, #35]
 837:gfx.c         ****                             *x  = 0; // Reset x to zero, advance y by one line
 4758              		.loc 1 837 0
 4759 00c4 FB68     		ldr	r3, [r7, #12]
 4760 00c6 9B8A     		ldrh	r3, [r3, #20]
 4761 00c8 002B     		cmp	r3, #0
 4762 00ca 27D0     		beq	.L172
 837:gfx.c         ****                             *x  = 0; // Reset x to zero, advance y by one line
 4763              		.loc 1 837 0 is_stmt 0 discriminator 1
 4764 00cc 7B68     		ldr	r3, [r7, #4]
 4765 00ce B3F90030 		ldrsh	r3, [r3]
 4766 00d2 1946     		mov	r1, r3
 4767 00d4 97F92420 		ldrsb	r2, [r7, #36]
 4768 00d8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4769 00dc 1344     		add	r3, r3, r2
 4770 00de FA68     		ldr	r2, [r7, #12]
 4771 00e0 D289     		ldrh	r2, [r2, #14]
 4772 00e2 02FB03F3 		mul	r3, r2, r3
 4773 00e6 0B44     		add	r3, r3, r1
 4774 00e8 FA68     		ldr	r2, [r7, #12]
 4775 00ea 9288     		ldrh	r2, [r2, #4]
 4776 00ec 9342     		cmp	r3, r2
 4777 00ee 15DD     		ble	.L172
 838:gfx.c         ****                             *y += myGFX->textsize * (uint8_t)pgm_read_byte(&myGFX->gfxFont->yAdvanc
 4778              		.loc 1 838 0 is_stmt 1
 4779 00f0 7B68     		ldr	r3, [r7, #4]
 4780 00f2 0022     		movs	r2, #0
 4781 00f4 1A80     		strh	r2, [r3]	@ movhi
 839:gfx.c         ****                         }
 4782              		.loc 1 839 0
 4783 00f6 3B68     		ldr	r3, [r7]
 4784 00f8 B3F90030 		ldrsh	r3, [r3]
 4785 00fc 9AB2     		uxth	r2, r3
 4786 00fe FB68     		ldr	r3, [r7, #12]
 4787 0100 DB89     		ldrh	r3, [r3, #14]
 4788 0102 F968     		ldr	r1, [r7, #12]
 4789 0104 8969     		ldr	r1, [r1, #24]
 4790 0106 0A31     		adds	r1, r1, #10
 4791 0108 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4792 010a 89B2     		uxth	r1, r1
 4793 010c 01FB03F3 		mul	r3, r1, r3
 4794 0110 9BB2     		uxth	r3, r3
 4795 0112 1344     		add	r3, r3, r2
 4796 0114 9BB2     		uxth	r3, r3
 4797 0116 1AB2     		sxth	r2, r3
 4798 0118 3B68     		ldr	r3, [r7]
 4799 011a 1A80     		strh	r2, [r3]	@ movhi
 4800              	.L172:
 841:gfx.c         ****                         x1 = *x + xo * ts,
 4801              		.loc 1 841 0
 4802 011c FB68     		ldr	r3, [r7, #12]
 4803 011e DB89     		ldrh	r3, [r3, #14]
 4804 0120 3B84     		strh	r3, [r7, #32]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 102


 842:gfx.c         ****                         y1 = *y + yo * ts,
 4805              		.loc 1 842 0
 4806 0122 7B68     		ldr	r3, [r7, #4]
 4807 0124 B3F90030 		ldrsh	r3, [r3]
 4808 0128 9AB2     		uxth	r2, r3
 4809 012a 97F92430 		ldrsb	r3, [r7, #36]
 4810 012e 9BB2     		uxth	r3, r3
 4811 0130 398C     		ldrh	r1, [r7, #32]
 4812 0132 01FB03F3 		mul	r3, r1, r3
 4813 0136 9BB2     		uxth	r3, r3
 4814 0138 1344     		add	r3, r3, r2
 4815 013a 9BB2     		uxth	r3, r3
 4816 013c FB83     		strh	r3, [r7, #30]	@ movhi
 843:gfx.c         ****                         x2 = x1 + gw * ts - 1,
 4817              		.loc 1 843 0
 4818 013e 3B68     		ldr	r3, [r7]
 4819 0140 B3F90030 		ldrsh	r3, [r3]
 4820 0144 9AB2     		uxth	r2, r3
 4821 0146 97F92330 		ldrsb	r3, [r7, #35]
 4822 014a 9BB2     		uxth	r3, r3
 4823 014c 398C     		ldrh	r1, [r7, #32]
 4824 014e 01FB03F3 		mul	r3, r1, r3
 4825 0152 9BB2     		uxth	r3, r3
 4826 0154 1344     		add	r3, r3, r2
 4827 0156 9BB2     		uxth	r3, r3
 4828 0158 BB83     		strh	r3, [r7, #28]	@ movhi
 844:gfx.c         ****                         y2 = y1 + gh * ts - 1;
 4829              		.loc 1 844 0
 4830 015a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4831 015e 9BB2     		uxth	r3, r3
 4832 0160 3A8C     		ldrh	r2, [r7, #32]
 4833 0162 02FB03F3 		mul	r3, r2, r3
 4834 0166 9AB2     		uxth	r2, r3
 4835 0168 FB8B     		ldrh	r3, [r7, #30]
 4836 016a 1344     		add	r3, r3, r2
 4837 016c 9BB2     		uxth	r3, r3
 4838 016e 013B     		subs	r3, r3, #1
 4839 0170 9BB2     		uxth	r3, r3
 4840 0172 7B83     		strh	r3, [r7, #26]	@ movhi
 845:gfx.c         ****                         if(x1 < *minx) *minx = x1;
 4841              		.loc 1 845 0
 4842 0174 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 4843 0178 9BB2     		uxth	r3, r3
 4844 017a 3A8C     		ldrh	r2, [r7, #32]
 4845 017c 02FB03F3 		mul	r3, r2, r3
 4846 0180 9AB2     		uxth	r2, r3
 4847 0182 BB8B     		ldrh	r3, [r7, #28]
 4848 0184 1344     		add	r3, r3, r2
 4849 0186 9BB2     		uxth	r3, r3
 4850 0188 013B     		subs	r3, r3, #1
 4851 018a 9BB2     		uxth	r3, r3
 4852 018c 3B83     		strh	r3, [r7, #24]	@ movhi
 846:gfx.c         ****                         if(y1 < *miny) *miny = y1;
 4853              		.loc 1 846 0
 4854 018e BB6B     		ldr	r3, [r7, #56]
 4855 0190 B3F90030 		ldrsh	r3, [r3]
 4856 0194 B7F91E20 		ldrsh	r2, [r7, #30]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 103


 4857 0198 9A42     		cmp	r2, r3
 4858 019a 02DA     		bge	.L173
 846:gfx.c         ****                         if(y1 < *miny) *miny = y1;
 4859              		.loc 1 846 0 is_stmt 0 discriminator 1
 4860 019c BB6B     		ldr	r3, [r7, #56]
 4861 019e FA8B     		ldrh	r2, [r7, #30]	@ movhi
 4862 01a0 1A80     		strh	r2, [r3]	@ movhi
 4863              	.L173:
 847:gfx.c         ****                         if(x2 > *maxx) *maxx = x2;
 4864              		.loc 1 847 0 is_stmt 1
 4865 01a2 FB6B     		ldr	r3, [r7, #60]
 4866 01a4 B3F90030 		ldrsh	r3, [r3]
 4867 01a8 B7F91C20 		ldrsh	r2, [r7, #28]
 4868 01ac 9A42     		cmp	r2, r3
 4869 01ae 02DA     		bge	.L174
 847:gfx.c         ****                         if(x2 > *maxx) *maxx = x2;
 4870              		.loc 1 847 0 is_stmt 0 discriminator 1
 4871 01b0 FB6B     		ldr	r3, [r7, #60]
 4872 01b2 BA8B     		ldrh	r2, [r7, #28]	@ movhi
 4873 01b4 1A80     		strh	r2, [r3]	@ movhi
 4874              	.L174:
 848:gfx.c         ****                         if(y2 > *maxy) *maxy = y2;
 4875              		.loc 1 848 0 is_stmt 1
 4876 01b6 3B6C     		ldr	r3, [r7, #64]
 4877 01b8 B3F90030 		ldrsh	r3, [r3]
 4878 01bc B7F91A20 		ldrsh	r2, [r7, #26]
 4879 01c0 9A42     		cmp	r2, r3
 4880 01c2 02DD     		ble	.L175
 848:gfx.c         ****                         if(y2 > *maxy) *maxy = y2;
 4881              		.loc 1 848 0 is_stmt 0 discriminator 1
 4882 01c4 3B6C     		ldr	r3, [r7, #64]
 4883 01c6 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 4884 01c8 1A80     		strh	r2, [r3]	@ movhi
 4885              	.L175:
 849:gfx.c         ****                         *x += xa * ts;
 4886              		.loc 1 849 0 is_stmt 1
 4887 01ca 7B6C     		ldr	r3, [r7, #68]
 4888 01cc B3F90030 		ldrsh	r3, [r3]
 4889 01d0 B7F91820 		ldrsh	r2, [r7, #24]
 4890 01d4 9A42     		cmp	r2, r3
 4891 01d6 02DD     		ble	.L176
 849:gfx.c         ****                         *x += xa * ts;
 4892              		.loc 1 849 0 is_stmt 0 discriminator 1
 4893 01d8 7B6C     		ldr	r3, [r7, #68]
 4894 01da 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 4895 01dc 1A80     		strh	r2, [r3]	@ movhi
 4896              	.L176:
 850:gfx.c         ****                     }
 4897              		.loc 1 850 0 is_stmt 1
 4898 01de 7B68     		ldr	r3, [r7, #4]
 4899 01e0 B3F90030 		ldrsh	r3, [r3]
 4900 01e4 9AB2     		uxth	r2, r3
 4901 01e6 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 4902 01ea 9BB2     		uxth	r3, r3
 4903 01ec 398C     		ldrh	r1, [r7, #32]
 4904 01ee 01FB03F3 		mul	r3, r1, r3
 4905 01f2 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 104


 4906 01f4 1344     		add	r3, r3, r2
 4907 01f6 9BB2     		uxth	r3, r3
 4908 01f8 1AB2     		sxth	r2, r3
 4909 01fa 7B68     		ldr	r3, [r7, #4]
 4910 01fc 1A80     		strh	r2, [r3]	@ movhi
 4911              	.LBE33:
 4912              	.LBE32:
 4913              		.loc 1 874 0
 4914 01fe 92E0     		b	.L184
 4915              	.L169:
 856:gfx.c         ****                     *x  = 0;                        // Reset x to zero,
 4916              		.loc 1 856 0
 4917 0200 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4918 0202 0A2B     		cmp	r3, #10
 4919 0204 10D1     		bne	.L178
 857:gfx.c         ****                     *y += myGFX->textsize * 8;             // advance y one line
 4920              		.loc 1 857 0
 4921 0206 7B68     		ldr	r3, [r7, #4]
 4922 0208 0022     		movs	r2, #0
 4923 020a 1A80     		strh	r2, [r3]	@ movhi
 858:gfx.c         ****                     // min/max x/y unchaged -- that waits for next 'normal' character
 4924              		.loc 1 858 0
 4925 020c 3B68     		ldr	r3, [r7]
 4926 020e B3F90030 		ldrsh	r3, [r3]
 4927 0212 9AB2     		uxth	r2, r3
 4928 0214 FB68     		ldr	r3, [r7, #12]
 4929 0216 DB89     		ldrh	r3, [r3, #14]
 4930 0218 DB00     		lsls	r3, r3, #3
 4931 021a 9BB2     		uxth	r3, r3
 4932 021c 1344     		add	r3, r3, r2
 4933 021e 9BB2     		uxth	r3, r3
 4934 0220 1AB2     		sxth	r2, r3
 4935 0222 3B68     		ldr	r3, [r7]
 4936 0224 1A80     		strh	r2, [r3]	@ movhi
 4937              		.loc 1 874 0
 4938 0226 7EE0     		b	.L184
 4939              	.L178:
 860:gfx.c         ****                     if(myGFX->wrap && ((*x + myGFX->textsize * 6) > myGFX->_width)) { // Off right?
 4940              		.loc 1 860 0
 4941 0228 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4942 022a 0D2B     		cmp	r3, #13
 4943 022c 7BD0     		beq	.L184
 4944              	.LBB34:
 861:gfx.c         ****                         *x  = 0;                    // Reset x to zero,
 4945              		.loc 1 861 0
 4946 022e FB68     		ldr	r3, [r7, #12]
 4947 0230 9B8A     		ldrh	r3, [r3, #20]
 4948 0232 002B     		cmp	r3, #0
 4949 0234 1FD0     		beq	.L179
 861:gfx.c         ****                         *x  = 0;                    // Reset x to zero,
 4950              		.loc 1 861 0 is_stmt 0 discriminator 1
 4951 0236 7B68     		ldr	r3, [r7, #4]
 4952 0238 B3F90030 		ldrsh	r3, [r3]
 4953 023c 1946     		mov	r1, r3
 4954 023e FB68     		ldr	r3, [r7, #12]
 4955 0240 DB89     		ldrh	r3, [r3, #14]
 4956 0242 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 105


 4957 0244 1346     		mov	r3, r2
 4958 0246 5B00     		lsls	r3, r3, #1
 4959 0248 1344     		add	r3, r3, r2
 4960 024a 5B00     		lsls	r3, r3, #1
 4961 024c 0B44     		add	r3, r3, r1
 4962 024e FA68     		ldr	r2, [r7, #12]
 4963 0250 9288     		ldrh	r2, [r2, #4]
 4964 0252 9342     		cmp	r3, r2
 4965 0254 0FDD     		ble	.L179
 862:gfx.c         ****                         *y += myGFX->textsize * 8;         // advance y one line
 4966              		.loc 1 862 0 is_stmt 1
 4967 0256 7B68     		ldr	r3, [r7, #4]
 4968 0258 0022     		movs	r2, #0
 4969 025a 1A80     		strh	r2, [r3]	@ movhi
 863:gfx.c         ****                     }
 4970              		.loc 1 863 0
 4971 025c 3B68     		ldr	r3, [r7]
 4972 025e B3F90030 		ldrsh	r3, [r3]
 4973 0262 9AB2     		uxth	r2, r3
 4974 0264 FB68     		ldr	r3, [r7, #12]
 4975 0266 DB89     		ldrh	r3, [r3, #14]
 4976 0268 DB00     		lsls	r3, r3, #3
 4977 026a 9BB2     		uxth	r3, r3
 4978 026c 1344     		add	r3, r3, r2
 4979 026e 9BB2     		uxth	r3, r3
 4980 0270 1AB2     		sxth	r2, r3
 4981 0272 3B68     		ldr	r3, [r7]
 4982 0274 1A80     		strh	r2, [r3]	@ movhi
 4983              	.L179:
 865:gfx.c         ****                     y2 = *y + myGFX->textsize * 8 - 1;
 4984              		.loc 1 865 0
 4985 0276 7B68     		ldr	r3, [r7, #4]
 4986 0278 B3F90030 		ldrsh	r3, [r3]
 4987 027c 1946     		mov	r1, r3
 4988 027e FB68     		ldr	r3, [r7, #12]
 4989 0280 DB89     		ldrh	r3, [r3, #14]
 4990 0282 1A46     		mov	r2, r3
 4991 0284 1346     		mov	r3, r2
 4992 0286 5B00     		lsls	r3, r3, #1
 4993 0288 1344     		add	r3, r3, r2
 4994 028a 5B00     		lsls	r3, r3, #1
 4995 028c 0B44     		add	r3, r3, r1
 4996 028e 013B     		subs	r3, r3, #1
 4997 0290 7B61     		str	r3, [r7, #20]
 866:gfx.c         ****                     if(x2 > *maxx) *maxx = x2;      // Track max x, y
 4998              		.loc 1 866 0
 4999 0292 3B68     		ldr	r3, [r7]
 5000 0294 B3F90030 		ldrsh	r3, [r3]
 5001 0298 1A46     		mov	r2, r3
 5002 029a FB68     		ldr	r3, [r7, #12]
 5003 029c DB89     		ldrh	r3, [r3, #14]
 5004 029e DB00     		lsls	r3, r3, #3
 5005 02a0 1344     		add	r3, r3, r2
 5006 02a2 013B     		subs	r3, r3, #1
 5007 02a4 3B61     		str	r3, [r7, #16]
 867:gfx.c         ****                     if(y2 > *maxy) *maxy = y2;
 5008              		.loc 1 867 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 106


 5009 02a6 3B6C     		ldr	r3, [r7, #64]
 5010 02a8 B3F90030 		ldrsh	r3, [r3]
 5011 02ac 1A46     		mov	r2, r3
 5012 02ae 7B69     		ldr	r3, [r7, #20]
 5013 02b0 9A42     		cmp	r2, r3
 5014 02b2 03DA     		bge	.L180
 867:gfx.c         ****                     if(y2 > *maxy) *maxy = y2;
 5015              		.loc 1 867 0 is_stmt 0 discriminator 1
 5016 02b4 7B69     		ldr	r3, [r7, #20]
 5017 02b6 1AB2     		sxth	r2, r3
 5018 02b8 3B6C     		ldr	r3, [r7, #64]
 5019 02ba 1A80     		strh	r2, [r3]	@ movhi
 5020              	.L180:
 868:gfx.c         ****                     if(*x < *minx) *minx = *x;      // Track min x, y
 5021              		.loc 1 868 0 is_stmt 1
 5022 02bc 7B6C     		ldr	r3, [r7, #68]
 5023 02be B3F90030 		ldrsh	r3, [r3]
 5024 02c2 1A46     		mov	r2, r3
 5025 02c4 3B69     		ldr	r3, [r7, #16]
 5026 02c6 9A42     		cmp	r2, r3
 5027 02c8 03DA     		bge	.L181
 868:gfx.c         ****                     if(*x < *minx) *minx = *x;      // Track min x, y
 5028              		.loc 1 868 0 is_stmt 0 discriminator 1
 5029 02ca 3B69     		ldr	r3, [r7, #16]
 5030 02cc 1AB2     		sxth	r2, r3
 5031 02ce 7B6C     		ldr	r3, [r7, #68]
 5032 02d0 1A80     		strh	r2, [r3]	@ movhi
 5033              	.L181:
 869:gfx.c         ****                     if(*y < *miny) *miny = *y;
 5034              		.loc 1 869 0 is_stmt 1
 5035 02d2 7B68     		ldr	r3, [r7, #4]
 5036 02d4 B3F90020 		ldrsh	r2, [r3]
 5037 02d8 BB6B     		ldr	r3, [r7, #56]
 5038 02da B3F90030 		ldrsh	r3, [r3]
 5039 02de 9A42     		cmp	r2, r3
 5040 02e0 04DA     		bge	.L182
 869:gfx.c         ****                     if(*y < *miny) *miny = *y;
 5041              		.loc 1 869 0 is_stmt 0 discriminator 1
 5042 02e2 7B68     		ldr	r3, [r7, #4]
 5043 02e4 B3F90020 		ldrsh	r2, [r3]
 5044 02e8 BB6B     		ldr	r3, [r7, #56]
 5045 02ea 1A80     		strh	r2, [r3]	@ movhi
 5046              	.L182:
 870:gfx.c         ****                     *x += myGFX->textsize * 6;             // Advance x one char
 5047              		.loc 1 870 0 is_stmt 1
 5048 02ec 3B68     		ldr	r3, [r7]
 5049 02ee B3F90020 		ldrsh	r2, [r3]
 5050 02f2 FB6B     		ldr	r3, [r7, #60]
 5051 02f4 B3F90030 		ldrsh	r3, [r3]
 5052 02f8 9A42     		cmp	r2, r3
 5053 02fa 04DA     		bge	.L183
 870:gfx.c         ****                     *x += myGFX->textsize * 6;             // Advance x one char
 5054              		.loc 1 870 0 is_stmt 0 discriminator 1
 5055 02fc 3B68     		ldr	r3, [r7]
 5056 02fe B3F90020 		ldrsh	r2, [r3]
 5057 0302 FB6B     		ldr	r3, [r7, #60]
 5058 0304 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 107


 5059              	.L183:
 871:gfx.c         ****                 }
 5060              		.loc 1 871 0 is_stmt 1
 5061 0306 7B68     		ldr	r3, [r7, #4]
 5062 0308 B3F90030 		ldrsh	r3, [r3]
 5063 030c 9AB2     		uxth	r2, r3
 5064 030e FB68     		ldr	r3, [r7, #12]
 5065 0310 DB89     		ldrh	r3, [r3, #14]
 5066 0312 1946     		mov	r1, r3	@ movhi
 5067 0314 4900     		lsls	r1, r1, #1
 5068 0316 0B44     		add	r3, r3, r1
 5069 0318 5B00     		lsls	r3, r3, #1
 5070 031a 9BB2     		uxth	r3, r3
 5071 031c 1344     		add	r3, r3, r2
 5072 031e 9BB2     		uxth	r3, r3
 5073 0320 1AB2     		sxth	r2, r3
 5074 0322 7B68     		ldr	r3, [r7, #4]
 5075 0324 1A80     		strh	r2, [r3]	@ movhi
 5076              	.L184:
 5077              	.LBE34:
 5078              		.loc 1 874 0
 5079 0326 00BF     		nop
 5080 0328 3037     		adds	r7, r7, #48
 5081              		.cfi_def_cfa_offset 8
 5082 032a BD46     		mov	sp, r7
 5083              		.cfi_def_cfa_register 13
 5084              		@ sp needed
 5085 032c 90BC     		pop	{r4, r7}
 5086              		.cfi_restore 7
 5087              		.cfi_restore 4
 5088              		.cfi_def_cfa_offset 0
 5089 032e 7047     		bx	lr
 5090              		.cfi_endproc
 5091              	.LFE101:
 5092              		.size	GFXcharBounds, .-GFXcharBounds
 5093              		.section	.text.GFXgetTextBounds,"ax",%progbits
 5094              		.align	2
 5095              		.global	GFXgetTextBounds
 5096              		.thumb
 5097              		.thumb_func
 5098              		.type	GFXgetTextBounds, %function
 5099              	GFXgetTextBounds:
 5100              	.LFB102:
 875:gfx.c         ****         
 876:gfx.c         ****         
 877:gfx.c         ****         // Pass string and a cursor position, returns UL corner and W,H.
 878:gfx.c         ****         void GFXgetTextBounds(GFX* myGFX, char *str, int16_t x, int16_t y,
 879:gfx.c         ****                               int16_t *x1, int16_t *y1, uint16_t *w, uint16_t *h) {
 5101              		.loc 1 879 0
 5102              		.cfi_startproc
 5103              		@ args = 16, pretend = 0, frame = 32
 5104              		@ frame_needed = 1, uses_anonymous_args = 0
 5105 0000 80B5     		push	{r7, lr}
 5106              		.cfi_def_cfa_offset 8
 5107              		.cfi_offset 7, -8
 5108              		.cfi_offset 14, -4
 5109 0002 8CB0     		sub	sp, sp, #48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 108


 5110              		.cfi_def_cfa_offset 56
 5111 0004 04AF     		add	r7, sp, #16
 5112              		.cfi_def_cfa 7, 40
 5113 0006 F860     		str	r0, [r7, #12]
 5114 0008 B960     		str	r1, [r7, #8]
 5115 000a 1146     		mov	r1, r2
 5116 000c 1A46     		mov	r2, r3
 5117 000e 0B46     		mov	r3, r1	@ movhi
 5118 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 5119 0012 1346     		mov	r3, r2	@ movhi
 5120 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 880:gfx.c         ****             uint8_t c; // Current character
 881:gfx.c         ****             
 882:gfx.c         ****             *x1 = x;
 5121              		.loc 1 882 0
 5122 0016 B7F90620 		ldrsh	r2, [r7, #6]
 5123 001a BB6A     		ldr	r3, [r7, #40]
 5124 001c 1A80     		strh	r2, [r3]	@ movhi
 883:gfx.c         ****             *y1 = y;
 5125              		.loc 1 883 0
 5126 001e B7F90420 		ldrsh	r2, [r7, #4]
 5127 0022 FB6A     		ldr	r3, [r7, #44]
 5128 0024 1A80     		strh	r2, [r3]	@ movhi
 884:gfx.c         ****             *w  = *h = 0;
 5129              		.loc 1 884 0
 5130 0026 7B6B     		ldr	r3, [r7, #52]
 5131 0028 0022     		movs	r2, #0
 5132 002a 1A80     		strh	r2, [r3]	@ movhi
 5133 002c 7B6B     		ldr	r3, [r7, #52]
 5134 002e 1A88     		ldrh	r2, [r3]
 5135 0030 3B6B     		ldr	r3, [r7, #48]
 5136 0032 1A80     		strh	r2, [r3]	@ movhi
 885:gfx.c         ****             
 886:gfx.c         ****             int16_t minx = myGFX->_width, miny = myGFX->_height, maxx = -1, maxy = -1;
 5137              		.loc 1 886 0
 5138 0034 FB68     		ldr	r3, [r7, #12]
 5139 0036 9B88     		ldrh	r3, [r3, #4]
 5140 0038 1BB2     		sxth	r3, r3
 5141 003a BB83     		strh	r3, [r7, #28]	@ movhi
 5142 003c FB68     		ldr	r3, [r7, #12]
 5143 003e DB88     		ldrh	r3, [r3, #6]
 5144 0040 1BB2     		sxth	r3, r3
 5145 0042 7B83     		strh	r3, [r7, #26]	@ movhi
 5146 0044 4FF6FF73 		movw	r3, #65535
 5147 0048 3B83     		strh	r3, [r7, #24]	@ movhi
 5148 004a 4FF6FF73 		movw	r3, #65535
 5149 004e FB82     		strh	r3, [r7, #22]	@ movhi
 887:gfx.c         ****             
 888:gfx.c         ****             while((c = *str++))
 5150              		.loc 1 888 0
 5151 0050 12E0     		b	.L186
 5152              	.L187:
 889:gfx.c         ****                 GFXcharBounds(myGFX, c, &x, &y, &minx, &miny, &maxx, &maxy);
 5153              		.loc 1 889 0
 5154 0052 381D     		adds	r0, r7, #4
 5155 0054 BA1D     		adds	r2, r7, #6
 5156 0056 F97F     		ldrb	r1, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 109


 5157 0058 07F11603 		add	r3, r7, #22
 5158 005c 0393     		str	r3, [sp, #12]
 5159 005e 07F11803 		add	r3, r7, #24
 5160 0062 0293     		str	r3, [sp, #8]
 5161 0064 07F11A03 		add	r3, r7, #26
 5162 0068 0193     		str	r3, [sp, #4]
 5163 006a 07F11C03 		add	r3, r7, #28
 5164 006e 0093     		str	r3, [sp]
 5165 0070 0346     		mov	r3, r0
 5166 0072 F868     		ldr	r0, [r7, #12]
 5167 0074 FFF7FEFF 		bl	GFXcharBounds
 5168              	.L186:
 888:gfx.c         ****                 GFXcharBounds(myGFX, c, &x, &y, &minx, &miny, &maxx, &maxy);
 5169              		.loc 1 888 0
 5170 0078 BB68     		ldr	r3, [r7, #8]
 5171 007a 5A1C     		adds	r2, r3, #1
 5172 007c BA60     		str	r2, [r7, #8]
 5173 007e 1B78     		ldrb	r3, [r3]
 5174 0080 FB77     		strb	r3, [r7, #31]
 5175 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5176 0084 002B     		cmp	r3, #0
 5177 0086 E4D1     		bne	.L187
 890:gfx.c         ****             
 891:gfx.c         ****             if(maxx >= minx) {
 5178              		.loc 1 891 0
 5179 0088 B7F91820 		ldrsh	r2, [r7, #24]
 5180 008c B7F91C30 		ldrsh	r3, [r7, #28]
 5181 0090 9A42     		cmp	r2, r3
 5182 0092 0FDB     		blt	.L188
 892:gfx.c         ****                 *x1 = minx;
 5183              		.loc 1 892 0
 5184 0094 B7F91C20 		ldrsh	r2, [r7, #28]
 5185 0098 BB6A     		ldr	r3, [r7, #40]
 5186 009a 1A80     		strh	r2, [r3]	@ movhi
 893:gfx.c         ****                 *w  = maxx - minx + 1;
 5187              		.loc 1 893 0
 5188 009c B7F91830 		ldrsh	r3, [r7, #24]
 5189 00a0 9AB2     		uxth	r2, r3
 5190 00a2 B7F91C30 		ldrsh	r3, [r7, #28]
 5191 00a6 9BB2     		uxth	r3, r3
 5192 00a8 D31A     		subs	r3, r2, r3
 5193 00aa 9BB2     		uxth	r3, r3
 5194 00ac 0133     		adds	r3, r3, #1
 5195 00ae 9AB2     		uxth	r2, r3
 5196 00b0 3B6B     		ldr	r3, [r7, #48]
 5197 00b2 1A80     		strh	r2, [r3]	@ movhi
 5198              	.L188:
 894:gfx.c         ****             }
 895:gfx.c         ****             if(maxy >= miny) {
 5199              		.loc 1 895 0
 5200 00b4 B7F91620 		ldrsh	r2, [r7, #22]
 5201 00b8 B7F91A30 		ldrsh	r3, [r7, #26]
 5202 00bc 9A42     		cmp	r2, r3
 5203 00be 0FDB     		blt	.L190
 896:gfx.c         ****                 *y1 = miny;
 5204              		.loc 1 896 0
 5205 00c0 B7F91A20 		ldrsh	r2, [r7, #26]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 110


 5206 00c4 FB6A     		ldr	r3, [r7, #44]
 5207 00c6 1A80     		strh	r2, [r3]	@ movhi
 897:gfx.c         ****                 *h  = maxy - miny + 1;
 5208              		.loc 1 897 0
 5209 00c8 B7F91630 		ldrsh	r3, [r7, #22]
 5210 00cc 9AB2     		uxth	r2, r3
 5211 00ce B7F91A30 		ldrsh	r3, [r7, #26]
 5212 00d2 9BB2     		uxth	r3, r3
 5213 00d4 D31A     		subs	r3, r2, r3
 5214 00d6 9BB2     		uxth	r3, r3
 5215 00d8 0133     		adds	r3, r3, #1
 5216 00da 9AB2     		uxth	r2, r3
 5217 00dc 7B6B     		ldr	r3, [r7, #52]
 5218 00de 1A80     		strh	r2, [r3]	@ movhi
 5219              	.L190:
 898:gfx.c         ****             }
 899:gfx.c         ****         }
 5220              		.loc 1 899 0
 5221 00e0 00BF     		nop
 5222 00e2 2037     		adds	r7, r7, #32
 5223              		.cfi_def_cfa_offset 8
 5224 00e4 BD46     		mov	sp, r7
 5225              		.cfi_def_cfa_register 13
 5226              		@ sp needed
 5227 00e6 80BD     		pop	{r7, pc}
 5228              		.cfi_endproc
 5229              	.LFE102:
 5230              		.size	GFXgetTextBounds, .-GFXgetTextBounds
 5231              		.section	.text.GFXwidth,"ax",%progbits
 5232              		.align	2
 5233              		.global	GFXwidth
 5234              		.thumb
 5235              		.thumb_func
 5236              		.type	GFXwidth, %function
 5237              	GFXwidth:
 5238              	.LFB103:
 900:gfx.c         ****         
 901:gfx.c         ****         
 902:gfx.c         ****         
 903:gfx.c         ****         // Return the size of the display (per current rotation)
 904:gfx.c         ****         int16_t GFXwidth(GFX* myGFX ) {
 5239              		.loc 1 904 0
 5240              		.cfi_startproc
 5241              		@ args = 0, pretend = 0, frame = 8
 5242              		@ frame_needed = 1, uses_anonymous_args = 0
 5243              		@ link register save eliminated.
 5244 0000 80B4     		push	{r7}
 5245              		.cfi_def_cfa_offset 4
 5246              		.cfi_offset 7, -4
 5247 0002 83B0     		sub	sp, sp, #12
 5248              		.cfi_def_cfa_offset 16
 5249 0004 00AF     		add	r7, sp, #0
 5250              		.cfi_def_cfa_register 7
 5251 0006 7860     		str	r0, [r7, #4]
 905:gfx.c         ****             return myGFX->_width;
 5252              		.loc 1 905 0
 5253 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 111


 5254 000a 9B88     		ldrh	r3, [r3, #4]
 5255 000c 1BB2     		sxth	r3, r3
 906:gfx.c         ****         }
 5256              		.loc 1 906 0
 5257 000e 1846     		mov	r0, r3
 5258 0010 0C37     		adds	r7, r7, #12
 5259              		.cfi_def_cfa_offset 4
 5260 0012 BD46     		mov	sp, r7
 5261              		.cfi_def_cfa_register 13
 5262              		@ sp needed
 5263 0014 80BC     		pop	{r7}
 5264              		.cfi_restore 7
 5265              		.cfi_def_cfa_offset 0
 5266 0016 7047     		bx	lr
 5267              		.cfi_endproc
 5268              	.LFE103:
 5269              		.size	GFXwidth, .-GFXwidth
 5270              		.section	.text.GFXheight,"ax",%progbits
 5271              		.align	2
 5272              		.global	GFXheight
 5273              		.thumb
 5274              		.thumb_func
 5275              		.type	GFXheight, %function
 5276              	GFXheight:
 5277              	.LFB104:
 907:gfx.c         ****         
 908:gfx.c         ****         int16_t GFXheight(GFX* myGFX)  {
 5278              		.loc 1 908 0
 5279              		.cfi_startproc
 5280              		@ args = 0, pretend = 0, frame = 8
 5281              		@ frame_needed = 1, uses_anonymous_args = 0
 5282              		@ link register save eliminated.
 5283 0000 80B4     		push	{r7}
 5284              		.cfi_def_cfa_offset 4
 5285              		.cfi_offset 7, -4
 5286 0002 83B0     		sub	sp, sp, #12
 5287              		.cfi_def_cfa_offset 16
 5288 0004 00AF     		add	r7, sp, #0
 5289              		.cfi_def_cfa_register 7
 5290 0006 7860     		str	r0, [r7, #4]
 909:gfx.c         ****             return myGFX->_height;
 5291              		.loc 1 909 0
 5292 0008 7B68     		ldr	r3, [r7, #4]
 5293 000a DB88     		ldrh	r3, [r3, #6]
 5294 000c 1BB2     		sxth	r3, r3
 910:gfx.c         ****         }
 5295              		.loc 1 910 0
 5296 000e 1846     		mov	r0, r3
 5297 0010 0C37     		adds	r7, r7, #12
 5298              		.cfi_def_cfa_offset 4
 5299 0012 BD46     		mov	sp, r7
 5300              		.cfi_def_cfa_register 13
 5301              		@ sp needed
 5302 0014 80BC     		pop	{r7}
 5303              		.cfi_restore 7
 5304              		.cfi_def_cfa_offset 0
 5305 0016 7047     		bx	lr
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 112


 5306              		.cfi_endproc
 5307              	.LFE104:
 5308              		.size	GFXheight, .-GFXheight
 5309              		.section	.text.GFXinvertDisplay,"ax",%progbits
 5310              		.align	2
 5311              		.global	GFXinvertDisplay
 5312              		.thumb
 5313              		.thumb_func
 5314              		.type	GFXinvertDisplay, %function
 5315              	GFXinvertDisplay:
 5316              	.LFB105:
 911:gfx.c         ****         
 912:gfx.c         ****         void GFXinvertDisplay(GFX* myGFX, uint8_t i) {
 5317              		.loc 1 912 0
 5318              		.cfi_startproc
 5319              		@ args = 0, pretend = 0, frame = 8
 5320              		@ frame_needed = 1, uses_anonymous_args = 0
 5321              		@ link register save eliminated.
 5322 0000 80B4     		push	{r7}
 5323              		.cfi_def_cfa_offset 4
 5324              		.cfi_offset 7, -4
 5325 0002 83B0     		sub	sp, sp, #12
 5326              		.cfi_def_cfa_offset 16
 5327 0004 00AF     		add	r7, sp, #0
 5328              		.cfi_def_cfa_register 7
 5329 0006 7860     		str	r0, [r7, #4]
 5330 0008 0B46     		mov	r3, r1
 5331 000a FB70     		strb	r3, [r7, #3]
 913:gfx.c         ****             // Do nothing, must be subclassed if supported by hardware
 914:gfx.c         ****         }
 5332              		.loc 1 914 0
 5333 000c 00BF     		nop
 5334 000e 0C37     		adds	r7, r7, #12
 5335              		.cfi_def_cfa_offset 4
 5336 0010 BD46     		mov	sp, r7
 5337              		.cfi_def_cfa_register 13
 5338              		@ sp needed
 5339 0012 80BC     		pop	{r7}
 5340              		.cfi_restore 7
 5341              		.cfi_def_cfa_offset 0
 5342 0014 7047     		bx	lr
 5343              		.cfi_endproc
 5344              	.LFE105:
 5345              		.size	GFXinvertDisplay, .-GFXinvertDisplay
 5346              		.global	pitches
 5347 0016 00BF     		.data
 5348              		.align	2
 5349              		.type	pitches, %object
 5350              		.size	pitches, 24
 5351              	pitches:
 5352 0000 43       		.byte	67
 5353 0001 20       		.byte	32
 5354 0002 43       		.byte	67
 5355 0003 23       		.byte	35
 5356 0004 44       		.byte	68
 5357 0005 20       		.byte	32
 5358 0006 44       		.byte	68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 113


 5359 0007 23       		.byte	35
 5360 0008 45       		.byte	69
 5361 0009 20       		.byte	32
 5362 000a 46       		.byte	70
 5363 000b 20       		.byte	32
 5364 000c 46       		.byte	70
 5365 000d 23       		.byte	35
 5366 000e 47       		.byte	71
 5367 000f 20       		.byte	32
 5368 0010 47       		.byte	71
 5369 0011 23       		.byte	35
 5370 0012 41       		.byte	65
 5371 0013 20       		.byte	32
 5372 0014 41       		.byte	65
 5373 0015 23       		.byte	35
 5374 0016 42       		.byte	66
 5375 0017 20       		.byte	32
 5376              		.global	__aeabi_i2f
 5377              		.global	__aeabi_f2uiz
 5378              		.section	.text.OLEDparseInt,"ax",%progbits
 5379              		.align	2
 5380              		.global	OLEDparseInt
 5381              		.thumb
 5382              		.thumb_func
 5383              		.type	OLEDparseInt, %function
 5384              	OLEDparseInt:
 5385              	.LFB106:
 915:gfx.c         ****         
 916:gfx.c         ****         uint8_t pitches[24] =
 917:gfx.c         ****         {
 918:gfx.c         ****             'C', ' ',
 919:gfx.c         ****             'C', '#',
 920:gfx.c         ****             'D', ' ',
 921:gfx.c         ****             'D', '#',
 922:gfx.c         ****             'E', ' ',
 923:gfx.c         ****             'F', ' ',
 924:gfx.c         ****             'F', '#',
 925:gfx.c         ****             'G', ' ',
 926:gfx.c         ****             'G', '#',
 927:gfx.c         ****             'A', ' ',
 928:gfx.c         ****             'A', '#',
 929:gfx.c         ****             'B', ' '
 930:gfx.c         ****         };
 931:gfx.c         ****         
 932:gfx.c         ****         int OLEDparseInt(char* buffer, uint32_t myNumber, uint8_t numDigits)
 933:gfx.c         ****         {
 5386              		.loc 1 933 0
 5387              		.cfi_startproc
 5388              		@ args = 0, pretend = 0, frame = 32
 5389              		@ frame_needed = 1, uses_anonymous_args = 0
 5390 0000 80B5     		push	{r7, lr}
 5391              		.cfi_def_cfa_offset 8
 5392              		.cfi_offset 7, -8
 5393              		.cfi_offset 14, -4
 5394 0002 88B0     		sub	sp, sp, #32
 5395              		.cfi_def_cfa_offset 40
 5396 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 114


 5397              		.cfi_def_cfa_register 7
 5398 0006 F860     		str	r0, [r7, #12]
 5399 0008 B960     		str	r1, [r7, #8]
 5400 000a 1346     		mov	r3, r2
 5401 000c FB71     		strb	r3, [r7, #7]
 5402              	.LBB35:
 934:gfx.c         ****             for (int i = 0; i < numDigits; i++)
 5403              		.loc 1 934 0
 5404 000e 0023     		movs	r3, #0
 5405 0010 FB61     		str	r3, [r7, #28]
 5406 0012 29E0     		b	.L197
 5407              	.L198:
 5408              	.LBB36:
 935:gfx.c         ****             {
 936:gfx.c         ****                 int whichPlace = (uint32_t)(powf(10.0f,(numDigits - 1) - i));
 5409              		.loc 1 936 0 discriminator 3
 5410 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5411 0016 5A1E     		subs	r2, r3, #1
 5412 0018 FB69     		ldr	r3, [r7, #28]
 5413 001a D31A     		subs	r3, r2, r3
 5414 001c 1846     		mov	r0, r3
 5415 001e FFF7FEFF 		bl	__aeabi_i2f
 5416 0022 0346     		mov	r3, r0
 5417 0024 1946     		mov	r1, r3
 5418 0026 1548     		ldr	r0, .L200
 5419 0028 FFF7FEFF 		bl	powf
 5420 002c 0346     		mov	r3, r0
 5421 002e 1846     		mov	r0, r3
 5422 0030 FFF7FEFF 		bl	__aeabi_f2uiz
 5423 0034 0346     		mov	r3, r0
 5424 0036 BB61     		str	r3, [r7, #24]
 937:gfx.c         ****                 int thisDigit = (myNumber / whichPlace);
 5425              		.loc 1 937 0 discriminator 3
 5426 0038 BB69     		ldr	r3, [r7, #24]
 5427 003a BA68     		ldr	r2, [r7, #8]
 5428 003c B2FBF3F3 		udiv	r3, r2, r3
 5429 0040 7B61     		str	r3, [r7, #20]
 938:gfx.c         ****                 buffer[i] = thisDigit + 48;
 5430              		.loc 1 938 0 discriminator 3
 5431 0042 FB69     		ldr	r3, [r7, #28]
 5432 0044 FA68     		ldr	r2, [r7, #12]
 5433 0046 1344     		add	r3, r3, r2
 5434 0048 7A69     		ldr	r2, [r7, #20]
 5435 004a D2B2     		uxtb	r2, r2
 5436 004c 3032     		adds	r2, r2, #48
 5437 004e D2B2     		uxtb	r2, r2
 5438 0050 1A70     		strb	r2, [r3]
 939:gfx.c         ****                 myNumber -= thisDigit * whichPlace;
 5439              		.loc 1 939 0 discriminator 3
 5440 0052 7B69     		ldr	r3, [r7, #20]
 5441 0054 BA69     		ldr	r2, [r7, #24]
 5442 0056 02FB03F3 		mul	r3, r2, r3
 5443 005a 1A46     		mov	r2, r3
 5444 005c BB68     		ldr	r3, [r7, #8]
 5445 005e 9B1A     		subs	r3, r3, r2
 5446 0060 BB60     		str	r3, [r7, #8]
 5447              	.LBE36:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 115


 934:gfx.c         ****             {
 5448              		.loc 1 934 0 discriminator 3
 5449 0062 FB69     		ldr	r3, [r7, #28]
 5450 0064 0133     		adds	r3, r3, #1
 5451 0066 FB61     		str	r3, [r7, #28]
 5452              	.L197:
 934:gfx.c         ****             {
 5453              		.loc 1 934 0 is_stmt 0 discriminator 1
 5454 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5455 006a FB69     		ldr	r3, [r7, #28]
 5456 006c 9A42     		cmp	r2, r3
 5457 006e D1DC     		bgt	.L198
 5458              	.LBE35:
 940:gfx.c         ****             }
 941:gfx.c         ****             
 942:gfx.c         ****             return numDigits;
 5459              		.loc 1 942 0 is_stmt 1
 5460 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 943:gfx.c         ****         }
 5461              		.loc 1 943 0
 5462 0072 1846     		mov	r0, r3
 5463 0074 2037     		adds	r7, r7, #32
 5464              		.cfi_def_cfa_offset 8
 5465 0076 BD46     		mov	sp, r7
 5466              		.cfi_def_cfa_register 13
 5467              		@ sp needed
 5468 0078 80BD     		pop	{r7, pc}
 5469              	.L201:
 5470 007a 00BF     		.align	2
 5471              	.L200:
 5472 007c 00002041 		.word	1092616192
 5473              		.cfi_endproc
 5474              	.LFE106:
 5475              		.size	OLEDparseInt, .-OLEDparseInt
 5476              		.global	__aeabi_f2iz
 5477              		.global	__aeabi_fsub
 5478              		.global	__aeabi_fadd
 5479              		.global	__aeabi_fcmpgt
 5480              		.global	__aeabi_fmul
 5481              		.section	.text.OLEDparsePitch,"ax",%progbits
 5482              		.align	2
 5483              		.global	OLEDparsePitch
 5484              		.thumb
 5485              		.thumb_func
 5486              		.type	OLEDparsePitch, %function
 5487              	OLEDparsePitch:
 5488              	.LFB107:
 944:gfx.c         ****         
 945:gfx.c         ****         int OLEDparsePitch(char* buffer, float midi, uint8_t showCents)
 946:gfx.c         ****         {
 5489              		.loc 1 946 0
 5490              		.cfi_startproc
 5491              		@ args = 0, pretend = 0, frame = 40
 5492              		@ frame_needed = 1, uses_anonymous_args = 0
 5493 0000 90B5     		push	{r4, r7, lr}
 5494              		.cfi_def_cfa_offset 12
 5495              		.cfi_offset 4, -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 116


 5496              		.cfi_offset 7, -8
 5497              		.cfi_offset 14, -4
 5498 0002 8BB0     		sub	sp, sp, #44
 5499              		.cfi_def_cfa_offset 56
 5500 0004 00AF     		add	r7, sp, #0
 5501              		.cfi_def_cfa_register 7
 5502 0006 F860     		str	r0, [r7, #12]
 5503 0008 B960     		str	r1, [r7, #8]	@ float
 5504 000a 1346     		mov	r3, r2
 5505 000c FB71     		strb	r3, [r7, #7]
 947:gfx.c         ****             int pclass, octave, note, neg = 0; float offset;
 5506              		.loc 1 947 0
 5507 000e 0023     		movs	r3, #0
 5508 0010 3B62     		str	r3, [r7, #32]
 948:gfx.c         ****             
 949:gfx.c         ****             note = (int)midi;
 5509              		.loc 1 949 0
 5510 0012 B868     		ldr	r0, [r7, #8]	@ float
 5511 0014 FFF7FEFF 		bl	__aeabi_f2iz
 5512 0018 0346     		mov	r3, r0
 5513 001a 7B62     		str	r3, [r7, #36]
 950:gfx.c         ****             offset = midi - note;
 5514              		.loc 1 950 0
 5515 001c 786A     		ldr	r0, [r7, #36]
 5516 001e FFF7FEFF 		bl	__aeabi_i2f
 5517 0022 0346     		mov	r3, r0
 5518 0024 1946     		mov	r1, r3
 5519 0026 B868     		ldr	r0, [r7, #8]	@ float
 5520 0028 FFF7FEFF 		bl	__aeabi_fsub
 5521 002c 0346     		mov	r3, r0
 5522 002e FB61     		str	r3, [r7, #28]	@ float
 951:gfx.c         ****             
 952:gfx.c         ****             if ((midi + 0.5f) > (note+1))
 5523              		.loc 1 952 0
 5524 0030 4FF07C51 		mov	r1, #1056964608
 5525 0034 B868     		ldr	r0, [r7, #8]	@ float
 5526 0036 FFF7FEFF 		bl	__aeabi_fadd
 5527 003a 0346     		mov	r3, r0
 5528 003c 1C46     		mov	r4, r3
 5529 003e 7B6A     		ldr	r3, [r7, #36]
 5530 0040 0133     		adds	r3, r3, #1
 5531 0042 1846     		mov	r0, r3
 5532 0044 FFF7FEFF 		bl	__aeabi_i2f
 5533 0048 0346     		mov	r3, r0
 5534 004a 1946     		mov	r1, r3
 5535 004c 2046     		mov	r0, r4
 5536 004e FFF7FEFF 		bl	__aeabi_fcmpgt
 5537 0052 0346     		mov	r3, r0
 5538 0054 002B     		cmp	r3, #0
 5539 0056 10D0     		beq	.L203
 953:gfx.c         ****             {
 954:gfx.c         ****                 note += 1;
 5540              		.loc 1 954 0
 5541 0058 7B6A     		ldr	r3, [r7, #36]
 5542 005a 0133     		adds	r3, r3, #1
 5543 005c 7B62     		str	r3, [r7, #36]
 955:gfx.c         ****                 offset = (1.0f - offset) + 0.01f;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 117


 5544              		.loc 1 955 0
 5545 005e F969     		ldr	r1, [r7, #28]	@ float
 5546 0060 4FF07E50 		mov	r0, #1065353216
 5547 0064 FFF7FEFF 		bl	__aeabi_fsub
 5548 0068 0346     		mov	r3, r0
 5549 006a 3D49     		ldr	r1, .L210
 5550 006c 1846     		mov	r0, r3
 5551 006e FFF7FEFF 		bl	__aeabi_fadd
 5552 0072 0346     		mov	r3, r0
 5553 0074 FB61     		str	r3, [r7, #28]	@ float
 956:gfx.c         ****                 neg = 1;
 5554              		.loc 1 956 0
 5555 0076 0123     		movs	r3, #1
 5556 0078 3B62     		str	r3, [r7, #32]
 5557              	.L203:
 957:gfx.c         ****             }
 958:gfx.c         ****             
 959:gfx.c         ****             pclass = (note % 12);
 5558              		.loc 1 959 0
 5559 007a 7A6A     		ldr	r2, [r7, #36]
 5560 007c 394B     		ldr	r3, .L210+4
 5561 007e 83FB0213 		smull	r1, r3, r3, r2
 5562 0082 5910     		asrs	r1, r3, #1
 5563 0084 D317     		asrs	r3, r2, #31
 5564 0086 C91A     		subs	r1, r1, r3
 5565 0088 0B46     		mov	r3, r1
 5566 008a 5B00     		lsls	r3, r3, #1
 5567 008c 0B44     		add	r3, r3, r1
 5568 008e 9B00     		lsls	r3, r3, #2
 5569 0090 D31A     		subs	r3, r2, r3
 5570 0092 7B61     		str	r3, [r7, #20]
 960:gfx.c         ****             octave = (int)(note / 12) - 1;
 5571              		.loc 1 960 0
 5572 0094 7B6A     		ldr	r3, [r7, #36]
 5573 0096 334A     		ldr	r2, .L210+4
 5574 0098 82FB0312 		smull	r1, r2, r2, r3
 5575 009c 5210     		asrs	r2, r2, #1
 5576 009e DB17     		asrs	r3, r3, #31
 5577 00a0 D31A     		subs	r3, r2, r3
 5578 00a2 013B     		subs	r3, r3, #1
 5579 00a4 3B61     		str	r3, [r7, #16]
 961:gfx.c         ****             
 962:gfx.c         ****             int idx = 0;
 5580              		.loc 1 962 0
 5581 00a6 0023     		movs	r3, #0
 5582 00a8 BB61     		str	r3, [r7, #24]
 963:gfx.c         ****             
 964:gfx.c         ****             buffer[idx++] = pitches[pclass*2];
 5583              		.loc 1 964 0
 5584 00aa BB69     		ldr	r3, [r7, #24]
 5585 00ac 5A1C     		adds	r2, r3, #1
 5586 00ae BA61     		str	r2, [r7, #24]
 5587 00b0 1A46     		mov	r2, r3
 5588 00b2 FB68     		ldr	r3, [r7, #12]
 5589 00b4 1344     		add	r3, r3, r2
 5590 00b6 7A69     		ldr	r2, [r7, #20]
 5591 00b8 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 118


 5592 00ba 2B49     		ldr	r1, .L210+8
 5593 00bc 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5594 00be 1A70     		strb	r2, [r3]
 965:gfx.c         ****             buffer[idx++] = pitches[pclass*2+1];
 5595              		.loc 1 965 0
 5596 00c0 BB69     		ldr	r3, [r7, #24]
 5597 00c2 5A1C     		adds	r2, r3, #1
 5598 00c4 BA61     		str	r2, [r7, #24]
 5599 00c6 1A46     		mov	r2, r3
 5600 00c8 FB68     		ldr	r3, [r7, #12]
 5601 00ca 1344     		add	r3, r3, r2
 5602 00cc 7A69     		ldr	r2, [r7, #20]
 5603 00ce 5200     		lsls	r2, r2, #1
 5604 00d0 0132     		adds	r2, r2, #1
 5605 00d2 2549     		ldr	r1, .L210+8
 5606 00d4 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5607 00d6 1A70     		strb	r2, [r3]
 966:gfx.c         ****             
 967:gfx.c         ****             OLEDparseInt(&buffer[idx++], octave, 1);
 5608              		.loc 1 967 0
 5609 00d8 BB69     		ldr	r3, [r7, #24]
 5610 00da 5A1C     		adds	r2, r3, #1
 5611 00dc BA61     		str	r2, [r7, #24]
 5612 00de 1A46     		mov	r2, r3
 5613 00e0 FB68     		ldr	r3, [r7, #12]
 5614 00e2 1344     		add	r3, r3, r2
 5615 00e4 3969     		ldr	r1, [r7, #16]
 5616 00e6 0122     		movs	r2, #1
 5617 00e8 1846     		mov	r0, r3
 5618 00ea FFF7FEFF 		bl	OLEDparseInt
 968:gfx.c         ****             
 969:gfx.c         ****             if (showCents)
 5619              		.loc 1 969 0
 5620 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5621 00f0 002B     		cmp	r3, #0
 5622 00f2 2FD0     		beq	.L205
 970:gfx.c         ****             {
 971:gfx.c         ****                 buffer[idx++] = ' ';
 5623              		.loc 1 971 0
 5624 00f4 BB69     		ldr	r3, [r7, #24]
 5625 00f6 5A1C     		adds	r2, r3, #1
 5626 00f8 BA61     		str	r2, [r7, #24]
 5627 00fa 1A46     		mov	r2, r3
 5628 00fc FB68     		ldr	r3, [r7, #12]
 5629 00fe 1344     		add	r3, r3, r2
 5630 0100 2022     		movs	r2, #32
 5631 0102 1A70     		strb	r2, [r3]
 972:gfx.c         ****                 
 973:gfx.c         ****                 if (neg == 1)
 5632              		.loc 1 973 0
 5633 0104 3B6A     		ldr	r3, [r7, #32]
 5634 0106 012B     		cmp	r3, #1
 5635 0108 08D1     		bne	.L206
 974:gfx.c         ****                     buffer[idx++] = '-';
 5636              		.loc 1 974 0
 5637 010a BB69     		ldr	r3, [r7, #24]
 5638 010c 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 119


 5639 010e BA61     		str	r2, [r7, #24]
 5640 0110 1A46     		mov	r2, r3
 5641 0112 FB68     		ldr	r3, [r7, #12]
 5642 0114 1344     		add	r3, r3, r2
 5643 0116 2D22     		movs	r2, #45
 5644 0118 1A70     		strb	r2, [r3]
 5645 011a 07E0     		b	.L207
 5646              	.L206:
 975:gfx.c         ****                 else
 976:gfx.c         ****                     buffer[idx++] = '+';
 5647              		.loc 1 976 0
 5648 011c BB69     		ldr	r3, [r7, #24]
 5649 011e 5A1C     		adds	r2, r3, #1
 5650 0120 BA61     		str	r2, [r7, #24]
 5651 0122 1A46     		mov	r2, r3
 5652 0124 FB68     		ldr	r3, [r7, #12]
 5653 0126 1344     		add	r3, r3, r2
 5654 0128 2B22     		movs	r2, #43
 5655 012a 1A70     		strb	r2, [r3]
 5656              	.L207:
 977:gfx.c         ****                 
 978:gfx.c         ****                 OLEDparseInt(&buffer[idx], (uint32_t) (offset * 100.0f), 2);
 5657              		.loc 1 978 0
 5658 012c BB69     		ldr	r3, [r7, #24]
 5659 012e FA68     		ldr	r2, [r7, #12]
 5660 0130 D418     		adds	r4, r2, r3
 5661 0132 0E49     		ldr	r1, .L210+12
 5662 0134 F869     		ldr	r0, [r7, #28]	@ float
 5663 0136 FFF7FEFF 		bl	__aeabi_fmul
 5664 013a 0346     		mov	r3, r0
 5665 013c 1846     		mov	r0, r3
 5666 013e FFF7FEFF 		bl	__aeabi_f2uiz
 5667 0142 0346     		mov	r3, r0
 5668 0144 0222     		movs	r2, #2
 5669 0146 1946     		mov	r1, r3
 5670 0148 2046     		mov	r0, r4
 5671 014a FFF7FEFF 		bl	OLEDparseInt
 979:gfx.c         ****                 idx += 2;
 5672              		.loc 1 979 0
 5673 014e BB69     		ldr	r3, [r7, #24]
 5674 0150 0233     		adds	r3, r3, #2
 5675 0152 BB61     		str	r3, [r7, #24]
 5676              	.L205:
 980:gfx.c         ****             }
 981:gfx.c         ****             
 982:gfx.c         ****             return idx;
 5677              		.loc 1 982 0
 5678 0154 BB69     		ldr	r3, [r7, #24]
 983:gfx.c         ****         }
 5679              		.loc 1 983 0
 5680 0156 1846     		mov	r0, r3
 5681 0158 2C37     		adds	r7, r7, #44
 5682              		.cfi_def_cfa_offset 12
 5683 015a BD46     		mov	sp, r7
 5684              		.cfi_def_cfa_register 13
 5685              		@ sp needed
 5686 015c 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 120


 5687              	.L211:
 5688 015e 00BF     		.align	2
 5689              	.L210:
 5690 0160 0AD7233C 		.word	1008981770
 5691 0164 ABAAAA2A 		.word	715827883
 5692 0168 00000000 		.word	pitches
 5693 016c 0000C842 		.word	1120403456
 5694              		.cfi_endproc
 5695              	.LFE107:
 5696              		.size	OLEDparsePitch, .-OLEDparsePitch
 5697              		.section	.text.OLEDparsePitchClass,"ax",%progbits
 5698              		.align	2
 5699              		.global	OLEDparsePitchClass
 5700              		.thumb
 5701              		.thumb_func
 5702              		.type	OLEDparsePitchClass, %function
 5703              	OLEDparsePitchClass:
 5704              	.LFB108:
 984:gfx.c         ****         
 985:gfx.c         ****         int OLEDparsePitchClass(char* buffer, float midi)
 986:gfx.c         ****         {
 5705              		.loc 1 986 0
 5706              		.cfi_startproc
 5707              		@ args = 0, pretend = 0, frame = 24
 5708              		@ frame_needed = 1, uses_anonymous_args = 0
 5709 0000 90B5     		push	{r4, r7, lr}
 5710              		.cfi_def_cfa_offset 12
 5711              		.cfi_offset 4, -12
 5712              		.cfi_offset 7, -8
 5713              		.cfi_offset 14, -4
 5714 0002 87B0     		sub	sp, sp, #28
 5715              		.cfi_def_cfa_offset 40
 5716 0004 00AF     		add	r7, sp, #0
 5717              		.cfi_def_cfa_register 7
 5718 0006 7860     		str	r0, [r7, #4]
 5719 0008 3960     		str	r1, [r7]	@ float
 987:gfx.c         ****             int pclass, note;
 988:gfx.c         ****             float offset;
 989:gfx.c         ****             
 990:gfx.c         ****             note = (int)midi;
 5720              		.loc 1 990 0
 5721 000a 3868     		ldr	r0, [r7]	@ float
 5722 000c FFF7FEFF 		bl	__aeabi_f2iz
 5723 0010 0346     		mov	r3, r0
 5724 0012 7B61     		str	r3, [r7, #20]
 991:gfx.c         ****             offset = midi - note;
 5725              		.loc 1 991 0
 5726 0014 7869     		ldr	r0, [r7, #20]
 5727 0016 FFF7FEFF 		bl	__aeabi_i2f
 5728 001a 0346     		mov	r3, r0
 5729 001c 1946     		mov	r1, r3
 5730 001e 3868     		ldr	r0, [r7]	@ float
 5731 0020 FFF7FEFF 		bl	__aeabi_fsub
 5732 0024 0346     		mov	r3, r0
 5733 0026 3B61     		str	r3, [r7, #16]	@ float
 992:gfx.c         ****             
 993:gfx.c         ****             if ((midi + 0.5f) > (note+1))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 121


 5734              		.loc 1 993 0
 5735 0028 4FF07C51 		mov	r1, #1056964608
 5736 002c 3868     		ldr	r0, [r7]	@ float
 5737 002e FFF7FEFF 		bl	__aeabi_fadd
 5738 0032 0346     		mov	r3, r0
 5739 0034 1C46     		mov	r4, r3
 5740 0036 7B69     		ldr	r3, [r7, #20]
 5741 0038 0133     		adds	r3, r3, #1
 5742 003a 1846     		mov	r0, r3
 5743 003c FFF7FEFF 		bl	__aeabi_i2f
 5744 0040 0346     		mov	r3, r0
 5745 0042 1946     		mov	r1, r3
 5746 0044 2046     		mov	r0, r4
 5747 0046 FFF7FEFF 		bl	__aeabi_fcmpgt
 5748 004a 0346     		mov	r3, r0
 5749 004c 002B     		cmp	r3, #0
 5750 004e 0ED0     		beq	.L213
 994:gfx.c         ****             {
 995:gfx.c         ****                 note += 1;
 5751              		.loc 1 995 0
 5752 0050 7B69     		ldr	r3, [r7, #20]
 5753 0052 0133     		adds	r3, r3, #1
 5754 0054 7B61     		str	r3, [r7, #20]
 996:gfx.c         ****                 offset = (1.0f - offset) + 0.01f;
 5755              		.loc 1 996 0
 5756 0056 3969     		ldr	r1, [r7, #16]	@ float
 5757 0058 4FF07E50 		mov	r0, #1065353216
 5758 005c FFF7FEFF 		bl	__aeabi_fsub
 5759 0060 0346     		mov	r3, r0
 5760 0062 1849     		ldr	r1, .L217
 5761 0064 1846     		mov	r0, r3
 5762 0066 FFF7FEFF 		bl	__aeabi_fadd
 5763 006a 0346     		mov	r3, r0
 5764 006c 3B61     		str	r3, [r7, #16]	@ float
 5765              	.L213:
 997:gfx.c         ****             }
 998:gfx.c         ****             
 999:gfx.c         ****             pclass = (note % 12);
 5766              		.loc 1 999 0
 5767 006e 7A69     		ldr	r2, [r7, #20]
 5768 0070 154B     		ldr	r3, .L217+4
 5769 0072 83FB0213 		smull	r1, r3, r3, r2
 5770 0076 5910     		asrs	r1, r3, #1
 5771 0078 D317     		asrs	r3, r2, #31
 5772 007a C91A     		subs	r1, r1, r3
 5773 007c 0B46     		mov	r3, r1
 5774 007e 5B00     		lsls	r3, r3, #1
 5775 0080 0B44     		add	r3, r3, r1
 5776 0082 9B00     		lsls	r3, r3, #2
 5777 0084 D31A     		subs	r3, r2, r3
 5778 0086 FB60     		str	r3, [r7, #12]
1000:gfx.c         ****             
1001:gfx.c         ****             int idx = 0;
 5779              		.loc 1 1001 0
 5780 0088 0023     		movs	r3, #0
 5781 008a BB60     		str	r3, [r7, #8]
1002:gfx.c         ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 122


1003:gfx.c         ****             buffer[idx++] = pitches[pclass*2];
 5782              		.loc 1 1003 0
 5783 008c BB68     		ldr	r3, [r7, #8]
 5784 008e 5A1C     		adds	r2, r3, #1
 5785 0090 BA60     		str	r2, [r7, #8]
 5786 0092 1A46     		mov	r2, r3
 5787 0094 7B68     		ldr	r3, [r7, #4]
 5788 0096 1344     		add	r3, r3, r2
 5789 0098 FA68     		ldr	r2, [r7, #12]
 5790 009a 5200     		lsls	r2, r2, #1
 5791 009c 0B49     		ldr	r1, .L217+8
 5792 009e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5793 00a0 1A70     		strb	r2, [r3]
1004:gfx.c         ****             buffer[idx++] = pitches[pclass*2+1];
 5794              		.loc 1 1004 0
 5795 00a2 BB68     		ldr	r3, [r7, #8]
 5796 00a4 5A1C     		adds	r2, r3, #1
 5797 00a6 BA60     		str	r2, [r7, #8]
 5798 00a8 1A46     		mov	r2, r3
 5799 00aa 7B68     		ldr	r3, [r7, #4]
 5800 00ac 1344     		add	r3, r3, r2
 5801 00ae FA68     		ldr	r2, [r7, #12]
 5802 00b0 5200     		lsls	r2, r2, #1
 5803 00b2 0132     		adds	r2, r2, #1
 5804 00b4 0549     		ldr	r1, .L217+8
 5805 00b6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5806 00b8 1A70     		strb	r2, [r3]
1005:gfx.c         ****             
1006:gfx.c         ****             return idx;
 5807              		.loc 1 1006 0
 5808 00ba BB68     		ldr	r3, [r7, #8]
1007:gfx.c         ****         }
 5809              		.loc 1 1007 0
 5810 00bc 1846     		mov	r0, r3
 5811 00be 1C37     		adds	r7, r7, #28
 5812              		.cfi_def_cfa_offset 12
 5813 00c0 BD46     		mov	sp, r7
 5814              		.cfi_def_cfa_register 13
 5815              		@ sp needed
 5816 00c2 90BD     		pop	{r4, r7, pc}
 5817              	.L218:
 5818              		.align	2
 5819              	.L217:
 5820 00c4 0AD7233C 		.word	1008981770
 5821 00c8 ABAAAA2A 		.word	715827883
 5822 00cc 00000000 		.word	pitches
 5823              		.cfi_endproc
 5824              	.LFE108:
 5825              		.size	OLEDparsePitchClass, .-OLEDparsePitchClass
 5826              		.global	__aeabi_ui2f
 5827              		.global	__aeabi_fdiv
 5828              		.section	.text.OLEDparseFixedFloat,"ax",%progbits
 5829              		.align	2
 5830              		.global	OLEDparseFixedFloat
 5831              		.thumb
 5832              		.thumb_func
 5833              		.type	OLEDparseFixedFloat, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 123


 5834              	OLEDparseFixedFloat:
 5835              	.LFB109:
1008:gfx.c         ****         
1009:gfx.c         ****         int OLEDparseFixedFloat(char* buffer, float input, uint8_t numDigits, uint8_t numDecimal)
1010:gfx.c         ****         {
 5836              		.loc 1 1010 0
 5837              		.cfi_startproc
 5838              		@ args = 0, pretend = 0, frame = 56
 5839              		@ frame_needed = 1, uses_anonymous_args = 0
 5840 0000 80B5     		push	{r7, lr}
 5841              		.cfi_def_cfa_offset 8
 5842              		.cfi_offset 7, -8
 5843              		.cfi_offset 14, -4
 5844 0002 8EB0     		sub	sp, sp, #56
 5845              		.cfi_def_cfa_offset 64
 5846 0004 00AF     		add	r7, sp, #0
 5847              		.cfi_def_cfa_register 7
 5848 0006 F860     		str	r0, [r7, #12]
 5849 0008 B960     		str	r1, [r7, #8]	@ float
 5850 000a 1146     		mov	r1, r2
 5851 000c 1A46     		mov	r2, r3
 5852 000e 0B46     		mov	r3, r1
 5853 0010 FB71     		strb	r3, [r7, #7]
 5854 0012 1346     		mov	r3, r2
 5855 0014 BB71     		strb	r3, [r7, #6]
1011:gfx.c         ****             float power = powf(10.0f, numDecimal);
 5856              		.loc 1 1011 0
 5857 0016 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5858 0018 1846     		mov	r0, r3
 5859 001a FFF7FEFF 		bl	__aeabi_ui2f
 5860 001e 0346     		mov	r3, r0
 5861 0020 1946     		mov	r1, r3
 5862 0022 5A48     		ldr	r0, .L230
 5863 0024 FFF7FEFF 		bl	powf
 5864 0028 3862     		str	r0, [r7, #32]	@ float
1012:gfx.c         ****             float f = ((float)(int)(input * power + 0.5f)) / power;
 5865              		.loc 1 1012 0
 5866 002a 396A     		ldr	r1, [r7, #32]	@ float
 5867 002c B868     		ldr	r0, [r7, #8]	@ float
 5868 002e FFF7FEFF 		bl	__aeabi_fmul
 5869 0032 0346     		mov	r3, r0
 5870 0034 4FF07C51 		mov	r1, #1056964608
 5871 0038 1846     		mov	r0, r3
 5872 003a FFF7FEFF 		bl	__aeabi_fadd
 5873 003e 0346     		mov	r3, r0
 5874 0040 1846     		mov	r0, r3
 5875 0042 FFF7FEFF 		bl	__aeabi_f2iz
 5876 0046 0346     		mov	r3, r0
 5877 0048 1846     		mov	r0, r3
 5878 004a FFF7FEFF 		bl	__aeabi_i2f
 5879 004e 0346     		mov	r3, r0
 5880 0050 396A     		ldr	r1, [r7, #32]	@ float
 5881 0052 1846     		mov	r0, r3
 5882 0054 FFF7FEFF 		bl	__aeabi_fdiv
 5883 0058 0346     		mov	r3, r0
 5884 005a FB61     		str	r3, [r7, #28]	@ float
1013:gfx.c         ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 124


1014:gfx.c         ****             int nonzeroHasHappened = 0, decimalHasHappened = 0;
 5885              		.loc 1 1014 0
 5886 005c 0023     		movs	r3, #0
 5887 005e 7B63     		str	r3, [r7, #52]
 5888 0060 0023     		movs	r3, #0
 5889 0062 3B63     		str	r3, [r7, #48]
1015:gfx.c         ****             
1016:gfx.c         ****             int myNumber = (int)(f * power);
 5890              		.loc 1 1016 0
 5891 0064 396A     		ldr	r1, [r7, #32]	@ float
 5892 0066 F869     		ldr	r0, [r7, #28]	@ float
 5893 0068 FFF7FEFF 		bl	__aeabi_fmul
 5894 006c 0346     		mov	r3, r0
 5895 006e 1846     		mov	r0, r3
 5896 0070 FFF7FEFF 		bl	__aeabi_f2iz
 5897 0074 0346     		mov	r3, r0
 5898 0076 FB62     		str	r3, [r7, #44]
1017:gfx.c         ****             
1018:gfx.c         ****             int idx = 0, i = 0;
 5899              		.loc 1 1018 0
 5900 0078 0023     		movs	r3, #0
 5901 007a BB62     		str	r3, [r7, #40]
 5902 007c 0023     		movs	r3, #0
 5903 007e 7B62     		str	r3, [r7, #36]
1019:gfx.c         ****             
1020:gfx.c         ****             if (myNumber < 0)
 5904              		.loc 1 1020 0
 5905 0080 FB6A     		ldr	r3, [r7, #44]
 5906 0082 002B     		cmp	r3, #0
 5907 0084 79DA     		bge	.L221
1021:gfx.c         ****             {
1022:gfx.c         ****                 myNumber *= -1;
 5908              		.loc 1 1022 0
 5909 0086 FB6A     		ldr	r3, [r7, #44]
 5910 0088 5B42     		negs	r3, r3
 5911 008a FB62     		str	r3, [r7, #44]
1023:gfx.c         ****                 buffer[idx++] = '-';
 5912              		.loc 1 1023 0
 5913 008c BB6A     		ldr	r3, [r7, #40]
 5914 008e 5A1C     		adds	r2, r3, #1
 5915 0090 BA62     		str	r2, [r7, #40]
 5916 0092 1A46     		mov	r2, r3
 5917 0094 FB68     		ldr	r3, [r7, #12]
 5918 0096 1344     		add	r3, r3, r2
 5919 0098 2D22     		movs	r2, #45
 5920 009a 1A70     		strb	r2, [r3]
1024:gfx.c         ****                 i++;
 5921              		.loc 1 1024 0
 5922 009c 7B6A     		ldr	r3, [r7, #36]
 5923 009e 0133     		adds	r3, r3, #1
 5924 00a0 7B62     		str	r3, [r7, #36]
1025:gfx.c         ****             }
1026:gfx.c         ****             
1027:gfx.c         ****             while (i < numDigits)
 5925              		.loc 1 1027 0
 5926 00a2 6AE0     		b	.L221
 5927              	.L228:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 125


1028:gfx.c         ****             {
1029:gfx.c         ****                 if ((decimalHasHappened == 0) && ((numDigits-i) == numDecimal))
 5928              		.loc 1 1029 0
 5929 00a4 3B6B     		ldr	r3, [r7, #48]
 5930 00a6 002B     		cmp	r3, #0
 5931 00a8 1ED1     		bne	.L222
 5932              		.loc 1 1029 0 is_stmt 0 discriminator 1
 5933 00aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5934 00ac 7B6A     		ldr	r3, [r7, #36]
 5935 00ae D21A     		subs	r2, r2, r3
 5936 00b0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5937 00b2 9A42     		cmp	r2, r3
 5938 00b4 18D1     		bne	.L222
1030:gfx.c         ****                 {
1031:gfx.c         ****                     if (nonzeroHasHappened == 0)
 5939              		.loc 1 1031 0 is_stmt 1
 5940 00b6 7B6B     		ldr	r3, [r7, #52]
 5941 00b8 002B     		cmp	r3, #0
 5942 00ba 0AD1     		bne	.L223
1032:gfx.c         ****                     {
1033:gfx.c         ****                         idx++; //get past the negative if there is one - this is hacky should figur
 5943              		.loc 1 1033 0
 5944 00bc BB6A     		ldr	r3, [r7, #40]
 5945 00be 0133     		adds	r3, r3, #1
 5946 00c0 BB62     		str	r3, [r7, #40]
1034:gfx.c         ****                         buffer[idx-1] = '0';
 5947              		.loc 1 1034 0
 5948 00c2 BB6A     		ldr	r3, [r7, #40]
 5949 00c4 013B     		subs	r3, r3, #1
 5950 00c6 FA68     		ldr	r2, [r7, #12]
 5951 00c8 1344     		add	r3, r3, r2
 5952 00ca 3022     		movs	r2, #48
 5953 00cc 1A70     		strb	r2, [r3]
1035:gfx.c         ****                         nonzeroHasHappened = 1;
 5954              		.loc 1 1035 0
 5955 00ce 0123     		movs	r3, #1
 5956 00d0 7B63     		str	r3, [r7, #52]
 5957              	.L223:
1036:gfx.c         ****                     }
1037:gfx.c         ****                     
1038:gfx.c         ****                     buffer[idx++] = '.';
 5958              		.loc 1 1038 0
 5959 00d2 BB6A     		ldr	r3, [r7, #40]
 5960 00d4 5A1C     		adds	r2, r3, #1
 5961 00d6 BA62     		str	r2, [r7, #40]
 5962 00d8 1A46     		mov	r2, r3
 5963 00da FB68     		ldr	r3, [r7, #12]
 5964 00dc 1344     		add	r3, r3, r2
 5965 00de 2E22     		movs	r2, #46
 5966 00e0 1A70     		strb	r2, [r3]
1039:gfx.c         ****                     decimalHasHappened = 1;
 5967              		.loc 1 1039 0
 5968 00e2 0123     		movs	r3, #1
 5969 00e4 3B63     		str	r3, [r7, #48]
 5970 00e6 48E0     		b	.L221
 5971              	.L222:
 5972              	.LBB37:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 126


1040:gfx.c         ****                 }
1041:gfx.c         ****                 else
1042:gfx.c         ****                 {
1043:gfx.c         ****                     
1044:gfx.c         ****                     int whichPlace = (uint32_t) powf(10.0f,(numDigits - 1 - i));
 5973              		.loc 1 1044 0
 5974 00e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5975 00ea 5A1E     		subs	r2, r3, #1
 5976 00ec 7B6A     		ldr	r3, [r7, #36]
 5977 00ee D31A     		subs	r3, r2, r3
 5978 00f0 1846     		mov	r0, r3
 5979 00f2 FFF7FEFF 		bl	__aeabi_i2f
 5980 00f6 0346     		mov	r3, r0
 5981 00f8 1946     		mov	r1, r3
 5982 00fa 2448     		ldr	r0, .L230
 5983 00fc FFF7FEFF 		bl	powf
 5984 0100 0346     		mov	r3, r0
 5985 0102 1846     		mov	r0, r3
 5986 0104 FFF7FEFF 		bl	__aeabi_f2uiz
 5987 0108 0346     		mov	r3, r0
 5988 010a BB61     		str	r3, [r7, #24]
1045:gfx.c         ****                     int thisDigit = (myNumber / whichPlace);
 5989              		.loc 1 1045 0
 5990 010c FA6A     		ldr	r2, [r7, #44]
 5991 010e BB69     		ldr	r3, [r7, #24]
 5992 0110 92FBF3F3 		sdiv	r3, r2, r3
 5993 0114 7B61     		str	r3, [r7, #20]
1046:gfx.c         ****                     
1047:gfx.c         ****                     if (nonzeroHasHappened == 0)
 5994              		.loc 1 1047 0
 5995 0116 7B6B     		ldr	r3, [r7, #52]
 5996 0118 002B     		cmp	r3, #0
 5997 011a 19D1     		bne	.L224
1048:gfx.c         ****                     {
1049:gfx.c         ****                         if (thisDigit > 0)
 5998              		.loc 1 1049 0
 5999 011c 7B69     		ldr	r3, [r7, #20]
 6000 011e 002B     		cmp	r3, #0
 6001 0120 0DDD     		ble	.L225
1050:gfx.c         ****                         {
1051:gfx.c         ****                             buffer[idx++] = thisDigit + 48;
 6002              		.loc 1 1051 0
 6003 0122 BB6A     		ldr	r3, [r7, #40]
 6004 0124 5A1C     		adds	r2, r3, #1
 6005 0126 BA62     		str	r2, [r7, #40]
 6006 0128 1A46     		mov	r2, r3
 6007 012a FB68     		ldr	r3, [r7, #12]
 6008 012c 1344     		add	r3, r3, r2
 6009 012e 7A69     		ldr	r2, [r7, #20]
 6010 0130 D2B2     		uxtb	r2, r2
 6011 0132 3032     		adds	r2, r2, #48
 6012 0134 D2B2     		uxtb	r2, r2
 6013 0136 1A70     		strb	r2, [r3]
1052:gfx.c         ****                             nonzeroHasHappened = 1;
 6014              		.loc 1 1052 0
 6015 0138 0123     		movs	r3, #1
 6016 013a 7B63     		str	r3, [r7, #52]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 127


 6017 013c 13E0     		b	.L227
 6018              	.L225:
1053:gfx.c         ****                         }
1054:gfx.c         ****                         else
1055:gfx.c         ****                         {
1056:gfx.c         ****                             buffer[idx++] = ' ';
 6019              		.loc 1 1056 0
 6020 013e BB6A     		ldr	r3, [r7, #40]
 6021 0140 5A1C     		adds	r2, r3, #1
 6022 0142 BA62     		str	r2, [r7, #40]
 6023 0144 1A46     		mov	r2, r3
 6024 0146 FB68     		ldr	r3, [r7, #12]
 6025 0148 1344     		add	r3, r3, r2
 6026 014a 2022     		movs	r2, #32
 6027 014c 1A70     		strb	r2, [r3]
 6028 014e 0AE0     		b	.L227
 6029              	.L224:
1057:gfx.c         ****                         }
1058:gfx.c         ****                     }
1059:gfx.c         ****                     else
1060:gfx.c         ****                     {
1061:gfx.c         ****                         buffer[idx++] = thisDigit + 48;
 6030              		.loc 1 1061 0
 6031 0150 BB6A     		ldr	r3, [r7, #40]
 6032 0152 5A1C     		adds	r2, r3, #1
 6033 0154 BA62     		str	r2, [r7, #40]
 6034 0156 1A46     		mov	r2, r3
 6035 0158 FB68     		ldr	r3, [r7, #12]
 6036 015a 1344     		add	r3, r3, r2
 6037 015c 7A69     		ldr	r2, [r7, #20]
 6038 015e D2B2     		uxtb	r2, r2
 6039 0160 3032     		adds	r2, r2, #48
 6040 0162 D2B2     		uxtb	r2, r2
 6041 0164 1A70     		strb	r2, [r3]
 6042              	.L227:
1062:gfx.c         ****                     }
1063:gfx.c         ****                     
1064:gfx.c         ****                     myNumber -= thisDigit * whichPlace;
 6043              		.loc 1 1064 0
 6044 0166 7B69     		ldr	r3, [r7, #20]
 6045 0168 BA69     		ldr	r2, [r7, #24]
 6046 016a 02FB03F3 		mul	r3, r2, r3
 6047 016e FA6A     		ldr	r2, [r7, #44]
 6048 0170 D31A     		subs	r3, r2, r3
 6049 0172 FB62     		str	r3, [r7, #44]
1065:gfx.c         ****                     
1066:gfx.c         ****                     i++;
 6050              		.loc 1 1066 0
 6051 0174 7B6A     		ldr	r3, [r7, #36]
 6052 0176 0133     		adds	r3, r3, #1
 6053 0178 7B62     		str	r3, [r7, #36]
 6054              	.L221:
 6055              	.LBE37:
1027:gfx.c         ****             {
 6056              		.loc 1 1027 0
 6057 017a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6058 017c 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 128


 6059 017e 9A42     		cmp	r2, r3
 6060 0180 90DC     		bgt	.L228
1067:gfx.c         ****                 }
1068:gfx.c         ****             }
1069:gfx.c         ****             
1070:gfx.c         ****             return idx;
 6061              		.loc 1 1070 0
 6062 0182 BB6A     		ldr	r3, [r7, #40]
1071:gfx.c         ****         }
 6063              		.loc 1 1071 0
 6064 0184 1846     		mov	r0, r3
 6065 0186 3837     		adds	r7, r7, #56
 6066              		.cfi_def_cfa_offset 8
 6067 0188 BD46     		mov	sp, r7
 6068              		.cfi_def_cfa_register 13
 6069              		@ sp needed
 6070 018a 80BD     		pop	{r7, pc}
 6071              	.L231:
 6072              		.align	2
 6073              	.L230:
 6074 018c 00002041 		.word	1092616192
 6075              		.cfi_endproc
 6076              	.LFE109:
 6077              		.size	OLEDparseFixedFloat, .-OLEDparseFixedFloat
 6078              		.section	.text.GFXscrollUp,"ax",%progbits
 6079              		.align	2
 6080              		.global	GFXscrollUp
 6081              		.thumb
 6082              		.thumb_func
 6083              		.type	GFXscrollUp, %function
 6084              	GFXscrollUp:
 6085              	.LFB110:
1072:gfx.c         ****         
1073:gfx.c         ****         
1074:gfx.c         ****         
1075:gfx.c         ****         void GFXscrollUp(GFX* myGFX, uint8_t c, uint16_t color) {
 6086              		.loc 1 1075 0
 6087              		.cfi_startproc
 6088              		@ args = 0, pretend = 0, frame = 8
 6089              		@ frame_needed = 1, uses_anonymous_args = 0
 6090              		@ link register save eliminated.
 6091 0000 80B4     		push	{r7}
 6092              		.cfi_def_cfa_offset 4
 6093              		.cfi_offset 7, -4
 6094 0002 83B0     		sub	sp, sp, #12
 6095              		.cfi_def_cfa_offset 16
 6096 0004 00AF     		add	r7, sp, #0
 6097              		.cfi_def_cfa_register 7
 6098 0006 7860     		str	r0, [r7, #4]
 6099 0008 0B46     		mov	r3, r1
 6100 000a FB70     		strb	r3, [r7, #3]
 6101 000c 1346     		mov	r3, r2	@ movhi
 6102 000e 3B80     		strh	r3, [r7]	@ movhi
1076:gfx.c         ****             // map to logical orientation
1077:gfx.c         ****             ;
1078:gfx.c         ****         }
 6103              		.loc 1 1078 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 129


 6104 0010 00BF     		nop
 6105 0012 0C37     		adds	r7, r7, #12
 6106              		.cfi_def_cfa_offset 4
 6107 0014 BD46     		mov	sp, r7
 6108              		.cfi_def_cfa_register 13
 6109              		@ sp needed
 6110 0016 80BC     		pop	{r7}
 6111              		.cfi_restore 7
 6112              		.cfi_def_cfa_offset 0
 6113 0018 7047     		bx	lr
 6114              		.cfi_endproc
 6115              	.LFE110:
 6116              		.size	GFXscrollUp, .-GFXscrollUp
 6117 001a 00BF     		.section	.text.GFXscrollDown,"ax",%progbits
 6118              		.align	2
 6119              		.global	GFXscrollDown
 6120              		.thumb
 6121              		.thumb_func
 6122              		.type	GFXscrollDown, %function
 6123              	GFXscrollDown:
 6124              	.LFB111:
1079:gfx.c         ****         
1080:gfx.c         ****         void GFXscrollDown(GFX* myGFX, uint8_t c, uint16_t color) {
 6125              		.loc 1 1080 0
 6126              		.cfi_startproc
 6127              		@ args = 0, pretend = 0, frame = 8
 6128              		@ frame_needed = 1, uses_anonymous_args = 0
 6129              		@ link register save eliminated.
 6130 0000 80B4     		push	{r7}
 6131              		.cfi_def_cfa_offset 4
 6132              		.cfi_offset 7, -4
 6133 0002 83B0     		sub	sp, sp, #12
 6134              		.cfi_def_cfa_offset 16
 6135 0004 00AF     		add	r7, sp, #0
 6136              		.cfi_def_cfa_register 7
 6137 0006 7860     		str	r0, [r7, #4]
 6138 0008 0B46     		mov	r3, r1
 6139 000a FB70     		strb	r3, [r7, #3]
 6140 000c 1346     		mov	r3, r2	@ movhi
 6141 000e 3B80     		strh	r3, [r7]	@ movhi
1081:gfx.c         ****             // map to logical orientation
1082:gfx.c         ****             ;
1083:gfx.c         ****         }
 6142              		.loc 1 1083 0
 6143 0010 00BF     		nop
 6144 0012 0C37     		adds	r7, r7, #12
 6145              		.cfi_def_cfa_offset 4
 6146 0014 BD46     		mov	sp, r7
 6147              		.cfi_def_cfa_register 13
 6148              		@ sp needed
 6149 0016 80BC     		pop	{r7}
 6150              		.cfi_restore 7
 6151              		.cfi_def_cfa_offset 0
 6152 0018 7047     		bx	lr
 6153              		.cfi_endproc
 6154              	.LFE111:
 6155              		.size	GFXscrollDown, .-GFXscrollDown
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 130


 6156 001a 00BF     		.section	.text.GFXscrollLeft,"ax",%progbits
 6157              		.align	2
 6158              		.global	GFXscrollLeft
 6159              		.thumb
 6160              		.thumb_func
 6161              		.type	GFXscrollLeft, %function
 6162              	GFXscrollLeft:
 6163              	.LFB112:
1084:gfx.c         ****         
1085:gfx.c         ****         void GFXscrollLeft(GFX* myGFX, uint8_t c, uint16_t color) {
 6164              		.loc 1 1085 0
 6165              		.cfi_startproc
 6166              		@ args = 0, pretend = 0, frame = 8
 6167              		@ frame_needed = 1, uses_anonymous_args = 0
 6168              		@ link register save eliminated.
 6169 0000 80B4     		push	{r7}
 6170              		.cfi_def_cfa_offset 4
 6171              		.cfi_offset 7, -4
 6172 0002 83B0     		sub	sp, sp, #12
 6173              		.cfi_def_cfa_offset 16
 6174 0004 00AF     		add	r7, sp, #0
 6175              		.cfi_def_cfa_register 7
 6176 0006 7860     		str	r0, [r7, #4]
 6177 0008 0B46     		mov	r3, r1
 6178 000a FB70     		strb	r3, [r7, #3]
 6179 000c 1346     		mov	r3, r2	@ movhi
 6180 000e 3B80     		strh	r3, [r7]	@ movhi
1086:gfx.c         ****             // map to logical orientation
1087:gfx.c         ****             ;
1088:gfx.c         ****         }
 6181              		.loc 1 1088 0
 6182 0010 00BF     		nop
 6183 0012 0C37     		adds	r7, r7, #12
 6184              		.cfi_def_cfa_offset 4
 6185 0014 BD46     		mov	sp, r7
 6186              		.cfi_def_cfa_register 13
 6187              		@ sp needed
 6188 0016 80BC     		pop	{r7}
 6189              		.cfi_restore 7
 6190              		.cfi_def_cfa_offset 0
 6191 0018 7047     		bx	lr
 6192              		.cfi_endproc
 6193              	.LFE112:
 6194              		.size	GFXscrollLeft, .-GFXscrollLeft
 6195 001a 00BF     		.section	.text.GFXscrollRight,"ax",%progbits
 6196              		.align	2
 6197              		.global	GFXscrollRight
 6198              		.thumb
 6199              		.thumb_func
 6200              		.type	GFXscrollRight, %function
 6201              	GFXscrollRight:
 6202              	.LFB113:
1089:gfx.c         ****         
1090:gfx.c         ****         void GFXscrollRight(GFX* myGFX, uint8_t c, uint16_t color) {
 6203              		.loc 1 1090 0
 6204              		.cfi_startproc
 6205              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 131


 6206              		@ frame_needed = 1, uses_anonymous_args = 0
 6207              		@ link register save eliminated.
 6208 0000 80B4     		push	{r7}
 6209              		.cfi_def_cfa_offset 4
 6210              		.cfi_offset 7, -4
 6211 0002 83B0     		sub	sp, sp, #12
 6212              		.cfi_def_cfa_offset 16
 6213 0004 00AF     		add	r7, sp, #0
 6214              		.cfi_def_cfa_register 7
 6215 0006 7860     		str	r0, [r7, #4]
 6216 0008 0B46     		mov	r3, r1
 6217 000a FB70     		strb	r3, [r7, #3]
 6218 000c 1346     		mov	r3, r2	@ movhi
 6219 000e 3B80     		strh	r3, [r7]	@ movhi
1091:gfx.c         ****             // map to logical orientation
1092:gfx.c         ****             ;
1093:gfx.c         ****         }
 6220              		.loc 1 1093 0
 6221 0010 00BF     		nop
 6222 0012 0C37     		adds	r7, r7, #12
 6223              		.cfi_def_cfa_offset 4
 6224 0014 BD46     		mov	sp, r7
 6225              		.cfi_def_cfa_register 13
 6226              		@ sp needed
 6227 0016 80BC     		pop	{r7}
 6228              		.cfi_restore 7
 6229              		.cfi_def_cfa_offset 0
 6230 0018 7047     		bx	lr
 6231              		.cfi_endproc
 6232              	.LFE113:
 6233              		.size	GFXscrollRight, .-GFXscrollRight
 6234 001a 00BF     		.text
 6235              	.Letext0:
 6236              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6237              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6238              		.file 4 "gfx_font.h"
 6239              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 6240              		.file 6 "gfx.h"
 6241              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 6242              		.file 8 "Generated_Source\\PSoC5/Decoder_1.h"
 6243              		.file 9 "ssd1306.h"
 6244              		.section	.debug_info,"",%progbits
 6245              	.Ldebug_info0:
 6246 0000 141B0000 		.4byte	0x1b14
 6247 0004 0400     		.2byte	0x4
 6248 0006 00000000 		.4byte	.Ldebug_abbrev0
 6249 000a 04       		.byte	0x4
 6250 000b 01       		.uleb128 0x1
 6251 000c BD000000 		.4byte	.LASF156
 6252 0010 0C       		.byte	0xc
 6253 0011 71040000 		.4byte	.LASF157
 6254 0015 60030000 		.4byte	.LASF158
 6255 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6256 001d 00000000 		.4byte	0
 6257 0021 00000000 		.4byte	.Ldebug_line0
 6258 0025 02       		.uleb128 0x2
 6259 0026 62040000 		.4byte	.LASF0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 132


 6260 002a 02       		.byte	0x2
 6261 002b 1B       		.byte	0x1b
 6262 002c 30000000 		.4byte	0x30
 6263 0030 03       		.uleb128 0x3
 6264 0031 01       		.byte	0x1
 6265 0032 06       		.byte	0x6
 6266 0033 E0060000 		.4byte	.LASF2
 6267 0037 02       		.uleb128 0x2
 6268 0038 57050000 		.4byte	.LASF1
 6269 003c 02       		.byte	0x2
 6270 003d 1D       		.byte	0x1d
 6271 003e 42000000 		.4byte	0x42
 6272 0042 03       		.uleb128 0x3
 6273 0043 01       		.byte	0x1
 6274 0044 08       		.byte	0x8
 6275 0045 26060000 		.4byte	.LASF3
 6276 0049 02       		.uleb128 0x2
 6277 004a E8030000 		.4byte	.LASF4
 6278 004e 02       		.byte	0x2
 6279 004f 29       		.byte	0x29
 6280 0050 54000000 		.4byte	0x54
 6281 0054 03       		.uleb128 0x3
 6282 0055 02       		.byte	0x2
 6283 0056 05       		.byte	0x5
 6284 0057 B5040000 		.4byte	.LASF5
 6285 005b 02       		.uleb128 0x2
 6286 005c 55020000 		.4byte	.LASF6
 6287 0060 02       		.byte	0x2
 6288 0061 2B       		.byte	0x2b
 6289 0062 66000000 		.4byte	0x66
 6290 0066 03       		.uleb128 0x3
 6291 0067 02       		.byte	0x2
 6292 0068 07       		.byte	0x7
 6293 0069 F2060000 		.4byte	.LASF7
 6294 006d 02       		.uleb128 0x2
 6295 006e A6000000 		.4byte	.LASF8
 6296 0072 02       		.byte	0x2
 6297 0073 3F       		.byte	0x3f
 6298 0074 78000000 		.4byte	0x78
 6299 0078 03       		.uleb128 0x3
 6300 0079 04       		.byte	0x4
 6301 007a 05       		.byte	0x5
 6302 007b BF040000 		.4byte	.LASF9
 6303 007f 02       		.uleb128 0x2
 6304 0080 3B060000 		.4byte	.LASF10
 6305 0084 02       		.byte	0x2
 6306 0085 41       		.byte	0x41
 6307 0086 8A000000 		.4byte	0x8a
 6308 008a 03       		.uleb128 0x3
 6309 008b 04       		.byte	0x4
 6310 008c 07       		.byte	0x7
 6311 008d A3050000 		.4byte	.LASF11
 6312 0091 03       		.uleb128 0x3
 6313 0092 08       		.byte	0x8
 6314 0093 05       		.byte	0x5
 6315 0094 32030000 		.4byte	.LASF12
 6316 0098 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 133


 6317 0099 08       		.byte	0x8
 6318 009a 07       		.byte	0x7
 6319 009b 00020000 		.4byte	.LASF13
 6320 009f 04       		.uleb128 0x4
 6321 00a0 04       		.byte	0x4
 6322 00a1 05       		.byte	0x5
 6323 00a2 696E7400 		.ascii	"int\000"
 6324 00a6 03       		.uleb128 0x3
 6325 00a7 04       		.byte	0x4
 6326 00a8 07       		.byte	0x7
 6327 00a9 94000000 		.4byte	.LASF14
 6328 00ad 02       		.uleb128 0x2
 6329 00ae A5010000 		.4byte	.LASF15
 6330 00b2 03       		.byte	0x3
 6331 00b3 14       		.byte	0x14
 6332 00b4 25000000 		.4byte	0x25
 6333 00b8 02       		.uleb128 0x2
 6334 00b9 E3020000 		.4byte	.LASF16
 6335 00bd 03       		.byte	0x3
 6336 00be 18       		.byte	0x18
 6337 00bf 37000000 		.4byte	0x37
 6338 00c3 02       		.uleb128 0x2
 6339 00c4 F8010000 		.4byte	.LASF17
 6340 00c8 03       		.byte	0x3
 6341 00c9 20       		.byte	0x20
 6342 00ca 49000000 		.4byte	0x49
 6343 00ce 02       		.uleb128 0x2
 6344 00cf 83040000 		.4byte	.LASF18
 6345 00d3 03       		.byte	0x3
 6346 00d4 24       		.byte	0x24
 6347 00d5 5B000000 		.4byte	0x5b
 6348 00d9 02       		.uleb128 0x2
 6349 00da F4050000 		.4byte	.LASF19
 6350 00de 03       		.byte	0x3
 6351 00df 2C       		.byte	0x2c
 6352 00e0 6D000000 		.4byte	0x6d
 6353 00e4 02       		.uleb128 0x2
 6354 00e5 9C010000 		.4byte	.LASF20
 6355 00e9 03       		.byte	0x3
 6356 00ea 30       		.byte	0x30
 6357 00eb 7F000000 		.4byte	0x7f
 6358 00ef 05       		.uleb128 0x5
 6359 00f0 08       		.byte	0x8
 6360 00f1 04       		.byte	0x4
 6361 00f2 0C       		.byte	0xc
 6362 00f3 40010000 		.4byte	0x140
 6363 00f7 06       		.uleb128 0x6
 6364 00f8 80020000 		.4byte	.LASF21
 6365 00fc 04       		.byte	0x4
 6366 00fd 0D       		.byte	0xd
 6367 00fe CE000000 		.4byte	0xce
 6368 0102 00       		.byte	0
 6369 0103 06       		.uleb128 0x6
 6370 0104 99020000 		.4byte	.LASF22
 6371 0108 04       		.byte	0x4
 6372 0109 0E       		.byte	0xe
 6373 010a B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 134


 6374 010e 02       		.byte	0x2
 6375 010f 06       		.uleb128 0x6
 6376 0110 4C040000 		.4byte	.LASF23
 6377 0114 04       		.byte	0x4
 6378 0115 0E       		.byte	0xe
 6379 0116 B8000000 		.4byte	0xb8
 6380 011a 03       		.byte	0x3
 6381 011b 06       		.uleb128 0x6
 6382 011c A6060000 		.4byte	.LASF24
 6383 0120 04       		.byte	0x4
 6384 0121 0F       		.byte	0xf
 6385 0122 B8000000 		.4byte	0xb8
 6386 0126 04       		.byte	0x4
 6387 0127 06       		.uleb128 0x6
 6388 0128 C1060000 		.4byte	.LASF25
 6389 012c 04       		.byte	0x4
 6390 012d 10       		.byte	0x10
 6391 012e AD000000 		.4byte	0xad
 6392 0132 05       		.byte	0x5
 6393 0133 06       		.uleb128 0x6
 6394 0134 EB020000 		.4byte	.LASF26
 6395 0138 04       		.byte	0x4
 6396 0139 10       		.byte	0x10
 6397 013a AD000000 		.4byte	0xad
 6398 013e 06       		.byte	0x6
 6399 013f 00       		.byte	0
 6400 0140 02       		.uleb128 0x2
 6401 0141 BF020000 		.4byte	.LASF27
 6402 0145 04       		.byte	0x4
 6403 0146 11       		.byte	0x11
 6404 0147 EF000000 		.4byte	0xef
 6405 014b 05       		.uleb128 0x5
 6406 014c 0C       		.byte	0xc
 6407 014d 04       		.byte	0x4
 6408 014e 13       		.byte	0x13
 6409 014f 90010000 		.4byte	0x190
 6410 0153 06       		.uleb128 0x6
 6411 0154 34060000 		.4byte	.LASF28
 6412 0158 04       		.byte	0x4
 6413 0159 14       		.byte	0x14
 6414 015a 90010000 		.4byte	0x190
 6415 015e 00       		.byte	0
 6416 015f 06       		.uleb128 0x6
 6417 0160 FC050000 		.4byte	.LASF29
 6418 0164 04       		.byte	0x4
 6419 0165 15       		.byte	0x15
 6420 0166 96010000 		.4byte	0x196
 6421 016a 04       		.byte	0x4
 6422 016b 06       		.uleb128 0x6
 6423 016c 7A060000 		.4byte	.LASF30
 6424 0170 04       		.byte	0x4
 6425 0171 16       		.byte	0x16
 6426 0172 B8000000 		.4byte	0xb8
 6427 0176 08       		.byte	0x8
 6428 0177 06       		.uleb128 0x6
 6429 0178 0E000000 		.4byte	.LASF31
 6430 017c 04       		.byte	0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 135


 6431 017d 16       		.byte	0x16
 6432 017e B8000000 		.4byte	0xb8
 6433 0182 09       		.byte	0x9
 6434 0183 06       		.uleb128 0x6
 6435 0184 4C020000 		.4byte	.LASF32
 6436 0188 04       		.byte	0x4
 6437 0189 17       		.byte	0x17
 6438 018a B8000000 		.4byte	0xb8
 6439 018e 0A       		.byte	0xa
 6440 018f 00       		.byte	0
 6441 0190 07       		.uleb128 0x7
 6442 0191 04       		.byte	0x4
 6443 0192 B8000000 		.4byte	0xb8
 6444 0196 07       		.uleb128 0x7
 6445 0197 04       		.byte	0x4
 6446 0198 40010000 		.4byte	0x140
 6447 019c 02       		.uleb128 0x2
 6448 019d 1D000000 		.4byte	.LASF33
 6449 01a1 04       		.byte	0x4
 6450 01a2 18       		.byte	0x18
 6451 01a3 4B010000 		.4byte	0x14b
 6452 01a7 08       		.uleb128 0x8
 6453 01a8 18070000 		.4byte	.LASF34
 6454 01ac 05       		.byte	0x5
 6455 01ad E901     		.2byte	0x1e9
 6456 01af 42000000 		.4byte	0x42
 6457 01b3 03       		.uleb128 0x3
 6458 01b4 04       		.byte	0x4
 6459 01b5 04       		.byte	0x4
 6460 01b6 C9010000 		.4byte	.LASF35
 6461 01ba 03       		.uleb128 0x3
 6462 01bb 08       		.byte	0x8
 6463 01bc 04       		.byte	0x4
 6464 01bd 1E070000 		.4byte	.LASF36
 6465 01c1 03       		.uleb128 0x3
 6466 01c2 01       		.byte	0x1
 6467 01c3 08       		.byte	0x8
 6468 01c4 BA020000 		.4byte	.LASF37
 6469 01c8 03       		.uleb128 0x3
 6470 01c9 08       		.byte	0x8
 6471 01ca 04       		.byte	0x4
 6472 01cb 77040000 		.4byte	.LASF38
 6473 01cf 03       		.uleb128 0x3
 6474 01d0 04       		.byte	0x4
 6475 01d1 07       		.byte	0x7
 6476 01d2 9A050000 		.4byte	.LASF39
 6477 01d6 07       		.uleb128 0x7
 6478 01d7 04       		.byte	0x4
 6479 01d8 C1010000 		.4byte	0x1c1
 6480 01dc 09       		.uleb128 0x9
 6481 01dd C4010000 		.4byte	.LASF159
 6482 01e1 24       		.byte	0x24
 6483 01e2 06       		.byte	0x6
 6484 01e3 1C       		.byte	0x1c
 6485 01e4 A9020000 		.4byte	0x2a9
 6486 01e8 06       		.uleb128 0x6
 6487 01e9 7A020000 		.4byte	.LASF40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 136


 6488 01ed 06       		.byte	0x6
 6489 01ee 1E       		.byte	0x1e
 6490 01ef C3000000 		.4byte	0xc3
 6491 01f3 00       		.byte	0
 6492 01f4 06       		.uleb128 0x6
 6493 01f5 95010000 		.4byte	.LASF41
 6494 01f9 06       		.byte	0x6
 6495 01fa 1F       		.byte	0x1f
 6496 01fb C3000000 		.4byte	0xc3
 6497 01ff 02       		.byte	0x2
 6498 0200 06       		.uleb128 0x6
 6499 0201 F3020000 		.4byte	.LASF42
 6500 0205 06       		.byte	0x6
 6501 0206 20       		.byte	0x20
 6502 0207 CE000000 		.4byte	0xce
 6503 020b 04       		.byte	0x4
 6504 020c 06       		.uleb128 0x6
 6505 020d F2030000 		.4byte	.LASF43
 6506 0211 06       		.byte	0x6
 6507 0212 21       		.byte	0x21
 6508 0213 CE000000 		.4byte	0xce
 6509 0217 06       		.byte	0x6
 6510 0218 06       		.uleb128 0x6
 6511 0219 7A010000 		.4byte	.LASF44
 6512 021d 06       		.byte	0x6
 6513 021e 22       		.byte	0x22
 6514 021f CE000000 		.4byte	0xce
 6515 0223 08       		.byte	0x8
 6516 0224 06       		.uleb128 0x6
 6517 0225 E6010000 		.4byte	.LASF45
 6518 0229 06       		.byte	0x6
 6519 022a 23       		.byte	0x23
 6520 022b CE000000 		.4byte	0xce
 6521 022f 0A       		.byte	0xa
 6522 0230 06       		.uleb128 0x6
 6523 0231 DD010000 		.4byte	.LASF46
 6524 0235 06       		.byte	0x6
 6525 0236 24       		.byte	0x24
 6526 0237 CE000000 		.4byte	0xce
 6527 023b 0C       		.byte	0xc
 6528 023c 06       		.uleb128 0x6
 6529 023d EF010000 		.4byte	.LASF47
 6530 0241 06       		.byte	0x6
 6531 0242 25       		.byte	0x25
 6532 0243 CE000000 		.4byte	0xce
 6533 0247 0E       		.byte	0xe
 6534 0248 06       		.uleb128 0x6
 6535 0249 25070000 		.4byte	.LASF48
 6536 024d 06       		.byte	0x6
 6537 024e 26       		.byte	0x26
 6538 024f CE000000 		.4byte	0xce
 6539 0253 10       		.byte	0x10
 6540 0254 06       		.uleb128 0x6
 6541 0255 5B070000 		.4byte	.LASF49
 6542 0259 06       		.byte	0x6
 6543 025a 27       		.byte	0x27
 6544 025b CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 137


 6545 025f 12       		.byte	0x12
 6546 0260 06       		.uleb128 0x6
 6547 0261 A1000000 		.4byte	.LASF50
 6548 0265 06       		.byte	0x6
 6549 0266 28       		.byte	0x28
 6550 0267 CE000000 		.4byte	0xce
 6551 026b 14       		.byte	0x14
 6552 026c 06       		.uleb128 0x6
 6553 026d 50010000 		.4byte	.LASF51
 6554 0271 06       		.byte	0x6
 6555 0272 29       		.byte	0x29
 6556 0273 CE000000 		.4byte	0xce
 6557 0277 16       		.byte	0x16
 6558 0278 06       		.uleb128 0x6
 6559 0279 92050000 		.4byte	.LASF52
 6560 027d 06       		.byte	0x6
 6561 027e 2A       		.byte	0x2a
 6562 027f A9020000 		.4byte	0x2a9
 6563 0283 18       		.byte	0x18
 6564 0284 06       		.uleb128 0x6
 6565 0285 FA040000 		.4byte	.LASF53
 6566 0289 06       		.byte	0x6
 6567 028a 2B       		.byte	0x2b
 6568 028b CE000000 		.4byte	0xce
 6569 028f 1C       		.byte	0x1c
 6570 0290 06       		.uleb128 0x6
 6571 0291 40030000 		.4byte	.LASF54
 6572 0295 06       		.byte	0x6
 6573 0296 2C       		.byte	0x2c
 6574 0297 CE000000 		.4byte	0xce
 6575 029b 1E       		.byte	0x1e
 6576 029c 06       		.uleb128 0x6
 6577 029d C9060000 		.4byte	.LASF55
 6578 02a1 06       		.byte	0x6
 6579 02a2 2D       		.byte	0x2d
 6580 02a3 CE000000 		.4byte	0xce
 6581 02a7 20       		.byte	0x20
 6582 02a8 00       		.byte	0
 6583 02a9 07       		.uleb128 0x7
 6584 02aa 04       		.byte	0x4
 6585 02ab 9C010000 		.4byte	0x19c
 6586 02af 0A       		.uleb128 0xa
 6587 02b0 47465800 		.ascii	"GFX\000"
 6588 02b4 06       		.byte	0x6
 6589 02b5 2E       		.byte	0x2e
 6590 02b6 DC010000 		.4byte	0x1dc
 6591 02ba 0B       		.uleb128 0xb
 6592 02bb 2B000000 		.4byte	.LASF57
 6593 02bf 01       		.byte	0x1
 6594 02c0 4D       		.byte	0x4d
 6595 02c1 00000000 		.4byte	.LFB64
 6596 02c5 7E000000 		.4byte	.LFE64-.LFB64
 6597 02c9 01       		.uleb128 0x1
 6598 02ca 9C       		.byte	0x9c
 6599 02cb F6020000 		.4byte	0x2f6
 6600 02cf 0C       		.uleb128 0xc
 6601 02d0 51050000 		.4byte	.LASF56
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 138


 6602 02d4 01       		.byte	0x1
 6603 02d5 4D       		.byte	0x4d
 6604 02d6 F6020000 		.4byte	0x2f6
 6605 02da 02       		.uleb128 0x2
 6606 02db 91       		.byte	0x91
 6607 02dc 74       		.sleb128 -12
 6608 02dd 0D       		.uleb128 0xd
 6609 02de 7700     		.ascii	"w\000"
 6610 02e0 01       		.byte	0x1
 6611 02e1 4D       		.byte	0x4d
 6612 02e2 C3000000 		.4byte	0xc3
 6613 02e6 02       		.uleb128 0x2
 6614 02e7 91       		.byte	0x91
 6615 02e8 72       		.sleb128 -14
 6616 02e9 0D       		.uleb128 0xd
 6617 02ea 6800     		.ascii	"h\000"
 6618 02ec 01       		.byte	0x1
 6619 02ed 4D       		.byte	0x4d
 6620 02ee C3000000 		.4byte	0xc3
 6621 02f2 02       		.uleb128 0x2
 6622 02f3 91       		.byte	0x91
 6623 02f4 70       		.sleb128 -16
 6624 02f5 00       		.byte	0
 6625 02f6 07       		.uleb128 0x7
 6626 02f7 04       		.byte	0x4
 6627 02f8 AF020000 		.4byte	0x2af
 6628 02fc 0E       		.uleb128 0xe
 6629 02fd 46060000 		.4byte	.LASF58
 6630 0301 01       		.byte	0x1
 6631 0302 62       		.byte	0x62
 6632 0303 00000000 		.4byte	.LFB65
 6633 0307 3E010000 		.4byte	.LFE65-.LFB65
 6634 030b 01       		.uleb128 0x1
 6635 030c 9C       		.byte	0x9c
 6636 030d 0A040000 		.4byte	0x40a
 6637 0311 0C       		.uleb128 0xc
 6638 0312 6B040000 		.4byte	.LASF59
 6639 0316 01       		.byte	0x1
 6640 0317 62       		.byte	0x62
 6641 0318 F6020000 		.4byte	0x2f6
 6642 031c 02       		.uleb128 0x2
 6643 031d 91       		.byte	0x91
 6644 031e 5C       		.sleb128 -36
 6645 031f 0D       		.uleb128 0xd
 6646 0320 783000   		.ascii	"x0\000"
 6647 0323 01       		.byte	0x1
 6648 0324 62       		.byte	0x62
 6649 0325 C3000000 		.4byte	0xc3
 6650 0329 02       		.uleb128 0x2
 6651 032a 91       		.byte	0x91
 6652 032b 5A       		.sleb128 -38
 6653 032c 0D       		.uleb128 0xd
 6654 032d 793000   		.ascii	"y0\000"
 6655 0330 01       		.byte	0x1
 6656 0331 62       		.byte	0x62
 6657 0332 C3000000 		.4byte	0xc3
 6658 0336 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 139


 6659 0337 91       		.byte	0x91
 6660 0338 58       		.sleb128 -40
 6661 0339 0D       		.uleb128 0xd
 6662 033a 783100   		.ascii	"x1\000"
 6663 033d 01       		.byte	0x1
 6664 033e 62       		.byte	0x62
 6665 033f C3000000 		.4byte	0xc3
 6666 0343 02       		.uleb128 0x2
 6667 0344 91       		.byte	0x91
 6668 0345 56       		.sleb128 -42
 6669 0346 0D       		.uleb128 0xd
 6670 0347 793100   		.ascii	"y1\000"
 6671 034a 01       		.byte	0x1
 6672 034b 62       		.byte	0x62
 6673 034c C3000000 		.4byte	0xc3
 6674 0350 02       		.uleb128 0x2
 6675 0351 91       		.byte	0x91
 6676 0352 00       		.sleb128 0
 6677 0353 0C       		.uleb128 0xc
 6678 0354 40050000 		.4byte	.LASF60
 6679 0358 01       		.byte	0x1
 6680 0359 63       		.byte	0x63
 6681 035a CE000000 		.4byte	0xce
 6682 035e 02       		.uleb128 0x2
 6683 035f 91       		.byte	0x91
 6684 0360 04       		.sleb128 4
 6685 0361 0F       		.uleb128 0xf
 6686 0362 20030000 		.4byte	.LASF61
 6687 0366 01       		.byte	0x1
 6688 0367 64       		.byte	0x64
 6689 0368 C3000000 		.4byte	0xc3
 6690 036c 02       		.uleb128 0x2
 6691 036d 91       		.byte	0x91
 6692 036e 72       		.sleb128 -14
 6693 036f 10       		.uleb128 0x10
 6694 0370 647800   		.ascii	"dx\000"
 6695 0373 01       		.byte	0x1
 6696 0374 6F       		.byte	0x6f
 6697 0375 C3000000 		.4byte	0xc3
 6698 0379 02       		.uleb128 0x2
 6699 037a 91       		.byte	0x91
 6700 037b 68       		.sleb128 -24
 6701 037c 10       		.uleb128 0x10
 6702 037d 647900   		.ascii	"dy\000"
 6703 0380 01       		.byte	0x1
 6704 0381 6F       		.byte	0x6f
 6705 0382 C3000000 		.4byte	0xc3
 6706 0386 02       		.uleb128 0x2
 6707 0387 91       		.byte	0x91
 6708 0388 66       		.sleb128 -26
 6709 0389 10       		.uleb128 0x10
 6710 038a 65727200 		.ascii	"err\000"
 6711 038e 01       		.byte	0x1
 6712 038f 73       		.byte	0x73
 6713 0390 C3000000 		.4byte	0xc3
 6714 0394 02       		.uleb128 0x2
 6715 0395 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 140


 6716 0396 76       		.sleb128 -10
 6717 0397 0F       		.uleb128 0xf
 6718 0398 66050000 		.4byte	.LASF62
 6719 039c 01       		.byte	0x1
 6720 039d 74       		.byte	0x74
 6721 039e C3000000 		.4byte	0xc3
 6722 03a2 02       		.uleb128 0x2
 6723 03a3 91       		.byte	0x91
 6724 03a4 74       		.sleb128 -12
 6725 03a5 11       		.uleb128 0x11
 6726 03a6 50000000 		.4byte	.LBB2
 6727 03aa 0C000000 		.4byte	.LBE2-.LBB2
 6728 03ae BF030000 		.4byte	0x3bf
 6729 03b2 10       		.uleb128 0x10
 6730 03b3 7400     		.ascii	"t\000"
 6731 03b5 01       		.byte	0x1
 6732 03b6 66       		.byte	0x66
 6733 03b7 C3000000 		.4byte	0xc3
 6734 03bb 02       		.uleb128 0x2
 6735 03bc 91       		.byte	0x91
 6736 03bd 70       		.sleb128 -16
 6737 03be 00       		.byte	0
 6738 03bf 11       		.uleb128 0x11
 6739 03c0 5C000000 		.4byte	.LBB3
 6740 03c4 0C000000 		.4byte	.LBE3-.LBB3
 6741 03c8 D9030000 		.4byte	0x3d9
 6742 03cc 10       		.uleb128 0x10
 6743 03cd 7400     		.ascii	"t\000"
 6744 03cf 01       		.byte	0x1
 6745 03d0 67       		.byte	0x67
 6746 03d1 C3000000 		.4byte	0xc3
 6747 03d5 02       		.uleb128 0x2
 6748 03d6 91       		.byte	0x91
 6749 03d7 6E       		.sleb128 -18
 6750 03d8 00       		.byte	0
 6751 03d9 11       		.uleb128 0x11
 6752 03da 74000000 		.4byte	.LBB4
 6753 03de 0C000000 		.4byte	.LBE4-.LBB4
 6754 03e2 F3030000 		.4byte	0x3f3
 6755 03e6 10       		.uleb128 0x10
 6756 03e7 7400     		.ascii	"t\000"
 6757 03e9 01       		.byte	0x1
 6758 03ea 6B       		.byte	0x6b
 6759 03eb C3000000 		.4byte	0xc3
 6760 03ef 02       		.uleb128 0x2
 6761 03f0 91       		.byte	0x91
 6762 03f1 6C       		.sleb128 -20
 6763 03f2 00       		.byte	0
 6764 03f3 12       		.uleb128 0x12
 6765 03f4 80000000 		.4byte	.LBB5
 6766 03f8 0C000000 		.4byte	.LBE5-.LBB5
 6767 03fc 10       		.uleb128 0x10
 6768 03fd 7400     		.ascii	"t\000"
 6769 03ff 01       		.byte	0x1
 6770 0400 6C       		.byte	0x6c
 6771 0401 C3000000 		.4byte	0xc3
 6772 0405 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 141


 6773 0406 91       		.byte	0x91
 6774 0407 6A       		.sleb128 -22
 6775 0408 00       		.byte	0
 6776 0409 00       		.byte	0
 6777 040a 0B       		.uleb128 0xb
 6778 040b D6040000 		.4byte	.LASF63
 6779 040f 01       		.byte	0x1
 6780 0410 8A       		.byte	0x8a
 6781 0411 00000000 		.4byte	.LFB66
 6782 0415 12000000 		.4byte	.LFE66-.LFB66
 6783 0419 01       		.uleb128 0x1
 6784 041a 9C       		.byte	0x9c
 6785 041b 2E040000 		.4byte	0x42e
 6786 041f 0C       		.uleb128 0xc
 6787 0420 6B040000 		.4byte	.LASF59
 6788 0424 01       		.byte	0x1
 6789 0425 8A       		.byte	0x8a
 6790 0426 F6020000 		.4byte	0x2f6
 6791 042a 02       		.uleb128 0x2
 6792 042b 91       		.byte	0x91
 6793 042c 74       		.sleb128 -12
 6794 042d 00       		.byte	0
 6795 042e 0E       		.uleb128 0xe
 6796 042f B0000000 		.4byte	.LASF64
 6797 0433 01       		.byte	0x1
 6798 0434 8F       		.byte	0x8f
 6799 0435 00000000 		.4byte	.LFB67
 6800 0439 E0010000 		.4byte	.LFE67-.LFB67
 6801 043d 01       		.uleb128 0x1
 6802 043e 9C       		.byte	0x9c
 6803 043f A8040000 		.4byte	0x4a8
 6804 0443 0C       		.uleb128 0xc
 6805 0444 6B040000 		.4byte	.LASF59
 6806 0448 01       		.byte	0x1
 6807 0449 8F       		.byte	0x8f
 6808 044a F6020000 		.4byte	0x2f6
 6809 044e 02       		.uleb128 0x2
 6810 044f 91       		.byte	0x91
 6811 0450 6C       		.sleb128 -20
 6812 0451 0D       		.uleb128 0xd
 6813 0452 7800     		.ascii	"x\000"
 6814 0454 01       		.byte	0x1
 6815 0455 8F       		.byte	0x8f
 6816 0456 C3000000 		.4byte	0xc3
 6817 045a 02       		.uleb128 0x2
 6818 045b 91       		.byte	0x91
 6819 045c 6A       		.sleb128 -22
 6820 045d 0D       		.uleb128 0xd
 6821 045e 7900     		.ascii	"y\000"
 6822 0460 01       		.byte	0x1
 6823 0461 8F       		.byte	0x8f
 6824 0462 C3000000 		.4byte	0xc3
 6825 0466 02       		.uleb128 0x2
 6826 0467 91       		.byte	0x91
 6827 0468 68       		.sleb128 -24
 6828 0469 0C       		.uleb128 0xc
 6829 046a 40050000 		.4byte	.LASF60
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 142


 6830 046e 01       		.byte	0x1
 6831 046f 8F       		.byte	0x8f
 6832 0470 CE000000 		.4byte	0xce
 6833 0474 02       		.uleb128 0x2
 6834 0475 91       		.byte	0x91
 6835 0476 66       		.sleb128 -26
 6836 0477 11       		.uleb128 0x11
 6837 0478 5E000000 		.4byte	.LBB6
 6838 047c 0C000000 		.4byte	.LBE6-.LBB6
 6839 0480 91040000 		.4byte	0x491
 6840 0484 10       		.uleb128 0x10
 6841 0485 7400     		.ascii	"t\000"
 6842 0487 01       		.byte	0x1
 6843 0488 96       		.byte	0x96
 6844 0489 C3000000 		.4byte	0xc3
 6845 048d 02       		.uleb128 0x2
 6846 048e 91       		.byte	0x91
 6847 048f 76       		.sleb128 -10
 6848 0490 00       		.byte	0
 6849 0491 12       		.uleb128 0x12
 6850 0492 AA000000 		.4byte	.LBB7
 6851 0496 0C000000 		.4byte	.LBE7-.LBB7
 6852 049a 10       		.uleb128 0x10
 6853 049b 7400     		.ascii	"t\000"
 6854 049d 01       		.byte	0x1
 6855 049e 9E       		.byte	0x9e
 6856 049f C3000000 		.4byte	0xc3
 6857 04a3 02       		.uleb128 0x2
 6858 04a4 91       		.byte	0x91
 6859 04a5 74       		.sleb128 -12
 6860 04a6 00       		.byte	0
 6861 04a7 00       		.byte	0
 6862 04a8 0E       		.uleb128 0xe
 6863 04a9 C5050000 		.4byte	.LASF65
 6864 04ad 01       		.byte	0x1
 6865 04ae AD       		.byte	0xad
 6866 04af 00000000 		.4byte	.LFB68
 6867 04b3 32000000 		.4byte	.LFE68-.LFB68
 6868 04b7 01       		.uleb128 0x1
 6869 04b8 9C       		.byte	0x9c
 6870 04b9 F2040000 		.4byte	0x4f2
 6871 04bd 0C       		.uleb128 0xc
 6872 04be 6B040000 		.4byte	.LASF59
 6873 04c2 01       		.byte	0x1
 6874 04c3 AD       		.byte	0xad
 6875 04c4 F6020000 		.4byte	0x2f6
 6876 04c8 02       		.uleb128 0x2
 6877 04c9 91       		.byte	0x91
 6878 04ca 74       		.sleb128 -12
 6879 04cb 0D       		.uleb128 0xd
 6880 04cc 7800     		.ascii	"x\000"
 6881 04ce 01       		.byte	0x1
 6882 04cf AD       		.byte	0xad
 6883 04d0 C3000000 		.4byte	0xc3
 6884 04d4 02       		.uleb128 0x2
 6885 04d5 91       		.byte	0x91
 6886 04d6 72       		.sleb128 -14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 143


 6887 04d7 0D       		.uleb128 0xd
 6888 04d8 7900     		.ascii	"y\000"
 6889 04da 01       		.byte	0x1
 6890 04db AD       		.byte	0xad
 6891 04dc C3000000 		.4byte	0xc3
 6892 04e0 02       		.uleb128 0x2
 6893 04e1 91       		.byte	0x91
 6894 04e2 70       		.sleb128 -16
 6895 04e3 0C       		.uleb128 0xc
 6896 04e4 40050000 		.4byte	.LASF60
 6897 04e8 01       		.byte	0x1
 6898 04e9 AD       		.byte	0xad
 6899 04ea CE000000 		.4byte	0xce
 6900 04ee 02       		.uleb128 0x2
 6901 04ef 91       		.byte	0x91
 6902 04f0 6E       		.sleb128 -18
 6903 04f1 00       		.byte	0
 6904 04f2 0E       		.uleb128 0xe
 6905 04f3 2F020000 		.4byte	.LASF66
 6906 04f7 01       		.byte	0x1
 6907 04f8 B4       		.byte	0xb4
 6908 04f9 00000000 		.4byte	.LFB69
 6909 04fd 3A000000 		.4byte	.LFE69-.LFB69
 6910 0501 01       		.uleb128 0x1
 6911 0502 9C       		.byte	0x9c
 6912 0503 48050000 		.4byte	0x548
 6913 0507 0C       		.uleb128 0xc
 6914 0508 6B040000 		.4byte	.LASF59
 6915 050c 01       		.byte	0x1
 6916 050d B4       		.byte	0xb4
 6917 050e F6020000 		.4byte	0x2f6
 6918 0512 02       		.uleb128 0x2
 6919 0513 91       		.byte	0x91
 6920 0514 74       		.sleb128 -12
 6921 0515 0D       		.uleb128 0xd
 6922 0516 7800     		.ascii	"x\000"
 6923 0518 01       		.byte	0x1
 6924 0519 B4       		.byte	0xb4
 6925 051a C3000000 		.4byte	0xc3
 6926 051e 02       		.uleb128 0x2
 6927 051f 91       		.byte	0x91
 6928 0520 72       		.sleb128 -14
 6929 0521 0D       		.uleb128 0xd
 6930 0522 7900     		.ascii	"y\000"
 6931 0524 01       		.byte	0x1
 6932 0525 B4       		.byte	0xb4
 6933 0526 C3000000 		.4byte	0xc3
 6934 052a 02       		.uleb128 0x2
 6935 052b 91       		.byte	0x91
 6936 052c 70       		.sleb128 -16
 6937 052d 0D       		.uleb128 0xd
 6938 052e 6800     		.ascii	"h\000"
 6939 0530 01       		.byte	0x1
 6940 0531 B5       		.byte	0xb5
 6941 0532 C3000000 		.4byte	0xc3
 6942 0536 02       		.uleb128 0x2
 6943 0537 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 144


 6944 0538 6E       		.sleb128 -18
 6945 0539 0C       		.uleb128 0xc
 6946 053a 40050000 		.4byte	.LASF60
 6947 053e 01       		.byte	0x1
 6948 053f B5       		.byte	0xb5
 6949 0540 CE000000 		.4byte	0xce
 6950 0544 02       		.uleb128 0x2
 6951 0545 91       		.byte	0x91
 6952 0546 00       		.sleb128 0
 6953 0547 00       		.byte	0
 6954 0548 0E       		.uleb128 0xe
 6955 0549 68010000 		.4byte	.LASF67
 6956 054d 01       		.byte	0x1
 6957 054e BE       		.byte	0xbe
 6958 054f 00000000 		.4byte	.LFB70
 6959 0553 3A000000 		.4byte	.LFE70-.LFB70
 6960 0557 01       		.uleb128 0x1
 6961 0558 9C       		.byte	0x9c
 6962 0559 9E050000 		.4byte	0x59e
 6963 055d 0C       		.uleb128 0xc
 6964 055e 6B040000 		.4byte	.LASF59
 6965 0562 01       		.byte	0x1
 6966 0563 BE       		.byte	0xbe
 6967 0564 F6020000 		.4byte	0x2f6
 6968 0568 02       		.uleb128 0x2
 6969 0569 91       		.byte	0x91
 6970 056a 74       		.sleb128 -12
 6971 056b 0D       		.uleb128 0xd
 6972 056c 7800     		.ascii	"x\000"
 6973 056e 01       		.byte	0x1
 6974 056f BE       		.byte	0xbe
 6975 0570 C3000000 		.4byte	0xc3
 6976 0574 02       		.uleb128 0x2
 6977 0575 91       		.byte	0x91
 6978 0576 72       		.sleb128 -14
 6979 0577 0D       		.uleb128 0xd
 6980 0578 7900     		.ascii	"y\000"
 6981 057a 01       		.byte	0x1
 6982 057b BE       		.byte	0xbe
 6983 057c C3000000 		.4byte	0xc3
 6984 0580 02       		.uleb128 0x2
 6985 0581 91       		.byte	0x91
 6986 0582 70       		.sleb128 -16
 6987 0583 0D       		.uleb128 0xd
 6988 0584 7700     		.ascii	"w\000"
 6989 0586 01       		.byte	0x1
 6990 0587 BF       		.byte	0xbf
 6991 0588 C3000000 		.4byte	0xc3
 6992 058c 02       		.uleb128 0x2
 6993 058d 91       		.byte	0x91
 6994 058e 6E       		.sleb128 -18
 6995 058f 0C       		.uleb128 0xc
 6996 0590 40050000 		.4byte	.LASF60
 6997 0594 01       		.byte	0x1
 6998 0595 BF       		.byte	0xbf
 6999 0596 CE000000 		.4byte	0xce
 7000 059a 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 145


 7001 059b 91       		.byte	0x91
 7002 059c 00       		.sleb128 0
 7003 059d 00       		.byte	0
 7004 059e 0E       		.uleb128 0xe
 7005 059f 2F050000 		.4byte	.LASF68
 7006 05a3 01       		.byte	0x1
 7007 05a4 C6       		.byte	0xc6
 7008 05a5 00000000 		.4byte	.LFB71
 7009 05a9 40000000 		.4byte	.LFE71-.LFB71
 7010 05ad 01       		.uleb128 0x1
 7011 05ae 9C       		.byte	0x9c
 7012 05af 00060000 		.4byte	0x600
 7013 05b3 0C       		.uleb128 0xc
 7014 05b4 6B040000 		.4byte	.LASF59
 7015 05b8 01       		.byte	0x1
 7016 05b9 C6       		.byte	0xc6
 7017 05ba F6020000 		.4byte	0x2f6
 7018 05be 02       		.uleb128 0x2
 7019 05bf 91       		.byte	0x91
 7020 05c0 74       		.sleb128 -12
 7021 05c1 0D       		.uleb128 0xd
 7022 05c2 7800     		.ascii	"x\000"
 7023 05c4 01       		.byte	0x1
 7024 05c5 C6       		.byte	0xc6
 7025 05c6 C3000000 		.4byte	0xc3
 7026 05ca 02       		.uleb128 0x2
 7027 05cb 91       		.byte	0x91
 7028 05cc 72       		.sleb128 -14
 7029 05cd 0D       		.uleb128 0xd
 7030 05ce 7900     		.ascii	"y\000"
 7031 05d0 01       		.byte	0x1
 7032 05d1 C6       		.byte	0xc6
 7033 05d2 C3000000 		.4byte	0xc3
 7034 05d6 02       		.uleb128 0x2
 7035 05d7 91       		.byte	0x91
 7036 05d8 70       		.sleb128 -16
 7037 05d9 0D       		.uleb128 0xd
 7038 05da 7700     		.ascii	"w\000"
 7039 05dc 01       		.byte	0x1
 7040 05dd C6       		.byte	0xc6
 7041 05de C3000000 		.4byte	0xc3
 7042 05e2 02       		.uleb128 0x2
 7043 05e3 91       		.byte	0x91
 7044 05e4 6E       		.sleb128 -18
 7045 05e5 0D       		.uleb128 0xd
 7046 05e6 6800     		.ascii	"h\000"
 7047 05e8 01       		.byte	0x1
 7048 05e9 C6       		.byte	0xc6
 7049 05ea C3000000 		.4byte	0xc3
 7050 05ee 02       		.uleb128 0x2
 7051 05ef 91       		.byte	0x91
 7052 05f0 00       		.sleb128 0
 7053 05f1 0C       		.uleb128 0xc
 7054 05f2 40050000 		.4byte	.LASF60
 7055 05f6 01       		.byte	0x1
 7056 05f7 C7       		.byte	0xc7
 7057 05f8 CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 146


 7058 05fc 02       		.uleb128 0x2
 7059 05fd 91       		.byte	0x91
 7060 05fe 04       		.sleb128 4
 7061 05ff 00       		.byte	0
 7062 0600 0B       		.uleb128 0xb
 7063 0601 1A060000 		.4byte	.LASF69
 7064 0605 01       		.byte	0x1
 7065 0606 CC       		.byte	0xcc
 7066 0607 00000000 		.4byte	.LFB72
 7067 060b 12000000 		.4byte	.LFE72-.LFB72
 7068 060f 01       		.uleb128 0x1
 7069 0610 9C       		.byte	0x9c
 7070 0611 24060000 		.4byte	0x624
 7071 0615 0C       		.uleb128 0xc
 7072 0616 6B040000 		.4byte	.LASF59
 7073 061a 01       		.byte	0x1
 7074 061b CC       		.byte	0xcc
 7075 061c F6020000 		.4byte	0x2f6
 7076 0620 02       		.uleb128 0x2
 7077 0621 91       		.byte	0x91
 7078 0622 74       		.sleb128 -12
 7079 0623 00       		.byte	0
 7080 0624 0E       		.uleb128 0xe
 7081 0625 0E040000 		.4byte	.LASF70
 7082 0629 01       		.byte	0x1
 7083 062a D2       		.byte	0xd2
 7084 062b 00000000 		.4byte	.LFB73
 7085 062f 4C000000 		.4byte	.LFE73-.LFB73
 7086 0633 01       		.uleb128 0x1
 7087 0634 9C       		.byte	0x9c
 7088 0635 7A060000 		.4byte	0x67a
 7089 0639 0C       		.uleb128 0xc
 7090 063a 6B040000 		.4byte	.LASF59
 7091 063e 01       		.byte	0x1
 7092 063f D2       		.byte	0xd2
 7093 0640 F6020000 		.4byte	0x2f6
 7094 0644 02       		.uleb128 0x2
 7095 0645 91       		.byte	0x91
 7096 0646 6C       		.sleb128 -20
 7097 0647 0D       		.uleb128 0xd
 7098 0648 7800     		.ascii	"x\000"
 7099 064a 01       		.byte	0x1
 7100 064b D2       		.byte	0xd2
 7101 064c C3000000 		.4byte	0xc3
 7102 0650 02       		.uleb128 0x2
 7103 0651 91       		.byte	0x91
 7104 0652 6A       		.sleb128 -22
 7105 0653 0D       		.uleb128 0xd
 7106 0654 7900     		.ascii	"y\000"
 7107 0656 01       		.byte	0x1
 7108 0657 D2       		.byte	0xd2
 7109 0658 C3000000 		.4byte	0xc3
 7110 065c 02       		.uleb128 0x2
 7111 065d 91       		.byte	0x91
 7112 065e 68       		.sleb128 -24
 7113 065f 0D       		.uleb128 0xd
 7114 0660 6800     		.ascii	"h\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 147


 7115 0662 01       		.byte	0x1
 7116 0663 D3       		.byte	0xd3
 7117 0664 C3000000 		.4byte	0xc3
 7118 0668 02       		.uleb128 0x2
 7119 0669 91       		.byte	0x91
 7120 066a 66       		.sleb128 -26
 7121 066b 0C       		.uleb128 0xc
 7122 066c 40050000 		.4byte	.LASF60
 7123 0670 01       		.byte	0x1
 7124 0671 D3       		.byte	0xd3
 7125 0672 CE000000 		.4byte	0xce
 7126 0676 02       		.uleb128 0x2
 7127 0677 91       		.byte	0x91
 7128 0678 00       		.sleb128 0
 7129 0679 00       		.byte	0
 7130 067a 0E       		.uleb128 0xe
 7131 067b 17020000 		.4byte	.LASF71
 7132 067f 01       		.byte	0x1
 7133 0680 DA       		.byte	0xda
 7134 0681 00000000 		.4byte	.LFB74
 7135 0685 4A000000 		.4byte	.LFE74-.LFB74
 7136 0689 01       		.uleb128 0x1
 7137 068a 9C       		.byte	0x9c
 7138 068b D0060000 		.4byte	0x6d0
 7139 068f 0C       		.uleb128 0xc
 7140 0690 6B040000 		.4byte	.LASF59
 7141 0694 01       		.byte	0x1
 7142 0695 DA       		.byte	0xda
 7143 0696 F6020000 		.4byte	0x2f6
 7144 069a 02       		.uleb128 0x2
 7145 069b 91       		.byte	0x91
 7146 069c 74       		.sleb128 -12
 7147 069d 0D       		.uleb128 0xd
 7148 069e 7800     		.ascii	"x\000"
 7149 06a0 01       		.byte	0x1
 7150 06a1 DA       		.byte	0xda
 7151 06a2 C3000000 		.4byte	0xc3
 7152 06a6 02       		.uleb128 0x2
 7153 06a7 91       		.byte	0x91
 7154 06a8 72       		.sleb128 -14
 7155 06a9 0D       		.uleb128 0xd
 7156 06aa 7900     		.ascii	"y\000"
 7157 06ac 01       		.byte	0x1
 7158 06ad DA       		.byte	0xda
 7159 06ae C3000000 		.4byte	0xc3
 7160 06b2 02       		.uleb128 0x2
 7161 06b3 91       		.byte	0x91
 7162 06b4 70       		.sleb128 -16
 7163 06b5 0D       		.uleb128 0xd
 7164 06b6 7700     		.ascii	"w\000"
 7165 06b8 01       		.byte	0x1
 7166 06b9 DB       		.byte	0xdb
 7167 06ba C3000000 		.4byte	0xc3
 7168 06be 02       		.uleb128 0x2
 7169 06bf 91       		.byte	0x91
 7170 06c0 6E       		.sleb128 -18
 7171 06c1 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 148


 7172 06c2 40050000 		.4byte	.LASF60
 7173 06c6 01       		.byte	0x1
 7174 06c7 DB       		.byte	0xdb
 7175 06c8 CE000000 		.4byte	0xce
 7176 06cc 02       		.uleb128 0x2
 7177 06cd 91       		.byte	0x91
 7178 06ce 00       		.sleb128 0
 7179 06cf 00       		.byte	0
 7180 06d0 0E       		.uleb128 0xe
 7181 06d1 19050000 		.4byte	.LASF72
 7182 06d5 01       		.byte	0x1
 7183 06d6 E0       		.byte	0xe0
 7184 06d7 00000000 		.4byte	.LFB75
 7185 06db 5E000000 		.4byte	.LFE75-.LFB75
 7186 06df 01       		.uleb128 0x1
 7187 06e0 9C       		.byte	0x9c
 7188 06e1 48070000 		.4byte	0x748
 7189 06e5 0C       		.uleb128 0xc
 7190 06e6 6B040000 		.4byte	.LASF59
 7191 06ea 01       		.byte	0x1
 7192 06eb E0       		.byte	0xe0
 7193 06ec F6020000 		.4byte	0x2f6
 7194 06f0 02       		.uleb128 0x2
 7195 06f1 91       		.byte	0x91
 7196 06f2 6C       		.sleb128 -20
 7197 06f3 0D       		.uleb128 0xd
 7198 06f4 7800     		.ascii	"x\000"
 7199 06f6 01       		.byte	0x1
 7200 06f7 E0       		.byte	0xe0
 7201 06f8 C3000000 		.4byte	0xc3
 7202 06fc 02       		.uleb128 0x2
 7203 06fd 91       		.byte	0x91
 7204 06fe 6A       		.sleb128 -22
 7205 06ff 0D       		.uleb128 0xd
 7206 0700 7900     		.ascii	"y\000"
 7207 0702 01       		.byte	0x1
 7208 0703 E0       		.byte	0xe0
 7209 0704 C3000000 		.4byte	0xc3
 7210 0708 02       		.uleb128 0x2
 7211 0709 91       		.byte	0x91
 7212 070a 68       		.sleb128 -24
 7213 070b 0D       		.uleb128 0xd
 7214 070c 7700     		.ascii	"w\000"
 7215 070e 01       		.byte	0x1
 7216 070f E0       		.byte	0xe0
 7217 0710 C3000000 		.4byte	0xc3
 7218 0714 02       		.uleb128 0x2
 7219 0715 91       		.byte	0x91
 7220 0716 66       		.sleb128 -26
 7221 0717 0D       		.uleb128 0xd
 7222 0718 6800     		.ascii	"h\000"
 7223 071a 01       		.byte	0x1
 7224 071b E0       		.byte	0xe0
 7225 071c C3000000 		.4byte	0xc3
 7226 0720 02       		.uleb128 0x2
 7227 0721 91       		.byte	0x91
 7228 0722 00       		.sleb128 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 149


 7229 0723 0C       		.uleb128 0xc
 7230 0724 40050000 		.4byte	.LASF60
 7231 0728 01       		.byte	0x1
 7232 0729 E1       		.byte	0xe1
 7233 072a CE000000 		.4byte	0xce
 7234 072e 02       		.uleb128 0x2
 7235 072f 91       		.byte	0x91
 7236 0730 04       		.sleb128 4
 7237 0731 12       		.uleb128 0x12
 7238 0732 1A000000 		.4byte	.LBB8
 7239 0736 3C000000 		.4byte	.LBE8-.LBB8
 7240 073a 10       		.uleb128 0x10
 7241 073b 6900     		.ascii	"i\000"
 7242 073d 01       		.byte	0x1
 7243 073e E3       		.byte	0xe3
 7244 073f C3000000 		.4byte	0xc3
 7245 0743 02       		.uleb128 0x2
 7246 0744 91       		.byte	0x91
 7247 0745 76       		.sleb128 -10
 7248 0746 00       		.byte	0
 7249 0747 00       		.byte	0
 7250 0748 0E       		.uleb128 0xe
 7251 0749 05070000 		.4byte	.LASF73
 7252 074d 01       		.byte	0x1
 7253 074e E8       		.byte	0xe8
 7254 074f 00000000 		.4byte	.LFB76
 7255 0753 32000000 		.4byte	.LFE76-.LFB76
 7256 0757 01       		.uleb128 0x1
 7257 0758 9C       		.byte	0x9c
 7258 0759 7A070000 		.4byte	0x77a
 7259 075d 0C       		.uleb128 0xc
 7260 075e 6B040000 		.4byte	.LASF59
 7261 0762 01       		.byte	0x1
 7262 0763 E8       		.byte	0xe8
 7263 0764 F6020000 		.4byte	0x2f6
 7264 0768 02       		.uleb128 0x2
 7265 0769 91       		.byte	0x91
 7266 076a 74       		.sleb128 -12
 7267 076b 0C       		.uleb128 0xc
 7268 076c 40050000 		.4byte	.LASF60
 7269 0770 01       		.byte	0x1
 7270 0771 E8       		.byte	0xe8
 7271 0772 CE000000 		.4byte	0xce
 7272 0776 02       		.uleb128 0x2
 7273 0777 91       		.byte	0x91
 7274 0778 72       		.sleb128 -14
 7275 0779 00       		.byte	0
 7276 077a 0E       		.uleb128 0xe
 7277 077b 8D020000 		.4byte	.LASF74
 7278 077f 01       		.byte	0x1
 7279 0780 ED       		.byte	0xed
 7280 0781 00000000 		.4byte	.LFB77
 7281 0785 D0000000 		.4byte	.LFE77-.LFB77
 7282 0789 01       		.uleb128 0x1
 7283 078a 9C       		.byte	0x9c
 7284 078b 10080000 		.4byte	0x810
 7285 078f 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 150


 7286 0790 6B040000 		.4byte	.LASF59
 7287 0794 01       		.byte	0x1
 7288 0795 ED       		.byte	0xed
 7289 0796 F6020000 		.4byte	0x2f6
 7290 079a 02       		.uleb128 0x2
 7291 079b 91       		.byte	0x91
 7292 079c 6C       		.sleb128 -20
 7293 079d 0D       		.uleb128 0xd
 7294 079e 783000   		.ascii	"x0\000"
 7295 07a1 01       		.byte	0x1
 7296 07a2 ED       		.byte	0xed
 7297 07a3 C3000000 		.4byte	0xc3
 7298 07a7 02       		.uleb128 0x2
 7299 07a8 91       		.byte	0x91
 7300 07a9 6A       		.sleb128 -22
 7301 07aa 0D       		.uleb128 0xd
 7302 07ab 793000   		.ascii	"y0\000"
 7303 07ae 01       		.byte	0x1
 7304 07af ED       		.byte	0xed
 7305 07b0 C3000000 		.4byte	0xc3
 7306 07b4 02       		.uleb128 0x2
 7307 07b5 91       		.byte	0x91
 7308 07b6 68       		.sleb128 -24
 7309 07b7 0D       		.uleb128 0xd
 7310 07b8 783100   		.ascii	"x1\000"
 7311 07bb 01       		.byte	0x1
 7312 07bc ED       		.byte	0xed
 7313 07bd C3000000 		.4byte	0xc3
 7314 07c1 02       		.uleb128 0x2
 7315 07c2 91       		.byte	0x91
 7316 07c3 66       		.sleb128 -26
 7317 07c4 0D       		.uleb128 0xd
 7318 07c5 793100   		.ascii	"y1\000"
 7319 07c8 01       		.byte	0x1
 7320 07c9 ED       		.byte	0xed
 7321 07ca C3000000 		.4byte	0xc3
 7322 07ce 02       		.uleb128 0x2
 7323 07cf 91       		.byte	0x91
 7324 07d0 00       		.sleb128 0
 7325 07d1 0C       		.uleb128 0xc
 7326 07d2 40050000 		.4byte	.LASF60
 7327 07d6 01       		.byte	0x1
 7328 07d7 EE       		.byte	0xee
 7329 07d8 CE000000 		.4byte	0xce
 7330 07dc 02       		.uleb128 0x2
 7331 07dd 91       		.byte	0x91
 7332 07de 04       		.sleb128 4
 7333 07df 11       		.uleb128 0x11
 7334 07e0 32000000 		.4byte	.LBB9
 7335 07e4 0C000000 		.4byte	.LBE9-.LBB9
 7336 07e8 F9070000 		.4byte	0x7f9
 7337 07ec 10       		.uleb128 0x10
 7338 07ed 7400     		.ascii	"t\000"
 7339 07ef 01       		.byte	0x1
 7340 07f0 F1       		.byte	0xf1
 7341 07f1 C3000000 		.4byte	0xc3
 7342 07f5 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 151


 7343 07f6 91       		.byte	0x91
 7344 07f7 76       		.sleb128 -10
 7345 07f8 00       		.byte	0
 7346 07f9 12       		.uleb128 0x12
 7347 07fa 7A000000 		.4byte	.LBB10
 7348 07fe 0C000000 		.4byte	.LBE10-.LBB10
 7349 0802 10       		.uleb128 0x10
 7350 0803 7400     		.ascii	"t\000"
 7351 0805 01       		.byte	0x1
 7352 0806 F4       		.byte	0xf4
 7353 0807 C3000000 		.4byte	0xc3
 7354 080b 02       		.uleb128 0x2
 7355 080c 91       		.byte	0x91
 7356 080d 74       		.sleb128 -12
 7357 080e 00       		.byte	0
 7358 080f 00       		.byte	0
 7359 0810 0E       		.uleb128 0xe
 7360 0811 00000000 		.4byte	.LASF75
 7361 0815 01       		.byte	0x1
 7362 0816 FC       		.byte	0xfc
 7363 0817 00000000 		.4byte	.LFB78
 7364 081b D2010000 		.4byte	.LFE78-.LFB78
 7365 081f 01       		.uleb128 0x1
 7366 0820 9C       		.byte	0x9c
 7367 0821 AB080000 		.4byte	0x8ab
 7368 0825 0C       		.uleb128 0xc
 7369 0826 6B040000 		.4byte	.LASF59
 7370 082a 01       		.byte	0x1
 7371 082b FC       		.byte	0xfc
 7372 082c F6020000 		.4byte	0x2f6
 7373 0830 02       		.uleb128 0x2
 7374 0831 91       		.byte	0x91
 7375 0832 64       		.sleb128 -28
 7376 0833 0D       		.uleb128 0xd
 7377 0834 783000   		.ascii	"x0\000"
 7378 0837 01       		.byte	0x1
 7379 0838 FC       		.byte	0xfc
 7380 0839 C3000000 		.4byte	0xc3
 7381 083d 02       		.uleb128 0x2
 7382 083e 91       		.byte	0x91
 7383 083f 62       		.sleb128 -30
 7384 0840 0D       		.uleb128 0xd
 7385 0841 793000   		.ascii	"y0\000"
 7386 0844 01       		.byte	0x1
 7387 0845 FC       		.byte	0xfc
 7388 0846 C3000000 		.4byte	0xc3
 7389 084a 02       		.uleb128 0x2
 7390 084b 91       		.byte	0x91
 7391 084c 60       		.sleb128 -32
 7392 084d 0D       		.uleb128 0xd
 7393 084e 7200     		.ascii	"r\000"
 7394 0850 01       		.byte	0x1
 7395 0851 FC       		.byte	0xfc
 7396 0852 C3000000 		.4byte	0xc3
 7397 0856 02       		.uleb128 0x2
 7398 0857 91       		.byte	0x91
 7399 0858 5E       		.sleb128 -34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 152


 7400 0859 0C       		.uleb128 0xc
 7401 085a 40050000 		.4byte	.LASF60
 7402 085e 01       		.byte	0x1
 7403 085f FD       		.byte	0xfd
 7404 0860 CE000000 		.4byte	0xce
 7405 0864 02       		.uleb128 0x2
 7406 0865 91       		.byte	0x91
 7407 0866 00       		.sleb128 0
 7408 0867 10       		.uleb128 0x10
 7409 0868 6600     		.ascii	"f\000"
 7410 086a 01       		.byte	0x1
 7411 086b FE       		.byte	0xfe
 7412 086c C3000000 		.4byte	0xc3
 7413 0870 02       		.uleb128 0x2
 7414 0871 91       		.byte	0x91
 7415 0872 76       		.sleb128 -10
 7416 0873 0F       		.uleb128 0xf
 7417 0874 D4060000 		.4byte	.LASF76
 7418 0878 01       		.byte	0x1
 7419 0879 FF       		.byte	0xff
 7420 087a C3000000 		.4byte	0xc3
 7421 087e 02       		.uleb128 0x2
 7422 087f 91       		.byte	0x91
 7423 0880 74       		.sleb128 -12
 7424 0881 13       		.uleb128 0x13
 7425 0882 DA060000 		.4byte	.LASF77
 7426 0886 01       		.byte	0x1
 7427 0887 0001     		.2byte	0x100
 7428 0889 C3000000 		.4byte	0xc3
 7429 088d 02       		.uleb128 0x2
 7430 088e 91       		.byte	0x91
 7431 088f 72       		.sleb128 -14
 7432 0890 14       		.uleb128 0x14
 7433 0891 7800     		.ascii	"x\000"
 7434 0893 01       		.byte	0x1
 7435 0894 0101     		.2byte	0x101
 7436 0896 C3000000 		.4byte	0xc3
 7437 089a 02       		.uleb128 0x2
 7438 089b 91       		.byte	0x91
 7439 089c 70       		.sleb128 -16
 7440 089d 14       		.uleb128 0x14
 7441 089e 7900     		.ascii	"y\000"
 7442 08a0 01       		.byte	0x1
 7443 08a1 0201     		.2byte	0x102
 7444 08a3 C3000000 		.4byte	0xc3
 7445 08a7 02       		.uleb128 0x2
 7446 08a8 91       		.byte	0x91
 7447 08a9 6E       		.sleb128 -18
 7448 08aa 00       		.byte	0
 7449 08ab 15       		.uleb128 0x15
 7450 08ac FA030000 		.4byte	.LASF78
 7451 08b0 01       		.byte	0x1
 7452 08b1 1F01     		.2byte	0x11f
 7453 08b3 00000000 		.4byte	.LFB79
 7454 08b7 AA010000 		.4byte	.LFE79-.LFB79
 7455 08bb 01       		.uleb128 0x1
 7456 08bc 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 153


 7457 08bd 5D090000 		.4byte	0x95d
 7458 08c1 16       		.uleb128 0x16
 7459 08c2 6B040000 		.4byte	.LASF59
 7460 08c6 01       		.byte	0x1
 7461 08c7 1F01     		.2byte	0x11f
 7462 08c9 F6020000 		.4byte	0x2f6
 7463 08cd 02       		.uleb128 0x2
 7464 08ce 91       		.byte	0x91
 7465 08cf 64       		.sleb128 -28
 7466 08d0 17       		.uleb128 0x17
 7467 08d1 783000   		.ascii	"x0\000"
 7468 08d4 01       		.byte	0x1
 7469 08d5 1F01     		.2byte	0x11f
 7470 08d7 C3000000 		.4byte	0xc3
 7471 08db 02       		.uleb128 0x2
 7472 08dc 91       		.byte	0x91
 7473 08dd 62       		.sleb128 -30
 7474 08de 17       		.uleb128 0x17
 7475 08df 793000   		.ascii	"y0\000"
 7476 08e2 01       		.byte	0x1
 7477 08e3 1F01     		.2byte	0x11f
 7478 08e5 C3000000 		.4byte	0xc3
 7479 08e9 02       		.uleb128 0x2
 7480 08ea 91       		.byte	0x91
 7481 08eb 60       		.sleb128 -32
 7482 08ec 17       		.uleb128 0x17
 7483 08ed 7200     		.ascii	"r\000"
 7484 08ef 01       		.byte	0x1
 7485 08f0 2001     		.2byte	0x120
 7486 08f2 C3000000 		.4byte	0xc3
 7487 08f6 02       		.uleb128 0x2
 7488 08f7 91       		.byte	0x91
 7489 08f8 5E       		.sleb128 -34
 7490 08f9 16       		.uleb128 0x16
 7491 08fa 8E060000 		.4byte	.LASF79
 7492 08fe 01       		.byte	0x1
 7493 08ff 2001     		.2byte	0x120
 7494 0901 B8000000 		.4byte	0xb8
 7495 0905 02       		.uleb128 0x2
 7496 0906 91       		.byte	0x91
 7497 0907 00       		.sleb128 0
 7498 0908 16       		.uleb128 0x16
 7499 0909 40050000 		.4byte	.LASF60
 7500 090d 01       		.byte	0x1
 7501 090e 2001     		.2byte	0x120
 7502 0910 CE000000 		.4byte	0xce
 7503 0914 02       		.uleb128 0x2
 7504 0915 91       		.byte	0x91
 7505 0916 04       		.sleb128 4
 7506 0917 14       		.uleb128 0x14
 7507 0918 6600     		.ascii	"f\000"
 7508 091a 01       		.byte	0x1
 7509 091b 2101     		.2byte	0x121
 7510 091d C3000000 		.4byte	0xc3
 7511 0921 02       		.uleb128 0x2
 7512 0922 91       		.byte	0x91
 7513 0923 76       		.sleb128 -10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 154


 7514 0924 13       		.uleb128 0x13
 7515 0925 D4060000 		.4byte	.LASF76
 7516 0929 01       		.byte	0x1
 7517 092a 2201     		.2byte	0x122
 7518 092c C3000000 		.4byte	0xc3
 7519 0930 02       		.uleb128 0x2
 7520 0931 91       		.byte	0x91
 7521 0932 74       		.sleb128 -12
 7522 0933 13       		.uleb128 0x13
 7523 0934 DA060000 		.4byte	.LASF77
 7524 0938 01       		.byte	0x1
 7525 0939 2301     		.2byte	0x123
 7526 093b C3000000 		.4byte	0xc3
 7527 093f 02       		.uleb128 0x2
 7528 0940 91       		.byte	0x91
 7529 0941 72       		.sleb128 -14
 7530 0942 14       		.uleb128 0x14
 7531 0943 7800     		.ascii	"x\000"
 7532 0945 01       		.byte	0x1
 7533 0946 2401     		.2byte	0x124
 7534 0948 C3000000 		.4byte	0xc3
 7535 094c 02       		.uleb128 0x2
 7536 094d 91       		.byte	0x91
 7537 094e 70       		.sleb128 -16
 7538 094f 14       		.uleb128 0x14
 7539 0950 7900     		.ascii	"y\000"
 7540 0952 01       		.byte	0x1
 7541 0953 2501     		.2byte	0x125
 7542 0955 C3000000 		.4byte	0xc3
 7543 0959 02       		.uleb128 0x2
 7544 095a 91       		.byte	0x91
 7545 095b 6E       		.sleb128 -18
 7546 095c 00       		.byte	0
 7547 095d 15       		.uleb128 0x15
 7548 095e DC050000 		.4byte	.LASF80
 7549 0962 01       		.byte	0x1
 7550 0963 4301     		.2byte	0x143
 7551 0965 00000000 		.4byte	.LFB80
 7552 0969 68000000 		.4byte	.LFE80-.LFB80
 7553 096d 01       		.uleb128 0x1
 7554 096e 9C       		.byte	0x9c
 7555 096f BB090000 		.4byte	0x9bb
 7556 0973 16       		.uleb128 0x16
 7557 0974 6B040000 		.4byte	.LASF59
 7558 0978 01       		.byte	0x1
 7559 0979 4301     		.2byte	0x143
 7560 097b F6020000 		.4byte	0x2f6
 7561 097f 02       		.uleb128 0x2
 7562 0980 91       		.byte	0x91
 7563 0981 74       		.sleb128 -12
 7564 0982 17       		.uleb128 0x17
 7565 0983 783000   		.ascii	"x0\000"
 7566 0986 01       		.byte	0x1
 7567 0987 4301     		.2byte	0x143
 7568 0989 C3000000 		.4byte	0xc3
 7569 098d 02       		.uleb128 0x2
 7570 098e 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 155


 7571 098f 72       		.sleb128 -14
 7572 0990 17       		.uleb128 0x17
 7573 0991 793000   		.ascii	"y0\000"
 7574 0994 01       		.byte	0x1
 7575 0995 4301     		.2byte	0x143
 7576 0997 C3000000 		.4byte	0xc3
 7577 099b 02       		.uleb128 0x2
 7578 099c 91       		.byte	0x91
 7579 099d 70       		.sleb128 -16
 7580 099e 17       		.uleb128 0x17
 7581 099f 7200     		.ascii	"r\000"
 7582 09a1 01       		.byte	0x1
 7583 09a2 4301     		.2byte	0x143
 7584 09a4 C3000000 		.4byte	0xc3
 7585 09a8 02       		.uleb128 0x2
 7586 09a9 91       		.byte	0x91
 7587 09aa 6E       		.sleb128 -18
 7588 09ab 16       		.uleb128 0x16
 7589 09ac 40050000 		.4byte	.LASF60
 7590 09b0 01       		.byte	0x1
 7591 09b1 4401     		.2byte	0x144
 7592 09b3 CE000000 		.4byte	0xce
 7593 09b7 02       		.uleb128 0x2
 7594 09b8 91       		.byte	0x91
 7595 09b9 00       		.sleb128 0
 7596 09ba 00       		.byte	0
 7597 09bb 15       		.uleb128 0x15
 7598 09bc 47070000 		.4byte	.LASF81
 7599 09c0 01       		.byte	0x1
 7600 09c1 4C01     		.2byte	0x14c
 7601 09c3 00000000 		.4byte	.LFB81
 7602 09c7 82010000 		.4byte	.LFE81-.LFB81
 7603 09cb 01       		.uleb128 0x1
 7604 09cc 9C       		.byte	0x9c
 7605 09cd 7C0A0000 		.4byte	0xa7c
 7606 09d1 16       		.uleb128 0x16
 7607 09d2 6B040000 		.4byte	.LASF59
 7608 09d6 01       		.byte	0x1
 7609 09d7 4C01     		.2byte	0x14c
 7610 09d9 F6020000 		.4byte	0x2f6
 7611 09dd 02       		.uleb128 0x2
 7612 09de 91       		.byte	0x91
 7613 09df 64       		.sleb128 -28
 7614 09e0 17       		.uleb128 0x17
 7615 09e1 783000   		.ascii	"x0\000"
 7616 09e4 01       		.byte	0x1
 7617 09e5 4C01     		.2byte	0x14c
 7618 09e7 C3000000 		.4byte	0xc3
 7619 09eb 02       		.uleb128 0x2
 7620 09ec 91       		.byte	0x91
 7621 09ed 62       		.sleb128 -30
 7622 09ee 17       		.uleb128 0x17
 7623 09ef 793000   		.ascii	"y0\000"
 7624 09f2 01       		.byte	0x1
 7625 09f3 4C01     		.2byte	0x14c
 7626 09f5 C3000000 		.4byte	0xc3
 7627 09f9 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 156


 7628 09fa 91       		.byte	0x91
 7629 09fb 60       		.sleb128 -32
 7630 09fc 17       		.uleb128 0x17
 7631 09fd 7200     		.ascii	"r\000"
 7632 09ff 01       		.byte	0x1
 7633 0a00 4C01     		.2byte	0x14c
 7634 0a02 C3000000 		.4byte	0xc3
 7635 0a06 02       		.uleb128 0x2
 7636 0a07 91       		.byte	0x91
 7637 0a08 5E       		.sleb128 -34
 7638 0a09 16       		.uleb128 0x16
 7639 0a0a 8E060000 		.4byte	.LASF79
 7640 0a0e 01       		.byte	0x1
 7641 0a0f 4D01     		.2byte	0x14d
 7642 0a11 B8000000 		.4byte	0xb8
 7643 0a15 02       		.uleb128 0x2
 7644 0a16 91       		.byte	0x91
 7645 0a17 00       		.sleb128 0
 7646 0a18 16       		.uleb128 0x16
 7647 0a19 EC060000 		.4byte	.LASF82
 7648 0a1d 01       		.byte	0x1
 7649 0a1e 4D01     		.2byte	0x14d
 7650 0a20 C3000000 		.4byte	0xc3
 7651 0a24 02       		.uleb128 0x2
 7652 0a25 91       		.byte	0x91
 7653 0a26 04       		.sleb128 4
 7654 0a27 16       		.uleb128 0x16
 7655 0a28 40050000 		.4byte	.LASF60
 7656 0a2c 01       		.byte	0x1
 7657 0a2d 4D01     		.2byte	0x14d
 7658 0a2f CE000000 		.4byte	0xce
 7659 0a33 02       		.uleb128 0x2
 7660 0a34 91       		.byte	0x91
 7661 0a35 08       		.sleb128 8
 7662 0a36 14       		.uleb128 0x14
 7663 0a37 6600     		.ascii	"f\000"
 7664 0a39 01       		.byte	0x1
 7665 0a3a 4F01     		.2byte	0x14f
 7666 0a3c C3000000 		.4byte	0xc3
 7667 0a40 02       		.uleb128 0x2
 7668 0a41 91       		.byte	0x91
 7669 0a42 76       		.sleb128 -10
 7670 0a43 13       		.uleb128 0x13
 7671 0a44 D4060000 		.4byte	.LASF76
 7672 0a48 01       		.byte	0x1
 7673 0a49 5001     		.2byte	0x150
 7674 0a4b C3000000 		.4byte	0xc3
 7675 0a4f 02       		.uleb128 0x2
 7676 0a50 91       		.byte	0x91
 7677 0a51 74       		.sleb128 -12
 7678 0a52 13       		.uleb128 0x13
 7679 0a53 DA060000 		.4byte	.LASF77
 7680 0a57 01       		.byte	0x1
 7681 0a58 5101     		.2byte	0x151
 7682 0a5a C3000000 		.4byte	0xc3
 7683 0a5e 02       		.uleb128 0x2
 7684 0a5f 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 157


 7685 0a60 72       		.sleb128 -14
 7686 0a61 14       		.uleb128 0x14
 7687 0a62 7800     		.ascii	"x\000"
 7688 0a64 01       		.byte	0x1
 7689 0a65 5201     		.2byte	0x152
 7690 0a67 C3000000 		.4byte	0xc3
 7691 0a6b 02       		.uleb128 0x2
 7692 0a6c 91       		.byte	0x91
 7693 0a6d 70       		.sleb128 -16
 7694 0a6e 14       		.uleb128 0x14
 7695 0a6f 7900     		.ascii	"y\000"
 7696 0a71 01       		.byte	0x1
 7697 0a72 5301     		.2byte	0x153
 7698 0a74 C3000000 		.4byte	0xc3
 7699 0a78 02       		.uleb128 0x2
 7700 0a79 91       		.byte	0x91
 7701 0a7a 6E       		.sleb128 -18
 7702 0a7b 00       		.byte	0
 7703 0a7c 15       		.uleb128 0x15
 7704 0a7d 26030000 		.4byte	.LASF83
 7705 0a81 01       		.byte	0x1
 7706 0a82 6B01     		.2byte	0x16b
 7707 0a84 00000000 		.4byte	.LFB82
 7708 0a88 96000000 		.4byte	.LFE82-.LFB82
 7709 0a8c 01       		.uleb128 0x1
 7710 0a8d 9C       		.byte	0x9c
 7711 0a8e E50A0000 		.4byte	0xae5
 7712 0a92 16       		.uleb128 0x16
 7713 0a93 6B040000 		.4byte	.LASF59
 7714 0a97 01       		.byte	0x1
 7715 0a98 6B01     		.2byte	0x16b
 7716 0a9a F6020000 		.4byte	0x2f6
 7717 0a9e 02       		.uleb128 0x2
 7718 0a9f 91       		.byte	0x91
 7719 0aa0 74       		.sleb128 -12
 7720 0aa1 17       		.uleb128 0x17
 7721 0aa2 7800     		.ascii	"x\000"
 7722 0aa4 01       		.byte	0x1
 7723 0aa5 6B01     		.2byte	0x16b
 7724 0aa7 C3000000 		.4byte	0xc3
 7725 0aab 02       		.uleb128 0x2
 7726 0aac 91       		.byte	0x91
 7727 0aad 72       		.sleb128 -14
 7728 0aae 17       		.uleb128 0x17
 7729 0aaf 7900     		.ascii	"y\000"
 7730 0ab1 01       		.byte	0x1
 7731 0ab2 6B01     		.2byte	0x16b
 7732 0ab4 C3000000 		.4byte	0xc3
 7733 0ab8 02       		.uleb128 0x2
 7734 0ab9 91       		.byte	0x91
 7735 0aba 70       		.sleb128 -16
 7736 0abb 17       		.uleb128 0x17
 7737 0abc 7700     		.ascii	"w\000"
 7738 0abe 01       		.byte	0x1
 7739 0abf 6B01     		.2byte	0x16b
 7740 0ac1 C3000000 		.4byte	0xc3
 7741 0ac5 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 158


 7742 0ac6 91       		.byte	0x91
 7743 0ac7 6E       		.sleb128 -18
 7744 0ac8 17       		.uleb128 0x17
 7745 0ac9 6800     		.ascii	"h\000"
 7746 0acb 01       		.byte	0x1
 7747 0acc 6B01     		.2byte	0x16b
 7748 0ace C3000000 		.4byte	0xc3
 7749 0ad2 02       		.uleb128 0x2
 7750 0ad3 91       		.byte	0x91
 7751 0ad4 00       		.sleb128 0
 7752 0ad5 16       		.uleb128 0x16
 7753 0ad6 40050000 		.4byte	.LASF60
 7754 0ada 01       		.byte	0x1
 7755 0adb 6C01     		.2byte	0x16c
 7756 0add CE000000 		.4byte	0xce
 7757 0ae1 02       		.uleb128 0x2
 7758 0ae2 91       		.byte	0x91
 7759 0ae3 04       		.sleb128 4
 7760 0ae4 00       		.byte	0
 7761 0ae5 15       		.uleb128 0x15
 7762 0ae6 99040000 		.4byte	.LASF84
 7763 0aea 01       		.byte	0x1
 7764 0aeb 7601     		.2byte	0x176
 7765 0aed 00000000 		.4byte	.LFB83
 7766 0af1 A4010000 		.4byte	.LFE83-.LFB83
 7767 0af5 01       		.uleb128 0x1
 7768 0af6 9C       		.byte	0x9c
 7769 0af7 5B0B0000 		.4byte	0xb5b
 7770 0afb 16       		.uleb128 0x16
 7771 0afc 6B040000 		.4byte	.LASF59
 7772 0b00 01       		.byte	0x1
 7773 0b01 7601     		.2byte	0x176
 7774 0b03 F6020000 		.4byte	0x2f6
 7775 0b07 02       		.uleb128 0x2
 7776 0b08 91       		.byte	0x91
 7777 0b09 74       		.sleb128 -12
 7778 0b0a 17       		.uleb128 0x17
 7779 0b0b 7800     		.ascii	"x\000"
 7780 0b0d 01       		.byte	0x1
 7781 0b0e 7601     		.2byte	0x176
 7782 0b10 C3000000 		.4byte	0xc3
 7783 0b14 02       		.uleb128 0x2
 7784 0b15 91       		.byte	0x91
 7785 0b16 72       		.sleb128 -14
 7786 0b17 17       		.uleb128 0x17
 7787 0b18 7900     		.ascii	"y\000"
 7788 0b1a 01       		.byte	0x1
 7789 0b1b 7601     		.2byte	0x176
 7790 0b1d C3000000 		.4byte	0xc3
 7791 0b21 02       		.uleb128 0x2
 7792 0b22 91       		.byte	0x91
 7793 0b23 70       		.sleb128 -16
 7794 0b24 17       		.uleb128 0x17
 7795 0b25 7700     		.ascii	"w\000"
 7796 0b27 01       		.byte	0x1
 7797 0b28 7601     		.2byte	0x176
 7798 0b2a C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 159


 7799 0b2e 02       		.uleb128 0x2
 7800 0b2f 91       		.byte	0x91
 7801 0b30 6E       		.sleb128 -18
 7802 0b31 17       		.uleb128 0x17
 7803 0b32 6800     		.ascii	"h\000"
 7804 0b34 01       		.byte	0x1
 7805 0b35 7701     		.2byte	0x177
 7806 0b37 C3000000 		.4byte	0xc3
 7807 0b3b 02       		.uleb128 0x2
 7808 0b3c 91       		.byte	0x91
 7809 0b3d 00       		.sleb128 0
 7810 0b3e 17       		.uleb128 0x17
 7811 0b3f 7200     		.ascii	"r\000"
 7812 0b41 01       		.byte	0x1
 7813 0b42 7701     		.2byte	0x177
 7814 0b44 C3000000 		.4byte	0xc3
 7815 0b48 02       		.uleb128 0x2
 7816 0b49 91       		.byte	0x91
 7817 0b4a 04       		.sleb128 4
 7818 0b4b 16       		.uleb128 0x16
 7819 0b4c 40050000 		.4byte	.LASF60
 7820 0b50 01       		.byte	0x1
 7821 0b51 7701     		.2byte	0x177
 7822 0b53 CE000000 		.4byte	0xce
 7823 0b57 02       		.uleb128 0x2
 7824 0b58 91       		.byte	0x91
 7825 0b59 08       		.sleb128 8
 7826 0b5a 00       		.byte	0
 7827 0b5b 15       		.uleb128 0x15
 7828 0b5c 2F070000 		.4byte	.LASF85
 7829 0b60 01       		.byte	0x1
 7830 0b61 8601     		.2byte	0x186
 7831 0b63 00000000 		.4byte	.LFB84
 7832 0b67 D6000000 		.4byte	.LFE84-.LFB84
 7833 0b6b 01       		.uleb128 0x1
 7834 0b6c 9C       		.byte	0x9c
 7835 0b6d D10B0000 		.4byte	0xbd1
 7836 0b71 16       		.uleb128 0x16
 7837 0b72 6B040000 		.4byte	.LASF59
 7838 0b76 01       		.byte	0x1
 7839 0b77 8601     		.2byte	0x186
 7840 0b79 F6020000 		.4byte	0x2f6
 7841 0b7d 02       		.uleb128 0x2
 7842 0b7e 91       		.byte	0x91
 7843 0b7f 6C       		.sleb128 -20
 7844 0b80 17       		.uleb128 0x17
 7845 0b81 7800     		.ascii	"x\000"
 7846 0b83 01       		.byte	0x1
 7847 0b84 8601     		.2byte	0x186
 7848 0b86 C3000000 		.4byte	0xc3
 7849 0b8a 02       		.uleb128 0x2
 7850 0b8b 91       		.byte	0x91
 7851 0b8c 6A       		.sleb128 -22
 7852 0b8d 17       		.uleb128 0x17
 7853 0b8e 7900     		.ascii	"y\000"
 7854 0b90 01       		.byte	0x1
 7855 0b91 8601     		.2byte	0x186
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 160


 7856 0b93 C3000000 		.4byte	0xc3
 7857 0b97 02       		.uleb128 0x2
 7858 0b98 91       		.byte	0x91
 7859 0b99 68       		.sleb128 -24
 7860 0b9a 17       		.uleb128 0x17
 7861 0b9b 7700     		.ascii	"w\000"
 7862 0b9d 01       		.byte	0x1
 7863 0b9e 8601     		.2byte	0x186
 7864 0ba0 C3000000 		.4byte	0xc3
 7865 0ba4 02       		.uleb128 0x2
 7866 0ba5 91       		.byte	0x91
 7867 0ba6 66       		.sleb128 -26
 7868 0ba7 17       		.uleb128 0x17
 7869 0ba8 6800     		.ascii	"h\000"
 7870 0baa 01       		.byte	0x1
 7871 0bab 8701     		.2byte	0x187
 7872 0bad C3000000 		.4byte	0xc3
 7873 0bb1 02       		.uleb128 0x2
 7874 0bb2 91       		.byte	0x91
 7875 0bb3 00       		.sleb128 0
 7876 0bb4 17       		.uleb128 0x17
 7877 0bb5 7200     		.ascii	"r\000"
 7878 0bb7 01       		.byte	0x1
 7879 0bb8 8701     		.2byte	0x187
 7880 0bba C3000000 		.4byte	0xc3
 7881 0bbe 02       		.uleb128 0x2
 7882 0bbf 91       		.byte	0x91
 7883 0bc0 04       		.sleb128 4
 7884 0bc1 16       		.uleb128 0x16
 7885 0bc2 40050000 		.4byte	.LASF60
 7886 0bc6 01       		.byte	0x1
 7887 0bc7 8701     		.2byte	0x187
 7888 0bc9 CE000000 		.4byte	0xce
 7889 0bcd 02       		.uleb128 0x2
 7890 0bce 91       		.byte	0x91
 7891 0bcf 08       		.sleb128 8
 7892 0bd0 00       		.byte	0
 7893 0bd1 15       		.uleb128 0x15
 7894 0bd2 B5050000 		.4byte	.LASF86
 7895 0bd6 01       		.byte	0x1
 7896 0bd7 9101     		.2byte	0x191
 7897 0bd9 00000000 		.4byte	.LFB85
 7898 0bdd 7C000000 		.4byte	.LFE85-.LFB85
 7899 0be1 01       		.uleb128 0x1
 7900 0be2 9C       		.byte	0x9c
 7901 0be3 5A0C0000 		.4byte	0xc5a
 7902 0be7 16       		.uleb128 0x16
 7903 0be8 6B040000 		.4byte	.LASF59
 7904 0bec 01       		.byte	0x1
 7905 0bed 9101     		.2byte	0x191
 7906 0bef F6020000 		.4byte	0x2f6
 7907 0bf3 02       		.uleb128 0x2
 7908 0bf4 91       		.byte	0x91
 7909 0bf5 74       		.sleb128 -12
 7910 0bf6 17       		.uleb128 0x17
 7911 0bf7 783000   		.ascii	"x0\000"
 7912 0bfa 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 161


 7913 0bfb 9101     		.2byte	0x191
 7914 0bfd C3000000 		.4byte	0xc3
 7915 0c01 02       		.uleb128 0x2
 7916 0c02 91       		.byte	0x91
 7917 0c03 72       		.sleb128 -14
 7918 0c04 17       		.uleb128 0x17
 7919 0c05 793000   		.ascii	"y0\000"
 7920 0c08 01       		.byte	0x1
 7921 0c09 9101     		.2byte	0x191
 7922 0c0b C3000000 		.4byte	0xc3
 7923 0c0f 02       		.uleb128 0x2
 7924 0c10 91       		.byte	0x91
 7925 0c11 70       		.sleb128 -16
 7926 0c12 17       		.uleb128 0x17
 7927 0c13 783100   		.ascii	"x1\000"
 7928 0c16 01       		.byte	0x1
 7929 0c17 9201     		.2byte	0x192
 7930 0c19 C3000000 		.4byte	0xc3
 7931 0c1d 02       		.uleb128 0x2
 7932 0c1e 91       		.byte	0x91
 7933 0c1f 6E       		.sleb128 -18
 7934 0c20 17       		.uleb128 0x17
 7935 0c21 793100   		.ascii	"y1\000"
 7936 0c24 01       		.byte	0x1
 7937 0c25 9201     		.2byte	0x192
 7938 0c27 C3000000 		.4byte	0xc3
 7939 0c2b 02       		.uleb128 0x2
 7940 0c2c 91       		.byte	0x91
 7941 0c2d 00       		.sleb128 0
 7942 0c2e 17       		.uleb128 0x17
 7943 0c2f 783200   		.ascii	"x2\000"
 7944 0c32 01       		.byte	0x1
 7945 0c33 9201     		.2byte	0x192
 7946 0c35 C3000000 		.4byte	0xc3
 7947 0c39 02       		.uleb128 0x2
 7948 0c3a 91       		.byte	0x91
 7949 0c3b 04       		.sleb128 4
 7950 0c3c 17       		.uleb128 0x17
 7951 0c3d 793200   		.ascii	"y2\000"
 7952 0c40 01       		.byte	0x1
 7953 0c41 9201     		.2byte	0x192
 7954 0c43 C3000000 		.4byte	0xc3
 7955 0c47 02       		.uleb128 0x2
 7956 0c48 91       		.byte	0x91
 7957 0c49 08       		.sleb128 8
 7958 0c4a 16       		.uleb128 0x16
 7959 0c4b 40050000 		.4byte	.LASF60
 7960 0c4f 01       		.byte	0x1
 7961 0c50 9201     		.2byte	0x192
 7962 0c52 CE000000 		.4byte	0xce
 7963 0c56 02       		.uleb128 0x2
 7964 0c57 91       		.byte	0x91
 7965 0c58 0C       		.sleb128 12
 7966 0c59 00       		.byte	0
 7967 0c5a 15       		.uleb128 0x15
 7968 0c5b 10030000 		.4byte	.LASF87
 7969 0c5f 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 162


 7970 0c60 9901     		.2byte	0x199
 7971 0c62 00000000 		.4byte	.LFB86
 7972 0c66 E0020000 		.4byte	.LFE86-.LFB86
 7973 0c6a 01       		.uleb128 0x1
 7974 0c6b 9C       		.byte	0x9c
 7975 0c6c 640E0000 		.4byte	0xe64
 7976 0c70 16       		.uleb128 0x16
 7977 0c71 6B040000 		.4byte	.LASF59
 7978 0c75 01       		.byte	0x1
 7979 0c76 9901     		.2byte	0x199
 7980 0c78 F6020000 		.4byte	0x2f6
 7981 0c7c 02       		.uleb128 0x2
 7982 0c7d 91       		.byte	0x91
 7983 0c7e 44       		.sleb128 -60
 7984 0c7f 17       		.uleb128 0x17
 7985 0c80 783000   		.ascii	"x0\000"
 7986 0c83 01       		.byte	0x1
 7987 0c84 9901     		.2byte	0x199
 7988 0c86 C3000000 		.4byte	0xc3
 7989 0c8a 02       		.uleb128 0x2
 7990 0c8b 91       		.byte	0x91
 7991 0c8c 42       		.sleb128 -62
 7992 0c8d 17       		.uleb128 0x17
 7993 0c8e 793000   		.ascii	"y0\000"
 7994 0c91 01       		.byte	0x1
 7995 0c92 9901     		.2byte	0x199
 7996 0c94 C3000000 		.4byte	0xc3
 7997 0c98 02       		.uleb128 0x2
 7998 0c99 91       		.byte	0x91
 7999 0c9a 40       		.sleb128 -64
 8000 0c9b 17       		.uleb128 0x17
 8001 0c9c 783100   		.ascii	"x1\000"
 8002 0c9f 01       		.byte	0x1
 8003 0ca0 9A01     		.2byte	0x19a
 8004 0ca2 C3000000 		.4byte	0xc3
 8005 0ca6 03       		.uleb128 0x3
 8006 0ca7 91       		.byte	0x91
 8007 0ca8 BE7F     		.sleb128 -66
 8008 0caa 17       		.uleb128 0x17
 8009 0cab 793100   		.ascii	"y1\000"
 8010 0cae 01       		.byte	0x1
 8011 0caf 9A01     		.2byte	0x19a
 8012 0cb1 C3000000 		.4byte	0xc3
 8013 0cb5 02       		.uleb128 0x2
 8014 0cb6 91       		.byte	0x91
 8015 0cb7 00       		.sleb128 0
 8016 0cb8 17       		.uleb128 0x17
 8017 0cb9 783200   		.ascii	"x2\000"
 8018 0cbc 01       		.byte	0x1
 8019 0cbd 9A01     		.2byte	0x19a
 8020 0cbf C3000000 		.4byte	0xc3
 8021 0cc3 02       		.uleb128 0x2
 8022 0cc4 91       		.byte	0x91
 8023 0cc5 04       		.sleb128 4
 8024 0cc6 17       		.uleb128 0x17
 8025 0cc7 793200   		.ascii	"y2\000"
 8026 0cca 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 163


 8027 0ccb 9A01     		.2byte	0x19a
 8028 0ccd C3000000 		.4byte	0xc3
 8029 0cd1 02       		.uleb128 0x2
 8030 0cd2 91       		.byte	0x91
 8031 0cd3 08       		.sleb128 8
 8032 0cd4 16       		.uleb128 0x16
 8033 0cd5 40050000 		.4byte	.LASF60
 8034 0cd9 01       		.byte	0x1
 8035 0cda 9A01     		.2byte	0x19a
 8036 0cdc CE000000 		.4byte	0xce
 8037 0ce0 02       		.uleb128 0x2
 8038 0ce1 91       		.byte	0x91
 8039 0ce2 0C       		.sleb128 12
 8040 0ce3 14       		.uleb128 0x14
 8041 0ce4 6100     		.ascii	"a\000"
 8042 0ce6 01       		.byte	0x1
 8043 0ce7 9C01     		.2byte	0x19c
 8044 0ce9 C3000000 		.4byte	0xc3
 8045 0ced 02       		.uleb128 0x2
 8046 0cee 91       		.byte	0x91
 8047 0cef 76       		.sleb128 -10
 8048 0cf0 14       		.uleb128 0x14
 8049 0cf1 6200     		.ascii	"b\000"
 8050 0cf3 01       		.byte	0x1
 8051 0cf4 9C01     		.2byte	0x19c
 8052 0cf6 C3000000 		.4byte	0xc3
 8053 0cfa 02       		.uleb128 0x2
 8054 0cfb 91       		.byte	0x91
 8055 0cfc 74       		.sleb128 -12
 8056 0cfd 14       		.uleb128 0x14
 8057 0cfe 7900     		.ascii	"y\000"
 8058 0d00 01       		.byte	0x1
 8059 0d01 9C01     		.2byte	0x19c
 8060 0d03 C3000000 		.4byte	0xc3
 8061 0d07 02       		.uleb128 0x2
 8062 0d08 91       		.byte	0x91
 8063 0d09 72       		.sleb128 -14
 8064 0d0a 13       		.uleb128 0x13
 8065 0d0b 0E000000 		.4byte	.LASF31
 8066 0d0f 01       		.byte	0x1
 8067 0d10 9C01     		.2byte	0x19c
 8068 0d12 C3000000 		.4byte	0xc3
 8069 0d16 02       		.uleb128 0x2
 8070 0d17 91       		.byte	0x91
 8071 0d18 70       		.sleb128 -16
 8072 0d19 13       		.uleb128 0x13
 8073 0d1a 60000000 		.4byte	.LASF88
 8074 0d1e 01       		.byte	0x1
 8075 0d1f B601     		.2byte	0x1b6
 8076 0d21 C3000000 		.4byte	0xc3
 8077 0d25 02       		.uleb128 0x2
 8078 0d26 91       		.byte	0x91
 8079 0d27 5A       		.sleb128 -38
 8080 0d28 13       		.uleb128 0x13
 8081 0d29 D9020000 		.4byte	.LASF89
 8082 0d2d 01       		.byte	0x1
 8083 0d2e B701     		.2byte	0x1b7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 164


 8084 0d30 C3000000 		.4byte	0xc3
 8085 0d34 02       		.uleb128 0x2
 8086 0d35 91       		.byte	0x91
 8087 0d36 58       		.sleb128 -40
 8088 0d37 13       		.uleb128 0x13
 8089 0d38 65000000 		.4byte	.LASF90
 8090 0d3c 01       		.byte	0x1
 8091 0d3d B801     		.2byte	0x1b8
 8092 0d3f C3000000 		.4byte	0xc3
 8093 0d43 02       		.uleb128 0x2
 8094 0d44 91       		.byte	0x91
 8095 0d45 56       		.sleb128 -42
 8096 0d46 13       		.uleb128 0x13
 8097 0d47 DE020000 		.4byte	.LASF91
 8098 0d4b 01       		.byte	0x1
 8099 0d4c B901     		.2byte	0x1b9
 8100 0d4e C3000000 		.4byte	0xc3
 8101 0d52 02       		.uleb128 0x2
 8102 0d53 91       		.byte	0x91
 8103 0d54 54       		.sleb128 -44
 8104 0d55 13       		.uleb128 0x13
 8105 0d56 4B010000 		.4byte	.LASF92
 8106 0d5a 01       		.byte	0x1
 8107 0d5b BA01     		.2byte	0x1ba
 8108 0d5d C3000000 		.4byte	0xc3
 8109 0d61 02       		.uleb128 0x2
 8110 0d62 91       		.byte	0x91
 8111 0d63 52       		.sleb128 -46
 8112 0d64 13       		.uleb128 0x13
 8113 0d65 5B030000 		.4byte	.LASF93
 8114 0d69 01       		.byte	0x1
 8115 0d6a BB01     		.2byte	0x1bb
 8116 0d6c C3000000 		.4byte	0xc3
 8117 0d70 02       		.uleb128 0x2
 8118 0d71 91       		.byte	0x91
 8119 0d72 50       		.sleb128 -48
 8120 0d73 14       		.uleb128 0x14
 8121 0d74 736100   		.ascii	"sa\000"
 8122 0d77 01       		.byte	0x1
 8123 0d78 BD01     		.2byte	0x1bd
 8124 0d7a D9000000 		.4byte	0xd9
 8125 0d7e 02       		.uleb128 0x2
 8126 0d7f 91       		.byte	0x91
 8127 0d80 6C       		.sleb128 -20
 8128 0d81 14       		.uleb128 0x14
 8129 0d82 736200   		.ascii	"sb\000"
 8130 0d85 01       		.byte	0x1
 8131 0d86 BE01     		.2byte	0x1be
 8132 0d88 D9000000 		.4byte	0xd9
 8133 0d8c 02       		.uleb128 0x2
 8134 0d8d 91       		.byte	0x91
 8135 0d8e 68       		.sleb128 -24
 8136 0d8f 11       		.uleb128 0x11
 8137 0d90 26000000 		.4byte	.LBB11
 8138 0d94 10000000 		.4byte	.LBE11-.LBB11
 8139 0d98 AA0D0000 		.4byte	0xdaa
 8140 0d9c 14       		.uleb128 0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 165


 8141 0d9d 7400     		.ascii	"t\000"
 8142 0d9f 01       		.byte	0x1
 8143 0da0 A001     		.2byte	0x1a0
 8144 0da2 C3000000 		.4byte	0xc3
 8145 0da6 02       		.uleb128 0x2
 8146 0da7 91       		.byte	0x91
 8147 0da8 66       		.sleb128 -26
 8148 0da9 00       		.byte	0
 8149 0daa 11       		.uleb128 0x11
 8150 0dab 36000000 		.4byte	.LBB12
 8151 0daf 0C000000 		.4byte	.LBE12-.LBB12
 8152 0db3 C50D0000 		.4byte	0xdc5
 8153 0db7 14       		.uleb128 0x14
 8154 0db8 7400     		.ascii	"t\000"
 8155 0dba 01       		.byte	0x1
 8156 0dbb A001     		.2byte	0x1a0
 8157 0dbd C3000000 		.4byte	0xc3
 8158 0dc1 02       		.uleb128 0x2
 8159 0dc2 91       		.byte	0x91
 8160 0dc3 64       		.sleb128 -28
 8161 0dc4 00       		.byte	0
 8162 0dc5 11       		.uleb128 0x11
 8163 0dc6 4E000000 		.4byte	.LBB13
 8164 0dca 14000000 		.4byte	.LBE13-.LBB13
 8165 0dce E00D0000 		.4byte	0xde0
 8166 0dd2 14       		.uleb128 0x14
 8167 0dd3 7400     		.ascii	"t\000"
 8168 0dd5 01       		.byte	0x1
 8169 0dd6 A301     		.2byte	0x1a3
 8170 0dd8 C3000000 		.4byte	0xc3
 8171 0ddc 02       		.uleb128 0x2
 8172 0ddd 91       		.byte	0x91
 8173 0dde 62       		.sleb128 -30
 8174 0ddf 00       		.byte	0
 8175 0de0 11       		.uleb128 0x11
 8176 0de1 62000000 		.4byte	.LBB14
 8177 0de5 10000000 		.4byte	.LBE14-.LBB14
 8178 0de9 FB0D0000 		.4byte	0xdfb
 8179 0ded 14       		.uleb128 0x14
 8180 0dee 7400     		.ascii	"t\000"
 8181 0df0 01       		.byte	0x1
 8182 0df1 A301     		.2byte	0x1a3
 8183 0df3 C3000000 		.4byte	0xc3
 8184 0df7 02       		.uleb128 0x2
 8185 0df8 91       		.byte	0x91
 8186 0df9 60       		.sleb128 -32
 8187 0dfa 00       		.byte	0
 8188 0dfb 11       		.uleb128 0x11
 8189 0dfc 7E000000 		.4byte	.LBB15
 8190 0e00 10000000 		.4byte	.LBE15-.LBB15
 8191 0e04 160E0000 		.4byte	0xe16
 8192 0e08 14       		.uleb128 0x14
 8193 0e09 7400     		.ascii	"t\000"
 8194 0e0b 01       		.byte	0x1
 8195 0e0c A601     		.2byte	0x1a6
 8196 0e0e C3000000 		.4byte	0xc3
 8197 0e12 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 166


 8198 0e13 91       		.byte	0x91
 8199 0e14 5E       		.sleb128 -34
 8200 0e15 00       		.byte	0
 8201 0e16 11       		.uleb128 0x11
 8202 0e17 8E000000 		.4byte	.LBB16
 8203 0e1b 0C000000 		.4byte	.LBE16-.LBB16
 8204 0e1f 310E0000 		.4byte	0xe31
 8205 0e23 14       		.uleb128 0x14
 8206 0e24 7400     		.ascii	"t\000"
 8207 0e26 01       		.byte	0x1
 8208 0e27 A601     		.2byte	0x1a6
 8209 0e29 C3000000 		.4byte	0xc3
 8210 0e2d 02       		.uleb128 0x2
 8211 0e2e 91       		.byte	0x91
 8212 0e2f 5C       		.sleb128 -36
 8213 0e30 00       		.byte	0
 8214 0e31 11       		.uleb128 0x11
 8215 0e32 D8010000 		.4byte	.LBB17
 8216 0e36 0C000000 		.4byte	.LBE17-.LBB17
 8217 0e3a 4C0E0000 		.4byte	0xe4c
 8218 0e3e 14       		.uleb128 0x14
 8219 0e3f 7400     		.ascii	"t\000"
 8220 0e41 01       		.byte	0x1
 8221 0e42 D201     		.2byte	0x1d2
 8222 0e44 C3000000 		.4byte	0xc3
 8223 0e48 02       		.uleb128 0x2
 8224 0e49 91       		.byte	0x91
 8225 0e4a 4E       		.sleb128 -50
 8226 0e4b 00       		.byte	0
 8227 0e4c 12       		.uleb128 0x12
 8228 0e4d 92020000 		.4byte	.LBB18
 8229 0e51 0C000000 		.4byte	.LBE18-.LBB18
 8230 0e55 14       		.uleb128 0x14
 8231 0e56 7400     		.ascii	"t\000"
 8232 0e58 01       		.byte	0x1
 8233 0e59 E301     		.2byte	0x1e3
 8234 0e5b C3000000 		.4byte	0xc3
 8235 0e5f 02       		.uleb128 0x2
 8236 0e60 91       		.byte	0x91
 8237 0e61 4C       		.sleb128 -52
 8238 0e62 00       		.byte	0
 8239 0e63 00       		.byte	0
 8240 0e64 15       		.uleb128 0x15
 8241 0e65 80060000 		.4byte	.LASF94
 8242 0e69 01       		.byte	0x1
 8243 0e6a F001     		.2byte	0x1f0
 8244 0e6c 00000000 		.4byte	.LFB87
 8245 0e70 D8000000 		.4byte	.LFE87-.LFB87
 8246 0e74 01       		.uleb128 0x1
 8247 0e75 9C       		.byte	0x9c
 8248 0e76 5A0F0000 		.4byte	0xf5a
 8249 0e7a 16       		.uleb128 0x16
 8250 0e7b 6B040000 		.4byte	.LASF59
 8251 0e7f 01       		.byte	0x1
 8252 0e80 F001     		.2byte	0x1f0
 8253 0e82 F6020000 		.4byte	0x2f6
 8254 0e86 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 167


 8255 0e87 91       		.byte	0x91
 8256 0e88 6C       		.sleb128 -20
 8257 0e89 17       		.uleb128 0x17
 8258 0e8a 7800     		.ascii	"x\000"
 8259 0e8c 01       		.byte	0x1
 8260 0e8d F001     		.2byte	0x1f0
 8261 0e8f C3000000 		.4byte	0xc3
 8262 0e93 02       		.uleb128 0x2
 8263 0e94 91       		.byte	0x91
 8264 0e95 6A       		.sleb128 -22
 8265 0e96 17       		.uleb128 0x17
 8266 0e97 7900     		.ascii	"y\000"
 8267 0e99 01       		.byte	0x1
 8268 0e9a F001     		.2byte	0x1f0
 8269 0e9c C3000000 		.4byte	0xc3
 8270 0ea0 02       		.uleb128 0x2
 8271 0ea1 91       		.byte	0x91
 8272 0ea2 68       		.sleb128 -24
 8273 0ea3 16       		.uleb128 0x16
 8274 0ea4 34060000 		.4byte	.LASF28
 8275 0ea8 01       		.byte	0x1
 8276 0ea9 F101     		.2byte	0x1f1
 8277 0eab 90010000 		.4byte	0x190
 8278 0eaf 02       		.uleb128 0x2
 8279 0eb0 91       		.byte	0x91
 8280 0eb1 64       		.sleb128 -28
 8281 0eb2 17       		.uleb128 0x17
 8282 0eb3 7700     		.ascii	"w\000"
 8283 0eb5 01       		.byte	0x1
 8284 0eb6 F101     		.2byte	0x1f1
 8285 0eb8 C3000000 		.4byte	0xc3
 8286 0ebc 02       		.uleb128 0x2
 8287 0ebd 91       		.byte	0x91
 8288 0ebe 00       		.sleb128 0
 8289 0ebf 17       		.uleb128 0x17
 8290 0ec0 6800     		.ascii	"h\000"
 8291 0ec2 01       		.byte	0x1
 8292 0ec3 F101     		.2byte	0x1f1
 8293 0ec5 C3000000 		.4byte	0xc3
 8294 0ec9 02       		.uleb128 0x2
 8295 0eca 91       		.byte	0x91
 8296 0ecb 04       		.sleb128 4
 8297 0ecc 16       		.uleb128 0x16
 8298 0ecd 40050000 		.4byte	.LASF60
 8299 0ed1 01       		.byte	0x1
 8300 0ed2 F101     		.2byte	0x1f1
 8301 0ed4 CE000000 		.4byte	0xce
 8302 0ed8 02       		.uleb128 0x2
 8303 0ed9 91       		.byte	0x91
 8304 0eda 08       		.sleb128 8
 8305 0edb 17       		.uleb128 0x17
 8306 0edc 626700   		.ascii	"bg\000"
 8307 0edf 01       		.byte	0x1
 8308 0ee0 F101     		.2byte	0x1f1
 8309 0ee2 CE000000 		.4byte	0xce
 8310 0ee6 02       		.uleb128 0x2
 8311 0ee7 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 168


 8312 0ee8 0C       		.sleb128 12
 8313 0ee9 13       		.uleb128 0x13
 8314 0eea DE030000 		.4byte	.LASF95
 8315 0eee 01       		.byte	0x1
 8316 0eef F701     		.2byte	0x1f7
 8317 0ef1 C3000000 		.4byte	0xc3
 8318 0ef5 02       		.uleb128 0x2
 8319 0ef6 91       		.byte	0x91
 8320 0ef7 70       		.sleb128 -16
 8321 0ef8 13       		.uleb128 0x13
 8322 0ef9 02060000 		.4byte	.LASF96
 8323 0efd 01       		.byte	0x1
 8324 0efe F801     		.2byte	0x1f8
 8325 0f00 B8000000 		.4byte	0xb8
 8326 0f04 02       		.uleb128 0x2
 8327 0f05 91       		.byte	0x91
 8328 0f06 77       		.sleb128 -9
 8329 0f07 18       		.uleb128 0x18
 8330 0f08 AA040000 		.4byte	.LASF97
 8331 0f0c 01       		.byte	0x1
 8332 0f0d F901     		.2byte	0x1f9
 8333 0f0f 9F000000 		.4byte	0x9f
 8334 0f13 190F0000 		.4byte	0xf19
 8335 0f17 19       		.uleb128 0x19
 8336 0f18 00       		.byte	0
 8337 0f19 18       		.uleb128 0x18
 8338 0f1a D3050000 		.4byte	.LASF98
 8339 0f1e 01       		.byte	0x1
 8340 0f1f 0102     		.2byte	0x201
 8341 0f21 9F000000 		.4byte	0x9f
 8342 0f25 2B0F0000 		.4byte	0xf2b
 8343 0f29 19       		.uleb128 0x19
 8344 0f2a 00       		.byte	0
 8345 0f2b 12       		.uleb128 0x12
 8346 0f2c 2A000000 		.4byte	.LBB19
 8347 0f30 A2000000 		.4byte	.LBE19-.LBB19
 8348 0f34 14       		.uleb128 0x14
 8349 0f35 6A00     		.ascii	"j\000"
 8350 0f37 01       		.byte	0x1
 8351 0f38 FA01     		.2byte	0x1fa
 8352 0f3a C3000000 		.4byte	0xc3
 8353 0f3e 02       		.uleb128 0x2
 8354 0f3f 91       		.byte	0x91
 8355 0f40 74       		.sleb128 -12
 8356 0f41 12       		.uleb128 0x12
 8357 0f42 30000000 		.4byte	.LBB20
 8358 0f46 78000000 		.4byte	.LBE20-.LBB20
 8359 0f4a 14       		.uleb128 0x14
 8360 0f4b 6900     		.ascii	"i\000"
 8361 0f4d 01       		.byte	0x1
 8362 0f4e FB01     		.2byte	0x1fb
 8363 0f50 C3000000 		.4byte	0xc3
 8364 0f54 02       		.uleb128 0x2
 8365 0f55 91       		.byte	0x91
 8366 0f56 72       		.sleb128 -14
 8367 0f57 00       		.byte	0
 8368 0f58 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 169


 8369 0f59 00       		.byte	0
 8370 0f5a 15       		.uleb128 0x15
 8371 0f5b AF060000 		.4byte	.LASF99
 8372 0f5f 01       		.byte	0x1
 8373 0f60 0A02     		.2byte	0x20a
 8374 0f62 00000000 		.4byte	.LFB88
 8375 0f66 0C040000 		.4byte	.LFE88-.LFB88
 8376 0f6a 01       		.uleb128 0x1
 8377 0f6b 9C       		.byte	0x9c
 8378 0f6c E2100000 		.4byte	0x10e2
 8379 0f70 16       		.uleb128 0x16
 8380 0f71 6B040000 		.4byte	.LASF59
 8381 0f75 01       		.byte	0x1
 8382 0f76 0A02     		.2byte	0x20a
 8383 0f78 F6020000 		.4byte	0x2f6
 8384 0f7c 02       		.uleb128 0x2
 8385 0f7d 91       		.byte	0x91
 8386 0f7e 4C       		.sleb128 -52
 8387 0f7f 17       		.uleb128 0x17
 8388 0f80 7800     		.ascii	"x\000"
 8389 0f82 01       		.byte	0x1
 8390 0f83 0A02     		.2byte	0x20a
 8391 0f85 C3000000 		.4byte	0xc3
 8392 0f89 02       		.uleb128 0x2
 8393 0f8a 91       		.byte	0x91
 8394 0f8b 4A       		.sleb128 -54
 8395 0f8c 17       		.uleb128 0x17
 8396 0f8d 7900     		.ascii	"y\000"
 8397 0f8f 01       		.byte	0x1
 8398 0f90 0A02     		.2byte	0x20a
 8399 0f92 C3000000 		.4byte	0xc3
 8400 0f96 02       		.uleb128 0x2
 8401 0f97 91       		.byte	0x91
 8402 0f98 48       		.sleb128 -56
 8403 0f99 17       		.uleb128 0x17
 8404 0f9a 6300     		.ascii	"c\000"
 8405 0f9c 01       		.byte	0x1
 8406 0f9d 0A02     		.2byte	0x20a
 8407 0f9f 42000000 		.4byte	0x42
 8408 0fa3 02       		.uleb128 0x2
 8409 0fa4 91       		.byte	0x91
 8410 0fa5 47       		.sleb128 -57
 8411 0fa6 16       		.uleb128 0x16
 8412 0fa7 40050000 		.4byte	.LASF60
 8413 0fab 01       		.byte	0x1
 8414 0fac 0B02     		.2byte	0x20b
 8415 0fae CE000000 		.4byte	0xce
 8416 0fb2 02       		.uleb128 0x2
 8417 0fb3 91       		.byte	0x91
 8418 0fb4 00       		.sleb128 0
 8419 0fb5 17       		.uleb128 0x17
 8420 0fb6 626700   		.ascii	"bg\000"
 8421 0fb9 01       		.byte	0x1
 8422 0fba 0B02     		.2byte	0x20b
 8423 0fbc CE000000 		.4byte	0xce
 8424 0fc0 02       		.uleb128 0x2
 8425 0fc1 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 170


 8426 0fc2 04       		.sleb128 4
 8427 0fc3 16       		.uleb128 0x16
 8428 0fc4 1F040000 		.4byte	.LASF100
 8429 0fc8 01       		.byte	0x1
 8430 0fc9 0B02     		.2byte	0x20b
 8431 0fcb B8000000 		.4byte	0xb8
 8432 0fcf 02       		.uleb128 0x2
 8433 0fd0 91       		.byte	0x91
 8434 0fd1 08       		.sleb128 8
 8435 0fd2 11       		.uleb128 0x11
 8436 0fd3 82000000 		.4byte	.LBB21
 8437 0fd7 8C010000 		.4byte	.LBE21-.LBB21
 8438 0fdb 1D100000 		.4byte	0x101d
 8439 0fdf 14       		.uleb128 0x14
 8440 0fe0 6900     		.ascii	"i\000"
 8441 0fe2 01       		.byte	0x1
 8442 0fe3 1802     		.2byte	0x218
 8443 0fe5 AD000000 		.4byte	0xad
 8444 0fe9 02       		.uleb128 0x2
 8445 0fea 91       		.byte	0x91
 8446 0feb 6F       		.sleb128 -17
 8447 0fec 12       		.uleb128 0x12
 8448 0fed 8A000000 		.4byte	.LBB22
 8449 0ff1 6C010000 		.4byte	.LBE22-.LBB22
 8450 0ff5 13       		.uleb128 0x13
 8451 0ff6 66060000 		.4byte	.LASF101
 8452 0ffa 01       		.byte	0x1
 8453 0ffb 1902     		.2byte	0x219
 8454 0ffd B8000000 		.4byte	0xb8
 8455 1001 02       		.uleb128 0x2
 8456 1002 91       		.byte	0x91
 8457 1003 6E       		.sleb128 -18
 8458 1004 12       		.uleb128 0x12
 8459 1005 AE000000 		.4byte	.LBB23
 8460 1009 48010000 		.4byte	.LBE23-.LBB23
 8461 100d 14       		.uleb128 0x14
 8462 100e 6A00     		.ascii	"j\000"
 8463 1010 01       		.byte	0x1
 8464 1011 1A02     		.2byte	0x21a
 8465 1013 AD000000 		.4byte	0xad
 8466 1017 02       		.uleb128 0x2
 8467 1018 91       		.byte	0x91
 8468 1019 6D       		.sleb128 -19
 8469 101a 00       		.byte	0
 8470 101b 00       		.byte	0
 8471 101c 00       		.byte	0
 8472 101d 12       		.uleb128 0x12
 8473 101e 80020000 		.4byte	.LBB24
 8474 1022 84010000 		.4byte	.LBE24-.LBB24
 8475 1026 13       		.uleb128 0x13
 8476 1027 FC050000 		.4byte	.LASF29
 8477 102b 01       		.byte	0x1
 8478 102c 3502     		.2byte	0x235
 8479 102e 96010000 		.4byte	0x196
 8480 1032 02       		.uleb128 0x2
 8481 1033 91       		.byte	0x91
 8482 1034 5C       		.sleb128 -36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 171


 8483 1035 13       		.uleb128 0x13
 8484 1036 34060000 		.4byte	.LASF28
 8485 103a 01       		.byte	0x1
 8486 103b 3602     		.2byte	0x236
 8487 103d 90010000 		.4byte	0x190
 8488 1041 02       		.uleb128 0x2
 8489 1042 91       		.byte	0x91
 8490 1043 58       		.sleb128 -40
 8491 1044 14       		.uleb128 0x14
 8492 1045 626F00   		.ascii	"bo\000"
 8493 1048 01       		.byte	0x1
 8494 1049 3802     		.2byte	0x238
 8495 104b CE000000 		.4byte	0xce
 8496 104f 02       		.uleb128 0x2
 8497 1050 91       		.byte	0x91
 8498 1051 6A       		.sleb128 -22
 8499 1052 14       		.uleb128 0x14
 8500 1053 7700     		.ascii	"w\000"
 8501 1055 01       		.byte	0x1
 8502 1056 3902     		.2byte	0x239
 8503 1058 B8000000 		.4byte	0xb8
 8504 105c 02       		.uleb128 0x2
 8505 105d 91       		.byte	0x91
 8506 105e 57       		.sleb128 -41
 8507 105f 14       		.uleb128 0x14
 8508 1060 6800     		.ascii	"h\000"
 8509 1062 01       		.byte	0x1
 8510 1063 3A02     		.2byte	0x23a
 8511 1065 B8000000 		.4byte	0xb8
 8512 1069 02       		.uleb128 0x2
 8513 106a 91       		.byte	0x91
 8514 106b 56       		.sleb128 -42
 8515 106c 14       		.uleb128 0x14
 8516 106d 786F00   		.ascii	"xo\000"
 8517 1070 01       		.byte	0x1
 8518 1071 3B02     		.2byte	0x23b
 8519 1073 AD000000 		.4byte	0xad
 8520 1077 02       		.uleb128 0x2
 8521 1078 91       		.byte	0x91
 8522 1079 55       		.sleb128 -43
 8523 107a 14       		.uleb128 0x14
 8524 107b 796F00   		.ascii	"yo\000"
 8525 107e 01       		.byte	0x1
 8526 107f 3C02     		.2byte	0x23c
 8527 1081 AD000000 		.4byte	0xad
 8528 1085 02       		.uleb128 0x2
 8529 1086 91       		.byte	0x91
 8530 1087 54       		.sleb128 -44
 8531 1088 14       		.uleb128 0x14
 8532 1089 787800   		.ascii	"xx\000"
 8533 108c 01       		.byte	0x1
 8534 108d 3D02     		.2byte	0x23d
 8535 108f B8000000 		.4byte	0xb8
 8536 1093 02       		.uleb128 0x2
 8537 1094 91       		.byte	0x91
 8538 1095 69       		.sleb128 -23
 8539 1096 14       		.uleb128 0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 172


 8540 1097 797900   		.ascii	"yy\000"
 8541 109a 01       		.byte	0x1
 8542 109b 3D02     		.2byte	0x23d
 8543 109d B8000000 		.4byte	0xb8
 8544 10a1 02       		.uleb128 0x2
 8545 10a2 91       		.byte	0x91
 8546 10a3 68       		.sleb128 -24
 8547 10a4 13       		.uleb128 0x13
 8548 10a5 FA020000 		.4byte	.LASF102
 8549 10a9 01       		.byte	0x1
 8550 10aa 3D02     		.2byte	0x23d
 8551 10ac B8000000 		.4byte	0xb8
 8552 10b0 02       		.uleb128 0x2
 8553 10b1 91       		.byte	0x91
 8554 10b2 67       		.sleb128 -25
 8555 10b3 14       		.uleb128 0x14
 8556 10b4 62697400 		.ascii	"bit\000"
 8557 10b8 01       		.byte	0x1
 8558 10b9 3D02     		.2byte	0x23d
 8559 10bb B8000000 		.4byte	0xb8
 8560 10bf 02       		.uleb128 0x2
 8561 10c0 91       		.byte	0x91
 8562 10c1 66       		.sleb128 -26
 8563 10c2 13       		.uleb128 0x13
 8564 10c3 67070000 		.4byte	.LASF103
 8565 10c7 01       		.byte	0x1
 8566 10c8 3E02     		.2byte	0x23e
 8567 10ca C3000000 		.4byte	0xc3
 8568 10ce 02       		.uleb128 0x2
 8569 10cf 91       		.byte	0x91
 8570 10d0 64       		.sleb128 -28
 8571 10d1 13       		.uleb128 0x13
 8572 10d2 24040000 		.4byte	.LASF104
 8573 10d6 01       		.byte	0x1
 8574 10d7 3E02     		.2byte	0x23e
 8575 10d9 C3000000 		.4byte	0xc3
 8576 10dd 02       		.uleb128 0x2
 8577 10de 91       		.byte	0x91
 8578 10df 62       		.sleb128 -30
 8579 10e0 00       		.byte	0
 8580 10e1 00       		.byte	0
 8581 10e2 15       		.uleb128 0x15
 8582 10e3 53060000 		.4byte	.LASF105
 8583 10e7 01       		.byte	0x1
 8584 10e8 6E02     		.2byte	0x26e
 8585 10ea 00000000 		.4byte	.LFB89
 8586 10ee F8000000 		.4byte	.LFE89-.LFB89
 8587 10f2 01       		.uleb128 0x1
 8588 10f3 9C       		.byte	0x9c
 8589 10f4 3F110000 		.4byte	0x113f
 8590 10f8 16       		.uleb128 0x16
 8591 10f9 6B040000 		.4byte	.LASF59
 8592 10fd 01       		.byte	0x1
 8593 10fe 6E02     		.2byte	0x26e
 8594 1100 F6020000 		.4byte	0x2f6
 8595 1104 02       		.uleb128 0x2
 8596 1105 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 173


 8597 1106 6C       		.sleb128 -20
 8598 1107 16       		.uleb128 0x16
 8599 1108 EA050000 		.4byte	.LASF106
 8600 110c 01       		.byte	0x1
 8601 110d 6E02     		.2byte	0x26e
 8602 110f C3000000 		.4byte	0xc3
 8603 1113 02       		.uleb128 0x2
 8604 1114 91       		.byte	0x91
 8605 1115 6A       		.sleb128 -22
 8606 1116 12       		.uleb128 0x12
 8607 1117 50000000 		.4byte	.LBB25
 8608 111b A0000000 		.4byte	.LBE25-.LBB25
 8609 111f 13       		.uleb128 0x13
 8610 1120 A6020000 		.4byte	.LASF107
 8611 1124 01       		.byte	0x1
 8612 1125 7502     		.2byte	0x275
 8613 1127 C3000000 		.4byte	0xc3
 8614 112b 02       		.uleb128 0x2
 8615 112c 91       		.byte	0x91
 8616 112d 76       		.sleb128 -10
 8617 112e 13       		.uleb128 0x13
 8618 112f C8020000 		.4byte	.LASF108
 8619 1133 01       		.byte	0x1
 8620 1134 7F02     		.2byte	0x27f
 8621 1136 CE000000 		.4byte	0xce
 8622 113a 02       		.uleb128 0x2
 8623 113b 91       		.byte	0x91
 8624 113c 74       		.sleb128 -12
 8625 113d 00       		.byte	0
 8626 113e 00       		.byte	0
 8627 113f 15       		.uleb128 0x15
 8628 1140 AC010000 		.4byte	.LASF109
 8629 1144 01       		.byte	0x1
 8630 1145 8B02     		.2byte	0x28b
 8631 1147 00000000 		.4byte	.LFB90
 8632 114b 9A010000 		.4byte	.LFE90-.LFB90
 8633 114f 01       		.uleb128 0x1
 8634 1150 9C       		.byte	0x9c
 8635 1151 D6110000 		.4byte	0x11d6
 8636 1155 16       		.uleb128 0x16
 8637 1156 6B040000 		.4byte	.LASF59
 8638 115a 01       		.byte	0x1
 8639 115b 8B02     		.2byte	0x28b
 8640 115d F6020000 		.4byte	0x2f6
 8641 1161 02       		.uleb128 0x2
 8642 1162 91       		.byte	0x91
 8643 1163 5C       		.sleb128 -36
 8644 1164 17       		.uleb128 0x17
 8645 1165 6300     		.ascii	"c\000"
 8646 1167 01       		.byte	0x1
 8647 1168 8B02     		.2byte	0x28b
 8648 116a B8000000 		.4byte	0xb8
 8649 116e 02       		.uleb128 0x2
 8650 116f 91       		.byte	0x91
 8651 1170 5B       		.sleb128 -37
 8652 1171 12       		.uleb128 0x12
 8653 1172 D4000000 		.4byte	.LBB26
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 174


 8654 1176 BE000000 		.4byte	.LBE26-.LBB26
 8655 117a 13       		.uleb128 0x13
 8656 117b 7A060000 		.4byte	.LASF30
 8657 117f 01       		.byte	0x1
 8658 1180 A202     		.2byte	0x2a2
 8659 1182 B8000000 		.4byte	0xb8
 8660 1186 02       		.uleb128 0x2
 8661 1187 91       		.byte	0x91
 8662 1188 6F       		.sleb128 -17
 8663 1189 12       		.uleb128 0x12
 8664 118a F2000000 		.4byte	.LBB27
 8665 118e A0000000 		.4byte	.LBE27-.LBB27
 8666 1192 13       		.uleb128 0x13
 8667 1193 FC050000 		.4byte	.LASF29
 8668 1197 01       		.byte	0x1
 8669 1198 A402     		.2byte	0x2a4
 8670 119a 96010000 		.4byte	0x196
 8671 119e 02       		.uleb128 0x2
 8672 119f 91       		.byte	0x91
 8673 11a0 68       		.sleb128 -24
 8674 11a1 14       		.uleb128 0x14
 8675 11a2 7700     		.ascii	"w\000"
 8676 11a4 01       		.byte	0x1
 8677 11a5 A602     		.2byte	0x2a6
 8678 11a7 B8000000 		.4byte	0xb8
 8679 11ab 02       		.uleb128 0x2
 8680 11ac 91       		.byte	0x91
 8681 11ad 67       		.sleb128 -25
 8682 11ae 14       		.uleb128 0x14
 8683 11af 6800     		.ascii	"h\000"
 8684 11b1 01       		.byte	0x1
 8685 11b2 A702     		.2byte	0x2a7
 8686 11b4 B8000000 		.4byte	0xb8
 8687 11b8 02       		.uleb128 0x2
 8688 11b9 91       		.byte	0x91
 8689 11ba 66       		.sleb128 -26
 8690 11bb 12       		.uleb128 0x12
 8691 11bc 1E010000 		.4byte	.LBB28
 8692 11c0 56000000 		.4byte	.LBE28-.LBB28
 8693 11c4 14       		.uleb128 0x14
 8694 11c5 786F00   		.ascii	"xo\000"
 8695 11c8 01       		.byte	0x1
 8696 11c9 A902     		.2byte	0x2a9
 8697 11cb C3000000 		.4byte	0xc3
 8698 11cf 02       		.uleb128 0x2
 8699 11d0 91       		.byte	0x91
 8700 11d1 64       		.sleb128 -28
 8701 11d2 00       		.byte	0
 8702 11d3 00       		.byte	0
 8703 11d4 00       		.byte	0
 8704 11d5 00       		.byte	0
 8705 11d6 1A       		.uleb128 0x1a
 8706 11d7 8C040000 		.4byte	.LASF110
 8707 11db 01       		.byte	0x1
 8708 11dc B902     		.2byte	0x2b9
 8709 11de 00000000 		.4byte	.LFB91
 8710 11e2 26000000 		.4byte	.LFE91-.LFB91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 175


 8711 11e6 01       		.uleb128 0x1
 8712 11e7 9C       		.byte	0x9c
 8713 11e8 16120000 		.4byte	0x1216
 8714 11ec 16       		.uleb128 0x16
 8715 11ed 6B040000 		.4byte	.LASF59
 8716 11f1 01       		.byte	0x1
 8717 11f2 B902     		.2byte	0x2b9
 8718 11f4 F6020000 		.4byte	0x2f6
 8719 11f8 02       		.uleb128 0x2
 8720 11f9 91       		.byte	0x91
 8721 11fa 74       		.sleb128 -12
 8722 11fb 17       		.uleb128 0x17
 8723 11fc 7800     		.ascii	"x\000"
 8724 11fe 01       		.byte	0x1
 8725 11ff B902     		.2byte	0x2b9
 8726 1201 C3000000 		.4byte	0xc3
 8727 1205 02       		.uleb128 0x2
 8728 1206 91       		.byte	0x91
 8729 1207 72       		.sleb128 -14
 8730 1208 17       		.uleb128 0x17
 8731 1209 7900     		.ascii	"y\000"
 8732 120b 01       		.byte	0x1
 8733 120c B902     		.2byte	0x2b9
 8734 120e C3000000 		.4byte	0xc3
 8735 1212 02       		.uleb128 0x2
 8736 1213 91       		.byte	0x91
 8737 1214 70       		.sleb128 -16
 8738 1215 00       		.byte	0
 8739 1216 1B       		.uleb128 0x1b
 8740 1217 76050000 		.4byte	.LASF111
 8741 121b 01       		.byte	0x1
 8742 121c BE02     		.2byte	0x2be
 8743 121e C3000000 		.4byte	0xc3
 8744 1222 00000000 		.4byte	.LFB92
 8745 1226 18000000 		.4byte	.LFE92-.LFB92
 8746 122a 01       		.uleb128 0x1
 8747 122b 9C       		.byte	0x9c
 8748 122c 40120000 		.4byte	0x1240
 8749 1230 16       		.uleb128 0x16
 8750 1231 6B040000 		.4byte	.LASF59
 8751 1235 01       		.byte	0x1
 8752 1236 BE02     		.2byte	0x2be
 8753 1238 F6020000 		.4byte	0x2f6
 8754 123c 02       		.uleb128 0x2
 8755 123d 91       		.byte	0x91
 8756 123e 74       		.sleb128 -12
 8757 123f 00       		.byte	0
 8758 1240 1B       		.uleb128 0x1b
 8759 1241 84050000 		.4byte	.LASF112
 8760 1245 01       		.byte	0x1
 8761 1246 C302     		.2byte	0x2c3
 8762 1248 C3000000 		.4byte	0xc3
 8763 124c 00000000 		.4byte	.LFB93
 8764 1250 18000000 		.4byte	.LFE93-.LFB93
 8765 1254 01       		.uleb128 0x1
 8766 1255 9C       		.byte	0x9c
 8767 1256 6A120000 		.4byte	0x126a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 176


 8768 125a 16       		.uleb128 0x16
 8769 125b 6B040000 		.4byte	.LASF59
 8770 125f 01       		.byte	0x1
 8771 1260 C302     		.2byte	0x2c3
 8772 1262 F6020000 		.4byte	0x2f6
 8773 1266 02       		.uleb128 0x2
 8774 1267 91       		.byte	0x91
 8775 1268 74       		.sleb128 -12
 8776 1269 00       		.byte	0
 8777 126a 1A       		.uleb128 0x1a
 8778 126b 53040000 		.4byte	.LASF113
 8779 126f 01       		.byte	0x1
 8780 1270 C802     		.2byte	0x2c8
 8781 1272 00000000 		.4byte	.LFB94
 8782 1276 28000000 		.4byte	.LFE94-.LFB94
 8783 127a 01       		.uleb128 0x1
 8784 127b 9C       		.byte	0x9c
 8785 127c 9D120000 		.4byte	0x129d
 8786 1280 16       		.uleb128 0x16
 8787 1281 6B040000 		.4byte	.LASF59
 8788 1285 01       		.byte	0x1
 8789 1286 C802     		.2byte	0x2c8
 8790 1288 F6020000 		.4byte	0x2f6
 8791 128c 02       		.uleb128 0x2
 8792 128d 91       		.byte	0x91
 8793 128e 74       		.sleb128 -12
 8794 128f 17       		.uleb128 0x17
 8795 1290 7300     		.ascii	"s\000"
 8796 1292 01       		.byte	0x1
 8797 1293 C802     		.2byte	0x2c8
 8798 1295 B8000000 		.4byte	0xb8
 8799 1299 02       		.uleb128 0x2
 8800 129a 91       		.byte	0x91
 8801 129b 73       		.sleb128 -13
 8802 129c 00       		.byte	0
 8803 129d 1A       		.uleb128 0x1a
 8804 129e 71000000 		.4byte	.LASF114
 8805 12a2 01       		.byte	0x1
 8806 12a3 CC02     		.2byte	0x2cc
 8807 12a5 00000000 		.4byte	.LFB95
 8808 12a9 26000000 		.4byte	.LFE95-.LFB95
 8809 12ad 01       		.uleb128 0x1
 8810 12ae 9C       		.byte	0x9c
 8811 12af DD120000 		.4byte	0x12dd
 8812 12b3 16       		.uleb128 0x16
 8813 12b4 6B040000 		.4byte	.LASF59
 8814 12b8 01       		.byte	0x1
 8815 12b9 CC02     		.2byte	0x2cc
 8816 12bb F6020000 		.4byte	0x2f6
 8817 12bf 02       		.uleb128 0x2
 8818 12c0 91       		.byte	0x91
 8819 12c1 74       		.sleb128 -12
 8820 12c2 17       		.uleb128 0x17
 8821 12c3 6300     		.ascii	"c\000"
 8822 12c5 01       		.byte	0x1
 8823 12c6 CC02     		.2byte	0x2cc
 8824 12c8 CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 177


 8825 12cc 02       		.uleb128 0x2
 8826 12cd 91       		.byte	0x91
 8827 12ce 72       		.sleb128 -14
 8828 12cf 17       		.uleb128 0x17
 8829 12d0 6200     		.ascii	"b\000"
 8830 12d2 01       		.byte	0x1
 8831 12d3 CC02     		.2byte	0x2cc
 8832 12d5 CE000000 		.4byte	0xce
 8833 12d9 02       		.uleb128 0x2
 8834 12da 91       		.byte	0x91
 8835 12db 70       		.sleb128 -16
 8836 12dc 00       		.byte	0
 8837 12dd 1A       		.uleb128 0x1a
 8838 12de 6B060000 		.4byte	.LASF115
 8839 12e2 01       		.byte	0x1
 8840 12e3 D102     		.2byte	0x2d1
 8841 12e5 00000000 		.4byte	.LFB96
 8842 12e9 1E000000 		.4byte	.LFE96-.LFB96
 8843 12ed 01       		.uleb128 0x1
 8844 12ee 9C       		.byte	0x9c
 8845 12ef 10130000 		.4byte	0x1310
 8846 12f3 16       		.uleb128 0x16
 8847 12f4 6B040000 		.4byte	.LASF59
 8848 12f8 01       		.byte	0x1
 8849 12f9 D102     		.2byte	0x2d1
 8850 12fb F6020000 		.4byte	0x2f6
 8851 12ff 02       		.uleb128 0x2
 8852 1300 91       		.byte	0x91
 8853 1301 74       		.sleb128 -12
 8854 1302 17       		.uleb128 0x17
 8855 1303 7700     		.ascii	"w\000"
 8856 1305 01       		.byte	0x1
 8857 1306 D102     		.2byte	0x2d1
 8858 1308 B8000000 		.4byte	0xb8
 8859 130c 02       		.uleb128 0x2
 8860 130d 91       		.byte	0x91
 8861 130e 73       		.sleb128 -13
 8862 130f 00       		.byte	0
 8863 1310 1B       		.uleb128 0x1b
 8864 1311 6C070000 		.4byte	.LASF116
 8865 1315 01       		.byte	0x1
 8866 1316 D502     		.2byte	0x2d5
 8867 1318 B8000000 		.4byte	0xb8
 8868 131c 00000000 		.4byte	.LFB97
 8869 1320 18000000 		.4byte	.LFE97-.LFB97
 8870 1324 01       		.uleb128 0x1
 8871 1325 9C       		.byte	0x9c
 8872 1326 3A130000 		.4byte	0x133a
 8873 132a 16       		.uleb128 0x16
 8874 132b 6B040000 		.4byte	.LASF59
 8875 132f 01       		.byte	0x1
 8876 1330 D502     		.2byte	0x2d5
 8877 1332 F6020000 		.4byte	0x2f6
 8878 1336 02       		.uleb128 0x2
 8879 1337 91       		.byte	0x91
 8880 1338 74       		.sleb128 -12
 8881 1339 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 178


 8882 133a 1A       		.uleb128 0x1a
 8883 133b B5010000 		.4byte	.LASF117
 8884 133f 01       		.byte	0x1
 8885 1340 D902     		.2byte	0x2d9
 8886 1342 00000000 		.4byte	.LFB98
 8887 1346 76000000 		.4byte	.LFE98-.LFB98
 8888 134a 01       		.uleb128 0x1
 8889 134b 9C       		.byte	0x9c
 8890 134c 6D130000 		.4byte	0x136d
 8891 1350 16       		.uleb128 0x16
 8892 1351 6B040000 		.4byte	.LASF59
 8893 1355 01       		.byte	0x1
 8894 1356 D902     		.2byte	0x2d9
 8895 1358 F6020000 		.4byte	0x2f6
 8896 135c 02       		.uleb128 0x2
 8897 135d 91       		.byte	0x91
 8898 135e 74       		.sleb128 -12
 8899 135f 17       		.uleb128 0x17
 8900 1360 7800     		.ascii	"x\000"
 8901 1362 01       		.byte	0x1
 8902 1363 D902     		.2byte	0x2d9
 8903 1365 B8000000 		.4byte	0xb8
 8904 1369 02       		.uleb128 0x2
 8905 136a 91       		.byte	0x91
 8906 136b 73       		.sleb128 -13
 8907 136c 00       		.byte	0
 8908 136d 1A       		.uleb128 0x1a
 8909 136e F1040000 		.4byte	.LASF118
 8910 1372 01       		.byte	0x1
 8911 1373 F002     		.2byte	0x2f0
 8912 1375 00000000 		.4byte	.LFB99
 8913 1379 1E000000 		.4byte	.LFE99-.LFB99
 8914 137d 01       		.uleb128 0x1
 8915 137e 9C       		.byte	0x9c
 8916 137f A0130000 		.4byte	0x13a0
 8917 1383 16       		.uleb128 0x16
 8918 1384 6B040000 		.4byte	.LASF59
 8919 1388 01       		.byte	0x1
 8920 1389 F002     		.2byte	0x2f0
 8921 138b F6020000 		.4byte	0x2f6
 8922 138f 02       		.uleb128 0x2
 8923 1390 91       		.byte	0x91
 8924 1391 74       		.sleb128 -12
 8925 1392 17       		.uleb128 0x17
 8926 1393 7800     		.ascii	"x\000"
 8927 1395 01       		.byte	0x1
 8928 1396 F002     		.2byte	0x2f0
 8929 1398 B8000000 		.4byte	0xb8
 8930 139c 02       		.uleb128 0x2
 8931 139d 91       		.byte	0x91
 8932 139e 73       		.sleb128 -13
 8933 139f 00       		.byte	0
 8934 13a0 1A       		.uleb128 0x1a
 8935 13a1 41020000 		.4byte	.LASF119
 8936 13a5 01       		.byte	0x1
 8937 13a6 F402     		.2byte	0x2f4
 8938 13a8 00000000 		.4byte	.LFB100
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 179


 8939 13ac DC000000 		.4byte	.LFE100-.LFB100
 8940 13b0 01       		.uleb128 0x1
 8941 13b1 9C       		.byte	0x9c
 8942 13b2 47140000 		.4byte	0x1447
 8943 13b6 16       		.uleb128 0x16
 8944 13b7 6B040000 		.4byte	.LASF59
 8945 13bb 01       		.byte	0x1
 8946 13bc F402     		.2byte	0x2f4
 8947 13be F6020000 		.4byte	0x2f6
 8948 13c2 02       		.uleb128 0x2
 8949 13c3 91       		.byte	0x91
 8950 13c4 64       		.sleb128 -28
 8951 13c5 17       		.uleb128 0x17
 8952 13c6 6600     		.ascii	"f\000"
 8953 13c8 01       		.byte	0x1
 8954 13c9 F402     		.2byte	0x2f4
 8955 13cb 47140000 		.4byte	0x1447
 8956 13cf 02       		.uleb128 0x2
 8957 13d0 91       		.byte	0x91
 8958 13d1 60       		.sleb128 -32
 8959 13d2 12       		.uleb128 0x12
 8960 13d3 2E000000 		.4byte	.LBB29
 8961 13d7 7C000000 		.4byte	.LBE29-.LBB29
 8962 13db 13       		.uleb128 0x13
 8963 13dc 7A060000 		.4byte	.LASF30
 8964 13e0 01       		.byte	0x1
 8965 13e1 0603     		.2byte	0x306
 8966 13e3 B8000000 		.4byte	0xb8
 8967 13e7 02       		.uleb128 0x2
 8968 13e8 91       		.byte	0x91
 8969 13e9 76       		.sleb128 -10
 8970 13ea 13       		.uleb128 0x13
 8971 13eb 0E000000 		.4byte	.LASF31
 8972 13ef 01       		.byte	0x1
 8973 13f0 0703     		.2byte	0x307
 8974 13f2 B8000000 		.4byte	0xb8
 8975 13f6 02       		.uleb128 0x2
 8976 13f7 91       		.byte	0x91
 8977 13f8 75       		.sleb128 -11
 8978 13f9 12       		.uleb128 0x12
 8979 13fa 44000000 		.4byte	.LBB30
 8980 13fe 5A000000 		.4byte	.LBE30-.LBB30
 8981 1402 14       		.uleb128 0x14
 8982 1403 6900     		.ascii	"i\000"
 8983 1405 01       		.byte	0x1
 8984 1406 0803     		.2byte	0x308
 8985 1408 B8000000 		.4byte	0xb8
 8986 140c 02       		.uleb128 0x2
 8987 140d 91       		.byte	0x91
 8988 140e 77       		.sleb128 -9
 8989 140f 12       		.uleb128 0x12
 8990 1410 4A000000 		.4byte	.LBB31
 8991 1414 46000000 		.4byte	.LBE31-.LBB31
 8992 1418 13       		.uleb128 0x13
 8993 1419 FC050000 		.4byte	.LASF29
 8994 141d 01       		.byte	0x1
 8995 141e 0A03     		.2byte	0x30a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 180


 8996 1420 96010000 		.4byte	0x196
 8997 1424 02       		.uleb128 0x2
 8998 1425 91       		.byte	0x91
 8999 1426 70       		.sleb128 -16
 9000 1427 14       		.uleb128 0x14
 9001 1428 676800   		.ascii	"gh\000"
 9002 142b 01       		.byte	0x1
 9003 142c 0B03     		.2byte	0x30b
 9004 142e B8000000 		.4byte	0xb8
 9005 1432 02       		.uleb128 0x2
 9006 1433 91       		.byte	0x91
 9007 1434 6F       		.sleb128 -17
 9008 1435 14       		.uleb128 0x14
 9009 1436 796F00   		.ascii	"yo\000"
 9010 1439 01       		.byte	0x1
 9011 143a 0C03     		.2byte	0x30c
 9012 143c AD000000 		.4byte	0xad
 9013 1440 02       		.uleb128 0x2
 9014 1441 91       		.byte	0x91
 9015 1442 6E       		.sleb128 -18
 9016 1443 00       		.byte	0
 9017 1444 00       		.byte	0
 9018 1445 00       		.byte	0
 9019 1446 00       		.byte	0
 9020 1447 07       		.uleb128 0x7
 9021 1448 04       		.byte	0x4
 9022 1449 4D140000 		.4byte	0x144d
 9023 144d 1C       		.uleb128 0x1c
 9024 144e 9C010000 		.4byte	0x19c
 9025 1452 1A       		.uleb128 0x1a
 9026 1453 3C000000 		.4byte	.LASF120
 9027 1457 01       		.byte	0x1
 9028 1458 3203     		.2byte	0x332
 9029 145a 00000000 		.4byte	.LFB101
 9030 145e 30030000 		.4byte	.LFE101-.LFB101
 9031 1462 01       		.uleb128 0x1
 9032 1463 9C       		.byte	0x9c
 9033 1464 D2150000 		.4byte	0x15d2
 9034 1468 16       		.uleb128 0x16
 9035 1469 6B040000 		.4byte	.LASF59
 9036 146d 01       		.byte	0x1
 9037 146e 3203     		.2byte	0x332
 9038 1470 F6020000 		.4byte	0x2f6
 9039 1474 02       		.uleb128 0x2
 9040 1475 91       		.byte	0x91
 9041 1476 54       		.sleb128 -44
 9042 1477 17       		.uleb128 0x17
 9043 1478 6300     		.ascii	"c\000"
 9044 147a 01       		.byte	0x1
 9045 147b 3203     		.2byte	0x332
 9046 147d C1010000 		.4byte	0x1c1
 9047 1481 02       		.uleb128 0x2
 9048 1482 91       		.byte	0x91
 9049 1483 53       		.sleb128 -45
 9050 1484 17       		.uleb128 0x17
 9051 1485 7800     		.ascii	"x\000"
 9052 1487 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 181


 9053 1488 3203     		.2byte	0x332
 9054 148a D2150000 		.4byte	0x15d2
 9055 148e 02       		.uleb128 0x2
 9056 148f 91       		.byte	0x91
 9057 1490 4C       		.sleb128 -52
 9058 1491 17       		.uleb128 0x17
 9059 1492 7900     		.ascii	"y\000"
 9060 1494 01       		.byte	0x1
 9061 1495 3203     		.2byte	0x332
 9062 1497 D2150000 		.4byte	0x15d2
 9063 149b 02       		.uleb128 0x2
 9064 149c 91       		.byte	0x91
 9065 149d 48       		.sleb128 -56
 9066 149e 16       		.uleb128 0x16
 9067 149f CF020000 		.4byte	.LASF121
 9068 14a3 01       		.byte	0x1
 9069 14a4 3303     		.2byte	0x333
 9070 14a6 D2150000 		.4byte	0x15d2
 9071 14aa 02       		.uleb128 0x2
 9072 14ab 91       		.byte	0x91
 9073 14ac 00       		.sleb128 0
 9074 14ad 16       		.uleb128 0x16
 9075 14ae D4020000 		.4byte	.LASF122
 9076 14b2 01       		.byte	0x1
 9077 14b3 3303     		.2byte	0x333
 9078 14b5 D2150000 		.4byte	0x15d2
 9079 14b9 02       		.uleb128 0x2
 9080 14ba 91       		.byte	0x91
 9081 14bb 04       		.sleb128 4
 9082 14bc 16       		.uleb128 0x16
 9083 14bd 71050000 		.4byte	.LASF123
 9084 14c1 01       		.byte	0x1
 9085 14c2 3303     		.2byte	0x333
 9086 14c4 D2150000 		.4byte	0x15d2
 9087 14c8 02       		.uleb128 0x2
 9088 14c9 91       		.byte	0x91
 9089 14ca 08       		.sleb128 8
 9090 14cb 16       		.uleb128 0x16
 9091 14cc 13070000 		.4byte	.LASF124
 9092 14d0 01       		.byte	0x1
 9093 14d1 3303     		.2byte	0x333
 9094 14d3 D2150000 		.4byte	0x15d2
 9095 14d7 02       		.uleb128 0x2
 9096 14d8 91       		.byte	0x91
 9097 14d9 0C       		.sleb128 12
 9098 14da 11       		.uleb128 0x11
 9099 14db 56000000 		.4byte	.LBB32
 9100 14df A8010000 		.4byte	.LBE32-.LBB32
 9101 14e3 AB150000 		.4byte	0x15ab
 9102 14e7 13       		.uleb128 0x13
 9103 14e8 7A060000 		.4byte	.LASF30
 9104 14ec 01       		.byte	0x1
 9105 14ed 3B03     		.2byte	0x33b
 9106 14ef B8000000 		.4byte	0xb8
 9107 14f3 02       		.uleb128 0x2
 9108 14f4 91       		.byte	0x91
 9109 14f5 77       		.sleb128 -9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 182


 9110 14f6 13       		.uleb128 0x13
 9111 14f7 0E000000 		.4byte	.LASF31
 9112 14fb 01       		.byte	0x1
 9113 14fc 3C03     		.2byte	0x33c
 9114 14fe B8000000 		.4byte	0xb8
 9115 1502 02       		.uleb128 0x2
 9116 1503 91       		.byte	0x91
 9117 1504 76       		.sleb128 -10
 9118 1505 12       		.uleb128 0x12
 9119 1506 82000000 		.4byte	.LBB33
 9120 150a 7C010000 		.4byte	.LBE33-.LBB33
 9121 150e 13       		.uleb128 0x13
 9122 150f FC050000 		.4byte	.LASF29
 9123 1513 01       		.byte	0x1
 9124 1514 3E03     		.2byte	0x33e
 9125 1516 96010000 		.4byte	0x196
 9126 151a 02       		.uleb128 0x2
 9127 151b 91       		.byte	0x91
 9128 151c 70       		.sleb128 -16
 9129 151d 14       		.uleb128 0x14
 9130 151e 677700   		.ascii	"gw\000"
 9131 1521 01       		.byte	0x1
 9132 1522 4003     		.2byte	0x340
 9133 1524 B8000000 		.4byte	0xb8
 9134 1528 02       		.uleb128 0x2
 9135 1529 91       		.byte	0x91
 9136 152a 6F       		.sleb128 -17
 9137 152b 14       		.uleb128 0x14
 9138 152c 676800   		.ascii	"gh\000"
 9139 152f 01       		.byte	0x1
 9140 1530 4103     		.2byte	0x341
 9141 1532 B8000000 		.4byte	0xb8
 9142 1536 02       		.uleb128 0x2
 9143 1537 91       		.byte	0x91
 9144 1538 6E       		.sleb128 -18
 9145 1539 14       		.uleb128 0x14
 9146 153a 786100   		.ascii	"xa\000"
 9147 153d 01       		.byte	0x1
 9148 153e 4203     		.2byte	0x342
 9149 1540 B8000000 		.4byte	0xb8
 9150 1544 02       		.uleb128 0x2
 9151 1545 91       		.byte	0x91
 9152 1546 6D       		.sleb128 -19
 9153 1547 14       		.uleb128 0x14
 9154 1548 786F00   		.ascii	"xo\000"
 9155 154b 01       		.byte	0x1
 9156 154c 4303     		.2byte	0x343
 9157 154e AD000000 		.4byte	0xad
 9158 1552 02       		.uleb128 0x2
 9159 1553 91       		.byte	0x91
 9160 1554 6C       		.sleb128 -20
 9161 1555 14       		.uleb128 0x14
 9162 1556 796F00   		.ascii	"yo\000"
 9163 1559 01       		.byte	0x1
 9164 155a 4403     		.2byte	0x344
 9165 155c AD000000 		.4byte	0xad
 9166 1560 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 183


 9167 1561 91       		.byte	0x91
 9168 1562 6B       		.sleb128 -21
 9169 1563 14       		.uleb128 0x14
 9170 1564 747300   		.ascii	"ts\000"
 9171 1567 01       		.byte	0x1
 9172 1568 4903     		.2byte	0x349
 9173 156a C3000000 		.4byte	0xc3
 9174 156e 02       		.uleb128 0x2
 9175 156f 91       		.byte	0x91
 9176 1570 68       		.sleb128 -24
 9177 1571 14       		.uleb128 0x14
 9178 1572 783100   		.ascii	"x1\000"
 9179 1575 01       		.byte	0x1
 9180 1576 4A03     		.2byte	0x34a
 9181 1578 C3000000 		.4byte	0xc3
 9182 157c 02       		.uleb128 0x2
 9183 157d 91       		.byte	0x91
 9184 157e 66       		.sleb128 -26
 9185 157f 14       		.uleb128 0x14
 9186 1580 793100   		.ascii	"y1\000"
 9187 1583 01       		.byte	0x1
 9188 1584 4B03     		.2byte	0x34b
 9189 1586 C3000000 		.4byte	0xc3
 9190 158a 02       		.uleb128 0x2
 9191 158b 91       		.byte	0x91
 9192 158c 64       		.sleb128 -28
 9193 158d 14       		.uleb128 0x14
 9194 158e 783200   		.ascii	"x2\000"
 9195 1591 01       		.byte	0x1
 9196 1592 4C03     		.2byte	0x34c
 9197 1594 C3000000 		.4byte	0xc3
 9198 1598 02       		.uleb128 0x2
 9199 1599 91       		.byte	0x91
 9200 159a 62       		.sleb128 -30
 9201 159b 14       		.uleb128 0x14
 9202 159c 793200   		.ascii	"y2\000"
 9203 159f 01       		.byte	0x1
 9204 15a0 4D03     		.2byte	0x34d
 9205 15a2 C3000000 		.4byte	0xc3
 9206 15a6 02       		.uleb128 0x2
 9207 15a7 91       		.byte	0x91
 9208 15a8 60       		.sleb128 -32
 9209 15a9 00       		.byte	0
 9210 15aa 00       		.byte	0
 9211 15ab 12       		.uleb128 0x12
 9212 15ac 2E020000 		.4byte	.LBB34
 9213 15b0 F8000000 		.4byte	.LBE34-.LBB34
 9214 15b4 14       		.uleb128 0x14
 9215 15b5 783200   		.ascii	"x2\000"
 9216 15b8 01       		.byte	0x1
 9217 15b9 6103     		.2byte	0x361
 9218 15bb 9F000000 		.4byte	0x9f
 9219 15bf 02       		.uleb128 0x2
 9220 15c0 91       		.byte	0x91
 9221 15c1 5C       		.sleb128 -36
 9222 15c2 14       		.uleb128 0x14
 9223 15c3 793200   		.ascii	"y2\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 184


 9224 15c6 01       		.byte	0x1
 9225 15c7 6203     		.2byte	0x362
 9226 15c9 9F000000 		.4byte	0x9f
 9227 15cd 02       		.uleb128 0x2
 9228 15ce 91       		.byte	0x91
 9229 15cf 58       		.sleb128 -40
 9230 15d0 00       		.byte	0
 9231 15d1 00       		.byte	0
 9232 15d2 07       		.uleb128 0x7
 9233 15d3 04       		.byte	0x4
 9234 15d4 C3000000 		.4byte	0xc3
 9235 15d8 15       		.uleb128 0x15
 9236 15d9 FF020000 		.4byte	.LASF125
 9237 15dd 01       		.byte	0x1
 9238 15de 6E03     		.2byte	0x36e
 9239 15e0 00000000 		.4byte	.LFB102
 9240 15e4 E8000000 		.4byte	.LFE102-.LFB102
 9241 15e8 01       		.uleb128 0x1
 9242 15e9 9C       		.byte	0x9c
 9243 15ea A6160000 		.4byte	0x16a6
 9244 15ee 16       		.uleb128 0x16
 9245 15ef 6B040000 		.4byte	.LASF59
 9246 15f3 01       		.byte	0x1
 9247 15f4 6E03     		.2byte	0x36e
 9248 15f6 F6020000 		.4byte	0x2f6
 9249 15fa 02       		.uleb128 0x2
 9250 15fb 91       		.byte	0x91
 9251 15fc 64       		.sleb128 -28
 9252 15fd 17       		.uleb128 0x17
 9253 15fe 73747200 		.ascii	"str\000"
 9254 1602 01       		.byte	0x1
 9255 1603 6E03     		.2byte	0x36e
 9256 1605 D6010000 		.4byte	0x1d6
 9257 1609 02       		.uleb128 0x2
 9258 160a 91       		.byte	0x91
 9259 160b 60       		.sleb128 -32
 9260 160c 17       		.uleb128 0x17
 9261 160d 7800     		.ascii	"x\000"
 9262 160f 01       		.byte	0x1
 9263 1610 6E03     		.2byte	0x36e
 9264 1612 C3000000 		.4byte	0xc3
 9265 1616 02       		.uleb128 0x2
 9266 1617 91       		.byte	0x91
 9267 1618 5E       		.sleb128 -34
 9268 1619 17       		.uleb128 0x17
 9269 161a 7900     		.ascii	"y\000"
 9270 161c 01       		.byte	0x1
 9271 161d 6E03     		.2byte	0x36e
 9272 161f C3000000 		.4byte	0xc3
 9273 1623 02       		.uleb128 0x2
 9274 1624 91       		.byte	0x91
 9275 1625 5C       		.sleb128 -36
 9276 1626 17       		.uleb128 0x17
 9277 1627 783100   		.ascii	"x1\000"
 9278 162a 01       		.byte	0x1
 9279 162b 6F03     		.2byte	0x36f
 9280 162d D2150000 		.4byte	0x15d2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 185


 9281 1631 02       		.uleb128 0x2
 9282 1632 91       		.byte	0x91
 9283 1633 00       		.sleb128 0
 9284 1634 17       		.uleb128 0x17
 9285 1635 793100   		.ascii	"y1\000"
 9286 1638 01       		.byte	0x1
 9287 1639 6F03     		.2byte	0x36f
 9288 163b D2150000 		.4byte	0x15d2
 9289 163f 02       		.uleb128 0x2
 9290 1640 91       		.byte	0x91
 9291 1641 04       		.sleb128 4
 9292 1642 17       		.uleb128 0x17
 9293 1643 7700     		.ascii	"w\000"
 9294 1645 01       		.byte	0x1
 9295 1646 6F03     		.2byte	0x36f
 9296 1648 A6160000 		.4byte	0x16a6
 9297 164c 02       		.uleb128 0x2
 9298 164d 91       		.byte	0x91
 9299 164e 08       		.sleb128 8
 9300 164f 17       		.uleb128 0x17
 9301 1650 6800     		.ascii	"h\000"
 9302 1652 01       		.byte	0x1
 9303 1653 6F03     		.2byte	0x36f
 9304 1655 A6160000 		.4byte	0x16a6
 9305 1659 02       		.uleb128 0x2
 9306 165a 91       		.byte	0x91
 9307 165b 0C       		.sleb128 12
 9308 165c 14       		.uleb128 0x14
 9309 165d 6300     		.ascii	"c\000"
 9310 165f 01       		.byte	0x1
 9311 1660 7003     		.2byte	0x370
 9312 1662 B8000000 		.4byte	0xb8
 9313 1666 02       		.uleb128 0x2
 9314 1667 91       		.byte	0x91
 9315 1668 77       		.sleb128 -9
 9316 1669 13       		.uleb128 0x13
 9317 166a CF020000 		.4byte	.LASF121
 9318 166e 01       		.byte	0x1
 9319 166f 7603     		.2byte	0x376
 9320 1671 C3000000 		.4byte	0xc3
 9321 1675 02       		.uleb128 0x2
 9322 1676 91       		.byte	0x91
 9323 1677 74       		.sleb128 -12
 9324 1678 13       		.uleb128 0x13
 9325 1679 D4020000 		.4byte	.LASF122
 9326 167d 01       		.byte	0x1
 9327 167e 7603     		.2byte	0x376
 9328 1680 C3000000 		.4byte	0xc3
 9329 1684 02       		.uleb128 0x2
 9330 1685 91       		.byte	0x91
 9331 1686 72       		.sleb128 -14
 9332 1687 13       		.uleb128 0x13
 9333 1688 71050000 		.4byte	.LASF123
 9334 168c 01       		.byte	0x1
 9335 168d 7603     		.2byte	0x376
 9336 168f C3000000 		.4byte	0xc3
 9337 1693 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 186


 9338 1694 91       		.byte	0x91
 9339 1695 70       		.sleb128 -16
 9340 1696 13       		.uleb128 0x13
 9341 1697 13070000 		.4byte	.LASF124
 9342 169b 01       		.byte	0x1
 9343 169c 7603     		.2byte	0x376
 9344 169e C3000000 		.4byte	0xc3
 9345 16a2 02       		.uleb128 0x2
 9346 16a3 91       		.byte	0x91
 9347 16a4 6E       		.sleb128 -18
 9348 16a5 00       		.byte	0
 9349 16a6 07       		.uleb128 0x7
 9350 16a7 04       		.byte	0x4
 9351 16a8 CE000000 		.4byte	0xce
 9352 16ac 1B       		.uleb128 0x1b
 9353 16ad 33000000 		.4byte	.LASF126
 9354 16b1 01       		.byte	0x1
 9355 16b2 8803     		.2byte	0x388
 9356 16b4 C3000000 		.4byte	0xc3
 9357 16b8 00000000 		.4byte	.LFB103
 9358 16bc 18000000 		.4byte	.LFE103-.LFB103
 9359 16c0 01       		.uleb128 0x1
 9360 16c1 9C       		.byte	0x9c
 9361 16c2 D6160000 		.4byte	0x16d6
 9362 16c6 16       		.uleb128 0x16
 9363 16c7 6B040000 		.4byte	.LASF59
 9364 16cb 01       		.byte	0x1
 9365 16cc 8803     		.2byte	0x388
 9366 16ce F6020000 		.4byte	0x2f6
 9367 16d2 02       		.uleb128 0x2
 9368 16d3 91       		.byte	0x91
 9369 16d4 74       		.sleb128 -12
 9370 16d5 00       		.byte	0
 9371 16d6 1B       		.uleb128 0x1b
 9372 16d7 25050000 		.4byte	.LASF127
 9373 16db 01       		.byte	0x1
 9374 16dc 8C03     		.2byte	0x38c
 9375 16de C3000000 		.4byte	0xc3
 9376 16e2 00000000 		.4byte	.LFB104
 9377 16e6 18000000 		.4byte	.LFE104-.LFB104
 9378 16ea 01       		.uleb128 0x1
 9379 16eb 9C       		.byte	0x9c
 9380 16ec 00170000 		.4byte	0x1700
 9381 16f0 16       		.uleb128 0x16
 9382 16f1 6B040000 		.4byte	.LASF59
 9383 16f5 01       		.byte	0x1
 9384 16f6 8C03     		.2byte	0x38c
 9385 16f8 F6020000 		.4byte	0x2f6
 9386 16fc 02       		.uleb128 0x2
 9387 16fd 91       		.byte	0x91
 9388 16fe 74       		.sleb128 -12
 9389 16ff 00       		.byte	0
 9390 1700 1A       		.uleb128 0x1a
 9391 1701 57010000 		.4byte	.LASF128
 9392 1705 01       		.byte	0x1
 9393 1706 9003     		.2byte	0x390
 9394 1708 00000000 		.4byte	.LFB105
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 187


 9395 170c 16000000 		.4byte	.LFE105-.LFB105
 9396 1710 01       		.uleb128 0x1
 9397 1711 9C       		.byte	0x9c
 9398 1712 33170000 		.4byte	0x1733
 9399 1716 16       		.uleb128 0x16
 9400 1717 6B040000 		.4byte	.LASF59
 9401 171b 01       		.byte	0x1
 9402 171c 9003     		.2byte	0x390
 9403 171e F6020000 		.4byte	0x2f6
 9404 1722 02       		.uleb128 0x2
 9405 1723 91       		.byte	0x91
 9406 1724 74       		.sleb128 -12
 9407 1725 17       		.uleb128 0x17
 9408 1726 6900     		.ascii	"i\000"
 9409 1728 01       		.byte	0x1
 9410 1729 9003     		.2byte	0x390
 9411 172b B8000000 		.4byte	0xb8
 9412 172f 02       		.uleb128 0x2
 9413 1730 91       		.byte	0x91
 9414 1731 73       		.sleb128 -13
 9415 1732 00       		.byte	0
 9416 1733 1D       		.uleb128 0x1d
 9417 1734 99060000 		.4byte	.LASF129
 9418 1738 01       		.byte	0x1
 9419 1739 A403     		.2byte	0x3a4
 9420 173b 9F000000 		.4byte	0x9f
 9421 173f 00000000 		.4byte	.LFB106
 9422 1743 80000000 		.4byte	.LFE106-.LFB106
 9423 1747 01       		.uleb128 0x1
 9424 1748 9C       		.byte	0x9c
 9425 1749 BA170000 		.4byte	0x17ba
 9426 174d 16       		.uleb128 0x16
 9427 174e 6A000000 		.4byte	.LASF130
 9428 1752 01       		.byte	0x1
 9429 1753 A403     		.2byte	0x3a4
 9430 1755 D6010000 		.4byte	0x1d6
 9431 1759 02       		.uleb128 0x2
 9432 175a 91       		.byte	0x91
 9433 175b 64       		.sleb128 -28
 9434 175c 16       		.uleb128 0x16
 9435 175d B1020000 		.4byte	.LASF131
 9436 1761 01       		.byte	0x1
 9437 1762 A403     		.2byte	0x3a4
 9438 1764 E4000000 		.4byte	0xe4
 9439 1768 02       		.uleb128 0x2
 9440 1769 91       		.byte	0x91
 9441 176a 60       		.sleb128 -32
 9442 176b 16       		.uleb128 0x16
 9443 176c 8B010000 		.4byte	.LASF132
 9444 1770 01       		.byte	0x1
 9445 1771 A403     		.2byte	0x3a4
 9446 1773 B8000000 		.4byte	0xb8
 9447 1777 02       		.uleb128 0x2
 9448 1778 91       		.byte	0x91
 9449 1779 5F       		.sleb128 -33
 9450 177a 12       		.uleb128 0x12
 9451 177b 0E000000 		.4byte	.LBB35
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 188


 9452 177f 62000000 		.4byte	.LBE35-.LBB35
 9453 1783 14       		.uleb128 0x14
 9454 1784 6900     		.ascii	"i\000"
 9455 1786 01       		.byte	0x1
 9456 1787 A603     		.2byte	0x3a6
 9457 1789 9F000000 		.4byte	0x9f
 9458 178d 02       		.uleb128 0x2
 9459 178e 91       		.byte	0x91
 9460 178f 74       		.sleb128 -12
 9461 1790 12       		.uleb128 0x12
 9462 1791 14000000 		.4byte	.LBB36
 9463 1795 4E000000 		.4byte	.LBE36-.LBB36
 9464 1799 13       		.uleb128 0x13
 9465 179a 46050000 		.4byte	.LASF133
 9466 179e 01       		.byte	0x1
 9467 179f A803     		.2byte	0x3a8
 9468 17a1 9F000000 		.4byte	0x9f
 9469 17a5 02       		.uleb128 0x2
 9470 17a6 91       		.byte	0x91
 9471 17a7 70       		.sleb128 -16
 9472 17a8 13       		.uleb128 0x13
 9473 17a9 56000000 		.4byte	.LASF134
 9474 17ad 01       		.byte	0x1
 9475 17ae A903     		.2byte	0x3a9
 9476 17b0 9F000000 		.4byte	0x9f
 9477 17b4 02       		.uleb128 0x2
 9478 17b5 91       		.byte	0x91
 9479 17b6 6C       		.sleb128 -20
 9480 17b7 00       		.byte	0
 9481 17b8 00       		.byte	0
 9482 17b9 00       		.byte	0
 9483 17ba 1D       		.uleb128 0x1d
 9484 17bb 6B020000 		.4byte	.LASF135
 9485 17bf 01       		.byte	0x1
 9486 17c0 B103     		.2byte	0x3b1
 9487 17c2 9F000000 		.4byte	0x9f
 9488 17c6 00000000 		.4byte	.LFB107
 9489 17ca 70010000 		.4byte	.LFE107-.LFB107
 9490 17ce 01       		.uleb128 0x1
 9491 17cf 9C       		.byte	0x9c
 9492 17d0 5C180000 		.4byte	0x185c
 9493 17d4 16       		.uleb128 0x16
 9494 17d5 6A000000 		.4byte	.LASF130
 9495 17d9 01       		.byte	0x1
 9496 17da B103     		.2byte	0x3b1
 9497 17dc D6010000 		.4byte	0x1d6
 9498 17e0 02       		.uleb128 0x2
 9499 17e1 91       		.byte	0x91
 9500 17e2 54       		.sleb128 -44
 9501 17e3 16       		.uleb128 0x16
 9502 17e4 61050000 		.4byte	.LASF136
 9503 17e8 01       		.byte	0x1
 9504 17e9 B103     		.2byte	0x3b1
 9505 17eb B3010000 		.4byte	0x1b3
 9506 17ef 02       		.uleb128 0x2
 9507 17f0 91       		.byte	0x91
 9508 17f1 50       		.sleb128 -48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 189


 9509 17f2 16       		.uleb128 0x16
 9510 17f3 13000000 		.4byte	.LASF137
 9511 17f7 01       		.byte	0x1
 9512 17f8 B103     		.2byte	0x3b1
 9513 17fa B8000000 		.4byte	0xb8
 9514 17fe 02       		.uleb128 0x2
 9515 17ff 91       		.byte	0x91
 9516 1800 4F       		.sleb128 -49
 9517 1801 13       		.uleb128 0x13
 9518 1802 28020000 		.4byte	.LASF138
 9519 1806 01       		.byte	0x1
 9520 1807 B303     		.2byte	0x3b3
 9521 1809 9F000000 		.4byte	0x9f
 9522 180d 02       		.uleb128 0x2
 9523 180e 91       		.byte	0x91
 9524 180f 5C       		.sleb128 -36
 9525 1810 13       		.uleb128 0x13
 9526 1811 40070000 		.4byte	.LASF139
 9527 1815 01       		.byte	0x1
 9528 1816 B303     		.2byte	0x3b3
 9529 1818 9F000000 		.4byte	0x9f
 9530 181c 02       		.uleb128 0x2
 9531 181d 91       		.byte	0x91
 9532 181e 58       		.sleb128 -40
 9533 181f 13       		.uleb128 0x13
 9534 1820 6C050000 		.4byte	.LASF140
 9535 1824 01       		.byte	0x1
 9536 1825 B303     		.2byte	0x3b3
 9537 1827 9F000000 		.4byte	0x9f
 9538 182b 02       		.uleb128 0x2
 9539 182c 91       		.byte	0x91
 9540 182d 6C       		.sleb128 -20
 9541 182e 14       		.uleb128 0x14
 9542 182f 6E656700 		.ascii	"neg\000"
 9543 1833 01       		.byte	0x1
 9544 1834 B303     		.2byte	0x3b3
 9545 1836 9F000000 		.4byte	0x9f
 9546 183a 02       		.uleb128 0x2
 9547 183b 91       		.byte	0x91
 9548 183c 68       		.sleb128 -24
 9549 183d 13       		.uleb128 0x13
 9550 183e 9F020000 		.4byte	.LASF141
 9551 1842 01       		.byte	0x1
 9552 1843 B303     		.2byte	0x3b3
 9553 1845 B3010000 		.4byte	0x1b3
 9554 1849 02       		.uleb128 0x2
 9555 184a 91       		.byte	0x91
 9556 184b 64       		.sleb128 -28
 9557 184c 14       		.uleb128 0x14
 9558 184d 69647800 		.ascii	"idx\000"
 9559 1851 01       		.byte	0x1
 9560 1852 C203     		.2byte	0x3c2
 9561 1854 9F000000 		.4byte	0x9f
 9562 1858 02       		.uleb128 0x2
 9563 1859 91       		.byte	0x91
 9564 185a 60       		.sleb128 -32
 9565 185b 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 190


 9566 185c 1D       		.uleb128 0x1d
 9567 185d 38040000 		.4byte	.LASF142
 9568 1861 01       		.byte	0x1
 9569 1862 D903     		.2byte	0x3d9
 9570 1864 9F000000 		.4byte	0x9f
 9571 1868 00000000 		.4byte	.LFB108
 9572 186c D0000000 		.4byte	.LFE108-.LFB108
 9573 1870 01       		.uleb128 0x1
 9574 1871 9C       		.byte	0x9c
 9575 1872 D1180000 		.4byte	0x18d1
 9576 1876 16       		.uleb128 0x16
 9577 1877 6A000000 		.4byte	.LASF130
 9578 187b 01       		.byte	0x1
 9579 187c D903     		.2byte	0x3d9
 9580 187e D6010000 		.4byte	0x1d6
 9581 1882 02       		.uleb128 0x2
 9582 1883 91       		.byte	0x91
 9583 1884 5C       		.sleb128 -36
 9584 1885 16       		.uleb128 0x16
 9585 1886 61050000 		.4byte	.LASF136
 9586 188a 01       		.byte	0x1
 9587 188b D903     		.2byte	0x3d9
 9588 188d B3010000 		.4byte	0x1b3
 9589 1891 02       		.uleb128 0x2
 9590 1892 91       		.byte	0x91
 9591 1893 58       		.sleb128 -40
 9592 1894 13       		.uleb128 0x13
 9593 1895 28020000 		.4byte	.LASF138
 9594 1899 01       		.byte	0x1
 9595 189a DB03     		.2byte	0x3db
 9596 189c 9F000000 		.4byte	0x9f
 9597 18a0 02       		.uleb128 0x2
 9598 18a1 91       		.byte	0x91
 9599 18a2 64       		.sleb128 -28
 9600 18a3 13       		.uleb128 0x13
 9601 18a4 6C050000 		.4byte	.LASF140
 9602 18a8 01       		.byte	0x1
 9603 18a9 DB03     		.2byte	0x3db
 9604 18ab 9F000000 		.4byte	0x9f
 9605 18af 02       		.uleb128 0x2
 9606 18b0 91       		.byte	0x91
 9607 18b1 6C       		.sleb128 -20
 9608 18b2 13       		.uleb128 0x13
 9609 18b3 9F020000 		.4byte	.LASF141
 9610 18b7 01       		.byte	0x1
 9611 18b8 DC03     		.2byte	0x3dc
 9612 18ba B3010000 		.4byte	0x1b3
 9613 18be 02       		.uleb128 0x2
 9614 18bf 91       		.byte	0x91
 9615 18c0 68       		.sleb128 -24
 9616 18c1 14       		.uleb128 0x14
 9617 18c2 69647800 		.ascii	"idx\000"
 9618 18c6 01       		.byte	0x1
 9619 18c7 E903     		.2byte	0x3e9
 9620 18c9 9F000000 		.4byte	0x9f
 9621 18cd 02       		.uleb128 0x2
 9622 18ce 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 191


 9623 18cf 60       		.sleb128 -32
 9624 18d0 00       		.byte	0
 9625 18d1 1D       		.uleb128 0x1d
 9626 18d2 05050000 		.4byte	.LASF143
 9627 18d6 01       		.byte	0x1
 9628 18d7 F103     		.2byte	0x3f1
 9629 18d9 9F000000 		.4byte	0x9f
 9630 18dd 00000000 		.4byte	.LFB109
 9631 18e1 90010000 		.4byte	.LFE109-.LFB109
 9632 18e5 01       		.uleb128 0x1
 9633 18e6 9C       		.byte	0x9c
 9634 18e7 B5190000 		.4byte	0x19b5
 9635 18eb 16       		.uleb128 0x16
 9636 18ec 6A000000 		.4byte	.LASF130
 9637 18f0 01       		.byte	0x1
 9638 18f1 F103     		.2byte	0x3f1
 9639 18f3 D6010000 		.4byte	0x1d6
 9640 18f7 02       		.uleb128 0x2
 9641 18f8 91       		.byte	0x91
 9642 18f9 4C       		.sleb128 -52
 9643 18fa 16       		.uleb128 0x16
 9644 18fb 25000000 		.4byte	.LASF144
 9645 18ff 01       		.byte	0x1
 9646 1900 F103     		.2byte	0x3f1
 9647 1902 B3010000 		.4byte	0x1b3
 9648 1906 02       		.uleb128 0x2
 9649 1907 91       		.byte	0x91
 9650 1908 48       		.sleb128 -56
 9651 1909 16       		.uleb128 0x16
 9652 190a 8B010000 		.4byte	.LASF132
 9653 190e 01       		.byte	0x1
 9654 190f F103     		.2byte	0x3f1
 9655 1911 B8000000 		.4byte	0xb8
 9656 1915 02       		.uleb128 0x2
 9657 1916 91       		.byte	0x91
 9658 1917 47       		.sleb128 -57
 9659 1918 16       		.uleb128 0x16
 9660 1919 60020000 		.4byte	.LASF145
 9661 191d 01       		.byte	0x1
 9662 191e F103     		.2byte	0x3f1
 9663 1920 B8000000 		.4byte	0xb8
 9664 1924 02       		.uleb128 0x2
 9665 1925 91       		.byte	0x91
 9666 1926 46       		.sleb128 -58
 9667 1927 13       		.uleb128 0x13
 9668 1928 BB060000 		.4byte	.LASF146
 9669 192c 01       		.byte	0x1
 9670 192d F303     		.2byte	0x3f3
 9671 192f B3010000 		.4byte	0x1b3
 9672 1933 02       		.uleb128 0x2
 9673 1934 91       		.byte	0x91
 9674 1935 60       		.sleb128 -32
 9675 1936 14       		.uleb128 0x14
 9676 1937 6600     		.ascii	"f\000"
 9677 1939 01       		.byte	0x1
 9678 193a F403     		.2byte	0x3f4
 9679 193c B3010000 		.4byte	0x1b3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 192


 9680 1940 02       		.uleb128 0x2
 9681 1941 91       		.byte	0x91
 9682 1942 5C       		.sleb128 -36
 9683 1943 13       		.uleb128 0x13
 9684 1944 07060000 		.4byte	.LASF147
 9685 1948 01       		.byte	0x1
 9686 1949 F603     		.2byte	0x3f6
 9687 194b 9F000000 		.4byte	0x9f
 9688 194f 02       		.uleb128 0x2
 9689 1950 91       		.byte	0x91
 9690 1951 74       		.sleb128 -12
 9691 1952 13       		.uleb128 0x13
 9692 1953 81000000 		.4byte	.LASF148
 9693 1957 01       		.byte	0x1
 9694 1958 F603     		.2byte	0x3f6
 9695 195a 9F000000 		.4byte	0x9f
 9696 195e 02       		.uleb128 0x2
 9697 195f 91       		.byte	0x91
 9698 1960 70       		.sleb128 -16
 9699 1961 13       		.uleb128 0x13
 9700 1962 B1020000 		.4byte	.LASF131
 9701 1966 01       		.byte	0x1
 9702 1967 F803     		.2byte	0x3f8
 9703 1969 9F000000 		.4byte	0x9f
 9704 196d 02       		.uleb128 0x2
 9705 196e 91       		.byte	0x91
 9706 196f 6C       		.sleb128 -20
 9707 1970 14       		.uleb128 0x14
 9708 1971 69647800 		.ascii	"idx\000"
 9709 1975 01       		.byte	0x1
 9710 1976 FA03     		.2byte	0x3fa
 9711 1978 9F000000 		.4byte	0x9f
 9712 197c 02       		.uleb128 0x2
 9713 197d 91       		.byte	0x91
 9714 197e 68       		.sleb128 -24
 9715 197f 14       		.uleb128 0x14
 9716 1980 6900     		.ascii	"i\000"
 9717 1982 01       		.byte	0x1
 9718 1983 FA03     		.2byte	0x3fa
 9719 1985 9F000000 		.4byte	0x9f
 9720 1989 02       		.uleb128 0x2
 9721 198a 91       		.byte	0x91
 9722 198b 64       		.sleb128 -28
 9723 198c 12       		.uleb128 0x12
 9724 198d E8000000 		.4byte	.LBB37
 9725 1991 92000000 		.4byte	.LBE37-.LBB37
 9726 1995 13       		.uleb128 0x13
 9727 1996 46050000 		.4byte	.LASF133
 9728 199a 01       		.byte	0x1
 9729 199b 1404     		.2byte	0x414
 9730 199d 9F000000 		.4byte	0x9f
 9731 19a1 02       		.uleb128 0x2
 9732 19a2 91       		.byte	0x91
 9733 19a3 58       		.sleb128 -40
 9734 19a4 13       		.uleb128 0x13
 9735 19a5 56000000 		.4byte	.LASF134
 9736 19a9 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 193


 9737 19aa 1504     		.2byte	0x415
 9738 19ac 9F000000 		.4byte	0x9f
 9739 19b0 02       		.uleb128 0x2
 9740 19b1 91       		.byte	0x91
 9741 19b2 54       		.sleb128 -44
 9742 19b3 00       		.byte	0
 9743 19b4 00       		.byte	0
 9744 19b5 1A       		.uleb128 0x1a
 9745 19b6 4A000000 		.4byte	.LASF149
 9746 19ba 01       		.byte	0x1
 9747 19bb 3304     		.2byte	0x433
 9748 19bd 00000000 		.4byte	.LFB110
 9749 19c1 1A000000 		.4byte	.LFE110-.LFB110
 9750 19c5 01       		.uleb128 0x1
 9751 19c6 9C       		.byte	0x9c
 9752 19c7 F7190000 		.4byte	0x19f7
 9753 19cb 16       		.uleb128 0x16
 9754 19cc 6B040000 		.4byte	.LASF59
 9755 19d0 01       		.byte	0x1
 9756 19d1 3304     		.2byte	0x433
 9757 19d3 F6020000 		.4byte	0x2f6
 9758 19d7 02       		.uleb128 0x2
 9759 19d8 91       		.byte	0x91
 9760 19d9 74       		.sleb128 -12
 9761 19da 17       		.uleb128 0x17
 9762 19db 6300     		.ascii	"c\000"
 9763 19dd 01       		.byte	0x1
 9764 19de 3304     		.2byte	0x433
 9765 19e0 B8000000 		.4byte	0xb8
 9766 19e4 02       		.uleb128 0x2
 9767 19e5 91       		.byte	0x91
 9768 19e6 73       		.sleb128 -13
 9769 19e7 16       		.uleb128 0x16
 9770 19e8 40050000 		.4byte	.LASF60
 9771 19ec 01       		.byte	0x1
 9772 19ed 3304     		.2byte	0x433
 9773 19ef CE000000 		.4byte	0xce
 9774 19f3 02       		.uleb128 0x2
 9775 19f4 91       		.byte	0x91
 9776 19f5 70       		.sleb128 -16
 9777 19f6 00       		.byte	0
 9778 19f7 1A       		.uleb128 0x1a
 9779 19f8 C8040000 		.4byte	.LASF150
 9780 19fc 01       		.byte	0x1
 9781 19fd 3804     		.2byte	0x438
 9782 19ff 00000000 		.4byte	.LFB111
 9783 1a03 1A000000 		.4byte	.LFE111-.LFB111
 9784 1a07 01       		.uleb128 0x1
 9785 1a08 9C       		.byte	0x9c
 9786 1a09 391A0000 		.4byte	0x1a39
 9787 1a0d 16       		.uleb128 0x16
 9788 1a0e 6B040000 		.4byte	.LASF59
 9789 1a12 01       		.byte	0x1
 9790 1a13 3804     		.2byte	0x438
 9791 1a15 F6020000 		.4byte	0x2f6
 9792 1a19 02       		.uleb128 0x2
 9793 1a1a 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 194


 9794 1a1b 74       		.sleb128 -12
 9795 1a1c 17       		.uleb128 0x17
 9796 1a1d 6300     		.ascii	"c\000"
 9797 1a1f 01       		.byte	0x1
 9798 1a20 3804     		.2byte	0x438
 9799 1a22 B8000000 		.4byte	0xb8
 9800 1a26 02       		.uleb128 0x2
 9801 1a27 91       		.byte	0x91
 9802 1a28 73       		.sleb128 -13
 9803 1a29 16       		.uleb128 0x16
 9804 1a2a 40050000 		.4byte	.LASF60
 9805 1a2e 01       		.byte	0x1
 9806 1a2f 3804     		.2byte	0x438
 9807 1a31 CE000000 		.4byte	0xce
 9808 1a35 02       		.uleb128 0x2
 9809 1a36 91       		.byte	0x91
 9810 1a37 70       		.sleb128 -16
 9811 1a38 00       		.byte	0
 9812 1a39 1A       		.uleb128 0x1a
 9813 1a3a CF010000 		.4byte	.LASF151
 9814 1a3e 01       		.byte	0x1
 9815 1a3f 3D04     		.2byte	0x43d
 9816 1a41 00000000 		.4byte	.LFB112
 9817 1a45 1A000000 		.4byte	.LFE112-.LFB112
 9818 1a49 01       		.uleb128 0x1
 9819 1a4a 9C       		.byte	0x9c
 9820 1a4b 7B1A0000 		.4byte	0x1a7b
 9821 1a4f 16       		.uleb128 0x16
 9822 1a50 6B040000 		.4byte	.LASF59
 9823 1a54 01       		.byte	0x1
 9824 1a55 3D04     		.2byte	0x43d
 9825 1a57 F6020000 		.4byte	0x2f6
 9826 1a5b 02       		.uleb128 0x2
 9827 1a5c 91       		.byte	0x91
 9828 1a5d 74       		.sleb128 -12
 9829 1a5e 17       		.uleb128 0x17
 9830 1a5f 6300     		.ascii	"c\000"
 9831 1a61 01       		.byte	0x1
 9832 1a62 3D04     		.2byte	0x43d
 9833 1a64 B8000000 		.4byte	0xb8
 9834 1a68 02       		.uleb128 0x2
 9835 1a69 91       		.byte	0x91
 9836 1a6a 73       		.sleb128 -13
 9837 1a6b 16       		.uleb128 0x16
 9838 1a6c 40050000 		.4byte	.LASF60
 9839 1a70 01       		.byte	0x1
 9840 1a71 3D04     		.2byte	0x43d
 9841 1a73 CE000000 		.4byte	0xce
 9842 1a77 02       		.uleb128 0x2
 9843 1a78 91       		.byte	0x91
 9844 1a79 70       		.sleb128 -16
 9845 1a7a 00       		.byte	0
 9846 1a7b 1A       		.uleb128 0x1a
 9847 1a7c 29040000 		.4byte	.LASF152
 9848 1a80 01       		.byte	0x1
 9849 1a81 4204     		.2byte	0x442
 9850 1a83 00000000 		.4byte	.LFB113
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 195


 9851 1a87 1A000000 		.4byte	.LFE113-.LFB113
 9852 1a8b 01       		.uleb128 0x1
 9853 1a8c 9C       		.byte	0x9c
 9854 1a8d BD1A0000 		.4byte	0x1abd
 9855 1a91 16       		.uleb128 0x16
 9856 1a92 6B040000 		.4byte	.LASF59
 9857 1a96 01       		.byte	0x1
 9858 1a97 4204     		.2byte	0x442
 9859 1a99 F6020000 		.4byte	0x2f6
 9860 1a9d 02       		.uleb128 0x2
 9861 1a9e 91       		.byte	0x91
 9862 1a9f 74       		.sleb128 -12
 9863 1aa0 17       		.uleb128 0x17
 9864 1aa1 6300     		.ascii	"c\000"
 9865 1aa3 01       		.byte	0x1
 9866 1aa4 4204     		.2byte	0x442
 9867 1aa6 B8000000 		.4byte	0xb8
 9868 1aaa 02       		.uleb128 0x2
 9869 1aab 91       		.byte	0x91
 9870 1aac 73       		.sleb128 -13
 9871 1aad 16       		.uleb128 0x16
 9872 1aae 40050000 		.4byte	.LASF60
 9873 1ab2 01       		.byte	0x1
 9874 1ab3 4204     		.2byte	0x442
 9875 1ab5 CE000000 		.4byte	0xce
 9876 1ab9 02       		.uleb128 0x2
 9877 1aba 91       		.byte	0x91
 9878 1abb 70       		.sleb128 -16
 9879 1abc 00       		.byte	0
 9880 1abd 1E       		.uleb128 0x1e
 9881 1abe E4040000 		.4byte	.LASF153
 9882 1ac2 07       		.byte	0x7
 9883 1ac3 1207     		.2byte	0x712
 9884 1ac5 C91A0000 		.4byte	0x1ac9
 9885 1ac9 1F       		.uleb128 0x1f
 9886 1aca D9000000 		.4byte	0xd9
 9887 1ace 20       		.uleb128 0x20
 9888 1acf 49030000 		.4byte	.LASF154
 9889 1ad3 08       		.byte	0x8
 9890 1ad4 41       		.byte	0x41
 9891 1ad5 A7010000 		.4byte	0x1a7
 9892 1ad9 05       		.uleb128 0x5
 9893 1ada 03       		.byte	0x3
 9894 1adb 00000000 		.4byte	Decoder_1_Enabled
 9895 1adf 21       		.uleb128 0x21
 9896 1ae0 42000000 		.4byte	0x42
 9897 1ae4 EA1A0000 		.4byte	0x1aea
 9898 1ae8 22       		.uleb128 0x22
 9899 1ae9 00       		.byte	0
 9900 1aea 23       		.uleb128 0x23
 9901 1aeb 6A000000 		.4byte	.LASF130
 9902 1aef 09       		.byte	0x9
 9903 1af0 6F       		.byte	0x6f
 9904 1af1 DF1A0000 		.4byte	0x1adf
 9905 1af5 21       		.uleb128 0x21
 9906 1af6 B8000000 		.4byte	0xb8
 9907 1afa 051B0000 		.4byte	0x1b05
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 196


 9908 1afe 24       		.uleb128 0x24
 9909 1aff CF010000 		.4byte	0x1cf
 9910 1b03 17       		.byte	0x17
 9911 1b04 00       		.byte	0
 9912 1b05 25       		.uleb128 0x25
 9913 1b06 83010000 		.4byte	.LASF155
 9914 1b0a 01       		.byte	0x1
 9915 1b0b 9403     		.2byte	0x394
 9916 1b0d F51A0000 		.4byte	0x1af5
 9917 1b11 05       		.uleb128 0x5
 9918 1b12 03       		.byte	0x3
 9919 1b13 00000000 		.4byte	pitches
 9920 1b17 00       		.byte	0
 9921              		.section	.debug_abbrev,"",%progbits
 9922              	.Ldebug_abbrev0:
 9923 0000 01       		.uleb128 0x1
 9924 0001 11       		.uleb128 0x11
 9925 0002 01       		.byte	0x1
 9926 0003 25       		.uleb128 0x25
 9927 0004 0E       		.uleb128 0xe
 9928 0005 13       		.uleb128 0x13
 9929 0006 0B       		.uleb128 0xb
 9930 0007 03       		.uleb128 0x3
 9931 0008 0E       		.uleb128 0xe
 9932 0009 1B       		.uleb128 0x1b
 9933 000a 0E       		.uleb128 0xe
 9934 000b 55       		.uleb128 0x55
 9935 000c 17       		.uleb128 0x17
 9936 000d 11       		.uleb128 0x11
 9937 000e 01       		.uleb128 0x1
 9938 000f 10       		.uleb128 0x10
 9939 0010 17       		.uleb128 0x17
 9940 0011 00       		.byte	0
 9941 0012 00       		.byte	0
 9942 0013 02       		.uleb128 0x2
 9943 0014 16       		.uleb128 0x16
 9944 0015 00       		.byte	0
 9945 0016 03       		.uleb128 0x3
 9946 0017 0E       		.uleb128 0xe
 9947 0018 3A       		.uleb128 0x3a
 9948 0019 0B       		.uleb128 0xb
 9949 001a 3B       		.uleb128 0x3b
 9950 001b 0B       		.uleb128 0xb
 9951 001c 49       		.uleb128 0x49
 9952 001d 13       		.uleb128 0x13
 9953 001e 00       		.byte	0
 9954 001f 00       		.byte	0
 9955 0020 03       		.uleb128 0x3
 9956 0021 24       		.uleb128 0x24
 9957 0022 00       		.byte	0
 9958 0023 0B       		.uleb128 0xb
 9959 0024 0B       		.uleb128 0xb
 9960 0025 3E       		.uleb128 0x3e
 9961 0026 0B       		.uleb128 0xb
 9962 0027 03       		.uleb128 0x3
 9963 0028 0E       		.uleb128 0xe
 9964 0029 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 197


 9965 002a 00       		.byte	0
 9966 002b 04       		.uleb128 0x4
 9967 002c 24       		.uleb128 0x24
 9968 002d 00       		.byte	0
 9969 002e 0B       		.uleb128 0xb
 9970 002f 0B       		.uleb128 0xb
 9971 0030 3E       		.uleb128 0x3e
 9972 0031 0B       		.uleb128 0xb
 9973 0032 03       		.uleb128 0x3
 9974 0033 08       		.uleb128 0x8
 9975 0034 00       		.byte	0
 9976 0035 00       		.byte	0
 9977 0036 05       		.uleb128 0x5
 9978 0037 13       		.uleb128 0x13
 9979 0038 01       		.byte	0x1
 9980 0039 0B       		.uleb128 0xb
 9981 003a 0B       		.uleb128 0xb
 9982 003b 3A       		.uleb128 0x3a
 9983 003c 0B       		.uleb128 0xb
 9984 003d 3B       		.uleb128 0x3b
 9985 003e 0B       		.uleb128 0xb
 9986 003f 01       		.uleb128 0x1
 9987 0040 13       		.uleb128 0x13
 9988 0041 00       		.byte	0
 9989 0042 00       		.byte	0
 9990 0043 06       		.uleb128 0x6
 9991 0044 0D       		.uleb128 0xd
 9992 0045 00       		.byte	0
 9993 0046 03       		.uleb128 0x3
 9994 0047 0E       		.uleb128 0xe
 9995 0048 3A       		.uleb128 0x3a
 9996 0049 0B       		.uleb128 0xb
 9997 004a 3B       		.uleb128 0x3b
 9998 004b 0B       		.uleb128 0xb
 9999 004c 49       		.uleb128 0x49
 10000 004d 13       		.uleb128 0x13
 10001 004e 38       		.uleb128 0x38
 10002 004f 0B       		.uleb128 0xb
 10003 0050 00       		.byte	0
 10004 0051 00       		.byte	0
 10005 0052 07       		.uleb128 0x7
 10006 0053 0F       		.uleb128 0xf
 10007 0054 00       		.byte	0
 10008 0055 0B       		.uleb128 0xb
 10009 0056 0B       		.uleb128 0xb
 10010 0057 49       		.uleb128 0x49
 10011 0058 13       		.uleb128 0x13
 10012 0059 00       		.byte	0
 10013 005a 00       		.byte	0
 10014 005b 08       		.uleb128 0x8
 10015 005c 16       		.uleb128 0x16
 10016 005d 00       		.byte	0
 10017 005e 03       		.uleb128 0x3
 10018 005f 0E       		.uleb128 0xe
 10019 0060 3A       		.uleb128 0x3a
 10020 0061 0B       		.uleb128 0xb
 10021 0062 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 198


 10022 0063 05       		.uleb128 0x5
 10023 0064 49       		.uleb128 0x49
 10024 0065 13       		.uleb128 0x13
 10025 0066 00       		.byte	0
 10026 0067 00       		.byte	0
 10027 0068 09       		.uleb128 0x9
 10028 0069 13       		.uleb128 0x13
 10029 006a 01       		.byte	0x1
 10030 006b 03       		.uleb128 0x3
 10031 006c 0E       		.uleb128 0xe
 10032 006d 0B       		.uleb128 0xb
 10033 006e 0B       		.uleb128 0xb
 10034 006f 3A       		.uleb128 0x3a
 10035 0070 0B       		.uleb128 0xb
 10036 0071 3B       		.uleb128 0x3b
 10037 0072 0B       		.uleb128 0xb
 10038 0073 01       		.uleb128 0x1
 10039 0074 13       		.uleb128 0x13
 10040 0075 00       		.byte	0
 10041 0076 00       		.byte	0
 10042 0077 0A       		.uleb128 0xa
 10043 0078 16       		.uleb128 0x16
 10044 0079 00       		.byte	0
 10045 007a 03       		.uleb128 0x3
 10046 007b 08       		.uleb128 0x8
 10047 007c 3A       		.uleb128 0x3a
 10048 007d 0B       		.uleb128 0xb
 10049 007e 3B       		.uleb128 0x3b
 10050 007f 0B       		.uleb128 0xb
 10051 0080 49       		.uleb128 0x49
 10052 0081 13       		.uleb128 0x13
 10053 0082 00       		.byte	0
 10054 0083 00       		.byte	0
 10055 0084 0B       		.uleb128 0xb
 10056 0085 2E       		.uleb128 0x2e
 10057 0086 01       		.byte	0x1
 10058 0087 3F       		.uleb128 0x3f
 10059 0088 19       		.uleb128 0x19
 10060 0089 03       		.uleb128 0x3
 10061 008a 0E       		.uleb128 0xe
 10062 008b 3A       		.uleb128 0x3a
 10063 008c 0B       		.uleb128 0xb
 10064 008d 3B       		.uleb128 0x3b
 10065 008e 0B       		.uleb128 0xb
 10066 008f 27       		.uleb128 0x27
 10067 0090 19       		.uleb128 0x19
 10068 0091 11       		.uleb128 0x11
 10069 0092 01       		.uleb128 0x1
 10070 0093 12       		.uleb128 0x12
 10071 0094 06       		.uleb128 0x6
 10072 0095 40       		.uleb128 0x40
 10073 0096 18       		.uleb128 0x18
 10074 0097 9742     		.uleb128 0x2117
 10075 0099 19       		.uleb128 0x19
 10076 009a 01       		.uleb128 0x1
 10077 009b 13       		.uleb128 0x13
 10078 009c 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 199


 10079 009d 00       		.byte	0
 10080 009e 0C       		.uleb128 0xc
 10081 009f 05       		.uleb128 0x5
 10082 00a0 00       		.byte	0
 10083 00a1 03       		.uleb128 0x3
 10084 00a2 0E       		.uleb128 0xe
 10085 00a3 3A       		.uleb128 0x3a
 10086 00a4 0B       		.uleb128 0xb
 10087 00a5 3B       		.uleb128 0x3b
 10088 00a6 0B       		.uleb128 0xb
 10089 00a7 49       		.uleb128 0x49
 10090 00a8 13       		.uleb128 0x13
 10091 00a9 02       		.uleb128 0x2
 10092 00aa 18       		.uleb128 0x18
 10093 00ab 00       		.byte	0
 10094 00ac 00       		.byte	0
 10095 00ad 0D       		.uleb128 0xd
 10096 00ae 05       		.uleb128 0x5
 10097 00af 00       		.byte	0
 10098 00b0 03       		.uleb128 0x3
 10099 00b1 08       		.uleb128 0x8
 10100 00b2 3A       		.uleb128 0x3a
 10101 00b3 0B       		.uleb128 0xb
 10102 00b4 3B       		.uleb128 0x3b
 10103 00b5 0B       		.uleb128 0xb
 10104 00b6 49       		.uleb128 0x49
 10105 00b7 13       		.uleb128 0x13
 10106 00b8 02       		.uleb128 0x2
 10107 00b9 18       		.uleb128 0x18
 10108 00ba 00       		.byte	0
 10109 00bb 00       		.byte	0
 10110 00bc 0E       		.uleb128 0xe
 10111 00bd 2E       		.uleb128 0x2e
 10112 00be 01       		.byte	0x1
 10113 00bf 3F       		.uleb128 0x3f
 10114 00c0 19       		.uleb128 0x19
 10115 00c1 03       		.uleb128 0x3
 10116 00c2 0E       		.uleb128 0xe
 10117 00c3 3A       		.uleb128 0x3a
 10118 00c4 0B       		.uleb128 0xb
 10119 00c5 3B       		.uleb128 0x3b
 10120 00c6 0B       		.uleb128 0xb
 10121 00c7 27       		.uleb128 0x27
 10122 00c8 19       		.uleb128 0x19
 10123 00c9 11       		.uleb128 0x11
 10124 00ca 01       		.uleb128 0x1
 10125 00cb 12       		.uleb128 0x12
 10126 00cc 06       		.uleb128 0x6
 10127 00cd 40       		.uleb128 0x40
 10128 00ce 18       		.uleb128 0x18
 10129 00cf 9642     		.uleb128 0x2116
 10130 00d1 19       		.uleb128 0x19
 10131 00d2 01       		.uleb128 0x1
 10132 00d3 13       		.uleb128 0x13
 10133 00d4 00       		.byte	0
 10134 00d5 00       		.byte	0
 10135 00d6 0F       		.uleb128 0xf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 200


 10136 00d7 34       		.uleb128 0x34
 10137 00d8 00       		.byte	0
 10138 00d9 03       		.uleb128 0x3
 10139 00da 0E       		.uleb128 0xe
 10140 00db 3A       		.uleb128 0x3a
 10141 00dc 0B       		.uleb128 0xb
 10142 00dd 3B       		.uleb128 0x3b
 10143 00de 0B       		.uleb128 0xb
 10144 00df 49       		.uleb128 0x49
 10145 00e0 13       		.uleb128 0x13
 10146 00e1 02       		.uleb128 0x2
 10147 00e2 18       		.uleb128 0x18
 10148 00e3 00       		.byte	0
 10149 00e4 00       		.byte	0
 10150 00e5 10       		.uleb128 0x10
 10151 00e6 34       		.uleb128 0x34
 10152 00e7 00       		.byte	0
 10153 00e8 03       		.uleb128 0x3
 10154 00e9 08       		.uleb128 0x8
 10155 00ea 3A       		.uleb128 0x3a
 10156 00eb 0B       		.uleb128 0xb
 10157 00ec 3B       		.uleb128 0x3b
 10158 00ed 0B       		.uleb128 0xb
 10159 00ee 49       		.uleb128 0x49
 10160 00ef 13       		.uleb128 0x13
 10161 00f0 02       		.uleb128 0x2
 10162 00f1 18       		.uleb128 0x18
 10163 00f2 00       		.byte	0
 10164 00f3 00       		.byte	0
 10165 00f4 11       		.uleb128 0x11
 10166 00f5 0B       		.uleb128 0xb
 10167 00f6 01       		.byte	0x1
 10168 00f7 11       		.uleb128 0x11
 10169 00f8 01       		.uleb128 0x1
 10170 00f9 12       		.uleb128 0x12
 10171 00fa 06       		.uleb128 0x6
 10172 00fb 01       		.uleb128 0x1
 10173 00fc 13       		.uleb128 0x13
 10174 00fd 00       		.byte	0
 10175 00fe 00       		.byte	0
 10176 00ff 12       		.uleb128 0x12
 10177 0100 0B       		.uleb128 0xb
 10178 0101 01       		.byte	0x1
 10179 0102 11       		.uleb128 0x11
 10180 0103 01       		.uleb128 0x1
 10181 0104 12       		.uleb128 0x12
 10182 0105 06       		.uleb128 0x6
 10183 0106 00       		.byte	0
 10184 0107 00       		.byte	0
 10185 0108 13       		.uleb128 0x13
 10186 0109 34       		.uleb128 0x34
 10187 010a 00       		.byte	0
 10188 010b 03       		.uleb128 0x3
 10189 010c 0E       		.uleb128 0xe
 10190 010d 3A       		.uleb128 0x3a
 10191 010e 0B       		.uleb128 0xb
 10192 010f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 201


 10193 0110 05       		.uleb128 0x5
 10194 0111 49       		.uleb128 0x49
 10195 0112 13       		.uleb128 0x13
 10196 0113 02       		.uleb128 0x2
 10197 0114 18       		.uleb128 0x18
 10198 0115 00       		.byte	0
 10199 0116 00       		.byte	0
 10200 0117 14       		.uleb128 0x14
 10201 0118 34       		.uleb128 0x34
 10202 0119 00       		.byte	0
 10203 011a 03       		.uleb128 0x3
 10204 011b 08       		.uleb128 0x8
 10205 011c 3A       		.uleb128 0x3a
 10206 011d 0B       		.uleb128 0xb
 10207 011e 3B       		.uleb128 0x3b
 10208 011f 05       		.uleb128 0x5
 10209 0120 49       		.uleb128 0x49
 10210 0121 13       		.uleb128 0x13
 10211 0122 02       		.uleb128 0x2
 10212 0123 18       		.uleb128 0x18
 10213 0124 00       		.byte	0
 10214 0125 00       		.byte	0
 10215 0126 15       		.uleb128 0x15
 10216 0127 2E       		.uleb128 0x2e
 10217 0128 01       		.byte	0x1
 10218 0129 3F       		.uleb128 0x3f
 10219 012a 19       		.uleb128 0x19
 10220 012b 03       		.uleb128 0x3
 10221 012c 0E       		.uleb128 0xe
 10222 012d 3A       		.uleb128 0x3a
 10223 012e 0B       		.uleb128 0xb
 10224 012f 3B       		.uleb128 0x3b
 10225 0130 05       		.uleb128 0x5
 10226 0131 27       		.uleb128 0x27
 10227 0132 19       		.uleb128 0x19
 10228 0133 11       		.uleb128 0x11
 10229 0134 01       		.uleb128 0x1
 10230 0135 12       		.uleb128 0x12
 10231 0136 06       		.uleb128 0x6
 10232 0137 40       		.uleb128 0x40
 10233 0138 18       		.uleb128 0x18
 10234 0139 9642     		.uleb128 0x2116
 10235 013b 19       		.uleb128 0x19
 10236 013c 01       		.uleb128 0x1
 10237 013d 13       		.uleb128 0x13
 10238 013e 00       		.byte	0
 10239 013f 00       		.byte	0
 10240 0140 16       		.uleb128 0x16
 10241 0141 05       		.uleb128 0x5
 10242 0142 00       		.byte	0
 10243 0143 03       		.uleb128 0x3
 10244 0144 0E       		.uleb128 0xe
 10245 0145 3A       		.uleb128 0x3a
 10246 0146 0B       		.uleb128 0xb
 10247 0147 3B       		.uleb128 0x3b
 10248 0148 05       		.uleb128 0x5
 10249 0149 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 202


 10250 014a 13       		.uleb128 0x13
 10251 014b 02       		.uleb128 0x2
 10252 014c 18       		.uleb128 0x18
 10253 014d 00       		.byte	0
 10254 014e 00       		.byte	0
 10255 014f 17       		.uleb128 0x17
 10256 0150 05       		.uleb128 0x5
 10257 0151 00       		.byte	0
 10258 0152 03       		.uleb128 0x3
 10259 0153 08       		.uleb128 0x8
 10260 0154 3A       		.uleb128 0x3a
 10261 0155 0B       		.uleb128 0xb
 10262 0156 3B       		.uleb128 0x3b
 10263 0157 05       		.uleb128 0x5
 10264 0158 49       		.uleb128 0x49
 10265 0159 13       		.uleb128 0x13
 10266 015a 02       		.uleb128 0x2
 10267 015b 18       		.uleb128 0x18
 10268 015c 00       		.byte	0
 10269 015d 00       		.byte	0
 10270 015e 18       		.uleb128 0x18
 10271 015f 2E       		.uleb128 0x2e
 10272 0160 01       		.byte	0x1
 10273 0161 3F       		.uleb128 0x3f
 10274 0162 19       		.uleb128 0x19
 10275 0163 03       		.uleb128 0x3
 10276 0164 0E       		.uleb128 0xe
 10277 0165 3A       		.uleb128 0x3a
 10278 0166 0B       		.uleb128 0xb
 10279 0167 3B       		.uleb128 0x3b
 10280 0168 05       		.uleb128 0x5
 10281 0169 49       		.uleb128 0x49
 10282 016a 13       		.uleb128 0x13
 10283 016b 3C       		.uleb128 0x3c
 10284 016c 19       		.uleb128 0x19
 10285 016d 01       		.uleb128 0x1
 10286 016e 13       		.uleb128 0x13
 10287 016f 00       		.byte	0
 10288 0170 00       		.byte	0
 10289 0171 19       		.uleb128 0x19
 10290 0172 18       		.uleb128 0x18
 10291 0173 00       		.byte	0
 10292 0174 00       		.byte	0
 10293 0175 00       		.byte	0
 10294 0176 1A       		.uleb128 0x1a
 10295 0177 2E       		.uleb128 0x2e
 10296 0178 01       		.byte	0x1
 10297 0179 3F       		.uleb128 0x3f
 10298 017a 19       		.uleb128 0x19
 10299 017b 03       		.uleb128 0x3
 10300 017c 0E       		.uleb128 0xe
 10301 017d 3A       		.uleb128 0x3a
 10302 017e 0B       		.uleb128 0xb
 10303 017f 3B       		.uleb128 0x3b
 10304 0180 05       		.uleb128 0x5
 10305 0181 27       		.uleb128 0x27
 10306 0182 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 203


 10307 0183 11       		.uleb128 0x11
 10308 0184 01       		.uleb128 0x1
 10309 0185 12       		.uleb128 0x12
 10310 0186 06       		.uleb128 0x6
 10311 0187 40       		.uleb128 0x40
 10312 0188 18       		.uleb128 0x18
 10313 0189 9742     		.uleb128 0x2117
 10314 018b 19       		.uleb128 0x19
 10315 018c 01       		.uleb128 0x1
 10316 018d 13       		.uleb128 0x13
 10317 018e 00       		.byte	0
 10318 018f 00       		.byte	0
 10319 0190 1B       		.uleb128 0x1b
 10320 0191 2E       		.uleb128 0x2e
 10321 0192 01       		.byte	0x1
 10322 0193 3F       		.uleb128 0x3f
 10323 0194 19       		.uleb128 0x19
 10324 0195 03       		.uleb128 0x3
 10325 0196 0E       		.uleb128 0xe
 10326 0197 3A       		.uleb128 0x3a
 10327 0198 0B       		.uleb128 0xb
 10328 0199 3B       		.uleb128 0x3b
 10329 019a 05       		.uleb128 0x5
 10330 019b 27       		.uleb128 0x27
 10331 019c 19       		.uleb128 0x19
 10332 019d 49       		.uleb128 0x49
 10333 019e 13       		.uleb128 0x13
 10334 019f 11       		.uleb128 0x11
 10335 01a0 01       		.uleb128 0x1
 10336 01a1 12       		.uleb128 0x12
 10337 01a2 06       		.uleb128 0x6
 10338 01a3 40       		.uleb128 0x40
 10339 01a4 18       		.uleb128 0x18
 10340 01a5 9742     		.uleb128 0x2117
 10341 01a7 19       		.uleb128 0x19
 10342 01a8 01       		.uleb128 0x1
 10343 01a9 13       		.uleb128 0x13
 10344 01aa 00       		.byte	0
 10345 01ab 00       		.byte	0
 10346 01ac 1C       		.uleb128 0x1c
 10347 01ad 26       		.uleb128 0x26
 10348 01ae 00       		.byte	0
 10349 01af 49       		.uleb128 0x49
 10350 01b0 13       		.uleb128 0x13
 10351 01b1 00       		.byte	0
 10352 01b2 00       		.byte	0
 10353 01b3 1D       		.uleb128 0x1d
 10354 01b4 2E       		.uleb128 0x2e
 10355 01b5 01       		.byte	0x1
 10356 01b6 3F       		.uleb128 0x3f
 10357 01b7 19       		.uleb128 0x19
 10358 01b8 03       		.uleb128 0x3
 10359 01b9 0E       		.uleb128 0xe
 10360 01ba 3A       		.uleb128 0x3a
 10361 01bb 0B       		.uleb128 0xb
 10362 01bc 3B       		.uleb128 0x3b
 10363 01bd 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 204


 10364 01be 27       		.uleb128 0x27
 10365 01bf 19       		.uleb128 0x19
 10366 01c0 49       		.uleb128 0x49
 10367 01c1 13       		.uleb128 0x13
 10368 01c2 11       		.uleb128 0x11
 10369 01c3 01       		.uleb128 0x1
 10370 01c4 12       		.uleb128 0x12
 10371 01c5 06       		.uleb128 0x6
 10372 01c6 40       		.uleb128 0x40
 10373 01c7 18       		.uleb128 0x18
 10374 01c8 9642     		.uleb128 0x2116
 10375 01ca 19       		.uleb128 0x19
 10376 01cb 01       		.uleb128 0x1
 10377 01cc 13       		.uleb128 0x13
 10378 01cd 00       		.byte	0
 10379 01ce 00       		.byte	0
 10380 01cf 1E       		.uleb128 0x1e
 10381 01d0 34       		.uleb128 0x34
 10382 01d1 00       		.byte	0
 10383 01d2 03       		.uleb128 0x3
 10384 01d3 0E       		.uleb128 0xe
 10385 01d4 3A       		.uleb128 0x3a
 10386 01d5 0B       		.uleb128 0xb
 10387 01d6 3B       		.uleb128 0x3b
 10388 01d7 05       		.uleb128 0x5
 10389 01d8 49       		.uleb128 0x49
 10390 01d9 13       		.uleb128 0x13
 10391 01da 3F       		.uleb128 0x3f
 10392 01db 19       		.uleb128 0x19
 10393 01dc 3C       		.uleb128 0x3c
 10394 01dd 19       		.uleb128 0x19
 10395 01de 00       		.byte	0
 10396 01df 00       		.byte	0
 10397 01e0 1F       		.uleb128 0x1f
 10398 01e1 35       		.uleb128 0x35
 10399 01e2 00       		.byte	0
 10400 01e3 49       		.uleb128 0x49
 10401 01e4 13       		.uleb128 0x13
 10402 01e5 00       		.byte	0
 10403 01e6 00       		.byte	0
 10404 01e7 20       		.uleb128 0x20
 10405 01e8 34       		.uleb128 0x34
 10406 01e9 00       		.byte	0
 10407 01ea 03       		.uleb128 0x3
 10408 01eb 0E       		.uleb128 0xe
 10409 01ec 3A       		.uleb128 0x3a
 10410 01ed 0B       		.uleb128 0xb
 10411 01ee 3B       		.uleb128 0x3b
 10412 01ef 0B       		.uleb128 0xb
 10413 01f0 49       		.uleb128 0x49
 10414 01f1 13       		.uleb128 0x13
 10415 01f2 3F       		.uleb128 0x3f
 10416 01f3 19       		.uleb128 0x19
 10417 01f4 02       		.uleb128 0x2
 10418 01f5 18       		.uleb128 0x18
 10419 01f6 00       		.byte	0
 10420 01f7 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 205


 10421 01f8 21       		.uleb128 0x21
 10422 01f9 01       		.uleb128 0x1
 10423 01fa 01       		.byte	0x1
 10424 01fb 49       		.uleb128 0x49
 10425 01fc 13       		.uleb128 0x13
 10426 01fd 01       		.uleb128 0x1
 10427 01fe 13       		.uleb128 0x13
 10428 01ff 00       		.byte	0
 10429 0200 00       		.byte	0
 10430 0201 22       		.uleb128 0x22
 10431 0202 21       		.uleb128 0x21
 10432 0203 00       		.byte	0
 10433 0204 00       		.byte	0
 10434 0205 00       		.byte	0
 10435 0206 23       		.uleb128 0x23
 10436 0207 34       		.uleb128 0x34
 10437 0208 00       		.byte	0
 10438 0209 03       		.uleb128 0x3
 10439 020a 0E       		.uleb128 0xe
 10440 020b 3A       		.uleb128 0x3a
 10441 020c 0B       		.uleb128 0xb
 10442 020d 3B       		.uleb128 0x3b
 10443 020e 0B       		.uleb128 0xb
 10444 020f 49       		.uleb128 0x49
 10445 0210 13       		.uleb128 0x13
 10446 0211 3F       		.uleb128 0x3f
 10447 0212 19       		.uleb128 0x19
 10448 0213 3C       		.uleb128 0x3c
 10449 0214 19       		.uleb128 0x19
 10450 0215 00       		.byte	0
 10451 0216 00       		.byte	0
 10452 0217 24       		.uleb128 0x24
 10453 0218 21       		.uleb128 0x21
 10454 0219 00       		.byte	0
 10455 021a 49       		.uleb128 0x49
 10456 021b 13       		.uleb128 0x13
 10457 021c 2F       		.uleb128 0x2f
 10458 021d 0B       		.uleb128 0xb
 10459 021e 00       		.byte	0
 10460 021f 00       		.byte	0
 10461 0220 25       		.uleb128 0x25
 10462 0221 34       		.uleb128 0x34
 10463 0222 00       		.byte	0
 10464 0223 03       		.uleb128 0x3
 10465 0224 0E       		.uleb128 0xe
 10466 0225 3A       		.uleb128 0x3a
 10467 0226 0B       		.uleb128 0xb
 10468 0227 3B       		.uleb128 0x3b
 10469 0228 05       		.uleb128 0x5
 10470 0229 49       		.uleb128 0x49
 10471 022a 13       		.uleb128 0x13
 10472 022b 3F       		.uleb128 0x3f
 10473 022c 19       		.uleb128 0x19
 10474 022d 02       		.uleb128 0x2
 10475 022e 18       		.uleb128 0x18
 10476 022f 00       		.byte	0
 10477 0230 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 206


 10478 0231 00       		.byte	0
 10479              		.section	.debug_aranges,"",%progbits
 10480 0000 A4010000 		.4byte	0x1a4
 10481 0004 0200     		.2byte	0x2
 10482 0006 00000000 		.4byte	.Ldebug_info0
 10483 000a 04       		.byte	0x4
 10484 000b 00       		.byte	0
 10485 000c 0000     		.2byte	0
 10486 000e 0000     		.2byte	0
 10487 0010 00000000 		.4byte	.LFB64
 10488 0014 7E000000 		.4byte	.LFE64-.LFB64
 10489 0018 00000000 		.4byte	.LFB65
 10490 001c 3E010000 		.4byte	.LFE65-.LFB65
 10491 0020 00000000 		.4byte	.LFB66
 10492 0024 12000000 		.4byte	.LFE66-.LFB66
 10493 0028 00000000 		.4byte	.LFB67
 10494 002c E0010000 		.4byte	.LFE67-.LFB67
 10495 0030 00000000 		.4byte	.LFB68
 10496 0034 32000000 		.4byte	.LFE68-.LFB68
 10497 0038 00000000 		.4byte	.LFB69
 10498 003c 3A000000 		.4byte	.LFE69-.LFB69
 10499 0040 00000000 		.4byte	.LFB70
 10500 0044 3A000000 		.4byte	.LFE70-.LFB70
 10501 0048 00000000 		.4byte	.LFB71
 10502 004c 40000000 		.4byte	.LFE71-.LFB71
 10503 0050 00000000 		.4byte	.LFB72
 10504 0054 12000000 		.4byte	.LFE72-.LFB72
 10505 0058 00000000 		.4byte	.LFB73
 10506 005c 4C000000 		.4byte	.LFE73-.LFB73
 10507 0060 00000000 		.4byte	.LFB74
 10508 0064 4A000000 		.4byte	.LFE74-.LFB74
 10509 0068 00000000 		.4byte	.LFB75
 10510 006c 5E000000 		.4byte	.LFE75-.LFB75
 10511 0070 00000000 		.4byte	.LFB76
 10512 0074 32000000 		.4byte	.LFE76-.LFB76
 10513 0078 00000000 		.4byte	.LFB77
 10514 007c D0000000 		.4byte	.LFE77-.LFB77
 10515 0080 00000000 		.4byte	.LFB78
 10516 0084 D2010000 		.4byte	.LFE78-.LFB78
 10517 0088 00000000 		.4byte	.LFB79
 10518 008c AA010000 		.4byte	.LFE79-.LFB79
 10519 0090 00000000 		.4byte	.LFB80
 10520 0094 68000000 		.4byte	.LFE80-.LFB80
 10521 0098 00000000 		.4byte	.LFB81
 10522 009c 82010000 		.4byte	.LFE81-.LFB81
 10523 00a0 00000000 		.4byte	.LFB82
 10524 00a4 96000000 		.4byte	.LFE82-.LFB82
 10525 00a8 00000000 		.4byte	.LFB83
 10526 00ac A4010000 		.4byte	.LFE83-.LFB83
 10527 00b0 00000000 		.4byte	.LFB84
 10528 00b4 D6000000 		.4byte	.LFE84-.LFB84
 10529 00b8 00000000 		.4byte	.LFB85
 10530 00bc 7C000000 		.4byte	.LFE85-.LFB85
 10531 00c0 00000000 		.4byte	.LFB86
 10532 00c4 E0020000 		.4byte	.LFE86-.LFB86
 10533 00c8 00000000 		.4byte	.LFB87
 10534 00cc D8000000 		.4byte	.LFE87-.LFB87
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 207


 10535 00d0 00000000 		.4byte	.LFB88
 10536 00d4 0C040000 		.4byte	.LFE88-.LFB88
 10537 00d8 00000000 		.4byte	.LFB89
 10538 00dc F8000000 		.4byte	.LFE89-.LFB89
 10539 00e0 00000000 		.4byte	.LFB90
 10540 00e4 9A010000 		.4byte	.LFE90-.LFB90
 10541 00e8 00000000 		.4byte	.LFB91
 10542 00ec 26000000 		.4byte	.LFE91-.LFB91
 10543 00f0 00000000 		.4byte	.LFB92
 10544 00f4 18000000 		.4byte	.LFE92-.LFB92
 10545 00f8 00000000 		.4byte	.LFB93
 10546 00fc 18000000 		.4byte	.LFE93-.LFB93
 10547 0100 00000000 		.4byte	.LFB94
 10548 0104 28000000 		.4byte	.LFE94-.LFB94
 10549 0108 00000000 		.4byte	.LFB95
 10550 010c 26000000 		.4byte	.LFE95-.LFB95
 10551 0110 00000000 		.4byte	.LFB96
 10552 0114 1E000000 		.4byte	.LFE96-.LFB96
 10553 0118 00000000 		.4byte	.LFB97
 10554 011c 18000000 		.4byte	.LFE97-.LFB97
 10555 0120 00000000 		.4byte	.LFB98
 10556 0124 76000000 		.4byte	.LFE98-.LFB98
 10557 0128 00000000 		.4byte	.LFB99
 10558 012c 1E000000 		.4byte	.LFE99-.LFB99
 10559 0130 00000000 		.4byte	.LFB100
 10560 0134 DC000000 		.4byte	.LFE100-.LFB100
 10561 0138 00000000 		.4byte	.LFB101
 10562 013c 30030000 		.4byte	.LFE101-.LFB101
 10563 0140 00000000 		.4byte	.LFB102
 10564 0144 E8000000 		.4byte	.LFE102-.LFB102
 10565 0148 00000000 		.4byte	.LFB103
 10566 014c 18000000 		.4byte	.LFE103-.LFB103
 10567 0150 00000000 		.4byte	.LFB104
 10568 0154 18000000 		.4byte	.LFE104-.LFB104
 10569 0158 00000000 		.4byte	.LFB105
 10570 015c 16000000 		.4byte	.LFE105-.LFB105
 10571 0160 00000000 		.4byte	.LFB106
 10572 0164 80000000 		.4byte	.LFE106-.LFB106
 10573 0168 00000000 		.4byte	.LFB107
 10574 016c 70010000 		.4byte	.LFE107-.LFB107
 10575 0170 00000000 		.4byte	.LFB108
 10576 0174 D0000000 		.4byte	.LFE108-.LFB108
 10577 0178 00000000 		.4byte	.LFB109
 10578 017c 90010000 		.4byte	.LFE109-.LFB109
 10579 0180 00000000 		.4byte	.LFB110
 10580 0184 1A000000 		.4byte	.LFE110-.LFB110
 10581 0188 00000000 		.4byte	.LFB111
 10582 018c 1A000000 		.4byte	.LFE111-.LFB111
 10583 0190 00000000 		.4byte	.LFB112
 10584 0194 1A000000 		.4byte	.LFE112-.LFB112
 10585 0198 00000000 		.4byte	.LFB113
 10586 019c 1A000000 		.4byte	.LFE113-.LFB113
 10587 01a0 00000000 		.4byte	0
 10588 01a4 00000000 		.4byte	0
 10589              		.section	.debug_ranges,"",%progbits
 10590              	.Ldebug_ranges0:
 10591 0000 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 208


 10592 0004 7E000000 		.4byte	.LFE64
 10593 0008 00000000 		.4byte	.LFB65
 10594 000c 3E010000 		.4byte	.LFE65
 10595 0010 00000000 		.4byte	.LFB66
 10596 0014 12000000 		.4byte	.LFE66
 10597 0018 00000000 		.4byte	.LFB67
 10598 001c E0010000 		.4byte	.LFE67
 10599 0020 00000000 		.4byte	.LFB68
 10600 0024 32000000 		.4byte	.LFE68
 10601 0028 00000000 		.4byte	.LFB69
 10602 002c 3A000000 		.4byte	.LFE69
 10603 0030 00000000 		.4byte	.LFB70
 10604 0034 3A000000 		.4byte	.LFE70
 10605 0038 00000000 		.4byte	.LFB71
 10606 003c 40000000 		.4byte	.LFE71
 10607 0040 00000000 		.4byte	.LFB72
 10608 0044 12000000 		.4byte	.LFE72
 10609 0048 00000000 		.4byte	.LFB73
 10610 004c 4C000000 		.4byte	.LFE73
 10611 0050 00000000 		.4byte	.LFB74
 10612 0054 4A000000 		.4byte	.LFE74
 10613 0058 00000000 		.4byte	.LFB75
 10614 005c 5E000000 		.4byte	.LFE75
 10615 0060 00000000 		.4byte	.LFB76
 10616 0064 32000000 		.4byte	.LFE76
 10617 0068 00000000 		.4byte	.LFB77
 10618 006c D0000000 		.4byte	.LFE77
 10619 0070 00000000 		.4byte	.LFB78
 10620 0074 D2010000 		.4byte	.LFE78
 10621 0078 00000000 		.4byte	.LFB79
 10622 007c AA010000 		.4byte	.LFE79
 10623 0080 00000000 		.4byte	.LFB80
 10624 0084 68000000 		.4byte	.LFE80
 10625 0088 00000000 		.4byte	.LFB81
 10626 008c 82010000 		.4byte	.LFE81
 10627 0090 00000000 		.4byte	.LFB82
 10628 0094 96000000 		.4byte	.LFE82
 10629 0098 00000000 		.4byte	.LFB83
 10630 009c A4010000 		.4byte	.LFE83
 10631 00a0 00000000 		.4byte	.LFB84
 10632 00a4 D6000000 		.4byte	.LFE84
 10633 00a8 00000000 		.4byte	.LFB85
 10634 00ac 7C000000 		.4byte	.LFE85
 10635 00b0 00000000 		.4byte	.LFB86
 10636 00b4 E0020000 		.4byte	.LFE86
 10637 00b8 00000000 		.4byte	.LFB87
 10638 00bc D8000000 		.4byte	.LFE87
 10639 00c0 00000000 		.4byte	.LFB88
 10640 00c4 0C040000 		.4byte	.LFE88
 10641 00c8 00000000 		.4byte	.LFB89
 10642 00cc F8000000 		.4byte	.LFE89
 10643 00d0 00000000 		.4byte	.LFB90
 10644 00d4 9A010000 		.4byte	.LFE90
 10645 00d8 00000000 		.4byte	.LFB91
 10646 00dc 26000000 		.4byte	.LFE91
 10647 00e0 00000000 		.4byte	.LFB92
 10648 00e4 18000000 		.4byte	.LFE92
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 209


 10649 00e8 00000000 		.4byte	.LFB93
 10650 00ec 18000000 		.4byte	.LFE93
 10651 00f0 00000000 		.4byte	.LFB94
 10652 00f4 28000000 		.4byte	.LFE94
 10653 00f8 00000000 		.4byte	.LFB95
 10654 00fc 26000000 		.4byte	.LFE95
 10655 0100 00000000 		.4byte	.LFB96
 10656 0104 1E000000 		.4byte	.LFE96
 10657 0108 00000000 		.4byte	.LFB97
 10658 010c 18000000 		.4byte	.LFE97
 10659 0110 00000000 		.4byte	.LFB98
 10660 0114 76000000 		.4byte	.LFE98
 10661 0118 00000000 		.4byte	.LFB99
 10662 011c 1E000000 		.4byte	.LFE99
 10663 0120 00000000 		.4byte	.LFB100
 10664 0124 DC000000 		.4byte	.LFE100
 10665 0128 00000000 		.4byte	.LFB101
 10666 012c 30030000 		.4byte	.LFE101
 10667 0130 00000000 		.4byte	.LFB102
 10668 0134 E8000000 		.4byte	.LFE102
 10669 0138 00000000 		.4byte	.LFB103
 10670 013c 18000000 		.4byte	.LFE103
 10671 0140 00000000 		.4byte	.LFB104
 10672 0144 18000000 		.4byte	.LFE104
 10673 0148 00000000 		.4byte	.LFB105
 10674 014c 16000000 		.4byte	.LFE105
 10675 0150 00000000 		.4byte	.LFB106
 10676 0154 80000000 		.4byte	.LFE106
 10677 0158 00000000 		.4byte	.LFB107
 10678 015c 70010000 		.4byte	.LFE107
 10679 0160 00000000 		.4byte	.LFB108
 10680 0164 D0000000 		.4byte	.LFE108
 10681 0168 00000000 		.4byte	.LFB109
 10682 016c 90010000 		.4byte	.LFE109
 10683 0170 00000000 		.4byte	.LFB110
 10684 0174 1A000000 		.4byte	.LFE110
 10685 0178 00000000 		.4byte	.LFB111
 10686 017c 1A000000 		.4byte	.LFE111
 10687 0180 00000000 		.4byte	.LFB112
 10688 0184 1A000000 		.4byte	.LFE112
 10689 0188 00000000 		.4byte	.LFB113
 10690 018c 1A000000 		.4byte	.LFE113
 10691 0190 00000000 		.4byte	0
 10692 0194 00000000 		.4byte	0
 10693              		.section	.debug_line,"",%progbits
 10694              	.Ldebug_line0:
 10695 0000 EE080000 		.section	.debug_str,"MS",%progbits,1
 10695      02007E01 
 10695      00000201 
 10695      FB0E0D00 
 10695      01010101 
 10696              	.LASF75:
 10697 0000 47465864 		.ascii	"GFXdrawCircle\000"
 10697      72617743 
 10697      6972636C 
 10697      6500
 10698              	.LASF31:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 210


 10699 000e 6C617374 		.ascii	"last\000"
 10699      00
 10700              	.LASF137:
 10701 0013 73686F77 		.ascii	"showCents\000"
 10701      43656E74 
 10701      7300
 10702              	.LASF33:
 10703 001d 47465866 		.ascii	"GFXfont\000"
 10703      6F6E7400 
 10704              	.LASF144:
 10705 0025 696E7075 		.ascii	"input\000"
 10705      7400
 10706              	.LASF57:
 10707 002b 47465869 		.ascii	"GFXinit\000"
 10707      6E697400 
 10708              	.LASF126:
 10709 0033 47465877 		.ascii	"GFXwidth\000"
 10709      69647468 
 10709      00
 10710              	.LASF120:
 10711 003c 47465863 		.ascii	"GFXcharBounds\000"
 10711      68617242 
 10711      6F756E64 
 10711      7300
 10712              	.LASF149:
 10713 004a 47465873 		.ascii	"GFXscrollUp\000"
 10713      63726F6C 
 10713      6C557000 
 10714              	.LASF134:
 10715 0056 74686973 		.ascii	"thisDigit\000"
 10715      44696769 
 10715      7400
 10716              	.LASF88:
 10717 0060 64783031 		.ascii	"dx01\000"
 10717      00
 10718              	.LASF90:
 10719 0065 64783032 		.ascii	"dx02\000"
 10719      00
 10720              	.LASF130:
 10721 006a 62756666 		.ascii	"buffer\000"
 10721      657200
 10722              	.LASF114:
 10723 0071 47465873 		.ascii	"GFXsetTextColor\000"
 10723      65745465 
 10723      7874436F 
 10723      6C6F7200 
 10724              	.LASF148:
 10725 0081 64656369 		.ascii	"decimalHasHappened\000"
 10725      6D616C48 
 10725      61734861 
 10725      7070656E 
 10725      656400
 10726              	.LASF14:
 10727 0094 756E7369 		.ascii	"unsigned int\000"
 10727      676E6564 
 10727      20696E74 
 10727      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 211


 10728              	.LASF50:
 10729 00a1 77726170 		.ascii	"wrap\000"
 10729      00
 10730              	.LASF8:
 10731 00a6 5F5F696E 		.ascii	"__int32_t\000"
 10731      7433325F 
 10731      7400
 10732              	.LASF64:
 10733 00b0 47465864 		.ascii	"GFXdrawPixel\000"
 10733      72617750 
 10733      6978656C 
 10733      00
 10734              	.LASF156:
 10735 00bd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 10735      43313120 
 10735      352E342E 
 10735      31203230 
 10735      31363036 
 10736 00f0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 10736      20726576 
 10736      6973696F 
 10736      6E203233 
 10736      37373135 
 10737 0123 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 10737      66756E63 
 10737      74696F6E 
 10737      2D736563 
 10737      74696F6E 
 10738              	.LASF92:
 10739 014b 64783132 		.ascii	"dx12\000"
 10739      00
 10740              	.LASF51:
 10741 0150 5F637034 		.ascii	"_cp437\000"
 10741      333700
 10742              	.LASF128:
 10743 0157 47465869 		.ascii	"GFXinvertDisplay\000"
 10743      6E766572 
 10743      74446973 
 10743      706C6179 
 10743      00
 10744              	.LASF67:
 10745 0168 47465877 		.ascii	"GFXwriteFastHLine\000"
 10745      72697465 
 10745      46617374 
 10745      484C696E 
 10745      6500
 10746              	.LASF44:
 10747 017a 726F7461 		.ascii	"rotation\000"
 10747      74696F6E 
 10747      00
 10748              	.LASF155:
 10749 0183 70697463 		.ascii	"pitches\000"
 10749      68657300 
 10750              	.LASF132:
 10751 018b 6E756D44 		.ascii	"numDigits\000"
 10751      69676974 
 10751      7300
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 212


 10752              	.LASF41:
 10753 0195 48454947 		.ascii	"HEIGHT\000"
 10753      485400
 10754              	.LASF20:
 10755 019c 75696E74 		.ascii	"uint32_t\000"
 10755      33325F74 
 10755      00
 10756              	.LASF15:
 10757 01a5 696E7438 		.ascii	"int8_t\000"
 10757      5F7400
 10758              	.LASF109:
 10759 01ac 47465877 		.ascii	"GFXwrite\000"
 10759      72697465 
 10759      00
 10760              	.LASF117:
 10761 01b5 47465873 		.ascii	"GFXsetRotation\000"
 10761      6574526F 
 10761      74617469 
 10761      6F6E00
 10762              	.LASF159:
 10763 01c4 5F474658 		.ascii	"_GFX\000"
 10763      00
 10764              	.LASF35:
 10765 01c9 666C6F61 		.ascii	"float\000"
 10765      7400
 10766              	.LASF151:
 10767 01cf 47465873 		.ascii	"GFXscrollLeft\000"
 10767      63726F6C 
 10767      6C4C6566 
 10767      7400
 10768              	.LASF46:
 10769 01dd 63757273 		.ascii	"cursor_x\000"
 10769      6F725F78 
 10769      00
 10770              	.LASF45:
 10771 01e6 63757273 		.ascii	"cursor_y\000"
 10771      6F725F79 
 10771      00
 10772              	.LASF47:
 10773 01ef 74657874 		.ascii	"textsize\000"
 10773      73697A65 
 10773      00
 10774              	.LASF17:
 10775 01f8 696E7431 		.ascii	"int16_t\000"
 10775      365F7400 
 10776              	.LASF13:
 10777 0200 6C6F6E67 		.ascii	"long long unsigned int\000"
 10777      206C6F6E 
 10777      6720756E 
 10777      7369676E 
 10777      65642069 
 10778              	.LASF71:
 10779 0217 47465864 		.ascii	"GFXdrawFastHLine\000"
 10779      72617746 
 10779      61737448 
 10779      4C696E65 
 10779      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 213


 10780              	.LASF138:
 10781 0228 70636C61 		.ascii	"pclass\000"
 10781      737300
 10782              	.LASF66:
 10783 022f 47465877 		.ascii	"GFXwriteFastVLine\000"
 10783      72697465 
 10783      46617374 
 10783      564C696E 
 10783      6500
 10784              	.LASF119:
 10785 0241 47465873 		.ascii	"GFXsetFont\000"
 10785      6574466F 
 10785      6E7400
 10786              	.LASF32:
 10787 024c 79416476 		.ascii	"yAdvance\000"
 10787      616E6365 
 10787      00
 10788              	.LASF6:
 10789 0255 5F5F7569 		.ascii	"__uint16_t\000"
 10789      6E743136 
 10789      5F7400
 10790              	.LASF145:
 10791 0260 6E756D44 		.ascii	"numDecimal\000"
 10791      6563696D 
 10791      616C00
 10792              	.LASF135:
 10793 026b 4F4C4544 		.ascii	"OLEDparsePitch\000"
 10793      70617273 
 10793      65506974 
 10793      636800
 10794              	.LASF40:
 10795 027a 57494454 		.ascii	"WIDTH\000"
 10795      4800
 10796              	.LASF21:
 10797 0280 6269746D 		.ascii	"bitmapOffset\000"
 10797      61704F66 
 10797      66736574 
 10797      00
 10798              	.LASF74:
 10799 028d 47465864 		.ascii	"GFXdrawLine\000"
 10799      7261774C 
 10799      696E6500 
 10800              	.LASF22:
 10801 0299 77696474 		.ascii	"width\000"
 10801      6800
 10802              	.LASF141:
 10803 029f 6F666673 		.ascii	"offset\000"
 10803      657400
 10804              	.LASF107:
 10805 02a6 666F6E74 		.ascii	"fontOffset\000"
 10805      4F666673 
 10805      657400
 10806              	.LASF131:
 10807 02b1 6D794E75 		.ascii	"myNumber\000"
 10807      6D626572 
 10807      00
 10808              	.LASF37:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 214


 10809 02ba 63686172 		.ascii	"char\000"
 10809      00
 10810              	.LASF27:
 10811 02bf 47465867 		.ascii	"GFXglyph\000"
 10811      6C797068 
 10811      00
 10812              	.LASF108:
 10813 02c8 63757273 		.ascii	"cursor\000"
 10813      6F7200
 10814              	.LASF121:
 10815 02cf 6D696E78 		.ascii	"minx\000"
 10815      00
 10816              	.LASF122:
 10817 02d4 6D696E79 		.ascii	"miny\000"
 10817      00
 10818              	.LASF89:
 10819 02d9 64793031 		.ascii	"dy01\000"
 10819      00
 10820              	.LASF91:
 10821 02de 64793032 		.ascii	"dy02\000"
 10821      00
 10822              	.LASF16:
 10823 02e3 75696E74 		.ascii	"uint8_t\000"
 10823      385F7400 
 10824              	.LASF26:
 10825 02eb 794F6666 		.ascii	"yOffset\000"
 10825      73657400 
 10826              	.LASF42:
 10827 02f3 5F776964 		.ascii	"_width\000"
 10827      746800
 10828              	.LASF102:
 10829 02fa 62697473 		.ascii	"bits\000"
 10829      00
 10830              	.LASF125:
 10831 02ff 47465867 		.ascii	"GFXgetTextBounds\000"
 10831      65745465 
 10831      7874426F 
 10831      756E6473 
 10831      00
 10832              	.LASF87:
 10833 0310 47465866 		.ascii	"GFXfillTriangle\000"
 10833      696C6C54 
 10833      7269616E 
 10833      676C6500 
 10834              	.LASF61:
 10835 0320 73746565 		.ascii	"steep\000"
 10835      7000
 10836              	.LASF83:
 10837 0326 47465864 		.ascii	"GFXdrawRect\000"
 10837      72617752 
 10837      65637400 
 10838              	.LASF12:
 10839 0332 6C6F6E67 		.ascii	"long long int\000"
 10839      206C6F6E 
 10839      6720696E 
 10839      7400
 10840              	.LASF54:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 215


 10841 0340 666F6E74 		.ascii	"fontDesc\000"
 10841      44657363 
 10841      00
 10842              	.LASF154:
 10843 0349 4465636F 		.ascii	"Decoder_1_Enabled\000"
 10843      6465725F 
 10843      315F456E 
 10843      61626C65 
 10843      6400
 10844              	.LASF93:
 10845 035b 64793132 		.ascii	"dy12\000"
 10845      00
 10846              	.LASF158:
 10847 0360 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 10847      73657273 
 10847      5C4A6566 
 10847      66536E79 
 10847      6465725C 
 10848 038e 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 10848      355F656C 
 10848      65637472 
 10848      6F737465 
 10848      656C5F73 
 10849 03c0 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 10849      5F50534F 
 10849      43335F35 
 10849      5F546865 
 10849      726D6973 
 10850              	.LASF95:
 10851 03de 62797465 		.ascii	"byteWidth\000"
 10851      57696474 
 10851      6800
 10852              	.LASF4:
 10853 03e8 5F5F696E 		.ascii	"__int16_t\000"
 10853      7431365F 
 10853      7400
 10854              	.LASF43:
 10855 03f2 5F686569 		.ascii	"_height\000"
 10855      67687400 
 10856              	.LASF78:
 10857 03fa 47465864 		.ascii	"GFXdrawCircleHelper\000"
 10857      72617743 
 10857      6972636C 
 10857      6548656C 
 10857      70657200 
 10858              	.LASF70:
 10859 040e 47465864 		.ascii	"GFXdrawFastVLine\000"
 10859      72617746 
 10859      61737456 
 10859      4C696E65 
 10859      00
 10860              	.LASF100:
 10861 041f 73697A65 		.ascii	"size\000"
 10861      00
 10862              	.LASF104:
 10863 0424 796F3136 		.ascii	"yo16\000"
 10863      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 216


 10864              	.LASF152:
 10865 0429 47465873 		.ascii	"GFXscrollRight\000"
 10865      63726F6C 
 10865      6C526967 
 10865      687400
 10866              	.LASF142:
 10867 0438 4F4C4544 		.ascii	"OLEDparsePitchClass\000"
 10867      70617273 
 10867      65506974 
 10867      6368436C 
 10867      61737300 
 10868              	.LASF23:
 10869 044c 68656967 		.ascii	"height\000"
 10869      687400
 10870              	.LASF113:
 10871 0453 47465873 		.ascii	"GFXsetTextSize\000"
 10871      65745465 
 10871      78745369 
 10871      7A6500
 10872              	.LASF0:
 10873 0462 5F5F696E 		.ascii	"__int8_t\000"
 10873      74385F74 
 10873      00
 10874              	.LASF59:
 10875 046b 6D794746 		.ascii	"myGFX\000"
 10875      5800
 10876              	.LASF157:
 10877 0471 6766782E 		.ascii	"gfx.c\000"
 10877      6300
 10878              	.LASF38:
 10879 0477 6C6F6E67 		.ascii	"long double\000"
 10879      20646F75 
 10879      626C6500 
 10880              	.LASF18:
 10881 0483 75696E74 		.ascii	"uint16_t\000"
 10881      31365F74 
 10881      00
 10882              	.LASF110:
 10883 048c 47465873 		.ascii	"GFXsetCursor\000"
 10883      65744375 
 10883      72736F72 
 10883      00
 10884              	.LASF84:
 10885 0499 47465864 		.ascii	"GFXdrawRoundRect\000"
 10885      72617752 
 10885      6F756E64 
 10885      52656374 
 10885      00
 10886              	.LASF97:
 10887 04aa 73746172 		.ascii	"startWrite\000"
 10887      74577269 
 10887      746500
 10888              	.LASF5:
 10889 04b5 73686F72 		.ascii	"short int\000"
 10889      7420696E 
 10889      7400
 10890              	.LASF9:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 217


 10891 04bf 6C6F6E67 		.ascii	"long int\000"
 10891      20696E74 
 10891      00
 10892              	.LASF150:
 10893 04c8 47465873 		.ascii	"GFXscrollDown\000"
 10893      63726F6C 
 10893      6C446F77 
 10893      6E00
 10894              	.LASF63:
 10895 04d6 47465873 		.ascii	"GFXstartWrite\000"
 10895      74617274 
 10895      57726974 
 10895      6500
 10896              	.LASF153:
 10897 04e4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 10897      52784275 
 10897      66666572 
 10897      00
 10898              	.LASF118:
 10899 04f1 47465863 		.ascii	"GFXcp437\000"
 10899      70343337 
 10899      00
 10900              	.LASF53:
 10901 04fa 666F6E74 		.ascii	"fontHeight\000"
 10901      48656967 
 10901      687400
 10902              	.LASF143:
 10903 0505 4F4C4544 		.ascii	"OLEDparseFixedFloat\000"
 10903      70617273 
 10903      65466978 
 10903      6564466C 
 10903      6F617400 
 10904              	.LASF72:
 10905 0519 47465866 		.ascii	"GFXfillRect\000"
 10905      696C6C52 
 10905      65637400 
 10906              	.LASF127:
 10907 0525 47465868 		.ascii	"GFXheight\000"
 10907      65696768 
 10907      7400
 10908              	.LASF68:
 10909 052f 47465877 		.ascii	"GFXwriteFillRect\000"
 10909      72697465 
 10909      46696C6C 
 10909      52656374 
 10909      00
 10910              	.LASF60:
 10911 0540 636F6C6F 		.ascii	"color\000"
 10911      7200
 10912              	.LASF133:
 10913 0546 77686963 		.ascii	"whichPlace\000"
 10913      68506C61 
 10913      636500
 10914              	.LASF56:
 10915 0551 6D794766 		.ascii	"myGfx\000"
 10915      7800
 10916              	.LASF1:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 218


 10917 0557 5F5F7569 		.ascii	"__uint8_t\000"
 10917      6E74385F 
 10917      7400
 10918              	.LASF136:
 10919 0561 6D696469 		.ascii	"midi\000"
 10919      00
 10920              	.LASF62:
 10921 0566 79737465 		.ascii	"ystep\000"
 10921      7000
 10922              	.LASF140:
 10923 056c 6E6F7465 		.ascii	"note\000"
 10923      00
 10924              	.LASF123:
 10925 0571 6D617878 		.ascii	"maxx\000"
 10925      00
 10926              	.LASF111:
 10927 0576 47465867 		.ascii	"GFXgetCursorX\000"
 10927      65744375 
 10927      72736F72 
 10927      5800
 10928              	.LASF112:
 10929 0584 47465867 		.ascii	"GFXgetCursorY\000"
 10929      65744375 
 10929      72736F72 
 10929      5900
 10930              	.LASF52:
 10931 0592 67667846 		.ascii	"gfxFont\000"
 10931      6F6E7400 
 10932              	.LASF39:
 10933 059a 73697A65 		.ascii	"sizetype\000"
 10933      74797065 
 10933      00
 10934              	.LASF11:
 10935 05a3 6C6F6E67 		.ascii	"long unsigned int\000"
 10935      20756E73 
 10935      69676E65 
 10935      6420696E 
 10935      7400
 10936              	.LASF86:
 10937 05b5 47465864 		.ascii	"GFXdrawTriangle\000"
 10937      72617754 
 10937      7269616E 
 10937      676C6500 
 10938              	.LASF65:
 10939 05c5 47465877 		.ascii	"GFXwritePixel\000"
 10939      72697465 
 10939      50697865 
 10939      6C00
 10940              	.LASF98:
 10941 05d3 656E6457 		.ascii	"endWrite\000"
 10941      72697465 
 10941      00
 10942              	.LASF80:
 10943 05dc 47465866 		.ascii	"GFXfillCircle\000"
 10943      696C6C43 
 10943      6972636C 
 10943      6500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 219


 10944              	.LASF106:
 10945 05ea 666F6E74 		.ascii	"fontWidth\000"
 10945      57696474 
 10945      6800
 10946              	.LASF19:
 10947 05f4 696E7433 		.ascii	"int32_t\000"
 10947      325F7400 
 10948              	.LASF29:
 10949 05fc 676C7970 		.ascii	"glyph\000"
 10949      6800
 10950              	.LASF96:
 10951 0602 62797465 		.ascii	"byte\000"
 10951      00
 10952              	.LASF147:
 10953 0607 6E6F6E7A 		.ascii	"nonzeroHasHappened\000"
 10953      65726F48 
 10953      61734861 
 10953      7070656E 
 10953      656400
 10954              	.LASF69:
 10955 061a 47465865 		.ascii	"GFXendWrite\000"
 10955      6E645772 
 10955      69746500 
 10956              	.LASF3:
 10957 0626 756E7369 		.ascii	"unsigned char\000"
 10957      676E6564 
 10957      20636861 
 10957      7200
 10958              	.LASF28:
 10959 0634 6269746D 		.ascii	"bitmap\000"
 10959      617000
 10960              	.LASF10:
 10961 063b 5F5F7569 		.ascii	"__uint32_t\000"
 10961      6E743332 
 10961      5F7400
 10962              	.LASF58:
 10963 0646 47465877 		.ascii	"GFXwriteLine\000"
 10963      72697465 
 10963      4C696E65 
 10963      00
 10964              	.LASF105:
 10965 0653 47465863 		.ascii	"GFXcheckScrollWrap\000"
 10965      6865636B 
 10965      5363726F 
 10965      6C6C5772 
 10965      617000
 10966              	.LASF101:
 10967 0666 6C696E65 		.ascii	"line\000"
 10967      00
 10968              	.LASF115:
 10969 066b 47465873 		.ascii	"GFXsetTextWrap\000"
 10969      65745465 
 10969      78745772 
 10969      617000
 10970              	.LASF30:
 10971 067a 66697273 		.ascii	"first\000"
 10971      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 220


 10972              	.LASF94:
 10973 0680 47465864 		.ascii	"GFXdrawBitmap\000"
 10973      72617742 
 10973      69746D61 
 10973      7000
 10974              	.LASF79:
 10975 068e 636F726E 		.ascii	"cornername\000"
 10975      65726E61 
 10975      6D6500
 10976              	.LASF129:
 10977 0699 4F4C4544 		.ascii	"OLEDparseInt\000"
 10977      70617273 
 10977      65496E74 
 10977      00
 10978              	.LASF24:
 10979 06a6 78416476 		.ascii	"xAdvance\000"
 10979      616E6365 
 10979      00
 10980              	.LASF99:
 10981 06af 47465864 		.ascii	"GFXdrawChar\000"
 10981      72617743 
 10981      68617200 
 10982              	.LASF146:
 10983 06bb 706F7765 		.ascii	"power\000"
 10983      7200
 10984              	.LASF25:
 10985 06c1 784F6666 		.ascii	"xOffset\000"
 10985      73657400 
 10986              	.LASF55:
 10987 06c9 6175746F 		.ascii	"autoscroll\000"
 10987      7363726F 
 10987      6C6C00
 10988              	.LASF76:
 10989 06d4 6464465F 		.ascii	"ddF_x\000"
 10989      7800
 10990              	.LASF77:
 10991 06da 6464465F 		.ascii	"ddF_y\000"
 10991      7900
 10992              	.LASF2:
 10993 06e0 7369676E 		.ascii	"signed char\000"
 10993      65642063 
 10993      68617200 
 10994              	.LASF82:
 10995 06ec 64656C74 		.ascii	"delta\000"
 10995      6100
 10996              	.LASF7:
 10997 06f2 73686F72 		.ascii	"short unsigned int\000"
 10997      7420756E 
 10997      7369676E 
 10997      65642069 
 10997      6E7400
 10998              	.LASF73:
 10999 0705 47465866 		.ascii	"GFXfillScreen\000"
 10999      696C6C53 
 10999      63726565 
 10999      6E00
 11000              	.LASF124:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTGxcVx.s 			page 221


 11001 0713 6D617879 		.ascii	"maxy\000"
 11001      00
 11002              	.LASF34:
 11003 0718 75696E74 		.ascii	"uint8\000"
 11003      3800
 11004              	.LASF36:
 11005 071e 646F7562 		.ascii	"double\000"
 11005      6C6500
 11006              	.LASF48:
 11007 0725 74657874 		.ascii	"textcolor\000"
 11007      636F6C6F 
 11007      7200
 11008              	.LASF85:
 11009 072f 47465866 		.ascii	"GFXfillRoundRect\000"
 11009      696C6C52 
 11009      6F756E64 
 11009      52656374 
 11009      00
 11010              	.LASF139:
 11011 0740 6F637461 		.ascii	"octave\000"
 11011      766500
 11012              	.LASF81:
 11013 0747 47465866 		.ascii	"GFXfillCircleHelper\000"
 11013      696C6C43 
 11013      6972636C 
 11013      6548656C 
 11013      70657200 
 11014              	.LASF49:
 11015 075b 74657874 		.ascii	"textbgcolor\000"
 11015      6267636F 
 11015      6C6F7200 
 11016              	.LASF103:
 11017 0767 786F3136 		.ascii	"xo16\000"
 11017      00
 11018              	.LASF116:
 11019 076c 47465867 		.ascii	"GFXgetRotation\000"
 11019      6574526F 
 11019      74617469 
 11019      6F6E00
 11020              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
