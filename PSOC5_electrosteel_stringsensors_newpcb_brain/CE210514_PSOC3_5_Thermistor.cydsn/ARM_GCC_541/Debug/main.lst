ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.comm	sysexBuffer,2048,4
  21              		.global	sysexPointer
  22              		.bss
  23              		.align	2
  24              		.type	sysexPointer, %object
  25              		.size	sysexPointer, 4
  26              	sysexPointer:
  27 0000 00000000 		.space	4
  28              		.global	receivingSysex
  29              		.type	receivingSysex, %object
  30              		.size	receivingSysex, 1
  31              	receivingSysex:
  32 0004 00       		.space	1
  33              		.global	parsingSysex
  34              		.type	parsingSysex, %object
  35              		.size	parsingSysex, 1
  36              	parsingSysex:
  37 0005 00       		.space	1
  38              		.comm	presetArray,2048,4
  39              		.global	presetNumberToWrite
  40              		.type	presetNumberToWrite, %object
  41              		.size	presetNumberToWrite, 1
  42              	presetNumberToWrite:
  43 0006 00       		.space	1
  44              		.global	copedentNumberToWrite
  45              		.type	copedentNumberToWrite, %object
  46              		.size	copedentNumberToWrite, 1
  47              	copedentNumberToWrite:
  48 0007 00       		.space	1
  49              		.global	sendMessageEnd
  50              		.type	sendMessageEnd, %object
  51              		.size	sendMessageEnd, 1
  52              	sendMessageEnd:
  53 0008 00       		.space	1
  54              		.global	sendSingleParamUpdate
  55              		.type	sendSingleParamUpdate, %object
  56              		.size	sendSingleParamUpdate, 1
  57              	sendSingleParamUpdate:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 2


  58 0009 00       		.space	1
  59              		.global	singleParamToUpdateHigh
  60              		.type	singleParamToUpdateHigh, %object
  61              		.size	singleParamToUpdateHigh, 1
  62              	singleParamToUpdateHigh:
  63 000a 00       		.space	1
  64              		.global	singleParamToUpdateLow
  65              		.type	singleParamToUpdateLow, %object
  66              		.size	singleParamToUpdateLow, 1
  67              	singleParamToUpdateLow:
  68 000b 00       		.space	1
  69              		.global	singleParamValueHigh
  70              		.type	singleParamValueHigh, %object
  71              		.size	singleParamValueHigh, 1
  72              	singleParamValueHigh:
  73 000c 00       		.space	1
  74              		.global	singleParamValueLow
  75              		.type	singleParamValueLow, %object
  76              		.size	singleParamValueLow, 1
  77              	singleParamValueLow:
  78 000d 00       		.space	1
  79              		.global	sendMappingChangeUpdate
  80              		.type	sendMappingChangeUpdate, %object
  81              		.size	sendMappingChangeUpdate, 1
  82              	sendMappingChangeUpdate:
  83 000e 00       		.space	1
  84              		.global	presetNumberToStore
  85              		.type	presetNumberToStore, %object
  86              		.size	presetNumberToStore, 1
  87              	presetNumberToStore:
  88 000f 00       		.space	1
  89              		.global	transposeSemitones
  90              		.type	transposeSemitones, %object
  91              		.size	transposeSemitones, 1
  92              	transposeSemitones:
  93 0010 00       		.space	1
  94              		.global	transposeCents
  95              		.type	transposeCents, %object
  96              		.size	transposeCents, 1
  97              	transposeCents:
  98 0011 00       		.space	1
  99              		.global	transposeFloat
 100 0012 0000     		.align	2
 101              		.type	transposeFloat, %object
 102              		.size	transposeFloat, 4
 103              	transposeFloat:
 104 0014 00000000 		.space	4
 105              		.global	volumeInt
 106              		.type	volumeInt, %object
 107              		.size	volumeInt, 1
 108              	volumeInt:
 109 0018 00       		.space	1
 110              		.global	volumeWaitingToSend
 111              		.type	volumeWaitingToSend, %object
 112              		.size	volumeWaitingToSend, 1
 113              	volumeWaitingToSend:
 114 0019 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 3


 115              		.global	midiSendOn
 116              		.type	midiSendOn, %object
 117              		.size	midiSendOn, 1
 118              	midiSendOn:
 119 001a 00       		.space	1
 120              		.global	midiBarSendOn
 121              		.type	midiBarSendOn, %object
 122              		.size	midiBarSendOn, 1
 123              	midiBarSendOn:
 124 001b 00       		.space	1
 125              		.global	pitchSmoothing
 126              		.type	pitchSmoothing, %object
 127              		.size	pitchSmoothing, 1
 128              	pitchSmoothing:
 129 001c 00       		.space	1
 130              		.global	controlSmoothing
 131              		.type	controlSmoothing, %object
 132              		.size	controlSmoothing, 1
 133              	controlSmoothing:
 134 001d 00       		.space	1
 135              		.global	octaveAction
 136              		.type	octaveAction, %object
 137              		.size	octaveAction, 1
 138              	octaveAction:
 139 001e 00       		.space	1
 140              		.global	stringRepresentation
 141              		.data
 142              		.align	2
 143              		.type	stringRepresentation, %object
 144              		.size	stringRepresentation, 2
 145              	stringRepresentation:
 146 0000 03       		.byte	3
 147 0001 08       		.byte	8
 148              		.global	presetArraySection
 149              		.bss
 150              		.type	presetArraySection, %object
 151              		.size	presetArraySection, 1
 152              	presetArraySection:
 153 001f 00       		.space	1
 154              		.comm	sendLocalPresetStoreCommand,1,1
 155              		.global	messageArraySendCount
 156              		.align	1
 157              		.type	messageArraySendCount, %object
 158              		.size	messageArraySendCount, 2
 159              	messageArraySendCount:
 160 0020 0000     		.space	2
 161              		.global	messageArraySize
 162              		.align	1
 163              		.type	messageArraySize, %object
 164              		.size	messageArraySize, 2
 165              	messageArraySize:
 166 0022 0000     		.space	2
 167              		.global	sysexMessageInProgress
 168              		.type	sysexMessageInProgress, %object
 169              		.size	sysexMessageInProgress, 1
 170              	sysexMessageInProgress:
 171 0024 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 4


 172              		.global	bufCount
 173              		.type	bufCount, %object
 174              		.size	bufCount, 1
 175              	bufCount:
 176 0025 00       		.space	1
 177              		.global	sendingMessage
 178              		.type	sendingMessage, %object
 179              		.size	sendingMessage, 1
 180              	sendingMessage:
 181 0026 00       		.space	1
 182              		.global	sendKnobs
 183              		.type	sendKnobs, %object
 184              		.size	sendKnobs, 1
 185              	sendKnobs:
 186 0027 00       		.space	1
 187              		.global	currentFloat
 188              		.align	2
 189              		.type	currentFloat, %object
 190              		.size	currentFloat, 4
 191              	currentFloat:
 192 0028 00000000 		.space	4
 193              		.global	mapCount
 194              		.align	2
 195              		.type	mapCount, %object
 196              		.size	mapCount, 4
 197              	mapCount:
 198 002c 00000000 		.space	4
 199              		.global	valsCount
 200              		.align	1
 201              		.type	valsCount, %object
 202              		.size	valsCount, 2
 203              	valsCount:
 204 0030 0000     		.space	2
 205              		.global	mapCountExpectation
 206              		.align	1
 207              		.type	mapCountExpectation, %object
 208              		.size	mapCountExpectation, 2
 209              	mapCountExpectation:
 210 0032 0000     		.space	2
 211              		.global	numMappings
 212              		.align	1
 213              		.type	numMappings, %object
 214              		.size	numMappings, 2
 215              	numMappings:
 216 0034 0000     		.space	2
 217              		.global	parseThatMF
 218              		.type	parseThatMF, %object
 219              		.size	parseThatMF, 1
 220              	parseThatMF:
 221 0036 00       		.space	1
 222              		.global	valCheck
 223 0037 00       		.align	2
 224              		.type	valCheck, %object
 225              		.size	valCheck, 4
 226              	valCheck:
 227 0038 00000000 		.space	4
 228              		.global	testVal
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 5


 229              		.align	2
 230              		.type	testVal, %object
 231              		.size	testVal, 4
 232              	testVal:
 233 003c 00000000 		.space	4
 234              		.global	sendFirmwareUpdateRequest
 235              		.type	sendFirmwareUpdateRequest, %object
 236              		.size	sendFirmwareUpdateRequest, 1
 237              	sendFirmwareUpdateRequest:
 238 0040 00       		.space	1
 239              		.global	numStrings
 240              		.data
 241              		.type	numStrings, %object
 242              		.size	numStrings, 1
 243              	numStrings:
 244 0002 0A       		.byte	10
 245              		.global	usbActivityCounter
 246              		.bss
 247              		.type	usbActivityCounter, %object
 248              		.size	usbActivityCounter, 1
 249              	usbActivityCounter:
 250 0041 00       		.space	1
 251              		.comm	midiMsg,4,4
 252              		.global	currentVBUS
 253              		.type	currentVBUS, %object
 254              		.size	currentVBUS, 1
 255              	currentVBUS:
 256 0042 00       		.space	1
 257              		.global	prevVBUS
 258              		.type	prevVBUS, %object
 259              		.size	prevVBUS, 1
 260              	prevVBUS:
 261 0043 00       		.space	1
 262              		.global	USB_active
 263              		.type	USB_active, %object
 264              		.size	USB_active, 1
 265              	USB_active:
 266 0044 00       		.space	1
 267              		.global	USB_check_flag
 268              		.type	USB_check_flag, %object
 269              		.size	USB_check_flag, 1
 270              	USB_check_flag:
 271 0045 00       		.space	1
 272              		.comm	mappingArray,6,4
 273              		.comm	inBuffer,32,4
 274              		.comm	myArray,32,4
 275              		.comm	returnedData,32,4
 276              		.global	octave
 277              		.data
 278 0003 00       		.align	2
 279              		.type	octave, %object
 280              		.size	octave, 4
 281              	octave:
 282 0004 05000000 		.word	5
 283              		.comm	angle,20,4
 284              		.comm	prevAngle,20,4
 285              		.comm	ADC_values,8,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 6


 286              		.global	rawAngle
 287              		.bss
 288              		.align	1
 289              		.type	rawAngle, %object
 290              		.size	rawAngle, 2
 291              	rawAngle:
 292 0046 0000     		.space	2
 293              		.global	midiSent
 294              		.align	1
 295              		.type	midiSent, %object
 296              		.size	midiSent, 2
 297              	midiSent:
 298 0048 0000     		.space	2
 299              		.global	midiOverflow
 300              		.align	1
 301              		.type	midiOverflow, %object
 302              		.size	midiOverflow, 2
 303              	midiOverflow:
 304 004a 0000     		.space	2
 305              		.comm	macroKnobValues,16,4
 306              		.global	currentCopedent
 307              		.type	currentCopedent, %object
 308              		.size	currentCopedent, 1
 309              	currentCopedent:
 310 004c 00       		.space	1
 311              		.global	necks
 312              		.data
 313              		.align	2
 314              		.type	necks, %object
 315              		.size	necks, 2
 316              	necks:
 317 0008 00       		.byte	0
 318 0009 01       		.byte	1
 319              		.comm	rx1Channel,1,1
 320              		.comm	rx2Channel,1,32
 321              		.comm	rx1TD,2,4
 322              		.comm	rx2TD,2,32
 323              		.comm	txChannel,1,32
 324              		.comm	txTD,1,32
 325              		.comm	rx3Channel,1,32
 326              		.comm	rx3TD,1,32
 327              		.comm	rxBufferPluck,64,32
 328              		.comm	rxBufferBar,16,32
 329              		.comm	strings,24,4
 330              		.comm	prevStrings,24,4
 331              		.comm	bar,4,4
 332              		.comm	prevBar,4,4
 333              		.comm	maxStrings,24,4
 334              		.global	amHere
 335              		.bss
 336              		.type	amHere, %object
 337              		.size	amHere, 1
 338              	amHere:
 339 004d 00       		.space	1
 340              		.global	spiCounter
 341              		.type	spiCounter, %object
 342              		.size	spiCounter, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 7


 343              	spiCounter:
 344 004e 00       		.space	1
 345              		.global	newDataFlag
 346              		.type	newDataFlag, %object
 347              		.size	newDataFlag, 1
 348              	newDataFlag:
 349 004f 00       		.space	1
 350              		.global	prevOctave
 351              		.align	2
 352              		.type	prevOctave, %object
 353              		.size	prevOctave, 4
 354              	prevOctave:
 355 0050 00000000 		.space	4
 356              		.global	pluck_index
 357              		.type	pluck_index, %object
 358              		.size	pluck_index, 1
 359              	pluck_index:
 360 0054 00       		.space	1
 361              		.global	amHere2
 362              		.type	amHere2, %object
 363              		.size	amHere2, 1
 364              	amHere2:
 365 0055 00       		.space	1
 366              		.global	spiCounter2
 367              		.type	spiCounter2, %object
 368              		.size	spiCounter2, 1
 369              	spiCounter2:
 370 0056 00       		.space	1
 371              		.global	newDataFlag2
 372              		.type	newDataFlag2, %object
 373              		.size	newDataFlag2, 1
 374              	newDataFlag2:
 375 0057 00       		.space	1
 376              		.global	currentPluckBuffer
 377              		.type	currentPluckBuffer, %object
 378              		.size	currentPluckBuffer, 1
 379              	currentPluckBuffer:
 380 0058 00       		.space	1
 381              		.global	currentBarBuffer
 382              		.type	currentBarBuffer, %object
 383              		.size	currentBarBuffer, 1
 384              	currentBarBuffer:
 385 0059 00       		.space	1
 386              		.global	pluckErrorCount
 387              		.type	pluckErrorCount, %object
 388              		.size	pluckErrorCount, 1
 389              	pluckErrorCount:
 390 005a 00       		.space	1
 391              		.global	SPI1ErrorCount
 392 005b 00       		.align	1
 393              		.type	SPI1ErrorCount, %object
 394              		.size	SPI1ErrorCount, 2
 395              	SPI1ErrorCount:
 396 005c 0000     		.space	2
 397              		.global	inputData
 398              		.type	inputData, %object
 399              		.size	inputData, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 8


 400              	inputData:
 401 005e 00       		.space	1
 402              		.global	spiAdjusted
 403              		.type	spiAdjusted, %object
 404              		.size	spiAdjusted, 1
 405              	spiAdjusted:
 406 005f 00       		.space	1
 407              		.global	mySpiCounter
 408              		.type	mySpiCounter, %object
 409              		.size	mySpiCounter, 1
 410              	mySpiCounter:
 411 0060 00       		.space	1
 412              		.global	offsetErrorCount
 413 0061 00       		.align	1
 414              		.type	offsetErrorCount, %object
 415              		.size	offsetErrorCount, 2
 416              	offsetErrorCount:
 417 0062 0000     		.space	2
 418              		.global	SPI2errorflag
 419              		.type	SPI2errorflag, %object
 420              		.size	SPI2errorflag, 1
 421              	SPI2errorflag:
 422 0064 00       		.space	1
 423              		.comm	knobs,4,4
 424              		.comm	prevKnobs,4,4
 425              		.comm	knobs7bit,4,4
 426              		.comm	prevKnobs7bit,4,4
 427              		.global	u7bit_volumePedal
 428              		.type	u7bit_volumePedal, %object
 429              		.size	u7bit_volumePedal, 1
 430              	u7bit_volumePedal:
 431 0065 00       		.space	1
 432              		.global	prev_7bit_volumePedal
 433              		.type	prev_7bit_volumePedal, %object
 434              		.size	prev_7bit_volumePedal, 1
 435              	prev_7bit_volumePedal:
 436 0066 00       		.space	1
 437              		.global	SPI2started
 438              		.type	SPI2started, %object
 439              		.size	SPI2started, 1
 440              	SPI2started:
 441 0067 00       		.space	1
 442              		.global	whichMacro
 443              		.type	whichMacro, %object
 444              		.size	whichMacro, 1
 445              	whichMacro:
 446 0068 00       		.space	1
 447              		.comm	macroKnobValues7bit,16,4
 448              		.comm	prevMacroKnobValues7bit,16,4
 449              		.comm	prevMacroKnobValues,32,4
 450              		.comm	knobFrozen,16,4
 451 0069 000000   		.align	2
 452              	eepromArray:
 453 006c 0000     		.space	2
 454              		.global	array
 455 006e 0000     		.align	2
 456              		.type	array, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 9


 457              		.size	array, 2
 458              	array:
 459 0070 0000     		.space	2
 460              		.comm	eepromReturnValue,1,1
 461              		.global	Em_EEPROM_em_EepromStorage
 462              		.section	.rodata
 463              		.align	8
 464              		.type	Em_EEPROM_em_EepromStorage, %object
 465              		.size	Em_EEPROM_em_EepromStorage, 1024
 466              	Em_EEPROM_em_EepromStorage:
 467 0000 00000000 		.space	1024
 467      00000000 
 467      00000000 
 467      00000000 
 467      00000000 
 468              		.comm	eeprom_cnt,1,1
 469              		.comm	status,4,4
 470              		.comm	ptr,4,4
 471              		.global	barCount
 472              		.bss
 473 0072 0000     		.align	2
 474              		.type	barCount, %object
 475              		.size	barCount, 4
 476              	barCount:
 477 0074 00000000 		.space	4
 478              		.comm	I2Cbuff1,256,4
 479              		.comm	I2Cbuff2,16,4
 480              		.global	send_it
 481              		.type	send_it, %object
 482              		.size	send_it, 1
 483              	send_it:
 484 0078 00       		.space	1
 485              		.global	mux_states
 486              		.data
 487 000a 0000     		.align	2
 488              		.type	mux_states, %object
 489              		.size	mux_states, 24
 490              	mux_states:
 491 000c 05       		.byte	5
 492 000d 00       		.byte	0
 493 000e 05       		.byte	5
 494 000f 01       		.byte	1
 495 0010 05       		.byte	5
 496 0011 02       		.byte	2
 497 0012 05       		.byte	5
 498 0013 03       		.byte	3
 499 0014 05       		.byte	5
 500 0015 04       		.byte	4
 501 0016 00       		.byte	0
 502 0017 00       		.byte	0
 503 0018 01       		.byte	1
 504 0019 00       		.byte	0
 505 001a 03       		.byte	3
 506 001b 00       		.byte	0
 507 001c 04       		.byte	4
 508 001d 00       		.byte	0
 509 001e 02       		.byte	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 10


 510 001f 00       		.byte	0
 511 0020 05       		.byte	5
 512 0021 05       		.byte	5
 513 0022 06       		.byte	6
 514 0023 00       		.byte	0
 515              		.global	i2c_skipped
 516              		.bss
 517 0079 000000   		.align	2
 518              		.type	i2c_skipped, %object
 519              		.size	i2c_skipped, 12
 520              	i2c_skipped:
 521 007c 00000000 		.space	12
 521      00000000 
 521      00000000 
 522              		.global	pedals_low
 523              		.data
 524              		.align	2
 525              		.type	pedals_low, %object
 526              		.size	pedals_low, 20
 527              	pedals_low:
 528 0024 830A     		.short	2691
 529 0026 0109     		.short	2305
 530 0028 9909     		.short	2457
 531 002a 0E02     		.short	526
 532 002c 9A0E     		.short	3738
 533 002e 0309     		.short	2307
 534 0030 C60B     		.short	3014
 535 0032 8E08     		.short	2190
 536 0034 E90A     		.short	2793
 537 0036 2605     		.short	1318
 538              		.global	pedals_high
 539              		.align	2
 540              		.type	pedals_high, %object
 541              		.size	pedals_high, 20
 542              	pedals_high:
 543 0038 ED0A     		.short	2797
 544 003a 6509     		.short	2405
 545 003c 140A     		.short	2580
 546 003e 8702     		.short	647
 547 0040 0E0F     		.short	3854
 548 0042 9D09     		.short	2461
 549 0044 450C     		.short	3141
 550 0046 3109     		.short	2353
 551 0048 760B     		.short	2934
 552 004a E005     		.short	1504
 553              		.global	pedals_lowWithDeadZone
 554              		.align	2
 555              		.type	pedals_lowWithDeadZone, %object
 556              		.size	pedals_lowWithDeadZone, 20
 557              	pedals_lowWithDeadZone:
 558 004c 830A     		.short	2691
 559 004e 0109     		.short	2305
 560 0050 9909     		.short	2457
 561 0052 0E02     		.short	526
 562 0054 9A0E     		.short	3738
 563 0056 0309     		.short	2307
 564 0058 C60B     		.short	3014
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 11


 565 005a 8E08     		.short	2190
 566 005c E90A     		.short	2793
 567 005e 2605     		.short	1318
 568              		.global	pedals_highWithDeadZone
 569              		.align	2
 570              		.type	pedals_highWithDeadZone, %object
 571              		.size	pedals_highWithDeadZone, 20
 572              	pedals_highWithDeadZone:
 573 0060 ED0A     		.short	2797
 574 0062 6509     		.short	2405
 575 0064 140A     		.short	2580
 576 0066 8702     		.short	647
 577 0068 0E0F     		.short	3854
 578 006a 9D09     		.short	2461
 579 006c 450C     		.short	3141
 580 006e 3109     		.short	2353
 581 0070 760B     		.short	2934
 582 0072 E005     		.short	1504
 583              		.global	deadZone
 584              		.type	deadZone, %object
 585              		.size	deadZone, 1
 586              	deadZone:
 587 0074 33       		.byte	51
 588              		.global	volumePedal
 589 0075 00       		.align	1
 590              		.type	volumePedal, %object
 591              		.size	volumePedal, 2
 592              	volumePedal:
 593 0076 FF0F     		.short	4095
 594              		.comm	processed_pedals,20,4
 595              		.comm	prev_processed_pedals,20,4
 596              		.comm	pedals8bit,10,4
 597              		.comm	pedals7bit,10,4
 598              		.comm	prevPedals7bit,10,4
 599              		.comm	prev_processed_volumePedal,2,2
 600              		.comm	processed_volumePedal,2,2
 601              		.global	sliderBugOn
 602              		.bss
 603              		.type	sliderBugOn, %object
 604              		.size	sliderBugOn, 1
 605              	sliderBugOn:
 606 0088 00       		.space	1
 607              		.comm	fretMeasurements,48,4
 608              		.global	currentPresetSelection
 609              		.type	currentPresetSelection, %object
 610              		.size	currentPresetSelection, 1
 611              	currentPresetSelection:
 612 0089 00       		.space	1
 613              		.comm	presetNamesArray,896,4
 614              		.global	presetNumberToLoad
 615              		.type	presetNumberToLoad, %object
 616              		.size	presetNumberToLoad, 1
 617              	presetNumberToLoad:
 618 008a 00       		.space	1
 619              		.global	presetLoadedResponse
 620              		.data
 621              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 12


 622              		.type	presetLoadedResponse, %object
 623              		.size	presetLoadedResponse, 2
 624              	presetLoadedResponse:
 625 0078 FF       		.byte	-1
 626 0079 00       		.byte	0
 627              		.comm	macroNamesArray,9216,4
 628              		.comm	controlNamesArray,2560,4
 629              		.global	fretScalingInMIDI
 630 007a 0000     		.align	2
 631              		.type	fretScalingInMIDI, %object
 632              		.size	fretScalingInMIDI, 48
 633              	fretScalingInMIDI:
 634 007c 00000000 		.word	0
 635 0080 0000803F 		.word	1065353216
 636 0084 00004040 		.word	1077936128
 637 0088 0000A040 		.word	1084227584
 638 008c 0000E040 		.word	1088421888
 639 0090 00001041 		.word	1091567616
 640 0094 00004041 		.word	1094713344
 641 0098 00007041 		.word	1097859072
 642 009c 00008841 		.word	1099431936
 643 00a0 00009841 		.word	1100480512
 644 00a4 0000A841 		.word	1101529088
 645 00a8 0000C041 		.word	1103101952
 646              		.global	fretScalingInRatios
 647              		.align	2
 648              		.type	fretScalingInRatios, %object
 649              		.size	fretScalingInRatios, 48
 650              	fretScalingInRatios:
 651 00ac 0000803F 		.word	1065353216
 652 00b0 809C873F 		.word	1065852032
 653 00b4 F537983F 		.word	1066940405
 654 00b8 01DCAA3F 		.word	1068162049
 655 00bc 85C8BF3F 		.word	1069533317
 656 00c0 F244D73F 		.word	1071072498
 657 00c4 00000040 		.word	1073741824
 658 00c8 F5371840 		.word	1075329013
 659 00cc 01DC2A40 		.word	1076550657
 660 00d0 85C83F40 		.word	1077921925
 661 00d4 F2445740 		.word	1079461106
 662 00d8 00008040 		.word	1082130432
 663              		.comm	pedalRatios,40,4
 664              		.global	last_mux
 665              		.type	last_mux, %object
 666              		.size	last_mux, 1
 667              	last_mux:
 668 00dc 01       		.byte	1
 669              		.global	main_counter
 670              		.bss
 671              		.type	main_counter, %object
 672              		.size	main_counter, 1
 673              	main_counter:
 674 008b 00       		.space	1
 675              		.global	dualSlider
 676              		.type	dualSlider, %object
 677              		.size	dualSlider, 1
 678              	dualSlider:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 13


 679 008c 00       		.space	1
 680              		.global	voice
 681              		.type	voice, %object
 682              		.size	voice, 1
 683              	voice:
 684 008d 00       		.space	1
 685              		.global	patchNum
 686              		.type	patchNum, %object
 687              		.size	patchNum, 1
 688              	patchNum:
 689 008e 00       		.space	1
 690              		.global	pedal_inverted
 691 008f 00       		.align	2
 692              		.type	pedal_inverted, %object
 693              		.size	pedal_inverted, 10
 694              	pedal_inverted:
 695 0090 00000000 		.space	10
 695      00000000 
 695      0000
 696              		.comm	copedent,3696,4
 697              		.comm	copedentNamesArray,70,4
 698              		.comm	prevStringPitchBend,48,4
 699              		.comm	pedals,480,4
 700              		.global	pedal_cc_assignments
 701              		.data
 702 00dd 000000   		.align	2
 703              		.type	pedal_cc_assignments, %object
 704              		.size	pedal_cc_assignments, 10
 705              	pedal_cc_assignments:
 706 00e0 00       		.byte	0
 707 00e1 01       		.byte	1
 708 00e2 02       		.byte	2
 709 00e3 03       		.byte	3
 710 00e4 04       		.byte	4
 711 00e5 08       		.byte	8
 712 00e6 09       		.byte	9
 713 00e7 07       		.byte	7
 714 00e8 06       		.byte	6
 715 00e9 05       		.byte	5
 716              		.comm	openStringFrequencies,48,4
 717              		.comm	stringMappedPositionsInRatios,8,4
 718              		.comm	stringMappedPositionsInMIDI,8,4
 719              		.comm	barMidiOuterStrings,4,4
 720              		.comm	stringFrequencies,48,4
 721              		.comm	stringOctave,48,4
 722              		.comm	stringPitch,48,4
 723              		.comm	stringMIDI,48,4
 724              		.comm	openStringMIDI_Int,48,4
 725              		.global	mainOLEDWaitingToSend
 726              		.bss
 727              		.type	mainOLEDWaitingToSend, %object
 728              		.size	mainOLEDWaitingToSend, 1
 729              	mainOLEDWaitingToSend:
 730 009a 00       		.space	1
 731              		.global	macroOLEDWaitingToSend
 732              		.type	macroOLEDWaitingToSend, %object
 733              		.size	macroOLEDWaitingToSend, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 14


 734              	macroOLEDWaitingToSend:
 735 009b 00       		.space	1
 736              		.comm	presetAlreadyDisplayed,64,4
 737              		.global	currentNeck
 738              		.type	currentNeck, %object
 739              		.size	currentNeck, 1
 740              	currentNeck:
 741 009c 00       		.space	1
 742              		.global	neckByte
 743              		.type	neckByte, %object
 744              		.size	neckByte, 1
 745              	neckByte:
 746 009d 00       		.space	1
 747              		.global	editMode
 748              		.type	editMode, %object
 749              		.size	editMode, 1
 750              	editMode:
 751 009e 00       		.space	1
 752              		.global	leverCalibrationMode
 753              		.type	leverCalibrationMode, %object
 754              		.size	leverCalibrationMode, 1
 755              	leverCalibrationMode:
 756 009f 00       		.space	1
 757              		.global	fretCalibrationMode
 758              		.type	fretCalibrationMode, %object
 759              		.size	fretCalibrationMode, 1
 760              	fretCalibrationMode:
 761 00a0 00       		.space	1
 762              		.global	presetWhenMacroWriteStarted
 763              		.type	presetWhenMacroWriteStarted, %object
 764              		.size	presetWhenMacroWriteStarted, 1
 765              	presetWhenMacroWriteStarted:
 766 00a1 00       		.space	1
 767              		.global	macroPageWhenMacroWriteStarted
 768              		.type	macroPageWhenMacroWriteStarted, %object
 769              		.size	macroPageWhenMacroWriteStarted, 1
 770              	macroPageWhenMacroWriteStarted:
 771 00a2 00       		.space	1
 772              		.global	pedals_float
 773 00a3 00       		.align	2
 774              		.type	pedals_float, %object
 775              		.size	pedals_float, 40
 776              	pedals_float:
 777 00a4 00000000 		.space	40
 777      00000000 
 777      00000000 
 777      00000000 
 777      00000000 
 778              		.global	stringRepDivider
 779              		.data
 780 00ea 0000     		.align	2
 781              		.type	stringRepDivider, %object
 782              		.size	stringRepDivider, 4
 783              	stringRepDivider:
 784 00ec 0000803F 		.word	1065353216
 785              		.global	__aeabi_fsub
 786              		.global	__aeabi_fdiv
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 15


 787              		.global	__aeabi_fmul
 788              		.global	__aeabi_fadd
 789              		.section	.text.map,"ax",%progbits
 790              		.align	2
 791              		.global	map
 792              		.thumb
 793              		.thumb_func
 794              		.type	map, %function
 795              	map:
 796              	.LFB64:
 797              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** #include "ui.h"
   9:main.c        **** 
  10:main.c        **** //#define BOOTLOAD_STYLE
  11:main.c        **** 
  12:main.c        **** 
  13:main.c        **** 
  14:main.c        **** uint8_t sysexBuffer[2048];
  15:main.c        **** uint32_t sysexPointer = 0;
  16:main.c        **** uint8_t receivingSysex = 0;
  17:main.c        **** uint8_t parsingSysex = 0;
  18:main.c        **** volatile uint8_t presetArray[2048];
  19:main.c        **** uint8_t presetNumberToWrite = 0;
  20:main.c        **** uint8_t copedentNumberToWrite = 0;
  21:main.c        **** uint8_t sendMessageEnd = 0;
  22:main.c        **** 
  23:main.c        **** uint8_t sendSingleParamUpdate = 0;
  24:main.c        **** uint8_t singleParamToUpdateHigh = 0;
  25:main.c        **** uint8_t singleParamToUpdateLow = 0;
  26:main.c        **** uint8_t singleParamValueHigh = 0;
  27:main.c        **** uint8_t singleParamValueLow = 0;
  28:main.c        ****             
  29:main.c        **** uint8_t sendMappingChangeUpdate = 0;
  30:main.c        **** 
  31:main.c        **** 
  32:main.c        **** uint8_t presetNumberToStore = 0;
  33:main.c        ****             
  34:main.c        **** 
  35:main.c        **** int8_t transposeSemitones = 0;
  36:main.c        **** int8_t transposeCents = 0;
  37:main.c        **** float transposeFloat = 0.0f;
  38:main.c        **** int8_t volumeInt = 0;
  39:main.c        **** uint8_t volumeWaitingToSend = 0;
  40:main.c        **** uint8_t midiSendOn = 0;
  41:main.c        **** uint8_t midiBarSendOn = 0;
  42:main.c        **** uint8_t pitchSmoothing = 0;
  43:main.c        **** uint8_t controlSmoothing = 0;
  44:main.c        **** uint8_t octaveAction = 0;
  45:main.c        **** uint8_t stringRepresentation[2] = {3,8};
  46:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 16


  47:main.c        **** uint8_t presetArraySection = presetName;
  48:main.c        **** 
  49:main.c        **** uint8_t sendLocalPresetStoreCommand;
  50:main.c        **** 
  51:main.c        **** uint16_t messageArraySendCount = 0;
  52:main.c        **** uint16_t messageArraySize = 0;
  53:main.c        **** 
  54:main.c        **** uint8_t sysexMessageInProgress = 0;
  55:main.c        **** 
  56:main.c        **** uint8_t bufCount = 0;
  57:main.c        **** volatile uint8_t sendingMessage = 0;
  58:main.c        **** volatile uint8_t sendKnobs = 0;
  59:main.c        **** uint32_t currentFloat = 0;
  60:main.c        **** uint32_t mapCount = 0;
  61:main.c        **** 
  62:main.c        **** uint16_t valsCount = 0;
  63:main.c        **** uint16_t mapCountExpectation = 0;
  64:main.c        **** uint16_t numMappings = 0;
  65:main.c        **** volatile uint8_t parseThatMF = 0;
  66:main.c        **** volatile float valCheck = 0.0f;
  67:main.c        **** volatile float testVal = 0.0f;
  68:main.c        **** 
  69:main.c        **** uint8_t sendFirmwareUpdateRequest = 0;
  70:main.c        **** 
  71:main.c        **** uint8_t numStrings = 10;
  72:main.c        **** /*
  73:main.c        **** #define TUNING_ARRAY_SIZE 258
  74:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  75:main.c        **** */
  76:main.c        **** 
  77:main.c        **** volatile uint8_t usbActivityCounter = 0u;
  78:main.c        **** uint8_t midiMsg[4];
  79:main.c        **** uint8_t currentVBUS = 0;
  80:main.c        **** uint8_t prevVBUS = 0;
  81:main.c        **** volatile uint8_t USB_active = 0;
  82:main.c        **** volatile uint8_t USB_check_flag = 0;
  83:main.c        **** 
  84:main.c        **** uint8_t mappingArray[6];
  85:main.c        **** 
  86:main.c        **** uint8_t inBuffer[myBufferSize];
  87:main.c        **** 
  88:main.c        **** uint8_t myArray[myBufferSize];
  89:main.c        **** uint8_t returnedData[myBufferSize];
  90:main.c        **** int octave = 5;
  91:main.c        **** uint16_t angle[NUM_PEDALS];
  92:main.c        **** uint16_t prevAngle[NUM_PEDALS];
  93:main.c        **** 
  94:main.c        **** uint16_t ADC_values[4];
  95:main.c        **** uint16_t rawAngle = 0;
  96:main.c        **** uint16_t midiSent = 0;
  97:main.c        **** uint16_t midiOverflow = 0;
  98:main.c        **** 
  99:main.c        **** uint8_t macroKnobValues[NUM_MACROS*NUM_MACRO_PAGES];
 100:main.c        **** 
 101:main.c        **** uint8_t currentCopedent = 0;
 102:main.c        **** uint8_t necks[2] = {0,1};
 103:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 17


 104:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 105:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 106:main.c        **** 
 107:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 108:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 109:main.c        **** 
 110:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 111:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 112:main.c        **** 
 113:main.c        **** 
 114:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 115:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 116:main.c        **** 
 117:main.c        **** volatile uint16_t strings[12];
 118:main.c        **** volatile uint16_t prevStrings[12];
 119:main.c        **** volatile uint16_t bar[2];
 120:main.c        **** volatile uint16_t prevBar[2];
 121:main.c        **** volatile uint16_t maxStrings[12];
 122:main.c        **** volatile uint8_t amHere = 0;
 123:main.c        **** volatile uint8_t spiCounter = 0;
 124:main.c        **** volatile uint8_t newDataFlag = 0;
 125:main.c        **** int prevOctave = 0;
 126:main.c        **** uint8_t pluck_index = 0;
 127:main.c        **** volatile uint8_t amHere2 = 0;
 128:main.c        **** volatile uint8_t spiCounter2 = 0;
 129:main.c        **** volatile uint8_t newDataFlag2 = 0;
 130:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 131:main.c        **** volatile uint8_t currentBarBuffer = 0;
 132:main.c        **** volatile uint8_t pluckErrorCount = 0;
 133:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 134:main.c        **** 
 135:main.c        **** volatile uint8_t inputData = 0;
 136:main.c        **** 
 137:main.c        **** union breakFloat {
 138:main.c        ****  float f;
 139:main.c        ****  uint8_t b[4];  
 140:main.c        ****  uint32_t u32;
 141:main.c        **** };
 142:main.c        **** 
 143:main.c        **** 
 144:main.c        **** uint8_t spiAdjusted = 0;
 145:main.c        **** uint8_t mySpiCounter = 0;
 146:main.c        **** volatile uint16_t offsetErrorCount = 0;
 147:main.c        **** volatile uint8_t SPI2errorflag = 0;
 148:main.c        **** uint8_t knobs[4];
 149:main.c        **** uint8_t prevKnobs[4];
 150:main.c        **** 
 151:main.c        **** uint8_t knobs7bit[4];
 152:main.c        **** uint8_t prevKnobs7bit[4];
 153:main.c        **** 
 154:main.c        **** uint8_t u7bit_volumePedal = 0;
 155:main.c        **** uint8_t prev_7bit_volumePedal = 0;
 156:main.c        **** volatile uint8_t SPI2started = 0;
 157:main.c        **** 
 158:main.c        **** uint8_t whichMacro = 0;
 159:main.c        **** 
 160:main.c        **** uint8_t macroKnobValues7bit[NUM_MACROS*NUM_MACRO_PAGES];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 18


 161:main.c        **** uint8_t prevMacroKnobValues7bit[NUM_MACROS*NUM_MACRO_PAGES];
 162:main.c        **** int16_t prevMacroKnobValues[NUM_MACROS*NUM_MACRO_PAGES];
 163:main.c        **** uint8_t knobFrozen[NUM_MACROS*NUM_MACRO_PAGES];
 164:main.c        **** 
 165:main.c        **** 
 166:main.c        **** static uint8 CYCODE eepromArray[]={ 0, 0 };
 167:main.c        ****                                             
 168:main.c        **** uint8 array[] ={ 0, 0 };
 169:main.c        ****                                 
 170:main.c        ****     /*Return status for EEPROM and UART*/ 
 171:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 172:main.c        **** 
 173:main.c        **** 
 174:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 175:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] __ALIGNED(CY_FLASH_SIZEOF_ROW) = 
 176:main.c        **** 
 177:main.c        **** 
 178:main.c        **** uint8 eeprom_cnt;
 179:main.c        **** cystatus status;
 180:main.c        **** volatile const uint8 * ptr;
 181:main.c        **** volatile int barCount = 0;
 182:main.c        **** 
 183:main.c        **** 
 184:main.c        ****     
 185:main.c        **** volatile uint8_t I2Cbuff1[256];
 186:main.c        **** volatile uint8_t I2Cbuff2[16];
 187:main.c        **** volatile uint8_t send_it = 0;
 188:main.c        **** 
 189:main.c        **** //first mux, 0x70 is first element of array. 
 190:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 191:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 192:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 193:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 194:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,0,0,0,0,0}; //so that pedals and levers can be marked as s
 195:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 196:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 197:main.c        **** uint16_t pedals_lowWithDeadZone[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 198:main.c        **** uint16_t pedals_highWithDeadZone[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 199:main.c        **** uint8_t deadZone = 51;
 200:main.c        **** uint16_t volumePedal = 4095;
 201:main.c        **** uint16_t processed_pedals[NUM_PEDALS];
 202:main.c        **** uint16_t prev_processed_pedals[NUM_PEDALS];
 203:main.c        **** uint8_t pedals8bit[NUM_PEDALS];
 204:main.c        **** uint8_t pedals7bit[NUM_PEDALS];
 205:main.c        **** uint8_t prevPedals7bit[NUM_PEDALS];
 206:main.c        **** int16_t prev_processed_volumePedal;
 207:main.c        **** int16_t processed_volumePedal;
 208:main.c        **** 
 209:main.c        **** uint8_t sliderBugOn = 0;
 210:main.c        **** 
 211:main.c        **** uint16_t fretMeasurements[NUM_SLIDERS][NUM_FRET_MEASUREMENTS];
 212:main.c        **** 
 213:main.c        **** 
 214:main.c        **** 
 215:main.c        **** uint8_t currentPresetSelection = 0;
 216:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][PRESET_NAME_LENGTH_IN_BYTES];
 217:main.c        **** uint8_t presetNumberToLoad = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 19


 218:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 219:main.c        **** 
 220:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS*NUM_MACRO_PAGES][MACRO_NAME_LENGTH_IN_BYTES];
 221:main.c        **** uint8_t controlNamesArray[MAX_NUM_PRESETS][NUM_CONTROLS][CONTROL_NAME_LENGTH_IN_BYTES];
 222:main.c        **** 
 223:main.c        **** //frets 0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24
 224:main.c        **** float fretScalingInMIDI[NUM_FRET_MEASUREMENTS] = {0.0f, 1.0f, 3.0f, 5.0f, 7.0f, 9.0f, 12.0f, 15.0f,
 225:main.c        **** float fretScalingInRatios[NUM_FRET_MEASUREMENTS] = {1.0f, 1.0594634453327456842756554370605f, 1.189
 226:main.c        **** 
 227:main.c        **** float pedalRatios[NUM_PEDALS];
 228:main.c        **** uint8_t last_mux = 1;
 229:main.c        **** volatile uint8_t main_counter = 0;
 230:main.c        **** uint8_t dualSlider = 0;
 231:main.c        **** uint8_t voice = 0; //unused for now
 232:main.c        **** 
 233:main.c        **** uint8_t patchNum = 0;
 234:main.c        **** 
 235:main.c        **** uint8_t pedal_inverted[NUM_PEDALS] = {0,0,0,0,0,0,0,0,0,0};
 236:main.c        **** 
 237:main.c        **** 
 238:main.c        **** float copedent[MAX_NUM_COPEDENTS][NUM_PEDALS+1][NUM_STRINGS];
 239:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][COPEDENT_NAME_LENGTH_IN_BYTES];
 240:main.c        **** 
 241:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 242:main.c        **** 
 243:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 244:main.c        **** 
 245:main.c        **** uint8_t pedal_cc_assignments[NUM_PEDALS] = {0, 1, 2, 3, 4, 8, 9, 7, 6, 5};
 246:main.c        **** float openStringFrequencies[NUM_STRINGS];
 247:main.c        **** float stringMappedPositionsInRatios[NUM_SLIDERS];
 248:main.c        **** float stringMappedPositionsInMIDI[NUM_SLIDERS];
 249:main.c        **** uint16_t barMidiOuterStrings[2];
 250:main.c        **** float stringFrequencies[NUM_STRINGS];
 251:main.c        **** float stringOctave[NUM_STRINGS];
 252:main.c        **** float stringPitch[NUM_STRINGS];
 253:main.c        **** float stringMIDI[NUM_STRINGS];
 254:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 255:main.c        **** 
 256:main.c        **** uint8_t mainOLEDWaitingToSend = 0;
 257:main.c        **** uint8_t macroOLEDWaitingToSend = 0;
 258:main.c        **** 
 259:main.c        **** uint8_t presetAlreadyDisplayed[MAX_NUM_PRESETS];
 260:main.c        **** 
 261:main.c        **** uint8_t currentNeck = 0;
 262:main.c        **** uint8_t neckByte = 0;
 263:main.c        **** 
 264:main.c        **** uint8_t editMode = 0;
 265:main.c        **** uint8_t leverCalibrationMode = 0;
 266:main.c        **** uint8_t fretCalibrationMode = 0;
 267:main.c        **** 
 268:main.c        **** uint8_t presetWhenMacroWriteStarted = 0;
 269:main.c        **** uint8_t macroPageWhenMacroWriteStarted = 0;
 270:main.c        **** 
 271:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 272:main.c        **** float stringRepDivider = 1.0f;
 273:main.c        **** 
 274:main.c        **** //function prototypes
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 20


 275:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 276:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 277:main.c        **** void USB_service(void);
 278:main.c        **** void checkUSB_Vbus(void);
 279:main.c        **** void sendMIDIAllNotesOff(void);
 280:main.c        **** void sendMIDIPitchBend(int val, int channel);
 281:main.c        **** void firstCheckUSB_Vbus(void);
 282:main.c        **** void restartSystemCheck(void);
 283:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 284:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 285:main.c        **** void noteEvent(int string);
 286:main.c        **** void I2C_reset(void);
 287:main.c        **** void CCEvent(int cc, int val);
 288:main.c        **** void DmaRxConfiguration(void);
 289:main.c        **** void DmaTxConfiguration(void);
 290:main.c        **** void parseSysex(void);
 291:main.c        **** 
 292:main.c        **** //helper functions
 293:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 294:main.c        **** {
 798              		.loc 1 294 0
 799              		.cfi_startproc
 800              		@ args = 4, pretend = 0, frame = 16
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802 0000 B0B5     		push	{r4, r5, r7, lr}
 803              		.cfi_def_cfa_offset 16
 804              		.cfi_offset 4, -16
 805              		.cfi_offset 5, -12
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 84B0     		sub	sp, sp, #16
 809              		.cfi_def_cfa_offset 32
 810 0004 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 812 0006 F860     		str	r0, [r7, #12]	@ float
 813 0008 B960     		str	r1, [r7, #8]	@ float
 814 000a 7A60     		str	r2, [r7, #4]	@ float
 815 000c 3B60     		str	r3, [r7]	@ float
 295:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 816              		.loc 1 295 0
 817 000e 3968     		ldr	r1, [r7]	@ float
 818 0010 386A     		ldr	r0, [r7, #32]	@ float
 819 0012 FFF7FEFF 		bl	__aeabi_fsub
 820 0016 0346     		mov	r3, r0
 821 0018 1C46     		mov	r4, r3
 822 001a B968     		ldr	r1, [r7, #8]	@ float
 823 001c F868     		ldr	r0, [r7, #12]	@ float
 824 001e FFF7FEFF 		bl	__aeabi_fsub
 825 0022 0346     		mov	r3, r0
 826 0024 1D46     		mov	r5, r3
 827 0026 B968     		ldr	r1, [r7, #8]	@ float
 828 0028 7868     		ldr	r0, [r7, #4]	@ float
 829 002a FFF7FEFF 		bl	__aeabi_fsub
 830 002e 0346     		mov	r3, r0
 831 0030 1946     		mov	r1, r3
 832 0032 2846     		mov	r0, r5
 833 0034 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 21


 834 0038 0346     		mov	r3, r0
 835 003a 1946     		mov	r1, r3
 836 003c 2046     		mov	r0, r4
 837 003e FFF7FEFF 		bl	__aeabi_fmul
 838 0042 0346     		mov	r3, r0
 839 0044 3968     		ldr	r1, [r7]	@ float
 840 0046 1846     		mov	r0, r3
 841 0048 FFF7FEFF 		bl	__aeabi_fadd
 842 004c 0346     		mov	r3, r0
 296:main.c        **** }
 843              		.loc 1 296 0
 844 004e 1846     		mov	r0, r3
 845 0050 1037     		adds	r7, r7, #16
 846              		.cfi_def_cfa_offset 16
 847 0052 BD46     		mov	sp, r7
 848              		.cfi_def_cfa_register 13
 849              		@ sp needed
 850 0054 B0BD     		pop	{r4, r5, r7, pc}
 851              		.cfi_endproc
 852              	.LFE64:
 853              		.size	map, .-map
 854              		.global	__aeabi_i2f
 855 0056 00BF     		.section	.text.mapDualSlider,"ax",%progbits
 856              		.align	2
 857              		.global	mapDualSlider
 858              		.thumb
 859              		.thumb_func
 860              		.type	mapDualSlider, %function
 861              	mapDualSlider:
 862              	.LFB65:
 297:main.c        **** 
 298:main.c        **** float mapDualSlider(float value, float ostart, float ostop)
 299:main.c        **** {
 863              		.loc 1 299 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 16
 866              		@ frame_needed = 1, uses_anonymous_args = 0
 867 0000 90B5     		push	{r4, r7, lr}
 868              		.cfi_def_cfa_offset 12
 869              		.cfi_offset 4, -12
 870              		.cfi_offset 7, -8
 871              		.cfi_offset 14, -4
 872 0002 85B0     		sub	sp, sp, #20
 873              		.cfi_def_cfa_offset 32
 874 0004 00AF     		add	r7, sp, #0
 875              		.cfi_def_cfa_register 7
 876 0006 F860     		str	r0, [r7, #12]	@ float
 877 0008 B960     		str	r1, [r7, #8]	@ float
 878 000a 7A60     		str	r2, [r7, #4]	@ float
 300:main.c        ****     return ostart + (ostop - ostart) * ((value - stringRepresentation[0]) * stringRepDivider);
 879              		.loc 1 300 0
 880 000c B968     		ldr	r1, [r7, #8]	@ float
 881 000e 7868     		ldr	r0, [r7, #4]	@ float
 882 0010 FFF7FEFF 		bl	__aeabi_fsub
 883 0014 0346     		mov	r3, r0
 884 0016 1C46     		mov	r4, r3
 885 0018 104B     		ldr	r3, .L5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 22


 886 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 887 001c 1846     		mov	r0, r3
 888 001e FFF7FEFF 		bl	__aeabi_i2f
 889 0022 0346     		mov	r3, r0
 890 0024 1946     		mov	r1, r3
 891 0026 F868     		ldr	r0, [r7, #12]	@ float
 892 0028 FFF7FEFF 		bl	__aeabi_fsub
 893 002c 0346     		mov	r3, r0
 894 002e 1A46     		mov	r2, r3
 895 0030 0B4B     		ldr	r3, .L5+4
 896 0032 1B68     		ldr	r3, [r3]	@ float
 897 0034 1946     		mov	r1, r3
 898 0036 1046     		mov	r0, r2
 899 0038 FFF7FEFF 		bl	__aeabi_fmul
 900 003c 0346     		mov	r3, r0
 901 003e 1946     		mov	r1, r3
 902 0040 2046     		mov	r0, r4
 903 0042 FFF7FEFF 		bl	__aeabi_fmul
 904 0046 0346     		mov	r3, r0
 905 0048 B968     		ldr	r1, [r7, #8]	@ float
 906 004a 1846     		mov	r0, r3
 907 004c FFF7FEFF 		bl	__aeabi_fadd
 908 0050 0346     		mov	r3, r0
 301:main.c        **** }
 909              		.loc 1 301 0
 910 0052 1846     		mov	r0, r3
 911 0054 1437     		adds	r7, r7, #20
 912              		.cfi_def_cfa_offset 12
 913 0056 BD46     		mov	sp, r7
 914              		.cfi_def_cfa_register 13
 915              		@ sp needed
 916 0058 90BD     		pop	{r4, r7, pc}
 917              	.L6:
 918 005a 00BF     		.align	2
 919              	.L5:
 920 005c 00000000 		.word	stringRepresentation
 921 0060 00000000 		.word	stringRepDivider
 922              		.cfi_endproc
 923              	.LFE65:
 924              		.size	mapDualSlider, .-mapDualSlider
 925              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 926              		.align	2
 927              		.global	burnInitialPedalZeroPositions
 928              		.thumb
 929              		.thumb_func
 930              		.type	burnInitialPedalZeroPositions, %function
 931              	burnInitialPedalZeroPositions:
 932              	.LFB66:
 302:main.c        **** 
 303:main.c        **** void burnInitialPedalZeroPositions()
 304:main.c        **** {
 933              		.loc 1 304 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 8
 936              		@ frame_needed = 1, uses_anonymous_args = 0
 937 0000 80B5     		push	{r7, lr}
 938              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 23


 939              		.cfi_offset 7, -8
 940              		.cfi_offset 14, -4
 941 0002 82B0     		sub	sp, sp, #8
 942              		.cfi_def_cfa_offset 16
 943 0004 00AF     		add	r7, sp, #0
 944              		.cfi_def_cfa_register 7
 945              	.LBB2:
 305:main.c        ****     for (int i = 0; i < 5; i++)
 946              		.loc 1 305 0
 947 0006 0023     		movs	r3, #0
 948 0008 7B60     		str	r3, [r7, #4]
 949 000a 6EE0     		b	.L8
 950              	.L9:
 306:main.c        ****     {
 307:main.c        ****         I2C_1_MasterSendStart(0x70, 0); 
 951              		.loc 1 307 0 discriminator 3
 952 000c 0021     		movs	r1, #0
 953 000e 7020     		movs	r0, #112
 954 0010 FFF7FEFF 		bl	I2C_1_MasterSendStart
 308:main.c        ****         I2C_1_MasterWriteByte(1<<i);
 955              		.loc 1 308 0 discriminator 3
 956 0014 0122     		movs	r2, #1
 957 0016 7B68     		ldr	r3, [r7, #4]
 958 0018 02FA03F3 		lsl	r3, r2, r3
 959 001c DBB2     		uxtb	r3, r3
 960 001e 1846     		mov	r0, r3
 961 0020 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 309:main.c        ****         I2C_1_MasterSendStop(); 
 962              		.loc 1 309 0 discriminator 3
 963 0024 FFF7FEFF 		bl	I2C_1_MasterSendStop
 310:main.c        **** 
 311:main.c        **** 
 312:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 964              		.loc 1 312 0 discriminator 3
 965 0028 0021     		movs	r1, #0
 966 002a 3620     		movs	r0, #54
 967 002c FFF7FEFF 		bl	I2C_1_MasterSendStart
 313:main.c        ****         I2C_1_MasterWriteByte(0x0C);
 968              		.loc 1 313 0 discriminator 3
 969 0030 0C20     		movs	r0, #12
 970 0032 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 314:main.c        ****         //I2C_1_MasterSendStop();
 315:main.c        ****         I2C_1_MasterSendRestart(0x36, 1); 
 971              		.loc 1 315 0 discriminator 3
 972 0036 0121     		movs	r1, #1
 973 0038 3620     		movs	r0, #54
 974 003a FFF7FEFF 		bl	I2C_1_MasterSendRestart
 316:main.c        ****         rawAngle = I2C_1_MasterReadByte(1) << 8;
 975              		.loc 1 316 0 discriminator 3
 976 003e 0120     		movs	r0, #1
 977 0040 FFF7FEFF 		bl	I2C_1_MasterReadByte
 978 0044 0346     		mov	r3, r0
 979 0046 9BB2     		uxth	r3, r3
 980 0048 1B02     		lsls	r3, r3, #8
 981 004a 9AB2     		uxth	r2, r3
 982 004c 654B     		ldr	r3, .L12
 983 004e 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 24


 317:main.c        ****         //I2C_1_MasterSendRestart(0x36, 1);
 318:main.c        ****         rawAngle +=  I2C_1_MasterReadByte(0);
 984              		.loc 1 318 0 discriminator 3
 985 0050 0020     		movs	r0, #0
 986 0052 FFF7FEFF 		bl	I2C_1_MasterReadByte
 987 0056 0346     		mov	r3, r0
 988 0058 9AB2     		uxth	r2, r3
 989 005a 624B     		ldr	r3, .L12
 990 005c 1B88     		ldrh	r3, [r3]
 991 005e 1344     		add	r3, r3, r2
 992 0060 9AB2     		uxth	r2, r3
 993 0062 604B     		ldr	r3, .L12
 994 0064 1A80     		strh	r2, [r3]	@ movhi
 319:main.c        ****          I2C_1_MasterSendStop(); 
 995              		.loc 1 319 0 discriminator 3
 996 0066 FFF7FEFF 		bl	I2C_1_MasterSendStop
 320:main.c        ****         
 321:main.c        ****         CyDelay(1);
 997              		.loc 1 321 0 discriminator 3
 998 006a 0120     		movs	r0, #1
 999 006c FFF7FEFF 		bl	CyDelay
 322:main.c        **** 
 323:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1000              		.loc 1 323 0 discriminator 3
 1001 0070 0021     		movs	r1, #0
 1002 0072 3620     		movs	r0, #54
 1003 0074 FFF7FEFF 		bl	I2C_1_MasterSendStart
 324:main.c        ****         I2C_1_MasterWriteByte(0x01);
 1004              		.loc 1 324 0 discriminator 3
 1005 0078 0120     		movs	r0, #1
 1006 007a FFF7FEFF 		bl	I2C_1_MasterWriteByte
 325:main.c        ****         I2C_1_MasterWriteByte(rawAngle >> 8);
 1007              		.loc 1 325 0 discriminator 3
 1008 007e 594B     		ldr	r3, .L12
 1009 0080 1B88     		ldrh	r3, [r3]
 1010 0082 1B0A     		lsrs	r3, r3, #8
 1011 0084 9BB2     		uxth	r3, r3
 1012 0086 DBB2     		uxtb	r3, r3
 1013 0088 1846     		mov	r0, r3
 1014 008a FFF7FEFF 		bl	I2C_1_MasterWriteByte
 326:main.c        ****         I2C_1_MasterWriteByte(rawAngle & 0xff);
 1015              		.loc 1 326 0 discriminator 3
 1016 008e 554B     		ldr	r3, .L12
 1017 0090 1B88     		ldrh	r3, [r3]
 1018 0092 DBB2     		uxtb	r3, r3
 1019 0094 1846     		mov	r0, r3
 1020 0096 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 327:main.c        ****         I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 1021              		.loc 1 327 0 discriminator 3
 1022 009a 524B     		ldr	r3, .L12
 1023 009c 1B88     		ldrh	r3, [r3]
 1024 009e 03F5FA73 		add	r3, r3, #500
 1025 00a2 1B12     		asrs	r3, r3, #8
 1026 00a4 DBB2     		uxtb	r3, r3
 1027 00a6 1846     		mov	r0, r3
 1028 00a8 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 328:main.c        ****         I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 25


 1029              		.loc 1 328 0 discriminator 3
 1030 00ac 4D4B     		ldr	r3, .L12
 1031 00ae 1B88     		ldrh	r3, [r3]
 1032 00b0 DBB2     		uxtb	r3, r3
 1033 00b2 0C3B     		subs	r3, r3, #12
 1034 00b4 DBB2     		uxtb	r3, r3
 1035 00b6 1846     		mov	r0, r3
 1036 00b8 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 329:main.c        ****         I2C_1_MasterSendStop(); 
 1037              		.loc 1 329 0 discriminator 3
 1038 00bc FFF7FEFF 		bl	I2C_1_MasterSendStop
 330:main.c        ****         
 331:main.c        ****         CyDelay(2);
 1039              		.loc 1 331 0 discriminator 3
 1040 00c0 0220     		movs	r0, #2
 1041 00c2 FFF7FEFF 		bl	CyDelay
 332:main.c        **** 
 333:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1042              		.loc 1 333 0 discriminator 3
 1043 00c6 0021     		movs	r1, #0
 1044 00c8 3620     		movs	r0, #54
 1045 00ca FFF7FEFF 		bl	I2C_1_MasterSendStart
 334:main.c        ****         I2C_1_MasterWriteByte(0xff);
 1046              		.loc 1 334 0 discriminator 3
 1047 00ce FF20     		movs	r0, #255
 1048 00d0 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 335:main.c        ****        I2C_1_MasterWriteByte(0x80);
 1049              		.loc 1 335 0 discriminator 3
 1050 00d4 8020     		movs	r0, #128
 1051 00d6 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 336:main.c        ****         I2C_1_MasterSendStop(); 
 1052              		.loc 1 336 0 discriminator 3
 1053 00da FFF7FEFF 		bl	I2C_1_MasterSendStop
 337:main.c        ****        CyDelay(2);
 1054              		.loc 1 337 0 discriminator 3
 1055 00de 0220     		movs	r0, #2
 1056 00e0 FFF7FEFF 		bl	CyDelay
 305:main.c        ****     {
 1057              		.loc 1 305 0 discriminator 3
 1058 00e4 7B68     		ldr	r3, [r7, #4]
 1059 00e6 0133     		adds	r3, r3, #1
 1060 00e8 7B60     		str	r3, [r7, #4]
 1061              	.L8:
 305:main.c        ****     {
 1062              		.loc 1 305 0 is_stmt 0 discriminator 1
 1063 00ea 7B68     		ldr	r3, [r7, #4]
 1064 00ec 042B     		cmp	r3, #4
 1065 00ee 8DDD     		ble	.L9
 1066              	.LBE2:
 1067              	.LBB3:
 338:main.c        ****     }
 339:main.c        ****     
 340:main.c        ****     //set main i2c mux
 341:main.c        ****     for (int i = 0; i < 4; i++)
 1068              		.loc 1 341 0 is_stmt 1
 1069 00f0 0023     		movs	r3, #0
 1070 00f2 3B60     		str	r3, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 26


 1071 00f4 6FE0     		b	.L10
 1072              	.L11:
 342:main.c        ****     {
 343:main.c        ****         I2C_1_MasterSendStart(0x71, 0); 
 1073              		.loc 1 343 0 discriminator 3
 1074 00f6 0021     		movs	r1, #0
 1075 00f8 7120     		movs	r0, #113
 1076 00fa FFF7FEFF 		bl	I2C_1_MasterSendStart
 344:main.c        ****         I2C_1_MasterWriteByte(1<<(i+2));
 1077              		.loc 1 344 0 discriminator 3
 1078 00fe 3B68     		ldr	r3, [r7]
 1079 0100 0233     		adds	r3, r3, #2
 1080 0102 0122     		movs	r2, #1
 1081 0104 02FA03F3 		lsl	r3, r2, r3
 1082 0108 DBB2     		uxtb	r3, r3
 1083 010a 1846     		mov	r0, r3
 1084 010c FFF7FEFF 		bl	I2C_1_MasterWriteByte
 345:main.c        ****         I2C_1_MasterSendStop(); 
 1085              		.loc 1 345 0 discriminator 3
 1086 0110 FFF7FEFF 		bl	I2C_1_MasterSendStop
 346:main.c        **** 
 347:main.c        **** 
 348:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1087              		.loc 1 348 0 discriminator 3
 1088 0114 0021     		movs	r1, #0
 1089 0116 3620     		movs	r0, #54
 1090 0118 FFF7FEFF 		bl	I2C_1_MasterSendStart
 349:main.c        ****         I2C_1_MasterWriteByte(0x0C);
 1091              		.loc 1 349 0 discriminator 3
 1092 011c 0C20     		movs	r0, #12
 1093 011e FFF7FEFF 		bl	I2C_1_MasterWriteByte
 350:main.c        ****         //I2C_1_MasterSendStop();
 351:main.c        ****         I2C_1_MasterSendRestart(0x36, 1); 
 1094              		.loc 1 351 0 discriminator 3
 1095 0122 0121     		movs	r1, #1
 1096 0124 3620     		movs	r0, #54
 1097 0126 FFF7FEFF 		bl	I2C_1_MasterSendRestart
 352:main.c        ****         rawAngle = I2C_1_MasterReadByte(1) << 8;
 1098              		.loc 1 352 0 discriminator 3
 1099 012a 0120     		movs	r0, #1
 1100 012c FFF7FEFF 		bl	I2C_1_MasterReadByte
 1101 0130 0346     		mov	r3, r0
 1102 0132 9BB2     		uxth	r3, r3
 1103 0134 1B02     		lsls	r3, r3, #8
 1104 0136 9AB2     		uxth	r2, r3
 1105 0138 2A4B     		ldr	r3, .L12
 1106 013a 1A80     		strh	r2, [r3]	@ movhi
 353:main.c        ****         //I2C_1_MasterSendRestart(0x36, 1);
 354:main.c        ****         rawAngle +=  I2C_1_MasterReadByte(0);
 1107              		.loc 1 354 0 discriminator 3
 1108 013c 0020     		movs	r0, #0
 1109 013e FFF7FEFF 		bl	I2C_1_MasterReadByte
 1110 0142 0346     		mov	r3, r0
 1111 0144 9AB2     		uxth	r2, r3
 1112 0146 274B     		ldr	r3, .L12
 1113 0148 1B88     		ldrh	r3, [r3]
 1114 014a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 27


 1115 014c 9AB2     		uxth	r2, r3
 1116 014e 254B     		ldr	r3, .L12
 1117 0150 1A80     		strh	r2, [r3]	@ movhi
 355:main.c        ****          I2C_1_MasterSendStop(); 
 1118              		.loc 1 355 0 discriminator 3
 1119 0152 FFF7FEFF 		bl	I2C_1_MasterSendStop
 356:main.c        ****         
 357:main.c        ****         CyDelay(1);
 1120              		.loc 1 357 0 discriminator 3
 1121 0156 0120     		movs	r0, #1
 1122 0158 FFF7FEFF 		bl	CyDelay
 358:main.c        **** 
 359:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1123              		.loc 1 359 0 discriminator 3
 1124 015c 0021     		movs	r1, #0
 1125 015e 3620     		movs	r0, #54
 1126 0160 FFF7FEFF 		bl	I2C_1_MasterSendStart
 360:main.c        ****         I2C_1_MasterWriteByte(0x01);
 1127              		.loc 1 360 0 discriminator 3
 1128 0164 0120     		movs	r0, #1
 1129 0166 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 361:main.c        ****         I2C_1_MasterWriteByte(rawAngle >> 8);
 1130              		.loc 1 361 0 discriminator 3
 1131 016a 1E4B     		ldr	r3, .L12
 1132 016c 1B88     		ldrh	r3, [r3]
 1133 016e 1B0A     		lsrs	r3, r3, #8
 1134 0170 9BB2     		uxth	r3, r3
 1135 0172 DBB2     		uxtb	r3, r3
 1136 0174 1846     		mov	r0, r3
 1137 0176 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 362:main.c        ****         I2C_1_MasterWriteByte(rawAngle & 0xff);
 1138              		.loc 1 362 0 discriminator 3
 1139 017a 1A4B     		ldr	r3, .L12
 1140 017c 1B88     		ldrh	r3, [r3]
 1141 017e DBB2     		uxtb	r3, r3
 1142 0180 1846     		mov	r0, r3
 1143 0182 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 363:main.c        ****         I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 1144              		.loc 1 363 0 discriminator 3
 1145 0186 174B     		ldr	r3, .L12
 1146 0188 1B88     		ldrh	r3, [r3]
 1147 018a 03F52F73 		add	r3, r3, #700
 1148 018e 1B12     		asrs	r3, r3, #8
 1149 0190 DBB2     		uxtb	r3, r3
 1150 0192 1846     		mov	r0, r3
 1151 0194 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 364:main.c        ****         I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 1152              		.loc 1 364 0 discriminator 3
 1153 0198 124B     		ldr	r3, .L12
 1154 019a 1B88     		ldrh	r3, [r3]
 1155 019c DBB2     		uxtb	r3, r3
 1156 019e 443B     		subs	r3, r3, #68
 1157 01a0 DBB2     		uxtb	r3, r3
 1158 01a2 1846     		mov	r0, r3
 1159 01a4 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 365:main.c        ****         I2C_1_MasterSendStop(); 
 1160              		.loc 1 365 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 28


 1161 01a8 FFF7FEFF 		bl	I2C_1_MasterSendStop
 366:main.c        ****         
 367:main.c        ****         CyDelay(2);
 1162              		.loc 1 367 0 discriminator 3
 1163 01ac 0220     		movs	r0, #2
 1164 01ae FFF7FEFF 		bl	CyDelay
 368:main.c        **** 
 369:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1165              		.loc 1 369 0 discriminator 3
 1166 01b2 0021     		movs	r1, #0
 1167 01b4 3620     		movs	r0, #54
 1168 01b6 FFF7FEFF 		bl	I2C_1_MasterSendStart
 370:main.c        ****         I2C_1_MasterWriteByte(0xff);
 1169              		.loc 1 370 0 discriminator 3
 1170 01ba FF20     		movs	r0, #255
 1171 01bc FFF7FEFF 		bl	I2C_1_MasterWriteByte
 371:main.c        ****         I2C_1_MasterWriteByte(0x80);
 1172              		.loc 1 371 0 discriminator 3
 1173 01c0 8020     		movs	r0, #128
 1174 01c2 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 372:main.c        ****         I2C_1_MasterSendStop(); 
 1175              		.loc 1 372 0 discriminator 3
 1176 01c6 FFF7FEFF 		bl	I2C_1_MasterSendStop
 373:main.c        ****        CyDelay(2);
 1177              		.loc 1 373 0 discriminator 3
 1178 01ca 0220     		movs	r0, #2
 1179 01cc FFF7FEFF 		bl	CyDelay
 341:main.c        ****     {
 1180              		.loc 1 341 0 discriminator 3
 1181 01d0 3B68     		ldr	r3, [r7]
 1182 01d2 0133     		adds	r3, r3, #1
 1183 01d4 3B60     		str	r3, [r7]
 1184              	.L10:
 341:main.c        ****     {
 1185              		.loc 1 341 0 is_stmt 0 discriminator 1
 1186 01d6 3B68     		ldr	r3, [r7]
 1187 01d8 032B     		cmp	r3, #3
 1188 01da 8CDD     		ble	.L11
 1189              	.LBE3:
 374:main.c        ****     }
 375:main.c        **** }
 1190              		.loc 1 375 0 is_stmt 1
 1191 01dc 00BF     		nop
 1192 01de 0837     		adds	r7, r7, #8
 1193              		.cfi_def_cfa_offset 8
 1194 01e0 BD46     		mov	sp, r7
 1195              		.cfi_def_cfa_register 13
 1196              		@ sp needed
 1197 01e2 80BD     		pop	{r7, pc}
 1198              	.L13:
 1199              		.align	2
 1200              	.L12:
 1201 01e4 00000000 		.word	rawAngle
 1202              		.cfi_endproc
 1203              	.LFE66:
 1204              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1205              		.global	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 29


 1206              		.global	__aeabi_f2uiz
 1207              		.section	.text.calculatePedalRatios,"ax",%progbits
 1208              		.align	2
 1209              		.global	calculatePedalRatios
 1210              		.thumb
 1211              		.thumb_func
 1212              		.type	calculatePedalRatios, %function
 1213              	calculatePedalRatios:
 1214              	.LFB67:
 376:main.c        **** 
 377:main.c        **** void calculatePedalRatios(void)
 378:main.c        **** {
 1215              		.loc 1 378 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 16
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219 0000 90B5     		push	{r4, r7, lr}
 1220              		.cfi_def_cfa_offset 12
 1221              		.cfi_offset 4, -12
 1222              		.cfi_offset 7, -8
 1223              		.cfi_offset 14, -4
 1224 0002 85B0     		sub	sp, sp, #20
 1225              		.cfi_def_cfa_offset 32
 1226 0004 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
 1228              	.LBB4:
 379:main.c        ****     //add deadzones on edges of pedal sensing
 380:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1229              		.loc 1 380 0
 1230 0006 0023     		movs	r3, #0
 1231 0008 FB60     		str	r3, [r7, #12]
 1232 000a 6EE0     		b	.L15
 1233              	.L16:
 1234              	.LBB5:
 381:main.c        ****     {
 382:main.c        **** 
 383:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i]; //temporary diff to calculat
 1235              		.loc 1 383 0 discriminator 3
 1236 000c 3A4A     		ldr	r2, .L17
 1237 000e FB68     		ldr	r3, [r7, #12]
 1238 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1239 0014 1846     		mov	r0, r3
 1240 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1241 001a 0446     		mov	r4, r0
 1242 001c 374A     		ldr	r2, .L17+4
 1243 001e FB68     		ldr	r3, [r7, #12]
 1244 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1245 0024 1846     		mov	r0, r3
 1246 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1247 002a 0346     		mov	r3, r0
 1248 002c 1946     		mov	r1, r3
 1249 002e 2046     		mov	r0, r4
 1250 0030 FFF7FEFF 		bl	__aeabi_fsub
 1251 0034 0346     		mov	r3, r0
 1252 0036 BB60     		str	r3, [r7, #8]	@ float
 384:main.c        ****         float deadZoneFloat = ((float)deadZone) * 0.002f * pedalDiff;
 1253              		.loc 1 384 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 30


 1254 0038 314B     		ldr	r3, .L17+8
 1255 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 003c 1846     		mov	r0, r3
 1257 003e FFF7FEFF 		bl	__aeabi_ui2f
 1258 0042 0346     		mov	r3, r0
 1259 0044 2F49     		ldr	r1, .L17+12
 1260 0046 1846     		mov	r0, r3
 1261 0048 FFF7FEFF 		bl	__aeabi_fmul
 1262 004c 0346     		mov	r3, r0
 1263 004e B968     		ldr	r1, [r7, #8]	@ float
 1264 0050 1846     		mov	r0, r3
 1265 0052 FFF7FEFF 		bl	__aeabi_fmul
 1266 0056 0346     		mov	r3, r0
 1267 0058 7B60     		str	r3, [r7, #4]	@ float
 385:main.c        ****         pedals_lowWithDeadZone[i] = (float)pedals_low[i] + deadZoneFloat;
 1268              		.loc 1 385 0 discriminator 3
 1269 005a 284A     		ldr	r2, .L17+4
 1270 005c FB68     		ldr	r3, [r7, #12]
 1271 005e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1272 0062 1846     		mov	r0, r3
 1273 0064 FFF7FEFF 		bl	__aeabi_ui2f
 1274 0068 0346     		mov	r3, r0
 1275 006a 7968     		ldr	r1, [r7, #4]	@ float
 1276 006c 1846     		mov	r0, r3
 1277 006e FFF7FEFF 		bl	__aeabi_fadd
 1278 0072 0346     		mov	r3, r0
 1279 0074 1846     		mov	r0, r3
 1280 0076 FFF7FEFF 		bl	__aeabi_f2uiz
 1281 007a 0346     		mov	r3, r0
 1282 007c 99B2     		uxth	r1, r3
 1283 007e 224A     		ldr	r2, .L17+16
 1284 0080 FB68     		ldr	r3, [r7, #12]
 1285 0082 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 386:main.c        ****         pedals_highWithDeadZone[i] = (float)pedals_high[i] - deadZoneFloat;
 1286              		.loc 1 386 0 discriminator 3
 1287 0086 1C4A     		ldr	r2, .L17
 1288 0088 FB68     		ldr	r3, [r7, #12]
 1289 008a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1290 008e 1846     		mov	r0, r3
 1291 0090 FFF7FEFF 		bl	__aeabi_ui2f
 1292 0094 0346     		mov	r3, r0
 1293 0096 7968     		ldr	r1, [r7, #4]	@ float
 1294 0098 1846     		mov	r0, r3
 1295 009a FFF7FEFF 		bl	__aeabi_fsub
 1296 009e 0346     		mov	r3, r0
 1297 00a0 1846     		mov	r0, r3
 1298 00a2 FFF7FEFF 		bl	__aeabi_f2uiz
 1299 00a6 0346     		mov	r3, r0
 1300 00a8 99B2     		uxth	r1, r3
 1301 00aa 184A     		ldr	r2, .L17+20
 1302 00ac FB68     		ldr	r3, [r7, #12]
 1303 00ae 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 387:main.c        ****         pedalDiff = pedals_highWithDeadZone[i] - pedals_lowWithDeadZone[i]; //final diff to calcula
 1304              		.loc 1 387 0 discriminator 3
 1305 00b2 164A     		ldr	r2, .L17+20
 1306 00b4 FB68     		ldr	r3, [r7, #12]
 1307 00b6 32F81330 		ldrh	r3, [r2, r3, lsl #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 31


 1308 00ba 1946     		mov	r1, r3
 1309 00bc 124A     		ldr	r2, .L17+16
 1310 00be FB68     		ldr	r3, [r7, #12]
 1311 00c0 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1312 00c4 CB1A     		subs	r3, r1, r3
 1313 00c6 1846     		mov	r0, r3
 1314 00c8 FFF7FEFF 		bl	__aeabi_i2f
 1315 00cc 0346     		mov	r3, r0
 1316 00ce BB60     		str	r3, [r7, #8]	@ float
 388:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1317              		.loc 1 388 0 discriminator 3
 1318 00d0 B968     		ldr	r1, [r7, #8]	@ float
 1319 00d2 0F48     		ldr	r0, .L17+24
 1320 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1321 00d8 0346     		mov	r3, r0
 1322 00da 1946     		mov	r1, r3
 1323 00dc 0D4A     		ldr	r2, .L17+28
 1324 00de FB68     		ldr	r3, [r7, #12]
 1325 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1326              	.LBE5:
 380:main.c        ****     {
 1327              		.loc 1 380 0 discriminator 3
 1328 00e4 FB68     		ldr	r3, [r7, #12]
 1329 00e6 0133     		adds	r3, r3, #1
 1330 00e8 FB60     		str	r3, [r7, #12]
 1331              	.L15:
 380:main.c        ****     {
 1332              		.loc 1 380 0 is_stmt 0 discriminator 1
 1333 00ea FB68     		ldr	r3, [r7, #12]
 1334 00ec 092B     		cmp	r3, #9
 1335 00ee 8DDD     		ble	.L16
 1336              	.LBE4:
 389:main.c        ****     }
 390:main.c        **** }
 1337              		.loc 1 390 0 is_stmt 1
 1338 00f0 00BF     		nop
 1339 00f2 1437     		adds	r7, r7, #20
 1340              		.cfi_def_cfa_offset 12
 1341 00f4 BD46     		mov	sp, r7
 1342              		.cfi_def_cfa_register 13
 1343              		@ sp needed
 1344 00f6 90BD     		pop	{r4, r7, pc}
 1345              	.L18:
 1346              		.align	2
 1347              	.L17:
 1348 00f8 00000000 		.word	pedals_high
 1349 00fc 00000000 		.word	pedals_low
 1350 0100 00000000 		.word	deadZone
 1351 0104 6F12033B 		.word	990057071
 1352 0108 00000000 		.word	pedals_lowWithDeadZone
 1353 010c 00000000 		.word	pedals_highWithDeadZone
 1354 0110 00F07F45 		.word	1166012416
 1355 0114 00000000 		.word	pedalRatios
 1356              		.cfi_endproc
 1357              	.LFE67:
 1358              		.size	calculatePedalRatios, .-calculatePedalRatios
 1359              		.global	__aeabi_fcmpeq
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 32


 1360              		.section	.text.calculateStringRepDivider,"ax",%progbits
 1361              		.align	2
 1362              		.global	calculateStringRepDivider
 1363              		.thumb
 1364              		.thumb_func
 1365              		.type	calculateStringRepDivider, %function
 1366              	calculateStringRepDivider:
 1367              	.LFB68:
 391:main.c        **** void calculateStringRepDivider(void)
 392:main.c        **** {
 1368              		.loc 1 392 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 0000 80B5     		push	{r7, lr}
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 0002 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 393:main.c        ****     stringRepDivider = (stringRepresentation[1] - stringRepresentation[0]);
 1378              		.loc 1 393 0
 1379 0004 1C4B     		ldr	r3, .L25
 1380 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1381 0008 1A46     		mov	r2, r3
 1382 000a 1B4B     		ldr	r3, .L25
 1383 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1384 000e D31A     		subs	r3, r2, r3
 1385 0010 1846     		mov	r0, r3
 1386 0012 FFF7FEFF 		bl	__aeabi_i2f
 1387 0016 0246     		mov	r2, r0
 1388 0018 184B     		ldr	r3, .L25+4
 1389 001a 1A60     		str	r2, [r3]	@ float
 394:main.c        ****     if (stringRepDivider == 0.0f)
 1390              		.loc 1 394 0
 1391 001c 174B     		ldr	r3, .L25+4
 1392 001e 1B68     		ldr	r3, [r3]	@ float
 1393 0020 4FF00001 		mov	r1, #0
 1394 0024 1846     		mov	r0, r3
 1395 0026 FFF7FEFF 		bl	__aeabi_fcmpeq
 1396 002a 0346     		mov	r3, r0
 1397 002c 002B     		cmp	r3, #0
 1398 002e 11D0     		beq	.L20
 395:main.c        ****     {
 396:main.c        ****         stringRepresentation[0] = 2;
 1399              		.loc 1 396 0
 1400 0030 114B     		ldr	r3, .L25
 1401 0032 0222     		movs	r2, #2
 1402 0034 1A70     		strb	r2, [r3]
 397:main.c        ****         stringRepresentation[1] = 7;
 1403              		.loc 1 397 0
 1404 0036 104B     		ldr	r3, .L25
 1405 0038 0722     		movs	r2, #7
 1406 003a 5A70     		strb	r2, [r3, #1]
 398:main.c        ****         stringRepDivider = (stringRepresentation[1] - stringRepresentation[0]);
 1407              		.loc 1 398 0
 1408 003c 0E4B     		ldr	r3, .L25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 33


 1409 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1410 0040 1A46     		mov	r2, r3
 1411 0042 0D4B     		ldr	r3, .L25
 1412 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1413 0046 D31A     		subs	r3, r2, r3
 1414 0048 1846     		mov	r0, r3
 1415 004a FFF7FEFF 		bl	__aeabi_i2f
 1416 004e 0246     		mov	r2, r0
 1417 0050 0A4B     		ldr	r3, .L25+4
 1418 0052 1A60     		str	r2, [r3]	@ float
 1419              	.L20:
 399:main.c        ****     }
 400:main.c        ****     if (!sliderBugOn)
 1420              		.loc 1 400 0
 1421 0054 0A4B     		ldr	r3, .L25+8
 1422 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1423 0058 002B     		cmp	r3, #0
 1424 005a 0AD1     		bne	.L24
 401:main.c        ****     {
 402:main.c        ****         stringRepDivider = (1.0f / stringRepDivider);
 1425              		.loc 1 402 0
 1426 005c 074B     		ldr	r3, .L25+4
 1427 005e 1B68     		ldr	r3, [r3]	@ float
 1428 0060 1946     		mov	r1, r3
 1429 0062 4FF07E50 		mov	r0, #1065353216
 1430 0066 FFF7FEFF 		bl	__aeabi_fdiv
 1431 006a 0346     		mov	r3, r0
 1432 006c 1A46     		mov	r2, r3
 1433 006e 034B     		ldr	r3, .L25+4
 1434 0070 1A60     		str	r2, [r3]	@ float
 1435              	.L24:
 403:main.c        ****     }
 404:main.c        **** }
 1436              		.loc 1 404 0
 1437 0072 00BF     		nop
 1438 0074 80BD     		pop	{r7, pc}
 1439              	.L26:
 1440 0076 00BF     		.align	2
 1441              	.L25:
 1442 0078 00000000 		.word	stringRepresentation
 1443 007c 00000000 		.word	stringRepDivider
 1444 0080 00000000 		.word	sliderBugOn
 1445              		.cfi_endproc
 1446              	.LFE68:
 1447              		.size	calculateStringRepDivider, .-calculateStringRepDivider
 1448              		.section	.text.unsafeFtom,"ax",%progbits
 1449              		.align	2
 1450              		.global	unsafeFtom
 1451              		.thumb
 1452              		.thumb_func
 1453              		.type	unsafeFtom, %function
 1454              	unsafeFtom:
 1455              	.LFB69:
 405:main.c        **** 
 406:main.c        **** float unsafeFtom(float f)
 407:main.c        **** {
 1456              		.loc 1 407 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 34


 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 8
 1459              		@ frame_needed = 1, uses_anonymous_args = 0
 1460 0000 80B5     		push	{r7, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 82B0     		sub	sp, sp, #8
 1465              		.cfi_def_cfa_offset 16
 1466 0004 00AF     		add	r7, sp, #0
 1467              		.cfi_def_cfa_register 7
 1468 0006 7860     		str	r0, [r7, #4]	@ float
 408:main.c        ****     return (17.3123405046f * logf(.12231220585f * f));
 1469              		.loc 1 408 0
 1470 0008 0849     		ldr	r1, .L29
 1471 000a 7868     		ldr	r0, [r7, #4]	@ float
 1472 000c FFF7FEFF 		bl	__aeabi_fmul
 1473 0010 0346     		mov	r3, r0
 1474 0012 1846     		mov	r0, r3
 1475 0014 FFF7FEFF 		bl	logf
 1476 0018 0346     		mov	r3, r0
 1477 001a 0549     		ldr	r1, .L29+4
 1478 001c 1846     		mov	r0, r3
 1479 001e FFF7FEFF 		bl	__aeabi_fmul
 1480 0022 0346     		mov	r3, r0
 409:main.c        **** }
 1481              		.loc 1 409 0
 1482 0024 1846     		mov	r0, r3
 1483 0026 0837     		adds	r7, r7, #8
 1484              		.cfi_def_cfa_offset 8
 1485 0028 BD46     		mov	sp, r7
 1486              		.cfi_def_cfa_register 13
 1487              		@ sp needed
 1488 002a 80BD     		pop	{r7, pc}
 1489              	.L30:
 1490              		.align	2
 1491              	.L29:
 1492 002c D27EFA3D 		.word	1039826642
 1493 0030 AC7F8A41 		.word	1099595692
 1494              		.cfi_endproc
 1495              	.LFE69:
 1496              		.size	unsafeFtom, .-unsafeFtom
 1497              		.section	.text.restartSystemCheck,"ax",%progbits
 1498              		.align	2
 1499              		.global	restartSystemCheck
 1500              		.thumb
 1501              		.thumb_func
 1502              		.type	restartSystemCheck, %function
 1503              	restartSystemCheck:
 1504              	.LFB70:
 410:main.c        **** 
 411:main.c        **** 
 412:main.c        **** //a check for when a usb cable is plugged in and it needs to restart only once
 413:main.c        **** void restartSystemCheck()
 414:main.c        **** {
 1505              		.loc 1 414 0
 1506              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 35


 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 1, uses_anonymous_args = 0
 1509 0000 80B5     		push	{r7, lr}
 1510              		.cfi_def_cfa_offset 8
 1511              		.cfi_offset 7, -8
 1512              		.cfi_offset 14, -4
 1513 0002 00AF     		add	r7, sp, #0
 1514              		.cfi_def_cfa_register 7
 415:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 1515              		.loc 1 415 0
 1516 0004 184B     		ldr	r3, .L35
 1517 0006 0222     		movs	r2, #2
 1518 0008 1849     		ldr	r1, .L35+4
 1519 000a 0020     		movs	r0, #0
 1520 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 1521 0010 0346     		mov	r3, r0
 1522 0012 1A46     		mov	r2, r3
 1523 0014 164B     		ldr	r3, .L35+8
 1524 0016 1A70     		strb	r2, [r3]
 416:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 417:main.c        ****     if (USB_VBusPresent() == 1)
 1525              		.loc 1 417 0
 1526 0018 FFF7FEFF 		bl	USB_VBusPresent
 1527 001c 0346     		mov	r3, r0
 1528 001e 012B     		cmp	r3, #1
 1529 0020 20D1     		bne	.L34
 418:main.c        ****     {
 419:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 1530              		.loc 1 419 0
 1531 0022 124B     		ldr	r3, .L35+4
 1532 0024 1B78     		ldrb	r3, [r3]
 1533 0026 DBB2     		uxtb	r3, r3
 1534 0028 012B     		cmp	r3, #1
 1535 002a 0CD1     		bne	.L33
 420:main.c        ****         {
 421:main.c        ****             //a flag says we just restarted
 422:main.c        ****             //write a zero so it knows next time that it's OK to restart
 423:main.c        ****             array[0] = 0;
 1536              		.loc 1 423 0
 1537 002c 114B     		ldr	r3, .L35+12
 1538 002e 0022     		movs	r2, #0
 1539 0030 1A70     		strb	r2, [r3]
 424:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 1540              		.loc 1 424 0
 1541 0032 0D4B     		ldr	r3, .L35
 1542 0034 0222     		movs	r2, #2
 1543 0036 0F49     		ldr	r1, .L35+12
 1544 0038 0020     		movs	r0, #0
 1545 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 425:main.c        ****             USB_check_flag = 1;
 1546              		.loc 1 425 0
 1547 003e 0E4B     		ldr	r3, .L35+16
 1548 0040 0122     		movs	r2, #1
 1549 0042 1A70     		strb	r2, [r3]
 426:main.c        ****         }
 427:main.c        ****         else
 428:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 36


 429:main.c        ****            //otherwise, we need to restart
 430:main.c        ****            array[0] = 1;
 431:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 432:main.c        ****             USB_Stop();
 433:main.c        ****             I2C_1_Stop();
 434:main.c        ****             CySoftwareReset();
 435:main.c        ****         }
 436:main.c        ****     }
 437:main.c        **** }
 1550              		.loc 1 437 0
 1551 0044 0EE0     		b	.L34
 1552              	.L33:
 430:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 1553              		.loc 1 430 0
 1554 0046 0B4B     		ldr	r3, .L35+12
 1555 0048 0122     		movs	r2, #1
 1556 004a 1A70     		strb	r2, [r3]
 431:main.c        ****             USB_Stop();
 1557              		.loc 1 431 0
 1558 004c 064B     		ldr	r3, .L35
 1559 004e 0222     		movs	r2, #2
 1560 0050 0849     		ldr	r1, .L35+12
 1561 0052 0020     		movs	r0, #0
 1562 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 432:main.c        ****             I2C_1_Stop();
 1563              		.loc 1 432 0
 1564 0058 FFF7FEFF 		bl	USB_Stop
 433:main.c        ****             CySoftwareReset();
 1565              		.loc 1 433 0
 1566 005c FFF7FEFF 		bl	I2C_1_Stop
 434:main.c        ****         }
 1567              		.loc 1 434 0
 1568 0060 FFF7FEFF 		bl	CySoftwareReset
 1569              	.L34:
 1570              		.loc 1 437 0
 1571 0064 00BF     		nop
 1572 0066 80BD     		pop	{r7, pc}
 1573              	.L36:
 1574              		.align	2
 1575              	.L35:
 1576 0068 00000000 		.word	Em_EEPROM_context
 1577 006c 6C000000 		.word	eepromArray
 1578 0070 00000000 		.word	eepromReturnValue
 1579 0074 00000000 		.word	array
 1580 0078 00000000 		.word	USB_check_flag
 1581              		.cfi_endproc
 1582              	.LFE70:
 1583              		.size	restartSystemCheck, .-restartSystemCheck
 1584              		.section	.text.Vbus_function,"ax",%progbits
 1585              		.align	2
 1586              		.global	Vbus_function
 1587              		.thumb
 1588              		.thumb_func
 1589              		.type	Vbus_function, %function
 1590              	Vbus_function:
 1591              	.LFB71:
 438:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 37


 439:main.c        **** //ISRs
 440:main.c        **** 
 441:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 442:main.c        **** CY_ISR(Vbus_function)
 443:main.c        **** {
 1592              		.loc 1 443 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 0
 1595              		@ frame_needed = 1, uses_anonymous_args = 0
 1596 0000 80B5     		push	{r7, lr}
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 7, -8
 1599              		.cfi_offset 14, -4
 1600 0002 00AF     		add	r7, sp, #0
 1601              		.cfi_def_cfa_register 7
 444:main.c        ****     //plug or unplug event
 445:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 446:main.c        ****     //otherwise, restart
 447:main.c        ****     my_Vbus_ISR_ClearPending();
 1602              		.loc 1 447 0
 1603 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 448:main.c        ****     vBusPin_ClearInterrupt();
 1604              		.loc 1 448 0
 1605 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 449:main.c        ****     restartSystemCheck();
 1606              		.loc 1 449 0
 1607 000c FFF7FEFF 		bl	restartSystemCheck
 450:main.c        **** 
 451:main.c        **** }
 1608              		.loc 1 451 0
 1609 0010 00BF     		nop
 1610 0012 80BD     		pop	{r7, pc}
 1611              		.cfi_endproc
 1612              	.LFE71:
 1613              		.size	Vbus_function, .-Vbus_function
 1614              		.section	.text.spis_2_ss,"ax",%progbits
 1615              		.align	2
 1616              		.global	spis_2_ss
 1617              		.thumb
 1618              		.thumb_func
 1619              		.type	spis_2_ss, %function
 1620              	spis_2_ss:
 1621              	.LFB72:
 452:main.c        **** 
 453:main.c        **** //This one happens when the Bar slider buffer gets filled by SPI
 454:main.c        **** CY_ISR(spis_2_ss)
 455:main.c        **** {
 1622              		.loc 1 455 0
 1623              		.cfi_startproc
 1624              		@ args = 0, pretend = 0, frame = 0
 1625              		@ frame_needed = 1, uses_anonymous_args = 0
 1626 0000 80B5     		push	{r7, lr}
 1627              		.cfi_def_cfa_offset 8
 1628              		.cfi_offset 7, -8
 1629              		.cfi_offset 14, -4
 1630 0002 00AF     		add	r7, sp, #0
 1631              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 38


 456:main.c        **** 
 457:main.c        ****     currentBarBuffer = !currentBarBuffer;
 1632              		.loc 1 457 0
 1633 0004 214B     		ldr	r3, .L39
 1634 0006 1B78     		ldrb	r3, [r3]
 1635 0008 DBB2     		uxtb	r3, r3
 1636 000a 002B     		cmp	r3, #0
 1637 000c 0CBF     		ite	eq
 1638 000e 0123     		moveq	r3, #1
 1639 0010 0023     		movne	r3, #0
 1640 0012 DBB2     		uxtb	r3, r3
 1641 0014 1A46     		mov	r2, r3
 1642 0016 1D4B     		ldr	r3, .L39
 1643 0018 1A70     		strb	r2, [r3]
 458:main.c        ****     SPIS_2_ClearRxBuffer();
 1644              		.loc 1 458 0
 1645 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 459:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 1646              		.loc 1 459 0
 1647 001e 1C4B     		ldr	r3, .L39+4
 1648 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1649 0022 1846     		mov	r0, r3
 1650 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 460:main.c        **** 
 461:main.c        ****     //set up the next DMA transaction
 462:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 1651              		.loc 1 462 0
 1652 0028 184B     		ldr	r3, .L39
 1653 002a 1B78     		ldrb	r3, [r3]
 1654 002c DBB2     		uxtb	r3, r3
 1655 002e 1A46     		mov	r2, r3
 1656 0030 184B     		ldr	r3, .L39+8
 1657 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1658 0034 0223     		movs	r3, #2
 1659 0036 FE22     		movs	r2, #254
 1660 0038 0821     		movs	r1, #8
 1661 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 463:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 1662              		.loc 1 463 0
 1663 003e 134B     		ldr	r3, .L39
 1664 0040 1B78     		ldrb	r3, [r3]
 1665 0042 DBB2     		uxtb	r3, r3
 1666 0044 1A46     		mov	r2, r3
 1667 0046 134B     		ldr	r3, .L39+8
 1668 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1669 004a 104B     		ldr	r3, .L39
 1670 004c 1B78     		ldrb	r3, [r3]
 1671 004e DBB2     		uxtb	r3, r3
 1672 0050 DB00     		lsls	r3, r3, #3
 1673 0052 114A     		ldr	r2, .L39+12
 1674 0054 1344     		add	r3, r3, r2
 1675 0056 9BB2     		uxth	r3, r3
 1676 0058 1A46     		mov	r2, r3
 1677 005a 46F25551 		movw	r1, #25941
 1678 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 464:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 1679              		.loc 1 464 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 39


 1680 0062 0B4B     		ldr	r3, .L39+4
 1681 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1682 0066 094B     		ldr	r3, .L39
 1683 0068 1B78     		ldrb	r3, [r3]
 1684 006a DBB2     		uxtb	r3, r3
 1685 006c 1946     		mov	r1, r3
 1686 006e 094B     		ldr	r3, .L39+8
 1687 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1688 0072 1946     		mov	r1, r3
 1689 0074 1046     		mov	r0, r2
 1690 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 465:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 1691              		.loc 1 465 0
 1692 007a 054B     		ldr	r3, .L39+4
 1693 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1694 007e 0121     		movs	r1, #1
 1695 0080 1846     		mov	r0, r3
 1696 0082 FFF7FEFF 		bl	CyDmaChEnable
 466:main.c        **** }
 1697              		.loc 1 466 0
 1698 0086 00BF     		nop
 1699 0088 80BD     		pop	{r7, pc}
 1700              	.L40:
 1701 008a 00BF     		.align	2
 1702              	.L39:
 1703 008c 00000000 		.word	currentBarBuffer
 1704 0090 00000000 		.word	rx2Channel
 1705 0094 00000000 		.word	rx2TD
 1706 0098 00000000 		.word	rxBufferBar
 1707              		.cfi_endproc
 1708              	.LFE72:
 1709              		.size	spis_2_ss, .-spis_2_ss
 1710              		.section	.text.spis_1_ss,"ax",%progbits
 1711              		.align	2
 1712              		.global	spis_1_ss
 1713              		.thumb
 1714              		.thumb_func
 1715              		.type	spis_1_ss, %function
 1716              	spis_1_ss:
 1717              	.LFB73:
 467:main.c        **** 
 468:main.c        **** CY_ISR(spis_1_ss)
 469:main.c        **** {
 1718              		.loc 1 469 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 8
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722 0000 80B5     		push	{r7, lr}
 1723              		.cfi_def_cfa_offset 8
 1724              		.cfi_offset 7, -8
 1725              		.cfi_offset 14, -4
 1726 0002 82B0     		sub	sp, sp, #8
 1727              		.cfi_def_cfa_offset 16
 1728 0004 00AF     		add	r7, sp, #0
 1729              		.cfi_def_cfa_register 7
 470:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 1730              		.loc 1 470 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 40


 1731 0006 4F4B     		ldr	r3, .L45
 1732 0008 1B78     		ldrb	r3, [r3]
 1733 000a DBB2     		uxtb	r3, r3
 1734 000c 002B     		cmp	r3, #0
 1735 000e 0CBF     		ite	eq
 1736 0010 0123     		moveq	r3, #1
 1737 0012 0023     		movne	r3, #0
 1738 0014 DBB2     		uxtb	r3, r3
 1739 0016 1A46     		mov	r2, r3
 1740 0018 4A4B     		ldr	r3, .L45
 1741 001a 1A70     		strb	r2, [r3]
 471:main.c        **** 
 472:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][31] =
 1742              		.loc 1 472 0
 1743 001c 494B     		ldr	r3, .L45
 1744 001e 1B78     		ldrb	r3, [r3]
 1745 0020 DBB2     		uxtb	r3, r3
 1746 0022 002B     		cmp	r3, #0
 1747 0024 0CBF     		ite	eq
 1748 0026 0123     		moveq	r3, #1
 1749 0028 0023     		movne	r3, #0
 1750 002a DBB2     		uxtb	r3, r3
 1751 002c 464A     		ldr	r2, .L45+4
 1752 002e 5B01     		lsls	r3, r3, #5
 1753 0030 1344     		add	r3, r3, r2
 1754 0032 1B78     		ldrb	r3, [r3]
 1755 0034 DBB2     		uxtb	r3, r3
 1756 0036 FE2B     		cmp	r3, #254
 1757 0038 49D1     		bne	.L42
 1758              		.loc 1 472 0 is_stmt 0 discriminator 1
 1759 003a 424B     		ldr	r3, .L45
 1760 003c 1B78     		ldrb	r3, [r3]
 1761 003e DBB2     		uxtb	r3, r3
 1762 0040 002B     		cmp	r3, #0
 1763 0042 0CBF     		ite	eq
 1764 0044 0123     		moveq	r3, #1
 1765 0046 0023     		movne	r3, #0
 1766 0048 DBB2     		uxtb	r3, r3
 1767 004a 3F4A     		ldr	r2, .L45+4
 1768 004c 5B01     		lsls	r3, r3, #5
 1769 004e 1344     		add	r3, r3, r2
 1770 0050 1F33     		adds	r3, r3, #31
 1771 0052 1B78     		ldrb	r3, [r3]
 1772 0054 DBB2     		uxtb	r3, r3
 1773 0056 FD2B     		cmp	r3, #253
 1774 0058 39D1     		bne	.L42
 1775              	.LBB6:
 473:main.c        ****     {
 474:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 1776              		.loc 1 474 0 is_stmt 1
 1777 005a 0023     		movs	r3, #0
 1778 005c 7B60     		str	r3, [r7, #4]
 1779 005e 30E0     		b	.L43
 1780              	.L44:
 475:main.c        ****         {
 476:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 1781              		.loc 1 476 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 41


 1782 0060 384B     		ldr	r3, .L45
 1783 0062 1B78     		ldrb	r3, [r3]
 1784 0064 DBB2     		uxtb	r3, r3
 1785 0066 002B     		cmp	r3, #0
 1786 0068 0CBF     		ite	eq
 1787 006a 0123     		moveq	r3, #1
 1788 006c 0023     		movne	r3, #0
 1789 006e DBB2     		uxtb	r3, r3
 1790 0070 1A46     		mov	r2, r3
 1791 0072 7B68     		ldr	r3, [r7, #4]
 1792 0074 5B00     		lsls	r3, r3, #1
 1793 0076 0133     		adds	r3, r3, #1
 1794 0078 3349     		ldr	r1, .L45+4
 1795 007a 5201     		lsls	r2, r2, #5
 1796 007c 0A44     		add	r2, r2, r1
 1797 007e 1344     		add	r3, r3, r2
 1798 0080 1B78     		ldrb	r3, [r3]
 1799 0082 DBB2     		uxtb	r3, r3
 1800 0084 9BB2     		uxth	r3, r3
 1801 0086 1B02     		lsls	r3, r3, #8
 1802 0088 9AB2     		uxth	r2, r3
 1803 008a 2E4B     		ldr	r3, .L45
 1804 008c 1B78     		ldrb	r3, [r3]
 1805 008e DBB2     		uxtb	r3, r3
 1806 0090 002B     		cmp	r3, #0
 1807 0092 0CBF     		ite	eq
 1808 0094 0123     		moveq	r3, #1
 1809 0096 0023     		movne	r3, #0
 1810 0098 DBB2     		uxtb	r3, r3
 1811 009a 1946     		mov	r1, r3
 1812 009c 7B68     		ldr	r3, [r7, #4]
 1813 009e 0133     		adds	r3, r3, #1
 1814 00a0 5B00     		lsls	r3, r3, #1
 1815 00a2 2948     		ldr	r0, .L45+4
 1816 00a4 4901     		lsls	r1, r1, #5
 1817 00a6 0144     		add	r1, r1, r0
 1818 00a8 0B44     		add	r3, r3, r1
 1819 00aa 1B78     		ldrb	r3, [r3]
 1820 00ac DBB2     		uxtb	r3, r3
 1821 00ae 9BB2     		uxth	r3, r3
 1822 00b0 1344     		add	r3, r3, r2
 1823 00b2 99B2     		uxth	r1, r3
 1824 00b4 254A     		ldr	r2, .L45+8
 1825 00b6 7B68     		ldr	r3, [r7, #4]
 1826 00b8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 474:main.c        ****         {
 1827              		.loc 1 474 0 discriminator 3
 1828 00bc 7B68     		ldr	r3, [r7, #4]
 1829 00be 0133     		adds	r3, r3, #1
 1830 00c0 7B60     		str	r3, [r7, #4]
 1831              	.L43:
 474:main.c        ****         {
 1832              		.loc 1 474 0 is_stmt 0 discriminator 1
 1833 00c2 234B     		ldr	r3, .L45+12
 1834 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 00c6 1A46     		mov	r2, r3
 1836 00c8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 42


 1837 00ca 9A42     		cmp	r2, r3
 1838 00cc C8DC     		bgt	.L44
 1839              	.L42:
 1840              	.LBE6:
 477:main.c        ****         }
 478:main.c        ****     }
 479:main.c        ****     SPIS_1_ClearRxBuffer();
 1841              		.loc 1 479 0 is_stmt 1
 1842 00ce FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 480:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 1843              		.loc 1 480 0
 1844 00d2 204B     		ldr	r3, .L45+16
 1845 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1846 00d6 1846     		mov	r0, r3
 1847 00d8 FFF7FEFF 		bl	CyDmaClearPendingDrq
 481:main.c        **** 
 482:main.c        ****     //set up the next DMA transaction
 483:main.c        **** 
 484:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 1848              		.loc 1 484 0
 1849 00dc 194B     		ldr	r3, .L45
 1850 00de 1B78     		ldrb	r3, [r3]
 1851 00e0 DBB2     		uxtb	r3, r3
 1852 00e2 1A46     		mov	r2, r3
 1853 00e4 1C4B     		ldr	r3, .L45+20
 1854 00e6 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1855 00e8 0223     		movs	r3, #2
 1856 00ea FE22     		movs	r2, #254
 1857 00ec 2021     		movs	r1, #32
 1858 00ee FFF7FEFF 		bl	CyDmaTdSetConfiguration
 485:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 1859              		.loc 1 485 0
 1860 00f2 144B     		ldr	r3, .L45
 1861 00f4 1B78     		ldrb	r3, [r3]
 1862 00f6 DBB2     		uxtb	r3, r3
 1863 00f8 1A46     		mov	r2, r3
 1864 00fa 174B     		ldr	r3, .L45+20
 1865 00fc 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1866 00fe 114B     		ldr	r3, .L45
 1867 0100 1B78     		ldrb	r3, [r3]
 1868 0102 DBB2     		uxtb	r3, r3
 1869 0104 5B01     		lsls	r3, r3, #5
 1870 0106 104A     		ldr	r2, .L45+4
 1871 0108 1344     		add	r3, r3, r2
 1872 010a 9BB2     		uxth	r3, r3
 1873 010c 1A46     		mov	r2, r3
 1874 010e 46F25741 		movw	r1, #25687
 1875 0112 FFF7FEFF 		bl	CyDmaTdSetAddress
 486:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 1876              		.loc 1 486 0
 1877 0116 0F4B     		ldr	r3, .L45+16
 1878 0118 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1879 011a 0A4B     		ldr	r3, .L45
 1880 011c 1B78     		ldrb	r3, [r3]
 1881 011e DBB2     		uxtb	r3, r3
 1882 0120 1946     		mov	r1, r3
 1883 0122 0D4B     		ldr	r3, .L45+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 43


 1884 0124 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1885 0126 1946     		mov	r1, r3
 1886 0128 1046     		mov	r0, r2
 1887 012a FFF7FEFF 		bl	CyDmaChSetInitialTd
 487:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 1888              		.loc 1 487 0
 1889 012e 094B     		ldr	r3, .L45+16
 1890 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1891 0132 0121     		movs	r1, #1
 1892 0134 1846     		mov	r0, r3
 1893 0136 FFF7FEFF 		bl	CyDmaChEnable
 488:main.c        **** 
 489:main.c        **** }
 1894              		.loc 1 489 0
 1895 013a 00BF     		nop
 1896 013c 0837     		adds	r7, r7, #8
 1897              		.cfi_def_cfa_offset 8
 1898 013e BD46     		mov	sp, r7
 1899              		.cfi_def_cfa_register 13
 1900              		@ sp needed
 1901 0140 80BD     		pop	{r7, pc}
 1902              	.L46:
 1903 0142 00BF     		.align	2
 1904              	.L45:
 1905 0144 00000000 		.word	currentPluckBuffer
 1906 0148 00000000 		.word	rxBufferPluck
 1907 014c 00000000 		.word	strings
 1908 0150 00000000 		.word	numStrings
 1909 0154 00000000 		.word	rx1Channel
 1910 0158 00000000 		.word	rx1TD
 1911              		.cfi_endproc
 1912              	.LFE73:
 1913              		.size	spis_1_ss, .-spis_1_ss
 1914              		.section	.text.loadEEPROMdefaults,"ax",%progbits
 1915              		.align	2
 1916              		.global	loadEEPROMdefaults
 1917              		.thumb
 1918              		.thumb_func
 1919              		.type	loadEEPROMdefaults, %function
 1920              	loadEEPROMdefaults:
 1921              	.LFB74:
 490:main.c        **** 
 491:main.c        **** void loadEEPROMdefaults(void)
 492:main.c        **** {
 1922              		.loc 1 492 0
 1923              		.cfi_startproc
 1924              		@ args = 0, pretend = 0, frame = 0
 1925              		@ frame_needed = 1, uses_anonymous_args = 0
 1926 0000 80B5     		push	{r7, lr}
 1927              		.cfi_def_cfa_offset 8
 1928              		.cfi_offset 7, -8
 1929              		.cfi_offset 14, -4
 1930 0002 00AF     		add	r7, sp, #0
 1931              		.cfi_def_cfa_register 7
 493:main.c        ****     EEPROM_WriteByte(0, EEPROM_CURRENT_PRESET_OFFSET);
 1932              		.loc 1 493 0
 1933 0004 40F2D671 		movw	r1, #2006
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 44


 1934 0008 0020     		movs	r0, #0
 1935 000a FFF7FEFF 		bl	EEPROM_WriteByte
 494:main.c        ****     EEPROM_WriteByte(0, EEPROM_NECKS_OFFSET);
 1936              		.loc 1 494 0
 1937 000e 40F2E271 		movw	r1, #2018
 1938 0012 0020     		movs	r0, #0
 1939 0014 FFF7FEFF 		bl	EEPROM_WriteByte
 495:main.c        ****     EEPROM_WriteByte((int8_t)0, EEPROM_TRANSPOSE_OFFSET);
 1940              		.loc 1 495 0
 1941 0018 4FF4FB61 		mov	r1, #2008
 1942 001c 0020     		movs	r0, #0
 1943 001e FFF7FEFF 		bl	EEPROM_WriteByte
 496:main.c        ****     EEPROM_WriteByte((int8_t)0, EEPROM_TRANSPOSE_OFFSET+1);
 1944              		.loc 1 496 0
 1945 0022 40F2D971 		movw	r1, #2009
 1946 0026 0020     		movs	r0, #0
 1947 0028 FFF7FEFF 		bl	EEPROM_WriteByte
 497:main.c        ****     EEPROM_WriteByte(1, EEPROM_MIDI_SEND_OFFSET);
 1948              		.loc 1 497 0
 1949 002c 40F2DE71 		movw	r1, #2014
 1950 0030 0120     		movs	r0, #1
 1951 0032 FFF7FEFF 		bl	EEPROM_WriteByte
 498:main.c        ****     EEPROM_WriteByte(64,EEPROM_PITCHSMOOTHING_OFFSET);
 1952              		.loc 1 498 0
 1953 0036 40F2DC71 		movw	r1, #2012
 1954 003a 4020     		movs	r0, #64
 1955 003c FFF7FEFF 		bl	EEPROM_WriteByte
 499:main.c        ****     EEPROM_WriteByte(64,EEPROM_CONTROLSMOOTHING_OFFSET);
 1956              		.loc 1 499 0
 1957 0040 40F2DD71 		movw	r1, #2013
 1958 0044 4020     		movs	r0, #64
 1959 0046 FFF7FEFF 		bl	EEPROM_WriteByte
 500:main.c        ****     EEPROM_WriteByte(64,EEPROM_DEADZONES_OFFSET);
 1960              		.loc 1 500 0
 1961 004a 40F2DB71 		movw	r1, #2011
 1962 004e 4020     		movs	r0, #64
 1963 0050 FFF7FEFF 		bl	EEPROM_WriteByte
 501:main.c        ****     EEPROM_WriteByte(0,EEPROM_OCTAVE_ACTION_OFFSET);
 1964              		.loc 1 501 0
 1965 0054 40F2DA71 		movw	r1, #2010
 1966 0058 0020     		movs	r0, #0
 1967 005a FFF7FEFF 		bl	EEPROM_WriteByte
 502:main.c        ****     EEPROM_WriteByte(114,EEPROM_STRING_REP_OFFSET);// (strings 3 and 8)
 1968              		.loc 1 502 0
 1969 005e 40F2D771 		movw	r1, #2007
 1970 0062 7220     		movs	r0, #114
 1971 0064 FFF7FEFF 		bl	EEPROM_WriteByte
 503:main.c        ****     EEPROM_WriteByte(0,EEPROM_DUAL_SLIDER_OFFSET);
 1972              		.loc 1 503 0
 1973 0068 40F2E171 		movw	r1, #2017
 1974 006c 0020     		movs	r0, #0
 1975 006e FFF7FEFF 		bl	EEPROM_WriteByte
 504:main.c        ****     EEPROM_WriteByte(64,EEPROM_VOLUME_OFFSET);
 1976              		.loc 1 504 0
 1977 0072 40F2E371 		movw	r1, #2019
 1978 0076 4020     		movs	r0, #64
 1979 0078 FFF7FEFF 		bl	EEPROM_WriteByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 45


 505:main.c        **** }
 1980              		.loc 1 505 0
 1981 007c 00BF     		nop
 1982 007e 80BD     		pop	{r7, pc}
 1983              		.cfi_endproc
 1984              	.LFE74:
 1985              		.size	loadEEPROMdefaults, .-loadEEPROMdefaults
 1986              		.section	.rodata
 1987              		.align	2
 1988              	.LC0:
 1989 0400 2000     		.ascii	" \000"
 1990              		.global	__aeabi_f2iz
 1991              		.global	__aeabi_fcmpgt
 1992 0402 0000     		.align	2
 1993              	.LC1:
 1994 0404 4649524D 		.ascii	"FIRMWARE   \000"
 1994      57415245 
 1994      20202000 
 1995              		.align	2
 1996              	.LC2:
 1997 0410 55504441 		.ascii	"UPDATE     \000"
 1997      54452020 
 1997      20202000 
 1998              		.align	2
 1999              	.LC3:
 2000 041c 20202020 		.ascii	"           \000"
 2000      20202020 
 2000      20202000 
 2001              		.section	.text.main,"ax",%progbits
 2002              		.align	2
 2003              		.global	main
 2004              		.thumb
 2005              		.thumb_func
 2006              		.type	main, %function
 2007              	main:
 2008              	.LFB75:
 506:main.c        **** 
 507:main.c        **** 
 508:main.c        **** int main(void)
 509:main.c        **** {
 2009              		.loc 1 509 0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 192
 2012              		@ frame_needed = 1, uses_anonymous_args = 0
 2013 0000 B0B5     		push	{r4, r5, r7, lr}
 2014              		.cfi_def_cfa_offset 16
 2015              		.cfi_offset 4, -16
 2016              		.cfi_offset 5, -12
 2017              		.cfi_offset 7, -8
 2018              		.cfi_offset 14, -4
 2019 0002 B2B0     		sub	sp, sp, #200
 2020              		.cfi_def_cfa_offset 216
 2021 0004 02AF     		add	r7, sp, #8
 2022              		.cfi_def_cfa 7, 208
 510:main.c        ****     
 511:main.c        **** 	CYGlobalIntEnable; 
 2023              		.loc 1 511 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 46


 2024              		.syntax unified
 2025              	@ 511 "main.c" 1
 2026 0006 62B6     		CPSIE   i
 2027              	@ 0 "" 2
 512:main.c        ****     EEPROM_Start();
 2028              		.loc 1 512 0
 2029              		.thumb
 2030              		.syntax unified
 2031 0008 FFF7FEFF 		bl	EEPROM_Start
 513:main.c        ****      #ifdef BOOTLOAD_STYLE
 514:main.c        ****      //since we sucessfully booted this firmware, set it to be the default until the brain chip get
 515:main.c        ****     Bootloadable_SET_RUN_TYPE(Bootloadable_SCHEDULE_BTLDB);
 516:main.c        ****     #endif
 517:main.c        **** 
 518:main.c        ****     
 519:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 2032              		.loc 1 519 0
 2033 000c 9B4B     		ldr	r3, .L206
 2034 000e 1846     		mov	r0, r3
 2035 0010 FFF7FEFF 		bl	Em_EEPROM_Init
 2036 0014 0346     		mov	r3, r0
 2037 0016 1A46     		mov	r2, r3
 2038 0018 994B     		ldr	r3, .L206+4
 2039 001a 1A70     		strb	r2, [r3]
 520:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 521:main.c        ****     {
 522:main.c        ****        // HandleError();
 523:main.c        ****     }
 524:main.c        ****   
 525:main.c        ****     I2C_1_Start();  
 2040              		.loc 1 525 0
 2041 001c FFF7FEFF 		bl	I2C_1_Start
 526:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 2042              		.loc 1 526 0
 2043 0020 0120     		movs	r0, #1
 2044 0022 FFF7FEFF 		bl	USB_SetPowerStatus
 527:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 2045              		.loc 1 527 0
 2046 0026 9748     		ldr	r0, .L206+8
 2047 0028 FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 528:main.c        ****     
 529:main.c        ****     CyDelay(4000);
 2048              		.loc 1 529 0
 2049 002c 4FF47A60 		mov	r0, #4000
 2050 0030 FFF7FEFF 		bl	CyDelay
 530:main.c        ****     //read from eeprom all the stored user settings
 531:main.c        ****     
 532:main.c        ****     //check if this is the first time it's ever booted up, in which case there will be no copedents
 533:main.c        ****     if (EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET) == 0)
 2051              		.loc 1 533 0
 2052 0034 0020     		movs	r0, #0
 2053 0036 FFF7FEFF 		bl	EEPROM_ReadByte
 2054 003a 0346     		mov	r3, r0
 2055 003c 002B     		cmp	r3, #0
 2056 003e 01D1     		bne	.L49
 534:main.c        ****     {
 535:main.c        ****         loadEEPROMdefaults();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 47


 2057              		.loc 1 535 0
 2058 0040 FFF7FEFF 		bl	loadEEPROMdefaults
 2059              	.L49:
 536:main.c        ****         
 537:main.c        ****     }
 538:main.c        ****     patchNum = EEPROM_ReadByte(EEPROM_CURRENT_PRESET_OFFSET);
 2060              		.loc 1 538 0
 2061 0044 40F2D670 		movw	r0, #2006
 2062 0048 FFF7FEFF 		bl	EEPROM_ReadByte
 2063 004c 0346     		mov	r3, r0
 2064 004e 1A46     		mov	r2, r3
 2065 0050 8D4B     		ldr	r3, .L206+12
 2066 0052 1A70     		strb	r2, [r3]
 539:main.c        ****     neckByte = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 2067              		.loc 1 539 0
 2068 0054 40F2E270 		movw	r0, #2018
 2069 0058 FFF7FEFF 		bl	EEPROM_ReadByte
 2070 005c 0346     		mov	r3, r0
 2071 005e 1A46     		mov	r2, r3
 2072 0060 8A4B     		ldr	r3, .L206+16
 2073 0062 1A70     		strb	r2, [r3]
 540:main.c        ****     necks[0] = (neckByte >> 5) & 7;
 2074              		.loc 1 540 0
 2075 0064 894B     		ldr	r3, .L206+16
 2076 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2077 0068 5B09     		lsrs	r3, r3, #5
 2078 006a DAB2     		uxtb	r2, r3
 2079 006c 884B     		ldr	r3, .L206+20
 2080 006e 1A70     		strb	r2, [r3]
 541:main.c        ****     necks[1] = (neckByte >> 2) & 7;
 2081              		.loc 1 541 0
 2082 0070 864B     		ldr	r3, .L206+16
 2083 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2084 0074 9B08     		lsrs	r3, r3, #2
 2085 0076 DBB2     		uxtb	r3, r3
 2086 0078 03F00703 		and	r3, r3, #7
 2087 007c DAB2     		uxtb	r2, r3
 2088 007e 844B     		ldr	r3, .L206+20
 2089 0080 5A70     		strb	r2, [r3, #1]
 542:main.c        ****     currentNeck = neckByte & 1;
 2090              		.loc 1 542 0
 2091 0082 824B     		ldr	r3, .L206+16
 2092 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2093 0086 03F00103 		and	r3, r3, #1
 2094 008a DAB2     		uxtb	r2, r3
 2095 008c 814B     		ldr	r3, .L206+24
 2096 008e 1A70     		strb	r2, [r3]
 543:main.c        ****     transposeSemitones = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET);
 2097              		.loc 1 543 0
 2098 0090 4FF4FB60 		mov	r0, #2008
 2099 0094 FFF7FEFF 		bl	EEPROM_ReadByte
 2100 0098 0346     		mov	r3, r0
 2101 009a 5AB2     		sxtb	r2, r3
 2102 009c 7E4B     		ldr	r3, .L206+28
 2103 009e 1A70     		strb	r2, [r3]
 544:main.c        ****     transposeCents = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET + 1);
 2104              		.loc 1 544 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 48


 2105 00a0 40F2D970 		movw	r0, #2009
 2106 00a4 FFF7FEFF 		bl	EEPROM_ReadByte
 2107 00a8 0346     		mov	r3, r0
 2108 00aa 5AB2     		sxtb	r2, r3
 2109 00ac 7B4B     		ldr	r3, .L206+32
 2110 00ae 1A70     		strb	r2, [r3]
 545:main.c        ****     transposeFloat = ((float)transposeSemitones) + (((float)transposeCents) * 0.01f);
 2111              		.loc 1 545 0
 2112 00b0 794B     		ldr	r3, .L206+28
 2113 00b2 93F90030 		ldrsb	r3, [r3]
 2114 00b6 1846     		mov	r0, r3
 2115 00b8 FFF7FEFF 		bl	__aeabi_i2f
 2116 00bc 0446     		mov	r4, r0
 2117 00be 774B     		ldr	r3, .L206+32
 2118 00c0 93F90030 		ldrsb	r3, [r3]
 2119 00c4 1846     		mov	r0, r3
 2120 00c6 FFF7FEFF 		bl	__aeabi_i2f
 2121 00ca 0346     		mov	r3, r0
 2122 00cc 7449     		ldr	r1, .L206+36
 2123 00ce 1846     		mov	r0, r3
 2124 00d0 FFF7FEFF 		bl	__aeabi_fmul
 2125 00d4 0346     		mov	r3, r0
 2126 00d6 1946     		mov	r1, r3
 2127 00d8 2046     		mov	r0, r4
 2128 00da FFF7FEFF 		bl	__aeabi_fadd
 2129 00de 0346     		mov	r3, r0
 2130 00e0 1A46     		mov	r2, r3
 2131 00e2 704B     		ldr	r3, .L206+40
 2132 00e4 1A60     		str	r2, [r3]	@ float
 546:main.c        ****     midiSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&1;
 2133              		.loc 1 546 0
 2134 00e6 40F2DE70 		movw	r0, #2014
 2135 00ea FFF7FEFF 		bl	EEPROM_ReadByte
 2136 00ee 0346     		mov	r3, r0
 2137 00f0 03F00103 		and	r3, r3, #1
 2138 00f4 DAB2     		uxtb	r2, r3
 2139 00f6 6C4B     		ldr	r3, .L206+44
 2140 00f8 1A70     		strb	r2, [r3]
 547:main.c        ****     midiBarSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&(1<<1);
 2141              		.loc 1 547 0
 2142 00fa 40F2DE70 		movw	r0, #2014
 2143 00fe FFF7FEFF 		bl	EEPROM_ReadByte
 2144 0102 0346     		mov	r3, r0
 2145 0104 03F00203 		and	r3, r3, #2
 2146 0108 DAB2     		uxtb	r2, r3
 2147 010a 684B     		ldr	r3, .L206+48
 2148 010c 1A70     		strb	r2, [r3]
 548:main.c        ****     pitchSmoothing = EEPROM_ReadByte(EEPROM_PITCHSMOOTHING_OFFSET);
 2149              		.loc 1 548 0
 2150 010e 40F2DC70 		movw	r0, #2012
 2151 0112 FFF7FEFF 		bl	EEPROM_ReadByte
 2152 0116 0346     		mov	r3, r0
 2153 0118 1A46     		mov	r2, r3
 2154 011a 654B     		ldr	r3, .L206+52
 2155 011c 1A70     		strb	r2, [r3]
 549:main.c        ****     controlSmoothing = EEPROM_ReadByte(EEPROM_CONTROLSMOOTHING_OFFSET);
 2156              		.loc 1 549 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 49


 2157 011e 40F2DD70 		movw	r0, #2013
 2158 0122 FFF7FEFF 		bl	EEPROM_ReadByte
 2159 0126 0346     		mov	r3, r0
 2160 0128 1A46     		mov	r2, r3
 2161 012a 624B     		ldr	r3, .L206+56
 2162 012c 1A70     		strb	r2, [r3]
 550:main.c        ****     deadZone = EEPROM_ReadByte(EEPROM_DEADZONES_OFFSET);
 2163              		.loc 1 550 0
 2164 012e 40F2DB70 		movw	r0, #2011
 2165 0132 FFF7FEFF 		bl	EEPROM_ReadByte
 2166 0136 0346     		mov	r3, r0
 2167 0138 1A46     		mov	r2, r3
 2168 013a 5F4B     		ldr	r3, .L206+60
 2169 013c 1A70     		strb	r2, [r3]
 551:main.c        ****     octaveAction = EEPROM_ReadByte(EEPROM_OCTAVE_ACTION_OFFSET);
 2170              		.loc 1 551 0
 2171 013e 40F2DA70 		movw	r0, #2010
 2172 0142 FFF7FEFF 		bl	EEPROM_ReadByte
 2173 0146 0346     		mov	r3, r0
 2174 0148 1A46     		mov	r2, r3
 2175 014a 5C4B     		ldr	r3, .L206+64
 2176 014c 1A70     		strb	r2, [r3]
 552:main.c        ****     stringRepresentation[0] = (EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET)>>4) & 15; //first 4 bits o
 2177              		.loc 1 552 0
 2178 014e 40F2D770 		movw	r0, #2007
 2179 0152 FFF7FEFF 		bl	EEPROM_ReadByte
 2180 0156 0346     		mov	r3, r0
 2181 0158 1B09     		lsrs	r3, r3, #4
 2182 015a DAB2     		uxtb	r2, r3
 2183 015c 584B     		ldr	r3, .L206+68
 2184 015e 1A70     		strb	r2, [r3]
 553:main.c        ****     stringRepresentation[1] = EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET) & 15;//last 4 bits of the b
 2185              		.loc 1 553 0
 2186 0160 40F2D770 		movw	r0, #2007
 2187 0164 FFF7FEFF 		bl	EEPROM_ReadByte
 2188 0168 0346     		mov	r3, r0
 2189 016a 03F00F03 		and	r3, r3, #15
 2190 016e DAB2     		uxtb	r2, r3
 2191 0170 534B     		ldr	r3, .L206+68
 2192 0172 5A70     		strb	r2, [r3, #1]
 554:main.c        ****     calculateStringRepDivider();
 2193              		.loc 1 554 0
 2194 0174 FFF7FEFF 		bl	calculateStringRepDivider
 555:main.c        ****     dualSlider = EEPROM_ReadByte(EEPROM_DUAL_SLIDER_OFFSET) & 1;
 2195              		.loc 1 555 0
 2196 0178 40F2E170 		movw	r0, #2017
 2197 017c FFF7FEFF 		bl	EEPROM_ReadByte
 2198 0180 0346     		mov	r3, r0
 2199 0182 03F00103 		and	r3, r3, #1
 2200 0186 DAB2     		uxtb	r2, r3
 2201 0188 4E4B     		ldr	r3, .L206+72
 2202 018a 1A70     		strb	r2, [r3]
 556:main.c        ****     volumeInt = (int8_t) EEPROM_ReadByte(EEPROM_VOLUME_OFFSET);
 2203              		.loc 1 556 0
 2204 018c 40F2E370 		movw	r0, #2019
 2205 0190 FFF7FEFF 		bl	EEPROM_ReadByte
 2206 0194 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 50


 2207 0196 5AB2     		sxtb	r2, r3
 2208 0198 4B4B     		ldr	r3, .L206+76
 2209 019a 1A70     		strb	r2, [r3]
 557:main.c        ****     uint16_t pedal_inverted_byte = (EEPROM_ReadByte(EEPROM_PEDAL_INVERTED_OFFSET) << 8) + EEPROM_Re
 2210              		.loc 1 557 0
 2211 019c 40F2DF70 		movw	r0, #2015
 2212 01a0 FFF7FEFF 		bl	EEPROM_ReadByte
 2213 01a4 0346     		mov	r3, r0
 2214 01a6 9BB2     		uxth	r3, r3
 2215 01a8 1B02     		lsls	r3, r3, #8
 2216 01aa 9CB2     		uxth	r4, r3
 2217 01ac 4FF4FC60 		mov	r0, #2016
 2218 01b0 FFF7FEFF 		bl	EEPROM_ReadByte
 2219 01b4 0346     		mov	r3, r0
 2220 01b6 9BB2     		uxth	r3, r3
 2221 01b8 2344     		add	r3, r3, r4
 2222 01ba FB87     		strh	r3, [r7, #62]	@ movhi
 2223              	.LBB7:
 558:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2224              		.loc 1 558 0
 2225 01bc 0023     		movs	r3, #0
 2226 01be C7F8BC30 		str	r3, [r7, #188]
 2227 01c2 15E0     		b	.L50
 2228              	.L51:
 559:main.c        ****     {
 560:main.c        ****         pedal_inverted[i] = pedal_inverted_byte & (1<<i);
 2229              		.loc 1 560 0 discriminator 3
 2230 01c4 FB8F     		ldrh	r3, [r7, #62]	@ movhi
 2231 01c6 5AB2     		sxtb	r2, r3
 2232 01c8 0121     		movs	r1, #1
 2233 01ca D7F8BC30 		ldr	r3, [r7, #188]
 2234 01ce 01FA03F3 		lsl	r3, r1, r3
 2235 01d2 5BB2     		sxtb	r3, r3
 2236 01d4 1340     		ands	r3, r3, r2
 2237 01d6 5BB2     		sxtb	r3, r3
 2238 01d8 D9B2     		uxtb	r1, r3
 2239 01da 3C4A     		ldr	r2, .L206+80
 2240 01dc D7F8BC30 		ldr	r3, [r7, #188]
 2241 01e0 1344     		add	r3, r3, r2
 2242 01e2 0A46     		mov	r2, r1
 2243 01e4 1A70     		strb	r2, [r3]
 558:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2244              		.loc 1 558 0 discriminator 3
 2245 01e6 D7F8BC30 		ldr	r3, [r7, #188]
 2246 01ea 0133     		adds	r3, r3, #1
 2247 01ec C7F8BC30 		str	r3, [r7, #188]
 2248              	.L50:
 558:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2249              		.loc 1 558 0 is_stmt 0 discriminator 1
 2250 01f0 D7F8BC30 		ldr	r3, [r7, #188]
 2251 01f4 092B     		cmp	r3, #9
 2252 01f6 E5DD     		ble	.L51
 2253              	.LBE7:
 2254              	.LBB8:
 561:main.c        ****     }
 562:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 2255              		.loc 1 562 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 51


 2256 01f8 0023     		movs	r3, #0
 2257 01fa C7F8B830 		str	r3, [r7, #184]
 2258 01fe E0E0     		b	.L52
 2259              	.L59:
 2260              	.LBB9:
 563:main.c        ****     {
 564:main.c        ****         for (int letter = 0; letter < COPEDENT_NAME_LENGTH_IN_BYTES; letter++)
 2261              		.loc 1 564 0
 2262 0200 0023     		movs	r3, #0
 2263 0202 C7F8B430 		str	r3, [r7, #180]
 2264 0206 25E0     		b	.L53
 2265              	.L54:
 565:main.c        ****         {
 566:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 2266              		.loc 1 566 0 discriminator 3
 2267 0208 D7F8B830 		ldr	r3, [r7, #184]
 2268 020c 9BB2     		uxth	r3, r3
 2269 020e 1A46     		mov	r2, r3	@ movhi
 2270 0210 1201     		lsls	r2, r2, #4
 2271 0212 1A44     		add	r2, r2, r3
 2272 0214 D200     		lsls	r2, r2, #3
 2273 0216 1344     		add	r3, r3, r2
 2274 0218 5B00     		lsls	r3, r3, #1
 2275 021a 9AB2     		uxth	r2, r3
 2276 021c D7F8B430 		ldr	r3, [r7, #180]
 2277 0220 9BB2     		uxth	r3, r3
 2278 0222 1344     		add	r3, r3, r2
 2279 0224 9BB2     		uxth	r3, r3
 2280 0226 1846     		mov	r0, r3
 2281 0228 FFF7FEFF 		bl	EEPROM_ReadByte
 2282 022c 0346     		mov	r3, r0
 2283 022e 1846     		mov	r0, r3
 2284 0230 2749     		ldr	r1, .L206+84
 2285 0232 D7F8B820 		ldr	r2, [r7, #184]
 2286 0236 1346     		mov	r3, r2
 2287 0238 9B00     		lsls	r3, r3, #2
 2288 023a 1344     		add	r3, r3, r2
 2289 023c 5B00     		lsls	r3, r3, #1
 2290 023e CA18     		adds	r2, r1, r3
 2291 0240 D7F8B430 		ldr	r3, [r7, #180]
 2292 0244 1344     		add	r3, r3, r2
 2293 0246 0246     		mov	r2, r0
 2294 0248 1A70     		strb	r2, [r3]
 564:main.c        ****         {
 2295              		.loc 1 564 0 discriminator 3
 2296 024a D7F8B430 		ldr	r3, [r7, #180]
 2297 024e 0133     		adds	r3, r3, #1
 2298 0250 C7F8B430 		str	r3, [r7, #180]
 2299              	.L53:
 564:main.c        ****         {
 2300              		.loc 1 564 0 is_stmt 0 discriminator 1
 2301 0254 D7F8B430 		ldr	r3, [r7, #180]
 2302 0258 092B     		cmp	r3, #9
 2303 025a D5DD     		ble	.L54
 2304              	.LBE9:
 2305              	.LBB10:
 567:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 52


 568:main.c        ****         for (int i = 0; i < 11; i++)
 2306              		.loc 1 568 0 is_stmt 1
 2307 025c 0023     		movs	r3, #0
 2308 025e C7F8B030 		str	r3, [r7, #176]
 2309 0262 A4E0     		b	.L55
 2310              	.L58:
 2311              	.LBB11:
 569:main.c        ****     	{
 570:main.c        ****     		int pedalStartLoc = (i*24);
 2312              		.loc 1 570 0
 2313 0264 D7F8B020 		ldr	r2, [r7, #176]
 2314 0268 1346     		mov	r3, r2
 2315 026a 5B00     		lsls	r3, r3, #1
 2316 026c 1344     		add	r3, r3, r2
 2317 026e DB00     		lsls	r3, r3, #3
 2318 0270 BB63     		str	r3, [r7, #56]
 2319              	.LBB12:
 571:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 2320              		.loc 1 571 0
 2321 0272 0023     		movs	r3, #0
 2322 0274 C7F8AC30 		str	r3, [r7, #172]
 2323 0278 90E0     		b	.L56
 2324              	.L207:
 2325 027a 00BF     		.align	2
 2326              	.L206:
 2327 027c 00000000 		.word	Em_EEPROM_em_EepromStorage
 2328 0280 00000000 		.word	eepromReturnValue
 2329 0284 00000000 		.word	Vbus_function
 2330 0288 00000000 		.word	patchNum
 2331 028c 00000000 		.word	neckByte
 2332 0290 00000000 		.word	necks
 2333 0294 00000000 		.word	currentNeck
 2334 0298 00000000 		.word	transposeSemitones
 2335 029c 00000000 		.word	transposeCents
 2336 02a0 0AD7233C 		.word	1008981770
 2337 02a4 00000000 		.word	transposeFloat
 2338 02a8 00000000 		.word	midiSendOn
 2339 02ac 00000000 		.word	midiBarSendOn
 2340 02b0 00000000 		.word	pitchSmoothing
 2341 02b4 00000000 		.word	controlSmoothing
 2342 02b8 00000000 		.word	deadZone
 2343 02bc 00000000 		.word	octaveAction
 2344 02c0 00000000 		.word	stringRepresentation
 2345 02c4 00000000 		.word	dualSlider
 2346 02c8 00000000 		.word	volumeInt
 2347 02cc 00000000 		.word	pedal_inverted
 2348 02d0 00000000 		.word	copedentNamesArray
 2349              	.L57:
 2350              	.LBB13:
 572:main.c        ****     		{
 573:main.c        ****                 
 574:main.c        ****                 int stringStartLoc = (j*2);
 2351              		.loc 1 574 0 discriminator 3
 2352 02d4 D7F8AC30 		ldr	r3, [r7, #172]
 2353 02d8 5B00     		lsls	r3, r3, #1
 2354 02da 7B63     		str	r3, [r7, #52]
 575:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 53


 2355              		.loc 1 575 0 discriminator 3
 2356 02dc 7B6B     		ldr	r3, [r7, #52]
 2357 02de 9AB2     		uxth	r2, r3
 2358 02e0 BB6B     		ldr	r3, [r7, #56]
 2359 02e2 9BB2     		uxth	r3, r3
 2360 02e4 1344     		add	r3, r3, r2
 2361 02e6 9AB2     		uxth	r2, r3
 2362 02e8 D7F8B830 		ldr	r3, [r7, #184]
 2363 02ec 9BB2     		uxth	r3, r3
 2364 02ee 1946     		mov	r1, r3	@ movhi
 2365 02f0 0901     		lsls	r1, r1, #4
 2366 02f2 1944     		add	r1, r1, r3
 2367 02f4 C900     		lsls	r1, r1, #3
 2368 02f6 0B44     		add	r3, r3, r1
 2369 02f8 5B00     		lsls	r3, r3, #1
 2370 02fa 9BB2     		uxth	r3, r3
 2371 02fc 1344     		add	r3, r3, r2
 2372 02fe 9BB2     		uxth	r3, r3
 2373 0300 0A33     		adds	r3, r3, #10
 2374 0302 9BB2     		uxth	r3, r3
 2375 0304 1846     		mov	r0, r3
 2376 0306 FFF7FEFF 		bl	EEPROM_ReadByte
 2377 030a 0346     		mov	r3, r0
 2378 030c 7B86     		strh	r3, [r7, #50]	@ movhi
 576:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 2379              		.loc 1 576 0 discriminator 3
 2380 030e 7B6B     		ldr	r3, [r7, #52]
 2381 0310 9AB2     		uxth	r2, r3
 2382 0312 BB6B     		ldr	r3, [r7, #56]
 2383 0314 9BB2     		uxth	r3, r3
 2384 0316 1344     		add	r3, r3, r2
 2385 0318 9AB2     		uxth	r2, r3
 2386 031a D7F8B830 		ldr	r3, [r7, #184]
 2387 031e 9BB2     		uxth	r3, r3
 2388 0320 1946     		mov	r1, r3	@ movhi
 2389 0322 0901     		lsls	r1, r1, #4
 2390 0324 1944     		add	r1, r1, r3
 2391 0326 C900     		lsls	r1, r1, #3
 2392 0328 0B44     		add	r3, r3, r1
 2393 032a 5B00     		lsls	r3, r3, #1
 2394 032c 9BB2     		uxth	r3, r3
 2395 032e 1344     		add	r3, r3, r2
 2396 0330 9BB2     		uxth	r3, r3
 2397 0332 0B33     		adds	r3, r3, #11
 2398 0334 9BB2     		uxth	r3, r3
 2399 0336 1846     		mov	r0, r3
 2400 0338 FFF7FEFF 		bl	EEPROM_ReadByte
 2401 033c 0346     		mov	r3, r0
 2402 033e 3B86     		strh	r3, [r7, #48]	@ movhi
 577:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 2403              		.loc 1 577 0 discriminator 3
 2404 0340 7B8E     		ldrh	r3, [r7, #50]
 2405 0342 1A02     		lsls	r2, r3, #8
 2406 0344 3B8E     		ldrh	r3, [r7, #48]
 2407 0346 1344     		add	r3, r3, r2
 2408 0348 1846     		mov	r0, r3
 2409 034a FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 54


 2410 034e 0346     		mov	r3, r0
 2411 0350 4FF06E51 		mov	r1, #998244352
 2412 0354 1846     		mov	r0, r3
 2413 0356 FFF7FEFF 		bl	__aeabi_fmul
 2414 035a 0346     		mov	r3, r0
 2415 035c 4FF08641 		mov	r1, #1124073472
 2416 0360 1846     		mov	r0, r3
 2417 0362 FFF7FEFF 		bl	__aeabi_fsub
 2418 0366 0346     		mov	r3, r0
 2419 0368 1C46     		mov	r4, r3
 2420 036a 9548     		ldr	r0, .L208
 2421 036c D7F8B030 		ldr	r3, [r7, #176]
 2422 0370 D7F8B810 		ldr	r1, [r7, #184]
 2423 0374 1A46     		mov	r2, r3
 2424 0376 5200     		lsls	r2, r2, #1
 2425 0378 1A44     		add	r2, r2, r3
 2426 037a 9300     		lsls	r3, r2, #2
 2427 037c 1A46     		mov	r2, r3
 2428 037e 0B46     		mov	r3, r1
 2429 0380 5B01     		lsls	r3, r3, #5
 2430 0382 0B44     		add	r3, r3, r1
 2431 0384 9B00     		lsls	r3, r3, #2
 2432 0386 1A44     		add	r2, r2, r3
 2433 0388 D7F8AC30 		ldr	r3, [r7, #172]
 2434 038c 1344     		add	r3, r3, r2
 2435 038e 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 2436              	.LBE13:
 571:main.c        ****     		{
 2437              		.loc 1 571 0 discriminator 3
 2438 0392 D7F8AC30 		ldr	r3, [r7, #172]
 2439 0396 0133     		adds	r3, r3, #1
 2440 0398 C7F8AC30 		str	r3, [r7, #172]
 2441              	.L56:
 571:main.c        ****     		{
 2442              		.loc 1 571 0 is_stmt 0 discriminator 1
 2443 039c D7F8AC30 		ldr	r3, [r7, #172]
 2444 03a0 0B2B     		cmp	r3, #11
 2445 03a2 97DD     		ble	.L57
 2446              	.LBE12:
 2447              	.LBE11:
 568:main.c        ****     	{
 2448              		.loc 1 568 0 is_stmt 1 discriminator 2
 2449 03a4 D7F8B030 		ldr	r3, [r7, #176]
 2450 03a8 0133     		adds	r3, r3, #1
 2451 03aa C7F8B030 		str	r3, [r7, #176]
 2452              	.L55:
 568:main.c        ****     	{
 2453              		.loc 1 568 0 is_stmt 0 discriminator 1
 2454 03ae D7F8B030 		ldr	r3, [r7, #176]
 2455 03b2 0A2B     		cmp	r3, #10
 2456 03b4 7FF756AF 		ble	.L58
 2457              	.LBE10:
 562:main.c        ****     {
 2458              		.loc 1 562 0 is_stmt 1 discriminator 2
 2459 03b8 D7F8B830 		ldr	r3, [r7, #184]
 2460 03bc 0133     		adds	r3, r3, #1
 2461 03be C7F8B830 		str	r3, [r7, #184]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 55


 2462              	.L52:
 562:main.c        ****     {
 2463              		.loc 1 562 0 is_stmt 0 discriminator 1
 2464 03c2 D7F8B830 		ldr	r3, [r7, #184]
 2465 03c6 062B     		cmp	r3, #6
 2466 03c8 7FF71AAF 		ble	.L59
 2467              	.LBE8:
 2468              	.LBB14:
 578:main.c        ****             }
 579:main.c        ****     	}
 580:main.c        ****     }
 581:main.c        **** 
 582:main.c        ****     
 583:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2469              		.loc 1 583 0 is_stmt 1
 2470 03cc 0023     		movs	r3, #0
 2471 03ce C7F8A830 		str	r3, [r7, #168]
 2472 03d2 49E0     		b	.L60
 2473              	.L61:
 584:main.c        ****     {
 585:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_R
 2474              		.loc 1 585 0 discriminator 3
 2475 03d4 D7F8A830 		ldr	r3, [r7, #168]
 2476 03d8 9BB2     		uxth	r3, r3
 2477 03da 9B00     		lsls	r3, r3, #2
 2478 03dc 9BB2     		uxth	r3, r3
 2479 03de 03F27E73 		addw	r3, r3, #1918
 2480 03e2 9BB2     		uxth	r3, r3
 2481 03e4 1846     		mov	r0, r3
 2482 03e6 FFF7FEFF 		bl	EEPROM_ReadByte
 2483 03ea 0346     		mov	r3, r0
 2484 03ec 9BB2     		uxth	r3, r3
 2485 03ee 1B02     		lsls	r3, r3, #8
 2486 03f0 9CB2     		uxth	r4, r3
 2487 03f2 D7F8A830 		ldr	r3, [r7, #168]
 2488 03f6 9BB2     		uxth	r3, r3
 2489 03f8 9B00     		lsls	r3, r3, #2
 2490 03fa 9BB2     		uxth	r3, r3
 2491 03fc 03F27F73 		addw	r3, r3, #1919
 2492 0400 9BB2     		uxth	r3, r3
 2493 0402 1846     		mov	r0, r3
 2494 0404 FFF7FEFF 		bl	EEPROM_ReadByte
 2495 0408 0346     		mov	r3, r0
 2496 040a 9BB2     		uxth	r3, r3
 2497 040c 2344     		add	r3, r3, r4
 2498 040e 99B2     		uxth	r1, r3
 2499 0410 6C4A     		ldr	r2, .L208+4
 2500 0412 D7F8A830 		ldr	r3, [r7, #168]
 2501 0416 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 586:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (E
 2502              		.loc 1 586 0 discriminator 3
 2503 041a D7F8A830 		ldr	r3, [r7, #168]
 2504 041e 03F5F073 		add	r3, r3, #480
 2505 0422 9BB2     		uxth	r3, r3
 2506 0424 9B00     		lsls	r3, r3, #2
 2507 0426 9BB2     		uxth	r3, r3
 2508 0428 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 56


 2509 042a FFF7FEFF 		bl	EEPROM_ReadByte
 2510 042e 0346     		mov	r3, r0
 2511 0430 9BB2     		uxth	r3, r3
 2512 0432 1B02     		lsls	r3, r3, #8
 2513 0434 9CB2     		uxth	r4, r3
 2514 0436 D7F8A830 		ldr	r3, [r7, #168]
 2515 043a 9BB2     		uxth	r3, r3
 2516 043c 9B00     		lsls	r3, r3, #2
 2517 043e 9BB2     		uxth	r3, r3
 2518 0440 03F28173 		addw	r3, r3, #1921
 2519 0444 9BB2     		uxth	r3, r3
 2520 0446 1846     		mov	r0, r3
 2521 0448 FFF7FEFF 		bl	EEPROM_ReadByte
 2522 044c 0346     		mov	r3, r0
 2523 044e 9BB2     		uxth	r3, r3
 2524 0450 2344     		add	r3, r3, r4
 2525 0452 99B2     		uxth	r1, r3
 2526 0454 5C4A     		ldr	r2, .L208+8
 2527 0456 D7F8A830 		ldr	r3, [r7, #168]
 2528 045a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 583:main.c        ****     {
 2529              		.loc 1 583 0 discriminator 3
 2530 045e D7F8A830 		ldr	r3, [r7, #168]
 2531 0462 0133     		adds	r3, r3, #1
 2532 0464 C7F8A830 		str	r3, [r7, #168]
 2533              	.L60:
 583:main.c        ****     {
 2534              		.loc 1 583 0 is_stmt 0 discriminator 1
 2535 0468 D7F8A830 		ldr	r3, [r7, #168]
 2536 046c 092B     		cmp	r3, #9
 2537 046e B1DD     		ble	.L61
 2538              	.LBE14:
 587:main.c        ****     }
 588:main.c        ****     calculatePedalRatios();
 2539              		.loc 1 588 0 is_stmt 1
 2540 0470 FFF7FEFF 		bl	calculatePedalRatios
 2541              	.LBB15:
 589:main.c        ****                 
 590:main.c        ****     
 591:main.c        ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 2542              		.loc 1 591 0
 2543 0474 0023     		movs	r3, #0
 2544 0476 C7F8A430 		str	r3, [r7, #164]
 2545 047a 4AE0     		b	.L62
 2546              	.L63:
 592:main.c        ****     {
 593:main.c        ****         fretMeasurements[0][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + (i*4)) << 8) + (
 2547              		.loc 1 593 0 discriminator 3
 2548 047c D7F8A430 		ldr	r3, [r7, #164]
 2549 0480 9BB2     		uxth	r3, r3
 2550 0482 9B00     		lsls	r3, r3, #2
 2551 0484 9BB2     		uxth	r3, r3
 2552 0486 03F2A673 		addw	r3, r3, #1958
 2553 048a 9BB2     		uxth	r3, r3
 2554 048c 1846     		mov	r0, r3
 2555 048e FFF7FEFF 		bl	EEPROM_ReadByte
 2556 0492 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 57


 2557 0494 9BB2     		uxth	r3, r3
 2558 0496 1B02     		lsls	r3, r3, #8
 2559 0498 9CB2     		uxth	r4, r3
 2560 049a D7F8A430 		ldr	r3, [r7, #164]
 2561 049e 9BB2     		uxth	r3, r3
 2562 04a0 9B00     		lsls	r3, r3, #2
 2563 04a2 9BB2     		uxth	r3, r3
 2564 04a4 03F2A773 		addw	r3, r3, #1959
 2565 04a8 9BB2     		uxth	r3, r3
 2566 04aa 1846     		mov	r0, r3
 2567 04ac FFF7FEFF 		bl	EEPROM_ReadByte
 2568 04b0 0346     		mov	r3, r0
 2569 04b2 9BB2     		uxth	r3, r3
 2570 04b4 2344     		add	r3, r3, r4
 2571 04b6 99B2     		uxth	r1, r3
 2572 04b8 444A     		ldr	r2, .L208+12
 2573 04ba D7F8A430 		ldr	r3, [r7, #164]
 2574 04be 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 594:main.c        ****         fretMeasurements[1][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 2)) << 
 2575              		.loc 1 594 0 discriminator 3
 2576 04c2 D7F8A430 		ldr	r3, [r7, #164]
 2577 04c6 03F5F573 		add	r3, r3, #490
 2578 04ca 9BB2     		uxth	r3, r3
 2579 04cc 9B00     		lsls	r3, r3, #2
 2580 04ce 9BB2     		uxth	r3, r3
 2581 04d0 1846     		mov	r0, r3
 2582 04d2 FFF7FEFF 		bl	EEPROM_ReadByte
 2583 04d6 0346     		mov	r3, r0
 2584 04d8 9BB2     		uxth	r3, r3
 2585 04da 1B02     		lsls	r3, r3, #8
 2586 04dc 9CB2     		uxth	r4, r3
 2587 04de D7F8A430 		ldr	r3, [r7, #164]
 2588 04e2 9BB2     		uxth	r3, r3
 2589 04e4 9B00     		lsls	r3, r3, #2
 2590 04e6 9BB2     		uxth	r3, r3
 2591 04e8 03F2A973 		addw	r3, r3, #1961
 2592 04ec 9BB2     		uxth	r3, r3
 2593 04ee 1846     		mov	r0, r3
 2594 04f0 FFF7FEFF 		bl	EEPROM_ReadByte
 2595 04f4 0346     		mov	r3, r0
 2596 04f6 9BB2     		uxth	r3, r3
 2597 04f8 2344     		add	r3, r3, r4
 2598 04fa 99B2     		uxth	r1, r3
 2599 04fc 334A     		ldr	r2, .L208+12
 2600 04fe D7F8A430 		ldr	r3, [r7, #164]
 2601 0502 0C33     		adds	r3, r3, #12
 2602 0504 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 591:main.c        ****     {
 2603              		.loc 1 591 0 discriminator 3
 2604 0508 D7F8A430 		ldr	r3, [r7, #164]
 2605 050c 0133     		adds	r3, r3, #1
 2606 050e C7F8A430 		str	r3, [r7, #164]
 2607              	.L62:
 591:main.c        ****     {
 2608              		.loc 1 591 0 is_stmt 0 discriminator 1
 2609 0512 D7F8A430 		ldr	r3, [r7, #164]
 2610 0516 0B2B     		cmp	r3, #11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 58


 2611 0518 B0DD     		ble	.L63
 2612              	.LBE15:
 2613              	.LBB16:
 595:main.c        ****     }
 596:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 597:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 2614              		.loc 1 597 0 is_stmt 1
 2615 051a 0023     		movs	r3, #0
 2616 051c C7F8A030 		str	r3, [r7, #160]
 2617 0520 8CE0     		b	.L64
 2618              	.L75:
 2619              	.LBB17:
 598:main.c        ****     {
 599:main.c        ****         for (int j = 0; j < PRESET_NAME_LENGTH_IN_BYTES; j++)
 2620              		.loc 1 599 0
 2621 0522 0023     		movs	r3, #0
 2622 0524 C7F89C30 		str	r3, [r7, #156]
 2623 0528 11E0     		b	.L65
 2624              	.L66:
 600:main.c        ****         {
 601:main.c        ****             presetNamesArray[i][j] = 255;
 2625              		.loc 1 601 0 discriminator 3
 2626 052a 2949     		ldr	r1, .L208+16
 2627 052c D7F8A020 		ldr	r2, [r7, #160]
 2628 0530 1346     		mov	r3, r2
 2629 0532 DB00     		lsls	r3, r3, #3
 2630 0534 9B1A     		subs	r3, r3, r2
 2631 0536 5B00     		lsls	r3, r3, #1
 2632 0538 CA18     		adds	r2, r1, r3
 2633 053a D7F89C30 		ldr	r3, [r7, #156]
 2634 053e 1344     		add	r3, r3, r2
 2635 0540 FF22     		movs	r2, #255
 2636 0542 1A70     		strb	r2, [r3]
 599:main.c        ****         {
 2637              		.loc 1 599 0 discriminator 3
 2638 0544 D7F89C30 		ldr	r3, [r7, #156]
 2639 0548 0133     		adds	r3, r3, #1
 2640 054a C7F89C30 		str	r3, [r7, #156]
 2641              	.L65:
 599:main.c        ****         {
 2642              		.loc 1 599 0 is_stmt 0 discriminator 1
 2643 054e D7F89C30 		ldr	r3, [r7, #156]
 2644 0552 0D2B     		cmp	r3, #13
 2645 0554 E9DD     		ble	.L66
 2646              	.LBE17:
 2647              	.LBB18:
 602:main.c        **** 
 603:main.c        ****         }
 604:main.c        ****         for (int j = 0; j < NUM_MACROS*NUM_MACRO_PAGES; j++)
 2648              		.loc 1 604 0 is_stmt 1
 2649 0556 0023     		movs	r3, #0
 2650 0558 C7F89830 		str	r3, [r7, #152]
 2651 055c 24E0     		b	.L67
 2652              	.L70:
 2653              	.LBB19:
 605:main.c        ****         {
 606:main.c        ****             for (int k = 0; k < MACRO_NAME_LENGTH_IN_BYTES; k++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 59


 2654              		.loc 1 606 0
 2655 055e 0023     		movs	r3, #0
 2656 0560 C7F89430 		str	r3, [r7, #148]
 2657 0564 17E0     		b	.L68
 2658              	.L69:
 607:main.c        ****             {
 608:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2659              		.loc 1 608 0 discriminator 3
 2660 0566 1B48     		ldr	r0, .L208+20
 2661 0568 D7F89830 		ldr	r3, [r7, #152]
 2662 056c D7F8A010 		ldr	r1, [r7, #160]
 2663 0570 1A46     		mov	r2, r3
 2664 0572 D200     		lsls	r2, r2, #3
 2665 0574 1A44     		add	r2, r2, r3
 2666 0576 0B46     		mov	r3, r1
 2667 0578 DB00     		lsls	r3, r3, #3
 2668 057a 0B44     		add	r3, r3, r1
 2669 057c 1B01     		lsls	r3, r3, #4
 2670 057e 1344     		add	r3, r3, r2
 2671 0580 C218     		adds	r2, r0, r3
 2672 0582 D7F89430 		ldr	r3, [r7, #148]
 2673 0586 1344     		add	r3, r3, r2
 2674 0588 FF22     		movs	r2, #255
 2675 058a 1A70     		strb	r2, [r3]
 606:main.c        ****             {
 2676              		.loc 1 606 0 discriminator 3
 2677 058c D7F89430 		ldr	r3, [r7, #148]
 2678 0590 0133     		adds	r3, r3, #1
 2679 0592 C7F89430 		str	r3, [r7, #148]
 2680              	.L68:
 606:main.c        ****             {
 2681              		.loc 1 606 0 is_stmt 0 discriminator 1
 2682 0596 D7F89430 		ldr	r3, [r7, #148]
 2683 059a 082B     		cmp	r3, #8
 2684 059c E3DD     		ble	.L69
 2685              	.LBE19:
 604:main.c        ****         {
 2686              		.loc 1 604 0 is_stmt 1 discriminator 2
 2687 059e D7F89830 		ldr	r3, [r7, #152]
 2688 05a2 0133     		adds	r3, r3, #1
 2689 05a4 C7F89830 		str	r3, [r7, #152]
 2690              	.L67:
 604:main.c        ****         {
 2691              		.loc 1 604 0 is_stmt 0 discriminator 1
 2692 05a8 D7F89830 		ldr	r3, [r7, #152]
 2693 05ac 0F2B     		cmp	r3, #15
 2694 05ae D6DD     		ble	.L70
 2695              	.LBE18:
 2696              	.LBB20:
 609:main.c        ****             }
 610:main.c        ****         }
 611:main.c        ****         for (int j = 0; j < NUM_CONTROLS; j++)
 2697              		.loc 1 611 0 is_stmt 1
 2698 05b0 0023     		movs	r3, #0
 2699 05b2 C7F89030 		str	r3, [r7, #144]
 2700 05b6 32E0     		b	.L71
 2701              	.L74:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 60


 2702              	.LBB21:
 612:main.c        ****         {
 613:main.c        ****             for (int k = 0; k < CONTROL_NAME_LENGTH_IN_BYTES; k++)
 2703              		.loc 1 613 0
 2704 05b8 0023     		movs	r3, #0
 2705 05ba C7F88C30 		str	r3, [r7, #140]
 2706 05be 25E0     		b	.L72
 2707              	.L209:
 2708              		.align	2
 2709              	.L208:
 2710 05c0 00000000 		.word	copedent
 2711 05c4 00000000 		.word	pedals_low
 2712 05c8 00000000 		.word	pedals_high
 2713 05cc 00000000 		.word	fretMeasurements
 2714 05d0 00000000 		.word	presetNamesArray
 2715 05d4 00000000 		.word	macroNamesArray
 2716              	.L73:
 614:main.c        ****             {
 615:main.c        ****                 controlNamesArray[i][j][k] = 255;
 2717              		.loc 1 615 0 discriminator 3
 2718 05d8 9748     		ldr	r0, .L210
 2719 05da D7F89030 		ldr	r3, [r7, #144]
 2720 05de D7F8A010 		ldr	r1, [r7, #160]
 2721 05e2 1A46     		mov	r2, r3
 2722 05e4 9200     		lsls	r2, r2, #2
 2723 05e6 1A44     		add	r2, r2, r3
 2724 05e8 5300     		lsls	r3, r2, #1
 2725 05ea 1A46     		mov	r2, r3
 2726 05ec 0B46     		mov	r3, r1
 2727 05ee 9B00     		lsls	r3, r3, #2
 2728 05f0 0B44     		add	r3, r3, r1
 2729 05f2 DB00     		lsls	r3, r3, #3
 2730 05f4 1344     		add	r3, r3, r2
 2731 05f6 C218     		adds	r2, r0, r3
 2732 05f8 D7F88C30 		ldr	r3, [r7, #140]
 2733 05fc 1344     		add	r3, r3, r2
 2734 05fe FF22     		movs	r2, #255
 2735 0600 1A70     		strb	r2, [r3]
 613:main.c        ****             {
 2736              		.loc 1 613 0 discriminator 3
 2737 0602 D7F88C30 		ldr	r3, [r7, #140]
 2738 0606 0133     		adds	r3, r3, #1
 2739 0608 C7F88C30 		str	r3, [r7, #140]
 2740              	.L72:
 613:main.c        ****             {
 2741              		.loc 1 613 0 is_stmt 0 discriminator 1
 2742 060c D7F88C30 		ldr	r3, [r7, #140]
 2743 0610 092B     		cmp	r3, #9
 2744 0612 E1DD     		ble	.L73
 2745              	.LBE21:
 611:main.c        ****         {
 2746              		.loc 1 611 0 is_stmt 1 discriminator 2
 2747 0614 D7F89030 		ldr	r3, [r7, #144]
 2748 0618 0133     		adds	r3, r3, #1
 2749 061a C7F89030 		str	r3, [r7, #144]
 2750              	.L71:
 611:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 61


 2751              		.loc 1 611 0 is_stmt 0 discriminator 1
 2752 061e D7F89030 		ldr	r3, [r7, #144]
 2753 0622 032B     		cmp	r3, #3
 2754 0624 C8DD     		ble	.L74
 2755              	.LBE20:
 616:main.c        ****             }
 617:main.c        ****         }
 618:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2756              		.loc 1 618 0 is_stmt 1 discriminator 2
 2757 0626 854A     		ldr	r2, .L210+4
 2758 0628 D7F8A030 		ldr	r3, [r7, #160]
 2759 062c 1344     		add	r3, r3, r2
 2760 062e 0022     		movs	r2, #0
 2761 0630 1A70     		strb	r2, [r3]
 597:main.c        ****     {
 2762              		.loc 1 597 0 discriminator 2
 2763 0632 D7F8A030 		ldr	r3, [r7, #160]
 2764 0636 0133     		adds	r3, r3, #1
 2765 0638 C7F8A030 		str	r3, [r7, #160]
 2766              	.L64:
 597:main.c        ****     {
 2767              		.loc 1 597 0 is_stmt 0 discriminator 1
 2768 063c D7F8A030 		ldr	r3, [r7, #160]
 2769 0640 3F2B     		cmp	r3, #63
 2770 0642 7FF76EAF 		ble	.L75
 2771              	.LBE16:
 619:main.c        ****     }
 620:main.c        ****     LED_amber1_Write(0);
 2772              		.loc 1 620 0 is_stmt 1
 2773 0646 0020     		movs	r0, #0
 2774 0648 FFF7FEFF 		bl	LED_amber1_Write
 621:main.c        ****     LED_amber2_Write(1);
 2775              		.loc 1 621 0
 2776 064c 0120     		movs	r0, #1
 2777 064e FFF7FEFF 		bl	LED_amber2_Write
 622:main.c        ****     LED_amber3_Write(0);
 2778              		.loc 1 622 0
 2779 0652 0020     		movs	r0, #0
 2780 0654 FFF7FEFF 		bl	LED_amber3_Write
 623:main.c        ****     LED_amber4_Write(0);
 2781              		.loc 1 623 0
 2782 0658 0020     		movs	r0, #0
 2783 065a FFF7FEFF 		bl	LED_amber4_Write
 624:main.c        ****     LED_green1_Write(dualSlider);
 2784              		.loc 1 624 0
 2785 065e 784B     		ldr	r3, .L210+8
 2786 0660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2787 0662 1846     		mov	r0, r3
 2788 0664 FFF7FEFF 		bl	LED_green1_Write
 625:main.c        ****     LED_red1_Write(currentNeck);
 2789              		.loc 1 625 0
 2790 0668 764B     		ldr	r3, .L210+12
 2791 066a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2792 066c 1846     		mov	r0, r3
 2793 066e FFF7FEFF 		bl	LED_red1_Write
 626:main.c        ****     LED_green2_Write(!currentNeck);
 2794              		.loc 1 626 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 62


 2795 0672 744B     		ldr	r3, .L210+12
 2796 0674 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2797 0676 002B     		cmp	r3, #0
 2798 0678 0CBF     		ite	eq
 2799 067a 0123     		moveq	r3, #1
 2800 067c 0023     		movne	r3, #0
 2801 067e DBB2     		uxtb	r3, r3
 2802 0680 1846     		mov	r0, r3
 2803 0682 FFF7FEFF 		bl	LED_green2_Write
 627:main.c        ****     ADC_SAR_Seq_1_Start();
 2804              		.loc 1 627 0
 2805 0686 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 628:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2806              		.loc 1 628 0
 2807 068a FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 629:main.c        **** 
 630:main.c        ****             
 631:main.c        ****     currentCopedent = necks[currentNeck];
 2808              		.loc 1 631 0
 2809 068e 6D4B     		ldr	r3, .L210+12
 2810 0690 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2811 0692 1A46     		mov	r2, r3
 2812 0694 6C4B     		ldr	r3, .L210+16
 2813 0696 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 2814 0698 6C4B     		ldr	r3, .L210+20
 2815 069a 1A70     		strb	r2, [r3]
 632:main.c        ****     CyDelay(10);
 2816              		.loc 1 632 0
 2817 069c 0A20     		movs	r0, #10
 2818 069e FFF7FEFF 		bl	CyDelay
 633:main.c        ****     
 634:main.c        ****     //set up for the OLED screen's first write
 635:main.c        ****     I2Cbuff1[0] = 1<<6;
 2819              		.loc 1 635 0
 2820 06a2 6B4B     		ldr	r3, .L210+24
 2821 06a4 4022     		movs	r2, #64
 2822 06a6 1A70     		strb	r2, [r3]
 636:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2823              		.loc 1 636 0
 2824 06a8 0022     		movs	r2, #0
 2825 06aa 0121     		movs	r1, #1
 2826 06ac 7020     		movs	r0, #112
 2827 06ae FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2828 06b2 0346     		mov	r3, r0
 2829 06b4 1A46     		mov	r2, r3
 2830 06b6 674B     		ldr	r3, .L210+28
 2831 06b8 1A60     		str	r2, [r3]
 637:main.c        ****     myGFX_init(128, 64);
 2832              		.loc 1 637 0
 2833 06ba 4021     		movs	r1, #64
 2834 06bc 8020     		movs	r0, #128
 2835 06be FFF7FEFF 		bl	myGFX_init
 638:main.c        ****     myGFX_setFont(0);
 2836              		.loc 1 638 0
 2837 06c2 0020     		movs	r0, #0
 2838 06c4 FFF7FEFF 		bl	myGFX_setFont
 639:main.c        ****     OLED_init(128, 64);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 63


 2839              		.loc 1 639 0
 2840 06c8 4021     		movs	r1, #64
 2841 06ca 8020     		movs	r0, #128
 2842 06cc FFF7FEFF 		bl	OLED_init
 640:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2843              		.loc 1 640 0
 2844 06d0 5E4B     		ldr	r3, .L210+20
 2845 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2846 06d4 1846     		mov	r0, r3
 2847 06d6 0323     		movs	r3, #3
 2848 06d8 0022     		movs	r2, #0
 2849 06da 0221     		movs	r1, #2
 2850 06dc FFF7FEFF 		bl	OLEDwriteInt
 641:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2851              		.loc 1 641 0
 2852 06e0 FFF7FEFF 		bl	OLEDgetCursor
 2853 06e4 0246     		mov	r2, r0
 2854 06e6 0323     		movs	r3, #3
 2855 06e8 0121     		movs	r1, #1
 2856 06ea 5B48     		ldr	r0, .L210+32
 2857 06ec FFF7FEFF 		bl	OLEDwriteString
 642:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH, 
 2858              		.loc 1 642 0
 2859 06f0 564B     		ldr	r3, .L210+20
 2860 06f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2861 06f4 1A46     		mov	r2, r3
 2862 06f6 1346     		mov	r3, r2
 2863 06f8 9B00     		lsls	r3, r3, #2
 2864 06fa 1344     		add	r3, r3, r2
 2865 06fc 5B00     		lsls	r3, r3, #1
 2866 06fe 574A     		ldr	r2, .L210+36
 2867 0700 9C18     		adds	r4, r3, r2
 2868 0702 FFF7FEFF 		bl	OLEDgetCursor
 2869 0706 0246     		mov	r2, r0
 2870 0708 0323     		movs	r3, #3
 2871 070a 0A21     		movs	r1, #10
 2872 070c 2046     		mov	r0, r4
 2873 070e FFF7FEFF 		bl	OLEDwriteString
 643:main.c        ****     OLED_draw(128, 64);
 2874              		.loc 1 643 0
 2875 0712 4021     		movs	r1, #64
 2876 0714 8020     		movs	r0, #128
 2877 0716 FFF7FEFF 		bl	OLED_draw
 644:main.c        ****     
 645:main.c        ****     
 646:main.c        ****     I2Cbuff1[0] = 1<<2;
 2878              		.loc 1 646 0
 2879 071a 4D4B     		ldr	r3, .L210+24
 2880 071c 0422     		movs	r2, #4
 2881 071e 1A70     		strb	r2, [r3]
 647:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2882              		.loc 1 647 0
 2883 0720 0022     		movs	r2, #0
 2884 0722 0121     		movs	r1, #1
 2885 0724 7020     		movs	r0, #112
 2886 0726 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2887 072a 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 64


 2888 072c 1A46     		mov	r2, r3
 2889 072e 494B     		ldr	r3, .L210+28
 2890 0730 1A60     		str	r2, [r3]
 2891              	.LBB22:
 648:main.c        **** 
 649:main.c        ****     for (int w = 0; w < 8; w++)
 2892              		.loc 1 649 0
 2893 0732 0023     		movs	r3, #0
 2894 0734 C7F88830 		str	r3, [r7, #136]
 2895 0738 18E0     		b	.L76
 2896              	.L77:
 650:main.c        ****     {
 651:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 2897              		.loc 1 651 0 discriminator 3
 2898 073a D7F88830 		ldr	r3, [r7, #136]
 2899 073e DBB2     		uxtb	r3, r3
 2900 0740 0833     		adds	r3, r3, #8
 2901 0742 DAB2     		uxtb	r2, r3
 2902 0744 424B     		ldr	r3, .L210+24
 2903 0746 1A70     		strb	r2, [r3]
 652:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2904              		.loc 1 652 0 discriminator 3
 2905 0748 0022     		movs	r2, #0
 2906 074a 0121     		movs	r1, #1
 2907 074c 7220     		movs	r0, #114
 2908 074e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2909 0752 0346     		mov	r3, r0
 2910 0754 1A46     		mov	r2, r3
 2911 0756 3F4B     		ldr	r3, .L210+28
 2912 0758 1A60     		str	r2, [r3]
 653:main.c        ****         OLED_init(128, 32);
 2913              		.loc 1 653 0 discriminator 3
 2914 075a 2021     		movs	r1, #32
 2915 075c 8020     		movs	r0, #128
 2916 075e FFF7FEFF 		bl	OLED_init
 649:main.c        ****     {
 2917              		.loc 1 649 0 discriminator 3
 2918 0762 D7F88830 		ldr	r3, [r7, #136]
 2919 0766 0133     		adds	r3, r3, #1
 2920 0768 C7F88830 		str	r3, [r7, #136]
 2921              	.L76:
 649:main.c        ****     {
 2922              		.loc 1 649 0 is_stmt 0 discriminator 1
 2923 076c D7F88830 		ldr	r3, [r7, #136]
 2924 0770 072B     		cmp	r3, #7
 2925 0772 E2DD     		ble	.L77
 2926              	.LBE22:
 654:main.c        ****     }
 655:main.c        **** 
 656:main.c        ****     //initialize the macro knob adc to scan all knobs
 657:main.c        ****     I2Cbuff1[0] = 1<<2;
 2927              		.loc 1 657 0 is_stmt 1
 2928 0774 364B     		ldr	r3, .L210+24
 2929 0776 0422     		movs	r2, #4
 2930 0778 1A70     		strb	r2, [r3]
 658:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2931              		.loc 1 658 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 65


 2932 077a 0022     		movs	r2, #0
 2933 077c 0121     		movs	r1, #1
 2934 077e 7020     		movs	r0, #112
 2935 0780 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2936 0784 0346     		mov	r3, r0
 2937 0786 1A46     		mov	r2, r3
 2938 0788 324B     		ldr	r3, .L210+28
 2939 078a 1A60     		str	r2, [r3]
 659:main.c        ****     main_counter = 9;
 2940              		.loc 1 659 0
 2941 078c 344B     		ldr	r3, .L210+40
 2942 078e 0922     		movs	r2, #9
 2943 0790 1A70     		strb	r2, [r3]
 660:main.c        **** 
 661:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 2944              		.loc 1 661 0
 2945 0792 2F4B     		ldr	r3, .L210+24
 2946 0794 0F22     		movs	r2, #15
 2947 0796 1A70     		strb	r2, [r3]
 662:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 2948              		.loc 1 662 0
 2949 0798 0022     		movs	r2, #0
 2950 079a 0121     		movs	r1, #1
 2951 079c 3520     		movs	r0, #53
 2952 079e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2953 07a2 0346     		mov	r3, r0
 2954 07a4 1A46     		mov	r2, r3
 2955 07a6 2B4B     		ldr	r3, .L210+28
 2956 07a8 1A60     		str	r2, [r3]
 663:main.c        ****     
 664:main.c        **** 
 665:main.c        ****     SPIS_1_Start();  
 2957              		.loc 1 665 0
 2958 07aa FFF7FEFF 		bl	SPIS_1_Start
 666:main.c        ****     SPIM_1_Start();  
 2959              		.loc 1 666 0
 2960 07ae FFF7FEFF 		bl	SPIM_1_Start
 667:main.c        ****     SPIS_2_Start(); 
 2961              		.loc 1 667 0
 2962 07b2 FFF7FEFF 		bl	SPIS_2_Start
 668:main.c        ****     DmaTxConfiguration();
 2963              		.loc 1 668 0
 2964 07b6 FFF7FEFF 		bl	DmaTxConfiguration
 669:main.c        ****     DmaRxConfiguration();
 2965              		.loc 1 669 0
 2966 07ba FFF7FEFF 		bl	DmaRxConfiguration
 670:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 2967              		.loc 1 670 0
 2968 07be 2948     		ldr	r0, .L210+44
 2969 07c0 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 671:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2970              		.loc 1 671 0
 2971 07c4 2848     		ldr	r0, .L210+48
 2972 07c6 FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 672:main.c        ****     
 673:main.c        ****     myArray[30] = 254;
 2973              		.loc 1 673 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 66


 2974 07ca 284B     		ldr	r3, .L210+52
 2975 07cc FE22     		movs	r2, #254
 2976 07ce 9A77     		strb	r2, [r3, #30]
 674:main.c        ****     myArray[31] = 253;
 2977              		.loc 1 674 0
 2978 07d0 264B     		ldr	r3, .L210+52
 2979 07d2 FD22     		movs	r2, #253
 2980 07d4 DA77     		strb	r2, [r3, #31]
 675:main.c        **** 
 676:main.c        ****     main_counter = 0;
 2981              		.loc 1 676 0
 2982 07d6 224B     		ldr	r3, .L210+40
 2983 07d8 0022     		movs	r2, #0
 2984 07da 1A70     		strb	r2, [r3]
 2985              	.L201:
 677:main.c        **** 
 678:main.c        **** 	for(;;)
 679:main.c        ****     {
 680:main.c        ****         
 681:main.c        ****         if (parseThatMF)
 2986              		.loc 1 681 0
 2987 07dc 244B     		ldr	r3, .L210+56
 2988 07de 1B78     		ldrb	r3, [r3]
 2989 07e0 DBB2     		uxtb	r3, r3
 2990 07e2 002B     		cmp	r3, #0
 2991 07e4 01D0     		beq	.L78
 682:main.c        ****         {
 683:main.c        ****             parseSysex();
 2992              		.loc 1 683 0
 2993 07e6 FFF7FEFF 		bl	parseSysex
 2994              	.L78:
 684:main.c        ****         }
 685:main.c        ****        
 686:main.c        ****         //testpin3_Write(1);
 687:main.c        ****        //sense levers and pedals
 688:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2995              		.loc 1 688 0
 2996 07ea 1D4B     		ldr	r3, .L210+40
 2997 07ec 1B78     		ldrb	r3, [r3]
 2998 07ee DBB2     		uxtb	r3, r3
 2999 07f0 1A46     		mov	r2, r3
 3000 07f2 204B     		ldr	r3, .L210+60
 3001 07f4 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 3002 07f8 1F4B     		ldr	r3, .L210+64
 3003 07fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3004 07fc 9A42     		cmp	r2, r3
 3005 07fe 49D0     		beq	.L79
 3006              	.LBB23:
 689:main.c        ****         {
 690:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 3007              		.loc 1 690 0
 3008 0800 174B     		ldr	r3, .L210+40
 3009 0802 1B78     		ldrb	r3, [r3]
 3010 0804 DBB2     		uxtb	r3, r3
 3011 0806 1A46     		mov	r2, r3
 3012 0808 1A4B     		ldr	r3, .L210+60
 3013 080a 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 67


 3014 080e 1A46     		mov	r2, r3
 3015 0810 0123     		movs	r3, #1
 3016 0812 9340     		lsls	r3, r3, r2
 3017 0814 DAB2     		uxtb	r2, r3
 3018 0816 0E4B     		ldr	r3, .L210+24
 3019 0818 1A70     		strb	r2, [r3]
 691:main.c        ****             if (mux_states[main_counter][0] == 5) //slow down I2C communication if it's going throu
 3020              		.loc 1 691 0
 3021 081a 114B     		ldr	r3, .L210+40
 3022 081c 1B78     		ldrb	r3, [r3]
 3023 081e DBB2     		uxtb	r3, r3
 3024 0820 1A46     		mov	r2, r3
 3025 0822 144B     		ldr	r3, .L210+60
 3026 0824 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 3027 0828 052B     		cmp	r3, #5
 3028 082a 27D1     		bne	.L80
 692:main.c        ****             {
 693:main.c        ****                 Clock_2_SetDividerValue(13); //slow speed 400k
 3029              		.loc 1 693 0
 3030 082c 0121     		movs	r1, #1
 3031 082e 0C20     		movs	r0, #12
 3032 0830 FFF7FEFF 		bl	Clock_2_SetDividerRegister
 3033 0834 26E0     		b	.L81
 3034              	.L211:
 3035 0836 00BF     		.align	2
 3036              	.L210:
 3037 0838 00000000 		.word	controlNamesArray
 3038 083c 00000000 		.word	presetAlreadyDisplayed
 3039 0840 00000000 		.word	dualSlider
 3040 0844 00000000 		.word	currentNeck
 3041 0848 00000000 		.word	necks
 3042 084c 00000000 		.word	currentCopedent
 3043 0850 00000000 		.word	I2Cbuff1
 3044 0854 00000000 		.word	status
 3045 0858 00040000 		.word	.LC0
 3046 085c 00000000 		.word	copedentNamesArray
 3047 0860 00000000 		.word	main_counter
 3048 0864 00000000 		.word	spis_1_ss
 3049 0868 00000000 		.word	spis_2_ss
 3050 086c 00000000 		.word	myArray
 3051 0870 00000000 		.word	parseThatMF
 3052 0874 00000000 		.word	mux_states
 3053 0878 00000000 		.word	last_mux
 3054              	.L80:
 694:main.c        ****             }
 695:main.c        ****             else
 696:main.c        ****             {
 697:main.c        ****                 Clock_2_SetDividerValue(5); //otherwise full speed 1000k
 3055              		.loc 1 697 0
 3056 087c 0121     		movs	r1, #1
 3057 087e 0420     		movs	r0, #4
 3058 0880 FFF7FEFF 		bl	Clock_2_SetDividerRegister
 3059              	.L81:
 698:main.c        ****             }
 699:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 3060              		.loc 1 699 0
 3061 0884 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 68


 3062 0886 0121     		movs	r1, #1
 3063 0888 7020     		movs	r0, #112
 3064 088a FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3065 088e 0346     		mov	r3, r0
 3066 0890 87F82F30 		strb	r3, [r7, #47]
 3067              	.L79:
 3068              	.LBE23:
 700:main.c        ****         }
 701:main.c        ****         last_mux = mux_states[main_counter][0];
 3069              		.loc 1 701 0
 3070 0894 A24B     		ldr	r3, .L212
 3071 0896 1B78     		ldrb	r3, [r3]
 3072 0898 DBB2     		uxtb	r3, r3
 3073 089a 1A46     		mov	r2, r3
 3074 089c A14B     		ldr	r3, .L212+4
 3075 089e 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 3076 08a2 A14B     		ldr	r3, .L212+8
 3077 08a4 1A70     		strb	r2, [r3]
 702:main.c        ****         
 703:main.c        ****         
 704:main.c        ****         CyDelayUs(10);
 3078              		.loc 1 704 0
 3079 08a6 0A20     		movs	r0, #10
 3080 08a8 FFF7FEFF 		bl	CyDelayUs
 705:main.c        ****         if (mux_states[main_counter][0] == 5)
 3081              		.loc 1 705 0
 3082 08ac 9C4B     		ldr	r3, .L212
 3083 08ae 1B78     		ldrb	r3, [r3]
 3084 08b0 DBB2     		uxtb	r3, r3
 3085 08b2 1A46     		mov	r2, r3
 3086 08b4 9B4B     		ldr	r3, .L212+4
 3087 08b6 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 3088 08ba 052B     		cmp	r3, #5
 3089 08bc 1DD1     		bne	.L82
 706:main.c        ****         {
 707:main.c        ****             if (!i2c_skipped[main_counter])
 3090              		.loc 1 707 0
 3091 08be 984B     		ldr	r3, .L212
 3092 08c0 1B78     		ldrb	r3, [r3]
 3093 08c2 DBB2     		uxtb	r3, r3
 3094 08c4 1A46     		mov	r2, r3
 3095 08c6 994B     		ldr	r3, .L212+12
 3096 08c8 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3097 08ca 002B     		cmp	r3, #0
 3098 08cc 15D1     		bne	.L82
 708:main.c        ****             {
 709:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 3099              		.loc 1 709 0
 3100 08ce 944B     		ldr	r3, .L212
 3101 08d0 1B78     		ldrb	r3, [r3]
 3102 08d2 DBB2     		uxtb	r3, r3
 3103 08d4 934A     		ldr	r2, .L212+4
 3104 08d6 5B00     		lsls	r3, r3, #1
 3105 08d8 1344     		add	r3, r3, r2
 3106 08da 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3107 08dc 1A46     		mov	r2, r3
 3108 08de 0123     		movs	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 69


 3109 08e0 9340     		lsls	r3, r3, r2
 3110 08e2 DAB2     		uxtb	r2, r3
 3111 08e4 924B     		ldr	r3, .L212+16
 3112 08e6 1A70     		strb	r2, [r3]
 710:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 3113              		.loc 1 710 0
 3114 08e8 0022     		movs	r2, #0
 3115 08ea 0121     		movs	r1, #1
 3116 08ec 7120     		movs	r0, #113
 3117 08ee FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3118 08f2 0346     		mov	r3, r0
 3119 08f4 1A46     		mov	r2, r3
 3120 08f6 8F4B     		ldr	r3, .L212+20
 3121 08f8 1A60     		str	r2, [r3]
 3122              	.L82:
 711:main.c        ****             }
 712:main.c        ****         }
 713:main.c        **** 
 714:main.c        ****         CyDelayUs(10);
 3123              		.loc 1 714 0
 3124 08fa 0A20     		movs	r0, #10
 3125 08fc FFF7FEFF 		bl	CyDelayUs
 715:main.c        ****         //if it's a hall sensor
 716:main.c        **** 
 717:main.c        ****         //temporarily don't scan vertical knee lever, should be <10 normally
 718:main.c        ****         if (main_counter < 10)
 3126              		.loc 1 718 0
 3127 0900 874B     		ldr	r3, .L212
 3128 0902 1B78     		ldrb	r3, [r3]
 3129 0904 DBB2     		uxtb	r3, r3
 3130 0906 092B     		cmp	r3, #9
 3131 0908 00F2A180 		bhi	.L83
 719:main.c        ****         {
 720:main.c        ****             if (!i2c_skipped[main_counter])
 3132              		.loc 1 720 0
 3133 090c 844B     		ldr	r3, .L212
 3134 090e 1B78     		ldrb	r3, [r3]
 3135 0910 DBB2     		uxtb	r3, r3
 3136 0912 1A46     		mov	r2, r3
 3137 0914 854B     		ldr	r3, .L212+12
 3138 0916 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3139 0918 002B     		cmp	r3, #0
 3140 091a 40F09880 		bne	.L83
 721:main.c        ****             {
 722:main.c        ****                 //CyDelayUs(100);
 723:main.c        ****                 I2Cbuff1[0] = 0x0E;
 3141              		.loc 1 723 0
 3142 091e 844B     		ldr	r3, .L212+16
 3143 0920 0E22     		movs	r2, #14
 3144 0922 1A70     		strb	r2, [r3]
 724:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 3145              		.loc 1 724 0
 3146 0924 0222     		movs	r2, #2
 3147 0926 0121     		movs	r1, #1
 3148 0928 3620     		movs	r0, #54
 3149 092a FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3150 092e 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 70


 3151 0930 1A46     		mov	r2, r3
 3152 0932 804B     		ldr	r3, .L212+20
 3153 0934 1A60     		str	r2, [r3]
 725:main.c        ****                 if (status == 0)
 3154              		.loc 1 725 0
 3155 0936 7F4B     		ldr	r3, .L212+20
 3156 0938 1B68     		ldr	r3, [r3]
 3157 093a 002B     		cmp	r3, #0
 3158 093c 08D1     		bne	.L84
 726:main.c        ****                 {
 727:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 3159              		.loc 1 727 0
 3160 093e 0122     		movs	r2, #1
 3161 0940 0221     		movs	r1, #2
 3162 0942 3620     		movs	r0, #54
 3163 0944 FFF7FEFF 		bl	I2C_MasterReadBlocking
 3164 0948 0346     		mov	r3, r0
 3165 094a 1A46     		mov	r2, r3
 3166 094c 794B     		ldr	r3, .L212+20
 3167 094e 1A60     		str	r2, [r3]
 3168              	.L84:
 728:main.c        ****                 }
 729:main.c        ****                 if (status  == 0)
 3169              		.loc 1 729 0
 3170 0950 784B     		ldr	r3, .L212+20
 3171 0952 1B68     		ldr	r3, [r3]
 3172 0954 002B     		cmp	r3, #0
 3173 0956 7AD1     		bne	.L83
 730:main.c        ****                 {
 731:main.c        ****                     //CyDelayUs(100);
 732:main.c        ****                     angle[main_counter] = I2Cbuff2[0] << 8;
 3174              		.loc 1 732 0
 3175 0958 714B     		ldr	r3, .L212
 3176 095a 1B78     		ldrb	r3, [r3]
 3177 095c DBB2     		uxtb	r3, r3
 3178 095e 1A46     		mov	r2, r3
 3179 0960 754B     		ldr	r3, .L212+24
 3180 0962 1B78     		ldrb	r3, [r3]
 3181 0964 DBB2     		uxtb	r3, r3
 3182 0966 9BB2     		uxth	r3, r3
 3183 0968 1B02     		lsls	r3, r3, #8
 3184 096a 99B2     		uxth	r1, r3
 3185 096c 734B     		ldr	r3, .L212+28
 3186 096e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 733:main.c        ****                     angle[main_counter] +=  I2Cbuff2[1];
 3187              		.loc 1 733 0
 3188 0972 714B     		ldr	r3, .L212+24
 3189 0974 5B78     		ldrb	r3, [r3, #1]
 3190 0976 D8B2     		uxtb	r0, r3
 3191 0978 694B     		ldr	r3, .L212
 3192 097a 1B78     		ldrb	r3, [r3]
 3193 097c DBB2     		uxtb	r3, r3
 3194 097e 1946     		mov	r1, r3
 3195 0980 1A46     		mov	r2, r3
 3196 0982 6E4B     		ldr	r3, .L212+28
 3197 0984 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3198 0988 83B2     		uxth	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 71


 3199 098a 1344     		add	r3, r3, r2
 3200 098c 9AB2     		uxth	r2, r3
 3201 098e 6B4B     		ldr	r3, .L212+28
 3202 0990 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 734:main.c        ****                     
 735:main.c        ****                     if (leverCalibrationMode)
 3203              		.loc 1 735 0
 3204 0994 6A4B     		ldr	r3, .L212+32
 3205 0996 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3206 0998 002B     		cmp	r3, #0
 3207 099a 58D0     		beq	.L83
 736:main.c        ****                     {
 737:main.c        ****                         if (angle[main_counter] < pedals_low[main_counter])
 3208              		.loc 1 737 0
 3209 099c 604B     		ldr	r3, .L212
 3210 099e 1B78     		ldrb	r3, [r3]
 3211 09a0 DBB2     		uxtb	r3, r3
 3212 09a2 1A46     		mov	r2, r3
 3213 09a4 654B     		ldr	r3, .L212+28
 3214 09a6 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3215 09aa 5D4B     		ldr	r3, .L212
 3216 09ac 1B78     		ldrb	r3, [r3]
 3217 09ae DBB2     		uxtb	r3, r3
 3218 09b0 1946     		mov	r1, r3
 3219 09b2 644B     		ldr	r3, .L212+36
 3220 09b4 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3221 09b8 9A42     		cmp	r2, r3
 3222 09ba 2AD2     		bcs	.L85
 738:main.c        ****                         {
 739:main.c        ****                             if (main_counter == 0)
 3223              		.loc 1 739 0
 3224 09bc 584B     		ldr	r3, .L212
 3225 09be 1B78     		ldrb	r3, [r3]
 3226 09c0 DBB2     		uxtb	r3, r3
 3227 09c2 002B     		cmp	r3, #0
 3228 09c4 17D1     		bne	.L86
 740:main.c        ****                             {
 741:main.c        ****                                 if (angle[main_counter] != 0)
 3229              		.loc 1 741 0
 3230 09c6 564B     		ldr	r3, .L212
 3231 09c8 1B78     		ldrb	r3, [r3]
 3232 09ca DBB2     		uxtb	r3, r3
 3233 09cc 1A46     		mov	r2, r3
 3234 09ce 5B4B     		ldr	r3, .L212+28
 3235 09d0 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3236 09d4 002B     		cmp	r3, #0
 3237 09d6 1CD0     		beq	.L85
 742:main.c        ****                                 {
 743:main.c        ****                                      pedals_low[main_counter] = angle[main_counter];
 3238              		.loc 1 743 0
 3239 09d8 514B     		ldr	r3, .L212
 3240 09da 1B78     		ldrb	r3, [r3]
 3241 09dc DBB2     		uxtb	r3, r3
 3242 09de 1A46     		mov	r2, r3
 3243 09e0 4F4B     		ldr	r3, .L212
 3244 09e2 1B78     		ldrb	r3, [r3]
 3245 09e4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 72


 3246 09e6 1946     		mov	r1, r3
 3247 09e8 544B     		ldr	r3, .L212+28
 3248 09ea 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3249 09ee 554B     		ldr	r3, .L212+36
 3250 09f0 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3251 09f4 0DE0     		b	.L85
 3252              	.L86:
 744:main.c        ****                                      
 745:main.c        ****                                 }
 746:main.c        ****                             }
 747:main.c        ****                             else
 748:main.c        ****                             {
 749:main.c        ****                                 pedals_low[main_counter] = angle[main_counter];
 3253              		.loc 1 749 0
 3254 09f6 4A4B     		ldr	r3, .L212
 3255 09f8 1B78     		ldrb	r3, [r3]
 3256 09fa DBB2     		uxtb	r3, r3
 3257 09fc 1A46     		mov	r2, r3
 3258 09fe 484B     		ldr	r3, .L212
 3259 0a00 1B78     		ldrb	r3, [r3]
 3260 0a02 DBB2     		uxtb	r3, r3
 3261 0a04 1946     		mov	r1, r3
 3262 0a06 4D4B     		ldr	r3, .L212+28
 3263 0a08 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3264 0a0c 4D4B     		ldr	r3, .L212+36
 3265 0a0e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3266              	.L85:
 750:main.c        ****                                
 751:main.c        ****                             }
 752:main.c        ****                             
 753:main.c        ****                         }
 754:main.c        ****                         if (angle[main_counter] > pedals_high[main_counter])
 3267              		.loc 1 754 0
 3268 0a12 434B     		ldr	r3, .L212
 3269 0a14 1B78     		ldrb	r3, [r3]
 3270 0a16 DBB2     		uxtb	r3, r3
 3271 0a18 1A46     		mov	r2, r3
 3272 0a1a 484B     		ldr	r3, .L212+28
 3273 0a1c 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3274 0a20 3F4B     		ldr	r3, .L212
 3275 0a22 1B78     		ldrb	r3, [r3]
 3276 0a24 DBB2     		uxtb	r3, r3
 3277 0a26 1946     		mov	r1, r3
 3278 0a28 474B     		ldr	r3, .L212+40
 3279 0a2a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3280 0a2e 9A42     		cmp	r2, r3
 3281 0a30 0DD9     		bls	.L83
 755:main.c        ****                         {
 756:main.c        ****                              pedals_high[main_counter] = angle[main_counter];
 3282              		.loc 1 756 0
 3283 0a32 3B4B     		ldr	r3, .L212
 3284 0a34 1B78     		ldrb	r3, [r3]
 3285 0a36 DBB2     		uxtb	r3, r3
 3286 0a38 1A46     		mov	r2, r3
 3287 0a3a 394B     		ldr	r3, .L212
 3288 0a3c 1B78     		ldrb	r3, [r3]
 3289 0a3e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 73


 3290 0a40 1946     		mov	r1, r3
 3291 0a42 3E4B     		ldr	r3, .L212+28
 3292 0a44 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3293 0a48 3F4B     		ldr	r3, .L212+40
 3294 0a4a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3295              	.L83:
 757:main.c        ****                              
 758:main.c        ****                         }
 759:main.c        ****                     }
 760:main.c        ****                 }
 761:main.c        ****             }
 762:main.c        ****         }
 763:main.c        ****         
 764:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 765:main.c        ****         if (main_counter == 9)
 3296              		.loc 1 765 0
 3297 0a4e 344B     		ldr	r3, .L212
 3298 0a50 1B78     		ldrb	r3, [r3]
 3299 0a52 DBB2     		uxtb	r3, r3
 3300 0a54 092B     		cmp	r3, #9
 3301 0a56 40F01681 		bne	.L88
 766:main.c        ****         {
 767:main.c        ****             if (!i2c_skipped[main_counter])
 3302              		.loc 1 767 0
 3303 0a5a 314B     		ldr	r3, .L212
 3304 0a5c 1B78     		ldrb	r3, [r3]
 3305 0a5e DBB2     		uxtb	r3, r3
 3306 0a60 1A46     		mov	r2, r3
 3307 0a62 324B     		ldr	r3, .L212+12
 3308 0a64 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3309 0a66 002B     		cmp	r3, #0
 3310 0a68 40F05C81 		bne	.L100
 768:main.c        ****             {
 769:main.c        ****                 //scan the knob adc
 770:main.c        ****                 I2Cbuff1[0] = 0x0;      
 3311              		.loc 1 770 0
 3312 0a6c 304B     		ldr	r3, .L212+16
 3313 0a6e 0022     		movs	r2, #0
 3314 0a70 1A70     		strb	r2, [r3]
 771:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 3315              		.loc 1 771 0
 3316 0a72 0022     		movs	r2, #0
 3317 0a74 1021     		movs	r1, #16
 3318 0a76 3520     		movs	r0, #53
 3319 0a78 FFF7FEFF 		bl	I2C_MasterReadBlocking
 3320 0a7c 0346     		mov	r3, r0
 3321 0a7e 1A46     		mov	r2, r3
 3322 0a80 2C4B     		ldr	r3, .L212+20
 3323 0a82 1A60     		str	r2, [r3]
 772:main.c        ****                 if (status == 0)
 3324              		.loc 1 772 0
 3325 0a84 2B4B     		ldr	r3, .L212+20
 3326 0a86 1B68     		ldr	r3, [r3]
 3327 0a88 002B     		cmp	r3, #0
 3328 0a8a 40F04B81 		bne	.L100
 3329              	.LBB24:
 773:main.c        ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 74


 774:main.c        ****                     for (int i = 0; i < 8; i++)
 3330              		.loc 1 774 0
 3331 0a8e 0023     		movs	r3, #0
 3332 0a90 C7F88430 		str	r3, [r7, #132]
 3333 0a94 9CE0     		b	.L90
 3334              	.L97:
 3335              	.LBB25:
 775:main.c        ****                     {
 776:main.c        ****                        uint8_t myKnob = i+whichMacroPageIsActive;
 3336              		.loc 1 776 0
 3337 0a96 D7F88430 		ldr	r3, [r7, #132]
 3338 0a9a DAB2     		uxtb	r2, r3
 3339 0a9c 2B4B     		ldr	r3, .L212+44
 3340 0a9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3341 0aa0 1344     		add	r3, r3, r2
 3342 0aa2 BB71     		strb	r3, [r7, #6]
 777:main.c        ****                         uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[(i*2) + 1] & 255)) & 40
 3343              		.loc 1 777 0
 3344 0aa4 D7F88430 		ldr	r3, [r7, #132]
 3345 0aa8 5B00     		lsls	r3, r3, #1
 3346 0aaa 234A     		ldr	r2, .L212+24
 3347 0aac D35C     		ldrb	r3, [r2, r3]
 3348 0aae DBB2     		uxtb	r3, r3
 3349 0ab0 9BB2     		uxth	r3, r3
 3350 0ab2 1B02     		lsls	r3, r3, #8
 3351 0ab4 9AB2     		uxth	r2, r3
 3352 0ab6 D7F88430 		ldr	r3, [r7, #132]
 3353 0aba 5B00     		lsls	r3, r3, #1
 3354 0abc 0133     		adds	r3, r3, #1
 3355 0abe 1E49     		ldr	r1, .L212+24
 3356 0ac0 CB5C     		ldrb	r3, [r1, r3]
 3357 0ac2 DBB2     		uxtb	r3, r3
 3358 0ac4 9BB2     		uxth	r3, r3
 3359 0ac6 1344     		add	r3, r3, r2
 3360 0ac8 9BB2     		uxth	r3, r3
 3361 0aca C3F30B03 		ubfx	r3, r3, #0, #12
 3362 0ace BB80     		strh	r3, [r7, #4]	@ movhi
 778:main.c        ****                         int16_t tempSquished = 255 - (tempInt >> 4);
 3363              		.loc 1 778 0
 3364 0ad0 BB88     		ldrh	r3, [r7, #4]
 3365 0ad2 1B09     		lsrs	r3, r3, #4
 3366 0ad4 9BB2     		uxth	r3, r3
 3367 0ad6 C3F1FF03 		rsb	r3, r3, #255
 3368 0ada 9BB2     		uxth	r3, r3
 3369 0adc 7B80     		strh	r3, [r7, #2]	@ movhi
 779:main.c        ****                         if (knobFrozen[myKnob] == 1)
 3370              		.loc 1 779 0
 3371 0ade BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3372 0ae0 1B4A     		ldr	r2, .L212+48
 3373 0ae2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3374 0ae4 012B     		cmp	r3, #1
 3375 0ae6 39D1     		bne	.L91
 780:main.c        ****                         {
 781:main.c        ****                             if ((tempSquished > prevMacroKnobValues[myKnob] + 4) || (tempSquished <
 3376              		.loc 1 781 0
 3377 0ae8 B7F90220 		ldrsh	r2, [r7, #2]
 3378 0aec BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 75


 3379 0aee 1949     		ldr	r1, .L212+52
 3380 0af0 31F91330 		ldrsh	r3, [r1, r3, lsl #1]
 3381 0af4 0433     		adds	r3, r3, #4
 3382 0af6 9A42     		cmp	r2, r3
 3383 0af8 08DC     		bgt	.L92
 3384              		.loc 1 781 0 is_stmt 0 discriminator 1
 3385 0afa B7F90220 		ldrsh	r2, [r7, #2]
 3386 0afe BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3387 0b00 1449     		ldr	r1, .L212+52
 3388 0b02 31F91330 		ldrsh	r3, [r1, r3, lsl #1]
 3389 0b06 043B     		subs	r3, r3, #4
 3390 0b08 9A42     		cmp	r2, r3
 3391 0b0a 5CDA     		bge	.L94
 3392              	.L92:
 782:main.c        ****                             {
 783:main.c        ****                                 //update
 784:main.c        ****                                 macroKnobValues[myKnob] = tempSquished;
 3393              		.loc 1 784 0 is_stmt 1
 3394 0b0c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3395 0b0e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3396 0b10 D1B2     		uxtb	r1, r2
 3397 0b12 114A     		ldr	r2, .L212+56
 3398 0b14 D154     		strb	r1, [r2, r3]
 785:main.c        ****                                 knobFrozen[myKnob] = 0;
 3399              		.loc 1 785 0
 3400 0b16 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3401 0b18 0D4A     		ldr	r2, .L212+48
 3402 0b1a 0021     		movs	r1, #0
 3403 0b1c D154     		strb	r1, [r2, r3]
 3404 0b1e 52E0     		b	.L94
 3405              	.L213:
 3406              		.align	2
 3407              	.L212:
 3408 0b20 00000000 		.word	main_counter
 3409 0b24 00000000 		.word	mux_states
 3410 0b28 00000000 		.word	last_mux
 3411 0b2c 00000000 		.word	i2c_skipped
 3412 0b30 00000000 		.word	I2Cbuff1
 3413 0b34 00000000 		.word	status
 3414 0b38 00000000 		.word	I2Cbuff2
 3415 0b3c 00000000 		.word	angle
 3416 0b40 00000000 		.word	leverCalibrationMode
 3417 0b44 00000000 		.word	pedals_low
 3418 0b48 00000000 		.word	pedals_high
 3419 0b4c 00000000 		.word	whichMacroPageIsActive
 3420 0b50 00000000 		.word	knobFrozen
 3421 0b54 00000000 		.word	prevMacroKnobValues
 3422 0b58 00000000 		.word	macroKnobValues
 3423              	.L91:
 786:main.c        ****                             }
 787:main.c        ****                         }
 788:main.c        ****                         else
 789:main.c        ****                         {
 790:main.c        ****                             macroKnobValues[myKnob] = tempSquished; //now squish it down to 8 bit f
 3424              		.loc 1 790 0
 3425 0b5c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3426 0b5e 7A88     		ldrh	r2, [r7, #2]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 76


 3427 0b60 D1B2     		uxtb	r1, r2
 3428 0b62 8C4A     		ldr	r2, .L214
 3429 0b64 D154     		strb	r1, [r2, r3]
 791:main.c        ****                             if (midiSendOn)
 3430              		.loc 1 791 0
 3431 0b66 8C4B     		ldr	r3, .L214+4
 3432 0b68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3433 0b6a 002B     		cmp	r3, #0
 3434 0b6c 26D0     		beq	.L95
 792:main.c        ****                             {
 793:main.c        ****                                 macroKnobValues7bit[myKnob] = macroKnobValues[myKnob] >> 1;
 3435              		.loc 1 793 0
 3436 0b6e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3437 0b70 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 3438 0b72 8849     		ldr	r1, .L214
 3439 0b74 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 3440 0b76 5208     		lsrs	r2, r2, #1
 3441 0b78 D1B2     		uxtb	r1, r2
 3442 0b7a 884A     		ldr	r2, .L214+8
 3443 0b7c D154     		strb	r1, [r2, r3]
 794:main.c        ****                                 if (macroKnobValues7bit[myKnob] != prevMacroKnobValues7bit[myKnob])
 3444              		.loc 1 794 0
 3445 0b7e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3446 0b80 864A     		ldr	r2, .L214+8
 3447 0b82 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3448 0b84 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3449 0b86 8649     		ldr	r1, .L214+12
 3450 0b88 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 3451 0b8a 9A42     		cmp	r2, r3
 3452 0b8c 10D0     		beq	.L96
 795:main.c        ****                                 {
 796:main.c        ****                                     sendMIDIControlChange(i+1 + (3*whichMacroPageIsActive), macroKn
 3453              		.loc 1 796 0
 3454 0b8e D7F88430 		ldr	r3, [r7, #132]
 3455 0b92 5A1C     		adds	r2, r3, #1
 3456 0b94 834B     		ldr	r3, .L214+16
 3457 0b96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3458 0b98 1946     		mov	r1, r3
 3459 0b9a 0B46     		mov	r3, r1
 3460 0b9c 5B00     		lsls	r3, r3, #1
 3461 0b9e 0B44     		add	r3, r3, r1
 3462 0ba0 D018     		adds	r0, r2, r3
 3463 0ba2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3464 0ba4 7D4A     		ldr	r2, .L214+8
 3465 0ba6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3466 0ba8 0022     		movs	r2, #0
 3467 0baa 1946     		mov	r1, r3
 3468 0bac FFF7FEFF 		bl	sendMIDIControlChange
 3469              	.L96:
 797:main.c        ****                                 }
 798:main.c        ****                                 prevMacroKnobValues7bit[myKnob] = macroKnobValues7bit[myKnob];
 3470              		.loc 1 798 0
 3471 0bb0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3472 0bb2 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 3473 0bb4 7949     		ldr	r1, .L214+8
 3474 0bb6 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3475 0bb8 794A     		ldr	r2, .L214+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 77


 3476 0bba D154     		strb	r1, [r2, r3]
 3477              	.L95:
 799:main.c        ****                             }
 800:main.c        ****                             prevMacroKnobValues[myKnob] =  tempSquished;
 3478              		.loc 1 800 0
 3479 0bbc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3480 0bbe 7A49     		ldr	r1, .L214+20
 3481 0bc0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3482 0bc2 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 3483              	.L94:
 3484              	.LBE25:
 774:main.c        ****                     {
 3485              		.loc 1 774 0 discriminator 2
 3486 0bc6 D7F88430 		ldr	r3, [r7, #132]
 3487 0bca 0133     		adds	r3, r3, #1
 3488 0bcc C7F88430 		str	r3, [r7, #132]
 3489              	.L90:
 774:main.c        ****                     {
 3490              		.loc 1 774 0 is_stmt 0 discriminator 1
 3491 0bd0 D7F88430 		ldr	r3, [r7, #132]
 3492 0bd4 072B     		cmp	r3, #7
 3493 0bd6 7FF75EAF 		ble	.L97
 3494              	.LBE24:
 801:main.c        ****                         }
 802:main.c        **** 
 803:main.c        ****                     }
 804:main.c        ****                     //
 805:main.c        ****                     if (macroOLEDWaitingToSend == 2)
 3495              		.loc 1 805 0 is_stmt 1
 3496 0bda 744B     		ldr	r3, .L214+24
 3497 0bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3498 0bde 022B     		cmp	r3, #2
 3499 0be0 40F0A080 		bne	.L100
 806:main.c        ****                     {
 807:main.c        ****                         //send the data to the little macro OLED screens
 808:main.c        ****                         
 809:main.c        ****                         I2Cbuff1[0] = (1 << 3) + whichMacro;
 3500              		.loc 1 809 0
 3501 0be4 724B     		ldr	r3, .L214+28
 3502 0be6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3503 0be8 0833     		adds	r3, r3, #8
 3504 0bea DAB2     		uxtb	r2, r3
 3505 0bec 714B     		ldr	r3, .L214+32
 3506 0bee 1A70     		strb	r2, [r3]
 810:main.c        ****                         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 3507              		.loc 1 810 0
 3508 0bf0 0022     		movs	r2, #0
 3509 0bf2 0121     		movs	r1, #1
 3510 0bf4 7220     		movs	r0, #114
 3511 0bf6 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3512 0bfa 0346     		mov	r3, r0
 3513 0bfc 1A46     		mov	r2, r3
 3514 0bfe 6E4B     		ldr	r3, .L214+36
 3515 0c00 1A60     		str	r2, [r3]
 811:main.c        ****                         //OLED_init(128, 32);
 812:main.c        ****                         OLEDclear(128, 32);
 3516              		.loc 1 812 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 78


 3517 0c02 2021     		movs	r1, #32
 3518 0c04 8020     		movs	r0, #128
 3519 0c06 FFF7FEFF 		bl	OLEDclear
 813:main.c        ****                         //OLEDwriteInt(w , 1, 0,FirstLine);
 814:main.c        ****                         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 815:main.c        ****                         myGFX_setFont(1);
 3520              		.loc 1 815 0
 3521 0c0a 0120     		movs	r0, #1
 3522 0c0c FFF7FEFF 		bl	myGFX_setFont
 816:main.c        ****                          //make sure we didn't switch stuff while the display was updating
 817:main.c        ****                         if ((presetWhenMacroWriteStarted != patchNum)  || (macroPageWhenMacroWriteS
 3523              		.loc 1 817 0
 3524 0c10 6A4B     		ldr	r3, .L214+40
 3525 0c12 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3526 0c14 6A4B     		ldr	r3, .L214+44
 3527 0c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3528 0c18 9A42     		cmp	r2, r3
 3529 0c1a 05D1     		bne	.L98
 3530              		.loc 1 817 0 is_stmt 0 discriminator 1
 3531 0c1c 694B     		ldr	r3, .L214+48
 3532 0c1e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3533 0c20 604B     		ldr	r3, .L214+16
 3534 0c22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3535 0c24 9A42     		cmp	r2, r3
 3536 0c26 02D0     		beq	.L99
 3537              	.L98:
 818:main.c        ****                         {
 819:main.c        ****                             whichMacro = 0;
 3538              		.loc 1 819 0 is_stmt 1
 3539 0c28 614B     		ldr	r3, .L214+28
 3540 0c2a 0022     		movs	r2, #0
 3541 0c2c 1A70     		strb	r2, [r3]
 3542              	.L99:
 820:main.c        ****                         }
 821:main.c        ****                         //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
 822:main.c        ****                         OLEDwriteLineMiddle((char *)&macroNamesArray[patchNum][whichMacro+whichMacr
 3543              		.loc 1 822 0
 3544 0c2e 644B     		ldr	r3, .L214+44
 3545 0c30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3546 0c32 1946     		mov	r1, r3
 3547 0c34 5E4B     		ldr	r3, .L214+28
 3548 0c36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3549 0c38 1A46     		mov	r2, r3
 3550 0c3a 5A4B     		ldr	r3, .L214+16
 3551 0c3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3552 0c3e 1344     		add	r3, r3, r2
 3553 0c40 1A46     		mov	r2, r3
 3554 0c42 D200     		lsls	r2, r2, #3
 3555 0c44 1A44     		add	r2, r2, r3
 3556 0c46 0B46     		mov	r3, r1
 3557 0c48 DB00     		lsls	r3, r3, #3
 3558 0c4a 0B44     		add	r3, r3, r1
 3559 0c4c 1B01     		lsls	r3, r3, #4
 3560 0c4e 1344     		add	r3, r3, r2
 3561 0c50 5D4A     		ldr	r2, .L214+52
 3562 0c52 1344     		add	r3, r3, r2
 3563 0c54 0921     		movs	r1, #9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 79


 3564 0c56 1846     		mov	r0, r3
 3565 0c58 FFF7FEFF 		bl	OLEDwriteLineMiddle
 823:main.c        ****                         OLED_draw(128, 32);
 3566              		.loc 1 823 0
 3567 0c5c 2021     		movs	r1, #32
 3568 0c5e 8020     		movs	r0, #128
 3569 0c60 FFF7FEFF 		bl	OLED_draw
 824:main.c        **** 
 825:main.c        ****                         whichMacro++;
 3570              		.loc 1 825 0
 3571 0c64 524B     		ldr	r3, .L214+28
 3572 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3573 0c68 0133     		adds	r3, r3, #1
 3574 0c6a DAB2     		uxtb	r2, r3
 3575 0c6c 504B     		ldr	r3, .L214+28
 3576 0c6e 1A70     		strb	r2, [r3]
 826:main.c        ****                         if (whichMacro >= NUM_MACROS)
 3577              		.loc 1 826 0
 3578 0c70 4F4B     		ldr	r3, .L214+28
 3579 0c72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3580 0c74 072B     		cmp	r3, #7
 3581 0c76 55D9     		bls	.L100
 827:main.c        ****                         {
 828:main.c        ****                             macroOLEDWaitingToSend = 0;
 3582              		.loc 1 828 0
 3583 0c78 4C4B     		ldr	r3, .L214+24
 3584 0c7a 0022     		movs	r2, #0
 3585 0c7c 1A70     		strb	r2, [r3]
 829:main.c        ****                             whichMacro = 0;
 3586              		.loc 1 829 0
 3587 0c7e 4C4B     		ldr	r3, .L214+28
 3588 0c80 0022     		movs	r2, #0
 3589 0c82 1A70     		strb	r2, [r3]
 3590 0c84 4EE0     		b	.L100
 3591              	.L88:
 830:main.c        ****                            
 831:main.c        **** 
 832:main.c        ****                         }
 833:main.c        ****                     }
 834:main.c        ****                 }
 835:main.c        ****             }
 836:main.c        ****             
 837:main.c        ****         }
 838:main.c        ****         //otherwise it's the ADC for the foot pedal
 839:main.c        ****         else if (main_counter == 10)
 3592              		.loc 1 839 0
 3593 0c86 514B     		ldr	r3, .L214+56
 3594 0c88 1B78     		ldrb	r3, [r3]
 3595 0c8a DBB2     		uxtb	r3, r3
 3596 0c8c 0A2B     		cmp	r3, #10
 3597 0c8e 2AD1     		bne	.L101
 840:main.c        ****         {
 841:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 842:main.c        ****             if (!i2c_skipped[main_counter])
 3598              		.loc 1 842 0
 3599 0c90 4E4B     		ldr	r3, .L214+56
 3600 0c92 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 80


 3601 0c94 DBB2     		uxtb	r3, r3
 3602 0c96 1A46     		mov	r2, r3
 3603 0c98 4D4B     		ldr	r3, .L214+60
 3604 0c9a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3605 0c9c 002B     		cmp	r3, #0
 3606 0c9e 41D1     		bne	.L100
 843:main.c        ****             {
 844:main.c        ****                 I2Cbuff1[0] = 0x0;      
 3607              		.loc 1 844 0
 3608 0ca0 444B     		ldr	r3, .L214+32
 3609 0ca2 0022     		movs	r2, #0
 3610 0ca4 1A70     		strb	r2, [r3]
 845:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 3611              		.loc 1 845 0
 3612 0ca6 0022     		movs	r2, #0
 3613 0ca8 0221     		movs	r1, #2
 3614 0caa 4F20     		movs	r0, #79
 3615 0cac FFF7FEFF 		bl	I2C_MasterReadBlocking
 3616 0cb0 0346     		mov	r3, r0
 3617 0cb2 1A46     		mov	r2, r3
 3618 0cb4 404B     		ldr	r3, .L214+36
 3619 0cb6 1A60     		str	r2, [r3]
 846:main.c        ****                 if (status == 0)
 3620              		.loc 1 846 0
 3621 0cb8 3F4B     		ldr	r3, .L214+36
 3622 0cba 1B68     		ldr	r3, [r3]
 3623 0cbc 002B     		cmp	r3, #0
 3624 0cbe 31D1     		bne	.L100
 847:main.c        ****                 {
 848:main.c        ****                     volumePedal = I2Cbuff2[0] << 8;
 3625              		.loc 1 848 0
 3626 0cc0 444B     		ldr	r3, .L214+64
 3627 0cc2 1B78     		ldrb	r3, [r3]
 3628 0cc4 DBB2     		uxtb	r3, r3
 3629 0cc6 9BB2     		uxth	r3, r3
 3630 0cc8 1B02     		lsls	r3, r3, #8
 3631 0cca 9AB2     		uxth	r2, r3
 3632 0ccc 424B     		ldr	r3, .L214+68
 3633 0cce 1A80     		strh	r2, [r3]	@ movhi
 849:main.c        ****                     volumePedal +=  I2Cbuff2[1];
 3634              		.loc 1 849 0
 3635 0cd0 404B     		ldr	r3, .L214+64
 3636 0cd2 5B78     		ldrb	r3, [r3, #1]
 3637 0cd4 DBB2     		uxtb	r3, r3
 3638 0cd6 9AB2     		uxth	r2, r3
 3639 0cd8 3F4B     		ldr	r3, .L214+68
 3640 0cda 1B88     		ldrh	r3, [r3]
 3641 0cdc 1344     		add	r3, r3, r2
 3642 0cde 9AB2     		uxth	r2, r3
 3643 0ce0 3D4B     		ldr	r3, .L214+68
 3644 0ce2 1A80     		strh	r2, [r3]	@ movhi
 3645 0ce4 1EE0     		b	.L100
 3646              	.L101:
 850:main.c        ****                 }
 851:main.c        ****             }
 852:main.c        ****         }
 853:main.c        ****         else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 81


 854:main.c        ****         if (main_counter == 11)
 3647              		.loc 1 854 0
 3648 0ce6 394B     		ldr	r3, .L214+56
 3649 0ce8 1B78     		ldrb	r3, [r3]
 3650 0cea DBB2     		uxtb	r3, r3
 3651 0cec 0B2B     		cmp	r3, #11
 3652 0cee 19D1     		bne	.L100
 855:main.c        ****         { 
 856:main.c        ****             if (mainOLEDWaitingToSend)
 3653              		.loc 1 856 0
 3654 0cf0 3A4B     		ldr	r3, .L214+72
 3655 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3656 0cf4 002B     		cmp	r3, #0
 3657 0cf6 06D0     		beq	.L103
 857:main.c        ****             {
 858:main.c        ****                 OLED_draw(128, 64);
 3658              		.loc 1 858 0
 3659 0cf8 4021     		movs	r1, #64
 3660 0cfa 8020     		movs	r0, #128
 3661 0cfc FFF7FEFF 		bl	OLED_draw
 859:main.c        ****                 mainOLEDWaitingToSend = 0;
 3662              		.loc 1 859 0
 3663 0d00 364B     		ldr	r3, .L214+72
 3664 0d02 0022     		movs	r2, #0
 3665 0d04 1A70     		strb	r2, [r3]
 3666              	.L103:
 860:main.c        ****             }
 861:main.c        ****             if (macroOLEDWaitingToSend == 1)
 3667              		.loc 1 861 0
 3668 0d06 294B     		ldr	r3, .L214+24
 3669 0d08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3670 0d0a 012B     		cmp	r3, #1
 3671 0d0c 0AD1     		bne	.L100
 862:main.c        ****             {
 863:main.c        ****                 macroOLEDWaitingToSend = 2;
 3672              		.loc 1 863 0
 3673 0d0e 274B     		ldr	r3, .L214+24
 3674 0d10 0222     		movs	r2, #2
 3675 0d12 1A70     		strb	r2, [r3]
 864:main.c        ****                 presetWhenMacroWriteStarted = patchNum;
 3676              		.loc 1 864 0
 3677 0d14 2A4B     		ldr	r3, .L214+44
 3678 0d16 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3679 0d18 284B     		ldr	r3, .L214+40
 3680 0d1a 1A70     		strb	r2, [r3]
 865:main.c        ****                 macroPageWhenMacroWriteStarted = whichMacroPageIsActive;
 3681              		.loc 1 865 0
 3682 0d1c 214B     		ldr	r3, .L214+16
 3683 0d1e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3684 0d20 284B     		ldr	r3, .L214+48
 3685 0d22 1A70     		strb	r2, [r3]
 3686              	.L100:
 866:main.c        ****             }
 867:main.c        ****         }
 868:main.c        **** 
 869:main.c        ****        
 870:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 82


 871:main.c        ****         if (main_counter < 10)
 3687              		.loc 1 871 0
 3688 0d24 294B     		ldr	r3, .L214+56
 3689 0d26 1B78     		ldrb	r3, [r3]
 3690 0d28 DBB2     		uxtb	r3, r3
 3691 0d2a 092B     		cmp	r3, #9
 3692 0d2c 00F21681 		bhi	.L104
 3693              	.LBB26:
 872:main.c        ****         {
 873:main.c        ****             
 874:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
 875:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_lowWithDeadZone[ma
 3694              		.loc 1 875 0
 3695 0d30 264B     		ldr	r3, .L214+56
 3696 0d32 1B78     		ldrb	r3, [r3]
 3697 0d34 DBB2     		uxtb	r3, r3
 3698 0d36 1A46     		mov	r2, r3
 3699 0d38 294B     		ldr	r3, .L214+76
 3700 0d3a 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3701 0d3e 234B     		ldr	r3, .L214+56
 3702 0d40 1B78     		ldrb	r3, [r3]
 3703 0d42 DBB2     		uxtb	r3, r3
 3704 0d44 1946     		mov	r1, r3
 3705 0d46 274B     		ldr	r3, .L214+80
 3706 0d48 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3707 0d4c D31A     		subs	r3, r2, r3
 3708 0d4e 9BB2     		uxth	r3, r3
 3709 0d50 BB85     		strh	r3, [r7, #44]	@ movhi
 876:main.c        ****             
 877:main.c        ****             if (tempangle > 0)
 3710              		.loc 1 877 0
 3711 0d52 B7F92C30 		ldrsh	r3, [r7, #44]
 3712 0d56 002B     		cmp	r3, #0
 3713 0d58 4ADD     		ble	.L105
 878:main.c        ****             {
 879:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 3714              		.loc 1 879 0
 3715 0d5a 1C4B     		ldr	r3, .L214+56
 3716 0d5c 1B78     		ldrb	r3, [r3]
 3717 0d5e DBB2     		uxtb	r3, r3
 3718 0d60 1C46     		mov	r4, r3
 3719 0d62 B7F92C30 		ldrsh	r3, [r7, #44]
 3720 0d66 1846     		mov	r0, r3
 3721 0d68 FFF7FEFF 		bl	__aeabi_i2f
 3722 0d6c 174B     		ldr	r3, .L214+56
 3723 0d6e 1B78     		ldrb	r3, [r3]
 3724 0d70 DBB2     		uxtb	r3, r3
 3725 0d72 1A46     		mov	r2, r3
 3726 0d74 1C4B     		ldr	r3, .L214+84
 3727 0d76 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 3728 0d7a 1946     		mov	r1, r3
 3729 0d7c FFF7FEFF 		bl	__aeabi_fmul
 3730 0d80 0346     		mov	r3, r0
 3731 0d82 1846     		mov	r0, r3
 3732 0d84 FFF7FEFF 		bl	__aeabi_f2uiz
 3733 0d88 0346     		mov	r3, r0
 3734 0d8a 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 83


 3735 0d8c 174B     		ldr	r3, .L214+88
 3736 0d8e 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 3737 0d92 35E0     		b	.L106
 3738              	.L215:
 3739              		.align	2
 3740              	.L214:
 3741 0d94 00000000 		.word	macroKnobValues
 3742 0d98 00000000 		.word	midiSendOn
 3743 0d9c 00000000 		.word	macroKnobValues7bit
 3744 0da0 00000000 		.word	prevMacroKnobValues7bit
 3745 0da4 00000000 		.word	whichMacroPageIsActive
 3746 0da8 00000000 		.word	prevMacroKnobValues
 3747 0dac 00000000 		.word	macroOLEDWaitingToSend
 3748 0db0 00000000 		.word	whichMacro
 3749 0db4 00000000 		.word	I2Cbuff1
 3750 0db8 00000000 		.word	status
 3751 0dbc 00000000 		.word	presetWhenMacroWriteStarted
 3752 0dc0 00000000 		.word	patchNum
 3753 0dc4 00000000 		.word	macroPageWhenMacroWriteStarted
 3754 0dc8 00000000 		.word	macroNamesArray
 3755 0dcc 00000000 		.word	main_counter
 3756 0dd0 00000000 		.word	i2c_skipped
 3757 0dd4 00000000 		.word	I2Cbuff2
 3758 0dd8 00000000 		.word	volumePedal
 3759 0ddc 00000000 		.word	mainOLEDWaitingToSend
 3760 0de0 00000000 		.word	angle
 3761 0de4 00000000 		.word	pedals_lowWithDeadZone
 3762 0de8 00000000 		.word	pedalRatios
 3763 0dec 00000000 		.word	processed_pedals
 3764              	.L105:
 880:main.c        ****             }
 881:main.c        ****             else
 882:main.c        ****             {
 883:main.c        ****                 processed_pedals[main_counter] = 0;
 3765              		.loc 1 883 0
 3766 0df0 954B     		ldr	r3, .L216
 3767 0df2 1B78     		ldrb	r3, [r3]
 3768 0df4 DBB2     		uxtb	r3, r3
 3769 0df6 1A46     		mov	r2, r3
 3770 0df8 944B     		ldr	r3, .L216+4
 3771 0dfa 0021     		movs	r1, #0
 3772 0dfc 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3773              	.L106:
 884:main.c        ****             }
 885:main.c        ****             if (processed_pedals[main_counter] > 4095)
 3774              		.loc 1 885 0
 3775 0e00 914B     		ldr	r3, .L216
 3776 0e02 1B78     		ldrb	r3, [r3]
 3777 0e04 DBB2     		uxtb	r3, r3
 3778 0e06 1A46     		mov	r2, r3
 3779 0e08 904B     		ldr	r3, .L216+4
 3780 0e0a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3781 0e0e B3F5805F 		cmp	r3, #4096
 3782 0e12 08D3     		bcc	.L107
 886:main.c        ****             {
 887:main.c        ****                 processed_pedals[main_counter] = 4095;
 3783              		.loc 1 887 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 84


 3784 0e14 8C4B     		ldr	r3, .L216
 3785 0e16 1B78     		ldrb	r3, [r3]
 3786 0e18 DBB2     		uxtb	r3, r3
 3787 0e1a 1A46     		mov	r2, r3
 3788 0e1c 8B4B     		ldr	r3, .L216+4
 3789 0e1e 40F6FF71 		movw	r1, #4095
 3790 0e22 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3791              	.L107:
 888:main.c        ****             }
 889:main.c        ****             //invert the ones that are sensing rotation backwards
 890:main.c        ****             if (pedal_inverted[main_counter])
 3792              		.loc 1 890 0
 3793 0e26 884B     		ldr	r3, .L216
 3794 0e28 1B78     		ldrb	r3, [r3]
 3795 0e2a DBB2     		uxtb	r3, r3
 3796 0e2c 1A46     		mov	r2, r3
 3797 0e2e 884B     		ldr	r3, .L216+8
 3798 0e30 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3799 0e32 002B     		cmp	r3, #0
 3800 0e34 11D0     		beq	.L108
 891:main.c        ****             {
 892:main.c        ****                 processed_pedals[main_counter] = 4095 - processed_pedals[main_counter];
 3801              		.loc 1 892 0
 3802 0e36 844B     		ldr	r3, .L216
 3803 0e38 1B78     		ldrb	r3, [r3]
 3804 0e3a DBB2     		uxtb	r3, r3
 3805 0e3c 1A46     		mov	r2, r3
 3806 0e3e 824B     		ldr	r3, .L216
 3807 0e40 1B78     		ldrb	r3, [r3]
 3808 0e42 DBB2     		uxtb	r3, r3
 3809 0e44 1946     		mov	r1, r3
 3810 0e46 814B     		ldr	r3, .L216+4
 3811 0e48 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3812 0e4c C3F57F63 		rsb	r3, r3, #4080
 3813 0e50 0F33     		adds	r3, r3, #15
 3814 0e52 99B2     		uxth	r1, r3
 3815 0e54 7D4B     		ldr	r3, .L216+4
 3816 0e56 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3817              	.L108:
 893:main.c        ****             }
 894:main.c        ****             
 895:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
 896:main.c        ****             {
 897:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
 898:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
 899:main.c        ****             }
 900:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 3818              		.loc 1 900 0
 3819 0e5a 7B4B     		ldr	r3, .L216
 3820 0e5c 1B78     		ldrb	r3, [r3]
 3821 0e5e DBB2     		uxtb	r3, r3
 3822 0e60 1C46     		mov	r4, r3
 3823 0e62 794B     		ldr	r3, .L216
 3824 0e64 1B78     		ldrb	r3, [r3]
 3825 0e66 DBB2     		uxtb	r3, r3
 3826 0e68 1A46     		mov	r2, r3
 3827 0e6a 784B     		ldr	r3, .L216+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 85


 3828 0e6c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3829 0e70 1846     		mov	r0, r3
 3830 0e72 FFF7FEFF 		bl	__aeabi_ui2f
 3831 0e76 0346     		mov	r3, r0
 3832 0e78 7649     		ldr	r1, .L216+12
 3833 0e7a 1846     		mov	r0, r3
 3834 0e7c FFF7FEFF 		bl	__aeabi_fmul
 3835 0e80 0346     		mov	r3, r0
 3836 0e82 1A46     		mov	r2, r3
 3837 0e84 744B     		ldr	r3, .L216+16
 3838 0e86 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
 901:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[pedal_cc_assignments[main_counter]] 
 3839              		.loc 1 901 0
 3840 0e8a 6F4B     		ldr	r3, .L216
 3841 0e8c 1B78     		ldrb	r3, [r3]
 3842 0e8e DBB2     		uxtb	r3, r3
 3843 0e90 1C46     		mov	r4, r3
 3844 0e92 6D4B     		ldr	r3, .L216
 3845 0e94 1B78     		ldrb	r3, [r3]
 3846 0e96 DBB2     		uxtb	r3, r3
 3847 0e98 1A46     		mov	r2, r3
 3848 0e9a 704B     		ldr	r3, .L216+20
 3849 0e9c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3850 0e9e 1A46     		mov	r2, r3
 3851 0ea0 6A4B     		ldr	r3, .L216+4
 3852 0ea2 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3853 0ea6 1846     		mov	r0, r3
 3854 0ea8 FFF7FEFF 		bl	__aeabi_ui2f
 3855 0eac 0346     		mov	r3, r0
 3856 0eae 4FF07651 		mov	r1, #1031798784
 3857 0eb2 1846     		mov	r0, r3
 3858 0eb4 FFF7FEFF 		bl	__aeabi_fmul
 3859 0eb8 0346     		mov	r3, r0
 3860 0eba 1846     		mov	r0, r3
 3861 0ebc FFF7FEFF 		bl	__aeabi_f2uiz
 3862 0ec0 0346     		mov	r3, r0
 3863 0ec2 DAB2     		uxtb	r2, r3
 3864 0ec4 664B     		ldr	r3, .L216+24
 3865 0ec6 1A55     		strb	r2, [r3, r4]
 902:main.c        ****             if (midiSendOn)
 3866              		.loc 1 902 0
 3867 0ec8 664B     		ldr	r3, .L216+28
 3868 0eca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3869 0ecc 002B     		cmp	r3, #0
 3870 0ece 36D0     		beq	.L109
 903:main.c        ****             {
 904:main.c        ****                 pedals7bit[main_counter] = pedals8bit[main_counter] >> 1;
 3871              		.loc 1 904 0
 3872 0ed0 5D4B     		ldr	r3, .L216
 3873 0ed2 1B78     		ldrb	r3, [r3]
 3874 0ed4 DBB2     		uxtb	r3, r3
 3875 0ed6 1A46     		mov	r2, r3
 3876 0ed8 5B4B     		ldr	r3, .L216
 3877 0eda 1B78     		ldrb	r3, [r3]
 3878 0edc DBB2     		uxtb	r3, r3
 3879 0ede 1946     		mov	r1, r3
 3880 0ee0 5F4B     		ldr	r3, .L216+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 86


 3881 0ee2 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3882 0ee4 5B08     		lsrs	r3, r3, #1
 3883 0ee6 D9B2     		uxtb	r1, r3
 3884 0ee8 5F4B     		ldr	r3, .L216+32
 3885 0eea 9954     		strb	r1, [r3, r2]
 905:main.c        ****                 if (pedals7bit[main_counter] != prevPedals7bit[main_counter])
 3886              		.loc 1 905 0
 3887 0eec 564B     		ldr	r3, .L216
 3888 0eee 1B78     		ldrb	r3, [r3]
 3889 0ef0 DBB2     		uxtb	r3, r3
 3890 0ef2 1A46     		mov	r2, r3
 3891 0ef4 5C4B     		ldr	r3, .L216+32
 3892 0ef6 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3893 0ef8 534B     		ldr	r3, .L216
 3894 0efa 1B78     		ldrb	r3, [r3]
 3895 0efc DBB2     		uxtb	r3, r3
 3896 0efe 1946     		mov	r1, r3
 3897 0f00 5A4B     		ldr	r3, .L216+36
 3898 0f02 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3899 0f04 9A42     		cmp	r2, r3
 3900 0f06 0ED0     		beq	.L110
 906:main.c        ****                 {
 907:main.c        ****                     sendMIDIControlChange(main_counter + 14, (pedals7bit[main_counter]), 1);
 3901              		.loc 1 907 0
 3902 0f08 4F4B     		ldr	r3, .L216
 3903 0f0a 1B78     		ldrb	r3, [r3]
 3904 0f0c DBB2     		uxtb	r3, r3
 3905 0f0e 03F10E00 		add	r0, r3, #14
 3906 0f12 4D4B     		ldr	r3, .L216
 3907 0f14 1B78     		ldrb	r3, [r3]
 3908 0f16 DBB2     		uxtb	r3, r3
 3909 0f18 1A46     		mov	r2, r3
 3910 0f1a 534B     		ldr	r3, .L216+32
 3911 0f1c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3912 0f1e 0122     		movs	r2, #1
 3913 0f20 1946     		mov	r1, r3
 3914 0f22 FFF7FEFF 		bl	sendMIDIControlChange
 3915              	.L110:
 908:main.c        ****                 }
 909:main.c        ****                 prevPedals7bit[main_counter] = pedals7bit[main_counter];
 3916              		.loc 1 909 0
 3917 0f26 484B     		ldr	r3, .L216
 3918 0f28 1B78     		ldrb	r3, [r3]
 3919 0f2a DBB2     		uxtb	r3, r3
 3920 0f2c 1A46     		mov	r2, r3
 3921 0f2e 464B     		ldr	r3, .L216
 3922 0f30 1B78     		ldrb	r3, [r3]
 3923 0f32 DBB2     		uxtb	r3, r3
 3924 0f34 1946     		mov	r1, r3
 3925 0f36 4C4B     		ldr	r3, .L216+32
 3926 0f38 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 3927 0f3a 4C4B     		ldr	r3, .L216+36
 3928 0f3c 9954     		strb	r1, [r3, r2]
 3929              	.L109:
 910:main.c        ****             }
 911:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 3930              		.loc 1 911 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 87


 3931 0f3e 424B     		ldr	r3, .L216
 3932 0f40 1B78     		ldrb	r3, [r3]
 3933 0f42 DBB2     		uxtb	r3, r3
 3934 0f44 1A46     		mov	r2, r3
 3935 0f46 404B     		ldr	r3, .L216
 3936 0f48 1B78     		ldrb	r3, [r3]
 3937 0f4a DBB2     		uxtb	r3, r3
 3938 0f4c 1946     		mov	r1, r3
 3939 0f4e 3F4B     		ldr	r3, .L216+4
 3940 0f50 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3941 0f54 464B     		ldr	r3, .L216+40
 3942 0f56 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3943              	.LBE26:
 3944 0f5a 41E0     		b	.L111
 3945              	.L104:
 912:main.c        ****         }
 913:main.c        ****         else
 914:main.c        ****         {
 915:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 3946              		.loc 1 915 0
 3947 0f5c 454B     		ldr	r3, .L216+44
 3948 0f5e 1B88     		ldrh	r3, [r3]
 3949 0f60 1846     		mov	r0, r3
 3950 0f62 FFF7FEFF 		bl	__aeabi_ui2f
 3951 0f66 0346     		mov	r3, r0
 3952 0f68 4349     		ldr	r1, .L216+48
 3953 0f6a 1846     		mov	r0, r3
 3954 0f6c FFF7FEFF 		bl	__aeabi_fmul
 3955 0f70 0346     		mov	r3, r0
 3956 0f72 1846     		mov	r0, r3
 3957 0f74 FFF7FEFF 		bl	__aeabi_f2iz
 3958 0f78 0346     		mov	r3, r0
 3959 0f7a 1AB2     		sxth	r2, r3
 3960 0f7c 3F4B     		ldr	r3, .L216+52
 3961 0f7e 1A80     		strh	r2, [r3]	@ movhi
 916:main.c        **** 
 917:main.c        ****             if (processed_volumePedal < 0)
 3962              		.loc 1 917 0
 3963 0f80 3E4B     		ldr	r3, .L216+52
 3964 0f82 B3F90030 		ldrsh	r3, [r3]
 3965 0f86 002B     		cmp	r3, #0
 3966 0f88 03DA     		bge	.L112
 918:main.c        ****             {
 919:main.c        ****                 processed_volumePedal = 0;
 3967              		.loc 1 919 0
 3968 0f8a 3C4B     		ldr	r3, .L216+52
 3969 0f8c 0022     		movs	r2, #0
 3970 0f8e 1A80     		strh	r2, [r3]	@ movhi
 3971 0f90 09E0     		b	.L113
 3972              	.L112:
 920:main.c        ****             }
 921:main.c        ****             else if (processed_volumePedal > 4095)
 3973              		.loc 1 921 0
 3974 0f92 3A4B     		ldr	r3, .L216+52
 3975 0f94 B3F90030 		ldrsh	r3, [r3]
 3976 0f98 B3F5805F 		cmp	r3, #4096
 3977 0f9c 03DB     		blt	.L113
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 88


 922:main.c        ****             {
 923:main.c        ****                  processed_volumePedal = 4095;
 3978              		.loc 1 923 0
 3979 0f9e 374B     		ldr	r3, .L216+52
 3980 0fa0 40F6FF72 		movw	r2, #4095
 3981 0fa4 1A80     		strh	r2, [r3]	@ movhi
 3982              	.L113:
 924:main.c        ****             }
 925:main.c        ****             if (midiSendOn)
 3983              		.loc 1 925 0
 3984 0fa6 2F4B     		ldr	r3, .L216+28
 3985 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3986 0faa 002B     		cmp	r3, #0
 3987 0fac 18D0     		beq	.L111
 926:main.c        ****             {
 927:main.c        ****                 u7bit_volumePedal = processed_volumePedal >> 5;
 3988              		.loc 1 927 0
 3989 0fae 334B     		ldr	r3, .L216+52
 3990 0fb0 B3F90030 		ldrsh	r3, [r3]
 3991 0fb4 5B11     		asrs	r3, r3, #5
 3992 0fb6 1BB2     		sxth	r3, r3
 3993 0fb8 DAB2     		uxtb	r2, r3
 3994 0fba 314B     		ldr	r3, .L216+56
 3995 0fbc 1A70     		strb	r2, [r3]
 928:main.c        ****                 if ( u7bit_volumePedal != prev_7bit_volumePedal)
 3996              		.loc 1 928 0
 3997 0fbe 304B     		ldr	r3, .L216+56
 3998 0fc0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3999 0fc2 304B     		ldr	r3, .L216+60
 4000 0fc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4001 0fc6 9A42     		cmp	r2, r3
 4002 0fc8 06D0     		beq	.L114
 929:main.c        ****                 {
 930:main.c        ****                     //uint16_t tempPedal = processed_volumePedal;
 931:main.c        ****                     
 932:main.c        ****                     sendMIDIControlChange(13, u7bit_volumePedal, 0);
 4003              		.loc 1 932 0
 4004 0fca 2D4B     		ldr	r3, .L216+56
 4005 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4006 0fce 0022     		movs	r2, #0
 4007 0fd0 1946     		mov	r1, r3
 4008 0fd2 0D20     		movs	r0, #13
 4009 0fd4 FFF7FEFF 		bl	sendMIDIControlChange
 4010              	.L114:
 933:main.c        ****                     //sendMIDIControlChange(22, ( tempPedal & 127), 0);
 934:main.c        ****                 }
 935:main.c        ****                  //prev_processed_volumePedal = processed_volumePedal;
 936:main.c        ****                 prev_7bit_volumePedal = u7bit_volumePedal;
 4011              		.loc 1 936 0
 4012 0fd8 294B     		ldr	r3, .L216+56
 4013 0fda 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4014 0fdc 294B     		ldr	r3, .L216+60
 4015 0fde 1A70     		strb	r2, [r3]
 4016              	.L111:
 937:main.c        ****             }
 938:main.c        ****         }
 939:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 89


 940:main.c        ****         main_counter++;
 4017              		.loc 1 940 0
 4018 0fe0 194B     		ldr	r3, .L216
 4019 0fe2 1B78     		ldrb	r3, [r3]
 4020 0fe4 DBB2     		uxtb	r3, r3
 4021 0fe6 0133     		adds	r3, r3, #1
 4022 0fe8 DAB2     		uxtb	r2, r3
 4023 0fea 174B     		ldr	r3, .L216
 4024 0fec 1A70     		strb	r2, [r3]
 941:main.c        **** 
 942:main.c        ****         if (main_counter > 11)
 4025              		.loc 1 942 0
 4026 0fee 164B     		ldr	r3, .L216
 4027 0ff0 1B78     		ldrb	r3, [r3]
 4028 0ff2 DBB2     		uxtb	r3, r3
 4029 0ff4 0B2B     		cmp	r3, #11
 4030 0ff6 02D9     		bls	.L115
 943:main.c        ****         {
 944:main.c        ****             main_counter = 0;
 4031              		.loc 1 944 0
 4032 0ff8 134B     		ldr	r3, .L216
 4033 0ffa 0022     		movs	r2, #0
 4034 0ffc 1A70     		strb	r2, [r3]
 4035              	.L115:
 945:main.c        ****         }
 946:main.c        ****         //testpin3_Write(0);
 947:main.c        **** 
 948:main.c        ****        // testpin5_Write(1);
 949:main.c        ****         
 950:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 4036              		.loc 1 950 0
 4037 0ffe 224B     		ldr	r3, .L216+64
 4038 1000 1B78     		ldrb	r3, [r3]
 4039 1002 DBB2     		uxtb	r3, r3
 4040 1004 002B     		cmp	r3, #0
 4041 1006 0CBF     		ite	eq
 4042 1008 0123     		moveq	r3, #1
 4043 100a 0023     		movne	r3, #0
 4044 100c DBB2     		uxtb	r3, r3
 4045 100e 1F4A     		ldr	r2, .L216+68
 4046 1010 DB00     		lsls	r3, r3, #3
 4047 1012 1344     		add	r3, r3, r2
 4048 1014 9B79     		ldrb	r3, [r3, #6]
 4049 1016 DBB2     		uxtb	r3, r3
 4050 1018 FE2B     		cmp	r3, #254
 4051 101a 40F06981 		bne	.L116
 4052              		.loc 1 950 0 is_stmt 0 discriminator 1
 4053 101e 1A4B     		ldr	r3, .L216+64
 4054 1020 1B78     		ldrb	r3, [r3]
 4055 1022 DBB2     		uxtb	r3, r3
 4056 1024 002B     		cmp	r3, #0
 4057 1026 0CBF     		ite	eq
 4058 1028 0123     		moveq	r3, #1
 4059 102a 0023     		movne	r3, #0
 4060 102c DBB2     		uxtb	r3, r3
 4061 102e 174A     		ldr	r2, .L216+68
 4062 1030 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 90


 4063 1032 1344     		add	r3, r3, r2
 4064 1034 DB79     		ldrb	r3, [r3, #7]
 4065 1036 DBB2     		uxtb	r3, r3
 4066 1038 FD2B     		cmp	r3, #253
 4067 103a 40F05981 		bne	.L116
 4068              	.LBB27:
 951:main.c        ****         {
 952:main.c        ****             for (int i = 0; i < NUM_SLIDERS; i++)
 4069              		.loc 1 952 0 is_stmt 1
 4070 103e 0023     		movs	r3, #0
 4071 1040 C7F88030 		str	r3, [r7, #128]
 4072 1044 4FE1     		b	.L117
 4073              	.L217:
 4074 1046 00BF     		.align	2
 4075              	.L216:
 4076 1048 00000000 		.word	main_counter
 4077 104c 00000000 		.word	processed_pedals
 4078 1050 00000000 		.word	pedal_inverted
 4079 1054 01088039 		.word	964691969
 4080 1058 00000000 		.word	pedals_float
 4081 105c 00000000 		.word	pedal_cc_assignments
 4082 1060 00000000 		.word	pedals8bit
 4083 1064 00000000 		.word	midiSendOn
 4084 1068 00000000 		.word	pedals7bit
 4085 106c 00000000 		.word	prevPedals7bit
 4086 1070 00000000 		.word	prev_processed_pedals
 4087 1074 00000000 		.word	volumePedal
 4088 1078 C5F1803F 		.word	1065415109
 4089 107c 00000000 		.word	processed_volumePedal
 4090 1080 00000000 		.word	u7bit_volumePedal
 4091 1084 00000000 		.word	prev_7bit_volumePedal
 4092 1088 00000000 		.word	currentBarBuffer
 4093 108c 00000000 		.word	rxBufferBar
 4094              	.L126:
 953:main.c        ****             {
 954:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 4095              		.loc 1 954 0
 4096 1090 AE4B     		ldr	r3, .L218
 4097 1092 1B78     		ldrb	r3, [r3]
 4098 1094 DBB2     		uxtb	r3, r3
 4099 1096 002B     		cmp	r3, #0
 4100 1098 0CBF     		ite	eq
 4101 109a 0123     		moveq	r3, #1
 4102 109c 0023     		movne	r3, #0
 4103 109e DBB2     		uxtb	r3, r3
 4104 10a0 1A46     		mov	r2, r3
 4105 10a2 D7F88030 		ldr	r3, [r7, #128]
 4106 10a6 5B00     		lsls	r3, r3, #1
 4107 10a8 A949     		ldr	r1, .L218+4
 4108 10aa D200     		lsls	r2, r2, #3
 4109 10ac 0A44     		add	r2, r2, r1
 4110 10ae 1344     		add	r3, r3, r2
 4111 10b0 1B78     		ldrb	r3, [r3]
 4112 10b2 DBB2     		uxtb	r3, r3
 4113 10b4 9BB2     		uxth	r3, r3
 4114 10b6 1B02     		lsls	r3, r3, #8
 4115 10b8 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 91


 4116 10ba A44B     		ldr	r3, .L218
 4117 10bc 1B78     		ldrb	r3, [r3]
 4118 10be DBB2     		uxtb	r3, r3
 4119 10c0 002B     		cmp	r3, #0
 4120 10c2 0CBF     		ite	eq
 4121 10c4 0123     		moveq	r3, #1
 4122 10c6 0023     		movne	r3, #0
 4123 10c8 DBB2     		uxtb	r3, r3
 4124 10ca 1946     		mov	r1, r3
 4125 10cc D7F88030 		ldr	r3, [r7, #128]
 4126 10d0 5B00     		lsls	r3, r3, #1
 4127 10d2 0133     		adds	r3, r3, #1
 4128 10d4 9E48     		ldr	r0, .L218+4
 4129 10d6 C900     		lsls	r1, r1, #3
 4130 10d8 0144     		add	r1, r1, r0
 4131 10da 0B44     		add	r3, r3, r1
 4132 10dc 1B78     		ldrb	r3, [r3]
 4133 10de DBB2     		uxtb	r3, r3
 4134 10e0 9BB2     		uxth	r3, r3
 4135 10e2 1344     		add	r3, r3, r2
 4136 10e4 99B2     		uxth	r1, r3
 4137 10e6 9B4A     		ldr	r2, .L218+8
 4138 10e8 D7F88030 		ldr	r3, [r7, #128]
 4139 10ec 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 955:main.c        ****                 //
 956:main.c        ****                 if(bar[i] != prevBar[i])
 4140              		.loc 1 956 0
 4141 10f0 984A     		ldr	r2, .L218+8
 4142 10f2 D7F88030 		ldr	r3, [r7, #128]
 4143 10f6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4144 10fa 9AB2     		uxth	r2, r3
 4145 10fc 9649     		ldr	r1, .L218+12
 4146 10fe D7F88030 		ldr	r3, [r7, #128]
 4147 1102 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 4148 1106 9BB2     		uxth	r3, r3
 4149 1108 9A42     		cmp	r2, r3
 4150 110a 00F0DC80 		beq	.L118
 957:main.c        ****                 {
 958:main.c        ****     				
 959:main.c        ****                     if ((bar[i] == 65535) || (bar[i] > fretMeasurements[i][0]))
 4151              		.loc 1 959 0
 4152 110e 914A     		ldr	r2, .L218+8
 4153 1110 D7F88030 		ldr	r3, [r7, #128]
 4154 1114 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4155 1118 9BB2     		uxth	r3, r3
 4156 111a 4FF6FF72 		movw	r2, #65535
 4157 111e 9342     		cmp	r3, r2
 4158 1120 10D0     		beq	.L119
 4159              		.loc 1 959 0 is_stmt 0 discriminator 1
 4160 1122 8C4A     		ldr	r2, .L218+8
 4161 1124 D7F88030 		ldr	r3, [r7, #128]
 4162 1128 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4163 112c 99B2     		uxth	r1, r3
 4164 112e 8B48     		ldr	r0, .L218+16
 4165 1130 D7F88020 		ldr	r2, [r7, #128]
 4166 1134 1346     		mov	r3, r2
 4167 1136 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 92


 4168 1138 1344     		add	r3, r3, r2
 4169 113a DB00     		lsls	r3, r3, #3
 4170 113c 0344     		add	r3, r3, r0
 4171 113e 1B88     		ldrh	r3, [r3]
 4172 1140 9942     		cmp	r1, r3
 4173 1142 07D9     		bls	.L120
 4174              	.L119:
 960:main.c        ****     				{
 961:main.c        ****     					stringMappedPositionsInRatios[i] = 1.0f;
 4175              		.loc 1 961 0 is_stmt 1
 4176 1144 864A     		ldr	r2, .L218+20
 4177 1146 D7F88030 		ldr	r3, [r7, #128]
 4178 114a 4FF07E51 		mov	r1, #1065353216
 4179 114e 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 4180 1152 B8E0     		b	.L118
 4181              	.L120:
 962:main.c        ****     				}
 963:main.c        ****                     else if (bar[i] > fretMeasurements[i][NUM_FRET_MEASUREMENTS-1])
 4182              		.loc 1 963 0
 4183 1154 7F4A     		ldr	r2, .L218+8
 4184 1156 D7F88030 		ldr	r3, [r7, #128]
 4185 115a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4186 115e 99B2     		uxth	r1, r3
 4187 1160 7E48     		ldr	r0, .L218+16
 4188 1162 D7F88020 		ldr	r2, [r7, #128]
 4189 1166 1346     		mov	r3, r2
 4190 1168 5B00     		lsls	r3, r3, #1
 4191 116a 1344     		add	r3, r3, r2
 4192 116c DB00     		lsls	r3, r3, #3
 4193 116e 0344     		add	r3, r3, r0
 4194 1170 1633     		adds	r3, r3, #22
 4195 1172 1B88     		ldrh	r3, [r3]
 4196 1174 9942     		cmp	r1, r3
 4197 1176 6FD9     		bls	.L121
 4198              	.LBB28:
 964:main.c        ****                     {
 965:main.c        ****                         for (int j = 0; j < NUM_FRET_MEASUREMENTS-1; j++)
 4199              		.loc 1 965 0
 4200 1178 0023     		movs	r3, #0
 4201 117a FB67     		str	r3, [r7, #124]
 4202 117c 68E0     		b	.L122
 4203              	.L125:
 966:main.c        ****                         {
 967:main.c        ****                             if ((bar[i] <=  fretMeasurements[i][j]) && (bar[i] >  fretMeasurements[
 4204              		.loc 1 967 0
 4205 117e 754A     		ldr	r2, .L218+8
 4206 1180 D7F88030 		ldr	r3, [r7, #128]
 4207 1184 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4208 1188 99B2     		uxth	r1, r3
 4209 118a 7448     		ldr	r0, .L218+16
 4210 118c D7F88020 		ldr	r2, [r7, #128]
 4211 1190 1346     		mov	r3, r2
 4212 1192 5B00     		lsls	r3, r3, #1
 4213 1194 1344     		add	r3, r3, r2
 4214 1196 9B00     		lsls	r3, r3, #2
 4215 1198 FA6F     		ldr	r2, [r7, #124]
 4216 119a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 93


 4217 119c 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 4218 11a0 9942     		cmp	r1, r3
 4219 11a2 52D8     		bhi	.L123
 4220              		.loc 1 967 0 is_stmt 0 discriminator 1
 4221 11a4 6B4A     		ldr	r2, .L218+8
 4222 11a6 D7F88030 		ldr	r3, [r7, #128]
 4223 11aa 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4224 11ae 99B2     		uxth	r1, r3
 4225 11b0 FB6F     		ldr	r3, [r7, #124]
 4226 11b2 581C     		adds	r0, r3, #1
 4227 11b4 694C     		ldr	r4, .L218+16
 4228 11b6 D7F88020 		ldr	r2, [r7, #128]
 4229 11ba 1346     		mov	r3, r2
 4230 11bc 5B00     		lsls	r3, r3, #1
 4231 11be 1344     		add	r3, r3, r2
 4232 11c0 9B00     		lsls	r3, r3, #2
 4233 11c2 0344     		add	r3, r3, r0
 4234 11c4 34F81330 		ldrh	r3, [r4, r3, lsl #1]
 4235 11c8 9942     		cmp	r1, r3
 4236 11ca 3ED9     		bls	.L123
 968:main.c        ****                             {
 969:main.c        ****                                 stringMappedPositionsInRatios[i] = map((float)bar[i], fretMeasureme
 4237              		.loc 1 969 0 is_stmt 1
 4238 11cc 614A     		ldr	r2, .L218+8
 4239 11ce D7F88030 		ldr	r3, [r7, #128]
 4240 11d2 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4241 11d6 9BB2     		uxth	r3, r3
 4242 11d8 1846     		mov	r0, r3
 4243 11da FFF7FEFF 		bl	__aeabi_ui2f
 4244 11de 0446     		mov	r4, r0
 4245 11e0 5E49     		ldr	r1, .L218+16
 4246 11e2 D7F88020 		ldr	r2, [r7, #128]
 4247 11e6 1346     		mov	r3, r2
 4248 11e8 5B00     		lsls	r3, r3, #1
 4249 11ea 1344     		add	r3, r3, r2
 4250 11ec 9B00     		lsls	r3, r3, #2
 4251 11ee FA6F     		ldr	r2, [r7, #124]
 4252 11f0 1344     		add	r3, r3, r2
 4253 11f2 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 4254 11f6 1846     		mov	r0, r3
 4255 11f8 FFF7FEFF 		bl	__aeabi_ui2f
 4256 11fc 0546     		mov	r5, r0
 4257 11fe FB6F     		ldr	r3, [r7, #124]
 4258 1200 591C     		adds	r1, r3, #1
 4259 1202 5648     		ldr	r0, .L218+16
 4260 1204 D7F88020 		ldr	r2, [r7, #128]
 4261 1208 1346     		mov	r3, r2
 4262 120a 5B00     		lsls	r3, r3, #1
 4263 120c 1344     		add	r3, r3, r2
 4264 120e 9B00     		lsls	r3, r3, #2
 4265 1210 0B44     		add	r3, r3, r1
 4266 1212 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 4267 1216 1846     		mov	r0, r3
 4268 1218 FFF7FEFF 		bl	__aeabi_ui2f
 4269 121c 514A     		ldr	r2, .L218+24
 4270 121e FB6F     		ldr	r3, [r7, #124]
 4271 1220 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 94


 4272 1224 FB6F     		ldr	r3, [r7, #124]
 4273 1226 0133     		adds	r3, r3, #1
 4274 1228 4E4A     		ldr	r2, .L218+24
 4275 122a 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4276 122e 0093     		str	r3, [sp]	@ float
 4277 1230 0B46     		mov	r3, r1
 4278 1232 0246     		mov	r2, r0
 4279 1234 2946     		mov	r1, r5
 4280 1236 2046     		mov	r0, r4
 4281 1238 FFF7FEFF 		bl	map
 4282 123c 0146     		mov	r1, r0
 4283 123e 484A     		ldr	r2, .L218+20
 4284 1240 D7F88030 		ldr	r3, [r7, #128]
 4285 1244 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 970:main.c        ****                                 break;
 4286              		.loc 1 970 0
 4287 1248 3DE0     		b	.L118
 4288              	.L123:
 965:main.c        ****                         {
 4289              		.loc 1 965 0 discriminator 2
 4290 124a FB6F     		ldr	r3, [r7, #124]
 4291 124c 0133     		adds	r3, r3, #1
 4292 124e FB67     		str	r3, [r7, #124]
 4293              	.L122:
 965:main.c        ****                         {
 4294              		.loc 1 965 0 is_stmt 0 discriminator 1
 4295 1250 FB6F     		ldr	r3, [r7, #124]
 4296 1252 0A2B     		cmp	r3, #10
 4297 1254 93DD     		ble	.L125
 4298 1256 36E0     		b	.L118
 4299              	.L121:
 4300              	.LBE28:
 971:main.c        ****                             }
 972:main.c        ****                         }
 973:main.c        ****                     }
 974:main.c        ****                     else
 975:main.c        ****                     {
 976:main.c        ****                         stringMappedPositionsInRatios[i] = map((float)bar[i], fretMeasurements[i][N
 4301              		.loc 1 976 0 is_stmt 1
 4302 1258 3E4A     		ldr	r2, .L218+8
 4303 125a D7F88030 		ldr	r3, [r7, #128]
 4304 125e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4305 1262 9BB2     		uxth	r3, r3
 4306 1264 1846     		mov	r0, r3
 4307 1266 FFF7FEFF 		bl	__aeabi_ui2f
 4308 126a 0446     		mov	r4, r0
 4309 126c 3B49     		ldr	r1, .L218+16
 4310 126e D7F88020 		ldr	r2, [r7, #128]
 4311 1272 1346     		mov	r3, r2
 4312 1274 5B00     		lsls	r3, r3, #1
 4313 1276 1344     		add	r3, r3, r2
 4314 1278 DB00     		lsls	r3, r3, #3
 4315 127a 0B44     		add	r3, r3, r1
 4316 127c 1433     		adds	r3, r3, #20
 4317 127e 1B88     		ldrh	r3, [r3]
 4318 1280 1846     		mov	r0, r3
 4319 1282 FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 95


 4320 1286 0546     		mov	r5, r0
 4321 1288 3449     		ldr	r1, .L218+16
 4322 128a D7F88020 		ldr	r2, [r7, #128]
 4323 128e 1346     		mov	r3, r2
 4324 1290 5B00     		lsls	r3, r3, #1
 4325 1292 1344     		add	r3, r3, r2
 4326 1294 DB00     		lsls	r3, r3, #3
 4327 1296 0B44     		add	r3, r3, r1
 4328 1298 1633     		adds	r3, r3, #22
 4329 129a 1B88     		ldrh	r3, [r3]
 4330 129c 1846     		mov	r0, r3
 4331 129e FFF7FEFF 		bl	__aeabi_ui2f
 4332 12a2 0146     		mov	r1, r0
 4333 12a4 2F4B     		ldr	r3, .L218+24
 4334 12a6 9A6A     		ldr	r2, [r3, #40]	@ float
 4335 12a8 2E4B     		ldr	r3, .L218+24
 4336 12aa DB6A     		ldr	r3, [r3, #44]	@ float
 4337 12ac 0093     		str	r3, [sp]	@ float
 4338 12ae 1346     		mov	r3, r2
 4339 12b0 0A46     		mov	r2, r1
 4340 12b2 2946     		mov	r1, r5
 4341 12b4 2046     		mov	r0, r4
 4342 12b6 FFF7FEFF 		bl	map
 4343 12ba 0146     		mov	r1, r0
 4344 12bc 284A     		ldr	r2, .L218+20
 4345 12be D7F88030 		ldr	r3, [r7, #128]
 4346 12c2 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 4347              	.L118:
 977:main.c        ****                     }
 978:main.c        ****                 }
 979:main.c        ****                 //
 980:main.c        ****                 prevBar[i] = bar[i];
 4348              		.loc 1 980 0 discriminator 2
 4349 12c6 234A     		ldr	r2, .L218+8
 4350 12c8 D7F88030 		ldr	r3, [r7, #128]
 4351 12cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4352 12d0 99B2     		uxth	r1, r3
 4353 12d2 214A     		ldr	r2, .L218+12
 4354 12d4 D7F88030 		ldr	r3, [r7, #128]
 4355 12d8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 952:main.c        ****             {
 4356              		.loc 1 952 0 discriminator 2
 4357 12dc D7F88030 		ldr	r3, [r7, #128]
 4358 12e0 0133     		adds	r3, r3, #1
 4359 12e2 C7F88030 		str	r3, [r7, #128]
 4360              	.L117:
 952:main.c        ****             {
 4361              		.loc 1 952 0 is_stmt 0 discriminator 1
 4362 12e6 D7F88030 		ldr	r3, [r7, #128]
 4363 12ea 012B     		cmp	r3, #1
 4364 12ec 7FF7D0AE 		ble	.L126
 4365              	.L116:
 4366              	.LBE27:
 981:main.c        ****             }
 982:main.c        ****         }
 983:main.c        ****         
 984:main.c        ****         //testpin5_Write(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 96


 985:main.c        ****         if (midiSendOn)
 4367              		.loc 1 985 0 is_stmt 1
 4368 12f0 1D4B     		ldr	r3, .L218+28
 4369 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4370 12f4 002B     		cmp	r3, #0
 4371 12f6 23D0     		beq	.L127
 4372              	.LBB29:
 986:main.c        ****         {
 987:main.c        ****             for (int i = 0 ; i < numStrings; i++)
 4373              		.loc 1 987 0
 4374 12f8 0023     		movs	r3, #0
 4375 12fa BB67     		str	r3, [r7, #120]
 4376 12fc 1AE0     		b	.L128
 4377              	.L130:
 988:main.c        ****             {
 989:main.c        ****                 if (strings[i] != prevStrings[i])
 4378              		.loc 1 989 0
 4379 12fe 1B4A     		ldr	r2, .L218+32
 4380 1300 BB6F     		ldr	r3, [r7, #120]
 4381 1302 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4382 1306 9AB2     		uxth	r2, r3
 4383 1308 1949     		ldr	r1, .L218+36
 4384 130a BB6F     		ldr	r3, [r7, #120]
 4385 130c 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 4386 1310 9BB2     		uxth	r3, r3
 4387 1312 9A42     		cmp	r2, r3
 4388 1314 02D0     		beq	.L129
 990:main.c        ****                 {
 991:main.c        ****                     noteEvent(i);
 4389              		.loc 1 991 0
 4390 1316 B86F     		ldr	r0, [r7, #120]
 4391 1318 FFF7FEFF 		bl	noteEvent
 4392              	.L129:
 992:main.c        ****                 }
 993:main.c        ****                 prevStrings[i] = strings[i];
 4393              		.loc 1 993 0 discriminator 2
 4394 131c 134A     		ldr	r2, .L218+32
 4395 131e BB6F     		ldr	r3, [r7, #120]
 4396 1320 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4397 1324 99B2     		uxth	r1, r3
 4398 1326 124A     		ldr	r2, .L218+36
 4399 1328 BB6F     		ldr	r3, [r7, #120]
 4400 132a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 987:main.c        ****             {
 4401              		.loc 1 987 0 discriminator 2
 4402 132e BB6F     		ldr	r3, [r7, #120]
 4403 1330 0133     		adds	r3, r3, #1
 4404 1332 BB67     		str	r3, [r7, #120]
 4405              	.L128:
 987:main.c        ****             {
 4406              		.loc 1 987 0 is_stmt 0 discriminator 1
 4407 1334 0F4B     		ldr	r3, .L218+40
 4408 1336 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4409 1338 1A46     		mov	r2, r3
 4410 133a BB6F     		ldr	r3, [r7, #120]
 4411 133c 9A42     		cmp	r2, r3
 4412 133e DEDC     		bgt	.L130
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 97


 4413              	.L127:
 4414              	.LBE29:
 994:main.c        ****             }
 995:main.c        ****         }
 996:main.c        ****        
 997:main.c        ****         scanUI();
 4415              		.loc 1 997 0 is_stmt 1
 4416 1340 FFF7FEFF 		bl	scanUI
 4417              	.LBB30:
 998:main.c        ****         
 999:main.c        ****         for (int i=  0; i < 4; i++)
 4418              		.loc 1 999 0
 4419 1344 0023     		movs	r3, #0
 4420 1346 7B67     		str	r3, [r7, #116]
 4421 1348 62E0     		b	.L131
 4422              	.L219:
 4423 134a 00BF     		.align	2
 4424              	.L218:
 4425 134c 00000000 		.word	currentBarBuffer
 4426 1350 00000000 		.word	rxBufferBar
 4427 1354 00000000 		.word	bar
 4428 1358 00000000 		.word	prevBar
 4429 135c 00000000 		.word	fretMeasurements
 4430 1360 00000000 		.word	stringMappedPositionsInRatios
 4431 1364 00000000 		.word	fretScalingInRatios
 4432 1368 00000000 		.word	midiSendOn
 4433 136c 00000000 		.word	strings
 4434 1370 00000000 		.word	prevStrings
 4435 1374 00000000 		.word	numStrings
 4436              	.L135:
1000:main.c        ****         {
1001:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)>>4); //divide by 16
 4437              		.loc 1 1001 0
 4438 1378 7B6F     		ldr	r3, [r7, #116]
 4439 137a 9BB2     		uxth	r3, r3
 4440 137c 1846     		mov	r0, r3
 4441 137e FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4442 1382 0346     		mov	r3, r0
 4443 1384 1B11     		asrs	r3, r3, #4
 4444 1386 1BB2     		sxth	r3, r3
 4445 1388 D9B2     		uxtb	r1, r3
 4446 138a 3B4A     		ldr	r2, .L220
 4447 138c 7B6F     		ldr	r3, [r7, #116]
 4448 138e 1344     		add	r3, r3, r2
 4449 1390 0A46     		mov	r2, r1
 4450 1392 1A70     		strb	r2, [r3]
1002:main.c        ****             if (i != 2) // all are backwards except X axis
 4451              		.loc 1 1002 0
 4452 1394 7B6F     		ldr	r3, [r7, #116]
 4453 1396 022B     		cmp	r3, #2
 4454 1398 0AD0     		beq	.L132
1003:main.c        ****             {
1004:main.c        ****                 knobs[i] = 255 - knobs[i];
 4455              		.loc 1 1004 0
 4456 139a 374A     		ldr	r2, .L220
 4457 139c 7B6F     		ldr	r3, [r7, #116]
 4458 139e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 98


 4459 13a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4460 13a2 DB43     		mvns	r3, r3
 4461 13a4 D9B2     		uxtb	r1, r3
 4462 13a6 344A     		ldr	r2, .L220
 4463 13a8 7B6F     		ldr	r3, [r7, #116]
 4464 13aa 1344     		add	r3, r3, r2
 4465 13ac 0A46     		mov	r2, r1
 4466 13ae 1A70     		strb	r2, [r3]
 4467              	.L132:
1005:main.c        ****             }
1006:main.c        ****             if (midiSendOn)
 4468              		.loc 1 1006 0
 4469 13b0 324B     		ldr	r3, .L220+4
 4470 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4471 13b4 002B     		cmp	r3, #0
 4472 13b6 28D0     		beq	.L133
1007:main.c        ****             {
1008:main.c        ****                 knobs7bit[i] = knobs[i] >> 1;
 4473              		.loc 1 1008 0
 4474 13b8 2F4A     		ldr	r2, .L220
 4475 13ba 7B6F     		ldr	r3, [r7, #116]
 4476 13bc 1344     		add	r3, r3, r2
 4477 13be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4478 13c0 5B08     		lsrs	r3, r3, #1
 4479 13c2 D9B2     		uxtb	r1, r3
 4480 13c4 2E4A     		ldr	r2, .L220+8
 4481 13c6 7B6F     		ldr	r3, [r7, #116]
 4482 13c8 1344     		add	r3, r3, r2
 4483 13ca 0A46     		mov	r2, r1
 4484 13cc 1A70     		strb	r2, [r3]
1009:main.c        ****                 
1010:main.c        ****                 if (knobs7bit[i] != prevKnobs7bit[i])
 4485              		.loc 1 1010 0
 4486 13ce 2C4A     		ldr	r2, .L220+8
 4487 13d0 7B6F     		ldr	r3, [r7, #116]
 4488 13d2 1344     		add	r3, r3, r2
 4489 13d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4490 13d6 2B49     		ldr	r1, .L220+12
 4491 13d8 7B6F     		ldr	r3, [r7, #116]
 4492 13da 0B44     		add	r3, r3, r1
 4493 13dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4494 13de 9A42     		cmp	r2, r3
 4495 13e0 0AD0     		beq	.L134
1011:main.c        ****                 {
1012:main.c        ****                     sendMIDIControlChange(i+9, knobs7bit[i], 0);
 4496              		.loc 1 1012 0
 4497 13e2 7B6F     		ldr	r3, [r7, #116]
 4498 13e4 03F10900 		add	r0, r3, #9
 4499 13e8 254A     		ldr	r2, .L220+8
 4500 13ea 7B6F     		ldr	r3, [r7, #116]
 4501 13ec 1344     		add	r3, r3, r2
 4502 13ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4503 13f0 0022     		movs	r2, #0
 4504 13f2 1946     		mov	r1, r3
 4505 13f4 FFF7FEFF 		bl	sendMIDIControlChange
 4506              	.L134:
1013:main.c        ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 99


1014:main.c        ****                 prevKnobs7bit[i] = knobs7bit[i];
 4507              		.loc 1 1014 0
 4508 13f8 214A     		ldr	r2, .L220+8
 4509 13fa 7B6F     		ldr	r3, [r7, #116]
 4510 13fc 1344     		add	r3, r3, r2
 4511 13fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4512 1400 204A     		ldr	r2, .L220+12
 4513 1402 7B6F     		ldr	r3, [r7, #116]
 4514 1404 1344     		add	r3, r3, r2
 4515 1406 0A46     		mov	r2, r1
 4516 1408 1A70     		strb	r2, [r3]
 4517              	.L133:
 999:main.c        ****         {
 4518              		.loc 1 999 0 discriminator 2
 4519 140a 7B6F     		ldr	r3, [r7, #116]
 4520 140c 0133     		adds	r3, r3, #1
 4521 140e 7B67     		str	r3, [r7, #116]
 4522              	.L131:
 999:main.c        ****         {
 4523              		.loc 1 999 0 is_stmt 0 discriminator 1
 4524 1410 7B6F     		ldr	r3, [r7, #116]
 4525 1412 032B     		cmp	r3, #3
 4526 1414 B0DD     		ble	.L135
 4527              	.LBE30:
 4528              	.LBB31:
1015:main.c        ****             }
1016:main.c        ****             
1017:main.c        ****         }
1018:main.c        ****         
1019:main.c        ****         //testpin4_Write(1);
1020:main.c        ****         //calculate the pitch of each string based on the current Copedent
1021:main.c        ****         for (int i = 0; i < numStrings; i++)
 4529              		.loc 1 1021 0 is_stmt 1
 4530 1416 0023     		movs	r3, #0
 4531 1418 3B67     		str	r3, [r7, #112]
 4532 141a 28E2     		b	.L136
 4533              	.L150:
 4534              	.LBB32:
1022:main.c        ****     	{
1023:main.c        ****     		//interpolate ratios for each of the strings
1024:main.c        ****            
1025:main.c        ****             float myMappedPos;
1026:main.c        ****             if (dualSlider)
 4535              		.loc 1 1026 0
 4536 141c 1A4B     		ldr	r3, .L220+16
 4537 141e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4538 1420 002B     		cmp	r3, #0
 4539 1422 37D0     		beq	.L137
1027:main.c        ****             {
1028:main.c        ****                if ((bar[0] != 65535) && (bar[1] != 65535))
 4540              		.loc 1 1028 0
 4541 1424 194B     		ldr	r3, .L220+20
 4542 1426 1B88     		ldrh	r3, [r3]	@ movhi
 4543 1428 9BB2     		uxth	r3, r3
 4544 142a 4FF6FF72 		movw	r2, #65535
 4545 142e 9342     		cmp	r3, r2
 4546 1430 12D0     		beq	.L138
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 100


 4547              		.loc 1 1028 0 is_stmt 0 discriminator 1
 4548 1432 164B     		ldr	r3, .L220+20
 4549 1434 5B88     		ldrh	r3, [r3, #2]	@ movhi
 4550 1436 9BB2     		uxth	r3, r3
 4551 1438 4FF6FF72 		movw	r2, #65535
 4552 143c 9342     		cmp	r3, r2
 4553 143e 0BD0     		beq	.L138
1029:main.c        ****                 {
1030:main.c        ****                     myMappedPos = mapDualSlider(i, stringMappedPositionsInRatios[0], stringMappedPo
 4554              		.loc 1 1030 0 is_stmt 1
 4555 1440 386F     		ldr	r0, [r7, #112]
 4556 1442 FFF7FEFF 		bl	__aeabi_i2f
 4557 1446 124B     		ldr	r3, .L220+24
 4558 1448 1968     		ldr	r1, [r3]	@ float
 4559 144a 114B     		ldr	r3, .L220+24
 4560 144c 5B68     		ldr	r3, [r3, #4]	@ float
 4561 144e 1A46     		mov	r2, r3
 4562 1450 FFF7FEFF 		bl	mapDualSlider
 4563 1454 F866     		str	r0, [r7, #108]	@ float
 4564 1456 20E0     		b	.L141
 4565              	.L138:
1031:main.c        ****                 }
1032:main.c        ****                 else if (bar[0] != 65535)
 4566              		.loc 1 1032 0
 4567 1458 0C4B     		ldr	r3, .L220+20
 4568 145a 1B88     		ldrh	r3, [r3]	@ movhi
 4569 145c 9BB2     		uxth	r3, r3
 4570 145e 4FF6FF72 		movw	r2, #65535
 4571 1462 9342     		cmp	r3, r2
 4572 1464 03D0     		beq	.L140
1033:main.c        ****                 {
1034:main.c        ****                     myMappedPos = stringMappedPositionsInRatios[0];
 4573              		.loc 1 1034 0
 4574 1466 0A4B     		ldr	r3, .L220+24
 4575 1468 1B68     		ldr	r3, [r3]	@ float
 4576 146a FB66     		str	r3, [r7, #108]	@ float
 4577 146c 15E0     		b	.L141
 4578              	.L140:
1035:main.c        ****                 }
1036:main.c        ****                 else
1037:main.c        ****                 {
1038:main.c        ****                     myMappedPos = stringMappedPositionsInRatios[1];
 4579              		.loc 1 1038 0
 4580 146e 084B     		ldr	r3, .L220+24
 4581 1470 5B68     		ldr	r3, [r3, #4]	@ float
 4582 1472 FB66     		str	r3, [r7, #108]	@ float
 4583 1474 11E0     		b	.L141
 4584              	.L221:
 4585 1476 00BF     		.align	2
 4586              	.L220:
 4587 1478 00000000 		.word	knobs
 4588 147c 00000000 		.word	midiSendOn
 4589 1480 00000000 		.word	knobs7bit
 4590 1484 00000000 		.word	prevKnobs7bit
 4591 1488 00000000 		.word	dualSlider
 4592 148c 00000000 		.word	bar
 4593 1490 00000000 		.word	stringMappedPositionsInRatios
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 101


 4594              	.L137:
1039:main.c        ****                 }
1040:main.c        ****             }
1041:main.c        ****             else
1042:main.c        ****             {
1043:main.c        ****                 myMappedPos = stringMappedPositionsInRatios[0];
 4595              		.loc 1 1043 0
 4596 1494 A74B     		ldr	r3, .L222
 4597 1496 1B68     		ldr	r3, [r3]	@ float
 4598 1498 FB66     		str	r3, [r7, #108]	@ float
 4599              	.L141:
1044:main.c        ****             }
1045:main.c        **** 
1046:main.c        ****             
1047:main.c        ****     		//then apply those ratios to the fundamental frequencies
1048:main.c        ****     		float pedalsMIDI = (copedent[currentCopedent][0][i] +
 4600              		.loc 1 1048 0
 4601 149a A74B     		ldr	r3, .L222+4
 4602 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4603 149e 1A46     		mov	r2, r3
 4604 14a0 A649     		ldr	r1, .L222+8
 4605 14a2 1346     		mov	r3, r2
 4606 14a4 5B01     		lsls	r3, r3, #5
 4607 14a6 1344     		add	r3, r3, r2
 4608 14a8 9B00     		lsls	r3, r3, #2
 4609 14aa 3A6F     		ldr	r2, [r7, #112]
 4610 14ac 1344     		add	r3, r3, r2
 4611 14ae 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1049:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4612              		.loc 1 1049 0
 4613 14b2 A14B     		ldr	r3, .L222+4
 4614 14b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4615 14b6 1A46     		mov	r2, r3
 4616 14b8 A049     		ldr	r1, .L222+8
 4617 14ba 1346     		mov	r3, r2
 4618 14bc 5B01     		lsls	r3, r3, #5
 4619 14be 1344     		add	r3, r3, r2
 4620 14c0 9B00     		lsls	r3, r3, #2
 4621 14c2 3A6F     		ldr	r2, [r7, #112]
 4622 14c4 1344     		add	r3, r3, r2
 4623 14c6 3033     		adds	r3, r3, #48
 4624 14c8 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4625 14cc 9C4B     		ldr	r3, .L222+12
 4626 14ce 1B68     		ldr	r3, [r3]	@ float
 4627 14d0 1946     		mov	r1, r3
 4628 14d2 1046     		mov	r0, r2
 4629 14d4 FFF7FEFF 		bl	__aeabi_fmul
 4630 14d8 0346     		mov	r3, r0
1048:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4631              		.loc 1 1048 0
 4632 14da 1946     		mov	r1, r3
 4633 14dc 2046     		mov	r0, r4
 4634 14de FFF7FEFF 		bl	__aeabi_fadd
 4635 14e2 0346     		mov	r3, r0
 4636 14e4 1C46     		mov	r4, r3
1050:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4637              		.loc 1 1050 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 102


 4638 14e6 944B     		ldr	r3, .L222+4
 4639 14e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4640 14ea 1A46     		mov	r2, r3
 4641 14ec 9349     		ldr	r1, .L222+8
 4642 14ee 1346     		mov	r3, r2
 4643 14f0 5B01     		lsls	r3, r3, #5
 4644 14f2 1344     		add	r3, r3, r2
 4645 14f4 9B00     		lsls	r3, r3, #2
 4646 14f6 3A6F     		ldr	r2, [r7, #112]
 4647 14f8 1344     		add	r3, r3, r2
 4648 14fa 3C33     		adds	r3, r3, #60
 4649 14fc 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4650 1500 8F4B     		ldr	r3, .L222+12
 4651 1502 5B68     		ldr	r3, [r3, #4]	@ float
 4652 1504 1946     		mov	r1, r3
 4653 1506 1046     		mov	r0, r2
 4654 1508 FFF7FEFF 		bl	__aeabi_fmul
 4655 150c 0346     		mov	r3, r0
1049:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4656              		.loc 1 1049 0
 4657 150e 1946     		mov	r1, r3
 4658 1510 2046     		mov	r0, r4
 4659 1512 FFF7FEFF 		bl	__aeabi_fadd
 4660 1516 0346     		mov	r3, r0
 4661 1518 1C46     		mov	r4, r3
1051:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4662              		.loc 1 1051 0
 4663 151a 874B     		ldr	r3, .L222+4
 4664 151c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4665 151e 1A46     		mov	r2, r3
 4666 1520 8649     		ldr	r1, .L222+8
 4667 1522 1346     		mov	r3, r2
 4668 1524 5B01     		lsls	r3, r3, #5
 4669 1526 1344     		add	r3, r3, r2
 4670 1528 9B00     		lsls	r3, r3, #2
 4671 152a 3A6F     		ldr	r2, [r7, #112]
 4672 152c 1344     		add	r3, r3, r2
 4673 152e 4833     		adds	r3, r3, #72
 4674 1530 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4675 1534 824B     		ldr	r3, .L222+12
 4676 1536 9B68     		ldr	r3, [r3, #8]	@ float
 4677 1538 1946     		mov	r1, r3
 4678 153a 1046     		mov	r0, r2
 4679 153c FFF7FEFF 		bl	__aeabi_fmul
 4680 1540 0346     		mov	r3, r0
1050:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4681              		.loc 1 1050 0
 4682 1542 1946     		mov	r1, r3
 4683 1544 2046     		mov	r0, r4
 4684 1546 FFF7FEFF 		bl	__aeabi_fadd
 4685 154a 0346     		mov	r3, r0
 4686 154c 1C46     		mov	r4, r3
1052:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4687              		.loc 1 1052 0
 4688 154e 7A4B     		ldr	r3, .L222+4
 4689 1550 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4690 1552 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 103


 4691 1554 7949     		ldr	r1, .L222+8
 4692 1556 1346     		mov	r3, r2
 4693 1558 5B01     		lsls	r3, r3, #5
 4694 155a 1344     		add	r3, r3, r2
 4695 155c 9B00     		lsls	r3, r3, #2
 4696 155e 3A6F     		ldr	r2, [r7, #112]
 4697 1560 1344     		add	r3, r3, r2
 4698 1562 5433     		adds	r3, r3, #84
 4699 1564 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4700 1568 754B     		ldr	r3, .L222+12
 4701 156a DB68     		ldr	r3, [r3, #12]	@ float
 4702 156c 1946     		mov	r1, r3
 4703 156e 1046     		mov	r0, r2
 4704 1570 FFF7FEFF 		bl	__aeabi_fmul
 4705 1574 0346     		mov	r3, r0
1051:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4706              		.loc 1 1051 0
 4707 1576 1946     		mov	r1, r3
 4708 1578 2046     		mov	r0, r4
 4709 157a FFF7FEFF 		bl	__aeabi_fadd
 4710 157e 0346     		mov	r3, r0
 4711 1580 1C46     		mov	r4, r3
1053:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4712              		.loc 1 1053 0
 4713 1582 6D4B     		ldr	r3, .L222+4
 4714 1584 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4715 1586 1A46     		mov	r2, r3
 4716 1588 6C49     		ldr	r1, .L222+8
 4717 158a 1346     		mov	r3, r2
 4718 158c 5B01     		lsls	r3, r3, #5
 4719 158e 1344     		add	r3, r3, r2
 4720 1590 9B00     		lsls	r3, r3, #2
 4721 1592 3A6F     		ldr	r2, [r7, #112]
 4722 1594 1344     		add	r3, r3, r2
 4723 1596 6033     		adds	r3, r3, #96
 4724 1598 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4725 159c 684B     		ldr	r3, .L222+12
 4726 159e 1B69     		ldr	r3, [r3, #16]	@ float
 4727 15a0 1946     		mov	r1, r3
 4728 15a2 1046     		mov	r0, r2
 4729 15a4 FFF7FEFF 		bl	__aeabi_fmul
 4730 15a8 0346     		mov	r3, r0
1052:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4731              		.loc 1 1052 0
 4732 15aa 1946     		mov	r1, r3
 4733 15ac 2046     		mov	r0, r4
 4734 15ae FFF7FEFF 		bl	__aeabi_fadd
 4735 15b2 0346     		mov	r3, r0
 4736 15b4 1C46     		mov	r4, r3
1054:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4737              		.loc 1 1054 0
 4738 15b6 604B     		ldr	r3, .L222+4
 4739 15b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4740 15ba 1A46     		mov	r2, r3
 4741 15bc 5F49     		ldr	r1, .L222+8
 4742 15be 1346     		mov	r3, r2
 4743 15c0 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 104


 4744 15c2 1344     		add	r3, r3, r2
 4745 15c4 9B00     		lsls	r3, r3, #2
 4746 15c6 3A6F     		ldr	r2, [r7, #112]
 4747 15c8 1344     		add	r3, r3, r2
 4748 15ca 7833     		adds	r3, r3, #120
 4749 15cc 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4750 15d0 5B4B     		ldr	r3, .L222+12
 4751 15d2 5B69     		ldr	r3, [r3, #20]	@ float
 4752 15d4 1946     		mov	r1, r3
 4753 15d6 1046     		mov	r0, r2
 4754 15d8 FFF7FEFF 		bl	__aeabi_fmul
 4755 15dc 0346     		mov	r3, r0
1053:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4756              		.loc 1 1053 0
 4757 15de 1946     		mov	r1, r3
 4758 15e0 2046     		mov	r0, r4
 4759 15e2 FFF7FEFF 		bl	__aeabi_fadd
 4760 15e6 0346     		mov	r3, r0
 4761 15e8 1C46     		mov	r4, r3
1055:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4762              		.loc 1 1055 0
 4763 15ea 534B     		ldr	r3, .L222+4
 4764 15ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4765 15ee 1A46     		mov	r2, r3
 4766 15f0 5249     		ldr	r1, .L222+8
 4767 15f2 1346     		mov	r3, r2
 4768 15f4 5B01     		lsls	r3, r3, #5
 4769 15f6 1344     		add	r3, r3, r2
 4770 15f8 9B00     		lsls	r3, r3, #2
 4771 15fa 3A6F     		ldr	r2, [r7, #112]
 4772 15fc 1344     		add	r3, r3, r2
 4773 15fe 6C33     		adds	r3, r3, #108
 4774 1600 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4775 1604 4E4B     		ldr	r3, .L222+12
 4776 1606 9B69     		ldr	r3, [r3, #24]	@ float
 4777 1608 1946     		mov	r1, r3
 4778 160a 1046     		mov	r0, r2
 4779 160c FFF7FEFF 		bl	__aeabi_fmul
 4780 1610 0346     		mov	r3, r0
1054:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4781              		.loc 1 1054 0
 4782 1612 1946     		mov	r1, r3
 4783 1614 2046     		mov	r0, r4
 4784 1616 FFF7FEFF 		bl	__aeabi_fadd
 4785 161a 0346     		mov	r3, r0
 4786 161c 1C46     		mov	r4, r3
1056:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4787              		.loc 1 1056 0
 4788 161e 464B     		ldr	r3, .L222+4
 4789 1620 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4790 1622 1A46     		mov	r2, r3
 4791 1624 4549     		ldr	r1, .L222+8
 4792 1626 1346     		mov	r3, r2
 4793 1628 5B01     		lsls	r3, r3, #5
 4794 162a 1344     		add	r3, r3, r2
 4795 162c 9B00     		lsls	r3, r3, #2
 4796 162e 3A6F     		ldr	r2, [r7, #112]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 105


 4797 1630 1344     		add	r3, r3, r2
 4798 1632 2433     		adds	r3, r3, #36
 4799 1634 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4800 1638 414B     		ldr	r3, .L222+12
 4801 163a DB69     		ldr	r3, [r3, #28]	@ float
 4802 163c 1946     		mov	r1, r3
 4803 163e 1046     		mov	r0, r2
 4804 1640 FFF7FEFF 		bl	__aeabi_fmul
 4805 1644 0346     		mov	r3, r0
1055:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4806              		.loc 1 1055 0
 4807 1646 1946     		mov	r1, r3
 4808 1648 2046     		mov	r0, r4
 4809 164a FFF7FEFF 		bl	__aeabi_fadd
 4810 164e 0346     		mov	r3, r0
 4811 1650 1C46     		mov	r4, r3
1057:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4812              		.loc 1 1057 0
 4813 1652 394B     		ldr	r3, .L222+4
 4814 1654 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4815 1656 1A46     		mov	r2, r3
 4816 1658 3849     		ldr	r1, .L222+8
 4817 165a 1346     		mov	r3, r2
 4818 165c 5B01     		lsls	r3, r3, #5
 4819 165e 1344     		add	r3, r3, r2
 4820 1660 9B00     		lsls	r3, r3, #2
 4821 1662 3A6F     		ldr	r2, [r7, #112]
 4822 1664 1344     		add	r3, r3, r2
 4823 1666 0C33     		adds	r3, r3, #12
 4824 1668 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4825 166c 344B     		ldr	r3, .L222+12
 4826 166e 1B6A     		ldr	r3, [r3, #32]	@ float
 4827 1670 1946     		mov	r1, r3
 4828 1672 1046     		mov	r0, r2
 4829 1674 FFF7FEFF 		bl	__aeabi_fmul
 4830 1678 0346     		mov	r3, r0
1056:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4831              		.loc 1 1056 0
 4832 167a 1946     		mov	r1, r3
 4833 167c 2046     		mov	r0, r4
 4834 167e FFF7FEFF 		bl	__aeabi_fadd
 4835 1682 0346     		mov	r3, r0
 4836 1684 1C46     		mov	r4, r3
1058:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9])) + transposeFloat;
 4837              		.loc 1 1058 0
 4838 1686 2C4B     		ldr	r3, .L222+4
 4839 1688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4840 168a 1A46     		mov	r2, r3
 4841 168c 2B49     		ldr	r1, .L222+8
 4842 168e 1346     		mov	r3, r2
 4843 1690 5B01     		lsls	r3, r3, #5
 4844 1692 1344     		add	r3, r3, r2
 4845 1694 9B00     		lsls	r3, r3, #2
 4846 1696 3A6F     		ldr	r2, [r7, #112]
 4847 1698 1344     		add	r3, r3, r2
 4848 169a 1833     		adds	r3, r3, #24
 4849 169c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 106


 4850 16a0 274B     		ldr	r3, .L222+12
 4851 16a2 5B6A     		ldr	r3, [r3, #36]	@ float
 4852 16a4 1946     		mov	r1, r3
 4853 16a6 1046     		mov	r0, r2
 4854 16a8 FFF7FEFF 		bl	__aeabi_fmul
 4855 16ac 0346     		mov	r3, r0
1057:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4856              		.loc 1 1057 0
 4857 16ae 1946     		mov	r1, r3
 4858 16b0 2046     		mov	r0, r4
 4859 16b2 FFF7FEFF 		bl	__aeabi_fadd
 4860 16b6 0346     		mov	r3, r0
 4861 16b8 1A46     		mov	r2, r3
 4862              		.loc 1 1058 0
 4863 16ba 224B     		ldr	r3, .L222+16
 4864 16bc 1B68     		ldr	r3, [r3]	@ float
1048:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4865              		.loc 1 1048 0
 4866 16be 1946     		mov	r1, r3
 4867 16c0 1046     		mov	r0, r2
 4868 16c2 FFF7FEFF 		bl	__aeabi_fadd
 4869 16c6 0346     		mov	r3, r0
 4870 16c8 BB62     		str	r3, [r7, #40]	@ float
1059:main.c        **** 
1060:main.c        ****             
1061:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 4871              		.loc 1 1061 0
 4872 16ca 1B4B     		ldr	r3, .L222+4
 4873 16cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4874 16ce 1A46     		mov	r2, r3
 4875 16d0 1A49     		ldr	r1, .L222+8
 4876 16d2 1346     		mov	r3, r2
 4877 16d4 5B01     		lsls	r3, r3, #5
 4878 16d6 1344     		add	r3, r3, r2
 4879 16d8 9B00     		lsls	r3, r3, #2
 4880 16da 3A6F     		ldr	r2, [r7, #112]
 4881 16dc 1344     		add	r3, r3, r2
 4882 16de 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 4883 16e2 7B62     		str	r3, [r7, #36]	@ float
1062:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 4884              		.loc 1 1062 0
 4885 16e4 786A     		ldr	r0, [r7, #36]	@ float
 4886 16e6 FFF7FEFF 		bl	__aeabi_f2iz
 4887 16ea 0146     		mov	r1, r0
 4888 16ec 164A     		ldr	r2, .L222+20
 4889 16ee 3B6F     		ldr	r3, [r7, #112]
 4890 16f0 42F82310 		str	r1, [r2, r3, lsl #2]
1063:main.c        ****             float barMIDI = (unsafeFtom(myMappedPos*55.0f)) - 33.0f; //give midi note added by the 
 4891              		.loc 1 1063 0
 4892 16f4 1549     		ldr	r1, .L222+24
 4893 16f6 F86E     		ldr	r0, [r7, #108]	@ float
 4894 16f8 FFF7FEFF 		bl	__aeabi_fmul
 4895 16fc 0346     		mov	r3, r0
 4896 16fe 1846     		mov	r0, r3
 4897 1700 FFF7FEFF 		bl	unsafeFtom
 4898 1704 0346     		mov	r3, r0
 4899 1706 1249     		ldr	r1, .L222+28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 107


 4900 1708 1846     		mov	r0, r3
 4901 170a FFF7FEFF 		bl	__aeabi_fsub
 4902 170e 0346     		mov	r3, r0
 4903 1710 3B62     		str	r3, [r7, #32]	@ float
1064:main.c        ****             if (i == 0)
 4904              		.loc 1 1064 0
 4905 1712 3B6F     		ldr	r3, [r7, #112]
 4906 1714 002B     		cmp	r3, #0
 4907 1716 1FD1     		bne	.L142
1065:main.c        ****             {
1066:main.c        ****                 barMidiOuterStrings[0] = (uint16_t)(barMIDI * 512.0f);
 4908              		.loc 1 1066 0
 4909 1718 4FF08841 		mov	r1, #1140850688
 4910 171c 386A     		ldr	r0, [r7, #32]	@ float
 4911 171e FFF7FEFF 		bl	__aeabi_fmul
 4912 1722 0346     		mov	r3, r0
 4913 1724 1846     		mov	r0, r3
 4914 1726 FFF7FEFF 		bl	__aeabi_f2uiz
 4915 172a 0346     		mov	r3, r0
 4916 172c 9AB2     		uxth	r2, r3
 4917 172e 094B     		ldr	r3, .L222+32
 4918 1730 1A80     		strh	r2, [r3]	@ movhi
 4919 1732 48E0     		b	.L143
 4920              	.L223:
 4921              		.align	2
 4922              	.L222:
 4923 1734 00000000 		.word	stringMappedPositionsInRatios
 4924 1738 00000000 		.word	currentCopedent
 4925 173c 00000000 		.word	copedent
 4926 1740 00000000 		.word	pedals_float
 4927 1744 00000000 		.word	transposeFloat
 4928 1748 00000000 		.word	openStringMIDI_Int
 4929 174c 00005C42 		.word	1113325568
 4930 1750 00000442 		.word	1107558400
 4931 1754 00000000 		.word	barMidiOuterStrings
 4932              	.L142:
1067:main.c        ****             }
1068:main.c        **** 
1069:main.c        ****             else if (i == 5) //the average bar position for single midi bar position report via cha
 4933              		.loc 1 1069 0
 4934 1758 3B6F     		ldr	r3, [r7, #112]
 4935 175a 052B     		cmp	r3, #5
 4936 175c 20D1     		bne	.L144
1070:main.c        ****             {
1071:main.c        ****                 if (midiBarSendOn)
 4937              		.loc 1 1071 0
 4938 175e 9F4B     		ldr	r3, .L224
 4939 1760 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4940 1762 002B     		cmp	r3, #0
 4941 1764 2FD0     		beq	.L143
 4942              	.LBB33:
1072:main.c        ****                 {
1073:main.c        ****                     float barBend = (uint16_t)(barMIDI * 128.0f);
 4943              		.loc 1 1073 0
 4944 1766 4FF08641 		mov	r1, #1124073472
 4945 176a 386A     		ldr	r0, [r7, #32]	@ float
 4946 176c FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 108


 4947 1770 0346     		mov	r3, r0
 4948 1772 1846     		mov	r0, r3
 4949 1774 FFF7FEFF 		bl	__aeabi_f2uiz
 4950 1778 0346     		mov	r3, r0
 4951 177a 9BB2     		uxth	r3, r3
 4952 177c 1846     		mov	r0, r3
 4953 177e FFF7FEFF 		bl	__aeabi_ui2f
 4954 1782 0346     		mov	r3, r0
 4955 1784 FB61     		str	r3, [r7, #28]	@ float
1074:main.c        ****                     if (midiBarSendOn)
 4956              		.loc 1 1074 0
 4957 1786 954B     		ldr	r3, .L224
 4958 1788 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4959 178a 002B     		cmp	r3, #0
 4960 178c 1BD0     		beq	.L143
1075:main.c        ****                     {
1076:main.c        ****                         sendMIDIPitchBend((uint)barBend,12);
 4961              		.loc 1 1076 0
 4962 178e F869     		ldr	r0, [r7, #28]	@ float
 4963 1790 FFF7FEFF 		bl	__aeabi_f2uiz
 4964 1794 0346     		mov	r3, r0
 4965 1796 0C21     		movs	r1, #12
 4966 1798 1846     		mov	r0, r3
 4967 179a FFF7FEFF 		bl	sendMIDIPitchBend
 4968 179e 12E0     		b	.L143
 4969              	.L144:
 4970              	.LBE33:
1077:main.c        ****                     }
1078:main.c        ****                 }
1079:main.c        ****             }
1080:main.c        ****             else if (i == (numStrings - 1))
 4971              		.loc 1 1080 0
 4972 17a0 8F4B     		ldr	r3, .L224+4
 4973 17a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4974 17a4 5A1E     		subs	r2, r3, #1
 4975 17a6 3B6F     		ldr	r3, [r7, #112]
 4976 17a8 9A42     		cmp	r2, r3
 4977 17aa 0CD1     		bne	.L143
1081:main.c        ****             {
1082:main.c        ****                  barMidiOuterStrings[1] = (uint16_t)(barMIDI * 512.0f);
 4978              		.loc 1 1082 0
 4979 17ac 4FF08841 		mov	r1, #1140850688
 4980 17b0 386A     		ldr	r0, [r7, #32]	@ float
 4981 17b2 FFF7FEFF 		bl	__aeabi_fmul
 4982 17b6 0346     		mov	r3, r0
 4983 17b8 1846     		mov	r0, r3
 4984 17ba FFF7FEFF 		bl	__aeabi_f2uiz
 4985 17be 0346     		mov	r3, r0
 4986 17c0 9AB2     		uxth	r2, r3
 4987 17c2 884B     		ldr	r3, .L224+8
 4988 17c4 5A80     		strh	r2, [r3, #2]	@ movhi
 4989              	.L143:
1083:main.c        ****             }
1084:main.c        ****             
1085:main.c        ****             float computerMIDIOffset = barMIDI + pedalsMIDI - openStringMIDI_Int[i];// + stringOcta
 4990              		.loc 1 1085 0
 4991 17c6 B96A     		ldr	r1, [r7, #40]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 109


 4992 17c8 386A     		ldr	r0, [r7, #32]	@ float
 4993 17ca FFF7FEFF 		bl	__aeabi_fadd
 4994 17ce 0346     		mov	r3, r0
 4995 17d0 1C46     		mov	r4, r3
 4996 17d2 854A     		ldr	r2, .L224+12
 4997 17d4 3B6F     		ldr	r3, [r7, #112]
 4998 17d6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4999 17da 1846     		mov	r0, r3
 5000 17dc FFF7FEFF 		bl	__aeabi_i2f
 5001 17e0 0346     		mov	r3, r0
 5002 17e2 1946     		mov	r1, r3
 5003 17e4 2046     		mov	r0, r4
 5004 17e6 FFF7FEFF 		bl	__aeabi_fsub
 5005 17ea 0346     		mov	r3, r0
 5006 17ec BB61     		str	r3, [r7, #24]	@ float
1086:main.c        ****             
1087:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 5007              		.loc 1 1087 0
 5008 17ee 7F49     		ldr	r1, .L224+16
 5009 17f0 B869     		ldr	r0, [r7, #24]	@ float
 5010 17f2 FFF7FEFF 		bl	__aeabi_fmul
 5011 17f6 0346     		mov	r3, r0
 5012 17f8 4FF08C41 		mov	r1, #1174405120
 5013 17fc 1846     		mov	r0, r3
 5014 17fe FFF7FEFF 		bl	__aeabi_fadd
 5015 1802 0346     		mov	r3, r0
 5016 1804 7B61     		str	r3, [r7, #20]	@ float
1088:main.c        ****             if (midiSendOn)
 5017              		.loc 1 1088 0
 5018 1806 7A4B     		ldr	r3, .L224+20
 5019 1808 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5020 180a 002B     		cmp	r3, #0
 5021 180c 15D0     		beq	.L146
1089:main.c        ****             {
1090:main.c        ****                 if (pitchBendAmount != prevStringPitchBend[i])
 5022              		.loc 1 1090 0
 5023 180e 794A     		ldr	r2, .L224+24
 5024 1810 3B6F     		ldr	r3, [r7, #112]
 5025 1812 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5026 1816 7969     		ldr	r1, [r7, #20]	@ float
 5027 1818 1846     		mov	r0, r3
 5028 181a FFF7FEFF 		bl	__aeabi_fcmpeq
 5029 181e 0346     		mov	r3, r0
 5030 1820 002B     		cmp	r3, #0
 5031 1822 0AD1     		bne	.L146
1091:main.c        ****                 {
1092:main.c        ****                     sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 5032              		.loc 1 1092 0
 5033 1824 7869     		ldr	r0, [r7, #20]	@ float
 5034 1826 FFF7FEFF 		bl	__aeabi_f2uiz
 5035 182a 0346     		mov	r3, r0
 5036 182c 1A46     		mov	r2, r3
 5037 182e 3B6F     		ldr	r3, [r7, #112]
 5038 1830 0133     		adds	r3, r3, #1
 5039 1832 1946     		mov	r1, r3
 5040 1834 1046     		mov	r0, r2
 5041 1836 FFF7FEFF 		bl	sendMIDIPitchBend
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 110


 5042              	.L146:
1093:main.c        ****                 }
1094:main.c        ****             }
1095:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 5043              		.loc 1 1095 0
 5044 183a 6E49     		ldr	r1, .L224+24
 5045 183c 3B6F     		ldr	r3, [r7, #112]
 5046 183e 7A69     		ldr	r2, [r7, #20]	@ float
 5047 1840 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1096:main.c        ****             
1097:main.c        ****             if (pedalsMIDI > 0.0f)
 5048              		.loc 1 1097 0
 5049 1844 4FF00001 		mov	r1, #0
 5050 1848 B86A     		ldr	r0, [r7, #40]	@ float
 5051 184a FFF7FEFF 		bl	__aeabi_fcmpgt
 5052 184e 0346     		mov	r3, r0
 5053 1850 002B     		cmp	r3, #0
 5054 1852 09D0     		beq	.L148
1098:main.c        ****             {
1099:main.c        ****                 stringMIDI[i] = pedalsMIDI + barMIDI;
 5055              		.loc 1 1099 0
 5056 1854 396A     		ldr	r1, [r7, #32]	@ float
 5057 1856 B86A     		ldr	r0, [r7, #40]	@ float
 5058 1858 FFF7FEFF 		bl	__aeabi_fadd
 5059 185c 0346     		mov	r3, r0
 5060 185e 1946     		mov	r1, r3
 5061 1860 654A     		ldr	r2, .L224+28
 5062 1862 3B6F     		ldr	r3, [r7, #112]
 5063 1864 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 5064              	.L148:
 5065              	.LBE32:
1021:main.c        ****     	{
 5066              		.loc 1 1021 0 discriminator 2
 5067 1868 3B6F     		ldr	r3, [r7, #112]
 5068 186a 0133     		adds	r3, r3, #1
 5069 186c 3B67     		str	r3, [r7, #112]
 5070              	.L136:
1021:main.c        ****     	{
 5071              		.loc 1 1021 0 is_stmt 0 discriminator 1
 5072 186e 5C4B     		ldr	r3, .L224+4
 5073 1870 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5074 1872 1A46     		mov	r2, r3
 5075 1874 3B6F     		ldr	r3, [r7, #112]
 5076 1876 9A42     		cmp	r2, r3
 5077 1878 3FF7D0AD 		bgt	.L150
 5078              	.LBE31:
1100:main.c        ****             }
1101:main.c        ****     	}
1102:main.c        ****        // testpin4_Write(0);
1103:main.c        **** 
1104:main.c        ****         
1105:main.c        ****         if (USB_check_flag)
 5079              		.loc 1 1105 0 is_stmt 1
 5080 187c 5F4B     		ldr	r3, .L224+32
 5081 187e 1B78     		ldrb	r3, [r3]
 5082 1880 DBB2     		uxtb	r3, r3
 5083 1882 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 111


 5084 1884 01D0     		beq	.L151
1106:main.c        ****         {
1107:main.c        ****             checkUSB_Vbus();
 5085              		.loc 1 1107 0
 5086 1886 FFF7FEFF 		bl	checkUSB_Vbus
 5087              	.L151:
1108:main.c        ****         }
1109:main.c        ****         //only service the USB bus if there is a computer plugged in
1110:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 5088              		.loc 1 1110 0
 5089 188a 5D4B     		ldr	r3, .L224+36
 5090 188c 1B78     		ldrb	r3, [r3]
 5091 188e DBB2     		uxtb	r3, r3
 5092 1890 002B     		cmp	r3, #0
 5093 1892 13D0     		beq	.L205
 5094              		.loc 1 1110 0 is_stmt 0 discriminator 1
 5095 1894 FFF7FEFF 		bl	USB_VBusPresent
 5096 1898 0346     		mov	r3, r0
 5097 189a 002B     		cmp	r3, #0
 5098 189c 0ED0     		beq	.L205
1111:main.c        ****         {
1112:main.c        ****             if (midiSent > 64)
 5099              		.loc 1 1112 0 is_stmt 1
 5100 189e 594B     		ldr	r3, .L224+40
 5101 18a0 1B88     		ldrh	r3, [r3]
 5102 18a2 402B     		cmp	r3, #64
 5103 18a4 05D9     		bls	.L153
1113:main.c        ****             {
1114:main.c        ****                 midiOverflow++;
 5104              		.loc 1 1114 0
 5105 18a6 584B     		ldr	r3, .L224+44
 5106 18a8 1B88     		ldrh	r3, [r3]
 5107 18aa 0133     		adds	r3, r3, #1
 5108 18ac 9AB2     		uxth	r2, r3
 5109 18ae 564B     		ldr	r3, .L224+44
 5110 18b0 1A80     		strh	r2, [r3]	@ movhi
 5111              	.L153:
1115:main.c        ****             }
1116:main.c        ****             midiSent = 0;
 5112              		.loc 1 1116 0
 5113 18b2 544B     		ldr	r3, .L224+40
 5114 18b4 0022     		movs	r2, #0
 5115 18b6 1A80     		strh	r2, [r3]	@ movhi
1117:main.c        ****             USB_service();
 5116              		.loc 1 1117 0
 5117 18b8 FFF7FEFF 		bl	USB_service
 5118              	.L205:
1118:main.c        ****         }
1119:main.c        **** 
1120:main.c        ****         
1121:main.c        ****         //make sure previous SPI2 transmission has completed before transferring the remaining midi
1122:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 5119              		.loc 1 1122 0
 5120 18bc 00BF     		nop
 5121              	.L157:
 5122              		.loc 1 1122 0 is_stmt 0 discriminator 7
 5123 18be FFF7FEFF 		bl	SPIM_1_ReadTxStatus
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 112


 5124 18c2 0346     		mov	r3, r0
 5125 18c4 03F00103 		and	r3, r3, #1
 5126 18c8 002B     		cmp	r3, #0
 5127 18ca 06D1     		bne	.L154
 5128              		.loc 1 1122 0 discriminator 2
 5129 18cc FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5130 18d0 0346     		mov	r3, r0
 5131 18d2 03F01003 		and	r3, r3, #16
 5132 18d6 002B     		cmp	r3, #0
 5133 18d8 01D0     		beq	.L155
 5134              	.L154:
 5135              		.loc 1 1122 0 discriminator 3
 5136 18da 0123     		movs	r3, #1
 5137 18dc 00E0     		b	.L156
 5138              	.L155:
 5139              		.loc 1 1122 0 discriminator 4
 5140 18de 0023     		movs	r3, #0
 5141              	.L156:
 5142              		.loc 1 1122 0 discriminator 6
 5143 18e0 002B     		cmp	r3, #0
 5144 18e2 ECD0     		beq	.L157
1123:main.c        ****         {
1124:main.c        ****             ;
1125:main.c        ****         }
1126:main.c        ****         //testpin6_Write(1);
1127:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 5145              		.loc 1 1127 0 is_stmt 1
 5146 18e4 494B     		ldr	r3, .L224+48
 5147 18e6 1B78     		ldrb	r3, [r3]
 5148 18e8 DBB2     		uxtb	r3, r3
 5149 18ea 012B     		cmp	r3, #1
 5150 18ec 55D1     		bne	.L158
1128:main.c        ****         {
1129:main.c        ****             if (sendMessageEnd) //send end message
 5151              		.loc 1 1129 0
 5152 18ee 484B     		ldr	r3, .L224+52
 5153 18f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5154 18f2 002B     		cmp	r3, #0
 5155 18f4 1CD0     		beq	.L159
1130:main.c        ****             {
1131:main.c        ****                 myArray[0] = 253;
 5156              		.loc 1 1131 0
 5157 18f6 474B     		ldr	r3, .L224+56
 5158 18f8 FD22     		movs	r2, #253
 5159 18fa 1A70     		strb	r2, [r3]
1132:main.c        ****                 myArray[1] = presetNumberToWrite;
 5160              		.loc 1 1132 0
 5161 18fc 464B     		ldr	r3, .L224+60
 5162 18fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5163 1900 444B     		ldr	r3, .L224+56
 5164 1902 5A70     		strb	r2, [r3, #1]
1133:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 5165              		.loc 1 1133 0
 5166 1904 444B     		ldr	r3, .L224+60
 5167 1906 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5168 1908 444B     		ldr	r3, .L224+64
 5169 190a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 113


1134:main.c        ****                 //display previous preset as loaded
1135:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5170              		.loc 1 1135 0
 5171 190c FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1136:main.c        ****                 //OLED_invert(0);
1137:main.c        ****                 sendMessageEnd = 0;
 5172              		.loc 1 1137 0
 5173 1910 3F4B     		ldr	r3, .L224+52
 5174 1912 0022     		movs	r2, #0
 5175 1914 1A70     		strb	r2, [r3]
1138:main.c        ****                 sendingMessage = 0;
 5176              		.loc 1 1138 0
 5177 1916 3D4B     		ldr	r3, .L224+48
 5178 1918 0022     		movs	r2, #0
 5179 191a 1A70     		strb	r2, [r3]
1139:main.c        ****                 messageArraySendCount = 0;
 5180              		.loc 1 1139 0
 5181 191c 404B     		ldr	r3, .L224+68
 5182 191e 0022     		movs	r2, #0
 5183 1920 1A80     		strh	r2, [r3]	@ movhi
1140:main.c        ****                 myArray[30] = 254;
 5184              		.loc 1 1140 0
 5185 1922 3C4B     		ldr	r3, .L224+56
 5186 1924 FE22     		movs	r2, #254
 5187 1926 9A77     		strb	r2, [r3, #30]
1141:main.c        ****                 myArray[31] = 253;
 5188              		.loc 1 1141 0
 5189 1928 3A4B     		ldr	r3, .L224+56
 5190 192a FD22     		movs	r2, #253
 5191 192c DA77     		strb	r2, [r3, #31]
 5192 192e 40E2     		b	.L165
 5193              	.L159:
1142:main.c        ****                 
1143:main.c        ****             }
1144:main.c        ****             else //send chunks
1145:main.c        ****             {
1146:main.c        ****                 //send the next preset Chunkkkkk
1147:main.c        ****                 myArray[0] = 2;
 5194              		.loc 1 1147 0
 5195 1930 384B     		ldr	r3, .L224+56
 5196 1932 0222     		movs	r2, #2
 5197 1934 1A70     		strb	r2, [r3]
1148:main.c        ****                 myArray[1] = presetNumberToWrite;
 5198              		.loc 1 1148 0
 5199 1936 384B     		ldr	r3, .L224+60
 5200 1938 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5201 193a 364B     		ldr	r3, .L224+56
 5202 193c 5A70     		strb	r2, [r3, #1]
 5203              	.LBB34:
1149:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 5204              		.loc 1 1149 0
 5205 193e 0223     		movs	r3, #2
 5206 1940 BB66     		str	r3, [r7, #104]
 5207 1942 20E0     		b	.L161
 5208              	.L164:
1150:main.c        ****                 {
1151:main.c        ****                     if (messageArraySendCount < messageArraySize)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 114


 5209              		.loc 1 1151 0
 5210 1944 364B     		ldr	r3, .L224+68
 5211 1946 1A88     		ldrh	r2, [r3]
 5212 1948 364B     		ldr	r3, .L224+72
 5213 194a 1B88     		ldrh	r3, [r3]
 5214 194c 9A42     		cmp	r2, r3
 5215 194e 0FD2     		bcs	.L162
1152:main.c        ****                     {
1153:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 5216              		.loc 1 1153 0
 5217 1950 334B     		ldr	r3, .L224+68
 5218 1952 1B88     		ldrh	r3, [r3]
 5219 1954 5A1C     		adds	r2, r3, #1
 5220 1956 91B2     		uxth	r1, r2
 5221 1958 314A     		ldr	r2, .L224+68
 5222 195a 1180     		strh	r1, [r2]	@ movhi
 5223 195c 1A46     		mov	r2, r3
 5224 195e 324B     		ldr	r3, .L224+76
 5225 1960 9B5C     		ldrb	r3, [r3, r2]
 5226 1962 D9B2     		uxtb	r1, r3
 5227 1964 2B4A     		ldr	r2, .L224+56
 5228 1966 BB6E     		ldr	r3, [r7, #104]
 5229 1968 1344     		add	r3, r3, r2
 5230 196a 0A46     		mov	r2, r1
 5231 196c 1A70     		strb	r2, [r3]
 5232 196e 07E0     		b	.L163
 5233              	.L162:
1154:main.c        ****                     }
1155:main.c        ****                     else
1156:main.c        ****                     {
1157:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 5234              		.loc 1 1157 0
 5235 1970 284A     		ldr	r2, .L224+56
 5236 1972 BB6E     		ldr	r3, [r7, #104]
 5237 1974 1344     		add	r3, r3, r2
 5238 1976 EE22     		movs	r2, #238
 5239 1978 1A70     		strb	r2, [r3]
1158:main.c        ****                         sendMessageEnd = 1;
 5240              		.loc 1 1158 0
 5241 197a 254B     		ldr	r3, .L224+52
 5242 197c 0122     		movs	r2, #1
 5243 197e 1A70     		strb	r2, [r3]
 5244              	.L163:
1149:main.c        ****                 {
 5245              		.loc 1 1149 0 discriminator 2
 5246 1980 BB6E     		ldr	r3, [r7, #104]
 5247 1982 0133     		adds	r3, r3, #1
 5248 1984 BB66     		str	r3, [r7, #104]
 5249              	.L161:
1149:main.c        ****                 {
 5250              		.loc 1 1149 0 is_stmt 0 discriminator 1
 5251 1986 BB6E     		ldr	r3, [r7, #104]
 5252 1988 1D2B     		cmp	r3, #29
 5253 198a DBD9     		bls	.L164
 5254              	.LBE34:
1159:main.c        ****                     }
1160:main.c        ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 115


1161:main.c        ****                 myArray[30] = 254;
 5255              		.loc 1 1161 0 is_stmt 1
 5256 198c 214B     		ldr	r3, .L224+56
 5257 198e FE22     		movs	r2, #254
 5258 1990 9A77     		strb	r2, [r3, #30]
1162:main.c        ****                 myArray[31] = 253;
 5259              		.loc 1 1162 0
 5260 1992 204B     		ldr	r3, .L224+56
 5261 1994 FD22     		movs	r2, #253
 5262 1996 DA77     		strb	r2, [r3, #31]
 5263 1998 0BE2     		b	.L165
 5264              	.L158:
1163:main.c        ****             }    
1164:main.c        ****         }
1165:main.c        ****         
1166:main.c        ****         else if (sendSingleParamUpdate)
 5265              		.loc 1 1166 0
 5266 199a 244B     		ldr	r3, .L224+80
 5267 199c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5268 199e 002B     		cmp	r3, #0
 5269 19a0 4ED0     		beq	.L166
1167:main.c        ****         {
1168:main.c        ****             myArray[0] = 6;
 5270              		.loc 1 1168 0
 5271 19a2 1C4B     		ldr	r3, .L224+56
 5272 19a4 0622     		movs	r2, #6
 5273 19a6 1A70     		strb	r2, [r3]
1169:main.c        ****             myArray[1] = singleParamToUpdateHigh;
 5274              		.loc 1 1169 0
 5275 19a8 214B     		ldr	r3, .L224+84
 5276 19aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5277 19ac 194B     		ldr	r3, .L224+56
 5278 19ae 5A70     		strb	r2, [r3, #1]
1170:main.c        ****             myArray[2] = singleParamToUpdateLow;
 5279              		.loc 1 1170 0
 5280 19b0 204B     		ldr	r3, .L224+88
 5281 19b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5282 19b4 174B     		ldr	r3, .L224+56
 5283 19b6 9A70     		strb	r2, [r3, #2]
1171:main.c        ****             myArray[3] = singleParamValueHigh;
 5284              		.loc 1 1171 0
 5285 19b8 1F4B     		ldr	r3, .L224+92
 5286 19ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5287 19bc 154B     		ldr	r3, .L224+56
 5288 19be DA70     		strb	r2, [r3, #3]
1172:main.c        ****             myArray[4] = singleParamValueLow;
 5289              		.loc 1 1172 0
 5290 19c0 1E4B     		ldr	r3, .L224+96
 5291 19c2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5292 19c4 134B     		ldr	r3, .L224+56
 5293 19c6 1A71     		strb	r2, [r3, #4]
1173:main.c        ****             myArray[30] = 254;
 5294              		.loc 1 1173 0
 5295 19c8 124B     		ldr	r3, .L224+56
 5296 19ca FE22     		movs	r2, #254
 5297 19cc 9A77     		strb	r2, [r3, #30]
1174:main.c        ****             myArray[31] = 253;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 116


 5298              		.loc 1 1174 0
 5299 19ce 114B     		ldr	r3, .L224+56
 5300 19d0 FD22     		movs	r2, #253
 5301 19d2 DA77     		strb	r2, [r3, #31]
1175:main.c        ****             sendSingleParamUpdate = 0;
 5302              		.loc 1 1175 0
 5303 19d4 154B     		ldr	r3, .L224+80
 5304 19d6 0022     		movs	r2, #0
 5305 19d8 1A70     		strb	r2, [r3]
 5306 19da EAE1     		b	.L165
 5307              	.L225:
 5308              		.align	2
 5309              	.L224:
 5310 19dc 00000000 		.word	midiBarSendOn
 5311 19e0 00000000 		.word	numStrings
 5312 19e4 00000000 		.word	barMidiOuterStrings
 5313 19e8 00000000 		.word	openStringMIDI_Int
 5314 19ec ABAA2A43 		.word	1126869675
 5315 19f0 00000000 		.word	midiSendOn
 5316 19f4 00000000 		.word	prevStringPitchBend
 5317 19f8 00000000 		.word	stringMIDI
 5318 19fc 00000000 		.word	USB_check_flag
 5319 1a00 00000000 		.word	USB_active
 5320 1a04 00000000 		.word	midiSent
 5321 1a08 00000000 		.word	midiOverflow
 5322 1a0c 00000000 		.word	sendingMessage
 5323 1a10 00000000 		.word	sendMessageEnd
 5324 1a14 00000000 		.word	myArray
 5325 1a18 00000000 		.word	presetNumberToWrite
 5326 1a1c 00000000 		.word	currentPresetSelection
 5327 1a20 00000000 		.word	messageArraySendCount
 5328 1a24 00000000 		.word	messageArraySize
 5329 1a28 00000000 		.word	presetArray
 5330 1a2c 00000000 		.word	sendSingleParamUpdate
 5331 1a30 00000000 		.word	singleParamToUpdateHigh
 5332 1a34 00000000 		.word	singleParamToUpdateLow
 5333 1a38 00000000 		.word	singleParamValueHigh
 5334 1a3c 00000000 		.word	singleParamValueLow
 5335              	.L166:
1176:main.c        ****         }
1177:main.c        ****         
1178:main.c        ****         else if (sendMappingChangeUpdate)
 5336              		.loc 1 1178 0
 5337 1a40 934B     		ldr	r3, .L226
 5338 1a42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5339 1a44 002B     		cmp	r3, #0
 5340 1a46 24D0     		beq	.L167
1179:main.c        ****         {
1180:main.c        ****             myArray[0] = 7;
 5341              		.loc 1 1180 0
 5342 1a48 924B     		ldr	r3, .L226+4
 5343 1a4a 0722     		movs	r2, #7
 5344 1a4c 1A70     		strb	r2, [r3]
1181:main.c        ****             myArray[1] = mappingArray[0];
 5345              		.loc 1 1181 0
 5346 1a4e 924B     		ldr	r3, .L226+8
 5347 1a50 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 117


 5348 1a52 904B     		ldr	r3, .L226+4
 5349 1a54 5A70     		strb	r2, [r3, #1]
1182:main.c        ****             myArray[2] =  mappingArray[1];
 5350              		.loc 1 1182 0
 5351 1a56 904B     		ldr	r3, .L226+8
 5352 1a58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5353 1a5a 8E4B     		ldr	r3, .L226+4
 5354 1a5c 9A70     		strb	r2, [r3, #2]
1183:main.c        ****             myArray[3] =  mappingArray[2];
 5355              		.loc 1 1183 0
 5356 1a5e 8E4B     		ldr	r3, .L226+8
 5357 1a60 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 5358 1a62 8C4B     		ldr	r3, .L226+4
 5359 1a64 DA70     		strb	r2, [r3, #3]
1184:main.c        ****             myArray[4] =  mappingArray[3];
 5360              		.loc 1 1184 0
 5361 1a66 8C4B     		ldr	r3, .L226+8
 5362 1a68 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5363 1a6a 8A4B     		ldr	r3, .L226+4
 5364 1a6c 1A71     		strb	r2, [r3, #4]
1185:main.c        ****             myArray[5] =  mappingArray[4];
 5365              		.loc 1 1185 0
 5366 1a6e 8A4B     		ldr	r3, .L226+8
 5367 1a70 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 5368 1a72 884B     		ldr	r3, .L226+4
 5369 1a74 5A71     		strb	r2, [r3, #5]
1186:main.c        ****             myArray[6] =  mappingArray[5];
 5370              		.loc 1 1186 0
 5371 1a76 884B     		ldr	r3, .L226+8
 5372 1a78 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 5373 1a7a 864B     		ldr	r3, .L226+4
 5374 1a7c 9A71     		strb	r2, [r3, #6]
1187:main.c        ****             myArray[30] = 254;
 5375              		.loc 1 1187 0
 5376 1a7e 854B     		ldr	r3, .L226+4
 5377 1a80 FE22     		movs	r2, #254
 5378 1a82 9A77     		strb	r2, [r3, #30]
1188:main.c        ****             myArray[31] = 253;
 5379              		.loc 1 1188 0
 5380 1a84 834B     		ldr	r3, .L226+4
 5381 1a86 FD22     		movs	r2, #253
 5382 1a88 DA77     		strb	r2, [r3, #31]
1189:main.c        ****             sendMappingChangeUpdate = 0;
 5383              		.loc 1 1189 0
 5384 1a8a 814B     		ldr	r3, .L226
 5385 1a8c 0022     		movs	r2, #0
 5386 1a8e 1A70     		strb	r2, [r3]
 5387 1a90 8FE1     		b	.L165
 5388              	.L167:
1190:main.c        ****         }
1191:main.c        ****         else if (volumeWaitingToSend)
 5389              		.loc 1 1191 0
 5390 1a92 824B     		ldr	r3, .L226+12
 5391 1a94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5392 1a96 002B     		cmp	r3, #0
 5393 1a98 12D0     		beq	.L168
1192:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 118


1193:main.c        ****             myArray[0] = 10;
 5394              		.loc 1 1193 0
 5395 1a9a 7E4B     		ldr	r3, .L226+4
 5396 1a9c 0A22     		movs	r2, #10
 5397 1a9e 1A70     		strb	r2, [r3]
1194:main.c        ****             myArray[1] = volumeInt;
 5398              		.loc 1 1194 0
 5399 1aa0 7F4B     		ldr	r3, .L226+16
 5400 1aa2 93F90030 		ldrsb	r3, [r3]
 5401 1aa6 DAB2     		uxtb	r2, r3
 5402 1aa8 7A4B     		ldr	r3, .L226+4
 5403 1aaa 5A70     		strb	r2, [r3, #1]
1195:main.c        ****             myArray[30] = 254;
 5404              		.loc 1 1195 0
 5405 1aac 794B     		ldr	r3, .L226+4
 5406 1aae FE22     		movs	r2, #254
 5407 1ab0 9A77     		strb	r2, [r3, #30]
1196:main.c        ****             myArray[31] = 253;
 5408              		.loc 1 1196 0
 5409 1ab2 784B     		ldr	r3, .L226+4
 5410 1ab4 FD22     		movs	r2, #253
 5411 1ab6 DA77     		strb	r2, [r3, #31]
1197:main.c        ****             volumeWaitingToSend = 0;
 5412              		.loc 1 1197 0
 5413 1ab8 784B     		ldr	r3, .L226+12
 5414 1aba 0022     		movs	r2, #0
 5415 1abc 1A70     		strb	r2, [r3]
 5416 1abe 78E1     		b	.L165
 5417              	.L168:
1198:main.c        ****         }
1199:main.c        ****         
1200:main.c        ****         else if (sendFirmwareUpdateRequest == 1)
 5418              		.loc 1 1200 0
 5419 1ac0 784B     		ldr	r3, .L226+20
 5420 1ac2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5421 1ac4 012B     		cmp	r3, #1
 5422 1ac6 0FD1     		bne	.L169
1201:main.c        ****         {
1202:main.c        ****             myArray[0] = 11;
 5423              		.loc 1 1202 0
 5424 1ac8 724B     		ldr	r3, .L226+4
 5425 1aca 0B22     		movs	r2, #11
 5426 1acc 1A70     		strb	r2, [r3]
1203:main.c        ****             myArray[1] = 0;
 5427              		.loc 1 1203 0
 5428 1ace 714B     		ldr	r3, .L226+4
 5429 1ad0 0022     		movs	r2, #0
 5430 1ad2 5A70     		strb	r2, [r3, #1]
1204:main.c        ****             myArray[30] = 254;
 5431              		.loc 1 1204 0
 5432 1ad4 6F4B     		ldr	r3, .L226+4
 5433 1ad6 FE22     		movs	r2, #254
 5434 1ad8 9A77     		strb	r2, [r3, #30]
1205:main.c        ****             myArray[31] = 253;
 5435              		.loc 1 1205 0
 5436 1ada 6E4B     		ldr	r3, .L226+4
 5437 1adc FD22     		movs	r2, #253
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 119


 5438 1ade DA77     		strb	r2, [r3, #31]
1206:main.c        ****             sendFirmwareUpdateRequest = 0;
 5439              		.loc 1 1206 0
 5440 1ae0 704B     		ldr	r3, .L226+20
 5441 1ae2 0022     		movs	r2, #0
 5442 1ae4 1A70     		strb	r2, [r3]
 5443 1ae6 64E1     		b	.L165
 5444              	.L169:
1207:main.c        ****         }
1208:main.c        ****         else if (sendFirmwareUpdateRequest == 2)
 5445              		.loc 1 1208 0
 5446 1ae8 6E4B     		ldr	r3, .L226+20
 5447 1aea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5448 1aec 022B     		cmp	r3, #2
 5449 1aee 0FD1     		bne	.L170
1209:main.c        ****         {
1210:main.c        ****             myArray[0] = 12;
 5450              		.loc 1 1210 0
 5451 1af0 684B     		ldr	r3, .L226+4
 5452 1af2 0C22     		movs	r2, #12
 5453 1af4 1A70     		strb	r2, [r3]
1211:main.c        ****             myArray[1] = 0;
 5454              		.loc 1 1211 0
 5455 1af6 674B     		ldr	r3, .L226+4
 5456 1af8 0022     		movs	r2, #0
 5457 1afa 5A70     		strb	r2, [r3, #1]
1212:main.c        ****             myArray[30] = 254;
 5458              		.loc 1 1212 0
 5459 1afc 654B     		ldr	r3, .L226+4
 5460 1afe FE22     		movs	r2, #254
 5461 1b00 9A77     		strb	r2, [r3, #30]
1213:main.c        ****             myArray[31] = 253;
 5462              		.loc 1 1213 0
 5463 1b02 644B     		ldr	r3, .L226+4
 5464 1b04 FD22     		movs	r2, #253
 5465 1b06 DA77     		strb	r2, [r3, #31]
1214:main.c        ****             sendFirmwareUpdateRequest = 0;
 5466              		.loc 1 1214 0
 5467 1b08 664B     		ldr	r3, .L226+20
 5468 1b0a 0022     		movs	r2, #0
 5469 1b0c 1A70     		strb	r2, [r3]
 5470 1b0e 50E1     		b	.L165
 5471              	.L170:
1215:main.c        ****         }
1216:main.c        ****         
1217:main.c        ****         else if (sendLocalPresetStoreCommand == 1)
 5472              		.loc 1 1217 0
 5473 1b10 654B     		ldr	r3, .L226+24
 5474 1b12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5475 1b14 012B     		cmp	r3, #1
 5476 1b16 2DD1     		bne	.L171
1218:main.c        ****         {
1219:main.c        ****             myArray[0] = 14;
 5477              		.loc 1 1219 0
 5478 1b18 5E4B     		ldr	r3, .L226+4
 5479 1b1a 0E22     		movs	r2, #14
 5480 1b1c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 120


1220:main.c        ****             myArray[1] = presetNumberToStore;
 5481              		.loc 1 1220 0
 5482 1b1e 634B     		ldr	r3, .L226+28
 5483 1b20 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5484 1b22 5C4B     		ldr	r3, .L226+4
 5485 1b24 5A70     		strb	r2, [r3, #1]
1221:main.c        ****             myArray[2] = 17;
 5486              		.loc 1 1221 0
 5487 1b26 5B4B     		ldr	r3, .L226+4
 5488 1b28 1122     		movs	r2, #17
 5489 1b2a 9A70     		strb	r2, [r3, #2]
1222:main.c        ****             myArray[3] = 18;
 5490              		.loc 1 1222 0
 5491 1b2c 594B     		ldr	r3, .L226+4
 5492 1b2e 1222     		movs	r2, #18
 5493 1b30 DA70     		strb	r2, [r3, #3]
1223:main.c        ****             myArray[4] = 1;
 5494              		.loc 1 1223 0
 5495 1b32 584B     		ldr	r3, .L226+4
 5496 1b34 0122     		movs	r2, #1
 5497 1b36 1A71     		strb	r2, [r3, #4]
1224:main.c        ****             myArray[5] = 1;
 5498              		.loc 1 1224 0
 5499 1b38 564B     		ldr	r3, .L226+4
 5500 1b3a 0122     		movs	r2, #1
 5501 1b3c 5A71     		strb	r2, [r3, #5]
1225:main.c        ****             myArray[30] = 254;
 5502              		.loc 1 1225 0
 5503 1b3e 554B     		ldr	r3, .L226+4
 5504 1b40 FE22     		movs	r2, #254
 5505 1b42 9A77     		strb	r2, [r3, #30]
1226:main.c        ****             myArray[31] = 253;
 5506              		.loc 1 1226 0
 5507 1b44 534B     		ldr	r3, .L226+4
 5508 1b46 FD22     		movs	r2, #253
 5509 1b48 DA77     		strb	r2, [r3, #31]
 5510              	.LBB35:
1227:main.c        ****             for (int i = 0; i < 14; i++)
 5511              		.loc 1 1227 0
 5512 1b4a 0023     		movs	r3, #0
 5513 1b4c 7B66     		str	r3, [r7, #100]
 5514 1b4e 0AE0     		b	.L172
 5515              	.L173:
1228:main.c        ****             {
1229:main.c        ****                  myArray[i+6] = newPresetName[i];
 5516              		.loc 1 1229 0 discriminator 3
 5517 1b50 7B6E     		ldr	r3, [r7, #100]
 5518 1b52 0633     		adds	r3, r3, #6
 5519 1b54 5649     		ldr	r1, .L226+32
 5520 1b56 7A6E     		ldr	r2, [r7, #100]
 5521 1b58 0A44     		add	r2, r2, r1
 5522 1b5a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5523 1b5c 4D4A     		ldr	r2, .L226+4
 5524 1b5e D154     		strb	r1, [r2, r3]
1227:main.c        ****             for (int i = 0; i < 14; i++)
 5525              		.loc 1 1227 0 discriminator 3
 5526 1b60 7B6E     		ldr	r3, [r7, #100]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 121


 5527 1b62 0133     		adds	r3, r3, #1
 5528 1b64 7B66     		str	r3, [r7, #100]
 5529              	.L172:
1227:main.c        ****             for (int i = 0; i < 14; i++)
 5530              		.loc 1 1227 0 is_stmt 0 discriminator 1
 5531 1b66 7B6E     		ldr	r3, [r7, #100]
 5532 1b68 0D2B     		cmp	r3, #13
 5533 1b6a F1DD     		ble	.L173
 5534              	.LBE35:
1230:main.c        ****             }
1231:main.c        ****             sendLocalPresetStoreCommand = 0;
 5535              		.loc 1 1231 0 is_stmt 1
 5536 1b6c 4E4B     		ldr	r3, .L226+24
 5537 1b6e 0022     		movs	r2, #0
 5538 1b70 1A70     		strb	r2, [r3]
 5539 1b72 1EE1     		b	.L165
 5540              	.L171:
1232:main.c        ****         }
1233:main.c        ****         
1234:main.c        ****         else if (sendKnobs)
 5541              		.loc 1 1234 0
 5542 1b74 4F4B     		ldr	r3, .L226+36
 5543 1b76 1B78     		ldrb	r3, [r3]
 5544 1b78 DBB2     		uxtb	r3, r3
 5545 1b7a 002B     		cmp	r3, #0
 5546 1b7c 00F08180 		beq	.L174
1235:main.c        ****         {
1236:main.c        ****             if (whichMacroPageIsActive == 0)
 5547              		.loc 1 1236 0
 5548 1b80 4D4B     		ldr	r3, .L226+40
 5549 1b82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5550 1b84 002B     		cmp	r3, #0
 5551 1b86 03D1     		bne	.L175
1237:main.c        ****             {
1238:main.c        ****                 myArray[0] = 3; //sending knob stuff, not a preset send
 5552              		.loc 1 1238 0
 5553 1b88 424B     		ldr	r3, .L226+4
 5554 1b8a 0322     		movs	r2, #3
 5555 1b8c 1A70     		strb	r2, [r3]
 5556 1b8e 02E0     		b	.L176
 5557              	.L175:
1239:main.c        ****             }
1240:main.c        ****             else
1241:main.c        ****             {
1242:main.c        ****                 myArray[0] = 13; //sending additional knob stuff, not a preset send
 5558              		.loc 1 1242 0
 5559 1b90 404B     		ldr	r3, .L226+4
 5560 1b92 0D22     		movs	r2, #13
 5561 1b94 1A70     		strb	r2, [r3]
 5562              	.L176:
 5563              	.LBB36:
1243:main.c        ****             }
1244:main.c        ****             for (int i = 0; i < 8; i++)
 5564              		.loc 1 1244 0
 5565 1b96 0023     		movs	r3, #0
 5566 1b98 3B66     		str	r3, [r7, #96]
 5567 1b9a 0DE0     		b	.L177
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 122


 5568              	.L178:
1245:main.c        ****             {
1246:main.c        ****                 myArray[i + 1] = macroKnobValues[i+whichMacroPageIsActive];
 5569              		.loc 1 1246 0 discriminator 3
 5570 1b9c 3B6E     		ldr	r3, [r7, #96]
 5571 1b9e 0133     		adds	r3, r3, #1
 5572 1ba0 454A     		ldr	r2, .L226+40
 5573 1ba2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5574 1ba4 1146     		mov	r1, r2
 5575 1ba6 3A6E     		ldr	r2, [r7, #96]
 5576 1ba8 0A44     		add	r2, r2, r1
 5577 1baa 4449     		ldr	r1, .L226+44
 5578 1bac 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5579 1bae 394A     		ldr	r2, .L226+4
 5580 1bb0 D154     		strb	r1, [r2, r3]
1244:main.c        ****             {
 5581              		.loc 1 1244 0 discriminator 3
 5582 1bb2 3B6E     		ldr	r3, [r7, #96]
 5583 1bb4 0133     		adds	r3, r3, #1
 5584 1bb6 3B66     		str	r3, [r7, #96]
 5585              	.L177:
1244:main.c        ****             {
 5586              		.loc 1 1244 0 is_stmt 0 discriminator 1
 5587 1bb8 3B6E     		ldr	r3, [r7, #96]
 5588 1bba 072B     		cmp	r3, #7
 5589 1bbc EEDD     		ble	.L178
 5590              	.LBE36:
 5591              	.LBB37:
1247:main.c        ****             }
1248:main.c        ****             for (int i = 0; i < 4; i++)
 5592              		.loc 1 1248 0 is_stmt 1
 5593 1bbe 0023     		movs	r3, #0
 5594 1bc0 FB65     		str	r3, [r7, #92]
 5595 1bc2 0AE0     		b	.L179
 5596              	.L180:
1249:main.c        ****             {
1250:main.c        ****                 myArray[i + 9] = knobs[i];
 5597              		.loc 1 1250 0 discriminator 3
 5598 1bc4 FB6D     		ldr	r3, [r7, #92]
 5599 1bc6 0933     		adds	r3, r3, #9
 5600 1bc8 3D49     		ldr	r1, .L226+48
 5601 1bca FA6D     		ldr	r2, [r7, #92]
 5602 1bcc 0A44     		add	r2, r2, r1
 5603 1bce 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5604 1bd0 304A     		ldr	r2, .L226+4
 5605 1bd2 D154     		strb	r1, [r2, r3]
1248:main.c        ****             {
 5606              		.loc 1 1248 0 discriminator 3
 5607 1bd4 FB6D     		ldr	r3, [r7, #92]
 5608 1bd6 0133     		adds	r3, r3, #1
 5609 1bd8 FB65     		str	r3, [r7, #92]
 5610              	.L179:
1248:main.c        ****             {
 5611              		.loc 1 1248 0 is_stmt 0 discriminator 1
 5612 1bda FB6D     		ldr	r3, [r7, #92]
 5613 1bdc 032B     		cmp	r3, #3
 5614 1bde F1DD     		ble	.L180
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 123


 5615              	.LBE37:
 5616              	.LBB38:
1251:main.c        ****             }
1252:main.c        ****             for (int i = 0; i < 10; i++)
 5617              		.loc 1 1252 0 is_stmt 1
 5618 1be0 0023     		movs	r3, #0
 5619 1be2 BB65     		str	r3, [r7, #88]
 5620 1be4 0AE0     		b	.L181
 5621              	.L182:
1253:main.c        ****             {
1254:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 5622              		.loc 1 1254 0 discriminator 3
 5623 1be6 BB6D     		ldr	r3, [r7, #88]
 5624 1be8 0D33     		adds	r3, r3, #13
 5625 1bea 3649     		ldr	r1, .L226+52
 5626 1bec BA6D     		ldr	r2, [r7, #88]
 5627 1bee 0A44     		add	r2, r2, r1
 5628 1bf0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5629 1bf2 284A     		ldr	r2, .L226+4
 5630 1bf4 D154     		strb	r1, [r2, r3]
1252:main.c        ****             {
 5631              		.loc 1 1252 0 discriminator 3
 5632 1bf6 BB6D     		ldr	r3, [r7, #88]
 5633 1bf8 0133     		adds	r3, r3, #1
 5634 1bfa BB65     		str	r3, [r7, #88]
 5635              	.L181:
1252:main.c        ****             {
 5636              		.loc 1 1252 0 is_stmt 0 discriminator 1
 5637 1bfc BB6D     		ldr	r3, [r7, #88]
 5638 1bfe 092B     		cmp	r3, #9
 5639 1c00 F1DD     		ble	.L182
 5640              	.LBE38:
1255:main.c        ****             }
1256:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (octaveAction << 6);
 5641              		.loc 1 1256 0 is_stmt 1
 5642 1c02 314B     		ldr	r3, .L226+56
 5643 1c04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5644 1c06 1B01     		lsls	r3, r3, #4
 5645 1c08 5AB2     		sxtb	r2, r3
 5646 1c0a 304B     		ldr	r3, .L226+60
 5647 1c0c 1B68     		ldr	r3, [r3]
 5648 1c0e 5BB2     		sxtb	r3, r3
 5649 1c10 1343     		orrs	r3, r3, r2
 5650 1c12 5AB2     		sxtb	r2, r3
 5651 1c14 2E4B     		ldr	r3, .L226+64
 5652 1c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5653 1c18 5B01     		lsls	r3, r3, #5
 5654 1c1a 5BB2     		sxtb	r3, r3
 5655 1c1c 1343     		orrs	r3, r3, r2
 5656 1c1e 5AB2     		sxtb	r2, r3
 5657 1c20 2C4B     		ldr	r3, .L226+68
 5658 1c22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5659 1c24 9B01     		lsls	r3, r3, #6
 5660 1c26 5BB2     		sxtb	r3, r3
 5661 1c28 1343     		orrs	r3, r3, r2
 5662 1c2a 5BB2     		sxtb	r3, r3
 5663 1c2c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 124


 5664 1c2e 194B     		ldr	r3, .L226+4
 5665 1c30 1A76     		strb	r2, [r3, #24]
1257:main.c        ****             myArray[25] = patchNum;
 5666              		.loc 1 1257 0
 5667 1c32 294B     		ldr	r3, .L226+72
 5668 1c34 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5669 1c36 174B     		ldr	r3, .L226+4
 5670 1c38 5A76     		strb	r2, [r3, #25]
1258:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5671              		.loc 1 1258 0
 5672 1c3a 284B     		ldr	r3, .L226+76
 5673 1c3c B3F90030 		ldrsh	r3, [r3]
 5674 1c40 1B12     		asrs	r3, r3, #8
 5675 1c42 1BB2     		sxth	r3, r3
 5676 1c44 DAB2     		uxtb	r2, r3
 5677 1c46 134B     		ldr	r3, .L226+4
 5678 1c48 9A76     		strb	r2, [r3, #26]
1259:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5679              		.loc 1 1259 0
 5680 1c4a 244B     		ldr	r3, .L226+76
 5681 1c4c B3F90030 		ldrsh	r3, [r3]
 5682 1c50 DAB2     		uxtb	r2, r3
 5683 1c52 104B     		ldr	r3, .L226+4
 5684 1c54 DA76     		strb	r2, [r3, #27]
1260:main.c        ****             myArray[28] = barMidiOuterStrings[1] >> 8;
 5685              		.loc 1 1260 0
 5686 1c56 224B     		ldr	r3, .L226+80
 5687 1c58 5B88     		ldrh	r3, [r3, #2]
 5688 1c5a 1B0A     		lsrs	r3, r3, #8
 5689 1c5c 9BB2     		uxth	r3, r3
 5690 1c5e DAB2     		uxtb	r2, r3
 5691 1c60 0C4B     		ldr	r3, .L226+4
 5692 1c62 1A77     		strb	r2, [r3, #28]
1261:main.c        ****             myArray[29] = barMidiOuterStrings[1] & 0xff;
 5693              		.loc 1 1261 0
 5694 1c64 1E4B     		ldr	r3, .L226+80
 5695 1c66 5B88     		ldrh	r3, [r3, #2]
 5696 1c68 DAB2     		uxtb	r2, r3
 5697 1c6a 0A4B     		ldr	r3, .L226+4
 5698 1c6c 5A77     		strb	r2, [r3, #29]
1262:main.c        ****             myArray[30] = 254;
 5699              		.loc 1 1262 0
 5700 1c6e 094B     		ldr	r3, .L226+4
 5701 1c70 FE22     		movs	r2, #254
 5702 1c72 9A77     		strb	r2, [r3, #30]
1263:main.c        ****             myArray[31] = 253;
 5703              		.loc 1 1263 0
 5704 1c74 074B     		ldr	r3, .L226+4
 5705 1c76 FD22     		movs	r2, #253
 5706 1c78 DA77     		strb	r2, [r3, #31]
1264:main.c        ****             
1265:main.c        ****             
1266:main.c        ****             sendKnobs = 0;
 5707              		.loc 1 1266 0
 5708 1c7a 0E4B     		ldr	r3, .L226+36
 5709 1c7c 0022     		movs	r2, #0
 5710 1c7e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 125


 5711 1c80 97E0     		b	.L165
 5712              	.L174:
1267:main.c        ****         }
1268:main.c        ****         else
1269:main.c        ****         {
1270:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 5713              		.loc 1 1270 0
 5714 1c82 044B     		ldr	r3, .L226+4
 5715 1c84 0122     		movs	r2, #1
 5716 1c86 1A70     		strb	r2, [r3]
 5717              	.LBB39:
1271:main.c        ****             for (int i = 0; i < 12; i++)
 5718              		.loc 1 1271 0
 5719 1c88 0023     		movs	r3, #0
 5720 1c8a 7B65     		str	r3, [r7, #84]
 5721 1c8c 4FE0     		b	.L183
 5722              	.L227:
 5723 1c8e 00BF     		.align	2
 5724              	.L226:
 5725 1c90 00000000 		.word	sendMappingChangeUpdate
 5726 1c94 00000000 		.word	myArray
 5727 1c98 00000000 		.word	mappingArray
 5728 1c9c 00000000 		.word	volumeWaitingToSend
 5729 1ca0 00000000 		.word	volumeInt
 5730 1ca4 00000000 		.word	sendFirmwareUpdateRequest
 5731 1ca8 00000000 		.word	sendLocalPresetStoreCommand
 5732 1cac 00000000 		.word	presetNumberToStore
 5733 1cb0 00000000 		.word	newPresetName
 5734 1cb4 00000000 		.word	sendKnobs
 5735 1cb8 00000000 		.word	whichMacroPageIsActive
 5736 1cbc 00000000 		.word	macroKnobValues
 5737 1cc0 00000000 		.word	knobs
 5738 1cc4 00000000 		.word	pedals8bit
 5739 1cc8 00000000 		.word	voice
 5740 1ccc 00000000 		.word	octave
 5741 1cd0 00000000 		.word	dualSlider
 5742 1cd4 00000000 		.word	octaveAction
 5743 1cd8 00000000 		.word	patchNum
 5744 1cdc 00000000 		.word	processed_volumePedal
 5745 1ce0 00000000 		.word	barMidiOuterStrings
 5746              	.L184:
 5747              	.LBB40:
1272:main.c        ****             {
1273:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 5748              		.loc 1 1273 0 discriminator 3
 5749 1ce4 8B4A     		ldr	r2, .L228
 5750 1ce6 7B6D     		ldr	r3, [r7, #84]
 5751 1ce8 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5752 1cec 4FF08841 		mov	r1, #1140850688
 5753 1cf0 1846     		mov	r0, r3
 5754 1cf2 FFF7FEFF 		bl	__aeabi_fmul
 5755 1cf6 0346     		mov	r3, r0
 5756 1cf8 1846     		mov	r0, r3
 5757 1cfa FFF7FEFF 		bl	roundf
 5758 1cfe 0346     		mov	r3, r0
 5759 1d00 1846     		mov	r0, r3
 5760 1d02 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 126


 5761 1d06 0346     		mov	r3, r0
 5762 1d08 3B61     		str	r3, [r7, #16]
1274:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 5763              		.loc 1 1274 0 discriminator 3
 5764 1d0a 7B6D     		ldr	r3, [r7, #84]
 5765 1d0c 5B00     		lsls	r3, r3, #1
 5766 1d0e 0133     		adds	r3, r3, #1
 5767 1d10 3A69     		ldr	r2, [r7, #16]
 5768 1d12 1212     		asrs	r2, r2, #8
 5769 1d14 D1B2     		uxtb	r1, r2
 5770 1d16 804A     		ldr	r2, .L228+4
 5771 1d18 D154     		strb	r1, [r2, r3]
1275:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 5772              		.loc 1 1275 0 discriminator 3
 5773 1d1a 7B6D     		ldr	r3, [r7, #84]
 5774 1d1c 0133     		adds	r3, r3, #1
 5775 1d1e 5B00     		lsls	r3, r3, #1
 5776 1d20 3A69     		ldr	r2, [r7, #16]
 5777 1d22 D1B2     		uxtb	r1, r2
 5778 1d24 7C4A     		ldr	r2, .L228+4
 5779 1d26 D154     		strb	r1, [r2, r3]
 5780              	.LBE40:
1271:main.c        ****             {
 5781              		.loc 1 1271 0 discriminator 3
 5782 1d28 7B6D     		ldr	r3, [r7, #84]
 5783 1d2a 0133     		adds	r3, r3, #1
 5784 1d2c 7B65     		str	r3, [r7, #84]
 5785              	.L183:
1271:main.c        ****             {
 5786              		.loc 1 1271 0 is_stmt 0 discriminator 1
 5787 1d2e 7B6D     		ldr	r3, [r7, #84]
 5788 1d30 0B2B     		cmp	r3, #11
 5789 1d32 D7DD     		ble	.L184
 5790              	.LBE39:
1276:main.c        ****             }
1277:main.c        ****             
1278:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (octaveAction << 6);
 5791              		.loc 1 1278 0 is_stmt 1
 5792 1d34 794B     		ldr	r3, .L228+8
 5793 1d36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5794 1d38 1B01     		lsls	r3, r3, #4
 5795 1d3a 5AB2     		sxtb	r2, r3
 5796 1d3c 784B     		ldr	r3, .L228+12
 5797 1d3e 1B68     		ldr	r3, [r3]
 5798 1d40 5BB2     		sxtb	r3, r3
 5799 1d42 1343     		orrs	r3, r3, r2
 5800 1d44 5AB2     		sxtb	r2, r3
 5801 1d46 774B     		ldr	r3, .L228+16
 5802 1d48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5803 1d4a 5B01     		lsls	r3, r3, #5
 5804 1d4c 5BB2     		sxtb	r3, r3
 5805 1d4e 1343     		orrs	r3, r3, r2
 5806 1d50 5AB2     		sxtb	r2, r3
 5807 1d52 754B     		ldr	r3, .L228+20
 5808 1d54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5809 1d56 9B01     		lsls	r3, r3, #6
 5810 1d58 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 127


 5811 1d5a 1343     		orrs	r3, r3, r2
 5812 1d5c 5BB2     		sxtb	r3, r3
 5813 1d5e DAB2     		uxtb	r2, r3
 5814 1d60 6D4B     		ldr	r3, .L228+4
 5815 1d62 1A76     		strb	r2, [r3, #24]
1279:main.c        ****             myArray[25] = patchNum;
 5816              		.loc 1 1279 0
 5817 1d64 714B     		ldr	r3, .L228+24
 5818 1d66 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5819 1d68 6B4B     		ldr	r3, .L228+4
 5820 1d6a 5A76     		strb	r2, [r3, #25]
1280:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5821              		.loc 1 1280 0
 5822 1d6c 704B     		ldr	r3, .L228+28
 5823 1d6e B3F90030 		ldrsh	r3, [r3]
 5824 1d72 1B12     		asrs	r3, r3, #8
 5825 1d74 1BB2     		sxth	r3, r3
 5826 1d76 DAB2     		uxtb	r2, r3
 5827 1d78 674B     		ldr	r3, .L228+4
 5828 1d7a 9A76     		strb	r2, [r3, #26]
1281:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5829              		.loc 1 1281 0
 5830 1d7c 6C4B     		ldr	r3, .L228+28
 5831 1d7e B3F90030 		ldrsh	r3, [r3]
 5832 1d82 DAB2     		uxtb	r2, r3
 5833 1d84 644B     		ldr	r3, .L228+4
 5834 1d86 DA76     		strb	r2, [r3, #27]
1282:main.c        ****             myArray[28] = barMidiOuterStrings[0] >> 8;
 5835              		.loc 1 1282 0
 5836 1d88 6A4B     		ldr	r3, .L228+32
 5837 1d8a 1B88     		ldrh	r3, [r3]
 5838 1d8c 1B0A     		lsrs	r3, r3, #8
 5839 1d8e 9BB2     		uxth	r3, r3
 5840 1d90 DAB2     		uxtb	r2, r3
 5841 1d92 614B     		ldr	r3, .L228+4
 5842 1d94 1A77     		strb	r2, [r3, #28]
1283:main.c        ****             myArray[29] = barMidiOuterStrings[0] & 0xff;
 5843              		.loc 1 1283 0
 5844 1d96 674B     		ldr	r3, .L228+32
 5845 1d98 1B88     		ldrh	r3, [r3]
 5846 1d9a DAB2     		uxtb	r2, r3
 5847 1d9c 5E4B     		ldr	r3, .L228+4
 5848 1d9e 5A77     		strb	r2, [r3, #29]
1284:main.c        ****             myArray[30] = 254;
 5849              		.loc 1 1284 0
 5850 1da0 5D4B     		ldr	r3, .L228+4
 5851 1da2 FE22     		movs	r2, #254
 5852 1da4 9A77     		strb	r2, [r3, #30]
1285:main.c        ****             myArray[31] = 253;
 5853              		.loc 1 1285 0
 5854 1da6 5C4B     		ldr	r3, .L228+4
 5855 1da8 FD22     		movs	r2, #253
 5856 1daa DA77     		strb	r2, [r3, #31]
1286:main.c        ****             
1287:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 5857              		.loc 1 1287 0
 5858 1dac 624B     		ldr	r3, .L228+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 128


 5859 1dae 0122     		movs	r2, #1
 5860 1db0 1A70     		strb	r2, [r3]
 5861              	.L165:
1288:main.c        ****         }
1289:main.c        **** 
1290:main.c        ****         //parse input from synth board (names)
1291:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 5862              		.loc 1 1291 0
 5863 1db2 624B     		ldr	r3, .L228+40
 5864 1db4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5865 1db6 FD2B     		cmp	r3, #253
 5866 1db8 40F0CA80 		bne	.L185
 5867              		.loc 1 1291 0 is_stmt 0 discriminator 1
 5868 1dbc 5F4B     		ldr	r3, .L228+40
 5869 1dbe DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5870 1dc0 FE2B     		cmp	r3, #254
 5871 1dc2 40F0C580 		bne	.L185
 5872              	.LBB41:
1292:main.c        ****         {
1293:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5873              		.loc 1 1293 0 is_stmt 1
 5874 1dc6 5D4B     		ldr	r3, .L228+40
 5875 1dc8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5876 1dca FB60     		str	r3, [r7, #12]
1294:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 5877              		.loc 1 1294 0
 5878 1dcc 5B4B     		ldr	r3, .L228+40
 5879 1dce 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5880 1dd0 BB60     		str	r3, [r7, #8]
1295:main.c        ****             int bufferPointer = 2;
 5881              		.loc 1 1295 0
 5882 1dd2 0223     		movs	r3, #2
 5883 1dd4 3B65     		str	r3, [r7, #80]
 5884              	.LBB42:
1296:main.c        ****             for (int i = 0; i < PRESET_NAME_LENGTH_IN_BYTES; i++)
 5885              		.loc 1 1296 0
 5886 1dd6 0023     		movs	r3, #0
 5887 1dd8 FB64     		str	r3, [r7, #76]
 5888 1dda 14E0     		b	.L186
 5889              	.L187:
1297:main.c        ****             {
1298:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 5890              		.loc 1 1298 0 discriminator 3
 5891 1ddc 574A     		ldr	r2, .L228+40
 5892 1dde 3B6D     		ldr	r3, [r7, #80]
 5893 1de0 1344     		add	r3, r3, r2
 5894 1de2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5895 1de4 5649     		ldr	r1, .L228+44
 5896 1de6 FA68     		ldr	r2, [r7, #12]
 5897 1de8 1346     		mov	r3, r2
 5898 1dea DB00     		lsls	r3, r3, #3
 5899 1dec 9B1A     		subs	r3, r3, r2
 5900 1dee 5B00     		lsls	r3, r3, #1
 5901 1df0 CA18     		adds	r2, r1, r3
 5902 1df2 FB6C     		ldr	r3, [r7, #76]
 5903 1df4 1344     		add	r3, r3, r2
 5904 1df6 0246     		mov	r2, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 129


 5905 1df8 1A70     		strb	r2, [r3]
1299:main.c        ****                 bufferPointer++;
 5906              		.loc 1 1299 0 discriminator 3
 5907 1dfa 3B6D     		ldr	r3, [r7, #80]
 5908 1dfc 0133     		adds	r3, r3, #1
 5909 1dfe 3B65     		str	r3, [r7, #80]
1296:main.c        ****             for (int i = 0; i < PRESET_NAME_LENGTH_IN_BYTES; i++)
 5910              		.loc 1 1296 0 discriminator 3
 5911 1e00 FB6C     		ldr	r3, [r7, #76]
 5912 1e02 0133     		adds	r3, r3, #1
 5913 1e04 FB64     		str	r3, [r7, #76]
 5914              	.L186:
1296:main.c        ****             for (int i = 0; i < PRESET_NAME_LENGTH_IN_BYTES; i++)
 5915              		.loc 1 1296 0 is_stmt 0 discriminator 1
 5916 1e06 FB6C     		ldr	r3, [r7, #76]
 5917 1e08 0D2B     		cmp	r3, #13
 5918 1e0a E7DD     		ble	.L187
 5919              	.LBE42:
1300:main.c        ****             }
1301:main.c        ****             bufferPointer = 17;
 5920              		.loc 1 1301 0 is_stmt 1
 5921 1e0c 1123     		movs	r3, #17
 5922 1e0e 3B65     		str	r3, [r7, #80]
1302:main.c        ****             if (whichMacroToStoreName < 8)
 5923              		.loc 1 1302 0
 5924 1e10 BB68     		ldr	r3, [r7, #8]
 5925 1e12 072B     		cmp	r3, #7
 5926 1e14 20DC     		bgt	.L188
 5927              	.LBB43:
1303:main.c        ****             {
1304:main.c        ****                 for (int i = 0; i < MACRO_NAME_LENGTH_IN_BYTES; i++)
 5928              		.loc 1 1304 0
 5929 1e16 0023     		movs	r3, #0
 5930 1e18 BB64     		str	r3, [r7, #72]
 5931 1e1a 19E0     		b	.L189
 5932              	.L190:
1305:main.c        ****                 {
1306:main.c        ****                     macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[bu
 5933              		.loc 1 1306 0 discriminator 3
 5934 1e1c 474A     		ldr	r2, .L228+40
 5935 1e1e 3B6D     		ldr	r3, [r7, #80]
 5936 1e20 1344     		add	r3, r3, r2
 5937 1e22 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5938 1e24 4748     		ldr	r0, .L228+48
 5939 1e26 BB68     		ldr	r3, [r7, #8]
 5940 1e28 F968     		ldr	r1, [r7, #12]
 5941 1e2a 1A46     		mov	r2, r3
 5942 1e2c D200     		lsls	r2, r2, #3
 5943 1e2e 1A44     		add	r2, r2, r3
 5944 1e30 0B46     		mov	r3, r1
 5945 1e32 DB00     		lsls	r3, r3, #3
 5946 1e34 0B44     		add	r3, r3, r1
 5947 1e36 1B01     		lsls	r3, r3, #4
 5948 1e38 1344     		add	r3, r3, r2
 5949 1e3a C218     		adds	r2, r0, r3
 5950 1e3c BB6C     		ldr	r3, [r7, #72]
 5951 1e3e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 130


 5952 1e40 2246     		mov	r2, r4
 5953 1e42 1A70     		strb	r2, [r3]
1307:main.c        ****                     bufferPointer++;
 5954              		.loc 1 1307 0 discriminator 3
 5955 1e44 3B6D     		ldr	r3, [r7, #80]
 5956 1e46 0133     		adds	r3, r3, #1
 5957 1e48 3B65     		str	r3, [r7, #80]
1304:main.c        ****                 {
 5958              		.loc 1 1304 0 discriminator 3
 5959 1e4a BB6C     		ldr	r3, [r7, #72]
 5960 1e4c 0133     		adds	r3, r3, #1
 5961 1e4e BB64     		str	r3, [r7, #72]
 5962              	.L189:
1304:main.c        ****                 {
 5963              		.loc 1 1304 0 is_stmt 0 discriminator 1
 5964 1e50 BB6C     		ldr	r3, [r7, #72]
 5965 1e52 082B     		cmp	r3, #8
 5966 1e54 E2DD     		ble	.L190
 5967 1e56 47E0     		b	.L191
 5968              	.L188:
 5969              	.LBE43:
1308:main.c        ****                 }
1309:main.c        ****             }
1310:main.c        ****             else if (whichMacroToStoreName < 12) //if it's macro #8-12 it's actually a control knob
 5970              		.loc 1 1310 0 is_stmt 1
 5971 1e58 BB68     		ldr	r3, [r7, #8]
 5972 1e5a 0B2B     		cmp	r3, #11
 5973 1e5c 23DC     		bgt	.L192
 5974              	.LBB44:
1311:main.c        ****             {
1312:main.c        ****                 for (int i = 0; i < CONTROL_NAME_LENGTH_IN_BYTES; i++)
 5975              		.loc 1 1312 0
 5976 1e5e 0023     		movs	r3, #0
 5977 1e60 7B64     		str	r3, [r7, #68]
 5978 1e62 1CE0     		b	.L193
 5979              	.L194:
1313:main.c        ****                 {
1314:main.c        ****                     controlNamesArray[whichPresetToStoreName][(whichMacroToStoreName - 8)][i] = inB
 5980              		.loc 1 1314 0 discriminator 3
 5981 1e64 BB68     		ldr	r3, [r7, #8]
 5982 1e66 083B     		subs	r3, r3, #8
 5983 1e68 3449     		ldr	r1, .L228+40
 5984 1e6a 3A6D     		ldr	r2, [r7, #80]
 5985 1e6c 0A44     		add	r2, r2, r1
 5986 1e6e 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 5987 1e70 3548     		ldr	r0, .L228+52
 5988 1e72 F968     		ldr	r1, [r7, #12]
 5989 1e74 1A46     		mov	r2, r3
 5990 1e76 9200     		lsls	r2, r2, #2
 5991 1e78 1A44     		add	r2, r2, r3
 5992 1e7a 5300     		lsls	r3, r2, #1
 5993 1e7c 1A46     		mov	r2, r3
 5994 1e7e 0B46     		mov	r3, r1
 5995 1e80 9B00     		lsls	r3, r3, #2
 5996 1e82 0B44     		add	r3, r3, r1
 5997 1e84 DB00     		lsls	r3, r3, #3
 5998 1e86 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 131


 5999 1e88 C218     		adds	r2, r0, r3
 6000 1e8a 7B6C     		ldr	r3, [r7, #68]
 6001 1e8c 1344     		add	r3, r3, r2
 6002 1e8e 2246     		mov	r2, r4
 6003 1e90 1A70     		strb	r2, [r3]
1315:main.c        ****                     bufferPointer++;
 6004              		.loc 1 1315 0 discriminator 3
 6005 1e92 3B6D     		ldr	r3, [r7, #80]
 6006 1e94 0133     		adds	r3, r3, #1
 6007 1e96 3B65     		str	r3, [r7, #80]
1312:main.c        ****                 {
 6008              		.loc 1 1312 0 discriminator 3
 6009 1e98 7B6C     		ldr	r3, [r7, #68]
 6010 1e9a 0133     		adds	r3, r3, #1
 6011 1e9c 7B64     		str	r3, [r7, #68]
 6012              	.L193:
1312:main.c        ****                 {
 6013              		.loc 1 1312 0 is_stmt 0 discriminator 1
 6014 1e9e 7B6C     		ldr	r3, [r7, #68]
 6015 1ea0 092B     		cmp	r3, #9
 6016 1ea2 DFDD     		ble	.L194
 6017 1ea4 20E0     		b	.L191
 6018              	.L192:
 6019              	.LBE44:
 6020              	.LBB45:
1316:main.c        ****                 }
1317:main.c        ****             }
1318:main.c        ****             else
1319:main.c        ****             {
1320:main.c        ****                 for (int i = 0; i < MACRO_NAME_LENGTH_IN_BYTES; i++)
 6021              		.loc 1 1320 0 is_stmt 1
 6022 1ea6 0023     		movs	r3, #0
 6023 1ea8 3B64     		str	r3, [r7, #64]
 6024 1eaa 1AE0     		b	.L195
 6025              	.L196:
1321:main.c        ****                 {
1322:main.c        ****                     macroNamesArray[whichPresetToStoreName][whichMacroToStoreName - 4][i] = inBuffe
 6026              		.loc 1 1322 0 discriminator 3
 6027 1eac BB68     		ldr	r3, [r7, #8]
 6028 1eae 043B     		subs	r3, r3, #4
 6029 1eb0 2249     		ldr	r1, .L228+40
 6030 1eb2 3A6D     		ldr	r2, [r7, #80]
 6031 1eb4 0A44     		add	r2, r2, r1
 6032 1eb6 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 6033 1eb8 2248     		ldr	r0, .L228+48
 6034 1eba F968     		ldr	r1, [r7, #12]
 6035 1ebc 1A46     		mov	r2, r3
 6036 1ebe D200     		lsls	r2, r2, #3
 6037 1ec0 1A44     		add	r2, r2, r3
 6038 1ec2 0B46     		mov	r3, r1
 6039 1ec4 DB00     		lsls	r3, r3, #3
 6040 1ec6 0B44     		add	r3, r3, r1
 6041 1ec8 1B01     		lsls	r3, r3, #4
 6042 1eca 1344     		add	r3, r3, r2
 6043 1ecc C218     		adds	r2, r0, r3
 6044 1ece 3B6C     		ldr	r3, [r7, #64]
 6045 1ed0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 132


 6046 1ed2 2246     		mov	r2, r4
 6047 1ed4 1A70     		strb	r2, [r3]
1323:main.c        ****                     bufferPointer++;
 6048              		.loc 1 1323 0 discriminator 3
 6049 1ed6 3B6D     		ldr	r3, [r7, #80]
 6050 1ed8 0133     		adds	r3, r3, #1
 6051 1eda 3B65     		str	r3, [r7, #80]
1320:main.c        ****                 {
 6052              		.loc 1 1320 0 discriminator 3
 6053 1edc 3B6C     		ldr	r3, [r7, #64]
 6054 1ede 0133     		adds	r3, r3, #1
 6055 1ee0 3B64     		str	r3, [r7, #64]
 6056              	.L195:
1320:main.c        ****                 {
 6057              		.loc 1 1320 0 is_stmt 0 discriminator 1
 6058 1ee2 3B6C     		ldr	r3, [r7, #64]
 6059 1ee4 082B     		cmp	r3, #8
 6060 1ee6 E1DD     		ble	.L196
 6061              	.L191:
 6062              	.LBE45:
1324:main.c        ****                 }
1325:main.c        ****             }
1326:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 6063              		.loc 1 1326 0 is_stmt 1
 6064 1ee8 104B     		ldr	r3, .L228+24
 6065 1eea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6066 1eec 1A46     		mov	r2, r3
 6067 1eee FB68     		ldr	r3, [r7, #12]
 6068 1ef0 9A42     		cmp	r2, r3
 6069 1ef2 40F0AF80 		bne	.L204
 6070              		.loc 1 1326 0 is_stmt 0 discriminator 1
 6071 1ef6 BB68     		ldr	r3, [r7, #8]
 6072 1ef8 072B     		cmp	r3, #7
 6073 1efa 40F0AB80 		bne	.L204
 6074              		.loc 1 1326 0 discriminator 2
 6075 1efe 134A     		ldr	r2, .L228+56
 6076 1f00 FB68     		ldr	r3, [r7, #12]
 6077 1f02 1344     		add	r3, r3, r2
 6078 1f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6079 1f06 002B     		cmp	r3, #0
 6080 1f08 40F0A480 		bne	.L204
1327:main.c        ****             {
1328:main.c        ****                 displayCurrentPresetNameAndCopedent();
 6081              		.loc 1 1328 0 is_stmt 1
 6082 1f0c FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 6083              	.LBE41:
1292:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 6084              		.loc 1 1292 0
 6085 1f10 A0E0     		b	.L204
 6086              	.L229:
 6087 1f12 00BF     		.align	2
 6088              	.L228:
 6089 1f14 00000000 		.word	stringMIDI
 6090 1f18 00000000 		.word	myArray
 6091 1f1c 00000000 		.word	voice
 6092 1f20 00000000 		.word	octave
 6093 1f24 00000000 		.word	dualSlider
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 133


 6094 1f28 00000000 		.word	octaveAction
 6095 1f2c 00000000 		.word	patchNum
 6096 1f30 00000000 		.word	processed_volumePedal
 6097 1f34 00000000 		.word	barMidiOuterStrings
 6098 1f38 00000000 		.word	sendKnobs
 6099 1f3c 00000000 		.word	inBuffer
 6100 1f40 00000000 		.word	presetNamesArray
 6101 1f44 00000000 		.word	macroNamesArray
 6102 1f48 00000000 		.word	controlNamesArray
 6103 1f4c 00000000 		.word	presetAlreadyDisplayed
 6104              	.L185:
1329:main.c        ****             }
1330:main.c        ****         }
1331:main.c        ****         else if ((inBuffer[0] == 252) && (inBuffer[31] == 254))
 6105              		.loc 1 1331 0
 6106 1f50 4A4B     		ldr	r3, .L230
 6107 1f52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6108 1f54 FC2B     		cmp	r3, #252
 6109 1f56 7ED1     		bne	.L198
 6110              		.loc 1 1331 0 is_stmt 0 discriminator 1
 6111 1f58 484B     		ldr	r3, .L230
 6112 1f5a DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 6113 1f5c FE2B     		cmp	r3, #254
 6114 1f5e 7AD1     		bne	.L198
1332:main.c        ****         {
1333:main.c        ****             //oop this means we're about to get new firmware. Reset to bootloader
1334:main.c        ****             SPIM_1_Stop();
 6115              		.loc 1 1334 0 is_stmt 1
 6116 1f60 FFF7FEFF 		bl	SPIM_1_Stop
1335:main.c        ****             myGFX_setFont(0);
 6117              		.loc 1 1335 0
 6118 1f64 0020     		movs	r0, #0
 6119 1f66 FFF7FEFF 		bl	myGFX_setFont
1336:main.c        ****             OLEDwriteString("FIRMWARE   ", 11, 1, FirstLine);
 6120              		.loc 1 1336 0
 6121 1f6a 0023     		movs	r3, #0
 6122 1f6c 0122     		movs	r2, #1
 6123 1f6e 0B21     		movs	r1, #11
 6124 1f70 4348     		ldr	r0, .L230+4
 6125 1f72 FFF7FEFF 		bl	OLEDwriteString
1337:main.c        ****             OLEDwriteString("UPDATE     ", 11, 1, SecondLine);
 6126              		.loc 1 1337 0
 6127 1f76 0123     		movs	r3, #1
 6128 1f78 0122     		movs	r2, #1
 6129 1f7a 0B21     		movs	r1, #11
 6130 1f7c 4148     		ldr	r0, .L230+8
 6131 1f7e FFF7FEFF 		bl	OLEDwriteString
1338:main.c        ****             OLEDwriteString("           ", 11, 1, ThirdLine);
 6132              		.loc 1 1338 0
 6133 1f82 0223     		movs	r3, #2
 6134 1f84 0122     		movs	r2, #1
 6135 1f86 0B21     		movs	r1, #11
 6136 1f88 3F48     		ldr	r0, .L230+12
 6137 1f8a FFF7FEFF 		bl	OLEDwriteString
1339:main.c        ****             OLEDwriteString("           ", 11, 1, FourthLine);
 6138              		.loc 1 1339 0
 6139 1f8e 0323     		movs	r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 134


 6140 1f90 0122     		movs	r2, #1
 6141 1f92 0B21     		movs	r1, #11
 6142 1f94 3C48     		ldr	r0, .L230+12
 6143 1f96 FFF7FEFF 		bl	OLEDwriteString
1340:main.c        ****             main_counter = 11;
 6144              		.loc 1 1340 0
 6145 1f9a 3C4B     		ldr	r3, .L230+16
 6146 1f9c 0B22     		movs	r2, #11
 6147 1f9e 1A70     		strb	r2, [r3]
1341:main.c        ****                    //set muxes to write to main OLED
1342:main.c        ****             if (mux_states[main_counter][0] != last_mux)
 6148              		.loc 1 1342 0
 6149 1fa0 3A4B     		ldr	r3, .L230+16
 6150 1fa2 1B78     		ldrb	r3, [r3]
 6151 1fa4 DBB2     		uxtb	r3, r3
 6152 1fa6 1A46     		mov	r2, r3
 6153 1fa8 394B     		ldr	r3, .L230+20
 6154 1faa 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 6155 1fae 394B     		ldr	r3, .L230+24
 6156 1fb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6157 1fb2 9A42     		cmp	r2, r3
 6158 1fb4 13D0     		beq	.L199
 6159              	.LBB46:
1343:main.c        ****             {
1344:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 6160              		.loc 1 1344 0
 6161 1fb6 354B     		ldr	r3, .L230+16
 6162 1fb8 1B78     		ldrb	r3, [r3]
 6163 1fba DBB2     		uxtb	r3, r3
 6164 1fbc 1A46     		mov	r2, r3
 6165 1fbe 344B     		ldr	r3, .L230+20
 6166 1fc0 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 6167 1fc4 1A46     		mov	r2, r3
 6168 1fc6 0123     		movs	r3, #1
 6169 1fc8 9340     		lsls	r3, r3, r2
 6170 1fca DAB2     		uxtb	r2, r3
 6171 1fcc 324B     		ldr	r3, .L230+28
 6172 1fce 1A70     		strb	r2, [r3]
1345:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 6173              		.loc 1 1345 0
 6174 1fd0 0022     		movs	r2, #0
 6175 1fd2 0121     		movs	r1, #1
 6176 1fd4 7020     		movs	r0, #112
 6177 1fd6 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 6178 1fda 0346     		mov	r3, r0
 6179 1fdc FB71     		strb	r3, [r7, #7]
 6180              	.L199:
 6181              	.LBE46:
1346:main.c        ****             }
1347:main.c        ****             last_mux = mux_states[main_counter][0];
 6182              		.loc 1 1347 0
 6183 1fde 2B4B     		ldr	r3, .L230+16
 6184 1fe0 1B78     		ldrb	r3, [r3]
 6185 1fe2 DBB2     		uxtb	r3, r3
 6186 1fe4 1A46     		mov	r2, r3
 6187 1fe6 2A4B     		ldr	r3, .L230+20
 6188 1fe8 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 135


 6189 1fec 294B     		ldr	r3, .L230+24
 6190 1fee 1A70     		strb	r2, [r3]
1348:main.c        ****             
1349:main.c        ****             
1350:main.c        ****             CyDelayUs(10);
 6191              		.loc 1 1350 0
 6192 1ff0 0A20     		movs	r0, #10
 6193 1ff2 FFF7FEFF 		bl	CyDelayUs
1351:main.c        ****             if (mux_states[main_counter][0] == 5)
 6194              		.loc 1 1351 0
 6195 1ff6 254B     		ldr	r3, .L230+16
 6196 1ff8 1B78     		ldrb	r3, [r3]
 6197 1ffa DBB2     		uxtb	r3, r3
 6198 1ffc 1A46     		mov	r2, r3
 6199 1ffe 244B     		ldr	r3, .L230+20
 6200 2000 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 6201 2004 052B     		cmp	r3, #5
 6202 2006 1DD1     		bne	.L200
1352:main.c        ****             {
1353:main.c        ****                 if (!i2c_skipped[main_counter])
 6203              		.loc 1 1353 0
 6204 2008 204B     		ldr	r3, .L230+16
 6205 200a 1B78     		ldrb	r3, [r3]
 6206 200c DBB2     		uxtb	r3, r3
 6207 200e 1A46     		mov	r2, r3
 6208 2010 224B     		ldr	r3, .L230+32
 6209 2012 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 6210 2014 002B     		cmp	r3, #0
 6211 2016 15D1     		bne	.L200
1354:main.c        ****                 {
1355:main.c        ****                     I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 6212              		.loc 1 1355 0
 6213 2018 1C4B     		ldr	r3, .L230+16
 6214 201a 1B78     		ldrb	r3, [r3]
 6215 201c DBB2     		uxtb	r3, r3
 6216 201e 1C4A     		ldr	r2, .L230+20
 6217 2020 5B00     		lsls	r3, r3, #1
 6218 2022 1344     		add	r3, r3, r2
 6219 2024 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6220 2026 1A46     		mov	r2, r3
 6221 2028 0123     		movs	r3, #1
 6222 202a 9340     		lsls	r3, r3, r2
 6223 202c DAB2     		uxtb	r2, r3
 6224 202e 1A4B     		ldr	r3, .L230+28
 6225 2030 1A70     		strb	r2, [r3]
1356:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 6226              		.loc 1 1356 0
 6227 2032 0022     		movs	r2, #0
 6228 2034 0121     		movs	r1, #1
 6229 2036 7120     		movs	r0, #113
 6230 2038 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 6231 203c 0346     		mov	r3, r0
 6232 203e 1A46     		mov	r2, r3
 6233 2040 174B     		ldr	r3, .L230+36
 6234 2042 1A60     		str	r2, [r3]
 6235              	.L200:
1357:main.c        ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 136


1358:main.c        ****             }
1359:main.c        **** 
1360:main.c        ****             CyDelayUs(10);
 6236              		.loc 1 1360 0
 6237 2044 0A20     		movs	r0, #10
 6238 2046 FFF7FEFF 		bl	CyDelayUs
1361:main.c        **** 
1362:main.c        ****             OLED_draw(128, 64);
 6239              		.loc 1 1362 0
 6240 204a 4021     		movs	r1, #64
 6241 204c 8020     		movs	r0, #128
 6242 204e FFF7FEFF 		bl	OLED_draw
 6243 2052 00E0     		b	.L198
 6244              	.L204:
1292:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 6245              		.loc 1 1292 0
 6246 2054 00BF     		nop
 6247              	.L198:
1363:main.c        ****             #ifdef BOOTLOAD_STYLE
1364:main.c        ****             Bootloadable_Load();
1365:main.c        ****                 #endif
1366:main.c        ****         }
1367:main.c        ****         
1368:main.c        ****         SPIM_1_ClearRxBuffer();
 6248              		.loc 1 1368 0
 6249 2056 FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1369:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 6250              		.loc 1 1369 0
 6251 205a 124B     		ldr	r3, .L230+40
 6252 205c 1B78     		ldrb	r3, [r3]
 6253 205e DBB2     		uxtb	r3, r3
 6254 2060 0121     		movs	r1, #1
 6255 2062 1846     		mov	r0, r3
 6256 2064 FFF7FEFF 		bl	CyDmaChEnable
1370:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 6257              		.loc 1 1370 0
 6258 2068 0F4B     		ldr	r3, .L230+44
 6259 206a 1B78     		ldrb	r3, [r3]
 6260 206c DBB2     		uxtb	r3, r3
 6261 206e 0121     		movs	r1, #1
 6262 2070 1846     		mov	r0, r3
 6263 2072 FFF7FEFF 		bl	CyDmaChEnable
1371:main.c        ****         
1372:main.c        ****        // testpin6_Write(0);
1373:main.c        ****        
1374:main.c        **** 
1375:main.c        ****      }
 6264              		.loc 1 1375 0
 6265 2076 FEF7B1BB 		b	.L201
 6266              	.L231:
 6267 207a 00BF     		.align	2
 6268              	.L230:
 6269 207c 00000000 		.word	inBuffer
 6270 2080 04040000 		.word	.LC1
 6271 2084 10040000 		.word	.LC2
 6272 2088 1C040000 		.word	.LC3
 6273 208c 00000000 		.word	main_counter
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 137


 6274 2090 00000000 		.word	mux_states
 6275 2094 00000000 		.word	last_mux
 6276 2098 00000000 		.word	I2Cbuff1
 6277 209c 00000000 		.word	i2c_skipped
 6278 20a0 00000000 		.word	status
 6279 20a4 00000000 		.word	rx3Channel
 6280 20a8 00000000 		.word	txChannel
 6281              		.cfi_endproc
 6282              	.LFE75:
 6283              		.size	main, .-main
 6284              		.section	.text.DmaTxConfiguration,"ax",%progbits
 6285              		.align	2
 6286              		.global	DmaTxConfiguration
 6287              		.thumb
 6288              		.thumb_func
 6289              		.type	DmaTxConfiguration, %function
 6290              	DmaTxConfiguration:
 6291              	.LFB76:
1376:main.c        **** }
1377:main.c        **** 
1378:main.c        **** void DmaTxConfiguration()
1379:main.c        **** {
 6292              		.loc 1 1379 0
 6293              		.cfi_startproc
 6294              		@ args = 0, pretend = 0, frame = 0
 6295              		@ frame_needed = 1, uses_anonymous_args = 0
 6296 0000 80B5     		push	{r7, lr}
 6297              		.cfi_def_cfa_offset 8
 6298              		.cfi_offset 7, -8
 6299              		.cfi_offset 14, -4
 6300 0002 00AF     		add	r7, sp, #0
 6301              		.cfi_def_cfa_register 7
1380:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1381:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 6302              		.loc 1 1381 0
 6303 0004 4FF48043 		mov	r3, #16384
 6304 0008 41F6FF72 		movw	r2, #8191
 6305 000c 0121     		movs	r1, #1
 6306 000e 0120     		movs	r0, #1
 6307 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 6308 0014 0346     		mov	r3, r0
 6309 0016 1A46     		mov	r2, r3
 6310 0018 124B     		ldr	r3, .L233
 6311 001a 1A70     		strb	r2, [r3]
1382:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1383:main.c        **** 
1384:main.c        ****     txTD = CyDmaTdAllocate();
 6312              		.loc 1 1384 0
 6313 001c FFF7FEFF 		bl	CyDmaTdAllocate
 6314 0020 0346     		mov	r3, r0
 6315 0022 1A46     		mov	r2, r3
 6316 0024 104B     		ldr	r3, .L233+4
 6317 0026 1A70     		strb	r2, [r3]
1385:main.c        **** 
1386:main.c        ****     /* Configure this Td as follows:
1387:main.c        ****     *  - Increment the source address, but not the destination address   
1388:main.c        ****     */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 138


1389:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 6318              		.loc 1 1389 0
 6319 0028 0F4B     		ldr	r3, .L233+4
 6320 002a 1B78     		ldrb	r3, [r3]
 6321 002c D8B2     		uxtb	r0, r3
 6322 002e 0123     		movs	r3, #1
 6323 0030 FE22     		movs	r2, #254
 6324 0032 2021     		movs	r1, #32
 6325 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1390:main.c        **** 
1391:main.c        ****     /* From the memory to the SPIM */
1392:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 6326              		.loc 1 1392 0
 6327 0038 0B4B     		ldr	r3, .L233+4
 6328 003a 1B78     		ldrb	r3, [r3]
 6329 003c DBB2     		uxtb	r3, r3
 6330 003e 0B4A     		ldr	r2, .L233+8
 6331 0040 91B2     		uxth	r1, r2
 6332 0042 46F24C42 		movw	r2, #25676
 6333 0046 1846     		mov	r0, r3
 6334 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1393:main.c        ****     
1394:main.c        ****     /* Associate the TD with the channel */
1395:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 6335              		.loc 1 1395 0
 6336 004c 054B     		ldr	r3, .L233
 6337 004e 1B78     		ldrb	r3, [r3]
 6338 0050 DAB2     		uxtb	r2, r3
 6339 0052 054B     		ldr	r3, .L233+4
 6340 0054 1B78     		ldrb	r3, [r3]
 6341 0056 DBB2     		uxtb	r3, r3
 6342 0058 1946     		mov	r1, r3
 6343 005a 1046     		mov	r0, r2
 6344 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1396:main.c        ****    
1397:main.c        **** } 
 6345              		.loc 1 1397 0
 6346 0060 00BF     		nop
 6347 0062 80BD     		pop	{r7, pc}
 6348              	.L234:
 6349              		.align	2
 6350              	.L233:
 6351 0064 00000000 		.word	txChannel
 6352 0068 00000000 		.word	txTD
 6353 006c 00000000 		.word	myArray
 6354              		.cfi_endproc
 6355              	.LFE76:
 6356              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 6357              		.section	.text.DmaRxConfiguration,"ax",%progbits
 6358              		.align	2
 6359              		.global	DmaRxConfiguration
 6360              		.thumb
 6361              		.thumb_func
 6362              		.type	DmaRxConfiguration, %function
 6363              	DmaRxConfiguration:
 6364              	.LFB77:
1398:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 139


1399:main.c        **** void DmaRxConfiguration()
1400:main.c        **** { 
 6365              		.loc 1 1400 0
 6366              		.cfi_startproc
 6367              		@ args = 0, pretend = 0, frame = 0
 6368              		@ frame_needed = 1, uses_anonymous_args = 0
 6369 0000 80B5     		push	{r7, lr}
 6370              		.cfi_def_cfa_offset 8
 6371              		.cfi_offset 7, -8
 6372              		.cfi_offset 14, -4
 6373 0002 00AF     		add	r7, sp, #0
 6374              		.cfi_def_cfa_register 7
1401:main.c        ****     //pluck dma
1402:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6375              		.loc 1 1402 0
 6376 0004 41F6FF73 		movw	r3, #8191
 6377 0008 4FF48042 		mov	r2, #16384
 6378 000c 0121     		movs	r1, #1
 6379 000e 0120     		movs	r0, #1
 6380 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 6381 0014 0346     		mov	r3, r0
 6382 0016 1A46     		mov	r2, r3
 6383 0018 4A4B     		ldr	r3, .L236
 6384 001a 1A70     		strb	r2, [r3]
1403:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1404:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 6385              		.loc 1 1404 0
 6386 001c FFF7FEFF 		bl	CyDmaTdAllocate
 6387 0020 0346     		mov	r3, r0
 6388 0022 1A46     		mov	r2, r3
 6389 0024 484B     		ldr	r3, .L236+4
 6390 0026 1A70     		strb	r2, [r3]
1405:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 6391              		.loc 1 1405 0
 6392 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 6393 002c 0346     		mov	r3, r0
 6394 002e 1A46     		mov	r2, r3
 6395 0030 454B     		ldr	r3, .L236+4
 6396 0032 5A70     		strb	r2, [r3, #1]
1406:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 6397              		.loc 1 1406 0
 6398 0034 444B     		ldr	r3, .L236+4
 6399 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6400 0038 0223     		movs	r3, #2
 6401 003a FE22     		movs	r2, #254
 6402 003c 2021     		movs	r1, #32
 6403 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1407:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 6404              		.loc 1 1407 0
 6405 0042 414B     		ldr	r3, .L236+4
 6406 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6407 0046 0223     		movs	r3, #2
 6408 0048 FE22     		movs	r2, #254
 6409 004a 2021     		movs	r1, #32
 6410 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1408:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 6411              		.loc 1 1408 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 140


 6412 0050 3D4B     		ldr	r3, .L236+4
 6413 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6414 0054 3D4A     		ldr	r2, .L236+8
 6415 0056 92B2     		uxth	r2, r2
 6416 0058 46F25741 		movw	r1, #25687
 6417 005c 1846     		mov	r0, r3
 6418 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1409:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 6419              		.loc 1 1409 0
 6420 0062 394B     		ldr	r3, .L236+4
 6421 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6422 0066 3A4A     		ldr	r2, .L236+12
 6423 0068 92B2     		uxth	r2, r2
 6424 006a 46F25741 		movw	r1, #25687
 6425 006e 1846     		mov	r0, r3
 6426 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1410:main.c        **** 
1411:main.c        ****     //bar dma
1412:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6427              		.loc 1 1412 0
 6428 0074 41F6FF73 		movw	r3, #8191
 6429 0078 4FF48042 		mov	r2, #16384
 6430 007c 0121     		movs	r1, #1
 6431 007e 0120     		movs	r0, #1
 6432 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 6433 0084 0346     		mov	r3, r0
 6434 0086 1A46     		mov	r2, r3
 6435 0088 324B     		ldr	r3, .L236+16
 6436 008a 1A70     		strb	r2, [r3]
1413:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1414:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 6437              		.loc 1 1414 0
 6438 008c FFF7FEFF 		bl	CyDmaTdAllocate
 6439 0090 0346     		mov	r3, r0
 6440 0092 1A46     		mov	r2, r3
 6441 0094 304B     		ldr	r3, .L236+20
 6442 0096 1A70     		strb	r2, [r3]
1415:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 6443              		.loc 1 1415 0
 6444 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 6445 009c 0346     		mov	r3, r0
 6446 009e 1A46     		mov	r2, r3
 6447 00a0 2D4B     		ldr	r3, .L236+20
 6448 00a2 5A70     		strb	r2, [r3, #1]
1416:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 6449              		.loc 1 1416 0
 6450 00a4 2C4B     		ldr	r3, .L236+20
 6451 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6452 00a8 0223     		movs	r3, #2
 6453 00aa FE22     		movs	r2, #254
 6454 00ac 0821     		movs	r1, #8
 6455 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1417:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 6456              		.loc 1 1417 0
 6457 00b2 294B     		ldr	r3, .L236+20
 6458 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6459 00b6 0223     		movs	r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 141


 6460 00b8 FE22     		movs	r2, #254
 6461 00ba 0821     		movs	r1, #8
 6462 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1418:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 6463              		.loc 1 1418 0
 6464 00c0 254B     		ldr	r3, .L236+20
 6465 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6466 00c4 254A     		ldr	r2, .L236+24
 6467 00c6 92B2     		uxth	r2, r2
 6468 00c8 46F25551 		movw	r1, #25941
 6469 00cc 1846     		mov	r0, r3
 6470 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1419:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 6471              		.loc 1 1419 0
 6472 00d2 214B     		ldr	r3, .L236+20
 6473 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6474 00d6 224A     		ldr	r2, .L236+28
 6475 00d8 92B2     		uxth	r2, r2
 6476 00da 46F25551 		movw	r1, #25941
 6477 00de 1846     		mov	r0, r3
 6478 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1420:main.c        ****     
1421:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1422:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6479              		.loc 1 1422 0
 6480 00e4 41F6FF73 		movw	r3, #8191
 6481 00e8 4FF48042 		mov	r2, #16384
 6482 00ec 0121     		movs	r1, #1
 6483 00ee 0120     		movs	r0, #1
 6484 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 6485 00f4 0346     		mov	r3, r0
 6486 00f6 1A46     		mov	r2, r3
 6487 00f8 1A4B     		ldr	r3, .L236+32
 6488 00fa 1A70     		strb	r2, [r3]
1423:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1424:main.c        **** 
1425:main.c        ****     rx3TD = CyDmaTdAllocate();
 6489              		.loc 1 1425 0
 6490 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 6491 0100 0346     		mov	r3, r0
 6492 0102 1A46     		mov	r2, r3
 6493 0104 184B     		ldr	r3, .L236+36
 6494 0106 1A70     		strb	r2, [r3]
1426:main.c        ****     
1427:main.c        ****     /* Configure this Td as follows:
1428:main.c        ****     *  - Increment the destination address, but not the source address
1429:main.c        ****     */
1430:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 6495              		.loc 1 1430 0
 6496 0108 174B     		ldr	r3, .L236+36
 6497 010a 1B78     		ldrb	r3, [r3]
 6498 010c D8B2     		uxtb	r0, r3
 6499 010e 0223     		movs	r3, #2
 6500 0110 FE22     		movs	r2, #254
 6501 0112 2021     		movs	r1, #32
 6502 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1431:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 142


1432:main.c        ****     /* From the SPIM to the memory */
1433:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 6503              		.loc 1 1433 0
 6504 0118 134B     		ldr	r3, .L236+36
 6505 011a 1B78     		ldrb	r3, [r3]
 6506 011c DBB2     		uxtb	r3, r3
 6507 011e 134A     		ldr	r2, .L236+40
 6508 0120 92B2     		uxth	r2, r2
 6509 0122 46F25C41 		movw	r1, #25692
 6510 0126 1846     		mov	r0, r3
 6511 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1434:main.c        **** 
1435:main.c        ****     /* Associate the TD with the channel */
1436:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 6512              		.loc 1 1436 0
 6513 012c 0D4B     		ldr	r3, .L236+32
 6514 012e 1B78     		ldrb	r3, [r3]
 6515 0130 DAB2     		uxtb	r2, r3
 6516 0132 0D4B     		ldr	r3, .L236+36
 6517 0134 1B78     		ldrb	r3, [r3]
 6518 0136 DBB2     		uxtb	r3, r3
 6519 0138 1946     		mov	r1, r3
 6520 013a 1046     		mov	r0, r2
 6521 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1437:main.c        **** }
 6522              		.loc 1 1437 0
 6523 0140 00BF     		nop
 6524 0142 80BD     		pop	{r7, pc}
 6525              	.L237:
 6526              		.align	2
 6527              	.L236:
 6528 0144 00000000 		.word	rx1Channel
 6529 0148 00000000 		.word	rx1TD
 6530 014c 00000000 		.word	rxBufferPluck
 6531 0150 20000000 		.word	rxBufferPluck+32
 6532 0154 00000000 		.word	rx2Channel
 6533 0158 00000000 		.word	rx2TD
 6534 015c 00000000 		.word	rxBufferBar
 6535 0160 08000000 		.word	rxBufferBar+8
 6536 0164 00000000 		.word	rx3Channel
 6537 0168 00000000 		.word	rx3TD
 6538 016c 00000000 		.word	inBuffer
 6539              		.cfi_endproc
 6540              	.LFE77:
 6541              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 6542              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 6543              		.align	2
 6544              		.global	I2C_MasterWriteBlocking
 6545              		.thumb
 6546              		.thumb_func
 6547              		.type	I2C_MasterWriteBlocking, %function
 6548              	I2C_MasterWriteBlocking:
 6549              	.LFB78:
1438:main.c        **** 
1439:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1440:main.c        **** {
 6550              		.loc 1 1440 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 143


 6551              		.cfi_startproc
 6552              		@ args = 0, pretend = 0, frame = 24
 6553              		@ frame_needed = 1, uses_anonymous_args = 0
 6554 0000 80B5     		push	{r7, lr}
 6555              		.cfi_def_cfa_offset 8
 6556              		.cfi_offset 7, -8
 6557              		.cfi_offset 14, -4
 6558 0002 86B0     		sub	sp, sp, #24
 6559              		.cfi_def_cfa_offset 32
 6560 0004 00AF     		add	r7, sp, #0
 6561              		.cfi_def_cfa_register 7
 6562 0006 0346     		mov	r3, r0
 6563 0008 FB71     		strb	r3, [r7, #7]
 6564 000a 0B46     		mov	r3, r1	@ movhi
 6565 000c BB80     		strh	r3, [r7, #4]	@ movhi
 6566 000e 1346     		mov	r3, r2
 6567 0010 BB71     		strb	r3, [r7, #6]
1441:main.c        ****     uint8 volatile status;
1442:main.c        ****     uint8_t error = 0;
 6568              		.loc 1 1442 0
 6569 0012 0023     		movs	r3, #0
 6570 0014 FB75     		strb	r3, [r7, #23]
1443:main.c        ****     uint32_t timeout = 1000;
 6571              		.loc 1 1443 0
 6572 0016 4FF47A73 		mov	r3, #1000
 6573 001a 3B61     		str	r3, [r7, #16]
1444:main.c        ****     status = I2C_1_MasterClearStatus();
 6574              		.loc 1 1444 0
 6575 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6576 0020 0346     		mov	r3, r0
 6577 0022 FB73     		strb	r3, [r7, #15]
1445:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6578              		.loc 1 1445 0
 6579 0024 FB7B     		ldrb	r3, [r7, #15]
 6580 0026 DBB2     		uxtb	r3, r3
 6581 0028 5BB2     		sxtb	r3, r3
 6582 002a 002B     		cmp	r3, #0
 6583 002c 42DB     		blt	.L239
1446:main.c        ****     {
1447:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 6584              		.loc 1 1447 0
 6585 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 6586 0030 DAB2     		uxtb	r2, r3
 6587 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6588 0034 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6589 0036 2949     		ldr	r1, .L248
 6590 0038 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 6591 003c 0346     		mov	r3, r0
 6592 003e FB73     		strb	r3, [r7, #15]
1448:main.c        ****                                      mode);
1449:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6593              		.loc 1 1449 0
 6594 0040 FB7B     		ldrb	r3, [r7, #15]
 6595 0042 DBB2     		uxtb	r3, r3
 6596 0044 002B     		cmp	r3, #0
 6597 0046 2FD1     		bne	.L240
 6598              	.L244:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 144


1450:main.c        ****         {
1451:main.c        ****             /* wait for write complete and no error */
1452:main.c        ****             do
1453:main.c        ****             {
1454:main.c        ****                 status = I2C_1_MasterStatus();
 6599              		.loc 1 1454 0
 6600 0048 FFF7FEFF 		bl	I2C_1_MasterStatus
 6601 004c 0346     		mov	r3, r0
 6602 004e FB73     		strb	r3, [r7, #15]
1455:main.c        ****                 timeout--;
 6603              		.loc 1 1455 0
 6604 0050 3B69     		ldr	r3, [r7, #16]
 6605 0052 013B     		subs	r3, r3, #1
 6606 0054 3B61     		str	r3, [r7, #16]
1456:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6607              		.loc 1 1456 0
 6608 0056 FB7B     		ldrb	r3, [r7, #15]
 6609 0058 DBB2     		uxtb	r3, r3
 6610 005a 802B     		cmp	r3, #128
 6611 005c 03D1     		bne	.L241
1457:main.c        ****                 {
1458:main.c        ****                     I2C_reset();
 6612              		.loc 1 1458 0
 6613 005e FFF7FEFF 		bl	I2C_reset
1459:main.c        ****                     error = 1;
 6614              		.loc 1 1459 0
 6615 0062 0123     		movs	r3, #1
 6616 0064 FB75     		strb	r3, [r7, #23]
 6617              	.L241:
1460:main.c        ****                 }
1461:main.c        ****                 if (timeout == 0)
 6618              		.loc 1 1461 0
 6619 0066 3B69     		ldr	r3, [r7, #16]
 6620 0068 002B     		cmp	r3, #0
 6621 006a 05D1     		bne	.L242
1462:main.c        ****                 {
1463:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6622              		.loc 1 1463 0
 6623 006c 8023     		movs	r3, #128
 6624 006e FB73     		strb	r3, [r7, #15]
1464:main.c        ****                     I2C_reset();
 6625              		.loc 1 1464 0
 6626 0070 FFF7FEFF 		bl	I2C_reset
1465:main.c        ****                     error = 1;
 6627              		.loc 1 1465 0
 6628 0074 0123     		movs	r3, #1
 6629 0076 FB75     		strb	r3, [r7, #23]
 6630              	.L242:
1466:main.c        ****                 }
1467:main.c        ****                 
1468:main.c        ****                 if (status == 0)
 6631              		.loc 1 1468 0
 6632 0078 FB7B     		ldrb	r3, [r7, #15]
 6633 007a DBB2     		uxtb	r3, r3
 6634 007c 002B     		cmp	r3, #0
 6635 007e 05D1     		bne	.L243
1469:main.c        ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 145


1470:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6636              		.loc 1 1470 0
 6637 0080 8023     		movs	r3, #128
 6638 0082 FB73     		strb	r3, [r7, #15]
1471:main.c        ****                     I2C_reset();
 6639              		.loc 1 1471 0
 6640 0084 FFF7FEFF 		bl	I2C_reset
1472:main.c        ****                     error = 1;
 6641              		.loc 1 1472 0
 6642 0088 0123     		movs	r3, #1
 6643 008a FB75     		strb	r3, [r7, #23]
 6644              	.L243:
1473:main.c        ****                 }
1474:main.c        ****                 
1475:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6645              		.loc 1 1475 0
 6646 008c FB7B     		ldrb	r3, [r7, #15]
 6647 008e DBB2     		uxtb	r3, r3
 6648 0090 03F08203 		and	r3, r3, #130
 6649 0094 002B     		cmp	r3, #0
 6650 0096 0DD1     		bne	.L239
 6651              		.loc 1 1475 0 is_stmt 0 discriminator 1
 6652 0098 FB7B     		ldrb	r3, [r7, #15]
 6653 009a DBB2     		uxtb	r3, r3
 6654 009c 002B     		cmp	r3, #0
 6655 009e 09D0     		beq	.L239
 6656              		.loc 1 1475 0 discriminator 2
 6657 00a0 3B69     		ldr	r3, [r7, #16]
 6658 00a2 002B     		cmp	r3, #0
 6659 00a4 D0D1     		bne	.L244
 6660 00a6 05E0     		b	.L239
 6661              	.L240:
1476:main.c        ****         }
1477:main.c        ****         else
1478:main.c        ****         {
1479:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1480:main.c        ****             *  I2CM_MasterStatus() error output */
1481:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6662              		.loc 1 1481 0 is_stmt 1
 6663 00a8 8023     		movs	r3, #128
 6664 00aa FB73     		strb	r3, [r7, #15]
1482:main.c        ****             I2C_reset();
 6665              		.loc 1 1482 0
 6666 00ac FFF7FEFF 		bl	I2C_reset
1483:main.c        ****             error = 1;
 6667              		.loc 1 1483 0
 6668 00b0 0123     		movs	r3, #1
 6669 00b2 FB75     		strb	r3, [r7, #23]
 6670              	.L239:
1484:main.c        ****         } 
1485:main.c        ****     }  
1486:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6671              		.loc 1 1486 0
 6672 00b4 FB7B     		ldrb	r3, [r7, #15]
 6673 00b6 DBB2     		uxtb	r3, r3
 6674 00b8 03F02003 		and	r3, r3, #32
 6675 00bc 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 146


 6676 00be 04D1     		bne	.L245
 6677              		.loc 1 1486 0 is_stmt 0 discriminator 1
 6678 00c0 FB7B     		ldrb	r3, [r7, #15]
 6679 00c2 DBB2     		uxtb	r3, r3
 6680 00c4 5BB2     		sxtb	r3, r3
 6681 00c6 002B     		cmp	r3, #0
 6682 00c8 03DA     		bge	.L246
 6683              	.L245:
1487:main.c        ****     {
1488:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1489:main.c        ****         //i2c_skipped[main_counter] = 1;
1490:main.c        ****         I2C_reset();
 6684              		.loc 1 1490 0 is_stmt 1
 6685 00ca FFF7FEFF 		bl	I2C_reset
1491:main.c        ****         error = 1;
 6686              		.loc 1 1491 0
 6687 00ce 0123     		movs	r3, #1
 6688 00d0 FB75     		strb	r3, [r7, #23]
 6689              	.L246:
1492:main.c        ****     }
1493:main.c        ****     return error;
 6690              		.loc 1 1493 0
 6691 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1494:main.c        **** }
 6692              		.loc 1 1494 0
 6693 00d4 1846     		mov	r0, r3
 6694 00d6 1837     		adds	r7, r7, #24
 6695              		.cfi_def_cfa_offset 8
 6696 00d8 BD46     		mov	sp, r7
 6697              		.cfi_def_cfa_register 13
 6698              		@ sp needed
 6699 00da 80BD     		pop	{r7, pc}
 6700              	.L249:
 6701              		.align	2
 6702              	.L248:
 6703 00dc 00000000 		.word	I2Cbuff1
 6704              		.cfi_endproc
 6705              	.LFE78:
 6706              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 6707              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 6708              		.align	2
 6709              		.global	I2C_MasterReadBlocking
 6710              		.thumb
 6711              		.thumb_func
 6712              		.type	I2C_MasterReadBlocking, %function
 6713              	I2C_MasterReadBlocking:
 6714              	.LFB79:
1495:main.c        **** 
1496:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1497:main.c        **** {
 6715              		.loc 1 1497 0
 6716              		.cfi_startproc
 6717              		@ args = 0, pretend = 0, frame = 16
 6718              		@ frame_needed = 1, uses_anonymous_args = 0
 6719 0000 80B5     		push	{r7, lr}
 6720              		.cfi_def_cfa_offset 8
 6721              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 147


 6722              		.cfi_offset 14, -4
 6723 0002 84B0     		sub	sp, sp, #16
 6724              		.cfi_def_cfa_offset 24
 6725 0004 00AF     		add	r7, sp, #0
 6726              		.cfi_def_cfa_register 7
 6727 0006 0346     		mov	r3, r0
 6728 0008 FB71     		strb	r3, [r7, #7]
 6729 000a 0B46     		mov	r3, r1
 6730 000c BB71     		strb	r3, [r7, #6]
 6731 000e 1346     		mov	r3, r2
 6732 0010 7B71     		strb	r3, [r7, #5]
1498:main.c        ****     uint8 volatile status;
1499:main.c        ****     uint32_t timeout = 50000;
 6733              		.loc 1 1499 0
 6734 0012 4CF25033 		movw	r3, #50000
 6735 0016 FB60     		str	r3, [r7, #12]
1500:main.c        ****     uint8_t error = 0;
 6736              		.loc 1 1500 0
 6737 0018 0023     		movs	r3, #0
 6738 001a FB72     		strb	r3, [r7, #11]
1501:main.c        ****     status = I2C_1_MasterClearStatus();
 6739              		.loc 1 1501 0
 6740 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6741 0020 0346     		mov	r3, r0
 6742 0022 BB72     		strb	r3, [r7, #10]
1502:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6743              		.loc 1 1502 0
 6744 0024 BB7A     		ldrb	r3, [r7, #10]
 6745 0026 DBB2     		uxtb	r3, r3
 6746 0028 5BB2     		sxtb	r3, r3
 6747 002a 002B     		cmp	r3, #0
 6748 002c 46DB     		blt	.L251
1503:main.c        ****     {
1504:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 6749              		.loc 1 1504 0
 6750 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6751 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 6752 0032 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6753 0034 2B49     		ldr	r1, .L260
 6754 0036 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 6755 003a 0346     		mov	r3, r0
 6756 003c BB72     		strb	r3, [r7, #10]
1505:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1506:main.c        ****                                     nbytes, mode); 
1507:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6757              		.loc 1 1507 0
 6758 003e BB7A     		ldrb	r3, [r7, #10]
 6759 0040 DBB2     		uxtb	r3, r3
 6760 0042 002B     		cmp	r3, #0
 6761 0044 34D1     		bne	.L252
 6762              	.L256:
1508:main.c        ****         {
1509:main.c        ****             /* wait for read complete and no error */
1510:main.c        ****             do
1511:main.c        ****             {
1512:main.c        ****                 status = I2C_1_MasterStatus();
 6763              		.loc 1 1512 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 148


 6764 0046 FFF7FEFF 		bl	I2C_1_MasterStatus
 6765 004a 0346     		mov	r3, r0
 6766 004c BB72     		strb	r3, [r7, #10]
1513:main.c        ****                 timeout--;
 6767              		.loc 1 1513 0
 6768 004e FB68     		ldr	r3, [r7, #12]
 6769 0050 013B     		subs	r3, r3, #1
 6770 0052 FB60     		str	r3, [r7, #12]
1514:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6771              		.loc 1 1514 0
 6772 0054 BB7A     		ldrb	r3, [r7, #10]
 6773 0056 DBB2     		uxtb	r3, r3
 6774 0058 802B     		cmp	r3, #128
 6775 005a 12D1     		bne	.L253
1515:main.c        ****                 {
1516:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 6776              		.loc 1 1516 0
 6777 005c 224B     		ldr	r3, .L260+4
 6778 005e 5222     		movs	r2, #82
 6779 0060 1A70     		strb	r2, [r3]
 6780 0062 224B     		ldr	r3, .L260+8
 6781 0064 FF22     		movs	r2, #255
 6782 0066 1A70     		strb	r2, [r3]
 6783 0068 214B     		ldr	r3, .L260+12
 6784 006a 0022     		movs	r2, #0
 6785 006c 1A70     		strb	r2, [r3]
 6786 006e 00BF     		nop
 6787              	.L254:
 6788              		.loc 1 1516 0 is_stmt 0 discriminator 2
 6789 0070 1E4B     		ldr	r3, .L260+8
 6790 0072 1B78     		ldrb	r3, [r3]
 6791 0074 DBB2     		uxtb	r3, r3
 6792 0076 002B     		cmp	r3, #0
 6793 0078 FAD1     		bne	.L254
1517:main.c        ****                     I2C_reset();
 6794              		.loc 1 1517 0 is_stmt 1
 6795 007a FFF7FEFF 		bl	I2C_reset
1518:main.c        ****                     error = 1;
 6796              		.loc 1 1518 0
 6797 007e 0123     		movs	r3, #1
 6798 0080 FB72     		strb	r3, [r7, #11]
 6799              	.L253:
1519:main.c        ****                 }
1520:main.c        ****                 if (timeout == 0)
 6800              		.loc 1 1520 0
 6801 0082 FB68     		ldr	r3, [r7, #12]
 6802 0084 002B     		cmp	r3, #0
 6803 0086 05D1     		bne	.L255
1521:main.c        ****                 {
1522:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6804              		.loc 1 1522 0
 6805 0088 8023     		movs	r3, #128
 6806 008a BB72     		strb	r3, [r7, #10]
1523:main.c        ****                     I2C_reset();
 6807              		.loc 1 1523 0
 6808 008c FFF7FEFF 		bl	I2C_reset
1524:main.c        ****                     error = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 149


 6809              		.loc 1 1524 0
 6810 0090 0123     		movs	r3, #1
 6811 0092 FB72     		strb	r3, [r7, #11]
 6812              	.L255:
1525:main.c        ****                 }
1526:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6813              		.loc 1 1526 0
 6814 0094 BB7A     		ldrb	r3, [r7, #10]
 6815 0096 DBB2     		uxtb	r3, r3
 6816 0098 03F08103 		and	r3, r3, #129
 6817 009c 002B     		cmp	r3, #0
 6818 009e 0DD1     		bne	.L251
 6819              		.loc 1 1526 0 is_stmt 0 discriminator 1
 6820 00a0 BB7A     		ldrb	r3, [r7, #10]
 6821 00a2 DBB2     		uxtb	r3, r3
 6822 00a4 002B     		cmp	r3, #0
 6823 00a6 09D0     		beq	.L251
 6824              		.loc 1 1526 0 discriminator 2
 6825 00a8 FB68     		ldr	r3, [r7, #12]
 6826 00aa 002B     		cmp	r3, #0
 6827 00ac CBD1     		bne	.L256
 6828 00ae 05E0     		b	.L251
 6829              	.L252:
1527:main.c        ****         }
1528:main.c        ****         else
1529:main.c        ****         {
1530:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1531:main.c        ****             *  I2CM_MasterStatus() error output */
1532:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6830              		.loc 1 1532 0 is_stmt 1
 6831 00b0 8023     		movs	r3, #128
 6832 00b2 BB72     		strb	r3, [r7, #10]
1533:main.c        ****             I2C_reset();
 6833              		.loc 1 1533 0
 6834 00b4 FFF7FEFF 		bl	I2C_reset
1534:main.c        ****             error = 1;
 6835              		.loc 1 1534 0
 6836 00b8 0123     		movs	r3, #1
 6837 00ba FB72     		strb	r3, [r7, #11]
 6838              	.L251:
1535:main.c        ****         }
1536:main.c        ****     }
1537:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6839              		.loc 1 1537 0
 6840 00bc BB7A     		ldrb	r3, [r7, #10]
 6841 00be DBB2     		uxtb	r3, r3
 6842 00c0 03F02003 		and	r3, r3, #32
 6843 00c4 002B     		cmp	r3, #0
 6844 00c6 04D1     		bne	.L257
 6845              		.loc 1 1537 0 is_stmt 0 discriminator 1
 6846 00c8 BB7A     		ldrb	r3, [r7, #10]
 6847 00ca DBB2     		uxtb	r3, r3
 6848 00cc 5BB2     		sxtb	r3, r3
 6849 00ce 002B     		cmp	r3, #0
 6850 00d0 03DA     		bge	.L258
 6851              	.L257:
1538:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 150


1539:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1540:main.c        ****         //i2c_skipped[main_counter] = 1;
1541:main.c        ****         I2C_reset();
 6852              		.loc 1 1541 0 is_stmt 1
 6853 00d2 FFF7FEFF 		bl	I2C_reset
1542:main.c        ****         error = 1;
 6854              		.loc 1 1542 0
 6855 00d6 0123     		movs	r3, #1
 6856 00d8 FB72     		strb	r3, [r7, #11]
 6857              	.L258:
1543:main.c        ****     }
1544:main.c        ****     return error;
 6858              		.loc 1 1544 0
 6859 00da FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1545:main.c        **** }
 6860              		.loc 1 1545 0
 6861 00dc 1846     		mov	r0, r3
 6862 00de 1037     		adds	r7, r7, #16
 6863              		.cfi_def_cfa_offset 8
 6864 00e0 BD46     		mov	sp, r7
 6865              		.cfi_def_cfa_register 13
 6866              		@ sp needed
 6867 00e2 80BD     		pop	{r7, pc}
 6868              	.L261:
 6869              		.align	2
 6870              	.L260:
 6871 00e4 00000000 		.word	I2Cbuff2
 6872 00e8 78640040 		.word	1073767544
 6873 00ec 18640040 		.word	1073767448
 6874 00f0 58640040 		.word	1073767512
 6875              		.cfi_endproc
 6876              	.LFE79:
 6877              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 6878              		.section	.text.I2C_reset,"ax",%progbits
 6879              		.align	2
 6880              		.global	I2C_reset
 6881              		.thumb
 6882              		.thumb_func
 6883              		.type	I2C_reset, %function
 6884              	I2C_reset:
 6885              	.LFB80:
1546:main.c        **** 
1547:main.c        **** void I2C_reset(void)
1548:main.c        **** {
 6886              		.loc 1 1548 0
 6887              		.cfi_startproc
 6888              		@ args = 0, pretend = 0, frame = 0
 6889              		@ frame_needed = 1, uses_anonymous_args = 0
 6890 0000 80B5     		push	{r7, lr}
 6891              		.cfi_def_cfa_offset 8
 6892              		.cfi_offset 7, -8
 6893              		.cfi_offset 14, -4
 6894 0002 00AF     		add	r7, sp, #0
 6895              		.cfi_def_cfa_register 7
1549:main.c        ****   I2C_1_Stop();
 6896              		.loc 1 1549 0
 6897 0004 FFF7FEFF 		bl	I2C_1_Stop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 151


1550:main.c        **** 
1551:main.c        ****   /* Disable/clear everything, then reinitialize. */
1552:main.c        **** 
1553:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 6898              		.loc 1 1553 0
 6899 0008 044B     		ldr	r3, .L263
 6900 000a 0022     		movs	r2, #0
 6901 000c 1A70     		strb	r2, [r3]
1554:main.c        **** 
1555:main.c        ****   //I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
1556:main.c        **** 
1557:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 6902              		.loc 1 1557 0
 6903 000e 044B     		ldr	r3, .L263+4
 6904 0010 0022     		movs	r2, #0
 6905 0012 1A70     		strb	r2, [r3]
1558:main.c        **** 
1559:main.c        ****   I2C_1_Start();
 6906              		.loc 1 1559 0
 6907 0014 FFF7FEFF 		bl	I2C_1_Start
1560:main.c        **** }
 6908              		.loc 1 1560 0
 6909 0018 00BF     		nop
 6910 001a 80BD     		pop	{r7, pc}
 6911              	.L264:
 6912              		.align	2
 6913              	.L263:
 6914 001c 78640040 		.word	1073767544
 6915 0020 00000000 		.word	I2C_1_initVar
 6916              		.cfi_endproc
 6917              	.LFE80:
 6918              		.size	I2C_reset, .-I2C_reset
 6919              		.section	.text.checkUSB_Vbus,"ax",%progbits
 6920              		.align	2
 6921              		.global	checkUSB_Vbus
 6922              		.thumb
 6923              		.thumb_func
 6924              		.type	checkUSB_Vbus, %function
 6925              	checkUSB_Vbus:
 6926              	.LFB81:
1561:main.c        **** 
1562:main.c        **** 
1563:main.c        ****     
1564:main.c        **** void checkUSB_Vbus(void)
1565:main.c        **** {
 6927              		.loc 1 1565 0
 6928              		.cfi_startproc
 6929              		@ args = 0, pretend = 0, frame = 0
 6930              		@ frame_needed = 1, uses_anonymous_args = 0
 6931 0000 80B5     		push	{r7, lr}
 6932              		.cfi_def_cfa_offset 8
 6933              		.cfi_offset 7, -8
 6934              		.cfi_offset 14, -4
 6935 0002 00AF     		add	r7, sp, #0
 6936              		.cfi_def_cfa_register 7
1566:main.c        ****    if (USB_VBusPresent() == 0)
 6937              		.loc 1 1566 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 152


 6938 0004 FFF7FEFF 		bl	USB_VBusPresent
 6939 0008 0346     		mov	r3, r0
 6940 000a 002B     		cmp	r3, #0
 6941 000c 05D1     		bne	.L266
1567:main.c        ****    {
1568:main.c        ****        USB_Stop();
 6942              		.loc 1 1568 0
 6943 000e FFF7FEFF 		bl	USB_Stop
1569:main.c        ****        USB_active = 0; 
 6944              		.loc 1 1569 0
 6945 0012 0E4B     		ldr	r3, .L269
 6946 0014 0022     		movs	r2, #0
 6947 0016 1A70     		strb	r2, [r3]
 6948 0018 13E0     		b	.L267
 6949              	.L266:
1570:main.c        ****    }
1571:main.c        ****    else if (USB_active == 0 )
 6950              		.loc 1 1571 0
 6951 001a 0C4B     		ldr	r3, .L269
 6952 001c 1B78     		ldrb	r3, [r3]
 6953 001e DBB2     		uxtb	r3, r3
 6954 0020 002B     		cmp	r3, #0
 6955 0022 0ED1     		bne	.L267
1572:main.c        ****    {
1573:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 6956              		.loc 1 1573 0
 6957 0024 0021     		movs	r1, #0
 6958 0026 0020     		movs	r0, #0
 6959 0028 FFF7FEFF 		bl	USB_Start
1574:main.c        ****         while (0u == USB_GetConfiguration());
 6960              		.loc 1 1574 0
 6961 002c 00BF     		nop
 6962              	.L268:
 6963              		.loc 1 1574 0 is_stmt 0 discriminator 1
 6964 002e FFF7FEFF 		bl	USB_GetConfiguration
 6965 0032 0346     		mov	r3, r0
 6966 0034 002B     		cmp	r3, #0
 6967 0036 FAD0     		beq	.L268
1575:main.c        ****         USB_MIDI_EP_Init();
 6968              		.loc 1 1575 0 is_stmt 1
 6969 0038 FFF7FEFF 		bl	USB_MIDI_Init
1576:main.c        ****        USB_active = 1;
 6970              		.loc 1 1576 0
 6971 003c 034B     		ldr	r3, .L269
 6972 003e 0122     		movs	r2, #1
 6973 0040 1A70     		strb	r2, [r3]
 6974              	.L267:
1577:main.c        ****    }
1578:main.c        ****    USB_check_flag = 0;
 6975              		.loc 1 1578 0
 6976 0042 034B     		ldr	r3, .L269+4
 6977 0044 0022     		movs	r2, #0
 6978 0046 1A70     		strb	r2, [r3]
1579:main.c        **** }
 6979              		.loc 1 1579 0
 6980 0048 00BF     		nop
 6981 004a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 153


 6982              	.L270:
 6983              		.align	2
 6984              	.L269:
 6985 004c 00000000 		.word	USB_active
 6986 0050 00000000 		.word	USB_check_flag
 6987              		.cfi_endproc
 6988              	.LFE81:
 6989              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 6990              		.section	.text.USB_service,"ax",%progbits
 6991              		.align	2
 6992              		.global	USB_service
 6993              		.thumb
 6994              		.thumb_func
 6995              		.type	USB_service, %function
 6996              	USB_service:
 6997              	.LFB82:
1580:main.c        **** 
1581:main.c        **** 
1582:main.c        **** 
1583:main.c        **** void USB_service(void)
1584:main.c        **** {
 6998              		.loc 1 1584 0
 6999              		.cfi_startproc
 7000              		@ args = 0, pretend = 0, frame = 0
 7001              		@ frame_needed = 1, uses_anonymous_args = 0
 7002 0000 80B5     		push	{r7, lr}
 7003              		.cfi_def_cfa_offset 8
 7004              		.cfi_offset 7, -8
 7005              		.cfi_offset 14, -4
 7006 0002 00AF     		add	r7, sp, #0
 7007              		.cfi_def_cfa_register 7
1585:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 7008              		.loc 1 1585 0
 7009 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 7010 0008 0346     		mov	r3, r0
 7011 000a 002B     		cmp	r3, #0
 7012 000c 10D0     		beq	.L272
1586:main.c        ****     {
1587:main.c        ****         if(USB_GetConfiguration() != 0u)   
 7013              		.loc 1 1587 0
 7014 000e FFF7FEFF 		bl	USB_GetConfiguration
 7015 0012 0346     		mov	r3, r0
 7016 0014 002B     		cmp	r3, #0
 7017 0016 0BD0     		beq	.L272
1588:main.c        ****         {
1589:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1590:main.c        ****             
1591:main.c        ****             //SleepTimer_Start();
1592:main.c        ****         	
1593:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 7018              		.loc 1 1593 0
 7019 0018 244B     		ldr	r3, .L278
 7020 001a 1B78     		ldrb	r3, [r3]
 7021 001c DBB2     		uxtb	r3, r3
 7022 001e 002B     		cmp	r3, #0
 7023 0020 06D0     		beq	.L272
 7024              		.loc 1 1593 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 154


 7025 0022 FFF7FEFF 		bl	USB_VBusPresent
 7026 0026 0346     		mov	r3, r0
 7027 0028 002B     		cmp	r3, #0
 7028 002a 01D0     		beq	.L272
1594:main.c        ****             {
1595:main.c        ****                 USB_MIDI_EP_Init();
 7029              		.loc 1 1595 0 is_stmt 1
 7030 002c FFF7FEFF 		bl	USB_MIDI_Init
 7031              	.L272:
1596:main.c        ****             }
1597:main.c        ****         }
1598:main.c        ****         else
1599:main.c        ****         {
1600:main.c        ****             //SleepTimer_Stop();
1601:main.c        ****         }    
1602:main.c        ****     }        
1603:main.c        ****     
1604:main.c        ****     if(USB_GetConfiguration() != 0u)    
 7032              		.loc 1 1604 0
 7033 0030 FFF7FEFF 		bl	USB_GetConfiguration
 7034 0034 0346     		mov	r3, r0
 7035 0036 002B     		cmp	r3, #0
 7036 0038 35D0     		beq	.L277
1605:main.c        ****     {
1606:main.c        **** 
1607:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1608:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 7037              		.loc 1 1608 0
 7038 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 7039 003e 0346     		mov	r3, r0
 7040 0040 002B     		cmp	r3, #0
 7041 0042 18D0     		beq	.L275
1609:main.c        ****         {
1610:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 7042              		.loc 1 1610 0
 7043 0044 1A4B     		ldr	r3, .L278+4
 7044 0046 1B78     		ldrb	r3, [r3]
 7045 0048 D8B2     		uxtb	r0, r3
 7046 004a 1A4B     		ldr	r3, .L278+8
 7047 004c 1B78     		ldrb	r3, [r3]
 7048 004e DBB2     		uxtb	r3, r3
 7049 0050 9BB2     		uxth	r3, r3
 7050 0052 1A46     		mov	r2, r3
 7051 0054 1849     		ldr	r1, .L278+12
 7052 0056 FFF7FEFF 		bl	USB_LoadInEP
1611:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1612:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 7053              		.loc 1 1612 0
 7054 005a 184B     		ldr	r3, .L278+16
 7055 005c 1B78     		ldrb	r3, [r3]
 7056 005e DBB2     		uxtb	r3, r3
 7057 0060 4022     		movs	r2, #64
 7058 0062 1749     		ldr	r1, .L278+20
 7059 0064 1846     		mov	r0, r3
 7060 0066 FFF7FEFF 		bl	USB_ReadOutEP
1613:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1614:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 155


1615:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 7061              		.loc 1 1615 0
 7062 006a 144B     		ldr	r3, .L278+16
 7063 006c 1B78     		ldrb	r3, [r3]
 7064 006e DBB2     		uxtb	r3, r3
 7065 0070 1846     		mov	r0, r3
 7066 0072 FFF7FEFF 		bl	USB_EnableOutEP
 7067              	.L275:
1616:main.c        ****         }
1617:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7068              		.loc 1 1617 0
 7069 0076 0D4B     		ldr	r3, .L278
 7070 0078 1B78     		ldrb	r3, [r3]
 7071 007a DBB2     		uxtb	r3, r3
 7072 007c 002B     		cmp	r3, #0
 7073 007e 06D0     		beq	.L276
 7074              		.loc 1 1617 0 is_stmt 0 discriminator 1
 7075 0080 FFF7FEFF 		bl	USB_VBusPresent
 7076 0084 0346     		mov	r3, r0
 7077 0086 002B     		cmp	r3, #0
 7078 0088 01D0     		beq	.L276
1618:main.c        ****         {
1619:main.c        ****             USB_MIDI_IN_Service();
 7079              		.loc 1 1619 0 is_stmt 1
 7080 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 7081              	.L276:
1620:main.c        ****         }
1621:main.c        **** 
1622:main.c        **** 
1623:main.c        **** 
1624:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7082              		.loc 1 1624 0
 7083 008e 074B     		ldr	r3, .L278
 7084 0090 1B78     		ldrb	r3, [r3]
 7085 0092 DBB2     		uxtb	r3, r3
 7086 0094 002B     		cmp	r3, #0
 7087 0096 06D0     		beq	.L277
 7088              		.loc 1 1624 0 is_stmt 0 discriminator 1
 7089 0098 FFF7FEFF 		bl	USB_VBusPresent
 7090 009c 0346     		mov	r3, r0
 7091 009e 002B     		cmp	r3, #0
 7092 00a0 01D0     		beq	.L277
1625:main.c        ****         {
1626:main.c        ****             USB_MIDI_OUT_Service();
 7093              		.loc 1 1626 0 is_stmt 1
 7094 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 7095              	.L277:
1627:main.c        ****         }
1628:main.c        ****     }
1629:main.c        ****         
1630:main.c        **** }
 7096              		.loc 1 1630 0
 7097 00a6 00BF     		nop
 7098 00a8 80BD     		pop	{r7, pc}
 7099              	.L279:
 7100 00aa 00BF     		.align	2
 7101              	.L278:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 156


 7102 00ac 00000000 		.word	USB_active
 7103 00b0 00000000 		.word	USB_midi_in_ep
 7104 00b4 00000000 		.word	USB_midiInPointer
 7105 00b8 00000000 		.word	USB_midiInBuffer
 7106 00bc 00000000 		.word	USB_midi_out_ep
 7107 00c0 00000000 		.word	USB_midiOutBuffer
 7108              		.cfi_endproc
 7109              	.LFE82:
 7110              		.size	USB_service, .-USB_service
 7111              		.section	.text.log2f_approx,"ax",%progbits
 7112              		.align	2
 7113              		.global	log2f_approx
 7114              		.thumb
 7115              		.thumb_func
 7116              		.type	log2f_approx, %function
 7117              	log2f_approx:
 7118              	.LFB83:
1631:main.c        **** 
1632:main.c        **** // This is a fast approximation to log2()
1633:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1634:main.c        **** float log2f_approx(float X) {
 7119              		.loc 1 1634 0
 7120              		.cfi_startproc
 7121              		@ args = 0, pretend = 0, frame = 24
 7122              		@ frame_needed = 1, uses_anonymous_args = 0
 7123 0000 80B5     		push	{r7, lr}
 7124              		.cfi_def_cfa_offset 8
 7125              		.cfi_offset 7, -8
 7126              		.cfi_offset 14, -4
 7127 0002 86B0     		sub	sp, sp, #24
 7128              		.cfi_def_cfa_offset 32
 7129 0004 00AF     		add	r7, sp, #0
 7130              		.cfi_def_cfa_register 7
 7131 0006 7860     		str	r0, [r7, #4]	@ float
1635:main.c        ****   float Y, F;
1636:main.c        ****   int E;
1637:main.c        ****   F = frexpf(fabsf(X), &E);
 7132              		.loc 1 1637 0
 7133 0008 7B68     		ldr	r3, [r7, #4]
 7134 000a 23F00043 		bic	r3, r3, #-2147483648
 7135 000e 07F10C02 		add	r2, r7, #12
 7136 0012 1146     		mov	r1, r2
 7137 0014 1846     		mov	r0, r3
 7138 0016 FFF7FEFF 		bl	frexpf
 7139 001a 7861     		str	r0, [r7, #20]	@ float
1638:main.c        ****   Y = 1.23149591368684f;
 7140              		.loc 1 1638 0
 7141 001c 1A4B     		ldr	r3, .L282
 7142 001e 3B61     		str	r3, [r7, #16]	@ float
1639:main.c        ****   Y *= F;
 7143              		.loc 1 1639 0
 7144 0020 7969     		ldr	r1, [r7, #20]	@ float
 7145 0022 3869     		ldr	r0, [r7, #16]	@ float
 7146 0024 FFF7FEFF 		bl	__aeabi_fmul
 7147 0028 0346     		mov	r3, r0
 7148 002a 3B61     		str	r3, [r7, #16]	@ float
1640:main.c        ****   Y += -4.11852516267426f;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 157


 7149              		.loc 1 1640 0
 7150 002c 1749     		ldr	r1, .L282+4
 7151 002e 3869     		ldr	r0, [r7, #16]	@ float
 7152 0030 FFF7FEFF 		bl	__aeabi_fsub
 7153 0034 0346     		mov	r3, r0
 7154 0036 3B61     		str	r3, [r7, #16]	@ float
1641:main.c        ****   Y *= F;
 7155              		.loc 1 1641 0
 7156 0038 7969     		ldr	r1, [r7, #20]	@ float
 7157 003a 3869     		ldr	r0, [r7, #16]	@ float
 7158 003c FFF7FEFF 		bl	__aeabi_fmul
 7159 0040 0346     		mov	r3, r0
 7160 0042 3B61     		str	r3, [r7, #16]	@ float
1642:main.c        ****   Y += 6.02197014179219f;
 7161              		.loc 1 1642 0
 7162 0044 1249     		ldr	r1, .L282+8
 7163 0046 3869     		ldr	r0, [r7, #16]	@ float
 7164 0048 FFF7FEFF 		bl	__aeabi_fadd
 7165 004c 0346     		mov	r3, r0
 7166 004e 3B61     		str	r3, [r7, #16]	@ float
1643:main.c        ****   Y *= F;
 7167              		.loc 1 1643 0
 7168 0050 7969     		ldr	r1, [r7, #20]	@ float
 7169 0052 3869     		ldr	r0, [r7, #16]	@ float
 7170 0054 FFF7FEFF 		bl	__aeabi_fmul
 7171 0058 0346     		mov	r3, r0
 7172 005a 3B61     		str	r3, [r7, #16]	@ float
1644:main.c        ****   Y += -3.13396450166353f;
 7173              		.loc 1 1644 0
 7174 005c 0D49     		ldr	r1, .L282+12
 7175 005e 3869     		ldr	r0, [r7, #16]	@ float
 7176 0060 FFF7FEFF 		bl	__aeabi_fsub
 7177 0064 0346     		mov	r3, r0
 7178 0066 3B61     		str	r3, [r7, #16]	@ float
1645:main.c        ****   Y += E;
 7179              		.loc 1 1645 0
 7180 0068 FB68     		ldr	r3, [r7, #12]
 7181 006a 1846     		mov	r0, r3
 7182 006c FFF7FEFF 		bl	__aeabi_i2f
 7183 0070 0346     		mov	r3, r0
 7184 0072 1946     		mov	r1, r3
 7185 0074 3869     		ldr	r0, [r7, #16]	@ float
 7186 0076 FFF7FEFF 		bl	__aeabi_fadd
 7187 007a 0346     		mov	r3, r0
 7188 007c 3B61     		str	r3, [r7, #16]	@ float
1646:main.c        ****   return(Y);
 7189              		.loc 1 1646 0
 7190 007e 3B69     		ldr	r3, [r7, #16]	@ float
1647:main.c        **** }
 7191              		.loc 1 1647 0
 7192 0080 1846     		mov	r0, r3
 7193 0082 1837     		adds	r7, r7, #24
 7194              		.cfi_def_cfa_offset 8
 7195 0084 BD46     		mov	sp, r7
 7196              		.cfi_def_cfa_register 13
 7197              		@ sp needed
 7198 0086 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 158


 7199              	.L283:
 7200              		.align	2
 7201              	.L282:
 7202 0088 A8A19D3F 		.word	1067295144
 7203 008c F5CA8340 		.word	1082378997
 7204 0090 FBB3C040 		.word	1086370811
 7205 0094 E0924840 		.word	1078498016
 7206              		.cfi_endproc
 7207              	.LFE83:
 7208              		.size	log2f_approx, .-log2f_approx
 7209              		.global	prevNotes
 7210              		.bss
 7211              		.align	2
 7212              		.type	prevNotes, %object
 7213              		.size	prevNotes, 48
 7214              	prevNotes:
 7215 00cc 00000000 		.space	48
 7215      00000000 
 7215      00000000 
 7215      00000000 
 7215      00000000 
 7216              		.section	.text.noteEvent,"ax",%progbits
 7217              		.align	2
 7218              		.global	noteEvent
 7219              		.thumb
 7220              		.thumb_func
 7221              		.type	noteEvent, %function
 7222              	noteEvent:
 7223              	.LFB84:
1648:main.c        **** 
1649:main.c        **** 
1650:main.c        **** 
1651:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1652:main.c        **** 
1653:main.c        **** void noteEvent(int string)
1654:main.c        **** {
 7224              		.loc 1 1654 0
 7225              		.cfi_startproc
 7226              		@ args = 0, pretend = 0, frame = 24
 7227              		@ frame_needed = 1, uses_anonymous_args = 0
 7228 0000 80B5     		push	{r7, lr}
 7229              		.cfi_def_cfa_offset 8
 7230              		.cfi_offset 7, -8
 7231              		.cfi_offset 14, -4
 7232 0002 86B0     		sub	sp, sp, #24
 7233              		.cfi_def_cfa_offset 32
 7234 0004 00AF     		add	r7, sp, #0
 7235              		.cfi_def_cfa_register 7
 7236 0006 7860     		str	r0, [r7, #4]
1655:main.c        ****     
1656:main.c        ****     /*
1657:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1658:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1659:main.c        ****     int vInt  = (int) (v*4.0f);
1660:main.c        ****     if (vInt > 127)
1661:main.c        ****     {
1662:main.c        ****         vInt = 127;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 159


1663:main.c        ****     }
1664:main.c        ****     */
1665:main.c        ****     uint16_t velocity = strings[string];
 7237              		.loc 1 1665 0
 7238 0008 2C4A     		ldr	r2, .L289
 7239 000a 7B68     		ldr	r3, [r7, #4]
 7240 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 7241 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1666:main.c        ****     if (velocity > 0)
 7242              		.loc 1 1666 0
 7243 0012 FB8A     		ldrh	r3, [r7, #22]
 7244 0014 002B     		cmp	r3, #0
 7245 0016 43D0     		beq	.L285
 7246              	.LBB47:
1667:main.c        ****     {
1668:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1669:main.c        ****         float tempVel = (float)velocity;
 7247              		.loc 1 1669 0
 7248 0018 FB8A     		ldrh	r3, [r7, #22]
 7249 001a 1846     		mov	r0, r3
 7250 001c FFF7FEFF 		bl	__aeabi_ui2f
 7251 0020 0346     		mov	r3, r0
 7252 0022 3B61     		str	r3, [r7, #16]	@ float
1670:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 7253              		.loc 1 1670 0
 7254 0024 4FF05E51 		mov	r1, #931135488
 7255 0028 3869     		ldr	r0, [r7, #16]	@ float
 7256 002a FFF7FEFF 		bl	__aeabi_fmul
 7257 002e 0346     		mov	r3, r0
 7258 0030 3B61     		str	r3, [r7, #16]	@ float
1671:main.c        ****         tempVel = sqrtf(tempVel);
 7259              		.loc 1 1671 0
 7260 0032 3869     		ldr	r0, [r7, #16]	@ float
 7261 0034 FFF7FEFF 		bl	sqrtf
 7262 0038 3861     		str	r0, [r7, #16]	@ float
1672:main.c        ****         tempVel = tempVel - 0.0239372430f;
 7263              		.loc 1 1672 0
 7264 003a 2149     		ldr	r1, .L289+4
 7265 003c 3869     		ldr	r0, [r7, #16]	@ float
 7266 003e FFF7FEFF 		bl	__aeabi_fsub
 7267 0042 0346     		mov	r3, r0
 7268 0044 3B61     		str	r3, [r7, #16]	@ float
1673:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 7269              		.loc 1 1673 0
 7270 0046 1F49     		ldr	r1, .L289+8
 7271 0048 3869     		ldr	r0, [r7, #16]	@ float
 7272 004a FFF7FEFF 		bl	__aeabi_fmul
 7273 004e 0346     		mov	r3, r0
 7274 0050 3B61     		str	r3, [r7, #16]	@ float
1674:main.c        ****         velocity = (int)tempVel;
 7275              		.loc 1 1674 0
 7276 0052 3869     		ldr	r0, [r7, #16]	@ float
 7277 0054 FFF7FEFF 		bl	__aeabi_f2iz
 7278 0058 0346     		mov	r3, r0
 7279 005a FB82     		strh	r3, [r7, #22]	@ movhi
1675:main.c        ****         
1676:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 160


1677:main.c        ****         if (velocity > 127)
 7280              		.loc 1 1677 0
 7281 005c FB8A     		ldrh	r3, [r7, #22]
 7282 005e 7F2B     		cmp	r3, #127
 7283 0060 01D9     		bls	.L286
1678:main.c        ****         {
1679:main.c        ****             velocity = 127;
 7284              		.loc 1 1679 0
 7285 0062 7F23     		movs	r3, #127
 7286 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 7287              	.L286:
1680:main.c        ****         }
1681:main.c        ****         
1682:main.c        ****         //only update octave on note-ons
1683:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1684:main.c        ****         int noteToSend = ((octave - 5) * 12) + openStringMIDI_Int[string];
 7288              		.loc 1 1684 0
 7289 0066 184B     		ldr	r3, .L289+12
 7290 0068 1B68     		ldr	r3, [r3]
 7291 006a 5A1F     		subs	r2, r3, #5
 7292 006c 1346     		mov	r3, r2
 7293 006e 5B00     		lsls	r3, r3, #1
 7294 0070 1344     		add	r3, r3, r2
 7295 0072 9B00     		lsls	r3, r3, #2
 7296 0074 1946     		mov	r1, r3
 7297 0076 154A     		ldr	r2, .L289+16
 7298 0078 7B68     		ldr	r3, [r7, #4]
 7299 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7300 007e 0B44     		add	r3, r3, r1
 7301 0080 FB60     		str	r3, [r7, #12]
1685:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 7302              		.loc 1 1685 0
 7303 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 7304 0084 DBB2     		uxtb	r3, r3
 7305 0086 1946     		mov	r1, r3
 7306 0088 7B68     		ldr	r3, [r7, #4]
 7307 008a 0133     		adds	r3, r3, #1
 7308 008c 1A46     		mov	r2, r3
 7309 008e F868     		ldr	r0, [r7, #12]
 7310 0090 FFF7FEFF 		bl	sendMIDINoteOn
1686:main.c        ****         prevNotes[string] = noteToSend;
 7311              		.loc 1 1686 0
 7312 0094 0E49     		ldr	r1, .L289+20
 7313 0096 7B68     		ldr	r3, [r7, #4]
 7314 0098 FA68     		ldr	r2, [r7, #12]
 7315 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 7316              	.LBE47:
1687:main.c        ****             
1688:main.c        ****     }
1689:main.c        ****     else
1690:main.c        ****     {
1691:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1692:main.c        ****     }
1693:main.c        **** 
1694:main.c        **** }
 7317              		.loc 1 1694 0
 7318 009e 09E0     		b	.L288
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 161


 7319              	.L285:
1691:main.c        ****     }
 7320              		.loc 1 1691 0
 7321 00a0 0B4A     		ldr	r2, .L289+20
 7322 00a2 7B68     		ldr	r3, [r7, #4]
 7323 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 7324 00a8 7B68     		ldr	r3, [r7, #4]
 7325 00aa 0133     		adds	r3, r3, #1
 7326 00ac 1A46     		mov	r2, r3
 7327 00ae 0021     		movs	r1, #0
 7328 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 7329              	.L288:
 7330              		.loc 1 1694 0
 7331 00b4 00BF     		nop
 7332 00b6 1837     		adds	r7, r7, #24
 7333              		.cfi_def_cfa_offset 8
 7334 00b8 BD46     		mov	sp, r7
 7335              		.cfi_def_cfa_register 13
 7336              		@ sp needed
 7337 00ba 80BD     		pop	{r7, pc}
 7338              	.L290:
 7339              		.align	2
 7340              	.L289:
 7341 00bc 00000000 		.word	strings
 7342 00c0 0918C43C 		.word	1019484169
 7343 00c4 551D0243 		.word	1124212053
 7344 00c8 00000000 		.word	octave
 7345 00cc 00000000 		.word	openStringMIDI_Int
 7346 00d0 00000000 		.word	prevNotes
 7347              		.cfi_endproc
 7348              	.LFE84:
 7349              		.size	noteEvent, .-noteEvent
 7350              		.section	.text.CCEvent,"ax",%progbits
 7351              		.align	2
 7352              		.global	CCEvent
 7353              		.thumb
 7354              		.thumb_func
 7355              		.type	CCEvent, %function
 7356              	CCEvent:
 7357              	.LFB85:
1695:main.c        **** 
1696:main.c        **** void CCEvent(int cc, int val)
1697:main.c        **** {
 7358              		.loc 1 1697 0
 7359              		.cfi_startproc
 7360              		@ args = 0, pretend = 0, frame = 8
 7361              		@ frame_needed = 1, uses_anonymous_args = 0
 7362 0000 80B5     		push	{r7, lr}
 7363              		.cfi_def_cfa_offset 8
 7364              		.cfi_offset 7, -8
 7365              		.cfi_offset 14, -4
 7366 0002 82B0     		sub	sp, sp, #8
 7367              		.cfi_def_cfa_offset 16
 7368 0004 00AF     		add	r7, sp, #0
 7369              		.cfi_def_cfa_register 7
 7370 0006 7860     		str	r0, [r7, #4]
 7371 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 162


1698:main.c        ****     
1699:main.c        ****     sendMIDIControlChange(cc, val, 0);
 7372              		.loc 1 1699 0
 7373 000a 0022     		movs	r2, #0
 7374 000c 3968     		ldr	r1, [r7]
 7375 000e 7868     		ldr	r0, [r7, #4]
 7376 0010 FFF7FEFF 		bl	sendMIDIControlChange
1700:main.c        **** }
 7377              		.loc 1 1700 0
 7378 0014 00BF     		nop
 7379 0016 0837     		adds	r7, r7, #8
 7380              		.cfi_def_cfa_offset 8
 7381 0018 BD46     		mov	sp, r7
 7382              		.cfi_def_cfa_register 13
 7383              		@ sp needed
 7384 001a 80BD     		pop	{r7, pc}
 7385              		.cfi_endproc
 7386              	.LFE85:
 7387              		.size	CCEvent, .-CCEvent
 7388              		.section	.text.sendMIDINoteOn,"ax",%progbits
 7389              		.align	2
 7390              		.global	sendMIDINoteOn
 7391              		.thumb
 7392              		.thumb_func
 7393              		.type	sendMIDINoteOn, %function
 7394              	sendMIDINoteOn:
 7395              	.LFB86:
1701:main.c        **** 
1702:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1703:main.c        **** {  
 7396              		.loc 1 1703 0
 7397              		.cfi_startproc
 7398              		@ args = 0, pretend = 0, frame = 16
 7399              		@ frame_needed = 1, uses_anonymous_args = 0
 7400 0000 80B5     		push	{r7, lr}
 7401              		.cfi_def_cfa_offset 8
 7402              		.cfi_offset 7, -8
 7403              		.cfi_offset 14, -4
 7404 0002 84B0     		sub	sp, sp, #16
 7405              		.cfi_def_cfa_offset 24
 7406 0004 00AF     		add	r7, sp, #0
 7407              		.cfi_def_cfa_register 7
 7408 0006 F860     		str	r0, [r7, #12]
 7409 0008 B960     		str	r1, [r7, #8]
 7410 000a 7A60     		str	r2, [r7, #4]
1704:main.c        ****    
1705:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 7411              		.loc 1 1705 0
 7412 000c 7B68     		ldr	r3, [r7, #4]
 7413 000e DBB2     		uxtb	r3, r3
 7414 0010 703B     		subs	r3, r3, #112
 7415 0012 DAB2     		uxtb	r2, r3
 7416 0014 114B     		ldr	r3, .L294
 7417 0016 1A70     		strb	r2, [r3]
1706:main.c        ****     midiMsg[1] = MIDInoteNum;
 7418              		.loc 1 1706 0
 7419 0018 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 163


 7420 001a DAB2     		uxtb	r2, r3
 7421 001c 0F4B     		ldr	r3, .L294
 7422 001e 5A70     		strb	r2, [r3, #1]
1707:main.c        ****     midiMsg[2] = velocity;	
 7423              		.loc 1 1707 0
 7424 0020 BB68     		ldr	r3, [r7, #8]
 7425 0022 DAB2     		uxtb	r2, r3
 7426 0024 0D4B     		ldr	r3, .L294
 7427 0026 9A70     		strb	r2, [r3, #2]
1708:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7428              		.loc 1 1708 0
 7429 0028 0D4B     		ldr	r3, .L294+4
 7430 002a 1B78     		ldrb	r3, [r3]
 7431 002c DBB2     		uxtb	r3, r3
 7432 002e 002B     		cmp	r3, #0
 7433 0030 09D0     		beq	.L293
 7434              		.loc 1 1708 0 is_stmt 0 discriminator 1
 7435 0032 FFF7FEFF 		bl	USB_VBusPresent
 7436 0036 0346     		mov	r3, r0
 7437 0038 002B     		cmp	r3, #0
 7438 003a 04D0     		beq	.L293
1709:main.c        ****     {
1710:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7439              		.loc 1 1710 0 is_stmt 1
 7440 003c 0022     		movs	r2, #0
 7441 003e 0749     		ldr	r1, .L294
 7442 0040 0320     		movs	r0, #3
 7443 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7444              	.L293:
1711:main.c        ****     } 
1712:main.c        ****     midiSent += 4;
 7445              		.loc 1 1712 0
 7446 0046 074B     		ldr	r3, .L294+8
 7447 0048 1B88     		ldrh	r3, [r3]
 7448 004a 0433     		adds	r3, r3, #4
 7449 004c 9AB2     		uxth	r2, r3
 7450 004e 054B     		ldr	r3, .L294+8
 7451 0050 1A80     		strh	r2, [r3]	@ movhi
1713:main.c        **** }
 7452              		.loc 1 1713 0
 7453 0052 00BF     		nop
 7454 0054 1037     		adds	r7, r7, #16
 7455              		.cfi_def_cfa_offset 8
 7456 0056 BD46     		mov	sp, r7
 7457              		.cfi_def_cfa_register 13
 7458              		@ sp needed
 7459 0058 80BD     		pop	{r7, pc}
 7460              	.L295:
 7461 005a 00BF     		.align	2
 7462              	.L294:
 7463 005c 00000000 		.word	midiMsg
 7464 0060 00000000 		.word	USB_active
 7465 0064 00000000 		.word	midiSent
 7466              		.cfi_endproc
 7467              	.LFE86:
 7468              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 7469              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 164


 7470              		.align	2
 7471              		.global	sendMIDIPolyKeyPressure
 7472              		.thumb
 7473              		.thumb_func
 7474              		.type	sendMIDIPolyKeyPressure, %function
 7475              	sendMIDIPolyKeyPressure:
 7476              	.LFB87:
1714:main.c        **** 
1715:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1716:main.c        **** {
 7477              		.loc 1 1716 0
 7478              		.cfi_startproc
 7479              		@ args = 0, pretend = 0, frame = 16
 7480              		@ frame_needed = 1, uses_anonymous_args = 0
 7481 0000 80B5     		push	{r7, lr}
 7482              		.cfi_def_cfa_offset 8
 7483              		.cfi_offset 7, -8
 7484              		.cfi_offset 14, -4
 7485 0002 84B0     		sub	sp, sp, #16
 7486              		.cfi_def_cfa_offset 24
 7487 0004 00AF     		add	r7, sp, #0
 7488              		.cfi_def_cfa_register 7
 7489 0006 F860     		str	r0, [r7, #12]
 7490 0008 B960     		str	r1, [r7, #8]
 7491 000a 7A60     		str	r2, [r7, #4]
1717:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 7492              		.loc 1 1717 0
 7493 000c 7B68     		ldr	r3, [r7, #4]
 7494 000e DBB2     		uxtb	r3, r3
 7495 0010 603B     		subs	r3, r3, #96
 7496 0012 DAB2     		uxtb	r2, r3
 7497 0014 114B     		ldr	r3, .L298
 7498 0016 1A70     		strb	r2, [r3]
1718:main.c        ****     midiMsg[1] = MIDInoteNum;
 7499              		.loc 1 1718 0
 7500 0018 FB68     		ldr	r3, [r7, #12]
 7501 001a DAB2     		uxtb	r2, r3
 7502 001c 0F4B     		ldr	r3, .L298
 7503 001e 5A70     		strb	r2, [r3, #1]
1719:main.c        ****     midiMsg[2] = pressure;		
 7504              		.loc 1 1719 0
 7505 0020 BB68     		ldr	r3, [r7, #8]
 7506 0022 DAB2     		uxtb	r2, r3
 7507 0024 0D4B     		ldr	r3, .L298
 7508 0026 9A70     		strb	r2, [r3, #2]
1720:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7509              		.loc 1 1720 0
 7510 0028 0D4B     		ldr	r3, .L298+4
 7511 002a 1B78     		ldrb	r3, [r3]
 7512 002c DBB2     		uxtb	r3, r3
 7513 002e 002B     		cmp	r3, #0
 7514 0030 09D0     		beq	.L297
 7515              		.loc 1 1720 0 is_stmt 0 discriminator 1
 7516 0032 FFF7FEFF 		bl	USB_VBusPresent
 7517 0036 0346     		mov	r3, r0
 7518 0038 002B     		cmp	r3, #0
 7519 003a 04D0     		beq	.L297
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 165


1721:main.c        ****     {
1722:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7520              		.loc 1 1722 0 is_stmt 1
 7521 003c 0022     		movs	r2, #0
 7522 003e 0749     		ldr	r1, .L298
 7523 0040 0320     		movs	r0, #3
 7524 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7525              	.L297:
1723:main.c        ****     } 
1724:main.c        ****     midiSent += 4;
 7526              		.loc 1 1724 0
 7527 0046 074B     		ldr	r3, .L298+8
 7528 0048 1B88     		ldrh	r3, [r3]
 7529 004a 0433     		adds	r3, r3, #4
 7530 004c 9AB2     		uxth	r2, r3
 7531 004e 054B     		ldr	r3, .L298+8
 7532 0050 1A80     		strh	r2, [r3]	@ movhi
1725:main.c        **** }
 7533              		.loc 1 1725 0
 7534 0052 00BF     		nop
 7535 0054 1037     		adds	r7, r7, #16
 7536              		.cfi_def_cfa_offset 8
 7537 0056 BD46     		mov	sp, r7
 7538              		.cfi_def_cfa_register 13
 7539              		@ sp needed
 7540 0058 80BD     		pop	{r7, pc}
 7541              	.L299:
 7542 005a 00BF     		.align	2
 7543              	.L298:
 7544 005c 00000000 		.word	midiMsg
 7545 0060 00000000 		.word	USB_active
 7546 0064 00000000 		.word	midiSent
 7547              		.cfi_endproc
 7548              	.LFE87:
 7549              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 7550              		.section	.text.sendMIDIControlChange,"ax",%progbits
 7551              		.align	2
 7552              		.global	sendMIDIControlChange
 7553              		.thumb
 7554              		.thumb_func
 7555              		.type	sendMIDIControlChange, %function
 7556              	sendMIDIControlChange:
 7557              	.LFB88:
1726:main.c        **** 
1727:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1728:main.c        **** {
 7558              		.loc 1 1728 0
 7559              		.cfi_startproc
 7560              		@ args = 0, pretend = 0, frame = 16
 7561              		@ frame_needed = 1, uses_anonymous_args = 0
 7562 0000 80B5     		push	{r7, lr}
 7563              		.cfi_def_cfa_offset 8
 7564              		.cfi_offset 7, -8
 7565              		.cfi_offset 14, -4
 7566 0002 84B0     		sub	sp, sp, #16
 7567              		.cfi_def_cfa_offset 24
 7568 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 166


 7569              		.cfi_def_cfa_register 7
 7570 0006 F860     		str	r0, [r7, #12]
 7571 0008 B960     		str	r1, [r7, #8]
 7572 000a 7A60     		str	r2, [r7, #4]
1729:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 7573              		.loc 1 1729 0
 7574 000c 7B68     		ldr	r3, [r7, #4]
 7575 000e DBB2     		uxtb	r3, r3
 7576 0010 503B     		subs	r3, r3, #80
 7577 0012 DAB2     		uxtb	r2, r3
 7578 0014 114B     		ldr	r3, .L302
 7579 0016 1A70     		strb	r2, [r3]
1730:main.c        ****     midiMsg[1] = CCnum;
 7580              		.loc 1 1730 0
 7581 0018 FB68     		ldr	r3, [r7, #12]
 7582 001a DAB2     		uxtb	r2, r3
 7583 001c 0F4B     		ldr	r3, .L302
 7584 001e 5A70     		strb	r2, [r3, #1]
1731:main.c        ****     midiMsg[2] = CCval;			
 7585              		.loc 1 1731 0
 7586 0020 BB68     		ldr	r3, [r7, #8]
 7587 0022 DAB2     		uxtb	r2, r3
 7588 0024 0D4B     		ldr	r3, .L302
 7589 0026 9A70     		strb	r2, [r3, #2]
1732:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7590              		.loc 1 1732 0
 7591 0028 0D4B     		ldr	r3, .L302+4
 7592 002a 1B78     		ldrb	r3, [r3]
 7593 002c DBB2     		uxtb	r3, r3
 7594 002e 002B     		cmp	r3, #0
 7595 0030 09D0     		beq	.L301
 7596              		.loc 1 1732 0 is_stmt 0 discriminator 1
 7597 0032 FFF7FEFF 		bl	USB_VBusPresent
 7598 0036 0346     		mov	r3, r0
 7599 0038 002B     		cmp	r3, #0
 7600 003a 04D0     		beq	.L301
1733:main.c        ****     {
1734:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7601              		.loc 1 1734 0 is_stmt 1
 7602 003c 0022     		movs	r2, #0
 7603 003e 0749     		ldr	r1, .L302
 7604 0040 0320     		movs	r0, #3
 7605 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7606              	.L301:
1735:main.c        ****     } 
1736:main.c        ****     midiSent += 4;
 7607              		.loc 1 1736 0
 7608 0046 074B     		ldr	r3, .L302+8
 7609 0048 1B88     		ldrh	r3, [r3]
 7610 004a 0433     		adds	r3, r3, #4
 7611 004c 9AB2     		uxth	r2, r3
 7612 004e 054B     		ldr	r3, .L302+8
 7613 0050 1A80     		strh	r2, [r3]	@ movhi
1737:main.c        **** }
 7614              		.loc 1 1737 0
 7615 0052 00BF     		nop
 7616 0054 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 167


 7617              		.cfi_def_cfa_offset 8
 7618 0056 BD46     		mov	sp, r7
 7619              		.cfi_def_cfa_register 13
 7620              		@ sp needed
 7621 0058 80BD     		pop	{r7, pc}
 7622              	.L303:
 7623 005a 00BF     		.align	2
 7624              	.L302:
 7625 005c 00000000 		.word	midiMsg
 7626 0060 00000000 		.word	USB_active
 7627 0064 00000000 		.word	midiSent
 7628              		.cfi_endproc
 7629              	.LFE88:
 7630              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 7631              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 7632              		.align	2
 7633              		.global	sendMIDIPitchBend
 7634              		.thumb
 7635              		.thumb_func
 7636              		.type	sendMIDIPitchBend, %function
 7637              	sendMIDIPitchBend:
 7638              	.LFB89:
1738:main.c        **** 
1739:main.c        **** void sendMIDIPitchBend(int val, int channel)
1740:main.c        **** {
 7639              		.loc 1 1740 0
 7640              		.cfi_startproc
 7641              		@ args = 0, pretend = 0, frame = 8
 7642              		@ frame_needed = 1, uses_anonymous_args = 0
 7643 0000 80B5     		push	{r7, lr}
 7644              		.cfi_def_cfa_offset 8
 7645              		.cfi_offset 7, -8
 7646              		.cfi_offset 14, -4
 7647 0002 82B0     		sub	sp, sp, #8
 7648              		.cfi_def_cfa_offset 16
 7649 0004 00AF     		add	r7, sp, #0
 7650              		.cfi_def_cfa_register 7
 7651 0006 7860     		str	r0, [r7, #4]
 7652 0008 3960     		str	r1, [r7]
1741:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 7653              		.loc 1 1741 0
 7654 000a 3B68     		ldr	r3, [r7]
 7655 000c DBB2     		uxtb	r3, r3
 7656 000e 203B     		subs	r3, r3, #32
 7657 0010 DAB2     		uxtb	r2, r3
 7658 0012 134B     		ldr	r3, .L306
 7659 0014 1A70     		strb	r2, [r3]
1742:main.c        ****     midiMsg[1] = (val & 127); //LSB
 7660              		.loc 1 1742 0
 7661 0016 7B68     		ldr	r3, [r7, #4]
 7662 0018 DBB2     		uxtb	r3, r3
 7663 001a 03F07F03 		and	r3, r3, #127
 7664 001e DAB2     		uxtb	r2, r3
 7665 0020 0F4B     		ldr	r3, .L306
 7666 0022 5A70     		strb	r2, [r3, #1]
1743:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 7667              		.loc 1 1743 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 168


 7668 0024 7B68     		ldr	r3, [r7, #4]
 7669 0026 DB11     		asrs	r3, r3, #7
 7670 0028 DAB2     		uxtb	r2, r3
 7671 002a 0D4B     		ldr	r3, .L306
 7672 002c 9A70     		strb	r2, [r3, #2]
1744:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7673              		.loc 1 1744 0
 7674 002e 0D4B     		ldr	r3, .L306+4
 7675 0030 1B78     		ldrb	r3, [r3]
 7676 0032 DBB2     		uxtb	r3, r3
 7677 0034 002B     		cmp	r3, #0
 7678 0036 09D0     		beq	.L305
 7679              		.loc 1 1744 0 is_stmt 0 discriminator 1
 7680 0038 FFF7FEFF 		bl	USB_VBusPresent
 7681 003c 0346     		mov	r3, r0
 7682 003e 002B     		cmp	r3, #0
 7683 0040 04D0     		beq	.L305
1745:main.c        ****     {
1746:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7684              		.loc 1 1746 0 is_stmt 1
 7685 0042 0022     		movs	r2, #0
 7686 0044 0649     		ldr	r1, .L306
 7687 0046 0320     		movs	r0, #3
 7688 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7689              	.L305:
1747:main.c        ****     } 
1748:main.c        ****     midiSent += 4;
 7690              		.loc 1 1748 0
 7691 004c 064B     		ldr	r3, .L306+8
 7692 004e 1B88     		ldrh	r3, [r3]
 7693 0050 0433     		adds	r3, r3, #4
 7694 0052 9AB2     		uxth	r2, r3
 7695 0054 044B     		ldr	r3, .L306+8
 7696 0056 1A80     		strh	r2, [r3]	@ movhi
1749:main.c        **** }
 7697              		.loc 1 1749 0
 7698 0058 00BF     		nop
 7699 005a 0837     		adds	r7, r7, #8
 7700              		.cfi_def_cfa_offset 8
 7701 005c BD46     		mov	sp, r7
 7702              		.cfi_def_cfa_register 13
 7703              		@ sp needed
 7704 005e 80BD     		pop	{r7, pc}
 7705              	.L307:
 7706              		.align	2
 7707              	.L306:
 7708 0060 00000000 		.word	midiMsg
 7709 0064 00000000 		.word	USB_active
 7710 0068 00000000 		.word	midiSent
 7711              		.cfi_endproc
 7712              	.LFE89:
 7713              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 7714              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 7715              		.align	2
 7716              		.global	sendMIDIAllNotesOff
 7717              		.thumb
 7718              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 169


 7719              		.type	sendMIDIAllNotesOff, %function
 7720              	sendMIDIAllNotesOff:
 7721              	.LFB90:
1750:main.c        **** 
1751:main.c        **** void sendMIDIAllNotesOff(void)
1752:main.c        **** {   
 7722              		.loc 1 1752 0
 7723              		.cfi_startproc
 7724              		@ args = 0, pretend = 0, frame = 8
 7725              		@ frame_needed = 1, uses_anonymous_args = 0
 7726 0000 80B5     		push	{r7, lr}
 7727              		.cfi_def_cfa_offset 8
 7728              		.cfi_offset 7, -8
 7729              		.cfi_offset 14, -4
 7730 0002 82B0     		sub	sp, sp, #8
 7731              		.cfi_def_cfa_offset 16
 7732 0004 00AF     		add	r7, sp, #0
 7733              		.cfi_def_cfa_register 7
 7734              	.LBB48:
1753:main.c        ****     for (uint8_t i = 0; i < 128; i++)
 7735              		.loc 1 1753 0
 7736 0006 0023     		movs	r3, #0
 7737 0008 FB71     		strb	r3, [r7, #7]
 7738 000a 1AE0     		b	.L309
 7739              	.L311:
1754:main.c        ****     {
1755:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 7740              		.loc 1 1755 0
 7741 000c 114B     		ldr	r3, .L312
 7742 000e 9022     		movs	r2, #144
 7743 0010 1A70     		strb	r2, [r3]
1756:main.c        ****         midiMsg[1] = i;
 7744              		.loc 1 1756 0
 7745 0012 104A     		ldr	r2, .L312
 7746 0014 FB79     		ldrb	r3, [r7, #7]
 7747 0016 5370     		strb	r3, [r2, #1]
1757:main.c        ****         midiMsg[2] = 0;	
 7748              		.loc 1 1757 0
 7749 0018 0E4B     		ldr	r3, .L312
 7750 001a 0022     		movs	r2, #0
 7751 001c 9A70     		strb	r2, [r3, #2]
1758:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7752              		.loc 1 1758 0
 7753 001e 0E4B     		ldr	r3, .L312+4
 7754 0020 1B78     		ldrb	r3, [r3]
 7755 0022 DBB2     		uxtb	r3, r3
 7756 0024 002B     		cmp	r3, #0
 7757 0026 09D0     		beq	.L310
 7758              		.loc 1 1758 0 is_stmt 0 discriminator 1
 7759 0028 FFF7FEFF 		bl	USB_VBusPresent
 7760 002c 0346     		mov	r3, r0
 7761 002e 002B     		cmp	r3, #0
 7762 0030 04D0     		beq	.L310
1759:main.c        ****         {       
1760:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7763              		.loc 1 1760 0 is_stmt 1
 7764 0032 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 170


 7765 0034 0749     		ldr	r1, .L312
 7766 0036 0320     		movs	r0, #3
 7767 0038 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7768              	.L310:
1753:main.c        ****     {
 7769              		.loc 1 1753 0 discriminator 2
 7770 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7771 003e 0133     		adds	r3, r3, #1
 7772 0040 FB71     		strb	r3, [r7, #7]
 7773              	.L309:
1753:main.c        ****     {
 7774              		.loc 1 1753 0 is_stmt 0 discriminator 1
 7775 0042 97F90730 		ldrsb	r3, [r7, #7]
 7776 0046 002B     		cmp	r3, #0
 7777 0048 E0DA     		bge	.L311
 7778              	.LBE48:
1761:main.c        ****         }
1762:main.c        ****     }
1763:main.c        **** }
 7779              		.loc 1 1763 0 is_stmt 1
 7780 004a 00BF     		nop
 7781 004c 0837     		adds	r7, r7, #8
 7782              		.cfi_def_cfa_offset 8
 7783 004e BD46     		mov	sp, r7
 7784              		.cfi_def_cfa_register 13
 7785              		@ sp needed
 7786 0050 80BD     		pop	{r7, pc}
 7787              	.L313:
 7788 0052 00BF     		.align	2
 7789              	.L312:
 7790 0054 00000000 		.word	midiMsg
 7791 0058 00000000 		.word	USB_active
 7792              		.cfi_endproc
 7793              	.LFE90:
 7794              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 7795              		.global	checkStatus
 7796              		.bss
 7797              		.type	checkStatus, %object
 7798              		.size	checkStatus, 1
 7799              	checkStatus:
 7800 00fc 00       		.space	1
 7801              		.global	checkBase
 7802 00fd 00       		.align	1
 7803              		.type	checkBase, %object
 7804              		.size	checkBase, 2
 7805              	checkBase:
 7806 00fe 0000     		.space	2
 7807              		.global	SPI_errors
 7808              		.align	2
 7809              		.type	SPI_errors, %object
 7810              		.size	SPI_errors, 4
 7811              	SPI_errors:
 7812 0100 00000000 		.space	4
 7813              		.global	__aeabi_fcmplt
 7814              		.section	.text.parseSysex,"ax",%progbits
 7815              		.align	2
 7816              		.global	parseSysex
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 171


 7817              		.thumb
 7818              		.thumb_func
 7819              		.type	parseSysex, %function
 7820              	parseSysex:
 7821              	.LFB91:
1764:main.c        **** 
1765:main.c        **** 
1766:main.c        **** 
1767:main.c        **** 
1768:main.c        **** volatile uint8_t checkStatus = 0;
1769:main.c        **** volatile uint16_t checkBase = 0;
1770:main.c        **** 
1771:main.c        **** 
1772:main.c        **** 
1773:main.c        **** int SPI_errors = 0;
1774:main.c        **** 
1775:main.c        **** void parseSysex(void)
1776:main.c        **** {
 7822              		.loc 1 1776 0
 7823              		.cfi_startproc
 7824              		@ args = 0, pretend = 0, frame = 88
 7825              		@ frame_needed = 1, uses_anonymous_args = 0
 7826 0000 90B5     		push	{r4, r7, lr}
 7827              		.cfi_def_cfa_offset 12
 7828              		.cfi_offset 4, -12
 7829              		.cfi_offset 7, -8
 7830              		.cfi_offset 14, -4
 7831 0002 97B0     		sub	sp, sp, #92
 7832              		.cfi_def_cfa_offset 104
 7833 0004 00AF     		add	r7, sp, #0
 7834              		.cfi_def_cfa_register 7
1777:main.c        ****     parsingSysex = 1;
 7835              		.loc 1 1777 0
 7836 0006 954B     		ldr	r3, .L371
 7837 0008 0122     		movs	r2, #1
 7838 000a 1A70     		strb	r2, [r3]
1778:main.c        ****     //0 = it's a preset
1779:main.c        ****     if (sysexBuffer[0] == 0)
 7839              		.loc 1 1779 0
 7840 000c 944B     		ldr	r3, .L371+4
 7841 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7842 0010 002B     		cmp	r3, #0
 7843 0012 40F01883 		bne	.L315
 7844              	.LBB49:
1780:main.c        ****     {
1781:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7845              		.loc 1 1781 0
 7846 0016 934B     		ldr	r3, .L371+8
 7847 0018 0122     		movs	r2, #1
 7848 001a 1A70     		strb	r2, [r3]
1782:main.c        ****         currentFloat = 0;
 7849              		.loc 1 1782 0
 7850 001c 924B     		ldr	r3, .L371+12
 7851 001e 0022     		movs	r2, #0
 7852 0020 1A60     		str	r2, [r3]
1783:main.c        ****         presetArraySection = presetName;
 7853              		.loc 1 1783 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 172


 7854 0022 924B     		ldr	r3, .L371+16
 7855 0024 0022     		movs	r2, #0
 7856 0026 1A70     		strb	r2, [r3]
1784:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 7857              		.loc 1 1784 0
 7858 0028 8D4B     		ldr	r3, .L371+4
 7859 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7860 002c 904B     		ldr	r3, .L371+20
 7861 002e 1A70     		strb	r2, [r3]
1785:main.c        ****         presetArray[0] = sysexBuffer[2];
 7862              		.loc 1 1785 0
 7863 0030 8B4B     		ldr	r3, .L371+4
 7864 0032 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 7865 0034 8F4B     		ldr	r3, .L371+24
 7866 0036 1A70     		strb	r2, [r3]
1786:main.c        ****         presetArray[1] = sysexBuffer[3];
 7867              		.loc 1 1786 0
 7868 0038 894B     		ldr	r3, .L371+4
 7869 003a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 7870 003c 8D4B     		ldr	r3, .L371+24
 7871 003e 5A70     		strb	r2, [r3, #1]
1787:main.c        ****         presetArray[2] = sysexBuffer[4];
 7872              		.loc 1 1787 0
 7873 0040 874B     		ldr	r3, .L371+4
 7874 0042 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 7875 0044 8B4B     		ldr	r3, .L371+24
 7876 0046 9A70     		strb	r2, [r3, #2]
1788:main.c        ****         presetArray[3] = sysexBuffer[5];
 7877              		.loc 1 1788 0
 7878 0048 854B     		ldr	r3, .L371+4
 7879 004a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 7880 004c 894B     		ldr	r3, .L371+24
 7881 004e DA70     		strb	r2, [r3, #3]
1789:main.c        ****         
1790:main.c        ****         union breakFloat theVal;
1791:main.c        ****         uint32_t i = 6;
 7882              		.loc 1 1791 0
 7883 0050 0623     		movs	r3, #6
 7884 0052 7B65     		str	r3, [r7, #84]
1792:main.c        ****         uint8_t stoppingPoint = PRESET_NAME_LENGTH_IN_BYTES+6;
 7885              		.loc 1 1792 0
 7886 0054 1423     		movs	r3, #20
 7887 0056 87F83730 		strb	r3, [r7, #55]
1793:main.c        ****         for (; i < stoppingPoint; i++)
 7888              		.loc 1 1793 0
 7889 005a 22E0     		b	.L316
 7890              	.L317:
1794:main.c        ****         {
1795:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 7891              		.loc 1 1795 0 discriminator 2
 7892 005c 7B6D     		ldr	r3, [r7, #84]
 7893 005e 023B     		subs	r3, r3, #2
 7894 0060 7F49     		ldr	r1, .L371+4
 7895 0062 7A6D     		ldr	r2, [r7, #84]
 7896 0064 0A44     		add	r2, r2, r1
 7897 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7898 0068 02F07F02 		and	r2, r2, #127
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 173


 7899 006c D1B2     		uxtb	r1, r2
 7900 006e 814A     		ldr	r2, .L371+24
 7901 0070 D154     		strb	r1, [r2, r3]
1796:main.c        ****             presetNamesArray[presetNumberToWrite][i-6] = sysexBuffer[i] & 127;
 7902              		.loc 1 1796 0 discriminator 2
 7903 0072 7F4B     		ldr	r3, .L371+20
 7904 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7905 0076 1846     		mov	r0, r3
 7906 0078 7B6D     		ldr	r3, [r7, #84]
 7907 007a 9A1F     		subs	r2, r3, #6
 7908 007c 7849     		ldr	r1, .L371+4
 7909 007e 7B6D     		ldr	r3, [r7, #84]
 7910 0080 0B44     		add	r3, r3, r1
 7911 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7912 0084 03F07F03 		and	r3, r3, #127
 7913 0088 DCB2     		uxtb	r4, r3
 7914 008a 7B49     		ldr	r1, .L371+28
 7915 008c 0346     		mov	r3, r0
 7916 008e DB00     		lsls	r3, r3, #3
 7917 0090 1B1A     		subs	r3, r3, r0
 7918 0092 5B00     		lsls	r3, r3, #1
 7919 0094 0B44     		add	r3, r3, r1
 7920 0096 1344     		add	r3, r3, r2
 7921 0098 2246     		mov	r2, r4
 7922 009a 1A70     		strb	r2, [r3]
1793:main.c        ****         for (; i < stoppingPoint; i++)
 7923              		.loc 1 1793 0 discriminator 2
 7924 009c 7B6D     		ldr	r3, [r7, #84]
 7925 009e 0133     		adds	r3, r3, #1
 7926 00a0 7B65     		str	r3, [r7, #84]
 7927              	.L316:
1793:main.c        ****         for (; i < stoppingPoint; i++)
 7928              		.loc 1 1793 0 is_stmt 0 discriminator 1
 7929 00a2 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 7930 00a6 7B6D     		ldr	r3, [r7, #84]
 7931 00a8 9A42     		cmp	r2, r3
 7932 00aa D7D8     		bhi	.L317
1797:main.c        ****         }
1798:main.c        ****         
1799:main.c        ****         presetArraySection = macroNames;
 7933              		.loc 1 1799 0 is_stmt 1
 7934 00ac 6F4B     		ldr	r3, .L371+16
 7935 00ae 0122     		movs	r2, #1
 7936 00b0 1A70     		strb	r2, [r3]
 7937              	.LBB50:
1800:main.c        **** 
1801:main.c        ****         
1802:main.c        ****         for (int j = 0; j < (NUM_MACROS); j++)
 7938              		.loc 1 1802 0
 7939 00b2 0023     		movs	r3, #0
 7940 00b4 3B65     		str	r3, [r7, #80]
 7941 00b6 32E0     		b	.L318
 7942              	.L321:
 7943              	.LBB51:
1803:main.c        ****         {
1804:main.c        ****             for (int k = 0; k < MACRO_NAME_LENGTH_IN_BYTES; k++)
 7944              		.loc 1 1804 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 174


 7945 00b8 0023     		movs	r3, #0
 7946 00ba FB64     		str	r3, [r7, #76]
 7947 00bc 29E0     		b	.L319
 7948              	.L320:
1805:main.c        ****             {
1806:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 7949              		.loc 1 1806 0 discriminator 3
 7950 00be 7B6D     		ldr	r3, [r7, #84]
 7951 00c0 023B     		subs	r3, r3, #2
 7952 00c2 6749     		ldr	r1, .L371+4
 7953 00c4 7A6D     		ldr	r2, [r7, #84]
 7954 00c6 0A44     		add	r2, r2, r1
 7955 00c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7956 00ca 02F07F02 		and	r2, r2, #127
 7957 00ce D1B2     		uxtb	r1, r2
 7958 00d0 684A     		ldr	r2, .L371+24
 7959 00d2 D154     		strb	r1, [r2, r3]
1807:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 7960              		.loc 1 1807 0 discriminator 3
 7961 00d4 664B     		ldr	r3, .L371+20
 7962 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7963 00d8 1846     		mov	r0, r3
 7964 00da 614A     		ldr	r2, .L371+4
 7965 00dc 7B6D     		ldr	r3, [r7, #84]
 7966 00de 1344     		add	r3, r3, r2
 7967 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7968 00e2 03F07F03 		and	r3, r3, #127
 7969 00e6 DCB2     		uxtb	r4, r3
 7970 00e8 6449     		ldr	r1, .L371+32
 7971 00ea 3B6D     		ldr	r3, [r7, #80]
 7972 00ec 1A46     		mov	r2, r3
 7973 00ee D200     		lsls	r2, r2, #3
 7974 00f0 1A44     		add	r2, r2, r3
 7975 00f2 0346     		mov	r3, r0
 7976 00f4 DB00     		lsls	r3, r3, #3
 7977 00f6 0344     		add	r3, r3, r0
 7978 00f8 1B01     		lsls	r3, r3, #4
 7979 00fa 1344     		add	r3, r3, r2
 7980 00fc CA18     		adds	r2, r1, r3
 7981 00fe FB6C     		ldr	r3, [r7, #76]
 7982 0100 1344     		add	r3, r3, r2
 7983 0102 2246     		mov	r2, r4
 7984 0104 1A70     		strb	r2, [r3]
1808:main.c        ****                 i++;
 7985              		.loc 1 1808 0 discriminator 3
 7986 0106 7B6D     		ldr	r3, [r7, #84]
 7987 0108 0133     		adds	r3, r3, #1
 7988 010a 7B65     		str	r3, [r7, #84]
1804:main.c        ****             {
 7989              		.loc 1 1804 0 discriminator 3
 7990 010c FB6C     		ldr	r3, [r7, #76]
 7991 010e 0133     		adds	r3, r3, #1
 7992 0110 FB64     		str	r3, [r7, #76]
 7993              	.L319:
1804:main.c        ****             {
 7994              		.loc 1 1804 0 is_stmt 0 discriminator 1
 7995 0112 FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 175


 7996 0114 082B     		cmp	r3, #8
 7997 0116 D2DD     		ble	.L320
 7998              	.LBE51:
1802:main.c        ****         {
 7999              		.loc 1 1802 0 is_stmt 1 discriminator 2
 8000 0118 3B6D     		ldr	r3, [r7, #80]
 8001 011a 0133     		adds	r3, r3, #1
 8002 011c 3B65     		str	r3, [r7, #80]
 8003              	.L318:
1802:main.c        ****         {
 8004              		.loc 1 1802 0 is_stmt 0 discriminator 1
 8005 011e 3B6D     		ldr	r3, [r7, #80]
 8006 0120 072B     		cmp	r3, #7
 8007 0122 C9DD     		ble	.L321
 8008              	.LBE50:
 8009              	.LBB52:
1809:main.c        ****             }
1810:main.c        ****         }
1811:main.c        ****         for (int j = 0; j < NUM_CONTROLS; j++)
 8010              		.loc 1 1811 0 is_stmt 1
 8011 0124 0023     		movs	r3, #0
 8012 0126 BB64     		str	r3, [r7, #72]
 8013 0128 34E0     		b	.L322
 8014              	.L325:
 8015              	.LBB53:
1812:main.c        ****         {
1813:main.c        ****             for (int k = 0; k < CONTROL_NAME_LENGTH_IN_BYTES; k++)
 8016              		.loc 1 1813 0
 8017 012a 0023     		movs	r3, #0
 8018 012c 7B64     		str	r3, [r7, #68]
 8019 012e 2BE0     		b	.L323
 8020              	.L324:
1814:main.c        ****             {
1815:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 8021              		.loc 1 1815 0 discriminator 3
 8022 0130 7B6D     		ldr	r3, [r7, #84]
 8023 0132 023B     		subs	r3, r3, #2
 8024 0134 4A49     		ldr	r1, .L371+4
 8025 0136 7A6D     		ldr	r2, [r7, #84]
 8026 0138 0A44     		add	r2, r2, r1
 8027 013a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8028 013c 02F07F02 		and	r2, r2, #127
 8029 0140 D1B2     		uxtb	r1, r2
 8030 0142 4C4A     		ldr	r2, .L371+24
 8031 0144 D154     		strb	r1, [r2, r3]
1816:main.c        ****                 controlNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the
 8032              		.loc 1 1816 0 discriminator 3
 8033 0146 4A4B     		ldr	r3, .L371+20
 8034 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8035 014a 1846     		mov	r0, r3
 8036 014c 444A     		ldr	r2, .L371+4
 8037 014e 7B6D     		ldr	r3, [r7, #84]
 8038 0150 1344     		add	r3, r3, r2
 8039 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8040 0154 03F07F03 		and	r3, r3, #127
 8041 0158 DCB2     		uxtb	r4, r3
 8042 015a 4949     		ldr	r1, .L371+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 176


 8043 015c BB6C     		ldr	r3, [r7, #72]
 8044 015e 1A46     		mov	r2, r3
 8045 0160 9200     		lsls	r2, r2, #2
 8046 0162 1A44     		add	r2, r2, r3
 8047 0164 5300     		lsls	r3, r2, #1
 8048 0166 1A46     		mov	r2, r3
 8049 0168 0346     		mov	r3, r0
 8050 016a 9B00     		lsls	r3, r3, #2
 8051 016c 0344     		add	r3, r3, r0
 8052 016e DB00     		lsls	r3, r3, #3
 8053 0170 1344     		add	r3, r3, r2
 8054 0172 CA18     		adds	r2, r1, r3
 8055 0174 7B6C     		ldr	r3, [r7, #68]
 8056 0176 1344     		add	r3, r3, r2
 8057 0178 2246     		mov	r2, r4
 8058 017a 1A70     		strb	r2, [r3]
1817:main.c        ****                 i++;
 8059              		.loc 1 1817 0 discriminator 3
 8060 017c 7B6D     		ldr	r3, [r7, #84]
 8061 017e 0133     		adds	r3, r3, #1
 8062 0180 7B65     		str	r3, [r7, #84]
1813:main.c        ****             {
 8063              		.loc 1 1813 0 discriminator 3
 8064 0182 7B6C     		ldr	r3, [r7, #68]
 8065 0184 0133     		adds	r3, r3, #1
 8066 0186 7B64     		str	r3, [r7, #68]
 8067              	.L323:
1813:main.c        ****             {
 8068              		.loc 1 1813 0 is_stmt 0 discriminator 1
 8069 0188 7B6C     		ldr	r3, [r7, #68]
 8070 018a 092B     		cmp	r3, #9
 8071 018c D0DD     		ble	.L324
 8072              	.LBE53:
1811:main.c        ****         {
 8073              		.loc 1 1811 0 is_stmt 1 discriminator 2
 8074 018e BB6C     		ldr	r3, [r7, #72]
 8075 0190 0133     		adds	r3, r3, #1
 8076 0192 BB64     		str	r3, [r7, #72]
 8077              	.L322:
1811:main.c        ****         {
 8078              		.loc 1 1811 0 is_stmt 0 discriminator 1
 8079 0194 BB6C     		ldr	r3, [r7, #72]
 8080 0196 032B     		cmp	r3, #3
 8081 0198 C7DD     		ble	.L325
 8082              	.LBE52:
1818:main.c        ****             }
1819:main.c        ****         }
1820:main.c        ****         
1821:main.c        ****         uint16_t valsStart = 4 + PRESET_NAME_LENGTH_IN_BYTES + (MACRO_NAME_LENGTH_IN_BYTES * NUM_MA
 8083              		.loc 1 1821 0 is_stmt 1
 8084 019a 8223     		movs	r3, #130
 8085 019c BB86     		strh	r3, [r7, #52]	@ movhi
1822:main.c        ****         
1823:main.c        ****         presetArraySection = initialVals;
 8086              		.loc 1 1823 0
 8087 019e 334B     		ldr	r3, .L371+16
 8088 01a0 0222     		movs	r2, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 177


 8089 01a2 1A70     		strb	r2, [r3]
1824:main.c        ****         
1825:main.c        ****         for (; i < sysexPointer; i = i+5)
 8090              		.loc 1 1825 0
 8091 01a4 48E2     		b	.L326
 8092              	.L348:
1826:main.c        ****         {
1827:main.c        ****             theVal.u32 = 0;
 8093              		.loc 1 1827 0
 8094 01a6 0023     		movs	r3, #0
 8095 01a8 3B61     		str	r3, [r7, #16]
1828:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8096              		.loc 1 1828 0
 8097 01aa 3B69     		ldr	r3, [r7, #16]
 8098 01ac 2C49     		ldr	r1, .L371+4
 8099 01ae 7A6D     		ldr	r2, [r7, #84]
 8100 01b0 0A44     		add	r2, r2, r1
 8101 01b2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8102 01b4 1207     		lsls	r2, r2, #28
 8103 01b6 1343     		orrs	r3, r3, r2
 8104 01b8 3B61     		str	r3, [r7, #16]
1829:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 8105              		.loc 1 1829 0
 8106 01ba 3B69     		ldr	r3, [r7, #16]
 8107 01bc 7A6D     		ldr	r2, [r7, #84]
 8108 01be 0132     		adds	r2, r2, #1
 8109 01c0 2749     		ldr	r1, .L371+4
 8110 01c2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8111 01c4 5205     		lsls	r2, r2, #21
 8112 01c6 1343     		orrs	r3, r3, r2
 8113 01c8 3B61     		str	r3, [r7, #16]
1830:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 8114              		.loc 1 1830 0
 8115 01ca 3B69     		ldr	r3, [r7, #16]
 8116 01cc 7A6D     		ldr	r2, [r7, #84]
 8117 01ce 0232     		adds	r2, r2, #2
 8118 01d0 2349     		ldr	r1, .L371+4
 8119 01d2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8120 01d4 9203     		lsls	r2, r2, #14
 8121 01d6 1343     		orrs	r3, r3, r2
 8122 01d8 3B61     		str	r3, [r7, #16]
1831:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 8123              		.loc 1 1831 0
 8124 01da 3B69     		ldr	r3, [r7, #16]
 8125 01dc 7A6D     		ldr	r2, [r7, #84]
 8126 01de 0332     		adds	r2, r2, #3
 8127 01e0 1F49     		ldr	r1, .L371+4
 8128 01e2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8129 01e4 D201     		lsls	r2, r2, #7
 8130 01e6 1343     		orrs	r3, r3, r2
 8131 01e8 3B61     		str	r3, [r7, #16]
1832:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 8132              		.loc 1 1832 0
 8133 01ea 3A69     		ldr	r2, [r7, #16]
 8134 01ec 7B6D     		ldr	r3, [r7, #84]
 8135 01ee 0433     		adds	r3, r3, #4
 8136 01f0 1B49     		ldr	r1, .L371+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 178


 8137 01f2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8138 01f4 03F07F03 		and	r3, r3, #127
 8139 01f8 1343     		orrs	r3, r3, r2
 8140 01fa 3B61     		str	r3, [r7, #16]
1833:main.c        ****             testVal = theVal.f;
 8141              		.loc 1 1833 0
 8142 01fc 3B69     		ldr	r3, [r7, #16]	@ float
 8143 01fe 214A     		ldr	r2, .L371+40
 8144 0200 1360     		str	r3, [r2]	@ float
1834:main.c        ****             if (presetArraySection == initialVals)
 8145              		.loc 1 1834 0
 8146 0202 1A4B     		ldr	r3, .L371+16
 8147 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8148 0206 022B     		cmp	r3, #2
 8149 0208 40F0B980 		bne	.L327
1835:main.c        ****             {
1836:main.c        **** 
1837:main.c        ****                 if (currentFloat == 0)
 8150              		.loc 1 1837 0
 8151 020c 164B     		ldr	r3, .L371+12
 8152 020e 1B68     		ldr	r3, [r3]
 8153 0210 002B     		cmp	r3, #0
 8154 0212 3BD1     		bne	.L328
1838:main.c        ****                 {
1839:main.c        ****                     valsCount = (uint16_t) theVal.f;
 8155              		.loc 1 1839 0
 8156 0214 3B69     		ldr	r3, [r7, #16]	@ float
 8157 0216 1846     		mov	r0, r3
 8158 0218 FFF7FEFF 		bl	__aeabi_f2uiz
 8159 021c 0346     		mov	r3, r0
 8160 021e 9AB2     		uxth	r2, r3
 8161 0220 194B     		ldr	r3, .L371+44
 8162 0222 1A80     		strh	r2, [r3]	@ movhi
1840:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 8163              		.loc 1 1840 0
 8164 0224 BA8E     		ldrh	r2, [r7, #52]
 8165 0226 104B     		ldr	r3, .L371+12
 8166 0228 1B68     		ldr	r3, [r3]
 8167 022a 591C     		adds	r1, r3, #1
 8168 022c 0E48     		ldr	r0, .L371+12
 8169 022e 0160     		str	r1, [r0]
 8170 0230 1344     		add	r3, r3, r2
 8171 0232 154A     		ldr	r2, .L371+44
 8172 0234 1288     		ldrh	r2, [r2]
 8173 0236 120A     		lsrs	r2, r2, #8
 8174 0238 92B2     		uxth	r2, r2
 8175 023a D1B2     		uxtb	r1, r2
 8176 023c 0D4A     		ldr	r2, .L371+24
 8177 023e D154     		strb	r1, [r2, r3]
1841:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 8178              		.loc 1 1841 0
 8179 0240 BA8E     		ldrh	r2, [r7, #52]
 8180 0242 094B     		ldr	r3, .L371+12
 8181 0244 1B68     		ldr	r3, [r3]
 8182 0246 591C     		adds	r1, r3, #1
 8183 0248 0748     		ldr	r0, .L371+12
 8184 024a 0160     		str	r1, [r0]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 179


 8185 024c 1344     		add	r3, r3, r2
 8186 024e 0E4A     		ldr	r2, .L371+44
 8187 0250 1288     		ldrh	r2, [r2]
 8188 0252 D1B2     		uxtb	r1, r2
 8189 0254 074A     		ldr	r2, .L371+24
 8190 0256 D154     		strb	r1, [r2, r3]
 8191 0258 EBE1     		b	.L334
 8192              	.L372:
 8193 025a 00BF     		.align	2
 8194              	.L371:
 8195 025c 00000000 		.word	parsingSysex
 8196 0260 00000000 		.word	sysexBuffer
 8197 0264 00000000 		.word	sysexMessageInProgress
 8198 0268 00000000 		.word	currentFloat
 8199 026c 00000000 		.word	presetArraySection
 8200 0270 00000000 		.word	presetNumberToWrite
 8201 0274 00000000 		.word	presetArray
 8202 0278 00000000 		.word	presetNamesArray
 8203 027c 00000000 		.word	macroNamesArray
 8204 0280 00000000 		.word	controlNamesArray
 8205 0284 00000000 		.word	testVal
 8206 0288 00000000 		.word	valsCount
 8207              	.L328:
1842:main.c        ****                 }
1843:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 8208              		.loc 1 1843 0
 8209 028c 8C4B     		ldr	r3, .L373
 8210 028e 1B88     		ldrh	r3, [r3]
 8211 0290 0133     		adds	r3, r3, #1
 8212 0292 5B00     		lsls	r3, r3, #1
 8213 0294 1A46     		mov	r2, r3
 8214 0296 8B4B     		ldr	r3, .L373+4
 8215 0298 1B68     		ldr	r3, [r3]
 8216 029a 9A42     		cmp	r2, r3
 8217 029c 23D9     		bls	.L330
 8218              	.LBB54:
1844:main.c        ****                 { 
1845:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 8219              		.loc 1 1845 0
 8220 029e 3B69     		ldr	r3, [r7, #16]	@ float
 8221 02a0 8949     		ldr	r1, .L373+8
 8222 02a2 1846     		mov	r0, r3
 8223 02a4 FFF7FEFF 		bl	__aeabi_fmul
 8224 02a8 0346     		mov	r3, r0
 8225 02aa 1846     		mov	r0, r3
 8226 02ac FFF7FEFF 		bl	__aeabi_f2uiz
 8227 02b0 0346     		mov	r3, r0
 8228 02b2 7B86     		strh	r3, [r7, #50]	@ movhi
1846:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 8229              		.loc 1 1846 0
 8230 02b4 BA8E     		ldrh	r2, [r7, #52]
 8231 02b6 834B     		ldr	r3, .L373+4
 8232 02b8 1B68     		ldr	r3, [r3]
 8233 02ba 591C     		adds	r1, r3, #1
 8234 02bc 8148     		ldr	r0, .L373+4
 8235 02be 0160     		str	r1, [r0]
 8236 02c0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 180


 8237 02c2 7A8E     		ldrh	r2, [r7, #50]
 8238 02c4 120A     		lsrs	r2, r2, #8
 8239 02c6 92B2     		uxth	r2, r2
 8240 02c8 D1B2     		uxtb	r1, r2
 8241 02ca 804A     		ldr	r2, .L373+12
 8242 02cc D154     		strb	r1, [r2, r3]
1847:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 8243              		.loc 1 1847 0
 8244 02ce BA8E     		ldrh	r2, [r7, #52]
 8245 02d0 7C4B     		ldr	r3, .L373+4
 8246 02d2 1B68     		ldr	r3, [r3]
 8247 02d4 591C     		adds	r1, r3, #1
 8248 02d6 7B48     		ldr	r0, .L373+4
 8249 02d8 0160     		str	r1, [r0]
 8250 02da 1344     		add	r3, r3, r2
 8251 02dc 7A8E     		ldrh	r2, [r7, #50]	@ movhi
 8252 02de D1B2     		uxtb	r1, r2
 8253 02e0 7A4A     		ldr	r2, .L373+12
 8254 02e2 D154     		strb	r1, [r2, r3]
 8255              	.LBE54:
 8256 02e4 A5E1     		b	.L334
 8257              	.L330:
1848:main.c        ****                 }
1849:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 8258              		.loc 1 1849 0
 8259 02e6 764B     		ldr	r3, .L373
 8260 02e8 1B88     		ldrh	r3, [r3]
 8261 02ea 0133     		adds	r3, r3, #1
 8262 02ec 5B00     		lsls	r3, r3, #1
 8263 02ee 1A46     		mov	r2, r3
 8264 02f0 744B     		ldr	r3, .L373+4
 8265 02f2 1B68     		ldr	r3, [r3]
 8266 02f4 9A42     		cmp	r2, r3
 8267 02f6 40F09C81 		bne	.L334
1850:main.c        ****                 {
1851:main.c        ****                     valCheck = theVal.f;
 8268              		.loc 1 1851 0
 8269 02fa 3B69     		ldr	r3, [r7, #16]	@ float
 8270 02fc 744A     		ldr	r2, .L373+16
 8271 02fe 1360     		str	r3, [r2]	@ float
1852:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 8272              		.loc 1 1852 0
 8273 0300 734B     		ldr	r3, .L373+16
 8274 0302 1B68     		ldr	r3, [r3]	@ float
 8275 0304 7349     		ldr	r1, .L373+20
 8276 0306 1846     		mov	r0, r3
 8277 0308 FFF7FEFF 		bl	__aeabi_fcmplt
 8278 030c 0346     		mov	r3, r0
 8279 030e 002B     		cmp	r3, #0
 8280 0310 23D0     		beq	.L331
 8281              		.loc 1 1852 0 is_stmt 0 discriminator 1
 8282 0312 6F4B     		ldr	r3, .L373+16
 8283 0314 1B68     		ldr	r3, [r3]	@ float
 8284 0316 7049     		ldr	r1, .L373+24
 8285 0318 1846     		mov	r0, r3
 8286 031a FFF7FEFF 		bl	__aeabi_fcmpgt
 8287 031e 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 181


 8288 0320 002B     		cmp	r3, #0
 8289 0322 1AD0     		beq	.L331
1853:main.c        ****                     {
1854:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 8290              		.loc 1 1854 0 is_stmt 1
 8291 0324 BA8E     		ldrh	r2, [r7, #52]
 8292 0326 674B     		ldr	r3, .L373+4
 8293 0328 1B68     		ldr	r3, [r3]
 8294 032a 591C     		adds	r1, r3, #1
 8295 032c 6548     		ldr	r0, .L373+4
 8296 032e 0160     		str	r1, [r0]
 8297 0330 1344     		add	r3, r3, r2
 8298 0332 664A     		ldr	r2, .L373+12
 8299 0334 EF21     		movs	r1, #239
 8300 0336 D154     		strb	r1, [r2, r3]
1855:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 8301              		.loc 1 1855 0
 8302 0338 BA8E     		ldrh	r2, [r7, #52]
 8303 033a 624B     		ldr	r3, .L373+4
 8304 033c 1B68     		ldr	r3, [r3]
 8305 033e 591C     		adds	r1, r3, #1
 8306 0340 6048     		ldr	r0, .L373+4
 8307 0342 0160     		str	r1, [r0]
 8308 0344 1344     		add	r3, r3, r2
 8309 0346 614A     		ldr	r2, .L373+12
 8310 0348 EF21     		movs	r1, #239
 8311 034a D154     		strb	r1, [r2, r3]
1856:main.c        ****                         presetArraySection = mapCountNext;
 8312              		.loc 1 1856 0
 8313 034c 634B     		ldr	r3, .L373+28
 8314 034e 0322     		movs	r2, #3
 8315 0350 1A70     		strb	r2, [r3]
1857:main.c        ****                         mapCount = 0;
 8316              		.loc 1 1857 0
 8317 0352 634B     		ldr	r3, .L373+32
 8318 0354 0022     		movs	r2, #0
 8319 0356 1A60     		str	r2, [r3]
 8320 0358 6BE1     		b	.L334
 8321              	.L331:
1858:main.c        ****                     }
1859:main.c        ****                     else
1860:main.c        ****                     {
1861:main.c        ****                         //error state
1862:main.c        ****                         SPI_errors++;
 8322              		.loc 1 1862 0
 8323 035a 624B     		ldr	r3, .L373+36
 8324 035c 1B68     		ldr	r3, [r3]
 8325 035e 0133     		adds	r3, r3, #1
 8326 0360 604A     		ldr	r2, .L373+36
 8327 0362 1360     		str	r3, [r2]
1863:main.c        ****                         sysexMessageInProgress = 0;
 8328              		.loc 1 1863 0
 8329 0364 604B     		ldr	r3, .L373+40
 8330 0366 0022     		movs	r2, #0
 8331 0368 1A70     		strb	r2, [r3]
1864:main.c        ****                         sysexPointer = 0;
 8332              		.loc 1 1864 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 182


 8333 036a 604B     		ldr	r3, .L373+44
 8334 036c 0022     		movs	r2, #0
 8335 036e 1A60     		str	r2, [r3]
1865:main.c        ****                         sendingMessage = 0;
 8336              		.loc 1 1865 0
 8337 0370 5F4B     		ldr	r3, .L373+48
 8338 0372 0022     		movs	r2, #0
 8339 0374 1A70     		strb	r2, [r3]
1866:main.c        ****                         parseThatMF = 0;
 8340              		.loc 1 1866 0
 8341 0376 5F4B     		ldr	r3, .L373+52
 8342 0378 0022     		movs	r2, #0
 8343 037a 1A70     		strb	r2, [r3]
 8344 037c 59E1     		b	.L334
 8345              	.L327:
1867:main.c        ****                     }
1868:main.c        ****                 }
1869:main.c        ****             }
1870:main.c        ****             else if (presetArraySection == mapCountNext)
 8346              		.loc 1 1870 0
 8347 037e 574B     		ldr	r3, .L373+28
 8348 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8349 0382 032B     		cmp	r3, #3
 8350 0384 28D1     		bne	.L335
1871:main.c        ****             {
1872:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 8351              		.loc 1 1872 0
 8352 0386 3B69     		ldr	r3, [r7, #16]	@ float
 8353 0388 1846     		mov	r0, r3
 8354 038a FFF7FEFF 		bl	__aeabi_f2uiz
 8355 038e 0346     		mov	r3, r0
 8356 0390 9AB2     		uxth	r2, r3
 8357 0392 594B     		ldr	r3, .L373+56
 8358 0394 1A80     		strh	r2, [r3]	@ movhi
1873:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 8359              		.loc 1 1873 0
 8360 0396 BA8E     		ldrh	r2, [r7, #52]
 8361 0398 4A4B     		ldr	r3, .L373+4
 8362 039a 1B68     		ldr	r3, [r3]
 8363 039c 591C     		adds	r1, r3, #1
 8364 039e 4948     		ldr	r0, .L373+4
 8365 03a0 0160     		str	r1, [r0]
 8366 03a2 1344     		add	r3, r3, r2
 8367 03a4 544A     		ldr	r2, .L373+56
 8368 03a6 1288     		ldrh	r2, [r2]
 8369 03a8 120A     		lsrs	r2, r2, #8
 8370 03aa 92B2     		uxth	r2, r2
 8371 03ac D1B2     		uxtb	r1, r2
 8372 03ae 474A     		ldr	r2, .L373+12
 8373 03b0 D154     		strb	r1, [r2, r3]
1874:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 8374              		.loc 1 1874 0
 8375 03b2 BA8E     		ldrh	r2, [r7, #52]
 8376 03b4 434B     		ldr	r3, .L373+4
 8377 03b6 1B68     		ldr	r3, [r3]
 8378 03b8 591C     		adds	r1, r3, #1
 8379 03ba 4248     		ldr	r0, .L373+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 183


 8380 03bc 0160     		str	r1, [r0]
 8381 03be 1344     		add	r3, r3, r2
 8382 03c0 4D4A     		ldr	r2, .L373+56
 8383 03c2 1288     		ldrh	r2, [r2]
 8384 03c4 D1B2     		uxtb	r1, r2
 8385 03c6 414A     		ldr	r2, .L373+12
 8386 03c8 D154     		strb	r1, [r2, r3]
1875:main.c        ****                 presetArraySection = mapping;
 8387              		.loc 1 1875 0
 8388 03ca 444B     		ldr	r3, .L373+28
 8389 03cc 0422     		movs	r2, #4
 8390 03ce 1A70     		strb	r2, [r3]
1876:main.c        ****                 numMappings = 0;
 8391              		.loc 1 1876 0
 8392 03d0 4A4B     		ldr	r3, .L373+60
 8393 03d2 0022     		movs	r2, #0
 8394 03d4 1A80     		strh	r2, [r3]	@ movhi
 8395 03d6 2CE1     		b	.L334
 8396              	.L335:
1877:main.c        ****             }
1878:main.c        ****             else if (presetArraySection == mapping)
 8397              		.loc 1 1878 0
 8398 03d8 404B     		ldr	r3, .L373+28
 8399 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8400 03dc 042B     		cmp	r3, #4
 8401 03de 40F02881 		bne	.L334
1879:main.c        ****             {
1880:main.c        ****                 // this is the order
1881:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
1882:main.c        ****                 if (numMappings < mapCountExpectation)
 8402              		.loc 1 1882 0
 8403 03e2 464B     		ldr	r3, .L373+60
 8404 03e4 1A88     		ldrh	r2, [r3]
 8405 03e6 444B     		ldr	r3, .L373+56
 8406 03e8 1B88     		ldrh	r3, [r3]
 8407 03ea 9A42     		cmp	r2, r3
 8408 03ec 80F0D680 		bcs	.L336
1883:main.c        ****                 {
1884:main.c        ****                     if ((mapCount % 5) == 0)
 8409              		.loc 1 1884 0
 8410 03f0 3B4B     		ldr	r3, .L373+32
 8411 03f2 1968     		ldr	r1, [r3]
 8412 03f4 424B     		ldr	r3, .L373+64
 8413 03f6 A3FB0123 		umull	r2, r3, r3, r1
 8414 03fa 9A08     		lsrs	r2, r3, #2
 8415 03fc 1346     		mov	r3, r2
 8416 03fe 9B00     		lsls	r3, r3, #2
 8417 0400 1344     		add	r3, r3, r2
 8418 0402 CA1A     		subs	r2, r1, r3
 8419 0404 002A     		cmp	r2, #0
 8420 0406 0FD1     		bne	.L337
1885:main.c        ****                     {
1886:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8421              		.loc 1 1886 0
 8422 0408 BA8E     		ldrh	r2, [r7, #52]
 8423 040a 2E4B     		ldr	r3, .L373+4
 8424 040c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 184


 8425 040e 591C     		adds	r1, r3, #1
 8426 0410 2C48     		ldr	r0, .L373+4
 8427 0412 0160     		str	r1, [r0]
 8428 0414 D418     		adds	r4, r2, r3
 8429 0416 3B69     		ldr	r3, [r7, #16]	@ float
 8430 0418 1846     		mov	r0, r3
 8431 041a FFF7FEFF 		bl	__aeabi_f2uiz
 8432 041e 0346     		mov	r3, r0
 8433 0420 DAB2     		uxtb	r2, r3
 8434 0422 2A4B     		ldr	r3, .L373+12
 8435 0424 1A55     		strb	r2, [r3, r4]
 8436 0426 B3E0     		b	.L338
 8437              	.L337:
1887:main.c        ****                     }
1888:main.c        ****                     else if  (mapCount % 5 == 1)
 8438              		.loc 1 1888 0
 8439 0428 2D4B     		ldr	r3, .L373+32
 8440 042a 1968     		ldr	r1, [r3]
 8441 042c 344B     		ldr	r3, .L373+64
 8442 042e A3FB0123 		umull	r2, r3, r3, r1
 8443 0432 9A08     		lsrs	r2, r3, #2
 8444 0434 1346     		mov	r3, r2
 8445 0436 9B00     		lsls	r3, r3, #2
 8446 0438 1344     		add	r3, r3, r2
 8447 043a CA1A     		subs	r2, r1, r3
 8448 043c 012A     		cmp	r2, #1
 8449 043e 0FD1     		bne	.L339
1889:main.c        ****                     {
1890:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8450              		.loc 1 1890 0
 8451 0440 BA8E     		ldrh	r2, [r7, #52]
 8452 0442 204B     		ldr	r3, .L373+4
 8453 0444 1B68     		ldr	r3, [r3]
 8454 0446 591C     		adds	r1, r3, #1
 8455 0448 1E48     		ldr	r0, .L373+4
 8456 044a 0160     		str	r1, [r0]
 8457 044c D418     		adds	r4, r2, r3
 8458 044e 3B69     		ldr	r3, [r7, #16]	@ float
 8459 0450 1846     		mov	r0, r3
 8460 0452 FFF7FEFF 		bl	__aeabi_f2uiz
 8461 0456 0346     		mov	r3, r0
 8462 0458 DAB2     		uxtb	r2, r3
 8463 045a 1C4B     		ldr	r3, .L373+12
 8464 045c 1A55     		strb	r2, [r3, r4]
 8465 045e 97E0     		b	.L338
 8466              	.L339:
1891:main.c        ****                     }
1892:main.c        ****                     else if (mapCount % 5 == 2) //check if the scalar source is -1 (if so send 255 
 8467              		.loc 1 1892 0
 8468 0460 1F4B     		ldr	r3, .L373+32
 8469 0462 1968     		ldr	r1, [r3]
 8470 0464 264B     		ldr	r3, .L373+64
 8471 0466 A3FB0123 		umull	r2, r3, r3, r1
 8472 046a 9A08     		lsrs	r2, r3, #2
 8473 046c 1346     		mov	r3, r2
 8474 046e 9B00     		lsls	r3, r3, #2
 8475 0470 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 185


 8476 0472 CA1A     		subs	r2, r1, r3
 8477 0474 022A     		cmp	r2, #2
 8478 0476 45D1     		bne	.L340
1893:main.c        ****                     {
1894:main.c        ****                         if (theVal.f < 0.0f)
 8479              		.loc 1 1894 0
 8480 0478 3B69     		ldr	r3, [r7, #16]	@ float
 8481 047a 4FF00001 		mov	r1, #0
 8482 047e 1846     		mov	r0, r3
 8483 0480 FFF7FEFF 		bl	__aeabi_fcmplt
 8484 0484 0346     		mov	r3, r0
 8485 0486 002B     		cmp	r3, #0
 8486 0488 0AD0     		beq	.L370
1895:main.c        ****                         {
1896:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 8487              		.loc 1 1896 0
 8488 048a BA8E     		ldrh	r2, [r7, #52]
 8489 048c 0D4B     		ldr	r3, .L373+4
 8490 048e 1B68     		ldr	r3, [r3]
 8491 0490 591C     		adds	r1, r3, #1
 8492 0492 0C48     		ldr	r0, .L373+4
 8493 0494 0160     		str	r1, [r0]
 8494 0496 1344     		add	r3, r3, r2
 8495 0498 0C4A     		ldr	r2, .L373+12
 8496 049a FF21     		movs	r1, #255
 8497 049c D154     		strb	r1, [r2, r3]
 8498 049e 77E0     		b	.L338
 8499              	.L370:
1897:main.c        ****                         }
1898:main.c        ****                         else
1899:main.c        ****                         {
1900:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8500              		.loc 1 1900 0
 8501 04a0 BA8E     		ldrh	r2, [r7, #52]
 8502 04a2 084B     		ldr	r3, .L373+4
 8503 04a4 1B68     		ldr	r3, [r3]
 8504 04a6 591C     		adds	r1, r3, #1
 8505 04a8 0648     		ldr	r0, .L373+4
 8506 04aa 0160     		str	r1, [r0]
 8507 04ac D418     		adds	r4, r2, r3
 8508 04ae 3B69     		ldr	r3, [r7, #16]	@ float
 8509 04b0 1846     		mov	r0, r3
 8510 04b2 FFF7FEFF 		bl	__aeabi_f2uiz
 8511 04b6 0346     		mov	r3, r0
 8512 04b8 DAB2     		uxtb	r2, r3
 8513 04ba 044B     		ldr	r3, .L373+12
 8514 04bc 1A55     		strb	r2, [r3, r4]
 8515 04be 67E0     		b	.L338
 8516              	.L374:
 8517              		.align	2
 8518              	.L373:
 8519 04c0 00000000 		.word	valsCount
 8520 04c4 00000000 		.word	currentFloat
 8521 04c8 00FF7F47 		.word	1199570688
 8522 04cc 00000000 		.word	presetArray
 8523 04d0 00000000 		.word	valCheck
 8524 04d4 0000C0BF 		.word	-1077936128
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 186


 8525 04d8 000020C0 		.word	-1071644672
 8526 04dc 00000000 		.word	presetArraySection
 8527 04e0 00000000 		.word	mapCount
 8528 04e4 00000000 		.word	SPI_errors
 8529 04e8 00000000 		.word	sysexMessageInProgress
 8530 04ec 00000000 		.word	sysexPointer
 8531 04f0 00000000 		.word	sendingMessage
 8532 04f4 00000000 		.word	parseThatMF
 8533 04f8 00000000 		.word	mapCountExpectation
 8534 04fc 00000000 		.word	numMappings
 8535 0500 CDCCCCCC 		.word	-858993459
 8536              	.L340:
1901:main.c        ****                         }
1902:main.c        ****                     }
1903:main.c        ****                     else if (mapCount % 5 == 3)
 8537              		.loc 1 1903 0
 8538 0504 8A4B     		ldr	r3, .L375
 8539 0506 1968     		ldr	r1, [r3]
 8540 0508 8A4B     		ldr	r3, .L375+4
 8541 050a A3FB0123 		umull	r2, r3, r3, r1
 8542 050e 9A08     		lsrs	r2, r3, #2
 8543 0510 1346     		mov	r3, r2
 8544 0512 9B00     		lsls	r3, r3, #2
 8545 0514 1344     		add	r3, r3, r2
 8546 0516 CA1A     		subs	r2, r1, r3
 8547 0518 032A     		cmp	r2, #3
 8548 051a 24D1     		bne	.L344
 8549              	.LBB55:
1904:main.c        ****                     {
1905:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 8550              		.loc 1 1905 0
 8551 051c 3B69     		ldr	r3, [r7, #16]	@ float
 8552 051e 8649     		ldr	r1, .L375+8
 8553 0520 1846     		mov	r0, r3
 8554 0522 FFF7FEFF 		bl	__aeabi_fmul
 8555 0526 0346     		mov	r3, r0
 8556 0528 1846     		mov	r0, r3
 8557 052a FFF7FEFF 		bl	__aeabi_f2iz
 8558 052e 0346     		mov	r3, r0
 8559 0530 3B86     		strh	r3, [r7, #48]	@ movhi
1906:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 8560              		.loc 1 1906 0
 8561 0532 BA8E     		ldrh	r2, [r7, #52]
 8562 0534 814B     		ldr	r3, .L375+12
 8563 0536 1B68     		ldr	r3, [r3]
 8564 0538 591C     		adds	r1, r3, #1
 8565 053a 8048     		ldr	r0, .L375+12
 8566 053c 0160     		str	r1, [r0]
 8567 053e 1344     		add	r3, r3, r2
 8568 0540 B7F93020 		ldrsh	r2, [r7, #48]
 8569 0544 1212     		asrs	r2, r2, #8
 8570 0546 12B2     		sxth	r2, r2
 8571 0548 D1B2     		uxtb	r1, r2
 8572 054a 7D4A     		ldr	r2, .L375+16
 8573 054c D154     		strb	r1, [r2, r3]
1907:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 8574              		.loc 1 1907 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 187


 8575 054e BA8E     		ldrh	r2, [r7, #52]
 8576 0550 7A4B     		ldr	r3, .L375+12
 8577 0552 1B68     		ldr	r3, [r3]
 8578 0554 591C     		adds	r1, r3, #1
 8579 0556 7948     		ldr	r0, .L375+12
 8580 0558 0160     		str	r1, [r0]
 8581 055a 1344     		add	r3, r3, r2
 8582 055c 3A8E     		ldrh	r2, [r7, #48]	@ movhi
 8583 055e D1B2     		uxtb	r1, r2
 8584 0560 774A     		ldr	r2, .L375+16
 8585 0562 D154     		strb	r1, [r2, r3]
 8586              	.LBE55:
 8587 0564 14E0     		b	.L338
 8588              	.L344:
1908:main.c        **** 
1909:main.c        ****                     }
1910:main.c        ****                     else
1911:main.c        ****                     {
1912:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8589              		.loc 1 1912 0
 8590 0566 BA8E     		ldrh	r2, [r7, #52]
 8591 0568 744B     		ldr	r3, .L375+12
 8592 056a 1B68     		ldr	r3, [r3]
 8593 056c 591C     		adds	r1, r3, #1
 8594 056e 7348     		ldr	r0, .L375+12
 8595 0570 0160     		str	r1, [r0]
 8596 0572 D418     		adds	r4, r2, r3
 8597 0574 3B69     		ldr	r3, [r7, #16]	@ float
 8598 0576 1846     		mov	r0, r3
 8599 0578 FFF7FEFF 		bl	__aeabi_f2uiz
 8600 057c 0346     		mov	r3, r0
 8601 057e DAB2     		uxtb	r2, r3
 8602 0580 6F4B     		ldr	r3, .L375+16
 8603 0582 1A55     		strb	r2, [r3, r4]
1913:main.c        ****                         numMappings++;
 8604              		.loc 1 1913 0
 8605 0584 6F4B     		ldr	r3, .L375+20
 8606 0586 1B88     		ldrh	r3, [r3]
 8607 0588 0133     		adds	r3, r3, #1
 8608 058a 9AB2     		uxth	r2, r3
 8609 058c 6D4B     		ldr	r3, .L375+20
 8610 058e 1A80     		strh	r2, [r3]	@ movhi
 8611              	.L338:
1914:main.c        ****                     }
1915:main.c        ****                     mapCount++;
 8612              		.loc 1 1915 0
 8613 0590 674B     		ldr	r3, .L375
 8614 0592 1B68     		ldr	r3, [r3]
 8615 0594 0133     		adds	r3, r3, #1
 8616 0596 664A     		ldr	r2, .L375
 8617 0598 1360     		str	r3, [r2]
 8618 059a 4AE0     		b	.L334
 8619              	.L336:
1916:main.c        ****                 }
1917:main.c        ****                 
1918:main.c        **** 
1919:main.c        ****                 else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 188


1920:main.c        ****                 {
1921:main.c        ****                     //mapcount ended
1922:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 8620              		.loc 1 1922 0
 8621 059c 3B69     		ldr	r3, [r7, #16]	@ float
 8622 059e 6A49     		ldr	r1, .L375+24
 8623 05a0 1846     		mov	r0, r3
 8624 05a2 FFF7FEFF 		bl	__aeabi_fcmplt
 8625 05a6 0346     		mov	r3, r0
 8626 05a8 002B     		cmp	r3, #0
 8627 05aa 31D0     		beq	.L345
 8628              		.loc 1 1922 0 is_stmt 0 discriminator 1
 8629 05ac 3B69     		ldr	r3, [r7, #16]	@ float
 8630 05ae 6749     		ldr	r1, .L375+28
 8631 05b0 1846     		mov	r0, r3
 8632 05b2 FFF7FEFF 		bl	__aeabi_fcmpgt
 8633 05b6 0346     		mov	r3, r0
 8634 05b8 002B     		cmp	r3, #0
 8635 05ba 29D0     		beq	.L345
1923:main.c        ****                     {
1924:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8636              		.loc 1 1924 0 is_stmt 1
 8637 05bc BA8E     		ldrh	r2, [r7, #52]
 8638 05be 5F4B     		ldr	r3, .L375+12
 8639 05c0 1B68     		ldr	r3, [r3]
 8640 05c2 591C     		adds	r1, r3, #1
 8641 05c4 5D48     		ldr	r0, .L375+12
 8642 05c6 0160     		str	r1, [r0]
 8643 05c8 1344     		add	r3, r3, r2
 8644 05ca 5D4A     		ldr	r2, .L375+16
 8645 05cc FE21     		movs	r1, #254
 8646 05ce D154     		strb	r1, [r2, r3]
1925:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8647              		.loc 1 1925 0
 8648 05d0 BA8E     		ldrh	r2, [r7, #52]
 8649 05d2 5A4B     		ldr	r3, .L375+12
 8650 05d4 1B68     		ldr	r3, [r3]
 8651 05d6 591C     		adds	r1, r3, #1
 8652 05d8 5848     		ldr	r0, .L375+12
 8653 05da 0160     		str	r1, [r0]
 8654 05dc 1344     		add	r3, r3, r2
 8655 05de 584A     		ldr	r2, .L375+16
 8656 05e0 FE21     		movs	r1, #254
 8657 05e2 D154     		strb	r1, [r2, r3]
1926:main.c        ****                         presetArraySection = presetEnd;
 8658              		.loc 1 1926 0
 8659 05e4 5A4B     		ldr	r3, .L375+32
 8660 05e6 0522     		movs	r2, #5
 8661 05e8 1A70     		strb	r2, [r3]
1927:main.c        ****                         sysexMessageInProgress = 0;
 8662              		.loc 1 1927 0
 8663 05ea 5A4B     		ldr	r3, .L375+36
 8664 05ec 0022     		movs	r2, #0
 8665 05ee 1A70     		strb	r2, [r3]
1928:main.c        ****                         sendingMessage = 1;
 8666              		.loc 1 1928 0
 8667 05f0 594B     		ldr	r3, .L375+40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 189


 8668 05f2 0122     		movs	r2, #1
 8669 05f4 1A70     		strb	r2, [r3]
1929:main.c        ****                         patchNum = presetNumberToWrite;
 8670              		.loc 1 1929 0
 8671 05f6 594B     		ldr	r3, .L375+44
 8672 05f8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8673 05fa 594B     		ldr	r3, .L375+48
 8674 05fc 1A70     		strb	r2, [r3]
1930:main.c        ****                         messageArraySize = valsStart + currentFloat;
 8675              		.loc 1 1930 0
 8676 05fe 4F4B     		ldr	r3, .L375+12
 8677 0600 1B68     		ldr	r3, [r3]
 8678 0602 9AB2     		uxth	r2, r3
 8679 0604 BB8E     		ldrh	r3, [r7, #52]	@ movhi
 8680 0606 1344     		add	r3, r3, r2
 8681 0608 9AB2     		uxth	r2, r3
 8682 060a 564B     		ldr	r3, .L375+52
 8683 060c 1A80     		strh	r2, [r3]	@ movhi
 8684 060e 10E0     		b	.L334
 8685              	.L345:
1931:main.c        ****                     }
1932:main.c        ****                     else
1933:main.c        ****                     {
1934:main.c        ****                         //error state
1935:main.c        ****                         SPI_errors++;
 8686              		.loc 1 1935 0
 8687 0610 554B     		ldr	r3, .L375+56
 8688 0612 1B68     		ldr	r3, [r3]
 8689 0614 0133     		adds	r3, r3, #1
 8690 0616 544A     		ldr	r2, .L375+56
 8691 0618 1360     		str	r3, [r2]
1936:main.c        ****                         sysexMessageInProgress = 0;
 8692              		.loc 1 1936 0
 8693 061a 4E4B     		ldr	r3, .L375+36
 8694 061c 0022     		movs	r2, #0
 8695 061e 1A70     		strb	r2, [r3]
1937:main.c        ****                         sysexPointer = 0;
 8696              		.loc 1 1937 0
 8697 0620 524B     		ldr	r3, .L375+60
 8698 0622 0022     		movs	r2, #0
 8699 0624 1A60     		str	r2, [r3]
1938:main.c        ****                         sendingMessage = 0;
 8700              		.loc 1 1938 0
 8701 0626 4C4B     		ldr	r3, .L375+40
 8702 0628 0022     		movs	r2, #0
 8703 062a 1A70     		strb	r2, [r3]
1939:main.c        ****                         parseThatMF = 0;
 8704              		.loc 1 1939 0
 8705 062c 504B     		ldr	r3, .L375+64
 8706 062e 0022     		movs	r2, #0
 8707 0630 1A70     		strb	r2, [r3]
 8708              	.L334:
1825:main.c        ****         {
 8709              		.loc 1 1825 0
 8710 0632 7B6D     		ldr	r3, [r7, #84]
 8711 0634 0533     		adds	r3, r3, #5
 8712 0636 7B65     		str	r3, [r7, #84]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 190


 8713              	.L326:
1825:main.c        ****         {
 8714              		.loc 1 1825 0 is_stmt 0 discriminator 1
 8715 0638 4C4B     		ldr	r3, .L375+60
 8716 063a 1B68     		ldr	r3, [r3]
 8717 063c 7A6D     		ldr	r2, [r7, #84]
 8718 063e 9A42     		cmp	r2, r3
 8719 0640 FFF4B1AD 		bcc	.L348
 8720 0644 F2E2     		b	.L349
 8721              	.L315:
 8722              	.LBE49:
1940:main.c        ****                     }
1941:main.c        ****                 }
1942:main.c        ****             }
1943:main.c        ****             
1944:main.c        ****         }
1945:main.c        ****     }
1946:main.c        ****     #if 0
1947:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
1948:main.c        ****     {
1949:main.c        ****         
1950:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
1951:main.c        ****         currentFloat = 0;
1952:main.c        ****         presetNumberToWrite = sysexBuffer[1];
1953:main.c        ****         union breakFloat theVal;
1954:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
1955:main.c        ****         {
1956:main.c        ****             theVal.u32 = 0;
1957:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
1958:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
1959:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
1960:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
1961:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
1962:main.c        ****             testVal = theVal.f;
1963:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
1964:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
1965:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
1966:main.c        ****         }
1967:main.c        ****         
1968:main.c        ****         tuningArray[currentFloat++] = 0xef;
1969:main.c        ****         tuningArray[currentFloat++] = 0xef;
1970:main.c        ****                         
1971:main.c        ****         
1972:main.c        ****         messageArraySize = currentFloat;
1973:main.c        ****                     
1974:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
1975:main.c        ****         {
1976:main.c        ****             //error state
1977:main.c        ****             SPI_errors++;
1978:main.c        ****             sysexMessageInProgress = 0;
1979:main.c        ****             sysexPointer = 0;
1980:main.c        ****             sendingMessage = 0;
1981:main.c        ****             parseThatMF = 0;
1982:main.c        ****         } else 
1983:main.c        ****         {
1984:main.c        ****             sysexMessageInProgress = 0;
1985:main.c        ****             sendingMessage = 2;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 191


1986:main.c        ****         }
1987:main.c        ****     }
1988:main.c        ****     #endif
1989:main.c        ****     
1990:main.c        **** 
1991:main.c        ****     
1992:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 8723              		.loc 1 1992 0 is_stmt 1
 8724 0646 4B4B     		ldr	r3, .L375+68
 8725 0648 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8726 064a 022B     		cmp	r3, #2
 8727 064c 40F08481 		bne	.L350
 8728              	.LBB56:
1993:main.c        ****     {
1994:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8729              		.loc 1 1994 0
 8730 0650 404B     		ldr	r3, .L375+36
 8731 0652 0122     		movs	r2, #1
 8732 0654 1A70     		strb	r2, [r3]
1995:main.c        ****         currentFloat = 0;
 8733              		.loc 1 1995 0
 8734 0656 394B     		ldr	r3, .L375+12
 8735 0658 0022     		movs	r2, #0
 8736 065a 1A60     		str	r2, [r3]
1996:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 8737              		.loc 1 1996 0
 8738 065c 454B     		ldr	r3, .L375+68
 8739 065e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8740 0660 454B     		ldr	r3, .L375+72
 8741 0662 1A70     		strb	r2, [r3]
1997:main.c        ****         currentCopedent = copedentNumberToWrite;
 8742              		.loc 1 1997 0
 8743 0664 444B     		ldr	r3, .L375+72
 8744 0666 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8745 0668 444B     		ldr	r3, .L375+76
 8746 066a 1A70     		strb	r2, [r3]
1998:main.c        ****         necks[currentNeck] = currentCopedent;
 8747              		.loc 1 1998 0
 8748 066c 444B     		ldr	r3, .L375+80
 8749 066e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8750 0670 1A46     		mov	r2, r3
 8751 0672 424B     		ldr	r3, .L375+76
 8752 0674 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8753 0676 434B     		ldr	r3, .L375+84
 8754 0678 9954     		strb	r1, [r3, r2]
1999:main.c        **** 
2000:main.c        ****               
2001:main.c        ****         
2002:main.c        ****         union breakFloat theVal;
2003:main.c        ****         uint32_t i = 2;
 8755              		.loc 1 2003 0
 8756 067a 0223     		movs	r3, #2
 8757 067c 3B64     		str	r3, [r7, #64]
2004:main.c        ****         uint8_t stoppingPoint = COPEDENT_NAME_LENGTH_IN_BYTES+2;
 8758              		.loc 1 2004 0
 8759 067e 0C23     		movs	r3, #12
 8760 0680 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 192


2005:main.c        ****         for (; i < stoppingPoint; i++)
 8761              		.loc 1 2005 0
 8762 0684 3FE0     		b	.L351
 8763              	.L352:
 8764              	.LBB57:
2006:main.c        ****         {
2007:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2008:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 8765              		.loc 1 2008 0 discriminator 2
 8766 0686 3B4A     		ldr	r2, .L375+68
 8767 0688 3B6C     		ldr	r3, [r7, #64]
 8768 068a 1344     		add	r3, r3, r2
 8769 068c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8770 068e 03F07F03 		and	r3, r3, #127
 8771 0692 87F82E30 		strb	r3, [r7, #46]
2009:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 8772              		.loc 1 2009 0 discriminator 2
 8773 0696 384B     		ldr	r3, .L375+72
 8774 0698 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8775 069a 1846     		mov	r0, r3
 8776 069c 3B6C     		ldr	r3, [r7, #64]
 8777 069e 9A1E     		subs	r2, r3, #2
 8778 06a0 3949     		ldr	r1, .L375+88
 8779 06a2 0346     		mov	r3, r0
 8780 06a4 9B00     		lsls	r3, r3, #2
 8781 06a6 0344     		add	r3, r3, r0
 8782 06a8 5B00     		lsls	r3, r3, #1
 8783 06aa 0B44     		add	r3, r3, r1
 8784 06ac 1344     		add	r3, r3, r2
 8785 06ae 97F82E20 		ldrb	r2, [r7, #46]
 8786 06b2 1A70     		strb	r2, [r3]
2010:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 8787              		.loc 1 2010 0 discriminator 2
 8788 06b4 304B     		ldr	r3, .L375+72
 8789 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8790 06b8 9BB2     		uxth	r3, r3
 8791 06ba 1A46     		mov	r2, r3	@ movhi
 8792 06bc 1201     		lsls	r2, r2, #4
 8793 06be 1A44     		add	r2, r2, r3
 8794 06c0 D200     		lsls	r2, r2, #3
 8795 06c2 1344     		add	r3, r3, r2
 8796 06c4 5B00     		lsls	r3, r3, #1
 8797 06c6 9AB2     		uxth	r2, r3
 8798 06c8 304B     		ldr	r3, .L375+92
 8799 06ca 1A80     		strh	r2, [r3]	@ movhi
2011:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 8800              		.loc 1 2011 0 discriminator 2
 8801 06cc 2A4B     		ldr	r3, .L375+72
 8802 06ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8803 06d0 9BB2     		uxth	r3, r3
 8804 06d2 1A46     		mov	r2, r3	@ movhi
 8805 06d4 1201     		lsls	r2, r2, #4
 8806 06d6 1A44     		add	r2, r2, r3
 8807 06d8 D200     		lsls	r2, r2, #3
 8808 06da 1344     		add	r3, r3, r2
 8809 06dc 5B00     		lsls	r3, r3, #1
 8810 06de 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 193


 8811 06e0 3B6C     		ldr	r3, [r7, #64]
 8812 06e2 9BB2     		uxth	r3, r3
 8813 06e4 1344     		add	r3, r3, r2
 8814 06e6 9BB2     		uxth	r3, r3
 8815 06e8 023B     		subs	r3, r3, #2
 8816 06ea 9AB2     		uxth	r2, r3
 8817 06ec 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 8818 06f0 1146     		mov	r1, r2
 8819 06f2 1846     		mov	r0, r3
 8820 06f4 FFF7FEFF 		bl	EEPROM_WriteByte
 8821 06f8 0346     		mov	r3, r0
 8822 06fa DAB2     		uxtb	r2, r3
 8823 06fc 244B     		ldr	r3, .L375+96
 8824 06fe 1A70     		strb	r2, [r3]
 8825              	.LBE57:
2005:main.c        ****         {
 8826              		.loc 1 2005 0 discriminator 2
 8827 0700 3B6C     		ldr	r3, [r7, #64]
 8828 0702 0133     		adds	r3, r3, #1
 8829 0704 3B64     		str	r3, [r7, #64]
 8830              	.L351:
2005:main.c        ****         {
 8831              		.loc 1 2005 0 is_stmt 0 discriminator 1
 8832 0706 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 8833 070a 3B6C     		ldr	r3, [r7, #64]
 8834 070c 9A42     		cmp	r2, r3
 8835 070e BAD8     		bhi	.L352
2012:main.c        ****         }
2013:main.c        ****         
2014:main.c        ****         i = COPEDENT_NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual 
 8836              		.loc 1 2014 0 is_stmt 1
 8837 0710 0C23     		movs	r3, #12
 8838 0712 3B64     		str	r3, [r7, #64]
2015:main.c        **** 
2016:main.c        ****  
2017:main.c        ****         while(i < sysexPointer)
 8839              		.loc 1 2017 0
 8840 0714 E1E0     		b	.L353
 8841              	.L358:
 8842              	.LBB58:
2018:main.c        ****         {
2019:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 8843              		.loc 1 2019 0
 8844 0716 0023     		movs	r3, #0
 8845 0718 FB63     		str	r3, [r7, #60]
 8846 071a DAE0     		b	.L354
 8847              	.L357:
 8848              	.LBB59:
2020:main.c        ****             {
2021:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 8849              		.loc 1 2021 0
 8850 071c FB6B     		ldr	r3, [r7, #60]
 8851 071e 9BB2     		uxth	r3, r3
 8852 0720 1A46     		mov	r2, r3	@ movhi
 8853 0722 5200     		lsls	r2, r2, #1
 8854 0724 1344     		add	r3, r3, r2
 8855 0726 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 194


 8856 0728 BB85     		strh	r3, [r7, #44]	@ movhi
 8857              	.LBB60:
2022:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 8858              		.loc 1 2022 0
 8859 072a 0023     		movs	r3, #0
 8860 072c BB63     		str	r3, [r7, #56]
 8861 072e C9E0     		b	.L355
 8862              	.L376:
 8863              		.align	2
 8864              	.L375:
 8865 0730 00000000 		.word	mapCount
 8866 0734 CDCCCCCC 		.word	-858993459
 8867 0738 00FEFF46 		.word	1191181824
 8868 073c 00000000 		.word	currentFloat
 8869 0740 00000000 		.word	presetArray
 8870 0744 00000000 		.word	numMappings
 8871 0748 000020C0 		.word	-1071644672
 8872 074c 000060C0 		.word	-1067450368
 8873 0750 00000000 		.word	presetArraySection
 8874 0754 00000000 		.word	sysexMessageInProgress
 8875 0758 00000000 		.word	sendingMessage
 8876 075c 00000000 		.word	presetNumberToWrite
 8877 0760 00000000 		.word	patchNum
 8878 0764 00000000 		.word	messageArraySize
 8879 0768 00000000 		.word	SPI_errors
 8880 076c 00000000 		.word	sysexPointer
 8881 0770 00000000 		.word	parseThatMF
 8882 0774 00000000 		.word	sysexBuffer
 8883 0778 00000000 		.word	copedentNumberToWrite
 8884 077c 00000000 		.word	currentCopedent
 8885 0780 00000000 		.word	currentNeck
 8886 0784 00000000 		.word	necks
 8887 0788 00000000 		.word	copedentNamesArray
 8888 078c 00000000 		.word	checkBase
 8889 0790 00000000 		.word	checkStatus
 8890              	.L356:
 8891              	.LBB61:
2023:main.c        ****                 {
2024:main.c        ****                     
2025:main.c        ****                     theVal.u32 = 0;
 8892              		.loc 1 2025 0 discriminator 3
 8893 0794 0023     		movs	r3, #0
 8894 0796 FB60     		str	r3, [r7, #12]
2026:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8895              		.loc 1 2026 0 discriminator 3
 8896 0798 FB68     		ldr	r3, [r7, #12]
 8897 079a 6349     		ldr	r1, .L377
 8898 079c 3A6C     		ldr	r2, [r7, #64]
 8899 079e 0A44     		add	r2, r2, r1
 8900 07a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8901 07a2 1207     		lsls	r2, r2, #28
 8902 07a4 1343     		orrs	r3, r3, r2
 8903 07a6 FB60     		str	r3, [r7, #12]
2027:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 8904              		.loc 1 2027 0 discriminator 3
 8905 07a8 FB68     		ldr	r3, [r7, #12]
 8906 07aa 3A6C     		ldr	r2, [r7, #64]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 195


 8907 07ac 0132     		adds	r2, r2, #1
 8908 07ae 5E49     		ldr	r1, .L377
 8909 07b0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8910 07b2 5205     		lsls	r2, r2, #21
 8911 07b4 1343     		orrs	r3, r3, r2
 8912 07b6 FB60     		str	r3, [r7, #12]
2028:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 8913              		.loc 1 2028 0 discriminator 3
 8914 07b8 FB68     		ldr	r3, [r7, #12]
 8915 07ba 3A6C     		ldr	r2, [r7, #64]
 8916 07bc 0232     		adds	r2, r2, #2
 8917 07be 5A49     		ldr	r1, .L377
 8918 07c0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8919 07c2 9203     		lsls	r2, r2, #14
 8920 07c4 1343     		orrs	r3, r3, r2
 8921 07c6 FB60     		str	r3, [r7, #12]
2029:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 8922              		.loc 1 2029 0 discriminator 3
 8923 07c8 FB68     		ldr	r3, [r7, #12]
 8924 07ca 3A6C     		ldr	r2, [r7, #64]
 8925 07cc 0332     		adds	r2, r2, #3
 8926 07ce 5649     		ldr	r1, .L377
 8927 07d0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8928 07d2 D201     		lsls	r2, r2, #7
 8929 07d4 1343     		orrs	r3, r3, r2
 8930 07d6 FB60     		str	r3, [r7, #12]
2030:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 8931              		.loc 1 2030 0 discriminator 3
 8932 07d8 FA68     		ldr	r2, [r7, #12]
 8933 07da 3B6C     		ldr	r3, [r7, #64]
 8934 07dc 0433     		adds	r3, r3, #4
 8935 07de 5249     		ldr	r1, .L377
 8936 07e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8937 07e2 03F07F03 		and	r3, r3, #127
 8938 07e6 1343     		orrs	r3, r3, r2
 8939 07e8 FB60     		str	r3, [r7, #12]
2031:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 8940              		.loc 1 2031 0 discriminator 3
 8941 07ea 504B     		ldr	r3, .L377+4
 8942 07ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8943 07ee 1C46     		mov	r4, r3
 8944 07f0 F968     		ldr	r1, [r7, #12]	@ float
 8945 07f2 4F48     		ldr	r0, .L377+8
 8946 07f4 FB6B     		ldr	r3, [r7, #60]
 8947 07f6 1A46     		mov	r2, r3
 8948 07f8 5200     		lsls	r2, r2, #1
 8949 07fa 1A44     		add	r2, r2, r3
 8950 07fc 9300     		lsls	r3, r2, #2
 8951 07fe 1A46     		mov	r2, r3
 8952 0800 2346     		mov	r3, r4
 8953 0802 5B01     		lsls	r3, r3, #5
 8954 0804 2344     		add	r3, r3, r4
 8955 0806 9B00     		lsls	r3, r3, #2
 8956 0808 1A44     		add	r2, r2, r3
 8957 080a BB6B     		ldr	r3, [r7, #56]
 8958 080c 1344     		add	r3, r3, r2
 8959 080e 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 196


2032:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 8960              		.loc 1 2032 0 discriminator 3
 8961 0812 FB68     		ldr	r3, [r7, #12]	@ float
 8962 0814 4FF08741 		mov	r1, #1132462080
 8963 0818 1846     		mov	r0, r3
 8964 081a FFF7FEFF 		bl	__aeabi_fmul
 8965 081e 0346     		mov	r3, r0
 8966 0820 4FF08E41 		mov	r1, #1191182336
 8967 0824 1846     		mov	r0, r3
 8968 0826 FFF7FEFF 		bl	__aeabi_fadd
 8969 082a 0346     		mov	r3, r0
 8970 082c 1846     		mov	r0, r3
 8971 082e FFF7FEFF 		bl	__aeabi_f2uiz
 8972 0832 0346     		mov	r3, r0
 8973 0834 7B85     		strh	r3, [r7, #42]	@ movhi
2033:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 8974              		.loc 1 2033 0 discriminator 3
 8975 0836 7B8D     		ldrh	r3, [r7, #42]
 8976 0838 1B0A     		lsrs	r3, r3, #8
 8977 083a 9BB2     		uxth	r3, r3
 8978 083c 87F82930 		strb	r3, [r7, #41]
2034:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 8979              		.loc 1 2034 0 discriminator 3
 8980 0840 7B8D     		ldrh	r3, [r7, #42]	@ movhi
 8981 0842 87F82830 		strb	r3, [r7, #40]
2035:main.c        ****                     
2036:main.c        ****                     
2037:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 8982              		.loc 1 2037 0 discriminator 3
 8983 0846 BB6B     		ldr	r3, [r7, #56]
 8984 0848 9BB2     		uxth	r3, r3
 8985 084a 5B00     		lsls	r3, r3, #1
 8986 084c FB84     		strh	r3, [r7, #38]	@ movhi
2038:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 8987              		.loc 1 2038 0 discriminator 3
 8988 084e FA8C     		ldrh	r2, [r7, #38]	@ movhi
 8989 0850 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 8990 0852 1344     		add	r3, r3, r2
 8991 0854 9AB2     		uxth	r2, r3
 8992 0856 354B     		ldr	r3, .L377+4
 8993 0858 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8994 085a 9BB2     		uxth	r3, r3
 8995 085c 1946     		mov	r1, r3	@ movhi
 8996 085e 0901     		lsls	r1, r1, #4
 8997 0860 1944     		add	r1, r1, r3
 8998 0862 C900     		lsls	r1, r1, #3
 8999 0864 0B44     		add	r3, r3, r1
 9000 0866 5B00     		lsls	r3, r3, #1
 9001 0868 9BB2     		uxth	r3, r3
 9002 086a 1344     		add	r3, r3, r2
 9003 086c 9BB2     		uxth	r3, r3
 9004 086e 0A33     		adds	r3, r3, #10
 9005 0870 9AB2     		uxth	r2, r3
 9006 0872 304B     		ldr	r3, .L377+12
 9007 0874 1A80     		strh	r2, [r3]	@ movhi
2039:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 9008              		.loc 1 2039 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 197


 9009 0876 2F4B     		ldr	r3, .L377+12
 9010 0878 1B88     		ldrh	r3, [r3]	@ movhi
 9011 087a 9AB2     		uxth	r2, r3
 9012 087c 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 9013 0880 1146     		mov	r1, r2
 9014 0882 1846     		mov	r0, r3
 9015 0884 FFF7FEFF 		bl	EEPROM_WriteByte
 9016 0888 0346     		mov	r3, r0
 9017 088a DAB2     		uxtb	r2, r3
 9018 088c 2A4B     		ldr	r3, .L377+16
 9019 088e 1A70     		strb	r2, [r3]
2040:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 9020              		.loc 1 2040 0 discriminator 3
 9021 0890 284B     		ldr	r3, .L377+12
 9022 0892 1B88     		ldrh	r3, [r3]	@ movhi
 9023 0894 9BB2     		uxth	r3, r3
 9024 0896 0133     		adds	r3, r3, #1
 9025 0898 9AB2     		uxth	r2, r3
 9026 089a 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 9027 089e 1146     		mov	r1, r2
 9028 08a0 1846     		mov	r0, r3
 9029 08a2 FFF7FEFF 		bl	EEPROM_WriteByte
 9030 08a6 0346     		mov	r3, r0
 9031 08a8 DAB2     		uxtb	r2, r3
 9032 08aa 234B     		ldr	r3, .L377+16
 9033 08ac 1A70     		strb	r2, [r3]
2041:main.c        ****                     currentFloat++;
 9034              		.loc 1 2041 0 discriminator 3
 9035 08ae 234B     		ldr	r3, .L377+20
 9036 08b0 1B68     		ldr	r3, [r3]
 9037 08b2 0133     		adds	r3, r3, #1
 9038 08b4 214A     		ldr	r2, .L377+20
 9039 08b6 1360     		str	r3, [r2]
2042:main.c        ****                     i = i+5;
 9040              		.loc 1 2042 0 discriminator 3
 9041 08b8 3B6C     		ldr	r3, [r7, #64]
 9042 08ba 0533     		adds	r3, r3, #5
 9043 08bc 3B64     		str	r3, [r7, #64]
 9044              	.LBE61:
2022:main.c        ****                 {
 9045              		.loc 1 2022 0 discriminator 3
 9046 08be BB6B     		ldr	r3, [r7, #56]
 9047 08c0 0133     		adds	r3, r3, #1
 9048 08c2 BB63     		str	r3, [r7, #56]
 9049              	.L355:
2022:main.c        ****                 {
 9050              		.loc 1 2022 0 is_stmt 0 discriminator 1
 9051 08c4 BB6B     		ldr	r3, [r7, #56]
 9052 08c6 0B2B     		cmp	r3, #11
 9053 08c8 7FF664AF 		bls	.L356
 9054              	.LBE60:
 9055              	.LBE59:
2019:main.c        ****             {
 9056              		.loc 1 2019 0 is_stmt 1 discriminator 2
 9057 08cc FB6B     		ldr	r3, [r7, #60]
 9058 08ce 0133     		adds	r3, r3, #1
 9059 08d0 FB63     		str	r3, [r7, #60]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 198


 9060              	.L354:
2019:main.c        ****             {
 9061              		.loc 1 2019 0 is_stmt 0 discriminator 1
 9062 08d2 FB6B     		ldr	r3, [r7, #60]
 9063 08d4 0A2B     		cmp	r3, #10
 9064 08d6 7FF621AF 		bls	.L357
 9065              	.L353:
 9066              	.LBE58:
2017:main.c        ****         {
 9067              		.loc 1 2017 0 is_stmt 1
 9068 08da 194B     		ldr	r3, .L377+24
 9069 08dc 1B68     		ldr	r3, [r3]
 9070 08de 3A6C     		ldr	r2, [r7, #64]
 9071 08e0 9A42     		cmp	r2, r3
 9072 08e2 FFF418AF 		bcc	.L358
2043:main.c        ****                 }
2044:main.c        ****                 
2045:main.c        ****             }
2046:main.c        ****         }
2047:main.c        ****                         
2048:main.c        ****         
2049:main.c        ****         messageArraySize = currentFloat;
 9073              		.loc 1 2049 0
 9074 08e6 154B     		ldr	r3, .L377+20
 9075 08e8 1B68     		ldr	r3, [r3]
 9076 08ea 9AB2     		uxth	r2, r3
 9077 08ec 154B     		ldr	r3, .L377+28
 9078 08ee 1A80     		strh	r2, [r3]	@ movhi
2050:main.c        ****                     
2051:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 9079              		.loc 1 2051 0
 9080 08f0 144B     		ldr	r3, .L377+28
 9081 08f2 1B88     		ldrh	r3, [r3]
 9082 08f4 842B     		cmp	r3, #132
 9083 08f6 11D0     		beq	.L359
2052:main.c        ****         {
2053:main.c        ****             //error state
2054:main.c        ****             SPI_errors++;
 9084              		.loc 1 2054 0
 9085 08f8 134B     		ldr	r3, .L377+32
 9086 08fa 1B68     		ldr	r3, [r3]
 9087 08fc 0133     		adds	r3, r3, #1
 9088 08fe 124A     		ldr	r2, .L377+32
 9089 0900 1360     		str	r3, [r2]
2055:main.c        ****             sysexMessageInProgress = 0;
 9090              		.loc 1 2055 0
 9091 0902 124B     		ldr	r3, .L377+36
 9092 0904 0022     		movs	r2, #0
 9093 0906 1A70     		strb	r2, [r3]
2056:main.c        ****             sysexPointer = 0;
 9094              		.loc 1 2056 0
 9095 0908 0D4B     		ldr	r3, .L377+24
 9096 090a 0022     		movs	r2, #0
 9097 090c 1A60     		str	r2, [r3]
2057:main.c        ****             sendingMessage = 0;
 9098              		.loc 1 2057 0
 9099 090e 104B     		ldr	r3, .L377+40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 199


 9100 0910 0022     		movs	r2, #0
 9101 0912 1A70     		strb	r2, [r3]
2058:main.c        ****             parseThatMF = 0;
 9102              		.loc 1 2058 0
 9103 0914 0F4B     		ldr	r3, .L377+44
 9104 0916 0022     		movs	r2, #0
 9105 0918 1A70     		strb	r2, [r3]
 9106 091a 87E1     		b	.L349
 9107              	.L359:
2059:main.c        ****         } 
2060:main.c        ****         else 
2061:main.c        ****         {
2062:main.c        ****             sysexMessageInProgress = 0;
 9108              		.loc 1 2062 0
 9109 091c 0B4B     		ldr	r3, .L377+36
 9110 091e 0022     		movs	r2, #0
 9111 0920 1A70     		strb	r2, [r3]
2063:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2064:main.c        ****             
2065:main.c        ****             displayCurrentPresetNameAndCopedent();
 9112              		.loc 1 2065 0
 9113 0922 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 9114 0926 81E1     		b	.L349
 9115              	.L378:
 9116              		.align	2
 9117              	.L377:
 9118 0928 00000000 		.word	sysexBuffer
 9119 092c 00000000 		.word	copedentNumberToWrite
 9120 0930 00000000 		.word	copedent
 9121 0934 00000000 		.word	checkBase
 9122 0938 00000000 		.word	checkStatus
 9123 093c 00000000 		.word	currentFloat
 9124 0940 00000000 		.word	sysexPointer
 9125 0944 00000000 		.word	messageArraySize
 9126 0948 00000000 		.word	SPI_errors
 9127 094c 00000000 		.word	sysexMessageInProgress
 9128 0950 00000000 		.word	sendingMessage
 9129 0954 00000000 		.word	parseThatMF
 9130              	.L350:
 9131              	.LBE56:
2066:main.c        ****         }
2067:main.c        ****     }
2068:main.c        ****     
2069:main.c        ****     
2070:main.c        ****     else if (sysexBuffer[0] == 3) //it's a real-time parameter change
 9132              		.loc 1 2070 0
 9133 0958 9F4B     		ldr	r3, .L379
 9134 095a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9135 095c 032B     		cmp	r3, #3
 9136 095e 40F08B80 		bne	.L361
 9137              	.LBB62:
2071:main.c        ****     {
2072:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 9138              		.loc 1 2072 0
 9139 0962 9E4B     		ldr	r3, .L379+4
 9140 0964 0122     		movs	r2, #1
 9141 0966 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 200


2073:main.c        ****         union breakFloat theVal;
2074:main.c        ****         uint32_t i = 2;
 9142              		.loc 1 2074 0
 9143 0968 0223     		movs	r3, #2
 9144 096a 3B62     		str	r3, [r7, #32]
2075:main.c        ****         
2076:main.c        ****         //get the parameter ID
2077:main.c        ****         theVal.u32 = 0;
 9145              		.loc 1 2077 0
 9146 096c 0023     		movs	r3, #0
 9147 096e BB60     		str	r3, [r7, #8]
2078:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 9148              		.loc 1 2078 0
 9149 0970 BB68     		ldr	r3, [r7, #8]
 9150 0972 9949     		ldr	r1, .L379
 9151 0974 3A6A     		ldr	r2, [r7, #32]
 9152 0976 0A44     		add	r2, r2, r1
 9153 0978 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9154 097a 1207     		lsls	r2, r2, #28
 9155 097c 1343     		orrs	r3, r3, r2
 9156 097e BB60     		str	r3, [r7, #8]
2079:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 9157              		.loc 1 2079 0
 9158 0980 BB68     		ldr	r3, [r7, #8]
 9159 0982 3A6A     		ldr	r2, [r7, #32]
 9160 0984 0132     		adds	r2, r2, #1
 9161 0986 9449     		ldr	r1, .L379
 9162 0988 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9163 098a 5205     		lsls	r2, r2, #21
 9164 098c 1343     		orrs	r3, r3, r2
 9165 098e BB60     		str	r3, [r7, #8]
2080:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 9166              		.loc 1 2080 0
 9167 0990 BB68     		ldr	r3, [r7, #8]
 9168 0992 3A6A     		ldr	r2, [r7, #32]
 9169 0994 0232     		adds	r2, r2, #2
 9170 0996 9049     		ldr	r1, .L379
 9171 0998 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9172 099a 9203     		lsls	r2, r2, #14
 9173 099c 1343     		orrs	r3, r3, r2
 9174 099e BB60     		str	r3, [r7, #8]
2081:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 9175              		.loc 1 2081 0
 9176 09a0 BB68     		ldr	r3, [r7, #8]
 9177 09a2 3A6A     		ldr	r2, [r7, #32]
 9178 09a4 0332     		adds	r2, r2, #3
 9179 09a6 8C49     		ldr	r1, .L379
 9180 09a8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9181 09aa D201     		lsls	r2, r2, #7
 9182 09ac 1343     		orrs	r3, r3, r2
 9183 09ae BB60     		str	r3, [r7, #8]
2082:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9184              		.loc 1 2082 0
 9185 09b0 BA68     		ldr	r2, [r7, #8]
 9186 09b2 3B6A     		ldr	r3, [r7, #32]
 9187 09b4 0433     		adds	r3, r3, #4
 9188 09b6 8849     		ldr	r1, .L379
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 201


 9189 09b8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9190 09ba 03F07F03 		and	r3, r3, #127
 9191 09be 1343     		orrs	r3, r3, r2
 9192 09c0 BB60     		str	r3, [r7, #8]
2083:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 9193              		.loc 1 2083 0
 9194 09c2 BB68     		ldr	r3, [r7, #8]	@ float
 9195 09c4 1846     		mov	r0, r3
 9196 09c6 FFF7FEFF 		bl	roundf
 9197 09ca 0346     		mov	r3, r0
 9198 09cc 1846     		mov	r0, r3
 9199 09ce FFF7FEFF 		bl	__aeabi_f2uiz
 9200 09d2 0346     		mov	r3, r0
 9201 09d4 FB83     		strh	r3, [r7, #30]	@ movhi
2084:main.c        ****         singleParamToUpdateHigh = (roundedIndex << 8);
 9202              		.loc 1 2084 0
 9203 09d6 824B     		ldr	r3, .L379+8
 9204 09d8 0022     		movs	r2, #0
 9205 09da 1A70     		strb	r2, [r3]
2085:main.c        ****         singleParamToUpdateLow = roundedIndex & 0xff;
 9206              		.loc 1 2085 0
 9207 09dc FB8B     		ldrh	r3, [r7, #30]	@ movhi
 9208 09de DAB2     		uxtb	r2, r3
 9209 09e0 804B     		ldr	r3, .L379+12
 9210 09e2 1A70     		strb	r2, [r3]
2086:main.c        ****         
2087:main.c        ****         i = i+5;
 9211              		.loc 1 2087 0
 9212 09e4 3B6A     		ldr	r3, [r7, #32]
 9213 09e6 0533     		adds	r3, r3, #5
 9214 09e8 3B62     		str	r3, [r7, #32]
2088:main.c        ****         
2089:main.c        ****         //get the parameter value
2090:main.c        ****         theVal.u32 = 0;
 9215              		.loc 1 2090 0
 9216 09ea 0023     		movs	r3, #0
 9217 09ec BB60     		str	r3, [r7, #8]
2091:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 9218              		.loc 1 2091 0
 9219 09ee BB68     		ldr	r3, [r7, #8]
 9220 09f0 7949     		ldr	r1, .L379
 9221 09f2 3A6A     		ldr	r2, [r7, #32]
 9222 09f4 0A44     		add	r2, r2, r1
 9223 09f6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9224 09f8 1207     		lsls	r2, r2, #28
 9225 09fa 1343     		orrs	r3, r3, r2
 9226 09fc BB60     		str	r3, [r7, #8]
2092:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 9227              		.loc 1 2092 0
 9228 09fe BB68     		ldr	r3, [r7, #8]
 9229 0a00 3A6A     		ldr	r2, [r7, #32]
 9230 0a02 0132     		adds	r2, r2, #1
 9231 0a04 7449     		ldr	r1, .L379
 9232 0a06 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9233 0a08 5205     		lsls	r2, r2, #21
 9234 0a0a 1343     		orrs	r3, r3, r2
 9235 0a0c BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 202


2093:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 9236              		.loc 1 2093 0
 9237 0a0e BB68     		ldr	r3, [r7, #8]
 9238 0a10 3A6A     		ldr	r2, [r7, #32]
 9239 0a12 0232     		adds	r2, r2, #2
 9240 0a14 7049     		ldr	r1, .L379
 9241 0a16 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9242 0a18 9203     		lsls	r2, r2, #14
 9243 0a1a 1343     		orrs	r3, r3, r2
 9244 0a1c BB60     		str	r3, [r7, #8]
2094:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 9245              		.loc 1 2094 0
 9246 0a1e BB68     		ldr	r3, [r7, #8]
 9247 0a20 3A6A     		ldr	r2, [r7, #32]
 9248 0a22 0332     		adds	r2, r2, #3
 9249 0a24 6C49     		ldr	r1, .L379
 9250 0a26 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9251 0a28 D201     		lsls	r2, r2, #7
 9252 0a2a 1343     		orrs	r3, r3, r2
 9253 0a2c BB60     		str	r3, [r7, #8]
2095:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9254              		.loc 1 2095 0
 9255 0a2e BA68     		ldr	r2, [r7, #8]
 9256 0a30 3B6A     		ldr	r3, [r7, #32]
 9257 0a32 0433     		adds	r3, r3, #4
 9258 0a34 6849     		ldr	r1, .L379
 9259 0a36 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9260 0a38 03F07F03 		and	r3, r3, #127
 9261 0a3c 1343     		orrs	r3, r3, r2
 9262 0a3e BB60     		str	r3, [r7, #8]
2096:main.c        ****         
2097:main.c        ****         uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 9263              		.loc 1 2097 0
 9264 0a40 BB68     		ldr	r3, [r7, #8]	@ float
 9265 0a42 6949     		ldr	r1, .L379+16
 9266 0a44 1846     		mov	r0, r3
 9267 0a46 FFF7FEFF 		bl	__aeabi_fmul
 9268 0a4a 0346     		mov	r3, r0
 9269 0a4c 1846     		mov	r0, r3
 9270 0a4e FFF7FEFF 		bl	__aeabi_f2uiz
 9271 0a52 0346     		mov	r3, r0
 9272 0a54 BB83     		strh	r3, [r7, #28]	@ movhi
2098:main.c        ****         singleParamValueHigh = intVal >> 8;
 9273              		.loc 1 2098 0
 9274 0a56 BB8B     		ldrh	r3, [r7, #28]
 9275 0a58 1B0A     		lsrs	r3, r3, #8
 9276 0a5a 9BB2     		uxth	r3, r3
 9277 0a5c DAB2     		uxtb	r2, r3
 9278 0a5e 634B     		ldr	r3, .L379+20
 9279 0a60 1A70     		strb	r2, [r3]
2099:main.c        ****         singleParamValueLow = intVal & 0xff;
 9280              		.loc 1 2099 0
 9281 0a62 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 9282 0a64 DAB2     		uxtb	r2, r3
 9283 0a66 624B     		ldr	r3, .L379+24
 9284 0a68 1A70     		strb	r2, [r3]
2100:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 203


2101:main.c        ****         sysexMessageInProgress = 0;
 9285              		.loc 1 2101 0
 9286 0a6a 5C4B     		ldr	r3, .L379+4
 9287 0a6c 0022     		movs	r2, #0
 9288 0a6e 1A70     		strb	r2, [r3]
2102:main.c        ****         sendSingleParamUpdate = 1;
 9289              		.loc 1 2102 0
 9290 0a70 604B     		ldr	r3, .L379+28
 9291 0a72 0122     		movs	r2, #1
 9292 0a74 1A70     		strb	r2, [r3]
 9293              	.LBE62:
 9294 0a76 D9E0     		b	.L349
 9295              	.L361:
2103:main.c        ****     }
2104:main.c        ****     
2105:main.c        ****      else if (sysexBuffer[0] == 4) //it's a real-time mapping change
 9296              		.loc 1 2105 0
 9297 0a78 574B     		ldr	r3, .L379
 9298 0a7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9299 0a7c 042B     		cmp	r3, #4
 9300 0a7e 40F0D580 		bne	.L349
 9301              	.LBB63:
2106:main.c        ****     {
2107:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 9302              		.loc 1 2107 0
 9303 0a82 564B     		ldr	r3, .L379+4
 9304 0a84 0122     		movs	r2, #1
 9305 0a86 1A70     		strb	r2, [r3]
2108:main.c        ****         union breakFloat theVal;
2109:main.c        ****         uint32_t i = 2;
 9306              		.loc 1 2109 0
 9307 0a88 0223     		movs	r3, #2
 9308 0a8a BB61     		str	r3, [r7, #24]
2110:main.c        ****         
2111:main.c        ****         //get the destination number
2112:main.c        ****         theVal.u32 = 0;
 9309              		.loc 1 2112 0
 9310 0a8c 0023     		movs	r3, #0
 9311 0a8e 7B60     		str	r3, [r7, #4]
2113:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 9312              		.loc 1 2113 0
 9313 0a90 7B68     		ldr	r3, [r7, #4]
 9314 0a92 5149     		ldr	r1, .L379
 9315 0a94 BA69     		ldr	r2, [r7, #24]
 9316 0a96 0A44     		add	r2, r2, r1
 9317 0a98 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9318 0a9a 1207     		lsls	r2, r2, #28
 9319 0a9c 1343     		orrs	r3, r3, r2
 9320 0a9e 7B60     		str	r3, [r7, #4]
2114:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 9321              		.loc 1 2114 0
 9322 0aa0 7B68     		ldr	r3, [r7, #4]
 9323 0aa2 BA69     		ldr	r2, [r7, #24]
 9324 0aa4 0132     		adds	r2, r2, #1
 9325 0aa6 4C49     		ldr	r1, .L379
 9326 0aa8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9327 0aaa 5205     		lsls	r2, r2, #21
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 204


 9328 0aac 1343     		orrs	r3, r3, r2
 9329 0aae 7B60     		str	r3, [r7, #4]
2115:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 9330              		.loc 1 2115 0
 9331 0ab0 7B68     		ldr	r3, [r7, #4]
 9332 0ab2 BA69     		ldr	r2, [r7, #24]
 9333 0ab4 0232     		adds	r2, r2, #2
 9334 0ab6 4849     		ldr	r1, .L379
 9335 0ab8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9336 0aba 9203     		lsls	r2, r2, #14
 9337 0abc 1343     		orrs	r3, r3, r2
 9338 0abe 7B60     		str	r3, [r7, #4]
2116:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 9339              		.loc 1 2116 0
 9340 0ac0 7B68     		ldr	r3, [r7, #4]
 9341 0ac2 BA69     		ldr	r2, [r7, #24]
 9342 0ac4 0332     		adds	r2, r2, #3
 9343 0ac6 4449     		ldr	r1, .L379
 9344 0ac8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9345 0aca D201     		lsls	r2, r2, #7
 9346 0acc 1343     		orrs	r3, r3, r2
 9347 0ace 7B60     		str	r3, [r7, #4]
2117:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9348              		.loc 1 2117 0
 9349 0ad0 7A68     		ldr	r2, [r7, #4]
 9350 0ad2 BB69     		ldr	r3, [r7, #24]
 9351 0ad4 0433     		adds	r3, r3, #4
 9352 0ad6 4049     		ldr	r1, .L379
 9353 0ad8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9354 0ada 03F07F03 		and	r3, r3, #127
 9355 0ade 1343     		orrs	r3, r3, r2
 9356 0ae0 7B60     		str	r3, [r7, #4]
2118:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 9357              		.loc 1 2118 0
 9358 0ae2 7B68     		ldr	r3, [r7, #4]	@ float
 9359 0ae4 1846     		mov	r0, r3
 9360 0ae6 FFF7FEFF 		bl	roundf
 9361 0aea 0346     		mov	r3, r0
 9362 0aec 1846     		mov	r0, r3
 9363 0aee FFF7FEFF 		bl	__aeabi_f2uiz
 9364 0af2 0346     		mov	r3, r0
 9365 0af4 FB82     		strh	r3, [r7, #22]	@ movhi
2119:main.c        ****         mappingArray[0] = (roundedIndex << 8);
 9366              		.loc 1 2119 0
 9367 0af6 404B     		ldr	r3, .L379+32
 9368 0af8 0022     		movs	r2, #0
 9369 0afa 1A70     		strb	r2, [r3]
2120:main.c        ****         mappingArray[1] = roundedIndex & 0xff;
 9370              		.loc 1 2120 0
 9371 0afc FB8A     		ldrh	r3, [r7, #22]	@ movhi
 9372 0afe DAB2     		uxtb	r2, r3
 9373 0b00 3D4B     		ldr	r3, .L379+32
 9374 0b02 5A70     		strb	r2, [r3, #1]
2121:main.c        ****         
2122:main.c        ****         
2123:main.c        ****         mappingArray[2] = sysexBuffer[i+5]; //slot id
 9375              		.loc 1 2123 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 205


 9376 0b04 BB69     		ldr	r3, [r7, #24]
 9377 0b06 0533     		adds	r3, r3, #5
 9378 0b08 334A     		ldr	r2, .L379
 9379 0b0a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9380 0b0c 3A4B     		ldr	r3, .L379+32
 9381 0b0e 9A70     		strb	r2, [r3, #2]
2124:main.c        ****         mappingArray[3] = sysexBuffer[i+6]; //mapping change type
 9382              		.loc 1 2124 0
 9383 0b10 BB69     		ldr	r3, [r7, #24]
 9384 0b12 0633     		adds	r3, r3, #6
 9385 0b14 304A     		ldr	r2, .L379
 9386 0b16 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9387 0b18 374B     		ldr	r3, .L379+32
 9388 0b1a DA70     		strb	r2, [r3, #3]
2125:main.c        ****         
2126:main.c        ****         i = i+7;
 9389              		.loc 1 2126 0
 9390 0b1c BB69     		ldr	r3, [r7, #24]
 9391 0b1e 0733     		adds	r3, r3, #7
 9392 0b20 BB61     		str	r3, [r7, #24]
2127:main.c        ****         
2128:main.c        ****         //get the parameter value
2129:main.c        ****         theVal.u32 = 0;
 9393              		.loc 1 2129 0
 9394 0b22 0023     		movs	r3, #0
 9395 0b24 7B60     		str	r3, [r7, #4]
2130:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 9396              		.loc 1 2130 0
 9397 0b26 7B68     		ldr	r3, [r7, #4]
 9398 0b28 2B49     		ldr	r1, .L379
 9399 0b2a BA69     		ldr	r2, [r7, #24]
 9400 0b2c 0A44     		add	r2, r2, r1
 9401 0b2e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9402 0b30 1207     		lsls	r2, r2, #28
 9403 0b32 1343     		orrs	r3, r3, r2
 9404 0b34 7B60     		str	r3, [r7, #4]
2131:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 9405              		.loc 1 2131 0
 9406 0b36 7B68     		ldr	r3, [r7, #4]
 9407 0b38 BA69     		ldr	r2, [r7, #24]
 9408 0b3a 0132     		adds	r2, r2, #1
 9409 0b3c 2649     		ldr	r1, .L379
 9410 0b3e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9411 0b40 5205     		lsls	r2, r2, #21
 9412 0b42 1343     		orrs	r3, r3, r2
 9413 0b44 7B60     		str	r3, [r7, #4]
2132:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 9414              		.loc 1 2132 0
 9415 0b46 7B68     		ldr	r3, [r7, #4]
 9416 0b48 BA69     		ldr	r2, [r7, #24]
 9417 0b4a 0232     		adds	r2, r2, #2
 9418 0b4c 2249     		ldr	r1, .L379
 9419 0b4e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9420 0b50 9203     		lsls	r2, r2, #14
 9421 0b52 1343     		orrs	r3, r3, r2
 9422 0b54 7B60     		str	r3, [r7, #4]
2133:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 206


 9423              		.loc 1 2133 0
 9424 0b56 7B68     		ldr	r3, [r7, #4]
 9425 0b58 BA69     		ldr	r2, [r7, #24]
 9426 0b5a 0332     		adds	r2, r2, #3
 9427 0b5c 1E49     		ldr	r1, .L379
 9428 0b5e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9429 0b60 D201     		lsls	r2, r2, #7
 9430 0b62 1343     		orrs	r3, r3, r2
 9431 0b64 7B60     		str	r3, [r7, #4]
2134:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9432              		.loc 1 2134 0
 9433 0b66 7A68     		ldr	r2, [r7, #4]
 9434 0b68 BB69     		ldr	r3, [r7, #24]
 9435 0b6a 0433     		adds	r3, r3, #4
 9436 0b6c 1A49     		ldr	r1, .L379
 9437 0b6e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9438 0b70 03F07F03 		and	r3, r3, #127
 9439 0b74 1343     		orrs	r3, r3, r2
 9440 0b76 7B60     		str	r3, [r7, #4]
2135:main.c        ****         if (mappingArray[3] == 0) // source id
 9441              		.loc 1 2135 0
 9442 0b78 1F4B     		ldr	r3, .L379+32
 9443 0b7a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9444 0b7c 002B     		cmp	r3, #0
 9445 0b7e 10D1     		bne	.L362
2136:main.c        ****         {
2137:main.c        ****             mappingArray[4] = 0;
 9446              		.loc 1 2137 0
 9447 0b80 1D4B     		ldr	r3, .L379+32
 9448 0b82 0022     		movs	r2, #0
 9449 0b84 1A71     		strb	r2, [r3, #4]
2138:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 9450              		.loc 1 2138 0
 9451 0b86 7B68     		ldr	r3, [r7, #4]	@ float
 9452 0b88 1846     		mov	r0, r3
 9453 0b8a FFF7FEFF 		bl	roundf
 9454 0b8e 0346     		mov	r3, r0
 9455 0b90 1846     		mov	r0, r3
 9456 0b92 FFF7FEFF 		bl	__aeabi_f2iz
 9457 0b96 0346     		mov	r3, r0
 9458 0b98 1BB2     		sxth	r3, r3
 9459 0b9a DAB2     		uxtb	r2, r3
 9460 0b9c 164B     		ldr	r3, .L379+32
 9461 0b9e 5A71     		strb	r2, [r3, #5]
 9462 0ba0 3EE0     		b	.L363
 9463              	.L362:
2139:main.c        ****         }
2140:main.c        ****         else if (mappingArray[3] == 1) // amount
 9464              		.loc 1 2140 0
 9465 0ba2 154B     		ldr	r3, .L379+32
 9466 0ba4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9467 0ba6 012B     		cmp	r3, #1
 9468 0ba8 2AD1     		bne	.L364
 9469              	.LBB64:
2141:main.c        ****         {
2142:main.c        ****             int16_t intVal = (int16_t)(theVal.f * 32767.0f);
 9470              		.loc 1 2142 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 207


 9471 0baa 7B68     		ldr	r3, [r7, #4]	@ float
 9472 0bac 1349     		ldr	r1, .L379+36
 9473 0bae 1846     		mov	r0, r3
 9474 0bb0 FFF7FEFF 		bl	__aeabi_fmul
 9475 0bb4 0346     		mov	r3, r0
 9476 0bb6 1846     		mov	r0, r3
 9477 0bb8 FFF7FEFF 		bl	__aeabi_f2iz
 9478 0bbc 0346     		mov	r3, r0
 9479 0bbe BB82     		strh	r3, [r7, #20]	@ movhi
2143:main.c        ****             mappingArray[4] = intVal >> 8;
 9480              		.loc 1 2143 0
 9481 0bc0 B7F91430 		ldrsh	r3, [r7, #20]
 9482 0bc4 1B12     		asrs	r3, r3, #8
 9483 0bc6 1BB2     		sxth	r3, r3
 9484 0bc8 DAB2     		uxtb	r2, r3
 9485 0bca 0B4B     		ldr	r3, .L379+32
 9486 0bcc 1A71     		strb	r2, [r3, #4]
2144:main.c        ****             mappingArray[5] = intVal & 0xff;
 9487              		.loc 1 2144 0
 9488 0bce BB8A     		ldrh	r3, [r7, #20]	@ movhi
 9489 0bd0 DAB2     		uxtb	r2, r3
 9490 0bd2 094B     		ldr	r3, .L379+32
 9491 0bd4 5A71     		strb	r2, [r3, #5]
 9492              	.LBE64:
 9493 0bd6 23E0     		b	.L363
 9494              	.L380:
 9495              		.align	2
 9496              	.L379:
 9497 0bd8 00000000 		.word	sysexBuffer
 9498 0bdc 00000000 		.word	sysexMessageInProgress
 9499 0be0 00000000 		.word	singleParamToUpdateHigh
 9500 0be4 00000000 		.word	singleParamToUpdateLow
 9501 0be8 00FF7F47 		.word	1199570688
 9502 0bec 00000000 		.word	singleParamValueHigh
 9503 0bf0 00000000 		.word	singleParamValueLow
 9504 0bf4 00000000 		.word	sendSingleParamUpdate
 9505 0bf8 00000000 		.word	mappingArray
 9506 0bfc 00FEFF46 		.word	1191181824
 9507              	.L364:
2145:main.c        ****         }
2146:main.c        ****         else // scalar source
2147:main.c        ****         {
2148:main.c        ****             mappingArray[4] = 0;
 9508              		.loc 1 2148 0
 9509 0c00 114B     		ldr	r3, .L381
 9510 0c02 0022     		movs	r2, #0
 9511 0c04 1A71     		strb	r2, [r3, #4]
2149:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 9512              		.loc 1 2149 0
 9513 0c06 7B68     		ldr	r3, [r7, #4]	@ float
 9514 0c08 1846     		mov	r0, r3
 9515 0c0a FFF7FEFF 		bl	roundf
 9516 0c0e 0346     		mov	r3, r0
 9517 0c10 1846     		mov	r0, r3
 9518 0c12 FFF7FEFF 		bl	__aeabi_f2iz
 9519 0c16 0346     		mov	r3, r0
 9520 0c18 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 208


 9521 0c1a DAB2     		uxtb	r2, r3
 9522 0c1c 0A4B     		ldr	r3, .L381
 9523 0c1e 5A71     		strb	r2, [r3, #5]
 9524              	.L363:
2150:main.c        ****         }
2151:main.c        ****         
2152:main.c        ****         
2153:main.c        ****         sysexMessageInProgress = 0;
 9525              		.loc 1 2153 0
 9526 0c20 0A4B     		ldr	r3, .L381+4
 9527 0c22 0022     		movs	r2, #0
 9528 0c24 1A70     		strb	r2, [r3]
2154:main.c        ****         sendMappingChangeUpdate = 1;
 9529              		.loc 1 2154 0
 9530 0c26 0A4B     		ldr	r3, .L381+8
 9531 0c28 0122     		movs	r2, #1
 9532 0c2a 1A70     		strb	r2, [r3]
 9533              	.L349:
 9534              	.LBE63:
2155:main.c        ****     }
2156:main.c        **** 
2157:main.c        ****     parsingSysex = 0;
 9535              		.loc 1 2157 0
 9536 0c2c 094B     		ldr	r3, .L381+12
 9537 0c2e 0022     		movs	r2, #0
 9538 0c30 1A70     		strb	r2, [r3]
2158:main.c        ****     sysexPointer = 0;
 9539              		.loc 1 2158 0
 9540 0c32 094B     		ldr	r3, .L381+16
 9541 0c34 0022     		movs	r2, #0
 9542 0c36 1A60     		str	r2, [r3]
2159:main.c        ****     parseThatMF = 0;
 9543              		.loc 1 2159 0
 9544 0c38 084B     		ldr	r3, .L381+20
 9545 0c3a 0022     		movs	r2, #0
 9546 0c3c 1A70     		strb	r2, [r3]
2160:main.c        **** }
 9547              		.loc 1 2160 0
 9548 0c3e 00BF     		nop
 9549 0c40 5C37     		adds	r7, r7, #92
 9550              		.cfi_def_cfa_offset 12
 9551 0c42 BD46     		mov	sp, r7
 9552              		.cfi_def_cfa_register 13
 9553              		@ sp needed
 9554 0c44 90BD     		pop	{r4, r7, pc}
 9555              	.L382:
 9556 0c46 00BF     		.align	2
 9557              	.L381:
 9558 0c48 00000000 		.word	mappingArray
 9559 0c4c 00000000 		.word	sysexMessageInProgress
 9560 0c50 00000000 		.word	sendMappingChangeUpdate
 9561 0c54 00000000 		.word	parsingSysex
 9562 0c58 00000000 		.word	sysexPointer
 9563 0c5c 00000000 		.word	parseThatMF
 9564              		.cfi_endproc
 9565              	.LFE91:
 9566              		.size	parseSysex, .-parseSysex
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 209


 9567              		.comm	tempMIDI,4,4
 9568              		.global	firstSysex
 9569              		.bss
 9570              		.type	firstSysex, %object
 9571              		.size	firstSysex, 1
 9572              	firstSysex:
 9573 0104 00       		.space	1
 9574              		.global	sysexPointerMask
 9575              		.section	.rodata
 9576              		.align	1
 9577              		.type	sysexPointerMask, %object
 9578              		.size	sysexPointerMask, 2
 9579              	sysexPointerMask:
 9580 0428 FF07     		.short	2047
 9581              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 9582              		.align	2
 9583              		.global	USB_callbackLocalMidiEvent
 9584              		.thumb
 9585              		.thumb_func
 9586              		.type	USB_callbackLocalMidiEvent, %function
 9587              	USB_callbackLocalMidiEvent:
 9588              	.LFB92:
2161:main.c        **** 
2162:main.c        **** volatile uint8_t tempMIDI[4];
2163:main.c        **** volatile uint8_t firstSysex = 0;
2164:main.c        **** const uint16_t sysexPointerMask = 2047;
2165:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2166:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2167:main.c        **** {   
 9589              		.loc 1 2167 0
 9590              		.cfi_startproc
 9591              		@ args = 0, pretend = 0, frame = 16
 9592              		@ frame_needed = 1, uses_anonymous_args = 0
 9593 0000 80B5     		push	{r7, lr}
 9594              		.cfi_def_cfa_offset 8
 9595              		.cfi_offset 7, -8
 9596              		.cfi_offset 14, -4
 9597 0002 84B0     		sub	sp, sp, #16
 9598              		.cfi_def_cfa_offset 24
 9599 0004 00AF     		add	r7, sp, #0
 9600              		.cfi_def_cfa_register 7
 9601 0006 0346     		mov	r3, r0
 9602 0008 3960     		str	r1, [r7]
 9603 000a FB71     		strb	r3, [r7, #7]
2168:main.c        ****     tempMIDI[0] = midiMsg[0];
 9604              		.loc 1 2168 0
 9605 000c 3B68     		ldr	r3, [r7]
 9606 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9607 0010 484B     		ldr	r3, .L393
 9608 0012 1A70     		strb	r2, [r3]
2169:main.c        ****     tempMIDI[1] = midiMsg[1];
 9609              		.loc 1 2169 0
 9610 0014 3B68     		ldr	r3, [r7]
 9611 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 9612 0018 464B     		ldr	r3, .L393
 9613 001a 5A70     		strb	r2, [r3, #1]
2170:main.c        ****      tempMIDI[2] = midiMsg[2];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 210


 9614              		.loc 1 2170 0
 9615 001c 3B68     		ldr	r3, [r7]
 9616 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 9617 0020 444B     		ldr	r3, .L393
 9618 0022 9A70     		strb	r2, [r3, #2]
2171:main.c        ****      tempMIDI[3] = midiMsg[3];
 9619              		.loc 1 2171 0
 9620 0024 3B68     		ldr	r3, [r7]
 9621 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9622 0028 424B     		ldr	r3, .L393
 9623 002a DA70     		strb	r2, [r3, #3]
2172:main.c        ****     //check that we got here
2173:main.c        ****     
2174:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 9624              		.loc 1 2174 0
 9625 002c 424B     		ldr	r3, .L393+4
 9626 002e 1B78     		ldrb	r3, [r3]
 9627 0030 DBB2     		uxtb	r3, r3
 9628 0032 002B     		cmp	r3, #0
 9629 0034 7BD0     		beq	.L383
 9630              		.loc 1 2174 0 is_stmt 0 discriminator 1
 9631 0036 FFF7FEFF 		bl	USB_VBusPresent
 9632 003a 0346     		mov	r3, r0
 9633 003c 002B     		cmp	r3, #0
 9634 003e 76D0     		beq	.L383
2175:main.c        ****     {
2176:main.c        ****         if (receivingSysex)
 9635              		.loc 1 2176 0 is_stmt 1
 9636 0040 3E4B     		ldr	r3, .L393+8
 9637 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9638 0044 002B     		cmp	r3, #0
 9639 0046 29D0     		beq	.L385
 9640              	.LBB65:
2177:main.c        ****         {
2178:main.c        ****             for (int i = 0; i < 3; i++)
 9641              		.loc 1 2178 0
 9642 0048 0023     		movs	r3, #0
 9643 004a FB60     		str	r3, [r7, #12]
 9644 004c 22E0     		b	.L386
 9645              	.L389:
2179:main.c        ****             {
2180:main.c        ****                 if (midiMsg[i] < 128)
 9646              		.loc 1 2180 0
 9647 004e FB68     		ldr	r3, [r7, #12]
 9648 0050 3A68     		ldr	r2, [r7]
 9649 0052 1344     		add	r3, r3, r2
 9650 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9651 0056 5BB2     		sxtb	r3, r3
 9652 0058 002B     		cmp	r3, #0
 9653 005a 0EDB     		blt	.L387
2181:main.c        ****                 {
2182:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 9654              		.loc 1 2182 0
 9655 005c 384B     		ldr	r3, .L393+12
 9656 005e 1B68     		ldr	r3, [r3]
 9657 0060 5A1C     		adds	r2, r3, #1
 9658 0062 3749     		ldr	r1, .L393+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 211


 9659 0064 0A60     		str	r2, [r1]
 9660 0066 40F2FF72 		movw	r2, #2047
 9661 006a 1340     		ands	r3, r3, r2
 9662 006c FA68     		ldr	r2, [r7, #12]
 9663 006e 3968     		ldr	r1, [r7]
 9664 0070 0A44     		add	r2, r2, r1
 9665 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 9666 0074 334A     		ldr	r2, .L393+16
 9667 0076 D154     		strb	r1, [r2, r3]
 9668 0078 09E0     		b	.L388
 9669              	.L387:
2183:main.c        ****                 }
2184:main.c        ****                 else
2185:main.c        ****                 {
2186:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 9670              		.loc 1 2186 0
 9671 007a FB68     		ldr	r3, [r7, #12]
 9672 007c 3A68     		ldr	r2, [r7]
 9673 007e 1344     		add	r3, r3, r2
 9674 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9675 0082 F72B     		cmp	r3, #247
 9676 0084 03D1     		bne	.L388
2187:main.c        ****                     {
2188:main.c        ****                         receivingSysex = 0;
 9677              		.loc 1 2188 0
 9678 0086 2D4B     		ldr	r3, .L393+8
 9679 0088 0022     		movs	r2, #0
 9680 008a 1A70     		strb	r2, [r3]
2189:main.c        ****                         //parseSysex();
2190:main.c        ****                         return;
 9681              		.loc 1 2190 0
 9682 008c 4FE0     		b	.L383
 9683              	.L388:
2178:main.c        ****             {
 9684              		.loc 1 2178 0 discriminator 2
 9685 008e FB68     		ldr	r3, [r7, #12]
 9686 0090 0133     		adds	r3, r3, #1
 9687 0092 FB60     		str	r3, [r7, #12]
 9688              	.L386:
2178:main.c        ****             {
 9689              		.loc 1 2178 0 is_stmt 0 discriminator 1
 9690 0094 FB68     		ldr	r3, [r7, #12]
 9691 0096 022B     		cmp	r3, #2
 9692 0098 D9DD     		ble	.L389
 9693 009a 48E0     		b	.L383
 9694              	.L385:
 9695              	.LBE65:
2191:main.c        ****                      }
2192:main.c        ****                 }
2193:main.c        ****             }
2194:main.c        ****         }
2195:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 9696              		.loc 1 2195 0 is_stmt 1
 9697 009c 3B68     		ldr	r3, [r7]
 9698 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9699 00a0 F02B     		cmp	r3, #240
 9700 00a2 44D1     		bne	.L383
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 212


2196:main.c        ****         {
2197:main.c        ****             if (!parsingSysex)
 9701              		.loc 1 2197 0
 9702 00a4 284B     		ldr	r3, .L393+20
 9703 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9704 00a8 002B     		cmp	r3, #0
 9705 00aa 40D1     		bne	.L383
2198:main.c        ****             {
2199:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 9706              		.loc 1 2199 0
 9707 00ac 3B68     		ldr	r3, [r7]
 9708 00ae 0133     		adds	r3, r3, #1
 9709 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9710 00b2 7E2B     		cmp	r3, #126
 9711 00b4 03D1     		bne	.L391
2200:main.c        ****                 {
2201:main.c        ****                     parseThatMF = 1;
 9712              		.loc 1 2201 0
 9713 00b6 254B     		ldr	r3, .L393+24
 9714 00b8 0122     		movs	r2, #1
 9715 00ba 1A70     		strb	r2, [r3]
 9716 00bc 37E0     		b	.L383
 9717              	.L391:
2202:main.c        **** 
2203:main.c        ****                     //sysexPointer = 0;
2204:main.c        ****                 }
2205:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2 || midiMsg[1] == 3 |
 9718              		.loc 1 2205 0
 9719 00be 3B68     		ldr	r3, [r7]
 9720 00c0 0133     		adds	r3, r3, #1
 9721 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9722 00c4 002B     		cmp	r3, #0
 9723 00c6 13D0     		beq	.L392
 9724              		.loc 1 2205 0 is_stmt 0 discriminator 1
 9725 00c8 3B68     		ldr	r3, [r7]
 9726 00ca 0133     		adds	r3, r3, #1
 9727 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9728 00ce 012B     		cmp	r3, #1
 9729 00d0 0ED0     		beq	.L392
 9730              		.loc 1 2205 0 discriminator 2
 9731 00d2 3B68     		ldr	r3, [r7]
 9732 00d4 0133     		adds	r3, r3, #1
 9733 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9734 00d8 022B     		cmp	r3, #2
 9735 00da 09D0     		beq	.L392
 9736              		.loc 1 2205 0 discriminator 3
 9737 00dc 3B68     		ldr	r3, [r7]
 9738 00de 0133     		adds	r3, r3, #1
 9739 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9740 00e2 032B     		cmp	r3, #3
 9741 00e4 04D0     		beq	.L392
 9742              		.loc 1 2205 0 discriminator 4
 9743 00e6 3B68     		ldr	r3, [r7]
 9744 00e8 0133     		adds	r3, r3, #1
 9745 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9746 00ec 042B     		cmp	r3, #4
 9747 00ee 1ED1     		bne	.L383
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 213


 9748              	.L392:
2206:main.c        ****                 {
2207:main.c        ****                     receivingSysex = 1;
 9749              		.loc 1 2207 0 is_stmt 1
 9750 00f0 124B     		ldr	r3, .L393+8
 9751 00f2 0122     		movs	r2, #1
 9752 00f4 1A70     		strb	r2, [r3]
2208:main.c        ****                     
2209:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2210:main.c        ****                     if (sysexPointer == 0)
 9753              		.loc 1 2210 0
 9754 00f6 124B     		ldr	r3, .L393+12
 9755 00f8 1B68     		ldr	r3, [r3]
 9756 00fa 002B     		cmp	r3, #0
 9757 00fc 17D1     		bne	.L383
2211:main.c        ****                     {
2212:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 9758              		.loc 1 2212 0
 9759 00fe 104B     		ldr	r3, .L393+12
 9760 0100 1B68     		ldr	r3, [r3]
 9761 0102 5A1C     		adds	r2, r3, #1
 9762 0104 0E49     		ldr	r1, .L393+12
 9763 0106 0A60     		str	r2, [r1]
 9764 0108 40F2FF72 		movw	r2, #2047
 9765 010c 1340     		ands	r3, r3, r2
 9766 010e 3A68     		ldr	r2, [r7]
 9767 0110 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 9768 0112 0C4A     		ldr	r2, .L393+16
 9769 0114 D154     		strb	r1, [r2, r3]
2213:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 9770              		.loc 1 2213 0
 9771 0116 0A4B     		ldr	r3, .L393+12
 9772 0118 1B68     		ldr	r3, [r3]
 9773 011a 5A1C     		adds	r2, r3, #1
 9774 011c 0849     		ldr	r1, .L393+12
 9775 011e 0A60     		str	r2, [r1]
 9776 0120 40F2FF72 		movw	r2, #2047
 9777 0124 1340     		ands	r3, r3, r2
 9778 0126 3A68     		ldr	r2, [r7]
 9779 0128 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 9780 012a 064A     		ldr	r2, .L393+16
 9781 012c D154     		strb	r1, [r2, r3]
 9782              	.L383:
2214:main.c        ****                     }
2215:main.c        ****                 }
2216:main.c        ****             }
2217:main.c        ****         }
2218:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2219:main.c        ****     }
2220:main.c        **** }    
 9783              		.loc 1 2220 0
 9784 012e 1037     		adds	r7, r7, #16
 9785              		.cfi_def_cfa_offset 8
 9786 0130 BD46     		mov	sp, r7
 9787              		.cfi_def_cfa_register 13
 9788              		@ sp needed
 9789 0132 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 214


 9790              	.L394:
 9791              		.align	2
 9792              	.L393:
 9793 0134 00000000 		.word	tempMIDI
 9794 0138 00000000 		.word	USB_active
 9795 013c 00000000 		.word	receivingSysex
 9796 0140 00000000 		.word	sysexPointer
 9797 0144 00000000 		.word	sysexBuffer
 9798 0148 00000000 		.word	parsingSysex
 9799 014c 00000000 		.word	parseThatMF
 9800              		.cfi_endproc
 9801              	.LFE92:
 9802              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 9803              		.text
 9804              	.Letext0:
 9805              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9806              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9807              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 9808              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 9809              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9810              		.file 7 "oled.h"
 9811              		.file 8 "main.h"
 9812              		.file 9 "Generated_Source\\PSoC5/USB_midi.h"
 9813              		.file 10 "Generated_Source\\PSoC5/Em_EEPROM.h"
 9814              		.file 11 "Generated_Source\\PSoC5/I2C_1.h"
 9815              		.file 12 "Generated_Source\\PSoC5/core_cm3.h"
 9816              		.file 13 "Generated_Source\\PSoC5/Decoder_1.h"
 9817              		.file 14 "ui.h"
 9818              		.section	.debug_info,"",%progbits
 9819              	.Ldebug_info0:
 9820 0000 AC1F0000 		.4byte	0x1fac
 9821 0004 0400     		.2byte	0x4
 9822 0006 00000000 		.4byte	.Ldebug_abbrev0
 9823 000a 04       		.byte	0x4
 9824 000b 01       		.uleb128 0x1
 9825 000c 3B0A0000 		.4byte	.LASF335
 9826 0010 0C       		.byte	0xc
 9827 0011 9F0B0000 		.4byte	.LASF336
 9828 0015 35080000 		.4byte	.LASF337
 9829 0019 00000000 		.4byte	.Ldebug_ranges0+0
 9830 001d 00000000 		.4byte	0
 9831 0021 00000000 		.4byte	.Ldebug_line0
 9832 0025 02       		.uleb128 0x2
 9833 0026 0F0E0000 		.4byte	.LASF0
 9834 002a 02       		.byte	0x2
 9835 002b 1B       		.byte	0x1b
 9836 002c 30000000 		.4byte	0x30
 9837 0030 03       		.uleb128 0x3
 9838 0031 01       		.byte	0x1
 9839 0032 06       		.byte	0x6
 9840 0033 27040000 		.4byte	.LASF2
 9841 0037 02       		.uleb128 0x2
 9842 0038 69020000 		.4byte	.LASF1
 9843 003c 02       		.byte	0x2
 9844 003d 1D       		.byte	0x1d
 9845 003e 42000000 		.4byte	0x42
 9846 0042 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 215


 9847 0043 01       		.byte	0x1
 9848 0044 08       		.byte	0x8
 9849 0045 C2040000 		.4byte	.LASF3
 9850 0049 02       		.uleb128 0x2
 9851 004a 3D0F0000 		.4byte	.LASF4
 9852 004e 02       		.byte	0x2
 9853 004f 29       		.byte	0x29
 9854 0050 54000000 		.4byte	0x54
 9855 0054 03       		.uleb128 0x3
 9856 0055 02       		.byte	0x2
 9857 0056 05       		.byte	0x5
 9858 0057 4A100000 		.4byte	.LASF5
 9859 005b 02       		.uleb128 0x2
 9860 005c CC050000 		.4byte	.LASF6
 9861 0060 02       		.byte	0x2
 9862 0061 2B       		.byte	0x2b
 9863 0062 66000000 		.4byte	0x66
 9864 0066 03       		.uleb128 0x3
 9865 0067 02       		.byte	0x2
 9866 0068 07       		.byte	0x7
 9867 0069 34120000 		.4byte	.LASF7
 9868 006d 02       		.uleb128 0x2
 9869 006e 82120000 		.4byte	.LASF8
 9870 0072 02       		.byte	0x2
 9871 0073 3F       		.byte	0x3f
 9872 0074 78000000 		.4byte	0x78
 9873 0078 03       		.uleb128 0x3
 9874 0079 04       		.byte	0x4
 9875 007a 05       		.byte	0x5
 9876 007b E2020000 		.4byte	.LASF9
 9877 007f 02       		.uleb128 0x2
 9878 0080 320B0000 		.4byte	.LASF10
 9879 0084 02       		.byte	0x2
 9880 0085 41       		.byte	0x41
 9881 0086 8A000000 		.4byte	0x8a
 9882 008a 03       		.uleb128 0x3
 9883 008b 04       		.byte	0x4
 9884 008c 07       		.byte	0x7
 9885 008d D5080000 		.4byte	.LASF11
 9886 0091 03       		.uleb128 0x3
 9887 0092 08       		.byte	0x8
 9888 0093 05       		.byte	0x5
 9889 0094 3D0B0000 		.4byte	.LASF12
 9890 0098 03       		.uleb128 0x3
 9891 0099 08       		.byte	0x8
 9892 009a 07       		.byte	0x7
 9893 009b 2D0E0000 		.4byte	.LASF13
 9894 009f 04       		.uleb128 0x4
 9895 00a0 04       		.byte	0x4
 9896 00a1 05       		.byte	0x5
 9897 00a2 696E7400 		.ascii	"int\000"
 9898 00a6 03       		.uleb128 0x3
 9899 00a7 04       		.byte	0x4
 9900 00a8 07       		.byte	0x7
 9901 00a9 640C0000 		.4byte	.LASF14
 9902 00ad 02       		.uleb128 0x2
 9903 00ae 13000000 		.4byte	.LASF15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 216


 9904 00b2 03       		.byte	0x3
 9905 00b3 14       		.byte	0x14
 9906 00b4 25000000 		.4byte	0x25
 9907 00b8 02       		.uleb128 0x2
 9908 00b9 33040000 		.4byte	.LASF16
 9909 00bd 03       		.byte	0x3
 9910 00be 18       		.byte	0x18
 9911 00bf 37000000 		.4byte	0x37
 9912 00c3 02       		.uleb128 0x2
 9913 00c4 AC100000 		.4byte	.LASF17
 9914 00c8 03       		.byte	0x3
 9915 00c9 20       		.byte	0x20
 9916 00ca 49000000 		.4byte	0x49
 9917 00ce 02       		.uleb128 0x2
 9918 00cf 440E0000 		.4byte	.LASF18
 9919 00d3 03       		.byte	0x3
 9920 00d4 24       		.byte	0x24
 9921 00d5 5B000000 		.4byte	0x5b
 9922 00d9 02       		.uleb128 0x2
 9923 00da BC000000 		.4byte	.LASF19
 9924 00de 03       		.byte	0x3
 9925 00df 2C       		.byte	0x2c
 9926 00e0 6D000000 		.4byte	0x6d
 9927 00e4 02       		.uleb128 0x2
 9928 00e5 FA110000 		.4byte	.LASF20
 9929 00e9 03       		.byte	0x3
 9930 00ea 30       		.byte	0x30
 9931 00eb 7F000000 		.4byte	0x7f
 9932 00ef 05       		.uleb128 0x5
 9933 00f0 1B100000 		.4byte	.LASF21
 9934 00f4 04       		.byte	0x4
 9935 00f5 E901     		.2byte	0x1e9
 9936 00f7 42000000 		.4byte	0x42
 9937 00fb 05       		.uleb128 0x5
 9938 00fc 01130000 		.4byte	.LASF22
 9939 0100 04       		.byte	0x4
 9940 0101 EA01     		.2byte	0x1ea
 9941 0103 66000000 		.4byte	0x66
 9942 0107 05       		.uleb128 0x5
 9943 0108 12010000 		.4byte	.LASF23
 9944 010c 04       		.byte	0x4
 9945 010d EB01     		.2byte	0x1eb
 9946 010f 8A000000 		.4byte	0x8a
 9947 0113 03       		.uleb128 0x3
 9948 0114 04       		.byte	0x4
 9949 0115 04       		.byte	0x4
 9950 0116 0F0C0000 		.4byte	.LASF24
 9951 011a 03       		.uleb128 0x3
 9952 011b 08       		.byte	0x8
 9953 011c 04       		.byte	0x4
 9954 011d 980B0000 		.4byte	.LASF25
 9955 0121 03       		.uleb128 0x3
 9956 0122 01       		.byte	0x1
 9957 0123 08       		.byte	0x8
 9958 0124 85050000 		.4byte	.LASF26
 9959 0128 05       		.uleb128 0x5
 9960 0129 F70C0000 		.4byte	.LASF27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 217


 9961 012d 04       		.byte	0x4
 9962 012e 8B02     		.2byte	0x28b
 9963 0130 8A000000 		.4byte	0x8a
 9964 0134 05       		.uleb128 0x5
 9965 0135 CF0E0000 		.4byte	.LASF28
 9966 0139 04       		.byte	0x4
 9967 013a 9302     		.2byte	0x293
 9968 013c 40010000 		.4byte	0x140
 9969 0140 06       		.uleb128 0x6
 9970 0141 EF000000 		.4byte	0xef
 9971 0145 03       		.uleb128 0x3
 9972 0146 08       		.byte	0x8
 9973 0147 04       		.byte	0x4
 9974 0148 B00D0000 		.4byte	.LASF29
 9975 014c 03       		.uleb128 0x3
 9976 014d 04       		.byte	0x4
 9977 014e 07       		.byte	0x7
 9978 014f 31000000 		.4byte	.LASF30
 9979 0153 07       		.uleb128 0x7
 9980 0154 1C       		.byte	0x1c
 9981 0155 05       		.byte	0x5
 9982 0156 1601     		.2byte	0x116
 9983 0158 C5010000 		.4byte	0x1c5
 9984 015c 08       		.uleb128 0x8
 9985 015d 3B040000 		.4byte	.LASF31
 9986 0161 05       		.byte	0x5
 9987 0162 1B01     		.2byte	0x11b
 9988 0164 07010000 		.4byte	0x107
 9989 0168 00       		.byte	0
 9990 0169 08       		.uleb128 0x8
 9991 016a 2F020000 		.4byte	.LASF32
 9992 016e 05       		.byte	0x5
 9993 016f 2001     		.2byte	0x120
 9994 0171 07010000 		.4byte	0x107
 9995 0175 04       		.byte	0x4
 9996 0176 08       		.uleb128 0x8
 9997 0177 D2120000 		.4byte	.LASF33
 9998 017b 05       		.byte	0x5
 9999 017c 2301     		.2byte	0x123
 10000 017e 07010000 		.4byte	0x107
 10001 0182 08       		.byte	0x8
 10002 0183 08       		.uleb128 0x8
 10003 0184 E0100000 		.4byte	.LASF34
 10004 0188 05       		.byte	0x5
 10005 0189 2601     		.2byte	0x126
 10006 018b 07010000 		.4byte	0x107
 10007 018f 0C       		.byte	0xc
 10008 0190 08       		.uleb128 0x8
 10009 0191 FF100000 		.4byte	.LASF35
 10010 0195 05       		.byte	0x5
 10011 0196 2B01     		.2byte	0x12b
 10012 0198 07010000 		.4byte	0x107
 10013 019c 10       		.byte	0x10
 10014 019d 08       		.uleb128 0x8
 10015 019e 5B020000 		.4byte	.LASF36
 10016 01a2 05       		.byte	0x5
 10017 01a3 2E01     		.2byte	0x12e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 218


 10018 01a5 EF000000 		.4byte	0xef
 10019 01a9 14       		.byte	0x14
 10020 01aa 08       		.uleb128 0x8
 10021 01ab 7F0B0000 		.4byte	.LASF37
 10022 01af 05       		.byte	0x5
 10023 01b0 3301     		.2byte	0x133
 10024 01b2 EF000000 		.4byte	0xef
 10025 01b6 15       		.byte	0x15
 10026 01b7 08       		.uleb128 0x8
 10027 01b8 1C020000 		.4byte	.LASF38
 10028 01bc 05       		.byte	0x5
 10029 01bd 3601     		.2byte	0x136
 10030 01bf 07010000 		.4byte	0x107
 10031 01c3 18       		.byte	0x18
 10032 01c4 00       		.byte	0
 10033 01c5 05       		.uleb128 0x5
 10034 01c6 BD080000 		.4byte	.LASF39
 10035 01ca 05       		.byte	0x5
 10036 01cb 3701     		.2byte	0x137
 10037 01cd 53010000 		.4byte	0x153
 10038 01d1 09       		.uleb128 0x9
 10039 01d2 01       		.byte	0x1
 10040 01d3 42000000 		.4byte	0x42
 10041 01d7 05       		.byte	0x5
 10042 01d8 5401     		.2byte	0x154
 10043 01da FD010000 		.4byte	0x1fd
 10044 01de 0A       		.uleb128 0xa
 10045 01df A7000000 		.4byte	.LASF40
 10046 01e3 00       		.byte	0
 10047 01e4 0A       		.uleb128 0xa
 10048 01e5 EE060000 		.4byte	.LASF41
 10049 01e9 01       		.byte	0x1
 10050 01ea 0A       		.uleb128 0xa
 10051 01eb 02020000 		.4byte	.LASF42
 10052 01ef 02       		.byte	0x2
 10053 01f0 0A       		.uleb128 0xa
 10054 01f1 7E040000 		.4byte	.LASF43
 10055 01f5 03       		.byte	0x3
 10056 01f6 0A       		.uleb128 0xa
 10057 01f7 C7090000 		.4byte	.LASF44
 10058 01fb 04       		.byte	0x4
 10059 01fc 00       		.byte	0
 10060 01fd 05       		.uleb128 0x5
 10061 01fe 9C010000 		.4byte	.LASF45
 10062 0202 05       		.byte	0x5
 10063 0203 5A01     		.2byte	0x15a
 10064 0205 D1010000 		.4byte	0x1d1
 10065 0209 06       		.uleb128 0x6
 10066 020a B8000000 		.4byte	0xb8
 10067 020e 06       		.uleb128 0x6
 10068 020f CE000000 		.4byte	0xce
 10069 0213 02       		.uleb128 0x2
 10070 0214 44060000 		.4byte	.LASF46
 10071 0218 06       		.byte	0x6
 10072 0219 6C       		.byte	0x6c
 10073 021a A6000000 		.4byte	0xa6
 10074 021e 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 219


 10075 021f 94040000 		.4byte	.LASF52
 10076 0223 01       		.byte	0x1
 10077 0224 42000000 		.4byte	0x42
 10078 0228 07       		.byte	0x7
 10079 0229 1D       		.byte	0x1d
 10080 022a 4D020000 		.4byte	0x24d
 10081 022e 0A       		.uleb128 0xa
 10082 022f E50A0000 		.4byte	.LASF47
 10083 0233 00       		.byte	0
 10084 0234 0A       		.uleb128 0xa
 10085 0235 B1030000 		.4byte	.LASF48
 10086 0239 01       		.byte	0x1
 10087 023a 0A       		.uleb128 0xa
 10088 023b D6000000 		.4byte	.LASF49
 10089 023f 02       		.byte	0x2
 10090 0240 0A       		.uleb128 0xa
 10091 0241 72070000 		.4byte	.LASF50
 10092 0245 03       		.byte	0x3
 10093 0246 0A       		.uleb128 0xa
 10094 0247 94010000 		.4byte	.LASF51
 10095 024b 04       		.byte	0x4
 10096 024c 00       		.byte	0
 10097 024d 0B       		.uleb128 0xb
 10098 024e 3F070000 		.4byte	.LASF53
 10099 0252 01       		.byte	0x1
 10100 0253 42000000 		.4byte	0x42
 10101 0257 08       		.byte	0x8
 10102 0258 9E       		.byte	0x9e
 10103 0259 82020000 		.4byte	0x282
 10104 025d 0A       		.uleb128 0xa
 10105 025e 34070000 		.4byte	.LASF54
 10106 0262 00       		.byte	0
 10107 0263 0A       		.uleb128 0xa
 10108 0264 6E050000 		.4byte	.LASF55
 10109 0268 01       		.byte	0x1
 10110 0269 0A       		.uleb128 0xa
 10111 026a 470F0000 		.4byte	.LASF56
 10112 026e 02       		.byte	0x2
 10113 026f 0A       		.uleb128 0xa
 10114 0270 EA0E0000 		.4byte	.LASF57
 10115 0274 03       		.byte	0x3
 10116 0275 0A       		.uleb128 0xa
 10117 0276 6A120000 		.4byte	.LASF58
 10118 027a 04       		.byte	0x4
 10119 027b 0A       		.uleb128 0xa
 10120 027c 87020000 		.4byte	.LASF59
 10121 0280 05       		.byte	0x5
 10122 0281 00       		.byte	0
 10123 0282 0C       		.uleb128 0xc
 10124 0283 800E0000 		.4byte	.LASF338
 10125 0287 04       		.byte	0x4
 10126 0288 01       		.byte	0x1
 10127 0289 89       		.byte	0x89
 10128 028a AC020000 		.4byte	0x2ac
 10129 028e 0D       		.uleb128 0xd
 10130 028f 6600     		.ascii	"f\000"
 10131 0291 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 220


 10132 0292 8A       		.byte	0x8a
 10133 0293 13010000 		.4byte	0x113
 10134 0297 0D       		.uleb128 0xd
 10135 0298 6200     		.ascii	"b\000"
 10136 029a 01       		.byte	0x1
 10137 029b 8B       		.byte	0x8b
 10138 029c AC020000 		.4byte	0x2ac
 10139 02a0 0D       		.uleb128 0xd
 10140 02a1 75333200 		.ascii	"u32\000"
 10141 02a5 01       		.byte	0x1
 10142 02a6 8C       		.byte	0x8c
 10143 02a7 E4000000 		.4byte	0xe4
 10144 02ab 00       		.byte	0
 10145 02ac 0E       		.uleb128 0xe
 10146 02ad B8000000 		.4byte	0xb8
 10147 02b1 BC020000 		.4byte	0x2bc
 10148 02b5 0F       		.uleb128 0xf
 10149 02b6 4C010000 		.4byte	0x14c
 10150 02ba 03       		.byte	0x3
 10151 02bb 00       		.byte	0
 10152 02bc 10       		.uleb128 0x10
 10153 02bd 6D617000 		.ascii	"map\000"
 10154 02c1 01       		.byte	0x1
 10155 02c2 2501     		.2byte	0x125
 10156 02c4 13010000 		.4byte	0x113
 10157 02c8 00000000 		.4byte	.LFB64
 10158 02cc 56000000 		.4byte	.LFE64-.LFB64
 10159 02d0 01       		.uleb128 0x1
 10160 02d1 9C       		.byte	0x9c
 10161 02d2 22030000 		.4byte	0x322
 10162 02d6 11       		.uleb128 0x11
 10163 02d7 3F050000 		.4byte	.LASF60
 10164 02db 01       		.byte	0x1
 10165 02dc 2501     		.2byte	0x125
 10166 02de 13010000 		.4byte	0x113
 10167 02e2 02       		.uleb128 0x2
 10168 02e3 91       		.byte	0x91
 10169 02e4 6C       		.sleb128 -20
 10170 02e5 11       		.uleb128 0x11
 10171 02e6 43020000 		.4byte	.LASF61
 10172 02ea 01       		.byte	0x1
 10173 02eb 2501     		.2byte	0x125
 10174 02ed 13010000 		.4byte	0x113
 10175 02f1 02       		.uleb128 0x2
 10176 02f2 91       		.byte	0x91
 10177 02f3 68       		.sleb128 -24
 10178 02f4 11       		.uleb128 0x11
 10179 02f5 100A0000 		.4byte	.LASF62
 10180 02f9 01       		.byte	0x1
 10181 02fa 2501     		.2byte	0x125
 10182 02fc 13010000 		.4byte	0x113
 10183 0300 02       		.uleb128 0x2
 10184 0301 91       		.byte	0x91
 10185 0302 64       		.sleb128 -28
 10186 0303 11       		.uleb128 0x11
 10187 0304 DF090000 		.4byte	.LASF63
 10188 0308 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 221


 10189 0309 2501     		.2byte	0x125
 10190 030b 13010000 		.4byte	0x113
 10191 030f 02       		.uleb128 0x2
 10192 0310 91       		.byte	0x91
 10193 0311 60       		.sleb128 -32
 10194 0312 11       		.uleb128 0x11
 10195 0313 010C0000 		.4byte	.LASF64
 10196 0317 01       		.byte	0x1
 10197 0318 2501     		.2byte	0x125
 10198 031a 13010000 		.4byte	0x113
 10199 031e 02       		.uleb128 0x2
 10200 031f 91       		.byte	0x91
 10201 0320 00       		.sleb128 0
 10202 0321 00       		.byte	0
 10203 0322 12       		.uleb128 0x12
 10204 0323 08130000 		.4byte	.LASF65
 10205 0327 01       		.byte	0x1
 10206 0328 2A01     		.2byte	0x12a
 10207 032a 13010000 		.4byte	0x113
 10208 032e 00000000 		.4byte	.LFB65
 10209 0332 64000000 		.4byte	.LFE65-.LFB65
 10210 0336 01       		.uleb128 0x1
 10211 0337 9C       		.byte	0x9c
 10212 0338 6A030000 		.4byte	0x36a
 10213 033c 11       		.uleb128 0x11
 10214 033d 3F050000 		.4byte	.LASF60
 10215 0341 01       		.byte	0x1
 10216 0342 2A01     		.2byte	0x12a
 10217 0344 13010000 		.4byte	0x113
 10218 0348 02       		.uleb128 0x2
 10219 0349 91       		.byte	0x91
 10220 034a 6C       		.sleb128 -20
 10221 034b 11       		.uleb128 0x11
 10222 034c DF090000 		.4byte	.LASF63
 10223 0350 01       		.byte	0x1
 10224 0351 2A01     		.2byte	0x12a
 10225 0353 13010000 		.4byte	0x113
 10226 0357 02       		.uleb128 0x2
 10227 0358 91       		.byte	0x91
 10228 0359 68       		.sleb128 -24
 10229 035a 11       		.uleb128 0x11
 10230 035b 010C0000 		.4byte	.LASF64
 10231 035f 01       		.byte	0x1
 10232 0360 2A01     		.2byte	0x12a
 10233 0362 13010000 		.4byte	0x113
 10234 0366 02       		.uleb128 0x2
 10235 0367 91       		.byte	0x91
 10236 0368 64       		.sleb128 -28
 10237 0369 00       		.byte	0
 10238 036a 13       		.uleb128 0x13
 10239 036b 49060000 		.4byte	.LASF339
 10240 036f 01       		.byte	0x1
 10241 0370 2F01     		.2byte	0x12f
 10242 0372 00000000 		.4byte	.LFB66
 10243 0376 E8010000 		.4byte	.LFE66-.LFB66
 10244 037a 01       		.uleb128 0x1
 10245 037b 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 222


 10246 037c B3030000 		.4byte	0x3b3
 10247 0380 14       		.uleb128 0x14
 10248 0381 06000000 		.4byte	.LBB2
 10249 0385 EA000000 		.4byte	.LBE2-.LBB2
 10250 0389 9B030000 		.4byte	0x39b
 10251 038d 15       		.uleb128 0x15
 10252 038e 6900     		.ascii	"i\000"
 10253 0390 01       		.byte	0x1
 10254 0391 3101     		.2byte	0x131
 10255 0393 9F000000 		.4byte	0x9f
 10256 0397 02       		.uleb128 0x2
 10257 0398 91       		.byte	0x91
 10258 0399 74       		.sleb128 -12
 10259 039a 00       		.byte	0
 10260 039b 16       		.uleb128 0x16
 10261 039c F0000000 		.4byte	.LBB3
 10262 03a0 EC000000 		.4byte	.LBE3-.LBB3
 10263 03a4 15       		.uleb128 0x15
 10264 03a5 6900     		.ascii	"i\000"
 10265 03a7 01       		.byte	0x1
 10266 03a8 5501     		.2byte	0x155
 10267 03aa 9F000000 		.4byte	0x9f
 10268 03ae 02       		.uleb128 0x2
 10269 03af 91       		.byte	0x91
 10270 03b0 70       		.sleb128 -16
 10271 03b1 00       		.byte	0
 10272 03b2 00       		.byte	0
 10273 03b3 17       		.uleb128 0x17
 10274 03b4 1F120000 		.4byte	.LASF73
 10275 03b8 01       		.byte	0x1
 10276 03b9 7901     		.2byte	0x179
 10277 03bb 00000000 		.4byte	.LFB67
 10278 03bf 18010000 		.4byte	.LFE67-.LFB67
 10279 03c3 01       		.uleb128 0x1
 10280 03c4 9C       		.byte	0x9c
 10281 03c5 09040000 		.4byte	0x409
 10282 03c9 16       		.uleb128 0x16
 10283 03ca 06000000 		.4byte	.LBB4
 10284 03ce EA000000 		.4byte	.LBE4-.LBB4
 10285 03d2 15       		.uleb128 0x15
 10286 03d3 6900     		.ascii	"i\000"
 10287 03d5 01       		.byte	0x1
 10288 03d6 7C01     		.2byte	0x17c
 10289 03d8 9F000000 		.4byte	0x9f
 10290 03dc 02       		.uleb128 0x2
 10291 03dd 91       		.byte	0x91
 10292 03de 6C       		.sleb128 -20
 10293 03df 16       		.uleb128 0x16
 10294 03e0 0C000000 		.4byte	.LBB5
 10295 03e4 D8000000 		.4byte	.LBE5-.LBB5
 10296 03e8 18       		.uleb128 0x18
 10297 03e9 4A020000 		.4byte	.LASF66
 10298 03ed 01       		.byte	0x1
 10299 03ee 7F01     		.2byte	0x17f
 10300 03f0 13010000 		.4byte	0x113
 10301 03f4 02       		.uleb128 0x2
 10302 03f5 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 223


 10303 03f6 68       		.sleb128 -24
 10304 03f7 18       		.uleb128 0x18
 10305 03f8 21100000 		.4byte	.LASF67
 10306 03fc 01       		.byte	0x1
 10307 03fd 8001     		.2byte	0x180
 10308 03ff 13010000 		.4byte	0x113
 10309 0403 02       		.uleb128 0x2
 10310 0404 91       		.byte	0x91
 10311 0405 64       		.sleb128 -28
 10312 0406 00       		.byte	0
 10313 0407 00       		.byte	0
 10314 0408 00       		.byte	0
 10315 0409 19       		.uleb128 0x19
 10316 040a 0A0D0000 		.4byte	.LASF69
 10317 040e 01       		.byte	0x1
 10318 040f 8701     		.2byte	0x187
 10319 0411 00000000 		.4byte	.LFB68
 10320 0415 84000000 		.4byte	.LFE68-.LFB68
 10321 0419 01       		.uleb128 0x1
 10322 041a 9C       		.byte	0x9c
 10323 041b 12       		.uleb128 0x12
 10324 041c C2070000 		.4byte	.LASF68
 10325 0420 01       		.byte	0x1
 10326 0421 9601     		.2byte	0x196
 10327 0423 13010000 		.4byte	0x113
 10328 0427 00000000 		.4byte	.LFB69
 10329 042b 34000000 		.4byte	.LFE69-.LFB69
 10330 042f 01       		.uleb128 0x1
 10331 0430 9C       		.byte	0x9c
 10332 0431 43040000 		.4byte	0x443
 10333 0435 1A       		.uleb128 0x1a
 10334 0436 6600     		.ascii	"f\000"
 10335 0438 01       		.byte	0x1
 10336 0439 9601     		.2byte	0x196
 10337 043b 13010000 		.4byte	0x113
 10338 043f 02       		.uleb128 0x2
 10339 0440 91       		.byte	0x91
 10340 0441 74       		.sleb128 -12
 10341 0442 00       		.byte	0
 10342 0443 19       		.uleb128 0x19
 10343 0444 FA0A0000 		.4byte	.LASF70
 10344 0448 01       		.byte	0x1
 10345 0449 9D01     		.2byte	0x19d
 10346 044b 00000000 		.4byte	.LFB70
 10347 044f 7C000000 		.4byte	.LFE70-.LFB70
 10348 0453 01       		.uleb128 0x1
 10349 0454 9C       		.byte	0x9c
 10350 0455 19       		.uleb128 0x19
 10351 0456 B20C0000 		.4byte	.LASF71
 10352 045a 01       		.byte	0x1
 10353 045b BA01     		.2byte	0x1ba
 10354 045d 00000000 		.4byte	.LFB71
 10355 0461 14000000 		.4byte	.LFE71-.LFB71
 10356 0465 01       		.uleb128 0x1
 10357 0466 9C       		.byte	0x9c
 10358 0467 19       		.uleb128 0x19
 10359 0468 950E0000 		.4byte	.LASF72
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 224


 10360 046c 01       		.byte	0x1
 10361 046d C601     		.2byte	0x1c6
 10362 046f 00000000 		.4byte	.LFB72
 10363 0473 9C000000 		.4byte	.LFE72-.LFB72
 10364 0477 01       		.uleb128 0x1
 10365 0478 9C       		.byte	0x9c
 10366 0479 17       		.uleb128 0x17
 10367 047a 74040000 		.4byte	.LASF74
 10368 047e 01       		.byte	0x1
 10369 047f D401     		.2byte	0x1d4
 10370 0481 00000000 		.4byte	.LFB73
 10371 0485 5C010000 		.4byte	.LFE73-.LFB73
 10372 0489 01       		.uleb128 0x1
 10373 048a 9C       		.byte	0x9c
 10374 048b A7040000 		.4byte	0x4a7
 10375 048f 16       		.uleb128 0x16
 10376 0490 5A000000 		.4byte	.LBB6
 10377 0494 74000000 		.4byte	.LBE6-.LBB6
 10378 0498 15       		.uleb128 0x15
 10379 0499 6900     		.ascii	"i\000"
 10380 049b 01       		.byte	0x1
 10381 049c DA01     		.2byte	0x1da
 10382 049e 9F000000 		.4byte	0x9f
 10383 04a2 02       		.uleb128 0x2
 10384 04a3 91       		.byte	0x91
 10385 04a4 74       		.sleb128 -12
 10386 04a5 00       		.byte	0
 10387 04a6 00       		.byte	0
 10388 04a7 19       		.uleb128 0x19
 10389 04a8 D80C0000 		.4byte	.LASF75
 10390 04ac 01       		.byte	0x1
 10391 04ad EB01     		.2byte	0x1eb
 10392 04af 00000000 		.4byte	.LFB74
 10393 04b3 80000000 		.4byte	.LFE74-.LFB74
 10394 04b7 01       		.uleb128 0x1
 10395 04b8 9C       		.byte	0x9c
 10396 04b9 12       		.uleb128 0x12
 10397 04ba 64030000 		.4byte	.LASF76
 10398 04be 01       		.byte	0x1
 10399 04bf FC01     		.2byte	0x1fc
 10400 04c1 9F000000 		.4byte	0x9f
 10401 04c5 00000000 		.4byte	.LFB75
 10402 04c9 AC200000 		.4byte	.LFE75-.LFB75
 10403 04cd 01       		.uleb128 0x1
 10404 04ce 9C       		.byte	0x9c
 10405 04cf C8090000 		.4byte	0x9c8
 10406 04d3 18       		.uleb128 0x18
 10407 04d4 160A0000 		.4byte	.LASF77
 10408 04d8 01       		.byte	0x1
 10409 04d9 2D02     		.2byte	0x22d
 10410 04db CE000000 		.4byte	0xce
 10411 04df 03       		.uleb128 0x3
 10412 04e0 91       		.byte	0x91
 10413 04e1 EE7E     		.sleb128 -146
 10414 04e3 14       		.uleb128 0x14
 10415 04e4 BC010000 		.4byte	.LBB7
 10416 04e8 3C000000 		.4byte	.LBE7-.LBB7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 225


 10417 04ec FE040000 		.4byte	0x4fe
 10418 04f0 15       		.uleb128 0x15
 10419 04f1 6900     		.ascii	"i\000"
 10420 04f3 01       		.byte	0x1
 10421 04f4 2E02     		.2byte	0x22e
 10422 04f6 9F000000 		.4byte	0x9f
 10423 04fa 02       		.uleb128 0x2
 10424 04fb 91       		.byte	0x91
 10425 04fc 6C       		.sleb128 -20
 10426 04fd 00       		.byte	0
 10427 04fe 14       		.uleb128 0x14
 10428 04ff F8010000 		.4byte	.LBB8
 10429 0503 D4010000 		.4byte	.LBE8-.LBB8
 10430 0507 BA050000 		.4byte	0x5ba
 10431 050b 18       		.uleb128 0x18
 10432 050c E3040000 		.4byte	.LASF78
 10433 0510 01       		.byte	0x1
 10434 0511 3202     		.2byte	0x232
 10435 0513 9F000000 		.4byte	0x9f
 10436 0517 02       		.uleb128 0x2
 10437 0518 91       		.byte	0x91
 10438 0519 68       		.sleb128 -24
 10439 051a 14       		.uleb128 0x14
 10440 051b 00020000 		.4byte	.LBB9
 10441 051f 5C000000 		.4byte	.LBE9-.LBB9
 10442 0523 37050000 		.4byte	0x537
 10443 0527 18       		.uleb128 0x18
 10444 0528 49110000 		.4byte	.LASF79
 10445 052c 01       		.byte	0x1
 10446 052d 3402     		.2byte	0x234
 10447 052f 9F000000 		.4byte	0x9f
 10448 0533 02       		.uleb128 0x2
 10449 0534 91       		.byte	0x91
 10450 0535 64       		.sleb128 -28
 10451 0536 00       		.byte	0
 10452 0537 16       		.uleb128 0x16
 10453 0538 5C020000 		.4byte	.LBB10
 10454 053c 5C010000 		.4byte	.LBE10-.LBB10
 10455 0540 15       		.uleb128 0x15
 10456 0541 6900     		.ascii	"i\000"
 10457 0543 01       		.byte	0x1
 10458 0544 3802     		.2byte	0x238
 10459 0546 9F000000 		.4byte	0x9f
 10460 054a 02       		.uleb128 0x2
 10461 054b 91       		.byte	0x91
 10462 054c 60       		.sleb128 -32
 10463 054d 16       		.uleb128 0x16
 10464 054e 64020000 		.4byte	.LBB11
 10465 0552 40010000 		.4byte	.LBE11-.LBB11
 10466 0556 18       		.uleb128 0x18
 10467 0557 F4040000 		.4byte	.LASF80
 10468 055b 01       		.byte	0x1
 10469 055c 3A02     		.2byte	0x23a
 10470 055e 9F000000 		.4byte	0x9f
 10471 0562 03       		.uleb128 0x3
 10472 0563 91       		.byte	0x91
 10473 0564 E87E     		.sleb128 -152
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 226


 10474 0566 16       		.uleb128 0x16
 10475 0567 72020000 		.4byte	.LBB12
 10476 056b 32010000 		.4byte	.LBE12-.LBB12
 10477 056f 15       		.uleb128 0x15
 10478 0570 6A00     		.ascii	"j\000"
 10479 0572 01       		.byte	0x1
 10480 0573 3B02     		.2byte	0x23b
 10481 0575 9F000000 		.4byte	0x9f
 10482 0579 02       		.uleb128 0x2
 10483 057a 91       		.byte	0x91
 10484 057b 5C       		.sleb128 -36
 10485 057c 16       		.uleb128 0x16
 10486 057d D4020000 		.4byte	.LBB13
 10487 0581 BE000000 		.4byte	.LBE13-.LBB13
 10488 0585 18       		.uleb128 0x18
 10489 0586 18040000 		.4byte	.LASF81
 10490 058a 01       		.byte	0x1
 10491 058b 3E02     		.2byte	0x23e
 10492 058d 9F000000 		.4byte	0x9f
 10493 0591 03       		.uleb128 0x3
 10494 0592 91       		.byte	0x91
 10495 0593 E47E     		.sleb128 -156
 10496 0595 18       		.uleb128 0x18
 10497 0596 AF120000 		.4byte	.LASF82
 10498 059a 01       		.byte	0x1
 10499 059b 3F02     		.2byte	0x23f
 10500 059d CE000000 		.4byte	0xce
 10501 05a1 03       		.uleb128 0x3
 10502 05a2 91       		.byte	0x91
 10503 05a3 E27E     		.sleb128 -158
 10504 05a5 18       		.uleb128 0x18
 10505 05a6 660B0000 		.4byte	.LASF83
 10506 05aa 01       		.byte	0x1
 10507 05ab 4002     		.2byte	0x240
 10508 05ad CE000000 		.4byte	0xce
 10509 05b1 03       		.uleb128 0x3
 10510 05b2 91       		.byte	0x91
 10511 05b3 E07E     		.sleb128 -160
 10512 05b5 00       		.byte	0
 10513 05b6 00       		.byte	0
 10514 05b7 00       		.byte	0
 10515 05b8 00       		.byte	0
 10516 05b9 00       		.byte	0
 10517 05ba 14       		.uleb128 0x14
 10518 05bb CC030000 		.4byte	.LBB14
 10519 05bf A4000000 		.4byte	.LBE14-.LBB14
 10520 05c3 D5050000 		.4byte	0x5d5
 10521 05c7 15       		.uleb128 0x15
 10522 05c8 6900     		.ascii	"i\000"
 10523 05ca 01       		.byte	0x1
 10524 05cb 4702     		.2byte	0x247
 10525 05cd 9F000000 		.4byte	0x9f
 10526 05d1 02       		.uleb128 0x2
 10527 05d2 91       		.byte	0x91
 10528 05d3 58       		.sleb128 -40
 10529 05d4 00       		.byte	0
 10530 05d5 14       		.uleb128 0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 227


 10531 05d6 74040000 		.4byte	.LBB15
 10532 05da A6000000 		.4byte	.LBE15-.LBB15
 10533 05de F0050000 		.4byte	0x5f0
 10534 05e2 15       		.uleb128 0x15
 10535 05e3 6900     		.ascii	"i\000"
 10536 05e5 01       		.byte	0x1
 10537 05e6 4F02     		.2byte	0x24f
 10538 05e8 9F000000 		.4byte	0x9f
 10539 05ec 02       		.uleb128 0x2
 10540 05ed 91       		.byte	0x91
 10541 05ee 54       		.sleb128 -44
 10542 05ef 00       		.byte	0
 10543 05f0 14       		.uleb128 0x14
 10544 05f1 1A050000 		.4byte	.LBB16
 10545 05f5 2C010000 		.4byte	.LBE16-.LBB16
 10546 05f9 87060000 		.4byte	0x687
 10547 05fd 15       		.uleb128 0x15
 10548 05fe 6900     		.ascii	"i\000"
 10549 0600 01       		.byte	0x1
 10550 0601 5502     		.2byte	0x255
 10551 0603 9F000000 		.4byte	0x9f
 10552 0607 02       		.uleb128 0x2
 10553 0608 91       		.byte	0x91
 10554 0609 50       		.sleb128 -48
 10555 060a 14       		.uleb128 0x14
 10556 060b 22050000 		.4byte	.LBB17
 10557 060f 34000000 		.4byte	.LBE17-.LBB17
 10558 0613 25060000 		.4byte	0x625
 10559 0617 15       		.uleb128 0x15
 10560 0618 6A00     		.ascii	"j\000"
 10561 061a 01       		.byte	0x1
 10562 061b 5702     		.2byte	0x257
 10563 061d 9F000000 		.4byte	0x9f
 10564 0621 02       		.uleb128 0x2
 10565 0622 91       		.byte	0x91
 10566 0623 4C       		.sleb128 -52
 10567 0624 00       		.byte	0
 10568 0625 14       		.uleb128 0x14
 10569 0626 56050000 		.4byte	.LBB18
 10570 062a 5A000000 		.4byte	.LBE18-.LBB18
 10571 062e 57060000 		.4byte	0x657
 10572 0632 15       		.uleb128 0x15
 10573 0633 6A00     		.ascii	"j\000"
 10574 0635 01       		.byte	0x1
 10575 0636 5C02     		.2byte	0x25c
 10576 0638 9F000000 		.4byte	0x9f
 10577 063c 02       		.uleb128 0x2
 10578 063d 91       		.byte	0x91
 10579 063e 48       		.sleb128 -56
 10580 063f 16       		.uleb128 0x16
 10581 0640 5E050000 		.4byte	.LBB19
 10582 0644 40000000 		.4byte	.LBE19-.LBB19
 10583 0648 15       		.uleb128 0x15
 10584 0649 6B00     		.ascii	"k\000"
 10585 064b 01       		.byte	0x1
 10586 064c 5E02     		.2byte	0x25e
 10587 064e 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 228


 10588 0652 02       		.uleb128 0x2
 10589 0653 91       		.byte	0x91
 10590 0654 44       		.sleb128 -60
 10591 0655 00       		.byte	0
 10592 0656 00       		.byte	0
 10593 0657 16       		.uleb128 0x16
 10594 0658 B0050000 		.4byte	.LBB20
 10595 065c 76000000 		.4byte	.LBE20-.LBB20
 10596 0660 15       		.uleb128 0x15
 10597 0661 6A00     		.ascii	"j\000"
 10598 0663 01       		.byte	0x1
 10599 0664 6302     		.2byte	0x263
 10600 0666 9F000000 		.4byte	0x9f
 10601 066a 02       		.uleb128 0x2
 10602 066b 91       		.byte	0x91
 10603 066c 40       		.sleb128 -64
 10604 066d 16       		.uleb128 0x16
 10605 066e B8050000 		.4byte	.LBB21
 10606 0672 5C000000 		.4byte	.LBE21-.LBB21
 10607 0676 15       		.uleb128 0x15
 10608 0677 6B00     		.ascii	"k\000"
 10609 0679 01       		.byte	0x1
 10610 067a 6502     		.2byte	0x265
 10611 067c 9F000000 		.4byte	0x9f
 10612 0680 03       		.uleb128 0x3
 10613 0681 91       		.byte	0x91
 10614 0682 BC7F     		.sleb128 -68
 10615 0684 00       		.byte	0
 10616 0685 00       		.byte	0
 10617 0686 00       		.byte	0
 10618 0687 14       		.uleb128 0x14
 10619 0688 32070000 		.4byte	.LBB22
 10620 068c 42000000 		.4byte	.LBE22-.LBB22
 10621 0690 A3060000 		.4byte	0x6a3
 10622 0694 15       		.uleb128 0x15
 10623 0695 7700     		.ascii	"w\000"
 10624 0697 01       		.byte	0x1
 10625 0698 8902     		.2byte	0x289
 10626 069a 9F000000 		.4byte	0x9f
 10627 069e 03       		.uleb128 0x3
 10628 069f 91       		.byte	0x91
 10629 06a0 B87F     		.sleb128 -72
 10630 06a2 00       		.byte	0
 10631 06a3 14       		.uleb128 0x14
 10632 06a4 00080000 		.4byte	.LBB23
 10633 06a8 94000000 		.4byte	.LBE23-.LBB23
 10634 06ac C1060000 		.4byte	0x6c1
 10635 06b0 18       		.uleb128 0x18
 10636 06b1 4A090000 		.4byte	.LASF84
 10637 06b5 01       		.byte	0x1
 10638 06b6 BB02     		.2byte	0x2bb
 10639 06b8 B8000000 		.4byte	0xb8
 10640 06bc 03       		.uleb128 0x3
 10641 06bd 91       		.byte	0x91
 10642 06be DF7E     		.sleb128 -161
 10643 06c0 00       		.byte	0
 10644 06c1 14       		.uleb128 0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 229


 10645 06c2 8E0A0000 		.4byte	.LBB24
 10646 06c6 4C010000 		.4byte	.LBE24-.LBB24
 10647 06ca 17070000 		.4byte	0x717
 10648 06ce 15       		.uleb128 0x15
 10649 06cf 6900     		.ascii	"i\000"
 10650 06d1 01       		.byte	0x1
 10651 06d2 0603     		.2byte	0x306
 10652 06d4 9F000000 		.4byte	0x9f
 10653 06d8 03       		.uleb128 0x3
 10654 06d9 91       		.byte	0x91
 10655 06da B47F     		.sleb128 -76
 10656 06dc 16       		.uleb128 0x16
 10657 06dd 960A0000 		.4byte	.LBB25
 10658 06e1 30010000 		.4byte	.LBE25-.LBB25
 10659 06e5 18       		.uleb128 0x18
 10660 06e6 AD0F0000 		.4byte	.LASF85
 10661 06ea 01       		.byte	0x1
 10662 06eb 0803     		.2byte	0x308
 10663 06ed B8000000 		.4byte	0xb8
 10664 06f1 03       		.uleb128 0x3
 10665 06f2 91       		.byte	0x91
 10666 06f3 B67E     		.sleb128 -202
 10667 06f5 18       		.uleb128 0x18
 10668 06f6 42090000 		.4byte	.LASF86
 10669 06fa 01       		.byte	0x1
 10670 06fb 0903     		.2byte	0x309
 10671 06fd CE000000 		.4byte	0xce
 10672 0701 03       		.uleb128 0x3
 10673 0702 91       		.byte	0x91
 10674 0703 B47E     		.sleb128 -204
 10675 0705 18       		.uleb128 0x18
 10676 0706 BC030000 		.4byte	.LASF87
 10677 070a 01       		.byte	0x1
 10678 070b 0A03     		.2byte	0x30a
 10679 070d C3000000 		.4byte	0xc3
 10680 0711 03       		.uleb128 0x3
 10681 0712 91       		.byte	0x91
 10682 0713 B27E     		.sleb128 -206
 10683 0715 00       		.byte	0
 10684 0716 00       		.byte	0
 10685 0717 14       		.uleb128 0x14
 10686 0718 300D0000 		.4byte	.LBB26
 10687 071c 2A020000 		.4byte	.LBE26-.LBB26
 10688 0720 35070000 		.4byte	0x735
 10689 0724 18       		.uleb128 0x18
 10690 0725 64000000 		.4byte	.LASF88
 10691 0729 01       		.byte	0x1
 10692 072a 6B03     		.2byte	0x36b
 10693 072c C3000000 		.4byte	0xc3
 10694 0730 03       		.uleb128 0x3
 10695 0731 91       		.byte	0x91
 10696 0732 DC7E     		.sleb128 -164
 10697 0734 00       		.byte	0
 10698 0735 14       		.uleb128 0x14
 10699 0736 3E100000 		.4byte	.LBB27
 10700 073a B2020000 		.4byte	.LBE27-.LBB27
 10701 073e 69070000 		.4byte	0x769
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 230


 10702 0742 15       		.uleb128 0x15
 10703 0743 6900     		.ascii	"i\000"
 10704 0745 01       		.byte	0x1
 10705 0746 B803     		.2byte	0x3b8
 10706 0748 9F000000 		.4byte	0x9f
 10707 074c 03       		.uleb128 0x3
 10708 074d 91       		.byte	0x91
 10709 074e B07F     		.sleb128 -80
 10710 0750 16       		.uleb128 0x16
 10711 0751 78110000 		.4byte	.LBB28
 10712 0755 E0000000 		.4byte	.LBE28-.LBB28
 10713 0759 15       		.uleb128 0x15
 10714 075a 6A00     		.ascii	"j\000"
 10715 075c 01       		.byte	0x1
 10716 075d C503     		.2byte	0x3c5
 10717 075f 9F000000 		.4byte	0x9f
 10718 0763 03       		.uleb128 0x3
 10719 0764 91       		.byte	0x91
 10720 0765 AC7F     		.sleb128 -84
 10721 0767 00       		.byte	0
 10722 0768 00       		.byte	0
 10723 0769 14       		.uleb128 0x14
 10724 076a F8120000 		.4byte	.LBB29
 10725 076e 48000000 		.4byte	.LBE29-.LBB29
 10726 0772 85070000 		.4byte	0x785
 10727 0776 15       		.uleb128 0x15
 10728 0777 6900     		.ascii	"i\000"
 10729 0779 01       		.byte	0x1
 10730 077a DB03     		.2byte	0x3db
 10731 077c 9F000000 		.4byte	0x9f
 10732 0780 03       		.uleb128 0x3
 10733 0781 91       		.byte	0x91
 10734 0782 A87F     		.sleb128 -88
 10735 0784 00       		.byte	0
 10736 0785 14       		.uleb128 0x14
 10737 0786 44130000 		.4byte	.LBB30
 10738 078a D2000000 		.4byte	.LBE30-.LBB30
 10739 078e A1070000 		.4byte	0x7a1
 10740 0792 15       		.uleb128 0x15
 10741 0793 6900     		.ascii	"i\000"
 10742 0795 01       		.byte	0x1
 10743 0796 E703     		.2byte	0x3e7
 10744 0798 9F000000 		.4byte	0x9f
 10745 079c 03       		.uleb128 0x3
 10746 079d 91       		.byte	0x91
 10747 079e A47F     		.sleb128 -92
 10748 07a0 00       		.byte	0
 10749 07a1 14       		.uleb128 0x14
 10750 07a2 16140000 		.4byte	.LBB31
 10751 07a6 66040000 		.4byte	.LBE31-.LBB31
 10752 07aa 41080000 		.4byte	0x841
 10753 07ae 15       		.uleb128 0x15
 10754 07af 6900     		.ascii	"i\000"
 10755 07b1 01       		.byte	0x1
 10756 07b2 FD03     		.2byte	0x3fd
 10757 07b4 9F000000 		.4byte	0x9f
 10758 07b8 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 231


 10759 07b9 91       		.byte	0x91
 10760 07ba A07F     		.sleb128 -96
 10761 07bc 16       		.uleb128 0x16
 10762 07bd 1C140000 		.4byte	.LBB32
 10763 07c1 4C040000 		.4byte	.LBE32-.LBB32
 10764 07c5 18       		.uleb128 0x18
 10765 07c6 D70F0000 		.4byte	.LASF89
 10766 07ca 01       		.byte	0x1
 10767 07cb 0104     		.2byte	0x401
 10768 07cd 13010000 		.4byte	0x113
 10769 07d1 03       		.uleb128 0x3
 10770 07d2 91       		.byte	0x91
 10771 07d3 9C7F     		.sleb128 -100
 10772 07d5 18       		.uleb128 0x18
 10773 07d6 5E0E0000 		.4byte	.LASF90
 10774 07da 01       		.byte	0x1
 10775 07db 1804     		.2byte	0x418
 10776 07dd 13010000 		.4byte	0x113
 10777 07e1 03       		.uleb128 0x3
 10778 07e2 91       		.byte	0x91
 10779 07e3 D87E     		.sleb128 -168
 10780 07e5 18       		.uleb128 0x18
 10781 07e6 9D100000 		.4byte	.LASF91
 10782 07ea 01       		.byte	0x1
 10783 07eb 2504     		.2byte	0x425
 10784 07ed 13010000 		.4byte	0x113
 10785 07f1 03       		.uleb128 0x3
 10786 07f2 91       		.byte	0x91
 10787 07f3 D47E     		.sleb128 -172
 10788 07f5 18       		.uleb128 0x18
 10789 07f6 4A0C0000 		.4byte	.LASF92
 10790 07fa 01       		.byte	0x1
 10791 07fb 2704     		.2byte	0x427
 10792 07fd 13010000 		.4byte	0x113
 10793 0801 03       		.uleb128 0x3
 10794 0802 91       		.byte	0x91
 10795 0803 D07E     		.sleb128 -176
 10796 0805 18       		.uleb128 0x18
 10797 0806 97060000 		.4byte	.LASF93
 10798 080a 01       		.byte	0x1
 10799 080b 3D04     		.2byte	0x43d
 10800 080d 13010000 		.4byte	0x113
 10801 0811 03       		.uleb128 0x3
 10802 0812 91       		.byte	0x91
 10803 0813 C87E     		.sleb128 -184
 10804 0815 18       		.uleb128 0x18
 10805 0816 2F100000 		.4byte	.LASF94
 10806 081a 01       		.byte	0x1
 10807 081b 3F04     		.2byte	0x43f
 10808 081d 13010000 		.4byte	0x113
 10809 0821 03       		.uleb128 0x3
 10810 0822 91       		.byte	0x91
 10811 0823 C47E     		.sleb128 -188
 10812 0825 16       		.uleb128 0x16
 10813 0826 66170000 		.4byte	.LBB33
 10814 082a 3A000000 		.4byte	.LBE33-.LBB33
 10815 082e 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 232


 10816 082f E0000000 		.4byte	.LASF95
 10817 0833 01       		.byte	0x1
 10818 0834 3104     		.2byte	0x431
 10819 0836 13010000 		.4byte	0x113
 10820 083a 03       		.uleb128 0x3
 10821 083b 91       		.byte	0x91
 10822 083c CC7E     		.sleb128 -180
 10823 083e 00       		.byte	0
 10824 083f 00       		.byte	0
 10825 0840 00       		.byte	0
 10826 0841 14       		.uleb128 0x14
 10827 0842 3E190000 		.4byte	.LBB34
 10828 0846 4E000000 		.4byte	.LBE34-.LBB34
 10829 084a 5D080000 		.4byte	0x85d
 10830 084e 15       		.uleb128 0x15
 10831 084f 6900     		.ascii	"i\000"
 10832 0851 01       		.byte	0x1
 10833 0852 7D04     		.2byte	0x47d
 10834 0854 13020000 		.4byte	0x213
 10835 0858 03       		.uleb128 0x3
 10836 0859 91       		.byte	0x91
 10837 085a 987F     		.sleb128 -104
 10838 085c 00       		.byte	0
 10839 085d 14       		.uleb128 0x14
 10840 085e 4A1B0000 		.4byte	.LBB35
 10841 0862 22000000 		.4byte	.LBE35-.LBB35
 10842 0866 79080000 		.4byte	0x879
 10843 086a 15       		.uleb128 0x15
 10844 086b 6900     		.ascii	"i\000"
 10845 086d 01       		.byte	0x1
 10846 086e CB04     		.2byte	0x4cb
 10847 0870 9F000000 		.4byte	0x9f
 10848 0874 03       		.uleb128 0x3
 10849 0875 91       		.byte	0x91
 10850 0876 947F     		.sleb128 -108
 10851 0878 00       		.byte	0
 10852 0879 14       		.uleb128 0x14
 10853 087a 961B0000 		.4byte	.LBB36
 10854 087e 28000000 		.4byte	.LBE36-.LBB36
 10855 0882 95080000 		.4byte	0x895
 10856 0886 15       		.uleb128 0x15
 10857 0887 6900     		.ascii	"i\000"
 10858 0889 01       		.byte	0x1
 10859 088a DC04     		.2byte	0x4dc
 10860 088c 9F000000 		.4byte	0x9f
 10861 0890 03       		.uleb128 0x3
 10862 0891 91       		.byte	0x91
 10863 0892 907F     		.sleb128 -112
 10864 0894 00       		.byte	0
 10865 0895 14       		.uleb128 0x14
 10866 0896 BE1B0000 		.4byte	.LBB37
 10867 089a 22000000 		.4byte	.LBE37-.LBB37
 10868 089e B1080000 		.4byte	0x8b1
 10869 08a2 15       		.uleb128 0x15
 10870 08a3 6900     		.ascii	"i\000"
 10871 08a5 01       		.byte	0x1
 10872 08a6 E004     		.2byte	0x4e0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 233


 10873 08a8 9F000000 		.4byte	0x9f
 10874 08ac 03       		.uleb128 0x3
 10875 08ad 91       		.byte	0x91
 10876 08ae 8C7F     		.sleb128 -116
 10877 08b0 00       		.byte	0
 10878 08b1 14       		.uleb128 0x14
 10879 08b2 E01B0000 		.4byte	.LBB38
 10880 08b6 22000000 		.4byte	.LBE38-.LBB38
 10881 08ba CD080000 		.4byte	0x8cd
 10882 08be 15       		.uleb128 0x15
 10883 08bf 6900     		.ascii	"i\000"
 10884 08c1 01       		.byte	0x1
 10885 08c2 E404     		.2byte	0x4e4
 10886 08c4 9F000000 		.4byte	0x9f
 10887 08c8 03       		.uleb128 0x3
 10888 08c9 91       		.byte	0x91
 10889 08ca 887F     		.sleb128 -120
 10890 08cc 00       		.byte	0
 10891 08cd 14       		.uleb128 0x14
 10892 08ce 881C0000 		.4byte	.LBB39
 10893 08d2 AC000000 		.4byte	.LBE39-.LBB39
 10894 08d6 03090000 		.4byte	0x903
 10895 08da 15       		.uleb128 0x15
 10896 08db 6900     		.ascii	"i\000"
 10897 08dd 01       		.byte	0x1
 10898 08de F704     		.2byte	0x4f7
 10899 08e0 9F000000 		.4byte	0x9f
 10900 08e4 03       		.uleb128 0x3
 10901 08e5 91       		.byte	0x91
 10902 08e6 847F     		.sleb128 -124
 10903 08e8 16       		.uleb128 0x16
 10904 08e9 E41C0000 		.4byte	.LBB40
 10905 08ed 44000000 		.4byte	.LBE40-.LBB40
 10906 08f1 18       		.uleb128 0x18
 10907 08f2 C40E0000 		.4byte	.LASF96
 10908 08f6 01       		.byte	0x1
 10909 08f7 F904     		.2byte	0x4f9
 10910 08f9 9F000000 		.4byte	0x9f
 10911 08fd 03       		.uleb128 0x3
 10912 08fe 91       		.byte	0x91
 10913 08ff C07E     		.sleb128 -192
 10914 0901 00       		.byte	0
 10915 0902 00       		.byte	0
 10916 0903 14       		.uleb128 0x14
 10917 0904 C61D0000 		.4byte	.LBB41
 10918 0908 4A010000 		.4byte	.LBE41-.LBB41
 10919 090c AD090000 		.4byte	0x9ad
 10920 0910 18       		.uleb128 0x18
 10921 0911 3C030000 		.4byte	.LASF97
 10922 0915 01       		.byte	0x1
 10923 0916 0D05     		.2byte	0x50d
 10924 0918 9F000000 		.4byte	0x9f
 10925 091c 03       		.uleb128 0x3
 10926 091d 91       		.byte	0x91
 10927 091e BC7E     		.sleb128 -196
 10928 0920 18       		.uleb128 0x18
 10929 0921 19010000 		.4byte	.LASF98
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 234


 10930 0925 01       		.byte	0x1
 10931 0926 0E05     		.2byte	0x50e
 10932 0928 9F000000 		.4byte	0x9f
 10933 092c 03       		.uleb128 0x3
 10934 092d 91       		.byte	0x91
 10935 092e B87E     		.sleb128 -200
 10936 0930 18       		.uleb128 0x18
 10937 0931 7B100000 		.4byte	.LASF99
 10938 0935 01       		.byte	0x1
 10939 0936 0F05     		.2byte	0x50f
 10940 0938 9F000000 		.4byte	0x9f
 10941 093c 03       		.uleb128 0x3
 10942 093d 91       		.byte	0x91
 10943 093e 807F     		.sleb128 -128
 10944 0940 14       		.uleb128 0x14
 10945 0941 D61D0000 		.4byte	.LBB42
 10946 0945 36000000 		.4byte	.LBE42-.LBB42
 10947 0949 5C090000 		.4byte	0x95c
 10948 094d 15       		.uleb128 0x15
 10949 094e 6900     		.ascii	"i\000"
 10950 0950 01       		.byte	0x1
 10951 0951 1005     		.2byte	0x510
 10952 0953 9F000000 		.4byte	0x9f
 10953 0957 03       		.uleb128 0x3
 10954 0958 91       		.byte	0x91
 10955 0959 FC7E     		.sleb128 -132
 10956 095b 00       		.byte	0
 10957 095c 14       		.uleb128 0x14
 10958 095d 161E0000 		.4byte	.LBB43
 10959 0961 42000000 		.4byte	.LBE43-.LBB43
 10960 0965 78090000 		.4byte	0x978
 10961 0969 15       		.uleb128 0x15
 10962 096a 6900     		.ascii	"i\000"
 10963 096c 01       		.byte	0x1
 10964 096d 1805     		.2byte	0x518
 10965 096f 9F000000 		.4byte	0x9f
 10966 0973 03       		.uleb128 0x3
 10967 0974 91       		.byte	0x91
 10968 0975 F87E     		.sleb128 -136
 10969 0977 00       		.byte	0
 10970 0978 14       		.uleb128 0x14
 10971 0979 5E1E0000 		.4byte	.LBB44
 10972 097d 48000000 		.4byte	.LBE44-.LBB44
 10973 0981 94090000 		.4byte	0x994
 10974 0985 15       		.uleb128 0x15
 10975 0986 6900     		.ascii	"i\000"
 10976 0988 01       		.byte	0x1
 10977 0989 2005     		.2byte	0x520
 10978 098b 9F000000 		.4byte	0x9f
 10979 098f 03       		.uleb128 0x3
 10980 0990 91       		.byte	0x91
 10981 0991 F47E     		.sleb128 -140
 10982 0993 00       		.byte	0
 10983 0994 16       		.uleb128 0x16
 10984 0995 A61E0000 		.4byte	.LBB45
 10985 0999 42000000 		.4byte	.LBE45-.LBB45
 10986 099d 15       		.uleb128 0x15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 235


 10987 099e 6900     		.ascii	"i\000"
 10988 09a0 01       		.byte	0x1
 10989 09a1 2805     		.2byte	0x528
 10990 09a3 9F000000 		.4byte	0x9f
 10991 09a7 03       		.uleb128 0x3
 10992 09a8 91       		.byte	0x91
 10993 09a9 F07E     		.sleb128 -144
 10994 09ab 00       		.byte	0
 10995 09ac 00       		.byte	0
 10996 09ad 16       		.uleb128 0x16
 10997 09ae B61F0000 		.4byte	.LBB46
 10998 09b2 28000000 		.4byte	.LBE46-.LBB46
 10999 09b6 18       		.uleb128 0x18
 11000 09b7 4A090000 		.4byte	.LASF84
 11001 09bb 01       		.byte	0x1
 11002 09bc 4105     		.2byte	0x541
 11003 09be B8000000 		.4byte	0xb8
 11004 09c2 03       		.uleb128 0x3
 11005 09c3 91       		.byte	0x91
 11006 09c4 B77E     		.sleb128 -201
 11007 09c6 00       		.byte	0
 11008 09c7 00       		.byte	0
 11009 09c8 19       		.uleb128 0x19
 11010 09c9 B9050000 		.4byte	.LASF100
 11011 09cd 01       		.byte	0x1
 11012 09ce 6205     		.2byte	0x562
 11013 09d0 00000000 		.4byte	.LFB76
 11014 09d4 70000000 		.4byte	.LFE76-.LFB76
 11015 09d8 01       		.uleb128 0x1
 11016 09d9 9C       		.byte	0x9c
 11017 09da 19       		.uleb128 0x19
 11018 09db E7110000 		.4byte	.LASF101
 11019 09df 01       		.byte	0x1
 11020 09e0 7705     		.2byte	0x577
 11021 09e2 00000000 		.4byte	.LFB77
 11022 09e6 70010000 		.4byte	.LFE77-.LFB77
 11023 09ea 01       		.uleb128 0x1
 11024 09eb 9C       		.byte	0x9c
 11025 09ec 12       		.uleb128 0x12
 11026 09ed 8A090000 		.4byte	.LASF102
 11027 09f1 01       		.byte	0x1
 11028 09f2 9F05     		.2byte	0x59f
 11029 09f4 EF000000 		.4byte	0xef
 11030 09f8 00000000 		.4byte	.LFB78
 11031 09fc E0000000 		.4byte	.LFE78-.LFB78
 11032 0a00 01       		.uleb128 0x1
 11033 0a01 9C       		.byte	0x9c
 11034 0a02 610A0000 		.4byte	0xa61
 11035 0a06 11       		.uleb128 0x11
 11036 0a07 2D110000 		.4byte	.LASF103
 11037 0a0b 01       		.byte	0x1
 11038 0a0c 9F05     		.2byte	0x59f
 11039 0a0e EF000000 		.4byte	0xef
 11040 0a12 02       		.uleb128 0x2
 11041 0a13 91       		.byte	0x91
 11042 0a14 67       		.sleb128 -25
 11043 0a15 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 236


 11044 0a16 D8010000 		.4byte	.LASF104
 11045 0a1a 01       		.byte	0x1
 11046 0a1b 9F05     		.2byte	0x59f
 11047 0a1d FB000000 		.4byte	0xfb
 11048 0a21 02       		.uleb128 0x2
 11049 0a22 91       		.byte	0x91
 11050 0a23 64       		.sleb128 -28
 11051 0a24 11       		.uleb128 0x11
 11052 0a25 76100000 		.4byte	.LASF105
 11053 0a29 01       		.byte	0x1
 11054 0a2a 9F05     		.2byte	0x59f
 11055 0a2c B8000000 		.4byte	0xb8
 11056 0a30 02       		.uleb128 0x2
 11057 0a31 91       		.byte	0x91
 11058 0a32 66       		.sleb128 -26
 11059 0a33 18       		.uleb128 0x18
 11060 0a34 4A090000 		.4byte	.LASF84
 11061 0a38 01       		.byte	0x1
 11062 0a39 A105     		.2byte	0x5a1
 11063 0a3b 40010000 		.4byte	0x140
 11064 0a3f 02       		.uleb128 0x2
 11065 0a40 91       		.byte	0x91
 11066 0a41 6F       		.sleb128 -17
 11067 0a42 18       		.uleb128 0x18
 11068 0a43 AB030000 		.4byte	.LASF106
 11069 0a47 01       		.byte	0x1
 11070 0a48 A205     		.2byte	0x5a2
 11071 0a4a B8000000 		.4byte	0xb8
 11072 0a4e 02       		.uleb128 0x2
 11073 0a4f 91       		.byte	0x91
 11074 0a50 77       		.sleb128 -9
 11075 0a51 18       		.uleb128 0x18
 11076 0a52 070C0000 		.4byte	.LASF107
 11077 0a56 01       		.byte	0x1
 11078 0a57 A305     		.2byte	0x5a3
 11079 0a59 E4000000 		.4byte	0xe4
 11080 0a5d 02       		.uleb128 0x2
 11081 0a5e 91       		.byte	0x91
 11082 0a5f 70       		.sleb128 -16
 11083 0a60 00       		.byte	0
 11084 0a61 12       		.uleb128 0x12
 11085 0a62 BC0D0000 		.4byte	.LASF108
 11086 0a66 01       		.byte	0x1
 11087 0a67 D805     		.2byte	0x5d8
 11088 0a69 EF000000 		.4byte	0xef
 11089 0a6d 00000000 		.4byte	.LFB79
 11090 0a71 F4000000 		.4byte	.LFE79-.LFB79
 11091 0a75 01       		.uleb128 0x1
 11092 0a76 9C       		.byte	0x9c
 11093 0a77 D60A0000 		.4byte	0xad6
 11094 0a7b 11       		.uleb128 0x11
 11095 0a7c 2D110000 		.4byte	.LASF103
 11096 0a80 01       		.byte	0x1
 11097 0a81 D805     		.2byte	0x5d8
 11098 0a83 EF000000 		.4byte	0xef
 11099 0a87 02       		.uleb128 0x2
 11100 0a88 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 237


 11101 0a89 6F       		.sleb128 -17
 11102 0a8a 11       		.uleb128 0x11
 11103 0a8b D8010000 		.4byte	.LASF104
 11104 0a8f 01       		.byte	0x1
 11105 0a90 D805     		.2byte	0x5d8
 11106 0a92 EF000000 		.4byte	0xef
 11107 0a96 02       		.uleb128 0x2
 11108 0a97 91       		.byte	0x91
 11109 0a98 6E       		.sleb128 -18
 11110 0a99 11       		.uleb128 0x11
 11111 0a9a 76100000 		.4byte	.LASF105
 11112 0a9e 01       		.byte	0x1
 11113 0a9f D805     		.2byte	0x5d8
 11114 0aa1 B8000000 		.4byte	0xb8
 11115 0aa5 02       		.uleb128 0x2
 11116 0aa6 91       		.byte	0x91
 11117 0aa7 6D       		.sleb128 -19
 11118 0aa8 18       		.uleb128 0x18
 11119 0aa9 4A090000 		.4byte	.LASF84
 11120 0aad 01       		.byte	0x1
 11121 0aae DA05     		.2byte	0x5da
 11122 0ab0 40010000 		.4byte	0x140
 11123 0ab4 02       		.uleb128 0x2
 11124 0ab5 91       		.byte	0x91
 11125 0ab6 72       		.sleb128 -14
 11126 0ab7 18       		.uleb128 0x18
 11127 0ab8 070C0000 		.4byte	.LASF107
 11128 0abc 01       		.byte	0x1
 11129 0abd DB05     		.2byte	0x5db
 11130 0abf E4000000 		.4byte	0xe4
 11131 0ac3 02       		.uleb128 0x2
 11132 0ac4 91       		.byte	0x91
 11133 0ac5 74       		.sleb128 -12
 11134 0ac6 18       		.uleb128 0x18
 11135 0ac7 AB030000 		.4byte	.LASF106
 11136 0acb 01       		.byte	0x1
 11137 0acc DC05     		.2byte	0x5dc
 11138 0ace B8000000 		.4byte	0xb8
 11139 0ad2 02       		.uleb128 0x2
 11140 0ad3 91       		.byte	0x91
 11141 0ad4 73       		.sleb128 -13
 11142 0ad5 00       		.byte	0
 11143 0ad6 19       		.uleb128 0x19
 11144 0ad7 2B060000 		.4byte	.LASF109
 11145 0adb 01       		.byte	0x1
 11146 0adc 0B06     		.2byte	0x60b
 11147 0ade 00000000 		.4byte	.LFB80
 11148 0ae2 24000000 		.4byte	.LFE80-.LFB80
 11149 0ae6 01       		.uleb128 0x1
 11150 0ae7 9C       		.byte	0x9c
 11151 0ae8 19       		.uleb128 0x19
 11152 0ae9 D7050000 		.4byte	.LASF110
 11153 0aed 01       		.byte	0x1
 11154 0aee 1C06     		.2byte	0x61c
 11155 0af0 00000000 		.4byte	.LFB81
 11156 0af4 54000000 		.4byte	.LFE81-.LFB81
 11157 0af8 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 238


 11158 0af9 9C       		.byte	0x9c
 11159 0afa 19       		.uleb128 0x19
 11160 0afb 1B050000 		.4byte	.LASF111
 11161 0aff 01       		.byte	0x1
 11162 0b00 2F06     		.2byte	0x62f
 11163 0b02 00000000 		.4byte	.LFB82
 11164 0b06 C4000000 		.4byte	.LFE82-.LFB82
 11165 0b0a 01       		.uleb128 0x1
 11166 0b0b 9C       		.byte	0x9c
 11167 0b0c 12       		.uleb128 0x12
 11168 0b0d B00B0000 		.4byte	.LASF112
 11169 0b11 01       		.byte	0x1
 11170 0b12 6206     		.2byte	0x662
 11171 0b14 13010000 		.4byte	0x113
 11172 0b18 00000000 		.4byte	.LFB83
 11173 0b1c 98000000 		.4byte	.LFE83-.LFB83
 11174 0b20 01       		.uleb128 0x1
 11175 0b21 9C       		.byte	0x9c
 11176 0b22 5B0B0000 		.4byte	0xb5b
 11177 0b26 1A       		.uleb128 0x1a
 11178 0b27 5800     		.ascii	"X\000"
 11179 0b29 01       		.byte	0x1
 11180 0b2a 6206     		.2byte	0x662
 11181 0b2c 13010000 		.4byte	0x113
 11182 0b30 02       		.uleb128 0x2
 11183 0b31 91       		.byte	0x91
 11184 0b32 64       		.sleb128 -28
 11185 0b33 15       		.uleb128 0x15
 11186 0b34 5900     		.ascii	"Y\000"
 11187 0b36 01       		.byte	0x1
 11188 0b37 6306     		.2byte	0x663
 11189 0b39 13010000 		.4byte	0x113
 11190 0b3d 02       		.uleb128 0x2
 11191 0b3e 91       		.byte	0x91
 11192 0b3f 70       		.sleb128 -16
 11193 0b40 15       		.uleb128 0x15
 11194 0b41 4600     		.ascii	"F\000"
 11195 0b43 01       		.byte	0x1
 11196 0b44 6306     		.2byte	0x663
 11197 0b46 13010000 		.4byte	0x113
 11198 0b4a 02       		.uleb128 0x2
 11199 0b4b 91       		.byte	0x91
 11200 0b4c 74       		.sleb128 -12
 11201 0b4d 15       		.uleb128 0x15
 11202 0b4e 4500     		.ascii	"E\000"
 11203 0b50 01       		.byte	0x1
 11204 0b51 6406     		.2byte	0x664
 11205 0b53 9F000000 		.4byte	0x9f
 11206 0b57 02       		.uleb128 0x2
 11207 0b58 91       		.byte	0x91
 11208 0b59 6C       		.sleb128 -20
 11209 0b5a 00       		.byte	0
 11210 0b5b 17       		.uleb128 0x17
 11211 0b5c E8000000 		.4byte	.LASF113
 11212 0b60 01       		.byte	0x1
 11213 0b61 7506     		.2byte	0x675
 11214 0b63 00000000 		.4byte	.LFB84
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 239


 11215 0b67 D4000000 		.4byte	.LFE84-.LFB84
 11216 0b6b 01       		.uleb128 0x1
 11217 0b6c 9C       		.byte	0x9c
 11218 0b6d B80B0000 		.4byte	0xbb8
 11219 0b71 11       		.uleb128 0x11
 11220 0b72 240D0000 		.4byte	.LASF114
 11221 0b76 01       		.byte	0x1
 11222 0b77 7506     		.2byte	0x675
 11223 0b79 9F000000 		.4byte	0x9f
 11224 0b7d 02       		.uleb128 0x2
 11225 0b7e 91       		.byte	0x91
 11226 0b7f 64       		.sleb128 -28
 11227 0b80 18       		.uleb128 0x18
 11228 0b81 CF0C0000 		.4byte	.LASF115
 11229 0b85 01       		.byte	0x1
 11230 0b86 8106     		.2byte	0x681
 11231 0b88 CE000000 		.4byte	0xce
 11232 0b8c 02       		.uleb128 0x2
 11233 0b8d 91       		.byte	0x91
 11234 0b8e 76       		.sleb128 -10
 11235 0b8f 16       		.uleb128 0x16
 11236 0b90 18000000 		.4byte	.LBB47
 11237 0b94 86000000 		.4byte	.LBE47-.LBB47
 11238 0b98 18       		.uleb128 0x18
 11239 0b99 030F0000 		.4byte	.LASF116
 11240 0b9d 01       		.byte	0x1
 11241 0b9e 8506     		.2byte	0x685
 11242 0ba0 13010000 		.4byte	0x113
 11243 0ba4 02       		.uleb128 0x2
 11244 0ba5 91       		.byte	0x91
 11245 0ba6 70       		.sleb128 -16
 11246 0ba7 18       		.uleb128 0x18
 11247 0ba8 72120000 		.4byte	.LASF117
 11248 0bac 01       		.byte	0x1
 11249 0bad 9406     		.2byte	0x694
 11250 0baf 9F000000 		.4byte	0x9f
 11251 0bb3 02       		.uleb128 0x2
 11252 0bb4 91       		.byte	0x91
 11253 0bb5 6C       		.sleb128 -20
 11254 0bb6 00       		.byte	0
 11255 0bb7 00       		.byte	0
 11256 0bb8 17       		.uleb128 0x17
 11257 0bb9 06080000 		.4byte	.LASF118
 11258 0bbd 01       		.byte	0x1
 11259 0bbe A006     		.2byte	0x6a0
 11260 0bc0 00000000 		.4byte	.LFB85
 11261 0bc4 1C000000 		.4byte	.LFE85-.LFB85
 11262 0bc8 01       		.uleb128 0x1
 11263 0bc9 9C       		.byte	0x9c
 11264 0bca EC0B0000 		.4byte	0xbec
 11265 0bce 1A       		.uleb128 0x1a
 11266 0bcf 636300   		.ascii	"cc\000"
 11267 0bd2 01       		.byte	0x1
 11268 0bd3 A006     		.2byte	0x6a0
 11269 0bd5 9F000000 		.4byte	0x9f
 11270 0bd9 02       		.uleb128 0x2
 11271 0bda 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 240


 11272 0bdb 74       		.sleb128 -12
 11273 0bdc 1A       		.uleb128 0x1a
 11274 0bdd 76616C00 		.ascii	"val\000"
 11275 0be1 01       		.byte	0x1
 11276 0be2 A006     		.2byte	0x6a0
 11277 0be4 9F000000 		.4byte	0x9f
 11278 0be8 02       		.uleb128 0x2
 11279 0be9 91       		.byte	0x91
 11280 0bea 70       		.sleb128 -16
 11281 0beb 00       		.byte	0
 11282 0bec 17       		.uleb128 0x17
 11283 0bed C90A0000 		.4byte	.LASF119
 11284 0bf1 01       		.byte	0x1
 11285 0bf2 A606     		.2byte	0x6a6
 11286 0bf4 00000000 		.4byte	.LFB86
 11287 0bf8 68000000 		.4byte	.LFE86-.LFB86
 11288 0bfc 01       		.uleb128 0x1
 11289 0bfd 9C       		.byte	0x9c
 11290 0bfe 300C0000 		.4byte	0xc30
 11291 0c02 11       		.uleb128 0x11
 11292 0c03 7D030000 		.4byte	.LASF120
 11293 0c07 01       		.byte	0x1
 11294 0c08 A606     		.2byte	0x6a6
 11295 0c0a 9F000000 		.4byte	0x9f
 11296 0c0e 02       		.uleb128 0x2
 11297 0c0f 91       		.byte	0x91
 11298 0c10 74       		.sleb128 -12
 11299 0c11 11       		.uleb128 0x11
 11300 0c12 CF0C0000 		.4byte	.LASF115
 11301 0c16 01       		.byte	0x1
 11302 0c17 A606     		.2byte	0x6a6
 11303 0c19 9F000000 		.4byte	0x9f
 11304 0c1d 02       		.uleb128 0x2
 11305 0c1e 91       		.byte	0x91
 11306 0c1f 70       		.sleb128 -16
 11307 0c20 11       		.uleb128 0x11
 11308 0c21 66090000 		.4byte	.LASF121
 11309 0c25 01       		.byte	0x1
 11310 0c26 A606     		.2byte	0x6a6
 11311 0c28 9F000000 		.4byte	0x9f
 11312 0c2c 02       		.uleb128 0x2
 11313 0c2d 91       		.byte	0x91
 11314 0c2e 6C       		.sleb128 -20
 11315 0c2f 00       		.byte	0
 11316 0c30 17       		.uleb128 0x17
 11317 0c31 67060000 		.4byte	.LASF122
 11318 0c35 01       		.byte	0x1
 11319 0c36 B306     		.2byte	0x6b3
 11320 0c38 00000000 		.4byte	.LFB87
 11321 0c3c 68000000 		.4byte	.LFE87-.LFB87
 11322 0c40 01       		.uleb128 0x1
 11323 0c41 9C       		.byte	0x9c
 11324 0c42 740C0000 		.4byte	0xc74
 11325 0c46 11       		.uleb128 0x11
 11326 0c47 7D030000 		.4byte	.LASF120
 11327 0c4b 01       		.byte	0x1
 11328 0c4c B306     		.2byte	0x6b3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 241


 11329 0c4e 9F000000 		.4byte	0x9f
 11330 0c52 02       		.uleb128 0x2
 11331 0c53 91       		.byte	0x91
 11332 0c54 74       		.sleb128 -12
 11333 0c55 11       		.uleb128 0x11
 11334 0c56 4E050000 		.4byte	.LASF123
 11335 0c5a 01       		.byte	0x1
 11336 0c5b B306     		.2byte	0x6b3
 11337 0c5d 9F000000 		.4byte	0x9f
 11338 0c61 02       		.uleb128 0x2
 11339 0c62 91       		.byte	0x91
 11340 0c63 70       		.sleb128 -16
 11341 0c64 11       		.uleb128 0x11
 11342 0c65 66090000 		.4byte	.LASF121
 11343 0c69 01       		.byte	0x1
 11344 0c6a B306     		.2byte	0x6b3
 11345 0c6c 9F000000 		.4byte	0x9f
 11346 0c70 02       		.uleb128 0x2
 11347 0c71 91       		.byte	0x91
 11348 0c72 6C       		.sleb128 -20
 11349 0c73 00       		.byte	0
 11350 0c74 17       		.uleb128 0x17
 11351 0c75 BE060000 		.4byte	.LASF124
 11352 0c79 01       		.byte	0x1
 11353 0c7a BF06     		.2byte	0x6bf
 11354 0c7c 00000000 		.4byte	.LFB88
 11355 0c80 68000000 		.4byte	.LFE88-.LFB88
 11356 0c84 01       		.uleb128 0x1
 11357 0c85 9C       		.byte	0x9c
 11358 0c86 B80C0000 		.4byte	0xcb8
 11359 0c8a 11       		.uleb128 0x11
 11360 0c8b FC010000 		.4byte	.LASF125
 11361 0c8f 01       		.byte	0x1
 11362 0c90 BF06     		.2byte	0x6bf
 11363 0c92 9F000000 		.4byte	0x9f
 11364 0c96 02       		.uleb128 0x2
 11365 0c97 91       		.byte	0x91
 11366 0c98 74       		.sleb128 -12
 11367 0c99 11       		.uleb128 0x11
 11368 0c9a 2F010000 		.4byte	.LASF126
 11369 0c9e 01       		.byte	0x1
 11370 0c9f BF06     		.2byte	0x6bf
 11371 0ca1 9F000000 		.4byte	0x9f
 11372 0ca5 02       		.uleb128 0x2
 11373 0ca6 91       		.byte	0x91
 11374 0ca7 70       		.sleb128 -16
 11375 0ca8 11       		.uleb128 0x11
 11376 0ca9 66090000 		.4byte	.LASF121
 11377 0cad 01       		.byte	0x1
 11378 0cae BF06     		.2byte	0x6bf
 11379 0cb0 9F000000 		.4byte	0x9f
 11380 0cb4 02       		.uleb128 0x2
 11381 0cb5 91       		.byte	0x91
 11382 0cb6 6C       		.sleb128 -20
 11383 0cb7 00       		.byte	0
 11384 0cb8 17       		.uleb128 0x17
 11385 0cb9 520C0000 		.4byte	.LASF127
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 242


 11386 0cbd 01       		.byte	0x1
 11387 0cbe CB06     		.2byte	0x6cb
 11388 0cc0 00000000 		.4byte	.LFB89
 11389 0cc4 6C000000 		.4byte	.LFE89-.LFB89
 11390 0cc8 01       		.uleb128 0x1
 11391 0cc9 9C       		.byte	0x9c
 11392 0cca ED0C0000 		.4byte	0xced
 11393 0cce 1A       		.uleb128 0x1a
 11394 0ccf 76616C00 		.ascii	"val\000"
 11395 0cd3 01       		.byte	0x1
 11396 0cd4 CB06     		.2byte	0x6cb
 11397 0cd6 9F000000 		.4byte	0x9f
 11398 0cda 02       		.uleb128 0x2
 11399 0cdb 91       		.byte	0x91
 11400 0cdc 74       		.sleb128 -12
 11401 0cdd 11       		.uleb128 0x11
 11402 0cde 66090000 		.4byte	.LASF121
 11403 0ce2 01       		.byte	0x1
 11404 0ce3 CB06     		.2byte	0x6cb
 11405 0ce5 9F000000 		.4byte	0x9f
 11406 0ce9 02       		.uleb128 0x2
 11407 0cea 91       		.byte	0x91
 11408 0ceb 70       		.sleb128 -16
 11409 0cec 00       		.byte	0
 11410 0ced 17       		.uleb128 0x17
 11411 0cee 89030000 		.4byte	.LASF128
 11412 0cf2 01       		.byte	0x1
 11413 0cf3 D706     		.2byte	0x6d7
 11414 0cf5 00000000 		.4byte	.LFB90
 11415 0cf9 5C000000 		.4byte	.LFE90-.LFB90
 11416 0cfd 01       		.uleb128 0x1
 11417 0cfe 9C       		.byte	0x9c
 11418 0cff 1B0D0000 		.4byte	0xd1b
 11419 0d03 16       		.uleb128 0x16
 11420 0d04 06000000 		.4byte	.LBB48
 11421 0d08 44000000 		.4byte	.LBE48-.LBB48
 11422 0d0c 15       		.uleb128 0x15
 11423 0d0d 6900     		.ascii	"i\000"
 11424 0d0f 01       		.byte	0x1
 11425 0d10 D906     		.2byte	0x6d9
 11426 0d12 B8000000 		.4byte	0xb8
 11427 0d16 02       		.uleb128 0x2
 11428 0d17 91       		.byte	0x91
 11429 0d18 77       		.sleb128 -9
 11430 0d19 00       		.byte	0
 11431 0d1a 00       		.byte	0
 11432 0d1b 17       		.uleb128 0x17
 11433 0d1c 2A080000 		.4byte	.LASF129
 11434 0d20 01       		.byte	0x1
 11435 0d21 EF06     		.2byte	0x6ef
 11436 0d23 00000000 		.4byte	.LFB91
 11437 0d27 600C0000 		.4byte	.LFE91-.LFB91
 11438 0d2b 01       		.uleb128 0x1
 11439 0d2c 9C       		.byte	0x9c
 11440 0d2d 9C0F0000 		.4byte	0xf9c
 11441 0d31 14       		.uleb128 0x14
 11442 0d32 16000000 		.4byte	.LBB49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 243


 11443 0d36 30060000 		.4byte	.LBE49-.LBB49
 11444 0d3a 140E0000 		.4byte	0xe14
 11445 0d3e 18       		.uleb128 0x18
 11446 0d3f 54020000 		.4byte	.LASF130
 11447 0d43 01       		.byte	0x1
 11448 0d44 FE06     		.2byte	0x6fe
 11449 0d46 82020000 		.4byte	0x282
 11450 0d4a 03       		.uleb128 0x3
 11451 0d4b 91       		.byte	0x91
 11452 0d4c A87F     		.sleb128 -88
 11453 0d4e 15       		.uleb128 0x15
 11454 0d4f 6900     		.ascii	"i\000"
 11455 0d51 01       		.byte	0x1
 11456 0d52 FF06     		.2byte	0x6ff
 11457 0d54 E4000000 		.4byte	0xe4
 11458 0d58 02       		.uleb128 0x2
 11459 0d59 91       		.byte	0x91
 11460 0d5a 6C       		.sleb128 -20
 11461 0d5b 18       		.uleb128 0x18
 11462 0d5c 710B0000 		.4byte	.LASF131
 11463 0d60 01       		.byte	0x1
 11464 0d61 0007     		.2byte	0x700
 11465 0d63 B8000000 		.4byte	0xb8
 11466 0d67 02       		.uleb128 0x2
 11467 0d68 91       		.byte	0x91
 11468 0d69 4F       		.sleb128 -49
 11469 0d6a 18       		.uleb128 0x18
 11470 0d6b D9040000 		.4byte	.LASF132
 11471 0d6f 01       		.byte	0x1
 11472 0d70 1D07     		.2byte	0x71d
 11473 0d72 CE000000 		.4byte	0xce
 11474 0d76 02       		.uleb128 0x2
 11475 0d77 91       		.byte	0x91
 11476 0d78 4C       		.sleb128 -52
 11477 0d79 14       		.uleb128 0x14
 11478 0d7a B2000000 		.4byte	.LBB50
 11479 0d7e 72000000 		.4byte	.LBE50-.LBB50
 11480 0d82 AB0D0000 		.4byte	0xdab
 11481 0d86 15       		.uleb128 0x15
 11482 0d87 6A00     		.ascii	"j\000"
 11483 0d89 01       		.byte	0x1
 11484 0d8a 0A07     		.2byte	0x70a
 11485 0d8c 9F000000 		.4byte	0x9f
 11486 0d90 02       		.uleb128 0x2
 11487 0d91 91       		.byte	0x91
 11488 0d92 68       		.sleb128 -24
 11489 0d93 16       		.uleb128 0x16
 11490 0d94 B8000000 		.4byte	.LBB51
 11491 0d98 60000000 		.4byte	.LBE51-.LBB51
 11492 0d9c 15       		.uleb128 0x15
 11493 0d9d 6B00     		.ascii	"k\000"
 11494 0d9f 01       		.byte	0x1
 11495 0da0 0C07     		.2byte	0x70c
 11496 0da2 9F000000 		.4byte	0x9f
 11497 0da6 02       		.uleb128 0x2
 11498 0da7 91       		.byte	0x91
 11499 0da8 64       		.sleb128 -28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 244


 11500 0da9 00       		.byte	0
 11501 0daa 00       		.byte	0
 11502 0dab 14       		.uleb128 0x14
 11503 0dac 24010000 		.4byte	.LBB52
 11504 0db0 76000000 		.4byte	.LBE52-.LBB52
 11505 0db4 DD0D0000 		.4byte	0xddd
 11506 0db8 15       		.uleb128 0x15
 11507 0db9 6A00     		.ascii	"j\000"
 11508 0dbb 01       		.byte	0x1
 11509 0dbc 1307     		.2byte	0x713
 11510 0dbe 9F000000 		.4byte	0x9f
 11511 0dc2 02       		.uleb128 0x2
 11512 0dc3 91       		.byte	0x91
 11513 0dc4 60       		.sleb128 -32
 11514 0dc5 16       		.uleb128 0x16
 11515 0dc6 2A010000 		.4byte	.LBB53
 11516 0dca 64000000 		.4byte	.LBE53-.LBB53
 11517 0dce 15       		.uleb128 0x15
 11518 0dcf 6B00     		.ascii	"k\000"
 11519 0dd1 01       		.byte	0x1
 11520 0dd2 1507     		.2byte	0x715
 11521 0dd4 9F000000 		.4byte	0x9f
 11522 0dd8 02       		.uleb128 0x2
 11523 0dd9 91       		.byte	0x91
 11524 0dda 5C       		.sleb128 -36
 11525 0ddb 00       		.byte	0
 11526 0ddc 00       		.byte	0
 11527 0ddd 14       		.uleb128 0x14
 11528 0dde 9E020000 		.4byte	.LBB54
 11529 0de2 46000000 		.4byte	.LBE54-.LBB54
 11530 0de6 FA0D0000 		.4byte	0xdfa
 11531 0dea 18       		.uleb128 0x18
 11532 0deb 3C020000 		.4byte	.LASF133
 11533 0def 01       		.byte	0x1
 11534 0df0 3507     		.2byte	0x735
 11535 0df2 CE000000 		.4byte	0xce
 11536 0df6 02       		.uleb128 0x2
 11537 0df7 91       		.byte	0x91
 11538 0df8 4A       		.sleb128 -54
 11539 0df9 00       		.byte	0
 11540 0dfa 16       		.uleb128 0x16
 11541 0dfb 1C050000 		.4byte	.LBB55
 11542 0dff 48000000 		.4byte	.LBE55-.LBB55
 11543 0e03 18       		.uleb128 0x18
 11544 0e04 3C020000 		.4byte	.LASF133
 11545 0e08 01       		.byte	0x1
 11546 0e09 7107     		.2byte	0x771
 11547 0e0b C3000000 		.4byte	0xc3
 11548 0e0f 02       		.uleb128 0x2
 11549 0e10 91       		.byte	0x91
 11550 0e11 48       		.sleb128 -56
 11551 0e12 00       		.byte	0
 11552 0e13 00       		.byte	0
 11553 0e14 14       		.uleb128 0x14
 11554 0e15 50060000 		.4byte	.LBB56
 11555 0e19 08030000 		.4byte	.LBE56-.LBB56
 11556 0e1d FD0E0000 		.4byte	0xefd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 245


 11557 0e21 18       		.uleb128 0x18
 11558 0e22 54020000 		.4byte	.LASF130
 11559 0e26 01       		.byte	0x1
 11560 0e27 D207     		.2byte	0x7d2
 11561 0e29 82020000 		.4byte	0x282
 11562 0e2d 03       		.uleb128 0x3
 11563 0e2e 91       		.byte	0x91
 11564 0e2f A47F     		.sleb128 -92
 11565 0e31 15       		.uleb128 0x15
 11566 0e32 6900     		.ascii	"i\000"
 11567 0e34 01       		.byte	0x1
 11568 0e35 D307     		.2byte	0x7d3
 11569 0e37 E4000000 		.4byte	0xe4
 11570 0e3b 02       		.uleb128 0x2
 11571 0e3c 91       		.byte	0x91
 11572 0e3d 58       		.sleb128 -40
 11573 0e3e 18       		.uleb128 0x18
 11574 0e3f 710B0000 		.4byte	.LASF131
 11575 0e43 01       		.byte	0x1
 11576 0e44 D407     		.2byte	0x7d4
 11577 0e46 B8000000 		.4byte	0xb8
 11578 0e4a 02       		.uleb128 0x2
 11579 0e4b 91       		.byte	0x91
 11580 0e4c 47       		.sleb128 -57
 11581 0e4d 14       		.uleb128 0x14
 11582 0e4e 86060000 		.4byte	.LBB57
 11583 0e52 7A000000 		.4byte	.LBE57-.LBB57
 11584 0e56 6A0E0000 		.4byte	0xe6a
 11585 0e5a 18       		.uleb128 0x18
 11586 0e5b B40F0000 		.4byte	.LASF134
 11587 0e5f 01       		.byte	0x1
 11588 0e60 D807     		.2byte	0x7d8
 11589 0e62 B8000000 		.4byte	0xb8
 11590 0e66 02       		.uleb128 0x2
 11591 0e67 91       		.byte	0x91
 11592 0e68 46       		.sleb128 -58
 11593 0e69 00       		.byte	0
 11594 0e6a 16       		.uleb128 0x16
 11595 0e6b 16070000 		.4byte	.LBB58
 11596 0e6f C4010000 		.4byte	.LBE58-.LBB58
 11597 0e73 18       		.uleb128 0x18
 11598 0e74 B4100000 		.4byte	.LASF135
 11599 0e78 01       		.byte	0x1
 11600 0e79 E307     		.2byte	0x7e3
 11601 0e7b E4000000 		.4byte	0xe4
 11602 0e7f 02       		.uleb128 0x2
 11603 0e80 91       		.byte	0x91
 11604 0e81 54       		.sleb128 -44
 11605 0e82 16       		.uleb128 0x16
 11606 0e83 1C070000 		.4byte	.LBB59
 11607 0e87 B0010000 		.4byte	.LBE59-.LBB59
 11608 0e8b 18       		.uleb128 0x18
 11609 0e8c F4040000 		.4byte	.LASF80
 11610 0e90 01       		.byte	0x1
 11611 0e91 E507     		.2byte	0x7e5
 11612 0e93 CE000000 		.4byte	0xce
 11613 0e97 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 246


 11614 0e98 91       		.byte	0x91
 11615 0e99 44       		.sleb128 -60
 11616 0e9a 16       		.uleb128 0x16
 11617 0e9b 2A070000 		.4byte	.LBB60
 11618 0e9f A2010000 		.4byte	.LBE60-.LBB60
 11619 0ea3 18       		.uleb128 0x18
 11620 0ea4 7F060000 		.4byte	.LASF136
 11621 0ea8 01       		.byte	0x1
 11622 0ea9 E607     		.2byte	0x7e6
 11623 0eab E4000000 		.4byte	0xe4
 11624 0eaf 02       		.uleb128 0x2
 11625 0eb0 91       		.byte	0x91
 11626 0eb1 50       		.sleb128 -48
 11627 0eb2 16       		.uleb128 0x16
 11628 0eb3 94070000 		.4byte	.LBB61
 11629 0eb7 2A010000 		.4byte	.LBE61-.LBB61
 11630 0ebb 18       		.uleb128 0x18
 11631 0ebc A7040000 		.4byte	.LASF137
 11632 0ec0 01       		.byte	0x1
 11633 0ec1 F007     		.2byte	0x7f0
 11634 0ec3 CE000000 		.4byte	0xce
 11635 0ec7 02       		.uleb128 0x2
 11636 0ec8 91       		.byte	0x91
 11637 0ec9 42       		.sleb128 -62
 11638 0eca 18       		.uleb128 0x18
 11639 0ecb 4D0E0000 		.4byte	.LASF138
 11640 0ecf 01       		.byte	0x1
 11641 0ed0 F107     		.2byte	0x7f1
 11642 0ed2 B8000000 		.4byte	0xb8
 11643 0ed6 02       		.uleb128 0x2
 11644 0ed7 91       		.byte	0x91
 11645 0ed8 41       		.sleb128 -63
 11646 0ed9 18       		.uleb128 0x18
 11647 0eda 5E010000 		.4byte	.LASF139
 11648 0ede 01       		.byte	0x1
 11649 0edf F207     		.2byte	0x7f2
 11650 0ee1 B8000000 		.4byte	0xb8
 11651 0ee5 02       		.uleb128 0x2
 11652 0ee6 91       		.byte	0x91
 11653 0ee7 40       		.sleb128 -64
 11654 0ee8 18       		.uleb128 0x18
 11655 0ee9 18040000 		.4byte	.LASF81
 11656 0eed 01       		.byte	0x1
 11657 0eee F507     		.2byte	0x7f5
 11658 0ef0 CE000000 		.4byte	0xce
 11659 0ef4 03       		.uleb128 0x3
 11660 0ef5 91       		.byte	0x91
 11661 0ef6 BE7F     		.sleb128 -66
 11662 0ef8 00       		.byte	0
 11663 0ef9 00       		.byte	0
 11664 0efa 00       		.byte	0
 11665 0efb 00       		.byte	0
 11666 0efc 00       		.byte	0
 11667 0efd 14       		.uleb128 0x14
 11668 0efe 62090000 		.4byte	.LBB62
 11669 0f02 14010000 		.4byte	.LBE62-.LBB62
 11670 0f06 490F0000 		.4byte	0xf49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 247


 11671 0f0a 18       		.uleb128 0x18
 11672 0f0b 54020000 		.4byte	.LASF130
 11673 0f0f 01       		.byte	0x1
 11674 0f10 1908     		.2byte	0x819
 11675 0f12 82020000 		.4byte	0x282
 11676 0f16 03       		.uleb128 0x3
 11677 0f17 91       		.byte	0x91
 11678 0f18 A07F     		.sleb128 -96
 11679 0f1a 15       		.uleb128 0x15
 11680 0f1b 6900     		.ascii	"i\000"
 11681 0f1d 01       		.byte	0x1
 11682 0f1e 1A08     		.2byte	0x81a
 11683 0f20 E4000000 		.4byte	0xe4
 11684 0f24 03       		.uleb128 0x3
 11685 0f25 91       		.byte	0x91
 11686 0f26 B87F     		.sleb128 -72
 11687 0f28 18       		.uleb128 0x18
 11688 0f29 03060000 		.4byte	.LASF140
 11689 0f2d 01       		.byte	0x1
 11690 0f2e 2308     		.2byte	0x823
 11691 0f30 CE000000 		.4byte	0xce
 11692 0f34 03       		.uleb128 0x3
 11693 0f35 91       		.byte	0x91
 11694 0f36 B67F     		.sleb128 -74
 11695 0f38 18       		.uleb128 0x18
 11696 0f39 3C020000 		.4byte	.LASF133
 11697 0f3d 01       		.byte	0x1
 11698 0f3e 3108     		.2byte	0x831
 11699 0f40 CE000000 		.4byte	0xce
 11700 0f44 03       		.uleb128 0x3
 11701 0f45 91       		.byte	0x91
 11702 0f46 B47F     		.sleb128 -76
 11703 0f48 00       		.byte	0
 11704 0f49 16       		.uleb128 0x16
 11705 0f4a 820A0000 		.4byte	.LBB63
 11706 0f4e AA010000 		.4byte	.LBE63-.LBB63
 11707 0f52 18       		.uleb128 0x18
 11708 0f53 54020000 		.4byte	.LASF130
 11709 0f57 01       		.byte	0x1
 11710 0f58 3C08     		.2byte	0x83c
 11711 0f5a 82020000 		.4byte	0x282
 11712 0f5e 03       		.uleb128 0x3
 11713 0f5f 91       		.byte	0x91
 11714 0f60 9C7F     		.sleb128 -100
 11715 0f62 15       		.uleb128 0x15
 11716 0f63 6900     		.ascii	"i\000"
 11717 0f65 01       		.byte	0x1
 11718 0f66 3D08     		.2byte	0x83d
 11719 0f68 E4000000 		.4byte	0xe4
 11720 0f6c 03       		.uleb128 0x3
 11721 0f6d 91       		.byte	0x91
 11722 0f6e B07F     		.sleb128 -80
 11723 0f70 18       		.uleb128 0x18
 11724 0f71 03060000 		.4byte	.LASF140
 11725 0f75 01       		.byte	0x1
 11726 0f76 4608     		.2byte	0x846
 11727 0f78 CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 248


 11728 0f7c 03       		.uleb128 0x3
 11729 0f7d 91       		.byte	0x91
 11730 0f7e AE7F     		.sleb128 -82
 11731 0f80 16       		.uleb128 0x16
 11732 0f81 AA0B0000 		.4byte	.LBB64
 11733 0f85 2C000000 		.4byte	.LBE64-.LBB64
 11734 0f89 18       		.uleb128 0x18
 11735 0f8a 3C020000 		.4byte	.LASF133
 11736 0f8e 01       		.byte	0x1
 11737 0f8f 5E08     		.2byte	0x85e
 11738 0f91 C3000000 		.4byte	0xc3
 11739 0f95 03       		.uleb128 0x3
 11740 0f96 91       		.byte	0x91
 11741 0f97 AC7F     		.sleb128 -84
 11742 0f99 00       		.byte	0
 11743 0f9a 00       		.byte	0
 11744 0f9b 00       		.byte	0
 11745 0f9c 17       		.uleb128 0x17
 11746 0f9d 45040000 		.4byte	.LASF141
 11747 0fa1 01       		.byte	0x1
 11748 0fa2 7608     		.2byte	0x876
 11749 0fa4 00000000 		.4byte	.LFB92
 11750 0fa8 50010000 		.4byte	.LFE92-.LFB92
 11751 0fac 01       		.uleb128 0x1
 11752 0fad 9C       		.byte	0x9c
 11753 0fae E80F0000 		.4byte	0xfe8
 11754 0fb2 11       		.uleb128 0x11
 11755 0fb3 950C0000 		.4byte	.LASF142
 11756 0fb7 01       		.byte	0x1
 11757 0fb8 7608     		.2byte	0x876
 11758 0fba EF000000 		.4byte	0xef
 11759 0fbe 02       		.uleb128 0x2
 11760 0fbf 91       		.byte	0x91
 11761 0fc0 6F       		.sleb128 -17
 11762 0fc1 11       		.uleb128 0x11
 11763 0fc2 070E0000 		.4byte	.LASF143
 11764 0fc6 01       		.byte	0x1
 11765 0fc7 7608     		.2byte	0x876
 11766 0fc9 E80F0000 		.4byte	0xfe8
 11767 0fcd 02       		.uleb128 0x2
 11768 0fce 91       		.byte	0x91
 11769 0fcf 68       		.sleb128 -24
 11770 0fd0 16       		.uleb128 0x16
 11771 0fd1 48000000 		.4byte	.LBB65
 11772 0fd5 54000000 		.4byte	.LBE65-.LBB65
 11773 0fd9 15       		.uleb128 0x15
 11774 0fda 6900     		.ascii	"i\000"
 11775 0fdc 01       		.byte	0x1
 11776 0fdd 8208     		.2byte	0x882
 11777 0fdf 9F000000 		.4byte	0x9f
 11778 0fe3 02       		.uleb128 0x2
 11779 0fe4 91       		.byte	0x91
 11780 0fe5 74       		.sleb128 -12
 11781 0fe6 00       		.byte	0
 11782 0fe7 00       		.byte	0
 11783 0fe8 1B       		.uleb128 0x1b
 11784 0fe9 04       		.byte	0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 249


 11785 0fea EF000000 		.4byte	0xef
 11786 0fee 0E       		.uleb128 0xe
 11787 0fef EF000000 		.4byte	0xef
 11788 0ff3 FE0F0000 		.4byte	0xffe
 11789 0ff7 0F       		.uleb128 0xf
 11790 0ff8 4C010000 		.4byte	0x14c
 11791 0ffc 01       		.byte	0x1
 11792 0ffd 00       		.byte	0
 11793 0ffe 1C       		.uleb128 0x1c
 11794 0fff 8A050000 		.4byte	.LASF144
 11795 1003 01       		.byte	0x1
 11796 1004 A6       		.byte	0xa6
 11797 1005 EE0F0000 		.4byte	0xfee
 11798 1009 05       		.uleb128 0x5
 11799 100a 03       		.byte	0x3
 11800 100b 6C000000 		.4byte	eepromArray
 11801 100f 1D       		.uleb128 0x1d
 11802 1010 12110000 		.4byte	.LASF145
 11803 1014 09       		.byte	0x9
 11804 1015 F3       		.byte	0xf3
 11805 1016 40010000 		.4byte	0x140
 11806 101a 1D       		.uleb128 0x1d
 11807 101b D8110000 		.4byte	.LASF146
 11808 101f 09       		.byte	0x9
 11809 1020 F9       		.byte	0xf9
 11810 1021 40010000 		.4byte	0x140
 11811 1025 0E       		.uleb128 0xe
 11812 1026 EF000000 		.4byte	0xef
 11813 102a 35100000 		.4byte	0x1035
 11814 102e 0F       		.uleb128 0xf
 11815 102f 4C010000 		.4byte	0x14c
 11816 1033 3F       		.byte	0x3f
 11817 1034 00       		.byte	0
 11818 1035 1D       		.uleb128 0x1d
 11819 1036 2A0A0000 		.4byte	.LASF147
 11820 103a 09       		.byte	0x9
 11821 103b FA       		.byte	0xfa
 11822 103c 25100000 		.4byte	0x1025
 11823 1040 1D       		.uleb128 0x1d
 11824 1041 1B060000 		.4byte	.LASF148
 11825 1045 09       		.byte	0x9
 11826 1046 FE       		.byte	0xfe
 11827 1047 40010000 		.4byte	0x140
 11828 104b 1D       		.uleb128 0x1d
 11829 104c 50110000 		.4byte	.LASF149
 11830 1050 09       		.byte	0x9
 11831 1051 FF       		.byte	0xff
 11832 1052 25100000 		.4byte	0x1025
 11833 1056 1D       		.uleb128 0x1d
 11834 1057 C4000000 		.4byte	.LASF150
 11835 105b 0A       		.byte	0xa
 11836 105c 82       		.byte	0x82
 11837 105d C5010000 		.4byte	0x1c5
 11838 1061 0E       		.uleb128 0xe
 11839 1062 72100000 		.4byte	0x1072
 11840 1066 72100000 		.4byte	0x1072
 11841 106a 1E       		.uleb128 0x1e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 250


 11842 106b 4C010000 		.4byte	0x14c
 11843 106f FF03     		.2byte	0x3ff
 11844 1071 00       		.byte	0
 11845 1072 1F       		.uleb128 0x1f
 11846 1073 B8000000 		.4byte	0xb8
 11847 1077 20       		.uleb128 0x20
 11848 1078 03090000 		.4byte	.LASF151
 11849 107c 01       		.byte	0x1
 11850 107d AF       		.byte	0xaf
 11851 107e 88100000 		.4byte	0x1088
 11852 1082 05       		.uleb128 0x5
 11853 1083 03       		.byte	0x3
 11854 1084 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 11855 1088 1F       		.uleb128 0x1f
 11856 1089 61100000 		.4byte	0x1061
 11857 108d 1D       		.uleb128 0x1d
 11858 108e 16070000 		.4byte	.LASF152
 11859 1092 0B       		.byte	0xb
 11860 1093 F9       		.byte	0xf9
 11861 1094 EF000000 		.4byte	0xef
 11862 1098 21       		.uleb128 0x21
 11863 1099 DD0B0000 		.4byte	.LASF153
 11864 109d 0C       		.byte	0xc
 11865 109e 1207     		.2byte	0x712
 11866 10a0 A4100000 		.4byte	0x10a4
 11867 10a4 06       		.uleb128 0x6
 11868 10a5 D9000000 		.4byte	0xd9
 11869 10a9 20       		.uleb128 0x20
 11870 10aa 30090000 		.4byte	.LASF154
 11871 10ae 0D       		.byte	0xd
 11872 10af 41       		.byte	0x41
 11873 10b0 EF000000 		.4byte	0xef
 11874 10b4 05       		.uleb128 0x5
 11875 10b5 03       		.byte	0x3
 11876 10b6 00000000 		.4byte	Decoder_1_Enabled
 11877 10ba 0E       		.uleb128 0xe
 11878 10bb 09020000 		.4byte	0x209
 11879 10bf CA100000 		.4byte	0x10ca
 11880 10c3 0F       		.uleb128 0xf
 11881 10c4 4C010000 		.4byte	0x14c
 11882 10c8 FF       		.byte	0xff
 11883 10c9 00       		.byte	0
 11884 10ca 20       		.uleb128 0x20
 11885 10cb 41010000 		.4byte	.LASF155
 11886 10cf 01       		.byte	0x1
 11887 10d0 B9       		.byte	0xb9
 11888 10d1 DB100000 		.4byte	0x10db
 11889 10d5 05       		.uleb128 0x5
 11890 10d6 03       		.byte	0x3
 11891 10d7 00000000 		.4byte	I2Cbuff1
 11892 10db 06       		.uleb128 0x6
 11893 10dc BA100000 		.4byte	0x10ba
 11894 10e0 20       		.uleb128 0x20
 11895 10e1 6C010000 		.4byte	.LASF156
 11896 10e5 01       		.byte	0x1
 11897 10e6 5A       		.byte	0x5a
 11898 10e7 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 251


 11899 10eb 05       		.uleb128 0x5
 11900 10ec 03       		.byte	0x3
 11901 10ed 00000000 		.4byte	octave
 11902 10f1 22       		.uleb128 0x22
 11903 10f2 180E0000 		.4byte	.LASF157
 11904 10f6 01       		.byte	0x1
 11905 10f7 0501     		.2byte	0x105
 11906 10f9 B8000000 		.4byte	0xb8
 11907 10fd 05       		.uleb128 0x5
 11908 10fe 03       		.byte	0x3
 11909 10ff 00000000 		.4byte	currentNeck
 11910 1103 20       		.uleb128 0x20
 11911 1104 24070000 		.4byte	.LASF158
 11912 1108 01       		.byte	0x1
 11913 1109 65       		.byte	0x65
 11914 110a B8000000 		.4byte	0xb8
 11915 110e 05       		.uleb128 0x5
 11916 110f 03       		.byte	0x3
 11917 1110 00000000 		.4byte	currentCopedent
 11918 1114 22       		.uleb128 0x22
 11919 1115 EB020000 		.4byte	.LASF159
 11920 1119 01       		.byte	0x1
 11921 111a 0001     		.2byte	0x100
 11922 111c B8000000 		.4byte	0xb8
 11923 1120 05       		.uleb128 0x5
 11924 1121 03       		.byte	0x3
 11925 1122 00000000 		.4byte	mainOLEDWaitingToSend
 11926 1126 20       		.uleb128 0x20
 11927 1127 80010000 		.4byte	.LASF160
 11928 112b 01       		.byte	0x1
 11929 112c 27       		.byte	0x27
 11930 112d B8000000 		.4byte	0xb8
 11931 1131 05       		.uleb128 0x5
 11932 1132 03       		.byte	0x3
 11933 1133 00000000 		.4byte	volumeWaitingToSend
 11934 1137 22       		.uleb128 0x22
 11935 1138 B5010000 		.4byte	.LASF161
 11936 113c 01       		.byte	0x1
 11937 113d 0101     		.2byte	0x101
 11938 113f B8000000 		.4byte	0xb8
 11939 1143 05       		.uleb128 0x5
 11940 1144 03       		.byte	0x3
 11941 1145 00000000 		.4byte	macroOLEDWaitingToSend
 11942 1149 22       		.uleb128 0x22
 11943 114a 89100000 		.4byte	.LASF162
 11944 114e 01       		.byte	0x1
 11945 114f 0601     		.2byte	0x106
 11946 1151 B8000000 		.4byte	0xb8
 11947 1155 05       		.uleb128 0x5
 11948 1156 03       		.byte	0x3
 11949 1157 00000000 		.4byte	neckByte
 11950 115b 0E       		.uleb128 0xe
 11951 115c B8000000 		.4byte	0xb8
 11952 1160 6B110000 		.4byte	0x116b
 11953 1164 0F       		.uleb128 0xf
 11954 1165 4C010000 		.4byte	0x14c
 11955 1169 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 252


 11956 116a 00       		.byte	0
 11957 116b 20       		.uleb128 0x20
 11958 116c 66010000 		.4byte	.LASF163
 11959 1170 01       		.byte	0x1
 11960 1171 66       		.byte	0x66
 11961 1172 5B110000 		.4byte	0x115b
 11962 1176 05       		.uleb128 0x5
 11963 1177 03       		.byte	0x3
 11964 1178 00000000 		.4byte	necks
 11965 117c 22       		.uleb128 0x22
 11966 117d 240E0000 		.4byte	.LASF164
 11967 1181 01       		.byte	0x1
 11968 1182 0801     		.2byte	0x108
 11969 1184 B8000000 		.4byte	0xb8
 11970 1188 05       		.uleb128 0x5
 11971 1189 03       		.byte	0x3
 11972 118a 00000000 		.4byte	editMode
 11973 118e 0E       		.uleb128 0xe
 11974 118f B8000000 		.4byte	0xb8
 11975 1193 AA110000 		.4byte	0x11aa
 11976 1197 0F       		.uleb128 0xf
 11977 1198 4C010000 		.4byte	0x14c
 11978 119c 3F       		.byte	0x3f
 11979 119d 0F       		.uleb128 0xf
 11980 119e 4C010000 		.4byte	0x14c
 11981 11a2 0F       		.byte	0xf
 11982 11a3 0F       		.uleb128 0xf
 11983 11a4 4C010000 		.4byte	0x14c
 11984 11a8 08       		.byte	0x8
 11985 11a9 00       		.byte	0
 11986 11aa 20       		.uleb128 0x20
 11987 11ab 7B000000 		.4byte	.LASF165
 11988 11af 01       		.byte	0x1
 11989 11b0 DC       		.byte	0xdc
 11990 11b1 8E110000 		.4byte	0x118e
 11991 11b5 05       		.uleb128 0x5
 11992 11b6 03       		.byte	0x3
 11993 11b7 00000000 		.4byte	macroNamesArray
 11994 11bb 0E       		.uleb128 0xe
 11995 11bc B8000000 		.4byte	0xb8
 11996 11c0 D7110000 		.4byte	0x11d7
 11997 11c4 0F       		.uleb128 0xf
 11998 11c5 4C010000 		.4byte	0x14c
 11999 11c9 3F       		.byte	0x3f
 12000 11ca 0F       		.uleb128 0xf
 12001 11cb 4C010000 		.4byte	0x14c
 12002 11cf 03       		.byte	0x3
 12003 11d0 0F       		.uleb128 0xf
 12004 11d1 4C010000 		.4byte	0x14c
 12005 11d5 09       		.byte	0x9
 12006 11d6 00       		.byte	0
 12007 11d7 20       		.uleb128 0x20
 12008 11d8 F2000000 		.4byte	.LASF166
 12009 11dc 01       		.byte	0x1
 12010 11dd DD       		.byte	0xdd
 12011 11de BB110000 		.4byte	0x11bb
 12012 11e2 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 253


 12013 11e3 03       		.byte	0x3
 12014 11e4 00000000 		.4byte	controlNamesArray
 12015 11e8 20       		.uleb128 0x20
 12016 11e9 CE0F0000 		.4byte	.LASF167
 12017 11ed 01       		.byte	0x1
 12018 11ee E9       		.byte	0xe9
 12019 11ef B8000000 		.4byte	0xb8
 12020 11f3 05       		.uleb128 0x5
 12021 11f4 03       		.byte	0x3
 12022 11f5 00000000 		.4byte	patchNum
 12023 11f9 20       		.uleb128 0x20
 12024 11fa E6090000 		.4byte	.LASF168
 12025 11fe 01       		.byte	0x1
 12026 11ff D7       		.byte	0xd7
 12027 1200 B8000000 		.4byte	0xb8
 12028 1204 05       		.uleb128 0x5
 12029 1205 03       		.byte	0x3
 12030 1206 00000000 		.4byte	currentPresetSelection
 12031 120a 0E       		.uleb128 0xe
 12032 120b B8000000 		.4byte	0xb8
 12033 120f 20120000 		.4byte	0x1220
 12034 1213 0F       		.uleb128 0xf
 12035 1214 4C010000 		.4byte	0x14c
 12036 1218 3F       		.byte	0x3f
 12037 1219 0F       		.uleb128 0xf
 12038 121a 4C010000 		.4byte	0x14c
 12039 121e 0D       		.byte	0xd
 12040 121f 00       		.byte	0
 12041 1220 20       		.uleb128 0x20
 12042 1221 53030000 		.4byte	.LASF169
 12043 1225 01       		.byte	0x1
 12044 1226 D8       		.byte	0xd8
 12045 1227 0A120000 		.4byte	0x120a
 12046 122b 05       		.uleb128 0x5
 12047 122c 03       		.byte	0x3
 12048 122d 00000000 		.4byte	presetNamesArray
 12049 1231 20       		.uleb128 0x20
 12050 1232 C1020000 		.4byte	.LASF170
 12051 1236 01       		.byte	0x1
 12052 1237 D9       		.byte	0xd9
 12053 1238 B8000000 		.4byte	0xb8
 12054 123c 05       		.uleb128 0x5
 12055 123d 03       		.byte	0x3
 12056 123e 00000000 		.4byte	presetNumberToLoad
 12057 1242 0E       		.uleb128 0xe
 12058 1243 B8000000 		.4byte	0xb8
 12059 1247 58120000 		.4byte	0x1258
 12060 124b 0F       		.uleb128 0xf
 12061 124c 4C010000 		.4byte	0x14c
 12062 1250 06       		.byte	0x6
 12063 1251 0F       		.uleb128 0xf
 12064 1252 4C010000 		.4byte	0x14c
 12065 1256 09       		.byte	0x9
 12066 1257 00       		.byte	0
 12067 1258 20       		.uleb128 0x20
 12068 1259 DF010000 		.4byte	.LASF171
 12069 125d 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 254


 12070 125e EF       		.byte	0xef
 12071 125f 42120000 		.4byte	0x1242
 12072 1263 05       		.uleb128 0x5
 12073 1264 03       		.byte	0x3
 12074 1265 00000000 		.4byte	copedentNamesArray
 12075 1269 0E       		.uleb128 0xe
 12076 126a B8000000 		.4byte	0xb8
 12077 126e 79120000 		.4byte	0x1279
 12078 1272 0F       		.uleb128 0xf
 12079 1273 4C010000 		.4byte	0x14c
 12080 1277 3F       		.byte	0x3f
 12081 1278 00       		.byte	0
 12082 1279 22       		.uleb128 0x22
 12083 127a 57050000 		.4byte	.LASF172
 12084 127e 01       		.byte	0x1
 12085 127f 0301     		.2byte	0x103
 12086 1281 69120000 		.4byte	0x1269
 12087 1285 05       		.uleb128 0x5
 12088 1286 03       		.byte	0x3
 12089 1287 00000000 		.4byte	presetAlreadyDisplayed
 12090 128b 20       		.uleb128 0x20
 12091 128c 89070000 		.4byte	.LASF173
 12092 1290 01       		.byte	0x1
 12093 1291 9E       		.byte	0x9e
 12094 1292 B8000000 		.4byte	0xb8
 12095 1296 05       		.uleb128 0x5
 12096 1297 03       		.byte	0x3
 12097 1298 00000000 		.4byte	whichMacro
 12098 129c 22       		.uleb128 0x22
 12099 129d 5E0F0000 		.4byte	.LASF174
 12100 12a1 01       		.byte	0x1
 12101 12a2 0A01     		.2byte	0x10a
 12102 12a4 B8000000 		.4byte	0xb8
 12103 12a8 05       		.uleb128 0x5
 12104 12a9 03       		.byte	0x3
 12105 12aa 00000000 		.4byte	fretCalibrationMode
 12106 12ae 22       		.uleb128 0x22
 12107 12af C3110000 		.4byte	.LASF175
 12108 12b3 01       		.byte	0x1
 12109 12b4 0901     		.2byte	0x109
 12110 12b6 B8000000 		.4byte	0xb8
 12111 12ba 05       		.uleb128 0x5
 12112 12bb 03       		.byte	0x3
 12113 12bc 00000000 		.4byte	leverCalibrationMode
 12114 12c0 0E       		.uleb128 0xe
 12115 12c1 CE000000 		.4byte	0xce
 12116 12c5 D6120000 		.4byte	0x12d6
 12117 12c9 0F       		.uleb128 0xf
 12118 12ca 4C010000 		.4byte	0x14c
 12119 12ce 01       		.byte	0x1
 12120 12cf 0F       		.uleb128 0xf
 12121 12d0 4C010000 		.4byte	0x14c
 12122 12d4 0B       		.byte	0xb
 12123 12d5 00       		.byte	0
 12124 12d6 20       		.uleb128 0x20
 12125 12d7 65100000 		.4byte	.LASF176
 12126 12db 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 255


 12127 12dc D3       		.byte	0xd3
 12128 12dd C0120000 		.4byte	0x12c0
 12129 12e1 05       		.uleb128 0x5
 12130 12e2 03       		.byte	0x3
 12131 12e3 00000000 		.4byte	fretMeasurements
 12132 12e7 0E       		.uleb128 0xe
 12133 12e8 CE000000 		.4byte	0xce
 12134 12ec F7120000 		.4byte	0x12f7
 12135 12f0 0F       		.uleb128 0xf
 12136 12f1 4C010000 		.4byte	0x14c
 12137 12f5 09       		.byte	0x9
 12138 12f6 00       		.byte	0
 12139 12f7 20       		.uleb128 0x20
 12140 12f8 520D0000 		.4byte	.LASF177
 12141 12fc 01       		.byte	0x1
 12142 12fd C3       		.byte	0xc3
 12143 12fe E7120000 		.4byte	0x12e7
 12144 1302 05       		.uleb128 0x5
 12145 1303 03       		.byte	0x3
 12146 1304 00000000 		.4byte	pedals_low
 12147 1308 20       		.uleb128 0x20
 12148 1309 CC010000 		.4byte	.LASF178
 12149 130d 01       		.byte	0x1
 12150 130e C4       		.byte	0xc4
 12151 130f E7120000 		.4byte	0x12e7
 12152 1313 05       		.uleb128 0x5
 12153 1314 03       		.byte	0x3
 12154 1315 00000000 		.4byte	pedals_high
 12155 1319 0E       		.uleb128 0xe
 12156 131a B8000000 		.4byte	0xb8
 12157 131e 29130000 		.4byte	0x1329
 12158 1322 0F       		.uleb128 0xf
 12159 1323 4C010000 		.4byte	0x14c
 12160 1327 09       		.byte	0x9
 12161 1328 00       		.byte	0
 12162 1329 20       		.uleb128 0x20
 12163 132a 35060000 		.4byte	.LASF179
 12164 132e 01       		.byte	0x1
 12165 132f EB       		.byte	0xeb
 12166 1330 19130000 		.4byte	0x1319
 12167 1334 05       		.uleb128 0x5
 12168 1335 03       		.byte	0x3
 12169 1336 00000000 		.4byte	pedal_inverted
 12170 133a 20       		.uleb128 0x20
 12171 133b A2090000 		.4byte	.LASF180
 12172 133f 01       		.byte	0x1
 12173 1340 5B       		.byte	0x5b
 12174 1341 E7120000 		.4byte	0x12e7
 12175 1345 05       		.uleb128 0x5
 12176 1346 03       		.byte	0x3
 12177 1347 00000000 		.4byte	angle
 12178 134b 0E       		.uleb128 0xe
 12179 134c 0E020000 		.4byte	0x20e
 12180 1350 5B130000 		.4byte	0x135b
 12181 1354 0F       		.uleb128 0xf
 12182 1355 4C010000 		.4byte	0x14c
 12183 1359 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 256


 12184 135a 00       		.byte	0
 12185 135b 23       		.uleb128 0x23
 12186 135c 62617200 		.ascii	"bar\000"
 12187 1360 01       		.byte	0x1
 12188 1361 77       		.byte	0x77
 12189 1362 6C130000 		.4byte	0x136c
 12190 1366 05       		.uleb128 0x5
 12191 1367 03       		.byte	0x3
 12192 1368 00000000 		.4byte	bar
 12193 136c 06       		.uleb128 0x6
 12194 136d 4B130000 		.4byte	0x134b
 12195 1371 20       		.uleb128 0x20
 12196 1372 1E0F0000 		.4byte	.LASF181
 12197 1376 01       		.byte	0x1
 12198 1377 23       		.byte	0x23
 12199 1378 AD000000 		.4byte	0xad
 12200 137c 05       		.uleb128 0x5
 12201 137d 03       		.byte	0x3
 12202 137e 00000000 		.4byte	transposeSemitones
 12203 1382 20       		.uleb128 0x20
 12204 1383 DF060000 		.4byte	.LASF182
 12205 1387 01       		.byte	0x1
 12206 1388 24       		.byte	0x24
 12207 1389 AD000000 		.4byte	0xad
 12208 138d 05       		.uleb128 0x5
 12209 138e 03       		.byte	0x3
 12210 138f 00000000 		.4byte	transposeCents
 12211 1393 20       		.uleb128 0x20
 12212 1394 E0120000 		.4byte	.LASF183
 12213 1398 01       		.byte	0x1
 12214 1399 25       		.byte	0x25
 12215 139a 13010000 		.4byte	0x113
 12216 139e 05       		.uleb128 0x5
 12217 139f 03       		.byte	0x3
 12218 13a0 00000000 		.4byte	transposeFloat
 12219 13a4 20       		.uleb128 0x20
 12220 13a5 80090000 		.4byte	.LASF184
 12221 13a9 01       		.byte	0x1
 12222 13aa 26       		.byte	0x26
 12223 13ab AD000000 		.4byte	0xad
 12224 13af 05       		.uleb128 0x5
 12225 13b0 03       		.byte	0x3
 12226 13b1 00000000 		.4byte	volumeInt
 12227 13b5 20       		.uleb128 0x20
 12228 13b6 3F100000 		.4byte	.LASF185
 12229 13ba 01       		.byte	0x1
 12230 13bb 7D       		.byte	0x7d
 12231 13bc 9F000000 		.4byte	0x9f
 12232 13c0 05       		.uleb128 0x5
 12233 13c1 03       		.byte	0x3
 12234 13c2 00000000 		.4byte	prevOctave
 12235 13c6 20       		.uleb128 0x20
 12236 13c7 EF0A0000 		.4byte	.LASF186
 12237 13cb 01       		.byte	0x1
 12238 13cc E6       		.byte	0xe6
 12239 13cd B8000000 		.4byte	0xb8
 12240 13d1 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 257


 12241 13d2 03       		.byte	0x3
 12242 13d3 00000000 		.4byte	dualSlider
 12243 13d7 20       		.uleb128 0x20
 12244 13d8 A90C0000 		.4byte	.LASF187
 12245 13dc 01       		.byte	0x1
 12246 13dd C7       		.byte	0xc7
 12247 13de B8000000 		.4byte	0xb8
 12248 13e2 05       		.uleb128 0x5
 12249 13e3 03       		.byte	0x3
 12250 13e4 00000000 		.4byte	deadZone
 12251 13e8 20       		.uleb128 0x20
 12252 13e9 4B0B0000 		.4byte	.LASF188
 12253 13ed 01       		.byte	0x1
 12254 13ee 2D       		.byte	0x2d
 12255 13ef 5B110000 		.4byte	0x115b
 12256 13f3 05       		.uleb128 0x5
 12257 13f4 03       		.byte	0x3
 12258 13f5 00000000 		.4byte	stringRepresentation
 12259 13f9 20       		.uleb128 0x20
 12260 13fa 03120000 		.4byte	.LASF189
 12261 13fe 01       		.byte	0x1
 12262 13ff 2C       		.byte	0x2c
 12263 1400 B8000000 		.4byte	0xb8
 12264 1404 05       		.uleb128 0x5
 12265 1405 03       		.byte	0x3
 12266 1406 00000000 		.4byte	octaveAction
 12267 140a 20       		.uleb128 0x20
 12268 140b BD0B0000 		.4byte	.LASF190
 12269 140f 01       		.byte	0x1
 12270 1410 28       		.byte	0x28
 12271 1411 B8000000 		.4byte	0xb8
 12272 1415 05       		.uleb128 0x5
 12273 1416 03       		.byte	0x3
 12274 1417 00000000 		.4byte	midiSendOn
 12275 141b 20       		.uleb128 0x20
 12276 141c EB030000 		.4byte	.LASF191
 12277 1420 01       		.byte	0x1
 12278 1421 29       		.byte	0x29
 12279 1422 B8000000 		.4byte	0xb8
 12280 1426 05       		.uleb128 0x5
 12281 1427 03       		.byte	0x3
 12282 1428 00000000 		.4byte	midiBarSendOn
 12283 142c 20       		.uleb128 0x20
 12284 142d 9F050000 		.4byte	.LASF192
 12285 1431 01       		.byte	0x1
 12286 1432 45       		.byte	0x45
 12287 1433 B8000000 		.4byte	0xb8
 12288 1437 05       		.uleb128 0x5
 12289 1438 03       		.byte	0x3
 12290 1439 00000000 		.4byte	sendFirmwareUpdateRequest
 12291 143d 0E       		.uleb128 0xe
 12292 143e B8000000 		.4byte	0xb8
 12293 1442 4D140000 		.4byte	0x144d
 12294 1446 0F       		.uleb128 0xf
 12295 1447 4C010000 		.4byte	0x14c
 12296 144b 0F       		.byte	0xf
 12297 144c 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 258


 12298 144d 20       		.uleb128 0x20
 12299 144e 8C060000 		.4byte	.LASF193
 12300 1452 01       		.byte	0x1
 12301 1453 A3       		.byte	0xa3
 12302 1454 3D140000 		.4byte	0x143d
 12303 1458 05       		.uleb128 0x5
 12304 1459 03       		.byte	0x3
 12305 145a 00000000 		.4byte	knobFrozen
 12306 145e 0E       		.uleb128 0xe
 12307 145f C3000000 		.4byte	0xc3
 12308 1463 6E140000 		.4byte	0x146e
 12309 1467 0F       		.uleb128 0xf
 12310 1468 4C010000 		.4byte	0x14c
 12311 146c 0F       		.byte	0xf
 12312 146d 00       		.byte	0
 12313 146e 20       		.uleb128 0x20
 12314 146f 60040000 		.4byte	.LASF194
 12315 1473 01       		.byte	0x1
 12316 1474 A2       		.byte	0xa2
 12317 1475 5E140000 		.4byte	0x145e
 12318 1479 05       		.uleb128 0x5
 12319 147a 03       		.byte	0x3
 12320 147b 00000000 		.4byte	prevMacroKnobValues
 12321 147f 20       		.uleb128 0x20
 12322 1480 47120000 		.4byte	.LASF195
 12323 1484 01       		.byte	0x1
 12324 1485 20       		.byte	0x20
 12325 1486 B8000000 		.4byte	0xb8
 12326 148a 05       		.uleb128 0x5
 12327 148b 03       		.byte	0x3
 12328 148c 00000000 		.4byte	presetNumberToStore
 12329 1490 20       		.uleb128 0x20
 12330 1491 8B000000 		.4byte	.LASF196
 12331 1495 01       		.byte	0x1
 12332 1496 31       		.byte	0x31
 12333 1497 B8000000 		.4byte	0xb8
 12334 149b 05       		.uleb128 0x5
 12335 149c 03       		.byte	0x3
 12336 149d 00000000 		.4byte	sendLocalPresetStoreCommand
 12337 14a1 0E       		.uleb128 0xe
 12338 14a2 21010000 		.4byte	0x121
 12339 14a6 B1140000 		.4byte	0x14b1
 12340 14aa 0F       		.uleb128 0xf
 12341 14ab 4C010000 		.4byte	0x14c
 12342 14af 0D       		.byte	0xd
 12343 14b0 00       		.byte	0
 12344 14b1 1D       		.uleb128 0x1d
 12345 14b2 9D030000 		.4byte	.LASF197
 12346 14b6 08       		.byte	0x8
 12347 14b7 8A       		.byte	0x8a
 12348 14b8 A1140000 		.4byte	0x14a1
 12349 14bc 1D       		.uleb128 0x1d
 12350 14bd BB120000 		.4byte	.LASF198
 12351 14c1 0E       		.byte	0xe
 12352 14c2 12       		.byte	0x12
 12353 14c3 B8000000 		.4byte	0xb8
 12354 14c7 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 259


 12355 14c8 B8000000 		.4byte	0xb8
 12356 14cc D8140000 		.4byte	0x14d8
 12357 14d0 1E       		.uleb128 0x1e
 12358 14d1 4C010000 		.4byte	0x14c
 12359 14d5 FF07     		.2byte	0x7ff
 12360 14d7 00       		.byte	0
 12361 14d8 20       		.uleb128 0x20
 12362 14d9 880F0000 		.4byte	.LASF199
 12363 14dd 01       		.byte	0x1
 12364 14de 0E       		.byte	0xe
 12365 14df C7140000 		.4byte	0x14c7
 12366 14e3 05       		.uleb128 0x5
 12367 14e4 03       		.byte	0x3
 12368 14e5 00000000 		.4byte	sysexBuffer
 12369 14e9 20       		.uleb128 0x20
 12370 14ea FF030000 		.4byte	.LASF200
 12371 14ee 01       		.byte	0x1
 12372 14ef 0F       		.byte	0xf
 12373 14f0 E4000000 		.4byte	0xe4
 12374 14f4 05       		.uleb128 0x5
 12375 14f5 03       		.byte	0x3
 12376 14f6 00000000 		.4byte	sysexPointer
 12377 14fa 20       		.uleb128 0x20
 12378 14fb 860C0000 		.4byte	.LASF201
 12379 14ff 01       		.byte	0x1
 12380 1500 10       		.byte	0x10
 12381 1501 B8000000 		.4byte	0xb8
 12382 1505 05       		.uleb128 0x5
 12383 1506 03       		.byte	0x3
 12384 1507 00000000 		.4byte	receivingSysex
 12385 150b 20       		.uleb128 0x20
 12386 150c 58070000 		.4byte	.LASF202
 12387 1510 01       		.byte	0x1
 12388 1511 11       		.byte	0x11
 12389 1512 B8000000 		.4byte	0xb8
 12390 1516 05       		.uleb128 0x5
 12391 1517 03       		.byte	0x3
 12392 1518 00000000 		.4byte	parsingSysex
 12393 151c 0E       		.uleb128 0xe
 12394 151d 09020000 		.4byte	0x209
 12395 1521 2D150000 		.4byte	0x152d
 12396 1525 1E       		.uleb128 0x1e
 12397 1526 4C010000 		.4byte	0x14c
 12398 152a FF07     		.2byte	0x7ff
 12399 152c 00       		.byte	0
 12400 152d 20       		.uleb128 0x20
 12401 152e 1A000000 		.4byte	.LASF203
 12402 1532 01       		.byte	0x1
 12403 1533 12       		.byte	0x12
 12404 1534 3E150000 		.4byte	0x153e
 12405 1538 05       		.uleb128 0x5
 12406 1539 03       		.byte	0x3
 12407 153a 00000000 		.4byte	presetArray
 12408 153e 06       		.uleb128 0x6
 12409 153f 1C150000 		.4byte	0x151c
 12410 1543 20       		.uleb128 0x20
 12411 1544 28030000 		.4byte	.LASF204
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 260


 12412 1548 01       		.byte	0x1
 12413 1549 13       		.byte	0x13
 12414 154a B8000000 		.4byte	0xb8
 12415 154e 05       		.uleb128 0x5
 12416 154f 03       		.byte	0x3
 12417 1550 00000000 		.4byte	presetNumberToWrite
 12418 1554 20       		.uleb128 0x20
 12419 1555 D40E0000 		.4byte	.LASF205
 12420 1559 01       		.byte	0x1
 12421 155a 14       		.byte	0x14
 12422 155b B8000000 		.4byte	0xb8
 12423 155f 05       		.uleb128 0x5
 12424 1560 03       		.byte	0x3
 12425 1561 00000000 		.4byte	copedentNumberToWrite
 12426 1565 20       		.uleb128 0x20
 12427 1566 9A020000 		.4byte	.LASF206
 12428 156a 01       		.byte	0x1
 12429 156b 15       		.byte	0x15
 12430 156c B8000000 		.4byte	0xb8
 12431 1570 05       		.uleb128 0x5
 12432 1571 03       		.byte	0x3
 12433 1572 00000000 		.4byte	sendMessageEnd
 12434 1576 20       		.uleb128 0x20
 12435 1577 720F0000 		.4byte	.LASF207
 12436 157b 01       		.byte	0x1
 12437 157c 17       		.byte	0x17
 12438 157d B8000000 		.4byte	0xb8
 12439 1581 05       		.uleb128 0x5
 12440 1582 03       		.byte	0x3
 12441 1583 00000000 		.4byte	sendSingleParamUpdate
 12442 1587 20       		.uleb128 0x20
 12443 1588 27050000 		.4byte	.LASF208
 12444 158c 01       		.byte	0x1
 12445 158d 18       		.byte	0x18
 12446 158e B8000000 		.4byte	0xb8
 12447 1592 05       		.uleb128 0x5
 12448 1593 03       		.byte	0x3
 12449 1594 00000000 		.4byte	singleParamToUpdateHigh
 12450 1598 20       		.uleb128 0x20
 12451 1599 EA0B0000 		.4byte	.LASF209
 12452 159d 01       		.byte	0x1
 12453 159e 19       		.byte	0x19
 12454 159f B8000000 		.4byte	0xb8
 12455 15a3 05       		.uleb128 0x5
 12456 15a4 03       		.byte	0x3
 12457 15a5 00000000 		.4byte	singleParamToUpdateLow
 12458 15a9 20       		.uleb128 0x20
 12459 15aa C80B0000 		.4byte	.LASF210
 12460 15ae 01       		.byte	0x1
 12461 15af 1A       		.byte	0x1a
 12462 15b0 B8000000 		.4byte	0xb8
 12463 15b4 05       		.uleb128 0x5
 12464 15b5 03       		.byte	0x3
 12465 15b6 00000000 		.4byte	singleParamValueHigh
 12466 15ba 20       		.uleb128 0x20
 12467 15bb AA060000 		.4byte	.LASF211
 12468 15bf 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 261


 12469 15c0 1B       		.byte	0x1b
 12470 15c1 B8000000 		.4byte	0xb8
 12471 15c5 05       		.uleb128 0x5
 12472 15c6 03       		.byte	0x3
 12473 15c7 00000000 		.4byte	singleParamValueLow
 12474 15cb 20       		.uleb128 0x20
 12475 15cc 9F0E0000 		.4byte	.LASF212
 12476 15d0 01       		.byte	0x1
 12477 15d1 1D       		.byte	0x1d
 12478 15d2 B8000000 		.4byte	0xb8
 12479 15d6 05       		.uleb128 0x5
 12480 15d7 03       		.byte	0x3
 12481 15d8 00000000 		.4byte	sendMappingChangeUpdate
 12482 15dc 20       		.uleb128 0x20
 12483 15dd 5B120000 		.4byte	.LASF213
 12484 15e1 01       		.byte	0x1
 12485 15e2 2A       		.byte	0x2a
 12486 15e3 B8000000 		.4byte	0xb8
 12487 15e7 05       		.uleb128 0x5
 12488 15e8 03       		.byte	0x3
 12489 15e9 00000000 		.4byte	pitchSmoothing
 12490 15ed 20       		.uleb128 0x20
 12491 15ee 6F0E0000 		.4byte	.LASF214
 12492 15f2 01       		.byte	0x1
 12493 15f3 2B       		.byte	0x2b
 12494 15f4 B8000000 		.4byte	0xb8
 12495 15f8 05       		.uleb128 0x5
 12496 15f9 03       		.byte	0x3
 12497 15fa 00000000 		.4byte	controlSmoothing
 12498 15fe 20       		.uleb128 0x20
 12499 15ff 00000000 		.4byte	.LASF215
 12500 1603 01       		.byte	0x1
 12501 1604 2F       		.byte	0x2f
 12502 1605 B8000000 		.4byte	0xb8
 12503 1609 05       		.uleb128 0x5
 12504 160a 03       		.byte	0x3
 12505 160b 00000000 		.4byte	presetArraySection
 12506 160f 20       		.uleb128 0x20
 12507 1610 1C0B0000 		.4byte	.LASF216
 12508 1614 01       		.byte	0x1
 12509 1615 33       		.byte	0x33
 12510 1616 CE000000 		.4byte	0xce
 12511 161a 05       		.uleb128 0x5
 12512 161b 03       		.byte	0x3
 12513 161c 00000000 		.4byte	messageArraySendCount
 12514 1620 20       		.uleb128 0x20
 12515 1621 54100000 		.4byte	.LASF217
 12516 1625 01       		.byte	0x1
 12517 1626 34       		.byte	0x34
 12518 1627 CE000000 		.4byte	0xce
 12519 162b 05       		.uleb128 0x5
 12520 162c 03       		.byte	0x3
 12521 162d 00000000 		.4byte	messageArraySize
 12522 1631 20       		.uleb128 0x20
 12523 1632 E4070000 		.4byte	.LASF218
 12524 1636 01       		.byte	0x1
 12525 1637 36       		.byte	0x36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 262


 12526 1638 B8000000 		.4byte	0xb8
 12527 163c 05       		.uleb128 0x5
 12528 163d 03       		.byte	0x3
 12529 163e 00000000 		.4byte	sysexMessageInProgress
 12530 1642 20       		.uleb128 0x20
 12531 1643 940F0000 		.4byte	.LASF219
 12532 1647 01       		.byte	0x1
 12533 1648 38       		.byte	0x38
 12534 1649 B8000000 		.4byte	0xb8
 12535 164d 05       		.uleb128 0x5
 12536 164e 03       		.byte	0x3
 12537 164f 00000000 		.4byte	bufCount
 12538 1653 20       		.uleb128 0x20
 12539 1654 3A000000 		.4byte	.LASF220
 12540 1658 01       		.byte	0x1
 12541 1659 39       		.byte	0x39
 12542 165a 09020000 		.4byte	0x209
 12543 165e 05       		.uleb128 0x5
 12544 165f 03       		.byte	0x3
 12545 1660 00000000 		.4byte	sendingMessage
 12546 1664 20       		.uleb128 0x20
 12547 1665 C9030000 		.4byte	.LASF221
 12548 1669 01       		.byte	0x1
 12549 166a 3A       		.byte	0x3a
 12550 166b 09020000 		.4byte	0x209
 12551 166f 05       		.uleb128 0x5
 12552 1670 03       		.byte	0x3
 12553 1671 00000000 		.4byte	sendKnobs
 12554 1675 20       		.uleb128 0x20
 12555 1676 73010000 		.4byte	.LASF222
 12556 167a 01       		.byte	0x1
 12557 167b 3B       		.byte	0x3b
 12558 167c E4000000 		.4byte	0xe4
 12559 1680 05       		.uleb128 0x5
 12560 1681 03       		.byte	0x3
 12561 1682 00000000 		.4byte	currentFloat
 12562 1686 20       		.uleb128 0x20
 12563 1687 9E040000 		.4byte	.LASF223
 12564 168b 01       		.byte	0x1
 12565 168c 3C       		.byte	0x3c
 12566 168d E4000000 		.4byte	0xe4
 12567 1691 05       		.uleb128 0x5
 12568 1692 03       		.byte	0x3
 12569 1693 00000000 		.4byte	mapCount
 12570 1697 20       		.uleb128 0x20
 12571 1698 F2010000 		.4byte	.LASF224
 12572 169c 01       		.byte	0x1
 12573 169d 3E       		.byte	0x3e
 12574 169e CE000000 		.4byte	0xce
 12575 16a2 05       		.uleb128 0x5
 12576 16a3 03       		.byte	0x3
 12577 16a4 00000000 		.4byte	valsCount
 12578 16a8 20       		.uleb128 0x20
 12579 16a9 73020000 		.4byte	.LASF225
 12580 16ad 01       		.byte	0x1
 12581 16ae 3F       		.byte	0x3f
 12582 16af CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 263


 12583 16b3 05       		.uleb128 0x5
 12584 16b4 03       		.byte	0x3
 12585 16b5 00000000 		.4byte	mapCountExpectation
 12586 16b9 20       		.uleb128 0x20
 12587 16ba 35010000 		.4byte	.LASF226
 12588 16be 01       		.byte	0x1
 12589 16bf 40       		.byte	0x40
 12590 16c0 CE000000 		.4byte	0xce
 12591 16c4 05       		.uleb128 0x5
 12592 16c5 03       		.byte	0x3
 12593 16c6 00000000 		.4byte	numMappings
 12594 16ca 20       		.uleb128 0x20
 12595 16cb 310F0000 		.4byte	.LASF227
 12596 16cf 01       		.byte	0x1
 12597 16d0 41       		.byte	0x41
 12598 16d1 09020000 		.4byte	0x209
 12599 16d5 05       		.uleb128 0x5
 12600 16d6 03       		.byte	0x3
 12601 16d7 00000000 		.4byte	parseThatMF
 12602 16db 20       		.uleb128 0x20
 12603 16dc D0040000 		.4byte	.LASF228
 12604 16e0 01       		.byte	0x1
 12605 16e1 42       		.byte	0x42
 12606 16e2 EC160000 		.4byte	0x16ec
 12607 16e6 05       		.uleb128 0x5
 12608 16e7 03       		.byte	0x3
 12609 16e8 00000000 		.4byte	valCheck
 12610 16ec 06       		.uleb128 0x6
 12611 16ed 13010000 		.4byte	0x113
 12612 16f1 20       		.uleb128 0x20
 12613 16f2 560E0000 		.4byte	.LASF229
 12614 16f6 01       		.byte	0x1
 12615 16f7 43       		.byte	0x43
 12616 16f8 EC160000 		.4byte	0x16ec
 12617 16fc 05       		.uleb128 0x5
 12618 16fd 03       		.byte	0x3
 12619 16fe 00000000 		.4byte	testVal
 12620 1702 20       		.uleb128 0x20
 12621 1703 A8090000 		.4byte	.LASF230
 12622 1707 01       		.byte	0x1
 12623 1708 47       		.byte	0x47
 12624 1709 B8000000 		.4byte	0xb8
 12625 170d 05       		.uleb128 0x5
 12626 170e 03       		.byte	0x3
 12627 170f 00000000 		.4byte	numStrings
 12628 1713 20       		.uleb128 0x20
 12629 1714 0B0F0000 		.4byte	.LASF231
 12630 1718 01       		.byte	0x1
 12631 1719 4D       		.byte	0x4d
 12632 171a 09020000 		.4byte	0x209
 12633 171e 05       		.uleb128 0x5
 12634 171f 03       		.byte	0x3
 12635 1720 00000000 		.4byte	usbActivityCounter
 12636 1724 20       		.uleb128 0x20
 12637 1725 070E0000 		.4byte	.LASF143
 12638 1729 01       		.byte	0x1
 12639 172a 4E       		.byte	0x4e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 264


 12640 172b AC020000 		.4byte	0x2ac
 12641 172f 05       		.uleb128 0x5
 12642 1730 03       		.byte	0x3
 12643 1731 00000000 		.4byte	midiMsg
 12644 1735 20       		.uleb128 0x20
 12645 1736 0C040000 		.4byte	.LASF232
 12646 173a 01       		.byte	0x1
 12647 173b 4F       		.byte	0x4f
 12648 173c B8000000 		.4byte	0xb8
 12649 1740 05       		.uleb128 0x5
 12650 1741 03       		.byte	0x3
 12651 1742 00000000 		.4byte	currentVBUS
 12652 1746 20       		.uleb128 0x20
 12653 1747 10120000 		.4byte	.LASF233
 12654 174b 01       		.byte	0x1
 12655 174c 50       		.byte	0x50
 12656 174d B8000000 		.4byte	0xb8
 12657 1751 05       		.uleb128 0x5
 12658 1752 03       		.byte	0x3
 12659 1753 00000000 		.4byte	prevVBUS
 12660 1757 20       		.uleb128 0x20
 12661 1758 530F0000 		.4byte	.LASF234
 12662 175c 01       		.byte	0x1
 12663 175d 51       		.byte	0x51
 12664 175e 09020000 		.4byte	0x209
 12665 1762 05       		.uleb128 0x5
 12666 1763 03       		.byte	0x3
 12667 1764 00000000 		.4byte	USB_active
 12668 1768 20       		.uleb128 0x20
 12669 1769 0D0B0000 		.4byte	.LASF235
 12670 176d 01       		.byte	0x1
 12671 176e 52       		.byte	0x52
 12672 176f 09020000 		.4byte	0x209
 12673 1773 05       		.uleb128 0x5
 12674 1774 03       		.byte	0x3
 12675 1775 00000000 		.4byte	USB_check_flag
 12676 1779 0E       		.uleb128 0xe
 12677 177a B8000000 		.4byte	0xb8
 12678 177e 89170000 		.4byte	0x1789
 12679 1782 0F       		.uleb128 0xf
 12680 1783 4C010000 		.4byte	0x14c
 12681 1787 05       		.byte	0x5
 12682 1788 00       		.byte	0
 12683 1789 20       		.uleb128 0x20
 12684 178a 9F110000 		.4byte	.LASF236
 12685 178e 01       		.byte	0x1
 12686 178f 54       		.byte	0x54
 12687 1790 79170000 		.4byte	0x1779
 12688 1794 05       		.uleb128 0x5
 12689 1795 03       		.byte	0x3
 12690 1796 00000000 		.4byte	mappingArray
 12691 179a 0E       		.uleb128 0xe
 12692 179b B8000000 		.4byte	0xb8
 12693 179f AA170000 		.4byte	0x17aa
 12694 17a3 0F       		.uleb128 0xf
 12695 17a4 4C010000 		.4byte	0x14c
 12696 17a8 1F       		.byte	0x1f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 265


 12697 17a9 00       		.byte	0
 12698 17aa 20       		.uleb128 0x20
 12699 17ab 35110000 		.4byte	.LASF237
 12700 17af 01       		.byte	0x1
 12701 17b0 56       		.byte	0x56
 12702 17b1 9A170000 		.4byte	0x179a
 12703 17b5 05       		.uleb128 0x5
 12704 17b6 03       		.byte	0x3
 12705 17b7 00000000 		.4byte	inBuffer
 12706 17bb 20       		.uleb128 0x20
 12707 17bc 16130000 		.4byte	.LASF238
 12708 17c0 01       		.byte	0x1
 12709 17c1 58       		.byte	0x58
 12710 17c2 9A170000 		.4byte	0x179a
 12711 17c6 05       		.uleb128 0x5
 12712 17c7 03       		.byte	0x3
 12713 17c8 00000000 		.4byte	myArray
 12714 17cc 20       		.uleb128 0x20
 12715 17cd 65070000 		.4byte	.LASF239
 12716 17d1 01       		.byte	0x1
 12717 17d2 59       		.byte	0x59
 12718 17d3 9A170000 		.4byte	0x179a
 12719 17d7 05       		.uleb128 0x5
 12720 17d8 03       		.byte	0x3
 12721 17d9 00000000 		.4byte	returnedData
 12722 17dd 20       		.uleb128 0x20
 12723 17de 9A0D0000 		.4byte	.LASF240
 12724 17e2 01       		.byte	0x1
 12725 17e3 5C       		.byte	0x5c
 12726 17e4 E7120000 		.4byte	0x12e7
 12727 17e8 05       		.uleb128 0x5
 12728 17e9 03       		.byte	0x3
 12729 17ea 00000000 		.4byte	prevAngle
 12730 17ee 0E       		.uleb128 0xe
 12731 17ef CE000000 		.4byte	0xce
 12732 17f3 FE170000 		.4byte	0x17fe
 12733 17f7 0F       		.uleb128 0xf
 12734 17f8 4C010000 		.4byte	0x14c
 12735 17fc 03       		.byte	0x3
 12736 17fd 00       		.byte	0
 12737 17fe 20       		.uleb128 0x20
 12738 17ff E40D0000 		.4byte	.LASF241
 12739 1803 01       		.byte	0x1
 12740 1804 5E       		.byte	0x5e
 12741 1805 EE170000 		.4byte	0x17ee
 12742 1809 05       		.uleb128 0x5
 12743 180a 03       		.byte	0x3
 12744 180b 00000000 		.4byte	ADC_values
 12745 180f 20       		.uleb128 0x20
 12746 1810 96050000 		.4byte	.LASF242
 12747 1814 01       		.byte	0x1
 12748 1815 5F       		.byte	0x5f
 12749 1816 CE000000 		.4byte	0xce
 12750 181a 05       		.uleb128 0x5
 12751 181b 03       		.byte	0x3
 12752 181c 00000000 		.4byte	rawAngle
 12753 1820 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 266


 12754 1821 FE0D0000 		.4byte	.LASF243
 12755 1825 01       		.byte	0x1
 12756 1826 60       		.byte	0x60
 12757 1827 CE000000 		.4byte	0xce
 12758 182b 05       		.uleb128 0x5
 12759 182c 03       		.byte	0x3
 12760 182d 00000000 		.4byte	midiSent
 12761 1831 20       		.uleb128 0x20
 12762 1832 59090000 		.4byte	.LASF244
 12763 1836 01       		.byte	0x1
 12764 1837 61       		.byte	0x61
 12765 1838 CE000000 		.4byte	0xce
 12766 183c 05       		.uleb128 0x5
 12767 183d 03       		.byte	0x3
 12768 183e 00000000 		.4byte	midiOverflow
 12769 1842 20       		.uleb128 0x20
 12770 1843 62110000 		.4byte	.LASF245
 12771 1847 01       		.byte	0x1
 12772 1848 63       		.byte	0x63
 12773 1849 3D140000 		.4byte	0x143d
 12774 184d 05       		.uleb128 0x5
 12775 184e 03       		.byte	0x3
 12776 184f 00000000 		.4byte	macroKnobValues
 12777 1853 20       		.uleb128 0x20
 12778 1854 E9040000 		.4byte	.LASF246
 12779 1858 01       		.byte	0x1
 12780 1859 68       		.byte	0x68
 12781 185a EF000000 		.4byte	0xef
 12782 185e 05       		.uleb128 0x5
 12783 185f 03       		.byte	0x3
 12784 1860 00000000 		.4byte	rx1Channel
 12785 1864 20       		.uleb128 0x20
 12786 1865 B8110000 		.4byte	.LASF247
 12787 1869 01       		.byte	0x1
 12788 186a 68       		.byte	0x68
 12789 186b EF000000 		.4byte	0xef
 12790 186f 05       		.uleb128 0x5
 12791 1870 03       		.byte	0x3
 12792 1871 00000000 		.4byte	rx2Channel
 12793 1875 20       		.uleb128 0x20
 12794 1876 600B0000 		.4byte	.LASF248
 12795 187a 01       		.byte	0x1
 12796 187b 69       		.byte	0x69
 12797 187c EE0F0000 		.4byte	0xfee
 12798 1880 05       		.uleb128 0x5
 12799 1881 03       		.byte	0x3
 12800 1882 00000000 		.4byte	rx1TD
 12801 1886 20       		.uleb128 0x20
 12802 1887 690E0000 		.4byte	.LASF249
 12803 188b 01       		.byte	0x1
 12804 188c 69       		.byte	0x69
 12805 188d EE0F0000 		.4byte	0xfee
 12806 1891 05       		.uleb128 0x5
 12807 1892 03       		.byte	0x3
 12808 1893 00000000 		.4byte	rx2TD
 12809 1897 20       		.uleb128 0x20
 12810 1898 690D0000 		.4byte	.LASF250
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 267


 12811 189c 01       		.byte	0x1
 12812 189d 6B       		.byte	0x6b
 12813 189e 40010000 		.4byte	0x140
 12814 18a2 05       		.uleb128 0x5
 12815 18a3 03       		.byte	0x3
 12816 18a4 00000000 		.4byte	txChannel
 12817 18a8 20       		.uleb128 0x20
 12818 18a9 7D120000 		.4byte	.LASF251
 12819 18ad 01       		.byte	0x1
 12820 18ae 6C       		.byte	0x6c
 12821 18af 40010000 		.4byte	0x140
 12822 18b3 05       		.uleb128 0x5
 12823 18b4 03       		.byte	0x3
 12824 18b5 00000000 		.4byte	txTD
 12825 18b9 20       		.uleb128 0x20
 12826 18ba 8D0B0000 		.4byte	.LASF252
 12827 18be 01       		.byte	0x1
 12828 18bf 6E       		.byte	0x6e
 12829 18c0 40010000 		.4byte	0x140
 12830 18c4 05       		.uleb128 0x5
 12831 18c5 03       		.byte	0x3
 12832 18c6 00000000 		.4byte	rx3Channel
 12833 18ca 20       		.uleb128 0x20
 12834 18cb 19120000 		.4byte	.LASF253
 12835 18cf 01       		.byte	0x1
 12836 18d0 6F       		.byte	0x6f
 12837 18d1 40010000 		.4byte	0x140
 12838 18d5 05       		.uleb128 0x5
 12839 18d6 03       		.byte	0x3
 12840 18d7 00000000 		.4byte	rx3TD
 12841 18db 0E       		.uleb128 0xe
 12842 18dc 40010000 		.4byte	0x140
 12843 18e0 F1180000 		.4byte	0x18f1
 12844 18e4 0F       		.uleb128 0xf
 12845 18e5 4C010000 		.4byte	0x14c
 12846 18e9 01       		.byte	0x1
 12847 18ea 0F       		.uleb128 0xf
 12848 18eb 4C010000 		.4byte	0x14c
 12849 18ef 1F       		.byte	0x1f
 12850 18f0 00       		.byte	0
 12851 18f1 20       		.uleb128 0x20
 12852 18f2 A0070000 		.4byte	.LASF254
 12853 18f6 01       		.byte	0x1
 12854 18f7 72       		.byte	0x72
 12855 18f8 02190000 		.4byte	0x1902
 12856 18fc 05       		.uleb128 0x5
 12857 18fd 03       		.byte	0x3
 12858 18fe 00000000 		.4byte	rxBufferPluck
 12859 1902 06       		.uleb128 0x6
 12860 1903 DB180000 		.4byte	0x18db
 12861 1907 0E       		.uleb128 0xe
 12862 1908 40010000 		.4byte	0x140
 12863 190c 1D190000 		.4byte	0x191d
 12864 1910 0F       		.uleb128 0xf
 12865 1911 4C010000 		.4byte	0x14c
 12866 1915 01       		.byte	0x1
 12867 1916 0F       		.uleb128 0xf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 268


 12868 1917 4C010000 		.4byte	0x14c
 12869 191b 07       		.byte	0x7
 12870 191c 00       		.byte	0
 12871 191d 20       		.uleb128 0x20
 12872 191e 5D0D0000 		.4byte	.LASF255
 12873 1922 01       		.byte	0x1
 12874 1923 73       		.byte	0x73
 12875 1924 2E190000 		.4byte	0x192e
 12876 1928 05       		.uleb128 0x5
 12877 1929 03       		.byte	0x3
 12878 192a 00000000 		.4byte	rxBufferBar
 12879 192e 06       		.uleb128 0x6
 12880 192f 07190000 		.4byte	0x1907
 12881 1933 0E       		.uleb128 0xe
 12882 1934 0E020000 		.4byte	0x20e
 12883 1938 43190000 		.4byte	0x1943
 12884 193c 0F       		.uleb128 0xf
 12885 193d 4C010000 		.4byte	0x14c
 12886 1941 0B       		.byte	0xb
 12887 1942 00       		.byte	0
 12888 1943 20       		.uleb128 0x20
 12889 1944 DA020000 		.4byte	.LASF256
 12890 1948 01       		.byte	0x1
 12891 1949 75       		.byte	0x75
 12892 194a 54190000 		.4byte	0x1954
 12893 194e 05       		.uleb128 0x5
 12894 194f 03       		.byte	0x3
 12895 1950 00000000 		.4byte	strings
 12896 1954 06       		.uleb128 0x6
 12897 1955 33190000 		.4byte	0x1933
 12898 1959 20       		.uleb128 0x20
 12899 195a 79050000 		.4byte	.LASF257
 12900 195e 01       		.byte	0x1
 12901 195f 76       		.byte	0x76
 12902 1960 6A190000 		.4byte	0x196a
 12903 1964 05       		.uleb128 0x5
 12904 1965 03       		.byte	0x3
 12905 1966 00000000 		.4byte	prevStrings
 12906 196a 06       		.uleb128 0x6
 12907 196b 33190000 		.4byte	0x1933
 12908 196f 20       		.uleb128 0x20
 12909 1970 8C120000 		.4byte	.LASF258
 12910 1974 01       		.byte	0x1
 12911 1975 78       		.byte	0x78
 12912 1976 80190000 		.4byte	0x1980
 12913 197a 05       		.uleb128 0x5
 12914 197b 03       		.byte	0x3
 12915 197c 00000000 		.4byte	prevBar
 12916 1980 06       		.uleb128 0x6
 12917 1981 4B130000 		.4byte	0x134b
 12918 1985 20       		.uleb128 0x20
 12919 1986 3E110000 		.4byte	.LASF259
 12920 198a 01       		.byte	0x1
 12921 198b 79       		.byte	0x79
 12922 198c 96190000 		.4byte	0x1996
 12923 1990 05       		.uleb128 0x5
 12924 1991 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 269


 12925 1992 00000000 		.4byte	maxStrings
 12926 1996 06       		.uleb128 0x6
 12927 1997 33190000 		.4byte	0x1933
 12928 199b 20       		.uleb128 0x20
 12929 199c B70E0000 		.4byte	.LASF260
 12930 19a0 01       		.byte	0x1
 12931 19a1 7A       		.byte	0x7a
 12932 19a2 09020000 		.4byte	0x209
 12933 19a6 05       		.uleb128 0x5
 12934 19a7 03       		.byte	0x3
 12935 19a8 00000000 		.4byte	amHere
 12936 19ac 20       		.uleb128 0x20
 12937 19ad D4060000 		.4byte	.LASF261
 12938 19b1 01       		.byte	0x1
 12939 19b2 7B       		.byte	0x7b
 12940 19b3 09020000 		.4byte	0x209
 12941 19b7 05       		.uleb128 0x5
 12942 19b8 03       		.byte	0x3
 12943 19b9 00000000 		.4byte	spiCounter
 12944 19bd 20       		.uleb128 0x20
 12945 19be 02050000 		.4byte	.LASF262
 12946 19c2 01       		.byte	0x1
 12947 19c3 7C       		.byte	0x7c
 12948 19c4 09020000 		.4byte	0x209
 12949 19c8 05       		.uleb128 0x5
 12950 19c9 03       		.byte	0x3
 12951 19ca 00000000 		.4byte	newDataFlag
 12952 19ce 20       		.uleb128 0x20
 12953 19cf A40D0000 		.4byte	.LASF263
 12954 19d3 01       		.byte	0x1
 12955 19d4 7E       		.byte	0x7e
 12956 19d5 B8000000 		.4byte	0xb8
 12957 19d9 05       		.uleb128 0x5
 12958 19da 03       		.byte	0x3
 12959 19db 00000000 		.4byte	pluck_index
 12960 19df 20       		.uleb128 0x20
 12961 19e0 EB100000 		.4byte	.LASF264
 12962 19e4 01       		.byte	0x1
 12963 19e5 7F       		.byte	0x7f
 12964 19e6 09020000 		.4byte	0x209
 12965 19ea 05       		.uleb128 0x5
 12966 19eb 03       		.byte	0x3
 12967 19ec 00000000 		.4byte	amHere2
 12968 19f0 20       		.uleb128 0x20
 12969 19f1 F70E0000 		.4byte	.LASF265
 12970 19f5 01       		.byte	0x1
 12971 19f6 80       		.byte	0x80
 12972 19f7 09020000 		.4byte	0x209
 12973 19fb 05       		.uleb128 0x5
 12974 19fc 03       		.byte	0x3
 12975 19fd 00000000 		.4byte	spiCounter2
 12976 1a01 20       		.uleb128 0x20
 12977 1a02 6E000000 		.4byte	.LASF266
 12978 1a06 01       		.byte	0x1
 12979 1a07 81       		.byte	0x81
 12980 1a08 09020000 		.4byte	0x209
 12981 1a0c 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 270


 12982 1a0d 03       		.byte	0x3
 12983 1a0e 00000000 		.4byte	newDataFlag2
 12984 1a12 20       		.uleb128 0x20
 12985 1a13 370C0000 		.4byte	.LASF267
 12986 1a17 01       		.byte	0x1
 12987 1a18 82       		.byte	0x82
 12988 1a19 09020000 		.4byte	0x209
 12989 1a1d 05       		.uleb128 0x5
 12990 1a1e 03       		.byte	0x3
 12991 1a1f 00000000 		.4byte	currentPluckBuffer
 12992 1a23 20       		.uleb128 0x20
 12993 1a24 D30D0000 		.4byte	.LASF268
 12994 1a28 01       		.byte	0x1
 12995 1a29 83       		.byte	0x83
 12996 1a2a 09020000 		.4byte	0x209
 12997 1a2e 05       		.uleb128 0x5
 12998 1a2f 03       		.byte	0x3
 12999 1a30 00000000 		.4byte	currentBarBuffer
 13000 1a34 20       		.uleb128 0x20
 13001 1a35 9D0F0000 		.4byte	.LASF269
 13002 1a39 01       		.byte	0x1
 13003 1a3a 84       		.byte	0x84
 13004 1a3b 09020000 		.4byte	0x209
 13005 1a3f 05       		.uleb128 0x5
 13006 1a40 03       		.byte	0x3
 13007 1a41 00000000 		.4byte	pluckErrorCount
 13008 1a45 20       		.uleb128 0x20
 13009 1a46 EF0D0000 		.4byte	.LASF270
 13010 1a4a 01       		.byte	0x1
 13011 1a4b 85       		.byte	0x85
 13012 1a4c 0E020000 		.4byte	0x20e
 13013 1a50 05       		.uleb128 0x5
 13014 1a51 03       		.byte	0x3
 13015 1a52 00000000 		.4byte	SPI1ErrorCount
 13016 1a56 20       		.uleb128 0x20
 13017 1a57 B3080000 		.4byte	.LASF271
 13018 1a5b 01       		.byte	0x1
 13019 1a5c 87       		.byte	0x87
 13020 1a5d 09020000 		.4byte	0x209
 13021 1a61 05       		.uleb128 0x5
 13022 1a62 03       		.byte	0x3
 13023 1a63 00000000 		.4byte	inputData
 13024 1a67 20       		.uleb128 0x20
 13025 1a68 AC110000 		.4byte	.LASF272
 13026 1a6c 01       		.byte	0x1
 13027 1a6d 90       		.byte	0x90
 13028 1a6e B8000000 		.4byte	0xb8
 13029 1a72 05       		.uleb128 0x5
 13030 1a73 03       		.byte	0x3
 13031 1a74 00000000 		.4byte	spiAdjusted
 13032 1a78 20       		.uleb128 0x20
 13033 1a79 D7070000 		.4byte	.LASF273
 13034 1a7d 01       		.byte	0x1
 13035 1a7e 91       		.byte	0x91
 13036 1a7f B8000000 		.4byte	0xb8
 13037 1a83 05       		.uleb128 0x5
 13038 1a84 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 271


 13039 1a85 00000000 		.4byte	mySpiCounter
 13040 1a89 20       		.uleb128 0x20
 13041 1a8a 2B0D0000 		.4byte	.LASF274
 13042 1a8e 01       		.byte	0x1
 13043 1a8f 92       		.byte	0x92
 13044 1a90 0E020000 		.4byte	0x20e
 13045 1a94 05       		.uleb128 0x5
 13046 1a95 03       		.byte	0x3
 13047 1a96 00000000 		.4byte	offsetErrorCount
 13048 1a9a 20       		.uleb128 0x20
 13049 1a9b 04010000 		.4byte	.LASF275
 13050 1a9f 01       		.byte	0x1
 13051 1aa0 93       		.byte	0x93
 13052 1aa1 09020000 		.4byte	0x209
 13053 1aa5 05       		.uleb128 0x5
 13054 1aa6 03       		.byte	0x3
 13055 1aa7 00000000 		.4byte	SPI2errorflag
 13056 1aab 20       		.uleb128 0x20
 13057 1aac F9030000 		.4byte	.LASF276
 13058 1ab0 01       		.byte	0x1
 13059 1ab1 94       		.byte	0x94
 13060 1ab2 AC020000 		.4byte	0x2ac
 13061 1ab6 05       		.uleb128 0x5
 13062 1ab7 03       		.byte	0x3
 13063 1ab8 00000000 		.4byte	knobs
 13064 1abc 20       		.uleb128 0x20
 13065 1abd CD070000 		.4byte	.LASF277
 13066 1ac1 01       		.byte	0x1
 13067 1ac2 95       		.byte	0x95
 13068 1ac3 AC020000 		.4byte	0x2ac
 13069 1ac7 05       		.uleb128 0x5
 13070 1ac8 03       		.byte	0x3
 13071 1ac9 00000000 		.4byte	prevKnobs
 13072 1acd 20       		.uleb128 0x20
 13073 1ace 000D0000 		.4byte	.LASF278
 13074 1ad2 01       		.byte	0x1
 13075 1ad3 97       		.byte	0x97
 13076 1ad4 AC020000 		.4byte	0x2ac
 13077 1ad8 05       		.uleb128 0x5
 13078 1ad9 03       		.byte	0x3
 13079 1ada 00000000 		.4byte	knobs7bit
 13080 1ade 20       		.uleb128 0x20
 13081 1adf 9B0C0000 		.4byte	.LASF279
 13082 1ae3 01       		.byte	0x1
 13083 1ae4 98       		.byte	0x98
 13084 1ae5 AC020000 		.4byte	0x2ac
 13085 1ae9 05       		.uleb128 0x5
 13086 1aea 03       		.byte	0x3
 13087 1aeb 00000000 		.4byte	prevKnobs7bit
 13088 1aef 20       		.uleb128 0x20
 13089 1af0 6E090000 		.4byte	.LASF280
 13090 1af4 01       		.byte	0x1
 13091 1af5 9A       		.byte	0x9a
 13092 1af6 B8000000 		.4byte	0xb8
 13093 1afa 05       		.uleb128 0x5
 13094 1afb 03       		.byte	0x3
 13095 1afc 00000000 		.4byte	u7bit_volumePedal
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 272


 13096 1b00 20       		.uleb128 0x20
 13097 1b01 89110000 		.4byte	.LASF281
 13098 1b05 01       		.byte	0x1
 13099 1b06 9B       		.byte	0x9b
 13100 1b07 B8000000 		.4byte	0xb8
 13101 1b0b 05       		.uleb128 0x5
 13102 1b0c 03       		.byte	0x3
 13103 1b0d 00000000 		.4byte	prev_7bit_volumePedal
 13104 1b11 20       		.uleb128 0x20
 13105 1b12 2B0C0000 		.4byte	.LASF282
 13106 1b16 01       		.byte	0x1
 13107 1b17 9C       		.byte	0x9c
 13108 1b18 09020000 		.4byte	0x209
 13109 1b1c 05       		.uleb128 0x5
 13110 1b1d 03       		.byte	0x3
 13111 1b1e 00000000 		.4byte	SPI2started
 13112 1b22 20       		.uleb128 0x20
 13113 1b23 07100000 		.4byte	.LASF283
 13114 1b27 01       		.byte	0x1
 13115 1b28 A0       		.byte	0xa0
 13116 1b29 3D140000 		.4byte	0x143d
 13117 1b2d 05       		.uleb128 0x5
 13118 1b2e 03       		.byte	0x3
 13119 1b2f 00000000 		.4byte	macroKnobValues7bit
 13120 1b33 20       		.uleb128 0x20
 13121 1b34 D3030000 		.4byte	.LASF284
 13122 1b38 01       		.byte	0x1
 13123 1b39 A1       		.byte	0xa1
 13124 1b3a 3D140000 		.4byte	0x143d
 13125 1b3e 05       		.uleb128 0x5
 13126 1b3f 03       		.byte	0x3
 13127 1b40 00000000 		.4byte	prevMacroKnobValues7bit
 13128 1b44 20       		.uleb128 0x20
 13129 1b45 BE0E0000 		.4byte	.LASF285
 13130 1b49 01       		.byte	0x1
 13131 1b4a A8       		.byte	0xa8
 13132 1b4b EE0F0000 		.4byte	0xfee
 13133 1b4f 05       		.uleb128 0x5
 13134 1b50 03       		.byte	0x3
 13135 1b51 00000000 		.4byte	array
 13136 1b55 20       		.uleb128 0x20
 13137 1b56 1E090000 		.4byte	.LASF286
 13138 1b5a 01       		.byte	0x1
 13139 1b5b AB       		.byte	0xab
 13140 1b5c FD010000 		.4byte	0x1fd
 13141 1b60 05       		.uleb128 0x5
 13142 1b61 03       		.byte	0x3
 13143 1b62 00000000 		.4byte	eepromReturnValue
 13144 1b66 20       		.uleb128 0x20
 13145 1b67 10060000 		.4byte	.LASF287
 13146 1b6b 01       		.byte	0x1
 13147 1b6c B2       		.byte	0xb2
 13148 1b6d EF000000 		.4byte	0xef
 13149 1b71 05       		.uleb128 0x5
 13150 1b72 03       		.byte	0x3
 13151 1b73 00000000 		.4byte	eeprom_cnt
 13152 1b77 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 273


 13153 1b78 4A090000 		.4byte	.LASF84
 13154 1b7c 01       		.byte	0x1
 13155 1b7d B3       		.byte	0xb3
 13156 1b7e 28010000 		.4byte	0x128
 13157 1b82 05       		.uleb128 0x5
 13158 1b83 03       		.byte	0x3
 13159 1b84 00000000 		.4byte	status
 13160 1b88 23       		.uleb128 0x23
 13161 1b89 70747200 		.ascii	"ptr\000"
 13162 1b8d 01       		.byte	0x1
 13163 1b8e B4       		.byte	0xb4
 13164 1b8f 991B0000 		.4byte	0x1b99
 13165 1b93 05       		.uleb128 0x5
 13166 1b94 03       		.byte	0x3
 13167 1b95 00000000 		.4byte	ptr
 13168 1b99 1B       		.uleb128 0x1b
 13169 1b9a 04       		.byte	0x4
 13170 1b9b A41B0000 		.4byte	0x1ba4
 13171 1b9f 1F       		.uleb128 0x1f
 13172 1ba0 EF000000 		.4byte	0xef
 13173 1ba4 06       		.uleb128 0x6
 13174 1ba5 9F1B0000 		.4byte	0x1b9f
 13175 1ba9 20       		.uleb128 0x20
 13176 1baa 91020000 		.4byte	.LASF288
 13177 1bae 01       		.byte	0x1
 13178 1baf B5       		.byte	0xb5
 13179 1bb0 BA1B0000 		.4byte	0x1bba
 13180 1bb4 05       		.uleb128 0x5
 13181 1bb5 03       		.byte	0x3
 13182 1bb6 00000000 		.4byte	barCount
 13183 1bba 06       		.uleb128 0x6
 13184 1bbb 9F000000 		.4byte	0x9f
 13185 1bbf 0E       		.uleb128 0xe
 13186 1bc0 09020000 		.4byte	0x209
 13187 1bc4 CF1B0000 		.4byte	0x1bcf
 13188 1bc8 0F       		.uleb128 0xf
 13189 1bc9 4C010000 		.4byte	0x14c
 13190 1bcd 0F       		.byte	0xf
 13191 1bce 00       		.byte	0
 13192 1bcf 20       		.uleb128 0x20
 13193 1bd0 4A010000 		.4byte	.LASF289
 13194 1bd4 01       		.byte	0x1
 13195 1bd5 BA       		.byte	0xba
 13196 1bd6 E01B0000 		.4byte	0x1be0
 13197 1bda 05       		.uleb128 0x5
 13198 1bdb 03       		.byte	0x3
 13199 1bdc 00000000 		.4byte	I2Cbuff2
 13200 1be0 06       		.uleb128 0x6
 13201 1be1 BF1B0000 		.4byte	0x1bbf
 13202 1be5 20       		.uleb128 0x20
 13203 1be6 51090000 		.4byte	.LASF290
 13204 1bea 01       		.byte	0x1
 13205 1beb BB       		.byte	0xbb
 13206 1bec 09020000 		.4byte	0x209
 13207 1bf0 05       		.uleb128 0x5
 13208 1bf1 03       		.byte	0x3
 13209 1bf2 00000000 		.4byte	send_it
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 274


 13210 1bf6 0E       		.uleb128 0xe
 13211 1bf7 B8000000 		.4byte	0xb8
 13212 1bfb 0C1C0000 		.4byte	0x1c0c
 13213 1bff 0F       		.uleb128 0xf
 13214 1c00 4C010000 		.4byte	0x14c
 13215 1c04 0B       		.byte	0xb
 13216 1c05 0F       		.uleb128 0xf
 13217 1c06 4C010000 		.4byte	0x14c
 13218 1c0a 01       		.byte	0x1
 13219 1c0b 00       		.byte	0
 13220 1c0c 20       		.uleb128 0x20
 13221 1c0d 53010000 		.4byte	.LASF291
 13222 1c11 01       		.byte	0x1
 13223 1c12 C1       		.byte	0xc1
 13224 1c13 F61B0000 		.4byte	0x1bf6
 13225 1c17 05       		.uleb128 0x5
 13226 1c18 03       		.byte	0x3
 13227 1c19 00000000 		.4byte	mux_states
 13228 1c1d 0E       		.uleb128 0xe
 13229 1c1e B8000000 		.4byte	0xb8
 13230 1c22 2D1C0000 		.4byte	0x1c2d
 13231 1c26 0F       		.uleb128 0xf
 13232 1c27 4C010000 		.4byte	0x14c
 13233 1c2b 0B       		.byte	0xb
 13234 1c2c 00       		.byte	0
 13235 1c2d 20       		.uleb128 0x20
 13236 1c2e 72110000 		.4byte	.LASF292
 13237 1c32 01       		.byte	0x1
 13238 1c33 C2       		.byte	0xc2
 13239 1c34 1D1C0000 		.4byte	0x1c1d
 13240 1c38 05       		.uleb128 0x5
 13241 1c39 03       		.byte	0x3
 13242 1c3a 00000000 		.4byte	i2c_skipped
 13243 1c3e 20       		.uleb128 0x20
 13244 1c3f F00F0000 		.4byte	.LASF293
 13245 1c43 01       		.byte	0x1
 13246 1c44 C5       		.byte	0xc5
 13247 1c45 E7120000 		.4byte	0x12e7
 13248 1c49 05       		.uleb128 0x5
 13249 1c4a 03       		.byte	0x3
 13250 1c4b 00000000 		.4byte	pedals_lowWithDeadZone
 13251 1c4f 20       		.uleb128 0x20
 13252 1c50 A9020000 		.4byte	.LASF294
 13253 1c54 01       		.byte	0x1
 13254 1c55 C6       		.byte	0xc6
 13255 1c56 E7120000 		.4byte	0x12e7
 13256 1c5a 05       		.uleb128 0x5
 13257 1c5b 03       		.byte	0x3
 13258 1c5c 00000000 		.4byte	pedals_highWithDeadZone
 13259 1c60 20       		.uleb128 0x20
 13260 1c61 94070000 		.4byte	.LASF295
 13261 1c65 01       		.byte	0x1
 13262 1c66 C8       		.byte	0xc8
 13263 1c67 CE000000 		.4byte	0xce
 13264 1c6b 05       		.uleb128 0x5
 13265 1c6c 03       		.byte	0x3
 13266 1c6d 00000000 		.4byte	volumePedal
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 275


 13267 1c71 20       		.uleb128 0x20
 13268 1c72 730D0000 		.4byte	.LASF296
 13269 1c76 01       		.byte	0x1
 13270 1c77 C9       		.byte	0xc9
 13271 1c78 E7120000 		.4byte	0x12e7
 13272 1c7c 05       		.uleb128 0x5
 13273 1c7d 03       		.byte	0x3
 13274 1c7e 00000000 		.4byte	processed_pedals
 13275 1c82 20       		.uleb128 0x20
 13276 1c83 150C0000 		.4byte	.LASF297
 13277 1c87 01       		.byte	0x1
 13278 1c88 CA       		.byte	0xca
 13279 1c89 E7120000 		.4byte	0x12e7
 13280 1c8d 05       		.uleb128 0x5
 13281 1c8e 03       		.byte	0x3
 13282 1c8f 00000000 		.4byte	prev_processed_pedals
 13283 1c93 20       		.uleb128 0x20
 13284 1c94 B7070000 		.4byte	.LASF298
 13285 1c98 01       		.byte	0x1
 13286 1c99 CB       		.byte	0xcb
 13287 1c9a 19130000 		.4byte	0x1319
 13288 1c9e 05       		.uleb128 0x5
 13289 1c9f 03       		.byte	0x3
 13290 1ca0 00000000 		.4byte	pedals8bit
 13291 1ca4 20       		.uleb128 0x20
 13292 1ca5 7E110000 		.4byte	.LASF299
 13293 1ca9 01       		.byte	0x1
 13294 1caa CC       		.byte	0xcc
 13295 1cab 19130000 		.4byte	0x1319
 13296 1caf 05       		.uleb128 0x5
 13297 1cb0 03       		.byte	0x3
 13298 1cb1 00000000 		.4byte	pedals7bit
 13299 1cb5 20       		.uleb128 0x20
 13300 1cb6 C00C0000 		.4byte	.LASF300
 13301 1cba 01       		.byte	0x1
 13302 1cbb CD       		.byte	0xcd
 13303 1cbc 19130000 		.4byte	0x1319
 13304 1cc0 05       		.uleb128 0x5
 13305 1cc1 03       		.byte	0x3
 13306 1cc2 00000000 		.4byte	prevPedals7bit
 13307 1cc6 20       		.uleb128 0x20
 13308 1cc7 49000000 		.4byte	.LASF301
 13309 1ccb 01       		.byte	0x1
 13310 1ccc CE       		.byte	0xce
 13311 1ccd C3000000 		.4byte	0xc3
 13312 1cd1 05       		.uleb128 0x5
 13313 1cd2 03       		.byte	0x3
 13314 1cd3 00000000 		.4byte	prev_processed_volumePedal
 13315 1cd7 20       		.uleb128 0x20
 13316 1cd8 3C0D0000 		.4byte	.LASF302
 13317 1cdc 01       		.byte	0x1
 13318 1cdd CF       		.byte	0xcf
 13319 1cde C3000000 		.4byte	0xc3
 13320 1ce2 05       		.uleb128 0x5
 13321 1ce3 03       		.byte	0x3
 13322 1ce4 00000000 		.4byte	processed_volumePedal
 13323 1ce8 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 276


 13324 1ce9 7D070000 		.4byte	.LASF303
 13325 1ced 01       		.byte	0x1
 13326 1cee D1       		.byte	0xd1
 13327 1cef B8000000 		.4byte	0xb8
 13328 1cf3 05       		.uleb128 0x5
 13329 1cf4 03       		.byte	0x3
 13330 1cf5 00000000 		.4byte	sliderBugOn
 13331 1cf9 20       		.uleb128 0x20
 13332 1cfa 13030000 		.4byte	.LASF304
 13333 1cfe 01       		.byte	0x1
 13334 1cff DA       		.byte	0xda
 13335 1d00 5B110000 		.4byte	0x115b
 13336 1d04 05       		.uleb128 0x5
 13337 1d05 03       		.byte	0x3
 13338 1d06 00000000 		.4byte	presetLoadedResponse
 13339 1d0a 0E       		.uleb128 0xe
 13340 1d0b 13010000 		.4byte	0x113
 13341 1d0f 1A1D0000 		.4byte	0x1d1a
 13342 1d13 0F       		.uleb128 0xf
 13343 1d14 4C010000 		.4byte	0x14c
 13344 1d18 0B       		.byte	0xb
 13345 1d19 00       		.byte	0
 13346 1d1a 20       		.uleb128 0x20
 13347 1d1b 01030000 		.4byte	.LASF305
 13348 1d1f 01       		.byte	0x1
 13349 1d20 E0       		.byte	0xe0
 13350 1d21 0A1D0000 		.4byte	0x1d0a
 13351 1d25 05       		.uleb128 0x5
 13352 1d26 03       		.byte	0x3
 13353 1d27 00000000 		.4byte	fretScalingInMIDI
 13354 1d2b 20       		.uleb128 0x20
 13355 1d2c 9B120000 		.4byte	.LASF306
 13356 1d30 01       		.byte	0x1
 13357 1d31 E1       		.byte	0xe1
 13358 1d32 0A1D0000 		.4byte	0x1d0a
 13359 1d36 05       		.uleb128 0x5
 13360 1d37 03       		.byte	0x3
 13361 1d38 00000000 		.4byte	fretScalingInRatios
 13362 1d3c 0E       		.uleb128 0xe
 13363 1d3d 13010000 		.4byte	0x113
 13364 1d41 4C1D0000 		.4byte	0x1d4c
 13365 1d45 0F       		.uleb128 0xf
 13366 1d46 4C010000 		.4byte	0x14c
 13367 1d4a 09       		.byte	0x9
 13368 1d4b 00       		.byte	0
 13369 1d4c 20       		.uleb128 0x20
 13370 1d4d B6040000 		.4byte	.LASF307
 13371 1d51 01       		.byte	0x1
 13372 1d52 E3       		.byte	0xe3
 13373 1d53 3C1D0000 		.4byte	0x1d3c
 13374 1d57 05       		.uleb128 0x5
 13375 1d58 03       		.byte	0x3
 13376 1d59 00000000 		.4byte	pedalRatios
 13377 1d5d 20       		.uleb128 0x20
 13378 1d5e 45050000 		.4byte	.LASF308
 13379 1d62 01       		.byte	0x1
 13380 1d63 E4       		.byte	0xe4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 277


 13381 1d64 B8000000 		.4byte	0xb8
 13382 1d68 05       		.uleb128 0x5
 13383 1d69 03       		.byte	0x3
 13384 1d6a 00000000 		.4byte	last_mux
 13385 1d6e 20       		.uleb128 0x20
 13386 1d6f D80A0000 		.4byte	.LASF309
 13387 1d73 01       		.byte	0x1
 13388 1d74 E5       		.byte	0xe5
 13389 1d75 09020000 		.4byte	0x209
 13390 1d79 05       		.uleb128 0x5
 13391 1d7a 03       		.byte	0x3
 13392 1d7b 00000000 		.4byte	main_counter
 13393 1d7f 20       		.uleb128 0x20
 13394 1d80 D4020000 		.4byte	.LASF310
 13395 1d84 01       		.byte	0x1
 13396 1d85 E7       		.byte	0xe7
 13397 1d86 B8000000 		.4byte	0xb8
 13398 1d8a 05       		.uleb128 0x5
 13399 1d8b 03       		.byte	0x3
 13400 1d8c 00000000 		.4byte	voice
 13401 1d90 0E       		.uleb128 0xe
 13402 1d91 13010000 		.4byte	0x113
 13403 1d95 AC1D0000 		.4byte	0x1dac
 13404 1d99 0F       		.uleb128 0xf
 13405 1d9a 4C010000 		.4byte	0x14c
 13406 1d9e 06       		.byte	0x6
 13407 1d9f 0F       		.uleb128 0xf
 13408 1da0 4C010000 		.4byte	0x14c
 13409 1da4 0A       		.byte	0xa
 13410 1da5 0F       		.uleb128 0xf
 13411 1da6 4C010000 		.4byte	0x14c
 13412 1daa 0B       		.byte	0xb
 13413 1dab 00       		.byte	0
 13414 1dac 20       		.uleb128 0x20
 13415 1dad AE070000 		.4byte	.LASF311
 13416 1db1 01       		.byte	0x1
 13417 1db2 EE       		.byte	0xee
 13418 1db3 901D0000 		.4byte	0x1d90
 13419 1db7 05       		.uleb128 0x5
 13420 1db8 03       		.byte	0x3
 13421 1db9 00000000 		.4byte	copedent
 13422 1dbd 20       		.uleb128 0x20
 13423 1dbe 69030000 		.4byte	.LASF312
 13424 1dc2 01       		.byte	0x1
 13425 1dc3 F1       		.byte	0xf1
 13426 1dc4 0A1D0000 		.4byte	0x1d0a
 13427 1dc8 05       		.uleb128 0x5
 13428 1dc9 03       		.byte	0x3
 13429 1dca 00000000 		.4byte	prevStringPitchBend
 13430 1dce 0E       		.uleb128 0xe
 13431 1dcf 13010000 		.4byte	0x113
 13432 1dd3 E41D0000 		.4byte	0x1de4
 13433 1dd7 0F       		.uleb128 0xf
 13434 1dd8 4C010000 		.4byte	0x14c
 13435 1ddc 09       		.byte	0x9
 13436 1ddd 0F       		.uleb128 0xf
 13437 1dde 4C010000 		.4byte	0x14c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 278


 13438 1de2 0B       		.byte	0xb
 13439 1de3 00       		.byte	0
 13440 1de4 20       		.uleb128 0x20
 13441 1de5 94120000 		.4byte	.LASF313
 13442 1de9 01       		.byte	0x1
 13443 1dea F3       		.byte	0xf3
 13444 1deb CE1D0000 		.4byte	0x1dce
 13445 1def 05       		.uleb128 0x5
 13446 1df0 03       		.byte	0x3
 13447 1df1 00000000 		.4byte	pedals
 13448 1df5 20       		.uleb128 0x20
 13449 1df6 710C0000 		.4byte	.LASF314
 13450 1dfa 01       		.byte	0x1
 13451 1dfb F5       		.byte	0xf5
 13452 1dfc 19130000 		.4byte	0x1319
 13453 1e00 05       		.uleb128 0x5
 13454 1e01 03       		.byte	0x3
 13455 1e02 00000000 		.4byte	pedal_cc_assignments
 13456 1e06 20       		.uleb128 0x20
 13457 1e07 840D0000 		.4byte	.LASF315
 13458 1e0b 01       		.byte	0x1
 13459 1e0c F6       		.byte	0xf6
 13460 1e0d 0A1D0000 		.4byte	0x1d0a
 13461 1e11 05       		.uleb128 0x5
 13462 1e12 03       		.byte	0x3
 13463 1e13 00000000 		.4byte	openStringFrequencies
 13464 1e17 0E       		.uleb128 0xe
 13465 1e18 13010000 		.4byte	0x113
 13466 1e1c 271E0000 		.4byte	0x1e27
 13467 1e20 0F       		.uleb128 0xf
 13468 1e21 4C010000 		.4byte	0x14c
 13469 1e25 01       		.byte	0x1
 13470 1e26 00       		.byte	0
 13471 1e27 20       		.uleb128 0x20
 13472 1e28 E5050000 		.4byte	.LASF316
 13473 1e2c 01       		.byte	0x1
 13474 1e2d F7       		.byte	0xf7
 13475 1e2e 171E0000 		.4byte	0x1e17
 13476 1e32 05       		.uleb128 0x5
 13477 1e33 03       		.byte	0x3
 13478 1e34 00000000 		.4byte	stringMappedPositionsInRatios
 13479 1e38 20       		.uleb128 0x20
 13480 1e39 0E080000 		.4byte	.LASF317
 13481 1e3d 01       		.byte	0x1
 13482 1e3e F8       		.byte	0xf8
 13483 1e3f 171E0000 		.4byte	0x1e17
 13484 1e43 05       		.uleb128 0x5
 13485 1e44 03       		.byte	0x3
 13486 1e45 00000000 		.4byte	stringMappedPositionsInMIDI
 13487 1e49 0E       		.uleb128 0xe
 13488 1e4a CE000000 		.4byte	0xce
 13489 1e4e 591E0000 		.4byte	0x1e59
 13490 1e52 0F       		.uleb128 0xf
 13491 1e53 4C010000 		.4byte	0x14c
 13492 1e57 01       		.byte	0x1
 13493 1e58 00       		.byte	0
 13494 1e59 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 279


 13495 1e5a B3090000 		.4byte	.LASF318
 13496 1e5e 01       		.byte	0x1
 13497 1e5f F9       		.byte	0xf9
 13498 1e60 491E0000 		.4byte	0x1e49
 13499 1e64 05       		.uleb128 0x5
 13500 1e65 03       		.byte	0x3
 13501 1e66 00000000 		.4byte	barMidiOuterStrings
 13502 1e6a 20       		.uleb128 0x20
 13503 1e6b EF120000 		.4byte	.LASF319
 13504 1e6f 01       		.byte	0x1
 13505 1e70 FA       		.byte	0xfa
 13506 1e71 0A1D0000 		.4byte	0x1d0a
 13507 1e75 05       		.uleb128 0x5
 13508 1e76 03       		.byte	0x3
 13509 1e77 00000000 		.4byte	stringFrequencies
 13510 1e7b 20       		.uleb128 0x20
 13511 1e7c 0E050000 		.4byte	.LASF320
 13512 1e80 01       		.byte	0x1
 13513 1e81 FB       		.byte	0xfb
 13514 1e82 0A1D0000 		.4byte	0x1d0a
 13515 1e86 05       		.uleb128 0x5
 13516 1e87 03       		.byte	0x3
 13517 1e88 00000000 		.4byte	stringOctave
 13518 1e8c 20       		.uleb128 0x20
 13519 1e8d F3100000 		.4byte	.LASF321
 13520 1e91 01       		.byte	0x1
 13521 1e92 FC       		.byte	0xfc
 13522 1e93 0A1D0000 		.4byte	0x1d0a
 13523 1e97 05       		.uleb128 0x5
 13524 1e98 03       		.byte	0x3
 13525 1e99 00000000 		.4byte	stringPitch
 13526 1e9d 20       		.uleb128 0x20
 13527 1e9e 92100000 		.4byte	.LASF322
 13528 1ea2 01       		.byte	0x1
 13529 1ea3 FD       		.byte	0xfd
 13530 1ea4 0A1D0000 		.4byte	0x1d0a
 13531 1ea8 05       		.uleb128 0x5
 13532 1ea9 03       		.byte	0x3
 13533 1eaa 00000000 		.4byte	stringMIDI
 13534 1eae 0E       		.uleb128 0xe
 13535 1eaf 9F000000 		.4byte	0x9f
 13536 1eb3 BE1E0000 		.4byte	0x1ebe
 13537 1eb7 0F       		.uleb128 0xf
 13538 1eb8 4C010000 		.4byte	0x14c
 13539 1ebc 0B       		.byte	0xb
 13540 1ebd 00       		.byte	0
 13541 1ebe 20       		.uleb128 0x20
 13542 1ebf FD090000 		.4byte	.LASF323
 13543 1ec3 01       		.byte	0x1
 13544 1ec4 FE       		.byte	0xfe
 13545 1ec5 AE1E0000 		.4byte	0x1eae
 13546 1ec9 05       		.uleb128 0x5
 13547 1eca 03       		.byte	0x3
 13548 1ecb 00000000 		.4byte	openStringMIDI_Int
 13549 1ecf 22       		.uleb128 0x22
 13550 1ed0 E7080000 		.4byte	.LASF324
 13551 1ed4 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 280


 13552 1ed5 0C01     		.2byte	0x10c
 13553 1ed7 B8000000 		.4byte	0xb8
 13554 1edb 05       		.uleb128 0x5
 13555 1edc 03       		.byte	0x3
 13556 1edd 00000000 		.4byte	presetWhenMacroWriteStarted
 13557 1ee1 22       		.uleb128 0x22
 13558 1ee2 C1100000 		.4byte	.LASF325
 13559 1ee6 01       		.byte	0x1
 13560 1ee7 0D01     		.2byte	0x10d
 13561 1ee9 B8000000 		.4byte	0xb8
 13562 1eed 05       		.uleb128 0x5
 13563 1eee 03       		.byte	0x3
 13564 1eef 00000000 		.4byte	macroPageWhenMacroWriteStarted
 13565 1ef3 22       		.uleb128 0x22
 13566 1ef4 E30F0000 		.4byte	.LASF326
 13567 1ef8 01       		.byte	0x1
 13568 1ef9 0F01     		.2byte	0x10f
 13569 1efb 3C1D0000 		.4byte	0x1d3c
 13570 1eff 05       		.uleb128 0x5
 13571 1f00 03       		.byte	0x3
 13572 1f01 00000000 		.4byte	pedals_float
 13573 1f05 22       		.uleb128 0x22
 13574 1f06 BD0F0000 		.4byte	.LASF327
 13575 1f0a 01       		.byte	0x1
 13576 1f0b 1001     		.2byte	0x110
 13577 1f0d 13010000 		.4byte	0x113
 13578 1f11 05       		.uleb128 0x5
 13579 1f12 03       		.byte	0x3
 13580 1f13 00000000 		.4byte	stringRepDivider
 13581 1f17 22       		.uleb128 0x22
 13582 1f18 A60B0000 		.4byte	.LASF328
 13583 1f1c 01       		.byte	0x1
 13584 1f1d 7306     		.2byte	0x673
 13585 1f1f AE1E0000 		.4byte	0x1eae
 13586 1f23 05       		.uleb128 0x5
 13587 1f24 03       		.byte	0x3
 13588 1f25 00000000 		.4byte	prevNotes
 13589 1f29 22       		.uleb128 0x22
 13590 1f2a EB0C0000 		.4byte	.LASF329
 13591 1f2e 01       		.byte	0x1
 13592 1f2f E806     		.2byte	0x6e8
 13593 1f31 09020000 		.4byte	0x209
 13594 1f35 05       		.uleb128 0x5
 13595 1f36 03       		.byte	0x3
 13596 1f37 00000000 		.4byte	checkStatus
 13597 1f3b 22       		.uleb128 0x22
 13598 1f3c 8B0E0000 		.4byte	.LASF330
 13599 1f40 01       		.byte	0x1
 13600 1f41 E906     		.2byte	0x6e9
 13601 1f43 0E020000 		.4byte	0x20e
 13602 1f47 05       		.uleb128 0x5
 13603 1f48 03       		.byte	0x3
 13604 1f49 00000000 		.4byte	checkBase
 13605 1f4d 22       		.uleb128 0x22
 13606 1f4e FB070000 		.4byte	.LASF331
 13607 1f52 01       		.byte	0x1
 13608 1f53 ED06     		.2byte	0x6ed
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 281


 13609 1f55 9F000000 		.4byte	0x9f
 13610 1f59 05       		.uleb128 0x5
 13611 1f5a 03       		.byte	0x3
 13612 1f5b 00000000 		.4byte	SPI_errors
 13613 1f5f 0E       		.uleb128 0xe
 13614 1f60 09020000 		.4byte	0x209
 13615 1f64 6F1F0000 		.4byte	0x1f6f
 13616 1f68 0F       		.uleb128 0xf
 13617 1f69 4C010000 		.4byte	0x14c
 13618 1f6d 03       		.byte	0x3
 13619 1f6e 00       		.byte	0
 13620 1f6f 22       		.uleb128 0x22
 13621 1f70 24110000 		.4byte	.LASF332
 13622 1f74 01       		.byte	0x1
 13623 1f75 7208     		.2byte	0x872
 13624 1f77 811F0000 		.4byte	0x1f81
 13625 1f7b 05       		.uleb128 0x5
 13626 1f7c 03       		.byte	0x3
 13627 1f7d 00000000 		.4byte	tempMIDI
 13628 1f81 06       		.uleb128 0x6
 13629 1f82 5F1F0000 		.4byte	0x1f5f
 13630 1f86 22       		.uleb128 0x22
 13631 1f87 26000000 		.4byte	.LASF333
 13632 1f8b 01       		.byte	0x1
 13633 1f8c 7308     		.2byte	0x873
 13634 1f8e 09020000 		.4byte	0x209
 13635 1f92 05       		.uleb128 0x5
 13636 1f93 03       		.byte	0x3
 13637 1f94 00000000 		.4byte	firstSysex
 13638 1f98 22       		.uleb128 0x22
 13639 1f99 05070000 		.4byte	.LASF334
 13640 1f9d 01       		.byte	0x1
 13641 1f9e 7408     		.2byte	0x874
 13642 1fa0 AA1F0000 		.4byte	0x1faa
 13643 1fa4 05       		.uleb128 0x5
 13644 1fa5 03       		.byte	0x3
 13645 1fa6 00000000 		.4byte	sysexPointerMask
 13646 1faa 1F       		.uleb128 0x1f
 13647 1fab CE000000 		.4byte	0xce
 13648 1faf 00       		.byte	0
 13649              		.section	.debug_abbrev,"",%progbits
 13650              	.Ldebug_abbrev0:
 13651 0000 01       		.uleb128 0x1
 13652 0001 11       		.uleb128 0x11
 13653 0002 01       		.byte	0x1
 13654 0003 25       		.uleb128 0x25
 13655 0004 0E       		.uleb128 0xe
 13656 0005 13       		.uleb128 0x13
 13657 0006 0B       		.uleb128 0xb
 13658 0007 03       		.uleb128 0x3
 13659 0008 0E       		.uleb128 0xe
 13660 0009 1B       		.uleb128 0x1b
 13661 000a 0E       		.uleb128 0xe
 13662 000b 55       		.uleb128 0x55
 13663 000c 17       		.uleb128 0x17
 13664 000d 11       		.uleb128 0x11
 13665 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 282


 13666 000f 10       		.uleb128 0x10
 13667 0010 17       		.uleb128 0x17
 13668 0011 00       		.byte	0
 13669 0012 00       		.byte	0
 13670 0013 02       		.uleb128 0x2
 13671 0014 16       		.uleb128 0x16
 13672 0015 00       		.byte	0
 13673 0016 03       		.uleb128 0x3
 13674 0017 0E       		.uleb128 0xe
 13675 0018 3A       		.uleb128 0x3a
 13676 0019 0B       		.uleb128 0xb
 13677 001a 3B       		.uleb128 0x3b
 13678 001b 0B       		.uleb128 0xb
 13679 001c 49       		.uleb128 0x49
 13680 001d 13       		.uleb128 0x13
 13681 001e 00       		.byte	0
 13682 001f 00       		.byte	0
 13683 0020 03       		.uleb128 0x3
 13684 0021 24       		.uleb128 0x24
 13685 0022 00       		.byte	0
 13686 0023 0B       		.uleb128 0xb
 13687 0024 0B       		.uleb128 0xb
 13688 0025 3E       		.uleb128 0x3e
 13689 0026 0B       		.uleb128 0xb
 13690 0027 03       		.uleb128 0x3
 13691 0028 0E       		.uleb128 0xe
 13692 0029 00       		.byte	0
 13693 002a 00       		.byte	0
 13694 002b 04       		.uleb128 0x4
 13695 002c 24       		.uleb128 0x24
 13696 002d 00       		.byte	0
 13697 002e 0B       		.uleb128 0xb
 13698 002f 0B       		.uleb128 0xb
 13699 0030 3E       		.uleb128 0x3e
 13700 0031 0B       		.uleb128 0xb
 13701 0032 03       		.uleb128 0x3
 13702 0033 08       		.uleb128 0x8
 13703 0034 00       		.byte	0
 13704 0035 00       		.byte	0
 13705 0036 05       		.uleb128 0x5
 13706 0037 16       		.uleb128 0x16
 13707 0038 00       		.byte	0
 13708 0039 03       		.uleb128 0x3
 13709 003a 0E       		.uleb128 0xe
 13710 003b 3A       		.uleb128 0x3a
 13711 003c 0B       		.uleb128 0xb
 13712 003d 3B       		.uleb128 0x3b
 13713 003e 05       		.uleb128 0x5
 13714 003f 49       		.uleb128 0x49
 13715 0040 13       		.uleb128 0x13
 13716 0041 00       		.byte	0
 13717 0042 00       		.byte	0
 13718 0043 06       		.uleb128 0x6
 13719 0044 35       		.uleb128 0x35
 13720 0045 00       		.byte	0
 13721 0046 49       		.uleb128 0x49
 13722 0047 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 283


 13723 0048 00       		.byte	0
 13724 0049 00       		.byte	0
 13725 004a 07       		.uleb128 0x7
 13726 004b 13       		.uleb128 0x13
 13727 004c 01       		.byte	0x1
 13728 004d 0B       		.uleb128 0xb
 13729 004e 0B       		.uleb128 0xb
 13730 004f 3A       		.uleb128 0x3a
 13731 0050 0B       		.uleb128 0xb
 13732 0051 3B       		.uleb128 0x3b
 13733 0052 05       		.uleb128 0x5
 13734 0053 01       		.uleb128 0x1
 13735 0054 13       		.uleb128 0x13
 13736 0055 00       		.byte	0
 13737 0056 00       		.byte	0
 13738 0057 08       		.uleb128 0x8
 13739 0058 0D       		.uleb128 0xd
 13740 0059 00       		.byte	0
 13741 005a 03       		.uleb128 0x3
 13742 005b 0E       		.uleb128 0xe
 13743 005c 3A       		.uleb128 0x3a
 13744 005d 0B       		.uleb128 0xb
 13745 005e 3B       		.uleb128 0x3b
 13746 005f 05       		.uleb128 0x5
 13747 0060 49       		.uleb128 0x49
 13748 0061 13       		.uleb128 0x13
 13749 0062 38       		.uleb128 0x38
 13750 0063 0B       		.uleb128 0xb
 13751 0064 00       		.byte	0
 13752 0065 00       		.byte	0
 13753 0066 09       		.uleb128 0x9
 13754 0067 04       		.uleb128 0x4
 13755 0068 01       		.byte	0x1
 13756 0069 0B       		.uleb128 0xb
 13757 006a 0B       		.uleb128 0xb
 13758 006b 49       		.uleb128 0x49
 13759 006c 13       		.uleb128 0x13
 13760 006d 3A       		.uleb128 0x3a
 13761 006e 0B       		.uleb128 0xb
 13762 006f 3B       		.uleb128 0x3b
 13763 0070 05       		.uleb128 0x5
 13764 0071 01       		.uleb128 0x1
 13765 0072 13       		.uleb128 0x13
 13766 0073 00       		.byte	0
 13767 0074 00       		.byte	0
 13768 0075 0A       		.uleb128 0xa
 13769 0076 28       		.uleb128 0x28
 13770 0077 00       		.byte	0
 13771 0078 03       		.uleb128 0x3
 13772 0079 0E       		.uleb128 0xe
 13773 007a 1C       		.uleb128 0x1c
 13774 007b 0B       		.uleb128 0xb
 13775 007c 00       		.byte	0
 13776 007d 00       		.byte	0
 13777 007e 0B       		.uleb128 0xb
 13778 007f 04       		.uleb128 0x4
 13779 0080 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 284


 13780 0081 03       		.uleb128 0x3
 13781 0082 0E       		.uleb128 0xe
 13782 0083 0B       		.uleb128 0xb
 13783 0084 0B       		.uleb128 0xb
 13784 0085 49       		.uleb128 0x49
 13785 0086 13       		.uleb128 0x13
 13786 0087 3A       		.uleb128 0x3a
 13787 0088 0B       		.uleb128 0xb
 13788 0089 3B       		.uleb128 0x3b
 13789 008a 0B       		.uleb128 0xb
 13790 008b 01       		.uleb128 0x1
 13791 008c 13       		.uleb128 0x13
 13792 008d 00       		.byte	0
 13793 008e 00       		.byte	0
 13794 008f 0C       		.uleb128 0xc
 13795 0090 17       		.uleb128 0x17
 13796 0091 01       		.byte	0x1
 13797 0092 03       		.uleb128 0x3
 13798 0093 0E       		.uleb128 0xe
 13799 0094 0B       		.uleb128 0xb
 13800 0095 0B       		.uleb128 0xb
 13801 0096 3A       		.uleb128 0x3a
 13802 0097 0B       		.uleb128 0xb
 13803 0098 3B       		.uleb128 0x3b
 13804 0099 0B       		.uleb128 0xb
 13805 009a 01       		.uleb128 0x1
 13806 009b 13       		.uleb128 0x13
 13807 009c 00       		.byte	0
 13808 009d 00       		.byte	0
 13809 009e 0D       		.uleb128 0xd
 13810 009f 0D       		.uleb128 0xd
 13811 00a0 00       		.byte	0
 13812 00a1 03       		.uleb128 0x3
 13813 00a2 08       		.uleb128 0x8
 13814 00a3 3A       		.uleb128 0x3a
 13815 00a4 0B       		.uleb128 0xb
 13816 00a5 3B       		.uleb128 0x3b
 13817 00a6 0B       		.uleb128 0xb
 13818 00a7 49       		.uleb128 0x49
 13819 00a8 13       		.uleb128 0x13
 13820 00a9 00       		.byte	0
 13821 00aa 00       		.byte	0
 13822 00ab 0E       		.uleb128 0xe
 13823 00ac 01       		.uleb128 0x1
 13824 00ad 01       		.byte	0x1
 13825 00ae 49       		.uleb128 0x49
 13826 00af 13       		.uleb128 0x13
 13827 00b0 01       		.uleb128 0x1
 13828 00b1 13       		.uleb128 0x13
 13829 00b2 00       		.byte	0
 13830 00b3 00       		.byte	0
 13831 00b4 0F       		.uleb128 0xf
 13832 00b5 21       		.uleb128 0x21
 13833 00b6 00       		.byte	0
 13834 00b7 49       		.uleb128 0x49
 13835 00b8 13       		.uleb128 0x13
 13836 00b9 2F       		.uleb128 0x2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 285


 13837 00ba 0B       		.uleb128 0xb
 13838 00bb 00       		.byte	0
 13839 00bc 00       		.byte	0
 13840 00bd 10       		.uleb128 0x10
 13841 00be 2E       		.uleb128 0x2e
 13842 00bf 01       		.byte	0x1
 13843 00c0 3F       		.uleb128 0x3f
 13844 00c1 19       		.uleb128 0x19
 13845 00c2 03       		.uleb128 0x3
 13846 00c3 08       		.uleb128 0x8
 13847 00c4 3A       		.uleb128 0x3a
 13848 00c5 0B       		.uleb128 0xb
 13849 00c6 3B       		.uleb128 0x3b
 13850 00c7 05       		.uleb128 0x5
 13851 00c8 27       		.uleb128 0x27
 13852 00c9 19       		.uleb128 0x19
 13853 00ca 49       		.uleb128 0x49
 13854 00cb 13       		.uleb128 0x13
 13855 00cc 11       		.uleb128 0x11
 13856 00cd 01       		.uleb128 0x1
 13857 00ce 12       		.uleb128 0x12
 13858 00cf 06       		.uleb128 0x6
 13859 00d0 40       		.uleb128 0x40
 13860 00d1 18       		.uleb128 0x18
 13861 00d2 9642     		.uleb128 0x2116
 13862 00d4 19       		.uleb128 0x19
 13863 00d5 01       		.uleb128 0x1
 13864 00d6 13       		.uleb128 0x13
 13865 00d7 00       		.byte	0
 13866 00d8 00       		.byte	0
 13867 00d9 11       		.uleb128 0x11
 13868 00da 05       		.uleb128 0x5
 13869 00db 00       		.byte	0
 13870 00dc 03       		.uleb128 0x3
 13871 00dd 0E       		.uleb128 0xe
 13872 00de 3A       		.uleb128 0x3a
 13873 00df 0B       		.uleb128 0xb
 13874 00e0 3B       		.uleb128 0x3b
 13875 00e1 05       		.uleb128 0x5
 13876 00e2 49       		.uleb128 0x49
 13877 00e3 13       		.uleb128 0x13
 13878 00e4 02       		.uleb128 0x2
 13879 00e5 18       		.uleb128 0x18
 13880 00e6 00       		.byte	0
 13881 00e7 00       		.byte	0
 13882 00e8 12       		.uleb128 0x12
 13883 00e9 2E       		.uleb128 0x2e
 13884 00ea 01       		.byte	0x1
 13885 00eb 3F       		.uleb128 0x3f
 13886 00ec 19       		.uleb128 0x19
 13887 00ed 03       		.uleb128 0x3
 13888 00ee 0E       		.uleb128 0xe
 13889 00ef 3A       		.uleb128 0x3a
 13890 00f0 0B       		.uleb128 0xb
 13891 00f1 3B       		.uleb128 0x3b
 13892 00f2 05       		.uleb128 0x5
 13893 00f3 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 286


 13894 00f4 19       		.uleb128 0x19
 13895 00f5 49       		.uleb128 0x49
 13896 00f6 13       		.uleb128 0x13
 13897 00f7 11       		.uleb128 0x11
 13898 00f8 01       		.uleb128 0x1
 13899 00f9 12       		.uleb128 0x12
 13900 00fa 06       		.uleb128 0x6
 13901 00fb 40       		.uleb128 0x40
 13902 00fc 18       		.uleb128 0x18
 13903 00fd 9642     		.uleb128 0x2116
 13904 00ff 19       		.uleb128 0x19
 13905 0100 01       		.uleb128 0x1
 13906 0101 13       		.uleb128 0x13
 13907 0102 00       		.byte	0
 13908 0103 00       		.byte	0
 13909 0104 13       		.uleb128 0x13
 13910 0105 2E       		.uleb128 0x2e
 13911 0106 01       		.byte	0x1
 13912 0107 3F       		.uleb128 0x3f
 13913 0108 19       		.uleb128 0x19
 13914 0109 03       		.uleb128 0x3
 13915 010a 0E       		.uleb128 0xe
 13916 010b 3A       		.uleb128 0x3a
 13917 010c 0B       		.uleb128 0xb
 13918 010d 3B       		.uleb128 0x3b
 13919 010e 05       		.uleb128 0x5
 13920 010f 11       		.uleb128 0x11
 13921 0110 01       		.uleb128 0x1
 13922 0111 12       		.uleb128 0x12
 13923 0112 06       		.uleb128 0x6
 13924 0113 40       		.uleb128 0x40
 13925 0114 18       		.uleb128 0x18
 13926 0115 9642     		.uleb128 0x2116
 13927 0117 19       		.uleb128 0x19
 13928 0118 01       		.uleb128 0x1
 13929 0119 13       		.uleb128 0x13
 13930 011a 00       		.byte	0
 13931 011b 00       		.byte	0
 13932 011c 14       		.uleb128 0x14
 13933 011d 0B       		.uleb128 0xb
 13934 011e 01       		.byte	0x1
 13935 011f 11       		.uleb128 0x11
 13936 0120 01       		.uleb128 0x1
 13937 0121 12       		.uleb128 0x12
 13938 0122 06       		.uleb128 0x6
 13939 0123 01       		.uleb128 0x1
 13940 0124 13       		.uleb128 0x13
 13941 0125 00       		.byte	0
 13942 0126 00       		.byte	0
 13943 0127 15       		.uleb128 0x15
 13944 0128 34       		.uleb128 0x34
 13945 0129 00       		.byte	0
 13946 012a 03       		.uleb128 0x3
 13947 012b 08       		.uleb128 0x8
 13948 012c 3A       		.uleb128 0x3a
 13949 012d 0B       		.uleb128 0xb
 13950 012e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 287


 13951 012f 05       		.uleb128 0x5
 13952 0130 49       		.uleb128 0x49
 13953 0131 13       		.uleb128 0x13
 13954 0132 02       		.uleb128 0x2
 13955 0133 18       		.uleb128 0x18
 13956 0134 00       		.byte	0
 13957 0135 00       		.byte	0
 13958 0136 16       		.uleb128 0x16
 13959 0137 0B       		.uleb128 0xb
 13960 0138 01       		.byte	0x1
 13961 0139 11       		.uleb128 0x11
 13962 013a 01       		.uleb128 0x1
 13963 013b 12       		.uleb128 0x12
 13964 013c 06       		.uleb128 0x6
 13965 013d 00       		.byte	0
 13966 013e 00       		.byte	0
 13967 013f 17       		.uleb128 0x17
 13968 0140 2E       		.uleb128 0x2e
 13969 0141 01       		.byte	0x1
 13970 0142 3F       		.uleb128 0x3f
 13971 0143 19       		.uleb128 0x19
 13972 0144 03       		.uleb128 0x3
 13973 0145 0E       		.uleb128 0xe
 13974 0146 3A       		.uleb128 0x3a
 13975 0147 0B       		.uleb128 0xb
 13976 0148 3B       		.uleb128 0x3b
 13977 0149 05       		.uleb128 0x5
 13978 014a 27       		.uleb128 0x27
 13979 014b 19       		.uleb128 0x19
 13980 014c 11       		.uleb128 0x11
 13981 014d 01       		.uleb128 0x1
 13982 014e 12       		.uleb128 0x12
 13983 014f 06       		.uleb128 0x6
 13984 0150 40       		.uleb128 0x40
 13985 0151 18       		.uleb128 0x18
 13986 0152 9642     		.uleb128 0x2116
 13987 0154 19       		.uleb128 0x19
 13988 0155 01       		.uleb128 0x1
 13989 0156 13       		.uleb128 0x13
 13990 0157 00       		.byte	0
 13991 0158 00       		.byte	0
 13992 0159 18       		.uleb128 0x18
 13993 015a 34       		.uleb128 0x34
 13994 015b 00       		.byte	0
 13995 015c 03       		.uleb128 0x3
 13996 015d 0E       		.uleb128 0xe
 13997 015e 3A       		.uleb128 0x3a
 13998 015f 0B       		.uleb128 0xb
 13999 0160 3B       		.uleb128 0x3b
 14000 0161 05       		.uleb128 0x5
 14001 0162 49       		.uleb128 0x49
 14002 0163 13       		.uleb128 0x13
 14003 0164 02       		.uleb128 0x2
 14004 0165 18       		.uleb128 0x18
 14005 0166 00       		.byte	0
 14006 0167 00       		.byte	0
 14007 0168 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 288


 14008 0169 2E       		.uleb128 0x2e
 14009 016a 00       		.byte	0
 14010 016b 3F       		.uleb128 0x3f
 14011 016c 19       		.uleb128 0x19
 14012 016d 03       		.uleb128 0x3
 14013 016e 0E       		.uleb128 0xe
 14014 016f 3A       		.uleb128 0x3a
 14015 0170 0B       		.uleb128 0xb
 14016 0171 3B       		.uleb128 0x3b
 14017 0172 05       		.uleb128 0x5
 14018 0173 27       		.uleb128 0x27
 14019 0174 19       		.uleb128 0x19
 14020 0175 11       		.uleb128 0x11
 14021 0176 01       		.uleb128 0x1
 14022 0177 12       		.uleb128 0x12
 14023 0178 06       		.uleb128 0x6
 14024 0179 40       		.uleb128 0x40
 14025 017a 18       		.uleb128 0x18
 14026 017b 9642     		.uleb128 0x2116
 14027 017d 19       		.uleb128 0x19
 14028 017e 00       		.byte	0
 14029 017f 00       		.byte	0
 14030 0180 1A       		.uleb128 0x1a
 14031 0181 05       		.uleb128 0x5
 14032 0182 00       		.byte	0
 14033 0183 03       		.uleb128 0x3
 14034 0184 08       		.uleb128 0x8
 14035 0185 3A       		.uleb128 0x3a
 14036 0186 0B       		.uleb128 0xb
 14037 0187 3B       		.uleb128 0x3b
 14038 0188 05       		.uleb128 0x5
 14039 0189 49       		.uleb128 0x49
 14040 018a 13       		.uleb128 0x13
 14041 018b 02       		.uleb128 0x2
 14042 018c 18       		.uleb128 0x18
 14043 018d 00       		.byte	0
 14044 018e 00       		.byte	0
 14045 018f 1B       		.uleb128 0x1b
 14046 0190 0F       		.uleb128 0xf
 14047 0191 00       		.byte	0
 14048 0192 0B       		.uleb128 0xb
 14049 0193 0B       		.uleb128 0xb
 14050 0194 49       		.uleb128 0x49
 14051 0195 13       		.uleb128 0x13
 14052 0196 00       		.byte	0
 14053 0197 00       		.byte	0
 14054 0198 1C       		.uleb128 0x1c
 14055 0199 34       		.uleb128 0x34
 14056 019a 00       		.byte	0
 14057 019b 03       		.uleb128 0x3
 14058 019c 0E       		.uleb128 0xe
 14059 019d 3A       		.uleb128 0x3a
 14060 019e 0B       		.uleb128 0xb
 14061 019f 3B       		.uleb128 0x3b
 14062 01a0 0B       		.uleb128 0xb
 14063 01a1 49       		.uleb128 0x49
 14064 01a2 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 289


 14065 01a3 02       		.uleb128 0x2
 14066 01a4 18       		.uleb128 0x18
 14067 01a5 00       		.byte	0
 14068 01a6 00       		.byte	0
 14069 01a7 1D       		.uleb128 0x1d
 14070 01a8 34       		.uleb128 0x34
 14071 01a9 00       		.byte	0
 14072 01aa 03       		.uleb128 0x3
 14073 01ab 0E       		.uleb128 0xe
 14074 01ac 3A       		.uleb128 0x3a
 14075 01ad 0B       		.uleb128 0xb
 14076 01ae 3B       		.uleb128 0x3b
 14077 01af 0B       		.uleb128 0xb
 14078 01b0 49       		.uleb128 0x49
 14079 01b1 13       		.uleb128 0x13
 14080 01b2 3F       		.uleb128 0x3f
 14081 01b3 19       		.uleb128 0x19
 14082 01b4 3C       		.uleb128 0x3c
 14083 01b5 19       		.uleb128 0x19
 14084 01b6 00       		.byte	0
 14085 01b7 00       		.byte	0
 14086 01b8 1E       		.uleb128 0x1e
 14087 01b9 21       		.uleb128 0x21
 14088 01ba 00       		.byte	0
 14089 01bb 49       		.uleb128 0x49
 14090 01bc 13       		.uleb128 0x13
 14091 01bd 2F       		.uleb128 0x2f
 14092 01be 05       		.uleb128 0x5
 14093 01bf 00       		.byte	0
 14094 01c0 00       		.byte	0
 14095 01c1 1F       		.uleb128 0x1f
 14096 01c2 26       		.uleb128 0x26
 14097 01c3 00       		.byte	0
 14098 01c4 49       		.uleb128 0x49
 14099 01c5 13       		.uleb128 0x13
 14100 01c6 00       		.byte	0
 14101 01c7 00       		.byte	0
 14102 01c8 20       		.uleb128 0x20
 14103 01c9 34       		.uleb128 0x34
 14104 01ca 00       		.byte	0
 14105 01cb 03       		.uleb128 0x3
 14106 01cc 0E       		.uleb128 0xe
 14107 01cd 3A       		.uleb128 0x3a
 14108 01ce 0B       		.uleb128 0xb
 14109 01cf 3B       		.uleb128 0x3b
 14110 01d0 0B       		.uleb128 0xb
 14111 01d1 49       		.uleb128 0x49
 14112 01d2 13       		.uleb128 0x13
 14113 01d3 3F       		.uleb128 0x3f
 14114 01d4 19       		.uleb128 0x19
 14115 01d5 02       		.uleb128 0x2
 14116 01d6 18       		.uleb128 0x18
 14117 01d7 00       		.byte	0
 14118 01d8 00       		.byte	0
 14119 01d9 21       		.uleb128 0x21
 14120 01da 34       		.uleb128 0x34
 14121 01db 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 290


 14122 01dc 03       		.uleb128 0x3
 14123 01dd 0E       		.uleb128 0xe
 14124 01de 3A       		.uleb128 0x3a
 14125 01df 0B       		.uleb128 0xb
 14126 01e0 3B       		.uleb128 0x3b
 14127 01e1 05       		.uleb128 0x5
 14128 01e2 49       		.uleb128 0x49
 14129 01e3 13       		.uleb128 0x13
 14130 01e4 3F       		.uleb128 0x3f
 14131 01e5 19       		.uleb128 0x19
 14132 01e6 3C       		.uleb128 0x3c
 14133 01e7 19       		.uleb128 0x19
 14134 01e8 00       		.byte	0
 14135 01e9 00       		.byte	0
 14136 01ea 22       		.uleb128 0x22
 14137 01eb 34       		.uleb128 0x34
 14138 01ec 00       		.byte	0
 14139 01ed 03       		.uleb128 0x3
 14140 01ee 0E       		.uleb128 0xe
 14141 01ef 3A       		.uleb128 0x3a
 14142 01f0 0B       		.uleb128 0xb
 14143 01f1 3B       		.uleb128 0x3b
 14144 01f2 05       		.uleb128 0x5
 14145 01f3 49       		.uleb128 0x49
 14146 01f4 13       		.uleb128 0x13
 14147 01f5 3F       		.uleb128 0x3f
 14148 01f6 19       		.uleb128 0x19
 14149 01f7 02       		.uleb128 0x2
 14150 01f8 18       		.uleb128 0x18
 14151 01f9 00       		.byte	0
 14152 01fa 00       		.byte	0
 14153 01fb 23       		.uleb128 0x23
 14154 01fc 34       		.uleb128 0x34
 14155 01fd 00       		.byte	0
 14156 01fe 03       		.uleb128 0x3
 14157 01ff 08       		.uleb128 0x8
 14158 0200 3A       		.uleb128 0x3a
 14159 0201 0B       		.uleb128 0xb
 14160 0202 3B       		.uleb128 0x3b
 14161 0203 0B       		.uleb128 0xb
 14162 0204 49       		.uleb128 0x49
 14163 0205 13       		.uleb128 0x13
 14164 0206 3F       		.uleb128 0x3f
 14165 0207 19       		.uleb128 0x19
 14166 0208 02       		.uleb128 0x2
 14167 0209 18       		.uleb128 0x18
 14168 020a 00       		.byte	0
 14169 020b 00       		.byte	0
 14170 020c 00       		.byte	0
 14171              		.section	.debug_aranges,"",%progbits
 14172 0000 FC000000 		.4byte	0xfc
 14173 0004 0200     		.2byte	0x2
 14174 0006 00000000 		.4byte	.Ldebug_info0
 14175 000a 04       		.byte	0x4
 14176 000b 00       		.byte	0
 14177 000c 0000     		.2byte	0
 14178 000e 0000     		.2byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 291


 14179 0010 00000000 		.4byte	.LFB64
 14180 0014 56000000 		.4byte	.LFE64-.LFB64
 14181 0018 00000000 		.4byte	.LFB65
 14182 001c 64000000 		.4byte	.LFE65-.LFB65
 14183 0020 00000000 		.4byte	.LFB66
 14184 0024 E8010000 		.4byte	.LFE66-.LFB66
 14185 0028 00000000 		.4byte	.LFB67
 14186 002c 18010000 		.4byte	.LFE67-.LFB67
 14187 0030 00000000 		.4byte	.LFB68
 14188 0034 84000000 		.4byte	.LFE68-.LFB68
 14189 0038 00000000 		.4byte	.LFB69
 14190 003c 34000000 		.4byte	.LFE69-.LFB69
 14191 0040 00000000 		.4byte	.LFB70
 14192 0044 7C000000 		.4byte	.LFE70-.LFB70
 14193 0048 00000000 		.4byte	.LFB71
 14194 004c 14000000 		.4byte	.LFE71-.LFB71
 14195 0050 00000000 		.4byte	.LFB72
 14196 0054 9C000000 		.4byte	.LFE72-.LFB72
 14197 0058 00000000 		.4byte	.LFB73
 14198 005c 5C010000 		.4byte	.LFE73-.LFB73
 14199 0060 00000000 		.4byte	.LFB74
 14200 0064 80000000 		.4byte	.LFE74-.LFB74
 14201 0068 00000000 		.4byte	.LFB75
 14202 006c AC200000 		.4byte	.LFE75-.LFB75
 14203 0070 00000000 		.4byte	.LFB76
 14204 0074 70000000 		.4byte	.LFE76-.LFB76
 14205 0078 00000000 		.4byte	.LFB77
 14206 007c 70010000 		.4byte	.LFE77-.LFB77
 14207 0080 00000000 		.4byte	.LFB78
 14208 0084 E0000000 		.4byte	.LFE78-.LFB78
 14209 0088 00000000 		.4byte	.LFB79
 14210 008c F4000000 		.4byte	.LFE79-.LFB79
 14211 0090 00000000 		.4byte	.LFB80
 14212 0094 24000000 		.4byte	.LFE80-.LFB80
 14213 0098 00000000 		.4byte	.LFB81
 14214 009c 54000000 		.4byte	.LFE81-.LFB81
 14215 00a0 00000000 		.4byte	.LFB82
 14216 00a4 C4000000 		.4byte	.LFE82-.LFB82
 14217 00a8 00000000 		.4byte	.LFB83
 14218 00ac 98000000 		.4byte	.LFE83-.LFB83
 14219 00b0 00000000 		.4byte	.LFB84
 14220 00b4 D4000000 		.4byte	.LFE84-.LFB84
 14221 00b8 00000000 		.4byte	.LFB85
 14222 00bc 1C000000 		.4byte	.LFE85-.LFB85
 14223 00c0 00000000 		.4byte	.LFB86
 14224 00c4 68000000 		.4byte	.LFE86-.LFB86
 14225 00c8 00000000 		.4byte	.LFB87
 14226 00cc 68000000 		.4byte	.LFE87-.LFB87
 14227 00d0 00000000 		.4byte	.LFB88
 14228 00d4 68000000 		.4byte	.LFE88-.LFB88
 14229 00d8 00000000 		.4byte	.LFB89
 14230 00dc 6C000000 		.4byte	.LFE89-.LFB89
 14231 00e0 00000000 		.4byte	.LFB90
 14232 00e4 5C000000 		.4byte	.LFE90-.LFB90
 14233 00e8 00000000 		.4byte	.LFB91
 14234 00ec 600C0000 		.4byte	.LFE91-.LFB91
 14235 00f0 00000000 		.4byte	.LFB92
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 292


 14236 00f4 50010000 		.4byte	.LFE92-.LFB92
 14237 00f8 00000000 		.4byte	0
 14238 00fc 00000000 		.4byte	0
 14239              		.section	.debug_ranges,"",%progbits
 14240              	.Ldebug_ranges0:
 14241 0000 00000000 		.4byte	.LFB64
 14242 0004 56000000 		.4byte	.LFE64
 14243 0008 00000000 		.4byte	.LFB65
 14244 000c 64000000 		.4byte	.LFE65
 14245 0010 00000000 		.4byte	.LFB66
 14246 0014 E8010000 		.4byte	.LFE66
 14247 0018 00000000 		.4byte	.LFB67
 14248 001c 18010000 		.4byte	.LFE67
 14249 0020 00000000 		.4byte	.LFB68
 14250 0024 84000000 		.4byte	.LFE68
 14251 0028 00000000 		.4byte	.LFB69
 14252 002c 34000000 		.4byte	.LFE69
 14253 0030 00000000 		.4byte	.LFB70
 14254 0034 7C000000 		.4byte	.LFE70
 14255 0038 00000000 		.4byte	.LFB71
 14256 003c 14000000 		.4byte	.LFE71
 14257 0040 00000000 		.4byte	.LFB72
 14258 0044 9C000000 		.4byte	.LFE72
 14259 0048 00000000 		.4byte	.LFB73
 14260 004c 5C010000 		.4byte	.LFE73
 14261 0050 00000000 		.4byte	.LFB74
 14262 0054 80000000 		.4byte	.LFE74
 14263 0058 00000000 		.4byte	.LFB75
 14264 005c AC200000 		.4byte	.LFE75
 14265 0060 00000000 		.4byte	.LFB76
 14266 0064 70000000 		.4byte	.LFE76
 14267 0068 00000000 		.4byte	.LFB77
 14268 006c 70010000 		.4byte	.LFE77
 14269 0070 00000000 		.4byte	.LFB78
 14270 0074 E0000000 		.4byte	.LFE78
 14271 0078 00000000 		.4byte	.LFB79
 14272 007c F4000000 		.4byte	.LFE79
 14273 0080 00000000 		.4byte	.LFB80
 14274 0084 24000000 		.4byte	.LFE80
 14275 0088 00000000 		.4byte	.LFB81
 14276 008c 54000000 		.4byte	.LFE81
 14277 0090 00000000 		.4byte	.LFB82
 14278 0094 C4000000 		.4byte	.LFE82
 14279 0098 00000000 		.4byte	.LFB83
 14280 009c 98000000 		.4byte	.LFE83
 14281 00a0 00000000 		.4byte	.LFB84
 14282 00a4 D4000000 		.4byte	.LFE84
 14283 00a8 00000000 		.4byte	.LFB85
 14284 00ac 1C000000 		.4byte	.LFE85
 14285 00b0 00000000 		.4byte	.LFB86
 14286 00b4 68000000 		.4byte	.LFE86
 14287 00b8 00000000 		.4byte	.LFB87
 14288 00bc 68000000 		.4byte	.LFE87
 14289 00c0 00000000 		.4byte	.LFB88
 14290 00c4 68000000 		.4byte	.LFE88
 14291 00c8 00000000 		.4byte	.LFB89
 14292 00cc 6C000000 		.4byte	.LFE89
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 293


 14293 00d0 00000000 		.4byte	.LFB90
 14294 00d4 5C000000 		.4byte	.LFE90
 14295 00d8 00000000 		.4byte	.LFB91
 14296 00dc 600C0000 		.4byte	.LFE91
 14297 00e0 00000000 		.4byte	.LFB92
 14298 00e4 50010000 		.4byte	.LFE92
 14299 00e8 00000000 		.4byte	0
 14300 00ec 00000000 		.4byte	0
 14301              		.section	.debug_line,"",%progbits
 14302              	.Ldebug_line0:
 14303 0000 F90C0000 		.section	.debug_str,"MS",%progbits,1
 14303      0200BC01 
 14303      00000201 
 14303      FB0E0D00 
 14303      01010101 
 14304              	.LASF215:
 14305 0000 70726573 		.ascii	"presetArraySection\000"
 14305      65744172 
 14305      72617953 
 14305      65637469 
 14305      6F6E00
 14306              	.LASF15:
 14307 0013 696E7438 		.ascii	"int8_t\000"
 14307      5F7400
 14308              	.LASF203:
 14309 001a 70726573 		.ascii	"presetArray\000"
 14309      65744172 
 14309      72617900 
 14310              	.LASF333:
 14311 0026 66697273 		.ascii	"firstSysex\000"
 14311      74537973 
 14311      657800
 14312              	.LASF30:
 14313 0031 73697A65 		.ascii	"sizetype\000"
 14313      74797065 
 14313      00
 14314              	.LASF220:
 14315 003a 73656E64 		.ascii	"sendingMessage\000"
 14315      696E674D 
 14315      65737361 
 14315      676500
 14316              	.LASF301:
 14317 0049 70726576 		.ascii	"prev_processed_volumePedal\000"
 14317      5F70726F 
 14317      63657373 
 14317      65645F76 
 14317      6F6C756D 
 14318              	.LASF88:
 14319 0064 74656D70 		.ascii	"tempangle\000"
 14319      616E676C 
 14319      6500
 14320              	.LASF266:
 14321 006e 6E657744 		.ascii	"newDataFlag2\000"
 14321      61746146 
 14321      6C616732 
 14321      00
 14322              	.LASF165:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 294


 14323 007b 6D616372 		.ascii	"macroNamesArray\000"
 14323      6F4E616D 
 14323      65734172 
 14323      72617900 
 14324              	.LASF196:
 14325 008b 73656E64 		.ascii	"sendLocalPresetStoreCommand\000"
 14325      4C6F6361 
 14325      6C507265 
 14325      73657453 
 14325      746F7265 
 14326              	.LASF40:
 14327 00a7 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 14327      4D5F4545 
 14327      50524F4D 
 14327      5F535543 
 14327      43455353 
 14328              	.LASF19:
 14329 00bc 696E7433 		.ascii	"int32_t\000"
 14329      325F7400 
 14330              	.LASF150:
 14331 00c4 456D5F45 		.ascii	"Em_EEPROM_context\000"
 14331      4550524F 
 14331      4D5F636F 
 14331      6E746578 
 14331      7400
 14332              	.LASF49:
 14333 00d6 54686972 		.ascii	"ThirdLine\000"
 14333      644C696E 
 14333      6500
 14334              	.LASF95:
 14335 00e0 62617242 		.ascii	"barBend\000"
 14335      656E6400 
 14336              	.LASF113:
 14337 00e8 6E6F7465 		.ascii	"noteEvent\000"
 14337      4576656E 
 14337      7400
 14338              	.LASF166:
 14339 00f2 636F6E74 		.ascii	"controlNamesArray\000"
 14339      726F6C4E 
 14339      616D6573 
 14339      41727261 
 14339      7900
 14340              	.LASF275:
 14341 0104 53504932 		.ascii	"SPI2errorflag\000"
 14341      6572726F 
 14341      72666C61 
 14341      6700
 14342              	.LASF23:
 14343 0112 75696E74 		.ascii	"uint32\000"
 14343      333200
 14344              	.LASF98:
 14345 0119 77686963 		.ascii	"whichMacroToStoreName\000"
 14345      684D6163 
 14345      726F546F 
 14345      53746F72 
 14345      654E616D 
 14346              	.LASF126:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 295


 14347 012f 43437661 		.ascii	"CCval\000"
 14347      6C00
 14348              	.LASF226:
 14349 0135 6E756D4D 		.ascii	"numMappings\000"
 14349      61707069 
 14349      6E677300 
 14350              	.LASF155:
 14351 0141 49324362 		.ascii	"I2Cbuff1\000"
 14351      75666631 
 14351      00
 14352              	.LASF289:
 14353 014a 49324362 		.ascii	"I2Cbuff2\000"
 14353      75666632 
 14353      00
 14354              	.LASF291:
 14355 0153 6D75785F 		.ascii	"mux_states\000"
 14355      73746174 
 14355      657300
 14356              	.LASF139:
 14357 015e 74656D70 		.ascii	"tempLow\000"
 14357      4C6F7700 
 14358              	.LASF163:
 14359 0166 6E65636B 		.ascii	"necks\000"
 14359      7300
 14360              	.LASF156:
 14361 016c 6F637461 		.ascii	"octave\000"
 14361      766500
 14362              	.LASF222:
 14363 0173 63757272 		.ascii	"currentFloat\000"
 14363      656E7446 
 14363      6C6F6174 
 14363      00
 14364              	.LASF160:
 14365 0180 766F6C75 		.ascii	"volumeWaitingToSend\000"
 14365      6D655761 
 14365      6974696E 
 14365      67546F53 
 14365      656E6400 
 14366              	.LASF51:
 14367 0194 4E696C4C 		.ascii	"NilLine\000"
 14367      696E6500 
 14368              	.LASF45:
 14369 019c 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 14369      6E5F656D 
 14369      5F656570 
 14369      726F6D5F 
 14369      73746174 
 14370              	.LASF161:
 14371 01b5 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 14371      6F4F4C45 
 14371      44576169 
 14371      74696E67 
 14371      546F5365 
 14372              	.LASF178:
 14373 01cc 70656461 		.ascii	"pedals_high\000"
 14373      6C735F68 
 14373      69676800 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 296


 14374              	.LASF104:
 14375 01d8 6E627974 		.ascii	"nbytes\000"
 14375      657300
 14376              	.LASF171:
 14377 01df 636F7065 		.ascii	"copedentNamesArray\000"
 14377      64656E74 
 14377      4E616D65 
 14377      73417272 
 14377      617900
 14378              	.LASF224:
 14379 01f2 76616C73 		.ascii	"valsCount\000"
 14379      436F756E 
 14379      7400
 14380              	.LASF125:
 14381 01fc 43436E75 		.ascii	"CCnum\000"
 14381      6D00
 14382              	.LASF42:
 14383 0202 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 14383      4D5F4545 
 14383      50524F4D 
 14383      5F424144 
 14383      5F434845 
 14384              	.LASF38:
 14385 021c 75736572 		.ascii	"userFlashStartAddr\000"
 14385      466C6173 
 14385      68537461 
 14385      72744164 
 14385      647200
 14386              	.LASF32:
 14387 022f 6E756D62 		.ascii	"numberOfRows\000"
 14387      65724F66 
 14387      526F7773 
 14387      00
 14388              	.LASF133:
 14389 023c 696E7456 		.ascii	"intVal\000"
 14389      616C00
 14390              	.LASF61:
 14391 0243 69737461 		.ascii	"istart\000"
 14391      727400
 14392              	.LASF66:
 14393 024a 70656461 		.ascii	"pedalDiff\000"
 14393      6C446966 
 14393      6600
 14394              	.LASF130:
 14395 0254 74686556 		.ascii	"theVal\000"
 14395      616C00
 14396              	.LASF36:
 14397 025b 72656475 		.ascii	"redundantCopy\000"
 14397      6E64616E 
 14397      74436F70 
 14397      7900
 14398              	.LASF1:
 14399 0269 5F5F7569 		.ascii	"__uint8_t\000"
 14399      6E74385F 
 14399      7400
 14400              	.LASF225:
 14401 0273 6D617043 		.ascii	"mapCountExpectation\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 297


 14401      6F756E74 
 14401      45787065 
 14401      63746174 
 14401      696F6E00 
 14402              	.LASF59:
 14403 0287 70726573 		.ascii	"presetEnd\000"
 14403      6574456E 
 14403      6400
 14404              	.LASF288:
 14405 0291 62617243 		.ascii	"barCount\000"
 14405      6F756E74 
 14405      00
 14406              	.LASF206:
 14407 029a 73656E64 		.ascii	"sendMessageEnd\000"
 14407      4D657373 
 14407      61676545 
 14407      6E6400
 14408              	.LASF294:
 14409 02a9 70656461 		.ascii	"pedals_highWithDeadZone\000"
 14409      6C735F68 
 14409      69676857 
 14409      69746844 
 14409      6561645A 
 14410              	.LASF170:
 14411 02c1 70726573 		.ascii	"presetNumberToLoad\000"
 14411      65744E75 
 14411      6D626572 
 14411      546F4C6F 
 14411      616400
 14412              	.LASF310:
 14413 02d4 766F6963 		.ascii	"voice\000"
 14413      6500
 14414              	.LASF256:
 14415 02da 73747269 		.ascii	"strings\000"
 14415      6E677300 
 14416              	.LASF9:
 14417 02e2 6C6F6E67 		.ascii	"long int\000"
 14417      20696E74 
 14417      00
 14418              	.LASF159:
 14419 02eb 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 14419      4F4C4544 
 14419      57616974 
 14419      696E6754 
 14419      6F53656E 
 14420              	.LASF305:
 14421 0301 66726574 		.ascii	"fretScalingInMIDI\000"
 14421      5363616C 
 14421      696E6749 
 14421      6E4D4944 
 14421      4900
 14422              	.LASF304:
 14423 0313 70726573 		.ascii	"presetLoadedResponse\000"
 14423      65744C6F 
 14423      61646564 
 14423      52657370 
 14423      6F6E7365 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 298


 14424              	.LASF204:
 14425 0328 70726573 		.ascii	"presetNumberToWrite\000"
 14425      65744E75 
 14425      6D626572 
 14425      546F5772 
 14425      69746500 
 14426              	.LASF97:
 14427 033c 77686963 		.ascii	"whichPresetToStoreName\000"
 14427      68507265 
 14427      73657454 
 14427      6F53746F 
 14427      72654E61 
 14428              	.LASF169:
 14429 0353 70726573 		.ascii	"presetNamesArray\000"
 14429      65744E61 
 14429      6D657341 
 14429      72726179 
 14429      00
 14430              	.LASF76:
 14431 0364 6D61696E 		.ascii	"main\000"
 14431      00
 14432              	.LASF312:
 14433 0369 70726576 		.ascii	"prevStringPitchBend\000"
 14433      53747269 
 14433      6E675069 
 14433      74636842 
 14433      656E6400 
 14434              	.LASF120:
 14435 037d 4D494449 		.ascii	"MIDInoteNum\000"
 14435      6E6F7465 
 14435      4E756D00 
 14436              	.LASF128:
 14437 0389 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 14437      4D494449 
 14437      416C6C4E 
 14437      6F746573 
 14437      4F666600 
 14438              	.LASF197:
 14439 039d 6E657750 		.ascii	"newPresetName\000"
 14439      72657365 
 14439      744E616D 
 14439      6500
 14440              	.LASF106:
 14441 03ab 6572726F 		.ascii	"error\000"
 14441      7200
 14442              	.LASF48:
 14443 03b1 5365636F 		.ascii	"SecondLine\000"
 14443      6E644C69 
 14443      6E6500
 14444              	.LASF87:
 14445 03bc 74656D70 		.ascii	"tempSquished\000"
 14445      53717569 
 14445      73686564 
 14445      00
 14446              	.LASF221:
 14447 03c9 73656E64 		.ascii	"sendKnobs\000"
 14447      4B6E6F62 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 299


 14447      7300
 14448              	.LASF284:
 14449 03d3 70726576 		.ascii	"prevMacroKnobValues7bit\000"
 14449      4D616372 
 14449      6F4B6E6F 
 14449      6256616C 
 14449      75657337 
 14450              	.LASF191:
 14451 03eb 6D696469 		.ascii	"midiBarSendOn\000"
 14451      42617253 
 14451      656E644F 
 14451      6E00
 14452              	.LASF276:
 14453 03f9 6B6E6F62 		.ascii	"knobs\000"
 14453      7300
 14454              	.LASF200:
 14455 03ff 73797365 		.ascii	"sysexPointer\000"
 14455      78506F69 
 14455      6E746572 
 14455      00
 14456              	.LASF232:
 14457 040c 63757272 		.ascii	"currentVBUS\000"
 14457      656E7456 
 14457      42555300 
 14458              	.LASF81:
 14459 0418 73747269 		.ascii	"stringStartLoc\000"
 14459      6E675374 
 14459      6172744C 
 14459      6F6300
 14460              	.LASF2:
 14461 0427 7369676E 		.ascii	"signed char\000"
 14461      65642063 
 14461      68617200 
 14462              	.LASF16:
 14463 0433 75696E74 		.ascii	"uint8_t\000"
 14463      385F7400 
 14464              	.LASF31:
 14465 043b 776C456E 		.ascii	"wlEndAddr\000"
 14465      64416464 
 14465      7200
 14466              	.LASF141:
 14467 0445 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 14467      63616C6C 
 14467      6261636B 
 14467      4C6F6361 
 14467      6C4D6964 
 14468              	.LASF194:
 14469 0460 70726576 		.ascii	"prevMacroKnobValues\000"
 14469      4D616372 
 14469      6F4B6E6F 
 14469      6256616C 
 14469      75657300 
 14470              	.LASF74:
 14471 0474 73706973 		.ascii	"spis_1_ss\000"
 14471      5F315F73 
 14471      7300
 14472              	.LASF43:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 300


 14473 047e 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 14473      4D5F4545 
 14473      50524F4D 
 14473      5F424144 
 14473      5F444154 
 14474              	.LASF52:
 14475 0494 5F4F4C45 		.ascii	"_OLEDLine\000"
 14475      444C696E 
 14475      6500
 14476              	.LASF223:
 14477 049e 6D617043 		.ascii	"mapCount\000"
 14477      6F756E74 
 14477      00
 14478              	.LASF137:
 14479 04a7 74656D70 		.ascii	"tempIntVersion\000"
 14479      496E7456 
 14479      65727369 
 14479      6F6E00
 14480              	.LASF307:
 14481 04b6 70656461 		.ascii	"pedalRatios\000"
 14481      6C526174 
 14481      696F7300 
 14482              	.LASF3:
 14483 04c2 756E7369 		.ascii	"unsigned char\000"
 14483      676E6564 
 14483      20636861 
 14483      7200
 14484              	.LASF228:
 14485 04d0 76616C43 		.ascii	"valCheck\000"
 14485      6865636B 
 14485      00
 14486              	.LASF132:
 14487 04d9 76616C73 		.ascii	"valsStart\000"
 14487      53746172 
 14487      7400
 14488              	.LASF78:
 14489 04e3 636F7065 		.ascii	"coped\000"
 14489      6400
 14490              	.LASF246:
 14491 04e9 72783143 		.ascii	"rx1Channel\000"
 14491      68616E6E 
 14491      656C00
 14492              	.LASF80:
 14493 04f4 70656461 		.ascii	"pedalStartLoc\000"
 14493      6C537461 
 14493      72744C6F 
 14493      6300
 14494              	.LASF262:
 14495 0502 6E657744 		.ascii	"newDataFlag\000"
 14495      61746146 
 14495      6C616700 
 14496              	.LASF320:
 14497 050e 73747269 		.ascii	"stringOctave\000"
 14497      6E674F63 
 14497      74617665 
 14497      00
 14498              	.LASF111:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 301


 14499 051b 5553425F 		.ascii	"USB_service\000"
 14499      73657276 
 14499      69636500 
 14500              	.LASF208:
 14501 0527 73696E67 		.ascii	"singleParamToUpdateHigh\000"
 14501      6C655061 
 14501      72616D54 
 14501      6F557064 
 14501      61746548 
 14502              	.LASF60:
 14503 053f 76616C75 		.ascii	"value\000"
 14503      6500
 14504              	.LASF308:
 14505 0545 6C617374 		.ascii	"last_mux\000"
 14505      5F6D7578 
 14505      00
 14506              	.LASF123:
 14507 054e 70726573 		.ascii	"pressure\000"
 14507      73757265 
 14507      00
 14508              	.LASF172:
 14509 0557 70726573 		.ascii	"presetAlreadyDisplayed\000"
 14509      6574416C 
 14509      72656164 
 14509      79446973 
 14509      706C6179 
 14510              	.LASF55:
 14511 056e 6D616372 		.ascii	"macroNames\000"
 14511      6F4E616D 
 14511      657300
 14512              	.LASF257:
 14513 0579 70726576 		.ascii	"prevStrings\000"
 14513      53747269 
 14513      6E677300 
 14514              	.LASF26:
 14515 0585 63686172 		.ascii	"char\000"
 14515      00
 14516              	.LASF144:
 14517 058a 65657072 		.ascii	"eepromArray\000"
 14517      6F6D4172 
 14517      72617900 
 14518              	.LASF242:
 14519 0596 72617741 		.ascii	"rawAngle\000"
 14519      6E676C65 
 14519      00
 14520              	.LASF192:
 14521 059f 73656E64 		.ascii	"sendFirmwareUpdateRequest\000"
 14521      4669726D 
 14521      77617265 
 14521      55706461 
 14521      74655265 
 14522              	.LASF100:
 14523 05b9 446D6154 		.ascii	"DmaTxConfiguration\000"
 14523      78436F6E 
 14523      66696775 
 14523      72617469 
 14523      6F6E00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 302


 14524              	.LASF6:
 14525 05cc 5F5F7569 		.ascii	"__uint16_t\000"
 14525      6E743136 
 14525      5F7400
 14526              	.LASF110:
 14527 05d7 63686563 		.ascii	"checkUSB_Vbus\000"
 14527      6B555342 
 14527      5F566275 
 14527      7300
 14528              	.LASF316:
 14529 05e5 73747269 		.ascii	"stringMappedPositionsInRatios\000"
 14529      6E674D61 
 14529      70706564 
 14529      506F7369 
 14529      74696F6E 
 14530              	.LASF140:
 14531 0603 726F756E 		.ascii	"roundedIndex\000"
 14531      64656449 
 14531      6E646578 
 14531      00
 14532              	.LASF287:
 14533 0610 65657072 		.ascii	"eeprom_cnt\000"
 14533      6F6D5F63 
 14533      6E7400
 14534              	.LASF148:
 14535 061b 5553425F 		.ascii	"USB_midi_out_ep\000"
 14535      6D696469 
 14535      5F6F7574 
 14535      5F657000 
 14536              	.LASF109:
 14537 062b 4932435F 		.ascii	"I2C_reset\000"
 14537      72657365 
 14537      7400
 14538              	.LASF179:
 14539 0635 70656461 		.ascii	"pedal_inverted\000"
 14539      6C5F696E 
 14539      76657274 
 14539      656400
 14540              	.LASF46:
 14541 0644 75696E74 		.ascii	"uint\000"
 14541      00
 14542              	.LASF339:
 14543 0649 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 14543      496E6974 
 14543      69616C50 
 14543      6564616C 
 14543      5A65726F 
 14544              	.LASF122:
 14545 0667 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 14545      4D494449 
 14545      506F6C79 
 14545      4B657950 
 14545      72657373 
 14546              	.LASF136:
 14547 067f 73747269 		.ascii	"stringChange\000"
 14547      6E674368 
 14547      616E6765 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 303


 14547      00
 14548              	.LASF193:
 14549 068c 6B6E6F62 		.ascii	"knobFrozen\000"
 14549      46726F7A 
 14549      656E00
 14550              	.LASF93:
 14551 0697 636F6D70 		.ascii	"computerMIDIOffset\000"
 14551      75746572 
 14551      4D494449 
 14551      4F666673 
 14551      657400
 14552              	.LASF211:
 14553 06aa 73696E67 		.ascii	"singleParamValueLow\000"
 14553      6C655061 
 14553      72616D56 
 14553      616C7565 
 14553      4C6F7700 
 14554              	.LASF124:
 14555 06be 73656E64 		.ascii	"sendMIDIControlChange\000"
 14555      4D494449 
 14555      436F6E74 
 14555      726F6C43 
 14555      68616E67 
 14556              	.LASF261:
 14557 06d4 73706943 		.ascii	"spiCounter\000"
 14557      6F756E74 
 14557      657200
 14558              	.LASF182:
 14559 06df 7472616E 		.ascii	"transposeCents\000"
 14559      73706F73 
 14559      6543656E 
 14559      747300
 14560              	.LASF41:
 14561 06ee 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 14561      4D5F4545 
 14561      50524F4D 
 14561      5F424144 
 14561      5F504152 
 14562              	.LASF334:
 14563 0705 73797365 		.ascii	"sysexPointerMask\000"
 14563      78506F69 
 14563      6E746572 
 14563      4D61736B 
 14563      00
 14564              	.LASF152:
 14565 0716 4932435F 		.ascii	"I2C_1_initVar\000"
 14565      315F696E 
 14565      69745661 
 14565      7200
 14566              	.LASF158:
 14567 0724 63757272 		.ascii	"currentCopedent\000"
 14567      656E7443 
 14567      6F706564 
 14567      656E7400 
 14568              	.LASF54:
 14569 0734 70726573 		.ascii	"presetName\000"
 14569      65744E61 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 304


 14569      6D6500
 14570              	.LASF53:
 14571 073f 5F707265 		.ascii	"_presetArraySectionState\000"
 14571      73657441 
 14571      72726179 
 14571      53656374 
 14571      696F6E53 
 14572              	.LASF202:
 14573 0758 70617273 		.ascii	"parsingSysex\000"
 14573      696E6753 
 14573      79736578 
 14573      00
 14574              	.LASF239:
 14575 0765 72657475 		.ascii	"returnedData\000"
 14575      726E6564 
 14575      44617461 
 14575      00
 14576              	.LASF50:
 14577 0772 466F7572 		.ascii	"FourthLine\000"
 14577      74684C69 
 14577      6E6500
 14578              	.LASF303:
 14579 077d 736C6964 		.ascii	"sliderBugOn\000"
 14579      65724275 
 14579      674F6E00 
 14580              	.LASF173:
 14581 0789 77686963 		.ascii	"whichMacro\000"
 14581      684D6163 
 14581      726F00
 14582              	.LASF295:
 14583 0794 766F6C75 		.ascii	"volumePedal\000"
 14583      6D655065 
 14583      64616C00 
 14584              	.LASF254:
 14585 07a0 72784275 		.ascii	"rxBufferPluck\000"
 14585      66666572 
 14585      506C7563 
 14585      6B00
 14586              	.LASF311:
 14587 07ae 636F7065 		.ascii	"copedent\000"
 14587      64656E74 
 14587      00
 14588              	.LASF298:
 14589 07b7 70656461 		.ascii	"pedals8bit\000"
 14589      6C733862 
 14589      697400
 14590              	.LASF68:
 14591 07c2 756E7361 		.ascii	"unsafeFtom\000"
 14591      66654674 
 14591      6F6D00
 14592              	.LASF277:
 14593 07cd 70726576 		.ascii	"prevKnobs\000"
 14593      4B6E6F62 
 14593      7300
 14594              	.LASF273:
 14595 07d7 6D795370 		.ascii	"mySpiCounter\000"
 14595      69436F75 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 305


 14595      6E746572 
 14595      00
 14596              	.LASF218:
 14597 07e4 73797365 		.ascii	"sysexMessageInProgress\000"
 14597      784D6573 
 14597      73616765 
 14597      496E5072 
 14597      6F677265 
 14598              	.LASF331:
 14599 07fb 5350495F 		.ascii	"SPI_errors\000"
 14599      6572726F 
 14599      727300
 14600              	.LASF118:
 14601 0806 43434576 		.ascii	"CCEvent\000"
 14601      656E7400 
 14602              	.LASF317:
 14603 080e 73747269 		.ascii	"stringMappedPositionsInMIDI\000"
 14603      6E674D61 
 14603      70706564 
 14603      506F7369 
 14603      74696F6E 
 14604              	.LASF129:
 14605 082a 70617273 		.ascii	"parseSysex\000"
 14605      65537973 
 14605      657800
 14606              	.LASF337:
 14607 0835 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 14607      73657273 
 14607      5C4A6566 
 14607      66536E79 
 14607      6465725C 
 14608 0863 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 14608      355F656C 
 14608      65637472 
 14608      6F737465 
 14608      656C5F73 
 14609 0895 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 14609      5F50534F 
 14609      43335F35 
 14609      5F546865 
 14609      726D6973 
 14610              	.LASF271:
 14611 08b3 696E7075 		.ascii	"inputData\000"
 14611      74446174 
 14611      6100
 14612              	.LASF39:
 14613 08bd 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 14613      74635F65 
 14613      6570726F 
 14613      6D5F636F 
 14613      6E746578 
 14614              	.LASF11:
 14615 08d5 6C6F6E67 		.ascii	"long unsigned int\000"
 14615      20756E73 
 14615      69676E65 
 14615      6420696E 
 14615      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 306


 14616              	.LASF324:
 14617 08e7 70726573 		.ascii	"presetWhenMacroWriteStarted\000"
 14617      65745768 
 14617      656E4D61 
 14617      63726F57 
 14617      72697465 
 14618              	.LASF151:
 14619 0903 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 14619      4550524F 
 14619      4D5F656D 
 14619      5F456570 
 14619      726F6D53 
 14620              	.LASF286:
 14621 091e 65657072 		.ascii	"eepromReturnValue\000"
 14621      6F6D5265 
 14621      7475726E 
 14621      56616C75 
 14621      6500
 14622              	.LASF154:
 14623 0930 4465636F 		.ascii	"Decoder_1_Enabled\000"
 14623      6465725F 
 14623      315F456E 
 14623      61626C65 
 14623      6400
 14624              	.LASF86:
 14625 0942 74656D70 		.ascii	"tempInt\000"
 14625      496E7400 
 14626              	.LASF84:
 14627 094a 73746174 		.ascii	"status\000"
 14627      757300
 14628              	.LASF290:
 14629 0951 73656E64 		.ascii	"send_it\000"
 14629      5F697400 
 14630              	.LASF244:
 14631 0959 6D696469 		.ascii	"midiOverflow\000"
 14631      4F766572 
 14631      666C6F77 
 14631      00
 14632              	.LASF121:
 14633 0966 6368616E 		.ascii	"channel\000"
 14633      6E656C00 
 14634              	.LASF280:
 14635 096e 75376269 		.ascii	"u7bit_volumePedal\000"
 14635      745F766F 
 14635      6C756D65 
 14635      50656461 
 14635      6C00
 14636              	.LASF184:
 14637 0980 766F6C75 		.ascii	"volumeInt\000"
 14637      6D65496E 
 14637      7400
 14638              	.LASF102:
 14639 098a 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 14639      4D617374 
 14639      65725772 
 14639      69746542 
 14639      6C6F636B 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 307


 14640              	.LASF180:
 14641 09a2 616E676C 		.ascii	"angle\000"
 14641      6500
 14642              	.LASF230:
 14643 09a8 6E756D53 		.ascii	"numStrings\000"
 14643      7472696E 
 14643      677300
 14644              	.LASF318:
 14645 09b3 6261724D 		.ascii	"barMidiOuterStrings\000"
 14645      6964694F 
 14645      75746572 
 14645      53747269 
 14645      6E677300 
 14646              	.LASF44:
 14647 09c7 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 14647      4D5F4545 
 14647      50524F4D 
 14647      5F575249 
 14647      54455F46 
 14648              	.LASF63:
 14649 09df 6F737461 		.ascii	"ostart\000"
 14649      727400
 14650              	.LASF168:
 14651 09e6 63757272 		.ascii	"currentPresetSelection\000"
 14651      656E7450 
 14651      72657365 
 14651      7453656C 
 14651      65637469 
 14652              	.LASF323:
 14653 09fd 6F70656E 		.ascii	"openStringMIDI_Int\000"
 14653      53747269 
 14653      6E674D49 
 14653      44495F49 
 14653      6E7400
 14654              	.LASF62:
 14655 0a10 6973746F 		.ascii	"istop\000"
 14655      7000
 14656              	.LASF77:
 14657 0a16 70656461 		.ascii	"pedal_inverted_byte\000"
 14657      6C5F696E 
 14657      76657274 
 14657      65645F62 
 14657      79746500 
 14658              	.LASF147:
 14659 0a2a 5553425F 		.ascii	"USB_midiInBuffer\000"
 14659      6D696469 
 14659      496E4275 
 14659      66666572 
 14659      00
 14660              	.LASF335:
 14661 0a3b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 14661      43313120 
 14661      352E342E 
 14661      31203230 
 14661      31363036 
 14662 0a6e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 14662      20726576 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 308


 14662      6973696F 
 14662      6E203233 
 14662      37373135 
 14663 0aa1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 14663      66756E63 
 14663      74696F6E 
 14663      2D736563 
 14663      74696F6E 
 14664              	.LASF119:
 14665 0ac9 73656E64 		.ascii	"sendMIDINoteOn\000"
 14665      4D494449 
 14665      4E6F7465 
 14665      4F6E00
 14666              	.LASF309:
 14667 0ad8 6D61696E 		.ascii	"main_counter\000"
 14667      5F636F75 
 14667      6E746572 
 14667      00
 14668              	.LASF47:
 14669 0ae5 46697273 		.ascii	"FirstLine\000"
 14669      744C696E 
 14669      6500
 14670              	.LASF186:
 14671 0aef 6475616C 		.ascii	"dualSlider\000"
 14671      536C6964 
 14671      657200
 14672              	.LASF70:
 14673 0afa 72657374 		.ascii	"restartSystemCheck\000"
 14673      61727453 
 14673      79737465 
 14673      6D436865 
 14673      636B00
 14674              	.LASF235:
 14675 0b0d 5553425F 		.ascii	"USB_check_flag\000"
 14675      63686563 
 14675      6B5F666C 
 14675      616700
 14676              	.LASF216:
 14677 0b1c 6D657373 		.ascii	"messageArraySendCount\000"
 14677      61676541 
 14677      72726179 
 14677      53656E64 
 14677      436F756E 
 14678              	.LASF10:
 14679 0b32 5F5F7569 		.ascii	"__uint32_t\000"
 14679      6E743332 
 14679      5F7400
 14680              	.LASF12:
 14681 0b3d 6C6F6E67 		.ascii	"long long int\000"
 14681      206C6F6E 
 14681      6720696E 
 14681      7400
 14682              	.LASF188:
 14683 0b4b 73747269 		.ascii	"stringRepresentation\000"
 14683      6E675265 
 14683      70726573 
 14683      656E7461 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 309


 14683      74696F6E 
 14684              	.LASF248:
 14685 0b60 72783154 		.ascii	"rx1TD\000"
 14685      4400
 14686              	.LASF83:
 14687 0b66 74656D70 		.ascii	"tempIntLow\000"
 14687      496E744C 
 14687      6F7700
 14688              	.LASF131:
 14689 0b71 73746F70 		.ascii	"stoppingPoint\000"
 14689      70696E67 
 14689      506F696E 
 14689      7400
 14690              	.LASF37:
 14691 0b7f 626C6F63 		.ascii	"blockingWrite\000"
 14691      6B696E67 
 14691      57726974 
 14691      6500
 14692              	.LASF252:
 14693 0b8d 72783343 		.ascii	"rx3Channel\000"
 14693      68616E6E 
 14693      656C00
 14694              	.LASF25:
 14695 0b98 646F7562 		.ascii	"double\000"
 14695      6C6500
 14696              	.LASF336:
 14697 0b9f 6D61696E 		.ascii	"main.c\000"
 14697      2E6300
 14698              	.LASF328:
 14699 0ba6 70726576 		.ascii	"prevNotes\000"
 14699      4E6F7465 
 14699      7300
 14700              	.LASF112:
 14701 0bb0 6C6F6732 		.ascii	"log2f_approx\000"
 14701      665F6170 
 14701      70726F78 
 14701      00
 14702              	.LASF190:
 14703 0bbd 6D696469 		.ascii	"midiSendOn\000"
 14703      53656E64 
 14703      4F6E00
 14704              	.LASF210:
 14705 0bc8 73696E67 		.ascii	"singleParamValueHigh\000"
 14705      6C655061 
 14705      72616D56 
 14705      616C7565 
 14705      48696768 
 14706              	.LASF153:
 14707 0bdd 49544D5F 		.ascii	"ITM_RxBuffer\000"
 14707      52784275 
 14707      66666572 
 14707      00
 14708              	.LASF209:
 14709 0bea 73696E67 		.ascii	"singleParamToUpdateLow\000"
 14709      6C655061 
 14709      72616D54 
 14709      6F557064 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 310


 14709      6174654C 
 14710              	.LASF64:
 14711 0c01 6F73746F 		.ascii	"ostop\000"
 14711      7000
 14712              	.LASF107:
 14713 0c07 74696D65 		.ascii	"timeout\000"
 14713      6F757400 
 14714              	.LASF24:
 14715 0c0f 666C6F61 		.ascii	"float\000"
 14715      7400
 14716              	.LASF297:
 14717 0c15 70726576 		.ascii	"prev_processed_pedals\000"
 14717      5F70726F 
 14717      63657373 
 14717      65645F70 
 14717      6564616C 
 14718              	.LASF282:
 14719 0c2b 53504932 		.ascii	"SPI2started\000"
 14719      73746172 
 14719      74656400 
 14720              	.LASF267:
 14721 0c37 63757272 		.ascii	"currentPluckBuffer\000"
 14721      656E7450 
 14721      6C75636B 
 14721      42756666 
 14721      657200
 14722              	.LASF92:
 14723 0c4a 6261724D 		.ascii	"barMIDI\000"
 14723      49444900 
 14724              	.LASF127:
 14725 0c52 73656E64 		.ascii	"sendMIDIPitchBend\000"
 14725      4D494449 
 14725      50697463 
 14725      6842656E 
 14725      6400
 14726              	.LASF14:
 14727 0c64 756E7369 		.ascii	"unsigned int\000"
 14727      676E6564 
 14727      20696E74 
 14727      00
 14728              	.LASF314:
 14729 0c71 70656461 		.ascii	"pedal_cc_assignments\000"
 14729      6C5F6363 
 14729      5F617373 
 14729      69676E6D 
 14729      656E7473 
 14730              	.LASF201:
 14731 0c86 72656365 		.ascii	"receivingSysex\000"
 14731      6976696E 
 14731      67537973 
 14731      657800
 14732              	.LASF142:
 14733 0c95 6361626C 		.ascii	"cable\000"
 14733      6500
 14734              	.LASF279:
 14735 0c9b 70726576 		.ascii	"prevKnobs7bit\000"
 14735      4B6E6F62 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 311


 14735      73376269 
 14735      7400
 14736              	.LASF187:
 14737 0ca9 64656164 		.ascii	"deadZone\000"
 14737      5A6F6E65 
 14737      00
 14738              	.LASF71:
 14739 0cb2 56627573 		.ascii	"Vbus_function\000"
 14739      5F66756E 
 14739      6374696F 
 14739      6E00
 14740              	.LASF300:
 14741 0cc0 70726576 		.ascii	"prevPedals7bit\000"
 14741      50656461 
 14741      6C733762 
 14741      697400
 14742              	.LASF115:
 14743 0ccf 76656C6F 		.ascii	"velocity\000"
 14743      63697479 
 14743      00
 14744              	.LASF75:
 14745 0cd8 6C6F6164 		.ascii	"loadEEPROMdefaults\000"
 14745      45455052 
 14745      4F4D6465 
 14745      6661756C 
 14745      747300
 14746              	.LASF329:
 14747 0ceb 63686563 		.ascii	"checkStatus\000"
 14747      6B537461 
 14747      74757300 
 14748              	.LASF27:
 14749 0cf7 63797374 		.ascii	"cystatus\000"
 14749      61747573 
 14749      00
 14750              	.LASF278:
 14751 0d00 6B6E6F62 		.ascii	"knobs7bit\000"
 14751      73376269 
 14751      7400
 14752              	.LASF69:
 14753 0d0a 63616C63 		.ascii	"calculateStringRepDivider\000"
 14753      756C6174 
 14753      65537472 
 14753      696E6752 
 14753      65704469 
 14754              	.LASF114:
 14755 0d24 73747269 		.ascii	"string\000"
 14755      6E6700
 14756              	.LASF274:
 14757 0d2b 6F666673 		.ascii	"offsetErrorCount\000"
 14757      65744572 
 14757      726F7243 
 14757      6F756E74 
 14757      00
 14758              	.LASF302:
 14759 0d3c 70726F63 		.ascii	"processed_volumePedal\000"
 14759      65737365 
 14759      645F766F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 312


 14759      6C756D65 
 14759      50656461 
 14760              	.LASF177:
 14761 0d52 70656461 		.ascii	"pedals_low\000"
 14761      6C735F6C 
 14761      6F7700
 14762              	.LASF255:
 14763 0d5d 72784275 		.ascii	"rxBufferBar\000"
 14763      66666572 
 14763      42617200 
 14764              	.LASF250:
 14765 0d69 74784368 		.ascii	"txChannel\000"
 14765      616E6E65 
 14765      6C00
 14766              	.LASF296:
 14767 0d73 70726F63 		.ascii	"processed_pedals\000"
 14767      65737365 
 14767      645F7065 
 14767      64616C73 
 14767      00
 14768              	.LASF315:
 14769 0d84 6F70656E 		.ascii	"openStringFrequencies\000"
 14769      53747269 
 14769      6E674672 
 14769      65717565 
 14769      6E636965 
 14770              	.LASF240:
 14771 0d9a 70726576 		.ascii	"prevAngle\000"
 14771      416E676C 
 14771      6500
 14772              	.LASF263:
 14773 0da4 706C7563 		.ascii	"pluck_index\000"
 14773      6B5F696E 
 14773      64657800 
 14774              	.LASF29:
 14775 0db0 6C6F6E67 		.ascii	"long double\000"
 14775      20646F75 
 14775      626C6500 
 14776              	.LASF108:
 14777 0dbc 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 14777      4D617374 
 14777      65725265 
 14777      6164426C 
 14777      6F636B69 
 14778              	.LASF268:
 14779 0dd3 63757272 		.ascii	"currentBarBuffer\000"
 14779      656E7442 
 14779      61724275 
 14779      66666572 
 14779      00
 14780              	.LASF241:
 14781 0de4 4144435F 		.ascii	"ADC_values\000"
 14781      76616C75 
 14781      657300
 14782              	.LASF270:
 14783 0def 53504931 		.ascii	"SPI1ErrorCount\000"
 14783      4572726F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 313


 14783      72436F75 
 14783      6E7400
 14784              	.LASF243:
 14785 0dfe 6D696469 		.ascii	"midiSent\000"
 14785      53656E74 
 14785      00
 14786              	.LASF143:
 14787 0e07 6D696469 		.ascii	"midiMsg\000"
 14787      4D736700 
 14788              	.LASF0:
 14789 0e0f 5F5F696E 		.ascii	"__int8_t\000"
 14789      74385F74 
 14789      00
 14790              	.LASF157:
 14791 0e18 63757272 		.ascii	"currentNeck\000"
 14791      656E744E 
 14791      65636B00 
 14792              	.LASF164:
 14793 0e24 65646974 		.ascii	"editMode\000"
 14793      4D6F6465 
 14793      00
 14794              	.LASF13:
 14795 0e2d 6C6F6E67 		.ascii	"long long unsigned int\000"
 14795      206C6F6E 
 14795      6720756E 
 14795      7369676E 
 14795      65642069 
 14796              	.LASF18:
 14797 0e44 75696E74 		.ascii	"uint16_t\000"
 14797      31365F74 
 14797      00
 14798              	.LASF138:
 14799 0e4d 74656D70 		.ascii	"tempHigh\000"
 14799      48696768 
 14799      00
 14800              	.LASF229:
 14801 0e56 74657374 		.ascii	"testVal\000"
 14801      56616C00 
 14802              	.LASF90:
 14803 0e5e 70656461 		.ascii	"pedalsMIDI\000"
 14803      6C734D49 
 14803      444900
 14804              	.LASF249:
 14805 0e69 72783254 		.ascii	"rx2TD\000"
 14805      4400
 14806              	.LASF214:
 14807 0e6f 636F6E74 		.ascii	"controlSmoothing\000"
 14807      726F6C53 
 14807      6D6F6F74 
 14807      68696E67 
 14807      00
 14808              	.LASF338:
 14809 0e80 62726561 		.ascii	"breakFloat\000"
 14809      6B466C6F 
 14809      617400
 14810              	.LASF330:
 14811 0e8b 63686563 		.ascii	"checkBase\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 314


 14811      6B426173 
 14811      6500
 14812              	.LASF72:
 14813 0e95 73706973 		.ascii	"spis_2_ss\000"
 14813      5F325F73 
 14813      7300
 14814              	.LASF212:
 14815 0e9f 73656E64 		.ascii	"sendMappingChangeUpdate\000"
 14815      4D617070 
 14815      696E6743 
 14815      68616E67 
 14815      65557064 
 14816              	.LASF260:
 14817 0eb7 616D4865 		.ascii	"amHere\000"
 14817      726500
 14818              	.LASF285:
 14819 0ebe 61727261 		.ascii	"array\000"
 14819      7900
 14820              	.LASF96:
 14821 0ec4 7363616C 		.ascii	"scaledMIDI\000"
 14821      65644D49 
 14821      444900
 14822              	.LASF28:
 14823 0ecf 72656738 		.ascii	"reg8\000"
 14823      00
 14824              	.LASF205:
 14825 0ed4 636F7065 		.ascii	"copedentNumberToWrite\000"
 14825      64656E74 
 14825      4E756D62 
 14825      6572546F 
 14825      57726974 
 14826              	.LASF57:
 14827 0eea 6D617043 		.ascii	"mapCountNext\000"
 14827      6F756E74 
 14827      4E657874 
 14827      00
 14828              	.LASF265:
 14829 0ef7 73706943 		.ascii	"spiCounter2\000"
 14829      6F756E74 
 14829      65723200 
 14830              	.LASF116:
 14831 0f03 74656D70 		.ascii	"tempVel\000"
 14831      56656C00 
 14832              	.LASF231:
 14833 0f0b 75736241 		.ascii	"usbActivityCounter\000"
 14833      63746976 
 14833      69747943 
 14833      6F756E74 
 14833      657200
 14834              	.LASF181:
 14835 0f1e 7472616E 		.ascii	"transposeSemitones\000"
 14835      73706F73 
 14835      6553656D 
 14835      69746F6E 
 14835      657300
 14836              	.LASF227:
 14837 0f31 70617273 		.ascii	"parseThatMF\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 315


 14837      65546861 
 14837      744D4600 
 14838              	.LASF4:
 14839 0f3d 5F5F696E 		.ascii	"__int16_t\000"
 14839      7431365F 
 14839      7400
 14840              	.LASF56:
 14841 0f47 696E6974 		.ascii	"initialVals\000"
 14841      69616C56 
 14841      616C7300 
 14842              	.LASF234:
 14843 0f53 5553425F 		.ascii	"USB_active\000"
 14843      61637469 
 14843      766500
 14844              	.LASF174:
 14845 0f5e 66726574 		.ascii	"fretCalibrationMode\000"
 14845      43616C69 
 14845      62726174 
 14845      696F6E4D 
 14845      6F646500 
 14846              	.LASF207:
 14847 0f72 73656E64 		.ascii	"sendSingleParamUpdate\000"
 14847      53696E67 
 14847      6C655061 
 14847      72616D55 
 14847      70646174 
 14848              	.LASF199:
 14849 0f88 73797365 		.ascii	"sysexBuffer\000"
 14849      78427566 
 14849      66657200 
 14850              	.LASF219:
 14851 0f94 62756643 		.ascii	"bufCount\000"
 14851      6F756E74 
 14851      00
 14852              	.LASF269:
 14853 0f9d 706C7563 		.ascii	"pluckErrorCount\000"
 14853      6B457272 
 14853      6F72436F 
 14853      756E7400 
 14854              	.LASF85:
 14855 0fad 6D794B6E 		.ascii	"myKnob\000"
 14855      6F6200
 14856              	.LASF134:
 14857 0fb4 74656D70 		.ascii	"tempChar\000"
 14857      43686172 
 14857      00
 14858              	.LASF327:
 14859 0fbd 73747269 		.ascii	"stringRepDivider\000"
 14859      6E675265 
 14859      70446976 
 14859      69646572 
 14859      00
 14860              	.LASF167:
 14861 0fce 70617463 		.ascii	"patchNum\000"
 14861      684E756D 
 14861      00
 14862              	.LASF89:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 316


 14863 0fd7 6D794D61 		.ascii	"myMappedPos\000"
 14863      70706564 
 14863      506F7300 
 14864              	.LASF326:
 14865 0fe3 70656461 		.ascii	"pedals_float\000"
 14865      6C735F66 
 14865      6C6F6174 
 14865      00
 14866              	.LASF293:
 14867 0ff0 70656461 		.ascii	"pedals_lowWithDeadZone\000"
 14867      6C735F6C 
 14867      6F775769 
 14867      74684465 
 14867      61645A6F 
 14868              	.LASF283:
 14869 1007 6D616372 		.ascii	"macroKnobValues7bit\000"
 14869      6F4B6E6F 
 14869      6256616C 
 14869      75657337 
 14869      62697400 
 14870              	.LASF21:
 14871 101b 75696E74 		.ascii	"uint8\000"
 14871      3800
 14872              	.LASF67:
 14873 1021 64656164 		.ascii	"deadZoneFloat\000"
 14873      5A6F6E65 
 14873      466C6F61 
 14873      7400
 14874              	.LASF94:
 14875 102f 70697463 		.ascii	"pitchBendAmount\000"
 14875      6842656E 
 14875      64416D6F 
 14875      756E7400 
 14876              	.LASF185:
 14877 103f 70726576 		.ascii	"prevOctave\000"
 14877      4F637461 
 14877      766500
 14878              	.LASF5:
 14879 104a 73686F72 		.ascii	"short int\000"
 14879      7420696E 
 14879      7400
 14880              	.LASF217:
 14881 1054 6D657373 		.ascii	"messageArraySize\000"
 14881      61676541 
 14881      72726179 
 14881      53697A65 
 14881      00
 14882              	.LASF176:
 14883 1065 66726574 		.ascii	"fretMeasurements\000"
 14883      4D656173 
 14883      7572656D 
 14883      656E7473 
 14883      00
 14884              	.LASF105:
 14885 1076 6D6F6465 		.ascii	"mode\000"
 14885      00
 14886              	.LASF99:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 317


 14887 107b 62756666 		.ascii	"bufferPointer\000"
 14887      6572506F 
 14887      696E7465 
 14887      7200
 14888              	.LASF162:
 14889 1089 6E65636B 		.ascii	"neckByte\000"
 14889      42797465 
 14889      00
 14890              	.LASF322:
 14891 1092 73747269 		.ascii	"stringMIDI\000"
 14891      6E674D49 
 14891      444900
 14892              	.LASF91:
 14893 109d 6F70656E 		.ascii	"openStringMIDI\000"
 14893      53747269 
 14893      6E674D49 
 14893      444900
 14894              	.LASF17:
 14895 10ac 696E7431 		.ascii	"int16_t\000"
 14895      365F7400 
 14896              	.LASF135:
 14897 10b4 70656461 		.ascii	"pedalToWrite\000"
 14897      6C546F57 
 14897      72697465 
 14897      00
 14898              	.LASF325:
 14899 10c1 6D616372 		.ascii	"macroPageWhenMacroWriteStarted\000"
 14899      6F506167 
 14899      65576865 
 14899      6E4D6163 
 14899      726F5772 
 14900              	.LASF34:
 14901 10e0 65657072 		.ascii	"eepromSize\000"
 14901      6F6D5369 
 14901      7A6500
 14902              	.LASF264:
 14903 10eb 616D4865 		.ascii	"amHere2\000"
 14903      72653200 
 14904              	.LASF321:
 14905 10f3 73747269 		.ascii	"stringPitch\000"
 14905      6E675069 
 14905      74636800 
 14906              	.LASF35:
 14907 10ff 77656172 		.ascii	"wearLevelingFactor\000"
 14907      4C657665 
 14907      6C696E67 
 14907      46616374 
 14907      6F7200
 14908              	.LASF145:
 14909 1112 5553425F 		.ascii	"USB_midiInPointer\000"
 14909      6D696469 
 14909      496E506F 
 14909      696E7465 
 14909      7200
 14910              	.LASF332:
 14911 1124 74656D70 		.ascii	"tempMIDI\000"
 14911      4D494449 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 318


 14911      00
 14912              	.LASF103:
 14913 112d 69324341 		.ascii	"i2CAddr\000"
 14913      64647200 
 14914              	.LASF237:
 14915 1135 696E4275 		.ascii	"inBuffer\000"
 14915      66666572 
 14915      00
 14916              	.LASF259:
 14917 113e 6D617853 		.ascii	"maxStrings\000"
 14917      7472696E 
 14917      677300
 14918              	.LASF79:
 14919 1149 6C657474 		.ascii	"letter\000"
 14919      657200
 14920              	.LASF149:
 14921 1150 5553425F 		.ascii	"USB_midiOutBuffer\000"
 14921      6D696469 
 14921      4F757442 
 14921      75666665 
 14921      7200
 14922              	.LASF245:
 14923 1162 6D616372 		.ascii	"macroKnobValues\000"
 14923      6F4B6E6F 
 14923      6256616C 
 14923      75657300 
 14924              	.LASF292:
 14925 1172 6932635F 		.ascii	"i2c_skipped\000"
 14925      736B6970 
 14925      70656400 
 14926              	.LASF299:
 14927 117e 70656461 		.ascii	"pedals7bit\000"
 14927      6C733762 
 14927      697400
 14928              	.LASF281:
 14929 1189 70726576 		.ascii	"prev_7bit_volumePedal\000"
 14929      5F376269 
 14929      745F766F 
 14929      6C756D65 
 14929      50656461 
 14930              	.LASF236:
 14931 119f 6D617070 		.ascii	"mappingArray\000"
 14931      696E6741 
 14931      72726179 
 14931      00
 14932              	.LASF272:
 14933 11ac 73706941 		.ascii	"spiAdjusted\000"
 14933      646A7573 
 14933      74656400 
 14934              	.LASF247:
 14935 11b8 72783243 		.ascii	"rx2Channel\000"
 14935      68616E6E 
 14935      656C00
 14936              	.LASF175:
 14937 11c3 6C657665 		.ascii	"leverCalibrationMode\000"
 14937      7243616C 
 14937      69627261 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 319


 14937      74696F6E 
 14937      4D6F6465 
 14938              	.LASF146:
 14939 11d8 5553425F 		.ascii	"USB_midi_in_ep\000"
 14939      6D696469 
 14939      5F696E5F 
 14939      657000
 14940              	.LASF101:
 14941 11e7 446D6152 		.ascii	"DmaRxConfiguration\000"
 14941      78436F6E 
 14941      66696775 
 14941      72617469 
 14941      6F6E00
 14942              	.LASF20:
 14943 11fa 75696E74 		.ascii	"uint32_t\000"
 14943      33325F74 
 14943      00
 14944              	.LASF189:
 14945 1203 6F637461 		.ascii	"octaveAction\000"
 14945      76654163 
 14945      74696F6E 
 14945      00
 14946              	.LASF233:
 14947 1210 70726576 		.ascii	"prevVBUS\000"
 14947      56425553 
 14947      00
 14948              	.LASF253:
 14949 1219 72783354 		.ascii	"rx3TD\000"
 14949      4400
 14950              	.LASF73:
 14951 121f 63616C63 		.ascii	"calculatePedalRatios\000"
 14951      756C6174 
 14951      65506564 
 14951      616C5261 
 14951      74696F73 
 14952              	.LASF7:
 14953 1234 73686F72 		.ascii	"short unsigned int\000"
 14953      7420756E 
 14953      7369676E 
 14953      65642069 
 14953      6E7400
 14954              	.LASF195:
 14955 1247 70726573 		.ascii	"presetNumberToStore\000"
 14955      65744E75 
 14955      6D626572 
 14955      546F5374 
 14955      6F726500 
 14956              	.LASF213:
 14957 125b 70697463 		.ascii	"pitchSmoothing\000"
 14957      68536D6F 
 14957      6F746869 
 14957      6E6700
 14958              	.LASF58:
 14959 126a 6D617070 		.ascii	"mapping\000"
 14959      696E6700 
 14960              	.LASF117:
 14961 1272 6E6F7465 		.ascii	"noteToSend\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 320


 14961      546F5365 
 14961      6E6400
 14962              	.LASF251:
 14963 127d 74785444 		.ascii	"txTD\000"
 14963      00
 14964              	.LASF8:
 14965 1282 5F5F696E 		.ascii	"__int32_t\000"
 14965      7433325F 
 14965      7400
 14966              	.LASF258:
 14967 128c 70726576 		.ascii	"prevBar\000"
 14967      42617200 
 14968              	.LASF313:
 14969 1294 70656461 		.ascii	"pedals\000"
 14969      6C7300
 14970              	.LASF306:
 14971 129b 66726574 		.ascii	"fretScalingInRatios\000"
 14971      5363616C 
 14971      696E6749 
 14971      6E526174 
 14971      696F7300 
 14972              	.LASF82:
 14973 12af 74656D70 		.ascii	"tempIntHigh\000"
 14973      496E7448 
 14973      69676800 
 14974              	.LASF198:
 14975 12bb 77686963 		.ascii	"whichMacroPageIsActive\000"
 14975      684D6163 
 14975      726F5061 
 14975      67654973 
 14975      41637469 
 14976              	.LASF33:
 14977 12d2 6C617374 		.ascii	"lastWrRowAddr\000"
 14977      5772526F 
 14977      77416464 
 14977      7200
 14978              	.LASF183:
 14979 12e0 7472616E 		.ascii	"transposeFloat\000"
 14979      73706F73 
 14979      65466C6F 
 14979      617400
 14980              	.LASF319:
 14981 12ef 73747269 		.ascii	"stringFrequencies\000"
 14981      6E674672 
 14981      65717565 
 14981      6E636965 
 14981      7300
 14982              	.LASF22:
 14983 1301 75696E74 		.ascii	"uint16\000"
 14983      313600
 14984              	.LASF65:
 14985 1308 6D617044 		.ascii	"mapDualSlider\000"
 14985      75616C53 
 14985      6C696465 
 14985      7200
 14986              	.LASF238:
 14987 1316 6D794172 		.ascii	"myArray\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccpI5Evf.s 			page 321


 14987      72617900 
 14988              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
