ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sysexBuffer,2048,4
  20              		.global	sysexPointer
  21              		.bss
  22              		.align	2
  23              		.type	sysexPointer, %object
  24              		.size	sysexPointer, 4
  25              	sysexPointer:
  26 0000 00000000 		.space	4
  27              		.global	receivingSysex
  28              		.type	receivingSysex, %object
  29              		.size	receivingSysex, 1
  30              	receivingSysex:
  31 0004 00       		.space	1
  32              		.global	parsingSysex
  33              		.type	parsingSysex, %object
  34              		.size	parsingSysex, 1
  35              	parsingSysex:
  36 0005 00       		.space	1
  37              		.comm	presetArray,2048,4
  38              		.global	presetNumberToWrite
  39              		.type	presetNumberToWrite, %object
  40              		.size	presetNumberToWrite, 1
  41              	presetNumberToWrite:
  42 0006 00       		.space	1
  43              		.global	copedentNumberToWrite
  44              		.type	copedentNumberToWrite, %object
  45              		.size	copedentNumberToWrite, 1
  46              	copedentNumberToWrite:
  47 0007 00       		.space	1
  48              		.global	sendMessageEnd
  49              		.type	sendMessageEnd, %object
  50              		.size	sendMessageEnd, 1
  51              	sendMessageEnd:
  52 0008 00       		.space	1
  53              		.global	presetArraySection
  54              		.type	presetArraySection, %object
  55              		.size	presetArraySection, 1
  56              	presetArraySection:
  57 0009 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 2


  58              		.global	messageArraySendCount
  59              		.align	1
  60              		.type	messageArraySendCount, %object
  61              		.size	messageArraySendCount, 2
  62              	messageArraySendCount:
  63 000a 0000     		.space	2
  64              		.global	messageArraySize
  65              		.align	1
  66              		.type	messageArraySize, %object
  67              		.size	messageArraySize, 2
  68              	messageArraySize:
  69 000c 0000     		.space	2
  70              		.global	sysexMessageInProgress
  71              		.type	sysexMessageInProgress, %object
  72              		.size	sysexMessageInProgress, 1
  73              	sysexMessageInProgress:
  74 000e 00       		.space	1
  75              		.global	bufCount
  76              		.type	bufCount, %object
  77              		.size	bufCount, 1
  78              	bufCount:
  79 000f 00       		.space	1
  80              		.global	sendingMessage
  81              		.type	sendingMessage, %object
  82              		.size	sendingMessage, 1
  83              	sendingMessage:
  84 0010 00       		.space	1
  85              		.global	sendKnobs
  86              		.type	sendKnobs, %object
  87              		.size	sendKnobs, 1
  88              	sendKnobs:
  89 0011 00       		.space	1
  90              		.global	currentFloat
  91 0012 0000     		.align	2
  92              		.type	currentFloat, %object
  93              		.size	currentFloat, 4
  94              	currentFloat:
  95 0014 00000000 		.space	4
  96              		.global	mapCount
  97              		.align	2
  98              		.type	mapCount, %object
  99              		.size	mapCount, 4
 100              	mapCount:
 101 0018 00000000 		.space	4
 102              		.global	valsCount
 103              		.align	1
 104              		.type	valsCount, %object
 105              		.size	valsCount, 2
 106              	valsCount:
 107 001c 0000     		.space	2
 108              		.global	mapCountExpectation
 109              		.align	1
 110              		.type	mapCountExpectation, %object
 111              		.size	mapCountExpectation, 2
 112              	mapCountExpectation:
 113 001e 0000     		.space	2
 114              		.global	numMappings
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 3


 115              		.align	1
 116              		.type	numMappings, %object
 117              		.size	numMappings, 2
 118              	numMappings:
 119 0020 0000     		.space	2
 120              		.global	parseThatMF
 121              		.type	parseThatMF, %object
 122              		.size	parseThatMF, 1
 123              	parseThatMF:
 124 0022 00       		.space	1
 125              		.global	valCheck
 126 0023 00       		.align	2
 127              		.type	valCheck, %object
 128              		.size	valCheck, 4
 129              	valCheck:
 130 0024 00000000 		.space	4
 131              		.global	testVal
 132              		.align	2
 133              		.type	testVal, %object
 134              		.size	testVal, 4
 135              	testVal:
 136 0028 00000000 		.space	4
 137              		.global	numStrings
 138              		.data
 139              		.align	2
 140              		.type	numStrings, %object
 141              		.size	numStrings, 4
 142              	numStrings:
 143 0000 0A000000 		.word	10
 144              		.global	usbActivityCounter
 145              		.bss
 146              		.type	usbActivityCounter, %object
 147              		.size	usbActivityCounter, 1
 148              	usbActivityCounter:
 149 002c 00       		.space	1
 150              		.comm	midiMsg,4,4
 151              		.global	currentVBUS
 152              		.type	currentVBUS, %object
 153              		.size	currentVBUS, 1
 154              	currentVBUS:
 155 002d 00       		.space	1
 156              		.global	prevVBUS
 157              		.type	prevVBUS, %object
 158              		.size	prevVBUS, 1
 159              	prevVBUS:
 160 002e 00       		.space	1
 161              		.global	USB_active
 162              		.type	USB_active, %object
 163              		.size	USB_active, 1
 164              	USB_active:
 165 002f 00       		.space	1
 166              		.global	USB_check_flag
 167              		.type	USB_check_flag, %object
 168              		.size	USB_check_flag, 1
 169              	USB_check_flag:
 170 0030 00       		.space	1
 171              		.comm	inBuffer,32,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 4


 172              		.comm	myArray,32,4
 173              		.comm	myInputArray,2,4
 174              		.comm	linearPotValue32Bit,8,4
 175              		.global	i
 176              		.type	i, %object
 177              		.size	i, 1
 178              	i:
 179 0031 00       		.space	1
 180              		.global	counter
 181              		.type	counter, %object
 182              		.size	counter, 1
 183              	counter:
 184 0032 00       		.space	1
 185              		.comm	returnedData,32,4
 186              		.comm	temper,4,4
 187              		.comm	previousButtons,44,4
 188              		.global	octave
 189              		.data
 190              		.align	2
 191              		.type	octave, %object
 192              		.size	octave, 4
 193              	octave:
 194 0004 05000000 		.word	5
 195              		.comm	angle,20,4
 196              		.comm	prevAngle,20,4
 197              		.comm	ADC_values,8,4
 198              		.global	rawAngle
 199              		.bss
 200 0033 00       		.align	1
 201              		.type	rawAngle, %object
 202              		.size	rawAngle, 2
 203              	rawAngle:
 204 0034 0000     		.space	2
 205              		.global	midiSent
 206              		.align	1
 207              		.type	midiSent, %object
 208              		.size	midiSent, 2
 209              	midiSent:
 210 0036 0000     		.space	2
 211              		.global	midiOverflow
 212              		.align	1
 213              		.type	midiOverflow, %object
 214              		.size	midiOverflow, 2
 215              	midiOverflow:
 216 0038 0000     		.space	2
 217              		.comm	macroKnobValues,8,4
 218              		.global	currentCopedent
 219              		.type	currentCopedent, %object
 220              		.size	currentCopedent, 1
 221              	currentCopedent:
 222 003a 00       		.space	1
 223              		.global	necks
 224              		.data
 225              		.align	2
 226              		.type	necks, %object
 227              		.size	necks, 2
 228              	necks:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 5


 229 0008 00       		.byte	0
 230 0009 01       		.byte	1
 231              		.comm	rx1Channel,1,1
 232              		.comm	rx2Channel,1,32
 233              		.comm	rx1TD,2,4
 234              		.comm	rx2TD,2,32
 235              		.comm	txChannel,1,32
 236              		.comm	txTD,1,32
 237              		.comm	rx3Channel,1,32
 238              		.comm	rx3TD,1,32
 239              		.comm	rxBufferPluck,52,32
 240              		.comm	rxBufferBar,16,32
 241              		.comm	strings,24,4
 242              		.comm	prevStrings,24,4
 243              		.comm	bar,4,4
 244              		.comm	prevBar,4,4
 245              		.comm	maxStrings,24,4
 246              		.global	amHere
 247              		.bss
 248              		.type	amHere, %object
 249              		.size	amHere, 1
 250              	amHere:
 251 003b 00       		.space	1
 252              		.global	spiCounter
 253              		.type	spiCounter, %object
 254              		.size	spiCounter, 1
 255              	spiCounter:
 256 003c 00       		.space	1
 257              		.global	newDataFlag
 258              		.type	newDataFlag, %object
 259              		.size	newDataFlag, 1
 260              	newDataFlag:
 261 003d 00       		.space	1
 262              		.global	prevOctave
 263 003e 0000     		.align	2
 264              		.type	prevOctave, %object
 265              		.size	prevOctave, 4
 266              	prevOctave:
 267 0040 00000000 		.space	4
 268              		.global	pluck_index
 269              		.type	pluck_index, %object
 270              		.size	pluck_index, 1
 271              	pluck_index:
 272 0044 00       		.space	1
 273              		.global	amHere2
 274              		.type	amHere2, %object
 275              		.size	amHere2, 1
 276              	amHere2:
 277 0045 00       		.space	1
 278              		.global	spiCounter2
 279              		.type	spiCounter2, %object
 280              		.size	spiCounter2, 1
 281              	spiCounter2:
 282 0046 00       		.space	1
 283              		.global	newDataFlag2
 284              		.type	newDataFlag2, %object
 285              		.size	newDataFlag2, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 6


 286              	newDataFlag2:
 287 0047 00       		.space	1
 288              		.global	currentPluckBuffer
 289              		.type	currentPluckBuffer, %object
 290              		.size	currentPluckBuffer, 1
 291              	currentPluckBuffer:
 292 0048 00       		.space	1
 293              		.global	currentBarBuffer
 294              		.type	currentBarBuffer, %object
 295              		.size	currentBarBuffer, 1
 296              	currentBarBuffer:
 297 0049 00       		.space	1
 298              		.global	pluckErrorCount
 299              		.type	pluckErrorCount, %object
 300              		.size	pluckErrorCount, 1
 301              	pluckErrorCount:
 302 004a 00       		.space	1
 303              		.global	SPI1ErrorCount
 304 004b 00       		.align	1
 305              		.type	SPI1ErrorCount, %object
 306              		.size	SPI1ErrorCount, 2
 307              	SPI1ErrorCount:
 308 004c 0000     		.space	2
 309              		.global	inputData
 310              		.type	inputData, %object
 311              		.size	inputData, 1
 312              	inputData:
 313 004e 00       		.space	1
 314              		.section	.text.spis_1_ss,"ax",%progbits
 315              		.align	2
 316              		.global	spis_1_ss
 317              		.thumb
 318              		.thumb_func
 319              		.type	spis_1_ss, %function
 320              	spis_1_ss:
 321              	.LFB64:
 322              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** #define EEPROM_NECKS_OFFSET 0
  11:main.c        **** #define EEPROM_COPEDENT_OFFSET 2
  12:main.c        **** #define COPEDENT_SIZE_IN_BYTES 278 //including name bytes
  13:main.c        **** #define COPEDENT_SIZE_IN_FLOATS 132 // not including name bytes
  14:main.c        **** #define NAME_LENGTH_IN_BYTES 14
  15:main.c        **** #define EEPROM_CALIBRATION_OFFSET (EEPROM_NECKS_OFFSET + EEPROM_COPEDENT_OFFSET + (MAX_NUM_COPEDENT
  16:main.c        **** #define CALIBRATION_SIZE_IN_BYTES NUM_PEDALS * 4 //for each pedal, store 2 bytes for high and 2 byt
  17:main.c        **** #define MACRO_CLIPPED_LENGTH 8
  18:main.c        **** #define NAME_CLIPPED_LENGTH 11
  19:main.c        **** #define COPEDENT_NAME_CLIPPED_LENGTH 8
  20:main.c        **** #define myBufferSize 32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 7


  21:main.c        **** void parseSysex(void);
  22:main.c        **** 
  23:main.c        **** uint8_t sysexBuffer[2048];
  24:main.c        **** uint32_t sysexPointer = 0;
  25:main.c        **** uint8_t receivingSysex = 0;
  26:main.c        **** uint8_t parsingSysex = 0;
  27:main.c        **** volatile uint8_t presetArray[2048];
  28:main.c        **** uint8_t presetNumberToWrite = 0;
  29:main.c        **** uint8_t copedentNumberToWrite = 0;
  30:main.c        **** uint8_t sendMessageEnd = 0;
  31:main.c        **** enum presetArraySectionState
  32:main.c        **** {
  33:main.c        ****     presetName = 0,
  34:main.c        ****     macroNames = 1,
  35:main.c        ****     initialVals = 2,
  36:main.c        ****     mapCountNext = 3,
  37:main.c        ****     mapping = 4,
  38:main.c        ****     presetEnd = 5,
  39:main.c        **** };
  40:main.c        **** uint8_t presetArraySection = presetName;
  41:main.c        **** 
  42:main.c        **** uint16_t messageArraySendCount = 0;
  43:main.c        **** uint16_t messageArraySize = 0;
  44:main.c        **** 
  45:main.c        **** uint8_t sysexMessageInProgress = 0;
  46:main.c        **** 
  47:main.c        **** uint8_t bufCount = 0;
  48:main.c        **** volatile uint8_t sendingMessage = 0;
  49:main.c        **** volatile uint8_t sendKnobs = 0;
  50:main.c        **** uint32_t currentFloat = 0;
  51:main.c        **** uint32_t mapCount = 0;
  52:main.c        **** 
  53:main.c        **** uint16_t valsCount = 0;
  54:main.c        **** uint16_t mapCountExpectation = 0;
  55:main.c        **** uint16_t numMappings = 0;
  56:main.c        **** volatile uint8_t parseThatMF = 0;
  57:main.c        **** volatile float valCheck = 0.0f;
  58:main.c        **** volatile float testVal = 0.0f;
  59:main.c        **** 
  60:main.c        **** int numStrings = 10;
  61:main.c        **** /*
  62:main.c        **** #define TUNING_ARRAY_SIZE 258
  63:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  64:main.c        **** */
  65:main.c        **** 
  66:main.c        **** volatile uint8 usbActivityCounter = 0u;
  67:main.c        **** uint8 midiMsg[4];
  68:main.c        **** uint8_t currentVBUS = 0;
  69:main.c        **** uint8_t prevVBUS = 0;
  70:main.c        **** volatile uint8_t USB_active = 0;
  71:main.c        **** volatile uint8_t USB_check_flag = 0;
  72:main.c        **** 
  73:main.c        **** 
  74:main.c        **** uint8 inBuffer[myBufferSize];
  75:main.c        **** 
  76:main.c        **** uint8 myArray[myBufferSize];
  77:main.c        **** uint8 myInputArray[2];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 8


  78:main.c        **** int32_t linearPotValue32Bit[2];
  79:main.c        **** uint8_t i = 0;
  80:main.c        **** uint8_t counter = 0;
  81:main.c        **** uint8_t returnedData[myBufferSize];
  82:main.c        **** int32_t temper;
  83:main.c        **** int previousButtons[11];
  84:main.c        **** int octave = 5;
  85:main.c        **** uint16_t angle[10];
  86:main.c        **** uint16_t prevAngle[10];
  87:main.c        **** 
  88:main.c        **** uint16_t ADC_values[4];
  89:main.c        **** uint16_t rawAngle = 0;
  90:main.c        **** uint16_t midiSent = 0;
  91:main.c        **** uint16_t midiOverflow = 0;
  92:main.c        **** 
  93:main.c        **** uint8_t macroKnobValues[8];
  94:main.c        **** 
  95:main.c        **** uint8_t currentCopedent = 0;
  96:main.c        **** uint8_t necks[2] = {0,1};
  97:main.c        **** 
  98:main.c        **** void checkUSB_Vbus(void);
  99:main.c        **** void sendMIDIAllNotesOff(void);
 100:main.c        **** void sendMIDIPitchBend(int val, int channel);
 101:main.c        **** void firstCheckUSB_Vbus(void);
 102:main.c        **** void restartSystemCheck(void);
 103:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 104:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 105:main.c        **** CY_ISR_PROTO(SleepIsr_function);
 106:main.c        **** void noteEvent(int string);
 107:main.c        **** void I2C_reset(void);
 108:main.c        **** void CCEvent(int cc, int val);
 109:main.c        **** void DmaRxConfiguration(void);
 110:main.c        **** /* DMA Configuration for DMA_RX */
 111:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
 112:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
 113:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
 114:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
 115:main.c        **** 
 116:main.c        **** void DmaTxConfiguration(void);
 117:main.c        **** 
 118:main.c        **** /* DMA Configuration for DMA_TX */
 119:main.c        **** #define DMA_TX_BYTES_PER_BURST      (1u)
 120:main.c        **** #define DMA_TX_REQUEST_PER_BURST    (1u)
 121:main.c        **** #define DMA_TX_SRC_BASE             (CYDEV_SRAM_BASE)
 122:main.c        **** #define DMA_TX_DST_BASE             (CYDEV_PERIPH_BASE)
 123:main.c        **** 
 124:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
 125:main.c        **** #define BAR_BUFFER_SIZE                 (8u)
 126:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
 127:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 128:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 129:main.c        **** 
 130:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 131:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 132:main.c        **** 
 133:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 134:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 9


 135:main.c        **** 
 136:main.c        **** 
 137:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 138:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 139:main.c        **** 
 140:main.c        **** volatile uint16_t strings[12];
 141:main.c        **** volatile uint16_t prevStrings[12];
 142:main.c        **** volatile uint16_t bar[2];
 143:main.c        **** volatile uint16_t prevBar[2];
 144:main.c        **** volatile uint16_t maxStrings[12];
 145:main.c        **** volatile uint8_t amHere = 0;
 146:main.c        **** volatile uint8_t spiCounter = 0;
 147:main.c        **** volatile uint8_t newDataFlag = 0;
 148:main.c        **** int prevOctave = 0;
 149:main.c        **** uint8_t pluck_index = 0;
 150:main.c        **** volatile uint8_t amHere2 = 0;
 151:main.c        **** volatile uint8_t spiCounter2 = 0;
 152:main.c        **** volatile uint8_t newDataFlag2 = 0;
 153:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 154:main.c        **** volatile uint8_t currentBarBuffer = 0;
 155:main.c        **** volatile uint8_t pluckErrorCount = 0;
 156:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 157:main.c        **** 
 158:main.c        **** 
 159:main.c        **** 
 160:main.c        **** volatile uint8_t inputData = 0;
 161:main.c        **** 
 162:main.c        **** 
 163:main.c        **** union breakFloat {
 164:main.c        ****  float f;
 165:main.c        ****  uint8_t b[4];  
 166:main.c        ****  uint32_t u32;
 167:main.c        **** };
 168:main.c        **** 
 169:main.c        **** 
 170:main.c        **** CY_ISR(spis_1_ss)
 171:main.c        **** {
 323              		.loc 1 171 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327 0000 90B5     		push	{r4, r7, lr}
 328              		.cfi_def_cfa_offset 12
 329              		.cfi_offset 4, -12
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 83B0     		sub	sp, sp, #12
 333              		.cfi_def_cfa_offset 24
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 172:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 336              		.loc 1 172 0
 337 0006 554B     		ldr	r3, .L5
 338 0008 1B78     		ldrb	r3, [r3]
 339 000a DBB2     		uxtb	r3, r3
 340 000c 002B     		cmp	r3, #0
 341 000e 0CBF     		ite	eq
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 10


 342 0010 0123     		moveq	r3, #1
 343 0012 0023     		movne	r3, #0
 344 0014 DBB2     		uxtb	r3, r3
 345 0016 1A46     		mov	r2, r3
 346 0018 504B     		ldr	r3, .L5
 347 001a 1A70     		strb	r2, [r3]
 173:main.c        **** 
 174:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 348              		.loc 1 174 0
 349 001c 4F4B     		ldr	r3, .L5
 350 001e 1B78     		ldrb	r3, [r3]
 351 0020 DBB2     		uxtb	r3, r3
 352 0022 002B     		cmp	r3, #0
 353 0024 0CBF     		ite	eq
 354 0026 0123     		moveq	r3, #1
 355 0028 0023     		movne	r3, #0
 356 002a DBB2     		uxtb	r3, r3
 357 002c 1946     		mov	r1, r3
 358 002e 4C4A     		ldr	r2, .L5+4
 359 0030 1A23     		movs	r3, #26
 360 0032 03FB01F3 		mul	r3, r3, r1
 361 0036 1344     		add	r3, r3, r2
 362 0038 1B78     		ldrb	r3, [r3]
 363 003a DBB2     		uxtb	r3, r3
 364 003c FE2B     		cmp	r3, #254
 365 003e 4FD1     		bne	.L2
 366              		.loc 1 174 0 is_stmt 0 discriminator 1
 367 0040 464B     		ldr	r3, .L5
 368 0042 1B78     		ldrb	r3, [r3]
 369 0044 DBB2     		uxtb	r3, r3
 370 0046 002B     		cmp	r3, #0
 371 0048 0CBF     		ite	eq
 372 004a 0123     		moveq	r3, #1
 373 004c 0023     		movne	r3, #0
 374 004e DBB2     		uxtb	r3, r3
 375 0050 1946     		mov	r1, r3
 376 0052 434A     		ldr	r2, .L5+4
 377 0054 1A23     		movs	r3, #26
 378 0056 03FB01F3 		mul	r3, r3, r1
 379 005a 1344     		add	r3, r3, r2
 380 005c 1933     		adds	r3, r3, #25
 381 005e 1B78     		ldrb	r3, [r3]
 382 0060 DBB2     		uxtb	r3, r3
 383 0062 FD2B     		cmp	r3, #253
 384 0064 3CD1     		bne	.L2
 385              	.LBB2:
 175:main.c        ****     {
 176:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 386              		.loc 1 176 0 is_stmt 1
 387 0066 0023     		movs	r3, #0
 388 0068 7B60     		str	r3, [r7, #4]
 389 006a 34E0     		b	.L3
 390              	.L4:
 177:main.c        ****         {
 178:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 391              		.loc 1 178 0 discriminator 3
 392 006c 3B4B     		ldr	r3, .L5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 11


 393 006e 1B78     		ldrb	r3, [r3]
 394 0070 DBB2     		uxtb	r3, r3
 395 0072 002B     		cmp	r3, #0
 396 0074 0CBF     		ite	eq
 397 0076 0123     		moveq	r3, #1
 398 0078 0023     		movne	r3, #0
 399 007a DBB2     		uxtb	r3, r3
 400 007c 1846     		mov	r0, r3
 401 007e 7B68     		ldr	r3, [r7, #4]
 402 0080 5B00     		lsls	r3, r3, #1
 403 0082 0133     		adds	r3, r3, #1
 404 0084 3649     		ldr	r1, .L5+4
 405 0086 1A22     		movs	r2, #26
 406 0088 02FB00F2 		mul	r2, r2, r0
 407 008c 0A44     		add	r2, r2, r1
 408 008e 1344     		add	r3, r3, r2
 409 0090 1B78     		ldrb	r3, [r3]
 410 0092 DBB2     		uxtb	r3, r3
 411 0094 9BB2     		uxth	r3, r3
 412 0096 1B02     		lsls	r3, r3, #8
 413 0098 9AB2     		uxth	r2, r3
 414 009a 304B     		ldr	r3, .L5
 415 009c 1B78     		ldrb	r3, [r3]
 416 009e DBB2     		uxtb	r3, r3
 417 00a0 002B     		cmp	r3, #0
 418 00a2 0CBF     		ite	eq
 419 00a4 0123     		moveq	r3, #1
 420 00a6 0023     		movne	r3, #0
 421 00a8 DBB2     		uxtb	r3, r3
 422 00aa 1C46     		mov	r4, r3
 423 00ac 7B68     		ldr	r3, [r7, #4]
 424 00ae 0133     		adds	r3, r3, #1
 425 00b0 5B00     		lsls	r3, r3, #1
 426 00b2 2B48     		ldr	r0, .L5+4
 427 00b4 1A21     		movs	r1, #26
 428 00b6 01FB04F1 		mul	r1, r1, r4
 429 00ba 0144     		add	r1, r1, r0
 430 00bc 0B44     		add	r3, r3, r1
 431 00be 1B78     		ldrb	r3, [r3]
 432 00c0 DBB2     		uxtb	r3, r3
 433 00c2 9BB2     		uxth	r3, r3
 434 00c4 1344     		add	r3, r3, r2
 435 00c6 99B2     		uxth	r1, r3
 436 00c8 264A     		ldr	r2, .L5+8
 437 00ca 7B68     		ldr	r3, [r7, #4]
 438 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 176:main.c        ****         {
 439              		.loc 1 176 0 discriminator 3
 440 00d0 7B68     		ldr	r3, [r7, #4]
 441 00d2 0133     		adds	r3, r3, #1
 442 00d4 7B60     		str	r3, [r7, #4]
 443              	.L3:
 176:main.c        ****         {
 444              		.loc 1 176 0 is_stmt 0 discriminator 1
 445 00d6 244B     		ldr	r3, .L5+12
 446 00d8 1B68     		ldr	r3, [r3]
 447 00da 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 12


 448 00dc 9A42     		cmp	r2, r3
 449 00de C5DB     		blt	.L4
 450              	.L2:
 451              	.LBE2:
 179:main.c        ****         }
 180:main.c        ****     }
 181:main.c        ****     SPIS_1_ClearRxBuffer();
 452              		.loc 1 181 0 is_stmt 1
 453 00e0 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 182:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 454              		.loc 1 182 0
 455 00e4 214B     		ldr	r3, .L5+16
 456 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 457 00e8 1846     		mov	r0, r3
 458 00ea FFF7FEFF 		bl	CyDmaClearPendingDrq
 183:main.c        **** 
 184:main.c        ****     //set up the next DMA transaction
 185:main.c        **** 
 186:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 459              		.loc 1 186 0
 460 00ee 1B4B     		ldr	r3, .L5
 461 00f0 1B78     		ldrb	r3, [r3]
 462 00f2 DBB2     		uxtb	r3, r3
 463 00f4 1A46     		mov	r2, r3
 464 00f6 1E4B     		ldr	r3, .L5+20
 465 00f8 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 466 00fa 0223     		movs	r3, #2
 467 00fc FE22     		movs	r2, #254
 468 00fe 1A21     		movs	r1, #26
 469 0100 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 187:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 470              		.loc 1 187 0
 471 0104 154B     		ldr	r3, .L5
 472 0106 1B78     		ldrb	r3, [r3]
 473 0108 DBB2     		uxtb	r3, r3
 474 010a 1A46     		mov	r2, r3
 475 010c 184B     		ldr	r3, .L5+20
 476 010e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 477 0110 124B     		ldr	r3, .L5
 478 0112 1B78     		ldrb	r3, [r3]
 479 0114 DBB2     		uxtb	r3, r3
 480 0116 1A46     		mov	r2, r3
 481 0118 1A23     		movs	r3, #26
 482 011a 03FB02F3 		mul	r3, r3, r2
 483 011e 104A     		ldr	r2, .L5+4
 484 0120 1344     		add	r3, r3, r2
 485 0122 9BB2     		uxth	r3, r3
 486 0124 1A46     		mov	r2, r3
 487 0126 46F25451 		movw	r1, #25940
 488 012a FFF7FEFF 		bl	CyDmaTdSetAddress
 188:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 489              		.loc 1 188 0
 490 012e 0F4B     		ldr	r3, .L5+16
 491 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 492 0132 0A4B     		ldr	r3, .L5
 493 0134 1B78     		ldrb	r3, [r3]
 494 0136 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 13


 495 0138 1946     		mov	r1, r3
 496 013a 0D4B     		ldr	r3, .L5+20
 497 013c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 498 013e 1946     		mov	r1, r3
 499 0140 1046     		mov	r0, r2
 500 0142 FFF7FEFF 		bl	CyDmaChSetInitialTd
 189:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 501              		.loc 1 189 0
 502 0146 094B     		ldr	r3, .L5+16
 503 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 504 014a 0121     		movs	r1, #1
 505 014c 1846     		mov	r0, r3
 506 014e FFF7FEFF 		bl	CyDmaChEnable
 190:main.c        **** 
 191:main.c        **** }
 507              		.loc 1 191 0
 508 0152 00BF     		nop
 509 0154 0C37     		adds	r7, r7, #12
 510              		.cfi_def_cfa_offset 12
 511 0156 BD46     		mov	sp, r7
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 0158 90BD     		pop	{r4, r7, pc}
 515              	.L6:
 516 015a 00BF     		.align	2
 517              	.L5:
 518 015c 00000000 		.word	currentPluckBuffer
 519 0160 00000000 		.word	rxBufferPluck
 520 0164 00000000 		.word	strings
 521 0168 00000000 		.word	numStrings
 522 016c 00000000 		.word	rx1Channel
 523 0170 00000000 		.word	rx1TD
 524              		.cfi_endproc
 525              	.LFE64:
 526              		.size	spis_1_ss, .-spis_1_ss
 527              		.global	spiAdjusted
 528              		.bss
 529              		.type	spiAdjusted, %object
 530              		.size	spiAdjusted, 1
 531              	spiAdjusted:
 532 004f 00       		.space	1
 533              		.global	mySpiCounter
 534              		.type	mySpiCounter, %object
 535              		.size	mySpiCounter, 1
 536              	mySpiCounter:
 537 0050 00       		.space	1
 538              		.global	offsetErrorCount
 539 0051 00       		.align	1
 540              		.type	offsetErrorCount, %object
 541              		.size	offsetErrorCount, 2
 542              	offsetErrorCount:
 543 0052 0000     		.space	2
 544              		.global	SPI2errorflag
 545              		.type	SPI2errorflag, %object
 546              		.size	SPI2errorflag, 1
 547              	SPI2errorflag:
 548 0054 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 14


 549              		.global	bar_index
 550 0055 000000   		.align	2
 551              		.type	bar_index, %object
 552              		.size	bar_index, 4
 553              	bar_index:
 554 0058 00000000 		.space	4
 555              		.comm	knobs,4,4
 556              		.comm	prevKnobs,4,4
 557              		.global	SPI2started
 558              		.type	SPI2started, %object
 559              		.size	SPI2started, 1
 560              	SPI2started:
 561 005c 00       		.space	1
 562              		.global	whichMacro
 563              		.type	whichMacro, %object
 564              		.size	whichMacro, 1
 565              	whichMacro:
 566 005d 00       		.space	1
 567              		.section	.text.spis_2_ss,"ax",%progbits
 568              		.align	2
 569              		.global	spis_2_ss
 570              		.thumb
 571              		.thumb_func
 572              		.type	spis_2_ss, %function
 573              	spis_2_ss:
 574              	.LFB65:
 192:main.c        **** 
 193:main.c        **** 
 194:main.c        **** 
 195:main.c        **** uint8_t spiAdjusted = 0;
 196:main.c        **** uint8_t mySpiCounter = 0;
 197:main.c        **** volatile uint16_t offsetErrorCount = 0;
 198:main.c        **** volatile uint8_t SPI2errorflag = 0;
 199:main.c        **** volatile int bar_index = 0;
 200:main.c        **** uint8_t knobs[4];
 201:main.c        **** uint8_t prevKnobs[4];
 202:main.c        **** 
 203:main.c        **** volatile uint8_t SPI2started = 0;
 204:main.c        **** 
 205:main.c        **** uint8_t whichMacro = 0;
 206:main.c        **** 
 207:main.c        **** CY_ISR(spis_2_ss)
 208:main.c        **** {
 575              		.loc 1 208 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579 0000 80B5     		push	{r7, lr}
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0002 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 209:main.c        **** 
 210:main.c        ****     currentBarBuffer = !currentBarBuffer;
 585              		.loc 1 210 0
 586 0004 214B     		ldr	r3, .L8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 15


 587 0006 1B78     		ldrb	r3, [r3]
 588 0008 DBB2     		uxtb	r3, r3
 589 000a 002B     		cmp	r3, #0
 590 000c 0CBF     		ite	eq
 591 000e 0123     		moveq	r3, #1
 592 0010 0023     		movne	r3, #0
 593 0012 DBB2     		uxtb	r3, r3
 594 0014 1A46     		mov	r2, r3
 595 0016 1D4B     		ldr	r3, .L8
 596 0018 1A70     		strb	r2, [r3]
 211:main.c        ****     SPIS_2_ClearRxBuffer();
 597              		.loc 1 211 0
 598 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 212:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 599              		.loc 1 212 0
 600 001e 1C4B     		ldr	r3, .L8+4
 601 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 602 0022 1846     		mov	r0, r3
 603 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 213:main.c        **** 
 214:main.c        ****     //set up the next DMA transaction
 215:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 604              		.loc 1 215 0
 605 0028 184B     		ldr	r3, .L8
 606 002a 1B78     		ldrb	r3, [r3]
 607 002c DBB2     		uxtb	r3, r3
 608 002e 1A46     		mov	r2, r3
 609 0030 184B     		ldr	r3, .L8+8
 610 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 611 0034 0623     		movs	r3, #6
 612 0036 FE22     		movs	r2, #254
 613 0038 0821     		movs	r1, #8
 614 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 216:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 615              		.loc 1 216 0
 616 003e 134B     		ldr	r3, .L8
 617 0040 1B78     		ldrb	r3, [r3]
 618 0042 DBB2     		uxtb	r3, r3
 619 0044 1A46     		mov	r2, r3
 620 0046 134B     		ldr	r3, .L8+8
 621 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 622 004a 104B     		ldr	r3, .L8
 623 004c 1B78     		ldrb	r3, [r3]
 624 004e DBB2     		uxtb	r3, r3
 625 0050 DB00     		lsls	r3, r3, #3
 626 0052 114A     		ldr	r2, .L8+12
 627 0054 1344     		add	r3, r3, r2
 628 0056 9BB2     		uxth	r3, r3
 629 0058 1A46     		mov	r2, r3
 630 005a 46F25751 		movw	r1, #25943
 631 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 217:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 632              		.loc 1 217 0
 633 0062 0B4B     		ldr	r3, .L8+4
 634 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 635 0066 094B     		ldr	r3, .L8
 636 0068 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 16


 637 006a DBB2     		uxtb	r3, r3
 638 006c 1946     		mov	r1, r3
 639 006e 094B     		ldr	r3, .L8+8
 640 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 641 0072 1946     		mov	r1, r3
 642 0074 1046     		mov	r0, r2
 643 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 218:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 644              		.loc 1 218 0
 645 007a 054B     		ldr	r3, .L8+4
 646 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 647 007e 0121     		movs	r1, #1
 648 0080 1846     		mov	r0, r3
 649 0082 FFF7FEFF 		bl	CyDmaChEnable
 219:main.c        **** }
 650              		.loc 1 219 0
 651 0086 00BF     		nop
 652 0088 80BD     		pop	{r7, pc}
 653              	.L9:
 654 008a 00BF     		.align	2
 655              	.L8:
 656 008c 00000000 		.word	currentBarBuffer
 657 0090 00000000 		.word	rx2Channel
 658 0094 00000000 		.word	rx2TD
 659 0098 00000000 		.word	rxBufferBar
 660              		.cfi_endproc
 661              	.LFE65:
 662              		.size	spis_2_ss, .-spis_2_ss
 663              		.bss
 664 005e 0000     		.align	2
 665              	eepromArray:
 666 0060 0000     		.space	2
 667              		.global	array
 668 0062 0000     		.align	2
 669              		.type	array, %object
 670              		.size	array, 2
 671              	array:
 672 0064 0000     		.space	2
 673              		.comm	eepromReturnValue,1,1
 674              		.global	Em_EEPROM_em_EepromStorage
 675              		.section	.rodata
 676              		.align	8
 677              		.type	Em_EEPROM_em_EepromStorage, %object
 678              		.size	Em_EEPROM_em_EepromStorage, 1024
 679              	Em_EEPROM_em_EepromStorage:
 680 0000 00000000 		.space	1024
 680      00000000 
 680      00000000 
 680      00000000 
 680      00000000 
 681              		.comm	eeprom_cnt,1,1
 682              		.comm	status,4,4
 683              		.comm	ptr,4,4
 684              		.global	barCount
 685              		.bss
 686 0066 0000     		.align	2
 687              		.type	barCount, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 17


 688              		.size	barCount, 4
 689              	barCount:
 690 0068 00000000 		.space	4
 691              		.section	.text.Vbus_function,"ax",%progbits
 692              		.align	2
 693              		.global	Vbus_function
 694              		.thumb
 695              		.thumb_func
 696              		.type	Vbus_function, %function
 697              	Vbus_function:
 698              	.LFB66:
 220:main.c        **** 
 221:main.c        **** 
 222:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 223:main.c        ****                                             
 224:main.c        ****     uint8 array[] ={ 0, 0 };
 225:main.c        ****                                 
 226:main.c        ****     /*Return status for EEPROM and UART*/ 
 227:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 228:main.c        **** 
 229:main.c        **** 
 230:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 231:main.c        **** #if defined (__ICCARM__)
 232:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 233:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 234:main.c        **** #else
 235:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 236:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 237:main.c        **** #endif /* defined (__ICCARM__) */
 238:main.c        **** 
 239:main.c        ****     uint8 eeprom_cnt;
 240:main.c        ****     cystatus status;
 241:main.c        ****     volatile const uint8 * ptr;
 242:main.c        **** volatile int barCount = 0;
 243:main.c        **** 
 244:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 245:main.c        ****     
 246:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 247:main.c        **** 
 248:main.c        **** CY_ISR(Vbus_function)
 249:main.c        **** {
 699              		.loc 1 249 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 250:main.c        ****     //plug or unplug event
 251:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 252:main.c        ****     //otherwise, restart
 253:main.c        ****     my_Vbus_ISR_ClearPending();
 709              		.loc 1 253 0
 710 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 18


 254:main.c        ****     vBusPin_ClearInterrupt();
 711              		.loc 1 254 0
 712 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 255:main.c        ****     restartSystemCheck();
 713              		.loc 1 255 0
 714 000c FFF7FEFF 		bl	restartSystemCheck
 256:main.c        **** 
 257:main.c        **** }
 715              		.loc 1 257 0
 716 0010 00BF     		nop
 717 0012 80BD     		pop	{r7, pc}
 718              		.cfi_endproc
 719              	.LFE66:
 720              		.size	Vbus_function, .-Vbus_function
 721              		.section	.text.restartSystemCheck,"ax",%progbits
 722              		.align	2
 723              		.global	restartSystemCheck
 724              		.thumb
 725              		.thumb_func
 726              		.type	restartSystemCheck, %function
 727              	restartSystemCheck:
 728              	.LFB67:
 258:main.c        **** 
 259:main.c        **** void restartSystemCheck()
 260:main.c        **** {
 729              		.loc 1 260 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733 0000 80B5     		push	{r7, lr}
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 00AF     		add	r7, sp, #0
 738              		.cfi_def_cfa_register 7
 261:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 739              		.loc 1 261 0
 740 0004 184B     		ldr	r3, .L15
 741 0006 0222     		movs	r2, #2
 742 0008 1849     		ldr	r1, .L15+4
 743 000a 0020     		movs	r0, #0
 744 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 745 0010 0346     		mov	r3, r0
 746 0012 1A46     		mov	r2, r3
 747 0014 164B     		ldr	r3, .L15+8
 748 0016 1A70     		strb	r2, [r3]
 262:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 263:main.c        ****     if (USB_VBusPresent() == 1)
 749              		.loc 1 263 0
 750 0018 FFF7FEFF 		bl	USB_VBusPresent
 751 001c 0346     		mov	r3, r0
 752 001e 012B     		cmp	r3, #1
 753 0020 20D1     		bne	.L14
 264:main.c        ****     {
 265:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 754              		.loc 1 265 0
 755 0022 124B     		ldr	r3, .L15+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 19


 756 0024 1B78     		ldrb	r3, [r3]
 757 0026 DBB2     		uxtb	r3, r3
 758 0028 012B     		cmp	r3, #1
 759 002a 0CD1     		bne	.L13
 266:main.c        ****         {
 267:main.c        ****             //a flag says we just restarted
 268:main.c        ****             //write a zero so it knows next time that it's OK to restart
 269:main.c        ****             array[0] = 0;
 760              		.loc 1 269 0
 761 002c 114B     		ldr	r3, .L15+12
 762 002e 0022     		movs	r2, #0
 763 0030 1A70     		strb	r2, [r3]
 270:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 764              		.loc 1 270 0
 765 0032 0D4B     		ldr	r3, .L15
 766 0034 0222     		movs	r2, #2
 767 0036 0F49     		ldr	r1, .L15+12
 768 0038 0020     		movs	r0, #0
 769 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 271:main.c        ****             USB_check_flag = 1;
 770              		.loc 1 271 0
 771 003e 0E4B     		ldr	r3, .L15+16
 772 0040 0122     		movs	r2, #1
 773 0042 1A70     		strb	r2, [r3]
 272:main.c        ****         }
 273:main.c        ****         else
 274:main.c        ****         {
 275:main.c        ****            //otherwise, we need to restart
 276:main.c        ****            array[0] = 1;
 277:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 278:main.c        ****             USB_Stop();
 279:main.c        ****             I2C_1_Stop();
 280:main.c        ****             CySoftwareReset();
 281:main.c        ****         }
 282:main.c        ****     }
 283:main.c        **** }
 774              		.loc 1 283 0
 775 0044 0EE0     		b	.L14
 776              	.L13:
 276:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 777              		.loc 1 276 0
 778 0046 0B4B     		ldr	r3, .L15+12
 779 0048 0122     		movs	r2, #1
 780 004a 1A70     		strb	r2, [r3]
 277:main.c        ****             USB_Stop();
 781              		.loc 1 277 0
 782 004c 064B     		ldr	r3, .L15
 783 004e 0222     		movs	r2, #2
 784 0050 0849     		ldr	r1, .L15+12
 785 0052 0020     		movs	r0, #0
 786 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 278:main.c        ****             I2C_1_Stop();
 787              		.loc 1 278 0
 788 0058 FFF7FEFF 		bl	USB_Stop
 279:main.c        ****             CySoftwareReset();
 789              		.loc 1 279 0
 790 005c FFF7FEFF 		bl	I2C_1_Stop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 20


 280:main.c        ****         }
 791              		.loc 1 280 0
 792 0060 FFF7FEFF 		bl	CySoftwareReset
 793              	.L14:
 794              		.loc 1 283 0
 795 0064 00BF     		nop
 796 0066 80BD     		pop	{r7, pc}
 797              	.L16:
 798              		.align	2
 799              	.L15:
 800 0068 00000000 		.word	Em_EEPROM_context
 801 006c 60000000 		.word	eepromArray
 802 0070 00000000 		.word	eepromReturnValue
 803 0074 00000000 		.word	array
 804 0078 00000000 		.word	USB_check_flag
 805              		.cfi_endproc
 806              	.LFE67:
 807              		.size	restartSystemCheck, .-restartSystemCheck
 808              		.global	__aeabi_fcmpgt
 809              		.global	__aeabi_fcmplt
 810              		.section	.text.LEAF_clip,"ax",%progbits
 811              		.align	2
 812              		.global	LEAF_clip
 813              		.thumb
 814              		.thumb_func
 815              		.type	LEAF_clip, %function
 816              	LEAF_clip:
 817              	.LFB68:
 284:main.c        ****     
 285:main.c        **** #define INV_440 0.0022727272727273f
 286:main.c        **** 
 287:main.c        **** float   LEAF_clip(float min, float val, float max)
 288:main.c        **** {
 818              		.loc 1 288 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 24
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 86B0     		sub	sp, sp, #24
 827              		.cfi_def_cfa_offset 32
 828 0004 00AF     		add	r7, sp, #0
 829              		.cfi_def_cfa_register 7
 830 0006 F860     		str	r0, [r7, #12]	@ float
 831 0008 B960     		str	r1, [r7, #8]	@ float
 832 000a 7A60     		str	r2, [r7, #4]	@ float
 289:main.c        ****     float tempmin = min;
 833              		.loc 1 289 0
 834 000c FB68     		ldr	r3, [r7, #12]	@ float
 835 000e 7B61     		str	r3, [r7, #20]	@ float
 290:main.c        ****     float tempmax = max;
 836              		.loc 1 290 0
 837 0010 7B68     		ldr	r3, [r7, #4]	@ float
 838 0012 3B61     		str	r3, [r7, #16]	@ float
 291:main.c        ****     if (min > max)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 21


 839              		.loc 1 291 0
 840 0014 7968     		ldr	r1, [r7, #4]	@ float
 841 0016 F868     		ldr	r0, [r7, #12]	@ float
 842 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 843 001c 0346     		mov	r3, r0
 844 001e 002B     		cmp	r3, #0
 845 0020 03D0     		beq	.L18
 292:main.c        ****     {
 293:main.c        ****         tempmin = max;
 846              		.loc 1 293 0
 847 0022 7B68     		ldr	r3, [r7, #4]	@ float
 848 0024 7B61     		str	r3, [r7, #20]	@ float
 294:main.c        ****         tempmax = min;
 849              		.loc 1 294 0
 850 0026 FB68     		ldr	r3, [r7, #12]	@ float
 851 0028 3B61     		str	r3, [r7, #16]	@ float
 852              	.L18:
 295:main.c        ****     }
 296:main.c        ****     if (val < tempmin)
 853              		.loc 1 296 0
 854 002a 7969     		ldr	r1, [r7, #20]	@ float
 855 002c B868     		ldr	r0, [r7, #8]	@ float
 856 002e FFF7FEFF 		bl	__aeabi_fcmplt
 857 0032 0346     		mov	r3, r0
 858 0034 002B     		cmp	r3, #0
 859 0036 01D0     		beq	.L28
 297:main.c        ****     {
 298:main.c        ****         return tempmin;
 860              		.loc 1 298 0
 861 0038 7B69     		ldr	r3, [r7, #20]	@ float
 862 003a 09E0     		b	.L22
 863              	.L28:
 299:main.c        ****     }
 300:main.c        ****     else if (val > tempmax)
 864              		.loc 1 300 0
 865 003c 3969     		ldr	r1, [r7, #16]	@ float
 866 003e B868     		ldr	r0, [r7, #8]	@ float
 867 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 868 0044 0346     		mov	r3, r0
 869 0046 002B     		cmp	r3, #0
 870 0048 01D0     		beq	.L29
 301:main.c        ****     {
 302:main.c        ****         return tempmax;
 871              		.loc 1 302 0
 872 004a 3B69     		ldr	r3, [r7, #16]	@ float
 873 004c 00E0     		b	.L22
 874              	.L29:
 303:main.c        ****     }
 304:main.c        ****     else
 305:main.c        ****     {
 306:main.c        ****         return val;
 875              		.loc 1 306 0
 876 004e BB68     		ldr	r3, [r7, #8]	@ float
 877              	.L22:
 307:main.c        ****     }
 308:main.c        **** }
 878              		.loc 1 308 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 22


 879 0050 1846     		mov	r0, r3
 880 0052 1837     		adds	r7, r7, #24
 881              		.cfi_def_cfa_offset 8
 882 0054 BD46     		mov	sp, r7
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed
 885 0056 80BD     		pop	{r7, pc}
 886              		.cfi_endproc
 887              	.LFE68:
 888              		.size	LEAF_clip, .-LEAF_clip
 889              		.global	__aeabi_fcmple
 890              		.global	__aeabi_fmul
 891              		.section	.text.mtof,"ax",%progbits
 892              		.align	2
 893              		.global	mtof
 894              		.thumb
 895              		.thumb_func
 896              		.type	mtof, %function
 897              	mtof:
 898              	.LFB69:
 309:main.c        **** float mtof(float f)
 310:main.c        **** {
 899              		.loc 1 310 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 8
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 80B5     		push	{r7, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 82B0     		sub	sp, sp, #8
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]	@ float
 311:main.c        ****     if (f <= -1500.0f) return(0);
 912              		.loc 1 311 0
 913 0008 1349     		ldr	r1, .L40
 914 000a 7868     		ldr	r0, [r7, #4]	@ float
 915 000c FFF7FEFF 		bl	__aeabi_fcmple
 916 0010 0346     		mov	r3, r0
 917 0012 002B     		cmp	r3, #0
 918 0014 02D0     		beq	.L38
 919              		.loc 1 311 0 is_stmt 0 discriminator 1
 920 0016 4FF00003 		mov	r3, #0
 921 001a 19E0     		b	.L33
 922              	.L38:
 312:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 923              		.loc 1 312 0 is_stmt 1
 924 001c 0F49     		ldr	r1, .L40+4
 925 001e 7868     		ldr	r0, [r7, #4]	@ float
 926 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 927 0024 0346     		mov	r3, r0
 928 0026 002B     		cmp	r3, #0
 929 0028 04D0     		beq	.L39
 930              		.loc 1 312 0 is_stmt 0 discriminator 1
 931 002a 0C48     		ldr	r0, .L40+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 23


 932 002c FFF7FEFF 		bl	mtof
 933 0030 0346     		mov	r3, r0
 934 0032 0DE0     		b	.L33
 935              	.L39:
 313:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 936              		.loc 1 313 0 is_stmt 1
 937 0034 0A49     		ldr	r1, .L40+8
 938 0036 7868     		ldr	r0, [r7, #4]	@ float
 939 0038 FFF7FEFF 		bl	__aeabi_fmul
 940 003c 0346     		mov	r3, r0
 941 003e 1846     		mov	r0, r3
 942 0040 FFF7FEFF 		bl	expf
 943 0044 0346     		mov	r3, r0
 944 0046 0749     		ldr	r1, .L40+12
 945 0048 1846     		mov	r0, r3
 946 004a FFF7FEFF 		bl	__aeabi_fmul
 947 004e 0346     		mov	r3, r0
 948              	.L33:
 314:main.c        **** }
 949              		.loc 1 314 0
 950 0050 1846     		mov	r0, r3
 951 0052 0837     		adds	r7, r7, #8
 952              		.cfi_def_cfa_offset 8
 953 0054 BD46     		mov	sp, r7
 954              		.cfi_def_cfa_register 13
 955              		@ sp needed
 956 0056 80BD     		pop	{r7, pc}
 957              	.L41:
 958              		.align	2
 959              	.L40:
 960 0058 0080BBC4 		.word	-994344960
 961 005c 0060BB44 		.word	1153130496
 962 0060 20986C3D 		.word	1030527008
 963 0064 13D00241 		.word	1090703379
 964              		.cfi_endproc
 965              	.LFE69:
 966              		.size	mtof, .-mtof
 967              		.section	.text.ftom,"ax",%progbits
 968              		.align	2
 969              		.global	ftom
 970              		.thumb
 971              		.thumb_func
 972              		.type	ftom, %function
 973              	ftom:
 974              	.LFB70:
 315:main.c        **** 
 316:main.c        **** float ftom(float f)
 317:main.c        **** {
 975              		.loc 1 317 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 8
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979 0000 80B5     		push	{r7, lr}
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 24


 984              		.cfi_def_cfa_offset 16
 985 0004 00AF     		add	r7, sp, #0
 986              		.cfi_def_cfa_register 7
 987 0006 7860     		str	r0, [r7, #4]	@ float
 318:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 988              		.loc 1 318 0
 989 0008 4FF00001 		mov	r1, #0
 990 000c 7868     		ldr	r0, [r7, #4]	@ float
 991 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 992 0012 0346     		mov	r3, r0
 993 0014 002B     		cmp	r3, #0
 994 0016 0ED0     		beq	.L48
 995              		.loc 1 318 0 is_stmt 0 discriminator 1
 996 0018 0949     		ldr	r1, .L49
 997 001a 7868     		ldr	r0, [r7, #4]	@ float
 998 001c FFF7FEFF 		bl	__aeabi_fmul
 999 0020 0346     		mov	r3, r0
 1000 0022 1846     		mov	r0, r3
 1001 0024 FFF7FEFF 		bl	logf
 1002 0028 0346     		mov	r3, r0
 1003 002a 0649     		ldr	r1, .L49+4
 1004 002c 1846     		mov	r0, r3
 1005 002e FFF7FEFF 		bl	__aeabi_fmul
 1006 0032 0346     		mov	r3, r0
 1007 0034 00E0     		b	.L46
 1008              	.L48:
 1009              		.loc 1 318 0 discriminator 2
 1010 0036 044B     		ldr	r3, .L49+8
 1011              	.L46:
 319:main.c        **** }
 1012              		.loc 1 319 0 is_stmt 1 discriminator 5
 1013 0038 1846     		mov	r0, r3
 1014 003a 0837     		adds	r7, r7, #8
 1015              		.cfi_def_cfa_offset 8
 1016 003c BD46     		mov	sp, r7
 1017              		.cfi_def_cfa_register 13
 1018              		@ sp needed
 1019 003e 80BD     		pop	{r7, pc}
 1020              	.L50:
 1021              		.align	2
 1022              	.L49:
 1023 0040 D27EFA3D 		.word	1039826642
 1024 0044 AC7F8A41 		.word	1099595692
 1025 0048 0080BBC4 		.word	-994344960
 1026              		.cfi_endproc
 1027              	.LFE70:
 1028              		.size	ftom, .-ftom
 1029              		.global	__aeabi_fsub
 1030              		.global	__aeabi_fadd
 1031              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
 1032              		.align	2
 1033              		.global	LEAF_interpolation_linear
 1034              		.thumb
 1035              		.thumb_func
 1036              		.type	LEAF_interpolation_linear, %function
 1037              	LEAF_interpolation_linear:
 1038              	.LFB71:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 25


 320:main.c        **** 
 321:main.c        **** // alpha, [0.0, 1.0]
 322:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 323:main.c        **** {
 1039              		.loc 1 323 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 24
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 86B0     		sub	sp, sp, #24
 1048              		.cfi_def_cfa_offset 32
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 F860     		str	r0, [r7, #12]	@ float
 1052 0008 B960     		str	r1, [r7, #8]	@ float
 1053 000a 7A60     		str	r2, [r7, #4]	@ float
 324:main.c        ****     float omAlpha = 1.0f - alpha;
 1054              		.loc 1 324 0
 1055 000c 7968     		ldr	r1, [r7, #4]	@ float
 1056 000e 4FF07E50 		mov	r0, #1065353216
 1057 0012 FFF7FEFF 		bl	__aeabi_fsub
 1058 0016 0346     		mov	r3, r0
 1059 0018 7B61     		str	r3, [r7, #20]	@ float
 325:main.c        ****     
 326:main.c        ****     // First 1/2 of interpolation
 327:main.c        ****     float out = A * omAlpha;
 1060              		.loc 1 327 0
 1061 001a 7969     		ldr	r1, [r7, #20]	@ float
 1062 001c F868     		ldr	r0, [r7, #12]	@ float
 1063 001e FFF7FEFF 		bl	__aeabi_fmul
 1064 0022 0346     		mov	r3, r0
 1065 0024 3B61     		str	r3, [r7, #16]	@ float
 328:main.c        ****     
 329:main.c        ****     out += B * alpha;
 1066              		.loc 1 329 0
 1067 0026 7968     		ldr	r1, [r7, #4]	@ float
 1068 0028 B868     		ldr	r0, [r7, #8]	@ float
 1069 002a FFF7FEFF 		bl	__aeabi_fmul
 1070 002e 0346     		mov	r3, r0
 1071 0030 1946     		mov	r1, r3
 1072 0032 3869     		ldr	r0, [r7, #16]	@ float
 1073 0034 FFF7FEFF 		bl	__aeabi_fadd
 1074 0038 0346     		mov	r3, r0
 1075 003a 3B61     		str	r3, [r7, #16]	@ float
 330:main.c        ****     
 331:main.c        ****     return out;
 1076              		.loc 1 331 0
 1077 003c 3B69     		ldr	r3, [r7, #16]	@ float
 332:main.c        **** }
 1078              		.loc 1 332 0
 1079 003e 1846     		mov	r0, r3
 1080 0040 1837     		adds	r7, r7, #24
 1081              		.cfi_def_cfa_offset 8
 1082 0042 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 26


 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 0044 80BD     		pop	{r7, pc}
 1086              		.cfi_endproc
 1087              	.LFE71:
 1088              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1089              		.comm	I2Cbuff1,256,4
 1090              		.comm	I2Cbuff2,16,4
 1091              		.global	send_it
 1092 0046 00BF     		.bss
 1093              		.type	send_it, %object
 1094              		.size	send_it, 1
 1095              	send_it:
 1096 006c 00       		.space	1
 1097              		.global	mux_states
 1098              		.data
 1099 000a 0000     		.align	2
 1100              		.type	mux_states, %object
 1101              		.size	mux_states, 24
 1102              	mux_states:
 1103 000c 05       		.byte	5
 1104 000d 00       		.byte	0
 1105 000e 05       		.byte	5
 1106 000f 01       		.byte	1
 1107 0010 05       		.byte	5
 1108 0011 02       		.byte	2
 1109 0012 05       		.byte	5
 1110 0013 03       		.byte	3
 1111 0014 05       		.byte	5
 1112 0015 04       		.byte	4
 1113 0016 00       		.byte	0
 1114 0017 00       		.byte	0
 1115 0018 01       		.byte	1
 1116 0019 00       		.byte	0
 1117 001a 03       		.byte	3
 1118 001b 00       		.byte	0
 1119 001c 04       		.byte	4
 1120 001d 00       		.byte	0
 1121 001e 02       		.byte	2
 1122 001f 00       		.byte	0
 1123 0020 05       		.byte	5
 1124 0021 05       		.byte	5
 1125 0022 06       		.byte	6
 1126 0023 00       		.byte	0
 1127              		.global	i2c_skipped
 1128              		.align	2
 1129              		.type	i2c_skipped, %object
 1130              		.size	i2c_skipped, 12
 1131              	i2c_skipped:
 1132 0024 00       		.byte	0
 1133 0025 00       		.byte	0
 1134 0026 00       		.byte	0
 1135 0027 00       		.byte	0
 1136 0028 00       		.byte	0
 1137 0029 00       		.byte	0
 1138 002a 00       		.byte	0
 1139 002b 01       		.byte	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 27


 1140 002c 01       		.byte	1
 1141 002d 00       		.byte	0
 1142 002e 00       		.byte	0
 1143 002f 00       		.byte	0
 1144              		.global	pedals_low
 1145              		.align	2
 1146              		.type	pedals_low, %object
 1147              		.size	pedals_low, 20
 1148              	pedals_low:
 1149 0030 830A     		.short	2691
 1150 0032 0109     		.short	2305
 1151 0034 9909     		.short	2457
 1152 0036 0E02     		.short	526
 1153 0038 9A0E     		.short	3738
 1154 003a 0309     		.short	2307
 1155 003c C60B     		.short	3014
 1156 003e 8E08     		.short	2190
 1157 0040 E90A     		.short	2793
 1158 0042 2605     		.short	1318
 1159              		.global	pedals_high
 1160              		.align	2
 1161              		.type	pedals_high, %object
 1162              		.size	pedals_high, 20
 1163              	pedals_high:
 1164 0044 ED0A     		.short	2797
 1165 0046 6509     		.short	2405
 1166 0048 140A     		.short	2580
 1167 004a 8702     		.short	647
 1168 004c 0E0F     		.short	3854
 1169 004e 9D09     		.short	2461
 1170 0050 450C     		.short	3141
 1171 0052 3109     		.short	2353
 1172 0054 760B     		.short	2934
 1173 0056 E005     		.short	1504
 1174              		.global	deadzone
 1175              		.align	1
 1176              		.type	deadzone, %object
 1177              		.size	deadzone, 2
 1178              	deadzone:
 1179 0058 9600     		.short	150
 1180              		.global	volumePedal
 1181              		.align	1
 1182              		.type	volumePedal, %object
 1183              		.size	volumePedal, 2
 1184              	volumePedal:
 1185 005a FF0F     		.short	4095
 1186              		.comm	processed_pedals,20,4
 1187              		.comm	prev_processed_pedals,20,4
 1188              		.comm	pedals8bit,10,4
 1189              		.comm	prev_processed_volumePedal,2,2
 1190              		.comm	processed_volumePedal,2,2
 1191              		.global	fretMeasurements
 1192              		.align	2
 1193              		.type	fretMeasurements, %object
 1194              		.size	fretMeasurements, 64
 1195              	fretMeasurements:
 1196 005c 001E7547 		.word	1198857728
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 28


 1197 0060 00A07047 		.word	1198563328
 1198 0064 0052F846 		.word	1190679040
 1199 0068 00000000 		.word	0
 1200 006c 00B01A47 		.word	1192931328
 1201 0070 001C2247 		.word	1193417728
 1202 0074 00507546 		.word	1182093312
 1203 0078 00000000 		.word	0
 1204 007c 0000D746 		.word	1188495360
 1205 0080 00F0EB46 		.word	1189867520
 1206 0084 00280446 		.word	1174677504
 1207 0088 00000000 		.word	0
 1208 008c 00481446 		.word	1175734272
 1209 0090 00805446 		.word	1179942912
 1210 0094 00202745 		.word	1160192000
 1211 0098 00000000 		.word	0
 1212              		.global	currentPresetSelection
 1213              		.bss
 1214 006d 000000   		.align	2
 1215              		.type	currentPresetSelection, %object
 1216              		.size	currentPresetSelection, 4
 1217              	currentPresetSelection:
 1218 0070 00000000 		.space	4
 1219              		.comm	presetNamesArray,896,4
 1220              		.global	presetNumberToLoad
 1221              		.type	presetNumberToLoad, %object
 1222              		.size	presetNumberToLoad, 1
 1223              	presetNumberToLoad:
 1224 0074 00       		.space	1
 1225              		.global	presetLoadedResponse
 1226              		.data
 1227              		.align	2
 1228              		.type	presetLoadedResponse, %object
 1229              		.size	presetLoadedResponse, 2
 1230              	presetLoadedResponse:
 1231 009c FF       		.byte	-1
 1232 009d 00       		.byte	0
 1233              		.comm	macroNamesArray,7168,4
 1234              		.global	fretScaling
 1235 009e 0000     		.align	2
 1236              		.type	fretScaling, %object
 1237              		.size	fretScaling, 16
 1238              	fretScaling:
 1239 00a0 0000803F 		.word	1065353216
 1240 00a4 ABAA2A3F 		.word	1059760811
 1241 00a8 0000003F 		.word	1056964608
 1242 00ac 0000803E 		.word	1048576000
 1243              		.comm	pedalRatios,40,4
 1244              		.global	last_mux
 1245              		.type	last_mux, %object
 1246              		.size	last_mux, 1
 1247              	last_mux:
 1248 00b0 01       		.byte	1
 1249              		.global	main_counter
 1250              		.bss
 1251              		.type	main_counter, %object
 1252              		.size	main_counter, 1
 1253              	main_counter:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 29


 1254 0075 00       		.space	1
 1255              		.global	neck
 1256              		.type	neck, %object
 1257              		.size	neck, 1
 1258              	neck:
 1259 0076 00       		.space	1
 1260              		.global	dualSlider
 1261              		.type	dualSlider, %object
 1262              		.size	dualSlider, 1
 1263              	dualSlider:
 1264 0077 00       		.space	1
 1265              		.global	enterUp
 1266              		.data
 1267              		.type	enterUp, %object
 1268              		.size	enterUp, 1
 1269              	enterUp:
 1270 00b1 01       		.byte	1
 1271              		.global	voice
 1272              		.bss
 1273              		.type	voice, %object
 1274              		.size	voice, 1
 1275              	voice:
 1276 0078 00       		.space	1
 1277              		.global	editUp
 1278              		.data
 1279              		.type	editUp, %object
 1280              		.size	editUp, 1
 1281              	editUp:
 1282 00b2 01       		.byte	1
 1283              		.global	oct1Up
 1284              		.type	oct1Up, %object
 1285              		.size	oct1Up, 1
 1286              	oct1Up:
 1287 00b3 01       		.byte	1
 1288              		.global	oct4Up
 1289              		.type	oct4Up, %object
 1290              		.size	oct4Up, 1
 1291              	oct4Up:
 1292 00b4 01       		.byte	1
 1293              		.comm	encoderVal,16,4
 1294              		.global	encoderNum
 1295              		.bss
 1296 0079 000000   		.align	2
 1297              		.type	encoderNum, %object
 1298              		.size	encoderNum, 4
 1299              	encoderNum:
 1300 007c 00000000 		.space	4
 1301              		.global	button1Up
 1302              		.type	button1Up, %object
 1303              		.size	button1Up, 1
 1304              	button1Up:
 1305 0080 00       		.space	1
 1306              		.global	button2Up
 1307              		.type	button2Up, %object
 1308              		.size	button2Up, 1
 1309              	button2Up:
 1310 0081 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 30


 1311              		.global	button3Up
 1312              		.type	button3Up, %object
 1313              		.size	button3Up, 1
 1314              	button3Up:
 1315 0082 00       		.space	1
 1316              		.global	button4Up
 1317              		.type	button4Up, %object
 1318              		.size	button4Up, 1
 1319              	button4Up:
 1320 0083 00       		.space	1
 1321              		.global	patchNum
 1322              		.type	patchNum, %object
 1323              		.size	patchNum, 1
 1324              	patchNum:
 1325 0084 00       		.space	1
 1326              		.comm	copedent,3696,4
 1327              		.comm	copedentNamesArray,98,4
 1328              		.comm	prevStringPitchBend,48,4
 1329              		.comm	pedals,480,4
 1330              		.comm	openStringFrequencies,48,4
 1331              		.comm	stringMappedPositions,48,4
 1332              		.comm	invStringMappedPositions,48,4
 1333              		.comm	stringFrequencies,48,4
 1334              		.comm	stringOctave,48,4
 1335              		.comm	stringPitch,48,4
 1336              		.comm	stringMIDI,48,4
 1337              		.comm	openStringMIDI_Int,48,4
 1338              		.global	OLEDcount
 1339 0085 000000   		.align	2
 1340              		.type	OLEDcount, %object
 1341              		.size	OLEDcount, 4
 1342              	OLEDcount:
 1343 0088 00000000 		.space	4
 1344              		.global	mainOLEDWaitingToSend
 1345              		.align	2
 1346              		.type	mainOLEDWaitingToSend, %object
 1347              		.size	mainOLEDWaitingToSend, 4
 1348              	mainOLEDWaitingToSend:
 1349 008c 00000000 		.space	4
 1350              		.global	macroOLEDWaitingToSend
 1351              		.align	2
 1352              		.type	macroOLEDWaitingToSend, %object
 1353              		.size	macroOLEDWaitingToSend, 4
 1354              	macroOLEDWaitingToSend:
 1355 0090 00000000 		.space	4
 1356              		.comm	presetAlreadyDisplayed,256,4
 1357              		.global	pedals_float
 1358              		.align	2
 1359              		.type	pedals_float, %object
 1360              		.size	pedals_float, 40
 1361              	pedals_float:
 1362 0094 00000000 		.space	40
 1362      00000000 
 1362      00000000 
 1362      00000000 
 1362      00000000 
 1363              		.global	__aeabi_fdiv
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 31


 1364              		.section	.text.map,"ax",%progbits
 1365              		.align	2
 1366              		.global	map
 1367              		.thumb
 1368              		.thumb_func
 1369              		.type	map, %function
 1370              	map:
 1371              	.LFB72:
 333:main.c        **** 
 334:main.c        **** 
 335:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 336:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 337:main.c        **** void USB_service(void);
 338:main.c        **** 
 339:main.c        **** volatile uint8_t I2Cbuff1[256];
 340:main.c        **** volatile uint8_t I2Cbuff2[16];
 341:main.c        **** volatile uint8_t send_it = 0;
 342:main.c        **** 
 343:main.c        **** 
 344:main.c        **** //first mux, 0x70 is first element of array. 
 345:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 346:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 347:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 348:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 349:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,1,1,0,0,0}; //so that pedals and levers can be marked as s
 350:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 351:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 352:main.c        **** uint16_t deadzone = 150;
 353:main.c        **** uint16_t volumePedal = 4095;
 354:main.c        **** uint16_t processed_pedals[10];
 355:main.c        **** uint16_t prev_processed_pedals[10];
 356:main.c        **** uint8_t pedals8bit[10];
 357:main.c        **** int16_t prev_processed_volumePedal;
 358:main.c        **** int16_t processed_volumePedal;
 359:main.c        **** 
 360:main.c        **** 
 361:main.c        **** float fretMeasurements[4][4] ={
 362:main.c        **** 
 363:main.c        **** 		{62750.0f, 61600.0f, 31785.0f, 0.0f },
 364:main.c        **** 
 365:main.c        **** 		{39600.0f, 41500.0f, 15700.0f, 0.0f},
 366:main.c        **** 
 367:main.c        **** 		{27520.0f, 30200.0f, 8458.0f, 0.0f},
 368:main.c        **** 
 369:main.c        **** 		{9490.0f, 13600.0f, 2674.0f, 0.0f}
 370:main.c        **** 
 371:main.c        **** 	};
 372:main.c        **** #define NUM_MACROS 8
 373:main.c        **** #define MAX_NUM_PRESETS 64
 374:main.c        **** int currentPresetSelection = 0;
 375:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 376:main.c        **** uint8_t presetNumberToLoad = 0;
 377:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 378:main.c        **** 
 379:main.c        **** 
 380:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS][NAME_LENGTH_IN_BYTES];
 381:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 32


 382:main.c        **** 
 383:main.c        **** 
 384:main.c        **** float fretScaling[4] = {1.0f, 0.6666666666666f, 0.5f, 0.25f};
 385:main.c        **** 
 386:main.c        **** 
 387:main.c        **** #define MAX_ENCODERS 16
 388:main.c        **** 
 389:main.c        **** float pedalRatios[10];
 390:main.c        **** uint8_t last_mux = 1;
 391:main.c        **** volatile uint8_t main_counter = 0;
 392:main.c        **** uint8_t neck = 0;
 393:main.c        **** uint8_t dualSlider = 0;
 394:main.c        **** uint8_t enterUp = 1;
 395:main.c        **** uint8_t voice = 0;
 396:main.c        **** uint8_t editUp = 1;
 397:main.c        **** uint8_t oct1Up = 1;
 398:main.c        **** uint8_t oct4Up = 1;
 399:main.c        **** 
 400:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 401:main.c        **** int encoderNum = 0;
 402:main.c        **** uint8_t button1Up = 0;
 403:main.c        **** uint8_t button2Up = 0;
 404:main.c        **** uint8_t button3Up = 0;
 405:main.c        **** uint8_t button4Up = 0;
 406:main.c        **** uint8_t patchNum = 0;
 407:main.c        **** #define NUM_STRINGS 12
 408:main.c        **** #define NUM_PEDALS 10
 409:main.c        **** 
 410:main.c        **** 
 411:main.c        **** #define MAX_NUM_COPEDENTS 7
 412:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 413:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 414:main.c        **** 
 415:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 416:main.c        **** 
 417:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 418:main.c        **** 
 419:main.c        **** 
 420:main.c        **** float openStringFrequencies[NUM_STRINGS];
 421:main.c        **** float stringMappedPositions[NUM_STRINGS];
 422:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 423:main.c        **** float stringFrequencies[NUM_STRINGS];
 424:main.c        **** float stringOctave[NUM_STRINGS];
 425:main.c        **** float stringPitch[NUM_STRINGS];
 426:main.c        **** float stringMIDI[NUM_STRINGS];
 427:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 428:main.c        **** int OLEDcount = 0;
 429:main.c        **** 
 430:main.c        **** int mainOLEDWaitingToSend = 0;
 431:main.c        **** int macroOLEDWaitingToSend = 0;
 432:main.c        **** 
 433:main.c        **** int presetAlreadyDisplayed[MAX_NUM_PRESETS];
 434:main.c        **** 
 435:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 436:main.c        **** 
 437:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 438:main.c        **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 33


 1372              		.loc 1 438 0
 1373              		.cfi_startproc
 1374              		@ args = 4, pretend = 0, frame = 16
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376 0000 B0B5     		push	{r4, r5, r7, lr}
 1377              		.cfi_def_cfa_offset 16
 1378              		.cfi_offset 4, -16
 1379              		.cfi_offset 5, -12
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 84B0     		sub	sp, sp, #16
 1383              		.cfi_def_cfa_offset 32
 1384 0004 00AF     		add	r7, sp, #0
 1385              		.cfi_def_cfa_register 7
 1386 0006 F860     		str	r0, [r7, #12]	@ float
 1387 0008 B960     		str	r1, [r7, #8]	@ float
 1388 000a 7A60     		str	r2, [r7, #4]	@ float
 1389 000c 3B60     		str	r3, [r7]	@ float
 439:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1390              		.loc 1 439 0
 1391 000e 3968     		ldr	r1, [r7]	@ float
 1392 0010 386A     		ldr	r0, [r7, #32]	@ float
 1393 0012 FFF7FEFF 		bl	__aeabi_fsub
 1394 0016 0346     		mov	r3, r0
 1395 0018 1C46     		mov	r4, r3
 1396 001a B968     		ldr	r1, [r7, #8]	@ float
 1397 001c F868     		ldr	r0, [r7, #12]	@ float
 1398 001e FFF7FEFF 		bl	__aeabi_fsub
 1399 0022 0346     		mov	r3, r0
 1400 0024 1D46     		mov	r5, r3
 1401 0026 B968     		ldr	r1, [r7, #8]	@ float
 1402 0028 7868     		ldr	r0, [r7, #4]	@ float
 1403 002a FFF7FEFF 		bl	__aeabi_fsub
 1404 002e 0346     		mov	r3, r0
 1405 0030 1946     		mov	r1, r3
 1406 0032 2846     		mov	r0, r5
 1407 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1408 0038 0346     		mov	r3, r0
 1409 003a 1946     		mov	r1, r3
 1410 003c 2046     		mov	r0, r4
 1411 003e FFF7FEFF 		bl	__aeabi_fmul
 1412 0042 0346     		mov	r3, r0
 1413 0044 3968     		ldr	r1, [r7]	@ float
 1414 0046 1846     		mov	r0, r3
 1415 0048 FFF7FEFF 		bl	__aeabi_fadd
 1416 004c 0346     		mov	r3, r0
 440:main.c        **** }
 1417              		.loc 1 440 0
 1418 004e 1846     		mov	r0, r3
 1419 0050 1037     		adds	r7, r7, #16
 1420              		.cfi_def_cfa_offset 16
 1421 0052 BD46     		mov	sp, r7
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 0054 B0BD     		pop	{r4, r5, r7, pc}
 1425              		.cfi_endproc
 1426              	.LFE72:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 34


 1427              		.size	map, .-map
 1428              		.global	currentNeck
 1429 0056 00BF     		.bss
 1430              		.align	2
 1431              		.type	currentNeck, %object
 1432              		.size	currentNeck, 4
 1433              	currentNeck:
 1434 00bc 00000000 		.space	4
 1435              		.global	editMode
 1436              		.align	2
 1437              		.type	editMode, %object
 1438              		.size	editMode, 4
 1439              	editMode:
 1440 00c0 00000000 		.space	4
 1441              		.global	calibrationMode
 1442              		.align	2
 1443              		.type	calibrationMode, %object
 1444              		.size	calibrationMode, 4
 1445              	calibrationMode:
 1446 00c4 00000000 		.space	4
 1447              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1448              		.align	2
 1449              		.global	burnInitialPedalZeroPositions
 1450              		.thumb
 1451              		.thumb_func
 1452              		.type	burnInitialPedalZeroPositions, %function
 1453              	burnInitialPedalZeroPositions:
 1454              	.LFB73:
 441:main.c        **** void displayCurrentPresetNameAndCopedent();
 442:main.c        **** 
 443:main.c        **** int currentNeck = 0;
 444:main.c        **** 
 445:main.c        **** int editMode = 0;
 446:main.c        **** int calibrationMode = 0;
 447:main.c        **** 
 448:main.c        **** void burnInitialPedalZeroPositions()
 449:main.c        **** {
 1455              		.loc 1 449 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459              		@ link register save eliminated.
 1460 0000 80B4     		push	{r7}
 1461              		.cfi_def_cfa_offset 4
 1462              		.cfi_offset 7, -4
 1463 0002 00AF     		add	r7, sp, #0
 1464              		.cfi_def_cfa_register 7
 450:main.c        ****     
 451:main.c        **** }
 1465              		.loc 1 451 0
 1466 0004 00BF     		nop
 1467 0006 BD46     		mov	sp, r7
 1468              		.cfi_def_cfa_register 13
 1469              		@ sp needed
 1470 0008 80BC     		pop	{r7}
 1471              		.cfi_restore 7
 1472              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 35


 1473 000a 7047     		bx	lr
 1474              		.cfi_endproc
 1475              	.LFE73:
 1476              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1477              		.section	.text.calibratePedals,"ax",%progbits
 1478              		.align	2
 1479              		.global	calibratePedals
 1480              		.thumb
 1481              		.thumb_func
 1482              		.type	calibratePedals, %function
 1483              	calibratePedals:
 1484              	.LFB74:
 452:main.c        **** 
 453:main.c        **** void calibratePedals()
 454:main.c        **** {
 1485              		.loc 1 454 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
 1488              		@ frame_needed = 1, uses_anonymous_args = 0
 1489              		@ link register save eliminated.
 1490 0000 80B4     		push	{r7}
 1491              		.cfi_def_cfa_offset 4
 1492              		.cfi_offset 7, -4
 1493 0002 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 455:main.c        **** 
 456:main.c        ****     
 457:main.c        **** }
 1495              		.loc 1 457 0
 1496 0004 00BF     		nop
 1497 0006 BD46     		mov	sp, r7
 1498              		.cfi_def_cfa_register 13
 1499              		@ sp needed
 1500 0008 80BC     		pop	{r7}
 1501              		.cfi_restore 7
 1502              		.cfi_def_cfa_offset 0
 1503 000a 7047     		bx	lr
 1504              		.cfi_endproc
 1505              	.LFE74:
 1506              		.size	calibratePedals, .-calibratePedals
 1507              		.global	__aeabi_ui2f
 1508              		.global	__aeabi_i2f
 1509              		.global	__aeabi_f2uiz
 1510              		.section	.text.calculatePedalRatios,"ax",%progbits
 1511              		.align	2
 1512              		.global	calculatePedalRatios
 1513              		.thumb
 1514              		.thumb_func
 1515              		.type	calculatePedalRatios, %function
 1516              	calculatePedalRatios:
 1517              	.LFB75:
 458:main.c        **** 
 459:main.c        **** void calculatePedalRatios()
 460:main.c        **** {
 1518              		.loc 1 460 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 36


 1521              		@ frame_needed = 1, uses_anonymous_args = 0
 1522 0000 90B5     		push	{r4, r7, lr}
 1523              		.cfi_def_cfa_offset 12
 1524              		.cfi_offset 4, -12
 1525              		.cfi_offset 7, -8
 1526              		.cfi_offset 14, -4
 1527 0002 83B0     		sub	sp, sp, #12
 1528              		.cfi_def_cfa_offset 24
 1529 0004 00AF     		add	r7, sp, #0
 1530              		.cfi_def_cfa_register 7
 1531              	.LBB3:
 461:main.c        **** 
 462:main.c        ****     //add deadzones on edges of pedal sensing
 463:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1532              		.loc 1 463 0
 1533 0006 0023     		movs	r3, #0
 1534 0008 7B60     		str	r3, [r7, #4]
 1535 000a 6EE0     		b	.L58
 1536              	.L59:
 1537              	.LBB4:
 464:main.c        ****     {
 465:main.c        **** 
 466:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1538              		.loc 1 466 0 discriminator 3
 1539 000c 3A4A     		ldr	r2, .L60
 1540 000e 7B68     		ldr	r3, [r7, #4]
 1541 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1542 0014 1846     		mov	r0, r3
 1543 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1544 001a 0446     		mov	r4, r0
 1545 001c 374A     		ldr	r2, .L60+4
 1546 001e 7B68     		ldr	r3, [r7, #4]
 1547 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1548 0024 1846     		mov	r0, r3
 1549 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1550 002a 0346     		mov	r3, r0
 1551 002c 1946     		mov	r1, r3
 1552 002e 2046     		mov	r0, r4
 1553 0030 FFF7FEFF 		bl	__aeabi_fsub
 1554 0034 0346     		mov	r3, r0
 1555 0036 3B60     		str	r3, [r7]	@ float
 467:main.c        ****         pedals_low[i] = pedals_low[i] + (0.1f * pedalDiff);
 1556              		.loc 1 467 0 discriminator 3
 1557 0038 304A     		ldr	r2, .L60+4
 1558 003a 7B68     		ldr	r3, [r7, #4]
 1559 003c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1560 0040 1846     		mov	r0, r3
 1561 0042 FFF7FEFF 		bl	__aeabi_i2f
 1562 0046 0446     		mov	r4, r0
 1563 0048 2D49     		ldr	r1, .L60+8
 1564 004a 3868     		ldr	r0, [r7]	@ float
 1565 004c FFF7FEFF 		bl	__aeabi_fmul
 1566 0050 0346     		mov	r3, r0
 1567 0052 1946     		mov	r1, r3
 1568 0054 2046     		mov	r0, r4
 1569 0056 FFF7FEFF 		bl	__aeabi_fadd
 1570 005a 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 37


 1571 005c 1846     		mov	r0, r3
 1572 005e FFF7FEFF 		bl	__aeabi_f2uiz
 1573 0062 0346     		mov	r3, r0
 1574 0064 99B2     		uxth	r1, r3
 1575 0066 254A     		ldr	r2, .L60+4
 1576 0068 7B68     		ldr	r3, [r7, #4]
 1577 006a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 468:main.c        ****         pedals_high[i] = pedals_high[i] - (0.1f * pedalDiff);
 1578              		.loc 1 468 0 discriminator 3
 1579 006e 224A     		ldr	r2, .L60
 1580 0070 7B68     		ldr	r3, [r7, #4]
 1581 0072 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1582 0076 1846     		mov	r0, r3
 1583 0078 FFF7FEFF 		bl	__aeabi_i2f
 1584 007c 0446     		mov	r4, r0
 1585 007e 2049     		ldr	r1, .L60+8
 1586 0080 3868     		ldr	r0, [r7]	@ float
 1587 0082 FFF7FEFF 		bl	__aeabi_fmul
 1588 0086 0346     		mov	r3, r0
 1589 0088 1946     		mov	r1, r3
 1590 008a 2046     		mov	r0, r4
 1591 008c FFF7FEFF 		bl	__aeabi_fsub
 1592 0090 0346     		mov	r3, r0
 1593 0092 1846     		mov	r0, r3
 1594 0094 FFF7FEFF 		bl	__aeabi_f2uiz
 1595 0098 0346     		mov	r3, r0
 1596 009a 99B2     		uxth	r1, r3
 1597 009c 164A     		ldr	r2, .L60
 1598 009e 7B68     		ldr	r3, [r7, #4]
 1599 00a0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 469:main.c        ****         pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1600              		.loc 1 469 0 discriminator 3
 1601 00a4 144A     		ldr	r2, .L60
 1602 00a6 7B68     		ldr	r3, [r7, #4]
 1603 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1604 00ac 1846     		mov	r0, r3
 1605 00ae FFF7FEFF 		bl	__aeabi_ui2f
 1606 00b2 0446     		mov	r4, r0
 1607 00b4 114A     		ldr	r2, .L60+4
 1608 00b6 7B68     		ldr	r3, [r7, #4]
 1609 00b8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1610 00bc 1846     		mov	r0, r3
 1611 00be FFF7FEFF 		bl	__aeabi_ui2f
 1612 00c2 0346     		mov	r3, r0
 1613 00c4 1946     		mov	r1, r3
 1614 00c6 2046     		mov	r0, r4
 1615 00c8 FFF7FEFF 		bl	__aeabi_fsub
 1616 00cc 0346     		mov	r3, r0
 1617 00ce 3B60     		str	r3, [r7]	@ float
 470:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1618              		.loc 1 470 0 discriminator 3
 1619 00d0 3968     		ldr	r1, [r7]	@ float
 1620 00d2 0C48     		ldr	r0, .L60+12
 1621 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1622 00d8 0346     		mov	r3, r0
 1623 00da 1946     		mov	r1, r3
 1624 00dc 0A4A     		ldr	r2, .L60+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 38


 1625 00de 7B68     		ldr	r3, [r7, #4]
 1626 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1627              	.LBE4:
 463:main.c        ****     {
 1628              		.loc 1 463 0 discriminator 3
 1629 00e4 7B68     		ldr	r3, [r7, #4]
 1630 00e6 0133     		adds	r3, r3, #1
 1631 00e8 7B60     		str	r3, [r7, #4]
 1632              	.L58:
 463:main.c        ****     {
 1633              		.loc 1 463 0 is_stmt 0 discriminator 1
 1634 00ea 7B68     		ldr	r3, [r7, #4]
 1635 00ec 092B     		cmp	r3, #9
 1636 00ee 8DDD     		ble	.L59
 1637              	.LBE3:
 471:main.c        ****     }
 472:main.c        **** }
 1638              		.loc 1 472 0 is_stmt 1
 1639 00f0 00BF     		nop
 1640 00f2 0C37     		adds	r7, r7, #12
 1641              		.cfi_def_cfa_offset 12
 1642 00f4 BD46     		mov	sp, r7
 1643              		.cfi_def_cfa_register 13
 1644              		@ sp needed
 1645 00f6 90BD     		pop	{r4, r7, pc}
 1646              	.L61:
 1647              		.align	2
 1648              	.L60:
 1649 00f8 00000000 		.word	pedals_high
 1650 00fc 00000000 		.word	pedals_low
 1651 0100 CDCCCC3D 		.word	1036831949
 1652 0104 00F07F45 		.word	1166012416
 1653 0108 00000000 		.word	pedalRatios
 1654              		.cfi_endproc
 1655              	.LFE75:
 1656              		.size	calculatePedalRatios, .-calculatePedalRatios
 1657              		.section	.rodata
 1658              		.align	2
 1659              	.LC0:
 1660 0400 2000     		.ascii	" \000"
 1661              		.global	__aeabi_f2iz
 1662 0402 0000     		.align	2
 1663              	.LC1:
 1664 0404 43414C49 		.ascii	"CALIBRATION\000"
 1664      42524154 
 1664      494F4E00 
 1665              		.align	2
 1666              	.LC2:
 1667 0410 4D4F5645 		.ascii	"MOVE PEDALS\000"
 1667      20504544 
 1667      414C5300 
 1668              		.align	2
 1669              	.LC3:
 1670 041c 414E4420 		.ascii	"AND LEVERS\000"
 1670      4C455645 
 1670      525300
 1671 0427 00       		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 39


 1672              	.LC4:
 1673 0428 5448454E 		.ascii	"THEN EXIT\000"
 1673      20455849 
 1673      5400
 1674              		.section	.text.main,"ax",%progbits
 1675              		.align	2
 1676              		.global	main
 1677              		.thumb
 1678              		.thumb_func
 1679              		.type	main, %function
 1680              	main:
 1681              	.LFB76:
 473:main.c        **** int main(void)
 474:main.c        **** {
 1682              		.loc 1 474 0
 1683              		.cfi_startproc
 1684              		@ args = 0, pretend = 0, frame = 136
 1685              		@ frame_needed = 1, uses_anonymous_args = 0
 1686 0000 90B5     		push	{r4, r7, lr}
 1687              		.cfi_def_cfa_offset 12
 1688              		.cfi_offset 4, -12
 1689              		.cfi_offset 7, -8
 1690              		.cfi_offset 14, -4
 1691 0002 A3B0     		sub	sp, sp, #140
 1692              		.cfi_def_cfa_offset 152
 1693 0004 00AF     		add	r7, sp, #0
 1694              		.cfi_def_cfa_register 7
 475:main.c        ****     
 476:main.c        **** 	CYGlobalIntEnable; 
 1695              		.loc 1 476 0
 1696              		.syntax unified
 1697              	@ 476 "main.c" 1
 1698 0006 62B6     		CPSIE   i
 1699              	@ 0 "" 2
 477:main.c        **** 
 478:main.c        ****     EEPROM_Start();
 1700              		.loc 1 478 0
 1701              		.thumb
 1702              		.syntax unified
 1703 0008 FFF7FEFF 		bl	EEPROM_Start
 479:main.c        **** 
 480:main.c        **** 
 481:main.c        ****     
 482:main.c        ****     //read from eeprom which copedents are loaded on which necks
 483:main.c        ****     necks[0] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1704              		.loc 1 483 0
 1705 000c 0020     		movs	r0, #0
 1706 000e FFF7FEFF 		bl	EEPROM_ReadByte
 1707 0012 0346     		mov	r3, r0
 1708 0014 1A46     		mov	r2, r3
 1709 0016 944B     		ldr	r3, .L189
 1710 0018 1A70     		strb	r2, [r3]
 484:main.c        ****     necks[1] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET + 1);
 1711              		.loc 1 484 0
 1712 001a 0120     		movs	r0, #1
 1713 001c FFF7FEFF 		bl	EEPROM_ReadByte
 1714 0020 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 40


 1715 0022 1A46     		mov	r2, r3
 1716 0024 904B     		ldr	r3, .L189
 1717 0026 5A70     		strb	r2, [r3, #1]
 1718              	.LBB5:
 485:main.c        ****     
 486:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 1719              		.loc 1 486 0
 1720 0028 0023     		movs	r3, #0
 1721 002a C7F88430 		str	r3, [r7, #132]
 1722 002e AEE0     		b	.L63
 1723              	.L70:
 1724              	.LBB6:
 487:main.c        ****     {
 488:main.c        ****         
 489:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
 1725              		.loc 1 489 0
 1726 0030 0023     		movs	r3, #0
 1727 0032 C7F88030 		str	r3, [r7, #128]
 1728 0036 29E0     		b	.L64
 1729              	.L65:
 490:main.c        ****         {
 491:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 1730              		.loc 1 491 0 discriminator 3
 1731 0038 D7F88430 		ldr	r3, [r7, #132]
 1732 003c 9BB2     		uxth	r3, r3
 1733 003e 1A46     		mov	r2, r3	@ movhi
 1734 0040 1201     		lsls	r2, r2, #4
 1735 0042 1A44     		add	r2, r2, r3
 1736 0044 9200     		lsls	r2, r2, #2
 1737 0046 1A44     		add	r2, r2, r3
 1738 0048 5200     		lsls	r2, r2, #1
 1739 004a 1344     		add	r3, r3, r2
 1740 004c 5B00     		lsls	r3, r3, #1
 1741 004e 9AB2     		uxth	r2, r3
 1742 0050 D7F88030 		ldr	r3, [r7, #128]
 1743 0054 9BB2     		uxth	r3, r3
 1744 0056 1344     		add	r3, r3, r2
 1745 0058 9BB2     		uxth	r3, r3
 1746 005a 0233     		adds	r3, r3, #2
 1747 005c 9BB2     		uxth	r3, r3
 1748 005e 1846     		mov	r0, r3
 1749 0060 FFF7FEFF 		bl	EEPROM_ReadByte
 1750 0064 0346     		mov	r3, r0
 1751 0066 1846     		mov	r0, r3
 1752 0068 8049     		ldr	r1, .L189+4
 1753 006a D7F88420 		ldr	r2, [r7, #132]
 1754 006e 1346     		mov	r3, r2
 1755 0070 DB00     		lsls	r3, r3, #3
 1756 0072 9B1A     		subs	r3, r3, r2
 1757 0074 5B00     		lsls	r3, r3, #1
 1758 0076 CA18     		adds	r2, r1, r3
 1759 0078 D7F88030 		ldr	r3, [r7, #128]
 1760 007c 1344     		add	r3, r3, r2
 1761 007e 0246     		mov	r2, r0
 1762 0080 1A70     		strb	r2, [r3]
 489:main.c        ****         {
 1763              		.loc 1 489 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 41


 1764 0082 D7F88030 		ldr	r3, [r7, #128]
 1765 0086 0133     		adds	r3, r3, #1
 1766 0088 C7F88030 		str	r3, [r7, #128]
 1767              	.L64:
 489:main.c        ****         {
 1768              		.loc 1 489 0 is_stmt 0 discriminator 1
 1769 008c D7F88030 		ldr	r3, [r7, #128]
 1770 0090 0D2B     		cmp	r3, #13
 1771 0092 D1DD     		ble	.L65
 1772              	.LBE6:
 1773              	.LBB7:
 492:main.c        ****         }
 493:main.c        ****         for (int i = 0; i < 11; i++)
 1774              		.loc 1 493 0 is_stmt 1
 1775 0094 0023     		movs	r3, #0
 1776 0096 FB67     		str	r3, [r7, #124]
 1777 0098 71E0     		b	.L66
 1778              	.L69:
 1779              	.LBB8:
 494:main.c        ****     	{
 495:main.c        ****     		int pedalStartLoc = (i*24);
 1780              		.loc 1 495 0
 1781 009a FA6F     		ldr	r2, [r7, #124]
 1782 009c 1346     		mov	r3, r2
 1783 009e 5B00     		lsls	r3, r3, #1
 1784 00a0 1344     		add	r3, r3, r2
 1785 00a2 DB00     		lsls	r3, r3, #3
 1786 00a4 7B62     		str	r3, [r7, #36]
 1787              	.LBB9:
 496:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 1788              		.loc 1 496 0
 1789 00a6 0023     		movs	r3, #0
 1790 00a8 BB67     		str	r3, [r7, #120]
 1791 00aa 62E0     		b	.L67
 1792              	.L68:
 1793              	.LBB10:
 497:main.c        ****     		{
 498:main.c        ****                 
 499:main.c        ****                 int stringStartLoc = (j*2);
 1794              		.loc 1 499 0 discriminator 3
 1795 00ac BB6F     		ldr	r3, [r7, #120]
 1796 00ae 5B00     		lsls	r3, r3, #1
 1797 00b0 3B62     		str	r3, [r7, #32]
 500:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 1798              		.loc 1 500 0 discriminator 3
 1799 00b2 3B6A     		ldr	r3, [r7, #32]
 1800 00b4 9AB2     		uxth	r2, r3
 1801 00b6 7B6A     		ldr	r3, [r7, #36]
 1802 00b8 9BB2     		uxth	r3, r3
 1803 00ba 1344     		add	r3, r3, r2
 1804 00bc 9AB2     		uxth	r2, r3
 1805 00be D7F88430 		ldr	r3, [r7, #132]
 1806 00c2 9BB2     		uxth	r3, r3
 1807 00c4 1946     		mov	r1, r3	@ movhi
 1808 00c6 0901     		lsls	r1, r1, #4
 1809 00c8 1944     		add	r1, r1, r3
 1810 00ca 8900     		lsls	r1, r1, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 42


 1811 00cc 1944     		add	r1, r1, r3
 1812 00ce 4900     		lsls	r1, r1, #1
 1813 00d0 0B44     		add	r3, r3, r1
 1814 00d2 5B00     		lsls	r3, r3, #1
 1815 00d4 9BB2     		uxth	r3, r3
 1816 00d6 1344     		add	r3, r3, r2
 1817 00d8 9BB2     		uxth	r3, r3
 1818 00da 1033     		adds	r3, r3, #16
 1819 00dc 9BB2     		uxth	r3, r3
 1820 00de 1846     		mov	r0, r3
 1821 00e0 FFF7FEFF 		bl	EEPROM_ReadByte
 1822 00e4 0346     		mov	r3, r0
 1823 00e6 FB83     		strh	r3, [r7, #30]	@ movhi
 501:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 1824              		.loc 1 501 0 discriminator 3
 1825 00e8 3B6A     		ldr	r3, [r7, #32]
 1826 00ea 9AB2     		uxth	r2, r3
 1827 00ec 7B6A     		ldr	r3, [r7, #36]
 1828 00ee 9BB2     		uxth	r3, r3
 1829 00f0 1344     		add	r3, r3, r2
 1830 00f2 9AB2     		uxth	r2, r3
 1831 00f4 D7F88430 		ldr	r3, [r7, #132]
 1832 00f8 9BB2     		uxth	r3, r3
 1833 00fa 1946     		mov	r1, r3	@ movhi
 1834 00fc 0901     		lsls	r1, r1, #4
 1835 00fe 1944     		add	r1, r1, r3
 1836 0100 8900     		lsls	r1, r1, #2
 1837 0102 1944     		add	r1, r1, r3
 1838 0104 4900     		lsls	r1, r1, #1
 1839 0106 0B44     		add	r3, r3, r1
 1840 0108 5B00     		lsls	r3, r3, #1
 1841 010a 9BB2     		uxth	r3, r3
 1842 010c 1344     		add	r3, r3, r2
 1843 010e 9BB2     		uxth	r3, r3
 1844 0110 1133     		adds	r3, r3, #17
 1845 0112 9BB2     		uxth	r3, r3
 1846 0114 1846     		mov	r0, r3
 1847 0116 FFF7FEFF 		bl	EEPROM_ReadByte
 1848 011a 0346     		mov	r3, r0
 1849 011c BB83     		strh	r3, [r7, #28]	@ movhi
 502:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 1850              		.loc 1 502 0 discriminator 3
 1851 011e FB8B     		ldrh	r3, [r7, #30]
 1852 0120 1A02     		lsls	r2, r3, #8
 1853 0122 BB8B     		ldrh	r3, [r7, #28]
 1854 0124 1344     		add	r3, r3, r2
 1855 0126 1846     		mov	r0, r3
 1856 0128 FFF7FEFF 		bl	__aeabi_i2f
 1857 012c 0346     		mov	r3, r0
 1858 012e 4FF06E51 		mov	r1, #998244352
 1859 0132 1846     		mov	r0, r3
 1860 0134 FFF7FEFF 		bl	__aeabi_fmul
 1861 0138 0346     		mov	r3, r0
 1862 013a 4FF08641 		mov	r1, #1124073472
 1863 013e 1846     		mov	r0, r3
 1864 0140 FFF7FEFF 		bl	__aeabi_fsub
 1865 0144 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 43


 1866 0146 1C46     		mov	r4, r3
 1867 0148 4948     		ldr	r0, .L189+8
 1868 014a FB6F     		ldr	r3, [r7, #124]
 1869 014c D7F88410 		ldr	r1, [r7, #132]
 1870 0150 1A46     		mov	r2, r3
 1871 0152 5200     		lsls	r2, r2, #1
 1872 0154 1A44     		add	r2, r2, r3
 1873 0156 9300     		lsls	r3, r2, #2
 1874 0158 1A46     		mov	r2, r3
 1875 015a 0B46     		mov	r3, r1
 1876 015c 5B01     		lsls	r3, r3, #5
 1877 015e 0B44     		add	r3, r3, r1
 1878 0160 9B00     		lsls	r3, r3, #2
 1879 0162 1A44     		add	r2, r2, r3
 1880 0164 BB6F     		ldr	r3, [r7, #120]
 1881 0166 1344     		add	r3, r3, r2
 1882 0168 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 1883              	.LBE10:
 496:main.c        ****     		{
 1884              		.loc 1 496 0 discriminator 3
 1885 016c BB6F     		ldr	r3, [r7, #120]
 1886 016e 0133     		adds	r3, r3, #1
 1887 0170 BB67     		str	r3, [r7, #120]
 1888              	.L67:
 496:main.c        ****     		{
 1889              		.loc 1 496 0 is_stmt 0 discriminator 1
 1890 0172 BB6F     		ldr	r3, [r7, #120]
 1891 0174 0B2B     		cmp	r3, #11
 1892 0176 99DD     		ble	.L68
 1893              	.LBE9:
 1894              	.LBE8:
 493:main.c        ****     	{
 1895              		.loc 1 493 0 is_stmt 1 discriminator 2
 1896 0178 FB6F     		ldr	r3, [r7, #124]
 1897 017a 0133     		adds	r3, r3, #1
 1898 017c FB67     		str	r3, [r7, #124]
 1899              	.L66:
 493:main.c        ****     	{
 1900              		.loc 1 493 0 is_stmt 0 discriminator 1
 1901 017e FB6F     		ldr	r3, [r7, #124]
 1902 0180 0A2B     		cmp	r3, #10
 1903 0182 8ADD     		ble	.L69
 1904              	.LBE7:
 486:main.c        ****     {
 1905              		.loc 1 486 0 is_stmt 1 discriminator 2
 1906 0184 D7F88430 		ldr	r3, [r7, #132]
 1907 0188 0133     		adds	r3, r3, #1
 1908 018a C7F88430 		str	r3, [r7, #132]
 1909              	.L63:
 486:main.c        ****     {
 1910              		.loc 1 486 0 is_stmt 0 discriminator 1
 1911 018e D7F88430 		ldr	r3, [r7, #132]
 1912 0192 062B     		cmp	r3, #6
 1913 0194 7FF74CAF 		ble	.L70
 1914              	.LBE5:
 1915              	.LBB11:
 503:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 44


 504:main.c        ****     	}
 505:main.c        ****     }
 506:main.c        **** 
 507:main.c        ****     
 508:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1916              		.loc 1 508 0 is_stmt 1
 1917 0198 0023     		movs	r3, #0
 1918 019a 7B67     		str	r3, [r7, #116]
 1919 019c 41E0     		b	.L71
 1920              	.L72:
 509:main.c        ****     {
 510:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_ReadByt
 1921              		.loc 1 510 0 discriminator 3
 1922 019e 7B6F     		ldr	r3, [r7, #116]
 1923 01a0 03F2E713 		addw	r3, r3, #487
 1924 01a4 9BB2     		uxth	r3, r3
 1925 01a6 9B00     		lsls	r3, r3, #2
 1926 01a8 9BB2     		uxth	r3, r3
 1927 01aa 1846     		mov	r0, r3
 1928 01ac FFF7FEFF 		bl	EEPROM_ReadByte
 1929 01b0 0346     		mov	r3, r0
 1930 01b2 9BB2     		uxth	r3, r3
 1931 01b4 1B02     		lsls	r3, r3, #8
 1932 01b6 9CB2     		uxth	r4, r3
 1933 01b8 7B6F     		ldr	r3, [r7, #116]
 1934 01ba 9BB2     		uxth	r3, r3
 1935 01bc 9B00     		lsls	r3, r3, #2
 1936 01be 9BB2     		uxth	r3, r3
 1937 01c0 03F29D73 		addw	r3, r3, #1949
 1938 01c4 9BB2     		uxth	r3, r3
 1939 01c6 1846     		mov	r0, r3
 1940 01c8 FFF7FEFF 		bl	EEPROM_ReadByte
 1941 01cc 0346     		mov	r3, r0
 1942 01ce 9BB2     		uxth	r3, r3
 1943 01d0 2344     		add	r3, r3, r4
 1944 01d2 99B2     		uxth	r1, r3
 1945 01d4 274A     		ldr	r2, .L189+12
 1946 01d6 7B6F     		ldr	r3, [r7, #116]
 1947 01d8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 511:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (EEPROM_
 1948              		.loc 1 511 0 discriminator 3
 1949 01dc 7B6F     		ldr	r3, [r7, #116]
 1950 01de 9BB2     		uxth	r3, r3
 1951 01e0 9B00     		lsls	r3, r3, #2
 1952 01e2 9BB2     		uxth	r3, r3
 1953 01e4 03F29E73 		addw	r3, r3, #1950
 1954 01e8 9BB2     		uxth	r3, r3
 1955 01ea 1846     		mov	r0, r3
 1956 01ec FFF7FEFF 		bl	EEPROM_ReadByte
 1957 01f0 0346     		mov	r3, r0
 1958 01f2 9BB2     		uxth	r3, r3
 1959 01f4 1B02     		lsls	r3, r3, #8
 1960 01f6 9CB2     		uxth	r4, r3
 1961 01f8 7B6F     		ldr	r3, [r7, #116]
 1962 01fa 9BB2     		uxth	r3, r3
 1963 01fc 9B00     		lsls	r3, r3, #2
 1964 01fe 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 45


 1965 0200 03F29F73 		addw	r3, r3, #1951
 1966 0204 9BB2     		uxth	r3, r3
 1967 0206 1846     		mov	r0, r3
 1968 0208 FFF7FEFF 		bl	EEPROM_ReadByte
 1969 020c 0346     		mov	r3, r0
 1970 020e 9BB2     		uxth	r3, r3
 1971 0210 2344     		add	r3, r3, r4
 1972 0212 99B2     		uxth	r1, r3
 1973 0214 184A     		ldr	r2, .L189+16
 1974 0216 7B6F     		ldr	r3, [r7, #116]
 1975 0218 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 508:main.c        ****     {
 1976              		.loc 1 508 0 discriminator 3
 1977 021c 7B6F     		ldr	r3, [r7, #116]
 1978 021e 0133     		adds	r3, r3, #1
 1979 0220 7B67     		str	r3, [r7, #116]
 1980              	.L71:
 508:main.c        ****     {
 1981              		.loc 1 508 0 is_stmt 0 discriminator 1
 1982 0222 7B6F     		ldr	r3, [r7, #116]
 1983 0224 092B     		cmp	r3, #9
 1984 0226 BADD     		ble	.L72
 1985              	.LBE11:
 512:main.c        ****     }
 513:main.c        ****     calculatePedalRatios();
 1986              		.loc 1 513 0 is_stmt 1
 1987 0228 FFF7FEFF 		bl	calculatePedalRatios
 1988              	.LBB12:
 514:main.c        ****                 
 515:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 516:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 1989              		.loc 1 516 0
 1990 022c 0023     		movs	r3, #0
 1991 022e 3B67     		str	r3, [r7, #112]
 1992 0230 4CE0     		b	.L73
 1993              	.L80:
 1994              	.LBB13:
 517:main.c        ****     {
 518:main.c        ****         for (int j = 0; j < NAME_LENGTH_IN_BYTES; j++)
 1995              		.loc 1 518 0
 1996 0232 0023     		movs	r3, #0
 1997 0234 FB66     		str	r3, [r7, #108]
 1998 0236 0DE0     		b	.L74
 1999              	.L75:
 519:main.c        ****         {
 520:main.c        ****             presetNamesArray[i][j] = 255;
 2000              		.loc 1 520 0 discriminator 3
 2001 0238 1049     		ldr	r1, .L189+20
 2002 023a 3A6F     		ldr	r2, [r7, #112]
 2003 023c 1346     		mov	r3, r2
 2004 023e DB00     		lsls	r3, r3, #3
 2005 0240 9B1A     		subs	r3, r3, r2
 2006 0242 5B00     		lsls	r3, r3, #1
 2007 0244 CA18     		adds	r2, r1, r3
 2008 0246 FB6E     		ldr	r3, [r7, #108]
 2009 0248 1344     		add	r3, r3, r2
 2010 024a FF22     		movs	r2, #255
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 46


 2011 024c 1A70     		strb	r2, [r3]
 518:main.c        ****         {
 2012              		.loc 1 518 0 discriminator 3
 2013 024e FB6E     		ldr	r3, [r7, #108]
 2014 0250 0133     		adds	r3, r3, #1
 2015 0252 FB66     		str	r3, [r7, #108]
 2016              	.L74:
 518:main.c        ****         {
 2017              		.loc 1 518 0 is_stmt 0 discriminator 1
 2018 0254 FB6E     		ldr	r3, [r7, #108]
 2019 0256 0D2B     		cmp	r3, #13
 2020 0258 EEDD     		ble	.L75
 2021              	.LBE13:
 2022              	.LBB14:
 521:main.c        **** 
 522:main.c        ****         }
 523:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 2023              		.loc 1 523 0 is_stmt 1
 2024 025a 0023     		movs	r3, #0
 2025 025c BB66     		str	r3, [r7, #104]
 2026 025e 2AE0     		b	.L76
 2027              	.L79:
 2028              	.LBB15:
 524:main.c        ****         {
 525:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 2029              		.loc 1 525 0
 2030 0260 0023     		movs	r3, #0
 2031 0262 7B66     		str	r3, [r7, #100]
 2032 0264 21E0     		b	.L77
 2033              	.L190:
 2034 0266 00BF     		.align	2
 2035              	.L189:
 2036 0268 00000000 		.word	necks
 2037 026c 00000000 		.word	copedentNamesArray
 2038 0270 00000000 		.word	copedent
 2039 0274 00000000 		.word	pedals_low
 2040 0278 00000000 		.word	pedals_high
 2041 027c 00000000 		.word	presetNamesArray
 2042              	.L78:
 526:main.c        ****             {
 527:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2043              		.loc 1 527 0 discriminator 3
 2044 0280 5348     		ldr	r0, .L191
 2045 0282 BB6E     		ldr	r3, [r7, #104]
 2046 0284 396F     		ldr	r1, [r7, #112]
 2047 0286 1A46     		mov	r2, r3
 2048 0288 D200     		lsls	r2, r2, #3
 2049 028a D21A     		subs	r2, r2, r3
 2050 028c 5300     		lsls	r3, r2, #1
 2051 028e 1A46     		mov	r2, r3
 2052 0290 0B46     		mov	r3, r1
 2053 0292 DB00     		lsls	r3, r3, #3
 2054 0294 5B1A     		subs	r3, r3, r1
 2055 0296 1B01     		lsls	r3, r3, #4
 2056 0298 1344     		add	r3, r3, r2
 2057 029a C218     		adds	r2, r0, r3
 2058 029c 7B6E     		ldr	r3, [r7, #100]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 47


 2059 029e 1344     		add	r3, r3, r2
 2060 02a0 FF22     		movs	r2, #255
 2061 02a2 1A70     		strb	r2, [r3]
 525:main.c        ****             {
 2062              		.loc 1 525 0 discriminator 3
 2063 02a4 7B6E     		ldr	r3, [r7, #100]
 2064 02a6 0133     		adds	r3, r3, #1
 2065 02a8 7B66     		str	r3, [r7, #100]
 2066              	.L77:
 525:main.c        ****             {
 2067              		.loc 1 525 0 is_stmt 0 discriminator 1
 2068 02aa 7B6E     		ldr	r3, [r7, #100]
 2069 02ac 0D2B     		cmp	r3, #13
 2070 02ae E7DD     		ble	.L78
 2071              	.LBE15:
 523:main.c        ****         {
 2072              		.loc 1 523 0 is_stmt 1 discriminator 2
 2073 02b0 BB6E     		ldr	r3, [r7, #104]
 2074 02b2 0133     		adds	r3, r3, #1
 2075 02b4 BB66     		str	r3, [r7, #104]
 2076              	.L76:
 523:main.c        ****         {
 2077              		.loc 1 523 0 is_stmt 0 discriminator 1
 2078 02b6 BB6E     		ldr	r3, [r7, #104]
 2079 02b8 072B     		cmp	r3, #7
 2080 02ba D1DD     		ble	.L79
 2081              	.LBE14:
 528:main.c        ****             }
 529:main.c        ****         }
 530:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2082              		.loc 1 530 0 is_stmt 1 discriminator 2
 2083 02bc 454A     		ldr	r2, .L191+4
 2084 02be 3B6F     		ldr	r3, [r7, #112]
 2085 02c0 0021     		movs	r1, #0
 2086 02c2 42F82310 		str	r1, [r2, r3, lsl #2]
 516:main.c        ****     {
 2087              		.loc 1 516 0 discriminator 2
 2088 02c6 3B6F     		ldr	r3, [r7, #112]
 2089 02c8 0133     		adds	r3, r3, #1
 2090 02ca 3B67     		str	r3, [r7, #112]
 2091              	.L73:
 516:main.c        ****     {
 2092              		.loc 1 516 0 is_stmt 0 discriminator 1
 2093 02cc 3B6F     		ldr	r3, [r7, #112]
 2094 02ce 3F2B     		cmp	r3, #63
 2095 02d0 AFDD     		ble	.L80
 2096              	.LBE12:
 531:main.c        ****     }
 532:main.c        ****     
 533:main.c        ****     QuadDec_1_Start();
 2097              		.loc 1 533 0 is_stmt 1
 2098 02d2 FFF7FEFF 		bl	QuadDec_1_Start
 534:main.c        ****     LED_amber1_Write(0);
 2099              		.loc 1 534 0
 2100 02d6 0020     		movs	r0, #0
 2101 02d8 FFF7FEFF 		bl	LED_amber1_Write
 535:main.c        ****     LED_amber2_Write(1);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 48


 2102              		.loc 1 535 0
 2103 02dc 0120     		movs	r0, #1
 2104 02de FFF7FEFF 		bl	LED_amber2_Write
 536:main.c        ****     LED_amber3_Write(0);
 2105              		.loc 1 536 0
 2106 02e2 0020     		movs	r0, #0
 2107 02e4 FFF7FEFF 		bl	LED_amber3_Write
 537:main.c        ****     LED_amber4_Write(0);
 2108              		.loc 1 537 0
 2109 02e8 0020     		movs	r0, #0
 2110 02ea FFF7FEFF 		bl	LED_amber4_Write
 538:main.c        **** 
 539:main.c        **** 
 540:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 2111              		.loc 1 540 0
 2112 02ee 3A4B     		ldr	r3, .L191+8
 2113 02f0 1846     		mov	r0, r3
 2114 02f2 FFF7FEFF 		bl	Em_EEPROM_Init
 2115 02f6 0346     		mov	r3, r0
 2116 02f8 1A46     		mov	r2, r3
 2117 02fa 384B     		ldr	r3, .L191+12
 2118 02fc 1A70     		strb	r2, [r3]
 541:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 542:main.c        ****     {
 543:main.c        ****        // HandleError();
 544:main.c        ****     }
 545:main.c        ****     uint8_t myArrayCounter = 0;
 2119              		.loc 1 545 0
 2120 02fe 0023     		movs	r3, #0
 2121 0300 FB76     		strb	r3, [r7, #27]
 546:main.c        ****   
 547:main.c        ****     I2C_1_Start();  
 2122              		.loc 1 547 0
 2123 0302 FFF7FEFF 		bl	I2C_1_Start
 548:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 2124              		.loc 1 548 0
 2125 0306 0120     		movs	r0, #1
 2126 0308 FFF7FEFF 		bl	USB_SetPowerStatus
 549:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 2127              		.loc 1 549 0
 2128 030c 3448     		ldr	r0, .L191+16
 2129 030e FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 550:main.c        **** 
 551:main.c        ****     
 552:main.c        ****     LED_red1_Write(0);
 2130              		.loc 1 552 0
 2131 0312 0020     		movs	r0, #0
 2132 0314 FFF7FEFF 		bl	LED_red1_Write
 553:main.c        ****     LED_green2_Write(1);
 2133              		.loc 1 553 0
 2134 0318 0120     		movs	r0, #1
 2135 031a FFF7FEFF 		bl	LED_green2_Write
 554:main.c        **** 
 555:main.c        ****     
 556:main.c        ****     ADC_SAR_Seq_1_Start();
 2136              		.loc 1 556 0
 2137 031e FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 49


 557:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2138              		.loc 1 557 0
 2139 0322 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 558:main.c        **** 
 559:main.c        ****             
 560:main.c        ****     currentCopedent = necks[currentNeck];
 2140              		.loc 1 560 0
 2141 0326 2F4B     		ldr	r3, .L191+20
 2142 0328 1B68     		ldr	r3, [r3]
 2143 032a 2F4A     		ldr	r2, .L191+24
 2144 032c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2145 032e 2F4B     		ldr	r3, .L191+28
 2146 0330 1A70     		strb	r2, [r3]
 561:main.c        ****     CyDelay(10);
 2147              		.loc 1 561 0
 2148 0332 0A20     		movs	r0, #10
 2149 0334 FFF7FEFF 		bl	CyDelay
 562:main.c        ****     
 563:main.c        ****     //set up for the OLED screen's first write
 564:main.c        ****     I2Cbuff1[0] = 1<<6;
 2150              		.loc 1 564 0
 2151 0338 2D4B     		ldr	r3, .L191+32
 2152 033a 4022     		movs	r2, #64
 2153 033c 1A70     		strb	r2, [r3]
 565:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2154              		.loc 1 565 0
 2155 033e 0022     		movs	r2, #0
 2156 0340 0121     		movs	r1, #1
 2157 0342 7020     		movs	r0, #112
 2158 0344 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2159 0348 0346     		mov	r3, r0
 2160 034a 1A46     		mov	r2, r3
 2161 034c 294B     		ldr	r3, .L191+36
 2162 034e 1A60     		str	r2, [r3]
 566:main.c        ****     myGFX_init(128, 64);
 2163              		.loc 1 566 0
 2164 0350 4021     		movs	r1, #64
 2165 0352 8020     		movs	r0, #128
 2166 0354 FFF7FEFF 		bl	myGFX_init
 567:main.c        ****     myGFX_setFont(0);
 2167              		.loc 1 567 0
 2168 0358 0020     		movs	r0, #0
 2169 035a FFF7FEFF 		bl	myGFX_setFont
 568:main.c        ****     OLED_init(128, 64);
 2170              		.loc 1 568 0
 2171 035e 4021     		movs	r1, #64
 2172 0360 8020     		movs	r0, #128
 2173 0362 FFF7FEFF 		bl	OLED_init
 569:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2174              		.loc 1 569 0
 2175 0366 214B     		ldr	r3, .L191+28
 2176 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2177 036a 1846     		mov	r0, r3
 2178 036c 0323     		movs	r3, #3
 2179 036e 0022     		movs	r2, #0
 2180 0370 0221     		movs	r1, #2
 2181 0372 FFF7FEFF 		bl	OLEDwriteInt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 50


 570:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2182              		.loc 1 570 0
 2183 0376 FFF7FEFF 		bl	OLEDgetCursor
 2184 037a 0246     		mov	r2, r0
 2185 037c 0323     		movs	r3, #3
 2186 037e 0121     		movs	r1, #1
 2187 0380 1D48     		ldr	r0, .L191+40
 2188 0382 FFF7FEFF 		bl	OLEDwriteString
 571:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH, 
 2189              		.loc 1 571 0
 2190 0386 194B     		ldr	r3, .L191+28
 2191 0388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2192 038a 1A46     		mov	r2, r3
 2193 038c 1346     		mov	r3, r2
 2194 038e DB00     		lsls	r3, r3, #3
 2195 0390 9B1A     		subs	r3, r3, r2
 2196 0392 5B00     		lsls	r3, r3, #1
 2197 0394 194A     		ldr	r2, .L191+44
 2198 0396 9C18     		adds	r4, r3, r2
 2199 0398 FFF7FEFF 		bl	OLEDgetCursor
 2200 039c 0246     		mov	r2, r0
 2201 039e 0323     		movs	r3, #3
 2202 03a0 0821     		movs	r1, #8
 2203 03a2 2046     		mov	r0, r4
 2204 03a4 FFF7FEFF 		bl	OLEDwriteString
 572:main.c        ****     OLED_draw(128, 64);
 2205              		.loc 1 572 0
 2206 03a8 4021     		movs	r1, #64
 2207 03aa 8020     		movs	r0, #128
 2208 03ac FFF7FEFF 		bl	OLED_draw
 573:main.c        ****     
 574:main.c        ****     
 575:main.c        ****     I2Cbuff1[0] = 1<<2;
 2209              		.loc 1 575 0
 2210 03b0 0F4B     		ldr	r3, .L191+32
 2211 03b2 0422     		movs	r2, #4
 2212 03b4 1A70     		strb	r2, [r3]
 576:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2213              		.loc 1 576 0
 2214 03b6 0022     		movs	r2, #0
 2215 03b8 0121     		movs	r1, #1
 2216 03ba 7020     		movs	r0, #112
 2217 03bc FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2218 03c0 0346     		mov	r3, r0
 2219 03c2 1A46     		mov	r2, r3
 2220 03c4 0B4B     		ldr	r3, .L191+36
 2221 03c6 1A60     		str	r2, [r3]
 2222              	.LBB16:
 577:main.c        **** 
 578:main.c        ****     for (int w = 0; w < 8; w++)
 2223              		.loc 1 578 0
 2224 03c8 0023     		movs	r3, #0
 2225 03ca 3B66     		str	r3, [r7, #96]
 2226 03cc 2EE0     		b	.L81
 2227              	.L192:
 2228 03ce 00BF     		.align	2
 2229              	.L191:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 51


 2230 03d0 00000000 		.word	macroNamesArray
 2231 03d4 00000000 		.word	presetAlreadyDisplayed
 2232 03d8 00000000 		.word	Em_EEPROM_em_EepromStorage
 2233 03dc 00000000 		.word	eepromReturnValue
 2234 03e0 00000000 		.word	Vbus_function
 2235 03e4 00000000 		.word	currentNeck
 2236 03e8 00000000 		.word	necks
 2237 03ec 00000000 		.word	currentCopedent
 2238 03f0 00000000 		.word	I2Cbuff1
 2239 03f4 00000000 		.word	status
 2240 03f8 00040000 		.word	.LC0
 2241 03fc 00000000 		.word	copedentNamesArray
 2242              	.L82:
 579:main.c        ****     {
 580:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 2243              		.loc 1 580 0 discriminator 3
 2244 0400 3B6E     		ldr	r3, [r7, #96]
 2245 0402 DBB2     		uxtb	r3, r3
 2246 0404 0833     		adds	r3, r3, #8
 2247 0406 DAB2     		uxtb	r2, r3
 2248 0408 A24B     		ldr	r3, .L193
 2249 040a 1A70     		strb	r2, [r3]
 581:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2250              		.loc 1 581 0 discriminator 3
 2251 040c 0022     		movs	r2, #0
 2252 040e 0121     		movs	r1, #1
 2253 0410 7220     		movs	r0, #114
 2254 0412 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2255 0416 0346     		mov	r3, r0
 2256 0418 1A46     		mov	r2, r3
 2257 041a 9F4B     		ldr	r3, .L193+4
 2258 041c 1A60     		str	r2, [r3]
 582:main.c        ****         OLED_init(128, 32);
 2259              		.loc 1 582 0 discriminator 3
 2260 041e 2021     		movs	r1, #32
 2261 0420 8020     		movs	r0, #128
 2262 0422 FFF7FEFF 		bl	OLED_init
 578:main.c        ****     {
 2263              		.loc 1 578 0 discriminator 3
 2264 0426 3B6E     		ldr	r3, [r7, #96]
 2265 0428 0133     		adds	r3, r3, #1
 2266 042a 3B66     		str	r3, [r7, #96]
 2267              	.L81:
 578:main.c        ****     {
 2268              		.loc 1 578 0 is_stmt 0 discriminator 1
 2269 042c 3B6E     		ldr	r3, [r7, #96]
 2270 042e 072B     		cmp	r3, #7
 2271 0430 E6DD     		ble	.L82
 2272              	.LBE16:
 583:main.c        ****         //OLEDwriteInt(w , 1, 0,FirstLine);
 584:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 585:main.c        ****         //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OL
 586:main.c        ****        // OLED_draw(128, 32);
 587:main.c        ****     }
 588:main.c        **** 
 589:main.c        ****     //initialize the macro knob adc to scan all knobs
 590:main.c        ****     I2Cbuff1[0] = 1<<2;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 52


 2273              		.loc 1 590 0 is_stmt 1
 2274 0432 984B     		ldr	r3, .L193
 2275 0434 0422     		movs	r2, #4
 2276 0436 1A70     		strb	r2, [r3]
 591:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2277              		.loc 1 591 0
 2278 0438 0022     		movs	r2, #0
 2279 043a 0121     		movs	r1, #1
 2280 043c 7020     		movs	r0, #112
 2281 043e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2282 0442 0346     		mov	r3, r0
 2283 0444 1A46     		mov	r2, r3
 2284 0446 944B     		ldr	r3, .L193+4
 2285 0448 1A60     		str	r2, [r3]
 592:main.c        ****     main_counter = 9;
 2286              		.loc 1 592 0
 2287 044a 944B     		ldr	r3, .L193+8
 2288 044c 0922     		movs	r2, #9
 2289 044e 1A70     		strb	r2, [r3]
 593:main.c        **** 
 594:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 2290              		.loc 1 594 0
 2291 0450 904B     		ldr	r3, .L193
 2292 0452 0F22     		movs	r2, #15
 2293 0454 1A70     		strb	r2, [r3]
 595:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 2294              		.loc 1 595 0
 2295 0456 0022     		movs	r2, #0
 2296 0458 0121     		movs	r1, #1
 2297 045a 3520     		movs	r0, #53
 2298 045c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2299 0460 0346     		mov	r3, r0
 2300 0462 1A46     		mov	r2, r3
 2301 0464 8C4B     		ldr	r3, .L193+4
 2302 0466 1A60     		str	r2, [r3]
 596:main.c        ****     
 597:main.c        **** #if 0
 598:main.c        ****     while(1)
 599:main.c        ****     {
 600:main.c        ****         for (int i=  0; i < 4; i++)
 601:main.c        ****         {
 602:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 603:main.c        ****             if (knobs[i] != prevKnobs[i])
 604:main.c        ****             {
 605:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 606:main.c        ****             }
 607:main.c        ****             prevKnobs[i] = knobs[i];
 608:main.c        ****         }
 609:main.c        ****         
 610:main.c        **** 
 611:main.c        ****         I2Cbuff1[0] = 1<<0;
 612:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 613:main.c        **** 
 614:main.c        ****         //CyDelayUs(100);
 615:main.c        ****         I2Cbuff1[0] = 0x0E;
 616:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 617:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 53


 618:main.c        ****        // CyDelayUs(100);
 619:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 620:main.c        ****         angle[0] +=  I2Cbuff2[1];
 621:main.c        ****         
 622:main.c        ****     }
 623:main.c        ****     #endif
 624:main.c        ****     //OLEDclear();
 625:main.c        ****     /*
 626:main.c        ****     while(1)
 627:main.c        ****     {
 628:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 629:main.c        ****         OLED_draw();
 630:main.c        ****         CyDelay(1);
 631:main.c        ****         
 632:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 633:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 634:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 635:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
 636:main.c        ****         for (int i=  0; i < 4; i++)
 637:main.c        ****         {
 638:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 639:main.c        ****         }
 640:main.c        **** 
 641:main.c        ****     }
 642:main.c        ****     */
 643:main.c        **** #if 0
 644:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 645:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 646:main.c        **** 
 647:main.c        **** 
 648:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
 649:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 650:main.c        **** 
 651:main.c        ****     //address 0x48
 652:main.c        ****     I2Cbuff1[0] = 0x1;
 653:main.c        ****     I2Cbuff1[1] = 0b11000000;
 654:main.c        ****     I2Cbuff1[2] = 0b10000011;
 655:main.c        **** 
 656:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 657:main.c        ****     #endif
 658:main.c        ****     
 659:main.c        ****     SPIS_1_Start();  
 2303              		.loc 1 659 0
 2304 0468 FFF7FEFF 		bl	SPIS_1_Start
 660:main.c        ****     SPIM_1_Start();  
 2305              		.loc 1 660 0
 2306 046c FFF7FEFF 		bl	SPIM_1_Start
 661:main.c        ****     SPIS_2_Start(); 
 2307              		.loc 1 661 0
 2308 0470 FFF7FEFF 		bl	SPIS_2_Start
 662:main.c        ****     DmaTxConfiguration();
 2309              		.loc 1 662 0
 2310 0474 FFF7FEFF 		bl	DmaTxConfiguration
 663:main.c        ****     DmaRxConfiguration();
 2311              		.loc 1 663 0
 2312 0478 FFF7FEFF 		bl	DmaRxConfiguration
 664:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 54


 2313              		.loc 1 664 0
 2314 047c 8848     		ldr	r0, .L193+12
 2315 047e FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 665:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2316              		.loc 1 665 0
 2317 0482 8848     		ldr	r0, .L193+16
 2318 0484 FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 666:main.c        ****     
 667:main.c        ****     myArray[30] = 254;
 2319              		.loc 1 667 0
 2320 0488 874B     		ldr	r3, .L193+20
 2321 048a FE22     		movs	r2, #254
 2322 048c 9A77     		strb	r2, [r3, #30]
 668:main.c        ****     myArray[31] = 253;
 2323              		.loc 1 668 0
 2324 048e 864B     		ldr	r3, .L193+20
 2325 0490 FD22     		movs	r2, #253
 2326 0492 DA77     		strb	r2, [r3, #31]
 669:main.c        **** 
 670:main.c        ****     main_counter = 0;
 2327              		.loc 1 670 0
 2328 0494 814B     		ldr	r3, .L193+8
 2329 0496 0022     		movs	r2, #0
 2330 0498 1A70     		strb	r2, [r3]
 2331              	.L186:
 671:main.c        **** 
 672:main.c        **** 	for(;;)
 673:main.c        ****     {
 674:main.c        ****         
 675:main.c        ****         if (parseThatMF)
 2332              		.loc 1 675 0
 2333 049a 844B     		ldr	r3, .L193+24
 2334 049c 1B78     		ldrb	r3, [r3]
 2335 049e DBB2     		uxtb	r3, r3
 2336 04a0 002B     		cmp	r3, #0
 2337 04a2 01D0     		beq	.L83
 676:main.c        ****         {
 677:main.c        ****             parseSysex();
 2338              		.loc 1 677 0
 2339 04a4 FFF7FEFF 		bl	parseSysex
 2340              	.L83:
 678:main.c        ****         }
 679:main.c        ****         
 680:main.c        ****         //if (newDataFlag)
 681:main.c        ****         //{
 682:main.c        ****         //}
 683:main.c        ****             /*
 684:main.c        ****             for (int i = 0; i < 5; i++)
 685:main.c        ****             {
 686:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 687:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 688:main.c        ****                 I2C_1_MasterSendStop(); 
 689:main.c        **** 
 690:main.c        **** 
 691:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 692:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 693:main.c        ****                 //I2C_1_MasterSendStop();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 55


 694:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
 695:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 696:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 697:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 698:main.c        ****                  I2C_1_MasterSendStop(); 
 699:main.c        ****                 
 700:main.c        ****                 CyDelay(1);
 701:main.c        **** 
 702:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 703:main.c        ****                 I2C_1_MasterWriteByte(0x01);
 704:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 705:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 706:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 707:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 708:main.c        ****                 I2C_1_MasterSendStop(); 
 709:main.c        ****                 
 710:main.c        ****                 CyDelay(2);
 711:main.c        **** 
 712:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 713:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 714:main.c        ****                I2C_1_MasterWriteByte(0x80);
 715:main.c        ****                 I2C_1_MasterSendStop(); 
 716:main.c        ****                CyDelay(2);
 717:main.c        ****             }
 718:main.c        ****         */
 719:main.c        ****         //set main i2c mux
 720:main.c        ****     
 721:main.c        ****         
 722:main.c        ****         /*
 723:main.c        ****         for (int i = 0; i < 4; i++)
 724:main.c        ****         {
 725:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 726:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 727:main.c        ****             I2C_1_MasterSendStop(); 
 728:main.c        **** 
 729:main.c        **** 
 730:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 731:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 732:main.c        ****             //I2C_1_MasterSendStop();
 733:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 734:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 735:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 736:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
 737:main.c        ****              I2C_1_MasterSendStop(); 
 738:main.c        ****             
 739:main.c        ****             CyDelay(1);
 740:main.c        **** 
 741:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 742:main.c        ****             I2C_1_MasterWriteByte(0x01);
 743:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 744:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 745:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 746:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 747:main.c        ****             I2C_1_MasterSendStop(); 
 748:main.c        ****             
 749:main.c        ****             CyDelay(2);
 750:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 56


 751:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 752:main.c        ****             I2C_1_MasterWriteByte(0xff);
 753:main.c        ****             I2C_1_MasterWriteByte(0x80);
 754:main.c        ****             I2C_1_MasterSendStop(); 
 755:main.c        ****            CyDelay(2);
 756:main.c        ****         }
 757:main.c        ****             */
 758:main.c        ****         /*    
 759:main.c        ****         if (main_counter == 6)
 760:main.c        ****         {
 761:main.c        ****             main_counter = 8;
 762:main.c        ****         }
 763:main.c        ****         */    
 764:main.c        ****         testpin3_Write(1);
 2341              		.loc 1 764 0
 2342 04a8 0120     		movs	r0, #1
 2343 04aa FFF7FEFF 		bl	testpin3_Write
 765:main.c        ****        //sense levers and pedals
 766:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2344              		.loc 1 766 0
 2345 04ae 7B4B     		ldr	r3, .L193+8
 2346 04b0 1B78     		ldrb	r3, [r3]
 2347 04b2 DBB2     		uxtb	r3, r3
 2348 04b4 1A46     		mov	r2, r3
 2349 04b6 7E4B     		ldr	r3, .L193+28
 2350 04b8 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2351 04bc 7D4B     		ldr	r3, .L193+32
 2352 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2353 04c0 9A42     		cmp	r2, r3
 2354 04c2 13D0     		beq	.L84
 2355              	.LBB17:
 767:main.c        ****         {
 768:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 2356              		.loc 1 768 0
 2357 04c4 754B     		ldr	r3, .L193+8
 2358 04c6 1B78     		ldrb	r3, [r3]
 2359 04c8 DBB2     		uxtb	r3, r3
 2360 04ca 1A46     		mov	r2, r3
 2361 04cc 784B     		ldr	r3, .L193+28
 2362 04ce 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2363 04d2 1A46     		mov	r2, r3
 2364 04d4 0123     		movs	r3, #1
 2365 04d6 9340     		lsls	r3, r3, r2
 2366 04d8 DAB2     		uxtb	r2, r3
 2367 04da 6E4B     		ldr	r3, .L193
 2368 04dc 1A70     		strb	r2, [r3]
 769:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2369              		.loc 1 769 0
 2370 04de 0022     		movs	r2, #0
 2371 04e0 0121     		movs	r1, #1
 2372 04e2 7020     		movs	r0, #112
 2373 04e4 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2374 04e8 0346     		mov	r3, r0
 2375 04ea BB76     		strb	r3, [r7, #26]
 2376              	.L84:
 2377              	.LBE17:
 770:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 57


 771:main.c        ****         last_mux = mux_states[main_counter][0];
 2378              		.loc 1 771 0
 2379 04ec 6B4B     		ldr	r3, .L193+8
 2380 04ee 1B78     		ldrb	r3, [r3]
 2381 04f0 DBB2     		uxtb	r3, r3
 2382 04f2 1A46     		mov	r2, r3
 2383 04f4 6E4B     		ldr	r3, .L193+28
 2384 04f6 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2385 04fa 6E4B     		ldr	r3, .L193+32
 2386 04fc 1A70     		strb	r2, [r3]
 772:main.c        ****         
 773:main.c        ****         
 774:main.c        ****         CyDelayUs(10);
 2387              		.loc 1 774 0
 2388 04fe 0A20     		movs	r0, #10
 2389 0500 FFF7FEFF 		bl	CyDelayUs
 775:main.c        ****         if (mux_states[main_counter][0] == 5)
 2390              		.loc 1 775 0
 2391 0504 654B     		ldr	r3, .L193+8
 2392 0506 1B78     		ldrb	r3, [r3]
 2393 0508 DBB2     		uxtb	r3, r3
 2394 050a 1A46     		mov	r2, r3
 2395 050c 684B     		ldr	r3, .L193+28
 2396 050e 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2397 0512 052B     		cmp	r3, #5
 2398 0514 1DD1     		bne	.L85
 776:main.c        ****         {
 777:main.c        ****             if (!i2c_skipped[main_counter])
 2399              		.loc 1 777 0
 2400 0516 614B     		ldr	r3, .L193+8
 2401 0518 1B78     		ldrb	r3, [r3]
 2402 051a DBB2     		uxtb	r3, r3
 2403 051c 1A46     		mov	r2, r3
 2404 051e 664B     		ldr	r3, .L193+36
 2405 0520 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2406 0522 002B     		cmp	r3, #0
 2407 0524 15D1     		bne	.L85
 778:main.c        ****             {
 779:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 2408              		.loc 1 779 0
 2409 0526 5D4B     		ldr	r3, .L193+8
 2410 0528 1B78     		ldrb	r3, [r3]
 2411 052a DBB2     		uxtb	r3, r3
 2412 052c 604A     		ldr	r2, .L193+28
 2413 052e 5B00     		lsls	r3, r3, #1
 2414 0530 1344     		add	r3, r3, r2
 2415 0532 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2416 0534 1A46     		mov	r2, r3
 2417 0536 0123     		movs	r3, #1
 2418 0538 9340     		lsls	r3, r3, r2
 2419 053a DAB2     		uxtb	r2, r3
 2420 053c 554B     		ldr	r3, .L193
 2421 053e 1A70     		strb	r2, [r3]
 780:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 2422              		.loc 1 780 0
 2423 0540 0022     		movs	r2, #0
 2424 0542 0121     		movs	r1, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 58


 2425 0544 7120     		movs	r0, #113
 2426 0546 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2427 054a 0346     		mov	r3, r0
 2428 054c 1A46     		mov	r2, r3
 2429 054e 524B     		ldr	r3, .L193+4
 2430 0550 1A60     		str	r2, [r3]
 2431              	.L85:
 781:main.c        ****             }
 782:main.c        ****         }
 783:main.c        **** 
 784:main.c        ****         CyDelayUs(10);
 2432              		.loc 1 784 0
 2433 0552 0A20     		movs	r0, #10
 2434 0554 FFF7FEFF 		bl	CyDelayUs
 785:main.c        ****         //if it's a hall sensor
 786:main.c        **** 
 787:main.c        ****         //temporarily don't scan vertical knee lever, should be <10 normally
 788:main.c        ****         if (main_counter < 9)
 2435              		.loc 1 788 0
 2436 0558 504B     		ldr	r3, .L193+8
 2437 055a 1B78     		ldrb	r3, [r3]
 2438 055c DBB2     		uxtb	r3, r3
 2439 055e 082B     		cmp	r3, #8
 2440 0560 7AD8     		bhi	.L86
 789:main.c        ****         {
 790:main.c        ****             if (!i2c_skipped[main_counter])
 2441              		.loc 1 790 0
 2442 0562 4E4B     		ldr	r3, .L193+8
 2443 0564 1B78     		ldrb	r3, [r3]
 2444 0566 DBB2     		uxtb	r3, r3
 2445 0568 1A46     		mov	r2, r3
 2446 056a 534B     		ldr	r3, .L193+36
 2447 056c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2448 056e 002B     		cmp	r3, #0
 2449 0570 72D1     		bne	.L86
 791:main.c        ****             {
 792:main.c        ****                 //CyDelayUs(100);
 793:main.c        ****                 I2Cbuff1[0] = 0x0E;
 2450              		.loc 1 793 0
 2451 0572 484B     		ldr	r3, .L193
 2452 0574 0E22     		movs	r2, #14
 2453 0576 1A70     		strb	r2, [r3]
 794:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 2454              		.loc 1 794 0
 2455 0578 0222     		movs	r2, #2
 2456 057a 0121     		movs	r1, #1
 2457 057c 3620     		movs	r0, #54
 2458 057e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2459 0582 0346     		mov	r3, r0
 2460 0584 1A46     		mov	r2, r3
 2461 0586 444B     		ldr	r3, .L193+4
 2462 0588 1A60     		str	r2, [r3]
 795:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 2463              		.loc 1 795 0
 2464 058a 0122     		movs	r2, #1
 2465 058c 0221     		movs	r1, #2
 2466 058e 3620     		movs	r0, #54
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 59


 2467 0590 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2468 0594 0346     		mov	r3, r0
 2469 0596 1A46     		mov	r2, r3
 2470 0598 3F4B     		ldr	r3, .L193+4
 2471 059a 1A60     		str	r2, [r3]
 796:main.c        ****                // CyDelayUs(100);
 797:main.c        ****                 angle[main_counter] = I2Cbuff2[0] << 8;
 2472              		.loc 1 797 0
 2473 059c 3F4B     		ldr	r3, .L193+8
 2474 059e 1B78     		ldrb	r3, [r3]
 2475 05a0 DBB2     		uxtb	r3, r3
 2476 05a2 1A46     		mov	r2, r3
 2477 05a4 454B     		ldr	r3, .L193+40
 2478 05a6 1B78     		ldrb	r3, [r3]
 2479 05a8 DBB2     		uxtb	r3, r3
 2480 05aa 9BB2     		uxth	r3, r3
 2481 05ac 1B02     		lsls	r3, r3, #8
 2482 05ae 99B2     		uxth	r1, r3
 2483 05b0 434B     		ldr	r3, .L193+44
 2484 05b2 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 798:main.c        ****                 angle[main_counter] +=  I2Cbuff2[1];
 2485              		.loc 1 798 0
 2486 05b6 414B     		ldr	r3, .L193+40
 2487 05b8 5B78     		ldrb	r3, [r3, #1]
 2488 05ba D8B2     		uxtb	r0, r3
 2489 05bc 374B     		ldr	r3, .L193+8
 2490 05be 1B78     		ldrb	r3, [r3]
 2491 05c0 DBB2     		uxtb	r3, r3
 2492 05c2 1946     		mov	r1, r3
 2493 05c4 1A46     		mov	r2, r3
 2494 05c6 3E4B     		ldr	r3, .L193+44
 2495 05c8 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2496 05cc 83B2     		uxth	r3, r0
 2497 05ce 1344     		add	r3, r3, r2
 2498 05d0 9AB2     		uxth	r2, r3
 2499 05d2 3B4B     		ldr	r3, .L193+44
 2500 05d4 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 799:main.c        ****                 
 800:main.c        ****                 if (calibrationMode)
 2501              		.loc 1 800 0
 2502 05d8 3A4B     		ldr	r3, .L193+48
 2503 05da 1B68     		ldr	r3, [r3]
 2504 05dc 002B     		cmp	r3, #0
 2505 05de 3BD0     		beq	.L86
 801:main.c        ****                 {
 802:main.c        ****                     if (angle[main_counter] < pedals_low[main_counter])
 2506              		.loc 1 802 0
 2507 05e0 2E4B     		ldr	r3, .L193+8
 2508 05e2 1B78     		ldrb	r3, [r3]
 2509 05e4 DBB2     		uxtb	r3, r3
 2510 05e6 1A46     		mov	r2, r3
 2511 05e8 354B     		ldr	r3, .L193+44
 2512 05ea 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2513 05ee 2B4B     		ldr	r3, .L193+8
 2514 05f0 1B78     		ldrb	r3, [r3]
 2515 05f2 DBB2     		uxtb	r3, r3
 2516 05f4 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 60


 2517 05f6 344B     		ldr	r3, .L193+52
 2518 05f8 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2519 05fc 9A42     		cmp	r2, r3
 2520 05fe 0DD2     		bcs	.L87
 803:main.c        ****                     {
 804:main.c        ****                         pedals_low[main_counter] = angle[main_counter];
 2521              		.loc 1 804 0
 2522 0600 264B     		ldr	r3, .L193+8
 2523 0602 1B78     		ldrb	r3, [r3]
 2524 0604 DBB2     		uxtb	r3, r3
 2525 0606 1A46     		mov	r2, r3
 2526 0608 244B     		ldr	r3, .L193+8
 2527 060a 1B78     		ldrb	r3, [r3]
 2528 060c DBB2     		uxtb	r3, r3
 2529 060e 1946     		mov	r1, r3
 2530 0610 2B4B     		ldr	r3, .L193+44
 2531 0612 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2532 0616 2C4B     		ldr	r3, .L193+52
 2533 0618 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2534              	.L87:
 805:main.c        ****                         
 806:main.c        ****                     }
 807:main.c        ****                     if (angle[main_counter] > pedals_high[main_counter])
 2535              		.loc 1 807 0
 2536 061c 1F4B     		ldr	r3, .L193+8
 2537 061e 1B78     		ldrb	r3, [r3]
 2538 0620 DBB2     		uxtb	r3, r3
 2539 0622 1A46     		mov	r2, r3
 2540 0624 264B     		ldr	r3, .L193+44
 2541 0626 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2542 062a 1C4B     		ldr	r3, .L193+8
 2543 062c 1B78     		ldrb	r3, [r3]
 2544 062e DBB2     		uxtb	r3, r3
 2545 0630 1946     		mov	r1, r3
 2546 0632 264B     		ldr	r3, .L193+56
 2547 0634 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2548 0638 9A42     		cmp	r2, r3
 2549 063a 0DD9     		bls	.L86
 808:main.c        ****                     {
 809:main.c        ****                          pedals_high[main_counter] = angle[main_counter];
 2550              		.loc 1 809 0
 2551 063c 174B     		ldr	r3, .L193+8
 2552 063e 1B78     		ldrb	r3, [r3]
 2553 0640 DBB2     		uxtb	r3, r3
 2554 0642 1A46     		mov	r2, r3
 2555 0644 154B     		ldr	r3, .L193+8
 2556 0646 1B78     		ldrb	r3, [r3]
 2557 0648 DBB2     		uxtb	r3, r3
 2558 064a 1946     		mov	r1, r3
 2559 064c 1C4B     		ldr	r3, .L193+44
 2560 064e 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2561 0652 1E4B     		ldr	r3, .L193+56
 2562 0654 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2563              	.L86:
 810:main.c        ****                     }
 811:main.c        ****                 }
 812:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 61


 813:main.c        ****         }
 814:main.c        ****         
 815:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 816:main.c        ****         if (main_counter == 9)
 2564              		.loc 1 816 0
 2565 0658 104B     		ldr	r3, .L193+8
 2566 065a 1B78     		ldrb	r3, [r3]
 2567 065c DBB2     		uxtb	r3, r3
 2568 065e 092B     		cmp	r3, #9
 2569 0660 40F0A080 		bne	.L88
 817:main.c        ****         {
 818:main.c        ****             if (!i2c_skipped[main_counter])
 2570              		.loc 1 818 0
 2571 0664 0D4B     		ldr	r3, .L193+8
 2572 0666 1B78     		ldrb	r3, [r3]
 2573 0668 DBB2     		uxtb	r3, r3
 2574 066a 1A46     		mov	r2, r3
 2575 066c 124B     		ldr	r3, .L193+36
 2576 066e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2577 0670 002B     		cmp	r3, #0
 2578 0672 40F0DA80 		bne	.L92
 819:main.c        ****             {
 820:main.c        ****                 //scan the knob adc
 821:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2579              		.loc 1 821 0
 2580 0676 074B     		ldr	r3, .L193
 2581 0678 0022     		movs	r2, #0
 2582 067a 1A70     		strb	r2, [r3]
 822:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 2583              		.loc 1 822 0
 2584 067c 0022     		movs	r2, #0
 2585 067e 1021     		movs	r1, #16
 2586 0680 3520     		movs	r0, #53
 2587 0682 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2588 0686 0346     		mov	r3, r0
 2589 0688 1A46     		mov	r2, r3
 2590 068a 034B     		ldr	r3, .L193+4
 2591 068c 1A60     		str	r2, [r3]
 2592              	.LBB18:
 823:main.c        ****                 for (int i = 0; i < NUM_MACROS; i++)
 2593              		.loc 1 823 0
 2594 068e 0023     		movs	r3, #0
 2595 0690 FB65     		str	r3, [r7, #92]
 2596 0692 3EE0     		b	.L90
 2597              	.L194:
 2598              		.align	2
 2599              	.L193:
 2600 0694 00000000 		.word	I2Cbuff1
 2601 0698 00000000 		.word	status
 2602 069c 00000000 		.word	main_counter
 2603 06a0 00000000 		.word	spis_1_ss
 2604 06a4 00000000 		.word	spis_2_ss
 2605 06a8 00000000 		.word	myArray
 2606 06ac 00000000 		.word	parseThatMF
 2607 06b0 00000000 		.word	mux_states
 2608 06b4 00000000 		.word	last_mux
 2609 06b8 00000000 		.word	i2c_skipped
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 62


 2610 06bc 00000000 		.word	I2Cbuff2
 2611 06c0 00000000 		.word	angle
 2612 06c4 00000000 		.word	calibrationMode
 2613 06c8 00000000 		.word	pedals_low
 2614 06cc 00000000 		.word	pedals_high
 2615              	.L91:
 2616              	.LBB19:
 824:main.c        ****                 {
 825:main.c        ****                    uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[i*2] & 255)) & 4095; // nece
 2617              		.loc 1 825 0 discriminator 3
 2618 06d0 FB6D     		ldr	r3, [r7, #92]
 2619 06d2 5B00     		lsls	r3, r3, #1
 2620 06d4 AD4A     		ldr	r2, .L195
 2621 06d6 D35C     		ldrb	r3, [r2, r3]
 2622 06d8 DBB2     		uxtb	r3, r3
 2623 06da 9BB2     		uxth	r3, r3
 2624 06dc 1B02     		lsls	r3, r3, #8
 2625 06de 9AB2     		uxth	r2, r3
 2626 06e0 FB6D     		ldr	r3, [r7, #92]
 2627 06e2 5B00     		lsls	r3, r3, #1
 2628 06e4 A949     		ldr	r1, .L195
 2629 06e6 CB5C     		ldrb	r3, [r1, r3]
 2630 06e8 DBB2     		uxtb	r3, r3
 2631 06ea 9BB2     		uxth	r3, r3
 2632 06ec 1344     		add	r3, r3, r2
 2633 06ee 9BB2     		uxth	r3, r3
 2634 06f0 C3F30B03 		ubfx	r3, r3, #0, #12
 2635 06f4 7B80     		strh	r3, [r7, #2]	@ movhi
 826:main.c        ****                     macroKnobValues[i] = 255 - (tempInt >> 4); //now squish it down to 8 bit for se
 2636              		.loc 1 826 0 discriminator 3
 2637 06f6 7B88     		ldrh	r3, [r7, #2]
 2638 06f8 1B09     		lsrs	r3, r3, #4
 2639 06fa 9BB2     		uxth	r3, r3
 2640 06fc DBB2     		uxtb	r3, r3
 2641 06fe DB43     		mvns	r3, r3
 2642 0700 D9B2     		uxtb	r1, r3
 2643 0702 A34A     		ldr	r2, .L195+4
 2644 0704 FB6D     		ldr	r3, [r7, #92]
 2645 0706 1344     		add	r3, r3, r2
 2646 0708 0A46     		mov	r2, r1
 2647 070a 1A70     		strb	r2, [r3]
 2648              	.LBE19:
 823:main.c        ****                 for (int i = 0; i < NUM_MACROS; i++)
 2649              		.loc 1 823 0 discriminator 3
 2650 070c FB6D     		ldr	r3, [r7, #92]
 2651 070e 0133     		adds	r3, r3, #1
 2652 0710 FB65     		str	r3, [r7, #92]
 2653              	.L90:
 823:main.c        ****                 for (int i = 0; i < NUM_MACROS; i++)
 2654              		.loc 1 823 0 is_stmt 0 discriminator 1
 2655 0712 FB6D     		ldr	r3, [r7, #92]
 2656 0714 072B     		cmp	r3, #7
 2657 0716 DBDD     		ble	.L91
 2658              	.LBE18:
 827:main.c        ****                 }
 828:main.c        ****                 //
 829:main.c        ****                 if (macroOLEDWaitingToSend == 2)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 63


 2659              		.loc 1 829 0 is_stmt 1
 2660 0718 9E4B     		ldr	r3, .L195+8
 2661 071a 1B68     		ldr	r3, [r3]
 2662 071c 022B     		cmp	r3, #2
 2663 071e 40F08480 		bne	.L92
 830:main.c        ****                 {
 831:main.c        ****                     //send the data to the little macro OLED screens
 832:main.c        ****                     
 833:main.c        ****                     I2Cbuff1[0] = (1 << 3) + whichMacro;
 2664              		.loc 1 833 0
 2665 0722 9D4B     		ldr	r3, .L195+12
 2666 0724 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2667 0726 0833     		adds	r3, r3, #8
 2668 0728 DAB2     		uxtb	r2, r3
 2669 072a 9C4B     		ldr	r3, .L195+16
 2670 072c 1A70     		strb	r2, [r3]
 834:main.c        ****                     status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2671              		.loc 1 834 0
 2672 072e 0022     		movs	r2, #0
 2673 0730 0121     		movs	r1, #1
 2674 0732 7220     		movs	r0, #114
 2675 0734 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2676 0738 0346     		mov	r3, r0
 2677 073a 1A46     		mov	r2, r3
 2678 073c 984B     		ldr	r3, .L195+20
 2679 073e 1A60     		str	r2, [r3]
 835:main.c        ****                     //OLED_init(128, 32);
 836:main.c        ****                     OLEDclear(128, 32);
 2680              		.loc 1 836 0
 2681 0740 2021     		movs	r1, #32
 2682 0742 8020     		movs	r0, #128
 2683 0744 FFF7FEFF 		bl	OLEDclear
 837:main.c        ****                     //OLEDwriteInt(w , 1, 0,FirstLine);
 838:main.c        ****                     //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 839:main.c        ****                     myGFX_setFont(1);
 2684              		.loc 1 839 0
 2685 0748 0120     		movs	r0, #1
 2686 074a FFF7FEFF 		bl	myGFX_setFont
 840:main.c        ****                     //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
 841:main.c        ****                     OLEDwriteString((char *)&macroNamesArray[patchNum][whichMacro][0], MACRO_CLIPPE
 2687              		.loc 1 841 0
 2688 074e 954B     		ldr	r3, .L195+24
 2689 0750 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2690 0752 1946     		mov	r1, r3
 2691 0754 904B     		ldr	r3, .L195+12
 2692 0756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2693 0758 1A46     		mov	r2, r3
 2694 075a D200     		lsls	r2, r2, #3
 2695 075c D21A     		subs	r2, r2, r3
 2696 075e 5300     		lsls	r3, r2, #1
 2697 0760 1A46     		mov	r2, r3
 2698 0762 0B46     		mov	r3, r1
 2699 0764 DB00     		lsls	r3, r3, #3
 2700 0766 5B1A     		subs	r3, r3, r1
 2701 0768 1B01     		lsls	r3, r3, #4
 2702 076a 1344     		add	r3, r3, r2
 2703 076c 8E4A     		ldr	r2, .L195+28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 64


 2704 076e 9818     		adds	r0, r3, r2
 2705 0770 0123     		movs	r3, #1
 2706 0772 0022     		movs	r2, #0
 2707 0774 0821     		movs	r1, #8
 2708 0776 FFF7FEFF 		bl	OLEDwriteString
 842:main.c        ****                     OLED_draw(128, 32);
 2709              		.loc 1 842 0
 2710 077a 2021     		movs	r1, #32
 2711 077c 8020     		movs	r0, #128
 2712 077e FFF7FEFF 		bl	OLED_draw
 843:main.c        **** 
 844:main.c        ****                     whichMacro++;
 2713              		.loc 1 844 0
 2714 0782 854B     		ldr	r3, .L195+12
 2715 0784 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2716 0786 0133     		adds	r3, r3, #1
 2717 0788 DAB2     		uxtb	r2, r3
 2718 078a 834B     		ldr	r3, .L195+12
 2719 078c 1A70     		strb	r2, [r3]
 845:main.c        ****                     if (whichMacro >=8)
 2720              		.loc 1 845 0
 2721 078e 824B     		ldr	r3, .L195+12
 2722 0790 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2723 0792 072B     		cmp	r3, #7
 2724 0794 49D9     		bls	.L92
 846:main.c        ****                     {
 847:main.c        ****                         macroOLEDWaitingToSend = 0;
 2725              		.loc 1 847 0
 2726 0796 7F4B     		ldr	r3, .L195+8
 2727 0798 0022     		movs	r2, #0
 2728 079a 1A60     		str	r2, [r3]
 848:main.c        ****                         whichMacro = 0;
 2729              		.loc 1 848 0
 2730 079c 7E4B     		ldr	r3, .L195+12
 2731 079e 0022     		movs	r2, #0
 2732 07a0 1A70     		strb	r2, [r3]
 2733 07a2 42E0     		b	.L92
 2734              	.L88:
 849:main.c        ****                     }
 850:main.c        ****                 }
 851:main.c        ****             }
 852:main.c        ****             
 853:main.c        ****         }
 854:main.c        ****         //otherwise it's the ADC for the foot pedal
 855:main.c        ****         else if (main_counter == 10)
 2735              		.loc 1 855 0
 2736 07a4 814B     		ldr	r3, .L195+32
 2737 07a6 1B78     		ldrb	r3, [r3]
 2738 07a8 DBB2     		uxtb	r3, r3
 2739 07aa 0A2B     		cmp	r3, #10
 2740 07ac 26D1     		bne	.L93
 856:main.c        ****         {
 857:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 858:main.c        ****             if (!i2c_skipped[main_counter])
 2741              		.loc 1 858 0
 2742 07ae 7F4B     		ldr	r3, .L195+32
 2743 07b0 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 65


 2744 07b2 DBB2     		uxtb	r3, r3
 2745 07b4 1A46     		mov	r2, r3
 2746 07b6 7E4B     		ldr	r3, .L195+36
 2747 07b8 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2748 07ba 002B     		cmp	r3, #0
 2749 07bc 35D1     		bne	.L92
 859:main.c        ****             {
 860:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2750              		.loc 1 860 0
 2751 07be 774B     		ldr	r3, .L195+16
 2752 07c0 0022     		movs	r2, #0
 2753 07c2 1A70     		strb	r2, [r3]
 861:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 2754              		.loc 1 861 0
 2755 07c4 0022     		movs	r2, #0
 2756 07c6 0221     		movs	r1, #2
 2757 07c8 4F20     		movs	r0, #79
 2758 07ca FFF7FEFF 		bl	I2C_MasterReadBlocking
 2759 07ce 0346     		mov	r3, r0
 2760 07d0 1A46     		mov	r2, r3
 2761 07d2 734B     		ldr	r3, .L195+20
 2762 07d4 1A60     		str	r2, [r3]
 862:main.c        ****                 volumePedal = I2Cbuff2[0] << 8;
 2763              		.loc 1 862 0
 2764 07d6 6D4B     		ldr	r3, .L195
 2765 07d8 1B78     		ldrb	r3, [r3]
 2766 07da DBB2     		uxtb	r3, r3
 2767 07dc 9BB2     		uxth	r3, r3
 2768 07de 1B02     		lsls	r3, r3, #8
 2769 07e0 9AB2     		uxth	r2, r3
 2770 07e2 744B     		ldr	r3, .L195+40
 2771 07e4 1A80     		strh	r2, [r3]	@ movhi
 863:main.c        ****                 volumePedal +=  I2Cbuff2[1];
 2772              		.loc 1 863 0
 2773 07e6 694B     		ldr	r3, .L195
 2774 07e8 5B78     		ldrb	r3, [r3, #1]
 2775 07ea DBB2     		uxtb	r3, r3
 2776 07ec 9AB2     		uxth	r2, r3
 2777 07ee 714B     		ldr	r3, .L195+40
 2778 07f0 1B88     		ldrh	r3, [r3]
 2779 07f2 1344     		add	r3, r3, r2
 2780 07f4 9AB2     		uxth	r2, r3
 2781 07f6 6F4B     		ldr	r3, .L195+40
 2782 07f8 1A80     		strh	r2, [r3]	@ movhi
 2783 07fa 16E0     		b	.L92
 2784              	.L93:
 864:main.c        ****             }
 865:main.c        ****         }
 866:main.c        ****         else
 867:main.c        ****         if (main_counter == 11)
 2785              		.loc 1 867 0
 2786 07fc 6B4B     		ldr	r3, .L195+32
 2787 07fe 1B78     		ldrb	r3, [r3]
 2788 0800 DBB2     		uxtb	r3, r3
 2789 0802 0B2B     		cmp	r3, #11
 2790 0804 11D1     		bne	.L92
 868:main.c        ****         { 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 66


 869:main.c        ****             if (mainOLEDWaitingToSend)
 2791              		.loc 1 869 0
 2792 0806 6C4B     		ldr	r3, .L195+44
 2793 0808 1B68     		ldr	r3, [r3]
 2794 080a 002B     		cmp	r3, #0
 2795 080c 06D0     		beq	.L95
 870:main.c        ****             {
 871:main.c        ****                 OLED_draw(128, 64);
 2796              		.loc 1 871 0
 2797 080e 4021     		movs	r1, #64
 2798 0810 8020     		movs	r0, #128
 2799 0812 FFF7FEFF 		bl	OLED_draw
 872:main.c        ****                 mainOLEDWaitingToSend = 0;
 2800              		.loc 1 872 0
 2801 0816 684B     		ldr	r3, .L195+44
 2802 0818 0022     		movs	r2, #0
 2803 081a 1A60     		str	r2, [r3]
 2804              	.L95:
 873:main.c        ****             }
 874:main.c        ****             if (macroOLEDWaitingToSend == 1)
 2805              		.loc 1 874 0
 2806 081c 5D4B     		ldr	r3, .L195+8
 2807 081e 1B68     		ldr	r3, [r3]
 2808 0820 012B     		cmp	r3, #1
 2809 0822 02D1     		bne	.L92
 875:main.c        ****             {
 876:main.c        ****                 macroOLEDWaitingToSend = 2;
 2810              		.loc 1 876 0
 2811 0824 5B4B     		ldr	r3, .L195+8
 2812 0826 0222     		movs	r2, #2
 2813 0828 1A60     		str	r2, [r3]
 2814              	.L92:
 877:main.c        ****             }
 878:main.c        ****             
 879:main.c        ****             #if 0
 880:main.c        ****             if (OLEDcount == 0)
 881:main.c        ****             {
 882:main.c        ****                 OLEDclearLine(FirstLine);
 883:main.c        ****             }
 884:main.c        ****             else if (OLEDcount == 1)
 885:main.c        ****             {
 886:main.c        ****                 OLEDwriteInt(encoderNum, 2, 0, FirstLine);
 887:main.c        **** 		    }
 888:main.c        ****             else if (OLEDcount == 2)
 889:main.c        ****             {
 890:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
 891:main.c        ****             }
 892:main.c        ****             else if (OLEDcount == 3)
 893:main.c        ****             {
 894:main.c        ****                 OLEDwriteInt(encoderVal[encoderNum], 3, OLEDgetCursor(), FirstLine);
 895:main.c        ****             }
 896:main.c        ****             else if (OLEDcount == 4)
 897:main.c        ****             {
 898:main.c        ****                 OLEDwriteString("     ", 5, OLEDgetCursor(), FirstLine);
 899:main.c        ****             }
 900:main.c        ****             else if (OLEDcount == 5)
 901:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 67


 902:main.c        ****                 OLEDwriteInt(patchNum, 2, OLEDgetCursor(), FirstLine);
 903:main.c        ****             }
 904:main.c        ****             else if (OLEDcount == 6)
 905:main.c        ****             {
 906:main.c        ****                 //OLED_drawFirstLine();
 907:main.c        ****                 
 908:main.c        ****                 //OLEDwriteInt( bar[0] , 6, 0,SecondLine);
 909:main.c        ****                 //OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 910:main.c        ****                 //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 911:main.c        ****                 //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_B
 912:main.c        ****                  //OLED_draw();
 913:main.c        ****             }
 914:main.c        ****             OLEDcount++;
 915:main.c        ****             if (OLEDcount > 6)
 916:main.c        ****             {
 917:main.c        ****                 OLEDcount = 0;
 918:main.c        ****             }
 919:main.c        ****             #endif
 920:main.c        ****         }
 921:main.c        **** 
 922:main.c        ****         /*
 923:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
 924:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 925:main.c        **** 
 926:main.c        ****                 for (int i = 0; i < 5; i++)
 927:main.c        ****                 {
 928:main.c        ****                     I2Cbuff1[0] = 1<<i;
 929:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 930:main.c        **** 
 931:main.c        ****                     I2Cbuff1[0] = 0x0E;
 932:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 933:main.c        **** 
 934:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 935:main.c        **** 
 936:main.c        **** 
 937:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 938:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 939:main.c        ****                 }
 940:main.c        ****             if (main_counter == 0)
 941:main.c        ****             {               
 942:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
 943:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 944:main.c        **** 
 945:main.c        ****                 for (int i = 0; i < 5; i++)
 946:main.c        ****                 {
 947:main.c        ****                     I2Cbuff1[0] = 1<<i;
 948:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 949:main.c        **** 
 950:main.c        ****                     I2Cbuff1[0] = 0x0E;
 951:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 952:main.c        **** 
 953:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 954:main.c        **** 
 955:main.c        **** 
 956:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 957:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 958:main.c        ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 68


 959:main.c        ****             }
 960:main.c        ****             else
 961:main.c        ****             {
 962:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
 963:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 964:main.c        ****                 I2Cbuff1[0] = 0x0E;
 965:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 966:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 967:main.c        ****                 {
 968:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 969:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 970:main.c        ****                 }
 971:main.c        ****            
 972:main.c        **** 
 973:main.c        **** 
 974:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 975:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
 976:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 977:main.c        ****                 {
 978:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 979:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 980:main.c        ****                 }
 981:main.c        ****                 
 982:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
 983:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
 984:main.c        ****             }    
 985:main.c        ****                 
 986:main.c        **** 
 987:main.c        ****             send_it = 1;
 988:main.c        ****         }
 989:main.c        ****         */
 990:main.c        ****         
 991:main.c        ****         if (main_counter < 10)
 2815              		.loc 1 991 0
 2816 082a 604B     		ldr	r3, .L195+32
 2817 082c 1B78     		ldrb	r3, [r3]
 2818 082e DBB2     		uxtb	r3, r3
 2819 0830 092B     		cmp	r3, #9
 2820 0832 00F29080 		bhi	.L96
 2821              	.LBB20:
 992:main.c        ****         {
 993:main.c        ****             
 994:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
 995:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_low[main_counter])
 2822              		.loc 1 995 0
 2823 0836 5D4B     		ldr	r3, .L195+32
 2824 0838 1B78     		ldrb	r3, [r3]
 2825 083a DBB2     		uxtb	r3, r3
 2826 083c 1A46     		mov	r2, r3
 2827 083e 5F4B     		ldr	r3, .L195+48
 2828 0840 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2829 0844 594B     		ldr	r3, .L195+32
 2830 0846 1B78     		ldrb	r3, [r3]
 2831 0848 DBB2     		uxtb	r3, r3
 2832 084a 1946     		mov	r1, r3
 2833 084c 5C4B     		ldr	r3, .L195+52
 2834 084e 33F81130 		ldrh	r3, [r3, r1, lsl #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 69


 2835 0852 D31A     		subs	r3, r2, r3
 2836 0854 9BB2     		uxth	r3, r3
 2837 0856 3B83     		strh	r3, [r7, #24]	@ movhi
 996:main.c        ****             
 997:main.c        ****             if (tempangle > 0)
 2838              		.loc 1 997 0
 2839 0858 B7F91830 		ldrsh	r3, [r7, #24]
 2840 085c 002B     		cmp	r3, #0
 2841 085e 1CDD     		ble	.L97
 998:main.c        ****             {
 999:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 2842              		.loc 1 999 0
 2843 0860 524B     		ldr	r3, .L195+32
 2844 0862 1B78     		ldrb	r3, [r3]
 2845 0864 DBB2     		uxtb	r3, r3
 2846 0866 1C46     		mov	r4, r3
 2847 0868 B7F91830 		ldrsh	r3, [r7, #24]
 2848 086c 1846     		mov	r0, r3
 2849 086e FFF7FEFF 		bl	__aeabi_i2f
 2850 0872 4E4B     		ldr	r3, .L195+32
 2851 0874 1B78     		ldrb	r3, [r3]
 2852 0876 DBB2     		uxtb	r3, r3
 2853 0878 1A46     		mov	r2, r3
 2854 087a 524B     		ldr	r3, .L195+56
 2855 087c 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 2856 0880 1946     		mov	r1, r3
 2857 0882 FFF7FEFF 		bl	__aeabi_fmul
 2858 0886 0346     		mov	r3, r0
 2859 0888 1846     		mov	r0, r3
 2860 088a FFF7FEFF 		bl	__aeabi_f2uiz
 2861 088e 0346     		mov	r3, r0
 2862 0890 9AB2     		uxth	r2, r3
 2863 0892 4D4B     		ldr	r3, .L195+60
 2864 0894 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 2865 0898 07E0     		b	.L98
 2866              	.L97:
1000:main.c        ****             }
1001:main.c        ****             else
1002:main.c        ****             {
1003:main.c        ****                 processed_pedals[main_counter] = 0;
 2867              		.loc 1 1003 0
 2868 089a 444B     		ldr	r3, .L195+32
 2869 089c 1B78     		ldrb	r3, [r3]
 2870 089e DBB2     		uxtb	r3, r3
 2871 08a0 1A46     		mov	r2, r3
 2872 08a2 494B     		ldr	r3, .L195+60
 2873 08a4 0021     		movs	r1, #0
 2874 08a6 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2875              	.L98:
1004:main.c        ****             }
1005:main.c        ****             if (processed_pedals[main_counter] > 4095)
 2876              		.loc 1 1005 0
 2877 08aa 404B     		ldr	r3, .L195+32
 2878 08ac 1B78     		ldrb	r3, [r3]
 2879 08ae DBB2     		uxtb	r3, r3
 2880 08b0 1A46     		mov	r2, r3
 2881 08b2 454B     		ldr	r3, .L195+60
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 70


 2882 08b4 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2883 08b8 B3F5805F 		cmp	r3, #4096
 2884 08bc 08D3     		bcc	.L99
1006:main.c        ****             {
1007:main.c        ****                 processed_pedals[main_counter] = 4095;
 2885              		.loc 1 1007 0
 2886 08be 3B4B     		ldr	r3, .L195+32
 2887 08c0 1B78     		ldrb	r3, [r3]
 2888 08c2 DBB2     		uxtb	r3, r3
 2889 08c4 1A46     		mov	r2, r3
 2890 08c6 404B     		ldr	r3, .L195+60
 2891 08c8 40F6FF71 		movw	r1, #4095
 2892 08cc 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2893              	.L99:
1008:main.c        ****             }
1009:main.c        ****             
1010:main.c        ****             
1011:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
1012:main.c        ****             {
1013:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
1014:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
1015:main.c        ****             }
1016:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 2894              		.loc 1 1016 0
 2895 08d0 364B     		ldr	r3, .L195+32
 2896 08d2 1B78     		ldrb	r3, [r3]
 2897 08d4 DBB2     		uxtb	r3, r3
 2898 08d6 1C46     		mov	r4, r3
 2899 08d8 344B     		ldr	r3, .L195+32
 2900 08da 1B78     		ldrb	r3, [r3]
 2901 08dc DBB2     		uxtb	r3, r3
 2902 08de 1A46     		mov	r2, r3
 2903 08e0 394B     		ldr	r3, .L195+60
 2904 08e2 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2905 08e6 1846     		mov	r0, r3
 2906 08e8 FFF7FEFF 		bl	__aeabi_ui2f
 2907 08ec 0346     		mov	r3, r0
 2908 08ee 3749     		ldr	r1, .L195+64
 2909 08f0 1846     		mov	r0, r3
 2910 08f2 FFF7FEFF 		bl	__aeabi_fmul
 2911 08f6 0346     		mov	r3, r0
 2912 08f8 1A46     		mov	r2, r3
 2913 08fa 354B     		ldr	r3, .L195+68
 2914 08fc 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
1017:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[main_counter] * 0.0625f;
 2915              		.loc 1 1017 0
 2916 0900 2A4B     		ldr	r3, .L195+32
 2917 0902 1B78     		ldrb	r3, [r3]
 2918 0904 DBB2     		uxtb	r3, r3
 2919 0906 1C46     		mov	r4, r3
 2920 0908 284B     		ldr	r3, .L195+32
 2921 090a 1B78     		ldrb	r3, [r3]
 2922 090c DBB2     		uxtb	r3, r3
 2923 090e 1A46     		mov	r2, r3
 2924 0910 2D4B     		ldr	r3, .L195+60
 2925 0912 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2926 0916 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 71


 2927 0918 FFF7FEFF 		bl	__aeabi_ui2f
 2928 091c 0346     		mov	r3, r0
 2929 091e 4FF07651 		mov	r1, #1031798784
 2930 0922 1846     		mov	r0, r3
 2931 0924 FFF7FEFF 		bl	__aeabi_fmul
 2932 0928 0346     		mov	r3, r0
 2933 092a 1846     		mov	r0, r3
 2934 092c FFF7FEFF 		bl	__aeabi_f2uiz
 2935 0930 0346     		mov	r3, r0
 2936 0932 DAB2     		uxtb	r2, r3
 2937 0934 274B     		ldr	r3, .L195+72
 2938 0936 1A55     		strb	r2, [r3, r4]
1018:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 2939              		.loc 1 1018 0
 2940 0938 1C4B     		ldr	r3, .L195+32
 2941 093a 1B78     		ldrb	r3, [r3]
 2942 093c DBB2     		uxtb	r3, r3
 2943 093e 1A46     		mov	r2, r3
 2944 0940 1A4B     		ldr	r3, .L195+32
 2945 0942 1B78     		ldrb	r3, [r3]
 2946 0944 DBB2     		uxtb	r3, r3
 2947 0946 1946     		mov	r1, r3
 2948 0948 1F4B     		ldr	r3, .L195+60
 2949 094a 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2950 094e 224B     		ldr	r3, .L195+76
 2951 0950 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2952              	.LBE20:
 2953 0954 71E0     		b	.L100
 2954              	.L96:
1019:main.c        ****         }
1020:main.c        ****         else
1021:main.c        ****         {
1022:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 2955              		.loc 1 1022 0
 2956 0956 174B     		ldr	r3, .L195+40
 2957 0958 1B88     		ldrh	r3, [r3]
 2958 095a 1846     		mov	r0, r3
 2959 095c FFF7FEFF 		bl	__aeabi_ui2f
 2960 0960 0346     		mov	r3, r0
 2961 0962 1E49     		ldr	r1, .L195+80
 2962 0964 1846     		mov	r0, r3
 2963 0966 FFF7FEFF 		bl	__aeabi_fmul
 2964 096a 0346     		mov	r3, r0
 2965 096c 1846     		mov	r0, r3
 2966 096e FFF7FEFF 		bl	__aeabi_f2iz
 2967 0972 0346     		mov	r3, r0
 2968 0974 1AB2     		sxth	r2, r3
 2969 0976 1A4B     		ldr	r3, .L195+84
 2970 0978 1A80     		strh	r2, [r3]	@ movhi
1023:main.c        **** 
1024:main.c        ****             if (processed_volumePedal < 0)
 2971              		.loc 1 1024 0
 2972 097a 194B     		ldr	r3, .L195+84
 2973 097c B3F90030 		ldrsh	r3, [r3]
 2974 0980 002B     		cmp	r3, #0
 2975 0982 2FDA     		bge	.L101
1025:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 72


1026:main.c        ****                 processed_volumePedal = 0;
 2976              		.loc 1 1026 0
 2977 0984 164B     		ldr	r3, .L195+84
 2978 0986 0022     		movs	r2, #0
 2979 0988 1A80     		strh	r2, [r3]	@ movhi
 2980 098a 35E0     		b	.L102
 2981              	.L196:
 2982              		.align	2
 2983              	.L195:
 2984 098c 00000000 		.word	I2Cbuff2
 2985 0990 00000000 		.word	macroKnobValues
 2986 0994 00000000 		.word	macroOLEDWaitingToSend
 2987 0998 00000000 		.word	whichMacro
 2988 099c 00000000 		.word	I2Cbuff1
 2989 09a0 00000000 		.word	status
 2990 09a4 00000000 		.word	patchNum
 2991 09a8 00000000 		.word	macroNamesArray
 2992 09ac 00000000 		.word	main_counter
 2993 09b0 00000000 		.word	i2c_skipped
 2994 09b4 00000000 		.word	volumePedal
 2995 09b8 00000000 		.word	mainOLEDWaitingToSend
 2996 09bc 00000000 		.word	angle
 2997 09c0 00000000 		.word	pedals_low
 2998 09c4 00000000 		.word	pedalRatios
 2999 09c8 00000000 		.word	processed_pedals
 3000 09cc 01088039 		.word	964691969
 3001 09d0 00000000 		.word	pedals_float
 3002 09d4 00000000 		.word	pedals8bit
 3003 09d8 00000000 		.word	prev_processed_pedals
 3004 09dc C5F1803F 		.word	1065415109
 3005 09e0 00000000 		.word	processed_volumePedal
 3006              	.L101:
1027:main.c        ****             }
1028:main.c        ****             else if (processed_volumePedal > 4095)
 3007              		.loc 1 1028 0
 3008 09e4 9C4B     		ldr	r3, .L197
 3009 09e6 B3F90030 		ldrsh	r3, [r3]
 3010 09ea B3F5805F 		cmp	r3, #4096
 3011 09ee 03DB     		blt	.L102
1029:main.c        ****             {
1030:main.c        ****                  processed_volumePedal = 4095;
 3012              		.loc 1 1030 0
 3013 09f0 994B     		ldr	r3, .L197
 3014 09f2 40F6FF72 		movw	r2, #4095
 3015 09f6 1A80     		strh	r2, [r3]	@ movhi
 3016              	.L102:
1031:main.c        ****             }
1032:main.c        ****             
1033:main.c        ****             if ( processed_volumePedal != prev_processed_volumePedal)
 3017              		.loc 1 1033 0
 3018 09f8 974B     		ldr	r3, .L197
 3019 09fa B3F90020 		ldrsh	r2, [r3]
 3020 09fe 974B     		ldr	r3, .L197+4
 3021 0a00 B3F90030 		ldrsh	r3, [r3]
 3022 0a04 9A42     		cmp	r2, r3
 3023 0a06 13D0     		beq	.L103
 3024              	.LBB21:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 73


1034:main.c        ****             {
1035:main.c        ****                 uint16_t tempPedal = processed_volumePedal;
 3025              		.loc 1 1035 0
 3026 0a08 934B     		ldr	r3, .L197
 3027 0a0a B3F90030 		ldrsh	r3, [r3]
 3028 0a0e FB82     		strh	r3, [r7, #22]	@ movhi
1036:main.c        ****                 
1037:main.c        ****                 sendMIDIControlChange(21, ( tempPedal >> 7), 0);
 3029              		.loc 1 1037 0
 3030 0a10 FB8A     		ldrh	r3, [r7, #22]
 3031 0a12 DB09     		lsrs	r3, r3, #7
 3032 0a14 9BB2     		uxth	r3, r3
 3033 0a16 0022     		movs	r2, #0
 3034 0a18 1946     		mov	r1, r3
 3035 0a1a 1520     		movs	r0, #21
 3036 0a1c FFF7FEFF 		bl	sendMIDIControlChange
1038:main.c        ****                 sendMIDIControlChange(22, ( tempPedal & 127), 0);
 3037              		.loc 1 1038 0
 3038 0a20 FB8A     		ldrh	r3, [r7, #22]
 3039 0a22 03F07F03 		and	r3, r3, #127
 3040 0a26 0022     		movs	r2, #0
 3041 0a28 1946     		mov	r1, r3
 3042 0a2a 1620     		movs	r0, #22
 3043 0a2c FFF7FEFF 		bl	sendMIDIControlChange
 3044              	.L103:
 3045              	.LBE21:
1039:main.c        ****             }
1040:main.c        ****              prev_processed_volumePedal = processed_volumePedal;
 3046              		.loc 1 1040 0
 3047 0a30 894B     		ldr	r3, .L197
 3048 0a32 B3F90020 		ldrsh	r2, [r3]
 3049 0a36 894B     		ldr	r3, .L197+4
 3050 0a38 1A80     		strh	r2, [r3]	@ movhi
 3051              	.L100:
1041:main.c        ****         }
1042:main.c        ****         
1043:main.c        ****         main_counter++;
 3052              		.loc 1 1043 0
 3053 0a3a 894B     		ldr	r3, .L197+8
 3054 0a3c 1B78     		ldrb	r3, [r3]
 3055 0a3e DBB2     		uxtb	r3, r3
 3056 0a40 0133     		adds	r3, r3, #1
 3057 0a42 DAB2     		uxtb	r2, r3
 3058 0a44 864B     		ldr	r3, .L197+8
 3059 0a46 1A70     		strb	r2, [r3]
1044:main.c        **** 
1045:main.c        ****         if (main_counter > 11)
 3060              		.loc 1 1045 0
 3061 0a48 854B     		ldr	r3, .L197+8
 3062 0a4a 1B78     		ldrb	r3, [r3]
 3063 0a4c DBB2     		uxtb	r3, r3
 3064 0a4e 0B2B     		cmp	r3, #11
 3065 0a50 02D9     		bls	.L104
1046:main.c        ****         {
1047:main.c        ****             main_counter = 0;
 3066              		.loc 1 1047 0
 3067 0a52 834B     		ldr	r3, .L197+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 74


 3068 0a54 0022     		movs	r2, #0
 3069 0a56 1A70     		strb	r2, [r3]
 3070              	.L104:
1048:main.c        ****         }
1049:main.c        ****         testpin3_Write(0);
 3071              		.loc 1 1049 0
 3072 0a58 0020     		movs	r0, #0
 3073 0a5a FFF7FEFF 		bl	testpin3_Write
1050:main.c        ****         #if 0
1051:main.c        ****             
1052:main.c        ****             
1053:main.c        ****         main_counter++;
1054:main.c        ****         if (main_counter >= 11)
1055:main.c        ****         {
1056:main.c        ****                /*  
1057:main.c        ****             testpin3_Write(1);
1058:main.c        ****             I2Cbuff1[0] = 1<<6;
1059:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1060:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
1061:main.c        **** 
1062:main.c        ****         //CyDelay(1);
1063:main.c        ****         
1064:main.c        ****         OLEDwriteInt(octave, 1, 0,SecondLine);
1065:main.c        **** 
1066:main.c        ****         OLED_draw();
1067:main.c        ****                     I2Cbuff1[0] = 1<<0;
1068:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1069:main.c        ****         testpin3_Write(0);
1070:main.c        ****             */
1071:main.c        ****             main_counter = 0;
1072:main.c        ****         }
1073:main.c        ****         #endif
1074:main.c        ****         testpin5_Write(1);
 3074              		.loc 1 1074 0
 3075 0a5e 0120     		movs	r0, #1
 3076 0a60 FFF7FEFF 		bl	testpin5_Write
1075:main.c        ****         /*
1076:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
1077:main.c        ****         {
1078:main.c        ****             for (int i = 0; i < 2; i++)
1079:main.c        ****             {
1080:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
1081:main.c        ****     
1082:main.c        ****                 if (bar[i] != prevBar[i])
1083:main.c        ****                 {
1084:main.c        ****     				if ((bar[i] == 65535) || (bar[i] > fretMeasurements[0][i]))
1085:main.c        ****     				{
1086:main.c        ****     					stringMappedPositions[i] = 1.0f;
1087:main.c        ****     				}
1088:main.c        **** 
1089:main.c        ****     				else if ((bar[i] >= fretMeasurements[1][i]) && (bar[i] <= fretMeasurements[0][i]))
1090:main.c        ****     				{
1091:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[0][i], fretMeasurements[1][
1092:main.c        ****     				}
1093:main.c        **** 
1094:main.c        ****     				else if ((bar[i] >= fretMeasurements[2][i]) && (bar[i] < fretMeasurements[1][i]))
1095:main.c        ****     				{
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 75


1096:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[1][i], fretMeasurements[2][
1097:main.c        ****     				}
1098:main.c        **** 
1099:main.c        ****     				else
1100:main.c        ****     				{
1101:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[2][i], fretMeasurements[3][
1102:main.c        ****     				}
1103:main.c        **** 
1104:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
1105:main.c        ****                 }
1106:main.c        ****                 prevBar[i] = bar[i];
1107:main.c        ****             }
1108:main.c        ****         }
1109:main.c        ****         */
1110:main.c        ****         testpin5_Write(0);
 3077              		.loc 1 1110 0
 3078 0a64 0020     		movs	r0, #0
 3079 0a66 FFF7FEFF 		bl	testpin5_Write
 3080              	.LBB22:
1111:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 3081              		.loc 1 1111 0
 3082 0a6a 0023     		movs	r3, #0
 3083 0a6c BB65     		str	r3, [r7, #88]
 3084 0a6e 1AE0     		b	.L105
 3085              	.L107:
1112:main.c        ****         {
1113:main.c        ****             if (strings[i] != prevStrings[i])
 3086              		.loc 1 1113 0
 3087 0a70 7C4A     		ldr	r2, .L197+12
 3088 0a72 BB6D     		ldr	r3, [r7, #88]
 3089 0a74 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3090 0a78 9AB2     		uxth	r2, r3
 3091 0a7a 7B49     		ldr	r1, .L197+16
 3092 0a7c BB6D     		ldr	r3, [r7, #88]
 3093 0a7e 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3094 0a82 9BB2     		uxth	r3, r3
 3095 0a84 9A42     		cmp	r2, r3
 3096 0a86 02D0     		beq	.L106
1114:main.c        ****             {
1115:main.c        ****                 noteEvent(i);
 3097              		.loc 1 1115 0
 3098 0a88 B86D     		ldr	r0, [r7, #88]
 3099 0a8a FFF7FEFF 		bl	noteEvent
 3100              	.L106:
1116:main.c        ****             }
1117:main.c        ****             prevStrings[i] = strings[i];
 3101              		.loc 1 1117 0 discriminator 2
 3102 0a8e 754A     		ldr	r2, .L197+12
 3103 0a90 BB6D     		ldr	r3, [r7, #88]
 3104 0a92 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3105 0a96 99B2     		uxth	r1, r3
 3106 0a98 734A     		ldr	r2, .L197+16
 3107 0a9a BB6D     		ldr	r3, [r7, #88]
 3108 0a9c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1111:main.c        ****         {
 3109              		.loc 1 1111 0 discriminator 2
 3110 0aa0 BB6D     		ldr	r3, [r7, #88]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 76


 3111 0aa2 0133     		adds	r3, r3, #1
 3112 0aa4 BB65     		str	r3, [r7, #88]
 3113              	.L105:
1111:main.c        ****         {
 3114              		.loc 1 1111 0 is_stmt 0 discriminator 1
 3115 0aa6 714B     		ldr	r3, .L197+20
 3116 0aa8 1B68     		ldr	r3, [r3]
 3117 0aaa BA6D     		ldr	r2, [r7, #88]
 3118 0aac 9A42     		cmp	r2, r3
 3119 0aae DFDB     		blt	.L107
 3120              	.LBE22:
1118:main.c        ****         }
1119:main.c        ****         
1120:main.c        **** 
1121:main.c        **** 
1122:main.c        ****         
1123:main.c        ****         
1124:main.c        ****         if (!oct1_Read())
 3121              		.loc 1 1124 0 is_stmt 1
 3122 0ab0 FFF7FEFF 		bl	oct1_Read
 3123 0ab4 0346     		mov	r3, r0
 3124 0ab6 002B     		cmp	r3, #0
 3125 0ab8 24D1     		bne	.L108
1125:main.c        ****         {
1126:main.c        ****             if (octave > 4)
 3126              		.loc 1 1126 0
 3127 0aba 6D4B     		ldr	r3, .L197+24
 3128 0abc 1B68     		ldr	r3, [r3]
 3129 0abe 042B     		cmp	r3, #4
 3130 0ac0 03DD     		ble	.L109
1127:main.c        ****             {
1128:main.c        ****                 octave = 4;
 3131              		.loc 1 1128 0
 3132 0ac2 6B4B     		ldr	r3, .L197+24
 3133 0ac4 0422     		movs	r2, #4
 3134 0ac6 1A60     		str	r2, [r3]
 3135 0ac8 0CE0     		b	.L110
 3136              	.L109:
1129:main.c        **** 
1130:main.c        ****             }
1131:main.c        ****             else if ((oct1Up) && (octave > 0))
 3137              		.loc 1 1131 0
 3138 0aca 6A4B     		ldr	r3, .L197+28
 3139 0acc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3140 0ace 002B     		cmp	r3, #0
 3141 0ad0 08D0     		beq	.L110
 3142              		.loc 1 1131 0 is_stmt 0 discriminator 1
 3143 0ad2 674B     		ldr	r3, .L197+24
 3144 0ad4 1B68     		ldr	r3, [r3]
 3145 0ad6 002B     		cmp	r3, #0
 3146 0ad8 04DD     		ble	.L110
1132:main.c        ****             {
1133:main.c        ****                 octave--;
 3147              		.loc 1 1133 0 is_stmt 1
 3148 0ada 654B     		ldr	r3, .L197+24
 3149 0adc 1B68     		ldr	r3, [r3]
 3150 0ade 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 77


 3151 0ae0 634A     		ldr	r2, .L197+24
 3152 0ae2 1360     		str	r3, [r2]
 3153              	.L110:
1134:main.c        ****             }
1135:main.c        ****             LED_amber1_Write(1);
 3154              		.loc 1 1135 0
 3155 0ae4 0120     		movs	r0, #1
 3156 0ae6 FFF7FEFF 		bl	LED_amber1_Write
1136:main.c        ****             LED_amber2_Write(0);
 3157              		.loc 1 1136 0
 3158 0aea 0020     		movs	r0, #0
 3159 0aec FFF7FEFF 		bl	LED_amber2_Write
1137:main.c        ****             LED_amber3_Write(0);
 3160              		.loc 1 1137 0
 3161 0af0 0020     		movs	r0, #0
 3162 0af2 FFF7FEFF 		bl	LED_amber3_Write
1138:main.c        ****             LED_amber4_Write(0);
 3163              		.loc 1 1138 0
 3164 0af6 0020     		movs	r0, #0
 3165 0af8 FFF7FEFF 		bl	LED_amber4_Write
1139:main.c        ****             oct1Up = 0;
 3166              		.loc 1 1139 0
 3167 0afc 5D4B     		ldr	r3, .L197+28
 3168 0afe 0022     		movs	r2, #0
 3169 0b00 1A70     		strb	r2, [r3]
 3170 0b02 07E0     		b	.L111
 3171              	.L108:
1140:main.c        ****         }
1141:main.c        ****         
1142:main.c        ****         else if (oct1_Read())
 3172              		.loc 1 1142 0
 3173 0b04 FFF7FEFF 		bl	oct1_Read
 3174 0b08 0346     		mov	r3, r0
 3175 0b0a 002B     		cmp	r3, #0
 3176 0b0c 02D0     		beq	.L111
1143:main.c        ****         {
1144:main.c        ****             oct1Up = 1;
 3177              		.loc 1 1144 0
 3178 0b0e 594B     		ldr	r3, .L197+28
 3179 0b10 0122     		movs	r2, #1
 3180 0b12 1A70     		strb	r2, [r3]
 3181              	.L111:
1145:main.c        ****         }
1146:main.c        ****         
1147:main.c        ****         if (!oct2_Read())
 3182              		.loc 1 1147 0
 3183 0b14 FFF7FEFF 		bl	oct2_Read
 3184 0b18 0346     		mov	r3, r0
 3185 0b1a 002B     		cmp	r3, #0
 3186 0b1c 0ED1     		bne	.L112
1148:main.c        ****         {
1149:main.c        ****             octave = 5;
 3187              		.loc 1 1149 0
 3188 0b1e 544B     		ldr	r3, .L197+24
 3189 0b20 0522     		movs	r2, #5
 3190 0b22 1A60     		str	r2, [r3]
1150:main.c        ****             LED_amber1_Write(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 78


 3191              		.loc 1 1150 0
 3192 0b24 0020     		movs	r0, #0
 3193 0b26 FFF7FEFF 		bl	LED_amber1_Write
1151:main.c        ****             LED_amber2_Write(1);
 3194              		.loc 1 1151 0
 3195 0b2a 0120     		movs	r0, #1
 3196 0b2c FFF7FEFF 		bl	LED_amber2_Write
1152:main.c        ****             LED_amber3_Write(0);
 3197              		.loc 1 1152 0
 3198 0b30 0020     		movs	r0, #0
 3199 0b32 FFF7FEFF 		bl	LED_amber3_Write
1153:main.c        ****             LED_amber4_Write(0);
 3200              		.loc 1 1153 0
 3201 0b36 0020     		movs	r0, #0
 3202 0b38 FFF7FEFF 		bl	LED_amber4_Write
 3203              	.L112:
1154:main.c        ****         }
1155:main.c        ****         if (!oct3_Read())
 3204              		.loc 1 1155 0
 3205 0b3c FFF7FEFF 		bl	oct3_Read
 3206 0b40 0346     		mov	r3, r0
 3207 0b42 002B     		cmp	r3, #0
 3208 0b44 0ED1     		bne	.L113
1156:main.c        ****         {
1157:main.c        ****             octave = 6;
 3209              		.loc 1 1157 0
 3210 0b46 4A4B     		ldr	r3, .L197+24
 3211 0b48 0622     		movs	r2, #6
 3212 0b4a 1A60     		str	r2, [r3]
1158:main.c        ****             LED_amber1_Write(0);
 3213              		.loc 1 1158 0
 3214 0b4c 0020     		movs	r0, #0
 3215 0b4e FFF7FEFF 		bl	LED_amber1_Write
1159:main.c        ****             LED_amber2_Write(0);
 3216              		.loc 1 1159 0
 3217 0b52 0020     		movs	r0, #0
 3218 0b54 FFF7FEFF 		bl	LED_amber2_Write
1160:main.c        ****             LED_amber3_Write(1);
 3219              		.loc 1 1160 0
 3220 0b58 0120     		movs	r0, #1
 3221 0b5a FFF7FEFF 		bl	LED_amber3_Write
1161:main.c        ****             LED_amber4_Write(0);            
 3222              		.loc 1 1161 0
 3223 0b5e 0020     		movs	r0, #0
 3224 0b60 FFF7FEFF 		bl	LED_amber4_Write
 3225              	.L113:
1162:main.c        ****         }
1163:main.c        ****         if (!oct4_Read())
 3226              		.loc 1 1163 0
 3227 0b64 FFF7FEFF 		bl	oct4_Read
 3228 0b68 0346     		mov	r3, r0
 3229 0b6a 002B     		cmp	r3, #0
 3230 0b6c 24D1     		bne	.L114
1164:main.c        ****         {
1165:main.c        ****             if (octave < 7)
 3231              		.loc 1 1165 0
 3232 0b6e 404B     		ldr	r3, .L197+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 79


 3233 0b70 1B68     		ldr	r3, [r3]
 3234 0b72 062B     		cmp	r3, #6
 3235 0b74 03DC     		bgt	.L115
1166:main.c        ****             {
1167:main.c        ****                 octave = 7;
 3236              		.loc 1 1167 0
 3237 0b76 3E4B     		ldr	r3, .L197+24
 3238 0b78 0722     		movs	r2, #7
 3239 0b7a 1A60     		str	r2, [r3]
 3240 0b7c 0CE0     		b	.L116
 3241              	.L115:
1168:main.c        **** 
1169:main.c        ****             }
1170:main.c        ****             else if ((oct4Up) && (octave < 11))
 3242              		.loc 1 1170 0
 3243 0b7e 3E4B     		ldr	r3, .L197+32
 3244 0b80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3245 0b82 002B     		cmp	r3, #0
 3246 0b84 08D0     		beq	.L116
 3247              		.loc 1 1170 0 is_stmt 0 discriminator 1
 3248 0b86 3A4B     		ldr	r3, .L197+24
 3249 0b88 1B68     		ldr	r3, [r3]
 3250 0b8a 0A2B     		cmp	r3, #10
 3251 0b8c 04DC     		bgt	.L116
1171:main.c        ****             {
1172:main.c        ****                 octave++;
 3252              		.loc 1 1172 0 is_stmt 1
 3253 0b8e 384B     		ldr	r3, .L197+24
 3254 0b90 1B68     		ldr	r3, [r3]
 3255 0b92 0133     		adds	r3, r3, #1
 3256 0b94 364A     		ldr	r2, .L197+24
 3257 0b96 1360     		str	r3, [r2]
 3258              	.L116:
1173:main.c        **** 
1174:main.c        ****             }
1175:main.c        ****             LED_amber1_Write(0);
 3259              		.loc 1 1175 0
 3260 0b98 0020     		movs	r0, #0
 3261 0b9a FFF7FEFF 		bl	LED_amber1_Write
1176:main.c        ****             LED_amber2_Write(0);
 3262              		.loc 1 1176 0
 3263 0b9e 0020     		movs	r0, #0
 3264 0ba0 FFF7FEFF 		bl	LED_amber2_Write
1177:main.c        ****             LED_amber3_Write(0);
 3265              		.loc 1 1177 0
 3266 0ba4 0020     		movs	r0, #0
 3267 0ba6 FFF7FEFF 		bl	LED_amber3_Write
1178:main.c        ****             LED_amber4_Write(1);
 3268              		.loc 1 1178 0
 3269 0baa 0120     		movs	r0, #1
 3270 0bac FFF7FEFF 		bl	LED_amber4_Write
1179:main.c        ****             oct4Up = 0;
 3271              		.loc 1 1179 0
 3272 0bb0 314B     		ldr	r3, .L197+32
 3273 0bb2 0022     		movs	r2, #0
 3274 0bb4 1A70     		strb	r2, [r3]
 3275 0bb6 07E0     		b	.L117
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 80


 3276              	.L114:
1180:main.c        ****         }
1181:main.c        ****         
1182:main.c        ****         else if (oct4_Read())
 3277              		.loc 1 1182 0
 3278 0bb8 FFF7FEFF 		bl	oct4_Read
 3279 0bbc 0346     		mov	r3, r0
 3280 0bbe 002B     		cmp	r3, #0
 3281 0bc0 02D0     		beq	.L117
1183:main.c        ****         {
1184:main.c        ****             oct4Up = 1;
 3282              		.loc 1 1184 0
 3283 0bc2 2D4B     		ldr	r3, .L197+32
 3284 0bc4 0122     		movs	r2, #1
 3285 0bc6 1A70     		strb	r2, [r3]
 3286              	.L117:
1185:main.c        ****         }
1186:main.c        ****         
1187:main.c        ****         if (!neck1_button_Read())
 3287              		.loc 1 1187 0
 3288 0bc8 FFF7FEFF 		bl	neck1_button_Read
 3289 0bcc 0346     		mov	r3, r0
 3290 0bce 002B     		cmp	r3, #0
 3291 0bd0 10D1     		bne	.L118
1188:main.c        ****         {
1189:main.c        ****             currentNeck = 0;
 3292              		.loc 1 1189 0
 3293 0bd2 2A4B     		ldr	r3, .L197+36
 3294 0bd4 0022     		movs	r2, #0
 3295 0bd6 1A60     		str	r2, [r3]
1190:main.c        ****             currentCopedent = necks[currentNeck];
 3296              		.loc 1 1190 0
 3297 0bd8 284B     		ldr	r3, .L197+36
 3298 0bda 1B68     		ldr	r3, [r3]
 3299 0bdc 284A     		ldr	r2, .L197+40
 3300 0bde D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3301 0be0 284B     		ldr	r3, .L197+44
 3302 0be2 1A70     		strb	r2, [r3]
1191:main.c        ****             LED_red1_Write(0);
 3303              		.loc 1 1191 0
 3304 0be4 0020     		movs	r0, #0
 3305 0be6 FFF7FEFF 		bl	LED_red1_Write
1192:main.c        ****             LED_green2_Write(1);
 3306              		.loc 1 1192 0
 3307 0bea 0120     		movs	r0, #1
 3308 0bec FFF7FEFF 		bl	LED_green2_Write
1193:main.c        ****             displayCurrentPresetNameAndCopedent();
 3309              		.loc 1 1193 0
 3310 0bf0 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3311              	.L118:
1194:main.c        ****         }
1195:main.c        ****         if (!neck2_button_Read())
 3312              		.loc 1 1195 0
 3313 0bf4 FFF7FEFF 		bl	neck2_button_Read
 3314 0bf8 0346     		mov	r3, r0
 3315 0bfa 002B     		cmp	r3, #0
 3316 0bfc 10D1     		bne	.L119
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 81


1196:main.c        ****         {
1197:main.c        ****             currentNeck = 1;
 3317              		.loc 1 1197 0
 3318 0bfe 1F4B     		ldr	r3, .L197+36
 3319 0c00 0122     		movs	r2, #1
 3320 0c02 1A60     		str	r2, [r3]
1198:main.c        ****             currentCopedent = necks[currentNeck];            
 3321              		.loc 1 1198 0
 3322 0c04 1D4B     		ldr	r3, .L197+36
 3323 0c06 1B68     		ldr	r3, [r3]
 3324 0c08 1D4A     		ldr	r2, .L197+40
 3325 0c0a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3326 0c0c 1D4B     		ldr	r3, .L197+44
 3327 0c0e 1A70     		strb	r2, [r3]
1199:main.c        ****             LED_red1_Write(1);
 3328              		.loc 1 1199 0
 3329 0c10 0120     		movs	r0, #1
 3330 0c12 FFF7FEFF 		bl	LED_red1_Write
1200:main.c        ****             LED_green2_Write(0);          
 3331              		.loc 1 1200 0
 3332 0c16 0020     		movs	r0, #0
 3333 0c18 FFF7FEFF 		bl	LED_green2_Write
1201:main.c        ****             displayCurrentPresetNameAndCopedent();
 3334              		.loc 1 1201 0
 3335 0c1c FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3336              	.L119:
1202:main.c        ****         }
1203:main.c        ****         
1204:main.c        ****         if ((!enter_button_Read()) && (enterUp))
 3337              		.loc 1 1204 0
 3338 0c20 FFF7FEFF 		bl	enter_button_Read
 3339 0c24 0346     		mov	r3, r0
 3340 0c26 002B     		cmp	r3, #0
 3341 0c28 32D1     		bne	.L120
 3342              		.loc 1 1204 0 is_stmt 0 discriminator 1
 3343 0c2a 174B     		ldr	r3, .L197+48
 3344 0c2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3345 0c2e 002B     		cmp	r3, #0
 3346 0c30 2ED0     		beq	.L120
1205:main.c        ****         {
1206:main.c        ****             dualSlider = !dualSlider;
 3347              		.loc 1 1206 0 is_stmt 1
 3348 0c32 164B     		ldr	r3, .L197+52
 3349 0c34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3350 0c36 002B     		cmp	r3, #0
 3351 0c38 0CBF     		ite	eq
 3352 0c3a 0123     		moveq	r3, #1
 3353 0c3c 0023     		movne	r3, #0
 3354 0c3e DBB2     		uxtb	r3, r3
 3355 0c40 1A46     		mov	r2, r3
 3356 0c42 124B     		ldr	r3, .L197+52
 3357 0c44 1A70     		strb	r2, [r3]
1207:main.c        ****             LED_green1_Write(dualSlider);
 3358              		.loc 1 1207 0
 3359 0c46 114B     		ldr	r3, .L197+52
 3360 0c48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3361 0c4a 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 82


 3362 0c4c FFF7FEFF 		bl	LED_green1_Write
1208:main.c        ****             enterUp = 0;
 3363              		.loc 1 1208 0
 3364 0c50 0D4B     		ldr	r3, .L197+48
 3365 0c52 0022     		movs	r2, #0
 3366 0c54 1A70     		strb	r2, [r3]
 3367 0c56 23E0     		b	.L121
 3368              	.L198:
 3369              		.align	2
 3370              	.L197:
 3371 0c58 00000000 		.word	processed_volumePedal
 3372 0c5c 00000000 		.word	prev_processed_volumePedal
 3373 0c60 00000000 		.word	main_counter
 3374 0c64 00000000 		.word	strings
 3375 0c68 00000000 		.word	prevStrings
 3376 0c6c 00000000 		.word	numStrings
 3377 0c70 00000000 		.word	octave
 3378 0c74 00000000 		.word	oct1Up
 3379 0c78 00000000 		.word	oct4Up
 3380 0c7c 00000000 		.word	currentNeck
 3381 0c80 00000000 		.word	necks
 3382 0c84 00000000 		.word	currentCopedent
 3383 0c88 00000000 		.word	enterUp
 3384 0c8c 00000000 		.word	dualSlider
 3385              	.L120:
1209:main.c        ****         }
1210:main.c        ****         else if (enter_button_Read())
 3386              		.loc 1 1210 0
 3387 0c90 FFF7FEFF 		bl	enter_button_Read
 3388 0c94 0346     		mov	r3, r0
 3389 0c96 002B     		cmp	r3, #0
 3390 0c98 02D0     		beq	.L121
1211:main.c        ****         {
1212:main.c        ****             enterUp = 1;
 3391              		.loc 1 1212 0
 3392 0c9a 9D4B     		ldr	r3, .L199
 3393 0c9c 0122     		movs	r2, #1
 3394 0c9e 1A70     		strb	r2, [r3]
 3395              	.L121:
1213:main.c        ****         }
1214:main.c        ****         
1215:main.c        ****         
1216:main.c        ****         if (!editMode)
 3396              		.loc 1 1216 0
 3397 0ca0 9C4B     		ldr	r3, .L199+4
 3398 0ca2 1B68     		ldr	r3, [r3]
 3399 0ca4 002B     		cmp	r3, #0
 3400 0ca6 40F0B080 		bne	.L122
1217:main.c        ****         {
1218:main.c        ****         
1219:main.c        ****             if ((!button1_Read()) && (button1Up))
 3401              		.loc 1 1219 0
 3402 0caa FFF7FEFF 		bl	button1_Read
 3403 0cae 0346     		mov	r3, r0
 3404 0cb0 002B     		cmp	r3, #0
 3405 0cb2 25D1     		bne	.L123
 3406              		.loc 1 1219 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 83


 3407 0cb4 984B     		ldr	r3, .L199+8
 3408 0cb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3409 0cb8 002B     		cmp	r3, #0
 3410 0cba 21D0     		beq	.L123
1220:main.c        ****             {
1221:main.c        ****                 currentCopedent -= 1;
 3411              		.loc 1 1221 0 is_stmt 1
 3412 0cbc 974B     		ldr	r3, .L199+12
 3413 0cbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3414 0cc0 013B     		subs	r3, r3, #1
 3415 0cc2 DAB2     		uxtb	r2, r3
 3416 0cc4 954B     		ldr	r3, .L199+12
 3417 0cc6 1A70     		strb	r2, [r3]
1222:main.c        ****                 currentCopedent &= 31;
 3418              		.loc 1 1222 0
 3419 0cc8 944B     		ldr	r3, .L199+12
 3420 0cca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3421 0ccc 03F01F03 		and	r3, r3, #31
 3422 0cd0 DAB2     		uxtb	r2, r3
 3423 0cd2 924B     		ldr	r3, .L199+12
 3424 0cd4 1A70     		strb	r2, [r3]
1223:main.c        ****                 necks[currentNeck] = currentCopedent;
 3425              		.loc 1 1223 0
 3426 0cd6 924B     		ldr	r3, .L199+16
 3427 0cd8 1B68     		ldr	r3, [r3]
 3428 0cda 904A     		ldr	r2, .L199+12
 3429 0cdc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3430 0cde 914A     		ldr	r2, .L199+20
 3431 0ce0 D154     		strb	r1, [r2, r3]
1224:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3432              		.loc 1 1224 0
 3433 0ce2 8E4B     		ldr	r3, .L199+12
 3434 0ce4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3435 0ce6 8E4B     		ldr	r3, .L199+16
 3436 0ce8 1B68     		ldr	r3, [r3]
 3437 0cea 9BB2     		uxth	r3, r3
 3438 0cec 1946     		mov	r1, r3
 3439 0cee 1046     		mov	r0, r2
 3440 0cf0 FFF7FEFF 		bl	EEPROM_WriteByte
1225:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3441              		.loc 1 1225 0
 3442 0cf4 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1226:main.c        ****                 button1Up = 0;
 3443              		.loc 1 1226 0
 3444 0cf8 874B     		ldr	r3, .L199+8
 3445 0cfa 0022     		movs	r2, #0
 3446 0cfc 1A70     		strb	r2, [r3]
 3447 0cfe 07E0     		b	.L124
 3448              	.L123:
1227:main.c        ****             }
1228:main.c        ****             else if (button1_Read())
 3449              		.loc 1 1228 0
 3450 0d00 FFF7FEFF 		bl	button1_Read
 3451 0d04 0346     		mov	r3, r0
 3452 0d06 002B     		cmp	r3, #0
 3453 0d08 02D0     		beq	.L124
1229:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 84


1230:main.c        ****                 button1Up = 1;
 3454              		.loc 1 1230 0
 3455 0d0a 834B     		ldr	r3, .L199+8
 3456 0d0c 0122     		movs	r2, #1
 3457 0d0e 1A70     		strb	r2, [r3]
 3458              	.L124:
1231:main.c        ****             }
1232:main.c        ****             
1233:main.c        ****             if ((!button2_Read()) && (button2Up))
 3459              		.loc 1 1233 0
 3460 0d10 FFF7FEFF 		bl	button2_Read
 3461 0d14 0346     		mov	r3, r0
 3462 0d16 002B     		cmp	r3, #0
 3463 0d18 25D1     		bne	.L125
 3464              		.loc 1 1233 0 is_stmt 0 discriminator 1
 3465 0d1a 834B     		ldr	r3, .L199+24
 3466 0d1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3467 0d1e 002B     		cmp	r3, #0
 3468 0d20 21D0     		beq	.L125
1234:main.c        ****             {
1235:main.c        ****                 currentCopedent += 1;
 3469              		.loc 1 1235 0 is_stmt 1
 3470 0d22 7E4B     		ldr	r3, .L199+12
 3471 0d24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3472 0d26 0133     		adds	r3, r3, #1
 3473 0d28 DAB2     		uxtb	r2, r3
 3474 0d2a 7C4B     		ldr	r3, .L199+12
 3475 0d2c 1A70     		strb	r2, [r3]
1236:main.c        ****                 currentCopedent &= 31;
 3476              		.loc 1 1236 0
 3477 0d2e 7B4B     		ldr	r3, .L199+12
 3478 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3479 0d32 03F01F03 		and	r3, r3, #31
 3480 0d36 DAB2     		uxtb	r2, r3
 3481 0d38 784B     		ldr	r3, .L199+12
 3482 0d3a 1A70     		strb	r2, [r3]
1237:main.c        ****                 necks[currentNeck] = currentCopedent;
 3483              		.loc 1 1237 0
 3484 0d3c 784B     		ldr	r3, .L199+16
 3485 0d3e 1B68     		ldr	r3, [r3]
 3486 0d40 764A     		ldr	r2, .L199+12
 3487 0d42 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3488 0d44 774A     		ldr	r2, .L199+20
 3489 0d46 D154     		strb	r1, [r2, r3]
1238:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3490              		.loc 1 1238 0
 3491 0d48 744B     		ldr	r3, .L199+12
 3492 0d4a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3493 0d4c 744B     		ldr	r3, .L199+16
 3494 0d4e 1B68     		ldr	r3, [r3]
 3495 0d50 9BB2     		uxth	r3, r3
 3496 0d52 1946     		mov	r1, r3
 3497 0d54 1046     		mov	r0, r2
 3498 0d56 FFF7FEFF 		bl	EEPROM_WriteByte
1239:main.c        ****                 
1240:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3499              		.loc 1 1240 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 85


 3500 0d5a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1241:main.c        ****                 button2Up = 0;
 3501              		.loc 1 1241 0
 3502 0d5e 724B     		ldr	r3, .L199+24
 3503 0d60 0022     		movs	r2, #0
 3504 0d62 1A70     		strb	r2, [r3]
 3505 0d64 07E0     		b	.L126
 3506              	.L125:
1242:main.c        ****             }
1243:main.c        ****             else if (button2_Read())
 3507              		.loc 1 1243 0
 3508 0d66 FFF7FEFF 		bl	button2_Read
 3509 0d6a 0346     		mov	r3, r0
 3510 0d6c 002B     		cmp	r3, #0
 3511 0d6e 02D0     		beq	.L126
1244:main.c        ****             {
1245:main.c        ****                 button2Up = 1;
 3512              		.loc 1 1245 0
 3513 0d70 6D4B     		ldr	r3, .L199+24
 3514 0d72 0122     		movs	r2, #1
 3515 0d74 1A70     		strb	r2, [r3]
 3516              	.L126:
1246:main.c        ****             }
1247:main.c        ****             
1248:main.c        ****             if ((!button3_Read()) && (button3Up))
 3517              		.loc 1 1248 0
 3518 0d76 FFF7FEFF 		bl	button3_Read
 3519 0d7a 0346     		mov	r3, r0
 3520 0d7c 002B     		cmp	r3, #0
 3521 0d7e 16D1     		bne	.L127
 3522              		.loc 1 1248 0 is_stmt 0 discriminator 1
 3523 0d80 6A4B     		ldr	r3, .L199+28
 3524 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3525 0d84 002B     		cmp	r3, #0
 3526 0d86 12D0     		beq	.L127
1249:main.c        ****             {
1250:main.c        ****                 patchNum -= 1;
 3527              		.loc 1 1250 0 is_stmt 1
 3528 0d88 694B     		ldr	r3, .L199+32
 3529 0d8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3530 0d8c 013B     		subs	r3, r3, #1
 3531 0d8e DAB2     		uxtb	r2, r3
 3532 0d90 674B     		ldr	r3, .L199+32
 3533 0d92 1A70     		strb	r2, [r3]
1251:main.c        ****                 patchNum &= 63;
 3534              		.loc 1 1251 0
 3535 0d94 664B     		ldr	r3, .L199+32
 3536 0d96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3537 0d98 03F03F03 		and	r3, r3, #63
 3538 0d9c DAB2     		uxtb	r2, r3
 3539 0d9e 644B     		ldr	r3, .L199+32
 3540 0da0 1A70     		strb	r2, [r3]
1252:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3541              		.loc 1 1252 0
 3542 0da2 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1253:main.c        ****                 button3Up = 0;
 3543              		.loc 1 1253 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 86


 3544 0da6 614B     		ldr	r3, .L199+28
 3545 0da8 0022     		movs	r2, #0
 3546 0daa 1A70     		strb	r2, [r3]
 3547 0dac 07E0     		b	.L128
 3548              	.L127:
1254:main.c        ****             }
1255:main.c        ****             else if (button3_Read())
 3549              		.loc 1 1255 0
 3550 0dae FFF7FEFF 		bl	button3_Read
 3551 0db2 0346     		mov	r3, r0
 3552 0db4 002B     		cmp	r3, #0
 3553 0db6 02D0     		beq	.L128
1256:main.c        ****             {
1257:main.c        ****                 button3Up = 1;
 3554              		.loc 1 1257 0
 3555 0db8 5C4B     		ldr	r3, .L199+28
 3556 0dba 0122     		movs	r2, #1
 3557 0dbc 1A70     		strb	r2, [r3]
 3558              	.L128:
1258:main.c        ****             }
1259:main.c        ****             
1260:main.c        ****             if ((!button4_Read()) && (button4Up))
 3559              		.loc 1 1260 0
 3560 0dbe FFF7FEFF 		bl	button4_Read
 3561 0dc2 0346     		mov	r3, r0
 3562 0dc4 002B     		cmp	r3, #0
 3563 0dc6 16D1     		bne	.L129
 3564              		.loc 1 1260 0 is_stmt 0 discriminator 1
 3565 0dc8 5A4B     		ldr	r3, .L199+36
 3566 0dca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3567 0dcc 002B     		cmp	r3, #0
 3568 0dce 12D0     		beq	.L129
1261:main.c        ****             {
1262:main.c        ****                 patchNum += 1;
 3569              		.loc 1 1262 0 is_stmt 1
 3570 0dd0 574B     		ldr	r3, .L199+32
 3571 0dd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3572 0dd4 0133     		adds	r3, r3, #1
 3573 0dd6 DAB2     		uxtb	r2, r3
 3574 0dd8 554B     		ldr	r3, .L199+32
 3575 0dda 1A70     		strb	r2, [r3]
1263:main.c        ****                 patchNum &= 63;
 3576              		.loc 1 1263 0
 3577 0ddc 544B     		ldr	r3, .L199+32
 3578 0dde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3579 0de0 03F03F03 		and	r3, r3, #63
 3580 0de4 DAB2     		uxtb	r2, r3
 3581 0de6 524B     		ldr	r3, .L199+32
 3582 0de8 1A70     		strb	r2, [r3]
1264:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3583              		.loc 1 1264 0
 3584 0dea FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1265:main.c        ****                 button4Up = 0;
 3585              		.loc 1 1265 0
 3586 0dee 514B     		ldr	r3, .L199+36
 3587 0df0 0022     		movs	r2, #0
 3588 0df2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 87


 3589 0df4 CCE0     		b	.L131
 3590              	.L129:
1266:main.c        ****             }
1267:main.c        ****             else if (button4_Read())
 3591              		.loc 1 1267 0
 3592 0df6 FFF7FEFF 		bl	button4_Read
 3593 0dfa 0346     		mov	r3, r0
 3594 0dfc 002B     		cmp	r3, #0
 3595 0dfe 00F0C780 		beq	.L131
1268:main.c        ****             {
1269:main.c        ****                 button4Up = 1;
 3596              		.loc 1 1269 0
 3597 0e02 4C4B     		ldr	r3, .L199+36
 3598 0e04 0122     		movs	r2, #1
 3599 0e06 1A70     		strb	r2, [r3]
 3600 0e08 C2E0     		b	.L131
 3601              	.L122:
1270:main.c        ****             }
1271:main.c        ****         }
1272:main.c        ****         //if in edit mode, then /left right up down work differently
1273:main.c        ****         else
1274:main.c        ****         {
1275:main.c        ****         
1276:main.c        ****             if ((!button1_Read()) && (button1Up))
 3602              		.loc 1 1276 0
 3603 0e0a FFF7FEFF 		bl	button1_Read
 3604 0e0e 0346     		mov	r3, r0
 3605 0e10 002B     		cmp	r3, #0
 3606 0e12 25D1     		bne	.L132
 3607              		.loc 1 1276 0 is_stmt 0 discriminator 1
 3608 0e14 404B     		ldr	r3, .L199+8
 3609 0e16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3610 0e18 002B     		cmp	r3, #0
 3611 0e1a 21D0     		beq	.L132
1277:main.c        ****             {
1278:main.c        ****                 currentCopedent -= 1;
 3612              		.loc 1 1278 0 is_stmt 1
 3613 0e1c 3F4B     		ldr	r3, .L199+12
 3614 0e1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3615 0e20 013B     		subs	r3, r3, #1
 3616 0e22 DAB2     		uxtb	r2, r3
 3617 0e24 3D4B     		ldr	r3, .L199+12
 3618 0e26 1A70     		strb	r2, [r3]
1279:main.c        ****                 currentCopedent &= 31;
 3619              		.loc 1 1279 0
 3620 0e28 3C4B     		ldr	r3, .L199+12
 3621 0e2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3622 0e2c 03F01F03 		and	r3, r3, #31
 3623 0e30 DAB2     		uxtb	r2, r3
 3624 0e32 3A4B     		ldr	r3, .L199+12
 3625 0e34 1A70     		strb	r2, [r3]
1280:main.c        ****                 necks[currentNeck] = currentCopedent;
 3626              		.loc 1 1280 0
 3627 0e36 3A4B     		ldr	r3, .L199+16
 3628 0e38 1B68     		ldr	r3, [r3]
 3629 0e3a 384A     		ldr	r2, .L199+12
 3630 0e3c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 88


 3631 0e3e 394A     		ldr	r2, .L199+20
 3632 0e40 D154     		strb	r1, [r2, r3]
1281:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3633              		.loc 1 1281 0
 3634 0e42 364B     		ldr	r3, .L199+12
 3635 0e44 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3636 0e46 364B     		ldr	r3, .L199+16
 3637 0e48 1B68     		ldr	r3, [r3]
 3638 0e4a 9BB2     		uxth	r3, r3
 3639 0e4c 1946     		mov	r1, r3
 3640 0e4e 1046     		mov	r0, r2
 3641 0e50 FFF7FEFF 		bl	EEPROM_WriteByte
1282:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3642              		.loc 1 1282 0
 3643 0e54 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1283:main.c        ****                 button1Up = 0;
 3644              		.loc 1 1283 0
 3645 0e58 2F4B     		ldr	r3, .L199+8
 3646 0e5a 0022     		movs	r2, #0
 3647 0e5c 1A70     		strb	r2, [r3]
 3648 0e5e 07E0     		b	.L133
 3649              	.L132:
1284:main.c        ****             }
1285:main.c        ****             else if (button1_Read())
 3650              		.loc 1 1285 0
 3651 0e60 FFF7FEFF 		bl	button1_Read
 3652 0e64 0346     		mov	r3, r0
 3653 0e66 002B     		cmp	r3, #0
 3654 0e68 02D0     		beq	.L133
1286:main.c        ****             {
1287:main.c        ****                 button1Up = 1;
 3655              		.loc 1 1287 0
 3656 0e6a 2B4B     		ldr	r3, .L199+8
 3657 0e6c 0122     		movs	r2, #1
 3658 0e6e 1A70     		strb	r2, [r3]
 3659              	.L133:
1288:main.c        ****             }
1289:main.c        ****             
1290:main.c        ****             if ((!button2_Read()) && (button2Up))
 3660              		.loc 1 1290 0
 3661 0e70 FFF7FEFF 		bl	button2_Read
 3662 0e74 0346     		mov	r3, r0
 3663 0e76 002B     		cmp	r3, #0
 3664 0e78 25D1     		bne	.L134
 3665              		.loc 1 1290 0 is_stmt 0 discriminator 1
 3666 0e7a 2B4B     		ldr	r3, .L199+24
 3667 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3668 0e7e 002B     		cmp	r3, #0
 3669 0e80 21D0     		beq	.L134
1291:main.c        ****             {
1292:main.c        ****                 currentCopedent += 1;
 3670              		.loc 1 1292 0 is_stmt 1
 3671 0e82 264B     		ldr	r3, .L199+12
 3672 0e84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3673 0e86 0133     		adds	r3, r3, #1
 3674 0e88 DAB2     		uxtb	r2, r3
 3675 0e8a 244B     		ldr	r3, .L199+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 89


 3676 0e8c 1A70     		strb	r2, [r3]
1293:main.c        ****                 currentCopedent &= 31;
 3677              		.loc 1 1293 0
 3678 0e8e 234B     		ldr	r3, .L199+12
 3679 0e90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3680 0e92 03F01F03 		and	r3, r3, #31
 3681 0e96 DAB2     		uxtb	r2, r3
 3682 0e98 204B     		ldr	r3, .L199+12
 3683 0e9a 1A70     		strb	r2, [r3]
1294:main.c        ****                 necks[currentNeck] = currentCopedent;
 3684              		.loc 1 1294 0
 3685 0e9c 204B     		ldr	r3, .L199+16
 3686 0e9e 1B68     		ldr	r3, [r3]
 3687 0ea0 1E4A     		ldr	r2, .L199+12
 3688 0ea2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3689 0ea4 1F4A     		ldr	r2, .L199+20
 3690 0ea6 D154     		strb	r1, [r2, r3]
1295:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3691              		.loc 1 1295 0
 3692 0ea8 1C4B     		ldr	r3, .L199+12
 3693 0eaa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3694 0eac 1C4B     		ldr	r3, .L199+16
 3695 0eae 1B68     		ldr	r3, [r3]
 3696 0eb0 9BB2     		uxth	r3, r3
 3697 0eb2 1946     		mov	r1, r3
 3698 0eb4 1046     		mov	r0, r2
 3699 0eb6 FFF7FEFF 		bl	EEPROM_WriteByte
1296:main.c        ****                 displayCurrentPresetNameAndCopedent();  
 3700              		.loc 1 1296 0
 3701 0eba FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1297:main.c        ****                 button2Up = 0;
 3702              		.loc 1 1297 0
 3703 0ebe 1A4B     		ldr	r3, .L199+24
 3704 0ec0 0022     		movs	r2, #0
 3705 0ec2 1A70     		strb	r2, [r3]
 3706 0ec4 07E0     		b	.L135
 3707              	.L134:
1298:main.c        ****             }
1299:main.c        ****             else if (button2_Read())
 3708              		.loc 1 1299 0
 3709 0ec6 FFF7FEFF 		bl	button2_Read
 3710 0eca 0346     		mov	r3, r0
 3711 0ecc 002B     		cmp	r3, #0
 3712 0ece 02D0     		beq	.L135
1300:main.c        ****             {
1301:main.c        ****                 button2Up = 1;
 3713              		.loc 1 1301 0
 3714 0ed0 154B     		ldr	r3, .L199+24
 3715 0ed2 0122     		movs	r2, #1
 3716 0ed4 1A70     		strb	r2, [r3]
 3717              	.L135:
1302:main.c        ****             }
1303:main.c        ****             
1304:main.c        ****             if ((!button3_Read()) && (button3Up))
 3718              		.loc 1 1304 0
 3719 0ed6 FFF7FEFF 		bl	button3_Read
 3720 0eda 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 90


 3721 0edc 002B     		cmp	r3, #0
 3722 0ede 2BD1     		bne	.L136
 3723              		.loc 1 1304 0 is_stmt 0 discriminator 1
 3724 0ee0 124B     		ldr	r3, .L199+28
 3725 0ee2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3726 0ee4 002B     		cmp	r3, #0
 3727 0ee6 27D0     		beq	.L136
1305:main.c        ****             {
1306:main.c        ****                 patchNum -= 1;
 3728              		.loc 1 1306 0 is_stmt 1
 3729 0ee8 114B     		ldr	r3, .L199+32
 3730 0eea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3731 0eec 013B     		subs	r3, r3, #1
 3732 0eee DAB2     		uxtb	r2, r3
 3733 0ef0 0F4B     		ldr	r3, .L199+32
 3734 0ef2 1A70     		strb	r2, [r3]
1307:main.c        ****                 patchNum &= 63;
 3735              		.loc 1 1307 0
 3736 0ef4 0E4B     		ldr	r3, .L199+32
 3737 0ef6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3738 0ef8 03F03F03 		and	r3, r3, #63
 3739 0efc DAB2     		uxtb	r2, r3
 3740 0efe 0C4B     		ldr	r3, .L199+32
 3741 0f00 1A70     		strb	r2, [r3]
1308:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3742              		.loc 1 1308 0
 3743 0f02 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1309:main.c        ****                 button3Up = 0;
 3744              		.loc 1 1309 0
 3745 0f06 094B     		ldr	r3, .L199+28
 3746 0f08 0022     		movs	r2, #0
 3747 0f0a 1A70     		strb	r2, [r3]
 3748 0f0c 1CE0     		b	.L137
 3749              	.L200:
 3750 0f0e 00BF     		.align	2
 3751              	.L199:
 3752 0f10 00000000 		.word	enterUp
 3753 0f14 00000000 		.word	editMode
 3754 0f18 00000000 		.word	button1Up
 3755 0f1c 00000000 		.word	currentCopedent
 3756 0f20 00000000 		.word	currentNeck
 3757 0f24 00000000 		.word	necks
 3758 0f28 00000000 		.word	button2Up
 3759 0f2c 00000000 		.word	button3Up
 3760 0f30 00000000 		.word	patchNum
 3761 0f34 00000000 		.word	button4Up
 3762              	.L136:
1310:main.c        ****             }
1311:main.c        ****             else if (button3_Read())
 3763              		.loc 1 1311 0
 3764 0f38 FFF7FEFF 		bl	button3_Read
 3765 0f3c 0346     		mov	r3, r0
 3766 0f3e 002B     		cmp	r3, #0
 3767 0f40 02D0     		beq	.L137
1312:main.c        ****             {
1313:main.c        ****                 button3Up = 1;
 3768              		.loc 1 1313 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 91


 3769 0f42 974B     		ldr	r3, .L201
 3770 0f44 0122     		movs	r2, #1
 3771 0f46 1A70     		strb	r2, [r3]
 3772              	.L137:
1314:main.c        ****             }
1315:main.c        ****             
1316:main.c        ****             if ((!button4_Read()) && (button4Up))
 3773              		.loc 1 1316 0
 3774 0f48 FFF7FEFF 		bl	button4_Read
 3775 0f4c 0346     		mov	r3, r0
 3776 0f4e 002B     		cmp	r3, #0
 3777 0f50 16D1     		bne	.L138
 3778              		.loc 1 1316 0 is_stmt 0 discriminator 1
 3779 0f52 944B     		ldr	r3, .L201+4
 3780 0f54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3781 0f56 002B     		cmp	r3, #0
 3782 0f58 12D0     		beq	.L138
1317:main.c        ****             {
1318:main.c        ****                 patchNum += 1;
 3783              		.loc 1 1318 0 is_stmt 1
 3784 0f5a 934B     		ldr	r3, .L201+8
 3785 0f5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3786 0f5e 0133     		adds	r3, r3, #1
 3787 0f60 DAB2     		uxtb	r2, r3
 3788 0f62 914B     		ldr	r3, .L201+8
 3789 0f64 1A70     		strb	r2, [r3]
1319:main.c        ****                 patchNum &= 63;
 3790              		.loc 1 1319 0
 3791 0f66 904B     		ldr	r3, .L201+8
 3792 0f68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3793 0f6a 03F03F03 		and	r3, r3, #63
 3794 0f6e DAB2     		uxtb	r2, r3
 3795 0f70 8D4B     		ldr	r3, .L201+8
 3796 0f72 1A70     		strb	r2, [r3]
1320:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3797              		.loc 1 1320 0
 3798 0f74 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1321:main.c        ****                 button4Up = 0;
 3799              		.loc 1 1321 0
 3800 0f78 8A4B     		ldr	r3, .L201+4
 3801 0f7a 0022     		movs	r2, #0
 3802 0f7c 1A70     		strb	r2, [r3]
 3803 0f7e 07E0     		b	.L131
 3804              	.L138:
1322:main.c        ****             }
1323:main.c        ****             else if (button4_Read())
 3805              		.loc 1 1323 0
 3806 0f80 FFF7FEFF 		bl	button4_Read
 3807 0f84 0346     		mov	r3, r0
 3808 0f86 002B     		cmp	r3, #0
 3809 0f88 02D0     		beq	.L131
1324:main.c        ****             {
1325:main.c        ****                 button4Up = 1;
 3810              		.loc 1 1325 0
 3811 0f8a 864B     		ldr	r3, .L201+4
 3812 0f8c 0122     		movs	r2, #1
 3813 0f8e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 92


 3814              	.L131:
1326:main.c        ****             }
1327:main.c        ****         }
1328:main.c        ****         if ((!edit_button_Read()) && (editUp))
 3815              		.loc 1 1328 0
 3816 0f90 FFF7FEFF 		bl	edit_button_Read
 3817 0f94 0346     		mov	r3, r0
 3818 0f96 002B     		cmp	r3, #0
 3819 0f98 40F0AB80 		bne	.L139
 3820              		.loc 1 1328 0 is_stmt 0 discriminator 1
 3821 0f9c 834B     		ldr	r3, .L201+12
 3822 0f9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3823 0fa0 002B     		cmp	r3, #0
 3824 0fa2 00F0A680 		beq	.L139
1329:main.c        ****         {
1330:main.c        ****             editMode = !editMode;
 3825              		.loc 1 1330 0 is_stmt 1
 3826 0fa6 824B     		ldr	r3, .L201+16
 3827 0fa8 1B68     		ldr	r3, [r3]
 3828 0faa 002B     		cmp	r3, #0
 3829 0fac 0CBF     		ite	eq
 3830 0fae 0123     		moveq	r3, #1
 3831 0fb0 0023     		movne	r3, #0
 3832 0fb2 DBB2     		uxtb	r3, r3
 3833 0fb4 1A46     		mov	r2, r3
 3834 0fb6 7E4B     		ldr	r3, .L201+16
 3835 0fb8 1A60     		str	r2, [r3]
1331:main.c        ****             //for now edit mode is calibration mode
1332:main.c        ****             calibrationMode = !calibrationMode;
 3836              		.loc 1 1332 0
 3837 0fba 7E4B     		ldr	r3, .L201+20
 3838 0fbc 1B68     		ldr	r3, [r3]
 3839 0fbe 002B     		cmp	r3, #0
 3840 0fc0 0CBF     		ite	eq
 3841 0fc2 0123     		moveq	r3, #1
 3842 0fc4 0023     		movne	r3, #0
 3843 0fc6 DBB2     		uxtb	r3, r3
 3844 0fc8 1A46     		mov	r2, r3
 3845 0fca 7A4B     		ldr	r3, .L201+20
 3846 0fcc 1A60     		str	r2, [r3]
1333:main.c        ****             LED_red2_Write(editMode);
 3847              		.loc 1 1333 0
 3848 0fce 784B     		ldr	r3, .L201+16
 3849 0fd0 1B68     		ldr	r3, [r3]
 3850 0fd2 DBB2     		uxtb	r3, r3
 3851 0fd4 1846     		mov	r0, r3
 3852 0fd6 FFF7FEFF 		bl	LED_red2_Write
1334:main.c        ****             editUp = 0;
 3853              		.loc 1 1334 0
 3854 0fda 744B     		ldr	r3, .L201+12
 3855 0fdc 0022     		movs	r2, #0
 3856 0fde 1A70     		strb	r2, [r3]
1335:main.c        ****             if (editMode)
 3857              		.loc 1 1335 0
 3858 0fe0 734B     		ldr	r3, .L201+16
 3859 0fe2 1B68     		ldr	r3, [r3]
 3860 0fe4 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 93


 3861 0fe6 33D0     		beq	.L140
1336:main.c        ****             {
1337:main.c        ****                 OLEDclear(128, 64);
 3862              		.loc 1 1337 0
 3863 0fe8 4021     		movs	r1, #64
 3864 0fea 8020     		movs	r0, #128
 3865 0fec FFF7FEFF 		bl	OLEDclear
1338:main.c        ****                 
1339:main.c        ****                 OLEDwriteString("CALIBRATION", 11, 2, FirstLine);
 3866              		.loc 1 1339 0
 3867 0ff0 0023     		movs	r3, #0
 3868 0ff2 0222     		movs	r2, #2
 3869 0ff4 0B21     		movs	r1, #11
 3870 0ff6 7048     		ldr	r0, .L201+24
 3871 0ff8 FFF7FEFF 		bl	OLEDwriteString
1340:main.c        ****                 OLEDwriteString("MOVE PEDALS", 11, 2, SecondLine);
 3872              		.loc 1 1340 0
 3873 0ffc 0123     		movs	r3, #1
 3874 0ffe 0222     		movs	r2, #2
 3875 1000 0B21     		movs	r1, #11
 3876 1002 6E48     		ldr	r0, .L201+28
 3877 1004 FFF7FEFF 		bl	OLEDwriteString
1341:main.c        ****                 OLEDwriteString("AND LEVERS", 11, 2, ThirdLine);
 3878              		.loc 1 1341 0
 3879 1008 0223     		movs	r3, #2
 3880 100a 0222     		movs	r2, #2
 3881 100c 0B21     		movs	r1, #11
 3882 100e 6C48     		ldr	r0, .L201+32
 3883 1010 FFF7FEFF 		bl	OLEDwriteString
1342:main.c        ****                 OLEDwriteString("THEN EXIT", 11, 2, FourthLine);
 3884              		.loc 1 1342 0
 3885 1014 0323     		movs	r3, #3
 3886 1016 0222     		movs	r2, #2
 3887 1018 0B21     		movs	r1, #11
 3888 101a 6A48     		ldr	r0, .L201+36
 3889 101c FFF7FEFF 		bl	OLEDwriteString
1343:main.c        ****                 mainOLEDWaitingToSend = 1;
 3890              		.loc 1 1343 0
 3891 1020 694B     		ldr	r3, .L201+40
 3892 1022 0122     		movs	r2, #1
 3893 1024 1A60     		str	r2, [r3]
 3894              	.LBB23:
1344:main.c        ****                 
1345:main.c        ****                 //entering calibration mode, clear the pedals low and high arrays
1346:main.c        ****                 for (int i = 0; i < 10; i++)
 3895              		.loc 1 1346 0
 3896 1026 0023     		movs	r3, #0
 3897 1028 7B65     		str	r3, [r7, #84]
 3898 102a 0DE0     		b	.L141
 3899              	.L142:
1347:main.c        ****                 {
1348:main.c        ****                     pedals_low[i] = 4095;
 3900              		.loc 1 1348 0 discriminator 3
 3901 102c 674A     		ldr	r2, .L201+44
 3902 102e 7B6D     		ldr	r3, [r7, #84]
 3903 1030 40F6FF71 		movw	r1, #4095
 3904 1034 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 94


1349:main.c        ****                     pedals_high[i] = 0;
 3905              		.loc 1 1349 0 discriminator 3
 3906 1038 654A     		ldr	r2, .L201+48
 3907 103a 7B6D     		ldr	r3, [r7, #84]
 3908 103c 0021     		movs	r1, #0
 3909 103e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1346:main.c        ****                 {
 3910              		.loc 1 1346 0 discriminator 3
 3911 1042 7B6D     		ldr	r3, [r7, #84]
 3912 1044 0133     		adds	r3, r3, #1
 3913 1046 7B65     		str	r3, [r7, #84]
 3914              	.L141:
1346:main.c        ****                 {
 3915              		.loc 1 1346 0 is_stmt 0 discriminator 1
 3916 1048 7B6D     		ldr	r3, [r7, #84]
 3917 104a 092B     		cmp	r3, #9
 3918 104c EEDD     		ble	.L142
 3919              	.LBE23:
1335:main.c        ****             {
 3920              		.loc 1 1335 0 is_stmt 1
 3921 104e 58E0     		b	.L146
 3922              	.L140:
1350:main.c        ****                 }
1351:main.c        ****             }
1352:main.c        ****             else
1353:main.c        ****             {
1354:main.c        ****                 //draw normal screen
1355:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3923              		.loc 1 1355 0
 3924 1050 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1356:main.c        ****                 calculatePedalRatios();
 3925              		.loc 1 1356 0
 3926 1054 FFF7FEFF 		bl	calculatePedalRatios
 3927              	.LBB24:
1357:main.c        ****                 //now need to store this in EEPROM.                
1358:main.c        ****                 for (int i = 0; i < NUM_PEDALS; i++)
 3928              		.loc 1 1358 0
 3929 1058 0023     		movs	r3, #0
 3930 105a 3B65     		str	r3, [r7, #80]
 3931 105c 45E0     		b	.L144
 3932              	.L145:
1359:main.c        ****                 {
1360:main.c        ****                      EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_CALIBRATION_OFFSET + (i*4));
 3933              		.loc 1 1360 0 discriminator 3
 3934 105e 5B4A     		ldr	r2, .L201+44
 3935 1060 3B6D     		ldr	r3, [r7, #80]
 3936 1062 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3937 1066 1B0A     		lsrs	r3, r3, #8
 3938 1068 9BB2     		uxth	r3, r3
 3939 106a DAB2     		uxtb	r2, r3
 3940 106c 3B6D     		ldr	r3, [r7, #80]
 3941 106e 03F2E713 		addw	r3, r3, #487
 3942 1072 9BB2     		uxth	r3, r3
 3943 1074 9B00     		lsls	r3, r3, #2
 3944 1076 9BB2     		uxth	r3, r3
 3945 1078 1946     		mov	r1, r3
 3946 107a 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 95


 3947 107c FFF7FEFF 		bl	EEPROM_WriteByte
1361:main.c        ****                      EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 1
 3948              		.loc 1 1361 0 discriminator 3
 3949 1080 524A     		ldr	r2, .L201+44
 3950 1082 3B6D     		ldr	r3, [r7, #80]
 3951 1084 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3952 1088 DAB2     		uxtb	r2, r3
 3953 108a 3B6D     		ldr	r3, [r7, #80]
 3954 108c 9BB2     		uxth	r3, r3
 3955 108e 9B00     		lsls	r3, r3, #2
 3956 1090 9BB2     		uxth	r3, r3
 3957 1092 03F29D73 		addw	r3, r3, #1949
 3958 1096 9BB2     		uxth	r3, r3
 3959 1098 1946     		mov	r1, r3
 3960 109a 1046     		mov	r0, r2
 3961 109c FFF7FEFF 		bl	EEPROM_WriteByte
1362:main.c        ****                      EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_CALIBRATION_OFFSET + ((i*4) + 2
 3962              		.loc 1 1362 0 discriminator 3
 3963 10a0 4B4A     		ldr	r2, .L201+48
 3964 10a2 3B6D     		ldr	r3, [r7, #80]
 3965 10a4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3966 10a8 1B0A     		lsrs	r3, r3, #8
 3967 10aa 9BB2     		uxth	r3, r3
 3968 10ac DAB2     		uxtb	r2, r3
 3969 10ae 3B6D     		ldr	r3, [r7, #80]
 3970 10b0 9BB2     		uxth	r3, r3
 3971 10b2 9B00     		lsls	r3, r3, #2
 3972 10b4 9BB2     		uxth	r3, r3
 3973 10b6 03F29E73 		addw	r3, r3, #1950
 3974 10ba 9BB2     		uxth	r3, r3
 3975 10bc 1946     		mov	r1, r3
 3976 10be 1046     		mov	r0, r2
 3977 10c0 FFF7FEFF 		bl	EEPROM_WriteByte
1363:main.c        ****                      EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 
 3978              		.loc 1 1363 0 discriminator 3
 3979 10c4 424A     		ldr	r2, .L201+48
 3980 10c6 3B6D     		ldr	r3, [r7, #80]
 3981 10c8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3982 10cc DAB2     		uxtb	r2, r3
 3983 10ce 3B6D     		ldr	r3, [r7, #80]
 3984 10d0 9BB2     		uxth	r3, r3
 3985 10d2 9B00     		lsls	r3, r3, #2
 3986 10d4 9BB2     		uxth	r3, r3
 3987 10d6 03F29F73 		addw	r3, r3, #1951
 3988 10da 9BB2     		uxth	r3, r3
 3989 10dc 1946     		mov	r1, r3
 3990 10de 1046     		mov	r0, r2
 3991 10e0 FFF7FEFF 		bl	EEPROM_WriteByte
1358:main.c        ****                 {
 3992              		.loc 1 1358 0 discriminator 3
 3993 10e4 3B6D     		ldr	r3, [r7, #80]
 3994 10e6 0133     		adds	r3, r3, #1
 3995 10e8 3B65     		str	r3, [r7, #80]
 3996              	.L144:
1358:main.c        ****                 {
 3997              		.loc 1 1358 0 is_stmt 0 discriminator 1
 3998 10ea 3B6D     		ldr	r3, [r7, #80]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 96


 3999 10ec 092B     		cmp	r3, #9
 4000 10ee B6DD     		ble	.L145
 4001              	.LBE24:
1335:main.c        ****             {
 4002              		.loc 1 1335 0 is_stmt 1
 4003 10f0 07E0     		b	.L146
 4004              	.L139:
1364:main.c        ****                 }
1365:main.c        **** 
1366:main.c        ****                 // also need to make this a little more hidden - maybe first edit then Enter?
1367:main.c        ****             }
1368:main.c        ****         }
1369:main.c        ****         else if (edit_button_Read())
 4005              		.loc 1 1369 0
 4006 10f2 FFF7FEFF 		bl	edit_button_Read
 4007 10f6 0346     		mov	r3, r0
 4008 10f8 002B     		cmp	r3, #0
 4009 10fa 02D0     		beq	.L146
1370:main.c        ****         {
1371:main.c        ****             editUp = 1;
 4010              		.loc 1 1371 0
 4011 10fc 2B4B     		ldr	r3, .L201+12
 4012 10fe 0122     		movs	r2, #1
 4013 1100 1A70     		strb	r2, [r3]
 4014              	.L146:
1372:main.c        ****         }
1373:main.c        ****         
1374:main.c        ****         if (octave != prevOctave)
1375:main.c        ****         {
1376:main.c        ****             //sendMIDIControlChange(90, octave);
1377:main.c        ****         }
1378:main.c        ****         prevOctave = octave;
 4015              		.loc 1 1378 0
 4016 1102 344B     		ldr	r3, .L201+52
 4017 1104 1B68     		ldr	r3, [r3]
 4018 1106 344A     		ldr	r2, .L201+56
 4019 1108 1360     		str	r3, [r2]
 4020              	.LBB25:
1379:main.c        ****         
1380:main.c        ****         
1381:main.c        ****         for (int i=  0; i < 4; i++)
 4021              		.loc 1 1381 0
 4022 110a 0023     		movs	r3, #0
 4023 110c FB64     		str	r3, [r7, #76]
 4024 110e 3EE0     		b	.L147
 4025              	.L150:
1382:main.c        ****         {
1383:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)/16);
 4026              		.loc 1 1383 0
 4027 1110 FB6C     		ldr	r3, [r7, #76]
 4028 1112 9BB2     		uxth	r3, r3
 4029 1114 1846     		mov	r0, r3
 4030 1116 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4031 111a 0346     		mov	r3, r0
 4032 111c 002B     		cmp	r3, #0
 4033 111e 00DA     		bge	.L148
 4034 1120 0F33     		adds	r3, r3, #15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 97


 4035              	.L148:
 4036 1122 1B11     		asrs	r3, r3, #4
 4037 1124 1BB2     		sxth	r3, r3
 4038 1126 D9B2     		uxtb	r1, r3
 4039 1128 2C4A     		ldr	r2, .L201+60
 4040 112a FB6C     		ldr	r3, [r7, #76]
 4041 112c 1344     		add	r3, r3, r2
 4042 112e 0A46     		mov	r2, r1
 4043 1130 1A70     		strb	r2, [r3]
1384:main.c        ****             
1385:main.c        ****             knobs[i] = 255 - knobs[i];
 4044              		.loc 1 1385 0
 4045 1132 2A4A     		ldr	r2, .L201+60
 4046 1134 FB6C     		ldr	r3, [r7, #76]
 4047 1136 1344     		add	r3, r3, r2
 4048 1138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4049 113a DB43     		mvns	r3, r3
 4050 113c D9B2     		uxtb	r1, r3
 4051 113e 274A     		ldr	r2, .L201+60
 4052 1140 FB6C     		ldr	r3, [r7, #76]
 4053 1142 1344     		add	r3, r3, r2
 4054 1144 0A46     		mov	r2, r1
 4055 1146 1A70     		strb	r2, [r3]
1386:main.c        ****             
1387:main.c        ****             if (knobs[i] != prevKnobs[i])
 4056              		.loc 1 1387 0
 4057 1148 244A     		ldr	r2, .L201+60
 4058 114a FB6C     		ldr	r3, [r7, #76]
 4059 114c 1344     		add	r3, r3, r2
 4060 114e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4061 1150 2349     		ldr	r1, .L201+64
 4062 1152 FB6C     		ldr	r3, [r7, #76]
 4063 1154 0B44     		add	r3, r3, r1
 4064 1156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4065 1158 9A42     		cmp	r2, r3
 4066 115a 0CD0     		beq	.L149
1388:main.c        ****             {
1389:main.c        ****                 sendMIDIControlChange(i+17, knobs[i]/2, 0);
 4067              		.loc 1 1389 0
 4068 115c FB6C     		ldr	r3, [r7, #76]
 4069 115e 03F11100 		add	r0, r3, #17
 4070 1162 1E4A     		ldr	r2, .L201+60
 4071 1164 FB6C     		ldr	r3, [r7, #76]
 4072 1166 1344     		add	r3, r3, r2
 4073 1168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4074 116a 5B08     		lsrs	r3, r3, #1
 4075 116c DBB2     		uxtb	r3, r3
 4076 116e 0022     		movs	r2, #0
 4077 1170 1946     		mov	r1, r3
 4078 1172 FFF7FEFF 		bl	sendMIDIControlChange
 4079              	.L149:
1390:main.c        ****             }
1391:main.c        ****             prevKnobs[i] = knobs[i];
 4080              		.loc 1 1391 0 discriminator 2
 4081 1176 194A     		ldr	r2, .L201+60
 4082 1178 FB6C     		ldr	r3, [r7, #76]
 4083 117a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 98


 4084 117c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4085 117e 184A     		ldr	r2, .L201+64
 4086 1180 FB6C     		ldr	r3, [r7, #76]
 4087 1182 1344     		add	r3, r3, r2
 4088 1184 0A46     		mov	r2, r1
 4089 1186 1A70     		strb	r2, [r3]
1381:main.c        ****         {
 4090              		.loc 1 1381 0 discriminator 2
 4091 1188 FB6C     		ldr	r3, [r7, #76]
 4092 118a 0133     		adds	r3, r3, #1
 4093 118c FB64     		str	r3, [r7, #76]
 4094              	.L147:
1381:main.c        ****         {
 4095              		.loc 1 1381 0 is_stmt 0 discriminator 1
 4096 118e FB6C     		ldr	r3, [r7, #76]
 4097 1190 032B     		cmp	r3, #3
 4098 1192 BDDD     		ble	.L150
 4099              	.LBE25:
1392:main.c        ****         }
1393:main.c        ****         
1394:main.c        ****         testpin4_Write(1);
 4100              		.loc 1 1394 0 is_stmt 1
 4101 1194 0120     		movs	r0, #1
 4102 1196 FFF7FEFF 		bl	testpin4_Write
 4103              	.LBB26:
1395:main.c        ****         //calculate the pitch of each string based on the current Copedent
1396:main.c        ****         for (int i = 0; i < numStrings; i++)
 4104              		.loc 1 1396 0
 4105 119a 0023     		movs	r3, #0
 4106 119c BB64     		str	r3, [r7, #72]
 4107 119e 43E1     		b	.L151
 4108              	.L202:
 4109              		.align	2
 4110              	.L201:
 4111 11a0 00000000 		.word	button3Up
 4112 11a4 00000000 		.word	button4Up
 4113 11a8 00000000 		.word	patchNum
 4114 11ac 00000000 		.word	editUp
 4115 11b0 00000000 		.word	editMode
 4116 11b4 00000000 		.word	calibrationMode
 4117 11b8 04040000 		.word	.LC1
 4118 11bc 10040000 		.word	.LC2
 4119 11c0 1C040000 		.word	.LC3
 4120 11c4 28040000 		.word	.LC4
 4121 11c8 00000000 		.word	mainOLEDWaitingToSend
 4122 11cc 00000000 		.word	pedals_low
 4123 11d0 00000000 		.word	pedals_high
 4124 11d4 00000000 		.word	octave
 4125 11d8 00000000 		.word	prevOctave
 4126 11dc 00000000 		.word	knobs
 4127 11e0 00000000 		.word	prevKnobs
 4128              	.L154:
 4129              	.LBB27:
1397:main.c        ****     	{
1398:main.c        ****     		//interpolate ratios for each of the strings
1399:main.c        ****            /*
1400:main.c        ****             float myMappedPos;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 99


1401:main.c        ****             if (dualSlider)
1402:main.c        ****             {
1403:main.c        ****                myMappedPos = LEAF_interpolation_linear(stringMappedPositions[0], stringMappedPositi
1404:main.c        ****             }
1405:main.c        ****             else
1406:main.c        ****             {
1407:main.c        ****                 myMappedPos = stringMappedPositions[0];
1408:main.c        ****             }
1409:main.c        **** 
1410:main.c        ****     		stringOctave[i] = powf(2.0f,octave);
1411:main.c        ****             */
1412:main.c        ****     		//then apply those ratios to the fundamental frequencies
1413:main.c        ****     		float tempMIDI = (copedent[necks[currentNeck]][0][i] +
 4130              		.loc 1 1413 0
 4131 11e4 A04B     		ldr	r3, .L203
 4132 11e6 1B68     		ldr	r3, [r3]
 4133 11e8 A04A     		ldr	r2, .L203+4
 4134 11ea D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4135 11ec 1A46     		mov	r2, r3
 4136 11ee A049     		ldr	r1, .L203+8
 4137 11f0 1346     		mov	r3, r2
 4138 11f2 5B01     		lsls	r3, r3, #5
 4139 11f4 1344     		add	r3, r3, r2
 4140 11f6 9B00     		lsls	r3, r3, #2
 4141 11f8 BA6C     		ldr	r2, [r7, #72]
 4142 11fa 1344     		add	r3, r3, r2
 4143 11fc 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1414:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4144              		.loc 1 1414 0
 4145 1200 9C4B     		ldr	r3, .L203+12
 4146 1202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4147 1204 1A46     		mov	r2, r3
 4148 1206 9A49     		ldr	r1, .L203+8
 4149 1208 1346     		mov	r3, r2
 4150 120a 5B01     		lsls	r3, r3, #5
 4151 120c 1344     		add	r3, r3, r2
 4152 120e 9B00     		lsls	r3, r3, #2
 4153 1210 BA6C     		ldr	r2, [r7, #72]
 4154 1212 1344     		add	r3, r3, r2
 4155 1214 3033     		adds	r3, r3, #48
 4156 1216 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4157 121a 974B     		ldr	r3, .L203+16
 4158 121c 1B68     		ldr	r3, [r3]	@ float
 4159 121e 1946     		mov	r1, r3
 4160 1220 1046     		mov	r0, r2
 4161 1222 FFF7FEFF 		bl	__aeabi_fmul
 4162 1226 0346     		mov	r3, r0
1413:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4163              		.loc 1 1413 0
 4164 1228 1946     		mov	r1, r3
 4165 122a 2046     		mov	r0, r4
 4166 122c FFF7FEFF 		bl	__aeabi_fadd
 4167 1230 0346     		mov	r3, r0
 4168 1232 1C46     		mov	r4, r3
1415:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4169              		.loc 1 1415 0
 4170 1234 8F4B     		ldr	r3, .L203+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 100


 4171 1236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4172 1238 1A46     		mov	r2, r3
 4173 123a 8D49     		ldr	r1, .L203+8
 4174 123c 1346     		mov	r3, r2
 4175 123e 5B01     		lsls	r3, r3, #5
 4176 1240 1344     		add	r3, r3, r2
 4177 1242 9B00     		lsls	r3, r3, #2
 4178 1244 BA6C     		ldr	r2, [r7, #72]
 4179 1246 1344     		add	r3, r3, r2
 4180 1248 3C33     		adds	r3, r3, #60
 4181 124a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4182 124e 8A4B     		ldr	r3, .L203+16
 4183 1250 5B68     		ldr	r3, [r3, #4]	@ float
 4184 1252 1946     		mov	r1, r3
 4185 1254 1046     		mov	r0, r2
 4186 1256 FFF7FEFF 		bl	__aeabi_fmul
 4187 125a 0346     		mov	r3, r0
1414:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4188              		.loc 1 1414 0
 4189 125c 1946     		mov	r1, r3
 4190 125e 2046     		mov	r0, r4
 4191 1260 FFF7FEFF 		bl	__aeabi_fadd
 4192 1264 0346     		mov	r3, r0
 4193 1266 1C46     		mov	r4, r3
1416:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4194              		.loc 1 1416 0
 4195 1268 824B     		ldr	r3, .L203+12
 4196 126a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4197 126c 1A46     		mov	r2, r3
 4198 126e 8049     		ldr	r1, .L203+8
 4199 1270 1346     		mov	r3, r2
 4200 1272 5B01     		lsls	r3, r3, #5
 4201 1274 1344     		add	r3, r3, r2
 4202 1276 9B00     		lsls	r3, r3, #2
 4203 1278 BA6C     		ldr	r2, [r7, #72]
 4204 127a 1344     		add	r3, r3, r2
 4205 127c 4833     		adds	r3, r3, #72
 4206 127e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4207 1282 7D4B     		ldr	r3, .L203+16
 4208 1284 9B68     		ldr	r3, [r3, #8]	@ float
 4209 1286 1946     		mov	r1, r3
 4210 1288 1046     		mov	r0, r2
 4211 128a FFF7FEFF 		bl	__aeabi_fmul
 4212 128e 0346     		mov	r3, r0
1415:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4213              		.loc 1 1415 0
 4214 1290 1946     		mov	r1, r3
 4215 1292 2046     		mov	r0, r4
 4216 1294 FFF7FEFF 		bl	__aeabi_fadd
 4217 1298 0346     		mov	r3, r0
 4218 129a 1C46     		mov	r4, r3
1417:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4219              		.loc 1 1417 0
 4220 129c 754B     		ldr	r3, .L203+12
 4221 129e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4222 12a0 1A46     		mov	r2, r3
 4223 12a2 7349     		ldr	r1, .L203+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 101


 4224 12a4 1346     		mov	r3, r2
 4225 12a6 5B01     		lsls	r3, r3, #5
 4226 12a8 1344     		add	r3, r3, r2
 4227 12aa 9B00     		lsls	r3, r3, #2
 4228 12ac BA6C     		ldr	r2, [r7, #72]
 4229 12ae 1344     		add	r3, r3, r2
 4230 12b0 5433     		adds	r3, r3, #84
 4231 12b2 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4232 12b6 704B     		ldr	r3, .L203+16
 4233 12b8 DB68     		ldr	r3, [r3, #12]	@ float
 4234 12ba 1946     		mov	r1, r3
 4235 12bc 1046     		mov	r0, r2
 4236 12be FFF7FEFF 		bl	__aeabi_fmul
 4237 12c2 0346     		mov	r3, r0
1416:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4238              		.loc 1 1416 0
 4239 12c4 1946     		mov	r1, r3
 4240 12c6 2046     		mov	r0, r4
 4241 12c8 FFF7FEFF 		bl	__aeabi_fadd
 4242 12cc 0346     		mov	r3, r0
 4243 12ce 1C46     		mov	r4, r3
1418:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4244              		.loc 1 1418 0
 4245 12d0 684B     		ldr	r3, .L203+12
 4246 12d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4247 12d4 1A46     		mov	r2, r3
 4248 12d6 6649     		ldr	r1, .L203+8
 4249 12d8 1346     		mov	r3, r2
 4250 12da 5B01     		lsls	r3, r3, #5
 4251 12dc 1344     		add	r3, r3, r2
 4252 12de 9B00     		lsls	r3, r3, #2
 4253 12e0 BA6C     		ldr	r2, [r7, #72]
 4254 12e2 1344     		add	r3, r3, r2
 4255 12e4 6033     		adds	r3, r3, #96
 4256 12e6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4257 12ea 634B     		ldr	r3, .L203+16
 4258 12ec 1B69     		ldr	r3, [r3, #16]	@ float
 4259 12ee 1946     		mov	r1, r3
 4260 12f0 1046     		mov	r0, r2
 4261 12f2 FFF7FEFF 		bl	__aeabi_fmul
 4262 12f6 0346     		mov	r3, r0
1417:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4263              		.loc 1 1417 0
 4264 12f8 1946     		mov	r1, r3
 4265 12fa 2046     		mov	r0, r4
 4266 12fc FFF7FEFF 		bl	__aeabi_fadd
 4267 1300 0346     		mov	r3, r0
 4268 1302 1C46     		mov	r4, r3
1419:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4269              		.loc 1 1419 0
 4270 1304 5B4B     		ldr	r3, .L203+12
 4271 1306 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4272 1308 1A46     		mov	r2, r3
 4273 130a 5949     		ldr	r1, .L203+8
 4274 130c 1346     		mov	r3, r2
 4275 130e 5B01     		lsls	r3, r3, #5
 4276 1310 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 102


 4277 1312 9B00     		lsls	r3, r3, #2
 4278 1314 BA6C     		ldr	r2, [r7, #72]
 4279 1316 1344     		add	r3, r3, r2
 4280 1318 7833     		adds	r3, r3, #120
 4281 131a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4282 131e 564B     		ldr	r3, .L203+16
 4283 1320 5B69     		ldr	r3, [r3, #20]	@ float
 4284 1322 1946     		mov	r1, r3
 4285 1324 1046     		mov	r0, r2
 4286 1326 FFF7FEFF 		bl	__aeabi_fmul
 4287 132a 0346     		mov	r3, r0
1418:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4288              		.loc 1 1418 0
 4289 132c 1946     		mov	r1, r3
 4290 132e 2046     		mov	r0, r4
 4291 1330 FFF7FEFF 		bl	__aeabi_fadd
 4292 1334 0346     		mov	r3, r0
 4293 1336 1C46     		mov	r4, r3
1420:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4294              		.loc 1 1420 0
 4295 1338 4E4B     		ldr	r3, .L203+12
 4296 133a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4297 133c 1A46     		mov	r2, r3
 4298 133e 4C49     		ldr	r1, .L203+8
 4299 1340 1346     		mov	r3, r2
 4300 1342 5B01     		lsls	r3, r3, #5
 4301 1344 1344     		add	r3, r3, r2
 4302 1346 9B00     		lsls	r3, r3, #2
 4303 1348 BA6C     		ldr	r2, [r7, #72]
 4304 134a 1344     		add	r3, r3, r2
 4305 134c 6C33     		adds	r3, r3, #108
 4306 134e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4307 1352 494B     		ldr	r3, .L203+16
 4308 1354 9B69     		ldr	r3, [r3, #24]	@ float
 4309 1356 1946     		mov	r1, r3
 4310 1358 1046     		mov	r0, r2
 4311 135a FFF7FEFF 		bl	__aeabi_fmul
 4312 135e 0346     		mov	r3, r0
1419:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4313              		.loc 1 1419 0
 4314 1360 1946     		mov	r1, r3
 4315 1362 2046     		mov	r0, r4
 4316 1364 FFF7FEFF 		bl	__aeabi_fadd
 4317 1368 0346     		mov	r3, r0
 4318 136a 1C46     		mov	r4, r3
1421:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4319              		.loc 1 1421 0
 4320 136c 414B     		ldr	r3, .L203+12
 4321 136e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4322 1370 1A46     		mov	r2, r3
 4323 1372 3F49     		ldr	r1, .L203+8
 4324 1374 1346     		mov	r3, r2
 4325 1376 5B01     		lsls	r3, r3, #5
 4326 1378 1344     		add	r3, r3, r2
 4327 137a 9B00     		lsls	r3, r3, #2
 4328 137c BA6C     		ldr	r2, [r7, #72]
 4329 137e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 103


 4330 1380 2433     		adds	r3, r3, #36
 4331 1382 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4332 1386 3C4B     		ldr	r3, .L203+16
 4333 1388 DB69     		ldr	r3, [r3, #28]	@ float
 4334 138a 1946     		mov	r1, r3
 4335 138c 1046     		mov	r0, r2
 4336 138e FFF7FEFF 		bl	__aeabi_fmul
 4337 1392 0346     		mov	r3, r0
1420:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4338              		.loc 1 1420 0
 4339 1394 1946     		mov	r1, r3
 4340 1396 2046     		mov	r0, r4
 4341 1398 FFF7FEFF 		bl	__aeabi_fadd
 4342 139c 0346     		mov	r3, r0
 4343 139e 1C46     		mov	r4, r3
1422:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4344              		.loc 1 1422 0
 4345 13a0 344B     		ldr	r3, .L203+12
 4346 13a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4347 13a4 1A46     		mov	r2, r3
 4348 13a6 3249     		ldr	r1, .L203+8
 4349 13a8 1346     		mov	r3, r2
 4350 13aa 5B01     		lsls	r3, r3, #5
 4351 13ac 1344     		add	r3, r3, r2
 4352 13ae 9B00     		lsls	r3, r3, #2
 4353 13b0 BA6C     		ldr	r2, [r7, #72]
 4354 13b2 1344     		add	r3, r3, r2
 4355 13b4 0C33     		adds	r3, r3, #12
 4356 13b6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4357 13ba 2F4B     		ldr	r3, .L203+16
 4358 13bc 1B6A     		ldr	r3, [r3, #32]	@ float
 4359 13be 1946     		mov	r1, r3
 4360 13c0 1046     		mov	r0, r2
 4361 13c2 FFF7FEFF 		bl	__aeabi_fmul
 4362 13c6 0346     		mov	r3, r0
1421:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4363              		.loc 1 1421 0
 4364 13c8 1946     		mov	r1, r3
 4365 13ca 2046     		mov	r0, r4
 4366 13cc FFF7FEFF 		bl	__aeabi_fadd
 4367 13d0 0346     		mov	r3, r0
 4368 13d2 1C46     		mov	r4, r3
1423:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9]));
 4369              		.loc 1 1423 0
 4370 13d4 274B     		ldr	r3, .L203+12
 4371 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4372 13d8 1A46     		mov	r2, r3
 4373 13da 2549     		ldr	r1, .L203+8
 4374 13dc 1346     		mov	r3, r2
 4375 13de 5B01     		lsls	r3, r3, #5
 4376 13e0 1344     		add	r3, r3, r2
 4377 13e2 9B00     		lsls	r3, r3, #2
 4378 13e4 BA6C     		ldr	r2, [r7, #72]
 4379 13e6 1344     		add	r3, r3, r2
 4380 13e8 1833     		adds	r3, r3, #24
 4381 13ea 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4382 13ee 224B     		ldr	r3, .L203+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 104


 4383 13f0 5B6A     		ldr	r3, [r3, #36]	@ float
 4384 13f2 1946     		mov	r1, r3
 4385 13f4 1046     		mov	r0, r2
 4386 13f6 FFF7FEFF 		bl	__aeabi_fmul
 4387 13fa 0346     		mov	r3, r0
1413:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4388              		.loc 1 1413 0
 4389 13fc 1946     		mov	r1, r3
 4390 13fe 2046     		mov	r0, r4
 4391 1400 FFF7FEFF 		bl	__aeabi_fadd
 4392 1404 0346     		mov	r3, r0
 4393 1406 3B61     		str	r3, [r7, #16]	@ float
1424:main.c        **** 
1425:main.c        ****             /*
1426:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
1427:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
1428:main.c        ****             
1429:main.c        ****             float barMIDI = ftom((invStringMappedPositions[0]) * mtof(tempMIDI));
1430:main.c        ****             
1431:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
1432:main.c        ****             
1433:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
1434:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
1435:main.c        ****             {
1436:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
1437:main.c        ****             }
1438:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
1439:main.c        ****             */
1440:main.c        ****             if (tempMIDI > 0.0f)
 4394              		.loc 1 1440 0
 4395 1408 4FF00001 		mov	r1, #0
 4396 140c 3869     		ldr	r0, [r7, #16]	@ float
 4397 140e FFF7FEFF 		bl	__aeabi_fcmpgt
 4398 1412 0346     		mov	r3, r0
 4399 1414 002B     		cmp	r3, #0
 4400 1416 04D0     		beq	.L152
1441:main.c        ****             {
1442:main.c        ****                 stringMIDI[i] = tempMIDI;
 4401              		.loc 1 1442 0
 4402 1418 1849     		ldr	r1, .L203+20
 4403 141a BB6C     		ldr	r3, [r7, #72]
 4404 141c 3A69     		ldr	r2, [r7, #16]	@ float
 4405 141e 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 4406              	.L152:
 4407              	.LBE27:
1396:main.c        ****     	{
 4408              		.loc 1 1396 0 discriminator 2
 4409 1422 BB6C     		ldr	r3, [r7, #72]
 4410 1424 0133     		adds	r3, r3, #1
 4411 1426 BB64     		str	r3, [r7, #72]
 4412              	.L151:
1396:main.c        ****     	{
 4413              		.loc 1 1396 0 is_stmt 0 discriminator 1
 4414 1428 154B     		ldr	r3, .L203+24
 4415 142a 1B68     		ldr	r3, [r3]
 4416 142c BA6C     		ldr	r2, [r7, #72]
 4417 142e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 105


 4418 1430 FFF6D8AE 		blt	.L154
 4419              	.LBE26:
1443:main.c        ****             }
1444:main.c        ****     	}
1445:main.c        ****         testpin4_Write(0);
 4420              		.loc 1 1445 0 is_stmt 1
 4421 1434 0020     		movs	r0, #0
 4422 1436 FFF7FEFF 		bl	testpin4_Write
1446:main.c        ****         if (encoder_button_Read())
 4423              		.loc 1 1446 0
 4424 143a FFF7FEFF 		bl	encoder_button_Read
 4425 143e 0346     		mov	r3, r0
 4426 1440 002B     		cmp	r3, #0
 4427 1442 23D0     		beq	.L155
1447:main.c        ****         {
1448:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
 4428              		.loc 1 1448 0
 4429 1444 FFF7FEFF 		bl	QuadDec_1_GetCounter
 4430 1448 0346     		mov	r3, r0
 4431 144a 9800     		lsls	r0, r3, #2
 4432 144c 0D4B     		ldr	r3, .L203+28
 4433 144e 1B68     		ldr	r3, [r3]
 4434 1450 0C4A     		ldr	r2, .L203+28
 4435 1452 1268     		ldr	r2, [r2]
 4436 1454 0C49     		ldr	r1, .L203+32
 4437 1456 8A5C     		ldrb	r2, [r1, r2]
 4438 1458 D1B2     		uxtb	r1, r2
 4439 145a C2B2     		uxtb	r2, r0
 4440 145c 0A44     		add	r2, r2, r1
 4441 145e D1B2     		uxtb	r1, r2
 4442 1460 094A     		ldr	r2, .L203+32
 4443 1462 D154     		strb	r1, [r2, r3]
 4444 1464 22E0     		b	.L156
 4445              	.L204:
 4446 1466 00BF     		.align	2
 4447              	.L203:
 4448 1468 00000000 		.word	currentNeck
 4449 146c 00000000 		.word	necks
 4450 1470 00000000 		.word	copedent
 4451 1474 00000000 		.word	currentCopedent
 4452 1478 00000000 		.word	pedals_float
 4453 147c 00000000 		.word	stringMIDI
 4454 1480 00000000 		.word	numStrings
 4455 1484 00000000 		.word	encoderNum
 4456 1488 00000000 		.word	encoderVal
 4457              	.L155:
1449:main.c        ****         }
1450:main.c        ****         else
1451:main.c        ****         {
1452:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter();
 4458              		.loc 1 1452 0
 4459 148c FFF7FEFF 		bl	QuadDec_1_GetCounter
 4460 1490 0346     		mov	r3, r0
 4461 1492 1846     		mov	r0, r3
 4462 1494 8B4B     		ldr	r3, .L205
 4463 1496 1B68     		ldr	r3, [r3]
 4464 1498 8A4A     		ldr	r2, .L205
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 106


 4465 149a 1268     		ldr	r2, [r2]
 4466 149c 8A49     		ldr	r1, .L205+4
 4467 149e 8A5C     		ldrb	r2, [r1, r2]
 4468 14a0 D1B2     		uxtb	r1, r2
 4469 14a2 C2B2     		uxtb	r2, r0
 4470 14a4 0A44     		add	r2, r2, r1
 4471 14a6 D1B2     		uxtb	r1, r2
 4472 14a8 874A     		ldr	r2, .L205+4
 4473 14aa D154     		strb	r1, [r2, r3]
 4474              	.L156:
1453:main.c        ****         }
1454:main.c        ****         QuadDec_1_SetCounter(0);
 4475              		.loc 1 1454 0
 4476 14ac 0020     		movs	r0, #0
 4477 14ae FFF7FEFF 		bl	QuadDec_1_SetCounter
1455:main.c        ****         
1456:main.c        **** 
1457:main.c        ****         
1458:main.c        ****         if (USB_check_flag)
 4478              		.loc 1 1458 0
 4479 14b2 864B     		ldr	r3, .L205+8
 4480 14b4 1B78     		ldrb	r3, [r3]
 4481 14b6 DBB2     		uxtb	r3, r3
 4482 14b8 002B     		cmp	r3, #0
 4483 14ba 01D0     		beq	.L157
1459:main.c        ****         {
1460:main.c        ****             checkUSB_Vbus();
 4484              		.loc 1 1460 0
 4485 14bc FFF7FEFF 		bl	checkUSB_Vbus
 4486              	.L157:
1461:main.c        ****         }
1462:main.c        ****         //only service the USB bus if there is a computer plugged in
1463:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 4487              		.loc 1 1463 0
 4488 14c0 834B     		ldr	r3, .L205+12
 4489 14c2 1B78     		ldrb	r3, [r3]
 4490 14c4 DBB2     		uxtb	r3, r3
 4491 14c6 002B     		cmp	r3, #0
 4492 14c8 13D0     		beq	.L188
 4493              		.loc 1 1463 0 is_stmt 0 discriminator 1
 4494 14ca FFF7FEFF 		bl	USB_VBusPresent
 4495 14ce 0346     		mov	r3, r0
 4496 14d0 002B     		cmp	r3, #0
 4497 14d2 0ED0     		beq	.L188
1464:main.c        ****         {
1465:main.c        ****             if (midiSent > 64)
 4498              		.loc 1 1465 0 is_stmt 1
 4499 14d4 7F4B     		ldr	r3, .L205+16
 4500 14d6 1B88     		ldrh	r3, [r3]
 4501 14d8 402B     		cmp	r3, #64
 4502 14da 05D9     		bls	.L159
1466:main.c        ****             {
1467:main.c        ****                 midiOverflow++;
 4503              		.loc 1 1467 0
 4504 14dc 7E4B     		ldr	r3, .L205+20
 4505 14de 1B88     		ldrh	r3, [r3]
 4506 14e0 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 107


 4507 14e2 9AB2     		uxth	r2, r3
 4508 14e4 7C4B     		ldr	r3, .L205+20
 4509 14e6 1A80     		strh	r2, [r3]	@ movhi
 4510              	.L159:
1468:main.c        ****             }
1469:main.c        ****             midiSent = 0;
 4511              		.loc 1 1469 0
 4512 14e8 7A4B     		ldr	r3, .L205+16
 4513 14ea 0022     		movs	r2, #0
 4514 14ec 1A80     		strh	r2, [r3]	@ movhi
1470:main.c        ****             USB_service();
 4515              		.loc 1 1470 0
 4516 14ee FFF7FEFF 		bl	USB_service
 4517              	.L188:
1471:main.c        ****         }
1472:main.c        **** 
1473:main.c        ****         
1474:main.c        ****         /*
1475:main.c        ****         for (int i = 0; i < 10; i++)
1476:main.c        ****         {
1477:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1478:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1479:main.c        ****         }
1480:main.c        ****         
1481:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1482:main.c        ****         for (int i = 0; i < 4; i++)
1483:main.c        ****         {
1484:main.c        ****             myArray[i+21] = knobs[i];
1485:main.c        ****         }
1486:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1487:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
1488:main.c        ****         */
1489:main.c        ****                 //make sure previous SPI2 transmission has completed before transferring the remain
1490:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 4518              		.loc 1 1490 0
 4519 14f2 00BF     		nop
 4520              	.L163:
 4521              		.loc 1 1490 0 is_stmt 0 discriminator 7
 4522 14f4 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4523 14f8 0346     		mov	r3, r0
 4524 14fa 03F00103 		and	r3, r3, #1
 4525 14fe 002B     		cmp	r3, #0
 4526 1500 06D1     		bne	.L160
 4527              		.loc 1 1490 0 discriminator 2
 4528 1502 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4529 1506 0346     		mov	r3, r0
 4530 1508 03F01003 		and	r3, r3, #16
 4531 150c 002B     		cmp	r3, #0
 4532 150e 01D0     		beq	.L161
 4533              	.L160:
 4534              		.loc 1 1490 0 discriminator 3
 4535 1510 0123     		movs	r3, #1
 4536 1512 00E0     		b	.L162
 4537              	.L161:
 4538              		.loc 1 1490 0 discriminator 4
 4539 1514 0023     		movs	r3, #0
 4540              	.L162:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 108


 4541              		.loc 1 1490 0 discriminator 6
 4542 1516 002B     		cmp	r3, #0
 4543 1518 ECD0     		beq	.L163
1491:main.c        ****         {
1492:main.c        ****             ;
1493:main.c        ****         }
1494:main.c        ****         testpin6_Write(1);
 4544              		.loc 1 1494 0 is_stmt 1
 4545 151a 0120     		movs	r0, #1
 4546 151c FFF7FEFF 		bl	testpin6_Write
1495:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 4547              		.loc 1 1495 0
 4548 1520 6E4B     		ldr	r3, .L205+24
 4549 1522 1B78     		ldrb	r3, [r3]
 4550 1524 DBB2     		uxtb	r3, r3
 4551 1526 012B     		cmp	r3, #1
 4552 1528 56D1     		bne	.L164
1496:main.c        ****         {
1497:main.c        ****             if (sendMessageEnd) //send end message
 4553              		.loc 1 1497 0
 4554 152a 6D4B     		ldr	r3, .L205+28
 4555 152c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4556 152e 002B     		cmp	r3, #0
 4557 1530 1DD0     		beq	.L165
1498:main.c        ****             {
1499:main.c        ****                 myArray[0] = 253;
 4558              		.loc 1 1499 0
 4559 1532 6C4B     		ldr	r3, .L205+32
 4560 1534 FD22     		movs	r2, #253
 4561 1536 1A70     		strb	r2, [r3]
1500:main.c        ****                 myArray[1] = presetNumberToWrite;
 4562              		.loc 1 1500 0
 4563 1538 6B4B     		ldr	r3, .L205+36
 4564 153a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4565 153c 694B     		ldr	r3, .L205+32
 4566 153e 5A70     		strb	r2, [r3, #1]
1501:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 4567              		.loc 1 1501 0
 4568 1540 694B     		ldr	r3, .L205+36
 4569 1542 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4570 1544 1A46     		mov	r2, r3
 4571 1546 694B     		ldr	r3, .L205+40
 4572 1548 1A60     		str	r2, [r3]
1502:main.c        ****                 //display previous preset as loaded
1503:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4573              		.loc 1 1503 0
 4574 154a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1504:main.c        ****                 //OLED_invert(0);
1505:main.c        ****                 sendMessageEnd = 0;
 4575              		.loc 1 1505 0
 4576 154e 644B     		ldr	r3, .L205+28
 4577 1550 0022     		movs	r2, #0
 4578 1552 1A70     		strb	r2, [r3]
1506:main.c        ****                 sendingMessage = 0;
 4579              		.loc 1 1506 0
 4580 1554 614B     		ldr	r3, .L205+24
 4581 1556 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 109


 4582 1558 1A70     		strb	r2, [r3]
1507:main.c        ****                 messageArraySendCount = 0;
 4583              		.loc 1 1507 0
 4584 155a 654B     		ldr	r3, .L205+44
 4585 155c 0022     		movs	r2, #0
 4586 155e 1A80     		strh	r2, [r3]	@ movhi
1508:main.c        ****                 myArray[30] = 254;
 4587              		.loc 1 1508 0
 4588 1560 604B     		ldr	r3, .L205+32
 4589 1562 FE22     		movs	r2, #254
 4590 1564 9A77     		strb	r2, [r3, #30]
1509:main.c        ****                 myArray[31] = 253;
 4591              		.loc 1 1509 0
 4592 1566 5F4B     		ldr	r3, .L205+32
 4593 1568 FD22     		movs	r2, #253
 4594 156a DA77     		strb	r2, [r3, #31]
 4595 156c 35E1     		b	.L171
 4596              	.L165:
1510:main.c        ****                 
1511:main.c        ****             }
1512:main.c        ****             else //send chunks
1513:main.c        ****             {
1514:main.c        ****                 //send the next preset Chunkkkkk
1515:main.c        ****                 myArray[0] = 2;
 4597              		.loc 1 1515 0
 4598 156e 5D4B     		ldr	r3, .L205+32
 4599 1570 0222     		movs	r2, #2
 4600 1572 1A70     		strb	r2, [r3]
1516:main.c        ****                 myArray[1] = presetNumberToWrite;
 4601              		.loc 1 1516 0
 4602 1574 5C4B     		ldr	r3, .L205+36
 4603 1576 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4604 1578 5A4B     		ldr	r3, .L205+32
 4605 157a 5A70     		strb	r2, [r3, #1]
 4606              	.LBB28:
1517:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 4607              		.loc 1 1517 0
 4608 157c 0223     		movs	r3, #2
 4609 157e 7B64     		str	r3, [r7, #68]
 4610 1580 20E0     		b	.L167
 4611              	.L170:
1518:main.c        ****                 {
1519:main.c        ****                     if (messageArraySendCount < messageArraySize)
 4612              		.loc 1 1519 0
 4613 1582 5B4B     		ldr	r3, .L205+44
 4614 1584 1A88     		ldrh	r2, [r3]
 4615 1586 5B4B     		ldr	r3, .L205+48
 4616 1588 1B88     		ldrh	r3, [r3]
 4617 158a 9A42     		cmp	r2, r3
 4618 158c 0FD2     		bcs	.L168
1520:main.c        ****                     {
1521:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 4619              		.loc 1 1521 0
 4620 158e 584B     		ldr	r3, .L205+44
 4621 1590 1B88     		ldrh	r3, [r3]
 4622 1592 5A1C     		adds	r2, r3, #1
 4623 1594 91B2     		uxth	r1, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 110


 4624 1596 564A     		ldr	r2, .L205+44
 4625 1598 1180     		strh	r1, [r2]	@ movhi
 4626 159a 1A46     		mov	r2, r3
 4627 159c 564B     		ldr	r3, .L205+52
 4628 159e 9B5C     		ldrb	r3, [r3, r2]
 4629 15a0 D9B2     		uxtb	r1, r3
 4630 15a2 504A     		ldr	r2, .L205+32
 4631 15a4 7B6C     		ldr	r3, [r7, #68]
 4632 15a6 1344     		add	r3, r3, r2
 4633 15a8 0A46     		mov	r2, r1
 4634 15aa 1A70     		strb	r2, [r3]
 4635 15ac 07E0     		b	.L169
 4636              	.L168:
1522:main.c        ****                     }
1523:main.c        ****                     else
1524:main.c        ****                     {
1525:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 4637              		.loc 1 1525 0
 4638 15ae 4D4A     		ldr	r2, .L205+32
 4639 15b0 7B6C     		ldr	r3, [r7, #68]
 4640 15b2 1344     		add	r3, r3, r2
 4641 15b4 EE22     		movs	r2, #238
 4642 15b6 1A70     		strb	r2, [r3]
1526:main.c        ****                         sendMessageEnd = 1;
 4643              		.loc 1 1526 0
 4644 15b8 494B     		ldr	r3, .L205+28
 4645 15ba 0122     		movs	r2, #1
 4646 15bc 1A70     		strb	r2, [r3]
 4647              	.L169:
1517:main.c        ****                 {
 4648              		.loc 1 1517 0 discriminator 2
 4649 15be 7B6C     		ldr	r3, [r7, #68]
 4650 15c0 0133     		adds	r3, r3, #1
 4651 15c2 7B64     		str	r3, [r7, #68]
 4652              	.L167:
1517:main.c        ****                 {
 4653              		.loc 1 1517 0 is_stmt 0 discriminator 1
 4654 15c4 7B6C     		ldr	r3, [r7, #68]
 4655 15c6 1D2B     		cmp	r3, #29
 4656 15c8 DBD9     		bls	.L170
 4657              	.LBE28:
1527:main.c        ****                     }
1528:main.c        ****                 }
1529:main.c        ****                 myArray[30] = 254;
 4658              		.loc 1 1529 0 is_stmt 1
 4659 15ca 464B     		ldr	r3, .L205+32
 4660 15cc FE22     		movs	r2, #254
 4661 15ce 9A77     		strb	r2, [r3, #30]
1530:main.c        ****                 myArray[31] = 253;
 4662              		.loc 1 1530 0
 4663 15d0 444B     		ldr	r3, .L205+32
 4664 15d2 FD22     		movs	r2, #253
 4665 15d4 DA77     		strb	r2, [r3, #31]
 4666 15d6 00E1     		b	.L171
 4667              	.L164:
1531:main.c        ****             }    
1532:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 111


1533:main.c        ****         else if (sendKnobs)
 4668              		.loc 1 1533 0
 4669 15d8 484B     		ldr	r3, .L205+56
 4670 15da 1B78     		ldrb	r3, [r3]
 4671 15dc DBB2     		uxtb	r3, r3
 4672 15de 002B     		cmp	r3, #0
 4673 15e0 69D0     		beq	.L172
1534:main.c        ****         {
1535:main.c        ****             myArray[0] = 3; //sending knob stuff, not a preset send
 4674              		.loc 1 1535 0
 4675 15e2 404B     		ldr	r3, .L205+32
 4676 15e4 0322     		movs	r2, #3
 4677 15e6 1A70     		strb	r2, [r3]
 4678              	.LBB29:
1536:main.c        ****             for (int i = 0; i < 8; i++)
 4679              		.loc 1 1536 0
 4680 15e8 0023     		movs	r3, #0
 4681 15ea 3B64     		str	r3, [r7, #64]
 4682 15ec 0AE0     		b	.L173
 4683              	.L174:
1537:main.c        ****             {
1538:main.c        ****                 myArray[i + 1] = macroKnobValues[i];
 4684              		.loc 1 1538 0 discriminator 3
 4685 15ee 3B6C     		ldr	r3, [r7, #64]
 4686 15f0 0133     		adds	r3, r3, #1
 4687 15f2 4349     		ldr	r1, .L205+60
 4688 15f4 3A6C     		ldr	r2, [r7, #64]
 4689 15f6 0A44     		add	r2, r2, r1
 4690 15f8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4691 15fa 3A4A     		ldr	r2, .L205+32
 4692 15fc D154     		strb	r1, [r2, r3]
1536:main.c        ****             for (int i = 0; i < 8; i++)
 4693              		.loc 1 1536 0 discriminator 3
 4694 15fe 3B6C     		ldr	r3, [r7, #64]
 4695 1600 0133     		adds	r3, r3, #1
 4696 1602 3B64     		str	r3, [r7, #64]
 4697              	.L173:
1536:main.c        ****             for (int i = 0; i < 8; i++)
 4698              		.loc 1 1536 0 is_stmt 0 discriminator 1
 4699 1604 3B6C     		ldr	r3, [r7, #64]
 4700 1606 072B     		cmp	r3, #7
 4701 1608 F1DD     		ble	.L174
 4702              	.LBE29:
 4703              	.LBB30:
1539:main.c        ****             }
1540:main.c        ****             for (int i = 0; i < 4; i++)
 4704              		.loc 1 1540 0 is_stmt 1
 4705 160a 0023     		movs	r3, #0
 4706 160c FB63     		str	r3, [r7, #60]
 4707 160e 0AE0     		b	.L175
 4708              	.L176:
1541:main.c        ****             {
1542:main.c        ****                 myArray[i + 9] = knobs[i];
 4709              		.loc 1 1542 0 discriminator 3
 4710 1610 FB6B     		ldr	r3, [r7, #60]
 4711 1612 0933     		adds	r3, r3, #9
 4712 1614 3B49     		ldr	r1, .L205+64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 112


 4713 1616 FA6B     		ldr	r2, [r7, #60]
 4714 1618 0A44     		add	r2, r2, r1
 4715 161a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4716 161c 314A     		ldr	r2, .L205+32
 4717 161e D154     		strb	r1, [r2, r3]
1540:main.c        ****             {
 4718              		.loc 1 1540 0 discriminator 3
 4719 1620 FB6B     		ldr	r3, [r7, #60]
 4720 1622 0133     		adds	r3, r3, #1
 4721 1624 FB63     		str	r3, [r7, #60]
 4722              	.L175:
1540:main.c        ****             {
 4723              		.loc 1 1540 0 is_stmt 0 discriminator 1
 4724 1626 FB6B     		ldr	r3, [r7, #60]
 4725 1628 032B     		cmp	r3, #3
 4726 162a F1DD     		ble	.L176
 4727              	.LBE30:
 4728              	.LBB31:
1543:main.c        ****             }
1544:main.c        ****             for (int i = 0; i < 10; i++)
 4729              		.loc 1 1544 0 is_stmt 1
 4730 162c 0023     		movs	r3, #0
 4731 162e BB63     		str	r3, [r7, #56]
 4732 1630 0AE0     		b	.L177
 4733              	.L178:
1545:main.c        ****             {
1546:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 4734              		.loc 1 1546 0 discriminator 3
 4735 1632 BB6B     		ldr	r3, [r7, #56]
 4736 1634 0D33     		adds	r3, r3, #13
 4737 1636 3449     		ldr	r1, .L205+68
 4738 1638 BA6B     		ldr	r2, [r7, #56]
 4739 163a 0A44     		add	r2, r2, r1
 4740 163c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4741 163e 294A     		ldr	r2, .L205+32
 4742 1640 D154     		strb	r1, [r2, r3]
1544:main.c        ****             {
 4743              		.loc 1 1544 0 discriminator 3
 4744 1642 BB6B     		ldr	r3, [r7, #56]
 4745 1644 0133     		adds	r3, r3, #1
 4746 1646 BB63     		str	r3, [r7, #56]
 4747              	.L177:
1544:main.c        ****             {
 4748              		.loc 1 1544 0 is_stmt 0 discriminator 1
 4749 1648 BB6B     		ldr	r3, [r7, #56]
 4750 164a 092B     		cmp	r3, #9
 4751 164c F1DD     		ble	.L178
 4752              	.LBE31:
1547:main.c        ****             }
1548:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 4753              		.loc 1 1548 0 is_stmt 1
 4754 164e 2F4B     		ldr	r3, .L205+72
 4755 1650 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4756 1652 1B01     		lsls	r3, r3, #4
 4757 1654 5AB2     		sxtb	r2, r3
 4758 1656 2E4B     		ldr	r3, .L205+76
 4759 1658 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 113


 4760 165a 5BB2     		sxtb	r3, r3
 4761 165c 1343     		orrs	r3, r3, r2
 4762 165e 5AB2     		sxtb	r2, r3
 4763 1660 2C4B     		ldr	r3, .L205+80
 4764 1662 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4765 1664 5B01     		lsls	r3, r3, #5
 4766 1666 5BB2     		sxtb	r3, r3
 4767 1668 1343     		orrs	r3, r3, r2
 4768 166a 5AB2     		sxtb	r2, r3
 4769 166c 2A4B     		ldr	r3, .L205+84
 4770 166e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4771 1670 9B01     		lsls	r3, r3, #6
 4772 1672 5BB2     		sxtb	r3, r3
 4773 1674 1343     		orrs	r3, r3, r2
 4774 1676 5BB2     		sxtb	r3, r3
 4775 1678 DAB2     		uxtb	r2, r3
 4776 167a 1A4B     		ldr	r3, .L205+32
 4777 167c 1A76     		strb	r2, [r3, #24]
1549:main.c        ****             myArray[25] = patchNum;
 4778              		.loc 1 1549 0
 4779 167e 274B     		ldr	r3, .L205+88
 4780 1680 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4781 1682 184B     		ldr	r3, .L205+32
 4782 1684 5A76     		strb	r2, [r3, #25]
1550:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 4783              		.loc 1 1550 0
 4784 1686 264B     		ldr	r3, .L205+92
 4785 1688 B3F90030 		ldrsh	r3, [r3]
 4786 168c 1B12     		asrs	r3, r3, #8
 4787 168e 1BB2     		sxth	r3, r3
 4788 1690 DAB2     		uxtb	r2, r3
 4789 1692 144B     		ldr	r3, .L205+32
 4790 1694 9A76     		strb	r2, [r3, #26]
1551:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 4791              		.loc 1 1551 0
 4792 1696 224B     		ldr	r3, .L205+92
 4793 1698 B3F90030 		ldrsh	r3, [r3]
 4794 169c DAB2     		uxtb	r2, r3
 4795 169e 114B     		ldr	r3, .L205+32
 4796 16a0 DA76     		strb	r2, [r3, #27]
1552:main.c        ****             myArray[30] = 254;
 4797              		.loc 1 1552 0
 4798 16a2 104B     		ldr	r3, .L205+32
 4799 16a4 FE22     		movs	r2, #254
 4800 16a6 9A77     		strb	r2, [r3, #30]
1553:main.c        ****             myArray[31] = 253;
 4801              		.loc 1 1553 0
 4802 16a8 0E4B     		ldr	r3, .L205+32
 4803 16aa FD22     		movs	r2, #253
 4804 16ac DA77     		strb	r2, [r3, #31]
1554:main.c        ****             
1555:main.c        ****             
1556:main.c        ****             sendKnobs = 0;
 4805              		.loc 1 1556 0
 4806 16ae 134B     		ldr	r3, .L205+56
 4807 16b0 0022     		movs	r2, #0
 4808 16b2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 114


 4809 16b4 91E0     		b	.L171
 4810              	.L172:
1557:main.c        ****         }
1558:main.c        ****         else
1559:main.c        ****         {
1560:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 4811              		.loc 1 1560 0
 4812 16b6 0B4B     		ldr	r3, .L205+32
 4813 16b8 0122     		movs	r2, #1
 4814 16ba 1A70     		strb	r2, [r3]
 4815              	.LBB32:
1561:main.c        ****             for (int i = 0; i < 12; i++)
 4816              		.loc 1 1561 0
 4817 16bc 0023     		movs	r3, #0
 4818 16be 7B63     		str	r3, [r7, #52]
 4819 16c0 55E0     		b	.L179
 4820              	.L206:
 4821 16c2 00BF     		.align	2
 4822              	.L205:
 4823 16c4 00000000 		.word	encoderNum
 4824 16c8 00000000 		.word	encoderVal
 4825 16cc 00000000 		.word	USB_check_flag
 4826 16d0 00000000 		.word	USB_active
 4827 16d4 00000000 		.word	midiSent
 4828 16d8 00000000 		.word	midiOverflow
 4829 16dc 00000000 		.word	sendingMessage
 4830 16e0 00000000 		.word	sendMessageEnd
 4831 16e4 00000000 		.word	myArray
 4832 16e8 00000000 		.word	presetNumberToWrite
 4833 16ec 00000000 		.word	currentPresetSelection
 4834 16f0 00000000 		.word	messageArraySendCount
 4835 16f4 00000000 		.word	messageArraySize
 4836 16f8 00000000 		.word	presetArray
 4837 16fc 00000000 		.word	sendKnobs
 4838 1700 00000000 		.word	macroKnobValues
 4839 1704 00000000 		.word	knobs
 4840 1708 00000000 		.word	pedals8bit
 4841 170c 00000000 		.word	voice
 4842 1710 00000000 		.word	octave
 4843 1714 00000000 		.word	dualSlider
 4844 1718 00000000 		.word	neck
 4845 171c 00000000 		.word	patchNum
 4846 1720 00000000 		.word	processed_volumePedal
 4847              	.L180:
 4848              	.LBB33:
1562:main.c        ****             {
1563:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 4849              		.loc 1 1563 0 discriminator 3
 4850 1724 674A     		ldr	r2, .L207
 4851 1726 7B6B     		ldr	r3, [r7, #52]
 4852 1728 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4853 172c 4FF08841 		mov	r1, #1140850688
 4854 1730 1846     		mov	r0, r3
 4855 1732 FFF7FEFF 		bl	__aeabi_fmul
 4856 1736 0346     		mov	r3, r0
 4857 1738 1846     		mov	r0, r3
 4858 173a FFF7FEFF 		bl	roundf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 115


 4859 173e 0346     		mov	r3, r0
 4860 1740 1846     		mov	r0, r3
 4861 1742 FFF7FEFF 		bl	__aeabi_f2iz
 4862 1746 0346     		mov	r3, r0
 4863 1748 FB60     		str	r3, [r7, #12]
1564:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 4864              		.loc 1 1564 0 discriminator 3
 4865 174a 7B6B     		ldr	r3, [r7, #52]
 4866 174c 5B00     		lsls	r3, r3, #1
 4867 174e 0133     		adds	r3, r3, #1
 4868 1750 FA68     		ldr	r2, [r7, #12]
 4869 1752 1212     		asrs	r2, r2, #8
 4870 1754 D1B2     		uxtb	r1, r2
 4871 1756 5C4A     		ldr	r2, .L207+4
 4872 1758 D154     		strb	r1, [r2, r3]
1565:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 4873              		.loc 1 1565 0 discriminator 3
 4874 175a 7B6B     		ldr	r3, [r7, #52]
 4875 175c 0133     		adds	r3, r3, #1
 4876 175e 5B00     		lsls	r3, r3, #1
 4877 1760 FA68     		ldr	r2, [r7, #12]
 4878 1762 D1B2     		uxtb	r1, r2
 4879 1764 584A     		ldr	r2, .L207+4
 4880 1766 D154     		strb	r1, [r2, r3]
 4881              	.LBE33:
1561:main.c        ****             {
 4882              		.loc 1 1561 0 discriminator 3
 4883 1768 7B6B     		ldr	r3, [r7, #52]
 4884 176a 0133     		adds	r3, r3, #1
 4885 176c 7B63     		str	r3, [r7, #52]
 4886              	.L179:
1561:main.c        ****             {
 4887              		.loc 1 1561 0 is_stmt 0 discriminator 1
 4888 176e 7B6B     		ldr	r3, [r7, #52]
 4889 1770 0B2B     		cmp	r3, #11
 4890 1772 D7DD     		ble	.L180
 4891              	.LBE32:
1566:main.c        ****             }
1567:main.c        ****             
1568:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 4892              		.loc 1 1568 0 is_stmt 1
 4893 1774 554B     		ldr	r3, .L207+8
 4894 1776 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4895 1778 1B01     		lsls	r3, r3, #4
 4896 177a 5AB2     		sxtb	r2, r3
 4897 177c 544B     		ldr	r3, .L207+12
 4898 177e 1B68     		ldr	r3, [r3]
 4899 1780 5BB2     		sxtb	r3, r3
 4900 1782 1343     		orrs	r3, r3, r2
 4901 1784 5AB2     		sxtb	r2, r3
 4902 1786 534B     		ldr	r3, .L207+16
 4903 1788 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4904 178a 5B01     		lsls	r3, r3, #5
 4905 178c 5BB2     		sxtb	r3, r3
 4906 178e 1343     		orrs	r3, r3, r2
 4907 1790 5AB2     		sxtb	r2, r3
 4908 1792 514B     		ldr	r3, .L207+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 116


 4909 1794 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4910 1796 9B01     		lsls	r3, r3, #6
 4911 1798 5BB2     		sxtb	r3, r3
 4912 179a 1343     		orrs	r3, r3, r2
 4913 179c 5BB2     		sxtb	r3, r3
 4914 179e DAB2     		uxtb	r2, r3
 4915 17a0 494B     		ldr	r3, .L207+4
 4916 17a2 1A76     		strb	r2, [r3, #24]
1569:main.c        ****             /*
1570:main.c        ****             for (int i = 0; i < 4; i++)
1571:main.c        ****             {
1572:main.c        ****                 myArray[i+49] = knobs[i];
1573:main.c        ****             }
1574:main.c        ****             */
1575:main.c        ****             myArray[25] = patchNum;
 4917              		.loc 1 1575 0
 4918 17a4 4D4B     		ldr	r3, .L207+24
 4919 17a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4920 17a8 474B     		ldr	r3, .L207+4
 4921 17aa 5A76     		strb	r2, [r3, #25]
1576:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 4922              		.loc 1 1576 0
 4923 17ac 4C4B     		ldr	r3, .L207+28
 4924 17ae B3F90030 		ldrsh	r3, [r3]
 4925 17b2 1B12     		asrs	r3, r3, #8
 4926 17b4 1BB2     		sxth	r3, r3
 4927 17b6 DAB2     		uxtb	r2, r3
 4928 17b8 434B     		ldr	r3, .L207+4
 4929 17ba 9A76     		strb	r2, [r3, #26]
1577:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 4930              		.loc 1 1577 0
 4931 17bc 484B     		ldr	r3, .L207+28
 4932 17be B3F90030 		ldrsh	r3, [r3]
 4933 17c2 DAB2     		uxtb	r2, r3
 4934 17c4 404B     		ldr	r3, .L207+4
 4935 17c6 DA76     		strb	r2, [r3, #27]
1578:main.c        ****             myArray[30] = 254;
 4936              		.loc 1 1578 0
 4937 17c8 3F4B     		ldr	r3, .L207+4
 4938 17ca FE22     		movs	r2, #254
 4939 17cc 9A77     		strb	r2, [r3, #30]
1579:main.c        ****             myArray[31] = 253;
 4940              		.loc 1 1579 0
 4941 17ce 3E4B     		ldr	r3, .L207+4
 4942 17d0 FD22     		movs	r2, #253
 4943 17d2 DA77     		strb	r2, [r3, #31]
1580:main.c        ****             
1581:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 4944              		.loc 1 1581 0
 4945 17d4 434B     		ldr	r3, .L207+32
 4946 17d6 0122     		movs	r2, #1
 4947 17d8 1A70     		strb	r2, [r3]
 4948              	.L171:
1582:main.c        ****             /*
1583:main.c        ****             for (int i = 0; i < 16; i++)
1584:main.c        ****             {
1585:main.c        ****                 myArray[i+56] = encoderVal[i];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 117


1586:main.c        ****             }
1587:main.c        ****             */
1588:main.c        ****         }
1589:main.c        **** 
1590:main.c        ****         
1591:main.c        **** 
1592:main.c        **** /*
1593:main.c        ****         for(int i = 0; i < myBufferSize; i++)
1594:main.c        ****         {
1595:main.c        ****             SPIM_1_WriteTxData(myArray[i]);
1596:main.c        ****         }
1597:main.c        ****     */    
1598:main.c        ****         
1599:main.c        **** 
1600:main.c        ****        
1601:main.c        ****         
1602:main.c        ****         
1603:main.c        ****         //parse input from synth board (names)
1604:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 4949              		.loc 1 1604 0
 4950 17da 434B     		ldr	r3, .L207+36
 4951 17dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4952 17de FD2B     		cmp	r3, #253
 4953 17e0 5BD1     		bne	.L181
 4954              		.loc 1 1604 0 is_stmt 0 discriminator 1
 4955 17e2 414B     		ldr	r3, .L207+36
 4956 17e4 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 4957 17e6 FE2B     		cmp	r3, #254
 4958 17e8 57D1     		bne	.L181
 4959              	.LBB34:
1605:main.c        ****         {
1606:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 4960              		.loc 1 1606 0 is_stmt 1
 4961 17ea 3F4B     		ldr	r3, .L207+36
 4962 17ec 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4963 17ee BB60     		str	r3, [r7, #8]
1607:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 4964              		.loc 1 1607 0
 4965 17f0 3D4B     		ldr	r3, .L207+36
 4966 17f2 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 4967 17f4 7B60     		str	r3, [r7, #4]
1608:main.c        ****             int bufferPointer = 2;
 4968              		.loc 1 1608 0
 4969 17f6 0223     		movs	r3, #2
 4970 17f8 3B63     		str	r3, [r7, #48]
 4971              	.LBB35:
1609:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 4972              		.loc 1 1609 0
 4973 17fa 0023     		movs	r3, #0
 4974 17fc FB62     		str	r3, [r7, #44]
 4975 17fe 14E0     		b	.L182
 4976              	.L183:
1610:main.c        ****             {
1611:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 4977              		.loc 1 1611 0 discriminator 3
 4978 1800 394A     		ldr	r2, .L207+36
 4979 1802 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 118


 4980 1804 1344     		add	r3, r3, r2
 4981 1806 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4982 1808 3849     		ldr	r1, .L207+40
 4983 180a BA68     		ldr	r2, [r7, #8]
 4984 180c 1346     		mov	r3, r2
 4985 180e DB00     		lsls	r3, r3, #3
 4986 1810 9B1A     		subs	r3, r3, r2
 4987 1812 5B00     		lsls	r3, r3, #1
 4988 1814 CA18     		adds	r2, r1, r3
 4989 1816 FB6A     		ldr	r3, [r7, #44]
 4990 1818 1344     		add	r3, r3, r2
 4991 181a 0246     		mov	r2, r0
 4992 181c 1A70     		strb	r2, [r3]
1612:main.c        ****                 bufferPointer++;
 4993              		.loc 1 1612 0 discriminator 3
 4994 181e 3B6B     		ldr	r3, [r7, #48]
 4995 1820 0133     		adds	r3, r3, #1
 4996 1822 3B63     		str	r3, [r7, #48]
1609:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 4997              		.loc 1 1609 0 discriminator 3
 4998 1824 FB6A     		ldr	r3, [r7, #44]
 4999 1826 0133     		adds	r3, r3, #1
 5000 1828 FB62     		str	r3, [r7, #44]
 5001              	.L182:
1609:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5002              		.loc 1 1609 0 is_stmt 0 discriminator 1
 5003 182a FB6A     		ldr	r3, [r7, #44]
 5004 182c 0D2B     		cmp	r3, #13
 5005 182e E7DD     		ble	.L183
 5006              	.LBE35:
1613:main.c        ****             }
1614:main.c        ****             bufferPointer = 17;
 5007              		.loc 1 1614 0 is_stmt 1
 5008 1830 1123     		movs	r3, #17
 5009 1832 3B63     		str	r3, [r7, #48]
 5010              	.LBB36:
1615:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5011              		.loc 1 1615 0
 5012 1834 0023     		movs	r3, #0
 5013 1836 BB62     		str	r3, [r7, #40]
 5014 1838 1BE0     		b	.L184
 5015              	.L185:
1616:main.c        ****             {
1617:main.c        ****                 macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[buffer
 5016              		.loc 1 1617 0 discriminator 3
 5017 183a 2B4A     		ldr	r2, .L207+36
 5018 183c 3B6B     		ldr	r3, [r7, #48]
 5019 183e 1344     		add	r3, r3, r2
 5020 1840 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5021 1842 2B48     		ldr	r0, .L207+44
 5022 1844 7B68     		ldr	r3, [r7, #4]
 5023 1846 B968     		ldr	r1, [r7, #8]
 5024 1848 1A46     		mov	r2, r3
 5025 184a D200     		lsls	r2, r2, #3
 5026 184c D21A     		subs	r2, r2, r3
 5027 184e 5300     		lsls	r3, r2, #1
 5028 1850 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 119


 5029 1852 0B46     		mov	r3, r1
 5030 1854 DB00     		lsls	r3, r3, #3
 5031 1856 5B1A     		subs	r3, r3, r1
 5032 1858 1B01     		lsls	r3, r3, #4
 5033 185a 1344     		add	r3, r3, r2
 5034 185c C218     		adds	r2, r0, r3
 5035 185e BB6A     		ldr	r3, [r7, #40]
 5036 1860 1344     		add	r3, r3, r2
 5037 1862 2246     		mov	r2, r4
 5038 1864 1A70     		strb	r2, [r3]
1618:main.c        ****                 bufferPointer++;
 5039              		.loc 1 1618 0 discriminator 3
 5040 1866 3B6B     		ldr	r3, [r7, #48]
 5041 1868 0133     		adds	r3, r3, #1
 5042 186a 3B63     		str	r3, [r7, #48]
1615:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5043              		.loc 1 1615 0 discriminator 3
 5044 186c BB6A     		ldr	r3, [r7, #40]
 5045 186e 0133     		adds	r3, r3, #1
 5046 1870 BB62     		str	r3, [r7, #40]
 5047              	.L184:
1615:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5048              		.loc 1 1615 0 is_stmt 0 discriminator 1
 5049 1872 BB6A     		ldr	r3, [r7, #40]
 5050 1874 0D2B     		cmp	r3, #13
 5051 1876 E0DD     		ble	.L185
 5052              	.LBE36:
1619:main.c        ****             }
1620:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 5053              		.loc 1 1620 0 is_stmt 1
 5054 1878 184B     		ldr	r3, .L207+24
 5055 187a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5056 187c 1A46     		mov	r2, r3
 5057 187e BB68     		ldr	r3, [r7, #8]
 5058 1880 9A42     		cmp	r2, r3
 5059 1882 0AD1     		bne	.L181
 5060              		.loc 1 1620 0 is_stmt 0 discriminator 1
 5061 1884 7B68     		ldr	r3, [r7, #4]
 5062 1886 072B     		cmp	r3, #7
 5063 1888 07D1     		bne	.L181
 5064              		.loc 1 1620 0 discriminator 2
 5065 188a 1A4A     		ldr	r2, .L207+48
 5066 188c BB68     		ldr	r3, [r7, #8]
 5067 188e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5068 1892 002B     		cmp	r3, #0
 5069 1894 01D1     		bne	.L181
1621:main.c        ****             {
1622:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5070              		.loc 1 1622 0 is_stmt 1
 5071 1896 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5072              	.L181:
 5073              	.LBE34:
1623:main.c        ****             }
1624:main.c        ****         }
1625:main.c        ****         
1626:main.c        ****         SPIM_1_ClearRxBuffer();
 5074              		.loc 1 1626 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 120


 5075 189a FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1627:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 5076              		.loc 1 1627 0
 5077 189e 164B     		ldr	r3, .L207+52
 5078 18a0 1B78     		ldrb	r3, [r3]
 5079 18a2 DBB2     		uxtb	r3, r3
 5080 18a4 0121     		movs	r1, #1
 5081 18a6 1846     		mov	r0, r3
 5082 18a8 FFF7FEFF 		bl	CyDmaChEnable
1628:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 5083              		.loc 1 1628 0
 5084 18ac 134B     		ldr	r3, .L207+56
 5085 18ae 1B78     		ldrb	r3, [r3]
 5086 18b0 DBB2     		uxtb	r3, r3
 5087 18b2 0121     		movs	r1, #1
 5088 18b4 1846     		mov	r0, r3
 5089 18b6 FFF7FEFF 		bl	CyDmaChEnable
1629:main.c        ****         
1630:main.c        ****         testpin6_Write(0);
 5090              		.loc 1 1630 0
 5091 18ba 0020     		movs	r0, #0
 5092 18bc FFF7FEFF 		bl	testpin6_Write
1631:main.c        ****        
1632:main.c        **** 
1633:main.c        ****      }
 5093              		.loc 1 1633 0
 5094 18c0 FEF7EBBD 		b	.L186
 5095              	.L208:
 5096              		.align	2
 5097              	.L207:
 5098 18c4 00000000 		.word	stringMIDI
 5099 18c8 00000000 		.word	myArray
 5100 18cc 00000000 		.word	voice
 5101 18d0 00000000 		.word	octave
 5102 18d4 00000000 		.word	dualSlider
 5103 18d8 00000000 		.word	neck
 5104 18dc 00000000 		.word	patchNum
 5105 18e0 00000000 		.word	processed_volumePedal
 5106 18e4 00000000 		.word	sendKnobs
 5107 18e8 00000000 		.word	inBuffer
 5108 18ec 00000000 		.word	presetNamesArray
 5109 18f0 00000000 		.word	macroNamesArray
 5110 18f4 00000000 		.word	presetAlreadyDisplayed
 5111 18f8 00000000 		.word	rx3Channel
 5112 18fc 00000000 		.word	txChannel
 5113              		.cfi_endproc
 5114              	.LFE76:
 5115              		.size	main, .-main
 5116              		.section	.text.DmaTxConfiguration,"ax",%progbits
 5117              		.align	2
 5118              		.global	DmaTxConfiguration
 5119              		.thumb
 5120              		.thumb_func
 5121              		.type	DmaTxConfiguration, %function
 5122              	DmaTxConfiguration:
 5123              	.LFB77:
1634:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 121


1635:main.c        **** 
1636:main.c        **** void DmaTxConfiguration()
1637:main.c        **** {
 5124              		.loc 1 1637 0
 5125              		.cfi_startproc
 5126              		@ args = 0, pretend = 0, frame = 0
 5127              		@ frame_needed = 1, uses_anonymous_args = 0
 5128 0000 80B5     		push	{r7, lr}
 5129              		.cfi_def_cfa_offset 8
 5130              		.cfi_offset 7, -8
 5131              		.cfi_offset 14, -4
 5132 0002 00AF     		add	r7, sp, #0
 5133              		.cfi_def_cfa_register 7
1638:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1639:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 5134              		.loc 1 1639 0
 5135 0004 4FF48043 		mov	r3, #16384
 5136 0008 41F6FF72 		movw	r2, #8191
 5137 000c 0121     		movs	r1, #1
 5138 000e 0120     		movs	r0, #1
 5139 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 5140 0014 0346     		mov	r3, r0
 5141 0016 1A46     		mov	r2, r3
 5142 0018 124B     		ldr	r3, .L210
 5143 001a 1A70     		strb	r2, [r3]
1640:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1641:main.c        **** 
1642:main.c        ****     txTD = CyDmaTdAllocate();
 5144              		.loc 1 1642 0
 5145 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5146 0020 0346     		mov	r3, r0
 5147 0022 1A46     		mov	r2, r3
 5148 0024 104B     		ldr	r3, .L210+4
 5149 0026 1A70     		strb	r2, [r3]
1643:main.c        **** 
1644:main.c        ****     /* Configure this Td as follows:
1645:main.c        ****     *  - Increment the source address, but not the destination address   
1646:main.c        ****     */
1647:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 5150              		.loc 1 1647 0
 5151 0028 0F4B     		ldr	r3, .L210+4
 5152 002a 1B78     		ldrb	r3, [r3]
 5153 002c D8B2     		uxtb	r0, r3
 5154 002e 0123     		movs	r3, #1
 5155 0030 FE22     		movs	r2, #254
 5156 0032 2021     		movs	r1, #32
 5157 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1648:main.c        **** 
1649:main.c        ****     /* From the memory to the SPIM */
1650:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 5158              		.loc 1 1650 0
 5159 0038 0B4B     		ldr	r3, .L210+4
 5160 003a 1B78     		ldrb	r3, [r3]
 5161 003c DBB2     		uxtb	r3, r3
 5162 003e 0B4A     		ldr	r2, .L210+8
 5163 0040 91B2     		uxth	r1, r2
 5164 0042 46F24242 		movw	r2, #25666
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 122


 5165 0046 1846     		mov	r0, r3
 5166 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1651:main.c        ****     
1652:main.c        ****     /* Associate the TD with the channel */
1653:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 5167              		.loc 1 1653 0
 5168 004c 054B     		ldr	r3, .L210
 5169 004e 1B78     		ldrb	r3, [r3]
 5170 0050 DAB2     		uxtb	r2, r3
 5171 0052 054B     		ldr	r3, .L210+4
 5172 0054 1B78     		ldrb	r3, [r3]
 5173 0056 DBB2     		uxtb	r3, r3
 5174 0058 1946     		mov	r1, r3
 5175 005a 1046     		mov	r0, r2
 5176 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1654:main.c        ****    
1655:main.c        **** } 
 5177              		.loc 1 1655 0
 5178 0060 00BF     		nop
 5179 0062 80BD     		pop	{r7, pc}
 5180              	.L211:
 5181              		.align	2
 5182              	.L210:
 5183 0064 00000000 		.word	txChannel
 5184 0068 00000000 		.word	txTD
 5185 006c 00000000 		.word	myArray
 5186              		.cfi_endproc
 5187              	.LFE77:
 5188              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 5189              		.section	.text.DmaRxConfiguration,"ax",%progbits
 5190              		.align	2
 5191              		.global	DmaRxConfiguration
 5192              		.thumb
 5193              		.thumb_func
 5194              		.type	DmaRxConfiguration, %function
 5195              	DmaRxConfiguration:
 5196              	.LFB78:
1656:main.c        **** 
1657:main.c        **** void DmaRxConfiguration()
1658:main.c        **** { 
 5197              		.loc 1 1658 0
 5198              		.cfi_startproc
 5199              		@ args = 0, pretend = 0, frame = 0
 5200              		@ frame_needed = 1, uses_anonymous_args = 0
 5201 0000 80B5     		push	{r7, lr}
 5202              		.cfi_def_cfa_offset 8
 5203              		.cfi_offset 7, -8
 5204              		.cfi_offset 14, -4
 5205 0002 00AF     		add	r7, sp, #0
 5206              		.cfi_def_cfa_register 7
1659:main.c        ****     //pluck dma
1660:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5207              		.loc 1 1660 0
 5208 0004 41F6FF73 		movw	r3, #8191
 5209 0008 4FF48042 		mov	r2, #16384
 5210 000c 0121     		movs	r1, #1
 5211 000e 0120     		movs	r0, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 123


 5212 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 5213 0014 0346     		mov	r3, r0
 5214 0016 1A46     		mov	r2, r3
 5215 0018 4A4B     		ldr	r3, .L213
 5216 001a 1A70     		strb	r2, [r3]
1661:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1662:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 5217              		.loc 1 1662 0
 5218 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5219 0020 0346     		mov	r3, r0
 5220 0022 1A46     		mov	r2, r3
 5221 0024 484B     		ldr	r3, .L213+4
 5222 0026 1A70     		strb	r2, [r3]
1663:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 5223              		.loc 1 1663 0
 5224 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 5225 002c 0346     		mov	r3, r0
 5226 002e 1A46     		mov	r2, r3
 5227 0030 454B     		ldr	r3, .L213+4
 5228 0032 5A70     		strb	r2, [r3, #1]
1664:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 5229              		.loc 1 1664 0
 5230 0034 444B     		ldr	r3, .L213+4
 5231 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5232 0038 0223     		movs	r3, #2
 5233 003a FE22     		movs	r2, #254
 5234 003c 1A21     		movs	r1, #26
 5235 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1665:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 5236              		.loc 1 1665 0
 5237 0042 414B     		ldr	r3, .L213+4
 5238 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5239 0046 0223     		movs	r3, #2
 5240 0048 FE22     		movs	r2, #254
 5241 004a 1A21     		movs	r1, #26
 5242 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1666:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 5243              		.loc 1 1666 0
 5244 0050 3D4B     		ldr	r3, .L213+4
 5245 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5246 0054 3D4A     		ldr	r2, .L213+8
 5247 0056 92B2     		uxth	r2, r2
 5248 0058 46F25451 		movw	r1, #25940
 5249 005c 1846     		mov	r0, r3
 5250 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1667:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 5251              		.loc 1 1667 0
 5252 0062 394B     		ldr	r3, .L213+4
 5253 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5254 0066 3A4A     		ldr	r2, .L213+12
 5255 0068 92B2     		uxth	r2, r2
 5256 006a 46F25451 		movw	r1, #25940
 5257 006e 1846     		mov	r0, r3
 5258 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1668:main.c        **** 
1669:main.c        ****     //bar dma
1670:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 124


 5259              		.loc 1 1670 0
 5260 0074 41F6FF73 		movw	r3, #8191
 5261 0078 4FF48042 		mov	r2, #16384
 5262 007c 0121     		movs	r1, #1
 5263 007e 0120     		movs	r0, #1
 5264 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 5265 0084 0346     		mov	r3, r0
 5266 0086 1A46     		mov	r2, r3
 5267 0088 324B     		ldr	r3, .L213+16
 5268 008a 1A70     		strb	r2, [r3]
1671:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1672:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 5269              		.loc 1 1672 0
 5270 008c FFF7FEFF 		bl	CyDmaTdAllocate
 5271 0090 0346     		mov	r3, r0
 5272 0092 1A46     		mov	r2, r3
 5273 0094 304B     		ldr	r3, .L213+20
 5274 0096 1A70     		strb	r2, [r3]
1673:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 5275              		.loc 1 1673 0
 5276 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 5277 009c 0346     		mov	r3, r0
 5278 009e 1A46     		mov	r2, r3
 5279 00a0 2D4B     		ldr	r3, .L213+20
 5280 00a2 5A70     		strb	r2, [r3, #1]
1674:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5281              		.loc 1 1674 0
 5282 00a4 2C4B     		ldr	r3, .L213+20
 5283 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5284 00a8 0623     		movs	r3, #6
 5285 00aa FE22     		movs	r2, #254
 5286 00ac 0821     		movs	r1, #8
 5287 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1675:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5288              		.loc 1 1675 0
 5289 00b2 294B     		ldr	r3, .L213+20
 5290 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5291 00b6 0623     		movs	r3, #6
 5292 00b8 FE22     		movs	r2, #254
 5293 00ba 0821     		movs	r1, #8
 5294 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1676:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 5295              		.loc 1 1676 0
 5296 00c0 254B     		ldr	r3, .L213+20
 5297 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5298 00c4 254A     		ldr	r2, .L213+24
 5299 00c6 92B2     		uxth	r2, r2
 5300 00c8 46F25751 		movw	r1, #25943
 5301 00cc 1846     		mov	r0, r3
 5302 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1677:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 5303              		.loc 1 1677 0
 5304 00d2 214B     		ldr	r3, .L213+20
 5305 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5306 00d6 224A     		ldr	r2, .L213+28
 5307 00d8 92B2     		uxth	r2, r2
 5308 00da 46F25751 		movw	r1, #25943
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 125


 5309 00de 1846     		mov	r0, r3
 5310 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1678:main.c        ****     
1679:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1680:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5311              		.loc 1 1680 0
 5312 00e4 41F6FF73 		movw	r3, #8191
 5313 00e8 4FF48042 		mov	r2, #16384
 5314 00ec 0121     		movs	r1, #1
 5315 00ee 0120     		movs	r0, #1
 5316 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 5317 00f4 0346     		mov	r3, r0
 5318 00f6 1A46     		mov	r2, r3
 5319 00f8 1A4B     		ldr	r3, .L213+32
 5320 00fa 1A70     		strb	r2, [r3]
1681:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1682:main.c        **** 
1683:main.c        ****     rx3TD = CyDmaTdAllocate();
 5321              		.loc 1 1683 0
 5322 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 5323 0100 0346     		mov	r3, r0
 5324 0102 1A46     		mov	r2, r3
 5325 0104 184B     		ldr	r3, .L213+36
 5326 0106 1A70     		strb	r2, [r3]
1684:main.c        ****     
1685:main.c        ****     /* Configure this Td as follows:
1686:main.c        ****     *  - Increment the destination address, but not the source address
1687:main.c        ****     */
1688:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 5327              		.loc 1 1688 0
 5328 0108 174B     		ldr	r3, .L213+36
 5329 010a 1B78     		ldrb	r3, [r3]
 5330 010c D8B2     		uxtb	r0, r3
 5331 010e 0223     		movs	r3, #2
 5332 0110 FE22     		movs	r2, #254
 5333 0112 2021     		movs	r1, #32
 5334 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1689:main.c        **** 
1690:main.c        ****     /* From the SPIM to the memory */
1691:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 5335              		.loc 1 1691 0
 5336 0118 134B     		ldr	r3, .L213+36
 5337 011a 1B78     		ldrb	r3, [r3]
 5338 011c DBB2     		uxtb	r3, r3
 5339 011e 134A     		ldr	r2, .L213+40
 5340 0120 92B2     		uxth	r2, r2
 5341 0122 46F25241 		movw	r1, #25682
 5342 0126 1846     		mov	r0, r3
 5343 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1692:main.c        **** 
1693:main.c        ****     /* Associate the TD with the channel */
1694:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 5344              		.loc 1 1694 0
 5345 012c 0D4B     		ldr	r3, .L213+32
 5346 012e 1B78     		ldrb	r3, [r3]
 5347 0130 DAB2     		uxtb	r2, r3
 5348 0132 0D4B     		ldr	r3, .L213+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 126


 5349 0134 1B78     		ldrb	r3, [r3]
 5350 0136 DBB2     		uxtb	r3, r3
 5351 0138 1946     		mov	r1, r3
 5352 013a 1046     		mov	r0, r2
 5353 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1695:main.c        **** }
 5354              		.loc 1 1695 0
 5355 0140 00BF     		nop
 5356 0142 80BD     		pop	{r7, pc}
 5357              	.L214:
 5358              		.align	2
 5359              	.L213:
 5360 0144 00000000 		.word	rx1Channel
 5361 0148 00000000 		.word	rx1TD
 5362 014c 00000000 		.word	rxBufferPluck
 5363 0150 1A000000 		.word	rxBufferPluck+26
 5364 0154 00000000 		.word	rx2Channel
 5365 0158 00000000 		.word	rx2TD
 5366 015c 00000000 		.word	rxBufferBar
 5367 0160 08000000 		.word	rxBufferBar+8
 5368 0164 00000000 		.word	rx3Channel
 5369 0168 00000000 		.word	rx3TD
 5370 016c 00000000 		.word	inBuffer
 5371              		.cfi_endproc
 5372              	.LFE78:
 5373              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 5374              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 5375              		.align	2
 5376              		.global	I2C_MasterWriteBlocking
 5377              		.thumb
 5378              		.thumb_func
 5379              		.type	I2C_MasterWriteBlocking, %function
 5380              	I2C_MasterWriteBlocking:
 5381              	.LFB79:
1696:main.c        **** 
1697:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1698:main.c        **** {
 5382              		.loc 1 1698 0
 5383              		.cfi_startproc
 5384              		@ args = 0, pretend = 0, frame = 16
 5385              		@ frame_needed = 1, uses_anonymous_args = 0
 5386 0000 80B5     		push	{r7, lr}
 5387              		.cfi_def_cfa_offset 8
 5388              		.cfi_offset 7, -8
 5389              		.cfi_offset 14, -4
 5390 0002 84B0     		sub	sp, sp, #16
 5391              		.cfi_def_cfa_offset 24
 5392 0004 00AF     		add	r7, sp, #0
 5393              		.cfi_def_cfa_register 7
 5394 0006 0346     		mov	r3, r0
 5395 0008 FB71     		strb	r3, [r7, #7]
 5396 000a 0B46     		mov	r3, r1	@ movhi
 5397 000c BB80     		strh	r3, [r7, #4]	@ movhi
 5398 000e 1346     		mov	r3, r2
 5399 0010 BB71     		strb	r3, [r7, #6]
1699:main.c        ****     uint8 volatile status;
1700:main.c        ****     uint32_t timeout = 50000;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 127


 5400              		.loc 1 1700 0
 5401 0012 4CF25033 		movw	r3, #50000
 5402 0016 FB60     		str	r3, [r7, #12]
1701:main.c        ****     status = I2C_1_MasterClearStatus();
 5403              		.loc 1 1701 0
 5404 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 5405 001c 0346     		mov	r3, r0
 5406 001e FB72     		strb	r3, [r7, #11]
1702:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 5407              		.loc 1 1702 0
 5408 0020 FB7A     		ldrb	r3, [r7, #11]
 5409 0022 DBB2     		uxtb	r3, r3
 5410 0024 5BB2     		sxtb	r3, r3
 5411 0026 002B     		cmp	r3, #0
 5412 0028 3ADB     		blt	.L216
1703:main.c        ****     {
1704:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 5413              		.loc 1 1704 0
 5414 002a BB88     		ldrh	r3, [r7, #4]	@ movhi
 5415 002c DAB2     		uxtb	r2, r3
 5416 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5417 0030 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5418 0032 2549     		ldr	r1, .L225
 5419 0034 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 5420 0038 0346     		mov	r3, r0
 5421 003a FB72     		strb	r3, [r7, #11]
1705:main.c        ****                                      mode);
1706:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 5422              		.loc 1 1706 0
 5423 003c FB7A     		ldrb	r3, [r7, #11]
 5424 003e DBB2     		uxtb	r3, r3
 5425 0040 002B     		cmp	r3, #0
 5426 0042 29D1     		bne	.L217
 5427              	.L221:
1707:main.c        ****         {
1708:main.c        ****             /* wait for write complete and no error */
1709:main.c        ****             do
1710:main.c        ****             {
1711:main.c        ****                 status = I2C_1_MasterStatus();
 5428              		.loc 1 1711 0
 5429 0044 FFF7FEFF 		bl	I2C_1_MasterStatus
 5430 0048 0346     		mov	r3, r0
 5431 004a FB72     		strb	r3, [r7, #11]
1712:main.c        ****                 timeout--;
 5432              		.loc 1 1712 0
 5433 004c FB68     		ldr	r3, [r7, #12]
 5434 004e 013B     		subs	r3, r3, #1
 5435 0050 FB60     		str	r3, [r7, #12]
1713:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 5436              		.loc 1 1713 0
 5437 0052 FB7A     		ldrb	r3, [r7, #11]
 5438 0054 DBB2     		uxtb	r3, r3
 5439 0056 802B     		cmp	r3, #128
 5440 0058 01D1     		bne	.L218
1714:main.c        ****                 {
1715:main.c        ****                     I2C_reset();
 5441              		.loc 1 1715 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 128


 5442 005a FFF7FEFF 		bl	I2C_reset
 5443              	.L218:
1716:main.c        ****                 }
1717:main.c        ****                 if (timeout == 0)
 5444              		.loc 1 1717 0
 5445 005e FB68     		ldr	r3, [r7, #12]
 5446 0060 002B     		cmp	r3, #0
 5447 0062 03D1     		bne	.L219
1718:main.c        ****                 {
1719:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5448              		.loc 1 1719 0
 5449 0064 8023     		movs	r3, #128
 5450 0066 FB72     		strb	r3, [r7, #11]
1720:main.c        ****                     I2C_reset();
 5451              		.loc 1 1720 0
 5452 0068 FFF7FEFF 		bl	I2C_reset
 5453              	.L219:
1721:main.c        ****                 }
1722:main.c        ****                 
1723:main.c        ****                 if (status == 0)
 5454              		.loc 1 1723 0
 5455 006c FB7A     		ldrb	r3, [r7, #11]
 5456 006e DBB2     		uxtb	r3, r3
 5457 0070 002B     		cmp	r3, #0
 5458 0072 03D1     		bne	.L220
1724:main.c        ****                 {
1725:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5459              		.loc 1 1725 0
 5460 0074 8023     		movs	r3, #128
 5461 0076 FB72     		strb	r3, [r7, #11]
1726:main.c        ****                     I2C_reset();
 5462              		.loc 1 1726 0
 5463 0078 FFF7FEFF 		bl	I2C_reset
 5464              	.L220:
1727:main.c        ****                 }
1728:main.c        ****                 
1729:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 5465              		.loc 1 1729 0
 5466 007c FB7A     		ldrb	r3, [r7, #11]
 5467 007e DBB2     		uxtb	r3, r3
 5468 0080 03F08203 		and	r3, r3, #130
 5469 0084 002B     		cmp	r3, #0
 5470 0086 0BD1     		bne	.L216
 5471              		.loc 1 1729 0 is_stmt 0 discriminator 1
 5472 0088 FB7A     		ldrb	r3, [r7, #11]
 5473 008a DBB2     		uxtb	r3, r3
 5474 008c 002B     		cmp	r3, #0
 5475 008e 07D0     		beq	.L216
 5476              		.loc 1 1729 0 discriminator 2
 5477 0090 FB68     		ldr	r3, [r7, #12]
 5478 0092 002B     		cmp	r3, #0
 5479 0094 D6D1     		bne	.L221
 5480 0096 03E0     		b	.L216
 5481              	.L217:
1730:main.c        ****         }
1731:main.c        ****         else
1732:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 129


1733:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1734:main.c        ****             *  I2CM_MasterStatus() error output */
1735:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 5482              		.loc 1 1735 0 is_stmt 1
 5483 0098 8023     		movs	r3, #128
 5484 009a FB72     		strb	r3, [r7, #11]
1736:main.c        ****             I2C_reset();
 5485              		.loc 1 1736 0
 5486 009c FFF7FEFF 		bl	I2C_reset
 5487              	.L216:
1737:main.c        ****         } 
1738:main.c        ****     }  
1739:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 5488              		.loc 1 1739 0
 5489 00a0 FB7A     		ldrb	r3, [r7, #11]
 5490 00a2 DBB2     		uxtb	r3, r3
 5491 00a4 03F02003 		and	r3, r3, #32
 5492 00a8 002B     		cmp	r3, #0
 5493 00aa 04D1     		bne	.L222
 5494              		.loc 1 1739 0 is_stmt 0 discriminator 1
 5495 00ac FB7A     		ldrb	r3, [r7, #11]
 5496 00ae DBB2     		uxtb	r3, r3
 5497 00b0 5BB2     		sxtb	r3, r3
 5498 00b2 002B     		cmp	r3, #0
 5499 00b4 01DA     		bge	.L223
 5500              	.L222:
1740:main.c        ****     {
1741:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1742:main.c        ****         //i2c_skipped[main_counter] = 1;
1743:main.c        ****         I2C_reset();
 5501              		.loc 1 1743 0 is_stmt 1
 5502 00b6 FFF7FEFF 		bl	I2C_reset
 5503              	.L223:
1744:main.c        ****     }
1745:main.c        ****     return status;
 5504              		.loc 1 1745 0
 5505 00ba FB7A     		ldrb	r3, [r7, #11]
 5506 00bc DBB2     		uxtb	r3, r3
1746:main.c        **** }
 5507              		.loc 1 1746 0
 5508 00be 1846     		mov	r0, r3
 5509 00c0 1037     		adds	r7, r7, #16
 5510              		.cfi_def_cfa_offset 8
 5511 00c2 BD46     		mov	sp, r7
 5512              		.cfi_def_cfa_register 13
 5513              		@ sp needed
 5514 00c4 80BD     		pop	{r7, pc}
 5515              	.L226:
 5516 00c6 00BF     		.align	2
 5517              	.L225:
 5518 00c8 00000000 		.word	I2Cbuff1
 5519              		.cfi_endproc
 5520              	.LFE79:
 5521              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 5522              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 5523              		.align	2
 5524              		.global	I2C_MasterReadBlocking
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 130


 5525              		.thumb
 5526              		.thumb_func
 5527              		.type	I2C_MasterReadBlocking, %function
 5528              	I2C_MasterReadBlocking:
 5529              	.LFB80:
1747:main.c        **** 
1748:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1749:main.c        **** {
 5530              		.loc 1 1749 0
 5531              		.cfi_startproc
 5532              		@ args = 0, pretend = 0, frame = 16
 5533              		@ frame_needed = 1, uses_anonymous_args = 0
 5534 0000 80B5     		push	{r7, lr}
 5535              		.cfi_def_cfa_offset 8
 5536              		.cfi_offset 7, -8
 5537              		.cfi_offset 14, -4
 5538 0002 84B0     		sub	sp, sp, #16
 5539              		.cfi_def_cfa_offset 24
 5540 0004 00AF     		add	r7, sp, #0
 5541              		.cfi_def_cfa_register 7
 5542 0006 0346     		mov	r3, r0
 5543 0008 FB71     		strb	r3, [r7, #7]
 5544 000a 0B46     		mov	r3, r1
 5545 000c BB71     		strb	r3, [r7, #6]
 5546 000e 1346     		mov	r3, r2
 5547 0010 7B71     		strb	r3, [r7, #5]
1750:main.c        ****     uint8 volatile status;
1751:main.c        ****     uint32_t timeout = 50000;
 5548              		.loc 1 1751 0
 5549 0012 4CF25033 		movw	r3, #50000
 5550 0016 FB60     		str	r3, [r7, #12]
1752:main.c        ****     status = I2C_1_MasterClearStatus();
 5551              		.loc 1 1752 0
 5552 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 5553 001c 0346     		mov	r3, r0
 5554 001e FB72     		strb	r3, [r7, #11]
1753:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 5555              		.loc 1 1753 0
 5556 0020 FB7A     		ldrb	r3, [r7, #11]
 5557 0022 DBB2     		uxtb	r3, r3
 5558 0024 5BB2     		sxtb	r3, r3
 5559 0026 002B     		cmp	r3, #0
 5560 0028 37DB     		blt	.L228
1754:main.c        ****     {
1755:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 5561              		.loc 1 1755 0
 5562 002a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5563 002c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5564 002e F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5565 0030 2349     		ldr	r1, .L236
 5566 0032 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 5567 0036 0346     		mov	r3, r0
 5568 0038 FB72     		strb	r3, [r7, #11]
1756:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1757:main.c        ****                                     nbytes, mode); 
1758:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 5569              		.loc 1 1758 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 131


 5570 003a FB7A     		ldrb	r3, [r7, #11]
 5571 003c DBB2     		uxtb	r3, r3
 5572 003e 002B     		cmp	r3, #0
 5573 0040 27D1     		bne	.L229
 5574              	.L232:
1759:main.c        ****         {
1760:main.c        ****             /* wait for read complete and no error */
1761:main.c        ****             do
1762:main.c        ****             {
1763:main.c        ****                 status = I2C_1_MasterStatus();
 5575              		.loc 1 1763 0
 5576 0042 FFF7FEFF 		bl	I2C_1_MasterStatus
 5577 0046 0346     		mov	r3, r0
 5578 0048 FB72     		strb	r3, [r7, #11]
1764:main.c        ****                 timeout--;
 5579              		.loc 1 1764 0
 5580 004a FB68     		ldr	r3, [r7, #12]
 5581 004c 013B     		subs	r3, r3, #1
 5582 004e FB60     		str	r3, [r7, #12]
1765:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 5583              		.loc 1 1765 0
 5584 0050 FB7A     		ldrb	r3, [r7, #11]
 5585 0052 DBB2     		uxtb	r3, r3
 5586 0054 802B     		cmp	r3, #128
 5587 0056 07D1     		bne	.L230
1766:main.c        ****                 {
1767:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 5588              		.loc 1 1767 0
 5589 0058 1A4B     		ldr	r3, .L236+4
 5590 005a 1022     		movs	r2, #16
 5591 005c 1A70     		strb	r2, [r3]
 5592 005e 1A4B     		ldr	r3, .L236+8
 5593 0060 0422     		movs	r2, #4
 5594 0062 1A70     		strb	r2, [r3]
1768:main.c        ****                     I2C_reset();
 5595              		.loc 1 1768 0
 5596 0064 FFF7FEFF 		bl	I2C_reset
 5597              	.L230:
1769:main.c        ****                 }
1770:main.c        ****                 if (timeout == 0)
 5598              		.loc 1 1770 0
 5599 0068 FB68     		ldr	r3, [r7, #12]
 5600 006a 002B     		cmp	r3, #0
 5601 006c 03D1     		bne	.L231
1771:main.c        ****                 {
1772:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5602              		.loc 1 1772 0
 5603 006e 8023     		movs	r3, #128
 5604 0070 FB72     		strb	r3, [r7, #11]
1773:main.c        ****                     I2C_reset();
 5605              		.loc 1 1773 0
 5606 0072 FFF7FEFF 		bl	I2C_reset
 5607              	.L231:
1774:main.c        ****                 }
1775:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 5608              		.loc 1 1775 0
 5609 0076 FB7A     		ldrb	r3, [r7, #11]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 132


 5610 0078 DBB2     		uxtb	r3, r3
 5611 007a 03F08103 		and	r3, r3, #129
 5612 007e 002B     		cmp	r3, #0
 5613 0080 0BD1     		bne	.L228
 5614              		.loc 1 1775 0 is_stmt 0 discriminator 1
 5615 0082 FB7A     		ldrb	r3, [r7, #11]
 5616 0084 DBB2     		uxtb	r3, r3
 5617 0086 002B     		cmp	r3, #0
 5618 0088 07D0     		beq	.L228
 5619              		.loc 1 1775 0 discriminator 2
 5620 008a FB68     		ldr	r3, [r7, #12]
 5621 008c 002B     		cmp	r3, #0
 5622 008e D8D1     		bne	.L232
 5623 0090 03E0     		b	.L228
 5624              	.L229:
1776:main.c        ****         }
1777:main.c        ****         else
1778:main.c        ****         {
1779:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1780:main.c        ****             *  I2CM_MasterStatus() error output */
1781:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 5625              		.loc 1 1781 0 is_stmt 1
 5626 0092 8023     		movs	r3, #128
 5627 0094 FB72     		strb	r3, [r7, #11]
1782:main.c        ****             I2C_reset();
 5628              		.loc 1 1782 0
 5629 0096 FFF7FEFF 		bl	I2C_reset
 5630              	.L228:
1783:main.c        ****         }
1784:main.c        ****     }
1785:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 5631              		.loc 1 1785 0
 5632 009a FB7A     		ldrb	r3, [r7, #11]
 5633 009c DBB2     		uxtb	r3, r3
 5634 009e 03F02003 		and	r3, r3, #32
 5635 00a2 002B     		cmp	r3, #0
 5636 00a4 04D1     		bne	.L233
 5637              		.loc 1 1785 0 is_stmt 0 discriminator 1
 5638 00a6 FB7A     		ldrb	r3, [r7, #11]
 5639 00a8 DBB2     		uxtb	r3, r3
 5640 00aa 5BB2     		sxtb	r3, r3
 5641 00ac 002B     		cmp	r3, #0
 5642 00ae 01DA     		bge	.L234
 5643              	.L233:
1786:main.c        ****     {
1787:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1788:main.c        ****         //i2c_skipped[main_counter] = 1;
1789:main.c        ****         I2C_reset();
 5644              		.loc 1 1789 0 is_stmt 1
 5645 00b0 FFF7FEFF 		bl	I2C_reset
 5646              	.L234:
1790:main.c        ****     }
1791:main.c        ****     return status;
 5647              		.loc 1 1791 0
 5648 00b4 FB7A     		ldrb	r3, [r7, #11]
 5649 00b6 DBB2     		uxtb	r3, r3
1792:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 133


 5650              		.loc 1 1792 0
 5651 00b8 1846     		mov	r0, r3
 5652 00ba 1037     		adds	r7, r7, #16
 5653              		.cfi_def_cfa_offset 8
 5654 00bc BD46     		mov	sp, r7
 5655              		.cfi_def_cfa_register 13
 5656              		@ sp needed
 5657 00be 80BD     		pop	{r7, pc}
 5658              	.L237:
 5659              		.align	2
 5660              	.L236:
 5661 00c0 00000000 		.word	I2Cbuff2
 5662 00c4 D9490040 		.word	1073760729
 5663 00c8 D7490040 		.word	1073760727
 5664              		.cfi_endproc
 5665              	.LFE80:
 5666              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 5667              		.section	.text.I2C_reset,"ax",%progbits
 5668              		.align	2
 5669              		.global	I2C_reset
 5670              		.thumb
 5671              		.thumb_func
 5672              		.type	I2C_reset, %function
 5673              	I2C_reset:
 5674              	.LFB81:
1793:main.c        **** 
1794:main.c        **** void I2C_reset(void)
1795:main.c        **** {
 5675              		.loc 1 1795 0
 5676              		.cfi_startproc
 5677              		@ args = 0, pretend = 0, frame = 0
 5678              		@ frame_needed = 1, uses_anonymous_args = 0
 5679 0000 80B5     		push	{r7, lr}
 5680              		.cfi_def_cfa_offset 8
 5681              		.cfi_offset 7, -8
 5682              		.cfi_offset 14, -4
 5683 0002 00AF     		add	r7, sp, #0
 5684              		.cfi_def_cfa_register 7
1796:main.c        ****   I2C_1_Stop();
 5685              		.loc 1 1796 0
 5686 0004 FFF7FEFF 		bl	I2C_1_Stop
1797:main.c        **** 
1798:main.c        ****   /* Disable/clear everything, then reinitialize. */
1799:main.c        **** 
1800:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 5687              		.loc 1 1800 0
 5688 0008 064B     		ldr	r3, .L239
 5689 000a 0022     		movs	r2, #0
 5690 000c 1A70     		strb	r2, [r3]
1801:main.c        **** 
1802:main.c        ****   I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
 5691              		.loc 1 1802 0
 5692 000e 064B     		ldr	r3, .L239+4
 5693 0010 0022     		movs	r2, #0
 5694 0012 1A70     		strb	r2, [r3]
1803:main.c        **** 
1804:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 134


 5695              		.loc 1 1804 0
 5696 0014 054B     		ldr	r3, .L239+8
 5697 0016 0022     		movs	r2, #0
 5698 0018 1A70     		strb	r2, [r3]
1805:main.c        **** 
1806:main.c        ****   I2C_1_Start();
 5699              		.loc 1 1806 0
 5700 001a FFF7FEFF 		bl	I2C_1_Start
1807:main.c        **** }
 5701              		.loc 1 1807 0
 5702 001e 00BF     		nop
 5703 0020 80BD     		pop	{r7, pc}
 5704              	.L240:
 5705 0022 00BF     		.align	2
 5706              	.L239:
 5707 0024 D6490040 		.word	1073760726
 5708 0028 C8490040 		.word	1073760712
 5709 002c 00000000 		.word	I2C_1_initVar
 5710              		.cfi_endproc
 5711              	.LFE81:
 5712              		.size	I2C_reset, .-I2C_reset
 5713              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 5714              		.align	2
 5715              		.global	displayCurrentPresetNameAndCopedent
 5716              		.thumb
 5717              		.thumb_func
 5718              		.type	displayCurrentPresetNameAndCopedent, %function
 5719              	displayCurrentPresetNameAndCopedent:
 5720              	.LFB82:
1808:main.c        **** 
1809:main.c        **** void displayCurrentPresetNameAndCopedent()
1810:main.c        **** {
 5721              		.loc 1 1810 0
 5722              		.cfi_startproc
 5723              		@ args = 0, pretend = 0, frame = 0
 5724              		@ frame_needed = 1, uses_anonymous_args = 0
 5725 0000 98B5     		push	{r3, r4, r7, lr}
 5726              		.cfi_def_cfa_offset 16
 5727              		.cfi_offset 3, -16
 5728              		.cfi_offset 4, -12
 5729              		.cfi_offset 7, -8
 5730              		.cfi_offset 14, -4
 5731 0002 00AF     		add	r7, sp, #0
 5732              		.cfi_def_cfa_register 7
1811:main.c        ****     if (macroNamesArray[patchNum][7][0] != 255) //don't display if the name data still hasn't been 
 5733              		.loc 1 1811 0
 5734 0004 2E4B     		ldr	r3, .L244
 5735 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5736 0008 1946     		mov	r1, r3
 5737 000a 2E4A     		ldr	r2, .L244+4
 5738 000c 0B46     		mov	r3, r1
 5739 000e DB00     		lsls	r3, r3, #3
 5740 0010 5B1A     		subs	r3, r3, r1
 5741 0012 1B01     		lsls	r3, r3, #4
 5742 0014 1344     		add	r3, r3, r2
 5743 0016 6233     		adds	r3, r3, #98
 5744 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 135


 5745 001a FF2B     		cmp	r3, #255
 5746 001c 4DD0     		beq	.L243
1812:main.c        ****     {
1813:main.c        ****         OLEDclear(128, 64);
 5747              		.loc 1 1813 0
 5748 001e 4021     		movs	r1, #64
 5749 0020 8020     		movs	r0, #128
 5750 0022 FFF7FEFF 		bl	OLEDclear
1814:main.c        ****         
1815:main.c        ****         myGFX_setFont(0);
 5751              		.loc 1 1815 0
 5752 0026 0020     		movs	r0, #0
 5753 0028 FFF7FEFF 		bl	myGFX_setFont
1816:main.c        ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 5754              		.loc 1 1816 0
 5755 002c 244B     		ldr	r3, .L244
 5756 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5757 0030 1846     		mov	r0, r3
 5758 0032 0023     		movs	r3, #0
 5759 0034 0022     		movs	r2, #0
 5760 0036 0221     		movs	r1, #2
 5761 0038 FFF7FEFF 		bl	OLEDwriteInt
1817:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1818:main.c        ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], NAME_CLIPPED_LENGTH, 0, SecondLine)
 5762              		.loc 1 1818 0
 5763 003c 204B     		ldr	r3, .L244
 5764 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5765 0040 1A46     		mov	r2, r3
 5766 0042 1346     		mov	r3, r2
 5767 0044 DB00     		lsls	r3, r3, #3
 5768 0046 9B1A     		subs	r3, r3, r2
 5769 0048 5B00     		lsls	r3, r3, #1
 5770 004a 1F4A     		ldr	r2, .L244+8
 5771 004c 9818     		adds	r0, r3, r2
 5772 004e 0123     		movs	r3, #1
 5773 0050 0022     		movs	r2, #0
 5774 0052 0B21     		movs	r1, #11
 5775 0054 FFF7FEFF 		bl	OLEDwriteString
1819:main.c        ****         OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 5776              		.loc 1 1819 0
 5777 0058 1C4B     		ldr	r3, .L244+12
 5778 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5779 005c 1846     		mov	r0, r3
 5780 005e 0323     		movs	r3, #3
 5781 0060 0022     		movs	r2, #0
 5782 0062 0221     		movs	r1, #2
 5783 0064 FFF7FEFF 		bl	OLEDwriteInt
1820:main.c        ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 5784              		.loc 1 1820 0
 5785 0068 FFF7FEFF 		bl	OLEDgetCursor
 5786 006c 0246     		mov	r2, r0
 5787 006e 0323     		movs	r3, #3
 5788 0070 0121     		movs	r1, #1
 5789 0072 1748     		ldr	r0, .L244+16
 5790 0074 FFF7FEFF 		bl	OLEDwriteString
1821:main.c        ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 5791              		.loc 1 1821 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 136


 5792 0078 144B     		ldr	r3, .L244+12
 5793 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5794 007c 1A46     		mov	r2, r3
 5795 007e 1346     		mov	r3, r2
 5796 0080 DB00     		lsls	r3, r3, #3
 5797 0082 9B1A     		subs	r3, r3, r2
 5798 0084 5B00     		lsls	r3, r3, #1
 5799 0086 134A     		ldr	r2, .L244+20
 5800 0088 9C18     		adds	r4, r3, r2
 5801 008a FFF7FEFF 		bl	OLEDgetCursor
 5802 008e 0246     		mov	r2, r0
 5803 0090 0323     		movs	r3, #3
 5804 0092 0821     		movs	r1, #8
 5805 0094 2046     		mov	r0, r4
 5806 0096 FFF7FEFF 		bl	OLEDwriteString
1822:main.c        ****         mainOLEDWaitingToSend = 1;
 5807              		.loc 1 1822 0
 5808 009a 0F4B     		ldr	r3, .L244+24
 5809 009c 0122     		movs	r2, #1
 5810 009e 1A60     		str	r2, [r3]
1823:main.c        ****         presetAlreadyDisplayed[patchNum] = 1;
 5811              		.loc 1 1823 0
 5812 00a0 074B     		ldr	r3, .L244
 5813 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5814 00a4 1946     		mov	r1, r3
 5815 00a6 0D4B     		ldr	r3, .L244+28
 5816 00a8 0122     		movs	r2, #1
 5817 00aa 43F82120 		str	r2, [r3, r1, lsl #2]
1824:main.c        ****         //and update the macro OLED screens
1825:main.c        ****         whichMacro = 0;
 5818              		.loc 1 1825 0
 5819 00ae 0C4B     		ldr	r3, .L244+32
 5820 00b0 0022     		movs	r2, #0
 5821 00b2 1A70     		strb	r2, [r3]
1826:main.c        ****         macroOLEDWaitingToSend = 1;
 5822              		.loc 1 1826 0
 5823 00b4 0B4B     		ldr	r3, .L244+36
 5824 00b6 0122     		movs	r2, #1
 5825 00b8 1A60     		str	r2, [r3]
 5826              	.L243:
1827:main.c        ****     }
1828:main.c        **** }
 5827              		.loc 1 1828 0
 5828 00ba 00BF     		nop
 5829 00bc 98BD     		pop	{r3, r4, r7, pc}
 5830              	.L245:
 5831 00be 00BF     		.align	2
 5832              	.L244:
 5833 00c0 00000000 		.word	patchNum
 5834 00c4 00000000 		.word	macroNamesArray
 5835 00c8 00000000 		.word	presetNamesArray
 5836 00cc 00000000 		.word	currentCopedent
 5837 00d0 00040000 		.word	.LC0
 5838 00d4 00000000 		.word	copedentNamesArray
 5839 00d8 00000000 		.word	mainOLEDWaitingToSend
 5840 00dc 00000000 		.word	presetAlreadyDisplayed
 5841 00e0 00000000 		.word	whichMacro
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 137


 5842 00e4 00000000 		.word	macroOLEDWaitingToSend
 5843              		.cfi_endproc
 5844              	.LFE82:
 5845              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 5846              		.section	.text.checkUSB_Vbus,"ax",%progbits
 5847              		.align	2
 5848              		.global	checkUSB_Vbus
 5849              		.thumb
 5850              		.thumb_func
 5851              		.type	checkUSB_Vbus, %function
 5852              	checkUSB_Vbus:
 5853              	.LFB83:
1829:main.c        ****     
1830:main.c        **** void checkUSB_Vbus(void)
1831:main.c        **** {
 5854              		.loc 1 1831 0
 5855              		.cfi_startproc
 5856              		@ args = 0, pretend = 0, frame = 0
 5857              		@ frame_needed = 1, uses_anonymous_args = 0
 5858 0000 80B5     		push	{r7, lr}
 5859              		.cfi_def_cfa_offset 8
 5860              		.cfi_offset 7, -8
 5861              		.cfi_offset 14, -4
 5862 0002 00AF     		add	r7, sp, #0
 5863              		.cfi_def_cfa_register 7
1832:main.c        ****    if (USB_VBusPresent() == 0)
 5864              		.loc 1 1832 0
 5865 0004 FFF7FEFF 		bl	USB_VBusPresent
 5866 0008 0346     		mov	r3, r0
 5867 000a 002B     		cmp	r3, #0
 5868 000c 05D1     		bne	.L247
1833:main.c        ****    {
1834:main.c        ****        USB_Stop();
 5869              		.loc 1 1834 0
 5870 000e FFF7FEFF 		bl	USB_Stop
1835:main.c        ****        USB_active = 0; 
 5871              		.loc 1 1835 0
 5872 0012 0E4B     		ldr	r3, .L250
 5873 0014 0022     		movs	r2, #0
 5874 0016 1A70     		strb	r2, [r3]
 5875 0018 13E0     		b	.L248
 5876              	.L247:
1836:main.c        ****    }
1837:main.c        ****    else if (USB_active == 0 )
 5877              		.loc 1 1837 0
 5878 001a 0C4B     		ldr	r3, .L250
 5879 001c 1B78     		ldrb	r3, [r3]
 5880 001e DBB2     		uxtb	r3, r3
 5881 0020 002B     		cmp	r3, #0
 5882 0022 0ED1     		bne	.L248
1838:main.c        ****    {
1839:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 5883              		.loc 1 1839 0
 5884 0024 0021     		movs	r1, #0
 5885 0026 0020     		movs	r0, #0
 5886 0028 FFF7FEFF 		bl	USB_Start
1840:main.c        ****         while (0u == USB_GetConfiguration());
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 138


 5887              		.loc 1 1840 0
 5888 002c 00BF     		nop
 5889              	.L249:
 5890              		.loc 1 1840 0 is_stmt 0 discriminator 1
 5891 002e FFF7FEFF 		bl	USB_GetConfiguration
 5892 0032 0346     		mov	r3, r0
 5893 0034 002B     		cmp	r3, #0
 5894 0036 FAD0     		beq	.L249
1841:main.c        ****         USB_MIDI_EP_Init();
 5895              		.loc 1 1841 0 is_stmt 1
 5896 0038 FFF7FEFF 		bl	USB_MIDI_Init
1842:main.c        ****        USB_active = 1;
 5897              		.loc 1 1842 0
 5898 003c 034B     		ldr	r3, .L250
 5899 003e 0122     		movs	r2, #1
 5900 0040 1A70     		strb	r2, [r3]
 5901              	.L248:
1843:main.c        ****    }
1844:main.c        ****    USB_check_flag = 0;
 5902              		.loc 1 1844 0
 5903 0042 034B     		ldr	r3, .L250+4
 5904 0044 0022     		movs	r2, #0
 5905 0046 1A70     		strb	r2, [r3]
1845:main.c        **** }
 5906              		.loc 1 1845 0
 5907 0048 00BF     		nop
 5908 004a 80BD     		pop	{r7, pc}
 5909              	.L251:
 5910              		.align	2
 5911              	.L250:
 5912 004c 00000000 		.word	USB_active
 5913 0050 00000000 		.word	USB_check_flag
 5914              		.cfi_endproc
 5915              	.LFE83:
 5916              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 5917              		.section	.text.USB_service,"ax",%progbits
 5918              		.align	2
 5919              		.global	USB_service
 5920              		.thumb
 5921              		.thumb_func
 5922              		.type	USB_service, %function
 5923              	USB_service:
 5924              	.LFB84:
1846:main.c        **** 
1847:main.c        **** 
1848:main.c        **** 
1849:main.c        **** void USB_service(void)
1850:main.c        **** {
 5925              		.loc 1 1850 0
 5926              		.cfi_startproc
 5927              		@ args = 0, pretend = 0, frame = 0
 5928              		@ frame_needed = 1, uses_anonymous_args = 0
 5929 0000 80B5     		push	{r7, lr}
 5930              		.cfi_def_cfa_offset 8
 5931              		.cfi_offset 7, -8
 5932              		.cfi_offset 14, -4
 5933 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 139


 5934              		.cfi_def_cfa_register 7
1851:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 5935              		.loc 1 1851 0
 5936 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 5937 0008 0346     		mov	r3, r0
 5938 000a 002B     		cmp	r3, #0
 5939 000c 10D0     		beq	.L253
1852:main.c        ****     {
1853:main.c        ****         if(USB_GetConfiguration() != 0u)   
 5940              		.loc 1 1853 0
 5941 000e FFF7FEFF 		bl	USB_GetConfiguration
 5942 0012 0346     		mov	r3, r0
 5943 0014 002B     		cmp	r3, #0
 5944 0016 0BD0     		beq	.L253
1854:main.c        ****         {
1855:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1856:main.c        ****             
1857:main.c        ****             //SleepTimer_Start();
1858:main.c        ****         	
1859:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 5945              		.loc 1 1859 0
 5946 0018 244B     		ldr	r3, .L259
 5947 001a 1B78     		ldrb	r3, [r3]
 5948 001c DBB2     		uxtb	r3, r3
 5949 001e 002B     		cmp	r3, #0
 5950 0020 06D0     		beq	.L253
 5951              		.loc 1 1859 0 is_stmt 0 discriminator 1
 5952 0022 FFF7FEFF 		bl	USB_VBusPresent
 5953 0026 0346     		mov	r3, r0
 5954 0028 002B     		cmp	r3, #0
 5955 002a 01D0     		beq	.L253
1860:main.c        ****             {
1861:main.c        ****                 USB_MIDI_EP_Init();
 5956              		.loc 1 1861 0 is_stmt 1
 5957 002c FFF7FEFF 		bl	USB_MIDI_Init
 5958              	.L253:
1862:main.c        ****             }
1863:main.c        ****         }
1864:main.c        ****         else
1865:main.c        ****         {
1866:main.c        ****             //SleepTimer_Stop();
1867:main.c        ****         }    
1868:main.c        ****     }        
1869:main.c        ****     
1870:main.c        ****     if(USB_GetConfiguration() != 0u)    
 5959              		.loc 1 1870 0
 5960 0030 FFF7FEFF 		bl	USB_GetConfiguration
 5961 0034 0346     		mov	r3, r0
 5962 0036 002B     		cmp	r3, #0
 5963 0038 35D0     		beq	.L258
1871:main.c        ****     {
1872:main.c        **** 
1873:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1874:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 5964              		.loc 1 1874 0
 5965 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 5966 003e 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 140


 5967 0040 002B     		cmp	r3, #0
 5968 0042 18D0     		beq	.L256
1875:main.c        ****         {
1876:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 5969              		.loc 1 1876 0
 5970 0044 1A4B     		ldr	r3, .L259+4
 5971 0046 1B78     		ldrb	r3, [r3]
 5972 0048 D8B2     		uxtb	r0, r3
 5973 004a 1A4B     		ldr	r3, .L259+8
 5974 004c 1B78     		ldrb	r3, [r3]
 5975 004e DBB2     		uxtb	r3, r3
 5976 0050 9BB2     		uxth	r3, r3
 5977 0052 1A46     		mov	r2, r3
 5978 0054 1849     		ldr	r1, .L259+12
 5979 0056 FFF7FEFF 		bl	USB_LoadInEP
1877:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1878:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 5980              		.loc 1 1878 0
 5981 005a 184B     		ldr	r3, .L259+16
 5982 005c 1B78     		ldrb	r3, [r3]
 5983 005e DBB2     		uxtb	r3, r3
 5984 0060 4022     		movs	r2, #64
 5985 0062 1749     		ldr	r1, .L259+20
 5986 0064 1846     		mov	r0, r3
 5987 0066 FFF7FEFF 		bl	USB_ReadOutEP
1879:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1880:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1881:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 5988              		.loc 1 1881 0
 5989 006a 144B     		ldr	r3, .L259+16
 5990 006c 1B78     		ldrb	r3, [r3]
 5991 006e DBB2     		uxtb	r3, r3
 5992 0070 1846     		mov	r0, r3
 5993 0072 FFF7FEFF 		bl	USB_EnableOutEP
 5994              	.L256:
1882:main.c        ****         }
1883:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 5995              		.loc 1 1883 0
 5996 0076 0D4B     		ldr	r3, .L259
 5997 0078 1B78     		ldrb	r3, [r3]
 5998 007a DBB2     		uxtb	r3, r3
 5999 007c 002B     		cmp	r3, #0
 6000 007e 06D0     		beq	.L257
 6001              		.loc 1 1883 0 is_stmt 0 discriminator 1
 6002 0080 FFF7FEFF 		bl	USB_VBusPresent
 6003 0084 0346     		mov	r3, r0
 6004 0086 002B     		cmp	r3, #0
 6005 0088 01D0     		beq	.L257
1884:main.c        ****         {
1885:main.c        ****             USB_MIDI_IN_Service();
 6006              		.loc 1 1885 0 is_stmt 1
 6007 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 6008              	.L257:
1886:main.c        ****         }
1887:main.c        **** 
1888:main.c        **** 
1889:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 141


1890:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6009              		.loc 1 1890 0
 6010 008e 074B     		ldr	r3, .L259
 6011 0090 1B78     		ldrb	r3, [r3]
 6012 0092 DBB2     		uxtb	r3, r3
 6013 0094 002B     		cmp	r3, #0
 6014 0096 06D0     		beq	.L258
 6015              		.loc 1 1890 0 is_stmt 0 discriminator 1
 6016 0098 FFF7FEFF 		bl	USB_VBusPresent
 6017 009c 0346     		mov	r3, r0
 6018 009e 002B     		cmp	r3, #0
 6019 00a0 01D0     		beq	.L258
1891:main.c        ****         {
1892:main.c        ****             USB_MIDI_OUT_Service();
 6020              		.loc 1 1892 0 is_stmt 1
 6021 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 6022              	.L258:
1893:main.c        ****         }
1894:main.c        ****     }
1895:main.c        ****         
1896:main.c        **** }
 6023              		.loc 1 1896 0
 6024 00a6 00BF     		nop
 6025 00a8 80BD     		pop	{r7, pc}
 6026              	.L260:
 6027 00aa 00BF     		.align	2
 6028              	.L259:
 6029 00ac 00000000 		.word	USB_active
 6030 00b0 00000000 		.word	USB_midi_in_ep
 6031 00b4 00000000 		.word	USB_midiInPointer
 6032 00b8 00000000 		.word	USB_midiInBuffer
 6033 00bc 00000000 		.word	USB_midi_out_ep
 6034 00c0 00000000 		.word	USB_midiOutBuffer
 6035              		.cfi_endproc
 6036              	.LFE84:
 6037              		.size	USB_service, .-USB_service
 6038              		.section	.text.log2f_approx,"ax",%progbits
 6039              		.align	2
 6040              		.global	log2f_approx
 6041              		.thumb
 6042              		.thumb_func
 6043              		.type	log2f_approx, %function
 6044              	log2f_approx:
 6045              	.LFB85:
1897:main.c        **** 
1898:main.c        **** // This is a fast approximation to log2()
1899:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1900:main.c        **** float log2f_approx(float X) {
 6046              		.loc 1 1900 0
 6047              		.cfi_startproc
 6048              		@ args = 0, pretend = 0, frame = 24
 6049              		@ frame_needed = 1, uses_anonymous_args = 0
 6050 0000 80B5     		push	{r7, lr}
 6051              		.cfi_def_cfa_offset 8
 6052              		.cfi_offset 7, -8
 6053              		.cfi_offset 14, -4
 6054 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 142


 6055              		.cfi_def_cfa_offset 32
 6056 0004 00AF     		add	r7, sp, #0
 6057              		.cfi_def_cfa_register 7
 6058 0006 7860     		str	r0, [r7, #4]	@ float
1901:main.c        ****   float Y, F;
1902:main.c        ****   int E;
1903:main.c        ****   F = frexpf(fabsf(X), &E);
 6059              		.loc 1 1903 0
 6060 0008 7B68     		ldr	r3, [r7, #4]
 6061 000a 23F00043 		bic	r3, r3, #-2147483648
 6062 000e 07F10C02 		add	r2, r7, #12
 6063 0012 1146     		mov	r1, r2
 6064 0014 1846     		mov	r0, r3
 6065 0016 FFF7FEFF 		bl	frexpf
 6066 001a 7861     		str	r0, [r7, #20]	@ float
1904:main.c        ****   Y = 1.23149591368684f;
 6067              		.loc 1 1904 0
 6068 001c 1A4B     		ldr	r3, .L263
 6069 001e 3B61     		str	r3, [r7, #16]	@ float
1905:main.c        ****   Y *= F;
 6070              		.loc 1 1905 0
 6071 0020 7969     		ldr	r1, [r7, #20]	@ float
 6072 0022 3869     		ldr	r0, [r7, #16]	@ float
 6073 0024 FFF7FEFF 		bl	__aeabi_fmul
 6074 0028 0346     		mov	r3, r0
 6075 002a 3B61     		str	r3, [r7, #16]	@ float
1906:main.c        ****   Y += -4.11852516267426f;
 6076              		.loc 1 1906 0
 6077 002c 1749     		ldr	r1, .L263+4
 6078 002e 3869     		ldr	r0, [r7, #16]	@ float
 6079 0030 FFF7FEFF 		bl	__aeabi_fsub
 6080 0034 0346     		mov	r3, r0
 6081 0036 3B61     		str	r3, [r7, #16]	@ float
1907:main.c        ****   Y *= F;
 6082              		.loc 1 1907 0
 6083 0038 7969     		ldr	r1, [r7, #20]	@ float
 6084 003a 3869     		ldr	r0, [r7, #16]	@ float
 6085 003c FFF7FEFF 		bl	__aeabi_fmul
 6086 0040 0346     		mov	r3, r0
 6087 0042 3B61     		str	r3, [r7, #16]	@ float
1908:main.c        ****   Y += 6.02197014179219f;
 6088              		.loc 1 1908 0
 6089 0044 1249     		ldr	r1, .L263+8
 6090 0046 3869     		ldr	r0, [r7, #16]	@ float
 6091 0048 FFF7FEFF 		bl	__aeabi_fadd
 6092 004c 0346     		mov	r3, r0
 6093 004e 3B61     		str	r3, [r7, #16]	@ float
1909:main.c        ****   Y *= F;
 6094              		.loc 1 1909 0
 6095 0050 7969     		ldr	r1, [r7, #20]	@ float
 6096 0052 3869     		ldr	r0, [r7, #16]	@ float
 6097 0054 FFF7FEFF 		bl	__aeabi_fmul
 6098 0058 0346     		mov	r3, r0
 6099 005a 3B61     		str	r3, [r7, #16]	@ float
1910:main.c        ****   Y += -3.13396450166353f;
 6100              		.loc 1 1910 0
 6101 005c 0D49     		ldr	r1, .L263+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 143


 6102 005e 3869     		ldr	r0, [r7, #16]	@ float
 6103 0060 FFF7FEFF 		bl	__aeabi_fsub
 6104 0064 0346     		mov	r3, r0
 6105 0066 3B61     		str	r3, [r7, #16]	@ float
1911:main.c        ****   Y += E;
 6106              		.loc 1 1911 0
 6107 0068 FB68     		ldr	r3, [r7, #12]
 6108 006a 1846     		mov	r0, r3
 6109 006c FFF7FEFF 		bl	__aeabi_i2f
 6110 0070 0346     		mov	r3, r0
 6111 0072 1946     		mov	r1, r3
 6112 0074 3869     		ldr	r0, [r7, #16]	@ float
 6113 0076 FFF7FEFF 		bl	__aeabi_fadd
 6114 007a 0346     		mov	r3, r0
 6115 007c 3B61     		str	r3, [r7, #16]	@ float
1912:main.c        ****   return(Y);
 6116              		.loc 1 1912 0
 6117 007e 3B69     		ldr	r3, [r7, #16]	@ float
1913:main.c        **** }
 6118              		.loc 1 1913 0
 6119 0080 1846     		mov	r0, r3
 6120 0082 1837     		adds	r7, r7, #24
 6121              		.cfi_def_cfa_offset 8
 6122 0084 BD46     		mov	sp, r7
 6123              		.cfi_def_cfa_register 13
 6124              		@ sp needed
 6125 0086 80BD     		pop	{r7, pc}
 6126              	.L264:
 6127              		.align	2
 6128              	.L263:
 6129 0088 A8A19D3F 		.word	1067295144
 6130 008c F5CA8340 		.word	1082378997
 6131 0090 FBB3C040 		.word	1086370811
 6132 0094 E0924840 		.word	1078498016
 6133              		.cfi_endproc
 6134              	.LFE85:
 6135              		.size	log2f_approx, .-log2f_approx
 6136              		.global	prevNotes
 6137              		.bss
 6138              		.align	2
 6139              		.type	prevNotes, %object
 6140              		.size	prevNotes, 48
 6141              	prevNotes:
 6142 00c8 00000000 		.space	48
 6142      00000000 
 6142      00000000 
 6142      00000000 
 6142      00000000 
 6143              		.section	.text.noteEvent,"ax",%progbits
 6144              		.align	2
 6145              		.global	noteEvent
 6146              		.thumb
 6147              		.thumb_func
 6148              		.type	noteEvent, %function
 6149              	noteEvent:
 6150              	.LFB86:
1914:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 144


1915:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
1916:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
1917:main.c        **** 
1918:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1919:main.c        **** 
1920:main.c        **** void noteEvent(int string)
1921:main.c        **** {
 6151              		.loc 1 1921 0
 6152              		.cfi_startproc
 6153              		@ args = 0, pretend = 0, frame = 24
 6154              		@ frame_needed = 1, uses_anonymous_args = 0
 6155 0000 80B5     		push	{r7, lr}
 6156              		.cfi_def_cfa_offset 8
 6157              		.cfi_offset 7, -8
 6158              		.cfi_offset 14, -4
 6159 0002 86B0     		sub	sp, sp, #24
 6160              		.cfi_def_cfa_offset 32
 6161 0004 00AF     		add	r7, sp, #0
 6162              		.cfi_def_cfa_register 7
 6163 0006 7860     		str	r0, [r7, #4]
1922:main.c        ****     
1923:main.c        ****     /*
1924:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1925:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1926:main.c        ****     int vInt  = (int) (v*4.0f);
1927:main.c        ****     if (vInt > 127)
1928:main.c        ****     {
1929:main.c        ****         vInt = 127;
1930:main.c        ****     }
1931:main.c        ****     */
1932:main.c        ****     uint16_t velocity = strings[string];
 6164              		.loc 1 1932 0
 6165 0008 2C4A     		ldr	r2, .L270
 6166 000a 7B68     		ldr	r3, [r7, #4]
 6167 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 6168 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1933:main.c        ****     if (velocity > 0)
 6169              		.loc 1 1933 0
 6170 0012 FB8A     		ldrh	r3, [r7, #22]
 6171 0014 002B     		cmp	r3, #0
 6172 0016 43D0     		beq	.L266
 6173              	.LBB37:
1934:main.c        ****     {
1935:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1936:main.c        ****         float tempVel = (float)velocity;
 6174              		.loc 1 1936 0
 6175 0018 FB8A     		ldrh	r3, [r7, #22]
 6176 001a 1846     		mov	r0, r3
 6177 001c FFF7FEFF 		bl	__aeabi_ui2f
 6178 0020 0346     		mov	r3, r0
 6179 0022 3B61     		str	r3, [r7, #16]	@ float
1937:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 6180              		.loc 1 1937 0
 6181 0024 4FF05E51 		mov	r1, #931135488
 6182 0028 3869     		ldr	r0, [r7, #16]	@ float
 6183 002a FFF7FEFF 		bl	__aeabi_fmul
 6184 002e 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 145


 6185 0030 3B61     		str	r3, [r7, #16]	@ float
1938:main.c        ****         tempVel = sqrtf(tempVel);
 6186              		.loc 1 1938 0
 6187 0032 3869     		ldr	r0, [r7, #16]	@ float
 6188 0034 FFF7FEFF 		bl	sqrtf
 6189 0038 3861     		str	r0, [r7, #16]	@ float
1939:main.c        ****         tempVel = tempVel - 0.0239372430f;
 6190              		.loc 1 1939 0
 6191 003a 2149     		ldr	r1, .L270+4
 6192 003c 3869     		ldr	r0, [r7, #16]	@ float
 6193 003e FFF7FEFF 		bl	__aeabi_fsub
 6194 0042 0346     		mov	r3, r0
 6195 0044 3B61     		str	r3, [r7, #16]	@ float
1940:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 6196              		.loc 1 1940 0
 6197 0046 1F49     		ldr	r1, .L270+8
 6198 0048 3869     		ldr	r0, [r7, #16]	@ float
 6199 004a FFF7FEFF 		bl	__aeabi_fmul
 6200 004e 0346     		mov	r3, r0
 6201 0050 3B61     		str	r3, [r7, #16]	@ float
1941:main.c        ****         velocity = (int)tempVel;
 6202              		.loc 1 1941 0
 6203 0052 3869     		ldr	r0, [r7, #16]	@ float
 6204 0054 FFF7FEFF 		bl	__aeabi_f2iz
 6205 0058 0346     		mov	r3, r0
 6206 005a FB82     		strh	r3, [r7, #22]	@ movhi
1942:main.c        ****         
1943:main.c        **** 
1944:main.c        ****         if (velocity > 127)
 6207              		.loc 1 1944 0
 6208 005c FB8A     		ldrh	r3, [r7, #22]
 6209 005e 7F2B     		cmp	r3, #127
 6210 0060 01D9     		bls	.L267
1945:main.c        ****         {
1946:main.c        ****             velocity = 127;
 6211              		.loc 1 1946 0
 6212 0062 7F23     		movs	r3, #127
 6213 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 6214              	.L267:
1947:main.c        ****         }
1948:main.c        ****         
1949:main.c        ****         //only update octave on note-ons
1950:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1951:main.c        ****         int noteToSend = ((octave - 4) * 12) + openStringMIDI_Int[string];
 6215              		.loc 1 1951 0
 6216 0066 184B     		ldr	r3, .L270+12
 6217 0068 1B68     		ldr	r3, [r3]
 6218 006a 1A1F     		subs	r2, r3, #4
 6219 006c 1346     		mov	r3, r2
 6220 006e 5B00     		lsls	r3, r3, #1
 6221 0070 1344     		add	r3, r3, r2
 6222 0072 9B00     		lsls	r3, r3, #2
 6223 0074 1946     		mov	r1, r3
 6224 0076 154A     		ldr	r2, .L270+16
 6225 0078 7B68     		ldr	r3, [r7, #4]
 6226 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6227 007e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 146


 6228 0080 FB60     		str	r3, [r7, #12]
1952:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 6229              		.loc 1 1952 0
 6230 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6231 0084 DBB2     		uxtb	r3, r3
 6232 0086 1946     		mov	r1, r3
 6233 0088 7B68     		ldr	r3, [r7, #4]
 6234 008a 0133     		adds	r3, r3, #1
 6235 008c 1A46     		mov	r2, r3
 6236 008e F868     		ldr	r0, [r7, #12]
 6237 0090 FFF7FEFF 		bl	sendMIDINoteOn
1953:main.c        ****         prevNotes[string] = noteToSend;
 6238              		.loc 1 1953 0
 6239 0094 0E49     		ldr	r1, .L270+20
 6240 0096 7B68     		ldr	r3, [r7, #4]
 6241 0098 FA68     		ldr	r2, [r7, #12]
 6242 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 6243              	.LBE37:
1954:main.c        ****             
1955:main.c        ****     }
1956:main.c        ****     else
1957:main.c        ****     {
1958:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1959:main.c        ****     }
1960:main.c        **** 
1961:main.c        **** }
 6244              		.loc 1 1961 0
 6245 009e 09E0     		b	.L269
 6246              	.L266:
1958:main.c        ****     }
 6247              		.loc 1 1958 0
 6248 00a0 0B4A     		ldr	r2, .L270+20
 6249 00a2 7B68     		ldr	r3, [r7, #4]
 6250 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 6251 00a8 7B68     		ldr	r3, [r7, #4]
 6252 00aa 0133     		adds	r3, r3, #1
 6253 00ac 1A46     		mov	r2, r3
 6254 00ae 0021     		movs	r1, #0
 6255 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 6256              	.L269:
 6257              		.loc 1 1961 0
 6258 00b4 00BF     		nop
 6259 00b6 1837     		adds	r7, r7, #24
 6260              		.cfi_def_cfa_offset 8
 6261 00b8 BD46     		mov	sp, r7
 6262              		.cfi_def_cfa_register 13
 6263              		@ sp needed
 6264 00ba 80BD     		pop	{r7, pc}
 6265              	.L271:
 6266              		.align	2
 6267              	.L270:
 6268 00bc 00000000 		.word	strings
 6269 00c0 0918C43C 		.word	1019484169
 6270 00c4 551D0243 		.word	1124212053
 6271 00c8 00000000 		.word	octave
 6272 00cc 00000000 		.word	openStringMIDI_Int
 6273 00d0 00000000 		.word	prevNotes
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 147


 6274              		.cfi_endproc
 6275              	.LFE86:
 6276              		.size	noteEvent, .-noteEvent
 6277              		.section	.text.CCEvent,"ax",%progbits
 6278              		.align	2
 6279              		.global	CCEvent
 6280              		.thumb
 6281              		.thumb_func
 6282              		.type	CCEvent, %function
 6283              	CCEvent:
 6284              	.LFB87:
1962:main.c        **** 
1963:main.c        **** void CCEvent(int cc, int val)
1964:main.c        **** {
 6285              		.loc 1 1964 0
 6286              		.cfi_startproc
 6287              		@ args = 0, pretend = 0, frame = 8
 6288              		@ frame_needed = 1, uses_anonymous_args = 0
 6289 0000 80B5     		push	{r7, lr}
 6290              		.cfi_def_cfa_offset 8
 6291              		.cfi_offset 7, -8
 6292              		.cfi_offset 14, -4
 6293 0002 82B0     		sub	sp, sp, #8
 6294              		.cfi_def_cfa_offset 16
 6295 0004 00AF     		add	r7, sp, #0
 6296              		.cfi_def_cfa_register 7
 6297 0006 7860     		str	r0, [r7, #4]
 6298 0008 3960     		str	r1, [r7]
1965:main.c        ****     
1966:main.c        ****     sendMIDIControlChange(cc, val, 0);
 6299              		.loc 1 1966 0
 6300 000a 0022     		movs	r2, #0
 6301 000c 3968     		ldr	r1, [r7]
 6302 000e 7868     		ldr	r0, [r7, #4]
 6303 0010 FFF7FEFF 		bl	sendMIDIControlChange
1967:main.c        **** }
 6304              		.loc 1 1967 0
 6305 0014 00BF     		nop
 6306 0016 0837     		adds	r7, r7, #8
 6307              		.cfi_def_cfa_offset 8
 6308 0018 BD46     		mov	sp, r7
 6309              		.cfi_def_cfa_register 13
 6310              		@ sp needed
 6311 001a 80BD     		pop	{r7, pc}
 6312              		.cfi_endproc
 6313              	.LFE87:
 6314              		.size	CCEvent, .-CCEvent
 6315              		.section	.text.sendMIDINoteOn,"ax",%progbits
 6316              		.align	2
 6317              		.global	sendMIDINoteOn
 6318              		.thumb
 6319              		.thumb_func
 6320              		.type	sendMIDINoteOn, %function
 6321              	sendMIDINoteOn:
 6322              	.LFB88:
1968:main.c        **** 
1969:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 148


1970:main.c        **** {  
 6323              		.loc 1 1970 0
 6324              		.cfi_startproc
 6325              		@ args = 0, pretend = 0, frame = 16
 6326              		@ frame_needed = 1, uses_anonymous_args = 0
 6327 0000 80B5     		push	{r7, lr}
 6328              		.cfi_def_cfa_offset 8
 6329              		.cfi_offset 7, -8
 6330              		.cfi_offset 14, -4
 6331 0002 84B0     		sub	sp, sp, #16
 6332              		.cfi_def_cfa_offset 24
 6333 0004 00AF     		add	r7, sp, #0
 6334              		.cfi_def_cfa_register 7
 6335 0006 F860     		str	r0, [r7, #12]
 6336 0008 B960     		str	r1, [r7, #8]
 6337 000a 7A60     		str	r2, [r7, #4]
1971:main.c        ****    
1972:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 6338              		.loc 1 1972 0
 6339 000c 7B68     		ldr	r3, [r7, #4]
 6340 000e DBB2     		uxtb	r3, r3
 6341 0010 703B     		subs	r3, r3, #112
 6342 0012 DAB2     		uxtb	r2, r3
 6343 0014 114B     		ldr	r3, .L275
 6344 0016 1A70     		strb	r2, [r3]
1973:main.c        ****     midiMsg[1] = MIDInoteNum;
 6345              		.loc 1 1973 0
 6346 0018 FB68     		ldr	r3, [r7, #12]
 6347 001a DAB2     		uxtb	r2, r3
 6348 001c 0F4B     		ldr	r3, .L275
 6349 001e 5A70     		strb	r2, [r3, #1]
1974:main.c        ****     midiMsg[2] = velocity;	
 6350              		.loc 1 1974 0
 6351 0020 BB68     		ldr	r3, [r7, #8]
 6352 0022 DAB2     		uxtb	r2, r3
 6353 0024 0D4B     		ldr	r3, .L275
 6354 0026 9A70     		strb	r2, [r3, #2]
1975:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6355              		.loc 1 1975 0
 6356 0028 0D4B     		ldr	r3, .L275+4
 6357 002a 1B78     		ldrb	r3, [r3]
 6358 002c DBB2     		uxtb	r3, r3
 6359 002e 002B     		cmp	r3, #0
 6360 0030 09D0     		beq	.L274
 6361              		.loc 1 1975 0 is_stmt 0 discriminator 1
 6362 0032 FFF7FEFF 		bl	USB_VBusPresent
 6363 0036 0346     		mov	r3, r0
 6364 0038 002B     		cmp	r3, #0
 6365 003a 04D0     		beq	.L274
1976:main.c        ****     {
1977:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6366              		.loc 1 1977 0 is_stmt 1
 6367 003c 0022     		movs	r2, #0
 6368 003e 0749     		ldr	r1, .L275
 6369 0040 0320     		movs	r0, #3
 6370 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6371              	.L274:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 149


1978:main.c        ****     } 
1979:main.c        ****     midiSent += 4;
 6372              		.loc 1 1979 0
 6373 0046 074B     		ldr	r3, .L275+8
 6374 0048 1B88     		ldrh	r3, [r3]
 6375 004a 0433     		adds	r3, r3, #4
 6376 004c 9AB2     		uxth	r2, r3
 6377 004e 054B     		ldr	r3, .L275+8
 6378 0050 1A80     		strh	r2, [r3]	@ movhi
1980:main.c        **** }
 6379              		.loc 1 1980 0
 6380 0052 00BF     		nop
 6381 0054 1037     		adds	r7, r7, #16
 6382              		.cfi_def_cfa_offset 8
 6383 0056 BD46     		mov	sp, r7
 6384              		.cfi_def_cfa_register 13
 6385              		@ sp needed
 6386 0058 80BD     		pop	{r7, pc}
 6387              	.L276:
 6388 005a 00BF     		.align	2
 6389              	.L275:
 6390 005c 00000000 		.word	midiMsg
 6391 0060 00000000 		.word	USB_active
 6392 0064 00000000 		.word	midiSent
 6393              		.cfi_endproc
 6394              	.LFE88:
 6395              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 6396              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 6397              		.align	2
 6398              		.global	sendMIDIPolyKeyPressure
 6399              		.thumb
 6400              		.thumb_func
 6401              		.type	sendMIDIPolyKeyPressure, %function
 6402              	sendMIDIPolyKeyPressure:
 6403              	.LFB89:
1981:main.c        **** 
1982:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1983:main.c        **** {
 6404              		.loc 1 1983 0
 6405              		.cfi_startproc
 6406              		@ args = 0, pretend = 0, frame = 16
 6407              		@ frame_needed = 1, uses_anonymous_args = 0
 6408 0000 80B5     		push	{r7, lr}
 6409              		.cfi_def_cfa_offset 8
 6410              		.cfi_offset 7, -8
 6411              		.cfi_offset 14, -4
 6412 0002 84B0     		sub	sp, sp, #16
 6413              		.cfi_def_cfa_offset 24
 6414 0004 00AF     		add	r7, sp, #0
 6415              		.cfi_def_cfa_register 7
 6416 0006 F860     		str	r0, [r7, #12]
 6417 0008 B960     		str	r1, [r7, #8]
 6418 000a 7A60     		str	r2, [r7, #4]
1984:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 6419              		.loc 1 1984 0
 6420 000c 7B68     		ldr	r3, [r7, #4]
 6421 000e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 150


 6422 0010 603B     		subs	r3, r3, #96
 6423 0012 DAB2     		uxtb	r2, r3
 6424 0014 114B     		ldr	r3, .L279
 6425 0016 1A70     		strb	r2, [r3]
1985:main.c        ****     midiMsg[1] = MIDInoteNum;
 6426              		.loc 1 1985 0
 6427 0018 FB68     		ldr	r3, [r7, #12]
 6428 001a DAB2     		uxtb	r2, r3
 6429 001c 0F4B     		ldr	r3, .L279
 6430 001e 5A70     		strb	r2, [r3, #1]
1986:main.c        ****     midiMsg[2] = pressure;		
 6431              		.loc 1 1986 0
 6432 0020 BB68     		ldr	r3, [r7, #8]
 6433 0022 DAB2     		uxtb	r2, r3
 6434 0024 0D4B     		ldr	r3, .L279
 6435 0026 9A70     		strb	r2, [r3, #2]
1987:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6436              		.loc 1 1987 0
 6437 0028 0D4B     		ldr	r3, .L279+4
 6438 002a 1B78     		ldrb	r3, [r3]
 6439 002c DBB2     		uxtb	r3, r3
 6440 002e 002B     		cmp	r3, #0
 6441 0030 09D0     		beq	.L278
 6442              		.loc 1 1987 0 is_stmt 0 discriminator 1
 6443 0032 FFF7FEFF 		bl	USB_VBusPresent
 6444 0036 0346     		mov	r3, r0
 6445 0038 002B     		cmp	r3, #0
 6446 003a 04D0     		beq	.L278
1988:main.c        ****     {
1989:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6447              		.loc 1 1989 0 is_stmt 1
 6448 003c 0022     		movs	r2, #0
 6449 003e 0749     		ldr	r1, .L279
 6450 0040 0320     		movs	r0, #3
 6451 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6452              	.L278:
1990:main.c        ****     } 
1991:main.c        ****     midiSent += 4;
 6453              		.loc 1 1991 0
 6454 0046 074B     		ldr	r3, .L279+8
 6455 0048 1B88     		ldrh	r3, [r3]
 6456 004a 0433     		adds	r3, r3, #4
 6457 004c 9AB2     		uxth	r2, r3
 6458 004e 054B     		ldr	r3, .L279+8
 6459 0050 1A80     		strh	r2, [r3]	@ movhi
1992:main.c        **** }
 6460              		.loc 1 1992 0
 6461 0052 00BF     		nop
 6462 0054 1037     		adds	r7, r7, #16
 6463              		.cfi_def_cfa_offset 8
 6464 0056 BD46     		mov	sp, r7
 6465              		.cfi_def_cfa_register 13
 6466              		@ sp needed
 6467 0058 80BD     		pop	{r7, pc}
 6468              	.L280:
 6469 005a 00BF     		.align	2
 6470              	.L279:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 151


 6471 005c 00000000 		.word	midiMsg
 6472 0060 00000000 		.word	USB_active
 6473 0064 00000000 		.word	midiSent
 6474              		.cfi_endproc
 6475              	.LFE89:
 6476              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 6477              		.section	.text.sendMIDIControlChange,"ax",%progbits
 6478              		.align	2
 6479              		.global	sendMIDIControlChange
 6480              		.thumb
 6481              		.thumb_func
 6482              		.type	sendMIDIControlChange, %function
 6483              	sendMIDIControlChange:
 6484              	.LFB90:
1993:main.c        **** 
1994:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1995:main.c        **** {
 6485              		.loc 1 1995 0
 6486              		.cfi_startproc
 6487              		@ args = 0, pretend = 0, frame = 16
 6488              		@ frame_needed = 1, uses_anonymous_args = 0
 6489 0000 80B5     		push	{r7, lr}
 6490              		.cfi_def_cfa_offset 8
 6491              		.cfi_offset 7, -8
 6492              		.cfi_offset 14, -4
 6493 0002 84B0     		sub	sp, sp, #16
 6494              		.cfi_def_cfa_offset 24
 6495 0004 00AF     		add	r7, sp, #0
 6496              		.cfi_def_cfa_register 7
 6497 0006 F860     		str	r0, [r7, #12]
 6498 0008 B960     		str	r1, [r7, #8]
 6499 000a 7A60     		str	r2, [r7, #4]
1996:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 6500              		.loc 1 1996 0
 6501 000c 7B68     		ldr	r3, [r7, #4]
 6502 000e DBB2     		uxtb	r3, r3
 6503 0010 503B     		subs	r3, r3, #80
 6504 0012 DAB2     		uxtb	r2, r3
 6505 0014 114B     		ldr	r3, .L283
 6506 0016 1A70     		strb	r2, [r3]
1997:main.c        ****     midiMsg[1] = CCnum;
 6507              		.loc 1 1997 0
 6508 0018 FB68     		ldr	r3, [r7, #12]
 6509 001a DAB2     		uxtb	r2, r3
 6510 001c 0F4B     		ldr	r3, .L283
 6511 001e 5A70     		strb	r2, [r3, #1]
1998:main.c        ****     midiMsg[2] = CCval;			
 6512              		.loc 1 1998 0
 6513 0020 BB68     		ldr	r3, [r7, #8]
 6514 0022 DAB2     		uxtb	r2, r3
 6515 0024 0D4B     		ldr	r3, .L283
 6516 0026 9A70     		strb	r2, [r3, #2]
1999:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6517              		.loc 1 1999 0
 6518 0028 0D4B     		ldr	r3, .L283+4
 6519 002a 1B78     		ldrb	r3, [r3]
 6520 002c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 152


 6521 002e 002B     		cmp	r3, #0
 6522 0030 09D0     		beq	.L282
 6523              		.loc 1 1999 0 is_stmt 0 discriminator 1
 6524 0032 FFF7FEFF 		bl	USB_VBusPresent
 6525 0036 0346     		mov	r3, r0
 6526 0038 002B     		cmp	r3, #0
 6527 003a 04D0     		beq	.L282
2000:main.c        ****     {
2001:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6528              		.loc 1 2001 0 is_stmt 1
 6529 003c 0022     		movs	r2, #0
 6530 003e 0749     		ldr	r1, .L283
 6531 0040 0320     		movs	r0, #3
 6532 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6533              	.L282:
2002:main.c        ****     } 
2003:main.c        ****     midiSent += 4;
 6534              		.loc 1 2003 0
 6535 0046 074B     		ldr	r3, .L283+8
 6536 0048 1B88     		ldrh	r3, [r3]
 6537 004a 0433     		adds	r3, r3, #4
 6538 004c 9AB2     		uxth	r2, r3
 6539 004e 054B     		ldr	r3, .L283+8
 6540 0050 1A80     		strh	r2, [r3]	@ movhi
2004:main.c        **** }
 6541              		.loc 1 2004 0
 6542 0052 00BF     		nop
 6543 0054 1037     		adds	r7, r7, #16
 6544              		.cfi_def_cfa_offset 8
 6545 0056 BD46     		mov	sp, r7
 6546              		.cfi_def_cfa_register 13
 6547              		@ sp needed
 6548 0058 80BD     		pop	{r7, pc}
 6549              	.L284:
 6550 005a 00BF     		.align	2
 6551              	.L283:
 6552 005c 00000000 		.word	midiMsg
 6553 0060 00000000 		.word	USB_active
 6554 0064 00000000 		.word	midiSent
 6555              		.cfi_endproc
 6556              	.LFE90:
 6557              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 6558              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 6559              		.align	2
 6560              		.global	sendMIDIPitchBend
 6561              		.thumb
 6562              		.thumb_func
 6563              		.type	sendMIDIPitchBend, %function
 6564              	sendMIDIPitchBend:
 6565              	.LFB91:
2005:main.c        **** 
2006:main.c        **** void sendMIDIPitchBend(int val, int channel)
2007:main.c        **** {
 6566              		.loc 1 2007 0
 6567              		.cfi_startproc
 6568              		@ args = 0, pretend = 0, frame = 8
 6569              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 153


 6570 0000 80B5     		push	{r7, lr}
 6571              		.cfi_def_cfa_offset 8
 6572              		.cfi_offset 7, -8
 6573              		.cfi_offset 14, -4
 6574 0002 82B0     		sub	sp, sp, #8
 6575              		.cfi_def_cfa_offset 16
 6576 0004 00AF     		add	r7, sp, #0
 6577              		.cfi_def_cfa_register 7
 6578 0006 7860     		str	r0, [r7, #4]
 6579 0008 3960     		str	r1, [r7]
2008:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 6580              		.loc 1 2008 0
 6581 000a 3B68     		ldr	r3, [r7]
 6582 000c DBB2     		uxtb	r3, r3
 6583 000e 203B     		subs	r3, r3, #32
 6584 0010 DAB2     		uxtb	r2, r3
 6585 0012 134B     		ldr	r3, .L287
 6586 0014 1A70     		strb	r2, [r3]
2009:main.c        ****     midiMsg[1] = (val & 127); //LSB
 6587              		.loc 1 2009 0
 6588 0016 7B68     		ldr	r3, [r7, #4]
 6589 0018 DBB2     		uxtb	r3, r3
 6590 001a 03F07F03 		and	r3, r3, #127
 6591 001e DAB2     		uxtb	r2, r3
 6592 0020 0F4B     		ldr	r3, .L287
 6593 0022 5A70     		strb	r2, [r3, #1]
2010:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 6594              		.loc 1 2010 0
 6595 0024 7B68     		ldr	r3, [r7, #4]
 6596 0026 DB11     		asrs	r3, r3, #7
 6597 0028 DAB2     		uxtb	r2, r3
 6598 002a 0D4B     		ldr	r3, .L287
 6599 002c 9A70     		strb	r2, [r3, #2]
2011:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6600              		.loc 1 2011 0
 6601 002e 0D4B     		ldr	r3, .L287+4
 6602 0030 1B78     		ldrb	r3, [r3]
 6603 0032 DBB2     		uxtb	r3, r3
 6604 0034 002B     		cmp	r3, #0
 6605 0036 09D0     		beq	.L286
 6606              		.loc 1 2011 0 is_stmt 0 discriminator 1
 6607 0038 FFF7FEFF 		bl	USB_VBusPresent
 6608 003c 0346     		mov	r3, r0
 6609 003e 002B     		cmp	r3, #0
 6610 0040 04D0     		beq	.L286
2012:main.c        ****     {
2013:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6611              		.loc 1 2013 0 is_stmt 1
 6612 0042 0022     		movs	r2, #0
 6613 0044 0649     		ldr	r1, .L287
 6614 0046 0320     		movs	r0, #3
 6615 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6616              	.L286:
2014:main.c        ****     } 
2015:main.c        ****     midiSent += 4;
 6617              		.loc 1 2015 0
 6618 004c 064B     		ldr	r3, .L287+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 154


 6619 004e 1B88     		ldrh	r3, [r3]
 6620 0050 0433     		adds	r3, r3, #4
 6621 0052 9AB2     		uxth	r2, r3
 6622 0054 044B     		ldr	r3, .L287+8
 6623 0056 1A80     		strh	r2, [r3]	@ movhi
2016:main.c        **** }
 6624              		.loc 1 2016 0
 6625 0058 00BF     		nop
 6626 005a 0837     		adds	r7, r7, #8
 6627              		.cfi_def_cfa_offset 8
 6628 005c BD46     		mov	sp, r7
 6629              		.cfi_def_cfa_register 13
 6630              		@ sp needed
 6631 005e 80BD     		pop	{r7, pc}
 6632              	.L288:
 6633              		.align	2
 6634              	.L287:
 6635 0060 00000000 		.word	midiMsg
 6636 0064 00000000 		.word	USB_active
 6637 0068 00000000 		.word	midiSent
 6638              		.cfi_endproc
 6639              	.LFE91:
 6640              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 6641              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 6642              		.align	2
 6643              		.global	sendMIDIAllNotesOff
 6644              		.thumb
 6645              		.thumb_func
 6646              		.type	sendMIDIAllNotesOff, %function
 6647              	sendMIDIAllNotesOff:
 6648              	.LFB92:
2017:main.c        **** 
2018:main.c        **** void sendMIDIAllNotesOff(void)
2019:main.c        **** {   
 6649              		.loc 1 2019 0
 6650              		.cfi_startproc
 6651              		@ args = 0, pretend = 0, frame = 0
 6652              		@ frame_needed = 1, uses_anonymous_args = 0
 6653 0000 80B5     		push	{r7, lr}
 6654              		.cfi_def_cfa_offset 8
 6655              		.cfi_offset 7, -8
 6656              		.cfi_offset 14, -4
 6657 0002 00AF     		add	r7, sp, #0
 6658              		.cfi_def_cfa_register 7
2020:main.c        ****     for (i = 0; i < 128; i++)
 6659              		.loc 1 2020 0
 6660 0004 144B     		ldr	r3, .L293
 6661 0006 0022     		movs	r2, #0
 6662 0008 1A70     		strb	r2, [r3]
 6663 000a 1EE0     		b	.L290
 6664              	.L292:
2021:main.c        ****     {
2022:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 6665              		.loc 1 2022 0
 6666 000c 134B     		ldr	r3, .L293+4
 6667 000e 9022     		movs	r2, #144
 6668 0010 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 155


2023:main.c        ****         midiMsg[1] = i;
 6669              		.loc 1 2023 0
 6670 0012 114B     		ldr	r3, .L293
 6671 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6672 0016 114B     		ldr	r3, .L293+4
 6673 0018 5A70     		strb	r2, [r3, #1]
2024:main.c        ****         midiMsg[2] = 0;	
 6674              		.loc 1 2024 0
 6675 001a 104B     		ldr	r3, .L293+4
 6676 001c 0022     		movs	r2, #0
 6677 001e 9A70     		strb	r2, [r3, #2]
2025:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6678              		.loc 1 2025 0
 6679 0020 0F4B     		ldr	r3, .L293+8
 6680 0022 1B78     		ldrb	r3, [r3]
 6681 0024 DBB2     		uxtb	r3, r3
 6682 0026 002B     		cmp	r3, #0
 6683 0028 09D0     		beq	.L291
 6684              		.loc 1 2025 0 is_stmt 0 discriminator 1
 6685 002a FFF7FEFF 		bl	USB_VBusPresent
 6686 002e 0346     		mov	r3, r0
 6687 0030 002B     		cmp	r3, #0
 6688 0032 04D0     		beq	.L291
2026:main.c        ****         {       
2027:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6689              		.loc 1 2027 0 is_stmt 1
 6690 0034 0022     		movs	r2, #0
 6691 0036 0949     		ldr	r1, .L293+4
 6692 0038 0320     		movs	r0, #3
 6693 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
 6694              	.L291:
2020:main.c        ****     {
 6695              		.loc 1 2020 0 discriminator 2
 6696 003e 064B     		ldr	r3, .L293
 6697 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6698 0042 0133     		adds	r3, r3, #1
 6699 0044 DAB2     		uxtb	r2, r3
 6700 0046 044B     		ldr	r3, .L293
 6701 0048 1A70     		strb	r2, [r3]
 6702              	.L290:
2020:main.c        ****     {
 6703              		.loc 1 2020 0 is_stmt 0 discriminator 1
 6704 004a 034B     		ldr	r3, .L293
 6705 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6706 004e 5BB2     		sxtb	r3, r3
 6707 0050 002B     		cmp	r3, #0
 6708 0052 DBDA     		bge	.L292
2028:main.c        ****         }
2029:main.c        ****     }
2030:main.c        **** }
 6709              		.loc 1 2030 0 is_stmt 1
 6710 0054 00BF     		nop
 6711 0056 80BD     		pop	{r7, pc}
 6712              	.L294:
 6713              		.align	2
 6714              	.L293:
 6715 0058 00000000 		.word	i
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 156


 6716 005c 00000000 		.word	midiMsg
 6717 0060 00000000 		.word	USB_active
 6718              		.cfi_endproc
 6719              	.LFE92:
 6720              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 6721              		.global	checkStatus
 6722              		.bss
 6723              		.type	checkStatus, %object
 6724              		.size	checkStatus, 1
 6725              	checkStatus:
 6726 00f8 00       		.space	1
 6727              		.global	checkBase
 6728 00f9 00       		.align	1
 6729              		.type	checkBase, %object
 6730              		.size	checkBase, 2
 6731              	checkBase:
 6732 00fa 0000     		.space	2
 6733              		.global	SPI_errors
 6734              		.align	2
 6735              		.type	SPI_errors, %object
 6736              		.size	SPI_errors, 4
 6737              	SPI_errors:
 6738 00fc 00000000 		.space	4
 6739              		.section	.text.parseSysex,"ax",%progbits
 6740              		.align	2
 6741              		.global	parseSysex
 6742              		.thumb
 6743              		.thumb_func
 6744              		.type	parseSysex, %function
 6745              	parseSysex:
 6746              	.LFB93:
2031:main.c        **** 
2032:main.c        **** 
2033:main.c        **** 
2034:main.c        **** 
2035:main.c        **** volatile uint8_t checkStatus = 0;
2036:main.c        **** volatile uint16_t checkBase = 0;
2037:main.c        **** 
2038:main.c        **** 
2039:main.c        **** 
2040:main.c        **** int SPI_errors = 0;
2041:main.c        **** 
2042:main.c        **** void parseSysex(void)
2043:main.c        **** {
 6747              		.loc 1 2043 0
 6748              		.cfi_startproc
 6749              		@ args = 0, pretend = 0, frame = 56
 6750              		@ frame_needed = 1, uses_anonymous_args = 0
 6751 0000 90B5     		push	{r4, r7, lr}
 6752              		.cfi_def_cfa_offset 12
 6753              		.cfi_offset 4, -12
 6754              		.cfi_offset 7, -8
 6755              		.cfi_offset 14, -4
 6756 0002 8FB0     		sub	sp, sp, #60
 6757              		.cfi_def_cfa_offset 72
 6758 0004 00AF     		add	r7, sp, #0
 6759              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 157


2044:main.c        ****     parsingSysex = 1;
 6760              		.loc 1 2044 0
 6761 0006 864B     		ldr	r3, .L342
 6762 0008 0122     		movs	r2, #1
 6763 000a 1A70     		strb	r2, [r3]
2045:main.c        ****     //0 = it's a preset
2046:main.c        ****     if (sysexBuffer[0] == 0)
 6764              		.loc 1 2046 0
 6765 000c 854B     		ldr	r3, .L342+4
 6766 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6767 0010 002B     		cmp	r3, #0
 6768 0012 40F09E82 		bne	.L296
 6769              	.LBB38:
2047:main.c        ****     {
2048:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 6770              		.loc 1 2048 0
 6771 0016 844B     		ldr	r3, .L342+8
 6772 0018 0122     		movs	r2, #1
 6773 001a 1A70     		strb	r2, [r3]
2049:main.c        ****         currentFloat = 0;
 6774              		.loc 1 2049 0
 6775 001c 834B     		ldr	r3, .L342+12
 6776 001e 0022     		movs	r2, #0
 6777 0020 1A60     		str	r2, [r3]
2050:main.c        ****         presetArraySection = presetName;
 6778              		.loc 1 2050 0
 6779 0022 834B     		ldr	r3, .L342+16
 6780 0024 0022     		movs	r2, #0
 6781 0026 1A70     		strb	r2, [r3]
2051:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 6782              		.loc 1 2051 0
 6783 0028 7E4B     		ldr	r3, .L342+4
 6784 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6785 002c 814B     		ldr	r3, .L342+20
 6786 002e 1A70     		strb	r2, [r3]
2052:main.c        ****         
2053:main.c        ****         union breakFloat theVal;
2054:main.c        ****         uint32_t i = 2;
 6787              		.loc 1 2054 0
 6788 0030 0223     		movs	r3, #2
 6789 0032 7B63     		str	r3, [r7, #52]
2055:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 6790              		.loc 1 2055 0
 6791 0034 1023     		movs	r3, #16
 6792 0036 FB77     		strb	r3, [r7, #31]
2056:main.c        ****         for (; i < stoppingPoint; i++)
 6793              		.loc 1 2056 0
 6794 0038 22E0     		b	.L297
 6795              	.L298:
2057:main.c        ****         {
2058:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 6796              		.loc 1 2058 0 discriminator 2
 6797 003a 7B6B     		ldr	r3, [r7, #52]
 6798 003c 023B     		subs	r3, r3, #2
 6799 003e 7949     		ldr	r1, .L342+4
 6800 0040 7A6B     		ldr	r2, [r7, #52]
 6801 0042 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 158


 6802 0044 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6803 0046 02F07F02 		and	r2, r2, #127
 6804 004a D1B2     		uxtb	r1, r2
 6805 004c 7A4A     		ldr	r2, .L342+24
 6806 004e D154     		strb	r1, [r2, r3]
2059:main.c        ****             presetNamesArray[presetNumberToWrite][i-2] = sysexBuffer[i] & 127;
 6807              		.loc 1 2059 0 discriminator 2
 6808 0050 784B     		ldr	r3, .L342+20
 6809 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6810 0054 1846     		mov	r0, r3
 6811 0056 7B6B     		ldr	r3, [r7, #52]
 6812 0058 9A1E     		subs	r2, r3, #2
 6813 005a 7249     		ldr	r1, .L342+4
 6814 005c 7B6B     		ldr	r3, [r7, #52]
 6815 005e 0B44     		add	r3, r3, r1
 6816 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6817 0062 03F07F03 		and	r3, r3, #127
 6818 0066 DCB2     		uxtb	r4, r3
 6819 0068 7449     		ldr	r1, .L342+28
 6820 006a 0346     		mov	r3, r0
 6821 006c DB00     		lsls	r3, r3, #3
 6822 006e 1B1A     		subs	r3, r3, r0
 6823 0070 5B00     		lsls	r3, r3, #1
 6824 0072 0B44     		add	r3, r3, r1
 6825 0074 1344     		add	r3, r3, r2
 6826 0076 2246     		mov	r2, r4
 6827 0078 1A70     		strb	r2, [r3]
2056:main.c        ****         for (; i < stoppingPoint; i++)
 6828              		.loc 1 2056 0 discriminator 2
 6829 007a 7B6B     		ldr	r3, [r7, #52]
 6830 007c 0133     		adds	r3, r3, #1
 6831 007e 7B63     		str	r3, [r7, #52]
 6832              	.L297:
2056:main.c        ****         for (; i < stoppingPoint; i++)
 6833              		.loc 1 2056 0 is_stmt 0 discriminator 1
 6834 0080 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 6835 0082 7B6B     		ldr	r3, [r7, #52]
 6836 0084 9A42     		cmp	r2, r3
 6837 0086 D8D8     		bhi	.L298
2060:main.c        ****         }
2061:main.c        ****         
2062:main.c        ****         presetArraySection = macroNames;
 6838              		.loc 1 2062 0 is_stmt 1
 6839 0088 694B     		ldr	r3, .L342+16
 6840 008a 0122     		movs	r2, #1
 6841 008c 1A70     		strb	r2, [r3]
 6842              	.LBB39:
2063:main.c        **** 
2064:main.c        ****         
2065:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 6843              		.loc 1 2065 0
 6844 008e 0023     		movs	r3, #0
 6845 0090 3B63     		str	r3, [r7, #48]
 6846 0092 34E0     		b	.L299
 6847              	.L302:
 6848              	.LBB40:
2066:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 159


2067:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 6849              		.loc 1 2067 0
 6850 0094 0023     		movs	r3, #0
 6851 0096 FB62     		str	r3, [r7, #44]
 6852 0098 2BE0     		b	.L300
 6853              	.L301:
2068:main.c        ****             {
2069:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 6854              		.loc 1 2069 0 discriminator 3
 6855 009a 7B6B     		ldr	r3, [r7, #52]
 6856 009c 023B     		subs	r3, r3, #2
 6857 009e 6149     		ldr	r1, .L342+4
 6858 00a0 7A6B     		ldr	r2, [r7, #52]
 6859 00a2 0A44     		add	r2, r2, r1
 6860 00a4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6861 00a6 02F07F02 		and	r2, r2, #127
 6862 00aa D1B2     		uxtb	r1, r2
 6863 00ac 624A     		ldr	r2, .L342+24
 6864 00ae D154     		strb	r1, [r2, r3]
2070:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 6865              		.loc 1 2070 0 discriminator 3
 6866 00b0 604B     		ldr	r3, .L342+20
 6867 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6868 00b4 1846     		mov	r0, r3
 6869 00b6 5B4A     		ldr	r2, .L342+4
 6870 00b8 7B6B     		ldr	r3, [r7, #52]
 6871 00ba 1344     		add	r3, r3, r2
 6872 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6873 00be 03F07F03 		and	r3, r3, #127
 6874 00c2 DCB2     		uxtb	r4, r3
 6875 00c4 5E49     		ldr	r1, .L342+32
 6876 00c6 3B6B     		ldr	r3, [r7, #48]
 6877 00c8 1A46     		mov	r2, r3
 6878 00ca D200     		lsls	r2, r2, #3
 6879 00cc D21A     		subs	r2, r2, r3
 6880 00ce 5300     		lsls	r3, r2, #1
 6881 00d0 1A46     		mov	r2, r3
 6882 00d2 0346     		mov	r3, r0
 6883 00d4 DB00     		lsls	r3, r3, #3
 6884 00d6 1B1A     		subs	r3, r3, r0
 6885 00d8 1B01     		lsls	r3, r3, #4
 6886 00da 1344     		add	r3, r3, r2
 6887 00dc CA18     		adds	r2, r1, r3
 6888 00de FB6A     		ldr	r3, [r7, #44]
 6889 00e0 1344     		add	r3, r3, r2
 6890 00e2 2246     		mov	r2, r4
 6891 00e4 1A70     		strb	r2, [r3]
2071:main.c        ****                 i++;
 6892              		.loc 1 2071 0 discriminator 3
 6893 00e6 7B6B     		ldr	r3, [r7, #52]
 6894 00e8 0133     		adds	r3, r3, #1
 6895 00ea 7B63     		str	r3, [r7, #52]
2067:main.c        ****             {
 6896              		.loc 1 2067 0 discriminator 3
 6897 00ec FB6A     		ldr	r3, [r7, #44]
 6898 00ee 0133     		adds	r3, r3, #1
 6899 00f0 FB62     		str	r3, [r7, #44]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 160


 6900              	.L300:
2067:main.c        ****             {
 6901              		.loc 1 2067 0 is_stmt 0 discriminator 1
 6902 00f2 FB6A     		ldr	r3, [r7, #44]
 6903 00f4 0D2B     		cmp	r3, #13
 6904 00f6 D0DD     		ble	.L301
 6905              	.LBE40:
2065:main.c        ****         {
 6906              		.loc 1 2065 0 is_stmt 1 discriminator 2
 6907 00f8 3B6B     		ldr	r3, [r7, #48]
 6908 00fa 0133     		adds	r3, r3, #1
 6909 00fc 3B63     		str	r3, [r7, #48]
 6910              	.L299:
2065:main.c        ****         {
 6911              		.loc 1 2065 0 is_stmt 0 discriminator 1
 6912 00fe 3B6B     		ldr	r3, [r7, #48]
 6913 0100 072B     		cmp	r3, #7
 6914 0102 C7DD     		ble	.L302
 6915              	.LBE39:
2072:main.c        ****             }
2073:main.c        ****         }
2074:main.c        ****         
2075:main.c        ****         uint16_t valsStart = NAME_LENGTH_IN_BYTES + (NAME_LENGTH_IN_BYTES * NUM_MACROS);
 6916              		.loc 1 2075 0 is_stmt 1
 6917 0104 7E23     		movs	r3, #126
 6918 0106 BB83     		strh	r3, [r7, #28]	@ movhi
2076:main.c        ****         
2077:main.c        ****         presetArraySection = initialVals;
 6919              		.loc 1 2077 0
 6920 0108 494B     		ldr	r3, .L342+16
 6921 010a 0222     		movs	r2, #2
 6922 010c 1A70     		strb	r2, [r3]
2078:main.c        ****         
2079:main.c        ****         for (; i < sysexPointer; i = i+5)
 6923              		.loc 1 2079 0
 6924 010e 19E2     		b	.L303
 6925              	.L324:
2080:main.c        ****         {
2081:main.c        ****             theVal.u32 = 0;
 6926              		.loc 1 2081 0
 6927 0110 0023     		movs	r3, #0
 6928 0112 BB60     		str	r3, [r7, #8]
2082:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 6929              		.loc 1 2082 0
 6930 0114 BB68     		ldr	r3, [r7, #8]
 6931 0116 4349     		ldr	r1, .L342+4
 6932 0118 7A6B     		ldr	r2, [r7, #52]
 6933 011a 0A44     		add	r2, r2, r1
 6934 011c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6935 011e 1207     		lsls	r2, r2, #28
 6936 0120 1343     		orrs	r3, r3, r2
 6937 0122 BB60     		str	r3, [r7, #8]
2083:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 6938              		.loc 1 2083 0
 6939 0124 BB68     		ldr	r3, [r7, #8]
 6940 0126 7A6B     		ldr	r2, [r7, #52]
 6941 0128 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 161


 6942 012a 3E49     		ldr	r1, .L342+4
 6943 012c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6944 012e 5205     		lsls	r2, r2, #21
 6945 0130 1343     		orrs	r3, r3, r2
 6946 0132 BB60     		str	r3, [r7, #8]
2084:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 6947              		.loc 1 2084 0
 6948 0134 BB68     		ldr	r3, [r7, #8]
 6949 0136 7A6B     		ldr	r2, [r7, #52]
 6950 0138 0232     		adds	r2, r2, #2
 6951 013a 3A49     		ldr	r1, .L342+4
 6952 013c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6953 013e 9203     		lsls	r2, r2, #14
 6954 0140 1343     		orrs	r3, r3, r2
 6955 0142 BB60     		str	r3, [r7, #8]
2085:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 6956              		.loc 1 2085 0
 6957 0144 BB68     		ldr	r3, [r7, #8]
 6958 0146 7A6B     		ldr	r2, [r7, #52]
 6959 0148 0332     		adds	r2, r2, #3
 6960 014a 3649     		ldr	r1, .L342+4
 6961 014c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6962 014e D201     		lsls	r2, r2, #7
 6963 0150 1343     		orrs	r3, r3, r2
 6964 0152 BB60     		str	r3, [r7, #8]
2086:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 6965              		.loc 1 2086 0
 6966 0154 BA68     		ldr	r2, [r7, #8]
 6967 0156 7B6B     		ldr	r3, [r7, #52]
 6968 0158 0433     		adds	r3, r3, #4
 6969 015a 3249     		ldr	r1, .L342+4
 6970 015c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6971 015e 03F07F03 		and	r3, r3, #127
 6972 0162 1343     		orrs	r3, r3, r2
 6973 0164 BB60     		str	r3, [r7, #8]
2087:main.c        ****             testVal = theVal.f;
 6974              		.loc 1 2087 0
 6975 0166 BB68     		ldr	r3, [r7, #8]	@ float
 6976 0168 364A     		ldr	r2, .L342+36
 6977 016a 1360     		str	r3, [r2]	@ float
2088:main.c        ****             if (presetArraySection == initialVals)
 6978              		.loc 1 2088 0
 6979 016c 304B     		ldr	r3, .L342+16
 6980 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6981 0170 022B     		cmp	r3, #2
 6982 0172 40F0B980 		bne	.L304
2089:main.c        ****             {
2090:main.c        **** 
2091:main.c        ****                 if (currentFloat == 0)
 6983              		.loc 1 2091 0
 6984 0176 2D4B     		ldr	r3, .L342+12
 6985 0178 1B68     		ldr	r3, [r3]
 6986 017a 002B     		cmp	r3, #0
 6987 017c 22D1     		bne	.L305
2092:main.c        ****                 {
2093:main.c        ****                     valsCount = (uint16_t) theVal.f;
 6988              		.loc 1 2093 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 162


 6989 017e BB68     		ldr	r3, [r7, #8]	@ float
 6990 0180 1846     		mov	r0, r3
 6991 0182 FFF7FEFF 		bl	__aeabi_f2uiz
 6992 0186 0346     		mov	r3, r0
 6993 0188 9AB2     		uxth	r2, r3
 6994 018a 2F4B     		ldr	r3, .L342+40
 6995 018c 1A80     		strh	r2, [r3]	@ movhi
2094:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 6996              		.loc 1 2094 0
 6997 018e BA8B     		ldrh	r2, [r7, #28]
 6998 0190 264B     		ldr	r3, .L342+12
 6999 0192 1B68     		ldr	r3, [r3]
 7000 0194 591C     		adds	r1, r3, #1
 7001 0196 2548     		ldr	r0, .L342+12
 7002 0198 0160     		str	r1, [r0]
 7003 019a 1344     		add	r3, r3, r2
 7004 019c 2A4A     		ldr	r2, .L342+40
 7005 019e 1288     		ldrh	r2, [r2]
 7006 01a0 120A     		lsrs	r2, r2, #8
 7007 01a2 92B2     		uxth	r2, r2
 7008 01a4 D1B2     		uxtb	r1, r2
 7009 01a6 244A     		ldr	r2, .L342+24
 7010 01a8 D154     		strb	r1, [r2, r3]
2095:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 7011              		.loc 1 2095 0
 7012 01aa BA8B     		ldrh	r2, [r7, #28]
 7013 01ac 1F4B     		ldr	r3, .L342+12
 7014 01ae 1B68     		ldr	r3, [r3]
 7015 01b0 591C     		adds	r1, r3, #1
 7016 01b2 1E48     		ldr	r0, .L342+12
 7017 01b4 0160     		str	r1, [r0]
 7018 01b6 1344     		add	r3, r3, r2
 7019 01b8 234A     		ldr	r2, .L342+40
 7020 01ba 1288     		ldrh	r2, [r2]
 7021 01bc D1B2     		uxtb	r1, r2
 7022 01be 1E4A     		ldr	r2, .L342+24
 7023 01c0 D154     		strb	r1, [r2, r3]
 7024 01c2 BCE1     		b	.L311
 7025              	.L305:
2096:main.c        ****                 }
2097:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 7026              		.loc 1 2097 0
 7027 01c4 204B     		ldr	r3, .L342+40
 7028 01c6 1B88     		ldrh	r3, [r3]
 7029 01c8 0133     		adds	r3, r3, #1
 7030 01ca 5B00     		lsls	r3, r3, #1
 7031 01cc 1A46     		mov	r2, r3
 7032 01ce 174B     		ldr	r3, .L342+12
 7033 01d0 1B68     		ldr	r3, [r3]
 7034 01d2 9A42     		cmp	r2, r3
 7035 01d4 3CD9     		bls	.L307
 7036              	.LBB41:
2098:main.c        ****                 { 
2099:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 7037              		.loc 1 2099 0
 7038 01d6 BB68     		ldr	r3, [r7, #8]	@ float
 7039 01d8 1C49     		ldr	r1, .L342+44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 163


 7040 01da 1846     		mov	r0, r3
 7041 01dc FFF7FEFF 		bl	__aeabi_fmul
 7042 01e0 0346     		mov	r3, r0
 7043 01e2 1846     		mov	r0, r3
 7044 01e4 FFF7FEFF 		bl	__aeabi_f2uiz
 7045 01e8 0346     		mov	r3, r0
 7046 01ea 7B83     		strh	r3, [r7, #26]	@ movhi
2100:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 7047              		.loc 1 2100 0
 7048 01ec BA8B     		ldrh	r2, [r7, #28]
 7049 01ee 0F4B     		ldr	r3, .L342+12
 7050 01f0 1B68     		ldr	r3, [r3]
 7051 01f2 591C     		adds	r1, r3, #1
 7052 01f4 0D48     		ldr	r0, .L342+12
 7053 01f6 0160     		str	r1, [r0]
 7054 01f8 1344     		add	r3, r3, r2
 7055 01fa 7A8B     		ldrh	r2, [r7, #26]
 7056 01fc 120A     		lsrs	r2, r2, #8
 7057 01fe 92B2     		uxth	r2, r2
 7058 0200 D1B2     		uxtb	r1, r2
 7059 0202 0D4A     		ldr	r2, .L342+24
 7060 0204 D154     		strb	r1, [r2, r3]
2101:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7061              		.loc 1 2101 0
 7062 0206 BA8B     		ldrh	r2, [r7, #28]
 7063 0208 084B     		ldr	r3, .L342+12
 7064 020a 1B68     		ldr	r3, [r3]
 7065 020c 591C     		adds	r1, r3, #1
 7066 020e 0748     		ldr	r0, .L342+12
 7067 0210 0160     		str	r1, [r0]
 7068 0212 1344     		add	r3, r3, r2
 7069 0214 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 7070 0216 D1B2     		uxtb	r1, r2
 7071 0218 074A     		ldr	r2, .L342+24
 7072 021a D154     		strb	r1, [r2, r3]
 7073              	.LBE41:
 7074 021c 8FE1     		b	.L311
 7075              	.L343:
 7076 021e 00BF     		.align	2
 7077              	.L342:
 7078 0220 00000000 		.word	parsingSysex
 7079 0224 00000000 		.word	sysexBuffer
 7080 0228 00000000 		.word	sysexMessageInProgress
 7081 022c 00000000 		.word	currentFloat
 7082 0230 00000000 		.word	presetArraySection
 7083 0234 00000000 		.word	presetNumberToWrite
 7084 0238 00000000 		.word	presetArray
 7085 023c 00000000 		.word	presetNamesArray
 7086 0240 00000000 		.word	macroNamesArray
 7087 0244 00000000 		.word	testVal
 7088 0248 00000000 		.word	valsCount
 7089 024c 00FF7F47 		.word	1199570688
 7090              	.L307:
2102:main.c        ****                 }
2103:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 7091              		.loc 1 2103 0
 7092 0250 854B     		ldr	r3, .L344
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 164


 7093 0252 1B88     		ldrh	r3, [r3]
 7094 0254 0133     		adds	r3, r3, #1
 7095 0256 5B00     		lsls	r3, r3, #1
 7096 0258 1A46     		mov	r2, r3
 7097 025a 844B     		ldr	r3, .L344+4
 7098 025c 1B68     		ldr	r3, [r3]
 7099 025e 9A42     		cmp	r2, r3
 7100 0260 40F06D81 		bne	.L311
2104:main.c        ****                 {
2105:main.c        ****                     valCheck = theVal.f;
 7101              		.loc 1 2105 0
 7102 0264 BB68     		ldr	r3, [r7, #8]	@ float
 7103 0266 824A     		ldr	r2, .L344+8
 7104 0268 1360     		str	r3, [r2]	@ float
2106:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 7105              		.loc 1 2106 0
 7106 026a 814B     		ldr	r3, .L344+8
 7107 026c 1B68     		ldr	r3, [r3]	@ float
 7108 026e 8149     		ldr	r1, .L344+12
 7109 0270 1846     		mov	r0, r3
 7110 0272 FFF7FEFF 		bl	__aeabi_fcmplt
 7111 0276 0346     		mov	r3, r0
 7112 0278 002B     		cmp	r3, #0
 7113 027a 23D0     		beq	.L308
 7114              		.loc 1 2106 0 is_stmt 0 discriminator 1
 7115 027c 7C4B     		ldr	r3, .L344+8
 7116 027e 1B68     		ldr	r3, [r3]	@ float
 7117 0280 7D49     		ldr	r1, .L344+16
 7118 0282 1846     		mov	r0, r3
 7119 0284 FFF7FEFF 		bl	__aeabi_fcmpgt
 7120 0288 0346     		mov	r3, r0
 7121 028a 002B     		cmp	r3, #0
 7122 028c 1AD0     		beq	.L308
2107:main.c        ****                     {
2108:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7123              		.loc 1 2108 0 is_stmt 1
 7124 028e BA8B     		ldrh	r2, [r7, #28]
 7125 0290 764B     		ldr	r3, .L344+4
 7126 0292 1B68     		ldr	r3, [r3]
 7127 0294 591C     		adds	r1, r3, #1
 7128 0296 7548     		ldr	r0, .L344+4
 7129 0298 0160     		str	r1, [r0]
 7130 029a 1344     		add	r3, r3, r2
 7131 029c 774A     		ldr	r2, .L344+20
 7132 029e EF21     		movs	r1, #239
 7133 02a0 D154     		strb	r1, [r2, r3]
2109:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7134              		.loc 1 2109 0
 7135 02a2 BA8B     		ldrh	r2, [r7, #28]
 7136 02a4 714B     		ldr	r3, .L344+4
 7137 02a6 1B68     		ldr	r3, [r3]
 7138 02a8 591C     		adds	r1, r3, #1
 7139 02aa 7048     		ldr	r0, .L344+4
 7140 02ac 0160     		str	r1, [r0]
 7141 02ae 1344     		add	r3, r3, r2
 7142 02b0 724A     		ldr	r2, .L344+20
 7143 02b2 EF21     		movs	r1, #239
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 165


 7144 02b4 D154     		strb	r1, [r2, r3]
2110:main.c        ****                         presetArraySection = mapCountNext;
 7145              		.loc 1 2110 0
 7146 02b6 724B     		ldr	r3, .L344+24
 7147 02b8 0322     		movs	r2, #3
 7148 02ba 1A70     		strb	r2, [r3]
2111:main.c        ****                         mapCount = 0;
 7149              		.loc 1 2111 0
 7150 02bc 714B     		ldr	r3, .L344+28
 7151 02be 0022     		movs	r2, #0
 7152 02c0 1A60     		str	r2, [r3]
 7153 02c2 3CE1     		b	.L311
 7154              	.L308:
2112:main.c        ****                     }
2113:main.c        ****                     else
2114:main.c        ****                     {
2115:main.c        ****                         //error state
2116:main.c        ****                         SPI_errors++;
 7155              		.loc 1 2116 0
 7156 02c4 704B     		ldr	r3, .L344+32
 7157 02c6 1B68     		ldr	r3, [r3]
 7158 02c8 0133     		adds	r3, r3, #1
 7159 02ca 6F4A     		ldr	r2, .L344+32
 7160 02cc 1360     		str	r3, [r2]
2117:main.c        ****                         sysexMessageInProgress = 0;
 7161              		.loc 1 2117 0
 7162 02ce 6F4B     		ldr	r3, .L344+36
 7163 02d0 0022     		movs	r2, #0
 7164 02d2 1A70     		strb	r2, [r3]
2118:main.c        ****                         sysexPointer = 0;
 7165              		.loc 1 2118 0
 7166 02d4 6E4B     		ldr	r3, .L344+40
 7167 02d6 0022     		movs	r2, #0
 7168 02d8 1A60     		str	r2, [r3]
2119:main.c        ****                         sendingMessage = 0;
 7169              		.loc 1 2119 0
 7170 02da 6E4B     		ldr	r3, .L344+44
 7171 02dc 0022     		movs	r2, #0
 7172 02de 1A70     		strb	r2, [r3]
2120:main.c        ****                         parseThatMF = 0;
 7173              		.loc 1 2120 0
 7174 02e0 6D4B     		ldr	r3, .L344+48
 7175 02e2 0022     		movs	r2, #0
 7176 02e4 1A70     		strb	r2, [r3]
 7177 02e6 2AE1     		b	.L311
 7178              	.L304:
2121:main.c        ****                     }
2122:main.c        ****                 }
2123:main.c        ****             }
2124:main.c        ****             else if (presetArraySection == mapCountNext)
 7179              		.loc 1 2124 0
 7180 02e8 654B     		ldr	r3, .L344+24
 7181 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7182 02ec 032B     		cmp	r3, #3
 7183 02ee 28D1     		bne	.L312
2125:main.c        ****             {
2126:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 166


 7184              		.loc 1 2126 0
 7185 02f0 BB68     		ldr	r3, [r7, #8]	@ float
 7186 02f2 1846     		mov	r0, r3
 7187 02f4 FFF7FEFF 		bl	__aeabi_f2uiz
 7188 02f8 0346     		mov	r3, r0
 7189 02fa 9AB2     		uxth	r2, r3
 7190 02fc 674B     		ldr	r3, .L344+52
 7191 02fe 1A80     		strh	r2, [r3]	@ movhi
2127:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 7192              		.loc 1 2127 0
 7193 0300 BA8B     		ldrh	r2, [r7, #28]
 7194 0302 5A4B     		ldr	r3, .L344+4
 7195 0304 1B68     		ldr	r3, [r3]
 7196 0306 591C     		adds	r1, r3, #1
 7197 0308 5848     		ldr	r0, .L344+4
 7198 030a 0160     		str	r1, [r0]
 7199 030c 1344     		add	r3, r3, r2
 7200 030e 634A     		ldr	r2, .L344+52
 7201 0310 1288     		ldrh	r2, [r2]
 7202 0312 120A     		lsrs	r2, r2, #8
 7203 0314 92B2     		uxth	r2, r2
 7204 0316 D1B2     		uxtb	r1, r2
 7205 0318 584A     		ldr	r2, .L344+20
 7206 031a D154     		strb	r1, [r2, r3]
2128:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 7207              		.loc 1 2128 0
 7208 031c BA8B     		ldrh	r2, [r7, #28]
 7209 031e 534B     		ldr	r3, .L344+4
 7210 0320 1B68     		ldr	r3, [r3]
 7211 0322 591C     		adds	r1, r3, #1
 7212 0324 5148     		ldr	r0, .L344+4
 7213 0326 0160     		str	r1, [r0]
 7214 0328 1344     		add	r3, r3, r2
 7215 032a 5C4A     		ldr	r2, .L344+52
 7216 032c 1288     		ldrh	r2, [r2]
 7217 032e D1B2     		uxtb	r1, r2
 7218 0330 524A     		ldr	r2, .L344+20
 7219 0332 D154     		strb	r1, [r2, r3]
2129:main.c        ****                 presetArraySection = mapping;
 7220              		.loc 1 2129 0
 7221 0334 524B     		ldr	r3, .L344+24
 7222 0336 0422     		movs	r2, #4
 7223 0338 1A70     		strb	r2, [r3]
2130:main.c        ****                 numMappings = 0;
 7224              		.loc 1 2130 0
 7225 033a 594B     		ldr	r3, .L344+56
 7226 033c 0022     		movs	r2, #0
 7227 033e 1A80     		strh	r2, [r3]	@ movhi
 7228 0340 FDE0     		b	.L311
 7229              	.L312:
2131:main.c        ****             }
2132:main.c        ****             else if (presetArraySection == mapping)
 7230              		.loc 1 2132 0
 7231 0342 4F4B     		ldr	r3, .L344+24
 7232 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7233 0346 042B     		cmp	r3, #4
 7234 0348 40F0F980 		bne	.L311
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 167


2133:main.c        ****             {
2134:main.c        ****                 // this is the order
2135:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
2136:main.c        ****                 if (numMappings < mapCountExpectation)
 7235              		.loc 1 2136 0
 7236 034c 544B     		ldr	r3, .L344+56
 7237 034e 1A88     		ldrh	r2, [r3]
 7238 0350 524B     		ldr	r3, .L344+52
 7239 0352 1B88     		ldrh	r3, [r3]
 7240 0354 9A42     		cmp	r2, r3
 7241 0356 80F0A780 		bcs	.L313
2137:main.c        ****                 {
2138:main.c        ****                     if ((mapCount % 4) == 0)
 7242              		.loc 1 2138 0
 7243 035a 4A4B     		ldr	r3, .L344+28
 7244 035c 1B68     		ldr	r3, [r3]
 7245 035e 03F00303 		and	r3, r3, #3
 7246 0362 002B     		cmp	r3, #0
 7247 0364 0FD1     		bne	.L314
2139:main.c        ****                     {
2140:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7248              		.loc 1 2140 0
 7249 0366 BA8B     		ldrh	r2, [r7, #28]
 7250 0368 404B     		ldr	r3, .L344+4
 7251 036a 1B68     		ldr	r3, [r3]
 7252 036c 591C     		adds	r1, r3, #1
 7253 036e 3F48     		ldr	r0, .L344+4
 7254 0370 0160     		str	r1, [r0]
 7255 0372 D418     		adds	r4, r2, r3
 7256 0374 BB68     		ldr	r3, [r7, #8]	@ float
 7257 0376 1846     		mov	r0, r3
 7258 0378 FFF7FEFF 		bl	__aeabi_f2uiz
 7259 037c 0346     		mov	r3, r0
 7260 037e DAB2     		uxtb	r2, r3
 7261 0380 3E4B     		ldr	r3, .L344+20
 7262 0382 1A55     		strb	r2, [r3, r4]
 7263 0384 69E0     		b	.L315
 7264              	.L314:
2141:main.c        ****                     }
2142:main.c        ****                     else if  (mapCount % 4 == 1)
 7265              		.loc 1 2142 0
 7266 0386 3F4B     		ldr	r3, .L344+28
 7267 0388 1B68     		ldr	r3, [r3]
 7268 038a 03F00303 		and	r3, r3, #3
 7269 038e 012B     		cmp	r3, #1
 7270 0390 0FD1     		bne	.L316
2143:main.c        ****                     {
2144:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7271              		.loc 1 2144 0
 7272 0392 BA8B     		ldrh	r2, [r7, #28]
 7273 0394 354B     		ldr	r3, .L344+4
 7274 0396 1B68     		ldr	r3, [r3]
 7275 0398 591C     		adds	r1, r3, #1
 7276 039a 3448     		ldr	r0, .L344+4
 7277 039c 0160     		str	r1, [r0]
 7278 039e D418     		adds	r4, r2, r3
 7279 03a0 BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 168


 7280 03a2 1846     		mov	r0, r3
 7281 03a4 FFF7FEFF 		bl	__aeabi_f2uiz
 7282 03a8 0346     		mov	r3, r0
 7283 03aa DAB2     		uxtb	r2, r3
 7284 03ac 334B     		ldr	r3, .L344+20
 7285 03ae 1A55     		strb	r2, [r3, r4]
 7286 03b0 53E0     		b	.L315
 7287              	.L316:
2145:main.c        ****                     }
2146:main.c        ****                     else if (mapCount % 4 == 2) //check if the scalar source is -1 (if so send 255 
 7288              		.loc 1 2146 0
 7289 03b2 344B     		ldr	r3, .L344+28
 7290 03b4 1B68     		ldr	r3, [r3]
 7291 03b6 03F00303 		and	r3, r3, #3
 7292 03ba 022B     		cmp	r3, #2
 7293 03bc 23D1     		bne	.L317
2147:main.c        ****                     {
2148:main.c        ****                         if (theVal.f < 0.0f)
 7294              		.loc 1 2148 0
 7295 03be BB68     		ldr	r3, [r7, #8]	@ float
 7296 03c0 4FF00001 		mov	r1, #0
 7297 03c4 1846     		mov	r0, r3
 7298 03c6 FFF7FEFF 		bl	__aeabi_fcmplt
 7299 03ca 0346     		mov	r3, r0
 7300 03cc 002B     		cmp	r3, #0
 7301 03ce 0AD0     		beq	.L341
2149:main.c        ****                         {
2150:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 7302              		.loc 1 2150 0
 7303 03d0 BA8B     		ldrh	r2, [r7, #28]
 7304 03d2 264B     		ldr	r3, .L344+4
 7305 03d4 1B68     		ldr	r3, [r3]
 7306 03d6 591C     		adds	r1, r3, #1
 7307 03d8 2448     		ldr	r0, .L344+4
 7308 03da 0160     		str	r1, [r0]
 7309 03dc 1344     		add	r3, r3, r2
 7310 03de 274A     		ldr	r2, .L344+20
 7311 03e0 FF21     		movs	r1, #255
 7312 03e2 D154     		strb	r1, [r2, r3]
 7313 03e4 39E0     		b	.L315
 7314              	.L341:
2151:main.c        ****                         }
2152:main.c        ****                         else
2153:main.c        ****                         {
2154:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7315              		.loc 1 2154 0
 7316 03e6 BA8B     		ldrh	r2, [r7, #28]
 7317 03e8 204B     		ldr	r3, .L344+4
 7318 03ea 1B68     		ldr	r3, [r3]
 7319 03ec 591C     		adds	r1, r3, #1
 7320 03ee 1F48     		ldr	r0, .L344+4
 7321 03f0 0160     		str	r1, [r0]
 7322 03f2 D418     		adds	r4, r2, r3
 7323 03f4 BB68     		ldr	r3, [r7, #8]	@ float
 7324 03f6 1846     		mov	r0, r3
 7325 03f8 FFF7FEFF 		bl	__aeabi_f2uiz
 7326 03fc 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 169


 7327 03fe DAB2     		uxtb	r2, r3
 7328 0400 1E4B     		ldr	r3, .L344+20
 7329 0402 1A55     		strb	r2, [r3, r4]
 7330 0404 29E0     		b	.L315
 7331              	.L317:
 7332              	.LBB42:
2155:main.c        ****                         }
2156:main.c        ****                     }
2157:main.c        ****                     else
2158:main.c        ****                     {
2159:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 7333              		.loc 1 2159 0
 7334 0406 BB68     		ldr	r3, [r7, #8]	@ float
 7335 0408 2649     		ldr	r1, .L344+60
 7336 040a 1846     		mov	r0, r3
 7337 040c FFF7FEFF 		bl	__aeabi_fmul
 7338 0410 0346     		mov	r3, r0
 7339 0412 1846     		mov	r0, r3
 7340 0414 FFF7FEFF 		bl	__aeabi_f2iz
 7341 0418 0346     		mov	r3, r0
 7342 041a 3B83     		strh	r3, [r7, #24]	@ movhi
2160:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 7343              		.loc 1 2160 0
 7344 041c BA8B     		ldrh	r2, [r7, #28]
 7345 041e 134B     		ldr	r3, .L344+4
 7346 0420 1B68     		ldr	r3, [r3]
 7347 0422 591C     		adds	r1, r3, #1
 7348 0424 1148     		ldr	r0, .L344+4
 7349 0426 0160     		str	r1, [r0]
 7350 0428 1344     		add	r3, r3, r2
 7351 042a B7F91820 		ldrsh	r2, [r7, #24]
 7352 042e 1212     		asrs	r2, r2, #8
 7353 0430 12B2     		sxth	r2, r2
 7354 0432 D1B2     		uxtb	r1, r2
 7355 0434 114A     		ldr	r2, .L344+20
 7356 0436 D154     		strb	r1, [r2, r3]
2161:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7357              		.loc 1 2161 0
 7358 0438 BA8B     		ldrh	r2, [r7, #28]
 7359 043a 0C4B     		ldr	r3, .L344+4
 7360 043c 1B68     		ldr	r3, [r3]
 7361 043e 591C     		adds	r1, r3, #1
 7362 0440 0A48     		ldr	r0, .L344+4
 7363 0442 0160     		str	r1, [r0]
 7364 0444 1344     		add	r3, r3, r2
 7365 0446 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 7366 0448 D1B2     		uxtb	r1, r2
 7367 044a 0C4A     		ldr	r2, .L344+20
 7368 044c D154     		strb	r1, [r2, r3]
2162:main.c        ****                         numMappings++;
 7369              		.loc 1 2162 0
 7370 044e 144B     		ldr	r3, .L344+56
 7371 0450 1B88     		ldrh	r3, [r3]
 7372 0452 0133     		adds	r3, r3, #1
 7373 0454 9AB2     		uxth	r2, r3
 7374 0456 124B     		ldr	r3, .L344+56
 7375 0458 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 170


 7376              	.L315:
 7377              	.LBE42:
2163:main.c        ****                     }
2164:main.c        ****                     mapCount++;
 7378              		.loc 1 2164 0
 7379 045a 0A4B     		ldr	r3, .L344+28
 7380 045c 1B68     		ldr	r3, [r3]
 7381 045e 0133     		adds	r3, r3, #1
 7382 0460 084A     		ldr	r2, .L344+28
 7383 0462 1360     		str	r3, [r2]
 7384 0464 6BE0     		b	.L311
 7385              	.L345:
 7386 0466 00BF     		.align	2
 7387              	.L344:
 7388 0468 00000000 		.word	valsCount
 7389 046c 00000000 		.word	currentFloat
 7390 0470 00000000 		.word	valCheck
 7391 0474 0000C0BF 		.word	-1077936128
 7392 0478 000020C0 		.word	-1071644672
 7393 047c 00000000 		.word	presetArray
 7394 0480 00000000 		.word	presetArraySection
 7395 0484 00000000 		.word	mapCount
 7396 0488 00000000 		.word	SPI_errors
 7397 048c 00000000 		.word	sysexMessageInProgress
 7398 0490 00000000 		.word	sysexPointer
 7399 0494 00000000 		.word	sendingMessage
 7400 0498 00000000 		.word	parseThatMF
 7401 049c 00000000 		.word	mapCountExpectation
 7402 04a0 00000000 		.word	numMappings
 7403 04a4 00FEFF46 		.word	1191181824
 7404              	.L313:
2165:main.c        ****                 }
2166:main.c        ****                 
2167:main.c        **** 
2168:main.c        ****                 else
2169:main.c        ****                 {
2170:main.c        ****                     //mapcount ended
2171:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 7405              		.loc 1 2171 0
 7406 04a8 BB68     		ldr	r3, [r7, #8]	@ float
 7407 04aa 6349     		ldr	r1, .L346
 7408 04ac 1846     		mov	r0, r3
 7409 04ae FFF7FEFF 		bl	__aeabi_fcmplt
 7410 04b2 0346     		mov	r3, r0
 7411 04b4 002B     		cmp	r3, #0
 7412 04b6 31D0     		beq	.L321
 7413              		.loc 1 2171 0 is_stmt 0 discriminator 1
 7414 04b8 BB68     		ldr	r3, [r7, #8]	@ float
 7415 04ba 6049     		ldr	r1, .L346+4
 7416 04bc 1846     		mov	r0, r3
 7417 04be FFF7FEFF 		bl	__aeabi_fcmpgt
 7418 04c2 0346     		mov	r3, r0
 7419 04c4 002B     		cmp	r3, #0
 7420 04c6 29D0     		beq	.L321
2172:main.c        ****                     {
2173:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 7421              		.loc 1 2173 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 171


 7422 04c8 BA8B     		ldrh	r2, [r7, #28]
 7423 04ca 5D4B     		ldr	r3, .L346+8
 7424 04cc 1B68     		ldr	r3, [r3]
 7425 04ce 591C     		adds	r1, r3, #1
 7426 04d0 5B48     		ldr	r0, .L346+8
 7427 04d2 0160     		str	r1, [r0]
 7428 04d4 1344     		add	r3, r3, r2
 7429 04d6 5B4A     		ldr	r2, .L346+12
 7430 04d8 FE21     		movs	r1, #254
 7431 04da D154     		strb	r1, [r2, r3]
2174:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 7432              		.loc 1 2174 0
 7433 04dc BA8B     		ldrh	r2, [r7, #28]
 7434 04de 584B     		ldr	r3, .L346+8
 7435 04e0 1B68     		ldr	r3, [r3]
 7436 04e2 591C     		adds	r1, r3, #1
 7437 04e4 5648     		ldr	r0, .L346+8
 7438 04e6 0160     		str	r1, [r0]
 7439 04e8 1344     		add	r3, r3, r2
 7440 04ea 564A     		ldr	r2, .L346+12
 7441 04ec FE21     		movs	r1, #254
 7442 04ee D154     		strb	r1, [r2, r3]
2175:main.c        ****                         presetArraySection = presetEnd;
 7443              		.loc 1 2175 0
 7444 04f0 554B     		ldr	r3, .L346+16
 7445 04f2 0522     		movs	r2, #5
 7446 04f4 1A70     		strb	r2, [r3]
2176:main.c        ****                         sysexMessageInProgress = 0;
 7447              		.loc 1 2176 0
 7448 04f6 554B     		ldr	r3, .L346+20
 7449 04f8 0022     		movs	r2, #0
 7450 04fa 1A70     		strb	r2, [r3]
2177:main.c        ****                         sendingMessage = 1;
 7451              		.loc 1 2177 0
 7452 04fc 544B     		ldr	r3, .L346+24
 7453 04fe 0122     		movs	r2, #1
 7454 0500 1A70     		strb	r2, [r3]
2178:main.c        ****                         patchNum = presetNumberToWrite;
 7455              		.loc 1 2178 0
 7456 0502 544B     		ldr	r3, .L346+28
 7457 0504 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7458 0506 544B     		ldr	r3, .L346+32
 7459 0508 1A70     		strb	r2, [r3]
2179:main.c        ****                         messageArraySize = valsStart + currentFloat;
 7460              		.loc 1 2179 0
 7461 050a 4D4B     		ldr	r3, .L346+8
 7462 050c 1B68     		ldr	r3, [r3]
 7463 050e 9AB2     		uxth	r2, r3
 7464 0510 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 7465 0512 1344     		add	r3, r3, r2
 7466 0514 9AB2     		uxth	r2, r3
 7467 0516 514B     		ldr	r3, .L346+36
 7468 0518 1A80     		strh	r2, [r3]	@ movhi
 7469 051a 10E0     		b	.L311
 7470              	.L321:
2180:main.c        ****                     }
2181:main.c        ****                     else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 172


2182:main.c        ****                     {
2183:main.c        ****                         //error state
2184:main.c        ****                         SPI_errors++;
 7471              		.loc 1 2184 0
 7472 051c 504B     		ldr	r3, .L346+40
 7473 051e 1B68     		ldr	r3, [r3]
 7474 0520 0133     		adds	r3, r3, #1
 7475 0522 4F4A     		ldr	r2, .L346+40
 7476 0524 1360     		str	r3, [r2]
2185:main.c        ****                         sysexMessageInProgress = 0;
 7477              		.loc 1 2185 0
 7478 0526 494B     		ldr	r3, .L346+20
 7479 0528 0022     		movs	r2, #0
 7480 052a 1A70     		strb	r2, [r3]
2186:main.c        ****                         sysexPointer = 0;
 7481              		.loc 1 2186 0
 7482 052c 4D4B     		ldr	r3, .L346+44
 7483 052e 0022     		movs	r2, #0
 7484 0530 1A60     		str	r2, [r3]
2187:main.c        ****                         sendingMessage = 0;
 7485              		.loc 1 2187 0
 7486 0532 474B     		ldr	r3, .L346+24
 7487 0534 0022     		movs	r2, #0
 7488 0536 1A70     		strb	r2, [r3]
2188:main.c        ****                         parseThatMF = 0;
 7489              		.loc 1 2188 0
 7490 0538 4B4B     		ldr	r3, .L346+48
 7491 053a 0022     		movs	r2, #0
 7492 053c 1A70     		strb	r2, [r3]
 7493              	.L311:
2079:main.c        ****         {
 7494              		.loc 1 2079 0
 7495 053e 7B6B     		ldr	r3, [r7, #52]
 7496 0540 0533     		adds	r3, r3, #5
 7497 0542 7B63     		str	r3, [r7, #52]
 7498              	.L303:
2079:main.c        ****         {
 7499              		.loc 1 2079 0 is_stmt 0 discriminator 1
 7500 0544 474B     		ldr	r3, .L346+44
 7501 0546 1B68     		ldr	r3, [r3]
 7502 0548 7A6B     		ldr	r2, [r7, #52]
 7503 054a 9A42     		cmp	r2, r3
 7504 054c FFF4E0AD 		bcc	.L324
 7505 0550 63E1     		b	.L325
 7506              	.L296:
 7507              	.LBE38:
2189:main.c        ****                     }
2190:main.c        ****                 }
2191:main.c        ****             }
2192:main.c        ****             
2193:main.c        ****         }
2194:main.c        ****     }
2195:main.c        ****     #if 0
2196:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2197:main.c        ****     {
2198:main.c        ****         
2199:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 173


2200:main.c        ****         currentFloat = 0;
2201:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2202:main.c        ****         union breakFloat theVal;
2203:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2204:main.c        ****         {
2205:main.c        ****             theVal.u32 = 0;
2206:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2207:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2208:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2209:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2210:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
2211:main.c        ****             testVal = theVal.f;
2212:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2213:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2214:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2215:main.c        ****         }
2216:main.c        ****         
2217:main.c        ****         tuningArray[currentFloat++] = 0xef;
2218:main.c        ****         tuningArray[currentFloat++] = 0xef;
2219:main.c        ****                         
2220:main.c        ****         
2221:main.c        ****         messageArraySize = currentFloat;
2222:main.c        ****                     
2223:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
2224:main.c        ****         {
2225:main.c        ****             //error state
2226:main.c        ****             SPI_errors++;
2227:main.c        ****             sysexMessageInProgress = 0;
2228:main.c        ****             sysexPointer = 0;
2229:main.c        ****             sendingMessage = 0;
2230:main.c        ****             parseThatMF = 0;
2231:main.c        ****         } else 
2232:main.c        ****         {
2233:main.c        ****             sysexMessageInProgress = 0;
2234:main.c        ****             sendingMessage = 2;
2235:main.c        ****         }
2236:main.c        ****     }
2237:main.c        ****     #endif
2238:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 7508              		.loc 1 2238 0 is_stmt 1
 7509 0552 464B     		ldr	r3, .L346+52
 7510 0554 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7511 0556 022B     		cmp	r3, #2
 7512 0558 40F05F81 		bne	.L325
 7513              	.LBB43:
2239:main.c        ****     {
2240:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7514              		.loc 1 2240 0
 7515 055c 3B4B     		ldr	r3, .L346+20
 7516 055e 0122     		movs	r2, #1
 7517 0560 1A70     		strb	r2, [r3]
2241:main.c        ****         currentFloat = 0;
 7518              		.loc 1 2241 0
 7519 0562 374B     		ldr	r3, .L346+8
 7520 0564 0022     		movs	r2, #0
 7521 0566 1A60     		str	r2, [r3]
2242:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 174


 7522              		.loc 1 2242 0
 7523 0568 404B     		ldr	r3, .L346+52
 7524 056a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7525 056c 404B     		ldr	r3, .L346+56
 7526 056e 1A70     		strb	r2, [r3]
2243:main.c        ****         currentCopedent = copedentNumberToWrite;
 7527              		.loc 1 2243 0
 7528 0570 3F4B     		ldr	r3, .L346+56
 7529 0572 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7530 0574 3F4B     		ldr	r3, .L346+60
 7531 0576 1A70     		strb	r2, [r3]
2244:main.c        ****         necks[currentNeck] = currentCopedent;
 7532              		.loc 1 2244 0
 7533 0578 3F4B     		ldr	r3, .L346+64
 7534 057a 1B68     		ldr	r3, [r3]
 7535 057c 3D4A     		ldr	r2, .L346+60
 7536 057e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 7537 0580 3E4A     		ldr	r2, .L346+68
 7538 0582 D154     		strb	r1, [r2, r3]
2245:main.c        **** 
2246:main.c        ****               
2247:main.c        ****         
2248:main.c        ****         union breakFloat theVal;
2249:main.c        ****         uint32_t i = 2;
 7539              		.loc 1 2249 0
 7540 0584 0223     		movs	r3, #2
 7541 0586 BB62     		str	r3, [r7, #40]
2250:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 7542              		.loc 1 2250 0
 7543 0588 1023     		movs	r3, #16
 7544 058a FB75     		strb	r3, [r7, #23]
2251:main.c        ****         for (; i < stoppingPoint; i++)
 7545              		.loc 1 2251 0
 7546 058c 40E0     		b	.L326
 7547              	.L327:
 7548              	.LBB44:
2252:main.c        ****         {
2253:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2254:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 7549              		.loc 1 2254 0 discriminator 2
 7550 058e 374A     		ldr	r2, .L346+52
 7551 0590 BB6A     		ldr	r3, [r7, #40]
 7552 0592 1344     		add	r3, r3, r2
 7553 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7554 0596 03F07F03 		and	r3, r3, #127
 7555 059a BB75     		strb	r3, [r7, #22]
2255:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 7556              		.loc 1 2255 0 discriminator 2
 7557 059c 344B     		ldr	r3, .L346+56
 7558 059e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7559 05a0 1846     		mov	r0, r3
 7560 05a2 BB6A     		ldr	r3, [r7, #40]
 7561 05a4 9A1E     		subs	r2, r3, #2
 7562 05a6 3649     		ldr	r1, .L346+72
 7563 05a8 0346     		mov	r3, r0
 7564 05aa DB00     		lsls	r3, r3, #3
 7565 05ac 1B1A     		subs	r3, r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 175


 7566 05ae 5B00     		lsls	r3, r3, #1
 7567 05b0 0B44     		add	r3, r3, r1
 7568 05b2 1344     		add	r3, r3, r2
 7569 05b4 BA7D     		ldrb	r2, [r7, #22]
 7570 05b6 1A70     		strb	r2, [r3]
2256:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 7571              		.loc 1 2256 0 discriminator 2
 7572 05b8 2D4B     		ldr	r3, .L346+56
 7573 05ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7574 05bc 9BB2     		uxth	r3, r3
 7575 05be 1A46     		mov	r2, r3	@ movhi
 7576 05c0 1201     		lsls	r2, r2, #4
 7577 05c2 1A44     		add	r2, r2, r3
 7578 05c4 9200     		lsls	r2, r2, #2
 7579 05c6 1A44     		add	r2, r2, r3
 7580 05c8 5200     		lsls	r2, r2, #1
 7581 05ca 1344     		add	r3, r3, r2
 7582 05cc 5B00     		lsls	r3, r3, #1
 7583 05ce 9BB2     		uxth	r3, r3
 7584 05d0 0233     		adds	r3, r3, #2
 7585 05d2 9AB2     		uxth	r2, r3
 7586 05d4 2B4B     		ldr	r3, .L346+76
 7587 05d6 1A80     		strh	r2, [r3]	@ movhi
2257:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 7588              		.loc 1 2257 0 discriminator 2
 7589 05d8 254B     		ldr	r3, .L346+56
 7590 05da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7591 05dc 9BB2     		uxth	r3, r3
 7592 05de 1A46     		mov	r2, r3	@ movhi
 7593 05e0 1201     		lsls	r2, r2, #4
 7594 05e2 1A44     		add	r2, r2, r3
 7595 05e4 9200     		lsls	r2, r2, #2
 7596 05e6 1A44     		add	r2, r2, r3
 7597 05e8 5200     		lsls	r2, r2, #1
 7598 05ea 1344     		add	r3, r3, r2
 7599 05ec 5B00     		lsls	r3, r3, #1
 7600 05ee 9AB2     		uxth	r2, r3
 7601 05f0 BB6A     		ldr	r3, [r7, #40]
 7602 05f2 9BB2     		uxth	r3, r3
 7603 05f4 1344     		add	r3, r3, r2
 7604 05f6 9AB2     		uxth	r2, r3
 7605 05f8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7606 05fa 1146     		mov	r1, r2
 7607 05fc 1846     		mov	r0, r3
 7608 05fe FFF7FEFF 		bl	EEPROM_WriteByte
 7609 0602 0346     		mov	r3, r0
 7610 0604 DAB2     		uxtb	r2, r3
 7611 0606 204B     		ldr	r3, .L346+80
 7612 0608 1A70     		strb	r2, [r3]
 7613              	.LBE44:
2251:main.c        ****         {
 7614              		.loc 1 2251 0 discriminator 2
 7615 060a BB6A     		ldr	r3, [r7, #40]
 7616 060c 0133     		adds	r3, r3, #1
 7617 060e BB62     		str	r3, [r7, #40]
 7618              	.L326:
2251:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 176


 7619              		.loc 1 2251 0 is_stmt 0 discriminator 1
 7620 0610 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7621 0612 BB6A     		ldr	r3, [r7, #40]
 7622 0614 9A42     		cmp	r2, r3
 7623 0616 BAD8     		bhi	.L327
2258:main.c        ****         }
2259:main.c        ****         
2260:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 7624              		.loc 1 2260 0 is_stmt 1
 7625 0618 1023     		movs	r3, #16
 7626 061a BB62     		str	r3, [r7, #40]
2261:main.c        **** 
2262:main.c        ****  
2263:main.c        ****         while(i < sysexPointer)
 7627              		.loc 1 2263 0
 7628 061c D7E0     		b	.L328
 7629              	.L333:
 7630              	.LBB45:
2264:main.c        ****         {
2265:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 7631              		.loc 1 2265 0
 7632 061e 0023     		movs	r3, #0
 7633 0620 7B62     		str	r3, [r7, #36]
 7634 0622 D0E0     		b	.L329
 7635              	.L332:
 7636              	.LBB46:
2266:main.c        ****             {
2267:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 7637              		.loc 1 2267 0
 7638 0624 7B6A     		ldr	r3, [r7, #36]
 7639 0626 9BB2     		uxth	r3, r3
 7640 0628 1A46     		mov	r2, r3	@ movhi
 7641 062a 5200     		lsls	r2, r2, #1
 7642 062c 1344     		add	r3, r3, r2
 7643 062e DB00     		lsls	r3, r3, #3
 7644 0630 BB82     		strh	r3, [r7, #20]	@ movhi
 7645              	.LBB47:
2268:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 7646              		.loc 1 2268 0
 7647 0632 0023     		movs	r3, #0
 7648 0634 3B62     		str	r3, [r7, #32]
 7649 0636 BFE0     		b	.L330
 7650              	.L347:
 7651              		.align	2
 7652              	.L346:
 7653 0638 000020C0 		.word	-1071644672
 7654 063c 000060C0 		.word	-1067450368
 7655 0640 00000000 		.word	currentFloat
 7656 0644 00000000 		.word	presetArray
 7657 0648 00000000 		.word	presetArraySection
 7658 064c 00000000 		.word	sysexMessageInProgress
 7659 0650 00000000 		.word	sendingMessage
 7660 0654 00000000 		.word	presetNumberToWrite
 7661 0658 00000000 		.word	patchNum
 7662 065c 00000000 		.word	messageArraySize
 7663 0660 00000000 		.word	SPI_errors
 7664 0664 00000000 		.word	sysexPointer
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 177


 7665 0668 00000000 		.word	parseThatMF
 7666 066c 00000000 		.word	sysexBuffer
 7667 0670 00000000 		.word	copedentNumberToWrite
 7668 0674 00000000 		.word	currentCopedent
 7669 0678 00000000 		.word	currentNeck
 7670 067c 00000000 		.word	necks
 7671 0680 00000000 		.word	copedentNamesArray
 7672 0684 00000000 		.word	checkBase
 7673 0688 00000000 		.word	checkStatus
 7674              	.L331:
 7675              	.LBB48:
2269:main.c        ****                 {
2270:main.c        ****                     
2271:main.c        ****                     theVal.u32 = 0;
 7676              		.loc 1 2271 0 discriminator 3
 7677 068c 0023     		movs	r3, #0
 7678 068e 7B60     		str	r3, [r7, #4]
2272:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7679              		.loc 1 2272 0 discriminator 3
 7680 0690 7B68     		ldr	r3, [r7, #4]
 7681 0692 6849     		ldr	r1, .L348
 7682 0694 BA6A     		ldr	r2, [r7, #40]
 7683 0696 0A44     		add	r2, r2, r1
 7684 0698 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7685 069a 1207     		lsls	r2, r2, #28
 7686 069c 1343     		orrs	r3, r3, r2
 7687 069e 7B60     		str	r3, [r7, #4]
2273:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 7688              		.loc 1 2273 0 discriminator 3
 7689 06a0 7B68     		ldr	r3, [r7, #4]
 7690 06a2 BA6A     		ldr	r2, [r7, #40]
 7691 06a4 0132     		adds	r2, r2, #1
 7692 06a6 6349     		ldr	r1, .L348
 7693 06a8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7694 06aa 5205     		lsls	r2, r2, #21
 7695 06ac 1343     		orrs	r3, r3, r2
 7696 06ae 7B60     		str	r3, [r7, #4]
2274:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 7697              		.loc 1 2274 0 discriminator 3
 7698 06b0 7B68     		ldr	r3, [r7, #4]
 7699 06b2 BA6A     		ldr	r2, [r7, #40]
 7700 06b4 0232     		adds	r2, r2, #2
 7701 06b6 5F49     		ldr	r1, .L348
 7702 06b8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7703 06ba 9203     		lsls	r2, r2, #14
 7704 06bc 1343     		orrs	r3, r3, r2
 7705 06be 7B60     		str	r3, [r7, #4]
2275:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 7706              		.loc 1 2275 0 discriminator 3
 7707 06c0 7B68     		ldr	r3, [r7, #4]
 7708 06c2 BA6A     		ldr	r2, [r7, #40]
 7709 06c4 0332     		adds	r2, r2, #3
 7710 06c6 5B49     		ldr	r1, .L348
 7711 06c8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7712 06ca D201     		lsls	r2, r2, #7
 7713 06cc 1343     		orrs	r3, r3, r2
 7714 06ce 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 178


2276:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 7715              		.loc 1 2276 0 discriminator 3
 7716 06d0 7A68     		ldr	r2, [r7, #4]
 7717 06d2 BB6A     		ldr	r3, [r7, #40]
 7718 06d4 0433     		adds	r3, r3, #4
 7719 06d6 5749     		ldr	r1, .L348
 7720 06d8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7721 06da 03F07F03 		and	r3, r3, #127
 7722 06de 1343     		orrs	r3, r3, r2
 7723 06e0 7B60     		str	r3, [r7, #4]
2277:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 7724              		.loc 1 2277 0 discriminator 3
 7725 06e2 554B     		ldr	r3, .L348+4
 7726 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7727 06e6 1C46     		mov	r4, r3
 7728 06e8 7968     		ldr	r1, [r7, #4]	@ float
 7729 06ea 5448     		ldr	r0, .L348+8
 7730 06ec 7B6A     		ldr	r3, [r7, #36]
 7731 06ee 1A46     		mov	r2, r3
 7732 06f0 5200     		lsls	r2, r2, #1
 7733 06f2 1A44     		add	r2, r2, r3
 7734 06f4 9300     		lsls	r3, r2, #2
 7735 06f6 1A46     		mov	r2, r3
 7736 06f8 2346     		mov	r3, r4
 7737 06fa 5B01     		lsls	r3, r3, #5
 7738 06fc 2344     		add	r3, r3, r4
 7739 06fe 9B00     		lsls	r3, r3, #2
 7740 0700 1A44     		add	r2, r2, r3
 7741 0702 3B6A     		ldr	r3, [r7, #32]
 7742 0704 1344     		add	r3, r3, r2
 7743 0706 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2278:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 7744              		.loc 1 2278 0 discriminator 3
 7745 070a 7B68     		ldr	r3, [r7, #4]	@ float
 7746 070c 4FF08741 		mov	r1, #1132462080
 7747 0710 1846     		mov	r0, r3
 7748 0712 FFF7FEFF 		bl	__aeabi_fmul
 7749 0716 0346     		mov	r3, r0
 7750 0718 4FF08E41 		mov	r1, #1191182336
 7751 071c 1846     		mov	r0, r3
 7752 071e FFF7FEFF 		bl	__aeabi_fadd
 7753 0722 0346     		mov	r3, r0
 7754 0724 1846     		mov	r0, r3
 7755 0726 FFF7FEFF 		bl	__aeabi_f2uiz
 7756 072a 0346     		mov	r3, r0
 7757 072c 7B82     		strh	r3, [r7, #18]	@ movhi
2279:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 7758              		.loc 1 2279 0 discriminator 3
 7759 072e 7B8A     		ldrh	r3, [r7, #18]
 7760 0730 1B0A     		lsrs	r3, r3, #8
 7761 0732 9BB2     		uxth	r3, r3
 7762 0734 7B74     		strb	r3, [r7, #17]
2280:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 7763              		.loc 1 2280 0 discriminator 3
 7764 0736 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 7765 0738 3B74     		strb	r3, [r7, #16]
2281:main.c        ****                     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 179


2282:main.c        ****                     
2283:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 7766              		.loc 1 2283 0 discriminator 3
 7767 073a 3B6A     		ldr	r3, [r7, #32]
 7768 073c 9BB2     		uxth	r3, r3
 7769 073e 5B00     		lsls	r3, r3, #1
 7770 0740 FB81     		strh	r3, [r7, #14]	@ movhi
2284:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 7771              		.loc 1 2284 0 discriminator 3
 7772 0742 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7773 0744 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 7774 0746 1344     		add	r3, r3, r2
 7775 0748 9AB2     		uxth	r2, r3
 7776 074a 3B4B     		ldr	r3, .L348+4
 7777 074c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7778 074e 9BB2     		uxth	r3, r3
 7779 0750 1946     		mov	r1, r3	@ movhi
 7780 0752 0901     		lsls	r1, r1, #4
 7781 0754 1944     		add	r1, r1, r3
 7782 0756 8900     		lsls	r1, r1, #2
 7783 0758 1944     		add	r1, r1, r3
 7784 075a 4900     		lsls	r1, r1, #1
 7785 075c 0B44     		add	r3, r3, r1
 7786 075e 5B00     		lsls	r3, r3, #1
 7787 0760 9BB2     		uxth	r3, r3
 7788 0762 1344     		add	r3, r3, r2
 7789 0764 9BB2     		uxth	r3, r3
 7790 0766 1033     		adds	r3, r3, #16
 7791 0768 9AB2     		uxth	r2, r3
 7792 076a 354B     		ldr	r3, .L348+12
 7793 076c 1A80     		strh	r2, [r3]	@ movhi
2285:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 7794              		.loc 1 2285 0 discriminator 3
 7795 076e 344B     		ldr	r3, .L348+12
 7796 0770 1B88     		ldrh	r3, [r3]	@ movhi
 7797 0772 9AB2     		uxth	r2, r3
 7798 0774 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 7799 0776 1146     		mov	r1, r2
 7800 0778 1846     		mov	r0, r3
 7801 077a FFF7FEFF 		bl	EEPROM_WriteByte
 7802 077e 0346     		mov	r3, r0
 7803 0780 DAB2     		uxtb	r2, r3
 7804 0782 304B     		ldr	r3, .L348+16
 7805 0784 1A70     		strb	r2, [r3]
2286:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 7806              		.loc 1 2286 0 discriminator 3
 7807 0786 2E4B     		ldr	r3, .L348+12
 7808 0788 1B88     		ldrh	r3, [r3]	@ movhi
 7809 078a 9BB2     		uxth	r3, r3
 7810 078c 0133     		adds	r3, r3, #1
 7811 078e 9AB2     		uxth	r2, r3
 7812 0790 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 7813 0792 1146     		mov	r1, r2
 7814 0794 1846     		mov	r0, r3
 7815 0796 FFF7FEFF 		bl	EEPROM_WriteByte
 7816 079a 0346     		mov	r3, r0
 7817 079c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 180


 7818 079e 294B     		ldr	r3, .L348+16
 7819 07a0 1A70     		strb	r2, [r3]
2287:main.c        ****                     currentFloat++;
 7820              		.loc 1 2287 0 discriminator 3
 7821 07a2 294B     		ldr	r3, .L348+20
 7822 07a4 1B68     		ldr	r3, [r3]
 7823 07a6 0133     		adds	r3, r3, #1
 7824 07a8 274A     		ldr	r2, .L348+20
 7825 07aa 1360     		str	r3, [r2]
2288:main.c        ****                     i = i+5;
 7826              		.loc 1 2288 0 discriminator 3
 7827 07ac BB6A     		ldr	r3, [r7, #40]
 7828 07ae 0533     		adds	r3, r3, #5
 7829 07b0 BB62     		str	r3, [r7, #40]
 7830              	.LBE48:
2268:main.c        ****                 {
 7831              		.loc 1 2268 0 discriminator 3
 7832 07b2 3B6A     		ldr	r3, [r7, #32]
 7833 07b4 0133     		adds	r3, r3, #1
 7834 07b6 3B62     		str	r3, [r7, #32]
 7835              	.L330:
2268:main.c        ****                 {
 7836              		.loc 1 2268 0 is_stmt 0 discriminator 1
 7837 07b8 3B6A     		ldr	r3, [r7, #32]
 7838 07ba 0B2B     		cmp	r3, #11
 7839 07bc 7FF666AF 		bls	.L331
 7840              	.LBE47:
 7841              	.LBE46:
2265:main.c        ****             {
 7842              		.loc 1 2265 0 is_stmt 1 discriminator 2
 7843 07c0 7B6A     		ldr	r3, [r7, #36]
 7844 07c2 0133     		adds	r3, r3, #1
 7845 07c4 7B62     		str	r3, [r7, #36]
 7846              	.L329:
2265:main.c        ****             {
 7847              		.loc 1 2265 0 is_stmt 0 discriminator 1
 7848 07c6 7B6A     		ldr	r3, [r7, #36]
 7849 07c8 0A2B     		cmp	r3, #10
 7850 07ca 7FF62BAF 		bls	.L332
 7851              	.L328:
 7852              	.LBE45:
2263:main.c        ****         {
 7853              		.loc 1 2263 0 is_stmt 1
 7854 07ce 1F4B     		ldr	r3, .L348+24
 7855 07d0 1B68     		ldr	r3, [r3]
 7856 07d2 BA6A     		ldr	r2, [r7, #40]
 7857 07d4 9A42     		cmp	r2, r3
 7858 07d6 FFF422AF 		bcc	.L333
2289:main.c        ****                 }
2290:main.c        ****                 
2291:main.c        ****             }
2292:main.c        ****         }
2293:main.c        ****                         
2294:main.c        ****         
2295:main.c        ****         messageArraySize = currentFloat;
 7859              		.loc 1 2295 0
 7860 07da 1B4B     		ldr	r3, .L348+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 181


 7861 07dc 1B68     		ldr	r3, [r3]
 7862 07de 9AB2     		uxth	r2, r3
 7863 07e0 1B4B     		ldr	r3, .L348+28
 7864 07e2 1A80     		strh	r2, [r3]	@ movhi
2296:main.c        ****                     
2297:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 7865              		.loc 1 2297 0
 7866 07e4 1A4B     		ldr	r3, .L348+28
 7867 07e6 1B88     		ldrh	r3, [r3]
 7868 07e8 842B     		cmp	r3, #132
 7869 07ea 11D0     		beq	.L334
2298:main.c        ****         {
2299:main.c        ****             //error state
2300:main.c        ****             SPI_errors++;
 7870              		.loc 1 2300 0
 7871 07ec 194B     		ldr	r3, .L348+32
 7872 07ee 1B68     		ldr	r3, [r3]
 7873 07f0 0133     		adds	r3, r3, #1
 7874 07f2 184A     		ldr	r2, .L348+32
 7875 07f4 1360     		str	r3, [r2]
2301:main.c        ****             sysexMessageInProgress = 0;
 7876              		.loc 1 2301 0
 7877 07f6 184B     		ldr	r3, .L348+36
 7878 07f8 0022     		movs	r2, #0
 7879 07fa 1A70     		strb	r2, [r3]
2302:main.c        ****             sysexPointer = 0;
 7880              		.loc 1 2302 0
 7881 07fc 134B     		ldr	r3, .L348+24
 7882 07fe 0022     		movs	r2, #0
 7883 0800 1A60     		str	r2, [r3]
2303:main.c        ****             sendingMessage = 0;
 7884              		.loc 1 2303 0
 7885 0802 164B     		ldr	r3, .L348+40
 7886 0804 0022     		movs	r2, #0
 7887 0806 1A70     		strb	r2, [r3]
2304:main.c        ****             parseThatMF = 0;
 7888              		.loc 1 2304 0
 7889 0808 154B     		ldr	r3, .L348+44
 7890 080a 0022     		movs	r2, #0
 7891 080c 1A70     		strb	r2, [r3]
 7892 080e 04E0     		b	.L325
 7893              	.L334:
2305:main.c        ****         } 
2306:main.c        ****         else 
2307:main.c        ****         {
2308:main.c        ****             sysexMessageInProgress = 0;
 7894              		.loc 1 2308 0
 7895 0810 114B     		ldr	r3, .L348+36
 7896 0812 0022     		movs	r2, #0
 7897 0814 1A70     		strb	r2, [r3]
2309:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2310:main.c        ****             
2311:main.c        ****             displayCurrentPresetNameAndCopedent();
 7898              		.loc 1 2311 0
 7899 0816 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 7900              	.L325:
 7901              	.LBE43:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 182


2312:main.c        ****         }
2313:main.c        ****     }
2314:main.c        ****     
2315:main.c        **** 
2316:main.c        ****     parsingSysex = 0;
 7902              		.loc 1 2316 0
 7903 081a 124B     		ldr	r3, .L348+48
 7904 081c 0022     		movs	r2, #0
 7905 081e 1A70     		strb	r2, [r3]
2317:main.c        ****     sysexPointer = 0;
 7906              		.loc 1 2317 0
 7907 0820 0A4B     		ldr	r3, .L348+24
 7908 0822 0022     		movs	r2, #0
 7909 0824 1A60     		str	r2, [r3]
2318:main.c        ****     parseThatMF = 0;
 7910              		.loc 1 2318 0
 7911 0826 0E4B     		ldr	r3, .L348+44
 7912 0828 0022     		movs	r2, #0
 7913 082a 1A70     		strb	r2, [r3]
2319:main.c        **** }
 7914              		.loc 1 2319 0
 7915 082c 00BF     		nop
 7916 082e 3C37     		adds	r7, r7, #60
 7917              		.cfi_def_cfa_offset 12
 7918 0830 BD46     		mov	sp, r7
 7919              		.cfi_def_cfa_register 13
 7920              		@ sp needed
 7921 0832 90BD     		pop	{r4, r7, pc}
 7922              	.L349:
 7923              		.align	2
 7924              	.L348:
 7925 0834 00000000 		.word	sysexBuffer
 7926 0838 00000000 		.word	copedentNumberToWrite
 7927 083c 00000000 		.word	copedent
 7928 0840 00000000 		.word	checkBase
 7929 0844 00000000 		.word	checkStatus
 7930 0848 00000000 		.word	currentFloat
 7931 084c 00000000 		.word	sysexPointer
 7932 0850 00000000 		.word	messageArraySize
 7933 0854 00000000 		.word	SPI_errors
 7934 0858 00000000 		.word	sysexMessageInProgress
 7935 085c 00000000 		.word	sendingMessage
 7936 0860 00000000 		.word	parseThatMF
 7937 0864 00000000 		.word	parsingSysex
 7938              		.cfi_endproc
 7939              	.LFE93:
 7940              		.size	parseSysex, .-parseSysex
 7941              		.comm	tempMIDI,4,4
 7942              		.global	firstSysex
 7943              		.bss
 7944              		.type	firstSysex, %object
 7945              		.size	firstSysex, 1
 7946              	firstSysex:
 7947 0100 00       		.space	1
 7948              		.global	sysexPointerMask
 7949              		.section	.rodata
 7950              		.align	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 183


 7951              		.type	sysexPointerMask, %object
 7952              		.size	sysexPointerMask, 2
 7953              	sysexPointerMask:
 7954 0432 FF07     		.short	2047
 7955              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 7956              		.align	2
 7957              		.global	USB_callbackLocalMidiEvent
 7958              		.thumb
 7959              		.thumb_func
 7960              		.type	USB_callbackLocalMidiEvent, %function
 7961              	USB_callbackLocalMidiEvent:
 7962              	.LFB94:
2320:main.c        **** 
2321:main.c        **** volatile uint8_t tempMIDI[4];
2322:main.c        **** volatile uint8_t firstSysex = 0;
2323:main.c        **** const uint16_t sysexPointerMask = 2047;
2324:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2325:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2326:main.c        **** {   
 7963              		.loc 1 2326 0
 7964              		.cfi_startproc
 7965              		@ args = 0, pretend = 0, frame = 16
 7966              		@ frame_needed = 1, uses_anonymous_args = 0
 7967 0000 80B5     		push	{r7, lr}
 7968              		.cfi_def_cfa_offset 8
 7969              		.cfi_offset 7, -8
 7970              		.cfi_offset 14, -4
 7971 0002 84B0     		sub	sp, sp, #16
 7972              		.cfi_def_cfa_offset 24
 7973 0004 00AF     		add	r7, sp, #0
 7974              		.cfi_def_cfa_register 7
 7975 0006 0346     		mov	r3, r0
 7976 0008 3960     		str	r1, [r7]
 7977 000a FB71     		strb	r3, [r7, #7]
2327:main.c        ****     tempMIDI[0] = midiMsg[0];
 7978              		.loc 1 2327 0
 7979 000c 3B68     		ldr	r3, [r7]
 7980 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7981 0010 434B     		ldr	r3, .L360
 7982 0012 1A70     		strb	r2, [r3]
2328:main.c        ****     tempMIDI[1] = midiMsg[1];
 7983              		.loc 1 2328 0
 7984 0014 3B68     		ldr	r3, [r7]
 7985 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7986 0018 414B     		ldr	r3, .L360
 7987 001a 5A70     		strb	r2, [r3, #1]
2329:main.c        ****      tempMIDI[2] = midiMsg[2];
 7988              		.loc 1 2329 0
 7989 001c 3B68     		ldr	r3, [r7]
 7990 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 7991 0020 3F4B     		ldr	r3, .L360
 7992 0022 9A70     		strb	r2, [r3, #2]
2330:main.c        ****      tempMIDI[3] = midiMsg[3];
 7993              		.loc 1 2330 0
 7994 0024 3B68     		ldr	r3, [r7]
 7995 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 7996 0028 3D4B     		ldr	r3, .L360
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 184


 7997 002a DA70     		strb	r2, [r3, #3]
2331:main.c        ****     //check that we got here
2332:main.c        ****     
2333:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7998              		.loc 1 2333 0
 7999 002c 3D4B     		ldr	r3, .L360+4
 8000 002e 1B78     		ldrb	r3, [r3]
 8001 0030 DBB2     		uxtb	r3, r3
 8002 0032 002B     		cmp	r3, #0
 8003 0034 71D0     		beq	.L350
 8004              		.loc 1 2333 0 is_stmt 0 discriminator 1
 8005 0036 FFF7FEFF 		bl	USB_VBusPresent
 8006 003a 0346     		mov	r3, r0
 8007 003c 002B     		cmp	r3, #0
 8008 003e 6CD0     		beq	.L350
2334:main.c        ****     {
2335:main.c        ****         if (receivingSysex)
 8009              		.loc 1 2335 0 is_stmt 1
 8010 0040 394B     		ldr	r3, .L360+8
 8011 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8012 0044 002B     		cmp	r3, #0
 8013 0046 29D0     		beq	.L352
 8014              	.LBB49:
2336:main.c        ****         {
2337:main.c        ****             for (int i = 0; i < 3; i++)
 8015              		.loc 1 2337 0
 8016 0048 0023     		movs	r3, #0
 8017 004a FB60     		str	r3, [r7, #12]
 8018 004c 22E0     		b	.L353
 8019              	.L356:
2338:main.c        ****             {
2339:main.c        ****                 if (midiMsg[i] < 128)
 8020              		.loc 1 2339 0
 8021 004e FB68     		ldr	r3, [r7, #12]
 8022 0050 3A68     		ldr	r2, [r7]
 8023 0052 1344     		add	r3, r3, r2
 8024 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8025 0056 5BB2     		sxtb	r3, r3
 8026 0058 002B     		cmp	r3, #0
 8027 005a 0EDB     		blt	.L354
2340:main.c        ****                 {
2341:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 8028              		.loc 1 2341 0
 8029 005c 334B     		ldr	r3, .L360+12
 8030 005e 1B68     		ldr	r3, [r3]
 8031 0060 5A1C     		adds	r2, r3, #1
 8032 0062 3249     		ldr	r1, .L360+12
 8033 0064 0A60     		str	r2, [r1]
 8034 0066 40F2FF72 		movw	r2, #2047
 8035 006a 1340     		ands	r3, r3, r2
 8036 006c FA68     		ldr	r2, [r7, #12]
 8037 006e 3968     		ldr	r1, [r7]
 8038 0070 0A44     		add	r2, r2, r1
 8039 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 8040 0074 2E4A     		ldr	r2, .L360+16
 8041 0076 D154     		strb	r1, [r2, r3]
 8042 0078 09E0     		b	.L355
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 185


 8043              	.L354:
2342:main.c        ****                 }
2343:main.c        ****                 else
2344:main.c        ****                 {
2345:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 8044              		.loc 1 2345 0
 8045 007a FB68     		ldr	r3, [r7, #12]
 8046 007c 3A68     		ldr	r2, [r7]
 8047 007e 1344     		add	r3, r3, r2
 8048 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8049 0082 F72B     		cmp	r3, #247
 8050 0084 03D1     		bne	.L355
2346:main.c        ****                     {
2347:main.c        ****                         receivingSysex = 0;
 8051              		.loc 1 2347 0
 8052 0086 284B     		ldr	r3, .L360+8
 8053 0088 0022     		movs	r2, #0
 8054 008a 1A70     		strb	r2, [r3]
2348:main.c        ****                         //parseSysex();
2349:main.c        ****                         return;
 8055              		.loc 1 2349 0
 8056 008c 45E0     		b	.L350
 8057              	.L355:
2337:main.c        ****             {
 8058              		.loc 1 2337 0 discriminator 2
 8059 008e FB68     		ldr	r3, [r7, #12]
 8060 0090 0133     		adds	r3, r3, #1
 8061 0092 FB60     		str	r3, [r7, #12]
 8062              	.L353:
2337:main.c        ****             {
 8063              		.loc 1 2337 0 is_stmt 0 discriminator 1
 8064 0094 FB68     		ldr	r3, [r7, #12]
 8065 0096 022B     		cmp	r3, #2
 8066 0098 D9DD     		ble	.L356
 8067 009a 3EE0     		b	.L350
 8068              	.L352:
 8069              	.LBE49:
2350:main.c        ****                      }
2351:main.c        ****                 }
2352:main.c        ****             }
2353:main.c        ****         }
2354:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 8070              		.loc 1 2354 0 is_stmt 1
 8071 009c 3B68     		ldr	r3, [r7]
 8072 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8073 00a0 F02B     		cmp	r3, #240
 8074 00a2 3AD1     		bne	.L350
2355:main.c        ****         {
2356:main.c        ****             if (!parsingSysex)
 8075              		.loc 1 2356 0
 8076 00a4 234B     		ldr	r3, .L360+20
 8077 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8078 00a8 002B     		cmp	r3, #0
 8079 00aa 36D1     		bne	.L350
2357:main.c        ****             {
2358:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 8080              		.loc 1 2358 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 186


 8081 00ac 3B68     		ldr	r3, [r7]
 8082 00ae 0133     		adds	r3, r3, #1
 8083 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8084 00b2 7E2B     		cmp	r3, #126
 8085 00b4 03D1     		bne	.L358
2359:main.c        ****                 {
2360:main.c        ****                     parseThatMF = 1;
 8086              		.loc 1 2360 0
 8087 00b6 204B     		ldr	r3, .L360+24
 8088 00b8 0122     		movs	r2, #1
 8089 00ba 1A70     		strb	r2, [r3]
 8090 00bc 2DE0     		b	.L350
 8091              	.L358:
2361:main.c        **** 
2362:main.c        ****                     //sysexPointer = 0;
2363:main.c        ****                 }
2364:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2)
 8092              		.loc 1 2364 0
 8093 00be 3B68     		ldr	r3, [r7]
 8094 00c0 0133     		adds	r3, r3, #1
 8095 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8096 00c4 002B     		cmp	r3, #0
 8097 00c6 09D0     		beq	.L359
 8098              		.loc 1 2364 0 is_stmt 0 discriminator 1
 8099 00c8 3B68     		ldr	r3, [r7]
 8100 00ca 0133     		adds	r3, r3, #1
 8101 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8102 00ce 012B     		cmp	r3, #1
 8103 00d0 04D0     		beq	.L359
 8104              		.loc 1 2364 0 discriminator 2
 8105 00d2 3B68     		ldr	r3, [r7]
 8106 00d4 0133     		adds	r3, r3, #1
 8107 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8108 00d8 022B     		cmp	r3, #2
 8109 00da 1ED1     		bne	.L350
 8110              	.L359:
2365:main.c        ****                 {
2366:main.c        ****                     receivingSysex = 1;
 8111              		.loc 1 2366 0 is_stmt 1
 8112 00dc 124B     		ldr	r3, .L360+8
 8113 00de 0122     		movs	r2, #1
 8114 00e0 1A70     		strb	r2, [r3]
2367:main.c        ****                     
2368:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2369:main.c        ****                     if (sysexPointer == 0)
 8115              		.loc 1 2369 0
 8116 00e2 124B     		ldr	r3, .L360+12
 8117 00e4 1B68     		ldr	r3, [r3]
 8118 00e6 002B     		cmp	r3, #0
 8119 00e8 17D1     		bne	.L350
2370:main.c        ****                     {
2371:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 8120              		.loc 1 2371 0
 8121 00ea 104B     		ldr	r3, .L360+12
 8122 00ec 1B68     		ldr	r3, [r3]
 8123 00ee 5A1C     		adds	r2, r3, #1
 8124 00f0 0E49     		ldr	r1, .L360+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 187


 8125 00f2 0A60     		str	r2, [r1]
 8126 00f4 40F2FF72 		movw	r2, #2047
 8127 00f8 1340     		ands	r3, r3, r2
 8128 00fa 3A68     		ldr	r2, [r7]
 8129 00fc 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 8130 00fe 0C4A     		ldr	r2, .L360+16
 8131 0100 D154     		strb	r1, [r2, r3]
2372:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 8132              		.loc 1 2372 0
 8133 0102 0A4B     		ldr	r3, .L360+12
 8134 0104 1B68     		ldr	r3, [r3]
 8135 0106 5A1C     		adds	r2, r3, #1
 8136 0108 0849     		ldr	r1, .L360+12
 8137 010a 0A60     		str	r2, [r1]
 8138 010c 40F2FF72 		movw	r2, #2047
 8139 0110 1340     		ands	r3, r3, r2
 8140 0112 3A68     		ldr	r2, [r7]
 8141 0114 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 8142 0116 064A     		ldr	r2, .L360+16
 8143 0118 D154     		strb	r1, [r2, r3]
 8144              	.L350:
2373:main.c        ****                     }
2374:main.c        ****                 }
2375:main.c        ****             }
2376:main.c        ****         }
2377:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2378:main.c        ****     }
2379:main.c        **** }    
 8145              		.loc 1 2379 0
 8146 011a 1037     		adds	r7, r7, #16
 8147              		.cfi_def_cfa_offset 8
 8148 011c BD46     		mov	sp, r7
 8149              		.cfi_def_cfa_register 13
 8150              		@ sp needed
 8151 011e 80BD     		pop	{r7, pc}
 8152              	.L361:
 8153              		.align	2
 8154              	.L360:
 8155 0120 00000000 		.word	tempMIDI
 8156 0124 00000000 		.word	USB_active
 8157 0128 00000000 		.word	receivingSysex
 8158 012c 00000000 		.word	sysexPointer
 8159 0130 00000000 		.word	sysexBuffer
 8160 0134 00000000 		.word	parsingSysex
 8161 0138 00000000 		.word	parseThatMF
 8162              		.cfi_endproc
 8163              	.LFE94:
 8164              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 8165              		.text
 8166              	.Letext0:
 8167              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8168              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8169              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 8170              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 8171              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8172              		.file 7 "oled.h"
 8173              		.file 8 "Generated_Source\\PSoC5/USB_midi.h"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 188


 8174              		.file 9 "Generated_Source\\PSoC5/Em_EEPROM.h"
 8175              		.file 10 "Generated_Source\\PSoC5/I2C_1.h"
 8176              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 8177              		.section	.debug_info,"",%progbits
 8178              	.Ldebug_info0:
 8179 0000 E31B0000 		.4byte	0x1be3
 8180 0004 0400     		.2byte	0x4
 8181 0006 00000000 		.4byte	.Ldebug_abbrev0
 8182 000a 04       		.byte	0x4
 8183 000b 01       		.uleb128 0x1
 8184 000c A3080000 		.4byte	.LASF299
 8185 0010 0C       		.byte	0xc
 8186 0011 160A0000 		.4byte	.LASF300
 8187 0015 CB060000 		.4byte	.LASF301
 8188 0019 00000000 		.4byte	.Ldebug_ranges0+0
 8189 001d 00000000 		.4byte	0
 8190 0021 00000000 		.4byte	.Ldebug_line0
 8191 0025 02       		.uleb128 0x2
 8192 0026 01       		.byte	0x1
 8193 0027 06       		.byte	0x6
 8194 0028 68030000 		.4byte	.LASF0
 8195 002c 03       		.uleb128 0x3
 8196 002d 12020000 		.4byte	.LASF2
 8197 0031 02       		.byte	0x2
 8198 0032 1D       		.byte	0x1d
 8199 0033 37000000 		.4byte	0x37
 8200 0037 02       		.uleb128 0x2
 8201 0038 01       		.byte	0x1
 8202 0039 08       		.byte	0x8
 8203 003a EF030000 		.4byte	.LASF1
 8204 003e 03       		.uleb128 0x3
 8205 003f E30C0000 		.4byte	.LASF3
 8206 0043 02       		.byte	0x2
 8207 0044 29       		.byte	0x29
 8208 0045 49000000 		.4byte	0x49
 8209 0049 02       		.uleb128 0x2
 8210 004a 02       		.byte	0x2
 8211 004b 05       		.byte	0x5
 8212 004c 890D0000 		.4byte	.LASF4
 8213 0050 03       		.uleb128 0x3
 8214 0051 1B050000 		.4byte	.LASF5
 8215 0055 02       		.byte	0x2
 8216 0056 2B       		.byte	0x2b
 8217 0057 5B000000 		.4byte	0x5b
 8218 005b 02       		.uleb128 0x2
 8219 005c 02       		.byte	0x2
 8220 005d 07       		.byte	0x7
 8221 005e 500F0000 		.4byte	.LASF6
 8222 0062 03       		.uleb128 0x3
 8223 0063 7B0F0000 		.4byte	.LASF7
 8224 0067 02       		.byte	0x2
 8225 0068 3F       		.byte	0x3f
 8226 0069 6D000000 		.4byte	0x6d
 8227 006d 02       		.uleb128 0x2
 8228 006e 04       		.byte	0x4
 8229 006f 05       		.byte	0x5
 8230 0070 65020000 		.4byte	.LASF8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 189


 8231 0074 03       		.uleb128 0x3
 8232 0075 9A090000 		.4byte	.LASF9
 8233 0079 02       		.byte	0x2
 8234 007a 41       		.byte	0x41
 8235 007b 7F000000 		.4byte	0x7f
 8236 007f 02       		.uleb128 0x2
 8237 0080 04       		.byte	0x4
 8238 0081 07       		.byte	0x7
 8239 0082 A8070000 		.4byte	.LASF10
 8240 0086 02       		.uleb128 0x2
 8241 0087 08       		.byte	0x8
 8242 0088 05       		.byte	0x5
 8243 0089 A5090000 		.4byte	.LASF11
 8244 008d 02       		.uleb128 0x2
 8245 008e 08       		.byte	0x8
 8246 008f 07       		.byte	0x7
 8247 0090 070C0000 		.4byte	.LASF12
 8248 0094 04       		.uleb128 0x4
 8249 0095 04       		.byte	0x4
 8250 0096 05       		.byte	0x5
 8251 0097 696E7400 		.ascii	"int\000"
 8252 009b 02       		.uleb128 0x2
 8253 009c 04       		.byte	0x4
 8254 009d 07       		.byte	0x7
 8255 009e AB0A0000 		.4byte	.LASF13
 8256 00a2 03       		.uleb128 0x3
 8257 00a3 74030000 		.4byte	.LASF14
 8258 00a7 03       		.byte	0x3
 8259 00a8 18       		.byte	0x18
 8260 00a9 2C000000 		.4byte	0x2c
 8261 00ad 03       		.uleb128 0x3
 8262 00ae D30D0000 		.4byte	.LASF15
 8263 00b2 03       		.byte	0x3
 8264 00b3 20       		.byte	0x20
 8265 00b4 3E000000 		.4byte	0x3e
 8266 00b8 03       		.uleb128 0x3
 8267 00b9 1E0C0000 		.4byte	.LASF16
 8268 00bd 03       		.byte	0x3
 8269 00be 24       		.byte	0x24
 8270 00bf 50000000 		.4byte	0x50
 8271 00c3 03       		.uleb128 0x3
 8272 00c4 99000000 		.4byte	.LASF17
 8273 00c8 03       		.byte	0x3
 8274 00c9 2C       		.byte	0x2c
 8275 00ca 62000000 		.4byte	0x62
 8276 00ce 03       		.uleb128 0x3
 8277 00cf FC0E0000 		.4byte	.LASF18
 8278 00d3 03       		.byte	0x3
 8279 00d4 30       		.byte	0x30
 8280 00d5 74000000 		.4byte	0x74
 8281 00d9 05       		.uleb128 0x5
 8282 00da 6D0D0000 		.4byte	.LASF19
 8283 00de 04       		.byte	0x4
 8284 00df E901     		.2byte	0x1e9
 8285 00e1 37000000 		.4byte	0x37
 8286 00e5 05       		.uleb128 0x5
 8287 00e6 E80F0000 		.4byte	.LASF20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 190


 8288 00ea 04       		.byte	0x4
 8289 00eb EA01     		.2byte	0x1ea
 8290 00ed 5B000000 		.4byte	0x5b
 8291 00f1 05       		.uleb128 0x5
 8292 00f2 D5000000 		.4byte	.LASF21
 8293 00f6 04       		.byte	0x4
 8294 00f7 EB01     		.2byte	0x1eb
 8295 00f9 7F000000 		.4byte	0x7f
 8296 00fd 02       		.uleb128 0x2
 8297 00fe 04       		.byte	0x4
 8298 00ff 04       		.byte	0x4
 8299 0100 4F0A0000 		.4byte	.LASF22
 8300 0104 02       		.uleb128 0x2
 8301 0105 08       		.byte	0x8
 8302 0106 04       		.byte	0x4
 8303 0107 0F0A0000 		.4byte	.LASF23
 8304 010b 02       		.uleb128 0x2
 8305 010c 01       		.byte	0x1
 8306 010d 08       		.byte	0x8
 8307 010e CF040000 		.4byte	.LASF24
 8308 0112 05       		.uleb128 0x5
 8309 0113 F00A0000 		.4byte	.LASF25
 8310 0117 04       		.byte	0x4
 8311 0118 8B02     		.2byte	0x28b
 8312 011a 7F000000 		.4byte	0x7f
 8313 011e 05       		.uleb128 0x5
 8314 011f 7F0C0000 		.4byte	.LASF26
 8315 0123 04       		.byte	0x4
 8316 0124 9302     		.2byte	0x293
 8317 0126 2A010000 		.4byte	0x12a
 8318 012a 06       		.uleb128 0x6
 8319 012b D9000000 		.4byte	0xd9
 8320 012f 02       		.uleb128 0x2
 8321 0130 08       		.byte	0x8
 8322 0131 04       		.byte	0x4
 8323 0132 860B0000 		.4byte	.LASF27
 8324 0136 02       		.uleb128 0x2
 8325 0137 04       		.byte	0x4
 8326 0138 07       		.byte	0x7
 8327 0139 2A000000 		.4byte	.LASF28
 8328 013d 07       		.uleb128 0x7
 8329 013e D9000000 		.4byte	0xd9
 8330 0142 4D010000 		.4byte	0x14d
 8331 0146 08       		.uleb128 0x8
 8332 0147 36010000 		.4byte	0x136
 8333 014b 03       		.byte	0x3
 8334 014c 00       		.byte	0
 8335 014d 09       		.uleb128 0x9
 8336 014e 1C       		.byte	0x1c
 8337 014f 05       		.byte	0x5
 8338 0150 1601     		.2byte	0x116
 8339 0152 BF010000 		.4byte	0x1bf
 8340 0156 0A       		.uleb128 0xa
 8341 0157 7C030000 		.4byte	.LASF29
 8342 015b 05       		.byte	0x5
 8343 015c 1B01     		.2byte	0x11b
 8344 015e F1000000 		.4byte	0xf1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 191


 8345 0162 00       		.byte	0
 8346 0163 0A       		.uleb128 0xa
 8347 0164 D8010000 		.4byte	.LASF30
 8348 0168 05       		.byte	0x5
 8349 0169 2001     		.2byte	0x120
 8350 016b F1000000 		.4byte	0xf1
 8351 016f 04       		.byte	0x4
 8352 0170 0A       		.uleb128 0xa
 8353 0171 B90F0000 		.4byte	.LASF31
 8354 0175 05       		.byte	0x5
 8355 0176 2301     		.2byte	0x123
 8356 0178 F1000000 		.4byte	0xf1
 8357 017c 08       		.byte	0x8
 8358 017d 0A       		.uleb128 0xa
 8359 017e E80D0000 		.4byte	.LASF32
 8360 0182 05       		.byte	0x5
 8361 0183 2601     		.2byte	0x126
 8362 0185 F1000000 		.4byte	0xf1
 8363 0189 0C       		.byte	0xc
 8364 018a 0A       		.uleb128 0xa
 8365 018b 3D0E0000 		.4byte	.LASF33
 8366 018f 05       		.byte	0x5
 8367 0190 2B01     		.2byte	0x12b
 8368 0192 F1000000 		.4byte	0xf1
 8369 0196 10       		.byte	0x10
 8370 0197 0A       		.uleb128 0xa
 8371 0198 04020000 		.4byte	.LASF34
 8372 019c 05       		.byte	0x5
 8373 019d 2E01     		.2byte	0x12e
 8374 019f D9000000 		.4byte	0xd9
 8375 01a3 14       		.byte	0x14
 8376 01a4 0A       		.uleb128 0xa
 8377 01a5 F6090000 		.4byte	.LASF35
 8378 01a9 05       		.byte	0x5
 8379 01aa 3301     		.2byte	0x133
 8380 01ac D9000000 		.4byte	0xd9
 8381 01b0 15       		.byte	0x15
 8382 01b1 0A       		.uleb128 0xa
 8383 01b2 C5010000 		.4byte	.LASF36
 8384 01b6 05       		.byte	0x5
 8385 01b7 3601     		.2byte	0x136
 8386 01b9 F1000000 		.4byte	0xf1
 8387 01bd 18       		.byte	0x18
 8388 01be 00       		.byte	0
 8389 01bf 05       		.uleb128 0x5
 8390 01c0 90070000 		.4byte	.LASF37
 8391 01c4 05       		.byte	0x5
 8392 01c5 3701     		.2byte	0x137
 8393 01c7 4D010000 		.4byte	0x14d
 8394 01cb 0B       		.uleb128 0xb
 8395 01cc 01       		.byte	0x1
 8396 01cd 37000000 		.4byte	0x37
 8397 01d1 05       		.byte	0x5
 8398 01d2 5401     		.2byte	0x154
 8399 01d4 F7010000 		.4byte	0x1f7
 8400 01d8 0C       		.uleb128 0xc
 8401 01d9 84000000 		.4byte	.LASF38
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 192


 8402 01dd 00       		.byte	0
 8403 01de 0C       		.uleb128 0xc
 8404 01df EB050000 		.4byte	.LASF39
 8405 01e3 01       		.byte	0x1
 8406 01e4 0C       		.uleb128 0xc
 8407 01e5 AB010000 		.4byte	.LASF40
 8408 01e9 02       		.byte	0x2
 8409 01ea 0C       		.uleb128 0xc
 8410 01eb AB030000 		.4byte	.LASF41
 8411 01ef 03       		.byte	0x3
 8412 01f0 0C       		.uleb128 0xc
 8413 01f1 43080000 		.4byte	.LASF42
 8414 01f5 04       		.byte	0x4
 8415 01f6 00       		.byte	0
 8416 01f7 05       		.uleb128 0x5
 8417 01f8 3E010000 		.4byte	.LASF43
 8418 01fc 05       		.byte	0x5
 8419 01fd 5A01     		.2byte	0x15a
 8420 01ff CB010000 		.4byte	0x1cb
 8421 0203 06       		.uleb128 0x6
 8422 0204 A2000000 		.4byte	0xa2
 8423 0208 06       		.uleb128 0x6
 8424 0209 B8000000 		.4byte	0xb8
 8425 020d 03       		.uleb128 0x3
 8426 020e 75050000 		.4byte	.LASF44
 8427 0212 06       		.byte	0x6
 8428 0213 6C       		.byte	0x6c
 8429 0214 9B000000 		.4byte	0x9b
 8430 0218 0D       		.uleb128 0xd
 8431 0219 C1030000 		.4byte	.LASF50
 8432 021d 01       		.byte	0x1
 8433 021e 37000000 		.4byte	0x37
 8434 0222 07       		.byte	0x7
 8435 0223 1D       		.byte	0x1d
 8436 0224 47020000 		.4byte	0x247
 8437 0228 0C       		.uleb128 0xc
 8438 0229 4D090000 		.4byte	.LASF45
 8439 022d 00       		.byte	0
 8440 022e 0C       		.uleb128 0xc
 8441 022f 05030000 		.4byte	.LASF46
 8442 0233 01       		.byte	0x1
 8443 0234 0C       		.uleb128 0xc
 8444 0235 B3000000 		.4byte	.LASF47
 8445 0239 02       		.byte	0x2
 8446 023a 0C       		.uleb128 0xc
 8447 023b 46060000 		.4byte	.LASF48
 8448 023f 03       		.byte	0x3
 8449 0240 0C       		.uleb128 0xc
 8450 0241 36010000 		.4byte	.LASF49
 8451 0245 04       		.byte	0x4
 8452 0246 00       		.byte	0
 8453 0247 0D       		.uleb128 0xd
 8454 0248 26030000 		.4byte	.LASF51
 8455 024c 01       		.byte	0x1
 8456 024d 37000000 		.4byte	0x37
 8457 0251 01       		.byte	0x1
 8458 0252 1F       		.byte	0x1f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 193


 8459 0253 7C020000 		.4byte	0x27c
 8460 0257 0C       		.uleb128 0xc
 8461 0258 21060000 		.4byte	.LASF52
 8462 025c 00       		.byte	0
 8463 025d 0C       		.uleb128 0xc
 8464 025e B8040000 		.4byte	.LASF53
 8465 0262 01       		.byte	0x1
 8466 0263 0C       		.uleb128 0xc
 8467 0264 ED0C0000 		.4byte	.LASF54
 8468 0268 02       		.byte	0x2
 8469 0269 0C       		.uleb128 0xc
 8470 026a 9A0C0000 		.4byte	.LASF55
 8471 026e 03       		.byte	0x3
 8472 026f 0C       		.uleb128 0xc
 8473 0270 630F0000 		.4byte	.LASF56
 8474 0274 04       		.byte	0x4
 8475 0275 0C       		.uleb128 0xc
 8476 0276 22020000 		.4byte	.LASF57
 8477 027a 05       		.byte	0x5
 8478 027b 00       		.byte	0
 8479 027c 0E       		.uleb128 0xe
 8480 027d 3E0C0000 		.4byte	.LASF302
 8481 0281 04       		.byte	0x4
 8482 0282 01       		.byte	0x1
 8483 0283 A3       		.byte	0xa3
 8484 0284 A6020000 		.4byte	0x2a6
 8485 0288 0F       		.uleb128 0xf
 8486 0289 6600     		.ascii	"f\000"
 8487 028b 01       		.byte	0x1
 8488 028c A4       		.byte	0xa4
 8489 028d FD000000 		.4byte	0xfd
 8490 0291 0F       		.uleb128 0xf
 8491 0292 6200     		.ascii	"b\000"
 8492 0294 01       		.byte	0x1
 8493 0295 A5       		.byte	0xa5
 8494 0296 A6020000 		.4byte	0x2a6
 8495 029a 0F       		.uleb128 0xf
 8496 029b 75333200 		.ascii	"u32\000"
 8497 029f 01       		.byte	0x1
 8498 02a0 A6       		.byte	0xa6
 8499 02a1 CE000000 		.4byte	0xce
 8500 02a5 00       		.byte	0
 8501 02a6 07       		.uleb128 0x7
 8502 02a7 A2000000 		.4byte	0xa2
 8503 02ab B6020000 		.4byte	0x2b6
 8504 02af 08       		.uleb128 0x8
 8505 02b0 36010000 		.4byte	0x136
 8506 02b4 03       		.byte	0x3
 8507 02b5 00       		.byte	0
 8508 02b6 10       		.uleb128 0x10
 8509 02b7 A1030000 		.4byte	.LASF107
 8510 02bb 01       		.byte	0x1
 8511 02bc AA       		.byte	0xaa
 8512 02bd 00000000 		.4byte	.LFB64
 8513 02c1 74010000 		.4byte	.LFE64-.LFB64
 8514 02c5 01       		.uleb128 0x1
 8515 02c6 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 194


 8516 02c7 E2020000 		.4byte	0x2e2
 8517 02cb 11       		.uleb128 0x11
 8518 02cc 66000000 		.4byte	.LBB2
 8519 02d0 7A000000 		.4byte	.LBE2-.LBB2
 8520 02d4 12       		.uleb128 0x12
 8521 02d5 6900     		.ascii	"i\000"
 8522 02d7 01       		.byte	0x1
 8523 02d8 B0       		.byte	0xb0
 8524 02d9 94000000 		.4byte	0x94
 8525 02dd 02       		.uleb128 0x2
 8526 02de 91       		.byte	0x91
 8527 02df 6C       		.sleb128 -20
 8528 02e0 00       		.byte	0
 8529 02e1 00       		.byte	0
 8530 02e2 13       		.uleb128 0x13
 8531 02e3 530C0000 		.4byte	.LASF58
 8532 02e7 01       		.byte	0x1
 8533 02e8 CF       		.byte	0xcf
 8534 02e9 00000000 		.4byte	.LFB65
 8535 02ed 9C000000 		.4byte	.LFE65-.LFB65
 8536 02f1 01       		.uleb128 0x1
 8537 02f2 9C       		.byte	0x9c
 8538 02f3 13       		.uleb128 0x13
 8539 02f4 CD0A0000 		.4byte	.LASF59
 8540 02f8 01       		.byte	0x1
 8541 02f9 F8       		.byte	0xf8
 8542 02fa 00000000 		.4byte	.LFB66
 8543 02fe 14000000 		.4byte	.LFE66-.LFB66
 8544 0302 01       		.uleb128 0x1
 8545 0303 9C       		.byte	0x9c
 8546 0304 14       		.uleb128 0x14
 8547 0305 62090000 		.4byte	.LASF60
 8548 0309 01       		.byte	0x1
 8549 030a 0301     		.2byte	0x103
 8550 030c 00000000 		.4byte	.LFB67
 8551 0310 7C000000 		.4byte	.LFE67-.LFB67
 8552 0314 01       		.uleb128 0x1
 8553 0315 9C       		.byte	0x9c
 8554 0316 15       		.uleb128 0x15
 8555 0317 F9040000 		.4byte	.LASF63
 8556 031b 01       		.byte	0x1
 8557 031c 1F01     		.2byte	0x11f
 8558 031e FD000000 		.4byte	0xfd
 8559 0322 00000000 		.4byte	.LFB68
 8560 0326 58000000 		.4byte	.LFE68-.LFB68
 8561 032a 01       		.uleb128 0x1
 8562 032b 9C       		.byte	0x9c
 8563 032c 7C030000 		.4byte	0x37c
 8564 0330 16       		.uleb128 0x16
 8565 0331 6D696E00 		.ascii	"min\000"
 8566 0335 01       		.byte	0x1
 8567 0336 1F01     		.2byte	0x11f
 8568 0338 FD000000 		.4byte	0xfd
 8569 033c 02       		.uleb128 0x2
 8570 033d 91       		.byte	0x91
 8571 033e 6C       		.sleb128 -20
 8572 033f 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 195


 8573 0340 76616C00 		.ascii	"val\000"
 8574 0344 01       		.byte	0x1
 8575 0345 1F01     		.2byte	0x11f
 8576 0347 FD000000 		.4byte	0xfd
 8577 034b 02       		.uleb128 0x2
 8578 034c 91       		.byte	0x91
 8579 034d 68       		.sleb128 -24
 8580 034e 16       		.uleb128 0x16
 8581 034f 6D617800 		.ascii	"max\000"
 8582 0353 01       		.byte	0x1
 8583 0354 1F01     		.2byte	0x11f
 8584 0356 FD000000 		.4byte	0xfd
 8585 035a 02       		.uleb128 0x2
 8586 035b 91       		.byte	0x91
 8587 035c 64       		.sleb128 -28
 8588 035d 17       		.uleb128 0x17
 8589 035e EE090000 		.4byte	.LASF61
 8590 0362 01       		.byte	0x1
 8591 0363 2101     		.2byte	0x121
 8592 0365 FD000000 		.4byte	0xfd
 8593 0369 02       		.uleb128 0x2
 8594 036a 91       		.byte	0x91
 8595 036b 74       		.sleb128 -12
 8596 036c 17       		.uleb128 0x17
 8597 036d 68040000 		.4byte	.LASF62
 8598 0371 01       		.byte	0x1
 8599 0372 2201     		.2byte	0x122
 8600 0374 FD000000 		.4byte	0xfd
 8601 0378 02       		.uleb128 0x2
 8602 0379 91       		.byte	0x91
 8603 037a 70       		.sleb128 -16
 8604 037b 00       		.byte	0
 8605 037c 15       		.uleb128 0x15
 8606 037d 9A0F0000 		.4byte	.LASF64
 8607 0381 01       		.byte	0x1
 8608 0382 3501     		.2byte	0x135
 8609 0384 FD000000 		.4byte	0xfd
 8610 0388 00000000 		.4byte	.LFB69
 8611 038c 68000000 		.4byte	.LFE69-.LFB69
 8612 0390 01       		.uleb128 0x1
 8613 0391 9C       		.byte	0x9c
 8614 0392 A4030000 		.4byte	0x3a4
 8615 0396 16       		.uleb128 0x16
 8616 0397 6600     		.ascii	"f\000"
 8617 0399 01       		.byte	0x1
 8618 039a 3501     		.2byte	0x135
 8619 039c FD000000 		.4byte	0xfd
 8620 03a0 02       		.uleb128 0x2
 8621 03a1 91       		.byte	0x91
 8622 03a2 74       		.sleb128 -12
 8623 03a3 00       		.byte	0
 8624 03a4 15       		.uleb128 0x15
 8625 03a5 C50B0000 		.4byte	.LASF65
 8626 03a9 01       		.byte	0x1
 8627 03aa 3C01     		.2byte	0x13c
 8628 03ac FD000000 		.4byte	0xfd
 8629 03b0 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 196


 8630 03b4 4C000000 		.4byte	.LFE70-.LFB70
 8631 03b8 01       		.uleb128 0x1
 8632 03b9 9C       		.byte	0x9c
 8633 03ba CC030000 		.4byte	0x3cc
 8634 03be 16       		.uleb128 0x16
 8635 03bf 6600     		.ascii	"f\000"
 8636 03c1 01       		.byte	0x1
 8637 03c2 3C01     		.2byte	0x13c
 8638 03c4 FD000000 		.4byte	0xfd
 8639 03c8 02       		.uleb128 0x2
 8640 03c9 91       		.byte	0x91
 8641 03ca 74       		.sleb128 -12
 8642 03cb 00       		.byte	0
 8643 03cc 15       		.uleb128 0x15
 8644 03cd 6C070000 		.4byte	.LASF66
 8645 03d1 01       		.byte	0x1
 8646 03d2 4201     		.2byte	0x142
 8647 03d4 FD000000 		.4byte	0xfd
 8648 03d8 00000000 		.4byte	.LFB71
 8649 03dc 46000000 		.4byte	.LFE71-.LFB71
 8650 03e0 01       		.uleb128 0x1
 8651 03e1 9C       		.byte	0x9c
 8652 03e2 2E040000 		.4byte	0x42e
 8653 03e6 16       		.uleb128 0x16
 8654 03e7 4100     		.ascii	"A\000"
 8655 03e9 01       		.byte	0x1
 8656 03ea 4201     		.2byte	0x142
 8657 03ec FD000000 		.4byte	0xfd
 8658 03f0 02       		.uleb128 0x2
 8659 03f1 91       		.byte	0x91
 8660 03f2 6C       		.sleb128 -20
 8661 03f3 16       		.uleb128 0x16
 8662 03f4 4200     		.ascii	"B\000"
 8663 03f6 01       		.byte	0x1
 8664 03f7 4201     		.2byte	0x142
 8665 03f9 FD000000 		.4byte	0xfd
 8666 03fd 02       		.uleb128 0x2
 8667 03fe 91       		.byte	0x91
 8668 03ff 68       		.sleb128 -24
 8669 0400 18       		.uleb128 0x18
 8670 0401 1C020000 		.4byte	.LASF67
 8671 0405 01       		.byte	0x1
 8672 0406 4201     		.2byte	0x142
 8673 0408 FD000000 		.4byte	0xfd
 8674 040c 02       		.uleb128 0x2
 8675 040d 91       		.byte	0x91
 8676 040e 64       		.sleb128 -28
 8677 040f 17       		.uleb128 0x17
 8678 0410 51030000 		.4byte	.LASF68
 8679 0414 01       		.byte	0x1
 8680 0415 4401     		.2byte	0x144
 8681 0417 FD000000 		.4byte	0xfd
 8682 041b 02       		.uleb128 0x2
 8683 041c 91       		.byte	0x91
 8684 041d 74       		.sleb128 -12
 8685 041e 19       		.uleb128 0x19
 8686 041f 6F757400 		.ascii	"out\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 197


 8687 0423 01       		.byte	0x1
 8688 0424 4701     		.2byte	0x147
 8689 0426 FD000000 		.4byte	0xfd
 8690 042a 02       		.uleb128 0x2
 8691 042b 91       		.byte	0x91
 8692 042c 70       		.sleb128 -16
 8693 042d 00       		.byte	0
 8694 042e 1A       		.uleb128 0x1a
 8695 042f 6D617000 		.ascii	"map\000"
 8696 0433 01       		.byte	0x1
 8697 0434 B501     		.2byte	0x1b5
 8698 0436 FD000000 		.4byte	0xfd
 8699 043a 00000000 		.4byte	.LFB72
 8700 043e 56000000 		.4byte	.LFE72-.LFB72
 8701 0442 01       		.uleb128 0x1
 8702 0443 9C       		.byte	0x9c
 8703 0444 94040000 		.4byte	0x494
 8704 0448 18       		.uleb128 0x18
 8705 0449 7E040000 		.4byte	.LASF69
 8706 044d 01       		.byte	0x1
 8707 044e B501     		.2byte	0x1b5
 8708 0450 FD000000 		.4byte	0xfd
 8709 0454 02       		.uleb128 0x2
 8710 0455 91       		.byte	0x91
 8711 0456 6C       		.sleb128 -20
 8712 0457 18       		.uleb128 0x18
 8713 0458 EC010000 		.4byte	.LASF70
 8714 045c 01       		.byte	0x1
 8715 045d B501     		.2byte	0x1b5
 8716 045f FD000000 		.4byte	0xfd
 8717 0463 02       		.uleb128 0x2
 8718 0464 91       		.byte	0x91
 8719 0465 68       		.sleb128 -24
 8720 0466 18       		.uleb128 0x18
 8721 0467 8C080000 		.4byte	.LASF71
 8722 046b 01       		.byte	0x1
 8723 046c B501     		.2byte	0x1b5
 8724 046e FD000000 		.4byte	0xfd
 8725 0472 02       		.uleb128 0x2
 8726 0473 91       		.byte	0x91
 8727 0474 64       		.sleb128 -28
 8728 0475 18       		.uleb128 0x18
 8729 0476 5B080000 		.4byte	.LASF72
 8730 047a 01       		.byte	0x1
 8731 047b B501     		.2byte	0x1b5
 8732 047d FD000000 		.4byte	0xfd
 8733 0481 02       		.uleb128 0x2
 8734 0482 91       		.byte	0x91
 8735 0483 60       		.sleb128 -32
 8736 0484 18       		.uleb128 0x18
 8737 0485 410A0000 		.4byte	.LASF73
 8738 0489 01       		.byte	0x1
 8739 048a B501     		.2byte	0x1b5
 8740 048c FD000000 		.4byte	0xfd
 8741 0490 02       		.uleb128 0x2
 8742 0491 91       		.byte	0x91
 8743 0492 00       		.sleb128 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 198


 8744 0493 00       		.byte	0
 8745 0494 1B       		.uleb128 0x1b
 8746 0495 87050000 		.4byte	.LASF74
 8747 0499 01       		.byte	0x1
 8748 049a C001     		.2byte	0x1c0
 8749 049c 00000000 		.4byte	.LFB73
 8750 04a0 0C000000 		.4byte	.LFE73-.LFB73
 8751 04a4 01       		.uleb128 0x1
 8752 04a5 9C       		.byte	0x9c
 8753 04a6 1B       		.uleb128 0x1b
 8754 04a7 470D0000 		.4byte	.LASF75
 8755 04ab 01       		.byte	0x1
 8756 04ac C501     		.2byte	0x1c5
 8757 04ae 00000000 		.4byte	.LFB74
 8758 04b2 0C000000 		.4byte	.LFE74-.LFB74
 8759 04b6 01       		.uleb128 0x1
 8760 04b7 9C       		.byte	0x9c
 8761 04b8 1C       		.uleb128 0x1c
 8762 04b9 310F0000 		.4byte	.LASF303
 8763 04bd 01       		.byte	0x1
 8764 04be CB01     		.2byte	0x1cb
 8765 04c0 00000000 		.4byte	.LFB75
 8766 04c4 0C010000 		.4byte	.LFE75-.LFB75
 8767 04c8 01       		.uleb128 0x1
 8768 04c9 9C       		.byte	0x9c
 8769 04ca FF040000 		.4byte	0x4ff
 8770 04ce 11       		.uleb128 0x11
 8771 04cf 06000000 		.4byte	.LBB3
 8772 04d3 EA000000 		.4byte	.LBE3-.LBB3
 8773 04d7 19       		.uleb128 0x19
 8774 04d8 6900     		.ascii	"i\000"
 8775 04da 01       		.byte	0x1
 8776 04db CF01     		.2byte	0x1cf
 8777 04dd 94000000 		.4byte	0x94
 8778 04e1 02       		.uleb128 0x2
 8779 04e2 91       		.byte	0x91
 8780 04e3 6C       		.sleb128 -20
 8781 04e4 11       		.uleb128 0x11
 8782 04e5 0C000000 		.4byte	.LBB4
 8783 04e9 D8000000 		.4byte	.LBE4-.LBB4
 8784 04ed 17       		.uleb128 0x17
 8785 04ee F3010000 		.4byte	.LASF76
 8786 04f2 01       		.byte	0x1
 8787 04f3 D201     		.2byte	0x1d2
 8788 04f5 FD000000 		.4byte	0xfd
 8789 04f9 02       		.uleb128 0x2
 8790 04fa 91       		.byte	0x91
 8791 04fb 68       		.sleb128 -24
 8792 04fc 00       		.byte	0
 8793 04fd 00       		.byte	0
 8794 04fe 00       		.byte	0
 8795 04ff 15       		.uleb128 0x15
 8796 0500 CC020000 		.4byte	.LASF77
 8797 0504 01       		.byte	0x1
 8798 0505 D901     		.2byte	0x1d9
 8799 0507 94000000 		.4byte	0x94
 8800 050b 00000000 		.4byte	.LFB76
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 199


 8801 050f 00190000 		.4byte	.LFE76-.LFB76
 8802 0513 01       		.uleb128 0x1
 8803 0514 9C       		.byte	0x9c
 8804 0515 C8080000 		.4byte	0x8c8
 8805 0519 17       		.uleb128 0x17
 8806 051a C70F0000 		.4byte	.LASF78
 8807 051e 01       		.byte	0x1
 8808 051f 2102     		.2byte	0x221
 8809 0521 A2000000 		.4byte	0xa2
 8810 0525 03       		.uleb128 0x3
 8811 0526 91       		.byte	0x91
 8812 0527 837F     		.sleb128 -125
 8813 0529 1D       		.uleb128 0x1d
 8814 052a 28000000 		.4byte	.LBB5
 8815 052e 70010000 		.4byte	.LBE5-.LBB5
 8816 0532 E5050000 		.4byte	0x5e5
 8817 0536 17       		.uleb128 0x17
 8818 0537 10040000 		.4byte	.LASF79
 8819 053b 01       		.byte	0x1
 8820 053c E601     		.2byte	0x1e6
 8821 053e 94000000 		.4byte	0x94
 8822 0542 02       		.uleb128 0x2
 8823 0543 91       		.byte	0x91
 8824 0544 6C       		.sleb128 -20
 8825 0545 1D       		.uleb128 0x1d
 8826 0546 30000000 		.4byte	.LBB6
 8827 054a 64000000 		.4byte	.LBE6-.LBB6
 8828 054e 62050000 		.4byte	0x562
 8829 0552 17       		.uleb128 0x17
 8830 0553 8E0E0000 		.4byte	.LASF80
 8831 0557 01       		.byte	0x1
 8832 0558 E901     		.2byte	0x1e9
 8833 055a 94000000 		.4byte	0x94
 8834 055e 02       		.uleb128 0x2
 8835 055f 91       		.byte	0x91
 8836 0560 68       		.sleb128 -24
 8837 0561 00       		.byte	0
 8838 0562 11       		.uleb128 0x11
 8839 0563 94000000 		.4byte	.LBB7
 8840 0567 F0000000 		.4byte	.LBE7-.LBB7
 8841 056b 19       		.uleb128 0x19
 8842 056c 6900     		.ascii	"i\000"
 8843 056e 01       		.byte	0x1
 8844 056f ED01     		.2byte	0x1ed
 8845 0571 94000000 		.4byte	0x94
 8846 0575 02       		.uleb128 0x2
 8847 0576 91       		.byte	0x91
 8848 0577 64       		.sleb128 -28
 8849 0578 11       		.uleb128 0x11
 8850 0579 9A000000 		.4byte	.LBB8
 8851 057d DE000000 		.4byte	.LBE8-.LBB8
 8852 0581 17       		.uleb128 0x17
 8853 0582 21040000 		.4byte	.LASF81
 8854 0586 01       		.byte	0x1
 8855 0587 EF01     		.2byte	0x1ef
 8856 0589 94000000 		.4byte	0x94
 8857 058d 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 200


 8858 058e 91       		.byte	0x91
 8859 058f 8C7F     		.sleb128 -116
 8860 0591 11       		.uleb128 0x11
 8861 0592 A6000000 		.4byte	.LBB9
 8862 0596 D2000000 		.4byte	.LBE9-.LBB9
 8863 059a 19       		.uleb128 0x19
 8864 059b 6A00     		.ascii	"j\000"
 8865 059d 01       		.byte	0x1
 8866 059e F001     		.2byte	0x1f0
 8867 05a0 94000000 		.4byte	0x94
 8868 05a4 02       		.uleb128 0x2
 8869 05a5 91       		.byte	0x91
 8870 05a6 60       		.sleb128 -32
 8871 05a7 11       		.uleb128 0x11
 8872 05a8 AC000000 		.4byte	.LBB10
 8873 05ac C0000000 		.4byte	.LBE10-.LBB10
 8874 05b0 17       		.uleb128 0x17
 8875 05b1 59030000 		.4byte	.LASF82
 8876 05b5 01       		.byte	0x1
 8877 05b6 F301     		.2byte	0x1f3
 8878 05b8 94000000 		.4byte	0x94
 8879 05bc 03       		.uleb128 0x3
 8880 05bd 91       		.byte	0x91
 8881 05be 887F     		.sleb128 -120
 8882 05c0 17       		.uleb128 0x17
 8883 05c1 A60F0000 		.4byte	.LASF83
 8884 05c5 01       		.byte	0x1
 8885 05c6 F401     		.2byte	0x1f4
 8886 05c8 B8000000 		.4byte	0xb8
 8887 05cc 03       		.uleb128 0x3
 8888 05cd 91       		.byte	0x91
 8889 05ce 867F     		.sleb128 -122
 8890 05d0 17       		.uleb128 0x17
 8891 05d1 E3090000 		.4byte	.LASF84
 8892 05d5 01       		.byte	0x1
 8893 05d6 F501     		.2byte	0x1f5
 8894 05d8 B8000000 		.4byte	0xb8
 8895 05dc 03       		.uleb128 0x3
 8896 05dd 91       		.byte	0x91
 8897 05de 847F     		.sleb128 -124
 8898 05e0 00       		.byte	0
 8899 05e1 00       		.byte	0
 8900 05e2 00       		.byte	0
 8901 05e3 00       		.byte	0
 8902 05e4 00       		.byte	0
 8903 05e5 1D       		.uleb128 0x1d
 8904 05e6 98010000 		.4byte	.LBB11
 8905 05ea 90000000 		.4byte	.LBE11-.LBB11
 8906 05ee 00060000 		.4byte	0x600
 8907 05f2 19       		.uleb128 0x19
 8908 05f3 6900     		.ascii	"i\000"
 8909 05f5 01       		.byte	0x1
 8910 05f6 FC01     		.2byte	0x1fc
 8911 05f8 94000000 		.4byte	0x94
 8912 05fc 02       		.uleb128 0x2
 8913 05fd 91       		.byte	0x91
 8914 05fe 5C       		.sleb128 -36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 201


 8915 05ff 00       		.byte	0
 8916 0600 1D       		.uleb128 0x1d
 8917 0601 2C020000 		.4byte	.LBB12
 8918 0605 A6000000 		.4byte	.LBE12-.LBB12
 8919 0609 64060000 		.4byte	0x664
 8920 060d 19       		.uleb128 0x19
 8921 060e 6900     		.ascii	"i\000"
 8922 0610 01       		.byte	0x1
 8923 0611 0402     		.2byte	0x204
 8924 0613 94000000 		.4byte	0x94
 8925 0617 02       		.uleb128 0x2
 8926 0618 91       		.byte	0x91
 8927 0619 58       		.sleb128 -40
 8928 061a 1D       		.uleb128 0x1d
 8929 061b 32020000 		.4byte	.LBB13
 8930 061f 28000000 		.4byte	.LBE13-.LBB13
 8931 0623 35060000 		.4byte	0x635
 8932 0627 19       		.uleb128 0x19
 8933 0628 6A00     		.ascii	"j\000"
 8934 062a 01       		.byte	0x1
 8935 062b 0602     		.2byte	0x206
 8936 062d 94000000 		.4byte	0x94
 8937 0631 02       		.uleb128 0x2
 8938 0632 91       		.byte	0x91
 8939 0633 54       		.sleb128 -44
 8940 0634 00       		.byte	0
 8941 0635 11       		.uleb128 0x11
 8942 0636 5A020000 		.4byte	.LBB14
 8943 063a 62000000 		.4byte	.LBE14-.LBB14
 8944 063e 19       		.uleb128 0x19
 8945 063f 6A00     		.ascii	"j\000"
 8946 0641 01       		.byte	0x1
 8947 0642 0B02     		.2byte	0x20b
 8948 0644 94000000 		.4byte	0x94
 8949 0648 02       		.uleb128 0x2
 8950 0649 91       		.byte	0x91
 8951 064a 50       		.sleb128 -48
 8952 064b 11       		.uleb128 0x11
 8953 064c 60020000 		.4byte	.LBB15
 8954 0650 50000000 		.4byte	.LBE15-.LBB15
 8955 0654 19       		.uleb128 0x19
 8956 0655 6B00     		.ascii	"k\000"
 8957 0657 01       		.byte	0x1
 8958 0658 0D02     		.2byte	0x20d
 8959 065a 94000000 		.4byte	0x94
 8960 065e 02       		.uleb128 0x2
 8961 065f 91       		.byte	0x91
 8962 0660 4C       		.sleb128 -52
 8963 0661 00       		.byte	0
 8964 0662 00       		.byte	0
 8965 0663 00       		.byte	0
 8966 0664 1D       		.uleb128 0x1d
 8967 0665 C8030000 		.4byte	.LBB16
 8968 0669 6A000000 		.4byte	.LBE16-.LBB16
 8969 066d 7F060000 		.4byte	0x67f
 8970 0671 19       		.uleb128 0x19
 8971 0672 7700     		.ascii	"w\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 202


 8972 0674 01       		.byte	0x1
 8973 0675 4202     		.2byte	0x242
 8974 0677 94000000 		.4byte	0x94
 8975 067b 02       		.uleb128 0x2
 8976 067c 91       		.byte	0x91
 8977 067d 48       		.sleb128 -56
 8978 067e 00       		.byte	0
 8979 067f 1D       		.uleb128 0x1d
 8980 0680 C4040000 		.4byte	.LBB17
 8981 0684 28000000 		.4byte	.LBE17-.LBB17
 8982 0688 9D060000 		.4byte	0x69d
 8983 068c 17       		.uleb128 0x17
 8984 068d EF070000 		.4byte	.LASF85
 8985 0691 01       		.byte	0x1
 8986 0692 0103     		.2byte	0x301
 8987 0694 A2000000 		.4byte	0xa2
 8988 0698 03       		.uleb128 0x3
 8989 0699 91       		.byte	0x91
 8990 069a 827F     		.sleb128 -126
 8991 069c 00       		.byte	0
 8992 069d 1D       		.uleb128 0x1d
 8993 069e 8E060000 		.4byte	.LBB18
 8994 06a2 8A000000 		.4byte	.LBE18-.LBB18
 8995 06a6 D2060000 		.4byte	0x6d2
 8996 06aa 19       		.uleb128 0x19
 8997 06ab 6900     		.ascii	"i\000"
 8998 06ad 01       		.byte	0x1
 8999 06ae 3703     		.2byte	0x337
 9000 06b0 94000000 		.4byte	0x94
 9001 06b4 02       		.uleb128 0x2
 9002 06b5 91       		.byte	0x91
 9003 06b6 44       		.sleb128 -60
 9004 06b7 11       		.uleb128 0x11
 9005 06b8 D0060000 		.4byte	.LBB19
 9006 06bc 3C000000 		.4byte	.LBE19-.LBB19
 9007 06c0 17       		.uleb128 0x17
 9008 06c1 E7070000 		.4byte	.LASF86
 9009 06c5 01       		.byte	0x1
 9010 06c6 3903     		.2byte	0x339
 9011 06c8 B8000000 		.4byte	0xb8
 9012 06cc 03       		.uleb128 0x3
 9013 06cd 91       		.byte	0x91
 9014 06ce EA7E     		.sleb128 -150
 9015 06d0 00       		.byte	0
 9016 06d1 00       		.byte	0
 9017 06d2 1D       		.uleb128 0x1d
 9018 06d3 36080000 		.4byte	.LBB20
 9019 06d7 1E010000 		.4byte	.LBE20-.LBB20
 9020 06db F0060000 		.4byte	0x6f0
 9021 06df 17       		.uleb128 0x17
 9022 06e0 5D000000 		.4byte	.LASF87
 9023 06e4 01       		.byte	0x1
 9024 06e5 E303     		.2byte	0x3e3
 9025 06e7 AD000000 		.4byte	0xad
 9026 06eb 03       		.uleb128 0x3
 9027 06ec 91       		.byte	0x91
 9028 06ed 807F     		.sleb128 -128
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 203


 9029 06ef 00       		.byte	0
 9030 06f0 1D       		.uleb128 0x1d
 9031 06f1 080A0000 		.4byte	.LBB21
 9032 06f5 28000000 		.4byte	.LBE21-.LBB21
 9033 06f9 0E070000 		.4byte	0x70e
 9034 06fd 17       		.uleb128 0x17
 9035 06fe 4F050000 		.4byte	.LASF88
 9036 0702 01       		.byte	0x1
 9037 0703 0B04     		.2byte	0x40b
 9038 0705 B8000000 		.4byte	0xb8
 9039 0709 03       		.uleb128 0x3
 9040 070a 91       		.byte	0x91
 9041 070b FE7E     		.sleb128 -130
 9042 070d 00       		.byte	0
 9043 070e 1D       		.uleb128 0x1d
 9044 070f 6A0A0000 		.4byte	.LBB22
 9045 0713 46000000 		.4byte	.LBE22-.LBB22
 9046 0717 29070000 		.4byte	0x729
 9047 071b 19       		.uleb128 0x19
 9048 071c 6900     		.ascii	"i\000"
 9049 071e 01       		.byte	0x1
 9050 071f 5704     		.2byte	0x457
 9051 0721 94000000 		.4byte	0x94
 9052 0725 02       		.uleb128 0x2
 9053 0726 91       		.byte	0x91
 9054 0727 40       		.sleb128 -64
 9055 0728 00       		.byte	0
 9056 0729 1D       		.uleb128 0x1d
 9057 072a 26100000 		.4byte	.LBB23
 9058 072e 28000000 		.4byte	.LBE23-.LBB23
 9059 0732 45070000 		.4byte	0x745
 9060 0736 19       		.uleb128 0x19
 9061 0737 6900     		.ascii	"i\000"
 9062 0739 01       		.byte	0x1
 9063 073a 4205     		.2byte	0x542
 9064 073c 94000000 		.4byte	0x94
 9065 0740 03       		.uleb128 0x3
 9066 0741 91       		.byte	0x91
 9067 0742 BC7F     		.sleb128 -68
 9068 0744 00       		.byte	0
 9069 0745 1D       		.uleb128 0x1d
 9070 0746 58100000 		.4byte	.LBB24
 9071 074a 98000000 		.4byte	.LBE24-.LBB24
 9072 074e 61070000 		.4byte	0x761
 9073 0752 19       		.uleb128 0x19
 9074 0753 6900     		.ascii	"i\000"
 9075 0755 01       		.byte	0x1
 9076 0756 4E05     		.2byte	0x54e
 9077 0758 94000000 		.4byte	0x94
 9078 075c 03       		.uleb128 0x3
 9079 075d 91       		.byte	0x91
 9080 075e B87F     		.sleb128 -72
 9081 0760 00       		.byte	0
 9082 0761 1D       		.uleb128 0x1d
 9083 0762 0A110000 		.4byte	.LBB25
 9084 0766 8A000000 		.4byte	.LBE25-.LBB25
 9085 076a 7D070000 		.4byte	0x77d
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 204


 9086 076e 19       		.uleb128 0x19
 9087 076f 6900     		.ascii	"i\000"
 9088 0771 01       		.byte	0x1
 9089 0772 6505     		.2byte	0x565
 9090 0774 94000000 		.4byte	0x94
 9091 0778 03       		.uleb128 0x3
 9092 0779 91       		.byte	0x91
 9093 077a B47F     		.sleb128 -76
 9094 077c 00       		.byte	0
 9095 077d 1D       		.uleb128 0x1d
 9096 077e 9A110000 		.4byte	.LBB26
 9097 0782 9A020000 		.4byte	.LBE26-.LBB26
 9098 0786 B3070000 		.4byte	0x7b3
 9099 078a 19       		.uleb128 0x19
 9100 078b 6900     		.ascii	"i\000"
 9101 078d 01       		.byte	0x1
 9102 078e 7405     		.2byte	0x574
 9103 0790 94000000 		.4byte	0x94
 9104 0794 03       		.uleb128 0x3
 9105 0795 91       		.byte	0x91
 9106 0796 B07F     		.sleb128 -80
 9107 0798 11       		.uleb128 0x11
 9108 0799 E4110000 		.4byte	.LBB27
 9109 079d 3E020000 		.4byte	.LBE27-.LBB27
 9110 07a1 17       		.uleb128 0x17
 9111 07a2 2A0B0000 		.4byte	.LASF89
 9112 07a6 01       		.byte	0x1
 9113 07a7 8505     		.2byte	0x585
 9114 07a9 FD000000 		.4byte	0xfd
 9115 07ad 03       		.uleb128 0x3
 9116 07ae 91       		.byte	0x91
 9117 07af F87E     		.sleb128 -136
 9118 07b1 00       		.byte	0
 9119 07b2 00       		.byte	0
 9120 07b3 1D       		.uleb128 0x1d
 9121 07b4 7C150000 		.4byte	.LBB28
 9122 07b8 4E000000 		.4byte	.LBE28-.LBB28
 9123 07bc CF070000 		.4byte	0x7cf
 9124 07c0 19       		.uleb128 0x19
 9125 07c1 6900     		.ascii	"i\000"
 9126 07c3 01       		.byte	0x1
 9127 07c4 ED05     		.2byte	0x5ed
 9128 07c6 0D020000 		.4byte	0x20d
 9129 07ca 03       		.uleb128 0x3
 9130 07cb 91       		.byte	0x91
 9131 07cc AC7F     		.sleb128 -84
 9132 07ce 00       		.byte	0
 9133 07cf 1D       		.uleb128 0x1d
 9134 07d0 E8150000 		.4byte	.LBB29
 9135 07d4 22000000 		.4byte	.LBE29-.LBB29
 9136 07d8 EB070000 		.4byte	0x7eb
 9137 07dc 19       		.uleb128 0x19
 9138 07dd 6900     		.ascii	"i\000"
 9139 07df 01       		.byte	0x1
 9140 07e0 0006     		.2byte	0x600
 9141 07e2 94000000 		.4byte	0x94
 9142 07e6 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 205


 9143 07e7 91       		.byte	0x91
 9144 07e8 A87F     		.sleb128 -88
 9145 07ea 00       		.byte	0
 9146 07eb 1D       		.uleb128 0x1d
 9147 07ec 0A160000 		.4byte	.LBB30
 9148 07f0 22000000 		.4byte	.LBE30-.LBB30
 9149 07f4 07080000 		.4byte	0x807
 9150 07f8 19       		.uleb128 0x19
 9151 07f9 6900     		.ascii	"i\000"
 9152 07fb 01       		.byte	0x1
 9153 07fc 0406     		.2byte	0x604
 9154 07fe 94000000 		.4byte	0x94
 9155 0802 03       		.uleb128 0x3
 9156 0803 91       		.byte	0x91
 9157 0804 A47F     		.sleb128 -92
 9158 0806 00       		.byte	0
 9159 0807 1D       		.uleb128 0x1d
 9160 0808 2C160000 		.4byte	.LBB31
 9161 080c 22000000 		.4byte	.LBE31-.LBB31
 9162 0810 23080000 		.4byte	0x823
 9163 0814 19       		.uleb128 0x19
 9164 0815 6900     		.ascii	"i\000"
 9165 0817 01       		.byte	0x1
 9166 0818 0806     		.2byte	0x608
 9167 081a 94000000 		.4byte	0x94
 9168 081e 03       		.uleb128 0x3
 9169 081f 91       		.byte	0x91
 9170 0820 A07F     		.sleb128 -96
 9171 0822 00       		.byte	0
 9172 0823 1D       		.uleb128 0x1d
 9173 0824 BC160000 		.4byte	.LBB32
 9174 0828 B8000000 		.4byte	.LBE32-.LBB32
 9175 082c 59080000 		.4byte	0x859
 9176 0830 19       		.uleb128 0x19
 9177 0831 6900     		.ascii	"i\000"
 9178 0833 01       		.byte	0x1
 9179 0834 1906     		.2byte	0x619
 9180 0836 94000000 		.4byte	0x94
 9181 083a 03       		.uleb128 0x3
 9182 083b 91       		.byte	0x91
 9183 083c 9C7F     		.sleb128 -100
 9184 083e 11       		.uleb128 0x11
 9185 083f 24170000 		.4byte	.LBB33
 9186 0843 44000000 		.4byte	.LBE33-.LBB33
 9187 0847 17       		.uleb128 0x17
 9188 0848 740C0000 		.4byte	.LASF90
 9189 084c 01       		.byte	0x1
 9190 084d 1B06     		.2byte	0x61b
 9191 084f 94000000 		.4byte	0x94
 9192 0853 03       		.uleb128 0x3
 9193 0854 91       		.byte	0x91
 9194 0855 F47E     		.sleb128 -140
 9195 0857 00       		.byte	0
 9196 0858 00       		.byte	0
 9197 0859 11       		.uleb128 0x11
 9198 085a EA170000 		.4byte	.LBB34
 9199 085e B0000000 		.4byte	.LBE34-.LBB34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 206


 9200 0862 17       		.uleb128 0x17
 9201 0863 A4020000 		.4byte	.LASF91
 9202 0867 01       		.byte	0x1
 9203 0868 4606     		.2byte	0x646
 9204 086a 94000000 		.4byte	0x94
 9205 086e 03       		.uleb128 0x3
 9206 086f 91       		.byte	0x91
 9207 0870 F07E     		.sleb128 -144
 9208 0872 17       		.uleb128 0x17
 9209 0873 DC000000 		.4byte	.LASF92
 9210 0877 01       		.byte	0x1
 9211 0878 4706     		.2byte	0x647
 9212 087a 94000000 		.4byte	0x94
 9213 087e 03       		.uleb128 0x3
 9214 087f 91       		.byte	0x91
 9215 0880 EC7E     		.sleb128 -148
 9216 0882 17       		.uleb128 0x17
 9217 0883 BA0D0000 		.4byte	.LASF93
 9218 0887 01       		.byte	0x1
 9219 0888 4806     		.2byte	0x648
 9220 088a 94000000 		.4byte	0x94
 9221 088e 03       		.uleb128 0x3
 9222 088f 91       		.byte	0x91
 9223 0890 987F     		.sleb128 -104
 9224 0892 1D       		.uleb128 0x1d
 9225 0893 FA170000 		.4byte	.LBB35
 9226 0897 36000000 		.4byte	.LBE35-.LBB35
 9227 089b AE080000 		.4byte	0x8ae
 9228 089f 19       		.uleb128 0x19
 9229 08a0 6900     		.ascii	"i\000"
 9230 08a2 01       		.byte	0x1
 9231 08a3 4906     		.2byte	0x649
 9232 08a5 94000000 		.4byte	0x94
 9233 08a9 03       		.uleb128 0x3
 9234 08aa 91       		.byte	0x91
 9235 08ab 947F     		.sleb128 -108
 9236 08ad 00       		.byte	0
 9237 08ae 11       		.uleb128 0x11
 9238 08af 34180000 		.4byte	.LBB36
 9239 08b3 44000000 		.4byte	.LBE36-.LBB36
 9240 08b7 19       		.uleb128 0x19
 9241 08b8 6900     		.ascii	"i\000"
 9242 08ba 01       		.byte	0x1
 9243 08bb 4F06     		.2byte	0x64f
 9244 08bd 94000000 		.4byte	0x94
 9245 08c1 03       		.uleb128 0x3
 9246 08c2 91       		.byte	0x91
 9247 08c3 907F     		.sleb128 -112
 9248 08c5 00       		.byte	0
 9249 08c6 00       		.byte	0
 9250 08c7 00       		.byte	0
 9251 08c8 14       		.uleb128 0x14
 9252 08c9 03050000 		.4byte	.LASF94
 9253 08cd 01       		.byte	0x1
 9254 08ce 6406     		.2byte	0x664
 9255 08d0 00000000 		.4byte	.LFB77
 9256 08d4 70000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 207


 9257 08d8 01       		.uleb128 0x1
 9258 08d9 9C       		.byte	0x9c
 9259 08da 14       		.uleb128 0x14
 9260 08db E90E0000 		.4byte	.LASF95
 9261 08df 01       		.byte	0x1
 9262 08e0 7906     		.2byte	0x679
 9263 08e2 00000000 		.4byte	.LFB78
 9264 08e6 70010000 		.4byte	.LFE78-.LFB78
 9265 08ea 01       		.uleb128 0x1
 9266 08eb 9C       		.byte	0x9c
 9267 08ec 15       		.uleb128 0x15
 9268 08ed 1A080000 		.4byte	.LASF96
 9269 08f1 01       		.byte	0x1
 9270 08f2 A106     		.2byte	0x6a1
 9271 08f4 D9000000 		.4byte	0xd9
 9272 08f8 00000000 		.4byte	.LFB79
 9273 08fc CC000000 		.4byte	.LFE79-.LFB79
 9274 0900 01       		.uleb128 0x1
 9275 0901 9C       		.byte	0x9c
 9276 0902 52090000 		.4byte	0x952
 9277 0906 18       		.uleb128 0x18
 9278 0907 720E0000 		.4byte	.LASF97
 9279 090b 01       		.byte	0x1
 9280 090c A106     		.2byte	0x6a1
 9281 090e D9000000 		.4byte	0xd9
 9282 0912 02       		.uleb128 0x2
 9283 0913 91       		.byte	0x91
 9284 0914 6F       		.sleb128 -17
 9285 0915 18       		.uleb128 0x18
 9286 0916 7A010000 		.4byte	.LASF98
 9287 091a 01       		.byte	0x1
 9288 091b A106     		.2byte	0x6a1
 9289 091d E5000000 		.4byte	0xe5
 9290 0921 02       		.uleb128 0x2
 9291 0922 91       		.byte	0x91
 9292 0923 6C       		.sleb128 -20
 9293 0924 18       		.uleb128 0x18
 9294 0925 B50D0000 		.4byte	.LASF99
 9295 0929 01       		.byte	0x1
 9296 092a A106     		.2byte	0x6a1
 9297 092c A2000000 		.4byte	0xa2
 9298 0930 02       		.uleb128 0x2
 9299 0931 91       		.byte	0x91
 9300 0932 6E       		.sleb128 -18
 9301 0933 17       		.uleb128 0x17
 9302 0934 EF070000 		.4byte	.LASF85
 9303 0938 01       		.byte	0x1
 9304 0939 A306     		.2byte	0x6a3
 9305 093b 2A010000 		.4byte	0x12a
 9306 093f 02       		.uleb128 0x2
 9307 0940 91       		.byte	0x91
 9308 0941 73       		.sleb128 -13
 9309 0942 17       		.uleb128 0x17
 9310 0943 470A0000 		.4byte	.LASF100
 9311 0947 01       		.byte	0x1
 9312 0948 A406     		.2byte	0x6a4
 9313 094a CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 208


 9314 094e 02       		.uleb128 0x2
 9315 094f 91       		.byte	0x91
 9316 0950 74       		.sleb128 -12
 9317 0951 00       		.byte	0
 9318 0952 15       		.uleb128 0x15
 9319 0953 920B0000 		.4byte	.LASF101
 9320 0957 01       		.byte	0x1
 9321 0958 D406     		.2byte	0x6d4
 9322 095a D9000000 		.4byte	0xd9
 9323 095e 00000000 		.4byte	.LFB80
 9324 0962 CC000000 		.4byte	.LFE80-.LFB80
 9325 0966 01       		.uleb128 0x1
 9326 0967 9C       		.byte	0x9c
 9327 0968 B8090000 		.4byte	0x9b8
 9328 096c 18       		.uleb128 0x18
 9329 096d 720E0000 		.4byte	.LASF97
 9330 0971 01       		.byte	0x1
 9331 0972 D406     		.2byte	0x6d4
 9332 0974 D9000000 		.4byte	0xd9
 9333 0978 02       		.uleb128 0x2
 9334 0979 91       		.byte	0x91
 9335 097a 6F       		.sleb128 -17
 9336 097b 18       		.uleb128 0x18
 9337 097c 7A010000 		.4byte	.LASF98
 9338 0980 01       		.byte	0x1
 9339 0981 D406     		.2byte	0x6d4
 9340 0983 D9000000 		.4byte	0xd9
 9341 0987 02       		.uleb128 0x2
 9342 0988 91       		.byte	0x91
 9343 0989 6E       		.sleb128 -18
 9344 098a 18       		.uleb128 0x18
 9345 098b B50D0000 		.4byte	.LASF99
 9346 098f 01       		.byte	0x1
 9347 0990 D406     		.2byte	0x6d4
 9348 0992 A2000000 		.4byte	0xa2
 9349 0996 02       		.uleb128 0x2
 9350 0997 91       		.byte	0x91
 9351 0998 6D       		.sleb128 -19
 9352 0999 17       		.uleb128 0x17
 9353 099a EF070000 		.4byte	.LASF85
 9354 099e 01       		.byte	0x1
 9355 099f D606     		.2byte	0x6d6
 9356 09a1 2A010000 		.4byte	0x12a
 9357 09a5 02       		.uleb128 0x2
 9358 09a6 91       		.byte	0x91
 9359 09a7 73       		.sleb128 -13
 9360 09a8 17       		.uleb128 0x17
 9361 09a9 470A0000 		.4byte	.LASF100
 9362 09ad 01       		.byte	0x1
 9363 09ae D706     		.2byte	0x6d7
 9364 09b0 CE000000 		.4byte	0xce
 9365 09b4 02       		.uleb128 0x2
 9366 09b5 91       		.byte	0x91
 9367 09b6 74       		.sleb128 -12
 9368 09b7 00       		.byte	0
 9369 09b8 14       		.uleb128 0x14
 9370 09b9 59050000 		.4byte	.LASF102
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 209


 9371 09bd 01       		.byte	0x1
 9372 09be 0207     		.2byte	0x702
 9373 09c0 00000000 		.4byte	.LFB81
 9374 09c4 30000000 		.4byte	.LFE81-.LFB81
 9375 09c8 01       		.uleb128 0x1
 9376 09c9 9C       		.byte	0x9c
 9377 09ca 1E       		.uleb128 0x1e
 9378 09cb F30D0000 		.4byte	.LASF103
 9379 09cf 01       		.byte	0x1
 9380 09d0 1107     		.2byte	0x711
 9381 09d2 00000000 		.4byte	.LFB82
 9382 09d6 E8000000 		.4byte	.LFE82-.LFB82
 9383 09da 01       		.uleb128 0x1
 9384 09db 9C       		.byte	0x9c
 9385 09dc 14       		.uleb128 0x14
 9386 09dd 26050000 		.4byte	.LASF104
 9387 09e1 01       		.byte	0x1
 9388 09e2 2607     		.2byte	0x726
 9389 09e4 00000000 		.4byte	.LFB83
 9390 09e8 54000000 		.4byte	.LFE83-.LFB83
 9391 09ec 01       		.uleb128 0x1
 9392 09ed 9C       		.byte	0x9c
 9393 09ee 14       		.uleb128 0x14
 9394 09ef 48040000 		.4byte	.LASF105
 9395 09f3 01       		.byte	0x1
 9396 09f4 3907     		.2byte	0x739
 9397 09f6 00000000 		.4byte	.LFB84
 9398 09fa C4000000 		.4byte	.LFE84-.LFB84
 9399 09fe 01       		.uleb128 0x1
 9400 09ff 9C       		.byte	0x9c
 9401 0a00 15       		.uleb128 0x15
 9402 0a01 270A0000 		.4byte	.LASF106
 9403 0a05 01       		.byte	0x1
 9404 0a06 6C07     		.2byte	0x76c
 9405 0a08 FD000000 		.4byte	0xfd
 9406 0a0c 00000000 		.4byte	.LFB85
 9407 0a10 98000000 		.4byte	.LFE85-.LFB85
 9408 0a14 01       		.uleb128 0x1
 9409 0a15 9C       		.byte	0x9c
 9410 0a16 4F0A0000 		.4byte	0xa4f
 9411 0a1a 16       		.uleb128 0x16
 9412 0a1b 5800     		.ascii	"X\000"
 9413 0a1d 01       		.byte	0x1
 9414 0a1e 6C07     		.2byte	0x76c
 9415 0a20 FD000000 		.4byte	0xfd
 9416 0a24 02       		.uleb128 0x2
 9417 0a25 91       		.byte	0x91
 9418 0a26 64       		.sleb128 -28
 9419 0a27 19       		.uleb128 0x19
 9420 0a28 5900     		.ascii	"Y\000"
 9421 0a2a 01       		.byte	0x1
 9422 0a2b 6D07     		.2byte	0x76d
 9423 0a2d FD000000 		.4byte	0xfd
 9424 0a31 02       		.uleb128 0x2
 9425 0a32 91       		.byte	0x91
 9426 0a33 70       		.sleb128 -16
 9427 0a34 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 210


 9428 0a35 4600     		.ascii	"F\000"
 9429 0a37 01       		.byte	0x1
 9430 0a38 6D07     		.2byte	0x76d
 9431 0a3a FD000000 		.4byte	0xfd
 9432 0a3e 02       		.uleb128 0x2
 9433 0a3f 91       		.byte	0x91
 9434 0a40 74       		.sleb128 -12
 9435 0a41 19       		.uleb128 0x19
 9436 0a42 4500     		.ascii	"E\000"
 9437 0a44 01       		.byte	0x1
 9438 0a45 6E07     		.2byte	0x76e
 9439 0a47 94000000 		.4byte	0x94
 9440 0a4b 02       		.uleb128 0x2
 9441 0a4c 91       		.byte	0x91
 9442 0a4d 6C       		.sleb128 -20
 9443 0a4e 00       		.byte	0
 9444 0a4f 1F       		.uleb128 0x1f
 9445 0a50 BD000000 		.4byte	.LASF108
 9446 0a54 01       		.byte	0x1
 9447 0a55 8007     		.2byte	0x780
 9448 0a57 00000000 		.4byte	.LFB86
 9449 0a5b D4000000 		.4byte	.LFE86-.LFB86
 9450 0a5f 01       		.uleb128 0x1
 9451 0a60 9C       		.byte	0x9c
 9452 0a61 AC0A0000 		.4byte	0xaac
 9453 0a65 18       		.uleb128 0x18
 9454 0a66 920A0000 		.4byte	.LASF109
 9455 0a6a 01       		.byte	0x1
 9456 0a6b 8007     		.2byte	0x780
 9457 0a6d 94000000 		.4byte	0x94
 9458 0a71 02       		.uleb128 0x2
 9459 0a72 91       		.byte	0x91
 9460 0a73 64       		.sleb128 -28
 9461 0a74 17       		.uleb128 0x17
 9462 0a75 DB0A0000 		.4byte	.LASF110
 9463 0a79 01       		.byte	0x1
 9464 0a7a 8C07     		.2byte	0x78c
 9465 0a7c B8000000 		.4byte	0xb8
 9466 0a80 02       		.uleb128 0x2
 9467 0a81 91       		.byte	0x91
 9468 0a82 76       		.sleb128 -10
 9469 0a83 11       		.uleb128 0x11
 9470 0a84 18000000 		.4byte	.LBB37
 9471 0a88 86000000 		.4byte	.LBE37-.LBB37
 9472 0a8c 17       		.uleb128 0x17
 9473 0a8d B30C0000 		.4byte	.LASF111
 9474 0a91 01       		.byte	0x1
 9475 0a92 9007     		.2byte	0x790
 9476 0a94 FD000000 		.4byte	0xfd
 9477 0a98 02       		.uleb128 0x2
 9478 0a99 91       		.byte	0x91
 9479 0a9a 70       		.sleb128 -16
 9480 0a9b 17       		.uleb128 0x17
 9481 0a9c 6B0F0000 		.4byte	.LASF112
 9482 0aa0 01       		.byte	0x1
 9483 0aa1 9F07     		.2byte	0x79f
 9484 0aa3 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 211


 9485 0aa7 02       		.uleb128 0x2
 9486 0aa8 91       		.byte	0x91
 9487 0aa9 6C       		.sleb128 -20
 9488 0aaa 00       		.byte	0
 9489 0aab 00       		.byte	0
 9490 0aac 1F       		.uleb128 0x1f
 9491 0aad B8060000 		.4byte	.LASF113
 9492 0ab1 01       		.byte	0x1
 9493 0ab2 AB07     		.2byte	0x7ab
 9494 0ab4 00000000 		.4byte	.LFB87
 9495 0ab8 1C000000 		.4byte	.LFE87-.LFB87
 9496 0abc 01       		.uleb128 0x1
 9497 0abd 9C       		.byte	0x9c
 9498 0abe E00A0000 		.4byte	0xae0
 9499 0ac2 16       		.uleb128 0x16
 9500 0ac3 636300   		.ascii	"cc\000"
 9501 0ac6 01       		.byte	0x1
 9502 0ac7 AB07     		.2byte	0x7ab
 9503 0ac9 94000000 		.4byte	0x94
 9504 0acd 02       		.uleb128 0x2
 9505 0ace 91       		.byte	0x91
 9506 0acf 74       		.sleb128 -12
 9507 0ad0 16       		.uleb128 0x16
 9508 0ad1 76616C00 		.ascii	"val\000"
 9509 0ad5 01       		.byte	0x1
 9510 0ad6 AB07     		.2byte	0x7ab
 9511 0ad8 94000000 		.4byte	0x94
 9512 0adc 02       		.uleb128 0x2
 9513 0add 91       		.byte	0x91
 9514 0ade 70       		.sleb128 -16
 9515 0adf 00       		.byte	0
 9516 0ae0 1F       		.uleb128 0x1f
 9517 0ae1 31090000 		.4byte	.LASF114
 9518 0ae5 01       		.byte	0x1
 9519 0ae6 B107     		.2byte	0x7b1
 9520 0ae8 00000000 		.4byte	.LFB88
 9521 0aec 68000000 		.4byte	.LFE88-.LFB88
 9522 0af0 01       		.uleb128 0x1
 9523 0af1 9C       		.byte	0x9c
 9524 0af2 240B0000 		.4byte	0xb24
 9525 0af6 18       		.uleb128 0x18
 9526 0af7 E5020000 		.4byte	.LASF115
 9527 0afb 01       		.byte	0x1
 9528 0afc B107     		.2byte	0x7b1
 9529 0afe 94000000 		.4byte	0x94
 9530 0b02 02       		.uleb128 0x2
 9531 0b03 91       		.byte	0x91
 9532 0b04 74       		.sleb128 -12
 9533 0b05 18       		.uleb128 0x18
 9534 0b06 DB0A0000 		.4byte	.LASF110
 9535 0b0a 01       		.byte	0x1
 9536 0b0b B107     		.2byte	0x7b1
 9537 0b0d 94000000 		.4byte	0x94
 9538 0b11 02       		.uleb128 0x2
 9539 0b12 91       		.byte	0x91
 9540 0b13 70       		.sleb128 -16
 9541 0b14 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 212


 9542 0b15 12080000 		.4byte	.LASF116
 9543 0b19 01       		.byte	0x1
 9544 0b1a B107     		.2byte	0x7b1
 9545 0b1c 94000000 		.4byte	0x94
 9546 0b20 02       		.uleb128 0x2
 9547 0b21 91       		.byte	0x91
 9548 0b22 6C       		.sleb128 -20
 9549 0b23 00       		.byte	0
 9550 0b24 1F       		.uleb128 0x1f
 9551 0b25 A5050000 		.4byte	.LASF117
 9552 0b29 01       		.byte	0x1
 9553 0b2a BE07     		.2byte	0x7be
 9554 0b2c 00000000 		.4byte	.LFB89
 9555 0b30 68000000 		.4byte	.LFE89-.LFB89
 9556 0b34 01       		.uleb128 0x1
 9557 0b35 9C       		.byte	0x9c
 9558 0b36 680B0000 		.4byte	0xb68
 9559 0b3a 18       		.uleb128 0x18
 9560 0b3b E5020000 		.4byte	.LASF115
 9561 0b3f 01       		.byte	0x1
 9562 0b40 BE07     		.2byte	0x7be
 9563 0b42 94000000 		.4byte	0x94
 9564 0b46 02       		.uleb128 0x2
 9565 0b47 91       		.byte	0x91
 9566 0b48 74       		.sleb128 -12
 9567 0b49 18       		.uleb128 0x18
 9568 0b4a 98040000 		.4byte	.LASF118
 9569 0b4e 01       		.byte	0x1
 9570 0b4f BE07     		.2byte	0x7be
 9571 0b51 94000000 		.4byte	0x94
 9572 0b55 02       		.uleb128 0x2
 9573 0b56 91       		.byte	0x91
 9574 0b57 70       		.sleb128 -16
 9575 0b58 18       		.uleb128 0x18
 9576 0b59 12080000 		.4byte	.LASF116
 9577 0b5d 01       		.byte	0x1
 9578 0b5e BE07     		.2byte	0x7be
 9579 0b60 94000000 		.4byte	0x94
 9580 0b64 02       		.uleb128 0x2
 9581 0b65 91       		.byte	0x91
 9582 0b66 6C       		.sleb128 -20
 9583 0b67 00       		.byte	0
 9584 0b68 1F       		.uleb128 0x1f
 9585 0b69 CA050000 		.4byte	.LASF119
 9586 0b6d 01       		.byte	0x1
 9587 0b6e CA07     		.2byte	0x7ca
 9588 0b70 00000000 		.4byte	.LFB90
 9589 0b74 68000000 		.4byte	.LFE90-.LFB90
 9590 0b78 01       		.uleb128 0x1
 9591 0b79 9C       		.byte	0x9c
 9592 0b7a AC0B0000 		.4byte	0xbac
 9593 0b7e 18       		.uleb128 0x18
 9594 0b7f A5010000 		.4byte	.LASF120
 9595 0b83 01       		.byte	0x1
 9596 0b84 CA07     		.2byte	0x7ca
 9597 0b86 94000000 		.4byte	0x94
 9598 0b8a 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 213


 9599 0b8b 91       		.byte	0x91
 9600 0b8c 74       		.sleb128 -12
 9601 0b8d 18       		.uleb128 0x18
 9602 0b8e F2000000 		.4byte	.LASF121
 9603 0b92 01       		.byte	0x1
 9604 0b93 CA07     		.2byte	0x7ca
 9605 0b95 94000000 		.4byte	0x94
 9606 0b99 02       		.uleb128 0x2
 9607 0b9a 91       		.byte	0x91
 9608 0b9b 70       		.sleb128 -16
 9609 0b9c 18       		.uleb128 0x18
 9610 0b9d 12080000 		.4byte	.LASF116
 9611 0ba1 01       		.byte	0x1
 9612 0ba2 CA07     		.2byte	0x7ca
 9613 0ba4 94000000 		.4byte	0x94
 9614 0ba8 02       		.uleb128 0x2
 9615 0ba9 91       		.byte	0x91
 9616 0baa 6C       		.sleb128 -20
 9617 0bab 00       		.byte	0
 9618 0bac 1F       		.uleb128 0x1f
 9619 0bad 990A0000 		.4byte	.LASF122
 9620 0bb1 01       		.byte	0x1
 9621 0bb2 D607     		.2byte	0x7d6
 9622 0bb4 00000000 		.4byte	.LFB91
 9623 0bb8 6C000000 		.4byte	.LFE91-.LFB91
 9624 0bbc 01       		.uleb128 0x1
 9625 0bbd 9C       		.byte	0x9c
 9626 0bbe E10B0000 		.4byte	0xbe1
 9627 0bc2 16       		.uleb128 0x16
 9628 0bc3 76616C00 		.ascii	"val\000"
 9629 0bc7 01       		.byte	0x1
 9630 0bc8 D607     		.2byte	0x7d6
 9631 0bca 94000000 		.4byte	0x94
 9632 0bce 02       		.uleb128 0x2
 9633 0bcf 91       		.byte	0x91
 9634 0bd0 74       		.sleb128 -12
 9635 0bd1 18       		.uleb128 0x18
 9636 0bd2 12080000 		.4byte	.LASF116
 9637 0bd6 01       		.byte	0x1
 9638 0bd7 D607     		.2byte	0x7d6
 9639 0bd9 94000000 		.4byte	0x94
 9640 0bdd 02       		.uleb128 0x2
 9641 0bde 91       		.byte	0x91
 9642 0bdf 70       		.sleb128 -16
 9643 0be0 00       		.byte	0
 9644 0be1 14       		.uleb128 0x14
 9645 0be2 F1020000 		.4byte	.LASF123
 9646 0be6 01       		.byte	0x1
 9647 0be7 E207     		.2byte	0x7e2
 9648 0be9 00000000 		.4byte	.LFB92
 9649 0bed 64000000 		.4byte	.LFE92-.LFB92
 9650 0bf1 01       		.uleb128 0x1
 9651 0bf2 9C       		.byte	0x9c
 9652 0bf3 1F       		.uleb128 0x1f
 9653 0bf4 C0060000 		.4byte	.LASF124
 9654 0bf8 01       		.byte	0x1
 9655 0bf9 FA07     		.2byte	0x7fa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 214


 9656 0bfb 00000000 		.4byte	.LFB93
 9657 0bff 68080000 		.4byte	.LFE93-.LFB93
 9658 0c03 01       		.uleb128 0x1
 9659 0c04 9C       		.byte	0x9c
 9660 0c05 9E0D0000 		.4byte	0xd9e
 9661 0c09 1D       		.uleb128 0x1d
 9662 0c0a 16000000 		.4byte	.LBB38
 9663 0c0e 3C050000 		.4byte	.LBE38-.LBB38
 9664 0c12 B90C0000 		.4byte	0xcb9
 9665 0c16 17       		.uleb128 0x17
 9666 0c17 FD010000 		.4byte	.LASF125
 9667 0c1b 01       		.byte	0x1
 9668 0c1c 0508     		.2byte	0x805
 9669 0c1e 7C020000 		.4byte	0x27c
 9670 0c22 02       		.uleb128 0x2
 9671 0c23 91       		.byte	0x91
 9672 0c24 40       		.sleb128 -64
 9673 0c25 19       		.uleb128 0x19
 9674 0c26 6900     		.ascii	"i\000"
 9675 0c28 01       		.byte	0x1
 9676 0c29 0608     		.2byte	0x806
 9677 0c2b CE000000 		.4byte	0xce
 9678 0c2f 02       		.uleb128 0x2
 9679 0c30 91       		.byte	0x91
 9680 0c31 6C       		.sleb128 -20
 9681 0c32 17       		.uleb128 0x17
 9682 0c33 70040000 		.4byte	.LASF126
 9683 0c37 01       		.byte	0x1
 9684 0c38 0708     		.2byte	0x807
 9685 0c3a A2000000 		.4byte	0xa2
 9686 0c3e 02       		.uleb128 0x2
 9687 0c3f 91       		.byte	0x91
 9688 0c40 57       		.sleb128 -41
 9689 0c41 17       		.uleb128 0x17
 9690 0c42 06040000 		.4byte	.LASF127
 9691 0c46 01       		.byte	0x1
 9692 0c47 1B08     		.2byte	0x81b
 9693 0c49 B8000000 		.4byte	0xb8
 9694 0c4d 02       		.uleb128 0x2
 9695 0c4e 91       		.byte	0x91
 9696 0c4f 54       		.sleb128 -44
 9697 0c50 1D       		.uleb128 0x1d
 9698 0c51 8E000000 		.4byte	.LBB39
 9699 0c55 76000000 		.4byte	.LBE39-.LBB39
 9700 0c59 820C0000 		.4byte	0xc82
 9701 0c5d 19       		.uleb128 0x19
 9702 0c5e 6A00     		.ascii	"j\000"
 9703 0c60 01       		.byte	0x1
 9704 0c61 1108     		.2byte	0x811
 9705 0c63 94000000 		.4byte	0x94
 9706 0c67 02       		.uleb128 0x2
 9707 0c68 91       		.byte	0x91
 9708 0c69 68       		.sleb128 -24
 9709 0c6a 11       		.uleb128 0x11
 9710 0c6b 94000000 		.4byte	.LBB40
 9711 0c6f 64000000 		.4byte	.LBE40-.LBB40
 9712 0c73 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 215


 9713 0c74 6B00     		.ascii	"k\000"
 9714 0c76 01       		.byte	0x1
 9715 0c77 1308     		.2byte	0x813
 9716 0c79 94000000 		.4byte	0x94
 9717 0c7d 02       		.uleb128 0x2
 9718 0c7e 91       		.byte	0x91
 9719 0c7f 64       		.sleb128 -28
 9720 0c80 00       		.byte	0
 9721 0c81 00       		.byte	0
 9722 0c82 1D       		.uleb128 0x1d
 9723 0c83 D6010000 		.4byte	.LBB41
 9724 0c87 46000000 		.4byte	.LBE41-.LBB41
 9725 0c8b 9F0C0000 		.4byte	0xc9f
 9726 0c8f 17       		.uleb128 0x17
 9727 0c90 E5010000 		.4byte	.LASF128
 9728 0c94 01       		.byte	0x1
 9729 0c95 3308     		.2byte	0x833
 9730 0c97 B8000000 		.4byte	0xb8
 9731 0c9b 02       		.uleb128 0x2
 9732 0c9c 91       		.byte	0x91
 9733 0c9d 52       		.sleb128 -46
 9734 0c9e 00       		.byte	0
 9735 0c9f 11       		.uleb128 0x11
 9736 0ca0 06040000 		.4byte	.LBB42
 9737 0ca4 54000000 		.4byte	.LBE42-.LBB42
 9738 0ca8 17       		.uleb128 0x17
 9739 0ca9 E5010000 		.4byte	.LASF128
 9740 0cad 01       		.byte	0x1
 9741 0cae 6F08     		.2byte	0x86f
 9742 0cb0 AD000000 		.4byte	0xad
 9743 0cb4 02       		.uleb128 0x2
 9744 0cb5 91       		.byte	0x91
 9745 0cb6 50       		.sleb128 -48
 9746 0cb7 00       		.byte	0
 9747 0cb8 00       		.byte	0
 9748 0cb9 11       		.uleb128 0x11
 9749 0cba 5C050000 		.4byte	.LBB43
 9750 0cbe BE020000 		.4byte	.LBE43-.LBB43
 9751 0cc2 17       		.uleb128 0x17
 9752 0cc3 FD010000 		.4byte	.LASF125
 9753 0cc7 01       		.byte	0x1
 9754 0cc8 C808     		.2byte	0x8c8
 9755 0cca 7C020000 		.4byte	0x27c
 9756 0cce 03       		.uleb128 0x3
 9757 0ccf 91       		.byte	0x91
 9758 0cd0 BC7F     		.sleb128 -68
 9759 0cd2 19       		.uleb128 0x19
 9760 0cd3 6900     		.ascii	"i\000"
 9761 0cd5 01       		.byte	0x1
 9762 0cd6 C908     		.2byte	0x8c9
 9763 0cd8 CE000000 		.4byte	0xce
 9764 0cdc 02       		.uleb128 0x2
 9765 0cdd 91       		.byte	0x91
 9766 0cde 60       		.sleb128 -32
 9767 0cdf 17       		.uleb128 0x17
 9768 0ce0 70040000 		.4byte	.LASF126
 9769 0ce4 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 216


 9770 0ce5 CA08     		.2byte	0x8ca
 9771 0ce7 A2000000 		.4byte	0xa2
 9772 0ceb 02       		.uleb128 0x2
 9773 0cec 91       		.byte	0x91
 9774 0ced 4F       		.sleb128 -49
 9775 0cee 1D       		.uleb128 0x1d
 9776 0cef 8E050000 		.4byte	.LBB44
 9777 0cf3 7C000000 		.4byte	.LBE44-.LBB44
 9778 0cf7 0B0D0000 		.4byte	0xd0b
 9779 0cfb 17       		.uleb128 0x17
 9780 0cfc 340D0000 		.4byte	.LASF129
 9781 0d00 01       		.byte	0x1
 9782 0d01 CE08     		.2byte	0x8ce
 9783 0d03 A2000000 		.4byte	0xa2
 9784 0d07 02       		.uleb128 0x2
 9785 0d08 91       		.byte	0x91
 9786 0d09 4E       		.sleb128 -50
 9787 0d0a 00       		.byte	0
 9788 0d0b 11       		.uleb128 0x11
 9789 0d0c 1E060000 		.4byte	.LBB45
 9790 0d10 B0010000 		.4byte	.LBE45-.LBB45
 9791 0d14 17       		.uleb128 0x17
 9792 0d15 DB0D0000 		.4byte	.LASF130
 9793 0d19 01       		.byte	0x1
 9794 0d1a D908     		.2byte	0x8d9
 9795 0d1c CE000000 		.4byte	0xce
 9796 0d20 02       		.uleb128 0x2
 9797 0d21 91       		.byte	0x91
 9798 0d22 5C       		.sleb128 -36
 9799 0d23 11       		.uleb128 0x11
 9800 0d24 24060000 		.4byte	.LBB46
 9801 0d28 9C010000 		.4byte	.LBE46-.LBB46
 9802 0d2c 17       		.uleb128 0x17
 9803 0d2d 21040000 		.4byte	.LASF81
 9804 0d31 01       		.byte	0x1
 9805 0d32 DB08     		.2byte	0x8db
 9806 0d34 B8000000 		.4byte	0xb8
 9807 0d38 02       		.uleb128 0x2
 9808 0d39 91       		.byte	0x91
 9809 0d3a 4C       		.sleb128 -52
 9810 0d3b 11       		.uleb128 0x11
 9811 0d3c 32060000 		.4byte	.LBB47
 9812 0d40 8E010000 		.4byte	.LBE47-.LBB47
 9813 0d44 17       		.uleb128 0x17
 9814 0d45 BD050000 		.4byte	.LASF131
 9815 0d49 01       		.byte	0x1
 9816 0d4a DC08     		.2byte	0x8dc
 9817 0d4c CE000000 		.4byte	0xce
 9818 0d50 02       		.uleb128 0x2
 9819 0d51 91       		.byte	0x91
 9820 0d52 58       		.sleb128 -40
 9821 0d53 11       		.uleb128 0x11
 9822 0d54 8C060000 		.4byte	.LBB48
 9823 0d58 26010000 		.4byte	.LBE48-.LBB48
 9824 0d5c 17       		.uleb128 0x17
 9825 0d5d D4030000 		.4byte	.LASF132
 9826 0d61 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 217


 9827 0d62 E608     		.2byte	0x8e6
 9828 0d64 B8000000 		.4byte	0xb8
 9829 0d68 02       		.uleb128 0x2
 9830 0d69 91       		.byte	0x91
 9831 0d6a 4A       		.sleb128 -54
 9832 0d6b 17       		.uleb128 0x17
 9833 0d6c 270C0000 		.4byte	.LASF133
 9834 0d70 01       		.byte	0x1
 9835 0d71 E708     		.2byte	0x8e7
 9836 0d73 A2000000 		.4byte	0xa2
 9837 0d77 02       		.uleb128 0x2
 9838 0d78 91       		.byte	0x91
 9839 0d79 49       		.sleb128 -55
 9840 0d7a 17       		.uleb128 0x17
 9841 0d7b 21010000 		.4byte	.LASF134
 9842 0d7f 01       		.byte	0x1
 9843 0d80 E808     		.2byte	0x8e8
 9844 0d82 A2000000 		.4byte	0xa2
 9845 0d86 02       		.uleb128 0x2
 9846 0d87 91       		.byte	0x91
 9847 0d88 48       		.sleb128 -56
 9848 0d89 17       		.uleb128 0x17
 9849 0d8a 59030000 		.4byte	.LASF82
 9850 0d8e 01       		.byte	0x1
 9851 0d8f EB08     		.2byte	0x8eb
 9852 0d91 B8000000 		.4byte	0xb8
 9853 0d95 02       		.uleb128 0x2
 9854 0d96 91       		.byte	0x91
 9855 0d97 46       		.sleb128 -58
 9856 0d98 00       		.byte	0
 9857 0d99 00       		.byte	0
 9858 0d9a 00       		.byte	0
 9859 0d9b 00       		.byte	0
 9860 0d9c 00       		.byte	0
 9861 0d9d 00       		.byte	0
 9862 0d9e 1F       		.uleb128 0x1f
 9863 0d9f 86030000 		.4byte	.LASF135
 9864 0da3 01       		.byte	0x1
 9865 0da4 1509     		.2byte	0x915
 9866 0da6 00000000 		.4byte	.LFB94
 9867 0daa 3C010000 		.4byte	.LFE94-.LFB94
 9868 0dae 01       		.uleb128 0x1
 9869 0daf 9C       		.byte	0x9c
 9870 0db0 EA0D0000 		.4byte	0xdea
 9871 0db4 18       		.uleb128 0x18
 9872 0db5 C70A0000 		.4byte	.LASF136
 9873 0db9 01       		.byte	0x1
 9874 0dba 1509     		.2byte	0x915
 9875 0dbc D9000000 		.4byte	0xd9
 9876 0dc0 02       		.uleb128 0x2
 9877 0dc1 91       		.byte	0x91
 9878 0dc2 6F       		.sleb128 -17
 9879 0dc3 18       		.uleb128 0x18
 9880 0dc4 EA0B0000 		.4byte	.LASF137
 9881 0dc8 01       		.byte	0x1
 9882 0dc9 1509     		.2byte	0x915
 9883 0dcb EA0D0000 		.4byte	0xdea
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 218


 9884 0dcf 02       		.uleb128 0x2
 9885 0dd0 91       		.byte	0x91
 9886 0dd1 68       		.sleb128 -24
 9887 0dd2 11       		.uleb128 0x11
 9888 0dd3 48000000 		.4byte	.LBB49
 9889 0dd7 54000000 		.4byte	.LBE49-.LBB49
 9890 0ddb 19       		.uleb128 0x19
 9891 0ddc 6900     		.ascii	"i\000"
 9892 0dde 01       		.byte	0x1
 9893 0ddf 2109     		.2byte	0x921
 9894 0de1 94000000 		.4byte	0x94
 9895 0de5 02       		.uleb128 0x2
 9896 0de6 91       		.byte	0x91
 9897 0de7 74       		.sleb128 -12
 9898 0de8 00       		.byte	0
 9899 0de9 00       		.byte	0
 9900 0dea 20       		.uleb128 0x20
 9901 0deb 04       		.byte	0x4
 9902 0dec D9000000 		.4byte	0xd9
 9903 0df0 07       		.uleb128 0x7
 9904 0df1 D9000000 		.4byte	0xd9
 9905 0df5 000E0000 		.4byte	0xe00
 9906 0df9 08       		.uleb128 0x8
 9907 0dfa 36010000 		.4byte	0x136
 9908 0dfe 01       		.byte	0x1
 9909 0dff 00       		.byte	0
 9910 0e00 21       		.uleb128 0x21
 9911 0e01 D4040000 		.4byte	.LASF138
 9912 0e05 01       		.byte	0x1
 9913 0e06 DE       		.byte	0xde
 9914 0e07 F00D0000 		.4byte	0xdf0
 9915 0e0b 05       		.uleb128 0x5
 9916 0e0c 03       		.byte	0x3
 9917 0e0d 60000000 		.4byte	eepromArray
 9918 0e11 22       		.uleb128 0x22
 9919 0e12 500E0000 		.4byte	.LASF139
 9920 0e16 08       		.byte	0x8
 9921 0e17 F3       		.byte	0xf3
 9922 0e18 2A010000 		.4byte	0x12a
 9923 0e1c 22       		.uleb128 0x22
 9924 0e1d DA0E0000 		.4byte	.LASF140
 9925 0e21 08       		.byte	0x8
 9926 0e22 F9       		.byte	0xf9
 9927 0e23 2A010000 		.4byte	0x12a
 9928 0e27 07       		.uleb128 0x7
 9929 0e28 D9000000 		.4byte	0xd9
 9930 0e2c 370E0000 		.4byte	0xe37
 9931 0e30 08       		.uleb128 0x8
 9932 0e31 36010000 		.4byte	0x136
 9933 0e35 3F       		.byte	0x3f
 9934 0e36 00       		.byte	0
 9935 0e37 22       		.uleb128 0x22
 9936 0e38 92080000 		.4byte	.LASF141
 9937 0e3c 08       		.byte	0x8
 9938 0e3d FA       		.byte	0xfa
 9939 0e3e 270E0000 		.4byte	0xe27
 9940 0e42 22       		.uleb128 0x22
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 219


 9941 0e43 3F050000 		.4byte	.LASF142
 9942 0e47 08       		.byte	0x8
 9943 0e48 FE       		.byte	0xfe
 9944 0e49 2A010000 		.4byte	0x12a
 9945 0e4d 22       		.uleb128 0x22
 9946 0e4e 950E0000 		.4byte	.LASF143
 9947 0e52 08       		.byte	0x8
 9948 0e53 FF       		.byte	0xff
 9949 0e54 270E0000 		.4byte	0xe27
 9950 0e58 22       		.uleb128 0x22
 9951 0e59 A1000000 		.4byte	.LASF144
 9952 0e5d 09       		.byte	0x9
 9953 0e5e 82       		.byte	0x82
 9954 0e5f BF010000 		.4byte	0x1bf
 9955 0e63 07       		.uleb128 0x7
 9956 0e64 740E0000 		.4byte	0xe74
 9957 0e68 740E0000 		.4byte	0xe74
 9958 0e6c 23       		.uleb128 0x23
 9959 0e6d 36010000 		.4byte	0x136
 9960 0e71 FF03     		.2byte	0x3ff
 9961 0e73 00       		.byte	0
 9962 0e74 24       		.uleb128 0x24
 9963 0e75 A2000000 		.4byte	0xa2
 9964 0e79 25       		.uleb128 0x25
 9965 0e7a BA070000 		.4byte	.LASF145
 9966 0e7e 01       		.byte	0x1
 9967 0e7f EB       		.byte	0xeb
 9968 0e80 8A0E0000 		.4byte	0xe8a
 9969 0e84 05       		.uleb128 0x5
 9970 0e85 03       		.byte	0x3
 9971 0e86 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 9972 0e8a 24       		.uleb128 0x24
 9973 0e8b 630E0000 		.4byte	0xe63
 9974 0e8f 22       		.uleb128 0x22
 9975 0e90 13060000 		.4byte	.LASF146
 9976 0e94 0A       		.byte	0xa
 9977 0e95 F9       		.byte	0xf9
 9978 0e96 D9000000 		.4byte	0xd9
 9979 0e9a 26       		.uleb128 0x26
 9980 0e9b 340A0000 		.4byte	.LASF147
 9981 0e9f 0B       		.byte	0xb
 9982 0ea0 1207     		.2byte	0x712
 9983 0ea2 A60E0000 		.4byte	0xea6
 9984 0ea6 06       		.uleb128 0x6
 9985 0ea7 C3000000 		.4byte	0xc3
 9986 0eab 07       		.uleb128 0x7
 9987 0eac 03020000 		.4byte	0x203
 9988 0eb0 BB0E0000 		.4byte	0xebb
 9989 0eb4 08       		.uleb128 0x8
 9990 0eb5 36010000 		.4byte	0x136
 9991 0eb9 FF       		.byte	0xff
 9992 0eba 00       		.byte	0
 9993 0ebb 27       		.uleb128 0x27
 9994 0ebc 04010000 		.4byte	.LASF148
 9995 0ec0 01       		.byte	0x1
 9996 0ec1 5301     		.2byte	0x153
 9997 0ec3 CD0E0000 		.4byte	0xecd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 220


 9998 0ec7 05       		.uleb128 0x5
 9999 0ec8 03       		.byte	0x3
 10000 0ec9 00000000 		.4byte	I2Cbuff1
 10001 0ecd 06       		.uleb128 0x6
 10002 0ece AB0E0000 		.4byte	0xeab
 10003 0ed2 07       		.uleb128 0x7
 10004 0ed3 A2000000 		.4byte	0xa2
 10005 0ed7 E30E0000 		.4byte	0xee3
 10006 0edb 23       		.uleb128 0x23
 10007 0edc 36010000 		.4byte	0x136
 10008 0ee0 FF07     		.2byte	0x7ff
 10009 0ee2 00       		.byte	0
 10010 0ee3 25       		.uleb128 0x25
 10011 0ee4 0F0D0000 		.4byte	.LASF149
 10012 0ee8 01       		.byte	0x1
 10013 0ee9 17       		.byte	0x17
 10014 0eea D20E0000 		.4byte	0xed2
 10015 0eee 05       		.uleb128 0x5
 10016 0eef 03       		.byte	0x3
 10017 0ef0 00000000 		.4byte	sysexBuffer
 10018 0ef4 25       		.uleb128 0x25
 10019 0ef5 44030000 		.4byte	.LASF150
 10020 0ef9 01       		.byte	0x1
 10021 0efa 18       		.byte	0x18
 10022 0efb CE000000 		.4byte	0xce
 10023 0eff 05       		.uleb128 0x5
 10024 0f00 03       		.byte	0x3
 10025 0f01 00000000 		.4byte	sysexPointer
 10026 0f05 25       		.uleb128 0x25
 10027 0f06 B80A0000 		.4byte	.LASF151
 10028 0f0a 01       		.byte	0x1
 10029 0f0b 19       		.byte	0x19
 10030 0f0c A2000000 		.4byte	0xa2
 10031 0f10 05       		.uleb128 0x5
 10032 0f11 03       		.byte	0x3
 10033 0f12 00000000 		.4byte	receivingSysex
 10034 0f16 25       		.uleb128 0x25
 10035 0f17 2C060000 		.4byte	.LASF152
 10036 0f1b 01       		.byte	0x1
 10037 0f1c 1A       		.byte	0x1a
 10038 0f1d A2000000 		.4byte	0xa2
 10039 0f21 05       		.uleb128 0x5
 10040 0f22 03       		.byte	0x3
 10041 0f23 00000000 		.4byte	parsingSysex
 10042 0f27 07       		.uleb128 0x7
 10043 0f28 03020000 		.4byte	0x203
 10044 0f2c 380F0000 		.4byte	0xf38
 10045 0f30 23       		.uleb128 0x23
 10046 0f31 36010000 		.4byte	0x136
 10047 0f35 FF07     		.2byte	0x7ff
 10048 0f37 00       		.byte	0
 10049 0f38 25       		.uleb128 0x25
 10050 0f39 13000000 		.4byte	.LASF153
 10051 0f3d 01       		.byte	0x1
 10052 0f3e 1B       		.byte	0x1b
 10053 0f3f 490F0000 		.4byte	0xf49
 10054 0f43 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 221


 10055 0f44 03       		.byte	0x3
 10056 0f45 00000000 		.4byte	presetArray
 10057 0f49 06       		.uleb128 0x6
 10058 0f4a 270F0000 		.4byte	0xf27
 10059 0f4e 25       		.uleb128 0x25
 10060 0f4f 90020000 		.4byte	.LASF154
 10061 0f53 01       		.byte	0x1
 10062 0f54 1C       		.byte	0x1c
 10063 0f55 A2000000 		.4byte	0xa2
 10064 0f59 05       		.uleb128 0x5
 10065 0f5a 03       		.byte	0x3
 10066 0f5b 00000000 		.4byte	presetNumberToWrite
 10067 0f5f 25       		.uleb128 0x25
 10068 0f60 840C0000 		.4byte	.LASF155
 10069 0f64 01       		.byte	0x1
 10070 0f65 1D       		.byte	0x1d
 10071 0f66 A2000000 		.4byte	0xa2
 10072 0f6a 05       		.uleb128 0x5
 10073 0f6b 03       		.byte	0x3
 10074 0f6c 00000000 		.4byte	copedentNumberToWrite
 10075 0f70 25       		.uleb128 0x25
 10076 0f71 35020000 		.4byte	.LASF156
 10077 0f75 01       		.byte	0x1
 10078 0f76 1E       		.byte	0x1e
 10079 0f77 A2000000 		.4byte	0xa2
 10080 0f7b 05       		.uleb128 0x5
 10081 0f7c 03       		.byte	0x3
 10082 0f7d 00000000 		.4byte	sendMessageEnd
 10083 0f81 25       		.uleb128 0x25
 10084 0f82 00000000 		.4byte	.LASF157
 10085 0f86 01       		.byte	0x1
 10086 0f87 28       		.byte	0x28
 10087 0f88 A2000000 		.4byte	0xa2
 10088 0f8c 05       		.uleb128 0x5
 10089 0f8d 03       		.byte	0x3
 10090 0f8e 00000000 		.4byte	presetArraySection
 10091 0f92 25       		.uleb128 0x25
 10092 0f93 84090000 		.4byte	.LASF158
 10093 0f97 01       		.byte	0x1
 10094 0f98 2A       		.byte	0x2a
 10095 0f99 B8000000 		.4byte	0xb8
 10096 0f9d 05       		.uleb128 0x5
 10097 0f9e 03       		.byte	0x3
 10098 0f9f 00000000 		.4byte	messageArraySendCount
 10099 0fa3 25       		.uleb128 0x25
 10100 0fa4 930D0000 		.4byte	.LASF159
 10101 0fa8 01       		.byte	0x1
 10102 0fa9 2B       		.byte	0x2b
 10103 0faa B8000000 		.4byte	0xb8
 10104 0fae 05       		.uleb128 0x5
 10105 0faf 03       		.byte	0x3
 10106 0fb0 00000000 		.4byte	messageArraySize
 10107 0fb4 25       		.uleb128 0x25
 10108 0fb5 A1060000 		.4byte	.LASF160
 10109 0fb9 01       		.byte	0x1
 10110 0fba 2D       		.byte	0x2d
 10111 0fbb A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 222


 10112 0fbf 05       		.uleb128 0x5
 10113 0fc0 03       		.byte	0x3
 10114 0fc1 00000000 		.4byte	sysexMessageInProgress
 10115 0fc5 25       		.uleb128 0x25
 10116 0fc6 1B0D0000 		.4byte	.LASF161
 10117 0fca 01       		.byte	0x1
 10118 0fcb 2F       		.byte	0x2f
 10119 0fcc A2000000 		.4byte	0xa2
 10120 0fd0 05       		.uleb128 0x5
 10121 0fd1 03       		.byte	0x3
 10122 0fd2 00000000 		.4byte	bufCount
 10123 0fd6 25       		.uleb128 0x25
 10124 0fd7 33000000 		.4byte	.LASF162
 10125 0fdb 01       		.byte	0x1
 10126 0fdc 30       		.byte	0x30
 10127 0fdd 03020000 		.4byte	0x203
 10128 0fe1 05       		.uleb128 0x5
 10129 0fe2 03       		.byte	0x3
 10130 0fe3 00000000 		.4byte	sendingMessage
 10131 0fe7 25       		.uleb128 0x25
 10132 0fe8 1C030000 		.4byte	.LASF163
 10133 0fec 01       		.byte	0x1
 10134 0fed 31       		.byte	0x31
 10135 0fee 03020000 		.4byte	0x203
 10136 0ff2 05       		.uleb128 0x5
 10137 0ff3 03       		.byte	0x3
 10138 0ff4 00000000 		.4byte	sendKnobs
 10139 0ff8 25       		.uleb128 0x25
 10140 0ff9 6E020000 		.4byte	.LASF164
 10141 0ffd 01       		.byte	0x1
 10142 0ffe 32       		.byte	0x32
 10143 0fff CE000000 		.4byte	0xce
 10144 1003 05       		.uleb128 0x5
 10145 1004 03       		.byte	0x3
 10146 1005 00000000 		.4byte	currentFloat
 10147 1009 25       		.uleb128 0x25
 10148 100a CB030000 		.4byte	.LASF165
 10149 100e 01       		.byte	0x1
 10150 100f 33       		.byte	0x33
 10151 1010 CE000000 		.4byte	0xce
 10152 1014 05       		.uleb128 0x5
 10153 1015 03       		.byte	0x3
 10154 1016 00000000 		.4byte	mapCount
 10155 101a 25       		.uleb128 0x25
 10156 101b 94010000 		.4byte	.LASF166
 10157 101f 01       		.byte	0x1
 10158 1020 35       		.byte	0x35
 10159 1021 B8000000 		.4byte	0xb8
 10160 1025 05       		.uleb128 0x5
 10161 1026 03       		.byte	0x3
 10162 1027 00000000 		.4byte	valsCount
 10163 102b 25       		.uleb128 0x25
 10164 102c 54040000 		.4byte	.LASF167
 10165 1030 01       		.byte	0x1
 10166 1031 36       		.byte	0x36
 10167 1032 B8000000 		.4byte	0xb8
 10168 1036 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 223


 10169 1037 03       		.byte	0x3
 10170 1038 00000000 		.4byte	mapCountExpectation
 10171 103c 25       		.uleb128 0x25
 10172 103d F8000000 		.4byte	.LASF168
 10173 1041 01       		.byte	0x1
 10174 1042 37       		.byte	0x37
 10175 1043 B8000000 		.4byte	0xb8
 10176 1047 05       		.uleb128 0x5
 10177 1048 03       		.byte	0x3
 10178 1049 00000000 		.4byte	numMappings
 10179 104d 25       		.uleb128 0x25
 10180 104e D70C0000 		.4byte	.LASF169
 10181 1052 01       		.byte	0x1
 10182 1053 38       		.byte	0x38
 10183 1054 03020000 		.4byte	0x203
 10184 1058 05       		.uleb128 0x5
 10185 1059 03       		.byte	0x3
 10186 105a 00000000 		.4byte	parseThatMF
 10187 105e 25       		.uleb128 0x25
 10188 105f FD030000 		.4byte	.LASF170
 10189 1063 01       		.byte	0x1
 10190 1064 39       		.byte	0x39
 10191 1065 6F100000 		.4byte	0x106f
 10192 1069 05       		.uleb128 0x5
 10193 106a 03       		.byte	0x3
 10194 106b 00000000 		.4byte	valCheck
 10195 106f 06       		.uleb128 0x6
 10196 1070 FD000000 		.4byte	0xfd
 10197 1074 25       		.uleb128 0x25
 10198 1075 300C0000 		.4byte	.LASF171
 10199 1079 01       		.byte	0x1
 10200 107a 3A       		.byte	0x3a
 10201 107b 6F100000 		.4byte	0x106f
 10202 107f 05       		.uleb128 0x5
 10203 1080 03       		.byte	0x3
 10204 1081 00000000 		.4byte	testVal
 10205 1085 25       		.uleb128 0x25
 10206 1086 38080000 		.4byte	.LASF172
 10207 108a 01       		.byte	0x1
 10208 108b 3C       		.byte	0x3c
 10209 108c 94000000 		.4byte	0x94
 10210 1090 05       		.uleb128 0x5
 10211 1091 03       		.byte	0x3
 10212 1092 00000000 		.4byte	numStrings
 10213 1096 25       		.uleb128 0x25
 10214 1097 BB0C0000 		.4byte	.LASF173
 10215 109b 01       		.byte	0x1
 10216 109c 42       		.byte	0x42
 10217 109d 2A010000 		.4byte	0x12a
 10218 10a1 05       		.uleb128 0x5
 10219 10a2 03       		.byte	0x3
 10220 10a3 00000000 		.4byte	usbActivityCounter
 10221 10a7 25       		.uleb128 0x25
 10222 10a8 EA0B0000 		.4byte	.LASF137
 10223 10ac 01       		.byte	0x1
 10224 10ad 43       		.byte	0x43
 10225 10ae 3D010000 		.4byte	0x13d
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 224


 10226 10b2 05       		.uleb128 0x5
 10227 10b3 03       		.byte	0x3
 10228 10b4 00000000 		.4byte	midiMsg
 10229 10b8 25       		.uleb128 0x25
 10230 10b9 1E0F0000 		.4byte	.LASF174
 10231 10bd 01       		.byte	0x1
 10232 10be 44       		.byte	0x44
 10233 10bf A2000000 		.4byte	0xa2
 10234 10c3 05       		.uleb128 0x5
 10235 10c4 03       		.byte	0x3
 10236 10c5 00000000 		.4byte	currentVBUS
 10237 10c9 25       		.uleb128 0x25
 10238 10ca 0F0F0000 		.4byte	.LASF175
 10239 10ce 01       		.byte	0x1
 10240 10cf 45       		.byte	0x45
 10241 10d0 A2000000 		.4byte	0xa2
 10242 10d4 05       		.uleb128 0x5
 10243 10d5 03       		.byte	0x3
 10244 10d6 00000000 		.4byte	prevVBUS
 10245 10da 25       		.uleb128 0x25
 10246 10db F90C0000 		.4byte	.LASF176
 10247 10df 01       		.byte	0x1
 10248 10e0 46       		.byte	0x46
 10249 10e1 03020000 		.4byte	0x203
 10250 10e5 05       		.uleb128 0x5
 10251 10e6 03       		.byte	0x3
 10252 10e7 00000000 		.4byte	USB_active
 10253 10eb 25       		.uleb128 0x25
 10254 10ec 75090000 		.4byte	.LASF177
 10255 10f0 01       		.byte	0x1
 10256 10f1 47       		.byte	0x47
 10257 10f2 03020000 		.4byte	0x203
 10258 10f6 05       		.uleb128 0x5
 10259 10f7 03       		.byte	0x3
 10260 10f8 00000000 		.4byte	USB_check_flag
 10261 10fc 07       		.uleb128 0x7
 10262 10fd D9000000 		.4byte	0xd9
 10263 1101 0C110000 		.4byte	0x110c
 10264 1105 08       		.uleb128 0x8
 10265 1106 36010000 		.4byte	0x136
 10266 110a 1F       		.byte	0x1f
 10267 110b 00       		.byte	0
 10268 110c 25       		.uleb128 0x25
 10269 110d 7A0E0000 		.4byte	.LASF178
 10270 1111 01       		.byte	0x1
 10271 1112 4A       		.byte	0x4a
 10272 1113 FC100000 		.4byte	0x10fc
 10273 1117 05       		.uleb128 0x5
 10274 1118 03       		.byte	0x3
 10275 1119 00000000 		.4byte	inBuffer
 10276 111d 25       		.uleb128 0x25
 10277 111e EF0F0000 		.4byte	.LASF179
 10278 1122 01       		.byte	0x1
 10279 1123 4C       		.byte	0x4c
 10280 1124 FC100000 		.4byte	0x10fc
 10281 1128 05       		.uleb128 0x5
 10282 1129 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 225


 10283 112a 00000000 		.4byte	myArray
 10284 112e 25       		.uleb128 0x25
 10285 112f 8D0F0000 		.4byte	.LASF180
 10286 1133 01       		.byte	0x1
 10287 1134 4D       		.byte	0x4d
 10288 1135 F00D0000 		.4byte	0xdf0
 10289 1139 05       		.uleb128 0x5
 10290 113a 03       		.byte	0x3
 10291 113b 00000000 		.4byte	myInputArray
 10292 113f 07       		.uleb128 0x7
 10293 1140 C3000000 		.4byte	0xc3
 10294 1144 4F110000 		.4byte	0x114f
 10295 1148 08       		.uleb128 0x8
 10296 1149 36010000 		.4byte	0x136
 10297 114d 01       		.byte	0x1
 10298 114e 00       		.byte	0
 10299 114f 25       		.uleb128 0x25
 10300 1150 FE070000 		.4byte	.LASF181
 10301 1154 01       		.byte	0x1
 10302 1155 4E       		.byte	0x4e
 10303 1156 3F110000 		.4byte	0x113f
 10304 115a 05       		.uleb128 0x5
 10305 115b 03       		.byte	0x3
 10306 115c 00000000 		.4byte	linearPotValue32Bit
 10307 1160 28       		.uleb128 0x28
 10308 1161 6900     		.ascii	"i\000"
 10309 1163 01       		.byte	0x1
 10310 1164 4F       		.byte	0x4f
 10311 1165 A2000000 		.4byte	0xa2
 10312 1169 05       		.uleb128 0x5
 10313 116a 03       		.byte	0x3
 10314 116b 00000000 		.4byte	i
 10315 116f 25       		.uleb128 0x25
 10316 1170 B3090000 		.4byte	.LASF182
 10317 1174 01       		.byte	0x1
 10318 1175 50       		.byte	0x50
 10319 1176 A2000000 		.4byte	0xa2
 10320 117a 05       		.uleb128 0x5
 10321 117b 03       		.byte	0x3
 10322 117c 00000000 		.4byte	counter
 10323 1180 07       		.uleb128 0x7
 10324 1181 A2000000 		.4byte	0xa2
 10325 1185 90110000 		.4byte	0x1190
 10326 1189 08       		.uleb128 0x8
 10327 118a 36010000 		.4byte	0x136
 10328 118e 1F       		.byte	0x1f
 10329 118f 00       		.byte	0
 10330 1190 25       		.uleb128 0x25
 10331 1191 39060000 		.4byte	.LASF183
 10332 1195 01       		.byte	0x1
 10333 1196 51       		.byte	0x51
 10334 1197 80110000 		.4byte	0x1180
 10335 119b 05       		.uleb128 0x5
 10336 119c 03       		.byte	0x3
 10337 119d 00000000 		.4byte	returnedData
 10338 11a1 25       		.uleb128 0x25
 10339 11a2 9E010000 		.4byte	.LASF184
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 226


 10340 11a6 01       		.byte	0x1
 10341 11a7 52       		.byte	0x52
 10342 11a8 C3000000 		.4byte	0xc3
 10343 11ac 05       		.uleb128 0x5
 10344 11ad 03       		.byte	0x3
 10345 11ae 00000000 		.4byte	temper
 10346 11b2 07       		.uleb128 0x7
 10347 11b3 94000000 		.4byte	0x94
 10348 11b7 C2110000 		.4byte	0x11c2
 10349 11bb 08       		.uleb128 0x8
 10350 11bc 36010000 		.4byte	0x136
 10351 11c0 0A       		.byte	0xa
 10352 11c1 00       		.byte	0
 10353 11c2 25       		.uleb128 0x25
 10354 11c3 2D0E0000 		.4byte	.LASF185
 10355 11c7 01       		.byte	0x1
 10356 11c8 53       		.byte	0x53
 10357 11c9 B2110000 		.4byte	0x11b2
 10358 11cd 05       		.uleb128 0x5
 10359 11ce 03       		.byte	0x3
 10360 11cf 00000000 		.4byte	previousButtons
 10361 11d3 25       		.uleb128 0x25
 10362 11d4 2F010000 		.4byte	.LASF186
 10363 11d8 01       		.byte	0x1
 10364 11d9 54       		.byte	0x54
 10365 11da 94000000 		.4byte	0x94
 10366 11de 05       		.uleb128 0x5
 10367 11df 03       		.byte	0x3
 10368 11e0 00000000 		.4byte	octave
 10369 11e4 07       		.uleb128 0x7
 10370 11e5 B8000000 		.4byte	0xb8
 10371 11e9 F4110000 		.4byte	0x11f4
 10372 11ed 08       		.uleb128 0x8
 10373 11ee 36010000 		.4byte	0x136
 10374 11f2 09       		.byte	0x9
 10375 11f3 00       		.byte	0
 10376 11f4 25       		.uleb128 0x25
 10377 11f5 32080000 		.4byte	.LASF187
 10378 11f9 01       		.byte	0x1
 10379 11fa 55       		.byte	0x55
 10380 11fb E4110000 		.4byte	0x11e4
 10381 11ff 05       		.uleb128 0x5
 10382 1200 03       		.byte	0x3
 10383 1201 00000000 		.4byte	angle
 10384 1205 25       		.uleb128 0x25
 10385 1206 700B0000 		.4byte	.LASF188
 10386 120a 01       		.byte	0x1
 10387 120b 56       		.byte	0x56
 10388 120c E4110000 		.4byte	0x11e4
 10389 1210 05       		.uleb128 0x5
 10390 1211 03       		.byte	0x3
 10391 1212 00000000 		.4byte	prevAngle
 10392 1216 07       		.uleb128 0x7
 10393 1217 B8000000 		.4byte	0xb8
 10394 121b 26120000 		.4byte	0x1226
 10395 121f 08       		.uleb128 0x8
 10396 1220 36010000 		.4byte	0x136
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 227


 10397 1224 03       		.byte	0x3
 10398 1225 00       		.byte	0
 10399 1226 25       		.uleb128 0x25
 10400 1227 BA0B0000 		.4byte	.LASF189
 10401 122b 01       		.byte	0x1
 10402 122c 58       		.byte	0x58
 10403 122d 16120000 		.4byte	0x1216
 10404 1231 05       		.uleb128 0x5
 10405 1232 03       		.byte	0x3
 10406 1233 00000000 		.4byte	ADC_values
 10407 1237 25       		.uleb128 0x25
 10408 1238 F0040000 		.4byte	.LASF190
 10409 123c 01       		.byte	0x1
 10410 123d 59       		.byte	0x59
 10411 123e B8000000 		.4byte	0xb8
 10412 1242 05       		.uleb128 0x5
 10413 1243 03       		.byte	0x3
 10414 1244 00000000 		.4byte	rawAngle
 10415 1248 25       		.uleb128 0x25
 10416 1249 E10B0000 		.4byte	.LASF191
 10417 124d 01       		.byte	0x1
 10418 124e 5A       		.byte	0x5a
 10419 124f B8000000 		.4byte	0xb8
 10420 1253 05       		.uleb128 0x5
 10421 1254 03       		.byte	0x3
 10422 1255 00000000 		.4byte	midiSent
 10423 1259 25       		.uleb128 0x25
 10424 125a 7A050000 		.4byte	.LASF192
 10425 125e 01       		.byte	0x1
 10426 125f 5B       		.byte	0x5b
 10427 1260 B8000000 		.4byte	0xb8
 10428 1264 05       		.uleb128 0x5
 10429 1265 03       		.byte	0x3
 10430 1266 00000000 		.4byte	midiOverflow
 10431 126a 07       		.uleb128 0x7
 10432 126b A2000000 		.4byte	0xa2
 10433 126f 7A120000 		.4byte	0x127a
 10434 1273 08       		.uleb128 0x8
 10435 1274 36010000 		.4byte	0x136
 10436 1278 07       		.byte	0x7
 10437 1279 00       		.byte	0
 10438 127a 25       		.uleb128 0x25
 10439 127b A70E0000 		.4byte	.LASF193
 10440 127f 01       		.byte	0x1
 10441 1280 5D       		.byte	0x5d
 10442 1281 6A120000 		.4byte	0x126a
 10443 1285 05       		.uleb128 0x5
 10444 1286 03       		.byte	0x3
 10445 1287 00000000 		.4byte	macroKnobValues
 10446 128b 25       		.uleb128 0x25
 10447 128c E0040000 		.4byte	.LASF194
 10448 1290 01       		.byte	0x1
 10449 1291 5F       		.byte	0x5f
 10450 1292 A2000000 		.4byte	0xa2
 10451 1296 05       		.uleb128 0x5
 10452 1297 03       		.byte	0x3
 10453 1298 00000000 		.4byte	currentCopedent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 228


 10454 129c 07       		.uleb128 0x7
 10455 129d A2000000 		.4byte	0xa2
 10456 12a1 AC120000 		.4byte	0x12ac
 10457 12a5 08       		.uleb128 0x8
 10458 12a6 36010000 		.4byte	0x136
 10459 12aa 01       		.byte	0x1
 10460 12ab 00       		.byte	0
 10461 12ac 25       		.uleb128 0x25
 10462 12ad 29010000 		.4byte	.LASF195
 10463 12b1 01       		.byte	0x1
 10464 12b2 60       		.byte	0x60
 10465 12b3 9C120000 		.4byte	0x129c
 10466 12b7 05       		.uleb128 0x5
 10467 12b8 03       		.byte	0x3
 10468 12b9 00000000 		.4byte	necks
 10469 12bd 25       		.uleb128 0x25
 10470 12be 16040000 		.4byte	.LASF196
 10471 12c2 01       		.byte	0x1
 10472 12c3 7F       		.byte	0x7f
 10473 12c4 D9000000 		.4byte	0xd9
 10474 12c8 05       		.uleb128 0x5
 10475 12c9 03       		.byte	0x3
 10476 12ca 00000000 		.4byte	rx1Channel
 10477 12ce 25       		.uleb128 0x25
 10478 12cf CF0E0000 		.4byte	.LASF197
 10479 12d3 01       		.byte	0x1
 10480 12d4 7F       		.byte	0x7f
 10481 12d5 D9000000 		.4byte	0xd9
 10482 12d9 05       		.uleb128 0x5
 10483 12da 03       		.byte	0x3
 10484 12db 00000000 		.4byte	rx2Channel
 10485 12df 25       		.uleb128 0x25
 10486 12e0 C7090000 		.4byte	.LASF198
 10487 12e4 01       		.byte	0x1
 10488 12e5 80       		.byte	0x80
 10489 12e6 F00D0000 		.4byte	0xdf0
 10490 12ea 05       		.uleb128 0x5
 10491 12eb 03       		.byte	0x3
 10492 12ec 00000000 		.4byte	rx1TD
 10493 12f0 25       		.uleb128 0x25
 10494 12f1 380C0000 		.4byte	.LASF199
 10495 12f5 01       		.byte	0x1
 10496 12f6 80       		.byte	0x80
 10497 12f7 F00D0000 		.4byte	0xdf0
 10498 12fb 05       		.uleb128 0x5
 10499 12fc 03       		.byte	0x3
 10500 12fd 00000000 		.4byte	rx2TD
 10501 1301 25       		.uleb128 0x25
 10502 1302 3F0B0000 		.4byte	.LASF200
 10503 1306 01       		.byte	0x1
 10504 1307 82       		.byte	0x82
 10505 1308 2A010000 		.4byte	0x12a
 10506 130c 05       		.uleb128 0x5
 10507 130d 03       		.byte	0x3
 10508 130e 00000000 		.4byte	txChannel
 10509 1312 25       		.uleb128 0x25
 10510 1313 760F0000 		.4byte	.LASF201
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 229


 10511 1317 01       		.byte	0x1
 10512 1318 83       		.byte	0x83
 10513 1319 2A010000 		.4byte	0x12a
 10514 131d 05       		.uleb128 0x5
 10515 131e 03       		.byte	0x3
 10516 131f 00000000 		.4byte	txTD
 10517 1323 25       		.uleb128 0x25
 10518 1324 040A0000 		.4byte	.LASF202
 10519 1328 01       		.byte	0x1
 10520 1329 85       		.byte	0x85
 10521 132a 2A010000 		.4byte	0x12a
 10522 132e 05       		.uleb128 0x5
 10523 132f 03       		.byte	0x3
 10524 1330 00000000 		.4byte	rx3Channel
 10525 1334 25       		.uleb128 0x25
 10526 1335 180F0000 		.4byte	.LASF203
 10527 1339 01       		.byte	0x1
 10528 133a 86       		.byte	0x86
 10529 133b 2A010000 		.4byte	0x12a
 10530 133f 05       		.uleb128 0x5
 10531 1340 03       		.byte	0x3
 10532 1341 00000000 		.4byte	rx3TD
 10533 1345 07       		.uleb128 0x7
 10534 1346 2A010000 		.4byte	0x12a
 10535 134a 5B130000 		.4byte	0x135b
 10536 134e 08       		.uleb128 0x8
 10537 134f 36010000 		.4byte	0x136
 10538 1353 01       		.byte	0x1
 10539 1354 08       		.uleb128 0x8
 10540 1355 36010000 		.4byte	0x136
 10541 1359 19       		.byte	0x19
 10542 135a 00       		.byte	0
 10543 135b 25       		.uleb128 0x25
 10544 135c 68060000 		.4byte	.LASF204
 10545 1360 01       		.byte	0x1
 10546 1361 89       		.byte	0x89
 10547 1362 6C130000 		.4byte	0x136c
 10548 1366 05       		.uleb128 0x5
 10549 1367 03       		.byte	0x3
 10550 1368 00000000 		.4byte	rxBufferPluck
 10551 136c 06       		.uleb128 0x6
 10552 136d 45130000 		.4byte	0x1345
 10553 1371 07       		.uleb128 0x7
 10554 1372 2A010000 		.4byte	0x12a
 10555 1376 87130000 		.4byte	0x1387
 10556 137a 08       		.uleb128 0x8
 10557 137b 36010000 		.4byte	0x136
 10558 137f 01       		.byte	0x1
 10559 1380 08       		.uleb128 0x8
 10560 1381 36010000 		.4byte	0x136
 10561 1385 07       		.byte	0x7
 10562 1386 00       		.byte	0
 10563 1387 25       		.uleb128 0x25
 10564 1388 330B0000 		.4byte	.LASF205
 10565 138c 01       		.byte	0x1
 10566 138d 8A       		.byte	0x8a
 10567 138e 98130000 		.4byte	0x1398
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 230


 10568 1392 05       		.uleb128 0x5
 10569 1393 03       		.byte	0x3
 10570 1394 00000000 		.4byte	rxBufferBar
 10571 1398 06       		.uleb128 0x6
 10572 1399 71130000 		.4byte	0x1371
 10573 139d 07       		.uleb128 0x7
 10574 139e 08020000 		.4byte	0x208
 10575 13a2 AD130000 		.4byte	0x13ad
 10576 13a6 08       		.uleb128 0x8
 10577 13a7 36010000 		.4byte	0x136
 10578 13ab 0B       		.byte	0xb
 10579 13ac 00       		.byte	0
 10580 13ad 25       		.uleb128 0x25
 10581 13ae 5D020000 		.4byte	.LASF206
 10582 13b2 01       		.byte	0x1
 10583 13b3 8C       		.byte	0x8c
 10584 13b4 BE130000 		.4byte	0x13be
 10585 13b8 05       		.uleb128 0x5
 10586 13b9 03       		.byte	0x3
 10587 13ba 00000000 		.4byte	strings
 10588 13be 06       		.uleb128 0x6
 10589 13bf 9D130000 		.4byte	0x139d
 10590 13c3 25       		.uleb128 0x25
 10591 13c4 C3040000 		.4byte	.LASF207
 10592 13c8 01       		.byte	0x1
 10593 13c9 8D       		.byte	0x8d
 10594 13ca D4130000 		.4byte	0x13d4
 10595 13ce 05       		.uleb128 0x5
 10596 13cf 03       		.byte	0x3
 10597 13d0 00000000 		.4byte	prevStrings
 10598 13d4 06       		.uleb128 0x6
 10599 13d5 9D130000 		.4byte	0x139d
 10600 13d9 07       		.uleb128 0x7
 10601 13da 08020000 		.4byte	0x208
 10602 13de E9130000 		.4byte	0x13e9
 10603 13e2 08       		.uleb128 0x8
 10604 13e3 36010000 		.4byte	0x136
 10605 13e7 01       		.byte	0x1
 10606 13e8 00       		.byte	0
 10607 13e9 28       		.uleb128 0x28
 10608 13ea 62617200 		.ascii	"bar\000"
 10609 13ee 01       		.byte	0x1
 10610 13ef 8E       		.byte	0x8e
 10611 13f0 FA130000 		.4byte	0x13fa
 10612 13f4 05       		.uleb128 0x5
 10613 13f5 03       		.byte	0x3
 10614 13f6 00000000 		.4byte	bar
 10615 13fa 06       		.uleb128 0x6
 10616 13fb D9130000 		.4byte	0x13d9
 10617 13ff 25       		.uleb128 0x25
 10618 1400 850F0000 		.4byte	.LASF208
 10619 1404 01       		.byte	0x1
 10620 1405 8F       		.byte	0x8f
 10621 1406 10140000 		.4byte	0x1410
 10622 140a 05       		.uleb128 0x5
 10623 140b 03       		.byte	0x3
 10624 140c 00000000 		.4byte	prevBar
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 231


 10625 1410 06       		.uleb128 0x6
 10626 1411 D9130000 		.4byte	0x13d9
 10627 1415 25       		.uleb128 0x25
 10628 1416 830E0000 		.4byte	.LASF209
 10629 141a 01       		.byte	0x1
 10630 141b 90       		.byte	0x90
 10631 141c 26140000 		.4byte	0x1426
 10632 1420 05       		.uleb128 0x5
 10633 1421 03       		.byte	0x3
 10634 1422 00000000 		.4byte	maxStrings
 10635 1426 06       		.uleb128 0x6
 10636 1427 9D130000 		.4byte	0x139d
 10637 142b 25       		.uleb128 0x25
 10638 142c 670C0000 		.4byte	.LASF210
 10639 1430 01       		.byte	0x1
 10640 1431 91       		.byte	0x91
 10641 1432 03020000 		.4byte	0x203
 10642 1436 05       		.uleb128 0x5
 10643 1437 03       		.byte	0x3
 10644 1438 00000000 		.4byte	amHere
 10645 143c 25       		.uleb128 0x25
 10646 143d E0050000 		.4byte	.LASF211
 10647 1441 01       		.byte	0x1
 10648 1442 92       		.byte	0x92
 10649 1443 03020000 		.4byte	0x203
 10650 1447 05       		.uleb128 0x5
 10651 1448 03       		.byte	0x3
 10652 1449 00000000 		.4byte	spiCounter
 10653 144d 25       		.uleb128 0x25
 10654 144e 2F040000 		.4byte	.LASF212
 10655 1452 01       		.byte	0x1
 10656 1453 93       		.byte	0x93
 10657 1454 03020000 		.4byte	0x203
 10658 1458 05       		.uleb128 0x5
 10659 1459 03       		.byte	0x3
 10660 145a 00000000 		.4byte	newDataFlag
 10661 145e 25       		.uleb128 0x25
 10662 145f 7E0D0000 		.4byte	.LASF213
 10663 1463 01       		.byte	0x1
 10664 1464 94       		.byte	0x94
 10665 1465 94000000 		.4byte	0x94
 10666 1469 05       		.uleb128 0x5
 10667 146a 03       		.byte	0x3
 10668 146b 00000000 		.4byte	prevOctave
 10669 146f 25       		.uleb128 0x25
 10670 1470 7A0B0000 		.4byte	.LASF214
 10671 1474 01       		.byte	0x1
 10672 1475 95       		.byte	0x95
 10673 1476 A2000000 		.4byte	0xa2
 10674 147a 05       		.uleb128 0x5
 10675 147b 03       		.byte	0x3
 10676 147c 00000000 		.4byte	pluck_index
 10677 1480 25       		.uleb128 0x25
 10678 1481 6B0A0000 		.4byte	.LASF215
 10679 1485 01       		.byte	0x1
 10680 1486 96       		.byte	0x96
 10681 1487 03020000 		.4byte	0x203
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 232


 10682 148b 05       		.uleb128 0x5
 10683 148c 03       		.byte	0x3
 10684 148d 00000000 		.4byte	amHere2
 10685 1491 25       		.uleb128 0x25
 10686 1492 A70C0000 		.4byte	.LASF216
 10687 1496 01       		.byte	0x1
 10688 1497 97       		.byte	0x97
 10689 1498 03020000 		.4byte	0x203
 10690 149c 05       		.uleb128 0x5
 10691 149d 03       		.byte	0x3
 10692 149e 00000000 		.4byte	spiCounter2
 10693 14a2 25       		.uleb128 0x25
 10694 14a3 67000000 		.4byte	.LASF217
 10695 14a7 01       		.byte	0x1
 10696 14a8 98       		.byte	0x98
 10697 14a9 03020000 		.4byte	0x203
 10698 14ad 05       		.uleb128 0x5
 10699 14ae 03       		.byte	0x3
 10700 14af 00000000 		.4byte	newDataFlag2
 10701 14b3 25       		.uleb128 0x25
 10702 14b4 7F0A0000 		.4byte	.LASF218
 10703 14b8 01       		.byte	0x1
 10704 14b9 99       		.byte	0x99
 10705 14ba 03020000 		.4byte	0x203
 10706 14be 05       		.uleb128 0x5
 10707 14bf 03       		.byte	0x3
 10708 14c0 00000000 		.4byte	currentPluckBuffer
 10709 14c4 25       		.uleb128 0x25
 10710 14c5 A90B0000 		.4byte	.LASF219
 10711 14c9 01       		.byte	0x1
 10712 14ca 9A       		.byte	0x9a
 10713 14cb 03020000 		.4byte	0x203
 10714 14cf 05       		.uleb128 0x5
 10715 14d0 03       		.byte	0x3
 10716 14d1 00000000 		.4byte	currentBarBuffer
 10717 14d5 25       		.uleb128 0x25
 10718 14d6 240D0000 		.4byte	.LASF220
 10719 14da 01       		.byte	0x1
 10720 14db 9B       		.byte	0x9b
 10721 14dc 03020000 		.4byte	0x203
 10722 14e0 05       		.uleb128 0x5
 10723 14e1 03       		.byte	0x3
 10724 14e2 00000000 		.4byte	pluckErrorCount
 10725 14e6 25       		.uleb128 0x25
 10726 14e7 D20B0000 		.4byte	.LASF221
 10727 14eb 01       		.byte	0x1
 10728 14ec 9C       		.byte	0x9c
 10729 14ed 08020000 		.4byte	0x208
 10730 14f1 05       		.uleb128 0x5
 10731 14f2 03       		.byte	0x3
 10732 14f3 00000000 		.4byte	SPI1ErrorCount
 10733 14f7 25       		.uleb128 0x25
 10734 14f8 62070000 		.4byte	.LASF222
 10735 14fc 01       		.byte	0x1
 10736 14fd A0       		.byte	0xa0
 10737 14fe 03020000 		.4byte	0x203
 10738 1502 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 233


 10739 1503 03       		.byte	0x3
 10740 1504 00000000 		.4byte	inputData
 10741 1508 25       		.uleb128 0x25
 10742 1509 C30E0000 		.4byte	.LASF223
 10743 150d 01       		.byte	0x1
 10744 150e C3       		.byte	0xc3
 10745 150f A2000000 		.4byte	0xa2
 10746 1513 05       		.uleb128 0x5
 10747 1514 03       		.byte	0x3
 10748 1515 00000000 		.4byte	spiAdjusted
 10749 1519 25       		.uleb128 0x25
 10750 151a 94060000 		.4byte	.LASF224
 10751 151e 01       		.byte	0x1
 10752 151f C4       		.byte	0xc4
 10753 1520 A2000000 		.4byte	0xa2
 10754 1524 05       		.uleb128 0x5
 10755 1525 03       		.byte	0x3
 10756 1526 00000000 		.4byte	mySpiCounter
 10757 152a 25       		.uleb128 0x25
 10758 152b 030B0000 		.4byte	.LASF225
 10759 152f 01       		.byte	0x1
 10760 1530 C5       		.byte	0xc5
 10761 1531 08020000 		.4byte	0x208
 10762 1535 05       		.uleb128 0x5
 10763 1536 03       		.byte	0x3
 10764 1537 00000000 		.4byte	offsetErrorCount
 10765 153b 25       		.uleb128 0x25
 10766 153c C7000000 		.4byte	.LASF226
 10767 1540 01       		.byte	0x1
 10768 1541 C6       		.byte	0xc6
 10769 1542 03020000 		.4byte	0x203
 10770 1546 05       		.uleb128 0x5
 10771 1547 03       		.byte	0x3
 10772 1548 00000000 		.4byte	SPI2errorflag
 10773 154c 25       		.uleb128 0x25
 10774 154d F90A0000 		.4byte	.LASF227
 10775 1551 01       		.byte	0x1
 10776 1552 C7       		.byte	0xc7
 10777 1553 5D150000 		.4byte	0x155d
 10778 1557 05       		.uleb128 0x5
 10779 1558 03       		.byte	0x3
 10780 1559 00000000 		.4byte	bar_index
 10781 155d 06       		.uleb128 0x6
 10782 155e 94000000 		.4byte	0x94
 10783 1562 25       		.uleb128 0x25
 10784 1563 3E030000 		.4byte	.LASF228
 10785 1567 01       		.byte	0x1
 10786 1568 C8       		.byte	0xc8
 10787 1569 A6020000 		.4byte	0x2a6
 10788 156d 05       		.uleb128 0x5
 10789 156e 03       		.byte	0x3
 10790 156f 00000000 		.4byte	knobs
 10791 1573 25       		.uleb128 0x25
 10792 1574 8A060000 		.4byte	.LASF229
 10793 1578 01       		.byte	0x1
 10794 1579 C9       		.byte	0xc9
 10795 157a A6020000 		.4byte	0x2a6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 234


 10796 157e 05       		.uleb128 0x5
 10797 157f 03       		.byte	0x3
 10798 1580 00000000 		.4byte	prevKnobs
 10799 1584 25       		.uleb128 0x25
 10800 1585 730A0000 		.4byte	.LASF230
 10801 1589 01       		.byte	0x1
 10802 158a CB       		.byte	0xcb
 10803 158b 03020000 		.4byte	0x203
 10804 158f 05       		.uleb128 0x5
 10805 1590 03       		.byte	0x3
 10806 1591 00000000 		.4byte	SPI2started
 10807 1595 25       		.uleb128 0x25
 10808 1596 51060000 		.4byte	.LASF231
 10809 159a 01       		.byte	0x1
 10810 159b CD       		.byte	0xcd
 10811 159c A2000000 		.4byte	0xa2
 10812 15a0 05       		.uleb128 0x5
 10813 15a1 03       		.byte	0x3
 10814 15a2 00000000 		.4byte	whichMacro
 10815 15a6 25       		.uleb128 0x25
 10816 15a7 6E0C0000 		.4byte	.LASF232
 10817 15ab 01       		.byte	0x1
 10818 15ac E0       		.byte	0xe0
 10819 15ad F00D0000 		.4byte	0xdf0
 10820 15b1 05       		.uleb128 0x5
 10821 15b2 03       		.byte	0x3
 10822 15b3 00000000 		.4byte	array
 10823 15b7 25       		.uleb128 0x25
 10824 15b8 D5070000 		.4byte	.LASF233
 10825 15bc 01       		.byte	0x1
 10826 15bd E3       		.byte	0xe3
 10827 15be F7010000 		.4byte	0x1f7
 10828 15c2 05       		.uleb128 0x5
 10829 15c3 03       		.byte	0x3
 10830 15c4 00000000 		.4byte	eepromReturnValue
 10831 15c8 25       		.uleb128 0x25
 10832 15c9 34050000 		.4byte	.LASF234
 10833 15cd 01       		.byte	0x1
 10834 15ce EF       		.byte	0xef
 10835 15cf D9000000 		.4byte	0xd9
 10836 15d3 05       		.uleb128 0x5
 10837 15d4 03       		.byte	0x3
 10838 15d5 00000000 		.4byte	eeprom_cnt
 10839 15d9 25       		.uleb128 0x25
 10840 15da EF070000 		.4byte	.LASF85
 10841 15de 01       		.byte	0x1
 10842 15df F0       		.byte	0xf0
 10843 15e0 12010000 		.4byte	0x112
 10844 15e4 05       		.uleb128 0x5
 10845 15e5 03       		.byte	0x3
 10846 15e6 00000000 		.4byte	status
 10847 15ea 28       		.uleb128 0x28
 10848 15eb 70747200 		.ascii	"ptr\000"
 10849 15ef 01       		.byte	0x1
 10850 15f0 F1       		.byte	0xf1
 10851 15f1 FB150000 		.4byte	0x15fb
 10852 15f5 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 235


 10853 15f6 03       		.byte	0x3
 10854 15f7 00000000 		.4byte	ptr
 10855 15fb 20       		.uleb128 0x20
 10856 15fc 04       		.byte	0x4
 10857 15fd 06160000 		.4byte	0x1606
 10858 1601 24       		.uleb128 0x24
 10859 1602 D9000000 		.4byte	0xd9
 10860 1606 06       		.uleb128 0x6
 10861 1607 01160000 		.4byte	0x1601
 10862 160b 25       		.uleb128 0x25
 10863 160c 2C020000 		.4byte	.LASF235
 10864 1610 01       		.byte	0x1
 10865 1611 F2       		.byte	0xf2
 10866 1612 5D150000 		.4byte	0x155d
 10867 1616 05       		.uleb128 0x5
 10868 1617 03       		.byte	0x3
 10869 1618 00000000 		.4byte	barCount
 10870 161c 07       		.uleb128 0x7
 10871 161d 03020000 		.4byte	0x203
 10872 1621 2C160000 		.4byte	0x162c
 10873 1625 08       		.uleb128 0x8
 10874 1626 36010000 		.4byte	0x136
 10875 162a 0F       		.byte	0xf
 10876 162b 00       		.byte	0
 10877 162c 27       		.uleb128 0x27
 10878 162d 0D010000 		.4byte	.LASF236
 10879 1631 01       		.byte	0x1
 10880 1632 5401     		.2byte	0x154
 10881 1634 3E160000 		.4byte	0x163e
 10882 1638 05       		.uleb128 0x5
 10883 1639 03       		.byte	0x3
 10884 163a 00000000 		.4byte	I2Cbuff2
 10885 163e 06       		.uleb128 0x6
 10886 163f 1C160000 		.4byte	0x161c
 10887 1643 27       		.uleb128 0x27
 10888 1644 F6070000 		.4byte	.LASF237
 10889 1648 01       		.byte	0x1
 10890 1649 5501     		.2byte	0x155
 10891 164b 03020000 		.4byte	0x203
 10892 164f 05       		.uleb128 0x5
 10893 1650 03       		.byte	0x3
 10894 1651 00000000 		.4byte	send_it
 10895 1655 07       		.uleb128 0x7
 10896 1656 A2000000 		.4byte	0xa2
 10897 165a 6B160000 		.4byte	0x166b
 10898 165e 08       		.uleb128 0x8
 10899 165f 36010000 		.4byte	0x136
 10900 1663 0B       		.byte	0xb
 10901 1664 08       		.uleb128 0x8
 10902 1665 36010000 		.4byte	0x136
 10903 1669 01       		.byte	0x1
 10904 166a 00       		.byte	0
 10905 166b 27       		.uleb128 0x27
 10906 166c 16010000 		.4byte	.LASF238
 10907 1670 01       		.byte	0x1
 10908 1671 5C01     		.2byte	0x15c
 10909 1673 55160000 		.4byte	0x1655
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 236


 10910 1677 05       		.uleb128 0x5
 10911 1678 03       		.byte	0x3
 10912 1679 00000000 		.4byte	mux_states
 10913 167d 07       		.uleb128 0x7
 10914 167e A2000000 		.4byte	0xa2
 10915 1682 8D160000 		.4byte	0x168d
 10916 1686 08       		.uleb128 0x8
 10917 1687 36010000 		.4byte	0x136
 10918 168b 0B       		.byte	0xb
 10919 168c 00       		.byte	0
 10920 168d 27       		.uleb128 0x27
 10921 168e B70E0000 		.4byte	.LASF239
 10922 1692 01       		.byte	0x1
 10923 1693 5D01     		.2byte	0x15d
 10924 1695 7D160000 		.4byte	0x167d
 10925 1699 05       		.uleb128 0x5
 10926 169a 03       		.byte	0x3
 10927 169b 00000000 		.4byte	i2c_skipped
 10928 169f 27       		.uleb128 0x27
 10929 16a0 730D0000 		.4byte	.LASF240
 10930 16a4 01       		.byte	0x1
 10931 16a5 5E01     		.2byte	0x15e
 10932 16a7 E4110000 		.4byte	0x11e4
 10933 16ab 05       		.uleb128 0x5
 10934 16ac 03       		.byte	0x3
 10935 16ad 00000000 		.4byte	pedals_low
 10936 16b1 27       		.uleb128 0x27
 10937 16b2 6E010000 		.4byte	.LASF241
 10938 16b6 01       		.byte	0x1
 10939 16b7 5F01     		.2byte	0x15f
 10940 16b9 E4110000 		.4byte	0x11e4
 10941 16bd 05       		.uleb128 0x5
 10942 16be 03       		.byte	0x3
 10943 16bf 00000000 		.4byte	pedals_high
 10944 16c3 27       		.uleb128 0x27
 10945 16c4 CE0C0000 		.4byte	.LASF242
 10946 16c8 01       		.byte	0x1
 10947 16c9 6001     		.2byte	0x160
 10948 16cb B8000000 		.4byte	0xb8
 10949 16cf 05       		.uleb128 0x5
 10950 16d0 03       		.byte	0x3
 10951 16d1 00000000 		.4byte	deadzone
 10952 16d5 27       		.uleb128 0x27
 10953 16d6 5C060000 		.4byte	.LASF243
 10954 16da 01       		.byte	0x1
 10955 16db 6101     		.2byte	0x161
 10956 16dd B8000000 		.4byte	0xb8
 10957 16e1 05       		.uleb128 0x5
 10958 16e2 03       		.byte	0x3
 10959 16e3 00000000 		.4byte	volumePedal
 10960 16e7 27       		.uleb128 0x27
 10961 16e8 490B0000 		.4byte	.LASF244
 10962 16ec 01       		.byte	0x1
 10963 16ed 6201     		.2byte	0x162
 10964 16ef E4110000 		.4byte	0x11e4
 10965 16f3 05       		.uleb128 0x5
 10966 16f4 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 237


 10967 16f5 00000000 		.4byte	processed_pedals
 10968 16f9 27       		.uleb128 0x27
 10969 16fa 550A0000 		.4byte	.LASF245
 10970 16fe 01       		.byte	0x1
 10971 16ff 6301     		.2byte	0x163
 10972 1701 E4110000 		.4byte	0x11e4
 10973 1705 05       		.uleb128 0x5
 10974 1706 03       		.byte	0x3
 10975 1707 00000000 		.4byte	prev_processed_pedals
 10976 170b 07       		.uleb128 0x7
 10977 170c A2000000 		.4byte	0xa2
 10978 1710 1B170000 		.4byte	0x171b
 10979 1714 08       		.uleb128 0x8
 10980 1715 36010000 		.4byte	0x136
 10981 1719 09       		.byte	0x9
 10982 171a 00       		.byte	0
 10983 171b 27       		.uleb128 0x27
 10984 171c 7F060000 		.4byte	.LASF246
 10985 1720 01       		.byte	0x1
 10986 1721 6401     		.2byte	0x164
 10987 1723 0B170000 		.4byte	0x170b
 10988 1727 05       		.uleb128 0x5
 10989 1728 03       		.byte	0x3
 10990 1729 00000000 		.4byte	pedals8bit
 10991 172d 27       		.uleb128 0x27
 10992 172e 42000000 		.4byte	.LASF247
 10993 1732 01       		.byte	0x1
 10994 1733 6501     		.2byte	0x165
 10995 1735 AD000000 		.4byte	0xad
 10996 1739 05       		.uleb128 0x5
 10997 173a 03       		.byte	0x3
 10998 173b 00000000 		.4byte	prev_processed_volumePedal
 10999 173f 27       		.uleb128 0x27
 11000 1740 140B0000 		.4byte	.LASF248
 11001 1744 01       		.byte	0x1
 11002 1745 6601     		.2byte	0x166
 11003 1747 AD000000 		.4byte	0xad
 11004 174b 05       		.uleb128 0x5
 11005 174c 03       		.byte	0x3
 11006 174d 00000000 		.4byte	processed_volumePedal
 11007 1751 07       		.uleb128 0x7
 11008 1752 FD000000 		.4byte	0xfd
 11009 1756 67170000 		.4byte	0x1767
 11010 175a 08       		.uleb128 0x8
 11011 175b 36010000 		.4byte	0x136
 11012 175f 03       		.byte	0x3
 11013 1760 08       		.uleb128 0x8
 11014 1761 36010000 		.4byte	0x136
 11015 1765 03       		.byte	0x3
 11016 1766 00       		.byte	0
 11017 1767 27       		.uleb128 0x27
 11018 1768 A40D0000 		.4byte	.LASF249
 11019 176c 01       		.byte	0x1
 11020 176d 6901     		.2byte	0x169
 11021 176f 51170000 		.4byte	0x1751
 11022 1773 05       		.uleb128 0x5
 11023 1774 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 238


 11024 1775 00000000 		.4byte	fretMeasurements
 11025 1779 27       		.uleb128 0x27
 11026 177a 62080000 		.4byte	.LASF250
 11027 177e 01       		.byte	0x1
 11028 177f 7601     		.2byte	0x176
 11029 1781 94000000 		.4byte	0x94
 11030 1785 05       		.uleb128 0x5
 11031 1786 03       		.byte	0x3
 11032 1787 00000000 		.4byte	currentPresetSelection
 11033 178b 07       		.uleb128 0x7
 11034 178c A2000000 		.4byte	0xa2
 11035 1790 A1170000 		.4byte	0x17a1
 11036 1794 08       		.uleb128 0x8
 11037 1795 36010000 		.4byte	0x136
 11038 1799 3F       		.byte	0x3f
 11039 179a 08       		.uleb128 0x8
 11040 179b 36010000 		.4byte	0x136
 11041 179f 0D       		.byte	0xd
 11042 17a0 00       		.byte	0
 11043 17a1 27       		.uleb128 0x27
 11044 17a2 BB020000 		.4byte	.LASF251
 11045 17a6 01       		.byte	0x1
 11046 17a7 7701     		.2byte	0x177
 11047 17a9 8B170000 		.4byte	0x178b
 11048 17ad 05       		.uleb128 0x5
 11049 17ae 03       		.byte	0x3
 11050 17af 00000000 		.4byte	presetNamesArray
 11051 17b3 27       		.uleb128 0x27
 11052 17b4 44020000 		.4byte	.LASF252
 11053 17b8 01       		.byte	0x1
 11054 17b9 7801     		.2byte	0x178
 11055 17bb A2000000 		.4byte	0xa2
 11056 17bf 05       		.uleb128 0x5
 11057 17c0 03       		.byte	0x3
 11058 17c1 00000000 		.4byte	presetNumberToLoad
 11059 17c5 27       		.uleb128 0x27
 11060 17c6 7B020000 		.4byte	.LASF253
 11061 17ca 01       		.byte	0x1
 11062 17cb 7901     		.2byte	0x179
 11063 17cd 9C120000 		.4byte	0x129c
 11064 17d1 05       		.uleb128 0x5
 11065 17d2 03       		.byte	0x3
 11066 17d3 00000000 		.4byte	presetLoadedResponse
 11067 17d7 07       		.uleb128 0x7
 11068 17d8 A2000000 		.4byte	0xa2
 11069 17dc F3170000 		.4byte	0x17f3
 11070 17e0 08       		.uleb128 0x8
 11071 17e1 36010000 		.4byte	0x136
 11072 17e5 3F       		.byte	0x3f
 11073 17e6 08       		.uleb128 0x8
 11074 17e7 36010000 		.4byte	0x136
 11075 17eb 07       		.byte	0x7
 11076 17ec 08       		.uleb128 0x8
 11077 17ed 36010000 		.4byte	0x136
 11078 17f1 0D       		.byte	0xd
 11079 17f2 00       		.byte	0
 11080 17f3 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 239


 11081 17f4 74000000 		.4byte	.LASF254
 11082 17f8 01       		.byte	0x1
 11083 17f9 7C01     		.2byte	0x17c
 11084 17fb D7170000 		.4byte	0x17d7
 11085 17ff 05       		.uleb128 0x5
 11086 1800 03       		.byte	0x3
 11087 1801 00000000 		.4byte	macroNamesArray
 11088 1805 07       		.uleb128 0x7
 11089 1806 FD000000 		.4byte	0xfd
 11090 180a 15180000 		.4byte	0x1815
 11091 180e 08       		.uleb128 0x8
 11092 180f 36010000 		.4byte	0x136
 11093 1813 03       		.byte	0x3
 11094 1814 00       		.byte	0
 11095 1815 27       		.uleb128 0x27
 11096 1816 10030000 		.4byte	.LASF255
 11097 181a 01       		.byte	0x1
 11098 181b 8001     		.2byte	0x180
 11099 181d 05180000 		.4byte	0x1805
 11100 1821 05       		.uleb128 0x5
 11101 1822 03       		.byte	0x3
 11102 1823 00000000 		.4byte	fretScaling
 11103 1827 07       		.uleb128 0x7
 11104 1828 FD000000 		.4byte	0xfd
 11105 182c 37180000 		.4byte	0x1837
 11106 1830 08       		.uleb128 0x8
 11107 1831 36010000 		.4byte	0x136
 11108 1835 09       		.byte	0x9
 11109 1836 00       		.byte	0
 11110 1837 27       		.uleb128 0x27
 11111 1838 E3030000 		.4byte	.LASF256
 11112 183c 01       		.byte	0x1
 11113 183d 8501     		.2byte	0x185
 11114 183f 27180000 		.4byte	0x1827
 11115 1843 05       		.uleb128 0x5
 11116 1844 03       		.byte	0x3
 11117 1845 00000000 		.4byte	pedalRatios
 11118 1849 27       		.uleb128 0x27
 11119 184a 84040000 		.4byte	.LASF257
 11120 184e 01       		.byte	0x1
 11121 184f 8601     		.2byte	0x186
 11122 1851 A2000000 		.4byte	0xa2
 11123 1855 05       		.uleb128 0x5
 11124 1856 03       		.byte	0x3
 11125 1857 00000000 		.4byte	last_mux
 11126 185b 27       		.uleb128 0x27
 11127 185c 40090000 		.4byte	.LASF258
 11128 1860 01       		.byte	0x1
 11129 1861 8701     		.2byte	0x187
 11130 1863 03020000 		.4byte	0x203
 11131 1867 05       		.uleb128 0x5
 11132 1868 03       		.byte	0x3
 11133 1869 00000000 		.4byte	main_counter
 11134 186d 27       		.uleb128 0x27
 11135 186e 16050000 		.4byte	.LASF259
 11136 1872 01       		.byte	0x1
 11137 1873 8801     		.2byte	0x188
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 240


 11138 1875 A2000000 		.4byte	0xa2
 11139 1879 05       		.uleb128 0x5
 11140 187a 03       		.byte	0x3
 11141 187b 00000000 		.4byte	neck
 11142 187f 27       		.uleb128 0x27
 11143 1880 57090000 		.4byte	.LASF260
 11144 1884 01       		.byte	0x1
 11145 1885 8901     		.2byte	0x189
 11146 1887 A2000000 		.4byte	0xa2
 11147 188b 05       		.uleb128 0x5
 11148 188c 03       		.byte	0x3
 11149 188d 00000000 		.4byte	dualSlider
 11150 1891 27       		.uleb128 0x27
 11151 1892 CA0B0000 		.4byte	.LASF261
 11152 1896 01       		.byte	0x1
 11153 1897 8A01     		.2byte	0x18a
 11154 1899 A2000000 		.4byte	0xa2
 11155 189d 05       		.uleb128 0x5
 11156 189e 03       		.byte	0x3
 11157 189f 00000000 		.4byte	enterUp
 11158 18a3 27       		.uleb128 0x27
 11159 18a4 57020000 		.4byte	.LASF262
 11160 18a8 01       		.byte	0x1
 11161 18a9 8B01     		.2byte	0x18b
 11162 18ab A2000000 		.4byte	0xa2
 11163 18af 05       		.uleb128 0x5
 11164 18b0 03       		.byte	0x3
 11165 18b1 00000000 		.4byte	voice
 11166 18b5 27       		.uleb128 0x27
 11167 18b6 B20F0000 		.4byte	.LASF263
 11168 18ba 01       		.byte	0x1
 11169 18bb 8C01     		.2byte	0x18c
 11170 18bd A2000000 		.4byte	0xa2
 11171 18c1 05       		.uleb128 0x5
 11172 18c2 03       		.byte	0x3
 11173 18c3 00000000 		.4byte	editUp
 11174 18c7 27       		.uleb128 0x27
 11175 18c8 6E050000 		.4byte	.LASF264
 11176 18cc 01       		.byte	0x1
 11177 18cd 8D01     		.2byte	0x18d
 11178 18cf A2000000 		.4byte	0xa2
 11179 18d3 05       		.uleb128 0x5
 11180 18d4 03       		.byte	0x3
 11181 18d5 00000000 		.4byte	oct1Up
 11182 18d9 27       		.uleb128 0x27
 11183 18da 2A0F0000 		.4byte	.LASF265
 11184 18de 01       		.byte	0x1
 11185 18df 8E01     		.2byte	0x18e
 11186 18e1 A2000000 		.4byte	0xa2
 11187 18e5 05       		.uleb128 0x5
 11188 18e6 03       		.byte	0x3
 11189 18e7 00000000 		.4byte	oct4Up
 11190 18eb 27       		.uleb128 0x27
 11191 18ec 8D040000 		.4byte	.LASF266
 11192 18f0 01       		.byte	0x1
 11193 18f1 9001     		.2byte	0x190
 11194 18f3 FD180000 		.4byte	0x18fd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 241


 11195 18f7 05       		.uleb128 0x5
 11196 18f8 03       		.byte	0x3
 11197 18f9 00000000 		.4byte	encoderVal
 11198 18fd 06       		.uleb128 0x6
 11199 18fe 1C160000 		.4byte	0x161c
 11200 1902 27       		.uleb128 0x27
 11201 1903 63050000 		.4byte	.LASF267
 11202 1907 01       		.byte	0x1
 11203 1908 9101     		.2byte	0x191
 11204 190a 94000000 		.4byte	0x94
 11205 190e 05       		.uleb128 0x5
 11206 190f 03       		.byte	0x3
 11207 1910 00000000 		.4byte	encoderNum
 11208 1914 27       		.uleb128 0x27
 11209 1915 1D0A0000 		.4byte	.LASF268
 11210 1919 01       		.byte	0x1
 11211 191a 9201     		.2byte	0x192
 11212 191c A2000000 		.4byte	0xa2
 11213 1920 05       		.uleb128 0x5
 11214 1921 03       		.byte	0x3
 11215 1922 00000000 		.4byte	button1Up
 11216 1926 27       		.uleb128 0x27
 11217 1927 5D0C0000 		.4byte	.LASF269
 11218 192b 01       		.byte	0x1
 11219 192c 9301     		.2byte	0x193
 11220 192e A2000000 		.4byte	0xa2
 11221 1932 05       		.uleb128 0x5
 11222 1933 03       		.byte	0x3
 11223 1934 00000000 		.4byte	button2Up
 11224 1938 27       		.uleb128 0x27
 11225 1939 460F0000 		.4byte	.LASF270
 11226 193d 01       		.byte	0x1
 11227 193e 9401     		.2byte	0x194
 11228 1940 A2000000 		.4byte	0xa2
 11229 1944 05       		.uleb128 0x5
 11230 1945 03       		.byte	0x3
 11231 1946 00000000 		.4byte	button3Up
 11232 194a 27       		.uleb128 0x27
 11233 194b 050F0000 		.4byte	.LASF271
 11234 194f 01       		.byte	0x1
 11235 1950 9501     		.2byte	0x195
 11236 1952 A2000000 		.4byte	0xa2
 11237 1956 05       		.uleb128 0x5
 11238 1957 03       		.byte	0x3
 11239 1958 00000000 		.4byte	button4Up
 11240 195c 27       		.uleb128 0x27
 11241 195d 570D0000 		.4byte	.LASF272
 11242 1961 01       		.byte	0x1
 11243 1962 9601     		.2byte	0x196
 11244 1964 A2000000 		.4byte	0xa2
 11245 1968 05       		.uleb128 0x5
 11246 1969 03       		.byte	0x3
 11247 196a 00000000 		.4byte	patchNum
 11248 196e 07       		.uleb128 0x7
 11249 196f FD000000 		.4byte	0xfd
 11250 1973 8A190000 		.4byte	0x198a
 11251 1977 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 242


 11252 1978 36010000 		.4byte	0x136
 11253 197c 06       		.byte	0x6
 11254 197d 08       		.uleb128 0x8
 11255 197e 36010000 		.4byte	0x136
 11256 1982 0A       		.byte	0xa
 11257 1983 08       		.uleb128 0x8
 11258 1984 36010000 		.4byte	0x136
 11259 1988 0B       		.byte	0xb
 11260 1989 00       		.byte	0
 11261 198a 27       		.uleb128 0x27
 11262 198b 76060000 		.4byte	.LASF273
 11263 198f 01       		.byte	0x1
 11264 1990 9C01     		.2byte	0x19c
 11265 1992 6E190000 		.4byte	0x196e
 11266 1996 05       		.uleb128 0x5
 11267 1997 03       		.byte	0x3
 11268 1998 00000000 		.4byte	copedent
 11269 199c 07       		.uleb128 0x7
 11270 199d A2000000 		.4byte	0xa2
 11271 19a1 B2190000 		.4byte	0x19b2
 11272 19a5 08       		.uleb128 0x8
 11273 19a6 36010000 		.4byte	0x136
 11274 19aa 06       		.byte	0x6
 11275 19ab 08       		.uleb128 0x8
 11276 19ac 36010000 		.4byte	0x136
 11277 19b0 0D       		.byte	0xd
 11278 19b1 00       		.byte	0
 11279 19b2 27       		.uleb128 0x27
 11280 19b3 81010000 		.4byte	.LASF274
 11281 19b7 01       		.byte	0x1
 11282 19b8 9D01     		.2byte	0x19d
 11283 19ba 9C190000 		.4byte	0x199c
 11284 19be 05       		.uleb128 0x5
 11285 19bf 03       		.byte	0x3
 11286 19c0 00000000 		.4byte	copedentNamesArray
 11287 19c4 07       		.uleb128 0x7
 11288 19c5 FD000000 		.4byte	0xfd
 11289 19c9 D4190000 		.4byte	0x19d4
 11290 19cd 08       		.uleb128 0x8
 11291 19ce 36010000 		.4byte	0x136
 11292 19d2 0B       		.byte	0xb
 11293 19d3 00       		.byte	0
 11294 19d4 27       		.uleb128 0x27
 11295 19d5 D1020000 		.4byte	.LASF275
 11296 19d9 01       		.byte	0x1
 11297 19da 9F01     		.2byte	0x19f
 11298 19dc C4190000 		.4byte	0x19c4
 11299 19e0 05       		.uleb128 0x5
 11300 19e1 03       		.byte	0x3
 11301 19e2 00000000 		.4byte	prevStringPitchBend
 11302 19e6 07       		.uleb128 0x7
 11303 19e7 FD000000 		.4byte	0xfd
 11304 19eb FC190000 		.4byte	0x19fc
 11305 19ef 08       		.uleb128 0x8
 11306 19f0 36010000 		.4byte	0x136
 11307 19f4 09       		.byte	0x9
 11308 19f5 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 243


 11309 19f6 36010000 		.4byte	0x136
 11310 19fa 0B       		.byte	0xb
 11311 19fb 00       		.byte	0
 11312 19fc 27       		.uleb128 0x27
 11313 19fd 9F0F0000 		.4byte	.LASF276
 11314 1a01 01       		.byte	0x1
 11315 1a02 A101     		.2byte	0x1a1
 11316 1a04 E6190000 		.4byte	0x19e6
 11317 1a08 05       		.uleb128 0x5
 11318 1a09 03       		.byte	0x3
 11319 1a0a 00000000 		.4byte	pedals
 11320 1a0e 27       		.uleb128 0x27
 11321 1a0f 5A0B0000 		.4byte	.LASF277
 11322 1a13 01       		.byte	0x1
 11323 1a14 A401     		.2byte	0x1a4
 11324 1a16 C4190000 		.4byte	0x19c4
 11325 1a1a 05       		.uleb128 0x5
 11326 1a1b 03       		.byte	0x3
 11327 1a1c 00000000 		.4byte	openStringFrequencies
 11328 1a20 27       		.uleb128 0x27
 11329 1a21 170E0000 		.4byte	.LASF278
 11330 1a25 01       		.byte	0x1
 11331 1a26 A501     		.2byte	0x1a5
 11332 1a28 C4190000 		.4byte	0x19c4
 11333 1a2c 05       		.uleb128 0x5
 11334 1a2d 03       		.byte	0x3
 11335 1a2e 00000000 		.4byte	stringMappedPositions
 11336 1a32 27       		.uleb128 0x27
 11337 1a33 49070000 		.4byte	.LASF279
 11338 1a37 01       		.byte	0x1
 11339 1a38 A601     		.2byte	0x1a6
 11340 1a3a C4190000 		.4byte	0x19c4
 11341 1a3e 05       		.uleb128 0x5
 11342 1a3f 03       		.byte	0x3
 11343 1a40 00000000 		.4byte	invStringMappedPositions
 11344 1a44 27       		.uleb128 0x27
 11345 1a45 D60F0000 		.4byte	.LASF280
 11346 1a49 01       		.byte	0x1
 11347 1a4a A701     		.2byte	0x1a7
 11348 1a4c C4190000 		.4byte	0x19c4
 11349 1a50 05       		.uleb128 0x5
 11350 1a51 03       		.byte	0x3
 11351 1a52 00000000 		.4byte	stringFrequencies
 11352 1a56 27       		.uleb128 0x27
 11353 1a57 3B040000 		.4byte	.LASF281
 11354 1a5b 01       		.byte	0x1
 11355 1a5c A801     		.2byte	0x1a8
 11356 1a5e C4190000 		.4byte	0x19c4
 11357 1a62 05       		.uleb128 0x5
 11358 1a63 03       		.byte	0x3
 11359 1a64 00000000 		.4byte	stringOctave
 11360 1a68 27       		.uleb128 0x27
 11361 1a69 BB090000 		.4byte	.LASF282
 11362 1a6d 01       		.byte	0x1
 11363 1a6e A901     		.2byte	0x1a9
 11364 1a70 C4190000 		.4byte	0x19c4
 11365 1a74 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 244


 11366 1a75 03       		.byte	0x3
 11367 1a76 00000000 		.4byte	stringPitch
 11368 1a7a 27       		.uleb128 0x27
 11369 1a7b C80D0000 		.4byte	.LASF283
 11370 1a7f 01       		.byte	0x1
 11371 1a80 AA01     		.2byte	0x1aa
 11372 1a82 C4190000 		.4byte	0x19c4
 11373 1a86 05       		.uleb128 0x5
 11374 1a87 03       		.byte	0x3
 11375 1a88 00000000 		.4byte	stringMIDI
 11376 1a8c 07       		.uleb128 0x7
 11377 1a8d 94000000 		.4byte	0x94
 11378 1a91 9C1A0000 		.4byte	0x1a9c
 11379 1a95 08       		.uleb128 0x8
 11380 1a96 36010000 		.4byte	0x136
 11381 1a9a 0B       		.byte	0xb
 11382 1a9b 00       		.byte	0
 11383 1a9c 27       		.uleb128 0x27
 11384 1a9d 79080000 		.4byte	.LASF284
 11385 1aa1 01       		.byte	0x1
 11386 1aa2 AB01     		.2byte	0x1ab
 11387 1aa4 8C1A0000 		.4byte	0x1a8c
 11388 1aa8 05       		.uleb128 0x5
 11389 1aa9 03       		.byte	0x3
 11390 1aaa 00000000 		.4byte	openStringMIDI_Int
 11391 1aae 27       		.uleb128 0x27
 11392 1aaf 3D0D0000 		.4byte	.LASF285
 11393 1ab3 01       		.byte	0x1
 11394 1ab4 AC01     		.2byte	0x1ac
 11395 1ab6 94000000 		.4byte	0x94
 11396 1aba 05       		.uleb128 0x5
 11397 1abb 03       		.byte	0x3
 11398 1abc 00000000 		.4byte	OLEDcount
 11399 1ac0 27       		.uleb128 0x27
 11400 1ac1 CD090000 		.4byte	.LASF286
 11401 1ac5 01       		.byte	0x1
 11402 1ac6 AE01     		.2byte	0x1ae
 11403 1ac8 94000000 		.4byte	0x94
 11404 1acc 05       		.uleb128 0x5
 11405 1acd 03       		.byte	0x3
 11406 1ace 00000000 		.4byte	mainOLEDWaitingToSend
 11407 1ad2 27       		.uleb128 0x27
 11408 1ad3 57010000 		.4byte	.LASF287
 11409 1ad7 01       		.byte	0x1
 11410 1ad8 AF01     		.2byte	0x1af
 11411 1ada 94000000 		.4byte	0x94
 11412 1ade 05       		.uleb128 0x5
 11413 1adf 03       		.byte	0x3
 11414 1ae0 00000000 		.4byte	macroOLEDWaitingToSend
 11415 1ae4 07       		.uleb128 0x7
 11416 1ae5 94000000 		.4byte	0x94
 11417 1ae9 F41A0000 		.4byte	0x1af4
 11418 1aed 08       		.uleb128 0x8
 11419 1aee 36010000 		.4byte	0x136
 11420 1af2 3F       		.byte	0x3f
 11421 1af3 00       		.byte	0
 11422 1af4 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 245


 11423 1af5 A1040000 		.4byte	.LASF288
 11424 1af9 01       		.byte	0x1
 11425 1afa B101     		.2byte	0x1b1
 11426 1afc E41A0000 		.4byte	0x1ae4
 11427 1b00 05       		.uleb128 0x5
 11428 1b01 03       		.byte	0x3
 11429 1b02 00000000 		.4byte	presetAlreadyDisplayed
 11430 1b06 27       		.uleb128 0x27
 11431 1b07 600D0000 		.4byte	.LASF289
 11432 1b0b 01       		.byte	0x1
 11433 1b0c B301     		.2byte	0x1b3
 11434 1b0e 27180000 		.4byte	0x1827
 11435 1b12 05       		.uleb128 0x5
 11436 1b13 03       		.byte	0x3
 11437 1b14 00000000 		.4byte	pedals_float
 11438 1b18 27       		.uleb128 0x27
 11439 1b19 F20B0000 		.4byte	.LASF290
 11440 1b1d 01       		.byte	0x1
 11441 1b1e BB01     		.2byte	0x1bb
 11442 1b20 94000000 		.4byte	0x94
 11443 1b24 05       		.uleb128 0x5
 11444 1b25 03       		.byte	0x3
 11445 1b26 00000000 		.4byte	currentNeck
 11446 1b2a 27       		.uleb128 0x27
 11447 1b2b FE0B0000 		.4byte	.LASF291
 11448 1b2f 01       		.byte	0x1
 11449 1b30 BD01     		.2byte	0x1bd
 11450 1b32 94000000 		.4byte	0x94
 11451 1b36 05       		.uleb128 0x5
 11452 1b37 03       		.byte	0x3
 11453 1b38 00000000 		.4byte	editMode
 11454 1b3c 27       		.uleb128 0x27
 11455 1b3d 620E0000 		.4byte	.LASF292
 11456 1b41 01       		.byte	0x1
 11457 1b42 BE01     		.2byte	0x1be
 11458 1b44 94000000 		.4byte	0x94
 11459 1b48 05       		.uleb128 0x5
 11460 1b49 03       		.byte	0x3
 11461 1b4a 00000000 		.4byte	calibrationMode
 11462 1b4e 27       		.uleb128 0x27
 11463 1b4f 86070000 		.4byte	.LASF293
 11464 1b53 01       		.byte	0x1
 11465 1b54 7E07     		.2byte	0x77e
 11466 1b56 8C1A0000 		.4byte	0x1a8c
 11467 1b5a 05       		.uleb128 0x5
 11468 1b5b 03       		.byte	0x3
 11469 1b5c 00000000 		.4byte	prevNotes
 11470 1b60 27       		.uleb128 0x27
 11471 1b61 E40A0000 		.4byte	.LASF294
 11472 1b65 01       		.byte	0x1
 11473 1b66 F307     		.2byte	0x7f3
 11474 1b68 03020000 		.4byte	0x203
 11475 1b6c 05       		.uleb128 0x5
 11476 1b6d 03       		.byte	0x3
 11477 1b6e 00000000 		.4byte	checkStatus
 11478 1b72 27       		.uleb128 0x27
 11479 1b73 490C0000 		.4byte	.LASF295
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 246


 11480 1b77 01       		.byte	0x1
 11481 1b78 F407     		.2byte	0x7f4
 11482 1b7a 08020000 		.4byte	0x208
 11483 1b7e 05       		.uleb128 0x5
 11484 1b7f 03       		.byte	0x3
 11485 1b80 00000000 		.4byte	checkBase
 11486 1b84 27       		.uleb128 0x27
 11487 1b85 040D0000 		.4byte	.LASF296
 11488 1b89 01       		.byte	0x1
 11489 1b8a F807     		.2byte	0x7f8
 11490 1b8c 94000000 		.4byte	0x94
 11491 1b90 05       		.uleb128 0x5
 11492 1b91 03       		.byte	0x3
 11493 1b92 00000000 		.4byte	SPI_errors
 11494 1b96 07       		.uleb128 0x7
 11495 1b97 03020000 		.4byte	0x203
 11496 1b9b A61B0000 		.4byte	0x1ba6
 11497 1b9f 08       		.uleb128 0x8
 11498 1ba0 36010000 		.4byte	0x136
 11499 1ba4 03       		.byte	0x3
 11500 1ba5 00       		.byte	0
 11501 1ba6 27       		.uleb128 0x27
 11502 1ba7 2A0B0000 		.4byte	.LASF89
 11503 1bab 01       		.byte	0x1
 11504 1bac 1109     		.2byte	0x911
 11505 1bae B81B0000 		.4byte	0x1bb8
 11506 1bb2 05       		.uleb128 0x5
 11507 1bb3 03       		.byte	0x3
 11508 1bb4 00000000 		.4byte	tempMIDI
 11509 1bb8 06       		.uleb128 0x6
 11510 1bb9 961B0000 		.4byte	0x1b96
 11511 1bbd 27       		.uleb128 0x27
 11512 1bbe 1F000000 		.4byte	.LASF297
 11513 1bc2 01       		.byte	0x1
 11514 1bc3 1209     		.2byte	0x912
 11515 1bc5 03020000 		.4byte	0x203
 11516 1bc9 05       		.uleb128 0x5
 11517 1bca 03       		.byte	0x3
 11518 1bcb 00000000 		.4byte	firstSysex
 11519 1bcf 27       		.uleb128 0x27
 11520 1bd0 02060000 		.4byte	.LASF298
 11521 1bd4 01       		.byte	0x1
 11522 1bd5 1309     		.2byte	0x913
 11523 1bd7 E11B0000 		.4byte	0x1be1
 11524 1bdb 05       		.uleb128 0x5
 11525 1bdc 03       		.byte	0x3
 11526 1bdd 00000000 		.4byte	sysexPointerMask
 11527 1be1 24       		.uleb128 0x24
 11528 1be2 B8000000 		.4byte	0xb8
 11529 1be6 00       		.byte	0
 11530              		.section	.debug_abbrev,"",%progbits
 11531              	.Ldebug_abbrev0:
 11532 0000 01       		.uleb128 0x1
 11533 0001 11       		.uleb128 0x11
 11534 0002 01       		.byte	0x1
 11535 0003 25       		.uleb128 0x25
 11536 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 247


 11537 0005 13       		.uleb128 0x13
 11538 0006 0B       		.uleb128 0xb
 11539 0007 03       		.uleb128 0x3
 11540 0008 0E       		.uleb128 0xe
 11541 0009 1B       		.uleb128 0x1b
 11542 000a 0E       		.uleb128 0xe
 11543 000b 55       		.uleb128 0x55
 11544 000c 17       		.uleb128 0x17
 11545 000d 11       		.uleb128 0x11
 11546 000e 01       		.uleb128 0x1
 11547 000f 10       		.uleb128 0x10
 11548 0010 17       		.uleb128 0x17
 11549 0011 00       		.byte	0
 11550 0012 00       		.byte	0
 11551 0013 02       		.uleb128 0x2
 11552 0014 24       		.uleb128 0x24
 11553 0015 00       		.byte	0
 11554 0016 0B       		.uleb128 0xb
 11555 0017 0B       		.uleb128 0xb
 11556 0018 3E       		.uleb128 0x3e
 11557 0019 0B       		.uleb128 0xb
 11558 001a 03       		.uleb128 0x3
 11559 001b 0E       		.uleb128 0xe
 11560 001c 00       		.byte	0
 11561 001d 00       		.byte	0
 11562 001e 03       		.uleb128 0x3
 11563 001f 16       		.uleb128 0x16
 11564 0020 00       		.byte	0
 11565 0021 03       		.uleb128 0x3
 11566 0022 0E       		.uleb128 0xe
 11567 0023 3A       		.uleb128 0x3a
 11568 0024 0B       		.uleb128 0xb
 11569 0025 3B       		.uleb128 0x3b
 11570 0026 0B       		.uleb128 0xb
 11571 0027 49       		.uleb128 0x49
 11572 0028 13       		.uleb128 0x13
 11573 0029 00       		.byte	0
 11574 002a 00       		.byte	0
 11575 002b 04       		.uleb128 0x4
 11576 002c 24       		.uleb128 0x24
 11577 002d 00       		.byte	0
 11578 002e 0B       		.uleb128 0xb
 11579 002f 0B       		.uleb128 0xb
 11580 0030 3E       		.uleb128 0x3e
 11581 0031 0B       		.uleb128 0xb
 11582 0032 03       		.uleb128 0x3
 11583 0033 08       		.uleb128 0x8
 11584 0034 00       		.byte	0
 11585 0035 00       		.byte	0
 11586 0036 05       		.uleb128 0x5
 11587 0037 16       		.uleb128 0x16
 11588 0038 00       		.byte	0
 11589 0039 03       		.uleb128 0x3
 11590 003a 0E       		.uleb128 0xe
 11591 003b 3A       		.uleb128 0x3a
 11592 003c 0B       		.uleb128 0xb
 11593 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 248


 11594 003e 05       		.uleb128 0x5
 11595 003f 49       		.uleb128 0x49
 11596 0040 13       		.uleb128 0x13
 11597 0041 00       		.byte	0
 11598 0042 00       		.byte	0
 11599 0043 06       		.uleb128 0x6
 11600 0044 35       		.uleb128 0x35
 11601 0045 00       		.byte	0
 11602 0046 49       		.uleb128 0x49
 11603 0047 13       		.uleb128 0x13
 11604 0048 00       		.byte	0
 11605 0049 00       		.byte	0
 11606 004a 07       		.uleb128 0x7
 11607 004b 01       		.uleb128 0x1
 11608 004c 01       		.byte	0x1
 11609 004d 49       		.uleb128 0x49
 11610 004e 13       		.uleb128 0x13
 11611 004f 01       		.uleb128 0x1
 11612 0050 13       		.uleb128 0x13
 11613 0051 00       		.byte	0
 11614 0052 00       		.byte	0
 11615 0053 08       		.uleb128 0x8
 11616 0054 21       		.uleb128 0x21
 11617 0055 00       		.byte	0
 11618 0056 49       		.uleb128 0x49
 11619 0057 13       		.uleb128 0x13
 11620 0058 2F       		.uleb128 0x2f
 11621 0059 0B       		.uleb128 0xb
 11622 005a 00       		.byte	0
 11623 005b 00       		.byte	0
 11624 005c 09       		.uleb128 0x9
 11625 005d 13       		.uleb128 0x13
 11626 005e 01       		.byte	0x1
 11627 005f 0B       		.uleb128 0xb
 11628 0060 0B       		.uleb128 0xb
 11629 0061 3A       		.uleb128 0x3a
 11630 0062 0B       		.uleb128 0xb
 11631 0063 3B       		.uleb128 0x3b
 11632 0064 05       		.uleb128 0x5
 11633 0065 01       		.uleb128 0x1
 11634 0066 13       		.uleb128 0x13
 11635 0067 00       		.byte	0
 11636 0068 00       		.byte	0
 11637 0069 0A       		.uleb128 0xa
 11638 006a 0D       		.uleb128 0xd
 11639 006b 00       		.byte	0
 11640 006c 03       		.uleb128 0x3
 11641 006d 0E       		.uleb128 0xe
 11642 006e 3A       		.uleb128 0x3a
 11643 006f 0B       		.uleb128 0xb
 11644 0070 3B       		.uleb128 0x3b
 11645 0071 05       		.uleb128 0x5
 11646 0072 49       		.uleb128 0x49
 11647 0073 13       		.uleb128 0x13
 11648 0074 38       		.uleb128 0x38
 11649 0075 0B       		.uleb128 0xb
 11650 0076 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 249


 11651 0077 00       		.byte	0
 11652 0078 0B       		.uleb128 0xb
 11653 0079 04       		.uleb128 0x4
 11654 007a 01       		.byte	0x1
 11655 007b 0B       		.uleb128 0xb
 11656 007c 0B       		.uleb128 0xb
 11657 007d 49       		.uleb128 0x49
 11658 007e 13       		.uleb128 0x13
 11659 007f 3A       		.uleb128 0x3a
 11660 0080 0B       		.uleb128 0xb
 11661 0081 3B       		.uleb128 0x3b
 11662 0082 05       		.uleb128 0x5
 11663 0083 01       		.uleb128 0x1
 11664 0084 13       		.uleb128 0x13
 11665 0085 00       		.byte	0
 11666 0086 00       		.byte	0
 11667 0087 0C       		.uleb128 0xc
 11668 0088 28       		.uleb128 0x28
 11669 0089 00       		.byte	0
 11670 008a 03       		.uleb128 0x3
 11671 008b 0E       		.uleb128 0xe
 11672 008c 1C       		.uleb128 0x1c
 11673 008d 0B       		.uleb128 0xb
 11674 008e 00       		.byte	0
 11675 008f 00       		.byte	0
 11676 0090 0D       		.uleb128 0xd
 11677 0091 04       		.uleb128 0x4
 11678 0092 01       		.byte	0x1
 11679 0093 03       		.uleb128 0x3
 11680 0094 0E       		.uleb128 0xe
 11681 0095 0B       		.uleb128 0xb
 11682 0096 0B       		.uleb128 0xb
 11683 0097 49       		.uleb128 0x49
 11684 0098 13       		.uleb128 0x13
 11685 0099 3A       		.uleb128 0x3a
 11686 009a 0B       		.uleb128 0xb
 11687 009b 3B       		.uleb128 0x3b
 11688 009c 0B       		.uleb128 0xb
 11689 009d 01       		.uleb128 0x1
 11690 009e 13       		.uleb128 0x13
 11691 009f 00       		.byte	0
 11692 00a0 00       		.byte	0
 11693 00a1 0E       		.uleb128 0xe
 11694 00a2 17       		.uleb128 0x17
 11695 00a3 01       		.byte	0x1
 11696 00a4 03       		.uleb128 0x3
 11697 00a5 0E       		.uleb128 0xe
 11698 00a6 0B       		.uleb128 0xb
 11699 00a7 0B       		.uleb128 0xb
 11700 00a8 3A       		.uleb128 0x3a
 11701 00a9 0B       		.uleb128 0xb
 11702 00aa 3B       		.uleb128 0x3b
 11703 00ab 0B       		.uleb128 0xb
 11704 00ac 01       		.uleb128 0x1
 11705 00ad 13       		.uleb128 0x13
 11706 00ae 00       		.byte	0
 11707 00af 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 250


 11708 00b0 0F       		.uleb128 0xf
 11709 00b1 0D       		.uleb128 0xd
 11710 00b2 00       		.byte	0
 11711 00b3 03       		.uleb128 0x3
 11712 00b4 08       		.uleb128 0x8
 11713 00b5 3A       		.uleb128 0x3a
 11714 00b6 0B       		.uleb128 0xb
 11715 00b7 3B       		.uleb128 0x3b
 11716 00b8 0B       		.uleb128 0xb
 11717 00b9 49       		.uleb128 0x49
 11718 00ba 13       		.uleb128 0x13
 11719 00bb 00       		.byte	0
 11720 00bc 00       		.byte	0
 11721 00bd 10       		.uleb128 0x10
 11722 00be 2E       		.uleb128 0x2e
 11723 00bf 01       		.byte	0x1
 11724 00c0 3F       		.uleb128 0x3f
 11725 00c1 19       		.uleb128 0x19
 11726 00c2 03       		.uleb128 0x3
 11727 00c3 0E       		.uleb128 0xe
 11728 00c4 3A       		.uleb128 0x3a
 11729 00c5 0B       		.uleb128 0xb
 11730 00c6 3B       		.uleb128 0x3b
 11731 00c7 0B       		.uleb128 0xb
 11732 00c8 27       		.uleb128 0x27
 11733 00c9 19       		.uleb128 0x19
 11734 00ca 11       		.uleb128 0x11
 11735 00cb 01       		.uleb128 0x1
 11736 00cc 12       		.uleb128 0x12
 11737 00cd 06       		.uleb128 0x6
 11738 00ce 40       		.uleb128 0x40
 11739 00cf 18       		.uleb128 0x18
 11740 00d0 9642     		.uleb128 0x2116
 11741 00d2 19       		.uleb128 0x19
 11742 00d3 01       		.uleb128 0x1
 11743 00d4 13       		.uleb128 0x13
 11744 00d5 00       		.byte	0
 11745 00d6 00       		.byte	0
 11746 00d7 11       		.uleb128 0x11
 11747 00d8 0B       		.uleb128 0xb
 11748 00d9 01       		.byte	0x1
 11749 00da 11       		.uleb128 0x11
 11750 00db 01       		.uleb128 0x1
 11751 00dc 12       		.uleb128 0x12
 11752 00dd 06       		.uleb128 0x6
 11753 00de 00       		.byte	0
 11754 00df 00       		.byte	0
 11755 00e0 12       		.uleb128 0x12
 11756 00e1 34       		.uleb128 0x34
 11757 00e2 00       		.byte	0
 11758 00e3 03       		.uleb128 0x3
 11759 00e4 08       		.uleb128 0x8
 11760 00e5 3A       		.uleb128 0x3a
 11761 00e6 0B       		.uleb128 0xb
 11762 00e7 3B       		.uleb128 0x3b
 11763 00e8 0B       		.uleb128 0xb
 11764 00e9 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 251


 11765 00ea 13       		.uleb128 0x13
 11766 00eb 02       		.uleb128 0x2
 11767 00ec 18       		.uleb128 0x18
 11768 00ed 00       		.byte	0
 11769 00ee 00       		.byte	0
 11770 00ef 13       		.uleb128 0x13
 11771 00f0 2E       		.uleb128 0x2e
 11772 00f1 00       		.byte	0
 11773 00f2 3F       		.uleb128 0x3f
 11774 00f3 19       		.uleb128 0x19
 11775 00f4 03       		.uleb128 0x3
 11776 00f5 0E       		.uleb128 0xe
 11777 00f6 3A       		.uleb128 0x3a
 11778 00f7 0B       		.uleb128 0xb
 11779 00f8 3B       		.uleb128 0x3b
 11780 00f9 0B       		.uleb128 0xb
 11781 00fa 27       		.uleb128 0x27
 11782 00fb 19       		.uleb128 0x19
 11783 00fc 11       		.uleb128 0x11
 11784 00fd 01       		.uleb128 0x1
 11785 00fe 12       		.uleb128 0x12
 11786 00ff 06       		.uleb128 0x6
 11787 0100 40       		.uleb128 0x40
 11788 0101 18       		.uleb128 0x18
 11789 0102 9642     		.uleb128 0x2116
 11790 0104 19       		.uleb128 0x19
 11791 0105 00       		.byte	0
 11792 0106 00       		.byte	0
 11793 0107 14       		.uleb128 0x14
 11794 0108 2E       		.uleb128 0x2e
 11795 0109 00       		.byte	0
 11796 010a 3F       		.uleb128 0x3f
 11797 010b 19       		.uleb128 0x19
 11798 010c 03       		.uleb128 0x3
 11799 010d 0E       		.uleb128 0xe
 11800 010e 3A       		.uleb128 0x3a
 11801 010f 0B       		.uleb128 0xb
 11802 0110 3B       		.uleb128 0x3b
 11803 0111 05       		.uleb128 0x5
 11804 0112 27       		.uleb128 0x27
 11805 0113 19       		.uleb128 0x19
 11806 0114 11       		.uleb128 0x11
 11807 0115 01       		.uleb128 0x1
 11808 0116 12       		.uleb128 0x12
 11809 0117 06       		.uleb128 0x6
 11810 0118 40       		.uleb128 0x40
 11811 0119 18       		.uleb128 0x18
 11812 011a 9642     		.uleb128 0x2116
 11813 011c 19       		.uleb128 0x19
 11814 011d 00       		.byte	0
 11815 011e 00       		.byte	0
 11816 011f 15       		.uleb128 0x15
 11817 0120 2E       		.uleb128 0x2e
 11818 0121 01       		.byte	0x1
 11819 0122 3F       		.uleb128 0x3f
 11820 0123 19       		.uleb128 0x19
 11821 0124 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 252


 11822 0125 0E       		.uleb128 0xe
 11823 0126 3A       		.uleb128 0x3a
 11824 0127 0B       		.uleb128 0xb
 11825 0128 3B       		.uleb128 0x3b
 11826 0129 05       		.uleb128 0x5
 11827 012a 27       		.uleb128 0x27
 11828 012b 19       		.uleb128 0x19
 11829 012c 49       		.uleb128 0x49
 11830 012d 13       		.uleb128 0x13
 11831 012e 11       		.uleb128 0x11
 11832 012f 01       		.uleb128 0x1
 11833 0130 12       		.uleb128 0x12
 11834 0131 06       		.uleb128 0x6
 11835 0132 40       		.uleb128 0x40
 11836 0133 18       		.uleb128 0x18
 11837 0134 9642     		.uleb128 0x2116
 11838 0136 19       		.uleb128 0x19
 11839 0137 01       		.uleb128 0x1
 11840 0138 13       		.uleb128 0x13
 11841 0139 00       		.byte	0
 11842 013a 00       		.byte	0
 11843 013b 16       		.uleb128 0x16
 11844 013c 05       		.uleb128 0x5
 11845 013d 00       		.byte	0
 11846 013e 03       		.uleb128 0x3
 11847 013f 08       		.uleb128 0x8
 11848 0140 3A       		.uleb128 0x3a
 11849 0141 0B       		.uleb128 0xb
 11850 0142 3B       		.uleb128 0x3b
 11851 0143 05       		.uleb128 0x5
 11852 0144 49       		.uleb128 0x49
 11853 0145 13       		.uleb128 0x13
 11854 0146 02       		.uleb128 0x2
 11855 0147 18       		.uleb128 0x18
 11856 0148 00       		.byte	0
 11857 0149 00       		.byte	0
 11858 014a 17       		.uleb128 0x17
 11859 014b 34       		.uleb128 0x34
 11860 014c 00       		.byte	0
 11861 014d 03       		.uleb128 0x3
 11862 014e 0E       		.uleb128 0xe
 11863 014f 3A       		.uleb128 0x3a
 11864 0150 0B       		.uleb128 0xb
 11865 0151 3B       		.uleb128 0x3b
 11866 0152 05       		.uleb128 0x5
 11867 0153 49       		.uleb128 0x49
 11868 0154 13       		.uleb128 0x13
 11869 0155 02       		.uleb128 0x2
 11870 0156 18       		.uleb128 0x18
 11871 0157 00       		.byte	0
 11872 0158 00       		.byte	0
 11873 0159 18       		.uleb128 0x18
 11874 015a 05       		.uleb128 0x5
 11875 015b 00       		.byte	0
 11876 015c 03       		.uleb128 0x3
 11877 015d 0E       		.uleb128 0xe
 11878 015e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 253


 11879 015f 0B       		.uleb128 0xb
 11880 0160 3B       		.uleb128 0x3b
 11881 0161 05       		.uleb128 0x5
 11882 0162 49       		.uleb128 0x49
 11883 0163 13       		.uleb128 0x13
 11884 0164 02       		.uleb128 0x2
 11885 0165 18       		.uleb128 0x18
 11886 0166 00       		.byte	0
 11887 0167 00       		.byte	0
 11888 0168 19       		.uleb128 0x19
 11889 0169 34       		.uleb128 0x34
 11890 016a 00       		.byte	0
 11891 016b 03       		.uleb128 0x3
 11892 016c 08       		.uleb128 0x8
 11893 016d 3A       		.uleb128 0x3a
 11894 016e 0B       		.uleb128 0xb
 11895 016f 3B       		.uleb128 0x3b
 11896 0170 05       		.uleb128 0x5
 11897 0171 49       		.uleb128 0x49
 11898 0172 13       		.uleb128 0x13
 11899 0173 02       		.uleb128 0x2
 11900 0174 18       		.uleb128 0x18
 11901 0175 00       		.byte	0
 11902 0176 00       		.byte	0
 11903 0177 1A       		.uleb128 0x1a
 11904 0178 2E       		.uleb128 0x2e
 11905 0179 01       		.byte	0x1
 11906 017a 3F       		.uleb128 0x3f
 11907 017b 19       		.uleb128 0x19
 11908 017c 03       		.uleb128 0x3
 11909 017d 08       		.uleb128 0x8
 11910 017e 3A       		.uleb128 0x3a
 11911 017f 0B       		.uleb128 0xb
 11912 0180 3B       		.uleb128 0x3b
 11913 0181 05       		.uleb128 0x5
 11914 0182 27       		.uleb128 0x27
 11915 0183 19       		.uleb128 0x19
 11916 0184 49       		.uleb128 0x49
 11917 0185 13       		.uleb128 0x13
 11918 0186 11       		.uleb128 0x11
 11919 0187 01       		.uleb128 0x1
 11920 0188 12       		.uleb128 0x12
 11921 0189 06       		.uleb128 0x6
 11922 018a 40       		.uleb128 0x40
 11923 018b 18       		.uleb128 0x18
 11924 018c 9642     		.uleb128 0x2116
 11925 018e 19       		.uleb128 0x19
 11926 018f 01       		.uleb128 0x1
 11927 0190 13       		.uleb128 0x13
 11928 0191 00       		.byte	0
 11929 0192 00       		.byte	0
 11930 0193 1B       		.uleb128 0x1b
 11931 0194 2E       		.uleb128 0x2e
 11932 0195 00       		.byte	0
 11933 0196 3F       		.uleb128 0x3f
 11934 0197 19       		.uleb128 0x19
 11935 0198 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 254


 11936 0199 0E       		.uleb128 0xe
 11937 019a 3A       		.uleb128 0x3a
 11938 019b 0B       		.uleb128 0xb
 11939 019c 3B       		.uleb128 0x3b
 11940 019d 05       		.uleb128 0x5
 11941 019e 11       		.uleb128 0x11
 11942 019f 01       		.uleb128 0x1
 11943 01a0 12       		.uleb128 0x12
 11944 01a1 06       		.uleb128 0x6
 11945 01a2 40       		.uleb128 0x40
 11946 01a3 18       		.uleb128 0x18
 11947 01a4 9742     		.uleb128 0x2117
 11948 01a6 19       		.uleb128 0x19
 11949 01a7 00       		.byte	0
 11950 01a8 00       		.byte	0
 11951 01a9 1C       		.uleb128 0x1c
 11952 01aa 2E       		.uleb128 0x2e
 11953 01ab 01       		.byte	0x1
 11954 01ac 3F       		.uleb128 0x3f
 11955 01ad 19       		.uleb128 0x19
 11956 01ae 03       		.uleb128 0x3
 11957 01af 0E       		.uleb128 0xe
 11958 01b0 3A       		.uleb128 0x3a
 11959 01b1 0B       		.uleb128 0xb
 11960 01b2 3B       		.uleb128 0x3b
 11961 01b3 05       		.uleb128 0x5
 11962 01b4 11       		.uleb128 0x11
 11963 01b5 01       		.uleb128 0x1
 11964 01b6 12       		.uleb128 0x12
 11965 01b7 06       		.uleb128 0x6
 11966 01b8 40       		.uleb128 0x40
 11967 01b9 18       		.uleb128 0x18
 11968 01ba 9642     		.uleb128 0x2116
 11969 01bc 19       		.uleb128 0x19
 11970 01bd 01       		.uleb128 0x1
 11971 01be 13       		.uleb128 0x13
 11972 01bf 00       		.byte	0
 11973 01c0 00       		.byte	0
 11974 01c1 1D       		.uleb128 0x1d
 11975 01c2 0B       		.uleb128 0xb
 11976 01c3 01       		.byte	0x1
 11977 01c4 11       		.uleb128 0x11
 11978 01c5 01       		.uleb128 0x1
 11979 01c6 12       		.uleb128 0x12
 11980 01c7 06       		.uleb128 0x6
 11981 01c8 01       		.uleb128 0x1
 11982 01c9 13       		.uleb128 0x13
 11983 01ca 00       		.byte	0
 11984 01cb 00       		.byte	0
 11985 01cc 1E       		.uleb128 0x1e
 11986 01cd 2E       		.uleb128 0x2e
 11987 01ce 00       		.byte	0
 11988 01cf 3F       		.uleb128 0x3f
 11989 01d0 19       		.uleb128 0x19
 11990 01d1 03       		.uleb128 0x3
 11991 01d2 0E       		.uleb128 0xe
 11992 01d3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 255


 11993 01d4 0B       		.uleb128 0xb
 11994 01d5 3B       		.uleb128 0x3b
 11995 01d6 05       		.uleb128 0x5
 11996 01d7 11       		.uleb128 0x11
 11997 01d8 01       		.uleb128 0x1
 11998 01d9 12       		.uleb128 0x12
 11999 01da 06       		.uleb128 0x6
 12000 01db 40       		.uleb128 0x40
 12001 01dc 18       		.uleb128 0x18
 12002 01dd 9642     		.uleb128 0x2116
 12003 01df 19       		.uleb128 0x19
 12004 01e0 00       		.byte	0
 12005 01e1 00       		.byte	0
 12006 01e2 1F       		.uleb128 0x1f
 12007 01e3 2E       		.uleb128 0x2e
 12008 01e4 01       		.byte	0x1
 12009 01e5 3F       		.uleb128 0x3f
 12010 01e6 19       		.uleb128 0x19
 12011 01e7 03       		.uleb128 0x3
 12012 01e8 0E       		.uleb128 0xe
 12013 01e9 3A       		.uleb128 0x3a
 12014 01ea 0B       		.uleb128 0xb
 12015 01eb 3B       		.uleb128 0x3b
 12016 01ec 05       		.uleb128 0x5
 12017 01ed 27       		.uleb128 0x27
 12018 01ee 19       		.uleb128 0x19
 12019 01ef 11       		.uleb128 0x11
 12020 01f0 01       		.uleb128 0x1
 12021 01f1 12       		.uleb128 0x12
 12022 01f2 06       		.uleb128 0x6
 12023 01f3 40       		.uleb128 0x40
 12024 01f4 18       		.uleb128 0x18
 12025 01f5 9642     		.uleb128 0x2116
 12026 01f7 19       		.uleb128 0x19
 12027 01f8 01       		.uleb128 0x1
 12028 01f9 13       		.uleb128 0x13
 12029 01fa 00       		.byte	0
 12030 01fb 00       		.byte	0
 12031 01fc 20       		.uleb128 0x20
 12032 01fd 0F       		.uleb128 0xf
 12033 01fe 00       		.byte	0
 12034 01ff 0B       		.uleb128 0xb
 12035 0200 0B       		.uleb128 0xb
 12036 0201 49       		.uleb128 0x49
 12037 0202 13       		.uleb128 0x13
 12038 0203 00       		.byte	0
 12039 0204 00       		.byte	0
 12040 0205 21       		.uleb128 0x21
 12041 0206 34       		.uleb128 0x34
 12042 0207 00       		.byte	0
 12043 0208 03       		.uleb128 0x3
 12044 0209 0E       		.uleb128 0xe
 12045 020a 3A       		.uleb128 0x3a
 12046 020b 0B       		.uleb128 0xb
 12047 020c 3B       		.uleb128 0x3b
 12048 020d 0B       		.uleb128 0xb
 12049 020e 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 256


 12050 020f 13       		.uleb128 0x13
 12051 0210 02       		.uleb128 0x2
 12052 0211 18       		.uleb128 0x18
 12053 0212 00       		.byte	0
 12054 0213 00       		.byte	0
 12055 0214 22       		.uleb128 0x22
 12056 0215 34       		.uleb128 0x34
 12057 0216 00       		.byte	0
 12058 0217 03       		.uleb128 0x3
 12059 0218 0E       		.uleb128 0xe
 12060 0219 3A       		.uleb128 0x3a
 12061 021a 0B       		.uleb128 0xb
 12062 021b 3B       		.uleb128 0x3b
 12063 021c 0B       		.uleb128 0xb
 12064 021d 49       		.uleb128 0x49
 12065 021e 13       		.uleb128 0x13
 12066 021f 3F       		.uleb128 0x3f
 12067 0220 19       		.uleb128 0x19
 12068 0221 3C       		.uleb128 0x3c
 12069 0222 19       		.uleb128 0x19
 12070 0223 00       		.byte	0
 12071 0224 00       		.byte	0
 12072 0225 23       		.uleb128 0x23
 12073 0226 21       		.uleb128 0x21
 12074 0227 00       		.byte	0
 12075 0228 49       		.uleb128 0x49
 12076 0229 13       		.uleb128 0x13
 12077 022a 2F       		.uleb128 0x2f
 12078 022b 05       		.uleb128 0x5
 12079 022c 00       		.byte	0
 12080 022d 00       		.byte	0
 12081 022e 24       		.uleb128 0x24
 12082 022f 26       		.uleb128 0x26
 12083 0230 00       		.byte	0
 12084 0231 49       		.uleb128 0x49
 12085 0232 13       		.uleb128 0x13
 12086 0233 00       		.byte	0
 12087 0234 00       		.byte	0
 12088 0235 25       		.uleb128 0x25
 12089 0236 34       		.uleb128 0x34
 12090 0237 00       		.byte	0
 12091 0238 03       		.uleb128 0x3
 12092 0239 0E       		.uleb128 0xe
 12093 023a 3A       		.uleb128 0x3a
 12094 023b 0B       		.uleb128 0xb
 12095 023c 3B       		.uleb128 0x3b
 12096 023d 0B       		.uleb128 0xb
 12097 023e 49       		.uleb128 0x49
 12098 023f 13       		.uleb128 0x13
 12099 0240 3F       		.uleb128 0x3f
 12100 0241 19       		.uleb128 0x19
 12101 0242 02       		.uleb128 0x2
 12102 0243 18       		.uleb128 0x18
 12103 0244 00       		.byte	0
 12104 0245 00       		.byte	0
 12105 0246 26       		.uleb128 0x26
 12106 0247 34       		.uleb128 0x34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 257


 12107 0248 00       		.byte	0
 12108 0249 03       		.uleb128 0x3
 12109 024a 0E       		.uleb128 0xe
 12110 024b 3A       		.uleb128 0x3a
 12111 024c 0B       		.uleb128 0xb
 12112 024d 3B       		.uleb128 0x3b
 12113 024e 05       		.uleb128 0x5
 12114 024f 49       		.uleb128 0x49
 12115 0250 13       		.uleb128 0x13
 12116 0251 3F       		.uleb128 0x3f
 12117 0252 19       		.uleb128 0x19
 12118 0253 3C       		.uleb128 0x3c
 12119 0254 19       		.uleb128 0x19
 12120 0255 00       		.byte	0
 12121 0256 00       		.byte	0
 12122 0257 27       		.uleb128 0x27
 12123 0258 34       		.uleb128 0x34
 12124 0259 00       		.byte	0
 12125 025a 03       		.uleb128 0x3
 12126 025b 0E       		.uleb128 0xe
 12127 025c 3A       		.uleb128 0x3a
 12128 025d 0B       		.uleb128 0xb
 12129 025e 3B       		.uleb128 0x3b
 12130 025f 05       		.uleb128 0x5
 12131 0260 49       		.uleb128 0x49
 12132 0261 13       		.uleb128 0x13
 12133 0262 3F       		.uleb128 0x3f
 12134 0263 19       		.uleb128 0x19
 12135 0264 02       		.uleb128 0x2
 12136 0265 18       		.uleb128 0x18
 12137 0266 00       		.byte	0
 12138 0267 00       		.byte	0
 12139 0268 28       		.uleb128 0x28
 12140 0269 34       		.uleb128 0x34
 12141 026a 00       		.byte	0
 12142 026b 03       		.uleb128 0x3
 12143 026c 08       		.uleb128 0x8
 12144 026d 3A       		.uleb128 0x3a
 12145 026e 0B       		.uleb128 0xb
 12146 026f 3B       		.uleb128 0x3b
 12147 0270 0B       		.uleb128 0xb
 12148 0271 49       		.uleb128 0x49
 12149 0272 13       		.uleb128 0x13
 12150 0273 3F       		.uleb128 0x3f
 12151 0274 19       		.uleb128 0x19
 12152 0275 02       		.uleb128 0x2
 12153 0276 18       		.uleb128 0x18
 12154 0277 00       		.byte	0
 12155 0278 00       		.byte	0
 12156 0279 00       		.byte	0
 12157              		.section	.debug_aranges,"",%progbits
 12158 0000 0C010000 		.4byte	0x10c
 12159 0004 0200     		.2byte	0x2
 12160 0006 00000000 		.4byte	.Ldebug_info0
 12161 000a 04       		.byte	0x4
 12162 000b 00       		.byte	0
 12163 000c 0000     		.2byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 258


 12164 000e 0000     		.2byte	0
 12165 0010 00000000 		.4byte	.LFB64
 12166 0014 74010000 		.4byte	.LFE64-.LFB64
 12167 0018 00000000 		.4byte	.LFB65
 12168 001c 9C000000 		.4byte	.LFE65-.LFB65
 12169 0020 00000000 		.4byte	.LFB66
 12170 0024 14000000 		.4byte	.LFE66-.LFB66
 12171 0028 00000000 		.4byte	.LFB67
 12172 002c 7C000000 		.4byte	.LFE67-.LFB67
 12173 0030 00000000 		.4byte	.LFB68
 12174 0034 58000000 		.4byte	.LFE68-.LFB68
 12175 0038 00000000 		.4byte	.LFB69
 12176 003c 68000000 		.4byte	.LFE69-.LFB69
 12177 0040 00000000 		.4byte	.LFB70
 12178 0044 4C000000 		.4byte	.LFE70-.LFB70
 12179 0048 00000000 		.4byte	.LFB71
 12180 004c 46000000 		.4byte	.LFE71-.LFB71
 12181 0050 00000000 		.4byte	.LFB72
 12182 0054 56000000 		.4byte	.LFE72-.LFB72
 12183 0058 00000000 		.4byte	.LFB73
 12184 005c 0C000000 		.4byte	.LFE73-.LFB73
 12185 0060 00000000 		.4byte	.LFB74
 12186 0064 0C000000 		.4byte	.LFE74-.LFB74
 12187 0068 00000000 		.4byte	.LFB75
 12188 006c 0C010000 		.4byte	.LFE75-.LFB75
 12189 0070 00000000 		.4byte	.LFB76
 12190 0074 00190000 		.4byte	.LFE76-.LFB76
 12191 0078 00000000 		.4byte	.LFB77
 12192 007c 70000000 		.4byte	.LFE77-.LFB77
 12193 0080 00000000 		.4byte	.LFB78
 12194 0084 70010000 		.4byte	.LFE78-.LFB78
 12195 0088 00000000 		.4byte	.LFB79
 12196 008c CC000000 		.4byte	.LFE79-.LFB79
 12197 0090 00000000 		.4byte	.LFB80
 12198 0094 CC000000 		.4byte	.LFE80-.LFB80
 12199 0098 00000000 		.4byte	.LFB81
 12200 009c 30000000 		.4byte	.LFE81-.LFB81
 12201 00a0 00000000 		.4byte	.LFB82
 12202 00a4 E8000000 		.4byte	.LFE82-.LFB82
 12203 00a8 00000000 		.4byte	.LFB83
 12204 00ac 54000000 		.4byte	.LFE83-.LFB83
 12205 00b0 00000000 		.4byte	.LFB84
 12206 00b4 C4000000 		.4byte	.LFE84-.LFB84
 12207 00b8 00000000 		.4byte	.LFB85
 12208 00bc 98000000 		.4byte	.LFE85-.LFB85
 12209 00c0 00000000 		.4byte	.LFB86
 12210 00c4 D4000000 		.4byte	.LFE86-.LFB86
 12211 00c8 00000000 		.4byte	.LFB87
 12212 00cc 1C000000 		.4byte	.LFE87-.LFB87
 12213 00d0 00000000 		.4byte	.LFB88
 12214 00d4 68000000 		.4byte	.LFE88-.LFB88
 12215 00d8 00000000 		.4byte	.LFB89
 12216 00dc 68000000 		.4byte	.LFE89-.LFB89
 12217 00e0 00000000 		.4byte	.LFB90
 12218 00e4 68000000 		.4byte	.LFE90-.LFB90
 12219 00e8 00000000 		.4byte	.LFB91
 12220 00ec 6C000000 		.4byte	.LFE91-.LFB91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 259


 12221 00f0 00000000 		.4byte	.LFB92
 12222 00f4 64000000 		.4byte	.LFE92-.LFB92
 12223 00f8 00000000 		.4byte	.LFB93
 12224 00fc 68080000 		.4byte	.LFE93-.LFB93
 12225 0100 00000000 		.4byte	.LFB94
 12226 0104 3C010000 		.4byte	.LFE94-.LFB94
 12227 0108 00000000 		.4byte	0
 12228 010c 00000000 		.4byte	0
 12229              		.section	.debug_ranges,"",%progbits
 12230              	.Ldebug_ranges0:
 12231 0000 00000000 		.4byte	.LFB64
 12232 0004 74010000 		.4byte	.LFE64
 12233 0008 00000000 		.4byte	.LFB65
 12234 000c 9C000000 		.4byte	.LFE65
 12235 0010 00000000 		.4byte	.LFB66
 12236 0014 14000000 		.4byte	.LFE66
 12237 0018 00000000 		.4byte	.LFB67
 12238 001c 7C000000 		.4byte	.LFE67
 12239 0020 00000000 		.4byte	.LFB68
 12240 0024 58000000 		.4byte	.LFE68
 12241 0028 00000000 		.4byte	.LFB69
 12242 002c 68000000 		.4byte	.LFE69
 12243 0030 00000000 		.4byte	.LFB70
 12244 0034 4C000000 		.4byte	.LFE70
 12245 0038 00000000 		.4byte	.LFB71
 12246 003c 46000000 		.4byte	.LFE71
 12247 0040 00000000 		.4byte	.LFB72
 12248 0044 56000000 		.4byte	.LFE72
 12249 0048 00000000 		.4byte	.LFB73
 12250 004c 0C000000 		.4byte	.LFE73
 12251 0050 00000000 		.4byte	.LFB74
 12252 0054 0C000000 		.4byte	.LFE74
 12253 0058 00000000 		.4byte	.LFB75
 12254 005c 0C010000 		.4byte	.LFE75
 12255 0060 00000000 		.4byte	.LFB76
 12256 0064 00190000 		.4byte	.LFE76
 12257 0068 00000000 		.4byte	.LFB77
 12258 006c 70000000 		.4byte	.LFE77
 12259 0070 00000000 		.4byte	.LFB78
 12260 0074 70010000 		.4byte	.LFE78
 12261 0078 00000000 		.4byte	.LFB79
 12262 007c CC000000 		.4byte	.LFE79
 12263 0080 00000000 		.4byte	.LFB80
 12264 0084 CC000000 		.4byte	.LFE80
 12265 0088 00000000 		.4byte	.LFB81
 12266 008c 30000000 		.4byte	.LFE81
 12267 0090 00000000 		.4byte	.LFB82
 12268 0094 E8000000 		.4byte	.LFE82
 12269 0098 00000000 		.4byte	.LFB83
 12270 009c 54000000 		.4byte	.LFE83
 12271 00a0 00000000 		.4byte	.LFB84
 12272 00a4 C4000000 		.4byte	.LFE84
 12273 00a8 00000000 		.4byte	.LFB85
 12274 00ac 98000000 		.4byte	.LFE85
 12275 00b0 00000000 		.4byte	.LFB86
 12276 00b4 D4000000 		.4byte	.LFE86
 12277 00b8 00000000 		.4byte	.LFB87
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 260


 12278 00bc 1C000000 		.4byte	.LFE87
 12279 00c0 00000000 		.4byte	.LFB88
 12280 00c4 68000000 		.4byte	.LFE88
 12281 00c8 00000000 		.4byte	.LFB89
 12282 00cc 68000000 		.4byte	.LFE89
 12283 00d0 00000000 		.4byte	.LFB90
 12284 00d4 68000000 		.4byte	.LFE90
 12285 00d8 00000000 		.4byte	.LFB91
 12286 00dc 6C000000 		.4byte	.LFE91
 12287 00e0 00000000 		.4byte	.LFB92
 12288 00e4 64000000 		.4byte	.LFE92
 12289 00e8 00000000 		.4byte	.LFB93
 12290 00ec 68080000 		.4byte	.LFE93
 12291 00f0 00000000 		.4byte	.LFB94
 12292 00f4 3C010000 		.4byte	.LFE94
 12293 00f8 00000000 		.4byte	0
 12294 00fc 00000000 		.4byte	0
 12295              		.section	.debug_line,"",%progbits
 12296              	.Ldebug_line0:
 12297 0000 270B0000 		.section	.debug_str,"MS",%progbits,1
 12297      02009B01 
 12297      00000201 
 12297      FB0E0D00 
 12297      01010101 
 12298              	.LASF157:
 12299 0000 70726573 		.ascii	"presetArraySection\000"
 12299      65744172 
 12299      72617953 
 12299      65637469 
 12299      6F6E00
 12300              	.LASF153:
 12301 0013 70726573 		.ascii	"presetArray\000"
 12301      65744172 
 12301      72617900 
 12302              	.LASF297:
 12303 001f 66697273 		.ascii	"firstSysex\000"
 12303      74537973 
 12303      657800
 12304              	.LASF28:
 12305 002a 73697A65 		.ascii	"sizetype\000"
 12305      74797065 
 12305      00
 12306              	.LASF162:
 12307 0033 73656E64 		.ascii	"sendingMessage\000"
 12307      696E674D 
 12307      65737361 
 12307      676500
 12308              	.LASF247:
 12309 0042 70726576 		.ascii	"prev_processed_volumePedal\000"
 12309      5F70726F 
 12309      63657373 
 12309      65645F76 
 12309      6F6C756D 
 12310              	.LASF87:
 12311 005d 74656D70 		.ascii	"tempangle\000"
 12311      616E676C 
 12311      6500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 261


 12312              	.LASF217:
 12313 0067 6E657744 		.ascii	"newDataFlag2\000"
 12313      61746146 
 12313      6C616732 
 12313      00
 12314              	.LASF254:
 12315 0074 6D616372 		.ascii	"macroNamesArray\000"
 12315      6F4E616D 
 12315      65734172 
 12315      72617900 
 12316              	.LASF38:
 12317 0084 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 12317      4D5F4545 
 12317      50524F4D 
 12317      5F535543 
 12317      43455353 
 12318              	.LASF17:
 12319 0099 696E7433 		.ascii	"int32_t\000"
 12319      325F7400 
 12320              	.LASF144:
 12321 00a1 456D5F45 		.ascii	"Em_EEPROM_context\000"
 12321      4550524F 
 12321      4D5F636F 
 12321      6E746578 
 12321      7400
 12322              	.LASF47:
 12323 00b3 54686972 		.ascii	"ThirdLine\000"
 12323      644C696E 
 12323      6500
 12324              	.LASF108:
 12325 00bd 6E6F7465 		.ascii	"noteEvent\000"
 12325      4576656E 
 12325      7400
 12326              	.LASF226:
 12327 00c7 53504932 		.ascii	"SPI2errorflag\000"
 12327      6572726F 
 12327      72666C61 
 12327      6700
 12328              	.LASF21:
 12329 00d5 75696E74 		.ascii	"uint32\000"
 12329      333200
 12330              	.LASF92:
 12331 00dc 77686963 		.ascii	"whichMacroToStoreName\000"
 12331      684D6163 
 12331      726F546F 
 12331      53746F72 
 12331      654E616D 
 12332              	.LASF121:
 12333 00f2 43437661 		.ascii	"CCval\000"
 12333      6C00
 12334              	.LASF168:
 12335 00f8 6E756D4D 		.ascii	"numMappings\000"
 12335      61707069 
 12335      6E677300 
 12336              	.LASF148:
 12337 0104 49324362 		.ascii	"I2Cbuff1\000"
 12337      75666631 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 262


 12337      00
 12338              	.LASF236:
 12339 010d 49324362 		.ascii	"I2Cbuff2\000"
 12339      75666632 
 12339      00
 12340              	.LASF238:
 12341 0116 6D75785F 		.ascii	"mux_states\000"
 12341      73746174 
 12341      657300
 12342              	.LASF134:
 12343 0121 74656D70 		.ascii	"tempLow\000"
 12343      4C6F7700 
 12344              	.LASF195:
 12345 0129 6E65636B 		.ascii	"necks\000"
 12345      7300
 12346              	.LASF186:
 12347 012f 6F637461 		.ascii	"octave\000"
 12347      766500
 12348              	.LASF49:
 12349 0136 4E696C4C 		.ascii	"NilLine\000"
 12349      696E6500 
 12350              	.LASF43:
 12351 013e 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 12351      6E5F656D 
 12351      5F656570 
 12351      726F6D5F 
 12351      73746174 
 12352              	.LASF287:
 12353 0157 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 12353      6F4F4C45 
 12353      44576169 
 12353      74696E67 
 12353      546F5365 
 12354              	.LASF241:
 12355 016e 70656461 		.ascii	"pedals_high\000"
 12355      6C735F68 
 12355      69676800 
 12356              	.LASF98:
 12357 017a 6E627974 		.ascii	"nbytes\000"
 12357      657300
 12358              	.LASF274:
 12359 0181 636F7065 		.ascii	"copedentNamesArray\000"
 12359      64656E74 
 12359      4E616D65 
 12359      73417272 
 12359      617900
 12360              	.LASF166:
 12361 0194 76616C73 		.ascii	"valsCount\000"
 12361      436F756E 
 12361      7400
 12362              	.LASF184:
 12363 019e 74656D70 		.ascii	"temper\000"
 12363      657200
 12364              	.LASF120:
 12365 01a5 43436E75 		.ascii	"CCnum\000"
 12365      6D00
 12366              	.LASF40:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 263


 12367 01ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 12367      4D5F4545 
 12367      50524F4D 
 12367      5F424144 
 12367      5F434845 
 12368              	.LASF36:
 12369 01c5 75736572 		.ascii	"userFlashStartAddr\000"
 12369      466C6173 
 12369      68537461 
 12369      72744164 
 12369      647200
 12370              	.LASF30:
 12371 01d8 6E756D62 		.ascii	"numberOfRows\000"
 12371      65724F66 
 12371      526F7773 
 12371      00
 12372              	.LASF128:
 12373 01e5 696E7456 		.ascii	"intVal\000"
 12373      616C00
 12374              	.LASF70:
 12375 01ec 69737461 		.ascii	"istart\000"
 12375      727400
 12376              	.LASF76:
 12377 01f3 70656461 		.ascii	"pedalDiff\000"
 12377      6C446966 
 12377      6600
 12378              	.LASF125:
 12379 01fd 74686556 		.ascii	"theVal\000"
 12379      616C00
 12380              	.LASF34:
 12381 0204 72656475 		.ascii	"redundantCopy\000"
 12381      6E64616E 
 12381      74436F70 
 12381      7900
 12382              	.LASF2:
 12383 0212 5F5F7569 		.ascii	"__uint8_t\000"
 12383      6E74385F 
 12383      7400
 12384              	.LASF67:
 12385 021c 616C7068 		.ascii	"alpha\000"
 12385      6100
 12386              	.LASF57:
 12387 0222 70726573 		.ascii	"presetEnd\000"
 12387      6574456E 
 12387      6400
 12388              	.LASF235:
 12389 022c 62617243 		.ascii	"barCount\000"
 12389      6F756E74 
 12389      00
 12390              	.LASF156:
 12391 0235 73656E64 		.ascii	"sendMessageEnd\000"
 12391      4D657373 
 12391      61676545 
 12391      6E6400
 12392              	.LASF252:
 12393 0244 70726573 		.ascii	"presetNumberToLoad\000"
 12393      65744E75 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 264


 12393      6D626572 
 12393      546F4C6F 
 12393      616400
 12394              	.LASF262:
 12395 0257 766F6963 		.ascii	"voice\000"
 12395      6500
 12396              	.LASF206:
 12397 025d 73747269 		.ascii	"strings\000"
 12397      6E677300 
 12398              	.LASF8:
 12399 0265 6C6F6E67 		.ascii	"long int\000"
 12399      20696E74 
 12399      00
 12400              	.LASF164:
 12401 026e 63757272 		.ascii	"currentFloat\000"
 12401      656E7446 
 12401      6C6F6174 
 12401      00
 12402              	.LASF253:
 12403 027b 70726573 		.ascii	"presetLoadedResponse\000"
 12403      65744C6F 
 12403      61646564 
 12403      52657370 
 12403      6F6E7365 
 12404              	.LASF154:
 12405 0290 70726573 		.ascii	"presetNumberToWrite\000"
 12405      65744E75 
 12405      6D626572 
 12405      546F5772 
 12405      69746500 
 12406              	.LASF91:
 12407 02a4 77686963 		.ascii	"whichPresetToStoreName\000"
 12407      68507265 
 12407      73657454 
 12407      6F53746F 
 12407      72654E61 
 12408              	.LASF251:
 12409 02bb 70726573 		.ascii	"presetNamesArray\000"
 12409      65744E61 
 12409      6D657341 
 12409      72726179 
 12409      00
 12410              	.LASF77:
 12411 02cc 6D61696E 		.ascii	"main\000"
 12411      00
 12412              	.LASF275:
 12413 02d1 70726576 		.ascii	"prevStringPitchBend\000"
 12413      53747269 
 12413      6E675069 
 12413      74636842 
 12413      656E6400 
 12414              	.LASF115:
 12415 02e5 4D494449 		.ascii	"MIDInoteNum\000"
 12415      6E6F7465 
 12415      4E756D00 
 12416              	.LASF123:
 12417 02f1 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 265


 12417      4D494449 
 12417      416C6C4E 
 12417      6F746573 
 12417      4F666600 
 12418              	.LASF46:
 12419 0305 5365636F 		.ascii	"SecondLine\000"
 12419      6E644C69 
 12419      6E6500
 12420              	.LASF255:
 12421 0310 66726574 		.ascii	"fretScaling\000"
 12421      5363616C 
 12421      696E6700 
 12422              	.LASF163:
 12423 031c 73656E64 		.ascii	"sendKnobs\000"
 12423      4B6E6F62 
 12423      7300
 12424              	.LASF51:
 12425 0326 70726573 		.ascii	"presetArraySectionState\000"
 12425      65744172 
 12425      72617953 
 12425      65637469 
 12425      6F6E5374 
 12426              	.LASF228:
 12427 033e 6B6E6F62 		.ascii	"knobs\000"
 12427      7300
 12428              	.LASF150:
 12429 0344 73797365 		.ascii	"sysexPointer\000"
 12429      78506F69 
 12429      6E746572 
 12429      00
 12430              	.LASF68:
 12431 0351 6F6D416C 		.ascii	"omAlpha\000"
 12431      70686100 
 12432              	.LASF82:
 12433 0359 73747269 		.ascii	"stringStartLoc\000"
 12433      6E675374 
 12433      6172744C 
 12433      6F6300
 12434              	.LASF0:
 12435 0368 7369676E 		.ascii	"signed char\000"
 12435      65642063 
 12435      68617200 
 12436              	.LASF14:
 12437 0374 75696E74 		.ascii	"uint8_t\000"
 12437      385F7400 
 12438              	.LASF29:
 12439 037c 776C456E 		.ascii	"wlEndAddr\000"
 12439      64416464 
 12439      7200
 12440              	.LASF135:
 12441 0386 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 12441      63616C6C 
 12441      6261636B 
 12441      4C6F6361 
 12441      6C4D6964 
 12442              	.LASF107:
 12443 03a1 73706973 		.ascii	"spis_1_ss\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 266


 12443      5F315F73 
 12443      7300
 12444              	.LASF41:
 12445 03ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 12445      4D5F4545 
 12445      50524F4D 
 12445      5F424144 
 12445      5F444154 
 12446              	.LASF50:
 12447 03c1 5F4F4C45 		.ascii	"_OLEDLine\000"
 12447      444C696E 
 12447      6500
 12448              	.LASF165:
 12449 03cb 6D617043 		.ascii	"mapCount\000"
 12449      6F756E74 
 12449      00
 12450              	.LASF132:
 12451 03d4 74656D70 		.ascii	"tempIntVersion\000"
 12451      496E7456 
 12451      65727369 
 12451      6F6E00
 12452              	.LASF256:
 12453 03e3 70656461 		.ascii	"pedalRatios\000"
 12453      6C526174 
 12453      696F7300 
 12454              	.LASF1:
 12455 03ef 756E7369 		.ascii	"unsigned char\000"
 12455      676E6564 
 12455      20636861 
 12455      7200
 12456              	.LASF170:
 12457 03fd 76616C43 		.ascii	"valCheck\000"
 12457      6865636B 
 12457      00
 12458              	.LASF127:
 12459 0406 76616C73 		.ascii	"valsStart\000"
 12459      53746172 
 12459      7400
 12460              	.LASF79:
 12461 0410 636F7065 		.ascii	"coped\000"
 12461      6400
 12462              	.LASF196:
 12463 0416 72783143 		.ascii	"rx1Channel\000"
 12463      68616E6E 
 12463      656C00
 12464              	.LASF81:
 12465 0421 70656461 		.ascii	"pedalStartLoc\000"
 12465      6C537461 
 12465      72744C6F 
 12465      6300
 12466              	.LASF212:
 12467 042f 6E657744 		.ascii	"newDataFlag\000"
 12467      61746146 
 12467      6C616700 
 12468              	.LASF281:
 12469 043b 73747269 		.ascii	"stringOctave\000"
 12469      6E674F63 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 267


 12469      74617665 
 12469      00
 12470              	.LASF105:
 12471 0448 5553425F 		.ascii	"USB_service\000"
 12471      73657276 
 12471      69636500 
 12472              	.LASF167:
 12473 0454 6D617043 		.ascii	"mapCountExpectation\000"
 12473      6F756E74 
 12473      45787065 
 12473      63746174 
 12473      696F6E00 
 12474              	.LASF62:
 12475 0468 74656D70 		.ascii	"tempmax\000"
 12475      6D617800 
 12476              	.LASF126:
 12477 0470 73746F70 		.ascii	"stoppingPoint\000"
 12477      70696E67 
 12477      506F696E 
 12477      7400
 12478              	.LASF69:
 12479 047e 76616C75 		.ascii	"value\000"
 12479      6500
 12480              	.LASF257:
 12481 0484 6C617374 		.ascii	"last_mux\000"
 12481      5F6D7578 
 12481      00
 12482              	.LASF266:
 12483 048d 656E636F 		.ascii	"encoderVal\000"
 12483      64657256 
 12483      616C00
 12484              	.LASF118:
 12485 0498 70726573 		.ascii	"pressure\000"
 12485      73757265 
 12485      00
 12486              	.LASF288:
 12487 04a1 70726573 		.ascii	"presetAlreadyDisplayed\000"
 12487      6574416C 
 12487      72656164 
 12487      79446973 
 12487      706C6179 
 12488              	.LASF53:
 12489 04b8 6D616372 		.ascii	"macroNames\000"
 12489      6F4E616D 
 12489      657300
 12490              	.LASF207:
 12491 04c3 70726576 		.ascii	"prevStrings\000"
 12491      53747269 
 12491      6E677300 
 12492              	.LASF24:
 12493 04cf 63686172 		.ascii	"char\000"
 12493      00
 12494              	.LASF138:
 12495 04d4 65657072 		.ascii	"eepromArray\000"
 12495      6F6D4172 
 12495      72617900 
 12496              	.LASF194:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 268


 12497 04e0 63757272 		.ascii	"currentCopedent\000"
 12497      656E7443 
 12497      6F706564 
 12497      656E7400 
 12498              	.LASF190:
 12499 04f0 72617741 		.ascii	"rawAngle\000"
 12499      6E676C65 
 12499      00
 12500              	.LASF63:
 12501 04f9 4C454146 		.ascii	"LEAF_clip\000"
 12501      5F636C69 
 12501      7000
 12502              	.LASF94:
 12503 0503 446D6154 		.ascii	"DmaTxConfiguration\000"
 12503      78436F6E 
 12503      66696775 
 12503      72617469 
 12503      6F6E00
 12504              	.LASF259:
 12505 0516 6E65636B 		.ascii	"neck\000"
 12505      00
 12506              	.LASF5:
 12507 051b 5F5F7569 		.ascii	"__uint16_t\000"
 12507      6E743136 
 12507      5F7400
 12508              	.LASF104:
 12509 0526 63686563 		.ascii	"checkUSB_Vbus\000"
 12509      6B555342 
 12509      5F566275 
 12509      7300
 12510              	.LASF234:
 12511 0534 65657072 		.ascii	"eeprom_cnt\000"
 12511      6F6D5F63 
 12511      6E7400
 12512              	.LASF142:
 12513 053f 5553425F 		.ascii	"USB_midi_out_ep\000"
 12513      6D696469 
 12513      5F6F7574 
 12513      5F657000 
 12514              	.LASF88:
 12515 054f 74656D70 		.ascii	"tempPedal\000"
 12515      50656461 
 12515      6C00
 12516              	.LASF102:
 12517 0559 4932435F 		.ascii	"I2C_reset\000"
 12517      72657365 
 12517      7400
 12518              	.LASF267:
 12519 0563 656E636F 		.ascii	"encoderNum\000"
 12519      6465724E 
 12519      756D00
 12520              	.LASF264:
 12521 056e 6F637431 		.ascii	"oct1Up\000"
 12521      557000
 12522              	.LASF44:
 12523 0575 75696E74 		.ascii	"uint\000"
 12523      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 269


 12524              	.LASF192:
 12525 057a 6D696469 		.ascii	"midiOverflow\000"
 12525      4F766572 
 12525      666C6F77 
 12525      00
 12526              	.LASF74:
 12527 0587 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 12527      496E6974 
 12527      69616C50 
 12527      6564616C 
 12527      5A65726F 
 12528              	.LASF117:
 12529 05a5 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 12529      4D494449 
 12529      506F6C79 
 12529      4B657950 
 12529      72657373 
 12530              	.LASF131:
 12531 05bd 73747269 		.ascii	"stringChange\000"
 12531      6E674368 
 12531      616E6765 
 12531      00
 12532              	.LASF119:
 12533 05ca 73656E64 		.ascii	"sendMIDIControlChange\000"
 12533      4D494449 
 12533      436F6E74 
 12533      726F6C43 
 12533      68616E67 
 12534              	.LASF211:
 12535 05e0 73706943 		.ascii	"spiCounter\000"
 12535      6F756E74 
 12535      657200
 12536              	.LASF39:
 12537 05eb 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 12537      4D5F4545 
 12537      50524F4D 
 12537      5F424144 
 12537      5F504152 
 12538              	.LASF298:
 12539 0602 73797365 		.ascii	"sysexPointerMask\000"
 12539      78506F69 
 12539      6E746572 
 12539      4D61736B 
 12539      00
 12540              	.LASF146:
 12541 0613 4932435F 		.ascii	"I2C_1_initVar\000"
 12541      315F696E 
 12541      69745661 
 12541      7200
 12542              	.LASF52:
 12543 0621 70726573 		.ascii	"presetName\000"
 12543      65744E61 
 12543      6D6500
 12544              	.LASF152:
 12545 062c 70617273 		.ascii	"parsingSysex\000"
 12545      696E6753 
 12545      79736578 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 270


 12545      00
 12546              	.LASF183:
 12547 0639 72657475 		.ascii	"returnedData\000"
 12547      726E6564 
 12547      44617461 
 12547      00
 12548              	.LASF48:
 12549 0646 466F7572 		.ascii	"FourthLine\000"
 12549      74684C69 
 12549      6E6500
 12550              	.LASF231:
 12551 0651 77686963 		.ascii	"whichMacro\000"
 12551      684D6163 
 12551      726F00
 12552              	.LASF243:
 12553 065c 766F6C75 		.ascii	"volumePedal\000"
 12553      6D655065 
 12553      64616C00 
 12554              	.LASF204:
 12555 0668 72784275 		.ascii	"rxBufferPluck\000"
 12555      66666572 
 12555      506C7563 
 12555      6B00
 12556              	.LASF273:
 12557 0676 636F7065 		.ascii	"copedent\000"
 12557      64656E74 
 12557      00
 12558              	.LASF246:
 12559 067f 70656461 		.ascii	"pedals8bit\000"
 12559      6C733862 
 12559      697400
 12560              	.LASF229:
 12561 068a 70726576 		.ascii	"prevKnobs\000"
 12561      4B6E6F62 
 12561      7300
 12562              	.LASF224:
 12563 0694 6D795370 		.ascii	"mySpiCounter\000"
 12563      69436F75 
 12563      6E746572 
 12563      00
 12564              	.LASF160:
 12565 06a1 73797365 		.ascii	"sysexMessageInProgress\000"
 12565      784D6573 
 12565      73616765 
 12565      496E5072 
 12565      6F677265 
 12566              	.LASF113:
 12567 06b8 43434576 		.ascii	"CCEvent\000"
 12567      656E7400 
 12568              	.LASF124:
 12569 06c0 70617273 		.ascii	"parseSysex\000"
 12569      65537973 
 12569      657800
 12570              	.LASF301:
 12571 06cb 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 12571      73657273 
 12571      5C4A6566 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 271


 12571      66536E79 
 12571      6465725C 
 12572 06f9 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 12572      355F656C 
 12572      65637472 
 12572      6F737465 
 12572      656C5F73 
 12573 072b 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 12573      5F50534F 
 12573      43335F35 
 12573      5F546865 
 12573      726D6973 
 12574              	.LASF279:
 12575 0749 696E7653 		.ascii	"invStringMappedPositions\000"
 12575      7472696E 
 12575      674D6170 
 12575      70656450 
 12575      6F736974 
 12576              	.LASF222:
 12577 0762 696E7075 		.ascii	"inputData\000"
 12577      74446174 
 12577      6100
 12578              	.LASF66:
 12579 076c 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 12579      5F696E74 
 12579      6572706F 
 12579      6C617469 
 12579      6F6E5F6C 
 12580              	.LASF293:
 12581 0786 70726576 		.ascii	"prevNotes\000"
 12581      4E6F7465 
 12581      7300
 12582              	.LASF37:
 12583 0790 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 12583      74635F65 
 12583      6570726F 
 12583      6D5F636F 
 12583      6E746578 
 12584              	.LASF10:
 12585 07a8 6C6F6E67 		.ascii	"long unsigned int\000"
 12585      20756E73 
 12585      69676E65 
 12585      6420696E 
 12585      7400
 12586              	.LASF145:
 12587 07ba 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 12587      4550524F 
 12587      4D5F656D 
 12587      5F456570 
 12587      726F6D53 
 12588              	.LASF233:
 12589 07d5 65657072 		.ascii	"eepromReturnValue\000"
 12589      6F6D5265 
 12589      7475726E 
 12589      56616C75 
 12589      6500
 12590              	.LASF86:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 272


 12591 07e7 74656D70 		.ascii	"tempInt\000"
 12591      496E7400 
 12592              	.LASF85:
 12593 07ef 73746174 		.ascii	"status\000"
 12593      757300
 12594              	.LASF237:
 12595 07f6 73656E64 		.ascii	"send_it\000"
 12595      5F697400 
 12596              	.LASF181:
 12597 07fe 6C696E65 		.ascii	"linearPotValue32Bit\000"
 12597      6172506F 
 12597      7456616C 
 12597      75653332 
 12597      42697400 
 12598              	.LASF116:
 12599 0812 6368616E 		.ascii	"channel\000"
 12599      6E656C00 
 12600              	.LASF96:
 12601 081a 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 12601      4D617374 
 12601      65725772 
 12601      69746542 
 12601      6C6F636B 
 12602              	.LASF187:
 12603 0832 616E676C 		.ascii	"angle\000"
 12603      6500
 12604              	.LASF172:
 12605 0838 6E756D53 		.ascii	"numStrings\000"
 12605      7472696E 
 12605      677300
 12606              	.LASF42:
 12607 0843 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 12607      4D5F4545 
 12607      50524F4D 
 12607      5F575249 
 12607      54455F46 
 12608              	.LASF72:
 12609 085b 6F737461 		.ascii	"ostart\000"
 12609      727400
 12610              	.LASF250:
 12611 0862 63757272 		.ascii	"currentPresetSelection\000"
 12611      656E7450 
 12611      72657365 
 12611      7453656C 
 12611      65637469 
 12612              	.LASF284:
 12613 0879 6F70656E 		.ascii	"openStringMIDI_Int\000"
 12613      53747269 
 12613      6E674D49 
 12613      44495F49 
 12613      6E7400
 12614              	.LASF71:
 12615 088c 6973746F 		.ascii	"istop\000"
 12615      7000
 12616              	.LASF141:
 12617 0892 5553425F 		.ascii	"USB_midiInBuffer\000"
 12617      6D696469 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 273


 12617      496E4275 
 12617      66666572 
 12617      00
 12618              	.LASF299:
 12619 08a3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 12619      43313120 
 12619      352E342E 
 12619      31203230 
 12619      31363036 
 12620 08d6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 12620      20726576 
 12620      6973696F 
 12620      6E203233 
 12620      37373135 
 12621 0909 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 12621      66756E63 
 12621      74696F6E 
 12621      2D736563 
 12621      74696F6E 
 12622              	.LASF114:
 12623 0931 73656E64 		.ascii	"sendMIDINoteOn\000"
 12623      4D494449 
 12623      4E6F7465 
 12623      4F6E00
 12624              	.LASF258:
 12625 0940 6D61696E 		.ascii	"main_counter\000"
 12625      5F636F75 
 12625      6E746572 
 12625      00
 12626              	.LASF45:
 12627 094d 46697273 		.ascii	"FirstLine\000"
 12627      744C696E 
 12627      6500
 12628              	.LASF260:
 12629 0957 6475616C 		.ascii	"dualSlider\000"
 12629      536C6964 
 12629      657200
 12630              	.LASF60:
 12631 0962 72657374 		.ascii	"restartSystemCheck\000"
 12631      61727453 
 12631      79737465 
 12631      6D436865 
 12631      636B00
 12632              	.LASF177:
 12633 0975 5553425F 		.ascii	"USB_check_flag\000"
 12633      63686563 
 12633      6B5F666C 
 12633      616700
 12634              	.LASF158:
 12635 0984 6D657373 		.ascii	"messageArraySendCount\000"
 12635      61676541 
 12635      72726179 
 12635      53656E64 
 12635      436F756E 
 12636              	.LASF9:
 12637 099a 5F5F7569 		.ascii	"__uint32_t\000"
 12637      6E743332 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 274


 12637      5F7400
 12638              	.LASF11:
 12639 09a5 6C6F6E67 		.ascii	"long long int\000"
 12639      206C6F6E 
 12639      6720696E 
 12639      7400
 12640              	.LASF182:
 12641 09b3 636F756E 		.ascii	"counter\000"
 12641      74657200 
 12642              	.LASF282:
 12643 09bb 73747269 		.ascii	"stringPitch\000"
 12643      6E675069 
 12643      74636800 
 12644              	.LASF198:
 12645 09c7 72783154 		.ascii	"rx1TD\000"
 12645      4400
 12646              	.LASF286:
 12647 09cd 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 12647      4F4C4544 
 12647      57616974 
 12647      696E6754 
 12647      6F53656E 
 12648              	.LASF84:
 12649 09e3 74656D70 		.ascii	"tempIntLow\000"
 12649      496E744C 
 12649      6F7700
 12650              	.LASF61:
 12651 09ee 74656D70 		.ascii	"tempmin\000"
 12651      6D696E00 
 12652              	.LASF35:
 12653 09f6 626C6F63 		.ascii	"blockingWrite\000"
 12653      6B696E67 
 12653      57726974 
 12653      6500
 12654              	.LASF202:
 12655 0a04 72783343 		.ascii	"rx3Channel\000"
 12655      68616E6E 
 12655      656C00
 12656              	.LASF23:
 12657 0a0f 646F7562 		.ascii	"double\000"
 12657      6C6500
 12658              	.LASF300:
 12659 0a16 6D61696E 		.ascii	"main.c\000"
 12659      2E6300
 12660              	.LASF268:
 12661 0a1d 62757474 		.ascii	"button1Up\000"
 12661      6F6E3155 
 12661      7000
 12662              	.LASF106:
 12663 0a27 6C6F6732 		.ascii	"log2f_approx\000"
 12663      665F6170 
 12663      70726F78 
 12663      00
 12664              	.LASF147:
 12665 0a34 49544D5F 		.ascii	"ITM_RxBuffer\000"
 12665      52784275 
 12665      66666572 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 275


 12665      00
 12666              	.LASF73:
 12667 0a41 6F73746F 		.ascii	"ostop\000"
 12667      7000
 12668              	.LASF100:
 12669 0a47 74696D65 		.ascii	"timeout\000"
 12669      6F757400 
 12670              	.LASF22:
 12671 0a4f 666C6F61 		.ascii	"float\000"
 12671      7400
 12672              	.LASF245:
 12673 0a55 70726576 		.ascii	"prev_processed_pedals\000"
 12673      5F70726F 
 12673      63657373 
 12673      65645F70 
 12673      6564616C 
 12674              	.LASF215:
 12675 0a6b 616D4865 		.ascii	"amHere2\000"
 12675      72653200 
 12676              	.LASF230:
 12677 0a73 53504932 		.ascii	"SPI2started\000"
 12677      73746172 
 12677      74656400 
 12678              	.LASF218:
 12679 0a7f 63757272 		.ascii	"currentPluckBuffer\000"
 12679      656E7450 
 12679      6C75636B 
 12679      42756666 
 12679      657200
 12680              	.LASF109:
 12681 0a92 73747269 		.ascii	"string\000"
 12681      6E6700
 12682              	.LASF122:
 12683 0a99 73656E64 		.ascii	"sendMIDIPitchBend\000"
 12683      4D494449 
 12683      50697463 
 12683      6842656E 
 12683      6400
 12684              	.LASF13:
 12685 0aab 756E7369 		.ascii	"unsigned int\000"
 12685      676E6564 
 12685      20696E74 
 12685      00
 12686              	.LASF151:
 12687 0ab8 72656365 		.ascii	"receivingSysex\000"
 12687      6976696E 
 12687      67537973 
 12687      657800
 12688              	.LASF136:
 12689 0ac7 6361626C 		.ascii	"cable\000"
 12689      6500
 12690              	.LASF59:
 12691 0acd 56627573 		.ascii	"Vbus_function\000"
 12691      5F66756E 
 12691      6374696F 
 12691      6E00
 12692              	.LASF110:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 276


 12693 0adb 76656C6F 		.ascii	"velocity\000"
 12693      63697479 
 12693      00
 12694              	.LASF294:
 12695 0ae4 63686563 		.ascii	"checkStatus\000"
 12695      6B537461 
 12695      74757300 
 12696              	.LASF25:
 12697 0af0 63797374 		.ascii	"cystatus\000"
 12697      61747573 
 12697      00
 12698              	.LASF227:
 12699 0af9 6261725F 		.ascii	"bar_index\000"
 12699      696E6465 
 12699      7800
 12700              	.LASF225:
 12701 0b03 6F666673 		.ascii	"offsetErrorCount\000"
 12701      65744572 
 12701      726F7243 
 12701      6F756E74 
 12701      00
 12702              	.LASF248:
 12703 0b14 70726F63 		.ascii	"processed_volumePedal\000"
 12703      65737365 
 12703      645F766F 
 12703      6C756D65 
 12703      50656461 
 12704              	.LASF89:
 12705 0b2a 74656D70 		.ascii	"tempMIDI\000"
 12705      4D494449 
 12705      00
 12706              	.LASF205:
 12707 0b33 72784275 		.ascii	"rxBufferBar\000"
 12707      66666572 
 12707      42617200 
 12708              	.LASF200:
 12709 0b3f 74784368 		.ascii	"txChannel\000"
 12709      616E6E65 
 12709      6C00
 12710              	.LASF244:
 12711 0b49 70726F63 		.ascii	"processed_pedals\000"
 12711      65737365 
 12711      645F7065 
 12711      64616C73 
 12711      00
 12712              	.LASF277:
 12713 0b5a 6F70656E 		.ascii	"openStringFrequencies\000"
 12713      53747269 
 12713      6E674672 
 12713      65717565 
 12713      6E636965 
 12714              	.LASF188:
 12715 0b70 70726576 		.ascii	"prevAngle\000"
 12715      416E676C 
 12715      6500
 12716              	.LASF214:
 12717 0b7a 706C7563 		.ascii	"pluck_index\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 277


 12717      6B5F696E 
 12717      64657800 
 12718              	.LASF27:
 12719 0b86 6C6F6E67 		.ascii	"long double\000"
 12719      20646F75 
 12719      626C6500 
 12720              	.LASF101:
 12721 0b92 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 12721      4D617374 
 12721      65725265 
 12721      6164426C 
 12721      6F636B69 
 12722              	.LASF219:
 12723 0ba9 63757272 		.ascii	"currentBarBuffer\000"
 12723      656E7442 
 12723      61724275 
 12723      66666572 
 12723      00
 12724              	.LASF189:
 12725 0bba 4144435F 		.ascii	"ADC_values\000"
 12725      76616C75 
 12725      657300
 12726              	.LASF65:
 12727 0bc5 66746F6D 		.ascii	"ftom\000"
 12727      00
 12728              	.LASF261:
 12729 0bca 656E7465 		.ascii	"enterUp\000"
 12729      72557000 
 12730              	.LASF221:
 12731 0bd2 53504931 		.ascii	"SPI1ErrorCount\000"
 12731      4572726F 
 12731      72436F75 
 12731      6E7400
 12732              	.LASF191:
 12733 0be1 6D696469 		.ascii	"midiSent\000"
 12733      53656E74 
 12733      00
 12734              	.LASF137:
 12735 0bea 6D696469 		.ascii	"midiMsg\000"
 12735      4D736700 
 12736              	.LASF290:
 12737 0bf2 63757272 		.ascii	"currentNeck\000"
 12737      656E744E 
 12737      65636B00 
 12738              	.LASF291:
 12739 0bfe 65646974 		.ascii	"editMode\000"
 12739      4D6F6465 
 12739      00
 12740              	.LASF12:
 12741 0c07 6C6F6E67 		.ascii	"long long unsigned int\000"
 12741      206C6F6E 
 12741      6720756E 
 12741      7369676E 
 12741      65642069 
 12742              	.LASF16:
 12743 0c1e 75696E74 		.ascii	"uint16_t\000"
 12743      31365F74 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 278


 12743      00
 12744              	.LASF133:
 12745 0c27 74656D70 		.ascii	"tempHigh\000"
 12745      48696768 
 12745      00
 12746              	.LASF171:
 12747 0c30 74657374 		.ascii	"testVal\000"
 12747      56616C00 
 12748              	.LASF199:
 12749 0c38 72783254 		.ascii	"rx2TD\000"
 12749      4400
 12750              	.LASF302:
 12751 0c3e 62726561 		.ascii	"breakFloat\000"
 12751      6B466C6F 
 12751      617400
 12752              	.LASF295:
 12753 0c49 63686563 		.ascii	"checkBase\000"
 12753      6B426173 
 12753      6500
 12754              	.LASF58:
 12755 0c53 73706973 		.ascii	"spis_2_ss\000"
 12755      5F325F73 
 12755      7300
 12756              	.LASF269:
 12757 0c5d 62757474 		.ascii	"button2Up\000"
 12757      6F6E3255 
 12757      7000
 12758              	.LASF210:
 12759 0c67 616D4865 		.ascii	"amHere\000"
 12759      726500
 12760              	.LASF232:
 12761 0c6e 61727261 		.ascii	"array\000"
 12761      7900
 12762              	.LASF90:
 12763 0c74 7363616C 		.ascii	"scaledMIDI\000"
 12763      65644D49 
 12763      444900
 12764              	.LASF26:
 12765 0c7f 72656738 		.ascii	"reg8\000"
 12765      00
 12766              	.LASF155:
 12767 0c84 636F7065 		.ascii	"copedentNumberToWrite\000"
 12767      64656E74 
 12767      4E756D62 
 12767      6572546F 
 12767      57726974 
 12768              	.LASF55:
 12769 0c9a 6D617043 		.ascii	"mapCountNext\000"
 12769      6F756E74 
 12769      4E657874 
 12769      00
 12770              	.LASF216:
 12771 0ca7 73706943 		.ascii	"spiCounter2\000"
 12771      6F756E74 
 12771      65723200 
 12772              	.LASF111:
 12773 0cb3 74656D70 		.ascii	"tempVel\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 279


 12773      56656C00 
 12774              	.LASF173:
 12775 0cbb 75736241 		.ascii	"usbActivityCounter\000"
 12775      63746976 
 12775      69747943 
 12775      6F756E74 
 12775      657200
 12776              	.LASF242:
 12777 0cce 64656164 		.ascii	"deadzone\000"
 12777      7A6F6E65 
 12777      00
 12778              	.LASF169:
 12779 0cd7 70617273 		.ascii	"parseThatMF\000"
 12779      65546861 
 12779      744D4600 
 12780              	.LASF3:
 12781 0ce3 5F5F696E 		.ascii	"__int16_t\000"
 12781      7431365F 
 12781      7400
 12782              	.LASF54:
 12783 0ced 696E6974 		.ascii	"initialVals\000"
 12783      69616C56 
 12783      616C7300 
 12784              	.LASF176:
 12785 0cf9 5553425F 		.ascii	"USB_active\000"
 12785      61637469 
 12785      766500
 12786              	.LASF296:
 12787 0d04 5350495F 		.ascii	"SPI_errors\000"
 12787      6572726F 
 12787      727300
 12788              	.LASF149:
 12789 0d0f 73797365 		.ascii	"sysexBuffer\000"
 12789      78427566 
 12789      66657200 
 12790              	.LASF161:
 12791 0d1b 62756643 		.ascii	"bufCount\000"
 12791      6F756E74 
 12791      00
 12792              	.LASF220:
 12793 0d24 706C7563 		.ascii	"pluckErrorCount\000"
 12793      6B457272 
 12793      6F72436F 
 12793      756E7400 
 12794              	.LASF129:
 12795 0d34 74656D70 		.ascii	"tempChar\000"
 12795      43686172 
 12795      00
 12796              	.LASF285:
 12797 0d3d 4F4C4544 		.ascii	"OLEDcount\000"
 12797      636F756E 
 12797      7400
 12798              	.LASF75:
 12799 0d47 63616C69 		.ascii	"calibratePedals\000"
 12799      62726174 
 12799      65506564 
 12799      616C7300 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 280


 12800              	.LASF272:
 12801 0d57 70617463 		.ascii	"patchNum\000"
 12801      684E756D 
 12801      00
 12802              	.LASF289:
 12803 0d60 70656461 		.ascii	"pedals_float\000"
 12803      6C735F66 
 12803      6C6F6174 
 12803      00
 12804              	.LASF19:
 12805 0d6d 75696E74 		.ascii	"uint8\000"
 12805      3800
 12806              	.LASF240:
 12807 0d73 70656461 		.ascii	"pedals_low\000"
 12807      6C735F6C 
 12807      6F7700
 12808              	.LASF213:
 12809 0d7e 70726576 		.ascii	"prevOctave\000"
 12809      4F637461 
 12809      766500
 12810              	.LASF4:
 12811 0d89 73686F72 		.ascii	"short int\000"
 12811      7420696E 
 12811      7400
 12812              	.LASF159:
 12813 0d93 6D657373 		.ascii	"messageArraySize\000"
 12813      61676541 
 12813      72726179 
 12813      53697A65 
 12813      00
 12814              	.LASF249:
 12815 0da4 66726574 		.ascii	"fretMeasurements\000"
 12815      4D656173 
 12815      7572656D 
 12815      656E7473 
 12815      00
 12816              	.LASF99:
 12817 0db5 6D6F6465 		.ascii	"mode\000"
 12817      00
 12818              	.LASF93:
 12819 0dba 62756666 		.ascii	"bufferPointer\000"
 12819      6572506F 
 12819      696E7465 
 12819      7200
 12820              	.LASF283:
 12821 0dc8 73747269 		.ascii	"stringMIDI\000"
 12821      6E674D49 
 12821      444900
 12822              	.LASF15:
 12823 0dd3 696E7431 		.ascii	"int16_t\000"
 12823      365F7400 
 12824              	.LASF130:
 12825 0ddb 70656461 		.ascii	"pedalToWrite\000"
 12825      6C546F57 
 12825      72697465 
 12825      00
 12826              	.LASF32:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 281


 12827 0de8 65657072 		.ascii	"eepromSize\000"
 12827      6F6D5369 
 12827      7A6500
 12828              	.LASF103:
 12829 0df3 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 12829      6C617943 
 12829      75727265 
 12829      6E745072 
 12829      65736574 
 12830              	.LASF278:
 12831 0e17 73747269 		.ascii	"stringMappedPositions\000"
 12831      6E674D61 
 12831      70706564 
 12831      506F7369 
 12831      74696F6E 
 12832              	.LASF185:
 12833 0e2d 70726576 		.ascii	"previousButtons\000"
 12833      696F7573 
 12833      42757474 
 12833      6F6E7300 
 12834              	.LASF33:
 12835 0e3d 77656172 		.ascii	"wearLevelingFactor\000"
 12835      4C657665 
 12835      6C696E67 
 12835      46616374 
 12835      6F7200
 12836              	.LASF139:
 12837 0e50 5553425F 		.ascii	"USB_midiInPointer\000"
 12837      6D696469 
 12837      496E506F 
 12837      696E7465 
 12837      7200
 12838              	.LASF292:
 12839 0e62 63616C69 		.ascii	"calibrationMode\000"
 12839      62726174 
 12839      696F6E4D 
 12839      6F646500 
 12840              	.LASF97:
 12841 0e72 69324341 		.ascii	"i2CAddr\000"
 12841      64647200 
 12842              	.LASF178:
 12843 0e7a 696E4275 		.ascii	"inBuffer\000"
 12843      66666572 
 12843      00
 12844              	.LASF209:
 12845 0e83 6D617853 		.ascii	"maxStrings\000"
 12845      7472696E 
 12845      677300
 12846              	.LASF80:
 12847 0e8e 6C657474 		.ascii	"letter\000"
 12847      657200
 12848              	.LASF143:
 12849 0e95 5553425F 		.ascii	"USB_midiOutBuffer\000"
 12849      6D696469 
 12849      4F757442 
 12849      75666665 
 12849      7200
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 282


 12850              	.LASF193:
 12851 0ea7 6D616372 		.ascii	"macroKnobValues\000"
 12851      6F4B6E6F 
 12851      6256616C 
 12851      75657300 
 12852              	.LASF239:
 12853 0eb7 6932635F 		.ascii	"i2c_skipped\000"
 12853      736B6970 
 12853      70656400 
 12854              	.LASF223:
 12855 0ec3 73706941 		.ascii	"spiAdjusted\000"
 12855      646A7573 
 12855      74656400 
 12856              	.LASF197:
 12857 0ecf 72783243 		.ascii	"rx2Channel\000"
 12857      68616E6E 
 12857      656C00
 12858              	.LASF140:
 12859 0eda 5553425F 		.ascii	"USB_midi_in_ep\000"
 12859      6D696469 
 12859      5F696E5F 
 12859      657000
 12860              	.LASF95:
 12861 0ee9 446D6152 		.ascii	"DmaRxConfiguration\000"
 12861      78436F6E 
 12861      66696775 
 12861      72617469 
 12861      6F6E00
 12862              	.LASF18:
 12863 0efc 75696E74 		.ascii	"uint32_t\000"
 12863      33325F74 
 12863      00
 12864              	.LASF271:
 12865 0f05 62757474 		.ascii	"button4Up\000"
 12865      6F6E3455 
 12865      7000
 12866              	.LASF175:
 12867 0f0f 70726576 		.ascii	"prevVBUS\000"
 12867      56425553 
 12867      00
 12868              	.LASF203:
 12869 0f18 72783354 		.ascii	"rx3TD\000"
 12869      4400
 12870              	.LASF174:
 12871 0f1e 63757272 		.ascii	"currentVBUS\000"
 12871      656E7456 
 12871      42555300 
 12872              	.LASF265:
 12873 0f2a 6F637434 		.ascii	"oct4Up\000"
 12873      557000
 12874              	.LASF303:
 12875 0f31 63616C63 		.ascii	"calculatePedalRatios\000"
 12875      756C6174 
 12875      65506564 
 12875      616C5261 
 12875      74696F73 
 12876              	.LASF270:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 283


 12877 0f46 62757474 		.ascii	"button3Up\000"
 12877      6F6E3355 
 12877      7000
 12878              	.LASF6:
 12879 0f50 73686F72 		.ascii	"short unsigned int\000"
 12879      7420756E 
 12879      7369676E 
 12879      65642069 
 12879      6E7400
 12880              	.LASF56:
 12881 0f63 6D617070 		.ascii	"mapping\000"
 12881      696E6700 
 12882              	.LASF112:
 12883 0f6b 6E6F7465 		.ascii	"noteToSend\000"
 12883      546F5365 
 12883      6E6400
 12884              	.LASF201:
 12885 0f76 74785444 		.ascii	"txTD\000"
 12885      00
 12886              	.LASF7:
 12887 0f7b 5F5F696E 		.ascii	"__int32_t\000"
 12887      7433325F 
 12887      7400
 12888              	.LASF208:
 12889 0f85 70726576 		.ascii	"prevBar\000"
 12889      42617200 
 12890              	.LASF180:
 12891 0f8d 6D79496E 		.ascii	"myInputArray\000"
 12891      70757441 
 12891      72726179 
 12891      00
 12892              	.LASF64:
 12893 0f9a 6D746F66 		.ascii	"mtof\000"
 12893      00
 12894              	.LASF276:
 12895 0f9f 70656461 		.ascii	"pedals\000"
 12895      6C7300
 12896              	.LASF83:
 12897 0fa6 74656D70 		.ascii	"tempIntHigh\000"
 12897      496E7448 
 12897      69676800 
 12898              	.LASF263:
 12899 0fb2 65646974 		.ascii	"editUp\000"
 12899      557000
 12900              	.LASF31:
 12901 0fb9 6C617374 		.ascii	"lastWrRowAddr\000"
 12901      5772526F 
 12901      77416464 
 12901      7200
 12902              	.LASF78:
 12903 0fc7 6D794172 		.ascii	"myArrayCounter\000"
 12903      72617943 
 12903      6F756E74 
 12903      657200
 12904              	.LASF280:
 12905 0fd6 73747269 		.ascii	"stringFrequencies\000"
 12905      6E674672 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6pVlWg.s 			page 284


 12905      65717565 
 12905      6E636965 
 12905      7300
 12906              	.LASF20:
 12907 0fe8 75696E74 		.ascii	"uint16\000"
 12907      313600
 12908              	.LASF179:
 12909 0fef 6D794172 		.ascii	"myArray\000"
 12909      72617900 
 12910              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
