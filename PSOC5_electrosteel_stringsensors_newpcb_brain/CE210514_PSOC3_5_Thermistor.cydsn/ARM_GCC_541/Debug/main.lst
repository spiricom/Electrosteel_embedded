ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.comm	sysexBuffer,2048,4
  21              		.global	sysexPointer
  22              		.bss
  23              		.align	2
  24              		.type	sysexPointer, %object
  25              		.size	sysexPointer, 4
  26              	sysexPointer:
  27 0000 00000000 		.space	4
  28              		.global	receivingSysex
  29              		.type	receivingSysex, %object
  30              		.size	receivingSysex, 1
  31              	receivingSysex:
  32 0004 00       		.space	1
  33              		.global	parsingSysex
  34              		.type	parsingSysex, %object
  35              		.size	parsingSysex, 1
  36              	parsingSysex:
  37 0005 00       		.space	1
  38              		.comm	presetArray,2048,4
  39              		.global	presetNumberToWrite
  40              		.type	presetNumberToWrite, %object
  41              		.size	presetNumberToWrite, 1
  42              	presetNumberToWrite:
  43 0006 00       		.space	1
  44              		.global	copedentNumberToWrite
  45              		.type	copedentNumberToWrite, %object
  46              		.size	copedentNumberToWrite, 1
  47              	copedentNumberToWrite:
  48 0007 00       		.space	1
  49              		.global	sendMessageEnd
  50              		.type	sendMessageEnd, %object
  51              		.size	sendMessageEnd, 1
  52              	sendMessageEnd:
  53 0008 00       		.space	1
  54              		.global	sendSingleParamUpdate
  55              		.type	sendSingleParamUpdate, %object
  56              		.size	sendSingleParamUpdate, 1
  57              	sendSingleParamUpdate:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 2


  58 0009 00       		.space	1
  59              		.global	singleParamToUpdateHigh
  60              		.type	singleParamToUpdateHigh, %object
  61              		.size	singleParamToUpdateHigh, 1
  62              	singleParamToUpdateHigh:
  63 000a 00       		.space	1
  64              		.global	singleParamToUpdateLow
  65              		.type	singleParamToUpdateLow, %object
  66              		.size	singleParamToUpdateLow, 1
  67              	singleParamToUpdateLow:
  68 000b 00       		.space	1
  69              		.global	singleParamValueHigh
  70              		.type	singleParamValueHigh, %object
  71              		.size	singleParamValueHigh, 1
  72              	singleParamValueHigh:
  73 000c 00       		.space	1
  74              		.global	singleParamValueLow
  75              		.type	singleParamValueLow, %object
  76              		.size	singleParamValueLow, 1
  77              	singleParamValueLow:
  78 000d 00       		.space	1
  79              		.global	sendMappingChangeUpdate
  80              		.type	sendMappingChangeUpdate, %object
  81              		.size	sendMappingChangeUpdate, 1
  82              	sendMappingChangeUpdate:
  83 000e 00       		.space	1
  84              		.global	transposeSemitones
  85              		.type	transposeSemitones, %object
  86              		.size	transposeSemitones, 1
  87              	transposeSemitones:
  88 000f 00       		.space	1
  89              		.global	transposeCents
  90              		.type	transposeCents, %object
  91              		.size	transposeCents, 1
  92              	transposeCents:
  93 0010 00       		.space	1
  94              		.global	midiSendOn
  95              		.type	midiSendOn, %object
  96              		.size	midiSendOn, 1
  97              	midiSendOn:
  98 0011 00       		.space	1
  99              		.global	midiBarSendOn
 100              		.type	midiBarSendOn, %object
 101              		.size	midiBarSendOn, 1
 102              	midiBarSendOn:
 103 0012 00       		.space	1
 104              		.global	pitchSmoothing
 105              		.type	pitchSmoothing, %object
 106              		.size	pitchSmoothing, 1
 107              	pitchSmoothing:
 108 0013 00       		.space	1
 109              		.global	controlSmoothing
 110              		.type	controlSmoothing, %object
 111              		.size	controlSmoothing, 1
 112              	controlSmoothing:
 113 0014 00       		.space	1
 114              		.global	deadzones
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 3


 115              		.type	deadzones, %object
 116              		.size	deadzones, 1
 117              	deadzones:
 118 0015 00       		.space	1
 119              		.global	octaveAction
 120              		.type	octaveAction, %object
 121              		.size	octaveAction, 1
 122              	octaveAction:
 123 0016 00       		.space	1
 124              		.global	stringRepresentation
 125              		.data
 126              		.align	2
 127              		.type	stringRepresentation, %object
 128              		.size	stringRepresentation, 2
 129              	stringRepresentation:
 130 0000 03       		.byte	3
 131 0001 08       		.byte	8
 132              		.global	presetArraySection
 133              		.bss
 134              		.type	presetArraySection, %object
 135              		.size	presetArraySection, 1
 136              	presetArraySection:
 137 0017 00       		.space	1
 138              		.global	messageArraySendCount
 139              		.align	1
 140              		.type	messageArraySendCount, %object
 141              		.size	messageArraySendCount, 2
 142              	messageArraySendCount:
 143 0018 0000     		.space	2
 144              		.global	messageArraySize
 145              		.align	1
 146              		.type	messageArraySize, %object
 147              		.size	messageArraySize, 2
 148              	messageArraySize:
 149 001a 0000     		.space	2
 150              		.global	sysexMessageInProgress
 151              		.type	sysexMessageInProgress, %object
 152              		.size	sysexMessageInProgress, 1
 153              	sysexMessageInProgress:
 154 001c 00       		.space	1
 155              		.global	bufCount
 156              		.type	bufCount, %object
 157              		.size	bufCount, 1
 158              	bufCount:
 159 001d 00       		.space	1
 160              		.global	sendingMessage
 161              		.type	sendingMessage, %object
 162              		.size	sendingMessage, 1
 163              	sendingMessage:
 164 001e 00       		.space	1
 165              		.global	sendKnobs
 166              		.type	sendKnobs, %object
 167              		.size	sendKnobs, 1
 168              	sendKnobs:
 169 001f 00       		.space	1
 170              		.global	currentFloat
 171              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 4


 172              		.type	currentFloat, %object
 173              		.size	currentFloat, 4
 174              	currentFloat:
 175 0020 00000000 		.space	4
 176              		.global	mapCount
 177              		.align	2
 178              		.type	mapCount, %object
 179              		.size	mapCount, 4
 180              	mapCount:
 181 0024 00000000 		.space	4
 182              		.global	valsCount
 183              		.align	1
 184              		.type	valsCount, %object
 185              		.size	valsCount, 2
 186              	valsCount:
 187 0028 0000     		.space	2
 188              		.global	mapCountExpectation
 189              		.align	1
 190              		.type	mapCountExpectation, %object
 191              		.size	mapCountExpectation, 2
 192              	mapCountExpectation:
 193 002a 0000     		.space	2
 194              		.global	numMappings
 195              		.align	1
 196              		.type	numMappings, %object
 197              		.size	numMappings, 2
 198              	numMappings:
 199 002c 0000     		.space	2
 200              		.global	parseThatMF
 201              		.type	parseThatMF, %object
 202              		.size	parseThatMF, 1
 203              	parseThatMF:
 204 002e 00       		.space	1
 205              		.global	valCheck
 206 002f 00       		.align	2
 207              		.type	valCheck, %object
 208              		.size	valCheck, 4
 209              	valCheck:
 210 0030 00000000 		.space	4
 211              		.global	testVal
 212              		.align	2
 213              		.type	testVal, %object
 214              		.size	testVal, 4
 215              	testVal:
 216 0034 00000000 		.space	4
 217              		.global	transposeFloat
 218              		.align	2
 219              		.type	transposeFloat, %object
 220              		.size	transposeFloat, 4
 221              	transposeFloat:
 222 0038 00000000 		.space	4
 223              		.global	numStrings
 224              		.data
 225 0002 0000     		.align	2
 226              		.type	numStrings, %object
 227              		.size	numStrings, 4
 228              	numStrings:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 5


 229 0004 0A000000 		.word	10
 230              		.global	usbActivityCounter
 231              		.bss
 232              		.type	usbActivityCounter, %object
 233              		.size	usbActivityCounter, 1
 234              	usbActivityCounter:
 235 003c 00       		.space	1
 236              		.comm	midiMsg,4,4
 237              		.global	currentVBUS
 238              		.type	currentVBUS, %object
 239              		.size	currentVBUS, 1
 240              	currentVBUS:
 241 003d 00       		.space	1
 242              		.global	prevVBUS
 243              		.type	prevVBUS, %object
 244              		.size	prevVBUS, 1
 245              	prevVBUS:
 246 003e 00       		.space	1
 247              		.global	USB_active
 248              		.type	USB_active, %object
 249              		.size	USB_active, 1
 250              	USB_active:
 251 003f 00       		.space	1
 252              		.global	USB_check_flag
 253              		.type	USB_check_flag, %object
 254              		.size	USB_check_flag, 1
 255              	USB_check_flag:
 256 0040 00       		.space	1
 257              		.comm	mappingArray,6,4
 258              		.comm	inBuffer,32,4
 259              		.comm	myArray,32,4
 260              		.comm	myInputArray,2,4
 261              		.comm	linearPotValue32Bit,8,4
 262              		.global	i
 263              		.type	i, %object
 264              		.size	i, 1
 265              	i:
 266 0041 00       		.space	1
 267              		.global	counter
 268              		.type	counter, %object
 269              		.size	counter, 1
 270              	counter:
 271 0042 00       		.space	1
 272              		.comm	returnedData,32,4
 273              		.comm	temper,4,4
 274              		.comm	previousButtons,44,4
 275              		.global	octave
 276              		.data
 277              		.align	2
 278              		.type	octave, %object
 279              		.size	octave, 4
 280              	octave:
 281 0008 05000000 		.word	5
 282              		.comm	angle,20,4
 283              		.comm	prevAngle,20,4
 284              		.comm	ADC_values,8,4
 285              		.global	rawAngle
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 6


 286              		.bss
 287 0043 00       		.align	1
 288              		.type	rawAngle, %object
 289              		.size	rawAngle, 2
 290              	rawAngle:
 291 0044 0000     		.space	2
 292              		.global	midiSent
 293              		.align	1
 294              		.type	midiSent, %object
 295              		.size	midiSent, 2
 296              	midiSent:
 297 0046 0000     		.space	2
 298              		.global	midiOverflow
 299              		.align	1
 300              		.type	midiOverflow, %object
 301              		.size	midiOverflow, 2
 302              	midiOverflow:
 303 0048 0000     		.space	2
 304              		.comm	macroKnobValues,8,4
 305              		.global	currentCopedent
 306              		.type	currentCopedent, %object
 307              		.size	currentCopedent, 1
 308              	currentCopedent:
 309 004a 00       		.space	1
 310              		.global	necks
 311              		.data
 312              		.align	2
 313              		.type	necks, %object
 314              		.size	necks, 2
 315              	necks:
 316 000c 00       		.byte	0
 317 000d 01       		.byte	1
 318              		.comm	rx1Channel,1,1
 319              		.comm	rx2Channel,1,32
 320              		.comm	rx1TD,2,4
 321              		.comm	rx2TD,2,32
 322              		.comm	txChannel,1,32
 323              		.comm	txTD,1,32
 324              		.comm	rx3Channel,1,32
 325              		.comm	rx3TD,1,32
 326              		.comm	rxBufferPluck,52,32
 327              		.comm	rxBufferBar,16,32
 328              		.comm	strings,24,4
 329              		.comm	prevStrings,24,4
 330              		.comm	bar,4,4
 331              		.comm	prevBar,4,4
 332              		.comm	maxStrings,24,4
 333              		.global	amHere
 334              		.bss
 335              		.type	amHere, %object
 336              		.size	amHere, 1
 337              	amHere:
 338 004b 00       		.space	1
 339              		.global	spiCounter
 340              		.type	spiCounter, %object
 341              		.size	spiCounter, 1
 342              	spiCounter:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 7


 343 004c 00       		.space	1
 344              		.global	newDataFlag
 345              		.type	newDataFlag, %object
 346              		.size	newDataFlag, 1
 347              	newDataFlag:
 348 004d 00       		.space	1
 349              		.global	prevOctave
 350 004e 0000     		.align	2
 351              		.type	prevOctave, %object
 352              		.size	prevOctave, 4
 353              	prevOctave:
 354 0050 00000000 		.space	4
 355              		.global	pluck_index
 356              		.type	pluck_index, %object
 357              		.size	pluck_index, 1
 358              	pluck_index:
 359 0054 00       		.space	1
 360              		.global	amHere2
 361              		.type	amHere2, %object
 362              		.size	amHere2, 1
 363              	amHere2:
 364 0055 00       		.space	1
 365              		.global	spiCounter2
 366              		.type	spiCounter2, %object
 367              		.size	spiCounter2, 1
 368              	spiCounter2:
 369 0056 00       		.space	1
 370              		.global	newDataFlag2
 371              		.type	newDataFlag2, %object
 372              		.size	newDataFlag2, 1
 373              	newDataFlag2:
 374 0057 00       		.space	1
 375              		.global	currentPluckBuffer
 376              		.type	currentPluckBuffer, %object
 377              		.size	currentPluckBuffer, 1
 378              	currentPluckBuffer:
 379 0058 00       		.space	1
 380              		.global	currentBarBuffer
 381              		.type	currentBarBuffer, %object
 382              		.size	currentBarBuffer, 1
 383              	currentBarBuffer:
 384 0059 00       		.space	1
 385              		.global	pluckErrorCount
 386              		.type	pluckErrorCount, %object
 387              		.size	pluckErrorCount, 1
 388              	pluckErrorCount:
 389 005a 00       		.space	1
 390              		.global	SPI1ErrorCount
 391 005b 00       		.align	1
 392              		.type	SPI1ErrorCount, %object
 393              		.size	SPI1ErrorCount, 2
 394              	SPI1ErrorCount:
 395 005c 0000     		.space	2
 396              		.global	inputData
 397              		.type	inputData, %object
 398              		.size	inputData, 1
 399              	inputData:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 8


 400 005e 00       		.space	1
 401              		.section	.text.spis_1_ss,"ax",%progbits
 402              		.align	2
 403              		.global	spis_1_ss
 404              		.thumb
 405              		.thumb_func
 406              		.type	spis_1_ss, %function
 407              	spis_1_ss:
 408              	.LFB64:
 409              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** //#define BOOTLOAD_STYLE
  11:main.c        **** 
  12:main.c        **** #define EEPROM_COPEDENT_OFFSET 0
  13:main.c        **** #define COPEDENT_SIZE_IN_BYTES 278 //including name bytes
  14:main.c        **** #define COPEDENT_SIZE_IN_FLOATS 132 // not including name bytes
  15:main.c        **** #define NAME_LENGTH_IN_BYTES 14
  16:main.c        **** #define NUM_FRET_MEASUREMENTS 12
  17:main.c        **** #define NUM_SLIDERS 2
  18:main.c        **** #define EEPROM_LEVER_CALIBRATION_OFFSET (EEPROM_COPEDENT_OFFSET + (MAX_NUM_COPEDENTS * COPEDENT_SIZ
  19:main.c        **** #define LEVER_CALIBRATION_SIZE_IN_BYTES NUM_PEDALS * 4 //for each pedal, store 2 bytes for high and
  20:main.c        **** #define EEPROM_FRET_CALIBRATION_OFFSET (EEPROM_LEVER_CALIBRATION_OFFSET + LEVER_CALIBRATION_SIZE_IN
  21:main.c        **** #define FRET_CALIBRATION_SIZE_IN_BYTES NUM_FRET_MEASUREMENTS * NUM_SLIDERS * 2 //(measurement point
  22:main.c        **** #define EEPROM_CURRENT_PRESET_OFFSET EEPROM_FRET_CALIBRATION_OFFSET + FRET_CALIBRATION_SIZE_IN_BYTE
  23:main.c        **** #define CURRENT_PRESET_SIZE_IN_BYTES 1
  24:main.c        **** #define EEPROM_STRING_REP_OFFSET EEPROM_CURRENT_PRESET_OFFSET + CURRENT_PRESET_SIZE_IN_BYTES
  25:main.c        **** #define STRING_REP_SIZE_IN_BYTES 1
  26:main.c        **** #define EEPROM_TRANSPOSE_OFFSET EEPROM_STRING_REP_OFFSET + STRING_REP_SIZE_IN_BYTES
  27:main.c        **** #define TRANSPOSE_SIZE_IN_BYTES 2
  28:main.c        **** #define EEPROM_OCTAVE_ACTION_OFFSET EEPROM_TRANSPOSE_OFFSET + TRANSPOSE_SIZE_IN_BYTES
  29:main.c        **** #define OCTAVE_ACTION_SIZE_IN_BYTES 1
  30:main.c        **** #define EEPROM_DEADZONES_OFFSET EEPROM_OCTAVE_ACTION_OFFSET + OCTAVE_ACTION_SIZE_IN_BYTES
  31:main.c        **** #define DEADZONES_SIZE_IN_BYTES 1
  32:main.c        **** #define EEPROM_PITCHSMOOTHING_OFFSET EEPROM_DEADZONES_OFFSET + DEADZONES_SIZE_IN_BYTES
  33:main.c        **** #define PITCHSMOOTHING_SIZE_IN_BYTES 1
  34:main.c        **** #define EEPROM_CONTROLSMOOTHING_OFFSET EEPROM_PITCHSMOOTHING_OFFSET + PITCHSMOOTHING_SIZE_IN_BYTES
  35:main.c        **** #define CONTROLSMOOTHING_SIZE_IN_BYTES 1
  36:main.c        **** #define EEPROM_MIDI_SEND_OFFSET EEPROM_CONTROLSMOOTHING_OFFSET + CONTROLSMOOTHING_SIZE_IN_BYTES
  37:main.c        **** #define MIDI_SEND_SIZE_IN_BYTES 1
  38:main.c        **** #define EEPROM_PEDAL_INVERTED_OFFSET EEPROM_MIDI_SEND_OFFSET + MIDI_SEND_SIZE_IN_BYTES
  39:main.c        **** #define PEDAL_INVERTED_SIZE_IN_BYTES 2
  40:main.c        **** #define EEPROM_DUAL_SLIDER_OFFSET EEPROM_PEDAL_INVERTED_OFFSET + PEDAL_INVERTED_SIZE_IN_BYTES
  41:main.c        **** #define DUAL_SLIDER_SIZE_IN_BYTES 1
  42:main.c        **** #define EEPROM_NECKS_OFFSET EEPROM_DUAL_SLIDER_OFFSET + DUAL_SLIDER_SIZE_IN_BYTES
  43:main.c        **** #define NECKS_SIZE_IN_BYTES 1
  44:main.c        **** 
  45:main.c        **** #define MACRO_CLIPPED_LENGTH 9
  46:main.c        **** #define NAME_CLIPPED_LENGTH 12
  47:main.c        **** #define COPEDENT_NAME_CLIPPED_LENGTH 10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 9


  48:main.c        **** #define myBufferSize 32
  49:main.c        **** void parseSysex(void);
  50:main.c        **** 
  51:main.c        **** uint8_t sysexBuffer[2048];
  52:main.c        **** uint32_t sysexPointer = 0;
  53:main.c        **** uint8_t receivingSysex = 0;
  54:main.c        **** uint8_t parsingSysex = 0;
  55:main.c        **** volatile uint8_t presetArray[2048];
  56:main.c        **** uint8_t presetNumberToWrite = 0;
  57:main.c        **** uint8_t copedentNumberToWrite = 0;
  58:main.c        **** uint8_t sendMessageEnd = 0;
  59:main.c        **** 
  60:main.c        **** uint8_t sendSingleParamUpdate = 0;
  61:main.c        **** uint8_t singleParamToUpdateHigh = 0;
  62:main.c        **** uint8_t singleParamToUpdateLow = 0;
  63:main.c        **** uint8_t singleParamValueHigh = 0;
  64:main.c        **** uint8_t singleParamValueLow = 0;
  65:main.c        ****             
  66:main.c        **** uint8_t sendMappingChangeUpdate = 0;
  67:main.c        ****             
  68:main.c        **** 
  69:main.c        **** int8_t transposeSemitones = 0;
  70:main.c        **** int8_t transposeCents = 0;
  71:main.c        **** uint8_t midiSendOn = 0;
  72:main.c        **** uint8_t midiBarSendOn = 0;
  73:main.c        **** uint8_t pitchSmoothing = 0;
  74:main.c        **** uint8_t controlSmoothing = 0;
  75:main.c        **** uint8_t deadzones = 0;
  76:main.c        **** uint8_t octaveAction = 0;
  77:main.c        **** uint8_t stringRepresentation[2] = {3,8};
  78:main.c        **** 
  79:main.c        **** enum presetArraySectionState
  80:main.c        **** {
  81:main.c        ****     presetName = 0,
  82:main.c        ****     macroNames = 1,
  83:main.c        ****     initialVals = 2,
  84:main.c        ****     mapCountNext = 3,
  85:main.c        ****     mapping = 4,
  86:main.c        ****     presetEnd = 5,
  87:main.c        **** };
  88:main.c        **** uint8_t presetArraySection = presetName;
  89:main.c        **** 
  90:main.c        **** uint16_t messageArraySendCount = 0;
  91:main.c        **** uint16_t messageArraySize = 0;
  92:main.c        **** 
  93:main.c        **** uint8_t sysexMessageInProgress = 0;
  94:main.c        **** 
  95:main.c        **** uint8_t bufCount = 0;
  96:main.c        **** volatile uint8_t sendingMessage = 0;
  97:main.c        **** volatile uint8_t sendKnobs = 0;
  98:main.c        **** uint32_t currentFloat = 0;
  99:main.c        **** uint32_t mapCount = 0;
 100:main.c        **** 
 101:main.c        **** uint16_t valsCount = 0;
 102:main.c        **** uint16_t mapCountExpectation = 0;
 103:main.c        **** uint16_t numMappings = 0;
 104:main.c        **** volatile uint8_t parseThatMF = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 10


 105:main.c        **** volatile float valCheck = 0.0f;
 106:main.c        **** volatile float testVal = 0.0f;
 107:main.c        **** float transposeFloat = 0.0f;
 108:main.c        **** 
 109:main.c        **** 
 110:main.c        **** int numStrings = 10;
 111:main.c        **** /*
 112:main.c        **** #define TUNING_ARRAY_SIZE 258
 113:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
 114:main.c        **** */
 115:main.c        **** 
 116:main.c        **** volatile uint8 usbActivityCounter = 0u;
 117:main.c        **** uint8 midiMsg[4];
 118:main.c        **** uint8_t currentVBUS = 0;
 119:main.c        **** uint8_t prevVBUS = 0;
 120:main.c        **** volatile uint8_t USB_active = 0;
 121:main.c        **** volatile uint8_t USB_check_flag = 0;
 122:main.c        **** 
 123:main.c        **** uint8_t mappingArray[6];
 124:main.c        **** 
 125:main.c        **** uint8 inBuffer[myBufferSize];
 126:main.c        **** 
 127:main.c        **** uint8 myArray[myBufferSize];
 128:main.c        **** uint8 myInputArray[2];
 129:main.c        **** int32_t linearPotValue32Bit[2];
 130:main.c        **** uint8_t i = 0;
 131:main.c        **** uint8_t counter = 0;
 132:main.c        **** uint8_t returnedData[myBufferSize];
 133:main.c        **** int32_t temper;
 134:main.c        **** int previousButtons[11];
 135:main.c        **** int octave = 5;
 136:main.c        **** uint16_t angle[10];
 137:main.c        **** uint16_t prevAngle[10];
 138:main.c        **** 
 139:main.c        **** uint16_t ADC_values[4];
 140:main.c        **** uint16_t rawAngle = 0;
 141:main.c        **** uint16_t midiSent = 0;
 142:main.c        **** uint16_t midiOverflow = 0;
 143:main.c        **** 
 144:main.c        **** uint8_t macroKnobValues[8];
 145:main.c        **** 
 146:main.c        **** uint8_t currentCopedent = 0;
 147:main.c        **** uint8_t necks[2] = {0,1};
 148:main.c        **** 
 149:main.c        **** void checkUSB_Vbus(void);
 150:main.c        **** void sendMIDIAllNotesOff(void);
 151:main.c        **** void sendMIDIPitchBend(int val, int channel);
 152:main.c        **** void firstCheckUSB_Vbus(void);
 153:main.c        **** void restartSystemCheck(void);
 154:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 155:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 156:main.c        **** CY_ISR_PROTO(SleepIsr_function);
 157:main.c        **** void noteEvent(int string);
 158:main.c        **** void I2C_reset(void);
 159:main.c        **** void CCEvent(int cc, int val);
 160:main.c        **** void DmaRxConfiguration(void);
 161:main.c        **** void scanUI(void);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 11


 162:main.c        **** void enterEditModeMenu(void);
 163:main.c        **** void exitEditModeMenu(void);
 164:main.c        **** void leftPressed();
 165:main.c        **** void rightPressed();
 166:main.c        **** void downPressed();
 167:main.c        **** void upPressed();
 168:main.c        **** void enterLeverCalibrationMode(void);
 169:main.c        **** void exitLeverCalibrationMode(void);
 170:main.c        **** void enterFretCalibrationMode(void);
 171:main.c        **** void exitFretCalibrationMode(void);
 172:main.c        **** 
 173:main.c        **** /* DMA Configuration for DMA_RX */
 174:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
 175:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
 176:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
 177:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
 178:main.c        **** 
 179:main.c        **** void DmaTxConfiguration(void);
 180:main.c        **** 
 181:main.c        **** /* DMA Configuration for DMA_TX */
 182:main.c        **** #define DMA_TX_BYTES_PER_BURST      (1u)
 183:main.c        **** #define DMA_TX_REQUEST_PER_BURST    (1u)
 184:main.c        **** #define DMA_TX_SRC_BASE             (CYDEV_SRAM_BASE)
 185:main.c        **** #define DMA_TX_DST_BASE             (CYDEV_PERIPH_BASE)
 186:main.c        **** 
 187:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
 188:main.c        **** #define BAR_BUFFER_SIZE                 (8u)
 189:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
 190:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 191:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 192:main.c        **** 
 193:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 194:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 195:main.c        **** 
 196:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 197:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 198:main.c        **** 
 199:main.c        **** 
 200:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 201:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 202:main.c        **** 
 203:main.c        **** volatile uint16_t strings[12];
 204:main.c        **** volatile uint16_t prevStrings[12];
 205:main.c        **** volatile uint16_t bar[2];
 206:main.c        **** volatile uint16_t prevBar[2];
 207:main.c        **** volatile uint16_t maxStrings[12];
 208:main.c        **** volatile uint8_t amHere = 0;
 209:main.c        **** volatile uint8_t spiCounter = 0;
 210:main.c        **** volatile uint8_t newDataFlag = 0;
 211:main.c        **** int prevOctave = 0;
 212:main.c        **** uint8_t pluck_index = 0;
 213:main.c        **** volatile uint8_t amHere2 = 0;
 214:main.c        **** volatile uint8_t spiCounter2 = 0;
 215:main.c        **** volatile uint8_t newDataFlag2 = 0;
 216:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 217:main.c        **** volatile uint8_t currentBarBuffer = 0;
 218:main.c        **** volatile uint8_t pluckErrorCount = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 12


 219:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 220:main.c        **** 
 221:main.c        **** 
 222:main.c        **** 
 223:main.c        **** volatile uint8_t inputData = 0;
 224:main.c        **** 
 225:main.c        **** 
 226:main.c        **** union breakFloat {
 227:main.c        ****  float f;
 228:main.c        ****  uint8_t b[4];  
 229:main.c        ****  uint32_t u32;
 230:main.c        **** };
 231:main.c        **** 
 232:main.c        **** 
 233:main.c        **** CY_ISR(spis_1_ss)
 234:main.c        **** {
 410              		.loc 1 234 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 8
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414 0000 90B5     		push	{r4, r7, lr}
 415              		.cfi_def_cfa_offset 12
 416              		.cfi_offset 4, -12
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 83B0     		sub	sp, sp, #12
 420              		.cfi_def_cfa_offset 24
 421 0004 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
 235:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 423              		.loc 1 235 0
 424 0006 554B     		ldr	r3, .L5
 425 0008 1B78     		ldrb	r3, [r3]
 426 000a DBB2     		uxtb	r3, r3
 427 000c 002B     		cmp	r3, #0
 428 000e 0CBF     		ite	eq
 429 0010 0123     		moveq	r3, #1
 430 0012 0023     		movne	r3, #0
 431 0014 DBB2     		uxtb	r3, r3
 432 0016 1A46     		mov	r2, r3
 433 0018 504B     		ldr	r3, .L5
 434 001a 1A70     		strb	r2, [r3]
 236:main.c        **** 
 237:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 435              		.loc 1 237 0
 436 001c 4F4B     		ldr	r3, .L5
 437 001e 1B78     		ldrb	r3, [r3]
 438 0020 DBB2     		uxtb	r3, r3
 439 0022 002B     		cmp	r3, #0
 440 0024 0CBF     		ite	eq
 441 0026 0123     		moveq	r3, #1
 442 0028 0023     		movne	r3, #0
 443 002a DBB2     		uxtb	r3, r3
 444 002c 1946     		mov	r1, r3
 445 002e 4C4A     		ldr	r2, .L5+4
 446 0030 1A23     		movs	r3, #26
 447 0032 03FB01F3 		mul	r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 13


 448 0036 1344     		add	r3, r3, r2
 449 0038 1B78     		ldrb	r3, [r3]
 450 003a DBB2     		uxtb	r3, r3
 451 003c FE2B     		cmp	r3, #254
 452 003e 4FD1     		bne	.L2
 453              		.loc 1 237 0 is_stmt 0 discriminator 1
 454 0040 464B     		ldr	r3, .L5
 455 0042 1B78     		ldrb	r3, [r3]
 456 0044 DBB2     		uxtb	r3, r3
 457 0046 002B     		cmp	r3, #0
 458 0048 0CBF     		ite	eq
 459 004a 0123     		moveq	r3, #1
 460 004c 0023     		movne	r3, #0
 461 004e DBB2     		uxtb	r3, r3
 462 0050 1946     		mov	r1, r3
 463 0052 434A     		ldr	r2, .L5+4
 464 0054 1A23     		movs	r3, #26
 465 0056 03FB01F3 		mul	r3, r3, r1
 466 005a 1344     		add	r3, r3, r2
 467 005c 1933     		adds	r3, r3, #25
 468 005e 1B78     		ldrb	r3, [r3]
 469 0060 DBB2     		uxtb	r3, r3
 470 0062 FD2B     		cmp	r3, #253
 471 0064 3CD1     		bne	.L2
 472              	.LBB2:
 238:main.c        ****     {
 239:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 473              		.loc 1 239 0 is_stmt 1
 474 0066 0023     		movs	r3, #0
 475 0068 7B60     		str	r3, [r7, #4]
 476 006a 34E0     		b	.L3
 477              	.L4:
 240:main.c        ****         {
 241:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 478              		.loc 1 241 0 discriminator 3
 479 006c 3B4B     		ldr	r3, .L5
 480 006e 1B78     		ldrb	r3, [r3]
 481 0070 DBB2     		uxtb	r3, r3
 482 0072 002B     		cmp	r3, #0
 483 0074 0CBF     		ite	eq
 484 0076 0123     		moveq	r3, #1
 485 0078 0023     		movne	r3, #0
 486 007a DBB2     		uxtb	r3, r3
 487 007c 1846     		mov	r0, r3
 488 007e 7B68     		ldr	r3, [r7, #4]
 489 0080 5B00     		lsls	r3, r3, #1
 490 0082 0133     		adds	r3, r3, #1
 491 0084 3649     		ldr	r1, .L5+4
 492 0086 1A22     		movs	r2, #26
 493 0088 02FB00F2 		mul	r2, r2, r0
 494 008c 0A44     		add	r2, r2, r1
 495 008e 1344     		add	r3, r3, r2
 496 0090 1B78     		ldrb	r3, [r3]
 497 0092 DBB2     		uxtb	r3, r3
 498 0094 9BB2     		uxth	r3, r3
 499 0096 1B02     		lsls	r3, r3, #8
 500 0098 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 14


 501 009a 304B     		ldr	r3, .L5
 502 009c 1B78     		ldrb	r3, [r3]
 503 009e DBB2     		uxtb	r3, r3
 504 00a0 002B     		cmp	r3, #0
 505 00a2 0CBF     		ite	eq
 506 00a4 0123     		moveq	r3, #1
 507 00a6 0023     		movne	r3, #0
 508 00a8 DBB2     		uxtb	r3, r3
 509 00aa 1C46     		mov	r4, r3
 510 00ac 7B68     		ldr	r3, [r7, #4]
 511 00ae 0133     		adds	r3, r3, #1
 512 00b0 5B00     		lsls	r3, r3, #1
 513 00b2 2B48     		ldr	r0, .L5+4
 514 00b4 1A21     		movs	r1, #26
 515 00b6 01FB04F1 		mul	r1, r1, r4
 516 00ba 0144     		add	r1, r1, r0
 517 00bc 0B44     		add	r3, r3, r1
 518 00be 1B78     		ldrb	r3, [r3]
 519 00c0 DBB2     		uxtb	r3, r3
 520 00c2 9BB2     		uxth	r3, r3
 521 00c4 1344     		add	r3, r3, r2
 522 00c6 99B2     		uxth	r1, r3
 523 00c8 264A     		ldr	r2, .L5+8
 524 00ca 7B68     		ldr	r3, [r7, #4]
 525 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 239:main.c        ****         {
 526              		.loc 1 239 0 discriminator 3
 527 00d0 7B68     		ldr	r3, [r7, #4]
 528 00d2 0133     		adds	r3, r3, #1
 529 00d4 7B60     		str	r3, [r7, #4]
 530              	.L3:
 239:main.c        ****         {
 531              		.loc 1 239 0 is_stmt 0 discriminator 1
 532 00d6 244B     		ldr	r3, .L5+12
 533 00d8 1B68     		ldr	r3, [r3]
 534 00da 7A68     		ldr	r2, [r7, #4]
 535 00dc 9A42     		cmp	r2, r3
 536 00de C5DB     		blt	.L4
 537              	.L2:
 538              	.LBE2:
 242:main.c        ****         }
 243:main.c        ****     }
 244:main.c        ****     SPIS_1_ClearRxBuffer();
 539              		.loc 1 244 0 is_stmt 1
 540 00e0 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 245:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 541              		.loc 1 245 0
 542 00e4 214B     		ldr	r3, .L5+16
 543 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 544 00e8 1846     		mov	r0, r3
 545 00ea FFF7FEFF 		bl	CyDmaClearPendingDrq
 246:main.c        **** 
 247:main.c        ****     //set up the next DMA transaction
 248:main.c        **** 
 249:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 546              		.loc 1 249 0
 547 00ee 1B4B     		ldr	r3, .L5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 15


 548 00f0 1B78     		ldrb	r3, [r3]
 549 00f2 DBB2     		uxtb	r3, r3
 550 00f4 1A46     		mov	r2, r3
 551 00f6 1E4B     		ldr	r3, .L5+20
 552 00f8 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 553 00fa 0223     		movs	r3, #2
 554 00fc FE22     		movs	r2, #254
 555 00fe 1A21     		movs	r1, #26
 556 0100 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 250:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 557              		.loc 1 250 0
 558 0104 154B     		ldr	r3, .L5
 559 0106 1B78     		ldrb	r3, [r3]
 560 0108 DBB2     		uxtb	r3, r3
 561 010a 1A46     		mov	r2, r3
 562 010c 184B     		ldr	r3, .L5+20
 563 010e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 564 0110 124B     		ldr	r3, .L5
 565 0112 1B78     		ldrb	r3, [r3]
 566 0114 DBB2     		uxtb	r3, r3
 567 0116 1A46     		mov	r2, r3
 568 0118 1A23     		movs	r3, #26
 569 011a 03FB02F3 		mul	r3, r3, r2
 570 011e 104A     		ldr	r2, .L5+4
 571 0120 1344     		add	r3, r3, r2
 572 0122 9BB2     		uxth	r3, r3
 573 0124 1A46     		mov	r2, r3
 574 0126 46F25551 		movw	r1, #25941
 575 012a FFF7FEFF 		bl	CyDmaTdSetAddress
 251:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 576              		.loc 1 251 0
 577 012e 0F4B     		ldr	r3, .L5+16
 578 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 579 0132 0A4B     		ldr	r3, .L5
 580 0134 1B78     		ldrb	r3, [r3]
 581 0136 DBB2     		uxtb	r3, r3
 582 0138 1946     		mov	r1, r3
 583 013a 0D4B     		ldr	r3, .L5+20
 584 013c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 585 013e 1946     		mov	r1, r3
 586 0140 1046     		mov	r0, r2
 587 0142 FFF7FEFF 		bl	CyDmaChSetInitialTd
 252:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 588              		.loc 1 252 0
 589 0146 094B     		ldr	r3, .L5+16
 590 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 591 014a 0121     		movs	r1, #1
 592 014c 1846     		mov	r0, r3
 593 014e FFF7FEFF 		bl	CyDmaChEnable
 253:main.c        **** 
 254:main.c        **** }
 594              		.loc 1 254 0
 595 0152 00BF     		nop
 596 0154 0C37     		adds	r7, r7, #12
 597              		.cfi_def_cfa_offset 12
 598 0156 BD46     		mov	sp, r7
 599              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 16


 600              		@ sp needed
 601 0158 90BD     		pop	{r4, r7, pc}
 602              	.L6:
 603 015a 00BF     		.align	2
 604              	.L5:
 605 015c 00000000 		.word	currentPluckBuffer
 606 0160 00000000 		.word	rxBufferPluck
 607 0164 00000000 		.word	strings
 608 0168 00000000 		.word	numStrings
 609 016c 00000000 		.word	rx1Channel
 610 0170 00000000 		.word	rx1TD
 611              		.cfi_endproc
 612              	.LFE64:
 613              		.size	spis_1_ss, .-spis_1_ss
 614              		.global	spiAdjusted
 615              		.bss
 616              		.type	spiAdjusted, %object
 617              		.size	spiAdjusted, 1
 618              	spiAdjusted:
 619 005f 00       		.space	1
 620              		.global	mySpiCounter
 621              		.type	mySpiCounter, %object
 622              		.size	mySpiCounter, 1
 623              	mySpiCounter:
 624 0060 00       		.space	1
 625              		.global	offsetErrorCount
 626 0061 00       		.align	1
 627              		.type	offsetErrorCount, %object
 628              		.size	offsetErrorCount, 2
 629              	offsetErrorCount:
 630 0062 0000     		.space	2
 631              		.global	SPI2errorflag
 632              		.type	SPI2errorflag, %object
 633              		.size	SPI2errorflag, 1
 634              	SPI2errorflag:
 635 0064 00       		.space	1
 636              		.global	bar_index
 637 0065 000000   		.align	2
 638              		.type	bar_index, %object
 639              		.size	bar_index, 4
 640              	bar_index:
 641 0068 00000000 		.space	4
 642              		.comm	knobs,4,4
 643              		.comm	prevKnobs,4,4
 644              		.comm	knobs7bit,4,4
 645              		.comm	prevKnobs7bit,4,4
 646              		.global	u7bit_volumePedal
 647              		.type	u7bit_volumePedal, %object
 648              		.size	u7bit_volumePedal, 1
 649              	u7bit_volumePedal:
 650 006c 00       		.space	1
 651              		.global	prev_7bit_volumePedal
 652              		.type	prev_7bit_volumePedal, %object
 653              		.size	prev_7bit_volumePedal, 1
 654              	prev_7bit_volumePedal:
 655 006d 00       		.space	1
 656              		.global	SPI2started
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 17


 657              		.type	SPI2started, %object
 658              		.size	SPI2started, 1
 659              	SPI2started:
 660 006e 00       		.space	1
 661              		.global	whichMacro
 662              		.type	whichMacro, %object
 663              		.size	whichMacro, 1
 664              	whichMacro:
 665 006f 00       		.space	1
 666              		.comm	macroKnobValues7bit,8,4
 667              		.comm	prevMacroKnobValues7bit,8,4
 668              		.section	.text.spis_2_ss,"ax",%progbits
 669              		.align	2
 670              		.global	spis_2_ss
 671              		.thumb
 672              		.thumb_func
 673              		.type	spis_2_ss, %function
 674              	spis_2_ss:
 675              	.LFB65:
 255:main.c        **** 
 256:main.c        **** 
 257:main.c        **** 
 258:main.c        **** uint8_t spiAdjusted = 0;
 259:main.c        **** uint8_t mySpiCounter = 0;
 260:main.c        **** volatile uint16_t offsetErrorCount = 0;
 261:main.c        **** volatile uint8_t SPI2errorflag = 0;
 262:main.c        **** volatile int bar_index = 0;
 263:main.c        **** uint8_t knobs[4];
 264:main.c        **** uint8_t prevKnobs[4];
 265:main.c        **** 
 266:main.c        **** uint8_t knobs7bit[4];
 267:main.c        **** uint8_t prevKnobs7bit[4];
 268:main.c        **** 
 269:main.c        **** uint8_t u7bit_volumePedal = 0;
 270:main.c        **** uint8_t prev_7bit_volumePedal = 0;
 271:main.c        **** volatile uint8_t SPI2started = 0;
 272:main.c        **** 
 273:main.c        **** uint8_t whichMacro = 0;
 274:main.c        **** 
 275:main.c        **** uint8_t macroKnobValues7bit[8];
 276:main.c        **** uint8_t prevMacroKnobValues7bit[8];
 277:main.c        **** 
 278:main.c        **** 
 279:main.c        **** CY_ISR(spis_2_ss)
 280:main.c        **** {
 676              		.loc 1 280 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 1, uses_anonymous_args = 0
 680 0000 80B5     		push	{r7, lr}
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 7, -8
 683              		.cfi_offset 14, -4
 684 0002 00AF     		add	r7, sp, #0
 685              		.cfi_def_cfa_register 7
 281:main.c        **** 
 282:main.c        ****     currentBarBuffer = !currentBarBuffer;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 18


 686              		.loc 1 282 0
 687 0004 214B     		ldr	r3, .L8
 688 0006 1B78     		ldrb	r3, [r3]
 689 0008 DBB2     		uxtb	r3, r3
 690 000a 002B     		cmp	r3, #0
 691 000c 0CBF     		ite	eq
 692 000e 0123     		moveq	r3, #1
 693 0010 0023     		movne	r3, #0
 694 0012 DBB2     		uxtb	r3, r3
 695 0014 1A46     		mov	r2, r3
 696 0016 1D4B     		ldr	r3, .L8
 697 0018 1A70     		strb	r2, [r3]
 283:main.c        ****     SPIS_2_ClearRxBuffer();
 698              		.loc 1 283 0
 699 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 284:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 700              		.loc 1 284 0
 701 001e 1C4B     		ldr	r3, .L8+4
 702 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 703 0022 1846     		mov	r0, r3
 704 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 285:main.c        **** 
 286:main.c        ****     //set up the next DMA transaction
 287:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 705              		.loc 1 287 0
 706 0028 184B     		ldr	r3, .L8
 707 002a 1B78     		ldrb	r3, [r3]
 708 002c DBB2     		uxtb	r3, r3
 709 002e 1A46     		mov	r2, r3
 710 0030 184B     		ldr	r3, .L8+8
 711 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 712 0034 0623     		movs	r3, #6
 713 0036 FE22     		movs	r2, #254
 714 0038 0821     		movs	r1, #8
 715 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 288:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 716              		.loc 1 288 0
 717 003e 134B     		ldr	r3, .L8
 718 0040 1B78     		ldrb	r3, [r3]
 719 0042 DBB2     		uxtb	r3, r3
 720 0044 1A46     		mov	r2, r3
 721 0046 134B     		ldr	r3, .L8+8
 722 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 723 004a 104B     		ldr	r3, .L8
 724 004c 1B78     		ldrb	r3, [r3]
 725 004e DBB2     		uxtb	r3, r3
 726 0050 DB00     		lsls	r3, r3, #3
 727 0052 114A     		ldr	r2, .L8+12
 728 0054 1344     		add	r3, r3, r2
 729 0056 9BB2     		uxth	r3, r3
 730 0058 1A46     		mov	r2, r3
 731 005a 46F25841 		movw	r1, #25688
 732 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 289:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 733              		.loc 1 289 0
 734 0062 0B4B     		ldr	r3, .L8+4
 735 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 19


 736 0066 094B     		ldr	r3, .L8
 737 0068 1B78     		ldrb	r3, [r3]
 738 006a DBB2     		uxtb	r3, r3
 739 006c 1946     		mov	r1, r3
 740 006e 094B     		ldr	r3, .L8+8
 741 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 742 0072 1946     		mov	r1, r3
 743 0074 1046     		mov	r0, r2
 744 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 290:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 745              		.loc 1 290 0
 746 007a 054B     		ldr	r3, .L8+4
 747 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 748 007e 0121     		movs	r1, #1
 749 0080 1846     		mov	r0, r3
 750 0082 FFF7FEFF 		bl	CyDmaChEnable
 291:main.c        **** }
 751              		.loc 1 291 0
 752 0086 00BF     		nop
 753 0088 80BD     		pop	{r7, pc}
 754              	.L9:
 755 008a 00BF     		.align	2
 756              	.L8:
 757 008c 00000000 		.word	currentBarBuffer
 758 0090 00000000 		.word	rx2Channel
 759 0094 00000000 		.word	rx2TD
 760 0098 00000000 		.word	rxBufferBar
 761              		.cfi_endproc
 762              	.LFE65:
 763              		.size	spis_2_ss, .-spis_2_ss
 764              		.bss
 765              		.align	2
 766              	eepromArray:
 767 0070 0000     		.space	2
 768              		.global	array
 769 0072 0000     		.align	2
 770              		.type	array, %object
 771              		.size	array, 2
 772              	array:
 773 0074 0000     		.space	2
 774              		.comm	eepromReturnValue,1,1
 775              		.global	Em_EEPROM_em_EepromStorage
 776              		.section	.rodata
 777              		.align	8
 778              		.type	Em_EEPROM_em_EepromStorage, %object
 779              		.size	Em_EEPROM_em_EepromStorage, 1024
 780              	Em_EEPROM_em_EepromStorage:
 781 0000 00000000 		.space	1024
 781      00000000 
 781      00000000 
 781      00000000 
 781      00000000 
 782              		.comm	eeprom_cnt,1,1
 783              		.comm	status,4,4
 784              		.comm	ptr,4,4
 785              		.global	barCount
 786              		.bss
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 20


 787 0076 0000     		.align	2
 788              		.type	barCount, %object
 789              		.size	barCount, 4
 790              	barCount:
 791 0078 00000000 		.space	4
 792              		.section	.text.Vbus_function,"ax",%progbits
 793              		.align	2
 794              		.global	Vbus_function
 795              		.thumb
 796              		.thumb_func
 797              		.type	Vbus_function, %function
 798              	Vbus_function:
 799              	.LFB66:
 292:main.c        **** 
 293:main.c        **** 
 294:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 295:main.c        ****                                             
 296:main.c        ****     uint8 array[] ={ 0, 0 };
 297:main.c        ****                                 
 298:main.c        ****     /*Return status for EEPROM and UART*/ 
 299:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 300:main.c        **** 
 301:main.c        **** 
 302:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 303:main.c        **** #if defined (__ICCARM__)
 304:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 305:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 306:main.c        **** #else
 307:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 308:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 309:main.c        **** #endif /* defined (__ICCARM__) */
 310:main.c        **** 
 311:main.c        ****     uint8 eeprom_cnt;
 312:main.c        ****     cystatus status;
 313:main.c        ****     volatile const uint8 * ptr;
 314:main.c        **** volatile int barCount = 0;
 315:main.c        **** 
 316:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 317:main.c        ****     
 318:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 319:main.c        **** 
 320:main.c        **** CY_ISR(Vbus_function)
 321:main.c        **** {
 800              		.loc 1 321 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 80B5     		push	{r7, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 322:main.c        ****     //plug or unplug event
 323:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 324:main.c        ****     //otherwise, restart
 325:main.c        ****     my_Vbus_ISR_ClearPending();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 21


 810              		.loc 1 325 0
 811 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 326:main.c        ****     vBusPin_ClearInterrupt();
 812              		.loc 1 326 0
 813 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 327:main.c        ****     restartSystemCheck();
 814              		.loc 1 327 0
 815 000c FFF7FEFF 		bl	restartSystemCheck
 328:main.c        **** 
 329:main.c        **** }
 816              		.loc 1 329 0
 817 0010 00BF     		nop
 818 0012 80BD     		pop	{r7, pc}
 819              		.cfi_endproc
 820              	.LFE66:
 821              		.size	Vbus_function, .-Vbus_function
 822              		.section	.text.restartSystemCheck,"ax",%progbits
 823              		.align	2
 824              		.global	restartSystemCheck
 825              		.thumb
 826              		.thumb_func
 827              		.type	restartSystemCheck, %function
 828              	restartSystemCheck:
 829              	.LFB67:
 330:main.c        **** 
 331:main.c        **** void restartSystemCheck()
 332:main.c        **** {
 830              		.loc 1 332 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834 0000 80B5     		push	{r7, lr}
 835              		.cfi_def_cfa_offset 8
 836              		.cfi_offset 7, -8
 837              		.cfi_offset 14, -4
 838 0002 00AF     		add	r7, sp, #0
 839              		.cfi_def_cfa_register 7
 333:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 840              		.loc 1 333 0
 841 0004 184B     		ldr	r3, .L15
 842 0006 0222     		movs	r2, #2
 843 0008 1849     		ldr	r1, .L15+4
 844 000a 0020     		movs	r0, #0
 845 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 846 0010 0346     		mov	r3, r0
 847 0012 1A46     		mov	r2, r3
 848 0014 164B     		ldr	r3, .L15+8
 849 0016 1A70     		strb	r2, [r3]
 334:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 335:main.c        ****     if (USB_VBusPresent() == 1)
 850              		.loc 1 335 0
 851 0018 FFF7FEFF 		bl	USB_VBusPresent
 852 001c 0346     		mov	r3, r0
 853 001e 012B     		cmp	r3, #1
 854 0020 20D1     		bne	.L14
 336:main.c        ****     {
 337:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 22


 855              		.loc 1 337 0
 856 0022 124B     		ldr	r3, .L15+4
 857 0024 1B78     		ldrb	r3, [r3]
 858 0026 DBB2     		uxtb	r3, r3
 859 0028 012B     		cmp	r3, #1
 860 002a 0CD1     		bne	.L13
 338:main.c        ****         {
 339:main.c        ****             //a flag says we just restarted
 340:main.c        ****             //write a zero so it knows next time that it's OK to restart
 341:main.c        ****             array[0] = 0;
 861              		.loc 1 341 0
 862 002c 114B     		ldr	r3, .L15+12
 863 002e 0022     		movs	r2, #0
 864 0030 1A70     		strb	r2, [r3]
 342:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 865              		.loc 1 342 0
 866 0032 0D4B     		ldr	r3, .L15
 867 0034 0222     		movs	r2, #2
 868 0036 0F49     		ldr	r1, .L15+12
 869 0038 0020     		movs	r0, #0
 870 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 343:main.c        ****             USB_check_flag = 1;
 871              		.loc 1 343 0
 872 003e 0E4B     		ldr	r3, .L15+16
 873 0040 0122     		movs	r2, #1
 874 0042 1A70     		strb	r2, [r3]
 344:main.c        ****         }
 345:main.c        ****         else
 346:main.c        ****         {
 347:main.c        ****            //otherwise, we need to restart
 348:main.c        ****            array[0] = 1;
 349:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 350:main.c        ****             USB_Stop();
 351:main.c        ****             I2C_1_Stop();
 352:main.c        ****             CySoftwareReset();
 353:main.c        ****         }
 354:main.c        ****     }
 355:main.c        **** }
 875              		.loc 1 355 0
 876 0044 0EE0     		b	.L14
 877              	.L13:
 348:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 878              		.loc 1 348 0
 879 0046 0B4B     		ldr	r3, .L15+12
 880 0048 0122     		movs	r2, #1
 881 004a 1A70     		strb	r2, [r3]
 349:main.c        ****             USB_Stop();
 882              		.loc 1 349 0
 883 004c 064B     		ldr	r3, .L15
 884 004e 0222     		movs	r2, #2
 885 0050 0849     		ldr	r1, .L15+12
 886 0052 0020     		movs	r0, #0
 887 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 350:main.c        ****             I2C_1_Stop();
 888              		.loc 1 350 0
 889 0058 FFF7FEFF 		bl	USB_Stop
 351:main.c        ****             CySoftwareReset();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 23


 890              		.loc 1 351 0
 891 005c FFF7FEFF 		bl	I2C_1_Stop
 352:main.c        ****         }
 892              		.loc 1 352 0
 893 0060 FFF7FEFF 		bl	CySoftwareReset
 894              	.L14:
 895              		.loc 1 355 0
 896 0064 00BF     		nop
 897 0066 80BD     		pop	{r7, pc}
 898              	.L16:
 899              		.align	2
 900              	.L15:
 901 0068 00000000 		.word	Em_EEPROM_context
 902 006c 70000000 		.word	eepromArray
 903 0070 00000000 		.word	eepromReturnValue
 904 0074 00000000 		.word	array
 905 0078 00000000 		.word	USB_check_flag
 906              		.cfi_endproc
 907              	.LFE67:
 908              		.size	restartSystemCheck, .-restartSystemCheck
 909              		.global	__aeabi_fcmpgt
 910              		.global	__aeabi_fcmplt
 911              		.section	.text.LEAF_clip,"ax",%progbits
 912              		.align	2
 913              		.global	LEAF_clip
 914              		.thumb
 915              		.thumb_func
 916              		.type	LEAF_clip, %function
 917              	LEAF_clip:
 918              	.LFB68:
 356:main.c        ****     
 357:main.c        **** #define INV_440 0.0022727272727273f
 358:main.c        **** 
 359:main.c        **** float   LEAF_clip(float min, float val, float max)
 360:main.c        **** {
 919              		.loc 1 360 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 24
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923 0000 80B5     		push	{r7, lr}
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 7, -8
 926              		.cfi_offset 14, -4
 927 0002 86B0     		sub	sp, sp, #24
 928              		.cfi_def_cfa_offset 32
 929 0004 00AF     		add	r7, sp, #0
 930              		.cfi_def_cfa_register 7
 931 0006 F860     		str	r0, [r7, #12]	@ float
 932 0008 B960     		str	r1, [r7, #8]	@ float
 933 000a 7A60     		str	r2, [r7, #4]	@ float
 361:main.c        ****     float tempmin = min;
 934              		.loc 1 361 0
 935 000c FB68     		ldr	r3, [r7, #12]	@ float
 936 000e 7B61     		str	r3, [r7, #20]	@ float
 362:main.c        ****     float tempmax = max;
 937              		.loc 1 362 0
 938 0010 7B68     		ldr	r3, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 24


 939 0012 3B61     		str	r3, [r7, #16]	@ float
 363:main.c        ****     if (min > max)
 940              		.loc 1 363 0
 941 0014 7968     		ldr	r1, [r7, #4]	@ float
 942 0016 F868     		ldr	r0, [r7, #12]	@ float
 943 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 944 001c 0346     		mov	r3, r0
 945 001e 002B     		cmp	r3, #0
 946 0020 03D0     		beq	.L18
 364:main.c        ****     {
 365:main.c        ****         tempmin = max;
 947              		.loc 1 365 0
 948 0022 7B68     		ldr	r3, [r7, #4]	@ float
 949 0024 7B61     		str	r3, [r7, #20]	@ float
 366:main.c        ****         tempmax = min;
 950              		.loc 1 366 0
 951 0026 FB68     		ldr	r3, [r7, #12]	@ float
 952 0028 3B61     		str	r3, [r7, #16]	@ float
 953              	.L18:
 367:main.c        ****     }
 368:main.c        ****     if (val < tempmin)
 954              		.loc 1 368 0
 955 002a 7969     		ldr	r1, [r7, #20]	@ float
 956 002c B868     		ldr	r0, [r7, #8]	@ float
 957 002e FFF7FEFF 		bl	__aeabi_fcmplt
 958 0032 0346     		mov	r3, r0
 959 0034 002B     		cmp	r3, #0
 960 0036 01D0     		beq	.L28
 369:main.c        ****     {
 370:main.c        ****         return tempmin;
 961              		.loc 1 370 0
 962 0038 7B69     		ldr	r3, [r7, #20]	@ float
 963 003a 09E0     		b	.L22
 964              	.L28:
 371:main.c        ****     }
 372:main.c        ****     else if (val > tempmax)
 965              		.loc 1 372 0
 966 003c 3969     		ldr	r1, [r7, #16]	@ float
 967 003e B868     		ldr	r0, [r7, #8]	@ float
 968 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 969 0044 0346     		mov	r3, r0
 970 0046 002B     		cmp	r3, #0
 971 0048 01D0     		beq	.L29
 373:main.c        ****     {
 374:main.c        ****         return tempmax;
 972              		.loc 1 374 0
 973 004a 3B69     		ldr	r3, [r7, #16]	@ float
 974 004c 00E0     		b	.L22
 975              	.L29:
 375:main.c        ****     }
 376:main.c        ****     else
 377:main.c        ****     {
 378:main.c        ****         return val;
 976              		.loc 1 378 0
 977 004e BB68     		ldr	r3, [r7, #8]	@ float
 978              	.L22:
 379:main.c        ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 25


 380:main.c        **** }
 979              		.loc 1 380 0
 980 0050 1846     		mov	r0, r3
 981 0052 1837     		adds	r7, r7, #24
 982              		.cfi_def_cfa_offset 8
 983 0054 BD46     		mov	sp, r7
 984              		.cfi_def_cfa_register 13
 985              		@ sp needed
 986 0056 80BD     		pop	{r7, pc}
 987              		.cfi_endproc
 988              	.LFE68:
 989              		.size	LEAF_clip, .-LEAF_clip
 990              		.global	__aeabi_fcmple
 991              		.global	__aeabi_fmul
 992              		.section	.text.mtof,"ax",%progbits
 993              		.align	2
 994              		.global	mtof
 995              		.thumb
 996              		.thumb_func
 997              		.type	mtof, %function
 998              	mtof:
 999              	.LFB69:
 381:main.c        **** float mtof(float f)
 382:main.c        **** {
 1000              		.loc 1 382 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 8
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004 0000 80B5     		push	{r7, lr}
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 82B0     		sub	sp, sp, #8
 1009              		.cfi_def_cfa_offset 16
 1010 0004 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
 1012 0006 7860     		str	r0, [r7, #4]	@ float
 383:main.c        ****     if (f <= -1500.0f) return(0);
 1013              		.loc 1 383 0
 1014 0008 1349     		ldr	r1, .L40
 1015 000a 7868     		ldr	r0, [r7, #4]	@ float
 1016 000c FFF7FEFF 		bl	__aeabi_fcmple
 1017 0010 0346     		mov	r3, r0
 1018 0012 002B     		cmp	r3, #0
 1019 0014 02D0     		beq	.L38
 1020              		.loc 1 383 0 is_stmt 0 discriminator 1
 1021 0016 4FF00003 		mov	r3, #0
 1022 001a 19E0     		b	.L33
 1023              	.L38:
 384:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 1024              		.loc 1 384 0 is_stmt 1
 1025 001c 0F49     		ldr	r1, .L40+4
 1026 001e 7868     		ldr	r0, [r7, #4]	@ float
 1027 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 1028 0024 0346     		mov	r3, r0
 1029 0026 002B     		cmp	r3, #0
 1030 0028 04D0     		beq	.L39
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 26


 1031              		.loc 1 384 0 is_stmt 0 discriminator 1
 1032 002a 0C48     		ldr	r0, .L40+4
 1033 002c FFF7FEFF 		bl	mtof
 1034 0030 0346     		mov	r3, r0
 1035 0032 0DE0     		b	.L33
 1036              	.L39:
 385:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 1037              		.loc 1 385 0 is_stmt 1
 1038 0034 0A49     		ldr	r1, .L40+8
 1039 0036 7868     		ldr	r0, [r7, #4]	@ float
 1040 0038 FFF7FEFF 		bl	__aeabi_fmul
 1041 003c 0346     		mov	r3, r0
 1042 003e 1846     		mov	r0, r3
 1043 0040 FFF7FEFF 		bl	expf
 1044 0044 0346     		mov	r3, r0
 1045 0046 0749     		ldr	r1, .L40+12
 1046 0048 1846     		mov	r0, r3
 1047 004a FFF7FEFF 		bl	__aeabi_fmul
 1048 004e 0346     		mov	r3, r0
 1049              	.L33:
 386:main.c        **** }
 1050              		.loc 1 386 0
 1051 0050 1846     		mov	r0, r3
 1052 0052 0837     		adds	r7, r7, #8
 1053              		.cfi_def_cfa_offset 8
 1054 0054 BD46     		mov	sp, r7
 1055              		.cfi_def_cfa_register 13
 1056              		@ sp needed
 1057 0056 80BD     		pop	{r7, pc}
 1058              	.L41:
 1059              		.align	2
 1060              	.L40:
 1061 0058 0080BBC4 		.word	-994344960
 1062 005c 0060BB44 		.word	1153130496
 1063 0060 20986C3D 		.word	1030527008
 1064 0064 13D00241 		.word	1090703379
 1065              		.cfi_endproc
 1066              	.LFE69:
 1067              		.size	mtof, .-mtof
 1068              		.section	.text.ftom,"ax",%progbits
 1069              		.align	2
 1070              		.global	ftom
 1071              		.thumb
 1072              		.thumb_func
 1073              		.type	ftom, %function
 1074              	ftom:
 1075              	.LFB70:
 387:main.c        **** 
 388:main.c        **** float ftom(float f)
 389:main.c        **** {
 1076              		.loc 1 389 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 8
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080 0000 80B5     		push	{r7, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 27


 1083              		.cfi_offset 14, -4
 1084 0002 82B0     		sub	sp, sp, #8
 1085              		.cfi_def_cfa_offset 16
 1086 0004 00AF     		add	r7, sp, #0
 1087              		.cfi_def_cfa_register 7
 1088 0006 7860     		str	r0, [r7, #4]	@ float
 390:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 1089              		.loc 1 390 0
 1090 0008 4FF00001 		mov	r1, #0
 1091 000c 7868     		ldr	r0, [r7, #4]	@ float
 1092 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 1093 0012 0346     		mov	r3, r0
 1094 0014 002B     		cmp	r3, #0
 1095 0016 0ED0     		beq	.L48
 1096              		.loc 1 390 0 is_stmt 0 discriminator 1
 1097 0018 0949     		ldr	r1, .L49
 1098 001a 7868     		ldr	r0, [r7, #4]	@ float
 1099 001c FFF7FEFF 		bl	__aeabi_fmul
 1100 0020 0346     		mov	r3, r0
 1101 0022 1846     		mov	r0, r3
 1102 0024 FFF7FEFF 		bl	logf
 1103 0028 0346     		mov	r3, r0
 1104 002a 0649     		ldr	r1, .L49+4
 1105 002c 1846     		mov	r0, r3
 1106 002e FFF7FEFF 		bl	__aeabi_fmul
 1107 0032 0346     		mov	r3, r0
 1108 0034 00E0     		b	.L46
 1109              	.L48:
 1110              		.loc 1 390 0 discriminator 2
 1111 0036 044B     		ldr	r3, .L49+8
 1112              	.L46:
 391:main.c        **** }
 1113              		.loc 1 391 0 is_stmt 1 discriminator 5
 1114 0038 1846     		mov	r0, r3
 1115 003a 0837     		adds	r7, r7, #8
 1116              		.cfi_def_cfa_offset 8
 1117 003c BD46     		mov	sp, r7
 1118              		.cfi_def_cfa_register 13
 1119              		@ sp needed
 1120 003e 80BD     		pop	{r7, pc}
 1121              	.L50:
 1122              		.align	2
 1123              	.L49:
 1124 0040 D27EFA3D 		.word	1039826642
 1125 0044 AC7F8A41 		.word	1099595692
 1126 0048 0080BBC4 		.word	-994344960
 1127              		.cfi_endproc
 1128              	.LFE70:
 1129              		.size	ftom, .-ftom
 1130              		.global	__aeabi_fsub
 1131              		.global	__aeabi_fadd
 1132              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
 1133              		.align	2
 1134              		.global	LEAF_interpolation_linear
 1135              		.thumb
 1136              		.thumb_func
 1137              		.type	LEAF_interpolation_linear, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 28


 1138              	LEAF_interpolation_linear:
 1139              	.LFB71:
 392:main.c        **** 
 393:main.c        **** // alpha, [0.0, 1.0]
 394:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 395:main.c        **** {
 1140              		.loc 1 395 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 24
 1143              		@ frame_needed = 1, uses_anonymous_args = 0
 1144 0000 80B5     		push	{r7, lr}
 1145              		.cfi_def_cfa_offset 8
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
 1148 0002 86B0     		sub	sp, sp, #24
 1149              		.cfi_def_cfa_offset 32
 1150 0004 00AF     		add	r7, sp, #0
 1151              		.cfi_def_cfa_register 7
 1152 0006 F860     		str	r0, [r7, #12]	@ float
 1153 0008 B960     		str	r1, [r7, #8]	@ float
 1154 000a 7A60     		str	r2, [r7, #4]	@ float
 396:main.c        ****     float omAlpha = 1.0f - alpha;
 1155              		.loc 1 396 0
 1156 000c 7968     		ldr	r1, [r7, #4]	@ float
 1157 000e 4FF07E50 		mov	r0, #1065353216
 1158 0012 FFF7FEFF 		bl	__aeabi_fsub
 1159 0016 0346     		mov	r3, r0
 1160 0018 7B61     		str	r3, [r7, #20]	@ float
 397:main.c        ****     
 398:main.c        ****     // First 1/2 of interpolation
 399:main.c        ****     float out = A * omAlpha;
 1161              		.loc 1 399 0
 1162 001a 7969     		ldr	r1, [r7, #20]	@ float
 1163 001c F868     		ldr	r0, [r7, #12]	@ float
 1164 001e FFF7FEFF 		bl	__aeabi_fmul
 1165 0022 0346     		mov	r3, r0
 1166 0024 3B61     		str	r3, [r7, #16]	@ float
 400:main.c        ****     
 401:main.c        ****     out += B * alpha;
 1167              		.loc 1 401 0
 1168 0026 7968     		ldr	r1, [r7, #4]	@ float
 1169 0028 B868     		ldr	r0, [r7, #8]	@ float
 1170 002a FFF7FEFF 		bl	__aeabi_fmul
 1171 002e 0346     		mov	r3, r0
 1172 0030 1946     		mov	r1, r3
 1173 0032 3869     		ldr	r0, [r7, #16]	@ float
 1174 0034 FFF7FEFF 		bl	__aeabi_fadd
 1175 0038 0346     		mov	r3, r0
 1176 003a 3B61     		str	r3, [r7, #16]	@ float
 402:main.c        ****     
 403:main.c        ****     return out;
 1177              		.loc 1 403 0
 1178 003c 3B69     		ldr	r3, [r7, #16]	@ float
 404:main.c        **** }
 1179              		.loc 1 404 0
 1180 003e 1846     		mov	r0, r3
 1181 0040 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 29


 1182              		.cfi_def_cfa_offset 8
 1183 0042 BD46     		mov	sp, r7
 1184              		.cfi_def_cfa_register 13
 1185              		@ sp needed
 1186 0044 80BD     		pop	{r7, pc}
 1187              		.cfi_endproc
 1188              	.LFE71:
 1189              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1190              		.comm	I2Cbuff1,256,4
 1191              		.comm	I2Cbuff2,16,4
 1192              		.global	send_it
 1193 0046 00BF     		.bss
 1194              		.type	send_it, %object
 1195              		.size	send_it, 1
 1196              	send_it:
 1197 007c 00       		.space	1
 1198              		.global	mux_states
 1199              		.data
 1200 000e 0000     		.align	2
 1201              		.type	mux_states, %object
 1202              		.size	mux_states, 24
 1203              	mux_states:
 1204 0010 05       		.byte	5
 1205 0011 00       		.byte	0
 1206 0012 05       		.byte	5
 1207 0013 01       		.byte	1
 1208 0014 05       		.byte	5
 1209 0015 02       		.byte	2
 1210 0016 05       		.byte	5
 1211 0017 03       		.byte	3
 1212 0018 05       		.byte	5
 1213 0019 04       		.byte	4
 1214 001a 00       		.byte	0
 1215 001b 00       		.byte	0
 1216 001c 01       		.byte	1
 1217 001d 00       		.byte	0
 1218 001e 03       		.byte	3
 1219 001f 00       		.byte	0
 1220 0020 04       		.byte	4
 1221 0021 00       		.byte	0
 1222 0022 02       		.byte	2
 1223 0023 00       		.byte	0
 1224 0024 05       		.byte	5
 1225 0025 05       		.byte	5
 1226 0026 06       		.byte	6
 1227 0027 00       		.byte	0
 1228              		.global	i2c_skipped
 1229              		.bss
 1230 007d 000000   		.align	2
 1231              		.type	i2c_skipped, %object
 1232              		.size	i2c_skipped, 12
 1233              	i2c_skipped:
 1234 0080 00000000 		.space	12
 1234      00000000 
 1234      00000000 
 1235              		.global	pedals_low
 1236              		.data
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 30


 1237              		.align	2
 1238              		.type	pedals_low, %object
 1239              		.size	pedals_low, 20
 1240              	pedals_low:
 1241 0028 830A     		.short	2691
 1242 002a 0109     		.short	2305
 1243 002c 9909     		.short	2457
 1244 002e 0E02     		.short	526
 1245 0030 9A0E     		.short	3738
 1246 0032 0309     		.short	2307
 1247 0034 C60B     		.short	3014
 1248 0036 8E08     		.short	2190
 1249 0038 E90A     		.short	2793
 1250 003a 2605     		.short	1318
 1251              		.global	pedals_high
 1252              		.align	2
 1253              		.type	pedals_high, %object
 1254              		.size	pedals_high, 20
 1255              	pedals_high:
 1256 003c ED0A     		.short	2797
 1257 003e 6509     		.short	2405
 1258 0040 140A     		.short	2580
 1259 0042 8702     		.short	647
 1260 0044 0E0F     		.short	3854
 1261 0046 9D09     		.short	2461
 1262 0048 450C     		.short	3141
 1263 004a 3109     		.short	2353
 1264 004c 760B     		.short	2934
 1265 004e E005     		.short	1504
 1266              		.global	pedals_lowWithDeadZone
 1267              		.align	2
 1268              		.type	pedals_lowWithDeadZone, %object
 1269              		.size	pedals_lowWithDeadZone, 20
 1270              	pedals_lowWithDeadZone:
 1271 0050 830A     		.short	2691
 1272 0052 0109     		.short	2305
 1273 0054 9909     		.short	2457
 1274 0056 0E02     		.short	526
 1275 0058 9A0E     		.short	3738
 1276 005a 0309     		.short	2307
 1277 005c C60B     		.short	3014
 1278 005e 8E08     		.short	2190
 1279 0060 E90A     		.short	2793
 1280 0062 2605     		.short	1318
 1281              		.global	pedals_highWithDeadZone
 1282              		.align	2
 1283              		.type	pedals_highWithDeadZone, %object
 1284              		.size	pedals_highWithDeadZone, 20
 1285              	pedals_highWithDeadZone:
 1286 0064 ED0A     		.short	2797
 1287 0066 6509     		.short	2405
 1288 0068 140A     		.short	2580
 1289 006a 8702     		.short	647
 1290 006c 0E0F     		.short	3854
 1291 006e 9D09     		.short	2461
 1292 0070 450C     		.short	3141
 1293 0072 3109     		.short	2353
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 31


 1294 0074 760B     		.short	2934
 1295 0076 E005     		.short	1504
 1296              		.global	deadzone
 1297              		.align	1
 1298              		.type	deadzone, %object
 1299              		.size	deadzone, 2
 1300              	deadzone:
 1301 0078 9600     		.short	150
 1302              		.global	volumePedal
 1303              		.align	1
 1304              		.type	volumePedal, %object
 1305              		.size	volumePedal, 2
 1306              	volumePedal:
 1307 007a FF0F     		.short	4095
 1308              		.comm	processed_pedals,20,4
 1309              		.comm	prev_processed_pedals,20,4
 1310              		.comm	pedals8bit,10,4
 1311              		.comm	pedals7bit,10,4
 1312              		.comm	prevPedals7bit,10,4
 1313              		.comm	prev_processed_volumePedal,2,2
 1314              		.comm	processed_volumePedal,2,2
 1315              		.comm	fretMeasurements,48,4
 1316              		.global	currentPresetSelection
 1317              		.bss
 1318              		.align	2
 1319              		.type	currentPresetSelection, %object
 1320              		.size	currentPresetSelection, 4
 1321              	currentPresetSelection:
 1322 008c 00000000 		.space	4
 1323              		.comm	presetNamesArray,896,4
 1324              		.global	presetNumberToLoad
 1325              		.type	presetNumberToLoad, %object
 1326              		.size	presetNumberToLoad, 1
 1327              	presetNumberToLoad:
 1328 0090 00       		.space	1
 1329              		.global	presetLoadedResponse
 1330              		.data
 1331              		.align	2
 1332              		.type	presetLoadedResponse, %object
 1333              		.size	presetLoadedResponse, 2
 1334              	presetLoadedResponse:
 1335 007c FF       		.byte	-1
 1336 007d 00       		.byte	0
 1337              		.comm	macroNamesArray,7168,4
 1338              		.global	fretScaling
 1339 007e 0000     		.align	2
 1340              		.type	fretScaling, %object
 1341              		.size	fretScaling, 48
 1342              	fretScaling:
 1343 0080 0000803F 		.word	1065353216
 1344 0084 BAA1713F 		.word	1064411578
 1345 0088 F644573F 		.word	1062683894
 1346 008c 8EC83F3F 		.word	1061144718
 1347 0090 0ADC2A3F 		.word	1059773450
 1348 0094 F837183F 		.word	1058551800
 1349 0098 0000003F 		.word	1056964608
 1350 009c F644D73E 		.word	1054295286
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 32


 1351 00a0 8EC8BF3E 		.word	1052756110
 1352 00a4 0ADCAA3E 		.word	1051384842
 1353 00a8 F837983E 		.word	1050163192
 1354 00ac 0000803E 		.word	1048576000
 1355              		.comm	pedalRatios,40,4
 1356              		.global	last_mux
 1357              		.type	last_mux, %object
 1358              		.size	last_mux, 1
 1359              	last_mux:
 1360 00b0 01       		.byte	1
 1361              		.global	main_counter
 1362              		.bss
 1363              		.type	main_counter, %object
 1364              		.size	main_counter, 1
 1365              	main_counter:
 1366 0091 00       		.space	1
 1367              		.global	neck
 1368              		.type	neck, %object
 1369              		.size	neck, 1
 1370              	neck:
 1371 0092 00       		.space	1
 1372              		.global	dualSlider
 1373              		.type	dualSlider, %object
 1374              		.size	dualSlider, 1
 1375              	dualSlider:
 1376 0093 00       		.space	1
 1377              		.global	shiftUp
 1378              		.data
 1379              		.type	shiftUp, %object
 1380              		.size	shiftUp, 1
 1381              	shiftUp:
 1382 00b1 01       		.byte	1
 1383              		.global	voice
 1384              		.bss
 1385              		.type	voice, %object
 1386              		.size	voice, 1
 1387              	voice:
 1388 0094 00       		.space	1
 1389              		.global	editUp
 1390              		.data
 1391              		.type	editUp, %object
 1392              		.size	editUp, 1
 1393              	editUp:
 1394 00b2 01       		.byte	1
 1395              		.global	oct1Up
 1396              		.type	oct1Up, %object
 1397              		.size	oct1Up, 1
 1398              	oct1Up:
 1399 00b3 01       		.byte	1
 1400              		.global	oct4Up
 1401              		.type	oct4Up, %object
 1402              		.size	oct4Up, 1
 1403              	oct4Up:
 1404 00b4 01       		.byte	1
 1405              		.global	encoderUp
 1406              		.type	encoderUp, %object
 1407              		.size	encoderUp, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 33


 1408              	encoderUp:
 1409 00b5 01       		.byte	1
 1410              		.comm	encoderVal,16,4
 1411              		.global	encoderNum
 1412              		.bss
 1413 0095 000000   		.align	2
 1414              		.type	encoderNum, %object
 1415              		.size	encoderNum, 4
 1416              	encoderNum:
 1417 0098 00000000 		.space	4
 1418              		.global	button1Up
 1419              		.type	button1Up, %object
 1420              		.size	button1Up, 1
 1421              	button1Up:
 1422 009c 00       		.space	1
 1423              		.global	button2Up
 1424              		.type	button2Up, %object
 1425              		.size	button2Up, 1
 1426              	button2Up:
 1427 009d 00       		.space	1
 1428              		.global	button3Up
 1429              		.type	button3Up, %object
 1430              		.size	button3Up, 1
 1431              	button3Up:
 1432 009e 00       		.space	1
 1433              		.global	button4Up
 1434              		.type	button4Up, %object
 1435              		.size	button4Up, 1
 1436              	button4Up:
 1437 009f 00       		.space	1
 1438              		.global	patchNum
 1439              		.type	patchNum, %object
 1440              		.size	patchNum, 1
 1441              	patchNum:
 1442 00a0 00       		.space	1
 1443              		.global	pedal_inverted
 1444 00a1 000000   		.align	2
 1445              		.type	pedal_inverted, %object
 1446              		.size	pedal_inverted, 10
 1447              	pedal_inverted:
 1448 00a4 00000000 		.space	10
 1448      00000000 
 1448      0000
 1449              		.comm	copedent,3696,4
 1450              		.comm	copedentNamesArray,98,4
 1451              		.comm	prevStringPitchBend,48,4
 1452              		.comm	pedals,480,4
 1453              		.global	pedal_cc_assignments
 1454              		.data
 1455 00b6 0000     		.align	2
 1456              		.type	pedal_cc_assignments, %object
 1457              		.size	pedal_cc_assignments, 10
 1458              	pedal_cc_assignments:
 1459 00b8 00       		.byte	0
 1460 00b9 01       		.byte	1
 1461 00ba 02       		.byte	2
 1462 00bb 03       		.byte	3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 34


 1463 00bc 04       		.byte	4
 1464 00bd 08       		.byte	8
 1465 00be 09       		.byte	9
 1466 00bf 07       		.byte	7
 1467 00c0 06       		.byte	6
 1468 00c1 05       		.byte	5
 1469              		.comm	openStringFrequencies,48,4
 1470              		.comm	stringMappedPositions,48,4
 1471              		.comm	invStringMappedPositions,48,4
 1472              		.comm	stringFrequencies,48,4
 1473              		.comm	stringOctave,48,4
 1474              		.comm	stringPitch,48,4
 1475              		.comm	stringMIDI,48,4
 1476              		.comm	openStringMIDI_Int,48,4
 1477              		.global	OLEDcount
 1478              		.bss
 1479 00ae 0000     		.align	2
 1480              		.type	OLEDcount, %object
 1481              		.size	OLEDcount, 4
 1482              	OLEDcount:
 1483 00b0 00000000 		.space	4
 1484              		.global	mainOLEDWaitingToSend
 1485              		.align	2
 1486              		.type	mainOLEDWaitingToSend, %object
 1487              		.size	mainOLEDWaitingToSend, 4
 1488              	mainOLEDWaitingToSend:
 1489 00b4 00000000 		.space	4
 1490              		.global	macroOLEDWaitingToSend
 1491              		.align	2
 1492              		.type	macroOLEDWaitingToSend, %object
 1493              		.size	macroOLEDWaitingToSend, 4
 1494              	macroOLEDWaitingToSend:
 1495 00b8 00000000 		.space	4
 1496              		.comm	presetAlreadyDisplayed,256,4
 1497              		.global	pedals_float
 1498              		.align	2
 1499              		.type	pedals_float, %object
 1500              		.size	pedals_float, 40
 1501              	pedals_float:
 1502 00bc 00000000 		.space	40
 1502      00000000 
 1502      00000000 
 1502      00000000 
 1502      00000000 
 1503              		.global	__aeabi_fdiv
 1504              		.section	.text.map,"ax",%progbits
 1505              		.align	2
 1506              		.global	map
 1507              		.thumb
 1508              		.thumb_func
 1509              		.type	map, %function
 1510              	map:
 1511              	.LFB72:
 405:main.c        **** 
 406:main.c        **** 
 407:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 408:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 35


 409:main.c        **** void USB_service(void);
 410:main.c        **** 
 411:main.c        **** volatile uint8_t I2Cbuff1[256];
 412:main.c        **** volatile uint8_t I2Cbuff2[16];
 413:main.c        **** volatile uint8_t send_it = 0;
 414:main.c        **** 
 415:main.c        **** 
 416:main.c        **** //first mux, 0x70 is first element of array. 
 417:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 418:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 419:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 420:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 421:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,0,0,0,0,0}; //so that pedals and levers can be marked as s
 422:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 423:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 424:main.c        **** uint16_t pedals_lowWithDeadZone[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 425:main.c        **** uint16_t pedals_highWithDeadZone[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 426:main.c        **** uint16_t deadzone = 150;
 427:main.c        **** uint16_t volumePedal = 4095;
 428:main.c        **** uint16_t processed_pedals[10];
 429:main.c        **** uint16_t prev_processed_pedals[10];
 430:main.c        **** uint8_t pedals8bit[10];
 431:main.c        **** uint8_t pedals7bit[10];
 432:main.c        **** uint8_t prevPedals7bit[10];
 433:main.c        **** int16_t prev_processed_volumePedal;
 434:main.c        **** int16_t processed_volumePedal;
 435:main.c        **** 
 436:main.c        **** 
 437:main.c        **** uint16_t fretMeasurements[NUM_SLIDERS][NUM_FRET_MEASUREMENTS];
 438:main.c        **** 
 439:main.c        **** #define NUM_MACROS 8
 440:main.c        **** #define MAX_NUM_PRESETS 64
 441:main.c        **** int currentPresetSelection = 0;
 442:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 443:main.c        **** uint8_t presetNumberToLoad = 0;
 444:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 445:main.c        **** 
 446:main.c        **** 
 447:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS][NAME_LENGTH_IN_BYTES];
 448:main.c        **** 
 449:main.c        **** 
 450:main.c        **** 
 451:main.c        **** //frets 0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24
 452:main.c        **** float fretScaling[NUM_FRET_MEASUREMENTS] = {1.0f, 0.943874f, 0.840896f, 0.749154f, 0.66742f, 0.5946
 453:main.c        **** 
 454:main.c        **** 
 455:main.c        **** #define MAX_ENCODERS 16
 456:main.c        **** 
 457:main.c        **** float pedalRatios[10];
 458:main.c        **** uint8_t last_mux = 1;
 459:main.c        **** volatile uint8_t main_counter = 0;
 460:main.c        **** uint8_t neck = 0;
 461:main.c        **** uint8_t dualSlider = 0;
 462:main.c        **** uint8_t shiftUp = 1;
 463:main.c        **** uint8_t voice = 0;
 464:main.c        **** uint8_t editUp = 1;
 465:main.c        **** uint8_t oct1Up = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 36


 466:main.c        **** uint8_t oct4Up = 1;
 467:main.c        **** uint8_t encoderUp = 1;
 468:main.c        **** 
 469:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 470:main.c        **** int encoderNum = 0;
 471:main.c        **** uint8_t button1Up = 0;
 472:main.c        **** uint8_t button2Up = 0;
 473:main.c        **** uint8_t button3Up = 0;
 474:main.c        **** uint8_t button4Up = 0;
 475:main.c        **** uint8_t patchNum = 0;
 476:main.c        **** #define NUM_STRINGS 12
 477:main.c        **** #define NUM_PEDALS 10
 478:main.c        **** uint8_t pedal_inverted[NUM_PEDALS] = {0,0,0,0,0,0,0,0,0,0};
 479:main.c        **** 
 480:main.c        **** #define MAX_NUM_COPEDENTS 7
 481:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 482:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 483:main.c        **** 
 484:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 485:main.c        **** 
 486:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 487:main.c        **** 
 488:main.c        **** uint8_t pedal_cc_assignments[NUM_PEDALS] = {0, 1, 2, 3, 4, 8, 9, 7, 6, 5};
 489:main.c        **** float openStringFrequencies[NUM_STRINGS];
 490:main.c        **** float stringMappedPositions[NUM_STRINGS];
 491:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 492:main.c        **** float stringFrequencies[NUM_STRINGS];
 493:main.c        **** float stringOctave[NUM_STRINGS];
 494:main.c        **** float stringPitch[NUM_STRINGS];
 495:main.c        **** float stringMIDI[NUM_STRINGS];
 496:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 497:main.c        **** int OLEDcount = 0;
 498:main.c        **** 
 499:main.c        **** int mainOLEDWaitingToSend = 0;
 500:main.c        **** int macroOLEDWaitingToSend = 0;
 501:main.c        **** 
 502:main.c        **** int presetAlreadyDisplayed[MAX_NUM_PRESETS];
 503:main.c        **** 
 504:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 505:main.c        **** 
 506:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 507:main.c        **** {
 1512              		.loc 1 507 0
 1513              		.cfi_startproc
 1514              		@ args = 4, pretend = 0, frame = 16
 1515              		@ frame_needed = 1, uses_anonymous_args = 0
 1516 0000 B0B5     		push	{r4, r5, r7, lr}
 1517              		.cfi_def_cfa_offset 16
 1518              		.cfi_offset 4, -16
 1519              		.cfi_offset 5, -12
 1520              		.cfi_offset 7, -8
 1521              		.cfi_offset 14, -4
 1522 0002 84B0     		sub	sp, sp, #16
 1523              		.cfi_def_cfa_offset 32
 1524 0004 00AF     		add	r7, sp, #0
 1525              		.cfi_def_cfa_register 7
 1526 0006 F860     		str	r0, [r7, #12]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 37


 1527 0008 B960     		str	r1, [r7, #8]	@ float
 1528 000a 7A60     		str	r2, [r7, #4]	@ float
 1529 000c 3B60     		str	r3, [r7]	@ float
 508:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1530              		.loc 1 508 0
 1531 000e 3968     		ldr	r1, [r7]	@ float
 1532 0010 386A     		ldr	r0, [r7, #32]	@ float
 1533 0012 FFF7FEFF 		bl	__aeabi_fsub
 1534 0016 0346     		mov	r3, r0
 1535 0018 1C46     		mov	r4, r3
 1536 001a B968     		ldr	r1, [r7, #8]	@ float
 1537 001c F868     		ldr	r0, [r7, #12]	@ float
 1538 001e FFF7FEFF 		bl	__aeabi_fsub
 1539 0022 0346     		mov	r3, r0
 1540 0024 1D46     		mov	r5, r3
 1541 0026 B968     		ldr	r1, [r7, #8]	@ float
 1542 0028 7868     		ldr	r0, [r7, #4]	@ float
 1543 002a FFF7FEFF 		bl	__aeabi_fsub
 1544 002e 0346     		mov	r3, r0
 1545 0030 1946     		mov	r1, r3
 1546 0032 2846     		mov	r0, r5
 1547 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1548 0038 0346     		mov	r3, r0
 1549 003a 1946     		mov	r1, r3
 1550 003c 2046     		mov	r0, r4
 1551 003e FFF7FEFF 		bl	__aeabi_fmul
 1552 0042 0346     		mov	r3, r0
 1553 0044 3968     		ldr	r1, [r7]	@ float
 1554 0046 1846     		mov	r0, r3
 1555 0048 FFF7FEFF 		bl	__aeabi_fadd
 1556 004c 0346     		mov	r3, r0
 509:main.c        **** }
 1557              		.loc 1 509 0
 1558 004e 1846     		mov	r0, r3
 1559 0050 1037     		adds	r7, r7, #16
 1560              		.cfi_def_cfa_offset 16
 1561 0052 BD46     		mov	sp, r7
 1562              		.cfi_def_cfa_register 13
 1563              		@ sp needed
 1564 0054 B0BD     		pop	{r4, r5, r7, pc}
 1565              		.cfi_endproc
 1566              	.LFE72:
 1567              		.size	map, .-map
 1568              		.global	currentNeck
 1569 0056 00BF     		.bss
 1570              		.align	2
 1571              		.type	currentNeck, %object
 1572              		.size	currentNeck, 4
 1573              	currentNeck:
 1574 00e4 00000000 		.space	4
 1575              		.global	neckByte
 1576              		.type	neckByte, %object
 1577              		.size	neckByte, 1
 1578              	neckByte:
 1579 00e8 00       		.space	1
 1580              		.global	editMode
 1581 00e9 000000   		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 38


 1582              		.type	editMode, %object
 1583              		.size	editMode, 4
 1584              	editMode:
 1585 00ec 00000000 		.space	4
 1586              		.global	leverCalibrationMode
 1587              		.align	2
 1588              		.type	leverCalibrationMode, %object
 1589              		.size	leverCalibrationMode, 4
 1590              	leverCalibrationMode:
 1591 00f0 00000000 		.space	4
 1592              		.global	fretCalibrationMode
 1593              		.align	2
 1594              		.type	fretCalibrationMode, %object
 1595              		.size	fretCalibrationMode, 4
 1596              	fretCalibrationMode:
 1597 00f4 00000000 		.space	4
 1598              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1599              		.align	2
 1600              		.global	burnInitialPedalZeroPositions
 1601              		.thumb
 1602              		.thumb_func
 1603              		.type	burnInitialPedalZeroPositions, %function
 1604              	burnInitialPedalZeroPositions:
 1605              	.LFB73:
 510:main.c        **** void displayCurrentPresetNameAndCopedent();
 511:main.c        **** 
 512:main.c        **** int currentNeck = 0;
 513:main.c        **** uint8_t neckByte = 0;
 514:main.c        **** 
 515:main.c        **** int editMode = 0;
 516:main.c        **** int leverCalibrationMode = 0;
 517:main.c        **** int fretCalibrationMode = 0;
 518:main.c        **** 
 519:main.c        **** void burnInitialPedalZeroPositions()
 520:main.c        **** {
 1606              		.loc 1 520 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 1, uses_anonymous_args = 0
 1610              		@ link register save eliminated.
 1611 0000 80B4     		push	{r7}
 1612              		.cfi_def_cfa_offset 4
 1613              		.cfi_offset 7, -4
 1614 0002 00AF     		add	r7, sp, #0
 1615              		.cfi_def_cfa_register 7
 521:main.c        ****     
 522:main.c        **** }
 1616              		.loc 1 522 0
 1617 0004 00BF     		nop
 1618 0006 BD46     		mov	sp, r7
 1619              		.cfi_def_cfa_register 13
 1620              		@ sp needed
 1621 0008 80BC     		pop	{r7}
 1622              		.cfi_restore 7
 1623              		.cfi_def_cfa_offset 0
 1624 000a 7047     		bx	lr
 1625              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 39


 1626              	.LFE73:
 1627              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1628              		.comm	stringScaling,4,4
 1629              		.comm	stringOffset,4,4
 1630              		.global	__aeabi_ui2f
 1631              		.global	__aeabi_f2uiz
 1632              		.global	__aeabi_i2f
 1633              		.section	.text.calculatePedalRatios,"ax",%progbits
 1634              		.align	2
 1635              		.global	calculatePedalRatios
 1636              		.thumb
 1637              		.thumb_func
 1638              		.type	calculatePedalRatios, %function
 1639              	calculatePedalRatios:
 1640              	.LFB74:
 523:main.c        **** 
 524:main.c        **** float stringScaling;
 525:main.c        **** float stringOffset;
 526:main.c        **** 
 527:main.c        **** 
 528:main.c        **** 
 529:main.c        **** void calculatePedalRatios()
 530:main.c        **** {
 1641              		.loc 1 530 0
 1642              		.cfi_startproc
 1643              		@ args = 0, pretend = 0, frame = 8
 1644              		@ frame_needed = 1, uses_anonymous_args = 0
 1645 0000 90B5     		push	{r4, r7, lr}
 1646              		.cfi_def_cfa_offset 12
 1647              		.cfi_offset 4, -12
 1648              		.cfi_offset 7, -8
 1649              		.cfi_offset 14, -4
 1650 0002 83B0     		sub	sp, sp, #12
 1651              		.cfi_def_cfa_offset 24
 1652 0004 00AF     		add	r7, sp, #0
 1653              		.cfi_def_cfa_register 7
 1654              	.LBB3:
 531:main.c        **** 
 532:main.c        ****     //add deadzones on edges of pedal sensing
 533:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1655              		.loc 1 533 0
 1656 0006 0023     		movs	r3, #0
 1657 0008 7B60     		str	r3, [r7, #4]
 1658 000a 67E0     		b	.L57
 1659              	.L58:
 1660              	.LBB4:
 534:main.c        ****     {
 535:main.c        **** 
 536:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i]; //temporary diff to calculat
 1661              		.loc 1 536 0 discriminator 3
 1662 000c 374A     		ldr	r2, .L59
 1663 000e 7B68     		ldr	r3, [r7, #4]
 1664 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1665 0014 1846     		mov	r0, r3
 1666 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1667 001a 0446     		mov	r4, r0
 1668 001c 344A     		ldr	r2, .L59+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 40


 1669 001e 7B68     		ldr	r3, [r7, #4]
 1670 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1671 0024 1846     		mov	r0, r3
 1672 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1673 002a 0346     		mov	r3, r0
 1674 002c 1946     		mov	r1, r3
 1675 002e 2046     		mov	r0, r4
 1676 0030 FFF7FEFF 		bl	__aeabi_fsub
 1677 0034 0346     		mov	r3, r0
 1678 0036 3B60     		str	r3, [r7]	@ float
 537:main.c        ****         pedals_lowWithDeadZone[i] = (float)pedals_low[i] + (0.1f * pedalDiff);
 1679              		.loc 1 537 0 discriminator 3
 1680 0038 2D4A     		ldr	r2, .L59+4
 1681 003a 7B68     		ldr	r3, [r7, #4]
 1682 003c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1683 0040 1846     		mov	r0, r3
 1684 0042 FFF7FEFF 		bl	__aeabi_ui2f
 1685 0046 0446     		mov	r4, r0
 1686 0048 2A49     		ldr	r1, .L59+8
 1687 004a 3868     		ldr	r0, [r7]	@ float
 1688 004c FFF7FEFF 		bl	__aeabi_fmul
 1689 0050 0346     		mov	r3, r0
 1690 0052 1946     		mov	r1, r3
 1691 0054 2046     		mov	r0, r4
 1692 0056 FFF7FEFF 		bl	__aeabi_fadd
 1693 005a 0346     		mov	r3, r0
 1694 005c 1846     		mov	r0, r3
 1695 005e FFF7FEFF 		bl	__aeabi_f2uiz
 1696 0062 0346     		mov	r3, r0
 1697 0064 99B2     		uxth	r1, r3
 1698 0066 244A     		ldr	r2, .L59+12
 1699 0068 7B68     		ldr	r3, [r7, #4]
 1700 006a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 538:main.c        ****         pedals_highWithDeadZone[i] =(float)pedals_high[i] - (0.1f * pedalDiff);
 1701              		.loc 1 538 0 discriminator 3
 1702 006e 1F4A     		ldr	r2, .L59
 1703 0070 7B68     		ldr	r3, [r7, #4]
 1704 0072 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1705 0076 1846     		mov	r0, r3
 1706 0078 FFF7FEFF 		bl	__aeabi_ui2f
 1707 007c 0446     		mov	r4, r0
 1708 007e 1D49     		ldr	r1, .L59+8
 1709 0080 3868     		ldr	r0, [r7]	@ float
 1710 0082 FFF7FEFF 		bl	__aeabi_fmul
 1711 0086 0346     		mov	r3, r0
 1712 0088 1946     		mov	r1, r3
 1713 008a 2046     		mov	r0, r4
 1714 008c FFF7FEFF 		bl	__aeabi_fsub
 1715 0090 0346     		mov	r3, r0
 1716 0092 1846     		mov	r0, r3
 1717 0094 FFF7FEFF 		bl	__aeabi_f2uiz
 1718 0098 0346     		mov	r3, r0
 1719 009a 99B2     		uxth	r1, r3
 1720 009c 174A     		ldr	r2, .L59+16
 1721 009e 7B68     		ldr	r3, [r7, #4]
 1722 00a0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 539:main.c        ****         pedalDiff = pedals_highWithDeadZone[i] - pedals_lowWithDeadZone[i]; //final diff to calcula
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 41


 1723              		.loc 1 539 0 discriminator 3
 1724 00a4 154A     		ldr	r2, .L59+16
 1725 00a6 7B68     		ldr	r3, [r7, #4]
 1726 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1727 00ac 1946     		mov	r1, r3
 1728 00ae 124A     		ldr	r2, .L59+12
 1729 00b0 7B68     		ldr	r3, [r7, #4]
 1730 00b2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1731 00b6 CB1A     		subs	r3, r1, r3
 1732 00b8 1846     		mov	r0, r3
 1733 00ba FFF7FEFF 		bl	__aeabi_i2f
 1734 00be 0346     		mov	r3, r0
 1735 00c0 3B60     		str	r3, [r7]	@ float
 540:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1736              		.loc 1 540 0 discriminator 3
 1737 00c2 3968     		ldr	r1, [r7]	@ float
 1738 00c4 0E48     		ldr	r0, .L59+20
 1739 00c6 FFF7FEFF 		bl	__aeabi_fdiv
 1740 00ca 0346     		mov	r3, r0
 1741 00cc 1946     		mov	r1, r3
 1742 00ce 0D4A     		ldr	r2, .L59+24
 1743 00d0 7B68     		ldr	r3, [r7, #4]
 1744 00d2 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1745              	.LBE4:
 533:main.c        ****     {
 1746              		.loc 1 533 0 discriminator 3
 1747 00d6 7B68     		ldr	r3, [r7, #4]
 1748 00d8 0133     		adds	r3, r3, #1
 1749 00da 7B60     		str	r3, [r7, #4]
 1750              	.L57:
 533:main.c        ****     {
 1751              		.loc 1 533 0 is_stmt 0 discriminator 1
 1752 00dc 7B68     		ldr	r3, [r7, #4]
 1753 00de 092B     		cmp	r3, #9
 1754 00e0 94DD     		ble	.L58
 1755              	.LBE3:
 541:main.c        ****     }
 542:main.c        **** }
 1756              		.loc 1 542 0 is_stmt 1
 1757 00e2 00BF     		nop
 1758 00e4 0C37     		adds	r7, r7, #12
 1759              		.cfi_def_cfa_offset 12
 1760 00e6 BD46     		mov	sp, r7
 1761              		.cfi_def_cfa_register 13
 1762              		@ sp needed
 1763 00e8 90BD     		pop	{r4, r7, pc}
 1764              	.L60:
 1765 00ea 00BF     		.align	2
 1766              	.L59:
 1767 00ec 00000000 		.word	pedals_high
 1768 00f0 00000000 		.word	pedals_low
 1769 00f4 CDCCCC3D 		.word	1036831949
 1770 00f8 00000000 		.word	pedals_lowWithDeadZone
 1771 00fc 00000000 		.word	pedals_highWithDeadZone
 1772 0100 00F07F45 		.word	1166012416
 1773 0104 00000000 		.word	pedalRatios
 1774              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 42


 1775              	.LFE74:
 1776              		.size	calculatePedalRatios, .-calculatePedalRatios
 1777              		.section	.rodata
 1778              		.align	2
 1779              	.LC0:
 1780 0400 2000     		.ascii	" \000"
 1781              		.global	__aeabi_f2iz
 1782              		.global	__aeabi_fcmpeq
 1783 0402 0000     		.align	2
 1784              	.LC1:
 1785 0404 4649524D 		.ascii	"FIRMWARE   \000"
 1785      57415245 
 1785      20202000 
 1786              		.align	2
 1787              	.LC2:
 1788 0410 55504441 		.ascii	"UPDATE     \000"
 1788      54452020 
 1788      20202000 
 1789              		.align	2
 1790              	.LC3:
 1791 041c 20202020 		.ascii	"           \000"
 1791      20202020 
 1791      20202000 
 1792              		.section	.text.main,"ax",%progbits
 1793              		.align	2
 1794              		.global	main
 1795              		.thumb
 1796              		.thumb_func
 1797              		.type	main, %function
 1798              	main:
 1799              	.LFB75:
 543:main.c        **** int main(void)
 544:main.c        **** {
 1800              		.loc 1 544 0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 168
 1803              		@ frame_needed = 1, uses_anonymous_args = 0
 1804 0000 B0B5     		push	{r4, r5, r7, lr}
 1805              		.cfi_def_cfa_offset 16
 1806              		.cfi_offset 4, -16
 1807              		.cfi_offset 5, -12
 1808              		.cfi_offset 7, -8
 1809              		.cfi_offset 14, -4
 1810 0002 ACB0     		sub	sp, sp, #176
 1811              		.cfi_def_cfa_offset 192
 1812 0004 02AF     		add	r7, sp, #8
 1813              		.cfi_def_cfa 7, 184
 545:main.c        ****     
 546:main.c        **** 	CYGlobalIntEnable; 
 1814              		.loc 1 546 0
 1815              		.syntax unified
 1816              	@ 546 "main.c" 1
 1817 0006 62B6     		CPSIE   i
 1818              	@ 0 "" 2
 547:main.c        ****     EEPROM_Start();
 1819              		.loc 1 547 0
 1820              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 43


 1821              		.syntax unified
 1822 0008 FFF7FEFF 		bl	EEPROM_Start
 548:main.c        ****      #ifdef BOOTLOAD_STYLE
 549:main.c        ****      //since we sucessfully booted this firmware, set it to be the default until the brain chip get
 550:main.c        ****     Bootloadable_SET_RUN_TYPE(Bootloadable_SCHEDULE_BTLDB);
 551:main.c        ****     #endif
 552:main.c        **** 
 553:main.c        ****     
 554:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 1823              		.loc 1 554 0
 1824 000c 944B     		ldr	r3, .L186
 1825 000e 1846     		mov	r0, r3
 1826 0010 FFF7FEFF 		bl	Em_EEPROM_Init
 1827 0014 0346     		mov	r3, r0
 1828 0016 1A46     		mov	r2, r3
 1829 0018 924B     		ldr	r3, .L186+4
 1830 001a 1A70     		strb	r2, [r3]
 555:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 556:main.c        ****     {
 557:main.c        ****        // HandleError();
 558:main.c        ****     }
 559:main.c        ****     uint8_t myArrayCounter = 0;
 1831              		.loc 1 559 0
 1832 001c 0023     		movs	r3, #0
 1833 001e 87F83730 		strb	r3, [r7, #55]
 560:main.c        ****   
 561:main.c        ****     I2C_1_Start();  
 1834              		.loc 1 561 0
 1835 0022 FFF7FEFF 		bl	I2C_1_Start
 562:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 1836              		.loc 1 562 0
 1837 0026 0120     		movs	r0, #1
 1838 0028 FFF7FEFF 		bl	USB_SetPowerStatus
 563:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 1839              		.loc 1 563 0
 1840 002c 8E48     		ldr	r0, .L186+8
 1841 002e FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 564:main.c        ****     
 565:main.c        **** 
 566:main.c        **** 
 567:main.c        ****     
 568:main.c        ****     CyDelay(1000);
 1842              		.loc 1 568 0
 1843 0032 4FF47A70 		mov	r0, #1000
 1844 0036 FFF7FEFF 		bl	CyDelay
 569:main.c        ****     //read from eeprom which copedents are loaded on which necks
 570:main.c        ****     patchNum = EEPROM_ReadByte(EEPROM_CURRENT_PRESET_OFFSET);
 1845              		.loc 1 570 0
 1846 003a 40F2F270 		movw	r0, #2034
 1847 003e FFF7FEFF 		bl	EEPROM_ReadByte
 1848 0042 0346     		mov	r3, r0
 1849 0044 1A46     		mov	r2, r3
 1850 0046 894B     		ldr	r3, .L186+12
 1851 0048 1A70     		strb	r2, [r3]
 571:main.c        ****     neckByte = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1852              		.loc 1 571 0
 1853 004a 40F2FE70 		movw	r0, #2046
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 44


 1854 004e FFF7FEFF 		bl	EEPROM_ReadByte
 1855 0052 0346     		mov	r3, r0
 1856 0054 1A46     		mov	r2, r3
 1857 0056 864B     		ldr	r3, .L186+16
 1858 0058 1A70     		strb	r2, [r3]
 572:main.c        ****     necks[0] = (neckByte >> 5) & 7;
 1859              		.loc 1 572 0
 1860 005a 854B     		ldr	r3, .L186+16
 1861 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1862 005e 5B09     		lsrs	r3, r3, #5
 1863 0060 DAB2     		uxtb	r2, r3
 1864 0062 844B     		ldr	r3, .L186+20
 1865 0064 1A70     		strb	r2, [r3]
 573:main.c        ****     necks[1] = (neckByte >> 2) & 7;
 1866              		.loc 1 573 0
 1867 0066 824B     		ldr	r3, .L186+16
 1868 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1869 006a 9B08     		lsrs	r3, r3, #2
 1870 006c DBB2     		uxtb	r3, r3
 1871 006e 03F00703 		and	r3, r3, #7
 1872 0072 DAB2     		uxtb	r2, r3
 1873 0074 7F4B     		ldr	r3, .L186+20
 1874 0076 5A70     		strb	r2, [r3, #1]
 574:main.c        ****     currentNeck = neckByte & 1;
 1875              		.loc 1 574 0
 1876 0078 7D4B     		ldr	r3, .L186+16
 1877 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 007c 03F00103 		and	r3, r3, #1
 1879 0080 7D4A     		ldr	r2, .L186+24
 1880 0082 1360     		str	r3, [r2]
 575:main.c        ****     transposeSemitones = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET);
 1881              		.loc 1 575 0
 1882 0084 40F2F470 		movw	r0, #2036
 1883 0088 FFF7FEFF 		bl	EEPROM_ReadByte
 1884 008c 0346     		mov	r3, r0
 1885 008e 5AB2     		sxtb	r2, r3
 1886 0090 7A4B     		ldr	r3, .L186+28
 1887 0092 1A70     		strb	r2, [r3]
 576:main.c        ****     transposeCents = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET + 1);
 1888              		.loc 1 576 0
 1889 0094 40F2F570 		movw	r0, #2037
 1890 0098 FFF7FEFF 		bl	EEPROM_ReadByte
 1891 009c 0346     		mov	r3, r0
 1892 009e 5AB2     		sxtb	r2, r3
 1893 00a0 774B     		ldr	r3, .L186+32
 1894 00a2 1A70     		strb	r2, [r3]
 577:main.c        ****     transposeFloat = ((float)transposeSemitones) + (((float)transposeCents) * 0.01f);
 1895              		.loc 1 577 0
 1896 00a4 754B     		ldr	r3, .L186+28
 1897 00a6 93F90030 		ldrsb	r3, [r3]
 1898 00aa 1846     		mov	r0, r3
 1899 00ac FFF7FEFF 		bl	__aeabi_i2f
 1900 00b0 0446     		mov	r4, r0
 1901 00b2 734B     		ldr	r3, .L186+32
 1902 00b4 93F90030 		ldrsb	r3, [r3]
 1903 00b8 1846     		mov	r0, r3
 1904 00ba FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 45


 1905 00be 0346     		mov	r3, r0
 1906 00c0 7049     		ldr	r1, .L186+36
 1907 00c2 1846     		mov	r0, r3
 1908 00c4 FFF7FEFF 		bl	__aeabi_fmul
 1909 00c8 0346     		mov	r3, r0
 1910 00ca 1946     		mov	r1, r3
 1911 00cc 2046     		mov	r0, r4
 1912 00ce FFF7FEFF 		bl	__aeabi_fadd
 1913 00d2 0346     		mov	r3, r0
 1914 00d4 1A46     		mov	r2, r3
 1915 00d6 6C4B     		ldr	r3, .L186+40
 1916 00d8 1A60     		str	r2, [r3]	@ float
 578:main.c        ****     midiSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&1;
 1917              		.loc 1 578 0
 1918 00da 40F2FA70 		movw	r0, #2042
 1919 00de FFF7FEFF 		bl	EEPROM_ReadByte
 1920 00e2 0346     		mov	r3, r0
 1921 00e4 03F00103 		and	r3, r3, #1
 1922 00e8 DAB2     		uxtb	r2, r3
 1923 00ea 684B     		ldr	r3, .L186+44
 1924 00ec 1A70     		strb	r2, [r3]
 579:main.c        ****     midiBarSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&(1<<1);
 1925              		.loc 1 579 0
 1926 00ee 40F2FA70 		movw	r0, #2042
 1927 00f2 FFF7FEFF 		bl	EEPROM_ReadByte
 1928 00f6 0346     		mov	r3, r0
 1929 00f8 03F00203 		and	r3, r3, #2
 1930 00fc DAB2     		uxtb	r2, r3
 1931 00fe 644B     		ldr	r3, .L186+48
 1932 0100 1A70     		strb	r2, [r3]
 580:main.c        ****     pitchSmoothing = EEPROM_ReadByte(EEPROM_PITCHSMOOTHING_OFFSET);
 1933              		.loc 1 580 0
 1934 0102 4FF4FF60 		mov	r0, #2040
 1935 0106 FFF7FEFF 		bl	EEPROM_ReadByte
 1936 010a 0346     		mov	r3, r0
 1937 010c 1A46     		mov	r2, r3
 1938 010e 614B     		ldr	r3, .L186+52
 1939 0110 1A70     		strb	r2, [r3]
 581:main.c        ****     controlSmoothing = EEPROM_ReadByte(EEPROM_CONTROLSMOOTHING_OFFSET);
 1940              		.loc 1 581 0
 1941 0112 40F2F970 		movw	r0, #2041
 1942 0116 FFF7FEFF 		bl	EEPROM_ReadByte
 1943 011a 0346     		mov	r3, r0
 1944 011c 1A46     		mov	r2, r3
 1945 011e 5E4B     		ldr	r3, .L186+56
 1946 0120 1A70     		strb	r2, [r3]
 582:main.c        ****     deadzones = EEPROM_ReadByte(EEPROM_DEADZONES_OFFSET);
 1947              		.loc 1 582 0
 1948 0122 40F2F770 		movw	r0, #2039
 1949 0126 FFF7FEFF 		bl	EEPROM_ReadByte
 1950 012a 0346     		mov	r3, r0
 1951 012c 1A46     		mov	r2, r3
 1952 012e 5B4B     		ldr	r3, .L186+60
 1953 0130 1A70     		strb	r2, [r3]
 583:main.c        ****     octaveAction = EEPROM_ReadByte(EEPROM_OCTAVE_ACTION_OFFSET);
 1954              		.loc 1 583 0
 1955 0132 40F2F670 		movw	r0, #2038
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 46


 1956 0136 FFF7FEFF 		bl	EEPROM_ReadByte
 1957 013a 0346     		mov	r3, r0
 1958 013c 1A46     		mov	r2, r3
 1959 013e 584B     		ldr	r3, .L186+64
 1960 0140 1A70     		strb	r2, [r3]
 584:main.c        ****     stringRepresentation[0] = (EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET)>>4) & 15; //first 4 bits o
 1961              		.loc 1 584 0
 1962 0142 40F2F370 		movw	r0, #2035
 1963 0146 FFF7FEFF 		bl	EEPROM_ReadByte
 1964 014a 0346     		mov	r3, r0
 1965 014c 1B09     		lsrs	r3, r3, #4
 1966 014e DAB2     		uxtb	r2, r3
 1967 0150 544B     		ldr	r3, .L186+68
 1968 0152 1A70     		strb	r2, [r3]
 585:main.c        ****     stringRepresentation[1] = EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET) & 15;//last 4 bits of the b
 1969              		.loc 1 585 0
 1970 0154 40F2F370 		movw	r0, #2035
 1971 0158 FFF7FEFF 		bl	EEPROM_ReadByte
 1972 015c 0346     		mov	r3, r0
 1973 015e 03F00F03 		and	r3, r3, #15
 1974 0162 DAB2     		uxtb	r2, r3
 1975 0164 4F4B     		ldr	r3, .L186+68
 1976 0166 5A70     		strb	r2, [r3, #1]
 586:main.c        ****     dualSlider = EEPROM_ReadByte(EEPROM_DUAL_SLIDER_OFFSET) & 1;
 1977              		.loc 1 586 0
 1978 0168 40F2FD70 		movw	r0, #2045
 1979 016c FFF7FEFF 		bl	EEPROM_ReadByte
 1980 0170 0346     		mov	r3, r0
 1981 0172 03F00103 		and	r3, r3, #1
 1982 0176 DAB2     		uxtb	r2, r3
 1983 0178 4B4B     		ldr	r3, .L186+72
 1984 017a 1A70     		strb	r2, [r3]
 587:main.c        ****     uint16_t pedal_inverted_byte = (EEPROM_ReadByte(EEPROM_PEDAL_INVERTED_OFFSET) << 8) + EEPROM_Re
 1985              		.loc 1 587 0
 1986 017c 40F2FB70 		movw	r0, #2043
 1987 0180 FFF7FEFF 		bl	EEPROM_ReadByte
 1988 0184 0346     		mov	r3, r0
 1989 0186 9BB2     		uxth	r3, r3
 1990 0188 1B02     		lsls	r3, r3, #8
 1991 018a 9CB2     		uxth	r4, r3
 1992 018c 40F2FC70 		movw	r0, #2044
 1993 0190 FFF7FEFF 		bl	EEPROM_ReadByte
 1994 0194 0346     		mov	r3, r0
 1995 0196 9BB2     		uxth	r3, r3
 1996 0198 2344     		add	r3, r3, r4
 1997 019a BB86     		strh	r3, [r7, #52]	@ movhi
 1998              	.LBB5:
 588:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1999              		.loc 1 588 0
 2000 019c 0023     		movs	r3, #0
 2001 019e C7F8A430 		str	r3, [r7, #164]
 2002 01a2 15E0     		b	.L62
 2003              	.L63:
 589:main.c        ****     {
 590:main.c        ****         pedal_inverted[i] = pedal_inverted_byte & (1<<i);
 2004              		.loc 1 590 0 discriminator 3
 2005 01a4 BB8E     		ldrh	r3, [r7, #52]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 47


 2006 01a6 5AB2     		sxtb	r2, r3
 2007 01a8 0121     		movs	r1, #1
 2008 01aa D7F8A430 		ldr	r3, [r7, #164]
 2009 01ae 01FA03F3 		lsl	r3, r1, r3
 2010 01b2 5BB2     		sxtb	r3, r3
 2011 01b4 1340     		ands	r3, r3, r2
 2012 01b6 5BB2     		sxtb	r3, r3
 2013 01b8 D9B2     		uxtb	r1, r3
 2014 01ba 3C4A     		ldr	r2, .L186+76
 2015 01bc D7F8A430 		ldr	r3, [r7, #164]
 2016 01c0 1344     		add	r3, r3, r2
 2017 01c2 0A46     		mov	r2, r1
 2018 01c4 1A70     		strb	r2, [r3]
 588:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2019              		.loc 1 588 0 discriminator 3
 2020 01c6 D7F8A430 		ldr	r3, [r7, #164]
 2021 01ca 0133     		adds	r3, r3, #1
 2022 01cc C7F8A430 		str	r3, [r7, #164]
 2023              	.L62:
 588:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2024              		.loc 1 588 0 is_stmt 0 discriminator 1
 2025 01d0 D7F8A430 		ldr	r3, [r7, #164]
 2026 01d4 092B     		cmp	r3, #9
 2027 01d6 E5DD     		ble	.L63
 2028              	.LBE5:
 2029              	.LBB6:
 591:main.c        ****     }
 592:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 2030              		.loc 1 592 0 is_stmt 1
 2031 01d8 0023     		movs	r3, #0
 2032 01da C7F8A030 		str	r3, [r7, #160]
 2033 01de E4E0     		b	.L64
 2034              	.L71:
 2035              	.LBB7:
 593:main.c        ****     {
 594:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
 2036              		.loc 1 594 0
 2037 01e0 0023     		movs	r3, #0
 2038 01e2 C7F89C30 		str	r3, [r7, #156]
 2039 01e6 27E0     		b	.L65
 2040              	.L66:
 595:main.c        ****         {
 596:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 2041              		.loc 1 596 0 discriminator 3
 2042 01e8 D7F8A030 		ldr	r3, [r7, #160]
 2043 01ec 9BB2     		uxth	r3, r3
 2044 01ee 1A46     		mov	r2, r3	@ movhi
 2045 01f0 1201     		lsls	r2, r2, #4
 2046 01f2 1A44     		add	r2, r2, r3
 2047 01f4 9200     		lsls	r2, r2, #2
 2048 01f6 1A44     		add	r2, r2, r3
 2049 01f8 5200     		lsls	r2, r2, #1
 2050 01fa 1344     		add	r3, r3, r2
 2051 01fc 5B00     		lsls	r3, r3, #1
 2052 01fe 9AB2     		uxth	r2, r3
 2053 0200 D7F89C30 		ldr	r3, [r7, #156]
 2054 0204 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 48


 2055 0206 1344     		add	r3, r3, r2
 2056 0208 9BB2     		uxth	r3, r3
 2057 020a 1846     		mov	r0, r3
 2058 020c FFF7FEFF 		bl	EEPROM_ReadByte
 2059 0210 0346     		mov	r3, r0
 2060 0212 1846     		mov	r0, r3
 2061 0214 2649     		ldr	r1, .L186+80
 2062 0216 D7F8A020 		ldr	r2, [r7, #160]
 2063 021a 1346     		mov	r3, r2
 2064 021c DB00     		lsls	r3, r3, #3
 2065 021e 9B1A     		subs	r3, r3, r2
 2066 0220 5B00     		lsls	r3, r3, #1
 2067 0222 CA18     		adds	r2, r1, r3
 2068 0224 D7F89C30 		ldr	r3, [r7, #156]
 2069 0228 1344     		add	r3, r3, r2
 2070 022a 0246     		mov	r2, r0
 2071 022c 1A70     		strb	r2, [r3]
 594:main.c        ****         {
 2072              		.loc 1 594 0 discriminator 3
 2073 022e D7F89C30 		ldr	r3, [r7, #156]
 2074 0232 0133     		adds	r3, r3, #1
 2075 0234 C7F89C30 		str	r3, [r7, #156]
 2076              	.L65:
 594:main.c        ****         {
 2077              		.loc 1 594 0 is_stmt 0 discriminator 1
 2078 0238 D7F89C30 		ldr	r3, [r7, #156]
 2079 023c 0D2B     		cmp	r3, #13
 2080 023e D3DD     		ble	.L66
 2081              	.LBE7:
 2082              	.LBB8:
 597:main.c        ****         }
 598:main.c        ****         for (int i = 0; i < 11; i++)
 2083              		.loc 1 598 0 is_stmt 1
 2084 0240 0023     		movs	r3, #0
 2085 0242 C7F89830 		str	r3, [r7, #152]
 2086 0246 A6E0     		b	.L67
 2087              	.L70:
 2088              	.LBB9:
 599:main.c        ****     	{
 600:main.c        ****     		int pedalStartLoc = (i*24);
 2089              		.loc 1 600 0
 2090 0248 D7F89820 		ldr	r2, [r7, #152]
 2091 024c 1346     		mov	r3, r2
 2092 024e 5B00     		lsls	r3, r3, #1
 2093 0250 1344     		add	r3, r3, r2
 2094 0252 DB00     		lsls	r3, r3, #3
 2095 0254 3B63     		str	r3, [r7, #48]
 2096              	.LBB10:
 601:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 2097              		.loc 1 601 0
 2098 0256 0023     		movs	r3, #0
 2099 0258 C7F89430 		str	r3, [r7, #148]
 2100 025c 92E0     		b	.L68
 2101              	.L187:
 2102 025e 00BF     		.align	2
 2103              	.L186:
 2104 0260 00000000 		.word	Em_EEPROM_em_EepromStorage
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 49


 2105 0264 00000000 		.word	eepromReturnValue
 2106 0268 00000000 		.word	Vbus_function
 2107 026c 00000000 		.word	patchNum
 2108 0270 00000000 		.word	neckByte
 2109 0274 00000000 		.word	necks
 2110 0278 00000000 		.word	currentNeck
 2111 027c 00000000 		.word	transposeSemitones
 2112 0280 00000000 		.word	transposeCents
 2113 0284 0AD7233C 		.word	1008981770
 2114 0288 00000000 		.word	transposeFloat
 2115 028c 00000000 		.word	midiSendOn
 2116 0290 00000000 		.word	midiBarSendOn
 2117 0294 00000000 		.word	pitchSmoothing
 2118 0298 00000000 		.word	controlSmoothing
 2119 029c 00000000 		.word	deadzones
 2120 02a0 00000000 		.word	octaveAction
 2121 02a4 00000000 		.word	stringRepresentation
 2122 02a8 00000000 		.word	dualSlider
 2123 02ac 00000000 		.word	pedal_inverted
 2124 02b0 00000000 		.word	copedentNamesArray
 2125              	.L69:
 2126              	.LBB11:
 602:main.c        ****     		{
 603:main.c        ****                 
 604:main.c        ****                 int stringStartLoc = (j*2);
 2127              		.loc 1 604 0 discriminator 3
 2128 02b4 D7F89430 		ldr	r3, [r7, #148]
 2129 02b8 5B00     		lsls	r3, r3, #1
 2130 02ba FB62     		str	r3, [r7, #44]
 605:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 2131              		.loc 1 605 0 discriminator 3
 2132 02bc FB6A     		ldr	r3, [r7, #44]
 2133 02be 9AB2     		uxth	r2, r3
 2134 02c0 3B6B     		ldr	r3, [r7, #48]
 2135 02c2 9BB2     		uxth	r3, r3
 2136 02c4 1344     		add	r3, r3, r2
 2137 02c6 9AB2     		uxth	r2, r3
 2138 02c8 D7F8A030 		ldr	r3, [r7, #160]
 2139 02cc 9BB2     		uxth	r3, r3
 2140 02ce 1946     		mov	r1, r3	@ movhi
 2141 02d0 0901     		lsls	r1, r1, #4
 2142 02d2 1944     		add	r1, r1, r3
 2143 02d4 8900     		lsls	r1, r1, #2
 2144 02d6 1944     		add	r1, r1, r3
 2145 02d8 4900     		lsls	r1, r1, #1
 2146 02da 0B44     		add	r3, r3, r1
 2147 02dc 5B00     		lsls	r3, r3, #1
 2148 02de 9BB2     		uxth	r3, r3
 2149 02e0 1344     		add	r3, r3, r2
 2150 02e2 9BB2     		uxth	r3, r3
 2151 02e4 0E33     		adds	r3, r3, #14
 2152 02e6 9BB2     		uxth	r3, r3
 2153 02e8 1846     		mov	r0, r3
 2154 02ea FFF7FEFF 		bl	EEPROM_ReadByte
 2155 02ee 0346     		mov	r3, r0
 2156 02f0 7B85     		strh	r3, [r7, #42]	@ movhi
 606:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 50


 2157              		.loc 1 606 0 discriminator 3
 2158 02f2 FB6A     		ldr	r3, [r7, #44]
 2159 02f4 9AB2     		uxth	r2, r3
 2160 02f6 3B6B     		ldr	r3, [r7, #48]
 2161 02f8 9BB2     		uxth	r3, r3
 2162 02fa 1344     		add	r3, r3, r2
 2163 02fc 9AB2     		uxth	r2, r3
 2164 02fe D7F8A030 		ldr	r3, [r7, #160]
 2165 0302 9BB2     		uxth	r3, r3
 2166 0304 1946     		mov	r1, r3	@ movhi
 2167 0306 0901     		lsls	r1, r1, #4
 2168 0308 1944     		add	r1, r1, r3
 2169 030a 8900     		lsls	r1, r1, #2
 2170 030c 1944     		add	r1, r1, r3
 2171 030e 4900     		lsls	r1, r1, #1
 2172 0310 0B44     		add	r3, r3, r1
 2173 0312 5B00     		lsls	r3, r3, #1
 2174 0314 9BB2     		uxth	r3, r3
 2175 0316 1344     		add	r3, r3, r2
 2176 0318 9BB2     		uxth	r3, r3
 2177 031a 0F33     		adds	r3, r3, #15
 2178 031c 9BB2     		uxth	r3, r3
 2179 031e 1846     		mov	r0, r3
 2180 0320 FFF7FEFF 		bl	EEPROM_ReadByte
 2181 0324 0346     		mov	r3, r0
 2182 0326 3B85     		strh	r3, [r7, #40]	@ movhi
 607:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 2183              		.loc 1 607 0 discriminator 3
 2184 0328 7B8D     		ldrh	r3, [r7, #42]
 2185 032a 1A02     		lsls	r2, r3, #8
 2186 032c 3B8D     		ldrh	r3, [r7, #40]
 2187 032e 1344     		add	r3, r3, r2
 2188 0330 1846     		mov	r0, r3
 2189 0332 FFF7FEFF 		bl	__aeabi_i2f
 2190 0336 0346     		mov	r3, r0
 2191 0338 4FF06E51 		mov	r1, #998244352
 2192 033c 1846     		mov	r0, r3
 2193 033e FFF7FEFF 		bl	__aeabi_fmul
 2194 0342 0346     		mov	r3, r0
 2195 0344 4FF08641 		mov	r1, #1124073472
 2196 0348 1846     		mov	r0, r3
 2197 034a FFF7FEFF 		bl	__aeabi_fsub
 2198 034e 0346     		mov	r3, r0
 2199 0350 1C46     		mov	r4, r3
 2200 0352 7E48     		ldr	r0, .L188
 2201 0354 D7F89830 		ldr	r3, [r7, #152]
 2202 0358 D7F8A010 		ldr	r1, [r7, #160]
 2203 035c 1A46     		mov	r2, r3
 2204 035e 5200     		lsls	r2, r2, #1
 2205 0360 1A44     		add	r2, r2, r3
 2206 0362 9300     		lsls	r3, r2, #2
 2207 0364 1A46     		mov	r2, r3
 2208 0366 0B46     		mov	r3, r1
 2209 0368 5B01     		lsls	r3, r3, #5
 2210 036a 0B44     		add	r3, r3, r1
 2211 036c 9B00     		lsls	r3, r3, #2
 2212 036e 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 51


 2213 0370 D7F89430 		ldr	r3, [r7, #148]
 2214 0374 1344     		add	r3, r3, r2
 2215 0376 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 2216              	.LBE11:
 601:main.c        ****     		{
 2217              		.loc 1 601 0 discriminator 3
 2218 037a D7F89430 		ldr	r3, [r7, #148]
 2219 037e 0133     		adds	r3, r3, #1
 2220 0380 C7F89430 		str	r3, [r7, #148]
 2221              	.L68:
 601:main.c        ****     		{
 2222              		.loc 1 601 0 is_stmt 0 discriminator 1
 2223 0384 D7F89430 		ldr	r3, [r7, #148]
 2224 0388 0B2B     		cmp	r3, #11
 2225 038a 93DD     		ble	.L69
 2226              	.LBE10:
 2227              	.LBE9:
 598:main.c        ****     	{
 2228              		.loc 1 598 0 is_stmt 1 discriminator 2
 2229 038c D7F89830 		ldr	r3, [r7, #152]
 2230 0390 0133     		adds	r3, r3, #1
 2231 0392 C7F89830 		str	r3, [r7, #152]
 2232              	.L67:
 598:main.c        ****     	{
 2233              		.loc 1 598 0 is_stmt 0 discriminator 1
 2234 0396 D7F89830 		ldr	r3, [r7, #152]
 2235 039a 0A2B     		cmp	r3, #10
 2236 039c 7FF754AF 		ble	.L70
 2237              	.LBE8:
 592:main.c        ****     {
 2238              		.loc 1 592 0 is_stmt 1 discriminator 2
 2239 03a0 D7F8A030 		ldr	r3, [r7, #160]
 2240 03a4 0133     		adds	r3, r3, #1
 2241 03a6 C7F8A030 		str	r3, [r7, #160]
 2242              	.L64:
 592:main.c        ****     {
 2243              		.loc 1 592 0 is_stmt 0 discriminator 1
 2244 03aa D7F8A030 		ldr	r3, [r7, #160]
 2245 03ae 062B     		cmp	r3, #6
 2246 03b0 7FF716AF 		ble	.L71
 2247              	.LBE6:
 2248              	.LBB12:
 608:main.c        ****             }
 609:main.c        ****     	}
 610:main.c        ****     }
 611:main.c        **** 
 612:main.c        ****     
 613:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2249              		.loc 1 613 0 is_stmt 1
 2250 03b4 0023     		movs	r3, #0
 2251 03b6 C7F89030 		str	r3, [r7, #144]
 2252 03ba 49E0     		b	.L72
 2253              	.L73:
 614:main.c        ****     {
 615:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_R
 2254              		.loc 1 615 0 discriminator 3
 2255 03bc D7F89030 		ldr	r3, [r7, #144]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 52


 2256 03c0 9BB2     		uxth	r3, r3
 2257 03c2 9B00     		lsls	r3, r3, #2
 2258 03c4 9BB2     		uxth	r3, r3
 2259 03c6 03F29A73 		addw	r3, r3, #1946
 2260 03ca 9BB2     		uxth	r3, r3
 2261 03cc 1846     		mov	r0, r3
 2262 03ce FFF7FEFF 		bl	EEPROM_ReadByte
 2263 03d2 0346     		mov	r3, r0
 2264 03d4 9BB2     		uxth	r3, r3
 2265 03d6 1B02     		lsls	r3, r3, #8
 2266 03d8 9CB2     		uxth	r4, r3
 2267 03da D7F89030 		ldr	r3, [r7, #144]
 2268 03de 9BB2     		uxth	r3, r3
 2269 03e0 9B00     		lsls	r3, r3, #2
 2270 03e2 9BB2     		uxth	r3, r3
 2271 03e4 03F29B73 		addw	r3, r3, #1947
 2272 03e8 9BB2     		uxth	r3, r3
 2273 03ea 1846     		mov	r0, r3
 2274 03ec FFF7FEFF 		bl	EEPROM_ReadByte
 2275 03f0 0346     		mov	r3, r0
 2276 03f2 9BB2     		uxth	r3, r3
 2277 03f4 2344     		add	r3, r3, r4
 2278 03f6 99B2     		uxth	r1, r3
 2279 03f8 554A     		ldr	r2, .L188+4
 2280 03fa D7F89030 		ldr	r3, [r7, #144]
 2281 03fe 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 616:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (E
 2282              		.loc 1 616 0 discriminator 3
 2283 0402 D7F89030 		ldr	r3, [r7, #144]
 2284 0406 03F2E713 		addw	r3, r3, #487
 2285 040a 9BB2     		uxth	r3, r3
 2286 040c 9B00     		lsls	r3, r3, #2
 2287 040e 9BB2     		uxth	r3, r3
 2288 0410 1846     		mov	r0, r3
 2289 0412 FFF7FEFF 		bl	EEPROM_ReadByte
 2290 0416 0346     		mov	r3, r0
 2291 0418 9BB2     		uxth	r3, r3
 2292 041a 1B02     		lsls	r3, r3, #8
 2293 041c 9CB2     		uxth	r4, r3
 2294 041e D7F89030 		ldr	r3, [r7, #144]
 2295 0422 9BB2     		uxth	r3, r3
 2296 0424 9B00     		lsls	r3, r3, #2
 2297 0426 9BB2     		uxth	r3, r3
 2298 0428 03F29D73 		addw	r3, r3, #1949
 2299 042c 9BB2     		uxth	r3, r3
 2300 042e 1846     		mov	r0, r3
 2301 0430 FFF7FEFF 		bl	EEPROM_ReadByte
 2302 0434 0346     		mov	r3, r0
 2303 0436 9BB2     		uxth	r3, r3
 2304 0438 2344     		add	r3, r3, r4
 2305 043a 99B2     		uxth	r1, r3
 2306 043c 454A     		ldr	r2, .L188+8
 2307 043e D7F89030 		ldr	r3, [r7, #144]
 2308 0442 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 613:main.c        ****     {
 2309              		.loc 1 613 0 discriminator 3
 2310 0446 D7F89030 		ldr	r3, [r7, #144]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 53


 2311 044a 0133     		adds	r3, r3, #1
 2312 044c C7F89030 		str	r3, [r7, #144]
 2313              	.L72:
 613:main.c        ****     {
 2314              		.loc 1 613 0 is_stmt 0 discriminator 1
 2315 0450 D7F89030 		ldr	r3, [r7, #144]
 2316 0454 092B     		cmp	r3, #9
 2317 0456 B1DD     		ble	.L73
 2318              	.LBE12:
 617:main.c        ****     }
 618:main.c        ****     calculatePedalRatios();
 2319              		.loc 1 618 0 is_stmt 1
 2320 0458 FFF7FEFF 		bl	calculatePedalRatios
 2321              	.LBB13:
 619:main.c        ****                 
 620:main.c        ****     
 621:main.c        ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 2322              		.loc 1 621 0
 2323 045c 0023     		movs	r3, #0
 2324 045e C7F88C30 		str	r3, [r7, #140]
 2325 0462 4AE0     		b	.L74
 2326              	.L75:
 622:main.c        ****     {
 623:main.c        ****         fretMeasurements[0][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + (i*4)) << 8) + (
 2327              		.loc 1 623 0 discriminator 3
 2328 0464 D7F88C30 		ldr	r3, [r7, #140]
 2329 0468 9BB2     		uxth	r3, r3
 2330 046a 9B00     		lsls	r3, r3, #2
 2331 046c 9BB2     		uxth	r3, r3
 2332 046e 03F2C273 		addw	r3, r3, #1986
 2333 0472 9BB2     		uxth	r3, r3
 2334 0474 1846     		mov	r0, r3
 2335 0476 FFF7FEFF 		bl	EEPROM_ReadByte
 2336 047a 0346     		mov	r3, r0
 2337 047c 9BB2     		uxth	r3, r3
 2338 047e 1B02     		lsls	r3, r3, #8
 2339 0480 9CB2     		uxth	r4, r3
 2340 0482 D7F88C30 		ldr	r3, [r7, #140]
 2341 0486 9BB2     		uxth	r3, r3
 2342 0488 9B00     		lsls	r3, r3, #2
 2343 048a 9BB2     		uxth	r3, r3
 2344 048c 03F2C373 		addw	r3, r3, #1987
 2345 0490 9BB2     		uxth	r3, r3
 2346 0492 1846     		mov	r0, r3
 2347 0494 FFF7FEFF 		bl	EEPROM_ReadByte
 2348 0498 0346     		mov	r3, r0
 2349 049a 9BB2     		uxth	r3, r3
 2350 049c 2344     		add	r3, r3, r4
 2351 049e 99B2     		uxth	r1, r3
 2352 04a0 2D4A     		ldr	r2, .L188+12
 2353 04a2 D7F88C30 		ldr	r3, [r7, #140]
 2354 04a6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 624:main.c        ****         fretMeasurements[1][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 2)) << 
 2355              		.loc 1 624 0 discriminator 3
 2356 04aa D7F88C30 		ldr	r3, [r7, #140]
 2357 04ae 03F2F113 		addw	r3, r3, #497
 2358 04b2 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 54


 2359 04b4 9B00     		lsls	r3, r3, #2
 2360 04b6 9BB2     		uxth	r3, r3
 2361 04b8 1846     		mov	r0, r3
 2362 04ba FFF7FEFF 		bl	EEPROM_ReadByte
 2363 04be 0346     		mov	r3, r0
 2364 04c0 9BB2     		uxth	r3, r3
 2365 04c2 1B02     		lsls	r3, r3, #8
 2366 04c4 9CB2     		uxth	r4, r3
 2367 04c6 D7F88C30 		ldr	r3, [r7, #140]
 2368 04ca 9BB2     		uxth	r3, r3
 2369 04cc 9B00     		lsls	r3, r3, #2
 2370 04ce 9BB2     		uxth	r3, r3
 2371 04d0 03F2C573 		addw	r3, r3, #1989
 2372 04d4 9BB2     		uxth	r3, r3
 2373 04d6 1846     		mov	r0, r3
 2374 04d8 FFF7FEFF 		bl	EEPROM_ReadByte
 2375 04dc 0346     		mov	r3, r0
 2376 04de 9BB2     		uxth	r3, r3
 2377 04e0 2344     		add	r3, r3, r4
 2378 04e2 99B2     		uxth	r1, r3
 2379 04e4 1C4A     		ldr	r2, .L188+12
 2380 04e6 D7F88C30 		ldr	r3, [r7, #140]
 2381 04ea 0C33     		adds	r3, r3, #12
 2382 04ec 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 621:main.c        ****     {
 2383              		.loc 1 621 0 discriminator 3
 2384 04f0 D7F88C30 		ldr	r3, [r7, #140]
 2385 04f4 0133     		adds	r3, r3, #1
 2386 04f6 C7F88C30 		str	r3, [r7, #140]
 2387              	.L74:
 621:main.c        ****     {
 2388              		.loc 1 621 0 is_stmt 0 discriminator 1
 2389 04fa D7F88C30 		ldr	r3, [r7, #140]
 2390 04fe 0B2B     		cmp	r3, #11
 2391 0500 B0DD     		ble	.L75
 2392              	.LBE13:
 2393              	.LBB14:
 625:main.c        ****     }
 626:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 627:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 2394              		.loc 1 627 0 is_stmt 1
 2395 0502 0023     		movs	r3, #0
 2396 0504 C7F88830 		str	r3, [r7, #136]
 2397 0508 58E0     		b	.L76
 2398              	.L83:
 2399              	.LBB15:
 628:main.c        ****     {
 629:main.c        ****         for (int j = 0; j < NAME_LENGTH_IN_BYTES; j++)
 2400              		.loc 1 629 0
 2401 050a 0023     		movs	r3, #0
 2402 050c C7F88430 		str	r3, [r7, #132]
 2403 0510 11E0     		b	.L77
 2404              	.L78:
 630:main.c        ****         {
 631:main.c        ****             presetNamesArray[i][j] = 255;
 2405              		.loc 1 631 0 discriminator 3
 2406 0512 1249     		ldr	r1, .L188+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 55


 2407 0514 D7F88820 		ldr	r2, [r7, #136]
 2408 0518 1346     		mov	r3, r2
 2409 051a DB00     		lsls	r3, r3, #3
 2410 051c 9B1A     		subs	r3, r3, r2
 2411 051e 5B00     		lsls	r3, r3, #1
 2412 0520 CA18     		adds	r2, r1, r3
 2413 0522 D7F88430 		ldr	r3, [r7, #132]
 2414 0526 1344     		add	r3, r3, r2
 2415 0528 FF22     		movs	r2, #255
 2416 052a 1A70     		strb	r2, [r3]
 629:main.c        ****         {
 2417              		.loc 1 629 0 discriminator 3
 2418 052c D7F88430 		ldr	r3, [r7, #132]
 2419 0530 0133     		adds	r3, r3, #1
 2420 0532 C7F88430 		str	r3, [r7, #132]
 2421              	.L77:
 629:main.c        ****         {
 2422              		.loc 1 629 0 is_stmt 0 discriminator 1
 2423 0536 D7F88430 		ldr	r3, [r7, #132]
 2424 053a 0D2B     		cmp	r3, #13
 2425 053c E9DD     		ble	.L78
 2426              	.LBE15:
 2427              	.LBB16:
 632:main.c        **** 
 633:main.c        ****         }
 634:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 2428              		.loc 1 634 0 is_stmt 1
 2429 053e 0023     		movs	r3, #0
 2430 0540 C7F88030 		str	r3, [r7, #128]
 2431 0544 2BE0     		b	.L79
 2432              	.L82:
 2433              	.LBB17:
 635:main.c        ****         {
 636:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 2434              		.loc 1 636 0
 2435 0546 0023     		movs	r3, #0
 2436 0548 FB67     		str	r3, [r7, #124]
 2437 054a 20E0     		b	.L80
 2438              	.L189:
 2439              		.align	2
 2440              	.L188:
 2441 054c 00000000 		.word	copedent
 2442 0550 00000000 		.word	pedals_low
 2443 0554 00000000 		.word	pedals_high
 2444 0558 00000000 		.word	fretMeasurements
 2445 055c 00000000 		.word	presetNamesArray
 2446              	.L81:
 637:main.c        ****             {
 638:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2447              		.loc 1 638 0 discriminator 3
 2448 0560 9348     		ldr	r0, .L190
 2449 0562 D7F88030 		ldr	r3, [r7, #128]
 2450 0566 D7F88810 		ldr	r1, [r7, #136]
 2451 056a 1A46     		mov	r2, r3
 2452 056c D200     		lsls	r2, r2, #3
 2453 056e D21A     		subs	r2, r2, r3
 2454 0570 5300     		lsls	r3, r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 56


 2455 0572 1A46     		mov	r2, r3
 2456 0574 0B46     		mov	r3, r1
 2457 0576 DB00     		lsls	r3, r3, #3
 2458 0578 5B1A     		subs	r3, r3, r1
 2459 057a 1B01     		lsls	r3, r3, #4
 2460 057c 1344     		add	r3, r3, r2
 2461 057e C218     		adds	r2, r0, r3
 2462 0580 FB6F     		ldr	r3, [r7, #124]
 2463 0582 1344     		add	r3, r3, r2
 2464 0584 FF22     		movs	r2, #255
 2465 0586 1A70     		strb	r2, [r3]
 636:main.c        ****             {
 2466              		.loc 1 636 0 discriminator 3
 2467 0588 FB6F     		ldr	r3, [r7, #124]
 2468 058a 0133     		adds	r3, r3, #1
 2469 058c FB67     		str	r3, [r7, #124]
 2470              	.L80:
 636:main.c        ****             {
 2471              		.loc 1 636 0 is_stmt 0 discriminator 1
 2472 058e FB6F     		ldr	r3, [r7, #124]
 2473 0590 0D2B     		cmp	r3, #13
 2474 0592 E5DD     		ble	.L81
 2475              	.LBE17:
 634:main.c        ****         {
 2476              		.loc 1 634 0 is_stmt 1 discriminator 2
 2477 0594 D7F88030 		ldr	r3, [r7, #128]
 2478 0598 0133     		adds	r3, r3, #1
 2479 059a C7F88030 		str	r3, [r7, #128]
 2480              	.L79:
 634:main.c        ****         {
 2481              		.loc 1 634 0 is_stmt 0 discriminator 1
 2482 059e D7F88030 		ldr	r3, [r7, #128]
 2483 05a2 072B     		cmp	r3, #7
 2484 05a4 CFDD     		ble	.L82
 2485              	.LBE16:
 639:main.c        ****             }
 640:main.c        ****         }
 641:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2486              		.loc 1 641 0 is_stmt 1 discriminator 2
 2487 05a6 834A     		ldr	r2, .L190+4
 2488 05a8 D7F88830 		ldr	r3, [r7, #136]
 2489 05ac 0021     		movs	r1, #0
 2490 05ae 42F82310 		str	r1, [r2, r3, lsl #2]
 627:main.c        ****     {
 2491              		.loc 1 627 0 discriminator 2
 2492 05b2 D7F88830 		ldr	r3, [r7, #136]
 2493 05b6 0133     		adds	r3, r3, #1
 2494 05b8 C7F88830 		str	r3, [r7, #136]
 2495              	.L76:
 627:main.c        ****     {
 2496              		.loc 1 627 0 is_stmt 0 discriminator 1
 2497 05bc D7F88830 		ldr	r3, [r7, #136]
 2498 05c0 3F2B     		cmp	r3, #63
 2499 05c2 A2DD     		ble	.L83
 2500              	.LBE14:
 642:main.c        ****     }
 643:main.c        ****     LED_amber1_Write(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 57


 2501              		.loc 1 643 0 is_stmt 1
 2502 05c4 0020     		movs	r0, #0
 2503 05c6 FFF7FEFF 		bl	LED_amber1_Write
 644:main.c        ****     LED_amber2_Write(1);
 2504              		.loc 1 644 0
 2505 05ca 0120     		movs	r0, #1
 2506 05cc FFF7FEFF 		bl	LED_amber2_Write
 645:main.c        ****     LED_amber3_Write(0);
 2507              		.loc 1 645 0
 2508 05d0 0020     		movs	r0, #0
 2509 05d2 FFF7FEFF 		bl	LED_amber3_Write
 646:main.c        ****     LED_amber4_Write(0);
 2510              		.loc 1 646 0
 2511 05d6 0020     		movs	r0, #0
 2512 05d8 FFF7FEFF 		bl	LED_amber4_Write
 647:main.c        ****     LED_green1_Write(dualSlider);
 2513              		.loc 1 647 0
 2514 05dc 764B     		ldr	r3, .L190+8
 2515 05de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2516 05e0 1846     		mov	r0, r3
 2517 05e2 FFF7FEFF 		bl	LED_green1_Write
 648:main.c        ****     LED_red1_Write(currentNeck);
 2518              		.loc 1 648 0
 2519 05e6 754B     		ldr	r3, .L190+12
 2520 05e8 1B68     		ldr	r3, [r3]
 2521 05ea DBB2     		uxtb	r3, r3
 2522 05ec 1846     		mov	r0, r3
 2523 05ee FFF7FEFF 		bl	LED_red1_Write
 649:main.c        ****     LED_green2_Write(!currentNeck);
 2524              		.loc 1 649 0
 2525 05f2 724B     		ldr	r3, .L190+12
 2526 05f4 1B68     		ldr	r3, [r3]
 2527 05f6 002B     		cmp	r3, #0
 2528 05f8 0CBF     		ite	eq
 2529 05fa 0123     		moveq	r3, #1
 2530 05fc 0023     		movne	r3, #0
 2531 05fe DBB2     		uxtb	r3, r3
 2532 0600 1846     		mov	r0, r3
 2533 0602 FFF7FEFF 		bl	LED_green2_Write
 650:main.c        ****     ADC_SAR_Seq_1_Start();
 2534              		.loc 1 650 0
 2535 0606 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 651:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2536              		.loc 1 651 0
 2537 060a FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 652:main.c        **** 
 653:main.c        ****             
 654:main.c        ****     currentCopedent = necks[currentNeck];
 2538              		.loc 1 654 0
 2539 060e 6B4B     		ldr	r3, .L190+12
 2540 0610 1B68     		ldr	r3, [r3]
 2541 0612 6B4A     		ldr	r2, .L190+16
 2542 0614 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2543 0616 6B4B     		ldr	r3, .L190+20
 2544 0618 1A70     		strb	r2, [r3]
 655:main.c        ****     CyDelay(10);
 2545              		.loc 1 655 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 58


 2546 061a 0A20     		movs	r0, #10
 2547 061c FFF7FEFF 		bl	CyDelay
 656:main.c        ****     
 657:main.c        ****     //set up for the OLED screen's first write
 658:main.c        ****     I2Cbuff1[0] = 1<<6;
 2548              		.loc 1 658 0
 2549 0620 694B     		ldr	r3, .L190+24
 2550 0622 4022     		movs	r2, #64
 2551 0624 1A70     		strb	r2, [r3]
 659:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2552              		.loc 1 659 0
 2553 0626 0022     		movs	r2, #0
 2554 0628 0121     		movs	r1, #1
 2555 062a 7020     		movs	r0, #112
 2556 062c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2557 0630 0346     		mov	r3, r0
 2558 0632 1A46     		mov	r2, r3
 2559 0634 654B     		ldr	r3, .L190+28
 2560 0636 1A60     		str	r2, [r3]
 660:main.c        ****     myGFX_init(128, 64);
 2561              		.loc 1 660 0
 2562 0638 4021     		movs	r1, #64
 2563 063a 8020     		movs	r0, #128
 2564 063c FFF7FEFF 		bl	myGFX_init
 661:main.c        ****     myGFX_setFont(0);
 2565              		.loc 1 661 0
 2566 0640 0020     		movs	r0, #0
 2567 0642 FFF7FEFF 		bl	myGFX_setFont
 662:main.c        ****     OLED_init(128, 64);
 2568              		.loc 1 662 0
 2569 0646 4021     		movs	r1, #64
 2570 0648 8020     		movs	r0, #128
 2571 064a FFF7FEFF 		bl	OLED_init
 663:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2572              		.loc 1 663 0
 2573 064e 5D4B     		ldr	r3, .L190+20
 2574 0650 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2575 0652 1846     		mov	r0, r3
 2576 0654 0323     		movs	r3, #3
 2577 0656 0022     		movs	r2, #0
 2578 0658 0221     		movs	r1, #2
 2579 065a FFF7FEFF 		bl	OLEDwriteInt
 664:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2580              		.loc 1 664 0
 2581 065e FFF7FEFF 		bl	OLEDgetCursor
 2582 0662 0246     		mov	r2, r0
 2583 0664 0323     		movs	r3, #3
 2584 0666 0121     		movs	r1, #1
 2585 0668 5948     		ldr	r0, .L190+32
 2586 066a FFF7FEFF 		bl	OLEDwriteString
 665:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH, 
 2587              		.loc 1 665 0
 2588 066e 554B     		ldr	r3, .L190+20
 2589 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2590 0672 1A46     		mov	r2, r3
 2591 0674 1346     		mov	r3, r2
 2592 0676 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 59


 2593 0678 9B1A     		subs	r3, r3, r2
 2594 067a 5B00     		lsls	r3, r3, #1
 2595 067c 554A     		ldr	r2, .L190+36
 2596 067e 9C18     		adds	r4, r3, r2
 2597 0680 FFF7FEFF 		bl	OLEDgetCursor
 2598 0684 0246     		mov	r2, r0
 2599 0686 0323     		movs	r3, #3
 2600 0688 0A21     		movs	r1, #10
 2601 068a 2046     		mov	r0, r4
 2602 068c FFF7FEFF 		bl	OLEDwriteString
 666:main.c        ****     OLED_draw(128, 64);
 2603              		.loc 1 666 0
 2604 0690 4021     		movs	r1, #64
 2605 0692 8020     		movs	r0, #128
 2606 0694 FFF7FEFF 		bl	OLED_draw
 667:main.c        ****     
 668:main.c        ****     
 669:main.c        ****     I2Cbuff1[0] = 1<<2;
 2607              		.loc 1 669 0
 2608 0698 4B4B     		ldr	r3, .L190+24
 2609 069a 0422     		movs	r2, #4
 2610 069c 1A70     		strb	r2, [r3]
 670:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2611              		.loc 1 670 0
 2612 069e 0022     		movs	r2, #0
 2613 06a0 0121     		movs	r1, #1
 2614 06a2 7020     		movs	r0, #112
 2615 06a4 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2616 06a8 0346     		mov	r3, r0
 2617 06aa 1A46     		mov	r2, r3
 2618 06ac 474B     		ldr	r3, .L190+28
 2619 06ae 1A60     		str	r2, [r3]
 2620              	.LBB18:
 671:main.c        **** 
 672:main.c        ****     for (int w = 0; w < 8; w++)
 2621              		.loc 1 672 0
 2622 06b0 0023     		movs	r3, #0
 2623 06b2 BB67     		str	r3, [r7, #120]
 2624 06b4 15E0     		b	.L84
 2625              	.L85:
 673:main.c        ****     {
 674:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 2626              		.loc 1 674 0 discriminator 3
 2627 06b6 BB6F     		ldr	r3, [r7, #120]
 2628 06b8 DBB2     		uxtb	r3, r3
 2629 06ba 0833     		adds	r3, r3, #8
 2630 06bc DAB2     		uxtb	r2, r3
 2631 06be 424B     		ldr	r3, .L190+24
 2632 06c0 1A70     		strb	r2, [r3]
 675:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2633              		.loc 1 675 0 discriminator 3
 2634 06c2 0022     		movs	r2, #0
 2635 06c4 0121     		movs	r1, #1
 2636 06c6 7220     		movs	r0, #114
 2637 06c8 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2638 06cc 0346     		mov	r3, r0
 2639 06ce 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 60


 2640 06d0 3E4B     		ldr	r3, .L190+28
 2641 06d2 1A60     		str	r2, [r3]
 676:main.c        ****         OLED_init(128, 32);
 2642              		.loc 1 676 0 discriminator 3
 2643 06d4 2021     		movs	r1, #32
 2644 06d6 8020     		movs	r0, #128
 2645 06d8 FFF7FEFF 		bl	OLED_init
 672:main.c        ****     {
 2646              		.loc 1 672 0 discriminator 3
 2647 06dc BB6F     		ldr	r3, [r7, #120]
 2648 06de 0133     		adds	r3, r3, #1
 2649 06e0 BB67     		str	r3, [r7, #120]
 2650              	.L84:
 672:main.c        ****     {
 2651              		.loc 1 672 0 is_stmt 0 discriminator 1
 2652 06e2 BB6F     		ldr	r3, [r7, #120]
 2653 06e4 072B     		cmp	r3, #7
 2654 06e6 E6DD     		ble	.L85
 2655              	.LBE18:
 677:main.c        ****         //OLEDwriteInt(w , 1, 0,FirstLine);
 678:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 679:main.c        ****         //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OL
 680:main.c        ****        // OLED_draw(128, 32);
 681:main.c        ****     }
 682:main.c        **** 
 683:main.c        ****     //initialize the macro knob adc to scan all knobs
 684:main.c        ****     I2Cbuff1[0] = 1<<2;
 2656              		.loc 1 684 0 is_stmt 1
 2657 06e8 374B     		ldr	r3, .L190+24
 2658 06ea 0422     		movs	r2, #4
 2659 06ec 1A70     		strb	r2, [r3]
 685:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2660              		.loc 1 685 0
 2661 06ee 0022     		movs	r2, #0
 2662 06f0 0121     		movs	r1, #1
 2663 06f2 7020     		movs	r0, #112
 2664 06f4 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2665 06f8 0346     		mov	r3, r0
 2666 06fa 1A46     		mov	r2, r3
 2667 06fc 334B     		ldr	r3, .L190+28
 2668 06fe 1A60     		str	r2, [r3]
 686:main.c        ****     main_counter = 9;
 2669              		.loc 1 686 0
 2670 0700 354B     		ldr	r3, .L190+40
 2671 0702 0922     		movs	r2, #9
 2672 0704 1A70     		strb	r2, [r3]
 687:main.c        **** 
 688:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 2673              		.loc 1 688 0
 2674 0706 304B     		ldr	r3, .L190+24
 2675 0708 0F22     		movs	r2, #15
 2676 070a 1A70     		strb	r2, [r3]
 689:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 2677              		.loc 1 689 0
 2678 070c 0022     		movs	r2, #0
 2679 070e 0121     		movs	r1, #1
 2680 0710 3520     		movs	r0, #53
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 61


 2681 0712 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2682 0716 0346     		mov	r3, r0
 2683 0718 1A46     		mov	r2, r3
 2684 071a 2C4B     		ldr	r3, .L190+28
 2685 071c 1A60     		str	r2, [r3]
 690:main.c        ****     
 691:main.c        **** #if 0
 692:main.c        ****     while(1)
 693:main.c        ****     {
 694:main.c        ****         for (int i=  0; i < 4; i++)
 695:main.c        ****         {
 696:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 697:main.c        ****             if (knobs[i] != prevKnobs[i])
 698:main.c        ****             {
 699:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 700:main.c        ****             }
 701:main.c        ****             prevKnobs[i] = knobs[i];
 702:main.c        ****         }
 703:main.c        ****         
 704:main.c        **** 
 705:main.c        ****         I2Cbuff1[0] = 1<<0;
 706:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 707:main.c        **** 
 708:main.c        ****         //CyDelayUs(100);
 709:main.c        ****         I2Cbuff1[0] = 0x0E;
 710:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 711:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 712:main.c        ****        // CyDelayUs(100);
 713:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 714:main.c        ****         angle[0] +=  I2Cbuff2[1];
 715:main.c        ****         
 716:main.c        ****     }
 717:main.c        ****     #endif
 718:main.c        ****     //OLEDclear();
 719:main.c        ****     /*
 720:main.c        ****     while(1)
 721:main.c        ****     {
 722:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 723:main.c        ****         OLED_draw();
 724:main.c        ****         CyDelay(1);
 725:main.c        ****         
 726:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 727:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 728:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 729:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
 730:main.c        ****         for (int i=  0; i < 4; i++)
 731:main.c        ****         {
 732:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 733:main.c        ****         }
 734:main.c        **** 
 735:main.c        ****     }
 736:main.c        ****     */
 737:main.c        **** #if 0
 738:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 739:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 740:main.c        **** 
 741:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 62


 742:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
 743:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 744:main.c        **** 
 745:main.c        ****     //address 0x48
 746:main.c        ****     I2Cbuff1[0] = 0x1;
 747:main.c        ****     I2Cbuff1[1] = 0b11000000;
 748:main.c        ****     I2Cbuff1[2] = 0b10000011;
 749:main.c        **** 
 750:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 751:main.c        ****     #endif
 752:main.c        **** 
 753:main.c        ****     SPIS_1_Start();  
 2686              		.loc 1 753 0
 2687 071e FFF7FEFF 		bl	SPIS_1_Start
 754:main.c        ****     SPIM_1_Start();  
 2688              		.loc 1 754 0
 2689 0722 FFF7FEFF 		bl	SPIM_1_Start
 755:main.c        ****     SPIS_2_Start(); 
 2690              		.loc 1 755 0
 2691 0726 FFF7FEFF 		bl	SPIS_2_Start
 756:main.c        ****     DmaTxConfiguration();
 2692              		.loc 1 756 0
 2693 072a FFF7FEFF 		bl	DmaTxConfiguration
 757:main.c        ****     DmaRxConfiguration();
 2694              		.loc 1 757 0
 2695 072e FFF7FEFF 		bl	DmaRxConfiguration
 758:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 2696              		.loc 1 758 0
 2697 0732 2A48     		ldr	r0, .L190+44
 2698 0734 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 759:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2699              		.loc 1 759 0
 2700 0738 2948     		ldr	r0, .L190+48
 2701 073a FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 760:main.c        ****     
 761:main.c        ****     myArray[30] = 254;
 2702              		.loc 1 761 0
 2703 073e 294B     		ldr	r3, .L190+52
 2704 0740 FE22     		movs	r2, #254
 2705 0742 9A77     		strb	r2, [r3, #30]
 762:main.c        ****     myArray[31] = 253;
 2706              		.loc 1 762 0
 2707 0744 274B     		ldr	r3, .L190+52
 2708 0746 FD22     		movs	r2, #253
 2709 0748 DA77     		strb	r2, [r3, #31]
 763:main.c        **** 
 764:main.c        ****     main_counter = 0;
 2710              		.loc 1 764 0
 2711 074a 234B     		ldr	r3, .L190+40
 2712 074c 0022     		movs	r2, #0
 2713 074e 1A70     		strb	r2, [r3]
 2714              	.L181:
 765:main.c        **** 
 766:main.c        **** 	for(;;)
 767:main.c        ****     {
 768:main.c        ****         
 769:main.c        ****         if (parseThatMF)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 63


 2715              		.loc 1 769 0
 2716 0750 254B     		ldr	r3, .L190+56
 2717 0752 1B78     		ldrb	r3, [r3]
 2718 0754 DBB2     		uxtb	r3, r3
 2719 0756 002B     		cmp	r3, #0
 2720 0758 01D0     		beq	.L86
 770:main.c        ****         {
 771:main.c        ****             parseSysex();
 2721              		.loc 1 771 0
 2722 075a FFF7FEFF 		bl	parseSysex
 2723              	.L86:
 772:main.c        ****         }
 773:main.c        ****         
 774:main.c        ****         //if (newDataFlag)
 775:main.c        ****         //{
 776:main.c        ****         //}
 777:main.c        ****             /*
 778:main.c        ****             for (int i = 0; i < 5; i++)
 779:main.c        ****             {
 780:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 781:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 782:main.c        ****                 I2C_1_MasterSendStop(); 
 783:main.c        **** 
 784:main.c        **** 
 785:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 786:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 787:main.c        ****                 //I2C_1_MasterSendStop();
 788:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
 789:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 790:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 791:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 792:main.c        ****                  I2C_1_MasterSendStop(); 
 793:main.c        ****                 
 794:main.c        ****                 CyDelay(1);
 795:main.c        **** 
 796:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 797:main.c        ****                 I2C_1_MasterWriteByte(0x01);
 798:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 799:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 800:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 801:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 802:main.c        ****                 I2C_1_MasterSendStop(); 
 803:main.c        ****                 
 804:main.c        ****                 CyDelay(2);
 805:main.c        **** 
 806:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 807:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 808:main.c        ****                I2C_1_MasterWriteByte(0x80);
 809:main.c        ****                 I2C_1_MasterSendStop(); 
 810:main.c        ****                CyDelay(2);
 811:main.c        ****             }
 812:main.c        ****         */
 813:main.c        ****         //set main i2c mux
 814:main.c        ****     
 815:main.c        ****         
 816:main.c        ****         /*
 817:main.c        ****         for (int i = 0; i < 4; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 64


 818:main.c        ****         {
 819:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 820:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 821:main.c        ****             I2C_1_MasterSendStop(); 
 822:main.c        **** 
 823:main.c        **** 
 824:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 825:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 826:main.c        ****             //I2C_1_MasterSendStop();
 827:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 828:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 829:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 830:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
 831:main.c        ****              I2C_1_MasterSendStop(); 
 832:main.c        ****             
 833:main.c        ****             CyDelay(1);
 834:main.c        **** 
 835:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 836:main.c        ****             I2C_1_MasterWriteByte(0x01);
 837:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 838:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 839:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 840:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 841:main.c        ****             I2C_1_MasterSendStop(); 
 842:main.c        ****             
 843:main.c        ****             CyDelay(2);
 844:main.c        **** 
 845:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 846:main.c        ****             I2C_1_MasterWriteByte(0xff);
 847:main.c        ****             I2C_1_MasterWriteByte(0x80);
 848:main.c        ****             I2C_1_MasterSendStop(); 
 849:main.c        ****            CyDelay(2);
 850:main.c        ****         }
 851:main.c        ****             */
 852:main.c        ****         /*    
 853:main.c        ****         if (main_counter == 6)
 854:main.c        ****         {
 855:main.c        ****             main_counter = 8;
 856:main.c        ****         }
 857:main.c        ****         */    
 858:main.c        ****         testpin3_Write(1);
 2724              		.loc 1 858 0
 2725 075e 0120     		movs	r0, #1
 2726 0760 FFF7FEFF 		bl	testpin3_Write
 859:main.c        ****        //sense levers and pedals
 860:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2727              		.loc 1 860 0
 2728 0764 1C4B     		ldr	r3, .L190+40
 2729 0766 1B78     		ldrb	r3, [r3]
 2730 0768 DBB2     		uxtb	r3, r3
 2731 076a 1A46     		mov	r2, r3
 2732 076c 1F4B     		ldr	r3, .L190+60
 2733 076e 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2734 0772 1F4B     		ldr	r3, .L190+64
 2735 0774 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2736 0776 9A42     		cmp	r2, r3
 2737 0778 48D0     		beq	.L87
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 65


 2738              	.LBB19:
 861:main.c        ****         {
 862:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 2739              		.loc 1 862 0
 2740 077a 174B     		ldr	r3, .L190+40
 2741 077c 1B78     		ldrb	r3, [r3]
 2742 077e DBB2     		uxtb	r3, r3
 2743 0780 1A46     		mov	r2, r3
 2744 0782 1A4B     		ldr	r3, .L190+60
 2745 0784 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2746 0788 1A46     		mov	r2, r3
 2747 078a 0123     		movs	r3, #1
 2748 078c 9340     		lsls	r3, r3, r2
 2749 078e DAB2     		uxtb	r2, r3
 2750 0790 0D4B     		ldr	r3, .L190+24
 2751 0792 1A70     		strb	r2, [r3]
 863:main.c        ****             if (mux_states[main_counter][0] == 5) //slow down I2C communication if it's going throu
 2752              		.loc 1 863 0
 2753 0794 104B     		ldr	r3, .L190+40
 2754 0796 1B78     		ldrb	r3, [r3]
 2755 0798 DBB2     		uxtb	r3, r3
 2756 079a 1A46     		mov	r2, r3
 2757 079c 134B     		ldr	r3, .L190+60
 2758 079e 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2759 07a2 052B     		cmp	r3, #5
 2760 07a4 26D1     		bne	.L88
 864:main.c        ****             {
 865:main.c        ****                 Clock_2_SetDividerValue(13); //slow speed 400k
 2761              		.loc 1 865 0
 2762 07a6 0121     		movs	r1, #1
 2763 07a8 0C20     		movs	r0, #12
 2764 07aa FFF7FEFF 		bl	Clock_2_SetDividerRegister
 2765 07ae 25E0     		b	.L89
 2766              	.L191:
 2767              		.align	2
 2768              	.L190:
 2769 07b0 00000000 		.word	macroNamesArray
 2770 07b4 00000000 		.word	presetAlreadyDisplayed
 2771 07b8 00000000 		.word	dualSlider
 2772 07bc 00000000 		.word	currentNeck
 2773 07c0 00000000 		.word	necks
 2774 07c4 00000000 		.word	currentCopedent
 2775 07c8 00000000 		.word	I2Cbuff1
 2776 07cc 00000000 		.word	status
 2777 07d0 00040000 		.word	.LC0
 2778 07d4 00000000 		.word	copedentNamesArray
 2779 07d8 00000000 		.word	main_counter
 2780 07dc 00000000 		.word	spis_1_ss
 2781 07e0 00000000 		.word	spis_2_ss
 2782 07e4 00000000 		.word	myArray
 2783 07e8 00000000 		.word	parseThatMF
 2784 07ec 00000000 		.word	mux_states
 2785 07f0 00000000 		.word	last_mux
 2786              	.L88:
 866:main.c        ****             }
 867:main.c        ****             else
 868:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 66


 869:main.c        ****                 Clock_2_SetDividerValue(5); //otherwise full speed 1000k
 2787              		.loc 1 869 0
 2788 07f4 0121     		movs	r1, #1
 2789 07f6 0420     		movs	r0, #4
 2790 07f8 FFF7FEFF 		bl	Clock_2_SetDividerRegister
 2791              	.L89:
 870:main.c        ****             }
 871:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2792              		.loc 1 871 0
 2793 07fc 0022     		movs	r2, #0
 2794 07fe 0121     		movs	r1, #1
 2795 0800 7020     		movs	r0, #112
 2796 0802 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2797 0806 0346     		mov	r3, r0
 2798 0808 87F82730 		strb	r3, [r7, #39]
 2799              	.L87:
 2800              	.LBE19:
 872:main.c        ****         }
 873:main.c        ****         last_mux = mux_states[main_counter][0];
 2801              		.loc 1 873 0
 2802 080c 7F4B     		ldr	r3, .L192
 2803 080e 1B78     		ldrb	r3, [r3]
 2804 0810 DBB2     		uxtb	r3, r3
 2805 0812 1A46     		mov	r2, r3
 2806 0814 7E4B     		ldr	r3, .L192+4
 2807 0816 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2808 081a 7E4B     		ldr	r3, .L192+8
 2809 081c 1A70     		strb	r2, [r3]
 874:main.c        ****         
 875:main.c        ****         
 876:main.c        ****         CyDelayUs(10);
 2810              		.loc 1 876 0
 2811 081e 0A20     		movs	r0, #10
 2812 0820 FFF7FEFF 		bl	CyDelayUs
 877:main.c        ****         if (mux_states[main_counter][0] == 5)
 2813              		.loc 1 877 0
 2814 0824 794B     		ldr	r3, .L192
 2815 0826 1B78     		ldrb	r3, [r3]
 2816 0828 DBB2     		uxtb	r3, r3
 2817 082a 1A46     		mov	r2, r3
 2818 082c 784B     		ldr	r3, .L192+4
 2819 082e 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2820 0832 052B     		cmp	r3, #5
 2821 0834 1DD1     		bne	.L90
 878:main.c        ****         {
 879:main.c        ****             if (!i2c_skipped[main_counter])
 2822              		.loc 1 879 0
 2823 0836 754B     		ldr	r3, .L192
 2824 0838 1B78     		ldrb	r3, [r3]
 2825 083a DBB2     		uxtb	r3, r3
 2826 083c 1A46     		mov	r2, r3
 2827 083e 764B     		ldr	r3, .L192+12
 2828 0840 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2829 0842 002B     		cmp	r3, #0
 2830 0844 15D1     		bne	.L90
 880:main.c        ****             {
 881:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 67


 2831              		.loc 1 881 0
 2832 0846 714B     		ldr	r3, .L192
 2833 0848 1B78     		ldrb	r3, [r3]
 2834 084a DBB2     		uxtb	r3, r3
 2835 084c 704A     		ldr	r2, .L192+4
 2836 084e 5B00     		lsls	r3, r3, #1
 2837 0850 1344     		add	r3, r3, r2
 2838 0852 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2839 0854 1A46     		mov	r2, r3
 2840 0856 0123     		movs	r3, #1
 2841 0858 9340     		lsls	r3, r3, r2
 2842 085a DAB2     		uxtb	r2, r3
 2843 085c 6F4B     		ldr	r3, .L192+16
 2844 085e 1A70     		strb	r2, [r3]
 882:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 2845              		.loc 1 882 0
 2846 0860 0022     		movs	r2, #0
 2847 0862 0121     		movs	r1, #1
 2848 0864 7120     		movs	r0, #113
 2849 0866 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2850 086a 0346     		mov	r3, r0
 2851 086c 1A46     		mov	r2, r3
 2852 086e 6C4B     		ldr	r3, .L192+20
 2853 0870 1A60     		str	r2, [r3]
 2854              	.L90:
 883:main.c        ****             }
 884:main.c        ****         }
 885:main.c        **** 
 886:main.c        ****         CyDelayUs(10);
 2855              		.loc 1 886 0
 2856 0872 0A20     		movs	r0, #10
 2857 0874 FFF7FEFF 		bl	CyDelayUs
 887:main.c        ****         //if it's a hall sensor
 888:main.c        **** 
 889:main.c        ****         //temporarily don't scan vertical knee lever, should be <10 normally
 890:main.c        ****         if (main_counter < 10)
 2858              		.loc 1 890 0
 2859 0878 644B     		ldr	r3, .L192
 2860 087a 1B78     		ldrb	r3, [r3]
 2861 087c DBB2     		uxtb	r3, r3
 2862 087e 092B     		cmp	r3, #9
 2863 0880 00F2A180 		bhi	.L91
 891:main.c        ****         {
 892:main.c        ****             if (!i2c_skipped[main_counter])
 2864              		.loc 1 892 0
 2865 0884 614B     		ldr	r3, .L192
 2866 0886 1B78     		ldrb	r3, [r3]
 2867 0888 DBB2     		uxtb	r3, r3
 2868 088a 1A46     		mov	r2, r3
 2869 088c 624B     		ldr	r3, .L192+12
 2870 088e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2871 0890 002B     		cmp	r3, #0
 2872 0892 40F09880 		bne	.L91
 893:main.c        ****             {
 894:main.c        ****                 //CyDelayUs(100);
 895:main.c        ****                 I2Cbuff1[0] = 0x0E;
 2873              		.loc 1 895 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 68


 2874 0896 614B     		ldr	r3, .L192+16
 2875 0898 0E22     		movs	r2, #14
 2876 089a 1A70     		strb	r2, [r3]
 896:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 2877              		.loc 1 896 0
 2878 089c 0222     		movs	r2, #2
 2879 089e 0121     		movs	r1, #1
 2880 08a0 3620     		movs	r0, #54
 2881 08a2 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2882 08a6 0346     		mov	r3, r0
 2883 08a8 1A46     		mov	r2, r3
 2884 08aa 5D4B     		ldr	r3, .L192+20
 2885 08ac 1A60     		str	r2, [r3]
 897:main.c        ****                 if (status == 0)
 2886              		.loc 1 897 0
 2887 08ae 5C4B     		ldr	r3, .L192+20
 2888 08b0 1B68     		ldr	r3, [r3]
 2889 08b2 002B     		cmp	r3, #0
 2890 08b4 08D1     		bne	.L92
 898:main.c        ****                 {
 899:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 2891              		.loc 1 899 0
 2892 08b6 0122     		movs	r2, #1
 2893 08b8 0221     		movs	r1, #2
 2894 08ba 3620     		movs	r0, #54
 2895 08bc FFF7FEFF 		bl	I2C_MasterReadBlocking
 2896 08c0 0346     		mov	r3, r0
 2897 08c2 1A46     		mov	r2, r3
 2898 08c4 564B     		ldr	r3, .L192+20
 2899 08c6 1A60     		str	r2, [r3]
 2900              	.L92:
 900:main.c        ****                 }
 901:main.c        ****                 if (status  == 0)
 2901              		.loc 1 901 0
 2902 08c8 554B     		ldr	r3, .L192+20
 2903 08ca 1B68     		ldr	r3, [r3]
 2904 08cc 002B     		cmp	r3, #0
 2905 08ce 7AD1     		bne	.L91
 902:main.c        ****                 {
 903:main.c        ****                     //CyDelayUs(100);
 904:main.c        ****                     angle[main_counter] = I2Cbuff2[0] << 8;
 2906              		.loc 1 904 0
 2907 08d0 4E4B     		ldr	r3, .L192
 2908 08d2 1B78     		ldrb	r3, [r3]
 2909 08d4 DBB2     		uxtb	r3, r3
 2910 08d6 1A46     		mov	r2, r3
 2911 08d8 524B     		ldr	r3, .L192+24
 2912 08da 1B78     		ldrb	r3, [r3]
 2913 08dc DBB2     		uxtb	r3, r3
 2914 08de 9BB2     		uxth	r3, r3
 2915 08e0 1B02     		lsls	r3, r3, #8
 2916 08e2 99B2     		uxth	r1, r3
 2917 08e4 504B     		ldr	r3, .L192+28
 2918 08e6 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 905:main.c        ****                     angle[main_counter] +=  I2Cbuff2[1];
 2919              		.loc 1 905 0
 2920 08ea 4E4B     		ldr	r3, .L192+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 69


 2921 08ec 5B78     		ldrb	r3, [r3, #1]
 2922 08ee D8B2     		uxtb	r0, r3
 2923 08f0 464B     		ldr	r3, .L192
 2924 08f2 1B78     		ldrb	r3, [r3]
 2925 08f4 DBB2     		uxtb	r3, r3
 2926 08f6 1946     		mov	r1, r3
 2927 08f8 1A46     		mov	r2, r3
 2928 08fa 4B4B     		ldr	r3, .L192+28
 2929 08fc 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2930 0900 83B2     		uxth	r3, r0
 2931 0902 1344     		add	r3, r3, r2
 2932 0904 9AB2     		uxth	r2, r3
 2933 0906 484B     		ldr	r3, .L192+28
 2934 0908 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 906:main.c        ****                     
 907:main.c        ****                     if (leverCalibrationMode)
 2935              		.loc 1 907 0
 2936 090c 474B     		ldr	r3, .L192+32
 2937 090e 1B68     		ldr	r3, [r3]
 2938 0910 002B     		cmp	r3, #0
 2939 0912 58D0     		beq	.L91
 908:main.c        ****                     {
 909:main.c        ****                         if (angle[main_counter] < pedals_low[main_counter])
 2940              		.loc 1 909 0
 2941 0914 3D4B     		ldr	r3, .L192
 2942 0916 1B78     		ldrb	r3, [r3]
 2943 0918 DBB2     		uxtb	r3, r3
 2944 091a 1A46     		mov	r2, r3
 2945 091c 424B     		ldr	r3, .L192+28
 2946 091e 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2947 0922 3A4B     		ldr	r3, .L192
 2948 0924 1B78     		ldrb	r3, [r3]
 2949 0926 DBB2     		uxtb	r3, r3
 2950 0928 1946     		mov	r1, r3
 2951 092a 414B     		ldr	r3, .L192+36
 2952 092c 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2953 0930 9A42     		cmp	r2, r3
 2954 0932 2AD2     		bcs	.L93
 910:main.c        ****                         {
 911:main.c        ****                             if (main_counter == 0)
 2955              		.loc 1 911 0
 2956 0934 354B     		ldr	r3, .L192
 2957 0936 1B78     		ldrb	r3, [r3]
 2958 0938 DBB2     		uxtb	r3, r3
 2959 093a 002B     		cmp	r3, #0
 2960 093c 17D1     		bne	.L94
 912:main.c        ****                             {
 913:main.c        ****                                 if (angle[main_counter] != 0)
 2961              		.loc 1 913 0
 2962 093e 334B     		ldr	r3, .L192
 2963 0940 1B78     		ldrb	r3, [r3]
 2964 0942 DBB2     		uxtb	r3, r3
 2965 0944 1A46     		mov	r2, r3
 2966 0946 384B     		ldr	r3, .L192+28
 2967 0948 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2968 094c 002B     		cmp	r3, #0
 2969 094e 1CD0     		beq	.L93
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 70


 914:main.c        ****                                 {
 915:main.c        ****                                      pedals_low[main_counter] = angle[main_counter];
 2970              		.loc 1 915 0
 2971 0950 2E4B     		ldr	r3, .L192
 2972 0952 1B78     		ldrb	r3, [r3]
 2973 0954 DBB2     		uxtb	r3, r3
 2974 0956 1A46     		mov	r2, r3
 2975 0958 2C4B     		ldr	r3, .L192
 2976 095a 1B78     		ldrb	r3, [r3]
 2977 095c DBB2     		uxtb	r3, r3
 2978 095e 1946     		mov	r1, r3
 2979 0960 314B     		ldr	r3, .L192+28
 2980 0962 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2981 0966 324B     		ldr	r3, .L192+36
 2982 0968 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2983 096c 0DE0     		b	.L93
 2984              	.L94:
 916:main.c        ****                                      //calculatePedalRatios();
 917:main.c        ****                                 }
 918:main.c        ****                             }
 919:main.c        ****                             else
 920:main.c        ****                             {
 921:main.c        ****                                 pedals_low[main_counter] = angle[main_counter];
 2985              		.loc 1 921 0
 2986 096e 274B     		ldr	r3, .L192
 2987 0970 1B78     		ldrb	r3, [r3]
 2988 0972 DBB2     		uxtb	r3, r3
 2989 0974 1A46     		mov	r2, r3
 2990 0976 254B     		ldr	r3, .L192
 2991 0978 1B78     		ldrb	r3, [r3]
 2992 097a DBB2     		uxtb	r3, r3
 2993 097c 1946     		mov	r1, r3
 2994 097e 2A4B     		ldr	r3, .L192+28
 2995 0980 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2996 0984 2A4B     		ldr	r3, .L192+36
 2997 0986 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2998              	.L93:
 922:main.c        ****                                 //calculatePedalRatios();
 923:main.c        ****                             }
 924:main.c        ****                             
 925:main.c        ****                         }
 926:main.c        ****                         if (angle[main_counter] > pedals_high[main_counter])
 2999              		.loc 1 926 0
 3000 098a 204B     		ldr	r3, .L192
 3001 098c 1B78     		ldrb	r3, [r3]
 3002 098e DBB2     		uxtb	r3, r3
 3003 0990 1A46     		mov	r2, r3
 3004 0992 254B     		ldr	r3, .L192+28
 3005 0994 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3006 0998 1C4B     		ldr	r3, .L192
 3007 099a 1B78     		ldrb	r3, [r3]
 3008 099c DBB2     		uxtb	r3, r3
 3009 099e 1946     		mov	r1, r3
 3010 09a0 244B     		ldr	r3, .L192+40
 3011 09a2 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3012 09a6 9A42     		cmp	r2, r3
 3013 09a8 0DD9     		bls	.L91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 71


 927:main.c        ****                         {
 928:main.c        ****                              pedals_high[main_counter] = angle[main_counter];
 3014              		.loc 1 928 0
 3015 09aa 184B     		ldr	r3, .L192
 3016 09ac 1B78     		ldrb	r3, [r3]
 3017 09ae DBB2     		uxtb	r3, r3
 3018 09b0 1A46     		mov	r2, r3
 3019 09b2 164B     		ldr	r3, .L192
 3020 09b4 1B78     		ldrb	r3, [r3]
 3021 09b6 DBB2     		uxtb	r3, r3
 3022 09b8 1946     		mov	r1, r3
 3023 09ba 1B4B     		ldr	r3, .L192+28
 3024 09bc 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3025 09c0 1C4B     		ldr	r3, .L192+40
 3026 09c2 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3027              	.L91:
 929:main.c        ****                              //calculatePedalRatios();
 930:main.c        ****                         }
 931:main.c        ****                     }
 932:main.c        ****                 }
 933:main.c        ****             }
 934:main.c        ****         }
 935:main.c        ****         
 936:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 937:main.c        ****         if (main_counter == 9)
 3028              		.loc 1 937 0
 3029 09c6 114B     		ldr	r3, .L192
 3030 09c8 1B78     		ldrb	r3, [r3]
 3031 09ca DBB2     		uxtb	r3, r3
 3032 09cc 092B     		cmp	r3, #9
 3033 09ce 40F0C580 		bne	.L96
 938:main.c        ****         {
 939:main.c        ****             if (!i2c_skipped[main_counter])
 3034              		.loc 1 939 0
 3035 09d2 0E4B     		ldr	r3, .L192
 3036 09d4 1B78     		ldrb	r3, [r3]
 3037 09d6 DBB2     		uxtb	r3, r3
 3038 09d8 1A46     		mov	r2, r3
 3039 09da 0F4B     		ldr	r3, .L192+12
 3040 09dc 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3041 09de 002B     		cmp	r3, #0
 3042 09e0 40F00381 		bne	.L101
 940:main.c        ****             {
 941:main.c        ****                 //scan the knob adc
 942:main.c        ****                 I2Cbuff1[0] = 0x0;      
 3043              		.loc 1 942 0
 3044 09e4 0D4B     		ldr	r3, .L192+16
 3045 09e6 0022     		movs	r2, #0
 3046 09e8 1A70     		strb	r2, [r3]
 943:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 3047              		.loc 1 943 0
 3048 09ea 0022     		movs	r2, #0
 3049 09ec 1021     		movs	r1, #16
 3050 09ee 3520     		movs	r0, #53
 3051 09f0 FFF7FEFF 		bl	I2C_MasterReadBlocking
 3052 09f4 0346     		mov	r3, r0
 3053 09f6 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 72


 3054 09f8 094B     		ldr	r3, .L192+20
 3055 09fa 1A60     		str	r2, [r3]
 944:main.c        ****                 if (status == 0)
 3056              		.loc 1 944 0
 3057 09fc 084B     		ldr	r3, .L192+20
 3058 09fe 1B68     		ldr	r3, [r3]
 3059 0a00 002B     		cmp	r3, #0
 3060 0a02 40F0F280 		bne	.L101
 3061              	.LBB20:
 945:main.c        ****                 {
 946:main.c        ****                     for (int i = 0; i < NUM_MACROS; i++)
 3062              		.loc 1 946 0
 3063 0a06 0023     		movs	r3, #0
 3064 0a08 7B67     		str	r3, [r7, #116]
 3065 0a0a 5FE0     		b	.L98
 3066              	.L193:
 3067              		.align	2
 3068              	.L192:
 3069 0a0c 00000000 		.word	main_counter
 3070 0a10 00000000 		.word	mux_states
 3071 0a14 00000000 		.word	last_mux
 3072 0a18 00000000 		.word	i2c_skipped
 3073 0a1c 00000000 		.word	I2Cbuff1
 3074 0a20 00000000 		.word	status
 3075 0a24 00000000 		.word	I2Cbuff2
 3076 0a28 00000000 		.word	angle
 3077 0a2c 00000000 		.word	leverCalibrationMode
 3078 0a30 00000000 		.word	pedals_low
 3079 0a34 00000000 		.word	pedals_high
 3080              	.L100:
 3081              	.LBB21:
 947:main.c        ****                     {
 948:main.c        ****                        uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[(i*2) + 1] & 255)) & 409
 3082              		.loc 1 948 0
 3083 0a38 7B6F     		ldr	r3, [r7, #116]
 3084 0a3a 5B00     		lsls	r3, r3, #1
 3085 0a3c 874A     		ldr	r2, .L194
 3086 0a3e D35C     		ldrb	r3, [r2, r3]
 3087 0a40 DBB2     		uxtb	r3, r3
 3088 0a42 9BB2     		uxth	r3, r3
 3089 0a44 1B02     		lsls	r3, r3, #8
 3090 0a46 9AB2     		uxth	r2, r3
 3091 0a48 7B6F     		ldr	r3, [r7, #116]
 3092 0a4a 5B00     		lsls	r3, r3, #1
 3093 0a4c 0133     		adds	r3, r3, #1
 3094 0a4e 8349     		ldr	r1, .L194
 3095 0a50 CB5C     		ldrb	r3, [r1, r3]
 3096 0a52 DBB2     		uxtb	r3, r3
 3097 0a54 9BB2     		uxth	r3, r3
 3098 0a56 1344     		add	r3, r3, r2
 3099 0a58 9BB2     		uxth	r3, r3
 3100 0a5a C3F30B03 		ubfx	r3, r3, #0, #12
 3101 0a5e 3B80     		strh	r3, [r7]	@ movhi
 949:main.c        ****                         macroKnobValues[i] = 255 - (tempInt >> 4); //now squish it down to 8 bit fo
 3102              		.loc 1 949 0
 3103 0a60 3B88     		ldrh	r3, [r7]
 3104 0a62 1B09     		lsrs	r3, r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 73


 3105 0a64 9BB2     		uxth	r3, r3
 3106 0a66 DBB2     		uxtb	r3, r3
 3107 0a68 DB43     		mvns	r3, r3
 3108 0a6a D9B2     		uxtb	r1, r3
 3109 0a6c 7C4A     		ldr	r2, .L194+4
 3110 0a6e 7B6F     		ldr	r3, [r7, #116]
 3111 0a70 1344     		add	r3, r3, r2
 3112 0a72 0A46     		mov	r2, r1
 3113 0a74 1A70     		strb	r2, [r3]
 950:main.c        ****                         macroKnobValues7bit[i] = macroKnobValues[i] >> 1;
 3114              		.loc 1 950 0
 3115 0a76 7A4A     		ldr	r2, .L194+4
 3116 0a78 7B6F     		ldr	r3, [r7, #116]
 3117 0a7a 1344     		add	r3, r3, r2
 3118 0a7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3119 0a7e 5B08     		lsrs	r3, r3, #1
 3120 0a80 D9B2     		uxtb	r1, r3
 3121 0a82 784A     		ldr	r2, .L194+8
 3122 0a84 7B6F     		ldr	r3, [r7, #116]
 3123 0a86 1344     		add	r3, r3, r2
 3124 0a88 0A46     		mov	r2, r1
 3125 0a8a 1A70     		strb	r2, [r3]
 951:main.c        ****                         if (macroKnobValues7bit[i] != prevMacroKnobValues7bit[i])
 3126              		.loc 1 951 0
 3127 0a8c 754A     		ldr	r2, .L194+8
 3128 0a8e 7B6F     		ldr	r3, [r7, #116]
 3129 0a90 1344     		add	r3, r3, r2
 3130 0a92 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3131 0a94 7449     		ldr	r1, .L194+12
 3132 0a96 7B6F     		ldr	r3, [r7, #116]
 3133 0a98 0B44     		add	r3, r3, r1
 3134 0a9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3135 0a9c 9A42     		cmp	r2, r3
 3136 0a9e 09D0     		beq	.L99
 952:main.c        ****                         {
 953:main.c        ****                             sendMIDIControlChange(i+1, macroKnobValues7bit[i], 0);
 3137              		.loc 1 953 0
 3138 0aa0 7B6F     		ldr	r3, [r7, #116]
 3139 0aa2 581C     		adds	r0, r3, #1
 3140 0aa4 6F4A     		ldr	r2, .L194+8
 3141 0aa6 7B6F     		ldr	r3, [r7, #116]
 3142 0aa8 1344     		add	r3, r3, r2
 3143 0aaa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3144 0aac 0022     		movs	r2, #0
 3145 0aae 1946     		mov	r1, r3
 3146 0ab0 FFF7FEFF 		bl	sendMIDIControlChange
 3147              	.L99:
 954:main.c        ****                         }
 955:main.c        ****                         prevMacroKnobValues7bit[i] = macroKnobValues7bit[i];
 3148              		.loc 1 955 0 discriminator 2
 3149 0ab4 6B4A     		ldr	r2, .L194+8
 3150 0ab6 7B6F     		ldr	r3, [r7, #116]
 3151 0ab8 1344     		add	r3, r3, r2
 3152 0aba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3153 0abc 6A4A     		ldr	r2, .L194+12
 3154 0abe 7B6F     		ldr	r3, [r7, #116]
 3155 0ac0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 74


 3156 0ac2 0A46     		mov	r2, r1
 3157 0ac4 1A70     		strb	r2, [r3]
 3158              	.LBE21:
 946:main.c        ****                     {
 3159              		.loc 1 946 0 discriminator 2
 3160 0ac6 7B6F     		ldr	r3, [r7, #116]
 3161 0ac8 0133     		adds	r3, r3, #1
 3162 0aca 7B67     		str	r3, [r7, #116]
 3163              	.L98:
 946:main.c        ****                     {
 3164              		.loc 1 946 0 is_stmt 0 discriminator 1
 3165 0acc 7B6F     		ldr	r3, [r7, #116]
 3166 0ace 072B     		cmp	r3, #7
 3167 0ad0 B2DD     		ble	.L100
 3168              	.LBE20:
 956:main.c        ****                     }
 957:main.c        ****                     //
 958:main.c        ****                     if (macroOLEDWaitingToSend == 2)
 3169              		.loc 1 958 0 is_stmt 1
 3170 0ad2 664B     		ldr	r3, .L194+16
 3171 0ad4 1B68     		ldr	r3, [r3]
 3172 0ad6 022B     		cmp	r3, #2
 3173 0ad8 40F08780 		bne	.L101
 959:main.c        ****                     {
 960:main.c        ****                         //send the data to the little macro OLED screens
 961:main.c        ****                         
 962:main.c        ****                         I2Cbuff1[0] = (1 << 3) + whichMacro;
 3174              		.loc 1 962 0
 3175 0adc 644B     		ldr	r3, .L194+20
 3176 0ade 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3177 0ae0 0833     		adds	r3, r3, #8
 3178 0ae2 DAB2     		uxtb	r2, r3
 3179 0ae4 634B     		ldr	r3, .L194+24
 3180 0ae6 1A70     		strb	r2, [r3]
 963:main.c        ****                         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 3181              		.loc 1 963 0
 3182 0ae8 0022     		movs	r2, #0
 3183 0aea 0121     		movs	r1, #1
 3184 0aec 7220     		movs	r0, #114
 3185 0aee FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3186 0af2 0346     		mov	r3, r0
 3187 0af4 1A46     		mov	r2, r3
 3188 0af6 604B     		ldr	r3, .L194+28
 3189 0af8 1A60     		str	r2, [r3]
 964:main.c        ****                         //OLED_init(128, 32);
 965:main.c        ****                         OLEDclear(128, 32);
 3190              		.loc 1 965 0
 3191 0afa 2021     		movs	r1, #32
 3192 0afc 8020     		movs	r0, #128
 3193 0afe FFF7FEFF 		bl	OLEDclear
 966:main.c        ****                         //OLEDwriteInt(w , 1, 0,FirstLine);
 967:main.c        ****                         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 968:main.c        ****                         myGFX_setFont(1);
 3194              		.loc 1 968 0
 3195 0b02 0120     		movs	r0, #1
 3196 0b04 FFF7FEFF 		bl	myGFX_setFont
 969:main.c        ****                         //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 75


 970:main.c        ****                         OLEDwriteLineMiddle((char *)&macroNamesArray[patchNum][whichMacro][0], MACR
 3197              		.loc 1 970 0
 3198 0b08 5C4B     		ldr	r3, .L194+32
 3199 0b0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3200 0b0c 1946     		mov	r1, r3
 3201 0b0e 584B     		ldr	r3, .L194+20
 3202 0b10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3203 0b12 1A46     		mov	r2, r3
 3204 0b14 D200     		lsls	r2, r2, #3
 3205 0b16 D21A     		subs	r2, r2, r3
 3206 0b18 5300     		lsls	r3, r2, #1
 3207 0b1a 1A46     		mov	r2, r3
 3208 0b1c 0B46     		mov	r3, r1
 3209 0b1e DB00     		lsls	r3, r3, #3
 3210 0b20 5B1A     		subs	r3, r3, r1
 3211 0b22 1B01     		lsls	r3, r3, #4
 3212 0b24 1344     		add	r3, r3, r2
 3213 0b26 564A     		ldr	r2, .L194+36
 3214 0b28 1344     		add	r3, r3, r2
 3215 0b2a 0921     		movs	r1, #9
 3216 0b2c 1846     		mov	r0, r3
 3217 0b2e FFF7FEFF 		bl	OLEDwriteLineMiddle
 971:main.c        ****                         OLED_draw(128, 32);
 3218              		.loc 1 971 0
 3219 0b32 2021     		movs	r1, #32
 3220 0b34 8020     		movs	r0, #128
 3221 0b36 FFF7FEFF 		bl	OLED_draw
 972:main.c        **** 
 973:main.c        ****                         whichMacro++;
 3222              		.loc 1 973 0
 3223 0b3a 4D4B     		ldr	r3, .L194+20
 3224 0b3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3225 0b3e 0133     		adds	r3, r3, #1
 3226 0b40 DAB2     		uxtb	r2, r3
 3227 0b42 4B4B     		ldr	r3, .L194+20
 3228 0b44 1A70     		strb	r2, [r3]
 974:main.c        ****                         if (whichMacro >=8)
 3229              		.loc 1 974 0
 3230 0b46 4A4B     		ldr	r3, .L194+20
 3231 0b48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3232 0b4a 072B     		cmp	r3, #7
 3233 0b4c 4DD9     		bls	.L101
 975:main.c        ****                         {
 976:main.c        ****                             macroOLEDWaitingToSend = 0;
 3234              		.loc 1 976 0
 3235 0b4e 474B     		ldr	r3, .L194+16
 3236 0b50 0022     		movs	r2, #0
 3237 0b52 1A60     		str	r2, [r3]
 977:main.c        ****                             whichMacro = 0;
 3238              		.loc 1 977 0
 3239 0b54 464B     		ldr	r3, .L194+20
 3240 0b56 0022     		movs	r2, #0
 3241 0b58 1A70     		strb	r2, [r3]
 3242 0b5a 46E0     		b	.L101
 3243              	.L96:
 978:main.c        ****                         }
 979:main.c        ****                     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 76


 980:main.c        ****                 }
 981:main.c        ****             }
 982:main.c        ****             
 983:main.c        ****         }
 984:main.c        ****         //otherwise it's the ADC for the foot pedal
 985:main.c        ****         else if (main_counter == 10)
 3244              		.loc 1 985 0
 3245 0b5c 494B     		ldr	r3, .L194+40
 3246 0b5e 1B78     		ldrb	r3, [r3]
 3247 0b60 DBB2     		uxtb	r3, r3
 3248 0b62 0A2B     		cmp	r3, #10
 3249 0b64 2AD1     		bne	.L102
 986:main.c        ****         {
 987:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 988:main.c        ****             if (!i2c_skipped[main_counter])
 3250              		.loc 1 988 0
 3251 0b66 474B     		ldr	r3, .L194+40
 3252 0b68 1B78     		ldrb	r3, [r3]
 3253 0b6a DBB2     		uxtb	r3, r3
 3254 0b6c 1A46     		mov	r2, r3
 3255 0b6e 464B     		ldr	r3, .L194+44
 3256 0b70 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3257 0b72 002B     		cmp	r3, #0
 3258 0b74 39D1     		bne	.L101
 989:main.c        ****             {
 990:main.c        ****                 I2Cbuff1[0] = 0x0;      
 3259              		.loc 1 990 0
 3260 0b76 3F4B     		ldr	r3, .L194+24
 3261 0b78 0022     		movs	r2, #0
 3262 0b7a 1A70     		strb	r2, [r3]
 991:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 3263              		.loc 1 991 0
 3264 0b7c 0022     		movs	r2, #0
 3265 0b7e 0221     		movs	r1, #2
 3266 0b80 4F20     		movs	r0, #79
 3267 0b82 FFF7FEFF 		bl	I2C_MasterReadBlocking
 3268 0b86 0346     		mov	r3, r0
 3269 0b88 1A46     		mov	r2, r3
 3270 0b8a 3B4B     		ldr	r3, .L194+28
 3271 0b8c 1A60     		str	r2, [r3]
 992:main.c        ****                 if (status == 0)
 3272              		.loc 1 992 0
 3273 0b8e 3A4B     		ldr	r3, .L194+28
 3274 0b90 1B68     		ldr	r3, [r3]
 3275 0b92 002B     		cmp	r3, #0
 3276 0b94 29D1     		bne	.L101
 993:main.c        ****                 {
 994:main.c        ****                     volumePedal = I2Cbuff2[0] << 8;
 3277              		.loc 1 994 0
 3278 0b96 314B     		ldr	r3, .L194
 3279 0b98 1B78     		ldrb	r3, [r3]
 3280 0b9a DBB2     		uxtb	r3, r3
 3281 0b9c 9BB2     		uxth	r3, r3
 3282 0b9e 1B02     		lsls	r3, r3, #8
 3283 0ba0 9AB2     		uxth	r2, r3
 3284 0ba2 3A4B     		ldr	r3, .L194+48
 3285 0ba4 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 77


 995:main.c        ****                     volumePedal +=  I2Cbuff2[1];
 3286              		.loc 1 995 0
 3287 0ba6 2D4B     		ldr	r3, .L194
 3288 0ba8 5B78     		ldrb	r3, [r3, #1]
 3289 0baa DBB2     		uxtb	r3, r3
 3290 0bac 9AB2     		uxth	r2, r3
 3291 0bae 374B     		ldr	r3, .L194+48
 3292 0bb0 1B88     		ldrh	r3, [r3]
 3293 0bb2 1344     		add	r3, r3, r2
 3294 0bb4 9AB2     		uxth	r2, r3
 3295 0bb6 354B     		ldr	r3, .L194+48
 3296 0bb8 1A80     		strh	r2, [r3]	@ movhi
 3297 0bba 16E0     		b	.L101
 3298              	.L102:
 996:main.c        ****                 }
 997:main.c        ****             }
 998:main.c        ****         }
 999:main.c        ****         else
1000:main.c        ****         if (main_counter == 11)
 3299              		.loc 1 1000 0
 3300 0bbc 314B     		ldr	r3, .L194+40
 3301 0bbe 1B78     		ldrb	r3, [r3]
 3302 0bc0 DBB2     		uxtb	r3, r3
 3303 0bc2 0B2B     		cmp	r3, #11
 3304 0bc4 11D1     		bne	.L101
1001:main.c        ****         { 
1002:main.c        ****             if (mainOLEDWaitingToSend)
 3305              		.loc 1 1002 0
 3306 0bc6 324B     		ldr	r3, .L194+52
 3307 0bc8 1B68     		ldr	r3, [r3]
 3308 0bca 002B     		cmp	r3, #0
 3309 0bcc 06D0     		beq	.L104
1003:main.c        ****             {
1004:main.c        ****                 OLED_draw(128, 64);
 3310              		.loc 1 1004 0
 3311 0bce 4021     		movs	r1, #64
 3312 0bd0 8020     		movs	r0, #128
 3313 0bd2 FFF7FEFF 		bl	OLED_draw
1005:main.c        ****                 mainOLEDWaitingToSend = 0;
 3314              		.loc 1 1005 0
 3315 0bd6 2E4B     		ldr	r3, .L194+52
 3316 0bd8 0022     		movs	r2, #0
 3317 0bda 1A60     		str	r2, [r3]
 3318              	.L104:
1006:main.c        ****             }
1007:main.c        ****             if (macroOLEDWaitingToSend == 1)
 3319              		.loc 1 1007 0
 3320 0bdc 234B     		ldr	r3, .L194+16
 3321 0bde 1B68     		ldr	r3, [r3]
 3322 0be0 012B     		cmp	r3, #1
 3323 0be2 02D1     		bne	.L101
1008:main.c        ****             {
1009:main.c        ****                 macroOLEDWaitingToSend = 2;
 3324              		.loc 1 1009 0
 3325 0be4 214B     		ldr	r3, .L194+16
 3326 0be6 0222     		movs	r2, #2
 3327 0be8 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 78


 3328              	.L101:
1010:main.c        ****             }
1011:main.c        ****         }
1012:main.c        **** 
1013:main.c        ****         /*
1014:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
1015:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1016:main.c        **** 
1017:main.c        ****                 for (int i = 0; i < 5; i++)
1018:main.c        ****                 {
1019:main.c        ****                     I2Cbuff1[0] = 1<<i;
1020:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
1021:main.c        **** 
1022:main.c        ****                     I2Cbuff1[0] = 0x0E;
1023:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
1024:main.c        **** 
1025:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
1026:main.c        **** 
1027:main.c        **** 
1028:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
1029:main.c        ****                     angle[i] +=  I2Cbuff2[1];
1030:main.c        ****                 }
1031:main.c        ****             if (main_counter == 0)
1032:main.c        ****             {               
1033:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
1034:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1035:main.c        **** 
1036:main.c        ****                 for (int i = 0; i < 5; i++)
1037:main.c        ****                 {
1038:main.c        ****                     I2Cbuff1[0] = 1<<i;
1039:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
1040:main.c        **** 
1041:main.c        ****                     I2Cbuff1[0] = 0x0E;
1042:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
1043:main.c        **** 
1044:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
1045:main.c        **** 
1046:main.c        **** 
1047:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
1048:main.c        ****                     angle[i] +=  I2Cbuff2[1];
1049:main.c        ****                 }
1050:main.c        ****             }
1051:main.c        ****             else
1052:main.c        ****             {
1053:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
1054:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1055:main.c        ****                 I2Cbuff1[0] = 0x0E;
1056:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
1057:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
1058:main.c        ****                 {
1059:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
1060:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1061:main.c        ****                 }
1062:main.c        ****            
1063:main.c        **** 
1064:main.c        **** 
1065:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 79


1066:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
1067:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
1068:main.c        ****                 {
1069:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
1070:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1071:main.c        ****                 }
1072:main.c        ****                 
1073:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
1074:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
1075:main.c        ****             }    
1076:main.c        ****                 
1077:main.c        **** 
1078:main.c        ****             send_it = 1;
1079:main.c        ****         }
1080:main.c        ****         */
1081:main.c        ****         
1082:main.c        ****         if (main_counter < 10)
 3329              		.loc 1 1082 0
 3330 0bea 264B     		ldr	r3, .L194+40
 3331 0bec 1B78     		ldrb	r3, [r3]
 3332 0bee DBB2     		uxtb	r3, r3
 3333 0bf0 092B     		cmp	r3, #9
 3334 0bf2 00F20981 		bhi	.L105
 3335              	.LBB22:
1083:main.c        ****         {
1084:main.c        ****             
1085:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
1086:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_lowWithDeadZone[ma
 3336              		.loc 1 1086 0
 3337 0bf6 234B     		ldr	r3, .L194+40
 3338 0bf8 1B78     		ldrb	r3, [r3]
 3339 0bfa DBB2     		uxtb	r3, r3
 3340 0bfc 1A46     		mov	r2, r3
 3341 0bfe 254B     		ldr	r3, .L194+56
 3342 0c00 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3343 0c04 1F4B     		ldr	r3, .L194+40
 3344 0c06 1B78     		ldrb	r3, [r3]
 3345 0c08 DBB2     		uxtb	r3, r3
 3346 0c0a 1946     		mov	r1, r3
 3347 0c0c 224B     		ldr	r3, .L194+60
 3348 0c0e 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3349 0c12 D31A     		subs	r3, r2, r3
 3350 0c14 9BB2     		uxth	r3, r3
 3351 0c16 BB84     		strh	r3, [r7, #36]	@ movhi
1087:main.c        ****             
1088:main.c        ****             if (tempangle > 0)
 3352              		.loc 1 1088 0
 3353 0c18 B7F92430 		ldrsh	r3, [r7, #36]
 3354 0c1c 002B     		cmp	r3, #0
 3355 0c1e 41DD     		ble	.L106
1089:main.c        ****             {
1090:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 3356              		.loc 1 1090 0
 3357 0c20 184B     		ldr	r3, .L194+40
 3358 0c22 1B78     		ldrb	r3, [r3]
 3359 0c24 DBB2     		uxtb	r3, r3
 3360 0c26 1C46     		mov	r4, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 80


 3361 0c28 B7F92430 		ldrsh	r3, [r7, #36]
 3362 0c2c 1846     		mov	r0, r3
 3363 0c2e FFF7FEFF 		bl	__aeabi_i2f
 3364 0c32 144B     		ldr	r3, .L194+40
 3365 0c34 1B78     		ldrb	r3, [r3]
 3366 0c36 DBB2     		uxtb	r3, r3
 3367 0c38 1A46     		mov	r2, r3
 3368 0c3a 184B     		ldr	r3, .L194+64
 3369 0c3c 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 3370 0c40 1946     		mov	r1, r3
 3371 0c42 FFF7FEFF 		bl	__aeabi_fmul
 3372 0c46 0346     		mov	r3, r0
 3373 0c48 1846     		mov	r0, r3
 3374 0c4a FFF7FEFF 		bl	__aeabi_f2uiz
 3375 0c4e 0346     		mov	r3, r0
 3376 0c50 9AB2     		uxth	r2, r3
 3377 0c52 134B     		ldr	r3, .L194+68
 3378 0c54 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 3379 0c58 2CE0     		b	.L107
 3380              	.L195:
 3381 0c5a 00BF     		.align	2
 3382              	.L194:
 3383 0c5c 00000000 		.word	I2Cbuff2
 3384 0c60 00000000 		.word	macroKnobValues
 3385 0c64 00000000 		.word	macroKnobValues7bit
 3386 0c68 00000000 		.word	prevMacroKnobValues7bit
 3387 0c6c 00000000 		.word	macroOLEDWaitingToSend
 3388 0c70 00000000 		.word	whichMacro
 3389 0c74 00000000 		.word	I2Cbuff1
 3390 0c78 00000000 		.word	status
 3391 0c7c 00000000 		.word	patchNum
 3392 0c80 00000000 		.word	macroNamesArray
 3393 0c84 00000000 		.word	main_counter
 3394 0c88 00000000 		.word	i2c_skipped
 3395 0c8c 00000000 		.word	volumePedal
 3396 0c90 00000000 		.word	mainOLEDWaitingToSend
 3397 0c94 00000000 		.word	angle
 3398 0c98 00000000 		.word	pedals_lowWithDeadZone
 3399 0c9c 00000000 		.word	pedalRatios
 3400 0ca0 00000000 		.word	processed_pedals
 3401              	.L106:
1091:main.c        ****             }
1092:main.c        ****             else
1093:main.c        ****             {
1094:main.c        ****                 processed_pedals[main_counter] = 0;
 3402              		.loc 1 1094 0
 3403 0ca4 934B     		ldr	r3, .L196
 3404 0ca6 1B78     		ldrb	r3, [r3]
 3405 0ca8 DBB2     		uxtb	r3, r3
 3406 0caa 1A46     		mov	r2, r3
 3407 0cac 924B     		ldr	r3, .L196+4
 3408 0cae 0021     		movs	r1, #0
 3409 0cb0 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3410              	.L107:
1095:main.c        ****             }
1096:main.c        ****             if (processed_pedals[main_counter] > 4095)
 3411              		.loc 1 1096 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 81


 3412 0cb4 8F4B     		ldr	r3, .L196
 3413 0cb6 1B78     		ldrb	r3, [r3]
 3414 0cb8 DBB2     		uxtb	r3, r3
 3415 0cba 1A46     		mov	r2, r3
 3416 0cbc 8E4B     		ldr	r3, .L196+4
 3417 0cbe 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3418 0cc2 B3F5805F 		cmp	r3, #4096
 3419 0cc6 08D3     		bcc	.L108
1097:main.c        ****             {
1098:main.c        ****                 processed_pedals[main_counter] = 4095;
 3420              		.loc 1 1098 0
 3421 0cc8 8A4B     		ldr	r3, .L196
 3422 0cca 1B78     		ldrb	r3, [r3]
 3423 0ccc DBB2     		uxtb	r3, r3
 3424 0cce 1A46     		mov	r2, r3
 3425 0cd0 894B     		ldr	r3, .L196+4
 3426 0cd2 40F6FF71 		movw	r1, #4095
 3427 0cd6 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3428              	.L108:
1099:main.c        ****             }
1100:main.c        ****             //invert the ones that are sensing rotation backwards
1101:main.c        ****             if (pedal_inverted[main_counter])
 3429              		.loc 1 1101 0
 3430 0cda 864B     		ldr	r3, .L196
 3431 0cdc 1B78     		ldrb	r3, [r3]
 3432 0cde DBB2     		uxtb	r3, r3
 3433 0ce0 1A46     		mov	r2, r3
 3434 0ce2 864B     		ldr	r3, .L196+8
 3435 0ce4 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3436 0ce6 002B     		cmp	r3, #0
 3437 0ce8 11D0     		beq	.L109
1102:main.c        ****             {
1103:main.c        ****                 processed_pedals[main_counter] = 4095 - processed_pedals[main_counter];
 3438              		.loc 1 1103 0
 3439 0cea 824B     		ldr	r3, .L196
 3440 0cec 1B78     		ldrb	r3, [r3]
 3441 0cee DBB2     		uxtb	r3, r3
 3442 0cf0 1A46     		mov	r2, r3
 3443 0cf2 804B     		ldr	r3, .L196
 3444 0cf4 1B78     		ldrb	r3, [r3]
 3445 0cf6 DBB2     		uxtb	r3, r3
 3446 0cf8 1946     		mov	r1, r3
 3447 0cfa 7F4B     		ldr	r3, .L196+4
 3448 0cfc 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3449 0d00 C3F57F63 		rsb	r3, r3, #4080
 3450 0d04 0F33     		adds	r3, r3, #15
 3451 0d06 99B2     		uxth	r1, r3
 3452 0d08 7B4B     		ldr	r3, .L196+4
 3453 0d0a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3454              	.L109:
1104:main.c        ****             }
1105:main.c        ****             
1106:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
1107:main.c        ****             {
1108:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
1109:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
1110:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 82


1111:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 3455              		.loc 1 1111 0
 3456 0d0e 794B     		ldr	r3, .L196
 3457 0d10 1B78     		ldrb	r3, [r3]
 3458 0d12 DBB2     		uxtb	r3, r3
 3459 0d14 1C46     		mov	r4, r3
 3460 0d16 774B     		ldr	r3, .L196
 3461 0d18 1B78     		ldrb	r3, [r3]
 3462 0d1a DBB2     		uxtb	r3, r3
 3463 0d1c 1A46     		mov	r2, r3
 3464 0d1e 764B     		ldr	r3, .L196+4
 3465 0d20 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3466 0d24 1846     		mov	r0, r3
 3467 0d26 FFF7FEFF 		bl	__aeabi_ui2f
 3468 0d2a 0346     		mov	r3, r0
 3469 0d2c 7449     		ldr	r1, .L196+12
 3470 0d2e 1846     		mov	r0, r3
 3471 0d30 FFF7FEFF 		bl	__aeabi_fmul
 3472 0d34 0346     		mov	r3, r0
 3473 0d36 1A46     		mov	r2, r3
 3474 0d38 724B     		ldr	r3, .L196+16
 3475 0d3a 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
1112:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[pedal_cc_assignments[main_counter]] 
 3476              		.loc 1 1112 0
 3477 0d3e 6D4B     		ldr	r3, .L196
 3478 0d40 1B78     		ldrb	r3, [r3]
 3479 0d42 DBB2     		uxtb	r3, r3
 3480 0d44 1C46     		mov	r4, r3
 3481 0d46 6B4B     		ldr	r3, .L196
 3482 0d48 1B78     		ldrb	r3, [r3]
 3483 0d4a DBB2     		uxtb	r3, r3
 3484 0d4c 1A46     		mov	r2, r3
 3485 0d4e 6E4B     		ldr	r3, .L196+20
 3486 0d50 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3487 0d52 1A46     		mov	r2, r3
 3488 0d54 684B     		ldr	r3, .L196+4
 3489 0d56 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3490 0d5a 1846     		mov	r0, r3
 3491 0d5c FFF7FEFF 		bl	__aeabi_ui2f
 3492 0d60 0346     		mov	r3, r0
 3493 0d62 4FF07651 		mov	r1, #1031798784
 3494 0d66 1846     		mov	r0, r3
 3495 0d68 FFF7FEFF 		bl	__aeabi_fmul
 3496 0d6c 0346     		mov	r3, r0
 3497 0d6e 1846     		mov	r0, r3
 3498 0d70 FFF7FEFF 		bl	__aeabi_f2uiz
 3499 0d74 0346     		mov	r3, r0
 3500 0d76 DAB2     		uxtb	r2, r3
 3501 0d78 644B     		ldr	r3, .L196+24
 3502 0d7a 1A55     		strb	r2, [r3, r4]
1113:main.c        ****             pedals7bit[main_counter] = pedals8bit[main_counter] >> 1;
 3503              		.loc 1 1113 0
 3504 0d7c 5D4B     		ldr	r3, .L196
 3505 0d7e 1B78     		ldrb	r3, [r3]
 3506 0d80 DBB2     		uxtb	r3, r3
 3507 0d82 1A46     		mov	r2, r3
 3508 0d84 5B4B     		ldr	r3, .L196
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 83


 3509 0d86 1B78     		ldrb	r3, [r3]
 3510 0d88 DBB2     		uxtb	r3, r3
 3511 0d8a 1946     		mov	r1, r3
 3512 0d8c 5F4B     		ldr	r3, .L196+24
 3513 0d8e 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3514 0d90 5B08     		lsrs	r3, r3, #1
 3515 0d92 D9B2     		uxtb	r1, r3
 3516 0d94 5E4B     		ldr	r3, .L196+28
 3517 0d96 9954     		strb	r1, [r3, r2]
1114:main.c        ****             if (pedals7bit[main_counter] != prevPedals7bit[main_counter])
 3518              		.loc 1 1114 0
 3519 0d98 564B     		ldr	r3, .L196
 3520 0d9a 1B78     		ldrb	r3, [r3]
 3521 0d9c DBB2     		uxtb	r3, r3
 3522 0d9e 1A46     		mov	r2, r3
 3523 0da0 5B4B     		ldr	r3, .L196+28
 3524 0da2 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3525 0da4 534B     		ldr	r3, .L196
 3526 0da6 1B78     		ldrb	r3, [r3]
 3527 0da8 DBB2     		uxtb	r3, r3
 3528 0daa 1946     		mov	r1, r3
 3529 0dac 594B     		ldr	r3, .L196+32
 3530 0dae 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3531 0db0 9A42     		cmp	r2, r3
 3532 0db2 0ED0     		beq	.L110
1115:main.c        ****             {
1116:main.c        ****                 sendMIDIControlChange(main_counter + 14, (pedals7bit[main_counter]), 1);
 3533              		.loc 1 1116 0
 3534 0db4 4F4B     		ldr	r3, .L196
 3535 0db6 1B78     		ldrb	r3, [r3]
 3536 0db8 DBB2     		uxtb	r3, r3
 3537 0dba 03F10E00 		add	r0, r3, #14
 3538 0dbe 4D4B     		ldr	r3, .L196
 3539 0dc0 1B78     		ldrb	r3, [r3]
 3540 0dc2 DBB2     		uxtb	r3, r3
 3541 0dc4 1A46     		mov	r2, r3
 3542 0dc6 524B     		ldr	r3, .L196+28
 3543 0dc8 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3544 0dca 0122     		movs	r2, #1
 3545 0dcc 1946     		mov	r1, r3
 3546 0dce FFF7FEFF 		bl	sendMIDIControlChange
 3547              	.L110:
1117:main.c        ****             }
1118:main.c        ****             prevPedals7bit[main_counter] = pedals7bit[main_counter];
 3548              		.loc 1 1118 0
 3549 0dd2 484B     		ldr	r3, .L196
 3550 0dd4 1B78     		ldrb	r3, [r3]
 3551 0dd6 DBB2     		uxtb	r3, r3
 3552 0dd8 1A46     		mov	r2, r3
 3553 0dda 464B     		ldr	r3, .L196
 3554 0ddc 1B78     		ldrb	r3, [r3]
 3555 0dde DBB2     		uxtb	r3, r3
 3556 0de0 1946     		mov	r1, r3
 3557 0de2 4B4B     		ldr	r3, .L196+28
 3558 0de4 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 3559 0de6 4B4B     		ldr	r3, .L196+32
 3560 0de8 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 84


1119:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 3561              		.loc 1 1119 0
 3562 0dea 424B     		ldr	r3, .L196
 3563 0dec 1B78     		ldrb	r3, [r3]
 3564 0dee DBB2     		uxtb	r3, r3
 3565 0df0 1A46     		mov	r2, r3
 3566 0df2 404B     		ldr	r3, .L196
 3567 0df4 1B78     		ldrb	r3, [r3]
 3568 0df6 DBB2     		uxtb	r3, r3
 3569 0df8 1946     		mov	r1, r3
 3570 0dfa 3F4B     		ldr	r3, .L196+4
 3571 0dfc 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3572 0e00 454B     		ldr	r3, .L196+36
 3573 0e02 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3574              	.LBE22:
 3575 0e06 3DE0     		b	.L111
 3576              	.L105:
1120:main.c        ****         }
1121:main.c        ****         else
1122:main.c        ****         {
1123:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 3577              		.loc 1 1123 0
 3578 0e08 444B     		ldr	r3, .L196+40
 3579 0e0a 1B88     		ldrh	r3, [r3]
 3580 0e0c 1846     		mov	r0, r3
 3581 0e0e FFF7FEFF 		bl	__aeabi_ui2f
 3582 0e12 0346     		mov	r3, r0
 3583 0e14 4249     		ldr	r1, .L196+44
 3584 0e16 1846     		mov	r0, r3
 3585 0e18 FFF7FEFF 		bl	__aeabi_fmul
 3586 0e1c 0346     		mov	r3, r0
 3587 0e1e 1846     		mov	r0, r3
 3588 0e20 FFF7FEFF 		bl	__aeabi_f2iz
 3589 0e24 0346     		mov	r3, r0
 3590 0e26 1AB2     		sxth	r2, r3
 3591 0e28 3E4B     		ldr	r3, .L196+48
 3592 0e2a 1A80     		strh	r2, [r3]	@ movhi
1124:main.c        **** 
1125:main.c        ****             if (processed_volumePedal < 0)
 3593              		.loc 1 1125 0
 3594 0e2c 3D4B     		ldr	r3, .L196+48
 3595 0e2e B3F90030 		ldrsh	r3, [r3]
 3596 0e32 002B     		cmp	r3, #0
 3597 0e34 03DA     		bge	.L112
1126:main.c        ****             {
1127:main.c        ****                 processed_volumePedal = 0;
 3598              		.loc 1 1127 0
 3599 0e36 3B4B     		ldr	r3, .L196+48
 3600 0e38 0022     		movs	r2, #0
 3601 0e3a 1A80     		strh	r2, [r3]	@ movhi
 3602 0e3c 09E0     		b	.L113
 3603              	.L112:
1128:main.c        ****             }
1129:main.c        ****             else if (processed_volumePedal > 4095)
 3604              		.loc 1 1129 0
 3605 0e3e 394B     		ldr	r3, .L196+48
 3606 0e40 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 85


 3607 0e44 B3F5805F 		cmp	r3, #4096
 3608 0e48 03DB     		blt	.L113
1130:main.c        ****             {
1131:main.c        ****                  processed_volumePedal = 4095;
 3609              		.loc 1 1131 0
 3610 0e4a 364B     		ldr	r3, .L196+48
 3611 0e4c 40F6FF72 		movw	r2, #4095
 3612 0e50 1A80     		strh	r2, [r3]	@ movhi
 3613              	.L113:
1132:main.c        ****             }
1133:main.c        ****             u7bit_volumePedal = processed_volumePedal >> 5;
 3614              		.loc 1 1133 0
 3615 0e52 344B     		ldr	r3, .L196+48
 3616 0e54 B3F90030 		ldrsh	r3, [r3]
 3617 0e58 5B11     		asrs	r3, r3, #5
 3618 0e5a 1BB2     		sxth	r3, r3
 3619 0e5c DAB2     		uxtb	r2, r3
 3620 0e5e 324B     		ldr	r3, .L196+52
 3621 0e60 1A70     		strb	r2, [r3]
1134:main.c        ****             if ( u7bit_volumePedal != prev_7bit_volumePedal)
 3622              		.loc 1 1134 0
 3623 0e62 314B     		ldr	r3, .L196+52
 3624 0e64 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3625 0e66 314B     		ldr	r3, .L196+56
 3626 0e68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3627 0e6a 9A42     		cmp	r2, r3
 3628 0e6c 06D0     		beq	.L114
1135:main.c        ****             {
1136:main.c        ****                 //uint16_t tempPedal = processed_volumePedal;
1137:main.c        ****                 
1138:main.c        ****                 sendMIDIControlChange(13, u7bit_volumePedal, 0);
 3629              		.loc 1 1138 0
 3630 0e6e 2E4B     		ldr	r3, .L196+52
 3631 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3632 0e72 0022     		movs	r2, #0
 3633 0e74 1946     		mov	r1, r3
 3634 0e76 0D20     		movs	r0, #13
 3635 0e78 FFF7FEFF 		bl	sendMIDIControlChange
 3636              	.L114:
1139:main.c        ****                 //sendMIDIControlChange(22, ( tempPedal & 127), 0);
1140:main.c        ****             }
1141:main.c        ****              //prev_processed_volumePedal = processed_volumePedal;
1142:main.c        ****             prev_7bit_volumePedal = u7bit_volumePedal;
 3637              		.loc 1 1142 0
 3638 0e7c 2A4B     		ldr	r3, .L196+52
 3639 0e7e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3640 0e80 2A4B     		ldr	r3, .L196+56
 3641 0e82 1A70     		strb	r2, [r3]
 3642              	.L111:
1143:main.c        ****         }
1144:main.c        ****         
1145:main.c        ****         main_counter++;
 3643              		.loc 1 1145 0
 3644 0e84 1B4B     		ldr	r3, .L196
 3645 0e86 1B78     		ldrb	r3, [r3]
 3646 0e88 DBB2     		uxtb	r3, r3
 3647 0e8a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 86


 3648 0e8c DAB2     		uxtb	r2, r3
 3649 0e8e 194B     		ldr	r3, .L196
 3650 0e90 1A70     		strb	r2, [r3]
1146:main.c        **** 
1147:main.c        ****         if (main_counter > 11)
 3651              		.loc 1 1147 0
 3652 0e92 184B     		ldr	r3, .L196
 3653 0e94 1B78     		ldrb	r3, [r3]
 3654 0e96 DBB2     		uxtb	r3, r3
 3655 0e98 0B2B     		cmp	r3, #11
 3656 0e9a 02D9     		bls	.L115
1148:main.c        ****         {
1149:main.c        ****             main_counter = 0;
 3657              		.loc 1 1149 0
 3658 0e9c 154B     		ldr	r3, .L196
 3659 0e9e 0022     		movs	r2, #0
 3660 0ea0 1A70     		strb	r2, [r3]
 3661              	.L115:
1150:main.c        ****         }
1151:main.c        ****         testpin3_Write(0);
 3662              		.loc 1 1151 0
 3663 0ea2 0020     		movs	r0, #0
 3664 0ea4 FFF7FEFF 		bl	testpin3_Write
1152:main.c        **** 
1153:main.c        ****         testpin5_Write(1);
 3665              		.loc 1 1153 0
 3666 0ea8 0120     		movs	r0, #1
 3667 0eaa FFF7FEFF 		bl	testpin5_Write
1154:main.c        ****         
1155:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 3668              		.loc 1 1155 0
 3669 0eae 204B     		ldr	r3, .L196+60
 3670 0eb0 1B78     		ldrb	r3, [r3]
 3671 0eb2 DBB2     		uxtb	r3, r3
 3672 0eb4 002B     		cmp	r3, #0
 3673 0eb6 0CBF     		ite	eq
 3674 0eb8 0123     		moveq	r3, #1
 3675 0eba 0023     		movne	r3, #0
 3676 0ebc DBB2     		uxtb	r3, r3
 3677 0ebe 1D4A     		ldr	r2, .L196+64
 3678 0ec0 DB00     		lsls	r3, r3, #3
 3679 0ec2 1344     		add	r3, r3, r2
 3680 0ec4 9B79     		ldrb	r3, [r3, #6]
 3681 0ec6 DBB2     		uxtb	r3, r3
 3682 0ec8 FE2B     		cmp	r3, #254
 3683 0eca 40F08381 		bne	.L116
 3684              		.loc 1 1155 0 is_stmt 0 discriminator 1
 3685 0ece 184B     		ldr	r3, .L196+60
 3686 0ed0 1B78     		ldrb	r3, [r3]
 3687 0ed2 DBB2     		uxtb	r3, r3
 3688 0ed4 002B     		cmp	r3, #0
 3689 0ed6 0CBF     		ite	eq
 3690 0ed8 0123     		moveq	r3, #1
 3691 0eda 0023     		movne	r3, #0
 3692 0edc DBB2     		uxtb	r3, r3
 3693 0ede 154A     		ldr	r2, .L196+64
 3694 0ee0 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 87


 3695 0ee2 1344     		add	r3, r3, r2
 3696 0ee4 DB79     		ldrb	r3, [r3, #7]
 3697 0ee6 DBB2     		uxtb	r3, r3
 3698 0ee8 FD2B     		cmp	r3, #253
 3699 0eea 40F07381 		bne	.L116
 3700              	.LBB23:
1156:main.c        ****         {
1157:main.c        ****             for (int i = 0; i < NUM_SLIDERS; i++)
 3701              		.loc 1 1157 0 is_stmt 1
 3702 0eee 0023     		movs	r3, #0
 3703 0ef0 3B67     		str	r3, [r7, #112]
 3704 0ef2 6BE1     		b	.L117
 3705              	.L197:
 3706              		.align	2
 3707              	.L196:
 3708 0ef4 00000000 		.word	main_counter
 3709 0ef8 00000000 		.word	processed_pedals
 3710 0efc 00000000 		.word	pedal_inverted
 3711 0f00 01088039 		.word	964691969
 3712 0f04 00000000 		.word	pedals_float
 3713 0f08 00000000 		.word	pedal_cc_assignments
 3714 0f0c 00000000 		.word	pedals8bit
 3715 0f10 00000000 		.word	pedals7bit
 3716 0f14 00000000 		.word	prevPedals7bit
 3717 0f18 00000000 		.word	prev_processed_pedals
 3718 0f1c 00000000 		.word	volumePedal
 3719 0f20 C5F1803F 		.word	1065415109
 3720 0f24 00000000 		.word	processed_volumePedal
 3721 0f28 00000000 		.word	u7bit_volumePedal
 3722 0f2c 00000000 		.word	prev_7bit_volumePedal
 3723 0f30 00000000 		.word	currentBarBuffer
 3724 0f34 00000000 		.word	rxBufferBar
 3725              	.L128:
1158:main.c        ****             {
1159:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 3726              		.loc 1 1159 0
 3727 0f38 A94B     		ldr	r3, .L198
 3728 0f3a 1B78     		ldrb	r3, [r3]
 3729 0f3c DBB2     		uxtb	r3, r3
 3730 0f3e 002B     		cmp	r3, #0
 3731 0f40 0CBF     		ite	eq
 3732 0f42 0123     		moveq	r3, #1
 3733 0f44 0023     		movne	r3, #0
 3734 0f46 DBB2     		uxtb	r3, r3
 3735 0f48 1A46     		mov	r2, r3
 3736 0f4a 3B6F     		ldr	r3, [r7, #112]
 3737 0f4c 5B00     		lsls	r3, r3, #1
 3738 0f4e A549     		ldr	r1, .L198+4
 3739 0f50 D200     		lsls	r2, r2, #3
 3740 0f52 0A44     		add	r2, r2, r1
 3741 0f54 1344     		add	r3, r3, r2
 3742 0f56 1B78     		ldrb	r3, [r3]
 3743 0f58 DBB2     		uxtb	r3, r3
 3744 0f5a 9BB2     		uxth	r3, r3
 3745 0f5c 1B02     		lsls	r3, r3, #8
 3746 0f5e 9AB2     		uxth	r2, r3
 3747 0f60 9F4B     		ldr	r3, .L198
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 88


 3748 0f62 1B78     		ldrb	r3, [r3]
 3749 0f64 DBB2     		uxtb	r3, r3
 3750 0f66 002B     		cmp	r3, #0
 3751 0f68 0CBF     		ite	eq
 3752 0f6a 0123     		moveq	r3, #1
 3753 0f6c 0023     		movne	r3, #0
 3754 0f6e DBB2     		uxtb	r3, r3
 3755 0f70 1946     		mov	r1, r3
 3756 0f72 3B6F     		ldr	r3, [r7, #112]
 3757 0f74 5B00     		lsls	r3, r3, #1
 3758 0f76 0133     		adds	r3, r3, #1
 3759 0f78 9A48     		ldr	r0, .L198+4
 3760 0f7a C900     		lsls	r1, r1, #3
 3761 0f7c 0144     		add	r1, r1, r0
 3762 0f7e 0B44     		add	r3, r3, r1
 3763 0f80 1B78     		ldrb	r3, [r3]
 3764 0f82 DBB2     		uxtb	r3, r3
 3765 0f84 9BB2     		uxth	r3, r3
 3766 0f86 1344     		add	r3, r3, r2
 3767 0f88 99B2     		uxth	r1, r3
 3768 0f8a 974A     		ldr	r2, .L198+8
 3769 0f8c 3B6F     		ldr	r3, [r7, #112]
 3770 0f8e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1160:main.c        ****                 //
1161:main.c        ****                 if(bar[i] != prevBar[i])
 3771              		.loc 1 1161 0
 3772 0f92 954A     		ldr	r2, .L198+8
 3773 0f94 3B6F     		ldr	r3, [r7, #112]
 3774 0f96 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3775 0f9a 9AB2     		uxth	r2, r3
 3776 0f9c 9349     		ldr	r1, .L198+12
 3777 0f9e 3B6F     		ldr	r3, [r7, #112]
 3778 0fa0 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3779 0fa4 9BB2     		uxth	r3, r3
 3780 0fa6 9A42     		cmp	r2, r3
 3781 0fa8 00F00481 		beq	.L118
1162:main.c        ****                 {
1163:main.c        ****     				
1164:main.c        ****                     if ((bar[i] == 65535) || (bar[i] > fretMeasurements[i][0]))
 3782              		.loc 1 1164 0
 3783 0fac 8E4A     		ldr	r2, .L198+8
 3784 0fae 3B6F     		ldr	r3, [r7, #112]
 3785 0fb0 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3786 0fb4 9BB2     		uxth	r3, r3
 3787 0fb6 4FF6FF72 		movw	r2, #65535
 3788 0fba 9342     		cmp	r3, r2
 3789 0fbc 0ED0     		beq	.L119
 3790              		.loc 1 1164 0 is_stmt 0 discriminator 1
 3791 0fbe 8A4A     		ldr	r2, .L198+8
 3792 0fc0 3B6F     		ldr	r3, [r7, #112]
 3793 0fc2 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3794 0fc6 99B2     		uxth	r1, r3
 3795 0fc8 8948     		ldr	r0, .L198+16
 3796 0fca 3A6F     		ldr	r2, [r7, #112]
 3797 0fcc 1346     		mov	r3, r2
 3798 0fce 5B00     		lsls	r3, r3, #1
 3799 0fd0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 89


 3800 0fd2 DB00     		lsls	r3, r3, #3
 3801 0fd4 0344     		add	r3, r3, r0
 3802 0fd6 1B88     		ldrh	r3, [r3]
 3803 0fd8 9942     		cmp	r1, r3
 3804 0fda 06D9     		bls	.L120
 3805              	.L119:
1165:main.c        ****     				{
1166:main.c        ****     					stringMappedPositions[i] = 1.0f;
 3806              		.loc 1 1166 0 is_stmt 1
 3807 0fdc 854A     		ldr	r2, .L198+20
 3808 0fde 3B6F     		ldr	r3, [r7, #112]
 3809 0fe0 4FF07E51 		mov	r1, #1065353216
 3810 0fe4 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3811 0fe8 AAE0     		b	.L121
 3812              	.L120:
1167:main.c        ****     				}
1168:main.c        ****                     else if (bar[i] > fretMeasurements[i][NUM_FRET_MEASUREMENTS-1])
 3813              		.loc 1 1168 0
 3814 0fea 7F4A     		ldr	r2, .L198+8
 3815 0fec 3B6F     		ldr	r3, [r7, #112]
 3816 0fee 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3817 0ff2 99B2     		uxth	r1, r3
 3818 0ff4 7E48     		ldr	r0, .L198+16
 3819 0ff6 3A6F     		ldr	r2, [r7, #112]
 3820 0ff8 1346     		mov	r3, r2
 3821 0ffa 5B00     		lsls	r3, r3, #1
 3822 0ffc 1344     		add	r3, r3, r2
 3823 0ffe DB00     		lsls	r3, r3, #3
 3824 1000 0344     		add	r3, r3, r0
 3825 1002 1633     		adds	r3, r3, #22
 3826 1004 1B88     		ldrh	r3, [r3]
 3827 1006 9942     		cmp	r1, r3
 3828 1008 67D9     		bls	.L122
 3829              	.LBB24:
1169:main.c        ****                     {
1170:main.c        ****                         for (int j = 0; j < NUM_FRET_MEASUREMENTS-1; j++)
 3830              		.loc 1 1170 0
 3831 100a 0023     		movs	r3, #0
 3832 100c FB66     		str	r3, [r7, #108]
 3833 100e 60E0     		b	.L123
 3834              	.L126:
1171:main.c        ****                         {
1172:main.c        ****                             if ((bar[i] <=  fretMeasurements[i][j]) && (bar[i] >  fretMeasurements[
 3835              		.loc 1 1172 0
 3836 1010 754A     		ldr	r2, .L198+8
 3837 1012 3B6F     		ldr	r3, [r7, #112]
 3838 1014 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3839 1018 99B2     		uxth	r1, r3
 3840 101a 7548     		ldr	r0, .L198+16
 3841 101c 3A6F     		ldr	r2, [r7, #112]
 3842 101e 1346     		mov	r3, r2
 3843 1020 5B00     		lsls	r3, r3, #1
 3844 1022 1344     		add	r3, r3, r2
 3845 1024 9B00     		lsls	r3, r3, #2
 3846 1026 FA6E     		ldr	r2, [r7, #108]
 3847 1028 1344     		add	r3, r3, r2
 3848 102a 30F81330 		ldrh	r3, [r0, r3, lsl #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 90


 3849 102e 9942     		cmp	r1, r3
 3850 1030 4CD8     		bhi	.L124
 3851              		.loc 1 1172 0 is_stmt 0 discriminator 1
 3852 1032 6D4A     		ldr	r2, .L198+8
 3853 1034 3B6F     		ldr	r3, [r7, #112]
 3854 1036 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3855 103a 99B2     		uxth	r1, r3
 3856 103c FB6E     		ldr	r3, [r7, #108]
 3857 103e 581C     		adds	r0, r3, #1
 3858 1040 6B4C     		ldr	r4, .L198+16
 3859 1042 3A6F     		ldr	r2, [r7, #112]
 3860 1044 1346     		mov	r3, r2
 3861 1046 5B00     		lsls	r3, r3, #1
 3862 1048 1344     		add	r3, r3, r2
 3863 104a 9B00     		lsls	r3, r3, #2
 3864 104c 0344     		add	r3, r3, r0
 3865 104e 34F81330 		ldrh	r3, [r4, r3, lsl #1]
 3866 1052 9942     		cmp	r1, r3
 3867 1054 3AD9     		bls	.L124
1173:main.c        ****                             {
1174:main.c        ****                                 stringMappedPositions[i] = map((float)bar[i], fretMeasurements[i][j
 3868              		.loc 1 1174 0 is_stmt 1
 3869 1056 644A     		ldr	r2, .L198+8
 3870 1058 3B6F     		ldr	r3, [r7, #112]
 3871 105a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3872 105e 9BB2     		uxth	r3, r3
 3873 1060 1846     		mov	r0, r3
 3874 1062 FFF7FEFF 		bl	__aeabi_ui2f
 3875 1066 0446     		mov	r4, r0
 3876 1068 6149     		ldr	r1, .L198+16
 3877 106a 3A6F     		ldr	r2, [r7, #112]
 3878 106c 1346     		mov	r3, r2
 3879 106e 5B00     		lsls	r3, r3, #1
 3880 1070 1344     		add	r3, r3, r2
 3881 1072 9B00     		lsls	r3, r3, #2
 3882 1074 FA6E     		ldr	r2, [r7, #108]
 3883 1076 1344     		add	r3, r3, r2
 3884 1078 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 3885 107c 1846     		mov	r0, r3
 3886 107e FFF7FEFF 		bl	__aeabi_ui2f
 3887 1082 0546     		mov	r5, r0
 3888 1084 FB6E     		ldr	r3, [r7, #108]
 3889 1086 591C     		adds	r1, r3, #1
 3890 1088 5948     		ldr	r0, .L198+16
 3891 108a 3A6F     		ldr	r2, [r7, #112]
 3892 108c 1346     		mov	r3, r2
 3893 108e 5B00     		lsls	r3, r3, #1
 3894 1090 1344     		add	r3, r3, r2
 3895 1092 9B00     		lsls	r3, r3, #2
 3896 1094 0B44     		add	r3, r3, r1
 3897 1096 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 3898 109a 1846     		mov	r0, r3
 3899 109c FFF7FEFF 		bl	__aeabi_ui2f
 3900 10a0 554A     		ldr	r2, .L198+24
 3901 10a2 FB6E     		ldr	r3, [r7, #108]
 3902 10a4 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3903 10a8 FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 91


 3904 10aa 0133     		adds	r3, r3, #1
 3905 10ac 524A     		ldr	r2, .L198+24
 3906 10ae 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3907 10b2 0093     		str	r3, [sp]	@ float
 3908 10b4 0B46     		mov	r3, r1
 3909 10b6 0246     		mov	r2, r0
 3910 10b8 2946     		mov	r1, r5
 3911 10ba 2046     		mov	r0, r4
 3912 10bc FFF7FEFF 		bl	map
 3913 10c0 0146     		mov	r1, r0
 3914 10c2 4C4A     		ldr	r2, .L198+20
 3915 10c4 3B6F     		ldr	r3, [r7, #112]
 3916 10c6 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
1175:main.c        ****                                 break;
 3917              		.loc 1 1175 0
 3918 10ca 39E0     		b	.L121
 3919              	.L124:
1170:main.c        ****                         {
 3920              		.loc 1 1170 0 discriminator 2
 3921 10cc FB6E     		ldr	r3, [r7, #108]
 3922 10ce 0133     		adds	r3, r3, #1
 3923 10d0 FB66     		str	r3, [r7, #108]
 3924              	.L123:
1170:main.c        ****                         {
 3925              		.loc 1 1170 0 is_stmt 0 discriminator 1
 3926 10d2 FB6E     		ldr	r3, [r7, #108]
 3927 10d4 0A2B     		cmp	r3, #10
 3928 10d6 9BDD     		ble	.L126
 3929 10d8 32E0     		b	.L121
 3930              	.L122:
 3931              	.LBE24:
1176:main.c        ****                             }
1177:main.c        ****                         }
1178:main.c        ****                     }
1179:main.c        ****                     else
1180:main.c        ****                     {
1181:main.c        ****                         stringMappedPositions[i] = map((float)bar[i], fretMeasurements[i][NUM_FRET_
 3932              		.loc 1 1181 0 is_stmt 1
 3933 10da 434A     		ldr	r2, .L198+8
 3934 10dc 3B6F     		ldr	r3, [r7, #112]
 3935 10de 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3936 10e2 9BB2     		uxth	r3, r3
 3937 10e4 1846     		mov	r0, r3
 3938 10e6 FFF7FEFF 		bl	__aeabi_ui2f
 3939 10ea 0446     		mov	r4, r0
 3940 10ec 4049     		ldr	r1, .L198+16
 3941 10ee 3A6F     		ldr	r2, [r7, #112]
 3942 10f0 1346     		mov	r3, r2
 3943 10f2 5B00     		lsls	r3, r3, #1
 3944 10f4 1344     		add	r3, r3, r2
 3945 10f6 DB00     		lsls	r3, r3, #3
 3946 10f8 0B44     		add	r3, r3, r1
 3947 10fa 1433     		adds	r3, r3, #20
 3948 10fc 1B88     		ldrh	r3, [r3]
 3949 10fe 1846     		mov	r0, r3
 3950 1100 FFF7FEFF 		bl	__aeabi_ui2f
 3951 1104 0546     		mov	r5, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 92


 3952 1106 3A49     		ldr	r1, .L198+16
 3953 1108 3A6F     		ldr	r2, [r7, #112]
 3954 110a 1346     		mov	r3, r2
 3955 110c 5B00     		lsls	r3, r3, #1
 3956 110e 1344     		add	r3, r3, r2
 3957 1110 DB00     		lsls	r3, r3, #3
 3958 1112 0B44     		add	r3, r3, r1
 3959 1114 1633     		adds	r3, r3, #22
 3960 1116 1B88     		ldrh	r3, [r3]
 3961 1118 1846     		mov	r0, r3
 3962 111a FFF7FEFF 		bl	__aeabi_ui2f
 3963 111e 0146     		mov	r1, r0
 3964 1120 354B     		ldr	r3, .L198+24
 3965 1122 9A6A     		ldr	r2, [r3, #40]	@ float
 3966 1124 344B     		ldr	r3, .L198+24
 3967 1126 DB6A     		ldr	r3, [r3, #44]	@ float
 3968 1128 0093     		str	r3, [sp]	@ float
 3969 112a 1346     		mov	r3, r2
 3970 112c 0A46     		mov	r2, r1
 3971 112e 2946     		mov	r1, r5
 3972 1130 2046     		mov	r0, r4
 3973 1132 FFF7FEFF 		bl	map
 3974 1136 0146     		mov	r1, r0
 3975 1138 2E4A     		ldr	r2, .L198+20
 3976 113a 3B6F     		ldr	r3, [r7, #112]
 3977 113c 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3978              	.L121:
1182:main.c        ****                     }
1183:main.c        **** 
1184:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
 3979              		.loc 1 1184 0
 3980 1140 2C4A     		ldr	r2, .L198+20
 3981 1142 3B6F     		ldr	r3, [r7, #112]
 3982 1144 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3983 1148 1946     		mov	r1, r3
 3984 114a 4FF07E50 		mov	r0, #1065353216
 3985 114e FFF7FEFF 		bl	__aeabi_fdiv
 3986 1152 0346     		mov	r3, r0
 3987 1154 1946     		mov	r1, r3
 3988 1156 294A     		ldr	r2, .L198+28
 3989 1158 3B6F     		ldr	r3, [r7, #112]
 3990 115a 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
1185:main.c        ****                     if (midiBarSendOn)
 3991              		.loc 1 1185 0
 3992 115e 284B     		ldr	r3, .L198+32
 3993 1160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3994 1162 002B     		cmp	r3, #0
 3995 1164 26D0     		beq	.L118
 3996              	.LBB25:
1186:main.c        ****                     {
1187:main.c        ****                         int16_t MidiBarPosition = (invStringMappedPositions[i] * 8192.0f)-8192.0f;
 3997              		.loc 1 1187 0
 3998 1166 254A     		ldr	r2, .L198+28
 3999 1168 3B6F     		ldr	r3, [r7, #112]
 4000 116a 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4001 116e 4FF08C41 		mov	r1, #1174405120
 4002 1172 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 93


 4003 1174 FFF7FEFF 		bl	__aeabi_fmul
 4004 1178 0346     		mov	r3, r0
 4005 117a 4FF08C41 		mov	r1, #1174405120
 4006 117e 1846     		mov	r0, r3
 4007 1180 FFF7FEFF 		bl	__aeabi_fsub
 4008 1184 0346     		mov	r3, r0
 4009 1186 1846     		mov	r0, r3
 4010 1188 FFF7FEFF 		bl	__aeabi_f2iz
 4011 118c 0346     		mov	r3, r0
 4012 118e A7F86A30 		strh	r3, [r7, #106]	@ movhi
1188:main.c        ****                         if (MidiBarPosition> 16383)
 4013              		.loc 1 1188 0
 4014 1192 B7F96A30 		ldrsh	r3, [r7, #106]
 4015 1196 B3F5804F 		cmp	r3, #16384
 4016 119a 03DB     		blt	.L127
1189:main.c        ****                         {
1190:main.c        ****                             MidiBarPosition = 16383;
 4017              		.loc 1 1190 0
 4018 119c 43F6FF73 		movw	r3, #16383
 4019 11a0 A7F86A30 		strh	r3, [r7, #106]	@ movhi
 4020              	.L127:
1191:main.c        ****                         }
1192:main.c        ****                         sendMIDIPitchBend(MidiBarPosition, 12+i);
 4021              		.loc 1 1192 0
 4022 11a4 B7F96A20 		ldrsh	r2, [r7, #106]
 4023 11a8 3B6F     		ldr	r3, [r7, #112]
 4024 11aa 0C33     		adds	r3, r3, #12
 4025 11ac 1946     		mov	r1, r3
 4026 11ae 1046     		mov	r0, r2
 4027 11b0 FFF7FEFF 		bl	sendMIDIPitchBend
 4028              	.L118:
 4029              	.LBE25:
1193:main.c        ****                     }
1194:main.c        ****                 }
1195:main.c        ****                 //
1196:main.c        ****                 prevBar[i] = bar[i];
 4030              		.loc 1 1196 0 discriminator 2
 4031 11b4 0C4A     		ldr	r2, .L198+8
 4032 11b6 3B6F     		ldr	r3, [r7, #112]
 4033 11b8 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4034 11bc 99B2     		uxth	r1, r3
 4035 11be 0B4A     		ldr	r2, .L198+12
 4036 11c0 3B6F     		ldr	r3, [r7, #112]
 4037 11c2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1157:main.c        ****             {
 4038              		.loc 1 1157 0 discriminator 2
 4039 11c6 3B6F     		ldr	r3, [r7, #112]
 4040 11c8 0133     		adds	r3, r3, #1
 4041 11ca 3B67     		str	r3, [r7, #112]
 4042              	.L117:
1157:main.c        ****             {
 4043              		.loc 1 1157 0 is_stmt 0 discriminator 1
 4044 11cc 3B6F     		ldr	r3, [r7, #112]
 4045 11ce 012B     		cmp	r3, #1
 4046 11d0 7FF7B2AE 		ble	.L128
 4047              	.L116:
 4048              	.LBE23:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 94


1197:main.c        ****             }
1198:main.c        ****         }
1199:main.c        ****         
1200:main.c        ****         testpin5_Write(0);
 4049              		.loc 1 1200 0 is_stmt 1
 4050 11d4 0020     		movs	r0, #0
 4051 11d6 FFF7FEFF 		bl	testpin5_Write
 4052              	.LBB26:
1201:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 4053              		.loc 1 1201 0
 4054 11da 0023     		movs	r3, #0
 4055 11dc 7B66     		str	r3, [r7, #100]
 4056 11de 2CE0     		b	.L129
 4057              	.L199:
 4058              		.align	2
 4059              	.L198:
 4060 11e0 00000000 		.word	currentBarBuffer
 4061 11e4 00000000 		.word	rxBufferBar
 4062 11e8 00000000 		.word	bar
 4063 11ec 00000000 		.word	prevBar
 4064 11f0 00000000 		.word	fretMeasurements
 4065 11f4 00000000 		.word	stringMappedPositions
 4066 11f8 00000000 		.word	fretScaling
 4067 11fc 00000000 		.word	invStringMappedPositions
 4068 1200 00000000 		.word	midiBarSendOn
 4069              	.L131:
1202:main.c        ****         {
1203:main.c        ****             if (strings[i] != prevStrings[i])
 4070              		.loc 1 1203 0
 4071 1204 514A     		ldr	r2, .L200
 4072 1206 7B6E     		ldr	r3, [r7, #100]
 4073 1208 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4074 120c 9AB2     		uxth	r2, r3
 4075 120e 5049     		ldr	r1, .L200+4
 4076 1210 7B6E     		ldr	r3, [r7, #100]
 4077 1212 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 4078 1216 9BB2     		uxth	r3, r3
 4079 1218 9A42     		cmp	r2, r3
 4080 121a 02D0     		beq	.L130
1204:main.c        ****             {
1205:main.c        ****                 noteEvent(i);
 4081              		.loc 1 1205 0
 4082 121c 786E     		ldr	r0, [r7, #100]
 4083 121e FFF7FEFF 		bl	noteEvent
 4084              	.L130:
1206:main.c        ****             }
1207:main.c        ****             prevStrings[i] = strings[i];
 4085              		.loc 1 1207 0 discriminator 2
 4086 1222 4A4A     		ldr	r2, .L200
 4087 1224 7B6E     		ldr	r3, [r7, #100]
 4088 1226 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4089 122a 99B2     		uxth	r1, r3
 4090 122c 484A     		ldr	r2, .L200+4
 4091 122e 7B6E     		ldr	r3, [r7, #100]
 4092 1230 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1201:main.c        ****         {
 4093              		.loc 1 1201 0 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 95


 4094 1234 7B6E     		ldr	r3, [r7, #100]
 4095 1236 0133     		adds	r3, r3, #1
 4096 1238 7B66     		str	r3, [r7, #100]
 4097              	.L129:
1201:main.c        ****         {
 4098              		.loc 1 1201 0 is_stmt 0 discriminator 1
 4099 123a 464B     		ldr	r3, .L200+8
 4100 123c 1B68     		ldr	r3, [r3]
 4101 123e 7A6E     		ldr	r2, [r7, #100]
 4102 1240 9A42     		cmp	r2, r3
 4103 1242 DFDB     		blt	.L131
 4104              	.LBE26:
1208:main.c        ****         }
1209:main.c        ****        
1210:main.c        ****         scanUI();
 4105              		.loc 1 1210 0 is_stmt 1
 4106 1244 FFF7FEFF 		bl	scanUI
 4107              	.LBB27:
1211:main.c        ****         
1212:main.c        ****         for (int i=  0; i < 4; i++)
 4108              		.loc 1 1212 0
 4109 1248 0023     		movs	r3, #0
 4110 124a 3B66     		str	r3, [r7, #96]
 4111 124c 44E0     		b	.L132
 4112              	.L134:
1213:main.c        ****         {
1214:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)>>4); //divide by 16
 4113              		.loc 1 1214 0
 4114 124e 3B6E     		ldr	r3, [r7, #96]
 4115 1250 9BB2     		uxth	r3, r3
 4116 1252 1846     		mov	r0, r3
 4117 1254 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4118 1258 0346     		mov	r3, r0
 4119 125a 1B11     		asrs	r3, r3, #4
 4120 125c 1BB2     		sxth	r3, r3
 4121 125e D9B2     		uxtb	r1, r3
 4122 1260 3D4A     		ldr	r2, .L200+12
 4123 1262 3B6E     		ldr	r3, [r7, #96]
 4124 1264 1344     		add	r3, r3, r2
 4125 1266 0A46     		mov	r2, r1
 4126 1268 1A70     		strb	r2, [r3]
1215:main.c        ****             
1216:main.c        ****             knobs[i] = 255 - knobs[i];
 4127              		.loc 1 1216 0
 4128 126a 3B4A     		ldr	r2, .L200+12
 4129 126c 3B6E     		ldr	r3, [r7, #96]
 4130 126e 1344     		add	r3, r3, r2
 4131 1270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4132 1272 DB43     		mvns	r3, r3
 4133 1274 D9B2     		uxtb	r1, r3
 4134 1276 384A     		ldr	r2, .L200+12
 4135 1278 3B6E     		ldr	r3, [r7, #96]
 4136 127a 1344     		add	r3, r3, r2
 4137 127c 0A46     		mov	r2, r1
 4138 127e 1A70     		strb	r2, [r3]
1217:main.c        ****             knobs7bit[i] = knobs[i] >> 1;
 4139              		.loc 1 1217 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 96


 4140 1280 354A     		ldr	r2, .L200+12
 4141 1282 3B6E     		ldr	r3, [r7, #96]
 4142 1284 1344     		add	r3, r3, r2
 4143 1286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4144 1288 5B08     		lsrs	r3, r3, #1
 4145 128a D9B2     		uxtb	r1, r3
 4146 128c 334A     		ldr	r2, .L200+16
 4147 128e 3B6E     		ldr	r3, [r7, #96]
 4148 1290 1344     		add	r3, r3, r2
 4149 1292 0A46     		mov	r2, r1
 4150 1294 1A70     		strb	r2, [r3]
1218:main.c        ****             
1219:main.c        ****             if (knobs7bit[i] != prevKnobs7bit[i])
 4151              		.loc 1 1219 0
 4152 1296 314A     		ldr	r2, .L200+16
 4153 1298 3B6E     		ldr	r3, [r7, #96]
 4154 129a 1344     		add	r3, r3, r2
 4155 129c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4156 129e 3049     		ldr	r1, .L200+20
 4157 12a0 3B6E     		ldr	r3, [r7, #96]
 4158 12a2 0B44     		add	r3, r3, r1
 4159 12a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4160 12a6 9A42     		cmp	r2, r3
 4161 12a8 0AD0     		beq	.L133
1220:main.c        ****             {
1221:main.c        ****                 sendMIDIControlChange(i+9, knobs7bit[i], 0);
 4162              		.loc 1 1221 0
 4163 12aa 3B6E     		ldr	r3, [r7, #96]
 4164 12ac 03F10900 		add	r0, r3, #9
 4165 12b0 2A4A     		ldr	r2, .L200+16
 4166 12b2 3B6E     		ldr	r3, [r7, #96]
 4167 12b4 1344     		add	r3, r3, r2
 4168 12b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4169 12b8 0022     		movs	r2, #0
 4170 12ba 1946     		mov	r1, r3
 4171 12bc FFF7FEFF 		bl	sendMIDIControlChange
 4172              	.L133:
1222:main.c        ****             }
1223:main.c        ****             prevKnobs7bit[i] = knobs7bit[i];
 4173              		.loc 1 1223 0 discriminator 2
 4174 12c0 264A     		ldr	r2, .L200+16
 4175 12c2 3B6E     		ldr	r3, [r7, #96]
 4176 12c4 1344     		add	r3, r3, r2
 4177 12c6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4178 12c8 254A     		ldr	r2, .L200+20
 4179 12ca 3B6E     		ldr	r3, [r7, #96]
 4180 12cc 1344     		add	r3, r3, r2
 4181 12ce 0A46     		mov	r2, r1
 4182 12d0 1A70     		strb	r2, [r3]
1212:main.c        ****         {
 4183              		.loc 1 1212 0 discriminator 2
 4184 12d2 3B6E     		ldr	r3, [r7, #96]
 4185 12d4 0133     		adds	r3, r3, #1
 4186 12d6 3B66     		str	r3, [r7, #96]
 4187              	.L132:
1212:main.c        ****         {
 4188              		.loc 1 1212 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 97


 4189 12d8 3B6E     		ldr	r3, [r7, #96]
 4190 12da 032B     		cmp	r3, #3
 4191 12dc B7DD     		ble	.L134
 4192              	.LBE27:
1224:main.c        ****             
1225:main.c        ****         }
1226:main.c        ****         
1227:main.c        ****         testpin4_Write(1);
 4193              		.loc 1 1227 0 is_stmt 1
 4194 12de 0120     		movs	r0, #1
 4195 12e0 FFF7FEFF 		bl	testpin4_Write
 4196              	.LBB28:
1228:main.c        ****         //calculate the pitch of each string based on the current Copedent
1229:main.c        ****         for (int i = 0; i < numStrings; i++)
 4197              		.loc 1 1229 0
 4198 12e4 0023     		movs	r3, #0
 4199 12e6 FB65     		str	r3, [r7, #92]
 4200 12e8 DCE1     		b	.L135
 4201              	.L145:
 4202              	.LBB29:
1230:main.c        ****     	{
1231:main.c        ****     		//interpolate ratios for each of the strings
1232:main.c        ****            
1233:main.c        ****             float myMappedPos;
1234:main.c        ****             if (dualSlider)
 4203              		.loc 1 1234 0
 4204 12ea 1E4B     		ldr	r3, .L200+24
 4205 12ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4206 12ee 002B     		cmp	r3, #0
 4207 12f0 40D0     		beq	.L136
1235:main.c        ****             {
1236:main.c        ****                if ((bar[0] != 65535) && (bar[1] != 65535))
 4208              		.loc 1 1236 0
 4209 12f2 1D4B     		ldr	r3, .L200+28
 4210 12f4 1B88     		ldrh	r3, [r3]	@ movhi
 4211 12f6 9BB2     		uxth	r3, r3
 4212 12f8 4FF6FF72 		movw	r2, #65535
 4213 12fc 9342     		cmp	r3, r2
 4214 12fe 16D0     		beq	.L137
 4215              		.loc 1 1236 0 is_stmt 0 discriminator 1
 4216 1300 194B     		ldr	r3, .L200+28
 4217 1302 5B88     		ldrh	r3, [r3, #2]	@ movhi
 4218 1304 9BB2     		uxth	r3, r3
 4219 1306 4FF6FF72 		movw	r2, #65535
 4220 130a 9342     		cmp	r3, r2
 4221 130c 0FD0     		beq	.L137
1237:main.c        ****                 {
1238:main.c        ****                     myMappedPos = map(i, 2, 7, invStringMappedPositions[0], invStringMappedPosition
 4222              		.loc 1 1238 0 is_stmt 1
 4223 130e F86D     		ldr	r0, [r7, #92]
 4224 1310 FFF7FEFF 		bl	__aeabi_i2f
 4225 1314 154B     		ldr	r3, .L200+32
 4226 1316 1A68     		ldr	r2, [r3]	@ float
 4227 1318 144B     		ldr	r3, .L200+32
 4228 131a 5B68     		ldr	r3, [r3, #4]	@ float
 4229 131c 0093     		str	r3, [sp]	@ float
 4230 131e 1346     		mov	r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 98


 4231 1320 134A     		ldr	r2, .L200+36
 4232 1322 4FF08041 		mov	r1, #1073741824
 4233 1326 FFF7FEFF 		bl	map
 4234 132a B865     		str	r0, [r7, #88]	@ float
 4235 132c 25E0     		b	.L140
 4236              	.L137:
1239:main.c        ****                 }
1240:main.c        ****                 else if (bar[0] != 65535)
 4237              		.loc 1 1240 0
 4238 132e 0E4B     		ldr	r3, .L200+28
 4239 1330 1B88     		ldrh	r3, [r3]	@ movhi
 4240 1332 9BB2     		uxth	r3, r3
 4241 1334 4FF6FF72 		movw	r2, #65535
 4242 1338 9342     		cmp	r3, r2
 4243 133a 03D0     		beq	.L139
1241:main.c        ****                 {
1242:main.c        ****                     myMappedPos = invStringMappedPositions[0];
 4244              		.loc 1 1242 0
 4245 133c 0B4B     		ldr	r3, .L200+32
 4246 133e 1B68     		ldr	r3, [r3]	@ float
 4247 1340 BB65     		str	r3, [r7, #88]	@ float
 4248 1342 1AE0     		b	.L140
 4249              	.L139:
1243:main.c        ****                 }
1244:main.c        ****                 else
1245:main.c        ****                 {
1246:main.c        ****                     myMappedPos = invStringMappedPositions[1];
 4250              		.loc 1 1246 0
 4251 1344 094B     		ldr	r3, .L200+32
 4252 1346 5B68     		ldr	r3, [r3, #4]	@ float
 4253 1348 BB65     		str	r3, [r7, #88]	@ float
 4254 134a 16E0     		b	.L140
 4255              	.L201:
 4256              		.align	2
 4257              	.L200:
 4258 134c 00000000 		.word	strings
 4259 1350 00000000 		.word	prevStrings
 4260 1354 00000000 		.word	numStrings
 4261 1358 00000000 		.word	knobs
 4262 135c 00000000 		.word	knobs7bit
 4263 1360 00000000 		.word	prevKnobs7bit
 4264 1364 00000000 		.word	dualSlider
 4265 1368 00000000 		.word	bar
 4266 136c 00000000 		.word	invStringMappedPositions
 4267 1370 0000E040 		.word	1088421888
 4268              	.L136:
1247:main.c        ****                 }
1248:main.c        ****             }
1249:main.c        ****             else
1250:main.c        ****             {
1251:main.c        ****                 myMappedPos = invStringMappedPositions[0];
 4269              		.loc 1 1251 0
 4270 1374 A94B     		ldr	r3, .L202
 4271 1376 1B68     		ldr	r3, [r3]	@ float
 4272 1378 BB65     		str	r3, [r7, #88]	@ float
 4273              	.L140:
1252:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 99


1253:main.c        **** 
1254:main.c        ****             
1255:main.c        ****     		//then apply those ratios to the fundamental frequencies
1256:main.c        ****     		float tempMIDI = (copedent[necks[currentNeck]][0][i] +
 4274              		.loc 1 1256 0
 4275 137a A94B     		ldr	r3, .L202+4
 4276 137c 1B68     		ldr	r3, [r3]
 4277 137e A94A     		ldr	r2, .L202+8
 4278 1380 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4279 1382 1A46     		mov	r2, r3
 4280 1384 A849     		ldr	r1, .L202+12
 4281 1386 1346     		mov	r3, r2
 4282 1388 5B01     		lsls	r3, r3, #5
 4283 138a 1344     		add	r3, r3, r2
 4284 138c 9B00     		lsls	r3, r3, #2
 4285 138e FA6D     		ldr	r2, [r7, #92]
 4286 1390 1344     		add	r3, r3, r2
 4287 1392 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1257:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4288              		.loc 1 1257 0
 4289 1396 A54B     		ldr	r3, .L202+16
 4290 1398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4291 139a 1A46     		mov	r2, r3
 4292 139c A249     		ldr	r1, .L202+12
 4293 139e 1346     		mov	r3, r2
 4294 13a0 5B01     		lsls	r3, r3, #5
 4295 13a2 1344     		add	r3, r3, r2
 4296 13a4 9B00     		lsls	r3, r3, #2
 4297 13a6 FA6D     		ldr	r2, [r7, #92]
 4298 13a8 1344     		add	r3, r3, r2
 4299 13aa 3033     		adds	r3, r3, #48
 4300 13ac 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4301 13b0 9F4B     		ldr	r3, .L202+20
 4302 13b2 1B68     		ldr	r3, [r3]	@ float
 4303 13b4 1946     		mov	r1, r3
 4304 13b6 1046     		mov	r0, r2
 4305 13b8 FFF7FEFF 		bl	__aeabi_fmul
 4306 13bc 0346     		mov	r3, r0
1256:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4307              		.loc 1 1256 0
 4308 13be 1946     		mov	r1, r3
 4309 13c0 2046     		mov	r0, r4
 4310 13c2 FFF7FEFF 		bl	__aeabi_fadd
 4311 13c6 0346     		mov	r3, r0
 4312 13c8 1C46     		mov	r4, r3
1258:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4313              		.loc 1 1258 0
 4314 13ca 984B     		ldr	r3, .L202+16
 4315 13cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4316 13ce 1A46     		mov	r2, r3
 4317 13d0 9549     		ldr	r1, .L202+12
 4318 13d2 1346     		mov	r3, r2
 4319 13d4 5B01     		lsls	r3, r3, #5
 4320 13d6 1344     		add	r3, r3, r2
 4321 13d8 9B00     		lsls	r3, r3, #2
 4322 13da FA6D     		ldr	r2, [r7, #92]
 4323 13dc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 100


 4324 13de 3C33     		adds	r3, r3, #60
 4325 13e0 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4326 13e4 924B     		ldr	r3, .L202+20
 4327 13e6 5B68     		ldr	r3, [r3, #4]	@ float
 4328 13e8 1946     		mov	r1, r3
 4329 13ea 1046     		mov	r0, r2
 4330 13ec FFF7FEFF 		bl	__aeabi_fmul
 4331 13f0 0346     		mov	r3, r0
1257:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4332              		.loc 1 1257 0
 4333 13f2 1946     		mov	r1, r3
 4334 13f4 2046     		mov	r0, r4
 4335 13f6 FFF7FEFF 		bl	__aeabi_fadd
 4336 13fa 0346     		mov	r3, r0
 4337 13fc 1C46     		mov	r4, r3
1259:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4338              		.loc 1 1259 0
 4339 13fe 8B4B     		ldr	r3, .L202+16
 4340 1400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4341 1402 1A46     		mov	r2, r3
 4342 1404 8849     		ldr	r1, .L202+12
 4343 1406 1346     		mov	r3, r2
 4344 1408 5B01     		lsls	r3, r3, #5
 4345 140a 1344     		add	r3, r3, r2
 4346 140c 9B00     		lsls	r3, r3, #2
 4347 140e FA6D     		ldr	r2, [r7, #92]
 4348 1410 1344     		add	r3, r3, r2
 4349 1412 4833     		adds	r3, r3, #72
 4350 1414 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4351 1418 854B     		ldr	r3, .L202+20
 4352 141a 9B68     		ldr	r3, [r3, #8]	@ float
 4353 141c 1946     		mov	r1, r3
 4354 141e 1046     		mov	r0, r2
 4355 1420 FFF7FEFF 		bl	__aeabi_fmul
 4356 1424 0346     		mov	r3, r0
1258:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4357              		.loc 1 1258 0
 4358 1426 1946     		mov	r1, r3
 4359 1428 2046     		mov	r0, r4
 4360 142a FFF7FEFF 		bl	__aeabi_fadd
 4361 142e 0346     		mov	r3, r0
 4362 1430 1C46     		mov	r4, r3
1260:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4363              		.loc 1 1260 0
 4364 1432 7E4B     		ldr	r3, .L202+16
 4365 1434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4366 1436 1A46     		mov	r2, r3
 4367 1438 7B49     		ldr	r1, .L202+12
 4368 143a 1346     		mov	r3, r2
 4369 143c 5B01     		lsls	r3, r3, #5
 4370 143e 1344     		add	r3, r3, r2
 4371 1440 9B00     		lsls	r3, r3, #2
 4372 1442 FA6D     		ldr	r2, [r7, #92]
 4373 1444 1344     		add	r3, r3, r2
 4374 1446 5433     		adds	r3, r3, #84
 4375 1448 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4376 144c 784B     		ldr	r3, .L202+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 101


 4377 144e DB68     		ldr	r3, [r3, #12]	@ float
 4378 1450 1946     		mov	r1, r3
 4379 1452 1046     		mov	r0, r2
 4380 1454 FFF7FEFF 		bl	__aeabi_fmul
 4381 1458 0346     		mov	r3, r0
1259:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4382              		.loc 1 1259 0
 4383 145a 1946     		mov	r1, r3
 4384 145c 2046     		mov	r0, r4
 4385 145e FFF7FEFF 		bl	__aeabi_fadd
 4386 1462 0346     		mov	r3, r0
 4387 1464 1C46     		mov	r4, r3
1261:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4388              		.loc 1 1261 0
 4389 1466 714B     		ldr	r3, .L202+16
 4390 1468 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4391 146a 1A46     		mov	r2, r3
 4392 146c 6E49     		ldr	r1, .L202+12
 4393 146e 1346     		mov	r3, r2
 4394 1470 5B01     		lsls	r3, r3, #5
 4395 1472 1344     		add	r3, r3, r2
 4396 1474 9B00     		lsls	r3, r3, #2
 4397 1476 FA6D     		ldr	r2, [r7, #92]
 4398 1478 1344     		add	r3, r3, r2
 4399 147a 6033     		adds	r3, r3, #96
 4400 147c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4401 1480 6B4B     		ldr	r3, .L202+20
 4402 1482 1B69     		ldr	r3, [r3, #16]	@ float
 4403 1484 1946     		mov	r1, r3
 4404 1486 1046     		mov	r0, r2
 4405 1488 FFF7FEFF 		bl	__aeabi_fmul
 4406 148c 0346     		mov	r3, r0
1260:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4407              		.loc 1 1260 0
 4408 148e 1946     		mov	r1, r3
 4409 1490 2046     		mov	r0, r4
 4410 1492 FFF7FEFF 		bl	__aeabi_fadd
 4411 1496 0346     		mov	r3, r0
 4412 1498 1C46     		mov	r4, r3
1262:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4413              		.loc 1 1262 0
 4414 149a 644B     		ldr	r3, .L202+16
 4415 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4416 149e 1A46     		mov	r2, r3
 4417 14a0 6149     		ldr	r1, .L202+12
 4418 14a2 1346     		mov	r3, r2
 4419 14a4 5B01     		lsls	r3, r3, #5
 4420 14a6 1344     		add	r3, r3, r2
 4421 14a8 9B00     		lsls	r3, r3, #2
 4422 14aa FA6D     		ldr	r2, [r7, #92]
 4423 14ac 1344     		add	r3, r3, r2
 4424 14ae 7833     		adds	r3, r3, #120
 4425 14b0 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4426 14b4 5E4B     		ldr	r3, .L202+20
 4427 14b6 5B69     		ldr	r3, [r3, #20]	@ float
 4428 14b8 1946     		mov	r1, r3
 4429 14ba 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 102


 4430 14bc FFF7FEFF 		bl	__aeabi_fmul
 4431 14c0 0346     		mov	r3, r0
1261:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4432              		.loc 1 1261 0
 4433 14c2 1946     		mov	r1, r3
 4434 14c4 2046     		mov	r0, r4
 4435 14c6 FFF7FEFF 		bl	__aeabi_fadd
 4436 14ca 0346     		mov	r3, r0
 4437 14cc 1C46     		mov	r4, r3
1263:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4438              		.loc 1 1263 0
 4439 14ce 574B     		ldr	r3, .L202+16
 4440 14d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4441 14d2 1A46     		mov	r2, r3
 4442 14d4 5449     		ldr	r1, .L202+12
 4443 14d6 1346     		mov	r3, r2
 4444 14d8 5B01     		lsls	r3, r3, #5
 4445 14da 1344     		add	r3, r3, r2
 4446 14dc 9B00     		lsls	r3, r3, #2
 4447 14de FA6D     		ldr	r2, [r7, #92]
 4448 14e0 1344     		add	r3, r3, r2
 4449 14e2 6C33     		adds	r3, r3, #108
 4450 14e4 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4451 14e8 514B     		ldr	r3, .L202+20
 4452 14ea 9B69     		ldr	r3, [r3, #24]	@ float
 4453 14ec 1946     		mov	r1, r3
 4454 14ee 1046     		mov	r0, r2
 4455 14f0 FFF7FEFF 		bl	__aeabi_fmul
 4456 14f4 0346     		mov	r3, r0
1262:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4457              		.loc 1 1262 0
 4458 14f6 1946     		mov	r1, r3
 4459 14f8 2046     		mov	r0, r4
 4460 14fa FFF7FEFF 		bl	__aeabi_fadd
 4461 14fe 0346     		mov	r3, r0
 4462 1500 1C46     		mov	r4, r3
1264:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4463              		.loc 1 1264 0
 4464 1502 4A4B     		ldr	r3, .L202+16
 4465 1504 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4466 1506 1A46     		mov	r2, r3
 4467 1508 4749     		ldr	r1, .L202+12
 4468 150a 1346     		mov	r3, r2
 4469 150c 5B01     		lsls	r3, r3, #5
 4470 150e 1344     		add	r3, r3, r2
 4471 1510 9B00     		lsls	r3, r3, #2
 4472 1512 FA6D     		ldr	r2, [r7, #92]
 4473 1514 1344     		add	r3, r3, r2
 4474 1516 2433     		adds	r3, r3, #36
 4475 1518 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4476 151c 444B     		ldr	r3, .L202+20
 4477 151e DB69     		ldr	r3, [r3, #28]	@ float
 4478 1520 1946     		mov	r1, r3
 4479 1522 1046     		mov	r0, r2
 4480 1524 FFF7FEFF 		bl	__aeabi_fmul
 4481 1528 0346     		mov	r3, r0
1263:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 103


 4482              		.loc 1 1263 0
 4483 152a 1946     		mov	r1, r3
 4484 152c 2046     		mov	r0, r4
 4485 152e FFF7FEFF 		bl	__aeabi_fadd
 4486 1532 0346     		mov	r3, r0
 4487 1534 1C46     		mov	r4, r3
1265:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4488              		.loc 1 1265 0
 4489 1536 3D4B     		ldr	r3, .L202+16
 4490 1538 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4491 153a 1A46     		mov	r2, r3
 4492 153c 3A49     		ldr	r1, .L202+12
 4493 153e 1346     		mov	r3, r2
 4494 1540 5B01     		lsls	r3, r3, #5
 4495 1542 1344     		add	r3, r3, r2
 4496 1544 9B00     		lsls	r3, r3, #2
 4497 1546 FA6D     		ldr	r2, [r7, #92]
 4498 1548 1344     		add	r3, r3, r2
 4499 154a 0C33     		adds	r3, r3, #12
 4500 154c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4501 1550 374B     		ldr	r3, .L202+20
 4502 1552 1B6A     		ldr	r3, [r3, #32]	@ float
 4503 1554 1946     		mov	r1, r3
 4504 1556 1046     		mov	r0, r2
 4505 1558 FFF7FEFF 		bl	__aeabi_fmul
 4506 155c 0346     		mov	r3, r0
1264:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4507              		.loc 1 1264 0
 4508 155e 1946     		mov	r1, r3
 4509 1560 2046     		mov	r0, r4
 4510 1562 FFF7FEFF 		bl	__aeabi_fadd
 4511 1566 0346     		mov	r3, r0
 4512 1568 1C46     		mov	r4, r3
1266:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9])) + transposeFloat;
 4513              		.loc 1 1266 0
 4514 156a 304B     		ldr	r3, .L202+16
 4515 156c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4516 156e 1A46     		mov	r2, r3
 4517 1570 2D49     		ldr	r1, .L202+12
 4518 1572 1346     		mov	r3, r2
 4519 1574 5B01     		lsls	r3, r3, #5
 4520 1576 1344     		add	r3, r3, r2
 4521 1578 9B00     		lsls	r3, r3, #2
 4522 157a FA6D     		ldr	r2, [r7, #92]
 4523 157c 1344     		add	r3, r3, r2
 4524 157e 1833     		adds	r3, r3, #24
 4525 1580 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4526 1584 2A4B     		ldr	r3, .L202+20
 4527 1586 5B6A     		ldr	r3, [r3, #36]	@ float
 4528 1588 1946     		mov	r1, r3
 4529 158a 1046     		mov	r0, r2
 4530 158c FFF7FEFF 		bl	__aeabi_fmul
 4531 1590 0346     		mov	r3, r0
1265:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4532              		.loc 1 1265 0
 4533 1592 1946     		mov	r1, r3
 4534 1594 2046     		mov	r0, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 104


 4535 1596 FFF7FEFF 		bl	__aeabi_fadd
 4536 159a 0346     		mov	r3, r0
 4537 159c 1A46     		mov	r2, r3
 4538              		.loc 1 1266 0
 4539 159e 254B     		ldr	r3, .L202+24
 4540 15a0 1B68     		ldr	r3, [r3]	@ float
1256:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4541              		.loc 1 1256 0
 4542 15a2 1946     		mov	r1, r3
 4543 15a4 1046     		mov	r0, r2
 4544 15a6 FFF7FEFF 		bl	__aeabi_fadd
 4545 15aa 0346     		mov	r3, r0
 4546 15ac 3B62     		str	r3, [r7, #32]	@ float
1267:main.c        **** 
1268:main.c        ****             
1269:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 4547              		.loc 1 1269 0
 4548 15ae 1F4B     		ldr	r3, .L202+16
 4549 15b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4550 15b2 1A46     		mov	r2, r3
 4551 15b4 1C49     		ldr	r1, .L202+12
 4552 15b6 1346     		mov	r3, r2
 4553 15b8 5B01     		lsls	r3, r3, #5
 4554 15ba 1344     		add	r3, r3, r2
 4555 15bc 9B00     		lsls	r3, r3, #2
 4556 15be FA6D     		ldr	r2, [r7, #92]
 4557 15c0 1344     		add	r3, r3, r2
 4558 15c2 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 4559 15c6 FB61     		str	r3, [r7, #28]	@ float
1270:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 4560              		.loc 1 1270 0
 4561 15c8 F869     		ldr	r0, [r7, #28]	@ float
 4562 15ca FFF7FEFF 		bl	__aeabi_f2iz
 4563 15ce 0146     		mov	r1, r0
 4564 15d0 194A     		ldr	r2, .L202+28
 4565 15d2 FB6D     		ldr	r3, [r7, #92]
 4566 15d4 42F82310 		str	r1, [r2, r3, lsl #2]
1271:main.c        ****             
1272:main.c        ****             float barMIDI = ftom(myMappedPos * mtof(tempMIDI));
 4567              		.loc 1 1272 0
 4568 15d8 386A     		ldr	r0, [r7, #32]	@ float
 4569 15da FFF7FEFF 		bl	mtof
 4570 15de 0346     		mov	r3, r0
 4571 15e0 B96D     		ldr	r1, [r7, #88]	@ float
 4572 15e2 1846     		mov	r0, r3
 4573 15e4 FFF7FEFF 		bl	__aeabi_fmul
 4574 15e8 0346     		mov	r3, r0
 4575 15ea 1846     		mov	r0, r3
 4576 15ec FFF7FEFF 		bl	ftom
 4577 15f0 B861     		str	r0, [r7, #24]	@ float
1273:main.c        ****             
1274:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
 4578              		.loc 1 1274 0
 4579 15f2 114A     		ldr	r2, .L202+28
 4580 15f4 FB6D     		ldr	r3, [r7, #92]
 4581 15f6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4582 15fa 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 105


 4583 15fc FFF7FEFF 		bl	__aeabi_i2f
 4584 1600 0346     		mov	r3, r0
 4585 1602 1946     		mov	r1, r3
 4586 1604 B869     		ldr	r0, [r7, #24]	@ float
 4587 1606 FFF7FEFF 		bl	__aeabi_fsub
 4588 160a 0346     		mov	r3, r0
 4589 160c 7B61     		str	r3, [r7, #20]	@ float
1275:main.c        ****             
1276:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 4590              		.loc 1 1276 0
 4591 160e 0B49     		ldr	r1, .L202+32
 4592 1610 7869     		ldr	r0, [r7, #20]	@ float
 4593 1612 FFF7FEFF 		bl	__aeabi_fmul
 4594 1616 0346     		mov	r3, r0
 4595 1618 12E0     		b	.L203
 4596              	.L204:
 4597 161a 00BF     		.align	2
 4598              	.L202:
 4599 161c 00000000 		.word	invStringMappedPositions
 4600 1620 00000000 		.word	currentNeck
 4601 1624 00000000 		.word	necks
 4602 1628 00000000 		.word	copedent
 4603 162c 00000000 		.word	currentCopedent
 4604 1630 00000000 		.word	pedals_float
 4605 1634 00000000 		.word	transposeFloat
 4606 1638 00000000 		.word	openStringMIDI_Int
 4607 163c ABAA2A43 		.word	1126869675
 4608              	.L203:
 4609 1640 4FF08C41 		mov	r1, #1174405120
 4610 1644 1846     		mov	r0, r3
 4611 1646 FFF7FEFF 		bl	__aeabi_fadd
 4612 164a 0346     		mov	r3, r0
 4613 164c 3B61     		str	r3, [r7, #16]	@ float
1277:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
 4614              		.loc 1 1277 0
 4615 164e 9F4A     		ldr	r2, .L205
 4616 1650 FB6D     		ldr	r3, [r7, #92]
 4617 1652 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4618 1656 3969     		ldr	r1, [r7, #16]	@ float
 4619 1658 1846     		mov	r0, r3
 4620 165a FFF7FEFF 		bl	__aeabi_fcmpeq
 4621 165e 0346     		mov	r3, r0
 4622 1660 002B     		cmp	r3, #0
 4623 1662 0AD1     		bne	.L141
1278:main.c        ****             {
1279:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 4624              		.loc 1 1279 0
 4625 1664 3869     		ldr	r0, [r7, #16]	@ float
 4626 1666 FFF7FEFF 		bl	__aeabi_f2uiz
 4627 166a 0346     		mov	r3, r0
 4628 166c 1A46     		mov	r2, r3
 4629 166e FB6D     		ldr	r3, [r7, #92]
 4630 1670 0133     		adds	r3, r3, #1
 4631 1672 1946     		mov	r1, r3
 4632 1674 1046     		mov	r0, r2
 4633 1676 FFF7FEFF 		bl	sendMIDIPitchBend
 4634              	.L141:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 106


1280:main.c        ****             }
1281:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 4635              		.loc 1 1281 0
 4636 167a 9449     		ldr	r1, .L205
 4637 167c FB6D     		ldr	r3, [r7, #92]
 4638 167e 3A69     		ldr	r2, [r7, #16]	@ float
 4639 1680 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1282:main.c        ****             
1283:main.c        ****             if (tempMIDI > 0.0f)
 4640              		.loc 1 1283 0
 4641 1684 4FF00001 		mov	r1, #0
 4642 1688 386A     		ldr	r0, [r7, #32]	@ float
 4643 168a FFF7FEFF 		bl	__aeabi_fcmpgt
 4644 168e 0346     		mov	r3, r0
 4645 1690 002B     		cmp	r3, #0
 4646 1692 04D0     		beq	.L143
1284:main.c        ****             {
1285:main.c        ****                 stringMIDI[i] = tempMIDI;
 4647              		.loc 1 1285 0
 4648 1694 8E49     		ldr	r1, .L205+4
 4649 1696 FB6D     		ldr	r3, [r7, #92]
 4650 1698 3A6A     		ldr	r2, [r7, #32]	@ float
 4651 169a 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 4652              	.L143:
 4653              	.LBE29:
1229:main.c        ****     	{
 4654              		.loc 1 1229 0 discriminator 2
 4655 169e FB6D     		ldr	r3, [r7, #92]
 4656 16a0 0133     		adds	r3, r3, #1
 4657 16a2 FB65     		str	r3, [r7, #92]
 4658              	.L135:
1229:main.c        ****     	{
 4659              		.loc 1 1229 0 is_stmt 0 discriminator 1
 4660 16a4 8B4B     		ldr	r3, .L205+8
 4661 16a6 1B68     		ldr	r3, [r3]
 4662 16a8 FA6D     		ldr	r2, [r7, #92]
 4663 16aa 9A42     		cmp	r2, r3
 4664 16ac FFF61DAE 		blt	.L145
 4665              	.LBE28:
1286:main.c        ****             }
1287:main.c        ****     	}
1288:main.c        ****         testpin4_Write(0);
 4666              		.loc 1 1288 0 is_stmt 1
 4667 16b0 0020     		movs	r0, #0
 4668 16b2 FFF7FEFF 		bl	testpin4_Write
1289:main.c        ****         //if (encoder_button_Read())
1290:main.c        ****         {
1291:main.c        ****             //encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
1292:main.c        ****         }
1293:main.c        ****         //else
1294:main.c        ****         {
1295:main.c        ****             //encoderVal[encoderNum] += QuadDec_1_GetCounter();
1296:main.c        ****         }
1297:main.c        ****         //QuadDec_1_SetCounter(0);
1298:main.c        ****         
1299:main.c        **** 
1300:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 107


1301:main.c        ****         if (USB_check_flag)
 4669              		.loc 1 1301 0
 4670 16b6 884B     		ldr	r3, .L205+12
 4671 16b8 1B78     		ldrb	r3, [r3]
 4672 16ba DBB2     		uxtb	r3, r3
 4673 16bc 002B     		cmp	r3, #0
 4674 16be 01D0     		beq	.L146
1302:main.c        ****         {
1303:main.c        ****             checkUSB_Vbus();
 4675              		.loc 1 1303 0
 4676 16c0 FFF7FEFF 		bl	checkUSB_Vbus
 4677              	.L146:
1304:main.c        ****         }
1305:main.c        ****         //only service the USB bus if there is a computer plugged in
1306:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 4678              		.loc 1 1306 0
 4679 16c4 854B     		ldr	r3, .L205+16
 4680 16c6 1B78     		ldrb	r3, [r3]
 4681 16c8 DBB2     		uxtb	r3, r3
 4682 16ca 002B     		cmp	r3, #0
 4683 16cc 13D0     		beq	.L185
 4684              		.loc 1 1306 0 is_stmt 0 discriminator 1
 4685 16ce FFF7FEFF 		bl	USB_VBusPresent
 4686 16d2 0346     		mov	r3, r0
 4687 16d4 002B     		cmp	r3, #0
 4688 16d6 0ED0     		beq	.L185
1307:main.c        ****         {
1308:main.c        ****             if (midiSent > 64)
 4689              		.loc 1 1308 0 is_stmt 1
 4690 16d8 814B     		ldr	r3, .L205+20
 4691 16da 1B88     		ldrh	r3, [r3]
 4692 16dc 402B     		cmp	r3, #64
 4693 16de 05D9     		bls	.L148
1309:main.c        ****             {
1310:main.c        ****                 midiOverflow++;
 4694              		.loc 1 1310 0
 4695 16e0 804B     		ldr	r3, .L205+24
 4696 16e2 1B88     		ldrh	r3, [r3]
 4697 16e4 0133     		adds	r3, r3, #1
 4698 16e6 9AB2     		uxth	r2, r3
 4699 16e8 7E4B     		ldr	r3, .L205+24
 4700 16ea 1A80     		strh	r2, [r3]	@ movhi
 4701              	.L148:
1311:main.c        ****             }
1312:main.c        ****             midiSent = 0;
 4702              		.loc 1 1312 0
 4703 16ec 7C4B     		ldr	r3, .L205+20
 4704 16ee 0022     		movs	r2, #0
 4705 16f0 1A80     		strh	r2, [r3]	@ movhi
1313:main.c        ****             USB_service();
 4706              		.loc 1 1313 0
 4707 16f2 FFF7FEFF 		bl	USB_service
 4708              	.L185:
1314:main.c        ****         }
1315:main.c        **** 
1316:main.c        ****         
1317:main.c        ****         /*
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 108


1318:main.c        ****         for (int i = 0; i < 10; i++)
1319:main.c        ****         {
1320:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1321:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1322:main.c        ****         }
1323:main.c        ****         
1324:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1325:main.c        ****         for (int i = 0; i < 4; i++)
1326:main.c        ****         {
1327:main.c        ****             myArray[i+21] = knobs[i];
1328:main.c        ****         }
1329:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1330:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
1331:main.c        ****         */
1332:main.c        ****                 //make sure previous SPI2 transmission has completed before transferring the remain
1333:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 4709              		.loc 1 1333 0
 4710 16f6 00BF     		nop
 4711              	.L152:
 4712              		.loc 1 1333 0 is_stmt 0 discriminator 7
 4713 16f8 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4714 16fc 0346     		mov	r3, r0
 4715 16fe 03F00103 		and	r3, r3, #1
 4716 1702 002B     		cmp	r3, #0
 4717 1704 06D1     		bne	.L149
 4718              		.loc 1 1333 0 discriminator 2
 4719 1706 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4720 170a 0346     		mov	r3, r0
 4721 170c 03F01003 		and	r3, r3, #16
 4722 1710 002B     		cmp	r3, #0
 4723 1712 01D0     		beq	.L150
 4724              	.L149:
 4725              		.loc 1 1333 0 discriminator 3
 4726 1714 0123     		movs	r3, #1
 4727 1716 00E0     		b	.L151
 4728              	.L150:
 4729              		.loc 1 1333 0 discriminator 4
 4730 1718 0023     		movs	r3, #0
 4731              	.L151:
 4732              		.loc 1 1333 0 discriminator 6
 4733 171a 002B     		cmp	r3, #0
 4734 171c ECD0     		beq	.L152
1334:main.c        ****         {
1335:main.c        ****             ;
1336:main.c        ****         }
1337:main.c        ****         testpin6_Write(1);
 4735              		.loc 1 1337 0 is_stmt 1
 4736 171e 0120     		movs	r0, #1
 4737 1720 FFF7FEFF 		bl	testpin6_Write
1338:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 4738              		.loc 1 1338 0
 4739 1724 704B     		ldr	r3, .L205+28
 4740 1726 1B78     		ldrb	r3, [r3]
 4741 1728 DBB2     		uxtb	r3, r3
 4742 172a 012B     		cmp	r3, #1
 4743 172c 56D1     		bne	.L153
1339:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 109


1340:main.c        ****             if (sendMessageEnd) //send end message
 4744              		.loc 1 1340 0
 4745 172e 6F4B     		ldr	r3, .L205+32
 4746 1730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4747 1732 002B     		cmp	r3, #0
 4748 1734 1DD0     		beq	.L154
1341:main.c        ****             {
1342:main.c        ****                 myArray[0] = 253;
 4749              		.loc 1 1342 0
 4750 1736 6E4B     		ldr	r3, .L205+36
 4751 1738 FD22     		movs	r2, #253
 4752 173a 1A70     		strb	r2, [r3]
1343:main.c        ****                 myArray[1] = presetNumberToWrite;
 4753              		.loc 1 1343 0
 4754 173c 6D4B     		ldr	r3, .L205+40
 4755 173e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4756 1740 6B4B     		ldr	r3, .L205+36
 4757 1742 5A70     		strb	r2, [r3, #1]
1344:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 4758              		.loc 1 1344 0
 4759 1744 6B4B     		ldr	r3, .L205+40
 4760 1746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4761 1748 1A46     		mov	r2, r3
 4762 174a 6B4B     		ldr	r3, .L205+44
 4763 174c 1A60     		str	r2, [r3]
1345:main.c        ****                 //display previous preset as loaded
1346:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4764              		.loc 1 1346 0
 4765 174e FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1347:main.c        ****                 //OLED_invert(0);
1348:main.c        ****                 sendMessageEnd = 0;
 4766              		.loc 1 1348 0
 4767 1752 664B     		ldr	r3, .L205+32
 4768 1754 0022     		movs	r2, #0
 4769 1756 1A70     		strb	r2, [r3]
1349:main.c        ****                 sendingMessage = 0;
 4770              		.loc 1 1349 0
 4771 1758 634B     		ldr	r3, .L205+28
 4772 175a 0022     		movs	r2, #0
 4773 175c 1A70     		strb	r2, [r3]
1350:main.c        ****                 messageArraySendCount = 0;
 4774              		.loc 1 1350 0
 4775 175e 674B     		ldr	r3, .L205+48
 4776 1760 0022     		movs	r2, #0
 4777 1762 1A80     		strh	r2, [r3]	@ movhi
1351:main.c        ****                 myArray[30] = 254;
 4778              		.loc 1 1351 0
 4779 1764 624B     		ldr	r3, .L205+36
 4780 1766 FE22     		movs	r2, #254
 4781 1768 9A77     		strb	r2, [r3, #30]
1352:main.c        ****                 myArray[31] = 253;
 4782              		.loc 1 1352 0
 4783 176a 614B     		ldr	r3, .L205+36
 4784 176c FD22     		movs	r2, #253
 4785 176e DA77     		strb	r2, [r3, #31]
 4786 1770 9DE1     		b	.L160
 4787              	.L154:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 110


1353:main.c        ****                 
1354:main.c        ****             }
1355:main.c        ****             else //send chunks
1356:main.c        ****             {
1357:main.c        ****                 //send the next preset Chunkkkkk
1358:main.c        ****                 myArray[0] = 2;
 4788              		.loc 1 1358 0
 4789 1772 5F4B     		ldr	r3, .L205+36
 4790 1774 0222     		movs	r2, #2
 4791 1776 1A70     		strb	r2, [r3]
1359:main.c        ****                 myArray[1] = presetNumberToWrite;
 4792              		.loc 1 1359 0
 4793 1778 5E4B     		ldr	r3, .L205+40
 4794 177a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4795 177c 5C4B     		ldr	r3, .L205+36
 4796 177e 5A70     		strb	r2, [r3, #1]
 4797              	.LBB30:
1360:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 4798              		.loc 1 1360 0
 4799 1780 0223     		movs	r3, #2
 4800 1782 7B65     		str	r3, [r7, #84]
 4801 1784 20E0     		b	.L156
 4802              	.L159:
1361:main.c        ****                 {
1362:main.c        ****                     if (messageArraySendCount < messageArraySize)
 4803              		.loc 1 1362 0
 4804 1786 5D4B     		ldr	r3, .L205+48
 4805 1788 1A88     		ldrh	r2, [r3]
 4806 178a 5D4B     		ldr	r3, .L205+52
 4807 178c 1B88     		ldrh	r3, [r3]
 4808 178e 9A42     		cmp	r2, r3
 4809 1790 0FD2     		bcs	.L157
1363:main.c        ****                     {
1364:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 4810              		.loc 1 1364 0
 4811 1792 5A4B     		ldr	r3, .L205+48
 4812 1794 1B88     		ldrh	r3, [r3]
 4813 1796 5A1C     		adds	r2, r3, #1
 4814 1798 91B2     		uxth	r1, r2
 4815 179a 584A     		ldr	r2, .L205+48
 4816 179c 1180     		strh	r1, [r2]	@ movhi
 4817 179e 1A46     		mov	r2, r3
 4818 17a0 584B     		ldr	r3, .L205+56
 4819 17a2 9B5C     		ldrb	r3, [r3, r2]
 4820 17a4 D9B2     		uxtb	r1, r3
 4821 17a6 524A     		ldr	r2, .L205+36
 4822 17a8 7B6D     		ldr	r3, [r7, #84]
 4823 17aa 1344     		add	r3, r3, r2
 4824 17ac 0A46     		mov	r2, r1
 4825 17ae 1A70     		strb	r2, [r3]
 4826 17b0 07E0     		b	.L158
 4827              	.L157:
1365:main.c        ****                     }
1366:main.c        ****                     else
1367:main.c        ****                     {
1368:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 4828              		.loc 1 1368 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 111


 4829 17b2 4F4A     		ldr	r2, .L205+36
 4830 17b4 7B6D     		ldr	r3, [r7, #84]
 4831 17b6 1344     		add	r3, r3, r2
 4832 17b8 EE22     		movs	r2, #238
 4833 17ba 1A70     		strb	r2, [r3]
1369:main.c        ****                         sendMessageEnd = 1;
 4834              		.loc 1 1369 0
 4835 17bc 4B4B     		ldr	r3, .L205+32
 4836 17be 0122     		movs	r2, #1
 4837 17c0 1A70     		strb	r2, [r3]
 4838              	.L158:
1360:main.c        ****                 {
 4839              		.loc 1 1360 0 discriminator 2
 4840 17c2 7B6D     		ldr	r3, [r7, #84]
 4841 17c4 0133     		adds	r3, r3, #1
 4842 17c6 7B65     		str	r3, [r7, #84]
 4843              	.L156:
1360:main.c        ****                 {
 4844              		.loc 1 1360 0 is_stmt 0 discriminator 1
 4845 17c8 7B6D     		ldr	r3, [r7, #84]
 4846 17ca 1D2B     		cmp	r3, #29
 4847 17cc DBD9     		bls	.L159
 4848              	.LBE30:
1370:main.c        ****                     }
1371:main.c        ****                 }
1372:main.c        ****                 myArray[30] = 254;
 4849              		.loc 1 1372 0 is_stmt 1
 4850 17ce 484B     		ldr	r3, .L205+36
 4851 17d0 FE22     		movs	r2, #254
 4852 17d2 9A77     		strb	r2, [r3, #30]
1373:main.c        ****                 myArray[31] = 253;
 4853              		.loc 1 1373 0
 4854 17d4 464B     		ldr	r3, .L205+36
 4855 17d6 FD22     		movs	r2, #253
 4856 17d8 DA77     		strb	r2, [r3, #31]
 4857 17da 68E1     		b	.L160
 4858              	.L153:
1374:main.c        ****             }    
1375:main.c        ****         }
1376:main.c        ****         
1377:main.c        ****         else if (sendSingleParamUpdate)
 4859              		.loc 1 1377 0
 4860 17dc 4A4B     		ldr	r3, .L205+60
 4861 17de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4862 17e0 002B     		cmp	r3, #0
 4863 17e2 1CD0     		beq	.L161
1378:main.c        ****         {
1379:main.c        ****             myArray[0] = 6;
 4864              		.loc 1 1379 0
 4865 17e4 424B     		ldr	r3, .L205+36
 4866 17e6 0622     		movs	r2, #6
 4867 17e8 1A70     		strb	r2, [r3]
1380:main.c        ****             myArray[1] = singleParamToUpdateHigh;
 4868              		.loc 1 1380 0
 4869 17ea 484B     		ldr	r3, .L205+64
 4870 17ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4871 17ee 404B     		ldr	r3, .L205+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 112


 4872 17f0 5A70     		strb	r2, [r3, #1]
1381:main.c        ****             myArray[2] = singleParamToUpdateLow;
 4873              		.loc 1 1381 0
 4874 17f2 474B     		ldr	r3, .L205+68
 4875 17f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4876 17f6 3E4B     		ldr	r3, .L205+36
 4877 17f8 9A70     		strb	r2, [r3, #2]
1382:main.c        ****             myArray[3] = singleParamValueHigh;
 4878              		.loc 1 1382 0
 4879 17fa 464B     		ldr	r3, .L205+72
 4880 17fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4881 17fe 3C4B     		ldr	r3, .L205+36
 4882 1800 DA70     		strb	r2, [r3, #3]
1383:main.c        ****             myArray[4] = singleParamValueLow;
 4883              		.loc 1 1383 0
 4884 1802 454B     		ldr	r3, .L205+76
 4885 1804 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4886 1806 3A4B     		ldr	r3, .L205+36
 4887 1808 1A71     		strb	r2, [r3, #4]
1384:main.c        ****             myArray[30] = 254;
 4888              		.loc 1 1384 0
 4889 180a 394B     		ldr	r3, .L205+36
 4890 180c FE22     		movs	r2, #254
 4891 180e 9A77     		strb	r2, [r3, #30]
1385:main.c        ****             myArray[31] = 253;
 4892              		.loc 1 1385 0
 4893 1810 374B     		ldr	r3, .L205+36
 4894 1812 FD22     		movs	r2, #253
 4895 1814 DA77     		strb	r2, [r3, #31]
1386:main.c        ****             sendSingleParamUpdate = 0;
 4896              		.loc 1 1386 0
 4897 1816 3C4B     		ldr	r3, .L205+60
 4898 1818 0022     		movs	r2, #0
 4899 181a 1A70     		strb	r2, [r3]
 4900 181c 47E1     		b	.L160
 4901              	.L161:
1387:main.c        ****         }
1388:main.c        ****         
1389:main.c        ****         else if (sendMappingChangeUpdate)
 4902              		.loc 1 1389 0
 4903 181e 3F4B     		ldr	r3, .L205+80
 4904 1820 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4905 1822 002B     		cmp	r3, #0
 4906 1824 24D0     		beq	.L162
1390:main.c        ****         {
1391:main.c        ****             myArray[0] = 7;
 4907              		.loc 1 1391 0
 4908 1826 324B     		ldr	r3, .L205+36
 4909 1828 0722     		movs	r2, #7
 4910 182a 1A70     		strb	r2, [r3]
1392:main.c        ****             myArray[1] = mappingArray[0];
 4911              		.loc 1 1392 0
 4912 182c 3C4B     		ldr	r3, .L205+84
 4913 182e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4914 1830 2F4B     		ldr	r3, .L205+36
 4915 1832 5A70     		strb	r2, [r3, #1]
1393:main.c        ****             myArray[2] =  mappingArray[1];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 113


 4916              		.loc 1 1393 0
 4917 1834 3A4B     		ldr	r3, .L205+84
 4918 1836 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4919 1838 2D4B     		ldr	r3, .L205+36
 4920 183a 9A70     		strb	r2, [r3, #2]
1394:main.c        ****             myArray[3] =  mappingArray[2];
 4921              		.loc 1 1394 0
 4922 183c 384B     		ldr	r3, .L205+84
 4923 183e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 4924 1840 2B4B     		ldr	r3, .L205+36
 4925 1842 DA70     		strb	r2, [r3, #3]
1395:main.c        ****             myArray[4] =  mappingArray[3];
 4926              		.loc 1 1395 0
 4927 1844 364B     		ldr	r3, .L205+84
 4928 1846 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4929 1848 294B     		ldr	r3, .L205+36
 4930 184a 1A71     		strb	r2, [r3, #4]
1396:main.c        ****             myArray[5] =  mappingArray[4];
 4931              		.loc 1 1396 0
 4932 184c 344B     		ldr	r3, .L205+84
 4933 184e 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 4934 1850 274B     		ldr	r3, .L205+36
 4935 1852 5A71     		strb	r2, [r3, #5]
1397:main.c        ****             myArray[6] =  mappingArray[5];
 4936              		.loc 1 1397 0
 4937 1854 324B     		ldr	r3, .L205+84
 4938 1856 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 4939 1858 254B     		ldr	r3, .L205+36
 4940 185a 9A71     		strb	r2, [r3, #6]
1398:main.c        ****             myArray[30] = 254;
 4941              		.loc 1 1398 0
 4942 185c 244B     		ldr	r3, .L205+36
 4943 185e FE22     		movs	r2, #254
 4944 1860 9A77     		strb	r2, [r3, #30]
1399:main.c        ****             myArray[31] = 253;
 4945              		.loc 1 1399 0
 4946 1862 234B     		ldr	r3, .L205+36
 4947 1864 FD22     		movs	r2, #253
 4948 1866 DA77     		strb	r2, [r3, #31]
1400:main.c        ****             sendMappingChangeUpdate = 0;
 4949              		.loc 1 1400 0
 4950 1868 2C4B     		ldr	r3, .L205+80
 4951 186a 0022     		movs	r2, #0
 4952 186c 1A70     		strb	r2, [r3]
 4953 186e 1EE1     		b	.L160
 4954              	.L162:
1401:main.c        ****         }
1402:main.c        ****         
1403:main.c        ****         
1404:main.c        ****         else if (sendKnobs)
 4955              		.loc 1 1404 0
 4956 1870 2C4B     		ldr	r3, .L205+88
 4957 1872 1B78     		ldrb	r3, [r3]
 4958 1874 DBB2     		uxtb	r3, r3
 4959 1876 002B     		cmp	r3, #0
 4960 1878 00F0AA80 		beq	.L163
1405:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 114


1406:main.c        ****             myArray[0] = 3; //sending knob stuff, not a preset send
 4961              		.loc 1 1406 0
 4962 187c 1C4B     		ldr	r3, .L205+36
 4963 187e 0322     		movs	r2, #3
 4964 1880 1A70     		strb	r2, [r3]
 4965              	.LBB31:
1407:main.c        ****             for (int i = 0; i < 8; i++)
 4966              		.loc 1 1407 0
 4967 1882 0023     		movs	r3, #0
 4968 1884 3B65     		str	r3, [r7, #80]
 4969 1886 0AE0     		b	.L164
 4970              	.L165:
1408:main.c        ****             {
1409:main.c        ****                 myArray[i + 1] = macroKnobValues[i];
 4971              		.loc 1 1409 0 discriminator 3
 4972 1888 3B6D     		ldr	r3, [r7, #80]
 4973 188a 0133     		adds	r3, r3, #1
 4974 188c 2649     		ldr	r1, .L205+92
 4975 188e 3A6D     		ldr	r2, [r7, #80]
 4976 1890 0A44     		add	r2, r2, r1
 4977 1892 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4978 1894 164A     		ldr	r2, .L205+36
 4979 1896 D154     		strb	r1, [r2, r3]
1407:main.c        ****             for (int i = 0; i < 8; i++)
 4980              		.loc 1 1407 0 discriminator 3
 4981 1898 3B6D     		ldr	r3, [r7, #80]
 4982 189a 0133     		adds	r3, r3, #1
 4983 189c 3B65     		str	r3, [r7, #80]
 4984              	.L164:
1407:main.c        ****             for (int i = 0; i < 8; i++)
 4985              		.loc 1 1407 0 is_stmt 0 discriminator 1
 4986 189e 3B6D     		ldr	r3, [r7, #80]
 4987 18a0 072B     		cmp	r3, #7
 4988 18a2 F1DD     		ble	.L165
 4989              	.LBE31:
 4990              	.LBB32:
1410:main.c        ****             }
1411:main.c        ****             for (int i = 0; i < 4; i++)
 4991              		.loc 1 1411 0 is_stmt 1
 4992 18a4 0023     		movs	r3, #0
 4993 18a6 FB64     		str	r3, [r7, #76]
 4994 18a8 0AE0     		b	.L166
 4995              	.L167:
1412:main.c        ****             {
1413:main.c        ****                 myArray[i + 9] = knobs[i];
 4996              		.loc 1 1413 0 discriminator 3
 4997 18aa FB6C     		ldr	r3, [r7, #76]
 4998 18ac 0933     		adds	r3, r3, #9
 4999 18ae 1F49     		ldr	r1, .L205+96
 5000 18b0 FA6C     		ldr	r2, [r7, #76]
 5001 18b2 0A44     		add	r2, r2, r1
 5002 18b4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5003 18b6 0E4A     		ldr	r2, .L205+36
 5004 18b8 D154     		strb	r1, [r2, r3]
1411:main.c        ****             {
 5005              		.loc 1 1411 0 discriminator 3
 5006 18ba FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 115


 5007 18bc 0133     		adds	r3, r3, #1
 5008 18be FB64     		str	r3, [r7, #76]
 5009              	.L166:
1411:main.c        ****             {
 5010              		.loc 1 1411 0 is_stmt 0 discriminator 1
 5011 18c0 FB6C     		ldr	r3, [r7, #76]
 5012 18c2 032B     		cmp	r3, #3
 5013 18c4 F1DD     		ble	.L167
 5014              	.LBE32:
 5015              	.LBB33:
1414:main.c        ****             }
1415:main.c        ****             for (int i = 0; i < 10; i++)
 5016              		.loc 1 1415 0 is_stmt 1
 5017 18c6 0023     		movs	r3, #0
 5018 18c8 BB64     		str	r3, [r7, #72]
 5019 18ca 3CE0     		b	.L168
 5020              	.L206:
 5021              		.align	2
 5022              	.L205:
 5023 18cc 00000000 		.word	prevStringPitchBend
 5024 18d0 00000000 		.word	stringMIDI
 5025 18d4 00000000 		.word	numStrings
 5026 18d8 00000000 		.word	USB_check_flag
 5027 18dc 00000000 		.word	USB_active
 5028 18e0 00000000 		.word	midiSent
 5029 18e4 00000000 		.word	midiOverflow
 5030 18e8 00000000 		.word	sendingMessage
 5031 18ec 00000000 		.word	sendMessageEnd
 5032 18f0 00000000 		.word	myArray
 5033 18f4 00000000 		.word	presetNumberToWrite
 5034 18f8 00000000 		.word	currentPresetSelection
 5035 18fc 00000000 		.word	messageArraySendCount
 5036 1900 00000000 		.word	messageArraySize
 5037 1904 00000000 		.word	presetArray
 5038 1908 00000000 		.word	sendSingleParamUpdate
 5039 190c 00000000 		.word	singleParamToUpdateHigh
 5040 1910 00000000 		.word	singleParamToUpdateLow
 5041 1914 00000000 		.word	singleParamValueHigh
 5042 1918 00000000 		.word	singleParamValueLow
 5043 191c 00000000 		.word	sendMappingChangeUpdate
 5044 1920 00000000 		.word	mappingArray
 5045 1924 00000000 		.word	sendKnobs
 5046 1928 00000000 		.word	macroKnobValues
 5047 192c 00000000 		.word	knobs
 5048              	.L169:
1416:main.c        ****             {
1417:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 5049              		.loc 1 1417 0 discriminator 3
 5050 1930 BB6C     		ldr	r3, [r7, #72]
 5051 1932 0D33     		adds	r3, r3, #13
 5052 1934 9049     		ldr	r1, .L207
 5053 1936 BA6C     		ldr	r2, [r7, #72]
 5054 1938 0A44     		add	r2, r2, r1
 5055 193a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5056 193c 8F4A     		ldr	r2, .L207+4
 5057 193e D154     		strb	r1, [r2, r3]
1415:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 116


 5058              		.loc 1 1415 0 discriminator 3
 5059 1940 BB6C     		ldr	r3, [r7, #72]
 5060 1942 0133     		adds	r3, r3, #1
 5061 1944 BB64     		str	r3, [r7, #72]
 5062              	.L168:
1415:main.c        ****             {
 5063              		.loc 1 1415 0 is_stmt 0 discriminator 1
 5064 1946 BB6C     		ldr	r3, [r7, #72]
 5065 1948 092B     		cmp	r3, #9
 5066 194a F1DD     		ble	.L169
 5067              	.LBE33:
1418:main.c        ****             }
1419:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5068              		.loc 1 1419 0 is_stmt 1
 5069 194c 8C4B     		ldr	r3, .L207+8
 5070 194e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5071 1950 1B01     		lsls	r3, r3, #4
 5072 1952 5AB2     		sxtb	r2, r3
 5073 1954 8B4B     		ldr	r3, .L207+12
 5074 1956 1B68     		ldr	r3, [r3]
 5075 1958 5BB2     		sxtb	r3, r3
 5076 195a 1343     		orrs	r3, r3, r2
 5077 195c 5AB2     		sxtb	r2, r3
 5078 195e 8A4B     		ldr	r3, .L207+16
 5079 1960 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5080 1962 5B01     		lsls	r3, r3, #5
 5081 1964 5BB2     		sxtb	r3, r3
 5082 1966 1343     		orrs	r3, r3, r2
 5083 1968 5AB2     		sxtb	r2, r3
 5084 196a 884B     		ldr	r3, .L207+20
 5085 196c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5086 196e 9B01     		lsls	r3, r3, #6
 5087 1970 5BB2     		sxtb	r3, r3
 5088 1972 1343     		orrs	r3, r3, r2
 5089 1974 5BB2     		sxtb	r3, r3
 5090 1976 DAB2     		uxtb	r2, r3
 5091 1978 804B     		ldr	r3, .L207+4
 5092 197a 1A76     		strb	r2, [r3, #24]
1420:main.c        ****             myArray[25] = patchNum;
 5093              		.loc 1 1420 0
 5094 197c 844B     		ldr	r3, .L207+24
 5095 197e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5096 1980 7E4B     		ldr	r3, .L207+4
 5097 1982 5A76     		strb	r2, [r3, #25]
1421:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5098              		.loc 1 1421 0
 5099 1984 834B     		ldr	r3, .L207+28
 5100 1986 B3F90030 		ldrsh	r3, [r3]
 5101 198a 1B12     		asrs	r3, r3, #8
 5102 198c 1BB2     		sxth	r3, r3
 5103 198e DAB2     		uxtb	r2, r3
 5104 1990 7A4B     		ldr	r3, .L207+4
 5105 1992 9A76     		strb	r2, [r3, #26]
1422:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5106              		.loc 1 1422 0
 5107 1994 7F4B     		ldr	r3, .L207+28
 5108 1996 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 117


 5109 199a DAB2     		uxtb	r2, r3
 5110 199c 774B     		ldr	r3, .L207+4
 5111 199e DA76     		strb	r2, [r3, #27]
1423:main.c        ****             myArray[28] = bar[1] >> 8;
 5112              		.loc 1 1423 0
 5113 19a0 7D4B     		ldr	r3, .L207+32
 5114 19a2 5B88     		ldrh	r3, [r3, #2]	@ movhi
 5115 19a4 9BB2     		uxth	r3, r3
 5116 19a6 1B0A     		lsrs	r3, r3, #8
 5117 19a8 9BB2     		uxth	r3, r3
 5118 19aa DAB2     		uxtb	r2, r3
 5119 19ac 734B     		ldr	r3, .L207+4
 5120 19ae 1A77     		strb	r2, [r3, #28]
1424:main.c        ****             myArray[29] = bar[1] & 0xff;
 5121              		.loc 1 1424 0
 5122 19b0 794B     		ldr	r3, .L207+32
 5123 19b2 5B88     		ldrh	r3, [r3, #2]	@ movhi
 5124 19b4 9BB2     		uxth	r3, r3
 5125 19b6 DAB2     		uxtb	r2, r3
 5126 19b8 704B     		ldr	r3, .L207+4
 5127 19ba 5A77     		strb	r2, [r3, #29]
1425:main.c        ****             myArray[30] = 254;
 5128              		.loc 1 1425 0
 5129 19bc 6F4B     		ldr	r3, .L207+4
 5130 19be FE22     		movs	r2, #254
 5131 19c0 9A77     		strb	r2, [r3, #30]
1426:main.c        ****             myArray[31] = 253;
 5132              		.loc 1 1426 0
 5133 19c2 6E4B     		ldr	r3, .L207+4
 5134 19c4 FD22     		movs	r2, #253
 5135 19c6 DA77     		strb	r2, [r3, #31]
1427:main.c        ****             
1428:main.c        ****             
1429:main.c        ****             sendKnobs = 0;
 5136              		.loc 1 1429 0
 5137 19c8 744B     		ldr	r3, .L207+36
 5138 19ca 0022     		movs	r2, #0
 5139 19cc 1A70     		strb	r2, [r3]
 5140 19ce 6EE0     		b	.L160
 5141              	.L163:
1430:main.c        ****         }
1431:main.c        ****         else
1432:main.c        ****         {
1433:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 5142              		.loc 1 1433 0
 5143 19d0 6A4B     		ldr	r3, .L207+4
 5144 19d2 0122     		movs	r2, #1
 5145 19d4 1A70     		strb	r2, [r3]
 5146              	.LBB34:
1434:main.c        ****             for (int i = 0; i < 12; i++)
 5147              		.loc 1 1434 0
 5148 19d6 0023     		movs	r3, #0
 5149 19d8 7B64     		str	r3, [r7, #68]
 5150 19da 24E0     		b	.L170
 5151              	.L171:
 5152              	.LBB35:
1435:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 118


1436:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 5153              		.loc 1 1436 0 discriminator 3
 5154 19dc 704A     		ldr	r2, .L207+40
 5155 19de 7B6C     		ldr	r3, [r7, #68]
 5156 19e0 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5157 19e4 4FF08841 		mov	r1, #1140850688
 5158 19e8 1846     		mov	r0, r3
 5159 19ea FFF7FEFF 		bl	__aeabi_fmul
 5160 19ee 0346     		mov	r3, r0
 5161 19f0 1846     		mov	r0, r3
 5162 19f2 FFF7FEFF 		bl	roundf
 5163 19f6 0346     		mov	r3, r0
 5164 19f8 1846     		mov	r0, r3
 5165 19fa FFF7FEFF 		bl	__aeabi_f2iz
 5166 19fe 0346     		mov	r3, r0
 5167 1a00 FB60     		str	r3, [r7, #12]
1437:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 5168              		.loc 1 1437 0 discriminator 3
 5169 1a02 7B6C     		ldr	r3, [r7, #68]
 5170 1a04 5B00     		lsls	r3, r3, #1
 5171 1a06 0133     		adds	r3, r3, #1
 5172 1a08 FA68     		ldr	r2, [r7, #12]
 5173 1a0a 1212     		asrs	r2, r2, #8
 5174 1a0c D1B2     		uxtb	r1, r2
 5175 1a0e 5B4A     		ldr	r2, .L207+4
 5176 1a10 D154     		strb	r1, [r2, r3]
1438:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 5177              		.loc 1 1438 0 discriminator 3
 5178 1a12 7B6C     		ldr	r3, [r7, #68]
 5179 1a14 0133     		adds	r3, r3, #1
 5180 1a16 5B00     		lsls	r3, r3, #1
 5181 1a18 FA68     		ldr	r2, [r7, #12]
 5182 1a1a D1B2     		uxtb	r1, r2
 5183 1a1c 574A     		ldr	r2, .L207+4
 5184 1a1e D154     		strb	r1, [r2, r3]
 5185              	.LBE35:
1434:main.c        ****             {
 5186              		.loc 1 1434 0 discriminator 3
 5187 1a20 7B6C     		ldr	r3, [r7, #68]
 5188 1a22 0133     		adds	r3, r3, #1
 5189 1a24 7B64     		str	r3, [r7, #68]
 5190              	.L170:
1434:main.c        ****             {
 5191              		.loc 1 1434 0 is_stmt 0 discriminator 1
 5192 1a26 7B6C     		ldr	r3, [r7, #68]
 5193 1a28 0B2B     		cmp	r3, #11
 5194 1a2a D7DD     		ble	.L171
 5195              	.LBE34:
1439:main.c        ****             }
1440:main.c        ****             
1441:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5196              		.loc 1 1441 0 is_stmt 1
 5197 1a2c 544B     		ldr	r3, .L207+8
 5198 1a2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5199 1a30 1B01     		lsls	r3, r3, #4
 5200 1a32 5AB2     		sxtb	r2, r3
 5201 1a34 534B     		ldr	r3, .L207+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 119


 5202 1a36 1B68     		ldr	r3, [r3]
 5203 1a38 5BB2     		sxtb	r3, r3
 5204 1a3a 1343     		orrs	r3, r3, r2
 5205 1a3c 5AB2     		sxtb	r2, r3
 5206 1a3e 524B     		ldr	r3, .L207+16
 5207 1a40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5208 1a42 5B01     		lsls	r3, r3, #5
 5209 1a44 5BB2     		sxtb	r3, r3
 5210 1a46 1343     		orrs	r3, r3, r2
 5211 1a48 5AB2     		sxtb	r2, r3
 5212 1a4a 504B     		ldr	r3, .L207+20
 5213 1a4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5214 1a4e 9B01     		lsls	r3, r3, #6
 5215 1a50 5BB2     		sxtb	r3, r3
 5216 1a52 1343     		orrs	r3, r3, r2
 5217 1a54 5BB2     		sxtb	r3, r3
 5218 1a56 DAB2     		uxtb	r2, r3
 5219 1a58 484B     		ldr	r3, .L207+4
 5220 1a5a 1A76     		strb	r2, [r3, #24]
1442:main.c        ****             myArray[25] = patchNum;
 5221              		.loc 1 1442 0
 5222 1a5c 4C4B     		ldr	r3, .L207+24
 5223 1a5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5224 1a60 464B     		ldr	r3, .L207+4
 5225 1a62 5A76     		strb	r2, [r3, #25]
1443:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5226              		.loc 1 1443 0
 5227 1a64 4B4B     		ldr	r3, .L207+28
 5228 1a66 B3F90030 		ldrsh	r3, [r3]
 5229 1a6a 1B12     		asrs	r3, r3, #8
 5230 1a6c 1BB2     		sxth	r3, r3
 5231 1a6e DAB2     		uxtb	r2, r3
 5232 1a70 424B     		ldr	r3, .L207+4
 5233 1a72 9A76     		strb	r2, [r3, #26]
1444:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5234              		.loc 1 1444 0
 5235 1a74 474B     		ldr	r3, .L207+28
 5236 1a76 B3F90030 		ldrsh	r3, [r3]
 5237 1a7a DAB2     		uxtb	r2, r3
 5238 1a7c 3F4B     		ldr	r3, .L207+4
 5239 1a7e DA76     		strb	r2, [r3, #27]
1445:main.c        ****             myArray[28] = bar[0] >> 8;
 5240              		.loc 1 1445 0
 5241 1a80 454B     		ldr	r3, .L207+32
 5242 1a82 1B88     		ldrh	r3, [r3]	@ movhi
 5243 1a84 9BB2     		uxth	r3, r3
 5244 1a86 1B0A     		lsrs	r3, r3, #8
 5245 1a88 9BB2     		uxth	r3, r3
 5246 1a8a DAB2     		uxtb	r2, r3
 5247 1a8c 3B4B     		ldr	r3, .L207+4
 5248 1a8e 1A77     		strb	r2, [r3, #28]
1446:main.c        ****             myArray[29] = bar[0] & 0xff;
 5249              		.loc 1 1446 0
 5250 1a90 414B     		ldr	r3, .L207+32
 5251 1a92 1B88     		ldrh	r3, [r3]	@ movhi
 5252 1a94 9BB2     		uxth	r3, r3
 5253 1a96 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 120


 5254 1a98 384B     		ldr	r3, .L207+4
 5255 1a9a 5A77     		strb	r2, [r3, #29]
1447:main.c        ****             myArray[30] = 254;
 5256              		.loc 1 1447 0
 5257 1a9c 374B     		ldr	r3, .L207+4
 5258 1a9e FE22     		movs	r2, #254
 5259 1aa0 9A77     		strb	r2, [r3, #30]
1448:main.c        ****             myArray[31] = 253;
 5260              		.loc 1 1448 0
 5261 1aa2 364B     		ldr	r3, .L207+4
 5262 1aa4 FD22     		movs	r2, #253
 5263 1aa6 DA77     		strb	r2, [r3, #31]
1449:main.c        ****             
1450:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 5264              		.loc 1 1450 0
 5265 1aa8 3C4B     		ldr	r3, .L207+36
 5266 1aaa 0122     		movs	r2, #1
 5267 1aac 1A70     		strb	r2, [r3]
 5268              	.L160:
1451:main.c        ****         }
1452:main.c        **** 
1453:main.c        ****         //parse input from synth board (names)
1454:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 5269              		.loc 1 1454 0
 5270 1aae 3D4B     		ldr	r3, .L207+44
 5271 1ab0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5272 1ab2 FD2B     		cmp	r3, #253
 5273 1ab4 7ED1     		bne	.L172
 5274              		.loc 1 1454 0 is_stmt 0 discriminator 1
 5275 1ab6 3B4B     		ldr	r3, .L207+44
 5276 1ab8 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5277 1aba FE2B     		cmp	r3, #254
 5278 1abc 7AD1     		bne	.L172
 5279              	.LBB36:
1455:main.c        ****         {
1456:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5280              		.loc 1 1456 0 is_stmt 1
 5281 1abe 394B     		ldr	r3, .L207+44
 5282 1ac0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5283 1ac2 BB60     		str	r3, [r7, #8]
1457:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 5284              		.loc 1 1457 0
 5285 1ac4 374B     		ldr	r3, .L207+44
 5286 1ac6 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5287 1ac8 7B60     		str	r3, [r7, #4]
1458:main.c        ****             int bufferPointer = 2;
 5288              		.loc 1 1458 0
 5289 1aca 0223     		movs	r3, #2
 5290 1acc 3B64     		str	r3, [r7, #64]
 5291              	.LBB37:
1459:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5292              		.loc 1 1459 0
 5293 1ace 0023     		movs	r3, #0
 5294 1ad0 FB63     		str	r3, [r7, #60]
 5295 1ad2 14E0     		b	.L173
 5296              	.L174:
1460:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 121


1461:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 5297              		.loc 1 1461 0 discriminator 3
 5298 1ad4 334A     		ldr	r2, .L207+44
 5299 1ad6 3B6C     		ldr	r3, [r7, #64]
 5300 1ad8 1344     		add	r3, r3, r2
 5301 1ada 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5302 1adc 3249     		ldr	r1, .L207+48
 5303 1ade BA68     		ldr	r2, [r7, #8]
 5304 1ae0 1346     		mov	r3, r2
 5305 1ae2 DB00     		lsls	r3, r3, #3
 5306 1ae4 9B1A     		subs	r3, r3, r2
 5307 1ae6 5B00     		lsls	r3, r3, #1
 5308 1ae8 CA18     		adds	r2, r1, r3
 5309 1aea FB6B     		ldr	r3, [r7, #60]
 5310 1aec 1344     		add	r3, r3, r2
 5311 1aee 0246     		mov	r2, r0
 5312 1af0 1A70     		strb	r2, [r3]
1462:main.c        ****                 bufferPointer++;
 5313              		.loc 1 1462 0 discriminator 3
 5314 1af2 3B6C     		ldr	r3, [r7, #64]
 5315 1af4 0133     		adds	r3, r3, #1
 5316 1af6 3B64     		str	r3, [r7, #64]
1459:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5317              		.loc 1 1459 0 discriminator 3
 5318 1af8 FB6B     		ldr	r3, [r7, #60]
 5319 1afa 0133     		adds	r3, r3, #1
 5320 1afc FB63     		str	r3, [r7, #60]
 5321              	.L173:
1459:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5322              		.loc 1 1459 0 is_stmt 0 discriminator 1
 5323 1afe FB6B     		ldr	r3, [r7, #60]
 5324 1b00 0D2B     		cmp	r3, #13
 5325 1b02 E7DD     		ble	.L174
 5326              	.LBE37:
1463:main.c        ****             }
1464:main.c        ****             bufferPointer = 17;
 5327              		.loc 1 1464 0 is_stmt 1
 5328 1b04 1123     		movs	r3, #17
 5329 1b06 3B64     		str	r3, [r7, #64]
 5330              	.LBB38:
1465:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5331              		.loc 1 1465 0
 5332 1b08 0023     		movs	r3, #0
 5333 1b0a BB63     		str	r3, [r7, #56]
 5334 1b0c 1BE0     		b	.L175
 5335              	.L176:
1466:main.c        ****             {
1467:main.c        ****                 macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[buffer
 5336              		.loc 1 1467 0 discriminator 3
 5337 1b0e 254A     		ldr	r2, .L207+44
 5338 1b10 3B6C     		ldr	r3, [r7, #64]
 5339 1b12 1344     		add	r3, r3, r2
 5340 1b14 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5341 1b16 2548     		ldr	r0, .L207+52
 5342 1b18 7B68     		ldr	r3, [r7, #4]
 5343 1b1a B968     		ldr	r1, [r7, #8]
 5344 1b1c 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 122


 5345 1b1e D200     		lsls	r2, r2, #3
 5346 1b20 D21A     		subs	r2, r2, r3
 5347 1b22 5300     		lsls	r3, r2, #1
 5348 1b24 1A46     		mov	r2, r3
 5349 1b26 0B46     		mov	r3, r1
 5350 1b28 DB00     		lsls	r3, r3, #3
 5351 1b2a 5B1A     		subs	r3, r3, r1
 5352 1b2c 1B01     		lsls	r3, r3, #4
 5353 1b2e 1344     		add	r3, r3, r2
 5354 1b30 C218     		adds	r2, r0, r3
 5355 1b32 BB6B     		ldr	r3, [r7, #56]
 5356 1b34 1344     		add	r3, r3, r2
 5357 1b36 2246     		mov	r2, r4
 5358 1b38 1A70     		strb	r2, [r3]
1468:main.c        ****                 bufferPointer++;
 5359              		.loc 1 1468 0 discriminator 3
 5360 1b3a 3B6C     		ldr	r3, [r7, #64]
 5361 1b3c 0133     		adds	r3, r3, #1
 5362 1b3e 3B64     		str	r3, [r7, #64]
1465:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5363              		.loc 1 1465 0 discriminator 3
 5364 1b40 BB6B     		ldr	r3, [r7, #56]
 5365 1b42 0133     		adds	r3, r3, #1
 5366 1b44 BB63     		str	r3, [r7, #56]
 5367              	.L175:
1465:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5368              		.loc 1 1465 0 is_stmt 0 discriminator 1
 5369 1b46 BB6B     		ldr	r3, [r7, #56]
 5370 1b48 0D2B     		cmp	r3, #13
 5371 1b4a E0DD     		ble	.L176
 5372              	.LBE38:
1469:main.c        ****             }
1470:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 5373              		.loc 1 1470 0 is_stmt 1
 5374 1b4c 104B     		ldr	r3, .L207+24
 5375 1b4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5376 1b50 1A46     		mov	r2, r3
 5377 1b52 BB68     		ldr	r3, [r7, #8]
 5378 1b54 9A42     		cmp	r2, r3
 5379 1b56 40F0AF80 		bne	.L184
 5380              		.loc 1 1470 0 is_stmt 0 discriminator 1
 5381 1b5a 7B68     		ldr	r3, [r7, #4]
 5382 1b5c 072B     		cmp	r3, #7
 5383 1b5e 40F0AB80 		bne	.L184
 5384              		.loc 1 1470 0 discriminator 2
 5385 1b62 134A     		ldr	r2, .L207+56
 5386 1b64 BB68     		ldr	r3, [r7, #8]
 5387 1b66 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5388 1b6a 002B     		cmp	r3, #0
 5389 1b6c 40F0A480 		bne	.L184
1471:main.c        ****             {
1472:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5390              		.loc 1 1472 0 is_stmt 1
 5391 1b70 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5392              	.LBE36:
1455:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5393              		.loc 1 1455 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 123


 5394 1b74 A0E0     		b	.L184
 5395              	.L208:
 5396 1b76 00BF     		.align	2
 5397              	.L207:
 5398 1b78 00000000 		.word	pedals8bit
 5399 1b7c 00000000 		.word	myArray
 5400 1b80 00000000 		.word	voice
 5401 1b84 00000000 		.word	octave
 5402 1b88 00000000 		.word	dualSlider
 5403 1b8c 00000000 		.word	neck
 5404 1b90 00000000 		.word	patchNum
 5405 1b94 00000000 		.word	processed_volumePedal
 5406 1b98 00000000 		.word	bar
 5407 1b9c 00000000 		.word	sendKnobs
 5408 1ba0 00000000 		.word	stringMIDI
 5409 1ba4 00000000 		.word	inBuffer
 5410 1ba8 00000000 		.word	presetNamesArray
 5411 1bac 00000000 		.word	macroNamesArray
 5412 1bb0 00000000 		.word	presetAlreadyDisplayed
 5413              	.L172:
1473:main.c        ****             }
1474:main.c        ****         }
1475:main.c        ****         else if ((inBuffer[0] == 252) && (inBuffer[31] == 254))
 5414              		.loc 1 1475 0
 5415 1bb4 4B4B     		ldr	r3, .L209
 5416 1bb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5417 1bb8 FC2B     		cmp	r3, #252
 5418 1bba 7ED1     		bne	.L178
 5419              		.loc 1 1475 0 is_stmt 0 discriminator 1
 5420 1bbc 494B     		ldr	r3, .L209
 5421 1bbe DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5422 1bc0 FE2B     		cmp	r3, #254
 5423 1bc2 7AD1     		bne	.L178
1476:main.c        ****         {
1477:main.c        ****             //oop this means we're about to get new firmware. Reset to bootloader
1478:main.c        ****             SPIM_1_Stop();
 5424              		.loc 1 1478 0 is_stmt 1
 5425 1bc4 FFF7FEFF 		bl	SPIM_1_Stop
1479:main.c        ****             myGFX_setFont(0);
 5426              		.loc 1 1479 0
 5427 1bc8 0020     		movs	r0, #0
 5428 1bca FFF7FEFF 		bl	myGFX_setFont
1480:main.c        ****             OLEDwriteString("FIRMWARE   ", 11, 1, FirstLine);
 5429              		.loc 1 1480 0
 5430 1bce 0023     		movs	r3, #0
 5431 1bd0 0122     		movs	r2, #1
 5432 1bd2 0B21     		movs	r1, #11
 5433 1bd4 4448     		ldr	r0, .L209+4
 5434 1bd6 FFF7FEFF 		bl	OLEDwriteString
1481:main.c        ****             OLEDwriteString("UPDATE     ", 11, 1, SecondLine);
 5435              		.loc 1 1481 0
 5436 1bda 0123     		movs	r3, #1
 5437 1bdc 0122     		movs	r2, #1
 5438 1bde 0B21     		movs	r1, #11
 5439 1be0 4248     		ldr	r0, .L209+8
 5440 1be2 FFF7FEFF 		bl	OLEDwriteString
1482:main.c        ****             OLEDwriteString("           ", 11, 1, ThirdLine);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 124


 5441              		.loc 1 1482 0
 5442 1be6 0223     		movs	r3, #2
 5443 1be8 0122     		movs	r2, #1
 5444 1bea 0B21     		movs	r1, #11
 5445 1bec 4048     		ldr	r0, .L209+12
 5446 1bee FFF7FEFF 		bl	OLEDwriteString
1483:main.c        ****             OLEDwriteString("           ", 11, 1, FourthLine);
 5447              		.loc 1 1483 0
 5448 1bf2 0323     		movs	r3, #3
 5449 1bf4 0122     		movs	r2, #1
 5450 1bf6 0B21     		movs	r1, #11
 5451 1bf8 3D48     		ldr	r0, .L209+12
 5452 1bfa FFF7FEFF 		bl	OLEDwriteString
1484:main.c        ****             main_counter = 11;
 5453              		.loc 1 1484 0
 5454 1bfe 3D4B     		ldr	r3, .L209+16
 5455 1c00 0B22     		movs	r2, #11
 5456 1c02 1A70     		strb	r2, [r3]
1485:main.c        ****                    //set muxes to write to main OLED
1486:main.c        ****             if (mux_states[main_counter][0] != last_mux)
 5457              		.loc 1 1486 0
 5458 1c04 3B4B     		ldr	r3, .L209+16
 5459 1c06 1B78     		ldrb	r3, [r3]
 5460 1c08 DBB2     		uxtb	r3, r3
 5461 1c0a 1A46     		mov	r2, r3
 5462 1c0c 3A4B     		ldr	r3, .L209+20
 5463 1c0e 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 5464 1c12 3A4B     		ldr	r3, .L209+24
 5465 1c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5466 1c16 9A42     		cmp	r2, r3
 5467 1c18 13D0     		beq	.L179
 5468              	.LBB39:
1487:main.c        ****             {
1488:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 5469              		.loc 1 1488 0
 5470 1c1a 364B     		ldr	r3, .L209+16
 5471 1c1c 1B78     		ldrb	r3, [r3]
 5472 1c1e DBB2     		uxtb	r3, r3
 5473 1c20 1A46     		mov	r2, r3
 5474 1c22 354B     		ldr	r3, .L209+20
 5475 1c24 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 5476 1c28 1A46     		mov	r2, r3
 5477 1c2a 0123     		movs	r3, #1
 5478 1c2c 9340     		lsls	r3, r3, r2
 5479 1c2e DAB2     		uxtb	r2, r3
 5480 1c30 334B     		ldr	r3, .L209+28
 5481 1c32 1A70     		strb	r2, [r3]
1489:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 5482              		.loc 1 1489 0
 5483 1c34 0022     		movs	r2, #0
 5484 1c36 0121     		movs	r1, #1
 5485 1c38 7020     		movs	r0, #112
 5486 1c3a FFF7FEFF 		bl	I2C_MasterWriteBlocking
 5487 1c3e 0346     		mov	r3, r0
 5488 1c40 FB70     		strb	r3, [r7, #3]
 5489              	.L179:
 5490              	.LBE39:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 125


1490:main.c        ****             }
1491:main.c        ****             last_mux = mux_states[main_counter][0];
 5491              		.loc 1 1491 0
 5492 1c42 2C4B     		ldr	r3, .L209+16
 5493 1c44 1B78     		ldrb	r3, [r3]
 5494 1c46 DBB2     		uxtb	r3, r3
 5495 1c48 1A46     		mov	r2, r3
 5496 1c4a 2B4B     		ldr	r3, .L209+20
 5497 1c4c 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 5498 1c50 2A4B     		ldr	r3, .L209+24
 5499 1c52 1A70     		strb	r2, [r3]
1492:main.c        ****             
1493:main.c        ****             
1494:main.c        ****             CyDelayUs(10);
 5500              		.loc 1 1494 0
 5501 1c54 0A20     		movs	r0, #10
 5502 1c56 FFF7FEFF 		bl	CyDelayUs
1495:main.c        ****             if (mux_states[main_counter][0] == 5)
 5503              		.loc 1 1495 0
 5504 1c5a 264B     		ldr	r3, .L209+16
 5505 1c5c 1B78     		ldrb	r3, [r3]
 5506 1c5e DBB2     		uxtb	r3, r3
 5507 1c60 1A46     		mov	r2, r3
 5508 1c62 254B     		ldr	r3, .L209+20
 5509 1c64 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 5510 1c68 052B     		cmp	r3, #5
 5511 1c6a 1DD1     		bne	.L180
1496:main.c        ****             {
1497:main.c        ****                 if (!i2c_skipped[main_counter])
 5512              		.loc 1 1497 0
 5513 1c6c 214B     		ldr	r3, .L209+16
 5514 1c6e 1B78     		ldrb	r3, [r3]
 5515 1c70 DBB2     		uxtb	r3, r3
 5516 1c72 1A46     		mov	r2, r3
 5517 1c74 234B     		ldr	r3, .L209+32
 5518 1c76 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 5519 1c78 002B     		cmp	r3, #0
 5520 1c7a 15D1     		bne	.L180
1498:main.c        ****                 {
1499:main.c        ****                     I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 5521              		.loc 1 1499 0
 5522 1c7c 1D4B     		ldr	r3, .L209+16
 5523 1c7e 1B78     		ldrb	r3, [r3]
 5524 1c80 DBB2     		uxtb	r3, r3
 5525 1c82 1D4A     		ldr	r2, .L209+20
 5526 1c84 5B00     		lsls	r3, r3, #1
 5527 1c86 1344     		add	r3, r3, r2
 5528 1c88 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5529 1c8a 1A46     		mov	r2, r3
 5530 1c8c 0123     		movs	r3, #1
 5531 1c8e 9340     		lsls	r3, r3, r2
 5532 1c90 DAB2     		uxtb	r2, r3
 5533 1c92 1B4B     		ldr	r3, .L209+28
 5534 1c94 1A70     		strb	r2, [r3]
1500:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 5535              		.loc 1 1500 0
 5536 1c96 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 126


 5537 1c98 0121     		movs	r1, #1
 5538 1c9a 7120     		movs	r0, #113
 5539 1c9c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 5540 1ca0 0346     		mov	r3, r0
 5541 1ca2 1A46     		mov	r2, r3
 5542 1ca4 184B     		ldr	r3, .L209+36
 5543 1ca6 1A60     		str	r2, [r3]
 5544              	.L180:
1501:main.c        ****                 }
1502:main.c        ****             }
1503:main.c        **** 
1504:main.c        ****             CyDelayUs(10);
 5545              		.loc 1 1504 0
 5546 1ca8 0A20     		movs	r0, #10
 5547 1caa FFF7FEFF 		bl	CyDelayUs
1505:main.c        **** 
1506:main.c        ****             OLED_draw(128, 64);
 5548              		.loc 1 1506 0
 5549 1cae 4021     		movs	r1, #64
 5550 1cb0 8020     		movs	r0, #128
 5551 1cb2 FFF7FEFF 		bl	OLED_draw
 5552 1cb6 00E0     		b	.L178
 5553              	.L184:
1455:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5554              		.loc 1 1455 0
 5555 1cb8 00BF     		nop
 5556              	.L178:
1507:main.c        ****             #ifdef BOOTLOAD_STYLE
1508:main.c        ****             Bootloadable_Load();
1509:main.c        ****                 #endif
1510:main.c        ****         }
1511:main.c        ****         
1512:main.c        ****         SPIM_1_ClearRxBuffer();
 5557              		.loc 1 1512 0
 5558 1cba FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1513:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 5559              		.loc 1 1513 0
 5560 1cbe 134B     		ldr	r3, .L209+40
 5561 1cc0 1B78     		ldrb	r3, [r3]
 5562 1cc2 DBB2     		uxtb	r3, r3
 5563 1cc4 0121     		movs	r1, #1
 5564 1cc6 1846     		mov	r0, r3
 5565 1cc8 FFF7FEFF 		bl	CyDmaChEnable
1514:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 5566              		.loc 1 1514 0
 5567 1ccc 104B     		ldr	r3, .L209+44
 5568 1cce 1B78     		ldrb	r3, [r3]
 5569 1cd0 DBB2     		uxtb	r3, r3
 5570 1cd2 0121     		movs	r1, #1
 5571 1cd4 1846     		mov	r0, r3
 5572 1cd6 FFF7FEFF 		bl	CyDmaChEnable
1515:main.c        ****         
1516:main.c        ****         testpin6_Write(0);
 5573              		.loc 1 1516 0
 5574 1cda 0020     		movs	r0, #0
 5575 1cdc FFF7FEFF 		bl	testpin6_Write
1517:main.c        ****        
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 127


1518:main.c        **** 
1519:main.c        ****      }
 5576              		.loc 1 1519 0
 5577 1ce0 FEF736BD 		b	.L181
 5578              	.L210:
 5579              		.align	2
 5580              	.L209:
 5581 1ce4 00000000 		.word	inBuffer
 5582 1ce8 04040000 		.word	.LC1
 5583 1cec 10040000 		.word	.LC2
 5584 1cf0 1C040000 		.word	.LC3
 5585 1cf4 00000000 		.word	main_counter
 5586 1cf8 00000000 		.word	mux_states
 5587 1cfc 00000000 		.word	last_mux
 5588 1d00 00000000 		.word	I2Cbuff1
 5589 1d04 00000000 		.word	i2c_skipped
 5590 1d08 00000000 		.word	status
 5591 1d0c 00000000 		.word	rx3Channel
 5592 1d10 00000000 		.word	txChannel
 5593              		.cfi_endproc
 5594              	.LFE75:
 5595              		.size	main, .-main
 5596              		.section	.text.DmaTxConfiguration,"ax",%progbits
 5597              		.align	2
 5598              		.global	DmaTxConfiguration
 5599              		.thumb
 5600              		.thumb_func
 5601              		.type	DmaTxConfiguration, %function
 5602              	DmaTxConfiguration:
 5603              	.LFB76:
1520:main.c        **** }
1521:main.c        **** 
1522:main.c        **** void DmaTxConfiguration()
1523:main.c        **** {
 5604              		.loc 1 1523 0
 5605              		.cfi_startproc
 5606              		@ args = 0, pretend = 0, frame = 0
 5607              		@ frame_needed = 1, uses_anonymous_args = 0
 5608 0000 80B5     		push	{r7, lr}
 5609              		.cfi_def_cfa_offset 8
 5610              		.cfi_offset 7, -8
 5611              		.cfi_offset 14, -4
 5612 0002 00AF     		add	r7, sp, #0
 5613              		.cfi_def_cfa_register 7
1524:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1525:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 5614              		.loc 1 1525 0
 5615 0004 4FF48043 		mov	r3, #16384
 5616 0008 41F6FF72 		movw	r2, #8191
 5617 000c 0121     		movs	r1, #1
 5618 000e 0120     		movs	r0, #1
 5619 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 5620 0014 0346     		mov	r3, r0
 5621 0016 1A46     		mov	r2, r3
 5622 0018 124B     		ldr	r3, .L212
 5623 001a 1A70     		strb	r2, [r3]
1526:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 128


1527:main.c        **** 
1528:main.c        ****     txTD = CyDmaTdAllocate();
 5624              		.loc 1 1528 0
 5625 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5626 0020 0346     		mov	r3, r0
 5627 0022 1A46     		mov	r2, r3
 5628 0024 104B     		ldr	r3, .L212+4
 5629 0026 1A70     		strb	r2, [r3]
1529:main.c        **** 
1530:main.c        ****     /* Configure this Td as follows:
1531:main.c        ****     *  - Increment the source address, but not the destination address   
1532:main.c        ****     */
1533:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 5630              		.loc 1 1533 0
 5631 0028 0F4B     		ldr	r3, .L212+4
 5632 002a 1B78     		ldrb	r3, [r3]
 5633 002c D8B2     		uxtb	r0, r3
 5634 002e 0123     		movs	r3, #1
 5635 0030 FE22     		movs	r2, #254
 5636 0032 2021     		movs	r1, #32
 5637 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1534:main.c        **** 
1535:main.c        ****     /* From the memory to the SPIM */
1536:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 5638              		.loc 1 1536 0
 5639 0038 0B4B     		ldr	r3, .L212+4
 5640 003a 1B78     		ldrb	r3, [r3]
 5641 003c DBB2     		uxtb	r3, r3
 5642 003e 0B4A     		ldr	r2, .L212+8
 5643 0040 91B2     		uxth	r1, r2
 5644 0042 46F24642 		movw	r2, #25670
 5645 0046 1846     		mov	r0, r3
 5646 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1537:main.c        ****     
1538:main.c        ****     /* Associate the TD with the channel */
1539:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 5647              		.loc 1 1539 0
 5648 004c 054B     		ldr	r3, .L212
 5649 004e 1B78     		ldrb	r3, [r3]
 5650 0050 DAB2     		uxtb	r2, r3
 5651 0052 054B     		ldr	r3, .L212+4
 5652 0054 1B78     		ldrb	r3, [r3]
 5653 0056 DBB2     		uxtb	r3, r3
 5654 0058 1946     		mov	r1, r3
 5655 005a 1046     		mov	r0, r2
 5656 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1540:main.c        ****    
1541:main.c        **** } 
 5657              		.loc 1 1541 0
 5658 0060 00BF     		nop
 5659 0062 80BD     		pop	{r7, pc}
 5660              	.L213:
 5661              		.align	2
 5662              	.L212:
 5663 0064 00000000 		.word	txChannel
 5664 0068 00000000 		.word	txTD
 5665 006c 00000000 		.word	myArray
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 129


 5666              		.cfi_endproc
 5667              	.LFE76:
 5668              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 5669              		.section	.text.DmaRxConfiguration,"ax",%progbits
 5670              		.align	2
 5671              		.global	DmaRxConfiguration
 5672              		.thumb
 5673              		.thumb_func
 5674              		.type	DmaRxConfiguration, %function
 5675              	DmaRxConfiguration:
 5676              	.LFB77:
1542:main.c        **** 
1543:main.c        **** void DmaRxConfiguration()
1544:main.c        **** { 
 5677              		.loc 1 1544 0
 5678              		.cfi_startproc
 5679              		@ args = 0, pretend = 0, frame = 0
 5680              		@ frame_needed = 1, uses_anonymous_args = 0
 5681 0000 80B5     		push	{r7, lr}
 5682              		.cfi_def_cfa_offset 8
 5683              		.cfi_offset 7, -8
 5684              		.cfi_offset 14, -4
 5685 0002 00AF     		add	r7, sp, #0
 5686              		.cfi_def_cfa_register 7
1545:main.c        ****     //pluck dma
1546:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5687              		.loc 1 1546 0
 5688 0004 41F6FF73 		movw	r3, #8191
 5689 0008 4FF48042 		mov	r2, #16384
 5690 000c 0121     		movs	r1, #1
 5691 000e 0120     		movs	r0, #1
 5692 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 5693 0014 0346     		mov	r3, r0
 5694 0016 1A46     		mov	r2, r3
 5695 0018 4A4B     		ldr	r3, .L215
 5696 001a 1A70     		strb	r2, [r3]
1547:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1548:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 5697              		.loc 1 1548 0
 5698 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5699 0020 0346     		mov	r3, r0
 5700 0022 1A46     		mov	r2, r3
 5701 0024 484B     		ldr	r3, .L215+4
 5702 0026 1A70     		strb	r2, [r3]
1549:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 5703              		.loc 1 1549 0
 5704 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 5705 002c 0346     		mov	r3, r0
 5706 002e 1A46     		mov	r2, r3
 5707 0030 454B     		ldr	r3, .L215+4
 5708 0032 5A70     		strb	r2, [r3, #1]
1550:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 5709              		.loc 1 1550 0
 5710 0034 444B     		ldr	r3, .L215+4
 5711 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5712 0038 0223     		movs	r3, #2
 5713 003a FE22     		movs	r2, #254
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 130


 5714 003c 1A21     		movs	r1, #26
 5715 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1551:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 5716              		.loc 1 1551 0
 5717 0042 414B     		ldr	r3, .L215+4
 5718 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5719 0046 0223     		movs	r3, #2
 5720 0048 FE22     		movs	r2, #254
 5721 004a 1A21     		movs	r1, #26
 5722 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1552:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 5723              		.loc 1 1552 0
 5724 0050 3D4B     		ldr	r3, .L215+4
 5725 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5726 0054 3D4A     		ldr	r2, .L215+8
 5727 0056 92B2     		uxth	r2, r2
 5728 0058 46F25551 		movw	r1, #25941
 5729 005c 1846     		mov	r0, r3
 5730 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1553:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 5731              		.loc 1 1553 0
 5732 0062 394B     		ldr	r3, .L215+4
 5733 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5734 0066 3A4A     		ldr	r2, .L215+12
 5735 0068 92B2     		uxth	r2, r2
 5736 006a 46F25551 		movw	r1, #25941
 5737 006e 1846     		mov	r0, r3
 5738 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1554:main.c        **** 
1555:main.c        ****     //bar dma
1556:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5739              		.loc 1 1556 0
 5740 0074 41F6FF73 		movw	r3, #8191
 5741 0078 4FF48042 		mov	r2, #16384
 5742 007c 0121     		movs	r1, #1
 5743 007e 0120     		movs	r0, #1
 5744 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 5745 0084 0346     		mov	r3, r0
 5746 0086 1A46     		mov	r2, r3
 5747 0088 324B     		ldr	r3, .L215+16
 5748 008a 1A70     		strb	r2, [r3]
1557:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1558:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 5749              		.loc 1 1558 0
 5750 008c FFF7FEFF 		bl	CyDmaTdAllocate
 5751 0090 0346     		mov	r3, r0
 5752 0092 1A46     		mov	r2, r3
 5753 0094 304B     		ldr	r3, .L215+20
 5754 0096 1A70     		strb	r2, [r3]
1559:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 5755              		.loc 1 1559 0
 5756 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 5757 009c 0346     		mov	r3, r0
 5758 009e 1A46     		mov	r2, r3
 5759 00a0 2D4B     		ldr	r3, .L215+20
 5760 00a2 5A70     		strb	r2, [r3, #1]
1560:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 131


 5761              		.loc 1 1560 0
 5762 00a4 2C4B     		ldr	r3, .L215+20
 5763 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5764 00a8 0623     		movs	r3, #6
 5765 00aa FE22     		movs	r2, #254
 5766 00ac 0821     		movs	r1, #8
 5767 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1561:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5768              		.loc 1 1561 0
 5769 00b2 294B     		ldr	r3, .L215+20
 5770 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5771 00b6 0623     		movs	r3, #6
 5772 00b8 FE22     		movs	r2, #254
 5773 00ba 0821     		movs	r1, #8
 5774 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1562:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 5775              		.loc 1 1562 0
 5776 00c0 254B     		ldr	r3, .L215+20
 5777 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5778 00c4 254A     		ldr	r2, .L215+24
 5779 00c6 92B2     		uxth	r2, r2
 5780 00c8 46F25841 		movw	r1, #25688
 5781 00cc 1846     		mov	r0, r3
 5782 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1563:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 5783              		.loc 1 1563 0
 5784 00d2 214B     		ldr	r3, .L215+20
 5785 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5786 00d6 224A     		ldr	r2, .L215+28
 5787 00d8 92B2     		uxth	r2, r2
 5788 00da 46F25841 		movw	r1, #25688
 5789 00de 1846     		mov	r0, r3
 5790 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1564:main.c        ****     
1565:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1566:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5791              		.loc 1 1566 0
 5792 00e4 41F6FF73 		movw	r3, #8191
 5793 00e8 4FF48042 		mov	r2, #16384
 5794 00ec 0121     		movs	r1, #1
 5795 00ee 0120     		movs	r0, #1
 5796 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 5797 00f4 0346     		mov	r3, r0
 5798 00f6 1A46     		mov	r2, r3
 5799 00f8 1A4B     		ldr	r3, .L215+32
 5800 00fa 1A70     		strb	r2, [r3]
1567:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1568:main.c        **** 
1569:main.c        ****     rx3TD = CyDmaTdAllocate();
 5801              		.loc 1 1569 0
 5802 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 5803 0100 0346     		mov	r3, r0
 5804 0102 1A46     		mov	r2, r3
 5805 0104 184B     		ldr	r3, .L215+36
 5806 0106 1A70     		strb	r2, [r3]
1570:main.c        ****     
1571:main.c        ****     /* Configure this Td as follows:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 132


1572:main.c        ****     *  - Increment the destination address, but not the source address
1573:main.c        ****     */
1574:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 5807              		.loc 1 1574 0
 5808 0108 174B     		ldr	r3, .L215+36
 5809 010a 1B78     		ldrb	r3, [r3]
 5810 010c D8B2     		uxtb	r0, r3
 5811 010e 0223     		movs	r3, #2
 5812 0110 FE22     		movs	r2, #254
 5813 0112 2021     		movs	r1, #32
 5814 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1575:main.c        **** 
1576:main.c        ****     /* From the SPIM to the memory */
1577:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 5815              		.loc 1 1577 0
 5816 0118 134B     		ldr	r3, .L215+36
 5817 011a 1B78     		ldrb	r3, [r3]
 5818 011c DBB2     		uxtb	r3, r3
 5819 011e 134A     		ldr	r2, .L215+40
 5820 0120 92B2     		uxth	r2, r2
 5821 0122 46F25641 		movw	r1, #25686
 5822 0126 1846     		mov	r0, r3
 5823 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1578:main.c        **** 
1579:main.c        ****     /* Associate the TD with the channel */
1580:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 5824              		.loc 1 1580 0
 5825 012c 0D4B     		ldr	r3, .L215+32
 5826 012e 1B78     		ldrb	r3, [r3]
 5827 0130 DAB2     		uxtb	r2, r3
 5828 0132 0D4B     		ldr	r3, .L215+36
 5829 0134 1B78     		ldrb	r3, [r3]
 5830 0136 DBB2     		uxtb	r3, r3
 5831 0138 1946     		mov	r1, r3
 5832 013a 1046     		mov	r0, r2
 5833 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1581:main.c        **** }
 5834              		.loc 1 1581 0
 5835 0140 00BF     		nop
 5836 0142 80BD     		pop	{r7, pc}
 5837              	.L216:
 5838              		.align	2
 5839              	.L215:
 5840 0144 00000000 		.word	rx1Channel
 5841 0148 00000000 		.word	rx1TD
 5842 014c 00000000 		.word	rxBufferPluck
 5843 0150 1A000000 		.word	rxBufferPluck+26
 5844 0154 00000000 		.word	rx2Channel
 5845 0158 00000000 		.word	rx2TD
 5846 015c 00000000 		.word	rxBufferBar
 5847 0160 08000000 		.word	rxBufferBar+8
 5848 0164 00000000 		.word	rx3Channel
 5849 0168 00000000 		.word	rx3TD
 5850 016c 00000000 		.word	inBuffer
 5851              		.cfi_endproc
 5852              	.LFE77:
 5853              		.size	DmaRxConfiguration, .-DmaRxConfiguration
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 133


 5854              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 5855              		.align	2
 5856              		.global	I2C_MasterWriteBlocking
 5857              		.thumb
 5858              		.thumb_func
 5859              		.type	I2C_MasterWriteBlocking, %function
 5860              	I2C_MasterWriteBlocking:
 5861              	.LFB78:
1582:main.c        **** 
1583:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1584:main.c        **** {
 5862              		.loc 1 1584 0
 5863              		.cfi_startproc
 5864              		@ args = 0, pretend = 0, frame = 24
 5865              		@ frame_needed = 1, uses_anonymous_args = 0
 5866 0000 80B5     		push	{r7, lr}
 5867              		.cfi_def_cfa_offset 8
 5868              		.cfi_offset 7, -8
 5869              		.cfi_offset 14, -4
 5870 0002 86B0     		sub	sp, sp, #24
 5871              		.cfi_def_cfa_offset 32
 5872 0004 00AF     		add	r7, sp, #0
 5873              		.cfi_def_cfa_register 7
 5874 0006 0346     		mov	r3, r0
 5875 0008 FB71     		strb	r3, [r7, #7]
 5876 000a 0B46     		mov	r3, r1	@ movhi
 5877 000c BB80     		strh	r3, [r7, #4]	@ movhi
 5878 000e 1346     		mov	r3, r2
 5879 0010 BB71     		strb	r3, [r7, #6]
1585:main.c        ****     uint8 volatile status;
1586:main.c        ****     uint8_t error = 0;
 5880              		.loc 1 1586 0
 5881 0012 0023     		movs	r3, #0
 5882 0014 FB75     		strb	r3, [r7, #23]
1587:main.c        ****     uint32_t timeout = 1000;
 5883              		.loc 1 1587 0
 5884 0016 4FF47A73 		mov	r3, #1000
 5885 001a 3B61     		str	r3, [r7, #16]
1588:main.c        ****     status = I2C_1_MasterClearStatus();
 5886              		.loc 1 1588 0
 5887 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 5888 0020 0346     		mov	r3, r0
 5889 0022 FB73     		strb	r3, [r7, #15]
1589:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 5890              		.loc 1 1589 0
 5891 0024 FB7B     		ldrb	r3, [r7, #15]
 5892 0026 DBB2     		uxtb	r3, r3
 5893 0028 5BB2     		sxtb	r3, r3
 5894 002a 002B     		cmp	r3, #0
 5895 002c 42DB     		blt	.L218
1590:main.c        ****     {
1591:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 5896              		.loc 1 1591 0
 5897 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 5898 0030 DAB2     		uxtb	r2, r3
 5899 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5900 0034 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 134


 5901 0036 2949     		ldr	r1, .L227
 5902 0038 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 5903 003c 0346     		mov	r3, r0
 5904 003e FB73     		strb	r3, [r7, #15]
1592:main.c        ****                                      mode);
1593:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 5905              		.loc 1 1593 0
 5906 0040 FB7B     		ldrb	r3, [r7, #15]
 5907 0042 DBB2     		uxtb	r3, r3
 5908 0044 002B     		cmp	r3, #0
 5909 0046 2FD1     		bne	.L219
 5910              	.L223:
1594:main.c        ****         {
1595:main.c        ****             /* wait for write complete and no error */
1596:main.c        ****             do
1597:main.c        ****             {
1598:main.c        ****                 status = I2C_1_MasterStatus();
 5911              		.loc 1 1598 0
 5912 0048 FFF7FEFF 		bl	I2C_1_MasterStatus
 5913 004c 0346     		mov	r3, r0
 5914 004e FB73     		strb	r3, [r7, #15]
1599:main.c        ****                 timeout--;
 5915              		.loc 1 1599 0
 5916 0050 3B69     		ldr	r3, [r7, #16]
 5917 0052 013B     		subs	r3, r3, #1
 5918 0054 3B61     		str	r3, [r7, #16]
1600:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 5919              		.loc 1 1600 0
 5920 0056 FB7B     		ldrb	r3, [r7, #15]
 5921 0058 DBB2     		uxtb	r3, r3
 5922 005a 802B     		cmp	r3, #128
 5923 005c 03D1     		bne	.L220
1601:main.c        ****                 {
1602:main.c        ****                     I2C_reset();
 5924              		.loc 1 1602 0
 5925 005e FFF7FEFF 		bl	I2C_reset
1603:main.c        ****                     error = 1;
 5926              		.loc 1 1603 0
 5927 0062 0123     		movs	r3, #1
 5928 0064 FB75     		strb	r3, [r7, #23]
 5929              	.L220:
1604:main.c        ****                 }
1605:main.c        ****                 if (timeout == 0)
 5930              		.loc 1 1605 0
 5931 0066 3B69     		ldr	r3, [r7, #16]
 5932 0068 002B     		cmp	r3, #0
 5933 006a 05D1     		bne	.L221
1606:main.c        ****                 {
1607:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5934              		.loc 1 1607 0
 5935 006c 8023     		movs	r3, #128
 5936 006e FB73     		strb	r3, [r7, #15]
1608:main.c        ****                     I2C_reset();
 5937              		.loc 1 1608 0
 5938 0070 FFF7FEFF 		bl	I2C_reset
1609:main.c        ****                     error = 1;
 5939              		.loc 1 1609 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 135


 5940 0074 0123     		movs	r3, #1
 5941 0076 FB75     		strb	r3, [r7, #23]
 5942              	.L221:
1610:main.c        ****                 }
1611:main.c        ****                 
1612:main.c        ****                 if (status == 0)
 5943              		.loc 1 1612 0
 5944 0078 FB7B     		ldrb	r3, [r7, #15]
 5945 007a DBB2     		uxtb	r3, r3
 5946 007c 002B     		cmp	r3, #0
 5947 007e 05D1     		bne	.L222
1613:main.c        ****                 {
1614:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5948              		.loc 1 1614 0
 5949 0080 8023     		movs	r3, #128
 5950 0082 FB73     		strb	r3, [r7, #15]
1615:main.c        ****                     I2C_reset();
 5951              		.loc 1 1615 0
 5952 0084 FFF7FEFF 		bl	I2C_reset
1616:main.c        ****                     error = 1;
 5953              		.loc 1 1616 0
 5954 0088 0123     		movs	r3, #1
 5955 008a FB75     		strb	r3, [r7, #23]
 5956              	.L222:
1617:main.c        ****                 }
1618:main.c        ****                 
1619:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 5957              		.loc 1 1619 0
 5958 008c FB7B     		ldrb	r3, [r7, #15]
 5959 008e DBB2     		uxtb	r3, r3
 5960 0090 03F08203 		and	r3, r3, #130
 5961 0094 002B     		cmp	r3, #0
 5962 0096 0DD1     		bne	.L218
 5963              		.loc 1 1619 0 is_stmt 0 discriminator 1
 5964 0098 FB7B     		ldrb	r3, [r7, #15]
 5965 009a DBB2     		uxtb	r3, r3
 5966 009c 002B     		cmp	r3, #0
 5967 009e 09D0     		beq	.L218
 5968              		.loc 1 1619 0 discriminator 2
 5969 00a0 3B69     		ldr	r3, [r7, #16]
 5970 00a2 002B     		cmp	r3, #0
 5971 00a4 D0D1     		bne	.L223
 5972 00a6 05E0     		b	.L218
 5973              	.L219:
1620:main.c        ****         }
1621:main.c        ****         else
1622:main.c        ****         {
1623:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1624:main.c        ****             *  I2CM_MasterStatus() error output */
1625:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 5974              		.loc 1 1625 0 is_stmt 1
 5975 00a8 8023     		movs	r3, #128
 5976 00aa FB73     		strb	r3, [r7, #15]
1626:main.c        ****             I2C_reset();
 5977              		.loc 1 1626 0
 5978 00ac FFF7FEFF 		bl	I2C_reset
1627:main.c        ****             error = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 136


 5979              		.loc 1 1627 0
 5980 00b0 0123     		movs	r3, #1
 5981 00b2 FB75     		strb	r3, [r7, #23]
 5982              	.L218:
1628:main.c        ****         } 
1629:main.c        ****     }  
1630:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 5983              		.loc 1 1630 0
 5984 00b4 FB7B     		ldrb	r3, [r7, #15]
 5985 00b6 DBB2     		uxtb	r3, r3
 5986 00b8 03F02003 		and	r3, r3, #32
 5987 00bc 002B     		cmp	r3, #0
 5988 00be 04D1     		bne	.L224
 5989              		.loc 1 1630 0 is_stmt 0 discriminator 1
 5990 00c0 FB7B     		ldrb	r3, [r7, #15]
 5991 00c2 DBB2     		uxtb	r3, r3
 5992 00c4 5BB2     		sxtb	r3, r3
 5993 00c6 002B     		cmp	r3, #0
 5994 00c8 03DA     		bge	.L225
 5995              	.L224:
1631:main.c        ****     {
1632:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1633:main.c        ****         //i2c_skipped[main_counter] = 1;
1634:main.c        ****         I2C_reset();
 5996              		.loc 1 1634 0 is_stmt 1
 5997 00ca FFF7FEFF 		bl	I2C_reset
1635:main.c        ****         error = 1;
 5998              		.loc 1 1635 0
 5999 00ce 0123     		movs	r3, #1
 6000 00d0 FB75     		strb	r3, [r7, #23]
 6001              	.L225:
1636:main.c        ****     }
1637:main.c        ****     return error;
 6002              		.loc 1 1637 0
 6003 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1638:main.c        **** }
 6004              		.loc 1 1638 0
 6005 00d4 1846     		mov	r0, r3
 6006 00d6 1837     		adds	r7, r7, #24
 6007              		.cfi_def_cfa_offset 8
 6008 00d8 BD46     		mov	sp, r7
 6009              		.cfi_def_cfa_register 13
 6010              		@ sp needed
 6011 00da 80BD     		pop	{r7, pc}
 6012              	.L228:
 6013              		.align	2
 6014              	.L227:
 6015 00dc 00000000 		.word	I2Cbuff1
 6016              		.cfi_endproc
 6017              	.LFE78:
 6018              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 6019              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 6020              		.align	2
 6021              		.global	I2C_MasterReadBlocking
 6022              		.thumb
 6023              		.thumb_func
 6024              		.type	I2C_MasterReadBlocking, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 137


 6025              	I2C_MasterReadBlocking:
 6026              	.LFB79:
1639:main.c        **** 
1640:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1641:main.c        **** {
 6027              		.loc 1 1641 0
 6028              		.cfi_startproc
 6029              		@ args = 0, pretend = 0, frame = 16
 6030              		@ frame_needed = 1, uses_anonymous_args = 0
 6031 0000 80B5     		push	{r7, lr}
 6032              		.cfi_def_cfa_offset 8
 6033              		.cfi_offset 7, -8
 6034              		.cfi_offset 14, -4
 6035 0002 84B0     		sub	sp, sp, #16
 6036              		.cfi_def_cfa_offset 24
 6037 0004 00AF     		add	r7, sp, #0
 6038              		.cfi_def_cfa_register 7
 6039 0006 0346     		mov	r3, r0
 6040 0008 FB71     		strb	r3, [r7, #7]
 6041 000a 0B46     		mov	r3, r1
 6042 000c BB71     		strb	r3, [r7, #6]
 6043 000e 1346     		mov	r3, r2
 6044 0010 7B71     		strb	r3, [r7, #5]
1642:main.c        ****     uint8 volatile status;
1643:main.c        ****     uint32_t timeout = 50000;
 6045              		.loc 1 1643 0
 6046 0012 4CF25033 		movw	r3, #50000
 6047 0016 FB60     		str	r3, [r7, #12]
1644:main.c        ****     uint8_t error = 0;
 6048              		.loc 1 1644 0
 6049 0018 0023     		movs	r3, #0
 6050 001a FB72     		strb	r3, [r7, #11]
1645:main.c        ****     status = I2C_1_MasterClearStatus();
 6051              		.loc 1 1645 0
 6052 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6053 0020 0346     		mov	r3, r0
 6054 0022 BB72     		strb	r3, [r7, #10]
1646:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6055              		.loc 1 1646 0
 6056 0024 BB7A     		ldrb	r3, [r7, #10]
 6057 0026 DBB2     		uxtb	r3, r3
 6058 0028 5BB2     		sxtb	r3, r3
 6059 002a 002B     		cmp	r3, #0
 6060 002c 46DB     		blt	.L230
1647:main.c        ****     {
1648:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 6061              		.loc 1 1648 0
 6062 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6063 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 6064 0032 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6065 0034 2B49     		ldr	r1, .L239
 6066 0036 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 6067 003a 0346     		mov	r3, r0
 6068 003c BB72     		strb	r3, [r7, #10]
1649:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1650:main.c        ****                                     nbytes, mode); 
1651:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 138


 6069              		.loc 1 1651 0
 6070 003e BB7A     		ldrb	r3, [r7, #10]
 6071 0040 DBB2     		uxtb	r3, r3
 6072 0042 002B     		cmp	r3, #0
 6073 0044 34D1     		bne	.L231
 6074              	.L235:
1652:main.c        ****         {
1653:main.c        ****             /* wait for read complete and no error */
1654:main.c        ****             do
1655:main.c        ****             {
1656:main.c        ****                 status = I2C_1_MasterStatus();
 6075              		.loc 1 1656 0
 6076 0046 FFF7FEFF 		bl	I2C_1_MasterStatus
 6077 004a 0346     		mov	r3, r0
 6078 004c BB72     		strb	r3, [r7, #10]
1657:main.c        ****                 timeout--;
 6079              		.loc 1 1657 0
 6080 004e FB68     		ldr	r3, [r7, #12]
 6081 0050 013B     		subs	r3, r3, #1
 6082 0052 FB60     		str	r3, [r7, #12]
1658:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6083              		.loc 1 1658 0
 6084 0054 BB7A     		ldrb	r3, [r7, #10]
 6085 0056 DBB2     		uxtb	r3, r3
 6086 0058 802B     		cmp	r3, #128
 6087 005a 12D1     		bne	.L232
1659:main.c        ****                 {
1660:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 6088              		.loc 1 1660 0
 6089 005c 224B     		ldr	r3, .L239+4
 6090 005e 5222     		movs	r2, #82
 6091 0060 1A70     		strb	r2, [r3]
 6092 0062 224B     		ldr	r3, .L239+8
 6093 0064 FF22     		movs	r2, #255
 6094 0066 1A70     		strb	r2, [r3]
 6095 0068 214B     		ldr	r3, .L239+12
 6096 006a 0022     		movs	r2, #0
 6097 006c 1A70     		strb	r2, [r3]
 6098 006e 00BF     		nop
 6099              	.L233:
 6100              		.loc 1 1660 0 is_stmt 0 discriminator 2
 6101 0070 1E4B     		ldr	r3, .L239+8
 6102 0072 1B78     		ldrb	r3, [r3]
 6103 0074 DBB2     		uxtb	r3, r3
 6104 0076 002B     		cmp	r3, #0
 6105 0078 FAD1     		bne	.L233
1661:main.c        ****                     I2C_reset();
 6106              		.loc 1 1661 0 is_stmt 1
 6107 007a FFF7FEFF 		bl	I2C_reset
1662:main.c        ****                     error = 1;
 6108              		.loc 1 1662 0
 6109 007e 0123     		movs	r3, #1
 6110 0080 FB72     		strb	r3, [r7, #11]
 6111              	.L232:
1663:main.c        ****                 }
1664:main.c        ****                 if (timeout == 0)
 6112              		.loc 1 1664 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 139


 6113 0082 FB68     		ldr	r3, [r7, #12]
 6114 0084 002B     		cmp	r3, #0
 6115 0086 05D1     		bne	.L234
1665:main.c        ****                 {
1666:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6116              		.loc 1 1666 0
 6117 0088 8023     		movs	r3, #128
 6118 008a BB72     		strb	r3, [r7, #10]
1667:main.c        ****                     I2C_reset();
 6119              		.loc 1 1667 0
 6120 008c FFF7FEFF 		bl	I2C_reset
1668:main.c        ****                     error = 1;
 6121              		.loc 1 1668 0
 6122 0090 0123     		movs	r3, #1
 6123 0092 FB72     		strb	r3, [r7, #11]
 6124              	.L234:
1669:main.c        ****                 }
1670:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6125              		.loc 1 1670 0
 6126 0094 BB7A     		ldrb	r3, [r7, #10]
 6127 0096 DBB2     		uxtb	r3, r3
 6128 0098 03F08103 		and	r3, r3, #129
 6129 009c 002B     		cmp	r3, #0
 6130 009e 0DD1     		bne	.L230
 6131              		.loc 1 1670 0 is_stmt 0 discriminator 1
 6132 00a0 BB7A     		ldrb	r3, [r7, #10]
 6133 00a2 DBB2     		uxtb	r3, r3
 6134 00a4 002B     		cmp	r3, #0
 6135 00a6 09D0     		beq	.L230
 6136              		.loc 1 1670 0 discriminator 2
 6137 00a8 FB68     		ldr	r3, [r7, #12]
 6138 00aa 002B     		cmp	r3, #0
 6139 00ac CBD1     		bne	.L235
 6140 00ae 05E0     		b	.L230
 6141              	.L231:
1671:main.c        ****         }
1672:main.c        ****         else
1673:main.c        ****         {
1674:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1675:main.c        ****             *  I2CM_MasterStatus() error output */
1676:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6142              		.loc 1 1676 0 is_stmt 1
 6143 00b0 8023     		movs	r3, #128
 6144 00b2 BB72     		strb	r3, [r7, #10]
1677:main.c        ****             I2C_reset();
 6145              		.loc 1 1677 0
 6146 00b4 FFF7FEFF 		bl	I2C_reset
1678:main.c        ****             error = 1;
 6147              		.loc 1 1678 0
 6148 00b8 0123     		movs	r3, #1
 6149 00ba FB72     		strb	r3, [r7, #11]
 6150              	.L230:
1679:main.c        ****         }
1680:main.c        ****     }
1681:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6151              		.loc 1 1681 0
 6152 00bc BB7A     		ldrb	r3, [r7, #10]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 140


 6153 00be DBB2     		uxtb	r3, r3
 6154 00c0 03F02003 		and	r3, r3, #32
 6155 00c4 002B     		cmp	r3, #0
 6156 00c6 04D1     		bne	.L236
 6157              		.loc 1 1681 0 is_stmt 0 discriminator 1
 6158 00c8 BB7A     		ldrb	r3, [r7, #10]
 6159 00ca DBB2     		uxtb	r3, r3
 6160 00cc 5BB2     		sxtb	r3, r3
 6161 00ce 002B     		cmp	r3, #0
 6162 00d0 03DA     		bge	.L237
 6163              	.L236:
1682:main.c        ****     {
1683:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1684:main.c        ****         //i2c_skipped[main_counter] = 1;
1685:main.c        ****         I2C_reset();
 6164              		.loc 1 1685 0 is_stmt 1
 6165 00d2 FFF7FEFF 		bl	I2C_reset
1686:main.c        ****         error = 1;
 6166              		.loc 1 1686 0
 6167 00d6 0123     		movs	r3, #1
 6168 00d8 FB72     		strb	r3, [r7, #11]
 6169              	.L237:
1687:main.c        ****     }
1688:main.c        ****     return error;
 6170              		.loc 1 1688 0
 6171 00da FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1689:main.c        **** }
 6172              		.loc 1 1689 0
 6173 00dc 1846     		mov	r0, r3
 6174 00de 1037     		adds	r7, r7, #16
 6175              		.cfi_def_cfa_offset 8
 6176 00e0 BD46     		mov	sp, r7
 6177              		.cfi_def_cfa_register 13
 6178              		@ sp needed
 6179 00e2 80BD     		pop	{r7, pc}
 6180              	.L240:
 6181              		.align	2
 6182              	.L239:
 6183 00e4 00000000 		.word	I2Cbuff2
 6184 00e8 74640040 		.word	1073767540
 6185 00ec 1B640040 		.word	1073767451
 6186 00f0 5B640040 		.word	1073767515
 6187              		.cfi_endproc
 6188              	.LFE79:
 6189              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 6190              		.section	.text.I2C_reset,"ax",%progbits
 6191              		.align	2
 6192              		.global	I2C_reset
 6193              		.thumb
 6194              		.thumb_func
 6195              		.type	I2C_reset, %function
 6196              	I2C_reset:
 6197              	.LFB80:
1690:main.c        **** 
1691:main.c        **** void I2C_reset(void)
1692:main.c        **** {
 6198              		.loc 1 1692 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 141


 6199              		.cfi_startproc
 6200              		@ args = 0, pretend = 0, frame = 0
 6201              		@ frame_needed = 1, uses_anonymous_args = 0
 6202 0000 80B5     		push	{r7, lr}
 6203              		.cfi_def_cfa_offset 8
 6204              		.cfi_offset 7, -8
 6205              		.cfi_offset 14, -4
 6206 0002 00AF     		add	r7, sp, #0
 6207              		.cfi_def_cfa_register 7
1693:main.c        ****   I2C_1_Stop();
 6208              		.loc 1 1693 0
 6209 0004 FFF7FEFF 		bl	I2C_1_Stop
1694:main.c        **** 
1695:main.c        ****   /* Disable/clear everything, then reinitialize. */
1696:main.c        **** 
1697:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 6210              		.loc 1 1697 0
 6211 0008 044B     		ldr	r3, .L242
 6212 000a 0022     		movs	r2, #0
 6213 000c 1A70     		strb	r2, [r3]
1698:main.c        **** 
1699:main.c        ****   //I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
1700:main.c        **** 
1701:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 6214              		.loc 1 1701 0
 6215 000e 044B     		ldr	r3, .L242+4
 6216 0010 0022     		movs	r2, #0
 6217 0012 1A70     		strb	r2, [r3]
1702:main.c        **** 
1703:main.c        ****   I2C_1_Start();
 6218              		.loc 1 1703 0
 6219 0014 FFF7FEFF 		bl	I2C_1_Start
1704:main.c        **** }
 6220              		.loc 1 1704 0
 6221 0018 00BF     		nop
 6222 001a 80BD     		pop	{r7, pc}
 6223              	.L243:
 6224              		.align	2
 6225              	.L242:
 6226 001c 74640040 		.word	1073767540
 6227 0020 00000000 		.word	I2C_1_initVar
 6228              		.cfi_endproc
 6229              	.LFE80:
 6230              		.size	I2C_reset, .-I2C_reset
 6231              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 6232              		.align	2
 6233              		.global	displayCurrentPresetNameAndCopedent
 6234              		.thumb
 6235              		.thumb_func
 6236              		.type	displayCurrentPresetNameAndCopedent, %function
 6237              	displayCurrentPresetNameAndCopedent:
 6238              	.LFB81:
1705:main.c        **** 
1706:main.c        **** void displayCurrentPresetNameAndCopedent()
1707:main.c        **** {
 6239              		.loc 1 1707 0
 6240              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 142


 6241              		@ args = 0, pretend = 0, frame = 8
 6242              		@ frame_needed = 1, uses_anonymous_args = 0
 6243 0000 90B5     		push	{r4, r7, lr}
 6244              		.cfi_def_cfa_offset 12
 6245              		.cfi_offset 4, -12
 6246              		.cfi_offset 7, -8
 6247              		.cfi_offset 14, -4
 6248 0002 85B0     		sub	sp, sp, #20
 6249              		.cfi_def_cfa_offset 32
 6250 0004 02AF     		add	r7, sp, #8
 6251              		.cfi_def_cfa 7, 24
1708:main.c        ****     int macroCheck = 0;
 6252              		.loc 1 1708 0
 6253 0006 0023     		movs	r3, #0
 6254 0008 7B60     		str	r3, [r7, #4]
 6255              	.LBB40:
1709:main.c        ****     for (int i = 0; i < 8; i++)
 6256              		.loc 1 1709 0
 6257 000a 0023     		movs	r3, #0
 6258 000c 3B60     		str	r3, [r7]
 6259 000e 17E0     		b	.L245
 6260              	.L247:
1710:main.c        ****     {
1711:main.c        ****         if (macroNamesArray[patchNum][i][0] == 255)
 6261              		.loc 1 1711 0
 6262 0010 3B4B     		ldr	r3, .L250
 6263 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6264 0014 1846     		mov	r0, r3
 6265 0016 3B49     		ldr	r1, .L250+4
 6266 0018 3B68     		ldr	r3, [r7]
 6267 001a 1A46     		mov	r2, r3
 6268 001c D200     		lsls	r2, r2, #3
 6269 001e D21A     		subs	r2, r2, r3
 6270 0020 5300     		lsls	r3, r2, #1
 6271 0022 1A46     		mov	r2, r3
 6272 0024 0346     		mov	r3, r0
 6273 0026 DB00     		lsls	r3, r3, #3
 6274 0028 1B1A     		subs	r3, r3, r0
 6275 002a 1B01     		lsls	r3, r3, #4
 6276 002c 1344     		add	r3, r3, r2
 6277 002e 0B44     		add	r3, r3, r1
 6278 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6279 0032 FF2B     		cmp	r3, #255
 6280 0034 01D1     		bne	.L246
1712:main.c        ****         {
1713:main.c        ****             macroCheck = 1;
 6281              		.loc 1 1713 0
 6282 0036 0123     		movs	r3, #1
 6283 0038 7B60     		str	r3, [r7, #4]
 6284              	.L246:
1709:main.c        ****     {
 6285              		.loc 1 1709 0 discriminator 2
 6286 003a 3B68     		ldr	r3, [r7]
 6287 003c 0133     		adds	r3, r3, #1
 6288 003e 3B60     		str	r3, [r7]
 6289              	.L245:
1709:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 143


 6290              		.loc 1 1709 0 is_stmt 0 discriminator 1
 6291 0040 3B68     		ldr	r3, [r7]
 6292 0042 072B     		cmp	r3, #7
 6293 0044 E4DD     		ble	.L247
 6294              	.LBE40:
1714:main.c        ****         }  
1715:main.c        ****     }
1716:main.c        ****     if (macroCheck == 0) //don't display if the name data still hasn't been retrieved by the SPI bu
 6295              		.loc 1 1716 0 is_stmt 1
 6296 0046 7B68     		ldr	r3, [r7, #4]
 6297 0048 002B     		cmp	r3, #0
 6298 004a 55D1     		bne	.L249
1717:main.c        ****     {
1718:main.c        ****         OLEDclear(128, 64);
 6299              		.loc 1 1718 0
 6300 004c 4021     		movs	r1, #64
 6301 004e 8020     		movs	r0, #128
 6302 0050 FFF7FEFF 		bl	OLEDclear
1719:main.c        ****         
1720:main.c        ****         myGFX_setFont(0);
 6303              		.loc 1 1720 0
 6304 0054 0020     		movs	r0, #0
 6305 0056 FFF7FEFF 		bl	myGFX_setFont
1721:main.c        ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 6306              		.loc 1 1721 0
 6307 005a 294B     		ldr	r3, .L250
 6308 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6309 005e 1846     		mov	r0, r3
 6310 0060 0023     		movs	r3, #0
 6311 0062 0022     		movs	r2, #0
 6312 0064 0221     		movs	r1, #2
 6313 0066 FFF7FEFF 		bl	OLEDwriteInt
1722:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1723:main.c        ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], NAME_CLIPPED_LENGTH, 0, SecondLine)
 6314              		.loc 1 1723 0
 6315 006a 254B     		ldr	r3, .L250
 6316 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6317 006e 1A46     		mov	r2, r3
 6318 0070 1346     		mov	r3, r2
 6319 0072 DB00     		lsls	r3, r3, #3
 6320 0074 9B1A     		subs	r3, r3, r2
 6321 0076 5B00     		lsls	r3, r3, #1
 6322 0078 234A     		ldr	r2, .L250+8
 6323 007a 9818     		adds	r0, r3, r2
 6324 007c 0123     		movs	r3, #1
 6325 007e 0022     		movs	r2, #0
 6326 0080 0C21     		movs	r1, #12
 6327 0082 FFF7FEFF 		bl	OLEDwriteString
1724:main.c        ****         GFXwriteFastHLine(&theGFX, 0, 40, 128, 1);
 6328              		.loc 1 1724 0
 6329 0086 0123     		movs	r3, #1
 6330 0088 0093     		str	r3, [sp]
 6331 008a 8023     		movs	r3, #128
 6332 008c 2822     		movs	r2, #40
 6333 008e 0021     		movs	r1, #0
 6334 0090 1E48     		ldr	r0, .L250+12
 6335 0092 FFF7FEFF 		bl	GFXwriteFastHLine
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 144


1725:main.c        ****         OLEDwriteInt(currentCopedent , 1, 0,FourthLine);
 6336              		.loc 1 1725 0
 6337 0096 1E4B     		ldr	r3, .L250+16
 6338 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6339 009a 1846     		mov	r0, r3
 6340 009c 0323     		movs	r3, #3
 6341 009e 0022     		movs	r2, #0
 6342 00a0 0121     		movs	r1, #1
 6343 00a2 FFF7FEFF 		bl	OLEDwriteInt
1726:main.c        ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 6344              		.loc 1 1726 0
 6345 00a6 FFF7FEFF 		bl	OLEDgetCursor
 6346 00aa 0246     		mov	r2, r0
 6347 00ac 0323     		movs	r3, #3
 6348 00ae 0121     		movs	r1, #1
 6349 00b0 1848     		ldr	r0, .L250+20
 6350 00b2 FFF7FEFF 		bl	OLEDwriteString
1727:main.c        ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 6351              		.loc 1 1727 0
 6352 00b6 164B     		ldr	r3, .L250+16
 6353 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6354 00ba 1A46     		mov	r2, r3
 6355 00bc 1346     		mov	r3, r2
 6356 00be DB00     		lsls	r3, r3, #3
 6357 00c0 9B1A     		subs	r3, r3, r2
 6358 00c2 5B00     		lsls	r3, r3, #1
 6359 00c4 144A     		ldr	r2, .L250+24
 6360 00c6 9C18     		adds	r4, r3, r2
 6361 00c8 FFF7FEFF 		bl	OLEDgetCursor
 6362 00cc 0246     		mov	r2, r0
 6363 00ce 0323     		movs	r3, #3
 6364 00d0 0A21     		movs	r1, #10
 6365 00d2 2046     		mov	r0, r4
 6366 00d4 FFF7FEFF 		bl	OLEDwriteString
1728:main.c        ****         mainOLEDWaitingToSend = 1;
 6367              		.loc 1 1728 0
 6368 00d8 104B     		ldr	r3, .L250+28
 6369 00da 0122     		movs	r2, #1
 6370 00dc 1A60     		str	r2, [r3]
1729:main.c        ****         presetAlreadyDisplayed[patchNum] = 1;
 6371              		.loc 1 1729 0
 6372 00de 084B     		ldr	r3, .L250
 6373 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6374 00e2 1946     		mov	r1, r3
 6375 00e4 0E4B     		ldr	r3, .L250+32
 6376 00e6 0122     		movs	r2, #1
 6377 00e8 43F82120 		str	r2, [r3, r1, lsl #2]
1730:main.c        ****         //and update the macro OLED screens
1731:main.c        ****         whichMacro = 0;
 6378              		.loc 1 1731 0
 6379 00ec 0D4B     		ldr	r3, .L250+36
 6380 00ee 0022     		movs	r2, #0
 6381 00f0 1A70     		strb	r2, [r3]
1732:main.c        ****         macroOLEDWaitingToSend = 1;
 6382              		.loc 1 1732 0
 6383 00f2 0D4B     		ldr	r3, .L250+40
 6384 00f4 0122     		movs	r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 145


 6385 00f6 1A60     		str	r2, [r3]
 6386              	.L249:
1733:main.c        ****     }
1734:main.c        **** }
 6387              		.loc 1 1734 0
 6388 00f8 00BF     		nop
 6389 00fa 0C37     		adds	r7, r7, #12
 6390              		.cfi_def_cfa_offset 12
 6391 00fc BD46     		mov	sp, r7
 6392              		.cfi_def_cfa_register 13
 6393              		@ sp needed
 6394 00fe 90BD     		pop	{r4, r7, pc}
 6395              	.L251:
 6396              		.align	2
 6397              	.L250:
 6398 0100 00000000 		.word	patchNum
 6399 0104 00000000 		.word	macroNamesArray
 6400 0108 00000000 		.word	presetNamesArray
 6401 010c 00000000 		.word	theGFX
 6402 0110 00000000 		.word	currentCopedent
 6403 0114 00040000 		.word	.LC0
 6404 0118 00000000 		.word	copedentNamesArray
 6405 011c 00000000 		.word	mainOLEDWaitingToSend
 6406 0120 00000000 		.word	presetAlreadyDisplayed
 6407 0124 00000000 		.word	whichMacro
 6408 0128 00000000 		.word	macroOLEDWaitingToSend
 6409              		.cfi_endproc
 6410              	.LFE81:
 6411              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 6412              		.section	.text.checkUSB_Vbus,"ax",%progbits
 6413              		.align	2
 6414              		.global	checkUSB_Vbus
 6415              		.thumb
 6416              		.thumb_func
 6417              		.type	checkUSB_Vbus, %function
 6418              	checkUSB_Vbus:
 6419              	.LFB82:
1735:main.c        ****     
1736:main.c        **** void checkUSB_Vbus(void)
1737:main.c        **** {
 6420              		.loc 1 1737 0
 6421              		.cfi_startproc
 6422              		@ args = 0, pretend = 0, frame = 0
 6423              		@ frame_needed = 1, uses_anonymous_args = 0
 6424 0000 80B5     		push	{r7, lr}
 6425              		.cfi_def_cfa_offset 8
 6426              		.cfi_offset 7, -8
 6427              		.cfi_offset 14, -4
 6428 0002 00AF     		add	r7, sp, #0
 6429              		.cfi_def_cfa_register 7
1738:main.c        ****    if (USB_VBusPresent() == 0)
 6430              		.loc 1 1738 0
 6431 0004 FFF7FEFF 		bl	USB_VBusPresent
 6432 0008 0346     		mov	r3, r0
 6433 000a 002B     		cmp	r3, #0
 6434 000c 05D1     		bne	.L253
1739:main.c        ****    {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 146


1740:main.c        ****        USB_Stop();
 6435              		.loc 1 1740 0
 6436 000e FFF7FEFF 		bl	USB_Stop
1741:main.c        ****        USB_active = 0; 
 6437              		.loc 1 1741 0
 6438 0012 0E4B     		ldr	r3, .L256
 6439 0014 0022     		movs	r2, #0
 6440 0016 1A70     		strb	r2, [r3]
 6441 0018 13E0     		b	.L254
 6442              	.L253:
1742:main.c        ****    }
1743:main.c        ****    else if (USB_active == 0 )
 6443              		.loc 1 1743 0
 6444 001a 0C4B     		ldr	r3, .L256
 6445 001c 1B78     		ldrb	r3, [r3]
 6446 001e DBB2     		uxtb	r3, r3
 6447 0020 002B     		cmp	r3, #0
 6448 0022 0ED1     		bne	.L254
1744:main.c        ****    {
1745:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 6449              		.loc 1 1745 0
 6450 0024 0021     		movs	r1, #0
 6451 0026 0020     		movs	r0, #0
 6452 0028 FFF7FEFF 		bl	USB_Start
1746:main.c        ****         while (0u == USB_GetConfiguration());
 6453              		.loc 1 1746 0
 6454 002c 00BF     		nop
 6455              	.L255:
 6456              		.loc 1 1746 0 is_stmt 0 discriminator 1
 6457 002e FFF7FEFF 		bl	USB_GetConfiguration
 6458 0032 0346     		mov	r3, r0
 6459 0034 002B     		cmp	r3, #0
 6460 0036 FAD0     		beq	.L255
1747:main.c        ****         USB_MIDI_EP_Init();
 6461              		.loc 1 1747 0 is_stmt 1
 6462 0038 FFF7FEFF 		bl	USB_MIDI_Init
1748:main.c        ****        USB_active = 1;
 6463              		.loc 1 1748 0
 6464 003c 034B     		ldr	r3, .L256
 6465 003e 0122     		movs	r2, #1
 6466 0040 1A70     		strb	r2, [r3]
 6467              	.L254:
1749:main.c        ****    }
1750:main.c        ****    USB_check_flag = 0;
 6468              		.loc 1 1750 0
 6469 0042 034B     		ldr	r3, .L256+4
 6470 0044 0022     		movs	r2, #0
 6471 0046 1A70     		strb	r2, [r3]
1751:main.c        **** }
 6472              		.loc 1 1751 0
 6473 0048 00BF     		nop
 6474 004a 80BD     		pop	{r7, pc}
 6475              	.L257:
 6476              		.align	2
 6477              	.L256:
 6478 004c 00000000 		.word	USB_active
 6479 0050 00000000 		.word	USB_check_flag
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 147


 6480              		.cfi_endproc
 6481              	.LFE82:
 6482              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 6483              		.section	.text.USB_service,"ax",%progbits
 6484              		.align	2
 6485              		.global	USB_service
 6486              		.thumb
 6487              		.thumb_func
 6488              		.type	USB_service, %function
 6489              	USB_service:
 6490              	.LFB83:
1752:main.c        **** 
1753:main.c        **** 
1754:main.c        **** 
1755:main.c        **** void USB_service(void)
1756:main.c        **** {
 6491              		.loc 1 1756 0
 6492              		.cfi_startproc
 6493              		@ args = 0, pretend = 0, frame = 0
 6494              		@ frame_needed = 1, uses_anonymous_args = 0
 6495 0000 80B5     		push	{r7, lr}
 6496              		.cfi_def_cfa_offset 8
 6497              		.cfi_offset 7, -8
 6498              		.cfi_offset 14, -4
 6499 0002 00AF     		add	r7, sp, #0
 6500              		.cfi_def_cfa_register 7
1757:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 6501              		.loc 1 1757 0
 6502 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 6503 0008 0346     		mov	r3, r0
 6504 000a 002B     		cmp	r3, #0
 6505 000c 10D0     		beq	.L259
1758:main.c        ****     {
1759:main.c        ****         if(USB_GetConfiguration() != 0u)   
 6506              		.loc 1 1759 0
 6507 000e FFF7FEFF 		bl	USB_GetConfiguration
 6508 0012 0346     		mov	r3, r0
 6509 0014 002B     		cmp	r3, #0
 6510 0016 0BD0     		beq	.L259
1760:main.c        ****         {
1761:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1762:main.c        ****             
1763:main.c        ****             //SleepTimer_Start();
1764:main.c        ****         	
1765:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 6511              		.loc 1 1765 0
 6512 0018 244B     		ldr	r3, .L265
 6513 001a 1B78     		ldrb	r3, [r3]
 6514 001c DBB2     		uxtb	r3, r3
 6515 001e 002B     		cmp	r3, #0
 6516 0020 06D0     		beq	.L259
 6517              		.loc 1 1765 0 is_stmt 0 discriminator 1
 6518 0022 FFF7FEFF 		bl	USB_VBusPresent
 6519 0026 0346     		mov	r3, r0
 6520 0028 002B     		cmp	r3, #0
 6521 002a 01D0     		beq	.L259
1766:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 148


1767:main.c        ****                 USB_MIDI_EP_Init();
 6522              		.loc 1 1767 0 is_stmt 1
 6523 002c FFF7FEFF 		bl	USB_MIDI_Init
 6524              	.L259:
1768:main.c        ****             }
1769:main.c        ****         }
1770:main.c        ****         else
1771:main.c        ****         {
1772:main.c        ****             //SleepTimer_Stop();
1773:main.c        ****         }    
1774:main.c        ****     }        
1775:main.c        ****     
1776:main.c        ****     if(USB_GetConfiguration() != 0u)    
 6525              		.loc 1 1776 0
 6526 0030 FFF7FEFF 		bl	USB_GetConfiguration
 6527 0034 0346     		mov	r3, r0
 6528 0036 002B     		cmp	r3, #0
 6529 0038 35D0     		beq	.L264
1777:main.c        ****     {
1778:main.c        **** 
1779:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1780:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 6530              		.loc 1 1780 0
 6531 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 6532 003e 0346     		mov	r3, r0
 6533 0040 002B     		cmp	r3, #0
 6534 0042 18D0     		beq	.L262
1781:main.c        ****         {
1782:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 6535              		.loc 1 1782 0
 6536 0044 1A4B     		ldr	r3, .L265+4
 6537 0046 1B78     		ldrb	r3, [r3]
 6538 0048 D8B2     		uxtb	r0, r3
 6539 004a 1A4B     		ldr	r3, .L265+8
 6540 004c 1B78     		ldrb	r3, [r3]
 6541 004e DBB2     		uxtb	r3, r3
 6542 0050 9BB2     		uxth	r3, r3
 6543 0052 1A46     		mov	r2, r3
 6544 0054 1849     		ldr	r1, .L265+12
 6545 0056 FFF7FEFF 		bl	USB_LoadInEP
1783:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1784:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 6546              		.loc 1 1784 0
 6547 005a 184B     		ldr	r3, .L265+16
 6548 005c 1B78     		ldrb	r3, [r3]
 6549 005e DBB2     		uxtb	r3, r3
 6550 0060 4022     		movs	r2, #64
 6551 0062 1749     		ldr	r1, .L265+20
 6552 0064 1846     		mov	r0, r3
 6553 0066 FFF7FEFF 		bl	USB_ReadOutEP
1785:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1786:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1787:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 6554              		.loc 1 1787 0
 6555 006a 144B     		ldr	r3, .L265+16
 6556 006c 1B78     		ldrb	r3, [r3]
 6557 006e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 149


 6558 0070 1846     		mov	r0, r3
 6559 0072 FFF7FEFF 		bl	USB_EnableOutEP
 6560              	.L262:
1788:main.c        ****         }
1789:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6561              		.loc 1 1789 0
 6562 0076 0D4B     		ldr	r3, .L265
 6563 0078 1B78     		ldrb	r3, [r3]
 6564 007a DBB2     		uxtb	r3, r3
 6565 007c 002B     		cmp	r3, #0
 6566 007e 06D0     		beq	.L263
 6567              		.loc 1 1789 0 is_stmt 0 discriminator 1
 6568 0080 FFF7FEFF 		bl	USB_VBusPresent
 6569 0084 0346     		mov	r3, r0
 6570 0086 002B     		cmp	r3, #0
 6571 0088 01D0     		beq	.L263
1790:main.c        ****         {
1791:main.c        ****             USB_MIDI_IN_Service();
 6572              		.loc 1 1791 0 is_stmt 1
 6573 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 6574              	.L263:
1792:main.c        ****         }
1793:main.c        **** 
1794:main.c        **** 
1795:main.c        **** 
1796:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6575              		.loc 1 1796 0
 6576 008e 074B     		ldr	r3, .L265
 6577 0090 1B78     		ldrb	r3, [r3]
 6578 0092 DBB2     		uxtb	r3, r3
 6579 0094 002B     		cmp	r3, #0
 6580 0096 06D0     		beq	.L264
 6581              		.loc 1 1796 0 is_stmt 0 discriminator 1
 6582 0098 FFF7FEFF 		bl	USB_VBusPresent
 6583 009c 0346     		mov	r3, r0
 6584 009e 002B     		cmp	r3, #0
 6585 00a0 01D0     		beq	.L264
1797:main.c        ****         {
1798:main.c        ****             USB_MIDI_OUT_Service();
 6586              		.loc 1 1798 0 is_stmt 1
 6587 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 6588              	.L264:
1799:main.c        ****         }
1800:main.c        ****     }
1801:main.c        ****         
1802:main.c        **** }
 6589              		.loc 1 1802 0
 6590 00a6 00BF     		nop
 6591 00a8 80BD     		pop	{r7, pc}
 6592              	.L266:
 6593 00aa 00BF     		.align	2
 6594              	.L265:
 6595 00ac 00000000 		.word	USB_active
 6596 00b0 00000000 		.word	USB_midi_in_ep
 6597 00b4 00000000 		.word	USB_midiInPointer
 6598 00b8 00000000 		.word	USB_midiInBuffer
 6599 00bc 00000000 		.word	USB_midi_out_ep
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 150


 6600 00c0 00000000 		.word	USB_midiOutBuffer
 6601              		.cfi_endproc
 6602              	.LFE83:
 6603              		.size	USB_service, .-USB_service
 6604              		.section	.text.log2f_approx,"ax",%progbits
 6605              		.align	2
 6606              		.global	log2f_approx
 6607              		.thumb
 6608              		.thumb_func
 6609              		.type	log2f_approx, %function
 6610              	log2f_approx:
 6611              	.LFB84:
1803:main.c        **** 
1804:main.c        **** // This is a fast approximation to log2()
1805:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1806:main.c        **** float log2f_approx(float X) {
 6612              		.loc 1 1806 0
 6613              		.cfi_startproc
 6614              		@ args = 0, pretend = 0, frame = 24
 6615              		@ frame_needed = 1, uses_anonymous_args = 0
 6616 0000 80B5     		push	{r7, lr}
 6617              		.cfi_def_cfa_offset 8
 6618              		.cfi_offset 7, -8
 6619              		.cfi_offset 14, -4
 6620 0002 86B0     		sub	sp, sp, #24
 6621              		.cfi_def_cfa_offset 32
 6622 0004 00AF     		add	r7, sp, #0
 6623              		.cfi_def_cfa_register 7
 6624 0006 7860     		str	r0, [r7, #4]	@ float
1807:main.c        ****   float Y, F;
1808:main.c        ****   int E;
1809:main.c        ****   F = frexpf(fabsf(X), &E);
 6625              		.loc 1 1809 0
 6626 0008 7B68     		ldr	r3, [r7, #4]
 6627 000a 23F00043 		bic	r3, r3, #-2147483648
 6628 000e 07F10C02 		add	r2, r7, #12
 6629 0012 1146     		mov	r1, r2
 6630 0014 1846     		mov	r0, r3
 6631 0016 FFF7FEFF 		bl	frexpf
 6632 001a 7861     		str	r0, [r7, #20]	@ float
1810:main.c        ****   Y = 1.23149591368684f;
 6633              		.loc 1 1810 0
 6634 001c 1A4B     		ldr	r3, .L269
 6635 001e 3B61     		str	r3, [r7, #16]	@ float
1811:main.c        ****   Y *= F;
 6636              		.loc 1 1811 0
 6637 0020 7969     		ldr	r1, [r7, #20]	@ float
 6638 0022 3869     		ldr	r0, [r7, #16]	@ float
 6639 0024 FFF7FEFF 		bl	__aeabi_fmul
 6640 0028 0346     		mov	r3, r0
 6641 002a 3B61     		str	r3, [r7, #16]	@ float
1812:main.c        ****   Y += -4.11852516267426f;
 6642              		.loc 1 1812 0
 6643 002c 1749     		ldr	r1, .L269+4
 6644 002e 3869     		ldr	r0, [r7, #16]	@ float
 6645 0030 FFF7FEFF 		bl	__aeabi_fsub
 6646 0034 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 151


 6647 0036 3B61     		str	r3, [r7, #16]	@ float
1813:main.c        ****   Y *= F;
 6648              		.loc 1 1813 0
 6649 0038 7969     		ldr	r1, [r7, #20]	@ float
 6650 003a 3869     		ldr	r0, [r7, #16]	@ float
 6651 003c FFF7FEFF 		bl	__aeabi_fmul
 6652 0040 0346     		mov	r3, r0
 6653 0042 3B61     		str	r3, [r7, #16]	@ float
1814:main.c        ****   Y += 6.02197014179219f;
 6654              		.loc 1 1814 0
 6655 0044 1249     		ldr	r1, .L269+8
 6656 0046 3869     		ldr	r0, [r7, #16]	@ float
 6657 0048 FFF7FEFF 		bl	__aeabi_fadd
 6658 004c 0346     		mov	r3, r0
 6659 004e 3B61     		str	r3, [r7, #16]	@ float
1815:main.c        ****   Y *= F;
 6660              		.loc 1 1815 0
 6661 0050 7969     		ldr	r1, [r7, #20]	@ float
 6662 0052 3869     		ldr	r0, [r7, #16]	@ float
 6663 0054 FFF7FEFF 		bl	__aeabi_fmul
 6664 0058 0346     		mov	r3, r0
 6665 005a 3B61     		str	r3, [r7, #16]	@ float
1816:main.c        ****   Y += -3.13396450166353f;
 6666              		.loc 1 1816 0
 6667 005c 0D49     		ldr	r1, .L269+12
 6668 005e 3869     		ldr	r0, [r7, #16]	@ float
 6669 0060 FFF7FEFF 		bl	__aeabi_fsub
 6670 0064 0346     		mov	r3, r0
 6671 0066 3B61     		str	r3, [r7, #16]	@ float
1817:main.c        ****   Y += E;
 6672              		.loc 1 1817 0
 6673 0068 FB68     		ldr	r3, [r7, #12]
 6674 006a 1846     		mov	r0, r3
 6675 006c FFF7FEFF 		bl	__aeabi_i2f
 6676 0070 0346     		mov	r3, r0
 6677 0072 1946     		mov	r1, r3
 6678 0074 3869     		ldr	r0, [r7, #16]	@ float
 6679 0076 FFF7FEFF 		bl	__aeabi_fadd
 6680 007a 0346     		mov	r3, r0
 6681 007c 3B61     		str	r3, [r7, #16]	@ float
1818:main.c        ****   return(Y);
 6682              		.loc 1 1818 0
 6683 007e 3B69     		ldr	r3, [r7, #16]	@ float
1819:main.c        **** }
 6684              		.loc 1 1819 0
 6685 0080 1846     		mov	r0, r3
 6686 0082 1837     		adds	r7, r7, #24
 6687              		.cfi_def_cfa_offset 8
 6688 0084 BD46     		mov	sp, r7
 6689              		.cfi_def_cfa_register 13
 6690              		@ sp needed
 6691 0086 80BD     		pop	{r7, pc}
 6692              	.L270:
 6693              		.align	2
 6694              	.L269:
 6695 0088 A8A19D3F 		.word	1067295144
 6696 008c F5CA8340 		.word	1082378997
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 152


 6697 0090 FBB3C040 		.word	1086370811
 6698 0094 E0924840 		.word	1078498016
 6699              		.cfi_endproc
 6700              	.LFE84:
 6701              		.size	log2f_approx, .-log2f_approx
 6702              		.global	prevNotes
 6703              		.bss
 6704              		.align	2
 6705              		.type	prevNotes, %object
 6706              		.size	prevNotes, 48
 6707              	prevNotes:
 6708 00f8 00000000 		.space	48
 6708      00000000 
 6708      00000000 
 6708      00000000 
 6708      00000000 
 6709              		.section	.text.noteEvent,"ax",%progbits
 6710              		.align	2
 6711              		.global	noteEvent
 6712              		.thumb
 6713              		.thumb_func
 6714              		.type	noteEvent, %function
 6715              	noteEvent:
 6716              	.LFB85:
1820:main.c        **** 
1821:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
1822:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
1823:main.c        **** 
1824:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1825:main.c        **** 
1826:main.c        **** void noteEvent(int string)
1827:main.c        **** {
 6717              		.loc 1 1827 0
 6718              		.cfi_startproc
 6719              		@ args = 0, pretend = 0, frame = 24
 6720              		@ frame_needed = 1, uses_anonymous_args = 0
 6721 0000 80B5     		push	{r7, lr}
 6722              		.cfi_def_cfa_offset 8
 6723              		.cfi_offset 7, -8
 6724              		.cfi_offset 14, -4
 6725 0002 86B0     		sub	sp, sp, #24
 6726              		.cfi_def_cfa_offset 32
 6727 0004 00AF     		add	r7, sp, #0
 6728              		.cfi_def_cfa_register 7
 6729 0006 7860     		str	r0, [r7, #4]
1828:main.c        ****     
1829:main.c        ****     /*
1830:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1831:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1832:main.c        ****     int vInt  = (int) (v*4.0f);
1833:main.c        ****     if (vInt > 127)
1834:main.c        ****     {
1835:main.c        ****         vInt = 127;
1836:main.c        ****     }
1837:main.c        ****     */
1838:main.c        ****     uint16_t velocity = strings[string];
 6730              		.loc 1 1838 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 153


 6731 0008 2C4A     		ldr	r2, .L276
 6732 000a 7B68     		ldr	r3, [r7, #4]
 6733 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 6734 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1839:main.c        ****     if (velocity > 0)
 6735              		.loc 1 1839 0
 6736 0012 FB8A     		ldrh	r3, [r7, #22]
 6737 0014 002B     		cmp	r3, #0
 6738 0016 43D0     		beq	.L272
 6739              	.LBB41:
1840:main.c        ****     {
1841:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1842:main.c        ****         float tempVel = (float)velocity;
 6740              		.loc 1 1842 0
 6741 0018 FB8A     		ldrh	r3, [r7, #22]
 6742 001a 1846     		mov	r0, r3
 6743 001c FFF7FEFF 		bl	__aeabi_ui2f
 6744 0020 0346     		mov	r3, r0
 6745 0022 3B61     		str	r3, [r7, #16]	@ float
1843:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 6746              		.loc 1 1843 0
 6747 0024 4FF05E51 		mov	r1, #931135488
 6748 0028 3869     		ldr	r0, [r7, #16]	@ float
 6749 002a FFF7FEFF 		bl	__aeabi_fmul
 6750 002e 0346     		mov	r3, r0
 6751 0030 3B61     		str	r3, [r7, #16]	@ float
1844:main.c        ****         tempVel = sqrtf(tempVel);
 6752              		.loc 1 1844 0
 6753 0032 3869     		ldr	r0, [r7, #16]	@ float
 6754 0034 FFF7FEFF 		bl	sqrtf
 6755 0038 3861     		str	r0, [r7, #16]	@ float
1845:main.c        ****         tempVel = tempVel - 0.0239372430f;
 6756              		.loc 1 1845 0
 6757 003a 2149     		ldr	r1, .L276+4
 6758 003c 3869     		ldr	r0, [r7, #16]	@ float
 6759 003e FFF7FEFF 		bl	__aeabi_fsub
 6760 0042 0346     		mov	r3, r0
 6761 0044 3B61     		str	r3, [r7, #16]	@ float
1846:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 6762              		.loc 1 1846 0
 6763 0046 1F49     		ldr	r1, .L276+8
 6764 0048 3869     		ldr	r0, [r7, #16]	@ float
 6765 004a FFF7FEFF 		bl	__aeabi_fmul
 6766 004e 0346     		mov	r3, r0
 6767 0050 3B61     		str	r3, [r7, #16]	@ float
1847:main.c        ****         velocity = (int)tempVel;
 6768              		.loc 1 1847 0
 6769 0052 3869     		ldr	r0, [r7, #16]	@ float
 6770 0054 FFF7FEFF 		bl	__aeabi_f2iz
 6771 0058 0346     		mov	r3, r0
 6772 005a FB82     		strh	r3, [r7, #22]	@ movhi
1848:main.c        ****         
1849:main.c        **** 
1850:main.c        ****         if (velocity > 127)
 6773              		.loc 1 1850 0
 6774 005c FB8A     		ldrh	r3, [r7, #22]
 6775 005e 7F2B     		cmp	r3, #127
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 154


 6776 0060 01D9     		bls	.L273
1851:main.c        ****         {
1852:main.c        ****             velocity = 127;
 6777              		.loc 1 1852 0
 6778 0062 7F23     		movs	r3, #127
 6779 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 6780              	.L273:
1853:main.c        ****         }
1854:main.c        ****         
1855:main.c        ****         //only update octave on note-ons
1856:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1857:main.c        ****         int noteToSend = ((octave - 4) * 12) + openStringMIDI_Int[string];
 6781              		.loc 1 1857 0
 6782 0066 184B     		ldr	r3, .L276+12
 6783 0068 1B68     		ldr	r3, [r3]
 6784 006a 1A1F     		subs	r2, r3, #4
 6785 006c 1346     		mov	r3, r2
 6786 006e 5B00     		lsls	r3, r3, #1
 6787 0070 1344     		add	r3, r3, r2
 6788 0072 9B00     		lsls	r3, r3, #2
 6789 0074 1946     		mov	r1, r3
 6790 0076 154A     		ldr	r2, .L276+16
 6791 0078 7B68     		ldr	r3, [r7, #4]
 6792 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6793 007e 0B44     		add	r3, r3, r1
 6794 0080 FB60     		str	r3, [r7, #12]
1858:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 6795              		.loc 1 1858 0
 6796 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6797 0084 DBB2     		uxtb	r3, r3
 6798 0086 1946     		mov	r1, r3
 6799 0088 7B68     		ldr	r3, [r7, #4]
 6800 008a 0133     		adds	r3, r3, #1
 6801 008c 1A46     		mov	r2, r3
 6802 008e F868     		ldr	r0, [r7, #12]
 6803 0090 FFF7FEFF 		bl	sendMIDINoteOn
1859:main.c        ****         prevNotes[string] = noteToSend;
 6804              		.loc 1 1859 0
 6805 0094 0E49     		ldr	r1, .L276+20
 6806 0096 7B68     		ldr	r3, [r7, #4]
 6807 0098 FA68     		ldr	r2, [r7, #12]
 6808 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 6809              	.LBE41:
1860:main.c        ****             
1861:main.c        ****     }
1862:main.c        ****     else
1863:main.c        ****     {
1864:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1865:main.c        ****     }
1866:main.c        **** 
1867:main.c        **** }
 6810              		.loc 1 1867 0
 6811 009e 09E0     		b	.L275
 6812              	.L272:
1864:main.c        ****     }
 6813              		.loc 1 1864 0
 6814 00a0 0B4A     		ldr	r2, .L276+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 155


 6815 00a2 7B68     		ldr	r3, [r7, #4]
 6816 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 6817 00a8 7B68     		ldr	r3, [r7, #4]
 6818 00aa 0133     		adds	r3, r3, #1
 6819 00ac 1A46     		mov	r2, r3
 6820 00ae 0021     		movs	r1, #0
 6821 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 6822              	.L275:
 6823              		.loc 1 1867 0
 6824 00b4 00BF     		nop
 6825 00b6 1837     		adds	r7, r7, #24
 6826              		.cfi_def_cfa_offset 8
 6827 00b8 BD46     		mov	sp, r7
 6828              		.cfi_def_cfa_register 13
 6829              		@ sp needed
 6830 00ba 80BD     		pop	{r7, pc}
 6831              	.L277:
 6832              		.align	2
 6833              	.L276:
 6834 00bc 00000000 		.word	strings
 6835 00c0 0918C43C 		.word	1019484169
 6836 00c4 551D0243 		.word	1124212053
 6837 00c8 00000000 		.word	octave
 6838 00cc 00000000 		.word	openStringMIDI_Int
 6839 00d0 00000000 		.word	prevNotes
 6840              		.cfi_endproc
 6841              	.LFE85:
 6842              		.size	noteEvent, .-noteEvent
 6843              		.section	.text.CCEvent,"ax",%progbits
 6844              		.align	2
 6845              		.global	CCEvent
 6846              		.thumb
 6847              		.thumb_func
 6848              		.type	CCEvent, %function
 6849              	CCEvent:
 6850              	.LFB86:
1868:main.c        **** 
1869:main.c        **** void CCEvent(int cc, int val)
1870:main.c        **** {
 6851              		.loc 1 1870 0
 6852              		.cfi_startproc
 6853              		@ args = 0, pretend = 0, frame = 8
 6854              		@ frame_needed = 1, uses_anonymous_args = 0
 6855 0000 80B5     		push	{r7, lr}
 6856              		.cfi_def_cfa_offset 8
 6857              		.cfi_offset 7, -8
 6858              		.cfi_offset 14, -4
 6859 0002 82B0     		sub	sp, sp, #8
 6860              		.cfi_def_cfa_offset 16
 6861 0004 00AF     		add	r7, sp, #0
 6862              		.cfi_def_cfa_register 7
 6863 0006 7860     		str	r0, [r7, #4]
 6864 0008 3960     		str	r1, [r7]
1871:main.c        ****     
1872:main.c        ****     sendMIDIControlChange(cc, val, 0);
 6865              		.loc 1 1872 0
 6866 000a 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 156


 6867 000c 3968     		ldr	r1, [r7]
 6868 000e 7868     		ldr	r0, [r7, #4]
 6869 0010 FFF7FEFF 		bl	sendMIDIControlChange
1873:main.c        **** }
 6870              		.loc 1 1873 0
 6871 0014 00BF     		nop
 6872 0016 0837     		adds	r7, r7, #8
 6873              		.cfi_def_cfa_offset 8
 6874 0018 BD46     		mov	sp, r7
 6875              		.cfi_def_cfa_register 13
 6876              		@ sp needed
 6877 001a 80BD     		pop	{r7, pc}
 6878              		.cfi_endproc
 6879              	.LFE86:
 6880              		.size	CCEvent, .-CCEvent
 6881              		.section	.text.sendMIDINoteOn,"ax",%progbits
 6882              		.align	2
 6883              		.global	sendMIDINoteOn
 6884              		.thumb
 6885              		.thumb_func
 6886              		.type	sendMIDINoteOn, %function
 6887              	sendMIDINoteOn:
 6888              	.LFB87:
1874:main.c        **** 
1875:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1876:main.c        **** {  
 6889              		.loc 1 1876 0
 6890              		.cfi_startproc
 6891              		@ args = 0, pretend = 0, frame = 16
 6892              		@ frame_needed = 1, uses_anonymous_args = 0
 6893 0000 80B5     		push	{r7, lr}
 6894              		.cfi_def_cfa_offset 8
 6895              		.cfi_offset 7, -8
 6896              		.cfi_offset 14, -4
 6897 0002 84B0     		sub	sp, sp, #16
 6898              		.cfi_def_cfa_offset 24
 6899 0004 00AF     		add	r7, sp, #0
 6900              		.cfi_def_cfa_register 7
 6901 0006 F860     		str	r0, [r7, #12]
 6902 0008 B960     		str	r1, [r7, #8]
 6903 000a 7A60     		str	r2, [r7, #4]
1877:main.c        ****    
1878:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 6904              		.loc 1 1878 0
 6905 000c 7B68     		ldr	r3, [r7, #4]
 6906 000e DBB2     		uxtb	r3, r3
 6907 0010 703B     		subs	r3, r3, #112
 6908 0012 DAB2     		uxtb	r2, r3
 6909 0014 114B     		ldr	r3, .L281
 6910 0016 1A70     		strb	r2, [r3]
1879:main.c        ****     midiMsg[1] = MIDInoteNum;
 6911              		.loc 1 1879 0
 6912 0018 FB68     		ldr	r3, [r7, #12]
 6913 001a DAB2     		uxtb	r2, r3
 6914 001c 0F4B     		ldr	r3, .L281
 6915 001e 5A70     		strb	r2, [r3, #1]
1880:main.c        ****     midiMsg[2] = velocity;	
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 157


 6916              		.loc 1 1880 0
 6917 0020 BB68     		ldr	r3, [r7, #8]
 6918 0022 DAB2     		uxtb	r2, r3
 6919 0024 0D4B     		ldr	r3, .L281
 6920 0026 9A70     		strb	r2, [r3, #2]
1881:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6921              		.loc 1 1881 0
 6922 0028 0D4B     		ldr	r3, .L281+4
 6923 002a 1B78     		ldrb	r3, [r3]
 6924 002c DBB2     		uxtb	r3, r3
 6925 002e 002B     		cmp	r3, #0
 6926 0030 09D0     		beq	.L280
 6927              		.loc 1 1881 0 is_stmt 0 discriminator 1
 6928 0032 FFF7FEFF 		bl	USB_VBusPresent
 6929 0036 0346     		mov	r3, r0
 6930 0038 002B     		cmp	r3, #0
 6931 003a 04D0     		beq	.L280
1882:main.c        ****     {
1883:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6932              		.loc 1 1883 0 is_stmt 1
 6933 003c 0022     		movs	r2, #0
 6934 003e 0749     		ldr	r1, .L281
 6935 0040 0320     		movs	r0, #3
 6936 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6937              	.L280:
1884:main.c        ****     } 
1885:main.c        ****     midiSent += 4;
 6938              		.loc 1 1885 0
 6939 0046 074B     		ldr	r3, .L281+8
 6940 0048 1B88     		ldrh	r3, [r3]
 6941 004a 0433     		adds	r3, r3, #4
 6942 004c 9AB2     		uxth	r2, r3
 6943 004e 054B     		ldr	r3, .L281+8
 6944 0050 1A80     		strh	r2, [r3]	@ movhi
1886:main.c        **** }
 6945              		.loc 1 1886 0
 6946 0052 00BF     		nop
 6947 0054 1037     		adds	r7, r7, #16
 6948              		.cfi_def_cfa_offset 8
 6949 0056 BD46     		mov	sp, r7
 6950              		.cfi_def_cfa_register 13
 6951              		@ sp needed
 6952 0058 80BD     		pop	{r7, pc}
 6953              	.L282:
 6954 005a 00BF     		.align	2
 6955              	.L281:
 6956 005c 00000000 		.word	midiMsg
 6957 0060 00000000 		.word	USB_active
 6958 0064 00000000 		.word	midiSent
 6959              		.cfi_endproc
 6960              	.LFE87:
 6961              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 6962              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 6963              		.align	2
 6964              		.global	sendMIDIPolyKeyPressure
 6965              		.thumb
 6966              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 158


 6967              		.type	sendMIDIPolyKeyPressure, %function
 6968              	sendMIDIPolyKeyPressure:
 6969              	.LFB88:
1887:main.c        **** 
1888:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1889:main.c        **** {
 6970              		.loc 1 1889 0
 6971              		.cfi_startproc
 6972              		@ args = 0, pretend = 0, frame = 16
 6973              		@ frame_needed = 1, uses_anonymous_args = 0
 6974 0000 80B5     		push	{r7, lr}
 6975              		.cfi_def_cfa_offset 8
 6976              		.cfi_offset 7, -8
 6977              		.cfi_offset 14, -4
 6978 0002 84B0     		sub	sp, sp, #16
 6979              		.cfi_def_cfa_offset 24
 6980 0004 00AF     		add	r7, sp, #0
 6981              		.cfi_def_cfa_register 7
 6982 0006 F860     		str	r0, [r7, #12]
 6983 0008 B960     		str	r1, [r7, #8]
 6984 000a 7A60     		str	r2, [r7, #4]
1890:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 6985              		.loc 1 1890 0
 6986 000c 7B68     		ldr	r3, [r7, #4]
 6987 000e DBB2     		uxtb	r3, r3
 6988 0010 603B     		subs	r3, r3, #96
 6989 0012 DAB2     		uxtb	r2, r3
 6990 0014 114B     		ldr	r3, .L285
 6991 0016 1A70     		strb	r2, [r3]
1891:main.c        ****     midiMsg[1] = MIDInoteNum;
 6992              		.loc 1 1891 0
 6993 0018 FB68     		ldr	r3, [r7, #12]
 6994 001a DAB2     		uxtb	r2, r3
 6995 001c 0F4B     		ldr	r3, .L285
 6996 001e 5A70     		strb	r2, [r3, #1]
1892:main.c        ****     midiMsg[2] = pressure;		
 6997              		.loc 1 1892 0
 6998 0020 BB68     		ldr	r3, [r7, #8]
 6999 0022 DAB2     		uxtb	r2, r3
 7000 0024 0D4B     		ldr	r3, .L285
 7001 0026 9A70     		strb	r2, [r3, #2]
1893:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7002              		.loc 1 1893 0
 7003 0028 0D4B     		ldr	r3, .L285+4
 7004 002a 1B78     		ldrb	r3, [r3]
 7005 002c DBB2     		uxtb	r3, r3
 7006 002e 002B     		cmp	r3, #0
 7007 0030 09D0     		beq	.L284
 7008              		.loc 1 1893 0 is_stmt 0 discriminator 1
 7009 0032 FFF7FEFF 		bl	USB_VBusPresent
 7010 0036 0346     		mov	r3, r0
 7011 0038 002B     		cmp	r3, #0
 7012 003a 04D0     		beq	.L284
1894:main.c        ****     {
1895:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7013              		.loc 1 1895 0 is_stmt 1
 7014 003c 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 159


 7015 003e 0749     		ldr	r1, .L285
 7016 0040 0320     		movs	r0, #3
 7017 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7018              	.L284:
1896:main.c        ****     } 
1897:main.c        ****     midiSent += 4;
 7019              		.loc 1 1897 0
 7020 0046 074B     		ldr	r3, .L285+8
 7021 0048 1B88     		ldrh	r3, [r3]
 7022 004a 0433     		adds	r3, r3, #4
 7023 004c 9AB2     		uxth	r2, r3
 7024 004e 054B     		ldr	r3, .L285+8
 7025 0050 1A80     		strh	r2, [r3]	@ movhi
1898:main.c        **** }
 7026              		.loc 1 1898 0
 7027 0052 00BF     		nop
 7028 0054 1037     		adds	r7, r7, #16
 7029              		.cfi_def_cfa_offset 8
 7030 0056 BD46     		mov	sp, r7
 7031              		.cfi_def_cfa_register 13
 7032              		@ sp needed
 7033 0058 80BD     		pop	{r7, pc}
 7034              	.L286:
 7035 005a 00BF     		.align	2
 7036              	.L285:
 7037 005c 00000000 		.word	midiMsg
 7038 0060 00000000 		.word	USB_active
 7039 0064 00000000 		.word	midiSent
 7040              		.cfi_endproc
 7041              	.LFE88:
 7042              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 7043              		.section	.text.sendMIDIControlChange,"ax",%progbits
 7044              		.align	2
 7045              		.global	sendMIDIControlChange
 7046              		.thumb
 7047              		.thumb_func
 7048              		.type	sendMIDIControlChange, %function
 7049              	sendMIDIControlChange:
 7050              	.LFB89:
1899:main.c        **** 
1900:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1901:main.c        **** {
 7051              		.loc 1 1901 0
 7052              		.cfi_startproc
 7053              		@ args = 0, pretend = 0, frame = 16
 7054              		@ frame_needed = 1, uses_anonymous_args = 0
 7055 0000 80B5     		push	{r7, lr}
 7056              		.cfi_def_cfa_offset 8
 7057              		.cfi_offset 7, -8
 7058              		.cfi_offset 14, -4
 7059 0002 84B0     		sub	sp, sp, #16
 7060              		.cfi_def_cfa_offset 24
 7061 0004 00AF     		add	r7, sp, #0
 7062              		.cfi_def_cfa_register 7
 7063 0006 F860     		str	r0, [r7, #12]
 7064 0008 B960     		str	r1, [r7, #8]
 7065 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 160


1902:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 7066              		.loc 1 1902 0
 7067 000c 7B68     		ldr	r3, [r7, #4]
 7068 000e DBB2     		uxtb	r3, r3
 7069 0010 503B     		subs	r3, r3, #80
 7070 0012 DAB2     		uxtb	r2, r3
 7071 0014 114B     		ldr	r3, .L289
 7072 0016 1A70     		strb	r2, [r3]
1903:main.c        ****     midiMsg[1] = CCnum;
 7073              		.loc 1 1903 0
 7074 0018 FB68     		ldr	r3, [r7, #12]
 7075 001a DAB2     		uxtb	r2, r3
 7076 001c 0F4B     		ldr	r3, .L289
 7077 001e 5A70     		strb	r2, [r3, #1]
1904:main.c        ****     midiMsg[2] = CCval;			
 7078              		.loc 1 1904 0
 7079 0020 BB68     		ldr	r3, [r7, #8]
 7080 0022 DAB2     		uxtb	r2, r3
 7081 0024 0D4B     		ldr	r3, .L289
 7082 0026 9A70     		strb	r2, [r3, #2]
1905:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7083              		.loc 1 1905 0
 7084 0028 0D4B     		ldr	r3, .L289+4
 7085 002a 1B78     		ldrb	r3, [r3]
 7086 002c DBB2     		uxtb	r3, r3
 7087 002e 002B     		cmp	r3, #0
 7088 0030 09D0     		beq	.L288
 7089              		.loc 1 1905 0 is_stmt 0 discriminator 1
 7090 0032 FFF7FEFF 		bl	USB_VBusPresent
 7091 0036 0346     		mov	r3, r0
 7092 0038 002B     		cmp	r3, #0
 7093 003a 04D0     		beq	.L288
1906:main.c        ****     {
1907:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7094              		.loc 1 1907 0 is_stmt 1
 7095 003c 0022     		movs	r2, #0
 7096 003e 0749     		ldr	r1, .L289
 7097 0040 0320     		movs	r0, #3
 7098 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7099              	.L288:
1908:main.c        ****     } 
1909:main.c        ****     midiSent += 4;
 7100              		.loc 1 1909 0
 7101 0046 074B     		ldr	r3, .L289+8
 7102 0048 1B88     		ldrh	r3, [r3]
 7103 004a 0433     		adds	r3, r3, #4
 7104 004c 9AB2     		uxth	r2, r3
 7105 004e 054B     		ldr	r3, .L289+8
 7106 0050 1A80     		strh	r2, [r3]	@ movhi
1910:main.c        **** }
 7107              		.loc 1 1910 0
 7108 0052 00BF     		nop
 7109 0054 1037     		adds	r7, r7, #16
 7110              		.cfi_def_cfa_offset 8
 7111 0056 BD46     		mov	sp, r7
 7112              		.cfi_def_cfa_register 13
 7113              		@ sp needed
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 161


 7114 0058 80BD     		pop	{r7, pc}
 7115              	.L290:
 7116 005a 00BF     		.align	2
 7117              	.L289:
 7118 005c 00000000 		.word	midiMsg
 7119 0060 00000000 		.word	USB_active
 7120 0064 00000000 		.word	midiSent
 7121              		.cfi_endproc
 7122              	.LFE89:
 7123              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 7124              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 7125              		.align	2
 7126              		.global	sendMIDIPitchBend
 7127              		.thumb
 7128              		.thumb_func
 7129              		.type	sendMIDIPitchBend, %function
 7130              	sendMIDIPitchBend:
 7131              	.LFB90:
1911:main.c        **** 
1912:main.c        **** void sendMIDIPitchBend(int val, int channel)
1913:main.c        **** {
 7132              		.loc 1 1913 0
 7133              		.cfi_startproc
 7134              		@ args = 0, pretend = 0, frame = 8
 7135              		@ frame_needed = 1, uses_anonymous_args = 0
 7136 0000 80B5     		push	{r7, lr}
 7137              		.cfi_def_cfa_offset 8
 7138              		.cfi_offset 7, -8
 7139              		.cfi_offset 14, -4
 7140 0002 82B0     		sub	sp, sp, #8
 7141              		.cfi_def_cfa_offset 16
 7142 0004 00AF     		add	r7, sp, #0
 7143              		.cfi_def_cfa_register 7
 7144 0006 7860     		str	r0, [r7, #4]
 7145 0008 3960     		str	r1, [r7]
1914:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 7146              		.loc 1 1914 0
 7147 000a 3B68     		ldr	r3, [r7]
 7148 000c DBB2     		uxtb	r3, r3
 7149 000e 203B     		subs	r3, r3, #32
 7150 0010 DAB2     		uxtb	r2, r3
 7151 0012 134B     		ldr	r3, .L293
 7152 0014 1A70     		strb	r2, [r3]
1915:main.c        ****     midiMsg[1] = (val & 127); //LSB
 7153              		.loc 1 1915 0
 7154 0016 7B68     		ldr	r3, [r7, #4]
 7155 0018 DBB2     		uxtb	r3, r3
 7156 001a 03F07F03 		and	r3, r3, #127
 7157 001e DAB2     		uxtb	r2, r3
 7158 0020 0F4B     		ldr	r3, .L293
 7159 0022 5A70     		strb	r2, [r3, #1]
1916:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 7160              		.loc 1 1916 0
 7161 0024 7B68     		ldr	r3, [r7, #4]
 7162 0026 DB11     		asrs	r3, r3, #7
 7163 0028 DAB2     		uxtb	r2, r3
 7164 002a 0D4B     		ldr	r3, .L293
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 162


 7165 002c 9A70     		strb	r2, [r3, #2]
1917:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7166              		.loc 1 1917 0
 7167 002e 0D4B     		ldr	r3, .L293+4
 7168 0030 1B78     		ldrb	r3, [r3]
 7169 0032 DBB2     		uxtb	r3, r3
 7170 0034 002B     		cmp	r3, #0
 7171 0036 09D0     		beq	.L292
 7172              		.loc 1 1917 0 is_stmt 0 discriminator 1
 7173 0038 FFF7FEFF 		bl	USB_VBusPresent
 7174 003c 0346     		mov	r3, r0
 7175 003e 002B     		cmp	r3, #0
 7176 0040 04D0     		beq	.L292
1918:main.c        ****     {
1919:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7177              		.loc 1 1919 0 is_stmt 1
 7178 0042 0022     		movs	r2, #0
 7179 0044 0649     		ldr	r1, .L293
 7180 0046 0320     		movs	r0, #3
 7181 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7182              	.L292:
1920:main.c        ****     } 
1921:main.c        ****     midiSent += 4;
 7183              		.loc 1 1921 0
 7184 004c 064B     		ldr	r3, .L293+8
 7185 004e 1B88     		ldrh	r3, [r3]
 7186 0050 0433     		adds	r3, r3, #4
 7187 0052 9AB2     		uxth	r2, r3
 7188 0054 044B     		ldr	r3, .L293+8
 7189 0056 1A80     		strh	r2, [r3]	@ movhi
1922:main.c        **** }
 7190              		.loc 1 1922 0
 7191 0058 00BF     		nop
 7192 005a 0837     		adds	r7, r7, #8
 7193              		.cfi_def_cfa_offset 8
 7194 005c BD46     		mov	sp, r7
 7195              		.cfi_def_cfa_register 13
 7196              		@ sp needed
 7197 005e 80BD     		pop	{r7, pc}
 7198              	.L294:
 7199              		.align	2
 7200              	.L293:
 7201 0060 00000000 		.word	midiMsg
 7202 0064 00000000 		.word	USB_active
 7203 0068 00000000 		.word	midiSent
 7204              		.cfi_endproc
 7205              	.LFE90:
 7206              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 7207              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 7208              		.align	2
 7209              		.global	sendMIDIAllNotesOff
 7210              		.thumb
 7211              		.thumb_func
 7212              		.type	sendMIDIAllNotesOff, %function
 7213              	sendMIDIAllNotesOff:
 7214              	.LFB91:
1923:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 163


1924:main.c        **** void sendMIDIAllNotesOff(void)
1925:main.c        **** {   
 7215              		.loc 1 1925 0
 7216              		.cfi_startproc
 7217              		@ args = 0, pretend = 0, frame = 0
 7218              		@ frame_needed = 1, uses_anonymous_args = 0
 7219 0000 80B5     		push	{r7, lr}
 7220              		.cfi_def_cfa_offset 8
 7221              		.cfi_offset 7, -8
 7222              		.cfi_offset 14, -4
 7223 0002 00AF     		add	r7, sp, #0
 7224              		.cfi_def_cfa_register 7
1926:main.c        ****     for (i = 0; i < 128; i++)
 7225              		.loc 1 1926 0
 7226 0004 144B     		ldr	r3, .L299
 7227 0006 0022     		movs	r2, #0
 7228 0008 1A70     		strb	r2, [r3]
 7229 000a 1EE0     		b	.L296
 7230              	.L298:
1927:main.c        ****     {
1928:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 7231              		.loc 1 1928 0
 7232 000c 134B     		ldr	r3, .L299+4
 7233 000e 9022     		movs	r2, #144
 7234 0010 1A70     		strb	r2, [r3]
1929:main.c        ****         midiMsg[1] = i;
 7235              		.loc 1 1929 0
 7236 0012 114B     		ldr	r3, .L299
 7237 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7238 0016 114B     		ldr	r3, .L299+4
 7239 0018 5A70     		strb	r2, [r3, #1]
1930:main.c        ****         midiMsg[2] = 0;	
 7240              		.loc 1 1930 0
 7241 001a 104B     		ldr	r3, .L299+4
 7242 001c 0022     		movs	r2, #0
 7243 001e 9A70     		strb	r2, [r3, #2]
1931:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7244              		.loc 1 1931 0
 7245 0020 0F4B     		ldr	r3, .L299+8
 7246 0022 1B78     		ldrb	r3, [r3]
 7247 0024 DBB2     		uxtb	r3, r3
 7248 0026 002B     		cmp	r3, #0
 7249 0028 09D0     		beq	.L297
 7250              		.loc 1 1931 0 is_stmt 0 discriminator 1
 7251 002a FFF7FEFF 		bl	USB_VBusPresent
 7252 002e 0346     		mov	r3, r0
 7253 0030 002B     		cmp	r3, #0
 7254 0032 04D0     		beq	.L297
1932:main.c        ****         {       
1933:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7255              		.loc 1 1933 0 is_stmt 1
 7256 0034 0022     		movs	r2, #0
 7257 0036 0949     		ldr	r1, .L299+4
 7258 0038 0320     		movs	r0, #3
 7259 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
 7260              	.L297:
1926:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 164


 7261              		.loc 1 1926 0 discriminator 2
 7262 003e 064B     		ldr	r3, .L299
 7263 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7264 0042 0133     		adds	r3, r3, #1
 7265 0044 DAB2     		uxtb	r2, r3
 7266 0046 044B     		ldr	r3, .L299
 7267 0048 1A70     		strb	r2, [r3]
 7268              	.L296:
1926:main.c        ****     {
 7269              		.loc 1 1926 0 is_stmt 0 discriminator 1
 7270 004a 034B     		ldr	r3, .L299
 7271 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7272 004e 5BB2     		sxtb	r3, r3
 7273 0050 002B     		cmp	r3, #0
 7274 0052 DBDA     		bge	.L298
1934:main.c        ****         }
1935:main.c        ****     }
1936:main.c        **** }
 7275              		.loc 1 1936 0 is_stmt 1
 7276 0054 00BF     		nop
 7277 0056 80BD     		pop	{r7, pc}
 7278              	.L300:
 7279              		.align	2
 7280              	.L299:
 7281 0058 00000000 		.word	i
 7282 005c 00000000 		.word	midiMsg
 7283 0060 00000000 		.word	USB_active
 7284              		.cfi_endproc
 7285              	.LFE91:
 7286              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 7287              		.global	checkStatus
 7288              		.bss
 7289              		.type	checkStatus, %object
 7290              		.size	checkStatus, 1
 7291              	checkStatus:
 7292 0128 00       		.space	1
 7293              		.global	checkBase
 7294 0129 00       		.align	1
 7295              		.type	checkBase, %object
 7296              		.size	checkBase, 2
 7297              	checkBase:
 7298 012a 0000     		.space	2
 7299              		.global	SPI_errors
 7300              		.align	2
 7301              		.type	SPI_errors, %object
 7302              		.size	SPI_errors, 4
 7303              	SPI_errors:
 7304 012c 00000000 		.space	4
 7305              		.section	.text.parseSysex,"ax",%progbits
 7306              		.align	2
 7307              		.global	parseSysex
 7308              		.thumb
 7309              		.thumb_func
 7310              		.type	parseSysex, %function
 7311              	parseSysex:
 7312              	.LFB92:
1937:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 165


1938:main.c        **** 
1939:main.c        **** 
1940:main.c        **** 
1941:main.c        **** volatile uint8_t checkStatus = 0;
1942:main.c        **** volatile uint16_t checkBase = 0;
1943:main.c        **** 
1944:main.c        **** 
1945:main.c        **** 
1946:main.c        **** int SPI_errors = 0;
1947:main.c        **** 
1948:main.c        **** void parseSysex(void)
1949:main.c        **** {
 7313              		.loc 1 1949 0
 7314              		.cfi_startproc
 7315              		@ args = 0, pretend = 0, frame = 80
 7316              		@ frame_needed = 1, uses_anonymous_args = 0
 7317 0000 90B5     		push	{r4, r7, lr}
 7318              		.cfi_def_cfa_offset 12
 7319              		.cfi_offset 4, -12
 7320              		.cfi_offset 7, -8
 7321              		.cfi_offset 14, -4
 7322 0002 95B0     		sub	sp, sp, #84
 7323              		.cfi_def_cfa_offset 96
 7324 0004 00AF     		add	r7, sp, #0
 7325              		.cfi_def_cfa_register 7
1950:main.c        ****     parsingSysex = 1;
 7326              		.loc 1 1950 0
 7327 0006 8F4B     		ldr	r3, .L354
 7328 0008 0122     		movs	r2, #1
 7329 000a 1A70     		strb	r2, [r3]
1951:main.c        ****     //0 = it's a preset
1952:main.c        ****     if (sysexBuffer[0] == 0)
 7330              		.loc 1 1952 0
 7331 000c 8E4B     		ldr	r3, .L354+4
 7332 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7333 0010 002B     		cmp	r3, #0
 7334 0012 40F0E082 		bne	.L302
 7335              	.LBB42:
1953:main.c        ****     {
1954:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7336              		.loc 1 1954 0
 7337 0016 8D4B     		ldr	r3, .L354+8
 7338 0018 0122     		movs	r2, #1
 7339 001a 1A70     		strb	r2, [r3]
1955:main.c        ****         currentFloat = 0;
 7340              		.loc 1 1955 0
 7341 001c 8C4B     		ldr	r3, .L354+12
 7342 001e 0022     		movs	r2, #0
 7343 0020 1A60     		str	r2, [r3]
1956:main.c        ****         presetArraySection = presetName;
 7344              		.loc 1 1956 0
 7345 0022 8C4B     		ldr	r3, .L354+16
 7346 0024 0022     		movs	r2, #0
 7347 0026 1A70     		strb	r2, [r3]
1957:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 7348              		.loc 1 1957 0
 7349 0028 874B     		ldr	r3, .L354+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 166


 7350 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7351 002c 8A4B     		ldr	r3, .L354+20
 7352 002e 1A70     		strb	r2, [r3]
1958:main.c        ****         presetArray[0] = sysexBuffer[2];
 7353              		.loc 1 1958 0
 7354 0030 854B     		ldr	r3, .L354+4
 7355 0032 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 7356 0034 894B     		ldr	r3, .L354+24
 7357 0036 1A70     		strb	r2, [r3]
1959:main.c        ****         presetArray[1] = sysexBuffer[3];
 7358              		.loc 1 1959 0
 7359 0038 834B     		ldr	r3, .L354+4
 7360 003a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 7361 003c 874B     		ldr	r3, .L354+24
 7362 003e 5A70     		strb	r2, [r3, #1]
1960:main.c        ****         presetArray[2] = sysexBuffer[4];
 7363              		.loc 1 1960 0
 7364 0040 814B     		ldr	r3, .L354+4
 7365 0042 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 7366 0044 854B     		ldr	r3, .L354+24
 7367 0046 9A70     		strb	r2, [r3, #2]
1961:main.c        ****         presetArray[3] = sysexBuffer[5];
 7368              		.loc 1 1961 0
 7369 0048 7F4B     		ldr	r3, .L354+4
 7370 004a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 7371 004c 834B     		ldr	r3, .L354+24
 7372 004e DA70     		strb	r2, [r3, #3]
1962:main.c        ****         
1963:main.c        ****         union breakFloat theVal;
1964:main.c        ****         uint32_t i = 6;
 7373              		.loc 1 1964 0
 7374 0050 0623     		movs	r3, #6
 7375 0052 FB64     		str	r3, [r7, #76]
1965:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+6;
 7376              		.loc 1 1965 0
 7377 0054 1423     		movs	r3, #20
 7378 0056 87F83730 		strb	r3, [r7, #55]
1966:main.c        ****         for (; i < stoppingPoint; i++)
 7379              		.loc 1 1966 0
 7380 005a 22E0     		b	.L303
 7381              	.L304:
1967:main.c        ****         {
1968:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 7382              		.loc 1 1968 0 discriminator 2
 7383 005c FB6C     		ldr	r3, [r7, #76]
 7384 005e 023B     		subs	r3, r3, #2
 7385 0060 7949     		ldr	r1, .L354+4
 7386 0062 FA6C     		ldr	r2, [r7, #76]
 7387 0064 0A44     		add	r2, r2, r1
 7388 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7389 0068 02F07F02 		and	r2, r2, #127
 7390 006c D1B2     		uxtb	r1, r2
 7391 006e 7B4A     		ldr	r2, .L354+24
 7392 0070 D154     		strb	r1, [r2, r3]
1969:main.c        ****             presetNamesArray[presetNumberToWrite][i-6] = sysexBuffer[i] & 127;
 7393              		.loc 1 1969 0 discriminator 2
 7394 0072 794B     		ldr	r3, .L354+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 167


 7395 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7396 0076 1846     		mov	r0, r3
 7397 0078 FB6C     		ldr	r3, [r7, #76]
 7398 007a 9A1F     		subs	r2, r3, #6
 7399 007c 7249     		ldr	r1, .L354+4
 7400 007e FB6C     		ldr	r3, [r7, #76]
 7401 0080 0B44     		add	r3, r3, r1
 7402 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7403 0084 03F07F03 		and	r3, r3, #127
 7404 0088 DCB2     		uxtb	r4, r3
 7405 008a 7549     		ldr	r1, .L354+28
 7406 008c 0346     		mov	r3, r0
 7407 008e DB00     		lsls	r3, r3, #3
 7408 0090 1B1A     		subs	r3, r3, r0
 7409 0092 5B00     		lsls	r3, r3, #1
 7410 0094 0B44     		add	r3, r3, r1
 7411 0096 1344     		add	r3, r3, r2
 7412 0098 2246     		mov	r2, r4
 7413 009a 1A70     		strb	r2, [r3]
1966:main.c        ****         for (; i < stoppingPoint; i++)
 7414              		.loc 1 1966 0 discriminator 2
 7415 009c FB6C     		ldr	r3, [r7, #76]
 7416 009e 0133     		adds	r3, r3, #1
 7417 00a0 FB64     		str	r3, [r7, #76]
 7418              	.L303:
1966:main.c        ****         for (; i < stoppingPoint; i++)
 7419              		.loc 1 1966 0 is_stmt 0 discriminator 1
 7420 00a2 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 7421 00a6 FB6C     		ldr	r3, [r7, #76]
 7422 00a8 9A42     		cmp	r2, r3
 7423 00aa D7D8     		bhi	.L304
1970:main.c        ****         }
1971:main.c        ****         
1972:main.c        ****         presetArraySection = macroNames;
 7424              		.loc 1 1972 0 is_stmt 1
 7425 00ac 694B     		ldr	r3, .L354+16
 7426 00ae 0122     		movs	r2, #1
 7427 00b0 1A70     		strb	r2, [r3]
 7428              	.LBB43:
1973:main.c        **** 
1974:main.c        ****         
1975:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 7429              		.loc 1 1975 0
 7430 00b2 0023     		movs	r3, #0
 7431 00b4 BB64     		str	r3, [r7, #72]
 7432 00b6 34E0     		b	.L305
 7433              	.L308:
 7434              	.LBB44:
1976:main.c        ****         {
1977:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 7435              		.loc 1 1977 0
 7436 00b8 0023     		movs	r3, #0
 7437 00ba 7B64     		str	r3, [r7, #68]
 7438 00bc 2BE0     		b	.L306
 7439              	.L307:
1978:main.c        ****             {
1979:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 168


 7440              		.loc 1 1979 0 discriminator 3
 7441 00be FB6C     		ldr	r3, [r7, #76]
 7442 00c0 023B     		subs	r3, r3, #2
 7443 00c2 6149     		ldr	r1, .L354+4
 7444 00c4 FA6C     		ldr	r2, [r7, #76]
 7445 00c6 0A44     		add	r2, r2, r1
 7446 00c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7447 00ca 02F07F02 		and	r2, r2, #127
 7448 00ce D1B2     		uxtb	r1, r2
 7449 00d0 624A     		ldr	r2, .L354+24
 7450 00d2 D154     		strb	r1, [r2, r3]
1980:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 7451              		.loc 1 1980 0 discriminator 3
 7452 00d4 604B     		ldr	r3, .L354+20
 7453 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7454 00d8 1846     		mov	r0, r3
 7455 00da 5B4A     		ldr	r2, .L354+4
 7456 00dc FB6C     		ldr	r3, [r7, #76]
 7457 00de 1344     		add	r3, r3, r2
 7458 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7459 00e2 03F07F03 		and	r3, r3, #127
 7460 00e6 DCB2     		uxtb	r4, r3
 7461 00e8 5E49     		ldr	r1, .L354+32
 7462 00ea BB6C     		ldr	r3, [r7, #72]
 7463 00ec 1A46     		mov	r2, r3
 7464 00ee D200     		lsls	r2, r2, #3
 7465 00f0 D21A     		subs	r2, r2, r3
 7466 00f2 5300     		lsls	r3, r2, #1
 7467 00f4 1A46     		mov	r2, r3
 7468 00f6 0346     		mov	r3, r0
 7469 00f8 DB00     		lsls	r3, r3, #3
 7470 00fa 1B1A     		subs	r3, r3, r0
 7471 00fc 1B01     		lsls	r3, r3, #4
 7472 00fe 1344     		add	r3, r3, r2
 7473 0100 CA18     		adds	r2, r1, r3
 7474 0102 7B6C     		ldr	r3, [r7, #68]
 7475 0104 1344     		add	r3, r3, r2
 7476 0106 2246     		mov	r2, r4
 7477 0108 1A70     		strb	r2, [r3]
1981:main.c        ****                 i++;
 7478              		.loc 1 1981 0 discriminator 3
 7479 010a FB6C     		ldr	r3, [r7, #76]
 7480 010c 0133     		adds	r3, r3, #1
 7481 010e FB64     		str	r3, [r7, #76]
1977:main.c        ****             {
 7482              		.loc 1 1977 0 discriminator 3
 7483 0110 7B6C     		ldr	r3, [r7, #68]
 7484 0112 0133     		adds	r3, r3, #1
 7485 0114 7B64     		str	r3, [r7, #68]
 7486              	.L306:
1977:main.c        ****             {
 7487              		.loc 1 1977 0 is_stmt 0 discriminator 1
 7488 0116 7B6C     		ldr	r3, [r7, #68]
 7489 0118 0D2B     		cmp	r3, #13
 7490 011a D0DD     		ble	.L307
 7491              	.LBE44:
1975:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 169


 7492              		.loc 1 1975 0 is_stmt 1 discriminator 2
 7493 011c BB6C     		ldr	r3, [r7, #72]
 7494 011e 0133     		adds	r3, r3, #1
 7495 0120 BB64     		str	r3, [r7, #72]
 7496              	.L305:
1975:main.c        ****         {
 7497              		.loc 1 1975 0 is_stmt 0 discriminator 1
 7498 0122 BB6C     		ldr	r3, [r7, #72]
 7499 0124 072B     		cmp	r3, #7
 7500 0126 C7DD     		ble	.L308
 7501              	.LBE43:
1982:main.c        ****             }
1983:main.c        ****         }
1984:main.c        ****         
1985:main.c        ****         uint16_t valsStart = 4 + NAME_LENGTH_IN_BYTES + (NAME_LENGTH_IN_BYTES * NUM_MACROS);
 7502              		.loc 1 1985 0 is_stmt 1
 7503 0128 8223     		movs	r3, #130
 7504 012a BB86     		strh	r3, [r7, #52]	@ movhi
1986:main.c        ****         
1987:main.c        ****         presetArraySection = initialVals;
 7505              		.loc 1 1987 0
 7506 012c 494B     		ldr	r3, .L354+16
 7507 012e 0222     		movs	r2, #2
 7508 0130 1A70     		strb	r2, [r3]
1988:main.c        ****         
1989:main.c        ****         for (; i < sysexPointer; i = i+5)
 7509              		.loc 1 1989 0
 7510 0132 49E2     		b	.L309
 7511              	.L331:
1990:main.c        ****         {
1991:main.c        ****             theVal.u32 = 0;
 7512              		.loc 1 1991 0
 7513 0134 0023     		movs	r3, #0
 7514 0136 3B61     		str	r3, [r7, #16]
1992:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7515              		.loc 1 1992 0
 7516 0138 3B69     		ldr	r3, [r7, #16]
 7517 013a 4349     		ldr	r1, .L354+4
 7518 013c FA6C     		ldr	r2, [r7, #76]
 7519 013e 0A44     		add	r2, r2, r1
 7520 0140 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7521 0142 1207     		lsls	r2, r2, #28
 7522 0144 1343     		orrs	r3, r3, r2
 7523 0146 3B61     		str	r3, [r7, #16]
1993:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 7524              		.loc 1 1993 0
 7525 0148 3B69     		ldr	r3, [r7, #16]
 7526 014a FA6C     		ldr	r2, [r7, #76]
 7527 014c 0132     		adds	r2, r2, #1
 7528 014e 3E49     		ldr	r1, .L354+4
 7529 0150 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7530 0152 5205     		lsls	r2, r2, #21
 7531 0154 1343     		orrs	r3, r3, r2
 7532 0156 3B61     		str	r3, [r7, #16]
1994:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 7533              		.loc 1 1994 0
 7534 0158 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 170


 7535 015a FA6C     		ldr	r2, [r7, #76]
 7536 015c 0232     		adds	r2, r2, #2
 7537 015e 3A49     		ldr	r1, .L354+4
 7538 0160 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7539 0162 9203     		lsls	r2, r2, #14
 7540 0164 1343     		orrs	r3, r3, r2
 7541 0166 3B61     		str	r3, [r7, #16]
1995:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 7542              		.loc 1 1995 0
 7543 0168 3B69     		ldr	r3, [r7, #16]
 7544 016a FA6C     		ldr	r2, [r7, #76]
 7545 016c 0332     		adds	r2, r2, #3
 7546 016e 3649     		ldr	r1, .L354+4
 7547 0170 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7548 0172 D201     		lsls	r2, r2, #7
 7549 0174 1343     		orrs	r3, r3, r2
 7550 0176 3B61     		str	r3, [r7, #16]
1996:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 7551              		.loc 1 1996 0
 7552 0178 3A69     		ldr	r2, [r7, #16]
 7553 017a FB6C     		ldr	r3, [r7, #76]
 7554 017c 0433     		adds	r3, r3, #4
 7555 017e 3249     		ldr	r1, .L354+4
 7556 0180 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7557 0182 03F07F03 		and	r3, r3, #127
 7558 0186 1343     		orrs	r3, r3, r2
 7559 0188 3B61     		str	r3, [r7, #16]
1997:main.c        ****             testVal = theVal.f;
 7560              		.loc 1 1997 0
 7561 018a 3B69     		ldr	r3, [r7, #16]	@ float
 7562 018c 364A     		ldr	r2, .L354+36
 7563 018e 1360     		str	r3, [r2]	@ float
1998:main.c        ****             if (presetArraySection == initialVals)
 7564              		.loc 1 1998 0
 7565 0190 304B     		ldr	r3, .L354+16
 7566 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7567 0194 022B     		cmp	r3, #2
 7568 0196 40F0B980 		bne	.L310
1999:main.c        ****             {
2000:main.c        **** 
2001:main.c        ****                 if (currentFloat == 0)
 7569              		.loc 1 2001 0
 7570 019a 2D4B     		ldr	r3, .L354+12
 7571 019c 1B68     		ldr	r3, [r3]
 7572 019e 002B     		cmp	r3, #0
 7573 01a0 22D1     		bne	.L311
2002:main.c        ****                 {
2003:main.c        ****                     valsCount = (uint16_t) theVal.f;
 7574              		.loc 1 2003 0
 7575 01a2 3B69     		ldr	r3, [r7, #16]	@ float
 7576 01a4 1846     		mov	r0, r3
 7577 01a6 FFF7FEFF 		bl	__aeabi_f2uiz
 7578 01aa 0346     		mov	r3, r0
 7579 01ac 9AB2     		uxth	r2, r3
 7580 01ae 2F4B     		ldr	r3, .L354+40
 7581 01b0 1A80     		strh	r2, [r3]	@ movhi
2004:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 171


 7582              		.loc 1 2004 0
 7583 01b2 BA8E     		ldrh	r2, [r7, #52]
 7584 01b4 264B     		ldr	r3, .L354+12
 7585 01b6 1B68     		ldr	r3, [r3]
 7586 01b8 591C     		adds	r1, r3, #1
 7587 01ba 2548     		ldr	r0, .L354+12
 7588 01bc 0160     		str	r1, [r0]
 7589 01be 1344     		add	r3, r3, r2
 7590 01c0 2A4A     		ldr	r2, .L354+40
 7591 01c2 1288     		ldrh	r2, [r2]
 7592 01c4 120A     		lsrs	r2, r2, #8
 7593 01c6 92B2     		uxth	r2, r2
 7594 01c8 D1B2     		uxtb	r1, r2
 7595 01ca 244A     		ldr	r2, .L354+24
 7596 01cc D154     		strb	r1, [r2, r3]
2005:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 7597              		.loc 1 2005 0
 7598 01ce BA8E     		ldrh	r2, [r7, #52]
 7599 01d0 1F4B     		ldr	r3, .L354+12
 7600 01d2 1B68     		ldr	r3, [r3]
 7601 01d4 591C     		adds	r1, r3, #1
 7602 01d6 1E48     		ldr	r0, .L354+12
 7603 01d8 0160     		str	r1, [r0]
 7604 01da 1344     		add	r3, r3, r2
 7605 01dc 234A     		ldr	r2, .L354+40
 7606 01de 1288     		ldrh	r2, [r2]
 7607 01e0 D1B2     		uxtb	r1, r2
 7608 01e2 1E4A     		ldr	r2, .L354+24
 7609 01e4 D154     		strb	r1, [r2, r3]
 7610 01e6 ECE1     		b	.L317
 7611              	.L311:
2006:main.c        ****                 }
2007:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 7612              		.loc 1 2007 0
 7613 01e8 204B     		ldr	r3, .L354+40
 7614 01ea 1B88     		ldrh	r3, [r3]
 7615 01ec 0133     		adds	r3, r3, #1
 7616 01ee 5B00     		lsls	r3, r3, #1
 7617 01f0 1A46     		mov	r2, r3
 7618 01f2 174B     		ldr	r3, .L354+12
 7619 01f4 1B68     		ldr	r3, [r3]
 7620 01f6 9A42     		cmp	r2, r3
 7621 01f8 3CD9     		bls	.L313
 7622              	.LBB45:
2008:main.c        ****                 { 
2009:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 7623              		.loc 1 2009 0
 7624 01fa 3B69     		ldr	r3, [r7, #16]	@ float
 7625 01fc 1C49     		ldr	r1, .L354+44
 7626 01fe 1846     		mov	r0, r3
 7627 0200 FFF7FEFF 		bl	__aeabi_fmul
 7628 0204 0346     		mov	r3, r0
 7629 0206 1846     		mov	r0, r3
 7630 0208 FFF7FEFF 		bl	__aeabi_f2uiz
 7631 020c 0346     		mov	r3, r0
 7632 020e 7B86     		strh	r3, [r7, #50]	@ movhi
2010:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 172


 7633              		.loc 1 2010 0
 7634 0210 BA8E     		ldrh	r2, [r7, #52]
 7635 0212 0F4B     		ldr	r3, .L354+12
 7636 0214 1B68     		ldr	r3, [r3]
 7637 0216 591C     		adds	r1, r3, #1
 7638 0218 0D48     		ldr	r0, .L354+12
 7639 021a 0160     		str	r1, [r0]
 7640 021c 1344     		add	r3, r3, r2
 7641 021e 7A8E     		ldrh	r2, [r7, #50]
 7642 0220 120A     		lsrs	r2, r2, #8
 7643 0222 92B2     		uxth	r2, r2
 7644 0224 D1B2     		uxtb	r1, r2
 7645 0226 0D4A     		ldr	r2, .L354+24
 7646 0228 D154     		strb	r1, [r2, r3]
2011:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7647              		.loc 1 2011 0
 7648 022a BA8E     		ldrh	r2, [r7, #52]
 7649 022c 084B     		ldr	r3, .L354+12
 7650 022e 1B68     		ldr	r3, [r3]
 7651 0230 591C     		adds	r1, r3, #1
 7652 0232 0748     		ldr	r0, .L354+12
 7653 0234 0160     		str	r1, [r0]
 7654 0236 1344     		add	r3, r3, r2
 7655 0238 7A8E     		ldrh	r2, [r7, #50]	@ movhi
 7656 023a D1B2     		uxtb	r1, r2
 7657 023c 074A     		ldr	r2, .L354+24
 7658 023e D154     		strb	r1, [r2, r3]
 7659              	.LBE45:
 7660 0240 BFE1     		b	.L317
 7661              	.L355:
 7662 0242 00BF     		.align	2
 7663              	.L354:
 7664 0244 00000000 		.word	parsingSysex
 7665 0248 00000000 		.word	sysexBuffer
 7666 024c 00000000 		.word	sysexMessageInProgress
 7667 0250 00000000 		.word	currentFloat
 7668 0254 00000000 		.word	presetArraySection
 7669 0258 00000000 		.word	presetNumberToWrite
 7670 025c 00000000 		.word	presetArray
 7671 0260 00000000 		.word	presetNamesArray
 7672 0264 00000000 		.word	macroNamesArray
 7673 0268 00000000 		.word	testVal
 7674 026c 00000000 		.word	valsCount
 7675 0270 00FF7F47 		.word	1199570688
 7676              	.L313:
2012:main.c        ****                 }
2013:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 7677              		.loc 1 2013 0
 7678 0274 9C4B     		ldr	r3, .L356
 7679 0276 1B88     		ldrh	r3, [r3]
 7680 0278 0133     		adds	r3, r3, #1
 7681 027a 5B00     		lsls	r3, r3, #1
 7682 027c 1A46     		mov	r2, r3
 7683 027e 9B4B     		ldr	r3, .L356+4
 7684 0280 1B68     		ldr	r3, [r3]
 7685 0282 9A42     		cmp	r2, r3
 7686 0284 40F09D81 		bne	.L317
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 173


2014:main.c        ****                 {
2015:main.c        ****                     valCheck = theVal.f;
 7687              		.loc 1 2015 0
 7688 0288 3B69     		ldr	r3, [r7, #16]	@ float
 7689 028a 994A     		ldr	r2, .L356+8
 7690 028c 1360     		str	r3, [r2]	@ float
2016:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 7691              		.loc 1 2016 0
 7692 028e 984B     		ldr	r3, .L356+8
 7693 0290 1B68     		ldr	r3, [r3]	@ float
 7694 0292 9849     		ldr	r1, .L356+12
 7695 0294 1846     		mov	r0, r3
 7696 0296 FFF7FEFF 		bl	__aeabi_fcmplt
 7697 029a 0346     		mov	r3, r0
 7698 029c 002B     		cmp	r3, #0
 7699 029e 23D0     		beq	.L314
 7700              		.loc 1 2016 0 is_stmt 0 discriminator 1
 7701 02a0 934B     		ldr	r3, .L356+8
 7702 02a2 1B68     		ldr	r3, [r3]	@ float
 7703 02a4 9449     		ldr	r1, .L356+16
 7704 02a6 1846     		mov	r0, r3
 7705 02a8 FFF7FEFF 		bl	__aeabi_fcmpgt
 7706 02ac 0346     		mov	r3, r0
 7707 02ae 002B     		cmp	r3, #0
 7708 02b0 1AD0     		beq	.L314
2017:main.c        ****                     {
2018:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7709              		.loc 1 2018 0 is_stmt 1
 7710 02b2 BA8E     		ldrh	r2, [r7, #52]
 7711 02b4 8D4B     		ldr	r3, .L356+4
 7712 02b6 1B68     		ldr	r3, [r3]
 7713 02b8 591C     		adds	r1, r3, #1
 7714 02ba 8C48     		ldr	r0, .L356+4
 7715 02bc 0160     		str	r1, [r0]
 7716 02be 1344     		add	r3, r3, r2
 7717 02c0 8E4A     		ldr	r2, .L356+20
 7718 02c2 EF21     		movs	r1, #239
 7719 02c4 D154     		strb	r1, [r2, r3]
2019:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7720              		.loc 1 2019 0
 7721 02c6 BA8E     		ldrh	r2, [r7, #52]
 7722 02c8 884B     		ldr	r3, .L356+4
 7723 02ca 1B68     		ldr	r3, [r3]
 7724 02cc 591C     		adds	r1, r3, #1
 7725 02ce 8748     		ldr	r0, .L356+4
 7726 02d0 0160     		str	r1, [r0]
 7727 02d2 1344     		add	r3, r3, r2
 7728 02d4 894A     		ldr	r2, .L356+20
 7729 02d6 EF21     		movs	r1, #239
 7730 02d8 D154     		strb	r1, [r2, r3]
2020:main.c        ****                         presetArraySection = mapCountNext;
 7731              		.loc 1 2020 0
 7732 02da 894B     		ldr	r3, .L356+24
 7733 02dc 0322     		movs	r2, #3
 7734 02de 1A70     		strb	r2, [r3]
2021:main.c        ****                         mapCount = 0;
 7735              		.loc 1 2021 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 174


 7736 02e0 884B     		ldr	r3, .L356+28
 7737 02e2 0022     		movs	r2, #0
 7738 02e4 1A60     		str	r2, [r3]
 7739 02e6 6CE1     		b	.L317
 7740              	.L314:
2022:main.c        ****                     }
2023:main.c        ****                     else
2024:main.c        ****                     {
2025:main.c        ****                         //error state
2026:main.c        ****                         SPI_errors++;
 7741              		.loc 1 2026 0
 7742 02e8 874B     		ldr	r3, .L356+32
 7743 02ea 1B68     		ldr	r3, [r3]
 7744 02ec 0133     		adds	r3, r3, #1
 7745 02ee 864A     		ldr	r2, .L356+32
 7746 02f0 1360     		str	r3, [r2]
2027:main.c        ****                         sysexMessageInProgress = 0;
 7747              		.loc 1 2027 0
 7748 02f2 864B     		ldr	r3, .L356+36
 7749 02f4 0022     		movs	r2, #0
 7750 02f6 1A70     		strb	r2, [r3]
2028:main.c        ****                         sysexPointer = 0;
 7751              		.loc 1 2028 0
 7752 02f8 854B     		ldr	r3, .L356+40
 7753 02fa 0022     		movs	r2, #0
 7754 02fc 1A60     		str	r2, [r3]
2029:main.c        ****                         sendingMessage = 0;
 7755              		.loc 1 2029 0
 7756 02fe 854B     		ldr	r3, .L356+44
 7757 0300 0022     		movs	r2, #0
 7758 0302 1A70     		strb	r2, [r3]
2030:main.c        ****                         parseThatMF = 0;
 7759              		.loc 1 2030 0
 7760 0304 844B     		ldr	r3, .L356+48
 7761 0306 0022     		movs	r2, #0
 7762 0308 1A70     		strb	r2, [r3]
 7763 030a 5AE1     		b	.L317
 7764              	.L310:
2031:main.c        ****                     }
2032:main.c        ****                 }
2033:main.c        ****             }
2034:main.c        ****             else if (presetArraySection == mapCountNext)
 7765              		.loc 1 2034 0
 7766 030c 7C4B     		ldr	r3, .L356+24
 7767 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7768 0310 032B     		cmp	r3, #3
 7769 0312 28D1     		bne	.L318
2035:main.c        ****             {
2036:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 7770              		.loc 1 2036 0
 7771 0314 3B69     		ldr	r3, [r7, #16]	@ float
 7772 0316 1846     		mov	r0, r3
 7773 0318 FFF7FEFF 		bl	__aeabi_f2uiz
 7774 031c 0346     		mov	r3, r0
 7775 031e 9AB2     		uxth	r2, r3
 7776 0320 7E4B     		ldr	r3, .L356+52
 7777 0322 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 175


2037:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 7778              		.loc 1 2037 0
 7779 0324 BA8E     		ldrh	r2, [r7, #52]
 7780 0326 714B     		ldr	r3, .L356+4
 7781 0328 1B68     		ldr	r3, [r3]
 7782 032a 591C     		adds	r1, r3, #1
 7783 032c 6F48     		ldr	r0, .L356+4
 7784 032e 0160     		str	r1, [r0]
 7785 0330 1344     		add	r3, r3, r2
 7786 0332 7A4A     		ldr	r2, .L356+52
 7787 0334 1288     		ldrh	r2, [r2]
 7788 0336 120A     		lsrs	r2, r2, #8
 7789 0338 92B2     		uxth	r2, r2
 7790 033a D1B2     		uxtb	r1, r2
 7791 033c 6F4A     		ldr	r2, .L356+20
 7792 033e D154     		strb	r1, [r2, r3]
2038:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 7793              		.loc 1 2038 0
 7794 0340 BA8E     		ldrh	r2, [r7, #52]
 7795 0342 6A4B     		ldr	r3, .L356+4
 7796 0344 1B68     		ldr	r3, [r3]
 7797 0346 591C     		adds	r1, r3, #1
 7798 0348 6848     		ldr	r0, .L356+4
 7799 034a 0160     		str	r1, [r0]
 7800 034c 1344     		add	r3, r3, r2
 7801 034e 734A     		ldr	r2, .L356+52
 7802 0350 1288     		ldrh	r2, [r2]
 7803 0352 D1B2     		uxtb	r1, r2
 7804 0354 694A     		ldr	r2, .L356+20
 7805 0356 D154     		strb	r1, [r2, r3]
2039:main.c        ****                 presetArraySection = mapping;
 7806              		.loc 1 2039 0
 7807 0358 694B     		ldr	r3, .L356+24
 7808 035a 0422     		movs	r2, #4
 7809 035c 1A70     		strb	r2, [r3]
2040:main.c        ****                 numMappings = 0;
 7810              		.loc 1 2040 0
 7811 035e 704B     		ldr	r3, .L356+56
 7812 0360 0022     		movs	r2, #0
 7813 0362 1A80     		strh	r2, [r3]	@ movhi
 7814 0364 2DE1     		b	.L317
 7815              	.L318:
2041:main.c        ****             }
2042:main.c        ****             else if (presetArraySection == mapping)
 7816              		.loc 1 2042 0
 7817 0366 664B     		ldr	r3, .L356+24
 7818 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7819 036a 042B     		cmp	r3, #4
 7820 036c 40F02981 		bne	.L317
2043:main.c        ****             {
2044:main.c        ****                 // this is the order
2045:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
2046:main.c        ****                 if (numMappings < mapCountExpectation)
 7821              		.loc 1 2046 0
 7822 0370 6B4B     		ldr	r3, .L356+56
 7823 0372 1A88     		ldrh	r2, [r3]
 7824 0374 694B     		ldr	r3, .L356+52
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 176


 7825 0376 1B88     		ldrh	r3, [r3]
 7826 0378 9A42     		cmp	r2, r3
 7827 037a 80F0D780 		bcs	.L319
2047:main.c        ****                 {
2048:main.c        ****                     if ((mapCount % 5) == 0)
 7828              		.loc 1 2048 0
 7829 037e 614B     		ldr	r3, .L356+28
 7830 0380 1968     		ldr	r1, [r3]
 7831 0382 684B     		ldr	r3, .L356+60
 7832 0384 A3FB0123 		umull	r2, r3, r3, r1
 7833 0388 9A08     		lsrs	r2, r3, #2
 7834 038a 1346     		mov	r3, r2
 7835 038c 9B00     		lsls	r3, r3, #2
 7836 038e 1344     		add	r3, r3, r2
 7837 0390 CA1A     		subs	r2, r1, r3
 7838 0392 002A     		cmp	r2, #0
 7839 0394 0FD1     		bne	.L320
2049:main.c        ****                     {
2050:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7840              		.loc 1 2050 0
 7841 0396 BA8E     		ldrh	r2, [r7, #52]
 7842 0398 544B     		ldr	r3, .L356+4
 7843 039a 1B68     		ldr	r3, [r3]
 7844 039c 591C     		adds	r1, r3, #1
 7845 039e 5348     		ldr	r0, .L356+4
 7846 03a0 0160     		str	r1, [r0]
 7847 03a2 D418     		adds	r4, r2, r3
 7848 03a4 3B69     		ldr	r3, [r7, #16]	@ float
 7849 03a6 1846     		mov	r0, r3
 7850 03a8 FFF7FEFF 		bl	__aeabi_f2uiz
 7851 03ac 0346     		mov	r3, r0
 7852 03ae DAB2     		uxtb	r2, r3
 7853 03b0 524B     		ldr	r3, .L356+20
 7854 03b2 1A55     		strb	r2, [r3, r4]
 7855 03b4 91E0     		b	.L321
 7856              	.L320:
2051:main.c        ****                     }
2052:main.c        ****                     else if  (mapCount % 5 == 1)
 7857              		.loc 1 2052 0
 7858 03b6 534B     		ldr	r3, .L356+28
 7859 03b8 1968     		ldr	r1, [r3]
 7860 03ba 5A4B     		ldr	r3, .L356+60
 7861 03bc A3FB0123 		umull	r2, r3, r3, r1
 7862 03c0 9A08     		lsrs	r2, r3, #2
 7863 03c2 1346     		mov	r3, r2
 7864 03c4 9B00     		lsls	r3, r3, #2
 7865 03c6 1344     		add	r3, r3, r2
 7866 03c8 CA1A     		subs	r2, r1, r3
 7867 03ca 012A     		cmp	r2, #1
 7868 03cc 0FD1     		bne	.L322
2053:main.c        ****                     {
2054:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7869              		.loc 1 2054 0
 7870 03ce BA8E     		ldrh	r2, [r7, #52]
 7871 03d0 464B     		ldr	r3, .L356+4
 7872 03d2 1B68     		ldr	r3, [r3]
 7873 03d4 591C     		adds	r1, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 177


 7874 03d6 4548     		ldr	r0, .L356+4
 7875 03d8 0160     		str	r1, [r0]
 7876 03da D418     		adds	r4, r2, r3
 7877 03dc 3B69     		ldr	r3, [r7, #16]	@ float
 7878 03de 1846     		mov	r0, r3
 7879 03e0 FFF7FEFF 		bl	__aeabi_f2uiz
 7880 03e4 0346     		mov	r3, r0
 7881 03e6 DAB2     		uxtb	r2, r3
 7882 03e8 444B     		ldr	r3, .L356+20
 7883 03ea 1A55     		strb	r2, [r3, r4]
 7884 03ec 75E0     		b	.L321
 7885              	.L322:
2055:main.c        ****                     }
2056:main.c        ****                     else if (mapCount % 5 == 2) //check if the scalar source is -1 (if so send 255 
 7886              		.loc 1 2056 0
 7887 03ee 454B     		ldr	r3, .L356+28
 7888 03f0 1968     		ldr	r1, [r3]
 7889 03f2 4C4B     		ldr	r3, .L356+60
 7890 03f4 A3FB0123 		umull	r2, r3, r3, r1
 7891 03f8 9A08     		lsrs	r2, r3, #2
 7892 03fa 1346     		mov	r3, r2
 7893 03fc 9B00     		lsls	r3, r3, #2
 7894 03fe 1344     		add	r3, r3, r2
 7895 0400 CA1A     		subs	r2, r1, r3
 7896 0402 022A     		cmp	r2, #2
 7897 0404 23D1     		bne	.L323
2057:main.c        ****                     {
2058:main.c        ****                         if (theVal.f < 0.0f)
 7898              		.loc 1 2058 0
 7899 0406 3B69     		ldr	r3, [r7, #16]	@ float
 7900 0408 4FF00001 		mov	r1, #0
 7901 040c 1846     		mov	r0, r3
 7902 040e FFF7FEFF 		bl	__aeabi_fcmplt
 7903 0412 0346     		mov	r3, r0
 7904 0414 002B     		cmp	r3, #0
 7905 0416 0AD0     		beq	.L353
2059:main.c        ****                         {
2060:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 7906              		.loc 1 2060 0
 7907 0418 BA8E     		ldrh	r2, [r7, #52]
 7908 041a 344B     		ldr	r3, .L356+4
 7909 041c 1B68     		ldr	r3, [r3]
 7910 041e 591C     		adds	r1, r3, #1
 7911 0420 3248     		ldr	r0, .L356+4
 7912 0422 0160     		str	r1, [r0]
 7913 0424 1344     		add	r3, r3, r2
 7914 0426 354A     		ldr	r2, .L356+20
 7915 0428 FF21     		movs	r1, #255
 7916 042a D154     		strb	r1, [r2, r3]
 7917 042c 55E0     		b	.L321
 7918              	.L353:
2061:main.c        ****                         }
2062:main.c        ****                         else
2063:main.c        ****                         {
2064:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7919              		.loc 1 2064 0
 7920 042e BA8E     		ldrh	r2, [r7, #52]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 178


 7921 0430 2E4B     		ldr	r3, .L356+4
 7922 0432 1B68     		ldr	r3, [r3]
 7923 0434 591C     		adds	r1, r3, #1
 7924 0436 2D48     		ldr	r0, .L356+4
 7925 0438 0160     		str	r1, [r0]
 7926 043a D418     		adds	r4, r2, r3
 7927 043c 3B69     		ldr	r3, [r7, #16]	@ float
 7928 043e 1846     		mov	r0, r3
 7929 0440 FFF7FEFF 		bl	__aeabi_f2uiz
 7930 0444 0346     		mov	r3, r0
 7931 0446 DAB2     		uxtb	r2, r3
 7932 0448 2C4B     		ldr	r3, .L356+20
 7933 044a 1A55     		strb	r2, [r3, r4]
 7934 044c 45E0     		b	.L321
 7935              	.L323:
2065:main.c        ****                         }
2066:main.c        ****                     }
2067:main.c        ****                     else if (mapCount % 5 == 3)
 7936              		.loc 1 2067 0
 7937 044e 2D4B     		ldr	r3, .L356+28
 7938 0450 1968     		ldr	r1, [r3]
 7939 0452 344B     		ldr	r3, .L356+60
 7940 0454 A3FB0123 		umull	r2, r3, r3, r1
 7941 0458 9A08     		lsrs	r2, r3, #2
 7942 045a 1346     		mov	r3, r2
 7943 045c 9B00     		lsls	r3, r3, #2
 7944 045e 1344     		add	r3, r3, r2
 7945 0460 CA1A     		subs	r2, r1, r3
 7946 0462 032A     		cmp	r2, #3
 7947 0464 24D1     		bne	.L327
 7948              	.LBB46:
2068:main.c        ****                     {
2069:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 7949              		.loc 1 2069 0
 7950 0466 3B69     		ldr	r3, [r7, #16]	@ float
 7951 0468 2F49     		ldr	r1, .L356+64
 7952 046a 1846     		mov	r0, r3
 7953 046c FFF7FEFF 		bl	__aeabi_fmul
 7954 0470 0346     		mov	r3, r0
 7955 0472 1846     		mov	r0, r3
 7956 0474 FFF7FEFF 		bl	__aeabi_f2iz
 7957 0478 0346     		mov	r3, r0
 7958 047a 3B86     		strh	r3, [r7, #48]	@ movhi
2070:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 7959              		.loc 1 2070 0
 7960 047c BA8E     		ldrh	r2, [r7, #52]
 7961 047e 1B4B     		ldr	r3, .L356+4
 7962 0480 1B68     		ldr	r3, [r3]
 7963 0482 591C     		adds	r1, r3, #1
 7964 0484 1948     		ldr	r0, .L356+4
 7965 0486 0160     		str	r1, [r0]
 7966 0488 1344     		add	r3, r3, r2
 7967 048a B7F93020 		ldrsh	r2, [r7, #48]
 7968 048e 1212     		asrs	r2, r2, #8
 7969 0490 12B2     		sxth	r2, r2
 7970 0492 D1B2     		uxtb	r1, r2
 7971 0494 194A     		ldr	r2, .L356+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 179


 7972 0496 D154     		strb	r1, [r2, r3]
2071:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7973              		.loc 1 2071 0
 7974 0498 BA8E     		ldrh	r2, [r7, #52]
 7975 049a 144B     		ldr	r3, .L356+4
 7976 049c 1B68     		ldr	r3, [r3]
 7977 049e 591C     		adds	r1, r3, #1
 7978 04a0 1248     		ldr	r0, .L356+4
 7979 04a2 0160     		str	r1, [r0]
 7980 04a4 1344     		add	r3, r3, r2
 7981 04a6 3A8E     		ldrh	r2, [r7, #48]	@ movhi
 7982 04a8 D1B2     		uxtb	r1, r2
 7983 04aa 144A     		ldr	r2, .L356+20
 7984 04ac D154     		strb	r1, [r2, r3]
 7985              	.LBE46:
 7986 04ae 14E0     		b	.L321
 7987              	.L327:
2072:main.c        **** 
2073:main.c        ****                     }
2074:main.c        ****                     else
2075:main.c        ****                     {
2076:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7988              		.loc 1 2076 0
 7989 04b0 BA8E     		ldrh	r2, [r7, #52]
 7990 04b2 0E4B     		ldr	r3, .L356+4
 7991 04b4 1B68     		ldr	r3, [r3]
 7992 04b6 591C     		adds	r1, r3, #1
 7993 04b8 0C48     		ldr	r0, .L356+4
 7994 04ba 0160     		str	r1, [r0]
 7995 04bc D418     		adds	r4, r2, r3
 7996 04be 3B69     		ldr	r3, [r7, #16]	@ float
 7997 04c0 1846     		mov	r0, r3
 7998 04c2 FFF7FEFF 		bl	__aeabi_f2uiz
 7999 04c6 0346     		mov	r3, r0
 8000 04c8 DAB2     		uxtb	r2, r3
 8001 04ca 0C4B     		ldr	r3, .L356+20
 8002 04cc 1A55     		strb	r2, [r3, r4]
2077:main.c        ****                         numMappings++;
 8003              		.loc 1 2077 0
 8004 04ce 144B     		ldr	r3, .L356+56
 8005 04d0 1B88     		ldrh	r3, [r3]
 8006 04d2 0133     		adds	r3, r3, #1
 8007 04d4 9AB2     		uxth	r2, r3
 8008 04d6 124B     		ldr	r3, .L356+56
 8009 04d8 1A80     		strh	r2, [r3]	@ movhi
 8010              	.L321:
2078:main.c        ****                     }
2079:main.c        ****                     mapCount++;
 8011              		.loc 1 2079 0
 8012 04da 0A4B     		ldr	r3, .L356+28
 8013 04dc 1B68     		ldr	r3, [r3]
 8014 04de 0133     		adds	r3, r3, #1
 8015 04e0 084A     		ldr	r2, .L356+28
 8016 04e2 1360     		str	r3, [r2]
 8017 04e4 6DE0     		b	.L317
 8018              	.L357:
 8019 04e6 00BF     		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 180


 8020              	.L356:
 8021 04e8 00000000 		.word	valsCount
 8022 04ec 00000000 		.word	currentFloat
 8023 04f0 00000000 		.word	valCheck
 8024 04f4 0000C0BF 		.word	-1077936128
 8025 04f8 000020C0 		.word	-1071644672
 8026 04fc 00000000 		.word	presetArray
 8027 0500 00000000 		.word	presetArraySection
 8028 0504 00000000 		.word	mapCount
 8029 0508 00000000 		.word	SPI_errors
 8030 050c 00000000 		.word	sysexMessageInProgress
 8031 0510 00000000 		.word	sysexPointer
 8032 0514 00000000 		.word	sendingMessage
 8033 0518 00000000 		.word	parseThatMF
 8034 051c 00000000 		.word	mapCountExpectation
 8035 0520 00000000 		.word	numMappings
 8036 0524 CDCCCCCC 		.word	-858993459
 8037 0528 00FEFF46 		.word	1191181824
 8038              	.L319:
2080:main.c        ****                 }
2081:main.c        ****                 
2082:main.c        **** 
2083:main.c        ****                 else
2084:main.c        ****                 {
2085:main.c        ****                     //mapcount ended
2086:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 8039              		.loc 1 2086 0
 8040 052c 3B69     		ldr	r3, [r7, #16]	@ float
 8041 052e 6649     		ldr	r1, .L358
 8042 0530 1846     		mov	r0, r3
 8043 0532 FFF7FEFF 		bl	__aeabi_fcmplt
 8044 0536 0346     		mov	r3, r0
 8045 0538 002B     		cmp	r3, #0
 8046 053a 31D0     		beq	.L328
 8047              		.loc 1 2086 0 is_stmt 0 discriminator 1
 8048 053c 3B69     		ldr	r3, [r7, #16]	@ float
 8049 053e 6349     		ldr	r1, .L358+4
 8050 0540 1846     		mov	r0, r3
 8051 0542 FFF7FEFF 		bl	__aeabi_fcmpgt
 8052 0546 0346     		mov	r3, r0
 8053 0548 002B     		cmp	r3, #0
 8054 054a 29D0     		beq	.L328
2087:main.c        ****                     {
2088:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8055              		.loc 1 2088 0 is_stmt 1
 8056 054c BA8E     		ldrh	r2, [r7, #52]
 8057 054e 604B     		ldr	r3, .L358+8
 8058 0550 1B68     		ldr	r3, [r3]
 8059 0552 591C     		adds	r1, r3, #1
 8060 0554 5E48     		ldr	r0, .L358+8
 8061 0556 0160     		str	r1, [r0]
 8062 0558 1344     		add	r3, r3, r2
 8063 055a 5E4A     		ldr	r2, .L358+12
 8064 055c FE21     		movs	r1, #254
 8065 055e D154     		strb	r1, [r2, r3]
2089:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8066              		.loc 1 2089 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 181


 8067 0560 BA8E     		ldrh	r2, [r7, #52]
 8068 0562 5B4B     		ldr	r3, .L358+8
 8069 0564 1B68     		ldr	r3, [r3]
 8070 0566 591C     		adds	r1, r3, #1
 8071 0568 5948     		ldr	r0, .L358+8
 8072 056a 0160     		str	r1, [r0]
 8073 056c 1344     		add	r3, r3, r2
 8074 056e 594A     		ldr	r2, .L358+12
 8075 0570 FE21     		movs	r1, #254
 8076 0572 D154     		strb	r1, [r2, r3]
2090:main.c        ****                         presetArraySection = presetEnd;
 8077              		.loc 1 2090 0
 8078 0574 584B     		ldr	r3, .L358+16
 8079 0576 0522     		movs	r2, #5
 8080 0578 1A70     		strb	r2, [r3]
2091:main.c        ****                         sysexMessageInProgress = 0;
 8081              		.loc 1 2091 0
 8082 057a 584B     		ldr	r3, .L358+20
 8083 057c 0022     		movs	r2, #0
 8084 057e 1A70     		strb	r2, [r3]
2092:main.c        ****                         sendingMessage = 1;
 8085              		.loc 1 2092 0
 8086 0580 574B     		ldr	r3, .L358+24
 8087 0582 0122     		movs	r2, #1
 8088 0584 1A70     		strb	r2, [r3]
2093:main.c        ****                         patchNum = presetNumberToWrite;
 8089              		.loc 1 2093 0
 8090 0586 574B     		ldr	r3, .L358+28
 8091 0588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8092 058a 574B     		ldr	r3, .L358+32
 8093 058c 1A70     		strb	r2, [r3]
2094:main.c        ****                         messageArraySize = valsStart + currentFloat;
 8094              		.loc 1 2094 0
 8095 058e 504B     		ldr	r3, .L358+8
 8096 0590 1B68     		ldr	r3, [r3]
 8097 0592 9AB2     		uxth	r2, r3
 8098 0594 BB8E     		ldrh	r3, [r7, #52]	@ movhi
 8099 0596 1344     		add	r3, r3, r2
 8100 0598 9AB2     		uxth	r2, r3
 8101 059a 544B     		ldr	r3, .L358+36
 8102 059c 1A80     		strh	r2, [r3]	@ movhi
 8103 059e 10E0     		b	.L317
 8104              	.L328:
2095:main.c        ****                     }
2096:main.c        ****                     else
2097:main.c        ****                     {
2098:main.c        ****                         //error state
2099:main.c        ****                         SPI_errors++;
 8105              		.loc 1 2099 0
 8106 05a0 534B     		ldr	r3, .L358+40
 8107 05a2 1B68     		ldr	r3, [r3]
 8108 05a4 0133     		adds	r3, r3, #1
 8109 05a6 524A     		ldr	r2, .L358+40
 8110 05a8 1360     		str	r3, [r2]
2100:main.c        ****                         sysexMessageInProgress = 0;
 8111              		.loc 1 2100 0
 8112 05aa 4C4B     		ldr	r3, .L358+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 182


 8113 05ac 0022     		movs	r2, #0
 8114 05ae 1A70     		strb	r2, [r3]
2101:main.c        ****                         sysexPointer = 0;
 8115              		.loc 1 2101 0
 8116 05b0 504B     		ldr	r3, .L358+44
 8117 05b2 0022     		movs	r2, #0
 8118 05b4 1A60     		str	r2, [r3]
2102:main.c        ****                         sendingMessage = 0;
 8119              		.loc 1 2102 0
 8120 05b6 4A4B     		ldr	r3, .L358+24
 8121 05b8 0022     		movs	r2, #0
 8122 05ba 1A70     		strb	r2, [r3]
2103:main.c        ****                         parseThatMF = 0;
 8123              		.loc 1 2103 0
 8124 05bc 4E4B     		ldr	r3, .L358+48
 8125 05be 0022     		movs	r2, #0
 8126 05c0 1A70     		strb	r2, [r3]
 8127              	.L317:
1989:main.c        ****         {
 8128              		.loc 1 1989 0
 8129 05c2 FB6C     		ldr	r3, [r7, #76]
 8130 05c4 0533     		adds	r3, r3, #5
 8131 05c6 FB64     		str	r3, [r7, #76]
 8132              	.L309:
1989:main.c        ****         {
 8133              		.loc 1 1989 0 is_stmt 0 discriminator 1
 8134 05c8 4A4B     		ldr	r3, .L358+44
 8135 05ca 1B68     		ldr	r3, [r3]
 8136 05cc FA6C     		ldr	r2, [r7, #76]
 8137 05ce 9A42     		cmp	r2, r3
 8138 05d0 FFF4B0AD 		bcc	.L331
 8139 05d4 F0E2     		b	.L332
 8140              	.L302:
 8141              	.LBE42:
2104:main.c        ****                     }
2105:main.c        ****                 }
2106:main.c        ****             }
2107:main.c        ****             
2108:main.c        ****         }
2109:main.c        ****     }
2110:main.c        ****     #if 0
2111:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2112:main.c        ****     {
2113:main.c        ****         
2114:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
2115:main.c        ****         currentFloat = 0;
2116:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2117:main.c        ****         union breakFloat theVal;
2118:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2119:main.c        ****         {
2120:main.c        ****             theVal.u32 = 0;
2121:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2122:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2123:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2124:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2125:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
2126:main.c        ****             testVal = theVal.f;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 183


2127:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2128:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2129:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2130:main.c        ****         }
2131:main.c        ****         
2132:main.c        ****         tuningArray[currentFloat++] = 0xef;
2133:main.c        ****         tuningArray[currentFloat++] = 0xef;
2134:main.c        ****                         
2135:main.c        ****         
2136:main.c        ****         messageArraySize = currentFloat;
2137:main.c        ****                     
2138:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
2139:main.c        ****         {
2140:main.c        ****             //error state
2141:main.c        ****             SPI_errors++;
2142:main.c        ****             sysexMessageInProgress = 0;
2143:main.c        ****             sysexPointer = 0;
2144:main.c        ****             sendingMessage = 0;
2145:main.c        ****             parseThatMF = 0;
2146:main.c        ****         } else 
2147:main.c        ****         {
2148:main.c        ****             sysexMessageInProgress = 0;
2149:main.c        ****             sendingMessage = 2;
2150:main.c        ****         }
2151:main.c        ****     }
2152:main.c        ****     #endif
2153:main.c        ****     
2154:main.c        **** 
2155:main.c        ****     
2156:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 8142              		.loc 1 2156 0 is_stmt 1
 8143 05d6 494B     		ldr	r3, .L358+52
 8144 05d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8145 05da 022B     		cmp	r3, #2
 8146 05dc 40F08281 		bne	.L333
 8147              	.LBB47:
2157:main.c        ****     {
2158:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8148              		.loc 1 2158 0
 8149 05e0 3E4B     		ldr	r3, .L358+20
 8150 05e2 0122     		movs	r2, #1
 8151 05e4 1A70     		strb	r2, [r3]
2159:main.c        ****         currentFloat = 0;
 8152              		.loc 1 2159 0
 8153 05e6 3A4B     		ldr	r3, .L358+8
 8154 05e8 0022     		movs	r2, #0
 8155 05ea 1A60     		str	r2, [r3]
2160:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 8156              		.loc 1 2160 0
 8157 05ec 434B     		ldr	r3, .L358+52
 8158 05ee 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8159 05f0 434B     		ldr	r3, .L358+56
 8160 05f2 1A70     		strb	r2, [r3]
2161:main.c        ****         currentCopedent = copedentNumberToWrite;
 8161              		.loc 1 2161 0
 8162 05f4 424B     		ldr	r3, .L358+56
 8163 05f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 184


 8164 05f8 424B     		ldr	r3, .L358+60
 8165 05fa 1A70     		strb	r2, [r3]
2162:main.c        ****         necks[currentNeck] = currentCopedent;
 8166              		.loc 1 2162 0
 8167 05fc 424B     		ldr	r3, .L358+64
 8168 05fe 1B68     		ldr	r3, [r3]
 8169 0600 404A     		ldr	r2, .L358+60
 8170 0602 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 8171 0604 414A     		ldr	r2, .L358+68
 8172 0606 D154     		strb	r1, [r2, r3]
2163:main.c        **** 
2164:main.c        ****               
2165:main.c        ****         
2166:main.c        ****         union breakFloat theVal;
2167:main.c        ****         uint32_t i = 2;
 8173              		.loc 1 2167 0
 8174 0608 0223     		movs	r3, #2
 8175 060a 3B64     		str	r3, [r7, #64]
2168:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 8176              		.loc 1 2168 0
 8177 060c 1023     		movs	r3, #16
 8178 060e 87F82F30 		strb	r3, [r7, #47]
2169:main.c        ****         for (; i < stoppingPoint; i++)
 8179              		.loc 1 2169 0
 8180 0612 43E0     		b	.L334
 8181              	.L335:
 8182              	.LBB48:
2170:main.c        ****         {
2171:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2172:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 8183              		.loc 1 2172 0 discriminator 2
 8184 0614 394A     		ldr	r2, .L358+52
 8185 0616 3B6C     		ldr	r3, [r7, #64]
 8186 0618 1344     		add	r3, r3, r2
 8187 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8188 061c 03F07F03 		and	r3, r3, #127
 8189 0620 87F82E30 		strb	r3, [r7, #46]
2173:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 8190              		.loc 1 2173 0 discriminator 2
 8191 0624 364B     		ldr	r3, .L358+56
 8192 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8193 0628 1846     		mov	r0, r3
 8194 062a 3B6C     		ldr	r3, [r7, #64]
 8195 062c 9A1E     		subs	r2, r3, #2
 8196 062e 3849     		ldr	r1, .L358+72
 8197 0630 0346     		mov	r3, r0
 8198 0632 DB00     		lsls	r3, r3, #3
 8199 0634 1B1A     		subs	r3, r3, r0
 8200 0636 5B00     		lsls	r3, r3, #1
 8201 0638 0B44     		add	r3, r3, r1
 8202 063a 1344     		add	r3, r3, r2
 8203 063c 97F82E20 		ldrb	r2, [r7, #46]
 8204 0640 1A70     		strb	r2, [r3]
2174:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 8205              		.loc 1 2174 0 discriminator 2
 8206 0642 2F4B     		ldr	r3, .L358+56
 8207 0644 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 185


 8208 0646 9BB2     		uxth	r3, r3
 8209 0648 1A46     		mov	r2, r3	@ movhi
 8210 064a 1201     		lsls	r2, r2, #4
 8211 064c 1A44     		add	r2, r2, r3
 8212 064e 9200     		lsls	r2, r2, #2
 8213 0650 1A44     		add	r2, r2, r3
 8214 0652 5200     		lsls	r2, r2, #1
 8215 0654 1344     		add	r3, r3, r2
 8216 0656 5B00     		lsls	r3, r3, #1
 8217 0658 9AB2     		uxth	r2, r3
 8218 065a 2E4B     		ldr	r3, .L358+76
 8219 065c 1A80     		strh	r2, [r3]	@ movhi
2175:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 8220              		.loc 1 2175 0 discriminator 2
 8221 065e 284B     		ldr	r3, .L358+56
 8222 0660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8223 0662 9BB2     		uxth	r3, r3
 8224 0664 1A46     		mov	r2, r3	@ movhi
 8225 0666 1201     		lsls	r2, r2, #4
 8226 0668 1A44     		add	r2, r2, r3
 8227 066a 9200     		lsls	r2, r2, #2
 8228 066c 1A44     		add	r2, r2, r3
 8229 066e 5200     		lsls	r2, r2, #1
 8230 0670 1344     		add	r3, r3, r2
 8231 0672 5B00     		lsls	r3, r3, #1
 8232 0674 9AB2     		uxth	r2, r3
 8233 0676 3B6C     		ldr	r3, [r7, #64]
 8234 0678 9BB2     		uxth	r3, r3
 8235 067a 1344     		add	r3, r3, r2
 8236 067c 9BB2     		uxth	r3, r3
 8237 067e 023B     		subs	r3, r3, #2
 8238 0680 9AB2     		uxth	r2, r3
 8239 0682 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 8240 0686 1146     		mov	r1, r2
 8241 0688 1846     		mov	r0, r3
 8242 068a FFF7FEFF 		bl	EEPROM_WriteByte
 8243 068e 0346     		mov	r3, r0
 8244 0690 DAB2     		uxtb	r2, r3
 8245 0692 214B     		ldr	r3, .L358+80
 8246 0694 1A70     		strb	r2, [r3]
 8247              	.LBE48:
2169:main.c        ****         {
 8248              		.loc 1 2169 0 discriminator 2
 8249 0696 3B6C     		ldr	r3, [r7, #64]
 8250 0698 0133     		adds	r3, r3, #1
 8251 069a 3B64     		str	r3, [r7, #64]
 8252              	.L334:
2169:main.c        ****         {
 8253              		.loc 1 2169 0 is_stmt 0 discriminator 1
 8254 069c 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 8255 06a0 3B6C     		ldr	r3, [r7, #64]
 8256 06a2 9A42     		cmp	r2, r3
 8257 06a4 B6D8     		bhi	.L335
2176:main.c        ****         }
2177:main.c        ****         
2178:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 8258              		.loc 1 2178 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 186


 8259 06a6 1023     		movs	r3, #16
 8260 06a8 3B64     		str	r3, [r7, #64]
2179:main.c        **** 
2180:main.c        ****  
2181:main.c        ****         while(i < sysexPointer)
 8261              		.loc 1 2181 0
 8262 06aa DCE0     		b	.L336
 8263              	.L341:
 8264              	.LBB49:
2182:main.c        ****         {
2183:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 8265              		.loc 1 2183 0
 8266 06ac 0023     		movs	r3, #0
 8267 06ae FB63     		str	r3, [r7, #60]
 8268 06b0 D5E0     		b	.L337
 8269              	.L340:
 8270              	.LBB50:
2184:main.c        ****             {
2185:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 8271              		.loc 1 2185 0
 8272 06b2 FB6B     		ldr	r3, [r7, #60]
 8273 06b4 9BB2     		uxth	r3, r3
 8274 06b6 1A46     		mov	r2, r3	@ movhi
 8275 06b8 5200     		lsls	r2, r2, #1
 8276 06ba 1344     		add	r3, r3, r2
 8277 06bc DB00     		lsls	r3, r3, #3
 8278 06be BB85     		strh	r3, [r7, #44]	@ movhi
 8279              	.LBB51:
2186:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 8280              		.loc 1 2186 0
 8281 06c0 0023     		movs	r3, #0
 8282 06c2 BB63     		str	r3, [r7, #56]
 8283 06c4 C4E0     		b	.L338
 8284              	.L359:
 8285 06c6 00BF     		.align	2
 8286              	.L358:
 8287 06c8 000020C0 		.word	-1071644672
 8288 06cc 000060C0 		.word	-1067450368
 8289 06d0 00000000 		.word	currentFloat
 8290 06d4 00000000 		.word	presetArray
 8291 06d8 00000000 		.word	presetArraySection
 8292 06dc 00000000 		.word	sysexMessageInProgress
 8293 06e0 00000000 		.word	sendingMessage
 8294 06e4 00000000 		.word	presetNumberToWrite
 8295 06e8 00000000 		.word	patchNum
 8296 06ec 00000000 		.word	messageArraySize
 8297 06f0 00000000 		.word	SPI_errors
 8298 06f4 00000000 		.word	sysexPointer
 8299 06f8 00000000 		.word	parseThatMF
 8300 06fc 00000000 		.word	sysexBuffer
 8301 0700 00000000 		.word	copedentNumberToWrite
 8302 0704 00000000 		.word	currentCopedent
 8303 0708 00000000 		.word	currentNeck
 8304 070c 00000000 		.word	necks
 8305 0710 00000000 		.word	copedentNamesArray
 8306 0714 00000000 		.word	checkBase
 8307 0718 00000000 		.word	checkStatus
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 187


 8308              	.L339:
 8309              	.LBB52:
2187:main.c        ****                 {
2188:main.c        ****                     
2189:main.c        ****                     theVal.u32 = 0;
 8310              		.loc 1 2189 0 discriminator 3
 8311 071c 0023     		movs	r3, #0
 8312 071e FB60     		str	r3, [r7, #12]
2190:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8313              		.loc 1 2190 0 discriminator 3
 8314 0720 FB68     		ldr	r3, [r7, #12]
 8315 0722 6449     		ldr	r1, .L360
 8316 0724 3A6C     		ldr	r2, [r7, #64]
 8317 0726 0A44     		add	r2, r2, r1
 8318 0728 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8319 072a 1207     		lsls	r2, r2, #28
 8320 072c 1343     		orrs	r3, r3, r2
 8321 072e FB60     		str	r3, [r7, #12]
2191:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 8322              		.loc 1 2191 0 discriminator 3
 8323 0730 FB68     		ldr	r3, [r7, #12]
 8324 0732 3A6C     		ldr	r2, [r7, #64]
 8325 0734 0132     		adds	r2, r2, #1
 8326 0736 5F49     		ldr	r1, .L360
 8327 0738 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8328 073a 5205     		lsls	r2, r2, #21
 8329 073c 1343     		orrs	r3, r3, r2
 8330 073e FB60     		str	r3, [r7, #12]
2192:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 8331              		.loc 1 2192 0 discriminator 3
 8332 0740 FB68     		ldr	r3, [r7, #12]
 8333 0742 3A6C     		ldr	r2, [r7, #64]
 8334 0744 0232     		adds	r2, r2, #2
 8335 0746 5B49     		ldr	r1, .L360
 8336 0748 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8337 074a 9203     		lsls	r2, r2, #14
 8338 074c 1343     		orrs	r3, r3, r2
 8339 074e FB60     		str	r3, [r7, #12]
2193:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 8340              		.loc 1 2193 0 discriminator 3
 8341 0750 FB68     		ldr	r3, [r7, #12]
 8342 0752 3A6C     		ldr	r2, [r7, #64]
 8343 0754 0332     		adds	r2, r2, #3
 8344 0756 5749     		ldr	r1, .L360
 8345 0758 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8346 075a D201     		lsls	r2, r2, #7
 8347 075c 1343     		orrs	r3, r3, r2
 8348 075e FB60     		str	r3, [r7, #12]
2194:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 8349              		.loc 1 2194 0 discriminator 3
 8350 0760 FA68     		ldr	r2, [r7, #12]
 8351 0762 3B6C     		ldr	r3, [r7, #64]
 8352 0764 0433     		adds	r3, r3, #4
 8353 0766 5349     		ldr	r1, .L360
 8354 0768 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8355 076a 03F07F03 		and	r3, r3, #127
 8356 076e 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 188


 8357 0770 FB60     		str	r3, [r7, #12]
2195:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 8358              		.loc 1 2195 0 discriminator 3
 8359 0772 514B     		ldr	r3, .L360+4
 8360 0774 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8361 0776 1C46     		mov	r4, r3
 8362 0778 F968     		ldr	r1, [r7, #12]	@ float
 8363 077a 5048     		ldr	r0, .L360+8
 8364 077c FB6B     		ldr	r3, [r7, #60]
 8365 077e 1A46     		mov	r2, r3
 8366 0780 5200     		lsls	r2, r2, #1
 8367 0782 1A44     		add	r2, r2, r3
 8368 0784 9300     		lsls	r3, r2, #2
 8369 0786 1A46     		mov	r2, r3
 8370 0788 2346     		mov	r3, r4
 8371 078a 5B01     		lsls	r3, r3, #5
 8372 078c 2344     		add	r3, r3, r4
 8373 078e 9B00     		lsls	r3, r3, #2
 8374 0790 1A44     		add	r2, r2, r3
 8375 0792 BB6B     		ldr	r3, [r7, #56]
 8376 0794 1344     		add	r3, r3, r2
 8377 0796 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2196:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 8378              		.loc 1 2196 0 discriminator 3
 8379 079a FB68     		ldr	r3, [r7, #12]	@ float
 8380 079c 4FF08741 		mov	r1, #1132462080
 8381 07a0 1846     		mov	r0, r3
 8382 07a2 FFF7FEFF 		bl	__aeabi_fmul
 8383 07a6 0346     		mov	r3, r0
 8384 07a8 4FF08E41 		mov	r1, #1191182336
 8385 07ac 1846     		mov	r0, r3
 8386 07ae FFF7FEFF 		bl	__aeabi_fadd
 8387 07b2 0346     		mov	r3, r0
 8388 07b4 1846     		mov	r0, r3
 8389 07b6 FFF7FEFF 		bl	__aeabi_f2uiz
 8390 07ba 0346     		mov	r3, r0
 8391 07bc 7B85     		strh	r3, [r7, #42]	@ movhi
2197:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 8392              		.loc 1 2197 0 discriminator 3
 8393 07be 7B8D     		ldrh	r3, [r7, #42]
 8394 07c0 1B0A     		lsrs	r3, r3, #8
 8395 07c2 9BB2     		uxth	r3, r3
 8396 07c4 87F82930 		strb	r3, [r7, #41]
2198:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 8397              		.loc 1 2198 0 discriminator 3
 8398 07c8 7B8D     		ldrh	r3, [r7, #42]	@ movhi
 8399 07ca 87F82830 		strb	r3, [r7, #40]
2199:main.c        ****                     
2200:main.c        ****                     
2201:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 8400              		.loc 1 2201 0 discriminator 3
 8401 07ce BB6B     		ldr	r3, [r7, #56]
 8402 07d0 9BB2     		uxth	r3, r3
 8403 07d2 5B00     		lsls	r3, r3, #1
 8404 07d4 FB84     		strh	r3, [r7, #38]	@ movhi
2202:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 8405              		.loc 1 2202 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 189


 8406 07d6 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 8407 07d8 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 8408 07da 1344     		add	r3, r3, r2
 8409 07dc 9AB2     		uxth	r2, r3
 8410 07de 364B     		ldr	r3, .L360+4
 8411 07e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8412 07e2 9BB2     		uxth	r3, r3
 8413 07e4 1946     		mov	r1, r3	@ movhi
 8414 07e6 0901     		lsls	r1, r1, #4
 8415 07e8 1944     		add	r1, r1, r3
 8416 07ea 8900     		lsls	r1, r1, #2
 8417 07ec 1944     		add	r1, r1, r3
 8418 07ee 4900     		lsls	r1, r1, #1
 8419 07f0 0B44     		add	r3, r3, r1
 8420 07f2 5B00     		lsls	r3, r3, #1
 8421 07f4 9BB2     		uxth	r3, r3
 8422 07f6 1344     		add	r3, r3, r2
 8423 07f8 9BB2     		uxth	r3, r3
 8424 07fa 0E33     		adds	r3, r3, #14
 8425 07fc 9AB2     		uxth	r2, r3
 8426 07fe 304B     		ldr	r3, .L360+12
 8427 0800 1A80     		strh	r2, [r3]	@ movhi
2203:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 8428              		.loc 1 2203 0 discriminator 3
 8429 0802 2F4B     		ldr	r3, .L360+12
 8430 0804 1B88     		ldrh	r3, [r3]	@ movhi
 8431 0806 9AB2     		uxth	r2, r3
 8432 0808 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 8433 080c 1146     		mov	r1, r2
 8434 080e 1846     		mov	r0, r3
 8435 0810 FFF7FEFF 		bl	EEPROM_WriteByte
 8436 0814 0346     		mov	r3, r0
 8437 0816 DAB2     		uxtb	r2, r3
 8438 0818 2A4B     		ldr	r3, .L360+16
 8439 081a 1A70     		strb	r2, [r3]
2204:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 8440              		.loc 1 2204 0 discriminator 3
 8441 081c 284B     		ldr	r3, .L360+12
 8442 081e 1B88     		ldrh	r3, [r3]	@ movhi
 8443 0820 9BB2     		uxth	r3, r3
 8444 0822 0133     		adds	r3, r3, #1
 8445 0824 9AB2     		uxth	r2, r3
 8446 0826 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 8447 082a 1146     		mov	r1, r2
 8448 082c 1846     		mov	r0, r3
 8449 082e FFF7FEFF 		bl	EEPROM_WriteByte
 8450 0832 0346     		mov	r3, r0
 8451 0834 DAB2     		uxtb	r2, r3
 8452 0836 234B     		ldr	r3, .L360+16
 8453 0838 1A70     		strb	r2, [r3]
2205:main.c        ****                     currentFloat++;
 8454              		.loc 1 2205 0 discriminator 3
 8455 083a 234B     		ldr	r3, .L360+20
 8456 083c 1B68     		ldr	r3, [r3]
 8457 083e 0133     		adds	r3, r3, #1
 8458 0840 214A     		ldr	r2, .L360+20
 8459 0842 1360     		str	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 190


2206:main.c        ****                     i = i+5;
 8460              		.loc 1 2206 0 discriminator 3
 8461 0844 3B6C     		ldr	r3, [r7, #64]
 8462 0846 0533     		adds	r3, r3, #5
 8463 0848 3B64     		str	r3, [r7, #64]
 8464              	.LBE52:
2186:main.c        ****                 {
 8465              		.loc 1 2186 0 discriminator 3
 8466 084a BB6B     		ldr	r3, [r7, #56]
 8467 084c 0133     		adds	r3, r3, #1
 8468 084e BB63     		str	r3, [r7, #56]
 8469              	.L338:
2186:main.c        ****                 {
 8470              		.loc 1 2186 0 is_stmt 0 discriminator 1
 8471 0850 BB6B     		ldr	r3, [r7, #56]
 8472 0852 0B2B     		cmp	r3, #11
 8473 0854 7FF662AF 		bls	.L339
 8474              	.LBE51:
 8475              	.LBE50:
2183:main.c        ****             {
 8476              		.loc 1 2183 0 is_stmt 1 discriminator 2
 8477 0858 FB6B     		ldr	r3, [r7, #60]
 8478 085a 0133     		adds	r3, r3, #1
 8479 085c FB63     		str	r3, [r7, #60]
 8480              	.L337:
2183:main.c        ****             {
 8481              		.loc 1 2183 0 is_stmt 0 discriminator 1
 8482 085e FB6B     		ldr	r3, [r7, #60]
 8483 0860 0A2B     		cmp	r3, #10
 8484 0862 7FF626AF 		bls	.L340
 8485              	.L336:
 8486              	.LBE49:
2181:main.c        ****         {
 8487              		.loc 1 2181 0 is_stmt 1
 8488 0866 194B     		ldr	r3, .L360+24
 8489 0868 1B68     		ldr	r3, [r3]
 8490 086a 3A6C     		ldr	r2, [r7, #64]
 8491 086c 9A42     		cmp	r2, r3
 8492 086e FFF41DAF 		bcc	.L341
2207:main.c        ****                 }
2208:main.c        ****                 
2209:main.c        ****             }
2210:main.c        ****         }
2211:main.c        ****                         
2212:main.c        ****         
2213:main.c        ****         messageArraySize = currentFloat;
 8493              		.loc 1 2213 0
 8494 0872 154B     		ldr	r3, .L360+20
 8495 0874 1B68     		ldr	r3, [r3]
 8496 0876 9AB2     		uxth	r2, r3
 8497 0878 154B     		ldr	r3, .L360+28
 8498 087a 1A80     		strh	r2, [r3]	@ movhi
2214:main.c        ****                     
2215:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 8499              		.loc 1 2215 0
 8500 087c 144B     		ldr	r3, .L360+28
 8501 087e 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 191


 8502 0880 842B     		cmp	r3, #132
 8503 0882 11D0     		beq	.L342
2216:main.c        ****         {
2217:main.c        ****             //error state
2218:main.c        ****             SPI_errors++;
 8504              		.loc 1 2218 0
 8505 0884 134B     		ldr	r3, .L360+32
 8506 0886 1B68     		ldr	r3, [r3]
 8507 0888 0133     		adds	r3, r3, #1
 8508 088a 124A     		ldr	r2, .L360+32
 8509 088c 1360     		str	r3, [r2]
2219:main.c        ****             sysexMessageInProgress = 0;
 8510              		.loc 1 2219 0
 8511 088e 124B     		ldr	r3, .L360+36
 8512 0890 0022     		movs	r2, #0
 8513 0892 1A70     		strb	r2, [r3]
2220:main.c        ****             sysexPointer = 0;
 8514              		.loc 1 2220 0
 8515 0894 0D4B     		ldr	r3, .L360+24
 8516 0896 0022     		movs	r2, #0
 8517 0898 1A60     		str	r2, [r3]
2221:main.c        ****             sendingMessage = 0;
 8518              		.loc 1 2221 0
 8519 089a 104B     		ldr	r3, .L360+40
 8520 089c 0022     		movs	r2, #0
 8521 089e 1A70     		strb	r2, [r3]
2222:main.c        ****             parseThatMF = 0;
 8522              		.loc 1 2222 0
 8523 08a0 0F4B     		ldr	r3, .L360+44
 8524 08a2 0022     		movs	r2, #0
 8525 08a4 1A70     		strb	r2, [r3]
 8526 08a6 87E1     		b	.L332
 8527              	.L342:
2223:main.c        ****         } 
2224:main.c        ****         else 
2225:main.c        ****         {
2226:main.c        ****             sysexMessageInProgress = 0;
 8528              		.loc 1 2226 0
 8529 08a8 0B4B     		ldr	r3, .L360+36
 8530 08aa 0022     		movs	r2, #0
 8531 08ac 1A70     		strb	r2, [r3]
2227:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2228:main.c        ****             
2229:main.c        ****             displayCurrentPresetNameAndCopedent();
 8532              		.loc 1 2229 0
 8533 08ae FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 8534 08b2 81E1     		b	.L332
 8535              	.L361:
 8536              		.align	2
 8537              	.L360:
 8538 08b4 00000000 		.word	sysexBuffer
 8539 08b8 00000000 		.word	copedentNumberToWrite
 8540 08bc 00000000 		.word	copedent
 8541 08c0 00000000 		.word	checkBase
 8542 08c4 00000000 		.word	checkStatus
 8543 08c8 00000000 		.word	currentFloat
 8544 08cc 00000000 		.word	sysexPointer
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 192


 8545 08d0 00000000 		.word	messageArraySize
 8546 08d4 00000000 		.word	SPI_errors
 8547 08d8 00000000 		.word	sysexMessageInProgress
 8548 08dc 00000000 		.word	sendingMessage
 8549 08e0 00000000 		.word	parseThatMF
 8550              	.L333:
 8551              	.LBE47:
2230:main.c        ****         }
2231:main.c        ****     }
2232:main.c        ****     
2233:main.c        ****     
2234:main.c        ****     else if (sysexBuffer[0] == 3) //it's a real-time parameter change
 8552              		.loc 1 2234 0
 8553 08e4 9F4B     		ldr	r3, .L362
 8554 08e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8555 08e8 032B     		cmp	r3, #3
 8556 08ea 40F08B80 		bne	.L344
 8557              	.LBB53:
2235:main.c        ****     {
2236:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8558              		.loc 1 2236 0
 8559 08ee 9E4B     		ldr	r3, .L362+4
 8560 08f0 0122     		movs	r2, #1
 8561 08f2 1A70     		strb	r2, [r3]
2237:main.c        ****         union breakFloat theVal;
2238:main.c        ****         uint32_t i = 2;
 8562              		.loc 1 2238 0
 8563 08f4 0223     		movs	r3, #2
 8564 08f6 3B62     		str	r3, [r7, #32]
2239:main.c        ****         
2240:main.c        ****         //get the parameter ID
2241:main.c        ****         theVal.u32 = 0;
 8565              		.loc 1 2241 0
 8566 08f8 0023     		movs	r3, #0
 8567 08fa BB60     		str	r3, [r7, #8]
2242:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8568              		.loc 1 2242 0
 8569 08fc BB68     		ldr	r3, [r7, #8]
 8570 08fe 9949     		ldr	r1, .L362
 8571 0900 3A6A     		ldr	r2, [r7, #32]
 8572 0902 0A44     		add	r2, r2, r1
 8573 0904 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8574 0906 1207     		lsls	r2, r2, #28
 8575 0908 1343     		orrs	r3, r3, r2
 8576 090a BB60     		str	r3, [r7, #8]
2243:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8577              		.loc 1 2243 0
 8578 090c BB68     		ldr	r3, [r7, #8]
 8579 090e 3A6A     		ldr	r2, [r7, #32]
 8580 0910 0132     		adds	r2, r2, #1
 8581 0912 9449     		ldr	r1, .L362
 8582 0914 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8583 0916 5205     		lsls	r2, r2, #21
 8584 0918 1343     		orrs	r3, r3, r2
 8585 091a BB60     		str	r3, [r7, #8]
2244:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8586              		.loc 1 2244 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 193


 8587 091c BB68     		ldr	r3, [r7, #8]
 8588 091e 3A6A     		ldr	r2, [r7, #32]
 8589 0920 0232     		adds	r2, r2, #2
 8590 0922 9049     		ldr	r1, .L362
 8591 0924 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8592 0926 9203     		lsls	r2, r2, #14
 8593 0928 1343     		orrs	r3, r3, r2
 8594 092a BB60     		str	r3, [r7, #8]
2245:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8595              		.loc 1 2245 0
 8596 092c BB68     		ldr	r3, [r7, #8]
 8597 092e 3A6A     		ldr	r2, [r7, #32]
 8598 0930 0332     		adds	r2, r2, #3
 8599 0932 8C49     		ldr	r1, .L362
 8600 0934 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8601 0936 D201     		lsls	r2, r2, #7
 8602 0938 1343     		orrs	r3, r3, r2
 8603 093a BB60     		str	r3, [r7, #8]
2246:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8604              		.loc 1 2246 0
 8605 093c BA68     		ldr	r2, [r7, #8]
 8606 093e 3B6A     		ldr	r3, [r7, #32]
 8607 0940 0433     		adds	r3, r3, #4
 8608 0942 8849     		ldr	r1, .L362
 8609 0944 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8610 0946 03F07F03 		and	r3, r3, #127
 8611 094a 1343     		orrs	r3, r3, r2
 8612 094c BB60     		str	r3, [r7, #8]
2247:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 8613              		.loc 1 2247 0
 8614 094e BB68     		ldr	r3, [r7, #8]	@ float
 8615 0950 1846     		mov	r0, r3
 8616 0952 FFF7FEFF 		bl	roundf
 8617 0956 0346     		mov	r3, r0
 8618 0958 1846     		mov	r0, r3
 8619 095a FFF7FEFF 		bl	__aeabi_f2uiz
 8620 095e 0346     		mov	r3, r0
 8621 0960 FB83     		strh	r3, [r7, #30]	@ movhi
2248:main.c        ****         singleParamToUpdateHigh = (roundedIndex << 8);
 8622              		.loc 1 2248 0
 8623 0962 824B     		ldr	r3, .L362+8
 8624 0964 0022     		movs	r2, #0
 8625 0966 1A70     		strb	r2, [r3]
2249:main.c        ****         singleParamToUpdateLow = roundedIndex & 0xff;
 8626              		.loc 1 2249 0
 8627 0968 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 8628 096a DAB2     		uxtb	r2, r3
 8629 096c 804B     		ldr	r3, .L362+12
 8630 096e 1A70     		strb	r2, [r3]
2250:main.c        ****         
2251:main.c        ****         i = i+5;
 8631              		.loc 1 2251 0
 8632 0970 3B6A     		ldr	r3, [r7, #32]
 8633 0972 0533     		adds	r3, r3, #5
 8634 0974 3B62     		str	r3, [r7, #32]
2252:main.c        ****         
2253:main.c        ****         //get the parameter value
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 194


2254:main.c        ****         theVal.u32 = 0;
 8635              		.loc 1 2254 0
 8636 0976 0023     		movs	r3, #0
 8637 0978 BB60     		str	r3, [r7, #8]
2255:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8638              		.loc 1 2255 0
 8639 097a BB68     		ldr	r3, [r7, #8]
 8640 097c 7949     		ldr	r1, .L362
 8641 097e 3A6A     		ldr	r2, [r7, #32]
 8642 0980 0A44     		add	r2, r2, r1
 8643 0982 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8644 0984 1207     		lsls	r2, r2, #28
 8645 0986 1343     		orrs	r3, r3, r2
 8646 0988 BB60     		str	r3, [r7, #8]
2256:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8647              		.loc 1 2256 0
 8648 098a BB68     		ldr	r3, [r7, #8]
 8649 098c 3A6A     		ldr	r2, [r7, #32]
 8650 098e 0132     		adds	r2, r2, #1
 8651 0990 7449     		ldr	r1, .L362
 8652 0992 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8653 0994 5205     		lsls	r2, r2, #21
 8654 0996 1343     		orrs	r3, r3, r2
 8655 0998 BB60     		str	r3, [r7, #8]
2257:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8656              		.loc 1 2257 0
 8657 099a BB68     		ldr	r3, [r7, #8]
 8658 099c 3A6A     		ldr	r2, [r7, #32]
 8659 099e 0232     		adds	r2, r2, #2
 8660 09a0 7049     		ldr	r1, .L362
 8661 09a2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8662 09a4 9203     		lsls	r2, r2, #14
 8663 09a6 1343     		orrs	r3, r3, r2
 8664 09a8 BB60     		str	r3, [r7, #8]
2258:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8665              		.loc 1 2258 0
 8666 09aa BB68     		ldr	r3, [r7, #8]
 8667 09ac 3A6A     		ldr	r2, [r7, #32]
 8668 09ae 0332     		adds	r2, r2, #3
 8669 09b0 6C49     		ldr	r1, .L362
 8670 09b2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8671 09b4 D201     		lsls	r2, r2, #7
 8672 09b6 1343     		orrs	r3, r3, r2
 8673 09b8 BB60     		str	r3, [r7, #8]
2259:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8674              		.loc 1 2259 0
 8675 09ba BA68     		ldr	r2, [r7, #8]
 8676 09bc 3B6A     		ldr	r3, [r7, #32]
 8677 09be 0433     		adds	r3, r3, #4
 8678 09c0 6849     		ldr	r1, .L362
 8679 09c2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8680 09c4 03F07F03 		and	r3, r3, #127
 8681 09c8 1343     		orrs	r3, r3, r2
 8682 09ca BB60     		str	r3, [r7, #8]
2260:main.c        ****         
2261:main.c        ****         uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 8683              		.loc 1 2261 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 195


 8684 09cc BB68     		ldr	r3, [r7, #8]	@ float
 8685 09ce 6949     		ldr	r1, .L362+16
 8686 09d0 1846     		mov	r0, r3
 8687 09d2 FFF7FEFF 		bl	__aeabi_fmul
 8688 09d6 0346     		mov	r3, r0
 8689 09d8 1846     		mov	r0, r3
 8690 09da FFF7FEFF 		bl	__aeabi_f2uiz
 8691 09de 0346     		mov	r3, r0
 8692 09e0 BB83     		strh	r3, [r7, #28]	@ movhi
2262:main.c        ****         singleParamValueHigh = intVal >> 8;
 8693              		.loc 1 2262 0
 8694 09e2 BB8B     		ldrh	r3, [r7, #28]
 8695 09e4 1B0A     		lsrs	r3, r3, #8
 8696 09e6 9BB2     		uxth	r3, r3
 8697 09e8 DAB2     		uxtb	r2, r3
 8698 09ea 634B     		ldr	r3, .L362+20
 8699 09ec 1A70     		strb	r2, [r3]
2263:main.c        ****         singleParamValueLow = intVal & 0xff;
 8700              		.loc 1 2263 0
 8701 09ee BB8B     		ldrh	r3, [r7, #28]	@ movhi
 8702 09f0 DAB2     		uxtb	r2, r3
 8703 09f2 624B     		ldr	r3, .L362+24
 8704 09f4 1A70     		strb	r2, [r3]
2264:main.c        ****         
2265:main.c        ****         sysexMessageInProgress = 0;
 8705              		.loc 1 2265 0
 8706 09f6 5C4B     		ldr	r3, .L362+4
 8707 09f8 0022     		movs	r2, #0
 8708 09fa 1A70     		strb	r2, [r3]
2266:main.c        ****         sendSingleParamUpdate = 1;
 8709              		.loc 1 2266 0
 8710 09fc 604B     		ldr	r3, .L362+28
 8711 09fe 0122     		movs	r2, #1
 8712 0a00 1A70     		strb	r2, [r3]
 8713              	.LBE53:
 8714 0a02 D9E0     		b	.L332
 8715              	.L344:
2267:main.c        ****     }
2268:main.c        ****     
2269:main.c        ****      else if (sysexBuffer[0] == 4) //it's a real-time mapping change
 8716              		.loc 1 2269 0
 8717 0a04 574B     		ldr	r3, .L362
 8718 0a06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8719 0a08 042B     		cmp	r3, #4
 8720 0a0a 40F0D580 		bne	.L332
 8721              	.LBB54:
2270:main.c        ****     {
2271:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8722              		.loc 1 2271 0
 8723 0a0e 564B     		ldr	r3, .L362+4
 8724 0a10 0122     		movs	r2, #1
 8725 0a12 1A70     		strb	r2, [r3]
2272:main.c        ****         union breakFloat theVal;
2273:main.c        ****         uint32_t i = 2;
 8726              		.loc 1 2273 0
 8727 0a14 0223     		movs	r3, #2
 8728 0a16 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 196


2274:main.c        ****         
2275:main.c        ****         //get the destination number
2276:main.c        ****         theVal.u32 = 0;
 8729              		.loc 1 2276 0
 8730 0a18 0023     		movs	r3, #0
 8731 0a1a 7B60     		str	r3, [r7, #4]
2277:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8732              		.loc 1 2277 0
 8733 0a1c 7B68     		ldr	r3, [r7, #4]
 8734 0a1e 5149     		ldr	r1, .L362
 8735 0a20 BA69     		ldr	r2, [r7, #24]
 8736 0a22 0A44     		add	r2, r2, r1
 8737 0a24 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8738 0a26 1207     		lsls	r2, r2, #28
 8739 0a28 1343     		orrs	r3, r3, r2
 8740 0a2a 7B60     		str	r3, [r7, #4]
2278:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8741              		.loc 1 2278 0
 8742 0a2c 7B68     		ldr	r3, [r7, #4]
 8743 0a2e BA69     		ldr	r2, [r7, #24]
 8744 0a30 0132     		adds	r2, r2, #1
 8745 0a32 4C49     		ldr	r1, .L362
 8746 0a34 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8747 0a36 5205     		lsls	r2, r2, #21
 8748 0a38 1343     		orrs	r3, r3, r2
 8749 0a3a 7B60     		str	r3, [r7, #4]
2279:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8750              		.loc 1 2279 0
 8751 0a3c 7B68     		ldr	r3, [r7, #4]
 8752 0a3e BA69     		ldr	r2, [r7, #24]
 8753 0a40 0232     		adds	r2, r2, #2
 8754 0a42 4849     		ldr	r1, .L362
 8755 0a44 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8756 0a46 9203     		lsls	r2, r2, #14
 8757 0a48 1343     		orrs	r3, r3, r2
 8758 0a4a 7B60     		str	r3, [r7, #4]
2280:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8759              		.loc 1 2280 0
 8760 0a4c 7B68     		ldr	r3, [r7, #4]
 8761 0a4e BA69     		ldr	r2, [r7, #24]
 8762 0a50 0332     		adds	r2, r2, #3
 8763 0a52 4449     		ldr	r1, .L362
 8764 0a54 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8765 0a56 D201     		lsls	r2, r2, #7
 8766 0a58 1343     		orrs	r3, r3, r2
 8767 0a5a 7B60     		str	r3, [r7, #4]
2281:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8768              		.loc 1 2281 0
 8769 0a5c 7A68     		ldr	r2, [r7, #4]
 8770 0a5e BB69     		ldr	r3, [r7, #24]
 8771 0a60 0433     		adds	r3, r3, #4
 8772 0a62 4049     		ldr	r1, .L362
 8773 0a64 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8774 0a66 03F07F03 		and	r3, r3, #127
 8775 0a6a 1343     		orrs	r3, r3, r2
 8776 0a6c 7B60     		str	r3, [r7, #4]
2282:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 197


 8777              		.loc 1 2282 0
 8778 0a6e 7B68     		ldr	r3, [r7, #4]	@ float
 8779 0a70 1846     		mov	r0, r3
 8780 0a72 FFF7FEFF 		bl	roundf
 8781 0a76 0346     		mov	r3, r0
 8782 0a78 1846     		mov	r0, r3
 8783 0a7a FFF7FEFF 		bl	__aeabi_f2uiz
 8784 0a7e 0346     		mov	r3, r0
 8785 0a80 FB82     		strh	r3, [r7, #22]	@ movhi
2283:main.c        ****         mappingArray[0] = (roundedIndex << 8);
 8786              		.loc 1 2283 0
 8787 0a82 404B     		ldr	r3, .L362+32
 8788 0a84 0022     		movs	r2, #0
 8789 0a86 1A70     		strb	r2, [r3]
2284:main.c        ****         mappingArray[1] = roundedIndex & 0xff;
 8790              		.loc 1 2284 0
 8791 0a88 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 8792 0a8a DAB2     		uxtb	r2, r3
 8793 0a8c 3D4B     		ldr	r3, .L362+32
 8794 0a8e 5A70     		strb	r2, [r3, #1]
2285:main.c        ****         
2286:main.c        ****         
2287:main.c        ****         mappingArray[2] = sysexBuffer[i+5]; //slot id
 8795              		.loc 1 2287 0
 8796 0a90 BB69     		ldr	r3, [r7, #24]
 8797 0a92 0533     		adds	r3, r3, #5
 8798 0a94 334A     		ldr	r2, .L362
 8799 0a96 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8800 0a98 3A4B     		ldr	r3, .L362+32
 8801 0a9a 9A70     		strb	r2, [r3, #2]
2288:main.c        ****         mappingArray[3] = sysexBuffer[i+6]; //mapping change type
 8802              		.loc 1 2288 0
 8803 0a9c BB69     		ldr	r3, [r7, #24]
 8804 0a9e 0633     		adds	r3, r3, #6
 8805 0aa0 304A     		ldr	r2, .L362
 8806 0aa2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8807 0aa4 374B     		ldr	r3, .L362+32
 8808 0aa6 DA70     		strb	r2, [r3, #3]
2289:main.c        ****         
2290:main.c        ****         i = i+7;
 8809              		.loc 1 2290 0
 8810 0aa8 BB69     		ldr	r3, [r7, #24]
 8811 0aaa 0733     		adds	r3, r3, #7
 8812 0aac BB61     		str	r3, [r7, #24]
2291:main.c        ****         
2292:main.c        ****         //get the parameter value
2293:main.c        ****         theVal.u32 = 0;
 8813              		.loc 1 2293 0
 8814 0aae 0023     		movs	r3, #0
 8815 0ab0 7B60     		str	r3, [r7, #4]
2294:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8816              		.loc 1 2294 0
 8817 0ab2 7B68     		ldr	r3, [r7, #4]
 8818 0ab4 2B49     		ldr	r1, .L362
 8819 0ab6 BA69     		ldr	r2, [r7, #24]
 8820 0ab8 0A44     		add	r2, r2, r1
 8821 0aba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 198


 8822 0abc 1207     		lsls	r2, r2, #28
 8823 0abe 1343     		orrs	r3, r3, r2
 8824 0ac0 7B60     		str	r3, [r7, #4]
2295:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8825              		.loc 1 2295 0
 8826 0ac2 7B68     		ldr	r3, [r7, #4]
 8827 0ac4 BA69     		ldr	r2, [r7, #24]
 8828 0ac6 0132     		adds	r2, r2, #1
 8829 0ac8 2649     		ldr	r1, .L362
 8830 0aca 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8831 0acc 5205     		lsls	r2, r2, #21
 8832 0ace 1343     		orrs	r3, r3, r2
 8833 0ad0 7B60     		str	r3, [r7, #4]
2296:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8834              		.loc 1 2296 0
 8835 0ad2 7B68     		ldr	r3, [r7, #4]
 8836 0ad4 BA69     		ldr	r2, [r7, #24]
 8837 0ad6 0232     		adds	r2, r2, #2
 8838 0ad8 2249     		ldr	r1, .L362
 8839 0ada 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8840 0adc 9203     		lsls	r2, r2, #14
 8841 0ade 1343     		orrs	r3, r3, r2
 8842 0ae0 7B60     		str	r3, [r7, #4]
2297:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8843              		.loc 1 2297 0
 8844 0ae2 7B68     		ldr	r3, [r7, #4]
 8845 0ae4 BA69     		ldr	r2, [r7, #24]
 8846 0ae6 0332     		adds	r2, r2, #3
 8847 0ae8 1E49     		ldr	r1, .L362
 8848 0aea 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8849 0aec D201     		lsls	r2, r2, #7
 8850 0aee 1343     		orrs	r3, r3, r2
 8851 0af0 7B60     		str	r3, [r7, #4]
2298:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8852              		.loc 1 2298 0
 8853 0af2 7A68     		ldr	r2, [r7, #4]
 8854 0af4 BB69     		ldr	r3, [r7, #24]
 8855 0af6 0433     		adds	r3, r3, #4
 8856 0af8 1A49     		ldr	r1, .L362
 8857 0afa CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8858 0afc 03F07F03 		and	r3, r3, #127
 8859 0b00 1343     		orrs	r3, r3, r2
 8860 0b02 7B60     		str	r3, [r7, #4]
2299:main.c        ****         if (mappingArray[3] == 0) // source id
 8861              		.loc 1 2299 0
 8862 0b04 1F4B     		ldr	r3, .L362+32
 8863 0b06 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8864 0b08 002B     		cmp	r3, #0
 8865 0b0a 10D1     		bne	.L345
2300:main.c        ****         {
2301:main.c        ****             mappingArray[4] = 0;
 8866              		.loc 1 2301 0
 8867 0b0c 1D4B     		ldr	r3, .L362+32
 8868 0b0e 0022     		movs	r2, #0
 8869 0b10 1A71     		strb	r2, [r3, #4]
2302:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 8870              		.loc 1 2302 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 199


 8871 0b12 7B68     		ldr	r3, [r7, #4]	@ float
 8872 0b14 1846     		mov	r0, r3
 8873 0b16 FFF7FEFF 		bl	roundf
 8874 0b1a 0346     		mov	r3, r0
 8875 0b1c 1846     		mov	r0, r3
 8876 0b1e FFF7FEFF 		bl	__aeabi_f2iz
 8877 0b22 0346     		mov	r3, r0
 8878 0b24 1BB2     		sxth	r3, r3
 8879 0b26 DAB2     		uxtb	r2, r3
 8880 0b28 164B     		ldr	r3, .L362+32
 8881 0b2a 5A71     		strb	r2, [r3, #5]
 8882 0b2c 3EE0     		b	.L346
 8883              	.L345:
2303:main.c        ****         }
2304:main.c        ****         else if (mappingArray[3] == 1) // amount
 8884              		.loc 1 2304 0
 8885 0b2e 154B     		ldr	r3, .L362+32
 8886 0b30 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8887 0b32 012B     		cmp	r3, #1
 8888 0b34 2AD1     		bne	.L347
 8889              	.LBB55:
2305:main.c        ****         {
2306:main.c        ****             int16_t intVal = (int16_t)(theVal.f * 32767.0f);
 8890              		.loc 1 2306 0
 8891 0b36 7B68     		ldr	r3, [r7, #4]	@ float
 8892 0b38 1349     		ldr	r1, .L362+36
 8893 0b3a 1846     		mov	r0, r3
 8894 0b3c FFF7FEFF 		bl	__aeabi_fmul
 8895 0b40 0346     		mov	r3, r0
 8896 0b42 1846     		mov	r0, r3
 8897 0b44 FFF7FEFF 		bl	__aeabi_f2iz
 8898 0b48 0346     		mov	r3, r0
 8899 0b4a BB82     		strh	r3, [r7, #20]	@ movhi
2307:main.c        ****             mappingArray[4] = intVal >> 8;
 8900              		.loc 1 2307 0
 8901 0b4c B7F91430 		ldrsh	r3, [r7, #20]
 8902 0b50 1B12     		asrs	r3, r3, #8
 8903 0b52 1BB2     		sxth	r3, r3
 8904 0b54 DAB2     		uxtb	r2, r3
 8905 0b56 0B4B     		ldr	r3, .L362+32
 8906 0b58 1A71     		strb	r2, [r3, #4]
2308:main.c        ****             mappingArray[5] = intVal & 0xff;
 8907              		.loc 1 2308 0
 8908 0b5a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 8909 0b5c DAB2     		uxtb	r2, r3
 8910 0b5e 094B     		ldr	r3, .L362+32
 8911 0b60 5A71     		strb	r2, [r3, #5]
 8912              	.LBE55:
 8913 0b62 23E0     		b	.L346
 8914              	.L363:
 8915              		.align	2
 8916              	.L362:
 8917 0b64 00000000 		.word	sysexBuffer
 8918 0b68 00000000 		.word	sysexMessageInProgress
 8919 0b6c 00000000 		.word	singleParamToUpdateHigh
 8920 0b70 00000000 		.word	singleParamToUpdateLow
 8921 0b74 00FF7F47 		.word	1199570688
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 200


 8922 0b78 00000000 		.word	singleParamValueHigh
 8923 0b7c 00000000 		.word	singleParamValueLow
 8924 0b80 00000000 		.word	sendSingleParamUpdate
 8925 0b84 00000000 		.word	mappingArray
 8926 0b88 00FEFF46 		.word	1191181824
 8927              	.L347:
2309:main.c        ****         }
2310:main.c        ****         else // scalar source
2311:main.c        ****         {
2312:main.c        ****             mappingArray[4] = 0;
 8928              		.loc 1 2312 0
 8929 0b8c 114B     		ldr	r3, .L364
 8930 0b8e 0022     		movs	r2, #0
 8931 0b90 1A71     		strb	r2, [r3, #4]
2313:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 8932              		.loc 1 2313 0
 8933 0b92 7B68     		ldr	r3, [r7, #4]	@ float
 8934 0b94 1846     		mov	r0, r3
 8935 0b96 FFF7FEFF 		bl	roundf
 8936 0b9a 0346     		mov	r3, r0
 8937 0b9c 1846     		mov	r0, r3
 8938 0b9e FFF7FEFF 		bl	__aeabi_f2iz
 8939 0ba2 0346     		mov	r3, r0
 8940 0ba4 1BB2     		sxth	r3, r3
 8941 0ba6 DAB2     		uxtb	r2, r3
 8942 0ba8 0A4B     		ldr	r3, .L364
 8943 0baa 5A71     		strb	r2, [r3, #5]
 8944              	.L346:
2314:main.c        ****         }
2315:main.c        ****         
2316:main.c        ****         
2317:main.c        ****         sysexMessageInProgress = 0;
 8945              		.loc 1 2317 0
 8946 0bac 0A4B     		ldr	r3, .L364+4
 8947 0bae 0022     		movs	r2, #0
 8948 0bb0 1A70     		strb	r2, [r3]
2318:main.c        ****         sendMappingChangeUpdate = 1;
 8949              		.loc 1 2318 0
 8950 0bb2 0A4B     		ldr	r3, .L364+8
 8951 0bb4 0122     		movs	r2, #1
 8952 0bb6 1A70     		strb	r2, [r3]
 8953              	.L332:
 8954              	.LBE54:
2319:main.c        ****     }
2320:main.c        **** 
2321:main.c        ****     parsingSysex = 0;
 8955              		.loc 1 2321 0
 8956 0bb8 094B     		ldr	r3, .L364+12
 8957 0bba 0022     		movs	r2, #0
 8958 0bbc 1A70     		strb	r2, [r3]
2322:main.c        ****     sysexPointer = 0;
 8959              		.loc 1 2322 0
 8960 0bbe 094B     		ldr	r3, .L364+16
 8961 0bc0 0022     		movs	r2, #0
 8962 0bc2 1A60     		str	r2, [r3]
2323:main.c        ****     parseThatMF = 0;
 8963              		.loc 1 2323 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 201


 8964 0bc4 084B     		ldr	r3, .L364+20
 8965 0bc6 0022     		movs	r2, #0
 8966 0bc8 1A70     		strb	r2, [r3]
2324:main.c        **** }
 8967              		.loc 1 2324 0
 8968 0bca 00BF     		nop
 8969 0bcc 5437     		adds	r7, r7, #84
 8970              		.cfi_def_cfa_offset 12
 8971 0bce BD46     		mov	sp, r7
 8972              		.cfi_def_cfa_register 13
 8973              		@ sp needed
 8974 0bd0 90BD     		pop	{r4, r7, pc}
 8975              	.L365:
 8976 0bd2 00BF     		.align	2
 8977              	.L364:
 8978 0bd4 00000000 		.word	mappingArray
 8979 0bd8 00000000 		.word	sysexMessageInProgress
 8980 0bdc 00000000 		.word	sendMappingChangeUpdate
 8981 0be0 00000000 		.word	parsingSysex
 8982 0be4 00000000 		.word	sysexPointer
 8983 0be8 00000000 		.word	parseThatMF
 8984              		.cfi_endproc
 8985              	.LFE92:
 8986              		.size	parseSysex, .-parseSysex
 8987              		.comm	tempMIDI,4,4
 8988              		.global	firstSysex
 8989              		.bss
 8990              		.type	firstSysex, %object
 8991              		.size	firstSysex, 1
 8992              	firstSysex:
 8993 0130 00       		.space	1
 8994              		.global	sysexPointerMask
 8995              		.section	.rodata
 8996              		.align	1
 8997              		.type	sysexPointerMask, %object
 8998              		.size	sysexPointerMask, 2
 8999              	sysexPointerMask:
 9000 0428 FF07     		.short	2047
 9001              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 9002              		.align	2
 9003              		.global	USB_callbackLocalMidiEvent
 9004              		.thumb
 9005              		.thumb_func
 9006              		.type	USB_callbackLocalMidiEvent, %function
 9007              	USB_callbackLocalMidiEvent:
 9008              	.LFB93:
2325:main.c        **** 
2326:main.c        **** volatile uint8_t tempMIDI[4];
2327:main.c        **** volatile uint8_t firstSysex = 0;
2328:main.c        **** const uint16_t sysexPointerMask = 2047;
2329:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2330:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2331:main.c        **** {   
 9009              		.loc 1 2331 0
 9010              		.cfi_startproc
 9011              		@ args = 0, pretend = 0, frame = 16
 9012              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 202


 9013 0000 80B5     		push	{r7, lr}
 9014              		.cfi_def_cfa_offset 8
 9015              		.cfi_offset 7, -8
 9016              		.cfi_offset 14, -4
 9017 0002 84B0     		sub	sp, sp, #16
 9018              		.cfi_def_cfa_offset 24
 9019 0004 00AF     		add	r7, sp, #0
 9020              		.cfi_def_cfa_register 7
 9021 0006 0346     		mov	r3, r0
 9022 0008 3960     		str	r1, [r7]
 9023 000a FB71     		strb	r3, [r7, #7]
2332:main.c        ****     tempMIDI[0] = midiMsg[0];
 9024              		.loc 1 2332 0
 9025 000c 3B68     		ldr	r3, [r7]
 9026 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9027 0010 484B     		ldr	r3, .L376
 9028 0012 1A70     		strb	r2, [r3]
2333:main.c        ****     tempMIDI[1] = midiMsg[1];
 9029              		.loc 1 2333 0
 9030 0014 3B68     		ldr	r3, [r7]
 9031 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 9032 0018 464B     		ldr	r3, .L376
 9033 001a 5A70     		strb	r2, [r3, #1]
2334:main.c        ****      tempMIDI[2] = midiMsg[2];
 9034              		.loc 1 2334 0
 9035 001c 3B68     		ldr	r3, [r7]
 9036 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 9037 0020 444B     		ldr	r3, .L376
 9038 0022 9A70     		strb	r2, [r3, #2]
2335:main.c        ****      tempMIDI[3] = midiMsg[3];
 9039              		.loc 1 2335 0
 9040 0024 3B68     		ldr	r3, [r7]
 9041 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9042 0028 424B     		ldr	r3, .L376
 9043 002a DA70     		strb	r2, [r3, #3]
2336:main.c        ****     //check that we got here
2337:main.c        ****     
2338:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 9044              		.loc 1 2338 0
 9045 002c 424B     		ldr	r3, .L376+4
 9046 002e 1B78     		ldrb	r3, [r3]
 9047 0030 DBB2     		uxtb	r3, r3
 9048 0032 002B     		cmp	r3, #0
 9049 0034 7BD0     		beq	.L366
 9050              		.loc 1 2338 0 is_stmt 0 discriminator 1
 9051 0036 FFF7FEFF 		bl	USB_VBusPresent
 9052 003a 0346     		mov	r3, r0
 9053 003c 002B     		cmp	r3, #0
 9054 003e 76D0     		beq	.L366
2339:main.c        ****     {
2340:main.c        ****         if (receivingSysex)
 9055              		.loc 1 2340 0 is_stmt 1
 9056 0040 3E4B     		ldr	r3, .L376+8
 9057 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9058 0044 002B     		cmp	r3, #0
 9059 0046 29D0     		beq	.L368
 9060              	.LBB56:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 203


2341:main.c        ****         {
2342:main.c        ****             for (int i = 0; i < 3; i++)
 9061              		.loc 1 2342 0
 9062 0048 0023     		movs	r3, #0
 9063 004a FB60     		str	r3, [r7, #12]
 9064 004c 22E0     		b	.L369
 9065              	.L372:
2343:main.c        ****             {
2344:main.c        ****                 if (midiMsg[i] < 128)
 9066              		.loc 1 2344 0
 9067 004e FB68     		ldr	r3, [r7, #12]
 9068 0050 3A68     		ldr	r2, [r7]
 9069 0052 1344     		add	r3, r3, r2
 9070 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9071 0056 5BB2     		sxtb	r3, r3
 9072 0058 002B     		cmp	r3, #0
 9073 005a 0EDB     		blt	.L370
2345:main.c        ****                 {
2346:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 9074              		.loc 1 2346 0
 9075 005c 384B     		ldr	r3, .L376+12
 9076 005e 1B68     		ldr	r3, [r3]
 9077 0060 5A1C     		adds	r2, r3, #1
 9078 0062 3749     		ldr	r1, .L376+12
 9079 0064 0A60     		str	r2, [r1]
 9080 0066 40F2FF72 		movw	r2, #2047
 9081 006a 1340     		ands	r3, r3, r2
 9082 006c FA68     		ldr	r2, [r7, #12]
 9083 006e 3968     		ldr	r1, [r7]
 9084 0070 0A44     		add	r2, r2, r1
 9085 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 9086 0074 334A     		ldr	r2, .L376+16
 9087 0076 D154     		strb	r1, [r2, r3]
 9088 0078 09E0     		b	.L371
 9089              	.L370:
2347:main.c        ****                 }
2348:main.c        ****                 else
2349:main.c        ****                 {
2350:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 9090              		.loc 1 2350 0
 9091 007a FB68     		ldr	r3, [r7, #12]
 9092 007c 3A68     		ldr	r2, [r7]
 9093 007e 1344     		add	r3, r3, r2
 9094 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9095 0082 F72B     		cmp	r3, #247
 9096 0084 03D1     		bne	.L371
2351:main.c        ****                     {
2352:main.c        ****                         receivingSysex = 0;
 9097              		.loc 1 2352 0
 9098 0086 2D4B     		ldr	r3, .L376+8
 9099 0088 0022     		movs	r2, #0
 9100 008a 1A70     		strb	r2, [r3]
2353:main.c        ****                         //parseSysex();
2354:main.c        ****                         return;
 9101              		.loc 1 2354 0
 9102 008c 4FE0     		b	.L366
 9103              	.L371:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 204


2342:main.c        ****             {
 9104              		.loc 1 2342 0 discriminator 2
 9105 008e FB68     		ldr	r3, [r7, #12]
 9106 0090 0133     		adds	r3, r3, #1
 9107 0092 FB60     		str	r3, [r7, #12]
 9108              	.L369:
2342:main.c        ****             {
 9109              		.loc 1 2342 0 is_stmt 0 discriminator 1
 9110 0094 FB68     		ldr	r3, [r7, #12]
 9111 0096 022B     		cmp	r3, #2
 9112 0098 D9DD     		ble	.L372
 9113 009a 48E0     		b	.L366
 9114              	.L368:
 9115              	.LBE56:
2355:main.c        ****                      }
2356:main.c        ****                 }
2357:main.c        ****             }
2358:main.c        ****         }
2359:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 9116              		.loc 1 2359 0 is_stmt 1
 9117 009c 3B68     		ldr	r3, [r7]
 9118 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9119 00a0 F02B     		cmp	r3, #240
 9120 00a2 44D1     		bne	.L366
2360:main.c        ****         {
2361:main.c        ****             if (!parsingSysex)
 9121              		.loc 1 2361 0
 9122 00a4 284B     		ldr	r3, .L376+20
 9123 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9124 00a8 002B     		cmp	r3, #0
 9125 00aa 40D1     		bne	.L366
2362:main.c        ****             {
2363:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 9126              		.loc 1 2363 0
 9127 00ac 3B68     		ldr	r3, [r7]
 9128 00ae 0133     		adds	r3, r3, #1
 9129 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9130 00b2 7E2B     		cmp	r3, #126
 9131 00b4 03D1     		bne	.L374
2364:main.c        ****                 {
2365:main.c        ****                     parseThatMF = 1;
 9132              		.loc 1 2365 0
 9133 00b6 254B     		ldr	r3, .L376+24
 9134 00b8 0122     		movs	r2, #1
 9135 00ba 1A70     		strb	r2, [r3]
 9136 00bc 37E0     		b	.L366
 9137              	.L374:
2366:main.c        **** 
2367:main.c        ****                     //sysexPointer = 0;
2368:main.c        ****                 }
2369:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2 || midiMsg[1] == 3 |
 9138              		.loc 1 2369 0
 9139 00be 3B68     		ldr	r3, [r7]
 9140 00c0 0133     		adds	r3, r3, #1
 9141 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9142 00c4 002B     		cmp	r3, #0
 9143 00c6 13D0     		beq	.L375
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 205


 9144              		.loc 1 2369 0 is_stmt 0 discriminator 1
 9145 00c8 3B68     		ldr	r3, [r7]
 9146 00ca 0133     		adds	r3, r3, #1
 9147 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9148 00ce 012B     		cmp	r3, #1
 9149 00d0 0ED0     		beq	.L375
 9150              		.loc 1 2369 0 discriminator 2
 9151 00d2 3B68     		ldr	r3, [r7]
 9152 00d4 0133     		adds	r3, r3, #1
 9153 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9154 00d8 022B     		cmp	r3, #2
 9155 00da 09D0     		beq	.L375
 9156              		.loc 1 2369 0 discriminator 3
 9157 00dc 3B68     		ldr	r3, [r7]
 9158 00de 0133     		adds	r3, r3, #1
 9159 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9160 00e2 032B     		cmp	r3, #3
 9161 00e4 04D0     		beq	.L375
 9162              		.loc 1 2369 0 discriminator 4
 9163 00e6 3B68     		ldr	r3, [r7]
 9164 00e8 0133     		adds	r3, r3, #1
 9165 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9166 00ec 042B     		cmp	r3, #4
 9167 00ee 1ED1     		bne	.L366
 9168              	.L375:
2370:main.c        ****                 {
2371:main.c        ****                     receivingSysex = 1;
 9169              		.loc 1 2371 0 is_stmt 1
 9170 00f0 124B     		ldr	r3, .L376+8
 9171 00f2 0122     		movs	r2, #1
 9172 00f4 1A70     		strb	r2, [r3]
2372:main.c        ****                     
2373:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2374:main.c        ****                     if (sysexPointer == 0)
 9173              		.loc 1 2374 0
 9174 00f6 124B     		ldr	r3, .L376+12
 9175 00f8 1B68     		ldr	r3, [r3]
 9176 00fa 002B     		cmp	r3, #0
 9177 00fc 17D1     		bne	.L366
2375:main.c        ****                     {
2376:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 9178              		.loc 1 2376 0
 9179 00fe 104B     		ldr	r3, .L376+12
 9180 0100 1B68     		ldr	r3, [r3]
 9181 0102 5A1C     		adds	r2, r3, #1
 9182 0104 0E49     		ldr	r1, .L376+12
 9183 0106 0A60     		str	r2, [r1]
 9184 0108 40F2FF72 		movw	r2, #2047
 9185 010c 1340     		ands	r3, r3, r2
 9186 010e 3A68     		ldr	r2, [r7]
 9187 0110 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 9188 0112 0C4A     		ldr	r2, .L376+16
 9189 0114 D154     		strb	r1, [r2, r3]
2377:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 9190              		.loc 1 2377 0
 9191 0116 0A4B     		ldr	r3, .L376+12
 9192 0118 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 206


 9193 011a 5A1C     		adds	r2, r3, #1
 9194 011c 0849     		ldr	r1, .L376+12
 9195 011e 0A60     		str	r2, [r1]
 9196 0120 40F2FF72 		movw	r2, #2047
 9197 0124 1340     		ands	r3, r3, r2
 9198 0126 3A68     		ldr	r2, [r7]
 9199 0128 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 9200 012a 064A     		ldr	r2, .L376+16
 9201 012c D154     		strb	r1, [r2, r3]
 9202              	.L366:
2378:main.c        ****                     }
2379:main.c        ****                 }
2380:main.c        ****             }
2381:main.c        ****         }
2382:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2383:main.c        ****     }
2384:main.c        **** }    
 9203              		.loc 1 2384 0
 9204 012e 1037     		adds	r7, r7, #16
 9205              		.cfi_def_cfa_offset 8
 9206 0130 BD46     		mov	sp, r7
 9207              		.cfi_def_cfa_register 13
 9208              		@ sp needed
 9209 0132 80BD     		pop	{r7, pc}
 9210              	.L377:
 9211              		.align	2
 9212              	.L376:
 9213 0134 00000000 		.word	tempMIDI
 9214 0138 00000000 		.word	USB_active
 9215 013c 00000000 		.word	receivingSysex
 9216 0140 00000000 		.word	sysexPointer
 9217 0144 00000000 		.word	sysexBuffer
 9218 0148 00000000 		.word	parsingSysex
 9219 014c 00000000 		.word	parseThatMF
 9220              		.cfi_endproc
 9221              	.LFE93:
 9222              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 9223              		.global	prevEncoderVal
 9224              		.bss
 9225              		.type	prevEncoderVal, %object
 9226              		.size	prevEncoderVal, 1
 9227              	prevEncoderVal:
 9228 0131 00       		.space	1
 9229              		.global	encoderWatch
 9230              		.type	encoderWatch, %object
 9231              		.size	encoderWatch, 1
 9232              	encoderWatch:
 9233 0132 00       		.space	1
 9234              		.comm	menuPosition,6,4
 9235              		.global	semitonesOrCents
 9236              		.type	semitonesOrCents, %object
 9237              		.size	semitonesOrCents, 1
 9238              	semitonesOrCents:
 9239 0133 00       		.space	1
 9240              		.section	.text.scanUI,"ax",%progbits
 9241              		.align	2
 9242              		.global	scanUI
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 207


 9243              		.thumb
 9244              		.thumb_func
 9245              		.type	scanUI, %function
 9246              	scanUI:
 9247              	.LFB94:
2385:main.c        **** 
2386:main.c        **** int8_t prevEncoderVal = 0;
2387:main.c        **** uint8_t encoderWatch = 0;
2388:main.c        **** //signed so that we can check if it goes below zero
2389:main.c        **** int8_t menuPosition[3][2];
2390:main.c        **** enum direction{Left, Right, Down, Up, Enter};
2391:main.c        **** uint8_t semitonesOrCents = 0;
2392:main.c        **** 
2393:main.c        **** 
2394:main.c        **** void scanUI(void)
2395:main.c        **** {
 9248              		.loc 1 2395 0
 9249              		.cfi_startproc
 9250              		@ args = 0, pretend = 0, frame = 16
 9251              		@ frame_needed = 1, uses_anonymous_args = 0
 9252 0000 90B5     		push	{r4, r7, lr}
 9253              		.cfi_def_cfa_offset 12
 9254              		.cfi_offset 4, -12
 9255              		.cfi_offset 7, -8
 9256              		.cfi_offset 14, -4
 9257 0002 87B0     		sub	sp, sp, #28
 9258              		.cfi_def_cfa_offset 40
 9259 0004 02AF     		add	r7, sp, #8
 9260              		.cfi_def_cfa 7, 32
2396:main.c        ****     uint8_t tempButtons = Status_Reg_1_Read();
 9261              		.loc 1 2396 0
 9262 0006 FFF7FEFF 		bl	Status_Reg_1_Read
 9263 000a 0346     		mov	r3, r0
 9264 000c FB71     		strb	r3, [r7, #7]
2397:main.c        ****     if (!(tempButtons&(1<<4)))
 9265              		.loc 1 2397 0
 9266 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9267 0010 03F01003 		and	r3, r3, #16
 9268 0014 002B     		cmp	r3, #0
 9269 0016 24D1     		bne	.L379
2398:main.c        ****     {
2399:main.c        ****         if (octave > 4)
 9270              		.loc 1 2399 0
 9271 0018 AC4B     		ldr	r3, .L427
 9272 001a 1B68     		ldr	r3, [r3]
 9273 001c 042B     		cmp	r3, #4
 9274 001e 03DD     		ble	.L380
2400:main.c        ****         {
2401:main.c        ****             octave = 4;
 9275              		.loc 1 2401 0
 9276 0020 AA4B     		ldr	r3, .L427
 9277 0022 0422     		movs	r2, #4
 9278 0024 1A60     		str	r2, [r3]
 9279 0026 0CE0     		b	.L381
 9280              	.L380:
2402:main.c        ****         }
2403:main.c        ****         else if ((oct1Up) && (octave > 0))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 208


 9281              		.loc 1 2403 0
 9282 0028 A94B     		ldr	r3, .L427+4
 9283 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9284 002c 002B     		cmp	r3, #0
 9285 002e 08D0     		beq	.L381
 9286              		.loc 1 2403 0 is_stmt 0 discriminator 1
 9287 0030 A64B     		ldr	r3, .L427
 9288 0032 1B68     		ldr	r3, [r3]
 9289 0034 002B     		cmp	r3, #0
 9290 0036 04DD     		ble	.L381
2404:main.c        ****         {
2405:main.c        ****             octave--;
 9291              		.loc 1 2405 0 is_stmt 1
 9292 0038 A44B     		ldr	r3, .L427
 9293 003a 1B68     		ldr	r3, [r3]
 9294 003c 013B     		subs	r3, r3, #1
 9295 003e A34A     		ldr	r2, .L427
 9296 0040 1360     		str	r3, [r2]
 9297              	.L381:
2406:main.c        ****         }
2407:main.c        ****         LED_amber1_Write(1);
 9298              		.loc 1 2407 0
 9299 0042 0120     		movs	r0, #1
 9300 0044 FFF7FEFF 		bl	LED_amber1_Write
2408:main.c        ****         LED_amber2_Write(0);
 9301              		.loc 1 2408 0
 9302 0048 0020     		movs	r0, #0
 9303 004a FFF7FEFF 		bl	LED_amber2_Write
2409:main.c        ****         LED_amber3_Write(0);
 9304              		.loc 1 2409 0
 9305 004e 0020     		movs	r0, #0
 9306 0050 FFF7FEFF 		bl	LED_amber3_Write
2410:main.c        ****         LED_amber4_Write(0);
 9307              		.loc 1 2410 0
 9308 0054 0020     		movs	r0, #0
 9309 0056 FFF7FEFF 		bl	LED_amber4_Write
2411:main.c        ****         oct1Up = 0;
 9310              		.loc 1 2411 0
 9311 005a 9D4B     		ldr	r3, .L427+4
 9312 005c 0022     		movs	r2, #0
 9313 005e 1A70     		strb	r2, [r3]
 9314 0060 07E0     		b	.L382
 9315              	.L379:
2412:main.c        ****     }
2413:main.c        ****     
2414:main.c        ****     else if ((tempButtons&(1<<4)))
 9316              		.loc 1 2414 0
 9317 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9318 0064 03F01003 		and	r3, r3, #16
 9319 0068 002B     		cmp	r3, #0
 9320 006a 02D0     		beq	.L382
2415:main.c        ****     {
2416:main.c        ****         oct1Up = 1;
 9321              		.loc 1 2416 0
 9322 006c 984B     		ldr	r3, .L427+4
 9323 006e 0122     		movs	r2, #1
 9324 0070 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 209


 9325              	.L382:
2417:main.c        ****     }
2418:main.c        ****     
2419:main.c        ****     if (!oct2_Read())
 9326              		.loc 1 2419 0
 9327 0072 FFF7FEFF 		bl	oct2_Read
 9328 0076 0346     		mov	r3, r0
 9329 0078 002B     		cmp	r3, #0
 9330 007a 0ED1     		bne	.L383
2420:main.c        ****     {
2421:main.c        ****         octave = 5;
 9331              		.loc 1 2421 0
 9332 007c 934B     		ldr	r3, .L427
 9333 007e 0522     		movs	r2, #5
 9334 0080 1A60     		str	r2, [r3]
2422:main.c        ****         LED_amber1_Write(0);
 9335              		.loc 1 2422 0
 9336 0082 0020     		movs	r0, #0
 9337 0084 FFF7FEFF 		bl	LED_amber1_Write
2423:main.c        ****         LED_amber2_Write(1);
 9338              		.loc 1 2423 0
 9339 0088 0120     		movs	r0, #1
 9340 008a FFF7FEFF 		bl	LED_amber2_Write
2424:main.c        ****         LED_amber3_Write(0);
 9341              		.loc 1 2424 0
 9342 008e 0020     		movs	r0, #0
 9343 0090 FFF7FEFF 		bl	LED_amber3_Write
2425:main.c        ****         LED_amber4_Write(0);
 9344              		.loc 1 2425 0
 9345 0094 0020     		movs	r0, #0
 9346 0096 FFF7FEFF 		bl	LED_amber4_Write
 9347              	.L383:
2426:main.c        ****     }
2427:main.c        ****     if (!oct3_Read())
 9348              		.loc 1 2427 0
 9349 009a FFF7FEFF 		bl	oct3_Read
 9350 009e 0346     		mov	r3, r0
 9351 00a0 002B     		cmp	r3, #0
 9352 00a2 0ED1     		bne	.L384
2428:main.c        ****     {
2429:main.c        ****         octave = 6;
 9353              		.loc 1 2429 0
 9354 00a4 894B     		ldr	r3, .L427
 9355 00a6 0622     		movs	r2, #6
 9356 00a8 1A60     		str	r2, [r3]
2430:main.c        ****         LED_amber1_Write(0);
 9357              		.loc 1 2430 0
 9358 00aa 0020     		movs	r0, #0
 9359 00ac FFF7FEFF 		bl	LED_amber1_Write
2431:main.c        ****         LED_amber2_Write(0);
 9360              		.loc 1 2431 0
 9361 00b0 0020     		movs	r0, #0
 9362 00b2 FFF7FEFF 		bl	LED_amber2_Write
2432:main.c        ****         LED_amber3_Write(1);
 9363              		.loc 1 2432 0
 9364 00b6 0120     		movs	r0, #1
 9365 00b8 FFF7FEFF 		bl	LED_amber3_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 210


2433:main.c        ****         LED_amber4_Write(0);            
 9366              		.loc 1 2433 0
 9367 00bc 0020     		movs	r0, #0
 9368 00be FFF7FEFF 		bl	LED_amber4_Write
 9369              	.L384:
2434:main.c        ****     }
2435:main.c        ****     if (!(tempButtons&(1<<5)))
 9370              		.loc 1 2435 0
 9371 00c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9372 00c4 03F02003 		and	r3, r3, #32
 9373 00c8 002B     		cmp	r3, #0
 9374 00ca 24D1     		bne	.L385
2436:main.c        ****     {
2437:main.c        ****         if (octave < 7)
 9375              		.loc 1 2437 0
 9376 00cc 7F4B     		ldr	r3, .L427
 9377 00ce 1B68     		ldr	r3, [r3]
 9378 00d0 062B     		cmp	r3, #6
 9379 00d2 03DC     		bgt	.L386
2438:main.c        ****         {
2439:main.c        ****             octave = 7;
 9380              		.loc 1 2439 0
 9381 00d4 7D4B     		ldr	r3, .L427
 9382 00d6 0722     		movs	r2, #7
 9383 00d8 1A60     		str	r2, [r3]
 9384 00da 0CE0     		b	.L387
 9385              	.L386:
2440:main.c        **** 
2441:main.c        ****         }
2442:main.c        ****         else if ((oct4Up) && (octave < 11))
 9386              		.loc 1 2442 0
 9387 00dc 7D4B     		ldr	r3, .L427+8
 9388 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9389 00e0 002B     		cmp	r3, #0
 9390 00e2 08D0     		beq	.L387
 9391              		.loc 1 2442 0 is_stmt 0 discriminator 1
 9392 00e4 794B     		ldr	r3, .L427
 9393 00e6 1B68     		ldr	r3, [r3]
 9394 00e8 0A2B     		cmp	r3, #10
 9395 00ea 04DC     		bgt	.L387
2443:main.c        ****         {
2444:main.c        ****             octave++;
 9396              		.loc 1 2444 0 is_stmt 1
 9397 00ec 774B     		ldr	r3, .L427
 9398 00ee 1B68     		ldr	r3, [r3]
 9399 00f0 0133     		adds	r3, r3, #1
 9400 00f2 764A     		ldr	r2, .L427
 9401 00f4 1360     		str	r3, [r2]
 9402              	.L387:
2445:main.c        **** 
2446:main.c        ****         }
2447:main.c        ****         LED_amber1_Write(0);
 9403              		.loc 1 2447 0
 9404 00f6 0020     		movs	r0, #0
 9405 00f8 FFF7FEFF 		bl	LED_amber1_Write
2448:main.c        ****         LED_amber2_Write(0);
 9406              		.loc 1 2448 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 211


 9407 00fc 0020     		movs	r0, #0
 9408 00fe FFF7FEFF 		bl	LED_amber2_Write
2449:main.c        ****         LED_amber3_Write(0);
 9409              		.loc 1 2449 0
 9410 0102 0020     		movs	r0, #0
 9411 0104 FFF7FEFF 		bl	LED_amber3_Write
2450:main.c        ****         LED_amber4_Write(1);
 9412              		.loc 1 2450 0
 9413 0108 0120     		movs	r0, #1
 9414 010a FFF7FEFF 		bl	LED_amber4_Write
2451:main.c        ****         oct4Up = 0;
 9415              		.loc 1 2451 0
 9416 010e 714B     		ldr	r3, .L427+8
 9417 0110 0022     		movs	r2, #0
 9418 0112 1A70     		strb	r2, [r3]
 9419 0114 07E0     		b	.L388
 9420              	.L385:
2452:main.c        ****     }
2453:main.c        ****     
2454:main.c        ****     else if ((tempButtons&(1<<5)))
 9421              		.loc 1 2454 0
 9422 0116 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9423 0118 03F02003 		and	r3, r3, #32
 9424 011c 002B     		cmp	r3, #0
 9425 011e 02D0     		beq	.L388
2455:main.c        ****     {
2456:main.c        ****         oct4Up = 1;
 9426              		.loc 1 2456 0
 9427 0120 6C4B     		ldr	r3, .L427+8
 9428 0122 0122     		movs	r2, #1
 9429 0124 1A70     		strb	r2, [r3]
 9430              	.L388:
2457:main.c        ****     }
2458:main.c        ****     
2459:main.c        ****     if (!neck1_button_Read())
 9431              		.loc 1 2459 0
 9432 0126 FFF7FEFF 		bl	neck1_button_Read
 9433 012a 0346     		mov	r3, r0
 9434 012c 002B     		cmp	r3, #0
 9435 012e 2FD1     		bne	.L389
2460:main.c        ****     {
2461:main.c        ****         currentNeck = 0;
 9436              		.loc 1 2461 0
 9437 0130 694B     		ldr	r3, .L427+12
 9438 0132 0022     		movs	r2, #0
 9439 0134 1A60     		str	r2, [r3]
2462:main.c        ****         currentCopedent = necks[currentNeck];
 9440              		.loc 1 2462 0
 9441 0136 684B     		ldr	r3, .L427+12
 9442 0138 1B68     		ldr	r3, [r3]
 9443 013a 684A     		ldr	r2, .L427+16
 9444 013c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9445 013e 684B     		ldr	r3, .L427+20
 9446 0140 1A70     		strb	r2, [r3]
2463:main.c        ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 9447              		.loc 1 2463 0
 9448 0142 664B     		ldr	r3, .L427+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 212


 9449 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9450 0146 5B01     		lsls	r3, r3, #5
 9451 0148 DAB2     		uxtb	r2, r3
 9452 014a 644B     		ldr	r3, .L427+16
 9453 014c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9454 014e 9B00     		lsls	r3, r3, #2
 9455 0150 DBB2     		uxtb	r3, r3
 9456 0152 1344     		add	r3, r3, r2
 9457 0154 DAB2     		uxtb	r2, r3
 9458 0156 604B     		ldr	r3, .L427+12
 9459 0158 1B68     		ldr	r3, [r3]
 9460 015a DBB2     		uxtb	r3, r3
 9461 015c 1344     		add	r3, r3, r2
 9462 015e DAB2     		uxtb	r2, r3
 9463 0160 604B     		ldr	r3, .L427+24
 9464 0162 1A70     		strb	r2, [r3]
2464:main.c        ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 9465              		.loc 1 2464 0
 9466 0164 5F4B     		ldr	r3, .L427+24
 9467 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9468 0168 40F2FE71 		movw	r1, #2046
 9469 016c 1846     		mov	r0, r3
 9470 016e FFF7FEFF 		bl	EEPROM_WriteByte
2465:main.c        ****         LED_red1_Write(0);
 9471              		.loc 1 2465 0
 9472 0172 0020     		movs	r0, #0
 9473 0174 FFF7FEFF 		bl	LED_red1_Write
2466:main.c        ****         LED_green2_Write(1);
 9474              		.loc 1 2466 0
 9475 0178 0120     		movs	r0, #1
 9476 017a FFF7FEFF 		bl	LED_green2_Write
2467:main.c        ****         if (!editMode)
 9477              		.loc 1 2467 0
 9478 017e 5A4B     		ldr	r3, .L427+28
 9479 0180 1B68     		ldr	r3, [r3]
 9480 0182 002B     		cmp	r3, #0
 9481 0184 02D1     		bne	.L390
2468:main.c        ****         {
2469:main.c        ****             displayCurrentPresetNameAndCopedent();
 9482              		.loc 1 2469 0
 9483 0186 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 9484 018a 01E0     		b	.L389
 9485              	.L390:
2470:main.c        ****         }
2471:main.c        ****         else
2472:main.c        ****         {
2473:main.c        ****             exitEditModeMenu();   
 9486              		.loc 1 2473 0
 9487 018c FFF7FEFF 		bl	exitEditModeMenu
 9488              	.L389:
2474:main.c        ****         }
2475:main.c        ****     }
2476:main.c        ****     if (!neck2_button_Read())
 9489              		.loc 1 2476 0
 9490 0190 FFF7FEFF 		bl	neck2_button_Read
 9491 0194 0346     		mov	r3, r0
 9492 0196 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 213


 9493 0198 2FD1     		bne	.L391
2477:main.c        ****     {
2478:main.c        ****         currentNeck = 1;
 9494              		.loc 1 2478 0
 9495 019a 4F4B     		ldr	r3, .L427+12
 9496 019c 0122     		movs	r2, #1
 9497 019e 1A60     		str	r2, [r3]
2479:main.c        ****         currentCopedent = necks[currentNeck];    
 9498              		.loc 1 2479 0
 9499 01a0 4D4B     		ldr	r3, .L427+12
 9500 01a2 1B68     		ldr	r3, [r3]
 9501 01a4 4D4A     		ldr	r2, .L427+16
 9502 01a6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9503 01a8 4D4B     		ldr	r3, .L427+20
 9504 01aa 1A70     		strb	r2, [r3]
2480:main.c        ****         neckByte = (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 9505              		.loc 1 2480 0
 9506 01ac 4B4B     		ldr	r3, .L427+16
 9507 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9508 01b0 5B01     		lsls	r3, r3, #5
 9509 01b2 DAB2     		uxtb	r2, r3
 9510 01b4 494B     		ldr	r3, .L427+16
 9511 01b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9512 01b8 9B00     		lsls	r3, r3, #2
 9513 01ba DBB2     		uxtb	r3, r3
 9514 01bc 1344     		add	r3, r3, r2
 9515 01be DAB2     		uxtb	r2, r3
 9516 01c0 454B     		ldr	r3, .L427+12
 9517 01c2 1B68     		ldr	r3, [r3]
 9518 01c4 DBB2     		uxtb	r3, r3
 9519 01c6 1344     		add	r3, r3, r2
 9520 01c8 DAB2     		uxtb	r2, r3
 9521 01ca 464B     		ldr	r3, .L427+24
 9522 01cc 1A70     		strb	r2, [r3]
2481:main.c        ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 9523              		.loc 1 2481 0
 9524 01ce 454B     		ldr	r3, .L427+24
 9525 01d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9526 01d2 40F2FE71 		movw	r1, #2046
 9527 01d6 1846     		mov	r0, r3
 9528 01d8 FFF7FEFF 		bl	EEPROM_WriteByte
2482:main.c        ****         LED_red1_Write(1);
 9529              		.loc 1 2482 0
 9530 01dc 0120     		movs	r0, #1
 9531 01de FFF7FEFF 		bl	LED_red1_Write
2483:main.c        ****         LED_green2_Write(0);          
 9532              		.loc 1 2483 0
 9533 01e2 0020     		movs	r0, #0
 9534 01e4 FFF7FEFF 		bl	LED_green2_Write
2484:main.c        ****         if (!editMode)
 9535              		.loc 1 2484 0
 9536 01e8 3F4B     		ldr	r3, .L427+28
 9537 01ea 1B68     		ldr	r3, [r3]
 9538 01ec 002B     		cmp	r3, #0
 9539 01ee 02D1     		bne	.L392
2485:main.c        ****         {
2486:main.c        ****             displayCurrentPresetNameAndCopedent();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 214


 9540              		.loc 1 2486 0
 9541 01f0 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 9542 01f4 01E0     		b	.L391
 9543              	.L392:
2487:main.c        ****         }
2488:main.c        ****         else
2489:main.c        ****         {
2490:main.c        ****             exitEditModeMenu();   
 9544              		.loc 1 2490 0
 9545 01f6 FFF7FEFF 		bl	exitEditModeMenu
 9546              	.L391:
2491:main.c        ****         }
2492:main.c        ****     }
2493:main.c        ****     
2494:main.c        ****     if ((!(tempButtons&(1<<6))) && (shiftUp))
 9547              		.loc 1 2494 0
 9548 01fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9549 01fc 03F04003 		and	r3, r3, #64
 9550 0200 002B     		cmp	r3, #0
 9551 0202 1DD1     		bne	.L393
 9552              		.loc 1 2494 0 is_stmt 0 discriminator 1
 9553 0204 394B     		ldr	r3, .L427+32
 9554 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9555 0208 002B     		cmp	r3, #0
 9556 020a 19D0     		beq	.L393
2495:main.c        ****     {
2496:main.c        ****         dualSlider = !dualSlider;
 9557              		.loc 1 2496 0 is_stmt 1
 9558 020c 384B     		ldr	r3, .L427+36
 9559 020e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9560 0210 002B     		cmp	r3, #0
 9561 0212 0CBF     		ite	eq
 9562 0214 0123     		moveq	r3, #1
 9563 0216 0023     		movne	r3, #0
 9564 0218 DBB2     		uxtb	r3, r3
 9565 021a 1A46     		mov	r2, r3
 9566 021c 344B     		ldr	r3, .L427+36
 9567 021e 1A70     		strb	r2, [r3]
2497:main.c        ****         LED_green1_Write(dualSlider);
 9568              		.loc 1 2497 0
 9569 0220 334B     		ldr	r3, .L427+36
 9570 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9571 0224 1846     		mov	r0, r3
 9572 0226 FFF7FEFF 		bl	LED_green1_Write
2498:main.c        ****         EEPROM_WriteByte(dualSlider, EEPROM_DUAL_SLIDER_OFFSET);
 9573              		.loc 1 2498 0
 9574 022a 314B     		ldr	r3, .L427+36
 9575 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9576 022e 40F2FD71 		movw	r1, #2045
 9577 0232 1846     		mov	r0, r3
 9578 0234 FFF7FEFF 		bl	EEPROM_WriteByte
2499:main.c        ****         shiftUp = 0;
 9579              		.loc 1 2499 0
 9580 0238 2C4B     		ldr	r3, .L427+32
 9581 023a 0022     		movs	r2, #0
 9582 023c 1A70     		strb	r2, [r3]
 9583 023e 07E0     		b	.L394
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 215


 9584              	.L393:
2500:main.c        ****     }
2501:main.c        ****     else if ((tempButtons&(1<<6)))
 9585              		.loc 1 2501 0
 9586 0240 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9587 0242 03F04003 		and	r3, r3, #64
 9588 0246 002B     		cmp	r3, #0
 9589 0248 02D0     		beq	.L394
2502:main.c        ****     {
2503:main.c        ****         shiftUp = 1;
 9590              		.loc 1 2503 0
 9591 024a 284B     		ldr	r3, .L427+32
 9592 024c 0122     		movs	r2, #1
 9593 024e 1A70     		strb	r2, [r3]
 9594              	.L394:
2504:main.c        ****     }
2505:main.c        **** 
2506:main.c        ****     if ((!(tempButtons&(1<<0))) && (button1Up))
 9595              		.loc 1 2506 0
 9596 0250 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9597 0252 03F00103 		and	r3, r3, #1
 9598 0256 002B     		cmp	r3, #0
 9599 0258 09D1     		bne	.L395
 9600              		.loc 1 2506 0 is_stmt 0 discriminator 1
 9601 025a 264B     		ldr	r3, .L427+40
 9602 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9603 025e 002B     		cmp	r3, #0
 9604 0260 05D0     		beq	.L395
2507:main.c        ****     {
2508:main.c        ****         leftPressed();
 9605              		.loc 1 2508 0 is_stmt 1
 9606 0262 FFF7FEFF 		bl	leftPressed
2509:main.c        ****         button1Up = 0;
 9607              		.loc 1 2509 0
 9608 0266 234B     		ldr	r3, .L427+40
 9609 0268 0022     		movs	r2, #0
 9610 026a 1A70     		strb	r2, [r3]
 9611 026c 07E0     		b	.L396
 9612              	.L395:
2510:main.c        ****     }
2511:main.c        ****     else if ((tempButtons&(1<<0)))
 9613              		.loc 1 2511 0
 9614 026e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9615 0270 03F00103 		and	r3, r3, #1
 9616 0274 002B     		cmp	r3, #0
 9617 0276 02D0     		beq	.L396
2512:main.c        ****     {
2513:main.c        ****         button1Up = 1;
 9618              		.loc 1 2513 0
 9619 0278 1E4B     		ldr	r3, .L427+40
 9620 027a 0122     		movs	r2, #1
 9621 027c 1A70     		strb	r2, [r3]
 9622              	.L396:
2514:main.c        ****     }
2515:main.c        ****     
2516:main.c        ****     if ((!(tempButtons&(1<<1))) && (button2Up))
 9623              		.loc 1 2516 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 216


 9624 027e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9625 0280 03F00203 		and	r3, r3, #2
 9626 0284 002B     		cmp	r3, #0
 9627 0286 09D1     		bne	.L397
 9628              		.loc 1 2516 0 is_stmt 0 discriminator 1
 9629 0288 1B4B     		ldr	r3, .L427+44
 9630 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9631 028c 002B     		cmp	r3, #0
 9632 028e 05D0     		beq	.L397
2517:main.c        ****     {
2518:main.c        ****         rightPressed();
 9633              		.loc 1 2518 0 is_stmt 1
 9634 0290 FFF7FEFF 		bl	rightPressed
2519:main.c        ****         button2Up = 0;
 9635              		.loc 1 2519 0
 9636 0294 184B     		ldr	r3, .L427+44
 9637 0296 0022     		movs	r2, #0
 9638 0298 1A70     		strb	r2, [r3]
 9639 029a 07E0     		b	.L398
 9640              	.L397:
2520:main.c        ****     }
2521:main.c        ****     else if ((tempButtons&(1<<1)))
 9641              		.loc 1 2521 0
 9642 029c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9643 029e 03F00203 		and	r3, r3, #2
 9644 02a2 002B     		cmp	r3, #0
 9645 02a4 02D0     		beq	.L398
2522:main.c        ****     {
2523:main.c        ****         button2Up = 1;
 9646              		.loc 1 2523 0
 9647 02a6 144B     		ldr	r3, .L427+44
 9648 02a8 0122     		movs	r2, #1
 9649 02aa 1A70     		strb	r2, [r3]
 9650              	.L398:
2524:main.c        ****     }
2525:main.c        ****     
2526:main.c        ****     if ((!(tempButtons&(1<<2))) && (button3Up))
 9651              		.loc 1 2526 0
 9652 02ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9653 02ae 03F00403 		and	r3, r3, #4
 9654 02b2 002B     		cmp	r3, #0
 9655 02b4 24D1     		bne	.L399
 9656              		.loc 1 2526 0 is_stmt 0 discriminator 1
 9657 02b6 114B     		ldr	r3, .L427+48
 9658 02b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9659 02ba 002B     		cmp	r3, #0
 9660 02bc 20D0     		beq	.L399
2527:main.c        ****     {
2528:main.c        ****         downPressed();
 9661              		.loc 1 2528 0 is_stmt 1
 9662 02be FFF7FEFF 		bl	downPressed
2529:main.c        ****         button3Up = 0;
 9663              		.loc 1 2529 0
 9664 02c2 0E4B     		ldr	r3, .L427+48
 9665 02c4 0022     		movs	r2, #0
 9666 02c6 1A70     		strb	r2, [r3]
 9667 02c8 22E0     		b	.L400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 217


 9668              	.L428:
 9669 02ca 00BF     		.align	2
 9670              	.L427:
 9671 02cc 00000000 		.word	octave
 9672 02d0 00000000 		.word	oct1Up
 9673 02d4 00000000 		.word	oct4Up
 9674 02d8 00000000 		.word	currentNeck
 9675 02dc 00000000 		.word	necks
 9676 02e0 00000000 		.word	currentCopedent
 9677 02e4 00000000 		.word	neckByte
 9678 02e8 00000000 		.word	editMode
 9679 02ec 00000000 		.word	shiftUp
 9680 02f0 00000000 		.word	dualSlider
 9681 02f4 00000000 		.word	button1Up
 9682 02f8 00000000 		.word	button2Up
 9683 02fc 00000000 		.word	button3Up
 9684              	.L399:
2530:main.c        ****     }
2531:main.c        ****     else if ((tempButtons&(1<<2)))
 9685              		.loc 1 2531 0
 9686 0300 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9687 0302 03F00403 		and	r3, r3, #4
 9688 0306 002B     		cmp	r3, #0
 9689 0308 02D0     		beq	.L400
2532:main.c        ****     {
2533:main.c        ****         button3Up = 1;
 9690              		.loc 1 2533 0
 9691 030a 6B4B     		ldr	r3, .L429
 9692 030c 0122     		movs	r2, #1
 9693 030e 1A70     		strb	r2, [r3]
 9694              	.L400:
2534:main.c        ****     }
2535:main.c        ****     
2536:main.c        ****     if ((!(tempButtons&(1<<3))) && (button4Up))
 9695              		.loc 1 2536 0
 9696 0310 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9697 0312 03F00803 		and	r3, r3, #8
 9698 0316 002B     		cmp	r3, #0
 9699 0318 09D1     		bne	.L401
 9700              		.loc 1 2536 0 is_stmt 0 discriminator 1
 9701 031a 684B     		ldr	r3, .L429+4
 9702 031c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9703 031e 002B     		cmp	r3, #0
 9704 0320 05D0     		beq	.L401
2537:main.c        ****     {
2538:main.c        ****         upPressed();
 9705              		.loc 1 2538 0 is_stmt 1
 9706 0322 FFF7FEFF 		bl	upPressed
2539:main.c        ****         button4Up = 0;
 9707              		.loc 1 2539 0
 9708 0326 654B     		ldr	r3, .L429+4
 9709 0328 0022     		movs	r2, #0
 9710 032a 1A70     		strb	r2, [r3]
 9711 032c 07E0     		b	.L402
 9712              	.L401:
2540:main.c        ****     }
2541:main.c        ****     else if ((tempButtons&(1<<3)))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 218


 9713              		.loc 1 2541 0
 9714 032e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9715 0330 03F00803 		and	r3, r3, #8
 9716 0334 002B     		cmp	r3, #0
 9717 0336 02D0     		beq	.L402
2542:main.c        ****     {
2543:main.c        ****         button4Up = 1;
 9718              		.loc 1 2543 0
 9719 0338 604B     		ldr	r3, .L429+4
 9720 033a 0122     		movs	r2, #1
 9721 033c 1A70     		strb	r2, [r3]
 9722              	.L402:
2544:main.c        ****     }
2545:main.c        ****     
2546:main.c        ****     if ((!edit_button_Read()) && (editUp))
 9723              		.loc 1 2546 0
 9724 033e FFF7FEFF 		bl	edit_button_Read
 9725 0342 0346     		mov	r3, r0
 9726 0344 002B     		cmp	r3, #0
 9727 0346 1AD1     		bne	.L403
 9728              		.loc 1 2546 0 is_stmt 0 discriminator 1
 9729 0348 5D4B     		ldr	r3, .L429+8
 9730 034a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9731 034c 002B     		cmp	r3, #0
 9732 034e 16D0     		beq	.L403
2547:main.c        ****     {
2548:main.c        ****         editMode = !editMode;
 9733              		.loc 1 2548 0 is_stmt 1
 9734 0350 5C4B     		ldr	r3, .L429+12
 9735 0352 1B68     		ldr	r3, [r3]
 9736 0354 002B     		cmp	r3, #0
 9737 0356 0CBF     		ite	eq
 9738 0358 0123     		moveq	r3, #1
 9739 035a 0023     		movne	r3, #0
 9740 035c DBB2     		uxtb	r3, r3
 9741 035e 1A46     		mov	r2, r3
 9742 0360 584B     		ldr	r3, .L429+12
 9743 0362 1A60     		str	r2, [r3]
2549:main.c        ****         if (editMode)
 9744              		.loc 1 2549 0
 9745 0364 574B     		ldr	r3, .L429+12
 9746 0366 1B68     		ldr	r3, [r3]
 9747 0368 002B     		cmp	r3, #0
 9748 036a 02D0     		beq	.L404
2550:main.c        ****         {
2551:main.c        ****             enterEditModeMenu();
 9749              		.loc 1 2551 0
 9750 036c FFF7FEFF 		bl	enterEditModeMenu
 9751 0370 01E0     		b	.L405
 9752              	.L404:
2552:main.c        ****         }
2553:main.c        ****         else
2554:main.c        ****         {
2555:main.c        ****             exitEditModeMenu();
 9753              		.loc 1 2555 0
 9754 0372 FFF7FEFF 		bl	exitEditModeMenu
 9755              	.L405:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 219


2556:main.c        ****         }
2557:main.c        ****         editUp = 0;
 9756              		.loc 1 2557 0
 9757 0376 524B     		ldr	r3, .L429+8
 9758 0378 0022     		movs	r2, #0
 9759 037a 1A70     		strb	r2, [r3]
 9760 037c 07E0     		b	.L406
 9761              	.L403:
2558:main.c        ****     }
2559:main.c        ****     else if (edit_button_Read())
 9762              		.loc 1 2559 0
 9763 037e FFF7FEFF 		bl	edit_button_Read
 9764 0382 0346     		mov	r3, r0
 9765 0384 002B     		cmp	r3, #0
 9766 0386 02D0     		beq	.L406
2560:main.c        ****     {
2561:main.c        ****         editUp = 1;
 9767              		.loc 1 2561 0
 9768 0388 4D4B     		ldr	r3, .L429+8
 9769 038a 0122     		movs	r2, #1
 9770 038c 1A70     		strb	r2, [r3]
 9771              	.L406:
2562:main.c        ****     }
2563:main.c        ****     
2564:main.c        ****     if ((!(tempButtons&(1<<7))) && (encoderUp))
 9772              		.loc 1 2564 0
 9773 038e 97F90730 		ldrsb	r3, [r7, #7]
 9774 0392 002B     		cmp	r3, #0
 9775 0394 03DB     		blt	.L407
 9776              		.loc 1 2564 0 is_stmt 0 discriminator 1
 9777 0396 4C4B     		ldr	r3, .L429+16
 9778 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9779 039a 002B     		cmp	r3, #0
 9780 039c 06D1     		bne	.L408
 9781              	.L407:
2565:main.c        ****     {
2566:main.c        ****         
2567:main.c        ****     }
2568:main.c        ****     else if ((tempButtons&(1<<7)))
 9782              		.loc 1 2568 0 is_stmt 1
 9783 039e 97F90730 		ldrsb	r3, [r7, #7]
 9784 03a2 002B     		cmp	r3, #0
 9785 03a4 02DA     		bge	.L408
2569:main.c        ****     {
2570:main.c        ****         encoderUp = 1;
 9786              		.loc 1 2570 0
 9787 03a6 484B     		ldr	r3, .L429+16
 9788 03a8 0122     		movs	r2, #1
 9789 03aa 1A70     		strb	r2, [r3]
 9790              	.L408:
2571:main.c        ****     }
2572:main.c        ****     
2573:main.c        ****     prevOctave = octave;
 9791              		.loc 1 2573 0
 9792 03ac 474B     		ldr	r3, .L429+20
 9793 03ae 1B68     		ldr	r3, [r3]
 9794 03b0 474A     		ldr	r2, .L429+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 220


 9795 03b2 1360     		str	r3, [r2]
2574:main.c        ****     if (editMode)
 9796              		.loc 1 2574 0
 9797 03b4 434B     		ldr	r3, .L429+12
 9798 03b6 1B68     		ldr	r3, [r3]
 9799 03b8 002B     		cmp	r3, #0
 9800 03ba 00F04381 		beq	.L426
2575:main.c        ****     {
2576:main.c        ****         if (encoderWatch)
 9801              		.loc 1 2576 0
 9802 03be 454B     		ldr	r3, .L429+28
 9803 03c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9804 03c2 002B     		cmp	r3, #0
 9805 03c4 00F03E81 		beq	.L426
 9806              	.LBB57:
2577:main.c        ****         {
2578:main.c        ****             int8_t currentEncoderVal = Decoder_1_GetPosition();
 9807              		.loc 1 2578 0
 9808 03c8 FFF7FEFF 		bl	Decoder_1_GetPosition
 9809 03cc 0346     		mov	r3, r0
 9810 03ce BB71     		strb	r3, [r7, #6]
2579:main.c        ****             if (menuPosition[0][0] == TransposeMenu) //editing transpose
 9811              		.loc 1 2579 0
 9812 03d0 414B     		ldr	r3, .L429+32
 9813 03d2 93F90030 		ldrsb	r3, [r3]
 9814 03d6 052B     		cmp	r3, #5
 9815 03d8 40F03181 		bne	.L410
2580:main.c        ****             {
2581:main.c        ****                 if (prevEncoderVal != currentEncoderVal)
 9816              		.loc 1 2581 0
 9817 03dc 3F4B     		ldr	r3, .L429+36
 9818 03de 93F90030 		ldrsb	r3, [r3]
 9819 03e2 97F90620 		ldrsb	r2, [r7, #6]
 9820 03e6 9A42     		cmp	r2, r3
 9821 03e8 00F02981 		beq	.L410
 9822              	.LBB58:
2582:main.c        ****                 {
2583:main.c        ****                    // OLEDclear(128, 64);
2584:main.c        ****                     myGFX_setFont(2);
 9823              		.loc 1 2584 0
 9824 03ec 0220     		movs	r0, #2
 9825 03ee FFF7FEFF 		bl	myGFX_setFont
2585:main.c        ****                     OLEDtextColor(1, 0);
 9826              		.loc 1 2585 0
 9827 03f2 0021     		movs	r1, #0
 9828 03f4 0120     		movs	r0, #1
 9829 03f6 FFF7FEFF 		bl	OLEDtextColor
2586:main.c        ****                     OLEDclearLine(ThirdLine);
 9830              		.loc 1 2586 0
 9831 03fa 0220     		movs	r0, #2
 9832 03fc FFF7FEFF 		bl	OLEDclearLine
2587:main.c        ****                     OLEDclearLine(FourthLine);
 9833              		.loc 1 2587 0
 9834 0400 0320     		movs	r0, #3
 9835 0402 FFF7FEFF 		bl	OLEDclearLine
2588:main.c        ****                     float theMultiplier = 1.0f;
 9836              		.loc 1 2588 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 221


 9837 0406 4FF07E53 		mov	r3, #1065353216
 9838 040a FB60     		str	r3, [r7, #12]	@ float
2589:main.c        ****                     if (semitonesOrCents == 1)
 9839              		.loc 1 2589 0
 9840 040c 344B     		ldr	r3, .L429+40
 9841 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9842 0410 012B     		cmp	r3, #1
 9843 0412 01D1     		bne	.L411
2590:main.c        ****                     {
2591:main.c        ****                         theMultiplier = 0.01f;
 9844              		.loc 1 2591 0
 9845 0414 334B     		ldr	r3, .L429+44
 9846 0416 FB60     		str	r3, [r7, #12]	@ float
 9847              	.L411:
2592:main.c        ****                     }
2593:main.c        ****                     myGFX_setFont(1);
 9848              		.loc 1 2593 0
 9849 0418 0120     		movs	r0, #1
 9850 041a FFF7FEFF 		bl	myGFX_setFont
2594:main.c        ****                     transposeFloat = transposeFloat - (((float)Decoder_1_GetPosition()) * theMultip
 9851              		.loc 1 2594 0
 9852 041e 324B     		ldr	r3, .L429+48
 9853 0420 1C68     		ldr	r4, [r3]	@ float
 9854 0422 FFF7FEFF 		bl	Decoder_1_GetPosition
 9855 0426 0346     		mov	r3, r0
 9856 0428 1846     		mov	r0, r3
 9857 042a FFF7FEFF 		bl	__aeabi_i2f
 9858 042e 0346     		mov	r3, r0
 9859 0430 F968     		ldr	r1, [r7, #12]	@ float
 9860 0432 1846     		mov	r0, r3
 9861 0434 FFF7FEFF 		bl	__aeabi_fmul
 9862 0438 0346     		mov	r3, r0
 9863 043a 1946     		mov	r1, r3
 9864 043c 2046     		mov	r0, r4
 9865 043e FFF7FEFF 		bl	__aeabi_fsub
 9866 0442 0346     		mov	r3, r0
 9867 0444 1A46     		mov	r2, r3
 9868 0446 284B     		ldr	r3, .L429+48
 9869 0448 1A60     		str	r2, [r3]	@ float
2595:main.c        ****                     Decoder_1_SetPosition(0);
 9870              		.loc 1 2595 0
 9871 044a 0020     		movs	r0, #0
 9872 044c FFF7FEFF 		bl	Decoder_1_SetPosition
2596:main.c        ****                     if (transposeFloat < -12.0)
 9873              		.loc 1 2596 0
 9874 0450 254B     		ldr	r3, .L429+48
 9875 0452 1B68     		ldr	r3, [r3]	@ float
 9876 0454 2549     		ldr	r1, .L429+52
 9877 0456 1846     		mov	r0, r3
 9878 0458 FFF7FEFF 		bl	__aeabi_fcmplt
 9879 045c 0346     		mov	r3, r0
 9880 045e 002B     		cmp	r3, #0
 9881 0460 03D0     		beq	.L424
2597:main.c        ****                     {
2598:main.c        ****                         transposeFloat = -12.0;
 9882              		.loc 1 2598 0
 9883 0462 214B     		ldr	r3, .L429+48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 222


 9884 0464 214A     		ldr	r2, .L429+52
 9885 0466 1A60     		str	r2, [r3]	@ float
 9886 0468 0BE0     		b	.L414
 9887              	.L424:
2599:main.c        ****                     }
2600:main.c        ****                     else if (transposeFloat > 12.0)
 9888              		.loc 1 2600 0
 9889 046a 1F4B     		ldr	r3, .L429+48
 9890 046c 1B68     		ldr	r3, [r3]	@ float
 9891 046e 2049     		ldr	r1, .L429+56
 9892 0470 1846     		mov	r0, r3
 9893 0472 FFF7FEFF 		bl	__aeabi_fcmpgt
 9894 0476 0346     		mov	r3, r0
 9895 0478 002B     		cmp	r3, #0
 9896 047a 02D0     		beq	.L414
2601:main.c        ****                     {
2602:main.c        ****                         transposeFloat = 12.0;
 9897              		.loc 1 2602 0
 9898 047c 1A4B     		ldr	r3, .L429+48
 9899 047e 1C4A     		ldr	r2, .L429+56
 9900 0480 1A60     		str	r2, [r3]	@ float
 9901              	.L414:
2603:main.c        ****                     }
2604:main.c        ****                     float absTransposeFloat = transposeFloat;
 9902              		.loc 1 2604 0
 9903 0482 194B     		ldr	r3, .L429+48
 9904 0484 1B68     		ldr	r3, [r3]	@ float
 9905 0486 BB60     		str	r3, [r7, #8]	@ float
2605:main.c        ****                     GFXsetCursor(&theGFX, 20,53);
 9906              		.loc 1 2605 0
 9907 0488 3522     		movs	r2, #53
 9908 048a 1421     		movs	r1, #20
 9909 048c 1948     		ldr	r0, .L429+60
 9910 048e FFF7FEFF 		bl	GFXsetCursor
2606:main.c        ****                     if (transposeFloat < 0.0f)
 9911              		.loc 1 2606 0
 9912 0492 154B     		ldr	r3, .L429+48
 9913 0494 1B68     		ldr	r3, [r3]	@ float
 9914 0496 4FF00001 		mov	r1, #0
 9915 049a 1846     		mov	r0, r3
 9916 049c FFF7FEFF 		bl	__aeabi_fcmplt
 9917 04a0 0346     		mov	r3, r0
 9918 04a2 002B     		cmp	r3, #0
 9919 04a4 28D0     		beq	.L425
2607:main.c        ****                     {
2608:main.c        ****                         GFXwrite(&theGFX, 45);
 9920              		.loc 1 2608 0
 9921 04a6 2D21     		movs	r1, #45
 9922 04a8 1248     		ldr	r0, .L429+60
 9923 04aa FFF7FEFF 		bl	GFXwrite
2609:main.c        ****                         absTransposeFloat = -absTransposeFloat;
 9924              		.loc 1 2609 0
 9925 04ae BB68     		ldr	r3, [r7, #8]
 9926 04b0 83F00043 		eor	r3, r3, #-2147483648
 9927 04b4 BB60     		str	r3, [r7, #8]	@ float
 9928 04b6 23E0     		b	.L418
 9929              	.L430:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 223


 9930              		.align	2
 9931              	.L429:
 9932 04b8 00000000 		.word	button3Up
 9933 04bc 00000000 		.word	button4Up
 9934 04c0 00000000 		.word	editUp
 9935 04c4 00000000 		.word	editMode
 9936 04c8 00000000 		.word	encoderUp
 9937 04cc 00000000 		.word	octave
 9938 04d0 00000000 		.word	prevOctave
 9939 04d4 00000000 		.word	encoderWatch
 9940 04d8 00000000 		.word	menuPosition
 9941 04dc 00000000 		.word	prevEncoderVal
 9942 04e0 00000000 		.word	semitonesOrCents
 9943 04e4 0AD7233C 		.word	1008981770
 9944 04e8 00000000 		.word	transposeFloat
 9945 04ec 000040C1 		.word	-1052770304
 9946 04f0 00004041 		.word	1094713344
 9947 04f4 00000000 		.word	theGFX
 9948              	.L425:
2610:main.c        ****                     }
2611:main.c        ****                     else
2612:main.c        ****                     {
2613:main.c        ****                         GFXwrite(&theGFX, 32);
 9949              		.loc 1 2613 0
 9950 04f8 2021     		movs	r1, #32
 9951 04fa 5448     		ldr	r0, .L431
 9952 04fc FFF7FEFF 		bl	GFXwrite
 9953              	.L418:
2614:main.c        ****                     }
2615:main.c        ****                     if (!semitonesOrCents)
 9954              		.loc 1 2615 0
 9955 0500 534B     		ldr	r3, .L431+4
 9956 0502 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9957 0504 002B     		cmp	r3, #0
 9958 0506 0ED1     		bne	.L419
2616:main.c        ****                     {
2617:main.c        ****                         OLEDtextColor(0, 1);
 9959              		.loc 1 2617 0
 9960 0508 0121     		movs	r1, #1
 9961 050a 0020     		movs	r0, #0
 9962 050c FFF7FEFF 		bl	OLEDtextColor
2618:main.c        ****                         GFXfillRect(&theGFX, 32, 34, 30, 25, theGFX.textbgcolor);
 9963              		.loc 1 2618 0
 9964 0510 4E4B     		ldr	r3, .L431
 9965 0512 5B8A     		ldrh	r3, [r3, #18]
 9966 0514 0193     		str	r3, [sp, #4]
 9967 0516 1923     		movs	r3, #25
 9968 0518 0093     		str	r3, [sp]
 9969 051a 1E23     		movs	r3, #30
 9970 051c 2222     		movs	r2, #34
 9971 051e 2021     		movs	r1, #32
 9972 0520 4A48     		ldr	r0, .L431
 9973 0522 FFF7FEFF 		bl	GFXfillRect
 9974              	.L419:
2619:main.c        ****                     }
2620:main.c        **** 
2621:main.c        ****                     uint8_t currentChar = ((uint8_t)(absTransposeFloat / 10.0f));  
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 224


 9975              		.loc 1 2621 0
 9976 0526 4B49     		ldr	r1, .L431+8
 9977 0528 B868     		ldr	r0, [r7, #8]	@ float
 9978 052a FFF7FEFF 		bl	__aeabi_fdiv
 9979 052e 0346     		mov	r3, r0
 9980 0530 1846     		mov	r0, r3
 9981 0532 FFF7FEFF 		bl	__aeabi_f2uiz
 9982 0536 0346     		mov	r3, r0
 9983 0538 7B71     		strb	r3, [r7, #5]
2622:main.c        ****                     absTransposeFloat -= currentChar * 10.0f;
 9984              		.loc 1 2622 0
 9985 053a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 9986 053c 1846     		mov	r0, r3
 9987 053e FFF7FEFF 		bl	__aeabi_i2f
 9988 0542 0346     		mov	r3, r0
 9989 0544 4349     		ldr	r1, .L431+8
 9990 0546 1846     		mov	r0, r3
 9991 0548 FFF7FEFF 		bl	__aeabi_fmul
 9992 054c 0346     		mov	r3, r0
 9993 054e 1946     		mov	r1, r3
 9994 0550 B868     		ldr	r0, [r7, #8]	@ float
 9995 0552 FFF7FEFF 		bl	__aeabi_fsub
 9996 0556 0346     		mov	r3, r0
 9997 0558 BB60     		str	r3, [r7, #8]	@ float
2623:main.c        ****                     GFXwrite(&theGFX, currentChar + 48);
 9998              		.loc 1 2623 0
 9999 055a 7B79     		ldrb	r3, [r7, #5]
 10000 055c 3033     		adds	r3, r3, #48
 10001 055e DBB2     		uxtb	r3, r3
 10002 0560 1946     		mov	r1, r3
 10003 0562 3A48     		ldr	r0, .L431
 10004 0564 FFF7FEFF 		bl	GFXwrite
2624:main.c        ****                     currentChar = ((uint8_t)absTransposeFloat);    
 10005              		.loc 1 2624 0
 10006 0568 B868     		ldr	r0, [r7, #8]	@ float
 10007 056a FFF7FEFF 		bl	__aeabi_f2uiz
 10008 056e 0346     		mov	r3, r0
 10009 0570 7B71     		strb	r3, [r7, #5]
2625:main.c        ****                     GFXwrite(&theGFX, currentChar + 48);
 10010              		.loc 1 2625 0
 10011 0572 7B79     		ldrb	r3, [r7, #5]
 10012 0574 3033     		adds	r3, r3, #48
 10013 0576 DBB2     		uxtb	r3, r3
 10014 0578 1946     		mov	r1, r3
 10015 057a 3448     		ldr	r0, .L431
 10016 057c FFF7FEFF 		bl	GFXwrite
2626:main.c        ****                     OLEDtextColor(1, 0);
 10017              		.loc 1 2626 0
 10018 0580 0021     		movs	r1, #0
 10019 0582 0120     		movs	r0, #1
 10020 0584 FFF7FEFF 		bl	OLEDtextColor
2627:main.c        **** 
2628:main.c        ****                     GFXwrite(&theGFX, 46); //decimal point
 10021              		.loc 1 2628 0
 10022 0588 2E21     		movs	r1, #46
 10023 058a 3048     		ldr	r0, .L431
 10024 058c FFF7FEFF 		bl	GFXwrite
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 225


2629:main.c        ****                     if (semitonesOrCents)
 10025              		.loc 1 2629 0
 10026 0590 2F4B     		ldr	r3, .L431+4
 10027 0592 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10028 0594 002B     		cmp	r3, #0
 10029 0596 0ED0     		beq	.L420
2630:main.c        ****                     {
2631:main.c        ****                         OLEDtextColor(0, 1);
 10030              		.loc 1 2631 0
 10031 0598 0121     		movs	r1, #1
 10032 059a 0020     		movs	r0, #0
 10033 059c FFF7FEFF 		bl	OLEDtextColor
2632:main.c        ****                         GFXfillRect(&theGFX, 70, 34, 30, 25, theGFX.textbgcolor);
 10034              		.loc 1 2632 0
 10035 05a0 2A4B     		ldr	r3, .L431
 10036 05a2 5B8A     		ldrh	r3, [r3, #18]
 10037 05a4 0193     		str	r3, [sp, #4]
 10038 05a6 1923     		movs	r3, #25
 10039 05a8 0093     		str	r3, [sp]
 10040 05aa 1E23     		movs	r3, #30
 10041 05ac 2222     		movs	r2, #34
 10042 05ae 4621     		movs	r1, #70
 10043 05b0 2648     		ldr	r0, .L431
 10044 05b2 FFF7FEFF 		bl	GFXfillRect
 10045              	.L420:
2633:main.c        ****                     }
2634:main.c        ****                     absTransposeFloat -= currentChar;
 10046              		.loc 1 2634 0
 10047 05b6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 10048 05b8 1846     		mov	r0, r3
 10049 05ba FFF7FEFF 		bl	__aeabi_i2f
 10050 05be 0346     		mov	r3, r0
 10051 05c0 1946     		mov	r1, r3
 10052 05c2 B868     		ldr	r0, [r7, #8]	@ float
 10053 05c4 FFF7FEFF 		bl	__aeabi_fsub
 10054 05c8 0346     		mov	r3, r0
 10055 05ca BB60     		str	r3, [r7, #8]	@ float
2635:main.c        ****                     currentChar = ((uint8_t)(absTransposeFloat*10.0f));    
 10056              		.loc 1 2635 0
 10057 05cc 2149     		ldr	r1, .L431+8
 10058 05ce B868     		ldr	r0, [r7, #8]	@ float
 10059 05d0 FFF7FEFF 		bl	__aeabi_fmul
 10060 05d4 0346     		mov	r3, r0
 10061 05d6 1846     		mov	r0, r3
 10062 05d8 FFF7FEFF 		bl	__aeabi_f2uiz
 10063 05dc 0346     		mov	r3, r0
 10064 05de 7B71     		strb	r3, [r7, #5]
2636:main.c        ****                     GFXwrite(&theGFX, currentChar + 48);
 10065              		.loc 1 2636 0
 10066 05e0 7B79     		ldrb	r3, [r7, #5]
 10067 05e2 3033     		adds	r3, r3, #48
 10068 05e4 DBB2     		uxtb	r3, r3
 10069 05e6 1946     		mov	r1, r3
 10070 05e8 1848     		ldr	r0, .L431
 10071 05ea FFF7FEFF 		bl	GFXwrite
2637:main.c        ****                     absTransposeFloat -= (currentChar/10.0f);
 10072              		.loc 1 2637 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 226


 10073 05ee 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 10074 05f0 1846     		mov	r0, r3
 10075 05f2 FFF7FEFF 		bl	__aeabi_i2f
 10076 05f6 0346     		mov	r3, r0
 10077 05f8 1649     		ldr	r1, .L431+8
 10078 05fa 1846     		mov	r0, r3
 10079 05fc FFF7FEFF 		bl	__aeabi_fdiv
 10080 0600 0346     		mov	r3, r0
 10081 0602 1946     		mov	r1, r3
 10082 0604 B868     		ldr	r0, [r7, #8]	@ float
 10083 0606 FFF7FEFF 		bl	__aeabi_fsub
 10084 060a 0346     		mov	r3, r0
 10085 060c BB60     		str	r3, [r7, #8]	@ float
2638:main.c        ****                     currentChar = ((uint8_t)(absTransposeFloat*100.0f));    
 10086              		.loc 1 2638 0
 10087 060e 1249     		ldr	r1, .L431+12
 10088 0610 B868     		ldr	r0, [r7, #8]	@ float
 10089 0612 FFF7FEFF 		bl	__aeabi_fmul
 10090 0616 0346     		mov	r3, r0
 10091 0618 1846     		mov	r0, r3
 10092 061a FFF7FEFF 		bl	__aeabi_f2uiz
 10093 061e 0346     		mov	r3, r0
 10094 0620 7B71     		strb	r3, [r7, #5]
2639:main.c        ****                     GFXwrite(&theGFX, currentChar + 48);
 10095              		.loc 1 2639 0
 10096 0622 7B79     		ldrb	r3, [r7, #5]
 10097 0624 3033     		adds	r3, r3, #48
 10098 0626 DBB2     		uxtb	r3, r3
 10099 0628 1946     		mov	r1, r3
 10100 062a 0848     		ldr	r0, .L431
 10101 062c FFF7FEFF 		bl	GFXwrite
2640:main.c        ****                     OLEDtextColor(1, 0);
 10102              		.loc 1 2640 0
 10103 0630 0021     		movs	r1, #0
 10104 0632 0120     		movs	r0, #1
 10105 0634 FFF7FEFF 		bl	OLEDtextColor
2641:main.c        ****                     mainOLEDWaitingToSend = 1;
 10106              		.loc 1 2641 0
 10107 0638 084B     		ldr	r3, .L431+16
 10108 063a 0122     		movs	r2, #1
 10109 063c 1A60     		str	r2, [r3]
 10110              	.L410:
 10111              	.LBE58:
2642:main.c        ****                 }
2643:main.c        ****             }
2644:main.c        ****             prevEncoderVal = currentEncoderVal;
 10112              		.loc 1 2644 0
 10113 063e 084A     		ldr	r2, .L431+20
 10114 0640 BB79     		ldrb	r3, [r7, #6]
 10115 0642 1370     		strb	r3, [r2]
 10116              	.L426:
 10117              	.LBE57:
2645:main.c        ****         }
2646:main.c        ****     }
2647:main.c        ****     
2648:main.c        **** }
 10118              		.loc 1 2648 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 227


 10119 0644 00BF     		nop
 10120 0646 1437     		adds	r7, r7, #20
 10121              		.cfi_def_cfa_offset 12
 10122 0648 BD46     		mov	sp, r7
 10123              		.cfi_def_cfa_register 13
 10124              		@ sp needed
 10125 064a 90BD     		pop	{r4, r7, pc}
 10126              	.L432:
 10127              		.align	2
 10128              	.L431:
 10129 064c 00000000 		.word	theGFX
 10130 0650 00000000 		.word	semitonesOrCents
 10131 0654 00002041 		.word	1092616192
 10132 0658 0000C842 		.word	1120403456
 10133 065c 00000000 		.word	mainOLEDWaitingToSend
 10134 0660 00000000 		.word	prevEncoderVal
 10135              		.cfi_endproc
 10136              	.LFE94:
 10137              		.size	scanUI, .-scanUI
 10138              		.global	calibrationNames
 10139              		.section	.rodata
 10140 042a 0000     		.align	2
 10141              	.LC4:
 10142 042c 20205345 		.ascii	"  SET LEVERS \000"
 10142      54204C45 
 10142      56455253 
 10142      2000
 10143 043a 0000     		.align	2
 10144              	.LC5:
 10145 043c 20205345 		.ascii	"  SET FRETS  \000"
 10145      54204652 
 10145      45545320 
 10145      2000
 10146 044a 0000     		.align	2
 10147              		.type	calibrationNames, %object
 10148              		.size	calibrationNames, 12
 10149              	calibrationNames:
 10150 044c 2C040000 		.word	.LC4
 10151 0450 3C040000 		.word	.LC5
 10152 0454 00000000 		.word	0
 10153              		.global	mainMenuNames
 10154              		.align	2
 10155              	.LC6:
 10156 0458 20204341 		.ascii	"  CALIBRATION\000"
 10156      4C494252 
 10156      4154494F 
 10156      4E00
 10157 0466 0000     		.align	2
 10158              	.LC7:
 10159 0468 20205345 		.ascii	"  SETTINGS   \000"
 10159      5454494E 
 10159      47532020 
 10159      2000
 10160 0476 0000     		.align	2
 10161              		.type	mainMenuNames, %object
 10162              		.size	mainMenuNames, 12
 10163              	mainMenuNames:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 228


 10164 0478 58040000 		.word	.LC6
 10165 047c 68040000 		.word	.LC7
 10166 0480 00000000 		.word	0
 10167              		.global	settingsNames
 10168              		.align	2
 10169              	.LC8:
 10170 0484 20205452 		.ascii	"  TRANSPOSE  \000"
 10170      414E5350 
 10170      4F534520 
 10170      2000
 10171 0492 0000     		.align	2
 10172              	.LC9:
 10173 0494 20204F43 		.ascii	"  OCTAVE ACTION\000"
 10173      54415645 
 10173      20414354 
 10173      494F4E00 
 10174              		.align	2
 10175              	.LC10:
 10176 04a4 20204445 		.ascii	"  DEADZONES    \000"
 10176      41445A4F 
 10176      4E455320 
 10176      20202000 
 10177              		.align	2
 10178              	.LC11:
 10179 04b4 2020534C 		.ascii	"  SLIDER REPR \000"
 10179      49444552 
 10179      20524550 
 10179      522000
 10180 04c3 00       		.align	2
 10181              	.LC12:
 10182 04c4 2020534D 		.ascii	"  SMOOTHING   \000"
 10182      4F4F5448 
 10182      494E4720 
 10182      202000
 10183 04d3 00       		.align	2
 10184              	.LC13:
 10185 04d4 20204D49 		.ascii	"  MIDI SEND  \000"
 10185      44492053 
 10185      454E4420 
 10185      2000
 10186 04e2 0000     		.align	2
 10187              		.type	settingsNames, %object
 10188              		.size	settingsNames, 28
 10189              	settingsNames:
 10190 04e4 84040000 		.word	.LC8
 10191 04e8 94040000 		.word	.LC9
 10192 04ec A4040000 		.word	.LC10
 10193 04f0 B4040000 		.word	.LC11
 10194 04f4 C4040000 		.word	.LC12
 10195 04f8 D4040000 		.word	.LC13
 10196 04fc 00000000 		.word	0
 10197              		.global	numMainMenuItems
 10198              		.data
 10199              		.type	numMainMenuItems, %object
 10200              		.size	numMainMenuItems, 1
 10201              	numMainMenuItems:
 10202 00c2 02       		.byte	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 229


 10203              		.global	numCalibrationItems
 10204              		.type	numCalibrationItems, %object
 10205              		.size	numCalibrationItems, 1
 10206              	numCalibrationItems:
 10207 00c3 02       		.byte	2
 10208              		.global	numSettingsItems
 10209              		.type	numSettingsItems, %object
 10210              		.size	numSettingsItems, 1
 10211              	numSettingsItems:
 10212 00c4 06       		.byte	6
 10213              		.section	.rodata
 10214              		.align	2
 10215              	.LC14:
 10216 0500 20204341 		.ascii	"  CALIBRATION     \000"
 10216      4C494252 
 10216      4154494F 
 10216      4E202020 
 10216      202000
 10217 0513 00       		.align	2
 10218              	.LC15:
 10219 0514 20205345 		.ascii	"  SETTINGS       \000"
 10219      5454494E 
 10219      47532020 
 10219      20202020 
 10219      2000
 10220              		.section	.text.enterEditModeMenu,"ax",%progbits
 10221              		.align	2
 10222              		.global	enterEditModeMenu
 10223              		.thumb
 10224              		.thumb_func
 10225              		.type	enterEditModeMenu, %function
 10226              	enterEditModeMenu:
 10227              	.LFB95:
2649:main.c        **** 
2650:main.c        **** 
2651:main.c        **** 
2652:main.c        **** 
2653:main.c        **** const char* const calibrationNames[] = { "  SET LEVERS ", "  SET FRETS  ", 0 }; 
2654:main.c        **** const char* const mainMenuNames[] =    { "  CALIBRATION", "  SETTINGS   ", 0 }; 
2655:main.c        **** const char* const settingsNames[] =   { "  TRANSPOSE  ", "  OCTAVE ACTION", "  DEADZONES    ", "  S
2656:main.c        **** uint8_t numMainMenuItems = 2;
2657:main.c        **** uint8_t numCalibrationItems = 2;
2658:main.c        **** uint8_t numSettingsItems = 6;
2659:main.c        **** 
2660:main.c        **** void enterEditModeMenu(void)
2661:main.c        **** {
 10228              		.loc 1 2661 0
 10229              		.cfi_startproc
 10230              		@ args = 0, pretend = 0, frame = 0
 10231              		@ frame_needed = 1, uses_anonymous_args = 0
 10232 0000 80B5     		push	{r7, lr}
 10233              		.cfi_def_cfa_offset 8
 10234              		.cfi_offset 7, -8
 10235              		.cfi_offset 14, -4
 10236 0002 00AF     		add	r7, sp, #0
 10237              		.cfi_def_cfa_register 7
2662:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 230


2663:main.c        ****     OLEDclear(128, 64);
 10238              		.loc 1 2663 0
 10239 0004 4021     		movs	r1, #64
 10240 0006 8020     		movs	r0, #128
 10241 0008 FFF7FEFF 		bl	OLEDclear
2664:main.c        ****     myGFX_setFont(2);
 10242              		.loc 1 2664 0
 10243 000c 0220     		movs	r0, #2
 10244 000e FFF7FEFF 		bl	myGFX_setFont
2665:main.c        ****     OLEDtextColor(0, 1);
 10245              		.loc 1 2665 0
 10246 0012 0121     		movs	r1, #1
 10247 0014 0020     		movs	r0, #0
 10248 0016 FFF7FEFF 		bl	OLEDtextColor
2666:main.c        ****     OLEDwriteString("  CALIBRATION     ", 15, 0, FirstLine);
 10249              		.loc 1 2666 0
 10250 001a 0023     		movs	r3, #0
 10251 001c 0022     		movs	r2, #0
 10252 001e 0F21     		movs	r1, #15
 10253 0020 1A48     		ldr	r0, .L434
 10254 0022 FFF7FEFF 		bl	OLEDwriteString
2667:main.c        ****     OLEDwriteArrow(0, FirstLine);
 10255              		.loc 1 2667 0
 10256 0026 0021     		movs	r1, #0
 10257 0028 0020     		movs	r0, #0
 10258 002a FFF7FEFF 		bl	OLEDwriteArrow
2668:main.c        ****     OLEDtextColor(1, 0);
 10259              		.loc 1 2668 0
 10260 002e 0021     		movs	r1, #0
 10261 0030 0120     		movs	r0, #1
 10262 0032 FFF7FEFF 		bl	OLEDtextColor
2669:main.c        ****     OLEDwriteString("  SETTINGS       ", 15, 0, SecondLine);
 10263              		.loc 1 2669 0
 10264 0036 0123     		movs	r3, #1
 10265 0038 0022     		movs	r2, #0
 10266 003a 0F21     		movs	r1, #15
 10267 003c 1448     		ldr	r0, .L434+4
 10268 003e FFF7FEFF 		bl	OLEDwriteString
2670:main.c        ****     OLEDtextColor(1, 0);
 10269              		.loc 1 2670 0
 10270 0042 0021     		movs	r1, #0
 10271 0044 0120     		movs	r0, #1
 10272 0046 FFF7FEFF 		bl	OLEDtextColor
2671:main.c        ****     mainOLEDWaitingToSend = 1;
 10273              		.loc 1 2671 0
 10274 004a 124B     		ldr	r3, .L434+8
 10275 004c 0122     		movs	r2, #1
 10276 004e 1A60     		str	r2, [r3]
2672:main.c        ****     editMode = 1;
 10277              		.loc 1 2672 0
 10278 0050 114B     		ldr	r3, .L434+12
 10279 0052 0122     		movs	r2, #1
 10280 0054 1A60     		str	r2, [r3]
2673:main.c        ****     LED_red2_Write(editMode);
 10281              		.loc 1 2673 0
 10282 0056 104B     		ldr	r3, .L434+12
 10283 0058 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 231


 10284 005a DBB2     		uxtb	r3, r3
 10285 005c 1846     		mov	r0, r3
 10286 005e FFF7FEFF 		bl	LED_red2_Write
2674:main.c        ****     //initialize menu position to all zero
2675:main.c        ****     menuPosition[0][0] = 0; //x
 10287              		.loc 1 2675 0
 10288 0062 0E4B     		ldr	r3, .L434+16
 10289 0064 0022     		movs	r2, #0
 10290 0066 1A70     		strb	r2, [r3]
2676:main.c        ****     menuPosition[0][1] = 0; //y
 10291              		.loc 1 2676 0
 10292 0068 0C4B     		ldr	r3, .L434+16
 10293 006a 0022     		movs	r2, #0
 10294 006c 5A70     		strb	r2, [r3, #1]
2677:main.c        ****     menuPosition[1][0] = 0; //x
 10295              		.loc 1 2677 0
 10296 006e 0B4B     		ldr	r3, .L434+16
 10297 0070 0022     		movs	r2, #0
 10298 0072 9A70     		strb	r2, [r3, #2]
2678:main.c        ****     menuPosition[1][1] = 0; //y
 10299              		.loc 1 2678 0
 10300 0074 094B     		ldr	r3, .L434+16
 10301 0076 0022     		movs	r2, #0
 10302 0078 DA70     		strb	r2, [r3, #3]
2679:main.c        ****     menuPosition[2][0] = 0; //x
 10303              		.loc 1 2679 0
 10304 007a 084B     		ldr	r3, .L434+16
 10305 007c 0022     		movs	r2, #0
 10306 007e 1A71     		strb	r2, [r3, #4]
2680:main.c        ****     menuPosition[2][1] = 0; //y
 10307              		.loc 1 2680 0
 10308 0080 064B     		ldr	r3, .L434+16
 10309 0082 0022     		movs	r2, #0
 10310 0084 5A71     		strb	r2, [r3, #5]
2681:main.c        **** }
 10311              		.loc 1 2681 0
 10312 0086 00BF     		nop
 10313 0088 80BD     		pop	{r7, pc}
 10314              	.L435:
 10315 008a 00BF     		.align	2
 10316              	.L434:
 10317 008c 00050000 		.word	.LC14
 10318 0090 14050000 		.word	.LC15
 10319 0094 00000000 		.word	mainOLEDWaitingToSend
 10320 0098 00000000 		.word	editMode
 10321 009c 00000000 		.word	menuPosition
 10322              		.cfi_endproc
 10323              	.LFE95:
 10324              		.size	enterEditModeMenu, .-enterEditModeMenu
 10325              		.section	.text.exitEditModeMenu,"ax",%progbits
 10326              		.align	2
 10327              		.global	exitEditModeMenu
 10328              		.thumb
 10329              		.thumb_func
 10330              		.type	exitEditModeMenu, %function
 10331              	exitEditModeMenu:
 10332              	.LFB96:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 232


2682:main.c        **** 
2683:main.c        **** void exitEditModeMenu(void)
2684:main.c        **** {
 10333              		.loc 1 2684 0
 10334              		.cfi_startproc
 10335              		@ args = 0, pretend = 0, frame = 0
 10336              		@ frame_needed = 1, uses_anonymous_args = 0
 10337 0000 98B5     		push	{r3, r4, r7, lr}
 10338              		.cfi_def_cfa_offset 16
 10339              		.cfi_offset 3, -16
 10340              		.cfi_offset 4, -12
 10341              		.cfi_offset 7, -8
 10342              		.cfi_offset 14, -4
 10343 0002 00AF     		add	r7, sp, #0
 10344              		.cfi_def_cfa_register 7
2685:main.c        ****     
2686:main.c        ****     if (leverCalibrationMode == 1)
 10345              		.loc 1 2686 0
 10346 0004 2B4B     		ldr	r3, .L440
 10347 0006 1B68     		ldr	r3, [r3]
 10348 0008 012B     		cmp	r3, #1
 10349 000a 01D1     		bne	.L437
2687:main.c        ****     {
2688:main.c        ****         exitLeverCalibrationMode();
 10350              		.loc 1 2688 0
 10351 000c FFF7FEFF 		bl	exitLeverCalibrationMode
 10352              	.L437:
2689:main.c        ****     }
2690:main.c        ****     if (fretCalibrationMode == 1)
 10353              		.loc 1 2690 0
 10354 0010 294B     		ldr	r3, .L440+4
 10355 0012 1B68     		ldr	r3, [r3]
 10356 0014 012B     		cmp	r3, #1
 10357 0016 01D1     		bne	.L438
2691:main.c        ****     {
2692:main.c        ****         exitFretCalibrationMode();
 10358              		.loc 1 2692 0
 10359 0018 FFF7FEFF 		bl	exitFretCalibrationMode
 10360              	.L438:
2693:main.c        ****     }
2694:main.c        ****     if (menuPosition[0][0] == TransposeMenu)
 10361              		.loc 1 2694 0
 10362 001c 274B     		ldr	r3, .L440+8
 10363 001e 93F90030 		ldrsb	r3, [r3]
 10364 0022 052B     		cmp	r3, #5
 10365 0024 34D1     		bne	.L439
2695:main.c        ****     {
2696:main.c        ****         transposeSemitones = (int8_t)transposeFloat;
 10366              		.loc 1 2696 0
 10367 0026 264B     		ldr	r3, .L440+12
 10368 0028 1B68     		ldr	r3, [r3]	@ float
 10369 002a 1846     		mov	r0, r3
 10370 002c FFF7FEFF 		bl	__aeabi_f2iz
 10371 0030 0346     		mov	r3, r0
 10372 0032 5AB2     		sxtb	r2, r3
 10373 0034 234B     		ldr	r3, .L440+16
 10374 0036 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 233


2697:main.c        ****         transposeCents = (int8_t)((transposeFloat - transposeSemitones) * 100.0f);
 10375              		.loc 1 2697 0
 10376 0038 214B     		ldr	r3, .L440+12
 10377 003a 1C68     		ldr	r4, [r3]	@ float
 10378 003c 214B     		ldr	r3, .L440+16
 10379 003e 93F90030 		ldrsb	r3, [r3]
 10380 0042 1846     		mov	r0, r3
 10381 0044 FFF7FEFF 		bl	__aeabi_i2f
 10382 0048 0346     		mov	r3, r0
 10383 004a 1946     		mov	r1, r3
 10384 004c 2046     		mov	r0, r4
 10385 004e FFF7FEFF 		bl	__aeabi_fsub
 10386 0052 0346     		mov	r3, r0
 10387 0054 1C49     		ldr	r1, .L440+20
 10388 0056 1846     		mov	r0, r3
 10389 0058 FFF7FEFF 		bl	__aeabi_fmul
 10390 005c 0346     		mov	r3, r0
 10391 005e 1846     		mov	r0, r3
 10392 0060 FFF7FEFF 		bl	__aeabi_f2iz
 10393 0064 0346     		mov	r3, r0
 10394 0066 5AB2     		sxtb	r2, r3
 10395 0068 184B     		ldr	r3, .L440+24
 10396 006a 1A70     		strb	r2, [r3]
2698:main.c        ****         EEPROM_WriteByte(transposeSemitones, EEPROM_TRANSPOSE_OFFSET);
 10397              		.loc 1 2698 0
 10398 006c 154B     		ldr	r3, .L440+16
 10399 006e 93F90030 		ldrsb	r3, [r3]
 10400 0072 DBB2     		uxtb	r3, r3
 10401 0074 40F2F471 		movw	r1, #2036
 10402 0078 1846     		mov	r0, r3
 10403 007a FFF7FEFF 		bl	EEPROM_WriteByte
2699:main.c        ****         EEPROM_WriteByte(transposeCents, EEPROM_TRANSPOSE_OFFSET + 1);
 10404              		.loc 1 2699 0
 10405 007e 134B     		ldr	r3, .L440+24
 10406 0080 93F90030 		ldrsb	r3, [r3]
 10407 0084 DBB2     		uxtb	r3, r3
 10408 0086 40F2F571 		movw	r1, #2037
 10409 008a 1846     		mov	r0, r3
 10410 008c FFF7FEFF 		bl	EEPROM_WriteByte
 10411              	.L439:
2700:main.c        ****     }
2701:main.c        ****     encoderWatch = 0;
 10412              		.loc 1 2701 0
 10413 0090 0F4B     		ldr	r3, .L440+28
 10414 0092 0022     		movs	r2, #0
 10415 0094 1A70     		strb	r2, [r3]
2702:main.c        ****     Decoder_1_Stop();
 10416              		.loc 1 2702 0
 10417 0096 FFF7FEFF 		bl	Decoder_1_Stop
2703:main.c        ****     editMode = 0;
 10418              		.loc 1 2703 0
 10419 009a 0E4B     		ldr	r3, .L440+32
 10420 009c 0022     		movs	r2, #0
 10421 009e 1A60     		str	r2, [r3]
2704:main.c        ****     LED_red2_Write(editMode);
 10422              		.loc 1 2704 0
 10423 00a0 0C4B     		ldr	r3, .L440+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 234


 10424 00a2 1B68     		ldr	r3, [r3]
 10425 00a4 DBB2     		uxtb	r3, r3
 10426 00a6 1846     		mov	r0, r3
 10427 00a8 FFF7FEFF 		bl	LED_red2_Write
2705:main.c        ****     displayCurrentPresetNameAndCopedent();
 10428              		.loc 1 2705 0
 10429 00ac FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
2706:main.c        **** }
 10430              		.loc 1 2706 0
 10431 00b0 00BF     		nop
 10432 00b2 98BD     		pop	{r3, r4, r7, pc}
 10433              	.L441:
 10434              		.align	2
 10435              	.L440:
 10436 00b4 00000000 		.word	leverCalibrationMode
 10437 00b8 00000000 		.word	fretCalibrationMode
 10438 00bc 00000000 		.word	menuPosition
 10439 00c0 00000000 		.word	transposeFloat
 10440 00c4 00000000 		.word	transposeSemitones
 10441 00c8 0000C842 		.word	1120403456
 10442 00cc 00000000 		.word	transposeCents
 10443 00d0 00000000 		.word	encoderWatch
 10444 00d4 00000000 		.word	editMode
 10445              		.cfi_endproc
 10446              	.LFE96:
 10447              		.size	exitEditModeMenu, .-exitEditModeMenu
 10448              		.global	fretToCalibrate
 10449              		.bss
 10450              		.type	fretToCalibrate, %object
 10451              		.size	fretToCalibrate, 1
 10452              	fretToCalibrate:
 10453 0134 00       		.space	1
 10454              		.global	whichFretArray
 10455              		.data
 10456 00c5 000000   		.align	2
 10457              		.type	whichFretArray, %object
 10458              		.size	whichFretArray, 12
 10459              	whichFretArray:
 10460 00c8 00       		.byte	0
 10461 00c9 01       		.byte	1
 10462 00ca 03       		.byte	3
 10463 00cb 05       		.byte	5
 10464 00cc 07       		.byte	7
 10465 00cd 09       		.byte	9
 10466 00ce 0C       		.byte	12
 10467 00cf 0F       		.byte	15
 10468 00d0 11       		.byte	17
 10469 00d1 13       		.byte	19
 10470 00d2 15       		.byte	21
 10471 00d3 18       		.byte	24
 10472              		.section	.rodata
 10473 0526 0000     		.align	2
 10474              	.LC16:
 10475 0528 55534520 		.ascii	"USE VALUE KNOB\000"
 10475      56414C55 
 10475      45204B4E 
 10475      4F4200
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 235


 10476 0537 00       		.align	2
 10477              	.LC17:
 10478 0538 544F2053 		.ascii	"TO SET TRANSP \000"
 10478      45542054 
 10478      52414E53 
 10478      502000
 10479 0547 00       		.align	2
 10480              	.LC18:
 10481 0548 4E4F5720 		.ascii	"NOW PUT ALL\000"
 10481      50555420 
 10481      414C4C00 
 10482              		.align	2
 10483              	.LC19:
 10484 0554 50454441 		.ascii	"PEDALS/LEVERS  \000"
 10484      4C532F4C 
 10484      45564552 
 10484      53202000 
 10485              		.align	2
 10486              	.LC20:
 10487 0564 494E2052 		.ascii	"IN RESTING STATE\000"
 10487      45535449 
 10487      4E472053 
 10487      54415445 
 10487      00
 10488 0575 000000   		.align	2
 10489              	.LC21:
 10490 0578 414E4420 		.ascii	"AND PRESS EDIT\000"
 10490      50524553 
 10490      53204544 
 10490      495400
 10491 0587 00       		.align	2
 10492              	.LC22:
 10493 0588 20202020 		.ascii	"               \000"
 10493      20202020 
 10493      20202020 
 10493      20202000 
 10494              		.section	.text.menuAction,"ax",%progbits
 10495              		.align	2
 10496              		.global	menuAction
 10497              		.thumb
 10498              		.thumb_func
 10499              		.type	menuAction, %function
 10500              	menuAction:
 10501              	.LFB97:
2707:main.c        **** 
2708:main.c        **** uint8_t fretToCalibrate = 0;
2709:main.c        **** uint8_t whichFretArray[NUM_FRET_MEASUREMENTS] = {0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24};
2710:main.c        **** void menuAction(enum direction action)
2711:main.c        **** {
 10502              		.loc 1 2711 0
 10503              		.cfi_startproc
 10504              		@ args = 0, pretend = 0, frame = 32
 10505              		@ frame_needed = 1, uses_anonymous_args = 0
 10506 0000 80B5     		push	{r7, lr}
 10507              		.cfi_def_cfa_offset 8
 10508              		.cfi_offset 7, -8
 10509              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 236


 10510 0002 88B0     		sub	sp, sp, #32
 10511              		.cfi_def_cfa_offset 40
 10512 0004 00AF     		add	r7, sp, #0
 10513              		.cfi_def_cfa_register 7
 10514 0006 0346     		mov	r3, r0
 10515 0008 FB71     		strb	r3, [r7, #7]
2712:main.c        ****     uint8_t whatToDraw = 0;
 10516              		.loc 1 2712 0
 10517 000a 0023     		movs	r3, #0
 10518 000c FB77     		strb	r3, [r7, #31]
2713:main.c        ****     
2714:main.c        ****     if (menuPosition[0][0] == MainMenu) //we are at the main menu
 10519              		.loc 1 2714 0
 10520 000e B34B     		ldr	r3, .L496
 10521 0010 93F90030 		ldrsb	r3, [r3]
 10522 0014 002B     		cmp	r3, #0
 10523 0016 4BD1     		bne	.L443
2715:main.c        ****     {
2716:main.c        ****         //if we went up or down, switch the menu item
2717:main.c        ****         if (action == Up)
 10524              		.loc 1 2717 0
 10525 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10526 001a 032B     		cmp	r3, #3
 10527 001c 13D1     		bne	.L444
2718:main.c        ****         {
2719:main.c        ****             menuPosition[0][1]--;
 10528              		.loc 1 2719 0
 10529 001e AF4B     		ldr	r3, .L496
 10530 0020 93F90130 		ldrsb	r3, [r3, #1]
 10531 0024 DBB2     		uxtb	r3, r3
 10532 0026 013B     		subs	r3, r3, #1
 10533 0028 DBB2     		uxtb	r3, r3
 10534 002a 5AB2     		sxtb	r2, r3
 10535 002c AB4B     		ldr	r3, .L496
 10536 002e 5A70     		strb	r2, [r3, #1]
2720:main.c        ****             if (menuPosition[0][1] < 0)
 10537              		.loc 1 2720 0
 10538 0030 AA4B     		ldr	r3, .L496
 10539 0032 93F90130 		ldrsb	r3, [r3, #1]
 10540 0036 002B     		cmp	r3, #0
 10541 0038 02DA     		bge	.L445
2721:main.c        ****             {
2722:main.c        ****                 menuPosition[0][1] = 0;
 10542              		.loc 1 2722 0
 10543 003a A84B     		ldr	r3, .L496
 10544 003c 0022     		movs	r2, #0
 10545 003e 5A70     		strb	r2, [r3, #1]
 10546              	.L445:
2723:main.c        ****             }
2724:main.c        ****             whatToDraw = 1;
 10547              		.loc 1 2724 0
 10548 0040 0123     		movs	r3, #1
 10549 0042 FB77     		strb	r3, [r7, #31]
 10550 0044 C2E1     		b	.L450
 10551              	.L444:
2725:main.c        ****         }
2726:main.c        ****         else if (action == Down)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 237


 10552              		.loc 1 2726 0
 10553 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10554 0048 022B     		cmp	r3, #2
 10555 004a 1AD1     		bne	.L447
2727:main.c        ****         {
2728:main.c        ****             menuPosition[0][1]++;
 10556              		.loc 1 2728 0
 10557 004c A34B     		ldr	r3, .L496
 10558 004e 93F90130 		ldrsb	r3, [r3, #1]
 10559 0052 DBB2     		uxtb	r3, r3
 10560 0054 0133     		adds	r3, r3, #1
 10561 0056 DBB2     		uxtb	r3, r3
 10562 0058 5AB2     		sxtb	r2, r3
 10563 005a A04B     		ldr	r3, .L496
 10564 005c 5A70     		strb	r2, [r3, #1]
2729:main.c        ****             if (menuPosition[0][1] >= numMainMenuItems)
 10565              		.loc 1 2729 0
 10566 005e 9F4B     		ldr	r3, .L496
 10567 0060 93F90130 		ldrsb	r3, [r3, #1]
 10568 0064 1A46     		mov	r2, r3
 10569 0066 9E4B     		ldr	r3, .L496+4
 10570 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10571 006a 9A42     		cmp	r2, r3
 10572 006c 06DB     		blt	.L448
2730:main.c        ****             {
2731:main.c        ****                 menuPosition[0][1] = numMainMenuItems-1;
 10573              		.loc 1 2731 0
 10574 006e 9C4B     		ldr	r3, .L496+4
 10575 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10576 0072 013B     		subs	r3, r3, #1
 10577 0074 DBB2     		uxtb	r3, r3
 10578 0076 5AB2     		sxtb	r2, r3
 10579 0078 984B     		ldr	r3, .L496
 10580 007a 5A70     		strb	r2, [r3, #1]
 10581              	.L448:
2732:main.c        ****             }
2733:main.c        ****             whatToDraw = 1;
 10582              		.loc 1 2733 0
 10583 007c 0123     		movs	r3, #1
 10584 007e FB77     		strb	r3, [r7, #31]
 10585 0080 A4E1     		b	.L450
 10586              	.L447:
2734:main.c        ****         }
2735:main.c        ****         else if ((action == Right) || (action == Enter))
 10587              		.loc 1 2735 0
 10588 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10589 0084 012B     		cmp	r3, #1
 10590 0086 03D0     		beq	.L449
 10591              		.loc 1 2735 0 is_stmt 0 discriminator 1
 10592 0088 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10593 008a 042B     		cmp	r3, #4
 10594 008c 40F09E81 		bne	.L450
 10595              	.L449:
2736:main.c        ****         {
2737:main.c        ****             //select this submenu from the main menu
2738:main.c        ****             menuPosition[0][0] = menuPosition[0][1]+1; //now [0][0] = 1 means calibration and [0][0
 10596              		.loc 1 2738 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 238


 10597 0090 924B     		ldr	r3, .L496
 10598 0092 93F90130 		ldrsb	r3, [r3, #1]
 10599 0096 DBB2     		uxtb	r3, r3
 10600 0098 0133     		adds	r3, r3, #1
 10601 009a DBB2     		uxtb	r3, r3
 10602 009c 5AB2     		sxtb	r2, r3
 10603 009e 8F4B     		ldr	r3, .L496
 10604 00a0 1A70     		strb	r2, [r3]
2739:main.c        ****             whatToDraw = menuPosition[0][0]+1;
 10605              		.loc 1 2739 0
 10606 00a2 8E4B     		ldr	r3, .L496
 10607 00a4 93F90030 		ldrsb	r3, [r3]
 10608 00a8 DBB2     		uxtb	r3, r3
 10609 00aa 0133     		adds	r3, r3, #1
 10610 00ac FB77     		strb	r3, [r7, #31]
 10611 00ae 8DE1     		b	.L450
 10612              	.L443:
2740:main.c        ****         }
2741:main.c        ****         //ignore left button
2742:main.c        ****     }
2743:main.c        ****     else if (menuPosition[0][0] == CalibrationMenu) //we are at the calibration submenu
 10613              		.loc 1 2743 0
 10614 00b0 8A4B     		ldr	r3, .L496
 10615 00b2 93F90030 		ldrsb	r3, [r3]
 10616 00b6 012B     		cmp	r3, #1
 10617 00b8 5ED1     		bne	.L451
2744:main.c        ****     {
2745:main.c        ****         //if we went up or down, switch the menu item
2746:main.c        ****         if (action == Up)
 10618              		.loc 1 2746 0
 10619 00ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10620 00bc 032B     		cmp	r3, #3
 10621 00be 13D1     		bne	.L452
2747:main.c        ****         {
2748:main.c        ****             menuPosition[1][1]--;
 10622              		.loc 1 2748 0
 10623 00c0 864B     		ldr	r3, .L496
 10624 00c2 93F90330 		ldrsb	r3, [r3, #3]
 10625 00c6 DBB2     		uxtb	r3, r3
 10626 00c8 013B     		subs	r3, r3, #1
 10627 00ca DBB2     		uxtb	r3, r3
 10628 00cc 5AB2     		sxtb	r2, r3
 10629 00ce 834B     		ldr	r3, .L496
 10630 00d0 DA70     		strb	r2, [r3, #3]
2749:main.c        ****             if (menuPosition[1][1] < 0)
 10631              		.loc 1 2749 0
 10632 00d2 824B     		ldr	r3, .L496
 10633 00d4 93F90330 		ldrsb	r3, [r3, #3]
 10634 00d8 002B     		cmp	r3, #0
 10635 00da 02DA     		bge	.L453
2750:main.c        ****             {
2751:main.c        ****                 menuPosition[1][1] = 0;
 10636              		.loc 1 2751 0
 10637 00dc 7F4B     		ldr	r3, .L496
 10638 00de 0022     		movs	r2, #0
 10639 00e0 DA70     		strb	r2, [r3, #3]
 10640              	.L453:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 239


2752:main.c        ****             }
2753:main.c        ****             whatToDraw = 2;
 10641              		.loc 1 2753 0
 10642 00e2 0223     		movs	r3, #2
 10643 00e4 FB77     		strb	r3, [r7, #31]
 10644 00e6 71E1     		b	.L450
 10645              	.L452:
2754:main.c        ****         }
2755:main.c        ****         else if (action == Down)
 10646              		.loc 1 2755 0
 10647 00e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10648 00ea 022B     		cmp	r3, #2
 10649 00ec 1AD1     		bne	.L455
2756:main.c        ****         {
2757:main.c        ****             menuPosition[1][1]++;
 10650              		.loc 1 2757 0
 10651 00ee 7B4B     		ldr	r3, .L496
 10652 00f0 93F90330 		ldrsb	r3, [r3, #3]
 10653 00f4 DBB2     		uxtb	r3, r3
 10654 00f6 0133     		adds	r3, r3, #1
 10655 00f8 DBB2     		uxtb	r3, r3
 10656 00fa 5AB2     		sxtb	r2, r3
 10657 00fc 774B     		ldr	r3, .L496
 10658 00fe DA70     		strb	r2, [r3, #3]
2758:main.c        ****             if (menuPosition[1][1] >= numCalibrationItems)
 10659              		.loc 1 2758 0
 10660 0100 764B     		ldr	r3, .L496
 10661 0102 93F90330 		ldrsb	r3, [r3, #3]
 10662 0106 1A46     		mov	r2, r3
 10663 0108 764B     		ldr	r3, .L496+8
 10664 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10665 010c 9A42     		cmp	r2, r3
 10666 010e 06DB     		blt	.L456
2759:main.c        ****             {
2760:main.c        ****                 menuPosition[1][1] = numCalibrationItems-1;
 10667              		.loc 1 2760 0
 10668 0110 744B     		ldr	r3, .L496+8
 10669 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10670 0114 013B     		subs	r3, r3, #1
 10671 0116 DBB2     		uxtb	r3, r3
 10672 0118 5AB2     		sxtb	r2, r3
 10673 011a 704B     		ldr	r3, .L496
 10674 011c DA70     		strb	r2, [r3, #3]
 10675              	.L456:
2761:main.c        ****             }
2762:main.c        ****             whatToDraw = 2;
 10676              		.loc 1 2762 0
 10677 011e 0223     		movs	r3, #2
 10678 0120 FB77     		strb	r3, [r7, #31]
 10679 0122 53E1     		b	.L450
 10680              	.L455:
2763:main.c        ****         }
2764:main.c        ****         else if ((action == Right) || (action == Enter))
 10681              		.loc 1 2764 0
 10682 0124 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10683 0126 012B     		cmp	r3, #1
 10684 0128 02D0     		beq	.L457
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 240


 10685              		.loc 1 2764 0 is_stmt 0 discriminator 1
 10686 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10687 012c 042B     		cmp	r3, #4
 10688 012e 19D1     		bne	.L458
 10689              	.L457:
2765:main.c        ****         {
2766:main.c        ****             if (menuPosition[1][1] == 0)
 10690              		.loc 1 2766 0 is_stmt 1
 10691 0130 6A4B     		ldr	r3, .L496
 10692 0132 93F90330 		ldrsb	r3, [r3, #3]
 10693 0136 002B     		cmp	r3, #0
 10694 0138 06D1     		bne	.L459
2767:main.c        ****             {
2768:main.c        ****                 //calibrate levers
2769:main.c        ****                 menuPosition[0][0] = CalibrateLeversMenu; //means calibrating levers now
 10695              		.loc 1 2769 0
 10696 013a 684B     		ldr	r3, .L496
 10697 013c 0322     		movs	r2, #3
 10698 013e 1A70     		strb	r2, [r3]
2770:main.c        ****                 whatToDraw = 0;
 10699              		.loc 1 2770 0
 10700 0140 0023     		movs	r3, #0
 10701 0142 FB77     		strb	r3, [r7, #31]
2771:main.c        ****                 enterLeverCalibrationMode();
 10702              		.loc 1 2771 0
 10703 0144 FFF7FEFF 		bl	enterLeverCalibrationMode
 10704              	.L459:
2772:main.c        ****             }
2773:main.c        ****             if (menuPosition[1][1] == 1)
 10705              		.loc 1 2773 0
 10706 0148 644B     		ldr	r3, .L496
 10707 014a 93F90330 		ldrsb	r3, [r3, #3]
 10708 014e 012B     		cmp	r3, #1
 10709 0150 40F03C81 		bne	.L450
2774:main.c        ****             {
2775:main.c        ****                 //calibrate bar slider frets
2776:main.c        ****                 menuPosition[0][0] = CalibrateFretsMenu; //means calibrating frets now
 10710              		.loc 1 2776 0
 10711 0154 614B     		ldr	r3, .L496
 10712 0156 0422     		movs	r2, #4
 10713 0158 1A70     		strb	r2, [r3]
2777:main.c        ****                 whatToDraw = 0;
 10714              		.loc 1 2777 0
 10715 015a 0023     		movs	r3, #0
 10716 015c FB77     		strb	r3, [r7, #31]
2778:main.c        ****                 enterFretCalibrationMode();
 10717              		.loc 1 2778 0
 10718 015e FFF7FEFF 		bl	enterFretCalibrationMode
2773:main.c        ****             {
 10719              		.loc 1 2773 0
 10720 0162 33E1     		b	.L450
 10721              	.L458:
2779:main.c        ****             }
2780:main.c        ****         }
2781:main.c        ****         else if (action == Left) 
 10722              		.loc 1 2781 0
 10723 0164 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 241


 10724 0166 002B     		cmp	r3, #0
 10725 0168 40F03081 		bne	.L450
2782:main.c        ****         {
2783:main.c        ****             //go back to main menu
2784:main.c        ****             menuPosition[0][0] = 0;
 10726              		.loc 1 2784 0
 10727 016c 5B4B     		ldr	r3, .L496
 10728 016e 0022     		movs	r2, #0
 10729 0170 1A70     		strb	r2, [r3]
2785:main.c        ****             whatToDraw = 1;
 10730              		.loc 1 2785 0
 10731 0172 0123     		movs	r3, #1
 10732 0174 FB77     		strb	r3, [r7, #31]
 10733 0176 29E1     		b	.L450
 10734              	.L451:
2786:main.c        ****         }
2787:main.c        ****     }
2788:main.c        ****     else if (menuPosition[0][0] == SettingsMenu) //we are at the settings submenu
 10735              		.loc 1 2788 0
 10736 0178 584B     		ldr	r3, .L496
 10737 017a 93F90030 		ldrsb	r3, [r3]
 10738 017e 022B     		cmp	r3, #2
 10739 0180 75D1     		bne	.L461
2789:main.c        ****     {
2790:main.c        ****         //if we went up or down, switch the menu item
2791:main.c        ****         if (action == Up)
 10740              		.loc 1 2791 0
 10741 0182 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10742 0184 032B     		cmp	r3, #3
 10743 0186 13D1     		bne	.L462
2792:main.c        ****         {
2793:main.c        ****             menuPosition[2][1]--;
 10744              		.loc 1 2793 0
 10745 0188 544B     		ldr	r3, .L496
 10746 018a 93F90530 		ldrsb	r3, [r3, #5]
 10747 018e DBB2     		uxtb	r3, r3
 10748 0190 013B     		subs	r3, r3, #1
 10749 0192 DBB2     		uxtb	r3, r3
 10750 0194 5AB2     		sxtb	r2, r3
 10751 0196 514B     		ldr	r3, .L496
 10752 0198 5A71     		strb	r2, [r3, #5]
2794:main.c        ****             if (menuPosition[2][1] < 0)
 10753              		.loc 1 2794 0
 10754 019a 504B     		ldr	r3, .L496
 10755 019c 93F90530 		ldrsb	r3, [r3, #5]
 10756 01a0 002B     		cmp	r3, #0
 10757 01a2 02DA     		bge	.L463
2795:main.c        ****             {
2796:main.c        ****                 menuPosition[2][1] = 0;
 10758              		.loc 1 2796 0
 10759 01a4 4D4B     		ldr	r3, .L496
 10760 01a6 0022     		movs	r2, #0
 10761 01a8 5A71     		strb	r2, [r3, #5]
 10762              	.L463:
2797:main.c        ****             }
2798:main.c        ****             whatToDraw = 3;
 10763              		.loc 1 2798 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 242


 10764 01aa 0323     		movs	r3, #3
 10765 01ac FB77     		strb	r3, [r7, #31]
 10766 01ae 0DE1     		b	.L450
 10767              	.L462:
2799:main.c        ****         }
2800:main.c        ****         else if (action == Down)
 10768              		.loc 1 2800 0
 10769 01b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10770 01b2 022B     		cmp	r3, #2
 10771 01b4 1AD1     		bne	.L465
2801:main.c        ****         {
2802:main.c        ****             menuPosition[2][1]++;
 10772              		.loc 1 2802 0
 10773 01b6 494B     		ldr	r3, .L496
 10774 01b8 93F90530 		ldrsb	r3, [r3, #5]
 10775 01bc DBB2     		uxtb	r3, r3
 10776 01be 0133     		adds	r3, r3, #1
 10777 01c0 DBB2     		uxtb	r3, r3
 10778 01c2 5AB2     		sxtb	r2, r3
 10779 01c4 454B     		ldr	r3, .L496
 10780 01c6 5A71     		strb	r2, [r3, #5]
2803:main.c        ****             if (menuPosition[2][1] >= numSettingsItems)
 10781              		.loc 1 2803 0
 10782 01c8 444B     		ldr	r3, .L496
 10783 01ca 93F90530 		ldrsb	r3, [r3, #5]
 10784 01ce 1A46     		mov	r2, r3
 10785 01d0 454B     		ldr	r3, .L496+12
 10786 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10787 01d4 9A42     		cmp	r2, r3
 10788 01d6 06DB     		blt	.L466
2804:main.c        ****             {
2805:main.c        ****                 menuPosition[2][1] = numSettingsItems-1;
 10789              		.loc 1 2805 0
 10790 01d8 434B     		ldr	r3, .L496+12
 10791 01da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10792 01dc 013B     		subs	r3, r3, #1
 10793 01de DBB2     		uxtb	r3, r3
 10794 01e0 5AB2     		sxtb	r2, r3
 10795 01e2 3E4B     		ldr	r3, .L496
 10796 01e4 5A71     		strb	r2, [r3, #5]
 10797              	.L466:
2806:main.c        ****             }
2807:main.c        ****             whatToDraw = 3;
 10798              		.loc 1 2807 0
 10799 01e6 0323     		movs	r3, #3
 10800 01e8 FB77     		strb	r3, [r7, #31]
 10801 01ea EFE0     		b	.L450
 10802              	.L465:
2808:main.c        ****         }
2809:main.c        ****         else if ((action == Right) || (action == Enter))
 10803              		.loc 1 2809 0
 10804 01ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10805 01ee 012B     		cmp	r3, #1
 10806 01f0 02D0     		beq	.L467
 10807              		.loc 1 2809 0 is_stmt 0 discriminator 1
 10808 01f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10809 01f4 042B     		cmp	r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 243


 10810 01f6 30D1     		bne	.L468
 10811              	.L467:
2810:main.c        ****         {
2811:main.c        ****             if (menuPosition[2][1] == 0)
 10812              		.loc 1 2811 0 is_stmt 1
 10813 01f8 384B     		ldr	r3, .L496
 10814 01fa 93F90530 		ldrsb	r3, [r3, #5]
 10815 01fe 002B     		cmp	r3, #0
 10816 0200 40F0E480 		bne	.L450
2812:main.c        ****             {
2813:main.c        ****                 //transpose
2814:main.c        ****                 menuPosition[0][0] = TransposeMenu; //means transpose
 10817              		.loc 1 2814 0
 10818 0204 354B     		ldr	r3, .L496
 10819 0206 0522     		movs	r2, #5
 10820 0208 1A70     		strb	r2, [r3]
2815:main.c        ****                 Decoder_1_Start();
 10821              		.loc 1 2815 0
 10822 020a FFF7FEFF 		bl	Decoder_1_Start
2816:main.c        ****                 whatToDraw = 0;
 10823              		.loc 1 2816 0
 10824 020e 0023     		movs	r3, #0
 10825 0210 FB77     		strb	r3, [r7, #31]
2817:main.c        ****                 encoderWatch = 1;
 10826              		.loc 1 2817 0
 10827 0212 364B     		ldr	r3, .L496+16
 10828 0214 0122     		movs	r2, #1
 10829 0216 1A70     		strb	r2, [r3]
2818:main.c        ****                 OLEDclear(128, 64);
 10830              		.loc 1 2818 0
 10831 0218 4021     		movs	r1, #64
 10832 021a 8020     		movs	r0, #128
 10833 021c FFF7FEFF 		bl	OLEDclear
2819:main.c        ****                 myGFX_setFont(2);
 10834              		.loc 1 2819 0
 10835 0220 0220     		movs	r0, #2
 10836 0222 FFF7FEFF 		bl	myGFX_setFont
2820:main.c        ****                 OLEDtextColor(1, 0);
 10837              		.loc 1 2820 0
 10838 0226 0021     		movs	r1, #0
 10839 0228 0120     		movs	r0, #1
 10840 022a FFF7FEFF 		bl	OLEDtextColor
2821:main.c        ****                 OLEDwriteString("USE VALUE KNOB", 14, 1, FirstLine);
 10841              		.loc 1 2821 0
 10842 022e 0023     		movs	r3, #0
 10843 0230 0122     		movs	r2, #1
 10844 0232 0E21     		movs	r1, #14
 10845 0234 2E48     		ldr	r0, .L496+20
 10846 0236 FFF7FEFF 		bl	OLEDwriteString
2822:main.c        ****                 OLEDwriteString("TO SET TRANSP ", 14, 1, SecondLine);
 10847              		.loc 1 2822 0
 10848 023a 0123     		movs	r3, #1
 10849 023c 0122     		movs	r2, #1
 10850 023e 0E21     		movs	r1, #14
 10851 0240 2C48     		ldr	r0, .L496+24
 10852 0242 FFF7FEFF 		bl	OLEDwriteString
2823:main.c        ****                 prevEncoderVal = 127;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 244


 10853              		.loc 1 2823 0
 10854 0246 2C4B     		ldr	r3, .L496+28
 10855 0248 7F22     		movs	r2, #127
 10856 024a 1A70     		strb	r2, [r3]
2824:main.c        ****                 Decoder_1_SetPosition(0);
 10857              		.loc 1 2824 0
 10858 024c 0020     		movs	r0, #0
 10859 024e FFF7FEFF 		bl	Decoder_1_SetPosition
2825:main.c        ****                 mainOLEDWaitingToSend = 1;
 10860              		.loc 1 2825 0
 10861 0252 2A4B     		ldr	r3, .L496+32
 10862 0254 0122     		movs	r2, #1
 10863 0256 1A60     		str	r2, [r3]
2811:main.c        ****             {
 10864              		.loc 1 2811 0
 10865 0258 B8E0     		b	.L450
 10866              	.L468:
2826:main.c        ****             }
2827:main.c        ****         }
2828:main.c        ****         else if (action == Left) 
 10867              		.loc 1 2828 0
 10868 025a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10869 025c 002B     		cmp	r3, #0
 10870 025e 40F0B580 		bne	.L450
2829:main.c        ****         {
2830:main.c        ****             //go back to main menu
2831:main.c        ****             menuPosition[0][0] = 0;
 10871              		.loc 1 2831 0
 10872 0262 1E4B     		ldr	r3, .L496
 10873 0264 0022     		movs	r2, #0
 10874 0266 1A70     		strb	r2, [r3]
2832:main.c        ****             whatToDraw = 1;
 10875              		.loc 1 2832 0
 10876 0268 0123     		movs	r3, #1
 10877 026a FB77     		strb	r3, [r7, #31]
 10878 026c AEE0     		b	.L450
 10879              	.L461:
2833:main.c        ****         }
2834:main.c        ****     }
2835:main.c        ****     
2836:main.c        ****     else if (menuPosition[0][0] == 3) //we are in lever calibration
 10880              		.loc 1 2836 0
 10881 026e 1B4B     		ldr	r3, .L496
 10882 0270 93F90030 		ldrsb	r3, [r3]
 10883 0274 032B     		cmp	r3, #3
 10884 0276 4BD1     		bne	.L470
2837:main.c        ****     {
2838:main.c        ****         //when user presses -> button, then store the current fret and increment which fret to stor
2839:main.c        ****         if ((action == Right) || (action == Enter))
 10885              		.loc 1 2839 0
 10886 0278 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10887 027a 012B     		cmp	r3, #1
 10888 027c 03D0     		beq	.L471
 10889              		.loc 1 2839 0 is_stmt 0 discriminator 1
 10890 027e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10891 0280 042B     		cmp	r3, #4
 10892 0282 40F0A380 		bne	.L450
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 245


 10893              	.L471:
2840:main.c        ****         {
2841:main.c        ****             OLEDclear(128, 64);
 10894              		.loc 1 2841 0 is_stmt 1
 10895 0286 4021     		movs	r1, #64
 10896 0288 8020     		movs	r0, #128
 10897 028a FFF7FEFF 		bl	OLEDclear
2842:main.c        ****             myGFX_setFont(2);
 10898              		.loc 1 2842 0
 10899 028e 0220     		movs	r0, #2
 10900 0290 FFF7FEFF 		bl	myGFX_setFont
2843:main.c        ****             OLEDtextColor(0, 1);
 10901              		.loc 1 2843 0
 10902 0294 0121     		movs	r1, #1
 10903 0296 0020     		movs	r0, #0
 10904 0298 FFF7FEFF 		bl	OLEDtextColor
2844:main.c        ****             OLEDwriteString("NOW PUT ALL", 11, 1, FirstLine);
 10905              		.loc 1 2844 0
 10906 029c 0023     		movs	r3, #0
 10907 029e 0122     		movs	r2, #1
 10908 02a0 0B21     		movs	r1, #11
 10909 02a2 1748     		ldr	r0, .L496+36
 10910 02a4 FFF7FEFF 		bl	OLEDwriteString
2845:main.c        ****             OLEDwriteString("PEDALS/LEVERS  ", 15, 1, SecondLine);
 10911              		.loc 1 2845 0
 10912 02a8 0123     		movs	r3, #1
 10913 02aa 0122     		movs	r2, #1
 10914 02ac 0F21     		movs	r1, #15
 10915 02ae 1548     		ldr	r0, .L496+40
 10916 02b0 FFF7FEFF 		bl	OLEDwriteString
2846:main.c        ****             OLEDwriteString("IN RESTING STATE", 16, 1, ThirdLine);
 10917              		.loc 1 2846 0
 10918 02b4 0223     		movs	r3, #2
 10919 02b6 0122     		movs	r2, #1
 10920 02b8 1021     		movs	r1, #16
 10921 02ba 1348     		ldr	r0, .L496+44
 10922 02bc FFF7FEFF 		bl	OLEDwriteString
2847:main.c        ****             OLEDwriteString("AND PRESS EDIT", 14, 1, FourthLine);
 10923              		.loc 1 2847 0
 10924 02c0 0323     		movs	r3, #3
 10925 02c2 0122     		movs	r2, #1
 10926 02c4 0E21     		movs	r1, #14
 10927 02c6 1148     		ldr	r0, .L496+48
 10928 02c8 FFF7FEFF 		bl	OLEDwriteString
2848:main.c        ****             mainOLEDWaitingToSend = 1;
 10929              		.loc 1 2848 0
 10930 02cc 0B4B     		ldr	r3, .L496+32
 10931 02ce 0122     		movs	r2, #1
 10932 02d0 1A60     		str	r2, [r3]
2849:main.c        ****             OLEDtextColor(1, 0);
 10933              		.loc 1 2849 0
 10934 02d2 0021     		movs	r1, #0
 10935 02d4 0120     		movs	r0, #1
 10936 02d6 FFF7FEFF 		bl	OLEDtextColor
 10937 02da 77E0     		b	.L450
 10938              	.L497:
 10939              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 246


 10940              	.L496:
 10941 02dc 00000000 		.word	menuPosition
 10942 02e0 00000000 		.word	numMainMenuItems
 10943 02e4 00000000 		.word	numCalibrationItems
 10944 02e8 00000000 		.word	numSettingsItems
 10945 02ec 00000000 		.word	encoderWatch
 10946 02f0 28050000 		.word	.LC16
 10947 02f4 38050000 		.word	.LC17
 10948 02f8 00000000 		.word	prevEncoderVal
 10949 02fc 00000000 		.word	mainOLEDWaitingToSend
 10950 0300 48050000 		.word	.LC18
 10951 0304 54050000 		.word	.LC19
 10952 0308 64050000 		.word	.LC20
 10953 030c 78050000 		.word	.LC21
 10954              	.L470:
2850:main.c        ****         }
2851:main.c        ****     }
2852:main.c        ****     else if (menuPosition[0][0] == 4) //we are in fret calibration
 10955              		.loc 1 2852 0
 10956 0310 AC4B     		ldr	r3, .L498
 10957 0312 93F90030 		ldrsb	r3, [r3]
 10958 0316 042B     		cmp	r3, #4
 10959 0318 35D1     		bne	.L473
2853:main.c        ****     {
2854:main.c        ****         //when user presses -> button, then store the current fret and increment which fret to stor
2855:main.c        ****         if ((action == Right) || (action == Enter))
 10960              		.loc 1 2855 0
 10961 031a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10962 031c 012B     		cmp	r3, #1
 10963 031e 02D0     		beq	.L474
 10964              		.loc 1 2855 0 is_stmt 0 discriminator 1
 10965 0320 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10966 0322 042B     		cmp	r3, #4
 10967 0324 52D1     		bne	.L450
 10968              	.L474:
2856:main.c        ****         {
2857:main.c        ****             fretMeasurements[0][fretToCalibrate] = bar[0];
 10969              		.loc 1 2857 0 is_stmt 1
 10970 0326 A84B     		ldr	r3, .L498+4
 10971 0328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10972 032a 1A46     		mov	r2, r3
 10973 032c A74B     		ldr	r3, .L498+8
 10974 032e 1B88     		ldrh	r3, [r3]	@ movhi
 10975 0330 99B2     		uxth	r1, r3
 10976 0332 A74B     		ldr	r3, .L498+12
 10977 0334 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
2858:main.c        ****             fretMeasurements[1][fretToCalibrate] = bar[1];
 10978              		.loc 1 2858 0
 10979 0338 A34B     		ldr	r3, .L498+4
 10980 033a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10981 033c 1846     		mov	r0, r3
 10982 033e A34B     		ldr	r3, .L498+8
 10983 0340 5B88     		ldrh	r3, [r3, #2]	@ movhi
 10984 0342 99B2     		uxth	r1, r3
 10985 0344 A24A     		ldr	r2, .L498+12
 10986 0346 00F10C03 		add	r3, r0, #12
 10987 034a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 247


2859:main.c        ****             fretToCalibrate++;
 10988              		.loc 1 2859 0
 10989 034e 9E4B     		ldr	r3, .L498+4
 10990 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10991 0352 0133     		adds	r3, r3, #1
 10992 0354 DAB2     		uxtb	r2, r3
 10993 0356 9C4B     		ldr	r3, .L498+4
 10994 0358 1A70     		strb	r2, [r3]
2860:main.c        ****             if (fretToCalibrate == NUM_FRET_MEASUREMENTS)
 10995              		.loc 1 2860 0
 10996 035a 9B4B     		ldr	r3, .L498+4
 10997 035c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10998 035e 0C2B     		cmp	r3, #12
 10999 0360 02D1     		bne	.L476
2861:main.c        ****             {
2862:main.c        ****                 exitFretCalibrationMode();
 11000              		.loc 1 2862 0
 11001 0362 FFF7FEFF 		bl	exitFretCalibrationMode
 11002 0366 31E0     		b	.L450
 11003              	.L476:
2863:main.c        ****             }
2864:main.c        ****             else
2865:main.c        ****             {
2866:main.c        ****                OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 11004              		.loc 1 2866 0
 11005 0368 974B     		ldr	r3, .L498+4
 11006 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11007 036c 1A46     		mov	r2, r3
 11008 036e 994B     		ldr	r3, .L498+16
 11009 0370 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 11010 0372 1846     		mov	r0, r3
 11011 0374 0223     		movs	r3, #2
 11012 0376 2822     		movs	r2, #40
 11013 0378 0221     		movs	r1, #2
 11014 037a FFF7FEFF 		bl	OLEDwriteInt
2867:main.c        ****                mainOLEDWaitingToSend = 1;
 11015              		.loc 1 2867 0
 11016 037e 964B     		ldr	r3, .L498+20
 11017 0380 0122     		movs	r2, #1
 11018 0382 1A60     		str	r2, [r3]
 11019 0384 22E0     		b	.L450
 11020              	.L473:
2868:main.c        ****             }
2869:main.c        ****         }
2870:main.c        ****     }
2871:main.c        ****     else if (menuPosition[0][0] == 5) //we are in transpose
 11021              		.loc 1 2871 0
 11022 0386 8F4B     		ldr	r3, .L498
 11023 0388 93F90030 		ldrsb	r3, [r3]
 11024 038c 052B     		cmp	r3, #5
 11025 038e 1DD1     		bne	.L450
2872:main.c        ****     {
2873:main.c        ****         //when user presses -> button, then store the current fret and increment which fret to stor
2874:main.c        ****         if (action == Right)
 11026              		.loc 1 2874 0
 11027 0390 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11028 0392 012B     		cmp	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 248


 11029 0394 0BD1     		bne	.L477
2875:main.c        ****         {
2876:main.c        ****             semitonesOrCents = (semitonesOrCents+1)&1;
 11030              		.loc 1 2876 0
 11031 0396 914B     		ldr	r3, .L498+24
 11032 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11033 039a 0133     		adds	r3, r3, #1
 11034 039c DBB2     		uxtb	r3, r3
 11035 039e 03F00103 		and	r3, r3, #1
 11036 03a2 DAB2     		uxtb	r2, r3
 11037 03a4 8D4B     		ldr	r3, .L498+24
 11038 03a6 1A70     		strb	r2, [r3]
2877:main.c        ****             prevEncoderVal = 127;
 11039              		.loc 1 2877 0
 11040 03a8 8D4B     		ldr	r3, .L498+28
 11041 03aa 7F22     		movs	r2, #127
 11042 03ac 1A70     		strb	r2, [r3]
 11043              	.L477:
2878:main.c        ****         }
2879:main.c        ****         if (action == Left)
 11044              		.loc 1 2879 0
 11045 03ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11046 03b0 002B     		cmp	r3, #0
 11047 03b2 0BD1     		bne	.L450
2880:main.c        ****         {
2881:main.c        ****             semitonesOrCents = (semitonesOrCents-1)&1;
 11048              		.loc 1 2881 0
 11049 03b4 894B     		ldr	r3, .L498+24
 11050 03b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11051 03b8 013B     		subs	r3, r3, #1
 11052 03ba DBB2     		uxtb	r3, r3
 11053 03bc 03F00103 		and	r3, r3, #1
 11054 03c0 DAB2     		uxtb	r2, r3
 11055 03c2 864B     		ldr	r3, .L498+24
 11056 03c4 1A70     		strb	r2, [r3]
2882:main.c        ****             prevEncoderVal = 127;
 11057              		.loc 1 2882 0
 11058 03c6 864B     		ldr	r3, .L498+28
 11059 03c8 7F22     		movs	r2, #127
 11060 03ca 1A70     		strb	r2, [r3]
 11061              	.L450:
2883:main.c        ****         }
2884:main.c        ****     }
2885:main.c        ****     if (whatToDraw == 1)
 11062              		.loc 1 2885 0
 11063 03cc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 11064 03ce 012B     		cmp	r3, #1
 11065 03d0 44D1     		bne	.L478
2886:main.c        ****     {
2887:main.c        ****         //draw main menu
2888:main.c        ****         OLEDclear(128, 64);
 11066              		.loc 1 2888 0
 11067 03d2 4021     		movs	r1, #64
 11068 03d4 8020     		movs	r0, #128
 11069 03d6 FFF7FEFF 		bl	OLEDclear
2889:main.c        ****         myGFX_setFont(2);
 11070              		.loc 1 2889 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 249


 11071 03da 0220     		movs	r0, #2
 11072 03dc FFF7FEFF 		bl	myGFX_setFont
 11073              	.LBB59:
2890:main.c        ****         for (int i = 0; i < numMainMenuItems; i++)
 11074              		.loc 1 2890 0
 11075 03e0 0023     		movs	r3, #0
 11076 03e2 BB61     		str	r3, [r7, #24]
 11077 03e4 2CE0     		b	.L479
 11078              	.L482:
2891:main.c        ****         {
2892:main.c        ****             if (menuPosition[0][1] == i)
 11079              		.loc 1 2892 0
 11080 03e6 774B     		ldr	r3, .L498
 11081 03e8 93F90130 		ldrsb	r3, [r3, #1]
 11082 03ec 1A46     		mov	r2, r3
 11083 03ee BB69     		ldr	r3, [r7, #24]
 11084 03f0 9A42     		cmp	r2, r3
 11085 03f2 14D1     		bne	.L480
2893:main.c        ****             {
2894:main.c        ****                 OLEDtextColor(0, 1);
 11086              		.loc 1 2894 0
 11087 03f4 0121     		movs	r1, #1
 11088 03f6 0020     		movs	r0, #0
 11089 03f8 FFF7FEFF 		bl	OLEDtextColor
2895:main.c        ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
 11090              		.loc 1 2895 0
 11091 03fc 794A     		ldr	r2, .L498+32
 11092 03fe BB69     		ldr	r3, [r7, #24]
 11093 0400 52F82300 		ldr	r0, [r2, r3, lsl #2]
 11094 0404 BB69     		ldr	r3, [r7, #24]
 11095 0406 DBB2     		uxtb	r3, r3
 11096 0408 0022     		movs	r2, #0
 11097 040a 0F21     		movs	r1, #15
 11098 040c FFF7FEFF 		bl	OLEDwriteString
2896:main.c        ****                 OLEDwriteArrow(0, i);
 11099              		.loc 1 2896 0
 11100 0410 BB69     		ldr	r3, [r7, #24]
 11101 0412 DBB2     		uxtb	r3, r3
 11102 0414 1946     		mov	r1, r3
 11103 0416 0020     		movs	r0, #0
 11104 0418 FFF7FEFF 		bl	OLEDwriteArrow
 11105 041c 0DE0     		b	.L481
 11106              	.L480:
2897:main.c        ****             }
2898:main.c        ****             else
2899:main.c        ****             {
2900:main.c        ****                 OLEDtextColor(1, 0);
 11107              		.loc 1 2900 0
 11108 041e 0021     		movs	r1, #0
 11109 0420 0120     		movs	r0, #1
 11110 0422 FFF7FEFF 		bl	OLEDtextColor
2901:main.c        ****                 OLEDwriteString(mainMenuNames[i], 15, 0, i);
 11111              		.loc 1 2901 0
 11112 0426 6F4A     		ldr	r2, .L498+32
 11113 0428 BB69     		ldr	r3, [r7, #24]
 11114 042a 52F82300 		ldr	r0, [r2, r3, lsl #2]
 11115 042e BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 250


 11116 0430 DBB2     		uxtb	r3, r3
 11117 0432 0022     		movs	r2, #0
 11118 0434 0F21     		movs	r1, #15
 11119 0436 FFF7FEFF 		bl	OLEDwriteString
 11120              	.L481:
2890:main.c        ****         {
 11121              		.loc 1 2890 0 discriminator 2
 11122 043a BB69     		ldr	r3, [r7, #24]
 11123 043c 0133     		adds	r3, r3, #1
 11124 043e BB61     		str	r3, [r7, #24]
 11125              	.L479:
2890:main.c        ****         {
 11126              		.loc 1 2890 0 is_stmt 0 discriminator 1
 11127 0440 694B     		ldr	r3, .L498+36
 11128 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11129 0444 1A46     		mov	r2, r3
 11130 0446 BB69     		ldr	r3, [r7, #24]
 11131 0448 9A42     		cmp	r2, r3
 11132 044a CCDC     		bgt	.L482
 11133              	.LBE59:
2902:main.c        ****                 
2903:main.c        ****             }
2904:main.c        **** 
2905:main.c        ****         }
2906:main.c        ****         OLEDtextColor(1, 0);
 11134              		.loc 1 2906 0 is_stmt 1
 11135 044c 0021     		movs	r1, #0
 11136 044e 0120     		movs	r0, #1
 11137 0450 FFF7FEFF 		bl	OLEDtextColor
2907:main.c        ****         mainOLEDWaitingToSend = 1;
 11138              		.loc 1 2907 0
 11139 0454 604B     		ldr	r3, .L498+20
 11140 0456 0122     		movs	r2, #1
 11141 0458 1A60     		str	r2, [r3]
2908:main.c        ****     }
2909:main.c        ****     else if (whatToDraw == 2)
2910:main.c        ****     {
2911:main.c        ****         //draw calibration menu
2912:main.c        ****         OLEDclear(128, 64);
2913:main.c        ****         myGFX_setFont(2);
2914:main.c        ****         for (int i = 0; i < numCalibrationItems; i++)
2915:main.c        ****         {
2916:main.c        ****             if (menuPosition[1][1] == i)
2917:main.c        ****             {
2918:main.c        ****                 OLEDtextColor(0, 1);
2919:main.c        ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
2920:main.c        ****                 OLEDwriteArrow(0, i);
2921:main.c        ****             }
2922:main.c        ****             else
2923:main.c        ****             {
2924:main.c        ****                 OLEDtextColor(1, 0);
2925:main.c        ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
2926:main.c        ****                 
2927:main.c        ****             }
2928:main.c        ****         }
2929:main.c        ****         OLEDtextColor(1, 0);
2930:main.c        ****         mainOLEDWaitingToSend = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 251


2931:main.c        ****     }
2932:main.c        ****     else if (whatToDraw == 3)
2933:main.c        ****     {
2934:main.c        ****         //draw settings menu
2935:main.c        ****         OLEDclear(128, 64);
2936:main.c        ****         myGFX_setFont(2);
2937:main.c        ****         uint8_t tempPos = 0;
2938:main.c        ****         for (int i = 0; i < numSettingsItems; i++)
2939:main.c        ****         {
2940:main.c        ****             if (menuPosition[2][1] == i)
2941:main.c        ****             {
2942:main.c        ****                 OLEDtextColor(0, 1);
2943:main.c        ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
2944:main.c        ****                 OLEDwriteArrow(0, 0);
2945:main.c        ****             }
2946:main.c        ****             else if (i > menuPosition[2][1])
2947:main.c        ****             {
2948:main.c        ****                 OLEDtextColor(1, 0);
2949:main.c        ****                 tempPos = (i - menuPosition[2][1]);
2950:main.c        ****                 if (tempPos < 4)
2951:main.c        ****                 {
2952:main.c        ****                     OLEDwriteString(settingsNames[i], 15, 0, tempPos);
2953:main.c        ****                 } 
2954:main.c        ****             }
2955:main.c        ****         }
2956:main.c        ****         tempPos++;
2957:main.c        ****         OLEDtextColor(1, 0);
2958:main.c        ****         while (tempPos < 4)
2959:main.c        ****         {
2960:main.c        ****             OLEDwriteString("               ", 15, 0, tempPos);
2961:main.c        ****             tempPos++;
2962:main.c        ****         }
2963:main.c        ****         mainOLEDWaitingToSend = 1;
2964:main.c        ****     }
2965:main.c        **** }
 11142              		.loc 1 2965 0
 11143 045a AEE0     		b	.L495
 11144              	.L478:
2909:main.c        ****     {
 11145              		.loc 1 2909 0
 11146 045c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 11147 045e 022B     		cmp	r3, #2
 11148 0460 44D1     		bne	.L484
2912:main.c        ****         myGFX_setFont(2);
 11149              		.loc 1 2912 0
 11150 0462 4021     		movs	r1, #64
 11151 0464 8020     		movs	r0, #128
 11152 0466 FFF7FEFF 		bl	OLEDclear
2913:main.c        ****         for (int i = 0; i < numCalibrationItems; i++)
 11153              		.loc 1 2913 0
 11154 046a 0220     		movs	r0, #2
 11155 046c FFF7FEFF 		bl	myGFX_setFont
 11156              	.LBB60:
2914:main.c        ****         {
 11157              		.loc 1 2914 0
 11158 0470 0023     		movs	r3, #0
 11159 0472 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 252


 11160 0474 2CE0     		b	.L485
 11161              	.L488:
2916:main.c        ****             {
 11162              		.loc 1 2916 0
 11163 0476 534B     		ldr	r3, .L498
 11164 0478 93F90330 		ldrsb	r3, [r3, #3]
 11165 047c 1A46     		mov	r2, r3
 11166 047e 7B69     		ldr	r3, [r7, #20]
 11167 0480 9A42     		cmp	r2, r3
 11168 0482 14D1     		bne	.L486
2918:main.c        ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 11169              		.loc 1 2918 0
 11170 0484 0121     		movs	r1, #1
 11171 0486 0020     		movs	r0, #0
 11172 0488 FFF7FEFF 		bl	OLEDtextColor
2919:main.c        ****                 OLEDwriteArrow(0, i);
 11173              		.loc 1 2919 0
 11174 048c 574A     		ldr	r2, .L498+40
 11175 048e 7B69     		ldr	r3, [r7, #20]
 11176 0490 52F82300 		ldr	r0, [r2, r3, lsl #2]
 11177 0494 7B69     		ldr	r3, [r7, #20]
 11178 0496 DBB2     		uxtb	r3, r3
 11179 0498 0022     		movs	r2, #0
 11180 049a 0F21     		movs	r1, #15
 11181 049c FFF7FEFF 		bl	OLEDwriteString
2920:main.c        ****             }
 11182              		.loc 1 2920 0
 11183 04a0 7B69     		ldr	r3, [r7, #20]
 11184 04a2 DBB2     		uxtb	r3, r3
 11185 04a4 1946     		mov	r1, r3
 11186 04a6 0020     		movs	r0, #0
 11187 04a8 FFF7FEFF 		bl	OLEDwriteArrow
 11188 04ac 0DE0     		b	.L487
 11189              	.L486:
2924:main.c        ****                 OLEDwriteString(calibrationNames[i], 15, 0, i);
 11190              		.loc 1 2924 0
 11191 04ae 0021     		movs	r1, #0
 11192 04b0 0120     		movs	r0, #1
 11193 04b2 FFF7FEFF 		bl	OLEDtextColor
2925:main.c        ****                 
 11194              		.loc 1 2925 0
 11195 04b6 4D4A     		ldr	r2, .L498+40
 11196 04b8 7B69     		ldr	r3, [r7, #20]
 11197 04ba 52F82300 		ldr	r0, [r2, r3, lsl #2]
 11198 04be 7B69     		ldr	r3, [r7, #20]
 11199 04c0 DBB2     		uxtb	r3, r3
 11200 04c2 0022     		movs	r2, #0
 11201 04c4 0F21     		movs	r1, #15
 11202 04c6 FFF7FEFF 		bl	OLEDwriteString
 11203              	.L487:
2914:main.c        ****         {
 11204              		.loc 1 2914 0 discriminator 2
 11205 04ca 7B69     		ldr	r3, [r7, #20]
 11206 04cc 0133     		adds	r3, r3, #1
 11207 04ce 7B61     		str	r3, [r7, #20]
 11208              	.L485:
2914:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 253


 11209              		.loc 1 2914 0 is_stmt 0 discriminator 1
 11210 04d0 474B     		ldr	r3, .L498+44
 11211 04d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11212 04d4 1A46     		mov	r2, r3
 11213 04d6 7B69     		ldr	r3, [r7, #20]
 11214 04d8 9A42     		cmp	r2, r3
 11215 04da CCDC     		bgt	.L488
 11216              	.LBE60:
2929:main.c        ****         mainOLEDWaitingToSend = 1;
 11217              		.loc 1 2929 0 is_stmt 1
 11218 04dc 0021     		movs	r1, #0
 11219 04de 0120     		movs	r0, #1
 11220 04e0 FFF7FEFF 		bl	OLEDtextColor
2930:main.c        ****     }
 11221              		.loc 1 2930 0
 11222 04e4 3C4B     		ldr	r3, .L498+20
 11223 04e6 0122     		movs	r2, #1
 11224 04e8 1A60     		str	r2, [r3]
 11225              		.loc 1 2965 0
 11226 04ea 66E0     		b	.L495
 11227              	.L484:
2932:main.c        ****     {
 11228              		.loc 1 2932 0
 11229 04ec FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 11230 04ee 032B     		cmp	r3, #3
 11231 04f0 63D1     		bne	.L495
 11232              	.LBB61:
2935:main.c        ****         myGFX_setFont(2);
 11233              		.loc 1 2935 0
 11234 04f2 4021     		movs	r1, #64
 11235 04f4 8020     		movs	r0, #128
 11236 04f6 FFF7FEFF 		bl	OLEDclear
2936:main.c        ****         uint8_t tempPos = 0;
 11237              		.loc 1 2936 0
 11238 04fa 0220     		movs	r0, #2
 11239 04fc FFF7FEFF 		bl	myGFX_setFont
2937:main.c        ****         for (int i = 0; i < numSettingsItems; i++)
 11240              		.loc 1 2937 0
 11241 0500 0023     		movs	r3, #0
 11242 0502 FB74     		strb	r3, [r7, #19]
 11243              	.LBB62:
2938:main.c        ****         {
 11244              		.loc 1 2938 0
 11245 0504 0023     		movs	r3, #0
 11246 0506 FB60     		str	r3, [r7, #12]
 11247 0508 3AE0     		b	.L489
 11248              	.L492:
2940:main.c        ****             {
 11249              		.loc 1 2940 0
 11250 050a 2E4B     		ldr	r3, .L498
 11251 050c 93F90530 		ldrsb	r3, [r3, #5]
 11252 0510 1A46     		mov	r2, r3
 11253 0512 FB68     		ldr	r3, [r7, #12]
 11254 0514 9A42     		cmp	r2, r3
 11255 0516 11D1     		bne	.L490
2942:main.c        ****                 OLEDwriteString(settingsNames[i], 15, 0, 0);
 11256              		.loc 1 2942 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 254


 11257 0518 0121     		movs	r1, #1
 11258 051a 0020     		movs	r0, #0
 11259 051c FFF7FEFF 		bl	OLEDtextColor
2943:main.c        ****                 OLEDwriteArrow(0, 0);
 11260              		.loc 1 2943 0
 11261 0520 344A     		ldr	r2, .L498+48
 11262 0522 FB68     		ldr	r3, [r7, #12]
 11263 0524 52F82300 		ldr	r0, [r2, r3, lsl #2]
 11264 0528 0023     		movs	r3, #0
 11265 052a 0022     		movs	r2, #0
 11266 052c 0F21     		movs	r1, #15
 11267 052e FFF7FEFF 		bl	OLEDwriteString
2944:main.c        ****             }
 11268              		.loc 1 2944 0
 11269 0532 0021     		movs	r1, #0
 11270 0534 0020     		movs	r0, #0
 11271 0536 FFF7FEFF 		bl	OLEDwriteArrow
 11272 053a 1EE0     		b	.L491
 11273              	.L490:
2946:main.c        ****             {
 11274              		.loc 1 2946 0
 11275 053c 214B     		ldr	r3, .L498
 11276 053e 93F90530 		ldrsb	r3, [r3, #5]
 11277 0542 1A46     		mov	r2, r3
 11278 0544 FB68     		ldr	r3, [r7, #12]
 11279 0546 9A42     		cmp	r2, r3
 11280 0548 17DA     		bge	.L491
2948:main.c        ****                 tempPos = (i - menuPosition[2][1]);
 11281              		.loc 1 2948 0
 11282 054a 0021     		movs	r1, #0
 11283 054c 0120     		movs	r0, #1
 11284 054e FFF7FEFF 		bl	OLEDtextColor
2949:main.c        ****                 if (tempPos < 4)
 11285              		.loc 1 2949 0
 11286 0552 FB68     		ldr	r3, [r7, #12]
 11287 0554 DAB2     		uxtb	r2, r3
 11288 0556 1B4B     		ldr	r3, .L498
 11289 0558 93F90530 		ldrsb	r3, [r3, #5]
 11290 055c DBB2     		uxtb	r3, r3
 11291 055e D31A     		subs	r3, r2, r3
 11292 0560 FB74     		strb	r3, [r7, #19]
2950:main.c        ****                 {
 11293              		.loc 1 2950 0
 11294 0562 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11295 0564 032B     		cmp	r3, #3
 11296 0566 08D8     		bhi	.L491
2952:main.c        ****                 } 
 11297              		.loc 1 2952 0
 11298 0568 224A     		ldr	r2, .L498+48
 11299 056a FB68     		ldr	r3, [r7, #12]
 11300 056c 52F82300 		ldr	r0, [r2, r3, lsl #2]
 11301 0570 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11302 0572 0022     		movs	r2, #0
 11303 0574 0F21     		movs	r1, #15
 11304 0576 FFF7FEFF 		bl	OLEDwriteString
 11305              	.L491:
2938:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 255


 11306              		.loc 1 2938 0 discriminator 2
 11307 057a FB68     		ldr	r3, [r7, #12]
 11308 057c 0133     		adds	r3, r3, #1
 11309 057e FB60     		str	r3, [r7, #12]
 11310              	.L489:
2938:main.c        ****         {
 11311              		.loc 1 2938 0 is_stmt 0 discriminator 1
 11312 0580 1D4B     		ldr	r3, .L498+52
 11313 0582 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11314 0584 1A46     		mov	r2, r3
 11315 0586 FB68     		ldr	r3, [r7, #12]
 11316 0588 9A42     		cmp	r2, r3
 11317 058a BEDC     		bgt	.L492
 11318              	.LBE62:
2956:main.c        ****         OLEDtextColor(1, 0);
 11319              		.loc 1 2956 0 is_stmt 1
 11320 058c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11321 058e 0133     		adds	r3, r3, #1
 11322 0590 FB74     		strb	r3, [r7, #19]
2957:main.c        ****         while (tempPos < 4)
 11323              		.loc 1 2957 0
 11324 0592 0021     		movs	r1, #0
 11325 0594 0120     		movs	r0, #1
 11326 0596 FFF7FEFF 		bl	OLEDtextColor
2958:main.c        ****         {
 11327              		.loc 1 2958 0
 11328 059a 08E0     		b	.L493
 11329              	.L494:
2960:main.c        ****             tempPos++;
 11330              		.loc 1 2960 0
 11331 059c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11332 059e 0022     		movs	r2, #0
 11333 05a0 0F21     		movs	r1, #15
 11334 05a2 1648     		ldr	r0, .L498+56
 11335 05a4 FFF7FEFF 		bl	OLEDwriteString
2961:main.c        ****         }
 11336              		.loc 1 2961 0
 11337 05a8 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11338 05aa 0133     		adds	r3, r3, #1
 11339 05ac FB74     		strb	r3, [r7, #19]
 11340              	.L493:
2958:main.c        ****         {
 11341              		.loc 1 2958 0
 11342 05ae FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11343 05b0 032B     		cmp	r3, #3
 11344 05b2 F3D9     		bls	.L494
2963:main.c        ****     }
 11345              		.loc 1 2963 0
 11346 05b4 084B     		ldr	r3, .L498+20
 11347 05b6 0122     		movs	r2, #1
 11348 05b8 1A60     		str	r2, [r3]
 11349              	.L495:
 11350              	.LBE61:
 11351              		.loc 1 2965 0
 11352 05ba 00BF     		nop
 11353 05bc 2037     		adds	r7, r7, #32
 11354              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 256


 11355 05be BD46     		mov	sp, r7
 11356              		.cfi_def_cfa_register 13
 11357              		@ sp needed
 11358 05c0 80BD     		pop	{r7, pc}
 11359              	.L499:
 11360 05c2 00BF     		.align	2
 11361              	.L498:
 11362 05c4 00000000 		.word	menuPosition
 11363 05c8 00000000 		.word	fretToCalibrate
 11364 05cc 00000000 		.word	bar
 11365 05d0 00000000 		.word	fretMeasurements
 11366 05d4 00000000 		.word	whichFretArray
 11367 05d8 00000000 		.word	mainOLEDWaitingToSend
 11368 05dc 00000000 		.word	semitonesOrCents
 11369 05e0 00000000 		.word	prevEncoderVal
 11370 05e4 00000000 		.word	mainMenuNames
 11371 05e8 00000000 		.word	numMainMenuItems
 11372 05ec 00000000 		.word	calibrationNames
 11373 05f0 00000000 		.word	numCalibrationItems
 11374 05f4 00000000 		.word	settingsNames
 11375 05f8 00000000 		.word	numSettingsItems
 11376 05fc 88050000 		.word	.LC22
 11377              		.cfi_endproc
 11378              	.LFE97:
 11379              		.size	menuAction, .-menuAction
 11380              		.section	.text.leftPressed,"ax",%progbits
 11381              		.align	2
 11382              		.global	leftPressed
 11383              		.thumb
 11384              		.thumb_func
 11385              		.type	leftPressed, %function
 11386              	leftPressed:
 11387              	.LFB98:
2966:main.c        **** 
2967:main.c        **** 
2968:main.c        **** 
2969:main.c        **** void leftPressed()
2970:main.c        **** {
 11388              		.loc 1 2970 0
 11389              		.cfi_startproc
 11390              		@ args = 0, pretend = 0, frame = 0
 11391              		@ frame_needed = 1, uses_anonymous_args = 0
 11392 0000 80B5     		push	{r7, lr}
 11393              		.cfi_def_cfa_offset 8
 11394              		.cfi_offset 7, -8
 11395              		.cfi_offset 14, -4
 11396 0002 00AF     		add	r7, sp, #0
 11397              		.cfi_def_cfa_register 7
2971:main.c        ****     if (!editMode) //normal behavior
 11398              		.loc 1 2971 0
 11399 0004 1F4B     		ldr	r3, .L506
 11400 0006 1B68     		ldr	r3, [r3]
 11401 0008 002B     		cmp	r3, #0
 11402 000a 35D1     		bne	.L501
2972:main.c        ****     {
2973:main.c        ****         if (currentCopedent == 0)
 11403              		.loc 1 2973 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 257


 11404 000c 1E4B     		ldr	r3, .L506+4
 11405 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11406 0010 002B     		cmp	r3, #0
 11407 0012 03D1     		bne	.L502
2974:main.c        ****         {
2975:main.c        ****             currentCopedent = MAX_NUM_COPEDENTS-1;
 11408              		.loc 1 2975 0
 11409 0014 1C4B     		ldr	r3, .L506+4
 11410 0016 0622     		movs	r2, #6
 11411 0018 1A70     		strb	r2, [r3]
 11412 001a 05E0     		b	.L503
 11413              	.L502:
2976:main.c        ****         }
2977:main.c        ****         else
2978:main.c        ****         {
2979:main.c        ****             currentCopedent -= 1;
 11414              		.loc 1 2979 0
 11415 001c 1A4B     		ldr	r3, .L506+4
 11416 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11417 0020 013B     		subs	r3, r3, #1
 11418 0022 DAB2     		uxtb	r2, r3
 11419 0024 184B     		ldr	r3, .L506+4
 11420 0026 1A70     		strb	r2, [r3]
 11421              	.L503:
2980:main.c        ****         }
2981:main.c        ****         necks[currentNeck] = currentCopedent;
 11422              		.loc 1 2981 0
 11423 0028 184B     		ldr	r3, .L506+8
 11424 002a 1B68     		ldr	r3, [r3]
 11425 002c 164A     		ldr	r2, .L506+4
 11426 002e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 11427 0030 174A     		ldr	r2, .L506+12
 11428 0032 D154     		strb	r1, [r2, r3]
2982:main.c        ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 11429              		.loc 1 2982 0
 11430 0034 164B     		ldr	r3, .L506+12
 11431 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11432 0038 5B01     		lsls	r3, r3, #5
 11433 003a DAB2     		uxtb	r2, r3
 11434 003c 144B     		ldr	r3, .L506+12
 11435 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 11436 0040 9B00     		lsls	r3, r3, #2
 11437 0042 DBB2     		uxtb	r3, r3
 11438 0044 1344     		add	r3, r3, r2
 11439 0046 DAB2     		uxtb	r2, r3
 11440 0048 104B     		ldr	r3, .L506+8
 11441 004a 1B68     		ldr	r3, [r3]
 11442 004c DBB2     		uxtb	r3, r3
 11443 004e 1344     		add	r3, r3, r2
 11444 0050 DBB2     		uxtb	r3, r3
 11445 0052 5AB2     		sxtb	r2, r3
 11446 0054 0F4B     		ldr	r3, .L506+16
 11447 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11448 0058 5BB2     		sxtb	r3, r3
 11449 005a 1343     		orrs	r3, r3, r2
 11450 005c 5BB2     		sxtb	r3, r3
 11451 005e DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 258


 11452 0060 0C4B     		ldr	r3, .L506+16
 11453 0062 1A70     		strb	r2, [r3]
2983:main.c        ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 11454              		.loc 1 2983 0
 11455 0064 0B4B     		ldr	r3, .L506+16
 11456 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11457 0068 40F2FE71 		movw	r1, #2046
 11458 006c 1846     		mov	r0, r3
 11459 006e FFF7FEFF 		bl	EEPROM_WriteByte
2984:main.c        ****         displayCurrentPresetNameAndCopedent();
 11460              		.loc 1 2984 0
 11461 0072 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
2985:main.c        ****     }
2986:main.c        ****     else
2987:main.c        ****     {
2988:main.c        ****         menuAction(Left);
2989:main.c        ****     }
2990:main.c        **** }
 11462              		.loc 1 2990 0
 11463 0076 02E0     		b	.L505
 11464              	.L501:
2988:main.c        ****     }
 11465              		.loc 1 2988 0
 11466 0078 0020     		movs	r0, #0
 11467 007a FFF7FEFF 		bl	menuAction
 11468              	.L505:
 11469              		.loc 1 2990 0
 11470 007e 00BF     		nop
 11471 0080 80BD     		pop	{r7, pc}
 11472              	.L507:
 11473 0082 00BF     		.align	2
 11474              	.L506:
 11475 0084 00000000 		.word	editMode
 11476 0088 00000000 		.word	currentCopedent
 11477 008c 00000000 		.word	currentNeck
 11478 0090 00000000 		.word	necks
 11479 0094 00000000 		.word	neckByte
 11480              		.cfi_endproc
 11481              	.LFE98:
 11482              		.size	leftPressed, .-leftPressed
 11483              		.section	.text.rightPressed,"ax",%progbits
 11484              		.align	2
 11485              		.global	rightPressed
 11486              		.thumb
 11487              		.thumb_func
 11488              		.type	rightPressed, %function
 11489              	rightPressed:
 11490              	.LFB99:
2991:main.c        **** 
2992:main.c        **** void rightPressed()
2993:main.c        **** {
 11491              		.loc 1 2993 0
 11492              		.cfi_startproc
 11493              		@ args = 0, pretend = 0, frame = 0
 11494              		@ frame_needed = 1, uses_anonymous_args = 0
 11495 0000 80B5     		push	{r7, lr}
 11496              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 259


 11497              		.cfi_offset 7, -8
 11498              		.cfi_offset 14, -4
 11499 0002 00AF     		add	r7, sp, #0
 11500              		.cfi_def_cfa_register 7
2994:main.c        ****     if (!editMode) //normal behavior
 11501              		.loc 1 2994 0
 11502 0004 1E4B     		ldr	r3, .L513
 11503 0006 1B68     		ldr	r3, [r3]
 11504 0008 002B     		cmp	r3, #0
 11505 000a 34D1     		bne	.L509
2995:main.c        ****     {
2996:main.c        ****         currentCopedent += 1;
 11506              		.loc 1 2996 0
 11507 000c 1D4B     		ldr	r3, .L513+4
 11508 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11509 0010 0133     		adds	r3, r3, #1
 11510 0012 DAB2     		uxtb	r2, r3
 11511 0014 1B4B     		ldr	r3, .L513+4
 11512 0016 1A70     		strb	r2, [r3]
2997:main.c        ****         if (currentCopedent >= MAX_NUM_COPEDENTS)
 11513              		.loc 1 2997 0
 11514 0018 1A4B     		ldr	r3, .L513+4
 11515 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11516 001c 062B     		cmp	r3, #6
 11517 001e 02D9     		bls	.L510
2998:main.c        ****         {
2999:main.c        ****             currentCopedent = 0;
 11518              		.loc 1 2999 0
 11519 0020 184B     		ldr	r3, .L513+4
 11520 0022 0022     		movs	r2, #0
 11521 0024 1A70     		strb	r2, [r3]
 11522              	.L510:
3000:main.c        ****         }
3001:main.c        ****         necks[currentNeck] = currentCopedent;
 11523              		.loc 1 3001 0
 11524 0026 184B     		ldr	r3, .L513+8
 11525 0028 1B68     		ldr	r3, [r3]
 11526 002a 164A     		ldr	r2, .L513+4
 11527 002c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 11528 002e 174A     		ldr	r2, .L513+12
 11529 0030 D154     		strb	r1, [r2, r3]
3002:main.c        ****         neckByte |= (necks[0]<<5) + (necks[1]<<2) + currentNeck;
 11530              		.loc 1 3002 0
 11531 0032 164B     		ldr	r3, .L513+12
 11532 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11533 0036 5B01     		lsls	r3, r3, #5
 11534 0038 DAB2     		uxtb	r2, r3
 11535 003a 144B     		ldr	r3, .L513+12
 11536 003c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 11537 003e 9B00     		lsls	r3, r3, #2
 11538 0040 DBB2     		uxtb	r3, r3
 11539 0042 1344     		add	r3, r3, r2
 11540 0044 DAB2     		uxtb	r2, r3
 11541 0046 104B     		ldr	r3, .L513+8
 11542 0048 1B68     		ldr	r3, [r3]
 11543 004a DBB2     		uxtb	r3, r3
 11544 004c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 260


 11545 004e DBB2     		uxtb	r3, r3
 11546 0050 5AB2     		sxtb	r2, r3
 11547 0052 0F4B     		ldr	r3, .L513+16
 11548 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11549 0056 5BB2     		sxtb	r3, r3
 11550 0058 1343     		orrs	r3, r3, r2
 11551 005a 5BB2     		sxtb	r3, r3
 11552 005c DAB2     		uxtb	r2, r3
 11553 005e 0C4B     		ldr	r3, .L513+16
 11554 0060 1A70     		strb	r2, [r3]
3003:main.c        ****         EEPROM_WriteByte(neckByte, EEPROM_NECKS_OFFSET);
 11555              		.loc 1 3003 0
 11556 0062 0B4B     		ldr	r3, .L513+16
 11557 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11558 0066 40F2FE71 		movw	r1, #2046
 11559 006a 1846     		mov	r0, r3
 11560 006c FFF7FEFF 		bl	EEPROM_WriteByte
3004:main.c        ****         displayCurrentPresetNameAndCopedent();
 11561              		.loc 1 3004 0
 11562 0070 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
3005:main.c        ****     }
3006:main.c        ****     else
3007:main.c        ****     {
3008:main.c        ****        menuAction(Right);
3009:main.c        ****     }
3010:main.c        **** }
 11563              		.loc 1 3010 0
 11564 0074 02E0     		b	.L512
 11565              	.L509:
3008:main.c        ****     }
 11566              		.loc 1 3008 0
 11567 0076 0120     		movs	r0, #1
 11568 0078 FFF7FEFF 		bl	menuAction
 11569              	.L512:
 11570              		.loc 1 3010 0
 11571 007c 00BF     		nop
 11572 007e 80BD     		pop	{r7, pc}
 11573              	.L514:
 11574              		.align	2
 11575              	.L513:
 11576 0080 00000000 		.word	editMode
 11577 0084 00000000 		.word	currentCopedent
 11578 0088 00000000 		.word	currentNeck
 11579 008c 00000000 		.word	necks
 11580 0090 00000000 		.word	neckByte
 11581              		.cfi_endproc
 11582              	.LFE99:
 11583              		.size	rightPressed, .-rightPressed
 11584              		.section	.text.downPressed,"ax",%progbits
 11585              		.align	2
 11586              		.global	downPressed
 11587              		.thumb
 11588              		.thumb_func
 11589              		.type	downPressed, %function
 11590              	downPressed:
 11591              	.LFB100:
3011:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 261


3012:main.c        **** void downPressed()
3013:main.c        **** {
 11592              		.loc 1 3013 0
 11593              		.cfi_startproc
 11594              		@ args = 0, pretend = 0, frame = 0
 11595              		@ frame_needed = 1, uses_anonymous_args = 0
 11596 0000 80B5     		push	{r7, lr}
 11597              		.cfi_def_cfa_offset 8
 11598              		.cfi_offset 7, -8
 11599              		.cfi_offset 14, -4
 11600 0002 00AF     		add	r7, sp, #0
 11601              		.cfi_def_cfa_register 7
3014:main.c        ****     if (!editMode) //normal behavior
 11602              		.loc 1 3014 0
 11603 0004 0F4B     		ldr	r3, .L519
 11604 0006 1B68     		ldr	r3, [r3]
 11605 0008 002B     		cmp	r3, #0
 11606 000a 16D1     		bne	.L516
3015:main.c        ****     {
3016:main.c        ****         patchNum -= 1;
 11607              		.loc 1 3016 0
 11608 000c 0E4B     		ldr	r3, .L519+4
 11609 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11610 0010 013B     		subs	r3, r3, #1
 11611 0012 DAB2     		uxtb	r2, r3
 11612 0014 0C4B     		ldr	r3, .L519+4
 11613 0016 1A70     		strb	r2, [r3]
3017:main.c        ****         patchNum &= 63;
 11614              		.loc 1 3017 0
 11615 0018 0B4B     		ldr	r3, .L519+4
 11616 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11617 001c 03F03F03 		and	r3, r3, #63
 11618 0020 DAB2     		uxtb	r2, r3
 11619 0022 094B     		ldr	r3, .L519+4
 11620 0024 1A70     		strb	r2, [r3]
3018:main.c        ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 11621              		.loc 1 3018 0
 11622 0026 084B     		ldr	r3, .L519+4
 11623 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11624 002a 40F2F271 		movw	r1, #2034
 11625 002e 1846     		mov	r0, r3
 11626 0030 FFF7FEFF 		bl	EEPROM_WriteByte
3019:main.c        ****         displayCurrentPresetNameAndCopedent();
 11627              		.loc 1 3019 0
 11628 0034 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
3020:main.c        ****     }
3021:main.c        ****     else
3022:main.c        ****     {
3023:main.c        ****         menuAction(Down);
3024:main.c        ****     }
3025:main.c        **** }
 11629              		.loc 1 3025 0
 11630 0038 02E0     		b	.L518
 11631              	.L516:
3023:main.c        ****     }
 11632              		.loc 1 3023 0
 11633 003a 0220     		movs	r0, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 262


 11634 003c FFF7FEFF 		bl	menuAction
 11635              	.L518:
 11636              		.loc 1 3025 0
 11637 0040 00BF     		nop
 11638 0042 80BD     		pop	{r7, pc}
 11639              	.L520:
 11640              		.align	2
 11641              	.L519:
 11642 0044 00000000 		.word	editMode
 11643 0048 00000000 		.word	patchNum
 11644              		.cfi_endproc
 11645              	.LFE100:
 11646              		.size	downPressed, .-downPressed
 11647              		.section	.text.upPressed,"ax",%progbits
 11648              		.align	2
 11649              		.global	upPressed
 11650              		.thumb
 11651              		.thumb_func
 11652              		.type	upPressed, %function
 11653              	upPressed:
 11654              	.LFB101:
3026:main.c        **** 
3027:main.c        **** void upPressed()
3028:main.c        **** {
 11655              		.loc 1 3028 0
 11656              		.cfi_startproc
 11657              		@ args = 0, pretend = 0, frame = 0
 11658              		@ frame_needed = 1, uses_anonymous_args = 0
 11659 0000 80B5     		push	{r7, lr}
 11660              		.cfi_def_cfa_offset 8
 11661              		.cfi_offset 7, -8
 11662              		.cfi_offset 14, -4
 11663 0002 00AF     		add	r7, sp, #0
 11664              		.cfi_def_cfa_register 7
3029:main.c        ****     if (!editMode) //normal behavior
 11665              		.loc 1 3029 0
 11666 0004 0F4B     		ldr	r3, .L525
 11667 0006 1B68     		ldr	r3, [r3]
 11668 0008 002B     		cmp	r3, #0
 11669 000a 16D1     		bne	.L522
3030:main.c        ****     {
3031:main.c        ****         patchNum += 1;
 11670              		.loc 1 3031 0
 11671 000c 0E4B     		ldr	r3, .L525+4
 11672 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11673 0010 0133     		adds	r3, r3, #1
 11674 0012 DAB2     		uxtb	r2, r3
 11675 0014 0C4B     		ldr	r3, .L525+4
 11676 0016 1A70     		strb	r2, [r3]
3032:main.c        ****         patchNum &= 63;
 11677              		.loc 1 3032 0
 11678 0018 0B4B     		ldr	r3, .L525+4
 11679 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11680 001c 03F03F03 		and	r3, r3, #63
 11681 0020 DAB2     		uxtb	r2, r3
 11682 0022 094B     		ldr	r3, .L525+4
 11683 0024 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 263


3033:main.c        ****         EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 11684              		.loc 1 3033 0
 11685 0026 084B     		ldr	r3, .L525+4
 11686 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11687 002a 40F2F271 		movw	r1, #2034
 11688 002e 1846     		mov	r0, r3
 11689 0030 FFF7FEFF 		bl	EEPROM_WriteByte
3034:main.c        ****         displayCurrentPresetNameAndCopedent();
 11690              		.loc 1 3034 0
 11691 0034 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
3035:main.c        ****     }
3036:main.c        ****     else
3037:main.c        ****     {
3038:main.c        ****         menuAction(Up);
3039:main.c        ****     }
3040:main.c        **** }
 11692              		.loc 1 3040 0
 11693 0038 02E0     		b	.L524
 11694              	.L522:
3038:main.c        ****     }
 11695              		.loc 1 3038 0
 11696 003a 0320     		movs	r0, #3
 11697 003c FFF7FEFF 		bl	menuAction
 11698              	.L524:
 11699              		.loc 1 3040 0
 11700 0040 00BF     		nop
 11701 0042 80BD     		pop	{r7, pc}
 11702              	.L526:
 11703              		.align	2
 11704              	.L525:
 11705 0044 00000000 		.word	editMode
 11706 0048 00000000 		.word	patchNum
 11707              		.cfi_endproc
 11708              	.LFE101:
 11709              		.size	upPressed, .-upPressed
 11710              		.section	.text.enterPressed,"ax",%progbits
 11711              		.align	2
 11712              		.global	enterPressed
 11713              		.thumb
 11714              		.thumb_func
 11715              		.type	enterPressed, %function
 11716              	enterPressed:
 11717              	.LFB102:
3041:main.c        **** 
3042:main.c        **** void enterPressed()
3043:main.c        **** {
 11718              		.loc 1 3043 0
 11719              		.cfi_startproc
 11720              		@ args = 0, pretend = 0, frame = 0
 11721              		@ frame_needed = 1, uses_anonymous_args = 0
 11722 0000 80B5     		push	{r7, lr}
 11723              		.cfi_def_cfa_offset 8
 11724              		.cfi_offset 7, -8
 11725              		.cfi_offset 14, -4
 11726 0002 00AF     		add	r7, sp, #0
 11727              		.cfi_def_cfa_register 7
3044:main.c        ****     if (!editMode) //normal behavior
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 264


 11728              		.loc 1 3044 0
 11729 0004 044B     		ldr	r3, .L530
 11730 0006 1B68     		ldr	r3, [r3]
 11731 0008 002B     		cmp	r3, #0
 11732 000a 02D0     		beq	.L529
3045:main.c        ****     {
3046:main.c        ****         ;//nothing
3047:main.c        ****     }
3048:main.c        ****     else
3049:main.c        ****     {
3050:main.c        ****         menuAction(Enter);
 11733              		.loc 1 3050 0
 11734 000c 0420     		movs	r0, #4
 11735 000e FFF7FEFF 		bl	menuAction
 11736              	.L529:
3051:main.c        ****     }
3052:main.c        **** }
 11737              		.loc 1 3052 0
 11738 0012 00BF     		nop
 11739 0014 80BD     		pop	{r7, pc}
 11740              	.L531:
 11741 0016 00BF     		.align	2
 11742              	.L530:
 11743 0018 00000000 		.word	editMode
 11744              		.cfi_endproc
 11745              	.LFE102:
 11746              		.size	enterPressed, .-enterPressed
 11747              		.section	.rodata
 11748              		.align	2
 11749              	.LC23:
 11750 0598 43414C49 		.ascii	"CALIBRATION\000"
 11750      42524154 
 11750      494F4E00 
 11751              		.align	2
 11752              	.LC24:
 11753 05a4 4D4F5645 		.ascii	"MOVE ALL PEDALS\000"
 11753      20414C4C 
 11753      20504544 
 11753      414C5300 
 11754              		.align	2
 11755              	.LC25:
 11756 05b4 414E4420 		.ascii	"AND LEVERS\000"
 11756      4C455645 
 11756      525300
 11757 05bf 00       		.align	2
 11758              	.LC26:
 11759 05c0 5448454E 		.ascii	"THEN PRESS ->\000"
 11759      20505245 
 11759      5353202D 
 11759      3E00
 11760              		.section	.text.enterLeverCalibrationMode,"ax",%progbits
 11761              		.align	2
 11762              		.global	enterLeverCalibrationMode
 11763              		.thumb
 11764              		.thumb_func
 11765              		.type	enterLeverCalibrationMode, %function
 11766              	enterLeverCalibrationMode:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 265


 11767              	.LFB103:
3053:main.c        **** 
3054:main.c        **** void enterLeverCalibrationMode(void)
3055:main.c        **** {
 11768              		.loc 1 3055 0
 11769              		.cfi_startproc
 11770              		@ args = 0, pretend = 0, frame = 8
 11771              		@ frame_needed = 1, uses_anonymous_args = 0
 11772 0000 80B5     		push	{r7, lr}
 11773              		.cfi_def_cfa_offset 8
 11774              		.cfi_offset 7, -8
 11775              		.cfi_offset 14, -4
 11776 0002 82B0     		sub	sp, sp, #8
 11777              		.cfi_def_cfa_offset 16
 11778 0004 00AF     		add	r7, sp, #0
 11779              		.cfi_def_cfa_register 7
3056:main.c        ****     OLEDclear(128, 64);
 11780              		.loc 1 3056 0
 11781 0006 4021     		movs	r1, #64
 11782 0008 8020     		movs	r0, #128
 11783 000a FFF7FEFF 		bl	OLEDclear
3057:main.c        ****     myGFX_setFont(2);
 11784              		.loc 1 3057 0
 11785 000e 0220     		movs	r0, #2
 11786 0010 FFF7FEFF 		bl	myGFX_setFont
3058:main.c        ****     OLEDtextColor(0, 1);
 11787              		.loc 1 3058 0
 11788 0014 0121     		movs	r1, #1
 11789 0016 0020     		movs	r0, #0
 11790 0018 FFF7FEFF 		bl	OLEDtextColor
3059:main.c        ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 11791              		.loc 1 3059 0
 11792 001c 0023     		movs	r3, #0
 11793 001e 0122     		movs	r2, #1
 11794 0020 0B21     		movs	r1, #11
 11795 0022 1B48     		ldr	r0, .L535
 11796 0024 FFF7FEFF 		bl	OLEDwriteString
3060:main.c        ****     OLEDwriteString("MOVE ALL PEDALS", 15, 1, SecondLine);
 11797              		.loc 1 3060 0
 11798 0028 0123     		movs	r3, #1
 11799 002a 0122     		movs	r2, #1
 11800 002c 0F21     		movs	r1, #15
 11801 002e 1948     		ldr	r0, .L535+4
 11802 0030 FFF7FEFF 		bl	OLEDwriteString
3061:main.c        ****     OLEDwriteString("AND LEVERS", 10, 1, ThirdLine);
 11803              		.loc 1 3061 0
 11804 0034 0223     		movs	r3, #2
 11805 0036 0122     		movs	r2, #1
 11806 0038 0A21     		movs	r1, #10
 11807 003a 1748     		ldr	r0, .L535+8
 11808 003c FFF7FEFF 		bl	OLEDwriteString
3062:main.c        ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 11809              		.loc 1 3062 0
 11810 0040 0323     		movs	r3, #3
 11811 0042 0122     		movs	r2, #1
 11812 0044 0F21     		movs	r1, #15
 11813 0046 1548     		ldr	r0, .L535+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 266


 11814 0048 FFF7FEFF 		bl	OLEDwriteString
3063:main.c        ****     mainOLEDWaitingToSend = 1;
 11815              		.loc 1 3063 0
 11816 004c 144B     		ldr	r3, .L535+16
 11817 004e 0122     		movs	r2, #1
 11818 0050 1A60     		str	r2, [r3]
3064:main.c        ****     OLEDtextColor(1, 0);
 11819              		.loc 1 3064 0
 11820 0052 0021     		movs	r1, #0
 11821 0054 0120     		movs	r0, #1
 11822 0056 FFF7FEFF 		bl	OLEDtextColor
 11823              	.LBB63:
3065:main.c        ****     //entering calibration mode, clear the pedals low and high arrays
3066:main.c        ****     for (int i = 0; i < 10; i++)
 11824              		.loc 1 3066 0
 11825 005a 0023     		movs	r3, #0
 11826 005c 7B60     		str	r3, [r7, #4]
 11827 005e 0DE0     		b	.L533
 11828              	.L534:
3067:main.c        ****     {
3068:main.c        ****         pedals_low[i] = 4095;
 11829              		.loc 1 3068 0 discriminator 3
 11830 0060 104A     		ldr	r2, .L535+20
 11831 0062 7B68     		ldr	r3, [r7, #4]
 11832 0064 40F6FF71 		movw	r1, #4095
 11833 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
3069:main.c        ****         pedals_high[i] = 0;
 11834              		.loc 1 3069 0 discriminator 3
 11835 006c 0E4A     		ldr	r2, .L535+24
 11836 006e 7B68     		ldr	r3, [r7, #4]
 11837 0070 0021     		movs	r1, #0
 11838 0072 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
3066:main.c        ****     {
 11839              		.loc 1 3066 0 discriminator 3
 11840 0076 7B68     		ldr	r3, [r7, #4]
 11841 0078 0133     		adds	r3, r3, #1
 11842 007a 7B60     		str	r3, [r7, #4]
 11843              	.L533:
3066:main.c        ****     {
 11844              		.loc 1 3066 0 is_stmt 0 discriminator 1
 11845 007c 7B68     		ldr	r3, [r7, #4]
 11846 007e 092B     		cmp	r3, #9
 11847 0080 EEDD     		ble	.L534
 11848              	.LBE63:
3070:main.c        ****     }
3071:main.c        ****     leverCalibrationMode = 1;
 11849              		.loc 1 3071 0 is_stmt 1
 11850 0082 0A4B     		ldr	r3, .L535+28
 11851 0084 0122     		movs	r2, #1
 11852 0086 1A60     		str	r2, [r3]
3072:main.c        **** }
 11853              		.loc 1 3072 0
 11854 0088 00BF     		nop
 11855 008a 0837     		adds	r7, r7, #8
 11856              		.cfi_def_cfa_offset 8
 11857 008c BD46     		mov	sp, r7
 11858              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 267


 11859              		@ sp needed
 11860 008e 80BD     		pop	{r7, pc}
 11861              	.L536:
 11862              		.align	2
 11863              	.L535:
 11864 0090 98050000 		.word	.LC23
 11865 0094 A4050000 		.word	.LC24
 11866 0098 B4050000 		.word	.LC25
 11867 009c C0050000 		.word	.LC26
 11868 00a0 00000000 		.word	mainOLEDWaitingToSend
 11869 00a4 00000000 		.word	pedals_low
 11870 00a8 00000000 		.word	pedals_high
 11871 00ac 00000000 		.word	leverCalibrationMode
 11872              		.cfi_endproc
 11873              	.LFE103:
 11874              		.size	enterLeverCalibrationMode, .-enterLeverCalibrationMode
 11875              		.section	.text.exitLeverCalibrationMode,"ax",%progbits
 11876              		.align	2
 11877              		.global	exitLeverCalibrationMode
 11878              		.thumb
 11879              		.thumb_func
 11880              		.type	exitLeverCalibrationMode, %function
 11881              	exitLeverCalibrationMode:
 11882              	.LFB104:
3073:main.c        **** 
3074:main.c        **** void exitLeverCalibrationMode(void)
3075:main.c        **** {
 11883              		.loc 1 3075 0
 11884              		.cfi_startproc
 11885              		@ args = 0, pretend = 0, frame = 16
 11886              		@ frame_needed = 1, uses_anonymous_args = 0
 11887 0000 80B5     		push	{r7, lr}
 11888              		.cfi_def_cfa_offset 8
 11889              		.cfi_offset 7, -8
 11890              		.cfi_offset 14, -4
 11891 0002 84B0     		sub	sp, sp, #16
 11892              		.cfi_def_cfa_offset 24
 11893 0004 00AF     		add	r7, sp, #0
 11894              		.cfi_def_cfa_register 7
3076:main.c        ****     leverCalibrationMode = 0;
 11895              		.loc 1 3076 0
 11896 0006 4E4B     		ldr	r3, .L546
 11897 0008 0022     		movs	r2, #0
 11898 000a 1A60     		str	r2, [r3]
 11899              	.LBB64:
3077:main.c        ****     //draw normal screen
3078:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 11900              		.loc 1 3078 0
 11901 000c 0023     		movs	r3, #0
 11902 000e FB60     		str	r3, [r7, #12]
 11903 0010 19E0     		b	.L538
 11904              	.L541:
3079:main.c        ****     {
3080:main.c        ****         //if you are closer to pedal high than pedal low, then switch high and low, the sensor is r
3081:main.c        ****         if (angle[i] > (pedals_low[i]+20))
 11905              		.loc 1 3081 0
 11906 0012 4C4A     		ldr	r2, .L546+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 268


 11907 0014 FB68     		ldr	r3, [r7, #12]
 11908 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 11909 001a 1946     		mov	r1, r3
 11910 001c 4A4A     		ldr	r2, .L546+8
 11911 001e FB68     		ldr	r3, [r7, #12]
 11912 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 11913 0024 1433     		adds	r3, r3, #20
 11914 0026 9942     		cmp	r1, r3
 11915 0028 05DD     		ble	.L539
3082:main.c        ****         {
3083:main.c        ****             pedal_inverted[i] = 1;
 11916              		.loc 1 3083 0
 11917 002a 484A     		ldr	r2, .L546+12
 11918 002c FB68     		ldr	r3, [r7, #12]
 11919 002e 1344     		add	r3, r3, r2
 11920 0030 0122     		movs	r2, #1
 11921 0032 1A70     		strb	r2, [r3]
 11922 0034 04E0     		b	.L540
 11923              	.L539:
3084:main.c        ****         }
3085:main.c        ****         else
3086:main.c        ****         {
3087:main.c        ****             pedal_inverted[i] = 0;
 11924              		.loc 1 3087 0
 11925 0036 454A     		ldr	r2, .L546+12
 11926 0038 FB68     		ldr	r3, [r7, #12]
 11927 003a 1344     		add	r3, r3, r2
 11928 003c 0022     		movs	r2, #0
 11929 003e 1A70     		strb	r2, [r3]
 11930              	.L540:
3078:main.c        ****     {
 11931              		.loc 1 3078 0 discriminator 2
 11932 0040 FB68     		ldr	r3, [r7, #12]
 11933 0042 0133     		adds	r3, r3, #1
 11934 0044 FB60     		str	r3, [r7, #12]
 11935              	.L538:
3078:main.c        ****     {
 11936              		.loc 1 3078 0 is_stmt 0 discriminator 1
 11937 0046 FB68     		ldr	r3, [r7, #12]
 11938 0048 092B     		cmp	r3, #9
 11939 004a E2DD     		ble	.L541
 11940              	.LBE64:
3088:main.c        ****         }
3089:main.c        ****     }
3090:main.c        ****     uint16_t pedal_inverted_byte = 0;
 11941              		.loc 1 3090 0 is_stmt 1
 11942 004c 0023     		movs	r3, #0
 11943 004e 7B81     		strh	r3, [r7, #10]	@ movhi
 11944              	.LBB65:
3091:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 11945              		.loc 1 3091 0
 11946 0050 0023     		movs	r3, #0
 11947 0052 7B60     		str	r3, [r7, #4]
 11948 0054 0EE0     		b	.L542
 11949              	.L543:
3092:main.c        ****     {
3093:main.c        ****         pedal_inverted_byte += pedal_inverted[i] << i;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 269


 11950              		.loc 1 3093 0 discriminator 3
 11951 0056 3D4A     		ldr	r2, .L546+12
 11952 0058 7B68     		ldr	r3, [r7, #4]
 11953 005a 1344     		add	r3, r3, r2
 11954 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11955 005e 1A46     		mov	r2, r3
 11956 0060 7B68     		ldr	r3, [r7, #4]
 11957 0062 02FA03F3 		lsl	r3, r2, r3
 11958 0066 9AB2     		uxth	r2, r3
 11959 0068 7B89     		ldrh	r3, [r7, #10]	@ movhi
 11960 006a 1344     		add	r3, r3, r2
 11961 006c 7B81     		strh	r3, [r7, #10]	@ movhi
3091:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 11962              		.loc 1 3091 0 discriminator 3
 11963 006e 7B68     		ldr	r3, [r7, #4]
 11964 0070 0133     		adds	r3, r3, #1
 11965 0072 7B60     		str	r3, [r7, #4]
 11966              	.L542:
3091:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 11967              		.loc 1 3091 0 is_stmt 0 discriminator 1
 11968 0074 7B68     		ldr	r3, [r7, #4]
 11969 0076 092B     		cmp	r3, #9
 11970 0078 EDDD     		ble	.L543
 11971              	.LBE65:
3094:main.c        ****     }
3095:main.c        ****     EEPROM_WriteByte(pedal_inverted_byte>>8, EEPROM_PEDAL_INVERTED_OFFSET);
 11972              		.loc 1 3095 0 is_stmt 1
 11973 007a 7B89     		ldrh	r3, [r7, #10]
 11974 007c 1B0A     		lsrs	r3, r3, #8
 11975 007e 9BB2     		uxth	r3, r3
 11976 0080 DBB2     		uxtb	r3, r3
 11977 0082 40F2FB71 		movw	r1, #2043
 11978 0086 1846     		mov	r0, r3
 11979 0088 FFF7FEFF 		bl	EEPROM_WriteByte
3096:main.c        ****     EEPROM_WriteByte(pedal_inverted_byte& 255, EEPROM_PEDAL_INVERTED_OFFSET+1);
 11980              		.loc 1 3096 0
 11981 008c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 11982 008e DBB2     		uxtb	r3, r3
 11983 0090 40F2FC71 		movw	r1, #2044
 11984 0094 1846     		mov	r0, r3
 11985 0096 FFF7FEFF 		bl	EEPROM_WriteByte
3097:main.c        ****     calculatePedalRatios();
 11986              		.loc 1 3097 0
 11987 009a FFF7FEFF 		bl	calculatePedalRatios
 11988              	.LBB66:
3098:main.c        ****     //now need to store this in EEPROM.                
3099:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 11989              		.loc 1 3099 0
 11990 009e 0023     		movs	r3, #0
 11991 00a0 3B60     		str	r3, [r7]
 11992 00a2 45E0     		b	.L544
 11993              	.L545:
3100:main.c        ****     {
3101:main.c        ****          EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + (i*4));
 11994              		.loc 1 3101 0 discriminator 3
 11995 00a4 284A     		ldr	r2, .L546+8
 11996 00a6 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 270


 11997 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 11998 00ac 1B0A     		lsrs	r3, r3, #8
 11999 00ae 9BB2     		uxth	r3, r3
 12000 00b0 DAB2     		uxtb	r2, r3
 12001 00b2 3B68     		ldr	r3, [r7]
 12002 00b4 9BB2     		uxth	r3, r3
 12003 00b6 9B00     		lsls	r3, r3, #2
 12004 00b8 9BB2     		uxth	r3, r3
 12005 00ba 03F29A73 		addw	r3, r3, #1946
 12006 00be 9BB2     		uxth	r3, r3
 12007 00c0 1946     		mov	r1, r3
 12008 00c2 1046     		mov	r0, r2
 12009 00c4 FFF7FEFF 		bl	EEPROM_WriteByte
3102:main.c        ****          EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 1));
 12010              		.loc 1 3102 0 discriminator 3
 12011 00c8 1F4A     		ldr	r2, .L546+8
 12012 00ca 3B68     		ldr	r3, [r7]
 12013 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 12014 00d0 DAB2     		uxtb	r2, r3
 12015 00d2 3B68     		ldr	r3, [r7]
 12016 00d4 9BB2     		uxth	r3, r3
 12017 00d6 9B00     		lsls	r3, r3, #2
 12018 00d8 9BB2     		uxth	r3, r3
 12019 00da 03F29B73 		addw	r3, r3, #1947
 12020 00de 9BB2     		uxth	r3, r3
 12021 00e0 1946     		mov	r1, r3
 12022 00e2 1046     		mov	r0, r2
 12023 00e4 FFF7FEFF 		bl	EEPROM_WriteByte
3103:main.c        ****          EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2));
 12024              		.loc 1 3103 0 discriminator 3
 12025 00e8 194A     		ldr	r2, .L546+16
 12026 00ea 3B68     		ldr	r3, [r7]
 12027 00ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 12028 00f0 1B0A     		lsrs	r3, r3, #8
 12029 00f2 9BB2     		uxth	r3, r3
 12030 00f4 DAB2     		uxtb	r2, r3
 12031 00f6 3B68     		ldr	r3, [r7]
 12032 00f8 03F2E713 		addw	r3, r3, #487
 12033 00fc 9BB2     		uxth	r3, r3
 12034 00fe 9B00     		lsls	r3, r3, #2
 12035 0100 9BB2     		uxth	r3, r3
 12036 0102 1946     		mov	r1, r3
 12037 0104 1046     		mov	r0, r2
 12038 0106 FFF7FEFF 		bl	EEPROM_WriteByte
3104:main.c        ****          EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 3));
 12039              		.loc 1 3104 0 discriminator 3
 12040 010a 114A     		ldr	r2, .L546+16
 12041 010c 3B68     		ldr	r3, [r7]
 12042 010e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 12043 0112 DAB2     		uxtb	r2, r3
 12044 0114 3B68     		ldr	r3, [r7]
 12045 0116 9BB2     		uxth	r3, r3
 12046 0118 9B00     		lsls	r3, r3, #2
 12047 011a 9BB2     		uxth	r3, r3
 12048 011c 03F29D73 		addw	r3, r3, #1949
 12049 0120 9BB2     		uxth	r3, r3
 12050 0122 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 271


 12051 0124 1046     		mov	r0, r2
 12052 0126 FFF7FEFF 		bl	EEPROM_WriteByte
3099:main.c        ****     {
 12053              		.loc 1 3099 0 discriminator 3
 12054 012a 3B68     		ldr	r3, [r7]
 12055 012c 0133     		adds	r3, r3, #1
 12056 012e 3B60     		str	r3, [r7]
 12057              	.L544:
3099:main.c        ****     {
 12058              		.loc 1 3099 0 is_stmt 0 discriminator 1
 12059 0130 3B68     		ldr	r3, [r7]
 12060 0132 092B     		cmp	r3, #9
 12061 0134 B6DD     		ble	.L545
 12062              	.LBE66:
3105:main.c        ****     }
3106:main.c        **** }
 12063              		.loc 1 3106 0 is_stmt 1
 12064 0136 00BF     		nop
 12065 0138 1037     		adds	r7, r7, #16
 12066              		.cfi_def_cfa_offset 8
 12067 013a BD46     		mov	sp, r7
 12068              		.cfi_def_cfa_register 13
 12069              		@ sp needed
 12070 013c 80BD     		pop	{r7, pc}
 12071              	.L547:
 12072 013e 00BF     		.align	2
 12073              	.L546:
 12074 0140 00000000 		.word	leverCalibrationMode
 12075 0144 00000000 		.word	angle
 12076 0148 00000000 		.word	pedals_low
 12077 014c 00000000 		.word	pedal_inverted
 12078 0150 00000000 		.word	pedals_high
 12079              		.cfi_endproc
 12080              	.LFE104:
 12081              		.size	exitLeverCalibrationMode, .-exitLeverCalibrationMode
 12082              		.section	.rodata
 12083 05ce 0000     		.align	2
 12084              	.LC27:
 12085 05d0 504C4143 		.ascii	"PLACE BAR AT \000"
 12085      45204241 
 12085      52204154 
 12085      2000
 12086 05de 0000     		.align	2
 12087              	.LC28:
 12088 05e0 46524554 		.ascii	"FRET \000"
 12088      2000
 12089              		.section	.text.enterFretCalibrationMode,"ax",%progbits
 12090              		.align	2
 12091              		.global	enterFretCalibrationMode
 12092              		.thumb
 12093              		.thumb_func
 12094              		.type	enterFretCalibrationMode, %function
 12095              	enterFretCalibrationMode:
 12096              	.LFB105:
3107:main.c        **** 
3108:main.c        **** 
3109:main.c        **** void enterFretCalibrationMode(void)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 272


3110:main.c        **** {
 12097              		.loc 1 3110 0
 12098              		.cfi_startproc
 12099              		@ args = 0, pretend = 0, frame = 0
 12100              		@ frame_needed = 1, uses_anonymous_args = 0
 12101 0000 80B5     		push	{r7, lr}
 12102              		.cfi_def_cfa_offset 8
 12103              		.cfi_offset 7, -8
 12104              		.cfi_offset 14, -4
 12105 0002 00AF     		add	r7, sp, #0
 12106              		.cfi_def_cfa_register 7
3111:main.c        ****     OLEDclear(128, 64);
 12107              		.loc 1 3111 0
 12108 0004 4021     		movs	r1, #64
 12109 0006 8020     		movs	r0, #128
 12110 0008 FFF7FEFF 		bl	OLEDclear
3112:main.c        ****     myGFX_setFont(2);
 12111              		.loc 1 3112 0
 12112 000c 0220     		movs	r0, #2
 12113 000e FFF7FEFF 		bl	myGFX_setFont
3113:main.c        ****     OLEDtextColor(0, 1);
 12114              		.loc 1 3113 0
 12115 0012 0121     		movs	r1, #1
 12116 0014 0020     		movs	r0, #0
 12117 0016 FFF7FEFF 		bl	OLEDtextColor
3114:main.c        ****     fretToCalibrate = 0;
 12118              		.loc 1 3114 0
 12119 001a 194B     		ldr	r3, .L549
 12120 001c 0022     		movs	r2, #0
 12121 001e 1A70     		strb	r2, [r3]
3115:main.c        ****     OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 12122              		.loc 1 3115 0
 12123 0020 0023     		movs	r3, #0
 12124 0022 0122     		movs	r2, #1
 12125 0024 0B21     		movs	r1, #11
 12126 0026 1748     		ldr	r0, .L549+4
 12127 0028 FFF7FEFF 		bl	OLEDwriteString
3116:main.c        ****     OLEDwriteString("PLACE BAR AT ", 15, 1, SecondLine);
 12128              		.loc 1 3116 0
 12129 002c 0123     		movs	r3, #1
 12130 002e 0122     		movs	r2, #1
 12131 0030 0F21     		movs	r1, #15
 12132 0032 1548     		ldr	r0, .L549+8
 12133 0034 FFF7FEFF 		bl	OLEDwriteString
3117:main.c        ****     OLEDwriteString("FRET ", 5, 1, ThirdLine);
 12134              		.loc 1 3117 0
 12135 0038 0223     		movs	r3, #2
 12136 003a 0122     		movs	r2, #1
 12137 003c 0521     		movs	r1, #5
 12138 003e 1348     		ldr	r0, .L549+12
 12139 0040 FFF7FEFF 		bl	OLEDwriteString
3118:main.c        ****     OLEDwriteInt(whichFretArray[fretToCalibrate], 2, 40, ThirdLine);
 12140              		.loc 1 3118 0
 12141 0044 0E4B     		ldr	r3, .L549
 12142 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12143 0048 1A46     		mov	r2, r3
 12144 004a 114B     		ldr	r3, .L549+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 273


 12145 004c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 12146 004e 1846     		mov	r0, r3
 12147 0050 0223     		movs	r3, #2
 12148 0052 2822     		movs	r2, #40
 12149 0054 0221     		movs	r1, #2
 12150 0056 FFF7FEFF 		bl	OLEDwriteInt
3119:main.c        ****     OLEDwriteString("THEN PRESS ->", 15, 1, FourthLine);
 12151              		.loc 1 3119 0
 12152 005a 0323     		movs	r3, #3
 12153 005c 0122     		movs	r2, #1
 12154 005e 0F21     		movs	r1, #15
 12155 0060 0C48     		ldr	r0, .L549+20
 12156 0062 FFF7FEFF 		bl	OLEDwriteString
3120:main.c        ****     mainOLEDWaitingToSend = 1;
 12157              		.loc 1 3120 0
 12158 0066 0C4B     		ldr	r3, .L549+24
 12159 0068 0122     		movs	r2, #1
 12160 006a 1A60     		str	r2, [r3]
3121:main.c        ****     OLEDtextColor(1, 0);
 12161              		.loc 1 3121 0
 12162 006c 0021     		movs	r1, #0
 12163 006e 0120     		movs	r0, #1
 12164 0070 FFF7FEFF 		bl	OLEDtextColor
3122:main.c        ****     fretCalibrationMode = 1;
 12165              		.loc 1 3122 0
 12166 0074 094B     		ldr	r3, .L549+28
 12167 0076 0122     		movs	r2, #1
 12168 0078 1A60     		str	r2, [r3]
3123:main.c        **** }
 12169              		.loc 1 3123 0
 12170 007a 00BF     		nop
 12171 007c 80BD     		pop	{r7, pc}
 12172              	.L550:
 12173 007e 00BF     		.align	2
 12174              	.L549:
 12175 0080 00000000 		.word	fretToCalibrate
 12176 0084 98050000 		.word	.LC23
 12177 0088 D0050000 		.word	.LC27
 12178 008c E0050000 		.word	.LC28
 12179 0090 00000000 		.word	whichFretArray
 12180 0094 C0050000 		.word	.LC26
 12181 0098 00000000 		.word	mainOLEDWaitingToSend
 12182 009c 00000000 		.word	fretCalibrationMode
 12183              		.cfi_endproc
 12184              	.LFE105:
 12185              		.size	enterFretCalibrationMode, .-enterFretCalibrationMode
 12186              		.section	.text.exitFretCalibrationMode,"ax",%progbits
 12187              		.align	2
 12188              		.global	exitFretCalibrationMode
 12189              		.thumb
 12190              		.thumb_func
 12191              		.type	exitFretCalibrationMode, %function
 12192              	exitFretCalibrationMode:
 12193              	.LFB106:
3124:main.c        **** 
3125:main.c        **** void exitFretCalibrationMode(void)
3126:main.c        **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 274


 12194              		.loc 1 3126 0
 12195              		.cfi_startproc
 12196              		@ args = 0, pretend = 0, frame = 8
 12197              		@ frame_needed = 1, uses_anonymous_args = 0
 12198 0000 80B5     		push	{r7, lr}
 12199              		.cfi_def_cfa_offset 8
 12200              		.cfi_offset 7, -8
 12201              		.cfi_offset 14, -4
 12202 0002 82B0     		sub	sp, sp, #8
 12203              		.cfi_def_cfa_offset 16
 12204 0004 00AF     		add	r7, sp, #0
 12205              		.cfi_def_cfa_register 7
3127:main.c        ****     fretCalibrationMode = 0;
 12206              		.loc 1 3127 0
 12207 0006 2B4B     		ldr	r3, .L554
 12208 0008 0022     		movs	r2, #0
 12209 000a 1A60     		str	r2, [r3]
 12210              	.LBB67:
3128:main.c        ****     //now need to store this in EEPROM.                
3129:main.c        ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 12211              		.loc 1 3129 0
 12212 000c 0023     		movs	r3, #0
 12213 000e 7B60     		str	r3, [r7, #4]
 12214 0010 47E0     		b	.L552
 12215              	.L553:
3130:main.c        ****     {
3131:main.c        ****          EEPROM_WriteByte((fretMeasurements[0][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + (i*4));
 12216              		.loc 1 3131 0 discriminator 3
 12217 0012 294A     		ldr	r2, .L554+4
 12218 0014 7B68     		ldr	r3, [r7, #4]
 12219 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 12220 001a 1B0A     		lsrs	r3, r3, #8
 12221 001c 9BB2     		uxth	r3, r3
 12222 001e DAB2     		uxtb	r2, r3
 12223 0020 7B68     		ldr	r3, [r7, #4]
 12224 0022 9BB2     		uxth	r3, r3
 12225 0024 9B00     		lsls	r3, r3, #2
 12226 0026 9BB2     		uxth	r3, r3
 12227 0028 03F2C273 		addw	r3, r3, #1986
 12228 002c 9BB2     		uxth	r3, r3
 12229 002e 1946     		mov	r1, r3
 12230 0030 1046     		mov	r0, r2
 12231 0032 FFF7FEFF 		bl	EEPROM_WriteByte
3132:main.c        ****          EEPROM_WriteByte((fretMeasurements[0][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 12232              		.loc 1 3132 0 discriminator 3
 12233 0036 204A     		ldr	r2, .L554+4
 12234 0038 7B68     		ldr	r3, [r7, #4]
 12235 003a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 12236 003e DAB2     		uxtb	r2, r3
 12237 0040 7B68     		ldr	r3, [r7, #4]
 12238 0042 9BB2     		uxth	r3, r3
 12239 0044 9B00     		lsls	r3, r3, #2
 12240 0046 9BB2     		uxth	r3, r3
 12241 0048 03F2C373 		addw	r3, r3, #1987
 12242 004c 9BB2     		uxth	r3, r3
 12243 004e 1946     		mov	r1, r3
 12244 0050 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 275


 12245 0052 FFF7FEFF 		bl	EEPROM_WriteByte
3133:main.c        ****          EEPROM_WriteByte((fretMeasurements[1][i] >> 8), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 
 12246              		.loc 1 3133 0 discriminator 3
 12247 0056 184A     		ldr	r2, .L554+4
 12248 0058 7B68     		ldr	r3, [r7, #4]
 12249 005a 0C33     		adds	r3, r3, #12
 12250 005c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 12251 0060 1B0A     		lsrs	r3, r3, #8
 12252 0062 9BB2     		uxth	r3, r3
 12253 0064 DAB2     		uxtb	r2, r3
 12254 0066 7B68     		ldr	r3, [r7, #4]
 12255 0068 03F2F113 		addw	r3, r3, #497
 12256 006c 9BB2     		uxth	r3, r3
 12257 006e 9B00     		lsls	r3, r3, #2
 12258 0070 9BB2     		uxth	r3, r3
 12259 0072 1946     		mov	r1, r3
 12260 0074 1046     		mov	r0, r2
 12261 0076 FFF7FEFF 		bl	EEPROM_WriteByte
3134:main.c        ****          EEPROM_WriteByte((fretMeasurements[1][i] & 255), EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) +
 12262              		.loc 1 3134 0 discriminator 3
 12263 007a 0F4A     		ldr	r2, .L554+4
 12264 007c 7B68     		ldr	r3, [r7, #4]
 12265 007e 0C33     		adds	r3, r3, #12
 12266 0080 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 12267 0084 DAB2     		uxtb	r2, r3
 12268 0086 7B68     		ldr	r3, [r7, #4]
 12269 0088 9BB2     		uxth	r3, r3
 12270 008a 9B00     		lsls	r3, r3, #2
 12271 008c 9BB2     		uxth	r3, r3
 12272 008e 03F2C573 		addw	r3, r3, #1989
 12273 0092 9BB2     		uxth	r3, r3
 12274 0094 1946     		mov	r1, r3
 12275 0096 1046     		mov	r0, r2
 12276 0098 FFF7FEFF 		bl	EEPROM_WriteByte
3129:main.c        ****     {
 12277              		.loc 1 3129 0 discriminator 3
 12278 009c 7B68     		ldr	r3, [r7, #4]
 12279 009e 0133     		adds	r3, r3, #1
 12280 00a0 7B60     		str	r3, [r7, #4]
 12281              	.L552:
3129:main.c        ****     {
 12282              		.loc 1 3129 0 is_stmt 0 discriminator 1
 12283 00a2 7B68     		ldr	r3, [r7, #4]
 12284 00a4 0B2B     		cmp	r3, #11
 12285 00a6 B4DD     		ble	.L553
 12286              	.LBE67:
3135:main.c        ****     }
3136:main.c        ****     exitEditModeMenu();
 12287              		.loc 1 3136 0 is_stmt 1
 12288 00a8 FFF7FEFF 		bl	exitEditModeMenu
3137:main.c        **** 
3138:main.c        **** }
 12289              		.loc 1 3138 0
 12290 00ac 00BF     		nop
 12291 00ae 0837     		adds	r7, r7, #8
 12292              		.cfi_def_cfa_offset 8
 12293 00b0 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 276


 12294              		.cfi_def_cfa_register 13
 12295              		@ sp needed
 12296 00b2 80BD     		pop	{r7, pc}
 12297              	.L555:
 12298              		.align	2
 12299              	.L554:
 12300 00b4 00000000 		.word	fretCalibrationMode
 12301 00b8 00000000 		.word	fretMeasurements
 12302              		.cfi_endproc
 12303              	.LFE106:
 12304              		.size	exitFretCalibrationMode, .-exitFretCalibrationMode
 12305              		.text
 12306              	.Letext0:
 12307              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 12308              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 12309              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 12310              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 12311              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 12312              		.file 7 "gfx_font.h"
 12313              		.file 8 "gfx.h"
 12314              		.file 9 "oled.h"
 12315              		.file 10 "main.h"
 12316              		.file 11 "Generated_Source\\PSoC5/USB_midi.h"
 12317              		.file 12 "Generated_Source\\PSoC5/Em_EEPROM.h"
 12318              		.file 13 "Generated_Source\\PSoC5/I2C_1.h"
 12319              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 12320              		.file 15 "Generated_Source\\PSoC5/Decoder_1.h"
 12321              		.section	.debug_info,"",%progbits
 12322              	.Ldebug_info0:
 12323 0000 BB250000 		.4byte	0x25bb
 12324 0004 0400     		.2byte	0x4
 12325 0006 00000000 		.4byte	.Ldebug_abbrev0
 12326 000a 04       		.byte	0x4
 12327 000b 01       		.uleb128 0x1
 12328 000c 4A0B0000 		.4byte	.LASF425
 12329 0010 0C       		.byte	0xc
 12330 0011 0D0D0000 		.4byte	.LASF426
 12331 0015 0A090000 		.4byte	.LASF427
 12332 0019 00000000 		.4byte	.Ldebug_ranges0+0
 12333 001d 00000000 		.4byte	0
 12334 0021 00000000 		.4byte	.Ldebug_line0
 12335 0025 02       		.uleb128 0x2
 12336 0026 02100000 		.4byte	.LASF0
 12337 002a 02       		.byte	0x2
 12338 002b 1B       		.byte	0x1b
 12339 002c 30000000 		.4byte	0x30
 12340 0030 03       		.uleb128 0x3
 12341 0031 01       		.byte	0x1
 12342 0032 06       		.byte	0x6
 12343 0033 99040000 		.4byte	.LASF2
 12344 0037 02       		.uleb128 0x2
 12345 0038 D9020000 		.4byte	.LASF1
 12346 003c 02       		.byte	0x2
 12347 003d 1D       		.byte	0x1d
 12348 003e 42000000 		.4byte	0x42
 12349 0042 03       		.uleb128 0x3
 12350 0043 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 277


 12351 0044 08       		.byte	0x8
 12352 0045 5B050000 		.4byte	.LASF3
 12353 0049 02       		.uleb128 0x2
 12354 004a 81110000 		.4byte	.LASF4
 12355 004e 02       		.byte	0x2
 12356 004f 29       		.byte	0x29
 12357 0050 54000000 		.4byte	0x54
 12358 0054 03       		.uleb128 0x3
 12359 0055 02       		.byte	0x2
 12360 0056 05       		.byte	0x5
 12361 0057 C8120000 		.4byte	.LASF5
 12362 005b 02       		.uleb128 0x2
 12363 005c BD060000 		.4byte	.LASF6
 12364 0060 02       		.byte	0x2
 12365 0061 2B       		.byte	0x2b
 12366 0062 66000000 		.4byte	0x66
 12367 0066 03       		.uleb128 0x3
 12368 0067 02       		.byte	0x2
 12369 0068 07       		.byte	0x7
 12370 0069 5A150000 		.4byte	.LASF7
 12371 006d 02       		.uleb128 0x2
 12372 006e A0150000 		.4byte	.LASF8
 12373 0072 02       		.byte	0x2
 12374 0073 3F       		.byte	0x3f
 12375 0074 78000000 		.4byte	0x78
 12376 0078 03       		.uleb128 0x3
 12377 0079 04       		.byte	0x4
 12378 007a 05       		.byte	0x5
 12379 007b 5B030000 		.4byte	.LASF9
 12380 007f 02       		.uleb128 0x2
 12381 0080 6D0C0000 		.4byte	.LASF10
 12382 0084 02       		.byte	0x2
 12383 0085 41       		.byte	0x41
 12384 0086 8A000000 		.4byte	0x8a
 12385 008a 03       		.uleb128 0x3
 12386 008b 04       		.byte	0x4
 12387 008c 07       		.byte	0x7
 12388 008d E7090000 		.4byte	.LASF11
 12389 0091 03       		.uleb128 0x3
 12390 0092 08       		.byte	0x8
 12391 0093 05       		.byte	0x5
 12392 0094 780C0000 		.4byte	.LASF12
 12393 0098 03       		.uleb128 0x3
 12394 0099 08       		.byte	0x8
 12395 009a 07       		.byte	0x7
 12396 009b 20100000 		.4byte	.LASF13
 12397 009f 04       		.uleb128 0x4
 12398 00a0 04       		.byte	0x4
 12399 00a1 05       		.byte	0x5
 12400 00a2 696E7400 		.ascii	"int\000"
 12401 00a6 03       		.uleb128 0x3
 12402 00a7 04       		.byte	0x4
 12403 00a8 07       		.byte	0x7
 12404 00a9 FE0D0000 		.4byte	.LASF14
 12405 00ad 02       		.uleb128 0x2
 12406 00ae 13000000 		.4byte	.LASF15
 12407 00b2 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 278


 12408 00b3 14       		.byte	0x14
 12409 00b4 25000000 		.4byte	0x25
 12410 00b8 02       		.uleb128 0x2
 12411 00b9 A5040000 		.4byte	.LASF16
 12412 00bd 03       		.byte	0x3
 12413 00be 18       		.byte	0x18
 12414 00bf 37000000 		.4byte	0x37
 12415 00c3 02       		.uleb128 0x2
 12416 00c4 2C130000 		.4byte	.LASF17
 12417 00c8 03       		.byte	0x3
 12418 00c9 20       		.byte	0x20
 12419 00ca 49000000 		.4byte	0x49
 12420 00ce 02       		.uleb128 0x2
 12421 00cf 3C100000 		.4byte	.LASF18
 12422 00d3 03       		.byte	0x3
 12423 00d4 24       		.byte	0x24
 12424 00d5 5B000000 		.4byte	0x5b
 12425 00d9 02       		.uleb128 0x2
 12426 00da D0000000 		.4byte	.LASF19
 12427 00de 03       		.byte	0x3
 12428 00df 2C       		.byte	0x2c
 12429 00e0 6D000000 		.4byte	0x6d
 12430 00e4 02       		.uleb128 0x2
 12431 00e5 DC140000 		.4byte	.LASF20
 12432 00e9 03       		.byte	0x3
 12433 00ea 30       		.byte	0x30
 12434 00eb 7F000000 		.4byte	0x7f
 12435 00ef 05       		.uleb128 0x5
 12436 00f0 68120000 		.4byte	.LASF21
 12437 00f4 04       		.byte	0x4
 12438 00f5 E901     		.2byte	0x1e9
 12439 00f7 42000000 		.4byte	0x42
 12440 00fb 05       		.uleb128 0x5
 12441 00fc 55160000 		.4byte	.LASF22
 12442 0100 04       		.byte	0x4
 12443 0101 EA01     		.2byte	0x1ea
 12444 0103 66000000 		.4byte	0x66
 12445 0107 05       		.uleb128 0x5
 12446 0108 2D010000 		.4byte	.LASF23
 12447 010c 04       		.byte	0x4
 12448 010d EB01     		.2byte	0x1eb
 12449 010f 8A000000 		.4byte	0x8a
 12450 0113 03       		.uleb128 0x3
 12451 0114 04       		.byte	0x4
 12452 0115 04       		.byte	0x4
 12453 0116 860D0000 		.4byte	.LASF24
 12454 011a 03       		.uleb128 0x3
 12455 011b 08       		.byte	0x8
 12456 011c 04       		.byte	0x4
 12457 011d 060D0000 		.4byte	.LASF25
 12458 0121 03       		.uleb128 0x3
 12459 0122 01       		.byte	0x1
 12460 0123 08       		.byte	0x8
 12461 0124 64060000 		.4byte	.LASF26
 12462 0128 05       		.uleb128 0x5
 12463 0129 940E0000 		.4byte	.LASF27
 12464 012d 04       		.byte	0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 279


 12465 012e 8B02     		.2byte	0x28b
 12466 0130 8A000000 		.4byte	0x8a
 12467 0134 05       		.uleb128 0x5
 12468 0135 FD100000 		.4byte	.LASF28
 12469 0139 04       		.byte	0x4
 12470 013a 9302     		.2byte	0x293
 12471 013c 40010000 		.4byte	0x140
 12472 0140 06       		.uleb128 0x6
 12473 0141 EF000000 		.4byte	0xef
 12474 0145 03       		.uleb128 0x3
 12475 0146 08       		.byte	0x8
 12476 0147 04       		.byte	0x4
 12477 0148 750F0000 		.4byte	.LASF29
 12478 014c 03       		.uleb128 0x3
 12479 014d 04       		.byte	0x4
 12480 014e 07       		.byte	0x7
 12481 014f 31000000 		.4byte	.LASF30
 12482 0153 07       		.uleb128 0x7
 12483 0154 04       		.byte	0x4
 12484 0155 59010000 		.4byte	0x159
 12485 0159 08       		.uleb128 0x8
 12486 015a 21010000 		.4byte	0x121
 12487 015e 09       		.uleb128 0x9
 12488 015f EF000000 		.4byte	0xef
 12489 0163 6E010000 		.4byte	0x16e
 12490 0167 0A       		.uleb128 0xa
 12491 0168 4C010000 		.4byte	0x14c
 12492 016c 03       		.byte	0x3
 12493 016d 00       		.byte	0
 12494 016e 0B       		.uleb128 0xb
 12495 016f 1C       		.byte	0x1c
 12496 0170 05       		.byte	0x5
 12497 0171 1601     		.2byte	0x116
 12498 0173 E0010000 		.4byte	0x1e0
 12499 0177 0C       		.uleb128 0xc
 12500 0178 BE040000 		.4byte	.LASF31
 12501 017c 05       		.byte	0x5
 12502 017d 1B01     		.2byte	0x11b
 12503 017f 07010000 		.4byte	0x107
 12504 0183 00       		.byte	0
 12505 0184 0C       		.uleb128 0xc
 12506 0185 9F020000 		.4byte	.LASF32
 12507 0189 05       		.byte	0x5
 12508 018a 2001     		.2byte	0x120
 12509 018c 07010000 		.4byte	0x107
 12510 0190 04       		.byte	0x4
 12511 0191 0C       		.uleb128 0xc
 12512 0192 17160000 		.4byte	.LASF33
 12513 0196 05       		.byte	0x5
 12514 0197 2301     		.2byte	0x123
 12515 0199 07010000 		.4byte	0x107
 12516 019d 08       		.byte	0x8
 12517 019e 0C       		.uleb128 0xc
 12518 019f 41130000 		.4byte	.LASF34
 12519 01a3 05       		.byte	0x5
 12520 01a4 2601     		.2byte	0x126
 12521 01a6 07010000 		.4byte	0x107
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 280


 12522 01aa 0C       		.byte	0xc
 12523 01ab 0C       		.uleb128 0xc
 12524 01ac A3130000 		.4byte	.LASF35
 12525 01b0 05       		.byte	0x5
 12526 01b1 2B01     		.2byte	0x12b
 12527 01b3 07010000 		.4byte	0x107
 12528 01b7 10       		.byte	0x10
 12529 01b8 0C       		.uleb128 0xc
 12530 01b9 CB020000 		.4byte	.LASF36
 12531 01bd 05       		.byte	0x5
 12532 01be 2E01     		.2byte	0x12e
 12533 01c0 EF000000 		.4byte	0xef
 12534 01c4 14       		.byte	0x14
 12535 01c5 0C       		.uleb128 0xc
 12536 01c6 ED0C0000 		.4byte	.LASF37
 12537 01ca 05       		.byte	0x5
 12538 01cb 3301     		.2byte	0x133
 12539 01cd EF000000 		.4byte	0xef
 12540 01d1 15       		.byte	0x15
 12541 01d2 0C       		.uleb128 0xc
 12542 01d3 74020000 		.4byte	.LASF38
 12543 01d7 05       		.byte	0x5
 12544 01d8 3601     		.2byte	0x136
 12545 01da 07010000 		.4byte	0x107
 12546 01de 18       		.byte	0x18
 12547 01df 00       		.byte	0
 12548 01e0 05       		.uleb128 0x5
 12549 01e1 CF090000 		.4byte	.LASF39
 12550 01e5 05       		.byte	0x5
 12551 01e6 3701     		.2byte	0x137
 12552 01e8 6E010000 		.4byte	0x16e
 12553 01ec 0D       		.uleb128 0xd
 12554 01ed 01       		.byte	0x1
 12555 01ee 42000000 		.4byte	0x42
 12556 01f2 05       		.byte	0x5
 12557 01f3 5401     		.2byte	0x154
 12558 01f5 18020000 		.4byte	0x218
 12559 01f9 0E       		.uleb128 0xe
 12560 01fa AA000000 		.4byte	.LASF40
 12561 01fe 00       		.byte	0
 12562 01ff 0E       		.uleb128 0xe
 12563 0200 1F080000 		.4byte	.LASF41
 12564 0204 01       		.byte	0x1
 12565 0205 0E       		.uleb128 0xe
 12566 0206 5A020000 		.4byte	.LASF42
 12567 020a 02       		.byte	0x2
 12568 020b 0E       		.uleb128 0xe
 12569 020c 09050000 		.4byte	.LASF43
 12570 0210 03       		.byte	0x3
 12571 0211 0E       		.uleb128 0xe
 12572 0212 D60A0000 		.4byte	.LASF44
 12573 0216 04       		.byte	0x4
 12574 0217 00       		.byte	0
 12575 0218 05       		.uleb128 0x5
 12576 0219 D6010000 		.4byte	.LASF45
 12577 021d 05       		.byte	0x5
 12578 021e 5A01     		.2byte	0x15a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 281


 12579 0220 EC010000 		.4byte	0x1ec
 12580 0224 06       		.uleb128 0x6
 12581 0225 B8000000 		.4byte	0xb8
 12582 0229 06       		.uleb128 0x6
 12583 022a CE000000 		.4byte	0xce
 12584 022e 02       		.uleb128 0x2
 12585 022f 40070000 		.4byte	.LASF46
 12586 0233 06       		.byte	0x6
 12587 0234 6C       		.byte	0x6c
 12588 0235 A6000000 		.4byte	0xa6
 12589 0239 0F       		.uleb128 0xf
 12590 023a 08       		.byte	0x8
 12591 023b 07       		.byte	0x7
 12592 023c 0C       		.byte	0xc
 12593 023d 8A020000 		.4byte	0x28a
 12594 0241 10       		.uleb128 0x10
 12595 0242 0C010000 		.4byte	.LASF47
 12596 0246 07       		.byte	0x7
 12597 0247 0D       		.byte	0xd
 12598 0248 CE000000 		.4byte	0xce
 12599 024c 00       		.byte	0
 12600 024d 10       		.uleb128 0x10
 12601 024e A30C0000 		.4byte	.LASF48
 12602 0252 07       		.byte	0x7
 12603 0253 0E       		.byte	0xe
 12604 0254 B8000000 		.4byte	0xb8
 12605 0258 02       		.byte	0x2
 12606 0259 10       		.uleb128 0x10
 12607 025a 78160000 		.4byte	.LASF49
 12608 025e 07       		.byte	0x7
 12609 025f 0E       		.byte	0xe
 12610 0260 B8000000 		.4byte	0xb8
 12611 0264 03       		.byte	0x3
 12612 0265 10       		.uleb128 0x10
 12613 0266 2B140000 		.4byte	.LASF50
 12614 026a 07       		.byte	0x7
 12615 026b 0F       		.byte	0xf
 12616 026c B8000000 		.4byte	0xb8
 12617 0270 04       		.byte	0x4
 12618 0271 10       		.uleb128 0x10
 12619 0272 3A000000 		.4byte	.LASF51
 12620 0276 07       		.byte	0x7
 12621 0277 10       		.byte	0x10
 12622 0278 AD000000 		.4byte	0xad
 12623 027c 05       		.byte	0x5
 12624 027d 10       		.uleb128 0x10
 12625 027e C6010000 		.4byte	.LASF52
 12626 0282 07       		.byte	0x7
 12627 0283 10       		.byte	0x10
 12628 0284 AD000000 		.4byte	0xad
 12629 0288 06       		.byte	0x6
 12630 0289 00       		.byte	0
 12631 028a 02       		.uleb128 0x2
 12632 028b 9A030000 		.4byte	.LASF53
 12633 028f 07       		.byte	0x7
 12634 0290 11       		.byte	0x11
 12635 0291 39020000 		.4byte	0x239
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 282


 12636 0295 0F       		.uleb128 0xf
 12637 0296 0C       		.byte	0xc
 12638 0297 07       		.byte	0x7
 12639 0298 13       		.byte	0x13
 12640 0299 DA020000 		.4byte	0x2da
 12641 029d 10       		.uleb128 0x10
 12642 029e 2B0E0000 		.4byte	.LASF54
 12643 02a2 07       		.byte	0x7
 12644 02a3 14       		.byte	0x14
 12645 02a4 DA020000 		.4byte	0x2da
 12646 02a8 00       		.byte	0
 12647 02a9 10       		.uleb128 0x10
 12648 02aa 98060000 		.4byte	.LASF55
 12649 02ae 07       		.byte	0x7
 12650 02af 15       		.byte	0x15
 12651 02b0 E0020000 		.4byte	0x2e0
 12652 02b4 04       		.byte	0x4
 12653 02b5 10       		.uleb128 0x10
 12654 02b6 100F0000 		.4byte	.LASF56
 12655 02ba 07       		.byte	0x7
 12656 02bb 16       		.byte	0x16
 12657 02bc B8000000 		.4byte	0xb8
 12658 02c0 08       		.byte	0x8
 12659 02c1 10       		.uleb128 0x10
 12660 02c2 66160000 		.4byte	.LASF57
 12661 02c6 07       		.byte	0x7
 12662 02c7 16       		.byte	0x16
 12663 02c8 B8000000 		.4byte	0xb8
 12664 02cc 09       		.byte	0x9
 12665 02cd 10       		.uleb128 0x10
 12666 02ce 8E0C0000 		.4byte	.LASF58
 12667 02d2 07       		.byte	0x7
 12668 02d3 17       		.byte	0x17
 12669 02d4 B8000000 		.4byte	0xb8
 12670 02d8 0A       		.byte	0xa
 12671 02d9 00       		.byte	0
 12672 02da 07       		.uleb128 0x7
 12673 02db 04       		.byte	0x4
 12674 02dc B8000000 		.4byte	0xb8
 12675 02e0 07       		.uleb128 0x7
 12676 02e1 04       		.byte	0x4
 12677 02e2 8A020000 		.4byte	0x28a
 12678 02e6 02       		.uleb128 0x2
 12679 02e7 79110000 		.4byte	.LASF59
 12680 02eb 07       		.byte	0x7
 12681 02ec 18       		.byte	0x18
 12682 02ed 95020000 		.4byte	0x295
 12683 02f1 11       		.uleb128 0x11
 12684 02f2 37100000 		.4byte	.LASF428
 12685 02f6 24       		.byte	0x24
 12686 02f7 08       		.byte	0x8
 12687 02f8 1C       		.byte	0x1c
 12688 02f9 BE030000 		.4byte	0x3be
 12689 02fd 10       		.uleb128 0x10
 12690 02fe D00A0000 		.4byte	.LASF60
 12691 0302 08       		.byte	0x8
 12692 0303 1E       		.byte	0x1e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 283


 12693 0304 C3000000 		.4byte	0xc3
 12694 0308 00       		.byte	0
 12695 0309 10       		.uleb128 0x10
 12696 030a C8040000 		.4byte	.LASF61
 12697 030e 08       		.byte	0x8
 12698 030f 1F       		.byte	0x1f
 12699 0310 C3000000 		.4byte	0xc3
 12700 0314 02       		.byte	0x2
 12701 0315 10       		.uleb128 0x10
 12702 0316 EB0B0000 		.4byte	.LASF62
 12703 031a 08       		.byte	0x8
 12704 031b 20       		.byte	0x20
 12705 031c CE000000 		.4byte	0xce
 12706 0320 04       		.byte	0x4
 12707 0321 10       		.uleb128 0x10
 12708 0322 F1110000 		.4byte	.LASF63
 12709 0326 08       		.byte	0x8
 12710 0327 21       		.byte	0x21
 12711 0328 CE000000 		.4byte	0xce
 12712 032c 06       		.byte	0x6
 12713 032d 10       		.uleb128 0x10
 12714 032e 4E100000 		.4byte	.LASF64
 12715 0332 08       		.byte	0x8
 12716 0333 22       		.byte	0x22
 12717 0334 CE000000 		.4byte	0xce
 12718 0338 08       		.byte	0x8
 12719 0339 10       		.uleb128 0x10
 12720 033a C80D0000 		.4byte	.LASF65
 12721 033e 08       		.byte	0x8
 12722 033f 23       		.byte	0x23
 12723 0340 CE000000 		.4byte	0xce
 12724 0344 0A       		.byte	0xa
 12725 0345 10       		.uleb128 0x10
 12726 0346 BF0D0000 		.4byte	.LASF66
 12727 034a 08       		.byte	0x8
 12728 034b 24       		.byte	0x24
 12729 034c CE000000 		.4byte	0xce
 12730 0350 0C       		.byte	0xc
 12731 0351 10       		.uleb128 0x10
 12732 0352 CB030000 		.4byte	.LASF67
 12733 0356 08       		.byte	0x8
 12734 0357 25       		.byte	0x25
 12735 0358 CE000000 		.4byte	0xce
 12736 035c 0E       		.byte	0xe
 12737 035d 10       		.uleb128 0x10
 12738 035e 5C160000 		.4byte	.LASF68
 12739 0362 08       		.byte	0x8
 12740 0363 26       		.byte	0x26
 12741 0364 CE000000 		.4byte	0xce
 12742 0368 10       		.byte	0x10
 12743 0369 10       		.uleb128 0x10
 12744 036a 3E020000 		.4byte	.LASF69
 12745 036e 08       		.byte	0x8
 12746 036f 27       		.byte	0x27
 12747 0370 CE000000 		.4byte	0xce
 12748 0374 12       		.byte	0x12
 12749 0375 10       		.uleb128 0x10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 284


 12750 0376 5F100000 		.4byte	.LASF70
 12751 037a 08       		.byte	0x8
 12752 037b 28       		.byte	0x28
 12753 037c CE000000 		.4byte	0xce
 12754 0380 14       		.byte	0x14
 12755 0381 10       		.uleb128 0x10
 12756 0382 B1060000 		.4byte	.LASF71
 12757 0386 08       		.byte	0x8
 12758 0387 29       		.byte	0x29
 12759 0388 CE000000 		.4byte	0xce
 12760 038c 16       		.byte	0x16
 12761 038d 10       		.uleb128 0x10
 12762 038e 6E120000 		.4byte	.LASF72
 12763 0392 08       		.byte	0x8
 12764 0393 2A       		.byte	0x2a
 12765 0394 BE030000 		.4byte	0x3be
 12766 0398 18       		.byte	0x18
 12767 0399 10       		.uleb128 0x10
 12768 039a 88130000 		.4byte	.LASF73
 12769 039e 08       		.byte	0x8
 12770 039f 2B       		.byte	0x2b
 12771 03a0 CE000000 		.4byte	0xce
 12772 03a4 1C       		.byte	0x1c
 12773 03a5 10       		.uleb128 0x10
 12774 03a6 2B0D0000 		.4byte	.LASF74
 12775 03aa 08       		.byte	0x8
 12776 03ab 2C       		.byte	0x2c
 12777 03ac CE000000 		.4byte	0xce
 12778 03b0 1E       		.byte	0x1e
 12779 03b1 10       		.uleb128 0x10
 12780 03b2 200E0000 		.4byte	.LASF75
 12781 03b6 08       		.byte	0x8
 12782 03b7 2D       		.byte	0x2d
 12783 03b8 CE000000 		.4byte	0xce
 12784 03bc 20       		.byte	0x20
 12785 03bd 00       		.byte	0
 12786 03be 07       		.uleb128 0x7
 12787 03bf 04       		.byte	0x4
 12788 03c0 E6020000 		.4byte	0x2e6
 12789 03c4 12       		.uleb128 0x12
 12790 03c5 47465800 		.ascii	"GFX\000"
 12791 03c9 08       		.byte	0x8
 12792 03ca 2E       		.byte	0x2e
 12793 03cb F1020000 		.4byte	0x2f1
 12794 03cf 13       		.uleb128 0x13
 12795 03d0 2D050000 		.4byte	.LASF81
 12796 03d4 01       		.byte	0x1
 12797 03d5 42000000 		.4byte	0x42
 12798 03d9 09       		.byte	0x9
 12799 03da 1D       		.byte	0x1d
 12800 03db FE030000 		.4byte	0x3fe
 12801 03df 0E       		.uleb128 0xe
 12802 03e0 200C0000 		.4byte	.LASF76
 12803 03e4 00       		.byte	0
 12804 03e5 0E       		.uleb128 0xe
 12805 03e6 0E040000 		.4byte	.LASF77
 12806 03ea 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 285


 12807 03eb 0E       		.uleb128 0xe
 12808 03ec EA000000 		.4byte	.LASF78
 12809 03f0 02       		.byte	0x2
 12810 03f1 0E       		.uleb128 0xe
 12811 03f2 7A080000 		.4byte	.LASF79
 12812 03f6 03       		.byte	0x3
 12813 03f7 0E       		.uleb128 0xe
 12814 03f8 CE010000 		.4byte	.LASF80
 12815 03fc 04       		.byte	0x4
 12816 03fd 00       		.byte	0
 12817 03fe 13       		.uleb128 0x13
 12818 03ff 7D130000 		.4byte	.LASF82
 12819 0403 01       		.byte	0x1
 12820 0404 42000000 		.4byte	0x42
 12821 0408 0A       		.byte	0xa
 12822 0409 11       		.byte	0x11
 12823 040a 51040000 		.4byte	0x451
 12824 040e 0E       		.uleb128 0xe
 12825 040f 8C0D0000 		.4byte	.LASF83
 12826 0413 00       		.byte	0
 12827 0414 0E       		.uleb128 0xe
 12828 0415 F2140000 		.4byte	.LASF84
 12829 0419 01       		.byte	0x1
 12830 041a 0E       		.uleb128 0xe
 12831 041b 9D000000 		.4byte	.LASF85
 12832 041f 02       		.byte	0x2
 12833 0420 0E       		.uleb128 0xe
 12834 0421 19010000 		.4byte	.LASF86
 12835 0425 03       		.byte	0x3
 12836 0426 0E       		.uleb128 0xe
 12837 0427 D80B0000 		.4byte	.LASF87
 12838 042b 04       		.byte	0x4
 12839 042c 0E       		.uleb128 0xe
 12840 042d 310A0000 		.4byte	.LASF88
 12841 0431 05       		.byte	0x5
 12842 0432 0E       		.uleb128 0xe
 12843 0433 02060000 		.4byte	.LASF89
 12844 0437 06       		.byte	0x6
 12845 0438 0E       		.uleb128 0xe
 12846 0439 D7100000 		.4byte	.LASF90
 12847 043d 07       		.byte	0x7
 12848 043e 0E       		.uleb128 0xe
 12849 043f 76120000 		.4byte	.LASF91
 12850 0443 08       		.byte	0x8
 12851 0444 0E       		.uleb128 0xe
 12852 0445 D7150000 		.4byte	.LASF92
 12853 0449 09       		.byte	0x9
 12854 044a 0E       		.uleb128 0xe
 12855 044b 13120000 		.4byte	.LASF93
 12856 044f 0A       		.byte	0xa
 12857 0450 00       		.byte	0
 12858 0451 13       		.uleb128 0x13
 12859 0452 2F040000 		.4byte	.LASF94
 12860 0456 01       		.byte	0x1
 12861 0457 42000000 		.4byte	0x42
 12862 045b 01       		.byte	0x1
 12863 045c 4F       		.byte	0x4f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 286


 12864 045d 86040000 		.4byte	0x486
 12865 0461 0E       		.uleb128 0xe
 12866 0462 55080000 		.4byte	.LASF95
 12867 0466 00       		.byte	0
 12868 0467 0E       		.uleb128 0xe
 12869 0468 4D060000 		.4byte	.LASF96
 12870 046c 01       		.byte	0x1
 12871 046d 0E       		.uleb128 0xe
 12872 046e 8B110000 		.4byte	.LASF97
 12873 0472 02       		.byte	0x2
 12874 0473 0E       		.uleb128 0xe
 12875 0474 18110000 		.4byte	.LASF98
 12876 0478 03       		.byte	0x3
 12877 0479 0E       		.uleb128 0xe
 12878 047a 88150000 		.4byte	.LASF99
 12879 047e 04       		.byte	0x4
 12880 047f 0E       		.uleb128 0xe
 12881 0480 E9020000 		.4byte	.LASF100
 12882 0484 05       		.byte	0x5
 12883 0485 00       		.byte	0
 12884 0486 14       		.uleb128 0x14
 12885 0487 96100000 		.4byte	.LASF429
 12886 048b 04       		.byte	0x4
 12887 048c 01       		.byte	0x1
 12888 048d E2       		.byte	0xe2
 12889 048e B0040000 		.4byte	0x4b0
 12890 0492 15       		.uleb128 0x15
 12891 0493 6600     		.ascii	"f\000"
 12892 0495 01       		.byte	0x1
 12893 0496 E3       		.byte	0xe3
 12894 0497 13010000 		.4byte	0x113
 12895 049b 15       		.uleb128 0x15
 12896 049c 6200     		.ascii	"b\000"
 12897 049e 01       		.byte	0x1
 12898 049f E4       		.byte	0xe4
 12899 04a0 B0040000 		.4byte	0x4b0
 12900 04a4 15       		.uleb128 0x15
 12901 04a5 75333200 		.ascii	"u32\000"
 12902 04a9 01       		.byte	0x1
 12903 04aa E5       		.byte	0xe5
 12904 04ab E4000000 		.4byte	0xe4
 12905 04af 00       		.byte	0
 12906 04b0 09       		.uleb128 0x9
 12907 04b1 B8000000 		.4byte	0xb8
 12908 04b5 C0040000 		.4byte	0x4c0
 12909 04b9 0A       		.uleb128 0xa
 12910 04ba 4C010000 		.4byte	0x14c
 12911 04be 03       		.byte	0x3
 12912 04bf 00       		.byte	0
 12913 04c0 16       		.uleb128 0x16
 12914 04c1 FD010000 		.4byte	.LASF101
 12915 04c5 01       		.byte	0x1
 12916 04c6 42000000 		.4byte	0x42
 12917 04ca 01       		.byte	0x1
 12918 04cb 5609     		.2byte	0x956
 12919 04cd EF040000 		.4byte	0x4ef
 12920 04d1 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 287


 12921 04d2 CF040000 		.4byte	.LASF102
 12922 04d6 00       		.byte	0
 12923 04d7 0E       		.uleb128 0xe
 12924 04d8 0B030000 		.4byte	.LASF103
 12925 04dc 01       		.byte	0x1
 12926 04dd 0E       		.uleb128 0xe
 12927 04de 31110000 		.4byte	.LASF104
 12928 04e2 02       		.byte	0x2
 12929 04e3 17       		.uleb128 0x17
 12930 04e4 557000   		.ascii	"Up\000"
 12931 04e7 03       		.byte	0x3
 12932 04e8 0E       		.uleb128 0xe
 12933 04e9 47040000 		.4byte	.LASF105
 12934 04ed 04       		.byte	0x4
 12935 04ee 00       		.byte	0
 12936 04ef 18       		.uleb128 0x18
 12937 04f0 FF040000 		.4byte	.LASF162
 12938 04f4 01       		.byte	0x1
 12939 04f5 E9       		.byte	0xe9
 12940 04f6 00000000 		.4byte	.LFB64
 12941 04fa 74010000 		.4byte	.LFE64-.LFB64
 12942 04fe 01       		.uleb128 0x1
 12943 04ff 9C       		.byte	0x9c
 12944 0500 1B050000 		.4byte	0x51b
 12945 0504 19       		.uleb128 0x19
 12946 0505 66000000 		.4byte	.LBB2
 12947 0509 7A000000 		.4byte	.LBE2-.LBB2
 12948 050d 1A       		.uleb128 0x1a
 12949 050e 6900     		.ascii	"i\000"
 12950 0510 01       		.byte	0x1
 12951 0511 EF       		.byte	0xef
 12952 0512 9F000000 		.4byte	0x9f
 12953 0516 02       		.uleb128 0x2
 12954 0517 91       		.byte	0x91
 12955 0518 6C       		.sleb128 -20
 12956 0519 00       		.byte	0
 12957 051a 00       		.byte	0
 12958 051b 1B       		.uleb128 0x1b
 12959 051c AB100000 		.4byte	.LASF106
 12960 0520 01       		.byte	0x1
 12961 0521 1701     		.2byte	0x117
 12962 0523 00000000 		.4byte	.LFB65
 12963 0527 9C000000 		.4byte	.LFE65-.LFB65
 12964 052b 01       		.uleb128 0x1
 12965 052c 9C       		.byte	0x9c
 12966 052d 1B       		.uleb128 0x1b
 12967 052e 620E0000 		.4byte	.LASF107
 12968 0532 01       		.byte	0x1
 12969 0533 4001     		.2byte	0x140
 12970 0535 00000000 		.4byte	.LFB66
 12971 0539 14000000 		.4byte	.LFE66-.LFB66
 12972 053d 01       		.uleb128 0x1
 12973 053e 9C       		.byte	0x9c
 12974 053f 1B       		.uleb128 0x1b
 12975 0540 350C0000 		.4byte	.LASF108
 12976 0544 01       		.byte	0x1
 12977 0545 4B01     		.2byte	0x14b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 288


 12978 0547 00000000 		.4byte	.LFB67
 12979 054b 7C000000 		.4byte	.LFE67-.LFB67
 12980 054f 01       		.uleb128 0x1
 12981 0550 9C       		.byte	0x9c
 12982 0551 1C       		.uleb128 0x1c
 12983 0552 8E060000 		.4byte	.LASF111
 12984 0556 01       		.byte	0x1
 12985 0557 6701     		.2byte	0x167
 12986 0559 13010000 		.4byte	0x113
 12987 055d 00000000 		.4byte	.LFB68
 12988 0561 58000000 		.4byte	.LFE68-.LFB68
 12989 0565 01       		.uleb128 0x1
 12990 0566 9C       		.byte	0x9c
 12991 0567 B7050000 		.4byte	0x5b7
 12992 056b 1D       		.uleb128 0x1d
 12993 056c 6D696E00 		.ascii	"min\000"
 12994 0570 01       		.byte	0x1
 12995 0571 6701     		.2byte	0x167
 12996 0573 13010000 		.4byte	0x113
 12997 0577 02       		.uleb128 0x2
 12998 0578 91       		.byte	0x91
 12999 0579 6C       		.sleb128 -20
 13000 057a 1D       		.uleb128 0x1d
 13001 057b 76616C00 		.ascii	"val\000"
 13002 057f 01       		.byte	0x1
 13003 0580 6701     		.2byte	0x167
 13004 0582 13010000 		.4byte	0x113
 13005 0586 02       		.uleb128 0x2
 13006 0587 91       		.byte	0x91
 13007 0588 68       		.sleb128 -24
 13008 0589 1D       		.uleb128 0x1d
 13009 058a 6D617800 		.ascii	"max\000"
 13010 058e 01       		.byte	0x1
 13011 058f 6701     		.2byte	0x167
 13012 0591 13010000 		.4byte	0x113
 13013 0595 02       		.uleb128 0x2
 13014 0596 91       		.byte	0x91
 13015 0597 64       		.sleb128 -28
 13016 0598 1E       		.uleb128 0x1e
 13017 0599 E50C0000 		.4byte	.LASF109
 13018 059d 01       		.byte	0x1
 13019 059e 6901     		.2byte	0x169
 13020 05a0 13010000 		.4byte	0x113
 13021 05a4 02       		.uleb128 0x2
 13022 05a5 91       		.byte	0x91
 13023 05a6 74       		.sleb128 -12
 13024 05a7 1E       		.uleb128 0x1e
 13025 05a8 EC050000 		.4byte	.LASF110
 13026 05ac 01       		.byte	0x1
 13027 05ad 6A01     		.2byte	0x16a
 13028 05af 13010000 		.4byte	0x113
 13029 05b3 02       		.uleb128 0x2
 13030 05b4 91       		.byte	0x91
 13031 05b5 70       		.sleb128 -16
 13032 05b6 00       		.byte	0
 13033 05b7 1C       		.uleb128 0x1c
 13034 05b8 D2150000 		.4byte	.LASF112
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 289


 13035 05bc 01       		.byte	0x1
 13036 05bd 7D01     		.2byte	0x17d
 13037 05bf 13010000 		.4byte	0x113
 13038 05c3 00000000 		.4byte	.LFB69
 13039 05c7 68000000 		.4byte	.LFE69-.LFB69
 13040 05cb 01       		.uleb128 0x1
 13041 05cc 9C       		.byte	0x9c
 13042 05cd DF050000 		.4byte	0x5df
 13043 05d1 1D       		.uleb128 0x1d
 13044 05d2 6600     		.ascii	"f\000"
 13045 05d4 01       		.byte	0x1
 13046 05d5 7D01     		.2byte	0x17d
 13047 05d7 13010000 		.4byte	0x113
 13048 05db 02       		.uleb128 0x2
 13049 05dc 91       		.byte	0x91
 13050 05dd 74       		.sleb128 -12
 13051 05de 00       		.byte	0
 13052 05df 1C       		.uleb128 0x1c
 13053 05e0 D10F0000 		.4byte	.LASF113
 13054 05e4 01       		.byte	0x1
 13055 05e5 8401     		.2byte	0x184
 13056 05e7 13010000 		.4byte	0x113
 13057 05eb 00000000 		.4byte	.LFB70
 13058 05ef 4C000000 		.4byte	.LFE70-.LFB70
 13059 05f3 01       		.uleb128 0x1
 13060 05f4 9C       		.byte	0x9c
 13061 05f5 07060000 		.4byte	0x607
 13062 05f9 1D       		.uleb128 0x1d
 13063 05fa 6600     		.ascii	"f\000"
 13064 05fc 01       		.byte	0x1
 13065 05fd 8401     		.2byte	0x184
 13066 05ff 13010000 		.4byte	0x113
 13067 0603 02       		.uleb128 0x2
 13068 0604 91       		.byte	0x91
 13069 0605 74       		.sleb128 -12
 13070 0606 00       		.byte	0
 13071 0607 1C       		.uleb128 0x1c
 13072 0608 AB090000 		.4byte	.LASF114
 13073 060c 01       		.byte	0x1
 13074 060d 8A01     		.2byte	0x18a
 13075 060f 13010000 		.4byte	0x113
 13076 0613 00000000 		.4byte	.LFB71
 13077 0617 46000000 		.4byte	.LFE71-.LFB71
 13078 061b 01       		.uleb128 0x1
 13079 061c 9C       		.byte	0x9c
 13080 061d 69060000 		.4byte	0x669
 13081 0621 1D       		.uleb128 0x1d
 13082 0622 4100     		.ascii	"A\000"
 13083 0624 01       		.byte	0x1
 13084 0625 8A01     		.2byte	0x18a
 13085 0627 13010000 		.4byte	0x113
 13086 062b 02       		.uleb128 0x2
 13087 062c 91       		.byte	0x91
 13088 062d 6C       		.sleb128 -20
 13089 062e 1D       		.uleb128 0x1d
 13090 062f 4200     		.ascii	"B\000"
 13091 0631 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 290


 13092 0632 8A01     		.2byte	0x18a
 13093 0634 13010000 		.4byte	0x113
 13094 0638 02       		.uleb128 0x2
 13095 0639 91       		.byte	0x91
 13096 063a 68       		.sleb128 -24
 13097 063b 1F       		.uleb128 0x1f
 13098 063c E3020000 		.4byte	.LASF115
 13099 0640 01       		.byte	0x1
 13100 0641 8A01     		.2byte	0x18a
 13101 0643 13010000 		.4byte	0x113
 13102 0647 02       		.uleb128 0x2
 13103 0648 91       		.byte	0x91
 13104 0649 64       		.sleb128 -28
 13105 064a 1E       		.uleb128 0x1e
 13106 064b 6E040000 		.4byte	.LASF116
 13107 064f 01       		.byte	0x1
 13108 0650 8C01     		.2byte	0x18c
 13109 0652 13010000 		.4byte	0x113
 13110 0656 02       		.uleb128 0x2
 13111 0657 91       		.byte	0x91
 13112 0658 74       		.sleb128 -12
 13113 0659 20       		.uleb128 0x20
 13114 065a 6F757400 		.ascii	"out\000"
 13115 065e 01       		.byte	0x1
 13116 065f 8F01     		.2byte	0x18f
 13117 0661 13010000 		.4byte	0x113
 13118 0665 02       		.uleb128 0x2
 13119 0666 91       		.byte	0x91
 13120 0667 70       		.sleb128 -16
 13121 0668 00       		.byte	0
 13122 0669 21       		.uleb128 0x21
 13123 066a 6D617000 		.ascii	"map\000"
 13124 066e 01       		.byte	0x1
 13125 066f FA01     		.2byte	0x1fa
 13126 0671 13010000 		.4byte	0x113
 13127 0675 00000000 		.4byte	.LFB72
 13128 0679 56000000 		.4byte	.LFE72-.LFB72
 13129 067d 01       		.uleb128 0x1
 13130 067e 9C       		.byte	0x9c
 13131 067f CF060000 		.4byte	0x6cf
 13132 0683 1F       		.uleb128 0x1f
 13133 0684 13060000 		.4byte	.LASF117
 13134 0688 01       		.byte	0x1
 13135 0689 FA01     		.2byte	0x1fa
 13136 068b 13010000 		.4byte	0x113
 13137 068f 02       		.uleb128 0x2
 13138 0690 91       		.byte	0x91
 13139 0691 6C       		.sleb128 -20
 13140 0692 1F       		.uleb128 0x1f
 13141 0693 B3020000 		.4byte	.LASF118
 13142 0697 01       		.byte	0x1
 13143 0698 FA01     		.2byte	0x1fa
 13144 069a 13010000 		.4byte	0x113
 13145 069e 02       		.uleb128 0x2
 13146 069f 91       		.byte	0x91
 13147 06a0 68       		.sleb128 -24
 13148 06a1 1F       		.uleb128 0x1f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 291


 13149 06a2 1F0B0000 		.4byte	.LASF119
 13150 06a6 01       		.byte	0x1
 13151 06a7 FA01     		.2byte	0x1fa
 13152 06a9 13010000 		.4byte	0x113
 13153 06ad 02       		.uleb128 0x2
 13154 06ae 91       		.byte	0x91
 13155 06af 64       		.sleb128 -28
 13156 06b0 1F       		.uleb128 0x1f
 13157 06b1 EE0A0000 		.4byte	.LASF120
 13158 06b5 01       		.byte	0x1
 13159 06b6 FA01     		.2byte	0x1fa
 13160 06b8 13010000 		.4byte	0x113
 13161 06bc 02       		.uleb128 0x2
 13162 06bd 91       		.byte	0x91
 13163 06be 60       		.sleb128 -32
 13164 06bf 1F       		.uleb128 0x1f
 13165 06c0 780D0000 		.4byte	.LASF121
 13166 06c4 01       		.byte	0x1
 13167 06c5 FA01     		.2byte	0x1fa
 13168 06c7 13010000 		.4byte	0x113
 13169 06cb 02       		.uleb128 0x2
 13170 06cc 91       		.byte	0x91
 13171 06cd 00       		.sleb128 0
 13172 06ce 00       		.byte	0
 13173 06cf 22       		.uleb128 0x22
 13174 06d0 52070000 		.4byte	.LASF206
 13175 06d4 01       		.byte	0x1
 13176 06d5 0702     		.2byte	0x207
 13177 06d7 00000000 		.4byte	.LFB73
 13178 06db 0C000000 		.4byte	.LFE73-.LFB73
 13179 06df 01       		.uleb128 0x1
 13180 06e0 9C       		.byte	0x9c
 13181 06e1 23       		.uleb128 0x23
 13182 06e2 3B150000 		.4byte	.LASF156
 13183 06e6 01       		.byte	0x1
 13184 06e7 1102     		.2byte	0x211
 13185 06e9 00000000 		.4byte	.LFB74
 13186 06ed 08010000 		.4byte	.LFE74-.LFB74
 13187 06f1 01       		.uleb128 0x1
 13188 06f2 9C       		.byte	0x9c
 13189 06f3 28070000 		.4byte	0x728
 13190 06f7 19       		.uleb128 0x19
 13191 06f8 06000000 		.4byte	.LBB3
 13192 06fc DC000000 		.4byte	.LBE3-.LBB3
 13193 0700 20       		.uleb128 0x20
 13194 0701 6900     		.ascii	"i\000"
 13195 0703 01       		.byte	0x1
 13196 0704 1502     		.2byte	0x215
 13197 0706 9F000000 		.4byte	0x9f
 13198 070a 02       		.uleb128 0x2
 13199 070b 91       		.byte	0x91
 13200 070c 6C       		.sleb128 -20
 13201 070d 19       		.uleb128 0x19
 13202 070e 0C000000 		.4byte	.LBB4
 13203 0712 CA000000 		.4byte	.LBE4-.LBB4
 13204 0716 1E       		.uleb128 0x1e
 13205 0717 BA020000 		.4byte	.LASF122
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 292


 13206 071b 01       		.byte	0x1
 13207 071c 1802     		.2byte	0x218
 13208 071e 13010000 		.4byte	0x113
 13209 0722 02       		.uleb128 0x2
 13210 0723 91       		.byte	0x91
 13211 0724 68       		.sleb128 -24
 13212 0725 00       		.byte	0
 13213 0726 00       		.byte	0
 13214 0727 00       		.byte	0
 13215 0728 1C       		.uleb128 0x1c
 13216 0729 47140000 		.4byte	.LASF123
 13217 072d 01       		.byte	0x1
 13218 072e 1F02     		.2byte	0x21f
 13219 0730 9F000000 		.4byte	0x9f
 13220 0734 00000000 		.4byte	.LFB75
 13221 0738 141D0000 		.4byte	.LFE75-.LFB75
 13222 073c 01       		.uleb128 0x1
 13223 073d 9C       		.byte	0x9c
 13224 073e A30B0000 		.4byte	0xba3
 13225 0742 1E       		.uleb128 0x1e
 13226 0743 25160000 		.4byte	.LASF124
 13227 0747 01       		.byte	0x1
 13228 0748 2F02     		.2byte	0x22f
 13229 074a B8000000 		.4byte	0xb8
 13230 074e 03       		.uleb128 0x3
 13231 074f 91       		.byte	0x91
 13232 0750 FF7E     		.sleb128 -129
 13233 0752 1E       		.uleb128 0x1e
 13234 0753 250B0000 		.4byte	.LASF125
 13235 0757 01       		.byte	0x1
 13236 0758 4B02     		.2byte	0x24b
 13237 075a CE000000 		.4byte	0xce
 13238 075e 03       		.uleb128 0x3
 13239 075f 91       		.byte	0x91
 13240 0760 FC7E     		.sleb128 -132
 13241 0762 24       		.uleb128 0x24
 13242 0763 9C010000 		.4byte	.LBB5
 13243 0767 3C000000 		.4byte	.LBE5-.LBB5
 13244 076b 7D070000 		.4byte	0x77d
 13245 076f 20       		.uleb128 0x20
 13246 0770 6900     		.ascii	"i\000"
 13247 0772 01       		.byte	0x1
 13248 0773 4C02     		.2byte	0x24c
 13249 0775 9F000000 		.4byte	0x9f
 13250 0779 02       		.uleb128 0x2
 13251 077a 91       		.byte	0x91
 13252 077b 6C       		.sleb128 -20
 13253 077c 00       		.byte	0
 13254 077d 24       		.uleb128 0x24
 13255 077e D8010000 		.4byte	.LBB6
 13256 0782 DC010000 		.4byte	.LBE6-.LBB6
 13257 0786 39080000 		.4byte	0x839
 13258 078a 1E       		.uleb128 0x1e
 13259 078b 88050000 		.4byte	.LASF126
 13260 078f 01       		.byte	0x1
 13261 0790 5002     		.2byte	0x250
 13262 0792 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 293


 13263 0796 02       		.uleb128 0x2
 13264 0797 91       		.byte	0x91
 13265 0798 68       		.sleb128 -24
 13266 0799 24       		.uleb128 0x24
 13267 079a E0010000 		.4byte	.LBB7
 13268 079e 60000000 		.4byte	.LBE7-.LBB7
 13269 07a2 B6070000 		.4byte	0x7b6
 13270 07a6 1E       		.uleb128 0x1e
 13271 07a7 F6130000 		.4byte	.LASF127
 13272 07ab 01       		.byte	0x1
 13273 07ac 5202     		.2byte	0x252
 13274 07ae 9F000000 		.4byte	0x9f
 13275 07b2 02       		.uleb128 0x2
 13276 07b3 91       		.byte	0x91
 13277 07b4 64       		.sleb128 -28
 13278 07b5 00       		.byte	0
 13279 07b6 19       		.uleb128 0x19
 13280 07b7 40020000 		.4byte	.LBB8
 13281 07bb 60010000 		.4byte	.LBE8-.LBB8
 13282 07bf 20       		.uleb128 0x20
 13283 07c0 6900     		.ascii	"i\000"
 13284 07c2 01       		.byte	0x1
 13285 07c3 5602     		.2byte	0x256
 13286 07c5 9F000000 		.4byte	0x9f
 13287 07c9 02       		.uleb128 0x2
 13288 07ca 91       		.byte	0x91
 13289 07cb 60       		.sleb128 -32
 13290 07cc 19       		.uleb128 0x19
 13291 07cd 48020000 		.4byte	.LBB9
 13292 07d1 44010000 		.4byte	.LBE9-.LBB9
 13293 07d5 1E       		.uleb128 0x1e
 13294 07d6 99050000 		.4byte	.LASF128
 13295 07da 01       		.byte	0x1
 13296 07db 5802     		.2byte	0x258
 13297 07dd 9F000000 		.4byte	0x9f
 13298 07e1 03       		.uleb128 0x3
 13299 07e2 91       		.byte	0x91
 13300 07e3 F87E     		.sleb128 -136
 13301 07e5 19       		.uleb128 0x19
 13302 07e6 56020000 		.4byte	.LBB10
 13303 07ea 36010000 		.4byte	.LBE10-.LBB10
 13304 07ee 20       		.uleb128 0x20
 13305 07ef 6A00     		.ascii	"j\000"
 13306 07f1 01       		.byte	0x1
 13307 07f2 5902     		.2byte	0x259
 13308 07f4 9F000000 		.4byte	0x9f
 13309 07f8 02       		.uleb128 0x2
 13310 07f9 91       		.byte	0x91
 13311 07fa 5C       		.sleb128 -36
 13312 07fb 19       		.uleb128 0x19
 13313 07fc B4020000 		.4byte	.LBB11
 13314 0800 C6000000 		.4byte	.LBE11-.LBB11
 13315 0804 1E       		.uleb128 0x1e
 13316 0805 76040000 		.4byte	.LASF129
 13317 0809 01       		.byte	0x1
 13318 080a 5C02     		.2byte	0x25c
 13319 080c 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 294


 13320 0810 03       		.uleb128 0x3
 13321 0811 91       		.byte	0x91
 13322 0812 F47E     		.sleb128 -140
 13323 0814 1E       		.uleb128 0x1e
 13324 0815 04160000 		.4byte	.LASF130
 13325 0819 01       		.byte	0x1
 13326 081a 5D02     		.2byte	0x25d
 13327 081c CE000000 		.4byte	0xce
 13328 0820 03       		.uleb128 0x3
 13329 0821 91       		.byte	0x91
 13330 0822 F27E     		.sleb128 -142
 13331 0824 1E       		.uleb128 0x1e
 13332 0825 DA0C0000 		.4byte	.LASF131
 13333 0829 01       		.byte	0x1
 13334 082a 5E02     		.2byte	0x25e
 13335 082c CE000000 		.4byte	0xce
 13336 0830 03       		.uleb128 0x3
 13337 0831 91       		.byte	0x91
 13338 0832 F07E     		.sleb128 -144
 13339 0834 00       		.byte	0
 13340 0835 00       		.byte	0
 13341 0836 00       		.byte	0
 13342 0837 00       		.byte	0
 13343 0838 00       		.byte	0
 13344 0839 24       		.uleb128 0x24
 13345 083a B4030000 		.4byte	.LBB12
 13346 083e A4000000 		.4byte	.LBE12-.LBB12
 13347 0842 54080000 		.4byte	0x854
 13348 0846 20       		.uleb128 0x20
 13349 0847 6900     		.ascii	"i\000"
 13350 0849 01       		.byte	0x1
 13351 084a 6502     		.2byte	0x265
 13352 084c 9F000000 		.4byte	0x9f
 13353 0850 02       		.uleb128 0x2
 13354 0851 91       		.byte	0x91
 13355 0852 58       		.sleb128 -40
 13356 0853 00       		.byte	0
 13357 0854 24       		.uleb128 0x24
 13358 0855 5C040000 		.4byte	.LBB13
 13359 0859 A6000000 		.4byte	.LBE13-.LBB13
 13360 085d 6F080000 		.4byte	0x86f
 13361 0861 20       		.uleb128 0x20
 13362 0862 6900     		.ascii	"i\000"
 13363 0864 01       		.byte	0x1
 13364 0865 6D02     		.2byte	0x26d
 13365 0867 9F000000 		.4byte	0x9f
 13366 086b 02       		.uleb128 0x2
 13367 086c 91       		.byte	0x91
 13368 086d 54       		.sleb128 -44
 13369 086e 00       		.byte	0
 13370 086f 24       		.uleb128 0x24
 13371 0870 02050000 		.4byte	.LBB14
 13372 0874 C2000000 		.4byte	.LBE14-.LBB14
 13373 0878 D3080000 		.4byte	0x8d3
 13374 087c 20       		.uleb128 0x20
 13375 087d 6900     		.ascii	"i\000"
 13376 087f 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 295


 13377 0880 7302     		.2byte	0x273
 13378 0882 9F000000 		.4byte	0x9f
 13379 0886 02       		.uleb128 0x2
 13380 0887 91       		.byte	0x91
 13381 0888 50       		.sleb128 -48
 13382 0889 24       		.uleb128 0x24
 13383 088a 0A050000 		.4byte	.LBB15
 13384 088e 34000000 		.4byte	.LBE15-.LBB15
 13385 0892 A4080000 		.4byte	0x8a4
 13386 0896 20       		.uleb128 0x20
 13387 0897 6A00     		.ascii	"j\000"
 13388 0899 01       		.byte	0x1
 13389 089a 7502     		.2byte	0x275
 13390 089c 9F000000 		.4byte	0x9f
 13391 08a0 02       		.uleb128 0x2
 13392 08a1 91       		.byte	0x91
 13393 08a2 4C       		.sleb128 -52
 13394 08a3 00       		.byte	0
 13395 08a4 19       		.uleb128 0x19
 13396 08a5 3E050000 		.4byte	.LBB16
 13397 08a9 68000000 		.4byte	.LBE16-.LBB16
 13398 08ad 20       		.uleb128 0x20
 13399 08ae 6A00     		.ascii	"j\000"
 13400 08b0 01       		.byte	0x1
 13401 08b1 7A02     		.2byte	0x27a
 13402 08b3 9F000000 		.4byte	0x9f
 13403 08b7 02       		.uleb128 0x2
 13404 08b8 91       		.byte	0x91
 13405 08b9 48       		.sleb128 -56
 13406 08ba 19       		.uleb128 0x19
 13407 08bb 46050000 		.4byte	.LBB17
 13408 08bf 4E000000 		.4byte	.LBE17-.LBB17
 13409 08c3 20       		.uleb128 0x20
 13410 08c4 6B00     		.ascii	"k\000"
 13411 08c6 01       		.byte	0x1
 13412 08c7 7C02     		.2byte	0x27c
 13413 08c9 9F000000 		.4byte	0x9f
 13414 08cd 02       		.uleb128 0x2
 13415 08ce 91       		.byte	0x91
 13416 08cf 44       		.sleb128 -60
 13417 08d0 00       		.byte	0
 13418 08d1 00       		.byte	0
 13419 08d2 00       		.byte	0
 13420 08d3 24       		.uleb128 0x24
 13421 08d4 B0060000 		.4byte	.LBB18
 13422 08d8 38000000 		.4byte	.LBE18-.LBB18
 13423 08dc EE080000 		.4byte	0x8ee
 13424 08e0 20       		.uleb128 0x20
 13425 08e1 7700     		.ascii	"w\000"
 13426 08e3 01       		.byte	0x1
 13427 08e4 A002     		.2byte	0x2a0
 13428 08e6 9F000000 		.4byte	0x9f
 13429 08ea 02       		.uleb128 0x2
 13430 08eb 91       		.byte	0x91
 13431 08ec 40       		.sleb128 -64
 13432 08ed 00       		.byte	0
 13433 08ee 24       		.uleb128 0x24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 296


 13434 08ef 7A070000 		.4byte	.LBB19
 13435 08f3 92000000 		.4byte	.LBE19-.LBB19
 13436 08f7 0C090000 		.4byte	0x90c
 13437 08fb 1E       		.uleb128 0x1e
 13438 08fc 470A0000 		.4byte	.LASF132
 13439 0900 01       		.byte	0x1
 13440 0901 6703     		.2byte	0x367
 13441 0903 B8000000 		.4byte	0xb8
 13442 0907 03       		.uleb128 0x3
 13443 0908 91       		.byte	0x91
 13444 0909 EF7E     		.sleb128 -145
 13445 090b 00       		.byte	0
 13446 090c 24       		.uleb128 0x24
 13447 090d 060A0000 		.4byte	.LBB20
 13448 0911 CC000000 		.4byte	.LBE20-.LBB20
 13449 0915 42090000 		.4byte	0x942
 13450 0919 20       		.uleb128 0x20
 13451 091a 6900     		.ascii	"i\000"
 13452 091c 01       		.byte	0x1
 13453 091d B203     		.2byte	0x3b2
 13454 091f 9F000000 		.4byte	0x9f
 13455 0923 03       		.uleb128 0x3
 13456 0924 91       		.byte	0x91
 13457 0925 BC7F     		.sleb128 -68
 13458 0927 19       		.uleb128 0x19
 13459 0928 380A0000 		.4byte	.LBB21
 13460 092c 8E000000 		.4byte	.LBE21-.LBB21
 13461 0930 1E       		.uleb128 0x1e
 13462 0931 3F0A0000 		.4byte	.LASF133
 13463 0935 01       		.byte	0x1
 13464 0936 B403     		.2byte	0x3b4
 13465 0938 CE000000 		.4byte	0xce
 13466 093c 03       		.uleb128 0x3
 13467 093d 91       		.byte	0x91
 13468 093e C87E     		.sleb128 -184
 13469 0940 00       		.byte	0
 13470 0941 00       		.byte	0
 13471 0942 24       		.uleb128 0x24
 13472 0943 F60B0000 		.4byte	.LBB22
 13473 0947 10020000 		.4byte	.LBE22-.LBB22
 13474 094b 60090000 		.4byte	0x960
 13475 094f 1E       		.uleb128 0x1e
 13476 0950 76000000 		.4byte	.LASF134
 13477 0954 01       		.byte	0x1
 13478 0955 3E04     		.2byte	0x43e
 13479 0957 C3000000 		.4byte	0xc3
 13480 095b 03       		.uleb128 0x3
 13481 095c 91       		.byte	0x91
 13482 095d EC7E     		.sleb128 -148
 13483 095f 00       		.byte	0
 13484 0960 24       		.uleb128 0x24
 13485 0961 EE0E0000 		.4byte	.LBB23
 13486 0965 E6020000 		.4byte	.LBE23-.LBB23
 13487 0969 B2090000 		.4byte	0x9b2
 13488 096d 20       		.uleb128 0x20
 13489 096e 6900     		.ascii	"i\000"
 13490 0970 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 297


 13491 0971 8504     		.2byte	0x485
 13492 0973 9F000000 		.4byte	0x9f
 13493 0977 03       		.uleb128 0x3
 13494 0978 91       		.byte	0x91
 13495 0979 B87F     		.sleb128 -72
 13496 097b 24       		.uleb128 0x24
 13497 097c 0A100000 		.4byte	.LBB24
 13498 0980 D0000000 		.4byte	.LBE24-.LBB24
 13499 0984 97090000 		.4byte	0x997
 13500 0988 20       		.uleb128 0x20
 13501 0989 6A00     		.ascii	"j\000"
 13502 098b 01       		.byte	0x1
 13503 098c 9204     		.2byte	0x492
 13504 098e 9F000000 		.4byte	0x9f
 13505 0992 03       		.uleb128 0x3
 13506 0993 91       		.byte	0x91
 13507 0994 B47F     		.sleb128 -76
 13508 0996 00       		.byte	0
 13509 0997 19       		.uleb128 0x19
 13510 0998 66110000 		.4byte	.LBB25
 13511 099c 4E000000 		.4byte	.LBE25-.LBB25
 13512 09a0 1E       		.uleb128 0x1e
 13513 09a1 75100000 		.4byte	.LASF135
 13514 09a5 01       		.byte	0x1
 13515 09a6 A304     		.2byte	0x4a3
 13516 09a8 C3000000 		.4byte	0xc3
 13517 09ac 03       		.uleb128 0x3
 13518 09ad 91       		.byte	0x91
 13519 09ae B27F     		.sleb128 -78
 13520 09b0 00       		.byte	0
 13521 09b1 00       		.byte	0
 13522 09b2 24       		.uleb128 0x24
 13523 09b3 DA110000 		.4byte	.LBB26
 13524 09b7 6A000000 		.4byte	.LBE26-.LBB26
 13525 09bb CE090000 		.4byte	0x9ce
 13526 09bf 20       		.uleb128 0x20
 13527 09c0 6900     		.ascii	"i\000"
 13528 09c2 01       		.byte	0x1
 13529 09c3 B104     		.2byte	0x4b1
 13530 09c5 9F000000 		.4byte	0x9f
 13531 09c9 03       		.uleb128 0x3
 13532 09ca 91       		.byte	0x91
 13533 09cb AC7F     		.sleb128 -84
 13534 09cd 00       		.byte	0
 13535 09ce 24       		.uleb128 0x24
 13536 09cf 48120000 		.4byte	.LBB27
 13537 09d3 96000000 		.4byte	.LBE27-.LBB27
 13538 09d7 EA090000 		.4byte	0x9ea
 13539 09db 20       		.uleb128 0x20
 13540 09dc 6900     		.ascii	"i\000"
 13541 09de 01       		.byte	0x1
 13542 09df BC04     		.2byte	0x4bc
 13543 09e1 9F000000 		.4byte	0x9f
 13544 09e5 03       		.uleb128 0x3
 13545 09e6 91       		.byte	0x91
 13546 09e7 A87F     		.sleb128 -88
 13547 09e9 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 298


 13548 09ea 24       		.uleb128 0x24
 13549 09eb E4120000 		.4byte	.LBB28
 13550 09ef CC030000 		.4byte	.LBE28-.LBB28
 13551 09f3 700A0000 		.4byte	0xa70
 13552 09f7 20       		.uleb128 0x20
 13553 09f8 6900     		.ascii	"i\000"
 13554 09fa 01       		.byte	0x1
 13555 09fb CD04     		.2byte	0x4cd
 13556 09fd 9F000000 		.4byte	0x9f
 13557 0a01 03       		.uleb128 0x3
 13558 0a02 91       		.byte	0x91
 13559 0a03 A47F     		.sleb128 -92
 13560 0a05 19       		.uleb128 0x19
 13561 0a06 EA120000 		.4byte	.LBB29
 13562 0a0a B4030000 		.4byte	.LBE29-.LBB29
 13563 0a0e 1E       		.uleb128 0x1e
 13564 0a0f 24120000 		.4byte	.LASF136
 13565 0a13 01       		.byte	0x1
 13566 0a14 D104     		.2byte	0x4d1
 13567 0a16 13010000 		.4byte	0x113
 13568 0a1a 03       		.uleb128 0x3
 13569 0a1b 91       		.byte	0x91
 13570 0a1c A07F     		.sleb128 -96
 13571 0a1e 1E       		.uleb128 0x1e
 13572 0a1f 070F0000 		.4byte	.LASF137
 13573 0a23 01       		.byte	0x1
 13574 0a24 E804     		.2byte	0x4e8
 13575 0a26 13010000 		.4byte	0x113
 13576 0a2a 03       		.uleb128 0x3
 13577 0a2b 91       		.byte	0x91
 13578 0a2c E87E     		.sleb128 -152
 13579 0a2e 1E       		.uleb128 0x1e
 13580 0a2f 1D130000 		.4byte	.LASF138
 13581 0a33 01       		.byte	0x1
 13582 0a34 F504     		.2byte	0x4f5
 13583 0a36 13010000 		.4byte	0x113
 13584 0a3a 03       		.uleb128 0x3
 13585 0a3b 91       		.byte	0x91
 13586 0a3c E47E     		.sleb128 -156
 13587 0a3e 1E       		.uleb128 0x1e
 13588 0a3f E40D0000 		.4byte	.LASF139
 13589 0a43 01       		.byte	0x1
 13590 0a44 F804     		.2byte	0x4f8
 13591 0a46 13010000 		.4byte	0x113
 13592 0a4a 03       		.uleb128 0x3
 13593 0a4b 91       		.byte	0x91
 13594 0a4c E07E     		.sleb128 -160
 13595 0a4e 1E       		.uleb128 0x1e
 13596 0a4f 95070000 		.4byte	.LASF140
 13597 0a53 01       		.byte	0x1
 13598 0a54 FA04     		.2byte	0x4fa
 13599 0a56 13010000 		.4byte	0x113
 13600 0a5a 03       		.uleb128 0x3
 13601 0a5b 91       		.byte	0x91
 13602 0a5c DC7E     		.sleb128 -164
 13603 0a5e 1E       		.uleb128 0x1e
 13604 0a5f A0120000 		.4byte	.LASF141
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 299


 13605 0a63 01       		.byte	0x1
 13606 0a64 FC04     		.2byte	0x4fc
 13607 0a66 13010000 		.4byte	0x113
 13608 0a6a 03       		.uleb128 0x3
 13609 0a6b 91       		.byte	0x91
 13610 0a6c D87E     		.sleb128 -168
 13611 0a6e 00       		.byte	0
 13612 0a6f 00       		.byte	0
 13613 0a70 24       		.uleb128 0x24
 13614 0a71 80170000 		.4byte	.LBB30
 13615 0a75 4E000000 		.4byte	.LBE30-.LBB30
 13616 0a79 8C0A0000 		.4byte	0xa8c
 13617 0a7d 20       		.uleb128 0x20
 13618 0a7e 6900     		.ascii	"i\000"
 13619 0a80 01       		.byte	0x1
 13620 0a81 5005     		.2byte	0x550
 13621 0a83 2E020000 		.4byte	0x22e
 13622 0a87 03       		.uleb128 0x3
 13623 0a88 91       		.byte	0x91
 13624 0a89 9C7F     		.sleb128 -100
 13625 0a8b 00       		.byte	0
 13626 0a8c 24       		.uleb128 0x24
 13627 0a8d 82180000 		.4byte	.LBB31
 13628 0a91 22000000 		.4byte	.LBE31-.LBB31
 13629 0a95 A80A0000 		.4byte	0xaa8
 13630 0a99 20       		.uleb128 0x20
 13631 0a9a 6900     		.ascii	"i\000"
 13632 0a9c 01       		.byte	0x1
 13633 0a9d 7F05     		.2byte	0x57f
 13634 0a9f 9F000000 		.4byte	0x9f
 13635 0aa3 03       		.uleb128 0x3
 13636 0aa4 91       		.byte	0x91
 13637 0aa5 987F     		.sleb128 -104
 13638 0aa7 00       		.byte	0
 13639 0aa8 24       		.uleb128 0x24
 13640 0aa9 A4180000 		.4byte	.LBB32
 13641 0aad 22000000 		.4byte	.LBE32-.LBB32
 13642 0ab1 C40A0000 		.4byte	0xac4
 13643 0ab5 20       		.uleb128 0x20
 13644 0ab6 6900     		.ascii	"i\000"
 13645 0ab8 01       		.byte	0x1
 13646 0ab9 8305     		.2byte	0x583
 13647 0abb 9F000000 		.4byte	0x9f
 13648 0abf 03       		.uleb128 0x3
 13649 0ac0 91       		.byte	0x91
 13650 0ac1 947F     		.sleb128 -108
 13651 0ac3 00       		.byte	0
 13652 0ac4 24       		.uleb128 0x24
 13653 0ac5 C6180000 		.4byte	.LBB33
 13654 0ac9 86000000 		.4byte	.LBE33-.LBB33
 13655 0acd E00A0000 		.4byte	0xae0
 13656 0ad1 20       		.uleb128 0x20
 13657 0ad2 6900     		.ascii	"i\000"
 13658 0ad4 01       		.byte	0x1
 13659 0ad5 8705     		.2byte	0x587
 13660 0ad7 9F000000 		.4byte	0x9f
 13661 0adb 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 300


 13662 0adc 91       		.byte	0x91
 13663 0add 907F     		.sleb128 -112
 13664 0adf 00       		.byte	0
 13665 0ae0 24       		.uleb128 0x24
 13666 0ae1 D6190000 		.4byte	.LBB34
 13667 0ae5 56000000 		.4byte	.LBE34-.LBB34
 13668 0ae9 160B0000 		.4byte	0xb16
 13669 0aed 20       		.uleb128 0x20
 13670 0aee 6900     		.ascii	"i\000"
 13671 0af0 01       		.byte	0x1
 13672 0af1 9A05     		.2byte	0x59a
 13673 0af3 9F000000 		.4byte	0x9f
 13674 0af7 03       		.uleb128 0x3
 13675 0af8 91       		.byte	0x91
 13676 0af9 8C7F     		.sleb128 -116
 13677 0afb 19       		.uleb128 0x19
 13678 0afc DC190000 		.4byte	.LBB35
 13679 0b00 44000000 		.4byte	.LBE35-.LBB35
 13680 0b04 1E       		.uleb128 0x1e
 13681 0b05 F2100000 		.4byte	.LASF142
 13682 0b09 01       		.byte	0x1
 13683 0b0a 9C05     		.2byte	0x59c
 13684 0b0c 9F000000 		.4byte	0x9f
 13685 0b10 03       		.uleb128 0x3
 13686 0b11 91       		.byte	0x91
 13687 0b12 D47E     		.sleb128 -172
 13688 0b14 00       		.byte	0
 13689 0b15 00       		.byte	0
 13690 0b16 24       		.uleb128 0x24
 13691 0b17 BE1A0000 		.4byte	.LBB36
 13692 0b1b B6000000 		.4byte	.LBE36-.LBB36
 13693 0b1f 880B0000 		.4byte	0xb88
 13694 0b23 1E       		.uleb128 0x1e
 13695 0b24 A3030000 		.4byte	.LASF143
 13696 0b28 01       		.byte	0x1
 13697 0b29 B005     		.2byte	0x5b0
 13698 0b2b 9F000000 		.4byte	0x9f
 13699 0b2f 03       		.uleb128 0x3
 13700 0b30 91       		.byte	0x91
 13701 0b31 D07E     		.sleb128 -176
 13702 0b33 1E       		.uleb128 0x1e
 13703 0b34 34010000 		.4byte	.LASF144
 13704 0b38 01       		.byte	0x1
 13705 0b39 B105     		.2byte	0x5b1
 13706 0b3b 9F000000 		.4byte	0x9f
 13707 0b3f 03       		.uleb128 0x3
 13708 0b40 91       		.byte	0x91
 13709 0b41 CC7E     		.sleb128 -180
 13710 0b43 1E       		.uleb128 0x1e
 13711 0b44 F9120000 		.4byte	.LASF145
 13712 0b48 01       		.byte	0x1
 13713 0b49 B205     		.2byte	0x5b2
 13714 0b4b 9F000000 		.4byte	0x9f
 13715 0b4f 03       		.uleb128 0x3
 13716 0b50 91       		.byte	0x91
 13717 0b51 887F     		.sleb128 -120
 13718 0b53 24       		.uleb128 0x24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 301


 13719 0b54 CE1A0000 		.4byte	.LBB37
 13720 0b58 36000000 		.4byte	.LBE37-.LBB37
 13721 0b5c 6F0B0000 		.4byte	0xb6f
 13722 0b60 20       		.uleb128 0x20
 13723 0b61 6900     		.ascii	"i\000"
 13724 0b63 01       		.byte	0x1
 13725 0b64 B305     		.2byte	0x5b3
 13726 0b66 9F000000 		.4byte	0x9f
 13727 0b6a 03       		.uleb128 0x3
 13728 0b6b 91       		.byte	0x91
 13729 0b6c 847F     		.sleb128 -124
 13730 0b6e 00       		.byte	0
 13731 0b6f 19       		.uleb128 0x19
 13732 0b70 081B0000 		.4byte	.LBB38
 13733 0b74 44000000 		.4byte	.LBE38-.LBB38
 13734 0b78 20       		.uleb128 0x20
 13735 0b79 6900     		.ascii	"i\000"
 13736 0b7b 01       		.byte	0x1
 13737 0b7c B905     		.2byte	0x5b9
 13738 0b7e 9F000000 		.4byte	0x9f
 13739 0b82 03       		.uleb128 0x3
 13740 0b83 91       		.byte	0x91
 13741 0b84 807F     		.sleb128 -128
 13742 0b86 00       		.byte	0
 13743 0b87 00       		.byte	0
 13744 0b88 19       		.uleb128 0x19
 13745 0b89 1A1C0000 		.4byte	.LBB39
 13746 0b8d 28000000 		.4byte	.LBE39-.LBB39
 13747 0b91 1E       		.uleb128 0x1e
 13748 0b92 470A0000 		.4byte	.LASF132
 13749 0b96 01       		.byte	0x1
 13750 0b97 D105     		.2byte	0x5d1
 13751 0b99 B8000000 		.4byte	0xb8
 13752 0b9d 03       		.uleb128 0x3
 13753 0b9e 91       		.byte	0x91
 13754 0b9f CB7E     		.sleb128 -181
 13755 0ba1 00       		.byte	0
 13756 0ba2 00       		.byte	0
 13757 0ba3 1B       		.uleb128 0x1b
 13758 0ba4 9E060000 		.4byte	.LASF146
 13759 0ba8 01       		.byte	0x1
 13760 0ba9 F205     		.2byte	0x5f2
 13761 0bab 00000000 		.4byte	.LFB76
 13762 0baf 70000000 		.4byte	.LFE76-.LFB76
 13763 0bb3 01       		.uleb128 0x1
 13764 0bb4 9C       		.byte	0x9c
 13765 0bb5 1B       		.uleb128 0x1b
 13766 0bb6 C9140000 		.4byte	.LASF147
 13767 0bba 01       		.byte	0x1
 13768 0bbb 0706     		.2byte	0x607
 13769 0bbd 00000000 		.4byte	.LFB77
 13770 0bc1 70010000 		.4byte	.LFE77-.LFB77
 13771 0bc5 01       		.uleb128 0x1
 13772 0bc6 9C       		.byte	0x9c
 13773 0bc7 1C       		.uleb128 0x1c
 13774 0bc8 A70A0000 		.4byte	.LASF148
 13775 0bcc 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 302


 13776 0bcd 2F06     		.2byte	0x62f
 13777 0bcf EF000000 		.4byte	0xef
 13778 0bd3 00000000 		.4byte	.LFB78
 13779 0bd7 E0000000 		.4byte	.LFE78-.LFB78
 13780 0bdb 01       		.uleb128 0x1
 13781 0bdc 9C       		.byte	0x9c
 13782 0bdd 3C0C0000 		.4byte	0xc3c
 13783 0be1 1F       		.uleb128 0x1f
 13784 0be2 C8130000 		.4byte	.LASF149
 13785 0be6 01       		.byte	0x1
 13786 0be7 2F06     		.2byte	0x62f
 13787 0be9 EF000000 		.4byte	0xef
 13788 0bed 02       		.uleb128 0x2
 13789 0bee 91       		.byte	0x91
 13790 0bef 67       		.sleb128 -25
 13791 0bf0 1F       		.uleb128 0x1f
 13792 0bf1 13020000 		.4byte	.LASF150
 13793 0bf5 01       		.byte	0x1
 13794 0bf6 2F06     		.2byte	0x62f
 13795 0bf8 FB000000 		.4byte	0xfb
 13796 0bfc 02       		.uleb128 0x2
 13797 0bfd 91       		.byte	0x91
 13798 0bfe 64       		.sleb128 -28
 13799 0bff 1F       		.uleb128 0x1f
 13800 0c00 F4120000 		.4byte	.LASF151
 13801 0c04 01       		.byte	0x1
 13802 0c05 2F06     		.2byte	0x62f
 13803 0c07 B8000000 		.4byte	0xb8
 13804 0c0b 02       		.uleb128 0x2
 13805 0c0c 91       		.byte	0x91
 13806 0c0d 66       		.sleb128 -26
 13807 0c0e 1E       		.uleb128 0x1e
 13808 0c0f 470A0000 		.4byte	.LASF132
 13809 0c13 01       		.byte	0x1
 13810 0c14 3106     		.2byte	0x631
 13811 0c16 40010000 		.4byte	0x140
 13812 0c1a 02       		.uleb128 0x2
 13813 0c1b 91       		.byte	0x91
 13814 0c1c 6F       		.sleb128 -17
 13815 0c1d 1E       		.uleb128 0x1e
 13816 0c1e 08040000 		.4byte	.LASF152
 13817 0c22 01       		.byte	0x1
 13818 0c23 3206     		.2byte	0x632
 13819 0c25 B8000000 		.4byte	0xb8
 13820 0c29 02       		.uleb128 0x2
 13821 0c2a 91       		.byte	0x91
 13822 0c2b 77       		.sleb128 -9
 13823 0c2c 1E       		.uleb128 0x1e
 13824 0c2d 7E0D0000 		.4byte	.LASF153
 13825 0c31 01       		.byte	0x1
 13826 0c32 3306     		.2byte	0x633
 13827 0c34 E4000000 		.4byte	0xe4
 13828 0c38 02       		.uleb128 0x2
 13829 0c39 91       		.byte	0x91
 13830 0c3a 70       		.sleb128 -16
 13831 0c3b 00       		.byte	0
 13832 0c3c 1C       		.uleb128 0x1c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 303


 13833 0c3d 810F0000 		.4byte	.LASF154
 13834 0c41 01       		.byte	0x1
 13835 0c42 6806     		.2byte	0x668
 13836 0c44 EF000000 		.4byte	0xef
 13837 0c48 00000000 		.4byte	.LFB79
 13838 0c4c F4000000 		.4byte	.LFE79-.LFB79
 13839 0c50 01       		.uleb128 0x1
 13840 0c51 9C       		.byte	0x9c
 13841 0c52 B10C0000 		.4byte	0xcb1
 13842 0c56 1F       		.uleb128 0x1f
 13843 0c57 C8130000 		.4byte	.LASF149
 13844 0c5b 01       		.byte	0x1
 13845 0c5c 6806     		.2byte	0x668
 13846 0c5e EF000000 		.4byte	0xef
 13847 0c62 02       		.uleb128 0x2
 13848 0c63 91       		.byte	0x91
 13849 0c64 6F       		.sleb128 -17
 13850 0c65 1F       		.uleb128 0x1f
 13851 0c66 13020000 		.4byte	.LASF150
 13852 0c6a 01       		.byte	0x1
 13853 0c6b 6806     		.2byte	0x668
 13854 0c6d EF000000 		.4byte	0xef
 13855 0c71 02       		.uleb128 0x2
 13856 0c72 91       		.byte	0x91
 13857 0c73 6E       		.sleb128 -18
 13858 0c74 1F       		.uleb128 0x1f
 13859 0c75 F4120000 		.4byte	.LASF151
 13860 0c79 01       		.byte	0x1
 13861 0c7a 6806     		.2byte	0x668
 13862 0c7c B8000000 		.4byte	0xb8
 13863 0c80 02       		.uleb128 0x2
 13864 0c81 91       		.byte	0x91
 13865 0c82 6D       		.sleb128 -19
 13866 0c83 1E       		.uleb128 0x1e
 13867 0c84 470A0000 		.4byte	.LASF132
 13868 0c88 01       		.byte	0x1
 13869 0c89 6A06     		.2byte	0x66a
 13870 0c8b 40010000 		.4byte	0x140
 13871 0c8f 02       		.uleb128 0x2
 13872 0c90 91       		.byte	0x91
 13873 0c91 72       		.sleb128 -14
 13874 0c92 1E       		.uleb128 0x1e
 13875 0c93 7E0D0000 		.4byte	.LASF153
 13876 0c97 01       		.byte	0x1
 13877 0c98 6B06     		.2byte	0x66b
 13878 0c9a E4000000 		.4byte	0xe4
 13879 0c9e 02       		.uleb128 0x2
 13880 0c9f 91       		.byte	0x91
 13881 0ca0 74       		.sleb128 -12
 13882 0ca1 1E       		.uleb128 0x1e
 13883 0ca2 08040000 		.4byte	.LASF152
 13884 0ca6 01       		.byte	0x1
 13885 0ca7 6C06     		.2byte	0x66c
 13886 0ca9 B8000000 		.4byte	0xb8
 13887 0cad 02       		.uleb128 0x2
 13888 0cae 91       		.byte	0x91
 13889 0caf 73       		.sleb128 -13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 304


 13890 0cb0 00       		.byte	0
 13891 0cb1 1B       		.uleb128 0x1b
 13892 0cb2 05070000 		.4byte	.LASF155
 13893 0cb6 01       		.byte	0x1
 13894 0cb7 9B06     		.2byte	0x69b
 13895 0cb9 00000000 		.4byte	.LFB80
 13896 0cbd 24000000 		.4byte	.LFE80-.LFB80
 13897 0cc1 01       		.uleb128 0x1
 13898 0cc2 9C       		.byte	0x9c
 13899 0cc3 23       		.uleb128 0x23
 13900 0cc4 59130000 		.4byte	.LASF157
 13901 0cc8 01       		.byte	0x1
 13902 0cc9 AA06     		.2byte	0x6aa
 13903 0ccb 00000000 		.4byte	.LFB81
 13904 0ccf 2C010000 		.4byte	.LFE81-.LFB81
 13905 0cd3 01       		.uleb128 0x1
 13906 0cd4 9C       		.byte	0x9c
 13907 0cd5 000D0000 		.4byte	0xd00
 13908 0cd9 1E       		.uleb128 0x1e
 13909 0cda 07130000 		.4byte	.LASF158
 13910 0cde 01       		.byte	0x1
 13911 0cdf AC06     		.2byte	0x6ac
 13912 0ce1 9F000000 		.4byte	0x9f
 13913 0ce5 02       		.uleb128 0x2
 13914 0ce6 91       		.byte	0x91
 13915 0ce7 6C       		.sleb128 -20
 13916 0ce8 19       		.uleb128 0x19
 13917 0ce9 0A000000 		.4byte	.LBB40
 13918 0ced 3C000000 		.4byte	.LBE40-.LBB40
 13919 0cf1 20       		.uleb128 0x20
 13920 0cf2 6900     		.ascii	"i\000"
 13921 0cf4 01       		.byte	0x1
 13922 0cf5 AD06     		.2byte	0x6ad
 13923 0cf7 9F000000 		.4byte	0x9f
 13924 0cfb 02       		.uleb128 0x2
 13925 0cfc 91       		.byte	0x91
 13926 0cfd 68       		.sleb128 -24
 13927 0cfe 00       		.byte	0
 13928 0cff 00       		.byte	0
 13929 0d00 1B       		.uleb128 0x1b
 13930 0d01 CF060000 		.4byte	.LASF159
 13931 0d05 01       		.byte	0x1
 13932 0d06 C806     		.2byte	0x6c8
 13933 0d08 00000000 		.4byte	.LFB82
 13934 0d0c 54000000 		.4byte	.LFE82-.LFB82
 13935 0d10 01       		.uleb128 0x1
 13936 0d11 9C       		.byte	0x9c
 13937 0d12 1B       		.uleb128 0x1b
 13938 0d13 C0050000 		.4byte	.LASF160
 13939 0d17 01       		.byte	0x1
 13940 0d18 DB06     		.2byte	0x6db
 13941 0d1a 00000000 		.4byte	.LFB83
 13942 0d1e C4000000 		.4byte	.LFE83-.LFB83
 13943 0d22 01       		.uleb128 0x1
 13944 0d23 9C       		.byte	0x9c
 13945 0d24 1C       		.uleb128 0x1c
 13946 0d25 1E0D0000 		.4byte	.LASF161
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 305


 13947 0d29 01       		.byte	0x1
 13948 0d2a 0E07     		.2byte	0x70e
 13949 0d2c 13010000 		.4byte	0x113
 13950 0d30 00000000 		.4byte	.LFB84
 13951 0d34 98000000 		.4byte	.LFE84-.LFB84
 13952 0d38 01       		.uleb128 0x1
 13953 0d39 9C       		.byte	0x9c
 13954 0d3a 730D0000 		.4byte	0xd73
 13955 0d3e 1D       		.uleb128 0x1d
 13956 0d3f 5800     		.ascii	"X\000"
 13957 0d41 01       		.byte	0x1
 13958 0d42 0E07     		.2byte	0x70e
 13959 0d44 13010000 		.4byte	0x113
 13960 0d48 02       		.uleb128 0x2
 13961 0d49 91       		.byte	0x91
 13962 0d4a 64       		.sleb128 -28
 13963 0d4b 20       		.uleb128 0x20
 13964 0d4c 5900     		.ascii	"Y\000"
 13965 0d4e 01       		.byte	0x1
 13966 0d4f 0F07     		.2byte	0x70f
 13967 0d51 13010000 		.4byte	0x113
 13968 0d55 02       		.uleb128 0x2
 13969 0d56 91       		.byte	0x91
 13970 0d57 70       		.sleb128 -16
 13971 0d58 20       		.uleb128 0x20
 13972 0d59 4600     		.ascii	"F\000"
 13973 0d5b 01       		.byte	0x1
 13974 0d5c 0F07     		.2byte	0x70f
 13975 0d5e 13010000 		.4byte	0x113
 13976 0d62 02       		.uleb128 0x2
 13977 0d63 91       		.byte	0x91
 13978 0d64 74       		.sleb128 -12
 13979 0d65 20       		.uleb128 0x20
 13980 0d66 4500     		.ascii	"E\000"
 13981 0d68 01       		.byte	0x1
 13982 0d69 1007     		.2byte	0x710
 13983 0d6b 9F000000 		.4byte	0x9f
 13984 0d6f 02       		.uleb128 0x2
 13985 0d70 91       		.byte	0x91
 13986 0d71 6C       		.sleb128 -20
 13987 0d72 00       		.byte	0
 13988 0d73 25       		.uleb128 0x25
 13989 0d74 F4000000 		.4byte	.LASF163
 13990 0d78 01       		.byte	0x1
 13991 0d79 2207     		.2byte	0x722
 13992 0d7b 00000000 		.4byte	.LFB85
 13993 0d7f D4000000 		.4byte	.LFE85-.LFB85
 13994 0d83 01       		.uleb128 0x1
 13995 0d84 9C       		.byte	0x9c
 13996 0d85 D00D0000 		.4byte	0xdd0
 13997 0d89 1F       		.uleb128 0x1f
 13998 0d8a B10E0000 		.4byte	.LASF164
 13999 0d8e 01       		.byte	0x1
 14000 0d8f 2207     		.2byte	0x722
 14001 0d91 9F000000 		.4byte	0x9f
 14002 0d95 02       		.uleb128 0x2
 14003 0d96 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 306


 14004 0d97 64       		.sleb128 -28
 14005 0d98 1E       		.uleb128 0x1e
 14006 0d99 7F0E0000 		.4byte	.LASF165
 14007 0d9d 01       		.byte	0x1
 14008 0d9e 2E07     		.2byte	0x72e
 14009 0da0 CE000000 		.4byte	0xce
 14010 0da4 02       		.uleb128 0x2
 14011 0da5 91       		.byte	0x91
 14012 0da6 76       		.sleb128 -10
 14013 0da7 19       		.uleb128 0x19
 14014 0da8 18000000 		.4byte	.LBB41
 14015 0dac 86000000 		.4byte	.LBE41-.LBB41
 14016 0db0 1E       		.uleb128 0x1e
 14017 0db1 36110000 		.4byte	.LASF166
 14018 0db5 01       		.byte	0x1
 14019 0db6 3207     		.2byte	0x732
 14020 0db8 13010000 		.4byte	0x113
 14021 0dbc 02       		.uleb128 0x2
 14022 0dbd 91       		.byte	0x91
 14023 0dbe 70       		.sleb128 -16
 14024 0dbf 1E       		.uleb128 0x1e
 14025 0dc0 90150000 		.4byte	.LASF167
 14026 0dc4 01       		.byte	0x1
 14027 0dc5 4107     		.2byte	0x741
 14028 0dc7 9F000000 		.4byte	0x9f
 14029 0dcb 02       		.uleb128 0x2
 14030 0dcc 91       		.byte	0x91
 14031 0dcd 6C       		.sleb128 -20
 14032 0dce 00       		.byte	0
 14033 0dcf 00       		.byte	0
 14034 0dd0 25       		.uleb128 0x25
 14035 0dd1 F7080000 		.4byte	.LASF168
 14036 0dd5 01       		.byte	0x1
 14037 0dd6 4D07     		.2byte	0x74d
 14038 0dd8 00000000 		.4byte	.LFB86
 14039 0ddc 1C000000 		.4byte	.LFE86-.LFB86
 14040 0de0 01       		.uleb128 0x1
 14041 0de1 9C       		.byte	0x9c
 14042 0de2 040E0000 		.4byte	0xe04
 14043 0de6 1D       		.uleb128 0x1d
 14044 0de7 636300   		.ascii	"cc\000"
 14045 0dea 01       		.byte	0x1
 14046 0deb 4D07     		.2byte	0x74d
 14047 0ded 9F000000 		.4byte	0x9f
 14048 0df1 02       		.uleb128 0x2
 14049 0df2 91       		.byte	0x91
 14050 0df3 74       		.sleb128 -12
 14051 0df4 1D       		.uleb128 0x1d
 14052 0df5 76616C00 		.ascii	"val\000"
 14053 0df9 01       		.byte	0x1
 14054 0dfa 4D07     		.2byte	0x74d
 14055 0dfc 9F000000 		.4byte	0x9f
 14056 0e00 02       		.uleb128 0x2
 14057 0e01 91       		.byte	0x91
 14058 0e02 70       		.sleb128 -16
 14059 0e03 00       		.byte	0
 14060 0e04 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 307


 14061 0e05 040C0000 		.4byte	.LASF169
 14062 0e09 01       		.byte	0x1
 14063 0e0a 5307     		.2byte	0x753
 14064 0e0c 00000000 		.4byte	.LFB87
 14065 0e10 68000000 		.4byte	.LFE87-.LFB87
 14066 0e14 01       		.uleb128 0x1
 14067 0e15 9C       		.byte	0x9c
 14068 0e16 480E0000 		.4byte	0xe48
 14069 0e1a 1F       		.uleb128 0x1f
 14070 0e1b E8030000 		.4byte	.LASF170
 14071 0e1f 01       		.byte	0x1
 14072 0e20 5307     		.2byte	0x753
 14073 0e22 9F000000 		.4byte	0x9f
 14074 0e26 02       		.uleb128 0x2
 14075 0e27 91       		.byte	0x91
 14076 0e28 74       		.sleb128 -12
 14077 0e29 1F       		.uleb128 0x1f
 14078 0e2a 7F0E0000 		.4byte	.LASF165
 14079 0e2e 01       		.byte	0x1
 14080 0e2f 5307     		.2byte	0x753
 14081 0e31 9F000000 		.4byte	0x9f
 14082 0e35 02       		.uleb128 0x2
 14083 0e36 91       		.byte	0x91
 14084 0e37 70       		.sleb128 -16
 14085 0e38 1F       		.uleb128 0x1f
 14086 0e39 6A0A0000 		.4byte	.LASF171
 14087 0e3d 01       		.byte	0x1
 14088 0e3e 5307     		.2byte	0x753
 14089 0e40 9F000000 		.4byte	0x9f
 14090 0e44 02       		.uleb128 0x2
 14091 0e45 91       		.byte	0x91
 14092 0e46 6C       		.sleb128 -20
 14093 0e47 00       		.byte	0
 14094 0e48 25       		.uleb128 0x25
 14095 0e49 70070000 		.4byte	.LASF172
 14096 0e4d 01       		.byte	0x1
 14097 0e4e 6007     		.2byte	0x760
 14098 0e50 00000000 		.4byte	.LFB88
 14099 0e54 68000000 		.4byte	.LFE88-.LFB88
 14100 0e58 01       		.uleb128 0x1
 14101 0e59 9C       		.byte	0x9c
 14102 0e5a 8C0E0000 		.4byte	0xe8c
 14103 0e5e 1F       		.uleb128 0x1f
 14104 0e5f E8030000 		.4byte	.LASF170
 14105 0e63 01       		.byte	0x1
 14106 0e64 6007     		.2byte	0x760
 14107 0e66 9F000000 		.4byte	0x9f
 14108 0e6a 02       		.uleb128 0x2
 14109 0e6b 91       		.byte	0x91
 14110 0e6c 74       		.sleb128 -12
 14111 0e6d 1F       		.uleb128 0x1f
 14112 0e6e 2D060000 		.4byte	.LASF173
 14113 0e72 01       		.byte	0x1
 14114 0e73 6007     		.2byte	0x760
 14115 0e75 9F000000 		.4byte	0x9f
 14116 0e79 02       		.uleb128 0x2
 14117 0e7a 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 308


 14118 0e7b 70       		.sleb128 -16
 14119 0e7c 1F       		.uleb128 0x1f
 14120 0e7d 6A0A0000 		.4byte	.LASF171
 14121 0e81 01       		.byte	0x1
 14122 0e82 6007     		.2byte	0x760
 14123 0e84 9F000000 		.4byte	0x9f
 14124 0e88 02       		.uleb128 0x2
 14125 0e89 91       		.byte	0x91
 14126 0e8a 6C       		.sleb128 -20
 14127 0e8b 00       		.byte	0
 14128 0e8c 25       		.uleb128 0x25
 14129 0e8d BC070000 		.4byte	.LASF174
 14130 0e91 01       		.byte	0x1
 14131 0e92 6C07     		.2byte	0x76c
 14132 0e94 00000000 		.4byte	.LFB89
 14133 0e98 68000000 		.4byte	.LFE89-.LFB89
 14134 0e9c 01       		.uleb128 0x1
 14135 0e9d 9C       		.byte	0x9c
 14136 0e9e D00E0000 		.4byte	0xed0
 14137 0ea2 1F       		.uleb128 0x1f
 14138 0ea3 54020000 		.4byte	.LASF175
 14139 0ea7 01       		.byte	0x1
 14140 0ea8 6C07     		.2byte	0x76c
 14141 0eaa 9F000000 		.4byte	0x9f
 14142 0eae 02       		.uleb128 0x2
 14143 0eaf 91       		.byte	0x91
 14144 0eb0 74       		.sleb128 -12
 14145 0eb1 1F       		.uleb128 0x1f
 14146 0eb2 4A010000 		.4byte	.LASF176
 14147 0eb6 01       		.byte	0x1
 14148 0eb7 6C07     		.2byte	0x76c
 14149 0eb9 9F000000 		.4byte	0x9f
 14150 0ebd 02       		.uleb128 0x2
 14151 0ebe 91       		.byte	0x91
 14152 0ebf 70       		.sleb128 -16
 14153 0ec0 1F       		.uleb128 0x1f
 14154 0ec1 6A0A0000 		.4byte	.LASF171
 14155 0ec5 01       		.byte	0x1
 14156 0ec6 6C07     		.2byte	0x76c
 14157 0ec8 9F000000 		.4byte	0x9f
 14158 0ecc 02       		.uleb128 0x2
 14159 0ecd 91       		.byte	0x91
 14160 0ece 6C       		.sleb128 -20
 14161 0ecf 00       		.byte	0
 14162 0ed0 25       		.uleb128 0x25
 14163 0ed1 EC0D0000 		.4byte	.LASF177
 14164 0ed5 01       		.byte	0x1
 14165 0ed6 7807     		.2byte	0x778
 14166 0ed8 00000000 		.4byte	.LFB90
 14167 0edc 6C000000 		.4byte	.LFE90-.LFB90
 14168 0ee0 01       		.uleb128 0x1
 14169 0ee1 9C       		.byte	0x9c
 14170 0ee2 050F0000 		.4byte	0xf05
 14171 0ee6 1D       		.uleb128 0x1d
 14172 0ee7 76616C00 		.ascii	"val\000"
 14173 0eeb 01       		.byte	0x1
 14174 0eec 7807     		.2byte	0x778
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 309


 14175 0eee 9F000000 		.4byte	0x9f
 14176 0ef2 02       		.uleb128 0x2
 14177 0ef3 91       		.byte	0x91
 14178 0ef4 74       		.sleb128 -12
 14179 0ef5 1F       		.uleb128 0x1f
 14180 0ef6 6A0A0000 		.4byte	.LASF171
 14181 0efa 01       		.byte	0x1
 14182 0efb 7807     		.2byte	0x778
 14183 0efd 9F000000 		.4byte	0x9f
 14184 0f01 02       		.uleb128 0x2
 14185 0f02 91       		.byte	0x91
 14186 0f03 70       		.sleb128 -16
 14187 0f04 00       		.byte	0
 14188 0f05 1B       		.uleb128 0x1b
 14189 0f06 F4030000 		.4byte	.LASF178
 14190 0f0a 01       		.byte	0x1
 14191 0f0b 8407     		.2byte	0x784
 14192 0f0d 00000000 		.4byte	.LFB91
 14193 0f11 64000000 		.4byte	.LFE91-.LFB91
 14194 0f15 01       		.uleb128 0x1
 14195 0f16 9C       		.byte	0x9c
 14196 0f17 25       		.uleb128 0x25
 14197 0f18 FF080000 		.4byte	.LASF179
 14198 0f1c 01       		.byte	0x1
 14199 0f1d 9C07     		.2byte	0x79c
 14200 0f1f 00000000 		.4byte	.LFB92
 14201 0f23 EC0B0000 		.4byte	.LFE92-.LFB92
 14202 0f27 01       		.uleb128 0x1
 14203 0f28 9C       		.byte	0x9c
 14204 0f29 64110000 		.4byte	0x1164
 14205 0f2d 24       		.uleb128 0x24
 14206 0f2e 16000000 		.4byte	.LBB42
 14207 0f32 C0050000 		.4byte	.LBE42-.LBB42
 14208 0f36 DE0F0000 		.4byte	0xfde
 14209 0f3a 1E       		.uleb128 0x1e
 14210 0f3b C4020000 		.4byte	.LASF180
 14211 0f3f 01       		.byte	0x1
 14212 0f40 AB07     		.2byte	0x7ab
 14213 0f42 86040000 		.4byte	0x486
 14214 0f46 03       		.uleb128 0x3
 14215 0f47 91       		.byte	0x91
 14216 0f48 B07F     		.sleb128 -80
 14217 0f4a 20       		.uleb128 0x20
 14218 0f4b 6900     		.ascii	"i\000"
 14219 0f4d 01       		.byte	0x1
 14220 0f4e AC07     		.2byte	0x7ac
 14221 0f50 E4000000 		.4byte	0xe4
 14222 0f54 02       		.uleb128 0x2
 14223 0f55 91       		.byte	0x91
 14224 0f56 6C       		.sleb128 -20
 14225 0f57 1E       		.uleb128 0x1e
 14226 0f58 F4050000 		.4byte	.LASF181
 14227 0f5c 01       		.byte	0x1
 14228 0f5d AD07     		.2byte	0x7ad
 14229 0f5f B8000000 		.4byte	0xb8
 14230 0f63 02       		.uleb128 0x2
 14231 0f64 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 310


 14232 0f65 57       		.sleb128 -41
 14233 0f66 1E       		.uleb128 0x1e
 14234 0f67 7E050000 		.4byte	.LASF182
 14235 0f6b 01       		.byte	0x1
 14236 0f6c C107     		.2byte	0x7c1
 14237 0f6e CE000000 		.4byte	0xce
 14238 0f72 02       		.uleb128 0x2
 14239 0f73 91       		.byte	0x91
 14240 0f74 54       		.sleb128 -44
 14241 0f75 24       		.uleb128 0x24
 14242 0f76 B2000000 		.4byte	.LBB43
 14243 0f7a 76000000 		.4byte	.LBE43-.LBB43
 14244 0f7e A70F0000 		.4byte	0xfa7
 14245 0f82 20       		.uleb128 0x20
 14246 0f83 6A00     		.ascii	"j\000"
 14247 0f85 01       		.byte	0x1
 14248 0f86 B707     		.2byte	0x7b7
 14249 0f88 9F000000 		.4byte	0x9f
 14250 0f8c 02       		.uleb128 0x2
 14251 0f8d 91       		.byte	0x91
 14252 0f8e 68       		.sleb128 -24
 14253 0f8f 19       		.uleb128 0x19
 14254 0f90 B8000000 		.4byte	.LBB44
 14255 0f94 64000000 		.4byte	.LBE44-.LBB44
 14256 0f98 20       		.uleb128 0x20
 14257 0f99 6B00     		.ascii	"k\000"
 14258 0f9b 01       		.byte	0x1
 14259 0f9c B907     		.2byte	0x7b9
 14260 0f9e 9F000000 		.4byte	0x9f
 14261 0fa2 02       		.uleb128 0x2
 14262 0fa3 91       		.byte	0x91
 14263 0fa4 64       		.sleb128 -28
 14264 0fa5 00       		.byte	0
 14265 0fa6 00       		.byte	0
 14266 0fa7 24       		.uleb128 0x24
 14267 0fa8 FA010000 		.4byte	.LBB45
 14268 0fac 46000000 		.4byte	.LBE45-.LBB45
 14269 0fb0 C40F0000 		.4byte	0xfc4
 14270 0fb4 1E       		.uleb128 0x1e
 14271 0fb5 AC020000 		.4byte	.LASF183
 14272 0fb9 01       		.byte	0x1
 14273 0fba D907     		.2byte	0x7d9
 14274 0fbc CE000000 		.4byte	0xce
 14275 0fc0 02       		.uleb128 0x2
 14276 0fc1 91       		.byte	0x91
 14277 0fc2 52       		.sleb128 -46
 14278 0fc3 00       		.byte	0
 14279 0fc4 19       		.uleb128 0x19
 14280 0fc5 66040000 		.4byte	.LBB46
 14281 0fc9 48000000 		.4byte	.LBE46-.LBB46
 14282 0fcd 1E       		.uleb128 0x1e
 14283 0fce AC020000 		.4byte	.LASF183
 14284 0fd2 01       		.byte	0x1
 14285 0fd3 1508     		.2byte	0x815
 14286 0fd5 C3000000 		.4byte	0xc3
 14287 0fd9 02       		.uleb128 0x2
 14288 0fda 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 311


 14289 0fdb 50       		.sleb128 -48
 14290 0fdc 00       		.byte	0
 14291 0fdd 00       		.byte	0
 14292 0fde 24       		.uleb128 0x24
 14293 0fdf E0050000 		.4byte	.LBB47
 14294 0fe3 04030000 		.4byte	.LBE47-.LBB47
 14295 0fe7 C6100000 		.4byte	0x10c6
 14296 0feb 1E       		.uleb128 0x1e
 14297 0fec C4020000 		.4byte	.LASF180
 14298 0ff0 01       		.byte	0x1
 14299 0ff1 7608     		.2byte	0x876
 14300 0ff3 86040000 		.4byte	0x486
 14301 0ff7 03       		.uleb128 0x3
 14302 0ff8 91       		.byte	0x91
 14303 0ff9 AC7F     		.sleb128 -84
 14304 0ffb 20       		.uleb128 0x20
 14305 0ffc 6900     		.ascii	"i\000"
 14306 0ffe 01       		.byte	0x1
 14307 0fff 7708     		.2byte	0x877
 14308 1001 E4000000 		.4byte	0xe4
 14309 1005 02       		.uleb128 0x2
 14310 1006 91       		.byte	0x91
 14311 1007 60       		.sleb128 -32
 14312 1008 1E       		.uleb128 0x1e
 14313 1009 F4050000 		.4byte	.LASF181
 14314 100d 01       		.byte	0x1
 14315 100e 7808     		.2byte	0x878
 14316 1010 B8000000 		.4byte	0xb8
 14317 1014 02       		.uleb128 0x2
 14318 1015 91       		.byte	0x91
 14319 1016 4F       		.sleb128 -49
 14320 1017 24       		.uleb128 0x24
 14321 1018 14060000 		.4byte	.LBB48
 14322 101c 82000000 		.4byte	.LBE48-.LBB48
 14323 1020 34100000 		.4byte	0x1034
 14324 1024 1E       		.uleb128 0x1e
 14325 1025 00120000 		.4byte	.LASF184
 14326 1029 01       		.byte	0x1
 14327 102a 7C08     		.2byte	0x87c
 14328 102c B8000000 		.4byte	0xb8
 14329 1030 02       		.uleb128 0x2
 14330 1031 91       		.byte	0x91
 14331 1032 4E       		.sleb128 -50
 14332 1033 00       		.byte	0
 14333 1034 19       		.uleb128 0x19
 14334 1035 AC060000 		.4byte	.LBB49
 14335 1039 BA010000 		.4byte	.LBE49-.LBB49
 14336 103d 1E       		.uleb128 0x1e
 14337 103e 34130000 		.4byte	.LASF185
 14338 1042 01       		.byte	0x1
 14339 1043 8708     		.2byte	0x887
 14340 1045 E4000000 		.4byte	0xe4
 14341 1049 02       		.uleb128 0x2
 14342 104a 91       		.byte	0x91
 14343 104b 5C       		.sleb128 -36
 14344 104c 19       		.uleb128 0x19
 14345 104d B2060000 		.4byte	.LBB50
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 312


 14346 1051 A6010000 		.4byte	.LBE50-.LBB50
 14347 1055 1E       		.uleb128 0x1e
 14348 1056 99050000 		.4byte	.LASF128
 14349 105a 01       		.byte	0x1
 14350 105b 8908     		.2byte	0x889
 14351 105d CE000000 		.4byte	0xce
 14352 1061 02       		.uleb128 0x2
 14353 1062 91       		.byte	0x91
 14354 1063 4C       		.sleb128 -52
 14355 1064 19       		.uleb128 0x19
 14356 1065 C0060000 		.4byte	.LBB51
 14357 1069 98010000 		.4byte	.LBE51-.LBB51
 14358 106d 1E       		.uleb128 0x1e
 14359 106e 88070000 		.4byte	.LASF186
 14360 1072 01       		.byte	0x1
 14361 1073 8A08     		.2byte	0x88a
 14362 1075 E4000000 		.4byte	0xe4
 14363 1079 02       		.uleb128 0x2
 14364 107a 91       		.byte	0x91
 14365 107b 58       		.sleb128 -40
 14366 107c 19       		.uleb128 0x19
 14367 107d 1C070000 		.4byte	.LBB52
 14368 1081 2E010000 		.4byte	.LBE52-.LBB52
 14369 1085 1E       		.uleb128 0x1e
 14370 1086 40050000 		.4byte	.LASF187
 14371 108a 01       		.byte	0x1
 14372 108b 9408     		.2byte	0x894
 14373 108d CE000000 		.4byte	0xce
 14374 1091 02       		.uleb128 0x2
 14375 1092 91       		.byte	0x91
 14376 1093 4A       		.sleb128 -54
 14377 1094 1E       		.uleb128 0x1e
 14378 1095 45100000 		.4byte	.LASF188
 14379 1099 01       		.byte	0x1
 14380 109a 9508     		.2byte	0x895
 14381 109c B8000000 		.4byte	0xb8
 14382 10a0 02       		.uleb128 0x2
 14383 10a1 91       		.byte	0x91
 14384 10a2 49       		.sleb128 -55
 14385 10a3 1E       		.uleb128 0x1e
 14386 10a4 B1010000 		.4byte	.LASF189
 14387 10a8 01       		.byte	0x1
 14388 10a9 9608     		.2byte	0x896
 14389 10ab B8000000 		.4byte	0xb8
 14390 10af 02       		.uleb128 0x2
 14391 10b0 91       		.byte	0x91
 14392 10b1 48       		.sleb128 -56
 14393 10b2 1E       		.uleb128 0x1e
 14394 10b3 76040000 		.4byte	.LASF129
 14395 10b7 01       		.byte	0x1
 14396 10b8 9908     		.2byte	0x899
 14397 10ba CE000000 		.4byte	0xce
 14398 10be 02       		.uleb128 0x2
 14399 10bf 91       		.byte	0x91
 14400 10c0 46       		.sleb128 -58
 14401 10c1 00       		.byte	0
 14402 10c2 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 313


 14403 10c3 00       		.byte	0
 14404 10c4 00       		.byte	0
 14405 10c5 00       		.byte	0
 14406 10c6 24       		.uleb128 0x24
 14407 10c7 EE080000 		.4byte	.LBB53
 14408 10cb 14010000 		.4byte	.LBE53-.LBB53
 14409 10cf 11110000 		.4byte	0x1111
 14410 10d3 1E       		.uleb128 0x1e
 14411 10d4 C4020000 		.4byte	.LASF180
 14412 10d8 01       		.byte	0x1
 14413 10d9 BD08     		.2byte	0x8bd
 14414 10db 86040000 		.4byte	0x486
 14415 10df 03       		.uleb128 0x3
 14416 10e0 91       		.byte	0x91
 14417 10e1 A87F     		.sleb128 -88
 14418 10e3 20       		.uleb128 0x20
 14419 10e4 6900     		.ascii	"i\000"
 14420 10e6 01       		.byte	0x1
 14421 10e7 BE08     		.2byte	0x8be
 14422 10e9 E4000000 		.4byte	0xe4
 14423 10ed 02       		.uleb128 0x2
 14424 10ee 91       		.byte	0x91
 14425 10ef 40       		.sleb128 -64
 14426 10f0 1E       		.uleb128 0x1e
 14427 10f1 DD060000 		.4byte	.LASF190
 14428 10f5 01       		.byte	0x1
 14429 10f6 C708     		.2byte	0x8c7
 14430 10f8 CE000000 		.4byte	0xce
 14431 10fc 03       		.uleb128 0x3
 14432 10fd 91       		.byte	0x91
 14433 10fe BE7F     		.sleb128 -66
 14434 1100 1E       		.uleb128 0x1e
 14435 1101 AC020000 		.4byte	.LASF183
 14436 1105 01       		.byte	0x1
 14437 1106 D508     		.2byte	0x8d5
 14438 1108 CE000000 		.4byte	0xce
 14439 110c 03       		.uleb128 0x3
 14440 110d 91       		.byte	0x91
 14441 110e BC7F     		.sleb128 -68
 14442 1110 00       		.byte	0
 14443 1111 19       		.uleb128 0x19
 14444 1112 0E0A0000 		.4byte	.LBB54
 14445 1116 AA010000 		.4byte	.LBE54-.LBB54
 14446 111a 1E       		.uleb128 0x1e
 14447 111b C4020000 		.4byte	.LASF180
 14448 111f 01       		.byte	0x1
 14449 1120 E008     		.2byte	0x8e0
 14450 1122 86040000 		.4byte	0x486
 14451 1126 03       		.uleb128 0x3
 14452 1127 91       		.byte	0x91
 14453 1128 A47F     		.sleb128 -92
 14454 112a 20       		.uleb128 0x20
 14455 112b 6900     		.ascii	"i\000"
 14456 112d 01       		.byte	0x1
 14457 112e E108     		.2byte	0x8e1
 14458 1130 E4000000 		.4byte	0xe4
 14459 1134 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 314


 14460 1135 91       		.byte	0x91
 14461 1136 B87F     		.sleb128 -72
 14462 1138 1E       		.uleb128 0x1e
 14463 1139 DD060000 		.4byte	.LASF190
 14464 113d 01       		.byte	0x1
 14465 113e EA08     		.2byte	0x8ea
 14466 1140 CE000000 		.4byte	0xce
 14467 1144 03       		.uleb128 0x3
 14468 1145 91       		.byte	0x91
 14469 1146 B67F     		.sleb128 -74
 14470 1148 19       		.uleb128 0x19
 14471 1149 360B0000 		.4byte	.LBB55
 14472 114d 2C000000 		.4byte	.LBE55-.LBB55
 14473 1151 1E       		.uleb128 0x1e
 14474 1152 AC020000 		.4byte	.LASF183
 14475 1156 01       		.byte	0x1
 14476 1157 0209     		.2byte	0x902
 14477 1159 C3000000 		.4byte	0xc3
 14478 115d 03       		.uleb128 0x3
 14479 115e 91       		.byte	0x91
 14480 115f B47F     		.sleb128 -76
 14481 1161 00       		.byte	0
 14482 1162 00       		.byte	0
 14483 1163 00       		.byte	0
 14484 1164 25       		.uleb128 0x25
 14485 1165 DD040000 		.4byte	.LASF191
 14486 1169 01       		.byte	0x1
 14487 116a 1A09     		.2byte	0x91a
 14488 116c 00000000 		.4byte	.LFB93
 14489 1170 50010000 		.4byte	.LFE93-.LFB93
 14490 1174 01       		.uleb128 0x1
 14491 1175 9C       		.byte	0x9c
 14492 1176 B0110000 		.4byte	0x11b0
 14493 117a 1F       		.uleb128 0x1f
 14494 117b 410E0000 		.4byte	.LASF192
 14495 117f 01       		.byte	0x1
 14496 1180 1A09     		.2byte	0x91a
 14497 1182 EF000000 		.4byte	0xef
 14498 1186 02       		.uleb128 0x2
 14499 1187 91       		.byte	0x91
 14500 1188 6F       		.sleb128 -17
 14501 1189 1F       		.uleb128 0x1f
 14502 118a FA0F0000 		.4byte	.LASF193
 14503 118e 01       		.byte	0x1
 14504 118f 1A09     		.2byte	0x91a
 14505 1191 B0110000 		.4byte	0x11b0
 14506 1195 02       		.uleb128 0x2
 14507 1196 91       		.byte	0x91
 14508 1197 68       		.sleb128 -24
 14509 1198 19       		.uleb128 0x19
 14510 1199 48000000 		.4byte	.LBB56
 14511 119d 54000000 		.4byte	.LBE56-.LBB56
 14512 11a1 20       		.uleb128 0x20
 14513 11a2 6900     		.ascii	"i\000"
 14514 11a4 01       		.byte	0x1
 14515 11a5 2609     		.2byte	0x926
 14516 11a7 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 315


 14517 11ab 02       		.uleb128 0x2
 14518 11ac 91       		.byte	0x91
 14519 11ad 74       		.sleb128 -12
 14520 11ae 00       		.byte	0
 14521 11af 00       		.byte	0
 14522 11b0 07       		.uleb128 0x7
 14523 11b1 04       		.byte	0x4
 14524 11b2 EF000000 		.4byte	0xef
 14525 11b6 25       		.uleb128 0x25
 14526 11b7 F9110000 		.4byte	.LASF194
 14527 11bb 01       		.byte	0x1
 14528 11bc 5A09     		.2byte	0x95a
 14529 11be 00000000 		.4byte	.LFB94
 14530 11c2 64060000 		.4byte	.LFE94-.LFB94
 14531 11c6 01       		.uleb128 0x1
 14532 11c7 9C       		.byte	0x9c
 14533 11c8 2C120000 		.4byte	0x122c
 14534 11cc 1E       		.uleb128 0x1e
 14535 11cd CC050000 		.4byte	.LASF195
 14536 11d1 01       		.byte	0x1
 14537 11d2 5C09     		.2byte	0x95c
 14538 11d4 B8000000 		.4byte	0xb8
 14539 11d8 02       		.uleb128 0x2
 14540 11d9 91       		.byte	0x91
 14541 11da 67       		.sleb128 -25
 14542 11db 19       		.uleb128 0x19
 14543 11dc C8030000 		.4byte	.LBB57
 14544 11e0 7C020000 		.4byte	.LBE57-.LBB57
 14545 11e4 1E       		.uleb128 0x1e
 14546 11e5 B80E0000 		.4byte	.LASF196
 14547 11e9 01       		.byte	0x1
 14548 11ea 120A     		.2byte	0xa12
 14549 11ec AD000000 		.4byte	0xad
 14550 11f0 02       		.uleb128 0x2
 14551 11f1 91       		.byte	0x91
 14552 11f2 66       		.sleb128 -26
 14553 11f3 19       		.uleb128 0x19
 14554 11f4 EC030000 		.4byte	.LBB58
 14555 11f8 52020000 		.4byte	.LBE58-.LBB58
 14556 11fc 1E       		.uleb128 0x1e
 14557 11fd D2070000 		.4byte	.LASF197
 14558 1201 01       		.byte	0x1
 14559 1202 1C0A     		.2byte	0xa1c
 14560 1204 13010000 		.4byte	0x113
 14561 1208 02       		.uleb128 0x2
 14562 1209 91       		.byte	0x91
 14563 120a 6C       		.sleb128 -20
 14564 120b 1E       		.uleb128 0x1e
 14565 120c 6E010000 		.4byte	.LASF198
 14566 1210 01       		.byte	0x1
 14567 1211 2C0A     		.2byte	0xa2c
 14568 1213 13010000 		.4byte	0x113
 14569 1217 02       		.uleb128 0x2
 14570 1218 91       		.byte	0x91
 14571 1219 68       		.sleb128 -24
 14572 121a 1E       		.uleb128 0x1e
 14573 121b D60F0000 		.4byte	.LASF199
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 316


 14574 121f 01       		.byte	0x1
 14575 1220 3D0A     		.2byte	0xa3d
 14576 1222 B8000000 		.4byte	0xb8
 14577 1226 02       		.uleb128 0x2
 14578 1227 91       		.byte	0x91
 14579 1228 65       		.sleb128 -27
 14580 1229 00       		.byte	0
 14581 122a 00       		.byte	0
 14582 122b 00       		.byte	0
 14583 122c 1B       		.uleb128 0x1b
 14584 122d D0130000 		.4byte	.LASF200
 14585 1231 01       		.byte	0x1
 14586 1232 640A     		.2byte	0xa64
 14587 1234 00000000 		.4byte	.LFB95
 14588 1238 A0000000 		.4byte	.LFE95-.LFB95
 14589 123c 01       		.uleb128 0x1
 14590 123d 9C       		.byte	0x9c
 14591 123e 1B       		.uleb128 0x1b
 14592 123f 94140000 		.4byte	.LASF201
 14593 1243 01       		.byte	0x1
 14594 1244 7B0A     		.2byte	0xa7b
 14595 1246 00000000 		.4byte	.LFB96
 14596 124a D8000000 		.4byte	.LFE96-.LFB96
 14597 124e 01       		.uleb128 0x1
 14598 124f 9C       		.byte	0x9c
 14599 1250 25       		.uleb128 0x25
 14600 1251 B2150000 		.4byte	.LASF202
 14601 1255 01       		.byte	0x1
 14602 1256 960A     		.2byte	0xa96
 14603 1258 00000000 		.4byte	.LFB97
 14604 125c 00060000 		.4byte	.LFE97-.LFB97
 14605 1260 01       		.uleb128 0x1
 14606 1261 9C       		.byte	0x9c
 14607 1262 EB120000 		.4byte	0x12eb
 14608 1266 1F       		.uleb128 0x1f
 14609 1267 F8040000 		.4byte	.LASF203
 14610 126b 01       		.byte	0x1
 14611 126c 960A     		.2byte	0xa96
 14612 126e C0040000 		.4byte	0x4c0
 14613 1272 02       		.uleb128 0x2
 14614 1273 91       		.byte	0x91
 14615 1274 5F       		.sleb128 -33
 14616 1275 1E       		.uleb128 0x1e
 14617 1276 F9090000 		.4byte	.LASF204
 14618 127a 01       		.byte	0x1
 14619 127b 980A     		.2byte	0xa98
 14620 127d B8000000 		.4byte	0xb8
 14621 1281 02       		.uleb128 0x2
 14622 1282 91       		.byte	0x91
 14623 1283 77       		.sleb128 -9
 14624 1284 24       		.uleb128 0x24
 14625 1285 E0030000 		.4byte	.LBB59
 14626 1289 6C000000 		.4byte	.LBE59-.LBB59
 14627 128d 9F120000 		.4byte	0x129f
 14628 1291 20       		.uleb128 0x20
 14629 1292 6900     		.ascii	"i\000"
 14630 1294 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 317


 14631 1295 4A0B     		.2byte	0xb4a
 14632 1297 9F000000 		.4byte	0x9f
 14633 129b 02       		.uleb128 0x2
 14634 129c 91       		.byte	0x91
 14635 129d 70       		.sleb128 -16
 14636 129e 00       		.byte	0
 14637 129f 24       		.uleb128 0x24
 14638 12a0 70040000 		.4byte	.LBB60
 14639 12a4 6C000000 		.4byte	.LBE60-.LBB60
 14640 12a8 BA120000 		.4byte	0x12ba
 14641 12ac 20       		.uleb128 0x20
 14642 12ad 6900     		.ascii	"i\000"
 14643 12af 01       		.byte	0x1
 14644 12b0 620B     		.2byte	0xb62
 14645 12b2 9F000000 		.4byte	0x9f
 14646 12b6 02       		.uleb128 0x2
 14647 12b7 91       		.byte	0x91
 14648 12b8 6C       		.sleb128 -20
 14649 12b9 00       		.byte	0
 14650 12ba 19       		.uleb128 0x19
 14651 12bb F2040000 		.4byte	.LBB61
 14652 12bf C8000000 		.4byte	.LBE61-.LBB61
 14653 12c3 1E       		.uleb128 0x1e
 14654 12c4 34140000 		.4byte	.LASF205
 14655 12c8 01       		.byte	0x1
 14656 12c9 790B     		.2byte	0xb79
 14657 12cb B8000000 		.4byte	0xb8
 14658 12cf 02       		.uleb128 0x2
 14659 12d0 91       		.byte	0x91
 14660 12d1 6B       		.sleb128 -21
 14661 12d2 19       		.uleb128 0x19
 14662 12d3 04050000 		.4byte	.LBB62
 14663 12d7 88000000 		.4byte	.LBE62-.LBB62
 14664 12db 20       		.uleb128 0x20
 14665 12dc 6900     		.ascii	"i\000"
 14666 12de 01       		.byte	0x1
 14667 12df 7A0B     		.2byte	0xb7a
 14668 12e1 9F000000 		.4byte	0x9f
 14669 12e5 02       		.uleb128 0x2
 14670 12e6 91       		.byte	0x91
 14671 12e7 64       		.sleb128 -28
 14672 12e8 00       		.byte	0
 14673 12e9 00       		.byte	0
 14674 12ea 00       		.byte	0
 14675 12eb 26       		.uleb128 0x26
 14676 12ec 6D150000 		.4byte	.LASF207
 14677 12f0 01       		.byte	0x1
 14678 12f1 990B     		.2byte	0xb99
 14679 12f3 00000000 		.4byte	.LFB98
 14680 12f7 98000000 		.4byte	.LFE98-.LFB98
 14681 12fb 01       		.uleb128 0x1
 14682 12fc 9C       		.byte	0x9c
 14683 12fd 26       		.uleb128 0x26
 14684 12fe 6B160000 		.4byte	.LASF208
 14685 1302 01       		.byte	0x1
 14686 1303 B00B     		.2byte	0xbb0
 14687 1305 00000000 		.4byte	.LFB99
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 318


 14688 1309 94000000 		.4byte	.LFE99-.LFB99
 14689 130d 01       		.uleb128 0x1
 14690 130e 9C       		.byte	0x9c
 14691 130f 26       		.uleb128 0x26
 14692 1310 220F0000 		.4byte	.LASF209
 14693 1314 01       		.byte	0x1
 14694 1315 C40B     		.2byte	0xbc4
 14695 1317 00000000 		.4byte	.LFB100
 14696 131b 4C000000 		.4byte	.LFE100-.LFB100
 14697 131f 01       		.uleb128 0x1
 14698 1320 9C       		.byte	0x9c
 14699 1321 26       		.uleb128 0x26
 14700 1322 8B0A0000 		.4byte	.LASF210
 14701 1326 01       		.byte	0x1
 14702 1327 D30B     		.2byte	0xbd3
 14703 1329 00000000 		.4byte	.LFB101
 14704 132d 4C000000 		.4byte	.LFE101-.LFB101
 14705 1331 01       		.uleb128 0x1
 14706 1332 9C       		.byte	0x9c
 14707 1333 26       		.uleb128 0x26
 14708 1334 4C130000 		.4byte	.LASF211
 14709 1338 01       		.byte	0x1
 14710 1339 E20B     		.2byte	0xbe2
 14711 133b 00000000 		.4byte	.LFB102
 14712 133f 1C000000 		.4byte	.LFE102-.LFB102
 14713 1343 01       		.uleb128 0x1
 14714 1344 9C       		.byte	0x9c
 14715 1345 25       		.uleb128 0x25
 14716 1346 6F140000 		.4byte	.LASF212
 14717 134a 01       		.byte	0x1
 14718 134b EE0B     		.2byte	0xbee
 14719 134d 00000000 		.4byte	.LFB103
 14720 1351 B0000000 		.4byte	.LFE103-.LFB103
 14721 1355 01       		.uleb128 0x1
 14722 1356 9C       		.byte	0x9c
 14723 1357 73130000 		.4byte	0x1373
 14724 135b 19       		.uleb128 0x19
 14725 135c 5A000000 		.4byte	.LBB63
 14726 1360 28000000 		.4byte	.LBE63-.LBB63
 14727 1364 20       		.uleb128 0x20
 14728 1365 6900     		.ascii	"i\000"
 14729 1367 01       		.byte	0x1
 14730 1368 FA0B     		.2byte	0xbfa
 14731 136a 9F000000 		.4byte	0x9f
 14732 136e 02       		.uleb128 0x2
 14733 136f 91       		.byte	0x91
 14734 1370 74       		.sleb128 -12
 14735 1371 00       		.byte	0
 14736 1372 00       		.byte	0
 14737 1373 25       		.uleb128 0x25
 14738 1374 720A0000 		.4byte	.LASF213
 14739 1378 01       		.byte	0x1
 14740 1379 020C     		.2byte	0xc02
 14741 137b 00000000 		.4byte	.LFB104
 14742 137f 54010000 		.4byte	.LFE104-.LFB104
 14743 1383 01       		.uleb128 0x1
 14744 1384 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 319


 14745 1385 E6130000 		.4byte	0x13e6
 14746 1389 1E       		.uleb128 0x1e
 14747 138a 250B0000 		.4byte	.LASF125
 14748 138e 01       		.byte	0x1
 14749 138f 120C     		.2byte	0xc12
 14750 1391 CE000000 		.4byte	0xce
 14751 1395 02       		.uleb128 0x2
 14752 1396 91       		.byte	0x91
 14753 1397 72       		.sleb128 -14
 14754 1398 24       		.uleb128 0x24
 14755 1399 0C000000 		.4byte	.LBB64
 14756 139d 40000000 		.4byte	.LBE64-.LBB64
 14757 13a1 B3130000 		.4byte	0x13b3
 14758 13a5 20       		.uleb128 0x20
 14759 13a6 6900     		.ascii	"i\000"
 14760 13a8 01       		.byte	0x1
 14761 13a9 060C     		.2byte	0xc06
 14762 13ab 9F000000 		.4byte	0x9f
 14763 13af 02       		.uleb128 0x2
 14764 13b0 91       		.byte	0x91
 14765 13b1 74       		.sleb128 -12
 14766 13b2 00       		.byte	0
 14767 13b3 24       		.uleb128 0x24
 14768 13b4 50000000 		.4byte	.LBB65
 14769 13b8 2A000000 		.4byte	.LBE65-.LBB65
 14770 13bc CE130000 		.4byte	0x13ce
 14771 13c0 20       		.uleb128 0x20
 14772 13c1 6900     		.ascii	"i\000"
 14773 13c3 01       		.byte	0x1
 14774 13c4 130C     		.2byte	0xc13
 14775 13c6 9F000000 		.4byte	0x9f
 14776 13ca 02       		.uleb128 0x2
 14777 13cb 91       		.byte	0x91
 14778 13cc 6C       		.sleb128 -20
 14779 13cd 00       		.byte	0
 14780 13ce 19       		.uleb128 0x19
 14781 13cf 9E000000 		.4byte	.LBB66
 14782 13d3 98000000 		.4byte	.LBE66-.LBB66
 14783 13d7 20       		.uleb128 0x20
 14784 13d8 6900     		.ascii	"i\000"
 14785 13da 01       		.byte	0x1
 14786 13db 1B0C     		.2byte	0xc1b
 14787 13dd 9F000000 		.4byte	0x9f
 14788 13e1 02       		.uleb128 0x2
 14789 13e2 91       		.byte	0x91
 14790 13e3 68       		.sleb128 -24
 14791 13e4 00       		.byte	0
 14792 13e5 00       		.byte	0
 14793 13e6 1B       		.uleb128 0x1b
 14794 13e7 E4150000 		.4byte	.LASF214
 14795 13eb 01       		.byte	0x1
 14796 13ec 250C     		.2byte	0xc25
 14797 13ee 00000000 		.4byte	.LFB105
 14798 13f2 A0000000 		.4byte	.LFE105-.LFB105
 14799 13f6 01       		.uleb128 0x1
 14800 13f7 9C       		.byte	0x9c
 14801 13f8 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 320


 14802 13f9 07080000 		.4byte	.LASF215
 14803 13fd 01       		.byte	0x1
 14804 13fe 350C     		.2byte	0xc35
 14805 1400 00000000 		.4byte	.LFB106
 14806 1404 BC000000 		.4byte	.LFE106-.LFB106
 14807 1408 01       		.uleb128 0x1
 14808 1409 9C       		.byte	0x9c
 14809 140a 26140000 		.4byte	0x1426
 14810 140e 19       		.uleb128 0x19
 14811 140f 0C000000 		.4byte	.LBB67
 14812 1413 9C000000 		.4byte	.LBE67-.LBB67
 14813 1417 20       		.uleb128 0x20
 14814 1418 6900     		.ascii	"i\000"
 14815 141a 01       		.byte	0x1
 14816 141b 390C     		.2byte	0xc39
 14817 141d 9F000000 		.4byte	0x9f
 14818 1421 02       		.uleb128 0x2
 14819 1422 91       		.byte	0x91
 14820 1423 74       		.sleb128 -12
 14821 1424 00       		.byte	0
 14822 1425 00       		.byte	0
 14823 1426 09       		.uleb128 0x9
 14824 1427 EF000000 		.4byte	0xef
 14825 142b 36140000 		.4byte	0x1436
 14826 142f 0A       		.uleb128 0xa
 14827 1430 4C010000 		.4byte	0x14c
 14828 1434 01       		.byte	0x1
 14829 1435 00       		.byte	0
 14830 1436 1E       		.uleb128 0x1e
 14831 1437 69060000 		.4byte	.LASF216
 14832 143b 01       		.byte	0x1
 14833 143c 2601     		.2byte	0x126
 14834 143e 26140000 		.4byte	0x1426
 14835 1442 05       		.uleb128 0x5
 14836 1443 03       		.byte	0x3
 14837 1444 70000000 		.4byte	eepromArray
 14838 1448 27       		.uleb128 0x27
 14839 1449 B6130000 		.4byte	.LASF217
 14840 144d 0B       		.byte	0xb
 14841 144e F3       		.byte	0xf3
 14842 144f 40010000 		.4byte	0x140
 14843 1453 27       		.uleb128 0x27
 14844 1454 BA140000 		.4byte	.LASF218
 14845 1458 0B       		.byte	0xb
 14846 1459 F9       		.byte	0xf9
 14847 145a 40010000 		.4byte	0x140
 14848 145e 09       		.uleb128 0x9
 14849 145f EF000000 		.4byte	0xef
 14850 1463 6E140000 		.4byte	0x146e
 14851 1467 0A       		.uleb128 0xa
 14852 1468 4C010000 		.4byte	0x14c
 14853 146c 3F       		.byte	0x3f
 14854 146d 00       		.byte	0
 14855 146e 27       		.uleb128 0x27
 14856 146f 390B0000 		.4byte	.LASF219
 14857 1473 0B       		.byte	0xb
 14858 1474 FA       		.byte	0xfa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 321


 14859 1475 5E140000 		.4byte	0x145e
 14860 1479 27       		.uleb128 0x27
 14861 147a F5060000 		.4byte	.LASF220
 14862 147e 0B       		.byte	0xb
 14863 147f FE       		.byte	0xfe
 14864 1480 40010000 		.4byte	0x140
 14865 1484 27       		.uleb128 0x27
 14866 1485 FD130000 		.4byte	.LASF221
 14867 1489 0B       		.byte	0xb
 14868 148a FF       		.byte	0xff
 14869 148b 5E140000 		.4byte	0x145e
 14870 148f 27       		.uleb128 0x27
 14871 1490 D8000000 		.4byte	.LASF222
 14872 1494 0C       		.byte	0xc
 14873 1495 82       		.byte	0x82
 14874 1496 E0010000 		.4byte	0x1e0
 14875 149a 09       		.uleb128 0x9
 14876 149b AB140000 		.4byte	0x14ab
 14877 149f AB140000 		.4byte	0x14ab
 14878 14a3 28       		.uleb128 0x28
 14879 14a4 4C010000 		.4byte	0x14c
 14880 14a8 FF03     		.2byte	0x3ff
 14881 14aa 00       		.byte	0
 14882 14ab 08       		.uleb128 0x8
 14883 14ac B8000000 		.4byte	0xb8
 14884 14b0 29       		.uleb128 0x29
 14885 14b1 040A0000 		.4byte	.LASF223
 14886 14b5 01       		.byte	0x1
 14887 14b6 3301     		.2byte	0x133
 14888 14b8 C2140000 		.4byte	0x14c2
 14889 14bc 05       		.uleb128 0x5
 14890 14bd 03       		.byte	0x3
 14891 14be 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 14892 14c2 08       		.uleb128 0x8
 14893 14c3 9A140000 		.4byte	0x149a
 14894 14c7 27       		.uleb128 0x27
 14895 14c8 47080000 		.4byte	.LASF224
 14896 14cc 0D       		.byte	0xd
 14897 14cd F9       		.byte	0xf9
 14898 14ce EF000000 		.4byte	0xef
 14899 14d2 2A       		.uleb128 0x2a
 14900 14d3 540D0000 		.4byte	.LASF225
 14901 14d7 0E       		.byte	0xe
 14902 14d8 1207     		.2byte	0x712
 14903 14da DE140000 		.4byte	0x14de
 14904 14de 06       		.uleb128 0x6
 14905 14df D9000000 		.4byte	0xd9
 14906 14e3 2B       		.uleb128 0x2b
 14907 14e4 F20B0000 		.4byte	.LASF226
 14908 14e8 0F       		.byte	0xf
 14909 14e9 41       		.byte	0x41
 14910 14ea EF000000 		.4byte	0xef
 14911 14ee 05       		.uleb128 0x5
 14912 14ef 03       		.byte	0x3
 14913 14f0 00000000 		.4byte	Decoder_1_Enabled
 14914 14f4 27       		.uleb128 0x27
 14915 14f5 C8060000 		.4byte	.LASF227
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 322


 14916 14f9 09       		.byte	0x9
 14917 14fa 77       		.byte	0x77
 14918 14fb C4030000 		.4byte	0x3c4
 14919 14ff 09       		.uleb128 0x9
 14920 1500 24020000 		.4byte	0x224
 14921 1504 0F150000 		.4byte	0x150f
 14922 1508 0A       		.uleb128 0xa
 14923 1509 4C010000 		.4byte	0x14c
 14924 150d FF       		.byte	0xff
 14925 150e 00       		.byte	0
 14926 150f 29       		.uleb128 0x29
 14927 1510 5C010000 		.4byte	.LASF228
 14928 1514 01       		.byte	0x1
 14929 1515 9B01     		.2byte	0x19b
 14930 1517 21150000 		.4byte	0x1521
 14931 151b 05       		.uleb128 0x5
 14932 151c 03       		.byte	0x3
 14933 151d 00000000 		.4byte	I2Cbuff1
 14934 1521 06       		.uleb128 0x6
 14935 1522 FF140000 		.4byte	0x14ff
 14936 1526 09       		.uleb128 0x9
 14937 1527 B8000000 		.4byte	0xb8
 14938 152b 37150000 		.4byte	0x1537
 14939 152f 28       		.uleb128 0x28
 14940 1530 4C010000 		.4byte	0x14c
 14941 1534 FF07     		.2byte	0x7ff
 14942 1536 00       		.byte	0
 14943 1537 2B       		.uleb128 0x2b
 14944 1538 CC110000 		.4byte	.LASF229
 14945 153c 01       		.byte	0x1
 14946 153d 33       		.byte	0x33
 14947 153e 26150000 		.4byte	0x1526
 14948 1542 05       		.uleb128 0x5
 14949 1543 03       		.byte	0x3
 14950 1544 00000000 		.4byte	sysexBuffer
 14951 1548 2B       		.uleb128 0x2b
 14952 1549 61040000 		.4byte	.LASF230
 14953 154d 01       		.byte	0x1
 14954 154e 34       		.byte	0x34
 14955 154f E4000000 		.4byte	0xe4
 14956 1553 05       		.uleb128 0x5
 14957 1554 03       		.byte	0x3
 14958 1555 00000000 		.4byte	sysexPointer
 14959 1559 2B       		.uleb128 0x2b
 14960 155a 320E0000 		.4byte	.LASF231
 14961 155e 01       		.byte	0x1
 14962 155f 35       		.byte	0x35
 14963 1560 B8000000 		.4byte	0xb8
 14964 1564 05       		.uleb128 0x5
 14965 1565 03       		.byte	0x3
 14966 1566 00000000 		.4byte	receivingSysex
 14967 156a 2B       		.uleb128 0x2b
 14968 156b 60080000 		.4byte	.LASF232
 14969 156f 01       		.byte	0x1
 14970 1570 36       		.byte	0x36
 14971 1571 B8000000 		.4byte	0xb8
 14972 1575 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 323


 14973 1576 03       		.byte	0x3
 14974 1577 00000000 		.4byte	parsingSysex
 14975 157b 09       		.uleb128 0x9
 14976 157c 24020000 		.4byte	0x224
 14977 1580 8C150000 		.4byte	0x158c
 14978 1584 28       		.uleb128 0x28
 14979 1585 4C010000 		.4byte	0x14c
 14980 1589 FF07     		.2byte	0x7ff
 14981 158b 00       		.byte	0
 14982 158c 2B       		.uleb128 0x2b
 14983 158d 1A000000 		.4byte	.LASF233
 14984 1591 01       		.byte	0x1
 14985 1592 37       		.byte	0x37
 14986 1593 9D150000 		.4byte	0x159d
 14987 1597 05       		.uleb128 0x5
 14988 1598 03       		.byte	0x3
 14989 1599 00000000 		.4byte	presetArray
 14990 159d 06       		.uleb128 0x6
 14991 159e 7B150000 		.4byte	0x157b
 14992 15a2 2B       		.uleb128 0x2b
 14993 15a3 86030000 		.4byte	.LASF234
 14994 15a7 01       		.byte	0x1
 14995 15a8 38       		.byte	0x38
 14996 15a9 B8000000 		.4byte	0xb8
 14997 15ad 05       		.uleb128 0x5
 14998 15ae 03       		.byte	0x3
 14999 15af 00000000 		.4byte	presetNumberToWrite
 15000 15b3 2B       		.uleb128 0x2b
 15001 15b4 02110000 		.4byte	.LASF235
 15002 15b8 01       		.byte	0x1
 15003 15b9 39       		.byte	0x39
 15004 15ba B8000000 		.4byte	0xb8
 15005 15be 05       		.uleb128 0x5
 15006 15bf 03       		.byte	0x3
 15007 15c0 00000000 		.4byte	copedentNumberToWrite
 15008 15c4 2B       		.uleb128 0x2b
 15009 15c5 FC020000 		.4byte	.LASF236
 15010 15c9 01       		.byte	0x1
 15011 15ca 3A       		.byte	0x3a
 15012 15cb B8000000 		.4byte	0xb8
 15013 15cf 05       		.uleb128 0x5
 15014 15d0 03       		.byte	0x3
 15015 15d1 00000000 		.4byte	sendMessageEnd
 15016 15d5 2B       		.uleb128 0x2b
 15017 15d6 B6110000 		.4byte	.LASF237
 15018 15da 01       		.byte	0x1
 15019 15db 3C       		.byte	0x3c
 15020 15dc B8000000 		.4byte	0xb8
 15021 15e0 05       		.uleb128 0x5
 15022 15e1 03       		.byte	0x3
 15023 15e2 00000000 		.4byte	sendSingleParamUpdate
 15024 15e6 2B       		.uleb128 0x2b
 15025 15e7 B0120000 		.4byte	.LASF238
 15026 15eb 01       		.byte	0x1
 15027 15ec 3D       		.byte	0x3d
 15028 15ed B8000000 		.4byte	0xb8
 15029 15f1 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 324


 15030 15f2 03       		.byte	0x3
 15031 15f3 00000000 		.4byte	singleParamToUpdateHigh
 15032 15f7 2B       		.uleb128 0x2b
 15033 15f8 610D0000 		.4byte	.LASF239
 15034 15fc 01       		.byte	0x1
 15035 15fd 3E       		.byte	0x3e
 15036 15fe B8000000 		.4byte	0xb8
 15037 1602 05       		.uleb128 0x5
 15038 1603 03       		.byte	0x3
 15039 1604 00000000 		.4byte	singleParamToUpdateLow
 15040 1608 2B       		.uleb128 0x2b
 15041 1609 3F0D0000 		.4byte	.LASF240
 15042 160d 01       		.byte	0x1
 15043 160e 3F       		.byte	0x3f
 15044 160f B8000000 		.4byte	0xb8
 15045 1613 05       		.uleb128 0x5
 15046 1614 03       		.byte	0x3
 15047 1615 00000000 		.4byte	singleParamValueHigh
 15048 1619 2B       		.uleb128 0x2b
 15049 161a A8070000 		.4byte	.LASF241
 15050 161e 01       		.byte	0x1
 15051 161f 40       		.byte	0x40
 15052 1620 B8000000 		.4byte	0xb8
 15053 1624 05       		.uleb128 0x5
 15054 1625 03       		.byte	0x3
 15055 1626 00000000 		.4byte	singleParamValueLow
 15056 162a 2B       		.uleb128 0x2b
 15057 162b BF100000 		.4byte	.LASF242
 15058 162f 01       		.byte	0x1
 15059 1630 42       		.byte	0x42
 15060 1631 B8000000 		.4byte	0xb8
 15061 1635 05       		.uleb128 0x5
 15062 1636 03       		.byte	0x3
 15063 1637 00000000 		.4byte	sendMappingChangeUpdate
 15064 163b 2B       		.uleb128 0x2b
 15065 163c 5A110000 		.4byte	.LASF243
 15066 1640 01       		.byte	0x1
 15067 1641 45       		.byte	0x45
 15068 1642 AD000000 		.4byte	0xad
 15069 1646 05       		.uleb128 0x5
 15070 1647 03       		.byte	0x3
 15071 1648 00000000 		.4byte	transposeSemitones
 15072 164c 2B       		.uleb128 0x2b
 15073 164d EB070000 		.4byte	.LASF244
 15074 1651 01       		.byte	0x1
 15075 1652 46       		.byte	0x46
 15076 1653 AD000000 		.4byte	0xad
 15077 1657 05       		.uleb128 0x5
 15078 1658 03       		.byte	0x3
 15079 1659 00000000 		.4byte	transposeCents
 15080 165d 2B       		.uleb128 0x2b
 15081 165e 340D0000 		.4byte	.LASF245
 15082 1662 01       		.byte	0x1
 15083 1663 47       		.byte	0x47
 15084 1664 B8000000 		.4byte	0xb8
 15085 1668 05       		.uleb128 0x5
 15086 1669 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 325


 15087 166a 00000000 		.4byte	midiSendOn
 15088 166e 2B       		.uleb128 0x2b
 15089 166f 4D040000 		.4byte	.LASF246
 15090 1673 01       		.byte	0x1
 15091 1674 48       		.byte	0x48
 15092 1675 B8000000 		.4byte	0xb8
 15093 1679 05       		.uleb128 0x5
 15094 167a 03       		.byte	0x3
 15095 167b 00000000 		.4byte	midiBarSendOn
 15096 167f 2B       		.uleb128 0x2b
 15097 1680 79150000 		.4byte	.LASF247
 15098 1684 01       		.byte	0x1
 15099 1685 49       		.byte	0x49
 15100 1686 B8000000 		.4byte	0xb8
 15101 168a 05       		.uleb128 0x5
 15102 168b 03       		.byte	0x3
 15103 168c 00000000 		.4byte	pitchSmoothing
 15104 1690 2B       		.uleb128 0x2b
 15105 1691 85100000 		.4byte	.LASF248
 15106 1695 01       		.byte	0x1
 15107 1696 4A       		.byte	0x4a
 15108 1697 B8000000 		.4byte	0xb8
 15109 169b 05       		.uleb128 0x5
 15110 169c 03       		.byte	0x3
 15111 169d 00000000 		.4byte	controlSmoothing
 15112 16a1 2B       		.uleb128 0x2b
 15113 16a2 51000000 		.4byte	.LASF249
 15114 16a6 01       		.byte	0x1
 15115 16a7 4B       		.byte	0x4b
 15116 16a8 B8000000 		.4byte	0xb8
 15117 16ac 05       		.uleb128 0x5
 15118 16ad 03       		.byte	0x3
 15119 16ae 00000000 		.4byte	deadzones
 15120 16b2 2B       		.uleb128 0x2b
 15121 16b3 E5140000 		.4byte	.LASF250
 15122 16b7 01       		.byte	0x1
 15123 16b8 4C       		.byte	0x4c
 15124 16b9 B8000000 		.4byte	0xb8
 15125 16bd 05       		.uleb128 0x5
 15126 16be 03       		.byte	0x3
 15127 16bf 00000000 		.4byte	octaveAction
 15128 16c3 09       		.uleb128 0x9
 15129 16c4 B8000000 		.4byte	0xb8
 15130 16c8 D3160000 		.4byte	0x16d3
 15131 16cc 0A       		.uleb128 0xa
 15132 16cd 4C010000 		.4byte	0x14c
 15133 16d1 01       		.byte	0x1
 15134 16d2 00       		.byte	0
 15135 16d3 2B       		.uleb128 0x2b
 15136 16d4 A90C0000 		.4byte	.LASF251
 15137 16d8 01       		.byte	0x1
 15138 16d9 4D       		.byte	0x4d
 15139 16da C3160000 		.4byte	0x16c3
 15140 16de 05       		.uleb128 0x5
 15141 16df 03       		.byte	0x3
 15142 16e0 00000000 		.4byte	stringRepresentation
 15143 16e4 2B       		.uleb128 0x2b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 326


 15144 16e5 00000000 		.4byte	.LASF252
 15145 16e9 01       		.byte	0x1
 15146 16ea 58       		.byte	0x58
 15147 16eb B8000000 		.4byte	0xb8
 15148 16ef 05       		.uleb128 0x5
 15149 16f0 03       		.byte	0x3
 15150 16f1 00000000 		.4byte	presetArraySection
 15151 16f5 2B       		.uleb128 0x2b
 15152 16f6 570C0000 		.4byte	.LASF253
 15153 16fa 01       		.byte	0x1
 15154 16fb 5A       		.byte	0x5a
 15155 16fc CE000000 		.4byte	0xce
 15156 1700 05       		.uleb128 0x5
 15157 1701 03       		.byte	0x3
 15158 1702 00000000 		.4byte	messageArraySendCount
 15159 1706 2B       		.uleb128 0x2b
 15160 1707 D2120000 		.4byte	.LASF254
 15161 170b 01       		.byte	0x1
 15162 170c 5B       		.byte	0x5b
 15163 170d CE000000 		.4byte	0xce
 15164 1711 05       		.uleb128 0x5
 15165 1712 03       		.byte	0x3
 15166 1713 00000000 		.4byte	messageArraySize
 15167 1717 2B       		.uleb128 0x2b
 15168 1718 D5080000 		.4byte	.LASF255
 15169 171c 01       		.byte	0x1
 15170 171d 5D       		.byte	0x5d
 15171 171e B8000000 		.4byte	0xb8
 15172 1722 05       		.uleb128 0x5
 15173 1723 03       		.byte	0x3
 15174 1724 00000000 		.4byte	sysexMessageInProgress
 15175 1728 2B       		.uleb128 0x2b
 15176 1729 D8110000 		.4byte	.LASF256
 15177 172d 01       		.byte	0x1
 15178 172e 5F       		.byte	0x5f
 15179 172f B8000000 		.4byte	0xb8
 15180 1733 05       		.uleb128 0x5
 15181 1734 03       		.byte	0x3
 15182 1735 00000000 		.4byte	bufCount
 15183 1739 2B       		.uleb128 0x2b
 15184 173a 42000000 		.4byte	.LASF257
 15185 173e 01       		.byte	0x1
 15186 173f 60       		.byte	0x60
 15187 1740 24020000 		.4byte	0x224
 15188 1744 05       		.uleb128 0x5
 15189 1745 03       		.byte	0x3
 15190 1746 00000000 		.4byte	sendingMessage
 15191 174a 2B       		.uleb128 0x2b
 15192 174b 25040000 		.4byte	.LASF258
 15193 174f 01       		.byte	0x1
 15194 1750 61       		.byte	0x61
 15195 1751 24020000 		.4byte	0x224
 15196 1755 05       		.uleb128 0x5
 15197 1756 03       		.byte	0x3
 15198 1757 00000000 		.4byte	sendKnobs
 15199 175b 2B       		.uleb128 0x2b
 15200 175c 64030000 		.4byte	.LASF259
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 327


 15201 1760 01       		.byte	0x1
 15202 1761 62       		.byte	0x62
 15203 1762 E4000000 		.4byte	0xe4
 15204 1766 05       		.uleb128 0x5
 15205 1767 03       		.byte	0x3
 15206 1768 00000000 		.4byte	currentFloat
 15207 176c 2B       		.uleb128 0x2b
 15208 176d 37050000 		.4byte	.LASF260
 15209 1771 01       		.byte	0x1
 15210 1772 63       		.byte	0x63
 15211 1773 E4000000 		.4byte	0xe4
 15212 1777 05       		.uleb128 0x5
 15213 1778 03       		.byte	0x3
 15214 1779 00000000 		.4byte	mapCount
 15215 177d 2B       		.uleb128 0x2b
 15216 177e 2D020000 		.4byte	.LASF261
 15217 1782 01       		.byte	0x1
 15218 1783 65       		.byte	0x65
 15219 1784 CE000000 		.4byte	0xce
 15220 1788 05       		.uleb128 0x5
 15221 1789 03       		.byte	0x3
 15222 178a 00000000 		.4byte	valsCount
 15223 178e 2B       		.uleb128 0x2b
 15224 178f D8050000 		.4byte	.LASF262
 15225 1793 01       		.byte	0x1
 15226 1794 66       		.byte	0x66
 15227 1795 CE000000 		.4byte	0xce
 15228 1799 05       		.uleb128 0x5
 15229 179a 03       		.byte	0x3
 15230 179b 00000000 		.4byte	mapCountExpectation
 15231 179f 2B       		.uleb128 0x2b
 15232 17a0 50010000 		.4byte	.LASF263
 15233 17a4 01       		.byte	0x1
 15234 17a5 67       		.byte	0x67
 15235 17a6 CE000000 		.4byte	0xce
 15236 17aa 05       		.uleb128 0x5
 15237 17ab 03       		.byte	0x3
 15238 17ac 00000000 		.4byte	numMappings
 15239 17b0 2B       		.uleb128 0x2b
 15240 17b1 6D110000 		.4byte	.LASF264
 15241 17b5 01       		.byte	0x1
 15242 17b6 68       		.byte	0x68
 15243 17b7 24020000 		.4byte	0x224
 15244 17bb 05       		.uleb128 0x5
 15245 17bc 03       		.byte	0x3
 15246 17bd 00000000 		.4byte	parseThatMF
 15247 17c1 2B       		.uleb128 0x2b
 15248 17c2 75050000 		.4byte	.LASF265
 15249 17c6 01       		.byte	0x1
 15250 17c7 69       		.byte	0x69
 15251 17c8 D2170000 		.4byte	0x17d2
 15252 17cc 05       		.uleb128 0x5
 15253 17cd 03       		.byte	0x3
 15254 17ce 00000000 		.4byte	valCheck
 15255 17d2 06       		.uleb128 0x6
 15256 17d3 13010000 		.4byte	0x113
 15257 17d7 2B       		.uleb128 0x2b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 328


 15258 17d8 57100000 		.4byte	.LASF266
 15259 17dc 01       		.byte	0x1
 15260 17dd 6A       		.byte	0x6a
 15261 17de D2170000 		.4byte	0x17d2
 15262 17e2 05       		.uleb128 0x5
 15263 17e3 03       		.byte	0x3
 15264 17e4 00000000 		.4byte	testVal
 15265 17e8 2B       		.uleb128 0x2b
 15266 17e9 34160000 		.4byte	.LASF267
 15267 17ed 01       		.byte	0x1
 15268 17ee 6B       		.byte	0x6b
 15269 17ef 13010000 		.4byte	0x113
 15270 17f3 05       		.uleb128 0x5
 15271 17f4 03       		.byte	0x3
 15272 17f5 00000000 		.4byte	transposeFloat
 15273 17f9 2B       		.uleb128 0x2b
 15274 17fa C50A0000 		.4byte	.LASF268
 15275 17fe 01       		.byte	0x1
 15276 17ff 6E       		.byte	0x6e
 15277 1800 9F000000 		.4byte	0x9f
 15278 1804 05       		.uleb128 0x5
 15279 1805 03       		.byte	0x3
 15280 1806 00000000 		.4byte	numStrings
 15281 180a 2B       		.uleb128 0x2b
 15282 180b 3E110000 		.4byte	.LASF269
 15283 180f 01       		.byte	0x1
 15284 1810 74       		.byte	0x74
 15285 1811 40010000 		.4byte	0x140
 15286 1815 05       		.uleb128 0x5
 15287 1816 03       		.byte	0x3
 15288 1817 00000000 		.4byte	usbActivityCounter
 15289 181b 2B       		.uleb128 0x2b
 15290 181c FA0F0000 		.4byte	.LASF193
 15291 1820 01       		.byte	0x1
 15292 1821 75       		.byte	0x75
 15293 1822 5E010000 		.4byte	0x15e
 15294 1826 05       		.uleb128 0x5
 15295 1827 03       		.byte	0x3
 15296 1828 00000000 		.4byte	midiMsg
 15297 182c 2B       		.uleb128 0x2b
 15298 182d 28150000 		.4byte	.LASF270
 15299 1831 01       		.byte	0x1
 15300 1832 76       		.byte	0x76
 15301 1833 B8000000 		.4byte	0xb8
 15302 1837 05       		.uleb128 0x5
 15303 1838 03       		.byte	0x3
 15304 1839 00000000 		.4byte	currentVBUS
 15305 183d 2B       		.uleb128 0x2b
 15306 183e 0C150000 		.4byte	.LASF271
 15307 1842 01       		.byte	0x1
 15308 1843 77       		.byte	0x77
 15309 1844 B8000000 		.4byte	0xb8
 15310 1848 05       		.uleb128 0x5
 15311 1849 03       		.byte	0x3
 15312 184a 00000000 		.4byte	prevVBUS
 15313 184e 2B       		.uleb128 0x2b
 15314 184f 97110000 		.4byte	.LASF272
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 329


 15315 1853 01       		.byte	0x1
 15316 1854 78       		.byte	0x78
 15317 1855 24020000 		.4byte	0x224
 15318 1859 05       		.uleb128 0x5
 15319 185a 03       		.byte	0x3
 15320 185b 00000000 		.4byte	USB_active
 15321 185f 2B       		.uleb128 0x2b
 15322 1860 480C0000 		.4byte	.LASF273
 15323 1864 01       		.byte	0x1
 15324 1865 79       		.byte	0x79
 15325 1866 24020000 		.4byte	0x224
 15326 186a 05       		.uleb128 0x5
 15327 186b 03       		.byte	0x3
 15328 186c 00000000 		.4byte	USB_check_flag
 15329 1870 09       		.uleb128 0x9
 15330 1871 B8000000 		.4byte	0xb8
 15331 1875 80180000 		.4byte	0x1880
 15332 1879 0A       		.uleb128 0xa
 15333 187a 4C010000 		.4byte	0x14c
 15334 187e 05       		.byte	0x5
 15335 187f 00       		.byte	0
 15336 1880 2B       		.uleb128 0x2b
 15337 1881 62140000 		.4byte	.LASF274
 15338 1885 01       		.byte	0x1
 15339 1886 7B       		.byte	0x7b
 15340 1887 70180000 		.4byte	0x1870
 15341 188b 05       		.uleb128 0x5
 15342 188c 03       		.byte	0x3
 15343 188d 00000000 		.4byte	mappingArray
 15344 1891 09       		.uleb128 0x9
 15345 1892 EF000000 		.4byte	0xef
 15346 1896 A1180000 		.4byte	0x18a1
 15347 189a 0A       		.uleb128 0xa
 15348 189b 4C010000 		.4byte	0x14c
 15349 189f 1F       		.byte	0x1f
 15350 18a0 00       		.byte	0
 15351 18a1 2B       		.uleb128 0x2b
 15352 18a2 E2130000 		.4byte	.LASF275
 15353 18a6 01       		.byte	0x1
 15354 18a7 7D       		.byte	0x7d
 15355 18a8 91180000 		.4byte	0x1891
 15356 18ac 05       		.uleb128 0x5
 15357 18ad 03       		.byte	0x3
 15358 18ae 00000000 		.4byte	inBuffer
 15359 18b2 2B       		.uleb128 0x2b
 15360 18b3 7F160000 		.4byte	.LASF276
 15361 18b7 01       		.byte	0x1
 15362 18b8 7F       		.byte	0x7f
 15363 18b9 91180000 		.4byte	0x1891
 15364 18bd 05       		.uleb128 0x5
 15365 18be 03       		.byte	0x3
 15366 18bf 00000000 		.4byte	myArray
 15367 18c3 2B       		.uleb128 0x2b
 15368 18c4 C5150000 		.4byte	.LASF277
 15369 18c8 01       		.byte	0x1
 15370 18c9 80       		.byte	0x80
 15371 18ca 26140000 		.4byte	0x1426
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 330


 15372 18ce 05       		.uleb128 0x5
 15373 18cf 03       		.byte	0x3
 15374 18d0 00000000 		.4byte	myInputArray
 15375 18d4 09       		.uleb128 0x9
 15376 18d5 D9000000 		.4byte	0xd9
 15377 18d9 E4180000 		.4byte	0x18e4
 15378 18dd 0A       		.uleb128 0xa
 15379 18de 4C010000 		.4byte	0x14c
 15380 18e2 01       		.byte	0x1
 15381 18e3 00       		.byte	0
 15382 18e4 2B       		.uleb128 0x2b
 15383 18e5 560A0000 		.4byte	.LASF278
 15384 18e9 01       		.byte	0x1
 15385 18ea 81       		.byte	0x81
 15386 18eb D4180000 		.4byte	0x18d4
 15387 18ef 05       		.uleb128 0x5
 15388 18f0 03       		.byte	0x3
 15389 18f1 00000000 		.4byte	linearPotValue32Bit
 15390 18f5 2C       		.uleb128 0x2c
 15391 18f6 6900     		.ascii	"i\000"
 15392 18f8 01       		.byte	0x1
 15393 18f9 82       		.byte	0x82
 15394 18fa B8000000 		.4byte	0xb8
 15395 18fe 05       		.uleb128 0x5
 15396 18ff 03       		.byte	0x3
 15397 1900 00000000 		.4byte	i
 15398 1904 2B       		.uleb128 0x2b
 15399 1905 860C0000 		.4byte	.LASF279
 15400 1909 01       		.byte	0x1
 15401 190a 83       		.byte	0x83
 15402 190b B8000000 		.4byte	0xb8
 15403 190f 05       		.uleb128 0x5
 15404 1910 03       		.byte	0x3
 15405 1911 00000000 		.4byte	counter
 15406 1915 09       		.uleb128 0x9
 15407 1916 B8000000 		.4byte	0xb8
 15408 191a 25190000 		.4byte	0x1925
 15409 191e 0A       		.uleb128 0xa
 15410 191f 4C010000 		.4byte	0x14c
 15411 1923 1F       		.byte	0x1f
 15412 1924 00       		.byte	0
 15413 1925 2B       		.uleb128 0x2b
 15414 1926 6D080000 		.4byte	.LASF280
 15415 192a 01       		.byte	0x1
 15416 192b 84       		.byte	0x84
 15417 192c 15190000 		.4byte	0x1915
 15418 1930 05       		.uleb128 0x5
 15419 1931 03       		.byte	0x3
 15420 1932 00000000 		.4byte	returnedData
 15421 1936 2B       		.uleb128 0x2b
 15422 1937 37020000 		.4byte	.LASF281
 15423 193b 01       		.byte	0x1
 15424 193c 85       		.byte	0x85
 15425 193d D9000000 		.4byte	0xd9
 15426 1941 05       		.uleb128 0x5
 15427 1942 03       		.byte	0x3
 15428 1943 00000000 		.4byte	temper
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 331


 15429 1947 09       		.uleb128 0x9
 15430 1948 9F000000 		.4byte	0x9f
 15431 194c 57190000 		.4byte	0x1957
 15432 1950 0A       		.uleb128 0xa
 15433 1951 4C010000 		.4byte	0x14c
 15434 1955 0A       		.byte	0xa
 15435 1956 00       		.byte	0
 15436 1957 2B       		.uleb128 0x2b
 15437 1958 93130000 		.4byte	.LASF282
 15438 195c 01       		.byte	0x1
 15439 195d 86       		.byte	0x86
 15440 195e 47190000 		.4byte	0x1947
 15441 1962 05       		.uleb128 0x5
 15442 1963 03       		.byte	0x3
 15443 1964 00000000 		.4byte	previousButtons
 15444 1968 2B       		.uleb128 0x2b
 15445 1969 BF010000 		.4byte	.LASF283
 15446 196d 01       		.byte	0x1
 15447 196e 87       		.byte	0x87
 15448 196f 9F000000 		.4byte	0x9f
 15449 1973 05       		.uleb128 0x5
 15450 1974 03       		.byte	0x3
 15451 1975 00000000 		.4byte	octave
 15452 1979 09       		.uleb128 0x9
 15453 197a CE000000 		.4byte	0xce
 15454 197e 89190000 		.4byte	0x1989
 15455 1982 0A       		.uleb128 0xa
 15456 1983 4C010000 		.4byte	0x14c
 15457 1987 09       		.byte	0x9
 15458 1988 00       		.byte	0
 15459 1989 2B       		.uleb128 0x2b
 15460 198a BF0A0000 		.4byte	.LASF284
 15461 198e 01       		.byte	0x1
 15462 198f 88       		.byte	0x88
 15463 1990 79190000 		.4byte	0x1979
 15464 1994 05       		.uleb128 0x5
 15465 1995 03       		.byte	0x3
 15466 1996 00000000 		.4byte	angle
 15467 199a 2B       		.uleb128 0x2b
 15468 199b 5F0F0000 		.4byte	.LASF285
 15469 199f 01       		.byte	0x1
 15470 19a0 89       		.byte	0x89
 15471 19a1 79190000 		.4byte	0x1979
 15472 19a5 05       		.uleb128 0x5
 15473 19a6 03       		.byte	0x3
 15474 19a7 00000000 		.4byte	prevAngle
 15475 19ab 09       		.uleb128 0x9
 15476 19ac CE000000 		.4byte	0xce
 15477 19b0 BB190000 		.4byte	0x19bb
 15478 19b4 0A       		.uleb128 0xa
 15479 19b5 4C010000 		.4byte	0x14c
 15480 19b9 03       		.byte	0x3
 15481 19ba 00       		.byte	0
 15482 19bb 2B       		.uleb128 0x2b
 15483 19bc B70F0000 		.4byte	.LASF286
 15484 19c0 01       		.byte	0x1
 15485 19c1 8B       		.byte	0x8b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 332


 15486 19c2 AB190000 		.4byte	0x19ab
 15487 19c6 05       		.uleb128 0x5
 15488 19c7 03       		.byte	0x3
 15489 19c8 00000000 		.4byte	ADC_values
 15490 19cc 2B       		.uleb128 0x2b
 15491 19cd 85060000 		.4byte	.LASF287
 15492 19d1 01       		.byte	0x1
 15493 19d2 8C       		.byte	0x8c
 15494 19d3 CE000000 		.4byte	0xce
 15495 19d7 05       		.uleb128 0x5
 15496 19d8 03       		.byte	0x3
 15497 19d9 00000000 		.4byte	rawAngle
 15498 19dd 2B       		.uleb128 0x2b
 15499 19de F10F0000 		.4byte	.LASF288
 15500 19e2 01       		.byte	0x1
 15501 19e3 8D       		.byte	0x8d
 15502 19e4 CE000000 		.4byte	0xce
 15503 19e8 05       		.uleb128 0x5
 15504 19e9 03       		.byte	0x3
 15505 19ea 00000000 		.4byte	midiSent
 15506 19ee 2B       		.uleb128 0x2b
 15507 19ef 45070000 		.4byte	.LASF289
 15508 19f3 01       		.byte	0x1
 15509 19f4 8E       		.byte	0x8e
 15510 19f5 CE000000 		.4byte	0xce
 15511 19f9 05       		.uleb128 0x5
 15512 19fa 03       		.byte	0x3
 15513 19fb 00000000 		.4byte	midiOverflow
 15514 19ff 09       		.uleb128 0x9
 15515 1a00 B8000000 		.4byte	0xb8
 15516 1a04 0F1A0000 		.4byte	0x1a0f
 15517 1a08 0A       		.uleb128 0xa
 15518 1a09 4C010000 		.4byte	0x14c
 15519 1a0d 07       		.byte	0x7
 15520 1a0e 00       		.byte	0
 15521 1a0f 2B       		.uleb128 0x2b
 15522 1a10 0F140000 		.4byte	.LASF290
 15523 1a14 01       		.byte	0x1
 15524 1a15 90       		.byte	0x90
 15525 1a16 FF190000 		.4byte	0x19ff
 15526 1a1a 05       		.uleb128 0x5
 15527 1a1b 03       		.byte	0x3
 15528 1a1c 00000000 		.4byte	macroKnobValues
 15529 1a20 2B       		.uleb128 0x2b
 15530 1a21 75060000 		.4byte	.LASF291
 15531 1a25 01       		.byte	0x1
 15532 1a26 92       		.byte	0x92
 15533 1a27 B8000000 		.4byte	0xb8
 15534 1a2b 05       		.uleb128 0x5
 15535 1a2c 03       		.byte	0x3
 15536 1a2d 00000000 		.4byte	currentCopedent
 15537 1a31 2B       		.uleb128 0x2b
 15538 1a32 B9010000 		.4byte	.LASF292
 15539 1a36 01       		.byte	0x1
 15540 1a37 93       		.byte	0x93
 15541 1a38 C3160000 		.4byte	0x16c3
 15542 1a3c 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 333


 15543 1a3d 03       		.byte	0x3
 15544 1a3e 00000000 		.4byte	necks
 15545 1a42 2B       		.uleb128 0x2b
 15546 1a43 8E050000 		.4byte	.LASF293
 15547 1a47 01       		.byte	0x1
 15548 1a48 BE       		.byte	0xbe
 15549 1a49 EF000000 		.4byte	0xef
 15550 1a4d 05       		.uleb128 0x5
 15551 1a4e 03       		.byte	0x3
 15552 1a4f 00000000 		.4byte	rx1Channel
 15553 1a53 2B       		.uleb128 0x2b
 15554 1a54 89140000 		.4byte	.LASF294
 15555 1a58 01       		.byte	0x1
 15556 1a59 BE       		.byte	0xbe
 15557 1a5a EF000000 		.4byte	0xef
 15558 1a5e 05       		.uleb128 0x5
 15559 1a5f 03       		.byte	0x3
 15560 1a60 00000000 		.4byte	rx2Channel
 15561 1a64 2B       		.uleb128 0x2b
 15562 1a65 BE0C0000 		.4byte	.LASF295
 15563 1a69 01       		.byte	0x1
 15564 1a6a BF       		.byte	0xbf
 15565 1a6b 26140000 		.4byte	0x1426
 15566 1a6f 05       		.uleb128 0x5
 15567 1a70 03       		.byte	0x3
 15568 1a71 00000000 		.4byte	rx1TD
 15569 1a75 2B       		.uleb128 0x2b
 15570 1a76 64100000 		.4byte	.LASF296
 15571 1a7a 01       		.byte	0x1
 15572 1a7b BF       		.byte	0xbf
 15573 1a7c 26140000 		.4byte	0x1426
 15574 1a80 05       		.uleb128 0x5
 15575 1a81 03       		.byte	0x3
 15576 1a82 00000000 		.4byte	rx2TD
 15577 1a86 2B       		.uleb128 0x2b
 15578 1a87 2E0F0000 		.4byte	.LASF297
 15579 1a8b 01       		.byte	0x1
 15580 1a8c C1       		.byte	0xc1
 15581 1a8d 40010000 		.4byte	0x140
 15582 1a91 05       		.uleb128 0x5
 15583 1a92 03       		.byte	0x3
 15584 1a93 00000000 		.4byte	txChannel
 15585 1a97 2B       		.uleb128 0x2b
 15586 1a98 9B150000 		.4byte	.LASF298
 15587 1a9c 01       		.byte	0x1
 15588 1a9d C2       		.byte	0xc2
 15589 1a9e 40010000 		.4byte	0x140
 15590 1aa2 05       		.uleb128 0x5
 15591 1aa3 03       		.byte	0x3
 15592 1aa4 00000000 		.4byte	txTD
 15593 1aa8 2B       		.uleb128 0x2b
 15594 1aa9 FB0C0000 		.4byte	.LASF299
 15595 1aad 01       		.byte	0x1
 15596 1aae C4       		.byte	0xc4
 15597 1aaf 40010000 		.4byte	0x140
 15598 1ab3 05       		.uleb128 0x5
 15599 1ab4 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 334


 15600 1ab5 00000000 		.4byte	rx3Channel
 15601 1ab9 2B       		.uleb128 0x2b
 15602 1aba 15150000 		.4byte	.LASF300
 15603 1abe 01       		.byte	0x1
 15604 1abf C5       		.byte	0xc5
 15605 1ac0 40010000 		.4byte	0x140
 15606 1ac4 05       		.uleb128 0x5
 15607 1ac5 03       		.byte	0x3
 15608 1ac6 00000000 		.4byte	rx3TD
 15609 1aca 09       		.uleb128 0x9
 15610 1acb 40010000 		.4byte	0x140
 15611 1acf E01A0000 		.4byte	0x1ae0
 15612 1ad3 0A       		.uleb128 0xa
 15613 1ad4 4C010000 		.4byte	0x14c
 15614 1ad8 01       		.byte	0x1
 15615 1ad9 0A       		.uleb128 0xa
 15616 1ada 4C010000 		.4byte	0x14c
 15617 1ade 19       		.byte	0x19
 15618 1adf 00       		.byte	0
 15619 1ae0 2B       		.uleb128 0x2b
 15620 1ae1 9C080000 		.4byte	.LASF301
 15621 1ae5 01       		.byte	0x1
 15622 1ae6 C8       		.byte	0xc8
 15623 1ae7 F11A0000 		.4byte	0x1af1
 15624 1aeb 05       		.uleb128 0x5
 15625 1aec 03       		.byte	0x3
 15626 1aed 00000000 		.4byte	rxBufferPluck
 15627 1af1 06       		.uleb128 0x6
 15628 1af2 CA1A0000 		.4byte	0x1aca
 15629 1af6 09       		.uleb128 0x9
 15630 1af7 40010000 		.4byte	0x140
 15631 1afb 0C1B0000 		.4byte	0x1b0c
 15632 1aff 0A       		.uleb128 0xa
 15633 1b00 4C010000 		.4byte	0x14c
 15634 1b04 01       		.byte	0x1
 15635 1b05 0A       		.uleb128 0xa
 15636 1b06 4C010000 		.4byte	0x14c
 15637 1b0a 07       		.byte	0x7
 15638 1b0b 00       		.byte	0
 15639 1b0c 2B       		.uleb128 0x2b
 15640 1b0d 160F0000 		.4byte	.LASF302
 15641 1b11 01       		.byte	0x1
 15642 1b12 C9       		.byte	0xc9
 15643 1b13 1D1B0000 		.4byte	0x1b1d
 15644 1b17 05       		.uleb128 0x5
 15645 1b18 03       		.byte	0x3
 15646 1b19 00000000 		.4byte	rxBufferBar
 15647 1b1d 06       		.uleb128 0x6
 15648 1b1e F61A0000 		.4byte	0x1af6
 15649 1b22 09       		.uleb128 0x9
 15650 1b23 29020000 		.4byte	0x229
 15651 1b27 321B0000 		.4byte	0x1b32
 15652 1b2b 0A       		.uleb128 0xa
 15653 1b2c 4C010000 		.4byte	0x14c
 15654 1b30 0B       		.byte	0xb
 15655 1b31 00       		.byte	0
 15656 1b32 2B       		.uleb128 0x2b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 335


 15657 1b33 42030000 		.4byte	.LASF303
 15658 1b37 01       		.byte	0x1
 15659 1b38 CB       		.byte	0xcb
 15660 1b39 431B0000 		.4byte	0x1b43
 15661 1b3d 05       		.uleb128 0x5
 15662 1b3e 03       		.byte	0x3
 15663 1b3f 00000000 		.4byte	strings
 15664 1b43 06       		.uleb128 0x6
 15665 1b44 221B0000 		.4byte	0x1b22
 15666 1b48 2B       		.uleb128 0x2b
 15667 1b49 58060000 		.4byte	.LASF304
 15668 1b4d 01       		.byte	0x1
 15669 1b4e CC       		.byte	0xcc
 15670 1b4f 591B0000 		.4byte	0x1b59
 15671 1b53 05       		.uleb128 0x5
 15672 1b54 03       		.byte	0x3
 15673 1b55 00000000 		.4byte	prevStrings
 15674 1b59 06       		.uleb128 0x6
 15675 1b5a 221B0000 		.4byte	0x1b22
 15676 1b5e 09       		.uleb128 0x9
 15677 1b5f 29020000 		.4byte	0x229
 15678 1b63 6E1B0000 		.4byte	0x1b6e
 15679 1b67 0A       		.uleb128 0xa
 15680 1b68 4C010000 		.4byte	0x14c
 15681 1b6c 01       		.byte	0x1
 15682 1b6d 00       		.byte	0
 15683 1b6e 2C       		.uleb128 0x2c
 15684 1b6f 62617200 		.ascii	"bar\000"
 15685 1b73 01       		.byte	0x1
 15686 1b74 CD       		.byte	0xcd
 15687 1b75 7F1B0000 		.4byte	0x1b7f
 15688 1b79 05       		.uleb128 0x5
 15689 1b7a 03       		.byte	0x3
 15690 1b7b 00000000 		.4byte	bar
 15691 1b7f 06       		.uleb128 0x6
 15692 1b80 5E1B0000 		.4byte	0x1b5e
 15693 1b84 2B       		.uleb128 0x2b
 15694 1b85 AA150000 		.4byte	.LASF305
 15695 1b89 01       		.byte	0x1
 15696 1b8a CE       		.byte	0xce
 15697 1b8b 951B0000 		.4byte	0x1b95
 15698 1b8f 05       		.uleb128 0x5
 15699 1b90 03       		.byte	0x3
 15700 1b91 00000000 		.4byte	prevBar
 15701 1b95 06       		.uleb128 0x6
 15702 1b96 5E1B0000 		.4byte	0x1b5e
 15703 1b9a 2B       		.uleb128 0x2b
 15704 1b9b EB130000 		.4byte	.LASF306
 15705 1b9f 01       		.byte	0x1
 15706 1ba0 CF       		.byte	0xcf
 15707 1ba1 AB1B0000 		.4byte	0x1bab
 15708 1ba5 05       		.uleb128 0x5
 15709 1ba6 03       		.byte	0x3
 15710 1ba7 00000000 		.4byte	maxStrings
 15711 1bab 06       		.uleb128 0x6
 15712 1bac 221B0000 		.4byte	0x1b22
 15713 1bb0 2B       		.uleb128 0x2b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 336


 15714 1bb1 E5100000 		.4byte	.LASF307
 15715 1bb5 01       		.byte	0x1
 15716 1bb6 D0       		.byte	0xd0
 15717 1bb7 24020000 		.4byte	0x224
 15718 1bbb 05       		.uleb128 0x5
 15719 1bbc 03       		.byte	0x3
 15720 1bbd 00000000 		.4byte	amHere
 15721 1bc1 2B       		.uleb128 0x2b
 15722 1bc2 E0070000 		.4byte	.LASF308
 15723 1bc6 01       		.byte	0x1
 15724 1bc7 D1       		.byte	0xd1
 15725 1bc8 24020000 		.4byte	0x224
 15726 1bcc 05       		.uleb128 0x5
 15727 1bcd 03       		.byte	0x3
 15728 1bce 00000000 		.4byte	spiCounter
 15729 1bd2 2B       		.uleb128 0x2b
 15730 1bd3 A7050000 		.4byte	.LASF309
 15731 1bd7 01       		.byte	0x1
 15732 1bd8 D2       		.byte	0xd2
 15733 1bd9 24020000 		.4byte	0x224
 15734 1bdd 05       		.uleb128 0x5
 15735 1bde 03       		.byte	0x3
 15736 1bdf 00000000 		.4byte	newDataFlag
 15737 1be3 2B       		.uleb128 0x2b
 15738 1be4 6A100000 		.4byte	.LASF310
 15739 1be8 01       		.byte	0x1
 15740 1be9 D3       		.byte	0xd3
 15741 1bea 9F000000 		.4byte	0x9f
 15742 1bee 05       		.uleb128 0x5
 15743 1bef 03       		.byte	0x3
 15744 1bf0 00000000 		.4byte	prevOctave
 15745 1bf4 2B       		.uleb128 0x2b
 15746 1bf5 690F0000 		.4byte	.LASF311
 15747 1bf9 01       		.byte	0x1
 15748 1bfa D4       		.byte	0xd4
 15749 1bfb B8000000 		.4byte	0xb8
 15750 1bff 05       		.uleb128 0x5
 15751 1c00 03       		.byte	0x3
 15752 1c01 00000000 		.4byte	pluck_index
 15753 1c05 2B       		.uleb128 0x2b
 15754 1c06 AB0D0000 		.4byte	.LASF312
 15755 1c0a 01       		.byte	0x1
 15756 1c0b D5       		.byte	0xd5
 15757 1c0c 24020000 		.4byte	0x224
 15758 1c10 05       		.uleb128 0x5
 15759 1c11 03       		.byte	0x3
 15760 1c12 00000000 		.4byte	amHere2
 15761 1c16 2B       		.uleb128 0x2b
 15762 1c17 25110000 		.4byte	.LASF313
 15763 1c1b 01       		.byte	0x1
 15764 1c1c D6       		.byte	0xd6
 15765 1c1d 24020000 		.4byte	0x224
 15766 1c21 05       		.uleb128 0x5
 15767 1c22 03       		.byte	0x3
 15768 1c23 00000000 		.4byte	spiCounter2
 15769 1c27 2B       		.uleb128 0x2b
 15770 1c28 80000000 		.4byte	.LASF314
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 337


 15771 1c2c 01       		.byte	0x1
 15772 1c2d D7       		.byte	0xd7
 15773 1c2e 24020000 		.4byte	0x224
 15774 1c32 05       		.uleb128 0x5
 15775 1c33 03       		.byte	0x3
 15776 1c34 00000000 		.4byte	newDataFlag2
 15777 1c38 2B       		.uleb128 0x2b
 15778 1c39 D10D0000 		.4byte	.LASF315
 15779 1c3d 01       		.byte	0x1
 15780 1c3e D8       		.byte	0xd8
 15781 1c3f 24020000 		.4byte	0x224
 15782 1c43 05       		.uleb128 0x5
 15783 1c44 03       		.byte	0x3
 15784 1c45 00000000 		.4byte	currentPluckBuffer
 15785 1c49 2B       		.uleb128 0x2b
 15786 1c4a A60F0000 		.4byte	.LASF316
 15787 1c4e 01       		.byte	0x1
 15788 1c4f D9       		.byte	0xd9
 15789 1c50 24020000 		.4byte	0x224
 15790 1c54 05       		.uleb128 0x5
 15791 1c55 03       		.byte	0x3
 15792 1c56 00000000 		.4byte	currentBarBuffer
 15793 1c5a 2B       		.uleb128 0x2b
 15794 1c5b E1110000 		.4byte	.LASF317
 15795 1c5f 01       		.byte	0x1
 15796 1c60 DA       		.byte	0xda
 15797 1c61 24020000 		.4byte	0x224
 15798 1c65 05       		.uleb128 0x5
 15799 1c66 03       		.byte	0x3
 15800 1c67 00000000 		.4byte	pluckErrorCount
 15801 1c6b 2B       		.uleb128 0x2b
 15802 1c6c E20F0000 		.4byte	.LASF318
 15803 1c70 01       		.byte	0x1
 15804 1c71 DB       		.byte	0xdb
 15805 1c72 29020000 		.4byte	0x229
 15806 1c76 05       		.uleb128 0x5
 15807 1c77 03       		.byte	0x3
 15808 1c78 00000000 		.4byte	SPI1ErrorCount
 15809 1c7c 2B       		.uleb128 0x2b
 15810 1c7d A1090000 		.4byte	.LASF319
 15811 1c81 01       		.byte	0x1
 15812 1c82 DF       		.byte	0xdf
 15813 1c83 24020000 		.4byte	0x224
 15814 1c87 05       		.uleb128 0x5
 15815 1c88 03       		.byte	0x3
 15816 1c89 00000000 		.4byte	inputData
 15817 1c8d 29       		.uleb128 0x29
 15818 1c8e 69050000 		.4byte	.LASF320
 15819 1c92 01       		.byte	0x1
 15820 1c93 0201     		.2byte	0x102
 15821 1c95 B8000000 		.4byte	0xb8
 15822 1c99 05       		.uleb128 0x5
 15823 1c9a 03       		.byte	0x3
 15824 1c9b 00000000 		.4byte	spiAdjusted
 15825 1c9f 29       		.uleb128 0x29
 15826 1ca0 C8080000 		.4byte	.LASF321
 15827 1ca4 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 338


 15828 1ca5 0301     		.2byte	0x103
 15829 1ca7 B8000000 		.4byte	0xb8
 15830 1cab 05       		.uleb128 0x5
 15831 1cac 03       		.byte	0x3
 15832 1cad 00000000 		.4byte	mySpiCounter
 15833 1cb1 29       		.uleb128 0x29
 15834 1cb2 CA0E0000 		.4byte	.LASF322
 15835 1cb6 01       		.byte	0x1
 15836 1cb7 0401     		.2byte	0x104
 15837 1cb9 29020000 		.4byte	0x229
 15838 1cbd 05       		.uleb128 0x5
 15839 1cbe 03       		.byte	0x3
 15840 1cbf 00000000 		.4byte	offsetErrorCount
 15841 1cc3 29       		.uleb128 0x29
 15842 1cc4 FE000000 		.4byte	.LASF323
 15843 1cc8 01       		.byte	0x1
 15844 1cc9 0501     		.2byte	0x105
 15845 1ccb 24020000 		.4byte	0x224
 15846 1ccf 05       		.uleb128 0x5
 15847 1cd0 03       		.byte	0x3
 15848 1cd1 00000000 		.4byte	SPI2errorflag
 15849 1cd5 29       		.uleb128 0x29
 15850 1cd6 9D0E0000 		.4byte	.LASF324
 15851 1cda 01       		.byte	0x1
 15852 1cdb 0601     		.2byte	0x106
 15853 1cdd E71C0000 		.4byte	0x1ce7
 15854 1ce1 05       		.uleb128 0x5
 15855 1ce2 03       		.byte	0x3
 15856 1ce3 00000000 		.4byte	bar_index
 15857 1ce7 06       		.uleb128 0x6
 15858 1ce8 9F000000 		.4byte	0x9f
 15859 1cec 29       		.uleb128 0x29
 15860 1ced 5B040000 		.4byte	.LASF325
 15861 1cf1 01       		.byte	0x1
 15862 1cf2 0701     		.2byte	0x107
 15863 1cf4 B0040000 		.4byte	0x4b0
 15864 1cf8 05       		.uleb128 0x5
 15865 1cf9 03       		.byte	0x3
 15866 1cfa 00000000 		.4byte	knobs
 15867 1cfe 29       		.uleb128 0x29
 15868 1cff BE080000 		.4byte	.LASF326
 15869 1d03 01       		.byte	0x1
 15870 1d04 0801     		.2byte	0x108
 15871 1d06 B0040000 		.4byte	0x4b0
 15872 1d0a 05       		.uleb128 0x5
 15873 1d0b 03       		.byte	0x3
 15874 1d0c 00000000 		.4byte	prevKnobs
 15875 1d10 29       		.uleb128 0x29
 15876 1d11 A70E0000 		.4byte	.LASF327
 15877 1d15 01       		.byte	0x1
 15878 1d16 0A01     		.2byte	0x10a
 15879 1d18 B0040000 		.4byte	0x4b0
 15880 1d1c 05       		.uleb128 0x5
 15881 1d1d 03       		.byte	0x3
 15882 1d1e 00000000 		.4byte	knobs7bit
 15883 1d22 29       		.uleb128 0x29
 15884 1d23 540E0000 		.4byte	.LASF328
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 339


 15885 1d27 01       		.byte	0x1
 15886 1d28 0B01     		.2byte	0x10b
 15887 1d2a B0040000 		.4byte	0x4b0
 15888 1d2e 05       		.uleb128 0x5
 15889 1d2f 03       		.byte	0x3
 15890 1d30 00000000 		.4byte	prevKnobs7bit
 15891 1d34 29       		.uleb128 0x29
 15892 1d35 950A0000 		.4byte	.LASF329
 15893 1d39 01       		.byte	0x1
 15894 1d3a 0D01     		.2byte	0x10d
 15895 1d3c B8000000 		.4byte	0xb8
 15896 1d40 05       		.uleb128 0x5
 15897 1d41 03       		.byte	0x3
 15898 1d42 00000000 		.4byte	u7bit_volumePedal
 15899 1d46 29       		.uleb128 0x29
 15900 1d47 4C140000 		.4byte	.LASF330
 15901 1d4b 01       		.byte	0x1
 15902 1d4c 0E01     		.2byte	0x10e
 15903 1d4e B8000000 		.4byte	0xb8
 15904 1d52 05       		.uleb128 0x5
 15905 1d53 03       		.byte	0x3
 15906 1d54 00000000 		.4byte	prev_7bit_volumePedal
 15907 1d58 29       		.uleb128 0x29
 15908 1d59 B30D0000 		.4byte	.LASF331
 15909 1d5d 01       		.byte	0x1
 15910 1d5e 0F01     		.2byte	0x10f
 15911 1d60 24020000 		.4byte	0x224
 15912 1d64 05       		.uleb128 0x5
 15913 1d65 03       		.byte	0x3
 15914 1d66 00000000 		.4byte	SPI2started
 15915 1d6a 29       		.uleb128 0x29
 15916 1d6b 85080000 		.4byte	.LASF332
 15917 1d6f 01       		.byte	0x1
 15918 1d70 1101     		.2byte	0x111
 15919 1d72 B8000000 		.4byte	0xb8
 15920 1d76 05       		.uleb128 0x5
 15921 1d77 03       		.byte	0x3
 15922 1d78 00000000 		.4byte	whichMacro
 15923 1d7c 29       		.uleb128 0x29
 15924 1d7d 54120000 		.4byte	.LASF333
 15925 1d81 01       		.byte	0x1
 15926 1d82 1301     		.2byte	0x113
 15927 1d84 FF190000 		.4byte	0x19ff
 15928 1d88 05       		.uleb128 0x5
 15929 1d89 03       		.byte	0x3
 15930 1d8a 00000000 		.4byte	macroKnobValues7bit
 15931 1d8e 29       		.uleb128 0x29
 15932 1d8f 87020000 		.4byte	.LASF334
 15933 1d93 01       		.byte	0x1
 15934 1d94 1401     		.2byte	0x114
 15935 1d96 FF190000 		.4byte	0x19ff
 15936 1d9a 05       		.uleb128 0x5
 15937 1d9b 03       		.byte	0x3
 15938 1d9c 00000000 		.4byte	prevMacroKnobValues7bit
 15939 1da0 29       		.uleb128 0x29
 15940 1da1 EC100000 		.4byte	.LASF335
 15941 1da5 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 340


 15942 1da6 2801     		.2byte	0x128
 15943 1da8 26140000 		.4byte	0x1426
 15944 1dac 05       		.uleb128 0x5
 15945 1dad 03       		.byte	0x3
 15946 1dae 00000000 		.4byte	array
 15947 1db2 29       		.uleb128 0x29
 15948 1db3 1F0A0000 		.4byte	.LASF336
 15949 1db7 01       		.byte	0x1
 15950 1db8 2B01     		.2byte	0x12b
 15951 1dba 18020000 		.4byte	0x218
 15952 1dbe 05       		.uleb128 0x5
 15953 1dbf 03       		.byte	0x3
 15954 1dc0 00000000 		.4byte	eepromReturnValue
 15955 1dc4 29       		.uleb128 0x29
 15956 1dc5 EA060000 		.4byte	.LASF337
 15957 1dc9 01       		.byte	0x1
 15958 1dca 3701     		.2byte	0x137
 15959 1dcc EF000000 		.4byte	0xef
 15960 1dd0 05       		.uleb128 0x5
 15961 1dd1 03       		.byte	0x3
 15962 1dd2 00000000 		.4byte	eeprom_cnt
 15963 1dd6 29       		.uleb128 0x29
 15964 1dd7 470A0000 		.4byte	.LASF132
 15965 1ddb 01       		.byte	0x1
 15966 1ddc 3801     		.2byte	0x138
 15967 1dde 28010000 		.4byte	0x128
 15968 1de2 05       		.uleb128 0x5
 15969 1de3 03       		.byte	0x3
 15970 1de4 00000000 		.4byte	status
 15971 1de8 2D       		.uleb128 0x2d
 15972 1de9 70747200 		.ascii	"ptr\000"
 15973 1ded 01       		.byte	0x1
 15974 1dee 3901     		.2byte	0x139
 15975 1df0 FA1D0000 		.4byte	0x1dfa
 15976 1df4 05       		.uleb128 0x5
 15977 1df5 03       		.byte	0x3
 15978 1df6 00000000 		.4byte	ptr
 15979 1dfa 07       		.uleb128 0x7
 15980 1dfb 04       		.byte	0x4
 15981 1dfc 051E0000 		.4byte	0x1e05
 15982 1e00 08       		.uleb128 0x8
 15983 1e01 EF000000 		.4byte	0xef
 15984 1e05 06       		.uleb128 0x6
 15985 1e06 001E0000 		.4byte	0x1e00
 15986 1e0a 29       		.uleb128 0x29
 15987 1e0b F3020000 		.4byte	.LASF338
 15988 1e0f 01       		.byte	0x1
 15989 1e10 3A01     		.2byte	0x13a
 15990 1e12 E71C0000 		.4byte	0x1ce7
 15991 1e16 05       		.uleb128 0x5
 15992 1e17 03       		.byte	0x3
 15993 1e18 00000000 		.4byte	barCount
 15994 1e1c 09       		.uleb128 0x9
 15995 1e1d 24020000 		.4byte	0x224
 15996 1e21 2C1E0000 		.4byte	0x1e2c
 15997 1e25 0A       		.uleb128 0xa
 15998 1e26 4C010000 		.4byte	0x14c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 341


 15999 1e2a 0F       		.byte	0xf
 16000 1e2b 00       		.byte	0
 16001 1e2c 29       		.uleb128 0x29
 16002 1e2d 65010000 		.4byte	.LASF339
 16003 1e31 01       		.byte	0x1
 16004 1e32 9C01     		.2byte	0x19c
 16005 1e34 3E1E0000 		.4byte	0x1e3e
 16006 1e38 05       		.uleb128 0x5
 16007 1e39 03       		.byte	0x3
 16008 1e3a 00000000 		.4byte	I2Cbuff2
 16009 1e3e 06       		.uleb128 0x6
 16010 1e3f 1C1E0000 		.4byte	0x1e1c
 16011 1e43 29       		.uleb128 0x29
 16012 1e44 4E0A0000 		.4byte	.LASF340
 16013 1e48 01       		.byte	0x1
 16014 1e49 9D01     		.2byte	0x19d
 16015 1e4b 24020000 		.4byte	0x224
 16016 1e4f 05       		.uleb128 0x5
 16017 1e50 03       		.byte	0x3
 16018 1e51 00000000 		.4byte	send_it
 16019 1e55 09       		.uleb128 0x9
 16020 1e56 B8000000 		.4byte	0xb8
 16021 1e5a 6B1E0000 		.4byte	0x1e6b
 16022 1e5e 0A       		.uleb128 0xa
 16023 1e5f 4C010000 		.4byte	0x14c
 16024 1e63 0B       		.byte	0xb
 16025 1e64 0A       		.uleb128 0xa
 16026 1e65 4C010000 		.4byte	0x14c
 16027 1e69 01       		.byte	0x1
 16028 1e6a 00       		.byte	0
 16029 1e6b 29       		.uleb128 0x29
 16030 1e6c A6010000 		.4byte	.LASF341
 16031 1e70 01       		.byte	0x1
 16032 1e71 A401     		.2byte	0x1a4
 16033 1e73 551E0000 		.4byte	0x1e55
 16034 1e77 05       		.uleb128 0x5
 16035 1e78 03       		.byte	0x3
 16036 1e79 00000000 		.4byte	mux_states
 16037 1e7d 09       		.uleb128 0x9
 16038 1e7e B8000000 		.4byte	0xb8
 16039 1e82 8D1E0000 		.4byte	0x1e8d
 16040 1e86 0A       		.uleb128 0xa
 16041 1e87 4C010000 		.4byte	0x14c
 16042 1e8b 0B       		.byte	0xb
 16043 1e8c 00       		.byte	0
 16044 1e8d 29       		.uleb128 0x29
 16045 1e8e 1F140000 		.4byte	.LASF342
 16046 1e92 01       		.byte	0x1
 16047 1e93 A501     		.2byte	0x1a5
 16048 1e95 7D1E0000 		.4byte	0x1e7d
 16049 1e99 05       		.uleb128 0x5
 16050 1e9a 03       		.byte	0x3
 16051 1e9b 00000000 		.4byte	i2c_skipped
 16052 1e9f 29       		.uleb128 0x29
 16053 1ea0 84120000 		.4byte	.LASF343
 16054 1ea4 01       		.byte	0x1
 16055 1ea5 A601     		.2byte	0x1a6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 342


 16056 1ea7 79190000 		.4byte	0x1979
 16057 1eab 05       		.uleb128 0x5
 16058 1eac 03       		.byte	0x3
 16059 1ead 00000000 		.4byte	pedals_low
 16060 1eb1 29       		.uleb128 0x29
 16061 1eb2 07020000 		.4byte	.LASF344
 16062 1eb6 01       		.byte	0x1
 16063 1eb7 A701     		.2byte	0x1a7
 16064 1eb9 79190000 		.4byte	0x1979
 16065 1ebd 05       		.uleb128 0x5
 16066 1ebe 03       		.byte	0x3
 16067 1ebf 00000000 		.4byte	pedals_high
 16068 1ec3 29       		.uleb128 0x29
 16069 1ec4 3D120000 		.4byte	.LASF345
 16070 1ec8 01       		.byte	0x1
 16071 1ec9 A801     		.2byte	0x1a8
 16072 1ecb 79190000 		.4byte	0x1979
 16073 1ecf 05       		.uleb128 0x5
 16074 1ed0 03       		.byte	0x3
 16075 1ed1 00000000 		.4byte	pedals_lowWithDeadZone
 16076 1ed5 29       		.uleb128 0x29
 16077 1ed6 11030000 		.4byte	.LASF346
 16078 1eda 01       		.byte	0x1
 16079 1edb A901     		.2byte	0x1a9
 16080 1edd 79190000 		.4byte	0x1979
 16081 1ee1 05       		.uleb128 0x5
 16082 1ee2 03       		.byte	0x3
 16083 1ee3 00000000 		.4byte	pedals_highWithDeadZone
 16084 1ee7 29       		.uleb128 0x29
 16085 1ee8 51110000 		.4byte	.LASF347
 16086 1eec 01       		.byte	0x1
 16087 1eed AA01     		.2byte	0x1aa
 16088 1eef CE000000 		.4byte	0xce
 16089 1ef3 05       		.uleb128 0x5
 16090 1ef4 03       		.byte	0x3
 16091 1ef5 00000000 		.4byte	deadzone
 16092 1ef9 29       		.uleb128 0x29
 16093 1efa 90080000 		.4byte	.LASF348
 16094 1efe 01       		.byte	0x1
 16095 1eff AB01     		.2byte	0x1ab
 16096 1f01 CE000000 		.4byte	0xce
 16097 1f05 05       		.uleb128 0x5
 16098 1f06 03       		.byte	0x3
 16099 1f07 00000000 		.4byte	volumePedal
 16100 1f0b 29       		.uleb128 0x29
 16101 1f0c 380F0000 		.4byte	.LASF349
 16102 1f10 01       		.byte	0x1
 16103 1f11 AC01     		.2byte	0x1ac
 16104 1f13 79190000 		.4byte	0x1979
 16105 1f17 05       		.uleb128 0x5
 16106 1f18 03       		.byte	0x3
 16107 1f19 00000000 		.4byte	processed_pedals
 16108 1f1d 29       		.uleb128 0x29
 16109 1f1e 950D0000 		.4byte	.LASF350
 16110 1f22 01       		.byte	0x1
 16111 1f23 AD01     		.2byte	0x1ad
 16112 1f25 79190000 		.4byte	0x1979
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 343


 16113 1f29 05       		.uleb128 0x5
 16114 1f2a 03       		.byte	0x3
 16115 1f2b 00000000 		.4byte	prev_processed_pedals
 16116 1f2f 09       		.uleb128 0x9
 16117 1f30 B8000000 		.4byte	0xb8
 16118 1f34 3F1F0000 		.4byte	0x1f3f
 16119 1f38 0A       		.uleb128 0xa
 16120 1f39 4C010000 		.4byte	0x14c
 16121 1f3d 09       		.byte	0x9
 16122 1f3e 00       		.byte	0
 16123 1f3f 29       		.uleb128 0x29
 16124 1f40 B3080000 		.4byte	.LASF351
 16125 1f44 01       		.byte	0x1
 16126 1f45 AE01     		.2byte	0x1ae
 16127 1f47 2F1F0000 		.4byte	0x1f2f
 16128 1f4b 05       		.uleb128 0x5
 16129 1f4c 03       		.byte	0x3
 16130 1f4d 00000000 		.4byte	pedals8bit
 16131 1f51 29       		.uleb128 0x29
 16132 1f52 3C140000 		.4byte	.LASF352
 16133 1f56 01       		.byte	0x1
 16134 1f57 AF01     		.2byte	0x1af
 16135 1f59 2F1F0000 		.4byte	0x1f2f
 16136 1f5d 05       		.uleb128 0x5
 16137 1f5e 03       		.byte	0x3
 16138 1f5f 00000000 		.4byte	pedals7bit
 16139 1f63 29       		.uleb128 0x29
 16140 1f64 700E0000 		.4byte	.LASF353
 16141 1f68 01       		.byte	0x1
 16142 1f69 B001     		.2byte	0x1b0
 16143 1f6b 2F1F0000 		.4byte	0x1f2f
 16144 1f6f 05       		.uleb128 0x5
 16145 1f70 03       		.byte	0x3
 16146 1f71 00000000 		.4byte	prevPedals7bit
 16147 1f75 29       		.uleb128 0x29
 16148 1f76 5B000000 		.4byte	.LASF354
 16149 1f7a 01       		.byte	0x1
 16150 1f7b B101     		.2byte	0x1b1
 16151 1f7d C3000000 		.4byte	0xc3
 16152 1f81 05       		.uleb128 0x5
 16153 1f82 03       		.byte	0x3
 16154 1f83 00000000 		.4byte	prev_processed_volumePedal
 16155 1f87 29       		.uleb128 0x29
 16156 1f88 DB0E0000 		.4byte	.LASF355
 16157 1f8c 01       		.byte	0x1
 16158 1f8d B201     		.2byte	0x1b2
 16159 1f8f C3000000 		.4byte	0xc3
 16160 1f93 05       		.uleb128 0x5
 16161 1f94 03       		.byte	0x3
 16162 1f95 00000000 		.4byte	processed_volumePedal
 16163 1f99 09       		.uleb128 0x9
 16164 1f9a CE000000 		.4byte	0xce
 16165 1f9e AF1F0000 		.4byte	0x1faf
 16166 1fa2 0A       		.uleb128 0xa
 16167 1fa3 4C010000 		.4byte	0x14c
 16168 1fa7 01       		.byte	0x1
 16169 1fa8 0A       		.uleb128 0xa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 344


 16170 1fa9 4C010000 		.4byte	0x14c
 16171 1fad 0B       		.byte	0xb
 16172 1fae 00       		.byte	0
 16173 1faf 29       		.uleb128 0x29
 16174 1fb0 E3120000 		.4byte	.LASF356
 16175 1fb4 01       		.byte	0x1
 16176 1fb5 B501     		.2byte	0x1b5
 16177 1fb7 991F0000 		.4byte	0x1f99
 16178 1fbb 05       		.uleb128 0x5
 16179 1fbc 03       		.byte	0x3
 16180 1fbd 00000000 		.4byte	fretMeasurements
 16181 1fc1 29       		.uleb128 0x29
 16182 1fc2 F50A0000 		.4byte	.LASF357
 16183 1fc6 01       		.byte	0x1
 16184 1fc7 B901     		.2byte	0x1b9
 16185 1fc9 9F000000 		.4byte	0x9f
 16186 1fcd 05       		.uleb128 0x5
 16187 1fce 03       		.byte	0x3
 16188 1fcf 00000000 		.4byte	currentPresetSelection
 16189 1fd3 09       		.uleb128 0x9
 16190 1fd4 B8000000 		.4byte	0xb8
 16191 1fd8 E91F0000 		.4byte	0x1fe9
 16192 1fdc 0A       		.uleb128 0xa
 16193 1fdd 4C010000 		.4byte	0x14c
 16194 1fe1 3F       		.byte	0x3f
 16195 1fe2 0A       		.uleb128 0xa
 16196 1fe3 4C010000 		.4byte	0x14c
 16197 1fe7 0D       		.byte	0xd
 16198 1fe8 00       		.byte	0
 16199 1fe9 29       		.uleb128 0x29
 16200 1fea BA030000 		.4byte	.LASF358
 16201 1fee 01       		.byte	0x1
 16202 1fef BA01     		.2byte	0x1ba
 16203 1ff1 D31F0000 		.4byte	0x1fd3
 16204 1ff5 05       		.uleb128 0x5
 16205 1ff6 03       		.byte	0x3
 16206 1ff7 00000000 		.4byte	presetNamesArray
 16207 1ffb 29       		.uleb128 0x29
 16208 1ffc 29030000 		.4byte	.LASF359
 16209 2000 01       		.byte	0x1
 16210 2001 BB01     		.2byte	0x1bb
 16211 2003 B8000000 		.4byte	0xb8
 16212 2007 05       		.uleb128 0x5
 16213 2008 03       		.byte	0x3
 16214 2009 00000000 		.4byte	presetNumberToLoad
 16215 200d 29       		.uleb128 0x29
 16216 200e 71030000 		.4byte	.LASF360
 16217 2012 01       		.byte	0x1
 16218 2013 BC01     		.2byte	0x1bc
 16219 2015 C3160000 		.4byte	0x16c3
 16220 2019 05       		.uleb128 0x5
 16221 201a 03       		.byte	0x3
 16222 201b 00000000 		.4byte	presetLoadedResponse
 16223 201f 09       		.uleb128 0x9
 16224 2020 B8000000 		.4byte	0xb8
 16225 2024 3B200000 		.4byte	0x203b
 16226 2028 0A       		.uleb128 0xa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 345


 16227 2029 4C010000 		.4byte	0x14c
 16228 202d 3F       		.byte	0x3f
 16229 202e 0A       		.uleb128 0xa
 16230 202f 4C010000 		.4byte	0x14c
 16231 2033 07       		.byte	0x7
 16232 2034 0A       		.uleb128 0xa
 16233 2035 4C010000 		.4byte	0x14c
 16234 2039 0D       		.byte	0xd
 16235 203a 00       		.byte	0
 16236 203b 29       		.uleb128 0x29
 16237 203c 8D000000 		.4byte	.LASF361
 16238 2040 01       		.byte	0x1
 16239 2041 BF01     		.2byte	0x1bf
 16240 2043 1F200000 		.4byte	0x201f
 16241 2047 05       		.uleb128 0x5
 16242 2048 03       		.byte	0x3
 16243 2049 00000000 		.4byte	macroNamesArray
 16244 204d 09       		.uleb128 0x9
 16245 204e 13010000 		.4byte	0x113
 16246 2052 5D200000 		.4byte	0x205d
 16247 2056 0A       		.uleb128 0xa
 16248 2057 4C010000 		.4byte	0x14c
 16249 205b 0B       		.byte	0xb
 16250 205c 00       		.byte	0
 16251 205d 29       		.uleb128 0x29
 16252 205e 19040000 		.4byte	.LASF362
 16253 2062 01       		.byte	0x1
 16254 2063 C401     		.2byte	0x1c4
 16255 2065 4D200000 		.4byte	0x204d
 16256 2069 05       		.uleb128 0x5
 16257 206a 03       		.byte	0x3
 16258 206b 00000000 		.4byte	fretScaling
 16259 206f 09       		.uleb128 0x9
 16260 2070 13010000 		.4byte	0x113
 16261 2074 7F200000 		.4byte	0x207f
 16262 2078 0A       		.uleb128 0xa
 16263 2079 4C010000 		.4byte	0x14c
 16264 207d 09       		.byte	0x9
 16265 207e 00       		.byte	0
 16266 207f 29       		.uleb128 0x29
 16267 2080 4F050000 		.4byte	.LASF363
 16268 2084 01       		.byte	0x1
 16269 2085 C901     		.2byte	0x1c9
 16270 2087 6F200000 		.4byte	0x206f
 16271 208b 05       		.uleb128 0x5
 16272 208c 03       		.byte	0x3
 16273 208d 00000000 		.4byte	pedalRatios
 16274 2091 29       		.uleb128 0x29
 16275 2092 19060000 		.4byte	.LASF364
 16276 2096 01       		.byte	0x1
 16277 2097 CA01     		.2byte	0x1ca
 16278 2099 B8000000 		.4byte	0xb8
 16279 209d 05       		.uleb128 0x5
 16280 209e 03       		.byte	0x3
 16281 209f 00000000 		.4byte	last_mux
 16282 20a3 29       		.uleb128 0x29
 16283 20a4 130C0000 		.4byte	.LASF365
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 346


 16284 20a8 01       		.byte	0x1
 16285 20a9 CB01     		.2byte	0x1cb
 16286 20ab 24020000 		.4byte	0x224
 16287 20af 05       		.uleb128 0x5
 16288 20b0 03       		.byte	0x3
 16289 20b1 00000000 		.4byte	main_counter
 16290 20b5 29       		.uleb128 0x29
 16291 20b6 B8060000 		.4byte	.LASF366
 16292 20ba 01       		.byte	0x1
 16293 20bb CC01     		.2byte	0x1cc
 16294 20bd B8000000 		.4byte	0xb8
 16295 20c1 05       		.uleb128 0x5
 16296 20c2 03       		.byte	0x3
 16297 20c3 00000000 		.4byte	neck
 16298 20c7 29       		.uleb128 0x29
 16299 20c8 2A0C0000 		.4byte	.LASF367
 16300 20cc 01       		.byte	0x1
 16301 20cd CD01     		.2byte	0x1cd
 16302 20cf B8000000 		.4byte	0xb8
 16303 20d3 05       		.uleb128 0x5
 16304 20d4 03       		.byte	0x3
 16305 20d5 00000000 		.4byte	dualSlider
 16306 20d9 29       		.uleb128 0x29
 16307 20da BD150000 		.4byte	.LASF368
 16308 20de 01       		.byte	0x1
 16309 20df CE01     		.2byte	0x1ce
 16310 20e1 B8000000 		.4byte	0xb8
 16311 20e5 05       		.uleb128 0x5
 16312 20e6 03       		.byte	0x3
 16313 20e7 00000000 		.4byte	shiftUp
 16314 20eb 29       		.uleb128 0x29
 16315 20ec 3C030000 		.4byte	.LASF369
 16316 20f0 01       		.byte	0x1
 16317 20f1 CF01     		.2byte	0x1cf
 16318 20f3 B8000000 		.4byte	0xb8
 16319 20f7 05       		.uleb128 0x5
 16320 20f8 03       		.byte	0x3
 16321 20f9 00000000 		.4byte	voice
 16322 20fd 29       		.uleb128 0x29
 16323 20fe 10160000 		.4byte	.LASF370
 16324 2102 01       		.byte	0x1
 16325 2103 D001     		.2byte	0x1d0
 16326 2105 B8000000 		.4byte	0xb8
 16327 2109 05       		.uleb128 0x5
 16328 210a 03       		.byte	0x3
 16329 210b 00000000 		.4byte	editUp
 16330 210f 29       		.uleb128 0x29
 16331 2110 39070000 		.4byte	.LASF371
 16332 2114 01       		.byte	0x1
 16333 2115 D101     		.2byte	0x1d1
 16334 2117 B8000000 		.4byte	0xb8
 16335 211b 05       		.uleb128 0x5
 16336 211c 03       		.byte	0x3
 16337 211d 00000000 		.4byte	oct1Up
 16338 2121 29       		.uleb128 0x29
 16339 2122 34150000 		.4byte	.LASF372
 16340 2126 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 347


 16341 2127 D201     		.2byte	0x1d2
 16342 2129 B8000000 		.4byte	0xb8
 16343 212d 05       		.uleb128 0x5
 16344 212e 03       		.byte	0x3
 16345 212f 00000000 		.4byte	oct4Up
 16346 2133 29       		.uleb128 0x29
 16347 2134 4A020000 		.4byte	.LASF373
 16348 2138 01       		.byte	0x1
 16349 2139 D301     		.2byte	0x1d3
 16350 213b B8000000 		.4byte	0xb8
 16351 213f 05       		.uleb128 0x5
 16352 2140 03       		.byte	0x3
 16353 2141 00000000 		.4byte	encoderUp
 16354 2145 29       		.uleb128 0x29
 16355 2146 22060000 		.4byte	.LASF374
 16356 214a 01       		.byte	0x1
 16357 214b D501     		.2byte	0x1d5
 16358 214d 57210000 		.4byte	0x2157
 16359 2151 05       		.uleb128 0x5
 16360 2152 03       		.byte	0x3
 16361 2153 00000000 		.4byte	encoderVal
 16362 2157 06       		.uleb128 0x6
 16363 2158 1C1E0000 		.4byte	0x1e1c
 16364 215c 29       		.uleb128 0x29
 16365 215d 2E070000 		.4byte	.LASF375
 16366 2161 01       		.byte	0x1
 16367 2162 D601     		.2byte	0x1d6
 16368 2164 9F000000 		.4byte	0x9f
 16369 2168 05       		.uleb128 0x5
 16370 2169 03       		.byte	0x3
 16371 216a 00000000 		.4byte	encoderNum
 16372 216e 29       		.uleb128 0x29
 16373 216f 140D0000 		.4byte	.LASF376
 16374 2173 01       		.byte	0x1
 16375 2174 D701     		.2byte	0x1d7
 16376 2176 B8000000 		.4byte	0xb8
 16377 217a 05       		.uleb128 0x5
 16378 217b 03       		.byte	0x3
 16379 217c 00000000 		.4byte	button1Up
 16380 2180 29       		.uleb128 0x29
 16381 2181 B5100000 		.4byte	.LASF377
 16382 2185 01       		.byte	0x1
 16383 2186 D801     		.2byte	0x1d8
 16384 2188 B8000000 		.4byte	0xb8
 16385 218c 05       		.uleb128 0x5
 16386 218d 03       		.byte	0x3
 16387 218e 00000000 		.4byte	button2Up
 16388 2192 29       		.uleb128 0x29
 16389 2193 50150000 		.4byte	.LASF378
 16390 2197 01       		.byte	0x1
 16391 2198 D901     		.2byte	0x1d9
 16392 219a B8000000 		.4byte	0xb8
 16393 219e 05       		.uleb128 0x5
 16394 219f 03       		.byte	0x3
 16395 21a0 00000000 		.4byte	button3Up
 16396 21a4 29       		.uleb128 0x29
 16397 21a5 02150000 		.4byte	.LASF379
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 348


 16398 21a9 01       		.byte	0x1
 16399 21aa DA01     		.2byte	0x1da
 16400 21ac B8000000 		.4byte	0xb8
 16401 21b0 05       		.uleb128 0x5
 16402 21b1 03       		.byte	0x3
 16403 21b2 00000000 		.4byte	button4Up
 16404 21b6 29       		.uleb128 0x29
 16405 21b7 1B120000 		.4byte	.LASF380
 16406 21bb 01       		.byte	0x1
 16407 21bc DB01     		.2byte	0x1db
 16408 21be B8000000 		.4byte	0xb8
 16409 21c2 05       		.uleb128 0x5
 16410 21c3 03       		.byte	0x3
 16411 21c4 00000000 		.4byte	patchNum
 16412 21c8 29       		.uleb128 0x29
 16413 21c9 0F070000 		.4byte	.LASF381
 16414 21cd 01       		.byte	0x1
 16415 21ce DE01     		.2byte	0x1de
 16416 21d0 2F1F0000 		.4byte	0x1f2f
 16417 21d4 05       		.uleb128 0x5
 16418 21d5 03       		.byte	0x3
 16419 21d6 00000000 		.4byte	pedal_inverted
 16420 21da 09       		.uleb128 0x9
 16421 21db 13010000 		.4byte	0x113
 16422 21df F6210000 		.4byte	0x21f6
 16423 21e3 0A       		.uleb128 0xa
 16424 21e4 4C010000 		.4byte	0x14c
 16425 21e8 06       		.byte	0x6
 16426 21e9 0A       		.uleb128 0xa
 16427 21ea 4C010000 		.4byte	0x14c
 16428 21ee 0A       		.byte	0xa
 16429 21ef 0A       		.uleb128 0xa
 16430 21f0 4C010000 		.4byte	0x14c
 16431 21f4 0B       		.byte	0xb
 16432 21f5 00       		.byte	0
 16433 21f6 29       		.uleb128 0x29
 16434 21f7 AA080000 		.4byte	.LASF382
 16435 21fb 01       		.byte	0x1
 16436 21fc E101     		.2byte	0x1e1
 16437 21fe DA210000 		.4byte	0x21da
 16438 2202 05       		.uleb128 0x5
 16439 2203 03       		.byte	0x3
 16440 2204 00000000 		.4byte	copedent
 16441 2208 09       		.uleb128 0x9
 16442 2209 B8000000 		.4byte	0xb8
 16443 220d 1E220000 		.4byte	0x221e
 16444 2211 0A       		.uleb128 0xa
 16445 2212 4C010000 		.4byte	0x14c
 16446 2216 06       		.byte	0x6
 16447 2217 0A       		.uleb128 0xa
 16448 2218 4C010000 		.4byte	0x14c
 16449 221c 0D       		.byte	0xd
 16450 221d 00       		.byte	0
 16451 221e 29       		.uleb128 0x29
 16452 221f 1A020000 		.4byte	.LASF383
 16453 2223 01       		.byte	0x1
 16454 2224 E201     		.2byte	0x1e2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 349


 16455 2226 08220000 		.4byte	0x2208
 16456 222a 05       		.uleb128 0x5
 16457 222b 03       		.byte	0x3
 16458 222c 00000000 		.4byte	copedentNamesArray
 16459 2230 29       		.uleb128 0x29
 16460 2231 D4030000 		.4byte	.LASF384
 16461 2235 01       		.byte	0x1
 16462 2236 E401     		.2byte	0x1e4
 16463 2238 4D200000 		.4byte	0x204d
 16464 223c 05       		.uleb128 0x5
 16465 223d 03       		.byte	0x3
 16466 223e 00000000 		.4byte	prevStringPitchBend
 16467 2242 09       		.uleb128 0x9
 16468 2243 13010000 		.4byte	0x113
 16469 2247 58220000 		.4byte	0x2258
 16470 224b 0A       		.uleb128 0xa
 16471 224c 4C010000 		.4byte	0x14c
 16472 2250 09       		.byte	0x9
 16473 2251 0A       		.uleb128 0xa
 16474 2252 4C010000 		.4byte	0x14c
 16475 2256 0B       		.byte	0xb
 16476 2257 00       		.byte	0
 16477 2258 29       		.uleb128 0x29
 16478 2259 FD150000 		.4byte	.LASF385
 16479 225d 01       		.byte	0x1
 16480 225e E601     		.2byte	0x1e6
 16481 2260 42220000 		.4byte	0x2242
 16482 2264 05       		.uleb128 0x5
 16483 2265 03       		.byte	0x3
 16484 2266 00000000 		.4byte	pedals
 16485 226a 29       		.uleb128 0x29
 16486 226b 0B0E0000 		.4byte	.LASF386
 16487 226f 01       		.byte	0x1
 16488 2270 E801     		.2byte	0x1e8
 16489 2272 2F1F0000 		.4byte	0x1f2f
 16490 2276 05       		.uleb128 0x5
 16491 2277 03       		.byte	0x3
 16492 2278 00000000 		.4byte	pedal_cc_assignments
 16493 227c 29       		.uleb128 0x29
 16494 227d 490F0000 		.4byte	.LASF387
 16495 2281 01       		.byte	0x1
 16496 2282 E901     		.2byte	0x1e9
 16497 2284 4D200000 		.4byte	0x204d
 16498 2288 05       		.uleb128 0x5
 16499 2289 03       		.byte	0x3
 16500 228a 00000000 		.4byte	openStringFrequencies
 16501 228e 29       		.uleb128 0x29
 16502 228f F10E0000 		.4byte	.LASF388
 16503 2293 01       		.byte	0x1
 16504 2294 EA01     		.2byte	0x1ea
 16505 2296 4D200000 		.4byte	0x204d
 16506 229a 05       		.uleb128 0x5
 16507 229b 03       		.byte	0x3
 16508 229c 00000000 		.4byte	stringMappedPositions
 16509 22a0 29       		.uleb128 0x29
 16510 22a1 88090000 		.4byte	.LASF389
 16511 22a5 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 350


 16512 22a6 EB01     		.2byte	0x1eb
 16513 22a8 4D200000 		.4byte	0x204d
 16514 22ac 05       		.uleb128 0x5
 16515 22ad 03       		.byte	0x3
 16516 22ae 00000000 		.4byte	invStringMappedPositions
 16517 22b2 29       		.uleb128 0x29
 16518 22b3 43160000 		.4byte	.LASF390
 16519 22b7 01       		.byte	0x1
 16520 22b8 EC01     		.2byte	0x1ec
 16521 22ba 4D200000 		.4byte	0x204d
 16522 22be 05       		.uleb128 0x5
 16523 22bf 03       		.byte	0x3
 16524 22c0 00000000 		.4byte	stringFrequencies
 16525 22c4 29       		.uleb128 0x29
 16526 22c5 B3050000 		.4byte	.LASF391
 16527 22c9 01       		.byte	0x1
 16528 22ca ED01     		.2byte	0x1ed
 16529 22cc 4D200000 		.4byte	0x204d
 16530 22d0 05       		.uleb128 0x5
 16531 22d1 03       		.byte	0x3
 16532 22d2 00000000 		.4byte	stringOctave
 16533 22d6 29       		.uleb128 0x29
 16534 22d7 970C0000 		.4byte	.LASF392
 16535 22db 01       		.byte	0x1
 16536 22dc EE01     		.2byte	0x1ee
 16537 22de 4D200000 		.4byte	0x204d
 16538 22e2 05       		.uleb128 0x5
 16539 22e3 03       		.byte	0x3
 16540 22e4 00000000 		.4byte	stringPitch
 16541 22e8 29       		.uleb128 0x29
 16542 22e9 12130000 		.4byte	.LASF393
 16543 22ed 01       		.byte	0x1
 16544 22ee EF01     		.2byte	0x1ef
 16545 22f0 4D200000 		.4byte	0x204d
 16546 22f4 05       		.uleb128 0x5
 16547 22f5 03       		.byte	0x3
 16548 22f6 00000000 		.4byte	stringMIDI
 16549 22fa 09       		.uleb128 0x9
 16550 22fb 9F000000 		.4byte	0x9f
 16551 22ff 0A230000 		.4byte	0x230a
 16552 2303 0A       		.uleb128 0xa
 16553 2304 4C010000 		.4byte	0x14c
 16554 2308 0B       		.byte	0xb
 16555 2309 00       		.byte	0
 16556 230a 29       		.uleb128 0x29
 16557 230b 0C0B0000 		.4byte	.LASF394
 16558 230f 01       		.byte	0x1
 16559 2310 F001     		.2byte	0x1f0
 16560 2312 FA220000 		.4byte	0x22fa
 16561 2316 05       		.uleb128 0x5
 16562 2317 03       		.byte	0x3
 16563 2318 00000000 		.4byte	openStringMIDI_Int
 16564 231c 29       		.uleb128 0x29
 16565 231d 09120000 		.4byte	.LASF395
 16566 2321 01       		.byte	0x1
 16567 2322 F101     		.2byte	0x1f1
 16568 2324 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 351


 16569 2328 05       		.uleb128 0x5
 16570 2329 03       		.byte	0x3
 16571 232a 00000000 		.4byte	OLEDcount
 16572 232e 29       		.uleb128 0x29
 16573 232f C40C0000 		.4byte	.LASF396
 16574 2333 01       		.byte	0x1
 16575 2334 F301     		.2byte	0x1f3
 16576 2336 9F000000 		.4byte	0x9f
 16577 233a 05       		.uleb128 0x5
 16578 233b 03       		.byte	0x3
 16579 233c 00000000 		.4byte	mainOLEDWaitingToSend
 16580 2340 29       		.uleb128 0x29
 16581 2341 8F010000 		.4byte	.LASF397
 16582 2345 01       		.byte	0x1
 16583 2346 F401     		.2byte	0x1f4
 16584 2348 9F000000 		.4byte	0x9f
 16585 234c 05       		.uleb128 0x5
 16586 234d 03       		.byte	0x3
 16587 234e 00000000 		.4byte	macroOLEDWaitingToSend
 16588 2352 09       		.uleb128 0x9
 16589 2353 9F000000 		.4byte	0x9f
 16590 2357 62230000 		.4byte	0x2362
 16591 235b 0A       		.uleb128 0xa
 16592 235c 4C010000 		.4byte	0x14c
 16593 2360 3F       		.byte	0x3f
 16594 2361 00       		.byte	0
 16595 2362 29       		.uleb128 0x29
 16596 2363 36060000 		.4byte	.LASF398
 16597 2367 01       		.byte	0x1
 16598 2368 F601     		.2byte	0x1f6
 16599 236a 52230000 		.4byte	0x2352
 16600 236e 05       		.uleb128 0x5
 16601 236f 03       		.byte	0x3
 16602 2370 00000000 		.4byte	presetAlreadyDisplayed
 16603 2374 29       		.uleb128 0x29
 16604 2375 30120000 		.4byte	.LASF399
 16605 2379 01       		.byte	0x1
 16606 237a F801     		.2byte	0x1f8
 16607 237c 6F200000 		.4byte	0x206f
 16608 2380 05       		.uleb128 0x5
 16609 2381 03       		.byte	0x3
 16610 2382 00000000 		.4byte	pedals_float
 16611 2386 29       		.uleb128 0x29
 16612 2387 0B100000 		.4byte	.LASF400
 16613 238b 01       		.byte	0x1
 16614 238c 0002     		.2byte	0x200
 16615 238e 9F000000 		.4byte	0x9f
 16616 2392 05       		.uleb128 0x5
 16617 2393 03       		.byte	0x3
 16618 2394 00000000 		.4byte	currentNeck
 16619 2398 29       		.uleb128 0x29
 16620 2399 D4040000 		.4byte	.LASF401
 16621 239d 01       		.byte	0x1
 16622 239e 0102     		.2byte	0x201
 16623 23a0 B8000000 		.4byte	0xb8
 16624 23a4 05       		.uleb128 0x5
 16625 23a5 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 352


 16626 23a6 00000000 		.4byte	neckByte
 16627 23aa 29       		.uleb128 0x29
 16628 23ab 17100000 		.4byte	.LASF402
 16629 23af 01       		.byte	0x1
 16630 23b0 0302     		.2byte	0x203
 16631 23b2 9F000000 		.4byte	0x9f
 16632 23b6 05       		.uleb128 0x5
 16633 23b7 03       		.byte	0x3
 16634 23b8 00000000 		.4byte	editMode
 16635 23bc 29       		.uleb128 0x29
 16636 23bd A5140000 		.4byte	.LASF403
 16637 23c1 01       		.byte	0x1
 16638 23c2 0402     		.2byte	0x204
 16639 23c4 9F000000 		.4byte	0x9f
 16640 23c8 05       		.uleb128 0x5
 16641 23c9 03       		.byte	0x3
 16642 23ca 00000000 		.4byte	leverCalibrationMode
 16643 23ce 29       		.uleb128 0x29
 16644 23cf A2110000 		.4byte	.LASF404
 16645 23d3 01       		.byte	0x1
 16646 23d4 0502     		.2byte	0x205
 16647 23d6 9F000000 		.4byte	0x9f
 16648 23da 05       		.uleb128 0x5
 16649 23db 03       		.byte	0x3
 16650 23dc 00000000 		.4byte	fretCalibrationMode
 16651 23e0 29       		.uleb128 0x29
 16652 23e1 EF010000 		.4byte	.LASF405
 16653 23e5 01       		.byte	0x1
 16654 23e6 0C02     		.2byte	0x20c
 16655 23e8 13010000 		.4byte	0x113
 16656 23ec 05       		.uleb128 0x5
 16657 23ed 03       		.byte	0x3
 16658 23ee 00000000 		.4byte	stringScaling
 16659 23f2 29       		.uleb128 0x29
 16660 23f3 FA070000 		.4byte	.LASF406
 16661 23f7 01       		.byte	0x1
 16662 23f8 0D02     		.2byte	0x20d
 16663 23fa 13010000 		.4byte	0x113
 16664 23fe 05       		.uleb128 0x5
 16665 23ff 03       		.byte	0x3
 16666 2400 00000000 		.4byte	stringOffset
 16667 2404 29       		.uleb128 0x29
 16668 2405 C5090000 		.4byte	.LASF407
 16669 2409 01       		.byte	0x1
 16670 240a 2007     		.2byte	0x720
 16671 240c FA220000 		.4byte	0x22fa
 16672 2410 05       		.uleb128 0x5
 16673 2411 03       		.byte	0x3
 16674 2412 00000000 		.4byte	prevNotes
 16675 2416 29       		.uleb128 0x29
 16676 2417 880E0000 		.4byte	.LASF408
 16677 241b 01       		.byte	0x1
 16678 241c 9507     		.2byte	0x795
 16679 241e 24020000 		.4byte	0x224
 16680 2422 05       		.uleb128 0x5
 16681 2423 03       		.byte	0x3
 16682 2424 00000000 		.4byte	checkStatus
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 353


 16683 2428 29       		.uleb128 0x29
 16684 2429 A1100000 		.4byte	.LASF409
 16685 242d 01       		.byte	0x1
 16686 242e 9607     		.2byte	0x796
 16687 2430 29020000 		.4byte	0x229
 16688 2434 05       		.uleb128 0x5
 16689 2435 03       		.byte	0x3
 16690 2436 00000000 		.4byte	checkBase
 16691 243a 29       		.uleb128 0x29
 16692 243b EC080000 		.4byte	.LASF410
 16693 243f 01       		.byte	0x1
 16694 2440 9A07     		.2byte	0x79a
 16695 2442 9F000000 		.4byte	0x9f
 16696 2446 05       		.uleb128 0x5
 16697 2447 03       		.byte	0x3
 16698 2448 00000000 		.4byte	SPI_errors
 16699 244c 09       		.uleb128 0x9
 16700 244d 24020000 		.4byte	0x224
 16701 2451 5C240000 		.4byte	0x245c
 16702 2455 0A       		.uleb128 0xa
 16703 2456 4C010000 		.4byte	0x14c
 16704 245a 03       		.byte	0x3
 16705 245b 00       		.byte	0
 16706 245c 29       		.uleb128 0x29
 16707 245d 070F0000 		.4byte	.LASF137
 16708 2461 01       		.byte	0x1
 16709 2462 1609     		.2byte	0x916
 16710 2464 6E240000 		.4byte	0x246e
 16711 2468 05       		.uleb128 0x5
 16712 2469 03       		.byte	0x3
 16713 246a 00000000 		.4byte	tempMIDI
 16714 246e 06       		.uleb128 0x6
 16715 246f 4C240000 		.4byte	0x244c
 16716 2473 29       		.uleb128 0x29
 16717 2474 26000000 		.4byte	.LASF411
 16718 2478 01       		.byte	0x1
 16719 2479 1709     		.2byte	0x917
 16720 247b 24020000 		.4byte	0x224
 16721 247f 05       		.uleb128 0x5
 16722 2480 03       		.byte	0x3
 16723 2481 00000000 		.4byte	firstSysex
 16724 2485 29       		.uleb128 0x29
 16725 2486 36080000 		.4byte	.LASF412
 16726 248a 01       		.byte	0x1
 16727 248b 1809     		.2byte	0x918
 16728 248d 97240000 		.4byte	0x2497
 16729 2491 05       		.uleb128 0x5
 16730 2492 03       		.byte	0x3
 16731 2493 00000000 		.4byte	sysexPointerMask
 16732 2497 08       		.uleb128 0x8
 16733 2498 CE000000 		.4byte	0xce
 16734 249c 29       		.uleb128 0x29
 16735 249d C20F0000 		.4byte	.LASF413
 16736 24a1 01       		.byte	0x1
 16737 24a2 5209     		.2byte	0x952
 16738 24a4 AD000000 		.4byte	0xad
 16739 24a8 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 354


 16740 24a9 03       		.byte	0x3
 16741 24aa 00000000 		.4byte	prevEncoderVal
 16742 24ae 29       		.uleb128 0x29
 16743 24af 1B150000 		.4byte	.LASF414
 16744 24b3 01       		.byte	0x1
 16745 24b4 5309     		.2byte	0x953
 16746 24b6 B8000000 		.4byte	0xb8
 16747 24ba 05       		.uleb128 0x5
 16748 24bb 03       		.byte	0x3
 16749 24bc 00000000 		.4byte	encoderWatch
 16750 24c0 09       		.uleb128 0x9
 16751 24c1 AD000000 		.4byte	0xad
 16752 24c5 D6240000 		.4byte	0x24d6
 16753 24c9 0A       		.uleb128 0xa
 16754 24ca 4C010000 		.4byte	0x14c
 16755 24ce 02       		.byte	0x2
 16756 24cf 0A       		.uleb128 0xa
 16757 24d0 4C010000 		.4byte	0x14c
 16758 24d4 01       		.byte	0x1
 16759 24d5 00       		.byte	0
 16760 24d6 29       		.uleb128 0x29
 16761 24d7 470E0000 		.4byte	.LASF415
 16762 24db 01       		.byte	0x1
 16763 24dc 5509     		.2byte	0x955
 16764 24de C0240000 		.4byte	0x24c0
 16765 24e2 05       		.uleb128 0x5
 16766 24e3 03       		.byte	0x3
 16767 24e4 00000000 		.4byte	menuPosition
 16768 24e8 29       		.uleb128 0x29
 16769 24e9 AD040000 		.4byte	.LASF416
 16770 24ed 01       		.byte	0x1
 16771 24ee 5709     		.2byte	0x957
 16772 24f0 B8000000 		.4byte	0xb8
 16773 24f4 05       		.uleb128 0x5
 16774 24f5 03       		.byte	0x3
 16775 24f6 00000000 		.4byte	semitonesOrCents
 16776 24fa 09       		.uleb128 0x9
 16777 24fb 0A250000 		.4byte	0x250a
 16778 24ff 0A250000 		.4byte	0x250a
 16779 2503 0A       		.uleb128 0xa
 16780 2504 4C010000 		.4byte	0x14c
 16781 2508 02       		.byte	0x2
 16782 2509 00       		.byte	0
 16783 250a 08       		.uleb128 0x8
 16784 250b 53010000 		.4byte	0x153
 16785 250f 29       		.uleb128 0x29
 16786 2510 8F120000 		.4byte	.LASF417
 16787 2514 01       		.byte	0x1
 16788 2515 5D0A     		.2byte	0xa5d
 16789 2517 21250000 		.4byte	0x2521
 16790 251b 05       		.uleb128 0x5
 16791 251c 03       		.byte	0x3
 16792 251d 00000000 		.4byte	calibrationNames
 16793 2521 08       		.uleb128 0x8
 16794 2522 FA240000 		.4byte	0x24fa
 16795 2526 29       		.uleb128 0x29
 16796 2527 980F0000 		.4byte	.LASF418
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 355


 16797 252b 01       		.byte	0x1
 16798 252c 5E0A     		.2byte	0xa5e
 16799 252e 38250000 		.4byte	0x2538
 16800 2532 05       		.uleb128 0x5
 16801 2533 03       		.byte	0x3
 16802 2534 00000000 		.4byte	mainMenuNames
 16803 2538 08       		.uleb128 0x8
 16804 2539 FA240000 		.4byte	0x24fa
 16805 253d 09       		.uleb128 0x9
 16806 253e 0A250000 		.4byte	0x250a
 16807 2542 4D250000 		.4byte	0x254d
 16808 2546 0A       		.uleb128 0xa
 16809 2547 4C010000 		.4byte	0x14c
 16810 254b 06       		.byte	0x6
 16811 254c 00       		.byte	0
 16812 254d 29       		.uleb128 0x29
 16813 254e 1F050000 		.4byte	.LASF419
 16814 2552 01       		.byte	0x1
 16815 2553 5F0A     		.2byte	0xa5f
 16816 2555 5F250000 		.4byte	0x255f
 16817 2559 05       		.uleb128 0x5
 16818 255a 03       		.byte	0x3
 16819 255b 00000000 		.4byte	settingsNames
 16820 255f 08       		.uleb128 0x8
 16821 2560 3D250000 		.4byte	0x253d
 16822 2564 29       		.uleb128 0x29
 16823 2565 4A030000 		.4byte	.LASF420
 16824 2569 01       		.byte	0x1
 16825 256a 600A     		.2byte	0xa60
 16826 256c B8000000 		.4byte	0xb8
 16827 2570 05       		.uleb128 0x5
 16828 2571 03       		.byte	0x3
 16829 2572 00000000 		.4byte	numMainMenuItems
 16830 2576 29       		.uleb128 0x29
 16831 2577 85040000 		.4byte	.LASF421
 16832 257b 01       		.byte	0x1
 16833 257c 610A     		.2byte	0xa61
 16834 257e B8000000 		.4byte	0xb8
 16835 2582 05       		.uleb128 0x5
 16836 2583 03       		.byte	0x3
 16837 2584 00000000 		.4byte	numCalibrationItems
 16838 2588 29       		.uleb128 0x29
 16839 2589 BF000000 		.4byte	.LASF422
 16840 258d 01       		.byte	0x1
 16841 258e 620A     		.2byte	0xa62
 16842 2590 B8000000 		.4byte	0xb8
 16843 2594 05       		.uleb128 0x5
 16844 2595 03       		.byte	0x3
 16845 2596 00000000 		.4byte	numSettingsItems
 16846 259a 29       		.uleb128 0x29
 16847 259b 1E070000 		.4byte	.LASF423
 16848 259f 01       		.byte	0x1
 16849 25a0 940A     		.2byte	0xa94
 16850 25a2 B8000000 		.4byte	0xb8
 16851 25a6 05       		.uleb128 0x5
 16852 25a7 03       		.byte	0x3
 16853 25a8 00000000 		.4byte	fretToCalibrate
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 356


 16854 25ac 29       		.uleb128 0x29
 16855 25ad 80010000 		.4byte	.LASF424
 16856 25b1 01       		.byte	0x1
 16857 25b2 950A     		.2byte	0xa95
 16858 25b4 7D1E0000 		.4byte	0x1e7d
 16859 25b8 05       		.uleb128 0x5
 16860 25b9 03       		.byte	0x3
 16861 25ba 00000000 		.4byte	whichFretArray
 16862 25be 00       		.byte	0
 16863              		.section	.debug_abbrev,"",%progbits
 16864              	.Ldebug_abbrev0:
 16865 0000 01       		.uleb128 0x1
 16866 0001 11       		.uleb128 0x11
 16867 0002 01       		.byte	0x1
 16868 0003 25       		.uleb128 0x25
 16869 0004 0E       		.uleb128 0xe
 16870 0005 13       		.uleb128 0x13
 16871 0006 0B       		.uleb128 0xb
 16872 0007 03       		.uleb128 0x3
 16873 0008 0E       		.uleb128 0xe
 16874 0009 1B       		.uleb128 0x1b
 16875 000a 0E       		.uleb128 0xe
 16876 000b 55       		.uleb128 0x55
 16877 000c 17       		.uleb128 0x17
 16878 000d 11       		.uleb128 0x11
 16879 000e 01       		.uleb128 0x1
 16880 000f 10       		.uleb128 0x10
 16881 0010 17       		.uleb128 0x17
 16882 0011 00       		.byte	0
 16883 0012 00       		.byte	0
 16884 0013 02       		.uleb128 0x2
 16885 0014 16       		.uleb128 0x16
 16886 0015 00       		.byte	0
 16887 0016 03       		.uleb128 0x3
 16888 0017 0E       		.uleb128 0xe
 16889 0018 3A       		.uleb128 0x3a
 16890 0019 0B       		.uleb128 0xb
 16891 001a 3B       		.uleb128 0x3b
 16892 001b 0B       		.uleb128 0xb
 16893 001c 49       		.uleb128 0x49
 16894 001d 13       		.uleb128 0x13
 16895 001e 00       		.byte	0
 16896 001f 00       		.byte	0
 16897 0020 03       		.uleb128 0x3
 16898 0021 24       		.uleb128 0x24
 16899 0022 00       		.byte	0
 16900 0023 0B       		.uleb128 0xb
 16901 0024 0B       		.uleb128 0xb
 16902 0025 3E       		.uleb128 0x3e
 16903 0026 0B       		.uleb128 0xb
 16904 0027 03       		.uleb128 0x3
 16905 0028 0E       		.uleb128 0xe
 16906 0029 00       		.byte	0
 16907 002a 00       		.byte	0
 16908 002b 04       		.uleb128 0x4
 16909 002c 24       		.uleb128 0x24
 16910 002d 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 357


 16911 002e 0B       		.uleb128 0xb
 16912 002f 0B       		.uleb128 0xb
 16913 0030 3E       		.uleb128 0x3e
 16914 0031 0B       		.uleb128 0xb
 16915 0032 03       		.uleb128 0x3
 16916 0033 08       		.uleb128 0x8
 16917 0034 00       		.byte	0
 16918 0035 00       		.byte	0
 16919 0036 05       		.uleb128 0x5
 16920 0037 16       		.uleb128 0x16
 16921 0038 00       		.byte	0
 16922 0039 03       		.uleb128 0x3
 16923 003a 0E       		.uleb128 0xe
 16924 003b 3A       		.uleb128 0x3a
 16925 003c 0B       		.uleb128 0xb
 16926 003d 3B       		.uleb128 0x3b
 16927 003e 05       		.uleb128 0x5
 16928 003f 49       		.uleb128 0x49
 16929 0040 13       		.uleb128 0x13
 16930 0041 00       		.byte	0
 16931 0042 00       		.byte	0
 16932 0043 06       		.uleb128 0x6
 16933 0044 35       		.uleb128 0x35
 16934 0045 00       		.byte	0
 16935 0046 49       		.uleb128 0x49
 16936 0047 13       		.uleb128 0x13
 16937 0048 00       		.byte	0
 16938 0049 00       		.byte	0
 16939 004a 07       		.uleb128 0x7
 16940 004b 0F       		.uleb128 0xf
 16941 004c 00       		.byte	0
 16942 004d 0B       		.uleb128 0xb
 16943 004e 0B       		.uleb128 0xb
 16944 004f 49       		.uleb128 0x49
 16945 0050 13       		.uleb128 0x13
 16946 0051 00       		.byte	0
 16947 0052 00       		.byte	0
 16948 0053 08       		.uleb128 0x8
 16949 0054 26       		.uleb128 0x26
 16950 0055 00       		.byte	0
 16951 0056 49       		.uleb128 0x49
 16952 0057 13       		.uleb128 0x13
 16953 0058 00       		.byte	0
 16954 0059 00       		.byte	0
 16955 005a 09       		.uleb128 0x9
 16956 005b 01       		.uleb128 0x1
 16957 005c 01       		.byte	0x1
 16958 005d 49       		.uleb128 0x49
 16959 005e 13       		.uleb128 0x13
 16960 005f 01       		.uleb128 0x1
 16961 0060 13       		.uleb128 0x13
 16962 0061 00       		.byte	0
 16963 0062 00       		.byte	0
 16964 0063 0A       		.uleb128 0xa
 16965 0064 21       		.uleb128 0x21
 16966 0065 00       		.byte	0
 16967 0066 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 358


 16968 0067 13       		.uleb128 0x13
 16969 0068 2F       		.uleb128 0x2f
 16970 0069 0B       		.uleb128 0xb
 16971 006a 00       		.byte	0
 16972 006b 00       		.byte	0
 16973 006c 0B       		.uleb128 0xb
 16974 006d 13       		.uleb128 0x13
 16975 006e 01       		.byte	0x1
 16976 006f 0B       		.uleb128 0xb
 16977 0070 0B       		.uleb128 0xb
 16978 0071 3A       		.uleb128 0x3a
 16979 0072 0B       		.uleb128 0xb
 16980 0073 3B       		.uleb128 0x3b
 16981 0074 05       		.uleb128 0x5
 16982 0075 01       		.uleb128 0x1
 16983 0076 13       		.uleb128 0x13
 16984 0077 00       		.byte	0
 16985 0078 00       		.byte	0
 16986 0079 0C       		.uleb128 0xc
 16987 007a 0D       		.uleb128 0xd
 16988 007b 00       		.byte	0
 16989 007c 03       		.uleb128 0x3
 16990 007d 0E       		.uleb128 0xe
 16991 007e 3A       		.uleb128 0x3a
 16992 007f 0B       		.uleb128 0xb
 16993 0080 3B       		.uleb128 0x3b
 16994 0081 05       		.uleb128 0x5
 16995 0082 49       		.uleb128 0x49
 16996 0083 13       		.uleb128 0x13
 16997 0084 38       		.uleb128 0x38
 16998 0085 0B       		.uleb128 0xb
 16999 0086 00       		.byte	0
 17000 0087 00       		.byte	0
 17001 0088 0D       		.uleb128 0xd
 17002 0089 04       		.uleb128 0x4
 17003 008a 01       		.byte	0x1
 17004 008b 0B       		.uleb128 0xb
 17005 008c 0B       		.uleb128 0xb
 17006 008d 49       		.uleb128 0x49
 17007 008e 13       		.uleb128 0x13
 17008 008f 3A       		.uleb128 0x3a
 17009 0090 0B       		.uleb128 0xb
 17010 0091 3B       		.uleb128 0x3b
 17011 0092 05       		.uleb128 0x5
 17012 0093 01       		.uleb128 0x1
 17013 0094 13       		.uleb128 0x13
 17014 0095 00       		.byte	0
 17015 0096 00       		.byte	0
 17016 0097 0E       		.uleb128 0xe
 17017 0098 28       		.uleb128 0x28
 17018 0099 00       		.byte	0
 17019 009a 03       		.uleb128 0x3
 17020 009b 0E       		.uleb128 0xe
 17021 009c 1C       		.uleb128 0x1c
 17022 009d 0B       		.uleb128 0xb
 17023 009e 00       		.byte	0
 17024 009f 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 359


 17025 00a0 0F       		.uleb128 0xf
 17026 00a1 13       		.uleb128 0x13
 17027 00a2 01       		.byte	0x1
 17028 00a3 0B       		.uleb128 0xb
 17029 00a4 0B       		.uleb128 0xb
 17030 00a5 3A       		.uleb128 0x3a
 17031 00a6 0B       		.uleb128 0xb
 17032 00a7 3B       		.uleb128 0x3b
 17033 00a8 0B       		.uleb128 0xb
 17034 00a9 01       		.uleb128 0x1
 17035 00aa 13       		.uleb128 0x13
 17036 00ab 00       		.byte	0
 17037 00ac 00       		.byte	0
 17038 00ad 10       		.uleb128 0x10
 17039 00ae 0D       		.uleb128 0xd
 17040 00af 00       		.byte	0
 17041 00b0 03       		.uleb128 0x3
 17042 00b1 0E       		.uleb128 0xe
 17043 00b2 3A       		.uleb128 0x3a
 17044 00b3 0B       		.uleb128 0xb
 17045 00b4 3B       		.uleb128 0x3b
 17046 00b5 0B       		.uleb128 0xb
 17047 00b6 49       		.uleb128 0x49
 17048 00b7 13       		.uleb128 0x13
 17049 00b8 38       		.uleb128 0x38
 17050 00b9 0B       		.uleb128 0xb
 17051 00ba 00       		.byte	0
 17052 00bb 00       		.byte	0
 17053 00bc 11       		.uleb128 0x11
 17054 00bd 13       		.uleb128 0x13
 17055 00be 01       		.byte	0x1
 17056 00bf 03       		.uleb128 0x3
 17057 00c0 0E       		.uleb128 0xe
 17058 00c1 0B       		.uleb128 0xb
 17059 00c2 0B       		.uleb128 0xb
 17060 00c3 3A       		.uleb128 0x3a
 17061 00c4 0B       		.uleb128 0xb
 17062 00c5 3B       		.uleb128 0x3b
 17063 00c6 0B       		.uleb128 0xb
 17064 00c7 01       		.uleb128 0x1
 17065 00c8 13       		.uleb128 0x13
 17066 00c9 00       		.byte	0
 17067 00ca 00       		.byte	0
 17068 00cb 12       		.uleb128 0x12
 17069 00cc 16       		.uleb128 0x16
 17070 00cd 00       		.byte	0
 17071 00ce 03       		.uleb128 0x3
 17072 00cf 08       		.uleb128 0x8
 17073 00d0 3A       		.uleb128 0x3a
 17074 00d1 0B       		.uleb128 0xb
 17075 00d2 3B       		.uleb128 0x3b
 17076 00d3 0B       		.uleb128 0xb
 17077 00d4 49       		.uleb128 0x49
 17078 00d5 13       		.uleb128 0x13
 17079 00d6 00       		.byte	0
 17080 00d7 00       		.byte	0
 17081 00d8 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 360


 17082 00d9 04       		.uleb128 0x4
 17083 00da 01       		.byte	0x1
 17084 00db 03       		.uleb128 0x3
 17085 00dc 0E       		.uleb128 0xe
 17086 00dd 0B       		.uleb128 0xb
 17087 00de 0B       		.uleb128 0xb
 17088 00df 49       		.uleb128 0x49
 17089 00e0 13       		.uleb128 0x13
 17090 00e1 3A       		.uleb128 0x3a
 17091 00e2 0B       		.uleb128 0xb
 17092 00e3 3B       		.uleb128 0x3b
 17093 00e4 0B       		.uleb128 0xb
 17094 00e5 01       		.uleb128 0x1
 17095 00e6 13       		.uleb128 0x13
 17096 00e7 00       		.byte	0
 17097 00e8 00       		.byte	0
 17098 00e9 14       		.uleb128 0x14
 17099 00ea 17       		.uleb128 0x17
 17100 00eb 01       		.byte	0x1
 17101 00ec 03       		.uleb128 0x3
 17102 00ed 0E       		.uleb128 0xe
 17103 00ee 0B       		.uleb128 0xb
 17104 00ef 0B       		.uleb128 0xb
 17105 00f0 3A       		.uleb128 0x3a
 17106 00f1 0B       		.uleb128 0xb
 17107 00f2 3B       		.uleb128 0x3b
 17108 00f3 0B       		.uleb128 0xb
 17109 00f4 01       		.uleb128 0x1
 17110 00f5 13       		.uleb128 0x13
 17111 00f6 00       		.byte	0
 17112 00f7 00       		.byte	0
 17113 00f8 15       		.uleb128 0x15
 17114 00f9 0D       		.uleb128 0xd
 17115 00fa 00       		.byte	0
 17116 00fb 03       		.uleb128 0x3
 17117 00fc 08       		.uleb128 0x8
 17118 00fd 3A       		.uleb128 0x3a
 17119 00fe 0B       		.uleb128 0xb
 17120 00ff 3B       		.uleb128 0x3b
 17121 0100 0B       		.uleb128 0xb
 17122 0101 49       		.uleb128 0x49
 17123 0102 13       		.uleb128 0x13
 17124 0103 00       		.byte	0
 17125 0104 00       		.byte	0
 17126 0105 16       		.uleb128 0x16
 17127 0106 04       		.uleb128 0x4
 17128 0107 01       		.byte	0x1
 17129 0108 03       		.uleb128 0x3
 17130 0109 0E       		.uleb128 0xe
 17131 010a 0B       		.uleb128 0xb
 17132 010b 0B       		.uleb128 0xb
 17133 010c 49       		.uleb128 0x49
 17134 010d 13       		.uleb128 0x13
 17135 010e 3A       		.uleb128 0x3a
 17136 010f 0B       		.uleb128 0xb
 17137 0110 3B       		.uleb128 0x3b
 17138 0111 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 361


 17139 0112 01       		.uleb128 0x1
 17140 0113 13       		.uleb128 0x13
 17141 0114 00       		.byte	0
 17142 0115 00       		.byte	0
 17143 0116 17       		.uleb128 0x17
 17144 0117 28       		.uleb128 0x28
 17145 0118 00       		.byte	0
 17146 0119 03       		.uleb128 0x3
 17147 011a 08       		.uleb128 0x8
 17148 011b 1C       		.uleb128 0x1c
 17149 011c 0B       		.uleb128 0xb
 17150 011d 00       		.byte	0
 17151 011e 00       		.byte	0
 17152 011f 18       		.uleb128 0x18
 17153 0120 2E       		.uleb128 0x2e
 17154 0121 01       		.byte	0x1
 17155 0122 3F       		.uleb128 0x3f
 17156 0123 19       		.uleb128 0x19
 17157 0124 03       		.uleb128 0x3
 17158 0125 0E       		.uleb128 0xe
 17159 0126 3A       		.uleb128 0x3a
 17160 0127 0B       		.uleb128 0xb
 17161 0128 3B       		.uleb128 0x3b
 17162 0129 0B       		.uleb128 0xb
 17163 012a 27       		.uleb128 0x27
 17164 012b 19       		.uleb128 0x19
 17165 012c 11       		.uleb128 0x11
 17166 012d 01       		.uleb128 0x1
 17167 012e 12       		.uleb128 0x12
 17168 012f 06       		.uleb128 0x6
 17169 0130 40       		.uleb128 0x40
 17170 0131 18       		.uleb128 0x18
 17171 0132 9642     		.uleb128 0x2116
 17172 0134 19       		.uleb128 0x19
 17173 0135 01       		.uleb128 0x1
 17174 0136 13       		.uleb128 0x13
 17175 0137 00       		.byte	0
 17176 0138 00       		.byte	0
 17177 0139 19       		.uleb128 0x19
 17178 013a 0B       		.uleb128 0xb
 17179 013b 01       		.byte	0x1
 17180 013c 11       		.uleb128 0x11
 17181 013d 01       		.uleb128 0x1
 17182 013e 12       		.uleb128 0x12
 17183 013f 06       		.uleb128 0x6
 17184 0140 00       		.byte	0
 17185 0141 00       		.byte	0
 17186 0142 1A       		.uleb128 0x1a
 17187 0143 34       		.uleb128 0x34
 17188 0144 00       		.byte	0
 17189 0145 03       		.uleb128 0x3
 17190 0146 08       		.uleb128 0x8
 17191 0147 3A       		.uleb128 0x3a
 17192 0148 0B       		.uleb128 0xb
 17193 0149 3B       		.uleb128 0x3b
 17194 014a 0B       		.uleb128 0xb
 17195 014b 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 362


 17196 014c 13       		.uleb128 0x13
 17197 014d 02       		.uleb128 0x2
 17198 014e 18       		.uleb128 0x18
 17199 014f 00       		.byte	0
 17200 0150 00       		.byte	0
 17201 0151 1B       		.uleb128 0x1b
 17202 0152 2E       		.uleb128 0x2e
 17203 0153 00       		.byte	0
 17204 0154 3F       		.uleb128 0x3f
 17205 0155 19       		.uleb128 0x19
 17206 0156 03       		.uleb128 0x3
 17207 0157 0E       		.uleb128 0xe
 17208 0158 3A       		.uleb128 0x3a
 17209 0159 0B       		.uleb128 0xb
 17210 015a 3B       		.uleb128 0x3b
 17211 015b 05       		.uleb128 0x5
 17212 015c 27       		.uleb128 0x27
 17213 015d 19       		.uleb128 0x19
 17214 015e 11       		.uleb128 0x11
 17215 015f 01       		.uleb128 0x1
 17216 0160 12       		.uleb128 0x12
 17217 0161 06       		.uleb128 0x6
 17218 0162 40       		.uleb128 0x40
 17219 0163 18       		.uleb128 0x18
 17220 0164 9642     		.uleb128 0x2116
 17221 0166 19       		.uleb128 0x19
 17222 0167 00       		.byte	0
 17223 0168 00       		.byte	0
 17224 0169 1C       		.uleb128 0x1c
 17225 016a 2E       		.uleb128 0x2e
 17226 016b 01       		.byte	0x1
 17227 016c 3F       		.uleb128 0x3f
 17228 016d 19       		.uleb128 0x19
 17229 016e 03       		.uleb128 0x3
 17230 016f 0E       		.uleb128 0xe
 17231 0170 3A       		.uleb128 0x3a
 17232 0171 0B       		.uleb128 0xb
 17233 0172 3B       		.uleb128 0x3b
 17234 0173 05       		.uleb128 0x5
 17235 0174 27       		.uleb128 0x27
 17236 0175 19       		.uleb128 0x19
 17237 0176 49       		.uleb128 0x49
 17238 0177 13       		.uleb128 0x13
 17239 0178 11       		.uleb128 0x11
 17240 0179 01       		.uleb128 0x1
 17241 017a 12       		.uleb128 0x12
 17242 017b 06       		.uleb128 0x6
 17243 017c 40       		.uleb128 0x40
 17244 017d 18       		.uleb128 0x18
 17245 017e 9642     		.uleb128 0x2116
 17246 0180 19       		.uleb128 0x19
 17247 0181 01       		.uleb128 0x1
 17248 0182 13       		.uleb128 0x13
 17249 0183 00       		.byte	0
 17250 0184 00       		.byte	0
 17251 0185 1D       		.uleb128 0x1d
 17252 0186 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 363


 17253 0187 00       		.byte	0
 17254 0188 03       		.uleb128 0x3
 17255 0189 08       		.uleb128 0x8
 17256 018a 3A       		.uleb128 0x3a
 17257 018b 0B       		.uleb128 0xb
 17258 018c 3B       		.uleb128 0x3b
 17259 018d 05       		.uleb128 0x5
 17260 018e 49       		.uleb128 0x49
 17261 018f 13       		.uleb128 0x13
 17262 0190 02       		.uleb128 0x2
 17263 0191 18       		.uleb128 0x18
 17264 0192 00       		.byte	0
 17265 0193 00       		.byte	0
 17266 0194 1E       		.uleb128 0x1e
 17267 0195 34       		.uleb128 0x34
 17268 0196 00       		.byte	0
 17269 0197 03       		.uleb128 0x3
 17270 0198 0E       		.uleb128 0xe
 17271 0199 3A       		.uleb128 0x3a
 17272 019a 0B       		.uleb128 0xb
 17273 019b 3B       		.uleb128 0x3b
 17274 019c 05       		.uleb128 0x5
 17275 019d 49       		.uleb128 0x49
 17276 019e 13       		.uleb128 0x13
 17277 019f 02       		.uleb128 0x2
 17278 01a0 18       		.uleb128 0x18
 17279 01a1 00       		.byte	0
 17280 01a2 00       		.byte	0
 17281 01a3 1F       		.uleb128 0x1f
 17282 01a4 05       		.uleb128 0x5
 17283 01a5 00       		.byte	0
 17284 01a6 03       		.uleb128 0x3
 17285 01a7 0E       		.uleb128 0xe
 17286 01a8 3A       		.uleb128 0x3a
 17287 01a9 0B       		.uleb128 0xb
 17288 01aa 3B       		.uleb128 0x3b
 17289 01ab 05       		.uleb128 0x5
 17290 01ac 49       		.uleb128 0x49
 17291 01ad 13       		.uleb128 0x13
 17292 01ae 02       		.uleb128 0x2
 17293 01af 18       		.uleb128 0x18
 17294 01b0 00       		.byte	0
 17295 01b1 00       		.byte	0
 17296 01b2 20       		.uleb128 0x20
 17297 01b3 34       		.uleb128 0x34
 17298 01b4 00       		.byte	0
 17299 01b5 03       		.uleb128 0x3
 17300 01b6 08       		.uleb128 0x8
 17301 01b7 3A       		.uleb128 0x3a
 17302 01b8 0B       		.uleb128 0xb
 17303 01b9 3B       		.uleb128 0x3b
 17304 01ba 05       		.uleb128 0x5
 17305 01bb 49       		.uleb128 0x49
 17306 01bc 13       		.uleb128 0x13
 17307 01bd 02       		.uleb128 0x2
 17308 01be 18       		.uleb128 0x18
 17309 01bf 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 364


 17310 01c0 00       		.byte	0
 17311 01c1 21       		.uleb128 0x21
 17312 01c2 2E       		.uleb128 0x2e
 17313 01c3 01       		.byte	0x1
 17314 01c4 3F       		.uleb128 0x3f
 17315 01c5 19       		.uleb128 0x19
 17316 01c6 03       		.uleb128 0x3
 17317 01c7 08       		.uleb128 0x8
 17318 01c8 3A       		.uleb128 0x3a
 17319 01c9 0B       		.uleb128 0xb
 17320 01ca 3B       		.uleb128 0x3b
 17321 01cb 05       		.uleb128 0x5
 17322 01cc 27       		.uleb128 0x27
 17323 01cd 19       		.uleb128 0x19
 17324 01ce 49       		.uleb128 0x49
 17325 01cf 13       		.uleb128 0x13
 17326 01d0 11       		.uleb128 0x11
 17327 01d1 01       		.uleb128 0x1
 17328 01d2 12       		.uleb128 0x12
 17329 01d3 06       		.uleb128 0x6
 17330 01d4 40       		.uleb128 0x40
 17331 01d5 18       		.uleb128 0x18
 17332 01d6 9642     		.uleb128 0x2116
 17333 01d8 19       		.uleb128 0x19
 17334 01d9 01       		.uleb128 0x1
 17335 01da 13       		.uleb128 0x13
 17336 01db 00       		.byte	0
 17337 01dc 00       		.byte	0
 17338 01dd 22       		.uleb128 0x22
 17339 01de 2E       		.uleb128 0x2e
 17340 01df 00       		.byte	0
 17341 01e0 3F       		.uleb128 0x3f
 17342 01e1 19       		.uleb128 0x19
 17343 01e2 03       		.uleb128 0x3
 17344 01e3 0E       		.uleb128 0xe
 17345 01e4 3A       		.uleb128 0x3a
 17346 01e5 0B       		.uleb128 0xb
 17347 01e6 3B       		.uleb128 0x3b
 17348 01e7 05       		.uleb128 0x5
 17349 01e8 11       		.uleb128 0x11
 17350 01e9 01       		.uleb128 0x1
 17351 01ea 12       		.uleb128 0x12
 17352 01eb 06       		.uleb128 0x6
 17353 01ec 40       		.uleb128 0x40
 17354 01ed 18       		.uleb128 0x18
 17355 01ee 9742     		.uleb128 0x2117
 17356 01f0 19       		.uleb128 0x19
 17357 01f1 00       		.byte	0
 17358 01f2 00       		.byte	0
 17359 01f3 23       		.uleb128 0x23
 17360 01f4 2E       		.uleb128 0x2e
 17361 01f5 01       		.byte	0x1
 17362 01f6 3F       		.uleb128 0x3f
 17363 01f7 19       		.uleb128 0x19
 17364 01f8 03       		.uleb128 0x3
 17365 01f9 0E       		.uleb128 0xe
 17366 01fa 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 365


 17367 01fb 0B       		.uleb128 0xb
 17368 01fc 3B       		.uleb128 0x3b
 17369 01fd 05       		.uleb128 0x5
 17370 01fe 11       		.uleb128 0x11
 17371 01ff 01       		.uleb128 0x1
 17372 0200 12       		.uleb128 0x12
 17373 0201 06       		.uleb128 0x6
 17374 0202 40       		.uleb128 0x40
 17375 0203 18       		.uleb128 0x18
 17376 0204 9642     		.uleb128 0x2116
 17377 0206 19       		.uleb128 0x19
 17378 0207 01       		.uleb128 0x1
 17379 0208 13       		.uleb128 0x13
 17380 0209 00       		.byte	0
 17381 020a 00       		.byte	0
 17382 020b 24       		.uleb128 0x24
 17383 020c 0B       		.uleb128 0xb
 17384 020d 01       		.byte	0x1
 17385 020e 11       		.uleb128 0x11
 17386 020f 01       		.uleb128 0x1
 17387 0210 12       		.uleb128 0x12
 17388 0211 06       		.uleb128 0x6
 17389 0212 01       		.uleb128 0x1
 17390 0213 13       		.uleb128 0x13
 17391 0214 00       		.byte	0
 17392 0215 00       		.byte	0
 17393 0216 25       		.uleb128 0x25
 17394 0217 2E       		.uleb128 0x2e
 17395 0218 01       		.byte	0x1
 17396 0219 3F       		.uleb128 0x3f
 17397 021a 19       		.uleb128 0x19
 17398 021b 03       		.uleb128 0x3
 17399 021c 0E       		.uleb128 0xe
 17400 021d 3A       		.uleb128 0x3a
 17401 021e 0B       		.uleb128 0xb
 17402 021f 3B       		.uleb128 0x3b
 17403 0220 05       		.uleb128 0x5
 17404 0221 27       		.uleb128 0x27
 17405 0222 19       		.uleb128 0x19
 17406 0223 11       		.uleb128 0x11
 17407 0224 01       		.uleb128 0x1
 17408 0225 12       		.uleb128 0x12
 17409 0226 06       		.uleb128 0x6
 17410 0227 40       		.uleb128 0x40
 17411 0228 18       		.uleb128 0x18
 17412 0229 9642     		.uleb128 0x2116
 17413 022b 19       		.uleb128 0x19
 17414 022c 01       		.uleb128 0x1
 17415 022d 13       		.uleb128 0x13
 17416 022e 00       		.byte	0
 17417 022f 00       		.byte	0
 17418 0230 26       		.uleb128 0x26
 17419 0231 2E       		.uleb128 0x2e
 17420 0232 00       		.byte	0
 17421 0233 3F       		.uleb128 0x3f
 17422 0234 19       		.uleb128 0x19
 17423 0235 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 366


 17424 0236 0E       		.uleb128 0xe
 17425 0237 3A       		.uleb128 0x3a
 17426 0238 0B       		.uleb128 0xb
 17427 0239 3B       		.uleb128 0x3b
 17428 023a 05       		.uleb128 0x5
 17429 023b 11       		.uleb128 0x11
 17430 023c 01       		.uleb128 0x1
 17431 023d 12       		.uleb128 0x12
 17432 023e 06       		.uleb128 0x6
 17433 023f 40       		.uleb128 0x40
 17434 0240 18       		.uleb128 0x18
 17435 0241 9642     		.uleb128 0x2116
 17436 0243 19       		.uleb128 0x19
 17437 0244 00       		.byte	0
 17438 0245 00       		.byte	0
 17439 0246 27       		.uleb128 0x27
 17440 0247 34       		.uleb128 0x34
 17441 0248 00       		.byte	0
 17442 0249 03       		.uleb128 0x3
 17443 024a 0E       		.uleb128 0xe
 17444 024b 3A       		.uleb128 0x3a
 17445 024c 0B       		.uleb128 0xb
 17446 024d 3B       		.uleb128 0x3b
 17447 024e 0B       		.uleb128 0xb
 17448 024f 49       		.uleb128 0x49
 17449 0250 13       		.uleb128 0x13
 17450 0251 3F       		.uleb128 0x3f
 17451 0252 19       		.uleb128 0x19
 17452 0253 3C       		.uleb128 0x3c
 17453 0254 19       		.uleb128 0x19
 17454 0255 00       		.byte	0
 17455 0256 00       		.byte	0
 17456 0257 28       		.uleb128 0x28
 17457 0258 21       		.uleb128 0x21
 17458 0259 00       		.byte	0
 17459 025a 49       		.uleb128 0x49
 17460 025b 13       		.uleb128 0x13
 17461 025c 2F       		.uleb128 0x2f
 17462 025d 05       		.uleb128 0x5
 17463 025e 00       		.byte	0
 17464 025f 00       		.byte	0
 17465 0260 29       		.uleb128 0x29
 17466 0261 34       		.uleb128 0x34
 17467 0262 00       		.byte	0
 17468 0263 03       		.uleb128 0x3
 17469 0264 0E       		.uleb128 0xe
 17470 0265 3A       		.uleb128 0x3a
 17471 0266 0B       		.uleb128 0xb
 17472 0267 3B       		.uleb128 0x3b
 17473 0268 05       		.uleb128 0x5
 17474 0269 49       		.uleb128 0x49
 17475 026a 13       		.uleb128 0x13
 17476 026b 3F       		.uleb128 0x3f
 17477 026c 19       		.uleb128 0x19
 17478 026d 02       		.uleb128 0x2
 17479 026e 18       		.uleb128 0x18
 17480 026f 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 367


 17481 0270 00       		.byte	0
 17482 0271 2A       		.uleb128 0x2a
 17483 0272 34       		.uleb128 0x34
 17484 0273 00       		.byte	0
 17485 0274 03       		.uleb128 0x3
 17486 0275 0E       		.uleb128 0xe
 17487 0276 3A       		.uleb128 0x3a
 17488 0277 0B       		.uleb128 0xb
 17489 0278 3B       		.uleb128 0x3b
 17490 0279 05       		.uleb128 0x5
 17491 027a 49       		.uleb128 0x49
 17492 027b 13       		.uleb128 0x13
 17493 027c 3F       		.uleb128 0x3f
 17494 027d 19       		.uleb128 0x19
 17495 027e 3C       		.uleb128 0x3c
 17496 027f 19       		.uleb128 0x19
 17497 0280 00       		.byte	0
 17498 0281 00       		.byte	0
 17499 0282 2B       		.uleb128 0x2b
 17500 0283 34       		.uleb128 0x34
 17501 0284 00       		.byte	0
 17502 0285 03       		.uleb128 0x3
 17503 0286 0E       		.uleb128 0xe
 17504 0287 3A       		.uleb128 0x3a
 17505 0288 0B       		.uleb128 0xb
 17506 0289 3B       		.uleb128 0x3b
 17507 028a 0B       		.uleb128 0xb
 17508 028b 49       		.uleb128 0x49
 17509 028c 13       		.uleb128 0x13
 17510 028d 3F       		.uleb128 0x3f
 17511 028e 19       		.uleb128 0x19
 17512 028f 02       		.uleb128 0x2
 17513 0290 18       		.uleb128 0x18
 17514 0291 00       		.byte	0
 17515 0292 00       		.byte	0
 17516 0293 2C       		.uleb128 0x2c
 17517 0294 34       		.uleb128 0x34
 17518 0295 00       		.byte	0
 17519 0296 03       		.uleb128 0x3
 17520 0297 08       		.uleb128 0x8
 17521 0298 3A       		.uleb128 0x3a
 17522 0299 0B       		.uleb128 0xb
 17523 029a 3B       		.uleb128 0x3b
 17524 029b 0B       		.uleb128 0xb
 17525 029c 49       		.uleb128 0x49
 17526 029d 13       		.uleb128 0x13
 17527 029e 3F       		.uleb128 0x3f
 17528 029f 19       		.uleb128 0x19
 17529 02a0 02       		.uleb128 0x2
 17530 02a1 18       		.uleb128 0x18
 17531 02a2 00       		.byte	0
 17532 02a3 00       		.byte	0
 17533 02a4 2D       		.uleb128 0x2d
 17534 02a5 34       		.uleb128 0x34
 17535 02a6 00       		.byte	0
 17536 02a7 03       		.uleb128 0x3
 17537 02a8 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 368


 17538 02a9 3A       		.uleb128 0x3a
 17539 02aa 0B       		.uleb128 0xb
 17540 02ab 3B       		.uleb128 0x3b
 17541 02ac 05       		.uleb128 0x5
 17542 02ad 49       		.uleb128 0x49
 17543 02ae 13       		.uleb128 0x13
 17544 02af 3F       		.uleb128 0x3f
 17545 02b0 19       		.uleb128 0x19
 17546 02b1 02       		.uleb128 0x2
 17547 02b2 18       		.uleb128 0x18
 17548 02b3 00       		.byte	0
 17549 02b4 00       		.byte	0
 17550 02b5 00       		.byte	0
 17551              		.section	.debug_aranges,"",%progbits
 17552 0000 6C010000 		.4byte	0x16c
 17553 0004 0200     		.2byte	0x2
 17554 0006 00000000 		.4byte	.Ldebug_info0
 17555 000a 04       		.byte	0x4
 17556 000b 00       		.byte	0
 17557 000c 0000     		.2byte	0
 17558 000e 0000     		.2byte	0
 17559 0010 00000000 		.4byte	.LFB64
 17560 0014 74010000 		.4byte	.LFE64-.LFB64
 17561 0018 00000000 		.4byte	.LFB65
 17562 001c 9C000000 		.4byte	.LFE65-.LFB65
 17563 0020 00000000 		.4byte	.LFB66
 17564 0024 14000000 		.4byte	.LFE66-.LFB66
 17565 0028 00000000 		.4byte	.LFB67
 17566 002c 7C000000 		.4byte	.LFE67-.LFB67
 17567 0030 00000000 		.4byte	.LFB68
 17568 0034 58000000 		.4byte	.LFE68-.LFB68
 17569 0038 00000000 		.4byte	.LFB69
 17570 003c 68000000 		.4byte	.LFE69-.LFB69
 17571 0040 00000000 		.4byte	.LFB70
 17572 0044 4C000000 		.4byte	.LFE70-.LFB70
 17573 0048 00000000 		.4byte	.LFB71
 17574 004c 46000000 		.4byte	.LFE71-.LFB71
 17575 0050 00000000 		.4byte	.LFB72
 17576 0054 56000000 		.4byte	.LFE72-.LFB72
 17577 0058 00000000 		.4byte	.LFB73
 17578 005c 0C000000 		.4byte	.LFE73-.LFB73
 17579 0060 00000000 		.4byte	.LFB74
 17580 0064 08010000 		.4byte	.LFE74-.LFB74
 17581 0068 00000000 		.4byte	.LFB75
 17582 006c 141D0000 		.4byte	.LFE75-.LFB75
 17583 0070 00000000 		.4byte	.LFB76
 17584 0074 70000000 		.4byte	.LFE76-.LFB76
 17585 0078 00000000 		.4byte	.LFB77
 17586 007c 70010000 		.4byte	.LFE77-.LFB77
 17587 0080 00000000 		.4byte	.LFB78
 17588 0084 E0000000 		.4byte	.LFE78-.LFB78
 17589 0088 00000000 		.4byte	.LFB79
 17590 008c F4000000 		.4byte	.LFE79-.LFB79
 17591 0090 00000000 		.4byte	.LFB80
 17592 0094 24000000 		.4byte	.LFE80-.LFB80
 17593 0098 00000000 		.4byte	.LFB81
 17594 009c 2C010000 		.4byte	.LFE81-.LFB81
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 369


 17595 00a0 00000000 		.4byte	.LFB82
 17596 00a4 54000000 		.4byte	.LFE82-.LFB82
 17597 00a8 00000000 		.4byte	.LFB83
 17598 00ac C4000000 		.4byte	.LFE83-.LFB83
 17599 00b0 00000000 		.4byte	.LFB84
 17600 00b4 98000000 		.4byte	.LFE84-.LFB84
 17601 00b8 00000000 		.4byte	.LFB85
 17602 00bc D4000000 		.4byte	.LFE85-.LFB85
 17603 00c0 00000000 		.4byte	.LFB86
 17604 00c4 1C000000 		.4byte	.LFE86-.LFB86
 17605 00c8 00000000 		.4byte	.LFB87
 17606 00cc 68000000 		.4byte	.LFE87-.LFB87
 17607 00d0 00000000 		.4byte	.LFB88
 17608 00d4 68000000 		.4byte	.LFE88-.LFB88
 17609 00d8 00000000 		.4byte	.LFB89
 17610 00dc 68000000 		.4byte	.LFE89-.LFB89
 17611 00e0 00000000 		.4byte	.LFB90
 17612 00e4 6C000000 		.4byte	.LFE90-.LFB90
 17613 00e8 00000000 		.4byte	.LFB91
 17614 00ec 64000000 		.4byte	.LFE91-.LFB91
 17615 00f0 00000000 		.4byte	.LFB92
 17616 00f4 EC0B0000 		.4byte	.LFE92-.LFB92
 17617 00f8 00000000 		.4byte	.LFB93
 17618 00fc 50010000 		.4byte	.LFE93-.LFB93
 17619 0100 00000000 		.4byte	.LFB94
 17620 0104 64060000 		.4byte	.LFE94-.LFB94
 17621 0108 00000000 		.4byte	.LFB95
 17622 010c A0000000 		.4byte	.LFE95-.LFB95
 17623 0110 00000000 		.4byte	.LFB96
 17624 0114 D8000000 		.4byte	.LFE96-.LFB96
 17625 0118 00000000 		.4byte	.LFB97
 17626 011c 00060000 		.4byte	.LFE97-.LFB97
 17627 0120 00000000 		.4byte	.LFB98
 17628 0124 98000000 		.4byte	.LFE98-.LFB98
 17629 0128 00000000 		.4byte	.LFB99
 17630 012c 94000000 		.4byte	.LFE99-.LFB99
 17631 0130 00000000 		.4byte	.LFB100
 17632 0134 4C000000 		.4byte	.LFE100-.LFB100
 17633 0138 00000000 		.4byte	.LFB101
 17634 013c 4C000000 		.4byte	.LFE101-.LFB101
 17635 0140 00000000 		.4byte	.LFB102
 17636 0144 1C000000 		.4byte	.LFE102-.LFB102
 17637 0148 00000000 		.4byte	.LFB103
 17638 014c B0000000 		.4byte	.LFE103-.LFB103
 17639 0150 00000000 		.4byte	.LFB104
 17640 0154 54010000 		.4byte	.LFE104-.LFB104
 17641 0158 00000000 		.4byte	.LFB105
 17642 015c A0000000 		.4byte	.LFE105-.LFB105
 17643 0160 00000000 		.4byte	.LFB106
 17644 0164 BC000000 		.4byte	.LFE106-.LFB106
 17645 0168 00000000 		.4byte	0
 17646 016c 00000000 		.4byte	0
 17647              		.section	.debug_ranges,"",%progbits
 17648              	.Ldebug_ranges0:
 17649 0000 00000000 		.4byte	.LFB64
 17650 0004 74010000 		.4byte	.LFE64
 17651 0008 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 370


 17652 000c 9C000000 		.4byte	.LFE65
 17653 0010 00000000 		.4byte	.LFB66
 17654 0014 14000000 		.4byte	.LFE66
 17655 0018 00000000 		.4byte	.LFB67
 17656 001c 7C000000 		.4byte	.LFE67
 17657 0020 00000000 		.4byte	.LFB68
 17658 0024 58000000 		.4byte	.LFE68
 17659 0028 00000000 		.4byte	.LFB69
 17660 002c 68000000 		.4byte	.LFE69
 17661 0030 00000000 		.4byte	.LFB70
 17662 0034 4C000000 		.4byte	.LFE70
 17663 0038 00000000 		.4byte	.LFB71
 17664 003c 46000000 		.4byte	.LFE71
 17665 0040 00000000 		.4byte	.LFB72
 17666 0044 56000000 		.4byte	.LFE72
 17667 0048 00000000 		.4byte	.LFB73
 17668 004c 0C000000 		.4byte	.LFE73
 17669 0050 00000000 		.4byte	.LFB74
 17670 0054 08010000 		.4byte	.LFE74
 17671 0058 00000000 		.4byte	.LFB75
 17672 005c 141D0000 		.4byte	.LFE75
 17673 0060 00000000 		.4byte	.LFB76
 17674 0064 70000000 		.4byte	.LFE76
 17675 0068 00000000 		.4byte	.LFB77
 17676 006c 70010000 		.4byte	.LFE77
 17677 0070 00000000 		.4byte	.LFB78
 17678 0074 E0000000 		.4byte	.LFE78
 17679 0078 00000000 		.4byte	.LFB79
 17680 007c F4000000 		.4byte	.LFE79
 17681 0080 00000000 		.4byte	.LFB80
 17682 0084 24000000 		.4byte	.LFE80
 17683 0088 00000000 		.4byte	.LFB81
 17684 008c 2C010000 		.4byte	.LFE81
 17685 0090 00000000 		.4byte	.LFB82
 17686 0094 54000000 		.4byte	.LFE82
 17687 0098 00000000 		.4byte	.LFB83
 17688 009c C4000000 		.4byte	.LFE83
 17689 00a0 00000000 		.4byte	.LFB84
 17690 00a4 98000000 		.4byte	.LFE84
 17691 00a8 00000000 		.4byte	.LFB85
 17692 00ac D4000000 		.4byte	.LFE85
 17693 00b0 00000000 		.4byte	.LFB86
 17694 00b4 1C000000 		.4byte	.LFE86
 17695 00b8 00000000 		.4byte	.LFB87
 17696 00bc 68000000 		.4byte	.LFE87
 17697 00c0 00000000 		.4byte	.LFB88
 17698 00c4 68000000 		.4byte	.LFE88
 17699 00c8 00000000 		.4byte	.LFB89
 17700 00cc 68000000 		.4byte	.LFE89
 17701 00d0 00000000 		.4byte	.LFB90
 17702 00d4 6C000000 		.4byte	.LFE90
 17703 00d8 00000000 		.4byte	.LFB91
 17704 00dc 64000000 		.4byte	.LFE91
 17705 00e0 00000000 		.4byte	.LFB92
 17706 00e4 EC0B0000 		.4byte	.LFE92
 17707 00e8 00000000 		.4byte	.LFB93
 17708 00ec 50010000 		.4byte	.LFE93
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 371


 17709 00f0 00000000 		.4byte	.LFB94
 17710 00f4 64060000 		.4byte	.LFE94
 17711 00f8 00000000 		.4byte	.LFB95
 17712 00fc A0000000 		.4byte	.LFE95
 17713 0100 00000000 		.4byte	.LFB96
 17714 0104 D8000000 		.4byte	.LFE96
 17715 0108 00000000 		.4byte	.LFB97
 17716 010c 00060000 		.4byte	.LFE97
 17717 0110 00000000 		.4byte	.LFB98
 17718 0114 98000000 		.4byte	.LFE98
 17719 0118 00000000 		.4byte	.LFB99
 17720 011c 94000000 		.4byte	.LFE99
 17721 0120 00000000 		.4byte	.LFB100
 17722 0124 4C000000 		.4byte	.LFE100
 17723 0128 00000000 		.4byte	.LFB101
 17724 012c 4C000000 		.4byte	.LFE101
 17725 0130 00000000 		.4byte	.LFB102
 17726 0134 1C000000 		.4byte	.LFE102
 17727 0138 00000000 		.4byte	.LFB103
 17728 013c B0000000 		.4byte	.LFE103
 17729 0140 00000000 		.4byte	.LFB104
 17730 0144 54010000 		.4byte	.LFE104
 17731 0148 00000000 		.4byte	.LFB105
 17732 014c A0000000 		.4byte	.LFE105
 17733 0150 00000000 		.4byte	.LFB106
 17734 0154 BC000000 		.4byte	.LFE106
 17735 0158 00000000 		.4byte	0
 17736 015c 00000000 		.4byte	0
 17737              		.section	.debug_line,"",%progbits
 17738              	.Ldebug_line0:
 17739 0000 0A0F0000 		.section	.debug_str,"MS",%progbits,1
 17739      0200CB01 
 17739      00000201 
 17739      FB0E0D00 
 17739      01010101 
 17740              	.LASF252:
 17741 0000 70726573 		.ascii	"presetArraySection\000"
 17741      65744172 
 17741      72617953 
 17741      65637469 
 17741      6F6E00
 17742              	.LASF15:
 17743 0013 696E7438 		.ascii	"int8_t\000"
 17743      5F7400
 17744              	.LASF233:
 17745 001a 70726573 		.ascii	"presetArray\000"
 17745      65744172 
 17745      72617900 
 17746              	.LASF411:
 17747 0026 66697273 		.ascii	"firstSysex\000"
 17747      74537973 
 17747      657800
 17748              	.LASF30:
 17749 0031 73697A65 		.ascii	"sizetype\000"
 17749      74797065 
 17749      00
 17750              	.LASF51:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 372


 17751 003a 784F6666 		.ascii	"xOffset\000"
 17751      73657400 
 17752              	.LASF257:
 17753 0042 73656E64 		.ascii	"sendingMessage\000"
 17753      696E674D 
 17753      65737361 
 17753      676500
 17754              	.LASF249:
 17755 0051 64656164 		.ascii	"deadzones\000"
 17755      7A6F6E65 
 17755      7300
 17756              	.LASF354:
 17757 005b 70726576 		.ascii	"prev_processed_volumePedal\000"
 17757      5F70726F 
 17757      63657373 
 17757      65645F76 
 17757      6F6C756D 
 17758              	.LASF134:
 17759 0076 74656D70 		.ascii	"tempangle\000"
 17759      616E676C 
 17759      6500
 17760              	.LASF314:
 17761 0080 6E657744 		.ascii	"newDataFlag2\000"
 17761      61746146 
 17761      6C616732 
 17761      00
 17762              	.LASF361:
 17763 008d 6D616372 		.ascii	"macroNamesArray\000"
 17763      6F4E616D 
 17763      65734172 
 17763      72617900 
 17764              	.LASF85:
 17765 009d 53657474 		.ascii	"SettingsMenu\000"
 17765      696E6773 
 17765      4D656E75 
 17765      00
 17766              	.LASF40:
 17767 00aa 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 17767      4D5F4545 
 17767      50524F4D 
 17767      5F535543 
 17767      43455353 
 17768              	.LASF422:
 17769 00bf 6E756D53 		.ascii	"numSettingsItems\000"
 17769      65747469 
 17769      6E677349 
 17769      74656D73 
 17769      00
 17770              	.LASF19:
 17771 00d0 696E7433 		.ascii	"int32_t\000"
 17771      325F7400 
 17772              	.LASF222:
 17773 00d8 456D5F45 		.ascii	"Em_EEPROM_context\000"
 17773      4550524F 
 17773      4D5F636F 
 17773      6E746578 
 17773      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 373


 17774              	.LASF78:
 17775 00ea 54686972 		.ascii	"ThirdLine\000"
 17775      644C696E 
 17775      6500
 17776              	.LASF163:
 17777 00f4 6E6F7465 		.ascii	"noteEvent\000"
 17777      4576656E 
 17777      7400
 17778              	.LASF323:
 17779 00fe 53504932 		.ascii	"SPI2errorflag\000"
 17779      6572726F 
 17779      72666C61 
 17779      6700
 17780              	.LASF47:
 17781 010c 6269746D 		.ascii	"bitmapOffset\000"
 17781      61704F66 
 17781      66736574 
 17781      00
 17782              	.LASF86:
 17783 0119 43616C69 		.ascii	"CalibrateLeversMenu\000"
 17783      62726174 
 17783      654C6576 
 17783      6572734D 
 17783      656E7500 
 17784              	.LASF23:
 17785 012d 75696E74 		.ascii	"uint32\000"
 17785      333200
 17786              	.LASF144:
 17787 0134 77686963 		.ascii	"whichMacroToStoreName\000"
 17787      684D6163 
 17787      726F546F 
 17787      53746F72 
 17787      654E616D 
 17788              	.LASF176:
 17789 014a 43437661 		.ascii	"CCval\000"
 17789      6C00
 17790              	.LASF263:
 17791 0150 6E756D4D 		.ascii	"numMappings\000"
 17791      61707069 
 17791      6E677300 
 17792              	.LASF228:
 17793 015c 49324362 		.ascii	"I2Cbuff1\000"
 17793      75666631 
 17793      00
 17794              	.LASF339:
 17795 0165 49324362 		.ascii	"I2Cbuff2\000"
 17795      75666632 
 17795      00
 17796              	.LASF198:
 17797 016e 61627354 		.ascii	"absTransposeFloat\000"
 17797      72616E73 
 17797      706F7365 
 17797      466C6F61 
 17797      7400
 17798              	.LASF424:
 17799 0180 77686963 		.ascii	"whichFretArray\000"
 17799      68467265 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 374


 17799      74417272 
 17799      617900
 17800              	.LASF397:
 17801 018f 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 17801      6F4F4C45 
 17801      44576169 
 17801      74696E67 
 17801      546F5365 
 17802              	.LASF341:
 17803 01a6 6D75785F 		.ascii	"mux_states\000"
 17803      73746174 
 17803      657300
 17804              	.LASF189:
 17805 01b1 74656D70 		.ascii	"tempLow\000"
 17805      4C6F7700 
 17806              	.LASF292:
 17807 01b9 6E65636B 		.ascii	"necks\000"
 17807      7300
 17808              	.LASF283:
 17809 01bf 6F637461 		.ascii	"octave\000"
 17809      766500
 17810              	.LASF52:
 17811 01c6 794F6666 		.ascii	"yOffset\000"
 17811      73657400 
 17812              	.LASF80:
 17813 01ce 4E696C4C 		.ascii	"NilLine\000"
 17813      696E6500 
 17814              	.LASF45:
 17815 01d6 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 17815      6E5F656D 
 17815      5F656570 
 17815      726F6D5F 
 17815      73746174 
 17816              	.LASF405:
 17817 01ef 73747269 		.ascii	"stringScaling\000"
 17817      6E675363 
 17817      616C696E 
 17817      6700
 17818              	.LASF101:
 17819 01fd 64697265 		.ascii	"direction\000"
 17819      6374696F 
 17819      6E00
 17820              	.LASF344:
 17821 0207 70656461 		.ascii	"pedals_high\000"
 17821      6C735F68 
 17821      69676800 
 17822              	.LASF150:
 17823 0213 6E627974 		.ascii	"nbytes\000"
 17823      657300
 17824              	.LASF383:
 17825 021a 636F7065 		.ascii	"copedentNamesArray\000"
 17825      64656E74 
 17825      4E616D65 
 17825      73417272 
 17825      617900
 17826              	.LASF261:
 17827 022d 76616C73 		.ascii	"valsCount\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 375


 17827      436F756E 
 17827      7400
 17828              	.LASF281:
 17829 0237 74656D70 		.ascii	"temper\000"
 17829      657200
 17830              	.LASF69:
 17831 023e 74657874 		.ascii	"textbgcolor\000"
 17831      6267636F 
 17831      6C6F7200 
 17832              	.LASF373:
 17833 024a 656E636F 		.ascii	"encoderUp\000"
 17833      64657255 
 17833      7000
 17834              	.LASF175:
 17835 0254 43436E75 		.ascii	"CCnum\000"
 17835      6D00
 17836              	.LASF42:
 17837 025a 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 17837      4D5F4545 
 17837      50524F4D 
 17837      5F424144 
 17837      5F434845 
 17838              	.LASF38:
 17839 0274 75736572 		.ascii	"userFlashStartAddr\000"
 17839      466C6173 
 17839      68537461 
 17839      72744164 
 17839      647200
 17840              	.LASF334:
 17841 0287 70726576 		.ascii	"prevMacroKnobValues7bit\000"
 17841      4D616372 
 17841      6F4B6E6F 
 17841      6256616C 
 17841      75657337 
 17842              	.LASF32:
 17843 029f 6E756D62 		.ascii	"numberOfRows\000"
 17843      65724F66 
 17843      526F7773 
 17843      00
 17844              	.LASF183:
 17845 02ac 696E7456 		.ascii	"intVal\000"
 17845      616C00
 17846              	.LASF118:
 17847 02b3 69737461 		.ascii	"istart\000"
 17847      727400
 17848              	.LASF122:
 17849 02ba 70656461 		.ascii	"pedalDiff\000"
 17849      6C446966 
 17849      6600
 17850              	.LASF180:
 17851 02c4 74686556 		.ascii	"theVal\000"
 17851      616C00
 17852              	.LASF36:
 17853 02cb 72656475 		.ascii	"redundantCopy\000"
 17853      6E64616E 
 17853      74436F70 
 17853      7900
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 376


 17854              	.LASF1:
 17855 02d9 5F5F7569 		.ascii	"__uint8_t\000"
 17855      6E74385F 
 17855      7400
 17856              	.LASF115:
 17857 02e3 616C7068 		.ascii	"alpha\000"
 17857      6100
 17858              	.LASF100:
 17859 02e9 70726573 		.ascii	"presetEnd\000"
 17859      6574456E 
 17859      6400
 17860              	.LASF338:
 17861 02f3 62617243 		.ascii	"barCount\000"
 17861      6F756E74 
 17861      00
 17862              	.LASF236:
 17863 02fc 73656E64 		.ascii	"sendMessageEnd\000"
 17863      4D657373 
 17863      61676545 
 17863      6E6400
 17864              	.LASF103:
 17865 030b 52696768 		.ascii	"Right\000"
 17865      7400
 17866              	.LASF346:
 17867 0311 70656461 		.ascii	"pedals_highWithDeadZone\000"
 17867      6C735F68 
 17867      69676857 
 17867      69746844 
 17867      6561645A 
 17868              	.LASF359:
 17869 0329 70726573 		.ascii	"presetNumberToLoad\000"
 17869      65744E75 
 17869      6D626572 
 17869      546F4C6F 
 17869      616400
 17870              	.LASF369:
 17871 033c 766F6963 		.ascii	"voice\000"
 17871      6500
 17872              	.LASF303:
 17873 0342 73747269 		.ascii	"strings\000"
 17873      6E677300 
 17874              	.LASF420:
 17875 034a 6E756D4D 		.ascii	"numMainMenuItems\000"
 17875      61696E4D 
 17875      656E7549 
 17875      74656D73 
 17875      00
 17876              	.LASF9:
 17877 035b 6C6F6E67 		.ascii	"long int\000"
 17877      20696E74 
 17877      00
 17878              	.LASF259:
 17879 0364 63757272 		.ascii	"currentFloat\000"
 17879      656E7446 
 17879      6C6F6174 
 17879      00
 17880              	.LASF360:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 377


 17881 0371 70726573 		.ascii	"presetLoadedResponse\000"
 17881      65744C6F 
 17881      61646564 
 17881      52657370 
 17881      6F6E7365 
 17882              	.LASF234:
 17883 0386 70726573 		.ascii	"presetNumberToWrite\000"
 17883      65744E75 
 17883      6D626572 
 17883      546F5772 
 17883      69746500 
 17884              	.LASF53:
 17885 039a 47465867 		.ascii	"GFXglyph\000"
 17885      6C797068 
 17885      00
 17886              	.LASF143:
 17887 03a3 77686963 		.ascii	"whichPresetToStoreName\000"
 17887      68507265 
 17887      73657454 
 17887      6F53746F 
 17887      72654E61 
 17888              	.LASF358:
 17889 03ba 70726573 		.ascii	"presetNamesArray\000"
 17889      65744E61 
 17889      6D657341 
 17889      72726179 
 17889      00
 17890              	.LASF67:
 17891 03cb 74657874 		.ascii	"textsize\000"
 17891      73697A65 
 17891      00
 17892              	.LASF384:
 17893 03d4 70726576 		.ascii	"prevStringPitchBend\000"
 17893      53747269 
 17893      6E675069 
 17893      74636842 
 17893      656E6400 
 17894              	.LASF170:
 17895 03e8 4D494449 		.ascii	"MIDInoteNum\000"
 17895      6E6F7465 
 17895      4E756D00 
 17896              	.LASF178:
 17897 03f4 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 17897      4D494449 
 17897      416C6C4E 
 17897      6F746573 
 17897      4F666600 
 17898              	.LASF152:
 17899 0408 6572726F 		.ascii	"error\000"
 17899      7200
 17900              	.LASF77:
 17901 040e 5365636F 		.ascii	"SecondLine\000"
 17901      6E644C69 
 17901      6E6500
 17902              	.LASF362:
 17903 0419 66726574 		.ascii	"fretScaling\000"
 17903      5363616C 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 378


 17903      696E6700 
 17904              	.LASF258:
 17905 0425 73656E64 		.ascii	"sendKnobs\000"
 17905      4B6E6F62 
 17905      7300
 17906              	.LASF94:
 17907 042f 70726573 		.ascii	"presetArraySectionState\000"
 17907      65744172 
 17907      72617953 
 17907      65637469 
 17907      6F6E5374 
 17908              	.LASF105:
 17909 0447 456E7465 		.ascii	"Enter\000"
 17909      7200
 17910              	.LASF246:
 17911 044d 6D696469 		.ascii	"midiBarSendOn\000"
 17911      42617253 
 17911      656E644F 
 17911      6E00
 17912              	.LASF325:
 17913 045b 6B6E6F62 		.ascii	"knobs\000"
 17913      7300
 17914              	.LASF230:
 17915 0461 73797365 		.ascii	"sysexPointer\000"
 17915      78506F69 
 17915      6E746572 
 17915      00
 17916              	.LASF116:
 17917 046e 6F6D416C 		.ascii	"omAlpha\000"
 17917      70686100 
 17918              	.LASF129:
 17919 0476 73747269 		.ascii	"stringStartLoc\000"
 17919      6E675374 
 17919      6172744C 
 17919      6F6300
 17920              	.LASF421:
 17921 0485 6E756D43 		.ascii	"numCalibrationItems\000"
 17921      616C6962 
 17921      72617469 
 17921      6F6E4974 
 17921      656D7300 
 17922              	.LASF2:
 17923 0499 7369676E 		.ascii	"signed char\000"
 17923      65642063 
 17923      68617200 
 17924              	.LASF16:
 17925 04a5 75696E74 		.ascii	"uint8_t\000"
 17925      385F7400 
 17926              	.LASF416:
 17927 04ad 73656D69 		.ascii	"semitonesOrCents\000"
 17927      746F6E65 
 17927      734F7243 
 17927      656E7473 
 17927      00
 17928              	.LASF31:
 17929 04be 776C456E 		.ascii	"wlEndAddr\000"
 17929      64416464 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 379


 17929      7200
 17930              	.LASF61:
 17931 04c8 48454947 		.ascii	"HEIGHT\000"
 17931      485400
 17932              	.LASF102:
 17933 04cf 4C656674 		.ascii	"Left\000"
 17933      00
 17934              	.LASF401:
 17935 04d4 6E65636B 		.ascii	"neckByte\000"
 17935      42797465 
 17935      00
 17936              	.LASF191:
 17937 04dd 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 17937      63616C6C 
 17937      6261636B 
 17937      4C6F6361 
 17937      6C4D6964 
 17938              	.LASF203:
 17939 04f8 61637469 		.ascii	"action\000"
 17939      6F6E00
 17940              	.LASF162:
 17941 04ff 73706973 		.ascii	"spis_1_ss\000"
 17941      5F315F73 
 17941      7300
 17942              	.LASF43:
 17943 0509 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 17943      4D5F4545 
 17943      50524F4D 
 17943      5F424144 
 17943      5F444154 
 17944              	.LASF419:
 17945 051f 73657474 		.ascii	"settingsNames\000"
 17945      696E6773 
 17945      4E616D65 
 17945      7300
 17946              	.LASF81:
 17947 052d 5F4F4C45 		.ascii	"_OLEDLine\000"
 17947      444C696E 
 17947      6500
 17948              	.LASF260:
 17949 0537 6D617043 		.ascii	"mapCount\000"
 17949      6F756E74 
 17949      00
 17950              	.LASF187:
 17951 0540 74656D70 		.ascii	"tempIntVersion\000"
 17951      496E7456 
 17951      65727369 
 17951      6F6E00
 17952              	.LASF363:
 17953 054f 70656461 		.ascii	"pedalRatios\000"
 17953      6C526174 
 17953      696F7300 
 17954              	.LASF3:
 17955 055b 756E7369 		.ascii	"unsigned char\000"
 17955      676E6564 
 17955      20636861 
 17955      7200
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 380


 17956              	.LASF320:
 17957 0569 73706941 		.ascii	"spiAdjusted\000"
 17957      646A7573 
 17957      74656400 
 17958              	.LASF265:
 17959 0575 76616C43 		.ascii	"valCheck\000"
 17959      6865636B 
 17959      00
 17960              	.LASF182:
 17961 057e 76616C73 		.ascii	"valsStart\000"
 17961      53746172 
 17961      7400
 17962              	.LASF126:
 17963 0588 636F7065 		.ascii	"coped\000"
 17963      6400
 17964              	.LASF293:
 17965 058e 72783143 		.ascii	"rx1Channel\000"
 17965      68616E6E 
 17965      656C00
 17966              	.LASF128:
 17967 0599 70656461 		.ascii	"pedalStartLoc\000"
 17967      6C537461 
 17967      72744C6F 
 17967      6300
 17968              	.LASF309:
 17969 05a7 6E657744 		.ascii	"newDataFlag\000"
 17969      61746146 
 17969      6C616700 
 17970              	.LASF391:
 17971 05b3 73747269 		.ascii	"stringOctave\000"
 17971      6E674F63 
 17971      74617665 
 17971      00
 17972              	.LASF160:
 17973 05c0 5553425F 		.ascii	"USB_service\000"
 17973      73657276 
 17973      69636500 
 17974              	.LASF195:
 17975 05cc 74656D70 		.ascii	"tempButtons\000"
 17975      42757474 
 17975      6F6E7300 
 17976              	.LASF262:
 17977 05d8 6D617043 		.ascii	"mapCountExpectation\000"
 17977      6F756E74 
 17977      45787065 
 17977      63746174 
 17977      696F6E00 
 17978              	.LASF110:
 17979 05ec 74656D70 		.ascii	"tempmax\000"
 17979      6D617800 
 17980              	.LASF181:
 17981 05f4 73746F70 		.ascii	"stoppingPoint\000"
 17981      70696E67 
 17981      506F696E 
 17981      7400
 17982              	.LASF89:
 17983 0602 4F637461 		.ascii	"OctaveActionMenu\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 381


 17983      76654163 
 17983      74696F6E 
 17983      4D656E75 
 17983      00
 17984              	.LASF117:
 17985 0613 76616C75 		.ascii	"value\000"
 17985      6500
 17986              	.LASF364:
 17987 0619 6C617374 		.ascii	"last_mux\000"
 17987      5F6D7578 
 17987      00
 17988              	.LASF374:
 17989 0622 656E636F 		.ascii	"encoderVal\000"
 17989      64657256 
 17989      616C00
 17990              	.LASF173:
 17991 062d 70726573 		.ascii	"pressure\000"
 17991      73757265 
 17991      00
 17992              	.LASF398:
 17993 0636 70726573 		.ascii	"presetAlreadyDisplayed\000"
 17993      6574416C 
 17993      72656164 
 17993      79446973 
 17993      706C6179 
 17994              	.LASF96:
 17995 064d 6D616372 		.ascii	"macroNames\000"
 17995      6F4E616D 
 17995      657300
 17996              	.LASF304:
 17997 0658 70726576 		.ascii	"prevStrings\000"
 17997      53747269 
 17997      6E677300 
 17998              	.LASF26:
 17999 0664 63686172 		.ascii	"char\000"
 17999      00
 18000              	.LASF216:
 18001 0669 65657072 		.ascii	"eepromArray\000"
 18001      6F6D4172 
 18001      72617900 
 18002              	.LASF291:
 18003 0675 63757272 		.ascii	"currentCopedent\000"
 18003      656E7443 
 18003      6F706564 
 18003      656E7400 
 18004              	.LASF287:
 18005 0685 72617741 		.ascii	"rawAngle\000"
 18005      6E676C65 
 18005      00
 18006              	.LASF111:
 18007 068e 4C454146 		.ascii	"LEAF_clip\000"
 18007      5F636C69 
 18007      7000
 18008              	.LASF55:
 18009 0698 676C7970 		.ascii	"glyph\000"
 18009      6800
 18010              	.LASF146:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 382


 18011 069e 446D6154 		.ascii	"DmaTxConfiguration\000"
 18011      78436F6E 
 18011      66696775 
 18011      72617469 
 18011      6F6E00
 18012              	.LASF71:
 18013 06b1 5F637034 		.ascii	"_cp437\000"
 18013      333700
 18014              	.LASF366:
 18015 06b8 6E65636B 		.ascii	"neck\000"
 18015      00
 18016              	.LASF6:
 18017 06bd 5F5F7569 		.ascii	"__uint16_t\000"
 18017      6E743136 
 18017      5F7400
 18018              	.LASF227:
 18019 06c8 74686547 		.ascii	"theGFX\000"
 18019      465800
 18020              	.LASF159:
 18021 06cf 63686563 		.ascii	"checkUSB_Vbus\000"
 18021      6B555342 
 18021      5F566275 
 18021      7300
 18022              	.LASF190:
 18023 06dd 726F756E 		.ascii	"roundedIndex\000"
 18023      64656449 
 18023      6E646578 
 18023      00
 18024              	.LASF337:
 18025 06ea 65657072 		.ascii	"eeprom_cnt\000"
 18025      6F6D5F63 
 18025      6E7400
 18026              	.LASF220:
 18027 06f5 5553425F 		.ascii	"USB_midi_out_ep\000"
 18027      6D696469 
 18027      5F6F7574 
 18027      5F657000 
 18028              	.LASF155:
 18029 0705 4932435F 		.ascii	"I2C_reset\000"
 18029      72657365 
 18029      7400
 18030              	.LASF381:
 18031 070f 70656461 		.ascii	"pedal_inverted\000"
 18031      6C5F696E 
 18031      76657274 
 18031      656400
 18032              	.LASF423:
 18033 071e 66726574 		.ascii	"fretToCalibrate\000"
 18033      546F4361 
 18033      6C696272 
 18033      61746500 
 18034              	.LASF375:
 18035 072e 656E636F 		.ascii	"encoderNum\000"
 18035      6465724E 
 18035      756D00
 18036              	.LASF371:
 18037 0739 6F637431 		.ascii	"oct1Up\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 383


 18037      557000
 18038              	.LASF46:
 18039 0740 75696E74 		.ascii	"uint\000"
 18039      00
 18040              	.LASF289:
 18041 0745 6D696469 		.ascii	"midiOverflow\000"
 18041      4F766572 
 18041      666C6F77 
 18041      00
 18042              	.LASF206:
 18043 0752 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 18043      496E6974 
 18043      69616C50 
 18043      6564616C 
 18043      5A65726F 
 18044              	.LASF172:
 18045 0770 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 18045      4D494449 
 18045      506F6C79 
 18045      4B657950 
 18045      72657373 
 18046              	.LASF186:
 18047 0788 73747269 		.ascii	"stringChange\000"
 18047      6E674368 
 18047      616E6765 
 18047      00
 18048              	.LASF140:
 18049 0795 636F6D70 		.ascii	"computerMIDIOffset\000"
 18049      75746572 
 18049      4D494449 
 18049      4F666673 
 18049      657400
 18050              	.LASF241:
 18051 07a8 73696E67 		.ascii	"singleParamValueLow\000"
 18051      6C655061 
 18051      72616D56 
 18051      616C7565 
 18051      4C6F7700 
 18052              	.LASF174:
 18053 07bc 73656E64 		.ascii	"sendMIDIControlChange\000"
 18053      4D494449 
 18053      436F6E74 
 18053      726F6C43 
 18053      68616E67 
 18054              	.LASF197:
 18055 07d2 7468654D 		.ascii	"theMultiplier\000"
 18055      756C7469 
 18055      706C6965 
 18055      7200
 18056              	.LASF308:
 18057 07e0 73706943 		.ascii	"spiCounter\000"
 18057      6F756E74 
 18057      657200
 18058              	.LASF244:
 18059 07eb 7472616E 		.ascii	"transposeCents\000"
 18059      73706F73 
 18059      6543656E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 384


 18059      747300
 18060              	.LASF406:
 18061 07fa 73747269 		.ascii	"stringOffset\000"
 18061      6E674F66 
 18061      66736574 
 18061      00
 18062              	.LASF215:
 18063 0807 65786974 		.ascii	"exitFretCalibrationMode\000"
 18063      46726574 
 18063      43616C69 
 18063      62726174 
 18063      696F6E4D 
 18064              	.LASF41:
 18065 081f 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 18065      4D5F4545 
 18065      50524F4D 
 18065      5F424144 
 18065      5F504152 
 18066              	.LASF412:
 18067 0836 73797365 		.ascii	"sysexPointerMask\000"
 18067      78506F69 
 18067      6E746572 
 18067      4D61736B 
 18067      00
 18068              	.LASF224:
 18069 0847 4932435F 		.ascii	"I2C_1_initVar\000"
 18069      315F696E 
 18069      69745661 
 18069      7200
 18070              	.LASF95:
 18071 0855 70726573 		.ascii	"presetName\000"
 18071      65744E61 
 18071      6D6500
 18072              	.LASF232:
 18073 0860 70617273 		.ascii	"parsingSysex\000"
 18073      696E6753 
 18073      79736578 
 18073      00
 18074              	.LASF280:
 18075 086d 72657475 		.ascii	"returnedData\000"
 18075      726E6564 
 18075      44617461 
 18075      00
 18076              	.LASF79:
 18077 087a 466F7572 		.ascii	"FourthLine\000"
 18077      74684C69 
 18077      6E6500
 18078              	.LASF332:
 18079 0885 77686963 		.ascii	"whichMacro\000"
 18079      684D6163 
 18079      726F00
 18080              	.LASF348:
 18081 0890 766F6C75 		.ascii	"volumePedal\000"
 18081      6D655065 
 18081      64616C00 
 18082              	.LASF301:
 18083 089c 72784275 		.ascii	"rxBufferPluck\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 385


 18083      66666572 
 18083      506C7563 
 18083      6B00
 18084              	.LASF382:
 18085 08aa 636F7065 		.ascii	"copedent\000"
 18085      64656E74 
 18085      00
 18086              	.LASF351:
 18087 08b3 70656461 		.ascii	"pedals8bit\000"
 18087      6C733862 
 18087      697400
 18088              	.LASF326:
 18089 08be 70726576 		.ascii	"prevKnobs\000"
 18089      4B6E6F62 
 18089      7300
 18090              	.LASF321:
 18091 08c8 6D795370 		.ascii	"mySpiCounter\000"
 18091      69436F75 
 18091      6E746572 
 18091      00
 18092              	.LASF255:
 18093 08d5 73797365 		.ascii	"sysexMessageInProgress\000"
 18093      784D6573 
 18093      73616765 
 18093      496E5072 
 18093      6F677265 
 18094              	.LASF410:
 18095 08ec 5350495F 		.ascii	"SPI_errors\000"
 18095      6572726F 
 18095      727300
 18096              	.LASF168:
 18097 08f7 43434576 		.ascii	"CCEvent\000"
 18097      656E7400 
 18098              	.LASF179:
 18099 08ff 70617273 		.ascii	"parseSysex\000"
 18099      65537973 
 18099      657800
 18100              	.LASF427:
 18101 090a 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 18101      73657273 
 18101      5C4A6566 
 18101      66536E79 
 18101      6465725C 
 18102 0938 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 18102      355F656C 
 18102      65637472 
 18102      6F737465 
 18102      656C5F73 
 18103 096a 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 18103      5F50534F 
 18103      43335F35 
 18103      5F546865 
 18103      726D6973 
 18104              	.LASF389:
 18105 0988 696E7653 		.ascii	"invStringMappedPositions\000"
 18105      7472696E 
 18105      674D6170 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 386


 18105      70656450 
 18105      6F736974 
 18106              	.LASF319:
 18107 09a1 696E7075 		.ascii	"inputData\000"
 18107      74446174 
 18107      6100
 18108              	.LASF114:
 18109 09ab 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 18109      5F696E74 
 18109      6572706F 
 18109      6C617469 
 18109      6F6E5F6C 
 18110              	.LASF407:
 18111 09c5 70726576 		.ascii	"prevNotes\000"
 18111      4E6F7465 
 18111      7300
 18112              	.LASF39:
 18113 09cf 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 18113      74635F65 
 18113      6570726F 
 18113      6D5F636F 
 18113      6E746578 
 18114              	.LASF11:
 18115 09e7 6C6F6E67 		.ascii	"long unsigned int\000"
 18115      20756E73 
 18115      69676E65 
 18115      6420696E 
 18115      7400
 18116              	.LASF204:
 18117 09f9 77686174 		.ascii	"whatToDraw\000"
 18117      546F4472 
 18117      617700
 18118              	.LASF223:
 18119 0a04 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 18119      4550524F 
 18119      4D5F656D 
 18119      5F456570 
 18119      726F6D53 
 18120              	.LASF336:
 18121 0a1f 65657072 		.ascii	"eepromReturnValue\000"
 18121      6F6D5265 
 18121      7475726E 
 18121      56616C75 
 18121      6500
 18122              	.LASF88:
 18123 0a31 5472616E 		.ascii	"TransposeMenu\000"
 18123      73706F73 
 18123      654D656E 
 18123      7500
 18124              	.LASF133:
 18125 0a3f 74656D70 		.ascii	"tempInt\000"
 18125      496E7400 
 18126              	.LASF132:
 18127 0a47 73746174 		.ascii	"status\000"
 18127      757300
 18128              	.LASF340:
 18129 0a4e 73656E64 		.ascii	"send_it\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 387


 18129      5F697400 
 18130              	.LASF278:
 18131 0a56 6C696E65 		.ascii	"linearPotValue32Bit\000"
 18131      6172506F 
 18131      7456616C 
 18131      75653332 
 18131      42697400 
 18132              	.LASF171:
 18133 0a6a 6368616E 		.ascii	"channel\000"
 18133      6E656C00 
 18134              	.LASF213:
 18135 0a72 65786974 		.ascii	"exitLeverCalibrationMode\000"
 18135      4C657665 
 18135      7243616C 
 18135      69627261 
 18135      74696F6E 
 18136              	.LASF210:
 18137 0a8b 75705072 		.ascii	"upPressed\000"
 18137      65737365 
 18137      6400
 18138              	.LASF329:
 18139 0a95 75376269 		.ascii	"u7bit_volumePedal\000"
 18139      745F766F 
 18139      6C756D65 
 18139      50656461 
 18139      6C00
 18140              	.LASF148:
 18141 0aa7 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 18141      4D617374 
 18141      65725772 
 18141      69746542 
 18141      6C6F636B 
 18142              	.LASF284:
 18143 0abf 616E676C 		.ascii	"angle\000"
 18143      6500
 18144              	.LASF268:
 18145 0ac5 6E756D53 		.ascii	"numStrings\000"
 18145      7472696E 
 18145      677300
 18146              	.LASF60:
 18147 0ad0 57494454 		.ascii	"WIDTH\000"
 18147      4800
 18148              	.LASF44:
 18149 0ad6 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 18149      4D5F4545 
 18149      50524F4D 
 18149      5F575249 
 18149      54455F46 
 18150              	.LASF120:
 18151 0aee 6F737461 		.ascii	"ostart\000"
 18151      727400
 18152              	.LASF357:
 18153 0af5 63757272 		.ascii	"currentPresetSelection\000"
 18153      656E7450 
 18153      72657365 
 18153      7453656C 
 18153      65637469 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 388


 18154              	.LASF394:
 18155 0b0c 6F70656E 		.ascii	"openStringMIDI_Int\000"
 18155      53747269 
 18155      6E674D49 
 18155      44495F49 
 18155      6E7400
 18156              	.LASF119:
 18157 0b1f 6973746F 		.ascii	"istop\000"
 18157      7000
 18158              	.LASF125:
 18159 0b25 70656461 		.ascii	"pedal_inverted_byte\000"
 18159      6C5F696E 
 18159      76657274 
 18159      65645F62 
 18159      79746500 
 18160              	.LASF219:
 18161 0b39 5553425F 		.ascii	"USB_midiInBuffer\000"
 18161      6D696469 
 18161      496E4275 
 18161      66666572 
 18161      00
 18162              	.LASF425:
 18163 0b4a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 18163      43313120 
 18163      352E342E 
 18163      31203230 
 18163      31363036 
 18164 0b7d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 18164      20726576 
 18164      6973696F 
 18164      6E203233 
 18164      37373135 
 18165 0bb0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 18165      66756E63 
 18165      74696F6E 
 18165      2D736563 
 18165      74696F6E 
 18166              	.LASF87:
 18167 0bd8 43616C69 		.ascii	"CalibrateFretsMenu\000"
 18167      62726174 
 18167      65467265 
 18167      74734D65 
 18167      6E7500
 18168              	.LASF62:
 18169 0beb 5F776964 		.ascii	"_width\000"
 18169      746800
 18170              	.LASF226:
 18171 0bf2 4465636F 		.ascii	"Decoder_1_Enabled\000"
 18171      6465725F 
 18171      315F456E 
 18171      61626C65 
 18171      6400
 18172              	.LASF169:
 18173 0c04 73656E64 		.ascii	"sendMIDINoteOn\000"
 18173      4D494449 
 18173      4E6F7465 
 18173      4F6E00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 389


 18174              	.LASF365:
 18175 0c13 6D61696E 		.ascii	"main_counter\000"
 18175      5F636F75 
 18175      6E746572 
 18175      00
 18176              	.LASF76:
 18177 0c20 46697273 		.ascii	"FirstLine\000"
 18177      744C696E 
 18177      6500
 18178              	.LASF367:
 18179 0c2a 6475616C 		.ascii	"dualSlider\000"
 18179      536C6964 
 18179      657200
 18180              	.LASF108:
 18181 0c35 72657374 		.ascii	"restartSystemCheck\000"
 18181      61727453 
 18181      79737465 
 18181      6D436865 
 18181      636B00
 18182              	.LASF273:
 18183 0c48 5553425F 		.ascii	"USB_check_flag\000"
 18183      63686563 
 18183      6B5F666C 
 18183      616700
 18184              	.LASF253:
 18185 0c57 6D657373 		.ascii	"messageArraySendCount\000"
 18185      61676541 
 18185      72726179 
 18185      53656E64 
 18185      436F756E 
 18186              	.LASF10:
 18187 0c6d 5F5F7569 		.ascii	"__uint32_t\000"
 18187      6E743332 
 18187      5F7400
 18188              	.LASF12:
 18189 0c78 6C6F6E67 		.ascii	"long long int\000"
 18189      206C6F6E 
 18189      6720696E 
 18189      7400
 18190              	.LASF279:
 18191 0c86 636F756E 		.ascii	"counter\000"
 18191      74657200 
 18192              	.LASF58:
 18193 0c8e 79416476 		.ascii	"yAdvance\000"
 18193      616E6365 
 18193      00
 18194              	.LASF392:
 18195 0c97 73747269 		.ascii	"stringPitch\000"
 18195      6E675069 
 18195      74636800 
 18196              	.LASF48:
 18197 0ca3 77696474 		.ascii	"width\000"
 18197      6800
 18198              	.LASF251:
 18199 0ca9 73747269 		.ascii	"stringRepresentation\000"
 18199      6E675265 
 18199      70726573 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 390


 18199      656E7461 
 18199      74696F6E 
 18200              	.LASF295:
 18201 0cbe 72783154 		.ascii	"rx1TD\000"
 18201      4400
 18202              	.LASF396:
 18203 0cc4 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 18203      4F4C4544 
 18203      57616974 
 18203      696E6754 
 18203      6F53656E 
 18204              	.LASF131:
 18205 0cda 74656D70 		.ascii	"tempIntLow\000"
 18205      496E744C 
 18205      6F7700
 18206              	.LASF109:
 18207 0ce5 74656D70 		.ascii	"tempmin\000"
 18207      6D696E00 
 18208              	.LASF37:
 18209 0ced 626C6F63 		.ascii	"blockingWrite\000"
 18209      6B696E67 
 18209      57726974 
 18209      6500
 18210              	.LASF299:
 18211 0cfb 72783343 		.ascii	"rx3Channel\000"
 18211      68616E6E 
 18211      656C00
 18212              	.LASF25:
 18213 0d06 646F7562 		.ascii	"double\000"
 18213      6C6500
 18214              	.LASF426:
 18215 0d0d 6D61696E 		.ascii	"main.c\000"
 18215      2E6300
 18216              	.LASF376:
 18217 0d14 62757474 		.ascii	"button1Up\000"
 18217      6F6E3155 
 18217      7000
 18218              	.LASF161:
 18219 0d1e 6C6F6732 		.ascii	"log2f_approx\000"
 18219      665F6170 
 18219      70726F78 
 18219      00
 18220              	.LASF74:
 18221 0d2b 666F6E74 		.ascii	"fontDesc\000"
 18221      44657363 
 18221      00
 18222              	.LASF245:
 18223 0d34 6D696469 		.ascii	"midiSendOn\000"
 18223      53656E64 
 18223      4F6E00
 18224              	.LASF240:
 18225 0d3f 73696E67 		.ascii	"singleParamValueHigh\000"
 18225      6C655061 
 18225      72616D56 
 18225      616C7565 
 18225      48696768 
 18226              	.LASF225:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 391


 18227 0d54 49544D5F 		.ascii	"ITM_RxBuffer\000"
 18227      52784275 
 18227      66666572 
 18227      00
 18228              	.LASF239:
 18229 0d61 73696E67 		.ascii	"singleParamToUpdateLow\000"
 18229      6C655061 
 18229      72616D54 
 18229      6F557064 
 18229      6174654C 
 18230              	.LASF121:
 18231 0d78 6F73746F 		.ascii	"ostop\000"
 18231      7000
 18232              	.LASF153:
 18233 0d7e 74696D65 		.ascii	"timeout\000"
 18233      6F757400 
 18234              	.LASF24:
 18235 0d86 666C6F61 		.ascii	"float\000"
 18235      7400
 18236              	.LASF83:
 18237 0d8c 4D61696E 		.ascii	"MainMenu\000"
 18237      4D656E75 
 18237      00
 18238              	.LASF350:
 18239 0d95 70726576 		.ascii	"prev_processed_pedals\000"
 18239      5F70726F 
 18239      63657373 
 18239      65645F70 
 18239      6564616C 
 18240              	.LASF312:
 18241 0dab 616D4865 		.ascii	"amHere2\000"
 18241      72653200 
 18242              	.LASF331:
 18243 0db3 53504932 		.ascii	"SPI2started\000"
 18243      73746172 
 18243      74656400 
 18244              	.LASF66:
 18245 0dbf 63757273 		.ascii	"cursor_x\000"
 18245      6F725F78 
 18245      00
 18246              	.LASF65:
 18247 0dc8 63757273 		.ascii	"cursor_y\000"
 18247      6F725F79 
 18247      00
 18248              	.LASF315:
 18249 0dd1 63757272 		.ascii	"currentPluckBuffer\000"
 18249      656E7450 
 18249      6C75636B 
 18249      42756666 
 18249      657200
 18250              	.LASF139:
 18251 0de4 6261724D 		.ascii	"barMIDI\000"
 18251      49444900 
 18252              	.LASF177:
 18253 0dec 73656E64 		.ascii	"sendMIDIPitchBend\000"
 18253      4D494449 
 18253      50697463 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 392


 18253      6842656E 
 18253      6400
 18254              	.LASF14:
 18255 0dfe 756E7369 		.ascii	"unsigned int\000"
 18255      676E6564 
 18255      20696E74 
 18255      00
 18256              	.LASF386:
 18257 0e0b 70656461 		.ascii	"pedal_cc_assignments\000"
 18257      6C5F6363 
 18257      5F617373 
 18257      69676E6D 
 18257      656E7473 
 18258              	.LASF75:
 18259 0e20 6175746F 		.ascii	"autoscroll\000"
 18259      7363726F 
 18259      6C6C00
 18260              	.LASF54:
 18261 0e2b 6269746D 		.ascii	"bitmap\000"
 18261      617000
 18262              	.LASF231:
 18263 0e32 72656365 		.ascii	"receivingSysex\000"
 18263      6976696E 
 18263      67537973 
 18263      657800
 18264              	.LASF192:
 18265 0e41 6361626C 		.ascii	"cable\000"
 18265      6500
 18266              	.LASF415:
 18267 0e47 6D656E75 		.ascii	"menuPosition\000"
 18267      506F7369 
 18267      74696F6E 
 18267      00
 18268              	.LASF328:
 18269 0e54 70726576 		.ascii	"prevKnobs7bit\000"
 18269      4B6E6F62 
 18269      73376269 
 18269      7400
 18270              	.LASF107:
 18271 0e62 56627573 		.ascii	"Vbus_function\000"
 18271      5F66756E 
 18271      6374696F 
 18271      6E00
 18272              	.LASF353:
 18273 0e70 70726576 		.ascii	"prevPedals7bit\000"
 18273      50656461 
 18273      6C733762 
 18273      697400
 18274              	.LASF165:
 18275 0e7f 76656C6F 		.ascii	"velocity\000"
 18275      63697479 
 18275      00
 18276              	.LASF408:
 18277 0e88 63686563 		.ascii	"checkStatus\000"
 18277      6B537461 
 18277      74757300 
 18278              	.LASF27:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 393


 18279 0e94 63797374 		.ascii	"cystatus\000"
 18279      61747573 
 18279      00
 18280              	.LASF324:
 18281 0e9d 6261725F 		.ascii	"bar_index\000"
 18281      696E6465 
 18281      7800
 18282              	.LASF327:
 18283 0ea7 6B6E6F62 		.ascii	"knobs7bit\000"
 18283      73376269 
 18283      7400
 18284              	.LASF164:
 18285 0eb1 73747269 		.ascii	"string\000"
 18285      6E6700
 18286              	.LASF196:
 18287 0eb8 63757272 		.ascii	"currentEncoderVal\000"
 18287      656E7445 
 18287      6E636F64 
 18287      65725661 
 18287      6C00
 18288              	.LASF322:
 18289 0eca 6F666673 		.ascii	"offsetErrorCount\000"
 18289      65744572 
 18289      726F7243 
 18289      6F756E74 
 18289      00
 18290              	.LASF355:
 18291 0edb 70726F63 		.ascii	"processed_volumePedal\000"
 18291      65737365 
 18291      645F766F 
 18291      6C756D65 
 18291      50656461 
 18292              	.LASF388:
 18293 0ef1 73747269 		.ascii	"stringMappedPositions\000"
 18293      6E674D61 
 18293      70706564 
 18293      506F7369 
 18293      74696F6E 
 18294              	.LASF137:
 18295 0f07 74656D70 		.ascii	"tempMIDI\000"
 18295      4D494449 
 18295      00
 18296              	.LASF56:
 18297 0f10 66697273 		.ascii	"first\000"
 18297      7400
 18298              	.LASF302:
 18299 0f16 72784275 		.ascii	"rxBufferBar\000"
 18299      66666572 
 18299      42617200 
 18300              	.LASF209:
 18301 0f22 646F776E 		.ascii	"downPressed\000"
 18301      50726573 
 18301      73656400 
 18302              	.LASF297:
 18303 0f2e 74784368 		.ascii	"txChannel\000"
 18303      616E6E65 
 18303      6C00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 394


 18304              	.LASF349:
 18305 0f38 70726F63 		.ascii	"processed_pedals\000"
 18305      65737365 
 18305      645F7065 
 18305      64616C73 
 18305      00
 18306              	.LASF387:
 18307 0f49 6F70656E 		.ascii	"openStringFrequencies\000"
 18307      53747269 
 18307      6E674672 
 18307      65717565 
 18307      6E636965 
 18308              	.LASF285:
 18309 0f5f 70726576 		.ascii	"prevAngle\000"
 18309      416E676C 
 18309      6500
 18310              	.LASF311:
 18311 0f69 706C7563 		.ascii	"pluck_index\000"
 18311      6B5F696E 
 18311      64657800 
 18312              	.LASF29:
 18313 0f75 6C6F6E67 		.ascii	"long double\000"
 18313      20646F75 
 18313      626C6500 
 18314              	.LASF154:
 18315 0f81 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 18315      4D617374 
 18315      65725265 
 18315      6164426C 
 18315      6F636B69 
 18316              	.LASF418:
 18317 0f98 6D61696E 		.ascii	"mainMenuNames\000"
 18317      4D656E75 
 18317      4E616D65 
 18317      7300
 18318              	.LASF316:
 18319 0fa6 63757272 		.ascii	"currentBarBuffer\000"
 18319      656E7442 
 18319      61724275 
 18319      66666572 
 18319      00
 18320              	.LASF286:
 18321 0fb7 4144435F 		.ascii	"ADC_values\000"
 18321      76616C75 
 18321      657300
 18322              	.LASF413:
 18323 0fc2 70726576 		.ascii	"prevEncoderVal\000"
 18323      456E636F 
 18323      64657256 
 18323      616C00
 18324              	.LASF113:
 18325 0fd1 66746F6D 		.ascii	"ftom\000"
 18325      00
 18326              	.LASF199:
 18327 0fd6 63757272 		.ascii	"currentChar\000"
 18327      656E7443 
 18327      68617200 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 395


 18328              	.LASF318:
 18329 0fe2 53504931 		.ascii	"SPI1ErrorCount\000"
 18329      4572726F 
 18329      72436F75 
 18329      6E7400
 18330              	.LASF288:
 18331 0ff1 6D696469 		.ascii	"midiSent\000"
 18331      53656E74 
 18331      00
 18332              	.LASF193:
 18333 0ffa 6D696469 		.ascii	"midiMsg\000"
 18333      4D736700 
 18334              	.LASF0:
 18335 1002 5F5F696E 		.ascii	"__int8_t\000"
 18335      74385F74 
 18335      00
 18336              	.LASF400:
 18337 100b 63757272 		.ascii	"currentNeck\000"
 18337      656E744E 
 18337      65636B00 
 18338              	.LASF402:
 18339 1017 65646974 		.ascii	"editMode\000"
 18339      4D6F6465 
 18339      00
 18340              	.LASF13:
 18341 1020 6C6F6E67 		.ascii	"long long unsigned int\000"
 18341      206C6F6E 
 18341      6720756E 
 18341      7369676E 
 18341      65642069 
 18342              	.LASF428:
 18343 1037 5F474658 		.ascii	"_GFX\000"
 18343      00
 18344              	.LASF18:
 18345 103c 75696E74 		.ascii	"uint16_t\000"
 18345      31365F74 
 18345      00
 18346              	.LASF188:
 18347 1045 74656D70 		.ascii	"tempHigh\000"
 18347      48696768 
 18347      00
 18348              	.LASF64:
 18349 104e 726F7461 		.ascii	"rotation\000"
 18349      74696F6E 
 18349      00
 18350              	.LASF266:
 18351 1057 74657374 		.ascii	"testVal\000"
 18351      56616C00 
 18352              	.LASF70:
 18353 105f 77726170 		.ascii	"wrap\000"
 18353      00
 18354              	.LASF296:
 18355 1064 72783254 		.ascii	"rx2TD\000"
 18355      4400
 18356              	.LASF310:
 18357 106a 70726576 		.ascii	"prevOctave\000"
 18357      4F637461 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 396


 18357      766500
 18358              	.LASF135:
 18359 1075 4D696469 		.ascii	"MidiBarPosition\000"
 18359      42617250 
 18359      6F736974 
 18359      696F6E00 
 18360              	.LASF248:
 18361 1085 636F6E74 		.ascii	"controlSmoothing\000"
 18361      726F6C53 
 18361      6D6F6F74 
 18361      68696E67 
 18361      00
 18362              	.LASF429:
 18363 1096 62726561 		.ascii	"breakFloat\000"
 18363      6B466C6F 
 18363      617400
 18364              	.LASF409:
 18365 10a1 63686563 		.ascii	"checkBase\000"
 18365      6B426173 
 18365      6500
 18366              	.LASF106:
 18367 10ab 73706973 		.ascii	"spis_2_ss\000"
 18367      5F325F73 
 18367      7300
 18368              	.LASF377:
 18369 10b5 62757474 		.ascii	"button2Up\000"
 18369      6F6E3255 
 18369      7000
 18370              	.LASF242:
 18371 10bf 73656E64 		.ascii	"sendMappingChangeUpdate\000"
 18371      4D617070 
 18371      696E6743 
 18371      68616E67 
 18371      65557064 
 18372              	.LASF90:
 18373 10d7 44656164 		.ascii	"DeadzonesMenu\000"
 18373      7A6F6E65 
 18373      734D656E 
 18373      7500
 18374              	.LASF307:
 18375 10e5 616D4865 		.ascii	"amHere\000"
 18375      726500
 18376              	.LASF335:
 18377 10ec 61727261 		.ascii	"array\000"
 18377      7900
 18378              	.LASF142:
 18379 10f2 7363616C 		.ascii	"scaledMIDI\000"
 18379      65644D49 
 18379      444900
 18380              	.LASF28:
 18381 10fd 72656738 		.ascii	"reg8\000"
 18381      00
 18382              	.LASF235:
 18383 1102 636F7065 		.ascii	"copedentNumberToWrite\000"
 18383      64656E74 
 18383      4E756D62 
 18383      6572546F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 397


 18383      57726974 
 18384              	.LASF98:
 18385 1118 6D617043 		.ascii	"mapCountNext\000"
 18385      6F756E74 
 18385      4E657874 
 18385      00
 18386              	.LASF313:
 18387 1125 73706943 		.ascii	"spiCounter2\000"
 18387      6F756E74 
 18387      65723200 
 18388              	.LASF104:
 18389 1131 446F776E 		.ascii	"Down\000"
 18389      00
 18390              	.LASF166:
 18391 1136 74656D70 		.ascii	"tempVel\000"
 18391      56656C00 
 18392              	.LASF269:
 18393 113e 75736241 		.ascii	"usbActivityCounter\000"
 18393      63746976 
 18393      69747943 
 18393      6F756E74 
 18393      657200
 18394              	.LASF347:
 18395 1151 64656164 		.ascii	"deadzone\000"
 18395      7A6F6E65 
 18395      00
 18396              	.LASF243:
 18397 115a 7472616E 		.ascii	"transposeSemitones\000"
 18397      73706F73 
 18397      6553656D 
 18397      69746F6E 
 18397      657300
 18398              	.LASF264:
 18399 116d 70617273 		.ascii	"parseThatMF\000"
 18399      65546861 
 18399      744D4600 
 18400              	.LASF59:
 18401 1179 47465866 		.ascii	"GFXfont\000"
 18401      6F6E7400 
 18402              	.LASF4:
 18403 1181 5F5F696E 		.ascii	"__int16_t\000"
 18403      7431365F 
 18403      7400
 18404              	.LASF97:
 18405 118b 696E6974 		.ascii	"initialVals\000"
 18405      69616C56 
 18405      616C7300 
 18406              	.LASF272:
 18407 1197 5553425F 		.ascii	"USB_active\000"
 18407      61637469 
 18407      766500
 18408              	.LASF404:
 18409 11a2 66726574 		.ascii	"fretCalibrationMode\000"
 18409      43616C69 
 18409      62726174 
 18409      696F6E4D 
 18409      6F646500 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 398


 18410              	.LASF237:
 18411 11b6 73656E64 		.ascii	"sendSingleParamUpdate\000"
 18411      53696E67 
 18411      6C655061 
 18411      72616D55 
 18411      70646174 
 18412              	.LASF229:
 18413 11cc 73797365 		.ascii	"sysexBuffer\000"
 18413      78427566 
 18413      66657200 
 18414              	.LASF256:
 18415 11d8 62756643 		.ascii	"bufCount\000"
 18415      6F756E74 
 18415      00
 18416              	.LASF317:
 18417 11e1 706C7563 		.ascii	"pluckErrorCount\000"
 18417      6B457272 
 18417      6F72436F 
 18417      756E7400 
 18418              	.LASF63:
 18419 11f1 5F686569 		.ascii	"_height\000"
 18419      67687400 
 18420              	.LASF194:
 18421 11f9 7363616E 		.ascii	"scanUI\000"
 18421      554900
 18422              	.LASF184:
 18423 1200 74656D70 		.ascii	"tempChar\000"
 18423      43686172 
 18423      00
 18424              	.LASF395:
 18425 1209 4F4C4544 		.ascii	"OLEDcount\000"
 18425      636F756E 
 18425      7400
 18426              	.LASF93:
 18427 1213 4E696C4D 		.ascii	"NilMenu\000"
 18427      656E7500 
 18428              	.LASF380:
 18429 121b 70617463 		.ascii	"patchNum\000"
 18429      684E756D 
 18429      00
 18430              	.LASF136:
 18431 1224 6D794D61 		.ascii	"myMappedPos\000"
 18431      70706564 
 18431      506F7300 
 18432              	.LASF399:
 18433 1230 70656461 		.ascii	"pedals_float\000"
 18433      6C735F66 
 18433      6C6F6174 
 18433      00
 18434              	.LASF345:
 18435 123d 70656461 		.ascii	"pedals_lowWithDeadZone\000"
 18435      6C735F6C 
 18435      6F775769 
 18435      74684465 
 18435      61645A6F 
 18436              	.LASF333:
 18437 1254 6D616372 		.ascii	"macroKnobValues7bit\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 399


 18437      6F4B6E6F 
 18437      6256616C 
 18437      75657337 
 18437      62697400 
 18438              	.LASF21:
 18439 1268 75696E74 		.ascii	"uint8\000"
 18439      3800
 18440              	.LASF72:
 18441 126e 67667846 		.ascii	"gfxFont\000"
 18441      6F6E7400 
 18442              	.LASF91:
 18443 1276 536C6964 		.ascii	"SliderRepMenu\000"
 18443      65725265 
 18443      704D656E 
 18443      7500
 18444              	.LASF343:
 18445 1284 70656461 		.ascii	"pedals_low\000"
 18445      6C735F6C 
 18445      6F7700
 18446              	.LASF417:
 18447 128f 63616C69 		.ascii	"calibrationNames\000"
 18447      62726174 
 18447      696F6E4E 
 18447      616D6573 
 18447      00
 18448              	.LASF141:
 18449 12a0 70697463 		.ascii	"pitchBendAmount\000"
 18449      6842656E 
 18449      64416D6F 
 18449      756E7400 
 18450              	.LASF238:
 18451 12b0 73696E67 		.ascii	"singleParamToUpdateHigh\000"
 18451      6C655061 
 18451      72616D54 
 18451      6F557064 
 18451      61746548 
 18452              	.LASF5:
 18453 12c8 73686F72 		.ascii	"short int\000"
 18453      7420696E 
 18453      7400
 18454              	.LASF254:
 18455 12d2 6D657373 		.ascii	"messageArraySize\000"
 18455      61676541 
 18455      72726179 
 18455      53697A65 
 18455      00
 18456              	.LASF356:
 18457 12e3 66726574 		.ascii	"fretMeasurements\000"
 18457      4D656173 
 18457      7572656D 
 18457      656E7473 
 18457      00
 18458              	.LASF151:
 18459 12f4 6D6F6465 		.ascii	"mode\000"
 18459      00
 18460              	.LASF145:
 18461 12f9 62756666 		.ascii	"bufferPointer\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 400


 18461      6572506F 
 18461      696E7465 
 18461      7200
 18462              	.LASF158:
 18463 1307 6D616372 		.ascii	"macroCheck\000"
 18463      6F436865 
 18463      636B00
 18464              	.LASF393:
 18465 1312 73747269 		.ascii	"stringMIDI\000"
 18465      6E674D49 
 18465      444900
 18466              	.LASF138:
 18467 131d 6F70656E 		.ascii	"openStringMIDI\000"
 18467      53747269 
 18467      6E674D49 
 18467      444900
 18468              	.LASF17:
 18469 132c 696E7431 		.ascii	"int16_t\000"
 18469      365F7400 
 18470              	.LASF185:
 18471 1334 70656461 		.ascii	"pedalToWrite\000"
 18471      6C546F57 
 18471      72697465 
 18471      00
 18472              	.LASF34:
 18473 1341 65657072 		.ascii	"eepromSize\000"
 18473      6F6D5369 
 18473      7A6500
 18474              	.LASF211:
 18475 134c 656E7465 		.ascii	"enterPressed\000"
 18475      72507265 
 18475      73736564 
 18475      00
 18476              	.LASF157:
 18477 1359 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 18477      6C617943 
 18477      75727265 
 18477      6E745072 
 18477      65736574 
 18478              	.LASF82:
 18479 137d 5F4D656E 		.ascii	"_MenuModes\000"
 18479      754D6F64 
 18479      657300
 18480              	.LASF73:
 18481 1388 666F6E74 		.ascii	"fontHeight\000"
 18481      48656967 
 18481      687400
 18482              	.LASF282:
 18483 1393 70726576 		.ascii	"previousButtons\000"
 18483      696F7573 
 18483      42757474 
 18483      6F6E7300 
 18484              	.LASF35:
 18485 13a3 77656172 		.ascii	"wearLevelingFactor\000"
 18485      4C657665 
 18485      6C696E67 
 18485      46616374 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 401


 18485      6F7200
 18486              	.LASF217:
 18487 13b6 5553425F 		.ascii	"USB_midiInPointer\000"
 18487      6D696469 
 18487      496E506F 
 18487      696E7465 
 18487      7200
 18488              	.LASF149:
 18489 13c8 69324341 		.ascii	"i2CAddr\000"
 18489      64647200 
 18490              	.LASF200:
 18491 13d0 656E7465 		.ascii	"enterEditModeMenu\000"
 18491      72456469 
 18491      744D6F64 
 18491      654D656E 
 18491      7500
 18492              	.LASF275:
 18493 13e2 696E4275 		.ascii	"inBuffer\000"
 18493      66666572 
 18493      00
 18494              	.LASF306:
 18495 13eb 6D617853 		.ascii	"maxStrings\000"
 18495      7472696E 
 18495      677300
 18496              	.LASF127:
 18497 13f6 6C657474 		.ascii	"letter\000"
 18497      657200
 18498              	.LASF221:
 18499 13fd 5553425F 		.ascii	"USB_midiOutBuffer\000"
 18499      6D696469 
 18499      4F757442 
 18499      75666665 
 18499      7200
 18500              	.LASF290:
 18501 140f 6D616372 		.ascii	"macroKnobValues\000"
 18501      6F4B6E6F 
 18501      6256616C 
 18501      75657300 
 18502              	.LASF342:
 18503 141f 6932635F 		.ascii	"i2c_skipped\000"
 18503      736B6970 
 18503      70656400 
 18504              	.LASF50:
 18505 142b 78416476 		.ascii	"xAdvance\000"
 18505      616E6365 
 18505      00
 18506              	.LASF205:
 18507 1434 74656D70 		.ascii	"tempPos\000"
 18507      506F7300 
 18508              	.LASF352:
 18509 143c 70656461 		.ascii	"pedals7bit\000"
 18509      6C733762 
 18509      697400
 18510              	.LASF123:
 18511 1447 6D61696E 		.ascii	"main\000"
 18511      00
 18512              	.LASF330:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 402


 18513 144c 70726576 		.ascii	"prev_7bit_volumePedal\000"
 18513      5F376269 
 18513      745F766F 
 18513      6C756D65 
 18513      50656461 
 18514              	.LASF274:
 18515 1462 6D617070 		.ascii	"mappingArray\000"
 18515      696E6741 
 18515      72726179 
 18515      00
 18516              	.LASF212:
 18517 146f 656E7465 		.ascii	"enterLeverCalibrationMode\000"
 18517      724C6576 
 18517      65724361 
 18517      6C696272 
 18517      6174696F 
 18518              	.LASF294:
 18519 1489 72783243 		.ascii	"rx2Channel\000"
 18519      68616E6E 
 18519      656C00
 18520              	.LASF201:
 18521 1494 65786974 		.ascii	"exitEditModeMenu\000"
 18521      45646974 
 18521      4D6F6465 
 18521      4D656E75 
 18521      00
 18522              	.LASF403:
 18523 14a5 6C657665 		.ascii	"leverCalibrationMode\000"
 18523      7243616C 
 18523      69627261 
 18523      74696F6E 
 18523      4D6F6465 
 18524              	.LASF218:
 18525 14ba 5553425F 		.ascii	"USB_midi_in_ep\000"
 18525      6D696469 
 18525      5F696E5F 
 18525      657000
 18526              	.LASF147:
 18527 14c9 446D6152 		.ascii	"DmaRxConfiguration\000"
 18527      78436F6E 
 18527      66696775 
 18527      72617469 
 18527      6F6E00
 18528              	.LASF20:
 18529 14dc 75696E74 		.ascii	"uint32_t\000"
 18529      33325F74 
 18529      00
 18530              	.LASF250:
 18531 14e5 6F637461 		.ascii	"octaveAction\000"
 18531      76654163 
 18531      74696F6E 
 18531      00
 18532              	.LASF84:
 18533 14f2 43616C69 		.ascii	"CalibrationMenu\000"
 18533      62726174 
 18533      696F6E4D 
 18533      656E7500 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 403


 18534              	.LASF379:
 18535 1502 62757474 		.ascii	"button4Up\000"
 18535      6F6E3455 
 18535      7000
 18536              	.LASF271:
 18537 150c 70726576 		.ascii	"prevVBUS\000"
 18537      56425553 
 18537      00
 18538              	.LASF300:
 18539 1515 72783354 		.ascii	"rx3TD\000"
 18539      4400
 18540              	.LASF414:
 18541 151b 656E636F 		.ascii	"encoderWatch\000"
 18541      64657257 
 18541      61746368 
 18541      00
 18542              	.LASF270:
 18543 1528 63757272 		.ascii	"currentVBUS\000"
 18543      656E7456 
 18543      42555300 
 18544              	.LASF372:
 18545 1534 6F637434 		.ascii	"oct4Up\000"
 18545      557000
 18546              	.LASF156:
 18547 153b 63616C63 		.ascii	"calculatePedalRatios\000"
 18547      756C6174 
 18547      65506564 
 18547      616C5261 
 18547      74696F73 
 18548              	.LASF378:
 18549 1550 62757474 		.ascii	"button3Up\000"
 18549      6F6E3355 
 18549      7000
 18550              	.LASF7:
 18551 155a 73686F72 		.ascii	"short unsigned int\000"
 18551      7420756E 
 18551      7369676E 
 18551      65642069 
 18551      6E7400
 18552              	.LASF207:
 18553 156d 6C656674 		.ascii	"leftPressed\000"
 18553      50726573 
 18553      73656400 
 18554              	.LASF247:
 18555 1579 70697463 		.ascii	"pitchSmoothing\000"
 18555      68536D6F 
 18555      6F746869 
 18555      6E6700
 18556              	.LASF99:
 18557 1588 6D617070 		.ascii	"mapping\000"
 18557      696E6700 
 18558              	.LASF167:
 18559 1590 6E6F7465 		.ascii	"noteToSend\000"
 18559      546F5365 
 18559      6E6400
 18560              	.LASF298:
 18561 159b 74785444 		.ascii	"txTD\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 404


 18561      00
 18562              	.LASF8:
 18563 15a0 5F5F696E 		.ascii	"__int32_t\000"
 18563      7433325F 
 18563      7400
 18564              	.LASF305:
 18565 15aa 70726576 		.ascii	"prevBar\000"
 18565      42617200 
 18566              	.LASF202:
 18567 15b2 6D656E75 		.ascii	"menuAction\000"
 18567      41637469 
 18567      6F6E00
 18568              	.LASF368:
 18569 15bd 73686966 		.ascii	"shiftUp\000"
 18569      74557000 
 18570              	.LASF277:
 18571 15c5 6D79496E 		.ascii	"myInputArray\000"
 18571      70757441 
 18571      72726179 
 18571      00
 18572              	.LASF112:
 18573 15d2 6D746F66 		.ascii	"mtof\000"
 18573      00
 18574              	.LASF92:
 18575 15d7 4D696469 		.ascii	"MidiSendMenu\000"
 18575      53656E64 
 18575      4D656E75 
 18575      00
 18576              	.LASF214:
 18577 15e4 656E7465 		.ascii	"enterFretCalibrationMode\000"
 18577      72467265 
 18577      7443616C 
 18577      69627261 
 18577      74696F6E 
 18578              	.LASF385:
 18579 15fd 70656461 		.ascii	"pedals\000"
 18579      6C7300
 18580              	.LASF130:
 18581 1604 74656D70 		.ascii	"tempIntHigh\000"
 18581      496E7448 
 18581      69676800 
 18582              	.LASF370:
 18583 1610 65646974 		.ascii	"editUp\000"
 18583      557000
 18584              	.LASF33:
 18585 1617 6C617374 		.ascii	"lastWrRowAddr\000"
 18585      5772526F 
 18585      77416464 
 18585      7200
 18586              	.LASF124:
 18587 1625 6D794172 		.ascii	"myArrayCounter\000"
 18587      72617943 
 18587      6F756E74 
 18587      657200
 18588              	.LASF267:
 18589 1634 7472616E 		.ascii	"transposeFloat\000"
 18589      73706F73 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc4uA1tU.s 			page 405


 18589      65466C6F 
 18589      617400
 18590              	.LASF390:
 18591 1643 73747269 		.ascii	"stringFrequencies\000"
 18591      6E674672 
 18591      65717565 
 18591      6E636965 
 18591      7300
 18592              	.LASF22:
 18593 1655 75696E74 		.ascii	"uint16\000"
 18593      313600
 18594              	.LASF68:
 18595 165c 74657874 		.ascii	"textcolor\000"
 18595      636F6C6F 
 18595      7200
 18596              	.LASF57:
 18597 1666 6C617374 		.ascii	"last\000"
 18597      00
 18598              	.LASF208:
 18599 166b 72696768 		.ascii	"rightPressed\000"
 18599      74507265 
 18599      73736564 
 18599      00
 18600              	.LASF49:
 18601 1678 68656967 		.ascii	"height\000"
 18601      687400
 18602              	.LASF276:
 18603 167f 6D794172 		.ascii	"myArray\000"
 18603      72617900 
 18604              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
