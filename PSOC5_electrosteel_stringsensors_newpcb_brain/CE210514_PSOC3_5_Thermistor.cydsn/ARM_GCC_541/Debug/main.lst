ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sysexBuffer,1024,4
  20              		.global	sysexPointer
  21              		.bss
  22              		.align	2
  23              		.type	sysexPointer, %object
  24              		.size	sysexPointer, 4
  25              	sysexPointer:
  26 0000 00000000 		.space	4
  27              		.global	receivingSysex
  28              		.type	receivingSysex, %object
  29              		.size	receivingSysex, 1
  30              	receivingSysex:
  31 0004 00       		.space	1
  32              		.global	parsingSysex
  33              		.type	parsingSysex, %object
  34              		.size	parsingSysex, 1
  35              	parsingSysex:
  36 0005 00       		.space	1
  37              		.comm	presetArray,1024,4
  38              		.global	presetNumberToWrite
  39              		.type	presetNumberToWrite, %object
  40              		.size	presetNumberToWrite, 1
  41              	presetNumberToWrite:
  42 0006 00       		.space	1
  43              		.global	copedentNumberToWrite
  44              		.type	copedentNumberToWrite, %object
  45              		.size	copedentNumberToWrite, 1
  46              	copedentNumberToWrite:
  47 0007 00       		.space	1
  48              		.global	sendMessageEnd
  49              		.type	sendMessageEnd, %object
  50              		.size	sendMessageEnd, 1
  51              	sendMessageEnd:
  52 0008 00       		.space	1
  53              		.global	presetArraySection
  54              		.type	presetArraySection, %object
  55              		.size	presetArraySection, 1
  56              	presetArraySection:
  57 0009 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 2


  58              		.global	messageArraySendCount
  59              		.align	1
  60              		.type	messageArraySendCount, %object
  61              		.size	messageArraySendCount, 2
  62              	messageArraySendCount:
  63 000a 0000     		.space	2
  64              		.global	messageArraySize
  65              		.align	1
  66              		.type	messageArraySize, %object
  67              		.size	messageArraySize, 2
  68              	messageArraySize:
  69 000c 0000     		.space	2
  70              		.global	sysexMessageInProgress
  71              		.type	sysexMessageInProgress, %object
  72              		.size	sysexMessageInProgress, 1
  73              	sysexMessageInProgress:
  74 000e 00       		.space	1
  75              		.global	bufCount
  76              		.type	bufCount, %object
  77              		.size	bufCount, 1
  78              	bufCount:
  79 000f 00       		.space	1
  80              		.global	sendingMessage
  81              		.type	sendingMessage, %object
  82              		.size	sendingMessage, 1
  83              	sendingMessage:
  84 0010 00       		.space	1
  85              		.global	currentFloat
  86 0011 000000   		.align	2
  87              		.type	currentFloat, %object
  88              		.size	currentFloat, 4
  89              	currentFloat:
  90 0014 00000000 		.space	4
  91              		.global	mapCount
  92              		.align	2
  93              		.type	mapCount, %object
  94              		.size	mapCount, 4
  95              	mapCount:
  96 0018 00000000 		.space	4
  97              		.global	valsCount
  98              		.align	1
  99              		.type	valsCount, %object
 100              		.size	valsCount, 2
 101              	valsCount:
 102 001c 0000     		.space	2
 103              		.global	mapCountExpectation
 104              		.align	1
 105              		.type	mapCountExpectation, %object
 106              		.size	mapCountExpectation, 2
 107              	mapCountExpectation:
 108 001e 0000     		.space	2
 109              		.global	numMappings
 110              		.align	1
 111              		.type	numMappings, %object
 112              		.size	numMappings, 2
 113              	numMappings:
 114 0020 0000     		.space	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 3


 115              		.global	parseThatMF
 116              		.type	parseThatMF, %object
 117              		.size	parseThatMF, 1
 118              	parseThatMF:
 119 0022 00       		.space	1
 120              		.global	valCheck
 121 0023 00       		.align	2
 122              		.type	valCheck, %object
 123              		.size	valCheck, 4
 124              	valCheck:
 125 0024 00000000 		.space	4
 126              		.global	testVal
 127              		.align	2
 128              		.type	testVal, %object
 129              		.size	testVal, 4
 130              	testVal:
 131 0028 00000000 		.space	4
 132              		.global	numStrings
 133              		.data
 134              		.align	2
 135              		.type	numStrings, %object
 136              		.size	numStrings, 4
 137              	numStrings:
 138 0000 0A000000 		.word	10
 139              		.global	usbActivityCounter
 140              		.bss
 141              		.type	usbActivityCounter, %object
 142              		.size	usbActivityCounter, 1
 143              	usbActivityCounter:
 144 002c 00       		.space	1
 145              		.comm	midiMsg,4,4
 146              		.global	currentVBUS
 147              		.type	currentVBUS, %object
 148              		.size	currentVBUS, 1
 149              	currentVBUS:
 150 002d 00       		.space	1
 151              		.global	prevVBUS
 152              		.type	prevVBUS, %object
 153              		.size	prevVBUS, 1
 154              	prevVBUS:
 155 002e 00       		.space	1
 156              		.global	USB_active
 157              		.type	USB_active, %object
 158              		.size	USB_active, 1
 159              	USB_active:
 160 002f 00       		.space	1
 161              		.global	USB_check_flag
 162              		.type	USB_check_flag, %object
 163              		.size	USB_check_flag, 1
 164              	USB_check_flag:
 165 0030 00       		.space	1
 166              		.comm	myArray,32,4
 167              		.comm	myInputArray,2,4
 168              		.comm	linearPotValue32Bit,8,4
 169              		.global	i
 170              		.type	i, %object
 171              		.size	i, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 4


 172              	i:
 173 0031 00       		.space	1
 174              		.global	counter
 175              		.type	counter, %object
 176              		.size	counter, 1
 177              	counter:
 178 0032 00       		.space	1
 179              		.comm	returnedData,32,4
 180              		.comm	temper,4,4
 181              		.comm	previousButtons,44,4
 182              		.global	octave
 183              		.data
 184              		.align	2
 185              		.type	octave, %object
 186              		.size	octave, 4
 187              	octave:
 188 0004 04000000 		.word	4
 189              		.comm	angle,20,4
 190              		.comm	prevAngle,20,4
 191              		.comm	ADC_values,8,4
 192              		.global	rawAngle
 193              		.bss
 194 0033 00       		.align	1
 195              		.type	rawAngle, %object
 196              		.size	rawAngle, 2
 197              	rawAngle:
 198 0034 0000     		.space	2
 199              		.global	midiSent
 200              		.align	1
 201              		.type	midiSent, %object
 202              		.size	midiSent, 2
 203              	midiSent:
 204 0036 0000     		.space	2
 205              		.global	midiOverflow
 206              		.align	1
 207              		.type	midiOverflow, %object
 208              		.size	midiOverflow, 2
 209              	midiOverflow:
 210 0038 0000     		.space	2
 211              		.global	currentCopedent
 212              		.type	currentCopedent, %object
 213              		.size	currentCopedent, 1
 214              	currentCopedent:
 215 003a 00       		.space	1
 216              		.global	necks
 217              		.data
 218              		.align	2
 219              		.type	necks, %object
 220              		.size	necks, 2
 221              	necks:
 222 0008 00       		.byte	0
 223 0009 01       		.byte	1
 224              		.comm	rx1Channel,1,1
 225              		.comm	rx2Channel,1,32
 226              		.comm	rx1TD,2,4
 227              		.comm	rx2TD,2,32
 228              		.comm	rxBufferPluck,52,32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 5


 229              		.comm	rxBufferBar,16,32
 230              		.comm	strings,24,4
 231              		.comm	prevStrings,24,4
 232              		.comm	bar,4,4
 233              		.comm	prevBar,4,4
 234              		.comm	maxStrings,24,4
 235              		.global	amHere
 236              		.bss
 237              		.type	amHere, %object
 238              		.size	amHere, 1
 239              	amHere:
 240 003b 00       		.space	1
 241              		.global	spiCounter
 242              		.type	spiCounter, %object
 243              		.size	spiCounter, 1
 244              	spiCounter:
 245 003c 00       		.space	1
 246              		.global	newDataFlag
 247              		.type	newDataFlag, %object
 248              		.size	newDataFlag, 1
 249              	newDataFlag:
 250 003d 00       		.space	1
 251              		.global	prevOctave
 252 003e 0000     		.align	2
 253              		.type	prevOctave, %object
 254              		.size	prevOctave, 4
 255              	prevOctave:
 256 0040 00000000 		.space	4
 257              		.global	pluck_index
 258              		.type	pluck_index, %object
 259              		.size	pluck_index, 1
 260              	pluck_index:
 261 0044 00       		.space	1
 262              		.global	amHere2
 263              		.type	amHere2, %object
 264              		.size	amHere2, 1
 265              	amHere2:
 266 0045 00       		.space	1
 267              		.global	spiCounter2
 268              		.type	spiCounter2, %object
 269              		.size	spiCounter2, 1
 270              	spiCounter2:
 271 0046 00       		.space	1
 272              		.global	newDataFlag2
 273              		.type	newDataFlag2, %object
 274              		.size	newDataFlag2, 1
 275              	newDataFlag2:
 276 0047 00       		.space	1
 277              		.global	currentPluckBuffer
 278              		.type	currentPluckBuffer, %object
 279              		.size	currentPluckBuffer, 1
 280              	currentPluckBuffer:
 281 0048 00       		.space	1
 282              		.global	currentBarBuffer
 283              		.type	currentBarBuffer, %object
 284              		.size	currentBarBuffer, 1
 285              	currentBarBuffer:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 6


 286 0049 00       		.space	1
 287              		.global	pluckErrorCount
 288              		.type	pluckErrorCount, %object
 289              		.size	pluckErrorCount, 1
 290              	pluckErrorCount:
 291 004a 00       		.space	1
 292              		.global	SPI1ErrorCount
 293 004b 00       		.align	1
 294              		.type	SPI1ErrorCount, %object
 295              		.size	SPI1ErrorCount, 2
 296              	SPI1ErrorCount:
 297 004c 0000     		.space	2
 298              		.global	inputData
 299              		.type	inputData, %object
 300              		.size	inputData, 1
 301              	inputData:
 302 004e 00       		.space	1
 303              		.section	.text.spis_1_ss,"ax",%progbits
 304              		.align	2
 305              		.global	spis_1_ss
 306              		.thumb
 307              		.thumb_func
 308              		.type	spis_1_ss, %function
 309              	spis_1_ss:
 310              	.LFB64:
 311              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** #define EEPROM_NECKS_OFFSET 0
  11:main.c        **** #define EEPROM_COPEDENT_OFFSET 2
  12:main.c        **** #define COPEDENT_SIZE_IN_BYTES 278 //including name bytes
  13:main.c        **** #define COPEDENT_SIZE_IN_FLOATS 132 // not including name bytes
  14:main.c        **** #define NAME_LENGTH_IN_BYTES 14
  15:main.c        **** 
  16:main.c        **** 
  17:main.c        **** 
  18:main.c        **** #define myBufferSize 32
  19:main.c        **** void parseSysex(void);
  20:main.c        **** 
  21:main.c        **** uint8_t sysexBuffer[1024];
  22:main.c        **** uint32_t sysexPointer = 0;
  23:main.c        **** uint8_t receivingSysex = 0;
  24:main.c        **** uint8_t parsingSysex = 0;
  25:main.c        **** volatile uint8_t presetArray[1024];
  26:main.c        **** uint8_t presetNumberToWrite = 0;
  27:main.c        **** uint8_t copedentNumberToWrite = 0;
  28:main.c        **** uint8_t sendMessageEnd = 0;
  29:main.c        **** enum presetArraySectionState
  30:main.c        **** {
  31:main.c        ****     presetName = 0,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 7


  32:main.c        ****     initialVals = 2,
  33:main.c        ****     mapCountNext = 3,
  34:main.c        ****     mapping = 4,
  35:main.c        ****     presetEnd = 5,
  36:main.c        **** };
  37:main.c        **** uint8_t presetArraySection = presetName;
  38:main.c        **** 
  39:main.c        **** uint16_t messageArraySendCount = 0;
  40:main.c        **** uint16_t messageArraySize = 0;
  41:main.c        **** 
  42:main.c        **** uint8_t sysexMessageInProgress = 0;
  43:main.c        **** 
  44:main.c        **** uint8_t bufCount = 0;
  45:main.c        **** volatile uint8_t sendingMessage = 0;
  46:main.c        **** 
  47:main.c        **** uint32_t currentFloat = 0;
  48:main.c        **** uint32_t mapCount = 0;
  49:main.c        **** 
  50:main.c        **** uint16_t valsCount = 0;
  51:main.c        **** uint16_t mapCountExpectation = 0;
  52:main.c        **** uint16_t numMappings = 0;
  53:main.c        **** volatile uint8_t parseThatMF = 0;
  54:main.c        **** volatile float valCheck = 0.0f;
  55:main.c        **** volatile float testVal = 0.0f;
  56:main.c        **** 
  57:main.c        **** int numStrings = 10;
  58:main.c        **** /*
  59:main.c        **** #define TUNING_ARRAY_SIZE 258
  60:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  61:main.c        **** */
  62:main.c        **** 
  63:main.c        **** volatile uint8 usbActivityCounter = 0u;
  64:main.c        **** uint8 midiMsg[4];
  65:main.c        **** uint8_t currentVBUS = 0;
  66:main.c        **** uint8_t prevVBUS = 0;
  67:main.c        **** volatile uint8_t USB_active = 0;
  68:main.c        **** volatile uint8_t USB_check_flag = 0;
  69:main.c        **** 
  70:main.c        **** uint8 myArray[myBufferSize];
  71:main.c        **** uint8 myInputArray[2];
  72:main.c        **** int32_t linearPotValue32Bit[2];
  73:main.c        **** uint8_t i = 0;
  74:main.c        **** uint8_t counter = 0;
  75:main.c        **** uint8_t returnedData[myBufferSize];
  76:main.c        **** int32_t temper;
  77:main.c        **** int previousButtons[11];
  78:main.c        **** int octave = 4;
  79:main.c        **** uint16_t angle[10];
  80:main.c        **** uint16_t prevAngle[10];
  81:main.c        **** 
  82:main.c        **** uint16_t ADC_values[4];
  83:main.c        **** uint16_t rawAngle = 0;
  84:main.c        **** uint16_t midiSent = 0;
  85:main.c        **** uint16_t midiOverflow = 0;
  86:main.c        **** 
  87:main.c        **** 
  88:main.c        **** uint8_t currentCopedent = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 8


  89:main.c        **** uint8_t necks[2] = {0,1};
  90:main.c        **** 
  91:main.c        **** void checkUSB_Vbus(void);
  92:main.c        **** void sendMIDIAllNotesOff(void);
  93:main.c        **** void sendMIDIPitchBend(int val, int channel);
  94:main.c        **** void firstCheckUSB_Vbus(void);
  95:main.c        **** void restartSystemCheck(void);
  96:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
  97:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
  98:main.c        **** CY_ISR_PROTO(SleepIsr_function);
  99:main.c        **** void noteEvent(int string);
 100:main.c        **** void I2C_reset(void);
 101:main.c        **** void CCEvent(int cc, int val);
 102:main.c        **** void DmaRxConfiguration(void);
 103:main.c        **** /* DMA Configuration for DMA_RX */
 104:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
 105:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
 106:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
 107:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
 108:main.c        **** 
 109:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
 110:main.c        **** #define BAR_BUFFER_SIZE                 (8u)
 111:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
 112:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 113:main.c        **** uint8 rx1TD[2], rx2TD[2] __attribute__((aligned(32)));
 114:main.c        **** 
 115:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 116:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 117:main.c        **** 
 118:main.c        **** volatile uint16_t strings[12];
 119:main.c        **** volatile uint16_t prevStrings[12];
 120:main.c        **** volatile uint16_t bar[2];
 121:main.c        **** volatile uint16_t prevBar[2];
 122:main.c        **** volatile uint16_t maxStrings[12];
 123:main.c        **** volatile uint8_t amHere = 0;
 124:main.c        **** volatile uint8_t spiCounter = 0;
 125:main.c        **** volatile uint8_t newDataFlag = 0;
 126:main.c        **** int prevOctave = 0;
 127:main.c        **** uint8_t pluck_index = 0;
 128:main.c        **** volatile uint8_t amHere2 = 0;
 129:main.c        **** volatile uint8_t spiCounter2 = 0;
 130:main.c        **** volatile uint8_t newDataFlag2 = 0;
 131:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 132:main.c        **** volatile uint8_t currentBarBuffer = 0;
 133:main.c        **** volatile uint8_t pluckErrorCount = 0;
 134:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 135:main.c        **** 
 136:main.c        **** 
 137:main.c        **** 
 138:main.c        **** volatile uint8_t inputData = 0;
 139:main.c        **** 
 140:main.c        **** 
 141:main.c        **** union breakFloat {
 142:main.c        ****  float f;
 143:main.c        ****  uint8_t b[4];  
 144:main.c        ****  uint32_t u32;
 145:main.c        **** };
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 9


 146:main.c        **** 
 147:main.c        **** 
 148:main.c        **** CY_ISR(spis_1_ss)
 149:main.c        **** {
 312              		.loc 1 149 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316 0000 90B5     		push	{r4, r7, lr}
 317              		.cfi_def_cfa_offset 12
 318              		.cfi_offset 4, -12
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 83B0     		sub	sp, sp, #12
 322              		.cfi_def_cfa_offset 24
 323 0004 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 150:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 325              		.loc 1 150 0
 326 0006 554B     		ldr	r3, .L5
 327 0008 1B78     		ldrb	r3, [r3]
 328 000a DBB2     		uxtb	r3, r3
 329 000c 002B     		cmp	r3, #0
 330 000e 0CBF     		ite	eq
 331 0010 0123     		moveq	r3, #1
 332 0012 0023     		movne	r3, #0
 333 0014 DBB2     		uxtb	r3, r3
 334 0016 1A46     		mov	r2, r3
 335 0018 504B     		ldr	r3, .L5
 336 001a 1A70     		strb	r2, [r3]
 151:main.c        **** 
 152:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 337              		.loc 1 152 0
 338 001c 4F4B     		ldr	r3, .L5
 339 001e 1B78     		ldrb	r3, [r3]
 340 0020 DBB2     		uxtb	r3, r3
 341 0022 002B     		cmp	r3, #0
 342 0024 0CBF     		ite	eq
 343 0026 0123     		moveq	r3, #1
 344 0028 0023     		movne	r3, #0
 345 002a DBB2     		uxtb	r3, r3
 346 002c 1946     		mov	r1, r3
 347 002e 4C4A     		ldr	r2, .L5+4
 348 0030 1A23     		movs	r3, #26
 349 0032 03FB01F3 		mul	r3, r3, r1
 350 0036 1344     		add	r3, r3, r2
 351 0038 1B78     		ldrb	r3, [r3]
 352 003a DBB2     		uxtb	r3, r3
 353 003c FE2B     		cmp	r3, #254
 354 003e 4FD1     		bne	.L2
 355              		.loc 1 152 0 is_stmt 0 discriminator 1
 356 0040 464B     		ldr	r3, .L5
 357 0042 1B78     		ldrb	r3, [r3]
 358 0044 DBB2     		uxtb	r3, r3
 359 0046 002B     		cmp	r3, #0
 360 0048 0CBF     		ite	eq
 361 004a 0123     		moveq	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 10


 362 004c 0023     		movne	r3, #0
 363 004e DBB2     		uxtb	r3, r3
 364 0050 1946     		mov	r1, r3
 365 0052 434A     		ldr	r2, .L5+4
 366 0054 1A23     		movs	r3, #26
 367 0056 03FB01F3 		mul	r3, r3, r1
 368 005a 1344     		add	r3, r3, r2
 369 005c 1933     		adds	r3, r3, #25
 370 005e 1B78     		ldrb	r3, [r3]
 371 0060 DBB2     		uxtb	r3, r3
 372 0062 FD2B     		cmp	r3, #253
 373 0064 3CD1     		bne	.L2
 374              	.LBB2:
 153:main.c        ****     {
 154:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 375              		.loc 1 154 0 is_stmt 1
 376 0066 0023     		movs	r3, #0
 377 0068 7B60     		str	r3, [r7, #4]
 378 006a 34E0     		b	.L3
 379              	.L4:
 155:main.c        ****         {
 156:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 380              		.loc 1 156 0 discriminator 3
 381 006c 3B4B     		ldr	r3, .L5
 382 006e 1B78     		ldrb	r3, [r3]
 383 0070 DBB2     		uxtb	r3, r3
 384 0072 002B     		cmp	r3, #0
 385 0074 0CBF     		ite	eq
 386 0076 0123     		moveq	r3, #1
 387 0078 0023     		movne	r3, #0
 388 007a DBB2     		uxtb	r3, r3
 389 007c 1846     		mov	r0, r3
 390 007e 7B68     		ldr	r3, [r7, #4]
 391 0080 5B00     		lsls	r3, r3, #1
 392 0082 0133     		adds	r3, r3, #1
 393 0084 3649     		ldr	r1, .L5+4
 394 0086 1A22     		movs	r2, #26
 395 0088 02FB00F2 		mul	r2, r2, r0
 396 008c 0A44     		add	r2, r2, r1
 397 008e 1344     		add	r3, r3, r2
 398 0090 1B78     		ldrb	r3, [r3]
 399 0092 DBB2     		uxtb	r3, r3
 400 0094 9BB2     		uxth	r3, r3
 401 0096 1B02     		lsls	r3, r3, #8
 402 0098 9AB2     		uxth	r2, r3
 403 009a 304B     		ldr	r3, .L5
 404 009c 1B78     		ldrb	r3, [r3]
 405 009e DBB2     		uxtb	r3, r3
 406 00a0 002B     		cmp	r3, #0
 407 00a2 0CBF     		ite	eq
 408 00a4 0123     		moveq	r3, #1
 409 00a6 0023     		movne	r3, #0
 410 00a8 DBB2     		uxtb	r3, r3
 411 00aa 1C46     		mov	r4, r3
 412 00ac 7B68     		ldr	r3, [r7, #4]
 413 00ae 0133     		adds	r3, r3, #1
 414 00b0 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 11


 415 00b2 2B48     		ldr	r0, .L5+4
 416 00b4 1A21     		movs	r1, #26
 417 00b6 01FB04F1 		mul	r1, r1, r4
 418 00ba 0144     		add	r1, r1, r0
 419 00bc 0B44     		add	r3, r3, r1
 420 00be 1B78     		ldrb	r3, [r3]
 421 00c0 DBB2     		uxtb	r3, r3
 422 00c2 9BB2     		uxth	r3, r3
 423 00c4 1344     		add	r3, r3, r2
 424 00c6 99B2     		uxth	r1, r3
 425 00c8 264A     		ldr	r2, .L5+8
 426 00ca 7B68     		ldr	r3, [r7, #4]
 427 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 154:main.c        ****         {
 428              		.loc 1 154 0 discriminator 3
 429 00d0 7B68     		ldr	r3, [r7, #4]
 430 00d2 0133     		adds	r3, r3, #1
 431 00d4 7B60     		str	r3, [r7, #4]
 432              	.L3:
 154:main.c        ****         {
 433              		.loc 1 154 0 is_stmt 0 discriminator 1
 434 00d6 244B     		ldr	r3, .L5+12
 435 00d8 1B68     		ldr	r3, [r3]
 436 00da 7A68     		ldr	r2, [r7, #4]
 437 00dc 9A42     		cmp	r2, r3
 438 00de C5DB     		blt	.L4
 439              	.L2:
 440              	.LBE2:
 157:main.c        ****         }
 158:main.c        ****     }
 159:main.c        ****     SPIS_1_ClearRxBuffer();
 441              		.loc 1 159 0 is_stmt 1
 442 00e0 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 160:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 443              		.loc 1 160 0
 444 00e4 214B     		ldr	r3, .L5+16
 445 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446 00e8 1846     		mov	r0, r3
 447 00ea FFF7FEFF 		bl	CyDmaClearPendingDrq
 161:main.c        **** 
 162:main.c        ****     //set up the next DMA transaction
 163:main.c        **** 
 164:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 448              		.loc 1 164 0
 449 00ee 1B4B     		ldr	r3, .L5
 450 00f0 1B78     		ldrb	r3, [r3]
 451 00f2 DBB2     		uxtb	r3, r3
 452 00f4 1A46     		mov	r2, r3
 453 00f6 1E4B     		ldr	r3, .L5+20
 454 00f8 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 455 00fa 0223     		movs	r3, #2
 456 00fc FE22     		movs	r2, #254
 457 00fe 1A21     		movs	r1, #26
 458 0100 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 165:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 459              		.loc 1 165 0
 460 0104 154B     		ldr	r3, .L5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 12


 461 0106 1B78     		ldrb	r3, [r3]
 462 0108 DBB2     		uxtb	r3, r3
 463 010a 1A46     		mov	r2, r3
 464 010c 184B     		ldr	r3, .L5+20
 465 010e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 466 0110 124B     		ldr	r3, .L5
 467 0112 1B78     		ldrb	r3, [r3]
 468 0114 DBB2     		uxtb	r3, r3
 469 0116 1A46     		mov	r2, r3
 470 0118 1A23     		movs	r3, #26
 471 011a 03FB02F3 		mul	r3, r3, r2
 472 011e 104A     		ldr	r2, .L5+4
 473 0120 1344     		add	r3, r3, r2
 474 0122 9BB2     		uxth	r3, r3
 475 0124 1A46     		mov	r2, r3
 476 0126 46F25741 		movw	r1, #25687
 477 012a FFF7FEFF 		bl	CyDmaTdSetAddress
 166:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 478              		.loc 1 166 0
 479 012e 0F4B     		ldr	r3, .L5+16
 480 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 481 0132 0A4B     		ldr	r3, .L5
 482 0134 1B78     		ldrb	r3, [r3]
 483 0136 DBB2     		uxtb	r3, r3
 484 0138 1946     		mov	r1, r3
 485 013a 0D4B     		ldr	r3, .L5+20
 486 013c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 487 013e 1946     		mov	r1, r3
 488 0140 1046     		mov	r0, r2
 489 0142 FFF7FEFF 		bl	CyDmaChSetInitialTd
 167:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 490              		.loc 1 167 0
 491 0146 094B     		ldr	r3, .L5+16
 492 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 493 014a 0121     		movs	r1, #1
 494 014c 1846     		mov	r0, r3
 495 014e FFF7FEFF 		bl	CyDmaChEnable
 168:main.c        **** 
 169:main.c        **** }
 496              		.loc 1 169 0
 497 0152 00BF     		nop
 498 0154 0C37     		adds	r7, r7, #12
 499              		.cfi_def_cfa_offset 12
 500 0156 BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 0158 90BD     		pop	{r4, r7, pc}
 504              	.L6:
 505 015a 00BF     		.align	2
 506              	.L5:
 507 015c 00000000 		.word	currentPluckBuffer
 508 0160 00000000 		.word	rxBufferPluck
 509 0164 00000000 		.word	strings
 510 0168 00000000 		.word	numStrings
 511 016c 00000000 		.word	rx1Channel
 512 0170 00000000 		.word	rx1TD
 513              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 13


 514              	.LFE64:
 515              		.size	spis_1_ss, .-spis_1_ss
 516              		.global	spiAdjusted
 517              		.bss
 518              		.type	spiAdjusted, %object
 519              		.size	spiAdjusted, 1
 520              	spiAdjusted:
 521 004f 00       		.space	1
 522              		.global	mySpiCounter
 523              		.type	mySpiCounter, %object
 524              		.size	mySpiCounter, 1
 525              	mySpiCounter:
 526 0050 00       		.space	1
 527              		.global	offsetErrorCount
 528 0051 00       		.align	1
 529              		.type	offsetErrorCount, %object
 530              		.size	offsetErrorCount, 2
 531              	offsetErrorCount:
 532 0052 0000     		.space	2
 533              		.global	SPI2errorflag
 534              		.type	SPI2errorflag, %object
 535              		.size	SPI2errorflag, 1
 536              	SPI2errorflag:
 537 0054 00       		.space	1
 538              		.global	bar_index
 539 0055 000000   		.align	2
 540              		.type	bar_index, %object
 541              		.size	bar_index, 4
 542              	bar_index:
 543 0058 00000000 		.space	4
 544              		.comm	knobs,4,4
 545              		.comm	prevKnobs,4,4
 546              		.global	SPI2started
 547              		.type	SPI2started, %object
 548              		.size	SPI2started, 1
 549              	SPI2started:
 550 005c 00       		.space	1
 551              		.section	.text.spis_2_ss,"ax",%progbits
 552              		.align	2
 553              		.global	spis_2_ss
 554              		.thumb
 555              		.thumb_func
 556              		.type	spis_2_ss, %function
 557              	spis_2_ss:
 558              	.LFB65:
 170:main.c        **** 
 171:main.c        **** 
 172:main.c        **** 
 173:main.c        **** uint8_t spiAdjusted = 0;
 174:main.c        **** uint8_t mySpiCounter = 0;
 175:main.c        **** volatile uint16_t offsetErrorCount = 0;
 176:main.c        **** volatile uint8_t SPI2errorflag = 0;
 177:main.c        **** volatile int bar_index = 0;
 178:main.c        **** uint8_t knobs[4];
 179:main.c        **** uint8_t prevKnobs[4];
 180:main.c        **** 
 181:main.c        **** volatile uint8_t SPI2started = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 14


 182:main.c        **** 
 183:main.c        **** 
 184:main.c        **** CY_ISR(spis_2_ss)
 185:main.c        **** {
 559              		.loc 1 185 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 186:main.c        **** 
 187:main.c        ****     currentBarBuffer = !currentBarBuffer;
 569              		.loc 1 187 0
 570 0004 214B     		ldr	r3, .L8
 571 0006 1B78     		ldrb	r3, [r3]
 572 0008 DBB2     		uxtb	r3, r3
 573 000a 002B     		cmp	r3, #0
 574 000c 0CBF     		ite	eq
 575 000e 0123     		moveq	r3, #1
 576 0010 0023     		movne	r3, #0
 577 0012 DBB2     		uxtb	r3, r3
 578 0014 1A46     		mov	r2, r3
 579 0016 1D4B     		ldr	r3, .L8
 580 0018 1A70     		strb	r2, [r3]
 188:main.c        ****     SPIS_2_ClearRxBuffer();
 581              		.loc 1 188 0
 582 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 189:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 583              		.loc 1 189 0
 584 001e 1C4B     		ldr	r3, .L8+4
 585 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 586 0022 1846     		mov	r0, r3
 587 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 190:main.c        **** 
 191:main.c        ****     //set up the next DMA transaction
 192:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 588              		.loc 1 192 0
 589 0028 184B     		ldr	r3, .L8
 590 002a 1B78     		ldrb	r3, [r3]
 591 002c DBB2     		uxtb	r3, r3
 592 002e 1A46     		mov	r2, r3
 593 0030 184B     		ldr	r3, .L8+8
 594 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 595 0034 0623     		movs	r3, #6
 596 0036 FE22     		movs	r2, #254
 597 0038 0821     		movs	r1, #8
 598 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 193:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 599              		.loc 1 193 0
 600 003e 134B     		ldr	r3, .L8
 601 0040 1B78     		ldrb	r3, [r3]
 602 0042 DBB2     		uxtb	r3, r3
 603 0044 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 15


 604 0046 134B     		ldr	r3, .L8+8
 605 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 606 004a 104B     		ldr	r3, .L8
 607 004c 1B78     		ldrb	r3, [r3]
 608 004e DBB2     		uxtb	r3, r3
 609 0050 DB00     		lsls	r3, r3, #3
 610 0052 114A     		ldr	r2, .L8+12
 611 0054 1344     		add	r3, r3, r2
 612 0056 9BB2     		uxth	r3, r3
 613 0058 1A46     		mov	r2, r3
 614 005a 46F25851 		movw	r1, #25944
 615 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 194:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 616              		.loc 1 194 0
 617 0062 0B4B     		ldr	r3, .L8+4
 618 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 619 0066 094B     		ldr	r3, .L8
 620 0068 1B78     		ldrb	r3, [r3]
 621 006a DBB2     		uxtb	r3, r3
 622 006c 1946     		mov	r1, r3
 623 006e 094B     		ldr	r3, .L8+8
 624 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 625 0072 1946     		mov	r1, r3
 626 0074 1046     		mov	r0, r2
 627 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 195:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 628              		.loc 1 195 0
 629 007a 054B     		ldr	r3, .L8+4
 630 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631 007e 0121     		movs	r1, #1
 632 0080 1846     		mov	r0, r3
 633 0082 FFF7FEFF 		bl	CyDmaChEnable
 196:main.c        **** }
 634              		.loc 1 196 0
 635 0086 00BF     		nop
 636 0088 80BD     		pop	{r7, pc}
 637              	.L9:
 638 008a 00BF     		.align	2
 639              	.L8:
 640 008c 00000000 		.word	currentBarBuffer
 641 0090 00000000 		.word	rx2Channel
 642 0094 00000000 		.word	rx2TD
 643 0098 00000000 		.word	rxBufferBar
 644              		.cfi_endproc
 645              	.LFE65:
 646              		.size	spis_2_ss, .-spis_2_ss
 647              		.bss
 648 005d 000000   		.align	2
 649              	eepromArray:
 650 0060 0000     		.space	2
 651              		.global	array
 652 0062 0000     		.align	2
 653              		.type	array, %object
 654              		.size	array, 2
 655              	array:
 656 0064 0000     		.space	2
 657              		.comm	eepromReturnValue,1,1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 16


 658              		.global	Em_EEPROM_em_EepromStorage
 659              		.section	.rodata
 660              		.align	8
 661              		.type	Em_EEPROM_em_EepromStorage, %object
 662              		.size	Em_EEPROM_em_EepromStorage, 1024
 663              	Em_EEPROM_em_EepromStorage:
 664 0000 00000000 		.space	1024
 664      00000000 
 664      00000000 
 664      00000000 
 664      00000000 
 665              		.comm	eeprom_cnt,1,1
 666              		.comm	status,4,4
 667              		.comm	ptr,4,4
 668              		.global	barCount
 669              		.bss
 670 0066 0000     		.align	2
 671              		.type	barCount, %object
 672              		.size	barCount, 4
 673              	barCount:
 674 0068 00000000 		.space	4
 675              		.section	.text.Vbus_function,"ax",%progbits
 676              		.align	2
 677              		.global	Vbus_function
 678              		.thumb
 679              		.thumb_func
 680              		.type	Vbus_function, %function
 681              	Vbus_function:
 682              	.LFB66:
 197:main.c        **** 
 198:main.c        **** 
 199:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 200:main.c        ****                                             
 201:main.c        ****     uint8 array[] ={ 0, 0 };
 202:main.c        ****                                 
 203:main.c        ****     /*Return status for EEPROM and UART*/ 
 204:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 205:main.c        **** 
 206:main.c        **** 
 207:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 208:main.c        **** #if defined (__ICCARM__)
 209:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 210:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 211:main.c        **** #else
 212:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 213:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 214:main.c        **** #endif /* defined (__ICCARM__) */
 215:main.c        **** 
 216:main.c        ****     uint8 eeprom_cnt;
 217:main.c        ****     cystatus status;
 218:main.c        ****     volatile const uint8 * ptr;
 219:main.c        **** volatile int barCount = 0;
 220:main.c        **** 
 221:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 222:main.c        ****     
 223:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 224:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 17


 225:main.c        **** CY_ISR(Vbus_function)
 226:main.c        **** {
 683              		.loc 1 226 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 1, uses_anonymous_args = 0
 687 0000 80B5     		push	{r7, lr}
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 7, -8
 690              		.cfi_offset 14, -4
 691 0002 00AF     		add	r7, sp, #0
 692              		.cfi_def_cfa_register 7
 227:main.c        ****     //plug or unplug event
 228:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 229:main.c        ****     //otherwise, restart
 230:main.c        ****     my_Vbus_ISR_ClearPending();
 693              		.loc 1 230 0
 694 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 231:main.c        ****     vBusPin_ClearInterrupt();
 695              		.loc 1 231 0
 696 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 232:main.c        ****     restartSystemCheck();
 697              		.loc 1 232 0
 698 000c FFF7FEFF 		bl	restartSystemCheck
 233:main.c        **** 
 234:main.c        **** }
 699              		.loc 1 234 0
 700 0010 00BF     		nop
 701 0012 80BD     		pop	{r7, pc}
 702              		.cfi_endproc
 703              	.LFE66:
 704              		.size	Vbus_function, .-Vbus_function
 705              		.section	.text.restartSystemCheck,"ax",%progbits
 706              		.align	2
 707              		.global	restartSystemCheck
 708              		.thumb
 709              		.thumb_func
 710              		.type	restartSystemCheck, %function
 711              	restartSystemCheck:
 712              	.LFB67:
 235:main.c        **** 
 236:main.c        **** void restartSystemCheck()
 237:main.c        **** {
 713              		.loc 1 237 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 238:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 723              		.loc 1 238 0
 724 0004 184B     		ldr	r3, .L15
 725 0006 0222     		movs	r2, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 18


 726 0008 1849     		ldr	r1, .L15+4
 727 000a 0020     		movs	r0, #0
 728 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 729 0010 0346     		mov	r3, r0
 730 0012 1A46     		mov	r2, r3
 731 0014 164B     		ldr	r3, .L15+8
 732 0016 1A70     		strb	r2, [r3]
 239:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 240:main.c        ****     if (USB_VBusPresent() == 1)
 733              		.loc 1 240 0
 734 0018 FFF7FEFF 		bl	USB_VBusPresent
 735 001c 0346     		mov	r3, r0
 736 001e 012B     		cmp	r3, #1
 737 0020 20D1     		bne	.L14
 241:main.c        ****     {
 242:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 738              		.loc 1 242 0
 739 0022 124B     		ldr	r3, .L15+4
 740 0024 1B78     		ldrb	r3, [r3]
 741 0026 DBB2     		uxtb	r3, r3
 742 0028 012B     		cmp	r3, #1
 743 002a 0CD1     		bne	.L13
 243:main.c        ****         {
 244:main.c        ****             //a flag says we just restarted
 245:main.c        ****             //write a zero so it knows next time that it's OK to restart
 246:main.c        ****             array[0] = 0;
 744              		.loc 1 246 0
 745 002c 114B     		ldr	r3, .L15+12
 746 002e 0022     		movs	r2, #0
 747 0030 1A70     		strb	r2, [r3]
 247:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 748              		.loc 1 247 0
 749 0032 0D4B     		ldr	r3, .L15
 750 0034 0222     		movs	r2, #2
 751 0036 0F49     		ldr	r1, .L15+12
 752 0038 0020     		movs	r0, #0
 753 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 248:main.c        ****             USB_check_flag = 1;
 754              		.loc 1 248 0
 755 003e 0E4B     		ldr	r3, .L15+16
 756 0040 0122     		movs	r2, #1
 757 0042 1A70     		strb	r2, [r3]
 249:main.c        ****         }
 250:main.c        ****         else
 251:main.c        ****         {
 252:main.c        ****            //otherwise, we need to restart
 253:main.c        ****            array[0] = 1;
 254:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 255:main.c        ****             USB_Stop();
 256:main.c        ****             I2C_1_Stop();
 257:main.c        ****             CySoftwareReset();
 258:main.c        ****         }
 259:main.c        ****     }
 260:main.c        **** }
 758              		.loc 1 260 0
 759 0044 0EE0     		b	.L14
 760              	.L13:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 19


 253:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 761              		.loc 1 253 0
 762 0046 0B4B     		ldr	r3, .L15+12
 763 0048 0122     		movs	r2, #1
 764 004a 1A70     		strb	r2, [r3]
 254:main.c        ****             USB_Stop();
 765              		.loc 1 254 0
 766 004c 064B     		ldr	r3, .L15
 767 004e 0222     		movs	r2, #2
 768 0050 0849     		ldr	r1, .L15+12
 769 0052 0020     		movs	r0, #0
 770 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 255:main.c        ****             I2C_1_Stop();
 771              		.loc 1 255 0
 772 0058 FFF7FEFF 		bl	USB_Stop
 256:main.c        ****             CySoftwareReset();
 773              		.loc 1 256 0
 774 005c FFF7FEFF 		bl	I2C_1_Stop
 257:main.c        ****         }
 775              		.loc 1 257 0
 776 0060 FFF7FEFF 		bl	CySoftwareReset
 777              	.L14:
 778              		.loc 1 260 0
 779 0064 00BF     		nop
 780 0066 80BD     		pop	{r7, pc}
 781              	.L16:
 782              		.align	2
 783              	.L15:
 784 0068 00000000 		.word	Em_EEPROM_context
 785 006c 60000000 		.word	eepromArray
 786 0070 00000000 		.word	eepromReturnValue
 787 0074 00000000 		.word	array
 788 0078 00000000 		.word	USB_check_flag
 789              		.cfi_endproc
 790              	.LFE67:
 791              		.size	restartSystemCheck, .-restartSystemCheck
 792              		.global	__aeabi_fcmpgt
 793              		.global	__aeabi_fcmplt
 794              		.section	.text.LEAF_clip,"ax",%progbits
 795              		.align	2
 796              		.global	LEAF_clip
 797              		.thumb
 798              		.thumb_func
 799              		.type	LEAF_clip, %function
 800              	LEAF_clip:
 801              	.LFB68:
 261:main.c        ****     
 262:main.c        **** #define INV_440 0.0022727272727273f
 263:main.c        **** 
 264:main.c        **** float   LEAF_clip(float min, float val, float max)
 265:main.c        **** {
 802              		.loc 1 265 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 24
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 80B5     		push	{r7, lr}
 807              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 20


 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810 0002 86B0     		sub	sp, sp, #24
 811              		.cfi_def_cfa_offset 32
 812 0004 00AF     		add	r7, sp, #0
 813              		.cfi_def_cfa_register 7
 814 0006 F860     		str	r0, [r7, #12]	@ float
 815 0008 B960     		str	r1, [r7, #8]	@ float
 816 000a 7A60     		str	r2, [r7, #4]	@ float
 266:main.c        ****     float tempmin = min;
 817              		.loc 1 266 0
 818 000c FB68     		ldr	r3, [r7, #12]	@ float
 819 000e 7B61     		str	r3, [r7, #20]	@ float
 267:main.c        ****     float tempmax = max;
 820              		.loc 1 267 0
 821 0010 7B68     		ldr	r3, [r7, #4]	@ float
 822 0012 3B61     		str	r3, [r7, #16]	@ float
 268:main.c        ****     if (min > max)
 823              		.loc 1 268 0
 824 0014 7968     		ldr	r1, [r7, #4]	@ float
 825 0016 F868     		ldr	r0, [r7, #12]	@ float
 826 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 827 001c 0346     		mov	r3, r0
 828 001e 002B     		cmp	r3, #0
 829 0020 03D0     		beq	.L18
 269:main.c        ****     {
 270:main.c        ****         tempmin = max;
 830              		.loc 1 270 0
 831 0022 7B68     		ldr	r3, [r7, #4]	@ float
 832 0024 7B61     		str	r3, [r7, #20]	@ float
 271:main.c        ****         tempmax = min;
 833              		.loc 1 271 0
 834 0026 FB68     		ldr	r3, [r7, #12]	@ float
 835 0028 3B61     		str	r3, [r7, #16]	@ float
 836              	.L18:
 272:main.c        ****     }
 273:main.c        ****     if (val < tempmin)
 837              		.loc 1 273 0
 838 002a 7969     		ldr	r1, [r7, #20]	@ float
 839 002c B868     		ldr	r0, [r7, #8]	@ float
 840 002e FFF7FEFF 		bl	__aeabi_fcmplt
 841 0032 0346     		mov	r3, r0
 842 0034 002B     		cmp	r3, #0
 843 0036 01D0     		beq	.L28
 274:main.c        ****     {
 275:main.c        ****         return tempmin;
 844              		.loc 1 275 0
 845 0038 7B69     		ldr	r3, [r7, #20]	@ float
 846 003a 09E0     		b	.L22
 847              	.L28:
 276:main.c        ****     }
 277:main.c        ****     else if (val > tempmax)
 848              		.loc 1 277 0
 849 003c 3969     		ldr	r1, [r7, #16]	@ float
 850 003e B868     		ldr	r0, [r7, #8]	@ float
 851 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 852 0044 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 21


 853 0046 002B     		cmp	r3, #0
 854 0048 01D0     		beq	.L29
 278:main.c        ****     {
 279:main.c        ****         return tempmax;
 855              		.loc 1 279 0
 856 004a 3B69     		ldr	r3, [r7, #16]	@ float
 857 004c 00E0     		b	.L22
 858              	.L29:
 280:main.c        ****     }
 281:main.c        ****     else
 282:main.c        ****     {
 283:main.c        ****         return val;
 859              		.loc 1 283 0
 860 004e BB68     		ldr	r3, [r7, #8]	@ float
 861              	.L22:
 284:main.c        ****     }
 285:main.c        **** }
 862              		.loc 1 285 0
 863 0050 1846     		mov	r0, r3
 864 0052 1837     		adds	r7, r7, #24
 865              		.cfi_def_cfa_offset 8
 866 0054 BD46     		mov	sp, r7
 867              		.cfi_def_cfa_register 13
 868              		@ sp needed
 869 0056 80BD     		pop	{r7, pc}
 870              		.cfi_endproc
 871              	.LFE68:
 872              		.size	LEAF_clip, .-LEAF_clip
 873              		.global	__aeabi_fcmple
 874              		.global	__aeabi_fmul
 875              		.section	.text.mtof,"ax",%progbits
 876              		.align	2
 877              		.global	mtof
 878              		.thumb
 879              		.thumb_func
 880              		.type	mtof, %function
 881              	mtof:
 882              	.LFB69:
 286:main.c        **** float mtof(float f)
 287:main.c        **** {
 883              		.loc 1 287 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 8
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 82B0     		sub	sp, sp, #8
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]	@ float
 288:main.c        ****     if (f <= -1500.0f) return(0);
 896              		.loc 1 288 0
 897 0008 1349     		ldr	r1, .L40
 898 000a 7868     		ldr	r0, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 22


 899 000c FFF7FEFF 		bl	__aeabi_fcmple
 900 0010 0346     		mov	r3, r0
 901 0012 002B     		cmp	r3, #0
 902 0014 02D0     		beq	.L38
 903              		.loc 1 288 0 is_stmt 0 discriminator 1
 904 0016 4FF00003 		mov	r3, #0
 905 001a 19E0     		b	.L33
 906              	.L38:
 289:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 907              		.loc 1 289 0 is_stmt 1
 908 001c 0F49     		ldr	r1, .L40+4
 909 001e 7868     		ldr	r0, [r7, #4]	@ float
 910 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 911 0024 0346     		mov	r3, r0
 912 0026 002B     		cmp	r3, #0
 913 0028 04D0     		beq	.L39
 914              		.loc 1 289 0 is_stmt 0 discriminator 1
 915 002a 0C48     		ldr	r0, .L40+4
 916 002c FFF7FEFF 		bl	mtof
 917 0030 0346     		mov	r3, r0
 918 0032 0DE0     		b	.L33
 919              	.L39:
 290:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 920              		.loc 1 290 0 is_stmt 1
 921 0034 0A49     		ldr	r1, .L40+8
 922 0036 7868     		ldr	r0, [r7, #4]	@ float
 923 0038 FFF7FEFF 		bl	__aeabi_fmul
 924 003c 0346     		mov	r3, r0
 925 003e 1846     		mov	r0, r3
 926 0040 FFF7FEFF 		bl	expf
 927 0044 0346     		mov	r3, r0
 928 0046 0749     		ldr	r1, .L40+12
 929 0048 1846     		mov	r0, r3
 930 004a FFF7FEFF 		bl	__aeabi_fmul
 931 004e 0346     		mov	r3, r0
 932              	.L33:
 291:main.c        **** }
 933              		.loc 1 291 0
 934 0050 1846     		mov	r0, r3
 935 0052 0837     		adds	r7, r7, #8
 936              		.cfi_def_cfa_offset 8
 937 0054 BD46     		mov	sp, r7
 938              		.cfi_def_cfa_register 13
 939              		@ sp needed
 940 0056 80BD     		pop	{r7, pc}
 941              	.L41:
 942              		.align	2
 943              	.L40:
 944 0058 0080BBC4 		.word	-994344960
 945 005c 0060BB44 		.word	1153130496
 946 0060 20986C3D 		.word	1030527008
 947 0064 13D00241 		.word	1090703379
 948              		.cfi_endproc
 949              	.LFE69:
 950              		.size	mtof, .-mtof
 951              		.section	.text.ftom,"ax",%progbits
 952              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 23


 953              		.global	ftom
 954              		.thumb
 955              		.thumb_func
 956              		.type	ftom, %function
 957              	ftom:
 958              	.LFB70:
 292:main.c        **** 
 293:main.c        **** float ftom(float f)
 294:main.c        **** {
 959              		.loc 1 294 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 8
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963 0000 80B5     		push	{r7, lr}
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 82B0     		sub	sp, sp, #8
 968              		.cfi_def_cfa_offset 16
 969 0004 00AF     		add	r7, sp, #0
 970              		.cfi_def_cfa_register 7
 971 0006 7860     		str	r0, [r7, #4]	@ float
 295:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 972              		.loc 1 295 0
 973 0008 4FF00001 		mov	r1, #0
 974 000c 7868     		ldr	r0, [r7, #4]	@ float
 975 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 976 0012 0346     		mov	r3, r0
 977 0014 002B     		cmp	r3, #0
 978 0016 0ED0     		beq	.L48
 979              		.loc 1 295 0 is_stmt 0 discriminator 1
 980 0018 0949     		ldr	r1, .L49
 981 001a 7868     		ldr	r0, [r7, #4]	@ float
 982 001c FFF7FEFF 		bl	__aeabi_fmul
 983 0020 0346     		mov	r3, r0
 984 0022 1846     		mov	r0, r3
 985 0024 FFF7FEFF 		bl	logf
 986 0028 0346     		mov	r3, r0
 987 002a 0649     		ldr	r1, .L49+4
 988 002c 1846     		mov	r0, r3
 989 002e FFF7FEFF 		bl	__aeabi_fmul
 990 0032 0346     		mov	r3, r0
 991 0034 00E0     		b	.L46
 992              	.L48:
 993              		.loc 1 295 0 discriminator 2
 994 0036 044B     		ldr	r3, .L49+8
 995              	.L46:
 296:main.c        **** }
 996              		.loc 1 296 0 is_stmt 1 discriminator 5
 997 0038 1846     		mov	r0, r3
 998 003a 0837     		adds	r7, r7, #8
 999              		.cfi_def_cfa_offset 8
 1000 003c BD46     		mov	sp, r7
 1001              		.cfi_def_cfa_register 13
 1002              		@ sp needed
 1003 003e 80BD     		pop	{r7, pc}
 1004              	.L50:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 24


 1005              		.align	2
 1006              	.L49:
 1007 0040 D27EFA3D 		.word	1039826642
 1008 0044 AC7F8A41 		.word	1099595692
 1009 0048 0080BBC4 		.word	-994344960
 1010              		.cfi_endproc
 1011              	.LFE70:
 1012              		.size	ftom, .-ftom
 1013              		.global	__aeabi_fsub
 1014              		.global	__aeabi_fadd
 1015              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
 1016              		.align	2
 1017              		.global	LEAF_interpolation_linear
 1018              		.thumb
 1019              		.thumb_func
 1020              		.type	LEAF_interpolation_linear, %function
 1021              	LEAF_interpolation_linear:
 1022              	.LFB71:
 297:main.c        **** 
 298:main.c        **** // alpha, [0.0, 1.0]
 299:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 300:main.c        **** {
 1023              		.loc 1 300 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 24
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027 0000 80B5     		push	{r7, lr}
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 86B0     		sub	sp, sp, #24
 1032              		.cfi_def_cfa_offset 32
 1033 0004 00AF     		add	r7, sp, #0
 1034              		.cfi_def_cfa_register 7
 1035 0006 F860     		str	r0, [r7, #12]	@ float
 1036 0008 B960     		str	r1, [r7, #8]	@ float
 1037 000a 7A60     		str	r2, [r7, #4]	@ float
 301:main.c        ****     float omAlpha = 1.0f - alpha;
 1038              		.loc 1 301 0
 1039 000c 7968     		ldr	r1, [r7, #4]	@ float
 1040 000e 4FF07E50 		mov	r0, #1065353216
 1041 0012 FFF7FEFF 		bl	__aeabi_fsub
 1042 0016 0346     		mov	r3, r0
 1043 0018 7B61     		str	r3, [r7, #20]	@ float
 302:main.c        ****     
 303:main.c        ****     // First 1/2 of interpolation
 304:main.c        ****     float out = A * omAlpha;
 1044              		.loc 1 304 0
 1045 001a 7969     		ldr	r1, [r7, #20]	@ float
 1046 001c F868     		ldr	r0, [r7, #12]	@ float
 1047 001e FFF7FEFF 		bl	__aeabi_fmul
 1048 0022 0346     		mov	r3, r0
 1049 0024 3B61     		str	r3, [r7, #16]	@ float
 305:main.c        ****     
 306:main.c        ****     out += B * alpha;
 1050              		.loc 1 306 0
 1051 0026 7968     		ldr	r1, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 25


 1052 0028 B868     		ldr	r0, [r7, #8]	@ float
 1053 002a FFF7FEFF 		bl	__aeabi_fmul
 1054 002e 0346     		mov	r3, r0
 1055 0030 1946     		mov	r1, r3
 1056 0032 3869     		ldr	r0, [r7, #16]	@ float
 1057 0034 FFF7FEFF 		bl	__aeabi_fadd
 1058 0038 0346     		mov	r3, r0
 1059 003a 3B61     		str	r3, [r7, #16]	@ float
 307:main.c        ****     
 308:main.c        ****     return out;
 1060              		.loc 1 308 0
 1061 003c 3B69     		ldr	r3, [r7, #16]	@ float
 309:main.c        **** }
 1062              		.loc 1 309 0
 1063 003e 1846     		mov	r0, r3
 1064 0040 1837     		adds	r7, r7, #24
 1065              		.cfi_def_cfa_offset 8
 1066 0042 BD46     		mov	sp, r7
 1067              		.cfi_def_cfa_register 13
 1068              		@ sp needed
 1069 0044 80BD     		pop	{r7, pc}
 1070              		.cfi_endproc
 1071              	.LFE71:
 1072              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1073              		.comm	I2Cbuff1,256,4
 1074              		.comm	I2Cbuff2,16,4
 1075              		.global	send_it
 1076 0046 00BF     		.bss
 1077              		.type	send_it, %object
 1078              		.size	send_it, 1
 1079              	send_it:
 1080 006c 00       		.space	1
 1081              		.global	mux_states
 1082              		.data
 1083 000a 0000     		.align	2
 1084              		.type	mux_states, %object
 1085              		.size	mux_states, 24
 1086              	mux_states:
 1087 000c 05       		.byte	5
 1088 000d 00       		.byte	0
 1089 000e 05       		.byte	5
 1090 000f 01       		.byte	1
 1091 0010 05       		.byte	5
 1092 0011 02       		.byte	2
 1093 0012 05       		.byte	5
 1094 0013 03       		.byte	3
 1095 0014 05       		.byte	5
 1096 0015 04       		.byte	4
 1097 0016 00       		.byte	0
 1098 0017 00       		.byte	0
 1099 0018 01       		.byte	1
 1100 0019 00       		.byte	0
 1101 001a 03       		.byte	3
 1102 001b 00       		.byte	0
 1103 001c 04       		.byte	4
 1104 001d 00       		.byte	0
 1105 001e 02       		.byte	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 26


 1106 001f 00       		.byte	0
 1107 0020 05       		.byte	5
 1108 0021 05       		.byte	5
 1109 0022 06       		.byte	6
 1110 0023 00       		.byte	0
 1111              		.global	pedals_low
 1112              		.align	2
 1113              		.type	pedals_low, %object
 1114              		.size	pedals_low, 20
 1115              	pedals_low:
 1116 0024 830A     		.short	2691
 1117 0026 0109     		.short	2305
 1118 0028 9909     		.short	2457
 1119 002a 0E02     		.short	526
 1120 002c 9A0E     		.short	3738
 1121 002e 0309     		.short	2307
 1122 0030 C60B     		.short	3014
 1123 0032 8E08     		.short	2190
 1124 0034 E90A     		.short	2793
 1125 0036 2605     		.short	1318
 1126              		.global	pedals_high
 1127              		.align	2
 1128              		.type	pedals_high, %object
 1129              		.size	pedals_high, 20
 1130              	pedals_high:
 1131 0038 ED0A     		.short	2797
 1132 003a 6509     		.short	2405
 1133 003c 140A     		.short	2580
 1134 003e 8702     		.short	647
 1135 0040 0E0F     		.short	3854
 1136 0042 9D09     		.short	2461
 1137 0044 450C     		.short	3141
 1138 0046 3109     		.short	2353
 1139 0048 760B     		.short	2934
 1140 004a E005     		.short	1504
 1141              		.global	deadzone
 1142              		.align	1
 1143              		.type	deadzone, %object
 1144              		.size	deadzone, 2
 1145              	deadzone:
 1146 004c 9600     		.short	150
 1147              		.global	volumePedal
 1148              		.align	1
 1149              		.type	volumePedal, %object
 1150              		.size	volumePedal, 2
 1151              	volumePedal:
 1152 004e FF0F     		.short	4095
 1153              		.comm	processed_pedals,20,4
 1154              		.comm	prev_processed_pedals,20,4
 1155              		.comm	prev_processed_volumePedal,2,2
 1156              		.comm	processed_volumePedal,2,2
 1157              		.global	fretMeasurements
 1158              		.align	2
 1159              		.type	fretMeasurements, %object
 1160              		.size	fretMeasurements, 64
 1161              	fretMeasurements:
 1162 0050 001E7547 		.word	1198857728
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 27


 1163 0054 00A07047 		.word	1198563328
 1164 0058 0052F846 		.word	1190679040
 1165 005c 00000000 		.word	0
 1166 0060 00B01A47 		.word	1192931328
 1167 0064 001C2247 		.word	1193417728
 1168 0068 00507546 		.word	1182093312
 1169 006c 00000000 		.word	0
 1170 0070 0000D746 		.word	1188495360
 1171 0074 00F0EB46 		.word	1189867520
 1172 0078 00280446 		.word	1174677504
 1173 007c 00000000 		.word	0
 1174 0080 00481446 		.word	1175734272
 1175 0084 00805446 		.word	1179942912
 1176 0088 00202745 		.word	1160192000
 1177 008c 00000000 		.word	0
 1178              		.global	currentPresetSelection
 1179              		.bss
 1180 006d 000000   		.align	2
 1181              		.type	currentPresetSelection, %object
 1182              		.size	currentPresetSelection, 4
 1183              	currentPresetSelection:
 1184 0070 00000000 		.space	4
 1185              		.comm	presetNamesArray,896,4
 1186              		.global	presetNumberToLoad
 1187              		.type	presetNumberToLoad, %object
 1188              		.size	presetNumberToLoad, 1
 1189              	presetNumberToLoad:
 1190 0074 00       		.space	1
 1191              		.global	presetLoadedResponse
 1192              		.data
 1193              		.align	2
 1194              		.type	presetLoadedResponse, %object
 1195              		.size	presetLoadedResponse, 2
 1196              	presetLoadedResponse:
 1197 0090 FF       		.byte	-1
 1198 0091 00       		.byte	0
 1199              		.global	fretScaling
 1200 0092 0000     		.align	2
 1201              		.type	fretScaling, %object
 1202              		.size	fretScaling, 16
 1203              	fretScaling:
 1204 0094 0000803F 		.word	1065353216
 1205 0098 ABAA2A3F 		.word	1059760811
 1206 009c 0000003F 		.word	1056964608
 1207 00a0 0000803E 		.word	1048576000
 1208              		.comm	pedalRatios,40,4
 1209              		.global	last_mux
 1210              		.type	last_mux, %object
 1211              		.size	last_mux, 1
 1212              	last_mux:
 1213 00a4 01       		.byte	1
 1214              		.global	main_counter
 1215              		.bss
 1216              		.type	main_counter, %object
 1217              		.size	main_counter, 1
 1218              	main_counter:
 1219 0075 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 28


 1220              		.global	neck
 1221              		.type	neck, %object
 1222              		.size	neck, 1
 1223              	neck:
 1224 0076 00       		.space	1
 1225              		.global	dualSlider
 1226              		.type	dualSlider, %object
 1227              		.size	dualSlider, 1
 1228              	dualSlider:
 1229 0077 00       		.space	1
 1230              		.global	enterUp
 1231              		.data
 1232              		.type	enterUp, %object
 1233              		.size	enterUp, 1
 1234              	enterUp:
 1235 00a5 01       		.byte	1
 1236              		.global	voice
 1237              		.bss
 1238              		.type	voice, %object
 1239              		.size	voice, 1
 1240              	voice:
 1241 0078 00       		.space	1
 1242              		.global	editUp
 1243              		.data
 1244              		.type	editUp, %object
 1245              		.size	editUp, 1
 1246              	editUp:
 1247 00a6 01       		.byte	1
 1248              		.global	oct1Up
 1249              		.type	oct1Up, %object
 1250              		.size	oct1Up, 1
 1251              	oct1Up:
 1252 00a7 01       		.byte	1
 1253              		.global	oct4Up
 1254              		.type	oct4Up, %object
 1255              		.size	oct4Up, 1
 1256              	oct4Up:
 1257 00a8 01       		.byte	1
 1258              		.comm	encoderVal,16,4
 1259              		.global	encoderNum
 1260              		.bss
 1261 0079 000000   		.align	2
 1262              		.type	encoderNum, %object
 1263              		.size	encoderNum, 4
 1264              	encoderNum:
 1265 007c 00000000 		.space	4
 1266              		.global	button1Up
 1267              		.type	button1Up, %object
 1268              		.size	button1Up, 1
 1269              	button1Up:
 1270 0080 00       		.space	1
 1271              		.global	button2Up
 1272              		.type	button2Up, %object
 1273              		.size	button2Up, 1
 1274              	button2Up:
 1275 0081 00       		.space	1
 1276              		.global	button3Up
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 29


 1277              		.type	button3Up, %object
 1278              		.size	button3Up, 1
 1279              	button3Up:
 1280 0082 00       		.space	1
 1281              		.global	button4Up
 1282              		.type	button4Up, %object
 1283              		.size	button4Up, 1
 1284              	button4Up:
 1285 0083 00       		.space	1
 1286              		.global	patchNum
 1287              		.type	patchNum, %object
 1288              		.size	patchNum, 1
 1289              	patchNum:
 1290 0084 00       		.space	1
 1291              		.comm	copedent,3696,4
 1292              		.comm	copedentNamesArray,98,4
 1293              		.comm	prevStringPitchBend,48,4
 1294              		.comm	pedals,480,4
 1295              		.comm	openStringFrequencies,48,4
 1296              		.comm	stringMappedPositions,48,4
 1297              		.comm	invStringMappedPositions,48,4
 1298              		.comm	stringFrequencies,48,4
 1299              		.comm	stringOctave,48,4
 1300              		.comm	stringPitch,48,4
 1301              		.comm	stringMIDI,48,4
 1302              		.comm	openStringMIDI_Int,48,4
 1303              		.global	OLEDcount
 1304 0085 000000   		.align	2
 1305              		.type	OLEDcount, %object
 1306              		.size	OLEDcount, 4
 1307              	OLEDcount:
 1308 0088 00000000 		.space	4
 1309              		.global	pedals_float
 1310              		.align	2
 1311              		.type	pedals_float, %object
 1312              		.size	pedals_float, 40
 1313              	pedals_float:
 1314 008c 00000000 		.space	40
 1314      00000000 
 1314      00000000 
 1314      00000000 
 1314      00000000 
 1315              		.global	__aeabi_fdiv
 1316              		.section	.text.map,"ax",%progbits
 1317              		.align	2
 1318              		.global	map
 1319              		.thumb
 1320              		.thumb_func
 1321              		.type	map, %function
 1322              	map:
 1323              	.LFB72:
 310:main.c        **** 
 311:main.c        **** 
 312:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 313:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 314:main.c        **** void USB_service(void);
 315:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 30


 316:main.c        **** volatile uint8_t I2Cbuff1[256];
 317:main.c        **** volatile uint8_t I2Cbuff2[16];
 318:main.c        **** volatile uint8_t send_it = 0;
 319:main.c        **** 
 320:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 321:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 322:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 323:main.c        **** uint16_t deadzone = 150;
 324:main.c        **** uint16_t volumePedal = 4095;
 325:main.c        **** uint16_t processed_pedals[10];
 326:main.c        **** uint16_t prev_processed_pedals[10];
 327:main.c        **** int16_t prev_processed_volumePedal;
 328:main.c        **** int16_t processed_volumePedal;
 329:main.c        **** 
 330:main.c        **** 
 331:main.c        **** float fretMeasurements[4][4] ={
 332:main.c        **** 
 333:main.c        **** 		{62750.0f, 61600.0f, 31785.0f, 0.0f },
 334:main.c        **** 
 335:main.c        **** 		{39600.0f, 41500.0f, 15700.0f, 0.0f},
 336:main.c        **** 
 337:main.c        **** 		{27520.0f, 30200.0f, 8458.0f, 0.0f},
 338:main.c        **** 
 339:main.c        **** 		{9490.0f, 13600.0f, 2674.0f, 0.0f}
 340:main.c        **** 
 341:main.c        **** 	};
 342:main.c        **** 
 343:main.c        **** #define MAX_NUM_PRESETS 64
 344:main.c        **** int currentPresetSelection = 0;
 345:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 346:main.c        **** uint8_t presetNumberToLoad = 0;
 347:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 348:main.c        **** 
 349:main.c        **** 
 350:main.c        **** float fretScaling[4] = {1.0f, 0.6666666666666f, 0.5f, 0.25f};
 351:main.c        **** 
 352:main.c        **** 
 353:main.c        **** #define MAX_ENCODERS 16
 354:main.c        **** 
 355:main.c        **** float pedalRatios[10];
 356:main.c        **** uint8_t last_mux = 1;
 357:main.c        **** volatile uint8_t main_counter = 0;
 358:main.c        **** uint8_t neck = 0;
 359:main.c        **** uint8_t dualSlider = 0;
 360:main.c        **** uint8_t enterUp = 1;
 361:main.c        **** uint8_t voice = 0;
 362:main.c        **** uint8_t editUp = 1;
 363:main.c        **** uint8_t oct1Up = 1;
 364:main.c        **** uint8_t oct4Up = 1;
 365:main.c        **** 
 366:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 367:main.c        **** int encoderNum = 0;
 368:main.c        **** uint8_t button1Up = 0;
 369:main.c        **** uint8_t button2Up = 0;
 370:main.c        **** uint8_t button3Up = 0;
 371:main.c        **** uint8_t button4Up = 0;
 372:main.c        **** uint8_t patchNum = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 31


 373:main.c        **** #define NUM_STRINGS 12
 374:main.c        **** #define NUM_PEDALS 10
 375:main.c        **** #if 0
 376:main.c        **** float pedalsInCents[NUM_PEDALS][NUM_STRINGS] =
 377:main.c        **** {
 378:main.c        **** 		{-0.16f, 0.0f, 0.0f, 0.0f, 1.84f, 0.0f, -0.16f, 0.0f, 0.0f, 1.84f, 0.0f, 0.0f},
 379:main.c        **** 		{0.0f, 0.0f, 116.0f, 0.0f, 0.0f, 116.0f, 0.0f, 0.0f, -14.0f, 0.0f, 116.0f, 0.0f},
 380:main.c        **** 		{-16.0f, 0.0f, 0.0f, 184.0f, 184.0f, 0.0f, -16.0f, 0.0f, 0.0f, 0.0f, 0.f, 0.0f},
 381:main.c        **** 		{0.0f, 0.0f, 0.0f, 0.0f, -200.0f, -200.0f, 0.0f, 0.0f, 0.0f, -200.0f, -200.0f, 0.0f},
 382:main.c        ****         {-2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, 
 383:main.c        ****         {0.0f, 0.0f, 0.0f, -112.0f, 0.0f, 0.0f, 0.0f, -112.0f, 0.0f, 0.0f, 0.0f, -112.0f},
 384:main.c        ****         {0.0f, 0.0f, 0.0f, 75.0f, 0.0f, 0.0f, 0.0f, 75.0f, 0.0f, 0.0f, 0.0f, 75.0f},
 385:main.c        ****         {-14.0f, -204.0f, 0.0f, 0.0f, 0.0f, 0.0f, -14.0f, 0.0f, -134.0f, 0.0f, 0.0f, 0.0f},
 386:main.c        **** 		{186.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 387:main.c        **** 		{0.0f, 0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f},
 388:main.c        **** };
 389:main.c        **** float openStringMidinotes[NUM_STRINGS] = {66.04f,62.88f,67.86f, 64.0f,59.02f, 55.86f, 54.04f, 52.0f
 390:main.c        **** #endif
 391:main.c        **** 
 392:main.c        **** #define MAX_NUM_COPEDENTS 7
 393:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 394:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 395:main.c        **** 
 396:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 397:main.c        **** 
 398:main.c        **** 
 399:main.c        **** #if 0 
 400:main.c        **** 
 401:main.c        **** 
 402:main.c        **** float pedalsInCents[NUM_PEDALS][NUM_STRINGS] =
 403:main.c        **** {
 404:main.c        ****     {0.0f, 0.0f, -100.f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 405:main.c        ****     {0.0f, 0.0f, 0.0f, 0.0f, 200.0f, 0.0f, 0.0f, 0.0f, 200.0f, 0.0f, 0.0f, 0.0f},
 406:main.c        **** 	{0.0f, 0.0f, 100.0f, 0.0f, 0.0f, 100.0f, 0.0f, 0.0f, 0.0f, 100.0f, 0.0f, 0.0f},
 407:main.c        **** 	{0.0f, 0.0f, 0.0f, 200.0f, 200.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.f, 0.0f},
 408:main.c        **** 	{200.0f, 100.f, 0.0f, 0.0f, 0.0f, 0.0f, 200.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 409:main.c        ****     
 410:main.c        ****     {0.0f, -200.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -200.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 411:main.c        ****     {0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 412:main.c        ****     {0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 300.0f, 300.0f, 0.0f, 0.0f},
 413:main.c        **** 	{0.0f, 0.0f, 0.0f, 100.0f, 0.0f, 0.0f, 0.0f, 100.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 414:main.c        **** 	{0.0f, 0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 415:main.c        **** };
 416:main.c        **** 
 417:main.c        **** float openStringMidinotes[NUM_STRINGS] = {66.0f, 63.0f, 68.0f,  64.0f, 59.0f, 56.0f, 54.0f, 52.0f, 
 418:main.c        **** #endif
 419:main.c        **** 
 420:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 421:main.c        **** 
 422:main.c        **** 
 423:main.c        **** float openStringFrequencies[NUM_STRINGS];
 424:main.c        **** float stringMappedPositions[NUM_STRINGS];
 425:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 426:main.c        **** float stringFrequencies[NUM_STRINGS];
 427:main.c        **** float stringOctave[NUM_STRINGS];
 428:main.c        **** float stringPitch[NUM_STRINGS];
 429:main.c        **** float stringMIDI[NUM_STRINGS];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 32


 430:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 431:main.c        **** int OLEDcount = 0;
 432:main.c        **** 
 433:main.c        **** /*
 434:main.c        **** float fretMeasurements[4][2] ={
 435:main.c        **** 		{53699.0f, 62199.0f},
 436:main.c        **** 		{23462.0f, 30653.0f},
 437:main.c        **** 		{27336.0f, 28186.0f},
 438:main.c        **** 		{9460.0f, 9849.0f}
 439:main.c        **** 	};
 440:main.c        **** float fretScaling[4] = {1.0f, 0.5f, 0.5f, 0.25f};
 441:main.c        **** */
 442:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 443:main.c        **** 
 444:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 445:main.c        **** {
 1324              		.loc 1 445 0
 1325              		.cfi_startproc
 1326              		@ args = 4, pretend = 0, frame = 16
 1327              		@ frame_needed = 1, uses_anonymous_args = 0
 1328 0000 B0B5     		push	{r4, r5, r7, lr}
 1329              		.cfi_def_cfa_offset 16
 1330              		.cfi_offset 4, -16
 1331              		.cfi_offset 5, -12
 1332              		.cfi_offset 7, -8
 1333              		.cfi_offset 14, -4
 1334 0002 84B0     		sub	sp, sp, #16
 1335              		.cfi_def_cfa_offset 32
 1336 0004 00AF     		add	r7, sp, #0
 1337              		.cfi_def_cfa_register 7
 1338 0006 F860     		str	r0, [r7, #12]	@ float
 1339 0008 B960     		str	r1, [r7, #8]	@ float
 1340 000a 7A60     		str	r2, [r7, #4]	@ float
 1341 000c 3B60     		str	r3, [r7]	@ float
 446:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1342              		.loc 1 446 0
 1343 000e 3968     		ldr	r1, [r7]	@ float
 1344 0010 386A     		ldr	r0, [r7, #32]	@ float
 1345 0012 FFF7FEFF 		bl	__aeabi_fsub
 1346 0016 0346     		mov	r3, r0
 1347 0018 1C46     		mov	r4, r3
 1348 001a B968     		ldr	r1, [r7, #8]	@ float
 1349 001c F868     		ldr	r0, [r7, #12]	@ float
 1350 001e FFF7FEFF 		bl	__aeabi_fsub
 1351 0022 0346     		mov	r3, r0
 1352 0024 1D46     		mov	r5, r3
 1353 0026 B968     		ldr	r1, [r7, #8]	@ float
 1354 0028 7868     		ldr	r0, [r7, #4]	@ float
 1355 002a FFF7FEFF 		bl	__aeabi_fsub
 1356 002e 0346     		mov	r3, r0
 1357 0030 1946     		mov	r1, r3
 1358 0032 2846     		mov	r0, r5
 1359 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1360 0038 0346     		mov	r3, r0
 1361 003a 1946     		mov	r1, r3
 1362 003c 2046     		mov	r0, r4
 1363 003e FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 33


 1364 0042 0346     		mov	r3, r0
 1365 0044 3968     		ldr	r1, [r7]	@ float
 1366 0046 1846     		mov	r0, r3
 1367 0048 FFF7FEFF 		bl	__aeabi_fadd
 1368 004c 0346     		mov	r3, r0
 447:main.c        **** }
 1369              		.loc 1 447 0
 1370 004e 1846     		mov	r0, r3
 1371 0050 1037     		adds	r7, r7, #16
 1372              		.cfi_def_cfa_offset 16
 1373 0052 BD46     		mov	sp, r7
 1374              		.cfi_def_cfa_register 13
 1375              		@ sp needed
 1376 0054 B0BD     		pop	{r4, r5, r7, pc}
 1377              		.cfi_endproc
 1378              	.LFE72:
 1379              		.size	map, .-map
 1380              		.global	currentNeck
 1381 0056 00BF     		.bss
 1382              		.align	2
 1383              		.type	currentNeck, %object
 1384              		.size	currentNeck, 4
 1385              	currentNeck:
 1386 00b4 00000000 		.space	4
 1387              		.global	__aeabi_ui2f
 1388              		.global	__aeabi_i2f
 1389              		.global	__aeabi_f2uiz
 1390              		.section	.rodata
 1391              		.align	2
 1392              	.LC0:
 1393 0400 2000     		.ascii	" \000"
 1394              		.global	__aeabi_f2iz
 1395              		.global	__aeabi_fcmpge
 1396              		.global	__aeabi_fcmpeq
 1397              		.section	.text.main,"ax",%progbits
 1398              		.align	2
 1399              		.global	main
 1400              		.thumb
 1401              		.thumb_func
 1402              		.type	main, %function
 1403              	main:
 1404              	.LFB73:
 448:main.c        **** 
 449:main.c        **** int currentNeck = 0;
 450:main.c        **** 
 451:main.c        **** int main(void)
 452:main.c        **** {
 1405              		.loc 1 452 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 96
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409 0000 90B5     		push	{r4, r7, lr}
 1410              		.cfi_def_cfa_offset 12
 1411              		.cfi_offset 4, -12
 1412              		.cfi_offset 7, -8
 1413              		.cfi_offset 14, -4
 1414 0002 9BB0     		sub	sp, sp, #108
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 34


 1415              		.cfi_def_cfa_offset 120
 1416 0004 02AF     		add	r7, sp, #8
 1417              		.cfi_def_cfa 7, 112
 453:main.c        ****     
 454:main.c        **** 	CYGlobalIntEnable; 
 1418              		.loc 1 454 0
 1419              		.syntax unified
 1420              	@ 454 "main.c" 1
 1421 0006 62B6     		CPSIE   i
 1422              	@ 0 "" 2
 455:main.c        **** 
 456:main.c        ****     EEPROM_Start();
 1423              		.loc 1 456 0
 1424              		.thumb
 1425              		.syntax unified
 1426 0008 FFF7FEFF 		bl	EEPROM_Start
 1427              	.LBB3:
 457:main.c        ****     
 458:main.c        ****     //add deadzones on edges of pedal sensing
 459:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1428              		.loc 1 459 0
 1429 000c 0023     		movs	r3, #0
 1430 000e FB65     		str	r3, [r7, #92]
 1431 0010 6EE0     		b	.L56
 1432              	.L57:
 1433              	.LBB4:
 460:main.c        ****     {
 461:main.c        **** 
 462:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1434              		.loc 1 462 0 discriminator 3
 1435 0012 5D4A     		ldr	r2, .L145
 1436 0014 FB6D     		ldr	r3, [r7, #92]
 1437 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1438 001a 1846     		mov	r0, r3
 1439 001c FFF7FEFF 		bl	__aeabi_ui2f
 1440 0020 0446     		mov	r4, r0
 1441 0022 5A4A     		ldr	r2, .L145+4
 1442 0024 FB6D     		ldr	r3, [r7, #92]
 1443 0026 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1444 002a 1846     		mov	r0, r3
 1445 002c FFF7FEFF 		bl	__aeabi_ui2f
 1446 0030 0346     		mov	r3, r0
 1447 0032 1946     		mov	r1, r3
 1448 0034 2046     		mov	r0, r4
 1449 0036 FFF7FEFF 		bl	__aeabi_fsub
 1450 003a 0346     		mov	r3, r0
 1451 003c 3B63     		str	r3, [r7, #48]	@ float
 463:main.c        ****         pedals_low[i] = pedals_low[i] + (0.1f * pedalDiff);
 1452              		.loc 1 463 0 discriminator 3
 1453 003e 534A     		ldr	r2, .L145+4
 1454 0040 FB6D     		ldr	r3, [r7, #92]
 1455 0042 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1456 0046 1846     		mov	r0, r3
 1457 0048 FFF7FEFF 		bl	__aeabi_i2f
 1458 004c 0446     		mov	r4, r0
 1459 004e 5049     		ldr	r1, .L145+8
 1460 0050 386B     		ldr	r0, [r7, #48]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 35


 1461 0052 FFF7FEFF 		bl	__aeabi_fmul
 1462 0056 0346     		mov	r3, r0
 1463 0058 1946     		mov	r1, r3
 1464 005a 2046     		mov	r0, r4
 1465 005c FFF7FEFF 		bl	__aeabi_fadd
 1466 0060 0346     		mov	r3, r0
 1467 0062 1846     		mov	r0, r3
 1468 0064 FFF7FEFF 		bl	__aeabi_f2uiz
 1469 0068 0346     		mov	r3, r0
 1470 006a 99B2     		uxth	r1, r3
 1471 006c 474A     		ldr	r2, .L145+4
 1472 006e FB6D     		ldr	r3, [r7, #92]
 1473 0070 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 464:main.c        ****         pedals_high[i] = pedals_high[i] - (0.1f * pedalDiff);
 1474              		.loc 1 464 0 discriminator 3
 1475 0074 444A     		ldr	r2, .L145
 1476 0076 FB6D     		ldr	r3, [r7, #92]
 1477 0078 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1478 007c 1846     		mov	r0, r3
 1479 007e FFF7FEFF 		bl	__aeabi_i2f
 1480 0082 0446     		mov	r4, r0
 1481 0084 4249     		ldr	r1, .L145+8
 1482 0086 386B     		ldr	r0, [r7, #48]	@ float
 1483 0088 FFF7FEFF 		bl	__aeabi_fmul
 1484 008c 0346     		mov	r3, r0
 1485 008e 1946     		mov	r1, r3
 1486 0090 2046     		mov	r0, r4
 1487 0092 FFF7FEFF 		bl	__aeabi_fsub
 1488 0096 0346     		mov	r3, r0
 1489 0098 1846     		mov	r0, r3
 1490 009a FFF7FEFF 		bl	__aeabi_f2uiz
 1491 009e 0346     		mov	r3, r0
 1492 00a0 99B2     		uxth	r1, r3
 1493 00a2 394A     		ldr	r2, .L145
 1494 00a4 FB6D     		ldr	r3, [r7, #92]
 1495 00a6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 465:main.c        ****         pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1496              		.loc 1 465 0 discriminator 3
 1497 00aa 374A     		ldr	r2, .L145
 1498 00ac FB6D     		ldr	r3, [r7, #92]
 1499 00ae 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1500 00b2 1846     		mov	r0, r3
 1501 00b4 FFF7FEFF 		bl	__aeabi_ui2f
 1502 00b8 0446     		mov	r4, r0
 1503 00ba 344A     		ldr	r2, .L145+4
 1504 00bc FB6D     		ldr	r3, [r7, #92]
 1505 00be 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1506 00c2 1846     		mov	r0, r3
 1507 00c4 FFF7FEFF 		bl	__aeabi_ui2f
 1508 00c8 0346     		mov	r3, r0
 1509 00ca 1946     		mov	r1, r3
 1510 00cc 2046     		mov	r0, r4
 1511 00ce FFF7FEFF 		bl	__aeabi_fsub
 1512 00d2 0346     		mov	r3, r0
 1513 00d4 3B63     		str	r3, [r7, #48]	@ float
 466:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1514              		.loc 1 466 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 36


 1515 00d6 396B     		ldr	r1, [r7, #48]	@ float
 1516 00d8 2E48     		ldr	r0, .L145+12
 1517 00da FFF7FEFF 		bl	__aeabi_fdiv
 1518 00de 0346     		mov	r3, r0
 1519 00e0 1946     		mov	r1, r3
 1520 00e2 2D4A     		ldr	r2, .L145+16
 1521 00e4 FB6D     		ldr	r3, [r7, #92]
 1522 00e6 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1523              	.LBE4:
 459:main.c        ****     {
 1524              		.loc 1 459 0 discriminator 3
 1525 00ea FB6D     		ldr	r3, [r7, #92]
 1526 00ec 0133     		adds	r3, r3, #1
 1527 00ee FB65     		str	r3, [r7, #92]
 1528              	.L56:
 459:main.c        ****     {
 1529              		.loc 1 459 0 is_stmt 0 discriminator 1
 1530 00f0 FB6D     		ldr	r3, [r7, #92]
 1531 00f2 092B     		cmp	r3, #9
 1532 00f4 8DDD     		ble	.L57
 1533              	.LBE3:
 467:main.c        ****     }
 468:main.c        ****     //for (int i = 0; i < NUM_STRINGS; i++)
 469:main.c        ****     //{
 470:main.c        ****         //openStringFrequencies[i] = mtof(openStringMidinotes[i]);
 471:main.c        ****         //stringOctave[i] = 1.0f;
 472:main.c        ****    // }
 473:main.c        ****     
 474:main.c        ****     //read from eeprom which copedents are loaded on which necks
 475:main.c        ****     necks[0] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1534              		.loc 1 475 0 is_stmt 1
 1535 00f6 0020     		movs	r0, #0
 1536 00f8 FFF7FEFF 		bl	EEPROM_ReadByte
 1537 00fc 0346     		mov	r3, r0
 1538 00fe 1A46     		mov	r2, r3
 1539 0100 264B     		ldr	r3, .L145+20
 1540 0102 1A70     		strb	r2, [r3]
 476:main.c        ****     necks[1] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET + 1);
 1541              		.loc 1 476 0
 1542 0104 0120     		movs	r0, #1
 1543 0106 FFF7FEFF 		bl	EEPROM_ReadByte
 1544 010a 0346     		mov	r3, r0
 1545 010c 1A46     		mov	r2, r3
 1546 010e 234B     		ldr	r3, .L145+20
 1547 0110 5A70     		strb	r2, [r3, #1]
 1548              	.LBB5:
 477:main.c        ****     
 478:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 1549              		.loc 1 478 0
 1550 0112 0023     		movs	r3, #0
 1551 0114 BB65     		str	r3, [r7, #88]
 1552 0116 B3E0     		b	.L58
 1553              	.L65:
 1554              	.LBB6:
 479:main.c        ****     {
 480:main.c        ****         
 481:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 37


 1555              		.loc 1 481 0
 1556 0118 0023     		movs	r3, #0
 1557 011a 7B65     		str	r3, [r7, #84]
 1558 011c 23E0     		b	.L59
 1559              	.L60:
 482:main.c        ****         {
 483:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 1560              		.loc 1 483 0 discriminator 3
 1561 011e BB6D     		ldr	r3, [r7, #88]
 1562 0120 9BB2     		uxth	r3, r3
 1563 0122 1A46     		mov	r2, r3	@ movhi
 1564 0124 1201     		lsls	r2, r2, #4
 1565 0126 1A44     		add	r2, r2, r3
 1566 0128 9200     		lsls	r2, r2, #2
 1567 012a 1A44     		add	r2, r2, r3
 1568 012c 5200     		lsls	r2, r2, #1
 1569 012e 1344     		add	r3, r3, r2
 1570 0130 5B00     		lsls	r3, r3, #1
 1571 0132 9AB2     		uxth	r2, r3
 1572 0134 7B6D     		ldr	r3, [r7, #84]
 1573 0136 9BB2     		uxth	r3, r3
 1574 0138 1344     		add	r3, r3, r2
 1575 013a 9BB2     		uxth	r3, r3
 1576 013c 0233     		adds	r3, r3, #2
 1577 013e 9BB2     		uxth	r3, r3
 1578 0140 1846     		mov	r0, r3
 1579 0142 FFF7FEFF 		bl	EEPROM_ReadByte
 1580 0146 0346     		mov	r3, r0
 1581 0148 1846     		mov	r0, r3
 1582 014a 1549     		ldr	r1, .L145+24
 1583 014c BA6D     		ldr	r2, [r7, #88]
 1584 014e 1346     		mov	r3, r2
 1585 0150 DB00     		lsls	r3, r3, #3
 1586 0152 9B1A     		subs	r3, r3, r2
 1587 0154 5B00     		lsls	r3, r3, #1
 1588 0156 CA18     		adds	r2, r1, r3
 1589 0158 7B6D     		ldr	r3, [r7, #84]
 1590 015a 1344     		add	r3, r3, r2
 1591 015c 0246     		mov	r2, r0
 1592 015e 1A70     		strb	r2, [r3]
 481:main.c        ****         {
 1593              		.loc 1 481 0 discriminator 3
 1594 0160 7B6D     		ldr	r3, [r7, #84]
 1595 0162 0133     		adds	r3, r3, #1
 1596 0164 7B65     		str	r3, [r7, #84]
 1597              	.L59:
 481:main.c        ****         {
 1598              		.loc 1 481 0 is_stmt 0 discriminator 1
 1599 0166 7B6D     		ldr	r3, [r7, #84]
 1600 0168 0D2B     		cmp	r3, #13
 1601 016a D8DD     		ble	.L60
 1602              	.LBE6:
 1603              	.LBB7:
 484:main.c        ****         }
 485:main.c        ****         for (int i = 0; i < 11; i++)
 1604              		.loc 1 485 0 is_stmt 1
 1605 016c 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 38


 1606 016e 3B65     		str	r3, [r7, #80]
 1607 0170 7FE0     		b	.L61
 1608              	.L64:
 1609              	.LBB8:
 486:main.c        ****     	{
 487:main.c        ****     		int pedalStartLoc = (i*24) + NAME_LENGTH_IN_BYTES;
 1610              		.loc 1 487 0
 1611 0172 3A6D     		ldr	r2, [r7, #80]
 1612 0174 1346     		mov	r3, r2
 1613 0176 5B00     		lsls	r3, r3, #1
 1614 0178 1344     		add	r3, r3, r2
 1615 017a DB00     		lsls	r3, r3, #3
 1616 017c 0E33     		adds	r3, r3, #14
 1617 017e FB62     		str	r3, [r7, #44]
 1618              	.LBB9:
 488:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 1619              		.loc 1 488 0
 1620 0180 0023     		movs	r3, #0
 1621 0182 FB64     		str	r3, [r7, #76]
 1622 0184 6FE0     		b	.L62
 1623              	.L146:
 1624 0186 00BF     		.align	2
 1625              	.L145:
 1626 0188 00000000 		.word	pedals_high
 1627 018c 00000000 		.word	pedals_low
 1628 0190 CDCCCC3D 		.word	1036831949
 1629 0194 00F07F45 		.word	1166012416
 1630 0198 00000000 		.word	pedalRatios
 1631 019c 00000000 		.word	necks
 1632 01a0 00000000 		.word	copedentNamesArray
 1633              	.L63:
 1634              	.LBB10:
 489:main.c        ****     		{
 490:main.c        ****                 
 491:main.c        ****                 int stringStartLoc = (j*2) + NAME_LENGTH_IN_BYTES;
 1635              		.loc 1 491 0 discriminator 3
 1636 01a4 FB6C     		ldr	r3, [r7, #76]
 1637 01a6 0733     		adds	r3, r3, #7
 1638 01a8 5B00     		lsls	r3, r3, #1
 1639 01aa BB62     		str	r3, [r7, #40]
 492:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 1640              		.loc 1 492 0 discriminator 3
 1641 01ac BB6A     		ldr	r3, [r7, #40]
 1642 01ae 9AB2     		uxth	r2, r3
 1643 01b0 FB6A     		ldr	r3, [r7, #44]
 1644 01b2 9BB2     		uxth	r3, r3
 1645 01b4 1344     		add	r3, r3, r2
 1646 01b6 9AB2     		uxth	r2, r3
 1647 01b8 BB6D     		ldr	r3, [r7, #88]
 1648 01ba 9BB2     		uxth	r3, r3
 1649 01bc 1946     		mov	r1, r3	@ movhi
 1650 01be 0901     		lsls	r1, r1, #4
 1651 01c0 1944     		add	r1, r1, r3
 1652 01c2 8900     		lsls	r1, r1, #2
 1653 01c4 1944     		add	r1, r1, r3
 1654 01c6 4900     		lsls	r1, r1, #1
 1655 01c8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 39


 1656 01ca 5B00     		lsls	r3, r3, #1
 1657 01cc 9BB2     		uxth	r3, r3
 1658 01ce 1344     		add	r3, r3, r2
 1659 01d0 9BB2     		uxth	r3, r3
 1660 01d2 0233     		adds	r3, r3, #2
 1661 01d4 9BB2     		uxth	r3, r3
 1662 01d6 1846     		mov	r0, r3
 1663 01d8 FFF7FEFF 		bl	EEPROM_ReadByte
 1664 01dc 0346     		mov	r3, r0
 1665 01de FB84     		strh	r3, [r7, #38]	@ movhi
 493:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 1666              		.loc 1 493 0 discriminator 3
 1667 01e0 BB6A     		ldr	r3, [r7, #40]
 1668 01e2 9AB2     		uxth	r2, r3
 1669 01e4 FB6A     		ldr	r3, [r7, #44]
 1670 01e6 9BB2     		uxth	r3, r3
 1671 01e8 1344     		add	r3, r3, r2
 1672 01ea 9AB2     		uxth	r2, r3
 1673 01ec BB6D     		ldr	r3, [r7, #88]
 1674 01ee 9BB2     		uxth	r3, r3
 1675 01f0 1946     		mov	r1, r3	@ movhi
 1676 01f2 0901     		lsls	r1, r1, #4
 1677 01f4 1944     		add	r1, r1, r3
 1678 01f6 8900     		lsls	r1, r1, #2
 1679 01f8 1944     		add	r1, r1, r3
 1680 01fa 4900     		lsls	r1, r1, #1
 1681 01fc 0B44     		add	r3, r3, r1
 1682 01fe 5B00     		lsls	r3, r3, #1
 1683 0200 9BB2     		uxth	r3, r3
 1684 0202 1344     		add	r3, r3, r2
 1685 0204 9BB2     		uxth	r3, r3
 1686 0206 0333     		adds	r3, r3, #3
 1687 0208 9BB2     		uxth	r3, r3
 1688 020a 1846     		mov	r0, r3
 1689 020c FFF7FEFF 		bl	EEPROM_ReadByte
 1690 0210 0346     		mov	r3, r0
 1691 0212 BB84     		strh	r3, [r7, #36]	@ movhi
 494:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 1692              		.loc 1 494 0 discriminator 3
 1693 0214 FB8C     		ldrh	r3, [r7, #38]
 1694 0216 1A02     		lsls	r2, r3, #8
 1695 0218 BB8C     		ldrh	r3, [r7, #36]
 1696 021a 1344     		add	r3, r3, r2
 1697 021c 1846     		mov	r0, r3
 1698 021e FFF7FEFF 		bl	__aeabi_i2f
 1699 0222 0346     		mov	r3, r0
 1700 0224 4FF06E51 		mov	r1, #998244352
 1701 0228 1846     		mov	r0, r3
 1702 022a FFF7FEFF 		bl	__aeabi_fmul
 1703 022e 0346     		mov	r3, r0
 1704 0230 4FF08641 		mov	r1, #1124073472
 1705 0234 1846     		mov	r0, r3
 1706 0236 FFF7FEFF 		bl	__aeabi_fsub
 1707 023a 0346     		mov	r3, r0
 1708 023c 1C46     		mov	r4, r3
 1709 023e 9E48     		ldr	r0, .L147
 1710 0240 3B6D     		ldr	r3, [r7, #80]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 40


 1711 0242 B96D     		ldr	r1, [r7, #88]
 1712 0244 1A46     		mov	r2, r3
 1713 0246 5200     		lsls	r2, r2, #1
 1714 0248 1A44     		add	r2, r2, r3
 1715 024a 9300     		lsls	r3, r2, #2
 1716 024c 1A46     		mov	r2, r3
 1717 024e 0B46     		mov	r3, r1
 1718 0250 5B01     		lsls	r3, r3, #5
 1719 0252 0B44     		add	r3, r3, r1
 1720 0254 9B00     		lsls	r3, r3, #2
 1721 0256 1A44     		add	r2, r2, r3
 1722 0258 FB6C     		ldr	r3, [r7, #76]
 1723 025a 1344     		add	r3, r3, r2
 1724 025c 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 1725              	.LBE10:
 488:main.c        ****     		{
 1726              		.loc 1 488 0 discriminator 3
 1727 0260 FB6C     		ldr	r3, [r7, #76]
 1728 0262 0133     		adds	r3, r3, #1
 1729 0264 FB64     		str	r3, [r7, #76]
 1730              	.L62:
 488:main.c        ****     		{
 1731              		.loc 1 488 0 is_stmt 0 discriminator 1
 1732 0266 FB6C     		ldr	r3, [r7, #76]
 1733 0268 0B2B     		cmp	r3, #11
 1734 026a 9BDD     		ble	.L63
 1735              	.LBE9:
 1736              	.LBE8:
 485:main.c        ****     	{
 1737              		.loc 1 485 0 is_stmt 1 discriminator 2
 1738 026c 3B6D     		ldr	r3, [r7, #80]
 1739 026e 0133     		adds	r3, r3, #1
 1740 0270 3B65     		str	r3, [r7, #80]
 1741              	.L61:
 485:main.c        ****     	{
 1742              		.loc 1 485 0 is_stmt 0 discriminator 1
 1743 0272 3B6D     		ldr	r3, [r7, #80]
 1744 0274 0A2B     		cmp	r3, #10
 1745 0276 7FF77CAF 		ble	.L64
 1746              	.LBE7:
 478:main.c        ****     {
 1747              		.loc 1 478 0 is_stmt 1 discriminator 2
 1748 027a BB6D     		ldr	r3, [r7, #88]
 1749 027c 0133     		adds	r3, r3, #1
 1750 027e BB65     		str	r3, [r7, #88]
 1751              	.L58:
 478:main.c        ****     {
 1752              		.loc 1 478 0 is_stmt 0 discriminator 1
 1753 0280 BB6D     		ldr	r3, [r7, #88]
 1754 0282 062B     		cmp	r3, #6
 1755 0284 7FF748AF 		ble	.L65
 1756              	.LBE5:
 495:main.c        ****             }
 496:main.c        ****     	}
 497:main.c        ****     }
 498:main.c        **** 
 499:main.c        ****     QuadDec_1_Start();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 41


 1757              		.loc 1 499 0 is_stmt 1
 1758 0288 FFF7FEFF 		bl	QuadDec_1_Start
 500:main.c        ****     LED_amber1_Write(0);
 1759              		.loc 1 500 0
 1760 028c 0020     		movs	r0, #0
 1761 028e FFF7FEFF 		bl	LED_amber1_Write
 501:main.c        ****     LED_amber2_Write(1);
 1762              		.loc 1 501 0
 1763 0292 0120     		movs	r0, #1
 1764 0294 FFF7FEFF 		bl	LED_amber2_Write
 502:main.c        ****     LED_amber3_Write(0);
 1765              		.loc 1 502 0
 1766 0298 0020     		movs	r0, #0
 1767 029a FFF7FEFF 		bl	LED_amber3_Write
 503:main.c        ****     LED_amber4_Write(0);
 1768              		.loc 1 503 0
 1769 029e 0020     		movs	r0, #0
 1770 02a0 FFF7FEFF 		bl	LED_amber4_Write
 504:main.c        **** 
 505:main.c        ****     //CyDmaChEnable(rxChannel, STORE_TD_CFG_ONCMPLT);
 506:main.c        **** 
 507:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 1771              		.loc 1 507 0
 1772 02a4 854B     		ldr	r3, .L147+4
 1773 02a6 1846     		mov	r0, r3
 1774 02a8 FFF7FEFF 		bl	Em_EEPROM_Init
 1775 02ac 0346     		mov	r3, r0
 1776 02ae 1A46     		mov	r2, r3
 1777 02b0 834B     		ldr	r3, .L147+8
 1778 02b2 1A70     		strb	r2, [r3]
 508:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 509:main.c        ****     {
 510:main.c        ****        // HandleError();
 511:main.c        ****     }
 512:main.c        ****     uint8_t myArrayCounter = 0;
 1779              		.loc 1 512 0
 1780 02b4 0023     		movs	r3, #0
 1781 02b6 87F82330 		strb	r3, [r7, #35]
 513:main.c        ****     I2C_1_Start();    
 1782              		.loc 1 513 0
 1783 02ba FFF7FEFF 		bl	I2C_1_Start
 514:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 1784              		.loc 1 514 0
 1785 02be 0120     		movs	r0, #1
 1786 02c0 FFF7FEFF 		bl	USB_SetPowerStatus
 515:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 1787              		.loc 1 515 0
 1788 02c4 7F48     		ldr	r0, .L147+12
 1789 02c6 FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 516:main.c        ****     if (USB_VBusPresent())
 1790              		.loc 1 516 0
 1791 02ca FFF7FEFF 		bl	USB_VBusPresent
 517:main.c        ****     {
 518:main.c        ****        //restartSystemCheck();
 519:main.c        ****     }
 520:main.c        ****     
 521:main.c        ****     SPIM_1_Start();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 42


 1792              		.loc 1 521 0
 1793 02ce FFF7FEFF 		bl	SPIM_1_Start
 522:main.c        ****     LED_red1_Write(0);
 1794              		.loc 1 522 0
 1795 02d2 0020     		movs	r0, #0
 1796 02d4 FFF7FEFF 		bl	LED_red1_Write
 523:main.c        ****     LED_green2_Write(1);
 1797              		.loc 1 523 0
 1798 02d8 0120     		movs	r0, #1
 1799 02da FFF7FEFF 		bl	LED_green2_Write
 524:main.c        **** #if 0
 525:main.c        ****         for (int i = 0; i < MAX_NUM_PRESETS; i++)
 526:main.c        ****     {
 527:main.c        ****         SPIM_2_ClearRxBuffer();
 528:main.c        ****         CyDmaChEnable(rx2Channel, STORE_TD_CFG_ONCMPLT);
 529:main.c        ****         CyDmaChEnable(tx2Channel, STORE_TD_CFG_ONCMPLT);
 530:main.c        ****         //make sure previous SPI2 transmission has completed before transferring the remaining midi
 531:main.c        ****         while (0u == ((SPIM_2_ReadTxStatus() & SPIM_2_STS_SPI_DONE) || (SPIM_2_ReadTxStatus() & SPI
 532:main.c        ****         {
 533:main.c        ****             ;
 534:main.c        ****         }    
 535:main.c        ****         if (rx2Buffer[0] == 253) // message that means audio IC is sending preset names)
 536:main.c        ****         {
 537:main.c        ****             uint8_t whichPresetToName = rx2Buffer[1];
 538:main.c        ****             if (whichPresetToName < MAX_NUM_PRESETS)
 539:main.c        ****             {
 540:main.c        ****                 for (int i = 0; i < 14; i++)
 541:main.c        ****                 {
 542:main.c        ****                     presetNamesArray[whichPresetToName][i] = rx2Buffer[i+2];
 543:main.c        ****                 }
 544:main.c        ****             }
 545:main.c        ****         }
 546:main.c        **** 
 547:main.c        ****         
 548:main.c        ****     }
 549:main.c        ****     #endif
 550:main.c        ****     
 551:main.c        ****     ADC_SAR_Seq_1_Start();
 1800              		.loc 1 551 0
 1801 02de FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 552:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 1802              		.loc 1 552 0
 1803 02e2 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 553:main.c        ****     if (!USB_VBusPresent())
 1804              		.loc 1 553 0
 1805 02e6 FFF7FEFF 		bl	USB_VBusPresent
 554:main.c        ****     {
 555:main.c        ****        // restartSystemCheck();
 556:main.c        ****     }
 557:main.c        ****     
 558:main.c        ****     CyDelay(100);
 1806              		.loc 1 558 0
 1807 02ea 6420     		movs	r0, #100
 1808 02ec FFF7FEFF 		bl	CyDelay
 559:main.c        ****     I2Cbuff1[0] = 1<<6;
 1809              		.loc 1 559 0
 1810 02f0 754B     		ldr	r3, .L147+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 43


 1811 02f2 4022     		movs	r2, #64
 1812 02f4 1A70     		strb	r2, [r3]
 560:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 1813              		.loc 1 560 0
 1814 02f6 0022     		movs	r2, #0
 1815 02f8 0121     		movs	r1, #1
 1816 02fa 7020     		movs	r0, #112
 1817 02fc FFF7FEFF 		bl	I2C_MasterWriteBlocking
 1818 0300 0346     		mov	r3, r0
 1819 0302 1A46     		mov	r2, r3
 1820 0304 714B     		ldr	r3, .L147+20
 1821 0306 1A60     		str	r2, [r3]
 561:main.c        **** 
 562:main.c        ****     OLED_init();
 1822              		.loc 1 562 0
 1823 0308 FFF7FEFF 		bl	OLED_init
 563:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 1824              		.loc 1 563 0
 1825 030c 704B     		ldr	r3, .L147+24
 1826 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1827 0310 1846     		mov	r0, r3
 1828 0312 0323     		movs	r3, #3
 1829 0314 0022     		movs	r2, #0
 1830 0316 0221     		movs	r1, #2
 1831 0318 FFF7FEFF 		bl	OLEDwriteInt
 564:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 1832              		.loc 1 564 0
 1833 031c FFF7FEFF 		bl	OLEDgetCursor
 1834 0320 0246     		mov	r2, r0
 1835 0322 0323     		movs	r3, #3
 1836 0324 0121     		movs	r1, #1
 1837 0326 6B48     		ldr	r0, .L147+28
 1838 0328 FFF7FEFF 		bl	OLEDwriteString
 565:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OLEDgetC
 1839              		.loc 1 565 0
 1840 032c 684B     		ldr	r3, .L147+24
 1841 032e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1842 0330 1A46     		mov	r2, r3
 1843 0332 1346     		mov	r3, r2
 1844 0334 DB00     		lsls	r3, r3, #3
 1845 0336 9B1A     		subs	r3, r3, r2
 1846 0338 5B00     		lsls	r3, r3, #1
 1847 033a 674A     		ldr	r2, .L147+32
 1848 033c 9C18     		adds	r4, r3, r2
 1849 033e FFF7FEFF 		bl	OLEDgetCursor
 1850 0342 0246     		mov	r2, r0
 1851 0344 0323     		movs	r3, #3
 1852 0346 0E21     		movs	r1, #14
 1853 0348 2046     		mov	r0, r4
 1854 034a FFF7FEFF 		bl	OLEDwriteString
 566:main.c        ****     OLED_draw();
 1855              		.loc 1 566 0
 1856 034e FFF7FEFF 		bl	OLED_draw
 567:main.c        **** #if 0
 568:main.c        ****     while(1)
 569:main.c        ****     {
 570:main.c        ****         for (int i=  0; i < 4; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 44


 571:main.c        ****         {
 572:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 573:main.c        ****             if (knobs[i] != prevKnobs[i])
 574:main.c        ****             {
 575:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 576:main.c        ****             }
 577:main.c        ****             prevKnobs[i] = knobs[i];
 578:main.c        ****         }
 579:main.c        ****         
 580:main.c        **** 
 581:main.c        ****         I2Cbuff1[0] = 1<<0;
 582:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 583:main.c        **** 
 584:main.c        ****         //CyDelayUs(100);
 585:main.c        ****         I2Cbuff1[0] = 0x0E;
 586:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 587:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 588:main.c        ****        // CyDelayUs(100);
 589:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 590:main.c        ****         angle[0] +=  I2Cbuff2[1];
 591:main.c        ****         
 592:main.c        ****     }
 593:main.c        ****     #endif
 594:main.c        ****     //OLEDclear();
 595:main.c        ****     /*
 596:main.c        ****     while(1)
 597:main.c        ****     {
 598:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 599:main.c        ****         OLED_draw();
 600:main.c        ****         CyDelay(1);
 601:main.c        ****         
 602:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 603:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 604:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 605:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
 606:main.c        ****         for (int i=  0; i < 4; i++)
 607:main.c        ****         {
 608:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 609:main.c        ****         }
 610:main.c        **** 
 611:main.c        ****     }
 612:main.c        ****     */
 613:main.c        **** #if 0
 614:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 615:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 616:main.c        **** 
 617:main.c        **** 
 618:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
 619:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 620:main.c        **** 
 621:main.c        ****     //address 0x48
 622:main.c        ****     I2Cbuff1[0] = 0x1;
 623:main.c        ****     I2Cbuff1[1] = 0b11000000;
 624:main.c        ****     I2Cbuff1[2] = 0b10000011;
 625:main.c        **** 
 626:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 627:main.c        ****     #endif
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 45


 628:main.c        ****     
 629:main.c        ****     SPIS_1_Start();  
 1857              		.loc 1 629 0
 1858 0352 FFF7FEFF 		bl	SPIS_1_Start
 630:main.c        ****     SPIM_1_Start();  
 1859              		.loc 1 630 0
 1860 0356 FFF7FEFF 		bl	SPIM_1_Start
 631:main.c        ****     SPIS_2_Start(); 
 1861              		.loc 1 631 0
 1862 035a FFF7FEFF 		bl	SPIS_2_Start
 632:main.c        ****     DmaRxConfiguration();
 1863              		.loc 1 632 0
 1864 035e FFF7FEFF 		bl	DmaRxConfiguration
 633:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 1865              		.loc 1 633 0
 1866 0362 5E48     		ldr	r0, .L147+36
 1867 0364 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 634:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 1868              		.loc 1 634 0
 1869 0368 5D48     		ldr	r0, .L147+40
 1870 036a FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 635:main.c        ****     
 636:main.c        ****     myArray[30] = 254;
 1871              		.loc 1 636 0
 1872 036e 5D4B     		ldr	r3, .L147+44
 1873 0370 FE22     		movs	r2, #254
 1874 0372 9A77     		strb	r2, [r3, #30]
 637:main.c        ****     myArray[31] = 253;
 1875              		.loc 1 637 0
 1876 0374 5B4B     		ldr	r3, .L147+44
 1877 0376 FD22     		movs	r2, #253
 1878 0378 DA77     		strb	r2, [r3, #31]
 638:main.c        **** 
 639:main.c        ****     main_counter = 0;
 1879              		.loc 1 639 0
 1880 037a 5B4B     		ldr	r3, .L147+48
 1881 037c 0022     		movs	r2, #0
 1882 037e 1A70     		strb	r2, [r3]
 1883              	.L137:
 640:main.c        **** 
 641:main.c        **** 	for(;;)
 642:main.c        ****     {
 643:main.c        ****         
 644:main.c        ****         if (parseThatMF)
 1884              		.loc 1 644 0
 1885 0380 5A4B     		ldr	r3, .L147+52
 1886 0382 1B78     		ldrb	r3, [r3]
 1887 0384 DBB2     		uxtb	r3, r3
 1888 0386 002B     		cmp	r3, #0
 1889 0388 01D0     		beq	.L66
 645:main.c        ****         {
 646:main.c        ****             parseSysex();
 1890              		.loc 1 646 0
 1891 038a FFF7FEFF 		bl	parseSysex
 1892              	.L66:
 647:main.c        ****         }
 648:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 46


 649:main.c        ****         //if (newDataFlag)
 650:main.c        ****         //{
 651:main.c        ****         //}
 652:main.c        ****             /*
 653:main.c        ****             for (int i = 0; i < 5; i++)
 654:main.c        ****             {
 655:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 656:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 657:main.c        ****                 I2C_1_MasterSendStop(); 
 658:main.c        **** 
 659:main.c        **** 
 660:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 661:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 662:main.c        ****                 //I2C_1_MasterSendStop();
 663:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
 664:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 665:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 666:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 667:main.c        ****                  I2C_1_MasterSendStop(); 
 668:main.c        ****                 
 669:main.c        ****                 CyDelay(1);
 670:main.c        **** 
 671:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 672:main.c        ****                 I2C_1_MasterWriteByte(0x01);
 673:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 674:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 675:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 676:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 677:main.c        ****                 I2C_1_MasterSendStop(); 
 678:main.c        ****                 
 679:main.c        ****                 CyDelay(2);
 680:main.c        **** 
 681:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 682:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 683:main.c        ****                I2C_1_MasterWriteByte(0x80);
 684:main.c        ****                 I2C_1_MasterSendStop(); 
 685:main.c        ****                CyDelay(2);
 686:main.c        ****             }
 687:main.c        ****         */
 688:main.c        ****         //set main i2c mux
 689:main.c        ****     
 690:main.c        ****         
 691:main.c        ****         /*
 692:main.c        ****         for (int i = 0; i < 4; i++)
 693:main.c        ****         {
 694:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 695:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 696:main.c        ****             I2C_1_MasterSendStop(); 
 697:main.c        **** 
 698:main.c        **** 
 699:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 700:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 701:main.c        ****             //I2C_1_MasterSendStop();
 702:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 703:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 704:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 705:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 47


 706:main.c        ****              I2C_1_MasterSendStop(); 
 707:main.c        ****             
 708:main.c        ****             CyDelay(1);
 709:main.c        **** 
 710:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 711:main.c        ****             I2C_1_MasterWriteByte(0x01);
 712:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 713:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 714:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 715:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 716:main.c        ****             I2C_1_MasterSendStop(); 
 717:main.c        ****             
 718:main.c        ****             CyDelay(2);
 719:main.c        **** 
 720:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 721:main.c        ****             I2C_1_MasterWriteByte(0xff);
 722:main.c        ****             I2C_1_MasterWriteByte(0x80);
 723:main.c        ****             I2C_1_MasterSendStop(); 
 724:main.c        ****            CyDelay(2);
 725:main.c        ****         }
 726:main.c        ****             */
 727:main.c        ****         /*    
 728:main.c        ****         if (main_counter == 6)
 729:main.c        ****         {
 730:main.c        ****             main_counter = 8;
 731:main.c        ****         }
 732:main.c        ****         */    
 733:main.c        **** 
 734:main.c        ****         #if 0 //sensev levers and pedals
 735:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 736:main.c        ****         {
 737:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 738:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 739:main.c        ****         }
 740:main.c        ****         last_mux = mux_states[main_counter][0];
 741:main.c        ****         
 742:main.c        ****         CyDelayUs(10);
 743:main.c        ****         if (mux_states[main_counter][0] == 5)
 744:main.c        ****         {
 745:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 746:main.c        ****             status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 747:main.c        ****         }
 748:main.c        **** 
 749:main.c        ****         CyDelayUs(10);
 750:main.c        ****         //if it's a hall sensor
 751:main.c        **** 
 752:main.c        ****         if (main_counter < 10)
 753:main.c        ****         {
 754:main.c        ****             //CyDelayUs(100);
 755:main.c        ****             I2Cbuff1[0] = 0x0E;
 756:main.c        ****             status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 757:main.c        ****             status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 758:main.c        ****            // CyDelayUs(100);
 759:main.c        ****             angle[main_counter] = I2Cbuff2[0] << 8;
 760:main.c        ****             angle[main_counter] +=  I2Cbuff2[1];
 761:main.c        ****         }
 762:main.c        ****         //otherwise it's the ADC for the foot pedal
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 48


 763:main.c        ****         else if (main_counter == 10)
 764:main.c        ****         {
 765:main.c        ****         //0x4D is the 7=-bit version of the MCP3221 address, might need to be shifted over by 1 to 
 766:main.c        ****             I2Cbuff1[0] = 0x0;      
 767:main.c        ****             status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 768:main.c        ****             volumePedal = I2Cbuff2[0] << 8;
 769:main.c        ****             volumePedal +=  I2Cbuff2[1];
 770:main.c        ****         }
 771:main.c        ****         else
 772:main.c        ****         #endif
 773:main.c        ****         { 
 774:main.c        ****             #if 0
 775:main.c        ****             if (OLEDcount == 0)
 776:main.c        ****             {
 777:main.c        ****                 OLEDclearLine(FirstLine);
 778:main.c        ****             }
 779:main.c        ****             else if (OLEDcount == 1)
 780:main.c        ****             {
 781:main.c        ****                 OLEDwriteInt(encoderNum, 2, 0, FirstLine);
 782:main.c        **** 		    }
 783:main.c        ****             else if (OLEDcount == 2)
 784:main.c        ****             {
 785:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
 786:main.c        ****             }
 787:main.c        ****             else if (OLEDcount == 3)
 788:main.c        ****             {
 789:main.c        ****                 OLEDwriteInt(encoderVal[encoderNum], 3, OLEDgetCursor(), FirstLine);
 790:main.c        ****             }
 791:main.c        ****             else if (OLEDcount == 4)
 792:main.c        ****             {
 793:main.c        ****                 OLEDwriteString("     ", 5, OLEDgetCursor(), FirstLine);
 794:main.c        ****             }
 795:main.c        ****             else if (OLEDcount == 5)
 796:main.c        ****             {
 797:main.c        ****                 OLEDwriteInt(patchNum, 2, OLEDgetCursor(), FirstLine);
 798:main.c        ****             }
 799:main.c        ****             else if (OLEDcount == 6)
 800:main.c        ****             {
 801:main.c        ****                 //OLED_drawFirstLine();
 802:main.c        ****                 
 803:main.c        ****                 //OLEDwriteInt( bar[0] , 6, 0,SecondLine);
 804:main.c        ****                 //OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 805:main.c        ****                 //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 806:main.c        ****                 //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_B
 807:main.c        ****                  //OLED_draw();
 808:main.c        ****             }
 809:main.c        ****             OLEDcount++;
 810:main.c        ****             if (OLEDcount > 6)
 811:main.c        ****             {
 812:main.c        ****                 OLEDcount = 0;
 813:main.c        ****             }
 814:main.c        ****             #endif
 815:main.c        ****         }
 816:main.c        ****         
 817:main.c        ****         /*
 818:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
 819:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 49


 820:main.c        **** 
 821:main.c        ****                 for (int i = 0; i < 5; i++)
 822:main.c        ****                 {
 823:main.c        ****                     I2Cbuff1[0] = 1<<i;
 824:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 825:main.c        **** 
 826:main.c        ****                     I2Cbuff1[0] = 0x0E;
 827:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 828:main.c        **** 
 829:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 830:main.c        **** 
 831:main.c        **** 
 832:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 833:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 834:main.c        ****                 }
 835:main.c        ****             if (main_counter == 0)
 836:main.c        ****             {               
 837:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
 838:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 839:main.c        **** 
 840:main.c        ****                 for (int i = 0; i < 5; i++)
 841:main.c        ****                 {
 842:main.c        ****                     I2Cbuff1[0] = 1<<i;
 843:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 844:main.c        **** 
 845:main.c        ****                     I2Cbuff1[0] = 0x0E;
 846:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 847:main.c        **** 
 848:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 849:main.c        **** 
 850:main.c        **** 
 851:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 852:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 853:main.c        ****                 }
 854:main.c        ****             }
 855:main.c        ****             else
 856:main.c        ****             {
 857:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
 858:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 859:main.c        ****                 I2Cbuff1[0] = 0x0E;
 860:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 861:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 862:main.c        ****                 {
 863:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 864:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 865:main.c        ****                 }
 866:main.c        ****            
 867:main.c        **** 
 868:main.c        **** 
 869:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 870:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
 871:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 872:main.c        ****                 {
 873:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 874:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 875:main.c        ****                 }
 876:main.c        ****                 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 50


 877:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
 878:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
 879:main.c        ****             }    
 880:main.c        ****                 
 881:main.c        **** 
 882:main.c        ****             send_it = 1;
 883:main.c        ****         }
 884:main.c        ****         */
 885:main.c        ****         
 886:main.c        ****         if (main_counter < 10)
 1893              		.loc 1 886 0
 1894 038e 564B     		ldr	r3, .L147+48
 1895 0390 1B78     		ldrb	r3, [r3]
 1896 0392 DBB2     		uxtb	r3, r3
 1897 0394 092B     		cmp	r3, #9
 1898 0396 73D8     		bhi	.L67
 1899              	.LBB11:
 887:main.c        ****         {
 888:main.c        ****             
 889:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
 890:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_low[main_counter])
 1900              		.loc 1 890 0
 1901 0398 534B     		ldr	r3, .L147+48
 1902 039a 1B78     		ldrb	r3, [r3]
 1903 039c DBB2     		uxtb	r3, r3
 1904 039e 1A46     		mov	r2, r3
 1905 03a0 534B     		ldr	r3, .L147+56
 1906 03a2 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 1907 03a6 504B     		ldr	r3, .L147+48
 1908 03a8 1B78     		ldrb	r3, [r3]
 1909 03aa DBB2     		uxtb	r3, r3
 1910 03ac 1946     		mov	r1, r3
 1911 03ae 514B     		ldr	r3, .L147+60
 1912 03b0 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 1913 03b4 D31A     		subs	r3, r2, r3
 1914 03b6 9BB2     		uxth	r3, r3
 1915 03b8 3B84     		strh	r3, [r7, #32]	@ movhi
 891:main.c        ****             
 892:main.c        ****             if (tempangle > 0)
 1916              		.loc 1 892 0
 1917 03ba B7F92030 		ldrsh	r3, [r7, #32]
 1918 03be 002B     		cmp	r3, #0
 1919 03c0 1CDD     		ble	.L68
 893:main.c        ****             {
 894:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 1920              		.loc 1 894 0
 1921 03c2 494B     		ldr	r3, .L147+48
 1922 03c4 1B78     		ldrb	r3, [r3]
 1923 03c6 DBB2     		uxtb	r3, r3
 1924 03c8 1C46     		mov	r4, r3
 1925 03ca B7F92030 		ldrsh	r3, [r7, #32]
 1926 03ce 1846     		mov	r0, r3
 1927 03d0 FFF7FEFF 		bl	__aeabi_i2f
 1928 03d4 444B     		ldr	r3, .L147+48
 1929 03d6 1B78     		ldrb	r3, [r3]
 1930 03d8 DBB2     		uxtb	r3, r3
 1931 03da 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 51


 1932 03dc 464B     		ldr	r3, .L147+64
 1933 03de 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 1934 03e2 1946     		mov	r1, r3
 1935 03e4 FFF7FEFF 		bl	__aeabi_fmul
 1936 03e8 0346     		mov	r3, r0
 1937 03ea 1846     		mov	r0, r3
 1938 03ec FFF7FEFF 		bl	__aeabi_f2uiz
 1939 03f0 0346     		mov	r3, r0
 1940 03f2 9AB2     		uxth	r2, r3
 1941 03f4 414B     		ldr	r3, .L147+68
 1942 03f6 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 1943 03fa 07E0     		b	.L69
 1944              	.L68:
 895:main.c        ****             }
 896:main.c        ****             else
 897:main.c        ****             {
 898:main.c        ****                 processed_pedals[main_counter] = 0;
 1945              		.loc 1 898 0
 1946 03fc 3A4B     		ldr	r3, .L147+48
 1947 03fe 1B78     		ldrb	r3, [r3]
 1948 0400 DBB2     		uxtb	r3, r3
 1949 0402 1A46     		mov	r2, r3
 1950 0404 3D4B     		ldr	r3, .L147+68
 1951 0406 0021     		movs	r1, #0
 1952 0408 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 1953              	.L69:
 899:main.c        ****             }
 900:main.c        ****             if (processed_pedals[main_counter] > 4095)
 1954              		.loc 1 900 0
 1955 040c 364B     		ldr	r3, .L147+48
 1956 040e 1B78     		ldrb	r3, [r3]
 1957 0410 DBB2     		uxtb	r3, r3
 1958 0412 1A46     		mov	r2, r3
 1959 0414 394B     		ldr	r3, .L147+68
 1960 0416 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 1961 041a B3F5805F 		cmp	r3, #4096
 1962 041e 08D3     		bcc	.L70
 901:main.c        ****             {
 902:main.c        ****                 processed_pedals[main_counter] = 4095;
 1963              		.loc 1 902 0
 1964 0420 314B     		ldr	r3, .L147+48
 1965 0422 1B78     		ldrb	r3, [r3]
 1966 0424 DBB2     		uxtb	r3, r3
 1967 0426 1A46     		mov	r2, r3
 1968 0428 344B     		ldr	r3, .L147+68
 1969 042a 40F6FF71 		movw	r1, #4095
 1970 042e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 1971              	.L70:
 903:main.c        ****             }
 904:main.c        ****             
 905:main.c        ****             
 906:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
 907:main.c        ****             {
 908:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
 909:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
 910:main.c        ****             }
 911:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 52


 1972              		.loc 1 911 0
 1973 0432 2D4B     		ldr	r3, .L147+48
 1974 0434 1B78     		ldrb	r3, [r3]
 1975 0436 DBB2     		uxtb	r3, r3
 1976 0438 1C46     		mov	r4, r3
 1977 043a 2B4B     		ldr	r3, .L147+48
 1978 043c 1B78     		ldrb	r3, [r3]
 1979 043e DBB2     		uxtb	r3, r3
 1980 0440 1A46     		mov	r2, r3
 1981 0442 2E4B     		ldr	r3, .L147+68
 1982 0444 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 1983 0448 1846     		mov	r0, r3
 1984 044a FFF7FEFF 		bl	__aeabi_ui2f
 1985 044e 0346     		mov	r3, r0
 1986 0450 2B49     		ldr	r1, .L147+72
 1987 0452 1846     		mov	r0, r3
 1988 0454 FFF7FEFF 		bl	__aeabi_fmul
 1989 0458 0346     		mov	r3, r0
 1990 045a 1A46     		mov	r2, r3
 1991 045c 294B     		ldr	r3, .L147+76
 1992 045e 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
 912:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 1993              		.loc 1 912 0
 1994 0462 214B     		ldr	r3, .L147+48
 1995 0464 1B78     		ldrb	r3, [r3]
 1996 0466 DBB2     		uxtb	r3, r3
 1997 0468 1A46     		mov	r2, r3
 1998 046a 1F4B     		ldr	r3, .L147+48
 1999 046c 1B78     		ldrb	r3, [r3]
 2000 046e DBB2     		uxtb	r3, r3
 2001 0470 1946     		mov	r1, r3
 2002 0472 224B     		ldr	r3, .L147+68
 2003 0474 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2004 0478 234B     		ldr	r3, .L147+80
 2005 047a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2006              	.LBE11:
 2007 047e 76E0     		b	.L71
 2008              	.L67:
 913:main.c        ****         }
 914:main.c        ****         else
 915:main.c        ****         {
 916:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 2009              		.loc 1 916 0
 2010 0480 224B     		ldr	r3, .L147+84
 2011 0482 1B88     		ldrh	r3, [r3]
 2012 0484 1846     		mov	r0, r3
 2013 0486 FFF7FEFF 		bl	__aeabi_ui2f
 2014 048a 0346     		mov	r3, r0
 2015 048c 2049     		ldr	r1, .L147+88
 2016 048e 1846     		mov	r0, r3
 2017 0490 FFF7FEFF 		bl	__aeabi_fmul
 2018 0494 0346     		mov	r3, r0
 2019 0496 1846     		mov	r0, r3
 2020 0498 FFF7FEFF 		bl	__aeabi_f2iz
 2021 049c 0346     		mov	r3, r0
 2022 049e 1AB2     		sxth	r2, r3
 2023 04a0 1C4B     		ldr	r3, .L147+92
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 53


 2024 04a2 1A80     		strh	r2, [r3]	@ movhi
 917:main.c        **** 
 918:main.c        ****             if (processed_volumePedal < 0)
 2025              		.loc 1 918 0
 2026 04a4 1B4B     		ldr	r3, .L147+92
 2027 04a6 B3F90030 		ldrsh	r3, [r3]
 2028 04aa 002B     		cmp	r3, #0
 2029 04ac 34DA     		bge	.L72
 919:main.c        ****             {
 920:main.c        ****                 processed_volumePedal = 0;
 2030              		.loc 1 920 0
 2031 04ae 194B     		ldr	r3, .L147+92
 2032 04b0 0022     		movs	r2, #0
 2033 04b2 1A80     		strh	r2, [r3]	@ movhi
 2034 04b4 3AE0     		b	.L73
 2035              	.L148:
 2036 04b6 00BF     		.align	2
 2037              	.L147:
 2038 04b8 00000000 		.word	copedent
 2039 04bc 00000000 		.word	Em_EEPROM_em_EepromStorage
 2040 04c0 00000000 		.word	eepromReturnValue
 2041 04c4 00000000 		.word	Vbus_function
 2042 04c8 00000000 		.word	I2Cbuff1
 2043 04cc 00000000 		.word	status
 2044 04d0 00000000 		.word	currentCopedent
 2045 04d4 00040000 		.word	.LC0
 2046 04d8 00000000 		.word	copedentNamesArray
 2047 04dc 00000000 		.word	spis_1_ss
 2048 04e0 00000000 		.word	spis_2_ss
 2049 04e4 00000000 		.word	myArray
 2050 04e8 00000000 		.word	main_counter
 2051 04ec 00000000 		.word	parseThatMF
 2052 04f0 00000000 		.word	angle
 2053 04f4 00000000 		.word	pedals_low
 2054 04f8 00000000 		.word	pedalRatios
 2055 04fc 00000000 		.word	processed_pedals
 2056 0500 01088039 		.word	964691969
 2057 0504 00000000 		.word	pedals_float
 2058 0508 00000000 		.word	prev_processed_pedals
 2059 050c 00000000 		.word	volumePedal
 2060 0510 C5F1803F 		.word	1065415109
 2061 0514 00000000 		.word	processed_volumePedal
 2062              	.L72:
 921:main.c        ****             }
 922:main.c        ****             else if (processed_volumePedal > 4095)
 2063              		.loc 1 922 0
 2064 0518 A34B     		ldr	r3, .L149
 2065 051a B3F90030 		ldrsh	r3, [r3]
 2066 051e B3F5805F 		cmp	r3, #4096
 2067 0522 03DB     		blt	.L73
 923:main.c        ****             {
 924:main.c        ****                  processed_volumePedal = 4095;
 2068              		.loc 1 924 0
 2069 0524 A04B     		ldr	r3, .L149
 2070 0526 40F6FF72 		movw	r2, #4095
 2071 052a 1A80     		strh	r2, [r3]	@ movhi
 2072              	.L73:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 54


 925:main.c        ****             }
 926:main.c        ****             
 927:main.c        ****             if ( processed_volumePedal != prev_processed_volumePedal)
 2073              		.loc 1 927 0
 2074 052c 9E4B     		ldr	r3, .L149
 2075 052e B3F90020 		ldrsh	r2, [r3]
 2076 0532 9E4B     		ldr	r3, .L149+4
 2077 0534 B3F90030 		ldrsh	r3, [r3]
 2078 0538 9A42     		cmp	r2, r3
 2079 053a 13D0     		beq	.L74
 2080              	.LBB12:
 928:main.c        ****             {
 929:main.c        ****                 uint16_t tempPedal = processed_volumePedal;
 2081              		.loc 1 929 0
 2082 053c 9A4B     		ldr	r3, .L149
 2083 053e B3F90030 		ldrsh	r3, [r3]
 2084 0542 FB83     		strh	r3, [r7, #30]	@ movhi
 930:main.c        ****                 
 931:main.c        ****                 sendMIDIControlChange(21, ( tempPedal >> 7), 0);
 2085              		.loc 1 931 0
 2086 0544 FB8B     		ldrh	r3, [r7, #30]
 2087 0546 DB09     		lsrs	r3, r3, #7
 2088 0548 9BB2     		uxth	r3, r3
 2089 054a 0022     		movs	r2, #0
 2090 054c 1946     		mov	r1, r3
 2091 054e 1520     		movs	r0, #21
 2092 0550 FFF7FEFF 		bl	sendMIDIControlChange
 932:main.c        ****                 sendMIDIControlChange(22, ( tempPedal & 127), 0);
 2093              		.loc 1 932 0
 2094 0554 FB8B     		ldrh	r3, [r7, #30]
 2095 0556 03F07F03 		and	r3, r3, #127
 2096 055a 0022     		movs	r2, #0
 2097 055c 1946     		mov	r1, r3
 2098 055e 1620     		movs	r0, #22
 2099 0560 FFF7FEFF 		bl	sendMIDIControlChange
 2100              	.L74:
 2101              	.LBE12:
 933:main.c        ****             }
 934:main.c        ****              prev_processed_volumePedal = processed_volumePedal;
 2102              		.loc 1 934 0
 2103 0564 904B     		ldr	r3, .L149
 2104 0566 B3F90020 		ldrsh	r2, [r3]
 2105 056a 904B     		ldr	r3, .L149+4
 2106 056c 1A80     		strh	r2, [r3]	@ movhi
 2107              	.L71:
 935:main.c        ****         }
 936:main.c        ****         
 937:main.c        ****         main_counter++;
 2108              		.loc 1 937 0
 2109 056e 904B     		ldr	r3, .L149+8
 2110 0570 1B78     		ldrb	r3, [r3]
 2111 0572 DBB2     		uxtb	r3, r3
 2112 0574 0133     		adds	r3, r3, #1
 2113 0576 DAB2     		uxtb	r2, r3
 2114 0578 8D4B     		ldr	r3, .L149+8
 2115 057a 1A70     		strb	r2, [r3]
 938:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 55


 939:main.c        ****         if (main_counter > 11)
 2116              		.loc 1 939 0
 2117 057c 8C4B     		ldr	r3, .L149+8
 2118 057e 1B78     		ldrb	r3, [r3]
 2119 0580 DBB2     		uxtb	r3, r3
 2120 0582 0B2B     		cmp	r3, #11
 2121 0584 02D9     		bls	.L75
 940:main.c        ****         {
 941:main.c        ****             main_counter = 0;
 2122              		.loc 1 941 0
 2123 0586 8A4B     		ldr	r3, .L149+8
 2124 0588 0022     		movs	r2, #0
 2125 058a 1A70     		strb	r2, [r3]
 2126              	.L75:
 942:main.c        ****         }
 943:main.c        ****         
 944:main.c        ****         #if 0
 945:main.c        ****             
 946:main.c        ****             
 947:main.c        ****         main_counter++;
 948:main.c        ****         if (main_counter >= 11)
 949:main.c        ****         {
 950:main.c        ****                /*  
 951:main.c        ****             testpin3_Write(1);
 952:main.c        ****             I2Cbuff1[0] = 1<<6;
 953:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 954:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 955:main.c        **** 
 956:main.c        ****         //CyDelay(1);
 957:main.c        ****         
 958:main.c        ****         OLEDwriteInt(octave, 1, 0,SecondLine);
 959:main.c        **** 
 960:main.c        ****         OLED_draw();
 961:main.c        ****                     I2Cbuff1[0] = 1<<0;
 962:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 963:main.c        ****         testpin3_Write(0);
 964:main.c        ****             */
 965:main.c        ****             main_counter = 0;
 966:main.c        ****         }
 967:main.c        ****         #endif
 968:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 2127              		.loc 1 968 0
 2128 058c 894B     		ldr	r3, .L149+12
 2129 058e 1B78     		ldrb	r3, [r3]
 2130 0590 DBB2     		uxtb	r3, r3
 2131 0592 002B     		cmp	r3, #0
 2132 0594 0CBF     		ite	eq
 2133 0596 0123     		moveq	r3, #1
 2134 0598 0023     		movne	r3, #0
 2135 059a DBB2     		uxtb	r3, r3
 2136 059c 864A     		ldr	r2, .L149+16
 2137 059e DB00     		lsls	r3, r3, #3
 2138 05a0 1344     		add	r3, r3, r2
 2139 05a2 9B79     		ldrb	r3, [r3, #6]
 2140 05a4 DBB2     		uxtb	r3, r3
 2141 05a6 FE2B     		cmp	r3, #254
 2142 05a8 40F05281 		bne	.L76
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 56


 2143              		.loc 1 968 0 is_stmt 0 discriminator 1
 2144 05ac 814B     		ldr	r3, .L149+12
 2145 05ae 1B78     		ldrb	r3, [r3]
 2146 05b0 DBB2     		uxtb	r3, r3
 2147 05b2 002B     		cmp	r3, #0
 2148 05b4 0CBF     		ite	eq
 2149 05b6 0123     		moveq	r3, #1
 2150 05b8 0023     		movne	r3, #0
 2151 05ba DBB2     		uxtb	r3, r3
 2152 05bc 7E4A     		ldr	r2, .L149+16
 2153 05be DB00     		lsls	r3, r3, #3
 2154 05c0 1344     		add	r3, r3, r2
 2155 05c2 DB79     		ldrb	r3, [r3, #7]
 2156 05c4 DBB2     		uxtb	r3, r3
 2157 05c6 FD2B     		cmp	r3, #253
 2158 05c8 40F04281 		bne	.L76
 2159              	.LBB13:
 969:main.c        ****         {
 970:main.c        ****             for (int i = 0; i < 2; i++)
 2160              		.loc 1 970 0 is_stmt 1
 2161 05cc 0023     		movs	r3, #0
 2162 05ce BB64     		str	r3, [r7, #72]
 2163 05d0 3AE1     		b	.L77
 2164              	.L89:
 971:main.c        ****             {
 972:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 2165              		.loc 1 972 0
 2166 05d2 784B     		ldr	r3, .L149+12
 2167 05d4 1B78     		ldrb	r3, [r3]
 2168 05d6 DBB2     		uxtb	r3, r3
 2169 05d8 002B     		cmp	r3, #0
 2170 05da 0CBF     		ite	eq
 2171 05dc 0123     		moveq	r3, #1
 2172 05de 0023     		movne	r3, #0
 2173 05e0 DBB2     		uxtb	r3, r3
 2174 05e2 1A46     		mov	r2, r3
 2175 05e4 BB6C     		ldr	r3, [r7, #72]
 2176 05e6 5B00     		lsls	r3, r3, #1
 2177 05e8 7349     		ldr	r1, .L149+16
 2178 05ea D200     		lsls	r2, r2, #3
 2179 05ec 0A44     		add	r2, r2, r1
 2180 05ee 1344     		add	r3, r3, r2
 2181 05f0 1B78     		ldrb	r3, [r3]
 2182 05f2 DBB2     		uxtb	r3, r3
 2183 05f4 9BB2     		uxth	r3, r3
 2184 05f6 1B02     		lsls	r3, r3, #8
 2185 05f8 9AB2     		uxth	r2, r3
 2186 05fa 6E4B     		ldr	r3, .L149+12
 2187 05fc 1B78     		ldrb	r3, [r3]
 2188 05fe DBB2     		uxtb	r3, r3
 2189 0600 002B     		cmp	r3, #0
 2190 0602 0CBF     		ite	eq
 2191 0604 0123     		moveq	r3, #1
 2192 0606 0023     		movne	r3, #0
 2193 0608 DBB2     		uxtb	r3, r3
 2194 060a 1946     		mov	r1, r3
 2195 060c BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 57


 2196 060e 5B00     		lsls	r3, r3, #1
 2197 0610 0133     		adds	r3, r3, #1
 2198 0612 6948     		ldr	r0, .L149+16
 2199 0614 C900     		lsls	r1, r1, #3
 2200 0616 0144     		add	r1, r1, r0
 2201 0618 0B44     		add	r3, r3, r1
 2202 061a 1B78     		ldrb	r3, [r3]
 2203 061c DBB2     		uxtb	r3, r3
 2204 061e 9BB2     		uxth	r3, r3
 2205 0620 1344     		add	r3, r3, r2
 2206 0622 99B2     		uxth	r1, r3
 2207 0624 654A     		ldr	r2, .L149+20
 2208 0626 BB6C     		ldr	r3, [r7, #72]
 2209 0628 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 973:main.c        ****     
 974:main.c        ****                 if (bar[i] != prevBar[i])
 2210              		.loc 1 974 0
 2211 062c 634A     		ldr	r2, .L149+20
 2212 062e BB6C     		ldr	r3, [r7, #72]
 2213 0630 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2214 0634 9AB2     		uxth	r2, r3
 2215 0636 6249     		ldr	r1, .L149+24
 2216 0638 BB6C     		ldr	r3, [r7, #72]
 2217 063a 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 2218 063e 9BB2     		uxth	r3, r3
 2219 0640 9A42     		cmp	r2, r3
 2220 0642 00F0F580 		beq	.L78
 975:main.c        ****                 {
 976:main.c        ****     				if ((bar[i] == 65535) || (bar[i] > fretMeasurements[0][i]))
 2221              		.loc 1 976 0
 2222 0646 5D4A     		ldr	r2, .L149+20
 2223 0648 BB6C     		ldr	r3, [r7, #72]
 2224 064a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2225 064e 9BB2     		uxth	r3, r3
 2226 0650 4FF6FF72 		movw	r2, #65535
 2227 0654 9342     		cmp	r3, r2
 2228 0656 11D0     		beq	.L79
 2229              		.loc 1 976 0 is_stmt 0 discriminator 1
 2230 0658 584A     		ldr	r2, .L149+20
 2231 065a BB6C     		ldr	r3, [r7, #72]
 2232 065c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2233 0660 9BB2     		uxth	r3, r3
 2234 0662 1846     		mov	r0, r3
 2235 0664 FFF7FEFF 		bl	__aeabi_i2f
 2236 0668 564A     		ldr	r2, .L149+28
 2237 066a BB6C     		ldr	r3, [r7, #72]
 2238 066c 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2239 0670 1946     		mov	r1, r3
 2240 0672 FFF7FEFF 		bl	__aeabi_fcmpgt
 2241 0676 0346     		mov	r3, r0
 2242 0678 002B     		cmp	r3, #0
 2243 067a 06D0     		beq	.L144
 2244              	.L79:
 977:main.c        ****     				{
 978:main.c        ****     					stringMappedPositions[i] = 1.0f;
 2245              		.loc 1 978 0 is_stmt 1
 2246 067c 524A     		ldr	r2, .L149+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 58


 2247 067e BB6C     		ldr	r3, [r7, #72]
 2248 0680 4FF07E51 		mov	r1, #1065353216
 2249 0684 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2250 0688 C3E0     		b	.L82
 2251              	.L144:
 979:main.c        ****     				}
 980:main.c        **** 
 981:main.c        ****     				else if ((bar[i] >= fretMeasurements[1][i]) && (bar[i] <= fretMeasurements[0][i]))
 2252              		.loc 1 981 0
 2253 068a 4C4A     		ldr	r2, .L149+20
 2254 068c BB6C     		ldr	r3, [r7, #72]
 2255 068e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2256 0692 9BB2     		uxth	r3, r3
 2257 0694 1846     		mov	r0, r3
 2258 0696 FFF7FEFF 		bl	__aeabi_i2f
 2259 069a 4A4A     		ldr	r2, .L149+28
 2260 069c BB6C     		ldr	r3, [r7, #72]
 2261 069e 0433     		adds	r3, r3, #4
 2262 06a0 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2263 06a4 1946     		mov	r1, r3
 2264 06a6 FFF7FEFF 		bl	__aeabi_fcmpge
 2265 06aa 0346     		mov	r3, r0
 2266 06ac 002B     		cmp	r3, #0
 2267 06ae 32D0     		beq	.L83
 2268              		.loc 1 981 0 is_stmt 0 discriminator 1
 2269 06b0 424A     		ldr	r2, .L149+20
 2270 06b2 BB6C     		ldr	r3, [r7, #72]
 2271 06b4 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2272 06b8 9BB2     		uxth	r3, r3
 2273 06ba 1846     		mov	r0, r3
 2274 06bc FFF7FEFF 		bl	__aeabi_i2f
 2275 06c0 404A     		ldr	r2, .L149+28
 2276 06c2 BB6C     		ldr	r3, [r7, #72]
 2277 06c4 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2278 06c8 1946     		mov	r1, r3
 2279 06ca FFF7FEFF 		bl	__aeabi_fcmple
 2280 06ce 0346     		mov	r3, r0
 2281 06d0 002B     		cmp	r3, #0
 2282 06d2 20D0     		beq	.L83
 982:main.c        ****     				{
 983:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[0][i], fretMeasurements[1][
 2283              		.loc 1 983 0 is_stmt 1
 2284 06d4 394A     		ldr	r2, .L149+20
 2285 06d6 BB6C     		ldr	r3, [r7, #72]
 2286 06d8 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2287 06dc 9BB2     		uxth	r3, r3
 2288 06de 1846     		mov	r0, r3
 2289 06e0 FFF7FEFF 		bl	__aeabi_ui2f
 2290 06e4 0446     		mov	r4, r0
 2291 06e6 374A     		ldr	r2, .L149+28
 2292 06e8 BB6C     		ldr	r3, [r7, #72]
 2293 06ea 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 2294 06ee 354A     		ldr	r2, .L149+28
 2295 06f0 BB6C     		ldr	r3, [r7, #72]
 2296 06f2 0433     		adds	r3, r3, #4
 2297 06f4 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 2298 06f8 344B     		ldr	r3, .L149+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 59


 2299 06fa 1868     		ldr	r0, [r3]	@ float
 2300 06fc 334B     		ldr	r3, .L149+36
 2301 06fe 5B68     		ldr	r3, [r3, #4]	@ float
 2302 0700 0093     		str	r3, [sp]	@ float
 2303 0702 0346     		mov	r3, r0
 2304 0704 2046     		mov	r0, r4
 2305 0706 FFF7FEFF 		bl	map
 2306 070a 0146     		mov	r1, r0
 2307 070c 2E4A     		ldr	r2, .L149+32
 2308 070e BB6C     		ldr	r3, [r7, #72]
 2309 0710 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2310 0714 7DE0     		b	.L82
 2311              	.L83:
 984:main.c        ****     				}
 985:main.c        **** 
 986:main.c        ****     				else if ((bar[i] >= fretMeasurements[2][i]) && (bar[i] < fretMeasurements[1][i]))
 2312              		.loc 1 986 0
 2313 0716 294A     		ldr	r2, .L149+20
 2314 0718 BB6C     		ldr	r3, [r7, #72]
 2315 071a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2316 071e 9BB2     		uxth	r3, r3
 2317 0720 1846     		mov	r0, r3
 2318 0722 FFF7FEFF 		bl	__aeabi_i2f
 2319 0726 274A     		ldr	r2, .L149+28
 2320 0728 BB6C     		ldr	r3, [r7, #72]
 2321 072a 0833     		adds	r3, r3, #8
 2322 072c 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2323 0730 1946     		mov	r1, r3
 2324 0732 FFF7FEFF 		bl	__aeabi_fcmpge
 2325 0736 0346     		mov	r3, r0
 2326 0738 002B     		cmp	r3, #0
 2327 073a 49D0     		beq	.L86
 2328              		.loc 1 986 0 is_stmt 0 discriminator 1
 2329 073c 1F4A     		ldr	r2, .L149+20
 2330 073e BB6C     		ldr	r3, [r7, #72]
 2331 0740 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2332 0744 9BB2     		uxth	r3, r3
 2333 0746 1846     		mov	r0, r3
 2334 0748 FFF7FEFF 		bl	__aeabi_i2f
 2335 074c 1D4A     		ldr	r2, .L149+28
 2336 074e BB6C     		ldr	r3, [r7, #72]
 2337 0750 0433     		adds	r3, r3, #4
 2338 0752 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2339 0756 1946     		mov	r1, r3
 2340 0758 FFF7FEFF 		bl	__aeabi_fcmplt
 2341 075c 0346     		mov	r3, r0
 2342 075e 002B     		cmp	r3, #0
 2343 0760 36D0     		beq	.L86
 987:main.c        ****     				{
 988:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[1][i], fretMeasurements[2][
 2344              		.loc 1 988 0 is_stmt 1
 2345 0762 164A     		ldr	r2, .L149+20
 2346 0764 BB6C     		ldr	r3, [r7, #72]
 2347 0766 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2348 076a 9BB2     		uxth	r3, r3
 2349 076c 1846     		mov	r0, r3
 2350 076e FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 60


 2351 0772 0446     		mov	r4, r0
 2352 0774 134A     		ldr	r2, .L149+28
 2353 0776 BB6C     		ldr	r3, [r7, #72]
 2354 0778 0433     		adds	r3, r3, #4
 2355 077a 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 2356 077e 114A     		ldr	r2, .L149+28
 2357 0780 BB6C     		ldr	r3, [r7, #72]
 2358 0782 0833     		adds	r3, r3, #8
 2359 0784 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 2360 0788 104B     		ldr	r3, .L149+36
 2361 078a 5868     		ldr	r0, [r3, #4]	@ float
 2362 078c 0F4B     		ldr	r3, .L149+36
 2363 078e 9B68     		ldr	r3, [r3, #8]	@ float
 2364 0790 0093     		str	r3, [sp]	@ float
 2365 0792 0346     		mov	r3, r0
 2366 0794 2046     		mov	r0, r4
 2367 0796 FFF7FEFF 		bl	map
 2368 079a 0146     		mov	r1, r0
 2369 079c 0A4A     		ldr	r2, .L149+32
 2370 079e BB6C     		ldr	r3, [r7, #72]
 2371 07a0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2372 07a4 35E0     		b	.L82
 2373              	.L150:
 2374 07a6 00BF     		.align	2
 2375              	.L149:
 2376 07a8 00000000 		.word	processed_volumePedal
 2377 07ac 00000000 		.word	prev_processed_volumePedal
 2378 07b0 00000000 		.word	main_counter
 2379 07b4 00000000 		.word	currentBarBuffer
 2380 07b8 00000000 		.word	rxBufferBar
 2381 07bc 00000000 		.word	bar
 2382 07c0 00000000 		.word	prevBar
 2383 07c4 00000000 		.word	fretMeasurements
 2384 07c8 00000000 		.word	stringMappedPositions
 2385 07cc 00000000 		.word	fretScaling
 2386              	.L86:
 989:main.c        ****     				}
 990:main.c        **** 
 991:main.c        ****     				else
 992:main.c        ****     				{
 993:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[2][i], fretMeasurements[3][
 2387              		.loc 1 993 0
 2388 07d0 724A     		ldr	r2, .L151
 2389 07d2 BB6C     		ldr	r3, [r7, #72]
 2390 07d4 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2391 07d8 9BB2     		uxth	r3, r3
 2392 07da 1846     		mov	r0, r3
 2393 07dc FFF7FEFF 		bl	__aeabi_ui2f
 2394 07e0 0446     		mov	r4, r0
 2395 07e2 6F4A     		ldr	r2, .L151+4
 2396 07e4 BB6C     		ldr	r3, [r7, #72]
 2397 07e6 0833     		adds	r3, r3, #8
 2398 07e8 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 2399 07ec 6C4A     		ldr	r2, .L151+4
 2400 07ee BB6C     		ldr	r3, [r7, #72]
 2401 07f0 0C33     		adds	r3, r3, #12
 2402 07f2 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 61


 2403 07f6 6B4B     		ldr	r3, .L151+8
 2404 07f8 9868     		ldr	r0, [r3, #8]	@ float
 2405 07fa 6A4B     		ldr	r3, .L151+8
 2406 07fc DB68     		ldr	r3, [r3, #12]	@ float
 2407 07fe 0093     		str	r3, [sp]	@ float
 2408 0800 0346     		mov	r3, r0
 2409 0802 2046     		mov	r0, r4
 2410 0804 FFF7FEFF 		bl	map
 2411 0808 0146     		mov	r1, r0
 2412 080a 674A     		ldr	r2, .L151+12
 2413 080c BB6C     		ldr	r3, [r7, #72]
 2414 080e 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2415              	.L82:
 994:main.c        ****     				}
 995:main.c        **** 
 996:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
 2416              		.loc 1 996 0
 2417 0812 654A     		ldr	r2, .L151+12
 2418 0814 BB6C     		ldr	r3, [r7, #72]
 2419 0816 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2420 081a 1946     		mov	r1, r3
 2421 081c 4FF07E50 		mov	r0, #1065353216
 2422 0820 FFF7FEFF 		bl	__aeabi_fdiv
 2423 0824 0346     		mov	r3, r0
 2424 0826 1946     		mov	r1, r3
 2425 0828 604A     		ldr	r2, .L151+16
 2426 082a BB6C     		ldr	r3, [r7, #72]
 2427 082c 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2428              	.L78:
 997:main.c        ****                 }
 998:main.c        ****                 prevBar[i] = bar[i];
 2429              		.loc 1 998 0 discriminator 2
 2430 0830 5A4A     		ldr	r2, .L151
 2431 0832 BB6C     		ldr	r3, [r7, #72]
 2432 0834 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2433 0838 99B2     		uxth	r1, r3
 2434 083a 5D4A     		ldr	r2, .L151+20
 2435 083c BB6C     		ldr	r3, [r7, #72]
 2436 083e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 970:main.c        ****             {
 2437              		.loc 1 970 0 discriminator 2
 2438 0842 BB6C     		ldr	r3, [r7, #72]
 2439 0844 0133     		adds	r3, r3, #1
 2440 0846 BB64     		str	r3, [r7, #72]
 2441              	.L77:
 970:main.c        ****             {
 2442              		.loc 1 970 0 is_stmt 0 discriminator 1
 2443 0848 BB6C     		ldr	r3, [r7, #72]
 2444 084a 012B     		cmp	r3, #1
 2445 084c 7FF7C1AE 		ble	.L89
 2446              	.L76:
 2447              	.LBE13:
 2448              	.LBB14:
 999:main.c        ****             }
1000:main.c        ****         }
1001:main.c        **** 
1002:main.c        ****         for (int i = 0 ; i < numStrings; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 62


 2449              		.loc 1 1002 0 is_stmt 1
 2450 0850 0023     		movs	r3, #0
 2451 0852 7B64     		str	r3, [r7, #68]
 2452 0854 1AE0     		b	.L90
 2453              	.L92:
1003:main.c        ****         {
1004:main.c        ****             if (strings[i] != prevStrings[i])
 2454              		.loc 1 1004 0
 2455 0856 574A     		ldr	r2, .L151+24
 2456 0858 7B6C     		ldr	r3, [r7, #68]
 2457 085a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2458 085e 9AB2     		uxth	r2, r3
 2459 0860 5549     		ldr	r1, .L151+28
 2460 0862 7B6C     		ldr	r3, [r7, #68]
 2461 0864 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 2462 0868 9BB2     		uxth	r3, r3
 2463 086a 9A42     		cmp	r2, r3
 2464 086c 02D0     		beq	.L91
1005:main.c        ****             {
1006:main.c        ****                 noteEvent(i);
 2465              		.loc 1 1006 0
 2466 086e 786C     		ldr	r0, [r7, #68]
 2467 0870 FFF7FEFF 		bl	noteEvent
 2468              	.L91:
1007:main.c        ****             }
1008:main.c        ****             prevStrings[i] = strings[i];
 2469              		.loc 1 1008 0 discriminator 2
 2470 0874 4F4A     		ldr	r2, .L151+24
 2471 0876 7B6C     		ldr	r3, [r7, #68]
 2472 0878 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2473 087c 99B2     		uxth	r1, r3
 2474 087e 4E4A     		ldr	r2, .L151+28
 2475 0880 7B6C     		ldr	r3, [r7, #68]
 2476 0882 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1002:main.c        ****         {
 2477              		.loc 1 1002 0 discriminator 2
 2478 0886 7B6C     		ldr	r3, [r7, #68]
 2479 0888 0133     		adds	r3, r3, #1
 2480 088a 7B64     		str	r3, [r7, #68]
 2481              	.L90:
1002:main.c        ****         {
 2482              		.loc 1 1002 0 is_stmt 0 discriminator 1
 2483 088c 4B4B     		ldr	r3, .L151+32
 2484 088e 1B68     		ldr	r3, [r3]
 2485 0890 7A6C     		ldr	r2, [r7, #68]
 2486 0892 9A42     		cmp	r2, r3
 2487 0894 DFDB     		blt	.L92
 2488              	.LBE14:
1009:main.c        ****         }
1010:main.c        ****         
1011:main.c        **** 
1012:main.c        **** 
1013:main.c        ****         
1014:main.c        ****         
1015:main.c        ****         if (!oct1_Read())
 2489              		.loc 1 1015 0 is_stmt 1
 2490 0896 FFF7FEFF 		bl	oct1_Read
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 63


 2491 089a 0346     		mov	r3, r0
 2492 089c 002B     		cmp	r3, #0
 2493 089e 23D1     		bne	.L93
1016:main.c        ****         {
1017:main.c        ****             if (octave > 4)
 2494              		.loc 1 1017 0
 2495 08a0 474B     		ldr	r3, .L151+36
 2496 08a2 1B68     		ldr	r3, [r3]
 2497 08a4 042B     		cmp	r3, #4
 2498 08a6 02DD     		ble	.L94
1018:main.c        ****             {
1019:main.c        ****                 octave = 4;
 2499              		.loc 1 1019 0
 2500 08a8 454B     		ldr	r3, .L151+36
 2501 08aa 0422     		movs	r2, #4
 2502 08ac 1A60     		str	r2, [r3]
 2503              	.L94:
1020:main.c        **** 
1021:main.c        ****             }
1022:main.c        ****             if ((oct1Up) && (octave > 0))
 2504              		.loc 1 1022 0
 2505 08ae 454B     		ldr	r3, .L151+40
 2506 08b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2507 08b2 002B     		cmp	r3, #0
 2508 08b4 08D0     		beq	.L95
 2509              		.loc 1 1022 0 is_stmt 0 discriminator 1
 2510 08b6 424B     		ldr	r3, .L151+36
 2511 08b8 1B68     		ldr	r3, [r3]
 2512 08ba 002B     		cmp	r3, #0
 2513 08bc 04DD     		ble	.L95
1023:main.c        ****             {
1024:main.c        ****                 octave--;
 2514              		.loc 1 1024 0 is_stmt 1
 2515 08be 404B     		ldr	r3, .L151+36
 2516 08c0 1B68     		ldr	r3, [r3]
 2517 08c2 013B     		subs	r3, r3, #1
 2518 08c4 3E4A     		ldr	r2, .L151+36
 2519 08c6 1360     		str	r3, [r2]
 2520              	.L95:
1025:main.c        ****             }
1026:main.c        ****             LED_amber1_Write(1);
 2521              		.loc 1 1026 0
 2522 08c8 0120     		movs	r0, #1
 2523 08ca FFF7FEFF 		bl	LED_amber1_Write
1027:main.c        ****             LED_amber2_Write(0);
 2524              		.loc 1 1027 0
 2525 08ce 0020     		movs	r0, #0
 2526 08d0 FFF7FEFF 		bl	LED_amber2_Write
1028:main.c        ****             LED_amber3_Write(0);
 2527              		.loc 1 1028 0
 2528 08d4 0020     		movs	r0, #0
 2529 08d6 FFF7FEFF 		bl	LED_amber3_Write
1029:main.c        ****             LED_amber4_Write(0);
 2530              		.loc 1 1029 0
 2531 08da 0020     		movs	r0, #0
 2532 08dc FFF7FEFF 		bl	LED_amber4_Write
1030:main.c        ****             oct1Up = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 64


 2533              		.loc 1 1030 0
 2534 08e0 384B     		ldr	r3, .L151+40
 2535 08e2 0022     		movs	r2, #0
 2536 08e4 1A70     		strb	r2, [r3]
 2537 08e6 07E0     		b	.L96
 2538              	.L93:
1031:main.c        ****         }
1032:main.c        ****         
1033:main.c        ****         else if (oct1_Read())
 2539              		.loc 1 1033 0
 2540 08e8 FFF7FEFF 		bl	oct1_Read
 2541 08ec 0346     		mov	r3, r0
 2542 08ee 002B     		cmp	r3, #0
 2543 08f0 02D0     		beq	.L96
1034:main.c        ****         {
1035:main.c        ****             oct1Up = 1;
 2544              		.loc 1 1035 0
 2545 08f2 344B     		ldr	r3, .L151+40
 2546 08f4 0122     		movs	r2, #1
 2547 08f6 1A70     		strb	r2, [r3]
 2548              	.L96:
1036:main.c        ****         }
1037:main.c        ****         
1038:main.c        ****         if (!oct2_Read())
 2549              		.loc 1 1038 0
 2550 08f8 FFF7FEFF 		bl	oct2_Read
 2551 08fc 0346     		mov	r3, r0
 2552 08fe 002B     		cmp	r3, #0
 2553 0900 0ED1     		bne	.L97
1039:main.c        ****         {
1040:main.c        ****             octave = 5;
 2554              		.loc 1 1040 0
 2555 0902 2F4B     		ldr	r3, .L151+36
 2556 0904 0522     		movs	r2, #5
 2557 0906 1A60     		str	r2, [r3]
1041:main.c        ****             LED_amber1_Write(0);
 2558              		.loc 1 1041 0
 2559 0908 0020     		movs	r0, #0
 2560 090a FFF7FEFF 		bl	LED_amber1_Write
1042:main.c        ****             LED_amber2_Write(1);
 2561              		.loc 1 1042 0
 2562 090e 0120     		movs	r0, #1
 2563 0910 FFF7FEFF 		bl	LED_amber2_Write
1043:main.c        ****             LED_amber3_Write(0);
 2564              		.loc 1 1043 0
 2565 0914 0020     		movs	r0, #0
 2566 0916 FFF7FEFF 		bl	LED_amber3_Write
1044:main.c        ****             LED_amber4_Write(0);
 2567              		.loc 1 1044 0
 2568 091a 0020     		movs	r0, #0
 2569 091c FFF7FEFF 		bl	LED_amber4_Write
 2570              	.L97:
1045:main.c        ****         }
1046:main.c        ****         if (!oct3_Read())
 2571              		.loc 1 1046 0
 2572 0920 FFF7FEFF 		bl	oct3_Read
 2573 0924 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 65


 2574 0926 002B     		cmp	r3, #0
 2575 0928 0ED1     		bne	.L98
1047:main.c        ****         {
1048:main.c        ****             octave = 6;
 2576              		.loc 1 1048 0
 2577 092a 254B     		ldr	r3, .L151+36
 2578 092c 0622     		movs	r2, #6
 2579 092e 1A60     		str	r2, [r3]
1049:main.c        ****             LED_amber1_Write(0);
 2580              		.loc 1 1049 0
 2581 0930 0020     		movs	r0, #0
 2582 0932 FFF7FEFF 		bl	LED_amber1_Write
1050:main.c        ****             LED_amber2_Write(0);
 2583              		.loc 1 1050 0
 2584 0936 0020     		movs	r0, #0
 2585 0938 FFF7FEFF 		bl	LED_amber2_Write
1051:main.c        ****             LED_amber3_Write(1);
 2586              		.loc 1 1051 0
 2587 093c 0120     		movs	r0, #1
 2588 093e FFF7FEFF 		bl	LED_amber3_Write
1052:main.c        ****             LED_amber4_Write(0);            
 2589              		.loc 1 1052 0
 2590 0942 0020     		movs	r0, #0
 2591 0944 FFF7FEFF 		bl	LED_amber4_Write
 2592              	.L98:
1053:main.c        ****         }
1054:main.c        ****         if (!oct4_Read())
 2593              		.loc 1 1054 0
 2594 0948 FFF7FEFF 		bl	oct4_Read
 2595 094c 0346     		mov	r3, r0
 2596 094e 002B     		cmp	r3, #0
 2597 0950 3CD1     		bne	.L99
1055:main.c        ****         {
1056:main.c        ****             if (octave < 7)
 2598              		.loc 1 1056 0
 2599 0952 1B4B     		ldr	r3, .L151+36
 2600 0954 1B68     		ldr	r3, [r3]
 2601 0956 062B     		cmp	r3, #6
 2602 0958 02DC     		bgt	.L100
1057:main.c        ****             {
1058:main.c        ****                 octave = 7;
 2603              		.loc 1 1058 0
 2604 095a 194B     		ldr	r3, .L151+36
 2605 095c 0722     		movs	r2, #7
 2606 095e 1A60     		str	r2, [r3]
 2607              	.L100:
1059:main.c        **** 
1060:main.c        ****             }
1061:main.c        ****             if ((oct4Up) && (octave < 11))
 2608              		.loc 1 1061 0
 2609 0960 194B     		ldr	r3, .L151+44
 2610 0962 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2611 0964 002B     		cmp	r3, #0
 2612 0966 08D0     		beq	.L101
 2613              		.loc 1 1061 0 is_stmt 0 discriminator 1
 2614 0968 154B     		ldr	r3, .L151+36
 2615 096a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 66


 2616 096c 0A2B     		cmp	r3, #10
 2617 096e 04DC     		bgt	.L101
1062:main.c        ****             {
1063:main.c        ****                 octave++;
 2618              		.loc 1 1063 0 is_stmt 1
 2619 0970 134B     		ldr	r3, .L151+36
 2620 0972 1B68     		ldr	r3, [r3]
 2621 0974 0133     		adds	r3, r3, #1
 2622 0976 124A     		ldr	r2, .L151+36
 2623 0978 1360     		str	r3, [r2]
 2624              	.L101:
1064:main.c        **** 
1065:main.c        ****             }
1066:main.c        ****             LED_amber1_Write(0);
 2625              		.loc 1 1066 0
 2626 097a 0020     		movs	r0, #0
 2627 097c FFF7FEFF 		bl	LED_amber1_Write
1067:main.c        ****             LED_amber2_Write(0);
 2628              		.loc 1 1067 0
 2629 0980 0020     		movs	r0, #0
 2630 0982 FFF7FEFF 		bl	LED_amber2_Write
1068:main.c        ****             LED_amber3_Write(0);
 2631              		.loc 1 1068 0
 2632 0986 0020     		movs	r0, #0
 2633 0988 FFF7FEFF 		bl	LED_amber3_Write
1069:main.c        ****             LED_amber4_Write(1);
 2634              		.loc 1 1069 0
 2635 098c 0120     		movs	r0, #1
 2636 098e FFF7FEFF 		bl	LED_amber4_Write
1070:main.c        ****             oct4Up = 0;
 2637              		.loc 1 1070 0
 2638 0992 0D4B     		ldr	r3, .L151+44
 2639 0994 0022     		movs	r2, #0
 2640 0996 1A70     		strb	r2, [r3]
 2641 0998 20E0     		b	.L102
 2642              	.L152:
 2643 099a 00BF     		.align	2
 2644              	.L151:
 2645 099c 00000000 		.word	bar
 2646 09a0 00000000 		.word	fretMeasurements
 2647 09a4 00000000 		.word	fretScaling
 2648 09a8 00000000 		.word	stringMappedPositions
 2649 09ac 00000000 		.word	invStringMappedPositions
 2650 09b0 00000000 		.word	prevBar
 2651 09b4 00000000 		.word	strings
 2652 09b8 00000000 		.word	prevStrings
 2653 09bc 00000000 		.word	numStrings
 2654 09c0 00000000 		.word	octave
 2655 09c4 00000000 		.word	oct1Up
 2656 09c8 00000000 		.word	oct4Up
 2657              	.L99:
1071:main.c        ****         }
1072:main.c        ****         
1073:main.c        ****         else if (oct4_Read())
 2658              		.loc 1 1073 0
 2659 09cc FFF7FEFF 		bl	oct4_Read
 2660 09d0 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 67


 2661 09d2 002B     		cmp	r3, #0
 2662 09d4 02D0     		beq	.L102
1074:main.c        ****         {
1075:main.c        ****             oct4Up = 1;
 2663              		.loc 1 1075 0
 2664 09d6 B04B     		ldr	r3, .L153
 2665 09d8 0122     		movs	r2, #1
 2666 09da 1A70     		strb	r2, [r3]
 2667              	.L102:
1076:main.c        ****         }
1077:main.c        ****         
1078:main.c        ****         if (!neck1_button_Read())
 2668              		.loc 1 1078 0
 2669 09dc FFF7FEFF 		bl	neck1_button_Read
 2670 09e0 0346     		mov	r3, r0
 2671 09e2 002B     		cmp	r3, #0
 2672 09e4 31D1     		bne	.L103
1079:main.c        ****         {
1080:main.c        ****             currentNeck = 0;
 2673              		.loc 1 1080 0
 2674 09e6 AD4B     		ldr	r3, .L153+4
 2675 09e8 0022     		movs	r2, #0
 2676 09ea 1A60     		str	r2, [r3]
1081:main.c        ****             currentCopedent = necks[currentNeck];
 2677              		.loc 1 1081 0
 2678 09ec AB4B     		ldr	r3, .L153+4
 2679 09ee 1B68     		ldr	r3, [r3]
 2680 09f0 AB4A     		ldr	r2, .L153+8
 2681 09f2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2682 09f4 AB4B     		ldr	r3, .L153+12
 2683 09f6 1A70     		strb	r2, [r3]
1082:main.c        ****             LED_red1_Write(0);
 2684              		.loc 1 1082 0
 2685 09f8 0020     		movs	r0, #0
 2686 09fa FFF7FEFF 		bl	LED_red1_Write
1083:main.c        ****             LED_green2_Write(1);
 2687              		.loc 1 1083 0
 2688 09fe 0120     		movs	r0, #1
 2689 0a00 FFF7FEFF 		bl	LED_green2_Write
1084:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2690              		.loc 1 1084 0
 2691 0a04 A74B     		ldr	r3, .L153+12
 2692 0a06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2693 0a08 1846     		mov	r0, r3
 2694 0a0a 0323     		movs	r3, #3
 2695 0a0c 0022     		movs	r2, #0
 2696 0a0e 0221     		movs	r1, #2
 2697 0a10 FFF7FEFF 		bl	OLEDwriteInt
1085:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2698              		.loc 1 1085 0
 2699 0a14 FFF7FEFF 		bl	OLEDgetCursor
 2700 0a18 0246     		mov	r2, r0
 2701 0a1a 0323     		movs	r3, #3
 2702 0a1c 0121     		movs	r1, #1
 2703 0a1e A248     		ldr	r0, .L153+16
 2704 0a20 FFF7FEFF 		bl	OLEDwriteString
1086:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 68


 2705              		.loc 1 1086 0
 2706 0a24 9F4B     		ldr	r3, .L153+12
 2707 0a26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2708 0a28 1A46     		mov	r2, r3
 2709 0a2a 1346     		mov	r3, r2
 2710 0a2c DB00     		lsls	r3, r3, #3
 2711 0a2e 9B1A     		subs	r3, r3, r2
 2712 0a30 5B00     		lsls	r3, r3, #1
 2713 0a32 9E4A     		ldr	r2, .L153+20
 2714 0a34 9C18     		adds	r4, r3, r2
 2715 0a36 FFF7FEFF 		bl	OLEDgetCursor
 2716 0a3a 0246     		mov	r2, r0
 2717 0a3c 0323     		movs	r3, #3
 2718 0a3e 0E21     		movs	r1, #14
 2719 0a40 2046     		mov	r0, r4
 2720 0a42 FFF7FEFF 		bl	OLEDwriteString
1087:main.c        ****             OLED_draw();
 2721              		.loc 1 1087 0
 2722 0a46 FFF7FEFF 		bl	OLED_draw
 2723              	.L103:
1088:main.c        ****         }
1089:main.c        ****         if (!neck2_button_Read())
 2724              		.loc 1 1089 0
 2725 0a4a FFF7FEFF 		bl	neck2_button_Read
 2726 0a4e 0346     		mov	r3, r0
 2727 0a50 002B     		cmp	r3, #0
 2728 0a52 3AD1     		bne	.L104
1090:main.c        ****         {
1091:main.c        ****             currentNeck = 1;
 2729              		.loc 1 1091 0
 2730 0a54 914B     		ldr	r3, .L153+4
 2731 0a56 0122     		movs	r2, #1
 2732 0a58 1A60     		str	r2, [r3]
1092:main.c        ****             currentCopedent = necks[currentNeck];
 2733              		.loc 1 1092 0
 2734 0a5a 904B     		ldr	r3, .L153+4
 2735 0a5c 1B68     		ldr	r3, [r3]
 2736 0a5e 904A     		ldr	r2, .L153+8
 2737 0a60 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2738 0a62 904B     		ldr	r3, .L153+12
 2739 0a64 1A70     		strb	r2, [r3]
1093:main.c        ****             
1094:main.c        ****             LED_red1_Write(1);
 2740              		.loc 1 1094 0
 2741 0a66 0120     		movs	r0, #1
 2742 0a68 FFF7FEFF 		bl	LED_red1_Write
1095:main.c        ****             LED_green2_Write(0);
 2743              		.loc 1 1095 0
 2744 0a6c 0020     		movs	r0, #0
 2745 0a6e FFF7FEFF 		bl	LED_green2_Write
1096:main.c        ****             EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 2746              		.loc 1 1096 0
 2747 0a72 8C4B     		ldr	r3, .L153+12
 2748 0a74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2749 0a76 894B     		ldr	r3, .L153+4
 2750 0a78 1B68     		ldr	r3, [r3]
 2751 0a7a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 69


 2752 0a7c 1946     		mov	r1, r3
 2753 0a7e 1046     		mov	r0, r2
 2754 0a80 FFF7FEFF 		bl	EEPROM_WriteByte
1097:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2755              		.loc 1 1097 0
 2756 0a84 874B     		ldr	r3, .L153+12
 2757 0a86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2758 0a88 1846     		mov	r0, r3
 2759 0a8a 0323     		movs	r3, #3
 2760 0a8c 0022     		movs	r2, #0
 2761 0a8e 0221     		movs	r1, #2
 2762 0a90 FFF7FEFF 		bl	OLEDwriteInt
1098:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2763              		.loc 1 1098 0
 2764 0a94 FFF7FEFF 		bl	OLEDgetCursor
 2765 0a98 0246     		mov	r2, r0
 2766 0a9a 0323     		movs	r3, #3
 2767 0a9c 0121     		movs	r1, #1
 2768 0a9e 8248     		ldr	r0, .L153+16
 2769 0aa0 FFF7FEFF 		bl	OLEDwriteString
1099:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
 2770              		.loc 1 1099 0
 2771 0aa4 7F4B     		ldr	r3, .L153+12
 2772 0aa6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773 0aa8 1A46     		mov	r2, r3
 2774 0aaa 1346     		mov	r3, r2
 2775 0aac DB00     		lsls	r3, r3, #3
 2776 0aae 9B1A     		subs	r3, r3, r2
 2777 0ab0 5B00     		lsls	r3, r3, #1
 2778 0ab2 7E4A     		ldr	r2, .L153+20
 2779 0ab4 9C18     		adds	r4, r3, r2
 2780 0ab6 FFF7FEFF 		bl	OLEDgetCursor
 2781 0aba 0246     		mov	r2, r0
 2782 0abc 0323     		movs	r3, #3
 2783 0abe 0E21     		movs	r1, #14
 2784 0ac0 2046     		mov	r0, r4
 2785 0ac2 FFF7FEFF 		bl	OLEDwriteString
1100:main.c        ****             OLED_draw();
 2786              		.loc 1 1100 0
 2787 0ac6 FFF7FEFF 		bl	OLED_draw
 2788              	.L104:
1101:main.c        ****         }
1102:main.c        ****         
1103:main.c        ****         if ((!enter_button_Read()) && (enterUp))
 2789              		.loc 1 1103 0
 2790 0aca FFF7FEFF 		bl	enter_button_Read
 2791 0ace 0346     		mov	r3, r0
 2792 0ad0 002B     		cmp	r3, #0
 2793 0ad2 16D1     		bne	.L105
 2794              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2795 0ad4 764B     		ldr	r3, .L153+24
 2796 0ad6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2797 0ad8 002B     		cmp	r3, #0
 2798 0ada 12D0     		beq	.L105
1104:main.c        ****         {
1105:main.c        ****             dualSlider = !dualSlider;
 2799              		.loc 1 1105 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 70


 2800 0adc 754B     		ldr	r3, .L153+28
 2801 0ade 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2802 0ae0 002B     		cmp	r3, #0
 2803 0ae2 0CBF     		ite	eq
 2804 0ae4 0123     		moveq	r3, #1
 2805 0ae6 0023     		movne	r3, #0
 2806 0ae8 DBB2     		uxtb	r3, r3
 2807 0aea 1A46     		mov	r2, r3
 2808 0aec 714B     		ldr	r3, .L153+28
 2809 0aee 1A70     		strb	r2, [r3]
1106:main.c        ****             LED_green1_Write(dualSlider);
 2810              		.loc 1 1106 0
 2811 0af0 704B     		ldr	r3, .L153+28
 2812 0af2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2813 0af4 1846     		mov	r0, r3
 2814 0af6 FFF7FEFF 		bl	LED_green1_Write
1107:main.c        ****             enterUp = 0;
 2815              		.loc 1 1107 0
 2816 0afa 6D4B     		ldr	r3, .L153+24
 2817 0afc 0022     		movs	r2, #0
 2818 0afe 1A70     		strb	r2, [r3]
 2819 0b00 07E0     		b	.L106
 2820              	.L105:
1108:main.c        ****         }
1109:main.c        ****         else if (enter_button_Read())
 2821              		.loc 1 1109 0
 2822 0b02 FFF7FEFF 		bl	enter_button_Read
 2823 0b06 0346     		mov	r3, r0
 2824 0b08 002B     		cmp	r3, #0
 2825 0b0a 02D0     		beq	.L106
1110:main.c        ****         {
1111:main.c        ****             enterUp = 1;
 2826              		.loc 1 1111 0
 2827 0b0c 684B     		ldr	r3, .L153+24
 2828 0b0e 0122     		movs	r2, #1
 2829 0b10 1A70     		strb	r2, [r3]
 2830              	.L106:
1112:main.c        ****         }
1113:main.c        ****         
1114:main.c        ****         
1115:main.c        ****         
1116:main.c        ****         if ((!button1_Read()) && (button1Up))
 2831              		.loc 1 1116 0
 2832 0b12 FFF7FEFF 		bl	button1_Read
 2833 0b16 0346     		mov	r3, r0
 2834 0b18 002B     		cmp	r3, #0
 2835 0b1a 46D1     		bne	.L107
 2836              		.loc 1 1116 0 is_stmt 0 discriminator 1
 2837 0b1c 664B     		ldr	r3, .L153+32
 2838 0b1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2839 0b20 002B     		cmp	r3, #0
 2840 0b22 42D0     		beq	.L107
1117:main.c        ****         {
1118:main.c        ****             currentCopedent -= 1;
 2841              		.loc 1 1118 0 is_stmt 1
 2842 0b24 5F4B     		ldr	r3, .L153+12
 2843 0b26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 71


 2844 0b28 013B     		subs	r3, r3, #1
 2845 0b2a DAB2     		uxtb	r2, r3
 2846 0b2c 5D4B     		ldr	r3, .L153+12
 2847 0b2e 1A70     		strb	r2, [r3]
1119:main.c        ****             currentCopedent &= 31;
 2848              		.loc 1 1119 0
 2849 0b30 5C4B     		ldr	r3, .L153+12
 2850 0b32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2851 0b34 03F01F03 		and	r3, r3, #31
 2852 0b38 DAB2     		uxtb	r2, r3
 2853 0b3a 5A4B     		ldr	r3, .L153+12
 2854 0b3c 1A70     		strb	r2, [r3]
1120:main.c        ****             necks[currentNeck] = currentCopedent;
 2855              		.loc 1 1120 0
 2856 0b3e 574B     		ldr	r3, .L153+4
 2857 0b40 1B68     		ldr	r3, [r3]
 2858 0b42 584A     		ldr	r2, .L153+12
 2859 0b44 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2860 0b46 564A     		ldr	r2, .L153+8
 2861 0b48 D154     		strb	r1, [r2, r3]
1121:main.c        ****             EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 2862              		.loc 1 1121 0
 2863 0b4a 564B     		ldr	r3, .L153+12
 2864 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2865 0b4e 534B     		ldr	r3, .L153+4
 2866 0b50 1B68     		ldr	r3, [r3]
 2867 0b52 9BB2     		uxth	r3, r3
 2868 0b54 1946     		mov	r1, r3
 2869 0b56 1046     		mov	r0, r2
 2870 0b58 FFF7FEFF 		bl	EEPROM_WriteByte
1122:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2871              		.loc 1 1122 0
 2872 0b5c 514B     		ldr	r3, .L153+12
 2873 0b5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2874 0b60 1846     		mov	r0, r3
 2875 0b62 0323     		movs	r3, #3
 2876 0b64 0022     		movs	r2, #0
 2877 0b66 0221     		movs	r1, #2
 2878 0b68 FFF7FEFF 		bl	OLEDwriteInt
1123:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2879              		.loc 1 1123 0
 2880 0b6c FFF7FEFF 		bl	OLEDgetCursor
 2881 0b70 0246     		mov	r2, r0
 2882 0b72 0323     		movs	r3, #3
 2883 0b74 0121     		movs	r1, #1
 2884 0b76 4C48     		ldr	r0, .L153+16
 2885 0b78 FFF7FEFF 		bl	OLEDwriteString
1124:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
 2886              		.loc 1 1124 0
 2887 0b7c 494B     		ldr	r3, .L153+12
 2888 0b7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2889 0b80 1A46     		mov	r2, r3
 2890 0b82 1346     		mov	r3, r2
 2891 0b84 DB00     		lsls	r3, r3, #3
 2892 0b86 9B1A     		subs	r3, r3, r2
 2893 0b88 5B00     		lsls	r3, r3, #1
 2894 0b8a 484A     		ldr	r2, .L153+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 72


 2895 0b8c 9C18     		adds	r4, r3, r2
 2896 0b8e FFF7FEFF 		bl	OLEDgetCursor
 2897 0b92 0246     		mov	r2, r0
 2898 0b94 0323     		movs	r3, #3
 2899 0b96 0E21     		movs	r1, #14
 2900 0b98 2046     		mov	r0, r4
 2901 0b9a FFF7FEFF 		bl	OLEDwriteString
1125:main.c        ****             OLED_draw();
 2902              		.loc 1 1125 0
 2903 0b9e FFF7FEFF 		bl	OLED_draw
1126:main.c        ****             button1Up = 0;
 2904              		.loc 1 1126 0
 2905 0ba2 454B     		ldr	r3, .L153+32
 2906 0ba4 0022     		movs	r2, #0
 2907 0ba6 1A70     		strb	r2, [r3]
 2908 0ba8 07E0     		b	.L108
 2909              	.L107:
1127:main.c        ****         }
1128:main.c        ****         else if (button1_Read())
 2910              		.loc 1 1128 0
 2911 0baa FFF7FEFF 		bl	button1_Read
 2912 0bae 0346     		mov	r3, r0
 2913 0bb0 002B     		cmp	r3, #0
 2914 0bb2 02D0     		beq	.L108
1129:main.c        ****         {
1130:main.c        ****             button1Up = 1;
 2915              		.loc 1 1130 0
 2916 0bb4 404B     		ldr	r3, .L153+32
 2917 0bb6 0122     		movs	r2, #1
 2918 0bb8 1A70     		strb	r2, [r3]
 2919              	.L108:
1131:main.c        ****         }
1132:main.c        ****         
1133:main.c        ****         if ((!button2_Read()) && (button2Up))
 2920              		.loc 1 1133 0
 2921 0bba FFF7FEFF 		bl	button2_Read
 2922 0bbe 0346     		mov	r3, r0
 2923 0bc0 002B     		cmp	r3, #0
 2924 0bc2 46D1     		bne	.L109
 2925              		.loc 1 1133 0 is_stmt 0 discriminator 1
 2926 0bc4 3D4B     		ldr	r3, .L153+36
 2927 0bc6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2928 0bc8 002B     		cmp	r3, #0
 2929 0bca 42D0     		beq	.L109
1134:main.c        ****         {
1135:main.c        ****             currentCopedent += 1;
 2930              		.loc 1 1135 0 is_stmt 1
 2931 0bcc 354B     		ldr	r3, .L153+12
 2932 0bce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2933 0bd0 0133     		adds	r3, r3, #1
 2934 0bd2 DAB2     		uxtb	r2, r3
 2935 0bd4 334B     		ldr	r3, .L153+12
 2936 0bd6 1A70     		strb	r2, [r3]
1136:main.c        ****             currentCopedent &= 31;
 2937              		.loc 1 1136 0
 2938 0bd8 324B     		ldr	r3, .L153+12
 2939 0bda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 73


 2940 0bdc 03F01F03 		and	r3, r3, #31
 2941 0be0 DAB2     		uxtb	r2, r3
 2942 0be2 304B     		ldr	r3, .L153+12
 2943 0be4 1A70     		strb	r2, [r3]
1137:main.c        ****             necks[currentNeck] = currentCopedent;
 2944              		.loc 1 1137 0
 2945 0be6 2D4B     		ldr	r3, .L153+4
 2946 0be8 1B68     		ldr	r3, [r3]
 2947 0bea 2E4A     		ldr	r2, .L153+12
 2948 0bec 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2949 0bee 2C4A     		ldr	r2, .L153+8
 2950 0bf0 D154     		strb	r1, [r2, r3]
1138:main.c        ****             EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 2951              		.loc 1 1138 0
 2952 0bf2 2C4B     		ldr	r3, .L153+12
 2953 0bf4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2954 0bf6 294B     		ldr	r3, .L153+4
 2955 0bf8 1B68     		ldr	r3, [r3]
 2956 0bfa 9BB2     		uxth	r3, r3
 2957 0bfc 1946     		mov	r1, r3
 2958 0bfe 1046     		mov	r0, r2
 2959 0c00 FFF7FEFF 		bl	EEPROM_WriteByte
1139:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2960              		.loc 1 1139 0
 2961 0c04 274B     		ldr	r3, .L153+12
 2962 0c06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2963 0c08 1846     		mov	r0, r3
 2964 0c0a 0323     		movs	r3, #3
 2965 0c0c 0022     		movs	r2, #0
 2966 0c0e 0221     		movs	r1, #2
 2967 0c10 FFF7FEFF 		bl	OLEDwriteInt
1140:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2968              		.loc 1 1140 0
 2969 0c14 FFF7FEFF 		bl	OLEDgetCursor
 2970 0c18 0246     		mov	r2, r0
 2971 0c1a 0323     		movs	r3, #3
 2972 0c1c 0121     		movs	r1, #1
 2973 0c1e 2248     		ldr	r0, .L153+16
 2974 0c20 FFF7FEFF 		bl	OLEDwriteString
1141:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
 2975              		.loc 1 1141 0
 2976 0c24 1F4B     		ldr	r3, .L153+12
 2977 0c26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2978 0c28 1A46     		mov	r2, r3
 2979 0c2a 1346     		mov	r3, r2
 2980 0c2c DB00     		lsls	r3, r3, #3
 2981 0c2e 9B1A     		subs	r3, r3, r2
 2982 0c30 5B00     		lsls	r3, r3, #1
 2983 0c32 1E4A     		ldr	r2, .L153+20
 2984 0c34 9C18     		adds	r4, r3, r2
 2985 0c36 FFF7FEFF 		bl	OLEDgetCursor
 2986 0c3a 0246     		mov	r2, r0
 2987 0c3c 0323     		movs	r3, #3
 2988 0c3e 0E21     		movs	r1, #14
 2989 0c40 2046     		mov	r0, r4
 2990 0c42 FFF7FEFF 		bl	OLEDwriteString
1142:main.c        ****             OLED_draw();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 74


 2991              		.loc 1 1142 0
 2992 0c46 FFF7FEFF 		bl	OLED_draw
1143:main.c        ****             button2Up = 0;
 2993              		.loc 1 1143 0
 2994 0c4a 1C4B     		ldr	r3, .L153+36
 2995 0c4c 0022     		movs	r2, #0
 2996 0c4e 1A70     		strb	r2, [r3]
 2997 0c50 07E0     		b	.L110
 2998              	.L109:
1144:main.c        ****         }
1145:main.c        ****         else if (button2_Read())
 2999              		.loc 1 1145 0
 3000 0c52 FFF7FEFF 		bl	button2_Read
 3001 0c56 0346     		mov	r3, r0
 3002 0c58 002B     		cmp	r3, #0
 3003 0c5a 02D0     		beq	.L110
1146:main.c        ****         {
1147:main.c        ****             button2Up = 1;
 3004              		.loc 1 1147 0
 3005 0c5c 174B     		ldr	r3, .L153+36
 3006 0c5e 0122     		movs	r2, #1
 3007 0c60 1A70     		strb	r2, [r3]
 3008              	.L110:
1148:main.c        ****         }
1149:main.c        ****         
1150:main.c        ****         if ((!button3_Read()) && (button3Up))
 3009              		.loc 1 1150 0
 3010 0c62 FFF7FEFF 		bl	button3_Read
 3011 0c66 0346     		mov	r3, r0
 3012 0c68 002B     		cmp	r3, #0
 3013 0c6a 2DD1     		bne	.L111
 3014              		.loc 1 1150 0 is_stmt 0 discriminator 1
 3015 0c6c 144B     		ldr	r3, .L153+40
 3016 0c6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3017 0c70 002B     		cmp	r3, #0
 3018 0c72 29D0     		beq	.L111
1151:main.c        ****         {
1152:main.c        ****             patchNum -= 1;
 3019              		.loc 1 1152 0 is_stmt 1
 3020 0c74 134B     		ldr	r3, .L153+44
 3021 0c76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3022 0c78 013B     		subs	r3, r3, #1
 3023 0c7a DAB2     		uxtb	r2, r3
 3024 0c7c 114B     		ldr	r3, .L153+44
 3025 0c7e 1A70     		strb	r2, [r3]
1153:main.c        ****             patchNum &= 63;
 3026              		.loc 1 1153 0
 3027 0c80 104B     		ldr	r3, .L153+44
 3028 0c82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3029 0c84 03F03F03 		and	r3, r3, #63
 3030 0c88 DAB2     		uxtb	r2, r3
 3031 0c8a 0E4B     		ldr	r3, .L153+44
 3032 0c8c 1A70     		strb	r2, [r3]
1154:main.c        ****             button3Up = 0;
 3033              		.loc 1 1154 0
 3034 0c8e 0C4B     		ldr	r3, .L153+40
 3035 0c90 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 75


 3036 0c92 1A70     		strb	r2, [r3]
 3037 0c94 20E0     		b	.L112
 3038              	.L154:
 3039 0c96 00BF     		.align	2
 3040              	.L153:
 3041 0c98 00000000 		.word	oct4Up
 3042 0c9c 00000000 		.word	currentNeck
 3043 0ca0 00000000 		.word	necks
 3044 0ca4 00000000 		.word	currentCopedent
 3045 0ca8 00040000 		.word	.LC0
 3046 0cac 00000000 		.word	copedentNamesArray
 3047 0cb0 00000000 		.word	enterUp
 3048 0cb4 00000000 		.word	dualSlider
 3049 0cb8 00000000 		.word	button1Up
 3050 0cbc 00000000 		.word	button2Up
 3051 0cc0 00000000 		.word	button3Up
 3052 0cc4 00000000 		.word	patchNum
 3053              	.L111:
1155:main.c        ****         }
1156:main.c        ****         else if (button3_Read())
 3054              		.loc 1 1156 0
 3055 0cc8 FFF7FEFF 		bl	button3_Read
 3056 0ccc 0346     		mov	r3, r0
 3057 0cce 002B     		cmp	r3, #0
 3058 0cd0 02D0     		beq	.L112
1157:main.c        ****         {
1158:main.c        ****             button3Up = 1;
 3059              		.loc 1 1158 0
 3060 0cd2 514B     		ldr	r3, .L155
 3061 0cd4 0122     		movs	r2, #1
 3062 0cd6 1A70     		strb	r2, [r3]
 3063              	.L112:
1159:main.c        ****         }
1160:main.c        ****         
1161:main.c        ****         if ((!button4_Read()) && (button4Up))
 3064              		.loc 1 1161 0
 3065 0cd8 FFF7FEFF 		bl	button4_Read
 3066 0cdc 0346     		mov	r3, r0
 3067 0cde 002B     		cmp	r3, #0
 3068 0ce0 14D1     		bne	.L113
 3069              		.loc 1 1161 0 is_stmt 0 discriminator 1
 3070 0ce2 4E4B     		ldr	r3, .L155+4
 3071 0ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3072 0ce6 002B     		cmp	r3, #0
 3073 0ce8 10D0     		beq	.L113
1162:main.c        ****         {
1163:main.c        ****             patchNum += 1;
 3074              		.loc 1 1163 0 is_stmt 1
 3075 0cea 4D4B     		ldr	r3, .L155+8
 3076 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3077 0cee 0133     		adds	r3, r3, #1
 3078 0cf0 DAB2     		uxtb	r2, r3
 3079 0cf2 4B4B     		ldr	r3, .L155+8
 3080 0cf4 1A70     		strb	r2, [r3]
1164:main.c        ****             patchNum &= 63;
 3081              		.loc 1 1164 0
 3082 0cf6 4A4B     		ldr	r3, .L155+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 76


 3083 0cf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3084 0cfa 03F03F03 		and	r3, r3, #63
 3085 0cfe DAB2     		uxtb	r2, r3
 3086 0d00 474B     		ldr	r3, .L155+8
 3087 0d02 1A70     		strb	r2, [r3]
1165:main.c        ****             button4Up = 0;
 3088              		.loc 1 1165 0
 3089 0d04 454B     		ldr	r3, .L155+4
 3090 0d06 0022     		movs	r2, #0
 3091 0d08 1A70     		strb	r2, [r3]
 3092 0d0a 07E0     		b	.L114
 3093              	.L113:
1166:main.c        ****         }
1167:main.c        ****         else if (button4_Read())
 3094              		.loc 1 1167 0
 3095 0d0c FFF7FEFF 		bl	button4_Read
 3096 0d10 0346     		mov	r3, r0
 3097 0d12 002B     		cmp	r3, #0
 3098 0d14 02D0     		beq	.L114
1168:main.c        ****         {
1169:main.c        ****             button4Up = 1;
 3099              		.loc 1 1169 0
 3100 0d16 414B     		ldr	r3, .L155+4
 3101 0d18 0122     		movs	r2, #1
 3102 0d1a 1A70     		strb	r2, [r3]
 3103              	.L114:
1170:main.c        ****         }
1171:main.c        ****         
1172:main.c        ****         if ((!edit_button_Read()) && (editUp))
 3104              		.loc 1 1172 0
 3105 0d1c FFF7FEFF 		bl	edit_button_Read
 3106 0d20 0346     		mov	r3, r0
 3107 0d22 002B     		cmp	r3, #0
 3108 0d24 16D1     		bne	.L115
 3109              		.loc 1 1172 0 is_stmt 0 discriminator 1
 3110 0d26 3F4B     		ldr	r3, .L155+12
 3111 0d28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3112 0d2a 002B     		cmp	r3, #0
 3113 0d2c 12D0     		beq	.L115
1173:main.c        ****         {
1174:main.c        ****             voice = !voice;
 3114              		.loc 1 1174 0 is_stmt 1
 3115 0d2e 3E4B     		ldr	r3, .L155+16
 3116 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3117 0d32 002B     		cmp	r3, #0
 3118 0d34 0CBF     		ite	eq
 3119 0d36 0123     		moveq	r3, #1
 3120 0d38 0023     		movne	r3, #0
 3121 0d3a DBB2     		uxtb	r3, r3
 3122 0d3c 1A46     		mov	r2, r3
 3123 0d3e 3A4B     		ldr	r3, .L155+16
 3124 0d40 1A70     		strb	r2, [r3]
1175:main.c        ****             LED_red2_Write(voice);
 3125              		.loc 1 1175 0
 3126 0d42 394B     		ldr	r3, .L155+16
 3127 0d44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3128 0d46 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 77


 3129 0d48 FFF7FEFF 		bl	LED_red2_Write
1176:main.c        ****             editUp = 0;
 3130              		.loc 1 1176 0
 3131 0d4c 354B     		ldr	r3, .L155+12
 3132 0d4e 0022     		movs	r2, #0
 3133 0d50 1A70     		strb	r2, [r3]
 3134 0d52 07E0     		b	.L116
 3135              	.L115:
1177:main.c        ****         }
1178:main.c        ****         else if (edit_button_Read())
 3136              		.loc 1 1178 0
 3137 0d54 FFF7FEFF 		bl	edit_button_Read
 3138 0d58 0346     		mov	r3, r0
 3139 0d5a 002B     		cmp	r3, #0
 3140 0d5c 02D0     		beq	.L116
1179:main.c        ****         {
1180:main.c        ****             editUp = 1;
 3141              		.loc 1 1180 0
 3142 0d5e 314B     		ldr	r3, .L155+12
 3143 0d60 0122     		movs	r2, #1
 3144 0d62 1A70     		strb	r2, [r3]
 3145              	.L116:
1181:main.c        ****         }
1182:main.c        ****         
1183:main.c        ****         if (octave != prevOctave)
1184:main.c        ****         {
1185:main.c        ****             //sendMIDIControlChange(90, octave);
1186:main.c        ****         }
1187:main.c        ****         prevOctave = octave;
 3146              		.loc 1 1187 0
 3147 0d64 314B     		ldr	r3, .L155+20
 3148 0d66 1B68     		ldr	r3, [r3]
 3149 0d68 314A     		ldr	r2, .L155+24
 3150 0d6a 1360     		str	r3, [r2]
 3151              	.LBB15:
1188:main.c        ****         
1189:main.c        ****         
1190:main.c        ****         for (int i=  0; i < 4; i++)
 3152              		.loc 1 1190 0
 3153 0d6c 0023     		movs	r3, #0
 3154 0d6e 3B64     		str	r3, [r7, #64]
 3155 0d70 4BE0     		b	.L117
 3156              	.L121:
1191:main.c        ****         {
1192:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)/32);
 3157              		.loc 1 1192 0
 3158 0d72 3B6C     		ldr	r3, [r7, #64]
 3159 0d74 9BB2     		uxth	r3, r3
 3160 0d76 1846     		mov	r0, r3
 3161 0d78 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 3162 0d7c 0346     		mov	r3, r0
 3163 0d7e 002B     		cmp	r3, #0
 3164 0d80 00DA     		bge	.L118
 3165 0d82 1F33     		adds	r3, r3, #31
 3166              	.L118:
 3167 0d84 5B11     		asrs	r3, r3, #5
 3168 0d86 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 78


 3169 0d88 D9B2     		uxtb	r1, r3
 3170 0d8a 2A4A     		ldr	r2, .L155+28
 3171 0d8c 3B6C     		ldr	r3, [r7, #64]
 3172 0d8e 1344     		add	r3, r3, r2
 3173 0d90 0A46     		mov	r2, r1
 3174 0d92 1A70     		strb	r2, [r3]
1193:main.c        ****             if (i != 1)
 3175              		.loc 1 1193 0
 3176 0d94 3B6C     		ldr	r3, [r7, #64]
 3177 0d96 012B     		cmp	r3, #1
 3178 0d98 16D0     		beq	.L119
1194:main.c        ****             {
1195:main.c        ****                 knobs[i] = 127.0f - knobs[i];
 3179              		.loc 1 1195 0
 3180 0d9a 264A     		ldr	r2, .L155+28
 3181 0d9c 3B6C     		ldr	r3, [r7, #64]
 3182 0d9e 1344     		add	r3, r3, r2
 3183 0da0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3184 0da2 1846     		mov	r0, r3
 3185 0da4 FFF7FEFF 		bl	__aeabi_i2f
 3186 0da8 0346     		mov	r3, r0
 3187 0daa 1946     		mov	r1, r3
 3188 0dac 2248     		ldr	r0, .L155+32
 3189 0dae FFF7FEFF 		bl	__aeabi_fsub
 3190 0db2 0346     		mov	r3, r0
 3191 0db4 1846     		mov	r0, r3
 3192 0db6 FFF7FEFF 		bl	__aeabi_f2uiz
 3193 0dba 0346     		mov	r3, r0
 3194 0dbc D9B2     		uxtb	r1, r3
 3195 0dbe 1D4A     		ldr	r2, .L155+28
 3196 0dc0 3B6C     		ldr	r3, [r7, #64]
 3197 0dc2 1344     		add	r3, r3, r2
 3198 0dc4 0A46     		mov	r2, r1
 3199 0dc6 1A70     		strb	r2, [r3]
 3200              	.L119:
1196:main.c        ****             }
1197:main.c        ****             if (knobs[i] != prevKnobs[i])
 3201              		.loc 1 1197 0
 3202 0dc8 1A4A     		ldr	r2, .L155+28
 3203 0dca 3B6C     		ldr	r3, [r7, #64]
 3204 0dcc 1344     		add	r3, r3, r2
 3205 0dce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3206 0dd0 1A49     		ldr	r1, .L155+36
 3207 0dd2 3B6C     		ldr	r3, [r7, #64]
 3208 0dd4 0B44     		add	r3, r3, r1
 3209 0dd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3210 0dd8 9A42     		cmp	r2, r3
 3211 0dda 0AD0     		beq	.L120
1198:main.c        ****             {
1199:main.c        ****                 sendMIDIControlChange(i+17, knobs[i], 0);
 3212              		.loc 1 1199 0
 3213 0ddc 3B6C     		ldr	r3, [r7, #64]
 3214 0dde 03F11100 		add	r0, r3, #17
 3215 0de2 144A     		ldr	r2, .L155+28
 3216 0de4 3B6C     		ldr	r3, [r7, #64]
 3217 0de6 1344     		add	r3, r3, r2
 3218 0de8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 79


 3219 0dea 0022     		movs	r2, #0
 3220 0dec 1946     		mov	r1, r3
 3221 0dee FFF7FEFF 		bl	sendMIDIControlChange
 3222              	.L120:
1200:main.c        ****             }
1201:main.c        ****             prevKnobs[i] = knobs[i];
 3223              		.loc 1 1201 0 discriminator 2
 3224 0df2 104A     		ldr	r2, .L155+28
 3225 0df4 3B6C     		ldr	r3, [r7, #64]
 3226 0df6 1344     		add	r3, r3, r2
 3227 0df8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3228 0dfa 104A     		ldr	r2, .L155+36
 3229 0dfc 3B6C     		ldr	r3, [r7, #64]
 3230 0dfe 1344     		add	r3, r3, r2
 3231 0e00 0A46     		mov	r2, r1
 3232 0e02 1A70     		strb	r2, [r3]
1190:main.c        ****         {
 3233              		.loc 1 1190 0 discriminator 2
 3234 0e04 3B6C     		ldr	r3, [r7, #64]
 3235 0e06 0133     		adds	r3, r3, #1
 3236 0e08 3B64     		str	r3, [r7, #64]
 3237              	.L117:
1190:main.c        ****         {
 3238              		.loc 1 1190 0 is_stmt 0 discriminator 1
 3239 0e0a 3B6C     		ldr	r3, [r7, #64]
 3240 0e0c 032B     		cmp	r3, #3
 3241 0e0e B0DD     		ble	.L121
 3242              	.LBE15:
 3243              	.LBB16:
1202:main.c        ****         }
1203:main.c        ****         
1204:main.c        ****        
1205:main.c        ****         //calculate the pitch of each string based on the current Copedent
1206:main.c        ****         for (int i = 0; i < numStrings; i++)
 3244              		.loc 1 1206 0 is_stmt 1
 3245 0e10 0023     		movs	r3, #0
 3246 0e12 FB63     		str	r3, [r7, #60]
 3247 0e14 9DE1     		b	.L122
 3248              	.L156:
 3249 0e16 00BF     		.align	2
 3250              	.L155:
 3251 0e18 00000000 		.word	button3Up
 3252 0e1c 00000000 		.word	button4Up
 3253 0e20 00000000 		.word	patchNum
 3254 0e24 00000000 		.word	editUp
 3255 0e28 00000000 		.word	voice
 3256 0e2c 00000000 		.word	octave
 3257 0e30 00000000 		.word	prevOctave
 3258 0e34 00000000 		.word	knobs
 3259 0e38 0000FE42 		.word	1123942400
 3260 0e3c 00000000 		.word	prevKnobs
 3261              	.L127:
 3262              	.LBB17:
1207:main.c        ****     	{
1208:main.c        ****     		//interpolate ratios for each of the strings
1209:main.c        ****            /*
1210:main.c        ****             float myMappedPos;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 80


1211:main.c        ****             if (dualSlider)
1212:main.c        ****             {
1213:main.c        ****                myMappedPos = LEAF_interpolation_linear(stringMappedPositions[0], stringMappedPositi
1214:main.c        ****             }
1215:main.c        ****             else
1216:main.c        ****             {
1217:main.c        ****                 myMappedPos = stringMappedPositions[0];
1218:main.c        ****             }
1219:main.c        **** 
1220:main.c        ****     		stringOctave[i] = powf(2.0f,octave);
1221:main.c        ****             */
1222:main.c        ****     		//then apply those ratios to the fundamental frequencies
1223:main.c        ****     		float tempMIDI = (copedent[currentNeck][0][i] +
 3263              		.loc 1 1223 0
 3264 0e40 A94B     		ldr	r3, .L157
 3265 0e42 1A68     		ldr	r2, [r3]
 3266 0e44 A949     		ldr	r1, .L157+4
 3267 0e46 1346     		mov	r3, r2
 3268 0e48 5B01     		lsls	r3, r3, #5
 3269 0e4a 1344     		add	r3, r3, r2
 3270 0e4c 9B00     		lsls	r3, r3, #2
 3271 0e4e FA6B     		ldr	r2, [r7, #60]
 3272 0e50 1344     		add	r3, r3, r2
 3273 0e52 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1224:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 3274              		.loc 1 1224 0
 3275 0e56 A64B     		ldr	r3, .L157+8
 3276 0e58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3277 0e5a 1A46     		mov	r2, r3
 3278 0e5c A349     		ldr	r1, .L157+4
 3279 0e5e 1346     		mov	r3, r2
 3280 0e60 5B01     		lsls	r3, r3, #5
 3281 0e62 1344     		add	r3, r3, r2
 3282 0e64 9B00     		lsls	r3, r3, #2
 3283 0e66 FA6B     		ldr	r2, [r7, #60]
 3284 0e68 1344     		add	r3, r3, r2
 3285 0e6a 3033     		adds	r3, r3, #48
 3286 0e6c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3287 0e70 A04B     		ldr	r3, .L157+12
 3288 0e72 1B68     		ldr	r3, [r3]	@ float
 3289 0e74 1946     		mov	r1, r3
 3290 0e76 1046     		mov	r0, r2
 3291 0e78 FFF7FEFF 		bl	__aeabi_fmul
 3292 0e7c 0346     		mov	r3, r0
1223:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 3293              		.loc 1 1223 0
 3294 0e7e 1946     		mov	r1, r3
 3295 0e80 2046     		mov	r0, r4
 3296 0e82 FFF7FEFF 		bl	__aeabi_fadd
 3297 0e86 0346     		mov	r3, r0
 3298 0e88 1C46     		mov	r4, r3
1225:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 3299              		.loc 1 1225 0
 3300 0e8a 994B     		ldr	r3, .L157+8
 3301 0e8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3302 0e8e 1A46     		mov	r2, r3
 3303 0e90 9649     		ldr	r1, .L157+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 81


 3304 0e92 1346     		mov	r3, r2
 3305 0e94 5B01     		lsls	r3, r3, #5
 3306 0e96 1344     		add	r3, r3, r2
 3307 0e98 9B00     		lsls	r3, r3, #2
 3308 0e9a FA6B     		ldr	r2, [r7, #60]
 3309 0e9c 1344     		add	r3, r3, r2
 3310 0e9e 3C33     		adds	r3, r3, #60
 3311 0ea0 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3312 0ea4 934B     		ldr	r3, .L157+12
 3313 0ea6 5B68     		ldr	r3, [r3, #4]	@ float
 3314 0ea8 1946     		mov	r1, r3
 3315 0eaa 1046     		mov	r0, r2
 3316 0eac FFF7FEFF 		bl	__aeabi_fmul
 3317 0eb0 0346     		mov	r3, r0
1224:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 3318              		.loc 1 1224 0
 3319 0eb2 1946     		mov	r1, r3
 3320 0eb4 2046     		mov	r0, r4
 3321 0eb6 FFF7FEFF 		bl	__aeabi_fadd
 3322 0eba 0346     		mov	r3, r0
 3323 0ebc 1C46     		mov	r4, r3
1226:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 3324              		.loc 1 1226 0
 3325 0ebe 8C4B     		ldr	r3, .L157+8
 3326 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3327 0ec2 1A46     		mov	r2, r3
 3328 0ec4 8949     		ldr	r1, .L157+4
 3329 0ec6 1346     		mov	r3, r2
 3330 0ec8 5B01     		lsls	r3, r3, #5
 3331 0eca 1344     		add	r3, r3, r2
 3332 0ecc 9B00     		lsls	r3, r3, #2
 3333 0ece FA6B     		ldr	r2, [r7, #60]
 3334 0ed0 1344     		add	r3, r3, r2
 3335 0ed2 4833     		adds	r3, r3, #72
 3336 0ed4 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3337 0ed8 864B     		ldr	r3, .L157+12
 3338 0eda 9B68     		ldr	r3, [r3, #8]	@ float
 3339 0edc 1946     		mov	r1, r3
 3340 0ede 1046     		mov	r0, r2
 3341 0ee0 FFF7FEFF 		bl	__aeabi_fmul
 3342 0ee4 0346     		mov	r3, r0
1225:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 3343              		.loc 1 1225 0
 3344 0ee6 1946     		mov	r1, r3
 3345 0ee8 2046     		mov	r0, r4
 3346 0eea FFF7FEFF 		bl	__aeabi_fadd
 3347 0eee 0346     		mov	r3, r0
 3348 0ef0 1C46     		mov	r4, r3
1227:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 3349              		.loc 1 1227 0
 3350 0ef2 7F4B     		ldr	r3, .L157+8
 3351 0ef4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3352 0ef6 1A46     		mov	r2, r3
 3353 0ef8 7C49     		ldr	r1, .L157+4
 3354 0efa 1346     		mov	r3, r2
 3355 0efc 5B01     		lsls	r3, r3, #5
 3356 0efe 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 82


 3357 0f00 9B00     		lsls	r3, r3, #2
 3358 0f02 FA6B     		ldr	r2, [r7, #60]
 3359 0f04 1344     		add	r3, r3, r2
 3360 0f06 5433     		adds	r3, r3, #84
 3361 0f08 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3362 0f0c 794B     		ldr	r3, .L157+12
 3363 0f0e DB68     		ldr	r3, [r3, #12]	@ float
 3364 0f10 1946     		mov	r1, r3
 3365 0f12 1046     		mov	r0, r2
 3366 0f14 FFF7FEFF 		bl	__aeabi_fmul
 3367 0f18 0346     		mov	r3, r0
1226:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 3368              		.loc 1 1226 0
 3369 0f1a 1946     		mov	r1, r3
 3370 0f1c 2046     		mov	r0, r4
 3371 0f1e FFF7FEFF 		bl	__aeabi_fadd
 3372 0f22 0346     		mov	r3, r0
 3373 0f24 1C46     		mov	r4, r3
1228:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 3374              		.loc 1 1228 0
 3375 0f26 724B     		ldr	r3, .L157+8
 3376 0f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3377 0f2a 1A46     		mov	r2, r3
 3378 0f2c 6F49     		ldr	r1, .L157+4
 3379 0f2e 1346     		mov	r3, r2
 3380 0f30 5B01     		lsls	r3, r3, #5
 3381 0f32 1344     		add	r3, r3, r2
 3382 0f34 9B00     		lsls	r3, r3, #2
 3383 0f36 FA6B     		ldr	r2, [r7, #60]
 3384 0f38 1344     		add	r3, r3, r2
 3385 0f3a 6033     		adds	r3, r3, #96
 3386 0f3c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3387 0f40 6C4B     		ldr	r3, .L157+12
 3388 0f42 1B69     		ldr	r3, [r3, #16]	@ float
 3389 0f44 1946     		mov	r1, r3
 3390 0f46 1046     		mov	r0, r2
 3391 0f48 FFF7FEFF 		bl	__aeabi_fmul
 3392 0f4c 0346     		mov	r3, r0
1227:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 3393              		.loc 1 1227 0
 3394 0f4e 1946     		mov	r1, r3
 3395 0f50 2046     		mov	r0, r4
 3396 0f52 FFF7FEFF 		bl	__aeabi_fadd
 3397 0f56 0346     		mov	r3, r0
 3398 0f58 1C46     		mov	r4, r3
1229:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 3399              		.loc 1 1229 0
 3400 0f5a 654B     		ldr	r3, .L157+8
 3401 0f5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3402 0f5e 1A46     		mov	r2, r3
 3403 0f60 6249     		ldr	r1, .L157+4
 3404 0f62 1346     		mov	r3, r2
 3405 0f64 5B01     		lsls	r3, r3, #5
 3406 0f66 1344     		add	r3, r3, r2
 3407 0f68 9B00     		lsls	r3, r3, #2
 3408 0f6a FA6B     		ldr	r2, [r7, #60]
 3409 0f6c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 83


 3410 0f6e 7833     		adds	r3, r3, #120
 3411 0f70 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3412 0f74 5F4B     		ldr	r3, .L157+12
 3413 0f76 5B69     		ldr	r3, [r3, #20]	@ float
 3414 0f78 1946     		mov	r1, r3
 3415 0f7a 1046     		mov	r0, r2
 3416 0f7c FFF7FEFF 		bl	__aeabi_fmul
 3417 0f80 0346     		mov	r3, r0
1228:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 3418              		.loc 1 1228 0
 3419 0f82 1946     		mov	r1, r3
 3420 0f84 2046     		mov	r0, r4
 3421 0f86 FFF7FEFF 		bl	__aeabi_fadd
 3422 0f8a 0346     		mov	r3, r0
 3423 0f8c 1C46     		mov	r4, r3
1230:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 3424              		.loc 1 1230 0
 3425 0f8e 584B     		ldr	r3, .L157+8
 3426 0f90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3427 0f92 1A46     		mov	r2, r3
 3428 0f94 5549     		ldr	r1, .L157+4
 3429 0f96 1346     		mov	r3, r2
 3430 0f98 5B01     		lsls	r3, r3, #5
 3431 0f9a 1344     		add	r3, r3, r2
 3432 0f9c 9B00     		lsls	r3, r3, #2
 3433 0f9e FA6B     		ldr	r2, [r7, #60]
 3434 0fa0 1344     		add	r3, r3, r2
 3435 0fa2 6C33     		adds	r3, r3, #108
 3436 0fa4 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3437 0fa8 524B     		ldr	r3, .L157+12
 3438 0faa 9B69     		ldr	r3, [r3, #24]	@ float
 3439 0fac 1946     		mov	r1, r3
 3440 0fae 1046     		mov	r0, r2
 3441 0fb0 FFF7FEFF 		bl	__aeabi_fmul
 3442 0fb4 0346     		mov	r3, r0
1229:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 3443              		.loc 1 1229 0
 3444 0fb6 1946     		mov	r1, r3
 3445 0fb8 2046     		mov	r0, r4
 3446 0fba FFF7FEFF 		bl	__aeabi_fadd
 3447 0fbe 0346     		mov	r3, r0
 3448 0fc0 1C46     		mov	r4, r3
1231:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 3449              		.loc 1 1231 0
 3450 0fc2 4B4B     		ldr	r3, .L157+8
 3451 0fc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3452 0fc6 1A46     		mov	r2, r3
 3453 0fc8 4849     		ldr	r1, .L157+4
 3454 0fca 1346     		mov	r3, r2
 3455 0fcc 5B01     		lsls	r3, r3, #5
 3456 0fce 1344     		add	r3, r3, r2
 3457 0fd0 9B00     		lsls	r3, r3, #2
 3458 0fd2 FA6B     		ldr	r2, [r7, #60]
 3459 0fd4 1344     		add	r3, r3, r2
 3460 0fd6 2433     		adds	r3, r3, #36
 3461 0fd8 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3462 0fdc 454B     		ldr	r3, .L157+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 84


 3463 0fde DB69     		ldr	r3, [r3, #28]	@ float
 3464 0fe0 1946     		mov	r1, r3
 3465 0fe2 1046     		mov	r0, r2
 3466 0fe4 FFF7FEFF 		bl	__aeabi_fmul
 3467 0fe8 0346     		mov	r3, r0
1230:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 3468              		.loc 1 1230 0
 3469 0fea 1946     		mov	r1, r3
 3470 0fec 2046     		mov	r0, r4
 3471 0fee FFF7FEFF 		bl	__aeabi_fadd
 3472 0ff2 0346     		mov	r3, r0
 3473 0ff4 1C46     		mov	r4, r3
1232:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 3474              		.loc 1 1232 0
 3475 0ff6 3E4B     		ldr	r3, .L157+8
 3476 0ff8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3477 0ffa 1A46     		mov	r2, r3
 3478 0ffc 3B49     		ldr	r1, .L157+4
 3479 0ffe 1346     		mov	r3, r2
 3480 1000 5B01     		lsls	r3, r3, #5
 3481 1002 1344     		add	r3, r3, r2
 3482 1004 9B00     		lsls	r3, r3, #2
 3483 1006 FA6B     		ldr	r2, [r7, #60]
 3484 1008 1344     		add	r3, r3, r2
 3485 100a 0C33     		adds	r3, r3, #12
 3486 100c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3487 1010 384B     		ldr	r3, .L157+12
 3488 1012 1B6A     		ldr	r3, [r3, #32]	@ float
 3489 1014 1946     		mov	r1, r3
 3490 1016 1046     		mov	r0, r2
 3491 1018 FFF7FEFF 		bl	__aeabi_fmul
 3492 101c 0346     		mov	r3, r0
1231:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 3493              		.loc 1 1231 0
 3494 101e 1946     		mov	r1, r3
 3495 1020 2046     		mov	r0, r4
 3496 1022 FFF7FEFF 		bl	__aeabi_fadd
 3497 1026 0346     		mov	r3, r0
 3498 1028 1C46     		mov	r4, r3
1233:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9]));
 3499              		.loc 1 1233 0
 3500 102a 314B     		ldr	r3, .L157+8
 3501 102c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3502 102e 1A46     		mov	r2, r3
 3503 1030 2E49     		ldr	r1, .L157+4
 3504 1032 1346     		mov	r3, r2
 3505 1034 5B01     		lsls	r3, r3, #5
 3506 1036 1344     		add	r3, r3, r2
 3507 1038 9B00     		lsls	r3, r3, #2
 3508 103a FA6B     		ldr	r2, [r7, #60]
 3509 103c 1344     		add	r3, r3, r2
 3510 103e 1833     		adds	r3, r3, #24
 3511 1040 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3512 1044 2B4B     		ldr	r3, .L157+12
 3513 1046 5B6A     		ldr	r3, [r3, #36]	@ float
 3514 1048 1946     		mov	r1, r3
 3515 104a 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 85


 3516 104c FFF7FEFF 		bl	__aeabi_fmul
 3517 1050 0346     		mov	r3, r0
1223:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 3518              		.loc 1 1223 0
 3519 1052 1946     		mov	r1, r3
 3520 1054 2046     		mov	r0, r4
 3521 1056 FFF7FEFF 		bl	__aeabi_fadd
 3522 105a 0346     		mov	r3, r0
 3523 105c BB61     		str	r3, [r7, #24]	@ float
1234:main.c        **** 
1235:main.c        ****             
1236:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 3524              		.loc 1 1236 0
 3525 105e 244B     		ldr	r3, .L157+8
 3526 1060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3527 1062 1A46     		mov	r2, r3
 3528 1064 2149     		ldr	r1, .L157+4
 3529 1066 1346     		mov	r3, r2
 3530 1068 5B01     		lsls	r3, r3, #5
 3531 106a 1344     		add	r3, r3, r2
 3532 106c 9B00     		lsls	r3, r3, #2
 3533 106e FA6B     		ldr	r2, [r7, #60]
 3534 1070 1344     		add	r3, r3, r2
 3535 1072 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 3536 1076 7B61     		str	r3, [r7, #20]	@ float
1237:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 3537              		.loc 1 1237 0
 3538 1078 7869     		ldr	r0, [r7, #20]	@ float
 3539 107a FFF7FEFF 		bl	__aeabi_f2iz
 3540 107e 0146     		mov	r1, r0
 3541 1080 1D4A     		ldr	r2, .L157+16
 3542 1082 FB6B     		ldr	r3, [r7, #60]
 3543 1084 42F82310 		str	r1, [r2, r3, lsl #2]
1238:main.c        ****             
1239:main.c        ****             float barMIDI = ftom((invStringMappedPositions[0]) * mtof(tempMIDI));
 3544              		.loc 1 1239 0
 3545 1088 1C4B     		ldr	r3, .L157+20
 3546 108a 1C68     		ldr	r4, [r3]	@ float
 3547 108c B869     		ldr	r0, [r7, #24]	@ float
 3548 108e FFF7FEFF 		bl	mtof
 3549 1092 0346     		mov	r3, r0
 3550 1094 1946     		mov	r1, r3
 3551 1096 2046     		mov	r0, r4
 3552 1098 FFF7FEFF 		bl	__aeabi_fmul
 3553 109c 0346     		mov	r3, r0
 3554 109e 1846     		mov	r0, r3
 3555 10a0 FFF7FEFF 		bl	ftom
 3556 10a4 3861     		str	r0, [r7, #16]	@ float
1240:main.c        ****             
1241:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
 3557              		.loc 1 1241 0
 3558 10a6 144A     		ldr	r2, .L157+16
 3559 10a8 FB6B     		ldr	r3, [r7, #60]
 3560 10aa 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3561 10ae 1846     		mov	r0, r3
 3562 10b0 FFF7FEFF 		bl	__aeabi_i2f
 3563 10b4 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 86


 3564 10b6 1946     		mov	r1, r3
 3565 10b8 3869     		ldr	r0, [r7, #16]	@ float
 3566 10ba FFF7FEFF 		bl	__aeabi_fsub
 3567 10be 0346     		mov	r3, r0
 3568 10c0 FB60     		str	r3, [r7, #12]	@ float
1242:main.c        ****             
1243:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 3569              		.loc 1 1243 0
 3570 10c2 0F49     		ldr	r1, .L157+24
 3571 10c4 F868     		ldr	r0, [r7, #12]	@ float
 3572 10c6 FFF7FEFF 		bl	__aeabi_fmul
 3573 10ca 0346     		mov	r3, r0
 3574 10cc 4FF08C41 		mov	r1, #1174405120
 3575 10d0 1846     		mov	r0, r3
 3576 10d2 FFF7FEFF 		bl	__aeabi_fadd
 3577 10d6 0346     		mov	r3, r0
 3578 10d8 BB60     		str	r3, [r7, #8]	@ float
1244:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
 3579              		.loc 1 1244 0
 3580 10da 0A4A     		ldr	r2, .L157+28
 3581 10dc FB6B     		ldr	r3, [r7, #60]
 3582 10de 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3583 10e2 B968     		ldr	r1, [r7, #8]	@ float
 3584 10e4 1846     		mov	r0, r3
 3585 10e6 0FE0     		b	.L158
 3586              	.L159:
 3587              		.align	2
 3588              	.L157:
 3589 10e8 00000000 		.word	currentNeck
 3590 10ec 00000000 		.word	copedent
 3591 10f0 00000000 		.word	currentCopedent
 3592 10f4 00000000 		.word	pedals_float
 3593 10f8 00000000 		.word	openStringMIDI_Int
 3594 10fc 00000000 		.word	invStringMappedPositions
 3595 1100 ABAA2A43 		.word	1126869675
 3596 1104 00000000 		.word	prevStringPitchBend
 3597              	.L158:
 3598 1108 FFF7FEFF 		bl	__aeabi_fcmpeq
 3599 110c 0346     		mov	r3, r0
 3600 110e 002B     		cmp	r3, #0
 3601 1110 0AD1     		bne	.L123
1245:main.c        ****             {
1246:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 3602              		.loc 1 1246 0
 3603 1112 B868     		ldr	r0, [r7, #8]	@ float
 3604 1114 FFF7FEFF 		bl	__aeabi_f2uiz
 3605 1118 0346     		mov	r3, r0
 3606 111a 1A46     		mov	r2, r3
 3607 111c FB6B     		ldr	r3, [r7, #60]
 3608 111e 0133     		adds	r3, r3, #1
 3609 1120 1946     		mov	r1, r3
 3610 1122 1046     		mov	r0, r2
 3611 1124 FFF7FEFF 		bl	sendMIDIPitchBend
 3612              	.L123:
1247:main.c        ****             }
1248:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 3613              		.loc 1 1248 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 87


 3614 1128 6649     		ldr	r1, .L160
 3615 112a FB6B     		ldr	r3, [r7, #60]
 3616 112c BA68     		ldr	r2, [r7, #8]	@ float
 3617 112e 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1249:main.c        ****             if (tempMIDI > 0.0f)
 3618              		.loc 1 1249 0
 3619 1132 4FF00001 		mov	r1, #0
 3620 1136 B869     		ldr	r0, [r7, #24]	@ float
 3621 1138 FFF7FEFF 		bl	__aeabi_fcmpgt
 3622 113c 0346     		mov	r3, r0
 3623 113e 002B     		cmp	r3, #0
 3624 1140 04D0     		beq	.L125
1250:main.c        ****             {
1251:main.c        ****                 stringMIDI[i] = tempMIDI;
 3625              		.loc 1 1251 0
 3626 1142 6149     		ldr	r1, .L160+4
 3627 1144 FB6B     		ldr	r3, [r7, #60]
 3628 1146 BA69     		ldr	r2, [r7, #24]	@ float
 3629 1148 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 3630              	.L125:
 3631              	.LBE17:
1206:main.c        ****     	{
 3632              		.loc 1 1206 0 discriminator 2
 3633 114c FB6B     		ldr	r3, [r7, #60]
 3634 114e 0133     		adds	r3, r3, #1
 3635 1150 FB63     		str	r3, [r7, #60]
 3636              	.L122:
1206:main.c        ****     	{
 3637              		.loc 1 1206 0 is_stmt 0 discriminator 1
 3638 1152 5E4B     		ldr	r3, .L160+8
 3639 1154 1B68     		ldr	r3, [r3]
 3640 1156 FA6B     		ldr	r2, [r7, #60]
 3641 1158 9A42     		cmp	r2, r3
 3642 115a FFF671AE 		blt	.L127
 3643              	.LBE16:
1252:main.c        ****             }
1253:main.c        ****     	}
1254:main.c        **** 
1255:main.c        ****         if (encoder_button_Read())
 3644              		.loc 1 1255 0 is_stmt 1
 3645 115e FFF7FEFF 		bl	encoder_button_Read
 3646 1162 0346     		mov	r3, r0
 3647 1164 002B     		cmp	r3, #0
 3648 1166 10D0     		beq	.L128
1256:main.c        ****         {
1257:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
 3649              		.loc 1 1257 0
 3650 1168 FFF7FEFF 		bl	QuadDec_1_GetCounter
 3651 116c 0346     		mov	r3, r0
 3652 116e 9800     		lsls	r0, r3, #2
 3653 1170 574B     		ldr	r3, .L160+12
 3654 1172 1B68     		ldr	r3, [r3]
 3655 1174 564A     		ldr	r2, .L160+12
 3656 1176 1268     		ldr	r2, [r2]
 3657 1178 5649     		ldr	r1, .L160+16
 3658 117a 8A5C     		ldrb	r2, [r1, r2]
 3659 117c D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 88


 3660 117e C2B2     		uxtb	r2, r0
 3661 1180 0A44     		add	r2, r2, r1
 3662 1182 D1B2     		uxtb	r1, r2
 3663 1184 534A     		ldr	r2, .L160+16
 3664 1186 D154     		strb	r1, [r2, r3]
 3665 1188 0FE0     		b	.L129
 3666              	.L128:
1258:main.c        ****         }
1259:main.c        ****         else
1260:main.c        ****         {
1261:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter();
 3667              		.loc 1 1261 0
 3668 118a FFF7FEFF 		bl	QuadDec_1_GetCounter
 3669 118e 0346     		mov	r3, r0
 3670 1190 1846     		mov	r0, r3
 3671 1192 4F4B     		ldr	r3, .L160+12
 3672 1194 1B68     		ldr	r3, [r3]
 3673 1196 4E4A     		ldr	r2, .L160+12
 3674 1198 1268     		ldr	r2, [r2]
 3675 119a 4E49     		ldr	r1, .L160+16
 3676 119c 8A5C     		ldrb	r2, [r1, r2]
 3677 119e D1B2     		uxtb	r1, r2
 3678 11a0 C2B2     		uxtb	r2, r0
 3679 11a2 0A44     		add	r2, r2, r1
 3680 11a4 D1B2     		uxtb	r1, r2
 3681 11a6 4B4A     		ldr	r2, .L160+16
 3682 11a8 D154     		strb	r1, [r2, r3]
 3683              	.L129:
1262:main.c        ****         }
1263:main.c        ****         QuadDec_1_SetCounter(0);
 3684              		.loc 1 1263 0
 3685 11aa 0020     		movs	r0, #0
 3686 11ac FFF7FEFF 		bl	QuadDec_1_SetCounter
1264:main.c        ****         
1265:main.c        **** 
1266:main.c        ****         
1267:main.c        ****         if (USB_check_flag)
 3687              		.loc 1 1267 0
 3688 11b0 494B     		ldr	r3, .L160+20
 3689 11b2 1B78     		ldrb	r3, [r3]
 3690 11b4 DBB2     		uxtb	r3, r3
 3691 11b6 002B     		cmp	r3, #0
 3692 11b8 01D0     		beq	.L130
1268:main.c        ****         {
1269:main.c        ****             checkUSB_Vbus();
 3693              		.loc 1 1269 0
 3694 11ba FFF7FEFF 		bl	checkUSB_Vbus
 3695              	.L130:
1270:main.c        ****         }
1271:main.c        ****         //only service the USB bus if there is a computer plugged in
1272:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 3696              		.loc 1 1272 0
 3697 11be 474B     		ldr	r3, .L160+24
 3698 11c0 1B78     		ldrb	r3, [r3]
 3699 11c2 DBB2     		uxtb	r3, r3
 3700 11c4 002B     		cmp	r3, #0
 3701 11c6 13D0     		beq	.L131
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 89


 3702              		.loc 1 1272 0 is_stmt 0 discriminator 1
 3703 11c8 FFF7FEFF 		bl	USB_VBusPresent
 3704 11cc 0346     		mov	r3, r0
 3705 11ce 002B     		cmp	r3, #0
 3706 11d0 0ED0     		beq	.L131
1273:main.c        ****         {
1274:main.c        ****             if (midiSent > 64)
 3707              		.loc 1 1274 0 is_stmt 1
 3708 11d2 434B     		ldr	r3, .L160+28
 3709 11d4 1B88     		ldrh	r3, [r3]
 3710 11d6 402B     		cmp	r3, #64
 3711 11d8 05D9     		bls	.L132
1275:main.c        ****             {
1276:main.c        ****                 midiOverflow++;
 3712              		.loc 1 1276 0
 3713 11da 424B     		ldr	r3, .L160+32
 3714 11dc 1B88     		ldrh	r3, [r3]
 3715 11de 0133     		adds	r3, r3, #1
 3716 11e0 9AB2     		uxth	r2, r3
 3717 11e2 404B     		ldr	r3, .L160+32
 3718 11e4 1A80     		strh	r2, [r3]	@ movhi
 3719              	.L132:
1277:main.c        ****             }
1278:main.c        ****             midiSent = 0;
 3720              		.loc 1 1278 0
 3721 11e6 3E4B     		ldr	r3, .L160+28
 3722 11e8 0022     		movs	r2, #0
 3723 11ea 1A80     		strh	r2, [r3]	@ movhi
1279:main.c        ****             USB_service();
 3724              		.loc 1 1279 0
 3725 11ec FFF7FEFF 		bl	USB_service
 3726              	.L131:
1280:main.c        ****         }
1281:main.c        **** 
1282:main.c        ****         
1283:main.c        ****         /*
1284:main.c        ****         for (int i = 0; i < 10; i++)
1285:main.c        ****         {
1286:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1287:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1288:main.c        ****         }
1289:main.c        ****         
1290:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1291:main.c        ****         for (int i = 0; i < 4; i++)
1292:main.c        ****         {
1293:main.c        ****             myArray[i+21] = knobs[i];
1294:main.c        ****         }
1295:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1296:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
1297:main.c        ****         */
1298:main.c        ****         myArray[0] = 1; //sending normal pitch stuff, not a preset send
 3727              		.loc 1 1298 0
 3728 11f0 3D4B     		ldr	r3, .L160+36
 3729 11f2 0122     		movs	r2, #1
 3730 11f4 1A70     		strb	r2, [r3]
 3731              	.LBB18:
1299:main.c        ****         for (int i = 0; i < 12; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 90


 3732              		.loc 1 1299 0
 3733 11f6 0023     		movs	r3, #0
 3734 11f8 BB63     		str	r3, [r7, #56]
 3735 11fa 24E0     		b	.L133
 3736              	.L134:
 3737              	.LBB19:
1300:main.c        ****         {
1301:main.c        ****             int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 3738              		.loc 1 1301 0 discriminator 3
 3739 11fc 324A     		ldr	r2, .L160+4
 3740 11fe BB6B     		ldr	r3, [r7, #56]
 3741 1200 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3742 1204 4FF08841 		mov	r1, #1140850688
 3743 1208 1846     		mov	r0, r3
 3744 120a FFF7FEFF 		bl	__aeabi_fmul
 3745 120e 0346     		mov	r3, r0
 3746 1210 1846     		mov	r0, r3
 3747 1212 FFF7FEFF 		bl	roundf
 3748 1216 0346     		mov	r3, r0
 3749 1218 1846     		mov	r0, r3
 3750 121a FFF7FEFF 		bl	__aeabi_f2iz
 3751 121e 0346     		mov	r3, r0
 3752 1220 7B60     		str	r3, [r7, #4]
1302:main.c        ****             myArray[i * 2 + 1] = scaledMIDI >> 8;
 3753              		.loc 1 1302 0 discriminator 3
 3754 1222 BB6B     		ldr	r3, [r7, #56]
 3755 1224 5B00     		lsls	r3, r3, #1
 3756 1226 0133     		adds	r3, r3, #1
 3757 1228 7A68     		ldr	r2, [r7, #4]
 3758 122a 1212     		asrs	r2, r2, #8
 3759 122c D1B2     		uxtb	r1, r2
 3760 122e 2E4A     		ldr	r2, .L160+36
 3761 1230 D154     		strb	r1, [r2, r3]
1303:main.c        ****             myArray[(i * 2) + 2] = scaledMIDI & 255;
 3762              		.loc 1 1303 0 discriminator 3
 3763 1232 BB6B     		ldr	r3, [r7, #56]
 3764 1234 0133     		adds	r3, r3, #1
 3765 1236 5B00     		lsls	r3, r3, #1
 3766 1238 7A68     		ldr	r2, [r7, #4]
 3767 123a D1B2     		uxtb	r1, r2
 3768 123c 2A4A     		ldr	r2, .L160+36
 3769 123e D154     		strb	r1, [r2, r3]
 3770              	.LBE19:
1299:main.c        ****         {
 3771              		.loc 1 1299 0 discriminator 3
 3772 1240 BB6B     		ldr	r3, [r7, #56]
 3773 1242 0133     		adds	r3, r3, #1
 3774 1244 BB63     		str	r3, [r7, #56]
 3775              	.L133:
1299:main.c        ****         {
 3776              		.loc 1 1299 0 is_stmt 0 discriminator 1
 3777 1246 BB6B     		ldr	r3, [r7, #56]
 3778 1248 0B2B     		cmp	r3, #11
 3779 124a D7DD     		ble	.L134
 3780              	.LBE18:
1304:main.c        ****         }
1305:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 91


1306:main.c        ****         myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 3781              		.loc 1 1306 0 is_stmt 1
 3782 124c 274B     		ldr	r3, .L160+40
 3783 124e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3784 1250 1B01     		lsls	r3, r3, #4
 3785 1252 5AB2     		sxtb	r2, r3
 3786 1254 264B     		ldr	r3, .L160+44
 3787 1256 1B68     		ldr	r3, [r3]
 3788 1258 5BB2     		sxtb	r3, r3
 3789 125a 1343     		orrs	r3, r3, r2
 3790 125c 5AB2     		sxtb	r2, r3
 3791 125e 254B     		ldr	r3, .L160+48
 3792 1260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3793 1262 5B01     		lsls	r3, r3, #5
 3794 1264 5BB2     		sxtb	r3, r3
 3795 1266 1343     		orrs	r3, r3, r2
 3796 1268 5AB2     		sxtb	r2, r3
 3797 126a 234B     		ldr	r3, .L160+52
 3798 126c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3799 126e 9B01     		lsls	r3, r3, #6
 3800 1270 5BB2     		sxtb	r3, r3
 3801 1272 1343     		orrs	r3, r3, r2
 3802 1274 5BB2     		sxtb	r3, r3
 3803 1276 DAB2     		uxtb	r2, r3
 3804 1278 1B4B     		ldr	r3, .L160+36
 3805 127a 1A76     		strb	r2, [r3, #24]
1307:main.c        ****         /*
1308:main.c        ****         for (int i = 0; i < 4; i++)
1309:main.c        ****         {
1310:main.c        ****             myArray[i+49] = knobs[i];
1311:main.c        ****         }
1312:main.c        ****         */
1313:main.c        ****         myArray[25] = patchNum;
 3806              		.loc 1 1313 0
 3807 127c 1F4B     		ldr	r3, .L160+56
 3808 127e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3809 1280 194B     		ldr	r3, .L160+36
 3810 1282 5A76     		strb	r2, [r3, #25]
1314:main.c        ****         myArray[26] = processed_volumePedal >> 8;
 3811              		.loc 1 1314 0
 3812 1284 1E4B     		ldr	r3, .L160+60
 3813 1286 B3F90030 		ldrsh	r3, [r3]
 3814 128a 1B12     		asrs	r3, r3, #8
 3815 128c 1BB2     		sxth	r3, r3
 3816 128e DAB2     		uxtb	r2, r3
 3817 1290 154B     		ldr	r3, .L160+36
 3818 1292 9A76     		strb	r2, [r3, #26]
1315:main.c        ****         myArray[27] = processed_volumePedal & 0xff;
 3819              		.loc 1 1315 0
 3820 1294 1A4B     		ldr	r3, .L160+60
 3821 1296 B3F90030 		ldrsh	r3, [r3]
 3822 129a DAB2     		uxtb	r2, r3
 3823 129c 124B     		ldr	r3, .L160+36
 3824 129e DA76     		strb	r2, [r3, #27]
 3825              	.LBB20:
1316:main.c        **** 
1317:main.c        ****         /*
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 92


1318:main.c        ****         for (int i = 0; i < 16; i++)
1319:main.c        ****         {
1320:main.c        ****             myArray[i+56] = encoderVal[i];
1321:main.c        ****         }
1322:main.c        ****         */
1323:main.c        ****         for(int i = 0; i < myBufferSize; i++)
 3826              		.loc 1 1323 0
 3827 12a0 0023     		movs	r3, #0
 3828 12a2 7B63     		str	r3, [r7, #52]
 3829 12a4 09E0     		b	.L135
 3830              	.L136:
1324:main.c        ****         {
1325:main.c        ****             SPIM_1_WriteTxData(myArray[i]);
 3831              		.loc 1 1325 0 discriminator 3
 3832 12a6 104A     		ldr	r2, .L160+36
 3833 12a8 7B6B     		ldr	r3, [r7, #52]
 3834 12aa 1344     		add	r3, r3, r2
 3835 12ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3836 12ae 1846     		mov	r0, r3
 3837 12b0 FFF7FEFF 		bl	SPIM_1_WriteTxData
1323:main.c        ****         {
 3838              		.loc 1 1323 0 discriminator 3
 3839 12b4 7B6B     		ldr	r3, [r7, #52]
 3840 12b6 0133     		adds	r3, r3, #1
 3841 12b8 7B63     		str	r3, [r7, #52]
 3842              	.L135:
1323:main.c        ****         {
 3843              		.loc 1 1323 0 is_stmt 0 discriminator 1
 3844 12ba 7B6B     		ldr	r3, [r7, #52]
 3845 12bc 1F2B     		cmp	r3, #31
 3846 12be F2DD     		ble	.L136
 3847              	.LBE20:
1326:main.c        ****         }
1327:main.c        ****      }
 3848              		.loc 1 1327 0 is_stmt 1
 3849 12c0 FFF75EB8 		b	.L137
 3850              	.L161:
 3851              		.align	2
 3852              	.L160:
 3853 12c4 00000000 		.word	prevStringPitchBend
 3854 12c8 00000000 		.word	stringMIDI
 3855 12cc 00000000 		.word	numStrings
 3856 12d0 00000000 		.word	encoderNum
 3857 12d4 00000000 		.word	encoderVal
 3858 12d8 00000000 		.word	USB_check_flag
 3859 12dc 00000000 		.word	USB_active
 3860 12e0 00000000 		.word	midiSent
 3861 12e4 00000000 		.word	midiOverflow
 3862 12e8 00000000 		.word	myArray
 3863 12ec 00000000 		.word	voice
 3864 12f0 00000000 		.word	octave
 3865 12f4 00000000 		.word	dualSlider
 3866 12f8 00000000 		.word	neck
 3867 12fc 00000000 		.word	patchNum
 3868 1300 00000000 		.word	processed_volumePedal
 3869              		.cfi_endproc
 3870              	.LFE73:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 93


 3871              		.size	main, .-main
 3872              		.section	.text.DmaRxConfiguration,"ax",%progbits
 3873              		.align	2
 3874              		.global	DmaRxConfiguration
 3875              		.thumb
 3876              		.thumb_func
 3877              		.type	DmaRxConfiguration, %function
 3878              	DmaRxConfiguration:
 3879              	.LFB74:
1328:main.c        **** }
1329:main.c        **** 
1330:main.c        **** 
1331:main.c        **** 
1332:main.c        **** void DmaRxConfiguration()
1333:main.c        **** { 
 3880              		.loc 1 1333 0
 3881              		.cfi_startproc
 3882              		@ args = 0, pretend = 0, frame = 0
 3883              		@ frame_needed = 1, uses_anonymous_args = 0
 3884 0000 80B5     		push	{r7, lr}
 3885              		.cfi_def_cfa_offset 8
 3886              		.cfi_offset 7, -8
 3887              		.cfi_offset 14, -4
 3888 0002 00AF     		add	r7, sp, #0
 3889              		.cfi_def_cfa_register 7
1334:main.c        ****     //pluck dma
1335:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 3890              		.loc 1 1335 0
 3891 0004 41F6FF73 		movw	r3, #8191
 3892 0008 4FF48042 		mov	r2, #16384
 3893 000c 0121     		movs	r1, #1
 3894 000e 0120     		movs	r0, #1
 3895 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 3896 0014 0346     		mov	r3, r0
 3897 0016 1A46     		mov	r2, r3
 3898 0018 334B     		ldr	r3, .L163
 3899 001a 1A70     		strb	r2, [r3]
1336:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1337:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 3900              		.loc 1 1337 0
 3901 001c FFF7FEFF 		bl	CyDmaTdAllocate
 3902 0020 0346     		mov	r3, r0
 3903 0022 1A46     		mov	r2, r3
 3904 0024 314B     		ldr	r3, .L163+4
 3905 0026 1A70     		strb	r2, [r3]
1338:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 3906              		.loc 1 1338 0
 3907 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 3908 002c 0346     		mov	r3, r0
 3909 002e 1A46     		mov	r2, r3
 3910 0030 2E4B     		ldr	r3, .L163+4
 3911 0032 5A70     		strb	r2, [r3, #1]
1339:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 3912              		.loc 1 1339 0
 3913 0034 2D4B     		ldr	r3, .L163+4
 3914 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3915 0038 0223     		movs	r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 94


 3916 003a FE22     		movs	r2, #254
 3917 003c 1A21     		movs	r1, #26
 3918 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1340:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 3919              		.loc 1 1340 0
 3920 0042 2A4B     		ldr	r3, .L163+4
 3921 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 3922 0046 0223     		movs	r3, #2
 3923 0048 FE22     		movs	r2, #254
 3924 004a 1A21     		movs	r1, #26
 3925 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1341:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 3926              		.loc 1 1341 0
 3927 0050 264B     		ldr	r3, .L163+4
 3928 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3929 0054 264A     		ldr	r2, .L163+8
 3930 0056 92B2     		uxth	r2, r2
 3931 0058 46F25741 		movw	r1, #25687
 3932 005c 1846     		mov	r0, r3
 3933 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1342:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 3934              		.loc 1 1342 0
 3935 0062 224B     		ldr	r3, .L163+4
 3936 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3937 0066 234A     		ldr	r2, .L163+12
 3938 0068 92B2     		uxth	r2, r2
 3939 006a 46F25741 		movw	r1, #25687
 3940 006e 1846     		mov	r0, r3
 3941 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1343:main.c        **** 
1344:main.c        ****     //bar dma
1345:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 3942              		.loc 1 1345 0
 3943 0074 41F6FF73 		movw	r3, #8191
 3944 0078 4FF48042 		mov	r2, #16384
 3945 007c 0121     		movs	r1, #1
 3946 007e 0120     		movs	r0, #1
 3947 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 3948 0084 0346     		mov	r3, r0
 3949 0086 1A46     		mov	r2, r3
 3950 0088 1B4B     		ldr	r3, .L163+16
 3951 008a 1A70     		strb	r2, [r3]
1346:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1347:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 3952              		.loc 1 1347 0
 3953 008c FFF7FEFF 		bl	CyDmaTdAllocate
 3954 0090 0346     		mov	r3, r0
 3955 0092 1A46     		mov	r2, r3
 3956 0094 194B     		ldr	r3, .L163+20
 3957 0096 1A70     		strb	r2, [r3]
1348:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 3958              		.loc 1 1348 0
 3959 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 3960 009c 0346     		mov	r3, r0
 3961 009e 1A46     		mov	r2, r3
 3962 00a0 164B     		ldr	r3, .L163+20
 3963 00a2 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 95


1349:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 3964              		.loc 1 1349 0
 3965 00a4 154B     		ldr	r3, .L163+20
 3966 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3967 00a8 0623     		movs	r3, #6
 3968 00aa FE22     		movs	r2, #254
 3969 00ac 0821     		movs	r1, #8
 3970 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1350:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 3971              		.loc 1 1350 0
 3972 00b2 124B     		ldr	r3, .L163+20
 3973 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 3974 00b6 0623     		movs	r3, #6
 3975 00b8 FE22     		movs	r2, #254
 3976 00ba 0821     		movs	r1, #8
 3977 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1351:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 3978              		.loc 1 1351 0
 3979 00c0 0E4B     		ldr	r3, .L163+20
 3980 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3981 00c4 0E4A     		ldr	r2, .L163+24
 3982 00c6 92B2     		uxth	r2, r2
 3983 00c8 46F25851 		movw	r1, #25944
 3984 00cc 1846     		mov	r0, r3
 3985 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1352:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 3986              		.loc 1 1352 0
 3987 00d2 0A4B     		ldr	r3, .L163+20
 3988 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3989 00d6 0B4A     		ldr	r2, .L163+28
 3990 00d8 92B2     		uxth	r2, r2
 3991 00da 46F25851 		movw	r1, #25944
 3992 00de 1846     		mov	r0, r3
 3993 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1353:main.c        **** }
 3994              		.loc 1 1353 0
 3995 00e4 00BF     		nop
 3996 00e6 80BD     		pop	{r7, pc}
 3997              	.L164:
 3998              		.align	2
 3999              	.L163:
 4000 00e8 00000000 		.word	rx1Channel
 4001 00ec 00000000 		.word	rx1TD
 4002 00f0 00000000 		.word	rxBufferPluck
 4003 00f4 1A000000 		.word	rxBufferPluck+26
 4004 00f8 00000000 		.word	rx2Channel
 4005 00fc 00000000 		.word	rx2TD
 4006 0100 00000000 		.word	rxBufferBar
 4007 0104 08000000 		.word	rxBufferBar+8
 4008              		.cfi_endproc
 4009              	.LFE74:
 4010              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 4011              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 4012              		.align	2
 4013              		.global	I2C_MasterWriteBlocking
 4014              		.thumb
 4015              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 96


 4016              		.type	I2C_MasterWriteBlocking, %function
 4017              	I2C_MasterWriteBlocking:
 4018              	.LFB75:
1354:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1355:main.c        **** {
 4019              		.loc 1 1355 0
 4020              		.cfi_startproc
 4021              		@ args = 0, pretend = 0, frame = 16
 4022              		@ frame_needed = 1, uses_anonymous_args = 0
 4023 0000 80B5     		push	{r7, lr}
 4024              		.cfi_def_cfa_offset 8
 4025              		.cfi_offset 7, -8
 4026              		.cfi_offset 14, -4
 4027 0002 84B0     		sub	sp, sp, #16
 4028              		.cfi_def_cfa_offset 24
 4029 0004 00AF     		add	r7, sp, #0
 4030              		.cfi_def_cfa_register 7
 4031 0006 0346     		mov	r3, r0
 4032 0008 FB71     		strb	r3, [r7, #7]
 4033 000a 0B46     		mov	r3, r1	@ movhi
 4034 000c BB80     		strh	r3, [r7, #4]	@ movhi
 4035 000e 1346     		mov	r3, r2
 4036 0010 BB71     		strb	r3, [r7, #6]
1356:main.c        ****     uint8 volatile status;
1357:main.c        ****     uint32_t timeout = 50000;
 4037              		.loc 1 1357 0
 4038 0012 4CF25033 		movw	r3, #50000
 4039 0016 FB60     		str	r3, [r7, #12]
1358:main.c        ****     status = I2C_1_MasterClearStatus();
 4040              		.loc 1 1358 0
 4041 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 4042 001c 0346     		mov	r3, r0
 4043 001e FB72     		strb	r3, [r7, #11]
1359:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 4044              		.loc 1 1359 0
 4045 0020 FB7A     		ldrb	r3, [r7, #11]
 4046 0022 DBB2     		uxtb	r3, r3
 4047 0024 5BB2     		sxtb	r3, r3
 4048 0026 002B     		cmp	r3, #0
 4049 0028 32DB     		blt	.L166
1360:main.c        ****     {
1361:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 4050              		.loc 1 1361 0
 4051 002a BB88     		ldrh	r3, [r7, #4]	@ movhi
 4052 002c DAB2     		uxtb	r2, r3
 4053 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4054 0030 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4055 0032 1A49     		ldr	r1, .L172
 4056 0034 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 4057 0038 0346     		mov	r3, r0
 4058 003a FB72     		strb	r3, [r7, #11]
1362:main.c        ****                                      mode);
1363:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 4059              		.loc 1 1363 0
 4060 003c FB7A     		ldrb	r3, [r7, #11]
 4061 003e DBB2     		uxtb	r3, r3
 4062 0040 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 97


 4063 0042 21D1     		bne	.L167
 4064              	.L170:
1364:main.c        ****         {
1365:main.c        ****             /* wait for write complete and no error */
1366:main.c        ****             do
1367:main.c        ****             {
1368:main.c        ****                 status = I2C_1_MasterStatus();
 4065              		.loc 1 1368 0
 4066 0044 FFF7FEFF 		bl	I2C_1_MasterStatus
 4067 0048 0346     		mov	r3, r0
 4068 004a FB72     		strb	r3, [r7, #11]
1369:main.c        ****                 timeout--;
 4069              		.loc 1 1369 0
 4070 004c FB68     		ldr	r3, [r7, #12]
 4071 004e 013B     		subs	r3, r3, #1
 4072 0050 FB60     		str	r3, [r7, #12]
1370:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 4073              		.loc 1 1370 0
 4074 0052 FB7A     		ldrb	r3, [r7, #11]
 4075 0054 DBB2     		uxtb	r3, r3
 4076 0056 802B     		cmp	r3, #128
 4077 0058 01D1     		bne	.L168
1371:main.c        ****                 {
1372:main.c        ****                     I2C_reset();
 4078              		.loc 1 1372 0
 4079 005a FFF7FEFF 		bl	I2C_reset
 4080              	.L168:
1373:main.c        ****                 }
1374:main.c        ****                 if (timeout == 0)
 4081              		.loc 1 1374 0
 4082 005e FB68     		ldr	r3, [r7, #12]
 4083 0060 002B     		cmp	r3, #0
 4084 0062 03D1     		bne	.L169
1375:main.c        ****                 {
1376:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 4085              		.loc 1 1376 0
 4086 0064 8023     		movs	r3, #128
 4087 0066 FB72     		strb	r3, [r7, #11]
1377:main.c        ****                     I2C_reset();
 4088              		.loc 1 1377 0
 4089 0068 FFF7FEFF 		bl	I2C_reset
 4090              	.L169:
1378:main.c        ****                 }
1379:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 4091              		.loc 1 1379 0
 4092 006c FB7A     		ldrb	r3, [r7, #11]
 4093 006e DBB2     		uxtb	r3, r3
 4094 0070 03F08203 		and	r3, r3, #130
 4095 0074 002B     		cmp	r3, #0
 4096 0076 0BD1     		bne	.L166
 4097              		.loc 1 1379 0 is_stmt 0 discriminator 1
 4098 0078 FB7A     		ldrb	r3, [r7, #11]
 4099 007a DBB2     		uxtb	r3, r3
 4100 007c 002B     		cmp	r3, #0
 4101 007e 07D0     		beq	.L166
 4102              		.loc 1 1379 0 discriminator 2
 4103 0080 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 98


 4104 0082 002B     		cmp	r3, #0
 4105 0084 DED1     		bne	.L170
 4106 0086 03E0     		b	.L166
 4107              	.L167:
1380:main.c        ****         }
1381:main.c        ****         else
1382:main.c        ****         {
1383:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1384:main.c        ****             *  I2CM_MasterStatus() error output */
1385:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 4108              		.loc 1 1385 0 is_stmt 1
 4109 0088 8023     		movs	r3, #128
 4110 008a FB72     		strb	r3, [r7, #11]
1386:main.c        ****             I2C_reset();
 4111              		.loc 1 1386 0
 4112 008c FFF7FEFF 		bl	I2C_reset
 4113              	.L166:
1387:main.c        ****         } 
1388:main.c        ****     }  
1389:main.c        ****     return status;
 4114              		.loc 1 1389 0
 4115 0090 FB7A     		ldrb	r3, [r7, #11]
 4116 0092 DBB2     		uxtb	r3, r3
1390:main.c        **** }
 4117              		.loc 1 1390 0
 4118 0094 1846     		mov	r0, r3
 4119 0096 1037     		adds	r7, r7, #16
 4120              		.cfi_def_cfa_offset 8
 4121 0098 BD46     		mov	sp, r7
 4122              		.cfi_def_cfa_register 13
 4123              		@ sp needed
 4124 009a 80BD     		pop	{r7, pc}
 4125              	.L173:
 4126              		.align	2
 4127              	.L172:
 4128 009c 00000000 		.word	I2Cbuff1
 4129              		.cfi_endproc
 4130              	.LFE75:
 4131              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 4132              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 4133              		.align	2
 4134              		.global	I2C_MasterReadBlocking
 4135              		.thumb
 4136              		.thumb_func
 4137              		.type	I2C_MasterReadBlocking, %function
 4138              	I2C_MasterReadBlocking:
 4139              	.LFB76:
1391:main.c        **** 
1392:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1393:main.c        **** {
 4140              		.loc 1 1393 0
 4141              		.cfi_startproc
 4142              		@ args = 0, pretend = 0, frame = 16
 4143              		@ frame_needed = 1, uses_anonymous_args = 0
 4144 0000 80B5     		push	{r7, lr}
 4145              		.cfi_def_cfa_offset 8
 4146              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 99


 4147              		.cfi_offset 14, -4
 4148 0002 84B0     		sub	sp, sp, #16
 4149              		.cfi_def_cfa_offset 24
 4150 0004 00AF     		add	r7, sp, #0
 4151              		.cfi_def_cfa_register 7
 4152 0006 0346     		mov	r3, r0
 4153 0008 FB71     		strb	r3, [r7, #7]
 4154 000a 0B46     		mov	r3, r1
 4155 000c BB71     		strb	r3, [r7, #6]
 4156 000e 1346     		mov	r3, r2
 4157 0010 7B71     		strb	r3, [r7, #5]
1394:main.c        ****     uint8 volatile status;
1395:main.c        ****     uint32_t timeout = 50000;
 4158              		.loc 1 1395 0
 4159 0012 4CF25033 		movw	r3, #50000
 4160 0016 FB60     		str	r3, [r7, #12]
1396:main.c        ****     status = I2C_1_MasterClearStatus();
 4161              		.loc 1 1396 0
 4162 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 4163 001c 0346     		mov	r3, r0
 4164 001e FB72     		strb	r3, [r7, #11]
1397:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 4165              		.loc 1 1397 0
 4166 0020 FB7A     		ldrb	r3, [r7, #11]
 4167 0022 DBB2     		uxtb	r3, r3
 4168 0024 5BB2     		sxtb	r3, r3
 4169 0026 002B     		cmp	r3, #0
 4170 0028 37DB     		blt	.L175
1398:main.c        ****     {
1399:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 4171              		.loc 1 1399 0
 4172 002a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4173 002c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 4174 002e F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4175 0030 1D49     		ldr	r1, .L181
 4176 0032 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 4177 0036 0346     		mov	r3, r0
 4178 0038 FB72     		strb	r3, [r7, #11]
1400:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1401:main.c        ****                                     nbytes, mode); 
1402:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 4179              		.loc 1 1402 0
 4180 003a FB7A     		ldrb	r3, [r7, #11]
 4181 003c DBB2     		uxtb	r3, r3
 4182 003e 002B     		cmp	r3, #0
 4183 0040 27D1     		bne	.L176
 4184              	.L179:
1403:main.c        ****         {
1404:main.c        ****             /* wait for read complete and no error */
1405:main.c        ****             do
1406:main.c        ****             {
1407:main.c        ****                 status = I2C_1_MasterStatus();
 4185              		.loc 1 1407 0
 4186 0042 FFF7FEFF 		bl	I2C_1_MasterStatus
 4187 0046 0346     		mov	r3, r0
 4188 0048 FB72     		strb	r3, [r7, #11]
1408:main.c        ****                 timeout--;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 100


 4189              		.loc 1 1408 0
 4190 004a FB68     		ldr	r3, [r7, #12]
 4191 004c 013B     		subs	r3, r3, #1
 4192 004e FB60     		str	r3, [r7, #12]
1409:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 4193              		.loc 1 1409 0
 4194 0050 FB7A     		ldrb	r3, [r7, #11]
 4195 0052 DBB2     		uxtb	r3, r3
 4196 0054 802B     		cmp	r3, #128
 4197 0056 07D1     		bne	.L177
1410:main.c        ****                 {
1411:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 4198              		.loc 1 1411 0
 4199 0058 144B     		ldr	r3, .L181+4
 4200 005a 1022     		movs	r2, #16
 4201 005c 1A70     		strb	r2, [r3]
 4202 005e 144B     		ldr	r3, .L181+8
 4203 0060 0422     		movs	r2, #4
 4204 0062 1A70     		strb	r2, [r3]
1412:main.c        ****                     I2C_reset();
 4205              		.loc 1 1412 0
 4206 0064 FFF7FEFF 		bl	I2C_reset
 4207              	.L177:
1413:main.c        ****                 }
1414:main.c        ****                 if (timeout == 0)
 4208              		.loc 1 1414 0
 4209 0068 FB68     		ldr	r3, [r7, #12]
 4210 006a 002B     		cmp	r3, #0
 4211 006c 03D1     		bne	.L178
1415:main.c        ****                 {
1416:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 4212              		.loc 1 1416 0
 4213 006e 8023     		movs	r3, #128
 4214 0070 FB72     		strb	r3, [r7, #11]
1417:main.c        ****                     I2C_reset();
 4215              		.loc 1 1417 0
 4216 0072 FFF7FEFF 		bl	I2C_reset
 4217              	.L178:
1418:main.c        ****                 }
1419:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 4218              		.loc 1 1419 0
 4219 0076 FB7A     		ldrb	r3, [r7, #11]
 4220 0078 DBB2     		uxtb	r3, r3
 4221 007a 03F08103 		and	r3, r3, #129
 4222 007e 002B     		cmp	r3, #0
 4223 0080 0BD1     		bne	.L175
 4224              		.loc 1 1419 0 is_stmt 0 discriminator 1
 4225 0082 FB7A     		ldrb	r3, [r7, #11]
 4226 0084 DBB2     		uxtb	r3, r3
 4227 0086 002B     		cmp	r3, #0
 4228 0088 07D0     		beq	.L175
 4229              		.loc 1 1419 0 discriminator 2
 4230 008a FB68     		ldr	r3, [r7, #12]
 4231 008c 002B     		cmp	r3, #0
 4232 008e D8D1     		bne	.L179
 4233 0090 03E0     		b	.L175
 4234              	.L176:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 101


1420:main.c        ****         }
1421:main.c        ****         else
1422:main.c        ****         {
1423:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1424:main.c        ****             *  I2CM_MasterStatus() error output */
1425:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 4235              		.loc 1 1425 0 is_stmt 1
 4236 0092 8023     		movs	r3, #128
 4237 0094 FB72     		strb	r3, [r7, #11]
1426:main.c        ****             I2C_reset();
 4238              		.loc 1 1426 0
 4239 0096 FFF7FEFF 		bl	I2C_reset
 4240              	.L175:
1427:main.c        ****         }
1428:main.c        ****     }
1429:main.c        ****     return status;
 4241              		.loc 1 1429 0
 4242 009a FB7A     		ldrb	r3, [r7, #11]
 4243 009c DBB2     		uxtb	r3, r3
1430:main.c        **** }
 4244              		.loc 1 1430 0
 4245 009e 1846     		mov	r0, r3
 4246 00a0 1037     		adds	r7, r7, #16
 4247              		.cfi_def_cfa_offset 8
 4248 00a2 BD46     		mov	sp, r7
 4249              		.cfi_def_cfa_register 13
 4250              		@ sp needed
 4251 00a4 80BD     		pop	{r7, pc}
 4252              	.L182:
 4253 00a6 00BF     		.align	2
 4254              	.L181:
 4255 00a8 00000000 		.word	I2Cbuff2
 4256 00ac D9490040 		.word	1073760729
 4257 00b0 D7490040 		.word	1073760727
 4258              		.cfi_endproc
 4259              	.LFE76:
 4260              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 4261              		.section	.text.I2C_reset,"ax",%progbits
 4262              		.align	2
 4263              		.global	I2C_reset
 4264              		.thumb
 4265              		.thumb_func
 4266              		.type	I2C_reset, %function
 4267              	I2C_reset:
 4268              	.LFB77:
1431:main.c        **** 
1432:main.c        **** void I2C_reset(void)
1433:main.c        **** {
 4269              		.loc 1 1433 0
 4270              		.cfi_startproc
 4271              		@ args = 0, pretend = 0, frame = 0
 4272              		@ frame_needed = 1, uses_anonymous_args = 0
 4273              		@ link register save eliminated.
 4274 0000 80B4     		push	{r7}
 4275              		.cfi_def_cfa_offset 4
 4276              		.cfi_offset 7, -4
 4277 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 102


 4278              		.cfi_def_cfa_register 7
1434:main.c        **** 
1435:main.c        **** }
 4279              		.loc 1 1435 0
 4280 0004 00BF     		nop
 4281 0006 BD46     		mov	sp, r7
 4282              		.cfi_def_cfa_register 13
 4283              		@ sp needed
 4284 0008 80BC     		pop	{r7}
 4285              		.cfi_restore 7
 4286              		.cfi_def_cfa_offset 0
 4287 000a 7047     		bx	lr
 4288              		.cfi_endproc
 4289              	.LFE77:
 4290              		.size	I2C_reset, .-I2C_reset
 4291              		.section	.text.checkUSB_Vbus,"ax",%progbits
 4292              		.align	2
 4293              		.global	checkUSB_Vbus
 4294              		.thumb
 4295              		.thumb_func
 4296              		.type	checkUSB_Vbus, %function
 4297              	checkUSB_Vbus:
 4298              	.LFB78:
1436:main.c        **** 
1437:main.c        **** void checkUSB_Vbus(void)
1438:main.c        **** {
 4299              		.loc 1 1438 0
 4300              		.cfi_startproc
 4301              		@ args = 0, pretend = 0, frame = 0
 4302              		@ frame_needed = 1, uses_anonymous_args = 0
 4303 0000 80B5     		push	{r7, lr}
 4304              		.cfi_def_cfa_offset 8
 4305              		.cfi_offset 7, -8
 4306              		.cfi_offset 14, -4
 4307 0002 00AF     		add	r7, sp, #0
 4308              		.cfi_def_cfa_register 7
1439:main.c        ****    if (USB_VBusPresent() == 0)
 4309              		.loc 1 1439 0
 4310 0004 FFF7FEFF 		bl	USB_VBusPresent
 4311 0008 0346     		mov	r3, r0
 4312 000a 002B     		cmp	r3, #0
 4313 000c 05D1     		bne	.L185
1440:main.c        ****    {
1441:main.c        ****        USB_Stop();
 4314              		.loc 1 1441 0
 4315 000e FFF7FEFF 		bl	USB_Stop
1442:main.c        ****        USB_active = 0; 
 4316              		.loc 1 1442 0
 4317 0012 0E4B     		ldr	r3, .L188
 4318 0014 0022     		movs	r2, #0
 4319 0016 1A70     		strb	r2, [r3]
 4320 0018 13E0     		b	.L186
 4321              	.L185:
1443:main.c        ****    }
1444:main.c        ****    else if (USB_active == 0 )
 4322              		.loc 1 1444 0
 4323 001a 0C4B     		ldr	r3, .L188
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 103


 4324 001c 1B78     		ldrb	r3, [r3]
 4325 001e DBB2     		uxtb	r3, r3
 4326 0020 002B     		cmp	r3, #0
 4327 0022 0ED1     		bne	.L186
1445:main.c        ****    {
1446:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 4328              		.loc 1 1446 0
 4329 0024 0021     		movs	r1, #0
 4330 0026 0020     		movs	r0, #0
 4331 0028 FFF7FEFF 		bl	USB_Start
1447:main.c        ****         while (0u == USB_GetConfiguration());
 4332              		.loc 1 1447 0
 4333 002c 00BF     		nop
 4334              	.L187:
 4335              		.loc 1 1447 0 is_stmt 0 discriminator 1
 4336 002e FFF7FEFF 		bl	USB_GetConfiguration
 4337 0032 0346     		mov	r3, r0
 4338 0034 002B     		cmp	r3, #0
 4339 0036 FAD0     		beq	.L187
1448:main.c        ****         USB_MIDI_EP_Init();
 4340              		.loc 1 1448 0 is_stmt 1
 4341 0038 FFF7FEFF 		bl	USB_MIDI_Init
1449:main.c        ****        USB_active = 1;
 4342              		.loc 1 1449 0
 4343 003c 034B     		ldr	r3, .L188
 4344 003e 0122     		movs	r2, #1
 4345 0040 1A70     		strb	r2, [r3]
 4346              	.L186:
1450:main.c        ****    }
1451:main.c        ****    USB_check_flag = 0;
 4347              		.loc 1 1451 0
 4348 0042 034B     		ldr	r3, .L188+4
 4349 0044 0022     		movs	r2, #0
 4350 0046 1A70     		strb	r2, [r3]
1452:main.c        **** }
 4351              		.loc 1 1452 0
 4352 0048 00BF     		nop
 4353 004a 80BD     		pop	{r7, pc}
 4354              	.L189:
 4355              		.align	2
 4356              	.L188:
 4357 004c 00000000 		.word	USB_active
 4358 0050 00000000 		.word	USB_check_flag
 4359              		.cfi_endproc
 4360              	.LFE78:
 4361              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 4362              		.section	.text.USB_service,"ax",%progbits
 4363              		.align	2
 4364              		.global	USB_service
 4365              		.thumb
 4366              		.thumb_func
 4367              		.type	USB_service, %function
 4368              	USB_service:
 4369              	.LFB79:
1453:main.c        **** 
1454:main.c        **** 
1455:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 104


1456:main.c        **** void USB_service(void)
1457:main.c        **** {
 4370              		.loc 1 1457 0
 4371              		.cfi_startproc
 4372              		@ args = 0, pretend = 0, frame = 0
 4373              		@ frame_needed = 1, uses_anonymous_args = 0
 4374 0000 80B5     		push	{r7, lr}
 4375              		.cfi_def_cfa_offset 8
 4376              		.cfi_offset 7, -8
 4377              		.cfi_offset 14, -4
 4378 0002 00AF     		add	r7, sp, #0
 4379              		.cfi_def_cfa_register 7
1458:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 4380              		.loc 1 1458 0
 4381 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 4382 0008 0346     		mov	r3, r0
 4383 000a 002B     		cmp	r3, #0
 4384 000c 10D0     		beq	.L191
1459:main.c        ****     {
1460:main.c        ****         if(USB_GetConfiguration() != 0u)   
 4385              		.loc 1 1460 0
 4386 000e FFF7FEFF 		bl	USB_GetConfiguration
 4387 0012 0346     		mov	r3, r0
 4388 0014 002B     		cmp	r3, #0
 4389 0016 0BD0     		beq	.L191
1461:main.c        ****         {
1462:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1463:main.c        ****             
1464:main.c        ****             //SleepTimer_Start();
1465:main.c        ****         	
1466:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 4390              		.loc 1 1466 0
 4391 0018 244B     		ldr	r3, .L197
 4392 001a 1B78     		ldrb	r3, [r3]
 4393 001c DBB2     		uxtb	r3, r3
 4394 001e 002B     		cmp	r3, #0
 4395 0020 06D0     		beq	.L191
 4396              		.loc 1 1466 0 is_stmt 0 discriminator 1
 4397 0022 FFF7FEFF 		bl	USB_VBusPresent
 4398 0026 0346     		mov	r3, r0
 4399 0028 002B     		cmp	r3, #0
 4400 002a 01D0     		beq	.L191
1467:main.c        ****             {
1468:main.c        ****                 USB_MIDI_EP_Init();
 4401              		.loc 1 1468 0 is_stmt 1
 4402 002c FFF7FEFF 		bl	USB_MIDI_Init
 4403              	.L191:
1469:main.c        ****             }
1470:main.c        ****         }
1471:main.c        ****         else
1472:main.c        ****         {
1473:main.c        ****             //SleepTimer_Stop();
1474:main.c        ****         }    
1475:main.c        ****     }        
1476:main.c        ****     
1477:main.c        ****     if(USB_GetConfiguration() != 0u)    
 4404              		.loc 1 1477 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 105


 4405 0030 FFF7FEFF 		bl	USB_GetConfiguration
 4406 0034 0346     		mov	r3, r0
 4407 0036 002B     		cmp	r3, #0
 4408 0038 35D0     		beq	.L196
1478:main.c        ****     {
1479:main.c        **** 
1480:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1481:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 4409              		.loc 1 1481 0
 4410 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 4411 003e 0346     		mov	r3, r0
 4412 0040 002B     		cmp	r3, #0
 4413 0042 18D0     		beq	.L194
1482:main.c        ****         {
1483:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 4414              		.loc 1 1483 0
 4415 0044 1A4B     		ldr	r3, .L197+4
 4416 0046 1B78     		ldrb	r3, [r3]
 4417 0048 D8B2     		uxtb	r0, r3
 4418 004a 1A4B     		ldr	r3, .L197+8
 4419 004c 1B78     		ldrb	r3, [r3]
 4420 004e DBB2     		uxtb	r3, r3
 4421 0050 9BB2     		uxth	r3, r3
 4422 0052 1A46     		mov	r2, r3
 4423 0054 1849     		ldr	r1, .L197+12
 4424 0056 FFF7FEFF 		bl	USB_LoadInEP
1484:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1485:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 4425              		.loc 1 1485 0
 4426 005a 184B     		ldr	r3, .L197+16
 4427 005c 1B78     		ldrb	r3, [r3]
 4428 005e DBB2     		uxtb	r3, r3
 4429 0060 4022     		movs	r2, #64
 4430 0062 1749     		ldr	r1, .L197+20
 4431 0064 1846     		mov	r0, r3
 4432 0066 FFF7FEFF 		bl	USB_ReadOutEP
1486:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1487:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1488:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 4433              		.loc 1 1488 0
 4434 006a 144B     		ldr	r3, .L197+16
 4435 006c 1B78     		ldrb	r3, [r3]
 4436 006e DBB2     		uxtb	r3, r3
 4437 0070 1846     		mov	r0, r3
 4438 0072 FFF7FEFF 		bl	USB_EnableOutEP
 4439              	.L194:
1489:main.c        ****         }
1490:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 4440              		.loc 1 1490 0
 4441 0076 0D4B     		ldr	r3, .L197
 4442 0078 1B78     		ldrb	r3, [r3]
 4443 007a DBB2     		uxtb	r3, r3
 4444 007c 002B     		cmp	r3, #0
 4445 007e 06D0     		beq	.L195
 4446              		.loc 1 1490 0 is_stmt 0 discriminator 1
 4447 0080 FFF7FEFF 		bl	USB_VBusPresent
 4448 0084 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 106


 4449 0086 002B     		cmp	r3, #0
 4450 0088 01D0     		beq	.L195
1491:main.c        ****         {
1492:main.c        ****             USB_MIDI_IN_Service();
 4451              		.loc 1 1492 0 is_stmt 1
 4452 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 4453              	.L195:
1493:main.c        ****         }
1494:main.c        **** 
1495:main.c        **** 
1496:main.c        **** 
1497:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 4454              		.loc 1 1497 0
 4455 008e 074B     		ldr	r3, .L197
 4456 0090 1B78     		ldrb	r3, [r3]
 4457 0092 DBB2     		uxtb	r3, r3
 4458 0094 002B     		cmp	r3, #0
 4459 0096 06D0     		beq	.L196
 4460              		.loc 1 1497 0 is_stmt 0 discriminator 1
 4461 0098 FFF7FEFF 		bl	USB_VBusPresent
 4462 009c 0346     		mov	r3, r0
 4463 009e 002B     		cmp	r3, #0
 4464 00a0 01D0     		beq	.L196
1498:main.c        ****         {
1499:main.c        ****             USB_MIDI_OUT_Service();
 4465              		.loc 1 1499 0 is_stmt 1
 4466 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 4467              	.L196:
1500:main.c        ****         }
1501:main.c        ****     }
1502:main.c        ****         
1503:main.c        **** }
 4468              		.loc 1 1503 0
 4469 00a6 00BF     		nop
 4470 00a8 80BD     		pop	{r7, pc}
 4471              	.L198:
 4472 00aa 00BF     		.align	2
 4473              	.L197:
 4474 00ac 00000000 		.word	USB_active
 4475 00b0 00000000 		.word	USB_midi_in_ep
 4476 00b4 00000000 		.word	USB_midiInPointer
 4477 00b8 00000000 		.word	USB_midiInBuffer
 4478 00bc 00000000 		.word	USB_midi_out_ep
 4479 00c0 00000000 		.word	USB_midiOutBuffer
 4480              		.cfi_endproc
 4481              	.LFE79:
 4482              		.size	USB_service, .-USB_service
 4483              		.section	.text.log2f_approx,"ax",%progbits
 4484              		.align	2
 4485              		.global	log2f_approx
 4486              		.thumb
 4487              		.thumb_func
 4488              		.type	log2f_approx, %function
 4489              	log2f_approx:
 4490              	.LFB80:
1504:main.c        **** 
1505:main.c        **** // This is a fast approximation to log2()
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 107


1506:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1507:main.c        **** float log2f_approx(float X) {
 4491              		.loc 1 1507 0
 4492              		.cfi_startproc
 4493              		@ args = 0, pretend = 0, frame = 24
 4494              		@ frame_needed = 1, uses_anonymous_args = 0
 4495 0000 80B5     		push	{r7, lr}
 4496              		.cfi_def_cfa_offset 8
 4497              		.cfi_offset 7, -8
 4498              		.cfi_offset 14, -4
 4499 0002 86B0     		sub	sp, sp, #24
 4500              		.cfi_def_cfa_offset 32
 4501 0004 00AF     		add	r7, sp, #0
 4502              		.cfi_def_cfa_register 7
 4503 0006 7860     		str	r0, [r7, #4]	@ float
1508:main.c        ****   float Y, F;
1509:main.c        ****   int E;
1510:main.c        ****   F = frexpf(fabsf(X), &E);
 4504              		.loc 1 1510 0
 4505 0008 7B68     		ldr	r3, [r7, #4]
 4506 000a 23F00043 		bic	r3, r3, #-2147483648
 4507 000e 07F10C02 		add	r2, r7, #12
 4508 0012 1146     		mov	r1, r2
 4509 0014 1846     		mov	r0, r3
 4510 0016 FFF7FEFF 		bl	frexpf
 4511 001a 7861     		str	r0, [r7, #20]	@ float
1511:main.c        ****   Y = 1.23149591368684f;
 4512              		.loc 1 1511 0
 4513 001c 1A4B     		ldr	r3, .L201
 4514 001e 3B61     		str	r3, [r7, #16]	@ float
1512:main.c        ****   Y *= F;
 4515              		.loc 1 1512 0
 4516 0020 7969     		ldr	r1, [r7, #20]	@ float
 4517 0022 3869     		ldr	r0, [r7, #16]	@ float
 4518 0024 FFF7FEFF 		bl	__aeabi_fmul
 4519 0028 0346     		mov	r3, r0
 4520 002a 3B61     		str	r3, [r7, #16]	@ float
1513:main.c        ****   Y += -4.11852516267426f;
 4521              		.loc 1 1513 0
 4522 002c 1749     		ldr	r1, .L201+4
 4523 002e 3869     		ldr	r0, [r7, #16]	@ float
 4524 0030 FFF7FEFF 		bl	__aeabi_fsub
 4525 0034 0346     		mov	r3, r0
 4526 0036 3B61     		str	r3, [r7, #16]	@ float
1514:main.c        ****   Y *= F;
 4527              		.loc 1 1514 0
 4528 0038 7969     		ldr	r1, [r7, #20]	@ float
 4529 003a 3869     		ldr	r0, [r7, #16]	@ float
 4530 003c FFF7FEFF 		bl	__aeabi_fmul
 4531 0040 0346     		mov	r3, r0
 4532 0042 3B61     		str	r3, [r7, #16]	@ float
1515:main.c        ****   Y += 6.02197014179219f;
 4533              		.loc 1 1515 0
 4534 0044 1249     		ldr	r1, .L201+8
 4535 0046 3869     		ldr	r0, [r7, #16]	@ float
 4536 0048 FFF7FEFF 		bl	__aeabi_fadd
 4537 004c 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 108


 4538 004e 3B61     		str	r3, [r7, #16]	@ float
1516:main.c        ****   Y *= F;
 4539              		.loc 1 1516 0
 4540 0050 7969     		ldr	r1, [r7, #20]	@ float
 4541 0052 3869     		ldr	r0, [r7, #16]	@ float
 4542 0054 FFF7FEFF 		bl	__aeabi_fmul
 4543 0058 0346     		mov	r3, r0
 4544 005a 3B61     		str	r3, [r7, #16]	@ float
1517:main.c        ****   Y += -3.13396450166353f;
 4545              		.loc 1 1517 0
 4546 005c 0D49     		ldr	r1, .L201+12
 4547 005e 3869     		ldr	r0, [r7, #16]	@ float
 4548 0060 FFF7FEFF 		bl	__aeabi_fsub
 4549 0064 0346     		mov	r3, r0
 4550 0066 3B61     		str	r3, [r7, #16]	@ float
1518:main.c        ****   Y += E;
 4551              		.loc 1 1518 0
 4552 0068 FB68     		ldr	r3, [r7, #12]
 4553 006a 1846     		mov	r0, r3
 4554 006c FFF7FEFF 		bl	__aeabi_i2f
 4555 0070 0346     		mov	r3, r0
 4556 0072 1946     		mov	r1, r3
 4557 0074 3869     		ldr	r0, [r7, #16]	@ float
 4558 0076 FFF7FEFF 		bl	__aeabi_fadd
 4559 007a 0346     		mov	r3, r0
 4560 007c 3B61     		str	r3, [r7, #16]	@ float
1519:main.c        ****   return(Y);
 4561              		.loc 1 1519 0
 4562 007e 3B69     		ldr	r3, [r7, #16]	@ float
1520:main.c        **** }
 4563              		.loc 1 1520 0
 4564 0080 1846     		mov	r0, r3
 4565 0082 1837     		adds	r7, r7, #24
 4566              		.cfi_def_cfa_offset 8
 4567 0084 BD46     		mov	sp, r7
 4568              		.cfi_def_cfa_register 13
 4569              		@ sp needed
 4570 0086 80BD     		pop	{r7, pc}
 4571              	.L202:
 4572              		.align	2
 4573              	.L201:
 4574 0088 A8A19D3F 		.word	1067295144
 4575 008c F5CA8340 		.word	1082378997
 4576 0090 FBB3C040 		.word	1086370811
 4577 0094 E0924840 		.word	1078498016
 4578              		.cfi_endproc
 4579              	.LFE80:
 4580              		.size	log2f_approx, .-log2f_approx
 4581              		.global	prevNotes
 4582              		.bss
 4583              		.align	2
 4584              		.type	prevNotes, %object
 4585              		.size	prevNotes, 48
 4586              	prevNotes:
 4587 00b8 00000000 		.space	48
 4587      00000000 
 4587      00000000 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 109


 4587      00000000 
 4587      00000000 
 4588              		.section	.text.noteEvent,"ax",%progbits
 4589              		.align	2
 4590              		.global	noteEvent
 4591              		.thumb
 4592              		.thumb_func
 4593              		.type	noteEvent, %function
 4594              	noteEvent:
 4595              	.LFB81:
1521:main.c        **** 
1522:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
1523:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
1524:main.c        **** 
1525:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1526:main.c        **** 
1527:main.c        **** void noteEvent(int string)
1528:main.c        **** {
 4596              		.loc 1 1528 0
 4597              		.cfi_startproc
 4598              		@ args = 0, pretend = 0, frame = 24
 4599              		@ frame_needed = 1, uses_anonymous_args = 0
 4600 0000 80B5     		push	{r7, lr}
 4601              		.cfi_def_cfa_offset 8
 4602              		.cfi_offset 7, -8
 4603              		.cfi_offset 14, -4
 4604 0002 86B0     		sub	sp, sp, #24
 4605              		.cfi_def_cfa_offset 32
 4606 0004 00AF     		add	r7, sp, #0
 4607              		.cfi_def_cfa_register 7
 4608 0006 7860     		str	r0, [r7, #4]
1529:main.c        ****     
1530:main.c        ****     /*
1531:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1532:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1533:main.c        ****     int vInt  = (int) (v*4.0f);
1534:main.c        ****     if (vInt > 127)
1535:main.c        ****     {
1536:main.c        ****         vInt = 127;
1537:main.c        ****     }
1538:main.c        ****     */
1539:main.c        ****     uint16_t velocity = strings[string];
 4609              		.loc 1 1539 0
 4610 0008 2C4A     		ldr	r2, .L208
 4611 000a 7B68     		ldr	r3, [r7, #4]
 4612 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4613 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1540:main.c        ****     if (velocity > 0)
 4614              		.loc 1 1540 0
 4615 0012 FB8A     		ldrh	r3, [r7, #22]
 4616 0014 002B     		cmp	r3, #0
 4617 0016 43D0     		beq	.L204
 4618              	.LBB21:
1541:main.c        ****     {
1542:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1543:main.c        ****         float tempVel = (float)velocity;
 4619              		.loc 1 1543 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 110


 4620 0018 FB8A     		ldrh	r3, [r7, #22]
 4621 001a 1846     		mov	r0, r3
 4622 001c FFF7FEFF 		bl	__aeabi_ui2f
 4623 0020 0346     		mov	r3, r0
 4624 0022 3B61     		str	r3, [r7, #16]	@ float
1544:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 4625              		.loc 1 1544 0
 4626 0024 4FF05E51 		mov	r1, #931135488
 4627 0028 3869     		ldr	r0, [r7, #16]	@ float
 4628 002a FFF7FEFF 		bl	__aeabi_fmul
 4629 002e 0346     		mov	r3, r0
 4630 0030 3B61     		str	r3, [r7, #16]	@ float
1545:main.c        ****         tempVel = sqrtf(tempVel);
 4631              		.loc 1 1545 0
 4632 0032 3869     		ldr	r0, [r7, #16]	@ float
 4633 0034 FFF7FEFF 		bl	sqrtf
 4634 0038 3861     		str	r0, [r7, #16]	@ float
1546:main.c        ****         tempVel = tempVel - 0.0239372430f;
 4635              		.loc 1 1546 0
 4636 003a 2149     		ldr	r1, .L208+4
 4637 003c 3869     		ldr	r0, [r7, #16]	@ float
 4638 003e FFF7FEFF 		bl	__aeabi_fsub
 4639 0042 0346     		mov	r3, r0
 4640 0044 3B61     		str	r3, [r7, #16]	@ float
1547:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 4641              		.loc 1 1547 0
 4642 0046 1F49     		ldr	r1, .L208+8
 4643 0048 3869     		ldr	r0, [r7, #16]	@ float
 4644 004a FFF7FEFF 		bl	__aeabi_fmul
 4645 004e 0346     		mov	r3, r0
 4646 0050 3B61     		str	r3, [r7, #16]	@ float
1548:main.c        ****         velocity = (int)tempVel;
 4647              		.loc 1 1548 0
 4648 0052 3869     		ldr	r0, [r7, #16]	@ float
 4649 0054 FFF7FEFF 		bl	__aeabi_f2iz
 4650 0058 0346     		mov	r3, r0
 4651 005a FB82     		strh	r3, [r7, #22]	@ movhi
1549:main.c        ****         
1550:main.c        **** 
1551:main.c        ****         if (velocity > 127)
 4652              		.loc 1 1551 0
 4653 005c FB8A     		ldrh	r3, [r7, #22]
 4654 005e 7F2B     		cmp	r3, #127
 4655 0060 01D9     		bls	.L205
1552:main.c        ****         {
1553:main.c        ****             velocity = 127;
 4656              		.loc 1 1553 0
 4657 0062 7F23     		movs	r3, #127
 4658 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 4659              	.L205:
1554:main.c        ****         }
1555:main.c        ****         
1556:main.c        ****         //only update octave on note-ons
1557:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1558:main.c        ****         int noteToSend = ((octave - 4) * 12) + openStringMIDI_Int[string];
 4660              		.loc 1 1558 0
 4661 0066 184B     		ldr	r3, .L208+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 111


 4662 0068 1B68     		ldr	r3, [r3]
 4663 006a 1A1F     		subs	r2, r3, #4
 4664 006c 1346     		mov	r3, r2
 4665 006e 5B00     		lsls	r3, r3, #1
 4666 0070 1344     		add	r3, r3, r2
 4667 0072 9B00     		lsls	r3, r3, #2
 4668 0074 1946     		mov	r1, r3
 4669 0076 154A     		ldr	r2, .L208+16
 4670 0078 7B68     		ldr	r3, [r7, #4]
 4671 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4672 007e 0B44     		add	r3, r3, r1
 4673 0080 FB60     		str	r3, [r7, #12]
1559:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 4674              		.loc 1 1559 0
 4675 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4676 0084 DBB2     		uxtb	r3, r3
 4677 0086 1946     		mov	r1, r3
 4678 0088 7B68     		ldr	r3, [r7, #4]
 4679 008a 0133     		adds	r3, r3, #1
 4680 008c 1A46     		mov	r2, r3
 4681 008e F868     		ldr	r0, [r7, #12]
 4682 0090 FFF7FEFF 		bl	sendMIDINoteOn
1560:main.c        ****         prevNotes[string] = noteToSend;
 4683              		.loc 1 1560 0
 4684 0094 0E49     		ldr	r1, .L208+20
 4685 0096 7B68     		ldr	r3, [r7, #4]
 4686 0098 FA68     		ldr	r2, [r7, #12]
 4687 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 4688              	.LBE21:
1561:main.c        ****             
1562:main.c        ****     }
1563:main.c        ****     else
1564:main.c        ****     {
1565:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1566:main.c        ****     }
1567:main.c        **** 
1568:main.c        **** }
 4689              		.loc 1 1568 0
 4690 009e 09E0     		b	.L207
 4691              	.L204:
1565:main.c        ****     }
 4692              		.loc 1 1565 0
 4693 00a0 0B4A     		ldr	r2, .L208+20
 4694 00a2 7B68     		ldr	r3, [r7, #4]
 4695 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4696 00a8 7B68     		ldr	r3, [r7, #4]
 4697 00aa 0133     		adds	r3, r3, #1
 4698 00ac 1A46     		mov	r2, r3
 4699 00ae 0021     		movs	r1, #0
 4700 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 4701              	.L207:
 4702              		.loc 1 1568 0
 4703 00b4 00BF     		nop
 4704 00b6 1837     		adds	r7, r7, #24
 4705              		.cfi_def_cfa_offset 8
 4706 00b8 BD46     		mov	sp, r7
 4707              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 112


 4708              		@ sp needed
 4709 00ba 80BD     		pop	{r7, pc}
 4710              	.L209:
 4711              		.align	2
 4712              	.L208:
 4713 00bc 00000000 		.word	strings
 4714 00c0 0918C43C 		.word	1019484169
 4715 00c4 551D0243 		.word	1124212053
 4716 00c8 00000000 		.word	octave
 4717 00cc 00000000 		.word	openStringMIDI_Int
 4718 00d0 00000000 		.word	prevNotes
 4719              		.cfi_endproc
 4720              	.LFE81:
 4721              		.size	noteEvent, .-noteEvent
 4722              		.section	.text.CCEvent,"ax",%progbits
 4723              		.align	2
 4724              		.global	CCEvent
 4725              		.thumb
 4726              		.thumb_func
 4727              		.type	CCEvent, %function
 4728              	CCEvent:
 4729              	.LFB82:
1569:main.c        **** 
1570:main.c        **** void CCEvent(int cc, int val)
1571:main.c        **** {
 4730              		.loc 1 1571 0
 4731              		.cfi_startproc
 4732              		@ args = 0, pretend = 0, frame = 8
 4733              		@ frame_needed = 1, uses_anonymous_args = 0
 4734 0000 80B5     		push	{r7, lr}
 4735              		.cfi_def_cfa_offset 8
 4736              		.cfi_offset 7, -8
 4737              		.cfi_offset 14, -4
 4738 0002 82B0     		sub	sp, sp, #8
 4739              		.cfi_def_cfa_offset 16
 4740 0004 00AF     		add	r7, sp, #0
 4741              		.cfi_def_cfa_register 7
 4742 0006 7860     		str	r0, [r7, #4]
 4743 0008 3960     		str	r1, [r7]
1572:main.c        ****     
1573:main.c        ****     sendMIDIControlChange(cc, val, 0);
 4744              		.loc 1 1573 0
 4745 000a 0022     		movs	r2, #0
 4746 000c 3968     		ldr	r1, [r7]
 4747 000e 7868     		ldr	r0, [r7, #4]
 4748 0010 FFF7FEFF 		bl	sendMIDIControlChange
1574:main.c        **** }
 4749              		.loc 1 1574 0
 4750 0014 00BF     		nop
 4751 0016 0837     		adds	r7, r7, #8
 4752              		.cfi_def_cfa_offset 8
 4753 0018 BD46     		mov	sp, r7
 4754              		.cfi_def_cfa_register 13
 4755              		@ sp needed
 4756 001a 80BD     		pop	{r7, pc}
 4757              		.cfi_endproc
 4758              	.LFE82:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 113


 4759              		.size	CCEvent, .-CCEvent
 4760              		.section	.text.sendMIDINoteOn,"ax",%progbits
 4761              		.align	2
 4762              		.global	sendMIDINoteOn
 4763              		.thumb
 4764              		.thumb_func
 4765              		.type	sendMIDINoteOn, %function
 4766              	sendMIDINoteOn:
 4767              	.LFB83:
1575:main.c        **** 
1576:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1577:main.c        **** {  
 4768              		.loc 1 1577 0
 4769              		.cfi_startproc
 4770              		@ args = 0, pretend = 0, frame = 16
 4771              		@ frame_needed = 1, uses_anonymous_args = 0
 4772 0000 80B5     		push	{r7, lr}
 4773              		.cfi_def_cfa_offset 8
 4774              		.cfi_offset 7, -8
 4775              		.cfi_offset 14, -4
 4776 0002 84B0     		sub	sp, sp, #16
 4777              		.cfi_def_cfa_offset 24
 4778 0004 00AF     		add	r7, sp, #0
 4779              		.cfi_def_cfa_register 7
 4780 0006 F860     		str	r0, [r7, #12]
 4781 0008 B960     		str	r1, [r7, #8]
 4782 000a 7A60     		str	r2, [r7, #4]
1578:main.c        ****    
1579:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 4783              		.loc 1 1579 0
 4784 000c 7B68     		ldr	r3, [r7, #4]
 4785 000e DBB2     		uxtb	r3, r3
 4786 0010 703B     		subs	r3, r3, #112
 4787 0012 DAB2     		uxtb	r2, r3
 4788 0014 114B     		ldr	r3, .L213
 4789 0016 1A70     		strb	r2, [r3]
1580:main.c        ****     midiMsg[1] = MIDInoteNum;
 4790              		.loc 1 1580 0
 4791 0018 FB68     		ldr	r3, [r7, #12]
 4792 001a DAB2     		uxtb	r2, r3
 4793 001c 0F4B     		ldr	r3, .L213
 4794 001e 5A70     		strb	r2, [r3, #1]
1581:main.c        ****     midiMsg[2] = velocity;	
 4795              		.loc 1 1581 0
 4796 0020 BB68     		ldr	r3, [r7, #8]
 4797 0022 DAB2     		uxtb	r2, r3
 4798 0024 0D4B     		ldr	r3, .L213
 4799 0026 9A70     		strb	r2, [r3, #2]
1582:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 4800              		.loc 1 1582 0
 4801 0028 0D4B     		ldr	r3, .L213+4
 4802 002a 1B78     		ldrb	r3, [r3]
 4803 002c DBB2     		uxtb	r3, r3
 4804 002e 002B     		cmp	r3, #0
 4805 0030 09D0     		beq	.L212
 4806              		.loc 1 1582 0 is_stmt 0 discriminator 1
 4807 0032 FFF7FEFF 		bl	USB_VBusPresent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 114


 4808 0036 0346     		mov	r3, r0
 4809 0038 002B     		cmp	r3, #0
 4810 003a 04D0     		beq	.L212
1583:main.c        ****     {
1584:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 4811              		.loc 1 1584 0 is_stmt 1
 4812 003c 0022     		movs	r2, #0
 4813 003e 0749     		ldr	r1, .L213
 4814 0040 0320     		movs	r0, #3
 4815 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 4816              	.L212:
1585:main.c        ****     } 
1586:main.c        ****     midiSent += 4;
 4817              		.loc 1 1586 0
 4818 0046 074B     		ldr	r3, .L213+8
 4819 0048 1B88     		ldrh	r3, [r3]
 4820 004a 0433     		adds	r3, r3, #4
 4821 004c 9AB2     		uxth	r2, r3
 4822 004e 054B     		ldr	r3, .L213+8
 4823 0050 1A80     		strh	r2, [r3]	@ movhi
1587:main.c        **** }
 4824              		.loc 1 1587 0
 4825 0052 00BF     		nop
 4826 0054 1037     		adds	r7, r7, #16
 4827              		.cfi_def_cfa_offset 8
 4828 0056 BD46     		mov	sp, r7
 4829              		.cfi_def_cfa_register 13
 4830              		@ sp needed
 4831 0058 80BD     		pop	{r7, pc}
 4832              	.L214:
 4833 005a 00BF     		.align	2
 4834              	.L213:
 4835 005c 00000000 		.word	midiMsg
 4836 0060 00000000 		.word	USB_active
 4837 0064 00000000 		.word	midiSent
 4838              		.cfi_endproc
 4839              	.LFE83:
 4840              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 4841              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 4842              		.align	2
 4843              		.global	sendMIDIPolyKeyPressure
 4844              		.thumb
 4845              		.thumb_func
 4846              		.type	sendMIDIPolyKeyPressure, %function
 4847              	sendMIDIPolyKeyPressure:
 4848              	.LFB84:
1588:main.c        **** 
1589:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1590:main.c        **** {
 4849              		.loc 1 1590 0
 4850              		.cfi_startproc
 4851              		@ args = 0, pretend = 0, frame = 16
 4852              		@ frame_needed = 1, uses_anonymous_args = 0
 4853 0000 80B5     		push	{r7, lr}
 4854              		.cfi_def_cfa_offset 8
 4855              		.cfi_offset 7, -8
 4856              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 115


 4857 0002 84B0     		sub	sp, sp, #16
 4858              		.cfi_def_cfa_offset 24
 4859 0004 00AF     		add	r7, sp, #0
 4860              		.cfi_def_cfa_register 7
 4861 0006 F860     		str	r0, [r7, #12]
 4862 0008 B960     		str	r1, [r7, #8]
 4863 000a 7A60     		str	r2, [r7, #4]
1591:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 4864              		.loc 1 1591 0
 4865 000c 7B68     		ldr	r3, [r7, #4]
 4866 000e DBB2     		uxtb	r3, r3
 4867 0010 603B     		subs	r3, r3, #96
 4868 0012 DAB2     		uxtb	r2, r3
 4869 0014 114B     		ldr	r3, .L217
 4870 0016 1A70     		strb	r2, [r3]
1592:main.c        ****     midiMsg[1] = MIDInoteNum;
 4871              		.loc 1 1592 0
 4872 0018 FB68     		ldr	r3, [r7, #12]
 4873 001a DAB2     		uxtb	r2, r3
 4874 001c 0F4B     		ldr	r3, .L217
 4875 001e 5A70     		strb	r2, [r3, #1]
1593:main.c        ****     midiMsg[2] = pressure;		
 4876              		.loc 1 1593 0
 4877 0020 BB68     		ldr	r3, [r7, #8]
 4878 0022 DAB2     		uxtb	r2, r3
 4879 0024 0D4B     		ldr	r3, .L217
 4880 0026 9A70     		strb	r2, [r3, #2]
1594:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 4881              		.loc 1 1594 0
 4882 0028 0D4B     		ldr	r3, .L217+4
 4883 002a 1B78     		ldrb	r3, [r3]
 4884 002c DBB2     		uxtb	r3, r3
 4885 002e 002B     		cmp	r3, #0
 4886 0030 09D0     		beq	.L216
 4887              		.loc 1 1594 0 is_stmt 0 discriminator 1
 4888 0032 FFF7FEFF 		bl	USB_VBusPresent
 4889 0036 0346     		mov	r3, r0
 4890 0038 002B     		cmp	r3, #0
 4891 003a 04D0     		beq	.L216
1595:main.c        ****     {
1596:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 4892              		.loc 1 1596 0 is_stmt 1
 4893 003c 0022     		movs	r2, #0
 4894 003e 0749     		ldr	r1, .L217
 4895 0040 0320     		movs	r0, #3
 4896 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 4897              	.L216:
1597:main.c        ****     } 
1598:main.c        ****     midiSent += 4;
 4898              		.loc 1 1598 0
 4899 0046 074B     		ldr	r3, .L217+8
 4900 0048 1B88     		ldrh	r3, [r3]
 4901 004a 0433     		adds	r3, r3, #4
 4902 004c 9AB2     		uxth	r2, r3
 4903 004e 054B     		ldr	r3, .L217+8
 4904 0050 1A80     		strh	r2, [r3]	@ movhi
1599:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 116


 4905              		.loc 1 1599 0
 4906 0052 00BF     		nop
 4907 0054 1037     		adds	r7, r7, #16
 4908              		.cfi_def_cfa_offset 8
 4909 0056 BD46     		mov	sp, r7
 4910              		.cfi_def_cfa_register 13
 4911              		@ sp needed
 4912 0058 80BD     		pop	{r7, pc}
 4913              	.L218:
 4914 005a 00BF     		.align	2
 4915              	.L217:
 4916 005c 00000000 		.word	midiMsg
 4917 0060 00000000 		.word	USB_active
 4918 0064 00000000 		.word	midiSent
 4919              		.cfi_endproc
 4920              	.LFE84:
 4921              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 4922              		.section	.text.sendMIDIControlChange,"ax",%progbits
 4923              		.align	2
 4924              		.global	sendMIDIControlChange
 4925              		.thumb
 4926              		.thumb_func
 4927              		.type	sendMIDIControlChange, %function
 4928              	sendMIDIControlChange:
 4929              	.LFB85:
1600:main.c        **** 
1601:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1602:main.c        **** {
 4930              		.loc 1 1602 0
 4931              		.cfi_startproc
 4932              		@ args = 0, pretend = 0, frame = 16
 4933              		@ frame_needed = 1, uses_anonymous_args = 0
 4934 0000 80B5     		push	{r7, lr}
 4935              		.cfi_def_cfa_offset 8
 4936              		.cfi_offset 7, -8
 4937              		.cfi_offset 14, -4
 4938 0002 84B0     		sub	sp, sp, #16
 4939              		.cfi_def_cfa_offset 24
 4940 0004 00AF     		add	r7, sp, #0
 4941              		.cfi_def_cfa_register 7
 4942 0006 F860     		str	r0, [r7, #12]
 4943 0008 B960     		str	r1, [r7, #8]
 4944 000a 7A60     		str	r2, [r7, #4]
1603:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 4945              		.loc 1 1603 0
 4946 000c 7B68     		ldr	r3, [r7, #4]
 4947 000e DBB2     		uxtb	r3, r3
 4948 0010 503B     		subs	r3, r3, #80
 4949 0012 DAB2     		uxtb	r2, r3
 4950 0014 114B     		ldr	r3, .L221
 4951 0016 1A70     		strb	r2, [r3]
1604:main.c        ****     midiMsg[1] = CCnum;
 4952              		.loc 1 1604 0
 4953 0018 FB68     		ldr	r3, [r7, #12]
 4954 001a DAB2     		uxtb	r2, r3
 4955 001c 0F4B     		ldr	r3, .L221
 4956 001e 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 117


1605:main.c        ****     midiMsg[2] = CCval;			
 4957              		.loc 1 1605 0
 4958 0020 BB68     		ldr	r3, [r7, #8]
 4959 0022 DAB2     		uxtb	r2, r3
 4960 0024 0D4B     		ldr	r3, .L221
 4961 0026 9A70     		strb	r2, [r3, #2]
1606:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 4962              		.loc 1 1606 0
 4963 0028 0D4B     		ldr	r3, .L221+4
 4964 002a 1B78     		ldrb	r3, [r3]
 4965 002c DBB2     		uxtb	r3, r3
 4966 002e 002B     		cmp	r3, #0
 4967 0030 09D0     		beq	.L220
 4968              		.loc 1 1606 0 is_stmt 0 discriminator 1
 4969 0032 FFF7FEFF 		bl	USB_VBusPresent
 4970 0036 0346     		mov	r3, r0
 4971 0038 002B     		cmp	r3, #0
 4972 003a 04D0     		beq	.L220
1607:main.c        ****     {
1608:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 4973              		.loc 1 1608 0 is_stmt 1
 4974 003c 0022     		movs	r2, #0
 4975 003e 0749     		ldr	r1, .L221
 4976 0040 0320     		movs	r0, #3
 4977 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 4978              	.L220:
1609:main.c        ****     } 
1610:main.c        ****     midiSent += 4;
 4979              		.loc 1 1610 0
 4980 0046 074B     		ldr	r3, .L221+8
 4981 0048 1B88     		ldrh	r3, [r3]
 4982 004a 0433     		adds	r3, r3, #4
 4983 004c 9AB2     		uxth	r2, r3
 4984 004e 054B     		ldr	r3, .L221+8
 4985 0050 1A80     		strh	r2, [r3]	@ movhi
1611:main.c        **** }
 4986              		.loc 1 1611 0
 4987 0052 00BF     		nop
 4988 0054 1037     		adds	r7, r7, #16
 4989              		.cfi_def_cfa_offset 8
 4990 0056 BD46     		mov	sp, r7
 4991              		.cfi_def_cfa_register 13
 4992              		@ sp needed
 4993 0058 80BD     		pop	{r7, pc}
 4994              	.L222:
 4995 005a 00BF     		.align	2
 4996              	.L221:
 4997 005c 00000000 		.word	midiMsg
 4998 0060 00000000 		.word	USB_active
 4999 0064 00000000 		.word	midiSent
 5000              		.cfi_endproc
 5001              	.LFE85:
 5002              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 5003              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 5004              		.align	2
 5005              		.global	sendMIDIPitchBend
 5006              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 118


 5007              		.thumb_func
 5008              		.type	sendMIDIPitchBend, %function
 5009              	sendMIDIPitchBend:
 5010              	.LFB86:
1612:main.c        **** 
1613:main.c        **** void sendMIDIPitchBend(int val, int channel)
1614:main.c        **** {
 5011              		.loc 1 1614 0
 5012              		.cfi_startproc
 5013              		@ args = 0, pretend = 0, frame = 8
 5014              		@ frame_needed = 1, uses_anonymous_args = 0
 5015 0000 80B5     		push	{r7, lr}
 5016              		.cfi_def_cfa_offset 8
 5017              		.cfi_offset 7, -8
 5018              		.cfi_offset 14, -4
 5019 0002 82B0     		sub	sp, sp, #8
 5020              		.cfi_def_cfa_offset 16
 5021 0004 00AF     		add	r7, sp, #0
 5022              		.cfi_def_cfa_register 7
 5023 0006 7860     		str	r0, [r7, #4]
 5024 0008 3960     		str	r1, [r7]
1615:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 5025              		.loc 1 1615 0
 5026 000a 3B68     		ldr	r3, [r7]
 5027 000c DBB2     		uxtb	r3, r3
 5028 000e 203B     		subs	r3, r3, #32
 5029 0010 DAB2     		uxtb	r2, r3
 5030 0012 134B     		ldr	r3, .L225
 5031 0014 1A70     		strb	r2, [r3]
1616:main.c        ****     midiMsg[1] = (val & 127); //LSB
 5032              		.loc 1 1616 0
 5033 0016 7B68     		ldr	r3, [r7, #4]
 5034 0018 DBB2     		uxtb	r3, r3
 5035 001a 03F07F03 		and	r3, r3, #127
 5036 001e DAB2     		uxtb	r2, r3
 5037 0020 0F4B     		ldr	r3, .L225
 5038 0022 5A70     		strb	r2, [r3, #1]
1617:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 5039              		.loc 1 1617 0
 5040 0024 7B68     		ldr	r3, [r7, #4]
 5041 0026 DB11     		asrs	r3, r3, #7
 5042 0028 DAB2     		uxtb	r2, r3
 5043 002a 0D4B     		ldr	r3, .L225
 5044 002c 9A70     		strb	r2, [r3, #2]
1618:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 5045              		.loc 1 1618 0
 5046 002e 0D4B     		ldr	r3, .L225+4
 5047 0030 1B78     		ldrb	r3, [r3]
 5048 0032 DBB2     		uxtb	r3, r3
 5049 0034 002B     		cmp	r3, #0
 5050 0036 09D0     		beq	.L224
 5051              		.loc 1 1618 0 is_stmt 0 discriminator 1
 5052 0038 FFF7FEFF 		bl	USB_VBusPresent
 5053 003c 0346     		mov	r3, r0
 5054 003e 002B     		cmp	r3, #0
 5055 0040 04D0     		beq	.L224
1619:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 119


1620:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 5056              		.loc 1 1620 0 is_stmt 1
 5057 0042 0022     		movs	r2, #0
 5058 0044 0649     		ldr	r1, .L225
 5059 0046 0320     		movs	r0, #3
 5060 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 5061              	.L224:
1621:main.c        ****     } 
1622:main.c        ****     midiSent += 4;
 5062              		.loc 1 1622 0
 5063 004c 064B     		ldr	r3, .L225+8
 5064 004e 1B88     		ldrh	r3, [r3]
 5065 0050 0433     		adds	r3, r3, #4
 5066 0052 9AB2     		uxth	r2, r3
 5067 0054 044B     		ldr	r3, .L225+8
 5068 0056 1A80     		strh	r2, [r3]	@ movhi
1623:main.c        **** }
 5069              		.loc 1 1623 0
 5070 0058 00BF     		nop
 5071 005a 0837     		adds	r7, r7, #8
 5072              		.cfi_def_cfa_offset 8
 5073 005c BD46     		mov	sp, r7
 5074              		.cfi_def_cfa_register 13
 5075              		@ sp needed
 5076 005e 80BD     		pop	{r7, pc}
 5077              	.L226:
 5078              		.align	2
 5079              	.L225:
 5080 0060 00000000 		.word	midiMsg
 5081 0064 00000000 		.word	USB_active
 5082 0068 00000000 		.word	midiSent
 5083              		.cfi_endproc
 5084              	.LFE86:
 5085              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 5086              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 5087              		.align	2
 5088              		.global	sendMIDIAllNotesOff
 5089              		.thumb
 5090              		.thumb_func
 5091              		.type	sendMIDIAllNotesOff, %function
 5092              	sendMIDIAllNotesOff:
 5093              	.LFB87:
1624:main.c        **** 
1625:main.c        **** void sendMIDIAllNotesOff(void)
1626:main.c        **** {   
 5094              		.loc 1 1626 0
 5095              		.cfi_startproc
 5096              		@ args = 0, pretend = 0, frame = 0
 5097              		@ frame_needed = 1, uses_anonymous_args = 0
 5098 0000 80B5     		push	{r7, lr}
 5099              		.cfi_def_cfa_offset 8
 5100              		.cfi_offset 7, -8
 5101              		.cfi_offset 14, -4
 5102 0002 00AF     		add	r7, sp, #0
 5103              		.cfi_def_cfa_register 7
1627:main.c        ****     for (i = 0; i < 128; i++)
 5104              		.loc 1 1627 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 120


 5105 0004 144B     		ldr	r3, .L231
 5106 0006 0022     		movs	r2, #0
 5107 0008 1A70     		strb	r2, [r3]
 5108 000a 1EE0     		b	.L228
 5109              	.L230:
1628:main.c        ****     {
1629:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 5110              		.loc 1 1629 0
 5111 000c 134B     		ldr	r3, .L231+4
 5112 000e 9022     		movs	r2, #144
 5113 0010 1A70     		strb	r2, [r3]
1630:main.c        ****         midiMsg[1] = i;
 5114              		.loc 1 1630 0
 5115 0012 114B     		ldr	r3, .L231
 5116 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5117 0016 114B     		ldr	r3, .L231+4
 5118 0018 5A70     		strb	r2, [r3, #1]
1631:main.c        ****         midiMsg[2] = 0;	
 5119              		.loc 1 1631 0
 5120 001a 104B     		ldr	r3, .L231+4
 5121 001c 0022     		movs	r2, #0
 5122 001e 9A70     		strb	r2, [r3, #2]
1632:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 5123              		.loc 1 1632 0
 5124 0020 0F4B     		ldr	r3, .L231+8
 5125 0022 1B78     		ldrb	r3, [r3]
 5126 0024 DBB2     		uxtb	r3, r3
 5127 0026 002B     		cmp	r3, #0
 5128 0028 09D0     		beq	.L229
 5129              		.loc 1 1632 0 is_stmt 0 discriminator 1
 5130 002a FFF7FEFF 		bl	USB_VBusPresent
 5131 002e 0346     		mov	r3, r0
 5132 0030 002B     		cmp	r3, #0
 5133 0032 04D0     		beq	.L229
1633:main.c        ****         {       
1634:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 5134              		.loc 1 1634 0 is_stmt 1
 5135 0034 0022     		movs	r2, #0
 5136 0036 0949     		ldr	r1, .L231+4
 5137 0038 0320     		movs	r0, #3
 5138 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
 5139              	.L229:
1627:main.c        ****     {
 5140              		.loc 1 1627 0 discriminator 2
 5141 003e 064B     		ldr	r3, .L231
 5142 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5143 0042 0133     		adds	r3, r3, #1
 5144 0044 DAB2     		uxtb	r2, r3
 5145 0046 044B     		ldr	r3, .L231
 5146 0048 1A70     		strb	r2, [r3]
 5147              	.L228:
1627:main.c        ****     {
 5148              		.loc 1 1627 0 is_stmt 0 discriminator 1
 5149 004a 034B     		ldr	r3, .L231
 5150 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5151 004e 5BB2     		sxtb	r3, r3
 5152 0050 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 121


 5153 0052 DBDA     		bge	.L230
1635:main.c        ****         }
1636:main.c        ****     }
1637:main.c        **** }
 5154              		.loc 1 1637 0 is_stmt 1
 5155 0054 00BF     		nop
 5156 0056 80BD     		pop	{r7, pc}
 5157              	.L232:
 5158              		.align	2
 5159              	.L231:
 5160 0058 00000000 		.word	i
 5161 005c 00000000 		.word	midiMsg
 5162 0060 00000000 		.word	USB_active
 5163              		.cfi_endproc
 5164              	.LFE87:
 5165              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 5166              		.global	checkStatus
 5167              		.bss
 5168              		.type	checkStatus, %object
 5169              		.size	checkStatus, 1
 5170              	checkStatus:
 5171 00e8 00       		.space	1
 5172              		.global	checkBase
 5173              		.type	checkBase, %object
 5174              		.size	checkBase, 1
 5175              	checkBase:
 5176 00e9 00       		.space	1
 5177              		.global	SPI_errors
 5178 00ea 0000     		.align	2
 5179              		.type	SPI_errors, %object
 5180              		.size	SPI_errors, 4
 5181              	SPI_errors:
 5182 00ec 00000000 		.space	4
 5183              		.section	.text.parseSysex,"ax",%progbits
 5184              		.align	2
 5185              		.global	parseSysex
 5186              		.thumb
 5187              		.thumb_func
 5188              		.type	parseSysex, %function
 5189              	parseSysex:
 5190              	.LFB88:
1638:main.c        **** 
1639:main.c        **** 
1640:main.c        **** 
1641:main.c        **** 
1642:main.c        **** volatile uint8_t checkStatus = 0;
1643:main.c        **** volatile uint8_t checkBase = 0;
1644:main.c        **** 
1645:main.c        **** 
1646:main.c        **** 
1647:main.c        **** int SPI_errors = 0;
1648:main.c        **** 
1649:main.c        **** void parseSysex(void)
1650:main.c        **** {
 5191              		.loc 1 1650 0
 5192              		.cfi_startproc
 5193              		@ args = 0, pretend = 0, frame = 48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 122


 5194              		@ frame_needed = 1, uses_anonymous_args = 0
 5195 0000 90B5     		push	{r4, r7, lr}
 5196              		.cfi_def_cfa_offset 12
 5197              		.cfi_offset 4, -12
 5198              		.cfi_offset 7, -8
 5199              		.cfi_offset 14, -4
 5200 0002 8DB0     		sub	sp, sp, #52
 5201              		.cfi_def_cfa_offset 64
 5202 0004 00AF     		add	r7, sp, #0
 5203              		.cfi_def_cfa_register 7
1651:main.c        ****     parsingSysex = 1;
 5204              		.loc 1 1651 0
 5205 0006 8D4B     		ldr	r3, .L276
 5206 0008 0122     		movs	r2, #1
 5207 000a 1A70     		strb	r2, [r3]
1652:main.c        ****     //0 = it's a preset
1653:main.c        ****     if (sysexBuffer[0] == 0)
 5208              		.loc 1 1653 0
 5209 000c 8C4B     		ldr	r3, .L276+4
 5210 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5211 0010 002B     		cmp	r3, #0
 5212 0012 40F04982 		bne	.L234
 5213              	.LBB22:
1654:main.c        ****     {
1655:main.c        ****         //if (sysexBuffer[2] == 0)
1656:main.c        ****         {
1657:main.c        ****             sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. M
 5214              		.loc 1 1657 0
 5215 0016 8B4B     		ldr	r3, .L276+8
 5216 0018 0122     		movs	r2, #1
 5217 001a 1A70     		strb	r2, [r3]
1658:main.c        ****             currentFloat = 0;
 5218              		.loc 1 1658 0
 5219 001c 8A4B     		ldr	r3, .L276+12
 5220 001e 0022     		movs	r2, #0
 5221 0020 1A60     		str	r2, [r3]
1659:main.c        ****             presetArraySection = presetName;
 5222              		.loc 1 1659 0
 5223 0022 8A4B     		ldr	r3, .L276+16
 5224 0024 0022     		movs	r2, #0
 5225 0026 1A70     		strb	r2, [r3]
1660:main.c        ****         }
1661:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 5226              		.loc 1 1661 0
 5227 0028 854B     		ldr	r3, .L276+4
 5228 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5229 002c 884B     		ldr	r3, .L276+20
 5230 002e 1A70     		strb	r2, [r3]
1662:main.c        ****         
1663:main.c        ****         union breakFloat theVal;
1664:main.c        ****         uint32_t i = 2;
 5231              		.loc 1 1664 0
 5232 0030 0223     		movs	r3, #2
 5233 0032 FB62     		str	r3, [r7, #44]
1665:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 5234              		.loc 1 1665 0
 5235 0034 1023     		movs	r3, #16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 123


 5236 0036 FB77     		strb	r3, [r7, #31]
1666:main.c        ****         for (; i < stoppingPoint; i++)
 5237              		.loc 1 1666 0
 5238 0038 22E0     		b	.L235
 5239              	.L236:
1667:main.c        ****         {
1668:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 5240              		.loc 1 1668 0 discriminator 2
 5241 003a FB6A     		ldr	r3, [r7, #44]
 5242 003c 023B     		subs	r3, r3, #2
 5243 003e 8049     		ldr	r1, .L276+4
 5244 0040 FA6A     		ldr	r2, [r7, #44]
 5245 0042 0A44     		add	r2, r2, r1
 5246 0044 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5247 0046 02F07F02 		and	r2, r2, #127
 5248 004a D1B2     		uxtb	r1, r2
 5249 004c 814A     		ldr	r2, .L276+24
 5250 004e D154     		strb	r1, [r2, r3]
1669:main.c        ****             presetNamesArray[presetNumberToWrite][i-2] = sysexBuffer[i] & 127;
 5251              		.loc 1 1669 0 discriminator 2
 5252 0050 7F4B     		ldr	r3, .L276+20
 5253 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5254 0054 1846     		mov	r0, r3
 5255 0056 FB6A     		ldr	r3, [r7, #44]
 5256 0058 9A1E     		subs	r2, r3, #2
 5257 005a 7949     		ldr	r1, .L276+4
 5258 005c FB6A     		ldr	r3, [r7, #44]
 5259 005e 0B44     		add	r3, r3, r1
 5260 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5261 0062 03F07F03 		and	r3, r3, #127
 5262 0066 DCB2     		uxtb	r4, r3
 5263 0068 7B49     		ldr	r1, .L276+28
 5264 006a 0346     		mov	r3, r0
 5265 006c DB00     		lsls	r3, r3, #3
 5266 006e 1B1A     		subs	r3, r3, r0
 5267 0070 5B00     		lsls	r3, r3, #1
 5268 0072 0B44     		add	r3, r3, r1
 5269 0074 1344     		add	r3, r3, r2
 5270 0076 2246     		mov	r2, r4
 5271 0078 1A70     		strb	r2, [r3]
1666:main.c        ****         for (; i < stoppingPoint; i++)
 5272              		.loc 1 1666 0 discriminator 2
 5273 007a FB6A     		ldr	r3, [r7, #44]
 5274 007c 0133     		adds	r3, r3, #1
 5275 007e FB62     		str	r3, [r7, #44]
 5276              	.L235:
1666:main.c        ****         for (; i < stoppingPoint; i++)
 5277              		.loc 1 1666 0 is_stmt 0 discriminator 1
 5278 0080 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 5279 0082 FB6A     		ldr	r3, [r7, #44]
 5280 0084 9A42     		cmp	r2, r3
 5281 0086 D8D8     		bhi	.L236
1670:main.c        ****         }
1671:main.c        ****         uint16_t valsStart = NAME_LENGTH_IN_BYTES;
 5282              		.loc 1 1671 0 is_stmt 1
 5283 0088 0E23     		movs	r3, #14
 5284 008a BB83     		strh	r3, [r7, #28]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 124


1672:main.c        ****         
1673:main.c        ****         presetArraySection = initialVals;
 5285              		.loc 1 1673 0
 5286 008c 6F4B     		ldr	r3, .L276+16
 5287 008e 0222     		movs	r2, #2
 5288 0090 1A70     		strb	r2, [r3]
1674:main.c        ****         for (; i < sysexPointer; i = i+5)
 5289              		.loc 1 1674 0
 5290 0092 02E2     		b	.L237
 5291              	.L258:
1675:main.c        ****         {
1676:main.c        ****             theVal.u32 = 0;
 5292              		.loc 1 1676 0
 5293 0094 0023     		movs	r3, #0
 5294 0096 BB60     		str	r3, [r7, #8]
1677:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 5295              		.loc 1 1677 0
 5296 0098 BB68     		ldr	r3, [r7, #8]
 5297 009a 6949     		ldr	r1, .L276+4
 5298 009c FA6A     		ldr	r2, [r7, #44]
 5299 009e 0A44     		add	r2, r2, r1
 5300 00a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5301 00a2 1207     		lsls	r2, r2, #28
 5302 00a4 1343     		orrs	r3, r3, r2
 5303 00a6 BB60     		str	r3, [r7, #8]
1678:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 5304              		.loc 1 1678 0
 5305 00a8 BB68     		ldr	r3, [r7, #8]
 5306 00aa FA6A     		ldr	r2, [r7, #44]
 5307 00ac 0132     		adds	r2, r2, #1
 5308 00ae 6449     		ldr	r1, .L276+4
 5309 00b0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5310 00b2 5205     		lsls	r2, r2, #21
 5311 00b4 1343     		orrs	r3, r3, r2
 5312 00b6 BB60     		str	r3, [r7, #8]
1679:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 5313              		.loc 1 1679 0
 5314 00b8 BB68     		ldr	r3, [r7, #8]
 5315 00ba FA6A     		ldr	r2, [r7, #44]
 5316 00bc 0232     		adds	r2, r2, #2
 5317 00be 6049     		ldr	r1, .L276+4
 5318 00c0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5319 00c2 9203     		lsls	r2, r2, #14
 5320 00c4 1343     		orrs	r3, r3, r2
 5321 00c6 BB60     		str	r3, [r7, #8]
1680:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 5322              		.loc 1 1680 0
 5323 00c8 BB68     		ldr	r3, [r7, #8]
 5324 00ca FA6A     		ldr	r2, [r7, #44]
 5325 00cc 0332     		adds	r2, r2, #3
 5326 00ce 5C49     		ldr	r1, .L276+4
 5327 00d0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5328 00d2 D201     		lsls	r2, r2, #7
 5329 00d4 1343     		orrs	r3, r3, r2
 5330 00d6 BB60     		str	r3, [r7, #8]
1681:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 5331              		.loc 1 1681 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 125


 5332 00d8 BA68     		ldr	r2, [r7, #8]
 5333 00da FB6A     		ldr	r3, [r7, #44]
 5334 00dc 0433     		adds	r3, r3, #4
 5335 00de 5849     		ldr	r1, .L276+4
 5336 00e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5337 00e2 03F07F03 		and	r3, r3, #127
 5338 00e6 1343     		orrs	r3, r3, r2
 5339 00e8 BB60     		str	r3, [r7, #8]
1682:main.c        ****             testVal = theVal.f;
 5340              		.loc 1 1682 0
 5341 00ea BB68     		ldr	r3, [r7, #8]	@ float
 5342 00ec 5B4A     		ldr	r2, .L276+32
 5343 00ee 1360     		str	r3, [r2]	@ float
1683:main.c        ****             if (presetArraySection == initialVals)
 5344              		.loc 1 1683 0
 5345 00f0 564B     		ldr	r3, .L276+16
 5346 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5347 00f4 022B     		cmp	r3, #2
 5348 00f6 40F0C780 		bne	.L238
1684:main.c        ****             {
1685:main.c        **** 
1686:main.c        ****                 if (currentFloat == 0)
 5349              		.loc 1 1686 0
 5350 00fa 534B     		ldr	r3, .L276+12
 5351 00fc 1B68     		ldr	r3, [r3]
 5352 00fe 002B     		cmp	r3, #0
 5353 0100 22D1     		bne	.L239
1687:main.c        ****                 {
1688:main.c        ****                     valsCount = (uint16_t) theVal.f;
 5354              		.loc 1 1688 0
 5355 0102 BB68     		ldr	r3, [r7, #8]	@ float
 5356 0104 1846     		mov	r0, r3
 5357 0106 FFF7FEFF 		bl	__aeabi_f2uiz
 5358 010a 0346     		mov	r3, r0
 5359 010c 9AB2     		uxth	r2, r3
 5360 010e 544B     		ldr	r3, .L276+36
 5361 0110 1A80     		strh	r2, [r3]	@ movhi
1689:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 5362              		.loc 1 1689 0
 5363 0112 BA8B     		ldrh	r2, [r7, #28]
 5364 0114 4C4B     		ldr	r3, .L276+12
 5365 0116 1B68     		ldr	r3, [r3]
 5366 0118 591C     		adds	r1, r3, #1
 5367 011a 4B48     		ldr	r0, .L276+12
 5368 011c 0160     		str	r1, [r0]
 5369 011e 1344     		add	r3, r3, r2
 5370 0120 4F4A     		ldr	r2, .L276+36
 5371 0122 1288     		ldrh	r2, [r2]
 5372 0124 120A     		lsrs	r2, r2, #8
 5373 0126 92B2     		uxth	r2, r2
 5374 0128 D1B2     		uxtb	r1, r2
 5375 012a 4A4A     		ldr	r2, .L276+24
 5376 012c D154     		strb	r1, [r2, r3]
1690:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 5377              		.loc 1 1690 0
 5378 012e BA8B     		ldrh	r2, [r7, #28]
 5379 0130 454B     		ldr	r3, .L276+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 126


 5380 0132 1B68     		ldr	r3, [r3]
 5381 0134 591C     		adds	r1, r3, #1
 5382 0136 4448     		ldr	r0, .L276+12
 5383 0138 0160     		str	r1, [r0]
 5384 013a 1344     		add	r3, r3, r2
 5385 013c 484A     		ldr	r2, .L276+36
 5386 013e 1288     		ldrh	r2, [r2]
 5387 0140 D1B2     		uxtb	r1, r2
 5388 0142 444A     		ldr	r2, .L276+24
 5389 0144 D154     		strb	r1, [r2, r3]
 5390 0146 A5E1     		b	.L245
 5391              	.L239:
1691:main.c        ****                 }
1692:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 5392              		.loc 1 1692 0
 5393 0148 454B     		ldr	r3, .L276+36
 5394 014a 1B88     		ldrh	r3, [r3]
 5395 014c 0133     		adds	r3, r3, #1
 5396 014e 5B00     		lsls	r3, r3, #1
 5397 0150 1A46     		mov	r2, r3
 5398 0152 3D4B     		ldr	r3, .L276+12
 5399 0154 1B68     		ldr	r3, [r3]
 5400 0156 9A42     		cmp	r2, r3
 5401 0158 23D9     		bls	.L241
 5402              	.LBB23:
1693:main.c        ****                 { 
1694:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 5403              		.loc 1 1694 0
 5404 015a BB68     		ldr	r3, [r7, #8]	@ float
 5405 015c 4149     		ldr	r1, .L276+40
 5406 015e 1846     		mov	r0, r3
 5407 0160 FFF7FEFF 		bl	__aeabi_fmul
 5408 0164 0346     		mov	r3, r0
 5409 0166 1846     		mov	r0, r3
 5410 0168 FFF7FEFF 		bl	__aeabi_f2uiz
 5411 016c 0346     		mov	r3, r0
 5412 016e 7B83     		strh	r3, [r7, #26]	@ movhi
1695:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 5413              		.loc 1 1695 0
 5414 0170 BA8B     		ldrh	r2, [r7, #28]
 5415 0172 354B     		ldr	r3, .L276+12
 5416 0174 1B68     		ldr	r3, [r3]
 5417 0176 591C     		adds	r1, r3, #1
 5418 0178 3348     		ldr	r0, .L276+12
 5419 017a 0160     		str	r1, [r0]
 5420 017c 1344     		add	r3, r3, r2
 5421 017e 7A8B     		ldrh	r2, [r7, #26]
 5422 0180 120A     		lsrs	r2, r2, #8
 5423 0182 92B2     		uxth	r2, r2
 5424 0184 D1B2     		uxtb	r1, r2
 5425 0186 334A     		ldr	r2, .L276+24
 5426 0188 D154     		strb	r1, [r2, r3]
1696:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 5427              		.loc 1 1696 0
 5428 018a BA8B     		ldrh	r2, [r7, #28]
 5429 018c 2E4B     		ldr	r3, .L276+12
 5430 018e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 127


 5431 0190 591C     		adds	r1, r3, #1
 5432 0192 2D48     		ldr	r0, .L276+12
 5433 0194 0160     		str	r1, [r0]
 5434 0196 1344     		add	r3, r3, r2
 5435 0198 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 5436 019a D1B2     		uxtb	r1, r2
 5437 019c 2D4A     		ldr	r2, .L276+24
 5438 019e D154     		strb	r1, [r2, r3]
 5439              	.LBE23:
 5440 01a0 78E1     		b	.L245
 5441              	.L241:
1697:main.c        ****                 }
1698:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 5442              		.loc 1 1698 0
 5443 01a2 2F4B     		ldr	r3, .L276+36
 5444 01a4 1B88     		ldrh	r3, [r3]
 5445 01a6 0133     		adds	r3, r3, #1
 5446 01a8 5B00     		lsls	r3, r3, #1
 5447 01aa 1A46     		mov	r2, r3
 5448 01ac 264B     		ldr	r3, .L276+12
 5449 01ae 1B68     		ldr	r3, [r3]
 5450 01b0 9A42     		cmp	r2, r3
 5451 01b2 40F06F81 		bne	.L245
1699:main.c        ****                 {
1700:main.c        ****                     valCheck = theVal.f;
 5452              		.loc 1 1700 0
 5453 01b6 BB68     		ldr	r3, [r7, #8]	@ float
 5454 01b8 2B4A     		ldr	r2, .L276+44
 5455 01ba 1360     		str	r3, [r2]	@ float
1701:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 5456              		.loc 1 1701 0
 5457 01bc 2A4B     		ldr	r3, .L276+44
 5458 01be 1B68     		ldr	r3, [r3]	@ float
 5459 01c0 2A49     		ldr	r1, .L276+48
 5460 01c2 1846     		mov	r0, r3
 5461 01c4 FFF7FEFF 		bl	__aeabi_fcmplt
 5462 01c8 0346     		mov	r3, r0
 5463 01ca 002B     		cmp	r3, #0
 5464 01cc 23D0     		beq	.L242
 5465              		.loc 1 1701 0 is_stmt 0 discriminator 1
 5466 01ce 264B     		ldr	r3, .L276+44
 5467 01d0 1B68     		ldr	r3, [r3]	@ float
 5468 01d2 2749     		ldr	r1, .L276+52
 5469 01d4 1846     		mov	r0, r3
 5470 01d6 FFF7FEFF 		bl	__aeabi_fcmpgt
 5471 01da 0346     		mov	r3, r0
 5472 01dc 002B     		cmp	r3, #0
 5473 01de 1AD0     		beq	.L242
1702:main.c        ****                     {
1703:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 5474              		.loc 1 1703 0 is_stmt 1
 5475 01e0 BA8B     		ldrh	r2, [r7, #28]
 5476 01e2 194B     		ldr	r3, .L276+12
 5477 01e4 1B68     		ldr	r3, [r3]
 5478 01e6 591C     		adds	r1, r3, #1
 5479 01e8 1748     		ldr	r0, .L276+12
 5480 01ea 0160     		str	r1, [r0]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 128


 5481 01ec 1344     		add	r3, r3, r2
 5482 01ee 194A     		ldr	r2, .L276+24
 5483 01f0 EF21     		movs	r1, #239
 5484 01f2 D154     		strb	r1, [r2, r3]
1704:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 5485              		.loc 1 1704 0
 5486 01f4 BA8B     		ldrh	r2, [r7, #28]
 5487 01f6 144B     		ldr	r3, .L276+12
 5488 01f8 1B68     		ldr	r3, [r3]
 5489 01fa 591C     		adds	r1, r3, #1
 5490 01fc 1248     		ldr	r0, .L276+12
 5491 01fe 0160     		str	r1, [r0]
 5492 0200 1344     		add	r3, r3, r2
 5493 0202 144A     		ldr	r2, .L276+24
 5494 0204 EF21     		movs	r1, #239
 5495 0206 D154     		strb	r1, [r2, r3]
1705:main.c        ****                         presetArraySection = mapCountNext;
 5496              		.loc 1 1705 0
 5497 0208 104B     		ldr	r3, .L276+16
 5498 020a 0322     		movs	r2, #3
 5499 020c 1A70     		strb	r2, [r3]
1706:main.c        ****                         mapCount = 0;
 5500              		.loc 1 1706 0
 5501 020e 194B     		ldr	r3, .L276+56
 5502 0210 0022     		movs	r2, #0
 5503 0212 1A60     		str	r2, [r3]
 5504 0214 3EE1     		b	.L245
 5505              	.L242:
1707:main.c        ****                     }
1708:main.c        ****                     else
1709:main.c        ****                     {
1710:main.c        ****                         //error state
1711:main.c        ****                         SPI_errors++;
 5506              		.loc 1 1711 0
 5507 0216 184B     		ldr	r3, .L276+60
 5508 0218 1B68     		ldr	r3, [r3]
 5509 021a 0133     		adds	r3, r3, #1
 5510 021c 164A     		ldr	r2, .L276+60
 5511 021e 1360     		str	r3, [r2]
1712:main.c        ****                         sysexMessageInProgress = 0;
 5512              		.loc 1 1712 0
 5513 0220 084B     		ldr	r3, .L276+8
 5514 0222 0022     		movs	r2, #0
 5515 0224 1A70     		strb	r2, [r3]
1713:main.c        ****                         sysexPointer = 0;
 5516              		.loc 1 1713 0
 5517 0226 154B     		ldr	r3, .L276+64
 5518 0228 0022     		movs	r2, #0
 5519 022a 1A60     		str	r2, [r3]
1714:main.c        ****                         sendingMessage = 0;
 5520              		.loc 1 1714 0
 5521 022c 144B     		ldr	r3, .L276+68
 5522 022e 0022     		movs	r2, #0
 5523 0230 1A70     		strb	r2, [r3]
1715:main.c        ****                         parseThatMF = 0;
 5524              		.loc 1 1715 0
 5525 0232 144B     		ldr	r3, .L276+72
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 129


 5526 0234 0022     		movs	r2, #0
 5527 0236 1A70     		strb	r2, [r3]
 5528 0238 2CE1     		b	.L245
 5529              	.L277:
 5530 023a 00BF     		.align	2
 5531              	.L276:
 5532 023c 00000000 		.word	parsingSysex
 5533 0240 00000000 		.word	sysexBuffer
 5534 0244 00000000 		.word	sysexMessageInProgress
 5535 0248 00000000 		.word	currentFloat
 5536 024c 00000000 		.word	presetArraySection
 5537 0250 00000000 		.word	presetNumberToWrite
 5538 0254 00000000 		.word	presetArray
 5539 0258 00000000 		.word	presetNamesArray
 5540 025c 00000000 		.word	testVal
 5541 0260 00000000 		.word	valsCount
 5542 0264 00FF7F47 		.word	1199570688
 5543 0268 00000000 		.word	valCheck
 5544 026c 0000C0BF 		.word	-1077936128
 5545 0270 000020C0 		.word	-1071644672
 5546 0274 00000000 		.word	mapCount
 5547 0278 00000000 		.word	SPI_errors
 5548 027c 00000000 		.word	sysexPointer
 5549 0280 00000000 		.word	sendingMessage
 5550 0284 00000000 		.word	parseThatMF
 5551              	.L238:
1716:main.c        ****                     }
1717:main.c        ****                 }
1718:main.c        ****             }
1719:main.c        ****             else if (presetArraySection == mapCountNext)
 5552              		.loc 1 1719 0
 5553 0288 964B     		ldr	r3, .L278
 5554 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5555 028c 032B     		cmp	r3, #3
 5556 028e 28D1     		bne	.L246
1720:main.c        ****             {
1721:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 5557              		.loc 1 1721 0
 5558 0290 BB68     		ldr	r3, [r7, #8]	@ float
 5559 0292 1846     		mov	r0, r3
 5560 0294 FFF7FEFF 		bl	__aeabi_f2uiz
 5561 0298 0346     		mov	r3, r0
 5562 029a 9AB2     		uxth	r2, r3
 5563 029c 924B     		ldr	r3, .L278+4
 5564 029e 1A80     		strh	r2, [r3]	@ movhi
1722:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 5565              		.loc 1 1722 0
 5566 02a0 BA8B     		ldrh	r2, [r7, #28]
 5567 02a2 924B     		ldr	r3, .L278+8
 5568 02a4 1B68     		ldr	r3, [r3]
 5569 02a6 591C     		adds	r1, r3, #1
 5570 02a8 9048     		ldr	r0, .L278+8
 5571 02aa 0160     		str	r1, [r0]
 5572 02ac 1344     		add	r3, r3, r2
 5573 02ae 8E4A     		ldr	r2, .L278+4
 5574 02b0 1288     		ldrh	r2, [r2]
 5575 02b2 120A     		lsrs	r2, r2, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 130


 5576 02b4 92B2     		uxth	r2, r2
 5577 02b6 D1B2     		uxtb	r1, r2
 5578 02b8 8D4A     		ldr	r2, .L278+12
 5579 02ba D154     		strb	r1, [r2, r3]
1723:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 5580              		.loc 1 1723 0
 5581 02bc BA8B     		ldrh	r2, [r7, #28]
 5582 02be 8B4B     		ldr	r3, .L278+8
 5583 02c0 1B68     		ldr	r3, [r3]
 5584 02c2 591C     		adds	r1, r3, #1
 5585 02c4 8948     		ldr	r0, .L278+8
 5586 02c6 0160     		str	r1, [r0]
 5587 02c8 1344     		add	r3, r3, r2
 5588 02ca 874A     		ldr	r2, .L278+4
 5589 02cc 1288     		ldrh	r2, [r2]
 5590 02ce D1B2     		uxtb	r1, r2
 5591 02d0 874A     		ldr	r2, .L278+12
 5592 02d2 D154     		strb	r1, [r2, r3]
1724:main.c        ****                 presetArraySection = mapping;
 5593              		.loc 1 1724 0
 5594 02d4 834B     		ldr	r3, .L278
 5595 02d6 0422     		movs	r2, #4
 5596 02d8 1A70     		strb	r2, [r3]
1725:main.c        ****                 numMappings = 0;
 5597              		.loc 1 1725 0
 5598 02da 864B     		ldr	r3, .L278+16
 5599 02dc 0022     		movs	r2, #0
 5600 02de 1A80     		strh	r2, [r3]	@ movhi
 5601 02e0 D8E0     		b	.L245
 5602              	.L246:
1726:main.c        ****             }
1727:main.c        ****             else if (presetArraySection == mapping)
 5603              		.loc 1 1727 0
 5604 02e2 804B     		ldr	r3, .L278
 5605 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5606 02e6 042B     		cmp	r3, #4
 5607 02e8 40F0D480 		bne	.L245
1728:main.c        ****             {
1729:main.c        ****                 // this is the order
1730:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
1731:main.c        ****                 if (numMappings < mapCountExpectation)
 5608              		.loc 1 1731 0
 5609 02ec 814B     		ldr	r3, .L278+16
 5610 02ee 1A88     		ldrh	r2, [r3]
 5611 02f0 7D4B     		ldr	r3, .L278+4
 5612 02f2 1B88     		ldrh	r3, [r3]
 5613 02f4 9A42     		cmp	r2, r3
 5614 02f6 80F08680 		bcs	.L247
1732:main.c        ****                 {
1733:main.c        ****                     if ((mapCount % 4) == 0)
 5615              		.loc 1 1733 0
 5616 02fa 7F4B     		ldr	r3, .L278+20
 5617 02fc 1B68     		ldr	r3, [r3]
 5618 02fe 03F00303 		and	r3, r3, #3
 5619 0302 002B     		cmp	r3, #0
 5620 0304 0FD1     		bne	.L248
1734:main.c        ****                     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 131


1735:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 5621              		.loc 1 1735 0
 5622 0306 BA8B     		ldrh	r2, [r7, #28]
 5623 0308 784B     		ldr	r3, .L278+8
 5624 030a 1B68     		ldr	r3, [r3]
 5625 030c 591C     		adds	r1, r3, #1
 5626 030e 7748     		ldr	r0, .L278+8
 5627 0310 0160     		str	r1, [r0]
 5628 0312 D418     		adds	r4, r2, r3
 5629 0314 BB68     		ldr	r3, [r7, #8]	@ float
 5630 0316 1846     		mov	r0, r3
 5631 0318 FFF7FEFF 		bl	__aeabi_f2uiz
 5632 031c 0346     		mov	r3, r0
 5633 031e DAB2     		uxtb	r2, r3
 5634 0320 734B     		ldr	r3, .L278+12
 5635 0322 1A55     		strb	r2, [r3, r4]
 5636 0324 69E0     		b	.L249
 5637              	.L248:
1736:main.c        ****                     }
1737:main.c        ****                     else if  (mapCount % 4 == 1)
 5638              		.loc 1 1737 0
 5639 0326 744B     		ldr	r3, .L278+20
 5640 0328 1B68     		ldr	r3, [r3]
 5641 032a 03F00303 		and	r3, r3, #3
 5642 032e 012B     		cmp	r3, #1
 5643 0330 0FD1     		bne	.L250
1738:main.c        ****                     {
1739:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 5644              		.loc 1 1739 0
 5645 0332 BA8B     		ldrh	r2, [r7, #28]
 5646 0334 6D4B     		ldr	r3, .L278+8
 5647 0336 1B68     		ldr	r3, [r3]
 5648 0338 591C     		adds	r1, r3, #1
 5649 033a 6C48     		ldr	r0, .L278+8
 5650 033c 0160     		str	r1, [r0]
 5651 033e D418     		adds	r4, r2, r3
 5652 0340 BB68     		ldr	r3, [r7, #8]	@ float
 5653 0342 1846     		mov	r0, r3
 5654 0344 FFF7FEFF 		bl	__aeabi_f2uiz
 5655 0348 0346     		mov	r3, r0
 5656 034a DAB2     		uxtb	r2, r3
 5657 034c 684B     		ldr	r3, .L278+12
 5658 034e 1A55     		strb	r2, [r3, r4]
 5659 0350 53E0     		b	.L249
 5660              	.L250:
1740:main.c        ****                     }
1741:main.c        ****                     else if (mapCount % 4 == 2) //check if the scalar source is -1 (if so send 255 
 5661              		.loc 1 1741 0
 5662 0352 694B     		ldr	r3, .L278+20
 5663 0354 1B68     		ldr	r3, [r3]
 5664 0356 03F00303 		and	r3, r3, #3
 5665 035a 022B     		cmp	r3, #2
 5666 035c 23D1     		bne	.L251
1742:main.c        ****                     {
1743:main.c        ****                         if (theVal.f < 0.0f)
 5667              		.loc 1 1743 0
 5668 035e BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 132


 5669 0360 4FF00001 		mov	r1, #0
 5670 0364 1846     		mov	r0, r3
 5671 0366 FFF7FEFF 		bl	__aeabi_fcmplt
 5672 036a 0346     		mov	r3, r0
 5673 036c 002B     		cmp	r3, #0
 5674 036e 0AD0     		beq	.L275
1744:main.c        ****                         {
1745:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 5675              		.loc 1 1745 0
 5676 0370 BA8B     		ldrh	r2, [r7, #28]
 5677 0372 5E4B     		ldr	r3, .L278+8
 5678 0374 1B68     		ldr	r3, [r3]
 5679 0376 591C     		adds	r1, r3, #1
 5680 0378 5C48     		ldr	r0, .L278+8
 5681 037a 0160     		str	r1, [r0]
 5682 037c 1344     		add	r3, r3, r2
 5683 037e 5C4A     		ldr	r2, .L278+12
 5684 0380 FF21     		movs	r1, #255
 5685 0382 D154     		strb	r1, [r2, r3]
 5686 0384 39E0     		b	.L249
 5687              	.L275:
1746:main.c        ****                         }
1747:main.c        ****                         else
1748:main.c        ****                         {
1749:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 5688              		.loc 1 1749 0
 5689 0386 BA8B     		ldrh	r2, [r7, #28]
 5690 0388 584B     		ldr	r3, .L278+8
 5691 038a 1B68     		ldr	r3, [r3]
 5692 038c 591C     		adds	r1, r3, #1
 5693 038e 5748     		ldr	r0, .L278+8
 5694 0390 0160     		str	r1, [r0]
 5695 0392 D418     		adds	r4, r2, r3
 5696 0394 BB68     		ldr	r3, [r7, #8]	@ float
 5697 0396 1846     		mov	r0, r3
 5698 0398 FFF7FEFF 		bl	__aeabi_f2uiz
 5699 039c 0346     		mov	r3, r0
 5700 039e DAB2     		uxtb	r2, r3
 5701 03a0 534B     		ldr	r3, .L278+12
 5702 03a2 1A55     		strb	r2, [r3, r4]
 5703 03a4 29E0     		b	.L249
 5704              	.L251:
 5705              	.LBB24:
1750:main.c        ****                         }
1751:main.c        ****                     }
1752:main.c        ****                     else
1753:main.c        ****                     {
1754:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 5706              		.loc 1 1754 0
 5707 03a6 BB68     		ldr	r3, [r7, #8]	@ float
 5708 03a8 5449     		ldr	r1, .L278+24
 5709 03aa 1846     		mov	r0, r3
 5710 03ac FFF7FEFF 		bl	__aeabi_fmul
 5711 03b0 0346     		mov	r3, r0
 5712 03b2 1846     		mov	r0, r3
 5713 03b4 FFF7FEFF 		bl	__aeabi_f2iz
 5714 03b8 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 133


 5715 03ba 3B83     		strh	r3, [r7, #24]	@ movhi
1755:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 5716              		.loc 1 1755 0
 5717 03bc BA8B     		ldrh	r2, [r7, #28]
 5718 03be 4B4B     		ldr	r3, .L278+8
 5719 03c0 1B68     		ldr	r3, [r3]
 5720 03c2 591C     		adds	r1, r3, #1
 5721 03c4 4948     		ldr	r0, .L278+8
 5722 03c6 0160     		str	r1, [r0]
 5723 03c8 1344     		add	r3, r3, r2
 5724 03ca B7F91820 		ldrsh	r2, [r7, #24]
 5725 03ce 1212     		asrs	r2, r2, #8
 5726 03d0 12B2     		sxth	r2, r2
 5727 03d2 D1B2     		uxtb	r1, r2
 5728 03d4 464A     		ldr	r2, .L278+12
 5729 03d6 D154     		strb	r1, [r2, r3]
1756:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 5730              		.loc 1 1756 0
 5731 03d8 BA8B     		ldrh	r2, [r7, #28]
 5732 03da 444B     		ldr	r3, .L278+8
 5733 03dc 1B68     		ldr	r3, [r3]
 5734 03de 591C     		adds	r1, r3, #1
 5735 03e0 4248     		ldr	r0, .L278+8
 5736 03e2 0160     		str	r1, [r0]
 5737 03e4 1344     		add	r3, r3, r2
 5738 03e6 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 5739 03e8 D1B2     		uxtb	r1, r2
 5740 03ea 414A     		ldr	r2, .L278+12
 5741 03ec D154     		strb	r1, [r2, r3]
1757:main.c        ****                         numMappings++;
 5742              		.loc 1 1757 0
 5743 03ee 414B     		ldr	r3, .L278+16
 5744 03f0 1B88     		ldrh	r3, [r3]
 5745 03f2 0133     		adds	r3, r3, #1
 5746 03f4 9AB2     		uxth	r2, r3
 5747 03f6 3F4B     		ldr	r3, .L278+16
 5748 03f8 1A80     		strh	r2, [r3]	@ movhi
 5749              	.L249:
 5750              	.LBE24:
1758:main.c        ****                     }
1759:main.c        ****                     mapCount++;
 5751              		.loc 1 1759 0
 5752 03fa 3F4B     		ldr	r3, .L278+20
 5753 03fc 1B68     		ldr	r3, [r3]
 5754 03fe 0133     		adds	r3, r3, #1
 5755 0400 3D4A     		ldr	r2, .L278+20
 5756 0402 1360     		str	r3, [r2]
 5757 0404 46E0     		b	.L245
 5758              	.L247:
1760:main.c        ****                 }
1761:main.c        ****                 
1762:main.c        **** 
1763:main.c        ****                 else
1764:main.c        ****                 {
1765:main.c        ****                     //mapcount ended
1766:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 5759              		.loc 1 1766 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 134


 5760 0406 BB68     		ldr	r3, [r7, #8]	@ float
 5761 0408 3D49     		ldr	r1, .L278+28
 5762 040a 1846     		mov	r0, r3
 5763 040c FFF7FEFF 		bl	__aeabi_fcmplt
 5764 0410 0346     		mov	r3, r0
 5765 0412 002B     		cmp	r3, #0
 5766 0414 2DD0     		beq	.L255
 5767              		.loc 1 1766 0 is_stmt 0 discriminator 1
 5768 0416 BB68     		ldr	r3, [r7, #8]	@ float
 5769 0418 3A49     		ldr	r1, .L278+32
 5770 041a 1846     		mov	r0, r3
 5771 041c FFF7FEFF 		bl	__aeabi_fcmpgt
 5772 0420 0346     		mov	r3, r0
 5773 0422 002B     		cmp	r3, #0
 5774 0424 25D0     		beq	.L255
1767:main.c        ****                     {
1768:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 5775              		.loc 1 1768 0 is_stmt 1
 5776 0426 BA8B     		ldrh	r2, [r7, #28]
 5777 0428 304B     		ldr	r3, .L278+8
 5778 042a 1B68     		ldr	r3, [r3]
 5779 042c 591C     		adds	r1, r3, #1
 5780 042e 2F48     		ldr	r0, .L278+8
 5781 0430 0160     		str	r1, [r0]
 5782 0432 1344     		add	r3, r3, r2
 5783 0434 2E4A     		ldr	r2, .L278+12
 5784 0436 FE21     		movs	r1, #254
 5785 0438 D154     		strb	r1, [r2, r3]
1769:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 5786              		.loc 1 1769 0
 5787 043a BA8B     		ldrh	r2, [r7, #28]
 5788 043c 2B4B     		ldr	r3, .L278+8
 5789 043e 1B68     		ldr	r3, [r3]
 5790 0440 591C     		adds	r1, r3, #1
 5791 0442 2A48     		ldr	r0, .L278+8
 5792 0444 0160     		str	r1, [r0]
 5793 0446 1344     		add	r3, r3, r2
 5794 0448 294A     		ldr	r2, .L278+12
 5795 044a FE21     		movs	r1, #254
 5796 044c D154     		strb	r1, [r2, r3]
1770:main.c        ****                         presetArraySection = presetEnd;
 5797              		.loc 1 1770 0
 5798 044e 254B     		ldr	r3, .L278
 5799 0450 0522     		movs	r2, #5
 5800 0452 1A70     		strb	r2, [r3]
1771:main.c        ****                         sysexMessageInProgress = 0;
 5801              		.loc 1 1771 0
 5802 0454 2C4B     		ldr	r3, .L278+36
 5803 0456 0022     		movs	r2, #0
 5804 0458 1A70     		strb	r2, [r3]
1772:main.c        ****                         sendingMessage = 1;
 5805              		.loc 1 1772 0
 5806 045a 2C4B     		ldr	r3, .L278+40
 5807 045c 0122     		movs	r2, #1
 5808 045e 1A70     		strb	r2, [r3]
1773:main.c        ****                         messageArraySize = valsStart + currentFloat;
 5809              		.loc 1 1773 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 135


 5810 0460 224B     		ldr	r3, .L278+8
 5811 0462 1B68     		ldr	r3, [r3]
 5812 0464 9AB2     		uxth	r2, r3
 5813 0466 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 5814 0468 1344     		add	r3, r3, r2
 5815 046a 9AB2     		uxth	r2, r3
 5816 046c 284B     		ldr	r3, .L278+44
 5817 046e 1A80     		strh	r2, [r3]	@ movhi
 5818 0470 10E0     		b	.L245
 5819              	.L255:
1774:main.c        ****                     }
1775:main.c        ****                     else
1776:main.c        ****                     {
1777:main.c        ****                         //error state
1778:main.c        ****                         SPI_errors++;
 5820              		.loc 1 1778 0
 5821 0472 284B     		ldr	r3, .L278+48
 5822 0474 1B68     		ldr	r3, [r3]
 5823 0476 0133     		adds	r3, r3, #1
 5824 0478 264A     		ldr	r2, .L278+48
 5825 047a 1360     		str	r3, [r2]
1779:main.c        ****                         sysexMessageInProgress = 0;
 5826              		.loc 1 1779 0
 5827 047c 224B     		ldr	r3, .L278+36
 5828 047e 0022     		movs	r2, #0
 5829 0480 1A70     		strb	r2, [r3]
1780:main.c        ****                         sysexPointer = 0;
 5830              		.loc 1 1780 0
 5831 0482 254B     		ldr	r3, .L278+52
 5832 0484 0022     		movs	r2, #0
 5833 0486 1A60     		str	r2, [r3]
1781:main.c        ****                         sendingMessage = 0;
 5834              		.loc 1 1781 0
 5835 0488 204B     		ldr	r3, .L278+40
 5836 048a 0022     		movs	r2, #0
 5837 048c 1A70     		strb	r2, [r3]
1782:main.c        ****                         parseThatMF = 0;
 5838              		.loc 1 1782 0
 5839 048e 234B     		ldr	r3, .L278+56
 5840 0490 0022     		movs	r2, #0
 5841 0492 1A70     		strb	r2, [r3]
 5842              	.L245:
1674:main.c        ****         {
 5843              		.loc 1 1674 0
 5844 0494 FB6A     		ldr	r3, [r7, #44]
 5845 0496 0533     		adds	r3, r3, #5
 5846 0498 FB62     		str	r3, [r7, #44]
 5847              	.L237:
1674:main.c        ****         {
 5848              		.loc 1 1674 0 is_stmt 0 discriminator 1
 5849 049a 1F4B     		ldr	r3, .L278+52
 5850 049c 1B68     		ldr	r3, [r3]
 5851 049e FA6A     		ldr	r2, [r7, #44]
 5852 04a0 9A42     		cmp	r2, r3
 5853 04a2 FFF4F7AD 		bcc	.L258
 5854 04a6 98E1     		b	.L259
 5855              	.L234:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 136


 5856              	.LBE22:
1783:main.c        ****                     }
1784:main.c        ****                 }
1785:main.c        ****             }
1786:main.c        ****             
1787:main.c        ****         }
1788:main.c        ****     }
1789:main.c        ****     #if 0
1790:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
1791:main.c        ****     {
1792:main.c        ****         
1793:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
1794:main.c        ****         currentFloat = 0;
1795:main.c        ****         presetNumberToWrite = sysexBuffer[1];
1796:main.c        ****         union breakFloat theVal;
1797:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
1798:main.c        ****         {
1799:main.c        ****             theVal.u32 = 0;
1800:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
1801:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
1802:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
1803:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
1804:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
1805:main.c        ****             testVal = theVal.f;
1806:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
1807:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
1808:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
1809:main.c        ****         }
1810:main.c        ****         
1811:main.c        ****         tuningArray[currentFloat++] = 0xef;
1812:main.c        ****         tuningArray[currentFloat++] = 0xef;
1813:main.c        ****                         
1814:main.c        ****         
1815:main.c        ****         messageArraySize = currentFloat;
1816:main.c        ****                     
1817:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
1818:main.c        ****         {
1819:main.c        ****             //error state
1820:main.c        ****             SPI_errors++;
1821:main.c        ****             sysexMessageInProgress = 0;
1822:main.c        ****             sysexPointer = 0;
1823:main.c        ****             sendingMessage = 0;
1824:main.c        ****             parseThatMF = 0;
1825:main.c        ****         } else 
1826:main.c        ****         {
1827:main.c        ****             sysexMessageInProgress = 0;
1828:main.c        ****             sendingMessage = 2;
1829:main.c        ****         }
1830:main.c        ****     }
1831:main.c        ****     #endif
1832:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 5857              		.loc 1 1832 0 is_stmt 1
 5858 04a8 1D4B     		ldr	r3, .L278+60
 5859 04aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5860 04ac 022B     		cmp	r3, #2
 5861 04ae 40F09481 		bne	.L259
 5862              	.LBB25:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 137


1833:main.c        ****     {
1834:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 5863              		.loc 1 1834 0
 5864 04b2 154B     		ldr	r3, .L278+36
 5865 04b4 0122     		movs	r2, #1
 5866 04b6 1A70     		strb	r2, [r3]
1835:main.c        ****         currentFloat = 0;
 5867              		.loc 1 1835 0
 5868 04b8 0C4B     		ldr	r3, .L278+8
 5869 04ba 0022     		movs	r2, #0
 5870 04bc 1A60     		str	r2, [r3]
1836:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 5871              		.loc 1 1836 0
 5872 04be 184B     		ldr	r3, .L278+60
 5873 04c0 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5874 04c2 184B     		ldr	r3, .L278+64
 5875 04c4 1A70     		strb	r2, [r3]
1837:main.c        ****         currentCopedent = copedentNumberToWrite;
 5876              		.loc 1 1837 0
 5877 04c6 174B     		ldr	r3, .L278+64
 5878 04c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5879 04ca 174B     		ldr	r3, .L278+68
 5880 04cc 1A70     		strb	r2, [r3]
1838:main.c        ****         necks[currentNeck] = currentCopedent;
 5881              		.loc 1 1838 0
 5882 04ce 174B     		ldr	r3, .L278+72
 5883 04d0 1B68     		ldr	r3, [r3]
 5884 04d2 154A     		ldr	r2, .L278+68
 5885 04d4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5886 04d6 164A     		ldr	r2, .L278+76
 5887 04d8 D154     		strb	r1, [r2, r3]
1839:main.c        **** 
1840:main.c        ****               
1841:main.c        ****         
1842:main.c        ****         union breakFloat theVal;
1843:main.c        ****         uint32_t i = 2;
 5888              		.loc 1 1843 0
 5889 04da 0223     		movs	r3, #2
 5890 04dc BB62     		str	r3, [r7, #40]
1844:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 5891              		.loc 1 1844 0
 5892 04de 1023     		movs	r3, #16
 5893 04e0 FB75     		strb	r3, [r7, #23]
1845:main.c        ****         for (; i < stoppingPoint; i++)
 5894              		.loc 1 1845 0
 5895 04e2 65E0     		b	.L260
 5896              	.L279:
 5897              		.align	2
 5898              	.L278:
 5899 04e4 00000000 		.word	presetArraySection
 5900 04e8 00000000 		.word	mapCountExpectation
 5901 04ec 00000000 		.word	currentFloat
 5902 04f0 00000000 		.word	presetArray
 5903 04f4 00000000 		.word	numMappings
 5904 04f8 00000000 		.word	mapCount
 5905 04fc 00FEFF46 		.word	1191181824
 5906 0500 000020C0 		.word	-1071644672
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 138


 5907 0504 000060C0 		.word	-1067450368
 5908 0508 00000000 		.word	sysexMessageInProgress
 5909 050c 00000000 		.word	sendingMessage
 5910 0510 00000000 		.word	messageArraySize
 5911 0514 00000000 		.word	SPI_errors
 5912 0518 00000000 		.word	sysexPointer
 5913 051c 00000000 		.word	parseThatMF
 5914 0520 00000000 		.word	sysexBuffer
 5915 0524 00000000 		.word	copedentNumberToWrite
 5916 0528 00000000 		.word	currentCopedent
 5917 052c 00000000 		.word	currentNeck
 5918 0530 00000000 		.word	necks
 5919              	.L261:
 5920              	.LBB26:
1846:main.c        ****         {
1847:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
1848:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 5921              		.loc 1 1848 0 discriminator 2
 5922 0534 9A4A     		ldr	r2, .L280
 5923 0536 BB6A     		ldr	r3, [r7, #40]
 5924 0538 1344     		add	r3, r3, r2
 5925 053a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5926 053c 03F07F03 		and	r3, r3, #127
 5927 0540 BB75     		strb	r3, [r7, #22]
1849:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 5928              		.loc 1 1849 0 discriminator 2
 5929 0542 984B     		ldr	r3, .L280+4
 5930 0544 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5931 0546 1846     		mov	r0, r3
 5932 0548 BB6A     		ldr	r3, [r7, #40]
 5933 054a 9A1E     		subs	r2, r3, #2
 5934 054c 9649     		ldr	r1, .L280+8
 5935 054e 0346     		mov	r3, r0
 5936 0550 DB00     		lsls	r3, r3, #3
 5937 0552 1B1A     		subs	r3, r3, r0
 5938 0554 5B00     		lsls	r3, r3, #1
 5939 0556 0B44     		add	r3, r3, r1
 5940 0558 1344     		add	r3, r3, r2
 5941 055a BA7D     		ldrb	r2, [r7, #22]
 5942 055c 1A70     		strb	r2, [r3]
1850:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 5943              		.loc 1 1850 0 discriminator 2
 5944 055e 914B     		ldr	r3, .L280+4
 5945 0560 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5946 0562 1A46     		mov	r2, r3
 5947 0564 9200     		lsls	r2, r2, #2
 5948 0566 1A44     		add	r2, r2, r3
 5949 0568 5200     		lsls	r2, r2, #1
 5950 056a 1344     		add	r3, r3, r2
 5951 056c 5B00     		lsls	r3, r3, #1
 5952 056e DBB2     		uxtb	r3, r3
 5953 0570 0233     		adds	r3, r3, #2
 5954 0572 DAB2     		uxtb	r2, r3
 5955 0574 8D4B     		ldr	r3, .L280+12
 5956 0576 1A70     		strb	r2, [r3]
1851:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 5957              		.loc 1 1851 0 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 139


 5958 0578 8A4B     		ldr	r3, .L280+4
 5959 057a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5960 057c 9BB2     		uxth	r3, r3
 5961 057e 1A46     		mov	r2, r3	@ movhi
 5962 0580 1201     		lsls	r2, r2, #4
 5963 0582 1A44     		add	r2, r2, r3
 5964 0584 9200     		lsls	r2, r2, #2
 5965 0586 1A44     		add	r2, r2, r3
 5966 0588 5200     		lsls	r2, r2, #1
 5967 058a 1344     		add	r3, r3, r2
 5968 058c 5B00     		lsls	r3, r3, #1
 5969 058e 9AB2     		uxth	r2, r3
 5970 0590 BB6A     		ldr	r3, [r7, #40]
 5971 0592 9BB2     		uxth	r3, r3
 5972 0594 1344     		add	r3, r3, r2
 5973 0596 9AB2     		uxth	r2, r3
 5974 0598 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 5975 059a 1146     		mov	r1, r2
 5976 059c 1846     		mov	r0, r3
 5977 059e FFF7FEFF 		bl	EEPROM_WriteByte
 5978 05a2 0346     		mov	r3, r0
 5979 05a4 DAB2     		uxtb	r2, r3
 5980 05a6 824B     		ldr	r3, .L280+16
 5981 05a8 1A70     		strb	r2, [r3]
 5982              	.LBE26:
1845:main.c        ****         {
 5983              		.loc 1 1845 0 discriminator 2
 5984 05aa BB6A     		ldr	r3, [r7, #40]
 5985 05ac 0133     		adds	r3, r3, #1
 5986 05ae BB62     		str	r3, [r7, #40]
 5987              	.L260:
1845:main.c        ****         {
 5988              		.loc 1 1845 0 is_stmt 0 discriminator 1
 5989 05b0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 5990 05b2 BB6A     		ldr	r3, [r7, #40]
 5991 05b4 9A42     		cmp	r2, r3
 5992 05b6 BDD8     		bhi	.L261
1852:main.c        ****         }
1853:main.c        ****         
1854:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 5993              		.loc 1 1854 0 is_stmt 1
 5994 05b8 1023     		movs	r3, #16
 5995 05ba BB62     		str	r3, [r7, #40]
1855:main.c        **** 
1856:main.c        ****  
1857:main.c        ****         while(i < sysexPointer)
 5996              		.loc 1 1857 0
 5997 05bc CFE0     		b	.L262
 5998              	.L267:
 5999              	.LBB27:
1858:main.c        ****         {
1859:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 6000              		.loc 1 1859 0
 6001 05be 0023     		movs	r3, #0
 6002 05c0 7B62     		str	r3, [r7, #36]
 6003 05c2 C8E0     		b	.L263
 6004              	.L266:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 140


 6005              	.LBB28:
1860:main.c        ****             {
1861:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24) + NAME_LENGTH_IN_BYTES;
 6006              		.loc 1 1861 0
 6007 05c4 7B6A     		ldr	r3, [r7, #36]
 6008 05c6 9BB2     		uxth	r3, r3
 6009 05c8 1A46     		mov	r2, r3	@ movhi
 6010 05ca 5200     		lsls	r2, r2, #1
 6011 05cc 1344     		add	r3, r3, r2
 6012 05ce DB00     		lsls	r3, r3, #3
 6013 05d0 9BB2     		uxth	r3, r3
 6014 05d2 0E33     		adds	r3, r3, #14
 6015 05d4 BB82     		strh	r3, [r7, #20]	@ movhi
 6016              	.LBB29:
1862:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 6017              		.loc 1 1862 0
 6018 05d6 0023     		movs	r3, #0
 6019 05d8 3B62     		str	r3, [r7, #32]
 6020 05da B5E0     		b	.L264
 6021              	.L265:
 6022              	.LBB30:
1863:main.c        ****                 {
1864:main.c        ****                     
1865:main.c        ****                     theVal.u32 = 0;
 6023              		.loc 1 1865 0 discriminator 3
 6024 05dc 0023     		movs	r3, #0
 6025 05de 7B60     		str	r3, [r7, #4]
1866:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 6026              		.loc 1 1866 0 discriminator 3
 6027 05e0 7B68     		ldr	r3, [r7, #4]
 6028 05e2 6F49     		ldr	r1, .L280
 6029 05e4 BA6A     		ldr	r2, [r7, #40]
 6030 05e6 0A44     		add	r2, r2, r1
 6031 05e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6032 05ea 1207     		lsls	r2, r2, #28
 6033 05ec 1343     		orrs	r3, r3, r2
 6034 05ee 7B60     		str	r3, [r7, #4]
1867:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 6035              		.loc 1 1867 0 discriminator 3
 6036 05f0 7B68     		ldr	r3, [r7, #4]
 6037 05f2 BA6A     		ldr	r2, [r7, #40]
 6038 05f4 0132     		adds	r2, r2, #1
 6039 05f6 6A49     		ldr	r1, .L280
 6040 05f8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6041 05fa 5205     		lsls	r2, r2, #21
 6042 05fc 1343     		orrs	r3, r3, r2
 6043 05fe 7B60     		str	r3, [r7, #4]
1868:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 6044              		.loc 1 1868 0 discriminator 3
 6045 0600 7B68     		ldr	r3, [r7, #4]
 6046 0602 BA6A     		ldr	r2, [r7, #40]
 6047 0604 0232     		adds	r2, r2, #2
 6048 0606 6649     		ldr	r1, .L280
 6049 0608 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6050 060a 9203     		lsls	r2, r2, #14
 6051 060c 1343     		orrs	r3, r3, r2
 6052 060e 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 141


1869:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 6053              		.loc 1 1869 0 discriminator 3
 6054 0610 7B68     		ldr	r3, [r7, #4]
 6055 0612 BA6A     		ldr	r2, [r7, #40]
 6056 0614 0332     		adds	r2, r2, #3
 6057 0616 6249     		ldr	r1, .L280
 6058 0618 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6059 061a D201     		lsls	r2, r2, #7
 6060 061c 1343     		orrs	r3, r3, r2
 6061 061e 7B60     		str	r3, [r7, #4]
1870:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 6062              		.loc 1 1870 0 discriminator 3
 6063 0620 7A68     		ldr	r2, [r7, #4]
 6064 0622 BB6A     		ldr	r3, [r7, #40]
 6065 0624 0433     		adds	r3, r3, #4
 6066 0626 5E49     		ldr	r1, .L280
 6067 0628 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6068 062a 03F07F03 		and	r3, r3, #127
 6069 062e 1343     		orrs	r3, r3, r2
 6070 0630 7B60     		str	r3, [r7, #4]
1871:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 6071              		.loc 1 1871 0 discriminator 3
 6072 0632 5C4B     		ldr	r3, .L280+4
 6073 0634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6074 0636 1C46     		mov	r4, r3
 6075 0638 7968     		ldr	r1, [r7, #4]	@ float
 6076 063a 5E48     		ldr	r0, .L280+20
 6077 063c 7B6A     		ldr	r3, [r7, #36]
 6078 063e 1A46     		mov	r2, r3
 6079 0640 5200     		lsls	r2, r2, #1
 6080 0642 1A44     		add	r2, r2, r3
 6081 0644 9300     		lsls	r3, r2, #2
 6082 0646 1A46     		mov	r2, r3
 6083 0648 2346     		mov	r3, r4
 6084 064a 5B01     		lsls	r3, r3, #5
 6085 064c 2344     		add	r3, r3, r4
 6086 064e 9B00     		lsls	r3, r3, #2
 6087 0650 1A44     		add	r2, r2, r3
 6088 0652 3B6A     		ldr	r3, [r7, #32]
 6089 0654 1344     		add	r3, r3, r2
 6090 0656 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
1872:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 6091              		.loc 1 1872 0 discriminator 3
 6092 065a 7B68     		ldr	r3, [r7, #4]	@ float
 6093 065c 4FF08741 		mov	r1, #1132462080
 6094 0660 1846     		mov	r0, r3
 6095 0662 FFF7FEFF 		bl	__aeabi_fmul
 6096 0666 0346     		mov	r3, r0
 6097 0668 4FF08E41 		mov	r1, #1191182336
 6098 066c 1846     		mov	r0, r3
 6099 066e FFF7FEFF 		bl	__aeabi_fadd
 6100 0672 0346     		mov	r3, r0
 6101 0674 1846     		mov	r0, r3
 6102 0676 FFF7FEFF 		bl	__aeabi_f2uiz
 6103 067a 0346     		mov	r3, r0
 6104 067c 7B82     		strh	r3, [r7, #18]	@ movhi
1873:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 142


 6105              		.loc 1 1873 0 discriminator 3
 6106 067e 7B8A     		ldrh	r3, [r7, #18]
 6107 0680 1B0A     		lsrs	r3, r3, #8
 6108 0682 9BB2     		uxth	r3, r3
 6109 0684 7B74     		strb	r3, [r7, #17]
1874:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 6110              		.loc 1 1874 0 discriminator 3
 6111 0686 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 6112 0688 3B74     		strb	r3, [r7, #16]
1875:main.c        ****                     
1876:main.c        ****                     
1877:main.c        ****                     uint16_t stringStartLoc = stringChange * 2 + NAME_LENGTH_IN_BYTES;
 6113              		.loc 1 1877 0 discriminator 3
 6114 068a 3B6A     		ldr	r3, [r7, #32]
 6115 068c 0733     		adds	r3, r3, #7
 6116 068e 9BB2     		uxth	r3, r3
 6117 0690 5B00     		lsls	r3, r3, #1
 6118 0692 FB81     		strh	r3, [r7, #14]	@ movhi
1878:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 6119              		.loc 1 1878 0 discriminator 3
 6120 0694 FB89     		ldrh	r3, [r7, #14]	@ movhi
 6121 0696 DAB2     		uxtb	r2, r3
 6122 0698 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6123 069a DBB2     		uxtb	r3, r3
 6124 069c 1344     		add	r3, r3, r2
 6125 069e DAB2     		uxtb	r2, r3
 6126 06a0 404B     		ldr	r3, .L280+4
 6127 06a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6128 06a4 1946     		mov	r1, r3
 6129 06a6 8900     		lsls	r1, r1, #2
 6130 06a8 1944     		add	r1, r1, r3
 6131 06aa 4900     		lsls	r1, r1, #1
 6132 06ac 0B44     		add	r3, r3, r1
 6133 06ae 5B00     		lsls	r3, r3, #1
 6134 06b0 DBB2     		uxtb	r3, r3
 6135 06b2 1344     		add	r3, r3, r2
 6136 06b4 DBB2     		uxtb	r3, r3
 6137 06b6 0233     		adds	r3, r3, #2
 6138 06b8 DAB2     		uxtb	r2, r3
 6139 06ba 3C4B     		ldr	r3, .L280+12
 6140 06bc 1A70     		strb	r2, [r3]
1879:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, EEPROM_COPEDENT_OFFSET + stringStartLo
 6141              		.loc 1 1879 0 discriminator 3
 6142 06be FA89     		ldrh	r2, [r7, #14]	@ movhi
 6143 06c0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6144 06c2 1344     		add	r3, r3, r2
 6145 06c4 9AB2     		uxth	r2, r3
 6146 06c6 374B     		ldr	r3, .L280+4
 6147 06c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6148 06ca 9BB2     		uxth	r3, r3
 6149 06cc 1946     		mov	r1, r3	@ movhi
 6150 06ce 0901     		lsls	r1, r1, #4
 6151 06d0 1944     		add	r1, r1, r3
 6152 06d2 8900     		lsls	r1, r1, #2
 6153 06d4 1944     		add	r1, r1, r3
 6154 06d6 4900     		lsls	r1, r1, #1
 6155 06d8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 143


 6156 06da 5B00     		lsls	r3, r3, #1
 6157 06dc 9BB2     		uxth	r3, r3
 6158 06de 1344     		add	r3, r3, r2
 6159 06e0 9BB2     		uxth	r3, r3
 6160 06e2 0233     		adds	r3, r3, #2
 6161 06e4 9AB2     		uxth	r2, r3
 6162 06e6 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 6163 06e8 1146     		mov	r1, r2
 6164 06ea 1846     		mov	r0, r3
 6165 06ec FFF7FEFF 		bl	EEPROM_WriteByte
 6166 06f0 0346     		mov	r3, r0
 6167 06f2 DAB2     		uxtb	r2, r3
 6168 06f4 2E4B     		ldr	r3, .L280+16
 6169 06f6 1A70     		strb	r2, [r3]
1880:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, EEPROM_COPEDENT_OFFSET + stringStartLoc
 6170              		.loc 1 1880 0 discriminator 3
 6171 06f8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 6172 06fa BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6173 06fc 1344     		add	r3, r3, r2
 6174 06fe 9AB2     		uxth	r2, r3
 6175 0700 284B     		ldr	r3, .L280+4
 6176 0702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6177 0704 9BB2     		uxth	r3, r3
 6178 0706 1946     		mov	r1, r3	@ movhi
 6179 0708 0901     		lsls	r1, r1, #4
 6180 070a 1944     		add	r1, r1, r3
 6181 070c 8900     		lsls	r1, r1, #2
 6182 070e 1944     		add	r1, r1, r3
 6183 0710 4900     		lsls	r1, r1, #1
 6184 0712 0B44     		add	r3, r3, r1
 6185 0714 5B00     		lsls	r3, r3, #1
 6186 0716 9BB2     		uxth	r3, r3
 6187 0718 1344     		add	r3, r3, r2
 6188 071a 9BB2     		uxth	r3, r3
 6189 071c 0333     		adds	r3, r3, #3
 6190 071e 9AB2     		uxth	r2, r3
 6191 0720 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 6192 0722 1146     		mov	r1, r2
 6193 0724 1846     		mov	r0, r3
 6194 0726 FFF7FEFF 		bl	EEPROM_WriteByte
 6195 072a 0346     		mov	r3, r0
 6196 072c DAB2     		uxtb	r2, r3
 6197 072e 204B     		ldr	r3, .L280+16
 6198 0730 1A70     		strb	r2, [r3]
1881:main.c        ****                     currentFloat++;
 6199              		.loc 1 1881 0 discriminator 3
 6200 0732 214B     		ldr	r3, .L280+24
 6201 0734 1B68     		ldr	r3, [r3]
 6202 0736 0133     		adds	r3, r3, #1
 6203 0738 1F4A     		ldr	r2, .L280+24
 6204 073a 1360     		str	r3, [r2]
1882:main.c        ****                     i = i+5;
 6205              		.loc 1 1882 0 discriminator 3
 6206 073c BB6A     		ldr	r3, [r7, #40]
 6207 073e 0533     		adds	r3, r3, #5
 6208 0740 BB62     		str	r3, [r7, #40]
 6209              	.LBE30:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 144


1862:main.c        ****                 {
 6210              		.loc 1 1862 0 discriminator 3
 6211 0742 3B6A     		ldr	r3, [r7, #32]
 6212 0744 0133     		adds	r3, r3, #1
 6213 0746 3B62     		str	r3, [r7, #32]
 6214              	.L264:
1862:main.c        ****                 {
 6215              		.loc 1 1862 0 is_stmt 0 discriminator 1
 6216 0748 3B6A     		ldr	r3, [r7, #32]
 6217 074a 0B2B     		cmp	r3, #11
 6218 074c 7FF646AF 		bls	.L265
 6219              	.LBE29:
 6220              	.LBE28:
1859:main.c        ****             {
 6221              		.loc 1 1859 0 is_stmt 1 discriminator 2
 6222 0750 7B6A     		ldr	r3, [r7, #36]
 6223 0752 0133     		adds	r3, r3, #1
 6224 0754 7B62     		str	r3, [r7, #36]
 6225              	.L263:
1859:main.c        ****             {
 6226              		.loc 1 1859 0 is_stmt 0 discriminator 1
 6227 0756 7B6A     		ldr	r3, [r7, #36]
 6228 0758 0A2B     		cmp	r3, #10
 6229 075a 7FF633AF 		bls	.L266
 6230              	.L262:
 6231              	.LBE27:
1857:main.c        ****         {
 6232              		.loc 1 1857 0 is_stmt 1
 6233 075e 174B     		ldr	r3, .L280+28
 6234 0760 1B68     		ldr	r3, [r3]
 6235 0762 BA6A     		ldr	r2, [r7, #40]
 6236 0764 9A42     		cmp	r2, r3
 6237 0766 FFF42AAF 		bcc	.L267
1883:main.c        ****                 }
1884:main.c        ****                 
1885:main.c        ****             }
1886:main.c        ****         }
1887:main.c        ****                         
1888:main.c        ****         
1889:main.c        ****         messageArraySize = currentFloat;
 6238              		.loc 1 1889 0
 6239 076a 134B     		ldr	r3, .L280+24
 6240 076c 1B68     		ldr	r3, [r3]
 6241 076e 9AB2     		uxth	r2, r3
 6242 0770 134B     		ldr	r3, .L280+32
 6243 0772 1A80     		strh	r2, [r3]	@ movhi
1890:main.c        ****                     
1891:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 6244              		.loc 1 1891 0
 6245 0774 124B     		ldr	r3, .L280+32
 6246 0776 1B88     		ldrh	r3, [r3]
 6247 0778 842B     		cmp	r3, #132
 6248 077a 2BD0     		beq	.L268
1892:main.c        ****         {
1893:main.c        ****             //error state
1894:main.c        ****             SPI_errors++;
 6249              		.loc 1 1894 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 145


 6250 077c 114B     		ldr	r3, .L280+36
 6251 077e 1B68     		ldr	r3, [r3]
 6252 0780 0133     		adds	r3, r3, #1
 6253 0782 104A     		ldr	r2, .L280+36
 6254 0784 1360     		str	r3, [r2]
1895:main.c        ****             sysexMessageInProgress = 0;
 6255              		.loc 1 1895 0
 6256 0786 104B     		ldr	r3, .L280+40
 6257 0788 0022     		movs	r2, #0
 6258 078a 1A70     		strb	r2, [r3]
1896:main.c        ****             sysexPointer = 0;
 6259              		.loc 1 1896 0
 6260 078c 0B4B     		ldr	r3, .L280+28
 6261 078e 0022     		movs	r2, #0
 6262 0790 1A60     		str	r2, [r3]
1897:main.c        ****             sendingMessage = 0;
 6263              		.loc 1 1897 0
 6264 0792 0E4B     		ldr	r3, .L280+44
 6265 0794 0022     		movs	r2, #0
 6266 0796 1A70     		strb	r2, [r3]
1898:main.c        ****             parseThatMF = 0;
 6267              		.loc 1 1898 0
 6268 0798 0D4B     		ldr	r3, .L280+48
 6269 079a 0022     		movs	r2, #0
 6270 079c 1A70     		strb	r2, [r3]
 6271 079e 1CE0     		b	.L259
 6272              	.L281:
 6273              		.align	2
 6274              	.L280:
 6275 07a0 00000000 		.word	sysexBuffer
 6276 07a4 00000000 		.word	copedentNumberToWrite
 6277 07a8 00000000 		.word	copedentNamesArray
 6278 07ac 00000000 		.word	checkBase
 6279 07b0 00000000 		.word	checkStatus
 6280 07b4 00000000 		.word	copedent
 6281 07b8 00000000 		.word	currentFloat
 6282 07bc 00000000 		.word	sysexPointer
 6283 07c0 00000000 		.word	messageArraySize
 6284 07c4 00000000 		.word	SPI_errors
 6285 07c8 00000000 		.word	sysexMessageInProgress
 6286 07cc 00000000 		.word	sendingMessage
 6287 07d0 00000000 		.word	parseThatMF
 6288              	.L268:
1899:main.c        ****         } else 
1900:main.c        ****         {
1901:main.c        ****             sysexMessageInProgress = 0;
 6289              		.loc 1 1901 0
 6290 07d4 194B     		ldr	r3, .L282
 6291 07d6 0022     		movs	r2, #0
 6292 07d8 1A70     		strb	r2, [r3]
 6293              	.L259:
 6294              	.LBE25:
1902:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
1903:main.c        ****         }
1904:main.c        ****     }
1905:main.c        ****     
1906:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 146


 6295              		.loc 1 1906 0
 6296 07da 194B     		ldr	r3, .L282+4
 6297 07dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6298 07de 1846     		mov	r0, r3
 6299 07e0 0323     		movs	r3, #3
 6300 07e2 0022     		movs	r2, #0
 6301 07e4 0221     		movs	r1, #2
 6302 07e6 FFF7FEFF 		bl	OLEDwriteInt
1907:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 6303              		.loc 1 1907 0
 6304 07ea FFF7FEFF 		bl	OLEDgetCursor
 6305 07ee 0246     		mov	r2, r0
 6306 07f0 0323     		movs	r3, #3
 6307 07f2 0121     		movs	r1, #1
 6308 07f4 1348     		ldr	r0, .L282+8
 6309 07f6 FFF7FEFF 		bl	OLEDwriteString
1908:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OLEDgetC
 6310              		.loc 1 1908 0
 6311 07fa 114B     		ldr	r3, .L282+4
 6312 07fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6313 07fe 1A46     		mov	r2, r3
 6314 0800 1346     		mov	r3, r2
 6315 0802 DB00     		lsls	r3, r3, #3
 6316 0804 9B1A     		subs	r3, r3, r2
 6317 0806 5B00     		lsls	r3, r3, #1
 6318 0808 0F4A     		ldr	r2, .L282+12
 6319 080a 9C18     		adds	r4, r3, r2
 6320 080c FFF7FEFF 		bl	OLEDgetCursor
 6321 0810 0246     		mov	r2, r0
 6322 0812 0323     		movs	r3, #3
 6323 0814 0E21     		movs	r1, #14
 6324 0816 2046     		mov	r0, r4
 6325 0818 FFF7FEFF 		bl	OLEDwriteString
1909:main.c        ****     OLED_draw();
 6326              		.loc 1 1909 0
 6327 081c FFF7FEFF 		bl	OLED_draw
1910:main.c        ****     parsingSysex = 0;
 6328              		.loc 1 1910 0
 6329 0820 0A4B     		ldr	r3, .L282+16
 6330 0822 0022     		movs	r2, #0
 6331 0824 1A70     		strb	r2, [r3]
1911:main.c        ****     sysexPointer = 0;
 6332              		.loc 1 1911 0
 6333 0826 0A4B     		ldr	r3, .L282+20
 6334 0828 0022     		movs	r2, #0
 6335 082a 1A60     		str	r2, [r3]
1912:main.c        ****     parseThatMF = 0;
 6336              		.loc 1 1912 0
 6337 082c 094B     		ldr	r3, .L282+24
 6338 082e 0022     		movs	r2, #0
 6339 0830 1A70     		strb	r2, [r3]
1913:main.c        **** }
 6340              		.loc 1 1913 0
 6341 0832 00BF     		nop
 6342 0834 3437     		adds	r7, r7, #52
 6343              		.cfi_def_cfa_offset 12
 6344 0836 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 147


 6345              		.cfi_def_cfa_register 13
 6346              		@ sp needed
 6347 0838 90BD     		pop	{r4, r7, pc}
 6348              	.L283:
 6349 083a 00BF     		.align	2
 6350              	.L282:
 6351 083c 00000000 		.word	sysexMessageInProgress
 6352 0840 00000000 		.word	currentCopedent
 6353 0844 00040000 		.word	.LC0
 6354 0848 00000000 		.word	copedentNamesArray
 6355 084c 00000000 		.word	parsingSysex
 6356 0850 00000000 		.word	sysexPointer
 6357 0854 00000000 		.word	parseThatMF
 6358              		.cfi_endproc
 6359              	.LFE88:
 6360              		.size	parseSysex, .-parseSysex
 6361              		.comm	tempMIDI,4,4
 6362              		.global	firstSysex
 6363              		.bss
 6364              		.type	firstSysex, %object
 6365              		.size	firstSysex, 1
 6366              	firstSysex:
 6367 00f0 00       		.space	1
 6368              		.global	sysexPointerMask
 6369              		.section	.rodata
 6370              		.align	1
 6371              		.type	sysexPointerMask, %object
 6372              		.size	sysexPointerMask, 2
 6373              	sysexPointerMask:
 6374 0402 FF03     		.short	1023
 6375              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 6376              		.align	2
 6377              		.global	USB_callbackLocalMidiEvent
 6378              		.thumb
 6379              		.thumb_func
 6380              		.type	USB_callbackLocalMidiEvent, %function
 6381              	USB_callbackLocalMidiEvent:
 6382              	.LFB89:
1914:main.c        **** 
1915:main.c        **** volatile uint8_t tempMIDI[4];
1916:main.c        **** volatile uint8_t firstSysex = 0;
1917:main.c        **** const uint16_t sysexPointerMask = 1023;
1918:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
1919:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
1920:main.c        **** {   
 6383              		.loc 1 1920 0
 6384              		.cfi_startproc
 6385              		@ args = 0, pretend = 0, frame = 16
 6386              		@ frame_needed = 1, uses_anonymous_args = 0
 6387 0000 80B5     		push	{r7, lr}
 6388              		.cfi_def_cfa_offset 8
 6389              		.cfi_offset 7, -8
 6390              		.cfi_offset 14, -4
 6391 0002 84B0     		sub	sp, sp, #16
 6392              		.cfi_def_cfa_offset 24
 6393 0004 00AF     		add	r7, sp, #0
 6394              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 148


 6395 0006 0346     		mov	r3, r0
 6396 0008 3960     		str	r1, [r7]
 6397 000a FB71     		strb	r3, [r7, #7]
1921:main.c        ****     tempMIDI[0] = midiMsg[0];
 6398              		.loc 1 1921 0
 6399 000c 3B68     		ldr	r3, [r7]
 6400 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6401 0010 434B     		ldr	r3, .L294
 6402 0012 1A70     		strb	r2, [r3]
1922:main.c        ****     tempMIDI[1] = midiMsg[1];
 6403              		.loc 1 1922 0
 6404 0014 3B68     		ldr	r3, [r7]
 6405 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6406 0018 414B     		ldr	r3, .L294
 6407 001a 5A70     		strb	r2, [r3, #1]
1923:main.c        ****      tempMIDI[2] = midiMsg[2];
 6408              		.loc 1 1923 0
 6409 001c 3B68     		ldr	r3, [r7]
 6410 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 6411 0020 3F4B     		ldr	r3, .L294
 6412 0022 9A70     		strb	r2, [r3, #2]
1924:main.c        ****      tempMIDI[3] = midiMsg[3];
 6413              		.loc 1 1924 0
 6414 0024 3B68     		ldr	r3, [r7]
 6415 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 6416 0028 3D4B     		ldr	r3, .L294
 6417 002a DA70     		strb	r2, [r3, #3]
1925:main.c        ****     //check that we got here
1926:main.c        ****     
1927:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6418              		.loc 1 1927 0
 6419 002c 3D4B     		ldr	r3, .L294+4
 6420 002e 1B78     		ldrb	r3, [r3]
 6421 0030 DBB2     		uxtb	r3, r3
 6422 0032 002B     		cmp	r3, #0
 6423 0034 71D0     		beq	.L284
 6424              		.loc 1 1927 0 is_stmt 0 discriminator 1
 6425 0036 FFF7FEFF 		bl	USB_VBusPresent
 6426 003a 0346     		mov	r3, r0
 6427 003c 002B     		cmp	r3, #0
 6428 003e 6CD0     		beq	.L284
1928:main.c        ****     {
1929:main.c        ****         if (receivingSysex)
 6429              		.loc 1 1929 0 is_stmt 1
 6430 0040 394B     		ldr	r3, .L294+8
 6431 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6432 0044 002B     		cmp	r3, #0
 6433 0046 29D0     		beq	.L286
 6434              	.LBB31:
1930:main.c        ****         {
1931:main.c        ****             for (int i = 0; i < 3; i++)
 6435              		.loc 1 1931 0
 6436 0048 0023     		movs	r3, #0
 6437 004a FB60     		str	r3, [r7, #12]
 6438 004c 22E0     		b	.L287
 6439              	.L290:
1932:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 149


1933:main.c        ****                 if (midiMsg[i] < 128)
 6440              		.loc 1 1933 0
 6441 004e FB68     		ldr	r3, [r7, #12]
 6442 0050 3A68     		ldr	r2, [r7]
 6443 0052 1344     		add	r3, r3, r2
 6444 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6445 0056 5BB2     		sxtb	r3, r3
 6446 0058 002B     		cmp	r3, #0
 6447 005a 0EDB     		blt	.L288
1934:main.c        ****                 {
1935:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 6448              		.loc 1 1935 0
 6449 005c 334B     		ldr	r3, .L294+12
 6450 005e 1B68     		ldr	r3, [r3]
 6451 0060 5A1C     		adds	r2, r3, #1
 6452 0062 3249     		ldr	r1, .L294+12
 6453 0064 0A60     		str	r2, [r1]
 6454 0066 40F2FF32 		movw	r2, #1023
 6455 006a 1340     		ands	r3, r3, r2
 6456 006c FA68     		ldr	r2, [r7, #12]
 6457 006e 3968     		ldr	r1, [r7]
 6458 0070 0A44     		add	r2, r2, r1
 6459 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 6460 0074 2E4A     		ldr	r2, .L294+16
 6461 0076 D154     		strb	r1, [r2, r3]
 6462 0078 09E0     		b	.L289
 6463              	.L288:
1936:main.c        ****                 }
1937:main.c        ****                 else
1938:main.c        ****                 {
1939:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 6464              		.loc 1 1939 0
 6465 007a FB68     		ldr	r3, [r7, #12]
 6466 007c 3A68     		ldr	r2, [r7]
 6467 007e 1344     		add	r3, r3, r2
 6468 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6469 0082 F72B     		cmp	r3, #247
 6470 0084 03D1     		bne	.L289
1940:main.c        ****                     {
1941:main.c        ****                         receivingSysex = 0;
 6471              		.loc 1 1941 0
 6472 0086 284B     		ldr	r3, .L294+8
 6473 0088 0022     		movs	r2, #0
 6474 008a 1A70     		strb	r2, [r3]
1942:main.c        ****                         //parseSysex();
1943:main.c        ****                         return;
 6475              		.loc 1 1943 0
 6476 008c 45E0     		b	.L284
 6477              	.L289:
1931:main.c        ****             {
 6478              		.loc 1 1931 0 discriminator 2
 6479 008e FB68     		ldr	r3, [r7, #12]
 6480 0090 0133     		adds	r3, r3, #1
 6481 0092 FB60     		str	r3, [r7, #12]
 6482              	.L287:
1931:main.c        ****             {
 6483              		.loc 1 1931 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 150


 6484 0094 FB68     		ldr	r3, [r7, #12]
 6485 0096 022B     		cmp	r3, #2
 6486 0098 D9DD     		ble	.L290
 6487 009a 3EE0     		b	.L284
 6488              	.L286:
 6489              	.LBE31:
1944:main.c        ****                      }
1945:main.c        ****                 }
1946:main.c        ****             }
1947:main.c        ****         }
1948:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 6490              		.loc 1 1948 0 is_stmt 1
 6491 009c 3B68     		ldr	r3, [r7]
 6492 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6493 00a0 F02B     		cmp	r3, #240
 6494 00a2 3AD1     		bne	.L284
1949:main.c        ****         {
1950:main.c        ****             if (!parsingSysex)
 6495              		.loc 1 1950 0
 6496 00a4 234B     		ldr	r3, .L294+20
 6497 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6498 00a8 002B     		cmp	r3, #0
 6499 00aa 36D1     		bne	.L284
1951:main.c        ****             {
1952:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 6500              		.loc 1 1952 0
 6501 00ac 3B68     		ldr	r3, [r7]
 6502 00ae 0133     		adds	r3, r3, #1
 6503 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6504 00b2 7E2B     		cmp	r3, #126
 6505 00b4 03D1     		bne	.L292
1953:main.c        ****                 {
1954:main.c        ****                     parseThatMF = 1;
 6506              		.loc 1 1954 0
 6507 00b6 204B     		ldr	r3, .L294+24
 6508 00b8 0122     		movs	r2, #1
 6509 00ba 1A70     		strb	r2, [r3]
 6510 00bc 2DE0     		b	.L284
 6511              	.L292:
1955:main.c        **** 
1956:main.c        ****                     //sysexPointer = 0;
1957:main.c        ****                 }
1958:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2)
 6512              		.loc 1 1958 0
 6513 00be 3B68     		ldr	r3, [r7]
 6514 00c0 0133     		adds	r3, r3, #1
 6515 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6516 00c4 002B     		cmp	r3, #0
 6517 00c6 09D0     		beq	.L293
 6518              		.loc 1 1958 0 is_stmt 0 discriminator 1
 6519 00c8 3B68     		ldr	r3, [r7]
 6520 00ca 0133     		adds	r3, r3, #1
 6521 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6522 00ce 012B     		cmp	r3, #1
 6523 00d0 04D0     		beq	.L293
 6524              		.loc 1 1958 0 discriminator 2
 6525 00d2 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 151


 6526 00d4 0133     		adds	r3, r3, #1
 6527 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6528 00d8 022B     		cmp	r3, #2
 6529 00da 1ED1     		bne	.L284
 6530              	.L293:
1959:main.c        ****                 {
1960:main.c        ****                     receivingSysex = 1;
 6531              		.loc 1 1960 0 is_stmt 1
 6532 00dc 124B     		ldr	r3, .L294+8
 6533 00de 0122     		movs	r2, #1
 6534 00e0 1A70     		strb	r2, [r3]
1961:main.c        ****                     
1962:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
1963:main.c        ****                     if (sysexPointer == 0)
 6535              		.loc 1 1963 0
 6536 00e2 124B     		ldr	r3, .L294+12
 6537 00e4 1B68     		ldr	r3, [r3]
 6538 00e6 002B     		cmp	r3, #0
 6539 00e8 17D1     		bne	.L284
1964:main.c        ****                     {
1965:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 6540              		.loc 1 1965 0
 6541 00ea 104B     		ldr	r3, .L294+12
 6542 00ec 1B68     		ldr	r3, [r3]
 6543 00ee 5A1C     		adds	r2, r3, #1
 6544 00f0 0E49     		ldr	r1, .L294+12
 6545 00f2 0A60     		str	r2, [r1]
 6546 00f4 40F2FF32 		movw	r2, #1023
 6547 00f8 1340     		ands	r3, r3, r2
 6548 00fa 3A68     		ldr	r2, [r7]
 6549 00fc 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 6550 00fe 0C4A     		ldr	r2, .L294+16
 6551 0100 D154     		strb	r1, [r2, r3]
1966:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 6552              		.loc 1 1966 0
 6553 0102 0A4B     		ldr	r3, .L294+12
 6554 0104 1B68     		ldr	r3, [r3]
 6555 0106 5A1C     		adds	r2, r3, #1
 6556 0108 0849     		ldr	r1, .L294+12
 6557 010a 0A60     		str	r2, [r1]
 6558 010c 40F2FF32 		movw	r2, #1023
 6559 0110 1340     		ands	r3, r3, r2
 6560 0112 3A68     		ldr	r2, [r7]
 6561 0114 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 6562 0116 064A     		ldr	r2, .L294+16
 6563 0118 D154     		strb	r1, [r2, r3]
 6564              	.L284:
1967:main.c        ****                     }
1968:main.c        ****                 }
1969:main.c        ****             }
1970:main.c        ****         }
1971:main.c        ****         cable = cable; // so it doesn't complain about unused variables
1972:main.c        ****     }
1973:main.c        **** }    
 6565              		.loc 1 1973 0
 6566 011a 1037     		adds	r7, r7, #16
 6567              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 152


 6568 011c BD46     		mov	sp, r7
 6569              		.cfi_def_cfa_register 13
 6570              		@ sp needed
 6571 011e 80BD     		pop	{r7, pc}
 6572              	.L295:
 6573              		.align	2
 6574              	.L294:
 6575 0120 00000000 		.word	tempMIDI
 6576 0124 00000000 		.word	USB_active
 6577 0128 00000000 		.word	receivingSysex
 6578 012c 00000000 		.word	sysexPointer
 6579 0130 00000000 		.word	sysexBuffer
 6580 0134 00000000 		.word	parsingSysex
 6581 0138 00000000 		.word	parseThatMF
 6582              		.cfi_endproc
 6583              	.LFE89:
 6584              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 6585              		.text
 6586              	.Letext0:
 6587              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6588              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6589              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 6590              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 6591              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6592              		.file 7 "oled.h"
 6593              		.file 8 "Generated_Source\\PSoC5/USB_midi.h"
 6594              		.file 9 "Generated_Source\\PSoC5/Em_EEPROM.h"
 6595              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 6596              		.section	.debug_info,"",%progbits
 6597              	.Ldebug_info0:
 6598 0000 3B180000 		.4byte	0x183b
 6599 0004 0400     		.2byte	0x4
 6600 0006 00000000 		.4byte	.Ldebug_abbrev0
 6601 000a 04       		.byte	0x4
 6602 000b 01       		.uleb128 0x1
 6603 000c D9070000 		.4byte	.LASF277
 6604 0010 0C       		.byte	0xc
 6605 0011 2B090000 		.4byte	.LASF278
 6606 0015 09060000 		.4byte	.LASF279
 6607 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6608 001d 00000000 		.4byte	0
 6609 0021 00000000 		.4byte	.Ldebug_line0
 6610 0025 02       		.uleb128 0x2
 6611 0026 01       		.byte	0x1
 6612 0027 06       		.byte	0x6
 6613 0028 0A030000 		.4byte	.LASF0
 6614 002c 03       		.uleb128 0x3
 6615 002d D5010000 		.4byte	.LASF2
 6616 0031 02       		.byte	0x2
 6617 0032 1D       		.byte	0x1d
 6618 0033 37000000 		.4byte	0x37
 6619 0037 02       		.uleb128 0x2
 6620 0038 01       		.byte	0x1
 6621 0039 08       		.byte	0x8
 6622 003a 91030000 		.4byte	.LASF1
 6623 003e 03       		.uleb128 0x3
 6624 003f E50B0000 		.4byte	.LASF3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 153


 6625 0043 02       		.byte	0x2
 6626 0044 29       		.byte	0x29
 6627 0045 49000000 		.4byte	0x49
 6628 0049 02       		.uleb128 0x2
 6629 004a 02       		.byte	0x2
 6630 004b 05       		.byte	0x5
 6631 004c 8B0C0000 		.4byte	.LASF4
 6632 0050 03       		.uleb128 0x3
 6633 0051 88040000 		.4byte	.LASF5
 6634 0055 02       		.byte	0x2
 6635 0056 2B       		.byte	0x2b
 6636 0057 5B000000 		.4byte	0x5b
 6637 005b 02       		.uleb128 0x2
 6638 005c 02       		.byte	0x2
 6639 005d 07       		.byte	0x7
 6640 005e E70D0000 		.4byte	.LASF6
 6641 0062 03       		.uleb128 0x3
 6642 0063 0D0E0000 		.4byte	.LASF7
 6643 0067 02       		.byte	0x2
 6644 0068 3F       		.byte	0x3f
 6645 0069 6D000000 		.4byte	0x6d
 6646 006d 02       		.uleb128 0x2
 6647 006e 04       		.byte	0x4
 6648 006f 05       		.byte	0x5
 6649 0070 28020000 		.4byte	.LASF8
 6650 0074 03       		.uleb128 0x3
 6651 0075 D0080000 		.4byte	.LASF9
 6652 0079 02       		.byte	0x2
 6653 007a 41       		.byte	0x41
 6654 007b 7F000000 		.4byte	0x7f
 6655 007f 02       		.uleb128 0x2
 6656 0080 04       		.byte	0x4
 6657 0081 07       		.byte	0x7
 6658 0082 E6060000 		.4byte	.LASF10
 6659 0086 02       		.uleb128 0x2
 6660 0087 08       		.byte	0x8
 6661 0088 05       		.byte	0x5
 6662 0089 DB080000 		.4byte	.LASF11
 6663 008d 02       		.uleb128 0x2
 6664 008e 08       		.byte	0x8
 6665 008f 07       		.byte	0x7
 6666 0090 090B0000 		.4byte	.LASF12
 6667 0094 04       		.uleb128 0x4
 6668 0095 04       		.byte	0x4
 6669 0096 05       		.byte	0x5
 6670 0097 696E7400 		.ascii	"int\000"
 6671 009b 02       		.uleb128 0x2
 6672 009c 04       		.byte	0x4
 6673 009d 07       		.byte	0x7
 6674 009e B9090000 		.4byte	.LASF13
 6675 00a2 03       		.uleb128 0x3
 6676 00a3 16030000 		.4byte	.LASF14
 6677 00a7 03       		.byte	0x3
 6678 00a8 18       		.byte	0x18
 6679 00a9 2C000000 		.4byte	0x2c
 6680 00ad 03       		.uleb128 0x3
 6681 00ae D60C0000 		.4byte	.LASF15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 154


 6682 00b2 03       		.byte	0x3
 6683 00b3 20       		.byte	0x20
 6684 00b4 3E000000 		.4byte	0x3e
 6685 00b8 03       		.uleb128 0x3
 6686 00b9 200B0000 		.4byte	.LASF16
 6687 00bd 03       		.byte	0x3
 6688 00be 24       		.byte	0x24
 6689 00bf 50000000 		.4byte	0x50
 6690 00c3 03       		.uleb128 0x3
 6691 00c4 89000000 		.4byte	.LASF17
 6692 00c8 03       		.byte	0x3
 6693 00c9 2C       		.byte	0x2c
 6694 00ca 62000000 		.4byte	0x62
 6695 00ce 03       		.uleb128 0x3
 6696 00cf AE0D0000 		.4byte	.LASF18
 6697 00d3 03       		.byte	0x3
 6698 00d4 30       		.byte	0x30
 6699 00d5 74000000 		.4byte	0x74
 6700 00d9 05       		.uleb128 0x5
 6701 00da 5F0C0000 		.4byte	.LASF19
 6702 00de 04       		.byte	0x4
 6703 00df E901     		.2byte	0x1e9
 6704 00e1 37000000 		.4byte	0x37
 6705 00e5 05       		.uleb128 0x5
 6706 00e6 7A0E0000 		.4byte	.LASF20
 6707 00ea 04       		.byte	0x4
 6708 00eb EA01     		.2byte	0x1ea
 6709 00ed 5B000000 		.4byte	0x5b
 6710 00f1 05       		.uleb128 0x5
 6711 00f2 C5000000 		.4byte	.LASF21
 6712 00f6 04       		.byte	0x4
 6713 00f7 EB01     		.2byte	0x1eb
 6714 00f9 7F000000 		.4byte	0x7f
 6715 00fd 02       		.uleb128 0x2
 6716 00fe 04       		.byte	0x4
 6717 00ff 04       		.byte	0x4
 6718 0100 64090000 		.4byte	.LASF22
 6719 0104 02       		.uleb128 0x2
 6720 0105 08       		.byte	0x8
 6721 0106 04       		.byte	0x4
 6722 0107 24090000 		.4byte	.LASF23
 6723 010b 02       		.uleb128 0x2
 6724 010c 01       		.byte	0x1
 6725 010d 08       		.byte	0x8
 6726 010e 4F040000 		.4byte	.LASF24
 6727 0112 05       		.uleb128 0x5
 6728 0113 FE090000 		.4byte	.LASF25
 6729 0117 04       		.byte	0x4
 6730 0118 8B02     		.2byte	0x28b
 6731 011a 7F000000 		.4byte	0x7f
 6732 011e 05       		.uleb128 0x5
 6733 011f 810B0000 		.4byte	.LASF26
 6734 0123 04       		.byte	0x4
 6735 0124 9302     		.2byte	0x293
 6736 0126 2A010000 		.4byte	0x12a
 6737 012a 06       		.uleb128 0x6
 6738 012b D9000000 		.4byte	0xd9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 155


 6739 012f 02       		.uleb128 0x2
 6740 0130 08       		.byte	0x8
 6741 0131 04       		.byte	0x4
 6742 0132 910A0000 		.4byte	.LASF27
 6743 0136 02       		.uleb128 0x2
 6744 0137 04       		.byte	0x4
 6745 0138 07       		.byte	0x7
 6746 0139 2A000000 		.4byte	.LASF28
 6747 013d 07       		.uleb128 0x7
 6748 013e D9000000 		.4byte	0xd9
 6749 0142 4D010000 		.4byte	0x14d
 6750 0146 08       		.uleb128 0x8
 6751 0147 36010000 		.4byte	0x136
 6752 014b 03       		.byte	0x3
 6753 014c 00       		.byte	0
 6754 014d 09       		.uleb128 0x9
 6755 014e 1C       		.byte	0x1c
 6756 014f 05       		.byte	0x5
 6757 0150 1601     		.2byte	0x116
 6758 0152 BF010000 		.4byte	0x1bf
 6759 0156 0A       		.uleb128 0xa
 6760 0157 1E030000 		.4byte	.LASF29
 6761 015b 05       		.byte	0x5
 6762 015c 1B01     		.2byte	0x11b
 6763 015e F1000000 		.4byte	0xf1
 6764 0162 00       		.byte	0
 6765 0163 0A       		.uleb128 0xa
 6766 0164 9B010000 		.4byte	.LASF30
 6767 0168 05       		.byte	0x5
 6768 0169 2001     		.2byte	0x120
 6769 016b F1000000 		.4byte	0xf1
 6770 016f 04       		.byte	0x4
 6771 0170 0A       		.uleb128 0xa
 6772 0171 4B0E0000 		.4byte	.LASF31
 6773 0175 05       		.byte	0x5
 6774 0176 2301     		.2byte	0x123
 6775 0178 F1000000 		.4byte	0xf1
 6776 017c 08       		.byte	0x8
 6777 017d 0A       		.uleb128 0xa
 6778 017e EB0C0000 		.4byte	.LASF32
 6779 0182 05       		.byte	0x5
 6780 0183 2601     		.2byte	0x126
 6781 0185 F1000000 		.4byte	0xf1
 6782 0189 0C       		.byte	0xc
 6783 018a 0A       		.uleb128 0xa
 6784 018b 240D0000 		.4byte	.LASF33
 6785 018f 05       		.byte	0x5
 6786 0190 2B01     		.2byte	0x12b
 6787 0192 F1000000 		.4byte	0xf1
 6788 0196 10       		.byte	0x10
 6789 0197 0A       		.uleb128 0xa
 6790 0198 C7010000 		.4byte	.LASF34
 6791 019c 05       		.byte	0x5
 6792 019d 2E01     		.2byte	0x12e
 6793 019f D9000000 		.4byte	0xd9
 6794 01a3 14       		.byte	0x14
 6795 01a4 0A       		.uleb128 0xa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 156


 6796 01a5 16090000 		.4byte	.LASF35
 6797 01a9 05       		.byte	0x5
 6798 01aa 3301     		.2byte	0x133
 6799 01ac D9000000 		.4byte	0xd9
 6800 01b0 15       		.byte	0x15
 6801 01b1 0A       		.uleb128 0xa
 6802 01b2 88010000 		.4byte	.LASF36
 6803 01b6 05       		.byte	0x5
 6804 01b7 3601     		.2byte	0x136
 6805 01b9 F1000000 		.4byte	0xf1
 6806 01bd 18       		.byte	0x18
 6807 01be 00       		.byte	0
 6808 01bf 05       		.uleb128 0x5
 6809 01c0 CE060000 		.4byte	.LASF37
 6810 01c4 05       		.byte	0x5
 6811 01c5 3701     		.2byte	0x137
 6812 01c7 4D010000 		.4byte	0x14d
 6813 01cb 0B       		.uleb128 0xb
 6814 01cc 01       		.byte	0x1
 6815 01cd 37000000 		.4byte	0x37
 6816 01d1 05       		.byte	0x5
 6817 01d2 5401     		.2byte	0x154
 6818 01d4 F7010000 		.4byte	0x1f7
 6819 01d8 0C       		.uleb128 0xc
 6820 01d9 74000000 		.4byte	.LASF38
 6821 01dd 00       		.byte	0
 6822 01de 0C       		.uleb128 0xc
 6823 01df 4D050000 		.4byte	.LASF39
 6824 01e3 01       		.byte	0x1
 6825 01e4 0C       		.uleb128 0xc
 6826 01e5 6E010000 		.4byte	.LASF40
 6827 01e9 02       		.byte	0x2
 6828 01ea 0C       		.uleb128 0xc
 6829 01eb 4D030000 		.4byte	.LASF41
 6830 01ef 03       		.byte	0x3
 6831 01f0 0C       		.uleb128 0xc
 6832 01f1 79070000 		.4byte	.LASF42
 6833 01f5 04       		.byte	0x4
 6834 01f6 00       		.byte	0
 6835 01f7 05       		.uleb128 0x5
 6836 01f8 18010000 		.4byte	.LASF43
 6837 01fc 05       		.byte	0x5
 6838 01fd 5A01     		.2byte	0x15a
 6839 01ff CB010000 		.4byte	0x1cb
 6840 0203 06       		.uleb128 0x6
 6841 0204 A2000000 		.4byte	0xa2
 6842 0208 06       		.uleb128 0x6
 6843 0209 B8000000 		.4byte	0xb8
 6844 020d 03       		.uleb128 0x3
 6845 020e E2040000 		.4byte	.LASF44
 6846 0212 06       		.byte	0x6
 6847 0213 6C       		.byte	0x6c
 6848 0214 9B000000 		.4byte	0x9b
 6849 0218 0D       		.uleb128 0xd
 6850 0219 63030000 		.4byte	.LASF50
 6851 021d 01       		.byte	0x1
 6852 021e 37000000 		.4byte	0x37
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 157


 6853 0222 07       		.byte	0x7
 6854 0223 1C       		.byte	0x1c
 6855 0224 47020000 		.4byte	0x247
 6856 0228 0C       		.uleb128 0xc
 6857 0229 83080000 		.4byte	.LASF45
 6858 022d 00       		.byte	0
 6859 022e 0C       		.uleb128 0xc
 6860 022f B1020000 		.4byte	.LASF46
 6861 0233 01       		.byte	0x1
 6862 0234 0C       		.uleb128 0xc
 6863 0235 A3000000 		.4byte	.LASF47
 6864 0239 02       		.byte	0x2
 6865 023a 0C       		.uleb128 0xc
 6866 023b 9A050000 		.4byte	.LASF48
 6867 023f 03       		.byte	0x3
 6868 0240 0C       		.uleb128 0xc
 6869 0241 10010000 		.4byte	.LASF49
 6870 0245 04       		.byte	0x4
 6871 0246 00       		.byte	0
 6872 0247 0D       		.uleb128 0xd
 6873 0248 C8020000 		.4byte	.LASF51
 6874 024c 01       		.byte	0x1
 6875 024d 37000000 		.4byte	0x37
 6876 0251 01       		.byte	0x1
 6877 0252 1D       		.byte	0x1d
 6878 0253 76020000 		.4byte	0x276
 6879 0257 0C       		.uleb128 0xc
 6880 0258 75050000 		.4byte	.LASF52
 6881 025c 00       		.byte	0
 6882 025d 0C       		.uleb128 0xc
 6883 025e EF0B0000 		.4byte	.LASF53
 6884 0262 02       		.byte	0x2
 6885 0263 0C       		.uleb128 0xc
 6886 0264 9C0B0000 		.4byte	.LASF54
 6887 0268 03       		.byte	0x3
 6888 0269 0C       		.uleb128 0xc
 6889 026a FA0D0000 		.4byte	.LASF55
 6890 026e 04       		.byte	0x4
 6891 026f 0C       		.uleb128 0xc
 6892 0270 E5010000 		.4byte	.LASF56
 6893 0274 05       		.byte	0x5
 6894 0275 00       		.byte	0
 6895 0276 0E       		.uleb128 0xe
 6896 0277 400B0000 		.4byte	.LASF280
 6897 027b 04       		.byte	0x4
 6898 027c 01       		.byte	0x1
 6899 027d 8D       		.byte	0x8d
 6900 027e A0020000 		.4byte	0x2a0
 6901 0282 0F       		.uleb128 0xf
 6902 0283 6600     		.ascii	"f\000"
 6903 0285 01       		.byte	0x1
 6904 0286 8E       		.byte	0x8e
 6905 0287 FD000000 		.4byte	0xfd
 6906 028b 0F       		.uleb128 0xf
 6907 028c 6200     		.ascii	"b\000"
 6908 028e 01       		.byte	0x1
 6909 028f 8F       		.byte	0x8f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 158


 6910 0290 A0020000 		.4byte	0x2a0
 6911 0294 0F       		.uleb128 0xf
 6912 0295 75333200 		.ascii	"u32\000"
 6913 0299 01       		.byte	0x1
 6914 029a 90       		.byte	0x90
 6915 029b CE000000 		.4byte	0xce
 6916 029f 00       		.byte	0
 6917 02a0 07       		.uleb128 0x7
 6918 02a1 A2000000 		.4byte	0xa2
 6919 02a5 B0020000 		.4byte	0x2b0
 6920 02a9 08       		.uleb128 0x8
 6921 02aa 36010000 		.4byte	0x136
 6922 02ae 03       		.byte	0x3
 6923 02af 00       		.byte	0
 6924 02b0 10       		.uleb128 0x10
 6925 02b1 43030000 		.4byte	.LASF102
 6926 02b5 01       		.byte	0x1
 6927 02b6 94       		.byte	0x94
 6928 02b7 00000000 		.4byte	.LFB64
 6929 02bb 74010000 		.4byte	.LFE64-.LFB64
 6930 02bf 01       		.uleb128 0x1
 6931 02c0 9C       		.byte	0x9c
 6932 02c1 DC020000 		.4byte	0x2dc
 6933 02c5 11       		.uleb128 0x11
 6934 02c6 66000000 		.4byte	.LBB2
 6935 02ca 7A000000 		.4byte	.LBE2-.LBB2
 6936 02ce 12       		.uleb128 0x12
 6937 02cf 6900     		.ascii	"i\000"
 6938 02d1 01       		.byte	0x1
 6939 02d2 9A       		.byte	0x9a
 6940 02d3 94000000 		.4byte	0x94
 6941 02d7 02       		.uleb128 0x2
 6942 02d8 91       		.byte	0x91
 6943 02d9 6C       		.sleb128 -20
 6944 02da 00       		.byte	0
 6945 02db 00       		.byte	0
 6946 02dc 13       		.uleb128 0x13
 6947 02dd 550B0000 		.4byte	.LASF57
 6948 02e1 01       		.byte	0x1
 6949 02e2 B8       		.byte	0xb8
 6950 02e3 00000000 		.4byte	.LFB65
 6951 02e7 9C000000 		.4byte	.LFE65-.LFB65
 6952 02eb 01       		.uleb128 0x1
 6953 02ec 9C       		.byte	0x9c
 6954 02ed 13       		.uleb128 0x13
 6955 02ee DB090000 		.4byte	.LASF58
 6956 02f2 01       		.byte	0x1
 6957 02f3 E1       		.byte	0xe1
 6958 02f4 00000000 		.4byte	.LFB66
 6959 02f8 14000000 		.4byte	.LFE66-.LFB66
 6960 02fc 01       		.uleb128 0x1
 6961 02fd 9C       		.byte	0x9c
 6962 02fe 13       		.uleb128 0x13
 6963 02ff 98080000 		.4byte	.LASF59
 6964 0303 01       		.byte	0x1
 6965 0304 EC       		.byte	0xec
 6966 0305 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 159


 6967 0309 7C000000 		.4byte	.LFE67-.LFB67
 6968 030d 01       		.uleb128 0x1
 6969 030e 9C       		.byte	0x9c
 6970 030f 14       		.uleb128 0x14
 6971 0310 79040000 		.4byte	.LASF62
 6972 0314 01       		.byte	0x1
 6973 0315 0801     		.2byte	0x108
 6974 0317 FD000000 		.4byte	0xfd
 6975 031b 00000000 		.4byte	.LFB68
 6976 031f 58000000 		.4byte	.LFE68-.LFB68
 6977 0323 01       		.uleb128 0x1
 6978 0324 9C       		.byte	0x9c
 6979 0325 75030000 		.4byte	0x375
 6980 0329 15       		.uleb128 0x15
 6981 032a 6D696E00 		.ascii	"min\000"
 6982 032e 01       		.byte	0x1
 6983 032f 0801     		.2byte	0x108
 6984 0331 FD000000 		.4byte	0xfd
 6985 0335 02       		.uleb128 0x2
 6986 0336 91       		.byte	0x91
 6987 0337 6C       		.sleb128 -20
 6988 0338 15       		.uleb128 0x15
 6989 0339 76616C00 		.ascii	"val\000"
 6990 033d 01       		.byte	0x1
 6991 033e 0801     		.2byte	0x108
 6992 0340 FD000000 		.4byte	0xfd
 6993 0344 02       		.uleb128 0x2
 6994 0345 91       		.byte	0x91
 6995 0346 68       		.sleb128 -24
 6996 0347 15       		.uleb128 0x15
 6997 0348 6D617800 		.ascii	"max\000"
 6998 034c 01       		.byte	0x1
 6999 034d 0801     		.2byte	0x108
 7000 034f FD000000 		.4byte	0xfd
 7001 0353 02       		.uleb128 0x2
 7002 0354 91       		.byte	0x91
 7003 0355 64       		.sleb128 -28
 7004 0356 16       		.uleb128 0x16
 7005 0357 0E090000 		.4byte	.LASF60
 7006 035b 01       		.byte	0x1
 7007 035c 0A01     		.2byte	0x10a
 7008 035e FD000000 		.4byte	0xfd
 7009 0362 02       		.uleb128 0x2
 7010 0363 91       		.byte	0x91
 7011 0364 74       		.sleb128 -12
 7012 0365 16       		.uleb128 0x16
 7013 0366 0A040000 		.4byte	.LASF61
 7014 036a 01       		.byte	0x1
 7015 036b 0B01     		.2byte	0x10b
 7016 036d FD000000 		.4byte	0xfd
 7017 0371 02       		.uleb128 0x2
 7018 0372 91       		.byte	0x91
 7019 0373 70       		.sleb128 -16
 7020 0374 00       		.byte	0
 7021 0375 14       		.uleb128 0x14
 7022 0376 2C0E0000 		.4byte	.LASF63
 7023 037a 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 160


 7024 037b 1E01     		.2byte	0x11e
 7025 037d FD000000 		.4byte	0xfd
 7026 0381 00000000 		.4byte	.LFB69
 7027 0385 68000000 		.4byte	.LFE69-.LFB69
 7028 0389 01       		.uleb128 0x1
 7029 038a 9C       		.byte	0x9c
 7030 038b 9D030000 		.4byte	0x39d
 7031 038f 15       		.uleb128 0x15
 7032 0390 6600     		.ascii	"f\000"
 7033 0392 01       		.byte	0x1
 7034 0393 1E01     		.2byte	0x11e
 7035 0395 FD000000 		.4byte	0xfd
 7036 0399 02       		.uleb128 0x2
 7037 039a 91       		.byte	0x91
 7038 039b 74       		.sleb128 -12
 7039 039c 00       		.byte	0
 7040 039d 14       		.uleb128 0x14
 7041 039e D00A0000 		.4byte	.LASF64
 7042 03a2 01       		.byte	0x1
 7043 03a3 2501     		.2byte	0x125
 7044 03a5 FD000000 		.4byte	0xfd
 7045 03a9 00000000 		.4byte	.LFB70
 7046 03ad 4C000000 		.4byte	.LFE70-.LFB70
 7047 03b1 01       		.uleb128 0x1
 7048 03b2 9C       		.byte	0x9c
 7049 03b3 C5030000 		.4byte	0x3c5
 7050 03b7 15       		.uleb128 0x15
 7051 03b8 6600     		.ascii	"f\000"
 7052 03ba 01       		.byte	0x1
 7053 03bb 2501     		.2byte	0x125
 7054 03bd FD000000 		.4byte	0xfd
 7055 03c1 02       		.uleb128 0x2
 7056 03c2 91       		.byte	0x91
 7057 03c3 74       		.sleb128 -12
 7058 03c4 00       		.byte	0
 7059 03c5 14       		.uleb128 0x14
 7060 03c6 AA060000 		.4byte	.LASF65
 7061 03ca 01       		.byte	0x1
 7062 03cb 2B01     		.2byte	0x12b
 7063 03cd FD000000 		.4byte	0xfd
 7064 03d1 00000000 		.4byte	.LFB71
 7065 03d5 46000000 		.4byte	.LFE71-.LFB71
 7066 03d9 01       		.uleb128 0x1
 7067 03da 9C       		.byte	0x9c
 7068 03db 27040000 		.4byte	0x427
 7069 03df 15       		.uleb128 0x15
 7070 03e0 4100     		.ascii	"A\000"
 7071 03e2 01       		.byte	0x1
 7072 03e3 2B01     		.2byte	0x12b
 7073 03e5 FD000000 		.4byte	0xfd
 7074 03e9 02       		.uleb128 0x2
 7075 03ea 91       		.byte	0x91
 7076 03eb 6C       		.sleb128 -20
 7077 03ec 15       		.uleb128 0x15
 7078 03ed 4200     		.ascii	"B\000"
 7079 03ef 01       		.byte	0x1
 7080 03f0 2B01     		.2byte	0x12b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 161


 7081 03f2 FD000000 		.4byte	0xfd
 7082 03f6 02       		.uleb128 0x2
 7083 03f7 91       		.byte	0x91
 7084 03f8 68       		.sleb128 -24
 7085 03f9 17       		.uleb128 0x17
 7086 03fa DF010000 		.4byte	.LASF66
 7087 03fe 01       		.byte	0x1
 7088 03ff 2B01     		.2byte	0x12b
 7089 0401 FD000000 		.4byte	0xfd
 7090 0405 02       		.uleb128 0x2
 7091 0406 91       		.byte	0x91
 7092 0407 64       		.sleb128 -28
 7093 0408 16       		.uleb128 0x16
 7094 0409 F3020000 		.4byte	.LASF67
 7095 040d 01       		.byte	0x1
 7096 040e 2D01     		.2byte	0x12d
 7097 0410 FD000000 		.4byte	0xfd
 7098 0414 02       		.uleb128 0x2
 7099 0415 91       		.byte	0x91
 7100 0416 74       		.sleb128 -12
 7101 0417 18       		.uleb128 0x18
 7102 0418 6F757400 		.ascii	"out\000"
 7103 041c 01       		.byte	0x1
 7104 041d 3001     		.2byte	0x130
 7105 041f FD000000 		.4byte	0xfd
 7106 0423 02       		.uleb128 0x2
 7107 0424 91       		.byte	0x91
 7108 0425 70       		.sleb128 -16
 7109 0426 00       		.byte	0
 7110 0427 19       		.uleb128 0x19
 7111 0428 6D617000 		.ascii	"map\000"
 7112 042c 01       		.byte	0x1
 7113 042d BC01     		.2byte	0x1bc
 7114 042f FD000000 		.4byte	0xfd
 7115 0433 00000000 		.4byte	.LFB72
 7116 0437 56000000 		.4byte	.LFE72-.LFB72
 7117 043b 01       		.uleb128 0x1
 7118 043c 9C       		.byte	0x9c
 7119 043d 8D040000 		.4byte	0x48d
 7120 0441 17       		.uleb128 0x17
 7121 0442 20040000 		.4byte	.LASF68
 7122 0446 01       		.byte	0x1
 7123 0447 BC01     		.2byte	0x1bc
 7124 0449 FD000000 		.4byte	0xfd
 7125 044d 02       		.uleb128 0x2
 7126 044e 91       		.byte	0x91
 7127 044f 6C       		.sleb128 -20
 7128 0450 17       		.uleb128 0x17
 7129 0451 AF010000 		.4byte	.LASF69
 7130 0455 01       		.byte	0x1
 7131 0456 BC01     		.2byte	0x1bc
 7132 0458 FD000000 		.4byte	0xfd
 7133 045c 02       		.uleb128 0x2
 7134 045d 91       		.byte	0x91
 7135 045e 68       		.sleb128 -24
 7136 045f 17       		.uleb128 0x17
 7137 0460 C2070000 		.4byte	.LASF70
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 162


 7138 0464 01       		.byte	0x1
 7139 0465 BC01     		.2byte	0x1bc
 7140 0467 FD000000 		.4byte	0xfd
 7141 046b 02       		.uleb128 0x2
 7142 046c 91       		.byte	0x91
 7143 046d 64       		.sleb128 -28
 7144 046e 17       		.uleb128 0x17
 7145 046f 91070000 		.4byte	.LASF71
 7146 0473 01       		.byte	0x1
 7147 0474 BC01     		.2byte	0x1bc
 7148 0476 FD000000 		.4byte	0xfd
 7149 047a 02       		.uleb128 0x2
 7150 047b 91       		.byte	0x91
 7151 047c 60       		.sleb128 -32
 7152 047d 17       		.uleb128 0x17
 7153 047e 56090000 		.4byte	.LASF72
 7154 0482 01       		.byte	0x1
 7155 0483 BC01     		.2byte	0x1bc
 7156 0485 FD000000 		.4byte	0xfd
 7157 0489 02       		.uleb128 0x2
 7158 048a 91       		.byte	0x91
 7159 048b 00       		.sleb128 0
 7160 048c 00       		.byte	0
 7161 048d 14       		.uleb128 0x14
 7162 048e 78020000 		.4byte	.LASF73
 7163 0492 01       		.byte	0x1
 7164 0493 C301     		.2byte	0x1c3
 7165 0495 94000000 		.4byte	0x94
 7166 0499 00000000 		.4byte	.LFB73
 7167 049d 04130000 		.4byte	.LFE73-.LFB73
 7168 04a1 01       		.uleb128 0x1
 7169 04a2 9C       		.byte	0x9c
 7170 04a3 F6060000 		.4byte	0x6f6
 7171 04a7 16       		.uleb128 0x16
 7172 04a8 590E0000 		.4byte	.LASF74
 7173 04ac 01       		.byte	0x1
 7174 04ad 0002     		.2byte	0x200
 7175 04af A2000000 		.4byte	0xa2
 7176 04b3 03       		.uleb128 0x3
 7177 04b4 91       		.byte	0x91
 7178 04b5 B37F     		.sleb128 -77
 7179 04b7 1A       		.uleb128 0x1a
 7180 04b8 0C000000 		.4byte	.LBB3
 7181 04bc EA000000 		.4byte	.LBE3-.LBB3
 7182 04c0 EB040000 		.4byte	0x4eb
 7183 04c4 18       		.uleb128 0x18
 7184 04c5 6900     		.ascii	"i\000"
 7185 04c7 01       		.byte	0x1
 7186 04c8 CB01     		.2byte	0x1cb
 7187 04ca 94000000 		.4byte	0x94
 7188 04ce 02       		.uleb128 0x2
 7189 04cf 91       		.byte	0x91
 7190 04d0 6C       		.sleb128 -20
 7191 04d1 11       		.uleb128 0x11
 7192 04d2 12000000 		.4byte	.LBB4
 7193 04d6 D8000000 		.4byte	.LBE4-.LBB4
 7194 04da 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 163


 7195 04db B6010000 		.4byte	.LASF75
 7196 04df 01       		.byte	0x1
 7197 04e0 CE01     		.2byte	0x1ce
 7198 04e2 FD000000 		.4byte	0xfd
 7199 04e6 02       		.uleb128 0x2
 7200 04e7 91       		.byte	0x91
 7201 04e8 40       		.sleb128 -64
 7202 04e9 00       		.byte	0
 7203 04ea 00       		.byte	0
 7204 04eb 1A       		.uleb128 0x1a
 7205 04ec 12010000 		.4byte	.LBB5
 7206 04f0 76010000 		.4byte	.LBE5-.LBB5
 7207 04f4 A7050000 		.4byte	0x5a7
 7208 04f8 16       		.uleb128 0x16
 7209 04f9 B2030000 		.4byte	.LASF76
 7210 04fd 01       		.byte	0x1
 7211 04fe DE01     		.2byte	0x1de
 7212 0500 94000000 		.4byte	0x94
 7213 0504 02       		.uleb128 0x2
 7214 0505 91       		.byte	0x91
 7215 0506 68       		.sleb128 -24
 7216 0507 1A       		.uleb128 0x1a
 7217 0508 18010000 		.4byte	.LBB6
 7218 050c 54000000 		.4byte	.LBE6-.LBB6
 7219 0510 24050000 		.4byte	0x524
 7220 0514 16       		.uleb128 0x16
 7221 0515 5C0D0000 		.4byte	.LASF77
 7222 0519 01       		.byte	0x1
 7223 051a E101     		.2byte	0x1e1
 7224 051c 94000000 		.4byte	0x94
 7225 0520 02       		.uleb128 0x2
 7226 0521 91       		.byte	0x91
 7227 0522 64       		.sleb128 -28
 7228 0523 00       		.byte	0
 7229 0524 11       		.uleb128 0x11
 7230 0525 6C010000 		.4byte	.LBB7
 7231 0529 0E010000 		.4byte	.LBE7-.LBB7
 7232 052d 18       		.uleb128 0x18
 7233 052e 6900     		.ascii	"i\000"
 7234 0530 01       		.byte	0x1
 7235 0531 E501     		.2byte	0x1e5
 7236 0533 94000000 		.4byte	0x94
 7237 0537 02       		.uleb128 0x2
 7238 0538 91       		.byte	0x91
 7239 0539 60       		.sleb128 -32
 7240 053a 11       		.uleb128 0x11
 7241 053b 72010000 		.4byte	.LBB8
 7242 053f FA000000 		.4byte	.LBE8-.LBB8
 7243 0543 16       		.uleb128 0x16
 7244 0544 C3030000 		.4byte	.LASF78
 7245 0548 01       		.byte	0x1
 7246 0549 E701     		.2byte	0x1e7
 7247 054b 94000000 		.4byte	0x94
 7248 054f 03       		.uleb128 0x3
 7249 0550 91       		.byte	0x91
 7250 0551 BC7F     		.sleb128 -68
 7251 0553 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 164


 7252 0554 80010000 		.4byte	.LBB9
 7253 0558 EC000000 		.4byte	.LBE9-.LBB9
 7254 055c 18       		.uleb128 0x18
 7255 055d 6A00     		.ascii	"j\000"
 7256 055f 01       		.byte	0x1
 7257 0560 E801     		.2byte	0x1e8
 7258 0562 94000000 		.4byte	0x94
 7259 0566 02       		.uleb128 0x2
 7260 0567 91       		.byte	0x91
 7261 0568 5C       		.sleb128 -36
 7262 0569 11       		.uleb128 0x11
 7263 056a A4010000 		.4byte	.LBB10
 7264 056e BC000000 		.4byte	.LBE10-.LBB10
 7265 0572 16       		.uleb128 0x16
 7266 0573 FB020000 		.4byte	.LASF79
 7267 0577 01       		.byte	0x1
 7268 0578 EB01     		.2byte	0x1eb
 7269 057a 94000000 		.4byte	0x94
 7270 057e 03       		.uleb128 0x3
 7271 057f 91       		.byte	0x91
 7272 0580 B87F     		.sleb128 -72
 7273 0582 16       		.uleb128 0x16
 7274 0583 380E0000 		.4byte	.LASF80
 7275 0587 01       		.byte	0x1
 7276 0588 EC01     		.2byte	0x1ec
 7277 058a B8000000 		.4byte	0xb8
 7278 058e 03       		.uleb128 0x3
 7279 058f 91       		.byte	0x91
 7280 0590 B67F     		.sleb128 -74
 7281 0592 16       		.uleb128 0x16
 7282 0593 03090000 		.4byte	.LASF81
 7283 0597 01       		.byte	0x1
 7284 0598 ED01     		.2byte	0x1ed
 7285 059a B8000000 		.4byte	0xb8
 7286 059e 03       		.uleb128 0x3
 7287 059f 91       		.byte	0x91
 7288 05a0 B47F     		.sleb128 -76
 7289 05a2 00       		.byte	0
 7290 05a3 00       		.byte	0
 7291 05a4 00       		.byte	0
 7292 05a5 00       		.byte	0
 7293 05a6 00       		.byte	0
 7294 05a7 1A       		.uleb128 0x1a
 7295 05a8 98030000 		.4byte	.LBB11
 7296 05ac E6000000 		.4byte	.LBE11-.LBB11
 7297 05b0 C5050000 		.4byte	0x5c5
 7298 05b4 16       		.uleb128 0x16
 7299 05b5 5D000000 		.4byte	.LASF82
 7300 05b9 01       		.byte	0x1
 7301 05ba 7A03     		.2byte	0x37a
 7302 05bc AD000000 		.4byte	0xad
 7303 05c0 03       		.uleb128 0x3
 7304 05c1 91       		.byte	0x91
 7305 05c2 B07F     		.sleb128 -80
 7306 05c4 00       		.byte	0
 7307 05c5 1A       		.uleb128 0x1a
 7308 05c6 3C050000 		.4byte	.LBB12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 165


 7309 05ca 28000000 		.4byte	.LBE12-.LBB12
 7310 05ce E3050000 		.4byte	0x5e3
 7311 05d2 16       		.uleb128 0x16
 7312 05d3 BC040000 		.4byte	.LASF83
 7313 05d7 01       		.byte	0x1
 7314 05d8 A103     		.2byte	0x3a1
 7315 05da B8000000 		.4byte	0xb8
 7316 05de 03       		.uleb128 0x3
 7317 05df 91       		.byte	0x91
 7318 05e0 AE7F     		.sleb128 -82
 7319 05e2 00       		.byte	0
 7320 05e3 1A       		.uleb128 0x1a
 7321 05e4 CC050000 		.4byte	.LBB13
 7322 05e8 84020000 		.4byte	.LBE13-.LBB13
 7323 05ec FE050000 		.4byte	0x5fe
 7324 05f0 18       		.uleb128 0x18
 7325 05f1 6900     		.ascii	"i\000"
 7326 05f3 01       		.byte	0x1
 7327 05f4 CA03     		.2byte	0x3ca
 7328 05f6 94000000 		.4byte	0x94
 7329 05fa 02       		.uleb128 0x2
 7330 05fb 91       		.byte	0x91
 7331 05fc 58       		.sleb128 -40
 7332 05fd 00       		.byte	0
 7333 05fe 1A       		.uleb128 0x1a
 7334 05ff 50080000 		.4byte	.LBB14
 7335 0603 46000000 		.4byte	.LBE14-.LBB14
 7336 0607 19060000 		.4byte	0x619
 7337 060b 18       		.uleb128 0x18
 7338 060c 6900     		.ascii	"i\000"
 7339 060e 01       		.byte	0x1
 7340 060f EA03     		.2byte	0x3ea
 7341 0611 94000000 		.4byte	0x94
 7342 0615 02       		.uleb128 0x2
 7343 0616 91       		.byte	0x91
 7344 0617 54       		.sleb128 -44
 7345 0618 00       		.byte	0
 7346 0619 1A       		.uleb128 0x1a
 7347 061a 6C0D0000 		.4byte	.LBB15
 7348 061e A4000000 		.4byte	.LBE15-.LBB15
 7349 0622 34060000 		.4byte	0x634
 7350 0626 18       		.uleb128 0x18
 7351 0627 6900     		.ascii	"i\000"
 7352 0629 01       		.byte	0x1
 7353 062a A604     		.2byte	0x4a6
 7354 062c 94000000 		.4byte	0x94
 7355 0630 02       		.uleb128 0x2
 7356 0631 91       		.byte	0x91
 7357 0632 50       		.sleb128 -48
 7358 0633 00       		.byte	0
 7359 0634 1A       		.uleb128 0x1a
 7360 0635 100E0000 		.4byte	.LBB16
 7361 0639 4E030000 		.4byte	.LBE16-.LBB16
 7362 063d A9060000 		.4byte	0x6a9
 7363 0641 18       		.uleb128 0x18
 7364 0642 6900     		.ascii	"i\000"
 7365 0644 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 166


 7366 0645 B604     		.2byte	0x4b6
 7367 0647 94000000 		.4byte	0x94
 7368 064b 02       		.uleb128 0x2
 7369 064c 91       		.byte	0x91
 7370 064d 4C       		.sleb128 -52
 7371 064e 11       		.uleb128 0x11
 7372 064f 400E0000 		.4byte	.LBB17
 7373 0653 0C030000 		.4byte	.LBE17-.LBB17
 7374 0657 16       		.uleb128 0x16
 7375 0658 3F0A0000 		.4byte	.LASF84
 7376 065c 01       		.byte	0x1
 7377 065d C704     		.2byte	0x4c7
 7378 065f FD000000 		.4byte	0xfd
 7379 0663 03       		.uleb128 0x3
 7380 0664 91       		.byte	0x91
 7381 0665 A87F     		.sleb128 -88
 7382 0667 16       		.uleb128 0x16
 7383 0668 C70C0000 		.4byte	.LASF85
 7384 066c 01       		.byte	0x1
 7385 066d D404     		.2byte	0x4d4
 7386 066f FD000000 		.4byte	0xfd
 7387 0673 03       		.uleb128 0x3
 7388 0674 91       		.byte	0x91
 7389 0675 A47F     		.sleb128 -92
 7390 0677 16       		.uleb128 0x16
 7391 0678 9F090000 		.4byte	.LASF86
 7392 067c 01       		.byte	0x1
 7393 067d D704     		.2byte	0x4d7
 7394 067f FD000000 		.4byte	0xfd
 7395 0683 03       		.uleb128 0x3
 7396 0684 91       		.byte	0x91
 7397 0685 A07F     		.sleb128 -96
 7398 0687 16       		.uleb128 0x16
 7399 0688 19050000 		.4byte	.LASF87
 7400 068c 01       		.byte	0x1
 7401 068d D904     		.2byte	0x4d9
 7402 068f FD000000 		.4byte	0xfd
 7403 0693 03       		.uleb128 0x3
 7404 0694 91       		.byte	0x91
 7405 0695 9C7F     		.sleb128 -100
 7406 0697 16       		.uleb128 0x16
 7407 0698 700C0000 		.4byte	.LASF88
 7408 069c 01       		.byte	0x1
 7409 069d DB04     		.2byte	0x4db
 7410 069f FD000000 		.4byte	0xfd
 7411 06a3 03       		.uleb128 0x3
 7412 06a4 91       		.byte	0x91
 7413 06a5 987F     		.sleb128 -104
 7414 06a7 00       		.byte	0
 7415 06a8 00       		.byte	0
 7416 06a9 1A       		.uleb128 0x1a
 7417 06aa F6110000 		.4byte	.LBB18
 7418 06ae 56000000 		.4byte	.LBE18-.LBB18
 7419 06b2 DE060000 		.4byte	0x6de
 7420 06b6 18       		.uleb128 0x18
 7421 06b7 6900     		.ascii	"i\000"
 7422 06b9 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 167


 7423 06ba 1305     		.2byte	0x513
 7424 06bc 94000000 		.4byte	0x94
 7425 06c0 02       		.uleb128 0x2
 7426 06c1 91       		.byte	0x91
 7427 06c2 48       		.sleb128 -56
 7428 06c3 11       		.uleb128 0x11
 7429 06c4 FC110000 		.4byte	.LBB19
 7430 06c8 44000000 		.4byte	.LBE19-.LBB19
 7431 06cc 16       		.uleb128 0x16
 7432 06cd 760B0000 		.4byte	.LASF89
 7433 06d1 01       		.byte	0x1
 7434 06d2 1505     		.2byte	0x515
 7435 06d4 94000000 		.4byte	0x94
 7436 06d8 03       		.uleb128 0x3
 7437 06d9 91       		.byte	0x91
 7438 06da 947F     		.sleb128 -108
 7439 06dc 00       		.byte	0
 7440 06dd 00       		.byte	0
 7441 06de 11       		.uleb128 0x11
 7442 06df A0120000 		.4byte	.LBB20
 7443 06e3 20000000 		.4byte	.LBE20-.LBB20
 7444 06e7 18       		.uleb128 0x18
 7445 06e8 6900     		.ascii	"i\000"
 7446 06ea 01       		.byte	0x1
 7447 06eb 2B05     		.2byte	0x52b
 7448 06ed 94000000 		.4byte	0x94
 7449 06f1 02       		.uleb128 0x2
 7450 06f2 91       		.byte	0x91
 7451 06f3 44       		.sleb128 -60
 7452 06f4 00       		.byte	0
 7453 06f5 00       		.byte	0
 7454 06f6 1B       		.uleb128 0x1b
 7455 06f7 9B0D0000 		.4byte	.LASF90
 7456 06fb 01       		.byte	0x1
 7457 06fc 3405     		.2byte	0x534
 7458 06fe 00000000 		.4byte	.LFB74
 7459 0702 08010000 		.4byte	.LFE74-.LFB74
 7460 0706 01       		.uleb128 0x1
 7461 0707 9C       		.byte	0x9c
 7462 0708 14       		.uleb128 0x14
 7463 0709 50070000 		.4byte	.LASF91
 7464 070d 01       		.byte	0x1
 7465 070e 4A05     		.2byte	0x54a
 7466 0710 D9000000 		.4byte	0xd9
 7467 0714 00000000 		.4byte	.LFB75
 7468 0718 A0000000 		.4byte	.LFE75-.LFB75
 7469 071c 01       		.uleb128 0x1
 7470 071d 9C       		.byte	0x9c
 7471 071e 6E070000 		.4byte	0x76e
 7472 0722 17       		.uleb128 0x17
 7473 0723 490D0000 		.4byte	.LASF92
 7474 0727 01       		.byte	0x1
 7475 0728 4A05     		.2byte	0x54a
 7476 072a D9000000 		.4byte	0xd9
 7477 072e 02       		.uleb128 0x2
 7478 072f 91       		.byte	0x91
 7479 0730 6F       		.sleb128 -17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 168


 7480 0731 17       		.uleb128 0x17
 7481 0732 3D010000 		.4byte	.LASF93
 7482 0736 01       		.byte	0x1
 7483 0737 4A05     		.2byte	0x54a
 7484 0739 E5000000 		.4byte	0xe5
 7485 073d 02       		.uleb128 0x2
 7486 073e 91       		.byte	0x91
 7487 073f 6C       		.sleb128 -20
 7488 0740 17       		.uleb128 0x17
 7489 0741 B70C0000 		.4byte	.LASF94
 7490 0745 01       		.byte	0x1
 7491 0746 4A05     		.2byte	0x54a
 7492 0748 A2000000 		.4byte	0xa2
 7493 074c 02       		.uleb128 0x2
 7494 074d 91       		.byte	0x91
 7495 074e 6E       		.sleb128 -18
 7496 074f 16       		.uleb128 0x16
 7497 0750 25070000 		.4byte	.LASF95
 7498 0754 01       		.byte	0x1
 7499 0755 4C05     		.2byte	0x54c
 7500 0757 2A010000 		.4byte	0x12a
 7501 075b 02       		.uleb128 0x2
 7502 075c 91       		.byte	0x91
 7503 075d 73       		.sleb128 -13
 7504 075e 16       		.uleb128 0x16
 7505 075f 5C090000 		.4byte	.LASF96
 7506 0763 01       		.byte	0x1
 7507 0764 4D05     		.2byte	0x54d
 7508 0766 CE000000 		.4byte	0xce
 7509 076a 02       		.uleb128 0x2
 7510 076b 91       		.byte	0x91
 7511 076c 74       		.sleb128 -12
 7512 076d 00       		.byte	0
 7513 076e 14       		.uleb128 0x14
 7514 076f 9D0A0000 		.4byte	.LASF97
 7515 0773 01       		.byte	0x1
 7516 0774 7005     		.2byte	0x570
 7517 0776 D9000000 		.4byte	0xd9
 7518 077a 00000000 		.4byte	.LFB76
 7519 077e B4000000 		.4byte	.LFE76-.LFB76
 7520 0782 01       		.uleb128 0x1
 7521 0783 9C       		.byte	0x9c
 7522 0784 D4070000 		.4byte	0x7d4
 7523 0788 17       		.uleb128 0x17
 7524 0789 490D0000 		.4byte	.LASF92
 7525 078d 01       		.byte	0x1
 7526 078e 7005     		.2byte	0x570
 7527 0790 D9000000 		.4byte	0xd9
 7528 0794 02       		.uleb128 0x2
 7529 0795 91       		.byte	0x91
 7530 0796 6F       		.sleb128 -17
 7531 0797 17       		.uleb128 0x17
 7532 0798 3D010000 		.4byte	.LASF93
 7533 079c 01       		.byte	0x1
 7534 079d 7005     		.2byte	0x570
 7535 079f D9000000 		.4byte	0xd9
 7536 07a3 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 169


 7537 07a4 91       		.byte	0x91
 7538 07a5 6E       		.sleb128 -18
 7539 07a6 17       		.uleb128 0x17
 7540 07a7 B70C0000 		.4byte	.LASF94
 7541 07ab 01       		.byte	0x1
 7542 07ac 7005     		.2byte	0x570
 7543 07ae A2000000 		.4byte	0xa2
 7544 07b2 02       		.uleb128 0x2
 7545 07b3 91       		.byte	0x91
 7546 07b4 6D       		.sleb128 -19
 7547 07b5 16       		.uleb128 0x16
 7548 07b6 25070000 		.4byte	.LASF95
 7549 07ba 01       		.byte	0x1
 7550 07bb 7205     		.2byte	0x572
 7551 07bd 2A010000 		.4byte	0x12a
 7552 07c1 02       		.uleb128 0x2
 7553 07c2 91       		.byte	0x91
 7554 07c3 73       		.sleb128 -13
 7555 07c4 16       		.uleb128 0x16
 7556 07c5 5C090000 		.4byte	.LASF96
 7557 07c9 01       		.byte	0x1
 7558 07ca 7305     		.2byte	0x573
 7559 07cc CE000000 		.4byte	0xce
 7560 07d0 02       		.uleb128 0x2
 7561 07d1 91       		.byte	0x91
 7562 07d2 74       		.sleb128 -12
 7563 07d3 00       		.byte	0
 7564 07d4 1C       		.uleb128 0x1c
 7565 07d5 C6040000 		.4byte	.LASF98
 7566 07d9 01       		.byte	0x1
 7567 07da 9805     		.2byte	0x598
 7568 07dc 00000000 		.4byte	.LFB77
 7569 07e0 0C000000 		.4byte	.LFE77-.LFB77
 7570 07e4 01       		.uleb128 0x1
 7571 07e5 9C       		.byte	0x9c
 7572 07e6 1B       		.uleb128 0x1b
 7573 07e7 93040000 		.4byte	.LASF99
 7574 07eb 01       		.byte	0x1
 7575 07ec 9D05     		.2byte	0x59d
 7576 07ee 00000000 		.4byte	.LFB78
 7577 07f2 54000000 		.4byte	.LFE78-.LFB78
 7578 07f6 01       		.uleb128 0x1
 7579 07f7 9C       		.byte	0x9c
 7580 07f8 1B       		.uleb128 0x1b
 7581 07f9 EA030000 		.4byte	.LASF100
 7582 07fd 01       		.byte	0x1
 7583 07fe B005     		.2byte	0x5b0
 7584 0800 00000000 		.4byte	.LFB79
 7585 0804 C4000000 		.4byte	.LFE79-.LFB79
 7586 0808 01       		.uleb128 0x1
 7587 0809 9C       		.byte	0x9c
 7588 080a 14       		.uleb128 0x14
 7589 080b 3C090000 		.4byte	.LASF101
 7590 080f 01       		.byte	0x1
 7591 0810 E305     		.2byte	0x5e3
 7592 0812 FD000000 		.4byte	0xfd
 7593 0816 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 170


 7594 081a 98000000 		.4byte	.LFE80-.LFB80
 7595 081e 01       		.uleb128 0x1
 7596 081f 9C       		.byte	0x9c
 7597 0820 59080000 		.4byte	0x859
 7598 0824 15       		.uleb128 0x15
 7599 0825 5800     		.ascii	"X\000"
 7600 0827 01       		.byte	0x1
 7601 0828 E305     		.2byte	0x5e3
 7602 082a FD000000 		.4byte	0xfd
 7603 082e 02       		.uleb128 0x2
 7604 082f 91       		.byte	0x91
 7605 0830 64       		.sleb128 -28
 7606 0831 18       		.uleb128 0x18
 7607 0832 5900     		.ascii	"Y\000"
 7608 0834 01       		.byte	0x1
 7609 0835 E405     		.2byte	0x5e4
 7610 0837 FD000000 		.4byte	0xfd
 7611 083b 02       		.uleb128 0x2
 7612 083c 91       		.byte	0x91
 7613 083d 70       		.sleb128 -16
 7614 083e 18       		.uleb128 0x18
 7615 083f 4600     		.ascii	"F\000"
 7616 0841 01       		.byte	0x1
 7617 0842 E405     		.2byte	0x5e4
 7618 0844 FD000000 		.4byte	0xfd
 7619 0848 02       		.uleb128 0x2
 7620 0849 91       		.byte	0x91
 7621 084a 74       		.sleb128 -12
 7622 084b 18       		.uleb128 0x18
 7623 084c 4500     		.ascii	"E\000"
 7624 084e 01       		.byte	0x1
 7625 084f E505     		.2byte	0x5e5
 7626 0851 94000000 		.4byte	0x94
 7627 0855 02       		.uleb128 0x2
 7628 0856 91       		.byte	0x91
 7629 0857 6C       		.sleb128 -20
 7630 0858 00       		.byte	0
 7631 0859 1D       		.uleb128 0x1d
 7632 085a AD000000 		.4byte	.LASF103
 7633 085e 01       		.byte	0x1
 7634 085f F705     		.2byte	0x5f7
 7635 0861 00000000 		.4byte	.LFB81
 7636 0865 D4000000 		.4byte	.LFE81-.LFB81
 7637 0869 01       		.uleb128 0x1
 7638 086a 9C       		.byte	0x9c
 7639 086b B6080000 		.4byte	0x8b6
 7640 086f 17       		.uleb128 0x17
 7641 0870 110A0000 		.4byte	.LASF104
 7642 0874 01       		.byte	0x1
 7643 0875 F705     		.2byte	0x5f7
 7644 0877 94000000 		.4byte	0x94
 7645 087b 02       		.uleb128 0x2
 7646 087c 91       		.byte	0x91
 7647 087d 64       		.sleb128 -28
 7648 087e 16       		.uleb128 0x16
 7649 087f E9090000 		.4byte	.LASF105
 7650 0883 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 171


 7651 0884 0306     		.2byte	0x603
 7652 0886 B8000000 		.4byte	0xb8
 7653 088a 02       		.uleb128 0x2
 7654 088b 91       		.byte	0x91
 7655 088c 76       		.sleb128 -10
 7656 088d 11       		.uleb128 0x11
 7657 088e 18000000 		.4byte	.LBB21
 7658 0892 86000000 		.4byte	.LBE21-.LBB21
 7659 0896 16       		.uleb128 0x16
 7660 0897 B50B0000 		.4byte	.LASF106
 7661 089b 01       		.byte	0x1
 7662 089c 0706     		.2byte	0x607
 7663 089e FD000000 		.4byte	0xfd
 7664 08a2 02       		.uleb128 0x2
 7665 08a3 91       		.byte	0x91
 7666 08a4 70       		.sleb128 -16
 7667 08a5 16       		.uleb128 0x16
 7668 08a6 020E0000 		.4byte	.LASF107
 7669 08aa 01       		.byte	0x1
 7670 08ab 1606     		.2byte	0x616
 7671 08ad 94000000 		.4byte	0x94
 7672 08b1 02       		.uleb128 0x2
 7673 08b2 91       		.byte	0x91
 7674 08b3 6C       		.sleb128 -20
 7675 08b4 00       		.byte	0
 7676 08b5 00       		.byte	0
 7677 08b6 1D       		.uleb128 0x1d
 7678 08b7 F6050000 		.4byte	.LASF108
 7679 08bb 01       		.byte	0x1
 7680 08bc 2206     		.2byte	0x622
 7681 08be 00000000 		.4byte	.LFB82
 7682 08c2 1C000000 		.4byte	.LFE82-.LFB82
 7683 08c6 01       		.uleb128 0x1
 7684 08c7 9C       		.byte	0x9c
 7685 08c8 EA080000 		.4byte	0x8ea
 7686 08cc 15       		.uleb128 0x15
 7687 08cd 636300   		.ascii	"cc\000"
 7688 08d0 01       		.byte	0x1
 7689 08d1 2206     		.2byte	0x622
 7690 08d3 94000000 		.4byte	0x94
 7691 08d7 02       		.uleb128 0x2
 7692 08d8 91       		.byte	0x91
 7693 08d9 74       		.sleb128 -12
 7694 08da 15       		.uleb128 0x15
 7695 08db 76616C00 		.ascii	"val\000"
 7696 08df 01       		.byte	0x1
 7697 08e0 2206     		.2byte	0x622
 7698 08e2 94000000 		.4byte	0x94
 7699 08e6 02       		.uleb128 0x2
 7700 08e7 91       		.byte	0x91
 7701 08e8 70       		.sleb128 -16
 7702 08e9 00       		.byte	0
 7703 08ea 1D       		.uleb128 0x1d
 7704 08eb 67080000 		.4byte	.LASF109
 7705 08ef 01       		.byte	0x1
 7706 08f0 2806     		.2byte	0x628
 7707 08f2 00000000 		.4byte	.LFB83
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 172


 7708 08f6 68000000 		.4byte	.LFE83-.LFB83
 7709 08fa 01       		.uleb128 0x1
 7710 08fb 9C       		.byte	0x9c
 7711 08fc 2E090000 		.4byte	0x92e
 7712 0900 17       		.uleb128 0x17
 7713 0901 91020000 		.4byte	.LASF110
 7714 0905 01       		.byte	0x1
 7715 0906 2806     		.2byte	0x628
 7716 0908 94000000 		.4byte	0x94
 7717 090c 02       		.uleb128 0x2
 7718 090d 91       		.byte	0x91
 7719 090e 74       		.sleb128 -12
 7720 090f 17       		.uleb128 0x17
 7721 0910 E9090000 		.4byte	.LASF105
 7722 0914 01       		.byte	0x1
 7723 0915 2806     		.2byte	0x628
 7724 0917 94000000 		.4byte	0x94
 7725 091b 02       		.uleb128 0x2
 7726 091c 91       		.byte	0x91
 7727 091d 70       		.sleb128 -16
 7728 091e 17       		.uleb128 0x17
 7729 091f 48070000 		.4byte	.LASF111
 7730 0923 01       		.byte	0x1
 7731 0924 2806     		.2byte	0x628
 7732 0926 94000000 		.4byte	0x94
 7733 092a 02       		.uleb128 0x2
 7734 092b 91       		.byte	0x91
 7735 092c 6C       		.sleb128 -20
 7736 092d 00       		.byte	0
 7737 092e 1D       		.uleb128 0x1d
 7738 092f F4040000 		.4byte	.LASF112
 7739 0933 01       		.byte	0x1
 7740 0934 3506     		.2byte	0x635
 7741 0936 00000000 		.4byte	.LFB84
 7742 093a 68000000 		.4byte	.LFE84-.LFB84
 7743 093e 01       		.uleb128 0x1
 7744 093f 9C       		.byte	0x9c
 7745 0940 72090000 		.4byte	0x972
 7746 0944 17       		.uleb128 0x17
 7747 0945 91020000 		.4byte	.LASF110
 7748 0949 01       		.byte	0x1
 7749 094a 3506     		.2byte	0x635
 7750 094c 94000000 		.4byte	0x94
 7751 0950 02       		.uleb128 0x2
 7752 0951 91       		.byte	0x91
 7753 0952 74       		.sleb128 -12
 7754 0953 17       		.uleb128 0x17
 7755 0954 3A040000 		.4byte	.LASF113
 7756 0958 01       		.byte	0x1
 7757 0959 3506     		.2byte	0x635
 7758 095b 94000000 		.4byte	0x94
 7759 095f 02       		.uleb128 0x2
 7760 0960 91       		.byte	0x91
 7761 0961 70       		.sleb128 -16
 7762 0962 17       		.uleb128 0x17
 7763 0963 48070000 		.4byte	.LASF111
 7764 0967 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 173


 7765 0968 3506     		.2byte	0x635
 7766 096a 94000000 		.4byte	0x94
 7767 096e 02       		.uleb128 0x2
 7768 096f 91       		.byte	0x91
 7769 0970 6C       		.sleb128 -20
 7770 0971 00       		.byte	0
 7771 0972 1D       		.uleb128 0x1d
 7772 0973 2C050000 		.4byte	.LASF114
 7773 0977 01       		.byte	0x1
 7774 0978 4106     		.2byte	0x641
 7775 097a 00000000 		.4byte	.LFB85
 7776 097e 68000000 		.4byte	.LFE85-.LFB85
 7777 0982 01       		.uleb128 0x1
 7778 0983 9C       		.byte	0x9c
 7779 0984 B6090000 		.4byte	0x9b6
 7780 0988 17       		.uleb128 0x17
 7781 0989 68010000 		.4byte	.LASF115
 7782 098d 01       		.byte	0x1
 7783 098e 4106     		.2byte	0x641
 7784 0990 94000000 		.4byte	0x94
 7785 0994 02       		.uleb128 0x2
 7786 0995 91       		.byte	0x91
 7787 0996 74       		.sleb128 -12
 7788 0997 17       		.uleb128 0x17
 7789 0998 CC000000 		.4byte	.LASF116
 7790 099c 01       		.byte	0x1
 7791 099d 4106     		.2byte	0x641
 7792 099f 94000000 		.4byte	0x94
 7793 09a3 02       		.uleb128 0x2
 7794 09a4 91       		.byte	0x91
 7795 09a5 70       		.sleb128 -16
 7796 09a6 17       		.uleb128 0x17
 7797 09a7 48070000 		.4byte	.LASF111
 7798 09ab 01       		.byte	0x1
 7799 09ac 4106     		.2byte	0x641
 7800 09ae 94000000 		.4byte	0x94
 7801 09b2 02       		.uleb128 0x2
 7802 09b3 91       		.byte	0x91
 7803 09b4 6C       		.sleb128 -20
 7804 09b5 00       		.byte	0
 7805 09b6 1D       		.uleb128 0x1d
 7806 09b7 A7090000 		.4byte	.LASF117
 7807 09bb 01       		.byte	0x1
 7808 09bc 4D06     		.2byte	0x64d
 7809 09be 00000000 		.4byte	.LFB86
 7810 09c2 6C000000 		.4byte	.LFE86-.LFB86
 7811 09c6 01       		.uleb128 0x1
 7812 09c7 9C       		.byte	0x9c
 7813 09c8 EB090000 		.4byte	0x9eb
 7814 09cc 15       		.uleb128 0x15
 7815 09cd 76616C00 		.ascii	"val\000"
 7816 09d1 01       		.byte	0x1
 7817 09d2 4D06     		.2byte	0x64d
 7818 09d4 94000000 		.4byte	0x94
 7819 09d8 02       		.uleb128 0x2
 7820 09d9 91       		.byte	0x91
 7821 09da 74       		.sleb128 -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 174


 7822 09db 17       		.uleb128 0x17
 7823 09dc 48070000 		.4byte	.LASF111
 7824 09e0 01       		.byte	0x1
 7825 09e1 4D06     		.2byte	0x64d
 7826 09e3 94000000 		.4byte	0x94
 7827 09e7 02       		.uleb128 0x2
 7828 09e8 91       		.byte	0x91
 7829 09e9 70       		.sleb128 -16
 7830 09ea 00       		.byte	0
 7831 09eb 1B       		.uleb128 0x1b
 7832 09ec 9D020000 		.4byte	.LASF118
 7833 09f0 01       		.byte	0x1
 7834 09f1 5906     		.2byte	0x659
 7835 09f3 00000000 		.4byte	.LFB87
 7836 09f7 64000000 		.4byte	.LFE87-.LFB87
 7837 09fb 01       		.uleb128 0x1
 7838 09fc 9C       		.byte	0x9c
 7839 09fd 1D       		.uleb128 0x1d
 7840 09fe FE050000 		.4byte	.LASF119
 7841 0a02 01       		.byte	0x1
 7842 0a03 7106     		.2byte	0x671
 7843 0a05 00000000 		.4byte	.LFB88
 7844 0a09 58080000 		.4byte	.LFE88-.LFB88
 7845 0a0d 01       		.uleb128 0x1
 7846 0a0e 9C       		.byte	0x9c
 7847 0a0f 750B0000 		.4byte	0xb75
 7848 0a13 1A       		.uleb128 0x1a
 7849 0a14 16000000 		.4byte	.LBB22
 7850 0a18 92040000 		.4byte	.LBE22-.LBB22
 7851 0a1c 910A0000 		.4byte	0xa91
 7852 0a20 16       		.uleb128 0x16
 7853 0a21 C0010000 		.4byte	.LASF120
 7854 0a25 01       		.byte	0x1
 7855 0a26 7F06     		.2byte	0x67f
 7856 0a28 76020000 		.4byte	0x276
 7857 0a2c 02       		.uleb128 0x2
 7858 0a2d 91       		.byte	0x91
 7859 0a2e 48       		.sleb128 -56
 7860 0a2f 18       		.uleb128 0x18
 7861 0a30 6900     		.ascii	"i\000"
 7862 0a32 01       		.byte	0x1
 7863 0a33 8006     		.2byte	0x680
 7864 0a35 CE000000 		.4byte	0xce
 7865 0a39 02       		.uleb128 0x2
 7866 0a3a 91       		.byte	0x91
 7867 0a3b 6C       		.sleb128 -20
 7868 0a3c 16       		.uleb128 0x16
 7869 0a3d 12040000 		.4byte	.LASF121
 7870 0a41 01       		.byte	0x1
 7871 0a42 8106     		.2byte	0x681
 7872 0a44 A2000000 		.4byte	0xa2
 7873 0a48 02       		.uleb128 0x2
 7874 0a49 91       		.byte	0x91
 7875 0a4a 5F       		.sleb128 -33
 7876 0a4b 16       		.uleb128 0x16
 7877 0a4c A8030000 		.4byte	.LASF122
 7878 0a50 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 175


 7879 0a51 8706     		.2byte	0x687
 7880 0a53 B8000000 		.4byte	0xb8
 7881 0a57 02       		.uleb128 0x2
 7882 0a58 91       		.byte	0x91
 7883 0a59 5C       		.sleb128 -36
 7884 0a5a 1A       		.uleb128 0x1a
 7885 0a5b 5A010000 		.4byte	.LBB23
 7886 0a5f 46000000 		.4byte	.LBE23-.LBB23
 7887 0a63 770A0000 		.4byte	0xa77
 7888 0a67 16       		.uleb128 0x16
 7889 0a68 A8010000 		.4byte	.LASF123
 7890 0a6c 01       		.byte	0x1
 7891 0a6d 9E06     		.2byte	0x69e
 7892 0a6f B8000000 		.4byte	0xb8
 7893 0a73 02       		.uleb128 0x2
 7894 0a74 91       		.byte	0x91
 7895 0a75 5A       		.sleb128 -38
 7896 0a76 00       		.byte	0
 7897 0a77 11       		.uleb128 0x11
 7898 0a78 A6030000 		.4byte	.LBB24
 7899 0a7c 54000000 		.4byte	.LBE24-.LBB24
 7900 0a80 16       		.uleb128 0x16
 7901 0a81 A8010000 		.4byte	.LASF123
 7902 0a85 01       		.byte	0x1
 7903 0a86 DA06     		.2byte	0x6da
 7904 0a88 AD000000 		.4byte	0xad
 7905 0a8c 02       		.uleb128 0x2
 7906 0a8d 91       		.byte	0x91
 7907 0a8e 58       		.sleb128 -40
 7908 0a8f 00       		.byte	0
 7909 0a90 00       		.byte	0
 7910 0a91 11       		.uleb128 0x11
 7911 0a92 B2040000 		.4byte	.LBB25
 7912 0a96 28030000 		.4byte	.LBE25-.LBB25
 7913 0a9a 16       		.uleb128 0x16
 7914 0a9b C0010000 		.4byte	.LASF120
 7915 0a9f 01       		.byte	0x1
 7916 0aa0 3207     		.2byte	0x732
 7917 0aa2 76020000 		.4byte	0x276
 7918 0aa6 02       		.uleb128 0x2
 7919 0aa7 91       		.byte	0x91
 7920 0aa8 44       		.sleb128 -60
 7921 0aa9 18       		.uleb128 0x18
 7922 0aaa 6900     		.ascii	"i\000"
 7923 0aac 01       		.byte	0x1
 7924 0aad 3307     		.2byte	0x733
 7925 0aaf CE000000 		.4byte	0xce
 7926 0ab3 02       		.uleb128 0x2
 7927 0ab4 91       		.byte	0x91
 7928 0ab5 68       		.sleb128 -24
 7929 0ab6 16       		.uleb128 0x16
 7930 0ab7 12040000 		.4byte	.LASF121
 7931 0abb 01       		.byte	0x1
 7932 0abc 3407     		.2byte	0x734
 7933 0abe A2000000 		.4byte	0xa2
 7934 0ac2 02       		.uleb128 0x2
 7935 0ac3 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 176


 7936 0ac4 57       		.sleb128 -41
 7937 0ac5 1A       		.uleb128 0x1a
 7938 0ac6 34050000 		.4byte	.LBB26
 7939 0aca 76000000 		.4byte	.LBE26-.LBB26
 7940 0ace E20A0000 		.4byte	0xae2
 7941 0ad2 16       		.uleb128 0x16
 7942 0ad3 360C0000 		.4byte	.LASF124
 7943 0ad7 01       		.byte	0x1
 7944 0ad8 3807     		.2byte	0x738
 7945 0ada A2000000 		.4byte	0xa2
 7946 0ade 02       		.uleb128 0x2
 7947 0adf 91       		.byte	0x91
 7948 0ae0 56       		.sleb128 -42
 7949 0ae1 00       		.byte	0
 7950 0ae2 11       		.uleb128 0x11
 7951 0ae3 BE050000 		.4byte	.LBB27
 7952 0ae7 A0010000 		.4byte	.LBE27-.LBB27
 7953 0aeb 16       		.uleb128 0x16
 7954 0aec DE0C0000 		.4byte	.LASF125
 7955 0af0 01       		.byte	0x1
 7956 0af1 4307     		.2byte	0x743
 7957 0af3 CE000000 		.4byte	0xce
 7958 0af7 02       		.uleb128 0x2
 7959 0af8 91       		.byte	0x91
 7960 0af9 64       		.sleb128 -28
 7961 0afa 11       		.uleb128 0x11
 7962 0afb C4050000 		.4byte	.LBB28
 7963 0aff 8C010000 		.4byte	.LBE28-.LBB28
 7964 0b03 16       		.uleb128 0x16
 7965 0b04 C3030000 		.4byte	.LASF78
 7966 0b08 01       		.byte	0x1
 7967 0b09 4507     		.2byte	0x745
 7968 0b0b B8000000 		.4byte	0xb8
 7969 0b0f 02       		.uleb128 0x2
 7970 0b10 91       		.byte	0x91
 7971 0b11 54       		.sleb128 -44
 7972 0b12 11       		.uleb128 0x11
 7973 0b13 D6050000 		.4byte	.LBB29
 7974 0b17 7A010000 		.4byte	.LBE29-.LBB29
 7975 0b1b 16       		.uleb128 0x16
 7976 0b1c 0C050000 		.4byte	.LASF126
 7977 0b20 01       		.byte	0x1
 7978 0b21 4607     		.2byte	0x746
 7979 0b23 CE000000 		.4byte	0xce
 7980 0b27 02       		.uleb128 0x2
 7981 0b28 91       		.byte	0x91
 7982 0b29 60       		.sleb128 -32
 7983 0b2a 11       		.uleb128 0x11
 7984 0b2b DC050000 		.4byte	.LBB30
 7985 0b2f 66010000 		.4byte	.LBE30-.LBB30
 7986 0b33 16       		.uleb128 0x16
 7987 0b34 76030000 		.4byte	.LASF127
 7988 0b38 01       		.byte	0x1
 7989 0b39 5007     		.2byte	0x750
 7990 0b3b B8000000 		.4byte	0xb8
 7991 0b3f 02       		.uleb128 0x2
 7992 0b40 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 177


 7993 0b41 52       		.sleb128 -46
 7994 0b42 16       		.uleb128 0x16
 7995 0b43 290B0000 		.4byte	.LASF128
 7996 0b47 01       		.byte	0x1
 7997 0b48 5107     		.2byte	0x751
 7998 0b4a A2000000 		.4byte	0xa2
 7999 0b4e 02       		.uleb128 0x2
 8000 0b4f 91       		.byte	0x91
 8001 0b50 51       		.sleb128 -47
 8002 0b51 16       		.uleb128 0x16
 8003 0b52 FB000000 		.4byte	.LASF129
 8004 0b56 01       		.byte	0x1
 8005 0b57 5207     		.2byte	0x752
 8006 0b59 A2000000 		.4byte	0xa2
 8007 0b5d 02       		.uleb128 0x2
 8008 0b5e 91       		.byte	0x91
 8009 0b5f 50       		.sleb128 -48
 8010 0b60 16       		.uleb128 0x16
 8011 0b61 FB020000 		.4byte	.LASF79
 8012 0b65 01       		.byte	0x1
 8013 0b66 5507     		.2byte	0x755
 8014 0b68 B8000000 		.4byte	0xb8
 8015 0b6c 02       		.uleb128 0x2
 8016 0b6d 91       		.byte	0x91
 8017 0b6e 4E       		.sleb128 -50
 8018 0b6f 00       		.byte	0
 8019 0b70 00       		.byte	0
 8020 0b71 00       		.byte	0
 8021 0b72 00       		.byte	0
 8022 0b73 00       		.byte	0
 8023 0b74 00       		.byte	0
 8024 0b75 1D       		.uleb128 0x1d
 8025 0b76 28030000 		.4byte	.LASF130
 8026 0b7a 01       		.byte	0x1
 8027 0b7b 7F07     		.2byte	0x77f
 8028 0b7d 00000000 		.4byte	.LFB89
 8029 0b81 3C010000 		.4byte	.LFE89-.LFB89
 8030 0b85 01       		.uleb128 0x1
 8031 0b86 9C       		.byte	0x9c
 8032 0b87 C10B0000 		.4byte	0xbc1
 8033 0b8b 17       		.uleb128 0x17
 8034 0b8c D5090000 		.4byte	.LASF131
 8035 0b90 01       		.byte	0x1
 8036 0b91 7F07     		.2byte	0x77f
 8037 0b93 D9000000 		.4byte	0xd9
 8038 0b97 02       		.uleb128 0x2
 8039 0b98 91       		.byte	0x91
 8040 0b99 6F       		.sleb128 -17
 8041 0b9a 17       		.uleb128 0x17
 8042 0b9b F50A0000 		.4byte	.LASF132
 8043 0b9f 01       		.byte	0x1
 8044 0ba0 7F07     		.2byte	0x77f
 8045 0ba2 C10B0000 		.4byte	0xbc1
 8046 0ba6 02       		.uleb128 0x2
 8047 0ba7 91       		.byte	0x91
 8048 0ba8 68       		.sleb128 -24
 8049 0ba9 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 178


 8050 0baa 48000000 		.4byte	.LBB31
 8051 0bae 54000000 		.4byte	.LBE31-.LBB31
 8052 0bb2 18       		.uleb128 0x18
 8053 0bb3 6900     		.ascii	"i\000"
 8054 0bb5 01       		.byte	0x1
 8055 0bb6 8B07     		.2byte	0x78b
 8056 0bb8 94000000 		.4byte	0x94
 8057 0bbc 02       		.uleb128 0x2
 8058 0bbd 91       		.byte	0x91
 8059 0bbe 74       		.sleb128 -12
 8060 0bbf 00       		.byte	0
 8061 0bc0 00       		.byte	0
 8062 0bc1 1E       		.uleb128 0x1e
 8063 0bc2 04       		.byte	0x4
 8064 0bc3 D9000000 		.4byte	0xd9
 8065 0bc7 07       		.uleb128 0x7
 8066 0bc8 D9000000 		.4byte	0xd9
 8067 0bcc D70B0000 		.4byte	0xbd7
 8068 0bd0 08       		.uleb128 0x8
 8069 0bd1 36010000 		.4byte	0x136
 8070 0bd5 01       		.byte	0x1
 8071 0bd6 00       		.byte	0
 8072 0bd7 1F       		.uleb128 0x1f
 8073 0bd8 54040000 		.4byte	.LASF133
 8074 0bdc 01       		.byte	0x1
 8075 0bdd C7       		.byte	0xc7
 8076 0bde C70B0000 		.4byte	0xbc7
 8077 0be2 05       		.uleb128 0x5
 8078 0be3 03       		.byte	0x3
 8079 0be4 60000000 		.4byte	eepromArray
 8080 0be8 20       		.uleb128 0x20
 8081 0be9 370D0000 		.4byte	.LASF134
 8082 0bed 08       		.byte	0x8
 8083 0bee F3       		.byte	0xf3
 8084 0bef 2A010000 		.4byte	0x12a
 8085 0bf3 20       		.uleb128 0x20
 8086 0bf4 8C0D0000 		.4byte	.LASF135
 8087 0bf8 08       		.byte	0x8
 8088 0bf9 F9       		.byte	0xf9
 8089 0bfa 2A010000 		.4byte	0x12a
 8090 0bfe 07       		.uleb128 0x7
 8091 0bff D9000000 		.4byte	0xd9
 8092 0c03 0E0C0000 		.4byte	0xc0e
 8093 0c07 08       		.uleb128 0x8
 8094 0c08 36010000 		.4byte	0x136
 8095 0c0c 3F       		.byte	0x3f
 8096 0c0d 00       		.byte	0
 8097 0c0e 20       		.uleb128 0x20
 8098 0c0f C8070000 		.4byte	.LASF136
 8099 0c13 08       		.byte	0x8
 8100 0c14 FA       		.byte	0xfa
 8101 0c15 FE0B0000 		.4byte	0xbfe
 8102 0c19 20       		.uleb128 0x20
 8103 0c1a AC040000 		.4byte	.LASF137
 8104 0c1e 08       		.byte	0x8
 8105 0c1f FE       		.byte	0xfe
 8106 0c20 2A010000 		.4byte	0x12a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 179


 8107 0c24 20       		.uleb128 0x20
 8108 0c25 630D0000 		.4byte	.LASF138
 8109 0c29 08       		.byte	0x8
 8110 0c2a FF       		.byte	0xff
 8111 0c2b FE0B0000 		.4byte	0xbfe
 8112 0c2f 20       		.uleb128 0x20
 8113 0c30 91000000 		.4byte	.LASF139
 8114 0c34 09       		.byte	0x9
 8115 0c35 82       		.byte	0x82
 8116 0c36 BF010000 		.4byte	0x1bf
 8117 0c3a 07       		.uleb128 0x7
 8118 0c3b 4B0C0000 		.4byte	0xc4b
 8119 0c3f 4B0C0000 		.4byte	0xc4b
 8120 0c43 21       		.uleb128 0x21
 8121 0c44 36010000 		.4byte	0x136
 8122 0c48 FF03     		.2byte	0x3ff
 8123 0c4a 00       		.byte	0
 8124 0c4b 22       		.uleb128 0x22
 8125 0c4c A2000000 		.4byte	0xa2
 8126 0c50 23       		.uleb128 0x23
 8127 0c51 F8060000 		.4byte	.LASF140
 8128 0c55 01       		.byte	0x1
 8129 0c56 D4       		.byte	0xd4
 8130 0c57 610C0000 		.4byte	0xc61
 8131 0c5b 05       		.uleb128 0x5
 8132 0c5c 03       		.byte	0x3
 8133 0c5d 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 8134 0c61 22       		.uleb128 0x22
 8135 0c62 3A0C0000 		.4byte	0xc3a
 8136 0c66 24       		.uleb128 0x24
 8137 0c67 49090000 		.4byte	.LASF141
 8138 0c6b 0A       		.byte	0xa
 8139 0c6c 1207     		.2byte	0x712
 8140 0c6e 720C0000 		.4byte	0xc72
 8141 0c72 06       		.uleb128 0x6
 8142 0c73 C3000000 		.4byte	0xc3
 8143 0c77 07       		.uleb128 0x7
 8144 0c78 03020000 		.4byte	0x203
 8145 0c7c 870C0000 		.4byte	0xc87
 8146 0c80 08       		.uleb128 0x8
 8147 0c81 36010000 		.4byte	0x136
 8148 0c85 FF       		.byte	0xff
 8149 0c86 00       		.byte	0
 8150 0c87 25       		.uleb128 0x25
 8151 0c88 DE000000 		.4byte	.LASF142
 8152 0c8c 01       		.byte	0x1
 8153 0c8d 3C01     		.2byte	0x13c
 8154 0c8f 990C0000 		.4byte	0xc99
 8155 0c93 05       		.uleb128 0x5
 8156 0c94 03       		.byte	0x3
 8157 0c95 00000000 		.4byte	I2Cbuff1
 8158 0c99 06       		.uleb128 0x6
 8159 0c9a 770C0000 		.4byte	0xc77
 8160 0c9e 07       		.uleb128 0x7
 8161 0c9f A2000000 		.4byte	0xa2
 8162 0ca3 AF0C0000 		.4byte	0xcaf
 8163 0ca7 21       		.uleb128 0x21
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 180


 8164 0ca8 36010000 		.4byte	0x136
 8165 0cac FF03     		.2byte	0x3ff
 8166 0cae 00       		.byte	0
 8167 0caf 23       		.uleb128 0x23
 8168 0cb0 110C0000 		.4byte	.LASF143
 8169 0cb4 01       		.byte	0x1
 8170 0cb5 15       		.byte	0x15
 8171 0cb6 9E0C0000 		.4byte	0xc9e
 8172 0cba 05       		.uleb128 0x5
 8173 0cbb 03       		.byte	0x3
 8174 0cbc 00000000 		.4byte	sysexBuffer
 8175 0cc0 23       		.uleb128 0x23
 8176 0cc1 E6020000 		.4byte	.LASF144
 8177 0cc5 01       		.byte	0x1
 8178 0cc6 16       		.byte	0x16
 8179 0cc7 CE000000 		.4byte	0xce
 8180 0ccb 05       		.uleb128 0x5
 8181 0ccc 03       		.byte	0x3
 8182 0ccd 00000000 		.4byte	sysexPointer
 8183 0cd1 23       		.uleb128 0x23
 8184 0cd2 C6090000 		.4byte	.LASF145
 8185 0cd6 01       		.byte	0x1
 8186 0cd7 17       		.byte	0x17
 8187 0cd8 A2000000 		.4byte	0xa2
 8188 0cdc 05       		.uleb128 0x5
 8189 0cdd 03       		.byte	0x3
 8190 0cde 00000000 		.4byte	receivingSysex
 8191 0ce2 23       		.uleb128 0x23
 8192 0ce3 80050000 		.4byte	.LASF146
 8193 0ce7 01       		.byte	0x1
 8194 0ce8 18       		.byte	0x18
 8195 0ce9 A2000000 		.4byte	0xa2
 8196 0ced 05       		.uleb128 0x5
 8197 0cee 03       		.byte	0x3
 8198 0cef 00000000 		.4byte	parsingSysex
 8199 0cf3 07       		.uleb128 0x7
 8200 0cf4 03020000 		.4byte	0x203
 8201 0cf8 040D0000 		.4byte	0xd04
 8202 0cfc 21       		.uleb128 0x21
 8203 0cfd 36010000 		.4byte	0x136
 8204 0d01 FF03     		.2byte	0x3ff
 8205 0d03 00       		.byte	0
 8206 0d04 23       		.uleb128 0x23
 8207 0d05 13000000 		.4byte	.LASF147
 8208 0d09 01       		.byte	0x1
 8209 0d0a 19       		.byte	0x19
 8210 0d0b 150D0000 		.4byte	0xd15
 8211 0d0f 05       		.uleb128 0x5
 8212 0d10 03       		.byte	0x3
 8213 0d11 00000000 		.4byte	presetArray
 8214 0d15 06       		.uleb128 0x6
 8215 0d16 F30C0000 		.4byte	0xcf3
 8216 0d1a 23       		.uleb128 0x23
 8217 0d1b 53020000 		.4byte	.LASF148
 8218 0d1f 01       		.byte	0x1
 8219 0d20 1A       		.byte	0x1a
 8220 0d21 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 181


 8221 0d25 05       		.uleb128 0x5
 8222 0d26 03       		.byte	0x3
 8223 0d27 00000000 		.4byte	presetNumberToWrite
 8224 0d2b 23       		.uleb128 0x23
 8225 0d2c 860B0000 		.4byte	.LASF149
 8226 0d30 01       		.byte	0x1
 8227 0d31 1B       		.byte	0x1b
 8228 0d32 A2000000 		.4byte	0xa2
 8229 0d36 05       		.uleb128 0x5
 8230 0d37 03       		.byte	0x3
 8231 0d38 00000000 		.4byte	copedentNumberToWrite
 8232 0d3c 23       		.uleb128 0x23
 8233 0d3d F8010000 		.4byte	.LASF150
 8234 0d41 01       		.byte	0x1
 8235 0d42 1C       		.byte	0x1c
 8236 0d43 A2000000 		.4byte	0xa2
 8237 0d47 05       		.uleb128 0x5
 8238 0d48 03       		.byte	0x3
 8239 0d49 00000000 		.4byte	sendMessageEnd
 8240 0d4d 23       		.uleb128 0x23
 8241 0d4e 00000000 		.4byte	.LASF151
 8242 0d52 01       		.byte	0x1
 8243 0d53 25       		.byte	0x25
 8244 0d54 A2000000 		.4byte	0xa2
 8245 0d58 05       		.uleb128 0x5
 8246 0d59 03       		.byte	0x3
 8247 0d5a 00000000 		.4byte	presetArraySection
 8248 0d5e 23       		.uleb128 0x23
 8249 0d5f BA080000 		.4byte	.LASF152
 8250 0d63 01       		.byte	0x1
 8251 0d64 27       		.byte	0x27
 8252 0d65 B8000000 		.4byte	0xb8
 8253 0d69 05       		.uleb128 0x5
 8254 0d6a 03       		.byte	0x3
 8255 0d6b 00000000 		.4byte	messageArraySendCount
 8256 0d6f 23       		.uleb128 0x23
 8257 0d70 950C0000 		.4byte	.LASF153
 8258 0d74 01       		.byte	0x1
 8259 0d75 28       		.byte	0x28
 8260 0d76 B8000000 		.4byte	0xb8
 8261 0d7a 05       		.uleb128 0x5
 8262 0d7b 03       		.byte	0x3
 8263 0d7c 00000000 		.4byte	messageArraySize
 8264 0d80 23       		.uleb128 0x23
 8265 0d81 DF050000 		.4byte	.LASF154
 8266 0d85 01       		.byte	0x1
 8267 0d86 2A       		.byte	0x2a
 8268 0d87 A2000000 		.4byte	0xa2
 8269 0d8b 05       		.uleb128 0x5
 8270 0d8c 03       		.byte	0x3
 8271 0d8d 00000000 		.4byte	sysexMessageInProgress
 8272 0d91 23       		.uleb128 0x23
 8273 0d92 1D0C0000 		.4byte	.LASF155
 8274 0d96 01       		.byte	0x1
 8275 0d97 2C       		.byte	0x2c
 8276 0d98 A2000000 		.4byte	0xa2
 8277 0d9c 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 182


 8278 0d9d 03       		.byte	0x3
 8279 0d9e 00000000 		.4byte	bufCount
 8280 0da2 23       		.uleb128 0x23
 8281 0da3 33000000 		.4byte	.LASF156
 8282 0da7 01       		.byte	0x1
 8283 0da8 2D       		.byte	0x2d
 8284 0da9 03020000 		.4byte	0x203
 8285 0dad 05       		.uleb128 0x5
 8286 0dae 03       		.byte	0x3
 8287 0daf 00000000 		.4byte	sendingMessage
 8288 0db3 23       		.uleb128 0x23
 8289 0db4 31020000 		.4byte	.LASF157
 8290 0db8 01       		.byte	0x1
 8291 0db9 2F       		.byte	0x2f
 8292 0dba CE000000 		.4byte	0xce
 8293 0dbe 05       		.uleb128 0x5
 8294 0dbf 03       		.byte	0x3
 8295 0dc0 00000000 		.4byte	currentFloat
 8296 0dc4 23       		.uleb128 0x23
 8297 0dc5 6D030000 		.4byte	.LASF158
 8298 0dc9 01       		.byte	0x1
 8299 0dca 30       		.byte	0x30
 8300 0dcb CE000000 		.4byte	0xce
 8301 0dcf 05       		.uleb128 0x5
 8302 0dd0 03       		.byte	0x3
 8303 0dd1 00000000 		.4byte	mapCount
 8304 0dd5 23       		.uleb128 0x23
 8305 0dd6 57010000 		.4byte	.LASF159
 8306 0dda 01       		.byte	0x1
 8307 0ddb 32       		.byte	0x32
 8308 0ddc B8000000 		.4byte	0xb8
 8309 0de0 05       		.uleb128 0x5
 8310 0de1 03       		.byte	0x3
 8311 0de2 00000000 		.4byte	valsCount
 8312 0de6 23       		.uleb128 0x23
 8313 0de7 F6030000 		.4byte	.LASF160
 8314 0deb 01       		.byte	0x1
 8315 0dec 33       		.byte	0x33
 8316 0ded B8000000 		.4byte	0xb8
 8317 0df1 05       		.uleb128 0x5
 8318 0df2 03       		.byte	0x3
 8319 0df3 00000000 		.4byte	mapCountExpectation
 8320 0df7 23       		.uleb128 0x23
 8321 0df8 D2000000 		.4byte	.LASF161
 8322 0dfc 01       		.byte	0x1
 8323 0dfd 34       		.byte	0x34
 8324 0dfe B8000000 		.4byte	0xb8
 8325 0e02 05       		.uleb128 0x5
 8326 0e03 03       		.byte	0x3
 8327 0e04 00000000 		.4byte	numMappings
 8328 0e08 23       		.uleb128 0x23
 8329 0e09 D90B0000 		.4byte	.LASF162
 8330 0e0d 01       		.byte	0x1
 8331 0e0e 35       		.byte	0x35
 8332 0e0f 03020000 		.4byte	0x203
 8333 0e13 05       		.uleb128 0x5
 8334 0e14 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 183


 8335 0e15 00000000 		.4byte	parseThatMF
 8336 0e19 23       		.uleb128 0x23
 8337 0e1a 9F030000 		.4byte	.LASF163
 8338 0e1e 01       		.byte	0x1
 8339 0e1f 36       		.byte	0x36
 8340 0e20 2A0E0000 		.4byte	0xe2a
 8341 0e24 05       		.uleb128 0x5
 8342 0e25 03       		.byte	0x3
 8343 0e26 00000000 		.4byte	valCheck
 8344 0e2a 06       		.uleb128 0x6
 8345 0e2b FD000000 		.4byte	0xfd
 8346 0e2f 23       		.uleb128 0x23
 8347 0e30 320B0000 		.4byte	.LASF164
 8348 0e34 01       		.byte	0x1
 8349 0e35 37       		.byte	0x37
 8350 0e36 2A0E0000 		.4byte	0xe2a
 8351 0e3a 05       		.uleb128 0x5
 8352 0e3b 03       		.byte	0x3
 8353 0e3c 00000000 		.4byte	testVal
 8354 0e40 23       		.uleb128 0x23
 8355 0e41 6E070000 		.4byte	.LASF165
 8356 0e45 01       		.byte	0x1
 8357 0e46 39       		.byte	0x39
 8358 0e47 94000000 		.4byte	0x94
 8359 0e4b 05       		.uleb128 0x5
 8360 0e4c 03       		.byte	0x3
 8361 0e4d 00000000 		.4byte	numStrings
 8362 0e51 23       		.uleb128 0x23
 8363 0e52 BD0B0000 		.4byte	.LASF166
 8364 0e56 01       		.byte	0x1
 8365 0e57 3F       		.byte	0x3f
 8366 0e58 2A010000 		.4byte	0x12a
 8367 0e5c 05       		.uleb128 0x5
 8368 0e5d 03       		.byte	0x3
 8369 0e5e 00000000 		.4byte	usbActivityCounter
 8370 0e62 23       		.uleb128 0x23
 8371 0e63 F50A0000 		.4byte	.LASF132
 8372 0e67 01       		.byte	0x1
 8373 0e68 40       		.byte	0x40
 8374 0e69 3D010000 		.4byte	0x13d
 8375 0e6d 05       		.uleb128 0x5
 8376 0e6e 03       		.byte	0x3
 8377 0e6f 00000000 		.4byte	midiMsg
 8378 0e73 23       		.uleb128 0x23
 8379 0e74 CA0D0000 		.4byte	.LASF167
 8380 0e78 01       		.byte	0x1
 8381 0e79 41       		.byte	0x41
 8382 0e7a A2000000 		.4byte	0xa2
 8383 0e7e 05       		.uleb128 0x5
 8384 0e7f 03       		.byte	0x3
 8385 0e80 00000000 		.4byte	currentVBUS
 8386 0e84 23       		.uleb128 0x23
 8387 0e85 C10D0000 		.4byte	.LASF168
 8388 0e89 01       		.byte	0x1
 8389 0e8a 42       		.byte	0x42
 8390 0e8b A2000000 		.4byte	0xa2
 8391 0e8f 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 184


 8392 0e90 03       		.byte	0x3
 8393 0e91 00000000 		.4byte	prevVBUS
 8394 0e95 23       		.uleb128 0x23
 8395 0e96 FB0B0000 		.4byte	.LASF169
 8396 0e9a 01       		.byte	0x1
 8397 0e9b 43       		.byte	0x43
 8398 0e9c 03020000 		.4byte	0x203
 8399 0ea0 05       		.uleb128 0x5
 8400 0ea1 03       		.byte	0x3
 8401 0ea2 00000000 		.4byte	USB_active
 8402 0ea6 23       		.uleb128 0x23
 8403 0ea7 AB080000 		.4byte	.LASF170
 8404 0eab 01       		.byte	0x1
 8405 0eac 44       		.byte	0x44
 8406 0ead 03020000 		.4byte	0x203
 8407 0eb1 05       		.uleb128 0x5
 8408 0eb2 03       		.byte	0x3
 8409 0eb3 00000000 		.4byte	USB_check_flag
 8410 0eb7 07       		.uleb128 0x7
 8411 0eb8 D9000000 		.4byte	0xd9
 8412 0ebc C70E0000 		.4byte	0xec7
 8413 0ec0 08       		.uleb128 0x8
 8414 0ec1 36010000 		.4byte	0x136
 8415 0ec5 1F       		.byte	0x1f
 8416 0ec6 00       		.byte	0
 8417 0ec7 23       		.uleb128 0x23
 8418 0ec8 810E0000 		.4byte	.LASF171
 8419 0ecc 01       		.byte	0x1
 8420 0ecd 46       		.byte	0x46
 8421 0ece B70E0000 		.4byte	0xeb7
 8422 0ed2 05       		.uleb128 0x5
 8423 0ed3 03       		.byte	0x3
 8424 0ed4 00000000 		.4byte	myArray
 8425 0ed8 23       		.uleb128 0x23
 8426 0ed9 1F0E0000 		.4byte	.LASF172
 8427 0edd 01       		.byte	0x1
 8428 0ede 47       		.byte	0x47
 8429 0edf C70B0000 		.4byte	0xbc7
 8430 0ee3 05       		.uleb128 0x5
 8431 0ee4 03       		.byte	0x3
 8432 0ee5 00000000 		.4byte	myInputArray
 8433 0ee9 07       		.uleb128 0x7
 8434 0eea C3000000 		.4byte	0xc3
 8435 0eee F90E0000 		.4byte	0xef9
 8436 0ef2 08       		.uleb128 0x8
 8437 0ef3 36010000 		.4byte	0x136
 8438 0ef7 01       		.byte	0x1
 8439 0ef8 00       		.byte	0
 8440 0ef9 23       		.uleb128 0x23
 8441 0efa 34070000 		.4byte	.LASF173
 8442 0efe 01       		.byte	0x1
 8443 0eff 48       		.byte	0x48
 8444 0f00 E90E0000 		.4byte	0xee9
 8445 0f04 05       		.uleb128 0x5
 8446 0f05 03       		.byte	0x3
 8447 0f06 00000000 		.4byte	linearPotValue32Bit
 8448 0f0a 26       		.uleb128 0x26
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 185


 8449 0f0b 6900     		.ascii	"i\000"
 8450 0f0d 01       		.byte	0x1
 8451 0f0e 49       		.byte	0x49
 8452 0f0f A2000000 		.4byte	0xa2
 8453 0f13 05       		.uleb128 0x5
 8454 0f14 03       		.byte	0x3
 8455 0f15 00000000 		.4byte	i
 8456 0f19 23       		.uleb128 0x23
 8457 0f1a E9080000 		.4byte	.LASF174
 8458 0f1e 01       		.byte	0x1
 8459 0f1f 4A       		.byte	0x4a
 8460 0f20 A2000000 		.4byte	0xa2
 8461 0f24 05       		.uleb128 0x5
 8462 0f25 03       		.byte	0x3
 8463 0f26 00000000 		.4byte	counter
 8464 0f2a 07       		.uleb128 0x7
 8465 0f2b A2000000 		.4byte	0xa2
 8466 0f2f 3A0F0000 		.4byte	0xf3a
 8467 0f33 08       		.uleb128 0x8
 8468 0f34 36010000 		.4byte	0x136
 8469 0f38 1F       		.byte	0x1f
 8470 0f39 00       		.byte	0
 8471 0f3a 23       		.uleb128 0x23
 8472 0f3b 8D050000 		.4byte	.LASF175
 8473 0f3f 01       		.byte	0x1
 8474 0f40 4B       		.byte	0x4b
 8475 0f41 2A0F0000 		.4byte	0xf2a
 8476 0f45 05       		.uleb128 0x5
 8477 0f46 03       		.byte	0x3
 8478 0f47 00000000 		.4byte	returnedData
 8479 0f4b 23       		.uleb128 0x23
 8480 0f4c 61010000 		.4byte	.LASF176
 8481 0f50 01       		.byte	0x1
 8482 0f51 4C       		.byte	0x4c
 8483 0f52 C3000000 		.4byte	0xc3
 8484 0f56 05       		.uleb128 0x5
 8485 0f57 03       		.byte	0x3
 8486 0f58 00000000 		.4byte	temper
 8487 0f5c 07       		.uleb128 0x7
 8488 0f5d 94000000 		.4byte	0x94
 8489 0f61 6C0F0000 		.4byte	0xf6c
 8490 0f65 08       		.uleb128 0x8
 8491 0f66 36010000 		.4byte	0x136
 8492 0f6a 0A       		.byte	0xa
 8493 0f6b 00       		.byte	0
 8494 0f6c 23       		.uleb128 0x23
 8495 0f6d 140D0000 		.4byte	.LASF177
 8496 0f71 01       		.byte	0x1
 8497 0f72 4D       		.byte	0x4d
 8498 0f73 5C0F0000 		.4byte	0xf5c
 8499 0f77 05       		.uleb128 0x5
 8500 0f78 03       		.byte	0x3
 8501 0f79 00000000 		.4byte	previousButtons
 8502 0f7d 23       		.uleb128 0x23
 8503 0f7e 09010000 		.4byte	.LASF178
 8504 0f82 01       		.byte	0x1
 8505 0f83 4E       		.byte	0x4e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 186


 8506 0f84 94000000 		.4byte	0x94
 8507 0f88 05       		.uleb128 0x5
 8508 0f89 03       		.byte	0x3
 8509 0f8a 00000000 		.4byte	octave
 8510 0f8e 07       		.uleb128 0x7
 8511 0f8f B8000000 		.4byte	0xb8
 8512 0f93 9E0F0000 		.4byte	0xf9e
 8513 0f97 08       		.uleb128 0x8
 8514 0f98 36010000 		.4byte	0x136
 8515 0f9c 09       		.byte	0x9
 8516 0f9d 00       		.byte	0
 8517 0f9e 23       		.uleb128 0x23
 8518 0f9f 68070000 		.4byte	.LASF179
 8519 0fa3 01       		.byte	0x1
 8520 0fa4 4F       		.byte	0x4f
 8521 0fa5 8E0F0000 		.4byte	0xf8e
 8522 0fa9 05       		.uleb128 0x5
 8523 0faa 03       		.byte	0x3
 8524 0fab 00000000 		.4byte	angle
 8525 0faf 23       		.uleb128 0x23
 8526 0fb0 7B0A0000 		.4byte	.LASF180
 8527 0fb4 01       		.byte	0x1
 8528 0fb5 50       		.byte	0x50
 8529 0fb6 8E0F0000 		.4byte	0xf8e
 8530 0fba 05       		.uleb128 0x5
 8531 0fbb 03       		.byte	0x3
 8532 0fbc 00000000 		.4byte	prevAngle
 8533 0fc0 07       		.uleb128 0x7
 8534 0fc1 B8000000 		.4byte	0xb8
 8535 0fc5 D00F0000 		.4byte	0xfd0
 8536 0fc9 08       		.uleb128 0x8
 8537 0fca 36010000 		.4byte	0x136
 8538 0fce 03       		.byte	0x3
 8539 0fcf 00       		.byte	0
 8540 0fd0 23       		.uleb128 0x23
 8541 0fd1 C50A0000 		.4byte	.LASF181
 8542 0fd5 01       		.byte	0x1
 8543 0fd6 52       		.byte	0x52
 8544 0fd7 C00F0000 		.4byte	0xfc0
 8545 0fdb 05       		.uleb128 0x5
 8546 0fdc 03       		.byte	0x3
 8547 0fdd 00000000 		.4byte	ADC_values
 8548 0fe1 23       		.uleb128 0x23
 8549 0fe2 70040000 		.4byte	.LASF182
 8550 0fe6 01       		.byte	0x1
 8551 0fe7 53       		.byte	0x53
 8552 0fe8 B8000000 		.4byte	0xb8
 8553 0fec 05       		.uleb128 0x5
 8554 0fed 03       		.byte	0x3
 8555 0fee 00000000 		.4byte	rawAngle
 8556 0ff2 23       		.uleb128 0x23
 8557 0ff3 EC0A0000 		.4byte	.LASF183
 8558 0ff7 01       		.byte	0x1
 8559 0ff8 54       		.byte	0x54
 8560 0ff9 B8000000 		.4byte	0xb8
 8561 0ffd 05       		.uleb128 0x5
 8562 0ffe 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 187


 8563 0fff 00000000 		.4byte	midiSent
 8564 1003 23       		.uleb128 0x23
 8565 1004 E7040000 		.4byte	.LASF184
 8566 1008 01       		.byte	0x1
 8567 1009 55       		.byte	0x55
 8568 100a B8000000 		.4byte	0xb8
 8569 100e 05       		.uleb128 0x5
 8570 100f 03       		.byte	0x3
 8571 1010 00000000 		.4byte	midiOverflow
 8572 1014 23       		.uleb128 0x23
 8573 1015 60040000 		.4byte	.LASF185
 8574 1019 01       		.byte	0x1
 8575 101a 58       		.byte	0x58
 8576 101b A2000000 		.4byte	0xa2
 8577 101f 05       		.uleb128 0x5
 8578 1020 03       		.byte	0x3
 8579 1021 00000000 		.4byte	currentCopedent
 8580 1025 07       		.uleb128 0x7
 8581 1026 A2000000 		.4byte	0xa2
 8582 102a 35100000 		.4byte	0x1035
 8583 102e 08       		.uleb128 0x8
 8584 102f 36010000 		.4byte	0x136
 8585 1033 01       		.byte	0x1
 8586 1034 00       		.byte	0
 8587 1035 23       		.uleb128 0x23
 8588 1036 03010000 		.4byte	.LASF186
 8589 103a 01       		.byte	0x1
 8590 103b 59       		.byte	0x59
 8591 103c 25100000 		.4byte	0x1025
 8592 1040 05       		.uleb128 0x5
 8593 1041 03       		.byte	0x3
 8594 1042 00000000 		.4byte	necks
 8595 1046 23       		.uleb128 0x23
 8596 1047 B8030000 		.4byte	.LASF187
 8597 104b 01       		.byte	0x1
 8598 104c 70       		.byte	0x70
 8599 104d D9000000 		.4byte	0xd9
 8600 1051 05       		.uleb128 0x5
 8601 1052 03       		.byte	0x3
 8602 1053 00000000 		.4byte	rx1Channel
 8603 1057 23       		.uleb128 0x23
 8604 1058 810D0000 		.4byte	.LASF188
 8605 105c 01       		.byte	0x1
 8606 105d 70       		.byte	0x70
 8607 105e D9000000 		.4byte	0xd9
 8608 1062 05       		.uleb128 0x5
 8609 1063 03       		.byte	0x3
 8610 1064 00000000 		.4byte	rx2Channel
 8611 1068 23       		.uleb128 0x23
 8612 1069 FD080000 		.4byte	.LASF189
 8613 106d 01       		.byte	0x1
 8614 106e 71       		.byte	0x71
 8615 106f C70B0000 		.4byte	0xbc7
 8616 1073 05       		.uleb128 0x5
 8617 1074 03       		.byte	0x3
 8618 1075 00000000 		.4byte	rx1TD
 8619 1079 23       		.uleb128 0x23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 188


 8620 107a 3A0B0000 		.4byte	.LASF190
 8621 107e 01       		.byte	0x1
 8622 107f 71       		.byte	0x71
 8623 1080 C70B0000 		.4byte	0xbc7
 8624 1084 05       		.uleb128 0x5
 8625 1085 03       		.byte	0x3
 8626 1086 00000000 		.4byte	rx2TD
 8627 108a 07       		.uleb128 0x7
 8628 108b 2A010000 		.4byte	0x12a
 8629 108f A0100000 		.4byte	0x10a0
 8630 1093 08       		.uleb128 0x8
 8631 1094 36010000 		.4byte	0x136
 8632 1098 01       		.byte	0x1
 8633 1099 08       		.uleb128 0x8
 8634 109a 36010000 		.4byte	0x136
 8635 109e 19       		.byte	0x19
 8636 109f 00       		.byte	0
 8637 10a0 23       		.uleb128 0x23
 8638 10a1 B1050000 		.4byte	.LASF191
 8639 10a5 01       		.byte	0x1
 8640 10a6 73       		.byte	0x73
 8641 10a7 B1100000 		.4byte	0x10b1
 8642 10ab 05       		.uleb128 0x5
 8643 10ac 03       		.byte	0x3
 8644 10ad 00000000 		.4byte	rxBufferPluck
 8645 10b1 06       		.uleb128 0x6
 8646 10b2 8A100000 		.4byte	0x108a
 8647 10b6 07       		.uleb128 0x7
 8648 10b7 2A010000 		.4byte	0x12a
 8649 10bb CC100000 		.4byte	0x10cc
 8650 10bf 08       		.uleb128 0x8
 8651 10c0 36010000 		.4byte	0x136
 8652 10c4 01       		.byte	0x1
 8653 10c5 08       		.uleb128 0x8
 8654 10c6 36010000 		.4byte	0x136
 8655 10ca 07       		.byte	0x7
 8656 10cb 00       		.byte	0
 8657 10cc 23       		.uleb128 0x23
 8658 10cd 480A0000 		.4byte	.LASF192
 8659 10d1 01       		.byte	0x1
 8660 10d2 74       		.byte	0x74
 8661 10d3 DD100000 		.4byte	0x10dd
 8662 10d7 05       		.uleb128 0x5
 8663 10d8 03       		.byte	0x3
 8664 10d9 00000000 		.4byte	rxBufferBar
 8665 10dd 06       		.uleb128 0x6
 8666 10de B6100000 		.4byte	0x10b6
 8667 10e2 07       		.uleb128 0x7
 8668 10e3 08020000 		.4byte	0x208
 8669 10e7 F2100000 		.4byte	0x10f2
 8670 10eb 08       		.uleb128 0x8
 8671 10ec 36010000 		.4byte	0x136
 8672 10f0 0B       		.byte	0xb
 8673 10f1 00       		.byte	0
 8674 10f2 23       		.uleb128 0x23
 8675 10f3 20020000 		.4byte	.LASF193
 8676 10f7 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 189


 8677 10f8 76       		.byte	0x76
 8678 10f9 03110000 		.4byte	0x1103
 8679 10fd 05       		.uleb128 0x5
 8680 10fe 03       		.byte	0x3
 8681 10ff 00000000 		.4byte	strings
 8682 1103 06       		.uleb128 0x6
 8683 1104 E2100000 		.4byte	0x10e2
 8684 1108 23       		.uleb128 0x23
 8685 1109 43040000 		.4byte	.LASF194
 8686 110d 01       		.byte	0x1
 8687 110e 77       		.byte	0x77
 8688 110f 19110000 		.4byte	0x1119
 8689 1113 05       		.uleb128 0x5
 8690 1114 03       		.byte	0x3
 8691 1115 00000000 		.4byte	prevStrings
 8692 1119 06       		.uleb128 0x6
 8693 111a E2100000 		.4byte	0x10e2
 8694 111e 07       		.uleb128 0x7
 8695 111f 08020000 		.4byte	0x208
 8696 1123 2E110000 		.4byte	0x112e
 8697 1127 08       		.uleb128 0x8
 8698 1128 36010000 		.4byte	0x136
 8699 112c 01       		.byte	0x1
 8700 112d 00       		.byte	0
 8701 112e 26       		.uleb128 0x26
 8702 112f 62617200 		.ascii	"bar\000"
 8703 1133 01       		.byte	0x1
 8704 1134 78       		.byte	0x78
 8705 1135 3F110000 		.4byte	0x113f
 8706 1139 05       		.uleb128 0x5
 8707 113a 03       		.byte	0x3
 8708 113b 00000000 		.4byte	bar
 8709 113f 06       		.uleb128 0x6
 8710 1140 1E110000 		.4byte	0x111e
 8711 1144 23       		.uleb128 0x23
 8712 1145 170E0000 		.4byte	.LASF195
 8713 1149 01       		.byte	0x1
 8714 114a 79       		.byte	0x79
 8715 114b 55110000 		.4byte	0x1155
 8716 114f 05       		.uleb128 0x5
 8717 1150 03       		.byte	0x3
 8718 1151 00000000 		.4byte	prevBar
 8719 1155 06       		.uleb128 0x6
 8720 1156 1E110000 		.4byte	0x111e
 8721 115a 23       		.uleb128 0x23
 8722 115b 510D0000 		.4byte	.LASF196
 8723 115f 01       		.byte	0x1
 8724 1160 7A       		.byte	0x7a
 8725 1161 6B110000 		.4byte	0x116b
 8726 1165 05       		.uleb128 0x5
 8727 1166 03       		.byte	0x3
 8728 1167 00000000 		.4byte	maxStrings
 8729 116b 06       		.uleb128 0x6
 8730 116c E2100000 		.4byte	0x10e2
 8731 1170 23       		.uleb128 0x23
 8732 1171 690B0000 		.4byte	.LASF197
 8733 1175 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 190


 8734 1176 7B       		.byte	0x7b
 8735 1177 03020000 		.4byte	0x203
 8736 117b 05       		.uleb128 0x5
 8737 117c 03       		.byte	0x3
 8738 117d 00000000 		.4byte	amHere
 8739 1181 23       		.uleb128 0x23
 8740 1182 42050000 		.4byte	.LASF198
 8741 1186 01       		.byte	0x1
 8742 1187 7C       		.byte	0x7c
 8743 1188 03020000 		.4byte	0x203
 8744 118c 05       		.uleb128 0x5
 8745 118d 03       		.byte	0x3
 8746 118e 00000000 		.4byte	spiCounter
 8747 1192 23       		.uleb128 0x23
 8748 1193 D1030000 		.4byte	.LASF199
 8749 1197 01       		.byte	0x1
 8750 1198 7D       		.byte	0x7d
 8751 1199 03020000 		.4byte	0x203
 8752 119d 05       		.uleb128 0x5
 8753 119e 03       		.byte	0x3
 8754 119f 00000000 		.4byte	newDataFlag
 8755 11a3 23       		.uleb128 0x23
 8756 11a4 800C0000 		.4byte	.LASF200
 8757 11a8 01       		.byte	0x1
 8758 11a9 7E       		.byte	0x7e
 8759 11aa 94000000 		.4byte	0x94
 8760 11ae 05       		.uleb128 0x5
 8761 11af 03       		.byte	0x3
 8762 11b0 00000000 		.4byte	prevOctave
 8763 11b4 23       		.uleb128 0x23
 8764 11b5 850A0000 		.4byte	.LASF201
 8765 11b9 01       		.byte	0x1
 8766 11ba 7F       		.byte	0x7f
 8767 11bb A2000000 		.4byte	0xa2
 8768 11bf 05       		.uleb128 0x5
 8769 11c0 03       		.byte	0x3
 8770 11c1 00000000 		.4byte	pluck_index
 8771 11c5 23       		.uleb128 0x23
 8772 11c6 F60C0000 		.4byte	.LASF202
 8773 11ca 01       		.byte	0x1
 8774 11cb 80       		.byte	0x80
 8775 11cc 03020000 		.4byte	0x203
 8776 11d0 05       		.uleb128 0x5
 8777 11d1 03       		.byte	0x3
 8778 11d2 00000000 		.4byte	amHere2
 8779 11d6 23       		.uleb128 0x23
 8780 11d7 A90B0000 		.4byte	.LASF203
 8781 11db 01       		.byte	0x1
 8782 11dc 81       		.byte	0x81
 8783 11dd 03020000 		.4byte	0x203
 8784 11e1 05       		.uleb128 0x5
 8785 11e2 03       		.byte	0x3
 8786 11e3 00000000 		.4byte	spiCounter2
 8787 11e7 23       		.uleb128 0x23
 8788 11e8 67000000 		.4byte	.LASF204
 8789 11ec 01       		.byte	0x1
 8790 11ed 82       		.byte	0x82
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 191


 8791 11ee 03020000 		.4byte	0x203
 8792 11f2 05       		.uleb128 0x5
 8793 11f3 03       		.byte	0x3
 8794 11f4 00000000 		.4byte	newDataFlag2
 8795 11f8 23       		.uleb128 0x23
 8796 11f9 8C090000 		.4byte	.LASF205
 8797 11fd 01       		.byte	0x1
 8798 11fe 83       		.byte	0x83
 8799 11ff 03020000 		.4byte	0x203
 8800 1203 05       		.uleb128 0x5
 8801 1204 03       		.byte	0x3
 8802 1205 00000000 		.4byte	currentPluckBuffer
 8803 1209 23       		.uleb128 0x23
 8804 120a B40A0000 		.4byte	.LASF206
 8805 120e 01       		.byte	0x1
 8806 120f 84       		.byte	0x84
 8807 1210 03020000 		.4byte	0x203
 8808 1214 05       		.uleb128 0x5
 8809 1215 03       		.byte	0x3
 8810 1216 00000000 		.4byte	currentBarBuffer
 8811 121a 23       		.uleb128 0x23
 8812 121b 260C0000 		.4byte	.LASF207
 8813 121f 01       		.byte	0x1
 8814 1220 85       		.byte	0x85
 8815 1221 03020000 		.4byte	0x203
 8816 1225 05       		.uleb128 0x5
 8817 1226 03       		.byte	0x3
 8818 1227 00000000 		.4byte	pluckErrorCount
 8819 122b 23       		.uleb128 0x23
 8820 122c DD0A0000 		.4byte	.LASF208
 8821 1230 01       		.byte	0x1
 8822 1231 86       		.byte	0x86
 8823 1232 08020000 		.4byte	0x208
 8824 1236 05       		.uleb128 0x5
 8825 1237 03       		.byte	0x3
 8826 1238 00000000 		.4byte	SPI1ErrorCount
 8827 123c 23       		.uleb128 0x23
 8828 123d A0060000 		.4byte	.LASF209
 8829 1241 01       		.byte	0x1
 8830 1242 8A       		.byte	0x8a
 8831 1243 03020000 		.4byte	0x203
 8832 1247 05       		.uleb128 0x5
 8833 1248 03       		.byte	0x3
 8834 1249 00000000 		.4byte	inputData
 8835 124d 23       		.uleb128 0x23
 8836 124e 750D0000 		.4byte	.LASF210
 8837 1252 01       		.byte	0x1
 8838 1253 AD       		.byte	0xad
 8839 1254 A2000000 		.4byte	0xa2
 8840 1258 05       		.uleb128 0x5
 8841 1259 03       		.byte	0x3
 8842 125a 00000000 		.4byte	spiAdjusted
 8843 125e 23       		.uleb128 0x23
 8844 125f D2050000 		.4byte	.LASF211
 8845 1263 01       		.byte	0x1
 8846 1264 AE       		.byte	0xae
 8847 1265 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 192


 8848 1269 05       		.uleb128 0x5
 8849 126a 03       		.byte	0x3
 8850 126b 00000000 		.4byte	mySpiCounter
 8851 126f 23       		.uleb128 0x23
 8852 1270 180A0000 		.4byte	.LASF212
 8853 1274 01       		.byte	0x1
 8854 1275 AF       		.byte	0xaf
 8855 1276 08020000 		.4byte	0x208
 8856 127a 05       		.uleb128 0x5
 8857 127b 03       		.byte	0x3
 8858 127c 00000000 		.4byte	offsetErrorCount
 8859 1280 23       		.uleb128 0x23
 8860 1281 B7000000 		.4byte	.LASF213
 8861 1285 01       		.byte	0x1
 8862 1286 B0       		.byte	0xb0
 8863 1287 03020000 		.4byte	0x203
 8864 128b 05       		.uleb128 0x5
 8865 128c 03       		.byte	0x3
 8866 128d 00000000 		.4byte	SPI2errorflag
 8867 1291 23       		.uleb128 0x23
 8868 1292 070A0000 		.4byte	.LASF214
 8869 1296 01       		.byte	0x1
 8870 1297 B1       		.byte	0xb1
 8871 1298 A2120000 		.4byte	0x12a2
 8872 129c 05       		.uleb128 0x5
 8873 129d 03       		.byte	0x3
 8874 129e 00000000 		.4byte	bar_index
 8875 12a2 06       		.uleb128 0x6
 8876 12a3 94000000 		.4byte	0x94
 8877 12a7 23       		.uleb128 0x23
 8878 12a8 E0020000 		.4byte	.LASF215
 8879 12ac 01       		.byte	0x1
 8880 12ad B2       		.byte	0xb2
 8881 12ae A0020000 		.4byte	0x2a0
 8882 12b2 05       		.uleb128 0x5
 8883 12b3 03       		.byte	0x3
 8884 12b4 00000000 		.4byte	knobs
 8885 12b8 23       		.uleb128 0x23
 8886 12b9 C8050000 		.4byte	.LASF216
 8887 12bd 01       		.byte	0x1
 8888 12be B3       		.byte	0xb3
 8889 12bf A0020000 		.4byte	0x2a0
 8890 12c3 05       		.uleb128 0x5
 8891 12c4 03       		.byte	0x3
 8892 12c5 00000000 		.4byte	prevKnobs
 8893 12c9 23       		.uleb128 0x23
 8894 12ca 80090000 		.4byte	.LASF217
 8895 12ce 01       		.byte	0x1
 8896 12cf B5       		.byte	0xb5
 8897 12d0 03020000 		.4byte	0x203
 8898 12d4 05       		.uleb128 0x5
 8899 12d5 03       		.byte	0x3
 8900 12d6 00000000 		.4byte	SPI2started
 8901 12da 23       		.uleb128 0x23
 8902 12db 700B0000 		.4byte	.LASF218
 8903 12df 01       		.byte	0x1
 8904 12e0 C9       		.byte	0xc9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 193


 8905 12e1 C70B0000 		.4byte	0xbc7
 8906 12e5 05       		.uleb128 0x5
 8907 12e6 03       		.byte	0x3
 8908 12e7 00000000 		.4byte	array
 8909 12eb 23       		.uleb128 0x23
 8910 12ec 13070000 		.4byte	.LASF219
 8911 12f0 01       		.byte	0x1
 8912 12f1 CC       		.byte	0xcc
 8913 12f2 F7010000 		.4byte	0x1f7
 8914 12f6 05       		.uleb128 0x5
 8915 12f7 03       		.byte	0x3
 8916 12f8 00000000 		.4byte	eepromReturnValue
 8917 12fc 23       		.uleb128 0x23
 8918 12fd A1040000 		.4byte	.LASF220
 8919 1301 01       		.byte	0x1
 8920 1302 D8       		.byte	0xd8
 8921 1303 D9000000 		.4byte	0xd9
 8922 1307 05       		.uleb128 0x5
 8923 1308 03       		.byte	0x3
 8924 1309 00000000 		.4byte	eeprom_cnt
 8925 130d 23       		.uleb128 0x23
 8926 130e 25070000 		.4byte	.LASF95
 8927 1312 01       		.byte	0x1
 8928 1313 D9       		.byte	0xd9
 8929 1314 12010000 		.4byte	0x112
 8930 1318 05       		.uleb128 0x5
 8931 1319 03       		.byte	0x3
 8932 131a 00000000 		.4byte	status
 8933 131e 26       		.uleb128 0x26
 8934 131f 70747200 		.ascii	"ptr\000"
 8935 1323 01       		.byte	0x1
 8936 1324 DA       		.byte	0xda
 8937 1325 2F130000 		.4byte	0x132f
 8938 1329 05       		.uleb128 0x5
 8939 132a 03       		.byte	0x3
 8940 132b 00000000 		.4byte	ptr
 8941 132f 1E       		.uleb128 0x1e
 8942 1330 04       		.byte	0x4
 8943 1331 3A130000 		.4byte	0x133a
 8944 1335 22       		.uleb128 0x22
 8945 1336 D9000000 		.4byte	0xd9
 8946 133a 06       		.uleb128 0x6
 8947 133b 35130000 		.4byte	0x1335
 8948 133f 23       		.uleb128 0x23
 8949 1340 EF010000 		.4byte	.LASF221
 8950 1344 01       		.byte	0x1
 8951 1345 DB       		.byte	0xdb
 8952 1346 A2120000 		.4byte	0x12a2
 8953 134a 05       		.uleb128 0x5
 8954 134b 03       		.byte	0x3
 8955 134c 00000000 		.4byte	barCount
 8956 1350 07       		.uleb128 0x7
 8957 1351 03020000 		.4byte	0x203
 8958 1355 60130000 		.4byte	0x1360
 8959 1359 08       		.uleb128 0x8
 8960 135a 36010000 		.4byte	0x136
 8961 135e 0F       		.byte	0xf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 194


 8962 135f 00       		.byte	0
 8963 1360 25       		.uleb128 0x25
 8964 1361 E7000000 		.4byte	.LASF222
 8965 1365 01       		.byte	0x1
 8966 1366 3D01     		.2byte	0x13d
 8967 1368 72130000 		.4byte	0x1372
 8968 136c 05       		.uleb128 0x5
 8969 136d 03       		.byte	0x3
 8970 136e 00000000 		.4byte	I2Cbuff2
 8971 1372 06       		.uleb128 0x6
 8972 1373 50130000 		.4byte	0x1350
 8973 1377 25       		.uleb128 0x25
 8974 1378 2C070000 		.4byte	.LASF223
 8975 137c 01       		.byte	0x1
 8976 137d 3E01     		.2byte	0x13e
 8977 137f 03020000 		.4byte	0x203
 8978 1383 05       		.uleb128 0x5
 8979 1384 03       		.byte	0x3
 8980 1385 00000000 		.4byte	send_it
 8981 1389 07       		.uleb128 0x7
 8982 138a A2000000 		.4byte	0xa2
 8983 138e 9F130000 		.4byte	0x139f
 8984 1392 08       		.uleb128 0x8
 8985 1393 36010000 		.4byte	0x136
 8986 1397 0B       		.byte	0xb
 8987 1398 08       		.uleb128 0x8
 8988 1399 36010000 		.4byte	0x136
 8989 139d 01       		.byte	0x1
 8990 139e 00       		.byte	0
 8991 139f 25       		.uleb128 0x25
 8992 13a0 F0000000 		.4byte	.LASF224
 8993 13a4 01       		.byte	0x1
 8994 13a5 4001     		.2byte	0x140
 8995 13a7 89130000 		.4byte	0x1389
 8996 13ab 05       		.uleb128 0x5
 8997 13ac 03       		.byte	0x3
 8998 13ad 00000000 		.4byte	mux_states
 8999 13b1 25       		.uleb128 0x25
 9000 13b2 650C0000 		.4byte	.LASF225
 9001 13b6 01       		.byte	0x1
 9002 13b7 4101     		.2byte	0x141
 9003 13b9 8E0F0000 		.4byte	0xf8e
 9004 13bd 05       		.uleb128 0x5
 9005 13be 03       		.byte	0x3
 9006 13bf 00000000 		.4byte	pedals_low
 9007 13c3 25       		.uleb128 0x25
 9008 13c4 31010000 		.4byte	.LASF226
 9009 13c8 01       		.byte	0x1
 9010 13c9 4201     		.2byte	0x142
 9011 13cb 8E0F0000 		.4byte	0xf8e
 9012 13cf 05       		.uleb128 0x5
 9013 13d0 03       		.byte	0x3
 9014 13d1 00000000 		.4byte	pedals_high
 9015 13d5 25       		.uleb128 0x25
 9016 13d6 D00B0000 		.4byte	.LASF227
 9017 13da 01       		.byte	0x1
 9018 13db 4301     		.2byte	0x143
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 195


 9019 13dd B8000000 		.4byte	0xb8
 9020 13e1 05       		.uleb128 0x5
 9021 13e2 03       		.byte	0x3
 9022 13e3 00000000 		.4byte	deadzone
 9023 13e7 25       		.uleb128 0x25
 9024 13e8 A5050000 		.4byte	.LASF228
 9025 13ec 01       		.byte	0x1
 9026 13ed 4401     		.2byte	0x144
 9027 13ef B8000000 		.4byte	0xb8
 9028 13f3 05       		.uleb128 0x5
 9029 13f4 03       		.byte	0x3
 9030 13f5 00000000 		.4byte	volumePedal
 9031 13f9 25       		.uleb128 0x25
 9032 13fa 540A0000 		.4byte	.LASF229
 9033 13fe 01       		.byte	0x1
 9034 13ff 4501     		.2byte	0x145
 9035 1401 8E0F0000 		.4byte	0xf8e
 9036 1405 05       		.uleb128 0x5
 9037 1406 03       		.byte	0x3
 9038 1407 00000000 		.4byte	processed_pedals
 9039 140b 25       		.uleb128 0x25
 9040 140c 6A090000 		.4byte	.LASF230
 9041 1410 01       		.byte	0x1
 9042 1411 4601     		.2byte	0x146
 9043 1413 8E0F0000 		.4byte	0xf8e
 9044 1417 05       		.uleb128 0x5
 9045 1418 03       		.byte	0x3
 9046 1419 00000000 		.4byte	prev_processed_pedals
 9047 141d 25       		.uleb128 0x25
 9048 141e 42000000 		.4byte	.LASF231
 9049 1422 01       		.byte	0x1
 9050 1423 4701     		.2byte	0x147
 9051 1425 AD000000 		.4byte	0xad
 9052 1429 05       		.uleb128 0x5
 9053 142a 03       		.byte	0x3
 9054 142b 00000000 		.4byte	prev_processed_volumePedal
 9055 142f 25       		.uleb128 0x25
 9056 1430 290A0000 		.4byte	.LASF232
 9057 1434 01       		.byte	0x1
 9058 1435 4801     		.2byte	0x148
 9059 1437 AD000000 		.4byte	0xad
 9060 143b 05       		.uleb128 0x5
 9061 143c 03       		.byte	0x3
 9062 143d 00000000 		.4byte	processed_volumePedal
 9063 1441 07       		.uleb128 0x7
 9064 1442 FD000000 		.4byte	0xfd
 9065 1446 57140000 		.4byte	0x1457
 9066 144a 08       		.uleb128 0x8
 9067 144b 36010000 		.4byte	0x136
 9068 144f 03       		.byte	0x3
 9069 1450 08       		.uleb128 0x8
 9070 1451 36010000 		.4byte	0x136
 9071 1455 03       		.byte	0x3
 9072 1456 00       		.byte	0
 9073 1457 25       		.uleb128 0x25
 9074 1458 A60C0000 		.4byte	.LASF233
 9075 145c 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 196


 9076 145d 4B01     		.2byte	0x14b
 9077 145f 41140000 		.4byte	0x1441
 9078 1463 05       		.uleb128 0x5
 9079 1464 03       		.byte	0x3
 9080 1465 00000000 		.4byte	fretMeasurements
 9081 1469 25       		.uleb128 0x25
 9082 146a 98070000 		.4byte	.LASF234
 9083 146e 01       		.byte	0x1
 9084 146f 5801     		.2byte	0x158
 9085 1471 94000000 		.4byte	0x94
 9086 1475 05       		.uleb128 0x5
 9087 1476 03       		.byte	0x3
 9088 1477 00000000 		.4byte	currentPresetSelection
 9089 147b 07       		.uleb128 0x7
 9090 147c A2000000 		.4byte	0xa2
 9091 1480 91140000 		.4byte	0x1491
 9092 1484 08       		.uleb128 0x8
 9093 1485 36010000 		.4byte	0x136
 9094 1489 3F       		.byte	0x3f
 9095 148a 08       		.uleb128 0x8
 9096 148b 36010000 		.4byte	0x136
 9097 148f 0D       		.byte	0xd
 9098 1490 00       		.byte	0
 9099 1491 25       		.uleb128 0x25
 9100 1492 67020000 		.4byte	.LASF235
 9101 1496 01       		.byte	0x1
 9102 1497 5901     		.2byte	0x159
 9103 1499 7B140000 		.4byte	0x147b
 9104 149d 05       		.uleb128 0x5
 9105 149e 03       		.byte	0x3
 9106 149f 00000000 		.4byte	presetNamesArray
 9107 14a3 25       		.uleb128 0x25
 9108 14a4 07020000 		.4byte	.LASF236
 9109 14a8 01       		.byte	0x1
 9110 14a9 5A01     		.2byte	0x15a
 9111 14ab A2000000 		.4byte	0xa2
 9112 14af 05       		.uleb128 0x5
 9113 14b0 03       		.byte	0x3
 9114 14b1 00000000 		.4byte	presetNumberToLoad
 9115 14b5 25       		.uleb128 0x25
 9116 14b6 3E020000 		.4byte	.LASF237
 9117 14ba 01       		.byte	0x1
 9118 14bb 5B01     		.2byte	0x15b
 9119 14bd 25100000 		.4byte	0x1025
 9120 14c1 05       		.uleb128 0x5
 9121 14c2 03       		.byte	0x3
 9122 14c3 00000000 		.4byte	presetLoadedResponse
 9123 14c7 07       		.uleb128 0x7
 9124 14c8 FD000000 		.4byte	0xfd
 9125 14cc D7140000 		.4byte	0x14d7
 9126 14d0 08       		.uleb128 0x8
 9127 14d1 36010000 		.4byte	0x136
 9128 14d5 03       		.byte	0x3
 9129 14d6 00       		.byte	0
 9130 14d7 25       		.uleb128 0x25
 9131 14d8 BC020000 		.4byte	.LASF238
 9132 14dc 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 197


 9133 14dd 5E01     		.2byte	0x15e
 9134 14df C7140000 		.4byte	0x14c7
 9135 14e3 05       		.uleb128 0x5
 9136 14e4 03       		.byte	0x3
 9137 14e5 00000000 		.4byte	fretScaling
 9138 14e9 07       		.uleb128 0x7
 9139 14ea FD000000 		.4byte	0xfd
 9140 14ee F9140000 		.4byte	0x14f9
 9141 14f2 08       		.uleb128 0x8
 9142 14f3 36010000 		.4byte	0x136
 9143 14f7 09       		.byte	0x9
 9144 14f8 00       		.byte	0
 9145 14f9 25       		.uleb128 0x25
 9146 14fa 85030000 		.4byte	.LASF239
 9147 14fe 01       		.byte	0x1
 9148 14ff 6301     		.2byte	0x163
 9149 1501 E9140000 		.4byte	0x14e9
 9150 1505 05       		.uleb128 0x5
 9151 1506 03       		.byte	0x3
 9152 1507 00000000 		.4byte	pedalRatios
 9153 150b 25       		.uleb128 0x25
 9154 150c 26040000 		.4byte	.LASF240
 9155 1510 01       		.byte	0x1
 9156 1511 6401     		.2byte	0x164
 9157 1513 A2000000 		.4byte	0xa2
 9158 1517 05       		.uleb128 0x5
 9159 1518 03       		.byte	0x3
 9160 1519 00000000 		.4byte	last_mux
 9161 151d 25       		.uleb128 0x25
 9162 151e 76080000 		.4byte	.LASF241
 9163 1522 01       		.byte	0x1
 9164 1523 6501     		.2byte	0x165
 9165 1525 03020000 		.4byte	0x203
 9166 1529 05       		.uleb128 0x5
 9167 152a 03       		.byte	0x3
 9168 152b 00000000 		.4byte	main_counter
 9169 152f 25       		.uleb128 0x25
 9170 1530 83040000 		.4byte	.LASF242
 9171 1534 01       		.byte	0x1
 9172 1535 6601     		.2byte	0x166
 9173 1537 A2000000 		.4byte	0xa2
 9174 153b 05       		.uleb128 0x5
 9175 153c 03       		.byte	0x3
 9176 153d 00000000 		.4byte	neck
 9177 1541 25       		.uleb128 0x25
 9178 1542 8D080000 		.4byte	.LASF243
 9179 1546 01       		.byte	0x1
 9180 1547 6701     		.2byte	0x167
 9181 1549 A2000000 		.4byte	0xa2
 9182 154d 05       		.uleb128 0x5
 9183 154e 03       		.byte	0x3
 9184 154f 00000000 		.4byte	dualSlider
 9185 1553 25       		.uleb128 0x25
 9186 1554 D50A0000 		.4byte	.LASF244
 9187 1558 01       		.byte	0x1
 9188 1559 6801     		.2byte	0x168
 9189 155b A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 198


 9190 155f 05       		.uleb128 0x5
 9191 1560 03       		.byte	0x3
 9192 1561 00000000 		.4byte	enterUp
 9193 1565 25       		.uleb128 0x25
 9194 1566 1A020000 		.4byte	.LASF245
 9195 156a 01       		.byte	0x1
 9196 156b 6901     		.2byte	0x169
 9197 156d A2000000 		.4byte	0xa2
 9198 1571 05       		.uleb128 0x5
 9199 1572 03       		.byte	0x3
 9200 1573 00000000 		.4byte	voice
 9201 1577 25       		.uleb128 0x25
 9202 1578 440E0000 		.4byte	.LASF246
 9203 157c 01       		.byte	0x1
 9204 157d 6A01     		.2byte	0x16a
 9205 157f A2000000 		.4byte	0xa2
 9206 1583 05       		.uleb128 0x5
 9207 1584 03       		.byte	0x3
 9208 1585 00000000 		.4byte	editUp
 9209 1589 25       		.uleb128 0x25
 9210 158a DB040000 		.4byte	.LASF247
 9211 158e 01       		.byte	0x1
 9212 158f 6B01     		.2byte	0x16b
 9213 1591 A2000000 		.4byte	0xa2
 9214 1595 05       		.uleb128 0x5
 9215 1596 03       		.byte	0x3
 9216 1597 00000000 		.4byte	oct1Up
 9217 159b 25       		.uleb128 0x25
 9218 159c D60D0000 		.4byte	.LASF248
 9219 15a0 01       		.byte	0x1
 9220 15a1 6C01     		.2byte	0x16c
 9221 15a3 A2000000 		.4byte	0xa2
 9222 15a7 05       		.uleb128 0x5
 9223 15a8 03       		.byte	0x3
 9224 15a9 00000000 		.4byte	oct4Up
 9225 15ad 25       		.uleb128 0x25
 9226 15ae 2F040000 		.4byte	.LASF249
 9227 15b2 01       		.byte	0x1
 9228 15b3 6E01     		.2byte	0x16e
 9229 15b5 BF150000 		.4byte	0x15bf
 9230 15b9 05       		.uleb128 0x5
 9231 15ba 03       		.byte	0x3
 9232 15bb 00000000 		.4byte	encoderVal
 9233 15bf 06       		.uleb128 0x6
 9234 15c0 50130000 		.4byte	0x1350
 9235 15c4 25       		.uleb128 0x25
 9236 15c5 D0040000 		.4byte	.LASF250
 9237 15c9 01       		.byte	0x1
 9238 15ca 6F01     		.2byte	0x16f
 9239 15cc 94000000 		.4byte	0x94
 9240 15d0 05       		.uleb128 0x5
 9241 15d1 03       		.byte	0x3
 9242 15d2 00000000 		.4byte	encoderNum
 9243 15d6 25       		.uleb128 0x25
 9244 15d7 32090000 		.4byte	.LASF251
 9245 15db 01       		.byte	0x1
 9246 15dc 7001     		.2byte	0x170
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 199


 9247 15de A2000000 		.4byte	0xa2
 9248 15e2 05       		.uleb128 0x5
 9249 15e3 03       		.byte	0x3
 9250 15e4 00000000 		.4byte	button1Up
 9251 15e8 25       		.uleb128 0x25
 9252 15e9 5F0B0000 		.4byte	.LASF252
 9253 15ed 01       		.byte	0x1
 9254 15ee 7101     		.2byte	0x171
 9255 15f0 A2000000 		.4byte	0xa2
 9256 15f4 05       		.uleb128 0x5
 9257 15f5 03       		.byte	0x3
 9258 15f6 00000000 		.4byte	button2Up
 9259 15fa 25       		.uleb128 0x25
 9260 15fb DD0D0000 		.4byte	.LASF253
 9261 15ff 01       		.byte	0x1
 9262 1600 7201     		.2byte	0x172
 9263 1602 A2000000 		.4byte	0xa2
 9264 1606 05       		.uleb128 0x5
 9265 1607 03       		.byte	0x3
 9266 1608 00000000 		.4byte	button3Up
 9267 160c 25       		.uleb128 0x25
 9268 160d B70D0000 		.4byte	.LASF254
 9269 1611 01       		.byte	0x1
 9270 1612 7301     		.2byte	0x173
 9271 1614 A2000000 		.4byte	0xa2
 9272 1618 05       		.uleb128 0x5
 9273 1619 03       		.byte	0x3
 9274 161a 00000000 		.4byte	button4Up
 9275 161e 25       		.uleb128 0x25
 9276 161f 490C0000 		.4byte	.LASF255
 9277 1623 01       		.byte	0x1
 9278 1624 7401     		.2byte	0x174
 9279 1626 A2000000 		.4byte	0xa2
 9280 162a 05       		.uleb128 0x5
 9281 162b 03       		.byte	0x3
 9282 162c 00000000 		.4byte	patchNum
 9283 1630 07       		.uleb128 0x7
 9284 1631 FD000000 		.4byte	0xfd
 9285 1635 4C160000 		.4byte	0x164c
 9286 1639 08       		.uleb128 0x8
 9287 163a 36010000 		.4byte	0x136
 9288 163e 06       		.byte	0x6
 9289 163f 08       		.uleb128 0x8
 9290 1640 36010000 		.4byte	0x136
 9291 1644 0A       		.byte	0xa
 9292 1645 08       		.uleb128 0x8
 9293 1646 36010000 		.4byte	0x136
 9294 164a 0B       		.byte	0xb
 9295 164b 00       		.byte	0
 9296 164c 25       		.uleb128 0x25
 9297 164d BF050000 		.4byte	.LASF256
 9298 1651 01       		.byte	0x1
 9299 1652 8901     		.2byte	0x189
 9300 1654 30160000 		.4byte	0x1630
 9301 1658 05       		.uleb128 0x5
 9302 1659 03       		.byte	0x3
 9303 165a 00000000 		.4byte	copedent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 200


 9304 165e 07       		.uleb128 0x7
 9305 165f A2000000 		.4byte	0xa2
 9306 1663 74160000 		.4byte	0x1674
 9307 1667 08       		.uleb128 0x8
 9308 1668 36010000 		.4byte	0x136
 9309 166c 06       		.byte	0x6
 9310 166d 08       		.uleb128 0x8
 9311 166e 36010000 		.4byte	0x136
 9312 1672 0D       		.byte	0xd
 9313 1673 00       		.byte	0
 9314 1674 25       		.uleb128 0x25
 9315 1675 44010000 		.4byte	.LASF257
 9316 1679 01       		.byte	0x1
 9317 167a 8A01     		.2byte	0x18a
 9318 167c 5E160000 		.4byte	0x165e
 9319 1680 05       		.uleb128 0x5
 9320 1681 03       		.byte	0x3
 9321 1682 00000000 		.4byte	copedentNamesArray
 9322 1686 07       		.uleb128 0x7
 9323 1687 FD000000 		.4byte	0xfd
 9324 168b 96160000 		.4byte	0x1696
 9325 168f 08       		.uleb128 0x8
 9326 1690 36010000 		.4byte	0x136
 9327 1694 0B       		.byte	0xb
 9328 1695 00       		.byte	0
 9329 1696 25       		.uleb128 0x25
 9330 1697 7D020000 		.4byte	.LASF258
 9331 169b 01       		.byte	0x1
 9332 169c 8C01     		.2byte	0x18c
 9333 169e 86160000 		.4byte	0x1686
 9334 16a2 05       		.uleb128 0x5
 9335 16a3 03       		.byte	0x3
 9336 16a4 00000000 		.4byte	prevStringPitchBend
 9337 16a8 07       		.uleb128 0x7
 9338 16a9 FD000000 		.4byte	0xfd
 9339 16ad BE160000 		.4byte	0x16be
 9340 16b1 08       		.uleb128 0x8
 9341 16b2 36010000 		.4byte	0x136
 9342 16b6 09       		.byte	0x9
 9343 16b7 08       		.uleb128 0x8
 9344 16b8 36010000 		.4byte	0x136
 9345 16bc 0B       		.byte	0xb
 9346 16bd 00       		.byte	0
 9347 16be 25       		.uleb128 0x25
 9348 16bf 310E0000 		.4byte	.LASF259
 9349 16c3 01       		.byte	0x1
 9350 16c4 A401     		.2byte	0x1a4
 9351 16c6 A8160000 		.4byte	0x16a8
 9352 16ca 05       		.uleb128 0x5
 9353 16cb 03       		.byte	0x3
 9354 16cc 00000000 		.4byte	pedals
 9355 16d0 25       		.uleb128 0x25
 9356 16d1 650A0000 		.4byte	.LASF260
 9357 16d5 01       		.byte	0x1
 9358 16d6 A701     		.2byte	0x1a7
 9359 16d8 86160000 		.4byte	0x1686
 9360 16dc 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 201


 9361 16dd 03       		.byte	0x3
 9362 16de 00000000 		.4byte	openStringFrequencies
 9363 16e2 25       		.uleb128 0x25
 9364 16e3 FE0C0000 		.4byte	.LASF261
 9365 16e7 01       		.byte	0x1
 9366 16e8 A801     		.2byte	0x1a8
 9367 16ea 86160000 		.4byte	0x1686
 9368 16ee 05       		.uleb128 0x5
 9369 16ef 03       		.byte	0x3
 9370 16f0 00000000 		.4byte	stringMappedPositions
 9371 16f4 25       		.uleb128 0x25
 9372 16f5 87060000 		.4byte	.LASF262
 9373 16f9 01       		.byte	0x1
 9374 16fa A901     		.2byte	0x1a9
 9375 16fc 86160000 		.4byte	0x1686
 9376 1700 05       		.uleb128 0x5
 9377 1701 03       		.byte	0x3
 9378 1702 00000000 		.4byte	invStringMappedPositions
 9379 1706 25       		.uleb128 0x25
 9380 1707 680E0000 		.4byte	.LASF263
 9381 170b 01       		.byte	0x1
 9382 170c AA01     		.2byte	0x1aa
 9383 170e 86160000 		.4byte	0x1686
 9384 1712 05       		.uleb128 0x5
 9385 1713 03       		.byte	0x3
 9386 1714 00000000 		.4byte	stringFrequencies
 9387 1718 25       		.uleb128 0x25
 9388 1719 DD030000 		.4byte	.LASF264
 9389 171d 01       		.byte	0x1
 9390 171e AB01     		.2byte	0x1ab
 9391 1720 86160000 		.4byte	0x1686
 9392 1724 05       		.uleb128 0x5
 9393 1725 03       		.byte	0x3
 9394 1726 00000000 		.4byte	stringOctave
 9395 172a 25       		.uleb128 0x25
 9396 172b F1080000 		.4byte	.LASF265
 9397 172f 01       		.byte	0x1
 9398 1730 AC01     		.2byte	0x1ac
 9399 1732 86160000 		.4byte	0x1686
 9400 1736 05       		.uleb128 0x5
 9401 1737 03       		.byte	0x3
 9402 1738 00000000 		.4byte	stringPitch
 9403 173c 25       		.uleb128 0x25
 9404 173d BC0C0000 		.4byte	.LASF266
 9405 1741 01       		.byte	0x1
 9406 1742 AD01     		.2byte	0x1ad
 9407 1744 86160000 		.4byte	0x1686
 9408 1748 05       		.uleb128 0x5
 9409 1749 03       		.byte	0x3
 9410 174a 00000000 		.4byte	stringMIDI
 9411 174e 07       		.uleb128 0x7
 9412 174f 94000000 		.4byte	0x94
 9413 1753 5E170000 		.4byte	0x175e
 9414 1757 08       		.uleb128 0x8
 9415 1758 36010000 		.4byte	0x136
 9416 175c 0B       		.byte	0xb
 9417 175d 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 202


 9418 175e 25       		.uleb128 0x25
 9419 175f AF070000 		.4byte	.LASF267
 9420 1763 01       		.byte	0x1
 9421 1764 AE01     		.2byte	0x1ae
 9422 1766 4E170000 		.4byte	0x174e
 9423 176a 05       		.uleb128 0x5
 9424 176b 03       		.byte	0x3
 9425 176c 00000000 		.4byte	openStringMIDI_Int
 9426 1770 25       		.uleb128 0x25
 9427 1771 3F0C0000 		.4byte	.LASF268
 9428 1775 01       		.byte	0x1
 9429 1776 AF01     		.2byte	0x1af
 9430 1778 94000000 		.4byte	0x94
 9431 177c 05       		.uleb128 0x5
 9432 177d 03       		.byte	0x3
 9433 177e 00000000 		.4byte	OLEDcount
 9434 1782 25       		.uleb128 0x25
 9435 1783 520C0000 		.4byte	.LASF269
 9436 1787 01       		.byte	0x1
 9437 1788 BA01     		.2byte	0x1ba
 9438 178a E9140000 		.4byte	0x14e9
 9439 178e 05       		.uleb128 0x5
 9440 178f 03       		.byte	0x3
 9441 1790 00000000 		.4byte	pedals_float
 9442 1794 25       		.uleb128 0x25
 9443 1795 FD0A0000 		.4byte	.LASF270
 9444 1799 01       		.byte	0x1
 9445 179a C101     		.2byte	0x1c1
 9446 179c 94000000 		.4byte	0x94
 9447 17a0 05       		.uleb128 0x5
 9448 17a1 03       		.byte	0x3
 9449 17a2 00000000 		.4byte	currentNeck
 9450 17a6 25       		.uleb128 0x25
 9451 17a7 C4060000 		.4byte	.LASF271
 9452 17ab 01       		.byte	0x1
 9453 17ac F505     		.2byte	0x5f5
 9454 17ae 4E170000 		.4byte	0x174e
 9455 17b2 05       		.uleb128 0x5
 9456 17b3 03       		.byte	0x3
 9457 17b4 00000000 		.4byte	prevNotes
 9458 17b8 25       		.uleb128 0x25
 9459 17b9 F2090000 		.4byte	.LASF272
 9460 17bd 01       		.byte	0x1
 9461 17be 6A06     		.2byte	0x66a
 9462 17c0 03020000 		.4byte	0x203
 9463 17c4 05       		.uleb128 0x5
 9464 17c5 03       		.byte	0x3
 9465 17c6 00000000 		.4byte	checkStatus
 9466 17ca 25       		.uleb128 0x25
 9467 17cb 4B0B0000 		.4byte	.LASF273
 9468 17cf 01       		.byte	0x1
 9469 17d0 6B06     		.2byte	0x66b
 9470 17d2 03020000 		.4byte	0x203
 9471 17d6 05       		.uleb128 0x5
 9472 17d7 03       		.byte	0x3
 9473 17d8 00000000 		.4byte	checkBase
 9474 17dc 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 203


 9475 17dd 060C0000 		.4byte	.LASF274
 9476 17e1 01       		.byte	0x1
 9477 17e2 6F06     		.2byte	0x66f
 9478 17e4 94000000 		.4byte	0x94
 9479 17e8 05       		.uleb128 0x5
 9480 17e9 03       		.byte	0x3
 9481 17ea 00000000 		.4byte	SPI_errors
 9482 17ee 07       		.uleb128 0x7
 9483 17ef 03020000 		.4byte	0x203
 9484 17f3 FE170000 		.4byte	0x17fe
 9485 17f7 08       		.uleb128 0x8
 9486 17f8 36010000 		.4byte	0x136
 9487 17fc 03       		.byte	0x3
 9488 17fd 00       		.byte	0
 9489 17fe 25       		.uleb128 0x25
 9490 17ff 3F0A0000 		.4byte	.LASF84
 9491 1803 01       		.byte	0x1
 9492 1804 7B07     		.2byte	0x77b
 9493 1806 10180000 		.4byte	0x1810
 9494 180a 05       		.uleb128 0x5
 9495 180b 03       		.byte	0x3
 9496 180c 00000000 		.4byte	tempMIDI
 9497 1810 06       		.uleb128 0x6
 9498 1811 EE170000 		.4byte	0x17ee
 9499 1815 25       		.uleb128 0x25
 9500 1816 1F000000 		.4byte	.LASF275
 9501 181a 01       		.byte	0x1
 9502 181b 7C07     		.2byte	0x77c
 9503 181d 03020000 		.4byte	0x203
 9504 1821 05       		.uleb128 0x5
 9505 1822 03       		.byte	0x3
 9506 1823 00000000 		.4byte	firstSysex
 9507 1827 25       		.uleb128 0x25
 9508 1828 64050000 		.4byte	.LASF276
 9509 182c 01       		.byte	0x1
 9510 182d 7D07     		.2byte	0x77d
 9511 182f 39180000 		.4byte	0x1839
 9512 1833 05       		.uleb128 0x5
 9513 1834 03       		.byte	0x3
 9514 1835 00000000 		.4byte	sysexPointerMask
 9515 1839 22       		.uleb128 0x22
 9516 183a B8000000 		.4byte	0xb8
 9517 183e 00       		.byte	0
 9518              		.section	.debug_abbrev,"",%progbits
 9519              	.Ldebug_abbrev0:
 9520 0000 01       		.uleb128 0x1
 9521 0001 11       		.uleb128 0x11
 9522 0002 01       		.byte	0x1
 9523 0003 25       		.uleb128 0x25
 9524 0004 0E       		.uleb128 0xe
 9525 0005 13       		.uleb128 0x13
 9526 0006 0B       		.uleb128 0xb
 9527 0007 03       		.uleb128 0x3
 9528 0008 0E       		.uleb128 0xe
 9529 0009 1B       		.uleb128 0x1b
 9530 000a 0E       		.uleb128 0xe
 9531 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 204


 9532 000c 17       		.uleb128 0x17
 9533 000d 11       		.uleb128 0x11
 9534 000e 01       		.uleb128 0x1
 9535 000f 10       		.uleb128 0x10
 9536 0010 17       		.uleb128 0x17
 9537 0011 00       		.byte	0
 9538 0012 00       		.byte	0
 9539 0013 02       		.uleb128 0x2
 9540 0014 24       		.uleb128 0x24
 9541 0015 00       		.byte	0
 9542 0016 0B       		.uleb128 0xb
 9543 0017 0B       		.uleb128 0xb
 9544 0018 3E       		.uleb128 0x3e
 9545 0019 0B       		.uleb128 0xb
 9546 001a 03       		.uleb128 0x3
 9547 001b 0E       		.uleb128 0xe
 9548 001c 00       		.byte	0
 9549 001d 00       		.byte	0
 9550 001e 03       		.uleb128 0x3
 9551 001f 16       		.uleb128 0x16
 9552 0020 00       		.byte	0
 9553 0021 03       		.uleb128 0x3
 9554 0022 0E       		.uleb128 0xe
 9555 0023 3A       		.uleb128 0x3a
 9556 0024 0B       		.uleb128 0xb
 9557 0025 3B       		.uleb128 0x3b
 9558 0026 0B       		.uleb128 0xb
 9559 0027 49       		.uleb128 0x49
 9560 0028 13       		.uleb128 0x13
 9561 0029 00       		.byte	0
 9562 002a 00       		.byte	0
 9563 002b 04       		.uleb128 0x4
 9564 002c 24       		.uleb128 0x24
 9565 002d 00       		.byte	0
 9566 002e 0B       		.uleb128 0xb
 9567 002f 0B       		.uleb128 0xb
 9568 0030 3E       		.uleb128 0x3e
 9569 0031 0B       		.uleb128 0xb
 9570 0032 03       		.uleb128 0x3
 9571 0033 08       		.uleb128 0x8
 9572 0034 00       		.byte	0
 9573 0035 00       		.byte	0
 9574 0036 05       		.uleb128 0x5
 9575 0037 16       		.uleb128 0x16
 9576 0038 00       		.byte	0
 9577 0039 03       		.uleb128 0x3
 9578 003a 0E       		.uleb128 0xe
 9579 003b 3A       		.uleb128 0x3a
 9580 003c 0B       		.uleb128 0xb
 9581 003d 3B       		.uleb128 0x3b
 9582 003e 05       		.uleb128 0x5
 9583 003f 49       		.uleb128 0x49
 9584 0040 13       		.uleb128 0x13
 9585 0041 00       		.byte	0
 9586 0042 00       		.byte	0
 9587 0043 06       		.uleb128 0x6
 9588 0044 35       		.uleb128 0x35
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 205


 9589 0045 00       		.byte	0
 9590 0046 49       		.uleb128 0x49
 9591 0047 13       		.uleb128 0x13
 9592 0048 00       		.byte	0
 9593 0049 00       		.byte	0
 9594 004a 07       		.uleb128 0x7
 9595 004b 01       		.uleb128 0x1
 9596 004c 01       		.byte	0x1
 9597 004d 49       		.uleb128 0x49
 9598 004e 13       		.uleb128 0x13
 9599 004f 01       		.uleb128 0x1
 9600 0050 13       		.uleb128 0x13
 9601 0051 00       		.byte	0
 9602 0052 00       		.byte	0
 9603 0053 08       		.uleb128 0x8
 9604 0054 21       		.uleb128 0x21
 9605 0055 00       		.byte	0
 9606 0056 49       		.uleb128 0x49
 9607 0057 13       		.uleb128 0x13
 9608 0058 2F       		.uleb128 0x2f
 9609 0059 0B       		.uleb128 0xb
 9610 005a 00       		.byte	0
 9611 005b 00       		.byte	0
 9612 005c 09       		.uleb128 0x9
 9613 005d 13       		.uleb128 0x13
 9614 005e 01       		.byte	0x1
 9615 005f 0B       		.uleb128 0xb
 9616 0060 0B       		.uleb128 0xb
 9617 0061 3A       		.uleb128 0x3a
 9618 0062 0B       		.uleb128 0xb
 9619 0063 3B       		.uleb128 0x3b
 9620 0064 05       		.uleb128 0x5
 9621 0065 01       		.uleb128 0x1
 9622 0066 13       		.uleb128 0x13
 9623 0067 00       		.byte	0
 9624 0068 00       		.byte	0
 9625 0069 0A       		.uleb128 0xa
 9626 006a 0D       		.uleb128 0xd
 9627 006b 00       		.byte	0
 9628 006c 03       		.uleb128 0x3
 9629 006d 0E       		.uleb128 0xe
 9630 006e 3A       		.uleb128 0x3a
 9631 006f 0B       		.uleb128 0xb
 9632 0070 3B       		.uleb128 0x3b
 9633 0071 05       		.uleb128 0x5
 9634 0072 49       		.uleb128 0x49
 9635 0073 13       		.uleb128 0x13
 9636 0074 38       		.uleb128 0x38
 9637 0075 0B       		.uleb128 0xb
 9638 0076 00       		.byte	0
 9639 0077 00       		.byte	0
 9640 0078 0B       		.uleb128 0xb
 9641 0079 04       		.uleb128 0x4
 9642 007a 01       		.byte	0x1
 9643 007b 0B       		.uleb128 0xb
 9644 007c 0B       		.uleb128 0xb
 9645 007d 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 206


 9646 007e 13       		.uleb128 0x13
 9647 007f 3A       		.uleb128 0x3a
 9648 0080 0B       		.uleb128 0xb
 9649 0081 3B       		.uleb128 0x3b
 9650 0082 05       		.uleb128 0x5
 9651 0083 01       		.uleb128 0x1
 9652 0084 13       		.uleb128 0x13
 9653 0085 00       		.byte	0
 9654 0086 00       		.byte	0
 9655 0087 0C       		.uleb128 0xc
 9656 0088 28       		.uleb128 0x28
 9657 0089 00       		.byte	0
 9658 008a 03       		.uleb128 0x3
 9659 008b 0E       		.uleb128 0xe
 9660 008c 1C       		.uleb128 0x1c
 9661 008d 0B       		.uleb128 0xb
 9662 008e 00       		.byte	0
 9663 008f 00       		.byte	0
 9664 0090 0D       		.uleb128 0xd
 9665 0091 04       		.uleb128 0x4
 9666 0092 01       		.byte	0x1
 9667 0093 03       		.uleb128 0x3
 9668 0094 0E       		.uleb128 0xe
 9669 0095 0B       		.uleb128 0xb
 9670 0096 0B       		.uleb128 0xb
 9671 0097 49       		.uleb128 0x49
 9672 0098 13       		.uleb128 0x13
 9673 0099 3A       		.uleb128 0x3a
 9674 009a 0B       		.uleb128 0xb
 9675 009b 3B       		.uleb128 0x3b
 9676 009c 0B       		.uleb128 0xb
 9677 009d 01       		.uleb128 0x1
 9678 009e 13       		.uleb128 0x13
 9679 009f 00       		.byte	0
 9680 00a0 00       		.byte	0
 9681 00a1 0E       		.uleb128 0xe
 9682 00a2 17       		.uleb128 0x17
 9683 00a3 01       		.byte	0x1
 9684 00a4 03       		.uleb128 0x3
 9685 00a5 0E       		.uleb128 0xe
 9686 00a6 0B       		.uleb128 0xb
 9687 00a7 0B       		.uleb128 0xb
 9688 00a8 3A       		.uleb128 0x3a
 9689 00a9 0B       		.uleb128 0xb
 9690 00aa 3B       		.uleb128 0x3b
 9691 00ab 0B       		.uleb128 0xb
 9692 00ac 01       		.uleb128 0x1
 9693 00ad 13       		.uleb128 0x13
 9694 00ae 00       		.byte	0
 9695 00af 00       		.byte	0
 9696 00b0 0F       		.uleb128 0xf
 9697 00b1 0D       		.uleb128 0xd
 9698 00b2 00       		.byte	0
 9699 00b3 03       		.uleb128 0x3
 9700 00b4 08       		.uleb128 0x8
 9701 00b5 3A       		.uleb128 0x3a
 9702 00b6 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 207


 9703 00b7 3B       		.uleb128 0x3b
 9704 00b8 0B       		.uleb128 0xb
 9705 00b9 49       		.uleb128 0x49
 9706 00ba 13       		.uleb128 0x13
 9707 00bb 00       		.byte	0
 9708 00bc 00       		.byte	0
 9709 00bd 10       		.uleb128 0x10
 9710 00be 2E       		.uleb128 0x2e
 9711 00bf 01       		.byte	0x1
 9712 00c0 3F       		.uleb128 0x3f
 9713 00c1 19       		.uleb128 0x19
 9714 00c2 03       		.uleb128 0x3
 9715 00c3 0E       		.uleb128 0xe
 9716 00c4 3A       		.uleb128 0x3a
 9717 00c5 0B       		.uleb128 0xb
 9718 00c6 3B       		.uleb128 0x3b
 9719 00c7 0B       		.uleb128 0xb
 9720 00c8 27       		.uleb128 0x27
 9721 00c9 19       		.uleb128 0x19
 9722 00ca 11       		.uleb128 0x11
 9723 00cb 01       		.uleb128 0x1
 9724 00cc 12       		.uleb128 0x12
 9725 00cd 06       		.uleb128 0x6
 9726 00ce 40       		.uleb128 0x40
 9727 00cf 18       		.uleb128 0x18
 9728 00d0 9642     		.uleb128 0x2116
 9729 00d2 19       		.uleb128 0x19
 9730 00d3 01       		.uleb128 0x1
 9731 00d4 13       		.uleb128 0x13
 9732 00d5 00       		.byte	0
 9733 00d6 00       		.byte	0
 9734 00d7 11       		.uleb128 0x11
 9735 00d8 0B       		.uleb128 0xb
 9736 00d9 01       		.byte	0x1
 9737 00da 11       		.uleb128 0x11
 9738 00db 01       		.uleb128 0x1
 9739 00dc 12       		.uleb128 0x12
 9740 00dd 06       		.uleb128 0x6
 9741 00de 00       		.byte	0
 9742 00df 00       		.byte	0
 9743 00e0 12       		.uleb128 0x12
 9744 00e1 34       		.uleb128 0x34
 9745 00e2 00       		.byte	0
 9746 00e3 03       		.uleb128 0x3
 9747 00e4 08       		.uleb128 0x8
 9748 00e5 3A       		.uleb128 0x3a
 9749 00e6 0B       		.uleb128 0xb
 9750 00e7 3B       		.uleb128 0x3b
 9751 00e8 0B       		.uleb128 0xb
 9752 00e9 49       		.uleb128 0x49
 9753 00ea 13       		.uleb128 0x13
 9754 00eb 02       		.uleb128 0x2
 9755 00ec 18       		.uleb128 0x18
 9756 00ed 00       		.byte	0
 9757 00ee 00       		.byte	0
 9758 00ef 13       		.uleb128 0x13
 9759 00f0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 208


 9760 00f1 00       		.byte	0
 9761 00f2 3F       		.uleb128 0x3f
 9762 00f3 19       		.uleb128 0x19
 9763 00f4 03       		.uleb128 0x3
 9764 00f5 0E       		.uleb128 0xe
 9765 00f6 3A       		.uleb128 0x3a
 9766 00f7 0B       		.uleb128 0xb
 9767 00f8 3B       		.uleb128 0x3b
 9768 00f9 0B       		.uleb128 0xb
 9769 00fa 27       		.uleb128 0x27
 9770 00fb 19       		.uleb128 0x19
 9771 00fc 11       		.uleb128 0x11
 9772 00fd 01       		.uleb128 0x1
 9773 00fe 12       		.uleb128 0x12
 9774 00ff 06       		.uleb128 0x6
 9775 0100 40       		.uleb128 0x40
 9776 0101 18       		.uleb128 0x18
 9777 0102 9642     		.uleb128 0x2116
 9778 0104 19       		.uleb128 0x19
 9779 0105 00       		.byte	0
 9780 0106 00       		.byte	0
 9781 0107 14       		.uleb128 0x14
 9782 0108 2E       		.uleb128 0x2e
 9783 0109 01       		.byte	0x1
 9784 010a 3F       		.uleb128 0x3f
 9785 010b 19       		.uleb128 0x19
 9786 010c 03       		.uleb128 0x3
 9787 010d 0E       		.uleb128 0xe
 9788 010e 3A       		.uleb128 0x3a
 9789 010f 0B       		.uleb128 0xb
 9790 0110 3B       		.uleb128 0x3b
 9791 0111 05       		.uleb128 0x5
 9792 0112 27       		.uleb128 0x27
 9793 0113 19       		.uleb128 0x19
 9794 0114 49       		.uleb128 0x49
 9795 0115 13       		.uleb128 0x13
 9796 0116 11       		.uleb128 0x11
 9797 0117 01       		.uleb128 0x1
 9798 0118 12       		.uleb128 0x12
 9799 0119 06       		.uleb128 0x6
 9800 011a 40       		.uleb128 0x40
 9801 011b 18       		.uleb128 0x18
 9802 011c 9642     		.uleb128 0x2116
 9803 011e 19       		.uleb128 0x19
 9804 011f 01       		.uleb128 0x1
 9805 0120 13       		.uleb128 0x13
 9806 0121 00       		.byte	0
 9807 0122 00       		.byte	0
 9808 0123 15       		.uleb128 0x15
 9809 0124 05       		.uleb128 0x5
 9810 0125 00       		.byte	0
 9811 0126 03       		.uleb128 0x3
 9812 0127 08       		.uleb128 0x8
 9813 0128 3A       		.uleb128 0x3a
 9814 0129 0B       		.uleb128 0xb
 9815 012a 3B       		.uleb128 0x3b
 9816 012b 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 209


 9817 012c 49       		.uleb128 0x49
 9818 012d 13       		.uleb128 0x13
 9819 012e 02       		.uleb128 0x2
 9820 012f 18       		.uleb128 0x18
 9821 0130 00       		.byte	0
 9822 0131 00       		.byte	0
 9823 0132 16       		.uleb128 0x16
 9824 0133 34       		.uleb128 0x34
 9825 0134 00       		.byte	0
 9826 0135 03       		.uleb128 0x3
 9827 0136 0E       		.uleb128 0xe
 9828 0137 3A       		.uleb128 0x3a
 9829 0138 0B       		.uleb128 0xb
 9830 0139 3B       		.uleb128 0x3b
 9831 013a 05       		.uleb128 0x5
 9832 013b 49       		.uleb128 0x49
 9833 013c 13       		.uleb128 0x13
 9834 013d 02       		.uleb128 0x2
 9835 013e 18       		.uleb128 0x18
 9836 013f 00       		.byte	0
 9837 0140 00       		.byte	0
 9838 0141 17       		.uleb128 0x17
 9839 0142 05       		.uleb128 0x5
 9840 0143 00       		.byte	0
 9841 0144 03       		.uleb128 0x3
 9842 0145 0E       		.uleb128 0xe
 9843 0146 3A       		.uleb128 0x3a
 9844 0147 0B       		.uleb128 0xb
 9845 0148 3B       		.uleb128 0x3b
 9846 0149 05       		.uleb128 0x5
 9847 014a 49       		.uleb128 0x49
 9848 014b 13       		.uleb128 0x13
 9849 014c 02       		.uleb128 0x2
 9850 014d 18       		.uleb128 0x18
 9851 014e 00       		.byte	0
 9852 014f 00       		.byte	0
 9853 0150 18       		.uleb128 0x18
 9854 0151 34       		.uleb128 0x34
 9855 0152 00       		.byte	0
 9856 0153 03       		.uleb128 0x3
 9857 0154 08       		.uleb128 0x8
 9858 0155 3A       		.uleb128 0x3a
 9859 0156 0B       		.uleb128 0xb
 9860 0157 3B       		.uleb128 0x3b
 9861 0158 05       		.uleb128 0x5
 9862 0159 49       		.uleb128 0x49
 9863 015a 13       		.uleb128 0x13
 9864 015b 02       		.uleb128 0x2
 9865 015c 18       		.uleb128 0x18
 9866 015d 00       		.byte	0
 9867 015e 00       		.byte	0
 9868 015f 19       		.uleb128 0x19
 9869 0160 2E       		.uleb128 0x2e
 9870 0161 01       		.byte	0x1
 9871 0162 3F       		.uleb128 0x3f
 9872 0163 19       		.uleb128 0x19
 9873 0164 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 210


 9874 0165 08       		.uleb128 0x8
 9875 0166 3A       		.uleb128 0x3a
 9876 0167 0B       		.uleb128 0xb
 9877 0168 3B       		.uleb128 0x3b
 9878 0169 05       		.uleb128 0x5
 9879 016a 27       		.uleb128 0x27
 9880 016b 19       		.uleb128 0x19
 9881 016c 49       		.uleb128 0x49
 9882 016d 13       		.uleb128 0x13
 9883 016e 11       		.uleb128 0x11
 9884 016f 01       		.uleb128 0x1
 9885 0170 12       		.uleb128 0x12
 9886 0171 06       		.uleb128 0x6
 9887 0172 40       		.uleb128 0x40
 9888 0173 18       		.uleb128 0x18
 9889 0174 9642     		.uleb128 0x2116
 9890 0176 19       		.uleb128 0x19
 9891 0177 01       		.uleb128 0x1
 9892 0178 13       		.uleb128 0x13
 9893 0179 00       		.byte	0
 9894 017a 00       		.byte	0
 9895 017b 1A       		.uleb128 0x1a
 9896 017c 0B       		.uleb128 0xb
 9897 017d 01       		.byte	0x1
 9898 017e 11       		.uleb128 0x11
 9899 017f 01       		.uleb128 0x1
 9900 0180 12       		.uleb128 0x12
 9901 0181 06       		.uleb128 0x6
 9902 0182 01       		.uleb128 0x1
 9903 0183 13       		.uleb128 0x13
 9904 0184 00       		.byte	0
 9905 0185 00       		.byte	0
 9906 0186 1B       		.uleb128 0x1b
 9907 0187 2E       		.uleb128 0x2e
 9908 0188 00       		.byte	0
 9909 0189 3F       		.uleb128 0x3f
 9910 018a 19       		.uleb128 0x19
 9911 018b 03       		.uleb128 0x3
 9912 018c 0E       		.uleb128 0xe
 9913 018d 3A       		.uleb128 0x3a
 9914 018e 0B       		.uleb128 0xb
 9915 018f 3B       		.uleb128 0x3b
 9916 0190 05       		.uleb128 0x5
 9917 0191 27       		.uleb128 0x27
 9918 0192 19       		.uleb128 0x19
 9919 0193 11       		.uleb128 0x11
 9920 0194 01       		.uleb128 0x1
 9921 0195 12       		.uleb128 0x12
 9922 0196 06       		.uleb128 0x6
 9923 0197 40       		.uleb128 0x40
 9924 0198 18       		.uleb128 0x18
 9925 0199 9642     		.uleb128 0x2116
 9926 019b 19       		.uleb128 0x19
 9927 019c 00       		.byte	0
 9928 019d 00       		.byte	0
 9929 019e 1C       		.uleb128 0x1c
 9930 019f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 211


 9931 01a0 00       		.byte	0
 9932 01a1 3F       		.uleb128 0x3f
 9933 01a2 19       		.uleb128 0x19
 9934 01a3 03       		.uleb128 0x3
 9935 01a4 0E       		.uleb128 0xe
 9936 01a5 3A       		.uleb128 0x3a
 9937 01a6 0B       		.uleb128 0xb
 9938 01a7 3B       		.uleb128 0x3b
 9939 01a8 05       		.uleb128 0x5
 9940 01a9 27       		.uleb128 0x27
 9941 01aa 19       		.uleb128 0x19
 9942 01ab 11       		.uleb128 0x11
 9943 01ac 01       		.uleb128 0x1
 9944 01ad 12       		.uleb128 0x12
 9945 01ae 06       		.uleb128 0x6
 9946 01af 40       		.uleb128 0x40
 9947 01b0 18       		.uleb128 0x18
 9948 01b1 9742     		.uleb128 0x2117
 9949 01b3 19       		.uleb128 0x19
 9950 01b4 00       		.byte	0
 9951 01b5 00       		.byte	0
 9952 01b6 1D       		.uleb128 0x1d
 9953 01b7 2E       		.uleb128 0x2e
 9954 01b8 01       		.byte	0x1
 9955 01b9 3F       		.uleb128 0x3f
 9956 01ba 19       		.uleb128 0x19
 9957 01bb 03       		.uleb128 0x3
 9958 01bc 0E       		.uleb128 0xe
 9959 01bd 3A       		.uleb128 0x3a
 9960 01be 0B       		.uleb128 0xb
 9961 01bf 3B       		.uleb128 0x3b
 9962 01c0 05       		.uleb128 0x5
 9963 01c1 27       		.uleb128 0x27
 9964 01c2 19       		.uleb128 0x19
 9965 01c3 11       		.uleb128 0x11
 9966 01c4 01       		.uleb128 0x1
 9967 01c5 12       		.uleb128 0x12
 9968 01c6 06       		.uleb128 0x6
 9969 01c7 40       		.uleb128 0x40
 9970 01c8 18       		.uleb128 0x18
 9971 01c9 9642     		.uleb128 0x2116
 9972 01cb 19       		.uleb128 0x19
 9973 01cc 01       		.uleb128 0x1
 9974 01cd 13       		.uleb128 0x13
 9975 01ce 00       		.byte	0
 9976 01cf 00       		.byte	0
 9977 01d0 1E       		.uleb128 0x1e
 9978 01d1 0F       		.uleb128 0xf
 9979 01d2 00       		.byte	0
 9980 01d3 0B       		.uleb128 0xb
 9981 01d4 0B       		.uleb128 0xb
 9982 01d5 49       		.uleb128 0x49
 9983 01d6 13       		.uleb128 0x13
 9984 01d7 00       		.byte	0
 9985 01d8 00       		.byte	0
 9986 01d9 1F       		.uleb128 0x1f
 9987 01da 34       		.uleb128 0x34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 212


 9988 01db 00       		.byte	0
 9989 01dc 03       		.uleb128 0x3
 9990 01dd 0E       		.uleb128 0xe
 9991 01de 3A       		.uleb128 0x3a
 9992 01df 0B       		.uleb128 0xb
 9993 01e0 3B       		.uleb128 0x3b
 9994 01e1 0B       		.uleb128 0xb
 9995 01e2 49       		.uleb128 0x49
 9996 01e3 13       		.uleb128 0x13
 9997 01e4 02       		.uleb128 0x2
 9998 01e5 18       		.uleb128 0x18
 9999 01e6 00       		.byte	0
 10000 01e7 00       		.byte	0
 10001 01e8 20       		.uleb128 0x20
 10002 01e9 34       		.uleb128 0x34
 10003 01ea 00       		.byte	0
 10004 01eb 03       		.uleb128 0x3
 10005 01ec 0E       		.uleb128 0xe
 10006 01ed 3A       		.uleb128 0x3a
 10007 01ee 0B       		.uleb128 0xb
 10008 01ef 3B       		.uleb128 0x3b
 10009 01f0 0B       		.uleb128 0xb
 10010 01f1 49       		.uleb128 0x49
 10011 01f2 13       		.uleb128 0x13
 10012 01f3 3F       		.uleb128 0x3f
 10013 01f4 19       		.uleb128 0x19
 10014 01f5 3C       		.uleb128 0x3c
 10015 01f6 19       		.uleb128 0x19
 10016 01f7 00       		.byte	0
 10017 01f8 00       		.byte	0
 10018 01f9 21       		.uleb128 0x21
 10019 01fa 21       		.uleb128 0x21
 10020 01fb 00       		.byte	0
 10021 01fc 49       		.uleb128 0x49
 10022 01fd 13       		.uleb128 0x13
 10023 01fe 2F       		.uleb128 0x2f
 10024 01ff 05       		.uleb128 0x5
 10025 0200 00       		.byte	0
 10026 0201 00       		.byte	0
 10027 0202 22       		.uleb128 0x22
 10028 0203 26       		.uleb128 0x26
 10029 0204 00       		.byte	0
 10030 0205 49       		.uleb128 0x49
 10031 0206 13       		.uleb128 0x13
 10032 0207 00       		.byte	0
 10033 0208 00       		.byte	0
 10034 0209 23       		.uleb128 0x23
 10035 020a 34       		.uleb128 0x34
 10036 020b 00       		.byte	0
 10037 020c 03       		.uleb128 0x3
 10038 020d 0E       		.uleb128 0xe
 10039 020e 3A       		.uleb128 0x3a
 10040 020f 0B       		.uleb128 0xb
 10041 0210 3B       		.uleb128 0x3b
 10042 0211 0B       		.uleb128 0xb
 10043 0212 49       		.uleb128 0x49
 10044 0213 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 213


 10045 0214 3F       		.uleb128 0x3f
 10046 0215 19       		.uleb128 0x19
 10047 0216 02       		.uleb128 0x2
 10048 0217 18       		.uleb128 0x18
 10049 0218 00       		.byte	0
 10050 0219 00       		.byte	0
 10051 021a 24       		.uleb128 0x24
 10052 021b 34       		.uleb128 0x34
 10053 021c 00       		.byte	0
 10054 021d 03       		.uleb128 0x3
 10055 021e 0E       		.uleb128 0xe
 10056 021f 3A       		.uleb128 0x3a
 10057 0220 0B       		.uleb128 0xb
 10058 0221 3B       		.uleb128 0x3b
 10059 0222 05       		.uleb128 0x5
 10060 0223 49       		.uleb128 0x49
 10061 0224 13       		.uleb128 0x13
 10062 0225 3F       		.uleb128 0x3f
 10063 0226 19       		.uleb128 0x19
 10064 0227 3C       		.uleb128 0x3c
 10065 0228 19       		.uleb128 0x19
 10066 0229 00       		.byte	0
 10067 022a 00       		.byte	0
 10068 022b 25       		.uleb128 0x25
 10069 022c 34       		.uleb128 0x34
 10070 022d 00       		.byte	0
 10071 022e 03       		.uleb128 0x3
 10072 022f 0E       		.uleb128 0xe
 10073 0230 3A       		.uleb128 0x3a
 10074 0231 0B       		.uleb128 0xb
 10075 0232 3B       		.uleb128 0x3b
 10076 0233 05       		.uleb128 0x5
 10077 0234 49       		.uleb128 0x49
 10078 0235 13       		.uleb128 0x13
 10079 0236 3F       		.uleb128 0x3f
 10080 0237 19       		.uleb128 0x19
 10081 0238 02       		.uleb128 0x2
 10082 0239 18       		.uleb128 0x18
 10083 023a 00       		.byte	0
 10084 023b 00       		.byte	0
 10085 023c 26       		.uleb128 0x26
 10086 023d 34       		.uleb128 0x34
 10087 023e 00       		.byte	0
 10088 023f 03       		.uleb128 0x3
 10089 0240 08       		.uleb128 0x8
 10090 0241 3A       		.uleb128 0x3a
 10091 0242 0B       		.uleb128 0xb
 10092 0243 3B       		.uleb128 0x3b
 10093 0244 0B       		.uleb128 0xb
 10094 0245 49       		.uleb128 0x49
 10095 0246 13       		.uleb128 0x13
 10096 0247 3F       		.uleb128 0x3f
 10097 0248 19       		.uleb128 0x19
 10098 0249 02       		.uleb128 0x2
 10099 024a 18       		.uleb128 0x18
 10100 024b 00       		.byte	0
 10101 024c 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 214


 10102 024d 00       		.byte	0
 10103              		.section	.debug_aranges,"",%progbits
 10104 0000 E4000000 		.4byte	0xe4
 10105 0004 0200     		.2byte	0x2
 10106 0006 00000000 		.4byte	.Ldebug_info0
 10107 000a 04       		.byte	0x4
 10108 000b 00       		.byte	0
 10109 000c 0000     		.2byte	0
 10110 000e 0000     		.2byte	0
 10111 0010 00000000 		.4byte	.LFB64
 10112 0014 74010000 		.4byte	.LFE64-.LFB64
 10113 0018 00000000 		.4byte	.LFB65
 10114 001c 9C000000 		.4byte	.LFE65-.LFB65
 10115 0020 00000000 		.4byte	.LFB66
 10116 0024 14000000 		.4byte	.LFE66-.LFB66
 10117 0028 00000000 		.4byte	.LFB67
 10118 002c 7C000000 		.4byte	.LFE67-.LFB67
 10119 0030 00000000 		.4byte	.LFB68
 10120 0034 58000000 		.4byte	.LFE68-.LFB68
 10121 0038 00000000 		.4byte	.LFB69
 10122 003c 68000000 		.4byte	.LFE69-.LFB69
 10123 0040 00000000 		.4byte	.LFB70
 10124 0044 4C000000 		.4byte	.LFE70-.LFB70
 10125 0048 00000000 		.4byte	.LFB71
 10126 004c 46000000 		.4byte	.LFE71-.LFB71
 10127 0050 00000000 		.4byte	.LFB72
 10128 0054 56000000 		.4byte	.LFE72-.LFB72
 10129 0058 00000000 		.4byte	.LFB73
 10130 005c 04130000 		.4byte	.LFE73-.LFB73
 10131 0060 00000000 		.4byte	.LFB74
 10132 0064 08010000 		.4byte	.LFE74-.LFB74
 10133 0068 00000000 		.4byte	.LFB75
 10134 006c A0000000 		.4byte	.LFE75-.LFB75
 10135 0070 00000000 		.4byte	.LFB76
 10136 0074 B4000000 		.4byte	.LFE76-.LFB76
 10137 0078 00000000 		.4byte	.LFB77
 10138 007c 0C000000 		.4byte	.LFE77-.LFB77
 10139 0080 00000000 		.4byte	.LFB78
 10140 0084 54000000 		.4byte	.LFE78-.LFB78
 10141 0088 00000000 		.4byte	.LFB79
 10142 008c C4000000 		.4byte	.LFE79-.LFB79
 10143 0090 00000000 		.4byte	.LFB80
 10144 0094 98000000 		.4byte	.LFE80-.LFB80
 10145 0098 00000000 		.4byte	.LFB81
 10146 009c D4000000 		.4byte	.LFE81-.LFB81
 10147 00a0 00000000 		.4byte	.LFB82
 10148 00a4 1C000000 		.4byte	.LFE82-.LFB82
 10149 00a8 00000000 		.4byte	.LFB83
 10150 00ac 68000000 		.4byte	.LFE83-.LFB83
 10151 00b0 00000000 		.4byte	.LFB84
 10152 00b4 68000000 		.4byte	.LFE84-.LFB84
 10153 00b8 00000000 		.4byte	.LFB85
 10154 00bc 68000000 		.4byte	.LFE85-.LFB85
 10155 00c0 00000000 		.4byte	.LFB86
 10156 00c4 6C000000 		.4byte	.LFE86-.LFB86
 10157 00c8 00000000 		.4byte	.LFB87
 10158 00cc 64000000 		.4byte	.LFE87-.LFB87
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 215


 10159 00d0 00000000 		.4byte	.LFB88
 10160 00d4 58080000 		.4byte	.LFE88-.LFB88
 10161 00d8 00000000 		.4byte	.LFB89
 10162 00dc 3C010000 		.4byte	.LFE89-.LFB89
 10163 00e0 00000000 		.4byte	0
 10164 00e4 00000000 		.4byte	0
 10165              		.section	.debug_ranges,"",%progbits
 10166              	.Ldebug_ranges0:
 10167 0000 00000000 		.4byte	.LFB64
 10168 0004 74010000 		.4byte	.LFE64
 10169 0008 00000000 		.4byte	.LFB65
 10170 000c 9C000000 		.4byte	.LFE65
 10171 0010 00000000 		.4byte	.LFB66
 10172 0014 14000000 		.4byte	.LFE66
 10173 0018 00000000 		.4byte	.LFB67
 10174 001c 7C000000 		.4byte	.LFE67
 10175 0020 00000000 		.4byte	.LFB68
 10176 0024 58000000 		.4byte	.LFE68
 10177 0028 00000000 		.4byte	.LFB69
 10178 002c 68000000 		.4byte	.LFE69
 10179 0030 00000000 		.4byte	.LFB70
 10180 0034 4C000000 		.4byte	.LFE70
 10181 0038 00000000 		.4byte	.LFB71
 10182 003c 46000000 		.4byte	.LFE71
 10183 0040 00000000 		.4byte	.LFB72
 10184 0044 56000000 		.4byte	.LFE72
 10185 0048 00000000 		.4byte	.LFB73
 10186 004c 04130000 		.4byte	.LFE73
 10187 0050 00000000 		.4byte	.LFB74
 10188 0054 08010000 		.4byte	.LFE74
 10189 0058 00000000 		.4byte	.LFB75
 10190 005c A0000000 		.4byte	.LFE75
 10191 0060 00000000 		.4byte	.LFB76
 10192 0064 B4000000 		.4byte	.LFE76
 10193 0068 00000000 		.4byte	.LFB77
 10194 006c 0C000000 		.4byte	.LFE77
 10195 0070 00000000 		.4byte	.LFB78
 10196 0074 54000000 		.4byte	.LFE78
 10197 0078 00000000 		.4byte	.LFB79
 10198 007c C4000000 		.4byte	.LFE79
 10199 0080 00000000 		.4byte	.LFB80
 10200 0084 98000000 		.4byte	.LFE80
 10201 0088 00000000 		.4byte	.LFB81
 10202 008c D4000000 		.4byte	.LFE81
 10203 0090 00000000 		.4byte	.LFB82
 10204 0094 1C000000 		.4byte	.LFE82
 10205 0098 00000000 		.4byte	.LFB83
 10206 009c 68000000 		.4byte	.LFE83
 10207 00a0 00000000 		.4byte	.LFB84
 10208 00a4 68000000 		.4byte	.LFE84
 10209 00a8 00000000 		.4byte	.LFB85
 10210 00ac 68000000 		.4byte	.LFE85
 10211 00b0 00000000 		.4byte	.LFB86
 10212 00b4 6C000000 		.4byte	.LFE86
 10213 00b8 00000000 		.4byte	.LFB87
 10214 00bc 64000000 		.4byte	.LFE87
 10215 00c0 00000000 		.4byte	.LFB88
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 216


 10216 00c4 58080000 		.4byte	.LFE88
 10217 00c8 00000000 		.4byte	.LFB89
 10218 00cc 3C010000 		.4byte	.LFE89
 10219 00d0 00000000 		.4byte	0
 10220 00d4 00000000 		.4byte	0
 10221              		.section	.debug_line,"",%progbits
 10222              	.Ldebug_line0:
 10223 0000 9E080000 		.section	.debug_str,"MS",%progbits,1
 10223      02009001 
 10223      00000201 
 10223      FB0E0D00 
 10223      01010101 
 10224              	.LASF151:
 10225 0000 70726573 		.ascii	"presetArraySection\000"
 10225      65744172 
 10225      72617953 
 10225      65637469 
 10225      6F6E00
 10226              	.LASF147:
 10227 0013 70726573 		.ascii	"presetArray\000"
 10227      65744172 
 10227      72617900 
 10228              	.LASF275:
 10229 001f 66697273 		.ascii	"firstSysex\000"
 10229      74537973 
 10229      657800
 10230              	.LASF28:
 10231 002a 73697A65 		.ascii	"sizetype\000"
 10231      74797065 
 10231      00
 10232              	.LASF156:
 10233 0033 73656E64 		.ascii	"sendingMessage\000"
 10233      696E674D 
 10233      65737361 
 10233      676500
 10234              	.LASF231:
 10235 0042 70726576 		.ascii	"prev_processed_volumePedal\000"
 10235      5F70726F 
 10235      63657373 
 10235      65645F76 
 10235      6F6C756D 
 10236              	.LASF82:
 10237 005d 74656D70 		.ascii	"tempangle\000"
 10237      616E676C 
 10237      6500
 10238              	.LASF204:
 10239 0067 6E657744 		.ascii	"newDataFlag2\000"
 10239      61746146 
 10239      6C616732 
 10239      00
 10240              	.LASF38:
 10241 0074 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 10241      4D5F4545 
 10241      50524F4D 
 10241      5F535543 
 10241      43455353 
 10242              	.LASF17:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 217


 10243 0089 696E7433 		.ascii	"int32_t\000"
 10243      325F7400 
 10244              	.LASF139:
 10245 0091 456D5F45 		.ascii	"Em_EEPROM_context\000"
 10245      4550524F 
 10245      4D5F636F 
 10245      6E746578 
 10245      7400
 10246              	.LASF47:
 10247 00a3 54686972 		.ascii	"ThirdLine\000"
 10247      644C696E 
 10247      6500
 10248              	.LASF103:
 10249 00ad 6E6F7465 		.ascii	"noteEvent\000"
 10249      4576656E 
 10249      7400
 10250              	.LASF213:
 10251 00b7 53504932 		.ascii	"SPI2errorflag\000"
 10251      6572726F 
 10251      72666C61 
 10251      6700
 10252              	.LASF21:
 10253 00c5 75696E74 		.ascii	"uint32\000"
 10253      333200
 10254              	.LASF116:
 10255 00cc 43437661 		.ascii	"CCval\000"
 10255      6C00
 10256              	.LASF161:
 10257 00d2 6E756D4D 		.ascii	"numMappings\000"
 10257      61707069 
 10257      6E677300 
 10258              	.LASF142:
 10259 00de 49324362 		.ascii	"I2Cbuff1\000"
 10259      75666631 
 10259      00
 10260              	.LASF222:
 10261 00e7 49324362 		.ascii	"I2Cbuff2\000"
 10261      75666632 
 10261      00
 10262              	.LASF224:
 10263 00f0 6D75785F 		.ascii	"mux_states\000"
 10263      73746174 
 10263      657300
 10264              	.LASF129:
 10265 00fb 74656D70 		.ascii	"tempLow\000"
 10265      4C6F7700 
 10266              	.LASF186:
 10267 0103 6E65636B 		.ascii	"necks\000"
 10267      7300
 10268              	.LASF178:
 10269 0109 6F637461 		.ascii	"octave\000"
 10269      766500
 10270              	.LASF49:
 10271 0110 4E696C4C 		.ascii	"NilLine\000"
 10271      696E6500 
 10272              	.LASF43:
 10273 0118 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 218


 10273      6E5F656D 
 10273      5F656570 
 10273      726F6D5F 
 10273      73746174 
 10274              	.LASF226:
 10275 0131 70656461 		.ascii	"pedals_high\000"
 10275      6C735F68 
 10275      69676800 
 10276              	.LASF93:
 10277 013d 6E627974 		.ascii	"nbytes\000"
 10277      657300
 10278              	.LASF257:
 10279 0144 636F7065 		.ascii	"copedentNamesArray\000"
 10279      64656E74 
 10279      4E616D65 
 10279      73417272 
 10279      617900
 10280              	.LASF159:
 10281 0157 76616C73 		.ascii	"valsCount\000"
 10281      436F756E 
 10281      7400
 10282              	.LASF176:
 10283 0161 74656D70 		.ascii	"temper\000"
 10283      657200
 10284              	.LASF115:
 10285 0168 43436E75 		.ascii	"CCnum\000"
 10285      6D00
 10286              	.LASF40:
 10287 016e 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 10287      4D5F4545 
 10287      50524F4D 
 10287      5F424144 
 10287      5F434845 
 10288              	.LASF36:
 10289 0188 75736572 		.ascii	"userFlashStartAddr\000"
 10289      466C6173 
 10289      68537461 
 10289      72744164 
 10289      647200
 10290              	.LASF30:
 10291 019b 6E756D62 		.ascii	"numberOfRows\000"
 10291      65724F66 
 10291      526F7773 
 10291      00
 10292              	.LASF123:
 10293 01a8 696E7456 		.ascii	"intVal\000"
 10293      616C00
 10294              	.LASF69:
 10295 01af 69737461 		.ascii	"istart\000"
 10295      727400
 10296              	.LASF75:
 10297 01b6 70656461 		.ascii	"pedalDiff\000"
 10297      6C446966 
 10297      6600
 10298              	.LASF120:
 10299 01c0 74686556 		.ascii	"theVal\000"
 10299      616C00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 219


 10300              	.LASF34:
 10301 01c7 72656475 		.ascii	"redundantCopy\000"
 10301      6E64616E 
 10301      74436F70 
 10301      7900
 10302              	.LASF2:
 10303 01d5 5F5F7569 		.ascii	"__uint8_t\000"
 10303      6E74385F 
 10303      7400
 10304              	.LASF66:
 10305 01df 616C7068 		.ascii	"alpha\000"
 10305      6100
 10306              	.LASF56:
 10307 01e5 70726573 		.ascii	"presetEnd\000"
 10307      6574456E 
 10307      6400
 10308              	.LASF221:
 10309 01ef 62617243 		.ascii	"barCount\000"
 10309      6F756E74 
 10309      00
 10310              	.LASF150:
 10311 01f8 73656E64 		.ascii	"sendMessageEnd\000"
 10311      4D657373 
 10311      61676545 
 10311      6E6400
 10312              	.LASF236:
 10313 0207 70726573 		.ascii	"presetNumberToLoad\000"
 10313      65744E75 
 10313      6D626572 
 10313      546F4C6F 
 10313      616400
 10314              	.LASF245:
 10315 021a 766F6963 		.ascii	"voice\000"
 10315      6500
 10316              	.LASF193:
 10317 0220 73747269 		.ascii	"strings\000"
 10317      6E677300 
 10318              	.LASF8:
 10319 0228 6C6F6E67 		.ascii	"long int\000"
 10319      20696E74 
 10319      00
 10320              	.LASF157:
 10321 0231 63757272 		.ascii	"currentFloat\000"
 10321      656E7446 
 10321      6C6F6174 
 10321      00
 10322              	.LASF237:
 10323 023e 70726573 		.ascii	"presetLoadedResponse\000"
 10323      65744C6F 
 10323      61646564 
 10323      52657370 
 10323      6F6E7365 
 10324              	.LASF148:
 10325 0253 70726573 		.ascii	"presetNumberToWrite\000"
 10325      65744E75 
 10325      6D626572 
 10325      546F5772 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 220


 10325      69746500 
 10326              	.LASF235:
 10327 0267 70726573 		.ascii	"presetNamesArray\000"
 10327      65744E61 
 10327      6D657341 
 10327      72726179 
 10327      00
 10328              	.LASF73:
 10329 0278 6D61696E 		.ascii	"main\000"
 10329      00
 10330              	.LASF258:
 10331 027d 70726576 		.ascii	"prevStringPitchBend\000"
 10331      53747269 
 10331      6E675069 
 10331      74636842 
 10331      656E6400 
 10332              	.LASF110:
 10333 0291 4D494449 		.ascii	"MIDInoteNum\000"
 10333      6E6F7465 
 10333      4E756D00 
 10334              	.LASF118:
 10335 029d 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 10335      4D494449 
 10335      416C6C4E 
 10335      6F746573 
 10335      4F666600 
 10336              	.LASF46:
 10337 02b1 5365636F 		.ascii	"SecondLine\000"
 10337      6E644C69 
 10337      6E6500
 10338              	.LASF238:
 10339 02bc 66726574 		.ascii	"fretScaling\000"
 10339      5363616C 
 10339      696E6700 
 10340              	.LASF51:
 10341 02c8 70726573 		.ascii	"presetArraySectionState\000"
 10341      65744172 
 10341      72617953 
 10341      65637469 
 10341      6F6E5374 
 10342              	.LASF215:
 10343 02e0 6B6E6F62 		.ascii	"knobs\000"
 10343      7300
 10344              	.LASF144:
 10345 02e6 73797365 		.ascii	"sysexPointer\000"
 10345      78506F69 
 10345      6E746572 
 10345      00
 10346              	.LASF67:
 10347 02f3 6F6D416C 		.ascii	"omAlpha\000"
 10347      70686100 
 10348              	.LASF79:
 10349 02fb 73747269 		.ascii	"stringStartLoc\000"
 10349      6E675374 
 10349      6172744C 
 10349      6F6300
 10350              	.LASF0:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 221


 10351 030a 7369676E 		.ascii	"signed char\000"
 10351      65642063 
 10351      68617200 
 10352              	.LASF14:
 10353 0316 75696E74 		.ascii	"uint8_t\000"
 10353      385F7400 
 10354              	.LASF29:
 10355 031e 776C456E 		.ascii	"wlEndAddr\000"
 10355      64416464 
 10355      7200
 10356              	.LASF130:
 10357 0328 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 10357      63616C6C 
 10357      6261636B 
 10357      4C6F6361 
 10357      6C4D6964 
 10358              	.LASF102:
 10359 0343 73706973 		.ascii	"spis_1_ss\000"
 10359      5F315F73 
 10359      7300
 10360              	.LASF41:
 10361 034d 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 10361      4D5F4545 
 10361      50524F4D 
 10361      5F424144 
 10361      5F444154 
 10362              	.LASF50:
 10363 0363 5F4F4C45 		.ascii	"_OLEDLine\000"
 10363      444C696E 
 10363      6500
 10364              	.LASF158:
 10365 036d 6D617043 		.ascii	"mapCount\000"
 10365      6F756E74 
 10365      00
 10366              	.LASF127:
 10367 0376 74656D70 		.ascii	"tempIntVersion\000"
 10367      496E7456 
 10367      65727369 
 10367      6F6E00
 10368              	.LASF239:
 10369 0385 70656461 		.ascii	"pedalRatios\000"
 10369      6C526174 
 10369      696F7300 
 10370              	.LASF1:
 10371 0391 756E7369 		.ascii	"unsigned char\000"
 10371      676E6564 
 10371      20636861 
 10371      7200
 10372              	.LASF163:
 10373 039f 76616C43 		.ascii	"valCheck\000"
 10373      6865636B 
 10373      00
 10374              	.LASF122:
 10375 03a8 76616C73 		.ascii	"valsStart\000"
 10375      53746172 
 10375      7400
 10376              	.LASF76:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 222


 10377 03b2 636F7065 		.ascii	"coped\000"
 10377      6400
 10378              	.LASF187:
 10379 03b8 72783143 		.ascii	"rx1Channel\000"
 10379      68616E6E 
 10379      656C00
 10380              	.LASF78:
 10381 03c3 70656461 		.ascii	"pedalStartLoc\000"
 10381      6C537461 
 10381      72744C6F 
 10381      6300
 10382              	.LASF199:
 10383 03d1 6E657744 		.ascii	"newDataFlag\000"
 10383      61746146 
 10383      6C616700 
 10384              	.LASF264:
 10385 03dd 73747269 		.ascii	"stringOctave\000"
 10385      6E674F63 
 10385      74617665 
 10385      00
 10386              	.LASF100:
 10387 03ea 5553425F 		.ascii	"USB_service\000"
 10387      73657276 
 10387      69636500 
 10388              	.LASF160:
 10389 03f6 6D617043 		.ascii	"mapCountExpectation\000"
 10389      6F756E74 
 10389      45787065 
 10389      63746174 
 10389      696F6E00 
 10390              	.LASF61:
 10391 040a 74656D70 		.ascii	"tempmax\000"
 10391      6D617800 
 10392              	.LASF121:
 10393 0412 73746F70 		.ascii	"stoppingPoint\000"
 10393      70696E67 
 10393      506F696E 
 10393      7400
 10394              	.LASF68:
 10395 0420 76616C75 		.ascii	"value\000"
 10395      6500
 10396              	.LASF240:
 10397 0426 6C617374 		.ascii	"last_mux\000"
 10397      5F6D7578 
 10397      00
 10398              	.LASF249:
 10399 042f 656E636F 		.ascii	"encoderVal\000"
 10399      64657256 
 10399      616C00
 10400              	.LASF113:
 10401 043a 70726573 		.ascii	"pressure\000"
 10401      73757265 
 10401      00
 10402              	.LASF194:
 10403 0443 70726576 		.ascii	"prevStrings\000"
 10403      53747269 
 10403      6E677300 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 223


 10404              	.LASF24:
 10405 044f 63686172 		.ascii	"char\000"
 10405      00
 10406              	.LASF133:
 10407 0454 65657072 		.ascii	"eepromArray\000"
 10407      6F6D4172 
 10407      72617900 
 10408              	.LASF185:
 10409 0460 63757272 		.ascii	"currentCopedent\000"
 10409      656E7443 
 10409      6F706564 
 10409      656E7400 
 10410              	.LASF182:
 10411 0470 72617741 		.ascii	"rawAngle\000"
 10411      6E676C65 
 10411      00
 10412              	.LASF62:
 10413 0479 4C454146 		.ascii	"LEAF_clip\000"
 10413      5F636C69 
 10413      7000
 10414              	.LASF242:
 10415 0483 6E65636B 		.ascii	"neck\000"
 10415      00
 10416              	.LASF5:
 10417 0488 5F5F7569 		.ascii	"__uint16_t\000"
 10417      6E743136 
 10417      5F7400
 10418              	.LASF99:
 10419 0493 63686563 		.ascii	"checkUSB_Vbus\000"
 10419      6B555342 
 10419      5F566275 
 10419      7300
 10420              	.LASF220:
 10421 04a1 65657072 		.ascii	"eeprom_cnt\000"
 10421      6F6D5F63 
 10421      6E7400
 10422              	.LASF137:
 10423 04ac 5553425F 		.ascii	"USB_midi_out_ep\000"
 10423      6D696469 
 10423      5F6F7574 
 10423      5F657000 
 10424              	.LASF83:
 10425 04bc 74656D70 		.ascii	"tempPedal\000"
 10425      50656461 
 10425      6C00
 10426              	.LASF98:
 10427 04c6 4932435F 		.ascii	"I2C_reset\000"
 10427      72657365 
 10427      7400
 10428              	.LASF250:
 10429 04d0 656E636F 		.ascii	"encoderNum\000"
 10429      6465724E 
 10429      756D00
 10430              	.LASF247:
 10431 04db 6F637431 		.ascii	"oct1Up\000"
 10431      557000
 10432              	.LASF44:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 224


 10433 04e2 75696E74 		.ascii	"uint\000"
 10433      00
 10434              	.LASF184:
 10435 04e7 6D696469 		.ascii	"midiOverflow\000"
 10435      4F766572 
 10435      666C6F77 
 10435      00
 10436              	.LASF112:
 10437 04f4 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 10437      4D494449 
 10437      506F6C79 
 10437      4B657950 
 10437      72657373 
 10438              	.LASF126:
 10439 050c 73747269 		.ascii	"stringChange\000"
 10439      6E674368 
 10439      616E6765 
 10439      00
 10440              	.LASF87:
 10441 0519 636F6D70 		.ascii	"computerMIDIOffset\000"
 10441      75746572 
 10441      4D494449 
 10441      4F666673 
 10441      657400
 10442              	.LASF114:
 10443 052c 73656E64 		.ascii	"sendMIDIControlChange\000"
 10443      4D494449 
 10443      436F6E74 
 10443      726F6C43 
 10443      68616E67 
 10444              	.LASF198:
 10445 0542 73706943 		.ascii	"spiCounter\000"
 10445      6F756E74 
 10445      657200
 10446              	.LASF39:
 10447 054d 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 10447      4D5F4545 
 10447      50524F4D 
 10447      5F424144 
 10447      5F504152 
 10448              	.LASF276:
 10449 0564 73797365 		.ascii	"sysexPointerMask\000"
 10449      78506F69 
 10449      6E746572 
 10449      4D61736B 
 10449      00
 10450              	.LASF52:
 10451 0575 70726573 		.ascii	"presetName\000"
 10451      65744E61 
 10451      6D6500
 10452              	.LASF146:
 10453 0580 70617273 		.ascii	"parsingSysex\000"
 10453      696E6753 
 10453      79736578 
 10453      00
 10454              	.LASF175:
 10455 058d 72657475 		.ascii	"returnedData\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 225


 10455      726E6564 
 10455      44617461 
 10455      00
 10456              	.LASF48:
 10457 059a 466F7572 		.ascii	"FourthLine\000"
 10457      74684C69 
 10457      6E6500
 10458              	.LASF228:
 10459 05a5 766F6C75 		.ascii	"volumePedal\000"
 10459      6D655065 
 10459      64616C00 
 10460              	.LASF191:
 10461 05b1 72784275 		.ascii	"rxBufferPluck\000"
 10461      66666572 
 10461      506C7563 
 10461      6B00
 10462              	.LASF256:
 10463 05bf 636F7065 		.ascii	"copedent\000"
 10463      64656E74 
 10463      00
 10464              	.LASF216:
 10465 05c8 70726576 		.ascii	"prevKnobs\000"
 10465      4B6E6F62 
 10465      7300
 10466              	.LASF211:
 10467 05d2 6D795370 		.ascii	"mySpiCounter\000"
 10467      69436F75 
 10467      6E746572 
 10467      00
 10468              	.LASF154:
 10469 05df 73797365 		.ascii	"sysexMessageInProgress\000"
 10469      784D6573 
 10469      73616765 
 10469      496E5072 
 10469      6F677265 
 10470              	.LASF108:
 10471 05f6 43434576 		.ascii	"CCEvent\000"
 10471      656E7400 
 10472              	.LASF119:
 10473 05fe 70617273 		.ascii	"parseSysex\000"
 10473      65537973 
 10473      657800
 10474              	.LASF279:
 10475 0609 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 10475      73657273 
 10475      5C4A6566 
 10475      66536E79 
 10475      6465725C 
 10476 0637 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 10476      355F656C 
 10476      65637472 
 10476      6F737465 
 10476      656C5F73 
 10477 0669 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 10477      5F50534F 
 10477      43335F35 
 10477      5F546865 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 226


 10477      726D6973 
 10478              	.LASF262:
 10479 0687 696E7653 		.ascii	"invStringMappedPositions\000"
 10479      7472696E 
 10479      674D6170 
 10479      70656450 
 10479      6F736974 
 10480              	.LASF209:
 10481 06a0 696E7075 		.ascii	"inputData\000"
 10481      74446174 
 10481      6100
 10482              	.LASF65:
 10483 06aa 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 10483      5F696E74 
 10483      6572706F 
 10483      6C617469 
 10483      6F6E5F6C 
 10484              	.LASF271:
 10485 06c4 70726576 		.ascii	"prevNotes\000"
 10485      4E6F7465 
 10485      7300
 10486              	.LASF37:
 10487 06ce 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 10487      74635F65 
 10487      6570726F 
 10487      6D5F636F 
 10487      6E746578 
 10488              	.LASF10:
 10489 06e6 6C6F6E67 		.ascii	"long unsigned int\000"
 10489      20756E73 
 10489      69676E65 
 10489      6420696E 
 10489      7400
 10490              	.LASF140:
 10491 06f8 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 10491      4550524F 
 10491      4D5F656D 
 10491      5F456570 
 10491      726F6D53 
 10492              	.LASF219:
 10493 0713 65657072 		.ascii	"eepromReturnValue\000"
 10493      6F6D5265 
 10493      7475726E 
 10493      56616C75 
 10493      6500
 10494              	.LASF95:
 10495 0725 73746174 		.ascii	"status\000"
 10495      757300
 10496              	.LASF223:
 10497 072c 73656E64 		.ascii	"send_it\000"
 10497      5F697400 
 10498              	.LASF173:
 10499 0734 6C696E65 		.ascii	"linearPotValue32Bit\000"
 10499      6172506F 
 10499      7456616C 
 10499      75653332 
 10499      42697400 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 227


 10500              	.LASF111:
 10501 0748 6368616E 		.ascii	"channel\000"
 10501      6E656C00 
 10502              	.LASF91:
 10503 0750 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 10503      4D617374 
 10503      65725772 
 10503      69746542 
 10503      6C6F636B 
 10504              	.LASF179:
 10505 0768 616E676C 		.ascii	"angle\000"
 10505      6500
 10506              	.LASF165:
 10507 076e 6E756D53 		.ascii	"numStrings\000"
 10507      7472696E 
 10507      677300
 10508              	.LASF42:
 10509 0779 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 10509      4D5F4545 
 10509      50524F4D 
 10509      5F575249 
 10509      54455F46 
 10510              	.LASF71:
 10511 0791 6F737461 		.ascii	"ostart\000"
 10511      727400
 10512              	.LASF234:
 10513 0798 63757272 		.ascii	"currentPresetSelection\000"
 10513      656E7450 
 10513      72657365 
 10513      7453656C 
 10513      65637469 
 10514              	.LASF267:
 10515 07af 6F70656E 		.ascii	"openStringMIDI_Int\000"
 10515      53747269 
 10515      6E674D49 
 10515      44495F49 
 10515      6E7400
 10516              	.LASF70:
 10517 07c2 6973746F 		.ascii	"istop\000"
 10517      7000
 10518              	.LASF136:
 10519 07c8 5553425F 		.ascii	"USB_midiInBuffer\000"
 10519      6D696469 
 10519      496E4275 
 10519      66666572 
 10519      00
 10520              	.LASF277:
 10521 07d9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 10521      43313120 
 10521      352E342E 
 10521      31203230 
 10521      31363036 
 10522 080c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 10522      20726576 
 10522      6973696F 
 10522      6E203233 
 10522      37373135 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 228


 10523 083f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 10523      66756E63 
 10523      74696F6E 
 10523      2D736563 
 10523      74696F6E 
 10524              	.LASF109:
 10525 0867 73656E64 		.ascii	"sendMIDINoteOn\000"
 10525      4D494449 
 10525      4E6F7465 
 10525      4F6E00
 10526              	.LASF241:
 10527 0876 6D61696E 		.ascii	"main_counter\000"
 10527      5F636F75 
 10527      6E746572 
 10527      00
 10528              	.LASF45:
 10529 0883 46697273 		.ascii	"FirstLine\000"
 10529      744C696E 
 10529      6500
 10530              	.LASF243:
 10531 088d 6475616C 		.ascii	"dualSlider\000"
 10531      536C6964 
 10531      657200
 10532              	.LASF59:
 10533 0898 72657374 		.ascii	"restartSystemCheck\000"
 10533      61727453 
 10533      79737465 
 10533      6D436865 
 10533      636B00
 10534              	.LASF170:
 10535 08ab 5553425F 		.ascii	"USB_check_flag\000"
 10535      63686563 
 10535      6B5F666C 
 10535      616700
 10536              	.LASF152:
 10537 08ba 6D657373 		.ascii	"messageArraySendCount\000"
 10537      61676541 
 10537      72726179 
 10537      53656E64 
 10537      436F756E 
 10538              	.LASF9:
 10539 08d0 5F5F7569 		.ascii	"__uint32_t\000"
 10539      6E743332 
 10539      5F7400
 10540              	.LASF11:
 10541 08db 6C6F6E67 		.ascii	"long long int\000"
 10541      206C6F6E 
 10541      6720696E 
 10541      7400
 10542              	.LASF174:
 10543 08e9 636F756E 		.ascii	"counter\000"
 10543      74657200 
 10544              	.LASF265:
 10545 08f1 73747269 		.ascii	"stringPitch\000"
 10545      6E675069 
 10545      74636800 
 10546              	.LASF189:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 229


 10547 08fd 72783154 		.ascii	"rx1TD\000"
 10547      4400
 10548              	.LASF81:
 10549 0903 74656D70 		.ascii	"tempIntLow\000"
 10549      496E744C 
 10549      6F7700
 10550              	.LASF60:
 10551 090e 74656D70 		.ascii	"tempmin\000"
 10551      6D696E00 
 10552              	.LASF35:
 10553 0916 626C6F63 		.ascii	"blockingWrite\000"
 10553      6B696E67 
 10553      57726974 
 10553      6500
 10554              	.LASF23:
 10555 0924 646F7562 		.ascii	"double\000"
 10555      6C6500
 10556              	.LASF278:
 10557 092b 6D61696E 		.ascii	"main.c\000"
 10557      2E6300
 10558              	.LASF251:
 10559 0932 62757474 		.ascii	"button1Up\000"
 10559      6F6E3155 
 10559      7000
 10560              	.LASF101:
 10561 093c 6C6F6732 		.ascii	"log2f_approx\000"
 10561      665F6170 
 10561      70726F78 
 10561      00
 10562              	.LASF141:
 10563 0949 49544D5F 		.ascii	"ITM_RxBuffer\000"
 10563      52784275 
 10563      66666572 
 10563      00
 10564              	.LASF72:
 10565 0956 6F73746F 		.ascii	"ostop\000"
 10565      7000
 10566              	.LASF96:
 10567 095c 74696D65 		.ascii	"timeout\000"
 10567      6F757400 
 10568              	.LASF22:
 10569 0964 666C6F61 		.ascii	"float\000"
 10569      7400
 10570              	.LASF230:
 10571 096a 70726576 		.ascii	"prev_processed_pedals\000"
 10571      5F70726F 
 10571      63657373 
 10571      65645F70 
 10571      6564616C 
 10572              	.LASF217:
 10573 0980 53504932 		.ascii	"SPI2started\000"
 10573      73746172 
 10573      74656400 
 10574              	.LASF205:
 10575 098c 63757272 		.ascii	"currentPluckBuffer\000"
 10575      656E7450 
 10575      6C75636B 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 230


 10575      42756666 
 10575      657200
 10576              	.LASF86:
 10577 099f 6261724D 		.ascii	"barMIDI\000"
 10577      49444900 
 10578              	.LASF117:
 10579 09a7 73656E64 		.ascii	"sendMIDIPitchBend\000"
 10579      4D494449 
 10579      50697463 
 10579      6842656E 
 10579      6400
 10580              	.LASF13:
 10581 09b9 756E7369 		.ascii	"unsigned int\000"
 10581      676E6564 
 10581      20696E74 
 10581      00
 10582              	.LASF145:
 10583 09c6 72656365 		.ascii	"receivingSysex\000"
 10583      6976696E 
 10583      67537973 
 10583      657800
 10584              	.LASF131:
 10585 09d5 6361626C 		.ascii	"cable\000"
 10585      6500
 10586              	.LASF58:
 10587 09db 56627573 		.ascii	"Vbus_function\000"
 10587      5F66756E 
 10587      6374696F 
 10587      6E00
 10588              	.LASF105:
 10589 09e9 76656C6F 		.ascii	"velocity\000"
 10589      63697479 
 10589      00
 10590              	.LASF272:
 10591 09f2 63686563 		.ascii	"checkStatus\000"
 10591      6B537461 
 10591      74757300 
 10592              	.LASF25:
 10593 09fe 63797374 		.ascii	"cystatus\000"
 10593      61747573 
 10593      00
 10594              	.LASF214:
 10595 0a07 6261725F 		.ascii	"bar_index\000"
 10595      696E6465 
 10595      7800
 10596              	.LASF104:
 10597 0a11 73747269 		.ascii	"string\000"
 10597      6E6700
 10598              	.LASF212:
 10599 0a18 6F666673 		.ascii	"offsetErrorCount\000"
 10599      65744572 
 10599      726F7243 
 10599      6F756E74 
 10599      00
 10600              	.LASF232:
 10601 0a29 70726F63 		.ascii	"processed_volumePedal\000"
 10601      65737365 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 231


 10601      645F766F 
 10601      6C756D65 
 10601      50656461 
 10602              	.LASF84:
 10603 0a3f 74656D70 		.ascii	"tempMIDI\000"
 10603      4D494449 
 10603      00
 10604              	.LASF192:
 10605 0a48 72784275 		.ascii	"rxBufferBar\000"
 10605      66666572 
 10605      42617200 
 10606              	.LASF229:
 10607 0a54 70726F63 		.ascii	"processed_pedals\000"
 10607      65737365 
 10607      645F7065 
 10607      64616C73 
 10607      00
 10608              	.LASF260:
 10609 0a65 6F70656E 		.ascii	"openStringFrequencies\000"
 10609      53747269 
 10609      6E674672 
 10609      65717565 
 10609      6E636965 
 10610              	.LASF180:
 10611 0a7b 70726576 		.ascii	"prevAngle\000"
 10611      416E676C 
 10611      6500
 10612              	.LASF201:
 10613 0a85 706C7563 		.ascii	"pluck_index\000"
 10613      6B5F696E 
 10613      64657800 
 10614              	.LASF27:
 10615 0a91 6C6F6E67 		.ascii	"long double\000"
 10615      20646F75 
 10615      626C6500 
 10616              	.LASF97:
 10617 0a9d 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 10617      4D617374 
 10617      65725265 
 10617      6164426C 
 10617      6F636B69 
 10618              	.LASF206:
 10619 0ab4 63757272 		.ascii	"currentBarBuffer\000"
 10619      656E7442 
 10619      61724275 
 10619      66666572 
 10619      00
 10620              	.LASF181:
 10621 0ac5 4144435F 		.ascii	"ADC_values\000"
 10621      76616C75 
 10621      657300
 10622              	.LASF64:
 10623 0ad0 66746F6D 		.ascii	"ftom\000"
 10623      00
 10624              	.LASF244:
 10625 0ad5 656E7465 		.ascii	"enterUp\000"
 10625      72557000 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 232


 10626              	.LASF208:
 10627 0add 53504931 		.ascii	"SPI1ErrorCount\000"
 10627      4572726F 
 10627      72436F75 
 10627      6E7400
 10628              	.LASF183:
 10629 0aec 6D696469 		.ascii	"midiSent\000"
 10629      53656E74 
 10629      00
 10630              	.LASF132:
 10631 0af5 6D696469 		.ascii	"midiMsg\000"
 10631      4D736700 
 10632              	.LASF270:
 10633 0afd 63757272 		.ascii	"currentNeck\000"
 10633      656E744E 
 10633      65636B00 
 10634              	.LASF12:
 10635 0b09 6C6F6E67 		.ascii	"long long unsigned int\000"
 10635      206C6F6E 
 10635      6720756E 
 10635      7369676E 
 10635      65642069 
 10636              	.LASF16:
 10637 0b20 75696E74 		.ascii	"uint16_t\000"
 10637      31365F74 
 10637      00
 10638              	.LASF128:
 10639 0b29 74656D70 		.ascii	"tempHigh\000"
 10639      48696768 
 10639      00
 10640              	.LASF164:
 10641 0b32 74657374 		.ascii	"testVal\000"
 10641      56616C00 
 10642              	.LASF190:
 10643 0b3a 72783254 		.ascii	"rx2TD\000"
 10643      4400
 10644              	.LASF280:
 10645 0b40 62726561 		.ascii	"breakFloat\000"
 10645      6B466C6F 
 10645      617400
 10646              	.LASF273:
 10647 0b4b 63686563 		.ascii	"checkBase\000"
 10647      6B426173 
 10647      6500
 10648              	.LASF57:
 10649 0b55 73706973 		.ascii	"spis_2_ss\000"
 10649      5F325F73 
 10649      7300
 10650              	.LASF252:
 10651 0b5f 62757474 		.ascii	"button2Up\000"
 10651      6F6E3255 
 10651      7000
 10652              	.LASF197:
 10653 0b69 616D4865 		.ascii	"amHere\000"
 10653      726500
 10654              	.LASF218:
 10655 0b70 61727261 		.ascii	"array\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 233


 10655      7900
 10656              	.LASF89:
 10657 0b76 7363616C 		.ascii	"scaledMIDI\000"
 10657      65644D49 
 10657      444900
 10658              	.LASF26:
 10659 0b81 72656738 		.ascii	"reg8\000"
 10659      00
 10660              	.LASF149:
 10661 0b86 636F7065 		.ascii	"copedentNumberToWrite\000"
 10661      64656E74 
 10661      4E756D62 
 10661      6572546F 
 10661      57726974 
 10662              	.LASF54:
 10663 0b9c 6D617043 		.ascii	"mapCountNext\000"
 10663      6F756E74 
 10663      4E657874 
 10663      00
 10664              	.LASF203:
 10665 0ba9 73706943 		.ascii	"spiCounter2\000"
 10665      6F756E74 
 10665      65723200 
 10666              	.LASF106:
 10667 0bb5 74656D70 		.ascii	"tempVel\000"
 10667      56656C00 
 10668              	.LASF166:
 10669 0bbd 75736241 		.ascii	"usbActivityCounter\000"
 10669      63746976 
 10669      69747943 
 10669      6F756E74 
 10669      657200
 10670              	.LASF227:
 10671 0bd0 64656164 		.ascii	"deadzone\000"
 10671      7A6F6E65 
 10671      00
 10672              	.LASF162:
 10673 0bd9 70617273 		.ascii	"parseThatMF\000"
 10673      65546861 
 10673      744D4600 
 10674              	.LASF3:
 10675 0be5 5F5F696E 		.ascii	"__int16_t\000"
 10675      7431365F 
 10675      7400
 10676              	.LASF53:
 10677 0bef 696E6974 		.ascii	"initialVals\000"
 10677      69616C56 
 10677      616C7300 
 10678              	.LASF169:
 10679 0bfb 5553425F 		.ascii	"USB_active\000"
 10679      61637469 
 10679      766500
 10680              	.LASF274:
 10681 0c06 5350495F 		.ascii	"SPI_errors\000"
 10681      6572726F 
 10681      727300
 10682              	.LASF143:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 234


 10683 0c11 73797365 		.ascii	"sysexBuffer\000"
 10683      78427566 
 10683      66657200 
 10684              	.LASF155:
 10685 0c1d 62756643 		.ascii	"bufCount\000"
 10685      6F756E74 
 10685      00
 10686              	.LASF207:
 10687 0c26 706C7563 		.ascii	"pluckErrorCount\000"
 10687      6B457272 
 10687      6F72436F 
 10687      756E7400 
 10688              	.LASF124:
 10689 0c36 74656D70 		.ascii	"tempChar\000"
 10689      43686172 
 10689      00
 10690              	.LASF268:
 10691 0c3f 4F4C4544 		.ascii	"OLEDcount\000"
 10691      636F756E 
 10691      7400
 10692              	.LASF255:
 10693 0c49 70617463 		.ascii	"patchNum\000"
 10693      684E756D 
 10693      00
 10694              	.LASF269:
 10695 0c52 70656461 		.ascii	"pedals_float\000"
 10695      6C735F66 
 10695      6C6F6174 
 10695      00
 10696              	.LASF19:
 10697 0c5f 75696E74 		.ascii	"uint8\000"
 10697      3800
 10698              	.LASF225:
 10699 0c65 70656461 		.ascii	"pedals_low\000"
 10699      6C735F6C 
 10699      6F7700
 10700              	.LASF88:
 10701 0c70 70697463 		.ascii	"pitchBendAmount\000"
 10701      6842656E 
 10701      64416D6F 
 10701      756E7400 
 10702              	.LASF200:
 10703 0c80 70726576 		.ascii	"prevOctave\000"
 10703      4F637461 
 10703      766500
 10704              	.LASF4:
 10705 0c8b 73686F72 		.ascii	"short int\000"
 10705      7420696E 
 10705      7400
 10706              	.LASF153:
 10707 0c95 6D657373 		.ascii	"messageArraySize\000"
 10707      61676541 
 10707      72726179 
 10707      53697A65 
 10707      00
 10708              	.LASF233:
 10709 0ca6 66726574 		.ascii	"fretMeasurements\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 235


 10709      4D656173 
 10709      7572656D 
 10709      656E7473 
 10709      00
 10710              	.LASF94:
 10711 0cb7 6D6F6465 		.ascii	"mode\000"
 10711      00
 10712              	.LASF266:
 10713 0cbc 73747269 		.ascii	"stringMIDI\000"
 10713      6E674D49 
 10713      444900
 10714              	.LASF85:
 10715 0cc7 6F70656E 		.ascii	"openStringMIDI\000"
 10715      53747269 
 10715      6E674D49 
 10715      444900
 10716              	.LASF15:
 10717 0cd6 696E7431 		.ascii	"int16_t\000"
 10717      365F7400 
 10718              	.LASF125:
 10719 0cde 70656461 		.ascii	"pedalToWrite\000"
 10719      6C546F57 
 10719      72697465 
 10719      00
 10720              	.LASF32:
 10721 0ceb 65657072 		.ascii	"eepromSize\000"
 10721      6F6D5369 
 10721      7A6500
 10722              	.LASF202:
 10723 0cf6 616D4865 		.ascii	"amHere2\000"
 10723      72653200 
 10724              	.LASF261:
 10725 0cfe 73747269 		.ascii	"stringMappedPositions\000"
 10725      6E674D61 
 10725      70706564 
 10725      506F7369 
 10725      74696F6E 
 10726              	.LASF177:
 10727 0d14 70726576 		.ascii	"previousButtons\000"
 10727      696F7573 
 10727      42757474 
 10727      6F6E7300 
 10728              	.LASF33:
 10729 0d24 77656172 		.ascii	"wearLevelingFactor\000"
 10729      4C657665 
 10729      6C696E67 
 10729      46616374 
 10729      6F7200
 10730              	.LASF134:
 10731 0d37 5553425F 		.ascii	"USB_midiInPointer\000"
 10731      6D696469 
 10731      496E506F 
 10731      696E7465 
 10731      7200
 10732              	.LASF92:
 10733 0d49 69324341 		.ascii	"i2CAddr\000"
 10733      64647200 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 236


 10734              	.LASF196:
 10735 0d51 6D617853 		.ascii	"maxStrings\000"
 10735      7472696E 
 10735      677300
 10736              	.LASF77:
 10737 0d5c 6C657474 		.ascii	"letter\000"
 10737      657200
 10738              	.LASF138:
 10739 0d63 5553425F 		.ascii	"USB_midiOutBuffer\000"
 10739      6D696469 
 10739      4F757442 
 10739      75666665 
 10739      7200
 10740              	.LASF210:
 10741 0d75 73706941 		.ascii	"spiAdjusted\000"
 10741      646A7573 
 10741      74656400 
 10742              	.LASF188:
 10743 0d81 72783243 		.ascii	"rx2Channel\000"
 10743      68616E6E 
 10743      656C00
 10744              	.LASF135:
 10745 0d8c 5553425F 		.ascii	"USB_midi_in_ep\000"
 10745      6D696469 
 10745      5F696E5F 
 10745      657000
 10746              	.LASF90:
 10747 0d9b 446D6152 		.ascii	"DmaRxConfiguration\000"
 10747      78436F6E 
 10747      66696775 
 10747      72617469 
 10747      6F6E00
 10748              	.LASF18:
 10749 0dae 75696E74 		.ascii	"uint32_t\000"
 10749      33325F74 
 10749      00
 10750              	.LASF254:
 10751 0db7 62757474 		.ascii	"button4Up\000"
 10751      6F6E3455 
 10751      7000
 10752              	.LASF168:
 10753 0dc1 70726576 		.ascii	"prevVBUS\000"
 10753      56425553 
 10753      00
 10754              	.LASF167:
 10755 0dca 63757272 		.ascii	"currentVBUS\000"
 10755      656E7456 
 10755      42555300 
 10756              	.LASF248:
 10757 0dd6 6F637434 		.ascii	"oct4Up\000"
 10757      557000
 10758              	.LASF253:
 10759 0ddd 62757474 		.ascii	"button3Up\000"
 10759      6F6E3355 
 10759      7000
 10760              	.LASF6:
 10761 0de7 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 237


 10761      7420756E 
 10761      7369676E 
 10761      65642069 
 10761      6E7400
 10762              	.LASF55:
 10763 0dfa 6D617070 		.ascii	"mapping\000"
 10763      696E6700 
 10764              	.LASF107:
 10765 0e02 6E6F7465 		.ascii	"noteToSend\000"
 10765      546F5365 
 10765      6E6400
 10766              	.LASF7:
 10767 0e0d 5F5F696E 		.ascii	"__int32_t\000"
 10767      7433325F 
 10767      7400
 10768              	.LASF195:
 10769 0e17 70726576 		.ascii	"prevBar\000"
 10769      42617200 
 10770              	.LASF172:
 10771 0e1f 6D79496E 		.ascii	"myInputArray\000"
 10771      70757441 
 10771      72726179 
 10771      00
 10772              	.LASF63:
 10773 0e2c 6D746F66 		.ascii	"mtof\000"
 10773      00
 10774              	.LASF259:
 10775 0e31 70656461 		.ascii	"pedals\000"
 10775      6C7300
 10776              	.LASF80:
 10777 0e38 74656D70 		.ascii	"tempIntHigh\000"
 10777      496E7448 
 10777      69676800 
 10778              	.LASF246:
 10779 0e44 65646974 		.ascii	"editUp\000"
 10779      557000
 10780              	.LASF31:
 10781 0e4b 6C617374 		.ascii	"lastWrRowAddr\000"
 10781      5772526F 
 10781      77416464 
 10781      7200
 10782              	.LASF74:
 10783 0e59 6D794172 		.ascii	"myArrayCounter\000"
 10783      72617943 
 10783      6F756E74 
 10783      657200
 10784              	.LASF263:
 10785 0e68 73747269 		.ascii	"stringFrequencies\000"
 10785      6E674672 
 10785      65717565 
 10785      6E636965 
 10785      7300
 10786              	.LASF20:
 10787 0e7a 75696E74 		.ascii	"uint16\000"
 10787      313600
 10788              	.LASF171:
 10789 0e81 6D794172 		.ascii	"myArray\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccmLEwv1.s 			page 238


 10789      72617900 
 10790              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
