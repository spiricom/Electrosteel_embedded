ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.comm	sysexBuffer,2048,4
  21              		.global	sysexPointer
  22              		.bss
  23              		.align	2
  24              		.type	sysexPointer, %object
  25              		.size	sysexPointer, 4
  26              	sysexPointer:
  27 0000 00000000 		.space	4
  28              		.global	receivingSysex
  29              		.type	receivingSysex, %object
  30              		.size	receivingSysex, 1
  31              	receivingSysex:
  32 0004 00       		.space	1
  33              		.global	parsingSysex
  34              		.type	parsingSysex, %object
  35              		.size	parsingSysex, 1
  36              	parsingSysex:
  37 0005 00       		.space	1
  38              		.comm	presetArray,2048,4
  39              		.global	presetNumberToWrite
  40              		.type	presetNumberToWrite, %object
  41              		.size	presetNumberToWrite, 1
  42              	presetNumberToWrite:
  43 0006 00       		.space	1
  44              		.global	copedentNumberToWrite
  45              		.type	copedentNumberToWrite, %object
  46              		.size	copedentNumberToWrite, 1
  47              	copedentNumberToWrite:
  48 0007 00       		.space	1
  49              		.global	sendMessageEnd
  50              		.type	sendMessageEnd, %object
  51              		.size	sendMessageEnd, 1
  52              	sendMessageEnd:
  53 0008 00       		.space	1
  54              		.global	sendSingleParamUpdate
  55              		.type	sendSingleParamUpdate, %object
  56              		.size	sendSingleParamUpdate, 1
  57              	sendSingleParamUpdate:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 2


  58 0009 00       		.space	1
  59              		.global	singleParamToUpdateHigh
  60              		.type	singleParamToUpdateHigh, %object
  61              		.size	singleParamToUpdateHigh, 1
  62              	singleParamToUpdateHigh:
  63 000a 00       		.space	1
  64              		.global	singleParamToUpdateLow
  65              		.type	singleParamToUpdateLow, %object
  66              		.size	singleParamToUpdateLow, 1
  67              	singleParamToUpdateLow:
  68 000b 00       		.space	1
  69              		.global	singleParamValueHigh
  70              		.type	singleParamValueHigh, %object
  71              		.size	singleParamValueHigh, 1
  72              	singleParamValueHigh:
  73 000c 00       		.space	1
  74              		.global	singleParamValueLow
  75              		.type	singleParamValueLow, %object
  76              		.size	singleParamValueLow, 1
  77              	singleParamValueLow:
  78 000d 00       		.space	1
  79              		.global	sendMappingChangeUpdate
  80              		.type	sendMappingChangeUpdate, %object
  81              		.size	sendMappingChangeUpdate, 1
  82              	sendMappingChangeUpdate:
  83 000e 00       		.space	1
  84              		.global	transposeSemitones
  85              		.type	transposeSemitones, %object
  86              		.size	transposeSemitones, 1
  87              	transposeSemitones:
  88 000f 00       		.space	1
  89              		.global	transposeCents
  90              		.type	transposeCents, %object
  91              		.size	transposeCents, 1
  92              	transposeCents:
  93 0010 00       		.space	1
  94              		.global	transposeFloat
  95 0011 000000   		.align	2
  96              		.type	transposeFloat, %object
  97              		.size	transposeFloat, 4
  98              	transposeFloat:
  99 0014 00000000 		.space	4
 100              		.global	midiSendOn
 101              		.type	midiSendOn, %object
 102              		.size	midiSendOn, 1
 103              	midiSendOn:
 104 0018 00       		.space	1
 105              		.global	midiBarSendOn
 106              		.type	midiBarSendOn, %object
 107              		.size	midiBarSendOn, 1
 108              	midiBarSendOn:
 109 0019 00       		.space	1
 110              		.global	pitchSmoothing
 111              		.type	pitchSmoothing, %object
 112              		.size	pitchSmoothing, 1
 113              	pitchSmoothing:
 114 001a 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 3


 115              		.global	controlSmoothing
 116              		.type	controlSmoothing, %object
 117              		.size	controlSmoothing, 1
 118              	controlSmoothing:
 119 001b 00       		.space	1
 120              		.global	octaveAction
 121              		.type	octaveAction, %object
 122              		.size	octaveAction, 1
 123              	octaveAction:
 124 001c 00       		.space	1
 125              		.global	stringRepresentation
 126              		.data
 127              		.align	2
 128              		.type	stringRepresentation, %object
 129              		.size	stringRepresentation, 2
 130              	stringRepresentation:
 131 0000 03       		.byte	3
 132 0001 08       		.byte	8
 133              		.global	presetArraySection
 134              		.bss
 135              		.type	presetArraySection, %object
 136              		.size	presetArraySection, 1
 137              	presetArraySection:
 138 001d 00       		.space	1
 139              		.global	messageArraySendCount
 140              		.align	1
 141              		.type	messageArraySendCount, %object
 142              		.size	messageArraySendCount, 2
 143              	messageArraySendCount:
 144 001e 0000     		.space	2
 145              		.global	messageArraySize
 146              		.align	1
 147              		.type	messageArraySize, %object
 148              		.size	messageArraySize, 2
 149              	messageArraySize:
 150 0020 0000     		.space	2
 151              		.global	sysexMessageInProgress
 152              		.type	sysexMessageInProgress, %object
 153              		.size	sysexMessageInProgress, 1
 154              	sysexMessageInProgress:
 155 0022 00       		.space	1
 156              		.global	bufCount
 157              		.type	bufCount, %object
 158              		.size	bufCount, 1
 159              	bufCount:
 160 0023 00       		.space	1
 161              		.global	sendingMessage
 162              		.type	sendingMessage, %object
 163              		.size	sendingMessage, 1
 164              	sendingMessage:
 165 0024 00       		.space	1
 166              		.global	sendKnobs
 167              		.type	sendKnobs, %object
 168              		.size	sendKnobs, 1
 169              	sendKnobs:
 170 0025 00       		.space	1
 171              		.global	currentFloat
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 4


 172 0026 0000     		.align	2
 173              		.type	currentFloat, %object
 174              		.size	currentFloat, 4
 175              	currentFloat:
 176 0028 00000000 		.space	4
 177              		.global	mapCount
 178              		.align	2
 179              		.type	mapCount, %object
 180              		.size	mapCount, 4
 181              	mapCount:
 182 002c 00000000 		.space	4
 183              		.global	valsCount
 184              		.align	1
 185              		.type	valsCount, %object
 186              		.size	valsCount, 2
 187              	valsCount:
 188 0030 0000     		.space	2
 189              		.global	mapCountExpectation
 190              		.align	1
 191              		.type	mapCountExpectation, %object
 192              		.size	mapCountExpectation, 2
 193              	mapCountExpectation:
 194 0032 0000     		.space	2
 195              		.global	numMappings
 196              		.align	1
 197              		.type	numMappings, %object
 198              		.size	numMappings, 2
 199              	numMappings:
 200 0034 0000     		.space	2
 201              		.global	parseThatMF
 202              		.type	parseThatMF, %object
 203              		.size	parseThatMF, 1
 204              	parseThatMF:
 205 0036 00       		.space	1
 206              		.global	valCheck
 207 0037 00       		.align	2
 208              		.type	valCheck, %object
 209              		.size	valCheck, 4
 210              	valCheck:
 211 0038 00000000 		.space	4
 212              		.global	testVal
 213              		.align	2
 214              		.type	testVal, %object
 215              		.size	testVal, 4
 216              	testVal:
 217 003c 00000000 		.space	4
 218              		.global	numStrings
 219              		.data
 220              		.type	numStrings, %object
 221              		.size	numStrings, 1
 222              	numStrings:
 223 0002 0A       		.byte	10
 224              		.global	usbActivityCounter
 225              		.bss
 226              		.type	usbActivityCounter, %object
 227              		.size	usbActivityCounter, 1
 228              	usbActivityCounter:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 5


 229 0040 00       		.space	1
 230              		.comm	midiMsg,4,4
 231              		.global	currentVBUS
 232              		.type	currentVBUS, %object
 233              		.size	currentVBUS, 1
 234              	currentVBUS:
 235 0041 00       		.space	1
 236              		.global	prevVBUS
 237              		.type	prevVBUS, %object
 238              		.size	prevVBUS, 1
 239              	prevVBUS:
 240 0042 00       		.space	1
 241              		.global	USB_active
 242              		.type	USB_active, %object
 243              		.size	USB_active, 1
 244              	USB_active:
 245 0043 00       		.space	1
 246              		.global	USB_check_flag
 247              		.type	USB_check_flag, %object
 248              		.size	USB_check_flag, 1
 249              	USB_check_flag:
 250 0044 00       		.space	1
 251              		.comm	mappingArray,6,4
 252              		.comm	inBuffer,32,4
 253              		.comm	myArray,32,4
 254              		.comm	returnedData,32,4
 255              		.global	octave
 256              		.data
 257 0003 00       		.align	2
 258              		.type	octave, %object
 259              		.size	octave, 4
 260              	octave:
 261 0004 05000000 		.word	5
 262              		.comm	angle,20,4
 263              		.comm	prevAngle,20,4
 264              		.comm	ADC_values,8,4
 265              		.global	rawAngle
 266              		.bss
 267 0045 00       		.align	1
 268              		.type	rawAngle, %object
 269              		.size	rawAngle, 2
 270              	rawAngle:
 271 0046 0000     		.space	2
 272              		.global	midiSent
 273              		.align	1
 274              		.type	midiSent, %object
 275              		.size	midiSent, 2
 276              	midiSent:
 277 0048 0000     		.space	2
 278              		.global	midiOverflow
 279              		.align	1
 280              		.type	midiOverflow, %object
 281              		.size	midiOverflow, 2
 282              	midiOverflow:
 283 004a 0000     		.space	2
 284              		.comm	macroKnobValues,8,4
 285              		.global	currentCopedent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 6


 286              		.type	currentCopedent, %object
 287              		.size	currentCopedent, 1
 288              	currentCopedent:
 289 004c 00       		.space	1
 290              		.global	necks
 291              		.data
 292              		.align	2
 293              		.type	necks, %object
 294              		.size	necks, 2
 295              	necks:
 296 0008 00       		.byte	0
 297 0009 01       		.byte	1
 298              		.comm	rx1Channel,1,1
 299              		.comm	rx2Channel,1,32
 300              		.comm	rx1TD,2,4
 301              		.comm	rx2TD,2,32
 302              		.comm	txChannel,1,32
 303              		.comm	txTD,1,32
 304              		.comm	rx3Channel,1,32
 305              		.comm	rx3TD,1,32
 306              		.comm	rxBufferPluck,52,32
 307              		.comm	rxBufferBar,16,32
 308              		.comm	strings,24,4
 309              		.comm	prevStrings,24,4
 310              		.comm	bar,4,4
 311              		.comm	prevBar,4,4
 312              		.comm	maxStrings,24,4
 313              		.global	amHere
 314              		.bss
 315              		.type	amHere, %object
 316              		.size	amHere, 1
 317              	amHere:
 318 004d 00       		.space	1
 319              		.global	spiCounter
 320              		.type	spiCounter, %object
 321              		.size	spiCounter, 1
 322              	spiCounter:
 323 004e 00       		.space	1
 324              		.global	newDataFlag
 325              		.type	newDataFlag, %object
 326              		.size	newDataFlag, 1
 327              	newDataFlag:
 328 004f 00       		.space	1
 329              		.global	prevOctave
 330              		.align	2
 331              		.type	prevOctave, %object
 332              		.size	prevOctave, 4
 333              	prevOctave:
 334 0050 00000000 		.space	4
 335              		.global	pluck_index
 336              		.type	pluck_index, %object
 337              		.size	pluck_index, 1
 338              	pluck_index:
 339 0054 00       		.space	1
 340              		.global	amHere2
 341              		.type	amHere2, %object
 342              		.size	amHere2, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 7


 343              	amHere2:
 344 0055 00       		.space	1
 345              		.global	spiCounter2
 346              		.type	spiCounter2, %object
 347              		.size	spiCounter2, 1
 348              	spiCounter2:
 349 0056 00       		.space	1
 350              		.global	newDataFlag2
 351              		.type	newDataFlag2, %object
 352              		.size	newDataFlag2, 1
 353              	newDataFlag2:
 354 0057 00       		.space	1
 355              		.global	currentPluckBuffer
 356              		.type	currentPluckBuffer, %object
 357              		.size	currentPluckBuffer, 1
 358              	currentPluckBuffer:
 359 0058 00       		.space	1
 360              		.global	currentBarBuffer
 361              		.type	currentBarBuffer, %object
 362              		.size	currentBarBuffer, 1
 363              	currentBarBuffer:
 364 0059 00       		.space	1
 365              		.global	pluckErrorCount
 366              		.type	pluckErrorCount, %object
 367              		.size	pluckErrorCount, 1
 368              	pluckErrorCount:
 369 005a 00       		.space	1
 370              		.global	SPI1ErrorCount
 371 005b 00       		.align	1
 372              		.type	SPI1ErrorCount, %object
 373              		.size	SPI1ErrorCount, 2
 374              	SPI1ErrorCount:
 375 005c 0000     		.space	2
 376              		.global	inputData
 377              		.type	inputData, %object
 378              		.size	inputData, 1
 379              	inputData:
 380 005e 00       		.space	1
 381              		.global	spiAdjusted
 382              		.type	spiAdjusted, %object
 383              		.size	spiAdjusted, 1
 384              	spiAdjusted:
 385 005f 00       		.space	1
 386              		.global	mySpiCounter
 387              		.type	mySpiCounter, %object
 388              		.size	mySpiCounter, 1
 389              	mySpiCounter:
 390 0060 00       		.space	1
 391              		.global	offsetErrorCount
 392 0061 00       		.align	1
 393              		.type	offsetErrorCount, %object
 394              		.size	offsetErrorCount, 2
 395              	offsetErrorCount:
 396 0062 0000     		.space	2
 397              		.global	SPI2errorflag
 398              		.type	SPI2errorflag, %object
 399              		.size	SPI2errorflag, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 8


 400              	SPI2errorflag:
 401 0064 00       		.space	1
 402              		.comm	knobs,4,4
 403              		.comm	prevKnobs,4,4
 404              		.comm	knobs7bit,4,4
 405              		.comm	prevKnobs7bit,4,4
 406              		.global	u7bit_volumePedal
 407              		.type	u7bit_volumePedal, %object
 408              		.size	u7bit_volumePedal, 1
 409              	u7bit_volumePedal:
 410 0065 00       		.space	1
 411              		.global	prev_7bit_volumePedal
 412              		.type	prev_7bit_volumePedal, %object
 413              		.size	prev_7bit_volumePedal, 1
 414              	prev_7bit_volumePedal:
 415 0066 00       		.space	1
 416              		.global	SPI2started
 417              		.type	SPI2started, %object
 418              		.size	SPI2started, 1
 419              	SPI2started:
 420 0067 00       		.space	1
 421              		.global	whichMacro
 422              		.type	whichMacro, %object
 423              		.size	whichMacro, 1
 424              	whichMacro:
 425 0068 00       		.space	1
 426              		.comm	macroKnobValues7bit,8,4
 427              		.comm	prevMacroKnobValues7bit,8,4
 428 0069 000000   		.align	2
 429              	eepromArray:
 430 006c 0000     		.space	2
 431              		.global	array
 432 006e 0000     		.align	2
 433              		.type	array, %object
 434              		.size	array, 2
 435              	array:
 436 0070 0000     		.space	2
 437              		.comm	eepromReturnValue,1,1
 438              		.global	Em_EEPROM_em_EepromStorage
 439              		.section	.rodata
 440              		.align	8
 441              		.type	Em_EEPROM_em_EepromStorage, %object
 442              		.size	Em_EEPROM_em_EepromStorage, 1024
 443              	Em_EEPROM_em_EepromStorage:
 444 0000 00000000 		.space	1024
 444      00000000 
 444      00000000 
 444      00000000 
 444      00000000 
 445              		.comm	eeprom_cnt,1,1
 446              		.comm	status,4,4
 447              		.comm	ptr,4,4
 448              		.global	barCount
 449              		.bss
 450 0072 0000     		.align	2
 451              		.type	barCount, %object
 452              		.size	barCount, 4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 9


 453              	barCount:
 454 0074 00000000 		.space	4
 455              		.comm	I2Cbuff1,256,4
 456              		.comm	I2Cbuff2,16,4
 457              		.global	send_it
 458              		.type	send_it, %object
 459              		.size	send_it, 1
 460              	send_it:
 461 0078 00       		.space	1
 462              		.global	mux_states
 463              		.data
 464 000a 0000     		.align	2
 465              		.type	mux_states, %object
 466              		.size	mux_states, 24
 467              	mux_states:
 468 000c 05       		.byte	5
 469 000d 00       		.byte	0
 470 000e 05       		.byte	5
 471 000f 01       		.byte	1
 472 0010 05       		.byte	5
 473 0011 02       		.byte	2
 474 0012 05       		.byte	5
 475 0013 03       		.byte	3
 476 0014 05       		.byte	5
 477 0015 04       		.byte	4
 478 0016 00       		.byte	0
 479 0017 00       		.byte	0
 480 0018 01       		.byte	1
 481 0019 00       		.byte	0
 482 001a 03       		.byte	3
 483 001b 00       		.byte	0
 484 001c 04       		.byte	4
 485 001d 00       		.byte	0
 486 001e 02       		.byte	2
 487 001f 00       		.byte	0
 488 0020 05       		.byte	5
 489 0021 05       		.byte	5
 490 0022 06       		.byte	6
 491 0023 00       		.byte	0
 492              		.global	i2c_skipped
 493              		.bss
 494 0079 000000   		.align	2
 495              		.type	i2c_skipped, %object
 496              		.size	i2c_skipped, 12
 497              	i2c_skipped:
 498 007c 00000000 		.space	12
 498      00000000 
 498      00000000 
 499              		.global	pedals_low
 500              		.data
 501              		.align	2
 502              		.type	pedals_low, %object
 503              		.size	pedals_low, 20
 504              	pedals_low:
 505 0024 830A     		.short	2691
 506 0026 0109     		.short	2305
 507 0028 9909     		.short	2457
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 10


 508 002a 0E02     		.short	526
 509 002c 9A0E     		.short	3738
 510 002e 0309     		.short	2307
 511 0030 C60B     		.short	3014
 512 0032 8E08     		.short	2190
 513 0034 E90A     		.short	2793
 514 0036 2605     		.short	1318
 515              		.global	pedals_high
 516              		.align	2
 517              		.type	pedals_high, %object
 518              		.size	pedals_high, 20
 519              	pedals_high:
 520 0038 ED0A     		.short	2797
 521 003a 6509     		.short	2405
 522 003c 140A     		.short	2580
 523 003e 8702     		.short	647
 524 0040 0E0F     		.short	3854
 525 0042 9D09     		.short	2461
 526 0044 450C     		.short	3141
 527 0046 3109     		.short	2353
 528 0048 760B     		.short	2934
 529 004a E005     		.short	1504
 530              		.global	pedals_lowWithDeadZone
 531              		.align	2
 532              		.type	pedals_lowWithDeadZone, %object
 533              		.size	pedals_lowWithDeadZone, 20
 534              	pedals_lowWithDeadZone:
 535 004c 830A     		.short	2691
 536 004e 0109     		.short	2305
 537 0050 9909     		.short	2457
 538 0052 0E02     		.short	526
 539 0054 9A0E     		.short	3738
 540 0056 0309     		.short	2307
 541 0058 C60B     		.short	3014
 542 005a 8E08     		.short	2190
 543 005c E90A     		.short	2793
 544 005e 2605     		.short	1318
 545              		.global	pedals_highWithDeadZone
 546              		.align	2
 547              		.type	pedals_highWithDeadZone, %object
 548              		.size	pedals_highWithDeadZone, 20
 549              	pedals_highWithDeadZone:
 550 0060 ED0A     		.short	2797
 551 0062 6509     		.short	2405
 552 0064 140A     		.short	2580
 553 0066 8702     		.short	647
 554 0068 0E0F     		.short	3854
 555 006a 9D09     		.short	2461
 556 006c 450C     		.short	3141
 557 006e 3109     		.short	2353
 558 0070 760B     		.short	2934
 559 0072 E005     		.short	1504
 560              		.global	deadZone
 561              		.type	deadZone, %object
 562              		.size	deadZone, 1
 563              	deadZone:
 564 0074 33       		.byte	51
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 11


 565              		.global	volumePedal
 566 0075 00       		.align	1
 567              		.type	volumePedal, %object
 568              		.size	volumePedal, 2
 569              	volumePedal:
 570 0076 FF0F     		.short	4095
 571              		.comm	processed_pedals,20,4
 572              		.comm	prev_processed_pedals,20,4
 573              		.comm	pedals8bit,10,4
 574              		.comm	pedals7bit,10,4
 575              		.comm	prevPedals7bit,10,4
 576              		.comm	prev_processed_volumePedal,2,2
 577              		.comm	processed_volumePedal,2,2
 578              		.global	sliderBugOn
 579              		.bss
 580              		.type	sliderBugOn, %object
 581              		.size	sliderBugOn, 1
 582              	sliderBugOn:
 583 0088 00       		.space	1
 584              		.comm	fretMeasurements,48,4
 585              		.global	currentPresetSelection
 586              		.type	currentPresetSelection, %object
 587              		.size	currentPresetSelection, 1
 588              	currentPresetSelection:
 589 0089 00       		.space	1
 590              		.comm	presetNamesArray,896,4
 591              		.global	presetNumberToLoad
 592              		.type	presetNumberToLoad, %object
 593              		.size	presetNumberToLoad, 1
 594              	presetNumberToLoad:
 595 008a 00       		.space	1
 596              		.global	presetLoadedResponse
 597              		.data
 598              		.align	2
 599              		.type	presetLoadedResponse, %object
 600              		.size	presetLoadedResponse, 2
 601              	presetLoadedResponse:
 602 0078 FF       		.byte	-1
 603 0079 00       		.byte	0
 604              		.comm	macroNamesArray,7168,4
 605              		.global	fretScalingInMIDI
 606 007a 0000     		.align	2
 607              		.type	fretScalingInMIDI, %object
 608              		.size	fretScalingInMIDI, 48
 609              	fretScalingInMIDI:
 610 007c 00000000 		.word	0
 611 0080 0000803F 		.word	1065353216
 612 0084 00004040 		.word	1077936128
 613 0088 0000A040 		.word	1084227584
 614 008c 0000E040 		.word	1088421888
 615 0090 00001041 		.word	1091567616
 616 0094 00004041 		.word	1094713344
 617 0098 00007041 		.word	1097859072
 618 009c 00008841 		.word	1099431936
 619 00a0 00009841 		.word	1100480512
 620 00a4 0000A841 		.word	1101529088
 621 00a8 0000C041 		.word	1103101952
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 12


 622              		.global	fretScalingInRatios
 623              		.align	2
 624              		.type	fretScalingInRatios, %object
 625              		.size	fretScalingInRatios, 48
 626              	fretScalingInRatios:
 627 00ac 0000803F 		.word	1065353216
 628 00b0 809C873F 		.word	1065852032
 629 00b4 F537983F 		.word	1066940405
 630 00b8 01DCAA3F 		.word	1068162049
 631 00bc 85C8BF3F 		.word	1069533317
 632 00c0 F244D73F 		.word	1071072498
 633 00c4 00000040 		.word	1073741824
 634 00c8 F5371840 		.word	1075329013
 635 00cc 01DC2A40 		.word	1076550657
 636 00d0 85C83F40 		.word	1077921925
 637 00d4 F2445740 		.word	1079461106
 638 00d8 00008040 		.word	1082130432
 639              		.comm	pedalRatios,40,4
 640              		.global	last_mux
 641              		.type	last_mux, %object
 642              		.size	last_mux, 1
 643              	last_mux:
 644 00dc 01       		.byte	1
 645              		.global	main_counter
 646              		.bss
 647              		.type	main_counter, %object
 648              		.size	main_counter, 1
 649              	main_counter:
 650 008b 00       		.space	1
 651              		.global	dualSlider
 652              		.type	dualSlider, %object
 653              		.size	dualSlider, 1
 654              	dualSlider:
 655 008c 00       		.space	1
 656              		.global	voice
 657              		.type	voice, %object
 658              		.size	voice, 1
 659              	voice:
 660 008d 00       		.space	1
 661              		.global	patchNum
 662              		.type	patchNum, %object
 663              		.size	patchNum, 1
 664              	patchNum:
 665 008e 00       		.space	1
 666              		.global	pedal_inverted
 667 008f 00       		.align	2
 668              		.type	pedal_inverted, %object
 669              		.size	pedal_inverted, 10
 670              	pedal_inverted:
 671 0090 00000000 		.space	10
 671      00000000 
 671      0000
 672              		.comm	copedent,3696,4
 673              		.comm	copedentNamesArray,98,4
 674              		.comm	prevStringPitchBend,48,4
 675              		.comm	pedals,480,4
 676              		.global	pedal_cc_assignments
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 13


 677              		.data
 678 00dd 000000   		.align	2
 679              		.type	pedal_cc_assignments, %object
 680              		.size	pedal_cc_assignments, 10
 681              	pedal_cc_assignments:
 682 00e0 00       		.byte	0
 683 00e1 01       		.byte	1
 684 00e2 02       		.byte	2
 685 00e3 03       		.byte	3
 686 00e4 04       		.byte	4
 687 00e5 08       		.byte	8
 688 00e6 09       		.byte	9
 689 00e7 07       		.byte	7
 690 00e8 06       		.byte	6
 691 00e9 05       		.byte	5
 692              		.comm	openStringFrequencies,48,4
 693              		.comm	stringMappedPositionsInRatios,8,4
 694              		.comm	stringMappedPositionsInMIDI,8,4
 695              		.comm	barMidiOuterStrings,4,4
 696              		.comm	stringFrequencies,48,4
 697              		.comm	stringOctave,48,4
 698              		.comm	stringPitch,48,4
 699              		.comm	stringMIDI,48,4
 700              		.comm	openStringMIDI_Int,48,4
 701              		.global	mainOLEDWaitingToSend
 702              		.bss
 703              		.type	mainOLEDWaitingToSend, %object
 704              		.size	mainOLEDWaitingToSend, 1
 705              	mainOLEDWaitingToSend:
 706 009a 00       		.space	1
 707              		.global	macroOLEDWaitingToSend
 708              		.type	macroOLEDWaitingToSend, %object
 709              		.size	macroOLEDWaitingToSend, 1
 710              	macroOLEDWaitingToSend:
 711 009b 00       		.space	1
 712              		.comm	presetAlreadyDisplayed,64,4
 713              		.global	currentNeck
 714              		.type	currentNeck, %object
 715              		.size	currentNeck, 1
 716              	currentNeck:
 717 009c 00       		.space	1
 718              		.global	neckByte
 719              		.type	neckByte, %object
 720              		.size	neckByte, 1
 721              	neckByte:
 722 009d 00       		.space	1
 723              		.global	editMode
 724              		.type	editMode, %object
 725              		.size	editMode, 1
 726              	editMode:
 727 009e 00       		.space	1
 728              		.global	leverCalibrationMode
 729              		.type	leverCalibrationMode, %object
 730              		.size	leverCalibrationMode, 1
 731              	leverCalibrationMode:
 732 009f 00       		.space	1
 733              		.global	fretCalibrationMode
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 14


 734              		.type	fretCalibrationMode, %object
 735              		.size	fretCalibrationMode, 1
 736              	fretCalibrationMode:
 737 00a0 00       		.space	1
 738              		.global	pedals_float
 739 00a1 000000   		.align	2
 740              		.type	pedals_float, %object
 741              		.size	pedals_float, 40
 742              	pedals_float:
 743 00a4 00000000 		.space	40
 743      00000000 
 743      00000000 
 743      00000000 
 743      00000000 
 744              		.global	stringRepDivider
 745              		.data
 746 00ea 0000     		.align	2
 747              		.type	stringRepDivider, %object
 748              		.size	stringRepDivider, 4
 749              	stringRepDivider:
 750 00ec 0000803F 		.word	1065353216
 751              		.global	__aeabi_fsub
 752              		.global	__aeabi_fdiv
 753              		.global	__aeabi_fmul
 754              		.global	__aeabi_fadd
 755              		.section	.text.map,"ax",%progbits
 756              		.align	2
 757              		.global	map
 758              		.thumb
 759              		.thumb_func
 760              		.type	map, %function
 761              	map:
 762              	.LFB64:
 763              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** #include "ui.h"
   9:main.c        **** 
  10:main.c        **** //#define BOOTLOAD_STYLE
  11:main.c        **** 
  12:main.c        **** 
  13:main.c        **** 
  14:main.c        **** uint8_t sysexBuffer[2048];
  15:main.c        **** uint32_t sysexPointer = 0;
  16:main.c        **** uint8_t receivingSysex = 0;
  17:main.c        **** uint8_t parsingSysex = 0;
  18:main.c        **** volatile uint8_t presetArray[2048];
  19:main.c        **** uint8_t presetNumberToWrite = 0;
  20:main.c        **** uint8_t copedentNumberToWrite = 0;
  21:main.c        **** uint8_t sendMessageEnd = 0;
  22:main.c        **** 
  23:main.c        **** uint8_t sendSingleParamUpdate = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 15


  24:main.c        **** uint8_t singleParamToUpdateHigh = 0;
  25:main.c        **** uint8_t singleParamToUpdateLow = 0;
  26:main.c        **** uint8_t singleParamValueHigh = 0;
  27:main.c        **** uint8_t singleParamValueLow = 0;
  28:main.c        ****             
  29:main.c        **** uint8_t sendMappingChangeUpdate = 0;
  30:main.c        ****             
  31:main.c        **** 
  32:main.c        **** int8_t transposeSemitones = 0;
  33:main.c        **** int8_t transposeCents = 0;
  34:main.c        **** float transposeFloat = 0.0f;
  35:main.c        **** uint8_t midiSendOn = 0;
  36:main.c        **** uint8_t midiBarSendOn = 0;
  37:main.c        **** uint8_t pitchSmoothing = 0;
  38:main.c        **** uint8_t controlSmoothing = 0;
  39:main.c        **** uint8_t octaveAction = 0;
  40:main.c        **** uint8_t stringRepresentation[2] = {3,8};
  41:main.c        **** 
  42:main.c        **** uint8_t presetArraySection = presetName;
  43:main.c        **** 
  44:main.c        **** uint16_t messageArraySendCount = 0;
  45:main.c        **** uint16_t messageArraySize = 0;
  46:main.c        **** 
  47:main.c        **** uint8_t sysexMessageInProgress = 0;
  48:main.c        **** 
  49:main.c        **** uint8_t bufCount = 0;
  50:main.c        **** volatile uint8_t sendingMessage = 0;
  51:main.c        **** volatile uint8_t sendKnobs = 0;
  52:main.c        **** uint32_t currentFloat = 0;
  53:main.c        **** uint32_t mapCount = 0;
  54:main.c        **** 
  55:main.c        **** uint16_t valsCount = 0;
  56:main.c        **** uint16_t mapCountExpectation = 0;
  57:main.c        **** uint16_t numMappings = 0;
  58:main.c        **** volatile uint8_t parseThatMF = 0;
  59:main.c        **** volatile float valCheck = 0.0f;
  60:main.c        **** volatile float testVal = 0.0f;
  61:main.c        **** 
  62:main.c        **** uint8_t numStrings = 10;
  63:main.c        **** /*
  64:main.c        **** #define TUNING_ARRAY_SIZE 258
  65:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  66:main.c        **** */
  67:main.c        **** 
  68:main.c        **** volatile uint8_t usbActivityCounter = 0u;
  69:main.c        **** uint8_t midiMsg[4];
  70:main.c        **** uint8_t currentVBUS = 0;
  71:main.c        **** uint8_t prevVBUS = 0;
  72:main.c        **** volatile uint8_t USB_active = 0;
  73:main.c        **** volatile uint8_t USB_check_flag = 0;
  74:main.c        **** 
  75:main.c        **** uint8_t mappingArray[6];
  76:main.c        **** 
  77:main.c        **** uint8_t inBuffer[myBufferSize];
  78:main.c        **** 
  79:main.c        **** uint8_t myArray[myBufferSize];
  80:main.c        **** uint8_t returnedData[myBufferSize];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 16


  81:main.c        **** int octave = 5;
  82:main.c        **** uint16_t angle[NUM_PEDALS];
  83:main.c        **** uint16_t prevAngle[NUM_PEDALS];
  84:main.c        **** 
  85:main.c        **** uint16_t ADC_values[4];
  86:main.c        **** uint16_t rawAngle = 0;
  87:main.c        **** uint16_t midiSent = 0;
  88:main.c        **** uint16_t midiOverflow = 0;
  89:main.c        **** 
  90:main.c        **** uint8_t macroKnobValues[NUM_MACROS];
  91:main.c        **** 
  92:main.c        **** uint8_t currentCopedent = 0;
  93:main.c        **** uint8_t necks[2] = {0,1};
  94:main.c        **** 
  95:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
  96:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
  97:main.c        **** 
  98:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
  99:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 100:main.c        **** 
 101:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 102:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 103:main.c        **** 
 104:main.c        **** 
 105:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 106:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 107:main.c        **** 
 108:main.c        **** volatile uint16_t strings[12];
 109:main.c        **** volatile uint16_t prevStrings[12];
 110:main.c        **** volatile uint16_t bar[2];
 111:main.c        **** volatile uint16_t prevBar[2];
 112:main.c        **** volatile uint16_t maxStrings[12];
 113:main.c        **** volatile uint8_t amHere = 0;
 114:main.c        **** volatile uint8_t spiCounter = 0;
 115:main.c        **** volatile uint8_t newDataFlag = 0;
 116:main.c        **** int prevOctave = 0;
 117:main.c        **** uint8_t pluck_index = 0;
 118:main.c        **** volatile uint8_t amHere2 = 0;
 119:main.c        **** volatile uint8_t spiCounter2 = 0;
 120:main.c        **** volatile uint8_t newDataFlag2 = 0;
 121:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 122:main.c        **** volatile uint8_t currentBarBuffer = 0;
 123:main.c        **** volatile uint8_t pluckErrorCount = 0;
 124:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 125:main.c        **** 
 126:main.c        **** volatile uint8_t inputData = 0;
 127:main.c        **** 
 128:main.c        **** union breakFloat {
 129:main.c        ****  float f;
 130:main.c        ****  uint8_t b[4];  
 131:main.c        ****  uint32_t u32;
 132:main.c        **** };
 133:main.c        **** 
 134:main.c        **** 
 135:main.c        **** uint8_t spiAdjusted = 0;
 136:main.c        **** uint8_t mySpiCounter = 0;
 137:main.c        **** volatile uint16_t offsetErrorCount = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 17


 138:main.c        **** volatile uint8_t SPI2errorflag = 0;
 139:main.c        **** uint8_t knobs[4];
 140:main.c        **** uint8_t prevKnobs[4];
 141:main.c        **** 
 142:main.c        **** uint8_t knobs7bit[4];
 143:main.c        **** uint8_t prevKnobs7bit[4];
 144:main.c        **** 
 145:main.c        **** uint8_t u7bit_volumePedal = 0;
 146:main.c        **** uint8_t prev_7bit_volumePedal = 0;
 147:main.c        **** volatile uint8_t SPI2started = 0;
 148:main.c        **** 
 149:main.c        **** uint8_t whichMacro = 0;
 150:main.c        **** 
 151:main.c        **** uint8_t macroKnobValues7bit[8];
 152:main.c        **** uint8_t prevMacroKnobValues7bit[8];
 153:main.c        **** 
 154:main.c        **** static uint8 CYCODE eepromArray[]={ 0, 0 };
 155:main.c        ****                                             
 156:main.c        **** uint8 array[] ={ 0, 0 };
 157:main.c        ****                                 
 158:main.c        ****     /*Return status for EEPROM and UART*/ 
 159:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 160:main.c        **** 
 161:main.c        **** 
 162:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 163:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] __ALIGNED(CY_FLASH_SIZEOF_ROW) = 
 164:main.c        **** 
 165:main.c        **** 
 166:main.c        **** uint8 eeprom_cnt;
 167:main.c        **** cystatus status;
 168:main.c        **** volatile const uint8 * ptr;
 169:main.c        **** volatile int barCount = 0;
 170:main.c        **** 
 171:main.c        **** 
 172:main.c        ****     
 173:main.c        **** volatile uint8_t I2Cbuff1[256];
 174:main.c        **** volatile uint8_t I2Cbuff2[16];
 175:main.c        **** volatile uint8_t send_it = 0;
 176:main.c        **** 
 177:main.c        **** //first mux, 0x70 is first element of array. 
 178:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 179:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 180:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 181:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 182:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,0,0,0,0,0}; //so that pedals and levers can be marked as s
 183:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 184:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 185:main.c        **** uint16_t pedals_lowWithDeadZone[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 186:main.c        **** uint16_t pedals_highWithDeadZone[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 187:main.c        **** uint8_t deadZone = 51;
 188:main.c        **** uint16_t volumePedal = 4095;
 189:main.c        **** uint16_t processed_pedals[NUM_PEDALS];
 190:main.c        **** uint16_t prev_processed_pedals[NUM_PEDALS];
 191:main.c        **** uint8_t pedals8bit[NUM_PEDALS];
 192:main.c        **** uint8_t pedals7bit[NUM_PEDALS];
 193:main.c        **** uint8_t prevPedals7bit[NUM_PEDALS];
 194:main.c        **** int16_t prev_processed_volumePedal;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 18


 195:main.c        **** int16_t processed_volumePedal;
 196:main.c        **** 
 197:main.c        **** uint8_t sliderBugOn = 0;
 198:main.c        **** 
 199:main.c        **** uint16_t fretMeasurements[NUM_SLIDERS][NUM_FRET_MEASUREMENTS];
 200:main.c        **** 
 201:main.c        **** uint8_t currentPresetSelection = 0;
 202:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 203:main.c        **** uint8_t presetNumberToLoad = 0;
 204:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 205:main.c        **** 
 206:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS][NAME_LENGTH_IN_BYTES];
 207:main.c        **** 
 208:main.c        **** //frets 0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24
 209:main.c        **** float fretScalingInMIDI[NUM_FRET_MEASUREMENTS] = {0.0f, 1.0f, 3.0f, 5.0f, 7.0f, 9.0f, 12.0f, 15.0f,
 210:main.c        **** float fretScalingInRatios[NUM_FRET_MEASUREMENTS] = {1.0f, 1.0594634453327456842756554370605f, 1.189
 211:main.c        **** 
 212:main.c        **** float pedalRatios[NUM_PEDALS];
 213:main.c        **** uint8_t last_mux = 1;
 214:main.c        **** volatile uint8_t main_counter = 0;
 215:main.c        **** uint8_t dualSlider = 0;
 216:main.c        **** uint8_t voice = 0; //unused for now
 217:main.c        **** 
 218:main.c        **** uint8_t patchNum = 0;
 219:main.c        **** 
 220:main.c        **** uint8_t pedal_inverted[NUM_PEDALS] = {0,0,0,0,0,0,0,0,0,0};
 221:main.c        **** 
 222:main.c        **** 
 223:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 224:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 225:main.c        **** 
 226:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 227:main.c        **** 
 228:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 229:main.c        **** 
 230:main.c        **** uint8_t pedal_cc_assignments[NUM_PEDALS] = {0, 1, 2, 3, 4, 8, 9, 7, 6, 5};
 231:main.c        **** float openStringFrequencies[NUM_STRINGS];
 232:main.c        **** float stringMappedPositionsInRatios[NUM_SLIDERS];
 233:main.c        **** float stringMappedPositionsInMIDI[NUM_SLIDERS];
 234:main.c        **** uint16_t barMidiOuterStrings[2];
 235:main.c        **** float stringFrequencies[NUM_STRINGS];
 236:main.c        **** float stringOctave[NUM_STRINGS];
 237:main.c        **** float stringPitch[NUM_STRINGS];
 238:main.c        **** float stringMIDI[NUM_STRINGS];
 239:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 240:main.c        **** 
 241:main.c        **** uint8_t mainOLEDWaitingToSend = 0;
 242:main.c        **** uint8_t macroOLEDWaitingToSend = 0;
 243:main.c        **** 
 244:main.c        **** uint8_t presetAlreadyDisplayed[MAX_NUM_PRESETS];
 245:main.c        **** 
 246:main.c        **** uint8_t currentNeck = 0;
 247:main.c        **** uint8_t neckByte = 0;
 248:main.c        **** 
 249:main.c        **** uint8_t editMode = 0;
 250:main.c        **** uint8_t leverCalibrationMode = 0;
 251:main.c        **** uint8_t fretCalibrationMode = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 19


 252:main.c        **** 
 253:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 254:main.c        **** float stringRepDivider = 1.0f;
 255:main.c        **** 
 256:main.c        **** //function prototypes
 257:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 258:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 259:main.c        **** void USB_service(void);
 260:main.c        **** void checkUSB_Vbus(void);
 261:main.c        **** void sendMIDIAllNotesOff(void);
 262:main.c        **** void sendMIDIPitchBend(int val, int channel);
 263:main.c        **** void firstCheckUSB_Vbus(void);
 264:main.c        **** void restartSystemCheck(void);
 265:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 266:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 267:main.c        **** void noteEvent(int string);
 268:main.c        **** void I2C_reset(void);
 269:main.c        **** void CCEvent(int cc, int val);
 270:main.c        **** void DmaRxConfiguration(void);
 271:main.c        **** void DmaTxConfiguration(void);
 272:main.c        **** void parseSysex(void);
 273:main.c        **** 
 274:main.c        **** //helper functions
 275:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 276:main.c        **** {
 764              		.loc 1 276 0
 765              		.cfi_startproc
 766              		@ args = 4, pretend = 0, frame = 16
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 B0B5     		push	{r4, r5, r7, lr}
 769              		.cfi_def_cfa_offset 16
 770              		.cfi_offset 4, -16
 771              		.cfi_offset 5, -12
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 84B0     		sub	sp, sp, #16
 775              		.cfi_def_cfa_offset 32
 776 0004 00AF     		add	r7, sp, #0
 777              		.cfi_def_cfa_register 7
 778 0006 F860     		str	r0, [r7, #12]	@ float
 779 0008 B960     		str	r1, [r7, #8]	@ float
 780 000a 7A60     		str	r2, [r7, #4]	@ float
 781 000c 3B60     		str	r3, [r7]	@ float
 277:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 782              		.loc 1 277 0
 783 000e 3968     		ldr	r1, [r7]	@ float
 784 0010 386A     		ldr	r0, [r7, #32]	@ float
 785 0012 FFF7FEFF 		bl	__aeabi_fsub
 786 0016 0346     		mov	r3, r0
 787 0018 1C46     		mov	r4, r3
 788 001a B968     		ldr	r1, [r7, #8]	@ float
 789 001c F868     		ldr	r0, [r7, #12]	@ float
 790 001e FFF7FEFF 		bl	__aeabi_fsub
 791 0022 0346     		mov	r3, r0
 792 0024 1D46     		mov	r5, r3
 793 0026 B968     		ldr	r1, [r7, #8]	@ float
 794 0028 7868     		ldr	r0, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 20


 795 002a FFF7FEFF 		bl	__aeabi_fsub
 796 002e 0346     		mov	r3, r0
 797 0030 1946     		mov	r1, r3
 798 0032 2846     		mov	r0, r5
 799 0034 FFF7FEFF 		bl	__aeabi_fdiv
 800 0038 0346     		mov	r3, r0
 801 003a 1946     		mov	r1, r3
 802 003c 2046     		mov	r0, r4
 803 003e FFF7FEFF 		bl	__aeabi_fmul
 804 0042 0346     		mov	r3, r0
 805 0044 3968     		ldr	r1, [r7]	@ float
 806 0046 1846     		mov	r0, r3
 807 0048 FFF7FEFF 		bl	__aeabi_fadd
 808 004c 0346     		mov	r3, r0
 278:main.c        **** }
 809              		.loc 1 278 0
 810 004e 1846     		mov	r0, r3
 811 0050 1037     		adds	r7, r7, #16
 812              		.cfi_def_cfa_offset 16
 813 0052 BD46     		mov	sp, r7
 814              		.cfi_def_cfa_register 13
 815              		@ sp needed
 816 0054 B0BD     		pop	{r4, r5, r7, pc}
 817              		.cfi_endproc
 818              	.LFE64:
 819              		.size	map, .-map
 820              		.global	__aeabi_i2f
 821 0056 00BF     		.section	.text.mapDualSlider,"ax",%progbits
 822              		.align	2
 823              		.global	mapDualSlider
 824              		.thumb
 825              		.thumb_func
 826              		.type	mapDualSlider, %function
 827              	mapDualSlider:
 828              	.LFB65:
 279:main.c        **** 
 280:main.c        **** float mapDualSlider(float value, float ostart, float ostop)
 281:main.c        **** {
 829              		.loc 1 281 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 16
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 90B5     		push	{r4, r7, lr}
 834              		.cfi_def_cfa_offset 12
 835              		.cfi_offset 4, -12
 836              		.cfi_offset 7, -8
 837              		.cfi_offset 14, -4
 838 0002 85B0     		sub	sp, sp, #20
 839              		.cfi_def_cfa_offset 32
 840 0004 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
 842 0006 F860     		str	r0, [r7, #12]	@ float
 843 0008 B960     		str	r1, [r7, #8]	@ float
 844 000a 7A60     		str	r2, [r7, #4]	@ float
 282:main.c        ****     return ostart + (ostop - ostart) * ((value - stringRepresentation[0]) * stringRepDivider);
 845              		.loc 1 282 0
 846 000c B968     		ldr	r1, [r7, #8]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 21


 847 000e 7868     		ldr	r0, [r7, #4]	@ float
 848 0010 FFF7FEFF 		bl	__aeabi_fsub
 849 0014 0346     		mov	r3, r0
 850 0016 1C46     		mov	r4, r3
 851 0018 104B     		ldr	r3, .L5
 852 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 853 001c 1846     		mov	r0, r3
 854 001e FFF7FEFF 		bl	__aeabi_i2f
 855 0022 0346     		mov	r3, r0
 856 0024 1946     		mov	r1, r3
 857 0026 F868     		ldr	r0, [r7, #12]	@ float
 858 0028 FFF7FEFF 		bl	__aeabi_fsub
 859 002c 0346     		mov	r3, r0
 860 002e 1A46     		mov	r2, r3
 861 0030 0B4B     		ldr	r3, .L5+4
 862 0032 1B68     		ldr	r3, [r3]	@ float
 863 0034 1946     		mov	r1, r3
 864 0036 1046     		mov	r0, r2
 865 0038 FFF7FEFF 		bl	__aeabi_fmul
 866 003c 0346     		mov	r3, r0
 867 003e 1946     		mov	r1, r3
 868 0040 2046     		mov	r0, r4
 869 0042 FFF7FEFF 		bl	__aeabi_fmul
 870 0046 0346     		mov	r3, r0
 871 0048 B968     		ldr	r1, [r7, #8]	@ float
 872 004a 1846     		mov	r0, r3
 873 004c FFF7FEFF 		bl	__aeabi_fadd
 874 0050 0346     		mov	r3, r0
 283:main.c        **** }
 875              		.loc 1 283 0
 876 0052 1846     		mov	r0, r3
 877 0054 1437     		adds	r7, r7, #20
 878              		.cfi_def_cfa_offset 12
 879 0056 BD46     		mov	sp, r7
 880              		.cfi_def_cfa_register 13
 881              		@ sp needed
 882 0058 90BD     		pop	{r4, r7, pc}
 883              	.L6:
 884 005a 00BF     		.align	2
 885              	.L5:
 886 005c 00000000 		.word	stringRepresentation
 887 0060 00000000 		.word	stringRepDivider
 888              		.cfi_endproc
 889              	.LFE65:
 890              		.size	mapDualSlider, .-mapDualSlider
 891              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 892              		.align	2
 893              		.global	burnInitialPedalZeroPositions
 894              		.thumb
 895              		.thumb_func
 896              		.type	burnInitialPedalZeroPositions, %function
 897              	burnInitialPedalZeroPositions:
 898              	.LFB66:
 284:main.c        **** 
 285:main.c        **** void burnInitialPedalZeroPositions()
 286:main.c        **** {
 899              		.loc 1 286 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 22


 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 8
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 80B5     		push	{r7, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 82B0     		sub	sp, sp, #8
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911              	.LBB2:
 287:main.c        ****     for (int i = 0; i < 5; i++)
 912              		.loc 1 287 0
 913 0006 0023     		movs	r3, #0
 914 0008 7B60     		str	r3, [r7, #4]
 915 000a 6EE0     		b	.L8
 916              	.L9:
 288:main.c        ****     {
 289:main.c        ****         I2C_1_MasterSendStart(0x70, 0); 
 917              		.loc 1 289 0 discriminator 3
 918 000c 0021     		movs	r1, #0
 919 000e 7020     		movs	r0, #112
 920 0010 FFF7FEFF 		bl	I2C_1_MasterSendStart
 290:main.c        ****         I2C_1_MasterWriteByte(1<<i);
 921              		.loc 1 290 0 discriminator 3
 922 0014 0122     		movs	r2, #1
 923 0016 7B68     		ldr	r3, [r7, #4]
 924 0018 02FA03F3 		lsl	r3, r2, r3
 925 001c DBB2     		uxtb	r3, r3
 926 001e 1846     		mov	r0, r3
 927 0020 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 291:main.c        ****         I2C_1_MasterSendStop(); 
 928              		.loc 1 291 0 discriminator 3
 929 0024 FFF7FEFF 		bl	I2C_1_MasterSendStop
 292:main.c        **** 
 293:main.c        **** 
 294:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 930              		.loc 1 294 0 discriminator 3
 931 0028 0021     		movs	r1, #0
 932 002a 3620     		movs	r0, #54
 933 002c FFF7FEFF 		bl	I2C_1_MasterSendStart
 295:main.c        ****         I2C_1_MasterWriteByte(0x0C);
 934              		.loc 1 295 0 discriminator 3
 935 0030 0C20     		movs	r0, #12
 936 0032 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 296:main.c        ****         //I2C_1_MasterSendStop();
 297:main.c        ****         I2C_1_MasterSendRestart(0x36, 1); 
 937              		.loc 1 297 0 discriminator 3
 938 0036 0121     		movs	r1, #1
 939 0038 3620     		movs	r0, #54
 940 003a FFF7FEFF 		bl	I2C_1_MasterSendRestart
 298:main.c        ****         rawAngle = I2C_1_MasterReadByte(1) << 8;
 941              		.loc 1 298 0 discriminator 3
 942 003e 0120     		movs	r0, #1
 943 0040 FFF7FEFF 		bl	I2C_1_MasterReadByte
 944 0044 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 23


 945 0046 9BB2     		uxth	r3, r3
 946 0048 1B02     		lsls	r3, r3, #8
 947 004a 9AB2     		uxth	r2, r3
 948 004c 654B     		ldr	r3, .L12
 949 004e 1A80     		strh	r2, [r3]	@ movhi
 299:main.c        ****         //I2C_1_MasterSendRestart(0x36, 1);
 300:main.c        ****         rawAngle +=  I2C_1_MasterReadByte(0);
 950              		.loc 1 300 0 discriminator 3
 951 0050 0020     		movs	r0, #0
 952 0052 FFF7FEFF 		bl	I2C_1_MasterReadByte
 953 0056 0346     		mov	r3, r0
 954 0058 9AB2     		uxth	r2, r3
 955 005a 624B     		ldr	r3, .L12
 956 005c 1B88     		ldrh	r3, [r3]
 957 005e 1344     		add	r3, r3, r2
 958 0060 9AB2     		uxth	r2, r3
 959 0062 604B     		ldr	r3, .L12
 960 0064 1A80     		strh	r2, [r3]	@ movhi
 301:main.c        ****          I2C_1_MasterSendStop(); 
 961              		.loc 1 301 0 discriminator 3
 962 0066 FFF7FEFF 		bl	I2C_1_MasterSendStop
 302:main.c        ****         
 303:main.c        ****         CyDelay(1);
 963              		.loc 1 303 0 discriminator 3
 964 006a 0120     		movs	r0, #1
 965 006c FFF7FEFF 		bl	CyDelay
 304:main.c        **** 
 305:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 966              		.loc 1 305 0 discriminator 3
 967 0070 0021     		movs	r1, #0
 968 0072 3620     		movs	r0, #54
 969 0074 FFF7FEFF 		bl	I2C_1_MasterSendStart
 306:main.c        ****         I2C_1_MasterWriteByte(0x01);
 970              		.loc 1 306 0 discriminator 3
 971 0078 0120     		movs	r0, #1
 972 007a FFF7FEFF 		bl	I2C_1_MasterWriteByte
 307:main.c        ****         I2C_1_MasterWriteByte(rawAngle >> 8);
 973              		.loc 1 307 0 discriminator 3
 974 007e 594B     		ldr	r3, .L12
 975 0080 1B88     		ldrh	r3, [r3]
 976 0082 1B0A     		lsrs	r3, r3, #8
 977 0084 9BB2     		uxth	r3, r3
 978 0086 DBB2     		uxtb	r3, r3
 979 0088 1846     		mov	r0, r3
 980 008a FFF7FEFF 		bl	I2C_1_MasterWriteByte
 308:main.c        ****         I2C_1_MasterWriteByte(rawAngle & 0xff);
 981              		.loc 1 308 0 discriminator 3
 982 008e 554B     		ldr	r3, .L12
 983 0090 1B88     		ldrh	r3, [r3]
 984 0092 DBB2     		uxtb	r3, r3
 985 0094 1846     		mov	r0, r3
 986 0096 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 309:main.c        ****         I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 987              		.loc 1 309 0 discriminator 3
 988 009a 524B     		ldr	r3, .L12
 989 009c 1B88     		ldrh	r3, [r3]
 990 009e 03F5FA73 		add	r3, r3, #500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 24


 991 00a2 1B12     		asrs	r3, r3, #8
 992 00a4 DBB2     		uxtb	r3, r3
 993 00a6 1846     		mov	r0, r3
 994 00a8 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 310:main.c        ****         I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 995              		.loc 1 310 0 discriminator 3
 996 00ac 4D4B     		ldr	r3, .L12
 997 00ae 1B88     		ldrh	r3, [r3]
 998 00b0 DBB2     		uxtb	r3, r3
 999 00b2 0C3B     		subs	r3, r3, #12
 1000 00b4 DBB2     		uxtb	r3, r3
 1001 00b6 1846     		mov	r0, r3
 1002 00b8 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 311:main.c        ****         I2C_1_MasterSendStop(); 
 1003              		.loc 1 311 0 discriminator 3
 1004 00bc FFF7FEFF 		bl	I2C_1_MasterSendStop
 312:main.c        ****         
 313:main.c        ****         CyDelay(2);
 1005              		.loc 1 313 0 discriminator 3
 1006 00c0 0220     		movs	r0, #2
 1007 00c2 FFF7FEFF 		bl	CyDelay
 314:main.c        **** 
 315:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1008              		.loc 1 315 0 discriminator 3
 1009 00c6 0021     		movs	r1, #0
 1010 00c8 3620     		movs	r0, #54
 1011 00ca FFF7FEFF 		bl	I2C_1_MasterSendStart
 316:main.c        ****         I2C_1_MasterWriteByte(0xff);
 1012              		.loc 1 316 0 discriminator 3
 1013 00ce FF20     		movs	r0, #255
 1014 00d0 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 317:main.c        ****        I2C_1_MasterWriteByte(0x80);
 1015              		.loc 1 317 0 discriminator 3
 1016 00d4 8020     		movs	r0, #128
 1017 00d6 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 318:main.c        ****         I2C_1_MasterSendStop(); 
 1018              		.loc 1 318 0 discriminator 3
 1019 00da FFF7FEFF 		bl	I2C_1_MasterSendStop
 319:main.c        ****        CyDelay(2);
 1020              		.loc 1 319 0 discriminator 3
 1021 00de 0220     		movs	r0, #2
 1022 00e0 FFF7FEFF 		bl	CyDelay
 287:main.c        ****     {
 1023              		.loc 1 287 0 discriminator 3
 1024 00e4 7B68     		ldr	r3, [r7, #4]
 1025 00e6 0133     		adds	r3, r3, #1
 1026 00e8 7B60     		str	r3, [r7, #4]
 1027              	.L8:
 287:main.c        ****     {
 1028              		.loc 1 287 0 is_stmt 0 discriminator 1
 1029 00ea 7B68     		ldr	r3, [r7, #4]
 1030 00ec 042B     		cmp	r3, #4
 1031 00ee 8DDD     		ble	.L9
 1032              	.LBE2:
 1033              	.LBB3:
 320:main.c        ****     }
 321:main.c        ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 25


 322:main.c        ****     //set main i2c mux
 323:main.c        ****     for (int i = 0; i < 4; i++)
 1034              		.loc 1 323 0 is_stmt 1
 1035 00f0 0023     		movs	r3, #0
 1036 00f2 3B60     		str	r3, [r7]
 1037 00f4 6FE0     		b	.L10
 1038              	.L11:
 324:main.c        ****     {
 325:main.c        ****         I2C_1_MasterSendStart(0x71, 0); 
 1039              		.loc 1 325 0 discriminator 3
 1040 00f6 0021     		movs	r1, #0
 1041 00f8 7120     		movs	r0, #113
 1042 00fa FFF7FEFF 		bl	I2C_1_MasterSendStart
 326:main.c        ****         I2C_1_MasterWriteByte(1<<(i+2));
 1043              		.loc 1 326 0 discriminator 3
 1044 00fe 3B68     		ldr	r3, [r7]
 1045 0100 0233     		adds	r3, r3, #2
 1046 0102 0122     		movs	r2, #1
 1047 0104 02FA03F3 		lsl	r3, r2, r3
 1048 0108 DBB2     		uxtb	r3, r3
 1049 010a 1846     		mov	r0, r3
 1050 010c FFF7FEFF 		bl	I2C_1_MasterWriteByte
 327:main.c        ****         I2C_1_MasterSendStop(); 
 1051              		.loc 1 327 0 discriminator 3
 1052 0110 FFF7FEFF 		bl	I2C_1_MasterSendStop
 328:main.c        **** 
 329:main.c        **** 
 330:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1053              		.loc 1 330 0 discriminator 3
 1054 0114 0021     		movs	r1, #0
 1055 0116 3620     		movs	r0, #54
 1056 0118 FFF7FEFF 		bl	I2C_1_MasterSendStart
 331:main.c        ****         I2C_1_MasterWriteByte(0x0C);
 1057              		.loc 1 331 0 discriminator 3
 1058 011c 0C20     		movs	r0, #12
 1059 011e FFF7FEFF 		bl	I2C_1_MasterWriteByte
 332:main.c        ****         //I2C_1_MasterSendStop();
 333:main.c        ****         I2C_1_MasterSendRestart(0x36, 1); 
 1060              		.loc 1 333 0 discriminator 3
 1061 0122 0121     		movs	r1, #1
 1062 0124 3620     		movs	r0, #54
 1063 0126 FFF7FEFF 		bl	I2C_1_MasterSendRestart
 334:main.c        ****         rawAngle = I2C_1_MasterReadByte(1) << 8;
 1064              		.loc 1 334 0 discriminator 3
 1065 012a 0120     		movs	r0, #1
 1066 012c FFF7FEFF 		bl	I2C_1_MasterReadByte
 1067 0130 0346     		mov	r3, r0
 1068 0132 9BB2     		uxth	r3, r3
 1069 0134 1B02     		lsls	r3, r3, #8
 1070 0136 9AB2     		uxth	r2, r3
 1071 0138 2A4B     		ldr	r3, .L12
 1072 013a 1A80     		strh	r2, [r3]	@ movhi
 335:main.c        ****         //I2C_1_MasterSendRestart(0x36, 1);
 336:main.c        ****         rawAngle +=  I2C_1_MasterReadByte(0);
 1073              		.loc 1 336 0 discriminator 3
 1074 013c 0020     		movs	r0, #0
 1075 013e FFF7FEFF 		bl	I2C_1_MasterReadByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 26


 1076 0142 0346     		mov	r3, r0
 1077 0144 9AB2     		uxth	r2, r3
 1078 0146 274B     		ldr	r3, .L12
 1079 0148 1B88     		ldrh	r3, [r3]
 1080 014a 1344     		add	r3, r3, r2
 1081 014c 9AB2     		uxth	r2, r3
 1082 014e 254B     		ldr	r3, .L12
 1083 0150 1A80     		strh	r2, [r3]	@ movhi
 337:main.c        ****          I2C_1_MasterSendStop(); 
 1084              		.loc 1 337 0 discriminator 3
 1085 0152 FFF7FEFF 		bl	I2C_1_MasterSendStop
 338:main.c        ****         
 339:main.c        ****         CyDelay(1);
 1086              		.loc 1 339 0 discriminator 3
 1087 0156 0120     		movs	r0, #1
 1088 0158 FFF7FEFF 		bl	CyDelay
 340:main.c        **** 
 341:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1089              		.loc 1 341 0 discriminator 3
 1090 015c 0021     		movs	r1, #0
 1091 015e 3620     		movs	r0, #54
 1092 0160 FFF7FEFF 		bl	I2C_1_MasterSendStart
 342:main.c        ****         I2C_1_MasterWriteByte(0x01);
 1093              		.loc 1 342 0 discriminator 3
 1094 0164 0120     		movs	r0, #1
 1095 0166 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 343:main.c        ****         I2C_1_MasterWriteByte(rawAngle >> 8);
 1096              		.loc 1 343 0 discriminator 3
 1097 016a 1E4B     		ldr	r3, .L12
 1098 016c 1B88     		ldrh	r3, [r3]
 1099 016e 1B0A     		lsrs	r3, r3, #8
 1100 0170 9BB2     		uxth	r3, r3
 1101 0172 DBB2     		uxtb	r3, r3
 1102 0174 1846     		mov	r0, r3
 1103 0176 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 344:main.c        ****         I2C_1_MasterWriteByte(rawAngle & 0xff);
 1104              		.loc 1 344 0 discriminator 3
 1105 017a 1A4B     		ldr	r3, .L12
 1106 017c 1B88     		ldrh	r3, [r3]
 1107 017e DBB2     		uxtb	r3, r3
 1108 0180 1846     		mov	r0, r3
 1109 0182 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 345:main.c        ****         I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 1110              		.loc 1 345 0 discriminator 3
 1111 0186 174B     		ldr	r3, .L12
 1112 0188 1B88     		ldrh	r3, [r3]
 1113 018a 03F52F73 		add	r3, r3, #700
 1114 018e 1B12     		asrs	r3, r3, #8
 1115 0190 DBB2     		uxtb	r3, r3
 1116 0192 1846     		mov	r0, r3
 1117 0194 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 346:main.c        ****         I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 1118              		.loc 1 346 0 discriminator 3
 1119 0198 124B     		ldr	r3, .L12
 1120 019a 1B88     		ldrh	r3, [r3]
 1121 019c DBB2     		uxtb	r3, r3
 1122 019e 443B     		subs	r3, r3, #68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 27


 1123 01a0 DBB2     		uxtb	r3, r3
 1124 01a2 1846     		mov	r0, r3
 1125 01a4 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 347:main.c        ****         I2C_1_MasterSendStop(); 
 1126              		.loc 1 347 0 discriminator 3
 1127 01a8 FFF7FEFF 		bl	I2C_1_MasterSendStop
 348:main.c        ****         
 349:main.c        ****         CyDelay(2);
 1128              		.loc 1 349 0 discriminator 3
 1129 01ac 0220     		movs	r0, #2
 1130 01ae FFF7FEFF 		bl	CyDelay
 350:main.c        **** 
 351:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1131              		.loc 1 351 0 discriminator 3
 1132 01b2 0021     		movs	r1, #0
 1133 01b4 3620     		movs	r0, #54
 1134 01b6 FFF7FEFF 		bl	I2C_1_MasterSendStart
 352:main.c        ****         I2C_1_MasterWriteByte(0xff);
 1135              		.loc 1 352 0 discriminator 3
 1136 01ba FF20     		movs	r0, #255
 1137 01bc FFF7FEFF 		bl	I2C_1_MasterWriteByte
 353:main.c        ****         I2C_1_MasterWriteByte(0x80);
 1138              		.loc 1 353 0 discriminator 3
 1139 01c0 8020     		movs	r0, #128
 1140 01c2 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 354:main.c        ****         I2C_1_MasterSendStop(); 
 1141              		.loc 1 354 0 discriminator 3
 1142 01c6 FFF7FEFF 		bl	I2C_1_MasterSendStop
 355:main.c        ****        CyDelay(2);
 1143              		.loc 1 355 0 discriminator 3
 1144 01ca 0220     		movs	r0, #2
 1145 01cc FFF7FEFF 		bl	CyDelay
 323:main.c        ****     {
 1146              		.loc 1 323 0 discriminator 3
 1147 01d0 3B68     		ldr	r3, [r7]
 1148 01d2 0133     		adds	r3, r3, #1
 1149 01d4 3B60     		str	r3, [r7]
 1150              	.L10:
 323:main.c        ****     {
 1151              		.loc 1 323 0 is_stmt 0 discriminator 1
 1152 01d6 3B68     		ldr	r3, [r7]
 1153 01d8 032B     		cmp	r3, #3
 1154 01da 8CDD     		ble	.L11
 1155              	.LBE3:
 356:main.c        ****     }
 357:main.c        **** }
 1156              		.loc 1 357 0 is_stmt 1
 1157 01dc 00BF     		nop
 1158 01de 0837     		adds	r7, r7, #8
 1159              		.cfi_def_cfa_offset 8
 1160 01e0 BD46     		mov	sp, r7
 1161              		.cfi_def_cfa_register 13
 1162              		@ sp needed
 1163 01e2 80BD     		pop	{r7, pc}
 1164              	.L13:
 1165              		.align	2
 1166              	.L12:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 28


 1167 01e4 00000000 		.word	rawAngle
 1168              		.cfi_endproc
 1169              	.LFE66:
 1170              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1171              		.global	__aeabi_ui2f
 1172              		.global	__aeabi_f2uiz
 1173              		.section	.text.calculatePedalRatios,"ax",%progbits
 1174              		.align	2
 1175              		.global	calculatePedalRatios
 1176              		.thumb
 1177              		.thumb_func
 1178              		.type	calculatePedalRatios, %function
 1179              	calculatePedalRatios:
 1180              	.LFB67:
 358:main.c        **** 
 359:main.c        **** void calculatePedalRatios(void)
 360:main.c        **** {
 1181              		.loc 1 360 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 16
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 90B5     		push	{r4, r7, lr}
 1186              		.cfi_def_cfa_offset 12
 1187              		.cfi_offset 4, -12
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 85B0     		sub	sp, sp, #20
 1191              		.cfi_def_cfa_offset 32
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 1194              	.LBB4:
 361:main.c        ****     //add deadzones on edges of pedal sensing
 362:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1195              		.loc 1 362 0
 1196 0006 0023     		movs	r3, #0
 1197 0008 FB60     		str	r3, [r7, #12]
 1198 000a 6EE0     		b	.L15
 1199              	.L16:
 1200              	.LBB5:
 363:main.c        ****     {
 364:main.c        **** 
 365:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i]; //temporary diff to calculat
 1201              		.loc 1 365 0 discriminator 3
 1202 000c 3A4A     		ldr	r2, .L17
 1203 000e FB68     		ldr	r3, [r7, #12]
 1204 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1205 0014 1846     		mov	r0, r3
 1206 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1207 001a 0446     		mov	r4, r0
 1208 001c 374A     		ldr	r2, .L17+4
 1209 001e FB68     		ldr	r3, [r7, #12]
 1210 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1211 0024 1846     		mov	r0, r3
 1212 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1213 002a 0346     		mov	r3, r0
 1214 002c 1946     		mov	r1, r3
 1215 002e 2046     		mov	r0, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 29


 1216 0030 FFF7FEFF 		bl	__aeabi_fsub
 1217 0034 0346     		mov	r3, r0
 1218 0036 BB60     		str	r3, [r7, #8]	@ float
 366:main.c        ****         float deadZoneFloat = ((float)deadZone) * 0.002f * pedalDiff;
 1219              		.loc 1 366 0 discriminator 3
 1220 0038 314B     		ldr	r3, .L17+8
 1221 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1222 003c 1846     		mov	r0, r3
 1223 003e FFF7FEFF 		bl	__aeabi_ui2f
 1224 0042 0346     		mov	r3, r0
 1225 0044 2F49     		ldr	r1, .L17+12
 1226 0046 1846     		mov	r0, r3
 1227 0048 FFF7FEFF 		bl	__aeabi_fmul
 1228 004c 0346     		mov	r3, r0
 1229 004e B968     		ldr	r1, [r7, #8]	@ float
 1230 0050 1846     		mov	r0, r3
 1231 0052 FFF7FEFF 		bl	__aeabi_fmul
 1232 0056 0346     		mov	r3, r0
 1233 0058 7B60     		str	r3, [r7, #4]	@ float
 367:main.c        ****         pedals_lowWithDeadZone[i] = (float)pedals_low[i] + deadZoneFloat;
 1234              		.loc 1 367 0 discriminator 3
 1235 005a 284A     		ldr	r2, .L17+4
 1236 005c FB68     		ldr	r3, [r7, #12]
 1237 005e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1238 0062 1846     		mov	r0, r3
 1239 0064 FFF7FEFF 		bl	__aeabi_ui2f
 1240 0068 0346     		mov	r3, r0
 1241 006a 7968     		ldr	r1, [r7, #4]	@ float
 1242 006c 1846     		mov	r0, r3
 1243 006e FFF7FEFF 		bl	__aeabi_fadd
 1244 0072 0346     		mov	r3, r0
 1245 0074 1846     		mov	r0, r3
 1246 0076 FFF7FEFF 		bl	__aeabi_f2uiz
 1247 007a 0346     		mov	r3, r0
 1248 007c 99B2     		uxth	r1, r3
 1249 007e 224A     		ldr	r2, .L17+16
 1250 0080 FB68     		ldr	r3, [r7, #12]
 1251 0082 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 368:main.c        ****         pedals_highWithDeadZone[i] =(float)pedals_high[i] - deadZoneFloat;
 1252              		.loc 1 368 0 discriminator 3
 1253 0086 1C4A     		ldr	r2, .L17
 1254 0088 FB68     		ldr	r3, [r7, #12]
 1255 008a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1256 008e 1846     		mov	r0, r3
 1257 0090 FFF7FEFF 		bl	__aeabi_ui2f
 1258 0094 0346     		mov	r3, r0
 1259 0096 7968     		ldr	r1, [r7, #4]	@ float
 1260 0098 1846     		mov	r0, r3
 1261 009a FFF7FEFF 		bl	__aeabi_fsub
 1262 009e 0346     		mov	r3, r0
 1263 00a0 1846     		mov	r0, r3
 1264 00a2 FFF7FEFF 		bl	__aeabi_f2uiz
 1265 00a6 0346     		mov	r3, r0
 1266 00a8 99B2     		uxth	r1, r3
 1267 00aa 184A     		ldr	r2, .L17+20
 1268 00ac FB68     		ldr	r3, [r7, #12]
 1269 00ae 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 30


 369:main.c        ****         pedalDiff = pedals_highWithDeadZone[i] - pedals_lowWithDeadZone[i]; //final diff to calcula
 1270              		.loc 1 369 0 discriminator 3
 1271 00b2 164A     		ldr	r2, .L17+20
 1272 00b4 FB68     		ldr	r3, [r7, #12]
 1273 00b6 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1274 00ba 1946     		mov	r1, r3
 1275 00bc 124A     		ldr	r2, .L17+16
 1276 00be FB68     		ldr	r3, [r7, #12]
 1277 00c0 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1278 00c4 CB1A     		subs	r3, r1, r3
 1279 00c6 1846     		mov	r0, r3
 1280 00c8 FFF7FEFF 		bl	__aeabi_i2f
 1281 00cc 0346     		mov	r3, r0
 1282 00ce BB60     		str	r3, [r7, #8]	@ float
 370:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1283              		.loc 1 370 0 discriminator 3
 1284 00d0 B968     		ldr	r1, [r7, #8]	@ float
 1285 00d2 0F48     		ldr	r0, .L17+24
 1286 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1287 00d8 0346     		mov	r3, r0
 1288 00da 1946     		mov	r1, r3
 1289 00dc 0D4A     		ldr	r2, .L17+28
 1290 00de FB68     		ldr	r3, [r7, #12]
 1291 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1292              	.LBE5:
 362:main.c        ****     {
 1293              		.loc 1 362 0 discriminator 3
 1294 00e4 FB68     		ldr	r3, [r7, #12]
 1295 00e6 0133     		adds	r3, r3, #1
 1296 00e8 FB60     		str	r3, [r7, #12]
 1297              	.L15:
 362:main.c        ****     {
 1298              		.loc 1 362 0 is_stmt 0 discriminator 1
 1299 00ea FB68     		ldr	r3, [r7, #12]
 1300 00ec 092B     		cmp	r3, #9
 1301 00ee 8DDD     		ble	.L16
 1302              	.LBE4:
 371:main.c        ****     }
 372:main.c        **** }
 1303              		.loc 1 372 0 is_stmt 1
 1304 00f0 00BF     		nop
 1305 00f2 1437     		adds	r7, r7, #20
 1306              		.cfi_def_cfa_offset 12
 1307 00f4 BD46     		mov	sp, r7
 1308              		.cfi_def_cfa_register 13
 1309              		@ sp needed
 1310 00f6 90BD     		pop	{r4, r7, pc}
 1311              	.L18:
 1312              		.align	2
 1313              	.L17:
 1314 00f8 00000000 		.word	pedals_high
 1315 00fc 00000000 		.word	pedals_low
 1316 0100 00000000 		.word	deadZone
 1317 0104 6F12033B 		.word	990057071
 1318 0108 00000000 		.word	pedals_lowWithDeadZone
 1319 010c 00000000 		.word	pedals_highWithDeadZone
 1320 0110 00F07F45 		.word	1166012416
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 31


 1321 0114 00000000 		.word	pedalRatios
 1322              		.cfi_endproc
 1323              	.LFE67:
 1324              		.size	calculatePedalRatios, .-calculatePedalRatios
 1325              		.global	__aeabi_fcmpeq
 1326              		.section	.text.calculateStringRepDivider,"ax",%progbits
 1327              		.align	2
 1328              		.global	calculateStringRepDivider
 1329              		.thumb
 1330              		.thumb_func
 1331              		.type	calculateStringRepDivider, %function
 1332              	calculateStringRepDivider:
 1333              	.LFB68:
 373:main.c        **** void calculateStringRepDivider(void)
 374:main.c        **** {
 1334              		.loc 1 374 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338 0000 80B5     		push	{r7, lr}
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 7, -8
 1341              		.cfi_offset 14, -4
 1342 0002 00AF     		add	r7, sp, #0
 1343              		.cfi_def_cfa_register 7
 375:main.c        ****     stringRepDivider = (stringRepresentation[1] - stringRepresentation[0]);
 1344              		.loc 1 375 0
 1345 0004 1C4B     		ldr	r3, .L25
 1346 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1347 0008 1A46     		mov	r2, r3
 1348 000a 1B4B     		ldr	r3, .L25
 1349 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1350 000e D31A     		subs	r3, r2, r3
 1351 0010 1846     		mov	r0, r3
 1352 0012 FFF7FEFF 		bl	__aeabi_i2f
 1353 0016 0246     		mov	r2, r0
 1354 0018 184B     		ldr	r3, .L25+4
 1355 001a 1A60     		str	r2, [r3]	@ float
 376:main.c        ****     if (stringRepDivider == 0.0f)
 1356              		.loc 1 376 0
 1357 001c 174B     		ldr	r3, .L25+4
 1358 001e 1B68     		ldr	r3, [r3]	@ float
 1359 0020 4FF00001 		mov	r1, #0
 1360 0024 1846     		mov	r0, r3
 1361 0026 FFF7FEFF 		bl	__aeabi_fcmpeq
 1362 002a 0346     		mov	r3, r0
 1363 002c 002B     		cmp	r3, #0
 1364 002e 11D0     		beq	.L20
 377:main.c        ****     {
 378:main.c        ****         stringRepresentation[0] = 2;
 1365              		.loc 1 378 0
 1366 0030 114B     		ldr	r3, .L25
 1367 0032 0222     		movs	r2, #2
 1368 0034 1A70     		strb	r2, [r3]
 379:main.c        ****         stringRepresentation[1] = 7;
 1369              		.loc 1 379 0
 1370 0036 104B     		ldr	r3, .L25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 32


 1371 0038 0722     		movs	r2, #7
 1372 003a 5A70     		strb	r2, [r3, #1]
 380:main.c        ****         stringRepDivider = (stringRepresentation[1] - stringRepresentation[0]);
 1373              		.loc 1 380 0
 1374 003c 0E4B     		ldr	r3, .L25
 1375 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1376 0040 1A46     		mov	r2, r3
 1377 0042 0D4B     		ldr	r3, .L25
 1378 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1379 0046 D31A     		subs	r3, r2, r3
 1380 0048 1846     		mov	r0, r3
 1381 004a FFF7FEFF 		bl	__aeabi_i2f
 1382 004e 0246     		mov	r2, r0
 1383 0050 0A4B     		ldr	r3, .L25+4
 1384 0052 1A60     		str	r2, [r3]	@ float
 1385              	.L20:
 381:main.c        ****     }
 382:main.c        ****     if (!sliderBugOn)
 1386              		.loc 1 382 0
 1387 0054 0A4B     		ldr	r3, .L25+8
 1388 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1389 0058 002B     		cmp	r3, #0
 1390 005a 0AD1     		bne	.L24
 383:main.c        ****     {
 384:main.c        ****         stringRepDivider = (1.0f / stringRepDivider);
 1391              		.loc 1 384 0
 1392 005c 074B     		ldr	r3, .L25+4
 1393 005e 1B68     		ldr	r3, [r3]	@ float
 1394 0060 1946     		mov	r1, r3
 1395 0062 4FF07E50 		mov	r0, #1065353216
 1396 0066 FFF7FEFF 		bl	__aeabi_fdiv
 1397 006a 0346     		mov	r3, r0
 1398 006c 1A46     		mov	r2, r3
 1399 006e 034B     		ldr	r3, .L25+4
 1400 0070 1A60     		str	r2, [r3]	@ float
 1401              	.L24:
 385:main.c        ****     }
 386:main.c        **** }
 1402              		.loc 1 386 0
 1403 0072 00BF     		nop
 1404 0074 80BD     		pop	{r7, pc}
 1405              	.L26:
 1406 0076 00BF     		.align	2
 1407              	.L25:
 1408 0078 00000000 		.word	stringRepresentation
 1409 007c 00000000 		.word	stringRepDivider
 1410 0080 00000000 		.word	sliderBugOn
 1411              		.cfi_endproc
 1412              	.LFE68:
 1413              		.size	calculateStringRepDivider, .-calculateStringRepDivider
 1414              		.section	.text.unsafeFtom,"ax",%progbits
 1415              		.align	2
 1416              		.global	unsafeFtom
 1417              		.thumb
 1418              		.thumb_func
 1419              		.type	unsafeFtom, %function
 1420              	unsafeFtom:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 33


 1421              	.LFB69:
 387:main.c        **** 
 388:main.c        **** float unsafeFtom(float f)
 389:main.c        **** {
 1422              		.loc 1 389 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 8
 1425              		@ frame_needed = 1, uses_anonymous_args = 0
 1426 0000 80B5     		push	{r7, lr}
 1427              		.cfi_def_cfa_offset 8
 1428              		.cfi_offset 7, -8
 1429              		.cfi_offset 14, -4
 1430 0002 82B0     		sub	sp, sp, #8
 1431              		.cfi_def_cfa_offset 16
 1432 0004 00AF     		add	r7, sp, #0
 1433              		.cfi_def_cfa_register 7
 1434 0006 7860     		str	r0, [r7, #4]	@ float
 390:main.c        ****     return (17.3123405046f * logf(.12231220585f * f));
 1435              		.loc 1 390 0
 1436 0008 0849     		ldr	r1, .L29
 1437 000a 7868     		ldr	r0, [r7, #4]	@ float
 1438 000c FFF7FEFF 		bl	__aeabi_fmul
 1439 0010 0346     		mov	r3, r0
 1440 0012 1846     		mov	r0, r3
 1441 0014 FFF7FEFF 		bl	logf
 1442 0018 0346     		mov	r3, r0
 1443 001a 0549     		ldr	r1, .L29+4
 1444 001c 1846     		mov	r0, r3
 1445 001e FFF7FEFF 		bl	__aeabi_fmul
 1446 0022 0346     		mov	r3, r0
 391:main.c        **** }
 1447              		.loc 1 391 0
 1448 0024 1846     		mov	r0, r3
 1449 0026 0837     		adds	r7, r7, #8
 1450              		.cfi_def_cfa_offset 8
 1451 0028 BD46     		mov	sp, r7
 1452              		.cfi_def_cfa_register 13
 1453              		@ sp needed
 1454 002a 80BD     		pop	{r7, pc}
 1455              	.L30:
 1456              		.align	2
 1457              	.L29:
 1458 002c D27EFA3D 		.word	1039826642
 1459 0030 AC7F8A41 		.word	1099595692
 1460              		.cfi_endproc
 1461              	.LFE69:
 1462              		.size	unsafeFtom, .-unsafeFtom
 1463              		.section	.text.restartSystemCheck,"ax",%progbits
 1464              		.align	2
 1465              		.global	restartSystemCheck
 1466              		.thumb
 1467              		.thumb_func
 1468              		.type	restartSystemCheck, %function
 1469              	restartSystemCheck:
 1470              	.LFB70:
 392:main.c        **** 
 393:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 34


 394:main.c        **** //a check for when a usb cable is plugged in and it needs to restart only once
 395:main.c        **** void restartSystemCheck()
 396:main.c        **** {
 1471              		.loc 1 396 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 1, uses_anonymous_args = 0
 1475 0000 80B5     		push	{r7, lr}
 1476              		.cfi_def_cfa_offset 8
 1477              		.cfi_offset 7, -8
 1478              		.cfi_offset 14, -4
 1479 0002 00AF     		add	r7, sp, #0
 1480              		.cfi_def_cfa_register 7
 397:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 1481              		.loc 1 397 0
 1482 0004 184B     		ldr	r3, .L35
 1483 0006 0222     		movs	r2, #2
 1484 0008 1849     		ldr	r1, .L35+4
 1485 000a 0020     		movs	r0, #0
 1486 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 1487 0010 0346     		mov	r3, r0
 1488 0012 1A46     		mov	r2, r3
 1489 0014 164B     		ldr	r3, .L35+8
 1490 0016 1A70     		strb	r2, [r3]
 398:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 399:main.c        ****     if (USB_VBusPresent() == 1)
 1491              		.loc 1 399 0
 1492 0018 FFF7FEFF 		bl	USB_VBusPresent
 1493 001c 0346     		mov	r3, r0
 1494 001e 012B     		cmp	r3, #1
 1495 0020 20D1     		bne	.L34
 400:main.c        ****     {
 401:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 1496              		.loc 1 401 0
 1497 0022 124B     		ldr	r3, .L35+4
 1498 0024 1B78     		ldrb	r3, [r3]
 1499 0026 DBB2     		uxtb	r3, r3
 1500 0028 012B     		cmp	r3, #1
 1501 002a 0CD1     		bne	.L33
 402:main.c        ****         {
 403:main.c        ****             //a flag says we just restarted
 404:main.c        ****             //write a zero so it knows next time that it's OK to restart
 405:main.c        ****             array[0] = 0;
 1502              		.loc 1 405 0
 1503 002c 114B     		ldr	r3, .L35+12
 1504 002e 0022     		movs	r2, #0
 1505 0030 1A70     		strb	r2, [r3]
 406:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 1506              		.loc 1 406 0
 1507 0032 0D4B     		ldr	r3, .L35
 1508 0034 0222     		movs	r2, #2
 1509 0036 0F49     		ldr	r1, .L35+12
 1510 0038 0020     		movs	r0, #0
 1511 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 407:main.c        ****             USB_check_flag = 1;
 1512              		.loc 1 407 0
 1513 003e 0E4B     		ldr	r3, .L35+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 35


 1514 0040 0122     		movs	r2, #1
 1515 0042 1A70     		strb	r2, [r3]
 408:main.c        ****         }
 409:main.c        ****         else
 410:main.c        ****         {
 411:main.c        ****            //otherwise, we need to restart
 412:main.c        ****            array[0] = 1;
 413:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 414:main.c        ****             USB_Stop();
 415:main.c        ****             I2C_1_Stop();
 416:main.c        ****             CySoftwareReset();
 417:main.c        ****         }
 418:main.c        ****     }
 419:main.c        **** }
 1516              		.loc 1 419 0
 1517 0044 0EE0     		b	.L34
 1518              	.L33:
 412:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 1519              		.loc 1 412 0
 1520 0046 0B4B     		ldr	r3, .L35+12
 1521 0048 0122     		movs	r2, #1
 1522 004a 1A70     		strb	r2, [r3]
 413:main.c        ****             USB_Stop();
 1523              		.loc 1 413 0
 1524 004c 064B     		ldr	r3, .L35
 1525 004e 0222     		movs	r2, #2
 1526 0050 0849     		ldr	r1, .L35+12
 1527 0052 0020     		movs	r0, #0
 1528 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 414:main.c        ****             I2C_1_Stop();
 1529              		.loc 1 414 0
 1530 0058 FFF7FEFF 		bl	USB_Stop
 415:main.c        ****             CySoftwareReset();
 1531              		.loc 1 415 0
 1532 005c FFF7FEFF 		bl	I2C_1_Stop
 416:main.c        ****         }
 1533              		.loc 1 416 0
 1534 0060 FFF7FEFF 		bl	CySoftwareReset
 1535              	.L34:
 1536              		.loc 1 419 0
 1537 0064 00BF     		nop
 1538 0066 80BD     		pop	{r7, pc}
 1539              	.L36:
 1540              		.align	2
 1541              	.L35:
 1542 0068 00000000 		.word	Em_EEPROM_context
 1543 006c 6C000000 		.word	eepromArray
 1544 0070 00000000 		.word	eepromReturnValue
 1545 0074 00000000 		.word	array
 1546 0078 00000000 		.word	USB_check_flag
 1547              		.cfi_endproc
 1548              	.LFE70:
 1549              		.size	restartSystemCheck, .-restartSystemCheck
 1550              		.section	.text.Vbus_function,"ax",%progbits
 1551              		.align	2
 1552              		.global	Vbus_function
 1553              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 36


 1554              		.thumb_func
 1555              		.type	Vbus_function, %function
 1556              	Vbus_function:
 1557              	.LFB71:
 420:main.c        **** 
 421:main.c        **** //ISRs
 422:main.c        **** 
 423:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 424:main.c        **** CY_ISR(Vbus_function)
 425:main.c        **** {
 1558              		.loc 1 425 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 0
 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562 0000 80B5     		push	{r7, lr}
 1563              		.cfi_def_cfa_offset 8
 1564              		.cfi_offset 7, -8
 1565              		.cfi_offset 14, -4
 1566 0002 00AF     		add	r7, sp, #0
 1567              		.cfi_def_cfa_register 7
 426:main.c        ****     //plug or unplug event
 427:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 428:main.c        ****     //otherwise, restart
 429:main.c        ****     my_Vbus_ISR_ClearPending();
 1568              		.loc 1 429 0
 1569 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 430:main.c        ****     vBusPin_ClearInterrupt();
 1570              		.loc 1 430 0
 1571 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 431:main.c        ****     restartSystemCheck();
 1572              		.loc 1 431 0
 1573 000c FFF7FEFF 		bl	restartSystemCheck
 432:main.c        **** 
 433:main.c        **** }
 1574              		.loc 1 433 0
 1575 0010 00BF     		nop
 1576 0012 80BD     		pop	{r7, pc}
 1577              		.cfi_endproc
 1578              	.LFE71:
 1579              		.size	Vbus_function, .-Vbus_function
 1580              		.section	.text.spis_2_ss,"ax",%progbits
 1581              		.align	2
 1582              		.global	spis_2_ss
 1583              		.thumb
 1584              		.thumb_func
 1585              		.type	spis_2_ss, %function
 1586              	spis_2_ss:
 1587              	.LFB72:
 434:main.c        **** 
 435:main.c        **** //This one happens when the Bar slider buffer gets filled by SPI
 436:main.c        **** CY_ISR(spis_2_ss)
 437:main.c        **** {
 1588              		.loc 1 437 0
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 0
 1591              		@ frame_needed = 1, uses_anonymous_args = 0
 1592 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 37


 1593              		.cfi_def_cfa_offset 8
 1594              		.cfi_offset 7, -8
 1595              		.cfi_offset 14, -4
 1596 0002 00AF     		add	r7, sp, #0
 1597              		.cfi_def_cfa_register 7
 438:main.c        **** 
 439:main.c        ****     currentBarBuffer = !currentBarBuffer;
 1598              		.loc 1 439 0
 1599 0004 214B     		ldr	r3, .L39
 1600 0006 1B78     		ldrb	r3, [r3]
 1601 0008 DBB2     		uxtb	r3, r3
 1602 000a 002B     		cmp	r3, #0
 1603 000c 0CBF     		ite	eq
 1604 000e 0123     		moveq	r3, #1
 1605 0010 0023     		movne	r3, #0
 1606 0012 DBB2     		uxtb	r3, r3
 1607 0014 1A46     		mov	r2, r3
 1608 0016 1D4B     		ldr	r3, .L39
 1609 0018 1A70     		strb	r2, [r3]
 440:main.c        ****     SPIS_2_ClearRxBuffer();
 1610              		.loc 1 440 0
 1611 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 441:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 1612              		.loc 1 441 0
 1613 001e 1C4B     		ldr	r3, .L39+4
 1614 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 0022 1846     		mov	r0, r3
 1616 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 442:main.c        **** 
 443:main.c        ****     //set up the next DMA transaction
 444:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 1617              		.loc 1 444 0
 1618 0028 184B     		ldr	r3, .L39
 1619 002a 1B78     		ldrb	r3, [r3]
 1620 002c DBB2     		uxtb	r3, r3
 1621 002e 1A46     		mov	r2, r3
 1622 0030 184B     		ldr	r3, .L39+8
 1623 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1624 0034 0623     		movs	r3, #6
 1625 0036 FE22     		movs	r2, #254
 1626 0038 0821     		movs	r1, #8
 1627 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 445:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 1628              		.loc 1 445 0
 1629 003e 134B     		ldr	r3, .L39
 1630 0040 1B78     		ldrb	r3, [r3]
 1631 0042 DBB2     		uxtb	r3, r3
 1632 0044 1A46     		mov	r2, r3
 1633 0046 134B     		ldr	r3, .L39+8
 1634 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1635 004a 104B     		ldr	r3, .L39
 1636 004c 1B78     		ldrb	r3, [r3]
 1637 004e DBB2     		uxtb	r3, r3
 1638 0050 DB00     		lsls	r3, r3, #3
 1639 0052 114A     		ldr	r2, .L39+12
 1640 0054 1344     		add	r3, r3, r2
 1641 0056 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 38


 1642 0058 1A46     		mov	r2, r3
 1643 005a 46F25841 		movw	r1, #25688
 1644 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 446:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 1645              		.loc 1 446 0
 1646 0062 0B4B     		ldr	r3, .L39+4
 1647 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1648 0066 094B     		ldr	r3, .L39
 1649 0068 1B78     		ldrb	r3, [r3]
 1650 006a DBB2     		uxtb	r3, r3
 1651 006c 1946     		mov	r1, r3
 1652 006e 094B     		ldr	r3, .L39+8
 1653 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1654 0072 1946     		mov	r1, r3
 1655 0074 1046     		mov	r0, r2
 1656 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 447:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 1657              		.loc 1 447 0
 1658 007a 054B     		ldr	r3, .L39+4
 1659 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1660 007e 0121     		movs	r1, #1
 1661 0080 1846     		mov	r0, r3
 1662 0082 FFF7FEFF 		bl	CyDmaChEnable
 448:main.c        **** }
 1663              		.loc 1 448 0
 1664 0086 00BF     		nop
 1665 0088 80BD     		pop	{r7, pc}
 1666              	.L40:
 1667 008a 00BF     		.align	2
 1668              	.L39:
 1669 008c 00000000 		.word	currentBarBuffer
 1670 0090 00000000 		.word	rx2Channel
 1671 0094 00000000 		.word	rx2TD
 1672 0098 00000000 		.word	rxBufferBar
 1673              		.cfi_endproc
 1674              	.LFE72:
 1675              		.size	spis_2_ss, .-spis_2_ss
 1676              		.section	.text.spis_1_ss,"ax",%progbits
 1677              		.align	2
 1678              		.global	spis_1_ss
 1679              		.thumb
 1680              		.thumb_func
 1681              		.type	spis_1_ss, %function
 1682              	spis_1_ss:
 1683              	.LFB73:
 449:main.c        **** 
 450:main.c        **** CY_ISR(spis_1_ss)
 451:main.c        **** {
 1684              		.loc 1 451 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 8
 1687              		@ frame_needed = 1, uses_anonymous_args = 0
 1688 0000 90B5     		push	{r4, r7, lr}
 1689              		.cfi_def_cfa_offset 12
 1690              		.cfi_offset 4, -12
 1691              		.cfi_offset 7, -8
 1692              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 39


 1693 0002 83B0     		sub	sp, sp, #12
 1694              		.cfi_def_cfa_offset 24
 1695 0004 00AF     		add	r7, sp, #0
 1696              		.cfi_def_cfa_register 7
 452:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 1697              		.loc 1 452 0
 1698 0006 554B     		ldr	r3, .L45
 1699 0008 1B78     		ldrb	r3, [r3]
 1700 000a DBB2     		uxtb	r3, r3
 1701 000c 002B     		cmp	r3, #0
 1702 000e 0CBF     		ite	eq
 1703 0010 0123     		moveq	r3, #1
 1704 0012 0023     		movne	r3, #0
 1705 0014 DBB2     		uxtb	r3, r3
 1706 0016 1A46     		mov	r2, r3
 1707 0018 504B     		ldr	r3, .L45
 1708 001a 1A70     		strb	r2, [r3]
 453:main.c        **** 
 454:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 1709              		.loc 1 454 0
 1710 001c 4F4B     		ldr	r3, .L45
 1711 001e 1B78     		ldrb	r3, [r3]
 1712 0020 DBB2     		uxtb	r3, r3
 1713 0022 002B     		cmp	r3, #0
 1714 0024 0CBF     		ite	eq
 1715 0026 0123     		moveq	r3, #1
 1716 0028 0023     		movne	r3, #0
 1717 002a DBB2     		uxtb	r3, r3
 1718 002c 1946     		mov	r1, r3
 1719 002e 4C4A     		ldr	r2, .L45+4
 1720 0030 1A23     		movs	r3, #26
 1721 0032 03FB01F3 		mul	r3, r3, r1
 1722 0036 1344     		add	r3, r3, r2
 1723 0038 1B78     		ldrb	r3, [r3]
 1724 003a DBB2     		uxtb	r3, r3
 1725 003c FE2B     		cmp	r3, #254
 1726 003e 50D1     		bne	.L42
 1727              		.loc 1 454 0 is_stmt 0 discriminator 1
 1728 0040 464B     		ldr	r3, .L45
 1729 0042 1B78     		ldrb	r3, [r3]
 1730 0044 DBB2     		uxtb	r3, r3
 1731 0046 002B     		cmp	r3, #0
 1732 0048 0CBF     		ite	eq
 1733 004a 0123     		moveq	r3, #1
 1734 004c 0023     		movne	r3, #0
 1735 004e DBB2     		uxtb	r3, r3
 1736 0050 1946     		mov	r1, r3
 1737 0052 434A     		ldr	r2, .L45+4
 1738 0054 1A23     		movs	r3, #26
 1739 0056 03FB01F3 		mul	r3, r3, r1
 1740 005a 1344     		add	r3, r3, r2
 1741 005c 1933     		adds	r3, r3, #25
 1742 005e 1B78     		ldrb	r3, [r3]
 1743 0060 DBB2     		uxtb	r3, r3
 1744 0062 FD2B     		cmp	r3, #253
 1745 0064 3DD1     		bne	.L42
 1746              	.LBB6:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 40


 455:main.c        ****     {
 456:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 1747              		.loc 1 456 0 is_stmt 1
 1748 0066 0023     		movs	r3, #0
 1749 0068 7B60     		str	r3, [r7, #4]
 1750 006a 34E0     		b	.L43
 1751              	.L44:
 457:main.c        ****         {
 458:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 1752              		.loc 1 458 0 discriminator 3
 1753 006c 3B4B     		ldr	r3, .L45
 1754 006e 1B78     		ldrb	r3, [r3]
 1755 0070 DBB2     		uxtb	r3, r3
 1756 0072 002B     		cmp	r3, #0
 1757 0074 0CBF     		ite	eq
 1758 0076 0123     		moveq	r3, #1
 1759 0078 0023     		movne	r3, #0
 1760 007a DBB2     		uxtb	r3, r3
 1761 007c 1846     		mov	r0, r3
 1762 007e 7B68     		ldr	r3, [r7, #4]
 1763 0080 5B00     		lsls	r3, r3, #1
 1764 0082 0133     		adds	r3, r3, #1
 1765 0084 3649     		ldr	r1, .L45+4
 1766 0086 1A22     		movs	r2, #26
 1767 0088 02FB00F2 		mul	r2, r2, r0
 1768 008c 0A44     		add	r2, r2, r1
 1769 008e 1344     		add	r3, r3, r2
 1770 0090 1B78     		ldrb	r3, [r3]
 1771 0092 DBB2     		uxtb	r3, r3
 1772 0094 9BB2     		uxth	r3, r3
 1773 0096 1B02     		lsls	r3, r3, #8
 1774 0098 9AB2     		uxth	r2, r3
 1775 009a 304B     		ldr	r3, .L45
 1776 009c 1B78     		ldrb	r3, [r3]
 1777 009e DBB2     		uxtb	r3, r3
 1778 00a0 002B     		cmp	r3, #0
 1779 00a2 0CBF     		ite	eq
 1780 00a4 0123     		moveq	r3, #1
 1781 00a6 0023     		movne	r3, #0
 1782 00a8 DBB2     		uxtb	r3, r3
 1783 00aa 1C46     		mov	r4, r3
 1784 00ac 7B68     		ldr	r3, [r7, #4]
 1785 00ae 0133     		adds	r3, r3, #1
 1786 00b0 5B00     		lsls	r3, r3, #1
 1787 00b2 2B48     		ldr	r0, .L45+4
 1788 00b4 1A21     		movs	r1, #26
 1789 00b6 01FB04F1 		mul	r1, r1, r4
 1790 00ba 0144     		add	r1, r1, r0
 1791 00bc 0B44     		add	r3, r3, r1
 1792 00be 1B78     		ldrb	r3, [r3]
 1793 00c0 DBB2     		uxtb	r3, r3
 1794 00c2 9BB2     		uxth	r3, r3
 1795 00c4 1344     		add	r3, r3, r2
 1796 00c6 99B2     		uxth	r1, r3
 1797 00c8 264A     		ldr	r2, .L45+8
 1798 00ca 7B68     		ldr	r3, [r7, #4]
 1799 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 41


 456:main.c        ****         {
 1800              		.loc 1 456 0 discriminator 3
 1801 00d0 7B68     		ldr	r3, [r7, #4]
 1802 00d2 0133     		adds	r3, r3, #1
 1803 00d4 7B60     		str	r3, [r7, #4]
 1804              	.L43:
 456:main.c        ****         {
 1805              		.loc 1 456 0 is_stmt 0 discriminator 1
 1806 00d6 244B     		ldr	r3, .L45+12
 1807 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1808 00da 1A46     		mov	r2, r3
 1809 00dc 7B68     		ldr	r3, [r7, #4]
 1810 00de 9A42     		cmp	r2, r3
 1811 00e0 C4DC     		bgt	.L44
 1812              	.L42:
 1813              	.LBE6:
 459:main.c        ****         }
 460:main.c        ****     }
 461:main.c        ****     SPIS_1_ClearRxBuffer();
 1814              		.loc 1 461 0 is_stmt 1
 1815 00e2 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 462:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 1816              		.loc 1 462 0
 1817 00e6 214B     		ldr	r3, .L45+16
 1818 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1819 00ea 1846     		mov	r0, r3
 1820 00ec FFF7FEFF 		bl	CyDmaClearPendingDrq
 463:main.c        **** 
 464:main.c        ****     //set up the next DMA transaction
 465:main.c        **** 
 466:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 1821              		.loc 1 466 0
 1822 00f0 1A4B     		ldr	r3, .L45
 1823 00f2 1B78     		ldrb	r3, [r3]
 1824 00f4 DBB2     		uxtb	r3, r3
 1825 00f6 1A46     		mov	r2, r3
 1826 00f8 1D4B     		ldr	r3, .L45+20
 1827 00fa 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1828 00fc 0223     		movs	r3, #2
 1829 00fe FE22     		movs	r2, #254
 1830 0100 1A21     		movs	r1, #26
 1831 0102 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 467:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 1832              		.loc 1 467 0
 1833 0106 154B     		ldr	r3, .L45
 1834 0108 1B78     		ldrb	r3, [r3]
 1835 010a DBB2     		uxtb	r3, r3
 1836 010c 1A46     		mov	r2, r3
 1837 010e 184B     		ldr	r3, .L45+20
 1838 0110 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1839 0112 124B     		ldr	r3, .L45
 1840 0114 1B78     		ldrb	r3, [r3]
 1841 0116 DBB2     		uxtb	r3, r3
 1842 0118 1A46     		mov	r2, r3
 1843 011a 1A23     		movs	r3, #26
 1844 011c 03FB02F3 		mul	r3, r3, r2
 1845 0120 0F4A     		ldr	r2, .L45+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 42


 1846 0122 1344     		add	r3, r3, r2
 1847 0124 9BB2     		uxth	r3, r3
 1848 0126 1A46     		mov	r2, r3
 1849 0128 46F25551 		movw	r1, #25941
 1850 012c FFF7FEFF 		bl	CyDmaTdSetAddress
 468:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 1851              		.loc 1 468 0
 1852 0130 0E4B     		ldr	r3, .L45+16
 1853 0132 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1854 0134 094B     		ldr	r3, .L45
 1855 0136 1B78     		ldrb	r3, [r3]
 1856 0138 DBB2     		uxtb	r3, r3
 1857 013a 1946     		mov	r1, r3
 1858 013c 0C4B     		ldr	r3, .L45+20
 1859 013e 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1860 0140 1946     		mov	r1, r3
 1861 0142 1046     		mov	r0, r2
 1862 0144 FFF7FEFF 		bl	CyDmaChSetInitialTd
 469:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 1863              		.loc 1 469 0
 1864 0148 084B     		ldr	r3, .L45+16
 1865 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1866 014c 0121     		movs	r1, #1
 1867 014e 1846     		mov	r0, r3
 1868 0150 FFF7FEFF 		bl	CyDmaChEnable
 470:main.c        **** 
 471:main.c        **** }
 1869              		.loc 1 471 0
 1870 0154 00BF     		nop
 1871 0156 0C37     		adds	r7, r7, #12
 1872              		.cfi_def_cfa_offset 12
 1873 0158 BD46     		mov	sp, r7
 1874              		.cfi_def_cfa_register 13
 1875              		@ sp needed
 1876 015a 90BD     		pop	{r4, r7, pc}
 1877              	.L46:
 1878              		.align	2
 1879              	.L45:
 1880 015c 00000000 		.word	currentPluckBuffer
 1881 0160 00000000 		.word	rxBufferPluck
 1882 0164 00000000 		.word	strings
 1883 0168 00000000 		.word	numStrings
 1884 016c 00000000 		.word	rx1Channel
 1885 0170 00000000 		.word	rx1TD
 1886              		.cfi_endproc
 1887              	.LFE73:
 1888              		.size	spis_1_ss, .-spis_1_ss
 1889              		.section	.rodata
 1890              		.align	2
 1891              	.LC0:
 1892 0400 2000     		.ascii	" \000"
 1893              		.global	__aeabi_f2iz
 1894              		.global	__aeabi_fcmpgt
 1895 0402 0000     		.align	2
 1896              	.LC1:
 1897 0404 4649524D 		.ascii	"FIRMWARE   \000"
 1897      57415245 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 43


 1897      20202000 
 1898              		.align	2
 1899              	.LC2:
 1900 0410 55504441 		.ascii	"UPDATE     \000"
 1900      54452020 
 1900      20202000 
 1901              		.align	2
 1902              	.LC3:
 1903 041c 20202020 		.ascii	"           \000"
 1903      20202020 
 1903      20202000 
 1904              		.section	.text.main,"ax",%progbits
 1905              		.align	2
 1906              		.global	main
 1907              		.thumb
 1908              		.thumb_func
 1909              		.type	main, %function
 1910              	main:
 1911              	.LFB74:
 472:main.c        **** 
 473:main.c        **** 
 474:main.c        **** 
 475:main.c        **** 
 476:main.c        **** int main(void)
 477:main.c        **** {
 1912              		.loc 1 477 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 168
 1915              		@ frame_needed = 1, uses_anonymous_args = 0
 1916 0000 B0B5     		push	{r4, r5, r7, lr}
 1917              		.cfi_def_cfa_offset 16
 1918              		.cfi_offset 4, -16
 1919              		.cfi_offset 5, -12
 1920              		.cfi_offset 7, -8
 1921              		.cfi_offset 14, -4
 1922 0002 ACB0     		sub	sp, sp, #176
 1923              		.cfi_def_cfa_offset 192
 1924 0004 02AF     		add	r7, sp, #8
 1925              		.cfi_def_cfa 7, 184
 478:main.c        ****     
 479:main.c        **** 	CYGlobalIntEnable; 
 1926              		.loc 1 479 0
 1927              		.syntax unified
 1928              	@ 479 "main.c" 1
 1929 0006 62B6     		CPSIE   i
 1930              	@ 0 "" 2
 480:main.c        ****     EEPROM_Start();
 1931              		.loc 1 480 0
 1932              		.thumb
 1933              		.syntax unified
 1934 0008 FFF7FEFF 		bl	EEPROM_Start
 481:main.c        ****      #ifdef BOOTLOAD_STYLE
 482:main.c        ****      //since we sucessfully booted this firmware, set it to be the default until the brain chip get
 483:main.c        ****     Bootloadable_SET_RUN_TYPE(Bootloadable_SCHEDULE_BTLDB);
 484:main.c        ****     #endif
 485:main.c        **** 
 486:main.c        ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 44


 487:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 1935              		.loc 1 487 0
 1936 000c 944B     		ldr	r3, .L178
 1937 000e 1846     		mov	r0, r3
 1938 0010 FFF7FEFF 		bl	Em_EEPROM_Init
 1939 0014 0346     		mov	r3, r0
 1940 0016 1A46     		mov	r2, r3
 1941 0018 924B     		ldr	r3, .L178+4
 1942 001a 1A70     		strb	r2, [r3]
 488:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 489:main.c        ****     {
 490:main.c        ****        // HandleError();
 491:main.c        ****     }
 492:main.c        ****   
 493:main.c        ****     I2C_1_Start();  
 1943              		.loc 1 493 0
 1944 001c FFF7FEFF 		bl	I2C_1_Start
 494:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 1945              		.loc 1 494 0
 1946 0020 0120     		movs	r0, #1
 1947 0022 FFF7FEFF 		bl	USB_SetPowerStatus
 495:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 1948              		.loc 1 495 0
 1949 0026 9048     		ldr	r0, .L178+8
 1950 0028 FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 496:main.c        ****     
 497:main.c        ****     CyDelay(4000);
 1951              		.loc 1 497 0
 1952 002c 4FF47A60 		mov	r0, #4000
 1953 0030 FFF7FEFF 		bl	CyDelay
 498:main.c        ****     //read from eeprom all the stored user settings
 499:main.c        ****     patchNum = EEPROM_ReadByte(EEPROM_CURRENT_PRESET_OFFSET);
 1954              		.loc 1 499 0
 1955 0034 40F2F270 		movw	r0, #2034
 1956 0038 FFF7FEFF 		bl	EEPROM_ReadByte
 1957 003c 0346     		mov	r3, r0
 1958 003e 1A46     		mov	r2, r3
 1959 0040 8A4B     		ldr	r3, .L178+12
 1960 0042 1A70     		strb	r2, [r3]
 500:main.c        ****     neckByte = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1961              		.loc 1 500 0
 1962 0044 40F2FE70 		movw	r0, #2046
 1963 0048 FFF7FEFF 		bl	EEPROM_ReadByte
 1964 004c 0346     		mov	r3, r0
 1965 004e 1A46     		mov	r2, r3
 1966 0050 874B     		ldr	r3, .L178+16
 1967 0052 1A70     		strb	r2, [r3]
 501:main.c        ****     necks[0] = (neckByte >> 5) & 7;
 1968              		.loc 1 501 0
 1969 0054 864B     		ldr	r3, .L178+16
 1970 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1971 0058 5B09     		lsrs	r3, r3, #5
 1972 005a DAB2     		uxtb	r2, r3
 1973 005c 854B     		ldr	r3, .L178+20
 1974 005e 1A70     		strb	r2, [r3]
 502:main.c        ****     necks[1] = (neckByte >> 2) & 7;
 1975              		.loc 1 502 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 45


 1976 0060 834B     		ldr	r3, .L178+16
 1977 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1978 0064 9B08     		lsrs	r3, r3, #2
 1979 0066 DBB2     		uxtb	r3, r3
 1980 0068 03F00703 		and	r3, r3, #7
 1981 006c DAB2     		uxtb	r2, r3
 1982 006e 814B     		ldr	r3, .L178+20
 1983 0070 5A70     		strb	r2, [r3, #1]
 503:main.c        ****     currentNeck = neckByte & 1;
 1984              		.loc 1 503 0
 1985 0072 7F4B     		ldr	r3, .L178+16
 1986 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1987 0076 03F00103 		and	r3, r3, #1
 1988 007a DAB2     		uxtb	r2, r3
 1989 007c 7E4B     		ldr	r3, .L178+24
 1990 007e 1A70     		strb	r2, [r3]
 504:main.c        ****     transposeSemitones = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET);
 1991              		.loc 1 504 0
 1992 0080 40F2F470 		movw	r0, #2036
 1993 0084 FFF7FEFF 		bl	EEPROM_ReadByte
 1994 0088 0346     		mov	r3, r0
 1995 008a 5AB2     		sxtb	r2, r3
 1996 008c 7B4B     		ldr	r3, .L178+28
 1997 008e 1A70     		strb	r2, [r3]
 505:main.c        ****     transposeCents = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET + 1);
 1998              		.loc 1 505 0
 1999 0090 40F2F570 		movw	r0, #2037
 2000 0094 FFF7FEFF 		bl	EEPROM_ReadByte
 2001 0098 0346     		mov	r3, r0
 2002 009a 5AB2     		sxtb	r2, r3
 2003 009c 784B     		ldr	r3, .L178+32
 2004 009e 1A70     		strb	r2, [r3]
 506:main.c        ****     transposeFloat = ((float)transposeSemitones) + (((float)transposeCents) * 0.01f);
 2005              		.loc 1 506 0
 2006 00a0 764B     		ldr	r3, .L178+28
 2007 00a2 93F90030 		ldrsb	r3, [r3]
 2008 00a6 1846     		mov	r0, r3
 2009 00a8 FFF7FEFF 		bl	__aeabi_i2f
 2010 00ac 0446     		mov	r4, r0
 2011 00ae 744B     		ldr	r3, .L178+32
 2012 00b0 93F90030 		ldrsb	r3, [r3]
 2013 00b4 1846     		mov	r0, r3
 2014 00b6 FFF7FEFF 		bl	__aeabi_i2f
 2015 00ba 0346     		mov	r3, r0
 2016 00bc 7149     		ldr	r1, .L178+36
 2017 00be 1846     		mov	r0, r3
 2018 00c0 FFF7FEFF 		bl	__aeabi_fmul
 2019 00c4 0346     		mov	r3, r0
 2020 00c6 1946     		mov	r1, r3
 2021 00c8 2046     		mov	r0, r4
 2022 00ca FFF7FEFF 		bl	__aeabi_fadd
 2023 00ce 0346     		mov	r3, r0
 2024 00d0 1A46     		mov	r2, r3
 2025 00d2 6D4B     		ldr	r3, .L178+40
 2026 00d4 1A60     		str	r2, [r3]	@ float
 507:main.c        ****     midiSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&1;
 2027              		.loc 1 507 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 46


 2028 00d6 40F2FA70 		movw	r0, #2042
 2029 00da FFF7FEFF 		bl	EEPROM_ReadByte
 2030 00de 0346     		mov	r3, r0
 2031 00e0 03F00103 		and	r3, r3, #1
 2032 00e4 DAB2     		uxtb	r2, r3
 2033 00e6 694B     		ldr	r3, .L178+44
 2034 00e8 1A70     		strb	r2, [r3]
 508:main.c        ****     midiBarSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&(1<<1);
 2035              		.loc 1 508 0
 2036 00ea 40F2FA70 		movw	r0, #2042
 2037 00ee FFF7FEFF 		bl	EEPROM_ReadByte
 2038 00f2 0346     		mov	r3, r0
 2039 00f4 03F00203 		and	r3, r3, #2
 2040 00f8 DAB2     		uxtb	r2, r3
 2041 00fa 654B     		ldr	r3, .L178+48
 2042 00fc 1A70     		strb	r2, [r3]
 509:main.c        ****     pitchSmoothing = EEPROM_ReadByte(EEPROM_PITCHSMOOTHING_OFFSET);
 2043              		.loc 1 509 0
 2044 00fe 4FF4FF60 		mov	r0, #2040
 2045 0102 FFF7FEFF 		bl	EEPROM_ReadByte
 2046 0106 0346     		mov	r3, r0
 2047 0108 1A46     		mov	r2, r3
 2048 010a 624B     		ldr	r3, .L178+52
 2049 010c 1A70     		strb	r2, [r3]
 510:main.c        ****     controlSmoothing = EEPROM_ReadByte(EEPROM_CONTROLSMOOTHING_OFFSET);
 2050              		.loc 1 510 0
 2051 010e 40F2F970 		movw	r0, #2041
 2052 0112 FFF7FEFF 		bl	EEPROM_ReadByte
 2053 0116 0346     		mov	r3, r0
 2054 0118 1A46     		mov	r2, r3
 2055 011a 5F4B     		ldr	r3, .L178+56
 2056 011c 1A70     		strb	r2, [r3]
 511:main.c        ****     deadZone = EEPROM_ReadByte(EEPROM_DEADZONES_OFFSET);
 2057              		.loc 1 511 0
 2058 011e 40F2F770 		movw	r0, #2039
 2059 0122 FFF7FEFF 		bl	EEPROM_ReadByte
 2060 0126 0346     		mov	r3, r0
 2061 0128 1A46     		mov	r2, r3
 2062 012a 5C4B     		ldr	r3, .L178+60
 2063 012c 1A70     		strb	r2, [r3]
 512:main.c        ****     octaveAction = EEPROM_ReadByte(EEPROM_OCTAVE_ACTION_OFFSET);
 2064              		.loc 1 512 0
 2065 012e 40F2F670 		movw	r0, #2038
 2066 0132 FFF7FEFF 		bl	EEPROM_ReadByte
 2067 0136 0346     		mov	r3, r0
 2068 0138 1A46     		mov	r2, r3
 2069 013a 594B     		ldr	r3, .L178+64
 2070 013c 1A70     		strb	r2, [r3]
 513:main.c        ****     stringRepresentation[0] = (EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET)>>4) & 15; //first 4 bits o
 2071              		.loc 1 513 0
 2072 013e 40F2F370 		movw	r0, #2035
 2073 0142 FFF7FEFF 		bl	EEPROM_ReadByte
 2074 0146 0346     		mov	r3, r0
 2075 0148 1B09     		lsrs	r3, r3, #4
 2076 014a DAB2     		uxtb	r2, r3
 2077 014c 554B     		ldr	r3, .L178+68
 2078 014e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 47


 514:main.c        ****     stringRepresentation[1] = EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET) & 15;//last 4 bits of the b
 2079              		.loc 1 514 0
 2080 0150 40F2F370 		movw	r0, #2035
 2081 0154 FFF7FEFF 		bl	EEPROM_ReadByte
 2082 0158 0346     		mov	r3, r0
 2083 015a 03F00F03 		and	r3, r3, #15
 2084 015e DAB2     		uxtb	r2, r3
 2085 0160 504B     		ldr	r3, .L178+68
 2086 0162 5A70     		strb	r2, [r3, #1]
 515:main.c        ****     calculateStringRepDivider();
 2087              		.loc 1 515 0
 2088 0164 FFF7FEFF 		bl	calculateStringRepDivider
 516:main.c        ****     dualSlider = EEPROM_ReadByte(EEPROM_DUAL_SLIDER_OFFSET) & 1;
 2089              		.loc 1 516 0
 2090 0168 40F2FD70 		movw	r0, #2045
 2091 016c FFF7FEFF 		bl	EEPROM_ReadByte
 2092 0170 0346     		mov	r3, r0
 2093 0172 03F00103 		and	r3, r3, #1
 2094 0176 DAB2     		uxtb	r2, r3
 2095 0178 4B4B     		ldr	r3, .L178+72
 2096 017a 1A70     		strb	r2, [r3]
 517:main.c        ****     uint16_t pedal_inverted_byte = (EEPROM_ReadByte(EEPROM_PEDAL_INVERTED_OFFSET) << 8) + EEPROM_Re
 2097              		.loc 1 517 0
 2098 017c 40F2FB70 		movw	r0, #2043
 2099 0180 FFF7FEFF 		bl	EEPROM_ReadByte
 2100 0184 0346     		mov	r3, r0
 2101 0186 9BB2     		uxth	r3, r3
 2102 0188 1B02     		lsls	r3, r3, #8
 2103 018a 9CB2     		uxth	r4, r3
 2104 018c 40F2FC70 		movw	r0, #2044
 2105 0190 FFF7FEFF 		bl	EEPROM_ReadByte
 2106 0194 0346     		mov	r3, r0
 2107 0196 9BB2     		uxth	r3, r3
 2108 0198 2344     		add	r3, r3, r4
 2109 019a 7B87     		strh	r3, [r7, #58]	@ movhi
 2110              	.LBB7:
 518:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2111              		.loc 1 518 0
 2112 019c 0023     		movs	r3, #0
 2113 019e C7F8A430 		str	r3, [r7, #164]
 2114 01a2 15E0     		b	.L48
 2115              	.L49:
 519:main.c        ****     {
 520:main.c        ****         pedal_inverted[i] = pedal_inverted_byte & (1<<i);
 2116              		.loc 1 520 0 discriminator 3
 2117 01a4 7B8F     		ldrh	r3, [r7, #58]	@ movhi
 2118 01a6 5AB2     		sxtb	r2, r3
 2119 01a8 0121     		movs	r1, #1
 2120 01aa D7F8A430 		ldr	r3, [r7, #164]
 2121 01ae 01FA03F3 		lsl	r3, r1, r3
 2122 01b2 5BB2     		sxtb	r3, r3
 2123 01b4 1340     		ands	r3, r3, r2
 2124 01b6 5BB2     		sxtb	r3, r3
 2125 01b8 D9B2     		uxtb	r1, r3
 2126 01ba 3C4A     		ldr	r2, .L178+76
 2127 01bc D7F8A430 		ldr	r3, [r7, #164]
 2128 01c0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 48


 2129 01c2 0A46     		mov	r2, r1
 2130 01c4 1A70     		strb	r2, [r3]
 518:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2131              		.loc 1 518 0 discriminator 3
 2132 01c6 D7F8A430 		ldr	r3, [r7, #164]
 2133 01ca 0133     		adds	r3, r3, #1
 2134 01cc C7F8A430 		str	r3, [r7, #164]
 2135              	.L48:
 518:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2136              		.loc 1 518 0 is_stmt 0 discriminator 1
 2137 01d0 D7F8A430 		ldr	r3, [r7, #164]
 2138 01d4 092B     		cmp	r3, #9
 2139 01d6 E5DD     		ble	.L49
 2140              	.LBE7:
 2141              	.LBB8:
 521:main.c        ****     }
 522:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 2142              		.loc 1 522 0 is_stmt 1
 2143 01d8 0023     		movs	r3, #0
 2144 01da C7F8A030 		str	r3, [r7, #160]
 2145 01de E4E0     		b	.L50
 2146              	.L57:
 2147              	.LBB9:
 523:main.c        ****     {
 524:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
 2148              		.loc 1 524 0
 2149 01e0 0023     		movs	r3, #0
 2150 01e2 C7F89C30 		str	r3, [r7, #156]
 2151 01e6 27E0     		b	.L51
 2152              	.L52:
 525:main.c        ****         {
 526:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 2153              		.loc 1 526 0 discriminator 3
 2154 01e8 D7F8A030 		ldr	r3, [r7, #160]
 2155 01ec 9BB2     		uxth	r3, r3
 2156 01ee 1A46     		mov	r2, r3	@ movhi
 2157 01f0 1201     		lsls	r2, r2, #4
 2158 01f2 1A44     		add	r2, r2, r3
 2159 01f4 9200     		lsls	r2, r2, #2
 2160 01f6 1A44     		add	r2, r2, r3
 2161 01f8 5200     		lsls	r2, r2, #1
 2162 01fa 1344     		add	r3, r3, r2
 2163 01fc 5B00     		lsls	r3, r3, #1
 2164 01fe 9AB2     		uxth	r2, r3
 2165 0200 D7F89C30 		ldr	r3, [r7, #156]
 2166 0204 9BB2     		uxth	r3, r3
 2167 0206 1344     		add	r3, r3, r2
 2168 0208 9BB2     		uxth	r3, r3
 2169 020a 1846     		mov	r0, r3
 2170 020c FFF7FEFF 		bl	EEPROM_ReadByte
 2171 0210 0346     		mov	r3, r0
 2172 0212 1846     		mov	r0, r3
 2173 0214 2649     		ldr	r1, .L178+80
 2174 0216 D7F8A020 		ldr	r2, [r7, #160]
 2175 021a 1346     		mov	r3, r2
 2176 021c DB00     		lsls	r3, r3, #3
 2177 021e 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 49


 2178 0220 5B00     		lsls	r3, r3, #1
 2179 0222 CA18     		adds	r2, r1, r3
 2180 0224 D7F89C30 		ldr	r3, [r7, #156]
 2181 0228 1344     		add	r3, r3, r2
 2182 022a 0246     		mov	r2, r0
 2183 022c 1A70     		strb	r2, [r3]
 524:main.c        ****         {
 2184              		.loc 1 524 0 discriminator 3
 2185 022e D7F89C30 		ldr	r3, [r7, #156]
 2186 0232 0133     		adds	r3, r3, #1
 2187 0234 C7F89C30 		str	r3, [r7, #156]
 2188              	.L51:
 524:main.c        ****         {
 2189              		.loc 1 524 0 is_stmt 0 discriminator 1
 2190 0238 D7F89C30 		ldr	r3, [r7, #156]
 2191 023c 0D2B     		cmp	r3, #13
 2192 023e D3DD     		ble	.L52
 2193              	.LBE9:
 2194              	.LBB10:
 527:main.c        ****         }
 528:main.c        ****         for (int i = 0; i < 11; i++)
 2195              		.loc 1 528 0 is_stmt 1
 2196 0240 0023     		movs	r3, #0
 2197 0242 C7F89830 		str	r3, [r7, #152]
 2198 0246 A6E0     		b	.L53
 2199              	.L56:
 2200              	.LBB11:
 529:main.c        ****     	{
 530:main.c        ****     		int pedalStartLoc = (i*24);
 2201              		.loc 1 530 0
 2202 0248 D7F89820 		ldr	r2, [r7, #152]
 2203 024c 1346     		mov	r3, r2
 2204 024e 5B00     		lsls	r3, r3, #1
 2205 0250 1344     		add	r3, r3, r2
 2206 0252 DB00     		lsls	r3, r3, #3
 2207 0254 7B63     		str	r3, [r7, #52]
 2208              	.LBB12:
 531:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 2209              		.loc 1 531 0
 2210 0256 0023     		movs	r3, #0
 2211 0258 C7F89430 		str	r3, [r7, #148]
 2212 025c 92E0     		b	.L54
 2213              	.L179:
 2214 025e 00BF     		.align	2
 2215              	.L178:
 2216 0260 00000000 		.word	Em_EEPROM_em_EepromStorage
 2217 0264 00000000 		.word	eepromReturnValue
 2218 0268 00000000 		.word	Vbus_function
 2219 026c 00000000 		.word	patchNum
 2220 0270 00000000 		.word	neckByte
 2221 0274 00000000 		.word	necks
 2222 0278 00000000 		.word	currentNeck
 2223 027c 00000000 		.word	transposeSemitones
 2224 0280 00000000 		.word	transposeCents
 2225 0284 0AD7233C 		.word	1008981770
 2226 0288 00000000 		.word	transposeFloat
 2227 028c 00000000 		.word	midiSendOn
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 50


 2228 0290 00000000 		.word	midiBarSendOn
 2229 0294 00000000 		.word	pitchSmoothing
 2230 0298 00000000 		.word	controlSmoothing
 2231 029c 00000000 		.word	deadZone
 2232 02a0 00000000 		.word	octaveAction
 2233 02a4 00000000 		.word	stringRepresentation
 2234 02a8 00000000 		.word	dualSlider
 2235 02ac 00000000 		.word	pedal_inverted
 2236 02b0 00000000 		.word	copedentNamesArray
 2237              	.L55:
 2238              	.LBB13:
 532:main.c        ****     		{
 533:main.c        ****                 
 534:main.c        ****                 int stringStartLoc = (j*2);
 2239              		.loc 1 534 0 discriminator 3
 2240 02b4 D7F89430 		ldr	r3, [r7, #148]
 2241 02b8 5B00     		lsls	r3, r3, #1
 2242 02ba 3B63     		str	r3, [r7, #48]
 535:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 2243              		.loc 1 535 0 discriminator 3
 2244 02bc 3B6B     		ldr	r3, [r7, #48]
 2245 02be 9AB2     		uxth	r2, r3
 2246 02c0 7B6B     		ldr	r3, [r7, #52]
 2247 02c2 9BB2     		uxth	r3, r3
 2248 02c4 1344     		add	r3, r3, r2
 2249 02c6 9AB2     		uxth	r2, r3
 2250 02c8 D7F8A030 		ldr	r3, [r7, #160]
 2251 02cc 9BB2     		uxth	r3, r3
 2252 02ce 1946     		mov	r1, r3	@ movhi
 2253 02d0 0901     		lsls	r1, r1, #4
 2254 02d2 1944     		add	r1, r1, r3
 2255 02d4 8900     		lsls	r1, r1, #2
 2256 02d6 1944     		add	r1, r1, r3
 2257 02d8 4900     		lsls	r1, r1, #1
 2258 02da 0B44     		add	r3, r3, r1
 2259 02dc 5B00     		lsls	r3, r3, #1
 2260 02de 9BB2     		uxth	r3, r3
 2261 02e0 1344     		add	r3, r3, r2
 2262 02e2 9BB2     		uxth	r3, r3
 2263 02e4 0E33     		adds	r3, r3, #14
 2264 02e6 9BB2     		uxth	r3, r3
 2265 02e8 1846     		mov	r0, r3
 2266 02ea FFF7FEFF 		bl	EEPROM_ReadByte
 2267 02ee 0346     		mov	r3, r0
 2268 02f0 FB85     		strh	r3, [r7, #46]	@ movhi
 536:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 2269              		.loc 1 536 0 discriminator 3
 2270 02f2 3B6B     		ldr	r3, [r7, #48]
 2271 02f4 9AB2     		uxth	r2, r3
 2272 02f6 7B6B     		ldr	r3, [r7, #52]
 2273 02f8 9BB2     		uxth	r3, r3
 2274 02fa 1344     		add	r3, r3, r2
 2275 02fc 9AB2     		uxth	r2, r3
 2276 02fe D7F8A030 		ldr	r3, [r7, #160]
 2277 0302 9BB2     		uxth	r3, r3
 2278 0304 1946     		mov	r1, r3	@ movhi
 2279 0306 0901     		lsls	r1, r1, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 51


 2280 0308 1944     		add	r1, r1, r3
 2281 030a 8900     		lsls	r1, r1, #2
 2282 030c 1944     		add	r1, r1, r3
 2283 030e 4900     		lsls	r1, r1, #1
 2284 0310 0B44     		add	r3, r3, r1
 2285 0312 5B00     		lsls	r3, r3, #1
 2286 0314 9BB2     		uxth	r3, r3
 2287 0316 1344     		add	r3, r3, r2
 2288 0318 9BB2     		uxth	r3, r3
 2289 031a 0F33     		adds	r3, r3, #15
 2290 031c 9BB2     		uxth	r3, r3
 2291 031e 1846     		mov	r0, r3
 2292 0320 FFF7FEFF 		bl	EEPROM_ReadByte
 2293 0324 0346     		mov	r3, r0
 2294 0326 BB85     		strh	r3, [r7, #44]	@ movhi
 537:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 2295              		.loc 1 537 0 discriminator 3
 2296 0328 FB8D     		ldrh	r3, [r7, #46]
 2297 032a 1A02     		lsls	r2, r3, #8
 2298 032c BB8D     		ldrh	r3, [r7, #44]
 2299 032e 1344     		add	r3, r3, r2
 2300 0330 1846     		mov	r0, r3
 2301 0332 FFF7FEFF 		bl	__aeabi_i2f
 2302 0336 0346     		mov	r3, r0
 2303 0338 4FF06E51 		mov	r1, #998244352
 2304 033c 1846     		mov	r0, r3
 2305 033e FFF7FEFF 		bl	__aeabi_fmul
 2306 0342 0346     		mov	r3, r0
 2307 0344 4FF08641 		mov	r1, #1124073472
 2308 0348 1846     		mov	r0, r3
 2309 034a FFF7FEFF 		bl	__aeabi_fsub
 2310 034e 0346     		mov	r3, r0
 2311 0350 1C46     		mov	r4, r3
 2312 0352 7E48     		ldr	r0, .L180
 2313 0354 D7F89830 		ldr	r3, [r7, #152]
 2314 0358 D7F8A010 		ldr	r1, [r7, #160]
 2315 035c 1A46     		mov	r2, r3
 2316 035e 5200     		lsls	r2, r2, #1
 2317 0360 1A44     		add	r2, r2, r3
 2318 0362 9300     		lsls	r3, r2, #2
 2319 0364 1A46     		mov	r2, r3
 2320 0366 0B46     		mov	r3, r1
 2321 0368 5B01     		lsls	r3, r3, #5
 2322 036a 0B44     		add	r3, r3, r1
 2323 036c 9B00     		lsls	r3, r3, #2
 2324 036e 1A44     		add	r2, r2, r3
 2325 0370 D7F89430 		ldr	r3, [r7, #148]
 2326 0374 1344     		add	r3, r3, r2
 2327 0376 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 2328              	.LBE13:
 531:main.c        ****     		{
 2329              		.loc 1 531 0 discriminator 3
 2330 037a D7F89430 		ldr	r3, [r7, #148]
 2331 037e 0133     		adds	r3, r3, #1
 2332 0380 C7F89430 		str	r3, [r7, #148]
 2333              	.L54:
 531:main.c        ****     		{
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 52


 2334              		.loc 1 531 0 is_stmt 0 discriminator 1
 2335 0384 D7F89430 		ldr	r3, [r7, #148]
 2336 0388 0B2B     		cmp	r3, #11
 2337 038a 93DD     		ble	.L55
 2338              	.LBE12:
 2339              	.LBE11:
 528:main.c        ****     	{
 2340              		.loc 1 528 0 is_stmt 1 discriminator 2
 2341 038c D7F89830 		ldr	r3, [r7, #152]
 2342 0390 0133     		adds	r3, r3, #1
 2343 0392 C7F89830 		str	r3, [r7, #152]
 2344              	.L53:
 528:main.c        ****     	{
 2345              		.loc 1 528 0 is_stmt 0 discriminator 1
 2346 0396 D7F89830 		ldr	r3, [r7, #152]
 2347 039a 0A2B     		cmp	r3, #10
 2348 039c 7FF754AF 		ble	.L56
 2349              	.LBE10:
 522:main.c        ****     {
 2350              		.loc 1 522 0 is_stmt 1 discriminator 2
 2351 03a0 D7F8A030 		ldr	r3, [r7, #160]
 2352 03a4 0133     		adds	r3, r3, #1
 2353 03a6 C7F8A030 		str	r3, [r7, #160]
 2354              	.L50:
 522:main.c        ****     {
 2355              		.loc 1 522 0 is_stmt 0 discriminator 1
 2356 03aa D7F8A030 		ldr	r3, [r7, #160]
 2357 03ae 062B     		cmp	r3, #6
 2358 03b0 7FF716AF 		ble	.L57
 2359              	.LBE8:
 2360              	.LBB14:
 538:main.c        ****             }
 539:main.c        ****     	}
 540:main.c        ****     }
 541:main.c        **** 
 542:main.c        ****     
 543:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2361              		.loc 1 543 0 is_stmt 1
 2362 03b4 0023     		movs	r3, #0
 2363 03b6 C7F89030 		str	r3, [r7, #144]
 2364 03ba 49E0     		b	.L58
 2365              	.L59:
 544:main.c        ****     {
 545:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_R
 2366              		.loc 1 545 0 discriminator 3
 2367 03bc D7F89030 		ldr	r3, [r7, #144]
 2368 03c0 9BB2     		uxth	r3, r3
 2369 03c2 9B00     		lsls	r3, r3, #2
 2370 03c4 9BB2     		uxth	r3, r3
 2371 03c6 03F29A73 		addw	r3, r3, #1946
 2372 03ca 9BB2     		uxth	r3, r3
 2373 03cc 1846     		mov	r0, r3
 2374 03ce FFF7FEFF 		bl	EEPROM_ReadByte
 2375 03d2 0346     		mov	r3, r0
 2376 03d4 9BB2     		uxth	r3, r3
 2377 03d6 1B02     		lsls	r3, r3, #8
 2378 03d8 9CB2     		uxth	r4, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 53


 2379 03da D7F89030 		ldr	r3, [r7, #144]
 2380 03de 9BB2     		uxth	r3, r3
 2381 03e0 9B00     		lsls	r3, r3, #2
 2382 03e2 9BB2     		uxth	r3, r3
 2383 03e4 03F29B73 		addw	r3, r3, #1947
 2384 03e8 9BB2     		uxth	r3, r3
 2385 03ea 1846     		mov	r0, r3
 2386 03ec FFF7FEFF 		bl	EEPROM_ReadByte
 2387 03f0 0346     		mov	r3, r0
 2388 03f2 9BB2     		uxth	r3, r3
 2389 03f4 2344     		add	r3, r3, r4
 2390 03f6 99B2     		uxth	r1, r3
 2391 03f8 554A     		ldr	r2, .L180+4
 2392 03fa D7F89030 		ldr	r3, [r7, #144]
 2393 03fe 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 546:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (E
 2394              		.loc 1 546 0 discriminator 3
 2395 0402 D7F89030 		ldr	r3, [r7, #144]
 2396 0406 03F2E713 		addw	r3, r3, #487
 2397 040a 9BB2     		uxth	r3, r3
 2398 040c 9B00     		lsls	r3, r3, #2
 2399 040e 9BB2     		uxth	r3, r3
 2400 0410 1846     		mov	r0, r3
 2401 0412 FFF7FEFF 		bl	EEPROM_ReadByte
 2402 0416 0346     		mov	r3, r0
 2403 0418 9BB2     		uxth	r3, r3
 2404 041a 1B02     		lsls	r3, r3, #8
 2405 041c 9CB2     		uxth	r4, r3
 2406 041e D7F89030 		ldr	r3, [r7, #144]
 2407 0422 9BB2     		uxth	r3, r3
 2408 0424 9B00     		lsls	r3, r3, #2
 2409 0426 9BB2     		uxth	r3, r3
 2410 0428 03F29D73 		addw	r3, r3, #1949
 2411 042c 9BB2     		uxth	r3, r3
 2412 042e 1846     		mov	r0, r3
 2413 0430 FFF7FEFF 		bl	EEPROM_ReadByte
 2414 0434 0346     		mov	r3, r0
 2415 0436 9BB2     		uxth	r3, r3
 2416 0438 2344     		add	r3, r3, r4
 2417 043a 99B2     		uxth	r1, r3
 2418 043c 454A     		ldr	r2, .L180+8
 2419 043e D7F89030 		ldr	r3, [r7, #144]
 2420 0442 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 543:main.c        ****     {
 2421              		.loc 1 543 0 discriminator 3
 2422 0446 D7F89030 		ldr	r3, [r7, #144]
 2423 044a 0133     		adds	r3, r3, #1
 2424 044c C7F89030 		str	r3, [r7, #144]
 2425              	.L58:
 543:main.c        ****     {
 2426              		.loc 1 543 0 is_stmt 0 discriminator 1
 2427 0450 D7F89030 		ldr	r3, [r7, #144]
 2428 0454 092B     		cmp	r3, #9
 2429 0456 B1DD     		ble	.L59
 2430              	.LBE14:
 547:main.c        ****     }
 548:main.c        ****     calculatePedalRatios();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 54


 2431              		.loc 1 548 0 is_stmt 1
 2432 0458 FFF7FEFF 		bl	calculatePedalRatios
 2433              	.LBB15:
 549:main.c        ****                 
 550:main.c        ****     
 551:main.c        ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 2434              		.loc 1 551 0
 2435 045c 0023     		movs	r3, #0
 2436 045e C7F88C30 		str	r3, [r7, #140]
 2437 0462 4AE0     		b	.L60
 2438              	.L61:
 552:main.c        ****     {
 553:main.c        ****         fretMeasurements[0][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + (i*4)) << 8) + (
 2439              		.loc 1 553 0 discriminator 3
 2440 0464 D7F88C30 		ldr	r3, [r7, #140]
 2441 0468 9BB2     		uxth	r3, r3
 2442 046a 9B00     		lsls	r3, r3, #2
 2443 046c 9BB2     		uxth	r3, r3
 2444 046e 03F2C273 		addw	r3, r3, #1986
 2445 0472 9BB2     		uxth	r3, r3
 2446 0474 1846     		mov	r0, r3
 2447 0476 FFF7FEFF 		bl	EEPROM_ReadByte
 2448 047a 0346     		mov	r3, r0
 2449 047c 9BB2     		uxth	r3, r3
 2450 047e 1B02     		lsls	r3, r3, #8
 2451 0480 9CB2     		uxth	r4, r3
 2452 0482 D7F88C30 		ldr	r3, [r7, #140]
 2453 0486 9BB2     		uxth	r3, r3
 2454 0488 9B00     		lsls	r3, r3, #2
 2455 048a 9BB2     		uxth	r3, r3
 2456 048c 03F2C373 		addw	r3, r3, #1987
 2457 0490 9BB2     		uxth	r3, r3
 2458 0492 1846     		mov	r0, r3
 2459 0494 FFF7FEFF 		bl	EEPROM_ReadByte
 2460 0498 0346     		mov	r3, r0
 2461 049a 9BB2     		uxth	r3, r3
 2462 049c 2344     		add	r3, r3, r4
 2463 049e 99B2     		uxth	r1, r3
 2464 04a0 2D4A     		ldr	r2, .L180+12
 2465 04a2 D7F88C30 		ldr	r3, [r7, #140]
 2466 04a6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 554:main.c        ****         fretMeasurements[1][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 2)) << 
 2467              		.loc 1 554 0 discriminator 3
 2468 04aa D7F88C30 		ldr	r3, [r7, #140]
 2469 04ae 03F2F113 		addw	r3, r3, #497
 2470 04b2 9BB2     		uxth	r3, r3
 2471 04b4 9B00     		lsls	r3, r3, #2
 2472 04b6 9BB2     		uxth	r3, r3
 2473 04b8 1846     		mov	r0, r3
 2474 04ba FFF7FEFF 		bl	EEPROM_ReadByte
 2475 04be 0346     		mov	r3, r0
 2476 04c0 9BB2     		uxth	r3, r3
 2477 04c2 1B02     		lsls	r3, r3, #8
 2478 04c4 9CB2     		uxth	r4, r3
 2479 04c6 D7F88C30 		ldr	r3, [r7, #140]
 2480 04ca 9BB2     		uxth	r3, r3
 2481 04cc 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 55


 2482 04ce 9BB2     		uxth	r3, r3
 2483 04d0 03F2C573 		addw	r3, r3, #1989
 2484 04d4 9BB2     		uxth	r3, r3
 2485 04d6 1846     		mov	r0, r3
 2486 04d8 FFF7FEFF 		bl	EEPROM_ReadByte
 2487 04dc 0346     		mov	r3, r0
 2488 04de 9BB2     		uxth	r3, r3
 2489 04e0 2344     		add	r3, r3, r4
 2490 04e2 99B2     		uxth	r1, r3
 2491 04e4 1C4A     		ldr	r2, .L180+12
 2492 04e6 D7F88C30 		ldr	r3, [r7, #140]
 2493 04ea 0C33     		adds	r3, r3, #12
 2494 04ec 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 551:main.c        ****     {
 2495              		.loc 1 551 0 discriminator 3
 2496 04f0 D7F88C30 		ldr	r3, [r7, #140]
 2497 04f4 0133     		adds	r3, r3, #1
 2498 04f6 C7F88C30 		str	r3, [r7, #140]
 2499              	.L60:
 551:main.c        ****     {
 2500              		.loc 1 551 0 is_stmt 0 discriminator 1
 2501 04fa D7F88C30 		ldr	r3, [r7, #140]
 2502 04fe 0B2B     		cmp	r3, #11
 2503 0500 B0DD     		ble	.L61
 2504              	.LBE15:
 2505              	.LBB16:
 555:main.c        ****     }
 556:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 557:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 2506              		.loc 1 557 0 is_stmt 1
 2507 0502 0023     		movs	r3, #0
 2508 0504 C7F88830 		str	r3, [r7, #136]
 2509 0508 58E0     		b	.L62
 2510              	.L69:
 2511              	.LBB17:
 558:main.c        ****     {
 559:main.c        ****         for (int j = 0; j < NAME_LENGTH_IN_BYTES; j++)
 2512              		.loc 1 559 0
 2513 050a 0023     		movs	r3, #0
 2514 050c C7F88430 		str	r3, [r7, #132]
 2515 0510 11E0     		b	.L63
 2516              	.L64:
 560:main.c        ****         {
 561:main.c        ****             presetNamesArray[i][j] = 255;
 2517              		.loc 1 561 0 discriminator 3
 2518 0512 1249     		ldr	r1, .L180+16
 2519 0514 D7F88820 		ldr	r2, [r7, #136]
 2520 0518 1346     		mov	r3, r2
 2521 051a DB00     		lsls	r3, r3, #3
 2522 051c 9B1A     		subs	r3, r3, r2
 2523 051e 5B00     		lsls	r3, r3, #1
 2524 0520 CA18     		adds	r2, r1, r3
 2525 0522 D7F88430 		ldr	r3, [r7, #132]
 2526 0526 1344     		add	r3, r3, r2
 2527 0528 FF22     		movs	r2, #255
 2528 052a 1A70     		strb	r2, [r3]
 559:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 56


 2529              		.loc 1 559 0 discriminator 3
 2530 052c D7F88430 		ldr	r3, [r7, #132]
 2531 0530 0133     		adds	r3, r3, #1
 2532 0532 C7F88430 		str	r3, [r7, #132]
 2533              	.L63:
 559:main.c        ****         {
 2534              		.loc 1 559 0 is_stmt 0 discriminator 1
 2535 0536 D7F88430 		ldr	r3, [r7, #132]
 2536 053a 0D2B     		cmp	r3, #13
 2537 053c E9DD     		ble	.L64
 2538              	.LBE17:
 2539              	.LBB18:
 562:main.c        **** 
 563:main.c        ****         }
 564:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 2540              		.loc 1 564 0 is_stmt 1
 2541 053e 0023     		movs	r3, #0
 2542 0540 C7F88030 		str	r3, [r7, #128]
 2543 0544 2BE0     		b	.L65
 2544              	.L68:
 2545              	.LBB19:
 565:main.c        ****         {
 566:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 2546              		.loc 1 566 0
 2547 0546 0023     		movs	r3, #0
 2548 0548 FB67     		str	r3, [r7, #124]
 2549 054a 20E0     		b	.L66
 2550              	.L181:
 2551              		.align	2
 2552              	.L180:
 2553 054c 00000000 		.word	copedent
 2554 0550 00000000 		.word	pedals_low
 2555 0554 00000000 		.word	pedals_high
 2556 0558 00000000 		.word	fretMeasurements
 2557 055c 00000000 		.word	presetNamesArray
 2558              	.L67:
 567:main.c        ****             {
 568:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2559              		.loc 1 568 0 discriminator 3
 2560 0560 9348     		ldr	r0, .L182
 2561 0562 D7F88030 		ldr	r3, [r7, #128]
 2562 0566 D7F88810 		ldr	r1, [r7, #136]
 2563 056a 1A46     		mov	r2, r3
 2564 056c D200     		lsls	r2, r2, #3
 2565 056e D21A     		subs	r2, r2, r3
 2566 0570 5300     		lsls	r3, r2, #1
 2567 0572 1A46     		mov	r2, r3
 2568 0574 0B46     		mov	r3, r1
 2569 0576 DB00     		lsls	r3, r3, #3
 2570 0578 5B1A     		subs	r3, r3, r1
 2571 057a 1B01     		lsls	r3, r3, #4
 2572 057c 1344     		add	r3, r3, r2
 2573 057e C218     		adds	r2, r0, r3
 2574 0580 FB6F     		ldr	r3, [r7, #124]
 2575 0582 1344     		add	r3, r3, r2
 2576 0584 FF22     		movs	r2, #255
 2577 0586 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 57


 566:main.c        ****             {
 2578              		.loc 1 566 0 discriminator 3
 2579 0588 FB6F     		ldr	r3, [r7, #124]
 2580 058a 0133     		adds	r3, r3, #1
 2581 058c FB67     		str	r3, [r7, #124]
 2582              	.L66:
 566:main.c        ****             {
 2583              		.loc 1 566 0 is_stmt 0 discriminator 1
 2584 058e FB6F     		ldr	r3, [r7, #124]
 2585 0590 0D2B     		cmp	r3, #13
 2586 0592 E5DD     		ble	.L67
 2587              	.LBE19:
 564:main.c        ****         {
 2588              		.loc 1 564 0 is_stmt 1 discriminator 2
 2589 0594 D7F88030 		ldr	r3, [r7, #128]
 2590 0598 0133     		adds	r3, r3, #1
 2591 059a C7F88030 		str	r3, [r7, #128]
 2592              	.L65:
 564:main.c        ****         {
 2593              		.loc 1 564 0 is_stmt 0 discriminator 1
 2594 059e D7F88030 		ldr	r3, [r7, #128]
 2595 05a2 072B     		cmp	r3, #7
 2596 05a4 CFDD     		ble	.L68
 2597              	.LBE18:
 569:main.c        ****             }
 570:main.c        ****         }
 571:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2598              		.loc 1 571 0 is_stmt 1 discriminator 2
 2599 05a6 834A     		ldr	r2, .L182+4
 2600 05a8 D7F88830 		ldr	r3, [r7, #136]
 2601 05ac 1344     		add	r3, r3, r2
 2602 05ae 0022     		movs	r2, #0
 2603 05b0 1A70     		strb	r2, [r3]
 557:main.c        ****     {
 2604              		.loc 1 557 0 discriminator 2
 2605 05b2 D7F88830 		ldr	r3, [r7, #136]
 2606 05b6 0133     		adds	r3, r3, #1
 2607 05b8 C7F88830 		str	r3, [r7, #136]
 2608              	.L62:
 557:main.c        ****     {
 2609              		.loc 1 557 0 is_stmt 0 discriminator 1
 2610 05bc D7F88830 		ldr	r3, [r7, #136]
 2611 05c0 3F2B     		cmp	r3, #63
 2612 05c2 A2DD     		ble	.L69
 2613              	.LBE16:
 572:main.c        ****     }
 573:main.c        ****     LED_amber1_Write(0);
 2614              		.loc 1 573 0 is_stmt 1
 2615 05c4 0020     		movs	r0, #0
 2616 05c6 FFF7FEFF 		bl	LED_amber1_Write
 574:main.c        ****     LED_amber2_Write(1);
 2617              		.loc 1 574 0
 2618 05ca 0120     		movs	r0, #1
 2619 05cc FFF7FEFF 		bl	LED_amber2_Write
 575:main.c        ****     LED_amber3_Write(0);
 2620              		.loc 1 575 0
 2621 05d0 0020     		movs	r0, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 58


 2622 05d2 FFF7FEFF 		bl	LED_amber3_Write
 576:main.c        ****     LED_amber4_Write(0);
 2623              		.loc 1 576 0
 2624 05d6 0020     		movs	r0, #0
 2625 05d8 FFF7FEFF 		bl	LED_amber4_Write
 577:main.c        ****     LED_green1_Write(dualSlider);
 2626              		.loc 1 577 0
 2627 05dc 764B     		ldr	r3, .L182+8
 2628 05de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2629 05e0 1846     		mov	r0, r3
 2630 05e2 FFF7FEFF 		bl	LED_green1_Write
 578:main.c        ****     LED_red1_Write(currentNeck);
 2631              		.loc 1 578 0
 2632 05e6 754B     		ldr	r3, .L182+12
 2633 05e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2634 05ea 1846     		mov	r0, r3
 2635 05ec FFF7FEFF 		bl	LED_red1_Write
 579:main.c        ****     LED_green2_Write(!currentNeck);
 2636              		.loc 1 579 0
 2637 05f0 724B     		ldr	r3, .L182+12
 2638 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2639 05f4 002B     		cmp	r3, #0
 2640 05f6 0CBF     		ite	eq
 2641 05f8 0123     		moveq	r3, #1
 2642 05fa 0023     		movne	r3, #0
 2643 05fc DBB2     		uxtb	r3, r3
 2644 05fe 1846     		mov	r0, r3
 2645 0600 FFF7FEFF 		bl	LED_green2_Write
 580:main.c        ****     ADC_SAR_Seq_1_Start();
 2646              		.loc 1 580 0
 2647 0604 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 581:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2648              		.loc 1 581 0
 2649 0608 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 582:main.c        **** 
 583:main.c        ****             
 584:main.c        ****     currentCopedent = necks[currentNeck];
 2650              		.loc 1 584 0
 2651 060c 6B4B     		ldr	r3, .L182+12
 2652 060e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2653 0610 1A46     		mov	r2, r3
 2654 0612 6B4B     		ldr	r3, .L182+16
 2655 0614 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 2656 0616 6B4B     		ldr	r3, .L182+20
 2657 0618 1A70     		strb	r2, [r3]
 585:main.c        ****     CyDelay(10);
 2658              		.loc 1 585 0
 2659 061a 0A20     		movs	r0, #10
 2660 061c FFF7FEFF 		bl	CyDelay
 586:main.c        ****     
 587:main.c        ****     //set up for the OLED screen's first write
 588:main.c        ****     I2Cbuff1[0] = 1<<6;
 2661              		.loc 1 588 0
 2662 0620 694B     		ldr	r3, .L182+24
 2663 0622 4022     		movs	r2, #64
 2664 0624 1A70     		strb	r2, [r3]
 589:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 59


 2665              		.loc 1 589 0
 2666 0626 0022     		movs	r2, #0
 2667 0628 0121     		movs	r1, #1
 2668 062a 7020     		movs	r0, #112
 2669 062c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2670 0630 0346     		mov	r3, r0
 2671 0632 1A46     		mov	r2, r3
 2672 0634 654B     		ldr	r3, .L182+28
 2673 0636 1A60     		str	r2, [r3]
 590:main.c        ****     myGFX_init(128, 64);
 2674              		.loc 1 590 0
 2675 0638 4021     		movs	r1, #64
 2676 063a 8020     		movs	r0, #128
 2677 063c FFF7FEFF 		bl	myGFX_init
 591:main.c        ****     myGFX_setFont(0);
 2678              		.loc 1 591 0
 2679 0640 0020     		movs	r0, #0
 2680 0642 FFF7FEFF 		bl	myGFX_setFont
 592:main.c        ****     OLED_init(128, 64);
 2681              		.loc 1 592 0
 2682 0646 4021     		movs	r1, #64
 2683 0648 8020     		movs	r0, #128
 2684 064a FFF7FEFF 		bl	OLED_init
 593:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2685              		.loc 1 593 0
 2686 064e 5D4B     		ldr	r3, .L182+20
 2687 0650 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2688 0652 1846     		mov	r0, r3
 2689 0654 0323     		movs	r3, #3
 2690 0656 0022     		movs	r2, #0
 2691 0658 0221     		movs	r1, #2
 2692 065a FFF7FEFF 		bl	OLEDwriteInt
 594:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2693              		.loc 1 594 0
 2694 065e FFF7FEFF 		bl	OLEDgetCursor
 2695 0662 0246     		mov	r2, r0
 2696 0664 0323     		movs	r3, #3
 2697 0666 0121     		movs	r1, #1
 2698 0668 5948     		ldr	r0, .L182+32
 2699 066a FFF7FEFF 		bl	OLEDwriteString
 595:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH, 
 2700              		.loc 1 595 0
 2701 066e 554B     		ldr	r3, .L182+20
 2702 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2703 0672 1A46     		mov	r2, r3
 2704 0674 1346     		mov	r3, r2
 2705 0676 DB00     		lsls	r3, r3, #3
 2706 0678 9B1A     		subs	r3, r3, r2
 2707 067a 5B00     		lsls	r3, r3, #1
 2708 067c 554A     		ldr	r2, .L182+36
 2709 067e 9C18     		adds	r4, r3, r2
 2710 0680 FFF7FEFF 		bl	OLEDgetCursor
 2711 0684 0246     		mov	r2, r0
 2712 0686 0323     		movs	r3, #3
 2713 0688 0A21     		movs	r1, #10
 2714 068a 2046     		mov	r0, r4
 2715 068c FFF7FEFF 		bl	OLEDwriteString
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 60


 596:main.c        ****     OLED_draw(128, 64);
 2716              		.loc 1 596 0
 2717 0690 4021     		movs	r1, #64
 2718 0692 8020     		movs	r0, #128
 2719 0694 FFF7FEFF 		bl	OLED_draw
 597:main.c        ****     
 598:main.c        ****     
 599:main.c        ****     I2Cbuff1[0] = 1<<2;
 2720              		.loc 1 599 0
 2721 0698 4B4B     		ldr	r3, .L182+24
 2722 069a 0422     		movs	r2, #4
 2723 069c 1A70     		strb	r2, [r3]
 600:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2724              		.loc 1 600 0
 2725 069e 0022     		movs	r2, #0
 2726 06a0 0121     		movs	r1, #1
 2727 06a2 7020     		movs	r0, #112
 2728 06a4 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2729 06a8 0346     		mov	r3, r0
 2730 06aa 1A46     		mov	r2, r3
 2731 06ac 474B     		ldr	r3, .L182+28
 2732 06ae 1A60     		str	r2, [r3]
 2733              	.LBB20:
 601:main.c        **** 
 602:main.c        ****     for (int w = 0; w < 8; w++)
 2734              		.loc 1 602 0
 2735 06b0 0023     		movs	r3, #0
 2736 06b2 BB67     		str	r3, [r7, #120]
 2737 06b4 15E0     		b	.L70
 2738              	.L71:
 603:main.c        ****     {
 604:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 2739              		.loc 1 604 0 discriminator 3
 2740 06b6 BB6F     		ldr	r3, [r7, #120]
 2741 06b8 DBB2     		uxtb	r3, r3
 2742 06ba 0833     		adds	r3, r3, #8
 2743 06bc DAB2     		uxtb	r2, r3
 2744 06be 424B     		ldr	r3, .L182+24
 2745 06c0 1A70     		strb	r2, [r3]
 605:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2746              		.loc 1 605 0 discriminator 3
 2747 06c2 0022     		movs	r2, #0
 2748 06c4 0121     		movs	r1, #1
 2749 06c6 7220     		movs	r0, #114
 2750 06c8 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2751 06cc 0346     		mov	r3, r0
 2752 06ce 1A46     		mov	r2, r3
 2753 06d0 3E4B     		ldr	r3, .L182+28
 2754 06d2 1A60     		str	r2, [r3]
 606:main.c        ****         OLED_init(128, 32);
 2755              		.loc 1 606 0 discriminator 3
 2756 06d4 2021     		movs	r1, #32
 2757 06d6 8020     		movs	r0, #128
 2758 06d8 FFF7FEFF 		bl	OLED_init
 602:main.c        ****     {
 2759              		.loc 1 602 0 discriminator 3
 2760 06dc BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 61


 2761 06de 0133     		adds	r3, r3, #1
 2762 06e0 BB67     		str	r3, [r7, #120]
 2763              	.L70:
 602:main.c        ****     {
 2764              		.loc 1 602 0 is_stmt 0 discriminator 1
 2765 06e2 BB6F     		ldr	r3, [r7, #120]
 2766 06e4 072B     		cmp	r3, #7
 2767 06e6 E6DD     		ble	.L71
 2768              	.LBE20:
 607:main.c        ****     }
 608:main.c        **** 
 609:main.c        ****     //initialize the macro knob adc to scan all knobs
 610:main.c        ****     I2Cbuff1[0] = 1<<2;
 2769              		.loc 1 610 0 is_stmt 1
 2770 06e8 374B     		ldr	r3, .L182+24
 2771 06ea 0422     		movs	r2, #4
 2772 06ec 1A70     		strb	r2, [r3]
 611:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2773              		.loc 1 611 0
 2774 06ee 0022     		movs	r2, #0
 2775 06f0 0121     		movs	r1, #1
 2776 06f2 7020     		movs	r0, #112
 2777 06f4 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2778 06f8 0346     		mov	r3, r0
 2779 06fa 1A46     		mov	r2, r3
 2780 06fc 334B     		ldr	r3, .L182+28
 2781 06fe 1A60     		str	r2, [r3]
 612:main.c        ****     main_counter = 9;
 2782              		.loc 1 612 0
 2783 0700 354B     		ldr	r3, .L182+40
 2784 0702 0922     		movs	r2, #9
 2785 0704 1A70     		strb	r2, [r3]
 613:main.c        **** 
 614:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 2786              		.loc 1 614 0
 2787 0706 304B     		ldr	r3, .L182+24
 2788 0708 0F22     		movs	r2, #15
 2789 070a 1A70     		strb	r2, [r3]
 615:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 2790              		.loc 1 615 0
 2791 070c 0022     		movs	r2, #0
 2792 070e 0121     		movs	r1, #1
 2793 0710 3520     		movs	r0, #53
 2794 0712 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2795 0716 0346     		mov	r3, r0
 2796 0718 1A46     		mov	r2, r3
 2797 071a 2C4B     		ldr	r3, .L182+28
 2798 071c 1A60     		str	r2, [r3]
 616:main.c        ****     
 617:main.c        **** 
 618:main.c        ****     SPIS_1_Start();  
 2799              		.loc 1 618 0
 2800 071e FFF7FEFF 		bl	SPIS_1_Start
 619:main.c        ****     SPIM_1_Start();  
 2801              		.loc 1 619 0
 2802 0722 FFF7FEFF 		bl	SPIM_1_Start
 620:main.c        ****     SPIS_2_Start(); 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 62


 2803              		.loc 1 620 0
 2804 0726 FFF7FEFF 		bl	SPIS_2_Start
 621:main.c        ****     DmaTxConfiguration();
 2805              		.loc 1 621 0
 2806 072a FFF7FEFF 		bl	DmaTxConfiguration
 622:main.c        ****     DmaRxConfiguration();
 2807              		.loc 1 622 0
 2808 072e FFF7FEFF 		bl	DmaRxConfiguration
 623:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 2809              		.loc 1 623 0
 2810 0732 2A48     		ldr	r0, .L182+44
 2811 0734 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 624:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2812              		.loc 1 624 0
 2813 0738 2948     		ldr	r0, .L182+48
 2814 073a FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 625:main.c        ****     
 626:main.c        ****     myArray[30] = 254;
 2815              		.loc 1 626 0
 2816 073e 294B     		ldr	r3, .L182+52
 2817 0740 FE22     		movs	r2, #254
 2818 0742 9A77     		strb	r2, [r3, #30]
 627:main.c        ****     myArray[31] = 253;
 2819              		.loc 1 627 0
 2820 0744 274B     		ldr	r3, .L182+52
 2821 0746 FD22     		movs	r2, #253
 2822 0748 DA77     		strb	r2, [r3, #31]
 628:main.c        **** 
 629:main.c        ****     main_counter = 0;
 2823              		.loc 1 629 0
 2824 074a 234B     		ldr	r3, .L182+40
 2825 074c 0022     		movs	r2, #0
 2826 074e 1A70     		strb	r2, [r3]
 2827              	.L173:
 630:main.c        **** 
 631:main.c        **** 	for(;;)
 632:main.c        ****     {
 633:main.c        ****         
 634:main.c        ****         if (parseThatMF)
 2828              		.loc 1 634 0
 2829 0750 254B     		ldr	r3, .L182+56
 2830 0752 1B78     		ldrb	r3, [r3]
 2831 0754 DBB2     		uxtb	r3, r3
 2832 0756 002B     		cmp	r3, #0
 2833 0758 01D0     		beq	.L72
 635:main.c        ****         {
 636:main.c        ****             parseSysex();
 2834              		.loc 1 636 0
 2835 075a FFF7FEFF 		bl	parseSysex
 2836              	.L72:
 637:main.c        ****         }
 638:main.c        ****        
 639:main.c        ****         testpin3_Write(1);
 2837              		.loc 1 639 0
 2838 075e 0120     		movs	r0, #1
 2839 0760 FFF7FEFF 		bl	testpin3_Write
 640:main.c        ****        //sense levers and pedals
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 63


 641:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2840              		.loc 1 641 0
 2841 0764 1C4B     		ldr	r3, .L182+40
 2842 0766 1B78     		ldrb	r3, [r3]
 2843 0768 DBB2     		uxtb	r3, r3
 2844 076a 1A46     		mov	r2, r3
 2845 076c 1F4B     		ldr	r3, .L182+60
 2846 076e 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2847 0772 1F4B     		ldr	r3, .L182+64
 2848 0774 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2849 0776 9A42     		cmp	r2, r3
 2850 0778 48D0     		beq	.L73
 2851              	.LBB21:
 642:main.c        ****         {
 643:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 2852              		.loc 1 643 0
 2853 077a 174B     		ldr	r3, .L182+40
 2854 077c 1B78     		ldrb	r3, [r3]
 2855 077e DBB2     		uxtb	r3, r3
 2856 0780 1A46     		mov	r2, r3
 2857 0782 1A4B     		ldr	r3, .L182+60
 2858 0784 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2859 0788 1A46     		mov	r2, r3
 2860 078a 0123     		movs	r3, #1
 2861 078c 9340     		lsls	r3, r3, r2
 2862 078e DAB2     		uxtb	r2, r3
 2863 0790 0D4B     		ldr	r3, .L182+24
 2864 0792 1A70     		strb	r2, [r3]
 644:main.c        ****             if (mux_states[main_counter][0] == 5) //slow down I2C communication if it's going throu
 2865              		.loc 1 644 0
 2866 0794 104B     		ldr	r3, .L182+40
 2867 0796 1B78     		ldrb	r3, [r3]
 2868 0798 DBB2     		uxtb	r3, r3
 2869 079a 1A46     		mov	r2, r3
 2870 079c 134B     		ldr	r3, .L182+60
 2871 079e 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2872 07a2 052B     		cmp	r3, #5
 2873 07a4 26D1     		bne	.L74
 645:main.c        ****             {
 646:main.c        ****                 Clock_2_SetDividerValue(13); //slow speed 400k
 2874              		.loc 1 646 0
 2875 07a6 0121     		movs	r1, #1
 2876 07a8 0C20     		movs	r0, #12
 2877 07aa FFF7FEFF 		bl	Clock_2_SetDividerRegister
 2878 07ae 25E0     		b	.L75
 2879              	.L183:
 2880              		.align	2
 2881              	.L182:
 2882 07b0 00000000 		.word	macroNamesArray
 2883 07b4 00000000 		.word	presetAlreadyDisplayed
 2884 07b8 00000000 		.word	dualSlider
 2885 07bc 00000000 		.word	currentNeck
 2886 07c0 00000000 		.word	necks
 2887 07c4 00000000 		.word	currentCopedent
 2888 07c8 00000000 		.word	I2Cbuff1
 2889 07cc 00000000 		.word	status
 2890 07d0 00040000 		.word	.LC0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 64


 2891 07d4 00000000 		.word	copedentNamesArray
 2892 07d8 00000000 		.word	main_counter
 2893 07dc 00000000 		.word	spis_1_ss
 2894 07e0 00000000 		.word	spis_2_ss
 2895 07e4 00000000 		.word	myArray
 2896 07e8 00000000 		.word	parseThatMF
 2897 07ec 00000000 		.word	mux_states
 2898 07f0 00000000 		.word	last_mux
 2899              	.L74:
 647:main.c        ****             }
 648:main.c        ****             else
 649:main.c        ****             {
 650:main.c        ****                 Clock_2_SetDividerValue(5); //otherwise full speed 1000k
 2900              		.loc 1 650 0
 2901 07f4 0121     		movs	r1, #1
 2902 07f6 0420     		movs	r0, #4
 2903 07f8 FFF7FEFF 		bl	Clock_2_SetDividerRegister
 2904              	.L75:
 651:main.c        ****             }
 652:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2905              		.loc 1 652 0
 2906 07fc 0022     		movs	r2, #0
 2907 07fe 0121     		movs	r1, #1
 2908 0800 7020     		movs	r0, #112
 2909 0802 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2910 0806 0346     		mov	r3, r0
 2911 0808 87F82B30 		strb	r3, [r7, #43]
 2912              	.L73:
 2913              	.LBE21:
 653:main.c        ****         }
 654:main.c        ****         last_mux = mux_states[main_counter][0];
 2914              		.loc 1 654 0
 2915 080c 7F4B     		ldr	r3, .L184
 2916 080e 1B78     		ldrb	r3, [r3]
 2917 0810 DBB2     		uxtb	r3, r3
 2918 0812 1A46     		mov	r2, r3
 2919 0814 7E4B     		ldr	r3, .L184+4
 2920 0816 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2921 081a 7E4B     		ldr	r3, .L184+8
 2922 081c 1A70     		strb	r2, [r3]
 655:main.c        ****         
 656:main.c        ****         
 657:main.c        ****         CyDelayUs(10);
 2923              		.loc 1 657 0
 2924 081e 0A20     		movs	r0, #10
 2925 0820 FFF7FEFF 		bl	CyDelayUs
 658:main.c        ****         if (mux_states[main_counter][0] == 5)
 2926              		.loc 1 658 0
 2927 0824 794B     		ldr	r3, .L184
 2928 0826 1B78     		ldrb	r3, [r3]
 2929 0828 DBB2     		uxtb	r3, r3
 2930 082a 1A46     		mov	r2, r3
 2931 082c 784B     		ldr	r3, .L184+4
 2932 082e 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2933 0832 052B     		cmp	r3, #5
 2934 0834 1DD1     		bne	.L76
 659:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 65


 660:main.c        ****             if (!i2c_skipped[main_counter])
 2935              		.loc 1 660 0
 2936 0836 754B     		ldr	r3, .L184
 2937 0838 1B78     		ldrb	r3, [r3]
 2938 083a DBB2     		uxtb	r3, r3
 2939 083c 1A46     		mov	r2, r3
 2940 083e 764B     		ldr	r3, .L184+12
 2941 0840 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2942 0842 002B     		cmp	r3, #0
 2943 0844 15D1     		bne	.L76
 661:main.c        ****             {
 662:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 2944              		.loc 1 662 0
 2945 0846 714B     		ldr	r3, .L184
 2946 0848 1B78     		ldrb	r3, [r3]
 2947 084a DBB2     		uxtb	r3, r3
 2948 084c 704A     		ldr	r2, .L184+4
 2949 084e 5B00     		lsls	r3, r3, #1
 2950 0850 1344     		add	r3, r3, r2
 2951 0852 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2952 0854 1A46     		mov	r2, r3
 2953 0856 0123     		movs	r3, #1
 2954 0858 9340     		lsls	r3, r3, r2
 2955 085a DAB2     		uxtb	r2, r3
 2956 085c 6F4B     		ldr	r3, .L184+16
 2957 085e 1A70     		strb	r2, [r3]
 663:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 2958              		.loc 1 663 0
 2959 0860 0022     		movs	r2, #0
 2960 0862 0121     		movs	r1, #1
 2961 0864 7120     		movs	r0, #113
 2962 0866 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2963 086a 0346     		mov	r3, r0
 2964 086c 1A46     		mov	r2, r3
 2965 086e 6C4B     		ldr	r3, .L184+20
 2966 0870 1A60     		str	r2, [r3]
 2967              	.L76:
 664:main.c        ****             }
 665:main.c        ****         }
 666:main.c        **** 
 667:main.c        ****         CyDelayUs(10);
 2968              		.loc 1 667 0
 2969 0872 0A20     		movs	r0, #10
 2970 0874 FFF7FEFF 		bl	CyDelayUs
 668:main.c        ****         //if it's a hall sensor
 669:main.c        **** 
 670:main.c        ****         //temporarily don't scan vertical knee lever, should be <10 normally
 671:main.c        ****         if (main_counter < 10)
 2971              		.loc 1 671 0
 2972 0878 644B     		ldr	r3, .L184
 2973 087a 1B78     		ldrb	r3, [r3]
 2974 087c DBB2     		uxtb	r3, r3
 2975 087e 092B     		cmp	r3, #9
 2976 0880 00F2A180 		bhi	.L77
 672:main.c        ****         {
 673:main.c        ****             if (!i2c_skipped[main_counter])
 2977              		.loc 1 673 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 66


 2978 0884 614B     		ldr	r3, .L184
 2979 0886 1B78     		ldrb	r3, [r3]
 2980 0888 DBB2     		uxtb	r3, r3
 2981 088a 1A46     		mov	r2, r3
 2982 088c 624B     		ldr	r3, .L184+12
 2983 088e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2984 0890 002B     		cmp	r3, #0
 2985 0892 40F09880 		bne	.L77
 674:main.c        ****             {
 675:main.c        ****                 //CyDelayUs(100);
 676:main.c        ****                 I2Cbuff1[0] = 0x0E;
 2986              		.loc 1 676 0
 2987 0896 614B     		ldr	r3, .L184+16
 2988 0898 0E22     		movs	r2, #14
 2989 089a 1A70     		strb	r2, [r3]
 677:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 2990              		.loc 1 677 0
 2991 089c 0222     		movs	r2, #2
 2992 089e 0121     		movs	r1, #1
 2993 08a0 3620     		movs	r0, #54
 2994 08a2 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2995 08a6 0346     		mov	r3, r0
 2996 08a8 1A46     		mov	r2, r3
 2997 08aa 5D4B     		ldr	r3, .L184+20
 2998 08ac 1A60     		str	r2, [r3]
 678:main.c        ****                 if (status == 0)
 2999              		.loc 1 678 0
 3000 08ae 5C4B     		ldr	r3, .L184+20
 3001 08b0 1B68     		ldr	r3, [r3]
 3002 08b2 002B     		cmp	r3, #0
 3003 08b4 08D1     		bne	.L78
 679:main.c        ****                 {
 680:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 3004              		.loc 1 680 0
 3005 08b6 0122     		movs	r2, #1
 3006 08b8 0221     		movs	r1, #2
 3007 08ba 3620     		movs	r0, #54
 3008 08bc FFF7FEFF 		bl	I2C_MasterReadBlocking
 3009 08c0 0346     		mov	r3, r0
 3010 08c2 1A46     		mov	r2, r3
 3011 08c4 564B     		ldr	r3, .L184+20
 3012 08c6 1A60     		str	r2, [r3]
 3013              	.L78:
 681:main.c        ****                 }
 682:main.c        ****                 if (status  == 0)
 3014              		.loc 1 682 0
 3015 08c8 554B     		ldr	r3, .L184+20
 3016 08ca 1B68     		ldr	r3, [r3]
 3017 08cc 002B     		cmp	r3, #0
 3018 08ce 7AD1     		bne	.L77
 683:main.c        ****                 {
 684:main.c        ****                     //CyDelayUs(100);
 685:main.c        ****                     angle[main_counter] = I2Cbuff2[0] << 8;
 3019              		.loc 1 685 0
 3020 08d0 4E4B     		ldr	r3, .L184
 3021 08d2 1B78     		ldrb	r3, [r3]
 3022 08d4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 67


 3023 08d6 1A46     		mov	r2, r3
 3024 08d8 524B     		ldr	r3, .L184+24
 3025 08da 1B78     		ldrb	r3, [r3]
 3026 08dc DBB2     		uxtb	r3, r3
 3027 08de 9BB2     		uxth	r3, r3
 3028 08e0 1B02     		lsls	r3, r3, #8
 3029 08e2 99B2     		uxth	r1, r3
 3030 08e4 504B     		ldr	r3, .L184+28
 3031 08e6 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 686:main.c        ****                     angle[main_counter] +=  I2Cbuff2[1];
 3032              		.loc 1 686 0
 3033 08ea 4E4B     		ldr	r3, .L184+24
 3034 08ec 5B78     		ldrb	r3, [r3, #1]
 3035 08ee D8B2     		uxtb	r0, r3
 3036 08f0 464B     		ldr	r3, .L184
 3037 08f2 1B78     		ldrb	r3, [r3]
 3038 08f4 DBB2     		uxtb	r3, r3
 3039 08f6 1946     		mov	r1, r3
 3040 08f8 1A46     		mov	r2, r3
 3041 08fa 4B4B     		ldr	r3, .L184+28
 3042 08fc 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3043 0900 83B2     		uxth	r3, r0
 3044 0902 1344     		add	r3, r3, r2
 3045 0904 9AB2     		uxth	r2, r3
 3046 0906 484B     		ldr	r3, .L184+28
 3047 0908 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 687:main.c        ****                     
 688:main.c        ****                     if (leverCalibrationMode)
 3048              		.loc 1 688 0
 3049 090c 474B     		ldr	r3, .L184+32
 3050 090e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3051 0910 002B     		cmp	r3, #0
 3052 0912 58D0     		beq	.L77
 689:main.c        ****                     {
 690:main.c        ****                         if (angle[main_counter] < pedals_low[main_counter])
 3053              		.loc 1 690 0
 3054 0914 3D4B     		ldr	r3, .L184
 3055 0916 1B78     		ldrb	r3, [r3]
 3056 0918 DBB2     		uxtb	r3, r3
 3057 091a 1A46     		mov	r2, r3
 3058 091c 424B     		ldr	r3, .L184+28
 3059 091e 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3060 0922 3A4B     		ldr	r3, .L184
 3061 0924 1B78     		ldrb	r3, [r3]
 3062 0926 DBB2     		uxtb	r3, r3
 3063 0928 1946     		mov	r1, r3
 3064 092a 414B     		ldr	r3, .L184+36
 3065 092c 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3066 0930 9A42     		cmp	r2, r3
 3067 0932 2AD2     		bcs	.L79
 691:main.c        ****                         {
 692:main.c        ****                             if (main_counter == 0)
 3068              		.loc 1 692 0
 3069 0934 354B     		ldr	r3, .L184
 3070 0936 1B78     		ldrb	r3, [r3]
 3071 0938 DBB2     		uxtb	r3, r3
 3072 093a 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 68


 3073 093c 17D1     		bne	.L80
 693:main.c        ****                             {
 694:main.c        ****                                 if (angle[main_counter] != 0)
 3074              		.loc 1 694 0
 3075 093e 334B     		ldr	r3, .L184
 3076 0940 1B78     		ldrb	r3, [r3]
 3077 0942 DBB2     		uxtb	r3, r3
 3078 0944 1A46     		mov	r2, r3
 3079 0946 384B     		ldr	r3, .L184+28
 3080 0948 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3081 094c 002B     		cmp	r3, #0
 3082 094e 1CD0     		beq	.L79
 695:main.c        ****                                 {
 696:main.c        ****                                      pedals_low[main_counter] = angle[main_counter];
 3083              		.loc 1 696 0
 3084 0950 2E4B     		ldr	r3, .L184
 3085 0952 1B78     		ldrb	r3, [r3]
 3086 0954 DBB2     		uxtb	r3, r3
 3087 0956 1A46     		mov	r2, r3
 3088 0958 2C4B     		ldr	r3, .L184
 3089 095a 1B78     		ldrb	r3, [r3]
 3090 095c DBB2     		uxtb	r3, r3
 3091 095e 1946     		mov	r1, r3
 3092 0960 314B     		ldr	r3, .L184+28
 3093 0962 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3094 0966 324B     		ldr	r3, .L184+36
 3095 0968 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3096 096c 0DE0     		b	.L79
 3097              	.L80:
 697:main.c        ****                                      
 698:main.c        ****                                 }
 699:main.c        ****                             }
 700:main.c        ****                             else
 701:main.c        ****                             {
 702:main.c        ****                                 pedals_low[main_counter] = angle[main_counter];
 3098              		.loc 1 702 0
 3099 096e 274B     		ldr	r3, .L184
 3100 0970 1B78     		ldrb	r3, [r3]
 3101 0972 DBB2     		uxtb	r3, r3
 3102 0974 1A46     		mov	r2, r3
 3103 0976 254B     		ldr	r3, .L184
 3104 0978 1B78     		ldrb	r3, [r3]
 3105 097a DBB2     		uxtb	r3, r3
 3106 097c 1946     		mov	r1, r3
 3107 097e 2A4B     		ldr	r3, .L184+28
 3108 0980 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3109 0984 2A4B     		ldr	r3, .L184+36
 3110 0986 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3111              	.L79:
 703:main.c        ****                                
 704:main.c        ****                             }
 705:main.c        ****                             
 706:main.c        ****                         }
 707:main.c        ****                         if (angle[main_counter] > pedals_high[main_counter])
 3112              		.loc 1 707 0
 3113 098a 204B     		ldr	r3, .L184
 3114 098c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 69


 3115 098e DBB2     		uxtb	r3, r3
 3116 0990 1A46     		mov	r2, r3
 3117 0992 254B     		ldr	r3, .L184+28
 3118 0994 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3119 0998 1C4B     		ldr	r3, .L184
 3120 099a 1B78     		ldrb	r3, [r3]
 3121 099c DBB2     		uxtb	r3, r3
 3122 099e 1946     		mov	r1, r3
 3123 09a0 244B     		ldr	r3, .L184+40
 3124 09a2 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3125 09a6 9A42     		cmp	r2, r3
 3126 09a8 0DD9     		bls	.L77
 708:main.c        ****                         {
 709:main.c        ****                              pedals_high[main_counter] = angle[main_counter];
 3127              		.loc 1 709 0
 3128 09aa 184B     		ldr	r3, .L184
 3129 09ac 1B78     		ldrb	r3, [r3]
 3130 09ae DBB2     		uxtb	r3, r3
 3131 09b0 1A46     		mov	r2, r3
 3132 09b2 164B     		ldr	r3, .L184
 3133 09b4 1B78     		ldrb	r3, [r3]
 3134 09b6 DBB2     		uxtb	r3, r3
 3135 09b8 1946     		mov	r1, r3
 3136 09ba 1B4B     		ldr	r3, .L184+28
 3137 09bc 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3138 09c0 1C4B     		ldr	r3, .L184+40
 3139 09c2 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3140              	.L77:
 710:main.c        ****                              
 711:main.c        ****                         }
 712:main.c        ****                     }
 713:main.c        ****                 }
 714:main.c        ****             }
 715:main.c        ****         }
 716:main.c        ****         
 717:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 718:main.c        ****         if (main_counter == 9)
 3141              		.loc 1 718 0
 3142 09c6 114B     		ldr	r3, .L184
 3143 09c8 1B78     		ldrb	r3, [r3]
 3144 09ca DBB2     		uxtb	r3, r3
 3145 09cc 092B     		cmp	r3, #9
 3146 09ce 40F0C980 		bne	.L82
 719:main.c        ****         {
 720:main.c        ****             if (!i2c_skipped[main_counter])
 3147              		.loc 1 720 0
 3148 09d2 0E4B     		ldr	r3, .L184
 3149 09d4 1B78     		ldrb	r3, [r3]
 3150 09d6 DBB2     		uxtb	r3, r3
 3151 09d8 1A46     		mov	r2, r3
 3152 09da 0F4B     		ldr	r3, .L184+12
 3153 09dc 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3154 09de 002B     		cmp	r3, #0
 3155 09e0 40F00781 		bne	.L88
 721:main.c        ****             {
 722:main.c        ****                 //scan the knob adc
 723:main.c        ****                 I2Cbuff1[0] = 0x0;      
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 70


 3156              		.loc 1 723 0
 3157 09e4 0D4B     		ldr	r3, .L184+16
 3158 09e6 0022     		movs	r2, #0
 3159 09e8 1A70     		strb	r2, [r3]
 724:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 3160              		.loc 1 724 0
 3161 09ea 0022     		movs	r2, #0
 3162 09ec 1021     		movs	r1, #16
 3163 09ee 3520     		movs	r0, #53
 3164 09f0 FFF7FEFF 		bl	I2C_MasterReadBlocking
 3165 09f4 0346     		mov	r3, r0
 3166 09f6 1A46     		mov	r2, r3
 3167 09f8 094B     		ldr	r3, .L184+20
 3168 09fa 1A60     		str	r2, [r3]
 725:main.c        ****                 if (status == 0)
 3169              		.loc 1 725 0
 3170 09fc 084B     		ldr	r3, .L184+20
 3171 09fe 1B68     		ldr	r3, [r3]
 3172 0a00 002B     		cmp	r3, #0
 3173 0a02 40F0F680 		bne	.L88
 3174              	.LBB22:
 726:main.c        ****                 {
 727:main.c        ****                     for (int i = 0; i < NUM_MACROS; i++)
 3175              		.loc 1 727 0
 3176 0a06 0023     		movs	r3, #0
 3177 0a08 7B67     		str	r3, [r7, #116]
 3178 0a0a 63E0     		b	.L84
 3179              	.L185:
 3180              		.align	2
 3181              	.L184:
 3182 0a0c 00000000 		.word	main_counter
 3183 0a10 00000000 		.word	mux_states
 3184 0a14 00000000 		.word	last_mux
 3185 0a18 00000000 		.word	i2c_skipped
 3186 0a1c 00000000 		.word	I2Cbuff1
 3187 0a20 00000000 		.word	status
 3188 0a24 00000000 		.word	I2Cbuff2
 3189 0a28 00000000 		.word	angle
 3190 0a2c 00000000 		.word	leverCalibrationMode
 3191 0a30 00000000 		.word	pedals_low
 3192 0a34 00000000 		.word	pedals_high
 3193              	.L87:
 3194              	.LBB23:
 728:main.c        ****                     {
 729:main.c        ****                        uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[(i*2) + 1] & 255)) & 409
 3195              		.loc 1 729 0
 3196 0a38 7B6F     		ldr	r3, [r7, #116]
 3197 0a3a 5B00     		lsls	r3, r3, #1
 3198 0a3c 894A     		ldr	r2, .L186
 3199 0a3e D35C     		ldrb	r3, [r2, r3]
 3200 0a40 DBB2     		uxtb	r3, r3
 3201 0a42 9BB2     		uxth	r3, r3
 3202 0a44 1B02     		lsls	r3, r3, #8
 3203 0a46 9AB2     		uxth	r2, r3
 3204 0a48 7B6F     		ldr	r3, [r7, #116]
 3205 0a4a 5B00     		lsls	r3, r3, #1
 3206 0a4c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 71


 3207 0a4e 8549     		ldr	r1, .L186
 3208 0a50 CB5C     		ldrb	r3, [r1, r3]
 3209 0a52 DBB2     		uxtb	r3, r3
 3210 0a54 9BB2     		uxth	r3, r3
 3211 0a56 1344     		add	r3, r3, r2
 3212 0a58 9BB2     		uxth	r3, r3
 3213 0a5a C3F30B03 		ubfx	r3, r3, #0, #12
 3214 0a5e 3B80     		strh	r3, [r7]	@ movhi
 730:main.c        ****                         macroKnobValues[i] = 255 - (tempInt >> 4); //now squish it down to 8 bit fo
 3215              		.loc 1 730 0
 3216 0a60 3B88     		ldrh	r3, [r7]
 3217 0a62 1B09     		lsrs	r3, r3, #4
 3218 0a64 9BB2     		uxth	r3, r3
 3219 0a66 DBB2     		uxtb	r3, r3
 3220 0a68 DB43     		mvns	r3, r3
 3221 0a6a D9B2     		uxtb	r1, r3
 3222 0a6c 7E4A     		ldr	r2, .L186+4
 3223 0a6e 7B6F     		ldr	r3, [r7, #116]
 3224 0a70 1344     		add	r3, r3, r2
 3225 0a72 0A46     		mov	r2, r1
 3226 0a74 1A70     		strb	r2, [r3]
 731:main.c        ****                         if (midiSendOn)
 3227              		.loc 1 731 0
 3228 0a76 7D4B     		ldr	r3, .L186+8
 3229 0a78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3230 0a7a 002B     		cmp	r3, #0
 3231 0a7c 27D0     		beq	.L85
 732:main.c        ****                         {
 733:main.c        ****                             macroKnobValues7bit[i] = macroKnobValues[i] >> 1;
 3232              		.loc 1 733 0
 3233 0a7e 7A4A     		ldr	r2, .L186+4
 3234 0a80 7B6F     		ldr	r3, [r7, #116]
 3235 0a82 1344     		add	r3, r3, r2
 3236 0a84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 0a86 5B08     		lsrs	r3, r3, #1
 3238 0a88 D9B2     		uxtb	r1, r3
 3239 0a8a 794A     		ldr	r2, .L186+12
 3240 0a8c 7B6F     		ldr	r3, [r7, #116]
 3241 0a8e 1344     		add	r3, r3, r2
 3242 0a90 0A46     		mov	r2, r1
 3243 0a92 1A70     		strb	r2, [r3]
 734:main.c        ****                             if (macroKnobValues7bit[i] != prevMacroKnobValues7bit[i])
 3244              		.loc 1 734 0
 3245 0a94 764A     		ldr	r2, .L186+12
 3246 0a96 7B6F     		ldr	r3, [r7, #116]
 3247 0a98 1344     		add	r3, r3, r2
 3248 0a9a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3249 0a9c 7549     		ldr	r1, .L186+16
 3250 0a9e 7B6F     		ldr	r3, [r7, #116]
 3251 0aa0 0B44     		add	r3, r3, r1
 3252 0aa2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3253 0aa4 9A42     		cmp	r2, r3
 3254 0aa6 09D0     		beq	.L86
 735:main.c        ****                             {
 736:main.c        ****                                 sendMIDIControlChange(i+1, macroKnobValues7bit[i], 0);
 3255              		.loc 1 736 0
 3256 0aa8 7B6F     		ldr	r3, [r7, #116]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 72


 3257 0aaa 581C     		adds	r0, r3, #1
 3258 0aac 704A     		ldr	r2, .L186+12
 3259 0aae 7B6F     		ldr	r3, [r7, #116]
 3260 0ab0 1344     		add	r3, r3, r2
 3261 0ab2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3262 0ab4 0022     		movs	r2, #0
 3263 0ab6 1946     		mov	r1, r3
 3264 0ab8 FFF7FEFF 		bl	sendMIDIControlChange
 3265              	.L86:
 737:main.c        ****                             }
 738:main.c        ****                             prevMacroKnobValues7bit[i] = macroKnobValues7bit[i];
 3266              		.loc 1 738 0
 3267 0abc 6C4A     		ldr	r2, .L186+12
 3268 0abe 7B6F     		ldr	r3, [r7, #116]
 3269 0ac0 1344     		add	r3, r3, r2
 3270 0ac2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3271 0ac4 6B4A     		ldr	r2, .L186+16
 3272 0ac6 7B6F     		ldr	r3, [r7, #116]
 3273 0ac8 1344     		add	r3, r3, r2
 3274 0aca 0A46     		mov	r2, r1
 3275 0acc 1A70     		strb	r2, [r3]
 3276              	.L85:
 3277              	.LBE23:
 727:main.c        ****                     {
 3278              		.loc 1 727 0 discriminator 2
 3279 0ace 7B6F     		ldr	r3, [r7, #116]
 3280 0ad0 0133     		adds	r3, r3, #1
 3281 0ad2 7B67     		str	r3, [r7, #116]
 3282              	.L84:
 727:main.c        ****                     {
 3283              		.loc 1 727 0 is_stmt 0 discriminator 1
 3284 0ad4 7B6F     		ldr	r3, [r7, #116]
 3285 0ad6 072B     		cmp	r3, #7
 3286 0ad8 AEDD     		ble	.L87
 3287              	.LBE22:
 739:main.c        ****                         }
 740:main.c        ****                     }
 741:main.c        ****                     //
 742:main.c        ****                     if (macroOLEDWaitingToSend == 2)
 3288              		.loc 1 742 0 is_stmt 1
 3289 0ada 674B     		ldr	r3, .L186+20
 3290 0adc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3291 0ade 022B     		cmp	r3, #2
 3292 0ae0 40F08780 		bne	.L88
 743:main.c        ****                     {
 744:main.c        ****                         //send the data to the little macro OLED screens
 745:main.c        ****                         
 746:main.c        ****                         I2Cbuff1[0] = (1 << 3) + whichMacro;
 3293              		.loc 1 746 0
 3294 0ae4 654B     		ldr	r3, .L186+24
 3295 0ae6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3296 0ae8 0833     		adds	r3, r3, #8
 3297 0aea DAB2     		uxtb	r2, r3
 3298 0aec 644B     		ldr	r3, .L186+28
 3299 0aee 1A70     		strb	r2, [r3]
 747:main.c        ****                         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 3300              		.loc 1 747 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 73


 3301 0af0 0022     		movs	r2, #0
 3302 0af2 0121     		movs	r1, #1
 3303 0af4 7220     		movs	r0, #114
 3304 0af6 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3305 0afa 0346     		mov	r3, r0
 3306 0afc 1A46     		mov	r2, r3
 3307 0afe 614B     		ldr	r3, .L186+32
 3308 0b00 1A60     		str	r2, [r3]
 748:main.c        ****                         //OLED_init(128, 32);
 749:main.c        ****                         OLEDclear(128, 32);
 3309              		.loc 1 749 0
 3310 0b02 2021     		movs	r1, #32
 3311 0b04 8020     		movs	r0, #128
 3312 0b06 FFF7FEFF 		bl	OLEDclear
 750:main.c        ****                         //OLEDwriteInt(w , 1, 0,FirstLine);
 751:main.c        ****                         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 752:main.c        ****                         myGFX_setFont(1);
 3313              		.loc 1 752 0
 3314 0b0a 0120     		movs	r0, #1
 3315 0b0c FFF7FEFF 		bl	myGFX_setFont
 753:main.c        ****                         //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
 754:main.c        ****                         OLEDwriteLineMiddle((char *)&macroNamesArray[patchNum][whichMacro][0], MACR
 3316              		.loc 1 754 0
 3317 0b10 5D4B     		ldr	r3, .L186+36
 3318 0b12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3319 0b14 1946     		mov	r1, r3
 3320 0b16 594B     		ldr	r3, .L186+24
 3321 0b18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3322 0b1a 1A46     		mov	r2, r3
 3323 0b1c D200     		lsls	r2, r2, #3
 3324 0b1e D21A     		subs	r2, r2, r3
 3325 0b20 5300     		lsls	r3, r2, #1
 3326 0b22 1A46     		mov	r2, r3
 3327 0b24 0B46     		mov	r3, r1
 3328 0b26 DB00     		lsls	r3, r3, #3
 3329 0b28 5B1A     		subs	r3, r3, r1
 3330 0b2a 1B01     		lsls	r3, r3, #4
 3331 0b2c 1344     		add	r3, r3, r2
 3332 0b2e 574A     		ldr	r2, .L186+40
 3333 0b30 1344     		add	r3, r3, r2
 3334 0b32 0921     		movs	r1, #9
 3335 0b34 1846     		mov	r0, r3
 3336 0b36 FFF7FEFF 		bl	OLEDwriteLineMiddle
 755:main.c        ****                         OLED_draw(128, 32);
 3337              		.loc 1 755 0
 3338 0b3a 2021     		movs	r1, #32
 3339 0b3c 8020     		movs	r0, #128
 3340 0b3e FFF7FEFF 		bl	OLED_draw
 756:main.c        **** 
 757:main.c        ****                         whichMacro++;
 3341              		.loc 1 757 0
 3342 0b42 4E4B     		ldr	r3, .L186+24
 3343 0b44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3344 0b46 0133     		adds	r3, r3, #1
 3345 0b48 DAB2     		uxtb	r2, r3
 3346 0b4a 4C4B     		ldr	r3, .L186+24
 3347 0b4c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 74


 758:main.c        ****                         if (whichMacro >=8)
 3348              		.loc 1 758 0
 3349 0b4e 4B4B     		ldr	r3, .L186+24
 3350 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3351 0b52 072B     		cmp	r3, #7
 3352 0b54 4DD9     		bls	.L88
 759:main.c        ****                         {
 760:main.c        ****                             macroOLEDWaitingToSend = 0;
 3353              		.loc 1 760 0
 3354 0b56 484B     		ldr	r3, .L186+20
 3355 0b58 0022     		movs	r2, #0
 3356 0b5a 1A70     		strb	r2, [r3]
 761:main.c        ****                             whichMacro = 0;
 3357              		.loc 1 761 0
 3358 0b5c 474B     		ldr	r3, .L186+24
 3359 0b5e 0022     		movs	r2, #0
 3360 0b60 1A70     		strb	r2, [r3]
 3361 0b62 46E0     		b	.L88
 3362              	.L82:
 762:main.c        ****                         }
 763:main.c        ****                     }
 764:main.c        ****                 }
 765:main.c        ****             }
 766:main.c        ****             
 767:main.c        ****         }
 768:main.c        ****         //otherwise it's the ADC for the foot pedal
 769:main.c        ****         else if (main_counter == 10)
 3363              		.loc 1 769 0
 3364 0b64 4A4B     		ldr	r3, .L186+44
 3365 0b66 1B78     		ldrb	r3, [r3]
 3366 0b68 DBB2     		uxtb	r3, r3
 3367 0b6a 0A2B     		cmp	r3, #10
 3368 0b6c 2AD1     		bne	.L89
 770:main.c        ****         {
 771:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 772:main.c        ****             if (!i2c_skipped[main_counter])
 3369              		.loc 1 772 0
 3370 0b6e 484B     		ldr	r3, .L186+44
 3371 0b70 1B78     		ldrb	r3, [r3]
 3372 0b72 DBB2     		uxtb	r3, r3
 3373 0b74 1A46     		mov	r2, r3
 3374 0b76 474B     		ldr	r3, .L186+48
 3375 0b78 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3376 0b7a 002B     		cmp	r3, #0
 3377 0b7c 39D1     		bne	.L88
 773:main.c        ****             {
 774:main.c        ****                 I2Cbuff1[0] = 0x0;      
 3378              		.loc 1 774 0
 3379 0b7e 404B     		ldr	r3, .L186+28
 3380 0b80 0022     		movs	r2, #0
 3381 0b82 1A70     		strb	r2, [r3]
 775:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 3382              		.loc 1 775 0
 3383 0b84 0022     		movs	r2, #0
 3384 0b86 0221     		movs	r1, #2
 3385 0b88 4F20     		movs	r0, #79
 3386 0b8a FFF7FEFF 		bl	I2C_MasterReadBlocking
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 75


 3387 0b8e 0346     		mov	r3, r0
 3388 0b90 1A46     		mov	r2, r3
 3389 0b92 3C4B     		ldr	r3, .L186+32
 3390 0b94 1A60     		str	r2, [r3]
 776:main.c        ****                 if (status == 0)
 3391              		.loc 1 776 0
 3392 0b96 3B4B     		ldr	r3, .L186+32
 3393 0b98 1B68     		ldr	r3, [r3]
 3394 0b9a 002B     		cmp	r3, #0
 3395 0b9c 29D1     		bne	.L88
 777:main.c        ****                 {
 778:main.c        ****                     volumePedal = I2Cbuff2[0] << 8;
 3396              		.loc 1 778 0
 3397 0b9e 314B     		ldr	r3, .L186
 3398 0ba0 1B78     		ldrb	r3, [r3]
 3399 0ba2 DBB2     		uxtb	r3, r3
 3400 0ba4 9BB2     		uxth	r3, r3
 3401 0ba6 1B02     		lsls	r3, r3, #8
 3402 0ba8 9AB2     		uxth	r2, r3
 3403 0baa 3B4B     		ldr	r3, .L186+52
 3404 0bac 1A80     		strh	r2, [r3]	@ movhi
 779:main.c        ****                     volumePedal +=  I2Cbuff2[1];
 3405              		.loc 1 779 0
 3406 0bae 2D4B     		ldr	r3, .L186
 3407 0bb0 5B78     		ldrb	r3, [r3, #1]
 3408 0bb2 DBB2     		uxtb	r3, r3
 3409 0bb4 9AB2     		uxth	r2, r3
 3410 0bb6 384B     		ldr	r3, .L186+52
 3411 0bb8 1B88     		ldrh	r3, [r3]
 3412 0bba 1344     		add	r3, r3, r2
 3413 0bbc 9AB2     		uxth	r2, r3
 3414 0bbe 364B     		ldr	r3, .L186+52
 3415 0bc0 1A80     		strh	r2, [r3]	@ movhi
 3416 0bc2 16E0     		b	.L88
 3417              	.L89:
 780:main.c        ****                 }
 781:main.c        ****             }
 782:main.c        ****         }
 783:main.c        ****         else
 784:main.c        ****         if (main_counter == 11)
 3418              		.loc 1 784 0
 3419 0bc4 324B     		ldr	r3, .L186+44
 3420 0bc6 1B78     		ldrb	r3, [r3]
 3421 0bc8 DBB2     		uxtb	r3, r3
 3422 0bca 0B2B     		cmp	r3, #11
 3423 0bcc 11D1     		bne	.L88
 785:main.c        ****         { 
 786:main.c        ****             if (mainOLEDWaitingToSend)
 3424              		.loc 1 786 0
 3425 0bce 334B     		ldr	r3, .L186+56
 3426 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3427 0bd2 002B     		cmp	r3, #0
 3428 0bd4 06D0     		beq	.L91
 787:main.c        ****             {
 788:main.c        ****                 OLED_draw(128, 64);
 3429              		.loc 1 788 0
 3430 0bd6 4021     		movs	r1, #64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 76


 3431 0bd8 8020     		movs	r0, #128
 3432 0bda FFF7FEFF 		bl	OLED_draw
 789:main.c        ****                 mainOLEDWaitingToSend = 0;
 3433              		.loc 1 789 0
 3434 0bde 2F4B     		ldr	r3, .L186+56
 3435 0be0 0022     		movs	r2, #0
 3436 0be2 1A70     		strb	r2, [r3]
 3437              	.L91:
 790:main.c        ****             }
 791:main.c        ****             if (macroOLEDWaitingToSend == 1)
 3438              		.loc 1 791 0
 3439 0be4 244B     		ldr	r3, .L186+20
 3440 0be6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3441 0be8 012B     		cmp	r3, #1
 3442 0bea 02D1     		bne	.L88
 792:main.c        ****             {
 793:main.c        ****                 macroOLEDWaitingToSend = 2;
 3443              		.loc 1 793 0
 3444 0bec 224B     		ldr	r3, .L186+20
 3445 0bee 0222     		movs	r2, #2
 3446 0bf0 1A70     		strb	r2, [r3]
 3447              	.L88:
 794:main.c        ****             }
 795:main.c        ****         }
 796:main.c        **** 
 797:main.c        ****        
 798:main.c        ****         
 799:main.c        ****         if (main_counter < 10)
 3448              		.loc 1 799 0
 3449 0bf2 274B     		ldr	r3, .L186+44
 3450 0bf4 1B78     		ldrb	r3, [r3]
 3451 0bf6 DBB2     		uxtb	r3, r3
 3452 0bf8 092B     		cmp	r3, #9
 3453 0bfa 00F20F81 		bhi	.L92
 3454              	.LBB24:
 800:main.c        ****         {
 801:main.c        ****             
 802:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
 803:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_lowWithDeadZone[ma
 3455              		.loc 1 803 0
 3456 0bfe 244B     		ldr	r3, .L186+44
 3457 0c00 1B78     		ldrb	r3, [r3]
 3458 0c02 DBB2     		uxtb	r3, r3
 3459 0c04 1A46     		mov	r2, r3
 3460 0c06 264B     		ldr	r3, .L186+60
 3461 0c08 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3462 0c0c 204B     		ldr	r3, .L186+44
 3463 0c0e 1B78     		ldrb	r3, [r3]
 3464 0c10 DBB2     		uxtb	r3, r3
 3465 0c12 1946     		mov	r1, r3
 3466 0c14 234B     		ldr	r3, .L186+64
 3467 0c16 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3468 0c1a D31A     		subs	r3, r2, r3
 3469 0c1c 9BB2     		uxth	r3, r3
 3470 0c1e 3B85     		strh	r3, [r7, #40]	@ movhi
 804:main.c        ****             
 805:main.c        ****             if (tempangle > 0)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 77


 3471              		.loc 1 805 0
 3472 0c20 B7F92830 		ldrsh	r3, [r7, #40]
 3473 0c24 002B     		cmp	r3, #0
 3474 0c26 43DD     		ble	.L93
 806:main.c        ****             {
 807:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 3475              		.loc 1 807 0
 3476 0c28 194B     		ldr	r3, .L186+44
 3477 0c2a 1B78     		ldrb	r3, [r3]
 3478 0c2c DBB2     		uxtb	r3, r3
 3479 0c2e 1C46     		mov	r4, r3
 3480 0c30 B7F92830 		ldrsh	r3, [r7, #40]
 3481 0c34 1846     		mov	r0, r3
 3482 0c36 FFF7FEFF 		bl	__aeabi_i2f
 3483 0c3a 154B     		ldr	r3, .L186+44
 3484 0c3c 1B78     		ldrb	r3, [r3]
 3485 0c3e DBB2     		uxtb	r3, r3
 3486 0c40 1A46     		mov	r2, r3
 3487 0c42 194B     		ldr	r3, .L186+68
 3488 0c44 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 3489 0c48 1946     		mov	r1, r3
 3490 0c4a FFF7FEFF 		bl	__aeabi_fmul
 3491 0c4e 0346     		mov	r3, r0
 3492 0c50 1846     		mov	r0, r3
 3493 0c52 FFF7FEFF 		bl	__aeabi_f2uiz
 3494 0c56 0346     		mov	r3, r0
 3495 0c58 9AB2     		uxth	r2, r3
 3496 0c5a 144B     		ldr	r3, .L186+72
 3497 0c5c 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 3498 0c60 2EE0     		b	.L94
 3499              	.L187:
 3500 0c62 00BF     		.align	2
 3501              	.L186:
 3502 0c64 00000000 		.word	I2Cbuff2
 3503 0c68 00000000 		.word	macroKnobValues
 3504 0c6c 00000000 		.word	midiSendOn
 3505 0c70 00000000 		.word	macroKnobValues7bit
 3506 0c74 00000000 		.word	prevMacroKnobValues7bit
 3507 0c78 00000000 		.word	macroOLEDWaitingToSend
 3508 0c7c 00000000 		.word	whichMacro
 3509 0c80 00000000 		.word	I2Cbuff1
 3510 0c84 00000000 		.word	status
 3511 0c88 00000000 		.word	patchNum
 3512 0c8c 00000000 		.word	macroNamesArray
 3513 0c90 00000000 		.word	main_counter
 3514 0c94 00000000 		.word	i2c_skipped
 3515 0c98 00000000 		.word	volumePedal
 3516 0c9c 00000000 		.word	mainOLEDWaitingToSend
 3517 0ca0 00000000 		.word	angle
 3518 0ca4 00000000 		.word	pedals_lowWithDeadZone
 3519 0ca8 00000000 		.word	pedalRatios
 3520 0cac 00000000 		.word	processed_pedals
 3521              	.L93:
 808:main.c        ****             }
 809:main.c        ****             else
 810:main.c        ****             {
 811:main.c        ****                 processed_pedals[main_counter] = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 78


 3522              		.loc 1 811 0
 3523 0cb0 974B     		ldr	r3, .L188
 3524 0cb2 1B78     		ldrb	r3, [r3]
 3525 0cb4 DBB2     		uxtb	r3, r3
 3526 0cb6 1A46     		mov	r2, r3
 3527 0cb8 964B     		ldr	r3, .L188+4
 3528 0cba 0021     		movs	r1, #0
 3529 0cbc 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3530              	.L94:
 812:main.c        ****             }
 813:main.c        ****             if (processed_pedals[main_counter] > 4095)
 3531              		.loc 1 813 0
 3532 0cc0 934B     		ldr	r3, .L188
 3533 0cc2 1B78     		ldrb	r3, [r3]
 3534 0cc4 DBB2     		uxtb	r3, r3
 3535 0cc6 1A46     		mov	r2, r3
 3536 0cc8 924B     		ldr	r3, .L188+4
 3537 0cca 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3538 0cce B3F5805F 		cmp	r3, #4096
 3539 0cd2 08D3     		bcc	.L95
 814:main.c        ****             {
 815:main.c        ****                 processed_pedals[main_counter] = 4095;
 3540              		.loc 1 815 0
 3541 0cd4 8E4B     		ldr	r3, .L188
 3542 0cd6 1B78     		ldrb	r3, [r3]
 3543 0cd8 DBB2     		uxtb	r3, r3
 3544 0cda 1A46     		mov	r2, r3
 3545 0cdc 8D4B     		ldr	r3, .L188+4
 3546 0cde 40F6FF71 		movw	r1, #4095
 3547 0ce2 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3548              	.L95:
 816:main.c        ****             }
 817:main.c        ****             //invert the ones that are sensing rotation backwards
 818:main.c        ****             if (pedal_inverted[main_counter])
 3549              		.loc 1 818 0
 3550 0ce6 8A4B     		ldr	r3, .L188
 3551 0ce8 1B78     		ldrb	r3, [r3]
 3552 0cea DBB2     		uxtb	r3, r3
 3553 0cec 1A46     		mov	r2, r3
 3554 0cee 8A4B     		ldr	r3, .L188+8
 3555 0cf0 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3556 0cf2 002B     		cmp	r3, #0
 3557 0cf4 11D0     		beq	.L96
 819:main.c        ****             {
 820:main.c        ****                 processed_pedals[main_counter] = 4095 - processed_pedals[main_counter];
 3558              		.loc 1 820 0
 3559 0cf6 864B     		ldr	r3, .L188
 3560 0cf8 1B78     		ldrb	r3, [r3]
 3561 0cfa DBB2     		uxtb	r3, r3
 3562 0cfc 1A46     		mov	r2, r3
 3563 0cfe 844B     		ldr	r3, .L188
 3564 0d00 1B78     		ldrb	r3, [r3]
 3565 0d02 DBB2     		uxtb	r3, r3
 3566 0d04 1946     		mov	r1, r3
 3567 0d06 834B     		ldr	r3, .L188+4
 3568 0d08 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3569 0d0c C3F57F63 		rsb	r3, r3, #4080
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 79


 3570 0d10 0F33     		adds	r3, r3, #15
 3571 0d12 99B2     		uxth	r1, r3
 3572 0d14 7F4B     		ldr	r3, .L188+4
 3573 0d16 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3574              	.L96:
 821:main.c        ****             }
 822:main.c        ****             
 823:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
 824:main.c        ****             {
 825:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
 826:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
 827:main.c        ****             }
 828:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 3575              		.loc 1 828 0
 3576 0d1a 7D4B     		ldr	r3, .L188
 3577 0d1c 1B78     		ldrb	r3, [r3]
 3578 0d1e DBB2     		uxtb	r3, r3
 3579 0d20 1C46     		mov	r4, r3
 3580 0d22 7B4B     		ldr	r3, .L188
 3581 0d24 1B78     		ldrb	r3, [r3]
 3582 0d26 DBB2     		uxtb	r3, r3
 3583 0d28 1A46     		mov	r2, r3
 3584 0d2a 7A4B     		ldr	r3, .L188+4
 3585 0d2c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3586 0d30 1846     		mov	r0, r3
 3587 0d32 FFF7FEFF 		bl	__aeabi_ui2f
 3588 0d36 0346     		mov	r3, r0
 3589 0d38 7849     		ldr	r1, .L188+12
 3590 0d3a 1846     		mov	r0, r3
 3591 0d3c FFF7FEFF 		bl	__aeabi_fmul
 3592 0d40 0346     		mov	r3, r0
 3593 0d42 1A46     		mov	r2, r3
 3594 0d44 764B     		ldr	r3, .L188+16
 3595 0d46 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
 829:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[pedal_cc_assignments[main_counter]] 
 3596              		.loc 1 829 0
 3597 0d4a 714B     		ldr	r3, .L188
 3598 0d4c 1B78     		ldrb	r3, [r3]
 3599 0d4e DBB2     		uxtb	r3, r3
 3600 0d50 1C46     		mov	r4, r3
 3601 0d52 6F4B     		ldr	r3, .L188
 3602 0d54 1B78     		ldrb	r3, [r3]
 3603 0d56 DBB2     		uxtb	r3, r3
 3604 0d58 1A46     		mov	r2, r3
 3605 0d5a 724B     		ldr	r3, .L188+20
 3606 0d5c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3607 0d5e 1A46     		mov	r2, r3
 3608 0d60 6C4B     		ldr	r3, .L188+4
 3609 0d62 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3610 0d66 1846     		mov	r0, r3
 3611 0d68 FFF7FEFF 		bl	__aeabi_ui2f
 3612 0d6c 0346     		mov	r3, r0
 3613 0d6e 4FF07651 		mov	r1, #1031798784
 3614 0d72 1846     		mov	r0, r3
 3615 0d74 FFF7FEFF 		bl	__aeabi_fmul
 3616 0d78 0346     		mov	r3, r0
 3617 0d7a 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 80


 3618 0d7c FFF7FEFF 		bl	__aeabi_f2uiz
 3619 0d80 0346     		mov	r3, r0
 3620 0d82 DAB2     		uxtb	r2, r3
 3621 0d84 684B     		ldr	r3, .L188+24
 3622 0d86 1A55     		strb	r2, [r3, r4]
 830:main.c        ****             if (midiSendOn)
 3623              		.loc 1 830 0
 3624 0d88 684B     		ldr	r3, .L188+28
 3625 0d8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3626 0d8c 002B     		cmp	r3, #0
 3627 0d8e 36D0     		beq	.L97
 831:main.c        ****             {
 832:main.c        ****                 pedals7bit[main_counter] = pedals8bit[main_counter] >> 1;
 3628              		.loc 1 832 0
 3629 0d90 5F4B     		ldr	r3, .L188
 3630 0d92 1B78     		ldrb	r3, [r3]
 3631 0d94 DBB2     		uxtb	r3, r3
 3632 0d96 1A46     		mov	r2, r3
 3633 0d98 5D4B     		ldr	r3, .L188
 3634 0d9a 1B78     		ldrb	r3, [r3]
 3635 0d9c DBB2     		uxtb	r3, r3
 3636 0d9e 1946     		mov	r1, r3
 3637 0da0 614B     		ldr	r3, .L188+24
 3638 0da2 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3639 0da4 5B08     		lsrs	r3, r3, #1
 3640 0da6 D9B2     		uxtb	r1, r3
 3641 0da8 614B     		ldr	r3, .L188+32
 3642 0daa 9954     		strb	r1, [r3, r2]
 833:main.c        ****                 if (pedals7bit[main_counter] != prevPedals7bit[main_counter])
 3643              		.loc 1 833 0
 3644 0dac 584B     		ldr	r3, .L188
 3645 0dae 1B78     		ldrb	r3, [r3]
 3646 0db0 DBB2     		uxtb	r3, r3
 3647 0db2 1A46     		mov	r2, r3
 3648 0db4 5E4B     		ldr	r3, .L188+32
 3649 0db6 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3650 0db8 554B     		ldr	r3, .L188
 3651 0dba 1B78     		ldrb	r3, [r3]
 3652 0dbc DBB2     		uxtb	r3, r3
 3653 0dbe 1946     		mov	r1, r3
 3654 0dc0 5C4B     		ldr	r3, .L188+36
 3655 0dc2 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3656 0dc4 9A42     		cmp	r2, r3
 3657 0dc6 0ED0     		beq	.L98
 834:main.c        ****                 {
 835:main.c        ****                     sendMIDIControlChange(main_counter + 14, (pedals7bit[main_counter]), 1);
 3658              		.loc 1 835 0
 3659 0dc8 514B     		ldr	r3, .L188
 3660 0dca 1B78     		ldrb	r3, [r3]
 3661 0dcc DBB2     		uxtb	r3, r3
 3662 0dce 03F10E00 		add	r0, r3, #14
 3663 0dd2 4F4B     		ldr	r3, .L188
 3664 0dd4 1B78     		ldrb	r3, [r3]
 3665 0dd6 DBB2     		uxtb	r3, r3
 3666 0dd8 1A46     		mov	r2, r3
 3667 0dda 554B     		ldr	r3, .L188+32
 3668 0ddc 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 81


 3669 0dde 0122     		movs	r2, #1
 3670 0de0 1946     		mov	r1, r3
 3671 0de2 FFF7FEFF 		bl	sendMIDIControlChange
 3672              	.L98:
 836:main.c        ****                 }
 837:main.c        ****                 prevPedals7bit[main_counter] = pedals7bit[main_counter];
 3673              		.loc 1 837 0
 3674 0de6 4A4B     		ldr	r3, .L188
 3675 0de8 1B78     		ldrb	r3, [r3]
 3676 0dea DBB2     		uxtb	r3, r3
 3677 0dec 1A46     		mov	r2, r3
 3678 0dee 484B     		ldr	r3, .L188
 3679 0df0 1B78     		ldrb	r3, [r3]
 3680 0df2 DBB2     		uxtb	r3, r3
 3681 0df4 1946     		mov	r1, r3
 3682 0df6 4E4B     		ldr	r3, .L188+32
 3683 0df8 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 3684 0dfa 4E4B     		ldr	r3, .L188+36
 3685 0dfc 9954     		strb	r1, [r3, r2]
 3686              	.L97:
 838:main.c        ****             }
 839:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 3687              		.loc 1 839 0
 3688 0dfe 444B     		ldr	r3, .L188
 3689 0e00 1B78     		ldrb	r3, [r3]
 3690 0e02 DBB2     		uxtb	r3, r3
 3691 0e04 1A46     		mov	r2, r3
 3692 0e06 424B     		ldr	r3, .L188
 3693 0e08 1B78     		ldrb	r3, [r3]
 3694 0e0a DBB2     		uxtb	r3, r3
 3695 0e0c 1946     		mov	r1, r3
 3696 0e0e 414B     		ldr	r3, .L188+4
 3697 0e10 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3698 0e14 484B     		ldr	r3, .L188+40
 3699 0e16 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3700              	.LBE24:
 3701 0e1a 41E0     		b	.L99
 3702              	.L92:
 840:main.c        ****         }
 841:main.c        ****         else
 842:main.c        ****         {
 843:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 3703              		.loc 1 843 0
 3704 0e1c 474B     		ldr	r3, .L188+44
 3705 0e1e 1B88     		ldrh	r3, [r3]
 3706 0e20 1846     		mov	r0, r3
 3707 0e22 FFF7FEFF 		bl	__aeabi_ui2f
 3708 0e26 0346     		mov	r3, r0
 3709 0e28 4549     		ldr	r1, .L188+48
 3710 0e2a 1846     		mov	r0, r3
 3711 0e2c FFF7FEFF 		bl	__aeabi_fmul
 3712 0e30 0346     		mov	r3, r0
 3713 0e32 1846     		mov	r0, r3
 3714 0e34 FFF7FEFF 		bl	__aeabi_f2iz
 3715 0e38 0346     		mov	r3, r0
 3716 0e3a 1AB2     		sxth	r2, r3
 3717 0e3c 414B     		ldr	r3, .L188+52
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 82


 3718 0e3e 1A80     		strh	r2, [r3]	@ movhi
 844:main.c        **** 
 845:main.c        ****             if (processed_volumePedal < 0)
 3719              		.loc 1 845 0
 3720 0e40 404B     		ldr	r3, .L188+52
 3721 0e42 B3F90030 		ldrsh	r3, [r3]
 3722 0e46 002B     		cmp	r3, #0
 3723 0e48 03DA     		bge	.L100
 846:main.c        ****             {
 847:main.c        ****                 processed_volumePedal = 0;
 3724              		.loc 1 847 0
 3725 0e4a 3E4B     		ldr	r3, .L188+52
 3726 0e4c 0022     		movs	r2, #0
 3727 0e4e 1A80     		strh	r2, [r3]	@ movhi
 3728 0e50 09E0     		b	.L101
 3729              	.L100:
 848:main.c        ****             }
 849:main.c        ****             else if (processed_volumePedal > 4095)
 3730              		.loc 1 849 0
 3731 0e52 3C4B     		ldr	r3, .L188+52
 3732 0e54 B3F90030 		ldrsh	r3, [r3]
 3733 0e58 B3F5805F 		cmp	r3, #4096
 3734 0e5c 03DB     		blt	.L101
 850:main.c        ****             {
 851:main.c        ****                  processed_volumePedal = 4095;
 3735              		.loc 1 851 0
 3736 0e5e 394B     		ldr	r3, .L188+52
 3737 0e60 40F6FF72 		movw	r2, #4095
 3738 0e64 1A80     		strh	r2, [r3]	@ movhi
 3739              	.L101:
 852:main.c        ****             }
 853:main.c        ****             if (midiSendOn)
 3740              		.loc 1 853 0
 3741 0e66 314B     		ldr	r3, .L188+28
 3742 0e68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3743 0e6a 002B     		cmp	r3, #0
 3744 0e6c 18D0     		beq	.L99
 854:main.c        ****             {
 855:main.c        ****                 u7bit_volumePedal = processed_volumePedal >> 5;
 3745              		.loc 1 855 0
 3746 0e6e 354B     		ldr	r3, .L188+52
 3747 0e70 B3F90030 		ldrsh	r3, [r3]
 3748 0e74 5B11     		asrs	r3, r3, #5
 3749 0e76 1BB2     		sxth	r3, r3
 3750 0e78 DAB2     		uxtb	r2, r3
 3751 0e7a 334B     		ldr	r3, .L188+56
 3752 0e7c 1A70     		strb	r2, [r3]
 856:main.c        ****                 if ( u7bit_volumePedal != prev_7bit_volumePedal)
 3753              		.loc 1 856 0
 3754 0e7e 324B     		ldr	r3, .L188+56
 3755 0e80 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3756 0e82 324B     		ldr	r3, .L188+60
 3757 0e84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3758 0e86 9A42     		cmp	r2, r3
 3759 0e88 06D0     		beq	.L102
 857:main.c        ****                 {
 858:main.c        ****                     //uint16_t tempPedal = processed_volumePedal;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 83


 859:main.c        ****                     
 860:main.c        ****                     sendMIDIControlChange(13, u7bit_volumePedal, 0);
 3760              		.loc 1 860 0
 3761 0e8a 2F4B     		ldr	r3, .L188+56
 3762 0e8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3763 0e8e 0022     		movs	r2, #0
 3764 0e90 1946     		mov	r1, r3
 3765 0e92 0D20     		movs	r0, #13
 3766 0e94 FFF7FEFF 		bl	sendMIDIControlChange
 3767              	.L102:
 861:main.c        ****                     //sendMIDIControlChange(22, ( tempPedal & 127), 0);
 862:main.c        ****                 }
 863:main.c        ****                  //prev_processed_volumePedal = processed_volumePedal;
 864:main.c        ****                 prev_7bit_volumePedal = u7bit_volumePedal;
 3768              		.loc 1 864 0
 3769 0e98 2B4B     		ldr	r3, .L188+56
 3770 0e9a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3771 0e9c 2B4B     		ldr	r3, .L188+60
 3772 0e9e 1A70     		strb	r2, [r3]
 3773              	.L99:
 865:main.c        ****             }
 866:main.c        ****         }
 867:main.c        ****         
 868:main.c        ****         main_counter++;
 3774              		.loc 1 868 0
 3775 0ea0 1B4B     		ldr	r3, .L188
 3776 0ea2 1B78     		ldrb	r3, [r3]
 3777 0ea4 DBB2     		uxtb	r3, r3
 3778 0ea6 0133     		adds	r3, r3, #1
 3779 0ea8 DAB2     		uxtb	r2, r3
 3780 0eaa 194B     		ldr	r3, .L188
 3781 0eac 1A70     		strb	r2, [r3]
 869:main.c        **** 
 870:main.c        ****         if (main_counter > 11)
 3782              		.loc 1 870 0
 3783 0eae 184B     		ldr	r3, .L188
 3784 0eb0 1B78     		ldrb	r3, [r3]
 3785 0eb2 DBB2     		uxtb	r3, r3
 3786 0eb4 0B2B     		cmp	r3, #11
 3787 0eb6 02D9     		bls	.L103
 871:main.c        ****         {
 872:main.c        ****             main_counter = 0;
 3788              		.loc 1 872 0
 3789 0eb8 154B     		ldr	r3, .L188
 3790 0eba 0022     		movs	r2, #0
 3791 0ebc 1A70     		strb	r2, [r3]
 3792              	.L103:
 873:main.c        ****         }
 874:main.c        ****         testpin3_Write(0);
 3793              		.loc 1 874 0
 3794 0ebe 0020     		movs	r0, #0
 3795 0ec0 FFF7FEFF 		bl	testpin3_Write
 875:main.c        **** 
 876:main.c        ****         testpin5_Write(1);
 3796              		.loc 1 876 0
 3797 0ec4 0120     		movs	r0, #1
 3798 0ec6 FFF7FEFF 		bl	testpin5_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 84


 877:main.c        ****         
 878:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 3799              		.loc 1 878 0
 3800 0eca 214B     		ldr	r3, .L188+64
 3801 0ecc 1B78     		ldrb	r3, [r3]
 3802 0ece DBB2     		uxtb	r3, r3
 3803 0ed0 002B     		cmp	r3, #0
 3804 0ed2 0CBF     		ite	eq
 3805 0ed4 0123     		moveq	r3, #1
 3806 0ed6 0023     		movne	r3, #0
 3807 0ed8 DBB2     		uxtb	r3, r3
 3808 0eda 1E4A     		ldr	r2, .L188+68
 3809 0edc DB00     		lsls	r3, r3, #3
 3810 0ede 1344     		add	r3, r3, r2
 3811 0ee0 9B79     		ldrb	r3, [r3, #6]
 3812 0ee2 DBB2     		uxtb	r3, r3
 3813 0ee4 FE2B     		cmp	r3, #254
 3814 0ee6 40F04B81 		bne	.L104
 3815              		.loc 1 878 0 is_stmt 0 discriminator 1
 3816 0eea 194B     		ldr	r3, .L188+64
 3817 0eec 1B78     		ldrb	r3, [r3]
 3818 0eee DBB2     		uxtb	r3, r3
 3819 0ef0 002B     		cmp	r3, #0
 3820 0ef2 0CBF     		ite	eq
 3821 0ef4 0123     		moveq	r3, #1
 3822 0ef6 0023     		movne	r3, #0
 3823 0ef8 DBB2     		uxtb	r3, r3
 3824 0efa 164A     		ldr	r2, .L188+68
 3825 0efc DB00     		lsls	r3, r3, #3
 3826 0efe 1344     		add	r3, r3, r2
 3827 0f00 DB79     		ldrb	r3, [r3, #7]
 3828 0f02 DBB2     		uxtb	r3, r3
 3829 0f04 FD2B     		cmp	r3, #253
 3830 0f06 40F03B81 		bne	.L104
 3831              	.LBB25:
 879:main.c        ****         {
 880:main.c        ****             for (int i = 0; i < NUM_SLIDERS; i++)
 3832              		.loc 1 880 0 is_stmt 1
 3833 0f0a 0023     		movs	r3, #0
 3834 0f0c 3B67     		str	r3, [r7, #112]
 3835 0f0e 33E1     		b	.L105
 3836              	.L189:
 3837              		.align	2
 3838              	.L188:
 3839 0f10 00000000 		.word	main_counter
 3840 0f14 00000000 		.word	processed_pedals
 3841 0f18 00000000 		.word	pedal_inverted
 3842 0f1c 01088039 		.word	964691969
 3843 0f20 00000000 		.word	pedals_float
 3844 0f24 00000000 		.word	pedal_cc_assignments
 3845 0f28 00000000 		.word	pedals8bit
 3846 0f2c 00000000 		.word	midiSendOn
 3847 0f30 00000000 		.word	pedals7bit
 3848 0f34 00000000 		.word	prevPedals7bit
 3849 0f38 00000000 		.word	prev_processed_pedals
 3850 0f3c 00000000 		.word	volumePedal
 3851 0f40 C5F1803F 		.word	1065415109
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 85


 3852 0f44 00000000 		.word	processed_volumePedal
 3853 0f48 00000000 		.word	u7bit_volumePedal
 3854 0f4c 00000000 		.word	prev_7bit_volumePedal
 3855 0f50 00000000 		.word	currentBarBuffer
 3856 0f54 00000000 		.word	rxBufferBar
 3857              	.L114:
 881:main.c        ****             {
 882:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 3858              		.loc 1 882 0
 3859 0f58 A14B     		ldr	r3, .L190
 3860 0f5a 1B78     		ldrb	r3, [r3]
 3861 0f5c DBB2     		uxtb	r3, r3
 3862 0f5e 002B     		cmp	r3, #0
 3863 0f60 0CBF     		ite	eq
 3864 0f62 0123     		moveq	r3, #1
 3865 0f64 0023     		movne	r3, #0
 3866 0f66 DBB2     		uxtb	r3, r3
 3867 0f68 1A46     		mov	r2, r3
 3868 0f6a 3B6F     		ldr	r3, [r7, #112]
 3869 0f6c 5B00     		lsls	r3, r3, #1
 3870 0f6e 9D49     		ldr	r1, .L190+4
 3871 0f70 D200     		lsls	r2, r2, #3
 3872 0f72 0A44     		add	r2, r2, r1
 3873 0f74 1344     		add	r3, r3, r2
 3874 0f76 1B78     		ldrb	r3, [r3]
 3875 0f78 DBB2     		uxtb	r3, r3
 3876 0f7a 9BB2     		uxth	r3, r3
 3877 0f7c 1B02     		lsls	r3, r3, #8
 3878 0f7e 9AB2     		uxth	r2, r3
 3879 0f80 974B     		ldr	r3, .L190
 3880 0f82 1B78     		ldrb	r3, [r3]
 3881 0f84 DBB2     		uxtb	r3, r3
 3882 0f86 002B     		cmp	r3, #0
 3883 0f88 0CBF     		ite	eq
 3884 0f8a 0123     		moveq	r3, #1
 3885 0f8c 0023     		movne	r3, #0
 3886 0f8e DBB2     		uxtb	r3, r3
 3887 0f90 1946     		mov	r1, r3
 3888 0f92 3B6F     		ldr	r3, [r7, #112]
 3889 0f94 5B00     		lsls	r3, r3, #1
 3890 0f96 0133     		adds	r3, r3, #1
 3891 0f98 9248     		ldr	r0, .L190+4
 3892 0f9a C900     		lsls	r1, r1, #3
 3893 0f9c 0144     		add	r1, r1, r0
 3894 0f9e 0B44     		add	r3, r3, r1
 3895 0fa0 1B78     		ldrb	r3, [r3]
 3896 0fa2 DBB2     		uxtb	r3, r3
 3897 0fa4 9BB2     		uxth	r3, r3
 3898 0fa6 1344     		add	r3, r3, r2
 3899 0fa8 99B2     		uxth	r1, r3
 3900 0faa 8F4A     		ldr	r2, .L190+8
 3901 0fac 3B6F     		ldr	r3, [r7, #112]
 3902 0fae 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 883:main.c        ****                 //
 884:main.c        ****                 if(bar[i] != prevBar[i])
 3903              		.loc 1 884 0
 3904 0fb2 8D4A     		ldr	r2, .L190+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 86


 3905 0fb4 3B6F     		ldr	r3, [r7, #112]
 3906 0fb6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3907 0fba 9AB2     		uxth	r2, r3
 3908 0fbc 8B49     		ldr	r1, .L190+12
 3909 0fbe 3B6F     		ldr	r3, [r7, #112]
 3910 0fc0 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3911 0fc4 9BB2     		uxth	r3, r3
 3912 0fc6 9A42     		cmp	r2, r3
 3913 0fc8 00F0CA80 		beq	.L106
 885:main.c        ****                 {
 886:main.c        ****     				
 887:main.c        ****                     if ((bar[i] == 65535) || (bar[i] > fretMeasurements[i][0]))
 3914              		.loc 1 887 0
 3915 0fcc 864A     		ldr	r2, .L190+8
 3916 0fce 3B6F     		ldr	r3, [r7, #112]
 3917 0fd0 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3918 0fd4 9BB2     		uxth	r3, r3
 3919 0fd6 4FF6FF72 		movw	r2, #65535
 3920 0fda 9342     		cmp	r3, r2
 3921 0fdc 0ED0     		beq	.L107
 3922              		.loc 1 887 0 is_stmt 0 discriminator 1
 3923 0fde 824A     		ldr	r2, .L190+8
 3924 0fe0 3B6F     		ldr	r3, [r7, #112]
 3925 0fe2 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3926 0fe6 99B2     		uxth	r1, r3
 3927 0fe8 8148     		ldr	r0, .L190+16
 3928 0fea 3A6F     		ldr	r2, [r7, #112]
 3929 0fec 1346     		mov	r3, r2
 3930 0fee 5B00     		lsls	r3, r3, #1
 3931 0ff0 1344     		add	r3, r3, r2
 3932 0ff2 DB00     		lsls	r3, r3, #3
 3933 0ff4 0344     		add	r3, r3, r0
 3934 0ff6 1B88     		ldrh	r3, [r3]
 3935 0ff8 9942     		cmp	r1, r3
 3936 0ffa 06D9     		bls	.L108
 3937              	.L107:
 888:main.c        ****     				{
 889:main.c        ****     					stringMappedPositionsInRatios[i] = 1.0f;
 3938              		.loc 1 889 0 is_stmt 1
 3939 0ffc 7D4A     		ldr	r2, .L190+20
 3940 0ffe 3B6F     		ldr	r3, [r7, #112]
 3941 1000 4FF07E51 		mov	r1, #1065353216
 3942 1004 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3943 1008 AAE0     		b	.L106
 3944              	.L108:
 890:main.c        ****     				}
 891:main.c        ****                     else if (bar[i] > fretMeasurements[i][NUM_FRET_MEASUREMENTS-1])
 3945              		.loc 1 891 0
 3946 100a 774A     		ldr	r2, .L190+8
 3947 100c 3B6F     		ldr	r3, [r7, #112]
 3948 100e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3949 1012 99B2     		uxth	r1, r3
 3950 1014 7648     		ldr	r0, .L190+16
 3951 1016 3A6F     		ldr	r2, [r7, #112]
 3952 1018 1346     		mov	r3, r2
 3953 101a 5B00     		lsls	r3, r3, #1
 3954 101c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 87


 3955 101e DB00     		lsls	r3, r3, #3
 3956 1020 0344     		add	r3, r3, r0
 3957 1022 1633     		adds	r3, r3, #22
 3958 1024 1B88     		ldrh	r3, [r3]
 3959 1026 9942     		cmp	r1, r3
 3960 1028 67D9     		bls	.L109
 3961              	.LBB26:
 892:main.c        ****                     {
 893:main.c        ****                         for (int j = 0; j < NUM_FRET_MEASUREMENTS-1; j++)
 3962              		.loc 1 893 0
 3963 102a 0023     		movs	r3, #0
 3964 102c FB66     		str	r3, [r7, #108]
 3965 102e 60E0     		b	.L110
 3966              	.L113:
 894:main.c        ****                         {
 895:main.c        ****                             if ((bar[i] <=  fretMeasurements[i][j]) && (bar[i] >  fretMeasurements[
 3967              		.loc 1 895 0
 3968 1030 6D4A     		ldr	r2, .L190+8
 3969 1032 3B6F     		ldr	r3, [r7, #112]
 3970 1034 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3971 1038 99B2     		uxth	r1, r3
 3972 103a 6D48     		ldr	r0, .L190+16
 3973 103c 3A6F     		ldr	r2, [r7, #112]
 3974 103e 1346     		mov	r3, r2
 3975 1040 5B00     		lsls	r3, r3, #1
 3976 1042 1344     		add	r3, r3, r2
 3977 1044 9B00     		lsls	r3, r3, #2
 3978 1046 FA6E     		ldr	r2, [r7, #108]
 3979 1048 1344     		add	r3, r3, r2
 3980 104a 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 3981 104e 9942     		cmp	r1, r3
 3982 1050 4CD8     		bhi	.L111
 3983              		.loc 1 895 0 is_stmt 0 discriminator 1
 3984 1052 654A     		ldr	r2, .L190+8
 3985 1054 3B6F     		ldr	r3, [r7, #112]
 3986 1056 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3987 105a 99B2     		uxth	r1, r3
 3988 105c FB6E     		ldr	r3, [r7, #108]
 3989 105e 581C     		adds	r0, r3, #1
 3990 1060 634C     		ldr	r4, .L190+16
 3991 1062 3A6F     		ldr	r2, [r7, #112]
 3992 1064 1346     		mov	r3, r2
 3993 1066 5B00     		lsls	r3, r3, #1
 3994 1068 1344     		add	r3, r3, r2
 3995 106a 9B00     		lsls	r3, r3, #2
 3996 106c 0344     		add	r3, r3, r0
 3997 106e 34F81330 		ldrh	r3, [r4, r3, lsl #1]
 3998 1072 9942     		cmp	r1, r3
 3999 1074 3AD9     		bls	.L111
 896:main.c        ****                             {
 897:main.c        ****                                 stringMappedPositionsInRatios[i] = map((float)bar[i], fretMeasureme
 4000              		.loc 1 897 0 is_stmt 1
 4001 1076 5C4A     		ldr	r2, .L190+8
 4002 1078 3B6F     		ldr	r3, [r7, #112]
 4003 107a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4004 107e 9BB2     		uxth	r3, r3
 4005 1080 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 88


 4006 1082 FFF7FEFF 		bl	__aeabi_ui2f
 4007 1086 0446     		mov	r4, r0
 4008 1088 5949     		ldr	r1, .L190+16
 4009 108a 3A6F     		ldr	r2, [r7, #112]
 4010 108c 1346     		mov	r3, r2
 4011 108e 5B00     		lsls	r3, r3, #1
 4012 1090 1344     		add	r3, r3, r2
 4013 1092 9B00     		lsls	r3, r3, #2
 4014 1094 FA6E     		ldr	r2, [r7, #108]
 4015 1096 1344     		add	r3, r3, r2
 4016 1098 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 4017 109c 1846     		mov	r0, r3
 4018 109e FFF7FEFF 		bl	__aeabi_ui2f
 4019 10a2 0546     		mov	r5, r0
 4020 10a4 FB6E     		ldr	r3, [r7, #108]
 4021 10a6 591C     		adds	r1, r3, #1
 4022 10a8 5148     		ldr	r0, .L190+16
 4023 10aa 3A6F     		ldr	r2, [r7, #112]
 4024 10ac 1346     		mov	r3, r2
 4025 10ae 5B00     		lsls	r3, r3, #1
 4026 10b0 1344     		add	r3, r3, r2
 4027 10b2 9B00     		lsls	r3, r3, #2
 4028 10b4 0B44     		add	r3, r3, r1
 4029 10b6 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 4030 10ba 1846     		mov	r0, r3
 4031 10bc FFF7FEFF 		bl	__aeabi_ui2f
 4032 10c0 4D4A     		ldr	r2, .L190+24
 4033 10c2 FB6E     		ldr	r3, [r7, #108]
 4034 10c4 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 4035 10c8 FB6E     		ldr	r3, [r7, #108]
 4036 10ca 0133     		adds	r3, r3, #1
 4037 10cc 4A4A     		ldr	r2, .L190+24
 4038 10ce 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4039 10d2 0093     		str	r3, [sp]	@ float
 4040 10d4 0B46     		mov	r3, r1
 4041 10d6 0246     		mov	r2, r0
 4042 10d8 2946     		mov	r1, r5
 4043 10da 2046     		mov	r0, r4
 4044 10dc FFF7FEFF 		bl	map
 4045 10e0 0146     		mov	r1, r0
 4046 10e2 444A     		ldr	r2, .L190+20
 4047 10e4 3B6F     		ldr	r3, [r7, #112]
 4048 10e6 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 898:main.c        ****                                 break;
 4049              		.loc 1 898 0
 4050 10ea 39E0     		b	.L106
 4051              	.L111:
 893:main.c        ****                         {
 4052              		.loc 1 893 0 discriminator 2
 4053 10ec FB6E     		ldr	r3, [r7, #108]
 4054 10ee 0133     		adds	r3, r3, #1
 4055 10f0 FB66     		str	r3, [r7, #108]
 4056              	.L110:
 893:main.c        ****                         {
 4057              		.loc 1 893 0 is_stmt 0 discriminator 1
 4058 10f2 FB6E     		ldr	r3, [r7, #108]
 4059 10f4 0A2B     		cmp	r3, #10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 89


 4060 10f6 9BDD     		ble	.L113
 4061 10f8 32E0     		b	.L106
 4062              	.L109:
 4063              	.LBE26:
 899:main.c        ****                             }
 900:main.c        ****                         }
 901:main.c        ****                     }
 902:main.c        ****                     else
 903:main.c        ****                     {
 904:main.c        ****                         stringMappedPositionsInRatios[i] = map((float)bar[i], fretMeasurements[i][N
 4064              		.loc 1 904 0 is_stmt 1
 4065 10fa 3B4A     		ldr	r2, .L190+8
 4066 10fc 3B6F     		ldr	r3, [r7, #112]
 4067 10fe 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4068 1102 9BB2     		uxth	r3, r3
 4069 1104 1846     		mov	r0, r3
 4070 1106 FFF7FEFF 		bl	__aeabi_ui2f
 4071 110a 0446     		mov	r4, r0
 4072 110c 3849     		ldr	r1, .L190+16
 4073 110e 3A6F     		ldr	r2, [r7, #112]
 4074 1110 1346     		mov	r3, r2
 4075 1112 5B00     		lsls	r3, r3, #1
 4076 1114 1344     		add	r3, r3, r2
 4077 1116 DB00     		lsls	r3, r3, #3
 4078 1118 0B44     		add	r3, r3, r1
 4079 111a 1433     		adds	r3, r3, #20
 4080 111c 1B88     		ldrh	r3, [r3]
 4081 111e 1846     		mov	r0, r3
 4082 1120 FFF7FEFF 		bl	__aeabi_ui2f
 4083 1124 0546     		mov	r5, r0
 4084 1126 3249     		ldr	r1, .L190+16
 4085 1128 3A6F     		ldr	r2, [r7, #112]
 4086 112a 1346     		mov	r3, r2
 4087 112c 5B00     		lsls	r3, r3, #1
 4088 112e 1344     		add	r3, r3, r2
 4089 1130 DB00     		lsls	r3, r3, #3
 4090 1132 0B44     		add	r3, r3, r1
 4091 1134 1633     		adds	r3, r3, #22
 4092 1136 1B88     		ldrh	r3, [r3]
 4093 1138 1846     		mov	r0, r3
 4094 113a FFF7FEFF 		bl	__aeabi_ui2f
 4095 113e 0146     		mov	r1, r0
 4096 1140 2D4B     		ldr	r3, .L190+24
 4097 1142 9A6A     		ldr	r2, [r3, #40]	@ float
 4098 1144 2C4B     		ldr	r3, .L190+24
 4099 1146 DB6A     		ldr	r3, [r3, #44]	@ float
 4100 1148 0093     		str	r3, [sp]	@ float
 4101 114a 1346     		mov	r3, r2
 4102 114c 0A46     		mov	r2, r1
 4103 114e 2946     		mov	r1, r5
 4104 1150 2046     		mov	r0, r4
 4105 1152 FFF7FEFF 		bl	map
 4106 1156 0146     		mov	r1, r0
 4107 1158 264A     		ldr	r2, .L190+20
 4108 115a 3B6F     		ldr	r3, [r7, #112]
 4109 115c 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 4110              	.L106:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 90


 905:main.c        ****                     }
 906:main.c        ****                 }
 907:main.c        ****                 //
 908:main.c        ****                 prevBar[i] = bar[i];
 4111              		.loc 1 908 0 discriminator 2
 4112 1160 214A     		ldr	r2, .L190+8
 4113 1162 3B6F     		ldr	r3, [r7, #112]
 4114 1164 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4115 1168 99B2     		uxth	r1, r3
 4116 116a 204A     		ldr	r2, .L190+12
 4117 116c 3B6F     		ldr	r3, [r7, #112]
 4118 116e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 880:main.c        ****             {
 4119              		.loc 1 880 0 discriminator 2
 4120 1172 3B6F     		ldr	r3, [r7, #112]
 4121 1174 0133     		adds	r3, r3, #1
 4122 1176 3B67     		str	r3, [r7, #112]
 4123              	.L105:
 880:main.c        ****             {
 4124              		.loc 1 880 0 is_stmt 0 discriminator 1
 4125 1178 3B6F     		ldr	r3, [r7, #112]
 4126 117a 012B     		cmp	r3, #1
 4127 117c 7FF7ECAE 		ble	.L114
 4128              	.L104:
 4129              	.LBE25:
 909:main.c        ****             }
 910:main.c        ****         }
 911:main.c        ****         
 912:main.c        ****         testpin5_Write(0);
 4130              		.loc 1 912 0 is_stmt 1
 4131 1180 0020     		movs	r0, #0
 4132 1182 FFF7FEFF 		bl	testpin5_Write
 913:main.c        ****         if (midiSendOn)
 4133              		.loc 1 913 0
 4134 1186 1D4B     		ldr	r3, .L190+28
 4135 1188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4136 118a 002B     		cmp	r3, #0
 4137 118c 23D0     		beq	.L115
 4138              	.LBB27:
 914:main.c        ****         {
 915:main.c        ****             for (int i = 0 ; i < numStrings; i++)
 4139              		.loc 1 915 0
 4140 118e 0023     		movs	r3, #0
 4141 1190 BB66     		str	r3, [r7, #104]
 4142 1192 1AE0     		b	.L116
 4143              	.L118:
 916:main.c        ****             {
 917:main.c        ****                 if (strings[i] != prevStrings[i])
 4144              		.loc 1 917 0
 4145 1194 1A4A     		ldr	r2, .L190+32
 4146 1196 BB6E     		ldr	r3, [r7, #104]
 4147 1198 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4148 119c 9AB2     		uxth	r2, r3
 4149 119e 1949     		ldr	r1, .L190+36
 4150 11a0 BB6E     		ldr	r3, [r7, #104]
 4151 11a2 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 4152 11a6 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 91


 4153 11a8 9A42     		cmp	r2, r3
 4154 11aa 02D0     		beq	.L117
 918:main.c        ****                 {
 919:main.c        ****                     noteEvent(i);
 4155              		.loc 1 919 0
 4156 11ac B86E     		ldr	r0, [r7, #104]
 4157 11ae FFF7FEFF 		bl	noteEvent
 4158              	.L117:
 920:main.c        ****                 }
 921:main.c        ****                 prevStrings[i] = strings[i];
 4159              		.loc 1 921 0 discriminator 2
 4160 11b2 134A     		ldr	r2, .L190+32
 4161 11b4 BB6E     		ldr	r3, [r7, #104]
 4162 11b6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4163 11ba 99B2     		uxth	r1, r3
 4164 11bc 114A     		ldr	r2, .L190+36
 4165 11be BB6E     		ldr	r3, [r7, #104]
 4166 11c0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 915:main.c        ****             {
 4167              		.loc 1 915 0 discriminator 2
 4168 11c4 BB6E     		ldr	r3, [r7, #104]
 4169 11c6 0133     		adds	r3, r3, #1
 4170 11c8 BB66     		str	r3, [r7, #104]
 4171              	.L116:
 915:main.c        ****             {
 4172              		.loc 1 915 0 is_stmt 0 discriminator 1
 4173 11ca 0F4B     		ldr	r3, .L190+40
 4174 11cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4175 11ce 1A46     		mov	r2, r3
 4176 11d0 BB6E     		ldr	r3, [r7, #104]
 4177 11d2 9A42     		cmp	r2, r3
 4178 11d4 DEDC     		bgt	.L118
 4179              	.L115:
 4180              	.LBE27:
 922:main.c        ****             }
 923:main.c        ****         }
 924:main.c        ****        
 925:main.c        ****         scanUI();
 4181              		.loc 1 925 0 is_stmt 1
 4182 11d6 FFF7FEFF 		bl	scanUI
 4183              	.LBB28:
 926:main.c        ****         
 927:main.c        ****         for (int i=  0; i < 4; i++)
 4184              		.loc 1 927 0
 4185 11da 0023     		movs	r3, #0
 4186 11dc 7B66     		str	r3, [r7, #100]
 4187 11de 5EE0     		b	.L119
 4188              	.L191:
 4189              		.align	2
 4190              	.L190:
 4191 11e0 00000000 		.word	currentBarBuffer
 4192 11e4 00000000 		.word	rxBufferBar
 4193 11e8 00000000 		.word	bar
 4194 11ec 00000000 		.word	prevBar
 4195 11f0 00000000 		.word	fretMeasurements
 4196 11f4 00000000 		.word	stringMappedPositionsInRatios
 4197 11f8 00000000 		.word	fretScalingInRatios
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 92


 4198 11fc 00000000 		.word	midiSendOn
 4199 1200 00000000 		.word	strings
 4200 1204 00000000 		.word	prevStrings
 4201 1208 00000000 		.word	numStrings
 4202              	.L122:
 928:main.c        ****         {
 929:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)>>4); //divide by 16
 4203              		.loc 1 929 0
 4204 120c 7B6E     		ldr	r3, [r7, #100]
 4205 120e 9BB2     		uxth	r3, r3
 4206 1210 1846     		mov	r0, r3
 4207 1212 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4208 1216 0346     		mov	r3, r0
 4209 1218 1B11     		asrs	r3, r3, #4
 4210 121a 1BB2     		sxth	r3, r3
 4211 121c D9B2     		uxtb	r1, r3
 4212 121e 3B4A     		ldr	r2, .L192
 4213 1220 7B6E     		ldr	r3, [r7, #100]
 4214 1222 1344     		add	r3, r3, r2
 4215 1224 0A46     		mov	r2, r1
 4216 1226 1A70     		strb	r2, [r3]
 930:main.c        ****             
 931:main.c        ****             knobs[i] = 255 - knobs[i];
 4217              		.loc 1 931 0
 4218 1228 384A     		ldr	r2, .L192
 4219 122a 7B6E     		ldr	r3, [r7, #100]
 4220 122c 1344     		add	r3, r3, r2
 4221 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4222 1230 DB43     		mvns	r3, r3
 4223 1232 D9B2     		uxtb	r1, r3
 4224 1234 354A     		ldr	r2, .L192
 4225 1236 7B6E     		ldr	r3, [r7, #100]
 4226 1238 1344     		add	r3, r3, r2
 4227 123a 0A46     		mov	r2, r1
 4228 123c 1A70     		strb	r2, [r3]
 932:main.c        ****             if (midiSendOn)
 4229              		.loc 1 932 0
 4230 123e 344B     		ldr	r3, .L192+4
 4231 1240 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4232 1242 002B     		cmp	r3, #0
 4233 1244 28D0     		beq	.L120
 933:main.c        ****             {
 934:main.c        ****                 knobs7bit[i] = knobs[i] >> 1;
 4234              		.loc 1 934 0
 4235 1246 314A     		ldr	r2, .L192
 4236 1248 7B6E     		ldr	r3, [r7, #100]
 4237 124a 1344     		add	r3, r3, r2
 4238 124c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4239 124e 5B08     		lsrs	r3, r3, #1
 4240 1250 D9B2     		uxtb	r1, r3
 4241 1252 304A     		ldr	r2, .L192+8
 4242 1254 7B6E     		ldr	r3, [r7, #100]
 4243 1256 1344     		add	r3, r3, r2
 4244 1258 0A46     		mov	r2, r1
 4245 125a 1A70     		strb	r2, [r3]
 935:main.c        ****                 
 936:main.c        ****                 if (knobs7bit[i] != prevKnobs7bit[i])
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 93


 4246              		.loc 1 936 0
 4247 125c 2D4A     		ldr	r2, .L192+8
 4248 125e 7B6E     		ldr	r3, [r7, #100]
 4249 1260 1344     		add	r3, r3, r2
 4250 1262 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4251 1264 2C49     		ldr	r1, .L192+12
 4252 1266 7B6E     		ldr	r3, [r7, #100]
 4253 1268 0B44     		add	r3, r3, r1
 4254 126a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4255 126c 9A42     		cmp	r2, r3
 4256 126e 0AD0     		beq	.L121
 937:main.c        ****                 {
 938:main.c        ****                     sendMIDIControlChange(i+9, knobs7bit[i], 0);
 4257              		.loc 1 938 0
 4258 1270 7B6E     		ldr	r3, [r7, #100]
 4259 1272 03F10900 		add	r0, r3, #9
 4260 1276 274A     		ldr	r2, .L192+8
 4261 1278 7B6E     		ldr	r3, [r7, #100]
 4262 127a 1344     		add	r3, r3, r2
 4263 127c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4264 127e 0022     		movs	r2, #0
 4265 1280 1946     		mov	r1, r3
 4266 1282 FFF7FEFF 		bl	sendMIDIControlChange
 4267              	.L121:
 939:main.c        ****                 }
 940:main.c        ****                 prevKnobs7bit[i] = knobs7bit[i];
 4268              		.loc 1 940 0
 4269 1286 234A     		ldr	r2, .L192+8
 4270 1288 7B6E     		ldr	r3, [r7, #100]
 4271 128a 1344     		add	r3, r3, r2
 4272 128c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4273 128e 224A     		ldr	r2, .L192+12
 4274 1290 7B6E     		ldr	r3, [r7, #100]
 4275 1292 1344     		add	r3, r3, r2
 4276 1294 0A46     		mov	r2, r1
 4277 1296 1A70     		strb	r2, [r3]
 4278              	.L120:
 927:main.c        ****         {
 4279              		.loc 1 927 0 discriminator 2
 4280 1298 7B6E     		ldr	r3, [r7, #100]
 4281 129a 0133     		adds	r3, r3, #1
 4282 129c 7B66     		str	r3, [r7, #100]
 4283              	.L119:
 927:main.c        ****         {
 4284              		.loc 1 927 0 is_stmt 0 discriminator 1
 4285 129e 7B6E     		ldr	r3, [r7, #100]
 4286 12a0 032B     		cmp	r3, #3
 4287 12a2 B3DD     		ble	.L122
 4288              	.LBE28:
 941:main.c        ****             }
 942:main.c        ****             
 943:main.c        ****         }
 944:main.c        ****         
 945:main.c        ****         testpin4_Write(1);
 4289              		.loc 1 945 0 is_stmt 1
 4290 12a4 0120     		movs	r0, #1
 4291 12a6 FFF7FEFF 		bl	testpin4_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 94


 4292              	.LBB29:
 946:main.c        ****         //calculate the pitch of each string based on the current Copedent
 947:main.c        ****         for (int i = 0; i < numStrings; i++)
 4293              		.loc 1 947 0
 4294 12aa 0023     		movs	r3, #0
 4295 12ac 3B66     		str	r3, [r7, #96]
 4296 12ae 25E2     		b	.L123
 4297              	.L137:
 4298              	.LBB30:
 948:main.c        ****     	{
 949:main.c        ****     		//interpolate ratios for each of the strings
 950:main.c        ****            
 951:main.c        ****             float myMappedPos;
 952:main.c        ****             if (dualSlider)
 4299              		.loc 1 952 0
 4300 12b0 1A4B     		ldr	r3, .L192+16
 4301 12b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4302 12b4 002B     		cmp	r3, #0
 4303 12b6 37D0     		beq	.L124
 953:main.c        ****             {
 954:main.c        ****                if ((bar[0] != 65535) && (bar[1] != 65535))
 4304              		.loc 1 954 0
 4305 12b8 194B     		ldr	r3, .L192+20
 4306 12ba 1B88     		ldrh	r3, [r3]	@ movhi
 4307 12bc 9BB2     		uxth	r3, r3
 4308 12be 4FF6FF72 		movw	r2, #65535
 4309 12c2 9342     		cmp	r3, r2
 4310 12c4 12D0     		beq	.L125
 4311              		.loc 1 954 0 is_stmt 0 discriminator 1
 4312 12c6 164B     		ldr	r3, .L192+20
 4313 12c8 5B88     		ldrh	r3, [r3, #2]	@ movhi
 4314 12ca 9BB2     		uxth	r3, r3
 4315 12cc 4FF6FF72 		movw	r2, #65535
 4316 12d0 9342     		cmp	r3, r2
 4317 12d2 0BD0     		beq	.L125
 955:main.c        ****                 {
 956:main.c        ****                     myMappedPos = mapDualSlider(i, stringMappedPositionsInRatios[0], stringMappedPo
 4318              		.loc 1 956 0 is_stmt 1
 4319 12d4 386E     		ldr	r0, [r7, #96]
 4320 12d6 FFF7FEFF 		bl	__aeabi_i2f
 4321 12da 124B     		ldr	r3, .L192+24
 4322 12dc 1968     		ldr	r1, [r3]	@ float
 4323 12de 114B     		ldr	r3, .L192+24
 4324 12e0 5B68     		ldr	r3, [r3, #4]	@ float
 4325 12e2 1A46     		mov	r2, r3
 4326 12e4 FFF7FEFF 		bl	mapDualSlider
 4327 12e8 F865     		str	r0, [r7, #92]	@ float
 4328 12ea 20E0     		b	.L128
 4329              	.L125:
 957:main.c        ****                 }
 958:main.c        ****                 else if (bar[0] != 65535)
 4330              		.loc 1 958 0
 4331 12ec 0C4B     		ldr	r3, .L192+20
 4332 12ee 1B88     		ldrh	r3, [r3]	@ movhi
 4333 12f0 9BB2     		uxth	r3, r3
 4334 12f2 4FF6FF72 		movw	r2, #65535
 4335 12f6 9342     		cmp	r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 95


 4336 12f8 03D0     		beq	.L127
 959:main.c        ****                 {
 960:main.c        ****                     myMappedPos = stringMappedPositionsInRatios[0];
 4337              		.loc 1 960 0
 4338 12fa 0A4B     		ldr	r3, .L192+24
 4339 12fc 1B68     		ldr	r3, [r3]	@ float
 4340 12fe FB65     		str	r3, [r7, #92]	@ float
 4341 1300 15E0     		b	.L128
 4342              	.L127:
 961:main.c        ****                 }
 962:main.c        ****                 else
 963:main.c        ****                 {
 964:main.c        ****                     myMappedPos = stringMappedPositionsInRatios[1];
 4343              		.loc 1 964 0
 4344 1302 084B     		ldr	r3, .L192+24
 4345 1304 5B68     		ldr	r3, [r3, #4]	@ float
 4346 1306 FB65     		str	r3, [r7, #92]	@ float
 4347 1308 11E0     		b	.L128
 4348              	.L193:
 4349 130a 00BF     		.align	2
 4350              	.L192:
 4351 130c 00000000 		.word	knobs
 4352 1310 00000000 		.word	midiSendOn
 4353 1314 00000000 		.word	knobs7bit
 4354 1318 00000000 		.word	prevKnobs7bit
 4355 131c 00000000 		.word	dualSlider
 4356 1320 00000000 		.word	bar
 4357 1324 00000000 		.word	stringMappedPositionsInRatios
 4358              	.L124:
 965:main.c        ****                 }
 966:main.c        ****             }
 967:main.c        ****             else
 968:main.c        ****             {
 969:main.c        ****                 myMappedPos = stringMappedPositionsInRatios[0];
 4359              		.loc 1 969 0
 4360 1328 A74B     		ldr	r3, .L194
 4361 132a 1B68     		ldr	r3, [r3]	@ float
 4362 132c FB65     		str	r3, [r7, #92]	@ float
 4363              	.L128:
 970:main.c        ****             }
 971:main.c        **** 
 972:main.c        ****             
 973:main.c        ****     		//then apply those ratios to the fundamental frequencies
 974:main.c        ****     		float pedalsMIDI = (copedent[currentCopedent][0][i] +
 4364              		.loc 1 974 0
 4365 132e A74B     		ldr	r3, .L194+4
 4366 1330 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4367 1332 1A46     		mov	r2, r3
 4368 1334 A649     		ldr	r1, .L194+8
 4369 1336 1346     		mov	r3, r2
 4370 1338 5B01     		lsls	r3, r3, #5
 4371 133a 1344     		add	r3, r3, r2
 4372 133c 9B00     		lsls	r3, r3, #2
 4373 133e 3A6E     		ldr	r2, [r7, #96]
 4374 1340 1344     		add	r3, r3, r2
 4375 1342 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
 975:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 96


 4376              		.loc 1 975 0
 4377 1346 A14B     		ldr	r3, .L194+4
 4378 1348 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4379 134a 1A46     		mov	r2, r3
 4380 134c A049     		ldr	r1, .L194+8
 4381 134e 1346     		mov	r3, r2
 4382 1350 5B01     		lsls	r3, r3, #5
 4383 1352 1344     		add	r3, r3, r2
 4384 1354 9B00     		lsls	r3, r3, #2
 4385 1356 3A6E     		ldr	r2, [r7, #96]
 4386 1358 1344     		add	r3, r3, r2
 4387 135a 3033     		adds	r3, r3, #48
 4388 135c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4389 1360 9C4B     		ldr	r3, .L194+12
 4390 1362 1B68     		ldr	r3, [r3]	@ float
 4391 1364 1946     		mov	r1, r3
 4392 1366 1046     		mov	r0, r2
 4393 1368 FFF7FEFF 		bl	__aeabi_fmul
 4394 136c 0346     		mov	r3, r0
 974:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4395              		.loc 1 974 0
 4396 136e 1946     		mov	r1, r3
 4397 1370 2046     		mov	r0, r4
 4398 1372 FFF7FEFF 		bl	__aeabi_fadd
 4399 1376 0346     		mov	r3, r0
 4400 1378 1C46     		mov	r4, r3
 976:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4401              		.loc 1 976 0
 4402 137a 944B     		ldr	r3, .L194+4
 4403 137c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4404 137e 1A46     		mov	r2, r3
 4405 1380 9349     		ldr	r1, .L194+8
 4406 1382 1346     		mov	r3, r2
 4407 1384 5B01     		lsls	r3, r3, #5
 4408 1386 1344     		add	r3, r3, r2
 4409 1388 9B00     		lsls	r3, r3, #2
 4410 138a 3A6E     		ldr	r2, [r7, #96]
 4411 138c 1344     		add	r3, r3, r2
 4412 138e 3C33     		adds	r3, r3, #60
 4413 1390 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4414 1394 8F4B     		ldr	r3, .L194+12
 4415 1396 5B68     		ldr	r3, [r3, #4]	@ float
 4416 1398 1946     		mov	r1, r3
 4417 139a 1046     		mov	r0, r2
 4418 139c FFF7FEFF 		bl	__aeabi_fmul
 4419 13a0 0346     		mov	r3, r0
 975:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4420              		.loc 1 975 0
 4421 13a2 1946     		mov	r1, r3
 4422 13a4 2046     		mov	r0, r4
 4423 13a6 FFF7FEFF 		bl	__aeabi_fadd
 4424 13aa 0346     		mov	r3, r0
 4425 13ac 1C46     		mov	r4, r3
 977:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4426              		.loc 1 977 0
 4427 13ae 874B     		ldr	r3, .L194+4
 4428 13b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 97


 4429 13b2 1A46     		mov	r2, r3
 4430 13b4 8649     		ldr	r1, .L194+8
 4431 13b6 1346     		mov	r3, r2
 4432 13b8 5B01     		lsls	r3, r3, #5
 4433 13ba 1344     		add	r3, r3, r2
 4434 13bc 9B00     		lsls	r3, r3, #2
 4435 13be 3A6E     		ldr	r2, [r7, #96]
 4436 13c0 1344     		add	r3, r3, r2
 4437 13c2 4833     		adds	r3, r3, #72
 4438 13c4 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4439 13c8 824B     		ldr	r3, .L194+12
 4440 13ca 9B68     		ldr	r3, [r3, #8]	@ float
 4441 13cc 1946     		mov	r1, r3
 4442 13ce 1046     		mov	r0, r2
 4443 13d0 FFF7FEFF 		bl	__aeabi_fmul
 4444 13d4 0346     		mov	r3, r0
 976:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4445              		.loc 1 976 0
 4446 13d6 1946     		mov	r1, r3
 4447 13d8 2046     		mov	r0, r4
 4448 13da FFF7FEFF 		bl	__aeabi_fadd
 4449 13de 0346     		mov	r3, r0
 4450 13e0 1C46     		mov	r4, r3
 978:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4451              		.loc 1 978 0
 4452 13e2 7A4B     		ldr	r3, .L194+4
 4453 13e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4454 13e6 1A46     		mov	r2, r3
 4455 13e8 7949     		ldr	r1, .L194+8
 4456 13ea 1346     		mov	r3, r2
 4457 13ec 5B01     		lsls	r3, r3, #5
 4458 13ee 1344     		add	r3, r3, r2
 4459 13f0 9B00     		lsls	r3, r3, #2
 4460 13f2 3A6E     		ldr	r2, [r7, #96]
 4461 13f4 1344     		add	r3, r3, r2
 4462 13f6 5433     		adds	r3, r3, #84
 4463 13f8 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4464 13fc 754B     		ldr	r3, .L194+12
 4465 13fe DB68     		ldr	r3, [r3, #12]	@ float
 4466 1400 1946     		mov	r1, r3
 4467 1402 1046     		mov	r0, r2
 4468 1404 FFF7FEFF 		bl	__aeabi_fmul
 4469 1408 0346     		mov	r3, r0
 977:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4470              		.loc 1 977 0
 4471 140a 1946     		mov	r1, r3
 4472 140c 2046     		mov	r0, r4
 4473 140e FFF7FEFF 		bl	__aeabi_fadd
 4474 1412 0346     		mov	r3, r0
 4475 1414 1C46     		mov	r4, r3
 979:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4476              		.loc 1 979 0
 4477 1416 6D4B     		ldr	r3, .L194+4
 4478 1418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4479 141a 1A46     		mov	r2, r3
 4480 141c 6C49     		ldr	r1, .L194+8
 4481 141e 1346     		mov	r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 98


 4482 1420 5B01     		lsls	r3, r3, #5
 4483 1422 1344     		add	r3, r3, r2
 4484 1424 9B00     		lsls	r3, r3, #2
 4485 1426 3A6E     		ldr	r2, [r7, #96]
 4486 1428 1344     		add	r3, r3, r2
 4487 142a 6033     		adds	r3, r3, #96
 4488 142c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4489 1430 684B     		ldr	r3, .L194+12
 4490 1432 1B69     		ldr	r3, [r3, #16]	@ float
 4491 1434 1946     		mov	r1, r3
 4492 1436 1046     		mov	r0, r2
 4493 1438 FFF7FEFF 		bl	__aeabi_fmul
 4494 143c 0346     		mov	r3, r0
 978:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4495              		.loc 1 978 0
 4496 143e 1946     		mov	r1, r3
 4497 1440 2046     		mov	r0, r4
 4498 1442 FFF7FEFF 		bl	__aeabi_fadd
 4499 1446 0346     		mov	r3, r0
 4500 1448 1C46     		mov	r4, r3
 980:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4501              		.loc 1 980 0
 4502 144a 604B     		ldr	r3, .L194+4
 4503 144c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4504 144e 1A46     		mov	r2, r3
 4505 1450 5F49     		ldr	r1, .L194+8
 4506 1452 1346     		mov	r3, r2
 4507 1454 5B01     		lsls	r3, r3, #5
 4508 1456 1344     		add	r3, r3, r2
 4509 1458 9B00     		lsls	r3, r3, #2
 4510 145a 3A6E     		ldr	r2, [r7, #96]
 4511 145c 1344     		add	r3, r3, r2
 4512 145e 7833     		adds	r3, r3, #120
 4513 1460 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4514 1464 5B4B     		ldr	r3, .L194+12
 4515 1466 5B69     		ldr	r3, [r3, #20]	@ float
 4516 1468 1946     		mov	r1, r3
 4517 146a 1046     		mov	r0, r2
 4518 146c FFF7FEFF 		bl	__aeabi_fmul
 4519 1470 0346     		mov	r3, r0
 979:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4520              		.loc 1 979 0
 4521 1472 1946     		mov	r1, r3
 4522 1474 2046     		mov	r0, r4
 4523 1476 FFF7FEFF 		bl	__aeabi_fadd
 4524 147a 0346     		mov	r3, r0
 4525 147c 1C46     		mov	r4, r3
 981:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4526              		.loc 1 981 0
 4527 147e 534B     		ldr	r3, .L194+4
 4528 1480 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4529 1482 1A46     		mov	r2, r3
 4530 1484 5249     		ldr	r1, .L194+8
 4531 1486 1346     		mov	r3, r2
 4532 1488 5B01     		lsls	r3, r3, #5
 4533 148a 1344     		add	r3, r3, r2
 4534 148c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 99


 4535 148e 3A6E     		ldr	r2, [r7, #96]
 4536 1490 1344     		add	r3, r3, r2
 4537 1492 6C33     		adds	r3, r3, #108
 4538 1494 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4539 1498 4E4B     		ldr	r3, .L194+12
 4540 149a 9B69     		ldr	r3, [r3, #24]	@ float
 4541 149c 1946     		mov	r1, r3
 4542 149e 1046     		mov	r0, r2
 4543 14a0 FFF7FEFF 		bl	__aeabi_fmul
 4544 14a4 0346     		mov	r3, r0
 980:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4545              		.loc 1 980 0
 4546 14a6 1946     		mov	r1, r3
 4547 14a8 2046     		mov	r0, r4
 4548 14aa FFF7FEFF 		bl	__aeabi_fadd
 4549 14ae 0346     		mov	r3, r0
 4550 14b0 1C46     		mov	r4, r3
 982:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4551              		.loc 1 982 0
 4552 14b2 464B     		ldr	r3, .L194+4
 4553 14b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4554 14b6 1A46     		mov	r2, r3
 4555 14b8 4549     		ldr	r1, .L194+8
 4556 14ba 1346     		mov	r3, r2
 4557 14bc 5B01     		lsls	r3, r3, #5
 4558 14be 1344     		add	r3, r3, r2
 4559 14c0 9B00     		lsls	r3, r3, #2
 4560 14c2 3A6E     		ldr	r2, [r7, #96]
 4561 14c4 1344     		add	r3, r3, r2
 4562 14c6 2433     		adds	r3, r3, #36
 4563 14c8 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4564 14cc 414B     		ldr	r3, .L194+12
 4565 14ce DB69     		ldr	r3, [r3, #28]	@ float
 4566 14d0 1946     		mov	r1, r3
 4567 14d2 1046     		mov	r0, r2
 4568 14d4 FFF7FEFF 		bl	__aeabi_fmul
 4569 14d8 0346     		mov	r3, r0
 981:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4570              		.loc 1 981 0
 4571 14da 1946     		mov	r1, r3
 4572 14dc 2046     		mov	r0, r4
 4573 14de FFF7FEFF 		bl	__aeabi_fadd
 4574 14e2 0346     		mov	r3, r0
 4575 14e4 1C46     		mov	r4, r3
 983:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4576              		.loc 1 983 0
 4577 14e6 394B     		ldr	r3, .L194+4
 4578 14e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4579 14ea 1A46     		mov	r2, r3
 4580 14ec 3849     		ldr	r1, .L194+8
 4581 14ee 1346     		mov	r3, r2
 4582 14f0 5B01     		lsls	r3, r3, #5
 4583 14f2 1344     		add	r3, r3, r2
 4584 14f4 9B00     		lsls	r3, r3, #2
 4585 14f6 3A6E     		ldr	r2, [r7, #96]
 4586 14f8 1344     		add	r3, r3, r2
 4587 14fa 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 100


 4588 14fc 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4589 1500 344B     		ldr	r3, .L194+12
 4590 1502 1B6A     		ldr	r3, [r3, #32]	@ float
 4591 1504 1946     		mov	r1, r3
 4592 1506 1046     		mov	r0, r2
 4593 1508 FFF7FEFF 		bl	__aeabi_fmul
 4594 150c 0346     		mov	r3, r0
 982:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4595              		.loc 1 982 0
 4596 150e 1946     		mov	r1, r3
 4597 1510 2046     		mov	r0, r4
 4598 1512 FFF7FEFF 		bl	__aeabi_fadd
 4599 1516 0346     		mov	r3, r0
 4600 1518 1C46     		mov	r4, r3
 984:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9])) + transposeFloat;
 4601              		.loc 1 984 0
 4602 151a 2C4B     		ldr	r3, .L194+4
 4603 151c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4604 151e 1A46     		mov	r2, r3
 4605 1520 2B49     		ldr	r1, .L194+8
 4606 1522 1346     		mov	r3, r2
 4607 1524 5B01     		lsls	r3, r3, #5
 4608 1526 1344     		add	r3, r3, r2
 4609 1528 9B00     		lsls	r3, r3, #2
 4610 152a 3A6E     		ldr	r2, [r7, #96]
 4611 152c 1344     		add	r3, r3, r2
 4612 152e 1833     		adds	r3, r3, #24
 4613 1530 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4614 1534 274B     		ldr	r3, .L194+12
 4615 1536 5B6A     		ldr	r3, [r3, #36]	@ float
 4616 1538 1946     		mov	r1, r3
 4617 153a 1046     		mov	r0, r2
 4618 153c FFF7FEFF 		bl	__aeabi_fmul
 4619 1540 0346     		mov	r3, r0
 983:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4620              		.loc 1 983 0
 4621 1542 1946     		mov	r1, r3
 4622 1544 2046     		mov	r0, r4
 4623 1546 FFF7FEFF 		bl	__aeabi_fadd
 4624 154a 0346     		mov	r3, r0
 4625 154c 1A46     		mov	r2, r3
 4626              		.loc 1 984 0
 4627 154e 224B     		ldr	r3, .L194+16
 4628 1550 1B68     		ldr	r3, [r3]	@ float
 974:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4629              		.loc 1 974 0
 4630 1552 1946     		mov	r1, r3
 4631 1554 1046     		mov	r0, r2
 4632 1556 FFF7FEFF 		bl	__aeabi_fadd
 4633 155a 0346     		mov	r3, r0
 4634 155c 7B62     		str	r3, [r7, #36]	@ float
 985:main.c        **** 
 986:main.c        ****             
 987:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 4635              		.loc 1 987 0
 4636 155e 1B4B     		ldr	r3, .L194+4
 4637 1560 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 101


 4638 1562 1A46     		mov	r2, r3
 4639 1564 1A49     		ldr	r1, .L194+8
 4640 1566 1346     		mov	r3, r2
 4641 1568 5B01     		lsls	r3, r3, #5
 4642 156a 1344     		add	r3, r3, r2
 4643 156c 9B00     		lsls	r3, r3, #2
 4644 156e 3A6E     		ldr	r2, [r7, #96]
 4645 1570 1344     		add	r3, r3, r2
 4646 1572 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 4647 1576 3B62     		str	r3, [r7, #32]	@ float
 988:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 4648              		.loc 1 988 0
 4649 1578 386A     		ldr	r0, [r7, #32]	@ float
 4650 157a FFF7FEFF 		bl	__aeabi_f2iz
 4651 157e 0146     		mov	r1, r0
 4652 1580 164A     		ldr	r2, .L194+20
 4653 1582 3B6E     		ldr	r3, [r7, #96]
 4654 1584 42F82310 		str	r1, [r2, r3, lsl #2]
 989:main.c        ****             float barMIDI = (unsafeFtom(myMappedPos*55.0f)) - 33.0f; //give midi note added by the 
 4655              		.loc 1 989 0
 4656 1588 1549     		ldr	r1, .L194+24
 4657 158a F86D     		ldr	r0, [r7, #92]	@ float
 4658 158c FFF7FEFF 		bl	__aeabi_fmul
 4659 1590 0346     		mov	r3, r0
 4660 1592 1846     		mov	r0, r3
 4661 1594 FFF7FEFF 		bl	unsafeFtom
 4662 1598 0346     		mov	r3, r0
 4663 159a 1249     		ldr	r1, .L194+28
 4664 159c 1846     		mov	r0, r3
 4665 159e FFF7FEFF 		bl	__aeabi_fsub
 4666 15a2 0346     		mov	r3, r0
 4667 15a4 FB61     		str	r3, [r7, #28]	@ float
 990:main.c        ****             if (i == 0)
 4668              		.loc 1 990 0
 4669 15a6 3B6E     		ldr	r3, [r7, #96]
 4670 15a8 002B     		cmp	r3, #0
 4671 15aa 1FD1     		bne	.L129
 991:main.c        ****             {
 992:main.c        ****                 barMidiOuterStrings[0] = (uint16_t)(barMIDI * 512.0f);
 4672              		.loc 1 992 0
 4673 15ac 4FF08841 		mov	r1, #1140850688
 4674 15b0 F869     		ldr	r0, [r7, #28]	@ float
 4675 15b2 FFF7FEFF 		bl	__aeabi_fmul
 4676 15b6 0346     		mov	r3, r0
 4677 15b8 1846     		mov	r0, r3
 4678 15ba FFF7FEFF 		bl	__aeabi_f2uiz
 4679 15be 0346     		mov	r3, r0
 4680 15c0 9AB2     		uxth	r2, r3
 4681 15c2 094B     		ldr	r3, .L194+32
 4682 15c4 1A80     		strh	r2, [r3]	@ movhi
 4683 15c6 45E0     		b	.L130
 4684              	.L195:
 4685              		.align	2
 4686              	.L194:
 4687 15c8 00000000 		.word	stringMappedPositionsInRatios
 4688 15cc 00000000 		.word	currentCopedent
 4689 15d0 00000000 		.word	copedent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 102


 4690 15d4 00000000 		.word	pedals_float
 4691 15d8 00000000 		.word	transposeFloat
 4692 15dc 00000000 		.word	openStringMIDI_Int
 4693 15e0 00005C42 		.word	1113325568
 4694 15e4 00000442 		.word	1107558400
 4695 15e8 00000000 		.word	barMidiOuterStrings
 4696              	.L129:
 993:main.c        ****             }
 994:main.c        **** 
 995:main.c        ****             else if (i == 5) //the average bar position for single midi bar position report via cha
 4697              		.loc 1 995 0
 4698 15ec 3B6E     		ldr	r3, [r7, #96]
 4699 15ee 052B     		cmp	r3, #5
 4700 15f0 20D1     		bne	.L131
 996:main.c        ****             {
 997:main.c        ****                 if (midiBarSendOn)
 4701              		.loc 1 997 0
 4702 15f2 A14B     		ldr	r3, .L196
 4703 15f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4704 15f6 002B     		cmp	r3, #0
 4705 15f8 2CD0     		beq	.L130
 4706              	.LBB31:
 998:main.c        ****                 {
 999:main.c        ****                     float barBend = (uint16_t)(barMIDI * 128.0f);
 4707              		.loc 1 999 0
 4708 15fa 4FF08641 		mov	r1, #1124073472
 4709 15fe F869     		ldr	r0, [r7, #28]	@ float
 4710 1600 FFF7FEFF 		bl	__aeabi_fmul
 4711 1604 0346     		mov	r3, r0
 4712 1606 1846     		mov	r0, r3
 4713 1608 FFF7FEFF 		bl	__aeabi_f2uiz
 4714 160c 0346     		mov	r3, r0
 4715 160e 9BB2     		uxth	r3, r3
 4716 1610 1846     		mov	r0, r3
 4717 1612 FFF7FEFF 		bl	__aeabi_ui2f
 4718 1616 0346     		mov	r3, r0
 4719 1618 BB61     		str	r3, [r7, #24]	@ float
1000:main.c        ****                     if (midiBarSendOn)
 4720              		.loc 1 1000 0
 4721 161a 974B     		ldr	r3, .L196
 4722 161c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4723 161e 002B     		cmp	r3, #0
 4724 1620 18D0     		beq	.L130
1001:main.c        ****                     {
1002:main.c        ****                         sendMIDIPitchBend((uint)barBend,12);
 4725              		.loc 1 1002 0
 4726 1622 B869     		ldr	r0, [r7, #24]	@ float
 4727 1624 FFF7FEFF 		bl	__aeabi_f2uiz
 4728 1628 0346     		mov	r3, r0
 4729 162a 0C21     		movs	r1, #12
 4730 162c 1846     		mov	r0, r3
 4731 162e FFF7FEFF 		bl	sendMIDIPitchBend
 4732 1632 0FE0     		b	.L130
 4733              	.L131:
 4734              	.LBE31:
1003:main.c        ****                     }
1004:main.c        ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 103


1005:main.c        ****             }
1006:main.c        ****             else if (i == (NUM_STRINGS - 1))
 4735              		.loc 1 1006 0
 4736 1634 3B6E     		ldr	r3, [r7, #96]
 4737 1636 0B2B     		cmp	r3, #11
 4738 1638 0CD1     		bne	.L130
1007:main.c        ****             {
1008:main.c        ****                  barMidiOuterStrings[1] = (uint16_t)(barMIDI * 512.0f);
 4739              		.loc 1 1008 0
 4740 163a 4FF08841 		mov	r1, #1140850688
 4741 163e F869     		ldr	r0, [r7, #28]	@ float
 4742 1640 FFF7FEFF 		bl	__aeabi_fmul
 4743 1644 0346     		mov	r3, r0
 4744 1646 1846     		mov	r0, r3
 4745 1648 FFF7FEFF 		bl	__aeabi_f2uiz
 4746 164c 0346     		mov	r3, r0
 4747 164e 9AB2     		uxth	r2, r3
 4748 1650 8A4B     		ldr	r3, .L196+4
 4749 1652 5A80     		strh	r2, [r3, #2]	@ movhi
 4750              	.L130:
1009:main.c        ****             }
1010:main.c        ****             
1011:main.c        ****             float computerMIDIOffset = barMIDI + pedalsMIDI - openStringMIDI_Int[i];// + stringOcta
 4751              		.loc 1 1011 0
 4752 1654 796A     		ldr	r1, [r7, #36]	@ float
 4753 1656 F869     		ldr	r0, [r7, #28]	@ float
 4754 1658 FFF7FEFF 		bl	__aeabi_fadd
 4755 165c 0346     		mov	r3, r0
 4756 165e 1C46     		mov	r4, r3
 4757 1660 874A     		ldr	r2, .L196+8
 4758 1662 3B6E     		ldr	r3, [r7, #96]
 4759 1664 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4760 1668 1846     		mov	r0, r3
 4761 166a FFF7FEFF 		bl	__aeabi_i2f
 4762 166e 0346     		mov	r3, r0
 4763 1670 1946     		mov	r1, r3
 4764 1672 2046     		mov	r0, r4
 4765 1674 FFF7FEFF 		bl	__aeabi_fsub
 4766 1678 0346     		mov	r3, r0
 4767 167a 7B61     		str	r3, [r7, #20]	@ float
1012:main.c        ****             
1013:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 4768              		.loc 1 1013 0
 4769 167c 8149     		ldr	r1, .L196+12
 4770 167e 7869     		ldr	r0, [r7, #20]	@ float
 4771 1680 FFF7FEFF 		bl	__aeabi_fmul
 4772 1684 0346     		mov	r3, r0
 4773 1686 4FF08C41 		mov	r1, #1174405120
 4774 168a 1846     		mov	r0, r3
 4775 168c FFF7FEFF 		bl	__aeabi_fadd
 4776 1690 0346     		mov	r3, r0
 4777 1692 3B61     		str	r3, [r7, #16]	@ float
1014:main.c        ****             if (midiSendOn)
 4778              		.loc 1 1014 0
 4779 1694 7C4B     		ldr	r3, .L196+16
 4780 1696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4781 1698 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 104


 4782 169a 15D0     		beq	.L133
1015:main.c        ****             {
1016:main.c        ****                 if (pitchBendAmount != prevStringPitchBend[i])
 4783              		.loc 1 1016 0
 4784 169c 7B4A     		ldr	r2, .L196+20
 4785 169e 3B6E     		ldr	r3, [r7, #96]
 4786 16a0 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4787 16a4 3969     		ldr	r1, [r7, #16]	@ float
 4788 16a6 1846     		mov	r0, r3
 4789 16a8 FFF7FEFF 		bl	__aeabi_fcmpeq
 4790 16ac 0346     		mov	r3, r0
 4791 16ae 002B     		cmp	r3, #0
 4792 16b0 0AD1     		bne	.L133
1017:main.c        ****                 {
1018:main.c        ****                     sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 4793              		.loc 1 1018 0
 4794 16b2 3869     		ldr	r0, [r7, #16]	@ float
 4795 16b4 FFF7FEFF 		bl	__aeabi_f2uiz
 4796 16b8 0346     		mov	r3, r0
 4797 16ba 1A46     		mov	r2, r3
 4798 16bc 3B6E     		ldr	r3, [r7, #96]
 4799 16be 0133     		adds	r3, r3, #1
 4800 16c0 1946     		mov	r1, r3
 4801 16c2 1046     		mov	r0, r2
 4802 16c4 FFF7FEFF 		bl	sendMIDIPitchBend
 4803              	.L133:
1019:main.c        ****                 }
1020:main.c        ****             }
1021:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 4804              		.loc 1 1021 0
 4805 16c8 7049     		ldr	r1, .L196+20
 4806 16ca 3B6E     		ldr	r3, [r7, #96]
 4807 16cc 3A69     		ldr	r2, [r7, #16]	@ float
 4808 16ce 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1022:main.c        ****             
1023:main.c        ****             if (pedalsMIDI > 0.0f)
 4809              		.loc 1 1023 0
 4810 16d2 4FF00001 		mov	r1, #0
 4811 16d6 786A     		ldr	r0, [r7, #36]	@ float
 4812 16d8 FFF7FEFF 		bl	__aeabi_fcmpgt
 4813 16dc 0346     		mov	r3, r0
 4814 16de 002B     		cmp	r3, #0
 4815 16e0 09D0     		beq	.L135
1024:main.c        ****             {
1025:main.c        ****                 stringMIDI[i] = pedalsMIDI + barMIDI;
 4816              		.loc 1 1025 0
 4817 16e2 F969     		ldr	r1, [r7, #28]	@ float
 4818 16e4 786A     		ldr	r0, [r7, #36]	@ float
 4819 16e6 FFF7FEFF 		bl	__aeabi_fadd
 4820 16ea 0346     		mov	r3, r0
 4821 16ec 1946     		mov	r1, r3
 4822 16ee 684A     		ldr	r2, .L196+24
 4823 16f0 3B6E     		ldr	r3, [r7, #96]
 4824 16f2 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 4825              	.L135:
 4826              	.LBE30:
 947:main.c        ****     	{
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 105


 4827              		.loc 1 947 0 discriminator 2
 4828 16f6 3B6E     		ldr	r3, [r7, #96]
 4829 16f8 0133     		adds	r3, r3, #1
 4830 16fa 3B66     		str	r3, [r7, #96]
 4831              	.L123:
 947:main.c        ****     	{
 4832              		.loc 1 947 0 is_stmt 0 discriminator 1
 4833 16fc 654B     		ldr	r3, .L196+28
 4834 16fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4835 1700 1A46     		mov	r2, r3
 4836 1702 3B6E     		ldr	r3, [r7, #96]
 4837 1704 9A42     		cmp	r2, r3
 4838 1706 3FF7D3AD 		bgt	.L137
 4839              	.LBE29:
1026:main.c        ****             }
1027:main.c        ****     	}
1028:main.c        ****         testpin4_Write(0);
 4840              		.loc 1 1028 0 is_stmt 1
 4841 170a 0020     		movs	r0, #0
 4842 170c FFF7FEFF 		bl	testpin4_Write
1029:main.c        **** 
1030:main.c        ****         
1031:main.c        ****         if (USB_check_flag)
 4843              		.loc 1 1031 0
 4844 1710 614B     		ldr	r3, .L196+32
 4845 1712 1B78     		ldrb	r3, [r3]
 4846 1714 DBB2     		uxtb	r3, r3
 4847 1716 002B     		cmp	r3, #0
 4848 1718 01D0     		beq	.L138
1032:main.c        ****         {
1033:main.c        ****             checkUSB_Vbus();
 4849              		.loc 1 1033 0
 4850 171a FFF7FEFF 		bl	checkUSB_Vbus
 4851              	.L138:
1034:main.c        ****         }
1035:main.c        ****         //only service the USB bus if there is a computer plugged in
1036:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 4852              		.loc 1 1036 0
 4853 171e 5F4B     		ldr	r3, .L196+36
 4854 1720 1B78     		ldrb	r3, [r3]
 4855 1722 DBB2     		uxtb	r3, r3
 4856 1724 002B     		cmp	r3, #0
 4857 1726 13D0     		beq	.L177
 4858              		.loc 1 1036 0 is_stmt 0 discriminator 1
 4859 1728 FFF7FEFF 		bl	USB_VBusPresent
 4860 172c 0346     		mov	r3, r0
 4861 172e 002B     		cmp	r3, #0
 4862 1730 0ED0     		beq	.L177
1037:main.c        ****         {
1038:main.c        ****             if (midiSent > 64)
 4863              		.loc 1 1038 0 is_stmt 1
 4864 1732 5B4B     		ldr	r3, .L196+40
 4865 1734 1B88     		ldrh	r3, [r3]
 4866 1736 402B     		cmp	r3, #64
 4867 1738 05D9     		bls	.L140
1039:main.c        ****             {
1040:main.c        ****                 midiOverflow++;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 106


 4868              		.loc 1 1040 0
 4869 173a 5A4B     		ldr	r3, .L196+44
 4870 173c 1B88     		ldrh	r3, [r3]
 4871 173e 0133     		adds	r3, r3, #1
 4872 1740 9AB2     		uxth	r2, r3
 4873 1742 584B     		ldr	r3, .L196+44
 4874 1744 1A80     		strh	r2, [r3]	@ movhi
 4875              	.L140:
1041:main.c        ****             }
1042:main.c        ****             midiSent = 0;
 4876              		.loc 1 1042 0
 4877 1746 564B     		ldr	r3, .L196+40
 4878 1748 0022     		movs	r2, #0
 4879 174a 1A80     		strh	r2, [r3]	@ movhi
1043:main.c        ****             USB_service();
 4880              		.loc 1 1043 0
 4881 174c FFF7FEFF 		bl	USB_service
 4882              	.L177:
1044:main.c        ****         }
1045:main.c        **** 
1046:main.c        ****         
1047:main.c        ****         //make sure previous SPI2 transmission has completed before transferring the remaining midi
1048:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 4883              		.loc 1 1048 0
 4884 1750 00BF     		nop
 4885              	.L144:
 4886              		.loc 1 1048 0 is_stmt 0 discriminator 7
 4887 1752 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4888 1756 0346     		mov	r3, r0
 4889 1758 03F00103 		and	r3, r3, #1
 4890 175c 002B     		cmp	r3, #0
 4891 175e 06D1     		bne	.L141
 4892              		.loc 1 1048 0 discriminator 2
 4893 1760 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4894 1764 0346     		mov	r3, r0
 4895 1766 03F01003 		and	r3, r3, #16
 4896 176a 002B     		cmp	r3, #0
 4897 176c 01D0     		beq	.L142
 4898              	.L141:
 4899              		.loc 1 1048 0 discriminator 3
 4900 176e 0123     		movs	r3, #1
 4901 1770 00E0     		b	.L143
 4902              	.L142:
 4903              		.loc 1 1048 0 discriminator 4
 4904 1772 0023     		movs	r3, #0
 4905              	.L143:
 4906              		.loc 1 1048 0 discriminator 6
 4907 1774 002B     		cmp	r3, #0
 4908 1776 ECD0     		beq	.L144
1049:main.c        ****         {
1050:main.c        ****             ;
1051:main.c        ****         }
1052:main.c        ****         testpin6_Write(1);
 4909              		.loc 1 1052 0 is_stmt 1
 4910 1778 0120     		movs	r0, #1
 4911 177a FFF7FEFF 		bl	testpin6_Write
1053:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 107


 4912              		.loc 1 1053 0
 4913 177e 4A4B     		ldr	r3, .L196+48
 4914 1780 1B78     		ldrb	r3, [r3]
 4915 1782 DBB2     		uxtb	r3, r3
 4916 1784 012B     		cmp	r3, #1
 4917 1786 55D1     		bne	.L145
1054:main.c        ****         {
1055:main.c        ****             if (sendMessageEnd) //send end message
 4918              		.loc 1 1055 0
 4919 1788 484B     		ldr	r3, .L196+52
 4920 178a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4921 178c 002B     		cmp	r3, #0
 4922 178e 1CD0     		beq	.L146
1056:main.c        ****             {
1057:main.c        ****                 myArray[0] = 253;
 4923              		.loc 1 1057 0
 4924 1790 474B     		ldr	r3, .L196+56
 4925 1792 FD22     		movs	r2, #253
 4926 1794 1A70     		strb	r2, [r3]
1058:main.c        ****                 myArray[1] = presetNumberToWrite;
 4927              		.loc 1 1058 0
 4928 1796 474B     		ldr	r3, .L196+60
 4929 1798 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4930 179a 454B     		ldr	r3, .L196+56
 4931 179c 5A70     		strb	r2, [r3, #1]
1059:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 4932              		.loc 1 1059 0
 4933 179e 454B     		ldr	r3, .L196+60
 4934 17a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4935 17a2 454B     		ldr	r3, .L196+64
 4936 17a4 1A70     		strb	r2, [r3]
1060:main.c        ****                 //display previous preset as loaded
1061:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4937              		.loc 1 1061 0
 4938 17a6 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1062:main.c        ****                 //OLED_invert(0);
1063:main.c        ****                 sendMessageEnd = 0;
 4939              		.loc 1 1063 0
 4940 17aa 404B     		ldr	r3, .L196+52
 4941 17ac 0022     		movs	r2, #0
 4942 17ae 1A70     		strb	r2, [r3]
1064:main.c        ****                 sendingMessage = 0;
 4943              		.loc 1 1064 0
 4944 17b0 3D4B     		ldr	r3, .L196+48
 4945 17b2 0022     		movs	r2, #0
 4946 17b4 1A70     		strb	r2, [r3]
1065:main.c        ****                 messageArraySendCount = 0;
 4947              		.loc 1 1065 0
 4948 17b6 414B     		ldr	r3, .L196+68
 4949 17b8 0022     		movs	r2, #0
 4950 17ba 1A80     		strh	r2, [r3]	@ movhi
1066:main.c        ****                 myArray[30] = 254;
 4951              		.loc 1 1066 0
 4952 17bc 3C4B     		ldr	r3, .L196+56
 4953 17be FE22     		movs	r2, #254
 4954 17c0 9A77     		strb	r2, [r3, #30]
1067:main.c        ****                 myArray[31] = 253;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 108


 4955              		.loc 1 1067 0
 4956 17c2 3B4B     		ldr	r3, .L196+56
 4957 17c4 FD22     		movs	r2, #253
 4958 17c6 DA77     		strb	r2, [r3, #31]
 4959 17c8 99E1     		b	.L152
 4960              	.L146:
1068:main.c        ****                 
1069:main.c        ****             }
1070:main.c        ****             else //send chunks
1071:main.c        ****             {
1072:main.c        ****                 //send the next preset Chunkkkkk
1073:main.c        ****                 myArray[0] = 2;
 4961              		.loc 1 1073 0
 4962 17ca 394B     		ldr	r3, .L196+56
 4963 17cc 0222     		movs	r2, #2
 4964 17ce 1A70     		strb	r2, [r3]
1074:main.c        ****                 myArray[1] = presetNumberToWrite;
 4965              		.loc 1 1074 0
 4966 17d0 384B     		ldr	r3, .L196+60
 4967 17d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4968 17d4 364B     		ldr	r3, .L196+56
 4969 17d6 5A70     		strb	r2, [r3, #1]
 4970              	.LBB32:
1075:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 4971              		.loc 1 1075 0
 4972 17d8 0223     		movs	r3, #2
 4973 17da BB65     		str	r3, [r7, #88]
 4974 17dc 20E0     		b	.L148
 4975              	.L151:
1076:main.c        ****                 {
1077:main.c        ****                     if (messageArraySendCount < messageArraySize)
 4976              		.loc 1 1077 0
 4977 17de 374B     		ldr	r3, .L196+68
 4978 17e0 1A88     		ldrh	r2, [r3]
 4979 17e2 374B     		ldr	r3, .L196+72
 4980 17e4 1B88     		ldrh	r3, [r3]
 4981 17e6 9A42     		cmp	r2, r3
 4982 17e8 0FD2     		bcs	.L149
1078:main.c        ****                     {
1079:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 4983              		.loc 1 1079 0
 4984 17ea 344B     		ldr	r3, .L196+68
 4985 17ec 1B88     		ldrh	r3, [r3]
 4986 17ee 5A1C     		adds	r2, r3, #1
 4987 17f0 91B2     		uxth	r1, r2
 4988 17f2 324A     		ldr	r2, .L196+68
 4989 17f4 1180     		strh	r1, [r2]	@ movhi
 4990 17f6 1A46     		mov	r2, r3
 4991 17f8 324B     		ldr	r3, .L196+76
 4992 17fa 9B5C     		ldrb	r3, [r3, r2]
 4993 17fc D9B2     		uxtb	r1, r3
 4994 17fe 2C4A     		ldr	r2, .L196+56
 4995 1800 BB6D     		ldr	r3, [r7, #88]
 4996 1802 1344     		add	r3, r3, r2
 4997 1804 0A46     		mov	r2, r1
 4998 1806 1A70     		strb	r2, [r3]
 4999 1808 07E0     		b	.L150
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 109


 5000              	.L149:
1080:main.c        ****                     }
1081:main.c        ****                     else
1082:main.c        ****                     {
1083:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 5001              		.loc 1 1083 0
 5002 180a 294A     		ldr	r2, .L196+56
 5003 180c BB6D     		ldr	r3, [r7, #88]
 5004 180e 1344     		add	r3, r3, r2
 5005 1810 EE22     		movs	r2, #238
 5006 1812 1A70     		strb	r2, [r3]
1084:main.c        ****                         sendMessageEnd = 1;
 5007              		.loc 1 1084 0
 5008 1814 254B     		ldr	r3, .L196+52
 5009 1816 0122     		movs	r2, #1
 5010 1818 1A70     		strb	r2, [r3]
 5011              	.L150:
1075:main.c        ****                 {
 5012              		.loc 1 1075 0 discriminator 2
 5013 181a BB6D     		ldr	r3, [r7, #88]
 5014 181c 0133     		adds	r3, r3, #1
 5015 181e BB65     		str	r3, [r7, #88]
 5016              	.L148:
1075:main.c        ****                 {
 5017              		.loc 1 1075 0 is_stmt 0 discriminator 1
 5018 1820 BB6D     		ldr	r3, [r7, #88]
 5019 1822 1D2B     		cmp	r3, #29
 5020 1824 DBD9     		bls	.L151
 5021              	.LBE32:
1085:main.c        ****                     }
1086:main.c        ****                 }
1087:main.c        ****                 myArray[30] = 254;
 5022              		.loc 1 1087 0 is_stmt 1
 5023 1826 224B     		ldr	r3, .L196+56
 5024 1828 FE22     		movs	r2, #254
 5025 182a 9A77     		strb	r2, [r3, #30]
1088:main.c        ****                 myArray[31] = 253;
 5026              		.loc 1 1088 0
 5027 182c 204B     		ldr	r3, .L196+56
 5028 182e FD22     		movs	r2, #253
 5029 1830 DA77     		strb	r2, [r3, #31]
 5030 1832 64E1     		b	.L152
 5031              	.L145:
1089:main.c        ****             }    
1090:main.c        ****         }
1091:main.c        ****         
1092:main.c        ****         else if (sendSingleParamUpdate)
 5032              		.loc 1 1092 0
 5033 1834 244B     		ldr	r3, .L196+80
 5034 1836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5035 1838 002B     		cmp	r3, #0
 5036 183a 4FD0     		beq	.L153
1093:main.c        ****         {
1094:main.c        ****             myArray[0] = 6;
 5037              		.loc 1 1094 0
 5038 183c 1C4B     		ldr	r3, .L196+56
 5039 183e 0622     		movs	r2, #6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 110


 5040 1840 1A70     		strb	r2, [r3]
1095:main.c        ****             myArray[1] = singleParamToUpdateHigh;
 5041              		.loc 1 1095 0
 5042 1842 224B     		ldr	r3, .L196+84
 5043 1844 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5044 1846 1A4B     		ldr	r3, .L196+56
 5045 1848 5A70     		strb	r2, [r3, #1]
1096:main.c        ****             myArray[2] = singleParamToUpdateLow;
 5046              		.loc 1 1096 0
 5047 184a 214B     		ldr	r3, .L196+88
 5048 184c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5049 184e 184B     		ldr	r3, .L196+56
 5050 1850 9A70     		strb	r2, [r3, #2]
1097:main.c        ****             myArray[3] = singleParamValueHigh;
 5051              		.loc 1 1097 0
 5052 1852 204B     		ldr	r3, .L196+92
 5053 1854 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5054 1856 164B     		ldr	r3, .L196+56
 5055 1858 DA70     		strb	r2, [r3, #3]
1098:main.c        ****             myArray[4] = singleParamValueLow;
 5056              		.loc 1 1098 0
 5057 185a 1F4B     		ldr	r3, .L196+96
 5058 185c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5059 185e 144B     		ldr	r3, .L196+56
 5060 1860 1A71     		strb	r2, [r3, #4]
1099:main.c        ****             myArray[30] = 254;
 5061              		.loc 1 1099 0
 5062 1862 134B     		ldr	r3, .L196+56
 5063 1864 FE22     		movs	r2, #254
 5064 1866 9A77     		strb	r2, [r3, #30]
1100:main.c        ****             myArray[31] = 253;
 5065              		.loc 1 1100 0
 5066 1868 114B     		ldr	r3, .L196+56
 5067 186a FD22     		movs	r2, #253
 5068 186c DA77     		strb	r2, [r3, #31]
1101:main.c        ****             sendSingleParamUpdate = 0;
 5069              		.loc 1 1101 0
 5070 186e 164B     		ldr	r3, .L196+80
 5071 1870 0022     		movs	r2, #0
 5072 1872 1A70     		strb	r2, [r3]
 5073 1874 43E1     		b	.L152
 5074              	.L197:
 5075 1876 00BF     		.align	2
 5076              	.L196:
 5077 1878 00000000 		.word	midiBarSendOn
 5078 187c 00000000 		.word	barMidiOuterStrings
 5079 1880 00000000 		.word	openStringMIDI_Int
 5080 1884 ABAA2A43 		.word	1126869675
 5081 1888 00000000 		.word	midiSendOn
 5082 188c 00000000 		.word	prevStringPitchBend
 5083 1890 00000000 		.word	stringMIDI
 5084 1894 00000000 		.word	numStrings
 5085 1898 00000000 		.word	USB_check_flag
 5086 189c 00000000 		.word	USB_active
 5087 18a0 00000000 		.word	midiSent
 5088 18a4 00000000 		.word	midiOverflow
 5089 18a8 00000000 		.word	sendingMessage
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 111


 5090 18ac 00000000 		.word	sendMessageEnd
 5091 18b0 00000000 		.word	myArray
 5092 18b4 00000000 		.word	presetNumberToWrite
 5093 18b8 00000000 		.word	currentPresetSelection
 5094 18bc 00000000 		.word	messageArraySendCount
 5095 18c0 00000000 		.word	messageArraySize
 5096 18c4 00000000 		.word	presetArray
 5097 18c8 00000000 		.word	sendSingleParamUpdate
 5098 18cc 00000000 		.word	singleParamToUpdateHigh
 5099 18d0 00000000 		.word	singleParamToUpdateLow
 5100 18d4 00000000 		.word	singleParamValueHigh
 5101 18d8 00000000 		.word	singleParamValueLow
 5102              	.L153:
1102:main.c        ****         }
1103:main.c        ****         
1104:main.c        ****         else if (sendMappingChangeUpdate)
 5103              		.loc 1 1104 0
 5104 18dc 914B     		ldr	r3, .L198
 5105 18de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5106 18e0 002B     		cmp	r3, #0
 5107 18e2 24D0     		beq	.L154
1105:main.c        ****         {
1106:main.c        ****             myArray[0] = 7;
 5108              		.loc 1 1106 0
 5109 18e4 904B     		ldr	r3, .L198+4
 5110 18e6 0722     		movs	r2, #7
 5111 18e8 1A70     		strb	r2, [r3]
1107:main.c        ****             myArray[1] = mappingArray[0];
 5112              		.loc 1 1107 0
 5113 18ea 904B     		ldr	r3, .L198+8
 5114 18ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5115 18ee 8E4B     		ldr	r3, .L198+4
 5116 18f0 5A70     		strb	r2, [r3, #1]
1108:main.c        ****             myArray[2] =  mappingArray[1];
 5117              		.loc 1 1108 0
 5118 18f2 8E4B     		ldr	r3, .L198+8
 5119 18f4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5120 18f6 8C4B     		ldr	r3, .L198+4
 5121 18f8 9A70     		strb	r2, [r3, #2]
1109:main.c        ****             myArray[3] =  mappingArray[2];
 5122              		.loc 1 1109 0
 5123 18fa 8C4B     		ldr	r3, .L198+8
 5124 18fc 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 5125 18fe 8A4B     		ldr	r3, .L198+4
 5126 1900 DA70     		strb	r2, [r3, #3]
1110:main.c        ****             myArray[4] =  mappingArray[3];
 5127              		.loc 1 1110 0
 5128 1902 8A4B     		ldr	r3, .L198+8
 5129 1904 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5130 1906 884B     		ldr	r3, .L198+4
 5131 1908 1A71     		strb	r2, [r3, #4]
1111:main.c        ****             myArray[5] =  mappingArray[4];
 5132              		.loc 1 1111 0
 5133 190a 884B     		ldr	r3, .L198+8
 5134 190c 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 5135 190e 864B     		ldr	r3, .L198+4
 5136 1910 5A71     		strb	r2, [r3, #5]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 112


1112:main.c        ****             myArray[6] =  mappingArray[5];
 5137              		.loc 1 1112 0
 5138 1912 864B     		ldr	r3, .L198+8
 5139 1914 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 5140 1916 844B     		ldr	r3, .L198+4
 5141 1918 9A71     		strb	r2, [r3, #6]
1113:main.c        ****             myArray[30] = 254;
 5142              		.loc 1 1113 0
 5143 191a 834B     		ldr	r3, .L198+4
 5144 191c FE22     		movs	r2, #254
 5145 191e 9A77     		strb	r2, [r3, #30]
1114:main.c        ****             myArray[31] = 253;
 5146              		.loc 1 1114 0
 5147 1920 814B     		ldr	r3, .L198+4
 5148 1922 FD22     		movs	r2, #253
 5149 1924 DA77     		strb	r2, [r3, #31]
1115:main.c        ****             sendMappingChangeUpdate = 0;
 5150              		.loc 1 1115 0
 5151 1926 7F4B     		ldr	r3, .L198
 5152 1928 0022     		movs	r2, #0
 5153 192a 1A70     		strb	r2, [r3]
 5154 192c E7E0     		b	.L152
 5155              	.L154:
1116:main.c        ****         }
1117:main.c        ****         
1118:main.c        ****         
1119:main.c        ****         else if (sendKnobs)
 5156              		.loc 1 1119 0
 5157 192e 804B     		ldr	r3, .L198+12
 5158 1930 1B78     		ldrb	r3, [r3]
 5159 1932 DBB2     		uxtb	r3, r3
 5160 1934 002B     		cmp	r3, #0
 5161 1936 75D0     		beq	.L155
1120:main.c        ****         {
1121:main.c        ****             myArray[0] = 3; //sending knob stuff, not a preset send
 5162              		.loc 1 1121 0
 5163 1938 7B4B     		ldr	r3, .L198+4
 5164 193a 0322     		movs	r2, #3
 5165 193c 1A70     		strb	r2, [r3]
 5166              	.LBB33:
1122:main.c        ****             for (int i = 0; i < 8; i++)
 5167              		.loc 1 1122 0
 5168 193e 0023     		movs	r3, #0
 5169 1940 7B65     		str	r3, [r7, #84]
 5170 1942 0AE0     		b	.L156
 5171              	.L157:
1123:main.c        ****             {
1124:main.c        ****                 myArray[i + 1] = macroKnobValues[i];
 5172              		.loc 1 1124 0 discriminator 3
 5173 1944 7B6D     		ldr	r3, [r7, #84]
 5174 1946 0133     		adds	r3, r3, #1
 5175 1948 7A49     		ldr	r1, .L198+16
 5176 194a 7A6D     		ldr	r2, [r7, #84]
 5177 194c 0A44     		add	r2, r2, r1
 5178 194e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5179 1950 754A     		ldr	r2, .L198+4
 5180 1952 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 113


1122:main.c        ****             for (int i = 0; i < 8; i++)
 5181              		.loc 1 1122 0 discriminator 3
 5182 1954 7B6D     		ldr	r3, [r7, #84]
 5183 1956 0133     		adds	r3, r3, #1
 5184 1958 7B65     		str	r3, [r7, #84]
 5185              	.L156:
1122:main.c        ****             for (int i = 0; i < 8; i++)
 5186              		.loc 1 1122 0 is_stmt 0 discriminator 1
 5187 195a 7B6D     		ldr	r3, [r7, #84]
 5188 195c 072B     		cmp	r3, #7
 5189 195e F1DD     		ble	.L157
 5190              	.LBE33:
 5191              	.LBB34:
1125:main.c        ****             }
1126:main.c        ****             for (int i = 0; i < 4; i++)
 5192              		.loc 1 1126 0 is_stmt 1
 5193 1960 0023     		movs	r3, #0
 5194 1962 3B65     		str	r3, [r7, #80]
 5195 1964 0AE0     		b	.L158
 5196              	.L159:
1127:main.c        ****             {
1128:main.c        ****                 myArray[i + 9] = knobs[i];
 5197              		.loc 1 1128 0 discriminator 3
 5198 1966 3B6D     		ldr	r3, [r7, #80]
 5199 1968 0933     		adds	r3, r3, #9
 5200 196a 7349     		ldr	r1, .L198+20
 5201 196c 3A6D     		ldr	r2, [r7, #80]
 5202 196e 0A44     		add	r2, r2, r1
 5203 1970 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5204 1972 6D4A     		ldr	r2, .L198+4
 5205 1974 D154     		strb	r1, [r2, r3]
1126:main.c        ****             {
 5206              		.loc 1 1126 0 discriminator 3
 5207 1976 3B6D     		ldr	r3, [r7, #80]
 5208 1978 0133     		adds	r3, r3, #1
 5209 197a 3B65     		str	r3, [r7, #80]
 5210              	.L158:
1126:main.c        ****             {
 5211              		.loc 1 1126 0 is_stmt 0 discriminator 1
 5212 197c 3B6D     		ldr	r3, [r7, #80]
 5213 197e 032B     		cmp	r3, #3
 5214 1980 F1DD     		ble	.L159
 5215              	.LBE34:
 5216              	.LBB35:
1129:main.c        ****             }
1130:main.c        ****             for (int i = 0; i < 10; i++)
 5217              		.loc 1 1130 0 is_stmt 1
 5218 1982 0023     		movs	r3, #0
 5219 1984 FB64     		str	r3, [r7, #76]
 5220 1986 0AE0     		b	.L160
 5221              	.L161:
1131:main.c        ****             {
1132:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 5222              		.loc 1 1132 0 discriminator 3
 5223 1988 FB6C     		ldr	r3, [r7, #76]
 5224 198a 0D33     		adds	r3, r3, #13
 5225 198c 6B49     		ldr	r1, .L198+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 114


 5226 198e FA6C     		ldr	r2, [r7, #76]
 5227 1990 0A44     		add	r2, r2, r1
 5228 1992 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5229 1994 644A     		ldr	r2, .L198+4
 5230 1996 D154     		strb	r1, [r2, r3]
1130:main.c        ****             {
 5231              		.loc 1 1130 0 discriminator 3
 5232 1998 FB6C     		ldr	r3, [r7, #76]
 5233 199a 0133     		adds	r3, r3, #1
 5234 199c FB64     		str	r3, [r7, #76]
 5235              	.L160:
1130:main.c        ****             {
 5236              		.loc 1 1130 0 is_stmt 0 discriminator 1
 5237 199e FB6C     		ldr	r3, [r7, #76]
 5238 19a0 092B     		cmp	r3, #9
 5239 19a2 F1DD     		ble	.L161
 5240              	.LBE35:
1133:main.c        ****             }
1134:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (octaveAction << 6);
 5241              		.loc 1 1134 0 is_stmt 1
 5242 19a4 664B     		ldr	r3, .L198+28
 5243 19a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5244 19a8 1B01     		lsls	r3, r3, #4
 5245 19aa 5AB2     		sxtb	r2, r3
 5246 19ac 654B     		ldr	r3, .L198+32
 5247 19ae 1B68     		ldr	r3, [r3]
 5248 19b0 5BB2     		sxtb	r3, r3
 5249 19b2 1343     		orrs	r3, r3, r2
 5250 19b4 5AB2     		sxtb	r2, r3
 5251 19b6 644B     		ldr	r3, .L198+36
 5252 19b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5253 19ba 5B01     		lsls	r3, r3, #5
 5254 19bc 5BB2     		sxtb	r3, r3
 5255 19be 1343     		orrs	r3, r3, r2
 5256 19c0 5AB2     		sxtb	r2, r3
 5257 19c2 624B     		ldr	r3, .L198+40
 5258 19c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5259 19c6 9B01     		lsls	r3, r3, #6
 5260 19c8 5BB2     		sxtb	r3, r3
 5261 19ca 1343     		orrs	r3, r3, r2
 5262 19cc 5BB2     		sxtb	r3, r3
 5263 19ce DAB2     		uxtb	r2, r3
 5264 19d0 554B     		ldr	r3, .L198+4
 5265 19d2 1A76     		strb	r2, [r3, #24]
1135:main.c        ****             myArray[25] = patchNum;
 5266              		.loc 1 1135 0
 5267 19d4 5E4B     		ldr	r3, .L198+44
 5268 19d6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5269 19d8 534B     		ldr	r3, .L198+4
 5270 19da 5A76     		strb	r2, [r3, #25]
1136:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5271              		.loc 1 1136 0
 5272 19dc 5D4B     		ldr	r3, .L198+48
 5273 19de B3F90030 		ldrsh	r3, [r3]
 5274 19e2 1B12     		asrs	r3, r3, #8
 5275 19e4 1BB2     		sxth	r3, r3
 5276 19e6 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 115


 5277 19e8 4F4B     		ldr	r3, .L198+4
 5278 19ea 9A76     		strb	r2, [r3, #26]
1137:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5279              		.loc 1 1137 0
 5280 19ec 594B     		ldr	r3, .L198+48
 5281 19ee B3F90030 		ldrsh	r3, [r3]
 5282 19f2 DAB2     		uxtb	r2, r3
 5283 19f4 4C4B     		ldr	r3, .L198+4
 5284 19f6 DA76     		strb	r2, [r3, #27]
1138:main.c        ****             myArray[28] = barMidiOuterStrings[1] >> 8;
 5285              		.loc 1 1138 0
 5286 19f8 574B     		ldr	r3, .L198+52
 5287 19fa 5B88     		ldrh	r3, [r3, #2]
 5288 19fc 1B0A     		lsrs	r3, r3, #8
 5289 19fe 9BB2     		uxth	r3, r3
 5290 1a00 DAB2     		uxtb	r2, r3
 5291 1a02 494B     		ldr	r3, .L198+4
 5292 1a04 1A77     		strb	r2, [r3, #28]
1139:main.c        ****             myArray[29] = barMidiOuterStrings[1] & 0xff;
 5293              		.loc 1 1139 0
 5294 1a06 544B     		ldr	r3, .L198+52
 5295 1a08 5B88     		ldrh	r3, [r3, #2]
 5296 1a0a DAB2     		uxtb	r2, r3
 5297 1a0c 464B     		ldr	r3, .L198+4
 5298 1a0e 5A77     		strb	r2, [r3, #29]
1140:main.c        ****             myArray[30] = 254;
 5299              		.loc 1 1140 0
 5300 1a10 454B     		ldr	r3, .L198+4
 5301 1a12 FE22     		movs	r2, #254
 5302 1a14 9A77     		strb	r2, [r3, #30]
1141:main.c        ****             myArray[31] = 253;
 5303              		.loc 1 1141 0
 5304 1a16 444B     		ldr	r3, .L198+4
 5305 1a18 FD22     		movs	r2, #253
 5306 1a1a DA77     		strb	r2, [r3, #31]
1142:main.c        ****             
1143:main.c        ****             
1144:main.c        ****             sendKnobs = 0;
 5307              		.loc 1 1144 0
 5308 1a1c 444B     		ldr	r3, .L198+12
 5309 1a1e 0022     		movs	r2, #0
 5310 1a20 1A70     		strb	r2, [r3]
 5311 1a22 6CE0     		b	.L152
 5312              	.L155:
1145:main.c        ****         }
1146:main.c        ****         else
1147:main.c        ****         {
1148:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 5313              		.loc 1 1148 0
 5314 1a24 404B     		ldr	r3, .L198+4
 5315 1a26 0122     		movs	r2, #1
 5316 1a28 1A70     		strb	r2, [r3]
 5317              	.LBB36:
1149:main.c        ****             for (int i = 0; i < 12; i++)
 5318              		.loc 1 1149 0
 5319 1a2a 0023     		movs	r3, #0
 5320 1a2c BB64     		str	r3, [r7, #72]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 116


 5321 1a2e 24E0     		b	.L162
 5322              	.L163:
 5323              	.LBB37:
1150:main.c        ****             {
1151:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 5324              		.loc 1 1151 0 discriminator 3
 5325 1a30 4A4A     		ldr	r2, .L198+56
 5326 1a32 BB6C     		ldr	r3, [r7, #72]
 5327 1a34 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5328 1a38 4FF08841 		mov	r1, #1140850688
 5329 1a3c 1846     		mov	r0, r3
 5330 1a3e FFF7FEFF 		bl	__aeabi_fmul
 5331 1a42 0346     		mov	r3, r0
 5332 1a44 1846     		mov	r0, r3
 5333 1a46 FFF7FEFF 		bl	roundf
 5334 1a4a 0346     		mov	r3, r0
 5335 1a4c 1846     		mov	r0, r3
 5336 1a4e FFF7FEFF 		bl	__aeabi_f2iz
 5337 1a52 0346     		mov	r3, r0
 5338 1a54 FB60     		str	r3, [r7, #12]
1152:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 5339              		.loc 1 1152 0 discriminator 3
 5340 1a56 BB6C     		ldr	r3, [r7, #72]
 5341 1a58 5B00     		lsls	r3, r3, #1
 5342 1a5a 0133     		adds	r3, r3, #1
 5343 1a5c FA68     		ldr	r2, [r7, #12]
 5344 1a5e 1212     		asrs	r2, r2, #8
 5345 1a60 D1B2     		uxtb	r1, r2
 5346 1a62 314A     		ldr	r2, .L198+4
 5347 1a64 D154     		strb	r1, [r2, r3]
1153:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 5348              		.loc 1 1153 0 discriminator 3
 5349 1a66 BB6C     		ldr	r3, [r7, #72]
 5350 1a68 0133     		adds	r3, r3, #1
 5351 1a6a 5B00     		lsls	r3, r3, #1
 5352 1a6c FA68     		ldr	r2, [r7, #12]
 5353 1a6e D1B2     		uxtb	r1, r2
 5354 1a70 2D4A     		ldr	r2, .L198+4
 5355 1a72 D154     		strb	r1, [r2, r3]
 5356              	.LBE37:
1149:main.c        ****             {
 5357              		.loc 1 1149 0 discriminator 3
 5358 1a74 BB6C     		ldr	r3, [r7, #72]
 5359 1a76 0133     		adds	r3, r3, #1
 5360 1a78 BB64     		str	r3, [r7, #72]
 5361              	.L162:
1149:main.c        ****             {
 5362              		.loc 1 1149 0 is_stmt 0 discriminator 1
 5363 1a7a BB6C     		ldr	r3, [r7, #72]
 5364 1a7c 0B2B     		cmp	r3, #11
 5365 1a7e D7DD     		ble	.L163
 5366              	.LBE36:
1154:main.c        ****             }
1155:main.c        ****             
1156:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (octaveAction << 6);
 5367              		.loc 1 1156 0 is_stmt 1
 5368 1a80 2F4B     		ldr	r3, .L198+28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 117


 5369 1a82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5370 1a84 1B01     		lsls	r3, r3, #4
 5371 1a86 5AB2     		sxtb	r2, r3
 5372 1a88 2E4B     		ldr	r3, .L198+32
 5373 1a8a 1B68     		ldr	r3, [r3]
 5374 1a8c 5BB2     		sxtb	r3, r3
 5375 1a8e 1343     		orrs	r3, r3, r2
 5376 1a90 5AB2     		sxtb	r2, r3
 5377 1a92 2D4B     		ldr	r3, .L198+36
 5378 1a94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5379 1a96 5B01     		lsls	r3, r3, #5
 5380 1a98 5BB2     		sxtb	r3, r3
 5381 1a9a 1343     		orrs	r3, r3, r2
 5382 1a9c 5AB2     		sxtb	r2, r3
 5383 1a9e 2B4B     		ldr	r3, .L198+40
 5384 1aa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5385 1aa2 9B01     		lsls	r3, r3, #6
 5386 1aa4 5BB2     		sxtb	r3, r3
 5387 1aa6 1343     		orrs	r3, r3, r2
 5388 1aa8 5BB2     		sxtb	r3, r3
 5389 1aaa DAB2     		uxtb	r2, r3
 5390 1aac 1E4B     		ldr	r3, .L198+4
 5391 1aae 1A76     		strb	r2, [r3, #24]
1157:main.c        ****             myArray[25] = patchNum;
 5392              		.loc 1 1157 0
 5393 1ab0 274B     		ldr	r3, .L198+44
 5394 1ab2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5395 1ab4 1C4B     		ldr	r3, .L198+4
 5396 1ab6 5A76     		strb	r2, [r3, #25]
1158:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5397              		.loc 1 1158 0
 5398 1ab8 264B     		ldr	r3, .L198+48
 5399 1aba B3F90030 		ldrsh	r3, [r3]
 5400 1abe 1B12     		asrs	r3, r3, #8
 5401 1ac0 1BB2     		sxth	r3, r3
 5402 1ac2 DAB2     		uxtb	r2, r3
 5403 1ac4 184B     		ldr	r3, .L198+4
 5404 1ac6 9A76     		strb	r2, [r3, #26]
1159:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5405              		.loc 1 1159 0
 5406 1ac8 224B     		ldr	r3, .L198+48
 5407 1aca B3F90030 		ldrsh	r3, [r3]
 5408 1ace DAB2     		uxtb	r2, r3
 5409 1ad0 154B     		ldr	r3, .L198+4
 5410 1ad2 DA76     		strb	r2, [r3, #27]
1160:main.c        ****             myArray[28] = barMidiOuterStrings[0] >> 8;
 5411              		.loc 1 1160 0
 5412 1ad4 204B     		ldr	r3, .L198+52
 5413 1ad6 1B88     		ldrh	r3, [r3]
 5414 1ad8 1B0A     		lsrs	r3, r3, #8
 5415 1ada 9BB2     		uxth	r3, r3
 5416 1adc DAB2     		uxtb	r2, r3
 5417 1ade 124B     		ldr	r3, .L198+4
 5418 1ae0 1A77     		strb	r2, [r3, #28]
1161:main.c        ****             myArray[29] = barMidiOuterStrings[0] & 0xff;
 5419              		.loc 1 1161 0
 5420 1ae2 1D4B     		ldr	r3, .L198+52
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 118


 5421 1ae4 1B88     		ldrh	r3, [r3]
 5422 1ae6 DAB2     		uxtb	r2, r3
 5423 1ae8 0F4B     		ldr	r3, .L198+4
 5424 1aea 5A77     		strb	r2, [r3, #29]
1162:main.c        ****             myArray[30] = 254;
 5425              		.loc 1 1162 0
 5426 1aec 0E4B     		ldr	r3, .L198+4
 5427 1aee FE22     		movs	r2, #254
 5428 1af0 9A77     		strb	r2, [r3, #30]
1163:main.c        ****             myArray[31] = 253;
 5429              		.loc 1 1163 0
 5430 1af2 0D4B     		ldr	r3, .L198+4
 5431 1af4 FD22     		movs	r2, #253
 5432 1af6 DA77     		strb	r2, [r3, #31]
1164:main.c        ****             
1165:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 5433              		.loc 1 1165 0
 5434 1af8 0D4B     		ldr	r3, .L198+12
 5435 1afa 0122     		movs	r2, #1
 5436 1afc 1A70     		strb	r2, [r3]
 5437              	.L152:
1166:main.c        ****         }
1167:main.c        **** 
1168:main.c        ****         //parse input from synth board (names)
1169:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 5438              		.loc 1 1169 0
 5439 1afe 184B     		ldr	r3, .L198+60
 5440 1b00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5441 1b02 FD2B     		cmp	r3, #253
 5442 1b04 7FD1     		bne	.L164
 5443              		.loc 1 1169 0 is_stmt 0 discriminator 1
 5444 1b06 164B     		ldr	r3, .L198+60
 5445 1b08 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5446 1b0a FE2B     		cmp	r3, #254
 5447 1b0c 7BD1     		bne	.L164
 5448              	.LBB38:
1170:main.c        ****         {
1171:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5449              		.loc 1 1171 0 is_stmt 1
 5450 1b0e 144B     		ldr	r3, .L198+60
 5451 1b10 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5452 1b12 BB60     		str	r3, [r7, #8]
1172:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 5453              		.loc 1 1172 0
 5454 1b14 124B     		ldr	r3, .L198+60
 5455 1b16 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5456 1b18 7B60     		str	r3, [r7, #4]
1173:main.c        ****             int bufferPointer = 2;
 5457              		.loc 1 1173 0
 5458 1b1a 0223     		movs	r3, #2
 5459 1b1c 7B64     		str	r3, [r7, #68]
 5460              	.LBB39:
1174:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5461              		.loc 1 1174 0
 5462 1b1e 0023     		movs	r3, #0
 5463 1b20 3B64     		str	r3, [r7, #64]
 5464 1b22 34E0     		b	.L165
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 119


 5465              	.L199:
 5466              		.align	2
 5467              	.L198:
 5468 1b24 00000000 		.word	sendMappingChangeUpdate
 5469 1b28 00000000 		.word	myArray
 5470 1b2c 00000000 		.word	mappingArray
 5471 1b30 00000000 		.word	sendKnobs
 5472 1b34 00000000 		.word	macroKnobValues
 5473 1b38 00000000 		.word	knobs
 5474 1b3c 00000000 		.word	pedals8bit
 5475 1b40 00000000 		.word	voice
 5476 1b44 00000000 		.word	octave
 5477 1b48 00000000 		.word	dualSlider
 5478 1b4c 00000000 		.word	octaveAction
 5479 1b50 00000000 		.word	patchNum
 5480 1b54 00000000 		.word	processed_volumePedal
 5481 1b58 00000000 		.word	barMidiOuterStrings
 5482 1b5c 00000000 		.word	stringMIDI
 5483 1b60 00000000 		.word	inBuffer
 5484              	.L166:
1175:main.c        ****             {
1176:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 5485              		.loc 1 1176 0 discriminator 3
 5486 1b64 744A     		ldr	r2, .L200
 5487 1b66 7B6C     		ldr	r3, [r7, #68]
 5488 1b68 1344     		add	r3, r3, r2
 5489 1b6a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5490 1b6c 7349     		ldr	r1, .L200+4
 5491 1b6e BA68     		ldr	r2, [r7, #8]
 5492 1b70 1346     		mov	r3, r2
 5493 1b72 DB00     		lsls	r3, r3, #3
 5494 1b74 9B1A     		subs	r3, r3, r2
 5495 1b76 5B00     		lsls	r3, r3, #1
 5496 1b78 CA18     		adds	r2, r1, r3
 5497 1b7a 3B6C     		ldr	r3, [r7, #64]
 5498 1b7c 1344     		add	r3, r3, r2
 5499 1b7e 0246     		mov	r2, r0
 5500 1b80 1A70     		strb	r2, [r3]
1177:main.c        ****                 bufferPointer++;
 5501              		.loc 1 1177 0 discriminator 3
 5502 1b82 7B6C     		ldr	r3, [r7, #68]
 5503 1b84 0133     		adds	r3, r3, #1
 5504 1b86 7B64     		str	r3, [r7, #68]
1174:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5505              		.loc 1 1174 0 discriminator 3
 5506 1b88 3B6C     		ldr	r3, [r7, #64]
 5507 1b8a 0133     		adds	r3, r3, #1
 5508 1b8c 3B64     		str	r3, [r7, #64]
 5509              	.L165:
1174:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5510              		.loc 1 1174 0 is_stmt 0 discriminator 1
 5511 1b8e 3B6C     		ldr	r3, [r7, #64]
 5512 1b90 0D2B     		cmp	r3, #13
 5513 1b92 E7DD     		ble	.L166
 5514              	.LBE39:
1178:main.c        ****             }
1179:main.c        ****             bufferPointer = 17;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 120


 5515              		.loc 1 1179 0 is_stmt 1
 5516 1b94 1123     		movs	r3, #17
 5517 1b96 7B64     		str	r3, [r7, #68]
 5518              	.LBB40:
1180:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5519              		.loc 1 1180 0
 5520 1b98 0023     		movs	r3, #0
 5521 1b9a FB63     		str	r3, [r7, #60]
 5522 1b9c 1BE0     		b	.L167
 5523              	.L168:
1181:main.c        ****             {
1182:main.c        ****                 macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[buffer
 5524              		.loc 1 1182 0 discriminator 3
 5525 1b9e 664A     		ldr	r2, .L200
 5526 1ba0 7B6C     		ldr	r3, [r7, #68]
 5527 1ba2 1344     		add	r3, r3, r2
 5528 1ba4 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5529 1ba6 6648     		ldr	r0, .L200+8
 5530 1ba8 7B68     		ldr	r3, [r7, #4]
 5531 1baa B968     		ldr	r1, [r7, #8]
 5532 1bac 1A46     		mov	r2, r3
 5533 1bae D200     		lsls	r2, r2, #3
 5534 1bb0 D21A     		subs	r2, r2, r3
 5535 1bb2 5300     		lsls	r3, r2, #1
 5536 1bb4 1A46     		mov	r2, r3
 5537 1bb6 0B46     		mov	r3, r1
 5538 1bb8 DB00     		lsls	r3, r3, #3
 5539 1bba 5B1A     		subs	r3, r3, r1
 5540 1bbc 1B01     		lsls	r3, r3, #4
 5541 1bbe 1344     		add	r3, r3, r2
 5542 1bc0 C218     		adds	r2, r0, r3
 5543 1bc2 FB6B     		ldr	r3, [r7, #60]
 5544 1bc4 1344     		add	r3, r3, r2
 5545 1bc6 2246     		mov	r2, r4
 5546 1bc8 1A70     		strb	r2, [r3]
1183:main.c        ****                 bufferPointer++;
 5547              		.loc 1 1183 0 discriminator 3
 5548 1bca 7B6C     		ldr	r3, [r7, #68]
 5549 1bcc 0133     		adds	r3, r3, #1
 5550 1bce 7B64     		str	r3, [r7, #68]
1180:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5551              		.loc 1 1180 0 discriminator 3
 5552 1bd0 FB6B     		ldr	r3, [r7, #60]
 5553 1bd2 0133     		adds	r3, r3, #1
 5554 1bd4 FB63     		str	r3, [r7, #60]
 5555              	.L167:
1180:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5556              		.loc 1 1180 0 is_stmt 0 discriminator 1
 5557 1bd6 FB6B     		ldr	r3, [r7, #60]
 5558 1bd8 0D2B     		cmp	r3, #13
 5559 1bda E0DD     		ble	.L168
 5560              	.LBE40:
1184:main.c        ****             }
1185:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 5561              		.loc 1 1185 0 is_stmt 1
 5562 1bdc 594B     		ldr	r3, .L200+12
 5563 1bde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 121


 5564 1be0 1A46     		mov	r2, r3
 5565 1be2 BB68     		ldr	r3, [r7, #8]
 5566 1be4 9A42     		cmp	r2, r3
 5567 1be6 40F09080 		bne	.L176
 5568              		.loc 1 1185 0 is_stmt 0 discriminator 1
 5569 1bea 7B68     		ldr	r3, [r7, #4]
 5570 1bec 072B     		cmp	r3, #7
 5571 1bee 40F08C80 		bne	.L176
 5572              		.loc 1 1185 0 discriminator 2
 5573 1bf2 554A     		ldr	r2, .L200+16
 5574 1bf4 BB68     		ldr	r3, [r7, #8]
 5575 1bf6 1344     		add	r3, r3, r2
 5576 1bf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5577 1bfa 002B     		cmp	r3, #0
 5578 1bfc 40F08580 		bne	.L176
1186:main.c        ****             {
1187:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5579              		.loc 1 1187 0 is_stmt 1
 5580 1c00 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5581              	.LBE38:
1170:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5582              		.loc 1 1170 0
 5583 1c04 81E0     		b	.L176
 5584              	.L164:
1188:main.c        ****             }
1189:main.c        ****         }
1190:main.c        ****         else if ((inBuffer[0] == 252) && (inBuffer[31] == 254))
 5585              		.loc 1 1190 0
 5586 1c06 4C4B     		ldr	r3, .L200
 5587 1c08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5588 1c0a FC2B     		cmp	r3, #252
 5589 1c0c 7ED1     		bne	.L170
 5590              		.loc 1 1190 0 is_stmt 0 discriminator 1
 5591 1c0e 4A4B     		ldr	r3, .L200
 5592 1c10 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5593 1c12 FE2B     		cmp	r3, #254
 5594 1c14 7AD1     		bne	.L170
1191:main.c        ****         {
1192:main.c        ****             //oop this means we're about to get new firmware. Reset to bootloader
1193:main.c        ****             SPIM_1_Stop();
 5595              		.loc 1 1193 0 is_stmt 1
 5596 1c16 FFF7FEFF 		bl	SPIM_1_Stop
1194:main.c        ****             myGFX_setFont(0);
 5597              		.loc 1 1194 0
 5598 1c1a 0020     		movs	r0, #0
 5599 1c1c FFF7FEFF 		bl	myGFX_setFont
1195:main.c        ****             OLEDwriteString("FIRMWARE   ", 11, 1, FirstLine);
 5600              		.loc 1 1195 0
 5601 1c20 0023     		movs	r3, #0
 5602 1c22 0122     		movs	r2, #1
 5603 1c24 0B21     		movs	r1, #11
 5604 1c26 4948     		ldr	r0, .L200+20
 5605 1c28 FFF7FEFF 		bl	OLEDwriteString
1196:main.c        ****             OLEDwriteString("UPDATE     ", 11, 1, SecondLine);
 5606              		.loc 1 1196 0
 5607 1c2c 0123     		movs	r3, #1
 5608 1c2e 0122     		movs	r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 122


 5609 1c30 0B21     		movs	r1, #11
 5610 1c32 4748     		ldr	r0, .L200+24
 5611 1c34 FFF7FEFF 		bl	OLEDwriteString
1197:main.c        ****             OLEDwriteString("           ", 11, 1, ThirdLine);
 5612              		.loc 1 1197 0
 5613 1c38 0223     		movs	r3, #2
 5614 1c3a 0122     		movs	r2, #1
 5615 1c3c 0B21     		movs	r1, #11
 5616 1c3e 4548     		ldr	r0, .L200+28
 5617 1c40 FFF7FEFF 		bl	OLEDwriteString
1198:main.c        ****             OLEDwriteString("           ", 11, 1, FourthLine);
 5618              		.loc 1 1198 0
 5619 1c44 0323     		movs	r3, #3
 5620 1c46 0122     		movs	r2, #1
 5621 1c48 0B21     		movs	r1, #11
 5622 1c4a 4248     		ldr	r0, .L200+28
 5623 1c4c FFF7FEFF 		bl	OLEDwriteString
1199:main.c        ****             main_counter = 11;
 5624              		.loc 1 1199 0
 5625 1c50 414B     		ldr	r3, .L200+32
 5626 1c52 0B22     		movs	r2, #11
 5627 1c54 1A70     		strb	r2, [r3]
1200:main.c        ****                    //set muxes to write to main OLED
1201:main.c        ****             if (mux_states[main_counter][0] != last_mux)
 5628              		.loc 1 1201 0
 5629 1c56 404B     		ldr	r3, .L200+32
 5630 1c58 1B78     		ldrb	r3, [r3]
 5631 1c5a DBB2     		uxtb	r3, r3
 5632 1c5c 1A46     		mov	r2, r3
 5633 1c5e 3F4B     		ldr	r3, .L200+36
 5634 1c60 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 5635 1c64 3E4B     		ldr	r3, .L200+40
 5636 1c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5637 1c68 9A42     		cmp	r2, r3
 5638 1c6a 13D0     		beq	.L171
 5639              	.LBB41:
1202:main.c        ****             {
1203:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 5640              		.loc 1 1203 0
 5641 1c6c 3A4B     		ldr	r3, .L200+32
 5642 1c6e 1B78     		ldrb	r3, [r3]
 5643 1c70 DBB2     		uxtb	r3, r3
 5644 1c72 1A46     		mov	r2, r3
 5645 1c74 394B     		ldr	r3, .L200+36
 5646 1c76 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 5647 1c7a 1A46     		mov	r2, r3
 5648 1c7c 0123     		movs	r3, #1
 5649 1c7e 9340     		lsls	r3, r3, r2
 5650 1c80 DAB2     		uxtb	r2, r3
 5651 1c82 384B     		ldr	r3, .L200+44
 5652 1c84 1A70     		strb	r2, [r3]
1204:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 5653              		.loc 1 1204 0
 5654 1c86 0022     		movs	r2, #0
 5655 1c88 0121     		movs	r1, #1
 5656 1c8a 7020     		movs	r0, #112
 5657 1c8c FFF7FEFF 		bl	I2C_MasterWriteBlocking
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 123


 5658 1c90 0346     		mov	r3, r0
 5659 1c92 FB70     		strb	r3, [r7, #3]
 5660              	.L171:
 5661              	.LBE41:
1205:main.c        ****             }
1206:main.c        ****             last_mux = mux_states[main_counter][0];
 5662              		.loc 1 1206 0
 5663 1c94 304B     		ldr	r3, .L200+32
 5664 1c96 1B78     		ldrb	r3, [r3]
 5665 1c98 DBB2     		uxtb	r3, r3
 5666 1c9a 1A46     		mov	r2, r3
 5667 1c9c 2F4B     		ldr	r3, .L200+36
 5668 1c9e 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 5669 1ca2 2F4B     		ldr	r3, .L200+40
 5670 1ca4 1A70     		strb	r2, [r3]
1207:main.c        ****             
1208:main.c        ****             
1209:main.c        ****             CyDelayUs(10);
 5671              		.loc 1 1209 0
 5672 1ca6 0A20     		movs	r0, #10
 5673 1ca8 FFF7FEFF 		bl	CyDelayUs
1210:main.c        ****             if (mux_states[main_counter][0] == 5)
 5674              		.loc 1 1210 0
 5675 1cac 2A4B     		ldr	r3, .L200+32
 5676 1cae 1B78     		ldrb	r3, [r3]
 5677 1cb0 DBB2     		uxtb	r3, r3
 5678 1cb2 1A46     		mov	r2, r3
 5679 1cb4 294B     		ldr	r3, .L200+36
 5680 1cb6 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 5681 1cba 052B     		cmp	r3, #5
 5682 1cbc 1DD1     		bne	.L172
1211:main.c        ****             {
1212:main.c        ****                 if (!i2c_skipped[main_counter])
 5683              		.loc 1 1212 0
 5684 1cbe 264B     		ldr	r3, .L200+32
 5685 1cc0 1B78     		ldrb	r3, [r3]
 5686 1cc2 DBB2     		uxtb	r3, r3
 5687 1cc4 1A46     		mov	r2, r3
 5688 1cc6 284B     		ldr	r3, .L200+48
 5689 1cc8 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 5690 1cca 002B     		cmp	r3, #0
 5691 1ccc 15D1     		bne	.L172
1213:main.c        ****                 {
1214:main.c        ****                     I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 5692              		.loc 1 1214 0
 5693 1cce 224B     		ldr	r3, .L200+32
 5694 1cd0 1B78     		ldrb	r3, [r3]
 5695 1cd2 DBB2     		uxtb	r3, r3
 5696 1cd4 214A     		ldr	r2, .L200+36
 5697 1cd6 5B00     		lsls	r3, r3, #1
 5698 1cd8 1344     		add	r3, r3, r2
 5699 1cda 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5700 1cdc 1A46     		mov	r2, r3
 5701 1cde 0123     		movs	r3, #1
 5702 1ce0 9340     		lsls	r3, r3, r2
 5703 1ce2 DAB2     		uxtb	r2, r3
 5704 1ce4 1F4B     		ldr	r3, .L200+44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 124


 5705 1ce6 1A70     		strb	r2, [r3]
1215:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 5706              		.loc 1 1215 0
 5707 1ce8 0022     		movs	r2, #0
 5708 1cea 0121     		movs	r1, #1
 5709 1cec 7120     		movs	r0, #113
 5710 1cee FFF7FEFF 		bl	I2C_MasterWriteBlocking
 5711 1cf2 0346     		mov	r3, r0
 5712 1cf4 1A46     		mov	r2, r3
 5713 1cf6 1D4B     		ldr	r3, .L200+52
 5714 1cf8 1A60     		str	r2, [r3]
 5715              	.L172:
1216:main.c        ****                 }
1217:main.c        ****             }
1218:main.c        **** 
1219:main.c        ****             CyDelayUs(10);
 5716              		.loc 1 1219 0
 5717 1cfa 0A20     		movs	r0, #10
 5718 1cfc FFF7FEFF 		bl	CyDelayUs
1220:main.c        **** 
1221:main.c        ****             OLED_draw(128, 64);
 5719              		.loc 1 1221 0
 5720 1d00 4021     		movs	r1, #64
 5721 1d02 8020     		movs	r0, #128
 5722 1d04 FFF7FEFF 		bl	OLED_draw
 5723 1d08 00E0     		b	.L170
 5724              	.L176:
1170:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5725              		.loc 1 1170 0
 5726 1d0a 00BF     		nop
 5727              	.L170:
1222:main.c        ****             #ifdef BOOTLOAD_STYLE
1223:main.c        ****             Bootloadable_Load();
1224:main.c        ****                 #endif
1225:main.c        ****         }
1226:main.c        ****         
1227:main.c        ****         SPIM_1_ClearRxBuffer();
 5728              		.loc 1 1227 0
 5729 1d0c FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1228:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 5730              		.loc 1 1228 0
 5731 1d10 174B     		ldr	r3, .L200+56
 5732 1d12 1B78     		ldrb	r3, [r3]
 5733 1d14 DBB2     		uxtb	r3, r3
 5734 1d16 0121     		movs	r1, #1
 5735 1d18 1846     		mov	r0, r3
 5736 1d1a FFF7FEFF 		bl	CyDmaChEnable
1229:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 5737              		.loc 1 1229 0
 5738 1d1e 154B     		ldr	r3, .L200+60
 5739 1d20 1B78     		ldrb	r3, [r3]
 5740 1d22 DBB2     		uxtb	r3, r3
 5741 1d24 0121     		movs	r1, #1
 5742 1d26 1846     		mov	r0, r3
 5743 1d28 FFF7FEFF 		bl	CyDmaChEnable
1230:main.c        ****         
1231:main.c        ****         testpin6_Write(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 125


 5744              		.loc 1 1231 0
 5745 1d2c 0020     		movs	r0, #0
 5746 1d2e FFF7FEFF 		bl	testpin6_Write
1232:main.c        ****        
1233:main.c        **** 
1234:main.c        ****      }
 5747              		.loc 1 1234 0
 5748 1d32 FEF70DBD 		b	.L173
 5749              	.L201:
 5750 1d36 00BF     		.align	2
 5751              	.L200:
 5752 1d38 00000000 		.word	inBuffer
 5753 1d3c 00000000 		.word	presetNamesArray
 5754 1d40 00000000 		.word	macroNamesArray
 5755 1d44 00000000 		.word	patchNum
 5756 1d48 00000000 		.word	presetAlreadyDisplayed
 5757 1d4c 04040000 		.word	.LC1
 5758 1d50 10040000 		.word	.LC2
 5759 1d54 1C040000 		.word	.LC3
 5760 1d58 00000000 		.word	main_counter
 5761 1d5c 00000000 		.word	mux_states
 5762 1d60 00000000 		.word	last_mux
 5763 1d64 00000000 		.word	I2Cbuff1
 5764 1d68 00000000 		.word	i2c_skipped
 5765 1d6c 00000000 		.word	status
 5766 1d70 00000000 		.word	rx3Channel
 5767 1d74 00000000 		.word	txChannel
 5768              		.cfi_endproc
 5769              	.LFE74:
 5770              		.size	main, .-main
 5771              		.section	.text.DmaTxConfiguration,"ax",%progbits
 5772              		.align	2
 5773              		.global	DmaTxConfiguration
 5774              		.thumb
 5775              		.thumb_func
 5776              		.type	DmaTxConfiguration, %function
 5777              	DmaTxConfiguration:
 5778              	.LFB75:
1235:main.c        **** }
1236:main.c        **** 
1237:main.c        **** void DmaTxConfiguration()
1238:main.c        **** {
 5779              		.loc 1 1238 0
 5780              		.cfi_startproc
 5781              		@ args = 0, pretend = 0, frame = 0
 5782              		@ frame_needed = 1, uses_anonymous_args = 0
 5783 0000 80B5     		push	{r7, lr}
 5784              		.cfi_def_cfa_offset 8
 5785              		.cfi_offset 7, -8
 5786              		.cfi_offset 14, -4
 5787 0002 00AF     		add	r7, sp, #0
 5788              		.cfi_def_cfa_register 7
1239:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1240:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 5789              		.loc 1 1240 0
 5790 0004 4FF48043 		mov	r3, #16384
 5791 0008 41F6FF72 		movw	r2, #8191
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 126


 5792 000c 0121     		movs	r1, #1
 5793 000e 0120     		movs	r0, #1
 5794 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 5795 0014 0346     		mov	r3, r0
 5796 0016 1A46     		mov	r2, r3
 5797 0018 124B     		ldr	r3, .L203
 5798 001a 1A70     		strb	r2, [r3]
1241:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1242:main.c        **** 
1243:main.c        ****     txTD = CyDmaTdAllocate();
 5799              		.loc 1 1243 0
 5800 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5801 0020 0346     		mov	r3, r0
 5802 0022 1A46     		mov	r2, r3
 5803 0024 104B     		ldr	r3, .L203+4
 5804 0026 1A70     		strb	r2, [r3]
1244:main.c        **** 
1245:main.c        ****     /* Configure this Td as follows:
1246:main.c        ****     *  - Increment the source address, but not the destination address   
1247:main.c        ****     */
1248:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 5805              		.loc 1 1248 0
 5806 0028 0F4B     		ldr	r3, .L203+4
 5807 002a 1B78     		ldrb	r3, [r3]
 5808 002c D8B2     		uxtb	r0, r3
 5809 002e 0123     		movs	r3, #1
 5810 0030 FE22     		movs	r2, #254
 5811 0032 2021     		movs	r1, #32
 5812 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1249:main.c        **** 
1250:main.c        ****     /* From the memory to the SPIM */
1251:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 5813              		.loc 1 1251 0
 5814 0038 0B4B     		ldr	r3, .L203+4
 5815 003a 1B78     		ldrb	r3, [r3]
 5816 003c DBB2     		uxtb	r3, r3
 5817 003e 0B4A     		ldr	r2, .L203+8
 5818 0040 91B2     		uxth	r1, r2
 5819 0042 46F24642 		movw	r2, #25670
 5820 0046 1846     		mov	r0, r3
 5821 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1252:main.c        ****     
1253:main.c        ****     /* Associate the TD with the channel */
1254:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 5822              		.loc 1 1254 0
 5823 004c 054B     		ldr	r3, .L203
 5824 004e 1B78     		ldrb	r3, [r3]
 5825 0050 DAB2     		uxtb	r2, r3
 5826 0052 054B     		ldr	r3, .L203+4
 5827 0054 1B78     		ldrb	r3, [r3]
 5828 0056 DBB2     		uxtb	r3, r3
 5829 0058 1946     		mov	r1, r3
 5830 005a 1046     		mov	r0, r2
 5831 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1255:main.c        ****    
1256:main.c        **** } 
 5832              		.loc 1 1256 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 127


 5833 0060 00BF     		nop
 5834 0062 80BD     		pop	{r7, pc}
 5835              	.L204:
 5836              		.align	2
 5837              	.L203:
 5838 0064 00000000 		.word	txChannel
 5839 0068 00000000 		.word	txTD
 5840 006c 00000000 		.word	myArray
 5841              		.cfi_endproc
 5842              	.LFE75:
 5843              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 5844              		.section	.text.DmaRxConfiguration,"ax",%progbits
 5845              		.align	2
 5846              		.global	DmaRxConfiguration
 5847              		.thumb
 5848              		.thumb_func
 5849              		.type	DmaRxConfiguration, %function
 5850              	DmaRxConfiguration:
 5851              	.LFB76:
1257:main.c        **** 
1258:main.c        **** void DmaRxConfiguration()
1259:main.c        **** { 
 5852              		.loc 1 1259 0
 5853              		.cfi_startproc
 5854              		@ args = 0, pretend = 0, frame = 0
 5855              		@ frame_needed = 1, uses_anonymous_args = 0
 5856 0000 80B5     		push	{r7, lr}
 5857              		.cfi_def_cfa_offset 8
 5858              		.cfi_offset 7, -8
 5859              		.cfi_offset 14, -4
 5860 0002 00AF     		add	r7, sp, #0
 5861              		.cfi_def_cfa_register 7
1260:main.c        ****     //pluck dma
1261:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5862              		.loc 1 1261 0
 5863 0004 41F6FF73 		movw	r3, #8191
 5864 0008 4FF48042 		mov	r2, #16384
 5865 000c 0121     		movs	r1, #1
 5866 000e 0120     		movs	r0, #1
 5867 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 5868 0014 0346     		mov	r3, r0
 5869 0016 1A46     		mov	r2, r3
 5870 0018 4A4B     		ldr	r3, .L206
 5871 001a 1A70     		strb	r2, [r3]
1262:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1263:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 5872              		.loc 1 1263 0
 5873 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5874 0020 0346     		mov	r3, r0
 5875 0022 1A46     		mov	r2, r3
 5876 0024 484B     		ldr	r3, .L206+4
 5877 0026 1A70     		strb	r2, [r3]
1264:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 5878              		.loc 1 1264 0
 5879 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 5880 002c 0346     		mov	r3, r0
 5881 002e 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 128


 5882 0030 454B     		ldr	r3, .L206+4
 5883 0032 5A70     		strb	r2, [r3, #1]
1265:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 5884              		.loc 1 1265 0
 5885 0034 444B     		ldr	r3, .L206+4
 5886 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5887 0038 0223     		movs	r3, #2
 5888 003a FE22     		movs	r2, #254
 5889 003c 1A21     		movs	r1, #26
 5890 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1266:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 5891              		.loc 1 1266 0
 5892 0042 414B     		ldr	r3, .L206+4
 5893 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5894 0046 0223     		movs	r3, #2
 5895 0048 FE22     		movs	r2, #254
 5896 004a 1A21     		movs	r1, #26
 5897 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1267:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 5898              		.loc 1 1267 0
 5899 0050 3D4B     		ldr	r3, .L206+4
 5900 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5901 0054 3D4A     		ldr	r2, .L206+8
 5902 0056 92B2     		uxth	r2, r2
 5903 0058 46F25551 		movw	r1, #25941
 5904 005c 1846     		mov	r0, r3
 5905 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1268:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 5906              		.loc 1 1268 0
 5907 0062 394B     		ldr	r3, .L206+4
 5908 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5909 0066 3A4A     		ldr	r2, .L206+12
 5910 0068 92B2     		uxth	r2, r2
 5911 006a 46F25551 		movw	r1, #25941
 5912 006e 1846     		mov	r0, r3
 5913 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1269:main.c        **** 
1270:main.c        ****     //bar dma
1271:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5914              		.loc 1 1271 0
 5915 0074 41F6FF73 		movw	r3, #8191
 5916 0078 4FF48042 		mov	r2, #16384
 5917 007c 0121     		movs	r1, #1
 5918 007e 0120     		movs	r0, #1
 5919 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 5920 0084 0346     		mov	r3, r0
 5921 0086 1A46     		mov	r2, r3
 5922 0088 324B     		ldr	r3, .L206+16
 5923 008a 1A70     		strb	r2, [r3]
1272:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1273:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 5924              		.loc 1 1273 0
 5925 008c FFF7FEFF 		bl	CyDmaTdAllocate
 5926 0090 0346     		mov	r3, r0
 5927 0092 1A46     		mov	r2, r3
 5928 0094 304B     		ldr	r3, .L206+20
 5929 0096 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 129


1274:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 5930              		.loc 1 1274 0
 5931 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 5932 009c 0346     		mov	r3, r0
 5933 009e 1A46     		mov	r2, r3
 5934 00a0 2D4B     		ldr	r3, .L206+20
 5935 00a2 5A70     		strb	r2, [r3, #1]
1275:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5936              		.loc 1 1275 0
 5937 00a4 2C4B     		ldr	r3, .L206+20
 5938 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5939 00a8 0623     		movs	r3, #6
 5940 00aa FE22     		movs	r2, #254
 5941 00ac 0821     		movs	r1, #8
 5942 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1276:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5943              		.loc 1 1276 0
 5944 00b2 294B     		ldr	r3, .L206+20
 5945 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5946 00b6 0623     		movs	r3, #6
 5947 00b8 FE22     		movs	r2, #254
 5948 00ba 0821     		movs	r1, #8
 5949 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1277:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 5950              		.loc 1 1277 0
 5951 00c0 254B     		ldr	r3, .L206+20
 5952 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5953 00c4 254A     		ldr	r2, .L206+24
 5954 00c6 92B2     		uxth	r2, r2
 5955 00c8 46F25841 		movw	r1, #25688
 5956 00cc 1846     		mov	r0, r3
 5957 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1278:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 5958              		.loc 1 1278 0
 5959 00d2 214B     		ldr	r3, .L206+20
 5960 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5961 00d6 224A     		ldr	r2, .L206+28
 5962 00d8 92B2     		uxth	r2, r2
 5963 00da 46F25841 		movw	r1, #25688
 5964 00de 1846     		mov	r0, r3
 5965 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1279:main.c        ****     
1280:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1281:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5966              		.loc 1 1281 0
 5967 00e4 41F6FF73 		movw	r3, #8191
 5968 00e8 4FF48042 		mov	r2, #16384
 5969 00ec 0121     		movs	r1, #1
 5970 00ee 0120     		movs	r0, #1
 5971 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 5972 00f4 0346     		mov	r3, r0
 5973 00f6 1A46     		mov	r2, r3
 5974 00f8 1A4B     		ldr	r3, .L206+32
 5975 00fa 1A70     		strb	r2, [r3]
1282:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1283:main.c        **** 
1284:main.c        ****     rx3TD = CyDmaTdAllocate();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 130


 5976              		.loc 1 1284 0
 5977 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 5978 0100 0346     		mov	r3, r0
 5979 0102 1A46     		mov	r2, r3
 5980 0104 184B     		ldr	r3, .L206+36
 5981 0106 1A70     		strb	r2, [r3]
1285:main.c        ****     
1286:main.c        ****     /* Configure this Td as follows:
1287:main.c        ****     *  - Increment the destination address, but not the source address
1288:main.c        ****     */
1289:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 5982              		.loc 1 1289 0
 5983 0108 174B     		ldr	r3, .L206+36
 5984 010a 1B78     		ldrb	r3, [r3]
 5985 010c D8B2     		uxtb	r0, r3
 5986 010e 0223     		movs	r3, #2
 5987 0110 FE22     		movs	r2, #254
 5988 0112 2021     		movs	r1, #32
 5989 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1290:main.c        **** 
1291:main.c        ****     /* From the SPIM to the memory */
1292:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 5990              		.loc 1 1292 0
 5991 0118 134B     		ldr	r3, .L206+36
 5992 011a 1B78     		ldrb	r3, [r3]
 5993 011c DBB2     		uxtb	r3, r3
 5994 011e 134A     		ldr	r2, .L206+40
 5995 0120 92B2     		uxth	r2, r2
 5996 0122 46F25641 		movw	r1, #25686
 5997 0126 1846     		mov	r0, r3
 5998 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1293:main.c        **** 
1294:main.c        ****     /* Associate the TD with the channel */
1295:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 5999              		.loc 1 1295 0
 6000 012c 0D4B     		ldr	r3, .L206+32
 6001 012e 1B78     		ldrb	r3, [r3]
 6002 0130 DAB2     		uxtb	r2, r3
 6003 0132 0D4B     		ldr	r3, .L206+36
 6004 0134 1B78     		ldrb	r3, [r3]
 6005 0136 DBB2     		uxtb	r3, r3
 6006 0138 1946     		mov	r1, r3
 6007 013a 1046     		mov	r0, r2
 6008 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1296:main.c        **** }
 6009              		.loc 1 1296 0
 6010 0140 00BF     		nop
 6011 0142 80BD     		pop	{r7, pc}
 6012              	.L207:
 6013              		.align	2
 6014              	.L206:
 6015 0144 00000000 		.word	rx1Channel
 6016 0148 00000000 		.word	rx1TD
 6017 014c 00000000 		.word	rxBufferPluck
 6018 0150 1A000000 		.word	rxBufferPluck+26
 6019 0154 00000000 		.word	rx2Channel
 6020 0158 00000000 		.word	rx2TD
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 131


 6021 015c 00000000 		.word	rxBufferBar
 6022 0160 08000000 		.word	rxBufferBar+8
 6023 0164 00000000 		.word	rx3Channel
 6024 0168 00000000 		.word	rx3TD
 6025 016c 00000000 		.word	inBuffer
 6026              		.cfi_endproc
 6027              	.LFE76:
 6028              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 6029              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 6030              		.align	2
 6031              		.global	I2C_MasterWriteBlocking
 6032              		.thumb
 6033              		.thumb_func
 6034              		.type	I2C_MasterWriteBlocking, %function
 6035              	I2C_MasterWriteBlocking:
 6036              	.LFB77:
1297:main.c        **** 
1298:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1299:main.c        **** {
 6037              		.loc 1 1299 0
 6038              		.cfi_startproc
 6039              		@ args = 0, pretend = 0, frame = 24
 6040              		@ frame_needed = 1, uses_anonymous_args = 0
 6041 0000 80B5     		push	{r7, lr}
 6042              		.cfi_def_cfa_offset 8
 6043              		.cfi_offset 7, -8
 6044              		.cfi_offset 14, -4
 6045 0002 86B0     		sub	sp, sp, #24
 6046              		.cfi_def_cfa_offset 32
 6047 0004 00AF     		add	r7, sp, #0
 6048              		.cfi_def_cfa_register 7
 6049 0006 0346     		mov	r3, r0
 6050 0008 FB71     		strb	r3, [r7, #7]
 6051 000a 0B46     		mov	r3, r1	@ movhi
 6052 000c BB80     		strh	r3, [r7, #4]	@ movhi
 6053 000e 1346     		mov	r3, r2
 6054 0010 BB71     		strb	r3, [r7, #6]
1300:main.c        ****     uint8 volatile status;
1301:main.c        ****     uint8_t error = 0;
 6055              		.loc 1 1301 0
 6056 0012 0023     		movs	r3, #0
 6057 0014 FB75     		strb	r3, [r7, #23]
1302:main.c        ****     uint32_t timeout = 1000;
 6058              		.loc 1 1302 0
 6059 0016 4FF47A73 		mov	r3, #1000
 6060 001a 3B61     		str	r3, [r7, #16]
1303:main.c        ****     status = I2C_1_MasterClearStatus();
 6061              		.loc 1 1303 0
 6062 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6063 0020 0346     		mov	r3, r0
 6064 0022 FB73     		strb	r3, [r7, #15]
1304:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6065              		.loc 1 1304 0
 6066 0024 FB7B     		ldrb	r3, [r7, #15]
 6067 0026 DBB2     		uxtb	r3, r3
 6068 0028 5BB2     		sxtb	r3, r3
 6069 002a 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 132


 6070 002c 42DB     		blt	.L209
1305:main.c        ****     {
1306:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 6071              		.loc 1 1306 0
 6072 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 6073 0030 DAB2     		uxtb	r2, r3
 6074 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6075 0034 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6076 0036 2949     		ldr	r1, .L218
 6077 0038 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 6078 003c 0346     		mov	r3, r0
 6079 003e FB73     		strb	r3, [r7, #15]
1307:main.c        ****                                      mode);
1308:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6080              		.loc 1 1308 0
 6081 0040 FB7B     		ldrb	r3, [r7, #15]
 6082 0042 DBB2     		uxtb	r3, r3
 6083 0044 002B     		cmp	r3, #0
 6084 0046 2FD1     		bne	.L210
 6085              	.L214:
1309:main.c        ****         {
1310:main.c        ****             /* wait for write complete and no error */
1311:main.c        ****             do
1312:main.c        ****             {
1313:main.c        ****                 status = I2C_1_MasterStatus();
 6086              		.loc 1 1313 0
 6087 0048 FFF7FEFF 		bl	I2C_1_MasterStatus
 6088 004c 0346     		mov	r3, r0
 6089 004e FB73     		strb	r3, [r7, #15]
1314:main.c        ****                 timeout--;
 6090              		.loc 1 1314 0
 6091 0050 3B69     		ldr	r3, [r7, #16]
 6092 0052 013B     		subs	r3, r3, #1
 6093 0054 3B61     		str	r3, [r7, #16]
1315:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6094              		.loc 1 1315 0
 6095 0056 FB7B     		ldrb	r3, [r7, #15]
 6096 0058 DBB2     		uxtb	r3, r3
 6097 005a 802B     		cmp	r3, #128
 6098 005c 03D1     		bne	.L211
1316:main.c        ****                 {
1317:main.c        ****                     I2C_reset();
 6099              		.loc 1 1317 0
 6100 005e FFF7FEFF 		bl	I2C_reset
1318:main.c        ****                     error = 1;
 6101              		.loc 1 1318 0
 6102 0062 0123     		movs	r3, #1
 6103 0064 FB75     		strb	r3, [r7, #23]
 6104              	.L211:
1319:main.c        ****                 }
1320:main.c        ****                 if (timeout == 0)
 6105              		.loc 1 1320 0
 6106 0066 3B69     		ldr	r3, [r7, #16]
 6107 0068 002B     		cmp	r3, #0
 6108 006a 05D1     		bne	.L212
1321:main.c        ****                 {
1322:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 133


 6109              		.loc 1 1322 0
 6110 006c 8023     		movs	r3, #128
 6111 006e FB73     		strb	r3, [r7, #15]
1323:main.c        ****                     I2C_reset();
 6112              		.loc 1 1323 0
 6113 0070 FFF7FEFF 		bl	I2C_reset
1324:main.c        ****                     error = 1;
 6114              		.loc 1 1324 0
 6115 0074 0123     		movs	r3, #1
 6116 0076 FB75     		strb	r3, [r7, #23]
 6117              	.L212:
1325:main.c        ****                 }
1326:main.c        ****                 
1327:main.c        ****                 if (status == 0)
 6118              		.loc 1 1327 0
 6119 0078 FB7B     		ldrb	r3, [r7, #15]
 6120 007a DBB2     		uxtb	r3, r3
 6121 007c 002B     		cmp	r3, #0
 6122 007e 05D1     		bne	.L213
1328:main.c        ****                 {
1329:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6123              		.loc 1 1329 0
 6124 0080 8023     		movs	r3, #128
 6125 0082 FB73     		strb	r3, [r7, #15]
1330:main.c        ****                     I2C_reset();
 6126              		.loc 1 1330 0
 6127 0084 FFF7FEFF 		bl	I2C_reset
1331:main.c        ****                     error = 1;
 6128              		.loc 1 1331 0
 6129 0088 0123     		movs	r3, #1
 6130 008a FB75     		strb	r3, [r7, #23]
 6131              	.L213:
1332:main.c        ****                 }
1333:main.c        ****                 
1334:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6132              		.loc 1 1334 0
 6133 008c FB7B     		ldrb	r3, [r7, #15]
 6134 008e DBB2     		uxtb	r3, r3
 6135 0090 03F08203 		and	r3, r3, #130
 6136 0094 002B     		cmp	r3, #0
 6137 0096 0DD1     		bne	.L209
 6138              		.loc 1 1334 0 is_stmt 0 discriminator 1
 6139 0098 FB7B     		ldrb	r3, [r7, #15]
 6140 009a DBB2     		uxtb	r3, r3
 6141 009c 002B     		cmp	r3, #0
 6142 009e 09D0     		beq	.L209
 6143              		.loc 1 1334 0 discriminator 2
 6144 00a0 3B69     		ldr	r3, [r7, #16]
 6145 00a2 002B     		cmp	r3, #0
 6146 00a4 D0D1     		bne	.L214
 6147 00a6 05E0     		b	.L209
 6148              	.L210:
1335:main.c        ****         }
1336:main.c        ****         else
1337:main.c        ****         {
1338:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1339:main.c        ****             *  I2CM_MasterStatus() error output */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 134


1340:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6149              		.loc 1 1340 0 is_stmt 1
 6150 00a8 8023     		movs	r3, #128
 6151 00aa FB73     		strb	r3, [r7, #15]
1341:main.c        ****             I2C_reset();
 6152              		.loc 1 1341 0
 6153 00ac FFF7FEFF 		bl	I2C_reset
1342:main.c        ****             error = 1;
 6154              		.loc 1 1342 0
 6155 00b0 0123     		movs	r3, #1
 6156 00b2 FB75     		strb	r3, [r7, #23]
 6157              	.L209:
1343:main.c        ****         } 
1344:main.c        ****     }  
1345:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6158              		.loc 1 1345 0
 6159 00b4 FB7B     		ldrb	r3, [r7, #15]
 6160 00b6 DBB2     		uxtb	r3, r3
 6161 00b8 03F02003 		and	r3, r3, #32
 6162 00bc 002B     		cmp	r3, #0
 6163 00be 04D1     		bne	.L215
 6164              		.loc 1 1345 0 is_stmt 0 discriminator 1
 6165 00c0 FB7B     		ldrb	r3, [r7, #15]
 6166 00c2 DBB2     		uxtb	r3, r3
 6167 00c4 5BB2     		sxtb	r3, r3
 6168 00c6 002B     		cmp	r3, #0
 6169 00c8 03DA     		bge	.L216
 6170              	.L215:
1346:main.c        ****     {
1347:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1348:main.c        ****         //i2c_skipped[main_counter] = 1;
1349:main.c        ****         I2C_reset();
 6171              		.loc 1 1349 0 is_stmt 1
 6172 00ca FFF7FEFF 		bl	I2C_reset
1350:main.c        ****         error = 1;
 6173              		.loc 1 1350 0
 6174 00ce 0123     		movs	r3, #1
 6175 00d0 FB75     		strb	r3, [r7, #23]
 6176              	.L216:
1351:main.c        ****     }
1352:main.c        ****     return error;
 6177              		.loc 1 1352 0
 6178 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1353:main.c        **** }
 6179              		.loc 1 1353 0
 6180 00d4 1846     		mov	r0, r3
 6181 00d6 1837     		adds	r7, r7, #24
 6182              		.cfi_def_cfa_offset 8
 6183 00d8 BD46     		mov	sp, r7
 6184              		.cfi_def_cfa_register 13
 6185              		@ sp needed
 6186 00da 80BD     		pop	{r7, pc}
 6187              	.L219:
 6188              		.align	2
 6189              	.L218:
 6190 00dc 00000000 		.word	I2Cbuff1
 6191              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 135


 6192              	.LFE77:
 6193              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 6194              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 6195              		.align	2
 6196              		.global	I2C_MasterReadBlocking
 6197              		.thumb
 6198              		.thumb_func
 6199              		.type	I2C_MasterReadBlocking, %function
 6200              	I2C_MasterReadBlocking:
 6201              	.LFB78:
1354:main.c        **** 
1355:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1356:main.c        **** {
 6202              		.loc 1 1356 0
 6203              		.cfi_startproc
 6204              		@ args = 0, pretend = 0, frame = 16
 6205              		@ frame_needed = 1, uses_anonymous_args = 0
 6206 0000 80B5     		push	{r7, lr}
 6207              		.cfi_def_cfa_offset 8
 6208              		.cfi_offset 7, -8
 6209              		.cfi_offset 14, -4
 6210 0002 84B0     		sub	sp, sp, #16
 6211              		.cfi_def_cfa_offset 24
 6212 0004 00AF     		add	r7, sp, #0
 6213              		.cfi_def_cfa_register 7
 6214 0006 0346     		mov	r3, r0
 6215 0008 FB71     		strb	r3, [r7, #7]
 6216 000a 0B46     		mov	r3, r1
 6217 000c BB71     		strb	r3, [r7, #6]
 6218 000e 1346     		mov	r3, r2
 6219 0010 7B71     		strb	r3, [r7, #5]
1357:main.c        ****     uint8 volatile status;
1358:main.c        ****     uint32_t timeout = 50000;
 6220              		.loc 1 1358 0
 6221 0012 4CF25033 		movw	r3, #50000
 6222 0016 FB60     		str	r3, [r7, #12]
1359:main.c        ****     uint8_t error = 0;
 6223              		.loc 1 1359 0
 6224 0018 0023     		movs	r3, #0
 6225 001a FB72     		strb	r3, [r7, #11]
1360:main.c        ****     status = I2C_1_MasterClearStatus();
 6226              		.loc 1 1360 0
 6227 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6228 0020 0346     		mov	r3, r0
 6229 0022 BB72     		strb	r3, [r7, #10]
1361:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6230              		.loc 1 1361 0
 6231 0024 BB7A     		ldrb	r3, [r7, #10]
 6232 0026 DBB2     		uxtb	r3, r3
 6233 0028 5BB2     		sxtb	r3, r3
 6234 002a 002B     		cmp	r3, #0
 6235 002c 46DB     		blt	.L221
1362:main.c        ****     {
1363:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 6236              		.loc 1 1363 0
 6237 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6238 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 136


 6239 0032 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6240 0034 2B49     		ldr	r1, .L230
 6241 0036 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 6242 003a 0346     		mov	r3, r0
 6243 003c BB72     		strb	r3, [r7, #10]
1364:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1365:main.c        ****                                     nbytes, mode); 
1366:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6244              		.loc 1 1366 0
 6245 003e BB7A     		ldrb	r3, [r7, #10]
 6246 0040 DBB2     		uxtb	r3, r3
 6247 0042 002B     		cmp	r3, #0
 6248 0044 34D1     		bne	.L222
 6249              	.L226:
1367:main.c        ****         {
1368:main.c        ****             /* wait for read complete and no error */
1369:main.c        ****             do
1370:main.c        ****             {
1371:main.c        ****                 status = I2C_1_MasterStatus();
 6250              		.loc 1 1371 0
 6251 0046 FFF7FEFF 		bl	I2C_1_MasterStatus
 6252 004a 0346     		mov	r3, r0
 6253 004c BB72     		strb	r3, [r7, #10]
1372:main.c        ****                 timeout--;
 6254              		.loc 1 1372 0
 6255 004e FB68     		ldr	r3, [r7, #12]
 6256 0050 013B     		subs	r3, r3, #1
 6257 0052 FB60     		str	r3, [r7, #12]
1373:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6258              		.loc 1 1373 0
 6259 0054 BB7A     		ldrb	r3, [r7, #10]
 6260 0056 DBB2     		uxtb	r3, r3
 6261 0058 802B     		cmp	r3, #128
 6262 005a 12D1     		bne	.L223
1374:main.c        ****                 {
1375:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 6263              		.loc 1 1375 0
 6264 005c 224B     		ldr	r3, .L230+4
 6265 005e 5222     		movs	r2, #82
 6266 0060 1A70     		strb	r2, [r3]
 6267 0062 224B     		ldr	r3, .L230+8
 6268 0064 FF22     		movs	r2, #255
 6269 0066 1A70     		strb	r2, [r3]
 6270 0068 214B     		ldr	r3, .L230+12
 6271 006a 0022     		movs	r2, #0
 6272 006c 1A70     		strb	r2, [r3]
 6273 006e 00BF     		nop
 6274              	.L224:
 6275              		.loc 1 1375 0 is_stmt 0 discriminator 2
 6276 0070 1E4B     		ldr	r3, .L230+8
 6277 0072 1B78     		ldrb	r3, [r3]
 6278 0074 DBB2     		uxtb	r3, r3
 6279 0076 002B     		cmp	r3, #0
 6280 0078 FAD1     		bne	.L224
1376:main.c        ****                     I2C_reset();
 6281              		.loc 1 1376 0 is_stmt 1
 6282 007a FFF7FEFF 		bl	I2C_reset
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 137


1377:main.c        ****                     error = 1;
 6283              		.loc 1 1377 0
 6284 007e 0123     		movs	r3, #1
 6285 0080 FB72     		strb	r3, [r7, #11]
 6286              	.L223:
1378:main.c        ****                 }
1379:main.c        ****                 if (timeout == 0)
 6287              		.loc 1 1379 0
 6288 0082 FB68     		ldr	r3, [r7, #12]
 6289 0084 002B     		cmp	r3, #0
 6290 0086 05D1     		bne	.L225
1380:main.c        ****                 {
1381:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6291              		.loc 1 1381 0
 6292 0088 8023     		movs	r3, #128
 6293 008a BB72     		strb	r3, [r7, #10]
1382:main.c        ****                     I2C_reset();
 6294              		.loc 1 1382 0
 6295 008c FFF7FEFF 		bl	I2C_reset
1383:main.c        ****                     error = 1;
 6296              		.loc 1 1383 0
 6297 0090 0123     		movs	r3, #1
 6298 0092 FB72     		strb	r3, [r7, #11]
 6299              	.L225:
1384:main.c        ****                 }
1385:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6300              		.loc 1 1385 0
 6301 0094 BB7A     		ldrb	r3, [r7, #10]
 6302 0096 DBB2     		uxtb	r3, r3
 6303 0098 03F08103 		and	r3, r3, #129
 6304 009c 002B     		cmp	r3, #0
 6305 009e 0DD1     		bne	.L221
 6306              		.loc 1 1385 0 is_stmt 0 discriminator 1
 6307 00a0 BB7A     		ldrb	r3, [r7, #10]
 6308 00a2 DBB2     		uxtb	r3, r3
 6309 00a4 002B     		cmp	r3, #0
 6310 00a6 09D0     		beq	.L221
 6311              		.loc 1 1385 0 discriminator 2
 6312 00a8 FB68     		ldr	r3, [r7, #12]
 6313 00aa 002B     		cmp	r3, #0
 6314 00ac CBD1     		bne	.L226
 6315 00ae 05E0     		b	.L221
 6316              	.L222:
1386:main.c        ****         }
1387:main.c        ****         else
1388:main.c        ****         {
1389:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1390:main.c        ****             *  I2CM_MasterStatus() error output */
1391:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6317              		.loc 1 1391 0 is_stmt 1
 6318 00b0 8023     		movs	r3, #128
 6319 00b2 BB72     		strb	r3, [r7, #10]
1392:main.c        ****             I2C_reset();
 6320              		.loc 1 1392 0
 6321 00b4 FFF7FEFF 		bl	I2C_reset
1393:main.c        ****             error = 1;
 6322              		.loc 1 1393 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 138


 6323 00b8 0123     		movs	r3, #1
 6324 00ba FB72     		strb	r3, [r7, #11]
 6325              	.L221:
1394:main.c        ****         }
1395:main.c        ****     }
1396:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6326              		.loc 1 1396 0
 6327 00bc BB7A     		ldrb	r3, [r7, #10]
 6328 00be DBB2     		uxtb	r3, r3
 6329 00c0 03F02003 		and	r3, r3, #32
 6330 00c4 002B     		cmp	r3, #0
 6331 00c6 04D1     		bne	.L227
 6332              		.loc 1 1396 0 is_stmt 0 discriminator 1
 6333 00c8 BB7A     		ldrb	r3, [r7, #10]
 6334 00ca DBB2     		uxtb	r3, r3
 6335 00cc 5BB2     		sxtb	r3, r3
 6336 00ce 002B     		cmp	r3, #0
 6337 00d0 03DA     		bge	.L228
 6338              	.L227:
1397:main.c        ****     {
1398:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1399:main.c        ****         //i2c_skipped[main_counter] = 1;
1400:main.c        ****         I2C_reset();
 6339              		.loc 1 1400 0 is_stmt 1
 6340 00d2 FFF7FEFF 		bl	I2C_reset
1401:main.c        ****         error = 1;
 6341              		.loc 1 1401 0
 6342 00d6 0123     		movs	r3, #1
 6343 00d8 FB72     		strb	r3, [r7, #11]
 6344              	.L228:
1402:main.c        ****     }
1403:main.c        ****     return error;
 6345              		.loc 1 1403 0
 6346 00da FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1404:main.c        **** }
 6347              		.loc 1 1404 0
 6348 00dc 1846     		mov	r0, r3
 6349 00de 1037     		adds	r7, r7, #16
 6350              		.cfi_def_cfa_offset 8
 6351 00e0 BD46     		mov	sp, r7
 6352              		.cfi_def_cfa_register 13
 6353              		@ sp needed
 6354 00e2 80BD     		pop	{r7, pc}
 6355              	.L231:
 6356              		.align	2
 6357              	.L230:
 6358 00e4 00000000 		.word	I2Cbuff2
 6359 00e8 74640040 		.word	1073767540
 6360 00ec 1B640040 		.word	1073767451
 6361 00f0 5B640040 		.word	1073767515
 6362              		.cfi_endproc
 6363              	.LFE78:
 6364              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 6365              		.section	.text.I2C_reset,"ax",%progbits
 6366              		.align	2
 6367              		.global	I2C_reset
 6368              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 139


 6369              		.thumb_func
 6370              		.type	I2C_reset, %function
 6371              	I2C_reset:
 6372              	.LFB79:
1405:main.c        **** 
1406:main.c        **** void I2C_reset(void)
1407:main.c        **** {
 6373              		.loc 1 1407 0
 6374              		.cfi_startproc
 6375              		@ args = 0, pretend = 0, frame = 0
 6376              		@ frame_needed = 1, uses_anonymous_args = 0
 6377 0000 80B5     		push	{r7, lr}
 6378              		.cfi_def_cfa_offset 8
 6379              		.cfi_offset 7, -8
 6380              		.cfi_offset 14, -4
 6381 0002 00AF     		add	r7, sp, #0
 6382              		.cfi_def_cfa_register 7
1408:main.c        ****   I2C_1_Stop();
 6383              		.loc 1 1408 0
 6384 0004 FFF7FEFF 		bl	I2C_1_Stop
1409:main.c        **** 
1410:main.c        ****   /* Disable/clear everything, then reinitialize. */
1411:main.c        **** 
1412:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 6385              		.loc 1 1412 0
 6386 0008 044B     		ldr	r3, .L233
 6387 000a 0022     		movs	r2, #0
 6388 000c 1A70     		strb	r2, [r3]
1413:main.c        **** 
1414:main.c        ****   //I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
1415:main.c        **** 
1416:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 6389              		.loc 1 1416 0
 6390 000e 044B     		ldr	r3, .L233+4
 6391 0010 0022     		movs	r2, #0
 6392 0012 1A70     		strb	r2, [r3]
1417:main.c        **** 
1418:main.c        ****   I2C_1_Start();
 6393              		.loc 1 1418 0
 6394 0014 FFF7FEFF 		bl	I2C_1_Start
1419:main.c        **** }
 6395              		.loc 1 1419 0
 6396 0018 00BF     		nop
 6397 001a 80BD     		pop	{r7, pc}
 6398              	.L234:
 6399              		.align	2
 6400              	.L233:
 6401 001c 74640040 		.word	1073767540
 6402 0020 00000000 		.word	I2C_1_initVar
 6403              		.cfi_endproc
 6404              	.LFE79:
 6405              		.size	I2C_reset, .-I2C_reset
 6406              		.section	.text.checkUSB_Vbus,"ax",%progbits
 6407              		.align	2
 6408              		.global	checkUSB_Vbus
 6409              		.thumb
 6410              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 140


 6411              		.type	checkUSB_Vbus, %function
 6412              	checkUSB_Vbus:
 6413              	.LFB80:
1420:main.c        **** 
1421:main.c        **** 
1422:main.c        ****     
1423:main.c        **** void checkUSB_Vbus(void)
1424:main.c        **** {
 6414              		.loc 1 1424 0
 6415              		.cfi_startproc
 6416              		@ args = 0, pretend = 0, frame = 0
 6417              		@ frame_needed = 1, uses_anonymous_args = 0
 6418 0000 80B5     		push	{r7, lr}
 6419              		.cfi_def_cfa_offset 8
 6420              		.cfi_offset 7, -8
 6421              		.cfi_offset 14, -4
 6422 0002 00AF     		add	r7, sp, #0
 6423              		.cfi_def_cfa_register 7
1425:main.c        ****    if (USB_VBusPresent() == 0)
 6424              		.loc 1 1425 0
 6425 0004 FFF7FEFF 		bl	USB_VBusPresent
 6426 0008 0346     		mov	r3, r0
 6427 000a 002B     		cmp	r3, #0
 6428 000c 05D1     		bne	.L236
1426:main.c        ****    {
1427:main.c        ****        USB_Stop();
 6429              		.loc 1 1427 0
 6430 000e FFF7FEFF 		bl	USB_Stop
1428:main.c        ****        USB_active = 0; 
 6431              		.loc 1 1428 0
 6432 0012 0E4B     		ldr	r3, .L239
 6433 0014 0022     		movs	r2, #0
 6434 0016 1A70     		strb	r2, [r3]
 6435 0018 13E0     		b	.L237
 6436              	.L236:
1429:main.c        ****    }
1430:main.c        ****    else if (USB_active == 0 )
 6437              		.loc 1 1430 0
 6438 001a 0C4B     		ldr	r3, .L239
 6439 001c 1B78     		ldrb	r3, [r3]
 6440 001e DBB2     		uxtb	r3, r3
 6441 0020 002B     		cmp	r3, #0
 6442 0022 0ED1     		bne	.L237
1431:main.c        ****    {
1432:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 6443              		.loc 1 1432 0
 6444 0024 0021     		movs	r1, #0
 6445 0026 0020     		movs	r0, #0
 6446 0028 FFF7FEFF 		bl	USB_Start
1433:main.c        ****         while (0u == USB_GetConfiguration());
 6447              		.loc 1 1433 0
 6448 002c 00BF     		nop
 6449              	.L238:
 6450              		.loc 1 1433 0 is_stmt 0 discriminator 1
 6451 002e FFF7FEFF 		bl	USB_GetConfiguration
 6452 0032 0346     		mov	r3, r0
 6453 0034 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 141


 6454 0036 FAD0     		beq	.L238
1434:main.c        ****         USB_MIDI_EP_Init();
 6455              		.loc 1 1434 0 is_stmt 1
 6456 0038 FFF7FEFF 		bl	USB_MIDI_Init
1435:main.c        ****        USB_active = 1;
 6457              		.loc 1 1435 0
 6458 003c 034B     		ldr	r3, .L239
 6459 003e 0122     		movs	r2, #1
 6460 0040 1A70     		strb	r2, [r3]
 6461              	.L237:
1436:main.c        ****    }
1437:main.c        ****    USB_check_flag = 0;
 6462              		.loc 1 1437 0
 6463 0042 034B     		ldr	r3, .L239+4
 6464 0044 0022     		movs	r2, #0
 6465 0046 1A70     		strb	r2, [r3]
1438:main.c        **** }
 6466              		.loc 1 1438 0
 6467 0048 00BF     		nop
 6468 004a 80BD     		pop	{r7, pc}
 6469              	.L240:
 6470              		.align	2
 6471              	.L239:
 6472 004c 00000000 		.word	USB_active
 6473 0050 00000000 		.word	USB_check_flag
 6474              		.cfi_endproc
 6475              	.LFE80:
 6476              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 6477              		.section	.text.USB_service,"ax",%progbits
 6478              		.align	2
 6479              		.global	USB_service
 6480              		.thumb
 6481              		.thumb_func
 6482              		.type	USB_service, %function
 6483              	USB_service:
 6484              	.LFB81:
1439:main.c        **** 
1440:main.c        **** 
1441:main.c        **** 
1442:main.c        **** void USB_service(void)
1443:main.c        **** {
 6485              		.loc 1 1443 0
 6486              		.cfi_startproc
 6487              		@ args = 0, pretend = 0, frame = 0
 6488              		@ frame_needed = 1, uses_anonymous_args = 0
 6489 0000 80B5     		push	{r7, lr}
 6490              		.cfi_def_cfa_offset 8
 6491              		.cfi_offset 7, -8
 6492              		.cfi_offset 14, -4
 6493 0002 00AF     		add	r7, sp, #0
 6494              		.cfi_def_cfa_register 7
1444:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 6495              		.loc 1 1444 0
 6496 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 6497 0008 0346     		mov	r3, r0
 6498 000a 002B     		cmp	r3, #0
 6499 000c 10D0     		beq	.L242
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 142


1445:main.c        ****     {
1446:main.c        ****         if(USB_GetConfiguration() != 0u)   
 6500              		.loc 1 1446 0
 6501 000e FFF7FEFF 		bl	USB_GetConfiguration
 6502 0012 0346     		mov	r3, r0
 6503 0014 002B     		cmp	r3, #0
 6504 0016 0BD0     		beq	.L242
1447:main.c        ****         {
1448:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1449:main.c        ****             
1450:main.c        ****             //SleepTimer_Start();
1451:main.c        ****         	
1452:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 6505              		.loc 1 1452 0
 6506 0018 244B     		ldr	r3, .L248
 6507 001a 1B78     		ldrb	r3, [r3]
 6508 001c DBB2     		uxtb	r3, r3
 6509 001e 002B     		cmp	r3, #0
 6510 0020 06D0     		beq	.L242
 6511              		.loc 1 1452 0 is_stmt 0 discriminator 1
 6512 0022 FFF7FEFF 		bl	USB_VBusPresent
 6513 0026 0346     		mov	r3, r0
 6514 0028 002B     		cmp	r3, #0
 6515 002a 01D0     		beq	.L242
1453:main.c        ****             {
1454:main.c        ****                 USB_MIDI_EP_Init();
 6516              		.loc 1 1454 0 is_stmt 1
 6517 002c FFF7FEFF 		bl	USB_MIDI_Init
 6518              	.L242:
1455:main.c        ****             }
1456:main.c        ****         }
1457:main.c        ****         else
1458:main.c        ****         {
1459:main.c        ****             //SleepTimer_Stop();
1460:main.c        ****         }    
1461:main.c        ****     }        
1462:main.c        ****     
1463:main.c        ****     if(USB_GetConfiguration() != 0u)    
 6519              		.loc 1 1463 0
 6520 0030 FFF7FEFF 		bl	USB_GetConfiguration
 6521 0034 0346     		mov	r3, r0
 6522 0036 002B     		cmp	r3, #0
 6523 0038 35D0     		beq	.L247
1464:main.c        ****     {
1465:main.c        **** 
1466:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1467:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 6524              		.loc 1 1467 0
 6525 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 6526 003e 0346     		mov	r3, r0
 6527 0040 002B     		cmp	r3, #0
 6528 0042 18D0     		beq	.L245
1468:main.c        ****         {
1469:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 6529              		.loc 1 1469 0
 6530 0044 1A4B     		ldr	r3, .L248+4
 6531 0046 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 143


 6532 0048 D8B2     		uxtb	r0, r3
 6533 004a 1A4B     		ldr	r3, .L248+8
 6534 004c 1B78     		ldrb	r3, [r3]
 6535 004e DBB2     		uxtb	r3, r3
 6536 0050 9BB2     		uxth	r3, r3
 6537 0052 1A46     		mov	r2, r3
 6538 0054 1849     		ldr	r1, .L248+12
 6539 0056 FFF7FEFF 		bl	USB_LoadInEP
1470:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1471:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 6540              		.loc 1 1471 0
 6541 005a 184B     		ldr	r3, .L248+16
 6542 005c 1B78     		ldrb	r3, [r3]
 6543 005e DBB2     		uxtb	r3, r3
 6544 0060 4022     		movs	r2, #64
 6545 0062 1749     		ldr	r1, .L248+20
 6546 0064 1846     		mov	r0, r3
 6547 0066 FFF7FEFF 		bl	USB_ReadOutEP
1472:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1473:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1474:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 6548              		.loc 1 1474 0
 6549 006a 144B     		ldr	r3, .L248+16
 6550 006c 1B78     		ldrb	r3, [r3]
 6551 006e DBB2     		uxtb	r3, r3
 6552 0070 1846     		mov	r0, r3
 6553 0072 FFF7FEFF 		bl	USB_EnableOutEP
 6554              	.L245:
1475:main.c        ****         }
1476:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6555              		.loc 1 1476 0
 6556 0076 0D4B     		ldr	r3, .L248
 6557 0078 1B78     		ldrb	r3, [r3]
 6558 007a DBB2     		uxtb	r3, r3
 6559 007c 002B     		cmp	r3, #0
 6560 007e 06D0     		beq	.L246
 6561              		.loc 1 1476 0 is_stmt 0 discriminator 1
 6562 0080 FFF7FEFF 		bl	USB_VBusPresent
 6563 0084 0346     		mov	r3, r0
 6564 0086 002B     		cmp	r3, #0
 6565 0088 01D0     		beq	.L246
1477:main.c        ****         {
1478:main.c        ****             USB_MIDI_IN_Service();
 6566              		.loc 1 1478 0 is_stmt 1
 6567 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 6568              	.L246:
1479:main.c        ****         }
1480:main.c        **** 
1481:main.c        **** 
1482:main.c        **** 
1483:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6569              		.loc 1 1483 0
 6570 008e 074B     		ldr	r3, .L248
 6571 0090 1B78     		ldrb	r3, [r3]
 6572 0092 DBB2     		uxtb	r3, r3
 6573 0094 002B     		cmp	r3, #0
 6574 0096 06D0     		beq	.L247
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 144


 6575              		.loc 1 1483 0 is_stmt 0 discriminator 1
 6576 0098 FFF7FEFF 		bl	USB_VBusPresent
 6577 009c 0346     		mov	r3, r0
 6578 009e 002B     		cmp	r3, #0
 6579 00a0 01D0     		beq	.L247
1484:main.c        ****         {
1485:main.c        ****             USB_MIDI_OUT_Service();
 6580              		.loc 1 1485 0 is_stmt 1
 6581 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 6582              	.L247:
1486:main.c        ****         }
1487:main.c        ****     }
1488:main.c        ****         
1489:main.c        **** }
 6583              		.loc 1 1489 0
 6584 00a6 00BF     		nop
 6585 00a8 80BD     		pop	{r7, pc}
 6586              	.L249:
 6587 00aa 00BF     		.align	2
 6588              	.L248:
 6589 00ac 00000000 		.word	USB_active
 6590 00b0 00000000 		.word	USB_midi_in_ep
 6591 00b4 00000000 		.word	USB_midiInPointer
 6592 00b8 00000000 		.word	USB_midiInBuffer
 6593 00bc 00000000 		.word	USB_midi_out_ep
 6594 00c0 00000000 		.word	USB_midiOutBuffer
 6595              		.cfi_endproc
 6596              	.LFE81:
 6597              		.size	USB_service, .-USB_service
 6598              		.section	.text.log2f_approx,"ax",%progbits
 6599              		.align	2
 6600              		.global	log2f_approx
 6601              		.thumb
 6602              		.thumb_func
 6603              		.type	log2f_approx, %function
 6604              	log2f_approx:
 6605              	.LFB82:
1490:main.c        **** 
1491:main.c        **** // This is a fast approximation to log2()
1492:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1493:main.c        **** float log2f_approx(float X) {
 6606              		.loc 1 1493 0
 6607              		.cfi_startproc
 6608              		@ args = 0, pretend = 0, frame = 24
 6609              		@ frame_needed = 1, uses_anonymous_args = 0
 6610 0000 80B5     		push	{r7, lr}
 6611              		.cfi_def_cfa_offset 8
 6612              		.cfi_offset 7, -8
 6613              		.cfi_offset 14, -4
 6614 0002 86B0     		sub	sp, sp, #24
 6615              		.cfi_def_cfa_offset 32
 6616 0004 00AF     		add	r7, sp, #0
 6617              		.cfi_def_cfa_register 7
 6618 0006 7860     		str	r0, [r7, #4]	@ float
1494:main.c        ****   float Y, F;
1495:main.c        ****   int E;
1496:main.c        ****   F = frexpf(fabsf(X), &E);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 145


 6619              		.loc 1 1496 0
 6620 0008 7B68     		ldr	r3, [r7, #4]
 6621 000a 23F00043 		bic	r3, r3, #-2147483648
 6622 000e 07F10C02 		add	r2, r7, #12
 6623 0012 1146     		mov	r1, r2
 6624 0014 1846     		mov	r0, r3
 6625 0016 FFF7FEFF 		bl	frexpf
 6626 001a 7861     		str	r0, [r7, #20]	@ float
1497:main.c        ****   Y = 1.23149591368684f;
 6627              		.loc 1 1497 0
 6628 001c 1A4B     		ldr	r3, .L252
 6629 001e 3B61     		str	r3, [r7, #16]	@ float
1498:main.c        ****   Y *= F;
 6630              		.loc 1 1498 0
 6631 0020 7969     		ldr	r1, [r7, #20]	@ float
 6632 0022 3869     		ldr	r0, [r7, #16]	@ float
 6633 0024 FFF7FEFF 		bl	__aeabi_fmul
 6634 0028 0346     		mov	r3, r0
 6635 002a 3B61     		str	r3, [r7, #16]	@ float
1499:main.c        ****   Y += -4.11852516267426f;
 6636              		.loc 1 1499 0
 6637 002c 1749     		ldr	r1, .L252+4
 6638 002e 3869     		ldr	r0, [r7, #16]	@ float
 6639 0030 FFF7FEFF 		bl	__aeabi_fsub
 6640 0034 0346     		mov	r3, r0
 6641 0036 3B61     		str	r3, [r7, #16]	@ float
1500:main.c        ****   Y *= F;
 6642              		.loc 1 1500 0
 6643 0038 7969     		ldr	r1, [r7, #20]	@ float
 6644 003a 3869     		ldr	r0, [r7, #16]	@ float
 6645 003c FFF7FEFF 		bl	__aeabi_fmul
 6646 0040 0346     		mov	r3, r0
 6647 0042 3B61     		str	r3, [r7, #16]	@ float
1501:main.c        ****   Y += 6.02197014179219f;
 6648              		.loc 1 1501 0
 6649 0044 1249     		ldr	r1, .L252+8
 6650 0046 3869     		ldr	r0, [r7, #16]	@ float
 6651 0048 FFF7FEFF 		bl	__aeabi_fadd
 6652 004c 0346     		mov	r3, r0
 6653 004e 3B61     		str	r3, [r7, #16]	@ float
1502:main.c        ****   Y *= F;
 6654              		.loc 1 1502 0
 6655 0050 7969     		ldr	r1, [r7, #20]	@ float
 6656 0052 3869     		ldr	r0, [r7, #16]	@ float
 6657 0054 FFF7FEFF 		bl	__aeabi_fmul
 6658 0058 0346     		mov	r3, r0
 6659 005a 3B61     		str	r3, [r7, #16]	@ float
1503:main.c        ****   Y += -3.13396450166353f;
 6660              		.loc 1 1503 0
 6661 005c 0D49     		ldr	r1, .L252+12
 6662 005e 3869     		ldr	r0, [r7, #16]	@ float
 6663 0060 FFF7FEFF 		bl	__aeabi_fsub
 6664 0064 0346     		mov	r3, r0
 6665 0066 3B61     		str	r3, [r7, #16]	@ float
1504:main.c        ****   Y += E;
 6666              		.loc 1 1504 0
 6667 0068 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 146


 6668 006a 1846     		mov	r0, r3
 6669 006c FFF7FEFF 		bl	__aeabi_i2f
 6670 0070 0346     		mov	r3, r0
 6671 0072 1946     		mov	r1, r3
 6672 0074 3869     		ldr	r0, [r7, #16]	@ float
 6673 0076 FFF7FEFF 		bl	__aeabi_fadd
 6674 007a 0346     		mov	r3, r0
 6675 007c 3B61     		str	r3, [r7, #16]	@ float
1505:main.c        ****   return(Y);
 6676              		.loc 1 1505 0
 6677 007e 3B69     		ldr	r3, [r7, #16]	@ float
1506:main.c        **** }
 6678              		.loc 1 1506 0
 6679 0080 1846     		mov	r0, r3
 6680 0082 1837     		adds	r7, r7, #24
 6681              		.cfi_def_cfa_offset 8
 6682 0084 BD46     		mov	sp, r7
 6683              		.cfi_def_cfa_register 13
 6684              		@ sp needed
 6685 0086 80BD     		pop	{r7, pc}
 6686              	.L253:
 6687              		.align	2
 6688              	.L252:
 6689 0088 A8A19D3F 		.word	1067295144
 6690 008c F5CA8340 		.word	1082378997
 6691 0090 FBB3C040 		.word	1086370811
 6692 0094 E0924840 		.word	1078498016
 6693              		.cfi_endproc
 6694              	.LFE82:
 6695              		.size	log2f_approx, .-log2f_approx
 6696              		.global	prevNotes
 6697              		.bss
 6698              		.align	2
 6699              		.type	prevNotes, %object
 6700              		.size	prevNotes, 48
 6701              	prevNotes:
 6702 00cc 00000000 		.space	48
 6702      00000000 
 6702      00000000 
 6702      00000000 
 6702      00000000 
 6703              		.section	.text.noteEvent,"ax",%progbits
 6704              		.align	2
 6705              		.global	noteEvent
 6706              		.thumb
 6707              		.thumb_func
 6708              		.type	noteEvent, %function
 6709              	noteEvent:
 6710              	.LFB83:
1507:main.c        **** 
1508:main.c        **** 
1509:main.c        **** 
1510:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1511:main.c        **** 
1512:main.c        **** void noteEvent(int string)
1513:main.c        **** {
 6711              		.loc 1 1513 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 147


 6712              		.cfi_startproc
 6713              		@ args = 0, pretend = 0, frame = 24
 6714              		@ frame_needed = 1, uses_anonymous_args = 0
 6715 0000 80B5     		push	{r7, lr}
 6716              		.cfi_def_cfa_offset 8
 6717              		.cfi_offset 7, -8
 6718              		.cfi_offset 14, -4
 6719 0002 86B0     		sub	sp, sp, #24
 6720              		.cfi_def_cfa_offset 32
 6721 0004 00AF     		add	r7, sp, #0
 6722              		.cfi_def_cfa_register 7
 6723 0006 7860     		str	r0, [r7, #4]
1514:main.c        ****     
1515:main.c        ****     /*
1516:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1517:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1518:main.c        ****     int vInt  = (int) (v*4.0f);
1519:main.c        ****     if (vInt > 127)
1520:main.c        ****     {
1521:main.c        ****         vInt = 127;
1522:main.c        ****     }
1523:main.c        ****     */
1524:main.c        ****     uint16_t velocity = strings[string];
 6724              		.loc 1 1524 0
 6725 0008 2C4A     		ldr	r2, .L259
 6726 000a 7B68     		ldr	r3, [r7, #4]
 6727 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 6728 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1525:main.c        ****     if (velocity > 0)
 6729              		.loc 1 1525 0
 6730 0012 FB8A     		ldrh	r3, [r7, #22]
 6731 0014 002B     		cmp	r3, #0
 6732 0016 43D0     		beq	.L255
 6733              	.LBB42:
1526:main.c        ****     {
1527:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1528:main.c        ****         float tempVel = (float)velocity;
 6734              		.loc 1 1528 0
 6735 0018 FB8A     		ldrh	r3, [r7, #22]
 6736 001a 1846     		mov	r0, r3
 6737 001c FFF7FEFF 		bl	__aeabi_ui2f
 6738 0020 0346     		mov	r3, r0
 6739 0022 3B61     		str	r3, [r7, #16]	@ float
1529:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 6740              		.loc 1 1529 0
 6741 0024 4FF05E51 		mov	r1, #931135488
 6742 0028 3869     		ldr	r0, [r7, #16]	@ float
 6743 002a FFF7FEFF 		bl	__aeabi_fmul
 6744 002e 0346     		mov	r3, r0
 6745 0030 3B61     		str	r3, [r7, #16]	@ float
1530:main.c        ****         tempVel = sqrtf(tempVel);
 6746              		.loc 1 1530 0
 6747 0032 3869     		ldr	r0, [r7, #16]	@ float
 6748 0034 FFF7FEFF 		bl	sqrtf
 6749 0038 3861     		str	r0, [r7, #16]	@ float
1531:main.c        ****         tempVel = tempVel - 0.0239372430f;
 6750              		.loc 1 1531 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 148


 6751 003a 2149     		ldr	r1, .L259+4
 6752 003c 3869     		ldr	r0, [r7, #16]	@ float
 6753 003e FFF7FEFF 		bl	__aeabi_fsub
 6754 0042 0346     		mov	r3, r0
 6755 0044 3B61     		str	r3, [r7, #16]	@ float
1532:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 6756              		.loc 1 1532 0
 6757 0046 1F49     		ldr	r1, .L259+8
 6758 0048 3869     		ldr	r0, [r7, #16]	@ float
 6759 004a FFF7FEFF 		bl	__aeabi_fmul
 6760 004e 0346     		mov	r3, r0
 6761 0050 3B61     		str	r3, [r7, #16]	@ float
1533:main.c        ****         velocity = (int)tempVel;
 6762              		.loc 1 1533 0
 6763 0052 3869     		ldr	r0, [r7, #16]	@ float
 6764 0054 FFF7FEFF 		bl	__aeabi_f2iz
 6765 0058 0346     		mov	r3, r0
 6766 005a FB82     		strh	r3, [r7, #22]	@ movhi
1534:main.c        ****         
1535:main.c        **** 
1536:main.c        ****         if (velocity > 127)
 6767              		.loc 1 1536 0
 6768 005c FB8A     		ldrh	r3, [r7, #22]
 6769 005e 7F2B     		cmp	r3, #127
 6770 0060 01D9     		bls	.L256
1537:main.c        ****         {
1538:main.c        ****             velocity = 127;
 6771              		.loc 1 1538 0
 6772 0062 7F23     		movs	r3, #127
 6773 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 6774              	.L256:
1539:main.c        ****         }
1540:main.c        ****         
1541:main.c        ****         //only update octave on note-ons
1542:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1543:main.c        ****         int noteToSend = ((octave - 5) * 12) + openStringMIDI_Int[string];
 6775              		.loc 1 1543 0
 6776 0066 184B     		ldr	r3, .L259+12
 6777 0068 1B68     		ldr	r3, [r3]
 6778 006a 5A1F     		subs	r2, r3, #5
 6779 006c 1346     		mov	r3, r2
 6780 006e 5B00     		lsls	r3, r3, #1
 6781 0070 1344     		add	r3, r3, r2
 6782 0072 9B00     		lsls	r3, r3, #2
 6783 0074 1946     		mov	r1, r3
 6784 0076 154A     		ldr	r2, .L259+16
 6785 0078 7B68     		ldr	r3, [r7, #4]
 6786 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6787 007e 0B44     		add	r3, r3, r1
 6788 0080 FB60     		str	r3, [r7, #12]
1544:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 6789              		.loc 1 1544 0
 6790 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6791 0084 DBB2     		uxtb	r3, r3
 6792 0086 1946     		mov	r1, r3
 6793 0088 7B68     		ldr	r3, [r7, #4]
 6794 008a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 149


 6795 008c 1A46     		mov	r2, r3
 6796 008e F868     		ldr	r0, [r7, #12]
 6797 0090 FFF7FEFF 		bl	sendMIDINoteOn
1545:main.c        ****         prevNotes[string] = noteToSend;
 6798              		.loc 1 1545 0
 6799 0094 0E49     		ldr	r1, .L259+20
 6800 0096 7B68     		ldr	r3, [r7, #4]
 6801 0098 FA68     		ldr	r2, [r7, #12]
 6802 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 6803              	.LBE42:
1546:main.c        ****             
1547:main.c        ****     }
1548:main.c        ****     else
1549:main.c        ****     {
1550:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1551:main.c        ****     }
1552:main.c        **** 
1553:main.c        **** }
 6804              		.loc 1 1553 0
 6805 009e 09E0     		b	.L258
 6806              	.L255:
1550:main.c        ****     }
 6807              		.loc 1 1550 0
 6808 00a0 0B4A     		ldr	r2, .L259+20
 6809 00a2 7B68     		ldr	r3, [r7, #4]
 6810 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 6811 00a8 7B68     		ldr	r3, [r7, #4]
 6812 00aa 0133     		adds	r3, r3, #1
 6813 00ac 1A46     		mov	r2, r3
 6814 00ae 0021     		movs	r1, #0
 6815 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 6816              	.L258:
 6817              		.loc 1 1553 0
 6818 00b4 00BF     		nop
 6819 00b6 1837     		adds	r7, r7, #24
 6820              		.cfi_def_cfa_offset 8
 6821 00b8 BD46     		mov	sp, r7
 6822              		.cfi_def_cfa_register 13
 6823              		@ sp needed
 6824 00ba 80BD     		pop	{r7, pc}
 6825              	.L260:
 6826              		.align	2
 6827              	.L259:
 6828 00bc 00000000 		.word	strings
 6829 00c0 0918C43C 		.word	1019484169
 6830 00c4 551D0243 		.word	1124212053
 6831 00c8 00000000 		.word	octave
 6832 00cc 00000000 		.word	openStringMIDI_Int
 6833 00d0 00000000 		.word	prevNotes
 6834              		.cfi_endproc
 6835              	.LFE83:
 6836              		.size	noteEvent, .-noteEvent
 6837              		.section	.text.CCEvent,"ax",%progbits
 6838              		.align	2
 6839              		.global	CCEvent
 6840              		.thumb
 6841              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 150


 6842              		.type	CCEvent, %function
 6843              	CCEvent:
 6844              	.LFB84:
1554:main.c        **** 
1555:main.c        **** void CCEvent(int cc, int val)
1556:main.c        **** {
 6845              		.loc 1 1556 0
 6846              		.cfi_startproc
 6847              		@ args = 0, pretend = 0, frame = 8
 6848              		@ frame_needed = 1, uses_anonymous_args = 0
 6849 0000 80B5     		push	{r7, lr}
 6850              		.cfi_def_cfa_offset 8
 6851              		.cfi_offset 7, -8
 6852              		.cfi_offset 14, -4
 6853 0002 82B0     		sub	sp, sp, #8
 6854              		.cfi_def_cfa_offset 16
 6855 0004 00AF     		add	r7, sp, #0
 6856              		.cfi_def_cfa_register 7
 6857 0006 7860     		str	r0, [r7, #4]
 6858 0008 3960     		str	r1, [r7]
1557:main.c        ****     
1558:main.c        ****     sendMIDIControlChange(cc, val, 0);
 6859              		.loc 1 1558 0
 6860 000a 0022     		movs	r2, #0
 6861 000c 3968     		ldr	r1, [r7]
 6862 000e 7868     		ldr	r0, [r7, #4]
 6863 0010 FFF7FEFF 		bl	sendMIDIControlChange
1559:main.c        **** }
 6864              		.loc 1 1559 0
 6865 0014 00BF     		nop
 6866 0016 0837     		adds	r7, r7, #8
 6867              		.cfi_def_cfa_offset 8
 6868 0018 BD46     		mov	sp, r7
 6869              		.cfi_def_cfa_register 13
 6870              		@ sp needed
 6871 001a 80BD     		pop	{r7, pc}
 6872              		.cfi_endproc
 6873              	.LFE84:
 6874              		.size	CCEvent, .-CCEvent
 6875              		.section	.text.sendMIDINoteOn,"ax",%progbits
 6876              		.align	2
 6877              		.global	sendMIDINoteOn
 6878              		.thumb
 6879              		.thumb_func
 6880              		.type	sendMIDINoteOn, %function
 6881              	sendMIDINoteOn:
 6882              	.LFB85:
1560:main.c        **** 
1561:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1562:main.c        **** {  
 6883              		.loc 1 1562 0
 6884              		.cfi_startproc
 6885              		@ args = 0, pretend = 0, frame = 16
 6886              		@ frame_needed = 1, uses_anonymous_args = 0
 6887 0000 80B5     		push	{r7, lr}
 6888              		.cfi_def_cfa_offset 8
 6889              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 151


 6890              		.cfi_offset 14, -4
 6891 0002 84B0     		sub	sp, sp, #16
 6892              		.cfi_def_cfa_offset 24
 6893 0004 00AF     		add	r7, sp, #0
 6894              		.cfi_def_cfa_register 7
 6895 0006 F860     		str	r0, [r7, #12]
 6896 0008 B960     		str	r1, [r7, #8]
 6897 000a 7A60     		str	r2, [r7, #4]
1563:main.c        ****    
1564:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 6898              		.loc 1 1564 0
 6899 000c 7B68     		ldr	r3, [r7, #4]
 6900 000e DBB2     		uxtb	r3, r3
 6901 0010 703B     		subs	r3, r3, #112
 6902 0012 DAB2     		uxtb	r2, r3
 6903 0014 114B     		ldr	r3, .L264
 6904 0016 1A70     		strb	r2, [r3]
1565:main.c        ****     midiMsg[1] = MIDInoteNum;
 6905              		.loc 1 1565 0
 6906 0018 FB68     		ldr	r3, [r7, #12]
 6907 001a DAB2     		uxtb	r2, r3
 6908 001c 0F4B     		ldr	r3, .L264
 6909 001e 5A70     		strb	r2, [r3, #1]
1566:main.c        ****     midiMsg[2] = velocity;	
 6910              		.loc 1 1566 0
 6911 0020 BB68     		ldr	r3, [r7, #8]
 6912 0022 DAB2     		uxtb	r2, r3
 6913 0024 0D4B     		ldr	r3, .L264
 6914 0026 9A70     		strb	r2, [r3, #2]
1567:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6915              		.loc 1 1567 0
 6916 0028 0D4B     		ldr	r3, .L264+4
 6917 002a 1B78     		ldrb	r3, [r3]
 6918 002c DBB2     		uxtb	r3, r3
 6919 002e 002B     		cmp	r3, #0
 6920 0030 09D0     		beq	.L263
 6921              		.loc 1 1567 0 is_stmt 0 discriminator 1
 6922 0032 FFF7FEFF 		bl	USB_VBusPresent
 6923 0036 0346     		mov	r3, r0
 6924 0038 002B     		cmp	r3, #0
 6925 003a 04D0     		beq	.L263
1568:main.c        ****     {
1569:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6926              		.loc 1 1569 0 is_stmt 1
 6927 003c 0022     		movs	r2, #0
 6928 003e 0749     		ldr	r1, .L264
 6929 0040 0320     		movs	r0, #3
 6930 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6931              	.L263:
1570:main.c        ****     } 
1571:main.c        ****     midiSent += 4;
 6932              		.loc 1 1571 0
 6933 0046 074B     		ldr	r3, .L264+8
 6934 0048 1B88     		ldrh	r3, [r3]
 6935 004a 0433     		adds	r3, r3, #4
 6936 004c 9AB2     		uxth	r2, r3
 6937 004e 054B     		ldr	r3, .L264+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 152


 6938 0050 1A80     		strh	r2, [r3]	@ movhi
1572:main.c        **** }
 6939              		.loc 1 1572 0
 6940 0052 00BF     		nop
 6941 0054 1037     		adds	r7, r7, #16
 6942              		.cfi_def_cfa_offset 8
 6943 0056 BD46     		mov	sp, r7
 6944              		.cfi_def_cfa_register 13
 6945              		@ sp needed
 6946 0058 80BD     		pop	{r7, pc}
 6947              	.L265:
 6948 005a 00BF     		.align	2
 6949              	.L264:
 6950 005c 00000000 		.word	midiMsg
 6951 0060 00000000 		.word	USB_active
 6952 0064 00000000 		.word	midiSent
 6953              		.cfi_endproc
 6954              	.LFE85:
 6955              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 6956              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 6957              		.align	2
 6958              		.global	sendMIDIPolyKeyPressure
 6959              		.thumb
 6960              		.thumb_func
 6961              		.type	sendMIDIPolyKeyPressure, %function
 6962              	sendMIDIPolyKeyPressure:
 6963              	.LFB86:
1573:main.c        **** 
1574:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1575:main.c        **** {
 6964              		.loc 1 1575 0
 6965              		.cfi_startproc
 6966              		@ args = 0, pretend = 0, frame = 16
 6967              		@ frame_needed = 1, uses_anonymous_args = 0
 6968 0000 80B5     		push	{r7, lr}
 6969              		.cfi_def_cfa_offset 8
 6970              		.cfi_offset 7, -8
 6971              		.cfi_offset 14, -4
 6972 0002 84B0     		sub	sp, sp, #16
 6973              		.cfi_def_cfa_offset 24
 6974 0004 00AF     		add	r7, sp, #0
 6975              		.cfi_def_cfa_register 7
 6976 0006 F860     		str	r0, [r7, #12]
 6977 0008 B960     		str	r1, [r7, #8]
 6978 000a 7A60     		str	r2, [r7, #4]
1576:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 6979              		.loc 1 1576 0
 6980 000c 7B68     		ldr	r3, [r7, #4]
 6981 000e DBB2     		uxtb	r3, r3
 6982 0010 603B     		subs	r3, r3, #96
 6983 0012 DAB2     		uxtb	r2, r3
 6984 0014 114B     		ldr	r3, .L268
 6985 0016 1A70     		strb	r2, [r3]
1577:main.c        ****     midiMsg[1] = MIDInoteNum;
 6986              		.loc 1 1577 0
 6987 0018 FB68     		ldr	r3, [r7, #12]
 6988 001a DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 153


 6989 001c 0F4B     		ldr	r3, .L268
 6990 001e 5A70     		strb	r2, [r3, #1]
1578:main.c        ****     midiMsg[2] = pressure;		
 6991              		.loc 1 1578 0
 6992 0020 BB68     		ldr	r3, [r7, #8]
 6993 0022 DAB2     		uxtb	r2, r3
 6994 0024 0D4B     		ldr	r3, .L268
 6995 0026 9A70     		strb	r2, [r3, #2]
1579:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6996              		.loc 1 1579 0
 6997 0028 0D4B     		ldr	r3, .L268+4
 6998 002a 1B78     		ldrb	r3, [r3]
 6999 002c DBB2     		uxtb	r3, r3
 7000 002e 002B     		cmp	r3, #0
 7001 0030 09D0     		beq	.L267
 7002              		.loc 1 1579 0 is_stmt 0 discriminator 1
 7003 0032 FFF7FEFF 		bl	USB_VBusPresent
 7004 0036 0346     		mov	r3, r0
 7005 0038 002B     		cmp	r3, #0
 7006 003a 04D0     		beq	.L267
1580:main.c        ****     {
1581:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7007              		.loc 1 1581 0 is_stmt 1
 7008 003c 0022     		movs	r2, #0
 7009 003e 0749     		ldr	r1, .L268
 7010 0040 0320     		movs	r0, #3
 7011 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7012              	.L267:
1582:main.c        ****     } 
1583:main.c        ****     midiSent += 4;
 7013              		.loc 1 1583 0
 7014 0046 074B     		ldr	r3, .L268+8
 7015 0048 1B88     		ldrh	r3, [r3]
 7016 004a 0433     		adds	r3, r3, #4
 7017 004c 9AB2     		uxth	r2, r3
 7018 004e 054B     		ldr	r3, .L268+8
 7019 0050 1A80     		strh	r2, [r3]	@ movhi
1584:main.c        **** }
 7020              		.loc 1 1584 0
 7021 0052 00BF     		nop
 7022 0054 1037     		adds	r7, r7, #16
 7023              		.cfi_def_cfa_offset 8
 7024 0056 BD46     		mov	sp, r7
 7025              		.cfi_def_cfa_register 13
 7026              		@ sp needed
 7027 0058 80BD     		pop	{r7, pc}
 7028              	.L269:
 7029 005a 00BF     		.align	2
 7030              	.L268:
 7031 005c 00000000 		.word	midiMsg
 7032 0060 00000000 		.word	USB_active
 7033 0064 00000000 		.word	midiSent
 7034              		.cfi_endproc
 7035              	.LFE86:
 7036              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 7037              		.section	.text.sendMIDIControlChange,"ax",%progbits
 7038              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 154


 7039              		.global	sendMIDIControlChange
 7040              		.thumb
 7041              		.thumb_func
 7042              		.type	sendMIDIControlChange, %function
 7043              	sendMIDIControlChange:
 7044              	.LFB87:
1585:main.c        **** 
1586:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1587:main.c        **** {
 7045              		.loc 1 1587 0
 7046              		.cfi_startproc
 7047              		@ args = 0, pretend = 0, frame = 16
 7048              		@ frame_needed = 1, uses_anonymous_args = 0
 7049 0000 80B5     		push	{r7, lr}
 7050              		.cfi_def_cfa_offset 8
 7051              		.cfi_offset 7, -8
 7052              		.cfi_offset 14, -4
 7053 0002 84B0     		sub	sp, sp, #16
 7054              		.cfi_def_cfa_offset 24
 7055 0004 00AF     		add	r7, sp, #0
 7056              		.cfi_def_cfa_register 7
 7057 0006 F860     		str	r0, [r7, #12]
 7058 0008 B960     		str	r1, [r7, #8]
 7059 000a 7A60     		str	r2, [r7, #4]
1588:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 7060              		.loc 1 1588 0
 7061 000c 7B68     		ldr	r3, [r7, #4]
 7062 000e DBB2     		uxtb	r3, r3
 7063 0010 503B     		subs	r3, r3, #80
 7064 0012 DAB2     		uxtb	r2, r3
 7065 0014 114B     		ldr	r3, .L272
 7066 0016 1A70     		strb	r2, [r3]
1589:main.c        ****     midiMsg[1] = CCnum;
 7067              		.loc 1 1589 0
 7068 0018 FB68     		ldr	r3, [r7, #12]
 7069 001a DAB2     		uxtb	r2, r3
 7070 001c 0F4B     		ldr	r3, .L272
 7071 001e 5A70     		strb	r2, [r3, #1]
1590:main.c        ****     midiMsg[2] = CCval;			
 7072              		.loc 1 1590 0
 7073 0020 BB68     		ldr	r3, [r7, #8]
 7074 0022 DAB2     		uxtb	r2, r3
 7075 0024 0D4B     		ldr	r3, .L272
 7076 0026 9A70     		strb	r2, [r3, #2]
1591:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7077              		.loc 1 1591 0
 7078 0028 0D4B     		ldr	r3, .L272+4
 7079 002a 1B78     		ldrb	r3, [r3]
 7080 002c DBB2     		uxtb	r3, r3
 7081 002e 002B     		cmp	r3, #0
 7082 0030 09D0     		beq	.L271
 7083              		.loc 1 1591 0 is_stmt 0 discriminator 1
 7084 0032 FFF7FEFF 		bl	USB_VBusPresent
 7085 0036 0346     		mov	r3, r0
 7086 0038 002B     		cmp	r3, #0
 7087 003a 04D0     		beq	.L271
1592:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 155


1593:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7088              		.loc 1 1593 0 is_stmt 1
 7089 003c 0022     		movs	r2, #0
 7090 003e 0749     		ldr	r1, .L272
 7091 0040 0320     		movs	r0, #3
 7092 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7093              	.L271:
1594:main.c        ****     } 
1595:main.c        ****     midiSent += 4;
 7094              		.loc 1 1595 0
 7095 0046 074B     		ldr	r3, .L272+8
 7096 0048 1B88     		ldrh	r3, [r3]
 7097 004a 0433     		adds	r3, r3, #4
 7098 004c 9AB2     		uxth	r2, r3
 7099 004e 054B     		ldr	r3, .L272+8
 7100 0050 1A80     		strh	r2, [r3]	@ movhi
1596:main.c        **** }
 7101              		.loc 1 1596 0
 7102 0052 00BF     		nop
 7103 0054 1037     		adds	r7, r7, #16
 7104              		.cfi_def_cfa_offset 8
 7105 0056 BD46     		mov	sp, r7
 7106              		.cfi_def_cfa_register 13
 7107              		@ sp needed
 7108 0058 80BD     		pop	{r7, pc}
 7109              	.L273:
 7110 005a 00BF     		.align	2
 7111              	.L272:
 7112 005c 00000000 		.word	midiMsg
 7113 0060 00000000 		.word	USB_active
 7114 0064 00000000 		.word	midiSent
 7115              		.cfi_endproc
 7116              	.LFE87:
 7117              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 7118              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 7119              		.align	2
 7120              		.global	sendMIDIPitchBend
 7121              		.thumb
 7122              		.thumb_func
 7123              		.type	sendMIDIPitchBend, %function
 7124              	sendMIDIPitchBend:
 7125              	.LFB88:
1597:main.c        **** 
1598:main.c        **** void sendMIDIPitchBend(int val, int channel)
1599:main.c        **** {
 7126              		.loc 1 1599 0
 7127              		.cfi_startproc
 7128              		@ args = 0, pretend = 0, frame = 8
 7129              		@ frame_needed = 1, uses_anonymous_args = 0
 7130 0000 80B5     		push	{r7, lr}
 7131              		.cfi_def_cfa_offset 8
 7132              		.cfi_offset 7, -8
 7133              		.cfi_offset 14, -4
 7134 0002 82B0     		sub	sp, sp, #8
 7135              		.cfi_def_cfa_offset 16
 7136 0004 00AF     		add	r7, sp, #0
 7137              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 156


 7138 0006 7860     		str	r0, [r7, #4]
 7139 0008 3960     		str	r1, [r7]
1600:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 7140              		.loc 1 1600 0
 7141 000a 3B68     		ldr	r3, [r7]
 7142 000c DBB2     		uxtb	r3, r3
 7143 000e 203B     		subs	r3, r3, #32
 7144 0010 DAB2     		uxtb	r2, r3
 7145 0012 134B     		ldr	r3, .L276
 7146 0014 1A70     		strb	r2, [r3]
1601:main.c        ****     midiMsg[1] = (val & 127); //LSB
 7147              		.loc 1 1601 0
 7148 0016 7B68     		ldr	r3, [r7, #4]
 7149 0018 DBB2     		uxtb	r3, r3
 7150 001a 03F07F03 		and	r3, r3, #127
 7151 001e DAB2     		uxtb	r2, r3
 7152 0020 0F4B     		ldr	r3, .L276
 7153 0022 5A70     		strb	r2, [r3, #1]
1602:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 7154              		.loc 1 1602 0
 7155 0024 7B68     		ldr	r3, [r7, #4]
 7156 0026 DB11     		asrs	r3, r3, #7
 7157 0028 DAB2     		uxtb	r2, r3
 7158 002a 0D4B     		ldr	r3, .L276
 7159 002c 9A70     		strb	r2, [r3, #2]
1603:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7160              		.loc 1 1603 0
 7161 002e 0D4B     		ldr	r3, .L276+4
 7162 0030 1B78     		ldrb	r3, [r3]
 7163 0032 DBB2     		uxtb	r3, r3
 7164 0034 002B     		cmp	r3, #0
 7165 0036 09D0     		beq	.L275
 7166              		.loc 1 1603 0 is_stmt 0 discriminator 1
 7167 0038 FFF7FEFF 		bl	USB_VBusPresent
 7168 003c 0346     		mov	r3, r0
 7169 003e 002B     		cmp	r3, #0
 7170 0040 04D0     		beq	.L275
1604:main.c        ****     {
1605:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7171              		.loc 1 1605 0 is_stmt 1
 7172 0042 0022     		movs	r2, #0
 7173 0044 0649     		ldr	r1, .L276
 7174 0046 0320     		movs	r0, #3
 7175 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7176              	.L275:
1606:main.c        ****     } 
1607:main.c        ****     midiSent += 4;
 7177              		.loc 1 1607 0
 7178 004c 064B     		ldr	r3, .L276+8
 7179 004e 1B88     		ldrh	r3, [r3]
 7180 0050 0433     		adds	r3, r3, #4
 7181 0052 9AB2     		uxth	r2, r3
 7182 0054 044B     		ldr	r3, .L276+8
 7183 0056 1A80     		strh	r2, [r3]	@ movhi
1608:main.c        **** }
 7184              		.loc 1 1608 0
 7185 0058 00BF     		nop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 157


 7186 005a 0837     		adds	r7, r7, #8
 7187              		.cfi_def_cfa_offset 8
 7188 005c BD46     		mov	sp, r7
 7189              		.cfi_def_cfa_register 13
 7190              		@ sp needed
 7191 005e 80BD     		pop	{r7, pc}
 7192              	.L277:
 7193              		.align	2
 7194              	.L276:
 7195 0060 00000000 		.word	midiMsg
 7196 0064 00000000 		.word	USB_active
 7197 0068 00000000 		.word	midiSent
 7198              		.cfi_endproc
 7199              	.LFE88:
 7200              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 7201              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 7202              		.align	2
 7203              		.global	sendMIDIAllNotesOff
 7204              		.thumb
 7205              		.thumb_func
 7206              		.type	sendMIDIAllNotesOff, %function
 7207              	sendMIDIAllNotesOff:
 7208              	.LFB89:
1609:main.c        **** 
1610:main.c        **** void sendMIDIAllNotesOff(void)
1611:main.c        **** {   
 7209              		.loc 1 1611 0
 7210              		.cfi_startproc
 7211              		@ args = 0, pretend = 0, frame = 8
 7212              		@ frame_needed = 1, uses_anonymous_args = 0
 7213 0000 80B5     		push	{r7, lr}
 7214              		.cfi_def_cfa_offset 8
 7215              		.cfi_offset 7, -8
 7216              		.cfi_offset 14, -4
 7217 0002 82B0     		sub	sp, sp, #8
 7218              		.cfi_def_cfa_offset 16
 7219 0004 00AF     		add	r7, sp, #0
 7220              		.cfi_def_cfa_register 7
 7221              	.LBB43:
1612:main.c        ****     for (uint8_t i = 0; i < 128; i++)
 7222              		.loc 1 1612 0
 7223 0006 0023     		movs	r3, #0
 7224 0008 FB71     		strb	r3, [r7, #7]
 7225 000a 1AE0     		b	.L279
 7226              	.L281:
1613:main.c        ****     {
1614:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 7227              		.loc 1 1614 0
 7228 000c 114B     		ldr	r3, .L282
 7229 000e 9022     		movs	r2, #144
 7230 0010 1A70     		strb	r2, [r3]
1615:main.c        ****         midiMsg[1] = i;
 7231              		.loc 1 1615 0
 7232 0012 104A     		ldr	r2, .L282
 7233 0014 FB79     		ldrb	r3, [r7, #7]
 7234 0016 5370     		strb	r3, [r2, #1]
1616:main.c        ****         midiMsg[2] = 0;	
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 158


 7235              		.loc 1 1616 0
 7236 0018 0E4B     		ldr	r3, .L282
 7237 001a 0022     		movs	r2, #0
 7238 001c 9A70     		strb	r2, [r3, #2]
1617:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7239              		.loc 1 1617 0
 7240 001e 0E4B     		ldr	r3, .L282+4
 7241 0020 1B78     		ldrb	r3, [r3]
 7242 0022 DBB2     		uxtb	r3, r3
 7243 0024 002B     		cmp	r3, #0
 7244 0026 09D0     		beq	.L280
 7245              		.loc 1 1617 0 is_stmt 0 discriminator 1
 7246 0028 FFF7FEFF 		bl	USB_VBusPresent
 7247 002c 0346     		mov	r3, r0
 7248 002e 002B     		cmp	r3, #0
 7249 0030 04D0     		beq	.L280
1618:main.c        ****         {       
1619:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7250              		.loc 1 1619 0 is_stmt 1
 7251 0032 0022     		movs	r2, #0
 7252 0034 0749     		ldr	r1, .L282
 7253 0036 0320     		movs	r0, #3
 7254 0038 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7255              	.L280:
1612:main.c        ****     {
 7256              		.loc 1 1612 0 discriminator 2
 7257 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7258 003e 0133     		adds	r3, r3, #1
 7259 0040 FB71     		strb	r3, [r7, #7]
 7260              	.L279:
1612:main.c        ****     {
 7261              		.loc 1 1612 0 is_stmt 0 discriminator 1
 7262 0042 97F90730 		ldrsb	r3, [r7, #7]
 7263 0046 002B     		cmp	r3, #0
 7264 0048 E0DA     		bge	.L281
 7265              	.LBE43:
1620:main.c        ****         }
1621:main.c        ****     }
1622:main.c        **** }
 7266              		.loc 1 1622 0 is_stmt 1
 7267 004a 00BF     		nop
 7268 004c 0837     		adds	r7, r7, #8
 7269              		.cfi_def_cfa_offset 8
 7270 004e BD46     		mov	sp, r7
 7271              		.cfi_def_cfa_register 13
 7272              		@ sp needed
 7273 0050 80BD     		pop	{r7, pc}
 7274              	.L283:
 7275 0052 00BF     		.align	2
 7276              	.L282:
 7277 0054 00000000 		.word	midiMsg
 7278 0058 00000000 		.word	USB_active
 7279              		.cfi_endproc
 7280              	.LFE89:
 7281              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 7282              		.global	checkStatus
 7283              		.bss
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 159


 7284              		.type	checkStatus, %object
 7285              		.size	checkStatus, 1
 7286              	checkStatus:
 7287 00fc 00       		.space	1
 7288              		.global	checkBase
 7289 00fd 00       		.align	1
 7290              		.type	checkBase, %object
 7291              		.size	checkBase, 2
 7292              	checkBase:
 7293 00fe 0000     		.space	2
 7294              		.global	SPI_errors
 7295              		.align	2
 7296              		.type	SPI_errors, %object
 7297              		.size	SPI_errors, 4
 7298              	SPI_errors:
 7299 0100 00000000 		.space	4
 7300              		.global	__aeabi_fcmplt
 7301              		.section	.text.parseSysex,"ax",%progbits
 7302              		.align	2
 7303              		.global	parseSysex
 7304              		.thumb
 7305              		.thumb_func
 7306              		.type	parseSysex, %function
 7307              	parseSysex:
 7308              	.LFB90:
1623:main.c        **** 
1624:main.c        **** 
1625:main.c        **** 
1626:main.c        **** 
1627:main.c        **** volatile uint8_t checkStatus = 0;
1628:main.c        **** volatile uint16_t checkBase = 0;
1629:main.c        **** 
1630:main.c        **** 
1631:main.c        **** 
1632:main.c        **** int SPI_errors = 0;
1633:main.c        **** 
1634:main.c        **** void parseSysex(void)
1635:main.c        **** {
 7309              		.loc 1 1635 0
 7310              		.cfi_startproc
 7311              		@ args = 0, pretend = 0, frame = 80
 7312              		@ frame_needed = 1, uses_anonymous_args = 0
 7313 0000 90B5     		push	{r4, r7, lr}
 7314              		.cfi_def_cfa_offset 12
 7315              		.cfi_offset 4, -12
 7316              		.cfi_offset 7, -8
 7317              		.cfi_offset 14, -4
 7318 0002 95B0     		sub	sp, sp, #84
 7319              		.cfi_def_cfa_offset 96
 7320 0004 00AF     		add	r7, sp, #0
 7321              		.cfi_def_cfa_register 7
1636:main.c        ****     parsingSysex = 1;
 7322              		.loc 1 1636 0
 7323 0006 8F4B     		ldr	r3, .L337
 7324 0008 0122     		movs	r2, #1
 7325 000a 1A70     		strb	r2, [r3]
1637:main.c        ****     //0 = it's a preset
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 160


1638:main.c        ****     if (sysexBuffer[0] == 0)
 7326              		.loc 1 1638 0
 7327 000c 8E4B     		ldr	r3, .L337+4
 7328 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7329 0010 002B     		cmp	r3, #0
 7330 0012 40F0E082 		bne	.L285
 7331              	.LBB44:
1639:main.c        ****     {
1640:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7332              		.loc 1 1640 0
 7333 0016 8D4B     		ldr	r3, .L337+8
 7334 0018 0122     		movs	r2, #1
 7335 001a 1A70     		strb	r2, [r3]
1641:main.c        ****         currentFloat = 0;
 7336              		.loc 1 1641 0
 7337 001c 8C4B     		ldr	r3, .L337+12
 7338 001e 0022     		movs	r2, #0
 7339 0020 1A60     		str	r2, [r3]
1642:main.c        ****         presetArraySection = presetName;
 7340              		.loc 1 1642 0
 7341 0022 8C4B     		ldr	r3, .L337+16
 7342 0024 0022     		movs	r2, #0
 7343 0026 1A70     		strb	r2, [r3]
1643:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 7344              		.loc 1 1643 0
 7345 0028 874B     		ldr	r3, .L337+4
 7346 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7347 002c 8A4B     		ldr	r3, .L337+20
 7348 002e 1A70     		strb	r2, [r3]
1644:main.c        ****         presetArray[0] = sysexBuffer[2];
 7349              		.loc 1 1644 0
 7350 0030 854B     		ldr	r3, .L337+4
 7351 0032 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 7352 0034 894B     		ldr	r3, .L337+24
 7353 0036 1A70     		strb	r2, [r3]
1645:main.c        ****         presetArray[1] = sysexBuffer[3];
 7354              		.loc 1 1645 0
 7355 0038 834B     		ldr	r3, .L337+4
 7356 003a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 7357 003c 874B     		ldr	r3, .L337+24
 7358 003e 5A70     		strb	r2, [r3, #1]
1646:main.c        ****         presetArray[2] = sysexBuffer[4];
 7359              		.loc 1 1646 0
 7360 0040 814B     		ldr	r3, .L337+4
 7361 0042 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 7362 0044 854B     		ldr	r3, .L337+24
 7363 0046 9A70     		strb	r2, [r3, #2]
1647:main.c        ****         presetArray[3] = sysexBuffer[5];
 7364              		.loc 1 1647 0
 7365 0048 7F4B     		ldr	r3, .L337+4
 7366 004a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 7367 004c 834B     		ldr	r3, .L337+24
 7368 004e DA70     		strb	r2, [r3, #3]
1648:main.c        ****         
1649:main.c        ****         union breakFloat theVal;
1650:main.c        ****         uint32_t i = 6;
 7369              		.loc 1 1650 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 161


 7370 0050 0623     		movs	r3, #6
 7371 0052 FB64     		str	r3, [r7, #76]
1651:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+6;
 7372              		.loc 1 1651 0
 7373 0054 1423     		movs	r3, #20
 7374 0056 87F83730 		strb	r3, [r7, #55]
1652:main.c        ****         for (; i < stoppingPoint; i++)
 7375              		.loc 1 1652 0
 7376 005a 22E0     		b	.L286
 7377              	.L287:
1653:main.c        ****         {
1654:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 7378              		.loc 1 1654 0 discriminator 2
 7379 005c FB6C     		ldr	r3, [r7, #76]
 7380 005e 023B     		subs	r3, r3, #2
 7381 0060 7949     		ldr	r1, .L337+4
 7382 0062 FA6C     		ldr	r2, [r7, #76]
 7383 0064 0A44     		add	r2, r2, r1
 7384 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7385 0068 02F07F02 		and	r2, r2, #127
 7386 006c D1B2     		uxtb	r1, r2
 7387 006e 7B4A     		ldr	r2, .L337+24
 7388 0070 D154     		strb	r1, [r2, r3]
1655:main.c        ****             presetNamesArray[presetNumberToWrite][i-6] = sysexBuffer[i] & 127;
 7389              		.loc 1 1655 0 discriminator 2
 7390 0072 794B     		ldr	r3, .L337+20
 7391 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7392 0076 1846     		mov	r0, r3
 7393 0078 FB6C     		ldr	r3, [r7, #76]
 7394 007a 9A1F     		subs	r2, r3, #6
 7395 007c 7249     		ldr	r1, .L337+4
 7396 007e FB6C     		ldr	r3, [r7, #76]
 7397 0080 0B44     		add	r3, r3, r1
 7398 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7399 0084 03F07F03 		and	r3, r3, #127
 7400 0088 DCB2     		uxtb	r4, r3
 7401 008a 7549     		ldr	r1, .L337+28
 7402 008c 0346     		mov	r3, r0
 7403 008e DB00     		lsls	r3, r3, #3
 7404 0090 1B1A     		subs	r3, r3, r0
 7405 0092 5B00     		lsls	r3, r3, #1
 7406 0094 0B44     		add	r3, r3, r1
 7407 0096 1344     		add	r3, r3, r2
 7408 0098 2246     		mov	r2, r4
 7409 009a 1A70     		strb	r2, [r3]
1652:main.c        ****         for (; i < stoppingPoint; i++)
 7410              		.loc 1 1652 0 discriminator 2
 7411 009c FB6C     		ldr	r3, [r7, #76]
 7412 009e 0133     		adds	r3, r3, #1
 7413 00a0 FB64     		str	r3, [r7, #76]
 7414              	.L286:
1652:main.c        ****         for (; i < stoppingPoint; i++)
 7415              		.loc 1 1652 0 is_stmt 0 discriminator 1
 7416 00a2 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 7417 00a6 FB6C     		ldr	r3, [r7, #76]
 7418 00a8 9A42     		cmp	r2, r3
 7419 00aa D7D8     		bhi	.L287
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 162


1656:main.c        ****         }
1657:main.c        ****         
1658:main.c        ****         presetArraySection = macroNames;
 7420              		.loc 1 1658 0 is_stmt 1
 7421 00ac 694B     		ldr	r3, .L337+16
 7422 00ae 0122     		movs	r2, #1
 7423 00b0 1A70     		strb	r2, [r3]
 7424              	.LBB45:
1659:main.c        **** 
1660:main.c        ****         
1661:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 7425              		.loc 1 1661 0
 7426 00b2 0023     		movs	r3, #0
 7427 00b4 BB64     		str	r3, [r7, #72]
 7428 00b6 34E0     		b	.L288
 7429              	.L291:
 7430              	.LBB46:
1662:main.c        ****         {
1663:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 7431              		.loc 1 1663 0
 7432 00b8 0023     		movs	r3, #0
 7433 00ba 7B64     		str	r3, [r7, #68]
 7434 00bc 2BE0     		b	.L289
 7435              	.L290:
1664:main.c        ****             {
1665:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 7436              		.loc 1 1665 0 discriminator 3
 7437 00be FB6C     		ldr	r3, [r7, #76]
 7438 00c0 023B     		subs	r3, r3, #2
 7439 00c2 6149     		ldr	r1, .L337+4
 7440 00c4 FA6C     		ldr	r2, [r7, #76]
 7441 00c6 0A44     		add	r2, r2, r1
 7442 00c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7443 00ca 02F07F02 		and	r2, r2, #127
 7444 00ce D1B2     		uxtb	r1, r2
 7445 00d0 624A     		ldr	r2, .L337+24
 7446 00d2 D154     		strb	r1, [r2, r3]
1666:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 7447              		.loc 1 1666 0 discriminator 3
 7448 00d4 604B     		ldr	r3, .L337+20
 7449 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7450 00d8 1846     		mov	r0, r3
 7451 00da 5B4A     		ldr	r2, .L337+4
 7452 00dc FB6C     		ldr	r3, [r7, #76]
 7453 00de 1344     		add	r3, r3, r2
 7454 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7455 00e2 03F07F03 		and	r3, r3, #127
 7456 00e6 DCB2     		uxtb	r4, r3
 7457 00e8 5E49     		ldr	r1, .L337+32
 7458 00ea BB6C     		ldr	r3, [r7, #72]
 7459 00ec 1A46     		mov	r2, r3
 7460 00ee D200     		lsls	r2, r2, #3
 7461 00f0 D21A     		subs	r2, r2, r3
 7462 00f2 5300     		lsls	r3, r2, #1
 7463 00f4 1A46     		mov	r2, r3
 7464 00f6 0346     		mov	r3, r0
 7465 00f8 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 163


 7466 00fa 1B1A     		subs	r3, r3, r0
 7467 00fc 1B01     		lsls	r3, r3, #4
 7468 00fe 1344     		add	r3, r3, r2
 7469 0100 CA18     		adds	r2, r1, r3
 7470 0102 7B6C     		ldr	r3, [r7, #68]
 7471 0104 1344     		add	r3, r3, r2
 7472 0106 2246     		mov	r2, r4
 7473 0108 1A70     		strb	r2, [r3]
1667:main.c        ****                 i++;
 7474              		.loc 1 1667 0 discriminator 3
 7475 010a FB6C     		ldr	r3, [r7, #76]
 7476 010c 0133     		adds	r3, r3, #1
 7477 010e FB64     		str	r3, [r7, #76]
1663:main.c        ****             {
 7478              		.loc 1 1663 0 discriminator 3
 7479 0110 7B6C     		ldr	r3, [r7, #68]
 7480 0112 0133     		adds	r3, r3, #1
 7481 0114 7B64     		str	r3, [r7, #68]
 7482              	.L289:
1663:main.c        ****             {
 7483              		.loc 1 1663 0 is_stmt 0 discriminator 1
 7484 0116 7B6C     		ldr	r3, [r7, #68]
 7485 0118 0D2B     		cmp	r3, #13
 7486 011a D0DD     		ble	.L290
 7487              	.LBE46:
1661:main.c        ****         {
 7488              		.loc 1 1661 0 is_stmt 1 discriminator 2
 7489 011c BB6C     		ldr	r3, [r7, #72]
 7490 011e 0133     		adds	r3, r3, #1
 7491 0120 BB64     		str	r3, [r7, #72]
 7492              	.L288:
1661:main.c        ****         {
 7493              		.loc 1 1661 0 is_stmt 0 discriminator 1
 7494 0122 BB6C     		ldr	r3, [r7, #72]
 7495 0124 072B     		cmp	r3, #7
 7496 0126 C7DD     		ble	.L291
 7497              	.LBE45:
1668:main.c        ****             }
1669:main.c        ****         }
1670:main.c        ****         
1671:main.c        ****         uint16_t valsStart = 4 + NAME_LENGTH_IN_BYTES + (NAME_LENGTH_IN_BYTES * NUM_MACROS);
 7498              		.loc 1 1671 0 is_stmt 1
 7499 0128 8223     		movs	r3, #130
 7500 012a BB86     		strh	r3, [r7, #52]	@ movhi
1672:main.c        ****         
1673:main.c        ****         presetArraySection = initialVals;
 7501              		.loc 1 1673 0
 7502 012c 494B     		ldr	r3, .L337+16
 7503 012e 0222     		movs	r2, #2
 7504 0130 1A70     		strb	r2, [r3]
1674:main.c        ****         
1675:main.c        ****         for (; i < sysexPointer; i = i+5)
 7505              		.loc 1 1675 0
 7506 0132 49E2     		b	.L292
 7507              	.L314:
1676:main.c        ****         {
1677:main.c        ****             theVal.u32 = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 164


 7508              		.loc 1 1677 0
 7509 0134 0023     		movs	r3, #0
 7510 0136 3B61     		str	r3, [r7, #16]
1678:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7511              		.loc 1 1678 0
 7512 0138 3B69     		ldr	r3, [r7, #16]
 7513 013a 4349     		ldr	r1, .L337+4
 7514 013c FA6C     		ldr	r2, [r7, #76]
 7515 013e 0A44     		add	r2, r2, r1
 7516 0140 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7517 0142 1207     		lsls	r2, r2, #28
 7518 0144 1343     		orrs	r3, r3, r2
 7519 0146 3B61     		str	r3, [r7, #16]
1679:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 7520              		.loc 1 1679 0
 7521 0148 3B69     		ldr	r3, [r7, #16]
 7522 014a FA6C     		ldr	r2, [r7, #76]
 7523 014c 0132     		adds	r2, r2, #1
 7524 014e 3E49     		ldr	r1, .L337+4
 7525 0150 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7526 0152 5205     		lsls	r2, r2, #21
 7527 0154 1343     		orrs	r3, r3, r2
 7528 0156 3B61     		str	r3, [r7, #16]
1680:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 7529              		.loc 1 1680 0
 7530 0158 3B69     		ldr	r3, [r7, #16]
 7531 015a FA6C     		ldr	r2, [r7, #76]
 7532 015c 0232     		adds	r2, r2, #2
 7533 015e 3A49     		ldr	r1, .L337+4
 7534 0160 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7535 0162 9203     		lsls	r2, r2, #14
 7536 0164 1343     		orrs	r3, r3, r2
 7537 0166 3B61     		str	r3, [r7, #16]
1681:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 7538              		.loc 1 1681 0
 7539 0168 3B69     		ldr	r3, [r7, #16]
 7540 016a FA6C     		ldr	r2, [r7, #76]
 7541 016c 0332     		adds	r2, r2, #3
 7542 016e 3649     		ldr	r1, .L337+4
 7543 0170 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7544 0172 D201     		lsls	r2, r2, #7
 7545 0174 1343     		orrs	r3, r3, r2
 7546 0176 3B61     		str	r3, [r7, #16]
1682:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 7547              		.loc 1 1682 0
 7548 0178 3A69     		ldr	r2, [r7, #16]
 7549 017a FB6C     		ldr	r3, [r7, #76]
 7550 017c 0433     		adds	r3, r3, #4
 7551 017e 3249     		ldr	r1, .L337+4
 7552 0180 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7553 0182 03F07F03 		and	r3, r3, #127
 7554 0186 1343     		orrs	r3, r3, r2
 7555 0188 3B61     		str	r3, [r7, #16]
1683:main.c        ****             testVal = theVal.f;
 7556              		.loc 1 1683 0
 7557 018a 3B69     		ldr	r3, [r7, #16]	@ float
 7558 018c 364A     		ldr	r2, .L337+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 165


 7559 018e 1360     		str	r3, [r2]	@ float
1684:main.c        ****             if (presetArraySection == initialVals)
 7560              		.loc 1 1684 0
 7561 0190 304B     		ldr	r3, .L337+16
 7562 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7563 0194 022B     		cmp	r3, #2
 7564 0196 40F0B980 		bne	.L293
1685:main.c        ****             {
1686:main.c        **** 
1687:main.c        ****                 if (currentFloat == 0)
 7565              		.loc 1 1687 0
 7566 019a 2D4B     		ldr	r3, .L337+12
 7567 019c 1B68     		ldr	r3, [r3]
 7568 019e 002B     		cmp	r3, #0
 7569 01a0 22D1     		bne	.L294
1688:main.c        ****                 {
1689:main.c        ****                     valsCount = (uint16_t) theVal.f;
 7570              		.loc 1 1689 0
 7571 01a2 3B69     		ldr	r3, [r7, #16]	@ float
 7572 01a4 1846     		mov	r0, r3
 7573 01a6 FFF7FEFF 		bl	__aeabi_f2uiz
 7574 01aa 0346     		mov	r3, r0
 7575 01ac 9AB2     		uxth	r2, r3
 7576 01ae 2F4B     		ldr	r3, .L337+40
 7577 01b0 1A80     		strh	r2, [r3]	@ movhi
1690:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 7578              		.loc 1 1690 0
 7579 01b2 BA8E     		ldrh	r2, [r7, #52]
 7580 01b4 264B     		ldr	r3, .L337+12
 7581 01b6 1B68     		ldr	r3, [r3]
 7582 01b8 591C     		adds	r1, r3, #1
 7583 01ba 2548     		ldr	r0, .L337+12
 7584 01bc 0160     		str	r1, [r0]
 7585 01be 1344     		add	r3, r3, r2
 7586 01c0 2A4A     		ldr	r2, .L337+40
 7587 01c2 1288     		ldrh	r2, [r2]
 7588 01c4 120A     		lsrs	r2, r2, #8
 7589 01c6 92B2     		uxth	r2, r2
 7590 01c8 D1B2     		uxtb	r1, r2
 7591 01ca 244A     		ldr	r2, .L337+24
 7592 01cc D154     		strb	r1, [r2, r3]
1691:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 7593              		.loc 1 1691 0
 7594 01ce BA8E     		ldrh	r2, [r7, #52]
 7595 01d0 1F4B     		ldr	r3, .L337+12
 7596 01d2 1B68     		ldr	r3, [r3]
 7597 01d4 591C     		adds	r1, r3, #1
 7598 01d6 1E48     		ldr	r0, .L337+12
 7599 01d8 0160     		str	r1, [r0]
 7600 01da 1344     		add	r3, r3, r2
 7601 01dc 234A     		ldr	r2, .L337+40
 7602 01de 1288     		ldrh	r2, [r2]
 7603 01e0 D1B2     		uxtb	r1, r2
 7604 01e2 1E4A     		ldr	r2, .L337+24
 7605 01e4 D154     		strb	r1, [r2, r3]
 7606 01e6 ECE1     		b	.L300
 7607              	.L294:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 166


1692:main.c        ****                 }
1693:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 7608              		.loc 1 1693 0
 7609 01e8 204B     		ldr	r3, .L337+40
 7610 01ea 1B88     		ldrh	r3, [r3]
 7611 01ec 0133     		adds	r3, r3, #1
 7612 01ee 5B00     		lsls	r3, r3, #1
 7613 01f0 1A46     		mov	r2, r3
 7614 01f2 174B     		ldr	r3, .L337+12
 7615 01f4 1B68     		ldr	r3, [r3]
 7616 01f6 9A42     		cmp	r2, r3
 7617 01f8 3CD9     		bls	.L296
 7618              	.LBB47:
1694:main.c        ****                 { 
1695:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 7619              		.loc 1 1695 0
 7620 01fa 3B69     		ldr	r3, [r7, #16]	@ float
 7621 01fc 1C49     		ldr	r1, .L337+44
 7622 01fe 1846     		mov	r0, r3
 7623 0200 FFF7FEFF 		bl	__aeabi_fmul
 7624 0204 0346     		mov	r3, r0
 7625 0206 1846     		mov	r0, r3
 7626 0208 FFF7FEFF 		bl	__aeabi_f2uiz
 7627 020c 0346     		mov	r3, r0
 7628 020e 7B86     		strh	r3, [r7, #50]	@ movhi
1696:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 7629              		.loc 1 1696 0
 7630 0210 BA8E     		ldrh	r2, [r7, #52]
 7631 0212 0F4B     		ldr	r3, .L337+12
 7632 0214 1B68     		ldr	r3, [r3]
 7633 0216 591C     		adds	r1, r3, #1
 7634 0218 0D48     		ldr	r0, .L337+12
 7635 021a 0160     		str	r1, [r0]
 7636 021c 1344     		add	r3, r3, r2
 7637 021e 7A8E     		ldrh	r2, [r7, #50]
 7638 0220 120A     		lsrs	r2, r2, #8
 7639 0222 92B2     		uxth	r2, r2
 7640 0224 D1B2     		uxtb	r1, r2
 7641 0226 0D4A     		ldr	r2, .L337+24
 7642 0228 D154     		strb	r1, [r2, r3]
1697:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7643              		.loc 1 1697 0
 7644 022a BA8E     		ldrh	r2, [r7, #52]
 7645 022c 084B     		ldr	r3, .L337+12
 7646 022e 1B68     		ldr	r3, [r3]
 7647 0230 591C     		adds	r1, r3, #1
 7648 0232 0748     		ldr	r0, .L337+12
 7649 0234 0160     		str	r1, [r0]
 7650 0236 1344     		add	r3, r3, r2
 7651 0238 7A8E     		ldrh	r2, [r7, #50]	@ movhi
 7652 023a D1B2     		uxtb	r1, r2
 7653 023c 074A     		ldr	r2, .L337+24
 7654 023e D154     		strb	r1, [r2, r3]
 7655              	.LBE47:
 7656 0240 BFE1     		b	.L300
 7657              	.L338:
 7658 0242 00BF     		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 167


 7659              	.L337:
 7660 0244 00000000 		.word	parsingSysex
 7661 0248 00000000 		.word	sysexBuffer
 7662 024c 00000000 		.word	sysexMessageInProgress
 7663 0250 00000000 		.word	currentFloat
 7664 0254 00000000 		.word	presetArraySection
 7665 0258 00000000 		.word	presetNumberToWrite
 7666 025c 00000000 		.word	presetArray
 7667 0260 00000000 		.word	presetNamesArray
 7668 0264 00000000 		.word	macroNamesArray
 7669 0268 00000000 		.word	testVal
 7670 026c 00000000 		.word	valsCount
 7671 0270 00FF7F47 		.word	1199570688
 7672              	.L296:
1698:main.c        ****                 }
1699:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 7673              		.loc 1 1699 0
 7674 0274 9C4B     		ldr	r3, .L339
 7675 0276 1B88     		ldrh	r3, [r3]
 7676 0278 0133     		adds	r3, r3, #1
 7677 027a 5B00     		lsls	r3, r3, #1
 7678 027c 1A46     		mov	r2, r3
 7679 027e 9B4B     		ldr	r3, .L339+4
 7680 0280 1B68     		ldr	r3, [r3]
 7681 0282 9A42     		cmp	r2, r3
 7682 0284 40F09D81 		bne	.L300
1700:main.c        ****                 {
1701:main.c        ****                     valCheck = theVal.f;
 7683              		.loc 1 1701 0
 7684 0288 3B69     		ldr	r3, [r7, #16]	@ float
 7685 028a 994A     		ldr	r2, .L339+8
 7686 028c 1360     		str	r3, [r2]	@ float
1702:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 7687              		.loc 1 1702 0
 7688 028e 984B     		ldr	r3, .L339+8
 7689 0290 1B68     		ldr	r3, [r3]	@ float
 7690 0292 9849     		ldr	r1, .L339+12
 7691 0294 1846     		mov	r0, r3
 7692 0296 FFF7FEFF 		bl	__aeabi_fcmplt
 7693 029a 0346     		mov	r3, r0
 7694 029c 002B     		cmp	r3, #0
 7695 029e 23D0     		beq	.L297
 7696              		.loc 1 1702 0 is_stmt 0 discriminator 1
 7697 02a0 934B     		ldr	r3, .L339+8
 7698 02a2 1B68     		ldr	r3, [r3]	@ float
 7699 02a4 9449     		ldr	r1, .L339+16
 7700 02a6 1846     		mov	r0, r3
 7701 02a8 FFF7FEFF 		bl	__aeabi_fcmpgt
 7702 02ac 0346     		mov	r3, r0
 7703 02ae 002B     		cmp	r3, #0
 7704 02b0 1AD0     		beq	.L297
1703:main.c        ****                     {
1704:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7705              		.loc 1 1704 0 is_stmt 1
 7706 02b2 BA8E     		ldrh	r2, [r7, #52]
 7707 02b4 8D4B     		ldr	r3, .L339+4
 7708 02b6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 168


 7709 02b8 591C     		adds	r1, r3, #1
 7710 02ba 8C48     		ldr	r0, .L339+4
 7711 02bc 0160     		str	r1, [r0]
 7712 02be 1344     		add	r3, r3, r2
 7713 02c0 8E4A     		ldr	r2, .L339+20
 7714 02c2 EF21     		movs	r1, #239
 7715 02c4 D154     		strb	r1, [r2, r3]
1705:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7716              		.loc 1 1705 0
 7717 02c6 BA8E     		ldrh	r2, [r7, #52]
 7718 02c8 884B     		ldr	r3, .L339+4
 7719 02ca 1B68     		ldr	r3, [r3]
 7720 02cc 591C     		adds	r1, r3, #1
 7721 02ce 8748     		ldr	r0, .L339+4
 7722 02d0 0160     		str	r1, [r0]
 7723 02d2 1344     		add	r3, r3, r2
 7724 02d4 894A     		ldr	r2, .L339+20
 7725 02d6 EF21     		movs	r1, #239
 7726 02d8 D154     		strb	r1, [r2, r3]
1706:main.c        ****                         presetArraySection = mapCountNext;
 7727              		.loc 1 1706 0
 7728 02da 894B     		ldr	r3, .L339+24
 7729 02dc 0322     		movs	r2, #3
 7730 02de 1A70     		strb	r2, [r3]
1707:main.c        ****                         mapCount = 0;
 7731              		.loc 1 1707 0
 7732 02e0 884B     		ldr	r3, .L339+28
 7733 02e2 0022     		movs	r2, #0
 7734 02e4 1A60     		str	r2, [r3]
 7735 02e6 6CE1     		b	.L300
 7736              	.L297:
1708:main.c        ****                     }
1709:main.c        ****                     else
1710:main.c        ****                     {
1711:main.c        ****                         //error state
1712:main.c        ****                         SPI_errors++;
 7737              		.loc 1 1712 0
 7738 02e8 874B     		ldr	r3, .L339+32
 7739 02ea 1B68     		ldr	r3, [r3]
 7740 02ec 0133     		adds	r3, r3, #1
 7741 02ee 864A     		ldr	r2, .L339+32
 7742 02f0 1360     		str	r3, [r2]
1713:main.c        ****                         sysexMessageInProgress = 0;
 7743              		.loc 1 1713 0
 7744 02f2 864B     		ldr	r3, .L339+36
 7745 02f4 0022     		movs	r2, #0
 7746 02f6 1A70     		strb	r2, [r3]
1714:main.c        ****                         sysexPointer = 0;
 7747              		.loc 1 1714 0
 7748 02f8 854B     		ldr	r3, .L339+40
 7749 02fa 0022     		movs	r2, #0
 7750 02fc 1A60     		str	r2, [r3]
1715:main.c        ****                         sendingMessage = 0;
 7751              		.loc 1 1715 0
 7752 02fe 854B     		ldr	r3, .L339+44
 7753 0300 0022     		movs	r2, #0
 7754 0302 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 169


1716:main.c        ****                         parseThatMF = 0;
 7755              		.loc 1 1716 0
 7756 0304 844B     		ldr	r3, .L339+48
 7757 0306 0022     		movs	r2, #0
 7758 0308 1A70     		strb	r2, [r3]
 7759 030a 5AE1     		b	.L300
 7760              	.L293:
1717:main.c        ****                     }
1718:main.c        ****                 }
1719:main.c        ****             }
1720:main.c        ****             else if (presetArraySection == mapCountNext)
 7761              		.loc 1 1720 0
 7762 030c 7C4B     		ldr	r3, .L339+24
 7763 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7764 0310 032B     		cmp	r3, #3
 7765 0312 28D1     		bne	.L301
1721:main.c        ****             {
1722:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 7766              		.loc 1 1722 0
 7767 0314 3B69     		ldr	r3, [r7, #16]	@ float
 7768 0316 1846     		mov	r0, r3
 7769 0318 FFF7FEFF 		bl	__aeabi_f2uiz
 7770 031c 0346     		mov	r3, r0
 7771 031e 9AB2     		uxth	r2, r3
 7772 0320 7E4B     		ldr	r3, .L339+52
 7773 0322 1A80     		strh	r2, [r3]	@ movhi
1723:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 7774              		.loc 1 1723 0
 7775 0324 BA8E     		ldrh	r2, [r7, #52]
 7776 0326 714B     		ldr	r3, .L339+4
 7777 0328 1B68     		ldr	r3, [r3]
 7778 032a 591C     		adds	r1, r3, #1
 7779 032c 6F48     		ldr	r0, .L339+4
 7780 032e 0160     		str	r1, [r0]
 7781 0330 1344     		add	r3, r3, r2
 7782 0332 7A4A     		ldr	r2, .L339+52
 7783 0334 1288     		ldrh	r2, [r2]
 7784 0336 120A     		lsrs	r2, r2, #8
 7785 0338 92B2     		uxth	r2, r2
 7786 033a D1B2     		uxtb	r1, r2
 7787 033c 6F4A     		ldr	r2, .L339+20
 7788 033e D154     		strb	r1, [r2, r3]
1724:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 7789              		.loc 1 1724 0
 7790 0340 BA8E     		ldrh	r2, [r7, #52]
 7791 0342 6A4B     		ldr	r3, .L339+4
 7792 0344 1B68     		ldr	r3, [r3]
 7793 0346 591C     		adds	r1, r3, #1
 7794 0348 6848     		ldr	r0, .L339+4
 7795 034a 0160     		str	r1, [r0]
 7796 034c 1344     		add	r3, r3, r2
 7797 034e 734A     		ldr	r2, .L339+52
 7798 0350 1288     		ldrh	r2, [r2]
 7799 0352 D1B2     		uxtb	r1, r2
 7800 0354 694A     		ldr	r2, .L339+20
 7801 0356 D154     		strb	r1, [r2, r3]
1725:main.c        ****                 presetArraySection = mapping;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 170


 7802              		.loc 1 1725 0
 7803 0358 694B     		ldr	r3, .L339+24
 7804 035a 0422     		movs	r2, #4
 7805 035c 1A70     		strb	r2, [r3]
1726:main.c        ****                 numMappings = 0;
 7806              		.loc 1 1726 0
 7807 035e 704B     		ldr	r3, .L339+56
 7808 0360 0022     		movs	r2, #0
 7809 0362 1A80     		strh	r2, [r3]	@ movhi
 7810 0364 2DE1     		b	.L300
 7811              	.L301:
1727:main.c        ****             }
1728:main.c        ****             else if (presetArraySection == mapping)
 7812              		.loc 1 1728 0
 7813 0366 664B     		ldr	r3, .L339+24
 7814 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7815 036a 042B     		cmp	r3, #4
 7816 036c 40F02981 		bne	.L300
1729:main.c        ****             {
1730:main.c        ****                 // this is the order
1731:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
1732:main.c        ****                 if (numMappings < mapCountExpectation)
 7817              		.loc 1 1732 0
 7818 0370 6B4B     		ldr	r3, .L339+56
 7819 0372 1A88     		ldrh	r2, [r3]
 7820 0374 694B     		ldr	r3, .L339+52
 7821 0376 1B88     		ldrh	r3, [r3]
 7822 0378 9A42     		cmp	r2, r3
 7823 037a 80F0D780 		bcs	.L302
1733:main.c        ****                 {
1734:main.c        ****                     if ((mapCount % 5) == 0)
 7824              		.loc 1 1734 0
 7825 037e 614B     		ldr	r3, .L339+28
 7826 0380 1968     		ldr	r1, [r3]
 7827 0382 684B     		ldr	r3, .L339+60
 7828 0384 A3FB0123 		umull	r2, r3, r3, r1
 7829 0388 9A08     		lsrs	r2, r3, #2
 7830 038a 1346     		mov	r3, r2
 7831 038c 9B00     		lsls	r3, r3, #2
 7832 038e 1344     		add	r3, r3, r2
 7833 0390 CA1A     		subs	r2, r1, r3
 7834 0392 002A     		cmp	r2, #0
 7835 0394 0FD1     		bne	.L303
1735:main.c        ****                     {
1736:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7836              		.loc 1 1736 0
 7837 0396 BA8E     		ldrh	r2, [r7, #52]
 7838 0398 544B     		ldr	r3, .L339+4
 7839 039a 1B68     		ldr	r3, [r3]
 7840 039c 591C     		adds	r1, r3, #1
 7841 039e 5348     		ldr	r0, .L339+4
 7842 03a0 0160     		str	r1, [r0]
 7843 03a2 D418     		adds	r4, r2, r3
 7844 03a4 3B69     		ldr	r3, [r7, #16]	@ float
 7845 03a6 1846     		mov	r0, r3
 7846 03a8 FFF7FEFF 		bl	__aeabi_f2uiz
 7847 03ac 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 171


 7848 03ae DAB2     		uxtb	r2, r3
 7849 03b0 524B     		ldr	r3, .L339+20
 7850 03b2 1A55     		strb	r2, [r3, r4]
 7851 03b4 91E0     		b	.L304
 7852              	.L303:
1737:main.c        ****                     }
1738:main.c        ****                     else if  (mapCount % 5 == 1)
 7853              		.loc 1 1738 0
 7854 03b6 534B     		ldr	r3, .L339+28
 7855 03b8 1968     		ldr	r1, [r3]
 7856 03ba 5A4B     		ldr	r3, .L339+60
 7857 03bc A3FB0123 		umull	r2, r3, r3, r1
 7858 03c0 9A08     		lsrs	r2, r3, #2
 7859 03c2 1346     		mov	r3, r2
 7860 03c4 9B00     		lsls	r3, r3, #2
 7861 03c6 1344     		add	r3, r3, r2
 7862 03c8 CA1A     		subs	r2, r1, r3
 7863 03ca 012A     		cmp	r2, #1
 7864 03cc 0FD1     		bne	.L305
1739:main.c        ****                     {
1740:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7865              		.loc 1 1740 0
 7866 03ce BA8E     		ldrh	r2, [r7, #52]
 7867 03d0 464B     		ldr	r3, .L339+4
 7868 03d2 1B68     		ldr	r3, [r3]
 7869 03d4 591C     		adds	r1, r3, #1
 7870 03d6 4548     		ldr	r0, .L339+4
 7871 03d8 0160     		str	r1, [r0]
 7872 03da D418     		adds	r4, r2, r3
 7873 03dc 3B69     		ldr	r3, [r7, #16]	@ float
 7874 03de 1846     		mov	r0, r3
 7875 03e0 FFF7FEFF 		bl	__aeabi_f2uiz
 7876 03e4 0346     		mov	r3, r0
 7877 03e6 DAB2     		uxtb	r2, r3
 7878 03e8 444B     		ldr	r3, .L339+20
 7879 03ea 1A55     		strb	r2, [r3, r4]
 7880 03ec 75E0     		b	.L304
 7881              	.L305:
1741:main.c        ****                     }
1742:main.c        ****                     else if (mapCount % 5 == 2) //check if the scalar source is -1 (if so send 255 
 7882              		.loc 1 1742 0
 7883 03ee 454B     		ldr	r3, .L339+28
 7884 03f0 1968     		ldr	r1, [r3]
 7885 03f2 4C4B     		ldr	r3, .L339+60
 7886 03f4 A3FB0123 		umull	r2, r3, r3, r1
 7887 03f8 9A08     		lsrs	r2, r3, #2
 7888 03fa 1346     		mov	r3, r2
 7889 03fc 9B00     		lsls	r3, r3, #2
 7890 03fe 1344     		add	r3, r3, r2
 7891 0400 CA1A     		subs	r2, r1, r3
 7892 0402 022A     		cmp	r2, #2
 7893 0404 23D1     		bne	.L306
1743:main.c        ****                     {
1744:main.c        ****                         if (theVal.f < 0.0f)
 7894              		.loc 1 1744 0
 7895 0406 3B69     		ldr	r3, [r7, #16]	@ float
 7896 0408 4FF00001 		mov	r1, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 172


 7897 040c 1846     		mov	r0, r3
 7898 040e FFF7FEFF 		bl	__aeabi_fcmplt
 7899 0412 0346     		mov	r3, r0
 7900 0414 002B     		cmp	r3, #0
 7901 0416 0AD0     		beq	.L336
1745:main.c        ****                         {
1746:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 7902              		.loc 1 1746 0
 7903 0418 BA8E     		ldrh	r2, [r7, #52]
 7904 041a 344B     		ldr	r3, .L339+4
 7905 041c 1B68     		ldr	r3, [r3]
 7906 041e 591C     		adds	r1, r3, #1
 7907 0420 3248     		ldr	r0, .L339+4
 7908 0422 0160     		str	r1, [r0]
 7909 0424 1344     		add	r3, r3, r2
 7910 0426 354A     		ldr	r2, .L339+20
 7911 0428 FF21     		movs	r1, #255
 7912 042a D154     		strb	r1, [r2, r3]
 7913 042c 55E0     		b	.L304
 7914              	.L336:
1747:main.c        ****                         }
1748:main.c        ****                         else
1749:main.c        ****                         {
1750:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7915              		.loc 1 1750 0
 7916 042e BA8E     		ldrh	r2, [r7, #52]
 7917 0430 2E4B     		ldr	r3, .L339+4
 7918 0432 1B68     		ldr	r3, [r3]
 7919 0434 591C     		adds	r1, r3, #1
 7920 0436 2D48     		ldr	r0, .L339+4
 7921 0438 0160     		str	r1, [r0]
 7922 043a D418     		adds	r4, r2, r3
 7923 043c 3B69     		ldr	r3, [r7, #16]	@ float
 7924 043e 1846     		mov	r0, r3
 7925 0440 FFF7FEFF 		bl	__aeabi_f2uiz
 7926 0444 0346     		mov	r3, r0
 7927 0446 DAB2     		uxtb	r2, r3
 7928 0448 2C4B     		ldr	r3, .L339+20
 7929 044a 1A55     		strb	r2, [r3, r4]
 7930 044c 45E0     		b	.L304
 7931              	.L306:
1751:main.c        ****                         }
1752:main.c        ****                     }
1753:main.c        ****                     else if (mapCount % 5 == 3)
 7932              		.loc 1 1753 0
 7933 044e 2D4B     		ldr	r3, .L339+28
 7934 0450 1968     		ldr	r1, [r3]
 7935 0452 344B     		ldr	r3, .L339+60
 7936 0454 A3FB0123 		umull	r2, r3, r3, r1
 7937 0458 9A08     		lsrs	r2, r3, #2
 7938 045a 1346     		mov	r3, r2
 7939 045c 9B00     		lsls	r3, r3, #2
 7940 045e 1344     		add	r3, r3, r2
 7941 0460 CA1A     		subs	r2, r1, r3
 7942 0462 032A     		cmp	r2, #3
 7943 0464 24D1     		bne	.L310
 7944              	.LBB48:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 173


1754:main.c        ****                     {
1755:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 7945              		.loc 1 1755 0
 7946 0466 3B69     		ldr	r3, [r7, #16]	@ float
 7947 0468 2F49     		ldr	r1, .L339+64
 7948 046a 1846     		mov	r0, r3
 7949 046c FFF7FEFF 		bl	__aeabi_fmul
 7950 0470 0346     		mov	r3, r0
 7951 0472 1846     		mov	r0, r3
 7952 0474 FFF7FEFF 		bl	__aeabi_f2iz
 7953 0478 0346     		mov	r3, r0
 7954 047a 3B86     		strh	r3, [r7, #48]	@ movhi
1756:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 7955              		.loc 1 1756 0
 7956 047c BA8E     		ldrh	r2, [r7, #52]
 7957 047e 1B4B     		ldr	r3, .L339+4
 7958 0480 1B68     		ldr	r3, [r3]
 7959 0482 591C     		adds	r1, r3, #1
 7960 0484 1948     		ldr	r0, .L339+4
 7961 0486 0160     		str	r1, [r0]
 7962 0488 1344     		add	r3, r3, r2
 7963 048a B7F93020 		ldrsh	r2, [r7, #48]
 7964 048e 1212     		asrs	r2, r2, #8
 7965 0490 12B2     		sxth	r2, r2
 7966 0492 D1B2     		uxtb	r1, r2
 7967 0494 194A     		ldr	r2, .L339+20
 7968 0496 D154     		strb	r1, [r2, r3]
1757:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7969              		.loc 1 1757 0
 7970 0498 BA8E     		ldrh	r2, [r7, #52]
 7971 049a 144B     		ldr	r3, .L339+4
 7972 049c 1B68     		ldr	r3, [r3]
 7973 049e 591C     		adds	r1, r3, #1
 7974 04a0 1248     		ldr	r0, .L339+4
 7975 04a2 0160     		str	r1, [r0]
 7976 04a4 1344     		add	r3, r3, r2
 7977 04a6 3A8E     		ldrh	r2, [r7, #48]	@ movhi
 7978 04a8 D1B2     		uxtb	r1, r2
 7979 04aa 144A     		ldr	r2, .L339+20
 7980 04ac D154     		strb	r1, [r2, r3]
 7981              	.LBE48:
 7982 04ae 14E0     		b	.L304
 7983              	.L310:
1758:main.c        **** 
1759:main.c        ****                     }
1760:main.c        ****                     else
1761:main.c        ****                     {
1762:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7984              		.loc 1 1762 0
 7985 04b0 BA8E     		ldrh	r2, [r7, #52]
 7986 04b2 0E4B     		ldr	r3, .L339+4
 7987 04b4 1B68     		ldr	r3, [r3]
 7988 04b6 591C     		adds	r1, r3, #1
 7989 04b8 0C48     		ldr	r0, .L339+4
 7990 04ba 0160     		str	r1, [r0]
 7991 04bc D418     		adds	r4, r2, r3
 7992 04be 3B69     		ldr	r3, [r7, #16]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 174


 7993 04c0 1846     		mov	r0, r3
 7994 04c2 FFF7FEFF 		bl	__aeabi_f2uiz
 7995 04c6 0346     		mov	r3, r0
 7996 04c8 DAB2     		uxtb	r2, r3
 7997 04ca 0C4B     		ldr	r3, .L339+20
 7998 04cc 1A55     		strb	r2, [r3, r4]
1763:main.c        ****                         numMappings++;
 7999              		.loc 1 1763 0
 8000 04ce 144B     		ldr	r3, .L339+56
 8001 04d0 1B88     		ldrh	r3, [r3]
 8002 04d2 0133     		adds	r3, r3, #1
 8003 04d4 9AB2     		uxth	r2, r3
 8004 04d6 124B     		ldr	r3, .L339+56
 8005 04d8 1A80     		strh	r2, [r3]	@ movhi
 8006              	.L304:
1764:main.c        ****                     }
1765:main.c        ****                     mapCount++;
 8007              		.loc 1 1765 0
 8008 04da 0A4B     		ldr	r3, .L339+28
 8009 04dc 1B68     		ldr	r3, [r3]
 8010 04de 0133     		adds	r3, r3, #1
 8011 04e0 084A     		ldr	r2, .L339+28
 8012 04e2 1360     		str	r3, [r2]
 8013 04e4 6DE0     		b	.L300
 8014              	.L340:
 8015 04e6 00BF     		.align	2
 8016              	.L339:
 8017 04e8 00000000 		.word	valsCount
 8018 04ec 00000000 		.word	currentFloat
 8019 04f0 00000000 		.word	valCheck
 8020 04f4 0000C0BF 		.word	-1077936128
 8021 04f8 000020C0 		.word	-1071644672
 8022 04fc 00000000 		.word	presetArray
 8023 0500 00000000 		.word	presetArraySection
 8024 0504 00000000 		.word	mapCount
 8025 0508 00000000 		.word	SPI_errors
 8026 050c 00000000 		.word	sysexMessageInProgress
 8027 0510 00000000 		.word	sysexPointer
 8028 0514 00000000 		.word	sendingMessage
 8029 0518 00000000 		.word	parseThatMF
 8030 051c 00000000 		.word	mapCountExpectation
 8031 0520 00000000 		.word	numMappings
 8032 0524 CDCCCCCC 		.word	-858993459
 8033 0528 00FEFF46 		.word	1191181824
 8034              	.L302:
1766:main.c        ****                 }
1767:main.c        ****                 
1768:main.c        **** 
1769:main.c        ****                 else
1770:main.c        ****                 {
1771:main.c        ****                     //mapcount ended
1772:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 8035              		.loc 1 1772 0
 8036 052c 3B69     		ldr	r3, [r7, #16]	@ float
 8037 052e 6649     		ldr	r1, .L341
 8038 0530 1846     		mov	r0, r3
 8039 0532 FFF7FEFF 		bl	__aeabi_fcmplt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 175


 8040 0536 0346     		mov	r3, r0
 8041 0538 002B     		cmp	r3, #0
 8042 053a 31D0     		beq	.L311
 8043              		.loc 1 1772 0 is_stmt 0 discriminator 1
 8044 053c 3B69     		ldr	r3, [r7, #16]	@ float
 8045 053e 6349     		ldr	r1, .L341+4
 8046 0540 1846     		mov	r0, r3
 8047 0542 FFF7FEFF 		bl	__aeabi_fcmpgt
 8048 0546 0346     		mov	r3, r0
 8049 0548 002B     		cmp	r3, #0
 8050 054a 29D0     		beq	.L311
1773:main.c        ****                     {
1774:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8051              		.loc 1 1774 0 is_stmt 1
 8052 054c BA8E     		ldrh	r2, [r7, #52]
 8053 054e 604B     		ldr	r3, .L341+8
 8054 0550 1B68     		ldr	r3, [r3]
 8055 0552 591C     		adds	r1, r3, #1
 8056 0554 5E48     		ldr	r0, .L341+8
 8057 0556 0160     		str	r1, [r0]
 8058 0558 1344     		add	r3, r3, r2
 8059 055a 5E4A     		ldr	r2, .L341+12
 8060 055c FE21     		movs	r1, #254
 8061 055e D154     		strb	r1, [r2, r3]
1775:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8062              		.loc 1 1775 0
 8063 0560 BA8E     		ldrh	r2, [r7, #52]
 8064 0562 5B4B     		ldr	r3, .L341+8
 8065 0564 1B68     		ldr	r3, [r3]
 8066 0566 591C     		adds	r1, r3, #1
 8067 0568 5948     		ldr	r0, .L341+8
 8068 056a 0160     		str	r1, [r0]
 8069 056c 1344     		add	r3, r3, r2
 8070 056e 594A     		ldr	r2, .L341+12
 8071 0570 FE21     		movs	r1, #254
 8072 0572 D154     		strb	r1, [r2, r3]
1776:main.c        ****                         presetArraySection = presetEnd;
 8073              		.loc 1 1776 0
 8074 0574 584B     		ldr	r3, .L341+16
 8075 0576 0522     		movs	r2, #5
 8076 0578 1A70     		strb	r2, [r3]
1777:main.c        ****                         sysexMessageInProgress = 0;
 8077              		.loc 1 1777 0
 8078 057a 584B     		ldr	r3, .L341+20
 8079 057c 0022     		movs	r2, #0
 8080 057e 1A70     		strb	r2, [r3]
1778:main.c        ****                         sendingMessage = 1;
 8081              		.loc 1 1778 0
 8082 0580 574B     		ldr	r3, .L341+24
 8083 0582 0122     		movs	r2, #1
 8084 0584 1A70     		strb	r2, [r3]
1779:main.c        ****                         patchNum = presetNumberToWrite;
 8085              		.loc 1 1779 0
 8086 0586 574B     		ldr	r3, .L341+28
 8087 0588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8088 058a 574B     		ldr	r3, .L341+32
 8089 058c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 176


1780:main.c        ****                         messageArraySize = valsStart + currentFloat;
 8090              		.loc 1 1780 0
 8091 058e 504B     		ldr	r3, .L341+8
 8092 0590 1B68     		ldr	r3, [r3]
 8093 0592 9AB2     		uxth	r2, r3
 8094 0594 BB8E     		ldrh	r3, [r7, #52]	@ movhi
 8095 0596 1344     		add	r3, r3, r2
 8096 0598 9AB2     		uxth	r2, r3
 8097 059a 544B     		ldr	r3, .L341+36
 8098 059c 1A80     		strh	r2, [r3]	@ movhi
 8099 059e 10E0     		b	.L300
 8100              	.L311:
1781:main.c        ****                     }
1782:main.c        ****                     else
1783:main.c        ****                     {
1784:main.c        ****                         //error state
1785:main.c        ****                         SPI_errors++;
 8101              		.loc 1 1785 0
 8102 05a0 534B     		ldr	r3, .L341+40
 8103 05a2 1B68     		ldr	r3, [r3]
 8104 05a4 0133     		adds	r3, r3, #1
 8105 05a6 524A     		ldr	r2, .L341+40
 8106 05a8 1360     		str	r3, [r2]
1786:main.c        ****                         sysexMessageInProgress = 0;
 8107              		.loc 1 1786 0
 8108 05aa 4C4B     		ldr	r3, .L341+20
 8109 05ac 0022     		movs	r2, #0
 8110 05ae 1A70     		strb	r2, [r3]
1787:main.c        ****                         sysexPointer = 0;
 8111              		.loc 1 1787 0
 8112 05b0 504B     		ldr	r3, .L341+44
 8113 05b2 0022     		movs	r2, #0
 8114 05b4 1A60     		str	r2, [r3]
1788:main.c        ****                         sendingMessage = 0;
 8115              		.loc 1 1788 0
 8116 05b6 4A4B     		ldr	r3, .L341+24
 8117 05b8 0022     		movs	r2, #0
 8118 05ba 1A70     		strb	r2, [r3]
1789:main.c        ****                         parseThatMF = 0;
 8119              		.loc 1 1789 0
 8120 05bc 4E4B     		ldr	r3, .L341+48
 8121 05be 0022     		movs	r2, #0
 8122 05c0 1A70     		strb	r2, [r3]
 8123              	.L300:
1675:main.c        ****         {
 8124              		.loc 1 1675 0
 8125 05c2 FB6C     		ldr	r3, [r7, #76]
 8126 05c4 0533     		adds	r3, r3, #5
 8127 05c6 FB64     		str	r3, [r7, #76]
 8128              	.L292:
1675:main.c        ****         {
 8129              		.loc 1 1675 0 is_stmt 0 discriminator 1
 8130 05c8 4A4B     		ldr	r3, .L341+44
 8131 05ca 1B68     		ldr	r3, [r3]
 8132 05cc FA6C     		ldr	r2, [r7, #76]
 8133 05ce 9A42     		cmp	r2, r3
 8134 05d0 FFF4B0AD 		bcc	.L314
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 177


 8135 05d4 F0E2     		b	.L315
 8136              	.L285:
 8137              	.LBE44:
1790:main.c        ****                     }
1791:main.c        ****                 }
1792:main.c        ****             }
1793:main.c        ****             
1794:main.c        ****         }
1795:main.c        ****     }
1796:main.c        ****     #if 0
1797:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
1798:main.c        ****     {
1799:main.c        ****         
1800:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
1801:main.c        ****         currentFloat = 0;
1802:main.c        ****         presetNumberToWrite = sysexBuffer[1];
1803:main.c        ****         union breakFloat theVal;
1804:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
1805:main.c        ****         {
1806:main.c        ****             theVal.u32 = 0;
1807:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
1808:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
1809:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
1810:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
1811:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
1812:main.c        ****             testVal = theVal.f;
1813:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
1814:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
1815:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
1816:main.c        ****         }
1817:main.c        ****         
1818:main.c        ****         tuningArray[currentFloat++] = 0xef;
1819:main.c        ****         tuningArray[currentFloat++] = 0xef;
1820:main.c        ****                         
1821:main.c        ****         
1822:main.c        ****         messageArraySize = currentFloat;
1823:main.c        ****                     
1824:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
1825:main.c        ****         {
1826:main.c        ****             //error state
1827:main.c        ****             SPI_errors++;
1828:main.c        ****             sysexMessageInProgress = 0;
1829:main.c        ****             sysexPointer = 0;
1830:main.c        ****             sendingMessage = 0;
1831:main.c        ****             parseThatMF = 0;
1832:main.c        ****         } else 
1833:main.c        ****         {
1834:main.c        ****             sysexMessageInProgress = 0;
1835:main.c        ****             sendingMessage = 2;
1836:main.c        ****         }
1837:main.c        ****     }
1838:main.c        ****     #endif
1839:main.c        ****     
1840:main.c        **** 
1841:main.c        ****     
1842:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 8138              		.loc 1 1842 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 178


 8139 05d6 494B     		ldr	r3, .L341+52
 8140 05d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8141 05da 022B     		cmp	r3, #2
 8142 05dc 40F08281 		bne	.L316
 8143              	.LBB49:
1843:main.c        ****     {
1844:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8144              		.loc 1 1844 0
 8145 05e0 3E4B     		ldr	r3, .L341+20
 8146 05e2 0122     		movs	r2, #1
 8147 05e4 1A70     		strb	r2, [r3]
1845:main.c        ****         currentFloat = 0;
 8148              		.loc 1 1845 0
 8149 05e6 3A4B     		ldr	r3, .L341+8
 8150 05e8 0022     		movs	r2, #0
 8151 05ea 1A60     		str	r2, [r3]
1846:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 8152              		.loc 1 1846 0
 8153 05ec 434B     		ldr	r3, .L341+52
 8154 05ee 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8155 05f0 434B     		ldr	r3, .L341+56
 8156 05f2 1A70     		strb	r2, [r3]
1847:main.c        ****         currentCopedent = copedentNumberToWrite;
 8157              		.loc 1 1847 0
 8158 05f4 424B     		ldr	r3, .L341+56
 8159 05f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8160 05f8 424B     		ldr	r3, .L341+60
 8161 05fa 1A70     		strb	r2, [r3]
1848:main.c        ****         necks[currentNeck] = currentCopedent;
 8162              		.loc 1 1848 0
 8163 05fc 424B     		ldr	r3, .L341+64
 8164 05fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8165 0600 1A46     		mov	r2, r3
 8166 0602 404B     		ldr	r3, .L341+60
 8167 0604 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8168 0606 414B     		ldr	r3, .L341+68
 8169 0608 9954     		strb	r1, [r3, r2]
1849:main.c        **** 
1850:main.c        ****               
1851:main.c        ****         
1852:main.c        ****         union breakFloat theVal;
1853:main.c        ****         uint32_t i = 2;
 8170              		.loc 1 1853 0
 8171 060a 0223     		movs	r3, #2
 8172 060c 3B64     		str	r3, [r7, #64]
1854:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 8173              		.loc 1 1854 0
 8174 060e 1023     		movs	r3, #16
 8175 0610 87F82F30 		strb	r3, [r7, #47]
1855:main.c        ****         for (; i < stoppingPoint; i++)
 8176              		.loc 1 1855 0
 8177 0614 43E0     		b	.L317
 8178              	.L318:
 8179              	.LBB50:
1856:main.c        ****         {
1857:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
1858:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 179


 8180              		.loc 1 1858 0 discriminator 2
 8181 0616 394A     		ldr	r2, .L341+52
 8182 0618 3B6C     		ldr	r3, [r7, #64]
 8183 061a 1344     		add	r3, r3, r2
 8184 061c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8185 061e 03F07F03 		and	r3, r3, #127
 8186 0622 87F82E30 		strb	r3, [r7, #46]
1859:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 8187              		.loc 1 1859 0 discriminator 2
 8188 0626 364B     		ldr	r3, .L341+56
 8189 0628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8190 062a 1846     		mov	r0, r3
 8191 062c 3B6C     		ldr	r3, [r7, #64]
 8192 062e 9A1E     		subs	r2, r3, #2
 8193 0630 3749     		ldr	r1, .L341+72
 8194 0632 0346     		mov	r3, r0
 8195 0634 DB00     		lsls	r3, r3, #3
 8196 0636 1B1A     		subs	r3, r3, r0
 8197 0638 5B00     		lsls	r3, r3, #1
 8198 063a 0B44     		add	r3, r3, r1
 8199 063c 1344     		add	r3, r3, r2
 8200 063e 97F82E20 		ldrb	r2, [r7, #46]
 8201 0642 1A70     		strb	r2, [r3]
1860:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 8202              		.loc 1 1860 0 discriminator 2
 8203 0644 2E4B     		ldr	r3, .L341+56
 8204 0646 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8205 0648 9BB2     		uxth	r3, r3
 8206 064a 1A46     		mov	r2, r3	@ movhi
 8207 064c 1201     		lsls	r2, r2, #4
 8208 064e 1A44     		add	r2, r2, r3
 8209 0650 9200     		lsls	r2, r2, #2
 8210 0652 1A44     		add	r2, r2, r3
 8211 0654 5200     		lsls	r2, r2, #1
 8212 0656 1344     		add	r3, r3, r2
 8213 0658 5B00     		lsls	r3, r3, #1
 8214 065a 9AB2     		uxth	r2, r3
 8215 065c 2D4B     		ldr	r3, .L341+76
 8216 065e 1A80     		strh	r2, [r3]	@ movhi
1861:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 8217              		.loc 1 1861 0 discriminator 2
 8218 0660 274B     		ldr	r3, .L341+56
 8219 0662 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8220 0664 9BB2     		uxth	r3, r3
 8221 0666 1A46     		mov	r2, r3	@ movhi
 8222 0668 1201     		lsls	r2, r2, #4
 8223 066a 1A44     		add	r2, r2, r3
 8224 066c 9200     		lsls	r2, r2, #2
 8225 066e 1A44     		add	r2, r2, r3
 8226 0670 5200     		lsls	r2, r2, #1
 8227 0672 1344     		add	r3, r3, r2
 8228 0674 5B00     		lsls	r3, r3, #1
 8229 0676 9AB2     		uxth	r2, r3
 8230 0678 3B6C     		ldr	r3, [r7, #64]
 8231 067a 9BB2     		uxth	r3, r3
 8232 067c 1344     		add	r3, r3, r2
 8233 067e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 180


 8234 0680 023B     		subs	r3, r3, #2
 8235 0682 9AB2     		uxth	r2, r3
 8236 0684 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 8237 0688 1146     		mov	r1, r2
 8238 068a 1846     		mov	r0, r3
 8239 068c FFF7FEFF 		bl	EEPROM_WriteByte
 8240 0690 0346     		mov	r3, r0
 8241 0692 DAB2     		uxtb	r2, r3
 8242 0694 204B     		ldr	r3, .L341+80
 8243 0696 1A70     		strb	r2, [r3]
 8244              	.LBE50:
1855:main.c        ****         {
 8245              		.loc 1 1855 0 discriminator 2
 8246 0698 3B6C     		ldr	r3, [r7, #64]
 8247 069a 0133     		adds	r3, r3, #1
 8248 069c 3B64     		str	r3, [r7, #64]
 8249              	.L317:
1855:main.c        ****         {
 8250              		.loc 1 1855 0 is_stmt 0 discriminator 1
 8251 069e 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 8252 06a2 3B6C     		ldr	r3, [r7, #64]
 8253 06a4 9A42     		cmp	r2, r3
 8254 06a6 B6D8     		bhi	.L318
1862:main.c        ****         }
1863:main.c        ****         
1864:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 8255              		.loc 1 1864 0 is_stmt 1
 8256 06a8 1023     		movs	r3, #16
 8257 06aa 3B64     		str	r3, [r7, #64]
1865:main.c        **** 
1866:main.c        ****  
1867:main.c        ****         while(i < sysexPointer)
 8258              		.loc 1 1867 0
 8259 06ac DBE0     		b	.L319
 8260              	.L324:
 8261              	.LBB51:
1868:main.c        ****         {
1869:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 8262              		.loc 1 1869 0
 8263 06ae 0023     		movs	r3, #0
 8264 06b0 FB63     		str	r3, [r7, #60]
 8265 06b2 D4E0     		b	.L320
 8266              	.L323:
 8267              	.LBB52:
1870:main.c        ****             {
1871:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 8268              		.loc 1 1871 0
 8269 06b4 FB6B     		ldr	r3, [r7, #60]
 8270 06b6 9BB2     		uxth	r3, r3
 8271 06b8 1A46     		mov	r2, r3	@ movhi
 8272 06ba 5200     		lsls	r2, r2, #1
 8273 06bc 1344     		add	r3, r3, r2
 8274 06be DB00     		lsls	r3, r3, #3
 8275 06c0 BB85     		strh	r3, [r7, #44]	@ movhi
 8276              	.LBB53:
1872:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 8277              		.loc 1 1872 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 181


 8278 06c2 0023     		movs	r3, #0
 8279 06c4 BB63     		str	r3, [r7, #56]
 8280 06c6 C3E0     		b	.L321
 8281              	.L342:
 8282              		.align	2
 8283              	.L341:
 8284 06c8 000020C0 		.word	-1071644672
 8285 06cc 000060C0 		.word	-1067450368
 8286 06d0 00000000 		.word	currentFloat
 8287 06d4 00000000 		.word	presetArray
 8288 06d8 00000000 		.word	presetArraySection
 8289 06dc 00000000 		.word	sysexMessageInProgress
 8290 06e0 00000000 		.word	sendingMessage
 8291 06e4 00000000 		.word	presetNumberToWrite
 8292 06e8 00000000 		.word	patchNum
 8293 06ec 00000000 		.word	messageArraySize
 8294 06f0 00000000 		.word	SPI_errors
 8295 06f4 00000000 		.word	sysexPointer
 8296 06f8 00000000 		.word	parseThatMF
 8297 06fc 00000000 		.word	sysexBuffer
 8298 0700 00000000 		.word	copedentNumberToWrite
 8299 0704 00000000 		.word	currentCopedent
 8300 0708 00000000 		.word	currentNeck
 8301 070c 00000000 		.word	necks
 8302 0710 00000000 		.word	copedentNamesArray
 8303 0714 00000000 		.word	checkBase
 8304 0718 00000000 		.word	checkStatus
 8305              	.L322:
 8306              	.LBB54:
1873:main.c        ****                 {
1874:main.c        ****                     
1875:main.c        ****                     theVal.u32 = 0;
 8307              		.loc 1 1875 0 discriminator 3
 8308 071c 0023     		movs	r3, #0
 8309 071e FB60     		str	r3, [r7, #12]
1876:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8310              		.loc 1 1876 0 discriminator 3
 8311 0720 FB68     		ldr	r3, [r7, #12]
 8312 0722 6449     		ldr	r1, .L343
 8313 0724 3A6C     		ldr	r2, [r7, #64]
 8314 0726 0A44     		add	r2, r2, r1
 8315 0728 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8316 072a 1207     		lsls	r2, r2, #28
 8317 072c 1343     		orrs	r3, r3, r2
 8318 072e FB60     		str	r3, [r7, #12]
1877:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 8319              		.loc 1 1877 0 discriminator 3
 8320 0730 FB68     		ldr	r3, [r7, #12]
 8321 0732 3A6C     		ldr	r2, [r7, #64]
 8322 0734 0132     		adds	r2, r2, #1
 8323 0736 5F49     		ldr	r1, .L343
 8324 0738 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8325 073a 5205     		lsls	r2, r2, #21
 8326 073c 1343     		orrs	r3, r3, r2
 8327 073e FB60     		str	r3, [r7, #12]
1878:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 8328              		.loc 1 1878 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 182


 8329 0740 FB68     		ldr	r3, [r7, #12]
 8330 0742 3A6C     		ldr	r2, [r7, #64]
 8331 0744 0232     		adds	r2, r2, #2
 8332 0746 5B49     		ldr	r1, .L343
 8333 0748 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8334 074a 9203     		lsls	r2, r2, #14
 8335 074c 1343     		orrs	r3, r3, r2
 8336 074e FB60     		str	r3, [r7, #12]
1879:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 8337              		.loc 1 1879 0 discriminator 3
 8338 0750 FB68     		ldr	r3, [r7, #12]
 8339 0752 3A6C     		ldr	r2, [r7, #64]
 8340 0754 0332     		adds	r2, r2, #3
 8341 0756 5749     		ldr	r1, .L343
 8342 0758 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8343 075a D201     		lsls	r2, r2, #7
 8344 075c 1343     		orrs	r3, r3, r2
 8345 075e FB60     		str	r3, [r7, #12]
1880:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 8346              		.loc 1 1880 0 discriminator 3
 8347 0760 FA68     		ldr	r2, [r7, #12]
 8348 0762 3B6C     		ldr	r3, [r7, #64]
 8349 0764 0433     		adds	r3, r3, #4
 8350 0766 5349     		ldr	r1, .L343
 8351 0768 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8352 076a 03F07F03 		and	r3, r3, #127
 8353 076e 1343     		orrs	r3, r3, r2
 8354 0770 FB60     		str	r3, [r7, #12]
1881:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 8355              		.loc 1 1881 0 discriminator 3
 8356 0772 514B     		ldr	r3, .L343+4
 8357 0774 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8358 0776 1C46     		mov	r4, r3
 8359 0778 F968     		ldr	r1, [r7, #12]	@ float
 8360 077a 5048     		ldr	r0, .L343+8
 8361 077c FB6B     		ldr	r3, [r7, #60]
 8362 077e 1A46     		mov	r2, r3
 8363 0780 5200     		lsls	r2, r2, #1
 8364 0782 1A44     		add	r2, r2, r3
 8365 0784 9300     		lsls	r3, r2, #2
 8366 0786 1A46     		mov	r2, r3
 8367 0788 2346     		mov	r3, r4
 8368 078a 5B01     		lsls	r3, r3, #5
 8369 078c 2344     		add	r3, r3, r4
 8370 078e 9B00     		lsls	r3, r3, #2
 8371 0790 1A44     		add	r2, r2, r3
 8372 0792 BB6B     		ldr	r3, [r7, #56]
 8373 0794 1344     		add	r3, r3, r2
 8374 0796 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
1882:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 8375              		.loc 1 1882 0 discriminator 3
 8376 079a FB68     		ldr	r3, [r7, #12]	@ float
 8377 079c 4FF08741 		mov	r1, #1132462080
 8378 07a0 1846     		mov	r0, r3
 8379 07a2 FFF7FEFF 		bl	__aeabi_fmul
 8380 07a6 0346     		mov	r3, r0
 8381 07a8 4FF08E41 		mov	r1, #1191182336
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 183


 8382 07ac 1846     		mov	r0, r3
 8383 07ae FFF7FEFF 		bl	__aeabi_fadd
 8384 07b2 0346     		mov	r3, r0
 8385 07b4 1846     		mov	r0, r3
 8386 07b6 FFF7FEFF 		bl	__aeabi_f2uiz
 8387 07ba 0346     		mov	r3, r0
 8388 07bc 7B85     		strh	r3, [r7, #42]	@ movhi
1883:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 8389              		.loc 1 1883 0 discriminator 3
 8390 07be 7B8D     		ldrh	r3, [r7, #42]
 8391 07c0 1B0A     		lsrs	r3, r3, #8
 8392 07c2 9BB2     		uxth	r3, r3
 8393 07c4 87F82930 		strb	r3, [r7, #41]
1884:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 8394              		.loc 1 1884 0 discriminator 3
 8395 07c8 7B8D     		ldrh	r3, [r7, #42]	@ movhi
 8396 07ca 87F82830 		strb	r3, [r7, #40]
1885:main.c        ****                     
1886:main.c        ****                     
1887:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 8397              		.loc 1 1887 0 discriminator 3
 8398 07ce BB6B     		ldr	r3, [r7, #56]
 8399 07d0 9BB2     		uxth	r3, r3
 8400 07d2 5B00     		lsls	r3, r3, #1
 8401 07d4 FB84     		strh	r3, [r7, #38]	@ movhi
1888:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 8402              		.loc 1 1888 0 discriminator 3
 8403 07d6 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 8404 07d8 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 8405 07da 1344     		add	r3, r3, r2
 8406 07dc 9AB2     		uxth	r2, r3
 8407 07de 364B     		ldr	r3, .L343+4
 8408 07e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8409 07e2 9BB2     		uxth	r3, r3
 8410 07e4 1946     		mov	r1, r3	@ movhi
 8411 07e6 0901     		lsls	r1, r1, #4
 8412 07e8 1944     		add	r1, r1, r3
 8413 07ea 8900     		lsls	r1, r1, #2
 8414 07ec 1944     		add	r1, r1, r3
 8415 07ee 4900     		lsls	r1, r1, #1
 8416 07f0 0B44     		add	r3, r3, r1
 8417 07f2 5B00     		lsls	r3, r3, #1
 8418 07f4 9BB2     		uxth	r3, r3
 8419 07f6 1344     		add	r3, r3, r2
 8420 07f8 9BB2     		uxth	r3, r3
 8421 07fa 0E33     		adds	r3, r3, #14
 8422 07fc 9AB2     		uxth	r2, r3
 8423 07fe 304B     		ldr	r3, .L343+12
 8424 0800 1A80     		strh	r2, [r3]	@ movhi
1889:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 8425              		.loc 1 1889 0 discriminator 3
 8426 0802 2F4B     		ldr	r3, .L343+12
 8427 0804 1B88     		ldrh	r3, [r3]	@ movhi
 8428 0806 9AB2     		uxth	r2, r3
 8429 0808 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 8430 080c 1146     		mov	r1, r2
 8431 080e 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 184


 8432 0810 FFF7FEFF 		bl	EEPROM_WriteByte
 8433 0814 0346     		mov	r3, r0
 8434 0816 DAB2     		uxtb	r2, r3
 8435 0818 2A4B     		ldr	r3, .L343+16
 8436 081a 1A70     		strb	r2, [r3]
1890:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 8437              		.loc 1 1890 0 discriminator 3
 8438 081c 284B     		ldr	r3, .L343+12
 8439 081e 1B88     		ldrh	r3, [r3]	@ movhi
 8440 0820 9BB2     		uxth	r3, r3
 8441 0822 0133     		adds	r3, r3, #1
 8442 0824 9AB2     		uxth	r2, r3
 8443 0826 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 8444 082a 1146     		mov	r1, r2
 8445 082c 1846     		mov	r0, r3
 8446 082e FFF7FEFF 		bl	EEPROM_WriteByte
 8447 0832 0346     		mov	r3, r0
 8448 0834 DAB2     		uxtb	r2, r3
 8449 0836 234B     		ldr	r3, .L343+16
 8450 0838 1A70     		strb	r2, [r3]
1891:main.c        ****                     currentFloat++;
 8451              		.loc 1 1891 0 discriminator 3
 8452 083a 234B     		ldr	r3, .L343+20
 8453 083c 1B68     		ldr	r3, [r3]
 8454 083e 0133     		adds	r3, r3, #1
 8455 0840 214A     		ldr	r2, .L343+20
 8456 0842 1360     		str	r3, [r2]
1892:main.c        ****                     i = i+5;
 8457              		.loc 1 1892 0 discriminator 3
 8458 0844 3B6C     		ldr	r3, [r7, #64]
 8459 0846 0533     		adds	r3, r3, #5
 8460 0848 3B64     		str	r3, [r7, #64]
 8461              	.LBE54:
1872:main.c        ****                 {
 8462              		.loc 1 1872 0 discriminator 3
 8463 084a BB6B     		ldr	r3, [r7, #56]
 8464 084c 0133     		adds	r3, r3, #1
 8465 084e BB63     		str	r3, [r7, #56]
 8466              	.L321:
1872:main.c        ****                 {
 8467              		.loc 1 1872 0 is_stmt 0 discriminator 1
 8468 0850 BB6B     		ldr	r3, [r7, #56]
 8469 0852 0B2B     		cmp	r3, #11
 8470 0854 7FF662AF 		bls	.L322
 8471              	.LBE53:
 8472              	.LBE52:
1869:main.c        ****             {
 8473              		.loc 1 1869 0 is_stmt 1 discriminator 2
 8474 0858 FB6B     		ldr	r3, [r7, #60]
 8475 085a 0133     		adds	r3, r3, #1
 8476 085c FB63     		str	r3, [r7, #60]
 8477              	.L320:
1869:main.c        ****             {
 8478              		.loc 1 1869 0 is_stmt 0 discriminator 1
 8479 085e FB6B     		ldr	r3, [r7, #60]
 8480 0860 0A2B     		cmp	r3, #10
 8481 0862 7FF627AF 		bls	.L323
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 185


 8482              	.L319:
 8483              	.LBE51:
1867:main.c        ****         {
 8484              		.loc 1 1867 0 is_stmt 1
 8485 0866 194B     		ldr	r3, .L343+24
 8486 0868 1B68     		ldr	r3, [r3]
 8487 086a 3A6C     		ldr	r2, [r7, #64]
 8488 086c 9A42     		cmp	r2, r3
 8489 086e FFF41EAF 		bcc	.L324
1893:main.c        ****                 }
1894:main.c        ****                 
1895:main.c        ****             }
1896:main.c        ****         }
1897:main.c        ****                         
1898:main.c        ****         
1899:main.c        ****         messageArraySize = currentFloat;
 8490              		.loc 1 1899 0
 8491 0872 154B     		ldr	r3, .L343+20
 8492 0874 1B68     		ldr	r3, [r3]
 8493 0876 9AB2     		uxth	r2, r3
 8494 0878 154B     		ldr	r3, .L343+28
 8495 087a 1A80     		strh	r2, [r3]	@ movhi
1900:main.c        ****                     
1901:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 8496              		.loc 1 1901 0
 8497 087c 144B     		ldr	r3, .L343+28
 8498 087e 1B88     		ldrh	r3, [r3]
 8499 0880 842B     		cmp	r3, #132
 8500 0882 11D0     		beq	.L325
1902:main.c        ****         {
1903:main.c        ****             //error state
1904:main.c        ****             SPI_errors++;
 8501              		.loc 1 1904 0
 8502 0884 134B     		ldr	r3, .L343+32
 8503 0886 1B68     		ldr	r3, [r3]
 8504 0888 0133     		adds	r3, r3, #1
 8505 088a 124A     		ldr	r2, .L343+32
 8506 088c 1360     		str	r3, [r2]
1905:main.c        ****             sysexMessageInProgress = 0;
 8507              		.loc 1 1905 0
 8508 088e 124B     		ldr	r3, .L343+36
 8509 0890 0022     		movs	r2, #0
 8510 0892 1A70     		strb	r2, [r3]
1906:main.c        ****             sysexPointer = 0;
 8511              		.loc 1 1906 0
 8512 0894 0D4B     		ldr	r3, .L343+24
 8513 0896 0022     		movs	r2, #0
 8514 0898 1A60     		str	r2, [r3]
1907:main.c        ****             sendingMessage = 0;
 8515              		.loc 1 1907 0
 8516 089a 104B     		ldr	r3, .L343+40
 8517 089c 0022     		movs	r2, #0
 8518 089e 1A70     		strb	r2, [r3]
1908:main.c        ****             parseThatMF = 0;
 8519              		.loc 1 1908 0
 8520 08a0 0F4B     		ldr	r3, .L343+44
 8521 08a2 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 186


 8522 08a4 1A70     		strb	r2, [r3]
 8523 08a6 87E1     		b	.L315
 8524              	.L325:
1909:main.c        ****         } 
1910:main.c        ****         else 
1911:main.c        ****         {
1912:main.c        ****             sysexMessageInProgress = 0;
 8525              		.loc 1 1912 0
 8526 08a8 0B4B     		ldr	r3, .L343+36
 8527 08aa 0022     		movs	r2, #0
 8528 08ac 1A70     		strb	r2, [r3]
1913:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
1914:main.c        ****             
1915:main.c        ****             displayCurrentPresetNameAndCopedent();
 8529              		.loc 1 1915 0
 8530 08ae FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 8531 08b2 81E1     		b	.L315
 8532              	.L344:
 8533              		.align	2
 8534              	.L343:
 8535 08b4 00000000 		.word	sysexBuffer
 8536 08b8 00000000 		.word	copedentNumberToWrite
 8537 08bc 00000000 		.word	copedent
 8538 08c0 00000000 		.word	checkBase
 8539 08c4 00000000 		.word	checkStatus
 8540 08c8 00000000 		.word	currentFloat
 8541 08cc 00000000 		.word	sysexPointer
 8542 08d0 00000000 		.word	messageArraySize
 8543 08d4 00000000 		.word	SPI_errors
 8544 08d8 00000000 		.word	sysexMessageInProgress
 8545 08dc 00000000 		.word	sendingMessage
 8546 08e0 00000000 		.word	parseThatMF
 8547              	.L316:
 8548              	.LBE49:
1916:main.c        ****         }
1917:main.c        ****     }
1918:main.c        ****     
1919:main.c        ****     
1920:main.c        ****     else if (sysexBuffer[0] == 3) //it's a real-time parameter change
 8549              		.loc 1 1920 0
 8550 08e4 9F4B     		ldr	r3, .L345
 8551 08e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8552 08e8 032B     		cmp	r3, #3
 8553 08ea 40F08B80 		bne	.L327
 8554              	.LBB55:
1921:main.c        ****     {
1922:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8555              		.loc 1 1922 0
 8556 08ee 9E4B     		ldr	r3, .L345+4
 8557 08f0 0122     		movs	r2, #1
 8558 08f2 1A70     		strb	r2, [r3]
1923:main.c        ****         union breakFloat theVal;
1924:main.c        ****         uint32_t i = 2;
 8559              		.loc 1 1924 0
 8560 08f4 0223     		movs	r3, #2
 8561 08f6 3B62     		str	r3, [r7, #32]
1925:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 187


1926:main.c        ****         //get the parameter ID
1927:main.c        ****         theVal.u32 = 0;
 8562              		.loc 1 1927 0
 8563 08f8 0023     		movs	r3, #0
 8564 08fa BB60     		str	r3, [r7, #8]
1928:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8565              		.loc 1 1928 0
 8566 08fc BB68     		ldr	r3, [r7, #8]
 8567 08fe 9949     		ldr	r1, .L345
 8568 0900 3A6A     		ldr	r2, [r7, #32]
 8569 0902 0A44     		add	r2, r2, r1
 8570 0904 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8571 0906 1207     		lsls	r2, r2, #28
 8572 0908 1343     		orrs	r3, r3, r2
 8573 090a BB60     		str	r3, [r7, #8]
1929:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8574              		.loc 1 1929 0
 8575 090c BB68     		ldr	r3, [r7, #8]
 8576 090e 3A6A     		ldr	r2, [r7, #32]
 8577 0910 0132     		adds	r2, r2, #1
 8578 0912 9449     		ldr	r1, .L345
 8579 0914 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8580 0916 5205     		lsls	r2, r2, #21
 8581 0918 1343     		orrs	r3, r3, r2
 8582 091a BB60     		str	r3, [r7, #8]
1930:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8583              		.loc 1 1930 0
 8584 091c BB68     		ldr	r3, [r7, #8]
 8585 091e 3A6A     		ldr	r2, [r7, #32]
 8586 0920 0232     		adds	r2, r2, #2
 8587 0922 9049     		ldr	r1, .L345
 8588 0924 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8589 0926 9203     		lsls	r2, r2, #14
 8590 0928 1343     		orrs	r3, r3, r2
 8591 092a BB60     		str	r3, [r7, #8]
1931:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8592              		.loc 1 1931 0
 8593 092c BB68     		ldr	r3, [r7, #8]
 8594 092e 3A6A     		ldr	r2, [r7, #32]
 8595 0930 0332     		adds	r2, r2, #3
 8596 0932 8C49     		ldr	r1, .L345
 8597 0934 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8598 0936 D201     		lsls	r2, r2, #7
 8599 0938 1343     		orrs	r3, r3, r2
 8600 093a BB60     		str	r3, [r7, #8]
1932:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8601              		.loc 1 1932 0
 8602 093c BA68     		ldr	r2, [r7, #8]
 8603 093e 3B6A     		ldr	r3, [r7, #32]
 8604 0940 0433     		adds	r3, r3, #4
 8605 0942 8849     		ldr	r1, .L345
 8606 0944 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8607 0946 03F07F03 		and	r3, r3, #127
 8608 094a 1343     		orrs	r3, r3, r2
 8609 094c BB60     		str	r3, [r7, #8]
1933:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 8610              		.loc 1 1933 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 188


 8611 094e BB68     		ldr	r3, [r7, #8]	@ float
 8612 0950 1846     		mov	r0, r3
 8613 0952 FFF7FEFF 		bl	roundf
 8614 0956 0346     		mov	r3, r0
 8615 0958 1846     		mov	r0, r3
 8616 095a FFF7FEFF 		bl	__aeabi_f2uiz
 8617 095e 0346     		mov	r3, r0
 8618 0960 FB83     		strh	r3, [r7, #30]	@ movhi
1934:main.c        ****         singleParamToUpdateHigh = (roundedIndex << 8);
 8619              		.loc 1 1934 0
 8620 0962 824B     		ldr	r3, .L345+8
 8621 0964 0022     		movs	r2, #0
 8622 0966 1A70     		strb	r2, [r3]
1935:main.c        ****         singleParamToUpdateLow = roundedIndex & 0xff;
 8623              		.loc 1 1935 0
 8624 0968 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 8625 096a DAB2     		uxtb	r2, r3
 8626 096c 804B     		ldr	r3, .L345+12
 8627 096e 1A70     		strb	r2, [r3]
1936:main.c        ****         
1937:main.c        ****         i = i+5;
 8628              		.loc 1 1937 0
 8629 0970 3B6A     		ldr	r3, [r7, #32]
 8630 0972 0533     		adds	r3, r3, #5
 8631 0974 3B62     		str	r3, [r7, #32]
1938:main.c        ****         
1939:main.c        ****         //get the parameter value
1940:main.c        ****         theVal.u32 = 0;
 8632              		.loc 1 1940 0
 8633 0976 0023     		movs	r3, #0
 8634 0978 BB60     		str	r3, [r7, #8]
1941:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8635              		.loc 1 1941 0
 8636 097a BB68     		ldr	r3, [r7, #8]
 8637 097c 7949     		ldr	r1, .L345
 8638 097e 3A6A     		ldr	r2, [r7, #32]
 8639 0980 0A44     		add	r2, r2, r1
 8640 0982 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8641 0984 1207     		lsls	r2, r2, #28
 8642 0986 1343     		orrs	r3, r3, r2
 8643 0988 BB60     		str	r3, [r7, #8]
1942:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8644              		.loc 1 1942 0
 8645 098a BB68     		ldr	r3, [r7, #8]
 8646 098c 3A6A     		ldr	r2, [r7, #32]
 8647 098e 0132     		adds	r2, r2, #1
 8648 0990 7449     		ldr	r1, .L345
 8649 0992 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8650 0994 5205     		lsls	r2, r2, #21
 8651 0996 1343     		orrs	r3, r3, r2
 8652 0998 BB60     		str	r3, [r7, #8]
1943:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8653              		.loc 1 1943 0
 8654 099a BB68     		ldr	r3, [r7, #8]
 8655 099c 3A6A     		ldr	r2, [r7, #32]
 8656 099e 0232     		adds	r2, r2, #2
 8657 09a0 7049     		ldr	r1, .L345
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 189


 8658 09a2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8659 09a4 9203     		lsls	r2, r2, #14
 8660 09a6 1343     		orrs	r3, r3, r2
 8661 09a8 BB60     		str	r3, [r7, #8]
1944:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8662              		.loc 1 1944 0
 8663 09aa BB68     		ldr	r3, [r7, #8]
 8664 09ac 3A6A     		ldr	r2, [r7, #32]
 8665 09ae 0332     		adds	r2, r2, #3
 8666 09b0 6C49     		ldr	r1, .L345
 8667 09b2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8668 09b4 D201     		lsls	r2, r2, #7
 8669 09b6 1343     		orrs	r3, r3, r2
 8670 09b8 BB60     		str	r3, [r7, #8]
1945:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8671              		.loc 1 1945 0
 8672 09ba BA68     		ldr	r2, [r7, #8]
 8673 09bc 3B6A     		ldr	r3, [r7, #32]
 8674 09be 0433     		adds	r3, r3, #4
 8675 09c0 6849     		ldr	r1, .L345
 8676 09c2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8677 09c4 03F07F03 		and	r3, r3, #127
 8678 09c8 1343     		orrs	r3, r3, r2
 8679 09ca BB60     		str	r3, [r7, #8]
1946:main.c        ****         
1947:main.c        ****         uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 8680              		.loc 1 1947 0
 8681 09cc BB68     		ldr	r3, [r7, #8]	@ float
 8682 09ce 6949     		ldr	r1, .L345+16
 8683 09d0 1846     		mov	r0, r3
 8684 09d2 FFF7FEFF 		bl	__aeabi_fmul
 8685 09d6 0346     		mov	r3, r0
 8686 09d8 1846     		mov	r0, r3
 8687 09da FFF7FEFF 		bl	__aeabi_f2uiz
 8688 09de 0346     		mov	r3, r0
 8689 09e0 BB83     		strh	r3, [r7, #28]	@ movhi
1948:main.c        ****         singleParamValueHigh = intVal >> 8;
 8690              		.loc 1 1948 0
 8691 09e2 BB8B     		ldrh	r3, [r7, #28]
 8692 09e4 1B0A     		lsrs	r3, r3, #8
 8693 09e6 9BB2     		uxth	r3, r3
 8694 09e8 DAB2     		uxtb	r2, r3
 8695 09ea 634B     		ldr	r3, .L345+20
 8696 09ec 1A70     		strb	r2, [r3]
1949:main.c        ****         singleParamValueLow = intVal & 0xff;
 8697              		.loc 1 1949 0
 8698 09ee BB8B     		ldrh	r3, [r7, #28]	@ movhi
 8699 09f0 DAB2     		uxtb	r2, r3
 8700 09f2 624B     		ldr	r3, .L345+24
 8701 09f4 1A70     		strb	r2, [r3]
1950:main.c        ****         
1951:main.c        ****         sysexMessageInProgress = 0;
 8702              		.loc 1 1951 0
 8703 09f6 5C4B     		ldr	r3, .L345+4
 8704 09f8 0022     		movs	r2, #0
 8705 09fa 1A70     		strb	r2, [r3]
1952:main.c        ****         sendSingleParamUpdate = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 190


 8706              		.loc 1 1952 0
 8707 09fc 604B     		ldr	r3, .L345+28
 8708 09fe 0122     		movs	r2, #1
 8709 0a00 1A70     		strb	r2, [r3]
 8710              	.LBE55:
 8711 0a02 D9E0     		b	.L315
 8712              	.L327:
1953:main.c        ****     }
1954:main.c        ****     
1955:main.c        ****      else if (sysexBuffer[0] == 4) //it's a real-time mapping change
 8713              		.loc 1 1955 0
 8714 0a04 574B     		ldr	r3, .L345
 8715 0a06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8716 0a08 042B     		cmp	r3, #4
 8717 0a0a 40F0D580 		bne	.L315
 8718              	.LBB56:
1956:main.c        ****     {
1957:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8719              		.loc 1 1957 0
 8720 0a0e 564B     		ldr	r3, .L345+4
 8721 0a10 0122     		movs	r2, #1
 8722 0a12 1A70     		strb	r2, [r3]
1958:main.c        ****         union breakFloat theVal;
1959:main.c        ****         uint32_t i = 2;
 8723              		.loc 1 1959 0
 8724 0a14 0223     		movs	r3, #2
 8725 0a16 BB61     		str	r3, [r7, #24]
1960:main.c        ****         
1961:main.c        ****         //get the destination number
1962:main.c        ****         theVal.u32 = 0;
 8726              		.loc 1 1962 0
 8727 0a18 0023     		movs	r3, #0
 8728 0a1a 7B60     		str	r3, [r7, #4]
1963:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8729              		.loc 1 1963 0
 8730 0a1c 7B68     		ldr	r3, [r7, #4]
 8731 0a1e 5149     		ldr	r1, .L345
 8732 0a20 BA69     		ldr	r2, [r7, #24]
 8733 0a22 0A44     		add	r2, r2, r1
 8734 0a24 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8735 0a26 1207     		lsls	r2, r2, #28
 8736 0a28 1343     		orrs	r3, r3, r2
 8737 0a2a 7B60     		str	r3, [r7, #4]
1964:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8738              		.loc 1 1964 0
 8739 0a2c 7B68     		ldr	r3, [r7, #4]
 8740 0a2e BA69     		ldr	r2, [r7, #24]
 8741 0a30 0132     		adds	r2, r2, #1
 8742 0a32 4C49     		ldr	r1, .L345
 8743 0a34 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8744 0a36 5205     		lsls	r2, r2, #21
 8745 0a38 1343     		orrs	r3, r3, r2
 8746 0a3a 7B60     		str	r3, [r7, #4]
1965:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8747              		.loc 1 1965 0
 8748 0a3c 7B68     		ldr	r3, [r7, #4]
 8749 0a3e BA69     		ldr	r2, [r7, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 191


 8750 0a40 0232     		adds	r2, r2, #2
 8751 0a42 4849     		ldr	r1, .L345
 8752 0a44 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8753 0a46 9203     		lsls	r2, r2, #14
 8754 0a48 1343     		orrs	r3, r3, r2
 8755 0a4a 7B60     		str	r3, [r7, #4]
1966:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8756              		.loc 1 1966 0
 8757 0a4c 7B68     		ldr	r3, [r7, #4]
 8758 0a4e BA69     		ldr	r2, [r7, #24]
 8759 0a50 0332     		adds	r2, r2, #3
 8760 0a52 4449     		ldr	r1, .L345
 8761 0a54 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8762 0a56 D201     		lsls	r2, r2, #7
 8763 0a58 1343     		orrs	r3, r3, r2
 8764 0a5a 7B60     		str	r3, [r7, #4]
1967:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8765              		.loc 1 1967 0
 8766 0a5c 7A68     		ldr	r2, [r7, #4]
 8767 0a5e BB69     		ldr	r3, [r7, #24]
 8768 0a60 0433     		adds	r3, r3, #4
 8769 0a62 4049     		ldr	r1, .L345
 8770 0a64 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8771 0a66 03F07F03 		and	r3, r3, #127
 8772 0a6a 1343     		orrs	r3, r3, r2
 8773 0a6c 7B60     		str	r3, [r7, #4]
1968:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 8774              		.loc 1 1968 0
 8775 0a6e 7B68     		ldr	r3, [r7, #4]	@ float
 8776 0a70 1846     		mov	r0, r3
 8777 0a72 FFF7FEFF 		bl	roundf
 8778 0a76 0346     		mov	r3, r0
 8779 0a78 1846     		mov	r0, r3
 8780 0a7a FFF7FEFF 		bl	__aeabi_f2uiz
 8781 0a7e 0346     		mov	r3, r0
 8782 0a80 FB82     		strh	r3, [r7, #22]	@ movhi
1969:main.c        ****         mappingArray[0] = (roundedIndex << 8);
 8783              		.loc 1 1969 0
 8784 0a82 404B     		ldr	r3, .L345+32
 8785 0a84 0022     		movs	r2, #0
 8786 0a86 1A70     		strb	r2, [r3]
1970:main.c        ****         mappingArray[1] = roundedIndex & 0xff;
 8787              		.loc 1 1970 0
 8788 0a88 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 8789 0a8a DAB2     		uxtb	r2, r3
 8790 0a8c 3D4B     		ldr	r3, .L345+32
 8791 0a8e 5A70     		strb	r2, [r3, #1]
1971:main.c        ****         
1972:main.c        ****         
1973:main.c        ****         mappingArray[2] = sysexBuffer[i+5]; //slot id
 8792              		.loc 1 1973 0
 8793 0a90 BB69     		ldr	r3, [r7, #24]
 8794 0a92 0533     		adds	r3, r3, #5
 8795 0a94 334A     		ldr	r2, .L345
 8796 0a96 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8797 0a98 3A4B     		ldr	r3, .L345+32
 8798 0a9a 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 192


1974:main.c        ****         mappingArray[3] = sysexBuffer[i+6]; //mapping change type
 8799              		.loc 1 1974 0
 8800 0a9c BB69     		ldr	r3, [r7, #24]
 8801 0a9e 0633     		adds	r3, r3, #6
 8802 0aa0 304A     		ldr	r2, .L345
 8803 0aa2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8804 0aa4 374B     		ldr	r3, .L345+32
 8805 0aa6 DA70     		strb	r2, [r3, #3]
1975:main.c        ****         
1976:main.c        ****         i = i+7;
 8806              		.loc 1 1976 0
 8807 0aa8 BB69     		ldr	r3, [r7, #24]
 8808 0aaa 0733     		adds	r3, r3, #7
 8809 0aac BB61     		str	r3, [r7, #24]
1977:main.c        ****         
1978:main.c        ****         //get the parameter value
1979:main.c        ****         theVal.u32 = 0;
 8810              		.loc 1 1979 0
 8811 0aae 0023     		movs	r3, #0
 8812 0ab0 7B60     		str	r3, [r7, #4]
1980:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8813              		.loc 1 1980 0
 8814 0ab2 7B68     		ldr	r3, [r7, #4]
 8815 0ab4 2B49     		ldr	r1, .L345
 8816 0ab6 BA69     		ldr	r2, [r7, #24]
 8817 0ab8 0A44     		add	r2, r2, r1
 8818 0aba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8819 0abc 1207     		lsls	r2, r2, #28
 8820 0abe 1343     		orrs	r3, r3, r2
 8821 0ac0 7B60     		str	r3, [r7, #4]
1981:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8822              		.loc 1 1981 0
 8823 0ac2 7B68     		ldr	r3, [r7, #4]
 8824 0ac4 BA69     		ldr	r2, [r7, #24]
 8825 0ac6 0132     		adds	r2, r2, #1
 8826 0ac8 2649     		ldr	r1, .L345
 8827 0aca 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8828 0acc 5205     		lsls	r2, r2, #21
 8829 0ace 1343     		orrs	r3, r3, r2
 8830 0ad0 7B60     		str	r3, [r7, #4]
1982:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8831              		.loc 1 1982 0
 8832 0ad2 7B68     		ldr	r3, [r7, #4]
 8833 0ad4 BA69     		ldr	r2, [r7, #24]
 8834 0ad6 0232     		adds	r2, r2, #2
 8835 0ad8 2249     		ldr	r1, .L345
 8836 0ada 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8837 0adc 9203     		lsls	r2, r2, #14
 8838 0ade 1343     		orrs	r3, r3, r2
 8839 0ae0 7B60     		str	r3, [r7, #4]
1983:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8840              		.loc 1 1983 0
 8841 0ae2 7B68     		ldr	r3, [r7, #4]
 8842 0ae4 BA69     		ldr	r2, [r7, #24]
 8843 0ae6 0332     		adds	r2, r2, #3
 8844 0ae8 1E49     		ldr	r1, .L345
 8845 0aea 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 193


 8846 0aec D201     		lsls	r2, r2, #7
 8847 0aee 1343     		orrs	r3, r3, r2
 8848 0af0 7B60     		str	r3, [r7, #4]
1984:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8849              		.loc 1 1984 0
 8850 0af2 7A68     		ldr	r2, [r7, #4]
 8851 0af4 BB69     		ldr	r3, [r7, #24]
 8852 0af6 0433     		adds	r3, r3, #4
 8853 0af8 1A49     		ldr	r1, .L345
 8854 0afa CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8855 0afc 03F07F03 		and	r3, r3, #127
 8856 0b00 1343     		orrs	r3, r3, r2
 8857 0b02 7B60     		str	r3, [r7, #4]
1985:main.c        ****         if (mappingArray[3] == 0) // source id
 8858              		.loc 1 1985 0
 8859 0b04 1F4B     		ldr	r3, .L345+32
 8860 0b06 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8861 0b08 002B     		cmp	r3, #0
 8862 0b0a 10D1     		bne	.L328
1986:main.c        ****         {
1987:main.c        ****             mappingArray[4] = 0;
 8863              		.loc 1 1987 0
 8864 0b0c 1D4B     		ldr	r3, .L345+32
 8865 0b0e 0022     		movs	r2, #0
 8866 0b10 1A71     		strb	r2, [r3, #4]
1988:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 8867              		.loc 1 1988 0
 8868 0b12 7B68     		ldr	r3, [r7, #4]	@ float
 8869 0b14 1846     		mov	r0, r3
 8870 0b16 FFF7FEFF 		bl	roundf
 8871 0b1a 0346     		mov	r3, r0
 8872 0b1c 1846     		mov	r0, r3
 8873 0b1e FFF7FEFF 		bl	__aeabi_f2iz
 8874 0b22 0346     		mov	r3, r0
 8875 0b24 1BB2     		sxth	r3, r3
 8876 0b26 DAB2     		uxtb	r2, r3
 8877 0b28 164B     		ldr	r3, .L345+32
 8878 0b2a 5A71     		strb	r2, [r3, #5]
 8879 0b2c 3EE0     		b	.L329
 8880              	.L328:
1989:main.c        ****         }
1990:main.c        ****         else if (mappingArray[3] == 1) // amount
 8881              		.loc 1 1990 0
 8882 0b2e 154B     		ldr	r3, .L345+32
 8883 0b30 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8884 0b32 012B     		cmp	r3, #1
 8885 0b34 2AD1     		bne	.L330
 8886              	.LBB57:
1991:main.c        ****         {
1992:main.c        ****             int16_t intVal = (int16_t)(theVal.f * 32767.0f);
 8887              		.loc 1 1992 0
 8888 0b36 7B68     		ldr	r3, [r7, #4]	@ float
 8889 0b38 1349     		ldr	r1, .L345+36
 8890 0b3a 1846     		mov	r0, r3
 8891 0b3c FFF7FEFF 		bl	__aeabi_fmul
 8892 0b40 0346     		mov	r3, r0
 8893 0b42 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 194


 8894 0b44 FFF7FEFF 		bl	__aeabi_f2iz
 8895 0b48 0346     		mov	r3, r0
 8896 0b4a BB82     		strh	r3, [r7, #20]	@ movhi
1993:main.c        ****             mappingArray[4] = intVal >> 8;
 8897              		.loc 1 1993 0
 8898 0b4c B7F91430 		ldrsh	r3, [r7, #20]
 8899 0b50 1B12     		asrs	r3, r3, #8
 8900 0b52 1BB2     		sxth	r3, r3
 8901 0b54 DAB2     		uxtb	r2, r3
 8902 0b56 0B4B     		ldr	r3, .L345+32
 8903 0b58 1A71     		strb	r2, [r3, #4]
1994:main.c        ****             mappingArray[5] = intVal & 0xff;
 8904              		.loc 1 1994 0
 8905 0b5a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 8906 0b5c DAB2     		uxtb	r2, r3
 8907 0b5e 094B     		ldr	r3, .L345+32
 8908 0b60 5A71     		strb	r2, [r3, #5]
 8909              	.LBE57:
 8910 0b62 23E0     		b	.L329
 8911              	.L346:
 8912              		.align	2
 8913              	.L345:
 8914 0b64 00000000 		.word	sysexBuffer
 8915 0b68 00000000 		.word	sysexMessageInProgress
 8916 0b6c 00000000 		.word	singleParamToUpdateHigh
 8917 0b70 00000000 		.word	singleParamToUpdateLow
 8918 0b74 00FF7F47 		.word	1199570688
 8919 0b78 00000000 		.word	singleParamValueHigh
 8920 0b7c 00000000 		.word	singleParamValueLow
 8921 0b80 00000000 		.word	sendSingleParamUpdate
 8922 0b84 00000000 		.word	mappingArray
 8923 0b88 00FEFF46 		.word	1191181824
 8924              	.L330:
1995:main.c        ****         }
1996:main.c        ****         else // scalar source
1997:main.c        ****         {
1998:main.c        ****             mappingArray[4] = 0;
 8925              		.loc 1 1998 0
 8926 0b8c 114B     		ldr	r3, .L347
 8927 0b8e 0022     		movs	r2, #0
 8928 0b90 1A71     		strb	r2, [r3, #4]
1999:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 8929              		.loc 1 1999 0
 8930 0b92 7B68     		ldr	r3, [r7, #4]	@ float
 8931 0b94 1846     		mov	r0, r3
 8932 0b96 FFF7FEFF 		bl	roundf
 8933 0b9a 0346     		mov	r3, r0
 8934 0b9c 1846     		mov	r0, r3
 8935 0b9e FFF7FEFF 		bl	__aeabi_f2iz
 8936 0ba2 0346     		mov	r3, r0
 8937 0ba4 1BB2     		sxth	r3, r3
 8938 0ba6 DAB2     		uxtb	r2, r3
 8939 0ba8 0A4B     		ldr	r3, .L347
 8940 0baa 5A71     		strb	r2, [r3, #5]
 8941              	.L329:
2000:main.c        ****         }
2001:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 195


2002:main.c        ****         
2003:main.c        ****         sysexMessageInProgress = 0;
 8942              		.loc 1 2003 0
 8943 0bac 0A4B     		ldr	r3, .L347+4
 8944 0bae 0022     		movs	r2, #0
 8945 0bb0 1A70     		strb	r2, [r3]
2004:main.c        ****         sendMappingChangeUpdate = 1;
 8946              		.loc 1 2004 0
 8947 0bb2 0A4B     		ldr	r3, .L347+8
 8948 0bb4 0122     		movs	r2, #1
 8949 0bb6 1A70     		strb	r2, [r3]
 8950              	.L315:
 8951              	.LBE56:
2005:main.c        ****     }
2006:main.c        **** 
2007:main.c        ****     parsingSysex = 0;
 8952              		.loc 1 2007 0
 8953 0bb8 094B     		ldr	r3, .L347+12
 8954 0bba 0022     		movs	r2, #0
 8955 0bbc 1A70     		strb	r2, [r3]
2008:main.c        ****     sysexPointer = 0;
 8956              		.loc 1 2008 0
 8957 0bbe 094B     		ldr	r3, .L347+16
 8958 0bc0 0022     		movs	r2, #0
 8959 0bc2 1A60     		str	r2, [r3]
2009:main.c        ****     parseThatMF = 0;
 8960              		.loc 1 2009 0
 8961 0bc4 084B     		ldr	r3, .L347+20
 8962 0bc6 0022     		movs	r2, #0
 8963 0bc8 1A70     		strb	r2, [r3]
2010:main.c        **** }
 8964              		.loc 1 2010 0
 8965 0bca 00BF     		nop
 8966 0bcc 5437     		adds	r7, r7, #84
 8967              		.cfi_def_cfa_offset 12
 8968 0bce BD46     		mov	sp, r7
 8969              		.cfi_def_cfa_register 13
 8970              		@ sp needed
 8971 0bd0 90BD     		pop	{r4, r7, pc}
 8972              	.L348:
 8973 0bd2 00BF     		.align	2
 8974              	.L347:
 8975 0bd4 00000000 		.word	mappingArray
 8976 0bd8 00000000 		.word	sysexMessageInProgress
 8977 0bdc 00000000 		.word	sendMappingChangeUpdate
 8978 0be0 00000000 		.word	parsingSysex
 8979 0be4 00000000 		.word	sysexPointer
 8980 0be8 00000000 		.word	parseThatMF
 8981              		.cfi_endproc
 8982              	.LFE90:
 8983              		.size	parseSysex, .-parseSysex
 8984              		.comm	tempMIDI,4,4
 8985              		.global	firstSysex
 8986              		.bss
 8987              		.type	firstSysex, %object
 8988              		.size	firstSysex, 1
 8989              	firstSysex:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 196


 8990 0104 00       		.space	1
 8991              		.global	sysexPointerMask
 8992              		.section	.rodata
 8993              		.align	1
 8994              		.type	sysexPointerMask, %object
 8995              		.size	sysexPointerMask, 2
 8996              	sysexPointerMask:
 8997 0428 FF07     		.short	2047
 8998              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 8999              		.align	2
 9000              		.global	USB_callbackLocalMidiEvent
 9001              		.thumb
 9002              		.thumb_func
 9003              		.type	USB_callbackLocalMidiEvent, %function
 9004              	USB_callbackLocalMidiEvent:
 9005              	.LFB91:
2011:main.c        **** 
2012:main.c        **** volatile uint8_t tempMIDI[4];
2013:main.c        **** volatile uint8_t firstSysex = 0;
2014:main.c        **** const uint16_t sysexPointerMask = 2047;
2015:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2016:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2017:main.c        **** {   
 9006              		.loc 1 2017 0
 9007              		.cfi_startproc
 9008              		@ args = 0, pretend = 0, frame = 16
 9009              		@ frame_needed = 1, uses_anonymous_args = 0
 9010 0000 80B5     		push	{r7, lr}
 9011              		.cfi_def_cfa_offset 8
 9012              		.cfi_offset 7, -8
 9013              		.cfi_offset 14, -4
 9014 0002 84B0     		sub	sp, sp, #16
 9015              		.cfi_def_cfa_offset 24
 9016 0004 00AF     		add	r7, sp, #0
 9017              		.cfi_def_cfa_register 7
 9018 0006 0346     		mov	r3, r0
 9019 0008 3960     		str	r1, [r7]
 9020 000a FB71     		strb	r3, [r7, #7]
2018:main.c        ****     tempMIDI[0] = midiMsg[0];
 9021              		.loc 1 2018 0
 9022 000c 3B68     		ldr	r3, [r7]
 9023 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9024 0010 484B     		ldr	r3, .L359
 9025 0012 1A70     		strb	r2, [r3]
2019:main.c        ****     tempMIDI[1] = midiMsg[1];
 9026              		.loc 1 2019 0
 9027 0014 3B68     		ldr	r3, [r7]
 9028 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 9029 0018 464B     		ldr	r3, .L359
 9030 001a 5A70     		strb	r2, [r3, #1]
2020:main.c        ****      tempMIDI[2] = midiMsg[2];
 9031              		.loc 1 2020 0
 9032 001c 3B68     		ldr	r3, [r7]
 9033 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 9034 0020 444B     		ldr	r3, .L359
 9035 0022 9A70     		strb	r2, [r3, #2]
2021:main.c        ****      tempMIDI[3] = midiMsg[3];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 197


 9036              		.loc 1 2021 0
 9037 0024 3B68     		ldr	r3, [r7]
 9038 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9039 0028 424B     		ldr	r3, .L359
 9040 002a DA70     		strb	r2, [r3, #3]
2022:main.c        ****     //check that we got here
2023:main.c        ****     
2024:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 9041              		.loc 1 2024 0
 9042 002c 424B     		ldr	r3, .L359+4
 9043 002e 1B78     		ldrb	r3, [r3]
 9044 0030 DBB2     		uxtb	r3, r3
 9045 0032 002B     		cmp	r3, #0
 9046 0034 7BD0     		beq	.L349
 9047              		.loc 1 2024 0 is_stmt 0 discriminator 1
 9048 0036 FFF7FEFF 		bl	USB_VBusPresent
 9049 003a 0346     		mov	r3, r0
 9050 003c 002B     		cmp	r3, #0
 9051 003e 76D0     		beq	.L349
2025:main.c        ****     {
2026:main.c        ****         if (receivingSysex)
 9052              		.loc 1 2026 0 is_stmt 1
 9053 0040 3E4B     		ldr	r3, .L359+8
 9054 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9055 0044 002B     		cmp	r3, #0
 9056 0046 29D0     		beq	.L351
 9057              	.LBB58:
2027:main.c        ****         {
2028:main.c        ****             for (int i = 0; i < 3; i++)
 9058              		.loc 1 2028 0
 9059 0048 0023     		movs	r3, #0
 9060 004a FB60     		str	r3, [r7, #12]
 9061 004c 22E0     		b	.L352
 9062              	.L355:
2029:main.c        ****             {
2030:main.c        ****                 if (midiMsg[i] < 128)
 9063              		.loc 1 2030 0
 9064 004e FB68     		ldr	r3, [r7, #12]
 9065 0050 3A68     		ldr	r2, [r7]
 9066 0052 1344     		add	r3, r3, r2
 9067 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9068 0056 5BB2     		sxtb	r3, r3
 9069 0058 002B     		cmp	r3, #0
 9070 005a 0EDB     		blt	.L353
2031:main.c        ****                 {
2032:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 9071              		.loc 1 2032 0
 9072 005c 384B     		ldr	r3, .L359+12
 9073 005e 1B68     		ldr	r3, [r3]
 9074 0060 5A1C     		adds	r2, r3, #1
 9075 0062 3749     		ldr	r1, .L359+12
 9076 0064 0A60     		str	r2, [r1]
 9077 0066 40F2FF72 		movw	r2, #2047
 9078 006a 1340     		ands	r3, r3, r2
 9079 006c FA68     		ldr	r2, [r7, #12]
 9080 006e 3968     		ldr	r1, [r7]
 9081 0070 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 198


 9082 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 9083 0074 334A     		ldr	r2, .L359+16
 9084 0076 D154     		strb	r1, [r2, r3]
 9085 0078 09E0     		b	.L354
 9086              	.L353:
2033:main.c        ****                 }
2034:main.c        ****                 else
2035:main.c        ****                 {
2036:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 9087              		.loc 1 2036 0
 9088 007a FB68     		ldr	r3, [r7, #12]
 9089 007c 3A68     		ldr	r2, [r7]
 9090 007e 1344     		add	r3, r3, r2
 9091 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9092 0082 F72B     		cmp	r3, #247
 9093 0084 03D1     		bne	.L354
2037:main.c        ****                     {
2038:main.c        ****                         receivingSysex = 0;
 9094              		.loc 1 2038 0
 9095 0086 2D4B     		ldr	r3, .L359+8
 9096 0088 0022     		movs	r2, #0
 9097 008a 1A70     		strb	r2, [r3]
2039:main.c        ****                         //parseSysex();
2040:main.c        ****                         return;
 9098              		.loc 1 2040 0
 9099 008c 4FE0     		b	.L349
 9100              	.L354:
2028:main.c        ****             {
 9101              		.loc 1 2028 0 discriminator 2
 9102 008e FB68     		ldr	r3, [r7, #12]
 9103 0090 0133     		adds	r3, r3, #1
 9104 0092 FB60     		str	r3, [r7, #12]
 9105              	.L352:
2028:main.c        ****             {
 9106              		.loc 1 2028 0 is_stmt 0 discriminator 1
 9107 0094 FB68     		ldr	r3, [r7, #12]
 9108 0096 022B     		cmp	r3, #2
 9109 0098 D9DD     		ble	.L355
 9110 009a 48E0     		b	.L349
 9111              	.L351:
 9112              	.LBE58:
2041:main.c        ****                      }
2042:main.c        ****                 }
2043:main.c        ****             }
2044:main.c        ****         }
2045:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 9113              		.loc 1 2045 0 is_stmt 1
 9114 009c 3B68     		ldr	r3, [r7]
 9115 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9116 00a0 F02B     		cmp	r3, #240
 9117 00a2 44D1     		bne	.L349
2046:main.c        ****         {
2047:main.c        ****             if (!parsingSysex)
 9118              		.loc 1 2047 0
 9119 00a4 284B     		ldr	r3, .L359+20
 9120 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9121 00a8 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 199


 9122 00aa 40D1     		bne	.L349
2048:main.c        ****             {
2049:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 9123              		.loc 1 2049 0
 9124 00ac 3B68     		ldr	r3, [r7]
 9125 00ae 0133     		adds	r3, r3, #1
 9126 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9127 00b2 7E2B     		cmp	r3, #126
 9128 00b4 03D1     		bne	.L357
2050:main.c        ****                 {
2051:main.c        ****                     parseThatMF = 1;
 9129              		.loc 1 2051 0
 9130 00b6 254B     		ldr	r3, .L359+24
 9131 00b8 0122     		movs	r2, #1
 9132 00ba 1A70     		strb	r2, [r3]
 9133 00bc 37E0     		b	.L349
 9134              	.L357:
2052:main.c        **** 
2053:main.c        ****                     //sysexPointer = 0;
2054:main.c        ****                 }
2055:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2 || midiMsg[1] == 3 |
 9135              		.loc 1 2055 0
 9136 00be 3B68     		ldr	r3, [r7]
 9137 00c0 0133     		adds	r3, r3, #1
 9138 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9139 00c4 002B     		cmp	r3, #0
 9140 00c6 13D0     		beq	.L358
 9141              		.loc 1 2055 0 is_stmt 0 discriminator 1
 9142 00c8 3B68     		ldr	r3, [r7]
 9143 00ca 0133     		adds	r3, r3, #1
 9144 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9145 00ce 012B     		cmp	r3, #1
 9146 00d0 0ED0     		beq	.L358
 9147              		.loc 1 2055 0 discriminator 2
 9148 00d2 3B68     		ldr	r3, [r7]
 9149 00d4 0133     		adds	r3, r3, #1
 9150 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9151 00d8 022B     		cmp	r3, #2
 9152 00da 09D0     		beq	.L358
 9153              		.loc 1 2055 0 discriminator 3
 9154 00dc 3B68     		ldr	r3, [r7]
 9155 00de 0133     		adds	r3, r3, #1
 9156 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9157 00e2 032B     		cmp	r3, #3
 9158 00e4 04D0     		beq	.L358
 9159              		.loc 1 2055 0 discriminator 4
 9160 00e6 3B68     		ldr	r3, [r7]
 9161 00e8 0133     		adds	r3, r3, #1
 9162 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9163 00ec 042B     		cmp	r3, #4
 9164 00ee 1ED1     		bne	.L349
 9165              	.L358:
2056:main.c        ****                 {
2057:main.c        ****                     receivingSysex = 1;
 9166              		.loc 1 2057 0 is_stmt 1
 9167 00f0 124B     		ldr	r3, .L359+8
 9168 00f2 0122     		movs	r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 200


 9169 00f4 1A70     		strb	r2, [r3]
2058:main.c        ****                     
2059:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2060:main.c        ****                     if (sysexPointer == 0)
 9170              		.loc 1 2060 0
 9171 00f6 124B     		ldr	r3, .L359+12
 9172 00f8 1B68     		ldr	r3, [r3]
 9173 00fa 002B     		cmp	r3, #0
 9174 00fc 17D1     		bne	.L349
2061:main.c        ****                     {
2062:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 9175              		.loc 1 2062 0
 9176 00fe 104B     		ldr	r3, .L359+12
 9177 0100 1B68     		ldr	r3, [r3]
 9178 0102 5A1C     		adds	r2, r3, #1
 9179 0104 0E49     		ldr	r1, .L359+12
 9180 0106 0A60     		str	r2, [r1]
 9181 0108 40F2FF72 		movw	r2, #2047
 9182 010c 1340     		ands	r3, r3, r2
 9183 010e 3A68     		ldr	r2, [r7]
 9184 0110 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 9185 0112 0C4A     		ldr	r2, .L359+16
 9186 0114 D154     		strb	r1, [r2, r3]
2063:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 9187              		.loc 1 2063 0
 9188 0116 0A4B     		ldr	r3, .L359+12
 9189 0118 1B68     		ldr	r3, [r3]
 9190 011a 5A1C     		adds	r2, r3, #1
 9191 011c 0849     		ldr	r1, .L359+12
 9192 011e 0A60     		str	r2, [r1]
 9193 0120 40F2FF72 		movw	r2, #2047
 9194 0124 1340     		ands	r3, r3, r2
 9195 0126 3A68     		ldr	r2, [r7]
 9196 0128 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 9197 012a 064A     		ldr	r2, .L359+16
 9198 012c D154     		strb	r1, [r2, r3]
 9199              	.L349:
2064:main.c        ****                     }
2065:main.c        ****                 }
2066:main.c        ****             }
2067:main.c        ****         }
2068:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2069:main.c        ****     }
2070:main.c        **** }    
 9200              		.loc 1 2070 0
 9201 012e 1037     		adds	r7, r7, #16
 9202              		.cfi_def_cfa_offset 8
 9203 0130 BD46     		mov	sp, r7
 9204              		.cfi_def_cfa_register 13
 9205              		@ sp needed
 9206 0132 80BD     		pop	{r7, pc}
 9207              	.L360:
 9208              		.align	2
 9209              	.L359:
 9210 0134 00000000 		.word	tempMIDI
 9211 0138 00000000 		.word	USB_active
 9212 013c 00000000 		.word	receivingSysex
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 201


 9213 0140 00000000 		.word	sysexPointer
 9214 0144 00000000 		.word	sysexBuffer
 9215 0148 00000000 		.word	parsingSysex
 9216 014c 00000000 		.word	parseThatMF
 9217              		.cfi_endproc
 9218              	.LFE91:
 9219              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 9220              		.text
 9221              	.Letext0:
 9222              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9223              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9224              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 9225              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 9226              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9227              		.file 7 "oled.h"
 9228              		.file 8 "main.h"
 9229              		.file 9 "Generated_Source\\PSoC5/USB_midi.h"
 9230              		.file 10 "Generated_Source\\PSoC5/Em_EEPROM.h"
 9231              		.file 11 "Generated_Source\\PSoC5/I2C_1.h"
 9232              		.file 12 "Generated_Source\\PSoC5/core_cm3.h"
 9233              		.file 13 "Generated_Source\\PSoC5/Decoder_1.h"
 9234              		.section	.debug_info,"",%progbits
 9235              	.Ldebug_info0:
 9236 0000 B61D0000 		.4byte	0x1db6
 9237 0004 0400     		.2byte	0x4
 9238 0006 00000000 		.4byte	.Ldebug_abbrev0
 9239 000a 04       		.byte	0x4
 9240 000b 01       		.uleb128 0x1
 9241 000c 7F090000 		.4byte	.LASF320
 9242 0010 0C       		.byte	0xc
 9243 0011 E30A0000 		.4byte	.LASF321
 9244 0015 9F070000 		.4byte	.LASF322
 9245 0019 00000000 		.4byte	.Ldebug_ranges0+0
 9246 001d 00000000 		.4byte	0
 9247 0021 00000000 		.4byte	.Ldebug_line0
 9248 0025 02       		.uleb128 0x2
 9249 0026 400D0000 		.4byte	.LASF0
 9250 002a 02       		.byte	0x2
 9251 002b 1B       		.byte	0x1b
 9252 002c 30000000 		.4byte	0x30
 9253 0030 03       		.uleb128 0x3
 9254 0031 01       		.byte	0x1
 9255 0032 06       		.byte	0x6
 9256 0033 CA030000 		.4byte	.LASF2
 9257 0037 02       		.uleb128 0x2
 9258 0038 27020000 		.4byte	.LASF1
 9259 003c 02       		.byte	0x2
 9260 003d 1D       		.byte	0x1d
 9261 003e 42000000 		.4byte	0x42
 9262 0042 03       		.uleb128 0x3
 9263 0043 01       		.byte	0x1
 9264 0044 08       		.byte	0x8
 9265 0045 51040000 		.4byte	.LASF3
 9266 0049 02       		.uleb128 0x2
 9267 004a 6E0E0000 		.4byte	.LASF4
 9268 004e 02       		.byte	0x2
 9269 004f 29       		.byte	0x29
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 202


 9270 0050 54000000 		.4byte	0x54
 9271 0054 03       		.uleb128 0x3
 9272 0055 02       		.byte	0x2
 9273 0056 05       		.byte	0x5
 9274 0057 740F0000 		.4byte	.LASF5
 9275 005b 02       		.uleb128 0x2
 9276 005c 41050000 		.4byte	.LASF6
 9277 0060 02       		.byte	0x2
 9278 0061 2B       		.byte	0x2b
 9279 0062 66000000 		.4byte	0x66
 9280 0066 03       		.uleb128 0x3
 9281 0067 02       		.byte	0x2
 9282 0068 07       		.byte	0x7
 9283 0069 3F110000 		.4byte	.LASF7
 9284 006d 02       		.uleb128 0x2
 9285 006e 79110000 		.4byte	.LASF8
 9286 0072 02       		.byte	0x2
 9287 0073 3F       		.byte	0x3f
 9288 0074 78000000 		.4byte	0x78
 9289 0078 03       		.uleb128 0x3
 9290 0079 04       		.byte	0x4
 9291 007a 05       		.byte	0x5
 9292 007b A0020000 		.4byte	.LASF9
 9293 007f 02       		.uleb128 0x2
 9294 0080 760A0000 		.4byte	.LASF10
 9295 0084 02       		.byte	0x2
 9296 0085 41       		.byte	0x41
 9297 0086 8A000000 		.4byte	0x8a
 9298 008a 03       		.uleb128 0x3
 9299 008b 04       		.byte	0x4
 9300 008c 07       		.byte	0x7
 9301 008d 3F080000 		.4byte	.LASF11
 9302 0091 03       		.uleb128 0x3
 9303 0092 08       		.byte	0x8
 9304 0093 05       		.byte	0x5
 9305 0094 810A0000 		.4byte	.LASF12
 9306 0098 03       		.uleb128 0x3
 9307 0099 08       		.byte	0x8
 9308 009a 07       		.byte	0x7
 9309 009b 5E0D0000 		.4byte	.LASF13
 9310 009f 04       		.uleb128 0x4
 9311 00a0 04       		.byte	0x4
 9312 00a1 05       		.byte	0x5
 9313 00a2 696E7400 		.ascii	"int\000"
 9314 00a6 03       		.uleb128 0x3
 9315 00a7 04       		.byte	0x4
 9316 00a8 07       		.byte	0x7
 9317 00a9 A80B0000 		.4byte	.LASF14
 9318 00ad 02       		.uleb128 0x2
 9319 00ae 13000000 		.4byte	.LASF15
 9320 00b2 03       		.byte	0x3
 9321 00b3 14       		.byte	0x14
 9322 00b4 25000000 		.4byte	0x25
 9323 00b8 02       		.uleb128 0x2
 9324 00b9 D6030000 		.4byte	.LASF16
 9325 00bd 03       		.byte	0x3
 9326 00be 18       		.byte	0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 203


 9327 00bf 37000000 		.4byte	0x37
 9328 00c3 02       		.uleb128 0x2
 9329 00c4 D60F0000 		.4byte	.LASF17
 9330 00c8 03       		.byte	0x3
 9331 00c9 20       		.byte	0x20
 9332 00ca 49000000 		.4byte	0x49
 9333 00ce 02       		.uleb128 0x2
 9334 00cf 750D0000 		.4byte	.LASF18
 9335 00d3 03       		.byte	0x3
 9336 00d4 24       		.byte	0x24
 9337 00d5 5B000000 		.4byte	0x5b
 9338 00d9 02       		.uleb128 0x2
 9339 00da A0000000 		.4byte	.LASF19
 9340 00de 03       		.byte	0x3
 9341 00df 2C       		.byte	0x2c
 9342 00e0 6D000000 		.4byte	0x6d
 9343 00e4 02       		.uleb128 0x2
 9344 00e5 05110000 		.4byte	.LASF20
 9345 00e9 03       		.byte	0x3
 9346 00ea 30       		.byte	0x30
 9347 00eb 7F000000 		.4byte	0x7f
 9348 00ef 05       		.uleb128 0x5
 9349 00f0 450F0000 		.4byte	.LASF21
 9350 00f4 04       		.byte	0x4
 9351 00f5 E901     		.2byte	0x1e9
 9352 00f7 42000000 		.4byte	0x42
 9353 00fb 05       		.uleb128 0x5
 9354 00fc E1110000 		.4byte	.LASF22
 9355 0100 04       		.byte	0x4
 9356 0101 EA01     		.2byte	0x1ea
 9357 0103 66000000 		.4byte	0x66
 9358 0107 05       		.uleb128 0x5
 9359 0108 E4000000 		.4byte	.LASF23
 9360 010c 04       		.byte	0x4
 9361 010d EB01     		.2byte	0x1eb
 9362 010f 8A000000 		.4byte	0x8a
 9363 0113 03       		.uleb128 0x3
 9364 0114 04       		.byte	0x4
 9365 0115 04       		.byte	0x4
 9366 0116 530B0000 		.4byte	.LASF24
 9367 011a 03       		.uleb128 0x3
 9368 011b 08       		.byte	0x8
 9369 011c 04       		.byte	0x4
 9370 011d DC0A0000 		.4byte	.LASF25
 9371 0121 03       		.uleb128 0x3
 9372 0122 01       		.byte	0x1
 9373 0123 08       		.byte	0x8
 9374 0124 14050000 		.4byte	.LASF26
 9375 0128 05       		.uleb128 0x5
 9376 0129 280C0000 		.4byte	.LASF27
 9377 012d 04       		.byte	0x4
 9378 012e 8B02     		.2byte	0x28b
 9379 0130 8A000000 		.4byte	0x8a
 9380 0134 05       		.uleb128 0x5
 9381 0135 000E0000 		.4byte	.LASF28
 9382 0139 04       		.byte	0x4
 9383 013a 9302     		.2byte	0x293
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 204


 9384 013c 40010000 		.4byte	0x140
 9385 0140 06       		.uleb128 0x6
 9386 0141 EF000000 		.4byte	0xef
 9387 0145 03       		.uleb128 0x3
 9388 0146 08       		.byte	0x8
 9389 0147 04       		.byte	0x4
 9390 0148 E10C0000 		.4byte	.LASF29
 9391 014c 03       		.uleb128 0x3
 9392 014d 04       		.byte	0x4
 9393 014e 07       		.byte	0x7
 9394 014f 31000000 		.4byte	.LASF30
 9395 0153 07       		.uleb128 0x7
 9396 0154 1C       		.byte	0x1c
 9397 0155 05       		.byte	0x5
 9398 0156 1601     		.2byte	0x116
 9399 0158 C5010000 		.4byte	0x1c5
 9400 015c 08       		.uleb128 0x8
 9401 015d DE030000 		.4byte	.LASF31
 9402 0161 05       		.byte	0x5
 9403 0162 1B01     		.2byte	0x11b
 9404 0164 07010000 		.4byte	0x107
 9405 0168 00       		.byte	0
 9406 0169 08       		.uleb128 0x8
 9407 016a ED010000 		.4byte	.LASF32
 9408 016e 05       		.byte	0x5
 9409 016f 2001     		.2byte	0x120
 9410 0171 07010000 		.4byte	0x107
 9411 0175 04       		.byte	0x4
 9412 0176 08       		.uleb128 0x8
 9413 0177 B2110000 		.4byte	.LASF33
 9414 017b 05       		.byte	0x5
 9415 017c 2301     		.2byte	0x123
 9416 017e 07010000 		.4byte	0x107
 9417 0182 08       		.byte	0x8
 9418 0183 08       		.uleb128 0x8
 9419 0184 EB0F0000 		.4byte	.LASF34
 9420 0188 05       		.byte	0x5
 9421 0189 2601     		.2byte	0x126
 9422 018b 07010000 		.4byte	0x107
 9423 018f 0C       		.byte	0xc
 9424 0190 08       		.uleb128 0x8
 9425 0191 0A100000 		.4byte	.LASF35
 9426 0195 05       		.byte	0x5
 9427 0196 2B01     		.2byte	0x12b
 9428 0198 07010000 		.4byte	0x107
 9429 019c 10       		.byte	0x10
 9430 019d 08       		.uleb128 0x8
 9431 019e 19020000 		.4byte	.LASF36
 9432 01a2 05       		.byte	0x5
 9433 01a3 2E01     		.2byte	0x12e
 9434 01a5 EF000000 		.4byte	0xef
 9435 01a9 14       		.byte	0x14
 9436 01aa 08       		.uleb128 0x8
 9437 01ab C30A0000 		.4byte	.LASF37
 9438 01af 05       		.byte	0x5
 9439 01b0 3301     		.2byte	0x133
 9440 01b2 EF000000 		.4byte	0xef
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 205


 9441 01b6 15       		.byte	0x15
 9442 01b7 08       		.uleb128 0x8
 9443 01b8 DA010000 		.4byte	.LASF38
 9444 01bc 05       		.byte	0x5
 9445 01bd 3601     		.2byte	0x136
 9446 01bf 07010000 		.4byte	0x107
 9447 01c3 18       		.byte	0x18
 9448 01c4 00       		.byte	0
 9449 01c5 05       		.uleb128 0x5
 9450 01c6 27080000 		.4byte	.LASF39
 9451 01ca 05       		.byte	0x5
 9452 01cb 3701     		.2byte	0x137
 9453 01cd 53010000 		.4byte	0x153
 9454 01d1 09       		.uleb128 0x9
 9455 01d2 01       		.byte	0x1
 9456 01d3 42000000 		.4byte	0x42
 9457 01d7 05       		.byte	0x5
 9458 01d8 5401     		.2byte	0x154
 9459 01da FD010000 		.4byte	0x1fd
 9460 01de 0A       		.uleb128 0xa
 9461 01df 8B000000 		.4byte	.LASF40
 9462 01e3 00       		.byte	0
 9463 01e4 0A       		.uleb128 0xa
 9464 01e5 58060000 		.4byte	.LASF41
 9465 01e9 01       		.byte	0x1
 9466 01ea 0A       		.uleb128 0xa
 9467 01eb C0010000 		.4byte	.LASF42
 9468 01ef 02       		.byte	0x2
 9469 01f0 0A       		.uleb128 0xa
 9470 01f1 0D040000 		.4byte	.LASF43
 9471 01f5 03       		.byte	0x3
 9472 01f6 0A       		.uleb128 0xa
 9473 01f7 0B090000 		.4byte	.LASF44
 9474 01fb 04       		.byte	0x4
 9475 01fc 00       		.byte	0
 9476 01fd 05       		.uleb128 0x5
 9477 01fe 5A010000 		.4byte	.LASF45
 9478 0202 05       		.byte	0x5
 9479 0203 5A01     		.2byte	0x15a
 9480 0205 D1010000 		.4byte	0x1d1
 9481 0209 06       		.uleb128 0x6
 9482 020a B8000000 		.4byte	0xb8
 9483 020e 06       		.uleb128 0x6
 9484 020f CE000000 		.4byte	0xce
 9485 0213 02       		.uleb128 0x2
 9486 0214 B9050000 		.4byte	.LASF46
 9487 0218 06       		.byte	0x6
 9488 0219 6C       		.byte	0x6c
 9489 021a A6000000 		.4byte	0xa6
 9490 021e 0B       		.uleb128 0xb
 9491 021f 23040000 		.4byte	.LASF52
 9492 0223 01       		.byte	0x1
 9493 0224 42000000 		.4byte	0x42
 9494 0228 07       		.byte	0x7
 9495 0229 1D       		.byte	0x1d
 9496 022a 4D020000 		.4byte	0x24d
 9497 022e 0A       		.uleb128 0xa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 206


 9498 022f 290A0000 		.4byte	.LASF47
 9499 0233 00       		.byte	0
 9500 0234 0A       		.uleb128 0xa
 9501 0235 61030000 		.4byte	.LASF48
 9502 0239 01       		.byte	0x1
 9503 023a 0A       		.uleb128 0xa
 9504 023b BA000000 		.4byte	.LASF49
 9505 023f 02       		.byte	0x2
 9506 0240 0A       		.uleb128 0xa
 9507 0241 DC060000 		.4byte	.LASF50
 9508 0245 03       		.byte	0x3
 9509 0246 0A       		.uleb128 0xa
 9510 0247 52010000 		.4byte	.LASF51
 9511 024b 04       		.byte	0x4
 9512 024c 00       		.byte	0
 9513 024d 0B       		.uleb128 0xb
 9514 024e A9060000 		.4byte	.LASF53
 9515 0252 01       		.byte	0x1
 9516 0253 42000000 		.4byte	0x42
 9517 0257 08       		.byte	0x8
 9518 0258 86       		.byte	0x86
 9519 0259 82020000 		.4byte	0x282
 9520 025d 0A       		.uleb128 0xa
 9521 025e 9E060000 		.4byte	.LASF54
 9522 0262 00       		.byte	0
 9523 0263 0A       		.uleb128 0xa
 9524 0264 FD040000 		.4byte	.LASF55
 9525 0268 01       		.byte	0x1
 9526 0269 0A       		.uleb128 0xa
 9527 026a 780E0000 		.4byte	.LASF56
 9528 026e 02       		.byte	0x2
 9529 026f 0A       		.uleb128 0xa
 9530 0270 1B0E0000 		.4byte	.LASF57
 9531 0274 03       		.byte	0x3
 9532 0275 0A       		.uleb128 0xa
 9533 0276 61110000 		.4byte	.LASF58
 9534 027a 04       		.byte	0x4
 9535 027b 0A       		.uleb128 0xa
 9536 027c 45020000 		.4byte	.LASF59
 9537 0280 05       		.byte	0x5
 9538 0281 00       		.byte	0
 9539 0282 0C       		.uleb128 0xc
 9540 0283 B10D0000 		.4byte	.LASF323
 9541 0287 04       		.byte	0x4
 9542 0288 01       		.byte	0x1
 9543 0289 80       		.byte	0x80
 9544 028a AC020000 		.4byte	0x2ac
 9545 028e 0D       		.uleb128 0xd
 9546 028f 6600     		.ascii	"f\000"
 9547 0291 01       		.byte	0x1
 9548 0292 81       		.byte	0x81
 9549 0293 13010000 		.4byte	0x113
 9550 0297 0D       		.uleb128 0xd
 9551 0298 6200     		.ascii	"b\000"
 9552 029a 01       		.byte	0x1
 9553 029b 82       		.byte	0x82
 9554 029c AC020000 		.4byte	0x2ac
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 207


 9555 02a0 0D       		.uleb128 0xd
 9556 02a1 75333200 		.ascii	"u32\000"
 9557 02a5 01       		.byte	0x1
 9558 02a6 83       		.byte	0x83
 9559 02a7 E4000000 		.4byte	0xe4
 9560 02ab 00       		.byte	0
 9561 02ac 0E       		.uleb128 0xe
 9562 02ad B8000000 		.4byte	0xb8
 9563 02b1 BC020000 		.4byte	0x2bc
 9564 02b5 0F       		.uleb128 0xf
 9565 02b6 4C010000 		.4byte	0x14c
 9566 02ba 03       		.byte	0x3
 9567 02bb 00       		.byte	0
 9568 02bc 10       		.uleb128 0x10
 9569 02bd 6D617000 		.ascii	"map\000"
 9570 02c1 01       		.byte	0x1
 9571 02c2 1301     		.2byte	0x113
 9572 02c4 13010000 		.4byte	0x113
 9573 02c8 00000000 		.4byte	.LFB64
 9574 02cc 56000000 		.4byte	.LFE64-.LFB64
 9575 02d0 01       		.uleb128 0x1
 9576 02d1 9C       		.byte	0x9c
 9577 02d2 22030000 		.4byte	0x322
 9578 02d6 11       		.uleb128 0x11
 9579 02d7 CE040000 		.4byte	.LASF60
 9580 02db 01       		.byte	0x1
 9581 02dc 1301     		.2byte	0x113
 9582 02de 13010000 		.4byte	0x113
 9583 02e2 02       		.uleb128 0x2
 9584 02e3 91       		.byte	0x91
 9585 02e4 6C       		.sleb128 -20
 9586 02e5 11       		.uleb128 0x11
 9587 02e6 01020000 		.4byte	.LASF61
 9588 02ea 01       		.byte	0x1
 9589 02eb 1301     		.2byte	0x113
 9590 02ed 13010000 		.4byte	0x113
 9591 02f1 02       		.uleb128 0x2
 9592 02f2 91       		.byte	0x91
 9593 02f3 68       		.sleb128 -24
 9594 02f4 11       		.uleb128 0x11
 9595 02f5 54090000 		.4byte	.LASF62
 9596 02f9 01       		.byte	0x1
 9597 02fa 1301     		.2byte	0x113
 9598 02fc 13010000 		.4byte	0x113
 9599 0300 02       		.uleb128 0x2
 9600 0301 91       		.byte	0x91
 9601 0302 64       		.sleb128 -28
 9602 0303 11       		.uleb128 0x11
 9603 0304 23090000 		.4byte	.LASF63
 9604 0308 01       		.byte	0x1
 9605 0309 1301     		.2byte	0x113
 9606 030b 13010000 		.4byte	0x113
 9607 030f 02       		.uleb128 0x2
 9608 0310 91       		.byte	0x91
 9609 0311 60       		.sleb128 -32
 9610 0312 11       		.uleb128 0x11
 9611 0313 450B0000 		.4byte	.LASF64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 208


 9612 0317 01       		.byte	0x1
 9613 0318 1301     		.2byte	0x113
 9614 031a 13010000 		.4byte	0x113
 9615 031e 02       		.uleb128 0x2
 9616 031f 91       		.byte	0x91
 9617 0320 00       		.sleb128 0
 9618 0321 00       		.byte	0
 9619 0322 12       		.uleb128 0x12
 9620 0323 E8110000 		.4byte	.LASF65
 9621 0327 01       		.byte	0x1
 9622 0328 1801     		.2byte	0x118
 9623 032a 13010000 		.4byte	0x113
 9624 032e 00000000 		.4byte	.LFB65
 9625 0332 64000000 		.4byte	.LFE65-.LFB65
 9626 0336 01       		.uleb128 0x1
 9627 0337 9C       		.byte	0x9c
 9628 0338 6A030000 		.4byte	0x36a
 9629 033c 11       		.uleb128 0x11
 9630 033d CE040000 		.4byte	.LASF60
 9631 0341 01       		.byte	0x1
 9632 0342 1801     		.2byte	0x118
 9633 0344 13010000 		.4byte	0x113
 9634 0348 02       		.uleb128 0x2
 9635 0349 91       		.byte	0x91
 9636 034a 6C       		.sleb128 -20
 9637 034b 11       		.uleb128 0x11
 9638 034c 23090000 		.4byte	.LASF63
 9639 0350 01       		.byte	0x1
 9640 0351 1801     		.2byte	0x118
 9641 0353 13010000 		.4byte	0x113
 9642 0357 02       		.uleb128 0x2
 9643 0358 91       		.byte	0x91
 9644 0359 68       		.sleb128 -24
 9645 035a 11       		.uleb128 0x11
 9646 035b 450B0000 		.4byte	.LASF64
 9647 035f 01       		.byte	0x1
 9648 0360 1801     		.2byte	0x118
 9649 0362 13010000 		.4byte	0x113
 9650 0366 02       		.uleb128 0x2
 9651 0367 91       		.byte	0x91
 9652 0368 64       		.sleb128 -28
 9653 0369 00       		.byte	0
 9654 036a 13       		.uleb128 0x13
 9655 036b BE050000 		.4byte	.LASF324
 9656 036f 01       		.byte	0x1
 9657 0370 1D01     		.2byte	0x11d
 9658 0372 00000000 		.4byte	.LFB66
 9659 0376 E8010000 		.4byte	.LFE66-.LFB66
 9660 037a 01       		.uleb128 0x1
 9661 037b 9C       		.byte	0x9c
 9662 037c B3030000 		.4byte	0x3b3
 9663 0380 14       		.uleb128 0x14
 9664 0381 06000000 		.4byte	.LBB2
 9665 0385 EA000000 		.4byte	.LBE2-.LBB2
 9666 0389 9B030000 		.4byte	0x39b
 9667 038d 15       		.uleb128 0x15
 9668 038e 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 209


 9669 0390 01       		.byte	0x1
 9670 0391 1F01     		.2byte	0x11f
 9671 0393 9F000000 		.4byte	0x9f
 9672 0397 02       		.uleb128 0x2
 9673 0398 91       		.byte	0x91
 9674 0399 74       		.sleb128 -12
 9675 039a 00       		.byte	0
 9676 039b 16       		.uleb128 0x16
 9677 039c F0000000 		.4byte	.LBB3
 9678 03a0 EC000000 		.4byte	.LBE3-.LBB3
 9679 03a4 15       		.uleb128 0x15
 9680 03a5 6900     		.ascii	"i\000"
 9681 03a7 01       		.byte	0x1
 9682 03a8 4301     		.2byte	0x143
 9683 03aa 9F000000 		.4byte	0x9f
 9684 03ae 02       		.uleb128 0x2
 9685 03af 91       		.byte	0x91
 9686 03b0 70       		.sleb128 -16
 9687 03b1 00       		.byte	0
 9688 03b2 00       		.byte	0
 9689 03b3 17       		.uleb128 0x17
 9690 03b4 2A110000 		.4byte	.LASF73
 9691 03b8 01       		.byte	0x1
 9692 03b9 6701     		.2byte	0x167
 9693 03bb 00000000 		.4byte	.LFB67
 9694 03bf 18010000 		.4byte	.LFE67-.LFB67
 9695 03c3 01       		.uleb128 0x1
 9696 03c4 9C       		.byte	0x9c
 9697 03c5 09040000 		.4byte	0x409
 9698 03c9 16       		.uleb128 0x16
 9699 03ca 06000000 		.4byte	.LBB4
 9700 03ce EA000000 		.4byte	.LBE4-.LBB4
 9701 03d2 15       		.uleb128 0x15
 9702 03d3 6900     		.ascii	"i\000"
 9703 03d5 01       		.byte	0x1
 9704 03d6 6A01     		.2byte	0x16a
 9705 03d8 9F000000 		.4byte	0x9f
 9706 03dc 02       		.uleb128 0x2
 9707 03dd 91       		.byte	0x91
 9708 03de 6C       		.sleb128 -20
 9709 03df 16       		.uleb128 0x16
 9710 03e0 0C000000 		.4byte	.LBB5
 9711 03e4 D8000000 		.4byte	.LBE5-.LBB5
 9712 03e8 18       		.uleb128 0x18
 9713 03e9 08020000 		.4byte	.LASF66
 9714 03ed 01       		.byte	0x1
 9715 03ee 6D01     		.2byte	0x16d
 9716 03f0 13010000 		.4byte	0x113
 9717 03f4 02       		.uleb128 0x2
 9718 03f5 91       		.byte	0x91
 9719 03f6 68       		.sleb128 -24
 9720 03f7 18       		.uleb128 0x18
 9721 03f8 4B0F0000 		.4byte	.LASF67
 9722 03fc 01       		.byte	0x1
 9723 03fd 6E01     		.2byte	0x16e
 9724 03ff 13010000 		.4byte	0x113
 9725 0403 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 210


 9726 0404 91       		.byte	0x91
 9727 0405 64       		.sleb128 -28
 9728 0406 00       		.byte	0
 9729 0407 00       		.byte	0
 9730 0408 00       		.byte	0
 9731 0409 19       		.uleb128 0x19
 9732 040a 3B0C0000 		.4byte	.LASF69
 9733 040e 01       		.byte	0x1
 9734 040f 7501     		.2byte	0x175
 9735 0411 00000000 		.4byte	.LFB68
 9736 0415 84000000 		.4byte	.LFE68-.LFB68
 9737 0419 01       		.uleb128 0x1
 9738 041a 9C       		.byte	0x9c
 9739 041b 12       		.uleb128 0x12
 9740 041c 2C070000 		.4byte	.LASF68
 9741 0420 01       		.byte	0x1
 9742 0421 8401     		.2byte	0x184
 9743 0423 13010000 		.4byte	0x113
 9744 0427 00000000 		.4byte	.LFB69
 9745 042b 34000000 		.4byte	.LFE69-.LFB69
 9746 042f 01       		.uleb128 0x1
 9747 0430 9C       		.byte	0x9c
 9748 0431 43040000 		.4byte	0x443
 9749 0435 1A       		.uleb128 0x1a
 9750 0436 6600     		.ascii	"f\000"
 9751 0438 01       		.byte	0x1
 9752 0439 8401     		.2byte	0x184
 9753 043b 13010000 		.4byte	0x113
 9754 043f 02       		.uleb128 0x2
 9755 0440 91       		.byte	0x91
 9756 0441 74       		.sleb128 -12
 9757 0442 00       		.byte	0
 9758 0443 19       		.uleb128 0x19
 9759 0444 3E0A0000 		.4byte	.LASF70
 9760 0448 01       		.byte	0x1
 9761 0449 8B01     		.2byte	0x18b
 9762 044b 00000000 		.4byte	.LFB70
 9763 044f 7C000000 		.4byte	.LFE70-.LFB70
 9764 0453 01       		.uleb128 0x1
 9765 0454 9C       		.byte	0x9c
 9766 0455 19       		.uleb128 0x19
 9767 0456 F60B0000 		.4byte	.LASF71
 9768 045a 01       		.byte	0x1
 9769 045b A801     		.2byte	0x1a8
 9770 045d 00000000 		.4byte	.LFB71
 9771 0461 14000000 		.4byte	.LFE71-.LFB71
 9772 0465 01       		.uleb128 0x1
 9773 0466 9C       		.byte	0x9c
 9774 0467 19       		.uleb128 0x19
 9775 0468 C60D0000 		.4byte	.LASF72
 9776 046c 01       		.byte	0x1
 9777 046d B401     		.2byte	0x1b4
 9778 046f 00000000 		.4byte	.LFB72
 9779 0473 9C000000 		.4byte	.LFE72-.LFB72
 9780 0477 01       		.uleb128 0x1
 9781 0478 9C       		.byte	0x9c
 9782 0479 17       		.uleb128 0x17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 211


 9783 047a 03040000 		.4byte	.LASF74
 9784 047e 01       		.byte	0x1
 9785 047f C201     		.2byte	0x1c2
 9786 0481 00000000 		.4byte	.LFB73
 9787 0485 74010000 		.4byte	.LFE73-.LFB73
 9788 0489 01       		.uleb128 0x1
 9789 048a 9C       		.byte	0x9c
 9790 048b A7040000 		.4byte	0x4a7
 9791 048f 16       		.uleb128 0x16
 9792 0490 66000000 		.4byte	.LBB6
 9793 0494 7C000000 		.4byte	.LBE6-.LBB6
 9794 0498 15       		.uleb128 0x15
 9795 0499 6900     		.ascii	"i\000"
 9796 049b 01       		.byte	0x1
 9797 049c C801     		.2byte	0x1c8
 9798 049e 9F000000 		.4byte	0x9f
 9799 04a2 02       		.uleb128 0x2
 9800 04a3 91       		.byte	0x91
 9801 04a4 6C       		.sleb128 -20
 9802 04a5 00       		.byte	0
 9803 04a6 00       		.byte	0
 9804 04a7 12       		.uleb128 0x12
 9805 04a8 22030000 		.4byte	.LASF75
 9806 04ac 01       		.byte	0x1
 9807 04ad DC01     		.2byte	0x1dc
 9808 04af 9F000000 		.4byte	0x9f
 9809 04b3 00000000 		.4byte	.LFB74
 9810 04b7 781D0000 		.4byte	.LFE74-.LFB74
 9811 04bb 01       		.uleb128 0x1
 9812 04bc 9C       		.byte	0x9c
 9813 04bd 0E090000 		.4byte	0x90e
 9814 04c1 18       		.uleb128 0x18
 9815 04c2 5A090000 		.4byte	.LASF76
 9816 04c6 01       		.byte	0x1
 9817 04c7 0502     		.2byte	0x205
 9818 04c9 CE000000 		.4byte	0xce
 9819 04cd 03       		.uleb128 0x3
 9820 04ce 91       		.byte	0x91
 9821 04cf 827F     		.sleb128 -126
 9822 04d1 14       		.uleb128 0x14
 9823 04d2 9C010000 		.4byte	.LBB7
 9824 04d6 3C000000 		.4byte	.LBE7-.LBB7
 9825 04da EC040000 		.4byte	0x4ec
 9826 04de 15       		.uleb128 0x15
 9827 04df 6900     		.ascii	"i\000"
 9828 04e1 01       		.byte	0x1
 9829 04e2 0602     		.2byte	0x206
 9830 04e4 9F000000 		.4byte	0x9f
 9831 04e8 02       		.uleb128 0x2
 9832 04e9 91       		.byte	0x91
 9833 04ea 6C       		.sleb128 -20
 9834 04eb 00       		.byte	0
 9835 04ec 14       		.uleb128 0x14
 9836 04ed D8010000 		.4byte	.LBB8
 9837 04f1 DC010000 		.4byte	.LBE8-.LBB8
 9838 04f5 A8050000 		.4byte	0x5a8
 9839 04f9 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 212


 9840 04fa 72040000 		.4byte	.LASF77
 9841 04fe 01       		.byte	0x1
 9842 04ff 0A02     		.2byte	0x20a
 9843 0501 9F000000 		.4byte	0x9f
 9844 0505 02       		.uleb128 0x2
 9845 0506 91       		.byte	0x91
 9846 0507 68       		.sleb128 -24
 9847 0508 14       		.uleb128 0x14
 9848 0509 E0010000 		.4byte	.LBB9
 9849 050d 60000000 		.4byte	.LBE9-.LBB9
 9850 0511 25050000 		.4byte	0x525
 9851 0515 18       		.uleb128 0x18
 9852 0516 54100000 		.4byte	.LASF78
 9853 051a 01       		.byte	0x1
 9854 051b 0C02     		.2byte	0x20c
 9855 051d 9F000000 		.4byte	0x9f
 9856 0521 02       		.uleb128 0x2
 9857 0522 91       		.byte	0x91
 9858 0523 64       		.sleb128 -28
 9859 0524 00       		.byte	0
 9860 0525 16       		.uleb128 0x16
 9861 0526 40020000 		.4byte	.LBB10
 9862 052a 60010000 		.4byte	.LBE10-.LBB10
 9863 052e 15       		.uleb128 0x15
 9864 052f 6900     		.ascii	"i\000"
 9865 0531 01       		.byte	0x1
 9866 0532 1002     		.2byte	0x210
 9867 0534 9F000000 		.4byte	0x9f
 9868 0538 02       		.uleb128 0x2
 9869 0539 91       		.byte	0x91
 9870 053a 60       		.sleb128 -32
 9871 053b 16       		.uleb128 0x16
 9872 053c 48020000 		.4byte	.LBB11
 9873 0540 44010000 		.4byte	.LBE11-.LBB11
 9874 0544 18       		.uleb128 0x18
 9875 0545 83040000 		.4byte	.LASF79
 9876 0549 01       		.byte	0x1
 9877 054a 1202     		.2byte	0x212
 9878 054c 9F000000 		.4byte	0x9f
 9879 0550 03       		.uleb128 0x3
 9880 0551 91       		.byte	0x91
 9881 0552 FC7E     		.sleb128 -132
 9882 0554 16       		.uleb128 0x16
 9883 0555 56020000 		.4byte	.LBB12
 9884 0559 36010000 		.4byte	.LBE12-.LBB12
 9885 055d 15       		.uleb128 0x15
 9886 055e 6A00     		.ascii	"j\000"
 9887 0560 01       		.byte	0x1
 9888 0561 1302     		.2byte	0x213
 9889 0563 9F000000 		.4byte	0x9f
 9890 0567 02       		.uleb128 0x2
 9891 0568 91       		.byte	0x91
 9892 0569 5C       		.sleb128 -36
 9893 056a 16       		.uleb128 0x16
 9894 056b B4020000 		.4byte	.LBB13
 9895 056f C6000000 		.4byte	.LBE13-.LBB13
 9896 0573 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 213


 9897 0574 BB030000 		.4byte	.LASF80
 9898 0578 01       		.byte	0x1
 9899 0579 1602     		.2byte	0x216
 9900 057b 9F000000 		.4byte	0x9f
 9901 057f 03       		.uleb128 0x3
 9902 0580 91       		.byte	0x91
 9903 0581 F87E     		.sleb128 -136
 9904 0583 18       		.uleb128 0x18
 9905 0584 A6110000 		.4byte	.LASF81
 9906 0588 01       		.byte	0x1
 9907 0589 1702     		.2byte	0x217
 9908 058b CE000000 		.4byte	0xce
 9909 058f 03       		.uleb128 0x3
 9910 0590 91       		.byte	0x91
 9911 0591 F67E     		.sleb128 -138
 9912 0593 18       		.uleb128 0x18
 9913 0594 AA0A0000 		.4byte	.LASF82
 9914 0598 01       		.byte	0x1
 9915 0599 1802     		.2byte	0x218
 9916 059b CE000000 		.4byte	0xce
 9917 059f 03       		.uleb128 0x3
 9918 05a0 91       		.byte	0x91
 9919 05a1 F47E     		.sleb128 -140
 9920 05a3 00       		.byte	0
 9921 05a4 00       		.byte	0
 9922 05a5 00       		.byte	0
 9923 05a6 00       		.byte	0
 9924 05a7 00       		.byte	0
 9925 05a8 14       		.uleb128 0x14
 9926 05a9 B4030000 		.4byte	.LBB14
 9927 05ad A4000000 		.4byte	.LBE14-.LBB14
 9928 05b1 C3050000 		.4byte	0x5c3
 9929 05b5 15       		.uleb128 0x15
 9930 05b6 6900     		.ascii	"i\000"
 9931 05b8 01       		.byte	0x1
 9932 05b9 1F02     		.2byte	0x21f
 9933 05bb 9F000000 		.4byte	0x9f
 9934 05bf 02       		.uleb128 0x2
 9935 05c0 91       		.byte	0x91
 9936 05c1 58       		.sleb128 -40
 9937 05c2 00       		.byte	0
 9938 05c3 14       		.uleb128 0x14
 9939 05c4 5C040000 		.4byte	.LBB15
 9940 05c8 A6000000 		.4byte	.LBE15-.LBB15
 9941 05cc DE050000 		.4byte	0x5de
 9942 05d0 15       		.uleb128 0x15
 9943 05d1 6900     		.ascii	"i\000"
 9944 05d3 01       		.byte	0x1
 9945 05d4 2702     		.2byte	0x227
 9946 05d6 9F000000 		.4byte	0x9f
 9947 05da 02       		.uleb128 0x2
 9948 05db 91       		.byte	0x91
 9949 05dc 54       		.sleb128 -44
 9950 05dd 00       		.byte	0
 9951 05de 14       		.uleb128 0x14
 9952 05df 02050000 		.4byte	.LBB16
 9953 05e3 C2000000 		.4byte	.LBE16-.LBB16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 214


 9954 05e7 42060000 		.4byte	0x642
 9955 05eb 15       		.uleb128 0x15
 9956 05ec 6900     		.ascii	"i\000"
 9957 05ee 01       		.byte	0x1
 9958 05ef 2D02     		.2byte	0x22d
 9959 05f1 9F000000 		.4byte	0x9f
 9960 05f5 02       		.uleb128 0x2
 9961 05f6 91       		.byte	0x91
 9962 05f7 50       		.sleb128 -48
 9963 05f8 14       		.uleb128 0x14
 9964 05f9 0A050000 		.4byte	.LBB17
 9965 05fd 34000000 		.4byte	.LBE17-.LBB17
 9966 0601 13060000 		.4byte	0x613
 9967 0605 15       		.uleb128 0x15
 9968 0606 6A00     		.ascii	"j\000"
 9969 0608 01       		.byte	0x1
 9970 0609 2F02     		.2byte	0x22f
 9971 060b 9F000000 		.4byte	0x9f
 9972 060f 02       		.uleb128 0x2
 9973 0610 91       		.byte	0x91
 9974 0611 4C       		.sleb128 -52
 9975 0612 00       		.byte	0
 9976 0613 16       		.uleb128 0x16
 9977 0614 3E050000 		.4byte	.LBB18
 9978 0618 68000000 		.4byte	.LBE18-.LBB18
 9979 061c 15       		.uleb128 0x15
 9980 061d 6A00     		.ascii	"j\000"
 9981 061f 01       		.byte	0x1
 9982 0620 3402     		.2byte	0x234
 9983 0622 9F000000 		.4byte	0x9f
 9984 0626 02       		.uleb128 0x2
 9985 0627 91       		.byte	0x91
 9986 0628 48       		.sleb128 -56
 9987 0629 16       		.uleb128 0x16
 9988 062a 46050000 		.4byte	.LBB19
 9989 062e 4E000000 		.4byte	.LBE19-.LBB19
 9990 0632 15       		.uleb128 0x15
 9991 0633 6B00     		.ascii	"k\000"
 9992 0635 01       		.byte	0x1
 9993 0636 3602     		.2byte	0x236
 9994 0638 9F000000 		.4byte	0x9f
 9995 063c 02       		.uleb128 0x2
 9996 063d 91       		.byte	0x91
 9997 063e 44       		.sleb128 -60
 9998 063f 00       		.byte	0
 9999 0640 00       		.byte	0
 10000 0641 00       		.byte	0
 10001 0642 14       		.uleb128 0x14
 10002 0643 B0060000 		.4byte	.LBB20
 10003 0647 38000000 		.4byte	.LBE20-.LBB20
 10004 064b 5D060000 		.4byte	0x65d
 10005 064f 15       		.uleb128 0x15
 10006 0650 7700     		.ascii	"w\000"
 10007 0652 01       		.byte	0x1
 10008 0653 5A02     		.2byte	0x25a
 10009 0655 9F000000 		.4byte	0x9f
 10010 0659 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 215


 10011 065a 91       		.byte	0x91
 10012 065b 40       		.sleb128 -64
 10013 065c 00       		.byte	0
 10014 065d 14       		.uleb128 0x14
 10015 065e 7A070000 		.4byte	.LBB21
 10016 0662 92000000 		.4byte	.LBE21-.LBB21
 10017 0666 7B060000 		.4byte	0x67b
 10018 066a 18       		.uleb128 0x18
 10019 066b 98080000 		.4byte	.LASF83
 10020 066f 01       		.byte	0x1
 10021 0670 8C02     		.2byte	0x28c
 10022 0672 B8000000 		.4byte	0xb8
 10023 0676 03       		.uleb128 0x3
 10024 0677 91       		.byte	0x91
 10025 0678 F37E     		.sleb128 -141
 10026 067a 00       		.byte	0
 10027 067b 14       		.uleb128 0x14
 10028 067c 060A0000 		.4byte	.LBB22
 10029 0680 D4000000 		.4byte	.LBE22-.LBB22
 10030 0684 B1060000 		.4byte	0x6b1
 10031 0688 15       		.uleb128 0x15
 10032 0689 6900     		.ascii	"i\000"
 10033 068b 01       		.byte	0x1
 10034 068c D702     		.2byte	0x2d7
 10035 068e 9F000000 		.4byte	0x9f
 10036 0692 03       		.uleb128 0x3
 10037 0693 91       		.byte	0x91
 10038 0694 BC7F     		.sleb128 -68
 10039 0696 16       		.uleb128 0x16
 10040 0697 380A0000 		.4byte	.LBB23
 10041 069b 96000000 		.4byte	.LBE23-.LBB23
 10042 069f 18       		.uleb128 0x18
 10043 06a0 90080000 		.4byte	.LASF84
 10044 06a4 01       		.byte	0x1
 10045 06a5 D902     		.2byte	0x2d9
 10046 06a7 CE000000 		.4byte	0xce
 10047 06ab 03       		.uleb128 0x3
 10048 06ac 91       		.byte	0x91
 10049 06ad C87E     		.sleb128 -184
 10050 06af 00       		.byte	0
 10051 06b0 00       		.byte	0
 10052 06b1 14       		.uleb128 0x14
 10053 06b2 FE0B0000 		.4byte	.LBB24
 10054 06b6 1C020000 		.4byte	.LBE24-.LBB24
 10055 06ba CF060000 		.4byte	0x6cf
 10056 06be 18       		.uleb128 0x18
 10057 06bf 64000000 		.4byte	.LASF85
 10058 06c3 01       		.byte	0x1
 10059 06c4 2303     		.2byte	0x323
 10060 06c6 C3000000 		.4byte	0xc3
 10061 06ca 03       		.uleb128 0x3
 10062 06cb 91       		.byte	0x91
 10063 06cc F07E     		.sleb128 -144
 10064 06ce 00       		.byte	0
 10065 06cf 14       		.uleb128 0x14
 10066 06d0 0A0F0000 		.4byte	.LBB25
 10067 06d4 76020000 		.4byte	.LBE25-.LBB25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 216


 10068 06d8 03070000 		.4byte	0x703
 10069 06dc 15       		.uleb128 0x15
 10070 06dd 6900     		.ascii	"i\000"
 10071 06df 01       		.byte	0x1
 10072 06e0 7003     		.2byte	0x370
 10073 06e2 9F000000 		.4byte	0x9f
 10074 06e6 03       		.uleb128 0x3
 10075 06e7 91       		.byte	0x91
 10076 06e8 B87F     		.sleb128 -72
 10077 06ea 16       		.uleb128 0x16
 10078 06eb 2A100000 		.4byte	.LBB26
 10079 06ef D0000000 		.4byte	.LBE26-.LBB26
 10080 06f3 15       		.uleb128 0x15
 10081 06f4 6A00     		.ascii	"j\000"
 10082 06f6 01       		.byte	0x1
 10083 06f7 7D03     		.2byte	0x37d
 10084 06f9 9F000000 		.4byte	0x9f
 10085 06fd 03       		.uleb128 0x3
 10086 06fe 91       		.byte	0x91
 10087 06ff B47F     		.sleb128 -76
 10088 0701 00       		.byte	0
 10089 0702 00       		.byte	0
 10090 0703 14       		.uleb128 0x14
 10091 0704 8E110000 		.4byte	.LBB27
 10092 0708 48000000 		.4byte	.LBE27-.LBB27
 10093 070c 1F070000 		.4byte	0x71f
 10094 0710 15       		.uleb128 0x15
 10095 0711 6900     		.ascii	"i\000"
 10096 0713 01       		.byte	0x1
 10097 0714 9303     		.2byte	0x393
 10098 0716 9F000000 		.4byte	0x9f
 10099 071a 03       		.uleb128 0x3
 10100 071b 91       		.byte	0x91
 10101 071c B07F     		.sleb128 -80
 10102 071e 00       		.byte	0
 10103 071f 14       		.uleb128 0x14
 10104 0720 DA110000 		.4byte	.LBB28
 10105 0724 CA000000 		.4byte	.LBE28-.LBB28
 10106 0728 3B070000 		.4byte	0x73b
 10107 072c 15       		.uleb128 0x15
 10108 072d 6900     		.ascii	"i\000"
 10109 072f 01       		.byte	0x1
 10110 0730 9F03     		.2byte	0x39f
 10111 0732 9F000000 		.4byte	0x9f
 10112 0736 03       		.uleb128 0x3
 10113 0737 91       		.byte	0x91
 10114 0738 AC7F     		.sleb128 -84
 10115 073a 00       		.byte	0
 10116 073b 14       		.uleb128 0x14
 10117 073c AA120000 		.4byte	.LBB29
 10118 0740 60040000 		.4byte	.LBE29-.LBB29
 10119 0744 DB070000 		.4byte	0x7db
 10120 0748 15       		.uleb128 0x15
 10121 0749 6900     		.ascii	"i\000"
 10122 074b 01       		.byte	0x1
 10123 074c B303     		.2byte	0x3b3
 10124 074e 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 217


 10125 0752 03       		.uleb128 0x3
 10126 0753 91       		.byte	0x91
 10127 0754 A87F     		.sleb128 -88
 10128 0756 16       		.uleb128 0x16
 10129 0757 B0120000 		.4byte	.LBB30
 10130 075b 46040000 		.4byte	.LBE30-.LBB30
 10131 075f 18       		.uleb128 0x18
 10132 0760 010F0000 		.4byte	.LASF86
 10133 0764 01       		.byte	0x1
 10134 0765 B703     		.2byte	0x3b7
 10135 0767 13010000 		.4byte	0x113
 10136 076b 03       		.uleb128 0x3
 10137 076c 91       		.byte	0x91
 10138 076d A47F     		.sleb128 -92
 10139 076f 18       		.uleb128 0x18
 10140 0770 8F0D0000 		.4byte	.LASF87
 10141 0774 01       		.byte	0x1
 10142 0775 CE03     		.2byte	0x3ce
 10143 0777 13010000 		.4byte	0x113
 10144 077b 03       		.uleb128 0x3
 10145 077c 91       		.byte	0x91
 10146 077d EC7E     		.sleb128 -148
 10147 077f 18       		.uleb128 0x18
 10148 0780 C70F0000 		.4byte	.LASF88
 10149 0784 01       		.byte	0x1
 10150 0785 DB03     		.2byte	0x3db
 10151 0787 13010000 		.4byte	0x113
 10152 078b 03       		.uleb128 0x3
 10153 078c 91       		.byte	0x91
 10154 078d E87E     		.sleb128 -152
 10155 078f 18       		.uleb128 0x18
 10156 0790 8E0B0000 		.4byte	.LASF89
 10157 0794 01       		.byte	0x1
 10158 0795 DD03     		.2byte	0x3dd
 10159 0797 13010000 		.4byte	0x113
 10160 079b 03       		.uleb128 0x3
 10161 079c 91       		.byte	0x91
 10162 079d E47E     		.sleb128 -156
 10163 079f 18       		.uleb128 0x18
 10164 07a0 01060000 		.4byte	.LASF90
 10165 07a4 01       		.byte	0x1
 10166 07a5 F303     		.2byte	0x3f3
 10167 07a7 13010000 		.4byte	0x113
 10168 07ab 03       		.uleb128 0x3
 10169 07ac 91       		.byte	0x91
 10170 07ad DC7E     		.sleb128 -164
 10171 07af 18       		.uleb128 0x18
 10172 07b0 590F0000 		.4byte	.LASF91
 10173 07b4 01       		.byte	0x1
 10174 07b5 F503     		.2byte	0x3f5
 10175 07b7 13010000 		.4byte	0x113
 10176 07bb 03       		.uleb128 0x3
 10177 07bc 91       		.byte	0x91
 10178 07bd D87E     		.sleb128 -168
 10179 07bf 16       		.uleb128 0x16
 10180 07c0 FA150000 		.4byte	.LBB31
 10181 07c4 3A000000 		.4byte	.LBE31-.LBB31
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 218


 10182 07c8 18       		.uleb128 0x18
 10183 07c9 C4000000 		.4byte	.LASF92
 10184 07cd 01       		.byte	0x1
 10185 07ce E703     		.2byte	0x3e7
 10186 07d0 13010000 		.4byte	0x113
 10187 07d4 03       		.uleb128 0x3
 10188 07d5 91       		.byte	0x91
 10189 07d6 E07E     		.sleb128 -160
 10190 07d8 00       		.byte	0
 10191 07d9 00       		.byte	0
 10192 07da 00       		.byte	0
 10193 07db 14       		.uleb128 0x14
 10194 07dc D8170000 		.4byte	.LBB32
 10195 07e0 4E000000 		.4byte	.LBE32-.LBB32
 10196 07e4 F7070000 		.4byte	0x7f7
 10197 07e8 15       		.uleb128 0x15
 10198 07e9 6900     		.ascii	"i\000"
 10199 07eb 01       		.byte	0x1
 10200 07ec 3304     		.2byte	0x433
 10201 07ee 13020000 		.4byte	0x213
 10202 07f2 03       		.uleb128 0x3
 10203 07f3 91       		.byte	0x91
 10204 07f4 A07F     		.sleb128 -96
 10205 07f6 00       		.byte	0
 10206 07f7 14       		.uleb128 0x14
 10207 07f8 3E190000 		.4byte	.LBB33
 10208 07fc 22000000 		.4byte	.LBE33-.LBB33
 10209 0800 13080000 		.4byte	0x813
 10210 0804 15       		.uleb128 0x15
 10211 0805 6900     		.ascii	"i\000"
 10212 0807 01       		.byte	0x1
 10213 0808 6204     		.2byte	0x462
 10214 080a 9F000000 		.4byte	0x9f
 10215 080e 03       		.uleb128 0x3
 10216 080f 91       		.byte	0x91
 10217 0810 9C7F     		.sleb128 -100
 10218 0812 00       		.byte	0
 10219 0813 14       		.uleb128 0x14
 10220 0814 60190000 		.4byte	.LBB34
 10221 0818 22000000 		.4byte	.LBE34-.LBB34
 10222 081c 2F080000 		.4byte	0x82f
 10223 0820 15       		.uleb128 0x15
 10224 0821 6900     		.ascii	"i\000"
 10225 0823 01       		.byte	0x1
 10226 0824 6604     		.2byte	0x466
 10227 0826 9F000000 		.4byte	0x9f
 10228 082a 03       		.uleb128 0x3
 10229 082b 91       		.byte	0x91
 10230 082c 987F     		.sleb128 -104
 10231 082e 00       		.byte	0
 10232 082f 14       		.uleb128 0x14
 10233 0830 82190000 		.4byte	.LBB35
 10234 0834 22000000 		.4byte	.LBE35-.LBB35
 10235 0838 4B080000 		.4byte	0x84b
 10236 083c 15       		.uleb128 0x15
 10237 083d 6900     		.ascii	"i\000"
 10238 083f 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 219


 10239 0840 6A04     		.2byte	0x46a
 10240 0842 9F000000 		.4byte	0x9f
 10241 0846 03       		.uleb128 0x3
 10242 0847 91       		.byte	0x91
 10243 0848 947F     		.sleb128 -108
 10244 084a 00       		.byte	0
 10245 084b 14       		.uleb128 0x14
 10246 084c 2A1A0000 		.4byte	.LBB36
 10247 0850 56000000 		.4byte	.LBE36-.LBB36
 10248 0854 81080000 		.4byte	0x881
 10249 0858 15       		.uleb128 0x15
 10250 0859 6900     		.ascii	"i\000"
 10251 085b 01       		.byte	0x1
 10252 085c 7D04     		.2byte	0x47d
 10253 085e 9F000000 		.4byte	0x9f
 10254 0862 03       		.uleb128 0x3
 10255 0863 91       		.byte	0x91
 10256 0864 907F     		.sleb128 -112
 10257 0866 16       		.uleb128 0x16
 10258 0867 301A0000 		.4byte	.LBB37
 10259 086b 44000000 		.4byte	.LBE37-.LBB37
 10260 086f 18       		.uleb128 0x18
 10261 0870 F50D0000 		.4byte	.LASF93
 10262 0874 01       		.byte	0x1
 10263 0875 7F04     		.2byte	0x47f
 10264 0877 9F000000 		.4byte	0x9f
 10265 087b 03       		.uleb128 0x3
 10266 087c 91       		.byte	0x91
 10267 087d D47E     		.sleb128 -172
 10268 087f 00       		.byte	0
 10269 0880 00       		.byte	0
 10270 0881 14       		.uleb128 0x14
 10271 0882 0E1B0000 		.4byte	.LBB38
 10272 0886 F6000000 		.4byte	.LBE38-.LBB38
 10273 088a F3080000 		.4byte	0x8f3
 10274 088e 18       		.uleb128 0x18
 10275 088f FA020000 		.4byte	.LASF94
 10276 0893 01       		.byte	0x1
 10277 0894 9304     		.2byte	0x493
 10278 0896 9F000000 		.4byte	0x9f
 10279 089a 03       		.uleb128 0x3
 10280 089b 91       		.byte	0x91
 10281 089c D07E     		.sleb128 -176
 10282 089e 18       		.uleb128 0x18
 10283 089f EB000000 		.4byte	.LASF95
 10284 08a3 01       		.byte	0x1
 10285 08a4 9404     		.2byte	0x494
 10286 08a6 9F000000 		.4byte	0x9f
 10287 08aa 03       		.uleb128 0x3
 10288 08ab 91       		.byte	0x91
 10289 08ac CC7E     		.sleb128 -180
 10290 08ae 18       		.uleb128 0x18
 10291 08af A50F0000 		.4byte	.LASF96
 10292 08b3 01       		.byte	0x1
 10293 08b4 9504     		.2byte	0x495
 10294 08b6 9F000000 		.4byte	0x9f
 10295 08ba 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 220


 10296 08bb 91       		.byte	0x91
 10297 08bc 8C7F     		.sleb128 -116
 10298 08be 14       		.uleb128 0x14
 10299 08bf 1E1B0000 		.4byte	.LBB39
 10300 08c3 76000000 		.4byte	.LBE39-.LBB39
 10301 08c7 DA080000 		.4byte	0x8da
 10302 08cb 15       		.uleb128 0x15
 10303 08cc 6900     		.ascii	"i\000"
 10304 08ce 01       		.byte	0x1
 10305 08cf 9604     		.2byte	0x496
 10306 08d1 9F000000 		.4byte	0x9f
 10307 08d5 03       		.uleb128 0x3
 10308 08d6 91       		.byte	0x91
 10309 08d7 887F     		.sleb128 -120
 10310 08d9 00       		.byte	0
 10311 08da 16       		.uleb128 0x16
 10312 08db 981B0000 		.4byte	.LBB40
 10313 08df 44000000 		.4byte	.LBE40-.LBB40
 10314 08e3 15       		.uleb128 0x15
 10315 08e4 6900     		.ascii	"i\000"
 10316 08e6 01       		.byte	0x1
 10317 08e7 9C04     		.2byte	0x49c
 10318 08e9 9F000000 		.4byte	0x9f
 10319 08ed 03       		.uleb128 0x3
 10320 08ee 91       		.byte	0x91
 10321 08ef 847F     		.sleb128 -124
 10322 08f1 00       		.byte	0
 10323 08f2 00       		.byte	0
 10324 08f3 16       		.uleb128 0x16
 10325 08f4 6C1C0000 		.4byte	.LBB41
 10326 08f8 28000000 		.4byte	.LBE41-.LBB41
 10327 08fc 18       		.uleb128 0x18
 10328 08fd 98080000 		.4byte	.LASF83
 10329 0901 01       		.byte	0x1
 10330 0902 B404     		.2byte	0x4b4
 10331 0904 B8000000 		.4byte	0xb8
 10332 0908 03       		.uleb128 0x3
 10333 0909 91       		.byte	0x91
 10334 090a CB7E     		.sleb128 -181
 10335 090c 00       		.byte	0
 10336 090d 00       		.byte	0
 10337 090e 19       		.uleb128 0x19
 10338 090f 2E050000 		.4byte	.LASF97
 10339 0913 01       		.byte	0x1
 10340 0914 D504     		.2byte	0x4d5
 10341 0916 00000000 		.4byte	.LFB75
 10342 091a 70000000 		.4byte	.LFE75-.LFB75
 10343 091e 01       		.uleb128 0x1
 10344 091f 9C       		.byte	0x9c
 10345 0920 19       		.uleb128 0x19
 10346 0921 F2100000 		.4byte	.LASF98
 10347 0925 01       		.byte	0x1
 10348 0926 EA04     		.2byte	0x4ea
 10349 0928 00000000 		.4byte	.LFB76
 10350 092c 70010000 		.4byte	.LFE76-.LFB76
 10351 0930 01       		.uleb128 0x1
 10352 0931 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 221


 10353 0932 12       		.uleb128 0x12
 10354 0933 CE080000 		.4byte	.LASF99
 10355 0937 01       		.byte	0x1
 10356 0938 1205     		.2byte	0x512
 10357 093a EF000000 		.4byte	0xef
 10358 093e 00000000 		.4byte	.LFB77
 10359 0942 E0000000 		.4byte	.LFE77-.LFB77
 10360 0946 01       		.uleb128 0x1
 10361 0947 9C       		.byte	0x9c
 10362 0948 A7090000 		.4byte	0x9a7
 10363 094c 11       		.uleb128 0x11
 10364 094d 38100000 		.4byte	.LASF100
 10365 0951 01       		.byte	0x1
 10366 0952 1205     		.2byte	0x512
 10367 0954 EF000000 		.4byte	0xef
 10368 0958 02       		.uleb128 0x2
 10369 0959 91       		.byte	0x91
 10370 095a 67       		.sleb128 -25
 10371 095b 11       		.uleb128 0x11
 10372 095c 96010000 		.4byte	.LASF101
 10373 0960 01       		.byte	0x1
 10374 0961 1205     		.2byte	0x512
 10375 0963 FB000000 		.4byte	0xfb
 10376 0967 02       		.uleb128 0x2
 10377 0968 91       		.byte	0x91
 10378 0969 64       		.sleb128 -28
 10379 096a 11       		.uleb128 0x11
 10380 096b A00F0000 		.4byte	.LASF102
 10381 096f 01       		.byte	0x1
 10382 0970 1205     		.2byte	0x512
 10383 0972 B8000000 		.4byte	0xb8
 10384 0976 02       		.uleb128 0x2
 10385 0977 91       		.byte	0x91
 10386 0978 66       		.sleb128 -26
 10387 0979 18       		.uleb128 0x18
 10388 097a 98080000 		.4byte	.LASF83
 10389 097e 01       		.byte	0x1
 10390 097f 1405     		.2byte	0x514
 10391 0981 40010000 		.4byte	0x140
 10392 0985 02       		.uleb128 0x2
 10393 0986 91       		.byte	0x91
 10394 0987 6F       		.sleb128 -17
 10395 0988 18       		.uleb128 0x18
 10396 0989 5B030000 		.4byte	.LASF103
 10397 098d 01       		.byte	0x1
 10398 098e 1505     		.2byte	0x515
 10399 0990 B8000000 		.4byte	0xb8
 10400 0994 02       		.uleb128 0x2
 10401 0995 91       		.byte	0x91
 10402 0996 77       		.sleb128 -9
 10403 0997 18       		.uleb128 0x18
 10404 0998 4B0B0000 		.4byte	.LASF104
 10405 099c 01       		.byte	0x1
 10406 099d 1605     		.2byte	0x516
 10407 099f E4000000 		.4byte	0xe4
 10408 09a3 02       		.uleb128 0x2
 10409 09a4 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 222


 10410 09a5 70       		.sleb128 -16
 10411 09a6 00       		.byte	0
 10412 09a7 12       		.uleb128 0x12
 10413 09a8 ED0C0000 		.4byte	.LASF105
 10414 09ac 01       		.byte	0x1
 10415 09ad 4B05     		.2byte	0x54b
 10416 09af EF000000 		.4byte	0xef
 10417 09b3 00000000 		.4byte	.LFB78
 10418 09b7 F4000000 		.4byte	.LFE78-.LFB78
 10419 09bb 01       		.uleb128 0x1
 10420 09bc 9C       		.byte	0x9c
 10421 09bd 1C0A0000 		.4byte	0xa1c
 10422 09c1 11       		.uleb128 0x11
 10423 09c2 38100000 		.4byte	.LASF100
 10424 09c6 01       		.byte	0x1
 10425 09c7 4B05     		.2byte	0x54b
 10426 09c9 EF000000 		.4byte	0xef
 10427 09cd 02       		.uleb128 0x2
 10428 09ce 91       		.byte	0x91
 10429 09cf 6F       		.sleb128 -17
 10430 09d0 11       		.uleb128 0x11
 10431 09d1 96010000 		.4byte	.LASF101
 10432 09d5 01       		.byte	0x1
 10433 09d6 4B05     		.2byte	0x54b
 10434 09d8 EF000000 		.4byte	0xef
 10435 09dc 02       		.uleb128 0x2
 10436 09dd 91       		.byte	0x91
 10437 09de 6E       		.sleb128 -18
 10438 09df 11       		.uleb128 0x11
 10439 09e0 A00F0000 		.4byte	.LASF102
 10440 09e4 01       		.byte	0x1
 10441 09e5 4B05     		.2byte	0x54b
 10442 09e7 B8000000 		.4byte	0xb8
 10443 09eb 02       		.uleb128 0x2
 10444 09ec 91       		.byte	0x91
 10445 09ed 6D       		.sleb128 -19
 10446 09ee 18       		.uleb128 0x18
 10447 09ef 98080000 		.4byte	.LASF83
 10448 09f3 01       		.byte	0x1
 10449 09f4 4D05     		.2byte	0x54d
 10450 09f6 40010000 		.4byte	0x140
 10451 09fa 02       		.uleb128 0x2
 10452 09fb 91       		.byte	0x91
 10453 09fc 72       		.sleb128 -14
 10454 09fd 18       		.uleb128 0x18
 10455 09fe 4B0B0000 		.4byte	.LASF104
 10456 0a02 01       		.byte	0x1
 10457 0a03 4E05     		.2byte	0x54e
 10458 0a05 E4000000 		.4byte	0xe4
 10459 0a09 02       		.uleb128 0x2
 10460 0a0a 91       		.byte	0x91
 10461 0a0b 74       		.sleb128 -12
 10462 0a0c 18       		.uleb128 0x18
 10463 0a0d 5B030000 		.4byte	.LASF103
 10464 0a11 01       		.byte	0x1
 10465 0a12 4F05     		.2byte	0x54f
 10466 0a14 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 223


 10467 0a18 02       		.uleb128 0x2
 10468 0a19 91       		.byte	0x91
 10469 0a1a 73       		.sleb128 -13
 10470 0a1b 00       		.byte	0
 10471 0a1c 19       		.uleb128 0x19
 10472 0a1d A0050000 		.4byte	.LASF106
 10473 0a21 01       		.byte	0x1
 10474 0a22 7E05     		.2byte	0x57e
 10475 0a24 00000000 		.4byte	.LFB79
 10476 0a28 24000000 		.4byte	.LFE79-.LFB79
 10477 0a2c 01       		.uleb128 0x1
 10478 0a2d 9C       		.byte	0x9c
 10479 0a2e 19       		.uleb128 0x19
 10480 0a2f 4C050000 		.4byte	.LASF107
 10481 0a33 01       		.byte	0x1
 10482 0a34 8F05     		.2byte	0x58f
 10483 0a36 00000000 		.4byte	.LFB80
 10484 0a3a 54000000 		.4byte	.LFE80-.LFB80
 10485 0a3e 01       		.uleb128 0x1
 10486 0a3f 9C       		.byte	0x9c
 10487 0a40 19       		.uleb128 0x19
 10488 0a41 AA040000 		.4byte	.LASF108
 10489 0a45 01       		.byte	0x1
 10490 0a46 A205     		.2byte	0x5a2
 10491 0a48 00000000 		.4byte	.LFB81
 10492 0a4c C4000000 		.4byte	.LFE81-.LFB81
 10493 0a50 01       		.uleb128 0x1
 10494 0a51 9C       		.byte	0x9c
 10495 0a52 12       		.uleb128 0x12
 10496 0a53 F40A0000 		.4byte	.LASF109
 10497 0a57 01       		.byte	0x1
 10498 0a58 D505     		.2byte	0x5d5
 10499 0a5a 13010000 		.4byte	0x113
 10500 0a5e 00000000 		.4byte	.LFB82
 10501 0a62 98000000 		.4byte	.LFE82-.LFB82
 10502 0a66 01       		.uleb128 0x1
 10503 0a67 9C       		.byte	0x9c
 10504 0a68 A10A0000 		.4byte	0xaa1
 10505 0a6c 1A       		.uleb128 0x1a
 10506 0a6d 5800     		.ascii	"X\000"
 10507 0a6f 01       		.byte	0x1
 10508 0a70 D505     		.2byte	0x5d5
 10509 0a72 13010000 		.4byte	0x113
 10510 0a76 02       		.uleb128 0x2
 10511 0a77 91       		.byte	0x91
 10512 0a78 64       		.sleb128 -28
 10513 0a79 15       		.uleb128 0x15
 10514 0a7a 5900     		.ascii	"Y\000"
 10515 0a7c 01       		.byte	0x1
 10516 0a7d D605     		.2byte	0x5d6
 10517 0a7f 13010000 		.4byte	0x113
 10518 0a83 02       		.uleb128 0x2
 10519 0a84 91       		.byte	0x91
 10520 0a85 70       		.sleb128 -16
 10521 0a86 15       		.uleb128 0x15
 10522 0a87 4600     		.ascii	"F\000"
 10523 0a89 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 224


 10524 0a8a D605     		.2byte	0x5d6
 10525 0a8c 13010000 		.4byte	0x113
 10526 0a90 02       		.uleb128 0x2
 10527 0a91 91       		.byte	0x91
 10528 0a92 74       		.sleb128 -12
 10529 0a93 15       		.uleb128 0x15
 10530 0a94 4500     		.ascii	"E\000"
 10531 0a96 01       		.byte	0x1
 10532 0a97 D705     		.2byte	0x5d7
 10533 0a99 9F000000 		.4byte	0x9f
 10534 0a9d 02       		.uleb128 0x2
 10535 0a9e 91       		.byte	0x91
 10536 0a9f 6C       		.sleb128 -20
 10537 0aa0 00       		.byte	0
 10538 0aa1 17       		.uleb128 0x17
 10539 0aa2 CC000000 		.4byte	.LASF110
 10540 0aa6 01       		.byte	0x1
 10541 0aa7 E805     		.2byte	0x5e8
 10542 0aa9 00000000 		.4byte	.LFB83
 10543 0aad D4000000 		.4byte	.LFE83-.LFB83
 10544 0ab1 01       		.uleb128 0x1
 10545 0ab2 9C       		.byte	0x9c
 10546 0ab3 FE0A0000 		.4byte	0xafe
 10547 0ab7 11       		.uleb128 0x11
 10548 0ab8 550C0000 		.4byte	.LASF111
 10549 0abc 01       		.byte	0x1
 10550 0abd E805     		.2byte	0x5e8
 10551 0abf 9F000000 		.4byte	0x9f
 10552 0ac3 02       		.uleb128 0x2
 10553 0ac4 91       		.byte	0x91
 10554 0ac5 64       		.sleb128 -28
 10555 0ac6 18       		.uleb128 0x18
 10556 0ac7 130C0000 		.4byte	.LASF112
 10557 0acb 01       		.byte	0x1
 10558 0acc F405     		.2byte	0x5f4
 10559 0ace CE000000 		.4byte	0xce
 10560 0ad2 02       		.uleb128 0x2
 10561 0ad3 91       		.byte	0x91
 10562 0ad4 76       		.sleb128 -10
 10563 0ad5 16       		.uleb128 0x16
 10564 0ad6 18000000 		.4byte	.LBB42
 10565 0ada 86000000 		.4byte	.LBE42-.LBB42
 10566 0ade 18       		.uleb128 0x18
 10567 0adf 340E0000 		.4byte	.LASF113
 10568 0ae3 01       		.byte	0x1
 10569 0ae4 F805     		.2byte	0x5f8
 10570 0ae6 13010000 		.4byte	0x113
 10571 0aea 02       		.uleb128 0x2
 10572 0aeb 91       		.byte	0x91
 10573 0aec 70       		.sleb128 -16
 10574 0aed 18       		.uleb128 0x18
 10575 0aee 69110000 		.4byte	.LASF114
 10576 0af2 01       		.byte	0x1
 10577 0af3 0706     		.2byte	0x607
 10578 0af5 9F000000 		.4byte	0x9f
 10579 0af9 02       		.uleb128 0x2
 10580 0afa 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 225


 10581 0afb 6C       		.sleb128 -20
 10582 0afc 00       		.byte	0
 10583 0afd 00       		.byte	0
 10584 0afe 17       		.uleb128 0x17
 10585 0aff 70070000 		.4byte	.LASF115
 10586 0b03 01       		.byte	0x1
 10587 0b04 1306     		.2byte	0x613
 10588 0b06 00000000 		.4byte	.LFB84
 10589 0b0a 1C000000 		.4byte	.LFE84-.LFB84
 10590 0b0e 01       		.uleb128 0x1
 10591 0b0f 9C       		.byte	0x9c
 10592 0b10 320B0000 		.4byte	0xb32
 10593 0b14 1A       		.uleb128 0x1a
 10594 0b15 636300   		.ascii	"cc\000"
 10595 0b18 01       		.byte	0x1
 10596 0b19 1306     		.2byte	0x613
 10597 0b1b 9F000000 		.4byte	0x9f
 10598 0b1f 02       		.uleb128 0x2
 10599 0b20 91       		.byte	0x91
 10600 0b21 74       		.sleb128 -12
 10601 0b22 1A       		.uleb128 0x1a
 10602 0b23 76616C00 		.ascii	"val\000"
 10603 0b27 01       		.byte	0x1
 10604 0b28 1306     		.2byte	0x613
 10605 0b2a 9F000000 		.4byte	0x9f
 10606 0b2e 02       		.uleb128 0x2
 10607 0b2f 91       		.byte	0x91
 10608 0b30 70       		.sleb128 -16
 10609 0b31 00       		.byte	0
 10610 0b32 17       		.uleb128 0x17
 10611 0b33 0D0A0000 		.4byte	.LASF116
 10612 0b37 01       		.byte	0x1
 10613 0b38 1906     		.2byte	0x619
 10614 0b3a 00000000 		.4byte	.LFB85
 10615 0b3e 68000000 		.4byte	.LFE85-.LFB85
 10616 0b42 01       		.uleb128 0x1
 10617 0b43 9C       		.byte	0x9c
 10618 0b44 760B0000 		.4byte	0xb76
 10619 0b48 11       		.uleb128 0x11
 10620 0b49 3B030000 		.4byte	.LASF117
 10621 0b4d 01       		.byte	0x1
 10622 0b4e 1906     		.2byte	0x619
 10623 0b50 9F000000 		.4byte	0x9f
 10624 0b54 02       		.uleb128 0x2
 10625 0b55 91       		.byte	0x91
 10626 0b56 74       		.sleb128 -12
 10627 0b57 11       		.uleb128 0x11
 10628 0b58 130C0000 		.4byte	.LASF112
 10629 0b5c 01       		.byte	0x1
 10630 0b5d 1906     		.2byte	0x619
 10631 0b5f 9F000000 		.4byte	0x9f
 10632 0b63 02       		.uleb128 0x2
 10633 0b64 91       		.byte	0x91
 10634 0b65 70       		.sleb128 -16
 10635 0b66 11       		.uleb128 0x11
 10636 0b67 B4080000 		.4byte	.LASF118
 10637 0b6b 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 226


 10638 0b6c 1906     		.2byte	0x619
 10639 0b6e 9F000000 		.4byte	0x9f
 10640 0b72 02       		.uleb128 0x2
 10641 0b73 91       		.byte	0x91
 10642 0b74 6C       		.sleb128 -20
 10643 0b75 00       		.byte	0
 10644 0b76 17       		.uleb128 0x17
 10645 0b77 DC050000 		.4byte	.LASF119
 10646 0b7b 01       		.byte	0x1
 10647 0b7c 2606     		.2byte	0x626
 10648 0b7e 00000000 		.4byte	.LFB86
 10649 0b82 68000000 		.4byte	.LFE86-.LFB86
 10650 0b86 01       		.uleb128 0x1
 10651 0b87 9C       		.byte	0x9c
 10652 0b88 BA0B0000 		.4byte	0xbba
 10653 0b8c 11       		.uleb128 0x11
 10654 0b8d 3B030000 		.4byte	.LASF117
 10655 0b91 01       		.byte	0x1
 10656 0b92 2606     		.2byte	0x626
 10657 0b94 9F000000 		.4byte	0x9f
 10658 0b98 02       		.uleb128 0x2
 10659 0b99 91       		.byte	0x91
 10660 0b9a 74       		.sleb128 -12
 10661 0b9b 11       		.uleb128 0x11
 10662 0b9c DD040000 		.4byte	.LASF120
 10663 0ba0 01       		.byte	0x1
 10664 0ba1 2606     		.2byte	0x626
 10665 0ba3 9F000000 		.4byte	0x9f
 10666 0ba7 02       		.uleb128 0x2
 10667 0ba8 91       		.byte	0x91
 10668 0ba9 70       		.sleb128 -16
 10669 0baa 11       		.uleb128 0x11
 10670 0bab B4080000 		.4byte	.LASF118
 10671 0baf 01       		.byte	0x1
 10672 0bb0 2606     		.2byte	0x626
 10673 0bb2 9F000000 		.4byte	0x9f
 10674 0bb6 02       		.uleb128 0x2
 10675 0bb7 91       		.byte	0x91
 10676 0bb8 6C       		.sleb128 -20
 10677 0bb9 00       		.byte	0
 10678 0bba 17       		.uleb128 0x17
 10679 0bbb 28060000 		.4byte	.LASF121
 10680 0bbf 01       		.byte	0x1
 10681 0bc0 3206     		.2byte	0x632
 10682 0bc2 00000000 		.4byte	.LFB87
 10683 0bc6 68000000 		.4byte	.LFE87-.LFB87
 10684 0bca 01       		.uleb128 0x1
 10685 0bcb 9C       		.byte	0x9c
 10686 0bcc FE0B0000 		.4byte	0xbfe
 10687 0bd0 11       		.uleb128 0x11
 10688 0bd1 BA010000 		.4byte	.LASF122
 10689 0bd5 01       		.byte	0x1
 10690 0bd6 3206     		.2byte	0x632
 10691 0bd8 9F000000 		.4byte	0x9f
 10692 0bdc 02       		.uleb128 0x2
 10693 0bdd 91       		.byte	0x91
 10694 0bde 74       		.sleb128 -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 227


 10695 0bdf 11       		.uleb128 0x11
 10696 0be0 01010000 		.4byte	.LASF123
 10697 0be4 01       		.byte	0x1
 10698 0be5 3206     		.2byte	0x632
 10699 0be7 9F000000 		.4byte	0x9f
 10700 0beb 02       		.uleb128 0x2
 10701 0bec 91       		.byte	0x91
 10702 0bed 70       		.sleb128 -16
 10703 0bee 11       		.uleb128 0x11
 10704 0bef B4080000 		.4byte	.LASF118
 10705 0bf3 01       		.byte	0x1
 10706 0bf4 3206     		.2byte	0x632
 10707 0bf6 9F000000 		.4byte	0x9f
 10708 0bfa 02       		.uleb128 0x2
 10709 0bfb 91       		.byte	0x91
 10710 0bfc 6C       		.sleb128 -20
 10711 0bfd 00       		.byte	0
 10712 0bfe 17       		.uleb128 0x17
 10713 0bff 960B0000 		.4byte	.LASF124
 10714 0c03 01       		.byte	0x1
 10715 0c04 3E06     		.2byte	0x63e
 10716 0c06 00000000 		.4byte	.LFB88
 10717 0c0a 6C000000 		.4byte	.LFE88-.LFB88
 10718 0c0e 01       		.uleb128 0x1
 10719 0c0f 9C       		.byte	0x9c
 10720 0c10 330C0000 		.4byte	0xc33
 10721 0c14 1A       		.uleb128 0x1a
 10722 0c15 76616C00 		.ascii	"val\000"
 10723 0c19 01       		.byte	0x1
 10724 0c1a 3E06     		.2byte	0x63e
 10725 0c1c 9F000000 		.4byte	0x9f
 10726 0c20 02       		.uleb128 0x2
 10727 0c21 91       		.byte	0x91
 10728 0c22 74       		.sleb128 -12
 10729 0c23 11       		.uleb128 0x11
 10730 0c24 B4080000 		.4byte	.LASF118
 10731 0c28 01       		.byte	0x1
 10732 0c29 3E06     		.2byte	0x63e
 10733 0c2b 9F000000 		.4byte	0x9f
 10734 0c2f 02       		.uleb128 0x2
 10735 0c30 91       		.byte	0x91
 10736 0c31 70       		.sleb128 -16
 10737 0c32 00       		.byte	0
 10738 0c33 17       		.uleb128 0x17
 10739 0c34 47030000 		.4byte	.LASF125
 10740 0c38 01       		.byte	0x1
 10741 0c39 4A06     		.2byte	0x64a
 10742 0c3b 00000000 		.4byte	.LFB89
 10743 0c3f 5C000000 		.4byte	.LFE89-.LFB89
 10744 0c43 01       		.uleb128 0x1
 10745 0c44 9C       		.byte	0x9c
 10746 0c45 610C0000 		.4byte	0xc61
 10747 0c49 16       		.uleb128 0x16
 10748 0c4a 06000000 		.4byte	.LBB43
 10749 0c4e 44000000 		.4byte	.LBE43-.LBB43
 10750 0c52 15       		.uleb128 0x15
 10751 0c53 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 228


 10752 0c55 01       		.byte	0x1
 10753 0c56 4C06     		.2byte	0x64c
 10754 0c58 B8000000 		.4byte	0xb8
 10755 0c5c 02       		.uleb128 0x2
 10756 0c5d 91       		.byte	0x91
 10757 0c5e 77       		.sleb128 -9
 10758 0c5f 00       		.byte	0
 10759 0c60 00       		.byte	0
 10760 0c61 17       		.uleb128 0x17
 10761 0c62 94070000 		.4byte	.LASF126
 10762 0c66 01       		.byte	0x1
 10763 0c67 6206     		.2byte	0x662
 10764 0c69 00000000 		.4byte	.LFB90
 10765 0c6d EC0B0000 		.4byte	.LFE90-.LFB90
 10766 0c71 01       		.uleb128 0x1
 10767 0c72 9C       		.byte	0x9c
 10768 0c73 AE0E0000 		.4byte	0xeae
 10769 0c77 14       		.uleb128 0x14
 10770 0c78 16000000 		.4byte	.LBB44
 10771 0c7c C0050000 		.4byte	.LBE44-.LBB44
 10772 0c80 280D0000 		.4byte	0xd28
 10773 0c84 18       		.uleb128 0x18
 10774 0c85 12020000 		.4byte	.LASF127
 10775 0c89 01       		.byte	0x1
 10776 0c8a 7106     		.2byte	0x671
 10777 0c8c 82020000 		.4byte	0x282
 10778 0c90 03       		.uleb128 0x3
 10779 0c91 91       		.byte	0x91
 10780 0c92 B07F     		.sleb128 -80
 10781 0c94 15       		.uleb128 0x15
 10782 0c95 6900     		.ascii	"i\000"
 10783 0c97 01       		.byte	0x1
 10784 0c98 7206     		.2byte	0x672
 10785 0c9a E4000000 		.4byte	0xe4
 10786 0c9e 02       		.uleb128 0x2
 10787 0c9f 91       		.byte	0x91
 10788 0ca0 6C       		.sleb128 -20
 10789 0ca1 18       		.uleb128 0x18
 10790 0ca2 B50A0000 		.4byte	.LASF128
 10791 0ca6 01       		.byte	0x1
 10792 0ca7 7306     		.2byte	0x673
 10793 0ca9 B8000000 		.4byte	0xb8
 10794 0cad 02       		.uleb128 0x2
 10795 0cae 91       		.byte	0x91
 10796 0caf 57       		.sleb128 -41
 10797 0cb0 18       		.uleb128 0x18
 10798 0cb1 68040000 		.4byte	.LASF129
 10799 0cb5 01       		.byte	0x1
 10800 0cb6 8706     		.2byte	0x687
 10801 0cb8 CE000000 		.4byte	0xce
 10802 0cbc 02       		.uleb128 0x2
 10803 0cbd 91       		.byte	0x91
 10804 0cbe 54       		.sleb128 -44
 10805 0cbf 14       		.uleb128 0x14
 10806 0cc0 B2000000 		.4byte	.LBB45
 10807 0cc4 76000000 		.4byte	.LBE45-.LBB45
 10808 0cc8 F10C0000 		.4byte	0xcf1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 229


 10809 0ccc 15       		.uleb128 0x15
 10810 0ccd 6A00     		.ascii	"j\000"
 10811 0ccf 01       		.byte	0x1
 10812 0cd0 7D06     		.2byte	0x67d
 10813 0cd2 9F000000 		.4byte	0x9f
 10814 0cd6 02       		.uleb128 0x2
 10815 0cd7 91       		.byte	0x91
 10816 0cd8 68       		.sleb128 -24
 10817 0cd9 16       		.uleb128 0x16
 10818 0cda B8000000 		.4byte	.LBB46
 10819 0cde 64000000 		.4byte	.LBE46-.LBB46
 10820 0ce2 15       		.uleb128 0x15
 10821 0ce3 6B00     		.ascii	"k\000"
 10822 0ce5 01       		.byte	0x1
 10823 0ce6 7F06     		.2byte	0x67f
 10824 0ce8 9F000000 		.4byte	0x9f
 10825 0cec 02       		.uleb128 0x2
 10826 0ced 91       		.byte	0x91
 10827 0cee 64       		.sleb128 -28
 10828 0cef 00       		.byte	0
 10829 0cf0 00       		.byte	0
 10830 0cf1 14       		.uleb128 0x14
 10831 0cf2 FA010000 		.4byte	.LBB47
 10832 0cf6 46000000 		.4byte	.LBE47-.LBB47
 10833 0cfa 0E0D0000 		.4byte	0xd0e
 10834 0cfe 18       		.uleb128 0x18
 10835 0cff FA010000 		.4byte	.LASF130
 10836 0d03 01       		.byte	0x1
 10837 0d04 9F06     		.2byte	0x69f
 10838 0d06 CE000000 		.4byte	0xce
 10839 0d0a 02       		.uleb128 0x2
 10840 0d0b 91       		.byte	0x91
 10841 0d0c 52       		.sleb128 -46
 10842 0d0d 00       		.byte	0
 10843 0d0e 16       		.uleb128 0x16
 10844 0d0f 66040000 		.4byte	.LBB48
 10845 0d13 48000000 		.4byte	.LBE48-.LBB48
 10846 0d17 18       		.uleb128 0x18
 10847 0d18 FA010000 		.4byte	.LASF130
 10848 0d1c 01       		.byte	0x1
 10849 0d1d DB06     		.2byte	0x6db
 10850 0d1f C3000000 		.4byte	0xc3
 10851 0d23 02       		.uleb128 0x2
 10852 0d24 91       		.byte	0x91
 10853 0d25 50       		.sleb128 -48
 10854 0d26 00       		.byte	0
 10855 0d27 00       		.byte	0
 10856 0d28 14       		.uleb128 0x14
 10857 0d29 E0050000 		.4byte	.LBB49
 10858 0d2d 04030000 		.4byte	.LBE49-.LBB49
 10859 0d31 100E0000 		.4byte	0xe10
 10860 0d35 18       		.uleb128 0x18
 10861 0d36 12020000 		.4byte	.LASF127
 10862 0d3a 01       		.byte	0x1
 10863 0d3b 3C07     		.2byte	0x73c
 10864 0d3d 82020000 		.4byte	0x282
 10865 0d41 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 230


 10866 0d42 91       		.byte	0x91
 10867 0d43 AC7F     		.sleb128 -84
 10868 0d45 15       		.uleb128 0x15
 10869 0d46 6900     		.ascii	"i\000"
 10870 0d48 01       		.byte	0x1
 10871 0d49 3D07     		.2byte	0x73d
 10872 0d4b E4000000 		.4byte	0xe4
 10873 0d4f 02       		.uleb128 0x2
 10874 0d50 91       		.byte	0x91
 10875 0d51 60       		.sleb128 -32
 10876 0d52 18       		.uleb128 0x18
 10877 0d53 B50A0000 		.4byte	.LASF128
 10878 0d57 01       		.byte	0x1
 10879 0d58 3E07     		.2byte	0x73e
 10880 0d5a B8000000 		.4byte	0xb8
 10881 0d5e 02       		.uleb128 0x2
 10882 0d5f 91       		.byte	0x91
 10883 0d60 4F       		.sleb128 -49
 10884 0d61 14       		.uleb128 0x14
 10885 0d62 16060000 		.4byte	.LBB50
 10886 0d66 82000000 		.4byte	.LBE50-.LBB50
 10887 0d6a 7E0D0000 		.4byte	0xd7e
 10888 0d6e 18       		.uleb128 0x18
 10889 0d6f DE0E0000 		.4byte	.LASF131
 10890 0d73 01       		.byte	0x1
 10891 0d74 4207     		.2byte	0x742
 10892 0d76 B8000000 		.4byte	0xb8
 10893 0d7a 02       		.uleb128 0x2
 10894 0d7b 91       		.byte	0x91
 10895 0d7c 4E       		.sleb128 -50
 10896 0d7d 00       		.byte	0
 10897 0d7e 16       		.uleb128 0x16
 10898 0d7f AE060000 		.4byte	.LBB51
 10899 0d83 B8010000 		.4byte	.LBE51-.LBB51
 10900 0d87 18       		.uleb128 0x18
 10901 0d88 DE0F0000 		.4byte	.LASF132
 10902 0d8c 01       		.byte	0x1
 10903 0d8d 4D07     		.2byte	0x74d
 10904 0d8f E4000000 		.4byte	0xe4
 10905 0d93 02       		.uleb128 0x2
 10906 0d94 91       		.byte	0x91
 10907 0d95 5C       		.sleb128 -36
 10908 0d96 16       		.uleb128 0x16
 10909 0d97 B4060000 		.4byte	.LBB52
 10910 0d9b A4010000 		.4byte	.LBE52-.LBB52
 10911 0d9f 18       		.uleb128 0x18
 10912 0da0 83040000 		.4byte	.LASF79
 10913 0da4 01       		.byte	0x1
 10914 0da5 4F07     		.2byte	0x74f
 10915 0da7 CE000000 		.4byte	0xce
 10916 0dab 02       		.uleb128 0x2
 10917 0dac 91       		.byte	0x91
 10918 0dad 4C       		.sleb128 -52
 10919 0dae 16       		.uleb128 0x16
 10920 0daf C2060000 		.4byte	.LBB53
 10921 0db3 96010000 		.4byte	.LBE53-.LBB53
 10922 0db7 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 231


 10923 0db8 F4050000 		.4byte	.LASF133
 10924 0dbc 01       		.byte	0x1
 10925 0dbd 5007     		.2byte	0x750
 10926 0dbf E4000000 		.4byte	0xe4
 10927 0dc3 02       		.uleb128 0x2
 10928 0dc4 91       		.byte	0x91
 10929 0dc5 58       		.sleb128 -40
 10930 0dc6 16       		.uleb128 0x16
 10931 0dc7 1C070000 		.4byte	.LBB54
 10932 0dcb 2E010000 		.4byte	.LBE54-.LBB54
 10933 0dcf 18       		.uleb128 0x18
 10934 0dd0 36040000 		.4byte	.LASF134
 10935 0dd4 01       		.byte	0x1
 10936 0dd5 5A07     		.2byte	0x75a
 10937 0dd7 CE000000 		.4byte	0xce
 10938 0ddb 02       		.uleb128 0x2
 10939 0ddc 91       		.byte	0x91
 10940 0ddd 4A       		.sleb128 -54
 10941 0dde 18       		.uleb128 0x18
 10942 0ddf 7E0D0000 		.4byte	.LASF135
 10943 0de3 01       		.byte	0x1
 10944 0de4 5B07     		.2byte	0x75b
 10945 0de6 B8000000 		.4byte	0xb8
 10946 0dea 02       		.uleb128 0x2
 10947 0deb 91       		.byte	0x91
 10948 0dec 49       		.sleb128 -55
 10949 0ded 18       		.uleb128 0x18
 10950 0dee 30010000 		.4byte	.LASF136
 10951 0df2 01       		.byte	0x1
 10952 0df3 5C07     		.2byte	0x75c
 10953 0df5 B8000000 		.4byte	0xb8
 10954 0df9 02       		.uleb128 0x2
 10955 0dfa 91       		.byte	0x91
 10956 0dfb 48       		.sleb128 -56
 10957 0dfc 18       		.uleb128 0x18
 10958 0dfd BB030000 		.4byte	.LASF80
 10959 0e01 01       		.byte	0x1
 10960 0e02 5F07     		.2byte	0x75f
 10961 0e04 CE000000 		.4byte	0xce
 10962 0e08 02       		.uleb128 0x2
 10963 0e09 91       		.byte	0x91
 10964 0e0a 46       		.sleb128 -58
 10965 0e0b 00       		.byte	0
 10966 0e0c 00       		.byte	0
 10967 0e0d 00       		.byte	0
 10968 0e0e 00       		.byte	0
 10969 0e0f 00       		.byte	0
 10970 0e10 14       		.uleb128 0x14
 10971 0e11 EE080000 		.4byte	.LBB55
 10972 0e15 14010000 		.4byte	.LBE55-.LBB55
 10973 0e19 5B0E0000 		.4byte	0xe5b
 10974 0e1d 18       		.uleb128 0x18
 10975 0e1e 12020000 		.4byte	.LASF127
 10976 0e22 01       		.byte	0x1
 10977 0e23 8307     		.2byte	0x783
 10978 0e25 82020000 		.4byte	0x282
 10979 0e29 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 232


 10980 0e2a 91       		.byte	0x91
 10981 0e2b A87F     		.sleb128 -88
 10982 0e2d 15       		.uleb128 0x15
 10983 0e2e 6900     		.ascii	"i\000"
 10984 0e30 01       		.byte	0x1
 10985 0e31 8407     		.2byte	0x784
 10986 0e33 E4000000 		.4byte	0xe4
 10987 0e37 02       		.uleb128 0x2
 10988 0e38 91       		.byte	0x91
 10989 0e39 40       		.sleb128 -64
 10990 0e3a 18       		.uleb128 0x18
 10991 0e3b 78050000 		.4byte	.LASF137
 10992 0e3f 01       		.byte	0x1
 10993 0e40 8D07     		.2byte	0x78d
 10994 0e42 CE000000 		.4byte	0xce
 10995 0e46 03       		.uleb128 0x3
 10996 0e47 91       		.byte	0x91
 10997 0e48 BE7F     		.sleb128 -66
 10998 0e4a 18       		.uleb128 0x18
 10999 0e4b FA010000 		.4byte	.LASF130
 11000 0e4f 01       		.byte	0x1
 11001 0e50 9B07     		.2byte	0x79b
 11002 0e52 CE000000 		.4byte	0xce
 11003 0e56 03       		.uleb128 0x3
 11004 0e57 91       		.byte	0x91
 11005 0e58 BC7F     		.sleb128 -68
 11006 0e5a 00       		.byte	0
 11007 0e5b 16       		.uleb128 0x16
 11008 0e5c 0E0A0000 		.4byte	.LBB56
 11009 0e60 AA010000 		.4byte	.LBE56-.LBB56
 11010 0e64 18       		.uleb128 0x18
 11011 0e65 12020000 		.4byte	.LASF127
 11012 0e69 01       		.byte	0x1
 11013 0e6a A607     		.2byte	0x7a6
 11014 0e6c 82020000 		.4byte	0x282
 11015 0e70 03       		.uleb128 0x3
 11016 0e71 91       		.byte	0x91
 11017 0e72 A47F     		.sleb128 -92
 11018 0e74 15       		.uleb128 0x15
 11019 0e75 6900     		.ascii	"i\000"
 11020 0e77 01       		.byte	0x1
 11021 0e78 A707     		.2byte	0x7a7
 11022 0e7a E4000000 		.4byte	0xe4
 11023 0e7e 03       		.uleb128 0x3
 11024 0e7f 91       		.byte	0x91
 11025 0e80 B87F     		.sleb128 -72
 11026 0e82 18       		.uleb128 0x18
 11027 0e83 78050000 		.4byte	.LASF137
 11028 0e87 01       		.byte	0x1
 11029 0e88 B007     		.2byte	0x7b0
 11030 0e8a CE000000 		.4byte	0xce
 11031 0e8e 03       		.uleb128 0x3
 11032 0e8f 91       		.byte	0x91
 11033 0e90 B67F     		.sleb128 -74
 11034 0e92 16       		.uleb128 0x16
 11035 0e93 360B0000 		.4byte	.LBB57
 11036 0e97 2C000000 		.4byte	.LBE57-.LBB57
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 233


 11037 0e9b 18       		.uleb128 0x18
 11038 0e9c FA010000 		.4byte	.LASF130
 11039 0ea0 01       		.byte	0x1
 11040 0ea1 C807     		.2byte	0x7c8
 11041 0ea3 C3000000 		.4byte	0xc3
 11042 0ea7 03       		.uleb128 0x3
 11043 0ea8 91       		.byte	0x91
 11044 0ea9 B47F     		.sleb128 -76
 11045 0eab 00       		.byte	0
 11046 0eac 00       		.byte	0
 11047 0ead 00       		.byte	0
 11048 0eae 17       		.uleb128 0x17
 11049 0eaf E8030000 		.4byte	.LASF138
 11050 0eb3 01       		.byte	0x1
 11051 0eb4 E007     		.2byte	0x7e0
 11052 0eb6 00000000 		.4byte	.LFB91
 11053 0eba 50010000 		.4byte	.LFE91-.LFB91
 11054 0ebe 01       		.uleb128 0x1
 11055 0ebf 9C       		.byte	0x9c
 11056 0ec0 FA0E0000 		.4byte	0xefa
 11057 0ec4 11       		.uleb128 0x11
 11058 0ec5 D90B0000 		.4byte	.LASF139
 11059 0ec9 01       		.byte	0x1
 11060 0eca E007     		.2byte	0x7e0
 11061 0ecc EF000000 		.4byte	0xef
 11062 0ed0 02       		.uleb128 0x2
 11063 0ed1 91       		.byte	0x91
 11064 0ed2 6F       		.sleb128 -17
 11065 0ed3 11       		.uleb128 0x11
 11066 0ed4 380D0000 		.4byte	.LASF140
 11067 0ed8 01       		.byte	0x1
 11068 0ed9 E007     		.2byte	0x7e0
 11069 0edb FA0E0000 		.4byte	0xefa
 11070 0edf 02       		.uleb128 0x2
 11071 0ee0 91       		.byte	0x91
 11072 0ee1 68       		.sleb128 -24
 11073 0ee2 16       		.uleb128 0x16
 11074 0ee3 48000000 		.4byte	.LBB58
 11075 0ee7 54000000 		.4byte	.LBE58-.LBB58
 11076 0eeb 15       		.uleb128 0x15
 11077 0eec 6900     		.ascii	"i\000"
 11078 0eee 01       		.byte	0x1
 11079 0eef EC07     		.2byte	0x7ec
 11080 0ef1 9F000000 		.4byte	0x9f
 11081 0ef5 02       		.uleb128 0x2
 11082 0ef6 91       		.byte	0x91
 11083 0ef7 74       		.sleb128 -12
 11084 0ef8 00       		.byte	0
 11085 0ef9 00       		.byte	0
 11086 0efa 1B       		.uleb128 0x1b
 11087 0efb 04       		.byte	0x4
 11088 0efc EF000000 		.4byte	0xef
 11089 0f00 0E       		.uleb128 0xe
 11090 0f01 EF000000 		.4byte	0xef
 11091 0f05 100F0000 		.4byte	0xf10
 11092 0f09 0F       		.uleb128 0xf
 11093 0f0a 4C010000 		.4byte	0x14c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 234


 11094 0f0e 01       		.byte	0x1
 11095 0f0f 00       		.byte	0
 11096 0f10 1C       		.uleb128 0x1c
 11097 0f11 19050000 		.4byte	.LASF141
 11098 0f15 01       		.byte	0x1
 11099 0f16 9A       		.byte	0x9a
 11100 0f17 000F0000 		.4byte	0xf00
 11101 0f1b 05       		.uleb128 0x5
 11102 0f1c 03       		.byte	0x3
 11103 0f1d 6C000000 		.4byte	eepromArray
 11104 0f21 1D       		.uleb128 0x1d
 11105 0f22 1D100000 		.4byte	.LASF142
 11106 0f26 09       		.byte	0x9
 11107 0f27 F3       		.byte	0xf3
 11108 0f28 40010000 		.4byte	0x140
 11109 0f2c 1D       		.uleb128 0x1d
 11110 0f2d E3100000 		.4byte	.LASF143
 11111 0f31 09       		.byte	0x9
 11112 0f32 F9       		.byte	0xf9
 11113 0f33 40010000 		.4byte	0x140
 11114 0f37 0E       		.uleb128 0xe
 11115 0f38 EF000000 		.4byte	0xef
 11116 0f3c 470F0000 		.4byte	0xf47
 11117 0f40 0F       		.uleb128 0xf
 11118 0f41 4C010000 		.4byte	0x14c
 11119 0f45 3F       		.byte	0x3f
 11120 0f46 00       		.byte	0
 11121 0f47 1D       		.uleb128 0x1d
 11122 0f48 6E090000 		.4byte	.LASF144
 11123 0f4c 09       		.byte	0x9
 11124 0f4d FA       		.byte	0xfa
 11125 0f4e 370F0000 		.4byte	0xf37
 11126 0f52 1D       		.uleb128 0x1d
 11127 0f53 90050000 		.4byte	.LASF145
 11128 0f57 09       		.byte	0x9
 11129 0f58 FE       		.byte	0xfe
 11130 0f59 40010000 		.4byte	0x140
 11131 0f5d 1D       		.uleb128 0x1d
 11132 0f5e 5B100000 		.4byte	.LASF146
 11133 0f62 09       		.byte	0x9
 11134 0f63 FF       		.byte	0xff
 11135 0f64 370F0000 		.4byte	0xf37
 11136 0f68 1D       		.uleb128 0x1d
 11137 0f69 A8000000 		.4byte	.LASF147
 11138 0f6d 0A       		.byte	0xa
 11139 0f6e 82       		.byte	0x82
 11140 0f6f C5010000 		.4byte	0x1c5
 11141 0f73 0E       		.uleb128 0xe
 11142 0f74 840F0000 		.4byte	0xf84
 11143 0f78 840F0000 		.4byte	0xf84
 11144 0f7c 1E       		.uleb128 0x1e
 11145 0f7d 4C010000 		.4byte	0x14c
 11146 0f81 FF03     		.2byte	0x3ff
 11147 0f83 00       		.byte	0
 11148 0f84 1F       		.uleb128 0x1f
 11149 0f85 B8000000 		.4byte	0xb8
 11150 0f89 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 235


 11151 0f8a 51080000 		.4byte	.LASF148
 11152 0f8e 01       		.byte	0x1
 11153 0f8f A3       		.byte	0xa3
 11154 0f90 9A0F0000 		.4byte	0xf9a
 11155 0f94 05       		.uleb128 0x5
 11156 0f95 03       		.byte	0x3
 11157 0f96 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 11158 0f9a 1F       		.uleb128 0x1f
 11159 0f9b 730F0000 		.4byte	0xf73
 11160 0f9f 1D       		.uleb128 0x1d
 11161 0fa0 80060000 		.4byte	.LASF149
 11162 0fa4 0B       		.byte	0xb
 11163 0fa5 F9       		.byte	0xf9
 11164 0fa6 EF000000 		.4byte	0xef
 11165 0faa 21       		.uleb128 0x21
 11166 0fab 210B0000 		.4byte	.LASF150
 11167 0faf 0C       		.byte	0xc
 11168 0fb0 1207     		.2byte	0x712
 11169 0fb2 B60F0000 		.4byte	0xfb6
 11170 0fb6 06       		.uleb128 0x6
 11171 0fb7 D9000000 		.4byte	0xd9
 11172 0fbb 20       		.uleb128 0x20
 11173 0fbc 7E080000 		.4byte	.LASF151
 11174 0fc0 0D       		.byte	0xd
 11175 0fc1 41       		.byte	0x41
 11176 0fc2 EF000000 		.4byte	0xef
 11177 0fc6 05       		.uleb128 0x5
 11178 0fc7 03       		.byte	0x3
 11179 0fc8 00000000 		.4byte	Decoder_1_Enabled
 11180 0fcc 0E       		.uleb128 0xe
 11181 0fcd 09020000 		.4byte	0x209
 11182 0fd1 DC0F0000 		.4byte	0xfdc
 11183 0fd5 0F       		.uleb128 0xf
 11184 0fd6 4C010000 		.4byte	0x14c
 11185 0fda FF       		.byte	0xff
 11186 0fdb 00       		.byte	0
 11187 0fdc 20       		.uleb128 0x20
 11188 0fdd 13010000 		.4byte	.LASF152
 11189 0fe1 01       		.byte	0x1
 11190 0fe2 AD       		.byte	0xad
 11191 0fe3 ED0F0000 		.4byte	0xfed
 11192 0fe7 05       		.uleb128 0x5
 11193 0fe8 03       		.byte	0x3
 11194 0fe9 00000000 		.4byte	I2Cbuff1
 11195 0fed 06       		.uleb128 0x6
 11196 0fee CC0F0000 		.4byte	0xfcc
 11197 0ff2 20       		.uleb128 0x20
 11198 0ff3 3E010000 		.4byte	.LASF153
 11199 0ff7 01       		.byte	0x1
 11200 0ff8 51       		.byte	0x51
 11201 0ff9 9F000000 		.4byte	0x9f
 11202 0ffd 05       		.uleb128 0x5
 11203 0ffe 03       		.byte	0x3
 11204 0fff 00000000 		.4byte	octave
 11205 1003 20       		.uleb128 0x20
 11206 1004 490D0000 		.4byte	.LASF154
 11207 1008 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 236


 11208 1009 F6       		.byte	0xf6
 11209 100a B8000000 		.4byte	0xb8
 11210 100e 05       		.uleb128 0x5
 11211 100f 03       		.byte	0x3
 11212 1010 00000000 		.4byte	currentNeck
 11213 1014 20       		.uleb128 0x20
 11214 1015 8E060000 		.4byte	.LASF155
 11215 1019 01       		.byte	0x1
 11216 101a 5C       		.byte	0x5c
 11217 101b B8000000 		.4byte	0xb8
 11218 101f 05       		.uleb128 0x5
 11219 1020 03       		.byte	0x3
 11220 1021 00000000 		.4byte	currentCopedent
 11221 1025 20       		.uleb128 0x20
 11222 1026 A9020000 		.4byte	.LASF156
 11223 102a 01       		.byte	0x1
 11224 102b F1       		.byte	0xf1
 11225 102c B8000000 		.4byte	0xb8
 11226 1030 05       		.uleb128 0x5
 11227 1031 03       		.byte	0x3
 11228 1032 00000000 		.4byte	mainOLEDWaitingToSend
 11229 1036 20       		.uleb128 0x20
 11230 1037 73010000 		.4byte	.LASF157
 11231 103b 01       		.byte	0x1
 11232 103c F2       		.byte	0xf2
 11233 103d B8000000 		.4byte	0xb8
 11234 1041 05       		.uleb128 0x5
 11235 1042 03       		.byte	0x3
 11236 1043 00000000 		.4byte	macroOLEDWaitingToSend
 11237 1047 20       		.uleb128 0x20
 11238 1048 B30F0000 		.4byte	.LASF158
 11239 104c 01       		.byte	0x1
 11240 104d F7       		.byte	0xf7
 11241 104e B8000000 		.4byte	0xb8
 11242 1052 05       		.uleb128 0x5
 11243 1053 03       		.byte	0x3
 11244 1054 00000000 		.4byte	neckByte
 11245 1058 0E       		.uleb128 0xe
 11246 1059 B8000000 		.4byte	0xb8
 11247 105d 68100000 		.4byte	0x1068
 11248 1061 0F       		.uleb128 0xf
 11249 1062 4C010000 		.4byte	0x14c
 11250 1066 01       		.byte	0x1
 11251 1067 00       		.byte	0
 11252 1068 20       		.uleb128 0x20
 11253 1069 38010000 		.4byte	.LASF159
 11254 106d 01       		.byte	0x1
 11255 106e 5D       		.byte	0x5d
 11256 106f 58100000 		.4byte	0x1058
 11257 1073 05       		.uleb128 0x5
 11258 1074 03       		.byte	0x3
 11259 1075 00000000 		.4byte	necks
 11260 1079 20       		.uleb128 0x20
 11261 107a 550D0000 		.4byte	.LASF160
 11262 107e 01       		.byte	0x1
 11263 107f F9       		.byte	0xf9
 11264 1080 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 237


 11265 1084 05       		.uleb128 0x5
 11266 1085 03       		.byte	0x3
 11267 1086 00000000 		.4byte	editMode
 11268 108a 0E       		.uleb128 0xe
 11269 108b B8000000 		.4byte	0xb8
 11270 108f A6100000 		.4byte	0x10a6
 11271 1093 0F       		.uleb128 0xf
 11272 1094 4C010000 		.4byte	0x14c
 11273 1098 3F       		.byte	0x3f
 11274 1099 0F       		.uleb128 0xf
 11275 109a 4C010000 		.4byte	0x14c
 11276 109e 07       		.byte	0x7
 11277 109f 0F       		.uleb128 0xf
 11278 10a0 4C010000 		.4byte	0x14c
 11279 10a4 0D       		.byte	0xd
 11280 10a5 00       		.byte	0
 11281 10a6 20       		.uleb128 0x20
 11282 10a7 7B000000 		.4byte	.LASF161
 11283 10ab 01       		.byte	0x1
 11284 10ac CE       		.byte	0xce
 11285 10ad 8A100000 		.4byte	0x108a
 11286 10b1 05       		.uleb128 0x5
 11287 10b2 03       		.byte	0x3
 11288 10b3 00000000 		.4byte	macroNamesArray
 11289 10b7 20       		.uleb128 0x20
 11290 10b8 F80E0000 		.4byte	.LASF162
 11291 10bc 01       		.byte	0x1
 11292 10bd DA       		.byte	0xda
 11293 10be B8000000 		.4byte	0xb8
 11294 10c2 05       		.uleb128 0x5
 11295 10c3 03       		.byte	0x3
 11296 10c4 00000000 		.4byte	patchNum
 11297 10c8 20       		.uleb128 0x20
 11298 10c9 2A090000 		.4byte	.LASF163
 11299 10cd 01       		.byte	0x1
 11300 10ce C9       		.byte	0xc9
 11301 10cf B8000000 		.4byte	0xb8
 11302 10d3 05       		.uleb128 0x5
 11303 10d4 03       		.byte	0x3
 11304 10d5 00000000 		.4byte	currentPresetSelection
 11305 10d9 0E       		.uleb128 0xe
 11306 10da B8000000 		.4byte	0xb8
 11307 10de EF100000 		.4byte	0x10ef
 11308 10e2 0F       		.uleb128 0xf
 11309 10e3 4C010000 		.4byte	0x14c
 11310 10e7 3F       		.byte	0x3f
 11311 10e8 0F       		.uleb128 0xf
 11312 10e9 4C010000 		.4byte	0x14c
 11313 10ed 0D       		.byte	0xd
 11314 10ee 00       		.byte	0
 11315 10ef 20       		.uleb128 0x20
 11316 10f0 11030000 		.4byte	.LASF164
 11317 10f4 01       		.byte	0x1
 11318 10f5 CA       		.byte	0xca
 11319 10f6 D9100000 		.4byte	0x10d9
 11320 10fa 05       		.uleb128 0x5
 11321 10fb 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 238


 11322 10fc 00000000 		.4byte	presetNamesArray
 11323 1100 20       		.uleb128 0x20
 11324 1101 7F020000 		.4byte	.LASF165
 11325 1105 01       		.byte	0x1
 11326 1106 CB       		.byte	0xcb
 11327 1107 B8000000 		.4byte	0xb8
 11328 110b 05       		.uleb128 0x5
 11329 110c 03       		.byte	0x3
 11330 110d 00000000 		.4byte	presetNumberToLoad
 11331 1111 0E       		.uleb128 0xe
 11332 1112 B8000000 		.4byte	0xb8
 11333 1116 27110000 		.4byte	0x1127
 11334 111a 0F       		.uleb128 0xf
 11335 111b 4C010000 		.4byte	0x14c
 11336 111f 06       		.byte	0x6
 11337 1120 0F       		.uleb128 0xf
 11338 1121 4C010000 		.4byte	0x14c
 11339 1125 0D       		.byte	0xd
 11340 1126 00       		.byte	0
 11341 1127 20       		.uleb128 0x20
 11342 1128 9D010000 		.4byte	.LASF166
 11343 112c 01       		.byte	0x1
 11344 112d E0       		.byte	0xe0
 11345 112e 11110000 		.4byte	0x1111
 11346 1132 05       		.uleb128 0x5
 11347 1133 03       		.byte	0x3
 11348 1134 00000000 		.4byte	copedentNamesArray
 11349 1138 0E       		.uleb128 0xe
 11350 1139 B8000000 		.4byte	0xb8
 11351 113d 48110000 		.4byte	0x1148
 11352 1141 0F       		.uleb128 0xf
 11353 1142 4C010000 		.4byte	0x14c
 11354 1146 3F       		.byte	0x3f
 11355 1147 00       		.byte	0
 11356 1148 20       		.uleb128 0x20
 11357 1149 E6040000 		.4byte	.LASF167
 11358 114d 01       		.byte	0x1
 11359 114e F4       		.byte	0xf4
 11360 114f 38110000 		.4byte	0x1138
 11361 1153 05       		.uleb128 0x5
 11362 1154 03       		.byte	0x3
 11363 1155 00000000 		.4byte	presetAlreadyDisplayed
 11364 1159 20       		.uleb128 0x20
 11365 115a F3060000 		.4byte	.LASF168
 11366 115e 01       		.byte	0x1
 11367 115f 95       		.byte	0x95
 11368 1160 B8000000 		.4byte	0xb8
 11369 1164 05       		.uleb128 0x5
 11370 1165 03       		.byte	0x3
 11371 1166 00000000 		.4byte	whichMacro
 11372 116a 20       		.uleb128 0x20
 11373 116b 8F0E0000 		.4byte	.LASF169
 11374 116f 01       		.byte	0x1
 11375 1170 FB       		.byte	0xfb
 11376 1171 B8000000 		.4byte	0xb8
 11377 1175 05       		.uleb128 0x5
 11378 1176 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 239


 11379 1177 00000000 		.4byte	fretCalibrationMode
 11380 117b 20       		.uleb128 0x20
 11381 117c CE100000 		.4byte	.LASF170
 11382 1180 01       		.byte	0x1
 11383 1181 FA       		.byte	0xfa
 11384 1182 B8000000 		.4byte	0xb8
 11385 1186 05       		.uleb128 0x5
 11386 1187 03       		.byte	0x3
 11387 1188 00000000 		.4byte	leverCalibrationMode
 11388 118c 0E       		.uleb128 0xe
 11389 118d CE000000 		.4byte	0xce
 11390 1191 A2110000 		.4byte	0x11a2
 11391 1195 0F       		.uleb128 0xf
 11392 1196 4C010000 		.4byte	0x14c
 11393 119a 01       		.byte	0x1
 11394 119b 0F       		.uleb128 0xf
 11395 119c 4C010000 		.4byte	0x14c
 11396 11a0 0B       		.byte	0xb
 11397 11a1 00       		.byte	0
 11398 11a2 20       		.uleb128 0x20
 11399 11a3 8F0F0000 		.4byte	.LASF171
 11400 11a7 01       		.byte	0x1
 11401 11a8 C7       		.byte	0xc7
 11402 11a9 8C110000 		.4byte	0x118c
 11403 11ad 05       		.uleb128 0x5
 11404 11ae 03       		.byte	0x3
 11405 11af 00000000 		.4byte	fretMeasurements
 11406 11b3 0E       		.uleb128 0xe
 11407 11b4 CE000000 		.4byte	0xce
 11408 11b8 C3110000 		.4byte	0x11c3
 11409 11bc 0F       		.uleb128 0xf
 11410 11bd 4C010000 		.4byte	0x14c
 11411 11c1 09       		.byte	0x9
 11412 11c2 00       		.byte	0
 11413 11c3 20       		.uleb128 0x20
 11414 11c4 830C0000 		.4byte	.LASF172
 11415 11c8 01       		.byte	0x1
 11416 11c9 B7       		.byte	0xb7
 11417 11ca B3110000 		.4byte	0x11b3
 11418 11ce 05       		.uleb128 0x5
 11419 11cf 03       		.byte	0x3
 11420 11d0 00000000 		.4byte	pedals_low
 11421 11d4 20       		.uleb128 0x20
 11422 11d5 8A010000 		.4byte	.LASF173
 11423 11d9 01       		.byte	0x1
 11424 11da B8       		.byte	0xb8
 11425 11db B3110000 		.4byte	0x11b3
 11426 11df 05       		.uleb128 0x5
 11427 11e0 03       		.byte	0x3
 11428 11e1 00000000 		.4byte	pedals_high
 11429 11e5 0E       		.uleb128 0xe
 11430 11e6 B8000000 		.4byte	0xb8
 11431 11ea F5110000 		.4byte	0x11f5
 11432 11ee 0F       		.uleb128 0xf
 11433 11ef 4C010000 		.4byte	0x14c
 11434 11f3 09       		.byte	0x9
 11435 11f4 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 240


 11436 11f5 20       		.uleb128 0x20
 11437 11f6 AA050000 		.4byte	.LASF174
 11438 11fa 01       		.byte	0x1
 11439 11fb DC       		.byte	0xdc
 11440 11fc E5110000 		.4byte	0x11e5
 11441 1200 05       		.uleb128 0x5
 11442 1201 03       		.byte	0x3
 11443 1202 00000000 		.4byte	pedal_inverted
 11444 1206 20       		.uleb128 0x20
 11445 1207 E6080000 		.4byte	.LASF175
 11446 120b 01       		.byte	0x1
 11447 120c 52       		.byte	0x52
 11448 120d B3110000 		.4byte	0x11b3
 11449 1211 05       		.uleb128 0x5
 11450 1212 03       		.byte	0x3
 11451 1213 00000000 		.4byte	angle
 11452 1217 0E       		.uleb128 0xe
 11453 1218 0E020000 		.4byte	0x20e
 11454 121c 27120000 		.4byte	0x1227
 11455 1220 0F       		.uleb128 0xf
 11456 1221 4C010000 		.4byte	0x14c
 11457 1225 01       		.byte	0x1
 11458 1226 00       		.byte	0
 11459 1227 22       		.uleb128 0x22
 11460 1228 62617200 		.ascii	"bar\000"
 11461 122c 01       		.byte	0x1
 11462 122d 6E       		.byte	0x6e
 11463 122e 38120000 		.4byte	0x1238
 11464 1232 05       		.uleb128 0x5
 11465 1233 03       		.byte	0x3
 11466 1234 00000000 		.4byte	bar
 11467 1238 06       		.uleb128 0x6
 11468 1239 17120000 		.4byte	0x1217
 11469 123d 20       		.uleb128 0x20
 11470 123e 4F0E0000 		.4byte	.LASF176
 11471 1242 01       		.byte	0x1
 11472 1243 20       		.byte	0x20
 11473 1244 AD000000 		.4byte	0xad
 11474 1248 05       		.uleb128 0x5
 11475 1249 03       		.byte	0x3
 11476 124a 00000000 		.4byte	transposeSemitones
 11477 124e 20       		.uleb128 0x20
 11478 124f 49060000 		.4byte	.LASF177
 11479 1253 01       		.byte	0x1
 11480 1254 21       		.byte	0x21
 11481 1255 AD000000 		.4byte	0xad
 11482 1259 05       		.uleb128 0x5
 11483 125a 03       		.byte	0x3
 11484 125b 00000000 		.4byte	transposeCents
 11485 125f 20       		.uleb128 0x20
 11486 1260 C0110000 		.4byte	.LASF178
 11487 1264 01       		.byte	0x1
 11488 1265 22       		.byte	0x22
 11489 1266 13010000 		.4byte	0x113
 11490 126a 05       		.uleb128 0x5
 11491 126b 03       		.byte	0x3
 11492 126c 00000000 		.4byte	transposeFloat
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 241


 11493 1270 20       		.uleb128 0x20
 11494 1271 690F0000 		.4byte	.LASF179
 11495 1275 01       		.byte	0x1
 11496 1276 74       		.byte	0x74
 11497 1277 9F000000 		.4byte	0x9f
 11498 127b 05       		.uleb128 0x5
 11499 127c 03       		.byte	0x3
 11500 127d 00000000 		.4byte	prevOctave
 11501 1281 20       		.uleb128 0x20
 11502 1282 330A0000 		.4byte	.LASF180
 11503 1286 01       		.byte	0x1
 11504 1287 D7       		.byte	0xd7
 11505 1288 B8000000 		.4byte	0xb8
 11506 128c 05       		.uleb128 0x5
 11507 128d 03       		.byte	0x3
 11508 128e 00000000 		.4byte	dualSlider
 11509 1292 20       		.uleb128 0x20
 11510 1293 ED0B0000 		.4byte	.LASF181
 11511 1297 01       		.byte	0x1
 11512 1298 BB       		.byte	0xbb
 11513 1299 B8000000 		.4byte	0xb8
 11514 129d 05       		.uleb128 0x5
 11515 129e 03       		.byte	0x3
 11516 129f 00000000 		.4byte	deadZone
 11517 12a3 20       		.uleb128 0x20
 11518 12a4 8F0A0000 		.4byte	.LASF182
 11519 12a8 01       		.byte	0x1
 11520 12a9 28       		.byte	0x28
 11521 12aa 58100000 		.4byte	0x1058
 11522 12ae 05       		.uleb128 0x5
 11523 12af 03       		.byte	0x3
 11524 12b0 00000000 		.4byte	stringRepresentation
 11525 12b4 20       		.uleb128 0x20
 11526 12b5 0E110000 		.4byte	.LASF183
 11527 12b9 01       		.byte	0x1
 11528 12ba 27       		.byte	0x27
 11529 12bb B8000000 		.4byte	0xb8
 11530 12bf 05       		.uleb128 0x5
 11531 12c0 03       		.byte	0x3
 11532 12c1 00000000 		.4byte	octaveAction
 11533 12c5 20       		.uleb128 0x20
 11534 12c6 010B0000 		.4byte	.LASF184
 11535 12ca 01       		.byte	0x1
 11536 12cb 23       		.byte	0x23
 11537 12cc B8000000 		.4byte	0xb8
 11538 12d0 05       		.uleb128 0x5
 11539 12d1 03       		.byte	0x3
 11540 12d2 00000000 		.4byte	midiSendOn
 11541 12d6 20       		.uleb128 0x20
 11542 12d7 8E030000 		.4byte	.LASF185
 11543 12db 01       		.byte	0x1
 11544 12dc 24       		.byte	0x24
 11545 12dd B8000000 		.4byte	0xb8
 11546 12e1 05       		.uleb128 0x5
 11547 12e2 03       		.byte	0x3
 11548 12e3 00000000 		.4byte	midiBarSendOn
 11549 12e7 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 242


 11550 12e8 B8000000 		.4byte	0xb8
 11551 12ec F8120000 		.4byte	0x12f8
 11552 12f0 1E       		.uleb128 0x1e
 11553 12f1 4C010000 		.4byte	0x14c
 11554 12f5 FF07     		.2byte	0x7ff
 11555 12f7 00       		.byte	0
 11556 12f8 20       		.uleb128 0x20
 11557 12f9 B90E0000 		.4byte	.LASF186
 11558 12fd 01       		.byte	0x1
 11559 12fe 0E       		.byte	0xe
 11560 12ff E7120000 		.4byte	0x12e7
 11561 1303 05       		.uleb128 0x5
 11562 1304 03       		.byte	0x3
 11563 1305 00000000 		.4byte	sysexBuffer
 11564 1309 20       		.uleb128 0x20
 11565 130a A2030000 		.4byte	.LASF187
 11566 130e 01       		.byte	0x1
 11567 130f 0F       		.byte	0xf
 11568 1310 E4000000 		.4byte	0xe4
 11569 1314 05       		.uleb128 0x5
 11570 1315 03       		.byte	0x3
 11571 1316 00000000 		.4byte	sysexPointer
 11572 131a 20       		.uleb128 0x20
 11573 131b CA0B0000 		.4byte	.LASF188
 11574 131f 01       		.byte	0x1
 11575 1320 10       		.byte	0x10
 11576 1321 B8000000 		.4byte	0xb8
 11577 1325 05       		.uleb128 0x5
 11578 1326 03       		.byte	0x3
 11579 1327 00000000 		.4byte	receivingSysex
 11580 132b 20       		.uleb128 0x20
 11581 132c C2060000 		.4byte	.LASF189
 11582 1330 01       		.byte	0x1
 11583 1331 11       		.byte	0x11
 11584 1332 B8000000 		.4byte	0xb8
 11585 1336 05       		.uleb128 0x5
 11586 1337 03       		.byte	0x3
 11587 1338 00000000 		.4byte	parsingSysex
 11588 133c 0E       		.uleb128 0xe
 11589 133d 09020000 		.4byte	0x209
 11590 1341 4D130000 		.4byte	0x134d
 11591 1345 1E       		.uleb128 0x1e
 11592 1346 4C010000 		.4byte	0x14c
 11593 134a FF07     		.2byte	0x7ff
 11594 134c 00       		.byte	0
 11595 134d 20       		.uleb128 0x20
 11596 134e 1A000000 		.4byte	.LASF190
 11597 1352 01       		.byte	0x1
 11598 1353 12       		.byte	0x12
 11599 1354 5E130000 		.4byte	0x135e
 11600 1358 05       		.uleb128 0x5
 11601 1359 03       		.byte	0x3
 11602 135a 00000000 		.4byte	presetArray
 11603 135e 06       		.uleb128 0x6
 11604 135f 3C130000 		.4byte	0x133c
 11605 1363 20       		.uleb128 0x20
 11606 1364 E6020000 		.4byte	.LASF191
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 243


 11607 1368 01       		.byte	0x1
 11608 1369 13       		.byte	0x13
 11609 136a B8000000 		.4byte	0xb8
 11610 136e 05       		.uleb128 0x5
 11611 136f 03       		.byte	0x3
 11612 1370 00000000 		.4byte	presetNumberToWrite
 11613 1374 20       		.uleb128 0x20
 11614 1375 050E0000 		.4byte	.LASF192
 11615 1379 01       		.byte	0x1
 11616 137a 14       		.byte	0x14
 11617 137b B8000000 		.4byte	0xb8
 11618 137f 05       		.uleb128 0x5
 11619 1380 03       		.byte	0x3
 11620 1381 00000000 		.4byte	copedentNumberToWrite
 11621 1385 20       		.uleb128 0x20
 11622 1386 58020000 		.4byte	.LASF193
 11623 138a 01       		.byte	0x1
 11624 138b 15       		.byte	0x15
 11625 138c B8000000 		.4byte	0xb8
 11626 1390 05       		.uleb128 0x5
 11627 1391 03       		.byte	0x3
 11628 1392 00000000 		.4byte	sendMessageEnd
 11629 1396 20       		.uleb128 0x20
 11630 1397 A30E0000 		.4byte	.LASF194
 11631 139b 01       		.byte	0x1
 11632 139c 17       		.byte	0x17
 11633 139d B8000000 		.4byte	0xb8
 11634 13a1 05       		.uleb128 0x5
 11635 13a2 03       		.byte	0x3
 11636 13a3 00000000 		.4byte	sendSingleParamUpdate
 11637 13a7 20       		.uleb128 0x20
 11638 13a8 B6040000 		.4byte	.LASF195
 11639 13ac 01       		.byte	0x1
 11640 13ad 18       		.byte	0x18
 11641 13ae B8000000 		.4byte	0xb8
 11642 13b2 05       		.uleb128 0x5
 11643 13b3 03       		.byte	0x3
 11644 13b4 00000000 		.4byte	singleParamToUpdateHigh
 11645 13b8 20       		.uleb128 0x20
 11646 13b9 2E0B0000 		.4byte	.LASF196
 11647 13bd 01       		.byte	0x1
 11648 13be 19       		.byte	0x19
 11649 13bf B8000000 		.4byte	0xb8
 11650 13c3 05       		.uleb128 0x5
 11651 13c4 03       		.byte	0x3
 11652 13c5 00000000 		.4byte	singleParamToUpdateLow
 11653 13c9 20       		.uleb128 0x20
 11654 13ca 0C0B0000 		.4byte	.LASF197
 11655 13ce 01       		.byte	0x1
 11656 13cf 1A       		.byte	0x1a
 11657 13d0 B8000000 		.4byte	0xb8
 11658 13d4 05       		.uleb128 0x5
 11659 13d5 03       		.byte	0x3
 11660 13d6 00000000 		.4byte	singleParamValueHigh
 11661 13da 20       		.uleb128 0x20
 11662 13db 14060000 		.4byte	.LASF198
 11663 13df 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 244


 11664 13e0 1B       		.byte	0x1b
 11665 13e1 B8000000 		.4byte	0xb8
 11666 13e5 05       		.uleb128 0x5
 11667 13e6 03       		.byte	0x3
 11668 13e7 00000000 		.4byte	singleParamValueLow
 11669 13eb 20       		.uleb128 0x20
 11670 13ec D00D0000 		.4byte	.LASF199
 11671 13f0 01       		.byte	0x1
 11672 13f1 1D       		.byte	0x1d
 11673 13f2 B8000000 		.4byte	0xb8
 11674 13f6 05       		.uleb128 0x5
 11675 13f7 03       		.byte	0x3
 11676 13f8 00000000 		.4byte	sendMappingChangeUpdate
 11677 13fc 20       		.uleb128 0x20
 11678 13fd 52110000 		.4byte	.LASF200
 11679 1401 01       		.byte	0x1
 11680 1402 25       		.byte	0x25
 11681 1403 B8000000 		.4byte	0xb8
 11682 1407 05       		.uleb128 0x5
 11683 1408 03       		.byte	0x3
 11684 1409 00000000 		.4byte	pitchSmoothing
 11685 140d 20       		.uleb128 0x20
 11686 140e A00D0000 		.4byte	.LASF201
 11687 1412 01       		.byte	0x1
 11688 1413 26       		.byte	0x26
 11689 1414 B8000000 		.4byte	0xb8
 11690 1418 05       		.uleb128 0x5
 11691 1419 03       		.byte	0x3
 11692 141a 00000000 		.4byte	controlSmoothing
 11693 141e 20       		.uleb128 0x20
 11694 141f 00000000 		.4byte	.LASF202
 11695 1423 01       		.byte	0x1
 11696 1424 2A       		.byte	0x2a
 11697 1425 B8000000 		.4byte	0xb8
 11698 1429 05       		.uleb128 0x5
 11699 142a 03       		.byte	0x3
 11700 142b 00000000 		.4byte	presetArraySection
 11701 142f 20       		.uleb128 0x20
 11702 1430 600A0000 		.4byte	.LASF203
 11703 1434 01       		.byte	0x1
 11704 1435 2C       		.byte	0x2c
 11705 1436 CE000000 		.4byte	0xce
 11706 143a 05       		.uleb128 0x5
 11707 143b 03       		.byte	0x3
 11708 143c 00000000 		.4byte	messageArraySendCount
 11709 1440 20       		.uleb128 0x20
 11710 1441 7E0F0000 		.4byte	.LASF204
 11711 1445 01       		.byte	0x1
 11712 1446 2D       		.byte	0x2d
 11713 1447 CE000000 		.4byte	0xce
 11714 144b 05       		.uleb128 0x5
 11715 144c 03       		.byte	0x3
 11716 144d 00000000 		.4byte	messageArraySize
 11717 1451 20       		.uleb128 0x20
 11718 1452 4E070000 		.4byte	.LASF205
 11719 1456 01       		.byte	0x1
 11720 1457 2F       		.byte	0x2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 245


 11721 1458 B8000000 		.4byte	0xb8
 11722 145c 05       		.uleb128 0x5
 11723 145d 03       		.byte	0x3
 11724 145e 00000000 		.4byte	sysexMessageInProgress
 11725 1462 20       		.uleb128 0x20
 11726 1463 C50E0000 		.4byte	.LASF206
 11727 1467 01       		.byte	0x1
 11728 1468 31       		.byte	0x31
 11729 1469 B8000000 		.4byte	0xb8
 11730 146d 05       		.uleb128 0x5
 11731 146e 03       		.byte	0x3
 11732 146f 00000000 		.4byte	bufCount
 11733 1473 20       		.uleb128 0x20
 11734 1474 3A000000 		.4byte	.LASF207
 11735 1478 01       		.byte	0x1
 11736 1479 32       		.byte	0x32
 11737 147a 09020000 		.4byte	0x209
 11738 147e 05       		.uleb128 0x5
 11739 147f 03       		.byte	0x3
 11740 1480 00000000 		.4byte	sendingMessage
 11741 1484 20       		.uleb128 0x20
 11742 1485 6C030000 		.4byte	.LASF208
 11743 1489 01       		.byte	0x1
 11744 148a 33       		.byte	0x33
 11745 148b 09020000 		.4byte	0x209
 11746 148f 05       		.uleb128 0x5
 11747 1490 03       		.byte	0x3
 11748 1491 00000000 		.4byte	sendKnobs
 11749 1495 20       		.uleb128 0x20
 11750 1496 45010000 		.4byte	.LASF209
 11751 149a 01       		.byte	0x1
 11752 149b 34       		.byte	0x34
 11753 149c E4000000 		.4byte	0xe4
 11754 14a0 05       		.uleb128 0x5
 11755 14a1 03       		.byte	0x3
 11756 14a2 00000000 		.4byte	currentFloat
 11757 14a6 20       		.uleb128 0x20
 11758 14a7 2D040000 		.4byte	.LASF210
 11759 14ab 01       		.byte	0x1
 11760 14ac 35       		.byte	0x35
 11761 14ad E4000000 		.4byte	0xe4
 11762 14b1 05       		.uleb128 0x5
 11763 14b2 03       		.byte	0x3
 11764 14b3 00000000 		.4byte	mapCount
 11765 14b7 20       		.uleb128 0x20
 11766 14b8 B0010000 		.4byte	.LASF211
 11767 14bc 01       		.byte	0x1
 11768 14bd 37       		.byte	0x37
 11769 14be CE000000 		.4byte	0xce
 11770 14c2 05       		.uleb128 0x5
 11771 14c3 03       		.byte	0x3
 11772 14c4 00000000 		.4byte	valsCount
 11773 14c8 20       		.uleb128 0x20
 11774 14c9 31020000 		.4byte	.LASF212
 11775 14cd 01       		.byte	0x1
 11776 14ce 38       		.byte	0x38
 11777 14cf CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 246


 11778 14d3 05       		.uleb128 0x5
 11779 14d4 03       		.byte	0x3
 11780 14d5 00000000 		.4byte	mapCountExpectation
 11781 14d9 20       		.uleb128 0x20
 11782 14da 07010000 		.4byte	.LASF213
 11783 14de 01       		.byte	0x1
 11784 14df 39       		.byte	0x39
 11785 14e0 CE000000 		.4byte	0xce
 11786 14e4 05       		.uleb128 0x5
 11787 14e5 03       		.byte	0x3
 11788 14e6 00000000 		.4byte	numMappings
 11789 14ea 20       		.uleb128 0x20
 11790 14eb 620E0000 		.4byte	.LASF214
 11791 14ef 01       		.byte	0x1
 11792 14f0 3A       		.byte	0x3a
 11793 14f1 09020000 		.4byte	0x209
 11794 14f5 05       		.uleb128 0x5
 11795 14f6 03       		.byte	0x3
 11796 14f7 00000000 		.4byte	parseThatMF
 11797 14fb 20       		.uleb128 0x20
 11798 14fc 5F040000 		.4byte	.LASF215
 11799 1500 01       		.byte	0x1
 11800 1501 3B       		.byte	0x3b
 11801 1502 0C150000 		.4byte	0x150c
 11802 1506 05       		.uleb128 0x5
 11803 1507 03       		.byte	0x3
 11804 1508 00000000 		.4byte	valCheck
 11805 150c 06       		.uleb128 0x6
 11806 150d 13010000 		.4byte	0x113
 11807 1511 20       		.uleb128 0x20
 11808 1512 870D0000 		.4byte	.LASF216
 11809 1516 01       		.byte	0x1
 11810 1517 3C       		.byte	0x3c
 11811 1518 0C150000 		.4byte	0x150c
 11812 151c 05       		.uleb128 0x5
 11813 151d 03       		.byte	0x3
 11814 151e 00000000 		.4byte	testVal
 11815 1522 20       		.uleb128 0x20
 11816 1523 EC080000 		.4byte	.LASF217
 11817 1527 01       		.byte	0x1
 11818 1528 3E       		.byte	0x3e
 11819 1529 B8000000 		.4byte	0xb8
 11820 152d 05       		.uleb128 0x5
 11821 152e 03       		.byte	0x3
 11822 152f 00000000 		.4byte	numStrings
 11823 1533 20       		.uleb128 0x20
 11824 1534 3C0E0000 		.4byte	.LASF218
 11825 1538 01       		.byte	0x1
 11826 1539 44       		.byte	0x44
 11827 153a 09020000 		.4byte	0x209
 11828 153e 05       		.uleb128 0x5
 11829 153f 03       		.byte	0x3
 11830 1540 00000000 		.4byte	usbActivityCounter
 11831 1544 20       		.uleb128 0x20
 11832 1545 380D0000 		.4byte	.LASF140
 11833 1549 01       		.byte	0x1
 11834 154a 45       		.byte	0x45
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 247


 11835 154b AC020000 		.4byte	0x2ac
 11836 154f 05       		.uleb128 0x5
 11837 1550 03       		.byte	0x3
 11838 1551 00000000 		.4byte	midiMsg
 11839 1555 20       		.uleb128 0x20
 11840 1556 AF030000 		.4byte	.LASF219
 11841 155a 01       		.byte	0x1
 11842 155b 46       		.byte	0x46
 11843 155c B8000000 		.4byte	0xb8
 11844 1560 05       		.uleb128 0x5
 11845 1561 03       		.byte	0x3
 11846 1562 00000000 		.4byte	currentVBUS
 11847 1566 20       		.uleb128 0x20
 11848 1567 1B110000 		.4byte	.LASF220
 11849 156b 01       		.byte	0x1
 11850 156c 47       		.byte	0x47
 11851 156d B8000000 		.4byte	0xb8
 11852 1571 05       		.uleb128 0x5
 11853 1572 03       		.byte	0x3
 11854 1573 00000000 		.4byte	prevVBUS
 11855 1577 20       		.uleb128 0x20
 11856 1578 840E0000 		.4byte	.LASF221
 11857 157c 01       		.byte	0x1
 11858 157d 48       		.byte	0x48
 11859 157e 09020000 		.4byte	0x209
 11860 1582 05       		.uleb128 0x5
 11861 1583 03       		.byte	0x3
 11862 1584 00000000 		.4byte	USB_active
 11863 1588 20       		.uleb128 0x20
 11864 1589 510A0000 		.4byte	.LASF222
 11865 158d 01       		.byte	0x1
 11866 158e 49       		.byte	0x49
 11867 158f 09020000 		.4byte	0x209
 11868 1593 05       		.uleb128 0x5
 11869 1594 03       		.byte	0x3
 11870 1595 00000000 		.4byte	USB_check_flag
 11871 1599 0E       		.uleb128 0xe
 11872 159a B8000000 		.4byte	0xb8
 11873 159e A9150000 		.4byte	0x15a9
 11874 15a2 0F       		.uleb128 0xf
 11875 15a3 4C010000 		.4byte	0x14c
 11876 15a7 05       		.byte	0x5
 11877 15a8 00       		.byte	0
 11878 15a9 20       		.uleb128 0x20
 11879 15aa AA100000 		.4byte	.LASF223
 11880 15ae 01       		.byte	0x1
 11881 15af 4B       		.byte	0x4b
 11882 15b0 99150000 		.4byte	0x1599
 11883 15b4 05       		.uleb128 0x5
 11884 15b5 03       		.byte	0x3
 11885 15b6 00000000 		.4byte	mappingArray
 11886 15ba 0E       		.uleb128 0xe
 11887 15bb B8000000 		.4byte	0xb8
 11888 15bf CA150000 		.4byte	0x15ca
 11889 15c3 0F       		.uleb128 0xf
 11890 15c4 4C010000 		.4byte	0x14c
 11891 15c8 1F       		.byte	0x1f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 248


 11892 15c9 00       		.byte	0
 11893 15ca 20       		.uleb128 0x20
 11894 15cb 40100000 		.4byte	.LASF224
 11895 15cf 01       		.byte	0x1
 11896 15d0 4D       		.byte	0x4d
 11897 15d1 BA150000 		.4byte	0x15ba
 11898 15d5 05       		.uleb128 0x5
 11899 15d6 03       		.byte	0x3
 11900 15d7 00000000 		.4byte	inBuffer
 11901 15db 20       		.uleb128 0x20
 11902 15dc F6110000 		.4byte	.LASF225
 11903 15e0 01       		.byte	0x1
 11904 15e1 4F       		.byte	0x4f
 11905 15e2 BA150000 		.4byte	0x15ba
 11906 15e6 05       		.uleb128 0x5
 11907 15e7 03       		.byte	0x3
 11908 15e8 00000000 		.4byte	myArray
 11909 15ec 20       		.uleb128 0x20
 11910 15ed CF060000 		.4byte	.LASF226
 11911 15f1 01       		.byte	0x1
 11912 15f2 50       		.byte	0x50
 11913 15f3 BA150000 		.4byte	0x15ba
 11914 15f7 05       		.uleb128 0x5
 11915 15f8 03       		.byte	0x3
 11916 15f9 00000000 		.4byte	returnedData
 11917 15fd 20       		.uleb128 0x20
 11918 15fe CB0C0000 		.4byte	.LASF227
 11919 1602 01       		.byte	0x1
 11920 1603 53       		.byte	0x53
 11921 1604 B3110000 		.4byte	0x11b3
 11922 1608 05       		.uleb128 0x5
 11923 1609 03       		.byte	0x3
 11924 160a 00000000 		.4byte	prevAngle
 11925 160e 0E       		.uleb128 0xe
 11926 160f CE000000 		.4byte	0xce
 11927 1613 1E160000 		.4byte	0x161e
 11928 1617 0F       		.uleb128 0xf
 11929 1618 4C010000 		.4byte	0x14c
 11930 161c 03       		.byte	0x3
 11931 161d 00       		.byte	0
 11932 161e 20       		.uleb128 0x20
 11933 161f 150D0000 		.4byte	.LASF228
 11934 1623 01       		.byte	0x1
 11935 1624 55       		.byte	0x55
 11936 1625 0E160000 		.4byte	0x160e
 11937 1629 05       		.uleb128 0x5
 11938 162a 03       		.byte	0x3
 11939 162b 00000000 		.4byte	ADC_values
 11940 162f 20       		.uleb128 0x20
 11941 1630 25050000 		.4byte	.LASF229
 11942 1634 01       		.byte	0x1
 11943 1635 56       		.byte	0x56
 11944 1636 CE000000 		.4byte	0xce
 11945 163a 05       		.uleb128 0x5
 11946 163b 03       		.byte	0x3
 11947 163c 00000000 		.4byte	rawAngle
 11948 1640 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 249


 11949 1641 2F0D0000 		.4byte	.LASF230
 11950 1645 01       		.byte	0x1
 11951 1646 57       		.byte	0x57
 11952 1647 CE000000 		.4byte	0xce
 11953 164b 05       		.uleb128 0x5
 11954 164c 03       		.byte	0x3
 11955 164d 00000000 		.4byte	midiSent
 11956 1651 20       		.uleb128 0x20
 11957 1652 A7080000 		.4byte	.LASF231
 11958 1656 01       		.byte	0x1
 11959 1657 58       		.byte	0x58
 11960 1658 CE000000 		.4byte	0xce
 11961 165c 05       		.uleb128 0x5
 11962 165d 03       		.byte	0x3
 11963 165e 00000000 		.4byte	midiOverflow
 11964 1662 0E       		.uleb128 0xe
 11965 1663 B8000000 		.4byte	0xb8
 11966 1667 72160000 		.4byte	0x1672
 11967 166b 0F       		.uleb128 0xf
 11968 166c 4C010000 		.4byte	0x14c
 11969 1670 07       		.byte	0x7
 11970 1671 00       		.byte	0
 11971 1672 20       		.uleb128 0x20
 11972 1673 6D100000 		.4byte	.LASF232
 11973 1677 01       		.byte	0x1
 11974 1678 5A       		.byte	0x5a
 11975 1679 62160000 		.4byte	0x1662
 11976 167d 05       		.uleb128 0x5
 11977 167e 03       		.byte	0x3
 11978 167f 00000000 		.4byte	macroKnobValues
 11979 1683 20       		.uleb128 0x20
 11980 1684 78040000 		.4byte	.LASF233
 11981 1688 01       		.byte	0x1
 11982 1689 5F       		.byte	0x5f
 11983 168a EF000000 		.4byte	0xef
 11984 168e 05       		.uleb128 0x5
 11985 168f 03       		.byte	0x3
 11986 1690 00000000 		.4byte	rx1Channel
 11987 1694 20       		.uleb128 0x20
 11988 1695 C3100000 		.4byte	.LASF234
 11989 1699 01       		.byte	0x1
 11990 169a 5F       		.byte	0x5f
 11991 169b EF000000 		.4byte	0xef
 11992 169f 05       		.uleb128 0x5
 11993 16a0 03       		.byte	0x3
 11994 16a1 00000000 		.4byte	rx2Channel
 11995 16a5 20       		.uleb128 0x20
 11996 16a6 A40A0000 		.4byte	.LASF235
 11997 16aa 01       		.byte	0x1
 11998 16ab 60       		.byte	0x60
 11999 16ac 000F0000 		.4byte	0xf00
 12000 16b0 05       		.uleb128 0x5
 12001 16b1 03       		.byte	0x3
 12002 16b2 00000000 		.4byte	rx1TD
 12003 16b6 20       		.uleb128 0x20
 12004 16b7 9A0D0000 		.4byte	.LASF236
 12005 16bb 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 250


 12006 16bc 60       		.byte	0x60
 12007 16bd 000F0000 		.4byte	0xf00
 12008 16c1 05       		.uleb128 0x5
 12009 16c2 03       		.byte	0x3
 12010 16c3 00000000 		.4byte	rx2TD
 12011 16c7 20       		.uleb128 0x20
 12012 16c8 9A0C0000 		.4byte	.LASF237
 12013 16cc 01       		.byte	0x1
 12014 16cd 62       		.byte	0x62
 12015 16ce 40010000 		.4byte	0x140
 12016 16d2 05       		.uleb128 0x5
 12017 16d3 03       		.byte	0x3
 12018 16d4 00000000 		.4byte	txChannel
 12019 16d8 20       		.uleb128 0x20
 12020 16d9 74110000 		.4byte	.LASF238
 12021 16dd 01       		.byte	0x1
 12022 16de 63       		.byte	0x63
 12023 16df 40010000 		.4byte	0x140
 12024 16e3 05       		.uleb128 0x5
 12025 16e4 03       		.byte	0x3
 12026 16e5 00000000 		.4byte	txTD
 12027 16e9 20       		.uleb128 0x20
 12028 16ea D10A0000 		.4byte	.LASF239
 12029 16ee 01       		.byte	0x1
 12030 16ef 65       		.byte	0x65
 12031 16f0 40010000 		.4byte	0x140
 12032 16f4 05       		.uleb128 0x5
 12033 16f5 03       		.byte	0x3
 12034 16f6 00000000 		.4byte	rx3Channel
 12035 16fa 20       		.uleb128 0x20
 12036 16fb 24110000 		.4byte	.LASF240
 12037 16ff 01       		.byte	0x1
 12038 1700 66       		.byte	0x66
 12039 1701 40010000 		.4byte	0x140
 12040 1705 05       		.uleb128 0x5
 12041 1706 03       		.byte	0x3
 12042 1707 00000000 		.4byte	rx3TD
 12043 170b 0E       		.uleb128 0xe
 12044 170c 40010000 		.4byte	0x140
 12045 1710 21170000 		.4byte	0x1721
 12046 1714 0F       		.uleb128 0xf
 12047 1715 4C010000 		.4byte	0x14c
 12048 1719 01       		.byte	0x1
 12049 171a 0F       		.uleb128 0xf
 12050 171b 4C010000 		.4byte	0x14c
 12051 171f 19       		.byte	0x19
 12052 1720 00       		.byte	0
 12053 1721 20       		.uleb128 0x20
 12054 1722 0A070000 		.4byte	.LASF241
 12055 1726 01       		.byte	0x1
 12056 1727 69       		.byte	0x69
 12057 1728 32170000 		.4byte	0x1732
 12058 172c 05       		.uleb128 0x5
 12059 172d 03       		.byte	0x3
 12060 172e 00000000 		.4byte	rxBufferPluck
 12061 1732 06       		.uleb128 0x6
 12062 1733 0B170000 		.4byte	0x170b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 251


 12063 1737 0E       		.uleb128 0xe
 12064 1738 40010000 		.4byte	0x140
 12065 173c 4D170000 		.4byte	0x174d
 12066 1740 0F       		.uleb128 0xf
 12067 1741 4C010000 		.4byte	0x14c
 12068 1745 01       		.byte	0x1
 12069 1746 0F       		.uleb128 0xf
 12070 1747 4C010000 		.4byte	0x14c
 12071 174b 07       		.byte	0x7
 12072 174c 00       		.byte	0
 12073 174d 20       		.uleb128 0x20
 12074 174e 8E0C0000 		.4byte	.LASF242
 12075 1752 01       		.byte	0x1
 12076 1753 6A       		.byte	0x6a
 12077 1754 5E170000 		.4byte	0x175e
 12078 1758 05       		.uleb128 0x5
 12079 1759 03       		.byte	0x3
 12080 175a 00000000 		.4byte	rxBufferBar
 12081 175e 06       		.uleb128 0x6
 12082 175f 37170000 		.4byte	0x1737
 12083 1763 0E       		.uleb128 0xe
 12084 1764 0E020000 		.4byte	0x20e
 12085 1768 73170000 		.4byte	0x1773
 12086 176c 0F       		.uleb128 0xf
 12087 176d 4C010000 		.4byte	0x14c
 12088 1771 0B       		.byte	0xb
 12089 1772 00       		.byte	0
 12090 1773 20       		.uleb128 0x20
 12091 1774 98020000 		.4byte	.LASF243
 12092 1778 01       		.byte	0x1
 12093 1779 6C       		.byte	0x6c
 12094 177a 84170000 		.4byte	0x1784
 12095 177e 05       		.uleb128 0x5
 12096 177f 03       		.byte	0x3
 12097 1780 00000000 		.4byte	strings
 12098 1784 06       		.uleb128 0x6
 12099 1785 63170000 		.4byte	0x1763
 12100 1789 20       		.uleb128 0x20
 12101 178a 08050000 		.4byte	.LASF244
 12102 178e 01       		.byte	0x1
 12103 178f 6D       		.byte	0x6d
 12104 1790 9A170000 		.4byte	0x179a
 12105 1794 05       		.uleb128 0x5
 12106 1795 03       		.byte	0x3
 12107 1796 00000000 		.4byte	prevStrings
 12108 179a 06       		.uleb128 0x6
 12109 179b 63170000 		.4byte	0x1763
 12110 179f 20       		.uleb128 0x20
 12111 17a0 83110000 		.4byte	.LASF245
 12112 17a4 01       		.byte	0x1
 12113 17a5 6F       		.byte	0x6f
 12114 17a6 B0170000 		.4byte	0x17b0
 12115 17aa 05       		.uleb128 0x5
 12116 17ab 03       		.byte	0x3
 12117 17ac 00000000 		.4byte	prevBar
 12118 17b0 06       		.uleb128 0x6
 12119 17b1 17120000 		.4byte	0x1217
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 252


 12120 17b5 20       		.uleb128 0x20
 12121 17b6 49100000 		.4byte	.LASF246
 12122 17ba 01       		.byte	0x1
 12123 17bb 70       		.byte	0x70
 12124 17bc C6170000 		.4byte	0x17c6
 12125 17c0 05       		.uleb128 0x5
 12126 17c1 03       		.byte	0x3
 12127 17c2 00000000 		.4byte	maxStrings
 12128 17c6 06       		.uleb128 0x6
 12129 17c7 63170000 		.4byte	0x1763
 12130 17cb 20       		.uleb128 0x20
 12131 17cc E80D0000 		.4byte	.LASF247
 12132 17d0 01       		.byte	0x1
 12133 17d1 71       		.byte	0x71
 12134 17d2 09020000 		.4byte	0x209
 12135 17d6 05       		.uleb128 0x5
 12136 17d7 03       		.byte	0x3
 12137 17d8 00000000 		.4byte	amHere
 12138 17dc 20       		.uleb128 0x20
 12139 17dd 3E060000 		.4byte	.LASF248
 12140 17e1 01       		.byte	0x1
 12141 17e2 72       		.byte	0x72
 12142 17e3 09020000 		.4byte	0x209
 12143 17e7 05       		.uleb128 0x5
 12144 17e8 03       		.byte	0x3
 12145 17e9 00000000 		.4byte	spiCounter
 12146 17ed 20       		.uleb128 0x20
 12147 17ee 91040000 		.4byte	.LASF249
 12148 17f2 01       		.byte	0x1
 12149 17f3 73       		.byte	0x73
 12150 17f4 09020000 		.4byte	0x209
 12151 17f8 05       		.uleb128 0x5
 12152 17f9 03       		.byte	0x3
 12153 17fa 00000000 		.4byte	newDataFlag
 12154 17fe 20       		.uleb128 0x20
 12155 17ff D50C0000 		.4byte	.LASF250
 12156 1803 01       		.byte	0x1
 12157 1804 75       		.byte	0x75
 12158 1805 B8000000 		.4byte	0xb8
 12159 1809 05       		.uleb128 0x5
 12160 180a 03       		.byte	0x3
 12161 180b 00000000 		.4byte	pluck_index
 12162 180f 20       		.uleb128 0x20
 12163 1810 F60F0000 		.4byte	.LASF251
 12164 1814 01       		.byte	0x1
 12165 1815 76       		.byte	0x76
 12166 1816 09020000 		.4byte	0x209
 12167 181a 05       		.uleb128 0x5
 12168 181b 03       		.byte	0x3
 12169 181c 00000000 		.4byte	amHere2
 12170 1820 20       		.uleb128 0x20
 12171 1821 280E0000 		.4byte	.LASF252
 12172 1825 01       		.byte	0x1
 12173 1826 77       		.byte	0x77
 12174 1827 09020000 		.4byte	0x209
 12175 182b 05       		.uleb128 0x5
 12176 182c 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 253


 12177 182d 00000000 		.4byte	spiCounter2
 12178 1831 20       		.uleb128 0x20
 12179 1832 6E000000 		.4byte	.LASF253
 12180 1836 01       		.byte	0x1
 12181 1837 78       		.byte	0x78
 12182 1838 09020000 		.4byte	0x209
 12183 183c 05       		.uleb128 0x5
 12184 183d 03       		.byte	0x3
 12185 183e 00000000 		.4byte	newDataFlag2
 12186 1842 20       		.uleb128 0x20
 12187 1843 7B0B0000 		.4byte	.LASF254
 12188 1847 01       		.byte	0x1
 12189 1848 79       		.byte	0x79
 12190 1849 09020000 		.4byte	0x209
 12191 184d 05       		.uleb128 0x5
 12192 184e 03       		.byte	0x3
 12193 184f 00000000 		.4byte	currentPluckBuffer
 12194 1853 20       		.uleb128 0x20
 12195 1854 040D0000 		.4byte	.LASF255
 12196 1858 01       		.byte	0x1
 12197 1859 7A       		.byte	0x7a
 12198 185a 09020000 		.4byte	0x209
 12199 185e 05       		.uleb128 0x5
 12200 185f 03       		.byte	0x3
 12201 1860 00000000 		.4byte	currentBarBuffer
 12202 1864 20       		.uleb128 0x20
 12203 1865 CE0E0000 		.4byte	.LASF256
 12204 1869 01       		.byte	0x1
 12205 186a 7B       		.byte	0x7b
 12206 186b 09020000 		.4byte	0x209
 12207 186f 05       		.uleb128 0x5
 12208 1870 03       		.byte	0x3
 12209 1871 00000000 		.4byte	pluckErrorCount
 12210 1875 20       		.uleb128 0x20
 12211 1876 200D0000 		.4byte	.LASF257
 12212 187a 01       		.byte	0x1
 12213 187b 7C       		.byte	0x7c
 12214 187c 0E020000 		.4byte	0x20e
 12215 1880 05       		.uleb128 0x5
 12216 1881 03       		.byte	0x3
 12217 1882 00000000 		.4byte	SPI1ErrorCount
 12218 1886 20       		.uleb128 0x20
 12219 1887 1D080000 		.4byte	.LASF258
 12220 188b 01       		.byte	0x1
 12221 188c 7E       		.byte	0x7e
 12222 188d 09020000 		.4byte	0x209
 12223 1891 05       		.uleb128 0x5
 12224 1892 03       		.byte	0x3
 12225 1893 00000000 		.4byte	inputData
 12226 1897 20       		.uleb128 0x20
 12227 1898 B7100000 		.4byte	.LASF259
 12228 189c 01       		.byte	0x1
 12229 189d 87       		.byte	0x87
 12230 189e B8000000 		.4byte	0xb8
 12231 18a2 05       		.uleb128 0x5
 12232 18a3 03       		.byte	0x3
 12233 18a4 00000000 		.4byte	spiAdjusted
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 254


 12234 18a8 20       		.uleb128 0x20
 12235 18a9 41070000 		.4byte	.LASF260
 12236 18ad 01       		.byte	0x1
 12237 18ae 88       		.byte	0x88
 12238 18af B8000000 		.4byte	0xb8
 12239 18b3 05       		.uleb128 0x5
 12240 18b4 03       		.byte	0x3
 12241 18b5 00000000 		.4byte	mySpiCounter
 12242 18b9 20       		.uleb128 0x20
 12243 18ba 5C0C0000 		.4byte	.LASF261
 12244 18be 01       		.byte	0x1
 12245 18bf 89       		.byte	0x89
 12246 18c0 0E020000 		.4byte	0x20e
 12247 18c4 05       		.uleb128 0x5
 12248 18c5 03       		.byte	0x3
 12249 18c6 00000000 		.4byte	offsetErrorCount
 12250 18ca 20       		.uleb128 0x20
 12251 18cb D6000000 		.4byte	.LASF262
 12252 18cf 01       		.byte	0x1
 12253 18d0 8A       		.byte	0x8a
 12254 18d1 09020000 		.4byte	0x209
 12255 18d5 05       		.uleb128 0x5
 12256 18d6 03       		.byte	0x3
 12257 18d7 00000000 		.4byte	SPI2errorflag
 12258 18db 20       		.uleb128 0x20
 12259 18dc 9C030000 		.4byte	.LASF263
 12260 18e0 01       		.byte	0x1
 12261 18e1 8B       		.byte	0x8b
 12262 18e2 AC020000 		.4byte	0x2ac
 12263 18e6 05       		.uleb128 0x5
 12264 18e7 03       		.byte	0x3
 12265 18e8 00000000 		.4byte	knobs
 12266 18ec 20       		.uleb128 0x20
 12267 18ed 37070000 		.4byte	.LASF264
 12268 18f1 01       		.byte	0x1
 12269 18f2 8C       		.byte	0x8c
 12270 18f3 AC020000 		.4byte	0x2ac
 12271 18f7 05       		.uleb128 0x5
 12272 18f8 03       		.byte	0x3
 12273 18f9 00000000 		.4byte	prevKnobs
 12274 18fd 20       		.uleb128 0x20
 12275 18fe 310C0000 		.4byte	.LASF265
 12276 1902 01       		.byte	0x1
 12277 1903 8E       		.byte	0x8e
 12278 1904 AC020000 		.4byte	0x2ac
 12279 1908 05       		.uleb128 0x5
 12280 1909 03       		.byte	0x3
 12281 190a 00000000 		.4byte	knobs7bit
 12282 190e 20       		.uleb128 0x20
 12283 190f DF0B0000 		.4byte	.LASF266
 12284 1913 01       		.byte	0x1
 12285 1914 8F       		.byte	0x8f
 12286 1915 AC020000 		.4byte	0x2ac
 12287 1919 05       		.uleb128 0x5
 12288 191a 03       		.byte	0x3
 12289 191b 00000000 		.4byte	prevKnobs7bit
 12290 191f 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 255


 12291 1920 BC080000 		.4byte	.LASF267
 12292 1924 01       		.byte	0x1
 12293 1925 91       		.byte	0x91
 12294 1926 B8000000 		.4byte	0xb8
 12295 192a 05       		.uleb128 0x5
 12296 192b 03       		.byte	0x3
 12297 192c 00000000 		.4byte	u7bit_volumePedal
 12298 1930 20       		.uleb128 0x20
 12299 1931 94100000 		.4byte	.LASF268
 12300 1935 01       		.byte	0x1
 12301 1936 92       		.byte	0x92
 12302 1937 B8000000 		.4byte	0xb8
 12303 193b 05       		.uleb128 0x5
 12304 193c 03       		.byte	0x3
 12305 193d 00000000 		.4byte	prev_7bit_volumePedal
 12306 1941 20       		.uleb128 0x20
 12307 1942 6F0B0000 		.4byte	.LASF269
 12308 1946 01       		.byte	0x1
 12309 1947 93       		.byte	0x93
 12310 1948 09020000 		.4byte	0x209
 12311 194c 05       		.uleb128 0x5
 12312 194d 03       		.byte	0x3
 12313 194e 00000000 		.4byte	SPI2started
 12314 1952 20       		.uleb128 0x20
 12315 1953 310F0000 		.4byte	.LASF270
 12316 1957 01       		.byte	0x1
 12317 1958 97       		.byte	0x97
 12318 1959 62160000 		.4byte	0x1662
 12319 195d 05       		.uleb128 0x5
 12320 195e 03       		.byte	0x3
 12321 195f 00000000 		.4byte	macroKnobValues7bit
 12322 1963 20       		.uleb128 0x20
 12323 1964 76030000 		.4byte	.LASF271
 12324 1968 01       		.byte	0x1
 12325 1969 98       		.byte	0x98
 12326 196a 62160000 		.4byte	0x1662
 12327 196e 05       		.uleb128 0x5
 12328 196f 03       		.byte	0x3
 12329 1970 00000000 		.4byte	prevMacroKnobValues7bit
 12330 1974 20       		.uleb128 0x20
 12331 1975 EF0D0000 		.4byte	.LASF272
 12332 1979 01       		.byte	0x1
 12333 197a 9C       		.byte	0x9c
 12334 197b 000F0000 		.4byte	0xf00
 12335 197f 05       		.uleb128 0x5
 12336 1980 03       		.byte	0x3
 12337 1981 00000000 		.4byte	array
 12338 1985 20       		.uleb128 0x20
 12339 1986 6C080000 		.4byte	.LASF273
 12340 198a 01       		.byte	0x1
 12341 198b 9F       		.byte	0x9f
 12342 198c FD010000 		.4byte	0x1fd
 12343 1990 05       		.uleb128 0x5
 12344 1991 03       		.byte	0x3
 12345 1992 00000000 		.4byte	eepromReturnValue
 12346 1996 20       		.uleb128 0x20
 12347 1997 85050000 		.4byte	.LASF274
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 256


 12348 199b 01       		.byte	0x1
 12349 199c A6       		.byte	0xa6
 12350 199d EF000000 		.4byte	0xef
 12351 19a1 05       		.uleb128 0x5
 12352 19a2 03       		.byte	0x3
 12353 19a3 00000000 		.4byte	eeprom_cnt
 12354 19a7 20       		.uleb128 0x20
 12355 19a8 98080000 		.4byte	.LASF83
 12356 19ac 01       		.byte	0x1
 12357 19ad A7       		.byte	0xa7
 12358 19ae 28010000 		.4byte	0x128
 12359 19b2 05       		.uleb128 0x5
 12360 19b3 03       		.byte	0x3
 12361 19b4 00000000 		.4byte	status
 12362 19b8 22       		.uleb128 0x22
 12363 19b9 70747200 		.ascii	"ptr\000"
 12364 19bd 01       		.byte	0x1
 12365 19be A8       		.byte	0xa8
 12366 19bf C9190000 		.4byte	0x19c9
 12367 19c3 05       		.uleb128 0x5
 12368 19c4 03       		.byte	0x3
 12369 19c5 00000000 		.4byte	ptr
 12370 19c9 1B       		.uleb128 0x1b
 12371 19ca 04       		.byte	0x4
 12372 19cb D4190000 		.4byte	0x19d4
 12373 19cf 1F       		.uleb128 0x1f
 12374 19d0 EF000000 		.4byte	0xef
 12375 19d4 06       		.uleb128 0x6
 12376 19d5 CF190000 		.4byte	0x19cf
 12377 19d9 20       		.uleb128 0x20
 12378 19da 4F020000 		.4byte	.LASF275
 12379 19de 01       		.byte	0x1
 12380 19df A9       		.byte	0xa9
 12381 19e0 EA190000 		.4byte	0x19ea
 12382 19e4 05       		.uleb128 0x5
 12383 19e5 03       		.byte	0x3
 12384 19e6 00000000 		.4byte	barCount
 12385 19ea 06       		.uleb128 0x6
 12386 19eb 9F000000 		.4byte	0x9f
 12387 19ef 0E       		.uleb128 0xe
 12388 19f0 09020000 		.4byte	0x209
 12389 19f4 FF190000 		.4byte	0x19ff
 12390 19f8 0F       		.uleb128 0xf
 12391 19f9 4C010000 		.4byte	0x14c
 12392 19fd 0F       		.byte	0xf
 12393 19fe 00       		.byte	0
 12394 19ff 20       		.uleb128 0x20
 12395 1a00 1C010000 		.4byte	.LASF276
 12396 1a04 01       		.byte	0x1
 12397 1a05 AE       		.byte	0xae
 12398 1a06 101A0000 		.4byte	0x1a10
 12399 1a0a 05       		.uleb128 0x5
 12400 1a0b 03       		.byte	0x3
 12401 1a0c 00000000 		.4byte	I2Cbuff2
 12402 1a10 06       		.uleb128 0x6
 12403 1a11 EF190000 		.4byte	0x19ef
 12404 1a15 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 257


 12405 1a16 9F080000 		.4byte	.LASF277
 12406 1a1a 01       		.byte	0x1
 12407 1a1b AF       		.byte	0xaf
 12408 1a1c 09020000 		.4byte	0x209
 12409 1a20 05       		.uleb128 0x5
 12410 1a21 03       		.byte	0x3
 12411 1a22 00000000 		.4byte	send_it
 12412 1a26 0E       		.uleb128 0xe
 12413 1a27 B8000000 		.4byte	0xb8
 12414 1a2b 3C1A0000 		.4byte	0x1a3c
 12415 1a2f 0F       		.uleb128 0xf
 12416 1a30 4C010000 		.4byte	0x14c
 12417 1a34 0B       		.byte	0xb
 12418 1a35 0F       		.uleb128 0xf
 12419 1a36 4C010000 		.4byte	0x14c
 12420 1a3a 01       		.byte	0x1
 12421 1a3b 00       		.byte	0
 12422 1a3c 20       		.uleb128 0x20
 12423 1a3d 25010000 		.4byte	.LASF278
 12424 1a41 01       		.byte	0x1
 12425 1a42 B5       		.byte	0xb5
 12426 1a43 261A0000 		.4byte	0x1a26
 12427 1a47 05       		.uleb128 0x5
 12428 1a48 03       		.byte	0x3
 12429 1a49 00000000 		.4byte	mux_states
 12430 1a4d 0E       		.uleb128 0xe
 12431 1a4e B8000000 		.4byte	0xb8
 12432 1a52 5D1A0000 		.4byte	0x1a5d
 12433 1a56 0F       		.uleb128 0xf
 12434 1a57 4C010000 		.4byte	0x14c
 12435 1a5b 0B       		.byte	0xb
 12436 1a5c 00       		.byte	0
 12437 1a5d 20       		.uleb128 0x20
 12438 1a5e 7D100000 		.4byte	.LASF279
 12439 1a62 01       		.byte	0x1
 12440 1a63 B6       		.byte	0xb6
 12441 1a64 4D1A0000 		.4byte	0x1a4d
 12442 1a68 05       		.uleb128 0x5
 12443 1a69 03       		.byte	0x3
 12444 1a6a 00000000 		.4byte	i2c_skipped
 12445 1a6e 20       		.uleb128 0x20
 12446 1a6f 1A0F0000 		.4byte	.LASF280
 12447 1a73 01       		.byte	0x1
 12448 1a74 B9       		.byte	0xb9
 12449 1a75 B3110000 		.4byte	0x11b3
 12450 1a79 05       		.uleb128 0x5
 12451 1a7a 03       		.byte	0x3
 12452 1a7b 00000000 		.4byte	pedals_lowWithDeadZone
 12453 1a7f 20       		.uleb128 0x20
 12454 1a80 67020000 		.4byte	.LASF281
 12455 1a84 01       		.byte	0x1
 12456 1a85 BA       		.byte	0xba
 12457 1a86 B3110000 		.4byte	0x11b3
 12458 1a8a 05       		.uleb128 0x5
 12459 1a8b 03       		.byte	0x3
 12460 1a8c 00000000 		.4byte	pedals_highWithDeadZone
 12461 1a90 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 258


 12462 1a91 FE060000 		.4byte	.LASF282
 12463 1a95 01       		.byte	0x1
 12464 1a96 BC       		.byte	0xbc
 12465 1a97 CE000000 		.4byte	0xce
 12466 1a9b 05       		.uleb128 0x5
 12467 1a9c 03       		.byte	0x3
 12468 1a9d 00000000 		.4byte	volumePedal
 12469 1aa1 20       		.uleb128 0x20
 12470 1aa2 A40C0000 		.4byte	.LASF283
 12471 1aa6 01       		.byte	0x1
 12472 1aa7 BD       		.byte	0xbd
 12473 1aa8 B3110000 		.4byte	0x11b3
 12474 1aac 05       		.uleb128 0x5
 12475 1aad 03       		.byte	0x3
 12476 1aae 00000000 		.4byte	processed_pedals
 12477 1ab2 20       		.uleb128 0x20
 12478 1ab3 590B0000 		.4byte	.LASF284
 12479 1ab7 01       		.byte	0x1
 12480 1ab8 BE       		.byte	0xbe
 12481 1ab9 B3110000 		.4byte	0x11b3
 12482 1abd 05       		.uleb128 0x5
 12483 1abe 03       		.byte	0x3
 12484 1abf 00000000 		.4byte	prev_processed_pedals
 12485 1ac3 20       		.uleb128 0x20
 12486 1ac4 21070000 		.4byte	.LASF285
 12487 1ac8 01       		.byte	0x1
 12488 1ac9 BF       		.byte	0xbf
 12489 1aca E5110000 		.4byte	0x11e5
 12490 1ace 05       		.uleb128 0x5
 12491 1acf 03       		.byte	0x3
 12492 1ad0 00000000 		.4byte	pedals8bit
 12493 1ad4 20       		.uleb128 0x20
 12494 1ad5 89100000 		.4byte	.LASF286
 12495 1ad9 01       		.byte	0x1
 12496 1ada C0       		.byte	0xc0
 12497 1adb E5110000 		.4byte	0x11e5
 12498 1adf 05       		.uleb128 0x5
 12499 1ae0 03       		.byte	0x3
 12500 1ae1 00000000 		.4byte	pedals7bit
 12501 1ae5 20       		.uleb128 0x20
 12502 1ae6 040C0000 		.4byte	.LASF287
 12503 1aea 01       		.byte	0x1
 12504 1aeb C1       		.byte	0xc1
 12505 1aec E5110000 		.4byte	0x11e5
 12506 1af0 05       		.uleb128 0x5
 12507 1af1 03       		.byte	0x3
 12508 1af2 00000000 		.4byte	prevPedals7bit
 12509 1af6 20       		.uleb128 0x20
 12510 1af7 49000000 		.4byte	.LASF288
 12511 1afb 01       		.byte	0x1
 12512 1afc C2       		.byte	0xc2
 12513 1afd C3000000 		.4byte	0xc3
 12514 1b01 05       		.uleb128 0x5
 12515 1b02 03       		.byte	0x3
 12516 1b03 00000000 		.4byte	prev_processed_volumePedal
 12517 1b07 20       		.uleb128 0x20
 12518 1b08 6D0C0000 		.4byte	.LASF289
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 259


 12519 1b0c 01       		.byte	0x1
 12520 1b0d C3       		.byte	0xc3
 12521 1b0e C3000000 		.4byte	0xc3
 12522 1b12 05       		.uleb128 0x5
 12523 1b13 03       		.byte	0x3
 12524 1b14 00000000 		.4byte	processed_volumePedal
 12525 1b18 20       		.uleb128 0x20
 12526 1b19 E7060000 		.4byte	.LASF290
 12527 1b1d 01       		.byte	0x1
 12528 1b1e C5       		.byte	0xc5
 12529 1b1f B8000000 		.4byte	0xb8
 12530 1b23 05       		.uleb128 0x5
 12531 1b24 03       		.byte	0x3
 12532 1b25 00000000 		.4byte	sliderBugOn
 12533 1b29 20       		.uleb128 0x20
 12534 1b2a D1020000 		.4byte	.LASF291
 12535 1b2e 01       		.byte	0x1
 12536 1b2f CC       		.byte	0xcc
 12537 1b30 58100000 		.4byte	0x1058
 12538 1b34 05       		.uleb128 0x5
 12539 1b35 03       		.byte	0x3
 12540 1b36 00000000 		.4byte	presetLoadedResponse
 12541 1b3a 0E       		.uleb128 0xe
 12542 1b3b 13010000 		.4byte	0x113
 12543 1b3f 4A1B0000 		.4byte	0x1b4a
 12544 1b43 0F       		.uleb128 0xf
 12545 1b44 4C010000 		.4byte	0x14c
 12546 1b48 0B       		.byte	0xb
 12547 1b49 00       		.byte	0
 12548 1b4a 20       		.uleb128 0x20
 12549 1b4b BF020000 		.4byte	.LASF292
 12550 1b4f 01       		.byte	0x1
 12551 1b50 D1       		.byte	0xd1
 12552 1b51 3A1B0000 		.4byte	0x1b3a
 12553 1b55 05       		.uleb128 0x5
 12554 1b56 03       		.byte	0x3
 12555 1b57 00000000 		.4byte	fretScalingInMIDI
 12556 1b5b 20       		.uleb128 0x20
 12557 1b5c 92110000 		.4byte	.LASF293
 12558 1b60 01       		.byte	0x1
 12559 1b61 D2       		.byte	0xd2
 12560 1b62 3A1B0000 		.4byte	0x1b3a
 12561 1b66 05       		.uleb128 0x5
 12562 1b67 03       		.byte	0x3
 12563 1b68 00000000 		.4byte	fretScalingInRatios
 12564 1b6c 0E       		.uleb128 0xe
 12565 1b6d 13010000 		.4byte	0x113
 12566 1b71 7C1B0000 		.4byte	0x1b7c
 12567 1b75 0F       		.uleb128 0xf
 12568 1b76 4C010000 		.4byte	0x14c
 12569 1b7a 09       		.byte	0x9
 12570 1b7b 00       		.byte	0
 12571 1b7c 20       		.uleb128 0x20
 12572 1b7d 45040000 		.4byte	.LASF294
 12573 1b81 01       		.byte	0x1
 12574 1b82 D4       		.byte	0xd4
 12575 1b83 6C1B0000 		.4byte	0x1b6c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 260


 12576 1b87 05       		.uleb128 0x5
 12577 1b88 03       		.byte	0x3
 12578 1b89 00000000 		.4byte	pedalRatios
 12579 1b8d 20       		.uleb128 0x20
 12580 1b8e D4040000 		.4byte	.LASF295
 12581 1b92 01       		.byte	0x1
 12582 1b93 D5       		.byte	0xd5
 12583 1b94 B8000000 		.4byte	0xb8
 12584 1b98 05       		.uleb128 0x5
 12585 1b99 03       		.byte	0x3
 12586 1b9a 00000000 		.4byte	last_mux
 12587 1b9e 20       		.uleb128 0x20
 12588 1b9f 1C0A0000 		.4byte	.LASF296
 12589 1ba3 01       		.byte	0x1
 12590 1ba4 D6       		.byte	0xd6
 12591 1ba5 09020000 		.4byte	0x209
 12592 1ba9 05       		.uleb128 0x5
 12593 1baa 03       		.byte	0x3
 12594 1bab 00000000 		.4byte	main_counter
 12595 1baf 20       		.uleb128 0x20
 12596 1bb0 92020000 		.4byte	.LASF297
 12597 1bb4 01       		.byte	0x1
 12598 1bb5 D8       		.byte	0xd8
 12599 1bb6 B8000000 		.4byte	0xb8
 12600 1bba 05       		.uleb128 0x5
 12601 1bbb 03       		.byte	0x3
 12602 1bbc 00000000 		.4byte	voice
 12603 1bc0 0E       		.uleb128 0xe
 12604 1bc1 13010000 		.4byte	0x113
 12605 1bc5 DC1B0000 		.4byte	0x1bdc
 12606 1bc9 0F       		.uleb128 0xf
 12607 1bca 4C010000 		.4byte	0x14c
 12608 1bce 06       		.byte	0x6
 12609 1bcf 0F       		.uleb128 0xf
 12610 1bd0 4C010000 		.4byte	0x14c
 12611 1bd4 0A       		.byte	0xa
 12612 1bd5 0F       		.uleb128 0xf
 12613 1bd6 4C010000 		.4byte	0x14c
 12614 1bda 0B       		.byte	0xb
 12615 1bdb 00       		.byte	0
 12616 1bdc 20       		.uleb128 0x20
 12617 1bdd 18070000 		.4byte	.LASF298
 12618 1be1 01       		.byte	0x1
 12619 1be2 DF       		.byte	0xdf
 12620 1be3 C01B0000 		.4byte	0x1bc0
 12621 1be7 05       		.uleb128 0x5
 12622 1be8 03       		.byte	0x3
 12623 1be9 00000000 		.4byte	copedent
 12624 1bed 20       		.uleb128 0x20
 12625 1bee 27030000 		.4byte	.LASF299
 12626 1bf2 01       		.byte	0x1
 12627 1bf3 E2       		.byte	0xe2
 12628 1bf4 3A1B0000 		.4byte	0x1b3a
 12629 1bf8 05       		.uleb128 0x5
 12630 1bf9 03       		.byte	0x3
 12631 1bfa 00000000 		.4byte	prevStringPitchBend
 12632 1bfe 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 261


 12633 1bff 13010000 		.4byte	0x113
 12634 1c03 141C0000 		.4byte	0x1c14
 12635 1c07 0F       		.uleb128 0xf
 12636 1c08 4C010000 		.4byte	0x14c
 12637 1c0c 09       		.byte	0x9
 12638 1c0d 0F       		.uleb128 0xf
 12639 1c0e 4C010000 		.4byte	0x14c
 12640 1c12 0B       		.byte	0xb
 12641 1c13 00       		.byte	0
 12642 1c14 20       		.uleb128 0x20
 12643 1c15 8B110000 		.4byte	.LASF300
 12644 1c19 01       		.byte	0x1
 12645 1c1a E4       		.byte	0xe4
 12646 1c1b FE1B0000 		.4byte	0x1bfe
 12647 1c1f 05       		.uleb128 0x5
 12648 1c20 03       		.byte	0x3
 12649 1c21 00000000 		.4byte	pedals
 12650 1c25 20       		.uleb128 0x20
 12651 1c26 B50B0000 		.4byte	.LASF301
 12652 1c2a 01       		.byte	0x1
 12653 1c2b E6       		.byte	0xe6
 12654 1c2c E5110000 		.4byte	0x11e5
 12655 1c30 05       		.uleb128 0x5
 12656 1c31 03       		.byte	0x3
 12657 1c32 00000000 		.4byte	pedal_cc_assignments
 12658 1c36 20       		.uleb128 0x20
 12659 1c37 B50C0000 		.4byte	.LASF302
 12660 1c3b 01       		.byte	0x1
 12661 1c3c E7       		.byte	0xe7
 12662 1c3d 3A1B0000 		.4byte	0x1b3a
 12663 1c41 05       		.uleb128 0x5
 12664 1c42 03       		.byte	0x3
 12665 1c43 00000000 		.4byte	openStringFrequencies
 12666 1c47 0E       		.uleb128 0xe
 12667 1c48 13010000 		.4byte	0x113
 12668 1c4c 571C0000 		.4byte	0x1c57
 12669 1c50 0F       		.uleb128 0xf
 12670 1c51 4C010000 		.4byte	0x14c
 12671 1c55 01       		.byte	0x1
 12672 1c56 00       		.byte	0
 12673 1c57 20       		.uleb128 0x20
 12674 1c58 5A050000 		.4byte	.LASF303
 12675 1c5c 01       		.byte	0x1
 12676 1c5d E8       		.byte	0xe8
 12677 1c5e 471C0000 		.4byte	0x1c47
 12678 1c62 05       		.uleb128 0x5
 12679 1c63 03       		.byte	0x3
 12680 1c64 00000000 		.4byte	stringMappedPositionsInRatios
 12681 1c68 20       		.uleb128 0x20
 12682 1c69 78070000 		.4byte	.LASF304
 12683 1c6d 01       		.byte	0x1
 12684 1c6e E9       		.byte	0xe9
 12685 1c6f 471C0000 		.4byte	0x1c47
 12686 1c73 05       		.uleb128 0x5
 12687 1c74 03       		.byte	0x3
 12688 1c75 00000000 		.4byte	stringMappedPositionsInMIDI
 12689 1c79 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 262


 12690 1c7a CE000000 		.4byte	0xce
 12691 1c7e 891C0000 		.4byte	0x1c89
 12692 1c82 0F       		.uleb128 0xf
 12693 1c83 4C010000 		.4byte	0x14c
 12694 1c87 01       		.byte	0x1
 12695 1c88 00       		.byte	0
 12696 1c89 20       		.uleb128 0x20
 12697 1c8a F7080000 		.4byte	.LASF305
 12698 1c8e 01       		.byte	0x1
 12699 1c8f EA       		.byte	0xea
 12700 1c90 791C0000 		.4byte	0x1c79
 12701 1c94 05       		.uleb128 0x5
 12702 1c95 03       		.byte	0x3
 12703 1c96 00000000 		.4byte	barMidiOuterStrings
 12704 1c9a 20       		.uleb128 0x20
 12705 1c9b CF110000 		.4byte	.LASF306
 12706 1c9f 01       		.byte	0x1
 12707 1ca0 EB       		.byte	0xeb
 12708 1ca1 3A1B0000 		.4byte	0x1b3a
 12709 1ca5 05       		.uleb128 0x5
 12710 1ca6 03       		.byte	0x3
 12711 1ca7 00000000 		.4byte	stringFrequencies
 12712 1cab 20       		.uleb128 0x20
 12713 1cac 9D040000 		.4byte	.LASF307
 12714 1cb0 01       		.byte	0x1
 12715 1cb1 EC       		.byte	0xec
 12716 1cb2 3A1B0000 		.4byte	0x1b3a
 12717 1cb6 05       		.uleb128 0x5
 12718 1cb7 03       		.byte	0x3
 12719 1cb8 00000000 		.4byte	stringOctave
 12720 1cbc 20       		.uleb128 0x20
 12721 1cbd FE0F0000 		.4byte	.LASF308
 12722 1cc1 01       		.byte	0x1
 12723 1cc2 ED       		.byte	0xed
 12724 1cc3 3A1B0000 		.4byte	0x1b3a
 12725 1cc7 05       		.uleb128 0x5
 12726 1cc8 03       		.byte	0x3
 12727 1cc9 00000000 		.4byte	stringPitch
 12728 1ccd 20       		.uleb128 0x20
 12729 1cce BC0F0000 		.4byte	.LASF309
 12730 1cd2 01       		.byte	0x1
 12731 1cd3 EE       		.byte	0xee
 12732 1cd4 3A1B0000 		.4byte	0x1b3a
 12733 1cd8 05       		.uleb128 0x5
 12734 1cd9 03       		.byte	0x3
 12735 1cda 00000000 		.4byte	stringMIDI
 12736 1cde 0E       		.uleb128 0xe
 12737 1cdf 9F000000 		.4byte	0x9f
 12738 1ce3 EE1C0000 		.4byte	0x1cee
 12739 1ce7 0F       		.uleb128 0xf
 12740 1ce8 4C010000 		.4byte	0x14c
 12741 1cec 0B       		.byte	0xb
 12742 1ced 00       		.byte	0
 12743 1cee 20       		.uleb128 0x20
 12744 1cef 41090000 		.4byte	.LASF310
 12745 1cf3 01       		.byte	0x1
 12746 1cf4 EF       		.byte	0xef
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 263


 12747 1cf5 DE1C0000 		.4byte	0x1cde
 12748 1cf9 05       		.uleb128 0x5
 12749 1cfa 03       		.byte	0x3
 12750 1cfb 00000000 		.4byte	openStringMIDI_Int
 12751 1cff 20       		.uleb128 0x20
 12752 1d00 0D0F0000 		.4byte	.LASF311
 12753 1d04 01       		.byte	0x1
 12754 1d05 FD       		.byte	0xfd
 12755 1d06 6C1B0000 		.4byte	0x1b6c
 12756 1d0a 05       		.uleb128 0x5
 12757 1d0b 03       		.byte	0x3
 12758 1d0c 00000000 		.4byte	pedals_float
 12759 1d10 20       		.uleb128 0x20
 12760 1d11 E70E0000 		.4byte	.LASF312
 12761 1d15 01       		.byte	0x1
 12762 1d16 FE       		.byte	0xfe
 12763 1d17 13010000 		.4byte	0x113
 12764 1d1b 05       		.uleb128 0x5
 12765 1d1c 03       		.byte	0x3
 12766 1d1d 00000000 		.4byte	stringRepDivider
 12767 1d21 23       		.uleb128 0x23
 12768 1d22 EA0A0000 		.4byte	.LASF313
 12769 1d26 01       		.byte	0x1
 12770 1d27 E605     		.2byte	0x5e6
 12771 1d29 DE1C0000 		.4byte	0x1cde
 12772 1d2d 05       		.uleb128 0x5
 12773 1d2e 03       		.byte	0x3
 12774 1d2f 00000000 		.4byte	prevNotes
 12775 1d33 23       		.uleb128 0x23
 12776 1d34 1C0C0000 		.4byte	.LASF314
 12777 1d38 01       		.byte	0x1
 12778 1d39 5B06     		.2byte	0x65b
 12779 1d3b 09020000 		.4byte	0x209
 12780 1d3f 05       		.uleb128 0x5
 12781 1d40 03       		.byte	0x3
 12782 1d41 00000000 		.4byte	checkStatus
 12783 1d45 23       		.uleb128 0x23
 12784 1d46 BC0D0000 		.4byte	.LASF315
 12785 1d4a 01       		.byte	0x1
 12786 1d4b 5C06     		.2byte	0x65c
 12787 1d4d 0E020000 		.4byte	0x20e
 12788 1d51 05       		.uleb128 0x5
 12789 1d52 03       		.byte	0x3
 12790 1d53 00000000 		.4byte	checkBase
 12791 1d57 23       		.uleb128 0x23
 12792 1d58 65070000 		.4byte	.LASF316
 12793 1d5c 01       		.byte	0x1
 12794 1d5d 6006     		.2byte	0x660
 12795 1d5f 9F000000 		.4byte	0x9f
 12796 1d63 05       		.uleb128 0x5
 12797 1d64 03       		.byte	0x3
 12798 1d65 00000000 		.4byte	SPI_errors
 12799 1d69 0E       		.uleb128 0xe
 12800 1d6a 09020000 		.4byte	0x209
 12801 1d6e 791D0000 		.4byte	0x1d79
 12802 1d72 0F       		.uleb128 0xf
 12803 1d73 4C010000 		.4byte	0x14c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 264


 12804 1d77 03       		.byte	0x3
 12805 1d78 00       		.byte	0
 12806 1d79 23       		.uleb128 0x23
 12807 1d7a 2F100000 		.4byte	.LASF317
 12808 1d7e 01       		.byte	0x1
 12809 1d7f DC07     		.2byte	0x7dc
 12810 1d81 8B1D0000 		.4byte	0x1d8b
 12811 1d85 05       		.uleb128 0x5
 12812 1d86 03       		.byte	0x3
 12813 1d87 00000000 		.4byte	tempMIDI
 12814 1d8b 06       		.uleb128 0x6
 12815 1d8c 691D0000 		.4byte	0x1d69
 12816 1d90 23       		.uleb128 0x23
 12817 1d91 26000000 		.4byte	.LASF318
 12818 1d95 01       		.byte	0x1
 12819 1d96 DD07     		.2byte	0x7dd
 12820 1d98 09020000 		.4byte	0x209
 12821 1d9c 05       		.uleb128 0x5
 12822 1d9d 03       		.byte	0x3
 12823 1d9e 00000000 		.4byte	firstSysex
 12824 1da2 23       		.uleb128 0x23
 12825 1da3 6F060000 		.4byte	.LASF319
 12826 1da7 01       		.byte	0x1
 12827 1da8 DE07     		.2byte	0x7de
 12828 1daa B41D0000 		.4byte	0x1db4
 12829 1dae 05       		.uleb128 0x5
 12830 1daf 03       		.byte	0x3
 12831 1db0 00000000 		.4byte	sysexPointerMask
 12832 1db4 1F       		.uleb128 0x1f
 12833 1db5 CE000000 		.4byte	0xce
 12834 1db9 00       		.byte	0
 12835              		.section	.debug_abbrev,"",%progbits
 12836              	.Ldebug_abbrev0:
 12837 0000 01       		.uleb128 0x1
 12838 0001 11       		.uleb128 0x11
 12839 0002 01       		.byte	0x1
 12840 0003 25       		.uleb128 0x25
 12841 0004 0E       		.uleb128 0xe
 12842 0005 13       		.uleb128 0x13
 12843 0006 0B       		.uleb128 0xb
 12844 0007 03       		.uleb128 0x3
 12845 0008 0E       		.uleb128 0xe
 12846 0009 1B       		.uleb128 0x1b
 12847 000a 0E       		.uleb128 0xe
 12848 000b 55       		.uleb128 0x55
 12849 000c 17       		.uleb128 0x17
 12850 000d 11       		.uleb128 0x11
 12851 000e 01       		.uleb128 0x1
 12852 000f 10       		.uleb128 0x10
 12853 0010 17       		.uleb128 0x17
 12854 0011 00       		.byte	0
 12855 0012 00       		.byte	0
 12856 0013 02       		.uleb128 0x2
 12857 0014 16       		.uleb128 0x16
 12858 0015 00       		.byte	0
 12859 0016 03       		.uleb128 0x3
 12860 0017 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 265


 12861 0018 3A       		.uleb128 0x3a
 12862 0019 0B       		.uleb128 0xb
 12863 001a 3B       		.uleb128 0x3b
 12864 001b 0B       		.uleb128 0xb
 12865 001c 49       		.uleb128 0x49
 12866 001d 13       		.uleb128 0x13
 12867 001e 00       		.byte	0
 12868 001f 00       		.byte	0
 12869 0020 03       		.uleb128 0x3
 12870 0021 24       		.uleb128 0x24
 12871 0022 00       		.byte	0
 12872 0023 0B       		.uleb128 0xb
 12873 0024 0B       		.uleb128 0xb
 12874 0025 3E       		.uleb128 0x3e
 12875 0026 0B       		.uleb128 0xb
 12876 0027 03       		.uleb128 0x3
 12877 0028 0E       		.uleb128 0xe
 12878 0029 00       		.byte	0
 12879 002a 00       		.byte	0
 12880 002b 04       		.uleb128 0x4
 12881 002c 24       		.uleb128 0x24
 12882 002d 00       		.byte	0
 12883 002e 0B       		.uleb128 0xb
 12884 002f 0B       		.uleb128 0xb
 12885 0030 3E       		.uleb128 0x3e
 12886 0031 0B       		.uleb128 0xb
 12887 0032 03       		.uleb128 0x3
 12888 0033 08       		.uleb128 0x8
 12889 0034 00       		.byte	0
 12890 0035 00       		.byte	0
 12891 0036 05       		.uleb128 0x5
 12892 0037 16       		.uleb128 0x16
 12893 0038 00       		.byte	0
 12894 0039 03       		.uleb128 0x3
 12895 003a 0E       		.uleb128 0xe
 12896 003b 3A       		.uleb128 0x3a
 12897 003c 0B       		.uleb128 0xb
 12898 003d 3B       		.uleb128 0x3b
 12899 003e 05       		.uleb128 0x5
 12900 003f 49       		.uleb128 0x49
 12901 0040 13       		.uleb128 0x13
 12902 0041 00       		.byte	0
 12903 0042 00       		.byte	0
 12904 0043 06       		.uleb128 0x6
 12905 0044 35       		.uleb128 0x35
 12906 0045 00       		.byte	0
 12907 0046 49       		.uleb128 0x49
 12908 0047 13       		.uleb128 0x13
 12909 0048 00       		.byte	0
 12910 0049 00       		.byte	0
 12911 004a 07       		.uleb128 0x7
 12912 004b 13       		.uleb128 0x13
 12913 004c 01       		.byte	0x1
 12914 004d 0B       		.uleb128 0xb
 12915 004e 0B       		.uleb128 0xb
 12916 004f 3A       		.uleb128 0x3a
 12917 0050 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 266


 12918 0051 3B       		.uleb128 0x3b
 12919 0052 05       		.uleb128 0x5
 12920 0053 01       		.uleb128 0x1
 12921 0054 13       		.uleb128 0x13
 12922 0055 00       		.byte	0
 12923 0056 00       		.byte	0
 12924 0057 08       		.uleb128 0x8
 12925 0058 0D       		.uleb128 0xd
 12926 0059 00       		.byte	0
 12927 005a 03       		.uleb128 0x3
 12928 005b 0E       		.uleb128 0xe
 12929 005c 3A       		.uleb128 0x3a
 12930 005d 0B       		.uleb128 0xb
 12931 005e 3B       		.uleb128 0x3b
 12932 005f 05       		.uleb128 0x5
 12933 0060 49       		.uleb128 0x49
 12934 0061 13       		.uleb128 0x13
 12935 0062 38       		.uleb128 0x38
 12936 0063 0B       		.uleb128 0xb
 12937 0064 00       		.byte	0
 12938 0065 00       		.byte	0
 12939 0066 09       		.uleb128 0x9
 12940 0067 04       		.uleb128 0x4
 12941 0068 01       		.byte	0x1
 12942 0069 0B       		.uleb128 0xb
 12943 006a 0B       		.uleb128 0xb
 12944 006b 49       		.uleb128 0x49
 12945 006c 13       		.uleb128 0x13
 12946 006d 3A       		.uleb128 0x3a
 12947 006e 0B       		.uleb128 0xb
 12948 006f 3B       		.uleb128 0x3b
 12949 0070 05       		.uleb128 0x5
 12950 0071 01       		.uleb128 0x1
 12951 0072 13       		.uleb128 0x13
 12952 0073 00       		.byte	0
 12953 0074 00       		.byte	0
 12954 0075 0A       		.uleb128 0xa
 12955 0076 28       		.uleb128 0x28
 12956 0077 00       		.byte	0
 12957 0078 03       		.uleb128 0x3
 12958 0079 0E       		.uleb128 0xe
 12959 007a 1C       		.uleb128 0x1c
 12960 007b 0B       		.uleb128 0xb
 12961 007c 00       		.byte	0
 12962 007d 00       		.byte	0
 12963 007e 0B       		.uleb128 0xb
 12964 007f 04       		.uleb128 0x4
 12965 0080 01       		.byte	0x1
 12966 0081 03       		.uleb128 0x3
 12967 0082 0E       		.uleb128 0xe
 12968 0083 0B       		.uleb128 0xb
 12969 0084 0B       		.uleb128 0xb
 12970 0085 49       		.uleb128 0x49
 12971 0086 13       		.uleb128 0x13
 12972 0087 3A       		.uleb128 0x3a
 12973 0088 0B       		.uleb128 0xb
 12974 0089 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 267


 12975 008a 0B       		.uleb128 0xb
 12976 008b 01       		.uleb128 0x1
 12977 008c 13       		.uleb128 0x13
 12978 008d 00       		.byte	0
 12979 008e 00       		.byte	0
 12980 008f 0C       		.uleb128 0xc
 12981 0090 17       		.uleb128 0x17
 12982 0091 01       		.byte	0x1
 12983 0092 03       		.uleb128 0x3
 12984 0093 0E       		.uleb128 0xe
 12985 0094 0B       		.uleb128 0xb
 12986 0095 0B       		.uleb128 0xb
 12987 0096 3A       		.uleb128 0x3a
 12988 0097 0B       		.uleb128 0xb
 12989 0098 3B       		.uleb128 0x3b
 12990 0099 0B       		.uleb128 0xb
 12991 009a 01       		.uleb128 0x1
 12992 009b 13       		.uleb128 0x13
 12993 009c 00       		.byte	0
 12994 009d 00       		.byte	0
 12995 009e 0D       		.uleb128 0xd
 12996 009f 0D       		.uleb128 0xd
 12997 00a0 00       		.byte	0
 12998 00a1 03       		.uleb128 0x3
 12999 00a2 08       		.uleb128 0x8
 13000 00a3 3A       		.uleb128 0x3a
 13001 00a4 0B       		.uleb128 0xb
 13002 00a5 3B       		.uleb128 0x3b
 13003 00a6 0B       		.uleb128 0xb
 13004 00a7 49       		.uleb128 0x49
 13005 00a8 13       		.uleb128 0x13
 13006 00a9 00       		.byte	0
 13007 00aa 00       		.byte	0
 13008 00ab 0E       		.uleb128 0xe
 13009 00ac 01       		.uleb128 0x1
 13010 00ad 01       		.byte	0x1
 13011 00ae 49       		.uleb128 0x49
 13012 00af 13       		.uleb128 0x13
 13013 00b0 01       		.uleb128 0x1
 13014 00b1 13       		.uleb128 0x13
 13015 00b2 00       		.byte	0
 13016 00b3 00       		.byte	0
 13017 00b4 0F       		.uleb128 0xf
 13018 00b5 21       		.uleb128 0x21
 13019 00b6 00       		.byte	0
 13020 00b7 49       		.uleb128 0x49
 13021 00b8 13       		.uleb128 0x13
 13022 00b9 2F       		.uleb128 0x2f
 13023 00ba 0B       		.uleb128 0xb
 13024 00bb 00       		.byte	0
 13025 00bc 00       		.byte	0
 13026 00bd 10       		.uleb128 0x10
 13027 00be 2E       		.uleb128 0x2e
 13028 00bf 01       		.byte	0x1
 13029 00c0 3F       		.uleb128 0x3f
 13030 00c1 19       		.uleb128 0x19
 13031 00c2 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 268


 13032 00c3 08       		.uleb128 0x8
 13033 00c4 3A       		.uleb128 0x3a
 13034 00c5 0B       		.uleb128 0xb
 13035 00c6 3B       		.uleb128 0x3b
 13036 00c7 05       		.uleb128 0x5
 13037 00c8 27       		.uleb128 0x27
 13038 00c9 19       		.uleb128 0x19
 13039 00ca 49       		.uleb128 0x49
 13040 00cb 13       		.uleb128 0x13
 13041 00cc 11       		.uleb128 0x11
 13042 00cd 01       		.uleb128 0x1
 13043 00ce 12       		.uleb128 0x12
 13044 00cf 06       		.uleb128 0x6
 13045 00d0 40       		.uleb128 0x40
 13046 00d1 18       		.uleb128 0x18
 13047 00d2 9642     		.uleb128 0x2116
 13048 00d4 19       		.uleb128 0x19
 13049 00d5 01       		.uleb128 0x1
 13050 00d6 13       		.uleb128 0x13
 13051 00d7 00       		.byte	0
 13052 00d8 00       		.byte	0
 13053 00d9 11       		.uleb128 0x11
 13054 00da 05       		.uleb128 0x5
 13055 00db 00       		.byte	0
 13056 00dc 03       		.uleb128 0x3
 13057 00dd 0E       		.uleb128 0xe
 13058 00de 3A       		.uleb128 0x3a
 13059 00df 0B       		.uleb128 0xb
 13060 00e0 3B       		.uleb128 0x3b
 13061 00e1 05       		.uleb128 0x5
 13062 00e2 49       		.uleb128 0x49
 13063 00e3 13       		.uleb128 0x13
 13064 00e4 02       		.uleb128 0x2
 13065 00e5 18       		.uleb128 0x18
 13066 00e6 00       		.byte	0
 13067 00e7 00       		.byte	0
 13068 00e8 12       		.uleb128 0x12
 13069 00e9 2E       		.uleb128 0x2e
 13070 00ea 01       		.byte	0x1
 13071 00eb 3F       		.uleb128 0x3f
 13072 00ec 19       		.uleb128 0x19
 13073 00ed 03       		.uleb128 0x3
 13074 00ee 0E       		.uleb128 0xe
 13075 00ef 3A       		.uleb128 0x3a
 13076 00f0 0B       		.uleb128 0xb
 13077 00f1 3B       		.uleb128 0x3b
 13078 00f2 05       		.uleb128 0x5
 13079 00f3 27       		.uleb128 0x27
 13080 00f4 19       		.uleb128 0x19
 13081 00f5 49       		.uleb128 0x49
 13082 00f6 13       		.uleb128 0x13
 13083 00f7 11       		.uleb128 0x11
 13084 00f8 01       		.uleb128 0x1
 13085 00f9 12       		.uleb128 0x12
 13086 00fa 06       		.uleb128 0x6
 13087 00fb 40       		.uleb128 0x40
 13088 00fc 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 269


 13089 00fd 9642     		.uleb128 0x2116
 13090 00ff 19       		.uleb128 0x19
 13091 0100 01       		.uleb128 0x1
 13092 0101 13       		.uleb128 0x13
 13093 0102 00       		.byte	0
 13094 0103 00       		.byte	0
 13095 0104 13       		.uleb128 0x13
 13096 0105 2E       		.uleb128 0x2e
 13097 0106 01       		.byte	0x1
 13098 0107 3F       		.uleb128 0x3f
 13099 0108 19       		.uleb128 0x19
 13100 0109 03       		.uleb128 0x3
 13101 010a 0E       		.uleb128 0xe
 13102 010b 3A       		.uleb128 0x3a
 13103 010c 0B       		.uleb128 0xb
 13104 010d 3B       		.uleb128 0x3b
 13105 010e 05       		.uleb128 0x5
 13106 010f 11       		.uleb128 0x11
 13107 0110 01       		.uleb128 0x1
 13108 0111 12       		.uleb128 0x12
 13109 0112 06       		.uleb128 0x6
 13110 0113 40       		.uleb128 0x40
 13111 0114 18       		.uleb128 0x18
 13112 0115 9642     		.uleb128 0x2116
 13113 0117 19       		.uleb128 0x19
 13114 0118 01       		.uleb128 0x1
 13115 0119 13       		.uleb128 0x13
 13116 011a 00       		.byte	0
 13117 011b 00       		.byte	0
 13118 011c 14       		.uleb128 0x14
 13119 011d 0B       		.uleb128 0xb
 13120 011e 01       		.byte	0x1
 13121 011f 11       		.uleb128 0x11
 13122 0120 01       		.uleb128 0x1
 13123 0121 12       		.uleb128 0x12
 13124 0122 06       		.uleb128 0x6
 13125 0123 01       		.uleb128 0x1
 13126 0124 13       		.uleb128 0x13
 13127 0125 00       		.byte	0
 13128 0126 00       		.byte	0
 13129 0127 15       		.uleb128 0x15
 13130 0128 34       		.uleb128 0x34
 13131 0129 00       		.byte	0
 13132 012a 03       		.uleb128 0x3
 13133 012b 08       		.uleb128 0x8
 13134 012c 3A       		.uleb128 0x3a
 13135 012d 0B       		.uleb128 0xb
 13136 012e 3B       		.uleb128 0x3b
 13137 012f 05       		.uleb128 0x5
 13138 0130 49       		.uleb128 0x49
 13139 0131 13       		.uleb128 0x13
 13140 0132 02       		.uleb128 0x2
 13141 0133 18       		.uleb128 0x18
 13142 0134 00       		.byte	0
 13143 0135 00       		.byte	0
 13144 0136 16       		.uleb128 0x16
 13145 0137 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 270


 13146 0138 01       		.byte	0x1
 13147 0139 11       		.uleb128 0x11
 13148 013a 01       		.uleb128 0x1
 13149 013b 12       		.uleb128 0x12
 13150 013c 06       		.uleb128 0x6
 13151 013d 00       		.byte	0
 13152 013e 00       		.byte	0
 13153 013f 17       		.uleb128 0x17
 13154 0140 2E       		.uleb128 0x2e
 13155 0141 01       		.byte	0x1
 13156 0142 3F       		.uleb128 0x3f
 13157 0143 19       		.uleb128 0x19
 13158 0144 03       		.uleb128 0x3
 13159 0145 0E       		.uleb128 0xe
 13160 0146 3A       		.uleb128 0x3a
 13161 0147 0B       		.uleb128 0xb
 13162 0148 3B       		.uleb128 0x3b
 13163 0149 05       		.uleb128 0x5
 13164 014a 27       		.uleb128 0x27
 13165 014b 19       		.uleb128 0x19
 13166 014c 11       		.uleb128 0x11
 13167 014d 01       		.uleb128 0x1
 13168 014e 12       		.uleb128 0x12
 13169 014f 06       		.uleb128 0x6
 13170 0150 40       		.uleb128 0x40
 13171 0151 18       		.uleb128 0x18
 13172 0152 9642     		.uleb128 0x2116
 13173 0154 19       		.uleb128 0x19
 13174 0155 01       		.uleb128 0x1
 13175 0156 13       		.uleb128 0x13
 13176 0157 00       		.byte	0
 13177 0158 00       		.byte	0
 13178 0159 18       		.uleb128 0x18
 13179 015a 34       		.uleb128 0x34
 13180 015b 00       		.byte	0
 13181 015c 03       		.uleb128 0x3
 13182 015d 0E       		.uleb128 0xe
 13183 015e 3A       		.uleb128 0x3a
 13184 015f 0B       		.uleb128 0xb
 13185 0160 3B       		.uleb128 0x3b
 13186 0161 05       		.uleb128 0x5
 13187 0162 49       		.uleb128 0x49
 13188 0163 13       		.uleb128 0x13
 13189 0164 02       		.uleb128 0x2
 13190 0165 18       		.uleb128 0x18
 13191 0166 00       		.byte	0
 13192 0167 00       		.byte	0
 13193 0168 19       		.uleb128 0x19
 13194 0169 2E       		.uleb128 0x2e
 13195 016a 00       		.byte	0
 13196 016b 3F       		.uleb128 0x3f
 13197 016c 19       		.uleb128 0x19
 13198 016d 03       		.uleb128 0x3
 13199 016e 0E       		.uleb128 0xe
 13200 016f 3A       		.uleb128 0x3a
 13201 0170 0B       		.uleb128 0xb
 13202 0171 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 271


 13203 0172 05       		.uleb128 0x5
 13204 0173 27       		.uleb128 0x27
 13205 0174 19       		.uleb128 0x19
 13206 0175 11       		.uleb128 0x11
 13207 0176 01       		.uleb128 0x1
 13208 0177 12       		.uleb128 0x12
 13209 0178 06       		.uleb128 0x6
 13210 0179 40       		.uleb128 0x40
 13211 017a 18       		.uleb128 0x18
 13212 017b 9642     		.uleb128 0x2116
 13213 017d 19       		.uleb128 0x19
 13214 017e 00       		.byte	0
 13215 017f 00       		.byte	0
 13216 0180 1A       		.uleb128 0x1a
 13217 0181 05       		.uleb128 0x5
 13218 0182 00       		.byte	0
 13219 0183 03       		.uleb128 0x3
 13220 0184 08       		.uleb128 0x8
 13221 0185 3A       		.uleb128 0x3a
 13222 0186 0B       		.uleb128 0xb
 13223 0187 3B       		.uleb128 0x3b
 13224 0188 05       		.uleb128 0x5
 13225 0189 49       		.uleb128 0x49
 13226 018a 13       		.uleb128 0x13
 13227 018b 02       		.uleb128 0x2
 13228 018c 18       		.uleb128 0x18
 13229 018d 00       		.byte	0
 13230 018e 00       		.byte	0
 13231 018f 1B       		.uleb128 0x1b
 13232 0190 0F       		.uleb128 0xf
 13233 0191 00       		.byte	0
 13234 0192 0B       		.uleb128 0xb
 13235 0193 0B       		.uleb128 0xb
 13236 0194 49       		.uleb128 0x49
 13237 0195 13       		.uleb128 0x13
 13238 0196 00       		.byte	0
 13239 0197 00       		.byte	0
 13240 0198 1C       		.uleb128 0x1c
 13241 0199 34       		.uleb128 0x34
 13242 019a 00       		.byte	0
 13243 019b 03       		.uleb128 0x3
 13244 019c 0E       		.uleb128 0xe
 13245 019d 3A       		.uleb128 0x3a
 13246 019e 0B       		.uleb128 0xb
 13247 019f 3B       		.uleb128 0x3b
 13248 01a0 0B       		.uleb128 0xb
 13249 01a1 49       		.uleb128 0x49
 13250 01a2 13       		.uleb128 0x13
 13251 01a3 02       		.uleb128 0x2
 13252 01a4 18       		.uleb128 0x18
 13253 01a5 00       		.byte	0
 13254 01a6 00       		.byte	0
 13255 01a7 1D       		.uleb128 0x1d
 13256 01a8 34       		.uleb128 0x34
 13257 01a9 00       		.byte	0
 13258 01aa 03       		.uleb128 0x3
 13259 01ab 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 272


 13260 01ac 3A       		.uleb128 0x3a
 13261 01ad 0B       		.uleb128 0xb
 13262 01ae 3B       		.uleb128 0x3b
 13263 01af 0B       		.uleb128 0xb
 13264 01b0 49       		.uleb128 0x49
 13265 01b1 13       		.uleb128 0x13
 13266 01b2 3F       		.uleb128 0x3f
 13267 01b3 19       		.uleb128 0x19
 13268 01b4 3C       		.uleb128 0x3c
 13269 01b5 19       		.uleb128 0x19
 13270 01b6 00       		.byte	0
 13271 01b7 00       		.byte	0
 13272 01b8 1E       		.uleb128 0x1e
 13273 01b9 21       		.uleb128 0x21
 13274 01ba 00       		.byte	0
 13275 01bb 49       		.uleb128 0x49
 13276 01bc 13       		.uleb128 0x13
 13277 01bd 2F       		.uleb128 0x2f
 13278 01be 05       		.uleb128 0x5
 13279 01bf 00       		.byte	0
 13280 01c0 00       		.byte	0
 13281 01c1 1F       		.uleb128 0x1f
 13282 01c2 26       		.uleb128 0x26
 13283 01c3 00       		.byte	0
 13284 01c4 49       		.uleb128 0x49
 13285 01c5 13       		.uleb128 0x13
 13286 01c6 00       		.byte	0
 13287 01c7 00       		.byte	0
 13288 01c8 20       		.uleb128 0x20
 13289 01c9 34       		.uleb128 0x34
 13290 01ca 00       		.byte	0
 13291 01cb 03       		.uleb128 0x3
 13292 01cc 0E       		.uleb128 0xe
 13293 01cd 3A       		.uleb128 0x3a
 13294 01ce 0B       		.uleb128 0xb
 13295 01cf 3B       		.uleb128 0x3b
 13296 01d0 0B       		.uleb128 0xb
 13297 01d1 49       		.uleb128 0x49
 13298 01d2 13       		.uleb128 0x13
 13299 01d3 3F       		.uleb128 0x3f
 13300 01d4 19       		.uleb128 0x19
 13301 01d5 02       		.uleb128 0x2
 13302 01d6 18       		.uleb128 0x18
 13303 01d7 00       		.byte	0
 13304 01d8 00       		.byte	0
 13305 01d9 21       		.uleb128 0x21
 13306 01da 34       		.uleb128 0x34
 13307 01db 00       		.byte	0
 13308 01dc 03       		.uleb128 0x3
 13309 01dd 0E       		.uleb128 0xe
 13310 01de 3A       		.uleb128 0x3a
 13311 01df 0B       		.uleb128 0xb
 13312 01e0 3B       		.uleb128 0x3b
 13313 01e1 05       		.uleb128 0x5
 13314 01e2 49       		.uleb128 0x49
 13315 01e3 13       		.uleb128 0x13
 13316 01e4 3F       		.uleb128 0x3f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 273


 13317 01e5 19       		.uleb128 0x19
 13318 01e6 3C       		.uleb128 0x3c
 13319 01e7 19       		.uleb128 0x19
 13320 01e8 00       		.byte	0
 13321 01e9 00       		.byte	0
 13322 01ea 22       		.uleb128 0x22
 13323 01eb 34       		.uleb128 0x34
 13324 01ec 00       		.byte	0
 13325 01ed 03       		.uleb128 0x3
 13326 01ee 08       		.uleb128 0x8
 13327 01ef 3A       		.uleb128 0x3a
 13328 01f0 0B       		.uleb128 0xb
 13329 01f1 3B       		.uleb128 0x3b
 13330 01f2 0B       		.uleb128 0xb
 13331 01f3 49       		.uleb128 0x49
 13332 01f4 13       		.uleb128 0x13
 13333 01f5 3F       		.uleb128 0x3f
 13334 01f6 19       		.uleb128 0x19
 13335 01f7 02       		.uleb128 0x2
 13336 01f8 18       		.uleb128 0x18
 13337 01f9 00       		.byte	0
 13338 01fa 00       		.byte	0
 13339 01fb 23       		.uleb128 0x23
 13340 01fc 34       		.uleb128 0x34
 13341 01fd 00       		.byte	0
 13342 01fe 03       		.uleb128 0x3
 13343 01ff 0E       		.uleb128 0xe
 13344 0200 3A       		.uleb128 0x3a
 13345 0201 0B       		.uleb128 0xb
 13346 0202 3B       		.uleb128 0x3b
 13347 0203 05       		.uleb128 0x5
 13348 0204 49       		.uleb128 0x49
 13349 0205 13       		.uleb128 0x13
 13350 0206 3F       		.uleb128 0x3f
 13351 0207 19       		.uleb128 0x19
 13352 0208 02       		.uleb128 0x2
 13353 0209 18       		.uleb128 0x18
 13354 020a 00       		.byte	0
 13355 020b 00       		.byte	0
 13356 020c 00       		.byte	0
 13357              		.section	.debug_aranges,"",%progbits
 13358 0000 F4000000 		.4byte	0xf4
 13359 0004 0200     		.2byte	0x2
 13360 0006 00000000 		.4byte	.Ldebug_info0
 13361 000a 04       		.byte	0x4
 13362 000b 00       		.byte	0
 13363 000c 0000     		.2byte	0
 13364 000e 0000     		.2byte	0
 13365 0010 00000000 		.4byte	.LFB64
 13366 0014 56000000 		.4byte	.LFE64-.LFB64
 13367 0018 00000000 		.4byte	.LFB65
 13368 001c 64000000 		.4byte	.LFE65-.LFB65
 13369 0020 00000000 		.4byte	.LFB66
 13370 0024 E8010000 		.4byte	.LFE66-.LFB66
 13371 0028 00000000 		.4byte	.LFB67
 13372 002c 18010000 		.4byte	.LFE67-.LFB67
 13373 0030 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 274


 13374 0034 84000000 		.4byte	.LFE68-.LFB68
 13375 0038 00000000 		.4byte	.LFB69
 13376 003c 34000000 		.4byte	.LFE69-.LFB69
 13377 0040 00000000 		.4byte	.LFB70
 13378 0044 7C000000 		.4byte	.LFE70-.LFB70
 13379 0048 00000000 		.4byte	.LFB71
 13380 004c 14000000 		.4byte	.LFE71-.LFB71
 13381 0050 00000000 		.4byte	.LFB72
 13382 0054 9C000000 		.4byte	.LFE72-.LFB72
 13383 0058 00000000 		.4byte	.LFB73
 13384 005c 74010000 		.4byte	.LFE73-.LFB73
 13385 0060 00000000 		.4byte	.LFB74
 13386 0064 781D0000 		.4byte	.LFE74-.LFB74
 13387 0068 00000000 		.4byte	.LFB75
 13388 006c 70000000 		.4byte	.LFE75-.LFB75
 13389 0070 00000000 		.4byte	.LFB76
 13390 0074 70010000 		.4byte	.LFE76-.LFB76
 13391 0078 00000000 		.4byte	.LFB77
 13392 007c E0000000 		.4byte	.LFE77-.LFB77
 13393 0080 00000000 		.4byte	.LFB78
 13394 0084 F4000000 		.4byte	.LFE78-.LFB78
 13395 0088 00000000 		.4byte	.LFB79
 13396 008c 24000000 		.4byte	.LFE79-.LFB79
 13397 0090 00000000 		.4byte	.LFB80
 13398 0094 54000000 		.4byte	.LFE80-.LFB80
 13399 0098 00000000 		.4byte	.LFB81
 13400 009c C4000000 		.4byte	.LFE81-.LFB81
 13401 00a0 00000000 		.4byte	.LFB82
 13402 00a4 98000000 		.4byte	.LFE82-.LFB82
 13403 00a8 00000000 		.4byte	.LFB83
 13404 00ac D4000000 		.4byte	.LFE83-.LFB83
 13405 00b0 00000000 		.4byte	.LFB84
 13406 00b4 1C000000 		.4byte	.LFE84-.LFB84
 13407 00b8 00000000 		.4byte	.LFB85
 13408 00bc 68000000 		.4byte	.LFE85-.LFB85
 13409 00c0 00000000 		.4byte	.LFB86
 13410 00c4 68000000 		.4byte	.LFE86-.LFB86
 13411 00c8 00000000 		.4byte	.LFB87
 13412 00cc 68000000 		.4byte	.LFE87-.LFB87
 13413 00d0 00000000 		.4byte	.LFB88
 13414 00d4 6C000000 		.4byte	.LFE88-.LFB88
 13415 00d8 00000000 		.4byte	.LFB89
 13416 00dc 5C000000 		.4byte	.LFE89-.LFB89
 13417 00e0 00000000 		.4byte	.LFB90
 13418 00e4 EC0B0000 		.4byte	.LFE90-.LFB90
 13419 00e8 00000000 		.4byte	.LFB91
 13420 00ec 50010000 		.4byte	.LFE91-.LFB91
 13421 00f0 00000000 		.4byte	0
 13422 00f4 00000000 		.4byte	0
 13423              		.section	.debug_ranges,"",%progbits
 13424              	.Ldebug_ranges0:
 13425 0000 00000000 		.4byte	.LFB64
 13426 0004 56000000 		.4byte	.LFE64
 13427 0008 00000000 		.4byte	.LFB65
 13428 000c 64000000 		.4byte	.LFE65
 13429 0010 00000000 		.4byte	.LFB66
 13430 0014 E8010000 		.4byte	.LFE66
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 275


 13431 0018 00000000 		.4byte	.LFB67
 13432 001c 18010000 		.4byte	.LFE67
 13433 0020 00000000 		.4byte	.LFB68
 13434 0024 84000000 		.4byte	.LFE68
 13435 0028 00000000 		.4byte	.LFB69
 13436 002c 34000000 		.4byte	.LFE69
 13437 0030 00000000 		.4byte	.LFB70
 13438 0034 7C000000 		.4byte	.LFE70
 13439 0038 00000000 		.4byte	.LFB71
 13440 003c 14000000 		.4byte	.LFE71
 13441 0040 00000000 		.4byte	.LFB72
 13442 0044 9C000000 		.4byte	.LFE72
 13443 0048 00000000 		.4byte	.LFB73
 13444 004c 74010000 		.4byte	.LFE73
 13445 0050 00000000 		.4byte	.LFB74
 13446 0054 781D0000 		.4byte	.LFE74
 13447 0058 00000000 		.4byte	.LFB75
 13448 005c 70000000 		.4byte	.LFE75
 13449 0060 00000000 		.4byte	.LFB76
 13450 0064 70010000 		.4byte	.LFE76
 13451 0068 00000000 		.4byte	.LFB77
 13452 006c E0000000 		.4byte	.LFE77
 13453 0070 00000000 		.4byte	.LFB78
 13454 0074 F4000000 		.4byte	.LFE78
 13455 0078 00000000 		.4byte	.LFB79
 13456 007c 24000000 		.4byte	.LFE79
 13457 0080 00000000 		.4byte	.LFB80
 13458 0084 54000000 		.4byte	.LFE80
 13459 0088 00000000 		.4byte	.LFB81
 13460 008c C4000000 		.4byte	.LFE81
 13461 0090 00000000 		.4byte	.LFB82
 13462 0094 98000000 		.4byte	.LFE82
 13463 0098 00000000 		.4byte	.LFB83
 13464 009c D4000000 		.4byte	.LFE83
 13465 00a0 00000000 		.4byte	.LFB84
 13466 00a4 1C000000 		.4byte	.LFE84
 13467 00a8 00000000 		.4byte	.LFB85
 13468 00ac 68000000 		.4byte	.LFE85
 13469 00b0 00000000 		.4byte	.LFB86
 13470 00b4 68000000 		.4byte	.LFE86
 13471 00b8 00000000 		.4byte	.LFB87
 13472 00bc 68000000 		.4byte	.LFE87
 13473 00c0 00000000 		.4byte	.LFB88
 13474 00c4 6C000000 		.4byte	.LFE88
 13475 00c8 00000000 		.4byte	.LFB89
 13476 00cc 5C000000 		.4byte	.LFE89
 13477 00d0 00000000 		.4byte	.LFB90
 13478 00d4 EC0B0000 		.4byte	.LFE90
 13479 00d8 00000000 		.4byte	.LFB91
 13480 00dc 50010000 		.4byte	.LFE91
 13481 00e0 00000000 		.4byte	0
 13482 00e4 00000000 		.4byte	0
 13483              		.section	.debug_line,"",%progbits
 13484              	.Ldebug_line0:
 13485 0000 0C0C0000 		.section	.debug_str,"MS",%progbits,1
 13485      0200B401 
 13485      00000201 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 276


 13485      FB0E0D00 
 13485      01010101 
 13486              	.LASF202:
 13487 0000 70726573 		.ascii	"presetArraySection\000"
 13487      65744172 
 13487      72617953 
 13487      65637469 
 13487      6F6E00
 13488              	.LASF15:
 13489 0013 696E7438 		.ascii	"int8_t\000"
 13489      5F7400
 13490              	.LASF190:
 13491 001a 70726573 		.ascii	"presetArray\000"
 13491      65744172 
 13491      72617900 
 13492              	.LASF318:
 13493 0026 66697273 		.ascii	"firstSysex\000"
 13493      74537973 
 13493      657800
 13494              	.LASF30:
 13495 0031 73697A65 		.ascii	"sizetype\000"
 13495      74797065 
 13495      00
 13496              	.LASF207:
 13497 003a 73656E64 		.ascii	"sendingMessage\000"
 13497      696E674D 
 13497      65737361 
 13497      676500
 13498              	.LASF288:
 13499 0049 70726576 		.ascii	"prev_processed_volumePedal\000"
 13499      5F70726F 
 13499      63657373 
 13499      65645F76 
 13499      6F6C756D 
 13500              	.LASF85:
 13501 0064 74656D70 		.ascii	"tempangle\000"
 13501      616E676C 
 13501      6500
 13502              	.LASF253:
 13503 006e 6E657744 		.ascii	"newDataFlag2\000"
 13503      61746146 
 13503      6C616732 
 13503      00
 13504              	.LASF161:
 13505 007b 6D616372 		.ascii	"macroNamesArray\000"
 13505      6F4E616D 
 13505      65734172 
 13505      72617900 
 13506              	.LASF40:
 13507 008b 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 13507      4D5F4545 
 13507      50524F4D 
 13507      5F535543 
 13507      43455353 
 13508              	.LASF19:
 13509 00a0 696E7433 		.ascii	"int32_t\000"
 13509      325F7400 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 277


 13510              	.LASF147:
 13511 00a8 456D5F45 		.ascii	"Em_EEPROM_context\000"
 13511      4550524F 
 13511      4D5F636F 
 13511      6E746578 
 13511      7400
 13512              	.LASF49:
 13513 00ba 54686972 		.ascii	"ThirdLine\000"
 13513      644C696E 
 13513      6500
 13514              	.LASF92:
 13515 00c4 62617242 		.ascii	"barBend\000"
 13515      656E6400 
 13516              	.LASF110:
 13517 00cc 6E6F7465 		.ascii	"noteEvent\000"
 13517      4576656E 
 13517      7400
 13518              	.LASF262:
 13519 00d6 53504932 		.ascii	"SPI2errorflag\000"
 13519      6572726F 
 13519      72666C61 
 13519      6700
 13520              	.LASF23:
 13521 00e4 75696E74 		.ascii	"uint32\000"
 13521      333200
 13522              	.LASF95:
 13523 00eb 77686963 		.ascii	"whichMacroToStoreName\000"
 13523      684D6163 
 13523      726F546F 
 13523      53746F72 
 13523      654E616D 
 13524              	.LASF123:
 13525 0101 43437661 		.ascii	"CCval\000"
 13525      6C00
 13526              	.LASF213:
 13527 0107 6E756D4D 		.ascii	"numMappings\000"
 13527      61707069 
 13527      6E677300 
 13528              	.LASF152:
 13529 0113 49324362 		.ascii	"I2Cbuff1\000"
 13529      75666631 
 13529      00
 13530              	.LASF276:
 13531 011c 49324362 		.ascii	"I2Cbuff2\000"
 13531      75666632 
 13531      00
 13532              	.LASF278:
 13533 0125 6D75785F 		.ascii	"mux_states\000"
 13533      73746174 
 13533      657300
 13534              	.LASF136:
 13535 0130 74656D70 		.ascii	"tempLow\000"
 13535      4C6F7700 
 13536              	.LASF159:
 13537 0138 6E65636B 		.ascii	"necks\000"
 13537      7300
 13538              	.LASF153:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 278


 13539 013e 6F637461 		.ascii	"octave\000"
 13539      766500
 13540              	.LASF209:
 13541 0145 63757272 		.ascii	"currentFloat\000"
 13541      656E7446 
 13541      6C6F6174 
 13541      00
 13542              	.LASF51:
 13543 0152 4E696C4C 		.ascii	"NilLine\000"
 13543      696E6500 
 13544              	.LASF45:
 13545 015a 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 13545      6E5F656D 
 13545      5F656570 
 13545      726F6D5F 
 13545      73746174 
 13546              	.LASF157:
 13547 0173 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 13547      6F4F4C45 
 13547      44576169 
 13547      74696E67 
 13547      546F5365 
 13548              	.LASF173:
 13549 018a 70656461 		.ascii	"pedals_high\000"
 13549      6C735F68 
 13549      69676800 
 13550              	.LASF101:
 13551 0196 6E627974 		.ascii	"nbytes\000"
 13551      657300
 13552              	.LASF166:
 13553 019d 636F7065 		.ascii	"copedentNamesArray\000"
 13553      64656E74 
 13553      4E616D65 
 13553      73417272 
 13553      617900
 13554              	.LASF211:
 13555 01b0 76616C73 		.ascii	"valsCount\000"
 13555      436F756E 
 13555      7400
 13556              	.LASF122:
 13557 01ba 43436E75 		.ascii	"CCnum\000"
 13557      6D00
 13558              	.LASF42:
 13559 01c0 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 13559      4D5F4545 
 13559      50524F4D 
 13559      5F424144 
 13559      5F434845 
 13560              	.LASF38:
 13561 01da 75736572 		.ascii	"userFlashStartAddr\000"
 13561      466C6173 
 13561      68537461 
 13561      72744164 
 13561      647200
 13562              	.LASF32:
 13563 01ed 6E756D62 		.ascii	"numberOfRows\000"
 13563      65724F66 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 279


 13563      526F7773 
 13563      00
 13564              	.LASF130:
 13565 01fa 696E7456 		.ascii	"intVal\000"
 13565      616C00
 13566              	.LASF61:
 13567 0201 69737461 		.ascii	"istart\000"
 13567      727400
 13568              	.LASF66:
 13569 0208 70656461 		.ascii	"pedalDiff\000"
 13569      6C446966 
 13569      6600
 13570              	.LASF127:
 13571 0212 74686556 		.ascii	"theVal\000"
 13571      616C00
 13572              	.LASF36:
 13573 0219 72656475 		.ascii	"redundantCopy\000"
 13573      6E64616E 
 13573      74436F70 
 13573      7900
 13574              	.LASF1:
 13575 0227 5F5F7569 		.ascii	"__uint8_t\000"
 13575      6E74385F 
 13575      7400
 13576              	.LASF212:
 13577 0231 6D617043 		.ascii	"mapCountExpectation\000"
 13577      6F756E74 
 13577      45787065 
 13577      63746174 
 13577      696F6E00 
 13578              	.LASF59:
 13579 0245 70726573 		.ascii	"presetEnd\000"
 13579      6574456E 
 13579      6400
 13580              	.LASF275:
 13581 024f 62617243 		.ascii	"barCount\000"
 13581      6F756E74 
 13581      00
 13582              	.LASF193:
 13583 0258 73656E64 		.ascii	"sendMessageEnd\000"
 13583      4D657373 
 13583      61676545 
 13583      6E6400
 13584              	.LASF281:
 13585 0267 70656461 		.ascii	"pedals_highWithDeadZone\000"
 13585      6C735F68 
 13585      69676857 
 13585      69746844 
 13585      6561645A 
 13586              	.LASF165:
 13587 027f 70726573 		.ascii	"presetNumberToLoad\000"
 13587      65744E75 
 13587      6D626572 
 13587      546F4C6F 
 13587      616400
 13588              	.LASF297:
 13589 0292 766F6963 		.ascii	"voice\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 280


 13589      6500
 13590              	.LASF243:
 13591 0298 73747269 		.ascii	"strings\000"
 13591      6E677300 
 13592              	.LASF9:
 13593 02a0 6C6F6E67 		.ascii	"long int\000"
 13593      20696E74 
 13593      00
 13594              	.LASF156:
 13595 02a9 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 13595      4F4C4544 
 13595      57616974 
 13595      696E6754 
 13595      6F53656E 
 13596              	.LASF292:
 13597 02bf 66726574 		.ascii	"fretScalingInMIDI\000"
 13597      5363616C 
 13597      696E6749 
 13597      6E4D4944 
 13597      4900
 13598              	.LASF291:
 13599 02d1 70726573 		.ascii	"presetLoadedResponse\000"
 13599      65744C6F 
 13599      61646564 
 13599      52657370 
 13599      6F6E7365 
 13600              	.LASF191:
 13601 02e6 70726573 		.ascii	"presetNumberToWrite\000"
 13601      65744E75 
 13601      6D626572 
 13601      546F5772 
 13601      69746500 
 13602              	.LASF94:
 13603 02fa 77686963 		.ascii	"whichPresetToStoreName\000"
 13603      68507265 
 13603      73657454 
 13603      6F53746F 
 13603      72654E61 
 13604              	.LASF164:
 13605 0311 70726573 		.ascii	"presetNamesArray\000"
 13605      65744E61 
 13605      6D657341 
 13605      72726179 
 13605      00
 13606              	.LASF75:
 13607 0322 6D61696E 		.ascii	"main\000"
 13607      00
 13608              	.LASF299:
 13609 0327 70726576 		.ascii	"prevStringPitchBend\000"
 13609      53747269 
 13609      6E675069 
 13609      74636842 
 13609      656E6400 
 13610              	.LASF117:
 13611 033b 4D494449 		.ascii	"MIDInoteNum\000"
 13611      6E6F7465 
 13611      4E756D00 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 281


 13612              	.LASF125:
 13613 0347 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 13613      4D494449 
 13613      416C6C4E 
 13613      6F746573 
 13613      4F666600 
 13614              	.LASF103:
 13615 035b 6572726F 		.ascii	"error\000"
 13615      7200
 13616              	.LASF48:
 13617 0361 5365636F 		.ascii	"SecondLine\000"
 13617      6E644C69 
 13617      6E6500
 13618              	.LASF208:
 13619 036c 73656E64 		.ascii	"sendKnobs\000"
 13619      4B6E6F62 
 13619      7300
 13620              	.LASF271:
 13621 0376 70726576 		.ascii	"prevMacroKnobValues7bit\000"
 13621      4D616372 
 13621      6F4B6E6F 
 13621      6256616C 
 13621      75657337 
 13622              	.LASF185:
 13623 038e 6D696469 		.ascii	"midiBarSendOn\000"
 13623      42617253 
 13623      656E644F 
 13623      6E00
 13624              	.LASF263:
 13625 039c 6B6E6F62 		.ascii	"knobs\000"
 13625      7300
 13626              	.LASF187:
 13627 03a2 73797365 		.ascii	"sysexPointer\000"
 13627      78506F69 
 13627      6E746572 
 13627      00
 13628              	.LASF219:
 13629 03af 63757272 		.ascii	"currentVBUS\000"
 13629      656E7456 
 13629      42555300 
 13630              	.LASF80:
 13631 03bb 73747269 		.ascii	"stringStartLoc\000"
 13631      6E675374 
 13631      6172744C 
 13631      6F6300
 13632              	.LASF2:
 13633 03ca 7369676E 		.ascii	"signed char\000"
 13633      65642063 
 13633      68617200 
 13634              	.LASF16:
 13635 03d6 75696E74 		.ascii	"uint8_t\000"
 13635      385F7400 
 13636              	.LASF31:
 13637 03de 776C456E 		.ascii	"wlEndAddr\000"
 13637      64416464 
 13637      7200
 13638              	.LASF138:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 282


 13639 03e8 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 13639      63616C6C 
 13639      6261636B 
 13639      4C6F6361 
 13639      6C4D6964 
 13640              	.LASF74:
 13641 0403 73706973 		.ascii	"spis_1_ss\000"
 13641      5F315F73 
 13641      7300
 13642              	.LASF43:
 13643 040d 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 13643      4D5F4545 
 13643      50524F4D 
 13643      5F424144 
 13643      5F444154 
 13644              	.LASF52:
 13645 0423 5F4F4C45 		.ascii	"_OLEDLine\000"
 13645      444C696E 
 13645      6500
 13646              	.LASF210:
 13647 042d 6D617043 		.ascii	"mapCount\000"
 13647      6F756E74 
 13647      00
 13648              	.LASF134:
 13649 0436 74656D70 		.ascii	"tempIntVersion\000"
 13649      496E7456 
 13649      65727369 
 13649      6F6E00
 13650              	.LASF294:
 13651 0445 70656461 		.ascii	"pedalRatios\000"
 13651      6C526174 
 13651      696F7300 
 13652              	.LASF3:
 13653 0451 756E7369 		.ascii	"unsigned char\000"
 13653      676E6564 
 13653      20636861 
 13653      7200
 13654              	.LASF215:
 13655 045f 76616C43 		.ascii	"valCheck\000"
 13655      6865636B 
 13655      00
 13656              	.LASF129:
 13657 0468 76616C73 		.ascii	"valsStart\000"
 13657      53746172 
 13657      7400
 13658              	.LASF77:
 13659 0472 636F7065 		.ascii	"coped\000"
 13659      6400
 13660              	.LASF233:
 13661 0478 72783143 		.ascii	"rx1Channel\000"
 13661      68616E6E 
 13661      656C00
 13662              	.LASF79:
 13663 0483 70656461 		.ascii	"pedalStartLoc\000"
 13663      6C537461 
 13663      72744C6F 
 13663      6300
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 283


 13664              	.LASF249:
 13665 0491 6E657744 		.ascii	"newDataFlag\000"
 13665      61746146 
 13665      6C616700 
 13666              	.LASF307:
 13667 049d 73747269 		.ascii	"stringOctave\000"
 13667      6E674F63 
 13667      74617665 
 13667      00
 13668              	.LASF108:
 13669 04aa 5553425F 		.ascii	"USB_service\000"
 13669      73657276 
 13669      69636500 
 13670              	.LASF195:
 13671 04b6 73696E67 		.ascii	"singleParamToUpdateHigh\000"
 13671      6C655061 
 13671      72616D54 
 13671      6F557064 
 13671      61746548 
 13672              	.LASF60:
 13673 04ce 76616C75 		.ascii	"value\000"
 13673      6500
 13674              	.LASF295:
 13675 04d4 6C617374 		.ascii	"last_mux\000"
 13675      5F6D7578 
 13675      00
 13676              	.LASF120:
 13677 04dd 70726573 		.ascii	"pressure\000"
 13677      73757265 
 13677      00
 13678              	.LASF167:
 13679 04e6 70726573 		.ascii	"presetAlreadyDisplayed\000"
 13679      6574416C 
 13679      72656164 
 13679      79446973 
 13679      706C6179 
 13680              	.LASF55:
 13681 04fd 6D616372 		.ascii	"macroNames\000"
 13681      6F4E616D 
 13681      657300
 13682              	.LASF244:
 13683 0508 70726576 		.ascii	"prevStrings\000"
 13683      53747269 
 13683      6E677300 
 13684              	.LASF26:
 13685 0514 63686172 		.ascii	"char\000"
 13685      00
 13686              	.LASF141:
 13687 0519 65657072 		.ascii	"eepromArray\000"
 13687      6F6D4172 
 13687      72617900 
 13688              	.LASF229:
 13689 0525 72617741 		.ascii	"rawAngle\000"
 13689      6E676C65 
 13689      00
 13690              	.LASF97:
 13691 052e 446D6154 		.ascii	"DmaTxConfiguration\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 284


 13691      78436F6E 
 13691      66696775 
 13691      72617469 
 13691      6F6E00
 13692              	.LASF6:
 13693 0541 5F5F7569 		.ascii	"__uint16_t\000"
 13693      6E743136 
 13693      5F7400
 13694              	.LASF107:
 13695 054c 63686563 		.ascii	"checkUSB_Vbus\000"
 13695      6B555342 
 13695      5F566275 
 13695      7300
 13696              	.LASF303:
 13697 055a 73747269 		.ascii	"stringMappedPositionsInRatios\000"
 13697      6E674D61 
 13697      70706564 
 13697      506F7369 
 13697      74696F6E 
 13698              	.LASF137:
 13699 0578 726F756E 		.ascii	"roundedIndex\000"
 13699      64656449 
 13699      6E646578 
 13699      00
 13700              	.LASF274:
 13701 0585 65657072 		.ascii	"eeprom_cnt\000"
 13701      6F6D5F63 
 13701      6E7400
 13702              	.LASF145:
 13703 0590 5553425F 		.ascii	"USB_midi_out_ep\000"
 13703      6D696469 
 13703      5F6F7574 
 13703      5F657000 
 13704              	.LASF106:
 13705 05a0 4932435F 		.ascii	"I2C_reset\000"
 13705      72657365 
 13705      7400
 13706              	.LASF174:
 13707 05aa 70656461 		.ascii	"pedal_inverted\000"
 13707      6C5F696E 
 13707      76657274 
 13707      656400
 13708              	.LASF46:
 13709 05b9 75696E74 		.ascii	"uint\000"
 13709      00
 13710              	.LASF324:
 13711 05be 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 13711      496E6974 
 13711      69616C50 
 13711      6564616C 
 13711      5A65726F 
 13712              	.LASF119:
 13713 05dc 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 13713      4D494449 
 13713      506F6C79 
 13713      4B657950 
 13713      72657373 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 285


 13714              	.LASF133:
 13715 05f4 73747269 		.ascii	"stringChange\000"
 13715      6E674368 
 13715      616E6765 
 13715      00
 13716              	.LASF90:
 13717 0601 636F6D70 		.ascii	"computerMIDIOffset\000"
 13717      75746572 
 13717      4D494449 
 13717      4F666673 
 13717      657400
 13718              	.LASF198:
 13719 0614 73696E67 		.ascii	"singleParamValueLow\000"
 13719      6C655061 
 13719      72616D56 
 13719      616C7565 
 13719      4C6F7700 
 13720              	.LASF121:
 13721 0628 73656E64 		.ascii	"sendMIDIControlChange\000"
 13721      4D494449 
 13721      436F6E74 
 13721      726F6C43 
 13721      68616E67 
 13722              	.LASF248:
 13723 063e 73706943 		.ascii	"spiCounter\000"
 13723      6F756E74 
 13723      657200
 13724              	.LASF177:
 13725 0649 7472616E 		.ascii	"transposeCents\000"
 13725      73706F73 
 13725      6543656E 
 13725      747300
 13726              	.LASF41:
 13727 0658 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 13727      4D5F4545 
 13727      50524F4D 
 13727      5F424144 
 13727      5F504152 
 13728              	.LASF319:
 13729 066f 73797365 		.ascii	"sysexPointerMask\000"
 13729      78506F69 
 13729      6E746572 
 13729      4D61736B 
 13729      00
 13730              	.LASF149:
 13731 0680 4932435F 		.ascii	"I2C_1_initVar\000"
 13731      315F696E 
 13731      69745661 
 13731      7200
 13732              	.LASF155:
 13733 068e 63757272 		.ascii	"currentCopedent\000"
 13733      656E7443 
 13733      6F706564 
 13733      656E7400 
 13734              	.LASF54:
 13735 069e 70726573 		.ascii	"presetName\000"
 13735      65744E61 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 286


 13735      6D6500
 13736              	.LASF53:
 13737 06a9 5F707265 		.ascii	"_presetArraySectionState\000"
 13737      73657441 
 13737      72726179 
 13737      53656374 
 13737      696F6E53 
 13738              	.LASF189:
 13739 06c2 70617273 		.ascii	"parsingSysex\000"
 13739      696E6753 
 13739      79736578 
 13739      00
 13740              	.LASF226:
 13741 06cf 72657475 		.ascii	"returnedData\000"
 13741      726E6564 
 13741      44617461 
 13741      00
 13742              	.LASF50:
 13743 06dc 466F7572 		.ascii	"FourthLine\000"
 13743      74684C69 
 13743      6E6500
 13744              	.LASF290:
 13745 06e7 736C6964 		.ascii	"sliderBugOn\000"
 13745      65724275 
 13745      674F6E00 
 13746              	.LASF168:
 13747 06f3 77686963 		.ascii	"whichMacro\000"
 13747      684D6163 
 13747      726F00
 13748              	.LASF282:
 13749 06fe 766F6C75 		.ascii	"volumePedal\000"
 13749      6D655065 
 13749      64616C00 
 13750              	.LASF241:
 13751 070a 72784275 		.ascii	"rxBufferPluck\000"
 13751      66666572 
 13751      506C7563 
 13751      6B00
 13752              	.LASF298:
 13753 0718 636F7065 		.ascii	"copedent\000"
 13753      64656E74 
 13753      00
 13754              	.LASF285:
 13755 0721 70656461 		.ascii	"pedals8bit\000"
 13755      6C733862 
 13755      697400
 13756              	.LASF68:
 13757 072c 756E7361 		.ascii	"unsafeFtom\000"
 13757      66654674 
 13757      6F6D00
 13758              	.LASF264:
 13759 0737 70726576 		.ascii	"prevKnobs\000"
 13759      4B6E6F62 
 13759      7300
 13760              	.LASF260:
 13761 0741 6D795370 		.ascii	"mySpiCounter\000"
 13761      69436F75 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 287


 13761      6E746572 
 13761      00
 13762              	.LASF205:
 13763 074e 73797365 		.ascii	"sysexMessageInProgress\000"
 13763      784D6573 
 13763      73616765 
 13763      496E5072 
 13763      6F677265 
 13764              	.LASF316:
 13765 0765 5350495F 		.ascii	"SPI_errors\000"
 13765      6572726F 
 13765      727300
 13766              	.LASF115:
 13767 0770 43434576 		.ascii	"CCEvent\000"
 13767      656E7400 
 13768              	.LASF304:
 13769 0778 73747269 		.ascii	"stringMappedPositionsInMIDI\000"
 13769      6E674D61 
 13769      70706564 
 13769      506F7369 
 13769      74696F6E 
 13770              	.LASF126:
 13771 0794 70617273 		.ascii	"parseSysex\000"
 13771      65537973 
 13771      657800
 13772              	.LASF322:
 13773 079f 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 13773      73657273 
 13773      5C4A6566 
 13773      66536E79 
 13773      6465725C 
 13774 07cd 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 13774      355F656C 
 13774      65637472 
 13774      6F737465 
 13774      656C5F73 
 13775 07ff 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 13775      5F50534F 
 13775      43335F35 
 13775      5F546865 
 13775      726D6973 
 13776              	.LASF258:
 13777 081d 696E7075 		.ascii	"inputData\000"
 13777      74446174 
 13777      6100
 13778              	.LASF39:
 13779 0827 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 13779      74635F65 
 13779      6570726F 
 13779      6D5F636F 
 13779      6E746578 
 13780              	.LASF11:
 13781 083f 6C6F6E67 		.ascii	"long unsigned int\000"
 13781      20756E73 
 13781      69676E65 
 13781      6420696E 
 13781      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 288


 13782              	.LASF148:
 13783 0851 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 13783      4550524F 
 13783      4D5F656D 
 13783      5F456570 
 13783      726F6D53 
 13784              	.LASF273:
 13785 086c 65657072 		.ascii	"eepromReturnValue\000"
 13785      6F6D5265 
 13785      7475726E 
 13785      56616C75 
 13785      6500
 13786              	.LASF151:
 13787 087e 4465636F 		.ascii	"Decoder_1_Enabled\000"
 13787      6465725F 
 13787      315F456E 
 13787      61626C65 
 13787      6400
 13788              	.LASF84:
 13789 0890 74656D70 		.ascii	"tempInt\000"
 13789      496E7400 
 13790              	.LASF83:
 13791 0898 73746174 		.ascii	"status\000"
 13791      757300
 13792              	.LASF277:
 13793 089f 73656E64 		.ascii	"send_it\000"
 13793      5F697400 
 13794              	.LASF231:
 13795 08a7 6D696469 		.ascii	"midiOverflow\000"
 13795      4F766572 
 13795      666C6F77 
 13795      00
 13796              	.LASF118:
 13797 08b4 6368616E 		.ascii	"channel\000"
 13797      6E656C00 
 13798              	.LASF267:
 13799 08bc 75376269 		.ascii	"u7bit_volumePedal\000"
 13799      745F766F 
 13799      6C756D65 
 13799      50656461 
 13799      6C00
 13800              	.LASF99:
 13801 08ce 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 13801      4D617374 
 13801      65725772 
 13801      69746542 
 13801      6C6F636B 
 13802              	.LASF175:
 13803 08e6 616E676C 		.ascii	"angle\000"
 13803      6500
 13804              	.LASF217:
 13805 08ec 6E756D53 		.ascii	"numStrings\000"
 13805      7472696E 
 13805      677300
 13806              	.LASF305:
 13807 08f7 6261724D 		.ascii	"barMidiOuterStrings\000"
 13807      6964694F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 289


 13807      75746572 
 13807      53747269 
 13807      6E677300 
 13808              	.LASF44:
 13809 090b 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 13809      4D5F4545 
 13809      50524F4D 
 13809      5F575249 
 13809      54455F46 
 13810              	.LASF63:
 13811 0923 6F737461 		.ascii	"ostart\000"
 13811      727400
 13812              	.LASF163:
 13813 092a 63757272 		.ascii	"currentPresetSelection\000"
 13813      656E7450 
 13813      72657365 
 13813      7453656C 
 13813      65637469 
 13814              	.LASF310:
 13815 0941 6F70656E 		.ascii	"openStringMIDI_Int\000"
 13815      53747269 
 13815      6E674D49 
 13815      44495F49 
 13815      6E7400
 13816              	.LASF62:
 13817 0954 6973746F 		.ascii	"istop\000"
 13817      7000
 13818              	.LASF76:
 13819 095a 70656461 		.ascii	"pedal_inverted_byte\000"
 13819      6C5F696E 
 13819      76657274 
 13819      65645F62 
 13819      79746500 
 13820              	.LASF144:
 13821 096e 5553425F 		.ascii	"USB_midiInBuffer\000"
 13821      6D696469 
 13821      496E4275 
 13821      66666572 
 13821      00
 13822              	.LASF320:
 13823 097f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 13823      43313120 
 13823      352E342E 
 13823      31203230 
 13823      31363036 
 13824 09b2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 13824      20726576 
 13824      6973696F 
 13824      6E203233 
 13824      37373135 
 13825 09e5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 13825      66756E63 
 13825      74696F6E 
 13825      2D736563 
 13825      74696F6E 
 13826              	.LASF116:
 13827 0a0d 73656E64 		.ascii	"sendMIDINoteOn\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 290


 13827      4D494449 
 13827      4E6F7465 
 13827      4F6E00
 13828              	.LASF296:
 13829 0a1c 6D61696E 		.ascii	"main_counter\000"
 13829      5F636F75 
 13829      6E746572 
 13829      00
 13830              	.LASF47:
 13831 0a29 46697273 		.ascii	"FirstLine\000"
 13831      744C696E 
 13831      6500
 13832              	.LASF180:
 13833 0a33 6475616C 		.ascii	"dualSlider\000"
 13833      536C6964 
 13833      657200
 13834              	.LASF70:
 13835 0a3e 72657374 		.ascii	"restartSystemCheck\000"
 13835      61727453 
 13835      79737465 
 13835      6D436865 
 13835      636B00
 13836              	.LASF222:
 13837 0a51 5553425F 		.ascii	"USB_check_flag\000"
 13837      63686563 
 13837      6B5F666C 
 13837      616700
 13838              	.LASF203:
 13839 0a60 6D657373 		.ascii	"messageArraySendCount\000"
 13839      61676541 
 13839      72726179 
 13839      53656E64 
 13839      436F756E 
 13840              	.LASF10:
 13841 0a76 5F5F7569 		.ascii	"__uint32_t\000"
 13841      6E743332 
 13841      5F7400
 13842              	.LASF12:
 13843 0a81 6C6F6E67 		.ascii	"long long int\000"
 13843      206C6F6E 
 13843      6720696E 
 13843      7400
 13844              	.LASF182:
 13845 0a8f 73747269 		.ascii	"stringRepresentation\000"
 13845      6E675265 
 13845      70726573 
 13845      656E7461 
 13845      74696F6E 
 13846              	.LASF235:
 13847 0aa4 72783154 		.ascii	"rx1TD\000"
 13847      4400
 13848              	.LASF82:
 13849 0aaa 74656D70 		.ascii	"tempIntLow\000"
 13849      496E744C 
 13849      6F7700
 13850              	.LASF128:
 13851 0ab5 73746F70 		.ascii	"stoppingPoint\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 291


 13851      70696E67 
 13851      506F696E 
 13851      7400
 13852              	.LASF37:
 13853 0ac3 626C6F63 		.ascii	"blockingWrite\000"
 13853      6B696E67 
 13853      57726974 
 13853      6500
 13854              	.LASF239:
 13855 0ad1 72783343 		.ascii	"rx3Channel\000"
 13855      68616E6E 
 13855      656C00
 13856              	.LASF25:
 13857 0adc 646F7562 		.ascii	"double\000"
 13857      6C6500
 13858              	.LASF321:
 13859 0ae3 6D61696E 		.ascii	"main.c\000"
 13859      2E6300
 13860              	.LASF313:
 13861 0aea 70726576 		.ascii	"prevNotes\000"
 13861      4E6F7465 
 13861      7300
 13862              	.LASF109:
 13863 0af4 6C6F6732 		.ascii	"log2f_approx\000"
 13863      665F6170 
 13863      70726F78 
 13863      00
 13864              	.LASF184:
 13865 0b01 6D696469 		.ascii	"midiSendOn\000"
 13865      53656E64 
 13865      4F6E00
 13866              	.LASF197:
 13867 0b0c 73696E67 		.ascii	"singleParamValueHigh\000"
 13867      6C655061 
 13867      72616D56 
 13867      616C7565 
 13867      48696768 
 13868              	.LASF150:
 13869 0b21 49544D5F 		.ascii	"ITM_RxBuffer\000"
 13869      52784275 
 13869      66666572 
 13869      00
 13870              	.LASF196:
 13871 0b2e 73696E67 		.ascii	"singleParamToUpdateLow\000"
 13871      6C655061 
 13871      72616D54 
 13871      6F557064 
 13871      6174654C 
 13872              	.LASF64:
 13873 0b45 6F73746F 		.ascii	"ostop\000"
 13873      7000
 13874              	.LASF104:
 13875 0b4b 74696D65 		.ascii	"timeout\000"
 13875      6F757400 
 13876              	.LASF24:
 13877 0b53 666C6F61 		.ascii	"float\000"
 13877      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 292


 13878              	.LASF284:
 13879 0b59 70726576 		.ascii	"prev_processed_pedals\000"
 13879      5F70726F 
 13879      63657373 
 13879      65645F70 
 13879      6564616C 
 13880              	.LASF269:
 13881 0b6f 53504932 		.ascii	"SPI2started\000"
 13881      73746172 
 13881      74656400 
 13882              	.LASF254:
 13883 0b7b 63757272 		.ascii	"currentPluckBuffer\000"
 13883      656E7450 
 13883      6C75636B 
 13883      42756666 
 13883      657200
 13884              	.LASF89:
 13885 0b8e 6261724D 		.ascii	"barMIDI\000"
 13885      49444900 
 13886              	.LASF124:
 13887 0b96 73656E64 		.ascii	"sendMIDIPitchBend\000"
 13887      4D494449 
 13887      50697463 
 13887      6842656E 
 13887      6400
 13888              	.LASF14:
 13889 0ba8 756E7369 		.ascii	"unsigned int\000"
 13889      676E6564 
 13889      20696E74 
 13889      00
 13890              	.LASF301:
 13891 0bb5 70656461 		.ascii	"pedal_cc_assignments\000"
 13891      6C5F6363 
 13891      5F617373 
 13891      69676E6D 
 13891      656E7473 
 13892              	.LASF188:
 13893 0bca 72656365 		.ascii	"receivingSysex\000"
 13893      6976696E 
 13893      67537973 
 13893      657800
 13894              	.LASF139:
 13895 0bd9 6361626C 		.ascii	"cable\000"
 13895      6500
 13896              	.LASF266:
 13897 0bdf 70726576 		.ascii	"prevKnobs7bit\000"
 13897      4B6E6F62 
 13897      73376269 
 13897      7400
 13898              	.LASF181:
 13899 0bed 64656164 		.ascii	"deadZone\000"
 13899      5A6F6E65 
 13899      00
 13900              	.LASF71:
 13901 0bf6 56627573 		.ascii	"Vbus_function\000"
 13901      5F66756E 
 13901      6374696F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 293


 13901      6E00
 13902              	.LASF287:
 13903 0c04 70726576 		.ascii	"prevPedals7bit\000"
 13903      50656461 
 13903      6C733762 
 13903      697400
 13904              	.LASF112:
 13905 0c13 76656C6F 		.ascii	"velocity\000"
 13905      63697479 
 13905      00
 13906              	.LASF314:
 13907 0c1c 63686563 		.ascii	"checkStatus\000"
 13907      6B537461 
 13907      74757300 
 13908              	.LASF27:
 13909 0c28 63797374 		.ascii	"cystatus\000"
 13909      61747573 
 13909      00
 13910              	.LASF265:
 13911 0c31 6B6E6F62 		.ascii	"knobs7bit\000"
 13911      73376269 
 13911      7400
 13912              	.LASF69:
 13913 0c3b 63616C63 		.ascii	"calculateStringRepDivider\000"
 13913      756C6174 
 13913      65537472 
 13913      696E6752 
 13913      65704469 
 13914              	.LASF111:
 13915 0c55 73747269 		.ascii	"string\000"
 13915      6E6700
 13916              	.LASF261:
 13917 0c5c 6F666673 		.ascii	"offsetErrorCount\000"
 13917      65744572 
 13917      726F7243 
 13917      6F756E74 
 13917      00
 13918              	.LASF289:
 13919 0c6d 70726F63 		.ascii	"processed_volumePedal\000"
 13919      65737365 
 13919      645F766F 
 13919      6C756D65 
 13919      50656461 
 13920              	.LASF172:
 13921 0c83 70656461 		.ascii	"pedals_low\000"
 13921      6C735F6C 
 13921      6F7700
 13922              	.LASF242:
 13923 0c8e 72784275 		.ascii	"rxBufferBar\000"
 13923      66666572 
 13923      42617200 
 13924              	.LASF237:
 13925 0c9a 74784368 		.ascii	"txChannel\000"
 13925      616E6E65 
 13925      6C00
 13926              	.LASF283:
 13927 0ca4 70726F63 		.ascii	"processed_pedals\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 294


 13927      65737365 
 13927      645F7065 
 13927      64616C73 
 13927      00
 13928              	.LASF302:
 13929 0cb5 6F70656E 		.ascii	"openStringFrequencies\000"
 13929      53747269 
 13929      6E674672 
 13929      65717565 
 13929      6E636965 
 13930              	.LASF227:
 13931 0ccb 70726576 		.ascii	"prevAngle\000"
 13931      416E676C 
 13931      6500
 13932              	.LASF250:
 13933 0cd5 706C7563 		.ascii	"pluck_index\000"
 13933      6B5F696E 
 13933      64657800 
 13934              	.LASF29:
 13935 0ce1 6C6F6E67 		.ascii	"long double\000"
 13935      20646F75 
 13935      626C6500 
 13936              	.LASF105:
 13937 0ced 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 13937      4D617374 
 13937      65725265 
 13937      6164426C 
 13937      6F636B69 
 13938              	.LASF255:
 13939 0d04 63757272 		.ascii	"currentBarBuffer\000"
 13939      656E7442 
 13939      61724275 
 13939      66666572 
 13939      00
 13940              	.LASF228:
 13941 0d15 4144435F 		.ascii	"ADC_values\000"
 13941      76616C75 
 13941      657300
 13942              	.LASF257:
 13943 0d20 53504931 		.ascii	"SPI1ErrorCount\000"
 13943      4572726F 
 13943      72436F75 
 13943      6E7400
 13944              	.LASF230:
 13945 0d2f 6D696469 		.ascii	"midiSent\000"
 13945      53656E74 
 13945      00
 13946              	.LASF140:
 13947 0d38 6D696469 		.ascii	"midiMsg\000"
 13947      4D736700 
 13948              	.LASF0:
 13949 0d40 5F5F696E 		.ascii	"__int8_t\000"
 13949      74385F74 
 13949      00
 13950              	.LASF154:
 13951 0d49 63757272 		.ascii	"currentNeck\000"
 13951      656E744E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 295


 13951      65636B00 
 13952              	.LASF160:
 13953 0d55 65646974 		.ascii	"editMode\000"
 13953      4D6F6465 
 13953      00
 13954              	.LASF13:
 13955 0d5e 6C6F6E67 		.ascii	"long long unsigned int\000"
 13955      206C6F6E 
 13955      6720756E 
 13955      7369676E 
 13955      65642069 
 13956              	.LASF18:
 13957 0d75 75696E74 		.ascii	"uint16_t\000"
 13957      31365F74 
 13957      00
 13958              	.LASF135:
 13959 0d7e 74656D70 		.ascii	"tempHigh\000"
 13959      48696768 
 13959      00
 13960              	.LASF216:
 13961 0d87 74657374 		.ascii	"testVal\000"
 13961      56616C00 
 13962              	.LASF87:
 13963 0d8f 70656461 		.ascii	"pedalsMIDI\000"
 13963      6C734D49 
 13963      444900
 13964              	.LASF236:
 13965 0d9a 72783254 		.ascii	"rx2TD\000"
 13965      4400
 13966              	.LASF201:
 13967 0da0 636F6E74 		.ascii	"controlSmoothing\000"
 13967      726F6C53 
 13967      6D6F6F74 
 13967      68696E67 
 13967      00
 13968              	.LASF323:
 13969 0db1 62726561 		.ascii	"breakFloat\000"
 13969      6B466C6F 
 13969      617400
 13970              	.LASF315:
 13971 0dbc 63686563 		.ascii	"checkBase\000"
 13971      6B426173 
 13971      6500
 13972              	.LASF72:
 13973 0dc6 73706973 		.ascii	"spis_2_ss\000"
 13973      5F325F73 
 13973      7300
 13974              	.LASF199:
 13975 0dd0 73656E64 		.ascii	"sendMappingChangeUpdate\000"
 13975      4D617070 
 13975      696E6743 
 13975      68616E67 
 13975      65557064 
 13976              	.LASF247:
 13977 0de8 616D4865 		.ascii	"amHere\000"
 13977      726500
 13978              	.LASF272:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 296


 13979 0def 61727261 		.ascii	"array\000"
 13979      7900
 13980              	.LASF93:
 13981 0df5 7363616C 		.ascii	"scaledMIDI\000"
 13981      65644D49 
 13981      444900
 13982              	.LASF28:
 13983 0e00 72656738 		.ascii	"reg8\000"
 13983      00
 13984              	.LASF192:
 13985 0e05 636F7065 		.ascii	"copedentNumberToWrite\000"
 13985      64656E74 
 13985      4E756D62 
 13985      6572546F 
 13985      57726974 
 13986              	.LASF57:
 13987 0e1b 6D617043 		.ascii	"mapCountNext\000"
 13987      6F756E74 
 13987      4E657874 
 13987      00
 13988              	.LASF252:
 13989 0e28 73706943 		.ascii	"spiCounter2\000"
 13989      6F756E74 
 13989      65723200 
 13990              	.LASF113:
 13991 0e34 74656D70 		.ascii	"tempVel\000"
 13991      56656C00 
 13992              	.LASF218:
 13993 0e3c 75736241 		.ascii	"usbActivityCounter\000"
 13993      63746976 
 13993      69747943 
 13993      6F756E74 
 13993      657200
 13994              	.LASF176:
 13995 0e4f 7472616E 		.ascii	"transposeSemitones\000"
 13995      73706F73 
 13995      6553656D 
 13995      69746F6E 
 13995      657300
 13996              	.LASF214:
 13997 0e62 70617273 		.ascii	"parseThatMF\000"
 13997      65546861 
 13997      744D4600 
 13998              	.LASF4:
 13999 0e6e 5F5F696E 		.ascii	"__int16_t\000"
 13999      7431365F 
 13999      7400
 14000              	.LASF56:
 14001 0e78 696E6974 		.ascii	"initialVals\000"
 14001      69616C56 
 14001      616C7300 
 14002              	.LASF221:
 14003 0e84 5553425F 		.ascii	"USB_active\000"
 14003      61637469 
 14003      766500
 14004              	.LASF169:
 14005 0e8f 66726574 		.ascii	"fretCalibrationMode\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 297


 14005      43616C69 
 14005      62726174 
 14005      696F6E4D 
 14005      6F646500 
 14006              	.LASF194:
 14007 0ea3 73656E64 		.ascii	"sendSingleParamUpdate\000"
 14007      53696E67 
 14007      6C655061 
 14007      72616D55 
 14007      70646174 
 14008              	.LASF186:
 14009 0eb9 73797365 		.ascii	"sysexBuffer\000"
 14009      78427566 
 14009      66657200 
 14010              	.LASF206:
 14011 0ec5 62756643 		.ascii	"bufCount\000"
 14011      6F756E74 
 14011      00
 14012              	.LASF256:
 14013 0ece 706C7563 		.ascii	"pluckErrorCount\000"
 14013      6B457272 
 14013      6F72436F 
 14013      756E7400 
 14014              	.LASF131:
 14015 0ede 74656D70 		.ascii	"tempChar\000"
 14015      43686172 
 14015      00
 14016              	.LASF312:
 14017 0ee7 73747269 		.ascii	"stringRepDivider\000"
 14017      6E675265 
 14017      70446976 
 14017      69646572 
 14017      00
 14018              	.LASF162:
 14019 0ef8 70617463 		.ascii	"patchNum\000"
 14019      684E756D 
 14019      00
 14020              	.LASF86:
 14021 0f01 6D794D61 		.ascii	"myMappedPos\000"
 14021      70706564 
 14021      506F7300 
 14022              	.LASF311:
 14023 0f0d 70656461 		.ascii	"pedals_float\000"
 14023      6C735F66 
 14023      6C6F6174 
 14023      00
 14024              	.LASF280:
 14025 0f1a 70656461 		.ascii	"pedals_lowWithDeadZone\000"
 14025      6C735F6C 
 14025      6F775769 
 14025      74684465 
 14025      61645A6F 
 14026              	.LASF270:
 14027 0f31 6D616372 		.ascii	"macroKnobValues7bit\000"
 14027      6F4B6E6F 
 14027      6256616C 
 14027      75657337 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 298


 14027      62697400 
 14028              	.LASF21:
 14029 0f45 75696E74 		.ascii	"uint8\000"
 14029      3800
 14030              	.LASF67:
 14031 0f4b 64656164 		.ascii	"deadZoneFloat\000"
 14031      5A6F6E65 
 14031      466C6F61 
 14031      7400
 14032              	.LASF91:
 14033 0f59 70697463 		.ascii	"pitchBendAmount\000"
 14033      6842656E 
 14033      64416D6F 
 14033      756E7400 
 14034              	.LASF179:
 14035 0f69 70726576 		.ascii	"prevOctave\000"
 14035      4F637461 
 14035      766500
 14036              	.LASF5:
 14037 0f74 73686F72 		.ascii	"short int\000"
 14037      7420696E 
 14037      7400
 14038              	.LASF204:
 14039 0f7e 6D657373 		.ascii	"messageArraySize\000"
 14039      61676541 
 14039      72726179 
 14039      53697A65 
 14039      00
 14040              	.LASF171:
 14041 0f8f 66726574 		.ascii	"fretMeasurements\000"
 14041      4D656173 
 14041      7572656D 
 14041      656E7473 
 14041      00
 14042              	.LASF102:
 14043 0fa0 6D6F6465 		.ascii	"mode\000"
 14043      00
 14044              	.LASF96:
 14045 0fa5 62756666 		.ascii	"bufferPointer\000"
 14045      6572506F 
 14045      696E7465 
 14045      7200
 14046              	.LASF158:
 14047 0fb3 6E65636B 		.ascii	"neckByte\000"
 14047      42797465 
 14047      00
 14048              	.LASF309:
 14049 0fbc 73747269 		.ascii	"stringMIDI\000"
 14049      6E674D49 
 14049      444900
 14050              	.LASF88:
 14051 0fc7 6F70656E 		.ascii	"openStringMIDI\000"
 14051      53747269 
 14051      6E674D49 
 14051      444900
 14052              	.LASF17:
 14053 0fd6 696E7431 		.ascii	"int16_t\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 299


 14053      365F7400 
 14054              	.LASF132:
 14055 0fde 70656461 		.ascii	"pedalToWrite\000"
 14055      6C546F57 
 14055      72697465 
 14055      00
 14056              	.LASF34:
 14057 0feb 65657072 		.ascii	"eepromSize\000"
 14057      6F6D5369 
 14057      7A6500
 14058              	.LASF251:
 14059 0ff6 616D4865 		.ascii	"amHere2\000"
 14059      72653200 
 14060              	.LASF308:
 14061 0ffe 73747269 		.ascii	"stringPitch\000"
 14061      6E675069 
 14061      74636800 
 14062              	.LASF35:
 14063 100a 77656172 		.ascii	"wearLevelingFactor\000"
 14063      4C657665 
 14063      6C696E67 
 14063      46616374 
 14063      6F7200
 14064              	.LASF142:
 14065 101d 5553425F 		.ascii	"USB_midiInPointer\000"
 14065      6D696469 
 14065      496E506F 
 14065      696E7465 
 14065      7200
 14066              	.LASF317:
 14067 102f 74656D70 		.ascii	"tempMIDI\000"
 14067      4D494449 
 14067      00
 14068              	.LASF100:
 14069 1038 69324341 		.ascii	"i2CAddr\000"
 14069      64647200 
 14070              	.LASF224:
 14071 1040 696E4275 		.ascii	"inBuffer\000"
 14071      66666572 
 14071      00
 14072              	.LASF246:
 14073 1049 6D617853 		.ascii	"maxStrings\000"
 14073      7472696E 
 14073      677300
 14074              	.LASF78:
 14075 1054 6C657474 		.ascii	"letter\000"
 14075      657200
 14076              	.LASF146:
 14077 105b 5553425F 		.ascii	"USB_midiOutBuffer\000"
 14077      6D696469 
 14077      4F757442 
 14077      75666665 
 14077      7200
 14078              	.LASF232:
 14079 106d 6D616372 		.ascii	"macroKnobValues\000"
 14079      6F4B6E6F 
 14079      6256616C 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 300


 14079      75657300 
 14080              	.LASF279:
 14081 107d 6932635F 		.ascii	"i2c_skipped\000"
 14081      736B6970 
 14081      70656400 
 14082              	.LASF286:
 14083 1089 70656461 		.ascii	"pedals7bit\000"
 14083      6C733762 
 14083      697400
 14084              	.LASF268:
 14085 1094 70726576 		.ascii	"prev_7bit_volumePedal\000"
 14085      5F376269 
 14085      745F766F 
 14085      6C756D65 
 14085      50656461 
 14086              	.LASF223:
 14087 10aa 6D617070 		.ascii	"mappingArray\000"
 14087      696E6741 
 14087      72726179 
 14087      00
 14088              	.LASF259:
 14089 10b7 73706941 		.ascii	"spiAdjusted\000"
 14089      646A7573 
 14089      74656400 
 14090              	.LASF234:
 14091 10c3 72783243 		.ascii	"rx2Channel\000"
 14091      68616E6E 
 14091      656C00
 14092              	.LASF170:
 14093 10ce 6C657665 		.ascii	"leverCalibrationMode\000"
 14093      7243616C 
 14093      69627261 
 14093      74696F6E 
 14093      4D6F6465 
 14094              	.LASF143:
 14095 10e3 5553425F 		.ascii	"USB_midi_in_ep\000"
 14095      6D696469 
 14095      5F696E5F 
 14095      657000
 14096              	.LASF98:
 14097 10f2 446D6152 		.ascii	"DmaRxConfiguration\000"
 14097      78436F6E 
 14097      66696775 
 14097      72617469 
 14097      6F6E00
 14098              	.LASF20:
 14099 1105 75696E74 		.ascii	"uint32_t\000"
 14099      33325F74 
 14099      00
 14100              	.LASF183:
 14101 110e 6F637461 		.ascii	"octaveAction\000"
 14101      76654163 
 14101      74696F6E 
 14101      00
 14102              	.LASF220:
 14103 111b 70726576 		.ascii	"prevVBUS\000"
 14103      56425553 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 301


 14103      00
 14104              	.LASF240:
 14105 1124 72783354 		.ascii	"rx3TD\000"
 14105      4400
 14106              	.LASF73:
 14107 112a 63616C63 		.ascii	"calculatePedalRatios\000"
 14107      756C6174 
 14107      65506564 
 14107      616C5261 
 14107      74696F73 
 14108              	.LASF7:
 14109 113f 73686F72 		.ascii	"short unsigned int\000"
 14109      7420756E 
 14109      7369676E 
 14109      65642069 
 14109      6E7400
 14110              	.LASF200:
 14111 1152 70697463 		.ascii	"pitchSmoothing\000"
 14111      68536D6F 
 14111      6F746869 
 14111      6E6700
 14112              	.LASF58:
 14113 1161 6D617070 		.ascii	"mapping\000"
 14113      696E6700 
 14114              	.LASF114:
 14115 1169 6E6F7465 		.ascii	"noteToSend\000"
 14115      546F5365 
 14115      6E6400
 14116              	.LASF238:
 14117 1174 74785444 		.ascii	"txTD\000"
 14117      00
 14118              	.LASF8:
 14119 1179 5F5F696E 		.ascii	"__int32_t\000"
 14119      7433325F 
 14119      7400
 14120              	.LASF245:
 14121 1183 70726576 		.ascii	"prevBar\000"
 14121      42617200 
 14122              	.LASF300:
 14123 118b 70656461 		.ascii	"pedals\000"
 14123      6C7300
 14124              	.LASF293:
 14125 1192 66726574 		.ascii	"fretScalingInRatios\000"
 14125      5363616C 
 14125      696E6749 
 14125      6E526174 
 14125      696F7300 
 14126              	.LASF81:
 14127 11a6 74656D70 		.ascii	"tempIntHigh\000"
 14127      496E7448 
 14127      69676800 
 14128              	.LASF33:
 14129 11b2 6C617374 		.ascii	"lastWrRowAddr\000"
 14129      5772526F 
 14129      77416464 
 14129      7200
 14130              	.LASF178:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc63yVLm.s 			page 302


 14131 11c0 7472616E 		.ascii	"transposeFloat\000"
 14131      73706F73 
 14131      65466C6F 
 14131      617400
 14132              	.LASF306:
 14133 11cf 73747269 		.ascii	"stringFrequencies\000"
 14133      6E674672 
 14133      65717565 
 14133      6E636965 
 14133      7300
 14134              	.LASF22:
 14135 11e1 75696E74 		.ascii	"uint16\000"
 14135      313600
 14136              	.LASF65:
 14137 11e8 6D617044 		.ascii	"mapDualSlider\000"
 14137      75616C53 
 14137      6C696465 
 14137      7200
 14138              	.LASF225:
 14139 11f6 6D794172 		.ascii	"myArray\000"
 14139      72617900 
 14140              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
