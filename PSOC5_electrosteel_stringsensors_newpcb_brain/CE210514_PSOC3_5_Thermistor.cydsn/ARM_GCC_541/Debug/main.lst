ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sysexBuffer,2048,4
  20              		.global	sysexPointer
  21              		.bss
  22              		.align	2
  23              		.type	sysexPointer, %object
  24              		.size	sysexPointer, 4
  25              	sysexPointer:
  26 0000 00000000 		.space	4
  27              		.global	receivingSysex
  28              		.type	receivingSysex, %object
  29              		.size	receivingSysex, 1
  30              	receivingSysex:
  31 0004 00       		.space	1
  32              		.global	parsingSysex
  33              		.type	parsingSysex, %object
  34              		.size	parsingSysex, 1
  35              	parsingSysex:
  36 0005 00       		.space	1
  37              		.comm	presetArray,2048,4
  38              		.global	presetNumberToWrite
  39              		.type	presetNumberToWrite, %object
  40              		.size	presetNumberToWrite, 1
  41              	presetNumberToWrite:
  42 0006 00       		.space	1
  43              		.global	copedentNumberToWrite
  44              		.type	copedentNumberToWrite, %object
  45              		.size	copedentNumberToWrite, 1
  46              	copedentNumberToWrite:
  47 0007 00       		.space	1
  48              		.global	sendMessageEnd
  49              		.type	sendMessageEnd, %object
  50              		.size	sendMessageEnd, 1
  51              	sendMessageEnd:
  52 0008 00       		.space	1
  53              		.global	presetArraySection
  54              		.type	presetArraySection, %object
  55              		.size	presetArraySection, 1
  56              	presetArraySection:
  57 0009 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 2


  58              		.global	messageArraySendCount
  59              		.align	1
  60              		.type	messageArraySendCount, %object
  61              		.size	messageArraySendCount, 2
  62              	messageArraySendCount:
  63 000a 0000     		.space	2
  64              		.global	messageArraySize
  65              		.align	1
  66              		.type	messageArraySize, %object
  67              		.size	messageArraySize, 2
  68              	messageArraySize:
  69 000c 0000     		.space	2
  70              		.global	sysexMessageInProgress
  71              		.type	sysexMessageInProgress, %object
  72              		.size	sysexMessageInProgress, 1
  73              	sysexMessageInProgress:
  74 000e 00       		.space	1
  75              		.global	bufCount
  76              		.type	bufCount, %object
  77              		.size	bufCount, 1
  78              	bufCount:
  79 000f 00       		.space	1
  80              		.global	sendingMessage
  81              		.type	sendingMessage, %object
  82              		.size	sendingMessage, 1
  83              	sendingMessage:
  84 0010 00       		.space	1
  85              		.global	sendKnobs
  86              		.type	sendKnobs, %object
  87              		.size	sendKnobs, 1
  88              	sendKnobs:
  89 0011 00       		.space	1
  90              		.global	currentFloat
  91 0012 0000     		.align	2
  92              		.type	currentFloat, %object
  93              		.size	currentFloat, 4
  94              	currentFloat:
  95 0014 00000000 		.space	4
  96              		.global	mapCount
  97              		.align	2
  98              		.type	mapCount, %object
  99              		.size	mapCount, 4
 100              	mapCount:
 101 0018 00000000 		.space	4
 102              		.global	valsCount
 103              		.align	1
 104              		.type	valsCount, %object
 105              		.size	valsCount, 2
 106              	valsCount:
 107 001c 0000     		.space	2
 108              		.global	mapCountExpectation
 109              		.align	1
 110              		.type	mapCountExpectation, %object
 111              		.size	mapCountExpectation, 2
 112              	mapCountExpectation:
 113 001e 0000     		.space	2
 114              		.global	numMappings
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 3


 115              		.align	1
 116              		.type	numMappings, %object
 117              		.size	numMappings, 2
 118              	numMappings:
 119 0020 0000     		.space	2
 120              		.global	parseThatMF
 121              		.type	parseThatMF, %object
 122              		.size	parseThatMF, 1
 123              	parseThatMF:
 124 0022 00       		.space	1
 125              		.global	valCheck
 126 0023 00       		.align	2
 127              		.type	valCheck, %object
 128              		.size	valCheck, 4
 129              	valCheck:
 130 0024 00000000 		.space	4
 131              		.global	testVal
 132              		.align	2
 133              		.type	testVal, %object
 134              		.size	testVal, 4
 135              	testVal:
 136 0028 00000000 		.space	4
 137              		.global	numStrings
 138              		.data
 139              		.align	2
 140              		.type	numStrings, %object
 141              		.size	numStrings, 4
 142              	numStrings:
 143 0000 0A000000 		.word	10
 144              		.global	usbActivityCounter
 145              		.bss
 146              		.type	usbActivityCounter, %object
 147              		.size	usbActivityCounter, 1
 148              	usbActivityCounter:
 149 002c 00       		.space	1
 150              		.comm	midiMsg,4,4
 151              		.global	currentVBUS
 152              		.type	currentVBUS, %object
 153              		.size	currentVBUS, 1
 154              	currentVBUS:
 155 002d 00       		.space	1
 156              		.global	prevVBUS
 157              		.type	prevVBUS, %object
 158              		.size	prevVBUS, 1
 159              	prevVBUS:
 160 002e 00       		.space	1
 161              		.global	USB_active
 162              		.type	USB_active, %object
 163              		.size	USB_active, 1
 164              	USB_active:
 165 002f 00       		.space	1
 166              		.global	USB_check_flag
 167              		.type	USB_check_flag, %object
 168              		.size	USB_check_flag, 1
 169              	USB_check_flag:
 170 0030 00       		.space	1
 171              		.comm	inBuffer,32,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 4


 172              		.comm	myArray,32,4
 173              		.comm	myInputArray,2,4
 174              		.comm	linearPotValue32Bit,8,4
 175              		.global	i
 176              		.type	i, %object
 177              		.size	i, 1
 178              	i:
 179 0031 00       		.space	1
 180              		.global	counter
 181              		.type	counter, %object
 182              		.size	counter, 1
 183              	counter:
 184 0032 00       		.space	1
 185              		.comm	returnedData,32,4
 186              		.comm	temper,4,4
 187              		.comm	previousButtons,44,4
 188              		.global	octave
 189              		.data
 190              		.align	2
 191              		.type	octave, %object
 192              		.size	octave, 4
 193              	octave:
 194 0004 05000000 		.word	5
 195              		.comm	angle,20,4
 196              		.comm	prevAngle,20,4
 197              		.comm	ADC_values,8,4
 198              		.global	rawAngle
 199              		.bss
 200 0033 00       		.align	1
 201              		.type	rawAngle, %object
 202              		.size	rawAngle, 2
 203              	rawAngle:
 204 0034 0000     		.space	2
 205              		.global	midiSent
 206              		.align	1
 207              		.type	midiSent, %object
 208              		.size	midiSent, 2
 209              	midiSent:
 210 0036 0000     		.space	2
 211              		.global	midiOverflow
 212              		.align	1
 213              		.type	midiOverflow, %object
 214              		.size	midiOverflow, 2
 215              	midiOverflow:
 216 0038 0000     		.space	2
 217              		.comm	macroKnobValues,8,4
 218              		.global	currentCopedent
 219              		.type	currentCopedent, %object
 220              		.size	currentCopedent, 1
 221              	currentCopedent:
 222 003a 00       		.space	1
 223              		.global	necks
 224              		.data
 225              		.align	2
 226              		.type	necks, %object
 227              		.size	necks, 2
 228              	necks:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 5


 229 0008 00       		.byte	0
 230 0009 01       		.byte	1
 231              		.comm	rx1Channel,1,1
 232              		.comm	rx2Channel,1,32
 233              		.comm	rx1TD,2,4
 234              		.comm	rx2TD,2,32
 235              		.comm	txChannel,1,32
 236              		.comm	txTD,1,32
 237              		.comm	rx3Channel,1,32
 238              		.comm	rx3TD,1,32
 239              		.comm	rxBufferPluck,52,32
 240              		.comm	rxBufferBar,16,32
 241              		.comm	strings,24,4
 242              		.comm	prevStrings,24,4
 243              		.comm	bar,4,4
 244              		.comm	prevBar,4,4
 245              		.comm	maxStrings,24,4
 246              		.global	amHere
 247              		.bss
 248              		.type	amHere, %object
 249              		.size	amHere, 1
 250              	amHere:
 251 003b 00       		.space	1
 252              		.global	spiCounter
 253              		.type	spiCounter, %object
 254              		.size	spiCounter, 1
 255              	spiCounter:
 256 003c 00       		.space	1
 257              		.global	newDataFlag
 258              		.type	newDataFlag, %object
 259              		.size	newDataFlag, 1
 260              	newDataFlag:
 261 003d 00       		.space	1
 262              		.global	prevOctave
 263 003e 0000     		.align	2
 264              		.type	prevOctave, %object
 265              		.size	prevOctave, 4
 266              	prevOctave:
 267 0040 00000000 		.space	4
 268              		.global	pluck_index
 269              		.type	pluck_index, %object
 270              		.size	pluck_index, 1
 271              	pluck_index:
 272 0044 00       		.space	1
 273              		.global	amHere2
 274              		.type	amHere2, %object
 275              		.size	amHere2, 1
 276              	amHere2:
 277 0045 00       		.space	1
 278              		.global	spiCounter2
 279              		.type	spiCounter2, %object
 280              		.size	spiCounter2, 1
 281              	spiCounter2:
 282 0046 00       		.space	1
 283              		.global	newDataFlag2
 284              		.type	newDataFlag2, %object
 285              		.size	newDataFlag2, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 6


 286              	newDataFlag2:
 287 0047 00       		.space	1
 288              		.global	currentPluckBuffer
 289              		.type	currentPluckBuffer, %object
 290              		.size	currentPluckBuffer, 1
 291              	currentPluckBuffer:
 292 0048 00       		.space	1
 293              		.global	currentBarBuffer
 294              		.type	currentBarBuffer, %object
 295              		.size	currentBarBuffer, 1
 296              	currentBarBuffer:
 297 0049 00       		.space	1
 298              		.global	pluckErrorCount
 299              		.type	pluckErrorCount, %object
 300              		.size	pluckErrorCount, 1
 301              	pluckErrorCount:
 302 004a 00       		.space	1
 303              		.global	SPI1ErrorCount
 304 004b 00       		.align	1
 305              		.type	SPI1ErrorCount, %object
 306              		.size	SPI1ErrorCount, 2
 307              	SPI1ErrorCount:
 308 004c 0000     		.space	2
 309              		.global	inputData
 310              		.type	inputData, %object
 311              		.size	inputData, 1
 312              	inputData:
 313 004e 00       		.space	1
 314              		.section	.text.spis_1_ss,"ax",%progbits
 315              		.align	2
 316              		.global	spis_1_ss
 317              		.thumb
 318              		.thumb_func
 319              		.type	spis_1_ss, %function
 320              	spis_1_ss:
 321              	.LFB64:
 322              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** #define EEPROM_NECKS_OFFSET 0
  11:main.c        **** #define EEPROM_COPEDENT_OFFSET 2
  12:main.c        **** #define COPEDENT_SIZE_IN_BYTES 278 //including name bytes
  13:main.c        **** #define COPEDENT_SIZE_IN_FLOATS 132 // not including name bytes
  14:main.c        **** #define NAME_LENGTH_IN_BYTES 14
  15:main.c        **** #define EEPROM_CALIBRATION_OFFSET (EEPROM_NECKS_OFFSET + EEPROM_COPEDENT_OFFSET + (MAX_NUM_COPEDENT
  16:main.c        **** #define CALIBRATION_SIZE_IN_BYTES NUM_PEDALS * 4 //for each pedal, store 2 bytes for high and 2 byt
  17:main.c        **** #define MACRO_CLIPPED_LENGTH 8
  18:main.c        **** #define NAME_CLIPPED_LENGTH 11
  19:main.c        **** #define COPEDENT_NAME_CLIPPED_LENGTH 8
  20:main.c        **** #define myBufferSize 32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 7


  21:main.c        **** void parseSysex(void);
  22:main.c        **** 
  23:main.c        **** uint8_t sysexBuffer[2048];
  24:main.c        **** uint32_t sysexPointer = 0;
  25:main.c        **** uint8_t receivingSysex = 0;
  26:main.c        **** uint8_t parsingSysex = 0;
  27:main.c        **** volatile uint8_t presetArray[2048];
  28:main.c        **** uint8_t presetNumberToWrite = 0;
  29:main.c        **** uint8_t copedentNumberToWrite = 0;
  30:main.c        **** uint8_t sendMessageEnd = 0;
  31:main.c        **** enum presetArraySectionState
  32:main.c        **** {
  33:main.c        ****     presetName = 0,
  34:main.c        ****     macroNames = 1,
  35:main.c        ****     initialVals = 2,
  36:main.c        ****     mapCountNext = 3,
  37:main.c        ****     mapping = 4,
  38:main.c        ****     presetEnd = 5,
  39:main.c        **** };
  40:main.c        **** uint8_t presetArraySection = presetName;
  41:main.c        **** 
  42:main.c        **** uint16_t messageArraySendCount = 0;
  43:main.c        **** uint16_t messageArraySize = 0;
  44:main.c        **** 
  45:main.c        **** uint8_t sysexMessageInProgress = 0;
  46:main.c        **** 
  47:main.c        **** uint8_t bufCount = 0;
  48:main.c        **** volatile uint8_t sendingMessage = 0;
  49:main.c        **** volatile uint8_t sendKnobs = 0;
  50:main.c        **** uint32_t currentFloat = 0;
  51:main.c        **** uint32_t mapCount = 0;
  52:main.c        **** 
  53:main.c        **** uint16_t valsCount = 0;
  54:main.c        **** uint16_t mapCountExpectation = 0;
  55:main.c        **** uint16_t numMappings = 0;
  56:main.c        **** volatile uint8_t parseThatMF = 0;
  57:main.c        **** volatile float valCheck = 0.0f;
  58:main.c        **** volatile float testVal = 0.0f;
  59:main.c        **** 
  60:main.c        **** int numStrings = 10;
  61:main.c        **** /*
  62:main.c        **** #define TUNING_ARRAY_SIZE 258
  63:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  64:main.c        **** */
  65:main.c        **** 
  66:main.c        **** volatile uint8 usbActivityCounter = 0u;
  67:main.c        **** uint8 midiMsg[4];
  68:main.c        **** uint8_t currentVBUS = 0;
  69:main.c        **** uint8_t prevVBUS = 0;
  70:main.c        **** volatile uint8_t USB_active = 0;
  71:main.c        **** volatile uint8_t USB_check_flag = 0;
  72:main.c        **** 
  73:main.c        **** 
  74:main.c        **** uint8 inBuffer[myBufferSize];
  75:main.c        **** 
  76:main.c        **** uint8 myArray[myBufferSize];
  77:main.c        **** uint8 myInputArray[2];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 8


  78:main.c        **** int32_t linearPotValue32Bit[2];
  79:main.c        **** uint8_t i = 0;
  80:main.c        **** uint8_t counter = 0;
  81:main.c        **** uint8_t returnedData[myBufferSize];
  82:main.c        **** int32_t temper;
  83:main.c        **** int previousButtons[11];
  84:main.c        **** int octave = 5;
  85:main.c        **** uint16_t angle[10];
  86:main.c        **** uint16_t prevAngle[10];
  87:main.c        **** 
  88:main.c        **** uint16_t ADC_values[4];
  89:main.c        **** uint16_t rawAngle = 0;
  90:main.c        **** uint16_t midiSent = 0;
  91:main.c        **** uint16_t midiOverflow = 0;
  92:main.c        **** 
  93:main.c        **** uint8_t macroKnobValues[8];
  94:main.c        **** 
  95:main.c        **** uint8_t currentCopedent = 0;
  96:main.c        **** uint8_t necks[2] = {0,1};
  97:main.c        **** 
  98:main.c        **** void checkUSB_Vbus(void);
  99:main.c        **** void sendMIDIAllNotesOff(void);
 100:main.c        **** void sendMIDIPitchBend(int val, int channel);
 101:main.c        **** void firstCheckUSB_Vbus(void);
 102:main.c        **** void restartSystemCheck(void);
 103:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 104:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 105:main.c        **** CY_ISR_PROTO(SleepIsr_function);
 106:main.c        **** void noteEvent(int string);
 107:main.c        **** void I2C_reset(void);
 108:main.c        **** void CCEvent(int cc, int val);
 109:main.c        **** void DmaRxConfiguration(void);
 110:main.c        **** /* DMA Configuration for DMA_RX */
 111:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
 112:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
 113:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
 114:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
 115:main.c        **** 
 116:main.c        **** void DmaTxConfiguration(void);
 117:main.c        **** 
 118:main.c        **** /* DMA Configuration for DMA_TX */
 119:main.c        **** #define DMA_TX_BYTES_PER_BURST      (1u)
 120:main.c        **** #define DMA_TX_REQUEST_PER_BURST    (1u)
 121:main.c        **** #define DMA_TX_SRC_BASE             (CYDEV_SRAM_BASE)
 122:main.c        **** #define DMA_TX_DST_BASE             (CYDEV_PERIPH_BASE)
 123:main.c        **** 
 124:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
 125:main.c        **** #define BAR_BUFFER_SIZE                 (8u)
 126:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
 127:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 128:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 129:main.c        **** 
 130:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 131:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 132:main.c        **** 
 133:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 134:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 9


 135:main.c        **** 
 136:main.c        **** 
 137:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 138:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 139:main.c        **** 
 140:main.c        **** volatile uint16_t strings[12];
 141:main.c        **** volatile uint16_t prevStrings[12];
 142:main.c        **** volatile uint16_t bar[2];
 143:main.c        **** volatile uint16_t prevBar[2];
 144:main.c        **** volatile uint16_t maxStrings[12];
 145:main.c        **** volatile uint8_t amHere = 0;
 146:main.c        **** volatile uint8_t spiCounter = 0;
 147:main.c        **** volatile uint8_t newDataFlag = 0;
 148:main.c        **** int prevOctave = 0;
 149:main.c        **** uint8_t pluck_index = 0;
 150:main.c        **** volatile uint8_t amHere2 = 0;
 151:main.c        **** volatile uint8_t spiCounter2 = 0;
 152:main.c        **** volatile uint8_t newDataFlag2 = 0;
 153:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 154:main.c        **** volatile uint8_t currentBarBuffer = 0;
 155:main.c        **** volatile uint8_t pluckErrorCount = 0;
 156:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 157:main.c        **** 
 158:main.c        **** 
 159:main.c        **** 
 160:main.c        **** volatile uint8_t inputData = 0;
 161:main.c        **** 
 162:main.c        **** 
 163:main.c        **** union breakFloat {
 164:main.c        ****  float f;
 165:main.c        ****  uint8_t b[4];  
 166:main.c        ****  uint32_t u32;
 167:main.c        **** };
 168:main.c        **** 
 169:main.c        **** 
 170:main.c        **** CY_ISR(spis_1_ss)
 171:main.c        **** {
 323              		.loc 1 171 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327 0000 90B5     		push	{r4, r7, lr}
 328              		.cfi_def_cfa_offset 12
 329              		.cfi_offset 4, -12
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 83B0     		sub	sp, sp, #12
 333              		.cfi_def_cfa_offset 24
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 172:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 336              		.loc 1 172 0
 337 0006 554B     		ldr	r3, .L5
 338 0008 1B78     		ldrb	r3, [r3]
 339 000a DBB2     		uxtb	r3, r3
 340 000c 002B     		cmp	r3, #0
 341 000e 0CBF     		ite	eq
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 10


 342 0010 0123     		moveq	r3, #1
 343 0012 0023     		movne	r3, #0
 344 0014 DBB2     		uxtb	r3, r3
 345 0016 1A46     		mov	r2, r3
 346 0018 504B     		ldr	r3, .L5
 347 001a 1A70     		strb	r2, [r3]
 173:main.c        **** 
 174:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 348              		.loc 1 174 0
 349 001c 4F4B     		ldr	r3, .L5
 350 001e 1B78     		ldrb	r3, [r3]
 351 0020 DBB2     		uxtb	r3, r3
 352 0022 002B     		cmp	r3, #0
 353 0024 0CBF     		ite	eq
 354 0026 0123     		moveq	r3, #1
 355 0028 0023     		movne	r3, #0
 356 002a DBB2     		uxtb	r3, r3
 357 002c 1946     		mov	r1, r3
 358 002e 4C4A     		ldr	r2, .L5+4
 359 0030 1A23     		movs	r3, #26
 360 0032 03FB01F3 		mul	r3, r3, r1
 361 0036 1344     		add	r3, r3, r2
 362 0038 1B78     		ldrb	r3, [r3]
 363 003a DBB2     		uxtb	r3, r3
 364 003c FE2B     		cmp	r3, #254
 365 003e 4FD1     		bne	.L2
 366              		.loc 1 174 0 is_stmt 0 discriminator 1
 367 0040 464B     		ldr	r3, .L5
 368 0042 1B78     		ldrb	r3, [r3]
 369 0044 DBB2     		uxtb	r3, r3
 370 0046 002B     		cmp	r3, #0
 371 0048 0CBF     		ite	eq
 372 004a 0123     		moveq	r3, #1
 373 004c 0023     		movne	r3, #0
 374 004e DBB2     		uxtb	r3, r3
 375 0050 1946     		mov	r1, r3
 376 0052 434A     		ldr	r2, .L5+4
 377 0054 1A23     		movs	r3, #26
 378 0056 03FB01F3 		mul	r3, r3, r1
 379 005a 1344     		add	r3, r3, r2
 380 005c 1933     		adds	r3, r3, #25
 381 005e 1B78     		ldrb	r3, [r3]
 382 0060 DBB2     		uxtb	r3, r3
 383 0062 FD2B     		cmp	r3, #253
 384 0064 3CD1     		bne	.L2
 385              	.LBB2:
 175:main.c        ****     {
 176:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 386              		.loc 1 176 0 is_stmt 1
 387 0066 0023     		movs	r3, #0
 388 0068 7B60     		str	r3, [r7, #4]
 389 006a 34E0     		b	.L3
 390              	.L4:
 177:main.c        ****         {
 178:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 391              		.loc 1 178 0 discriminator 3
 392 006c 3B4B     		ldr	r3, .L5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 11


 393 006e 1B78     		ldrb	r3, [r3]
 394 0070 DBB2     		uxtb	r3, r3
 395 0072 002B     		cmp	r3, #0
 396 0074 0CBF     		ite	eq
 397 0076 0123     		moveq	r3, #1
 398 0078 0023     		movne	r3, #0
 399 007a DBB2     		uxtb	r3, r3
 400 007c 1846     		mov	r0, r3
 401 007e 7B68     		ldr	r3, [r7, #4]
 402 0080 5B00     		lsls	r3, r3, #1
 403 0082 0133     		adds	r3, r3, #1
 404 0084 3649     		ldr	r1, .L5+4
 405 0086 1A22     		movs	r2, #26
 406 0088 02FB00F2 		mul	r2, r2, r0
 407 008c 0A44     		add	r2, r2, r1
 408 008e 1344     		add	r3, r3, r2
 409 0090 1B78     		ldrb	r3, [r3]
 410 0092 DBB2     		uxtb	r3, r3
 411 0094 9BB2     		uxth	r3, r3
 412 0096 1B02     		lsls	r3, r3, #8
 413 0098 9AB2     		uxth	r2, r3
 414 009a 304B     		ldr	r3, .L5
 415 009c 1B78     		ldrb	r3, [r3]
 416 009e DBB2     		uxtb	r3, r3
 417 00a0 002B     		cmp	r3, #0
 418 00a2 0CBF     		ite	eq
 419 00a4 0123     		moveq	r3, #1
 420 00a6 0023     		movne	r3, #0
 421 00a8 DBB2     		uxtb	r3, r3
 422 00aa 1C46     		mov	r4, r3
 423 00ac 7B68     		ldr	r3, [r7, #4]
 424 00ae 0133     		adds	r3, r3, #1
 425 00b0 5B00     		lsls	r3, r3, #1
 426 00b2 2B48     		ldr	r0, .L5+4
 427 00b4 1A21     		movs	r1, #26
 428 00b6 01FB04F1 		mul	r1, r1, r4
 429 00ba 0144     		add	r1, r1, r0
 430 00bc 0B44     		add	r3, r3, r1
 431 00be 1B78     		ldrb	r3, [r3]
 432 00c0 DBB2     		uxtb	r3, r3
 433 00c2 9BB2     		uxth	r3, r3
 434 00c4 1344     		add	r3, r3, r2
 435 00c6 99B2     		uxth	r1, r3
 436 00c8 264A     		ldr	r2, .L5+8
 437 00ca 7B68     		ldr	r3, [r7, #4]
 438 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 176:main.c        ****         {
 439              		.loc 1 176 0 discriminator 3
 440 00d0 7B68     		ldr	r3, [r7, #4]
 441 00d2 0133     		adds	r3, r3, #1
 442 00d4 7B60     		str	r3, [r7, #4]
 443              	.L3:
 176:main.c        ****         {
 444              		.loc 1 176 0 is_stmt 0 discriminator 1
 445 00d6 244B     		ldr	r3, .L5+12
 446 00d8 1B68     		ldr	r3, [r3]
 447 00da 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 12


 448 00dc 9A42     		cmp	r2, r3
 449 00de C5DB     		blt	.L4
 450              	.L2:
 451              	.LBE2:
 179:main.c        ****         }
 180:main.c        ****     }
 181:main.c        ****     SPIS_1_ClearRxBuffer();
 452              		.loc 1 181 0 is_stmt 1
 453 00e0 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 182:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 454              		.loc 1 182 0
 455 00e4 214B     		ldr	r3, .L5+16
 456 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 457 00e8 1846     		mov	r0, r3
 458 00ea FFF7FEFF 		bl	CyDmaClearPendingDrq
 183:main.c        **** 
 184:main.c        ****     //set up the next DMA transaction
 185:main.c        **** 
 186:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 459              		.loc 1 186 0
 460 00ee 1B4B     		ldr	r3, .L5
 461 00f0 1B78     		ldrb	r3, [r3]
 462 00f2 DBB2     		uxtb	r3, r3
 463 00f4 1A46     		mov	r2, r3
 464 00f6 1E4B     		ldr	r3, .L5+20
 465 00f8 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 466 00fa 0223     		movs	r3, #2
 467 00fc FE22     		movs	r2, #254
 468 00fe 1A21     		movs	r1, #26
 469 0100 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 187:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 470              		.loc 1 187 0
 471 0104 154B     		ldr	r3, .L5
 472 0106 1B78     		ldrb	r3, [r3]
 473 0108 DBB2     		uxtb	r3, r3
 474 010a 1A46     		mov	r2, r3
 475 010c 184B     		ldr	r3, .L5+20
 476 010e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 477 0110 124B     		ldr	r3, .L5
 478 0112 1B78     		ldrb	r3, [r3]
 479 0114 DBB2     		uxtb	r3, r3
 480 0116 1A46     		mov	r2, r3
 481 0118 1A23     		movs	r3, #26
 482 011a 03FB02F3 		mul	r3, r3, r2
 483 011e 104A     		ldr	r2, .L5+4
 484 0120 1344     		add	r3, r3, r2
 485 0122 9BB2     		uxth	r3, r3
 486 0124 1A46     		mov	r2, r3
 487 0126 46F25451 		movw	r1, #25940
 488 012a FFF7FEFF 		bl	CyDmaTdSetAddress
 188:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 489              		.loc 1 188 0
 490 012e 0F4B     		ldr	r3, .L5+16
 491 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 492 0132 0A4B     		ldr	r3, .L5
 493 0134 1B78     		ldrb	r3, [r3]
 494 0136 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 13


 495 0138 1946     		mov	r1, r3
 496 013a 0D4B     		ldr	r3, .L5+20
 497 013c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 498 013e 1946     		mov	r1, r3
 499 0140 1046     		mov	r0, r2
 500 0142 FFF7FEFF 		bl	CyDmaChSetInitialTd
 189:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 501              		.loc 1 189 0
 502 0146 094B     		ldr	r3, .L5+16
 503 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 504 014a 0121     		movs	r1, #1
 505 014c 1846     		mov	r0, r3
 506 014e FFF7FEFF 		bl	CyDmaChEnable
 190:main.c        **** 
 191:main.c        **** }
 507              		.loc 1 191 0
 508 0152 00BF     		nop
 509 0154 0C37     		adds	r7, r7, #12
 510              		.cfi_def_cfa_offset 12
 511 0156 BD46     		mov	sp, r7
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 0158 90BD     		pop	{r4, r7, pc}
 515              	.L6:
 516 015a 00BF     		.align	2
 517              	.L5:
 518 015c 00000000 		.word	currentPluckBuffer
 519 0160 00000000 		.word	rxBufferPluck
 520 0164 00000000 		.word	strings
 521 0168 00000000 		.word	numStrings
 522 016c 00000000 		.word	rx1Channel
 523 0170 00000000 		.word	rx1TD
 524              		.cfi_endproc
 525              	.LFE64:
 526              		.size	spis_1_ss, .-spis_1_ss
 527              		.global	spiAdjusted
 528              		.bss
 529              		.type	spiAdjusted, %object
 530              		.size	spiAdjusted, 1
 531              	spiAdjusted:
 532 004f 00       		.space	1
 533              		.global	mySpiCounter
 534              		.type	mySpiCounter, %object
 535              		.size	mySpiCounter, 1
 536              	mySpiCounter:
 537 0050 00       		.space	1
 538              		.global	offsetErrorCount
 539 0051 00       		.align	1
 540              		.type	offsetErrorCount, %object
 541              		.size	offsetErrorCount, 2
 542              	offsetErrorCount:
 543 0052 0000     		.space	2
 544              		.global	SPI2errorflag
 545              		.type	SPI2errorflag, %object
 546              		.size	SPI2errorflag, 1
 547              	SPI2errorflag:
 548 0054 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 14


 549              		.global	bar_index
 550 0055 000000   		.align	2
 551              		.type	bar_index, %object
 552              		.size	bar_index, 4
 553              	bar_index:
 554 0058 00000000 		.space	4
 555              		.comm	knobs,4,4
 556              		.comm	prevKnobs,4,4
 557              		.global	SPI2started
 558              		.type	SPI2started, %object
 559              		.size	SPI2started, 1
 560              	SPI2started:
 561 005c 00       		.space	1
 562              		.global	whichMacro
 563              		.type	whichMacro, %object
 564              		.size	whichMacro, 1
 565              	whichMacro:
 566 005d 00       		.space	1
 567              		.section	.text.spis_2_ss,"ax",%progbits
 568              		.align	2
 569              		.global	spis_2_ss
 570              		.thumb
 571              		.thumb_func
 572              		.type	spis_2_ss, %function
 573              	spis_2_ss:
 574              	.LFB65:
 192:main.c        **** 
 193:main.c        **** 
 194:main.c        **** 
 195:main.c        **** uint8_t spiAdjusted = 0;
 196:main.c        **** uint8_t mySpiCounter = 0;
 197:main.c        **** volatile uint16_t offsetErrorCount = 0;
 198:main.c        **** volatile uint8_t SPI2errorflag = 0;
 199:main.c        **** volatile int bar_index = 0;
 200:main.c        **** uint8_t knobs[4];
 201:main.c        **** uint8_t prevKnobs[4];
 202:main.c        **** 
 203:main.c        **** volatile uint8_t SPI2started = 0;
 204:main.c        **** 
 205:main.c        **** uint8_t whichMacro = 0;
 206:main.c        **** 
 207:main.c        **** CY_ISR(spis_2_ss)
 208:main.c        **** {
 575              		.loc 1 208 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579 0000 80B5     		push	{r7, lr}
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0002 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 209:main.c        **** 
 210:main.c        ****     currentBarBuffer = !currentBarBuffer;
 585              		.loc 1 210 0
 586 0004 214B     		ldr	r3, .L8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 15


 587 0006 1B78     		ldrb	r3, [r3]
 588 0008 DBB2     		uxtb	r3, r3
 589 000a 002B     		cmp	r3, #0
 590 000c 0CBF     		ite	eq
 591 000e 0123     		moveq	r3, #1
 592 0010 0023     		movne	r3, #0
 593 0012 DBB2     		uxtb	r3, r3
 594 0014 1A46     		mov	r2, r3
 595 0016 1D4B     		ldr	r3, .L8
 596 0018 1A70     		strb	r2, [r3]
 211:main.c        ****     SPIS_2_ClearRxBuffer();
 597              		.loc 1 211 0
 598 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 212:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 599              		.loc 1 212 0
 600 001e 1C4B     		ldr	r3, .L8+4
 601 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 602 0022 1846     		mov	r0, r3
 603 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 213:main.c        **** 
 214:main.c        ****     //set up the next DMA transaction
 215:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 604              		.loc 1 215 0
 605 0028 184B     		ldr	r3, .L8
 606 002a 1B78     		ldrb	r3, [r3]
 607 002c DBB2     		uxtb	r3, r3
 608 002e 1A46     		mov	r2, r3
 609 0030 184B     		ldr	r3, .L8+8
 610 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 611 0034 0623     		movs	r3, #6
 612 0036 FE22     		movs	r2, #254
 613 0038 0821     		movs	r1, #8
 614 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 216:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 615              		.loc 1 216 0
 616 003e 134B     		ldr	r3, .L8
 617 0040 1B78     		ldrb	r3, [r3]
 618 0042 DBB2     		uxtb	r3, r3
 619 0044 1A46     		mov	r2, r3
 620 0046 134B     		ldr	r3, .L8+8
 621 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 622 004a 104B     		ldr	r3, .L8
 623 004c 1B78     		ldrb	r3, [r3]
 624 004e DBB2     		uxtb	r3, r3
 625 0050 DB00     		lsls	r3, r3, #3
 626 0052 114A     		ldr	r2, .L8+12
 627 0054 1344     		add	r3, r3, r2
 628 0056 9BB2     		uxth	r3, r3
 629 0058 1A46     		mov	r2, r3
 630 005a 46F25751 		movw	r1, #25943
 631 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 217:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 632              		.loc 1 217 0
 633 0062 0B4B     		ldr	r3, .L8+4
 634 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 635 0066 094B     		ldr	r3, .L8
 636 0068 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 16


 637 006a DBB2     		uxtb	r3, r3
 638 006c 1946     		mov	r1, r3
 639 006e 094B     		ldr	r3, .L8+8
 640 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 641 0072 1946     		mov	r1, r3
 642 0074 1046     		mov	r0, r2
 643 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 218:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 644              		.loc 1 218 0
 645 007a 054B     		ldr	r3, .L8+4
 646 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 647 007e 0121     		movs	r1, #1
 648 0080 1846     		mov	r0, r3
 649 0082 FFF7FEFF 		bl	CyDmaChEnable
 219:main.c        **** }
 650              		.loc 1 219 0
 651 0086 00BF     		nop
 652 0088 80BD     		pop	{r7, pc}
 653              	.L9:
 654 008a 00BF     		.align	2
 655              	.L8:
 656 008c 00000000 		.word	currentBarBuffer
 657 0090 00000000 		.word	rx2Channel
 658 0094 00000000 		.word	rx2TD
 659 0098 00000000 		.word	rxBufferBar
 660              		.cfi_endproc
 661              	.LFE65:
 662              		.size	spis_2_ss, .-spis_2_ss
 663              		.bss
 664 005e 0000     		.align	2
 665              	eepromArray:
 666 0060 0000     		.space	2
 667              		.global	array
 668 0062 0000     		.align	2
 669              		.type	array, %object
 670              		.size	array, 2
 671              	array:
 672 0064 0000     		.space	2
 673              		.comm	eepromReturnValue,1,1
 674              		.global	Em_EEPROM_em_EepromStorage
 675              		.section	.rodata
 676              		.align	8
 677              		.type	Em_EEPROM_em_EepromStorage, %object
 678              		.size	Em_EEPROM_em_EepromStorage, 1024
 679              	Em_EEPROM_em_EepromStorage:
 680 0000 00000000 		.space	1024
 680      00000000 
 680      00000000 
 680      00000000 
 680      00000000 
 681              		.comm	eeprom_cnt,1,1
 682              		.comm	status,4,4
 683              		.comm	ptr,4,4
 684              		.global	barCount
 685              		.bss
 686 0066 0000     		.align	2
 687              		.type	barCount, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 17


 688              		.size	barCount, 4
 689              	barCount:
 690 0068 00000000 		.space	4
 691              		.section	.text.Vbus_function,"ax",%progbits
 692              		.align	2
 693              		.global	Vbus_function
 694              		.thumb
 695              		.thumb_func
 696              		.type	Vbus_function, %function
 697              	Vbus_function:
 698              	.LFB66:
 220:main.c        **** 
 221:main.c        **** 
 222:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 223:main.c        ****                                             
 224:main.c        ****     uint8 array[] ={ 0, 0 };
 225:main.c        ****                                 
 226:main.c        ****     /*Return status for EEPROM and UART*/ 
 227:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 228:main.c        **** 
 229:main.c        **** 
 230:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 231:main.c        **** #if defined (__ICCARM__)
 232:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 233:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 234:main.c        **** #else
 235:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 236:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 237:main.c        **** #endif /* defined (__ICCARM__) */
 238:main.c        **** 
 239:main.c        ****     uint8 eeprom_cnt;
 240:main.c        ****     cystatus status;
 241:main.c        ****     volatile const uint8 * ptr;
 242:main.c        **** volatile int barCount = 0;
 243:main.c        **** 
 244:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 245:main.c        ****     
 246:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 247:main.c        **** 
 248:main.c        **** CY_ISR(Vbus_function)
 249:main.c        **** {
 699              		.loc 1 249 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 250:main.c        ****     //plug or unplug event
 251:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 252:main.c        ****     //otherwise, restart
 253:main.c        ****     my_Vbus_ISR_ClearPending();
 709              		.loc 1 253 0
 710 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 18


 254:main.c        ****     vBusPin_ClearInterrupt();
 711              		.loc 1 254 0
 712 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 255:main.c        ****     restartSystemCheck();
 713              		.loc 1 255 0
 714 000c FFF7FEFF 		bl	restartSystemCheck
 256:main.c        **** 
 257:main.c        **** }
 715              		.loc 1 257 0
 716 0010 00BF     		nop
 717 0012 80BD     		pop	{r7, pc}
 718              		.cfi_endproc
 719              	.LFE66:
 720              		.size	Vbus_function, .-Vbus_function
 721              		.section	.text.restartSystemCheck,"ax",%progbits
 722              		.align	2
 723              		.global	restartSystemCheck
 724              		.thumb
 725              		.thumb_func
 726              		.type	restartSystemCheck, %function
 727              	restartSystemCheck:
 728              	.LFB67:
 258:main.c        **** 
 259:main.c        **** void restartSystemCheck()
 260:main.c        **** {
 729              		.loc 1 260 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733 0000 80B5     		push	{r7, lr}
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 00AF     		add	r7, sp, #0
 738              		.cfi_def_cfa_register 7
 261:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 739              		.loc 1 261 0
 740 0004 184B     		ldr	r3, .L15
 741 0006 0222     		movs	r2, #2
 742 0008 1849     		ldr	r1, .L15+4
 743 000a 0020     		movs	r0, #0
 744 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 745 0010 0346     		mov	r3, r0
 746 0012 1A46     		mov	r2, r3
 747 0014 164B     		ldr	r3, .L15+8
 748 0016 1A70     		strb	r2, [r3]
 262:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 263:main.c        ****     if (USB_VBusPresent() == 1)
 749              		.loc 1 263 0
 750 0018 FFF7FEFF 		bl	USB_VBusPresent
 751 001c 0346     		mov	r3, r0
 752 001e 012B     		cmp	r3, #1
 753 0020 20D1     		bne	.L14
 264:main.c        ****     {
 265:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 754              		.loc 1 265 0
 755 0022 124B     		ldr	r3, .L15+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 19


 756 0024 1B78     		ldrb	r3, [r3]
 757 0026 DBB2     		uxtb	r3, r3
 758 0028 012B     		cmp	r3, #1
 759 002a 0CD1     		bne	.L13
 266:main.c        ****         {
 267:main.c        ****             //a flag says we just restarted
 268:main.c        ****             //write a zero so it knows next time that it's OK to restart
 269:main.c        ****             array[0] = 0;
 760              		.loc 1 269 0
 761 002c 114B     		ldr	r3, .L15+12
 762 002e 0022     		movs	r2, #0
 763 0030 1A70     		strb	r2, [r3]
 270:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 764              		.loc 1 270 0
 765 0032 0D4B     		ldr	r3, .L15
 766 0034 0222     		movs	r2, #2
 767 0036 0F49     		ldr	r1, .L15+12
 768 0038 0020     		movs	r0, #0
 769 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 271:main.c        ****             USB_check_flag = 1;
 770              		.loc 1 271 0
 771 003e 0E4B     		ldr	r3, .L15+16
 772 0040 0122     		movs	r2, #1
 773 0042 1A70     		strb	r2, [r3]
 272:main.c        ****         }
 273:main.c        ****         else
 274:main.c        ****         {
 275:main.c        ****            //otherwise, we need to restart
 276:main.c        ****            array[0] = 1;
 277:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 278:main.c        ****             USB_Stop();
 279:main.c        ****             I2C_1_Stop();
 280:main.c        ****             CySoftwareReset();
 281:main.c        ****         }
 282:main.c        ****     }
 283:main.c        **** }
 774              		.loc 1 283 0
 775 0044 0EE0     		b	.L14
 776              	.L13:
 276:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 777              		.loc 1 276 0
 778 0046 0B4B     		ldr	r3, .L15+12
 779 0048 0122     		movs	r2, #1
 780 004a 1A70     		strb	r2, [r3]
 277:main.c        ****             USB_Stop();
 781              		.loc 1 277 0
 782 004c 064B     		ldr	r3, .L15
 783 004e 0222     		movs	r2, #2
 784 0050 0849     		ldr	r1, .L15+12
 785 0052 0020     		movs	r0, #0
 786 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 278:main.c        ****             I2C_1_Stop();
 787              		.loc 1 278 0
 788 0058 FFF7FEFF 		bl	USB_Stop
 279:main.c        ****             CySoftwareReset();
 789              		.loc 1 279 0
 790 005c FFF7FEFF 		bl	I2C_1_Stop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 20


 280:main.c        ****         }
 791              		.loc 1 280 0
 792 0060 FFF7FEFF 		bl	CySoftwareReset
 793              	.L14:
 794              		.loc 1 283 0
 795 0064 00BF     		nop
 796 0066 80BD     		pop	{r7, pc}
 797              	.L16:
 798              		.align	2
 799              	.L15:
 800 0068 00000000 		.word	Em_EEPROM_context
 801 006c 60000000 		.word	eepromArray
 802 0070 00000000 		.word	eepromReturnValue
 803 0074 00000000 		.word	array
 804 0078 00000000 		.word	USB_check_flag
 805              		.cfi_endproc
 806              	.LFE67:
 807              		.size	restartSystemCheck, .-restartSystemCheck
 808              		.global	__aeabi_fcmpgt
 809              		.global	__aeabi_fcmplt
 810              		.section	.text.LEAF_clip,"ax",%progbits
 811              		.align	2
 812              		.global	LEAF_clip
 813              		.thumb
 814              		.thumb_func
 815              		.type	LEAF_clip, %function
 816              	LEAF_clip:
 817              	.LFB68:
 284:main.c        ****     
 285:main.c        **** #define INV_440 0.0022727272727273f
 286:main.c        **** 
 287:main.c        **** float   LEAF_clip(float min, float val, float max)
 288:main.c        **** {
 818              		.loc 1 288 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 24
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 86B0     		sub	sp, sp, #24
 827              		.cfi_def_cfa_offset 32
 828 0004 00AF     		add	r7, sp, #0
 829              		.cfi_def_cfa_register 7
 830 0006 F860     		str	r0, [r7, #12]	@ float
 831 0008 B960     		str	r1, [r7, #8]	@ float
 832 000a 7A60     		str	r2, [r7, #4]	@ float
 289:main.c        ****     float tempmin = min;
 833              		.loc 1 289 0
 834 000c FB68     		ldr	r3, [r7, #12]	@ float
 835 000e 7B61     		str	r3, [r7, #20]	@ float
 290:main.c        ****     float tempmax = max;
 836              		.loc 1 290 0
 837 0010 7B68     		ldr	r3, [r7, #4]	@ float
 838 0012 3B61     		str	r3, [r7, #16]	@ float
 291:main.c        ****     if (min > max)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 21


 839              		.loc 1 291 0
 840 0014 7968     		ldr	r1, [r7, #4]	@ float
 841 0016 F868     		ldr	r0, [r7, #12]	@ float
 842 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 843 001c 0346     		mov	r3, r0
 844 001e 002B     		cmp	r3, #0
 845 0020 03D0     		beq	.L18
 292:main.c        ****     {
 293:main.c        ****         tempmin = max;
 846              		.loc 1 293 0
 847 0022 7B68     		ldr	r3, [r7, #4]	@ float
 848 0024 7B61     		str	r3, [r7, #20]	@ float
 294:main.c        ****         tempmax = min;
 849              		.loc 1 294 0
 850 0026 FB68     		ldr	r3, [r7, #12]	@ float
 851 0028 3B61     		str	r3, [r7, #16]	@ float
 852              	.L18:
 295:main.c        ****     }
 296:main.c        ****     if (val < tempmin)
 853              		.loc 1 296 0
 854 002a 7969     		ldr	r1, [r7, #20]	@ float
 855 002c B868     		ldr	r0, [r7, #8]	@ float
 856 002e FFF7FEFF 		bl	__aeabi_fcmplt
 857 0032 0346     		mov	r3, r0
 858 0034 002B     		cmp	r3, #0
 859 0036 01D0     		beq	.L28
 297:main.c        ****     {
 298:main.c        ****         return tempmin;
 860              		.loc 1 298 0
 861 0038 7B69     		ldr	r3, [r7, #20]	@ float
 862 003a 09E0     		b	.L22
 863              	.L28:
 299:main.c        ****     }
 300:main.c        ****     else if (val > tempmax)
 864              		.loc 1 300 0
 865 003c 3969     		ldr	r1, [r7, #16]	@ float
 866 003e B868     		ldr	r0, [r7, #8]	@ float
 867 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 868 0044 0346     		mov	r3, r0
 869 0046 002B     		cmp	r3, #0
 870 0048 01D0     		beq	.L29
 301:main.c        ****     {
 302:main.c        ****         return tempmax;
 871              		.loc 1 302 0
 872 004a 3B69     		ldr	r3, [r7, #16]	@ float
 873 004c 00E0     		b	.L22
 874              	.L29:
 303:main.c        ****     }
 304:main.c        ****     else
 305:main.c        ****     {
 306:main.c        ****         return val;
 875              		.loc 1 306 0
 876 004e BB68     		ldr	r3, [r7, #8]	@ float
 877              	.L22:
 307:main.c        ****     }
 308:main.c        **** }
 878              		.loc 1 308 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 22


 879 0050 1846     		mov	r0, r3
 880 0052 1837     		adds	r7, r7, #24
 881              		.cfi_def_cfa_offset 8
 882 0054 BD46     		mov	sp, r7
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed
 885 0056 80BD     		pop	{r7, pc}
 886              		.cfi_endproc
 887              	.LFE68:
 888              		.size	LEAF_clip, .-LEAF_clip
 889              		.global	__aeabi_fcmple
 890              		.global	__aeabi_fmul
 891              		.section	.text.mtof,"ax",%progbits
 892              		.align	2
 893              		.global	mtof
 894              		.thumb
 895              		.thumb_func
 896              		.type	mtof, %function
 897              	mtof:
 898              	.LFB69:
 309:main.c        **** float mtof(float f)
 310:main.c        **** {
 899              		.loc 1 310 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 8
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 80B5     		push	{r7, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 82B0     		sub	sp, sp, #8
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]	@ float
 311:main.c        ****     if (f <= -1500.0f) return(0);
 912              		.loc 1 311 0
 913 0008 1349     		ldr	r1, .L40
 914 000a 7868     		ldr	r0, [r7, #4]	@ float
 915 000c FFF7FEFF 		bl	__aeabi_fcmple
 916 0010 0346     		mov	r3, r0
 917 0012 002B     		cmp	r3, #0
 918 0014 02D0     		beq	.L38
 919              		.loc 1 311 0 is_stmt 0 discriminator 1
 920 0016 4FF00003 		mov	r3, #0
 921 001a 19E0     		b	.L33
 922              	.L38:
 312:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 923              		.loc 1 312 0 is_stmt 1
 924 001c 0F49     		ldr	r1, .L40+4
 925 001e 7868     		ldr	r0, [r7, #4]	@ float
 926 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 927 0024 0346     		mov	r3, r0
 928 0026 002B     		cmp	r3, #0
 929 0028 04D0     		beq	.L39
 930              		.loc 1 312 0 is_stmt 0 discriminator 1
 931 002a 0C48     		ldr	r0, .L40+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 23


 932 002c FFF7FEFF 		bl	mtof
 933 0030 0346     		mov	r3, r0
 934 0032 0DE0     		b	.L33
 935              	.L39:
 313:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 936              		.loc 1 313 0 is_stmt 1
 937 0034 0A49     		ldr	r1, .L40+8
 938 0036 7868     		ldr	r0, [r7, #4]	@ float
 939 0038 FFF7FEFF 		bl	__aeabi_fmul
 940 003c 0346     		mov	r3, r0
 941 003e 1846     		mov	r0, r3
 942 0040 FFF7FEFF 		bl	expf
 943 0044 0346     		mov	r3, r0
 944 0046 0749     		ldr	r1, .L40+12
 945 0048 1846     		mov	r0, r3
 946 004a FFF7FEFF 		bl	__aeabi_fmul
 947 004e 0346     		mov	r3, r0
 948              	.L33:
 314:main.c        **** }
 949              		.loc 1 314 0
 950 0050 1846     		mov	r0, r3
 951 0052 0837     		adds	r7, r7, #8
 952              		.cfi_def_cfa_offset 8
 953 0054 BD46     		mov	sp, r7
 954              		.cfi_def_cfa_register 13
 955              		@ sp needed
 956 0056 80BD     		pop	{r7, pc}
 957              	.L41:
 958              		.align	2
 959              	.L40:
 960 0058 0080BBC4 		.word	-994344960
 961 005c 0060BB44 		.word	1153130496
 962 0060 20986C3D 		.word	1030527008
 963 0064 13D00241 		.word	1090703379
 964              		.cfi_endproc
 965              	.LFE69:
 966              		.size	mtof, .-mtof
 967              		.section	.text.ftom,"ax",%progbits
 968              		.align	2
 969              		.global	ftom
 970              		.thumb
 971              		.thumb_func
 972              		.type	ftom, %function
 973              	ftom:
 974              	.LFB70:
 315:main.c        **** 
 316:main.c        **** float ftom(float f)
 317:main.c        **** {
 975              		.loc 1 317 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 8
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979 0000 80B5     		push	{r7, lr}
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 24


 984              		.cfi_def_cfa_offset 16
 985 0004 00AF     		add	r7, sp, #0
 986              		.cfi_def_cfa_register 7
 987 0006 7860     		str	r0, [r7, #4]	@ float
 318:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 988              		.loc 1 318 0
 989 0008 4FF00001 		mov	r1, #0
 990 000c 7868     		ldr	r0, [r7, #4]	@ float
 991 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 992 0012 0346     		mov	r3, r0
 993 0014 002B     		cmp	r3, #0
 994 0016 0ED0     		beq	.L48
 995              		.loc 1 318 0 is_stmt 0 discriminator 1
 996 0018 0949     		ldr	r1, .L49
 997 001a 7868     		ldr	r0, [r7, #4]	@ float
 998 001c FFF7FEFF 		bl	__aeabi_fmul
 999 0020 0346     		mov	r3, r0
 1000 0022 1846     		mov	r0, r3
 1001 0024 FFF7FEFF 		bl	logf
 1002 0028 0346     		mov	r3, r0
 1003 002a 0649     		ldr	r1, .L49+4
 1004 002c 1846     		mov	r0, r3
 1005 002e FFF7FEFF 		bl	__aeabi_fmul
 1006 0032 0346     		mov	r3, r0
 1007 0034 00E0     		b	.L46
 1008              	.L48:
 1009              		.loc 1 318 0 discriminator 2
 1010 0036 044B     		ldr	r3, .L49+8
 1011              	.L46:
 319:main.c        **** }
 1012              		.loc 1 319 0 is_stmt 1 discriminator 5
 1013 0038 1846     		mov	r0, r3
 1014 003a 0837     		adds	r7, r7, #8
 1015              		.cfi_def_cfa_offset 8
 1016 003c BD46     		mov	sp, r7
 1017              		.cfi_def_cfa_register 13
 1018              		@ sp needed
 1019 003e 80BD     		pop	{r7, pc}
 1020              	.L50:
 1021              		.align	2
 1022              	.L49:
 1023 0040 D27EFA3D 		.word	1039826642
 1024 0044 AC7F8A41 		.word	1099595692
 1025 0048 0080BBC4 		.word	-994344960
 1026              		.cfi_endproc
 1027              	.LFE70:
 1028              		.size	ftom, .-ftom
 1029              		.global	__aeabi_fsub
 1030              		.global	__aeabi_fadd
 1031              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
 1032              		.align	2
 1033              		.global	LEAF_interpolation_linear
 1034              		.thumb
 1035              		.thumb_func
 1036              		.type	LEAF_interpolation_linear, %function
 1037              	LEAF_interpolation_linear:
 1038              	.LFB71:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 25


 320:main.c        **** 
 321:main.c        **** // alpha, [0.0, 1.0]
 322:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 323:main.c        **** {
 1039              		.loc 1 323 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 24
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 86B0     		sub	sp, sp, #24
 1048              		.cfi_def_cfa_offset 32
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 F860     		str	r0, [r7, #12]	@ float
 1052 0008 B960     		str	r1, [r7, #8]	@ float
 1053 000a 7A60     		str	r2, [r7, #4]	@ float
 324:main.c        ****     float omAlpha = 1.0f - alpha;
 1054              		.loc 1 324 0
 1055 000c 7968     		ldr	r1, [r7, #4]	@ float
 1056 000e 4FF07E50 		mov	r0, #1065353216
 1057 0012 FFF7FEFF 		bl	__aeabi_fsub
 1058 0016 0346     		mov	r3, r0
 1059 0018 7B61     		str	r3, [r7, #20]	@ float
 325:main.c        ****     
 326:main.c        ****     // First 1/2 of interpolation
 327:main.c        ****     float out = A * omAlpha;
 1060              		.loc 1 327 0
 1061 001a 7969     		ldr	r1, [r7, #20]	@ float
 1062 001c F868     		ldr	r0, [r7, #12]	@ float
 1063 001e FFF7FEFF 		bl	__aeabi_fmul
 1064 0022 0346     		mov	r3, r0
 1065 0024 3B61     		str	r3, [r7, #16]	@ float
 328:main.c        ****     
 329:main.c        ****     out += B * alpha;
 1066              		.loc 1 329 0
 1067 0026 7968     		ldr	r1, [r7, #4]	@ float
 1068 0028 B868     		ldr	r0, [r7, #8]	@ float
 1069 002a FFF7FEFF 		bl	__aeabi_fmul
 1070 002e 0346     		mov	r3, r0
 1071 0030 1946     		mov	r1, r3
 1072 0032 3869     		ldr	r0, [r7, #16]	@ float
 1073 0034 FFF7FEFF 		bl	__aeabi_fadd
 1074 0038 0346     		mov	r3, r0
 1075 003a 3B61     		str	r3, [r7, #16]	@ float
 330:main.c        ****     
 331:main.c        ****     return out;
 1076              		.loc 1 331 0
 1077 003c 3B69     		ldr	r3, [r7, #16]	@ float
 332:main.c        **** }
 1078              		.loc 1 332 0
 1079 003e 1846     		mov	r0, r3
 1080 0040 1837     		adds	r7, r7, #24
 1081              		.cfi_def_cfa_offset 8
 1082 0042 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 26


 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 0044 80BD     		pop	{r7, pc}
 1086              		.cfi_endproc
 1087              	.LFE71:
 1088              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1089              		.comm	I2Cbuff1,256,4
 1090              		.comm	I2Cbuff2,16,4
 1091              		.global	send_it
 1092 0046 00BF     		.bss
 1093              		.type	send_it, %object
 1094              		.size	send_it, 1
 1095              	send_it:
 1096 006c 00       		.space	1
 1097              		.global	mux_states
 1098              		.data
 1099 000a 0000     		.align	2
 1100              		.type	mux_states, %object
 1101              		.size	mux_states, 24
 1102              	mux_states:
 1103 000c 05       		.byte	5
 1104 000d 00       		.byte	0
 1105 000e 05       		.byte	5
 1106 000f 01       		.byte	1
 1107 0010 05       		.byte	5
 1108 0011 02       		.byte	2
 1109 0012 05       		.byte	5
 1110 0013 03       		.byte	3
 1111 0014 05       		.byte	5
 1112 0015 04       		.byte	4
 1113 0016 00       		.byte	0
 1114 0017 00       		.byte	0
 1115 0018 01       		.byte	1
 1116 0019 00       		.byte	0
 1117 001a 03       		.byte	3
 1118 001b 00       		.byte	0
 1119 001c 04       		.byte	4
 1120 001d 00       		.byte	0
 1121 001e 02       		.byte	2
 1122 001f 00       		.byte	0
 1123 0020 05       		.byte	5
 1124 0021 05       		.byte	5
 1125 0022 06       		.byte	6
 1126 0023 00       		.byte	0
 1127              		.global	i2c_skipped
 1128              		.align	2
 1129              		.type	i2c_skipped, %object
 1130              		.size	i2c_skipped, 12
 1131              	i2c_skipped:
 1132 0024 00       		.byte	0
 1133 0025 00       		.byte	0
 1134 0026 00       		.byte	0
 1135 0027 00       		.byte	0
 1136 0028 00       		.byte	0
 1137 0029 00       		.byte	0
 1138 002a 00       		.byte	0
 1139 002b 01       		.byte	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 27


 1140 002c 01       		.byte	1
 1141 002d 00       		.byte	0
 1142 002e 00       		.byte	0
 1143 002f 00       		.byte	0
 1144              		.global	pedals_low
 1145              		.align	2
 1146              		.type	pedals_low, %object
 1147              		.size	pedals_low, 20
 1148              	pedals_low:
 1149 0030 830A     		.short	2691
 1150 0032 0109     		.short	2305
 1151 0034 9909     		.short	2457
 1152 0036 0E02     		.short	526
 1153 0038 9A0E     		.short	3738
 1154 003a 0309     		.short	2307
 1155 003c C60B     		.short	3014
 1156 003e 8E08     		.short	2190
 1157 0040 E90A     		.short	2793
 1158 0042 2605     		.short	1318
 1159              		.global	pedals_high
 1160              		.align	2
 1161              		.type	pedals_high, %object
 1162              		.size	pedals_high, 20
 1163              	pedals_high:
 1164 0044 ED0A     		.short	2797
 1165 0046 6509     		.short	2405
 1166 0048 140A     		.short	2580
 1167 004a 8702     		.short	647
 1168 004c 0E0F     		.short	3854
 1169 004e 9D09     		.short	2461
 1170 0050 450C     		.short	3141
 1171 0052 3109     		.short	2353
 1172 0054 760B     		.short	2934
 1173 0056 E005     		.short	1504
 1174              		.global	deadzone
 1175              		.align	1
 1176              		.type	deadzone, %object
 1177              		.size	deadzone, 2
 1178              	deadzone:
 1179 0058 9600     		.short	150
 1180              		.global	volumePedal
 1181              		.align	1
 1182              		.type	volumePedal, %object
 1183              		.size	volumePedal, 2
 1184              	volumePedal:
 1185 005a FF0F     		.short	4095
 1186              		.comm	processed_pedals,20,4
 1187              		.comm	prev_processed_pedals,20,4
 1188              		.comm	pedals8bit,10,4
 1189              		.comm	prev_processed_volumePedal,2,2
 1190              		.comm	processed_volumePedal,2,2
 1191              		.global	fretMeasurements
 1192              		.align	2
 1193              		.type	fretMeasurements, %object
 1194              		.size	fretMeasurements, 64
 1195              	fretMeasurements:
 1196 005c 001E7547 		.word	1198857728
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 28


 1197 0060 00A07047 		.word	1198563328
 1198 0064 0052F846 		.word	1190679040
 1199 0068 00000000 		.word	0
 1200 006c 00B01A47 		.word	1192931328
 1201 0070 001C2247 		.word	1193417728
 1202 0074 00507546 		.word	1182093312
 1203 0078 00000000 		.word	0
 1204 007c 0000D746 		.word	1188495360
 1205 0080 00F0EB46 		.word	1189867520
 1206 0084 00280446 		.word	1174677504
 1207 0088 00000000 		.word	0
 1208 008c 00481446 		.word	1175734272
 1209 0090 00805446 		.word	1179942912
 1210 0094 00202745 		.word	1160192000
 1211 0098 00000000 		.word	0
 1212              		.global	currentPresetSelection
 1213              		.bss
 1214 006d 000000   		.align	2
 1215              		.type	currentPresetSelection, %object
 1216              		.size	currentPresetSelection, 4
 1217              	currentPresetSelection:
 1218 0070 00000000 		.space	4
 1219              		.comm	presetNamesArray,896,4
 1220              		.global	presetNumberToLoad
 1221              		.type	presetNumberToLoad, %object
 1222              		.size	presetNumberToLoad, 1
 1223              	presetNumberToLoad:
 1224 0074 00       		.space	1
 1225              		.global	presetLoadedResponse
 1226              		.data
 1227              		.align	2
 1228              		.type	presetLoadedResponse, %object
 1229              		.size	presetLoadedResponse, 2
 1230              	presetLoadedResponse:
 1231 009c FF       		.byte	-1
 1232 009d 00       		.byte	0
 1233              		.comm	macroNamesArray,7168,4
 1234              		.global	fretScaling
 1235 009e 0000     		.align	2
 1236              		.type	fretScaling, %object
 1237              		.size	fretScaling, 16
 1238              	fretScaling:
 1239 00a0 0000803F 		.word	1065353216
 1240 00a4 ABAA2A3F 		.word	1059760811
 1241 00a8 0000003F 		.word	1056964608
 1242 00ac 0000803E 		.word	1048576000
 1243              		.comm	pedalRatios,40,4
 1244              		.global	last_mux
 1245              		.type	last_mux, %object
 1246              		.size	last_mux, 1
 1247              	last_mux:
 1248 00b0 01       		.byte	1
 1249              		.global	main_counter
 1250              		.bss
 1251              		.type	main_counter, %object
 1252              		.size	main_counter, 1
 1253              	main_counter:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 29


 1254 0075 00       		.space	1
 1255              		.global	neck
 1256              		.type	neck, %object
 1257              		.size	neck, 1
 1258              	neck:
 1259 0076 00       		.space	1
 1260              		.global	dualSlider
 1261              		.type	dualSlider, %object
 1262              		.size	dualSlider, 1
 1263              	dualSlider:
 1264 0077 00       		.space	1
 1265              		.global	enterUp
 1266              		.data
 1267              		.type	enterUp, %object
 1268              		.size	enterUp, 1
 1269              	enterUp:
 1270 00b1 01       		.byte	1
 1271              		.global	voice
 1272              		.bss
 1273              		.type	voice, %object
 1274              		.size	voice, 1
 1275              	voice:
 1276 0078 00       		.space	1
 1277              		.global	editUp
 1278              		.data
 1279              		.type	editUp, %object
 1280              		.size	editUp, 1
 1281              	editUp:
 1282 00b2 01       		.byte	1
 1283              		.global	oct1Up
 1284              		.type	oct1Up, %object
 1285              		.size	oct1Up, 1
 1286              	oct1Up:
 1287 00b3 01       		.byte	1
 1288              		.global	oct4Up
 1289              		.type	oct4Up, %object
 1290              		.size	oct4Up, 1
 1291              	oct4Up:
 1292 00b4 01       		.byte	1
 1293              		.comm	encoderVal,16,4
 1294              		.global	encoderNum
 1295              		.bss
 1296 0079 000000   		.align	2
 1297              		.type	encoderNum, %object
 1298              		.size	encoderNum, 4
 1299              	encoderNum:
 1300 007c 00000000 		.space	4
 1301              		.global	button1Up
 1302              		.type	button1Up, %object
 1303              		.size	button1Up, 1
 1304              	button1Up:
 1305 0080 00       		.space	1
 1306              		.global	button2Up
 1307              		.type	button2Up, %object
 1308              		.size	button2Up, 1
 1309              	button2Up:
 1310 0081 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 30


 1311              		.global	button3Up
 1312              		.type	button3Up, %object
 1313              		.size	button3Up, 1
 1314              	button3Up:
 1315 0082 00       		.space	1
 1316              		.global	button4Up
 1317              		.type	button4Up, %object
 1318              		.size	button4Up, 1
 1319              	button4Up:
 1320 0083 00       		.space	1
 1321              		.global	patchNum
 1322              		.type	patchNum, %object
 1323              		.size	patchNum, 1
 1324              	patchNum:
 1325 0084 00       		.space	1
 1326              		.comm	copedent,3696,4
 1327              		.comm	copedentNamesArray,98,4
 1328              		.comm	prevStringPitchBend,48,4
 1329              		.comm	pedals,480,4
 1330              		.comm	openStringFrequencies,48,4
 1331              		.comm	stringMappedPositions,48,4
 1332              		.comm	invStringMappedPositions,48,4
 1333              		.comm	stringFrequencies,48,4
 1334              		.comm	stringOctave,48,4
 1335              		.comm	stringPitch,48,4
 1336              		.comm	stringMIDI,48,4
 1337              		.comm	openStringMIDI_Int,48,4
 1338              		.global	OLEDcount
 1339 0085 000000   		.align	2
 1340              		.type	OLEDcount, %object
 1341              		.size	OLEDcount, 4
 1342              	OLEDcount:
 1343 0088 00000000 		.space	4
 1344              		.global	mainOLEDWaitingToSend
 1345              		.align	2
 1346              		.type	mainOLEDWaitingToSend, %object
 1347              		.size	mainOLEDWaitingToSend, 4
 1348              	mainOLEDWaitingToSend:
 1349 008c 00000000 		.space	4
 1350              		.global	macroOLEDWaitingToSend
 1351              		.align	2
 1352              		.type	macroOLEDWaitingToSend, %object
 1353              		.size	macroOLEDWaitingToSend, 4
 1354              	macroOLEDWaitingToSend:
 1355 0090 00000000 		.space	4
 1356              		.comm	presetAlreadyDisplayed,256,4
 1357              		.global	pedals_float
 1358              		.align	2
 1359              		.type	pedals_float, %object
 1360              		.size	pedals_float, 40
 1361              	pedals_float:
 1362 0094 00000000 		.space	40
 1362      00000000 
 1362      00000000 
 1362      00000000 
 1362      00000000 
 1363              		.global	__aeabi_fdiv
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 31


 1364              		.section	.text.map,"ax",%progbits
 1365              		.align	2
 1366              		.global	map
 1367              		.thumb
 1368              		.thumb_func
 1369              		.type	map, %function
 1370              	map:
 1371              	.LFB72:
 333:main.c        **** 
 334:main.c        **** 
 335:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 336:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 337:main.c        **** void USB_service(void);
 338:main.c        **** 
 339:main.c        **** volatile uint8_t I2Cbuff1[256];
 340:main.c        **** volatile uint8_t I2Cbuff2[16];
 341:main.c        **** volatile uint8_t send_it = 0;
 342:main.c        **** 
 343:main.c        **** 
 344:main.c        **** //first mux, 0x70 is first element of array. 
 345:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 346:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 347:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 348:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 349:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,1,1,0,0,0}; //so that pedals and levers can be marked as s
 350:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 351:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 352:main.c        **** uint16_t deadzone = 150;
 353:main.c        **** uint16_t volumePedal = 4095;
 354:main.c        **** uint16_t processed_pedals[10];
 355:main.c        **** uint16_t prev_processed_pedals[10];
 356:main.c        **** uint8_t pedals8bit[10];
 357:main.c        **** int16_t prev_processed_volumePedal;
 358:main.c        **** int16_t processed_volumePedal;
 359:main.c        **** 
 360:main.c        **** 
 361:main.c        **** float fretMeasurements[4][4] ={
 362:main.c        **** 
 363:main.c        **** 		{62750.0f, 61600.0f, 31785.0f, 0.0f },
 364:main.c        **** 
 365:main.c        **** 		{39600.0f, 41500.0f, 15700.0f, 0.0f},
 366:main.c        **** 
 367:main.c        **** 		{27520.0f, 30200.0f, 8458.0f, 0.0f},
 368:main.c        **** 
 369:main.c        **** 		{9490.0f, 13600.0f, 2674.0f, 0.0f}
 370:main.c        **** 
 371:main.c        **** 	};
 372:main.c        **** #define NUM_MACROS 8
 373:main.c        **** #define MAX_NUM_PRESETS 64
 374:main.c        **** int currentPresetSelection = 0;
 375:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 376:main.c        **** uint8_t presetNumberToLoad = 0;
 377:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 378:main.c        **** 
 379:main.c        **** 
 380:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS][NAME_LENGTH_IN_BYTES];
 381:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 32


 382:main.c        **** 
 383:main.c        **** 
 384:main.c        **** float fretScaling[4] = {1.0f, 0.6666666666666f, 0.5f, 0.25f};
 385:main.c        **** 
 386:main.c        **** 
 387:main.c        **** #define MAX_ENCODERS 16
 388:main.c        **** 
 389:main.c        **** float pedalRatios[10];
 390:main.c        **** uint8_t last_mux = 1;
 391:main.c        **** volatile uint8_t main_counter = 0;
 392:main.c        **** uint8_t neck = 0;
 393:main.c        **** uint8_t dualSlider = 0;
 394:main.c        **** uint8_t enterUp = 1;
 395:main.c        **** uint8_t voice = 0;
 396:main.c        **** uint8_t editUp = 1;
 397:main.c        **** uint8_t oct1Up = 1;
 398:main.c        **** uint8_t oct4Up = 1;
 399:main.c        **** 
 400:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 401:main.c        **** int encoderNum = 0;
 402:main.c        **** uint8_t button1Up = 0;
 403:main.c        **** uint8_t button2Up = 0;
 404:main.c        **** uint8_t button3Up = 0;
 405:main.c        **** uint8_t button4Up = 0;
 406:main.c        **** uint8_t patchNum = 0;
 407:main.c        **** #define NUM_STRINGS 12
 408:main.c        **** #define NUM_PEDALS 10
 409:main.c        **** 
 410:main.c        **** 
 411:main.c        **** #define MAX_NUM_COPEDENTS 7
 412:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 413:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 414:main.c        **** 
 415:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 416:main.c        **** 
 417:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 418:main.c        **** 
 419:main.c        **** 
 420:main.c        **** float openStringFrequencies[NUM_STRINGS];
 421:main.c        **** float stringMappedPositions[NUM_STRINGS];
 422:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 423:main.c        **** float stringFrequencies[NUM_STRINGS];
 424:main.c        **** float stringOctave[NUM_STRINGS];
 425:main.c        **** float stringPitch[NUM_STRINGS];
 426:main.c        **** float stringMIDI[NUM_STRINGS];
 427:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 428:main.c        **** int OLEDcount = 0;
 429:main.c        **** 
 430:main.c        **** int mainOLEDWaitingToSend = 0;
 431:main.c        **** int macroOLEDWaitingToSend = 0;
 432:main.c        **** 
 433:main.c        **** int presetAlreadyDisplayed[MAX_NUM_PRESETS];
 434:main.c        **** 
 435:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 436:main.c        **** 
 437:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 438:main.c        **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 33


 1372              		.loc 1 438 0
 1373              		.cfi_startproc
 1374              		@ args = 4, pretend = 0, frame = 16
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376 0000 B0B5     		push	{r4, r5, r7, lr}
 1377              		.cfi_def_cfa_offset 16
 1378              		.cfi_offset 4, -16
 1379              		.cfi_offset 5, -12
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 84B0     		sub	sp, sp, #16
 1383              		.cfi_def_cfa_offset 32
 1384 0004 00AF     		add	r7, sp, #0
 1385              		.cfi_def_cfa_register 7
 1386 0006 F860     		str	r0, [r7, #12]	@ float
 1387 0008 B960     		str	r1, [r7, #8]	@ float
 1388 000a 7A60     		str	r2, [r7, #4]	@ float
 1389 000c 3B60     		str	r3, [r7]	@ float
 439:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1390              		.loc 1 439 0
 1391 000e 3968     		ldr	r1, [r7]	@ float
 1392 0010 386A     		ldr	r0, [r7, #32]	@ float
 1393 0012 FFF7FEFF 		bl	__aeabi_fsub
 1394 0016 0346     		mov	r3, r0
 1395 0018 1C46     		mov	r4, r3
 1396 001a B968     		ldr	r1, [r7, #8]	@ float
 1397 001c F868     		ldr	r0, [r7, #12]	@ float
 1398 001e FFF7FEFF 		bl	__aeabi_fsub
 1399 0022 0346     		mov	r3, r0
 1400 0024 1D46     		mov	r5, r3
 1401 0026 B968     		ldr	r1, [r7, #8]	@ float
 1402 0028 7868     		ldr	r0, [r7, #4]	@ float
 1403 002a FFF7FEFF 		bl	__aeabi_fsub
 1404 002e 0346     		mov	r3, r0
 1405 0030 1946     		mov	r1, r3
 1406 0032 2846     		mov	r0, r5
 1407 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1408 0038 0346     		mov	r3, r0
 1409 003a 1946     		mov	r1, r3
 1410 003c 2046     		mov	r0, r4
 1411 003e FFF7FEFF 		bl	__aeabi_fmul
 1412 0042 0346     		mov	r3, r0
 1413 0044 3968     		ldr	r1, [r7]	@ float
 1414 0046 1846     		mov	r0, r3
 1415 0048 FFF7FEFF 		bl	__aeabi_fadd
 1416 004c 0346     		mov	r3, r0
 440:main.c        **** }
 1417              		.loc 1 440 0
 1418 004e 1846     		mov	r0, r3
 1419 0050 1037     		adds	r7, r7, #16
 1420              		.cfi_def_cfa_offset 16
 1421 0052 BD46     		mov	sp, r7
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 0054 B0BD     		pop	{r4, r5, r7, pc}
 1425              		.cfi_endproc
 1426              	.LFE72:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 34


 1427              		.size	map, .-map
 1428              		.global	currentNeck
 1429 0056 00BF     		.bss
 1430              		.align	2
 1431              		.type	currentNeck, %object
 1432              		.size	currentNeck, 4
 1433              	currentNeck:
 1434 00bc 00000000 		.space	4
 1435              		.global	editMode
 1436              		.align	2
 1437              		.type	editMode, %object
 1438              		.size	editMode, 4
 1439              	editMode:
 1440 00c0 00000000 		.space	4
 1441              		.global	calibrationMode
 1442              		.align	2
 1443              		.type	calibrationMode, %object
 1444              		.size	calibrationMode, 4
 1445              	calibrationMode:
 1446 00c4 00000000 		.space	4
 1447              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1448              		.align	2
 1449              		.global	burnInitialPedalZeroPositions
 1450              		.thumb
 1451              		.thumb_func
 1452              		.type	burnInitialPedalZeroPositions, %function
 1453              	burnInitialPedalZeroPositions:
 1454              	.LFB73:
 441:main.c        **** void displayCurrentPresetNameAndCopedent();
 442:main.c        **** 
 443:main.c        **** int currentNeck = 0;
 444:main.c        **** 
 445:main.c        **** int editMode = 0;
 446:main.c        **** int calibrationMode = 0;
 447:main.c        **** 
 448:main.c        **** void burnInitialPedalZeroPositions()
 449:main.c        **** {
 1455              		.loc 1 449 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459              		@ link register save eliminated.
 1460 0000 80B4     		push	{r7}
 1461              		.cfi_def_cfa_offset 4
 1462              		.cfi_offset 7, -4
 1463 0002 00AF     		add	r7, sp, #0
 1464              		.cfi_def_cfa_register 7
 450:main.c        ****     
 451:main.c        **** }
 1465              		.loc 1 451 0
 1466 0004 00BF     		nop
 1467 0006 BD46     		mov	sp, r7
 1468              		.cfi_def_cfa_register 13
 1469              		@ sp needed
 1470 0008 80BC     		pop	{r7}
 1471              		.cfi_restore 7
 1472              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 35


 1473 000a 7047     		bx	lr
 1474              		.cfi_endproc
 1475              	.LFE73:
 1476              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1477              		.global	__aeabi_ui2f
 1478              		.global	__aeabi_i2f
 1479              		.global	__aeabi_f2uiz
 1480              		.section	.text.calculatePedalRatios,"ax",%progbits
 1481              		.align	2
 1482              		.global	calculatePedalRatios
 1483              		.thumb
 1484              		.thumb_func
 1485              		.type	calculatePedalRatios, %function
 1486              	calculatePedalRatios:
 1487              	.LFB74:
 452:main.c        **** 
 453:main.c        **** 
 454:main.c        **** void calculatePedalRatios()
 455:main.c        **** {
 1488              		.loc 1 455 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 8
 1491              		@ frame_needed = 1, uses_anonymous_args = 0
 1492 0000 90B5     		push	{r4, r7, lr}
 1493              		.cfi_def_cfa_offset 12
 1494              		.cfi_offset 4, -12
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 1497 0002 83B0     		sub	sp, sp, #12
 1498              		.cfi_def_cfa_offset 24
 1499 0004 00AF     		add	r7, sp, #0
 1500              		.cfi_def_cfa_register 7
 1501              	.LBB3:
 456:main.c        **** 
 457:main.c        ****     //add deadzones on edges of pedal sensing
 458:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1502              		.loc 1 458 0
 1503 0006 0023     		movs	r3, #0
 1504 0008 7B60     		str	r3, [r7, #4]
 1505 000a 6EE0     		b	.L57
 1506              	.L58:
 1507              	.LBB4:
 459:main.c        ****     {
 460:main.c        **** 
 461:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1508              		.loc 1 461 0 discriminator 3
 1509 000c 3A4A     		ldr	r2, .L59
 1510 000e 7B68     		ldr	r3, [r7, #4]
 1511 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1512 0014 1846     		mov	r0, r3
 1513 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1514 001a 0446     		mov	r4, r0
 1515 001c 374A     		ldr	r2, .L59+4
 1516 001e 7B68     		ldr	r3, [r7, #4]
 1517 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1518 0024 1846     		mov	r0, r3
 1519 0026 FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 36


 1520 002a 0346     		mov	r3, r0
 1521 002c 1946     		mov	r1, r3
 1522 002e 2046     		mov	r0, r4
 1523 0030 FFF7FEFF 		bl	__aeabi_fsub
 1524 0034 0346     		mov	r3, r0
 1525 0036 3B60     		str	r3, [r7]	@ float
 462:main.c        ****         pedals_low[i] = pedals_low[i] + (0.1f * pedalDiff);
 1526              		.loc 1 462 0 discriminator 3
 1527 0038 304A     		ldr	r2, .L59+4
 1528 003a 7B68     		ldr	r3, [r7, #4]
 1529 003c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1530 0040 1846     		mov	r0, r3
 1531 0042 FFF7FEFF 		bl	__aeabi_i2f
 1532 0046 0446     		mov	r4, r0
 1533 0048 2D49     		ldr	r1, .L59+8
 1534 004a 3868     		ldr	r0, [r7]	@ float
 1535 004c FFF7FEFF 		bl	__aeabi_fmul
 1536 0050 0346     		mov	r3, r0
 1537 0052 1946     		mov	r1, r3
 1538 0054 2046     		mov	r0, r4
 1539 0056 FFF7FEFF 		bl	__aeabi_fadd
 1540 005a 0346     		mov	r3, r0
 1541 005c 1846     		mov	r0, r3
 1542 005e FFF7FEFF 		bl	__aeabi_f2uiz
 1543 0062 0346     		mov	r3, r0
 1544 0064 99B2     		uxth	r1, r3
 1545 0066 254A     		ldr	r2, .L59+4
 1546 0068 7B68     		ldr	r3, [r7, #4]
 1547 006a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 463:main.c        ****         pedals_high[i] = pedals_high[i] - (0.1f * pedalDiff);
 1548              		.loc 1 463 0 discriminator 3
 1549 006e 224A     		ldr	r2, .L59
 1550 0070 7B68     		ldr	r3, [r7, #4]
 1551 0072 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1552 0076 1846     		mov	r0, r3
 1553 0078 FFF7FEFF 		bl	__aeabi_i2f
 1554 007c 0446     		mov	r4, r0
 1555 007e 2049     		ldr	r1, .L59+8
 1556 0080 3868     		ldr	r0, [r7]	@ float
 1557 0082 FFF7FEFF 		bl	__aeabi_fmul
 1558 0086 0346     		mov	r3, r0
 1559 0088 1946     		mov	r1, r3
 1560 008a 2046     		mov	r0, r4
 1561 008c FFF7FEFF 		bl	__aeabi_fsub
 1562 0090 0346     		mov	r3, r0
 1563 0092 1846     		mov	r0, r3
 1564 0094 FFF7FEFF 		bl	__aeabi_f2uiz
 1565 0098 0346     		mov	r3, r0
 1566 009a 99B2     		uxth	r1, r3
 1567 009c 164A     		ldr	r2, .L59
 1568 009e 7B68     		ldr	r3, [r7, #4]
 1569 00a0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 464:main.c        ****         pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1570              		.loc 1 464 0 discriminator 3
 1571 00a4 144A     		ldr	r2, .L59
 1572 00a6 7B68     		ldr	r3, [r7, #4]
 1573 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 37


 1574 00ac 1846     		mov	r0, r3
 1575 00ae FFF7FEFF 		bl	__aeabi_ui2f
 1576 00b2 0446     		mov	r4, r0
 1577 00b4 114A     		ldr	r2, .L59+4
 1578 00b6 7B68     		ldr	r3, [r7, #4]
 1579 00b8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1580 00bc 1846     		mov	r0, r3
 1581 00be FFF7FEFF 		bl	__aeabi_ui2f
 1582 00c2 0346     		mov	r3, r0
 1583 00c4 1946     		mov	r1, r3
 1584 00c6 2046     		mov	r0, r4
 1585 00c8 FFF7FEFF 		bl	__aeabi_fsub
 1586 00cc 0346     		mov	r3, r0
 1587 00ce 3B60     		str	r3, [r7]	@ float
 465:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1588              		.loc 1 465 0 discriminator 3
 1589 00d0 3968     		ldr	r1, [r7]	@ float
 1590 00d2 0C48     		ldr	r0, .L59+12
 1591 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1592 00d8 0346     		mov	r3, r0
 1593 00da 1946     		mov	r1, r3
 1594 00dc 0A4A     		ldr	r2, .L59+16
 1595 00de 7B68     		ldr	r3, [r7, #4]
 1596 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1597              	.LBE4:
 458:main.c        ****     {
 1598              		.loc 1 458 0 discriminator 3
 1599 00e4 7B68     		ldr	r3, [r7, #4]
 1600 00e6 0133     		adds	r3, r3, #1
 1601 00e8 7B60     		str	r3, [r7, #4]
 1602              	.L57:
 458:main.c        ****     {
 1603              		.loc 1 458 0 is_stmt 0 discriminator 1
 1604 00ea 7B68     		ldr	r3, [r7, #4]
 1605 00ec 092B     		cmp	r3, #9
 1606 00ee 8DDD     		ble	.L58
 1607              	.LBE3:
 466:main.c        ****     }
 467:main.c        **** }
 1608              		.loc 1 467 0 is_stmt 1
 1609 00f0 00BF     		nop
 1610 00f2 0C37     		adds	r7, r7, #12
 1611              		.cfi_def_cfa_offset 12
 1612 00f4 BD46     		mov	sp, r7
 1613              		.cfi_def_cfa_register 13
 1614              		@ sp needed
 1615 00f6 90BD     		pop	{r4, r7, pc}
 1616              	.L60:
 1617              		.align	2
 1618              	.L59:
 1619 00f8 00000000 		.word	pedals_high
 1620 00fc 00000000 		.word	pedals_low
 1621 0100 CDCCCC3D 		.word	1036831949
 1622 0104 00F07F45 		.word	1166012416
 1623 0108 00000000 		.word	pedalRatios
 1624              		.cfi_endproc
 1625              	.LFE74:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 38


 1626              		.size	calculatePedalRatios, .-calculatePedalRatios
 1627              		.section	.rodata
 1628              		.align	2
 1629              	.LC0:
 1630 0400 2000     		.ascii	" \000"
 1631              		.global	__aeabi_f2iz
 1632              		.section	.text.main,"ax",%progbits
 1633              		.align	2
 1634              		.global	main
 1635              		.thumb
 1636              		.thumb_func
 1637              		.type	main, %function
 1638              	main:
 1639              	.LFB75:
 468:main.c        **** int main(void)
 469:main.c        **** {
 1640              		.loc 1 469 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 144
 1643              		@ frame_needed = 1, uses_anonymous_args = 0
 1644 0000 90B5     		push	{r4, r7, lr}
 1645              		.cfi_def_cfa_offset 12
 1646              		.cfi_offset 4, -12
 1647              		.cfi_offset 7, -8
 1648              		.cfi_offset 14, -4
 1649 0002 A5B0     		sub	sp, sp, #148
 1650              		.cfi_def_cfa_offset 160
 1651 0004 00AF     		add	r7, sp, #0
 1652              		.cfi_def_cfa_register 7
 470:main.c        ****     
 471:main.c        **** 	CYGlobalIntEnable; 
 1653              		.loc 1 471 0
 1654              		.syntax unified
 1655              	@ 471 "main.c" 1
 1656 0006 62B6     		CPSIE   i
 1657              	@ 0 "" 2
 472:main.c        **** 
 473:main.c        ****     EEPROM_Start();
 1658              		.loc 1 473 0
 1659              		.thumb
 1660              		.syntax unified
 1661 0008 FFF7FEFF 		bl	EEPROM_Start
 474:main.c        **** 
 475:main.c        ****     
 476:main.c        ****     CyDelay(2000);
 1662              		.loc 1 476 0
 1663 000c 4FF4FA60 		mov	r0, #2000
 1664 0010 FFF7FEFF 		bl	CyDelay
 477:main.c        ****     //read from eeprom which copedents are loaded on which necks
 478:main.c        ****     necks[0] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1665              		.loc 1 478 0
 1666 0014 0020     		movs	r0, #0
 1667 0016 FFF7FEFF 		bl	EEPROM_ReadByte
 1668 001a 0346     		mov	r3, r0
 1669 001c 1A46     		mov	r2, r3
 1670 001e 9A4B     		ldr	r3, .L194
 1671 0020 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 39


 479:main.c        ****     necks[1] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET + 1);
 1672              		.loc 1 479 0
 1673 0022 0120     		movs	r0, #1
 1674 0024 FFF7FEFF 		bl	EEPROM_ReadByte
 1675 0028 0346     		mov	r3, r0
 1676 002a 1A46     		mov	r2, r3
 1677 002c 964B     		ldr	r3, .L194
 1678 002e 5A70     		strb	r2, [r3, #1]
 1679              	.LBB5:
 480:main.c        ****     
 481:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 1680              		.loc 1 481 0
 1681 0030 0023     		movs	r3, #0
 1682 0032 C7F88C30 		str	r3, [r7, #140]
 1683 0036 BBE0     		b	.L62
 1684              	.L69:
 1685              	.LBB6:
 482:main.c        ****     {
 483:main.c        ****         
 484:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
 1686              		.loc 1 484 0
 1687 0038 0023     		movs	r3, #0
 1688 003a C7F88830 		str	r3, [r7, #136]
 1689 003e 29E0     		b	.L63
 1690              	.L64:
 485:main.c        ****         {
 486:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 1691              		.loc 1 486 0 discriminator 3
 1692 0040 D7F88C30 		ldr	r3, [r7, #140]
 1693 0044 9BB2     		uxth	r3, r3
 1694 0046 1A46     		mov	r2, r3	@ movhi
 1695 0048 1201     		lsls	r2, r2, #4
 1696 004a 1A44     		add	r2, r2, r3
 1697 004c 9200     		lsls	r2, r2, #2
 1698 004e 1A44     		add	r2, r2, r3
 1699 0050 5200     		lsls	r2, r2, #1
 1700 0052 1344     		add	r3, r3, r2
 1701 0054 5B00     		lsls	r3, r3, #1
 1702 0056 9AB2     		uxth	r2, r3
 1703 0058 D7F88830 		ldr	r3, [r7, #136]
 1704 005c 9BB2     		uxth	r3, r3
 1705 005e 1344     		add	r3, r3, r2
 1706 0060 9BB2     		uxth	r3, r3
 1707 0062 0233     		adds	r3, r3, #2
 1708 0064 9BB2     		uxth	r3, r3
 1709 0066 1846     		mov	r0, r3
 1710 0068 FFF7FEFF 		bl	EEPROM_ReadByte
 1711 006c 0346     		mov	r3, r0
 1712 006e 1846     		mov	r0, r3
 1713 0070 8649     		ldr	r1, .L194+4
 1714 0072 D7F88C20 		ldr	r2, [r7, #140]
 1715 0076 1346     		mov	r3, r2
 1716 0078 DB00     		lsls	r3, r3, #3
 1717 007a 9B1A     		subs	r3, r3, r2
 1718 007c 5B00     		lsls	r3, r3, #1
 1719 007e CA18     		adds	r2, r1, r3
 1720 0080 D7F88830 		ldr	r3, [r7, #136]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 40


 1721 0084 1344     		add	r3, r3, r2
 1722 0086 0246     		mov	r2, r0
 1723 0088 1A70     		strb	r2, [r3]
 484:main.c        ****         {
 1724              		.loc 1 484 0 discriminator 3
 1725 008a D7F88830 		ldr	r3, [r7, #136]
 1726 008e 0133     		adds	r3, r3, #1
 1727 0090 C7F88830 		str	r3, [r7, #136]
 1728              	.L63:
 484:main.c        ****         {
 1729              		.loc 1 484 0 is_stmt 0 discriminator 1
 1730 0094 D7F88830 		ldr	r3, [r7, #136]
 1731 0098 0D2B     		cmp	r3, #13
 1732 009a D1DD     		ble	.L64
 1733              	.LBE6:
 1734              	.LBB7:
 487:main.c        ****         }
 488:main.c        ****         for (int i = 0; i < 11; i++)
 1735              		.loc 1 488 0 is_stmt 1
 1736 009c 0023     		movs	r3, #0
 1737 009e C7F88430 		str	r3, [r7, #132]
 1738 00a2 7BE0     		b	.L65
 1739              	.L68:
 1740              	.LBB8:
 489:main.c        ****     	{
 490:main.c        ****     		int pedalStartLoc = (i*24);
 1741              		.loc 1 490 0
 1742 00a4 D7F88420 		ldr	r2, [r7, #132]
 1743 00a8 1346     		mov	r3, r2
 1744 00aa 5B00     		lsls	r3, r3, #1
 1745 00ac 1344     		add	r3, r3, r2
 1746 00ae DB00     		lsls	r3, r3, #3
 1747 00b0 BB62     		str	r3, [r7, #40]
 1748              	.LBB9:
 491:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 1749              		.loc 1 491 0
 1750 00b2 0023     		movs	r3, #0
 1751 00b4 C7F88030 		str	r3, [r7, #128]
 1752 00b8 67E0     		b	.L66
 1753              	.L67:
 1754              	.LBB10:
 492:main.c        ****     		{
 493:main.c        ****                 
 494:main.c        ****                 int stringStartLoc = (j*2);
 1755              		.loc 1 494 0 discriminator 3
 1756 00ba D7F88030 		ldr	r3, [r7, #128]
 1757 00be 5B00     		lsls	r3, r3, #1
 1758 00c0 7B62     		str	r3, [r7, #36]
 495:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 1759              		.loc 1 495 0 discriminator 3
 1760 00c2 7B6A     		ldr	r3, [r7, #36]
 1761 00c4 9AB2     		uxth	r2, r3
 1762 00c6 BB6A     		ldr	r3, [r7, #40]
 1763 00c8 9BB2     		uxth	r3, r3
 1764 00ca 1344     		add	r3, r3, r2
 1765 00cc 9AB2     		uxth	r2, r3
 1766 00ce D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 41


 1767 00d2 9BB2     		uxth	r3, r3
 1768 00d4 1946     		mov	r1, r3	@ movhi
 1769 00d6 0901     		lsls	r1, r1, #4
 1770 00d8 1944     		add	r1, r1, r3
 1771 00da 8900     		lsls	r1, r1, #2
 1772 00dc 1944     		add	r1, r1, r3
 1773 00de 4900     		lsls	r1, r1, #1
 1774 00e0 0B44     		add	r3, r3, r1
 1775 00e2 5B00     		lsls	r3, r3, #1
 1776 00e4 9BB2     		uxth	r3, r3
 1777 00e6 1344     		add	r3, r3, r2
 1778 00e8 9BB2     		uxth	r3, r3
 1779 00ea 1033     		adds	r3, r3, #16
 1780 00ec 9BB2     		uxth	r3, r3
 1781 00ee 1846     		mov	r0, r3
 1782 00f0 FFF7FEFF 		bl	EEPROM_ReadByte
 1783 00f4 0346     		mov	r3, r0
 1784 00f6 7B84     		strh	r3, [r7, #34]	@ movhi
 496:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 1785              		.loc 1 496 0 discriminator 3
 1786 00f8 7B6A     		ldr	r3, [r7, #36]
 1787 00fa 9AB2     		uxth	r2, r3
 1788 00fc BB6A     		ldr	r3, [r7, #40]
 1789 00fe 9BB2     		uxth	r3, r3
 1790 0100 1344     		add	r3, r3, r2
 1791 0102 9AB2     		uxth	r2, r3
 1792 0104 D7F88C30 		ldr	r3, [r7, #140]
 1793 0108 9BB2     		uxth	r3, r3
 1794 010a 1946     		mov	r1, r3	@ movhi
 1795 010c 0901     		lsls	r1, r1, #4
 1796 010e 1944     		add	r1, r1, r3
 1797 0110 8900     		lsls	r1, r1, #2
 1798 0112 1944     		add	r1, r1, r3
 1799 0114 4900     		lsls	r1, r1, #1
 1800 0116 0B44     		add	r3, r3, r1
 1801 0118 5B00     		lsls	r3, r3, #1
 1802 011a 9BB2     		uxth	r3, r3
 1803 011c 1344     		add	r3, r3, r2
 1804 011e 9BB2     		uxth	r3, r3
 1805 0120 1133     		adds	r3, r3, #17
 1806 0122 9BB2     		uxth	r3, r3
 1807 0124 1846     		mov	r0, r3
 1808 0126 FFF7FEFF 		bl	EEPROM_ReadByte
 1809 012a 0346     		mov	r3, r0
 1810 012c 3B84     		strh	r3, [r7, #32]	@ movhi
 497:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 1811              		.loc 1 497 0 discriminator 3
 1812 012e 7B8C     		ldrh	r3, [r7, #34]
 1813 0130 1A02     		lsls	r2, r3, #8
 1814 0132 3B8C     		ldrh	r3, [r7, #32]
 1815 0134 1344     		add	r3, r3, r2
 1816 0136 1846     		mov	r0, r3
 1817 0138 FFF7FEFF 		bl	__aeabi_i2f
 1818 013c 0346     		mov	r3, r0
 1819 013e 4FF06E51 		mov	r1, #998244352
 1820 0142 1846     		mov	r0, r3
 1821 0144 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 42


 1822 0148 0346     		mov	r3, r0
 1823 014a 4FF08641 		mov	r1, #1124073472
 1824 014e 1846     		mov	r0, r3
 1825 0150 FFF7FEFF 		bl	__aeabi_fsub
 1826 0154 0346     		mov	r3, r0
 1827 0156 1C46     		mov	r4, r3
 1828 0158 4D48     		ldr	r0, .L194+8
 1829 015a D7F88430 		ldr	r3, [r7, #132]
 1830 015e D7F88C10 		ldr	r1, [r7, #140]
 1831 0162 1A46     		mov	r2, r3
 1832 0164 5200     		lsls	r2, r2, #1
 1833 0166 1A44     		add	r2, r2, r3
 1834 0168 9300     		lsls	r3, r2, #2
 1835 016a 1A46     		mov	r2, r3
 1836 016c 0B46     		mov	r3, r1
 1837 016e 5B01     		lsls	r3, r3, #5
 1838 0170 0B44     		add	r3, r3, r1
 1839 0172 9B00     		lsls	r3, r3, #2
 1840 0174 1A44     		add	r2, r2, r3
 1841 0176 D7F88030 		ldr	r3, [r7, #128]
 1842 017a 1344     		add	r3, r3, r2
 1843 017c 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 1844              	.LBE10:
 491:main.c        ****     		{
 1845              		.loc 1 491 0 discriminator 3
 1846 0180 D7F88030 		ldr	r3, [r7, #128]
 1847 0184 0133     		adds	r3, r3, #1
 1848 0186 C7F88030 		str	r3, [r7, #128]
 1849              	.L66:
 491:main.c        ****     		{
 1850              		.loc 1 491 0 is_stmt 0 discriminator 1
 1851 018a D7F88030 		ldr	r3, [r7, #128]
 1852 018e 0B2B     		cmp	r3, #11
 1853 0190 93DD     		ble	.L67
 1854              	.LBE9:
 1855              	.LBE8:
 488:main.c        ****     	{
 1856              		.loc 1 488 0 is_stmt 1 discriminator 2
 1857 0192 D7F88430 		ldr	r3, [r7, #132]
 1858 0196 0133     		adds	r3, r3, #1
 1859 0198 C7F88430 		str	r3, [r7, #132]
 1860              	.L65:
 488:main.c        ****     	{
 1861              		.loc 1 488 0 is_stmt 0 discriminator 1
 1862 019c D7F88430 		ldr	r3, [r7, #132]
 1863 01a0 0A2B     		cmp	r3, #10
 1864 01a2 7FF77FAF 		ble	.L68
 1865              	.LBE7:
 481:main.c        ****     {
 1866              		.loc 1 481 0 is_stmt 1 discriminator 2
 1867 01a6 D7F88C30 		ldr	r3, [r7, #140]
 1868 01aa 0133     		adds	r3, r3, #1
 1869 01ac C7F88C30 		str	r3, [r7, #140]
 1870              	.L62:
 481:main.c        ****     {
 1871              		.loc 1 481 0 is_stmt 0 discriminator 1
 1872 01b0 D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 43


 1873 01b4 062B     		cmp	r3, #6
 1874 01b6 7FF73FAF 		ble	.L69
 1875              	.LBE5:
 1876              	.LBB11:
 498:main.c        ****             }
 499:main.c        ****     	}
 500:main.c        ****     }
 501:main.c        **** 
 502:main.c        ****     
 503:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1877              		.loc 1 503 0 is_stmt 1
 1878 01ba 0023     		movs	r3, #0
 1879 01bc FB67     		str	r3, [r7, #124]
 1880 01be 41E0     		b	.L70
 1881              	.L71:
 504:main.c        ****     {
 505:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_ReadByt
 1882              		.loc 1 505 0 discriminator 3
 1883 01c0 FB6F     		ldr	r3, [r7, #124]
 1884 01c2 03F2E713 		addw	r3, r3, #487
 1885 01c6 9BB2     		uxth	r3, r3
 1886 01c8 9B00     		lsls	r3, r3, #2
 1887 01ca 9BB2     		uxth	r3, r3
 1888 01cc 1846     		mov	r0, r3
 1889 01ce FFF7FEFF 		bl	EEPROM_ReadByte
 1890 01d2 0346     		mov	r3, r0
 1891 01d4 9BB2     		uxth	r3, r3
 1892 01d6 1B02     		lsls	r3, r3, #8
 1893 01d8 9CB2     		uxth	r4, r3
 1894 01da FB6F     		ldr	r3, [r7, #124]
 1895 01dc 9BB2     		uxth	r3, r3
 1896 01de 9B00     		lsls	r3, r3, #2
 1897 01e0 9BB2     		uxth	r3, r3
 1898 01e2 03F29D73 		addw	r3, r3, #1949
 1899 01e6 9BB2     		uxth	r3, r3
 1900 01e8 1846     		mov	r0, r3
 1901 01ea FFF7FEFF 		bl	EEPROM_ReadByte
 1902 01ee 0346     		mov	r3, r0
 1903 01f0 9BB2     		uxth	r3, r3
 1904 01f2 2344     		add	r3, r3, r4
 1905 01f4 99B2     		uxth	r1, r3
 1906 01f6 274A     		ldr	r2, .L194+12
 1907 01f8 FB6F     		ldr	r3, [r7, #124]
 1908 01fa 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 506:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (EEPROM_
 1909              		.loc 1 506 0 discriminator 3
 1910 01fe FB6F     		ldr	r3, [r7, #124]
 1911 0200 9BB2     		uxth	r3, r3
 1912 0202 9B00     		lsls	r3, r3, #2
 1913 0204 9BB2     		uxth	r3, r3
 1914 0206 03F29E73 		addw	r3, r3, #1950
 1915 020a 9BB2     		uxth	r3, r3
 1916 020c 1846     		mov	r0, r3
 1917 020e FFF7FEFF 		bl	EEPROM_ReadByte
 1918 0212 0346     		mov	r3, r0
 1919 0214 9BB2     		uxth	r3, r3
 1920 0216 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 44


 1921 0218 9CB2     		uxth	r4, r3
 1922 021a FB6F     		ldr	r3, [r7, #124]
 1923 021c 9BB2     		uxth	r3, r3
 1924 021e 9B00     		lsls	r3, r3, #2
 1925 0220 9BB2     		uxth	r3, r3
 1926 0222 03F29F73 		addw	r3, r3, #1951
 1927 0226 9BB2     		uxth	r3, r3
 1928 0228 1846     		mov	r0, r3
 1929 022a FFF7FEFF 		bl	EEPROM_ReadByte
 1930 022e 0346     		mov	r3, r0
 1931 0230 9BB2     		uxth	r3, r3
 1932 0232 2344     		add	r3, r3, r4
 1933 0234 99B2     		uxth	r1, r3
 1934 0236 184A     		ldr	r2, .L194+16
 1935 0238 FB6F     		ldr	r3, [r7, #124]
 1936 023a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 503:main.c        ****     {
 1937              		.loc 1 503 0 discriminator 3
 1938 023e FB6F     		ldr	r3, [r7, #124]
 1939 0240 0133     		adds	r3, r3, #1
 1940 0242 FB67     		str	r3, [r7, #124]
 1941              	.L70:
 503:main.c        ****     {
 1942              		.loc 1 503 0 is_stmt 0 discriminator 1
 1943 0244 FB6F     		ldr	r3, [r7, #124]
 1944 0246 092B     		cmp	r3, #9
 1945 0248 BADD     		ble	.L71
 1946              	.LBE11:
 507:main.c        ****     }
 508:main.c        ****     calculatePedalRatios();
 1947              		.loc 1 508 0 is_stmt 1
 1948 024a FFF7FEFF 		bl	calculatePedalRatios
 1949              	.LBB12:
 509:main.c        ****                 
 510:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 511:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 1950              		.loc 1 511 0
 1951 024e 0023     		movs	r3, #0
 1952 0250 BB67     		str	r3, [r7, #120]
 1953 0252 4BE0     		b	.L72
 1954              	.L79:
 1955              	.LBB13:
 512:main.c        ****     {
 513:main.c        ****         for (int j = 0; j < NAME_LENGTH_IN_BYTES; j++)
 1956              		.loc 1 513 0
 1957 0254 0023     		movs	r3, #0
 1958 0256 7B67     		str	r3, [r7, #116]
 1959 0258 0DE0     		b	.L73
 1960              	.L74:
 514:main.c        ****         {
 515:main.c        ****             presetNamesArray[i][j] = 255;
 1961              		.loc 1 515 0 discriminator 3
 1962 025a 1049     		ldr	r1, .L194+20
 1963 025c BA6F     		ldr	r2, [r7, #120]
 1964 025e 1346     		mov	r3, r2
 1965 0260 DB00     		lsls	r3, r3, #3
 1966 0262 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 45


 1967 0264 5B00     		lsls	r3, r3, #1
 1968 0266 CA18     		adds	r2, r1, r3
 1969 0268 7B6F     		ldr	r3, [r7, #116]
 1970 026a 1344     		add	r3, r3, r2
 1971 026c FF22     		movs	r2, #255
 1972 026e 1A70     		strb	r2, [r3]
 513:main.c        ****         {
 1973              		.loc 1 513 0 discriminator 3
 1974 0270 7B6F     		ldr	r3, [r7, #116]
 1975 0272 0133     		adds	r3, r3, #1
 1976 0274 7B67     		str	r3, [r7, #116]
 1977              	.L73:
 513:main.c        ****         {
 1978              		.loc 1 513 0 is_stmt 0 discriminator 1
 1979 0276 7B6F     		ldr	r3, [r7, #116]
 1980 0278 0D2B     		cmp	r3, #13
 1981 027a EEDD     		ble	.L74
 1982              	.LBE13:
 1983              	.LBB14:
 516:main.c        **** 
 517:main.c        ****         }
 518:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 1984              		.loc 1 518 0 is_stmt 1
 1985 027c 0023     		movs	r3, #0
 1986 027e 3B67     		str	r3, [r7, #112]
 1987 0280 29E0     		b	.L75
 1988              	.L78:
 1989              	.LBB15:
 519:main.c        ****         {
 520:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 1990              		.loc 1 520 0
 1991 0282 0023     		movs	r3, #0
 1992 0284 FB66     		str	r3, [r7, #108]
 1993 0286 20E0     		b	.L76
 1994              	.L195:
 1995              		.align	2
 1996              	.L194:
 1997 0288 00000000 		.word	necks
 1998 028c 00000000 		.word	copedentNamesArray
 1999 0290 00000000 		.word	copedent
 2000 0294 00000000 		.word	pedals_low
 2001 0298 00000000 		.word	pedals_high
 2002 029c 00000000 		.word	presetNamesArray
 2003              	.L77:
 521:main.c        ****             {
 522:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2004              		.loc 1 522 0 discriminator 3
 2005 02a0 5348     		ldr	r0, .L196
 2006 02a2 3B6F     		ldr	r3, [r7, #112]
 2007 02a4 B96F     		ldr	r1, [r7, #120]
 2008 02a6 1A46     		mov	r2, r3
 2009 02a8 D200     		lsls	r2, r2, #3
 2010 02aa D21A     		subs	r2, r2, r3
 2011 02ac 5300     		lsls	r3, r2, #1
 2012 02ae 1A46     		mov	r2, r3
 2013 02b0 0B46     		mov	r3, r1
 2014 02b2 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 46


 2015 02b4 5B1A     		subs	r3, r3, r1
 2016 02b6 1B01     		lsls	r3, r3, #4
 2017 02b8 1344     		add	r3, r3, r2
 2018 02ba C218     		adds	r2, r0, r3
 2019 02bc FB6E     		ldr	r3, [r7, #108]
 2020 02be 1344     		add	r3, r3, r2
 2021 02c0 FF22     		movs	r2, #255
 2022 02c2 1A70     		strb	r2, [r3]
 520:main.c        ****             {
 2023              		.loc 1 520 0 discriminator 3
 2024 02c4 FB6E     		ldr	r3, [r7, #108]
 2025 02c6 0133     		adds	r3, r3, #1
 2026 02c8 FB66     		str	r3, [r7, #108]
 2027              	.L76:
 520:main.c        ****             {
 2028              		.loc 1 520 0 is_stmt 0 discriminator 1
 2029 02ca FB6E     		ldr	r3, [r7, #108]
 2030 02cc 0D2B     		cmp	r3, #13
 2031 02ce E7DD     		ble	.L77
 2032              	.LBE15:
 518:main.c        ****         {
 2033              		.loc 1 518 0 is_stmt 1 discriminator 2
 2034 02d0 3B6F     		ldr	r3, [r7, #112]
 2035 02d2 0133     		adds	r3, r3, #1
 2036 02d4 3B67     		str	r3, [r7, #112]
 2037              	.L75:
 518:main.c        ****         {
 2038              		.loc 1 518 0 is_stmt 0 discriminator 1
 2039 02d6 3B6F     		ldr	r3, [r7, #112]
 2040 02d8 072B     		cmp	r3, #7
 2041 02da D2DD     		ble	.L78
 2042              	.LBE14:
 523:main.c        ****             }
 524:main.c        ****         }
 525:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2043              		.loc 1 525 0 is_stmt 1 discriminator 2
 2044 02dc 454A     		ldr	r2, .L196+4
 2045 02de BB6F     		ldr	r3, [r7, #120]
 2046 02e0 0021     		movs	r1, #0
 2047 02e2 42F82310 		str	r1, [r2, r3, lsl #2]
 511:main.c        ****     {
 2048              		.loc 1 511 0 discriminator 2
 2049 02e6 BB6F     		ldr	r3, [r7, #120]
 2050 02e8 0133     		adds	r3, r3, #1
 2051 02ea BB67     		str	r3, [r7, #120]
 2052              	.L72:
 511:main.c        ****     {
 2053              		.loc 1 511 0 is_stmt 0 discriminator 1
 2054 02ec BB6F     		ldr	r3, [r7, #120]
 2055 02ee 3F2B     		cmp	r3, #63
 2056 02f0 B0DD     		ble	.L79
 2057              	.LBE12:
 526:main.c        ****     }
 527:main.c        ****     
 528:main.c        ****     QuadDec_1_Start();
 2058              		.loc 1 528 0 is_stmt 1
 2059 02f2 FFF7FEFF 		bl	QuadDec_1_Start
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 47


 529:main.c        ****     LED_amber1_Write(0);
 2060              		.loc 1 529 0
 2061 02f6 0020     		movs	r0, #0
 2062 02f8 FFF7FEFF 		bl	LED_amber1_Write
 530:main.c        ****     LED_amber2_Write(1);
 2063              		.loc 1 530 0
 2064 02fc 0120     		movs	r0, #1
 2065 02fe FFF7FEFF 		bl	LED_amber2_Write
 531:main.c        ****     LED_amber3_Write(0);
 2066              		.loc 1 531 0
 2067 0302 0020     		movs	r0, #0
 2068 0304 FFF7FEFF 		bl	LED_amber3_Write
 532:main.c        ****     LED_amber4_Write(0);
 2069              		.loc 1 532 0
 2070 0308 0020     		movs	r0, #0
 2071 030a FFF7FEFF 		bl	LED_amber4_Write
 533:main.c        **** 
 534:main.c        **** 
 535:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 2072              		.loc 1 535 0
 2073 030e 3A4B     		ldr	r3, .L196+8
 2074 0310 1846     		mov	r0, r3
 2075 0312 FFF7FEFF 		bl	Em_EEPROM_Init
 2076 0316 0346     		mov	r3, r0
 2077 0318 1A46     		mov	r2, r3
 2078 031a 384B     		ldr	r3, .L196+12
 2079 031c 1A70     		strb	r2, [r3]
 536:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 537:main.c        ****     {
 538:main.c        ****        // HandleError();
 539:main.c        ****     }
 540:main.c        ****     uint8_t myArrayCounter = 0;
 2080              		.loc 1 540 0
 2081 031e 0023     		movs	r3, #0
 2082 0320 FB77     		strb	r3, [r7, #31]
 541:main.c        ****   
 542:main.c        ****     I2C_1_Start();  
 2083              		.loc 1 542 0
 2084 0322 FFF7FEFF 		bl	I2C_1_Start
 543:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 2085              		.loc 1 543 0
 2086 0326 0120     		movs	r0, #1
 2087 0328 FFF7FEFF 		bl	USB_SetPowerStatus
 544:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 2088              		.loc 1 544 0
 2089 032c 3448     		ldr	r0, .L196+16
 2090 032e FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 545:main.c        **** 
 546:main.c        ****     
 547:main.c        ****     LED_red1_Write(0);
 2091              		.loc 1 547 0
 2092 0332 0020     		movs	r0, #0
 2093 0334 FFF7FEFF 		bl	LED_red1_Write
 548:main.c        ****     LED_green2_Write(1);
 2094              		.loc 1 548 0
 2095 0338 0120     		movs	r0, #1
 2096 033a FFF7FEFF 		bl	LED_green2_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 48


 549:main.c        **** 
 550:main.c        ****     
 551:main.c        ****     ADC_SAR_Seq_1_Start();
 2097              		.loc 1 551 0
 2098 033e FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 552:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2099              		.loc 1 552 0
 2100 0342 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 553:main.c        **** 
 554:main.c        ****             
 555:main.c        ****     currentCopedent = necks[currentNeck];
 2101              		.loc 1 555 0
 2102 0346 2F4B     		ldr	r3, .L196+20
 2103 0348 1B68     		ldr	r3, [r3]
 2104 034a 2F4A     		ldr	r2, .L196+24
 2105 034c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2106 034e 2F4B     		ldr	r3, .L196+28
 2107 0350 1A70     		strb	r2, [r3]
 556:main.c        ****     CyDelay(10);
 2108              		.loc 1 556 0
 2109 0352 0A20     		movs	r0, #10
 2110 0354 FFF7FEFF 		bl	CyDelay
 557:main.c        ****     
 558:main.c        ****     //set up for the OLED screen's first write
 559:main.c        ****     I2Cbuff1[0] = 1<<6;
 2111              		.loc 1 559 0
 2112 0358 2D4B     		ldr	r3, .L196+32
 2113 035a 4022     		movs	r2, #64
 2114 035c 1A70     		strb	r2, [r3]
 560:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2115              		.loc 1 560 0
 2116 035e 0022     		movs	r2, #0
 2117 0360 0121     		movs	r1, #1
 2118 0362 7020     		movs	r0, #112
 2119 0364 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2120 0368 0346     		mov	r3, r0
 2121 036a 1A46     		mov	r2, r3
 2122 036c 294B     		ldr	r3, .L196+36
 2123 036e 1A60     		str	r2, [r3]
 561:main.c        ****     myGFX_init(128, 64);
 2124              		.loc 1 561 0
 2125 0370 4021     		movs	r1, #64
 2126 0372 8020     		movs	r0, #128
 2127 0374 FFF7FEFF 		bl	myGFX_init
 562:main.c        ****     myGFX_setFont(0);
 2128              		.loc 1 562 0
 2129 0378 0020     		movs	r0, #0
 2130 037a FFF7FEFF 		bl	myGFX_setFont
 563:main.c        ****     OLED_init(128, 64);
 2131              		.loc 1 563 0
 2132 037e 4021     		movs	r1, #64
 2133 0380 8020     		movs	r0, #128
 2134 0382 FFF7FEFF 		bl	OLED_init
 564:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2135              		.loc 1 564 0
 2136 0386 214B     		ldr	r3, .L196+28
 2137 0388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 49


 2138 038a 1846     		mov	r0, r3
 2139 038c 0323     		movs	r3, #3
 2140 038e 0022     		movs	r2, #0
 2141 0390 0221     		movs	r1, #2
 2142 0392 FFF7FEFF 		bl	OLEDwriteInt
 565:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2143              		.loc 1 565 0
 2144 0396 FFF7FEFF 		bl	OLEDgetCursor
 2145 039a 0246     		mov	r2, r0
 2146 039c 0323     		movs	r3, #3
 2147 039e 0121     		movs	r1, #1
 2148 03a0 1D48     		ldr	r0, .L196+40
 2149 03a2 FFF7FEFF 		bl	OLEDwriteString
 566:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH, 
 2150              		.loc 1 566 0
 2151 03a6 194B     		ldr	r3, .L196+28
 2152 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2153 03aa 1A46     		mov	r2, r3
 2154 03ac 1346     		mov	r3, r2
 2155 03ae DB00     		lsls	r3, r3, #3
 2156 03b0 9B1A     		subs	r3, r3, r2
 2157 03b2 5B00     		lsls	r3, r3, #1
 2158 03b4 194A     		ldr	r2, .L196+44
 2159 03b6 9C18     		adds	r4, r3, r2
 2160 03b8 FFF7FEFF 		bl	OLEDgetCursor
 2161 03bc 0246     		mov	r2, r0
 2162 03be 0323     		movs	r3, #3
 2163 03c0 0821     		movs	r1, #8
 2164 03c2 2046     		mov	r0, r4
 2165 03c4 FFF7FEFF 		bl	OLEDwriteString
 567:main.c        ****     OLED_draw(128, 64);
 2166              		.loc 1 567 0
 2167 03c8 4021     		movs	r1, #64
 2168 03ca 8020     		movs	r0, #128
 2169 03cc FFF7FEFF 		bl	OLED_draw
 568:main.c        ****     
 569:main.c        ****     
 570:main.c        ****     I2Cbuff1[0] = 1<<2;
 2170              		.loc 1 570 0
 2171 03d0 0F4B     		ldr	r3, .L196+32
 2172 03d2 0422     		movs	r2, #4
 2173 03d4 1A70     		strb	r2, [r3]
 571:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2174              		.loc 1 571 0
 2175 03d6 0022     		movs	r2, #0
 2176 03d8 0121     		movs	r1, #1
 2177 03da 7020     		movs	r0, #112
 2178 03dc FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2179 03e0 0346     		mov	r3, r0
 2180 03e2 1A46     		mov	r2, r3
 2181 03e4 0B4B     		ldr	r3, .L196+36
 2182 03e6 1A60     		str	r2, [r3]
 2183              	.LBB16:
 572:main.c        **** 
 573:main.c        ****     for (int w = 0; w < 8; w++)
 2184              		.loc 1 573 0
 2185 03e8 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 50


 2186 03ea BB66     		str	r3, [r7, #104]
 2187 03ec 2EE0     		b	.L80
 2188              	.L197:
 2189 03ee 00BF     		.align	2
 2190              	.L196:
 2191 03f0 00000000 		.word	macroNamesArray
 2192 03f4 00000000 		.word	presetAlreadyDisplayed
 2193 03f8 00000000 		.word	Em_EEPROM_em_EepromStorage
 2194 03fc 00000000 		.word	eepromReturnValue
 2195 0400 00000000 		.word	Vbus_function
 2196 0404 00000000 		.word	currentNeck
 2197 0408 00000000 		.word	necks
 2198 040c 00000000 		.word	currentCopedent
 2199 0410 00000000 		.word	I2Cbuff1
 2200 0414 00000000 		.word	status
 2201 0418 00040000 		.word	.LC0
 2202 041c 00000000 		.word	copedentNamesArray
 2203              	.L81:
 574:main.c        ****     {
 575:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 2204              		.loc 1 575 0 discriminator 3
 2205 0420 BB6E     		ldr	r3, [r7, #104]
 2206 0422 DBB2     		uxtb	r3, r3
 2207 0424 0833     		adds	r3, r3, #8
 2208 0426 DAB2     		uxtb	r2, r3
 2209 0428 914B     		ldr	r3, .L198
 2210 042a 1A70     		strb	r2, [r3]
 576:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2211              		.loc 1 576 0 discriminator 3
 2212 042c 0022     		movs	r2, #0
 2213 042e 0121     		movs	r1, #1
 2214 0430 7220     		movs	r0, #114
 2215 0432 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2216 0436 0346     		mov	r3, r0
 2217 0438 1A46     		mov	r2, r3
 2218 043a 8E4B     		ldr	r3, .L198+4
 2219 043c 1A60     		str	r2, [r3]
 577:main.c        ****         OLED_init(128, 32);
 2220              		.loc 1 577 0 discriminator 3
 2221 043e 2021     		movs	r1, #32
 2222 0440 8020     		movs	r0, #128
 2223 0442 FFF7FEFF 		bl	OLED_init
 573:main.c        ****     {
 2224              		.loc 1 573 0 discriminator 3
 2225 0446 BB6E     		ldr	r3, [r7, #104]
 2226 0448 0133     		adds	r3, r3, #1
 2227 044a BB66     		str	r3, [r7, #104]
 2228              	.L80:
 573:main.c        ****     {
 2229              		.loc 1 573 0 is_stmt 0 discriminator 1
 2230 044c BB6E     		ldr	r3, [r7, #104]
 2231 044e 072B     		cmp	r3, #7
 2232 0450 E6DD     		ble	.L81
 2233              	.LBE16:
 578:main.c        ****         //OLEDwriteInt(w , 1, 0,FirstLine);
 579:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 580:main.c        ****         //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OL
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 51


 581:main.c        ****        // OLED_draw(128, 32);
 582:main.c        ****     }
 583:main.c        **** 
 584:main.c        ****     //initialize the macro knob adc to scan all knobs
 585:main.c        ****     I2Cbuff1[0] = 1<<2;
 2234              		.loc 1 585 0 is_stmt 1
 2235 0452 874B     		ldr	r3, .L198
 2236 0454 0422     		movs	r2, #4
 2237 0456 1A70     		strb	r2, [r3]
 586:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2238              		.loc 1 586 0
 2239 0458 0022     		movs	r2, #0
 2240 045a 0121     		movs	r1, #1
 2241 045c 7020     		movs	r0, #112
 2242 045e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2243 0462 0346     		mov	r3, r0
 2244 0464 1A46     		mov	r2, r3
 2245 0466 834B     		ldr	r3, .L198+4
 2246 0468 1A60     		str	r2, [r3]
 587:main.c        ****     main_counter = 9;
 2247              		.loc 1 587 0
 2248 046a 834B     		ldr	r3, .L198+8
 2249 046c 0922     		movs	r2, #9
 2250 046e 1A70     		strb	r2, [r3]
 588:main.c        **** 
 589:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 2251              		.loc 1 589 0
 2252 0470 7F4B     		ldr	r3, .L198
 2253 0472 0F22     		movs	r2, #15
 2254 0474 1A70     		strb	r2, [r3]
 590:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 2255              		.loc 1 590 0
 2256 0476 0022     		movs	r2, #0
 2257 0478 0121     		movs	r1, #1
 2258 047a 3520     		movs	r0, #53
 2259 047c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2260 0480 0346     		mov	r3, r0
 2261 0482 1A46     		mov	r2, r3
 2262 0484 7B4B     		ldr	r3, .L198+4
 2263 0486 1A60     		str	r2, [r3]
 591:main.c        ****     
 592:main.c        **** #if 0
 593:main.c        ****     while(1)
 594:main.c        ****     {
 595:main.c        ****         for (int i=  0; i < 4; i++)
 596:main.c        ****         {
 597:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 598:main.c        ****             if (knobs[i] != prevKnobs[i])
 599:main.c        ****             {
 600:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 601:main.c        ****             }
 602:main.c        ****             prevKnobs[i] = knobs[i];
 603:main.c        ****         }
 604:main.c        ****         
 605:main.c        **** 
 606:main.c        ****         I2Cbuff1[0] = 1<<0;
 607:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 52


 608:main.c        **** 
 609:main.c        ****         //CyDelayUs(100);
 610:main.c        ****         I2Cbuff1[0] = 0x0E;
 611:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 612:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 613:main.c        ****        // CyDelayUs(100);
 614:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 615:main.c        ****         angle[0] +=  I2Cbuff2[1];
 616:main.c        ****         
 617:main.c        ****     }
 618:main.c        ****     #endif
 619:main.c        ****     //OLEDclear();
 620:main.c        ****     /*
 621:main.c        ****     while(1)
 622:main.c        ****     {
 623:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 624:main.c        ****         OLED_draw();
 625:main.c        ****         CyDelay(1);
 626:main.c        ****         
 627:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 628:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 629:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 630:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
 631:main.c        ****         for (int i=  0; i < 4; i++)
 632:main.c        ****         {
 633:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 634:main.c        ****         }
 635:main.c        **** 
 636:main.c        ****     }
 637:main.c        ****     */
 638:main.c        **** #if 0
 639:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 640:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 641:main.c        **** 
 642:main.c        **** 
 643:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
 644:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 645:main.c        **** 
 646:main.c        ****     //address 0x48
 647:main.c        ****     I2Cbuff1[0] = 0x1;
 648:main.c        ****     I2Cbuff1[1] = 0b11000000;
 649:main.c        ****     I2Cbuff1[2] = 0b10000011;
 650:main.c        **** 
 651:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 652:main.c        ****     #endif
 653:main.c        **** 
 654:main.c        ****     SPIS_1_Start();  
 2264              		.loc 1 654 0
 2265 0488 FFF7FEFF 		bl	SPIS_1_Start
 655:main.c        ****     SPIM_1_Start();  
 2266              		.loc 1 655 0
 2267 048c FFF7FEFF 		bl	SPIM_1_Start
 656:main.c        ****     SPIS_2_Start(); 
 2268              		.loc 1 656 0
 2269 0490 FFF7FEFF 		bl	SPIS_2_Start
 657:main.c        ****     DmaTxConfiguration();
 2270              		.loc 1 657 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 53


 2271 0494 FFF7FEFF 		bl	DmaTxConfiguration
 658:main.c        ****     DmaRxConfiguration();
 2272              		.loc 1 658 0
 2273 0498 FFF7FEFF 		bl	DmaRxConfiguration
 659:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 2274              		.loc 1 659 0
 2275 049c 7748     		ldr	r0, .L198+12
 2276 049e FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 660:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2277              		.loc 1 660 0
 2278 04a2 7748     		ldr	r0, .L198+16
 2279 04a4 FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 661:main.c        ****     
 662:main.c        ****     myArray[30] = 254;
 2280              		.loc 1 662 0
 2281 04a8 764B     		ldr	r3, .L198+20
 2282 04aa FE22     		movs	r2, #254
 2283 04ac 9A77     		strb	r2, [r3, #30]
 663:main.c        ****     myArray[31] = 253;
 2284              		.loc 1 663 0
 2285 04ae 754B     		ldr	r3, .L198+20
 2286 04b0 FD22     		movs	r2, #253
 2287 04b2 DA77     		strb	r2, [r3, #31]
 664:main.c        **** 
 665:main.c        ****     main_counter = 0;
 2288              		.loc 1 665 0
 2289 04b4 704B     		ldr	r3, .L198+8
 2290 04b6 0022     		movs	r2, #0
 2291 04b8 1A70     		strb	r2, [r3]
 2292              	.L191:
 666:main.c        **** 
 667:main.c        **** 	for(;;)
 668:main.c        ****     {
 669:main.c        ****         
 670:main.c        ****         if (parseThatMF)
 2293              		.loc 1 670 0
 2294 04ba 734B     		ldr	r3, .L198+24
 2295 04bc 1B78     		ldrb	r3, [r3]
 2296 04be DBB2     		uxtb	r3, r3
 2297 04c0 002B     		cmp	r3, #0
 2298 04c2 01D0     		beq	.L82
 671:main.c        ****         {
 672:main.c        ****             parseSysex();
 2299              		.loc 1 672 0
 2300 04c4 FFF7FEFF 		bl	parseSysex
 2301              	.L82:
 673:main.c        ****         }
 674:main.c        ****         
 675:main.c        ****         //if (newDataFlag)
 676:main.c        ****         //{
 677:main.c        ****         //}
 678:main.c        ****             /*
 679:main.c        ****             for (int i = 0; i < 5; i++)
 680:main.c        ****             {
 681:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 682:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 683:main.c        ****                 I2C_1_MasterSendStop(); 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 54


 684:main.c        **** 
 685:main.c        **** 
 686:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 687:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 688:main.c        ****                 //I2C_1_MasterSendStop();
 689:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
 690:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 691:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 692:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 693:main.c        ****                  I2C_1_MasterSendStop(); 
 694:main.c        ****                 
 695:main.c        ****                 CyDelay(1);
 696:main.c        **** 
 697:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 698:main.c        ****                 I2C_1_MasterWriteByte(0x01);
 699:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 700:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 701:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 702:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 703:main.c        ****                 I2C_1_MasterSendStop(); 
 704:main.c        ****                 
 705:main.c        ****                 CyDelay(2);
 706:main.c        **** 
 707:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 708:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 709:main.c        ****                I2C_1_MasterWriteByte(0x80);
 710:main.c        ****                 I2C_1_MasterSendStop(); 
 711:main.c        ****                CyDelay(2);
 712:main.c        ****             }
 713:main.c        ****         */
 714:main.c        ****         //set main i2c mux
 715:main.c        ****     
 716:main.c        ****         
 717:main.c        ****         /*
 718:main.c        ****         for (int i = 0; i < 4; i++)
 719:main.c        ****         {
 720:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 721:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 722:main.c        ****             I2C_1_MasterSendStop(); 
 723:main.c        **** 
 724:main.c        **** 
 725:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 726:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 727:main.c        ****             //I2C_1_MasterSendStop();
 728:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 729:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 730:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 731:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
 732:main.c        ****              I2C_1_MasterSendStop(); 
 733:main.c        ****             
 734:main.c        ****             CyDelay(1);
 735:main.c        **** 
 736:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 737:main.c        ****             I2C_1_MasterWriteByte(0x01);
 738:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 739:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 740:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 55


 741:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 742:main.c        ****             I2C_1_MasterSendStop(); 
 743:main.c        ****             
 744:main.c        ****             CyDelay(2);
 745:main.c        **** 
 746:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 747:main.c        ****             I2C_1_MasterWriteByte(0xff);
 748:main.c        ****             I2C_1_MasterWriteByte(0x80);
 749:main.c        ****             I2C_1_MasterSendStop(); 
 750:main.c        ****            CyDelay(2);
 751:main.c        ****         }
 752:main.c        ****             */
 753:main.c        ****         /*    
 754:main.c        ****         if (main_counter == 6)
 755:main.c        ****         {
 756:main.c        ****             main_counter = 8;
 757:main.c        ****         }
 758:main.c        ****         */    
 759:main.c        ****         testpin3_Write(1);
 2302              		.loc 1 759 0
 2303 04c8 0120     		movs	r0, #1
 2304 04ca FFF7FEFF 		bl	testpin3_Write
 760:main.c        ****        //sense levers and pedals
 761:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2305              		.loc 1 761 0
 2306 04ce 6A4B     		ldr	r3, .L198+8
 2307 04d0 1B78     		ldrb	r3, [r3]
 2308 04d2 DBB2     		uxtb	r3, r3
 2309 04d4 1A46     		mov	r2, r3
 2310 04d6 6D4B     		ldr	r3, .L198+28
 2311 04d8 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2312 04dc 6C4B     		ldr	r3, .L198+32
 2313 04de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2314 04e0 9A42     		cmp	r2, r3
 2315 04e2 13D0     		beq	.L83
 2316              	.LBB17:
 762:main.c        ****         {
 763:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 2317              		.loc 1 763 0
 2318 04e4 644B     		ldr	r3, .L198+8
 2319 04e6 1B78     		ldrb	r3, [r3]
 2320 04e8 DBB2     		uxtb	r3, r3
 2321 04ea 1A46     		mov	r2, r3
 2322 04ec 674B     		ldr	r3, .L198+28
 2323 04ee 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2324 04f2 1A46     		mov	r2, r3
 2325 04f4 0123     		movs	r3, #1
 2326 04f6 9340     		lsls	r3, r3, r2
 2327 04f8 DAB2     		uxtb	r2, r3
 2328 04fa 5D4B     		ldr	r3, .L198
 2329 04fc 1A70     		strb	r2, [r3]
 764:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2330              		.loc 1 764 0
 2331 04fe 0022     		movs	r2, #0
 2332 0500 0121     		movs	r1, #1
 2333 0502 7020     		movs	r0, #112
 2334 0504 FFF7FEFF 		bl	I2C_MasterWriteBlocking
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 56


 2335 0508 0346     		mov	r3, r0
 2336 050a BB77     		strb	r3, [r7, #30]
 2337              	.L83:
 2338              	.LBE17:
 765:main.c        ****         }
 766:main.c        ****         last_mux = mux_states[main_counter][0];
 2339              		.loc 1 766 0
 2340 050c 5A4B     		ldr	r3, .L198+8
 2341 050e 1B78     		ldrb	r3, [r3]
 2342 0510 DBB2     		uxtb	r3, r3
 2343 0512 1A46     		mov	r2, r3
 2344 0514 5D4B     		ldr	r3, .L198+28
 2345 0516 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2346 051a 5D4B     		ldr	r3, .L198+32
 2347 051c 1A70     		strb	r2, [r3]
 767:main.c        ****         
 768:main.c        ****         
 769:main.c        ****         CyDelayUs(10);
 2348              		.loc 1 769 0
 2349 051e 0A20     		movs	r0, #10
 2350 0520 FFF7FEFF 		bl	CyDelayUs
 770:main.c        ****         if (mux_states[main_counter][0] == 5)
 2351              		.loc 1 770 0
 2352 0524 544B     		ldr	r3, .L198+8
 2353 0526 1B78     		ldrb	r3, [r3]
 2354 0528 DBB2     		uxtb	r3, r3
 2355 052a 1A46     		mov	r2, r3
 2356 052c 574B     		ldr	r3, .L198+28
 2357 052e 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2358 0532 052B     		cmp	r3, #5
 2359 0534 1DD1     		bne	.L84
 771:main.c        ****         {
 772:main.c        ****             if (!i2c_skipped[main_counter])
 2360              		.loc 1 772 0
 2361 0536 504B     		ldr	r3, .L198+8
 2362 0538 1B78     		ldrb	r3, [r3]
 2363 053a DBB2     		uxtb	r3, r3
 2364 053c 1A46     		mov	r2, r3
 2365 053e 554B     		ldr	r3, .L198+36
 2366 0540 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2367 0542 002B     		cmp	r3, #0
 2368 0544 15D1     		bne	.L84
 773:main.c        ****             {
 774:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 2369              		.loc 1 774 0
 2370 0546 4C4B     		ldr	r3, .L198+8
 2371 0548 1B78     		ldrb	r3, [r3]
 2372 054a DBB2     		uxtb	r3, r3
 2373 054c 4F4A     		ldr	r2, .L198+28
 2374 054e 5B00     		lsls	r3, r3, #1
 2375 0550 1344     		add	r3, r3, r2
 2376 0552 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2377 0554 1A46     		mov	r2, r3
 2378 0556 0123     		movs	r3, #1
 2379 0558 9340     		lsls	r3, r3, r2
 2380 055a DAB2     		uxtb	r2, r3
 2381 055c 444B     		ldr	r3, .L198
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 57


 2382 055e 1A70     		strb	r2, [r3]
 775:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 2383              		.loc 1 775 0
 2384 0560 0022     		movs	r2, #0
 2385 0562 0121     		movs	r1, #1
 2386 0564 7120     		movs	r0, #113
 2387 0566 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2388 056a 0346     		mov	r3, r0
 2389 056c 1A46     		mov	r2, r3
 2390 056e 414B     		ldr	r3, .L198+4
 2391 0570 1A60     		str	r2, [r3]
 2392              	.L84:
 776:main.c        ****             }
 777:main.c        ****         }
 778:main.c        **** 
 779:main.c        ****         CyDelayUs(10);
 2393              		.loc 1 779 0
 2394 0572 0A20     		movs	r0, #10
 2395 0574 FFF7FEFF 		bl	CyDelayUs
 780:main.c        ****         //if it's a hall sensor
 781:main.c        **** 
 782:main.c        ****         //temporarily don't scan vertical knee lever, should be <10 normally
 783:main.c        ****         if (main_counter < 9)
 2396              		.loc 1 783 0
 2397 0578 3F4B     		ldr	r3, .L198+8
 2398 057a 1B78     		ldrb	r3, [r3]
 2399 057c DBB2     		uxtb	r3, r3
 2400 057e 082B     		cmp	r3, #8
 2401 0580 00F2BE80 		bhi	.L85
 784:main.c        ****         {
 785:main.c        ****             if (!i2c_skipped[main_counter])
 2402              		.loc 1 785 0
 2403 0584 3C4B     		ldr	r3, .L198+8
 2404 0586 1B78     		ldrb	r3, [r3]
 2405 0588 DBB2     		uxtb	r3, r3
 2406 058a 1A46     		mov	r2, r3
 2407 058c 414B     		ldr	r3, .L198+36
 2408 058e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2409 0590 002B     		cmp	r3, #0
 2410 0592 40F0B580 		bne	.L85
 786:main.c        ****             {
 787:main.c        ****                 //CyDelayUs(100);
 788:main.c        ****                 I2Cbuff1[0] = 0x0E;
 2411              		.loc 1 788 0
 2412 0596 364B     		ldr	r3, .L198
 2413 0598 0E22     		movs	r2, #14
 2414 059a 1A70     		strb	r2, [r3]
 789:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 2415              		.loc 1 789 0
 2416 059c 0222     		movs	r2, #2
 2417 059e 0121     		movs	r1, #1
 2418 05a0 3620     		movs	r0, #54
 2419 05a2 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2420 05a6 0346     		mov	r3, r0
 2421 05a8 1A46     		mov	r2, r3
 2422 05aa 324B     		ldr	r3, .L198+4
 2423 05ac 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 58


 790:main.c        ****                 if (status == 0)
 2424              		.loc 1 790 0
 2425 05ae 314B     		ldr	r3, .L198+4
 2426 05b0 1B68     		ldr	r3, [r3]
 2427 05b2 002B     		cmp	r3, #0
 2428 05b4 08D1     		bne	.L86
 791:main.c        ****                 {
 792:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 2429              		.loc 1 792 0
 2430 05b6 0122     		movs	r2, #1
 2431 05b8 0221     		movs	r1, #2
 2432 05ba 3620     		movs	r0, #54
 2433 05bc FFF7FEFF 		bl	I2C_MasterReadBlocking
 2434 05c0 0346     		mov	r3, r0
 2435 05c2 1A46     		mov	r2, r3
 2436 05c4 2B4B     		ldr	r3, .L198+4
 2437 05c6 1A60     		str	r2, [r3]
 2438              	.L86:
 793:main.c        ****                 }
 794:main.c        ****                 if (status  == 0)
 2439              		.loc 1 794 0
 2440 05c8 2A4B     		ldr	r3, .L198+4
 2441 05ca 1B68     		ldr	r3, [r3]
 2442 05cc 002B     		cmp	r3, #0
 2443 05ce 40F09780 		bne	.L85
 795:main.c        ****                 {
 796:main.c        ****                     //CyDelayUs(100);
 797:main.c        ****                     angle[main_counter] = I2Cbuff2[0] << 8;
 2444              		.loc 1 797 0
 2445 05d2 294B     		ldr	r3, .L198+8
 2446 05d4 1B78     		ldrb	r3, [r3]
 2447 05d6 DBB2     		uxtb	r3, r3
 2448 05d8 1A46     		mov	r2, r3
 2449 05da 2F4B     		ldr	r3, .L198+40
 2450 05dc 1B78     		ldrb	r3, [r3]
 2451 05de DBB2     		uxtb	r3, r3
 2452 05e0 9BB2     		uxth	r3, r3
 2453 05e2 1B02     		lsls	r3, r3, #8
 2454 05e4 99B2     		uxth	r1, r3
 2455 05e6 2D4B     		ldr	r3, .L198+44
 2456 05e8 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 798:main.c        ****                     angle[main_counter] +=  I2Cbuff2[1];
 2457              		.loc 1 798 0
 2458 05ec 2A4B     		ldr	r3, .L198+40
 2459 05ee 5B78     		ldrb	r3, [r3, #1]
 2460 05f0 D8B2     		uxtb	r0, r3
 2461 05f2 214B     		ldr	r3, .L198+8
 2462 05f4 1B78     		ldrb	r3, [r3]
 2463 05f6 DBB2     		uxtb	r3, r3
 2464 05f8 1946     		mov	r1, r3
 2465 05fa 1A46     		mov	r2, r3
 2466 05fc 274B     		ldr	r3, .L198+44
 2467 05fe 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2468 0602 83B2     		uxth	r3, r0
 2469 0604 1344     		add	r3, r3, r2
 2470 0606 9AB2     		uxth	r2, r3
 2471 0608 244B     		ldr	r3, .L198+44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 59


 2472 060a 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 799:main.c        ****                     
 800:main.c        ****                     if (calibrationMode)
 2473              		.loc 1 800 0
 2474 060e 244B     		ldr	r3, .L198+48
 2475 0610 1B68     		ldr	r3, [r3]
 2476 0612 002B     		cmp	r3, #0
 2477 0614 74D0     		beq	.L85
 801:main.c        ****                     {
 802:main.c        ****                         if (angle[main_counter] < pedals_low[main_counter])
 2478              		.loc 1 802 0
 2479 0616 184B     		ldr	r3, .L198+8
 2480 0618 1B78     		ldrb	r3, [r3]
 2481 061a DBB2     		uxtb	r3, r3
 2482 061c 1A46     		mov	r2, r3
 2483 061e 1F4B     		ldr	r3, .L198+44
 2484 0620 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2485 0624 144B     		ldr	r3, .L198+8
 2486 0626 1B78     		ldrb	r3, [r3]
 2487 0628 DBB2     		uxtb	r3, r3
 2488 062a 1946     		mov	r1, r3
 2489 062c 1D4B     		ldr	r3, .L198+52
 2490 062e 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2491 0632 9A42     		cmp	r2, r3
 2492 0634 46D2     		bcs	.L87
 803:main.c        ****                         {
 804:main.c        ****                             if (main_counter == 0)
 2493              		.loc 1 804 0
 2494 0636 104B     		ldr	r3, .L198+8
 2495 0638 1B78     		ldrb	r3, [r3]
 2496 063a DBB2     		uxtb	r3, r3
 2497 063c 002B     		cmp	r3, #0
 2498 063e 33D1     		bne	.L88
 805:main.c        ****                             {
 806:main.c        ****                                 if (angle[main_counter] != 0)
 2499              		.loc 1 806 0
 2500 0640 0D4B     		ldr	r3, .L198+8
 2501 0642 1B78     		ldrb	r3, [r3]
 2502 0644 DBB2     		uxtb	r3, r3
 2503 0646 1A46     		mov	r2, r3
 2504 0648 144B     		ldr	r3, .L198+44
 2505 064a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2506 064e 002B     		cmp	r3, #0
 2507 0650 38D0     		beq	.L87
 807:main.c        ****                                 {
 808:main.c        ****                                      pedals_low[main_counter] = angle[main_counter];
 2508              		.loc 1 808 0
 2509 0652 094B     		ldr	r3, .L198+8
 2510 0654 1B78     		ldrb	r3, [r3]
 2511 0656 DBB2     		uxtb	r3, r3
 2512 0658 1A46     		mov	r2, r3
 2513 065a 074B     		ldr	r3, .L198+8
 2514 065c 1B78     		ldrb	r3, [r3]
 2515 065e DBB2     		uxtb	r3, r3
 2516 0660 1946     		mov	r1, r3
 2517 0662 0E4B     		ldr	r3, .L198+44
 2518 0664 33F81110 		ldrh	r1, [r3, r1, lsl #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 60


 2519 0668 0E4B     		ldr	r3, .L198+52
 2520 066a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2521 066e 29E0     		b	.L87
 2522              	.L199:
 2523              		.align	2
 2524              	.L198:
 2525 0670 00000000 		.word	I2Cbuff1
 2526 0674 00000000 		.word	status
 2527 0678 00000000 		.word	main_counter
 2528 067c 00000000 		.word	spis_1_ss
 2529 0680 00000000 		.word	spis_2_ss
 2530 0684 00000000 		.word	myArray
 2531 0688 00000000 		.word	parseThatMF
 2532 068c 00000000 		.word	mux_states
 2533 0690 00000000 		.word	last_mux
 2534 0694 00000000 		.word	i2c_skipped
 2535 0698 00000000 		.word	I2Cbuff2
 2536 069c 00000000 		.word	angle
 2537 06a0 00000000 		.word	calibrationMode
 2538 06a4 00000000 		.word	pedals_low
 2539              	.L88:
 809:main.c        ****                                 }
 810:main.c        ****                             }
 811:main.c        ****                             else
 812:main.c        ****                             {
 813:main.c        ****                                 pedals_low[main_counter] = angle[main_counter];
 2540              		.loc 1 813 0
 2541 06a8 9B4B     		ldr	r3, .L200
 2542 06aa 1B78     		ldrb	r3, [r3]
 2543 06ac DBB2     		uxtb	r3, r3
 2544 06ae 1A46     		mov	r2, r3
 2545 06b0 994B     		ldr	r3, .L200
 2546 06b2 1B78     		ldrb	r3, [r3]
 2547 06b4 DBB2     		uxtb	r3, r3
 2548 06b6 1946     		mov	r1, r3
 2549 06b8 984B     		ldr	r3, .L200+4
 2550 06ba 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2551 06be 984B     		ldr	r3, .L200+8
 2552 06c0 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2553              	.L87:
 814:main.c        ****                             }
 815:main.c        ****                             
 816:main.c        ****                         }
 817:main.c        ****                         if (angle[main_counter] > pedals_high[main_counter])
 2554              		.loc 1 817 0
 2555 06c4 944B     		ldr	r3, .L200
 2556 06c6 1B78     		ldrb	r3, [r3]
 2557 06c8 DBB2     		uxtb	r3, r3
 2558 06ca 1A46     		mov	r2, r3
 2559 06cc 934B     		ldr	r3, .L200+4
 2560 06ce 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2561 06d2 914B     		ldr	r3, .L200
 2562 06d4 1B78     		ldrb	r3, [r3]
 2563 06d6 DBB2     		uxtb	r3, r3
 2564 06d8 1946     		mov	r1, r3
 2565 06da 924B     		ldr	r3, .L200+12
 2566 06dc 33F81130 		ldrh	r3, [r3, r1, lsl #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 61


 2567 06e0 9A42     		cmp	r2, r3
 2568 06e2 0DD9     		bls	.L85
 818:main.c        ****                         {
 819:main.c        ****                              pedals_high[main_counter] = angle[main_counter];
 2569              		.loc 1 819 0
 2570 06e4 8C4B     		ldr	r3, .L200
 2571 06e6 1B78     		ldrb	r3, [r3]
 2572 06e8 DBB2     		uxtb	r3, r3
 2573 06ea 1A46     		mov	r2, r3
 2574 06ec 8A4B     		ldr	r3, .L200
 2575 06ee 1B78     		ldrb	r3, [r3]
 2576 06f0 DBB2     		uxtb	r3, r3
 2577 06f2 1946     		mov	r1, r3
 2578 06f4 894B     		ldr	r3, .L200+4
 2579 06f6 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2580 06fa 8A4B     		ldr	r3, .L200+12
 2581 06fc 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2582              	.L85:
 820:main.c        ****                         }
 821:main.c        ****                     }
 822:main.c        ****                 }
 823:main.c        ****             }
 824:main.c        ****         }
 825:main.c        ****         
 826:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 827:main.c        ****         if (main_counter == 9)
 2583              		.loc 1 827 0
 2584 0700 854B     		ldr	r3, .L200
 2585 0702 1B78     		ldrb	r3, [r3]
 2586 0704 DBB2     		uxtb	r3, r3
 2587 0706 092B     		cmp	r3, #9
 2588 0708 40F08780 		bne	.L90
 828:main.c        ****         {
 829:main.c        ****             if (!i2c_skipped[main_counter])
 2589              		.loc 1 829 0
 2590 070c 824B     		ldr	r3, .L200
 2591 070e 1B78     		ldrb	r3, [r3]
 2592 0710 DBB2     		uxtb	r3, r3
 2593 0712 1A46     		mov	r2, r3
 2594 0714 844B     		ldr	r3, .L200+16
 2595 0716 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2596 0718 002B     		cmp	r3, #0
 2597 071a 40F0C580 		bne	.L94
 830:main.c        ****             {
 831:main.c        ****                 //scan the knob adc
 832:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2598              		.loc 1 832 0
 2599 071e 834B     		ldr	r3, .L200+20
 2600 0720 0022     		movs	r2, #0
 2601 0722 1A70     		strb	r2, [r3]
 833:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 2602              		.loc 1 833 0
 2603 0724 0022     		movs	r2, #0
 2604 0726 1021     		movs	r1, #16
 2605 0728 3520     		movs	r0, #53
 2606 072a FFF7FEFF 		bl	I2C_MasterReadBlocking
 2607 072e 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 62


 2608 0730 1A46     		mov	r2, r3
 2609 0732 7F4B     		ldr	r3, .L200+24
 2610 0734 1A60     		str	r2, [r3]
 834:main.c        ****                 if (status == 0)
 2611              		.loc 1 834 0
 2612 0736 7E4B     		ldr	r3, .L200+24
 2613 0738 1B68     		ldr	r3, [r3]
 2614 073a 002B     		cmp	r3, #0
 2615 073c 40F0B480 		bne	.L94
 2616              	.LBB18:
 835:main.c        ****                 {
 836:main.c        ****                     for (int i = 0; i < NUM_MACROS; i++)
 2617              		.loc 1 836 0
 2618 0740 0023     		movs	r3, #0
 2619 0742 7B66     		str	r3, [r7, #100]
 2620 0744 20E0     		b	.L92
 2621              	.L93:
 2622              	.LBB19:
 837:main.c        ****                     {
 838:main.c        ****                        uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[i*2] & 255)) & 4095; // 
 2623              		.loc 1 838 0 discriminator 3
 2624 0746 7B6E     		ldr	r3, [r7, #100]
 2625 0748 5B00     		lsls	r3, r3, #1
 2626 074a 7A4A     		ldr	r2, .L200+28
 2627 074c D35C     		ldrb	r3, [r2, r3]
 2628 074e DBB2     		uxtb	r3, r3
 2629 0750 9BB2     		uxth	r3, r3
 2630 0752 1B02     		lsls	r3, r3, #8
 2631 0754 9AB2     		uxth	r2, r3
 2632 0756 7B6E     		ldr	r3, [r7, #100]
 2633 0758 5B00     		lsls	r3, r3, #1
 2634 075a 7649     		ldr	r1, .L200+28
 2635 075c CB5C     		ldrb	r3, [r1, r3]
 2636 075e DBB2     		uxtb	r3, r3
 2637 0760 9BB2     		uxth	r3, r3
 2638 0762 1344     		add	r3, r3, r2
 2639 0764 9BB2     		uxth	r3, r3
 2640 0766 C3F30B03 		ubfx	r3, r3, #0, #12
 2641 076a FB80     		strh	r3, [r7, #6]	@ movhi
 839:main.c        ****                         macroKnobValues[i] = 255 - (tempInt >> 4); //now squish it down to 8 bit fo
 2642              		.loc 1 839 0 discriminator 3
 2643 076c FB88     		ldrh	r3, [r7, #6]
 2644 076e 1B09     		lsrs	r3, r3, #4
 2645 0770 9BB2     		uxth	r3, r3
 2646 0772 DBB2     		uxtb	r3, r3
 2647 0774 DB43     		mvns	r3, r3
 2648 0776 D9B2     		uxtb	r1, r3
 2649 0778 6F4A     		ldr	r2, .L200+32
 2650 077a 7B6E     		ldr	r3, [r7, #100]
 2651 077c 1344     		add	r3, r3, r2
 2652 077e 0A46     		mov	r2, r1
 2653 0780 1A70     		strb	r2, [r3]
 2654              	.LBE19:
 836:main.c        ****                     {
 2655              		.loc 1 836 0 discriminator 3
 2656 0782 7B6E     		ldr	r3, [r7, #100]
 2657 0784 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 63


 2658 0786 7B66     		str	r3, [r7, #100]
 2659              	.L92:
 836:main.c        ****                     {
 2660              		.loc 1 836 0 is_stmt 0 discriminator 1
 2661 0788 7B6E     		ldr	r3, [r7, #100]
 2662 078a 072B     		cmp	r3, #7
 2663 078c DBDD     		ble	.L93
 2664              	.LBE18:
 840:main.c        ****                     }
 841:main.c        ****                     //
 842:main.c        ****                     if (macroOLEDWaitingToSend == 2)
 2665              		.loc 1 842 0 is_stmt 1
 2666 078e 6B4B     		ldr	r3, .L200+36
 2667 0790 1B68     		ldr	r3, [r3]
 2668 0792 022B     		cmp	r3, #2
 2669 0794 40F08880 		bne	.L94
 843:main.c        ****                     {
 844:main.c        ****                         //send the data to the little macro OLED screens
 845:main.c        ****                         
 846:main.c        ****                         I2Cbuff1[0] = (1 << 3) + whichMacro;
 2670              		.loc 1 846 0
 2671 0798 694B     		ldr	r3, .L200+40
 2672 079a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2673 079c 0833     		adds	r3, r3, #8
 2674 079e DAB2     		uxtb	r2, r3
 2675 07a0 624B     		ldr	r3, .L200+20
 2676 07a2 1A70     		strb	r2, [r3]
 847:main.c        ****                         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2677              		.loc 1 847 0
 2678 07a4 0022     		movs	r2, #0
 2679 07a6 0121     		movs	r1, #1
 2680 07a8 7220     		movs	r0, #114
 2681 07aa FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2682 07ae 0346     		mov	r3, r0
 2683 07b0 1A46     		mov	r2, r3
 2684 07b2 5F4B     		ldr	r3, .L200+24
 2685 07b4 1A60     		str	r2, [r3]
 848:main.c        ****                         //OLED_init(128, 32);
 849:main.c        ****                         OLEDclear(128, 32);
 2686              		.loc 1 849 0
 2687 07b6 2021     		movs	r1, #32
 2688 07b8 8020     		movs	r0, #128
 2689 07ba FFF7FEFF 		bl	OLEDclear
 850:main.c        ****                         //OLEDwriteInt(w , 1, 0,FirstLine);
 851:main.c        ****                         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 852:main.c        ****                         myGFX_setFont(1);
 2690              		.loc 1 852 0
 2691 07be 0120     		movs	r0, #1
 2692 07c0 FFF7FEFF 		bl	myGFX_setFont
 853:main.c        ****                         //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
 854:main.c        ****                         OLEDwriteString((char *)&macroNamesArray[patchNum][whichMacro][0], MACRO_CL
 2693              		.loc 1 854 0
 2694 07c4 5F4B     		ldr	r3, .L200+44
 2695 07c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2696 07c8 1946     		mov	r1, r3
 2697 07ca 5D4B     		ldr	r3, .L200+40
 2698 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 64


 2699 07ce 1A46     		mov	r2, r3
 2700 07d0 D200     		lsls	r2, r2, #3
 2701 07d2 D21A     		subs	r2, r2, r3
 2702 07d4 5300     		lsls	r3, r2, #1
 2703 07d6 1A46     		mov	r2, r3
 2704 07d8 0B46     		mov	r3, r1
 2705 07da DB00     		lsls	r3, r3, #3
 2706 07dc 5B1A     		subs	r3, r3, r1
 2707 07de 1B01     		lsls	r3, r3, #4
 2708 07e0 1344     		add	r3, r3, r2
 2709 07e2 594A     		ldr	r2, .L200+48
 2710 07e4 9818     		adds	r0, r3, r2
 2711 07e6 0123     		movs	r3, #1
 2712 07e8 0022     		movs	r2, #0
 2713 07ea 0821     		movs	r1, #8
 2714 07ec FFF7FEFF 		bl	OLEDwriteString
 855:main.c        ****                         OLED_draw(128, 32);
 2715              		.loc 1 855 0
 2716 07f0 2021     		movs	r1, #32
 2717 07f2 8020     		movs	r0, #128
 2718 07f4 FFF7FEFF 		bl	OLED_draw
 856:main.c        **** 
 857:main.c        ****                         whichMacro++;
 2719              		.loc 1 857 0
 2720 07f8 514B     		ldr	r3, .L200+40
 2721 07fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2722 07fc 0133     		adds	r3, r3, #1
 2723 07fe DAB2     		uxtb	r2, r3
 2724 0800 4F4B     		ldr	r3, .L200+40
 2725 0802 1A70     		strb	r2, [r3]
 858:main.c        ****                         if (whichMacro >=8)
 2726              		.loc 1 858 0
 2727 0804 4E4B     		ldr	r3, .L200+40
 2728 0806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2729 0808 072B     		cmp	r3, #7
 2730 080a 4DD9     		bls	.L94
 859:main.c        ****                         {
 860:main.c        ****                             macroOLEDWaitingToSend = 0;
 2731              		.loc 1 860 0
 2732 080c 4B4B     		ldr	r3, .L200+36
 2733 080e 0022     		movs	r2, #0
 2734 0810 1A60     		str	r2, [r3]
 861:main.c        ****                             whichMacro = 0;
 2735              		.loc 1 861 0
 2736 0812 4B4B     		ldr	r3, .L200+40
 2737 0814 0022     		movs	r2, #0
 2738 0816 1A70     		strb	r2, [r3]
 2739 0818 46E0     		b	.L94
 2740              	.L90:
 862:main.c        ****                         }
 863:main.c        ****                     }
 864:main.c        ****                 }
 865:main.c        ****             }
 866:main.c        ****             
 867:main.c        ****         }
 868:main.c        ****         //otherwise it's the ADC for the foot pedal
 869:main.c        ****         else if (main_counter == 10)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 65


 2741              		.loc 1 869 0
 2742 081a 3F4B     		ldr	r3, .L200
 2743 081c 1B78     		ldrb	r3, [r3]
 2744 081e DBB2     		uxtb	r3, r3
 2745 0820 0A2B     		cmp	r3, #10
 2746 0822 2AD1     		bne	.L95
 870:main.c        ****         {
 871:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 872:main.c        ****             if (!i2c_skipped[main_counter])
 2747              		.loc 1 872 0
 2748 0824 3C4B     		ldr	r3, .L200
 2749 0826 1B78     		ldrb	r3, [r3]
 2750 0828 DBB2     		uxtb	r3, r3
 2751 082a 1A46     		mov	r2, r3
 2752 082c 3E4B     		ldr	r3, .L200+16
 2753 082e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2754 0830 002B     		cmp	r3, #0
 2755 0832 39D1     		bne	.L94
 873:main.c        ****             {
 874:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2756              		.loc 1 874 0
 2757 0834 3D4B     		ldr	r3, .L200+20
 2758 0836 0022     		movs	r2, #0
 2759 0838 1A70     		strb	r2, [r3]
 875:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 2760              		.loc 1 875 0
 2761 083a 0022     		movs	r2, #0
 2762 083c 0221     		movs	r1, #2
 2763 083e 4F20     		movs	r0, #79
 2764 0840 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2765 0844 0346     		mov	r3, r0
 2766 0846 1A46     		mov	r2, r3
 2767 0848 394B     		ldr	r3, .L200+24
 2768 084a 1A60     		str	r2, [r3]
 876:main.c        ****                 if (status == 0)
 2769              		.loc 1 876 0
 2770 084c 384B     		ldr	r3, .L200+24
 2771 084e 1B68     		ldr	r3, [r3]
 2772 0850 002B     		cmp	r3, #0
 2773 0852 29D1     		bne	.L94
 877:main.c        ****                 {
 878:main.c        ****                     volumePedal = I2Cbuff2[0] << 8;
 2774              		.loc 1 878 0
 2775 0854 374B     		ldr	r3, .L200+28
 2776 0856 1B78     		ldrb	r3, [r3]
 2777 0858 DBB2     		uxtb	r3, r3
 2778 085a 9BB2     		uxth	r3, r3
 2779 085c 1B02     		lsls	r3, r3, #8
 2780 085e 9AB2     		uxth	r2, r3
 2781 0860 3A4B     		ldr	r3, .L200+52
 2782 0862 1A80     		strh	r2, [r3]	@ movhi
 879:main.c        ****                     volumePedal +=  I2Cbuff2[1];
 2783              		.loc 1 879 0
 2784 0864 334B     		ldr	r3, .L200+28
 2785 0866 5B78     		ldrb	r3, [r3, #1]
 2786 0868 DBB2     		uxtb	r3, r3
 2787 086a 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 66


 2788 086c 374B     		ldr	r3, .L200+52
 2789 086e 1B88     		ldrh	r3, [r3]
 2790 0870 1344     		add	r3, r3, r2
 2791 0872 9AB2     		uxth	r2, r3
 2792 0874 354B     		ldr	r3, .L200+52
 2793 0876 1A80     		strh	r2, [r3]	@ movhi
 2794 0878 16E0     		b	.L94
 2795              	.L95:
 880:main.c        ****                 }
 881:main.c        ****             }
 882:main.c        ****         }
 883:main.c        ****         else
 884:main.c        ****         if (main_counter == 11)
 2796              		.loc 1 884 0
 2797 087a 274B     		ldr	r3, .L200
 2798 087c 1B78     		ldrb	r3, [r3]
 2799 087e DBB2     		uxtb	r3, r3
 2800 0880 0B2B     		cmp	r3, #11
 2801 0882 11D1     		bne	.L94
 885:main.c        ****         { 
 886:main.c        ****             if (mainOLEDWaitingToSend)
 2802              		.loc 1 886 0
 2803 0884 324B     		ldr	r3, .L200+56
 2804 0886 1B68     		ldr	r3, [r3]
 2805 0888 002B     		cmp	r3, #0
 2806 088a 06D0     		beq	.L97
 887:main.c        ****             {
 888:main.c        ****                 OLED_draw(128, 64);
 2807              		.loc 1 888 0
 2808 088c 4021     		movs	r1, #64
 2809 088e 8020     		movs	r0, #128
 2810 0890 FFF7FEFF 		bl	OLED_draw
 889:main.c        ****                 mainOLEDWaitingToSend = 0;
 2811              		.loc 1 889 0
 2812 0894 2E4B     		ldr	r3, .L200+56
 2813 0896 0022     		movs	r2, #0
 2814 0898 1A60     		str	r2, [r3]
 2815              	.L97:
 890:main.c        ****             }
 891:main.c        ****             if (macroOLEDWaitingToSend == 1)
 2816              		.loc 1 891 0
 2817 089a 284B     		ldr	r3, .L200+36
 2818 089c 1B68     		ldr	r3, [r3]
 2819 089e 012B     		cmp	r3, #1
 2820 08a0 02D1     		bne	.L94
 892:main.c        ****             {
 893:main.c        ****                 macroOLEDWaitingToSend = 2;
 2821              		.loc 1 893 0
 2822 08a2 264B     		ldr	r3, .L200+36
 2823 08a4 0222     		movs	r2, #2
 2824 08a6 1A60     		str	r2, [r3]
 2825              	.L94:
 894:main.c        ****             }
 895:main.c        ****             
 896:main.c        ****             #if 0
 897:main.c        ****             if (OLEDcount == 0)
 898:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 67


 899:main.c        ****                 OLEDclearLine(FirstLine);
 900:main.c        ****             }
 901:main.c        ****             else if (OLEDcount == 1)
 902:main.c        ****             {
 903:main.c        ****                 OLEDwriteInt(encoderNum, 2, 0, FirstLine);
 904:main.c        **** 		    }
 905:main.c        ****             else if (OLEDcount == 2)
 906:main.c        ****             {
 907:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
 908:main.c        ****             }
 909:main.c        ****             else if (OLEDcount == 3)
 910:main.c        ****             {
 911:main.c        ****                 OLEDwriteInt(encoderVal[encoderNum], 3, OLEDgetCursor(), FirstLine);
 912:main.c        ****             }
 913:main.c        ****             else if (OLEDcount == 4)
 914:main.c        ****             {
 915:main.c        ****                 OLEDwriteString("     ", 5, OLEDgetCursor(), FirstLine);
 916:main.c        ****             }
 917:main.c        ****             else if (OLEDcount == 5)
 918:main.c        ****             {
 919:main.c        ****                 OLEDwriteInt(patchNum, 2, OLEDgetCursor(), FirstLine);
 920:main.c        ****             }
 921:main.c        ****             else if (OLEDcount == 6)
 922:main.c        ****             {
 923:main.c        ****                 //OLED_drawFirstLine();
 924:main.c        ****                 
 925:main.c        ****                 //OLEDwriteInt( bar[0] , 6, 0,SecondLine);
 926:main.c        ****                 //OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 927:main.c        ****                 //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 928:main.c        ****                 //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_B
 929:main.c        ****                  //OLED_draw();
 930:main.c        ****             }
 931:main.c        ****             OLEDcount++;
 932:main.c        ****             if (OLEDcount > 6)
 933:main.c        ****             {
 934:main.c        ****                 OLEDcount = 0;
 935:main.c        ****             }
 936:main.c        ****             #endif
 937:main.c        ****         }
 938:main.c        **** 
 939:main.c        ****         /*
 940:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
 941:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 942:main.c        **** 
 943:main.c        ****                 for (int i = 0; i < 5; i++)
 944:main.c        ****                 {
 945:main.c        ****                     I2Cbuff1[0] = 1<<i;
 946:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 947:main.c        **** 
 948:main.c        ****                     I2Cbuff1[0] = 0x0E;
 949:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 950:main.c        **** 
 951:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 952:main.c        **** 
 953:main.c        **** 
 954:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 955:main.c        ****                     angle[i] +=  I2Cbuff2[1];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 68


 956:main.c        ****                 }
 957:main.c        ****             if (main_counter == 0)
 958:main.c        ****             {               
 959:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
 960:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 961:main.c        **** 
 962:main.c        ****                 for (int i = 0; i < 5; i++)
 963:main.c        ****                 {
 964:main.c        ****                     I2Cbuff1[0] = 1<<i;
 965:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 966:main.c        **** 
 967:main.c        ****                     I2Cbuff1[0] = 0x0E;
 968:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 969:main.c        **** 
 970:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 971:main.c        **** 
 972:main.c        **** 
 973:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 974:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 975:main.c        ****                 }
 976:main.c        ****             }
 977:main.c        ****             else
 978:main.c        ****             {
 979:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
 980:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 981:main.c        ****                 I2Cbuff1[0] = 0x0E;
 982:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 983:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 984:main.c        ****                 {
 985:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 986:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 987:main.c        ****                 }
 988:main.c        ****            
 989:main.c        **** 
 990:main.c        **** 
 991:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 992:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
 993:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 994:main.c        ****                 {
 995:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 996:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 997:main.c        ****                 }
 998:main.c        ****                 
 999:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
1000:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
1001:main.c        ****             }    
1002:main.c        ****                 
1003:main.c        **** 
1004:main.c        ****             send_it = 1;
1005:main.c        ****         }
1006:main.c        ****         */
1007:main.c        ****         
1008:main.c        ****         if (main_counter < 10)
 2826              		.loc 1 1008 0
 2827 08a8 1B4B     		ldr	r3, .L200
 2828 08aa 1B78     		ldrb	r3, [r3]
 2829 08ac DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 69


 2830 08ae 092B     		cmp	r3, #9
 2831 08b0 00F2B280 		bhi	.L98
 2832              	.LBB20:
1009:main.c        ****         {
1010:main.c        ****             
1011:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
1012:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_low[main_counter])
 2833              		.loc 1 1012 0
 2834 08b4 184B     		ldr	r3, .L200
 2835 08b6 1B78     		ldrb	r3, [r3]
 2836 08b8 DBB2     		uxtb	r3, r3
 2837 08ba 1A46     		mov	r2, r3
 2838 08bc 174B     		ldr	r3, .L200+4
 2839 08be 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2840 08c2 154B     		ldr	r3, .L200
 2841 08c4 1B78     		ldrb	r3, [r3]
 2842 08c6 DBB2     		uxtb	r3, r3
 2843 08c8 1946     		mov	r1, r3
 2844 08ca 154B     		ldr	r3, .L200+8
 2845 08cc 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2846 08d0 D31A     		subs	r3, r2, r3
 2847 08d2 9BB2     		uxth	r3, r3
 2848 08d4 BB83     		strh	r3, [r7, #28]	@ movhi
1013:main.c        ****             
1014:main.c        ****             if (tempangle > 0)
 2849              		.loc 1 1014 0
 2850 08d6 B7F91C30 		ldrsh	r3, [r7, #28]
 2851 08da 002B     		cmp	r3, #0
 2852 08dc 3EDD     		ble	.L99
1015:main.c        ****             {
1016:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 2853              		.loc 1 1016 0
 2854 08de 0E4B     		ldr	r3, .L200
 2855 08e0 1B78     		ldrb	r3, [r3]
 2856 08e2 DBB2     		uxtb	r3, r3
 2857 08e4 1C46     		mov	r4, r3
 2858 08e6 B7F91C30 		ldrsh	r3, [r7, #28]
 2859 08ea 1846     		mov	r0, r3
 2860 08ec FFF7FEFF 		bl	__aeabi_i2f
 2861 08f0 094B     		ldr	r3, .L200
 2862 08f2 1B78     		ldrb	r3, [r3]
 2863 08f4 DBB2     		uxtb	r3, r3
 2864 08f6 1A46     		mov	r2, r3
 2865 08f8 164B     		ldr	r3, .L200+60
 2866 08fa 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 2867 08fe 1946     		mov	r1, r3
 2868 0900 FFF7FEFF 		bl	__aeabi_fmul
 2869 0904 0346     		mov	r3, r0
 2870 0906 1846     		mov	r0, r3
 2871 0908 FFF7FEFF 		bl	__aeabi_f2uiz
 2872 090c 0346     		mov	r3, r0
 2873 090e 9AB2     		uxth	r2, r3
 2874 0910 114B     		ldr	r3, .L200+64
 2875 0912 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 2876 0916 29E0     		b	.L100
 2877              	.L201:
 2878              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 70


 2879              	.L200:
 2880 0918 00000000 		.word	main_counter
 2881 091c 00000000 		.word	angle
 2882 0920 00000000 		.word	pedals_low
 2883 0924 00000000 		.word	pedals_high
 2884 0928 00000000 		.word	i2c_skipped
 2885 092c 00000000 		.word	I2Cbuff1
 2886 0930 00000000 		.word	status
 2887 0934 00000000 		.word	I2Cbuff2
 2888 0938 00000000 		.word	macroKnobValues
 2889 093c 00000000 		.word	macroOLEDWaitingToSend
 2890 0940 00000000 		.word	whichMacro
 2891 0944 00000000 		.word	patchNum
 2892 0948 00000000 		.word	macroNamesArray
 2893 094c 00000000 		.word	volumePedal
 2894 0950 00000000 		.word	mainOLEDWaitingToSend
 2895 0954 00000000 		.word	pedalRatios
 2896 0958 00000000 		.word	processed_pedals
 2897              	.L99:
1017:main.c        ****             }
1018:main.c        ****             else
1019:main.c        ****             {
1020:main.c        ****                 processed_pedals[main_counter] = 0;
 2898              		.loc 1 1020 0
 2899 095c A44B     		ldr	r3, .L202
 2900 095e 1B78     		ldrb	r3, [r3]
 2901 0960 DBB2     		uxtb	r3, r3
 2902 0962 1A46     		mov	r2, r3
 2903 0964 A34B     		ldr	r3, .L202+4
 2904 0966 0021     		movs	r1, #0
 2905 0968 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2906              	.L100:
1021:main.c        ****             }
1022:main.c        ****             if (processed_pedals[main_counter] > 4095)
 2907              		.loc 1 1022 0
 2908 096c A04B     		ldr	r3, .L202
 2909 096e 1B78     		ldrb	r3, [r3]
 2910 0970 DBB2     		uxtb	r3, r3
 2911 0972 1A46     		mov	r2, r3
 2912 0974 9F4B     		ldr	r3, .L202+4
 2913 0976 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2914 097a B3F5805F 		cmp	r3, #4096
 2915 097e 08D3     		bcc	.L101
1023:main.c        ****             {
1024:main.c        ****                 processed_pedals[main_counter] = 4095;
 2916              		.loc 1 1024 0
 2917 0980 9B4B     		ldr	r3, .L202
 2918 0982 1B78     		ldrb	r3, [r3]
 2919 0984 DBB2     		uxtb	r3, r3
 2920 0986 1A46     		mov	r2, r3
 2921 0988 9A4B     		ldr	r3, .L202+4
 2922 098a 40F6FF71 		movw	r1, #4095
 2923 098e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2924              	.L101:
1025:main.c        ****             }
1026:main.c        ****             
1027:main.c        ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 71


1028:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
1029:main.c        ****             {
1030:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
1031:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
1032:main.c        ****             }
1033:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 2925              		.loc 1 1033 0
 2926 0992 974B     		ldr	r3, .L202
 2927 0994 1B78     		ldrb	r3, [r3]
 2928 0996 DBB2     		uxtb	r3, r3
 2929 0998 1C46     		mov	r4, r3
 2930 099a 954B     		ldr	r3, .L202
 2931 099c 1B78     		ldrb	r3, [r3]
 2932 099e DBB2     		uxtb	r3, r3
 2933 09a0 1A46     		mov	r2, r3
 2934 09a2 944B     		ldr	r3, .L202+4
 2935 09a4 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2936 09a8 1846     		mov	r0, r3
 2937 09aa FFF7FEFF 		bl	__aeabi_ui2f
 2938 09ae 0346     		mov	r3, r0
 2939 09b0 9149     		ldr	r1, .L202+8
 2940 09b2 1846     		mov	r0, r3
 2941 09b4 FFF7FEFF 		bl	__aeabi_fmul
 2942 09b8 0346     		mov	r3, r0
 2943 09ba 1A46     		mov	r2, r3
 2944 09bc 8F4B     		ldr	r3, .L202+12
 2945 09be 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
1034:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[main_counter] * 0.0625f;
 2946              		.loc 1 1034 0
 2947 09c2 8B4B     		ldr	r3, .L202
 2948 09c4 1B78     		ldrb	r3, [r3]
 2949 09c6 DBB2     		uxtb	r3, r3
 2950 09c8 1C46     		mov	r4, r3
 2951 09ca 894B     		ldr	r3, .L202
 2952 09cc 1B78     		ldrb	r3, [r3]
 2953 09ce DBB2     		uxtb	r3, r3
 2954 09d0 1A46     		mov	r2, r3
 2955 09d2 884B     		ldr	r3, .L202+4
 2956 09d4 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2957 09d8 1846     		mov	r0, r3
 2958 09da FFF7FEFF 		bl	__aeabi_ui2f
 2959 09de 0346     		mov	r3, r0
 2960 09e0 4FF07651 		mov	r1, #1031798784
 2961 09e4 1846     		mov	r0, r3
 2962 09e6 FFF7FEFF 		bl	__aeabi_fmul
 2963 09ea 0346     		mov	r3, r0
 2964 09ec 1846     		mov	r0, r3
 2965 09ee FFF7FEFF 		bl	__aeabi_f2uiz
 2966 09f2 0346     		mov	r3, r0
 2967 09f4 DAB2     		uxtb	r2, r3
 2968 09f6 824B     		ldr	r3, .L202+16
 2969 09f8 1A55     		strb	r2, [r3, r4]
1035:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 2970              		.loc 1 1035 0
 2971 09fa 7D4B     		ldr	r3, .L202
 2972 09fc 1B78     		ldrb	r3, [r3]
 2973 09fe DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 72


 2974 0a00 1A46     		mov	r2, r3
 2975 0a02 7B4B     		ldr	r3, .L202
 2976 0a04 1B78     		ldrb	r3, [r3]
 2977 0a06 DBB2     		uxtb	r3, r3
 2978 0a08 1946     		mov	r1, r3
 2979 0a0a 7A4B     		ldr	r3, .L202+4
 2980 0a0c 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2981 0a10 7C4B     		ldr	r3, .L202+20
 2982 0a12 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2983              	.LBE20:
 2984 0a16 45E0     		b	.L102
 2985              	.L98:
1036:main.c        ****         }
1037:main.c        ****         else
1038:main.c        ****         {
1039:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 2986              		.loc 1 1039 0
 2987 0a18 7B4B     		ldr	r3, .L202+24
 2988 0a1a 1B88     		ldrh	r3, [r3]
 2989 0a1c 1846     		mov	r0, r3
 2990 0a1e FFF7FEFF 		bl	__aeabi_ui2f
 2991 0a22 0346     		mov	r3, r0
 2992 0a24 7949     		ldr	r1, .L202+28
 2993 0a26 1846     		mov	r0, r3
 2994 0a28 FFF7FEFF 		bl	__aeabi_fmul
 2995 0a2c 0346     		mov	r3, r0
 2996 0a2e 1846     		mov	r0, r3
 2997 0a30 FFF7FEFF 		bl	__aeabi_f2iz
 2998 0a34 0346     		mov	r3, r0
 2999 0a36 1AB2     		sxth	r2, r3
 3000 0a38 754B     		ldr	r3, .L202+32
 3001 0a3a 1A80     		strh	r2, [r3]	@ movhi
1040:main.c        **** 
1041:main.c        ****             if (processed_volumePedal < 0)
 3002              		.loc 1 1041 0
 3003 0a3c 744B     		ldr	r3, .L202+32
 3004 0a3e B3F90030 		ldrsh	r3, [r3]
 3005 0a42 002B     		cmp	r3, #0
 3006 0a44 03DA     		bge	.L103
1042:main.c        ****             {
1043:main.c        ****                 processed_volumePedal = 0;
 3007              		.loc 1 1043 0
 3008 0a46 724B     		ldr	r3, .L202+32
 3009 0a48 0022     		movs	r2, #0
 3010 0a4a 1A80     		strh	r2, [r3]	@ movhi
 3011 0a4c 09E0     		b	.L104
 3012              	.L103:
1044:main.c        ****             }
1045:main.c        ****             else if (processed_volumePedal > 4095)
 3013              		.loc 1 1045 0
 3014 0a4e 704B     		ldr	r3, .L202+32
 3015 0a50 B3F90030 		ldrsh	r3, [r3]
 3016 0a54 B3F5805F 		cmp	r3, #4096
 3017 0a58 03DB     		blt	.L104
1046:main.c        ****             {
1047:main.c        ****                  processed_volumePedal = 4095;
 3018              		.loc 1 1047 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 73


 3019 0a5a 6D4B     		ldr	r3, .L202+32
 3020 0a5c 40F6FF72 		movw	r2, #4095
 3021 0a60 1A80     		strh	r2, [r3]	@ movhi
 3022              	.L104:
1048:main.c        ****             }
1049:main.c        ****             
1050:main.c        ****             if ( processed_volumePedal != prev_processed_volumePedal)
 3023              		.loc 1 1050 0
 3024 0a62 6B4B     		ldr	r3, .L202+32
 3025 0a64 B3F90020 		ldrsh	r2, [r3]
 3026 0a68 6A4B     		ldr	r3, .L202+36
 3027 0a6a B3F90030 		ldrsh	r3, [r3]
 3028 0a6e 9A42     		cmp	r2, r3
 3029 0a70 13D0     		beq	.L105
 3030              	.LBB21:
1051:main.c        ****             {
1052:main.c        ****                 uint16_t tempPedal = processed_volumePedal;
 3031              		.loc 1 1052 0
 3032 0a72 674B     		ldr	r3, .L202+32
 3033 0a74 B3F90030 		ldrsh	r3, [r3]
 3034 0a78 7B83     		strh	r3, [r7, #26]	@ movhi
1053:main.c        ****                 
1054:main.c        ****                 sendMIDIControlChange(21, ( tempPedal >> 7), 0);
 3035              		.loc 1 1054 0
 3036 0a7a 7B8B     		ldrh	r3, [r7, #26]
 3037 0a7c DB09     		lsrs	r3, r3, #7
 3038 0a7e 9BB2     		uxth	r3, r3
 3039 0a80 0022     		movs	r2, #0
 3040 0a82 1946     		mov	r1, r3
 3041 0a84 1520     		movs	r0, #21
 3042 0a86 FFF7FEFF 		bl	sendMIDIControlChange
1055:main.c        ****                 sendMIDIControlChange(22, ( tempPedal & 127), 0);
 3043              		.loc 1 1055 0
 3044 0a8a 7B8B     		ldrh	r3, [r7, #26]
 3045 0a8c 03F07F03 		and	r3, r3, #127
 3046 0a90 0022     		movs	r2, #0
 3047 0a92 1946     		mov	r1, r3
 3048 0a94 1620     		movs	r0, #22
 3049 0a96 FFF7FEFF 		bl	sendMIDIControlChange
 3050              	.L105:
 3051              	.LBE21:
1056:main.c        ****             }
1057:main.c        ****              prev_processed_volumePedal = processed_volumePedal;
 3052              		.loc 1 1057 0
 3053 0a9a 5D4B     		ldr	r3, .L202+32
 3054 0a9c B3F90020 		ldrsh	r2, [r3]
 3055 0aa0 5C4B     		ldr	r3, .L202+36
 3056 0aa2 1A80     		strh	r2, [r3]	@ movhi
 3057              	.L102:
1058:main.c        ****         }
1059:main.c        ****         
1060:main.c        ****         main_counter++;
 3058              		.loc 1 1060 0
 3059 0aa4 524B     		ldr	r3, .L202
 3060 0aa6 1B78     		ldrb	r3, [r3]
 3061 0aa8 DBB2     		uxtb	r3, r3
 3062 0aaa 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 74


 3063 0aac DAB2     		uxtb	r2, r3
 3064 0aae 504B     		ldr	r3, .L202
 3065 0ab0 1A70     		strb	r2, [r3]
1061:main.c        **** 
1062:main.c        ****         if (main_counter > 11)
 3066              		.loc 1 1062 0
 3067 0ab2 4F4B     		ldr	r3, .L202
 3068 0ab4 1B78     		ldrb	r3, [r3]
 3069 0ab6 DBB2     		uxtb	r3, r3
 3070 0ab8 0B2B     		cmp	r3, #11
 3071 0aba 02D9     		bls	.L106
1063:main.c        ****         {
1064:main.c        ****             main_counter = 0;
 3072              		.loc 1 1064 0
 3073 0abc 4C4B     		ldr	r3, .L202
 3074 0abe 0022     		movs	r2, #0
 3075 0ac0 1A70     		strb	r2, [r3]
 3076              	.L106:
1065:main.c        ****         }
1066:main.c        ****         testpin3_Write(0);
 3077              		.loc 1 1066 0
 3078 0ac2 0020     		movs	r0, #0
 3079 0ac4 FFF7FEFF 		bl	testpin3_Write
1067:main.c        ****         #if 0
1068:main.c        ****             
1069:main.c        ****             
1070:main.c        ****         main_counter++;
1071:main.c        ****         if (main_counter >= 11)
1072:main.c        ****         {
1073:main.c        ****                /*  
1074:main.c        ****             testpin3_Write(1);
1075:main.c        ****             I2Cbuff1[0] = 1<<6;
1076:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1077:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
1078:main.c        **** 
1079:main.c        ****         //CyDelay(1);
1080:main.c        ****         
1081:main.c        ****         OLEDwriteInt(octave, 1, 0,SecondLine);
1082:main.c        **** 
1083:main.c        ****         OLED_draw();
1084:main.c        ****                     I2Cbuff1[0] = 1<<0;
1085:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1086:main.c        ****         testpin3_Write(0);
1087:main.c        ****             */
1088:main.c        ****             main_counter = 0;
1089:main.c        ****         }
1090:main.c        ****         #endif
1091:main.c        ****         testpin5_Write(1);
 3080              		.loc 1 1091 0
 3081 0ac8 0120     		movs	r0, #1
 3082 0aca FFF7FEFF 		bl	testpin5_Write
1092:main.c        ****         
1093:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 3083              		.loc 1 1093 0
 3084 0ace 524B     		ldr	r3, .L202+40
 3085 0ad0 1B78     		ldrb	r3, [r3]
 3086 0ad2 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 75


 3087 0ad4 002B     		cmp	r3, #0
 3088 0ad6 0CBF     		ite	eq
 3089 0ad8 0123     		moveq	r3, #1
 3090 0ada 0023     		movne	r3, #0
 3091 0adc DBB2     		uxtb	r3, r3
 3092 0ade 4F4A     		ldr	r2, .L202+44
 3093 0ae0 DB00     		lsls	r3, r3, #3
 3094 0ae2 1344     		add	r3, r3, r2
 3095 0ae4 9B79     		ldrb	r3, [r3, #6]
 3096 0ae6 DBB2     		uxtb	r3, r3
 3097 0ae8 FE2B     		cmp	r3, #254
 3098 0aea 4DD1     		bne	.L107
 3099              		.loc 1 1093 0 is_stmt 0 discriminator 1
 3100 0aec 4A4B     		ldr	r3, .L202+40
 3101 0aee 1B78     		ldrb	r3, [r3]
 3102 0af0 DBB2     		uxtb	r3, r3
 3103 0af2 002B     		cmp	r3, #0
 3104 0af4 0CBF     		ite	eq
 3105 0af6 0123     		moveq	r3, #1
 3106 0af8 0023     		movne	r3, #0
 3107 0afa DBB2     		uxtb	r3, r3
 3108 0afc 474A     		ldr	r2, .L202+44
 3109 0afe DB00     		lsls	r3, r3, #3
 3110 0b00 1344     		add	r3, r3, r2
 3111 0b02 DB79     		ldrb	r3, [r3, #7]
 3112 0b04 DBB2     		uxtb	r3, r3
 3113 0b06 FD2B     		cmp	r3, #253
 3114 0b08 3ED1     		bne	.L107
 3115              	.LBB22:
1094:main.c        ****         {
1095:main.c        ****             for (int i = 0; i < 2; i++)
 3116              		.loc 1 1095 0 is_stmt 1
 3117 0b0a 0023     		movs	r3, #0
 3118 0b0c 3B66     		str	r3, [r7, #96]
 3119 0b0e 38E0     		b	.L108
 3120              	.L109:
1096:main.c        ****             {
1097:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 3121              		.loc 1 1097 0 discriminator 3
 3122 0b10 414B     		ldr	r3, .L202+40
 3123 0b12 1B78     		ldrb	r3, [r3]
 3124 0b14 DBB2     		uxtb	r3, r3
 3125 0b16 002B     		cmp	r3, #0
 3126 0b18 0CBF     		ite	eq
 3127 0b1a 0123     		moveq	r3, #1
 3128 0b1c 0023     		movne	r3, #0
 3129 0b1e DBB2     		uxtb	r3, r3
 3130 0b20 1A46     		mov	r2, r3
 3131 0b22 3B6E     		ldr	r3, [r7, #96]
 3132 0b24 5B00     		lsls	r3, r3, #1
 3133 0b26 3D49     		ldr	r1, .L202+44
 3134 0b28 D200     		lsls	r2, r2, #3
 3135 0b2a 0A44     		add	r2, r2, r1
 3136 0b2c 1344     		add	r3, r3, r2
 3137 0b2e 1B78     		ldrb	r3, [r3]
 3138 0b30 DBB2     		uxtb	r3, r3
 3139 0b32 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 76


 3140 0b34 1B02     		lsls	r3, r3, #8
 3141 0b36 9AB2     		uxth	r2, r3
 3142 0b38 374B     		ldr	r3, .L202+40
 3143 0b3a 1B78     		ldrb	r3, [r3]
 3144 0b3c DBB2     		uxtb	r3, r3
 3145 0b3e 002B     		cmp	r3, #0
 3146 0b40 0CBF     		ite	eq
 3147 0b42 0123     		moveq	r3, #1
 3148 0b44 0023     		movne	r3, #0
 3149 0b46 DBB2     		uxtb	r3, r3
 3150 0b48 1946     		mov	r1, r3
 3151 0b4a 3B6E     		ldr	r3, [r7, #96]
 3152 0b4c 5B00     		lsls	r3, r3, #1
 3153 0b4e 0133     		adds	r3, r3, #1
 3154 0b50 3248     		ldr	r0, .L202+44
 3155 0b52 C900     		lsls	r1, r1, #3
 3156 0b54 0144     		add	r1, r1, r0
 3157 0b56 0B44     		add	r3, r3, r1
 3158 0b58 1B78     		ldrb	r3, [r3]
 3159 0b5a DBB2     		uxtb	r3, r3
 3160 0b5c 9BB2     		uxth	r3, r3
 3161 0b5e 1344     		add	r3, r3, r2
 3162 0b60 99B2     		uxth	r1, r3
 3163 0b62 2F4A     		ldr	r2, .L202+48
 3164 0b64 3B6E     		ldr	r3, [r7, #96]
 3165 0b66 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1098:main.c        ****                 /*
1099:main.c        ****                 if (bar[i] != prevBar[i])
1100:main.c        ****                 {
1101:main.c        ****     				if ((bar[i] == 65535) || (bar[i] > fretMeasurements[0][i]))
1102:main.c        ****     				{
1103:main.c        ****     					stringMappedPositions[i] = 1.0f;
1104:main.c        ****     				}
1105:main.c        **** 
1106:main.c        ****     				else if ((bar[i] >= fretMeasurements[1][i]) && (bar[i] <= fretMeasurements[0][i]))
1107:main.c        ****     				{
1108:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[0][i], fretMeasurements[1][
1109:main.c        ****     				}
1110:main.c        **** 
1111:main.c        ****     				else if ((bar[i] >= fretMeasurements[2][i]) && (bar[i] < fretMeasurements[1][i]))
1112:main.c        ****     				{
1113:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[1][i], fretMeasurements[2][
1114:main.c        ****     				}
1115:main.c        **** 
1116:main.c        ****     				else
1117:main.c        ****     				{
1118:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[2][i], fretMeasurements[3][
1119:main.c        ****     				}
1120:main.c        **** 
1121:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
1122:main.c        ****                 }
1123:main.c        ****                 */
1124:main.c        ****                 prevBar[i] = bar[i];
 3166              		.loc 1 1124 0 discriminator 3
 3167 0b6a 2D4A     		ldr	r2, .L202+48
 3168 0b6c 3B6E     		ldr	r3, [r7, #96]
 3169 0b6e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 77


 3170 0b72 99B2     		uxth	r1, r3
 3171 0b74 2B4A     		ldr	r2, .L202+52
 3172 0b76 3B6E     		ldr	r3, [r7, #96]
 3173 0b78 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1095:main.c        ****             {
 3174              		.loc 1 1095 0 discriminator 3
 3175 0b7c 3B6E     		ldr	r3, [r7, #96]
 3176 0b7e 0133     		adds	r3, r3, #1
 3177 0b80 3B66     		str	r3, [r7, #96]
 3178              	.L108:
1095:main.c        ****             {
 3179              		.loc 1 1095 0 is_stmt 0 discriminator 1
 3180 0b82 3B6E     		ldr	r3, [r7, #96]
 3181 0b84 012B     		cmp	r3, #1
 3182 0b86 C3DD     		ble	.L109
 3183              	.L107:
 3184              	.LBE22:
1125:main.c        ****             }
1126:main.c        ****         }
1127:main.c        ****         
1128:main.c        ****         testpin5_Write(0);
 3185              		.loc 1 1128 0 is_stmt 1
 3186 0b88 0020     		movs	r0, #0
 3187 0b8a FFF7FEFF 		bl	testpin5_Write
 3188              	.LBB23:
1129:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 3189              		.loc 1 1129 0
 3190 0b8e 0023     		movs	r3, #0
 3191 0b90 FB65     		str	r3, [r7, #92]
 3192 0b92 1AE0     		b	.L110
 3193              	.L112:
1130:main.c        ****         {
1131:main.c        ****             if (strings[i] != prevStrings[i])
 3194              		.loc 1 1131 0
 3195 0b94 244A     		ldr	r2, .L202+56
 3196 0b96 FB6D     		ldr	r3, [r7, #92]
 3197 0b98 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3198 0b9c 9AB2     		uxth	r2, r3
 3199 0b9e 2349     		ldr	r1, .L202+60
 3200 0ba0 FB6D     		ldr	r3, [r7, #92]
 3201 0ba2 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3202 0ba6 9BB2     		uxth	r3, r3
 3203 0ba8 9A42     		cmp	r2, r3
 3204 0baa 02D0     		beq	.L111
1132:main.c        ****             {
1133:main.c        ****                 noteEvent(i);
 3205              		.loc 1 1133 0
 3206 0bac F86D     		ldr	r0, [r7, #92]
 3207 0bae FFF7FEFF 		bl	noteEvent
 3208              	.L111:
1134:main.c        ****             }
1135:main.c        ****             prevStrings[i] = strings[i];
 3209              		.loc 1 1135 0 discriminator 2
 3210 0bb2 1D4A     		ldr	r2, .L202+56
 3211 0bb4 FB6D     		ldr	r3, [r7, #92]
 3212 0bb6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3213 0bba 99B2     		uxth	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 78


 3214 0bbc 1B4A     		ldr	r2, .L202+60
 3215 0bbe FB6D     		ldr	r3, [r7, #92]
 3216 0bc0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1129:main.c        ****         {
 3217              		.loc 1 1129 0 discriminator 2
 3218 0bc4 FB6D     		ldr	r3, [r7, #92]
 3219 0bc6 0133     		adds	r3, r3, #1
 3220 0bc8 FB65     		str	r3, [r7, #92]
 3221              	.L110:
1129:main.c        ****         {
 3222              		.loc 1 1129 0 is_stmt 0 discriminator 1
 3223 0bca 194B     		ldr	r3, .L202+64
 3224 0bcc 1B68     		ldr	r3, [r3]
 3225 0bce FA6D     		ldr	r2, [r7, #92]
 3226 0bd0 9A42     		cmp	r2, r3
 3227 0bd2 DFDB     		blt	.L112
 3228              	.LBE23:
1136:main.c        ****         }
1137:main.c        ****         
1138:main.c        **** 
1139:main.c        **** 
1140:main.c        ****         
1141:main.c        ****         
1142:main.c        ****         if (!oct1_Read())
 3229              		.loc 1 1142 0 is_stmt 1
 3230 0bd4 FFF7FEFF 		bl	oct1_Read
 3231 0bd8 0346     		mov	r3, r0
 3232 0bda 002B     		cmp	r3, #0
 3233 0bdc 49D1     		bne	.L113
1143:main.c        ****         {
1144:main.c        ****             if (octave > 4)
 3234              		.loc 1 1144 0
 3235 0bde 154B     		ldr	r3, .L202+68
 3236 0be0 1B68     		ldr	r3, [r3]
 3237 0be2 042B     		cmp	r3, #4
 3238 0be4 28DD     		ble	.L114
1145:main.c        ****             {
1146:main.c        ****                 octave = 4;
 3239              		.loc 1 1146 0
 3240 0be6 134B     		ldr	r3, .L202+68
 3241 0be8 0422     		movs	r2, #4
 3242 0bea 1A60     		str	r2, [r3]
 3243 0bec 31E0     		b	.L115
 3244              	.L203:
 3245 0bee 00BF     		.align	2
 3246              	.L202:
 3247 0bf0 00000000 		.word	main_counter
 3248 0bf4 00000000 		.word	processed_pedals
 3249 0bf8 01088039 		.word	964691969
 3250 0bfc 00000000 		.word	pedals_float
 3251 0c00 00000000 		.word	pedals8bit
 3252 0c04 00000000 		.word	prev_processed_pedals
 3253 0c08 00000000 		.word	volumePedal
 3254 0c0c C5F1803F 		.word	1065415109
 3255 0c10 00000000 		.word	processed_volumePedal
 3256 0c14 00000000 		.word	prev_processed_volumePedal
 3257 0c18 00000000 		.word	currentBarBuffer
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 79


 3258 0c1c 00000000 		.word	rxBufferBar
 3259 0c20 00000000 		.word	bar
 3260 0c24 00000000 		.word	prevBar
 3261 0c28 00000000 		.word	strings
 3262 0c2c 00000000 		.word	prevStrings
 3263 0c30 00000000 		.word	numStrings
 3264 0c34 00000000 		.word	octave
 3265              	.L114:
1147:main.c        **** 
1148:main.c        ****             }
1149:main.c        ****             else if ((oct1Up) && (octave > 0))
 3266              		.loc 1 1149 0
 3267 0c38 AA4B     		ldr	r3, .L204
 3268 0c3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3269 0c3c 002B     		cmp	r3, #0
 3270 0c3e 08D0     		beq	.L115
 3271              		.loc 1 1149 0 is_stmt 0 discriminator 1
 3272 0c40 A94B     		ldr	r3, .L204+4
 3273 0c42 1B68     		ldr	r3, [r3]
 3274 0c44 002B     		cmp	r3, #0
 3275 0c46 04DD     		ble	.L115
1150:main.c        ****             {
1151:main.c        ****                 octave--;
 3276              		.loc 1 1151 0 is_stmt 1
 3277 0c48 A74B     		ldr	r3, .L204+4
 3278 0c4a 1B68     		ldr	r3, [r3]
 3279 0c4c 013B     		subs	r3, r3, #1
 3280 0c4e A64A     		ldr	r2, .L204+4
 3281 0c50 1360     		str	r3, [r2]
 3282              	.L115:
1152:main.c        ****             }
1153:main.c        ****             LED_amber1_Write(1);
 3283              		.loc 1 1153 0
 3284 0c52 0120     		movs	r0, #1
 3285 0c54 FFF7FEFF 		bl	LED_amber1_Write
1154:main.c        ****             LED_amber2_Write(0);
 3286              		.loc 1 1154 0
 3287 0c58 0020     		movs	r0, #0
 3288 0c5a FFF7FEFF 		bl	LED_amber2_Write
1155:main.c        ****             LED_amber3_Write(0);
 3289              		.loc 1 1155 0
 3290 0c5e 0020     		movs	r0, #0
 3291 0c60 FFF7FEFF 		bl	LED_amber3_Write
1156:main.c        ****             LED_amber4_Write(0);
 3292              		.loc 1 1156 0
 3293 0c64 0020     		movs	r0, #0
 3294 0c66 FFF7FEFF 		bl	LED_amber4_Write
1157:main.c        ****             oct1Up = 0;
 3295              		.loc 1 1157 0
 3296 0c6a 9E4B     		ldr	r3, .L204
 3297 0c6c 0022     		movs	r2, #0
 3298 0c6e 1A70     		strb	r2, [r3]
 3299 0c70 07E0     		b	.L116
 3300              	.L113:
1158:main.c        ****         }
1159:main.c        ****         
1160:main.c        ****         else if (oct1_Read())
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 80


 3301              		.loc 1 1160 0
 3302 0c72 FFF7FEFF 		bl	oct1_Read
 3303 0c76 0346     		mov	r3, r0
 3304 0c78 002B     		cmp	r3, #0
 3305 0c7a 02D0     		beq	.L116
1161:main.c        ****         {
1162:main.c        ****             oct1Up = 1;
 3306              		.loc 1 1162 0
 3307 0c7c 994B     		ldr	r3, .L204
 3308 0c7e 0122     		movs	r2, #1
 3309 0c80 1A70     		strb	r2, [r3]
 3310              	.L116:
1163:main.c        ****         }
1164:main.c        ****         
1165:main.c        ****         if (!oct2_Read())
 3311              		.loc 1 1165 0
 3312 0c82 FFF7FEFF 		bl	oct2_Read
 3313 0c86 0346     		mov	r3, r0
 3314 0c88 002B     		cmp	r3, #0
 3315 0c8a 0ED1     		bne	.L117
1166:main.c        ****         {
1167:main.c        ****             octave = 5;
 3316              		.loc 1 1167 0
 3317 0c8c 964B     		ldr	r3, .L204+4
 3318 0c8e 0522     		movs	r2, #5
 3319 0c90 1A60     		str	r2, [r3]
1168:main.c        ****             LED_amber1_Write(0);
 3320              		.loc 1 1168 0
 3321 0c92 0020     		movs	r0, #0
 3322 0c94 FFF7FEFF 		bl	LED_amber1_Write
1169:main.c        ****             LED_amber2_Write(1);
 3323              		.loc 1 1169 0
 3324 0c98 0120     		movs	r0, #1
 3325 0c9a FFF7FEFF 		bl	LED_amber2_Write
1170:main.c        ****             LED_amber3_Write(0);
 3326              		.loc 1 1170 0
 3327 0c9e 0020     		movs	r0, #0
 3328 0ca0 FFF7FEFF 		bl	LED_amber3_Write
1171:main.c        ****             LED_amber4_Write(0);
 3329              		.loc 1 1171 0
 3330 0ca4 0020     		movs	r0, #0
 3331 0ca6 FFF7FEFF 		bl	LED_amber4_Write
 3332              	.L117:
1172:main.c        ****         }
1173:main.c        ****         if (!oct3_Read())
 3333              		.loc 1 1173 0
 3334 0caa FFF7FEFF 		bl	oct3_Read
 3335 0cae 0346     		mov	r3, r0
 3336 0cb0 002B     		cmp	r3, #0
 3337 0cb2 0ED1     		bne	.L118
1174:main.c        ****         {
1175:main.c        ****             octave = 6;
 3338              		.loc 1 1175 0
 3339 0cb4 8C4B     		ldr	r3, .L204+4
 3340 0cb6 0622     		movs	r2, #6
 3341 0cb8 1A60     		str	r2, [r3]
1176:main.c        ****             LED_amber1_Write(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 81


 3342              		.loc 1 1176 0
 3343 0cba 0020     		movs	r0, #0
 3344 0cbc FFF7FEFF 		bl	LED_amber1_Write
1177:main.c        ****             LED_amber2_Write(0);
 3345              		.loc 1 1177 0
 3346 0cc0 0020     		movs	r0, #0
 3347 0cc2 FFF7FEFF 		bl	LED_amber2_Write
1178:main.c        ****             LED_amber3_Write(1);
 3348              		.loc 1 1178 0
 3349 0cc6 0120     		movs	r0, #1
 3350 0cc8 FFF7FEFF 		bl	LED_amber3_Write
1179:main.c        ****             LED_amber4_Write(0);            
 3351              		.loc 1 1179 0
 3352 0ccc 0020     		movs	r0, #0
 3353 0cce FFF7FEFF 		bl	LED_amber4_Write
 3354              	.L118:
1180:main.c        ****         }
1181:main.c        ****         if (!oct4_Read())
 3355              		.loc 1 1181 0
 3356 0cd2 FFF7FEFF 		bl	oct4_Read
 3357 0cd6 0346     		mov	r3, r0
 3358 0cd8 002B     		cmp	r3, #0
 3359 0cda 24D1     		bne	.L119
1182:main.c        ****         {
1183:main.c        ****             if (octave < 7)
 3360              		.loc 1 1183 0
 3361 0cdc 824B     		ldr	r3, .L204+4
 3362 0cde 1B68     		ldr	r3, [r3]
 3363 0ce0 062B     		cmp	r3, #6
 3364 0ce2 03DC     		bgt	.L120
1184:main.c        ****             {
1185:main.c        ****                 octave = 7;
 3365              		.loc 1 1185 0
 3366 0ce4 804B     		ldr	r3, .L204+4
 3367 0ce6 0722     		movs	r2, #7
 3368 0ce8 1A60     		str	r2, [r3]
 3369 0cea 0CE0     		b	.L121
 3370              	.L120:
1186:main.c        **** 
1187:main.c        ****             }
1188:main.c        ****             else if ((oct4Up) && (octave < 11))
 3371              		.loc 1 1188 0
 3372 0cec 7F4B     		ldr	r3, .L204+8
 3373 0cee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3374 0cf0 002B     		cmp	r3, #0
 3375 0cf2 08D0     		beq	.L121
 3376              		.loc 1 1188 0 is_stmt 0 discriminator 1
 3377 0cf4 7C4B     		ldr	r3, .L204+4
 3378 0cf6 1B68     		ldr	r3, [r3]
 3379 0cf8 0A2B     		cmp	r3, #10
 3380 0cfa 04DC     		bgt	.L121
1189:main.c        ****             {
1190:main.c        ****                 octave++;
 3381              		.loc 1 1190 0 is_stmt 1
 3382 0cfc 7A4B     		ldr	r3, .L204+4
 3383 0cfe 1B68     		ldr	r3, [r3]
 3384 0d00 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 82


 3385 0d02 794A     		ldr	r2, .L204+4
 3386 0d04 1360     		str	r3, [r2]
 3387              	.L121:
1191:main.c        **** 
1192:main.c        ****             }
1193:main.c        ****             LED_amber1_Write(0);
 3388              		.loc 1 1193 0
 3389 0d06 0020     		movs	r0, #0
 3390 0d08 FFF7FEFF 		bl	LED_amber1_Write
1194:main.c        ****             LED_amber2_Write(0);
 3391              		.loc 1 1194 0
 3392 0d0c 0020     		movs	r0, #0
 3393 0d0e FFF7FEFF 		bl	LED_amber2_Write
1195:main.c        ****             LED_amber3_Write(0);
 3394              		.loc 1 1195 0
 3395 0d12 0020     		movs	r0, #0
 3396 0d14 FFF7FEFF 		bl	LED_amber3_Write
1196:main.c        ****             LED_amber4_Write(1);
 3397              		.loc 1 1196 0
 3398 0d18 0120     		movs	r0, #1
 3399 0d1a FFF7FEFF 		bl	LED_amber4_Write
1197:main.c        ****             oct4Up = 0;
 3400              		.loc 1 1197 0
 3401 0d1e 734B     		ldr	r3, .L204+8
 3402 0d20 0022     		movs	r2, #0
 3403 0d22 1A70     		strb	r2, [r3]
 3404 0d24 07E0     		b	.L122
 3405              	.L119:
1198:main.c        ****         }
1199:main.c        ****         
1200:main.c        ****         else if (oct4_Read())
 3406              		.loc 1 1200 0
 3407 0d26 FFF7FEFF 		bl	oct4_Read
 3408 0d2a 0346     		mov	r3, r0
 3409 0d2c 002B     		cmp	r3, #0
 3410 0d2e 02D0     		beq	.L122
1201:main.c        ****         {
1202:main.c        ****             oct4Up = 1;
 3411              		.loc 1 1202 0
 3412 0d30 6E4B     		ldr	r3, .L204+8
 3413 0d32 0122     		movs	r2, #1
 3414 0d34 1A70     		strb	r2, [r3]
 3415              	.L122:
1203:main.c        ****         }
1204:main.c        ****         
1205:main.c        ****         if (!neck1_button_Read())
 3416              		.loc 1 1205 0
 3417 0d36 FFF7FEFF 		bl	neck1_button_Read
 3418 0d3a 0346     		mov	r3, r0
 3419 0d3c 002B     		cmp	r3, #0
 3420 0d3e 10D1     		bne	.L123
1206:main.c        ****         {
1207:main.c        ****             currentNeck = 0;
 3421              		.loc 1 1207 0
 3422 0d40 6B4B     		ldr	r3, .L204+12
 3423 0d42 0022     		movs	r2, #0
 3424 0d44 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 83


1208:main.c        ****             currentCopedent = necks[currentNeck];
 3425              		.loc 1 1208 0
 3426 0d46 6A4B     		ldr	r3, .L204+12
 3427 0d48 1B68     		ldr	r3, [r3]
 3428 0d4a 6A4A     		ldr	r2, .L204+16
 3429 0d4c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3430 0d4e 6A4B     		ldr	r3, .L204+20
 3431 0d50 1A70     		strb	r2, [r3]
1209:main.c        ****             LED_red1_Write(0);
 3432              		.loc 1 1209 0
 3433 0d52 0020     		movs	r0, #0
 3434 0d54 FFF7FEFF 		bl	LED_red1_Write
1210:main.c        ****             LED_green2_Write(1);
 3435              		.loc 1 1210 0
 3436 0d58 0120     		movs	r0, #1
 3437 0d5a FFF7FEFF 		bl	LED_green2_Write
1211:main.c        ****             displayCurrentPresetNameAndCopedent();
 3438              		.loc 1 1211 0
 3439 0d5e FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3440              	.L123:
1212:main.c        ****         }
1213:main.c        ****         if (!neck2_button_Read())
 3441              		.loc 1 1213 0
 3442 0d62 FFF7FEFF 		bl	neck2_button_Read
 3443 0d66 0346     		mov	r3, r0
 3444 0d68 002B     		cmp	r3, #0
 3445 0d6a 10D1     		bne	.L124
1214:main.c        ****         {
1215:main.c        ****             currentNeck = 1;
 3446              		.loc 1 1215 0
 3447 0d6c 604B     		ldr	r3, .L204+12
 3448 0d6e 0122     		movs	r2, #1
 3449 0d70 1A60     		str	r2, [r3]
1216:main.c        ****             currentCopedent = necks[currentNeck];            
 3450              		.loc 1 1216 0
 3451 0d72 5F4B     		ldr	r3, .L204+12
 3452 0d74 1B68     		ldr	r3, [r3]
 3453 0d76 5F4A     		ldr	r2, .L204+16
 3454 0d78 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3455 0d7a 5F4B     		ldr	r3, .L204+20
 3456 0d7c 1A70     		strb	r2, [r3]
1217:main.c        ****             LED_red1_Write(1);
 3457              		.loc 1 1217 0
 3458 0d7e 0120     		movs	r0, #1
 3459 0d80 FFF7FEFF 		bl	LED_red1_Write
1218:main.c        ****             LED_green2_Write(0);          
 3460              		.loc 1 1218 0
 3461 0d84 0020     		movs	r0, #0
 3462 0d86 FFF7FEFF 		bl	LED_green2_Write
1219:main.c        ****             displayCurrentPresetNameAndCopedent();
 3463              		.loc 1 1219 0
 3464 0d8a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3465              	.L124:
1220:main.c        ****         }
1221:main.c        ****         
1222:main.c        ****         if ((!enter_button_Read()) && (enterUp))
 3466              		.loc 1 1222 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 84


 3467 0d8e FFF7FEFF 		bl	enter_button_Read
 3468 0d92 0346     		mov	r3, r0
 3469 0d94 002B     		cmp	r3, #0
 3470 0d96 16D1     		bne	.L125
 3471              		.loc 1 1222 0 is_stmt 0 discriminator 1
 3472 0d98 584B     		ldr	r3, .L204+24
 3473 0d9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3474 0d9c 002B     		cmp	r3, #0
 3475 0d9e 12D0     		beq	.L125
1223:main.c        ****         {
1224:main.c        ****             dualSlider = !dualSlider;
 3476              		.loc 1 1224 0 is_stmt 1
 3477 0da0 574B     		ldr	r3, .L204+28
 3478 0da2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3479 0da4 002B     		cmp	r3, #0
 3480 0da6 0CBF     		ite	eq
 3481 0da8 0123     		moveq	r3, #1
 3482 0daa 0023     		movne	r3, #0
 3483 0dac DBB2     		uxtb	r3, r3
 3484 0dae 1A46     		mov	r2, r3
 3485 0db0 534B     		ldr	r3, .L204+28
 3486 0db2 1A70     		strb	r2, [r3]
1225:main.c        ****             LED_green1_Write(dualSlider);
 3487              		.loc 1 1225 0
 3488 0db4 524B     		ldr	r3, .L204+28
 3489 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3490 0db8 1846     		mov	r0, r3
 3491 0dba FFF7FEFF 		bl	LED_green1_Write
1226:main.c        ****             enterUp = 0;
 3492              		.loc 1 1226 0
 3493 0dbe 4F4B     		ldr	r3, .L204+24
 3494 0dc0 0022     		movs	r2, #0
 3495 0dc2 1A70     		strb	r2, [r3]
 3496 0dc4 07E0     		b	.L126
 3497              	.L125:
1227:main.c        ****         }
1228:main.c        ****         else if (enter_button_Read())
 3498              		.loc 1 1228 0
 3499 0dc6 FFF7FEFF 		bl	enter_button_Read
 3500 0dca 0346     		mov	r3, r0
 3501 0dcc 002B     		cmp	r3, #0
 3502 0dce 02D0     		beq	.L126
1229:main.c        ****         {
1230:main.c        ****             enterUp = 1;
 3503              		.loc 1 1230 0
 3504 0dd0 4A4B     		ldr	r3, .L204+24
 3505 0dd2 0122     		movs	r2, #1
 3506 0dd4 1A70     		strb	r2, [r3]
 3507              	.L126:
1231:main.c        ****         }
1232:main.c        ****         
1233:main.c        ****         
1234:main.c        ****         if (!editMode)
 3508              		.loc 1 1234 0
 3509 0dd6 4B4B     		ldr	r3, .L204+32
 3510 0dd8 1B68     		ldr	r3, [r3]
 3511 0dda 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 85


 3512 0ddc 40F0CA80 		bne	.L127
1235:main.c        ****         {
1236:main.c        ****         
1237:main.c        ****             if ((!button1_Read()) && (button1Up))
 3513              		.loc 1 1237 0
 3514 0de0 FFF7FEFF 		bl	button1_Read
 3515 0de4 0346     		mov	r3, r0
 3516 0de6 002B     		cmp	r3, #0
 3517 0de8 25D1     		bne	.L128
 3518              		.loc 1 1237 0 is_stmt 0 discriminator 1
 3519 0dea 474B     		ldr	r3, .L204+36
 3520 0dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3521 0dee 002B     		cmp	r3, #0
 3522 0df0 21D0     		beq	.L128
1238:main.c        ****             {
1239:main.c        ****                 currentCopedent -= 1;
 3523              		.loc 1 1239 0 is_stmt 1
 3524 0df2 414B     		ldr	r3, .L204+20
 3525 0df4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3526 0df6 013B     		subs	r3, r3, #1
 3527 0df8 DAB2     		uxtb	r2, r3
 3528 0dfa 3F4B     		ldr	r3, .L204+20
 3529 0dfc 1A70     		strb	r2, [r3]
1240:main.c        ****                 currentCopedent &= 31;
 3530              		.loc 1 1240 0
 3531 0dfe 3E4B     		ldr	r3, .L204+20
 3532 0e00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3533 0e02 03F01F03 		and	r3, r3, #31
 3534 0e06 DAB2     		uxtb	r2, r3
 3535 0e08 3B4B     		ldr	r3, .L204+20
 3536 0e0a 1A70     		strb	r2, [r3]
1241:main.c        ****                 necks[currentNeck] = currentCopedent;
 3537              		.loc 1 1241 0
 3538 0e0c 384B     		ldr	r3, .L204+12
 3539 0e0e 1B68     		ldr	r3, [r3]
 3540 0e10 394A     		ldr	r2, .L204+20
 3541 0e12 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3542 0e14 374A     		ldr	r2, .L204+16
 3543 0e16 D154     		strb	r1, [r2, r3]
1242:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3544              		.loc 1 1242 0
 3545 0e18 374B     		ldr	r3, .L204+20
 3546 0e1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3547 0e1c 344B     		ldr	r3, .L204+12
 3548 0e1e 1B68     		ldr	r3, [r3]
 3549 0e20 9BB2     		uxth	r3, r3
 3550 0e22 1946     		mov	r1, r3
 3551 0e24 1046     		mov	r0, r2
 3552 0e26 FFF7FEFF 		bl	EEPROM_WriteByte
1243:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3553              		.loc 1 1243 0
 3554 0e2a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1244:main.c        ****                 button1Up = 0;
 3555              		.loc 1 1244 0
 3556 0e2e 364B     		ldr	r3, .L204+36
 3557 0e30 0022     		movs	r2, #0
 3558 0e32 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 86


 3559 0e34 07E0     		b	.L129
 3560              	.L128:
1245:main.c        ****             }
1246:main.c        ****             else if (button1_Read())
 3561              		.loc 1 1246 0
 3562 0e36 FFF7FEFF 		bl	button1_Read
 3563 0e3a 0346     		mov	r3, r0
 3564 0e3c 002B     		cmp	r3, #0
 3565 0e3e 02D0     		beq	.L129
1247:main.c        ****             {
1248:main.c        ****                 button1Up = 1;
 3566              		.loc 1 1248 0
 3567 0e40 314B     		ldr	r3, .L204+36
 3568 0e42 0122     		movs	r2, #1
 3569 0e44 1A70     		strb	r2, [r3]
 3570              	.L129:
1249:main.c        ****             }
1250:main.c        ****             
1251:main.c        ****             if ((!button2_Read()) && (button2Up))
 3571              		.loc 1 1251 0
 3572 0e46 FFF7FEFF 		bl	button2_Read
 3573 0e4a 0346     		mov	r3, r0
 3574 0e4c 002B     		cmp	r3, #0
 3575 0e4e 25D1     		bne	.L130
 3576              		.loc 1 1251 0 is_stmt 0 discriminator 1
 3577 0e50 2E4B     		ldr	r3, .L204+40
 3578 0e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3579 0e54 002B     		cmp	r3, #0
 3580 0e56 21D0     		beq	.L130
1252:main.c        ****             {
1253:main.c        ****                 currentCopedent += 1;
 3581              		.loc 1 1253 0 is_stmt 1
 3582 0e58 274B     		ldr	r3, .L204+20
 3583 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3584 0e5c 0133     		adds	r3, r3, #1
 3585 0e5e DAB2     		uxtb	r2, r3
 3586 0e60 254B     		ldr	r3, .L204+20
 3587 0e62 1A70     		strb	r2, [r3]
1254:main.c        ****                 currentCopedent &= 31;
 3588              		.loc 1 1254 0
 3589 0e64 244B     		ldr	r3, .L204+20
 3590 0e66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3591 0e68 03F01F03 		and	r3, r3, #31
 3592 0e6c DAB2     		uxtb	r2, r3
 3593 0e6e 224B     		ldr	r3, .L204+20
 3594 0e70 1A70     		strb	r2, [r3]
1255:main.c        ****                 necks[currentNeck] = currentCopedent;
 3595              		.loc 1 1255 0
 3596 0e72 1F4B     		ldr	r3, .L204+12
 3597 0e74 1B68     		ldr	r3, [r3]
 3598 0e76 204A     		ldr	r2, .L204+20
 3599 0e78 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3600 0e7a 1E4A     		ldr	r2, .L204+16
 3601 0e7c D154     		strb	r1, [r2, r3]
1256:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3602              		.loc 1 1256 0
 3603 0e7e 1E4B     		ldr	r3, .L204+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 87


 3604 0e80 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3605 0e82 1B4B     		ldr	r3, .L204+12
 3606 0e84 1B68     		ldr	r3, [r3]
 3607 0e86 9BB2     		uxth	r3, r3
 3608 0e88 1946     		mov	r1, r3
 3609 0e8a 1046     		mov	r0, r2
 3610 0e8c FFF7FEFF 		bl	EEPROM_WriteByte
1257:main.c        ****                 
1258:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3611              		.loc 1 1258 0
 3612 0e90 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1259:main.c        ****                 button2Up = 0;
 3613              		.loc 1 1259 0
 3614 0e94 1D4B     		ldr	r3, .L204+40
 3615 0e96 0022     		movs	r2, #0
 3616 0e98 1A70     		strb	r2, [r3]
 3617 0e9a 07E0     		b	.L131
 3618              	.L130:
1260:main.c        ****             }
1261:main.c        ****             else if (button2_Read())
 3619              		.loc 1 1261 0
 3620 0e9c FFF7FEFF 		bl	button2_Read
 3621 0ea0 0346     		mov	r3, r0
 3622 0ea2 002B     		cmp	r3, #0
 3623 0ea4 02D0     		beq	.L131
1262:main.c        ****             {
1263:main.c        ****                 button2Up = 1;
 3624              		.loc 1 1263 0
 3625 0ea6 194B     		ldr	r3, .L204+40
 3626 0ea8 0122     		movs	r2, #1
 3627 0eaa 1A70     		strb	r2, [r3]
 3628              	.L131:
1264:main.c        ****             }
1265:main.c        ****             
1266:main.c        ****             if ((!button3_Read()) && (button3Up))
 3629              		.loc 1 1266 0
 3630 0eac FFF7FEFF 		bl	button3_Read
 3631 0eb0 0346     		mov	r3, r0
 3632 0eb2 002B     		cmp	r3, #0
 3633 0eb4 30D1     		bne	.L132
 3634              		.loc 1 1266 0 is_stmt 0 discriminator 1
 3635 0eb6 164B     		ldr	r3, .L204+44
 3636 0eb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3637 0eba 002B     		cmp	r3, #0
 3638 0ebc 2CD0     		beq	.L132
1267:main.c        ****             {
1268:main.c        ****                 patchNum -= 1;
 3639              		.loc 1 1268 0 is_stmt 1
 3640 0ebe 154B     		ldr	r3, .L204+48
 3641 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3642 0ec2 013B     		subs	r3, r3, #1
 3643 0ec4 DAB2     		uxtb	r2, r3
 3644 0ec6 134B     		ldr	r3, .L204+48
 3645 0ec8 1A70     		strb	r2, [r3]
1269:main.c        ****                 patchNum &= 63;
 3646              		.loc 1 1269 0
 3647 0eca 124B     		ldr	r3, .L204+48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 88


 3648 0ecc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3649 0ece 03F03F03 		and	r3, r3, #63
 3650 0ed2 DAB2     		uxtb	r2, r3
 3651 0ed4 0F4B     		ldr	r3, .L204+48
 3652 0ed6 1A70     		strb	r2, [r3]
1270:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3653              		.loc 1 1270 0
 3654 0ed8 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1271:main.c        ****                 button3Up = 0;
 3655              		.loc 1 1271 0
 3656 0edc 0C4B     		ldr	r3, .L204+44
 3657 0ede 0022     		movs	r2, #0
 3658 0ee0 1A70     		strb	r2, [r3]
 3659 0ee2 21E0     		b	.L133
 3660              	.L205:
 3661              		.align	2
 3662              	.L204:
 3663 0ee4 00000000 		.word	oct1Up
 3664 0ee8 00000000 		.word	octave
 3665 0eec 00000000 		.word	oct4Up
 3666 0ef0 00000000 		.word	currentNeck
 3667 0ef4 00000000 		.word	necks
 3668 0ef8 00000000 		.word	currentCopedent
 3669 0efc 00000000 		.word	enterUp
 3670 0f00 00000000 		.word	dualSlider
 3671 0f04 00000000 		.word	editMode
 3672 0f08 00000000 		.word	button1Up
 3673 0f0c 00000000 		.word	button2Up
 3674 0f10 00000000 		.word	button3Up
 3675 0f14 00000000 		.word	patchNum
 3676              	.L132:
1272:main.c        ****             }
1273:main.c        ****             else if (button3_Read())
 3677              		.loc 1 1273 0
 3678 0f18 FFF7FEFF 		bl	button3_Read
 3679 0f1c 0346     		mov	r3, r0
 3680 0f1e 002B     		cmp	r3, #0
 3681 0f20 02D0     		beq	.L133
1274:main.c        ****             {
1275:main.c        ****                 button3Up = 1;
 3682              		.loc 1 1275 0
 3683 0f22 8F4B     		ldr	r3, .L206
 3684 0f24 0122     		movs	r2, #1
 3685 0f26 1A70     		strb	r2, [r3]
 3686              	.L133:
1276:main.c        ****             }
1277:main.c        ****             
1278:main.c        ****             if ((!button4_Read()) && (button4Up))
 3687              		.loc 1 1278 0
 3688 0f28 FFF7FEFF 		bl	button4_Read
 3689 0f2c 0346     		mov	r3, r0
 3690 0f2e 002B     		cmp	r3, #0
 3691 0f30 16D1     		bne	.L134
 3692              		.loc 1 1278 0 is_stmt 0 discriminator 1
 3693 0f32 8C4B     		ldr	r3, .L206+4
 3694 0f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3695 0f36 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 89


 3696 0f38 12D0     		beq	.L134
1279:main.c        ****             {
1280:main.c        ****                 patchNum += 1;
 3697              		.loc 1 1280 0 is_stmt 1
 3698 0f3a 8B4B     		ldr	r3, .L206+8
 3699 0f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3700 0f3e 0133     		adds	r3, r3, #1
 3701 0f40 DAB2     		uxtb	r2, r3
 3702 0f42 894B     		ldr	r3, .L206+8
 3703 0f44 1A70     		strb	r2, [r3]
1281:main.c        ****                 patchNum &= 63;
 3704              		.loc 1 1281 0
 3705 0f46 884B     		ldr	r3, .L206+8
 3706 0f48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3707 0f4a 03F03F03 		and	r3, r3, #63
 3708 0f4e DAB2     		uxtb	r2, r3
 3709 0f50 854B     		ldr	r3, .L206+8
 3710 0f52 1A70     		strb	r2, [r3]
1282:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3711              		.loc 1 1282 0
 3712 0f54 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1283:main.c        ****                 button4Up = 0;
 3713              		.loc 1 1283 0
 3714 0f58 824B     		ldr	r3, .L206+4
 3715 0f5a 0022     		movs	r2, #0
 3716 0f5c 1A70     		strb	r2, [r3]
 3717 0f5e B7E0     		b	.L136
 3718              	.L134:
1284:main.c        ****             }
1285:main.c        ****             else if (button4_Read())
 3719              		.loc 1 1285 0
 3720 0f60 FFF7FEFF 		bl	button4_Read
 3721 0f64 0346     		mov	r3, r0
 3722 0f66 002B     		cmp	r3, #0
 3723 0f68 00F0B280 		beq	.L136
1286:main.c        ****             {
1287:main.c        ****                 button4Up = 1;
 3724              		.loc 1 1287 0
 3725 0f6c 7D4B     		ldr	r3, .L206+4
 3726 0f6e 0122     		movs	r2, #1
 3727 0f70 1A70     		strb	r2, [r3]
 3728 0f72 ADE0     		b	.L136
 3729              	.L127:
1288:main.c        ****             }
1289:main.c        ****         }
1290:main.c        ****         //if in edit mode, then /left right up down work differently
1291:main.c        ****         else
1292:main.c        ****         {
1293:main.c        ****         
1294:main.c        ****             if ((!button1_Read()) && (button1Up))
 3730              		.loc 1 1294 0
 3731 0f74 FFF7FEFF 		bl	button1_Read
 3732 0f78 0346     		mov	r3, r0
 3733 0f7a 002B     		cmp	r3, #0
 3734 0f7c 25D1     		bne	.L137
 3735              		.loc 1 1294 0 is_stmt 0 discriminator 1
 3736 0f7e 7B4B     		ldr	r3, .L206+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 90


 3737 0f80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3738 0f82 002B     		cmp	r3, #0
 3739 0f84 21D0     		beq	.L137
1295:main.c        ****             {
1296:main.c        ****                 currentCopedent -= 1;
 3740              		.loc 1 1296 0 is_stmt 1
 3741 0f86 7A4B     		ldr	r3, .L206+16
 3742 0f88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3743 0f8a 013B     		subs	r3, r3, #1
 3744 0f8c DAB2     		uxtb	r2, r3
 3745 0f8e 784B     		ldr	r3, .L206+16
 3746 0f90 1A70     		strb	r2, [r3]
1297:main.c        ****                 currentCopedent &= 31;
 3747              		.loc 1 1297 0
 3748 0f92 774B     		ldr	r3, .L206+16
 3749 0f94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3750 0f96 03F01F03 		and	r3, r3, #31
 3751 0f9a DAB2     		uxtb	r2, r3
 3752 0f9c 744B     		ldr	r3, .L206+16
 3753 0f9e 1A70     		strb	r2, [r3]
1298:main.c        ****                 necks[currentNeck] = currentCopedent;
 3754              		.loc 1 1298 0
 3755 0fa0 744B     		ldr	r3, .L206+20
 3756 0fa2 1B68     		ldr	r3, [r3]
 3757 0fa4 724A     		ldr	r2, .L206+16
 3758 0fa6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3759 0fa8 734A     		ldr	r2, .L206+24
 3760 0faa D154     		strb	r1, [r2, r3]
1299:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3761              		.loc 1 1299 0
 3762 0fac 704B     		ldr	r3, .L206+16
 3763 0fae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3764 0fb0 704B     		ldr	r3, .L206+20
 3765 0fb2 1B68     		ldr	r3, [r3]
 3766 0fb4 9BB2     		uxth	r3, r3
 3767 0fb6 1946     		mov	r1, r3
 3768 0fb8 1046     		mov	r0, r2
 3769 0fba FFF7FEFF 		bl	EEPROM_WriteByte
1300:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3770              		.loc 1 1300 0
 3771 0fbe FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1301:main.c        ****                 button1Up = 0;
 3772              		.loc 1 1301 0
 3773 0fc2 6A4B     		ldr	r3, .L206+12
 3774 0fc4 0022     		movs	r2, #0
 3775 0fc6 1A70     		strb	r2, [r3]
 3776 0fc8 07E0     		b	.L138
 3777              	.L137:
1302:main.c        ****             }
1303:main.c        ****             else if (button1_Read())
 3778              		.loc 1 1303 0
 3779 0fca FFF7FEFF 		bl	button1_Read
 3780 0fce 0346     		mov	r3, r0
 3781 0fd0 002B     		cmp	r3, #0
 3782 0fd2 02D0     		beq	.L138
1304:main.c        ****             {
1305:main.c        ****                 button1Up = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 91


 3783              		.loc 1 1305 0
 3784 0fd4 654B     		ldr	r3, .L206+12
 3785 0fd6 0122     		movs	r2, #1
 3786 0fd8 1A70     		strb	r2, [r3]
 3787              	.L138:
1306:main.c        ****             }
1307:main.c        ****             
1308:main.c        ****             if ((!button2_Read()) && (button2Up))
 3788              		.loc 1 1308 0
 3789 0fda FFF7FEFF 		bl	button2_Read
 3790 0fde 0346     		mov	r3, r0
 3791 0fe0 002B     		cmp	r3, #0
 3792 0fe2 25D1     		bne	.L139
 3793              		.loc 1 1308 0 is_stmt 0 discriminator 1
 3794 0fe4 654B     		ldr	r3, .L206+28
 3795 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3796 0fe8 002B     		cmp	r3, #0
 3797 0fea 21D0     		beq	.L139
1309:main.c        ****             {
1310:main.c        ****                 currentCopedent += 1;
 3798              		.loc 1 1310 0 is_stmt 1
 3799 0fec 604B     		ldr	r3, .L206+16
 3800 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3801 0ff0 0133     		adds	r3, r3, #1
 3802 0ff2 DAB2     		uxtb	r2, r3
 3803 0ff4 5E4B     		ldr	r3, .L206+16
 3804 0ff6 1A70     		strb	r2, [r3]
1311:main.c        ****                 currentCopedent &= 31;
 3805              		.loc 1 1311 0
 3806 0ff8 5D4B     		ldr	r3, .L206+16
 3807 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3808 0ffc 03F01F03 		and	r3, r3, #31
 3809 1000 DAB2     		uxtb	r2, r3
 3810 1002 5B4B     		ldr	r3, .L206+16
 3811 1004 1A70     		strb	r2, [r3]
1312:main.c        ****                 necks[currentNeck] = currentCopedent;
 3812              		.loc 1 1312 0
 3813 1006 5B4B     		ldr	r3, .L206+20
 3814 1008 1B68     		ldr	r3, [r3]
 3815 100a 594A     		ldr	r2, .L206+16
 3816 100c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3817 100e 5A4A     		ldr	r2, .L206+24
 3818 1010 D154     		strb	r1, [r2, r3]
1313:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3819              		.loc 1 1313 0
 3820 1012 574B     		ldr	r3, .L206+16
 3821 1014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3822 1016 574B     		ldr	r3, .L206+20
 3823 1018 1B68     		ldr	r3, [r3]
 3824 101a 9BB2     		uxth	r3, r3
 3825 101c 1946     		mov	r1, r3
 3826 101e 1046     		mov	r0, r2
 3827 1020 FFF7FEFF 		bl	EEPROM_WriteByte
1314:main.c        ****                 displayCurrentPresetNameAndCopedent();  
 3828              		.loc 1 1314 0
 3829 1024 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1315:main.c        ****                 button2Up = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 92


 3830              		.loc 1 1315 0
 3831 1028 544B     		ldr	r3, .L206+28
 3832 102a 0022     		movs	r2, #0
 3833 102c 1A70     		strb	r2, [r3]
 3834 102e 07E0     		b	.L140
 3835              	.L139:
1316:main.c        ****             }
1317:main.c        ****             else if (button2_Read())
 3836              		.loc 1 1317 0
 3837 1030 FFF7FEFF 		bl	button2_Read
 3838 1034 0346     		mov	r3, r0
 3839 1036 002B     		cmp	r3, #0
 3840 1038 02D0     		beq	.L140
1318:main.c        ****             {
1319:main.c        ****                 button2Up = 1;
 3841              		.loc 1 1319 0
 3842 103a 504B     		ldr	r3, .L206+28
 3843 103c 0122     		movs	r2, #1
 3844 103e 1A70     		strb	r2, [r3]
 3845              	.L140:
1320:main.c        ****             }
1321:main.c        ****             
1322:main.c        ****             if ((!button3_Read()) && (button3Up))
 3846              		.loc 1 1322 0
 3847 1040 FFF7FEFF 		bl	button3_Read
 3848 1044 0346     		mov	r3, r0
 3849 1046 002B     		cmp	r3, #0
 3850 1048 16D1     		bne	.L141
 3851              		.loc 1 1322 0 is_stmt 0 discriminator 1
 3852 104a 454B     		ldr	r3, .L206
 3853 104c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3854 104e 002B     		cmp	r3, #0
 3855 1050 12D0     		beq	.L141
1323:main.c        ****             {
1324:main.c        ****                 patchNum -= 1;
 3856              		.loc 1 1324 0 is_stmt 1
 3857 1052 454B     		ldr	r3, .L206+8
 3858 1054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3859 1056 013B     		subs	r3, r3, #1
 3860 1058 DAB2     		uxtb	r2, r3
 3861 105a 434B     		ldr	r3, .L206+8
 3862 105c 1A70     		strb	r2, [r3]
1325:main.c        ****                 patchNum &= 63;
 3863              		.loc 1 1325 0
 3864 105e 424B     		ldr	r3, .L206+8
 3865 1060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3866 1062 03F03F03 		and	r3, r3, #63
 3867 1066 DAB2     		uxtb	r2, r3
 3868 1068 3F4B     		ldr	r3, .L206+8
 3869 106a 1A70     		strb	r2, [r3]
1326:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3870              		.loc 1 1326 0
 3871 106c FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1327:main.c        ****                 button3Up = 0;
 3872              		.loc 1 1327 0
 3873 1070 3B4B     		ldr	r3, .L206
 3874 1072 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 93


 3875 1074 1A70     		strb	r2, [r3]
 3876 1076 07E0     		b	.L142
 3877              	.L141:
1328:main.c        ****             }
1329:main.c        ****             else if (button3_Read())
 3878              		.loc 1 1329 0
 3879 1078 FFF7FEFF 		bl	button3_Read
 3880 107c 0346     		mov	r3, r0
 3881 107e 002B     		cmp	r3, #0
 3882 1080 02D0     		beq	.L142
1330:main.c        ****             {
1331:main.c        ****                 button3Up = 1;
 3883              		.loc 1 1331 0
 3884 1082 374B     		ldr	r3, .L206
 3885 1084 0122     		movs	r2, #1
 3886 1086 1A70     		strb	r2, [r3]
 3887              	.L142:
1332:main.c        ****             }
1333:main.c        ****             
1334:main.c        ****             if ((!button4_Read()) && (button4Up))
 3888              		.loc 1 1334 0
 3889 1088 FFF7FEFF 		bl	button4_Read
 3890 108c 0346     		mov	r3, r0
 3891 108e 002B     		cmp	r3, #0
 3892 1090 16D1     		bne	.L143
 3893              		.loc 1 1334 0 is_stmt 0 discriminator 1
 3894 1092 344B     		ldr	r3, .L206+4
 3895 1094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3896 1096 002B     		cmp	r3, #0
 3897 1098 12D0     		beq	.L143
1335:main.c        ****             {
1336:main.c        ****                 patchNum += 1;
 3898              		.loc 1 1336 0 is_stmt 1
 3899 109a 334B     		ldr	r3, .L206+8
 3900 109c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3901 109e 0133     		adds	r3, r3, #1
 3902 10a0 DAB2     		uxtb	r2, r3
 3903 10a2 314B     		ldr	r3, .L206+8
 3904 10a4 1A70     		strb	r2, [r3]
1337:main.c        ****                 patchNum &= 63;
 3905              		.loc 1 1337 0
 3906 10a6 304B     		ldr	r3, .L206+8
 3907 10a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3908 10aa 03F03F03 		and	r3, r3, #63
 3909 10ae DAB2     		uxtb	r2, r3
 3910 10b0 2D4B     		ldr	r3, .L206+8
 3911 10b2 1A70     		strb	r2, [r3]
1338:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3912              		.loc 1 1338 0
 3913 10b4 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1339:main.c        ****                 button4Up = 0;
 3914              		.loc 1 1339 0
 3915 10b8 2A4B     		ldr	r3, .L206+4
 3916 10ba 0022     		movs	r2, #0
 3917 10bc 1A70     		strb	r2, [r3]
 3918 10be 07E0     		b	.L136
 3919              	.L143:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 94


1340:main.c        ****             }
1341:main.c        ****             else if (button4_Read())
 3920              		.loc 1 1341 0
 3921 10c0 FFF7FEFF 		bl	button4_Read
 3922 10c4 0346     		mov	r3, r0
 3923 10c6 002B     		cmp	r3, #0
 3924 10c8 02D0     		beq	.L136
1342:main.c        ****             {
1343:main.c        ****                 button4Up = 1;
 3925              		.loc 1 1343 0
 3926 10ca 264B     		ldr	r3, .L206+4
 3927 10cc 0122     		movs	r2, #1
 3928 10ce 1A70     		strb	r2, [r3]
 3929              	.L136:
1344:main.c        ****             }
1345:main.c        ****         }
1346:main.c        ****         if ((!edit_button_Read()) && (editUp))
 3930              		.loc 1 1346 0
 3931 10d0 FFF7FEFF 		bl	edit_button_Read
 3932 10d4 0346     		mov	r3, r0
 3933 10d6 002B     		cmp	r3, #0
 3934 10d8 40F0A680 		bne	.L144
 3935              		.loc 1 1346 0 is_stmt 0 discriminator 1
 3936 10dc 284B     		ldr	r3, .L206+32
 3937 10de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3938 10e0 002B     		cmp	r3, #0
 3939 10e2 00F0A180 		beq	.L144
1347:main.c        ****         {
1348:main.c        ****             editMode = !editMode;
 3940              		.loc 1 1348 0 is_stmt 1
 3941 10e6 274B     		ldr	r3, .L206+36
 3942 10e8 1B68     		ldr	r3, [r3]
 3943 10ea 002B     		cmp	r3, #0
 3944 10ec 0CBF     		ite	eq
 3945 10ee 0123     		moveq	r3, #1
 3946 10f0 0023     		movne	r3, #0
 3947 10f2 DBB2     		uxtb	r3, r3
 3948 10f4 1A46     		mov	r2, r3
 3949 10f6 234B     		ldr	r3, .L206+36
 3950 10f8 1A60     		str	r2, [r3]
1349:main.c        ****             //for now edit mode is calibration mode
1350:main.c        ****             calibrationMode = !calibrationMode;
 3951              		.loc 1 1350 0
 3952 10fa 234B     		ldr	r3, .L206+40
 3953 10fc 1B68     		ldr	r3, [r3]
 3954 10fe 002B     		cmp	r3, #0
 3955 1100 0CBF     		ite	eq
 3956 1102 0123     		moveq	r3, #1
 3957 1104 0023     		movne	r3, #0
 3958 1106 DBB2     		uxtb	r3, r3
 3959 1108 1A46     		mov	r2, r3
 3960 110a 1F4B     		ldr	r3, .L206+40
 3961 110c 1A60     		str	r2, [r3]
1351:main.c        ****             LED_red2_Write(editMode);
 3962              		.loc 1 1351 0
 3963 110e 1D4B     		ldr	r3, .L206+36
 3964 1110 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 95


 3965 1112 DBB2     		uxtb	r3, r3
 3966 1114 1846     		mov	r0, r3
 3967 1116 FFF7FEFF 		bl	LED_red2_Write
1352:main.c        ****             editUp = 0;
 3968              		.loc 1 1352 0
 3969 111a 194B     		ldr	r3, .L206+32
 3970 111c 0022     		movs	r2, #0
 3971 111e 1A70     		strb	r2, [r3]
1353:main.c        ****             if (editMode)
 3972              		.loc 1 1353 0
 3973 1120 184B     		ldr	r3, .L206+36
 3974 1122 1B68     		ldr	r3, [r3]
 3975 1124 002B     		cmp	r3, #0
 3976 1126 14D0     		beq	.L145
 3977              	.LBB24:
1354:main.c        ****             {
1355:main.c        ****                 #if 0
1356:main.c        ****                 OLEDclear(128, 64);
1357:main.c        ****                 
1358:main.c        ****                 OLEDwriteString("CALIBRATION", 11, 2, FirstLine);
1359:main.c        ****                 OLEDwriteString("MOVE PEDALS", 11, 2, SecondLine);
1360:main.c        ****                 OLEDwriteString("AND LEVERS", 11, 2, ThirdLine);
1361:main.c        ****                 OLEDwriteString("THEN EXIT", 11, 2, FourthLine);
1362:main.c        ****                 mainOLEDWaitingToSend = 1;
1363:main.c        ****                                 #endif
1364:main.c        ****                 //entering calibration mode, clear the pedals low and high arrays
1365:main.c        ****                 for (int i = 0; i < 10; i++)
 3978              		.loc 1 1365 0
 3979 1128 0023     		movs	r3, #0
 3980 112a BB65     		str	r3, [r7, #88]
 3981 112c 0DE0     		b	.L146
 3982              	.L147:
1366:main.c        ****                 {
1367:main.c        ****                     pedals_low[i] = 4095;
 3983              		.loc 1 1367 0 discriminator 3
 3984 112e 174A     		ldr	r2, .L206+44
 3985 1130 BB6D     		ldr	r3, [r7, #88]
 3986 1132 40F6FF71 		movw	r1, #4095
 3987 1136 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1368:main.c        ****                     pedals_high[i] = 0;
 3988              		.loc 1 1368 0 discriminator 3
 3989 113a 154A     		ldr	r2, .L206+48
 3990 113c BB6D     		ldr	r3, [r7, #88]
 3991 113e 0021     		movs	r1, #0
 3992 1140 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1365:main.c        ****                 {
 3993              		.loc 1 1365 0 discriminator 3
 3994 1144 BB6D     		ldr	r3, [r7, #88]
 3995 1146 0133     		adds	r3, r3, #1
 3996 1148 BB65     		str	r3, [r7, #88]
 3997              	.L146:
1365:main.c        ****                 {
 3998              		.loc 1 1365 0 is_stmt 0 discriminator 1
 3999 114a BB6D     		ldr	r3, [r7, #88]
 4000 114c 092B     		cmp	r3, #9
 4001 114e EEDD     		ble	.L147
 4002              	.LBE24:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 96


1353:main.c        ****             {
 4003              		.loc 1 1353 0 is_stmt 1
 4004 1150 72E0     		b	.L151
 4005              	.L145:
1369:main.c        ****                 }
1370:main.c        **** 
1371:main.c        ****             }
1372:main.c        ****             else
1373:main.c        ****             {
1374:main.c        ****                 //draw normal screen
1375:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4006              		.loc 1 1375 0
 4007 1152 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1376:main.c        ****                 calculatePedalRatios();
 4008              		.loc 1 1376 0
 4009 1156 FFF7FEFF 		bl	calculatePedalRatios
 4010              	.LBB25:
1377:main.c        ****                 //now need to store this in EEPROM.                
1378:main.c        ****                 for (int i = 0; i < NUM_PEDALS; i++)
 4011              		.loc 1 1378 0
 4012 115a 0023     		movs	r3, #0
 4013 115c 7B65     		str	r3, [r7, #84]
 4014 115e 5FE0     		b	.L149
 4015              	.L207:
 4016              		.align	2
 4017              	.L206:
 4018 1160 00000000 		.word	button3Up
 4019 1164 00000000 		.word	button4Up
 4020 1168 00000000 		.word	patchNum
 4021 116c 00000000 		.word	button1Up
 4022 1170 00000000 		.word	currentCopedent
 4023 1174 00000000 		.word	currentNeck
 4024 1178 00000000 		.word	necks
 4025 117c 00000000 		.word	button2Up
 4026 1180 00000000 		.word	editUp
 4027 1184 00000000 		.word	editMode
 4028 1188 00000000 		.word	calibrationMode
 4029 118c 00000000 		.word	pedals_low
 4030 1190 00000000 		.word	pedals_high
 4031              	.L150:
1379:main.c        ****                 {
1380:main.c        ****                      EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_CALIBRATION_OFFSET + (i*4));
 4032              		.loc 1 1380 0 discriminator 3
 4033 1194 504A     		ldr	r2, .L208
 4034 1196 7B6D     		ldr	r3, [r7, #84]
 4035 1198 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4036 119c 1B0A     		lsrs	r3, r3, #8
 4037 119e 9BB2     		uxth	r3, r3
 4038 11a0 DAB2     		uxtb	r2, r3
 4039 11a2 7B6D     		ldr	r3, [r7, #84]
 4040 11a4 03F2E713 		addw	r3, r3, #487
 4041 11a8 9BB2     		uxth	r3, r3
 4042 11aa 9B00     		lsls	r3, r3, #2
 4043 11ac 9BB2     		uxth	r3, r3
 4044 11ae 1946     		mov	r1, r3
 4045 11b0 1046     		mov	r0, r2
 4046 11b2 FFF7FEFF 		bl	EEPROM_WriteByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 97


1381:main.c        ****                      EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 1
 4047              		.loc 1 1381 0 discriminator 3
 4048 11b6 484A     		ldr	r2, .L208
 4049 11b8 7B6D     		ldr	r3, [r7, #84]
 4050 11ba 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4051 11be DAB2     		uxtb	r2, r3
 4052 11c0 7B6D     		ldr	r3, [r7, #84]
 4053 11c2 9BB2     		uxth	r3, r3
 4054 11c4 9B00     		lsls	r3, r3, #2
 4055 11c6 9BB2     		uxth	r3, r3
 4056 11c8 03F29D73 		addw	r3, r3, #1949
 4057 11cc 9BB2     		uxth	r3, r3
 4058 11ce 1946     		mov	r1, r3
 4059 11d0 1046     		mov	r0, r2
 4060 11d2 FFF7FEFF 		bl	EEPROM_WriteByte
1382:main.c        ****                      EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_CALIBRATION_OFFSET + ((i*4) + 2
 4061              		.loc 1 1382 0 discriminator 3
 4062 11d6 414A     		ldr	r2, .L208+4
 4063 11d8 7B6D     		ldr	r3, [r7, #84]
 4064 11da 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4065 11de 1B0A     		lsrs	r3, r3, #8
 4066 11e0 9BB2     		uxth	r3, r3
 4067 11e2 DAB2     		uxtb	r2, r3
 4068 11e4 7B6D     		ldr	r3, [r7, #84]
 4069 11e6 9BB2     		uxth	r3, r3
 4070 11e8 9B00     		lsls	r3, r3, #2
 4071 11ea 9BB2     		uxth	r3, r3
 4072 11ec 03F29E73 		addw	r3, r3, #1950
 4073 11f0 9BB2     		uxth	r3, r3
 4074 11f2 1946     		mov	r1, r3
 4075 11f4 1046     		mov	r0, r2
 4076 11f6 FFF7FEFF 		bl	EEPROM_WriteByte
1383:main.c        ****                      EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 
 4077              		.loc 1 1383 0 discriminator 3
 4078 11fa 384A     		ldr	r2, .L208+4
 4079 11fc 7B6D     		ldr	r3, [r7, #84]
 4080 11fe 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4081 1202 DAB2     		uxtb	r2, r3
 4082 1204 7B6D     		ldr	r3, [r7, #84]
 4083 1206 9BB2     		uxth	r3, r3
 4084 1208 9B00     		lsls	r3, r3, #2
 4085 120a 9BB2     		uxth	r3, r3
 4086 120c 03F29F73 		addw	r3, r3, #1951
 4087 1210 9BB2     		uxth	r3, r3
 4088 1212 1946     		mov	r1, r3
 4089 1214 1046     		mov	r0, r2
 4090 1216 FFF7FEFF 		bl	EEPROM_WriteByte
1378:main.c        ****                 {
 4091              		.loc 1 1378 0 discriminator 3
 4092 121a 7B6D     		ldr	r3, [r7, #84]
 4093 121c 0133     		adds	r3, r3, #1
 4094 121e 7B65     		str	r3, [r7, #84]
 4095              	.L149:
1378:main.c        ****                 {
 4096              		.loc 1 1378 0 is_stmt 0 discriminator 1
 4097 1220 7B6D     		ldr	r3, [r7, #84]
 4098 1222 092B     		cmp	r3, #9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 98


 4099 1224 B6DD     		ble	.L150
 4100              	.LBE25:
1353:main.c        ****             {
 4101              		.loc 1 1353 0 is_stmt 1
 4102 1226 07E0     		b	.L151
 4103              	.L144:
1384:main.c        ****                 }
1385:main.c        **** 
1386:main.c        ****                 // also need to make this a little more hidden - maybe first edit then Enter?
1387:main.c        ****             }
1388:main.c        ****         }
1389:main.c        ****         else if (edit_button_Read())
 4104              		.loc 1 1389 0
 4105 1228 FFF7FEFF 		bl	edit_button_Read
 4106 122c 0346     		mov	r3, r0
 4107 122e 002B     		cmp	r3, #0
 4108 1230 02D0     		beq	.L151
1390:main.c        ****         {
1391:main.c        ****             editUp = 1;
 4109              		.loc 1 1391 0
 4110 1232 2B4B     		ldr	r3, .L208+8
 4111 1234 0122     		movs	r2, #1
 4112 1236 1A70     		strb	r2, [r3]
 4113              	.L151:
1392:main.c        ****         }
1393:main.c        ****         
1394:main.c        ****         if (octave != prevOctave)
1395:main.c        ****         {
1396:main.c        ****             //sendMIDIControlChange(90, octave);
1397:main.c        ****         }
1398:main.c        ****         prevOctave = octave;
 4114              		.loc 1 1398 0
 4115 1238 2A4B     		ldr	r3, .L208+12
 4116 123a 1B68     		ldr	r3, [r3]
 4117 123c 2A4A     		ldr	r2, .L208+16
 4118 123e 1360     		str	r3, [r2]
 4119              	.LBB26:
1399:main.c        ****         
1400:main.c        ****         
1401:main.c        ****         for (int i=  0; i < 4; i++)
 4120              		.loc 1 1401 0
 4121 1240 0023     		movs	r3, #0
 4122 1242 3B65     		str	r3, [r7, #80]
 4123 1244 3EE0     		b	.L152
 4124              	.L155:
1402:main.c        ****         {
1403:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)/16);
 4125              		.loc 1 1403 0
 4126 1246 3B6D     		ldr	r3, [r7, #80]
 4127 1248 9BB2     		uxth	r3, r3
 4128 124a 1846     		mov	r0, r3
 4129 124c FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4130 1250 0346     		mov	r3, r0
 4131 1252 002B     		cmp	r3, #0
 4132 1254 00DA     		bge	.L153
 4133 1256 0F33     		adds	r3, r3, #15
 4134              	.L153:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 99


 4135 1258 1B11     		asrs	r3, r3, #4
 4136 125a 1BB2     		sxth	r3, r3
 4137 125c D9B2     		uxtb	r1, r3
 4138 125e 234A     		ldr	r2, .L208+20
 4139 1260 3B6D     		ldr	r3, [r7, #80]
 4140 1262 1344     		add	r3, r3, r2
 4141 1264 0A46     		mov	r2, r1
 4142 1266 1A70     		strb	r2, [r3]
1404:main.c        ****             
1405:main.c        ****             knobs[i] = 255 - knobs[i];
 4143              		.loc 1 1405 0
 4144 1268 204A     		ldr	r2, .L208+20
 4145 126a 3B6D     		ldr	r3, [r7, #80]
 4146 126c 1344     		add	r3, r3, r2
 4147 126e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4148 1270 DB43     		mvns	r3, r3
 4149 1272 D9B2     		uxtb	r1, r3
 4150 1274 1D4A     		ldr	r2, .L208+20
 4151 1276 3B6D     		ldr	r3, [r7, #80]
 4152 1278 1344     		add	r3, r3, r2
 4153 127a 0A46     		mov	r2, r1
 4154 127c 1A70     		strb	r2, [r3]
1406:main.c        ****             
1407:main.c        ****             if (knobs[i] != prevKnobs[i])
 4155              		.loc 1 1407 0
 4156 127e 1B4A     		ldr	r2, .L208+20
 4157 1280 3B6D     		ldr	r3, [r7, #80]
 4158 1282 1344     		add	r3, r3, r2
 4159 1284 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4160 1286 1A49     		ldr	r1, .L208+24
 4161 1288 3B6D     		ldr	r3, [r7, #80]
 4162 128a 0B44     		add	r3, r3, r1
 4163 128c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4164 128e 9A42     		cmp	r2, r3
 4165 1290 0CD0     		beq	.L154
1408:main.c        ****             {
1409:main.c        ****                 sendMIDIControlChange(i+17, knobs[i]/2, 0);
 4166              		.loc 1 1409 0
 4167 1292 3B6D     		ldr	r3, [r7, #80]
 4168 1294 03F11100 		add	r0, r3, #17
 4169 1298 144A     		ldr	r2, .L208+20
 4170 129a 3B6D     		ldr	r3, [r7, #80]
 4171 129c 1344     		add	r3, r3, r2
 4172 129e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4173 12a0 5B08     		lsrs	r3, r3, #1
 4174 12a2 DBB2     		uxtb	r3, r3
 4175 12a4 0022     		movs	r2, #0
 4176 12a6 1946     		mov	r1, r3
 4177 12a8 FFF7FEFF 		bl	sendMIDIControlChange
 4178              	.L154:
1410:main.c        ****             }
1411:main.c        ****             prevKnobs[i] = knobs[i];
 4179              		.loc 1 1411 0 discriminator 2
 4180 12ac 0F4A     		ldr	r2, .L208+20
 4181 12ae 3B6D     		ldr	r3, [r7, #80]
 4182 12b0 1344     		add	r3, r3, r2
 4183 12b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 100


 4184 12b4 0E4A     		ldr	r2, .L208+24
 4185 12b6 3B6D     		ldr	r3, [r7, #80]
 4186 12b8 1344     		add	r3, r3, r2
 4187 12ba 0A46     		mov	r2, r1
 4188 12bc 1A70     		strb	r2, [r3]
1401:main.c        ****         {
 4189              		.loc 1 1401 0 discriminator 2
 4190 12be 3B6D     		ldr	r3, [r7, #80]
 4191 12c0 0133     		adds	r3, r3, #1
 4192 12c2 3B65     		str	r3, [r7, #80]
 4193              	.L152:
1401:main.c        ****         {
 4194              		.loc 1 1401 0 is_stmt 0 discriminator 1
 4195 12c4 3B6D     		ldr	r3, [r7, #80]
 4196 12c6 032B     		cmp	r3, #3
 4197 12c8 BDDD     		ble	.L155
 4198              	.LBE26:
1412:main.c        ****         }
1413:main.c        ****         
1414:main.c        ****         testpin4_Write(1);
 4199              		.loc 1 1414 0 is_stmt 1
 4200 12ca 0120     		movs	r0, #1
 4201 12cc FFF7FEFF 		bl	testpin4_Write
 4202              	.LBB27:
1415:main.c        ****         //calculate the pitch of each string based on the current Copedent
1416:main.c        ****         for (int i = 0; i < numStrings; i++)
 4203              		.loc 1 1416 0
 4204 12d0 0023     		movs	r3, #0
 4205 12d2 FB64     		str	r3, [r7, #76]
 4206 12d4 30E1     		b	.L156
 4207              	.L209:
 4208 12d6 00BF     		.align	2
 4209              	.L208:
 4210 12d8 00000000 		.word	pedals_low
 4211 12dc 00000000 		.word	pedals_high
 4212 12e0 00000000 		.word	editUp
 4213 12e4 00000000 		.word	octave
 4214 12e8 00000000 		.word	prevOctave
 4215 12ec 00000000 		.word	knobs
 4216 12f0 00000000 		.word	prevKnobs
 4217              	.L159:
 4218              	.LBB28:
1417:main.c        ****     	{
1418:main.c        ****     		//interpolate ratios for each of the strings
1419:main.c        ****            /*
1420:main.c        ****             float myMappedPos;
1421:main.c        ****             if (dualSlider)
1422:main.c        ****             {
1423:main.c        ****                myMappedPos = LEAF_interpolation_linear(stringMappedPositions[0], stringMappedPositi
1424:main.c        ****             }
1425:main.c        ****             else
1426:main.c        ****             {
1427:main.c        ****                 myMappedPos = stringMappedPositions[0];
1428:main.c        ****             }
1429:main.c        **** 
1430:main.c        ****     		stringOctave[i] = powf(2.0f,octave);
1431:main.c        ****             */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 101


1432:main.c        ****     		//then apply those ratios to the fundamental frequencies
1433:main.c        ****     		float tempMIDI = (copedent[necks[currentNeck]][0][i] +
 4219              		.loc 1 1433 0
 4220 12f4 A04B     		ldr	r3, .L210
 4221 12f6 1B68     		ldr	r3, [r3]
 4222 12f8 A04A     		ldr	r2, .L210+4
 4223 12fa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4224 12fc 1A46     		mov	r2, r3
 4225 12fe A049     		ldr	r1, .L210+8
 4226 1300 1346     		mov	r3, r2
 4227 1302 5B01     		lsls	r3, r3, #5
 4228 1304 1344     		add	r3, r3, r2
 4229 1306 9B00     		lsls	r3, r3, #2
 4230 1308 FA6C     		ldr	r2, [r7, #76]
 4231 130a 1344     		add	r3, r3, r2
 4232 130c 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1434:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4233              		.loc 1 1434 0
 4234 1310 9C4B     		ldr	r3, .L210+12
 4235 1312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4236 1314 1A46     		mov	r2, r3
 4237 1316 9A49     		ldr	r1, .L210+8
 4238 1318 1346     		mov	r3, r2
 4239 131a 5B01     		lsls	r3, r3, #5
 4240 131c 1344     		add	r3, r3, r2
 4241 131e 9B00     		lsls	r3, r3, #2
 4242 1320 FA6C     		ldr	r2, [r7, #76]
 4243 1322 1344     		add	r3, r3, r2
 4244 1324 3033     		adds	r3, r3, #48
 4245 1326 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4246 132a 974B     		ldr	r3, .L210+16
 4247 132c 1B68     		ldr	r3, [r3]	@ float
 4248 132e 1946     		mov	r1, r3
 4249 1330 1046     		mov	r0, r2
 4250 1332 FFF7FEFF 		bl	__aeabi_fmul
 4251 1336 0346     		mov	r3, r0
1433:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4252              		.loc 1 1433 0
 4253 1338 1946     		mov	r1, r3
 4254 133a 2046     		mov	r0, r4
 4255 133c FFF7FEFF 		bl	__aeabi_fadd
 4256 1340 0346     		mov	r3, r0
 4257 1342 1C46     		mov	r4, r3
1435:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4258              		.loc 1 1435 0
 4259 1344 8F4B     		ldr	r3, .L210+12
 4260 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4261 1348 1A46     		mov	r2, r3
 4262 134a 8D49     		ldr	r1, .L210+8
 4263 134c 1346     		mov	r3, r2
 4264 134e 5B01     		lsls	r3, r3, #5
 4265 1350 1344     		add	r3, r3, r2
 4266 1352 9B00     		lsls	r3, r3, #2
 4267 1354 FA6C     		ldr	r2, [r7, #76]
 4268 1356 1344     		add	r3, r3, r2
 4269 1358 3C33     		adds	r3, r3, #60
 4270 135a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 102


 4271 135e 8A4B     		ldr	r3, .L210+16
 4272 1360 5B68     		ldr	r3, [r3, #4]	@ float
 4273 1362 1946     		mov	r1, r3
 4274 1364 1046     		mov	r0, r2
 4275 1366 FFF7FEFF 		bl	__aeabi_fmul
 4276 136a 0346     		mov	r3, r0
1434:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4277              		.loc 1 1434 0
 4278 136c 1946     		mov	r1, r3
 4279 136e 2046     		mov	r0, r4
 4280 1370 FFF7FEFF 		bl	__aeabi_fadd
 4281 1374 0346     		mov	r3, r0
 4282 1376 1C46     		mov	r4, r3
1436:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4283              		.loc 1 1436 0
 4284 1378 824B     		ldr	r3, .L210+12
 4285 137a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4286 137c 1A46     		mov	r2, r3
 4287 137e 8049     		ldr	r1, .L210+8
 4288 1380 1346     		mov	r3, r2
 4289 1382 5B01     		lsls	r3, r3, #5
 4290 1384 1344     		add	r3, r3, r2
 4291 1386 9B00     		lsls	r3, r3, #2
 4292 1388 FA6C     		ldr	r2, [r7, #76]
 4293 138a 1344     		add	r3, r3, r2
 4294 138c 4833     		adds	r3, r3, #72
 4295 138e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4296 1392 7D4B     		ldr	r3, .L210+16
 4297 1394 9B68     		ldr	r3, [r3, #8]	@ float
 4298 1396 1946     		mov	r1, r3
 4299 1398 1046     		mov	r0, r2
 4300 139a FFF7FEFF 		bl	__aeabi_fmul
 4301 139e 0346     		mov	r3, r0
1435:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4302              		.loc 1 1435 0
 4303 13a0 1946     		mov	r1, r3
 4304 13a2 2046     		mov	r0, r4
 4305 13a4 FFF7FEFF 		bl	__aeabi_fadd
 4306 13a8 0346     		mov	r3, r0
 4307 13aa 1C46     		mov	r4, r3
1437:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4308              		.loc 1 1437 0
 4309 13ac 754B     		ldr	r3, .L210+12
 4310 13ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4311 13b0 1A46     		mov	r2, r3
 4312 13b2 7349     		ldr	r1, .L210+8
 4313 13b4 1346     		mov	r3, r2
 4314 13b6 5B01     		lsls	r3, r3, #5
 4315 13b8 1344     		add	r3, r3, r2
 4316 13ba 9B00     		lsls	r3, r3, #2
 4317 13bc FA6C     		ldr	r2, [r7, #76]
 4318 13be 1344     		add	r3, r3, r2
 4319 13c0 5433     		adds	r3, r3, #84
 4320 13c2 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4321 13c6 704B     		ldr	r3, .L210+16
 4322 13c8 DB68     		ldr	r3, [r3, #12]	@ float
 4323 13ca 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 103


 4324 13cc 1046     		mov	r0, r2
 4325 13ce FFF7FEFF 		bl	__aeabi_fmul
 4326 13d2 0346     		mov	r3, r0
1436:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4327              		.loc 1 1436 0
 4328 13d4 1946     		mov	r1, r3
 4329 13d6 2046     		mov	r0, r4
 4330 13d8 FFF7FEFF 		bl	__aeabi_fadd
 4331 13dc 0346     		mov	r3, r0
 4332 13de 1C46     		mov	r4, r3
1438:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4333              		.loc 1 1438 0
 4334 13e0 684B     		ldr	r3, .L210+12
 4335 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4336 13e4 1A46     		mov	r2, r3
 4337 13e6 6649     		ldr	r1, .L210+8
 4338 13e8 1346     		mov	r3, r2
 4339 13ea 5B01     		lsls	r3, r3, #5
 4340 13ec 1344     		add	r3, r3, r2
 4341 13ee 9B00     		lsls	r3, r3, #2
 4342 13f0 FA6C     		ldr	r2, [r7, #76]
 4343 13f2 1344     		add	r3, r3, r2
 4344 13f4 6033     		adds	r3, r3, #96
 4345 13f6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4346 13fa 634B     		ldr	r3, .L210+16
 4347 13fc 1B69     		ldr	r3, [r3, #16]	@ float
 4348 13fe 1946     		mov	r1, r3
 4349 1400 1046     		mov	r0, r2
 4350 1402 FFF7FEFF 		bl	__aeabi_fmul
 4351 1406 0346     		mov	r3, r0
1437:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4352              		.loc 1 1437 0
 4353 1408 1946     		mov	r1, r3
 4354 140a 2046     		mov	r0, r4
 4355 140c FFF7FEFF 		bl	__aeabi_fadd
 4356 1410 0346     		mov	r3, r0
 4357 1412 1C46     		mov	r4, r3
1439:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4358              		.loc 1 1439 0
 4359 1414 5B4B     		ldr	r3, .L210+12
 4360 1416 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4361 1418 1A46     		mov	r2, r3
 4362 141a 5949     		ldr	r1, .L210+8
 4363 141c 1346     		mov	r3, r2
 4364 141e 5B01     		lsls	r3, r3, #5
 4365 1420 1344     		add	r3, r3, r2
 4366 1422 9B00     		lsls	r3, r3, #2
 4367 1424 FA6C     		ldr	r2, [r7, #76]
 4368 1426 1344     		add	r3, r3, r2
 4369 1428 7833     		adds	r3, r3, #120
 4370 142a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4371 142e 564B     		ldr	r3, .L210+16
 4372 1430 5B69     		ldr	r3, [r3, #20]	@ float
 4373 1432 1946     		mov	r1, r3
 4374 1434 1046     		mov	r0, r2
 4375 1436 FFF7FEFF 		bl	__aeabi_fmul
 4376 143a 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 104


1438:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4377              		.loc 1 1438 0
 4378 143c 1946     		mov	r1, r3
 4379 143e 2046     		mov	r0, r4
 4380 1440 FFF7FEFF 		bl	__aeabi_fadd
 4381 1444 0346     		mov	r3, r0
 4382 1446 1C46     		mov	r4, r3
1440:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4383              		.loc 1 1440 0
 4384 1448 4E4B     		ldr	r3, .L210+12
 4385 144a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4386 144c 1A46     		mov	r2, r3
 4387 144e 4C49     		ldr	r1, .L210+8
 4388 1450 1346     		mov	r3, r2
 4389 1452 5B01     		lsls	r3, r3, #5
 4390 1454 1344     		add	r3, r3, r2
 4391 1456 9B00     		lsls	r3, r3, #2
 4392 1458 FA6C     		ldr	r2, [r7, #76]
 4393 145a 1344     		add	r3, r3, r2
 4394 145c 6C33     		adds	r3, r3, #108
 4395 145e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4396 1462 494B     		ldr	r3, .L210+16
 4397 1464 9B69     		ldr	r3, [r3, #24]	@ float
 4398 1466 1946     		mov	r1, r3
 4399 1468 1046     		mov	r0, r2
 4400 146a FFF7FEFF 		bl	__aeabi_fmul
 4401 146e 0346     		mov	r3, r0
1439:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4402              		.loc 1 1439 0
 4403 1470 1946     		mov	r1, r3
 4404 1472 2046     		mov	r0, r4
 4405 1474 FFF7FEFF 		bl	__aeabi_fadd
 4406 1478 0346     		mov	r3, r0
 4407 147a 1C46     		mov	r4, r3
1441:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4408              		.loc 1 1441 0
 4409 147c 414B     		ldr	r3, .L210+12
 4410 147e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4411 1480 1A46     		mov	r2, r3
 4412 1482 3F49     		ldr	r1, .L210+8
 4413 1484 1346     		mov	r3, r2
 4414 1486 5B01     		lsls	r3, r3, #5
 4415 1488 1344     		add	r3, r3, r2
 4416 148a 9B00     		lsls	r3, r3, #2
 4417 148c FA6C     		ldr	r2, [r7, #76]
 4418 148e 1344     		add	r3, r3, r2
 4419 1490 2433     		adds	r3, r3, #36
 4420 1492 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4421 1496 3C4B     		ldr	r3, .L210+16
 4422 1498 DB69     		ldr	r3, [r3, #28]	@ float
 4423 149a 1946     		mov	r1, r3
 4424 149c 1046     		mov	r0, r2
 4425 149e FFF7FEFF 		bl	__aeabi_fmul
 4426 14a2 0346     		mov	r3, r0
1440:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4427              		.loc 1 1440 0
 4428 14a4 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 105


 4429 14a6 2046     		mov	r0, r4
 4430 14a8 FFF7FEFF 		bl	__aeabi_fadd
 4431 14ac 0346     		mov	r3, r0
 4432 14ae 1C46     		mov	r4, r3
1442:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4433              		.loc 1 1442 0
 4434 14b0 344B     		ldr	r3, .L210+12
 4435 14b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4436 14b4 1A46     		mov	r2, r3
 4437 14b6 3249     		ldr	r1, .L210+8
 4438 14b8 1346     		mov	r3, r2
 4439 14ba 5B01     		lsls	r3, r3, #5
 4440 14bc 1344     		add	r3, r3, r2
 4441 14be 9B00     		lsls	r3, r3, #2
 4442 14c0 FA6C     		ldr	r2, [r7, #76]
 4443 14c2 1344     		add	r3, r3, r2
 4444 14c4 0C33     		adds	r3, r3, #12
 4445 14c6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4446 14ca 2F4B     		ldr	r3, .L210+16
 4447 14cc 1B6A     		ldr	r3, [r3, #32]	@ float
 4448 14ce 1946     		mov	r1, r3
 4449 14d0 1046     		mov	r0, r2
 4450 14d2 FFF7FEFF 		bl	__aeabi_fmul
 4451 14d6 0346     		mov	r3, r0
1441:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4452              		.loc 1 1441 0
 4453 14d8 1946     		mov	r1, r3
 4454 14da 2046     		mov	r0, r4
 4455 14dc FFF7FEFF 		bl	__aeabi_fadd
 4456 14e0 0346     		mov	r3, r0
 4457 14e2 1C46     		mov	r4, r3
1443:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9]));
 4458              		.loc 1 1443 0
 4459 14e4 274B     		ldr	r3, .L210+12
 4460 14e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4461 14e8 1A46     		mov	r2, r3
 4462 14ea 2549     		ldr	r1, .L210+8
 4463 14ec 1346     		mov	r3, r2
 4464 14ee 5B01     		lsls	r3, r3, #5
 4465 14f0 1344     		add	r3, r3, r2
 4466 14f2 9B00     		lsls	r3, r3, #2
 4467 14f4 FA6C     		ldr	r2, [r7, #76]
 4468 14f6 1344     		add	r3, r3, r2
 4469 14f8 1833     		adds	r3, r3, #24
 4470 14fa 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4471 14fe 224B     		ldr	r3, .L210+16
 4472 1500 5B6A     		ldr	r3, [r3, #36]	@ float
 4473 1502 1946     		mov	r1, r3
 4474 1504 1046     		mov	r0, r2
 4475 1506 FFF7FEFF 		bl	__aeabi_fmul
 4476 150a 0346     		mov	r3, r0
1433:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4477              		.loc 1 1433 0
 4478 150c 1946     		mov	r1, r3
 4479 150e 2046     		mov	r0, r4
 4480 1510 FFF7FEFF 		bl	__aeabi_fadd
 4481 1514 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 106


 4482 1516 7B61     		str	r3, [r7, #20]	@ float
1444:main.c        **** 
1445:main.c        ****             /*
1446:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
1447:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
1448:main.c        ****             
1449:main.c        ****             float barMIDI = ftom((invStringMappedPositions[0]) * mtof(tempMIDI));
1450:main.c        ****             
1451:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
1452:main.c        ****             
1453:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
1454:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
1455:main.c        ****             {
1456:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
1457:main.c        ****             }
1458:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
1459:main.c        ****             */
1460:main.c        ****             if (tempMIDI > 0.0f)
 4483              		.loc 1 1460 0
 4484 1518 4FF00001 		mov	r1, #0
 4485 151c 7869     		ldr	r0, [r7, #20]	@ float
 4486 151e FFF7FEFF 		bl	__aeabi_fcmpgt
 4487 1522 0346     		mov	r3, r0
 4488 1524 002B     		cmp	r3, #0
 4489 1526 04D0     		beq	.L157
1461:main.c        ****             {
1462:main.c        ****                 stringMIDI[i] = tempMIDI;
 4490              		.loc 1 1462 0
 4491 1528 1849     		ldr	r1, .L210+20
 4492 152a FB6C     		ldr	r3, [r7, #76]
 4493 152c 7A69     		ldr	r2, [r7, #20]	@ float
 4494 152e 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 4495              	.L157:
 4496              	.LBE28:
1416:main.c        ****     	{
 4497              		.loc 1 1416 0 discriminator 2
 4498 1532 FB6C     		ldr	r3, [r7, #76]
 4499 1534 0133     		adds	r3, r3, #1
 4500 1536 FB64     		str	r3, [r7, #76]
 4501              	.L156:
1416:main.c        ****     	{
 4502              		.loc 1 1416 0 is_stmt 0 discriminator 1
 4503 1538 154B     		ldr	r3, .L210+24
 4504 153a 1B68     		ldr	r3, [r3]
 4505 153c FA6C     		ldr	r2, [r7, #76]
 4506 153e 9A42     		cmp	r2, r3
 4507 1540 FFF6D8AE 		blt	.L159
 4508              	.LBE27:
1463:main.c        ****             }
1464:main.c        ****     	}
1465:main.c        ****         testpin4_Write(0);
 4509              		.loc 1 1465 0 is_stmt 1
 4510 1544 0020     		movs	r0, #0
 4511 1546 FFF7FEFF 		bl	testpin4_Write
1466:main.c        ****         if (encoder_button_Read())
 4512              		.loc 1 1466 0
 4513 154a FFF7FEFF 		bl	encoder_button_Read
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 107


 4514 154e 0346     		mov	r3, r0
 4515 1550 002B     		cmp	r3, #0
 4516 1552 23D0     		beq	.L160
1467:main.c        ****         {
1468:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
 4517              		.loc 1 1468 0
 4518 1554 FFF7FEFF 		bl	QuadDec_1_GetCounter
 4519 1558 0346     		mov	r3, r0
 4520 155a 9800     		lsls	r0, r3, #2
 4521 155c 0D4B     		ldr	r3, .L210+28
 4522 155e 1B68     		ldr	r3, [r3]
 4523 1560 0C4A     		ldr	r2, .L210+28
 4524 1562 1268     		ldr	r2, [r2]
 4525 1564 0C49     		ldr	r1, .L210+32
 4526 1566 8A5C     		ldrb	r2, [r1, r2]
 4527 1568 D1B2     		uxtb	r1, r2
 4528 156a C2B2     		uxtb	r2, r0
 4529 156c 0A44     		add	r2, r2, r1
 4530 156e D1B2     		uxtb	r1, r2
 4531 1570 094A     		ldr	r2, .L210+32
 4532 1572 D154     		strb	r1, [r2, r3]
 4533 1574 22E0     		b	.L161
 4534              	.L211:
 4535 1576 00BF     		.align	2
 4536              	.L210:
 4537 1578 00000000 		.word	currentNeck
 4538 157c 00000000 		.word	necks
 4539 1580 00000000 		.word	copedent
 4540 1584 00000000 		.word	currentCopedent
 4541 1588 00000000 		.word	pedals_float
 4542 158c 00000000 		.word	stringMIDI
 4543 1590 00000000 		.word	numStrings
 4544 1594 00000000 		.word	encoderNum
 4545 1598 00000000 		.word	encoderVal
 4546              	.L160:
1469:main.c        ****         }
1470:main.c        ****         else
1471:main.c        ****         {
1472:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter();
 4547              		.loc 1 1472 0
 4548 159c FFF7FEFF 		bl	QuadDec_1_GetCounter
 4549 15a0 0346     		mov	r3, r0
 4550 15a2 1846     		mov	r0, r3
 4551 15a4 924B     		ldr	r3, .L212
 4552 15a6 1B68     		ldr	r3, [r3]
 4553 15a8 914A     		ldr	r2, .L212
 4554 15aa 1268     		ldr	r2, [r2]
 4555 15ac 9149     		ldr	r1, .L212+4
 4556 15ae 8A5C     		ldrb	r2, [r1, r2]
 4557 15b0 D1B2     		uxtb	r1, r2
 4558 15b2 C2B2     		uxtb	r2, r0
 4559 15b4 0A44     		add	r2, r2, r1
 4560 15b6 D1B2     		uxtb	r1, r2
 4561 15b8 8E4A     		ldr	r2, .L212+4
 4562 15ba D154     		strb	r1, [r2, r3]
 4563              	.L161:
1473:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 108


1474:main.c        ****         QuadDec_1_SetCounter(0);
 4564              		.loc 1 1474 0
 4565 15bc 0020     		movs	r0, #0
 4566 15be FFF7FEFF 		bl	QuadDec_1_SetCounter
1475:main.c        ****         
1476:main.c        **** 
1477:main.c        ****         
1478:main.c        ****         if (USB_check_flag)
 4567              		.loc 1 1478 0
 4568 15c2 8D4B     		ldr	r3, .L212+8
 4569 15c4 1B78     		ldrb	r3, [r3]
 4570 15c6 DBB2     		uxtb	r3, r3
 4571 15c8 002B     		cmp	r3, #0
 4572 15ca 01D0     		beq	.L162
1479:main.c        ****         {
1480:main.c        ****             checkUSB_Vbus();
 4573              		.loc 1 1480 0
 4574 15cc FFF7FEFF 		bl	checkUSB_Vbus
 4575              	.L162:
1481:main.c        ****         }
1482:main.c        ****         //only service the USB bus if there is a computer plugged in
1483:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 4576              		.loc 1 1483 0
 4577 15d0 8A4B     		ldr	r3, .L212+12
 4578 15d2 1B78     		ldrb	r3, [r3]
 4579 15d4 DBB2     		uxtb	r3, r3
 4580 15d6 002B     		cmp	r3, #0
 4581 15d8 13D0     		beq	.L193
 4582              		.loc 1 1483 0 is_stmt 0 discriminator 1
 4583 15da FFF7FEFF 		bl	USB_VBusPresent
 4584 15de 0346     		mov	r3, r0
 4585 15e0 002B     		cmp	r3, #0
 4586 15e2 0ED0     		beq	.L193
1484:main.c        ****         {
1485:main.c        ****             if (midiSent > 64)
 4587              		.loc 1 1485 0 is_stmt 1
 4588 15e4 864B     		ldr	r3, .L212+16
 4589 15e6 1B88     		ldrh	r3, [r3]
 4590 15e8 402B     		cmp	r3, #64
 4591 15ea 05D9     		bls	.L164
1486:main.c        ****             {
1487:main.c        ****                 midiOverflow++;
 4592              		.loc 1 1487 0
 4593 15ec 854B     		ldr	r3, .L212+20
 4594 15ee 1B88     		ldrh	r3, [r3]
 4595 15f0 0133     		adds	r3, r3, #1
 4596 15f2 9AB2     		uxth	r2, r3
 4597 15f4 834B     		ldr	r3, .L212+20
 4598 15f6 1A80     		strh	r2, [r3]	@ movhi
 4599              	.L164:
1488:main.c        ****             }
1489:main.c        ****             midiSent = 0;
 4600              		.loc 1 1489 0
 4601 15f8 814B     		ldr	r3, .L212+16
 4602 15fa 0022     		movs	r2, #0
 4603 15fc 1A80     		strh	r2, [r3]	@ movhi
1490:main.c        ****             USB_service();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 109


 4604              		.loc 1 1490 0
 4605 15fe FFF7FEFF 		bl	USB_service
 4606              	.L193:
1491:main.c        ****         }
1492:main.c        **** 
1493:main.c        ****         
1494:main.c        ****         /*
1495:main.c        ****         for (int i = 0; i < 10; i++)
1496:main.c        ****         {
1497:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1498:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1499:main.c        ****         }
1500:main.c        ****         
1501:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1502:main.c        ****         for (int i = 0; i < 4; i++)
1503:main.c        ****         {
1504:main.c        ****             myArray[i+21] = knobs[i];
1505:main.c        ****         }
1506:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1507:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
1508:main.c        ****         */
1509:main.c        ****                 //make sure previous SPI2 transmission has completed before transferring the remain
1510:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 4607              		.loc 1 1510 0
 4608 1602 00BF     		nop
 4609              	.L168:
 4610              		.loc 1 1510 0 is_stmt 0 discriminator 7
 4611 1604 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4612 1608 0346     		mov	r3, r0
 4613 160a 03F00103 		and	r3, r3, #1
 4614 160e 002B     		cmp	r3, #0
 4615 1610 06D1     		bne	.L165
 4616              		.loc 1 1510 0 discriminator 2
 4617 1612 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4618 1616 0346     		mov	r3, r0
 4619 1618 03F01003 		and	r3, r3, #16
 4620 161c 002B     		cmp	r3, #0
 4621 161e 01D0     		beq	.L166
 4622              	.L165:
 4623              		.loc 1 1510 0 discriminator 3
 4624 1620 0123     		movs	r3, #1
 4625 1622 00E0     		b	.L167
 4626              	.L166:
 4627              		.loc 1 1510 0 discriminator 4
 4628 1624 0023     		movs	r3, #0
 4629              	.L167:
 4630              		.loc 1 1510 0 discriminator 6
 4631 1626 002B     		cmp	r3, #0
 4632 1628 ECD0     		beq	.L168
1511:main.c        ****         {
1512:main.c        ****             ;
1513:main.c        ****         }
1514:main.c        ****         testpin6_Write(1);
 4633              		.loc 1 1514 0 is_stmt 1
 4634 162a 0120     		movs	r0, #1
 4635 162c FFF7FEFF 		bl	testpin6_Write
1515:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 110


 4636              		.loc 1 1515 0
 4637 1630 754B     		ldr	r3, .L212+24
 4638 1632 1B78     		ldrb	r3, [r3]
 4639 1634 DBB2     		uxtb	r3, r3
 4640 1636 012B     		cmp	r3, #1
 4641 1638 56D1     		bne	.L169
1516:main.c        ****         {
1517:main.c        ****             if (sendMessageEnd) //send end message
 4642              		.loc 1 1517 0
 4643 163a 744B     		ldr	r3, .L212+28
 4644 163c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4645 163e 002B     		cmp	r3, #0
 4646 1640 1DD0     		beq	.L170
1518:main.c        ****             {
1519:main.c        ****                 myArray[0] = 253;
 4647              		.loc 1 1519 0
 4648 1642 734B     		ldr	r3, .L212+32
 4649 1644 FD22     		movs	r2, #253
 4650 1646 1A70     		strb	r2, [r3]
1520:main.c        ****                 myArray[1] = presetNumberToWrite;
 4651              		.loc 1 1520 0
 4652 1648 724B     		ldr	r3, .L212+36
 4653 164a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4654 164c 704B     		ldr	r3, .L212+32
 4655 164e 5A70     		strb	r2, [r3, #1]
1521:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 4656              		.loc 1 1521 0
 4657 1650 704B     		ldr	r3, .L212+36
 4658 1652 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4659 1654 1A46     		mov	r2, r3
 4660 1656 704B     		ldr	r3, .L212+40
 4661 1658 1A60     		str	r2, [r3]
1522:main.c        ****                 //display previous preset as loaded
1523:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4662              		.loc 1 1523 0
 4663 165a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1524:main.c        ****                 //OLED_invert(0);
1525:main.c        ****                 sendMessageEnd = 0;
 4664              		.loc 1 1525 0
 4665 165e 6B4B     		ldr	r3, .L212+28
 4666 1660 0022     		movs	r2, #0
 4667 1662 1A70     		strb	r2, [r3]
1526:main.c        ****                 sendingMessage = 0;
 4668              		.loc 1 1526 0
 4669 1664 684B     		ldr	r3, .L212+24
 4670 1666 0022     		movs	r2, #0
 4671 1668 1A70     		strb	r2, [r3]
1527:main.c        ****                 messageArraySendCount = 0;
 4672              		.loc 1 1527 0
 4673 166a 6C4B     		ldr	r3, .L212+44
 4674 166c 0022     		movs	r2, #0
 4675 166e 1A80     		strh	r2, [r3]	@ movhi
1528:main.c        ****                 myArray[30] = 254;
 4676              		.loc 1 1528 0
 4677 1670 674B     		ldr	r3, .L212+32
 4678 1672 FE22     		movs	r2, #254
 4679 1674 9A77     		strb	r2, [r3, #30]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 111


1529:main.c        ****                 myArray[31] = 253;
 4680              		.loc 1 1529 0
 4681 1676 664B     		ldr	r3, .L212+32
 4682 1678 FD22     		movs	r2, #253
 4683 167a DA77     		strb	r2, [r3, #31]
 4684 167c 53E1     		b	.L176
 4685              	.L170:
1530:main.c        ****                 
1531:main.c        ****             }
1532:main.c        ****             else //send chunks
1533:main.c        ****             {
1534:main.c        ****                 //send the next preset Chunkkkkk
1535:main.c        ****                 myArray[0] = 2;
 4686              		.loc 1 1535 0
 4687 167e 644B     		ldr	r3, .L212+32
 4688 1680 0222     		movs	r2, #2
 4689 1682 1A70     		strb	r2, [r3]
1536:main.c        ****                 myArray[1] = presetNumberToWrite;
 4690              		.loc 1 1536 0
 4691 1684 634B     		ldr	r3, .L212+36
 4692 1686 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4693 1688 614B     		ldr	r3, .L212+32
 4694 168a 5A70     		strb	r2, [r3, #1]
 4695              	.LBB29:
1537:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 4696              		.loc 1 1537 0
 4697 168c 0223     		movs	r3, #2
 4698 168e BB64     		str	r3, [r7, #72]
 4699 1690 20E0     		b	.L172
 4700              	.L175:
1538:main.c        ****                 {
1539:main.c        ****                     if (messageArraySendCount < messageArraySize)
 4701              		.loc 1 1539 0
 4702 1692 624B     		ldr	r3, .L212+44
 4703 1694 1A88     		ldrh	r2, [r3]
 4704 1696 624B     		ldr	r3, .L212+48
 4705 1698 1B88     		ldrh	r3, [r3]
 4706 169a 9A42     		cmp	r2, r3
 4707 169c 0FD2     		bcs	.L173
1540:main.c        ****                     {
1541:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 4708              		.loc 1 1541 0
 4709 169e 5F4B     		ldr	r3, .L212+44
 4710 16a0 1B88     		ldrh	r3, [r3]
 4711 16a2 5A1C     		adds	r2, r3, #1
 4712 16a4 91B2     		uxth	r1, r2
 4713 16a6 5D4A     		ldr	r2, .L212+44
 4714 16a8 1180     		strh	r1, [r2]	@ movhi
 4715 16aa 1A46     		mov	r2, r3
 4716 16ac 5D4B     		ldr	r3, .L212+52
 4717 16ae 9B5C     		ldrb	r3, [r3, r2]
 4718 16b0 D9B2     		uxtb	r1, r3
 4719 16b2 574A     		ldr	r2, .L212+32
 4720 16b4 BB6C     		ldr	r3, [r7, #72]
 4721 16b6 1344     		add	r3, r3, r2
 4722 16b8 0A46     		mov	r2, r1
 4723 16ba 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 112


 4724 16bc 07E0     		b	.L174
 4725              	.L173:
1542:main.c        ****                     }
1543:main.c        ****                     else
1544:main.c        ****                     {
1545:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 4726              		.loc 1 1545 0
 4727 16be 544A     		ldr	r2, .L212+32
 4728 16c0 BB6C     		ldr	r3, [r7, #72]
 4729 16c2 1344     		add	r3, r3, r2
 4730 16c4 EE22     		movs	r2, #238
 4731 16c6 1A70     		strb	r2, [r3]
1546:main.c        ****                         sendMessageEnd = 1;
 4732              		.loc 1 1546 0
 4733 16c8 504B     		ldr	r3, .L212+28
 4734 16ca 0122     		movs	r2, #1
 4735 16cc 1A70     		strb	r2, [r3]
 4736              	.L174:
1537:main.c        ****                 {
 4737              		.loc 1 1537 0 discriminator 2
 4738 16ce BB6C     		ldr	r3, [r7, #72]
 4739 16d0 0133     		adds	r3, r3, #1
 4740 16d2 BB64     		str	r3, [r7, #72]
 4741              	.L172:
1537:main.c        ****                 {
 4742              		.loc 1 1537 0 is_stmt 0 discriminator 1
 4743 16d4 BB6C     		ldr	r3, [r7, #72]
 4744 16d6 1D2B     		cmp	r3, #29
 4745 16d8 DBD9     		bls	.L175
 4746              	.LBE29:
1547:main.c        ****                     }
1548:main.c        ****                 }
1549:main.c        ****                 myArray[30] = 254;
 4747              		.loc 1 1549 0 is_stmt 1
 4748 16da 4D4B     		ldr	r3, .L212+32
 4749 16dc FE22     		movs	r2, #254
 4750 16de 9A77     		strb	r2, [r3, #30]
1550:main.c        ****                 myArray[31] = 253;
 4751              		.loc 1 1550 0
 4752 16e0 4B4B     		ldr	r3, .L212+32
 4753 16e2 FD22     		movs	r2, #253
 4754 16e4 DA77     		strb	r2, [r3, #31]
 4755 16e6 1EE1     		b	.L176
 4756              	.L169:
1551:main.c        ****             }    
1552:main.c        ****         }
1553:main.c        ****         else if (sendKnobs)
 4757              		.loc 1 1553 0
 4758 16e8 4F4B     		ldr	r3, .L212+56
 4759 16ea 1B78     		ldrb	r3, [r3]
 4760 16ec DBB2     		uxtb	r3, r3
 4761 16ee 002B     		cmp	r3, #0
 4762 16f0 77D0     		beq	.L177
1554:main.c        ****         {
1555:main.c        ****             myArray[0] = 3; //sending knob stuff, not a preset send
 4763              		.loc 1 1555 0
 4764 16f2 474B     		ldr	r3, .L212+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 113


 4765 16f4 0322     		movs	r2, #3
 4766 16f6 1A70     		strb	r2, [r3]
 4767              	.LBB30:
1556:main.c        ****             for (int i = 0; i < 8; i++)
 4768              		.loc 1 1556 0
 4769 16f8 0023     		movs	r3, #0
 4770 16fa 7B64     		str	r3, [r7, #68]
 4771 16fc 0AE0     		b	.L178
 4772              	.L179:
1557:main.c        ****             {
1558:main.c        ****                 myArray[i + 1] = macroKnobValues[i];
 4773              		.loc 1 1558 0 discriminator 3
 4774 16fe 7B6C     		ldr	r3, [r7, #68]
 4775 1700 0133     		adds	r3, r3, #1
 4776 1702 4A49     		ldr	r1, .L212+60
 4777 1704 7A6C     		ldr	r2, [r7, #68]
 4778 1706 0A44     		add	r2, r2, r1
 4779 1708 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4780 170a 414A     		ldr	r2, .L212+32
 4781 170c D154     		strb	r1, [r2, r3]
1556:main.c        ****             for (int i = 0; i < 8; i++)
 4782              		.loc 1 1556 0 discriminator 3
 4783 170e 7B6C     		ldr	r3, [r7, #68]
 4784 1710 0133     		adds	r3, r3, #1
 4785 1712 7B64     		str	r3, [r7, #68]
 4786              	.L178:
1556:main.c        ****             for (int i = 0; i < 8; i++)
 4787              		.loc 1 1556 0 is_stmt 0 discriminator 1
 4788 1714 7B6C     		ldr	r3, [r7, #68]
 4789 1716 072B     		cmp	r3, #7
 4790 1718 F1DD     		ble	.L179
 4791              	.LBE30:
 4792              	.LBB31:
1559:main.c        ****             }
1560:main.c        ****             for (int i = 0; i < 4; i++)
 4793              		.loc 1 1560 0 is_stmt 1
 4794 171a 0023     		movs	r3, #0
 4795 171c 3B64     		str	r3, [r7, #64]
 4796 171e 0AE0     		b	.L180
 4797              	.L181:
1561:main.c        ****             {
1562:main.c        ****                 myArray[i + 9] = knobs[i];
 4798              		.loc 1 1562 0 discriminator 3
 4799 1720 3B6C     		ldr	r3, [r7, #64]
 4800 1722 0933     		adds	r3, r3, #9
 4801 1724 4249     		ldr	r1, .L212+64
 4802 1726 3A6C     		ldr	r2, [r7, #64]
 4803 1728 0A44     		add	r2, r2, r1
 4804 172a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4805 172c 384A     		ldr	r2, .L212+32
 4806 172e D154     		strb	r1, [r2, r3]
1560:main.c        ****             {
 4807              		.loc 1 1560 0 discriminator 3
 4808 1730 3B6C     		ldr	r3, [r7, #64]
 4809 1732 0133     		adds	r3, r3, #1
 4810 1734 3B64     		str	r3, [r7, #64]
 4811              	.L180:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 114


1560:main.c        ****             {
 4812              		.loc 1 1560 0 is_stmt 0 discriminator 1
 4813 1736 3B6C     		ldr	r3, [r7, #64]
 4814 1738 032B     		cmp	r3, #3
 4815 173a F1DD     		ble	.L181
 4816              	.LBE31:
 4817              	.LBB32:
1563:main.c        ****             }
1564:main.c        ****             for (int i = 0; i < 10; i++)
 4818              		.loc 1 1564 0 is_stmt 1
 4819 173c 0023     		movs	r3, #0
 4820 173e FB63     		str	r3, [r7, #60]
 4821 1740 0AE0     		b	.L182
 4822              	.L183:
1565:main.c        ****             {
1566:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 4823              		.loc 1 1566 0 discriminator 3
 4824 1742 FB6B     		ldr	r3, [r7, #60]
 4825 1744 0D33     		adds	r3, r3, #13
 4826 1746 3B49     		ldr	r1, .L212+68
 4827 1748 FA6B     		ldr	r2, [r7, #60]
 4828 174a 0A44     		add	r2, r2, r1
 4829 174c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4830 174e 304A     		ldr	r2, .L212+32
 4831 1750 D154     		strb	r1, [r2, r3]
1564:main.c        ****             {
 4832              		.loc 1 1564 0 discriminator 3
 4833 1752 FB6B     		ldr	r3, [r7, #60]
 4834 1754 0133     		adds	r3, r3, #1
 4835 1756 FB63     		str	r3, [r7, #60]
 4836              	.L182:
1564:main.c        ****             {
 4837              		.loc 1 1564 0 is_stmt 0 discriminator 1
 4838 1758 FB6B     		ldr	r3, [r7, #60]
 4839 175a 092B     		cmp	r3, #9
 4840 175c F1DD     		ble	.L183
 4841              	.LBE32:
1567:main.c        ****             }
1568:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 4842              		.loc 1 1568 0 is_stmt 1
 4843 175e 364B     		ldr	r3, .L212+72
 4844 1760 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4845 1762 1B01     		lsls	r3, r3, #4
 4846 1764 5AB2     		sxtb	r2, r3
 4847 1766 354B     		ldr	r3, .L212+76
 4848 1768 1B68     		ldr	r3, [r3]
 4849 176a 5BB2     		sxtb	r3, r3
 4850 176c 1343     		orrs	r3, r3, r2
 4851 176e 5AB2     		sxtb	r2, r3
 4852 1770 334B     		ldr	r3, .L212+80
 4853 1772 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4854 1774 5B01     		lsls	r3, r3, #5
 4855 1776 5BB2     		sxtb	r3, r3
 4856 1778 1343     		orrs	r3, r3, r2
 4857 177a 5AB2     		sxtb	r2, r3
 4858 177c 314B     		ldr	r3, .L212+84
 4859 177e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 115


 4860 1780 9B01     		lsls	r3, r3, #6
 4861 1782 5BB2     		sxtb	r3, r3
 4862 1784 1343     		orrs	r3, r3, r2
 4863 1786 5BB2     		sxtb	r3, r3
 4864 1788 DAB2     		uxtb	r2, r3
 4865 178a 214B     		ldr	r3, .L212+32
 4866 178c 1A76     		strb	r2, [r3, #24]
1569:main.c        ****             myArray[25] = patchNum;
 4867              		.loc 1 1569 0
 4868 178e 2E4B     		ldr	r3, .L212+88
 4869 1790 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4870 1792 1F4B     		ldr	r3, .L212+32
 4871 1794 5A76     		strb	r2, [r3, #25]
1570:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 4872              		.loc 1 1570 0
 4873 1796 2D4B     		ldr	r3, .L212+92
 4874 1798 B3F90030 		ldrsh	r3, [r3]
 4875 179c 1B12     		asrs	r3, r3, #8
 4876 179e 1BB2     		sxth	r3, r3
 4877 17a0 DAB2     		uxtb	r2, r3
 4878 17a2 1B4B     		ldr	r3, .L212+32
 4879 17a4 9A76     		strb	r2, [r3, #26]
1571:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 4880              		.loc 1 1571 0
 4881 17a6 294B     		ldr	r3, .L212+92
 4882 17a8 B3F90030 		ldrsh	r3, [r3]
 4883 17ac DAB2     		uxtb	r2, r3
 4884 17ae 184B     		ldr	r3, .L212+32
 4885 17b0 DA76     		strb	r2, [r3, #27]
1572:main.c        ****             myArray[28] = bar[0] >> 8;
 4886              		.loc 1 1572 0
 4887 17b2 274B     		ldr	r3, .L212+96
 4888 17b4 1B88     		ldrh	r3, [r3]	@ movhi
 4889 17b6 9BB2     		uxth	r3, r3
 4890 17b8 1B0A     		lsrs	r3, r3, #8
 4891 17ba 9BB2     		uxth	r3, r3
 4892 17bc DAB2     		uxtb	r2, r3
 4893 17be 144B     		ldr	r3, .L212+32
 4894 17c0 1A77     		strb	r2, [r3, #28]
1573:main.c        ****             myArray[29] = bar[0] & 0xff;
 4895              		.loc 1 1573 0
 4896 17c2 234B     		ldr	r3, .L212+96
 4897 17c4 1B88     		ldrh	r3, [r3]	@ movhi
 4898 17c6 9BB2     		uxth	r3, r3
 4899 17c8 DAB2     		uxtb	r2, r3
 4900 17ca 114B     		ldr	r3, .L212+32
 4901 17cc 5A77     		strb	r2, [r3, #29]
1574:main.c        ****             myArray[30] = 254;
 4902              		.loc 1 1574 0
 4903 17ce 104B     		ldr	r3, .L212+32
 4904 17d0 FE22     		movs	r2, #254
 4905 17d2 9A77     		strb	r2, [r3, #30]
1575:main.c        ****             myArray[31] = 253;
 4906              		.loc 1 1575 0
 4907 17d4 0E4B     		ldr	r3, .L212+32
 4908 17d6 FD22     		movs	r2, #253
 4909 17d8 DA77     		strb	r2, [r3, #31]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 116


1576:main.c        ****             
1577:main.c        ****             
1578:main.c        ****             sendKnobs = 0;
 4910              		.loc 1 1578 0
 4911 17da 134B     		ldr	r3, .L212+56
 4912 17dc 0022     		movs	r2, #0
 4913 17de 1A70     		strb	r2, [r3]
 4914 17e0 A1E0     		b	.L176
 4915              	.L177:
1579:main.c        ****         }
1580:main.c        ****         else
1581:main.c        ****         {
1582:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 4916              		.loc 1 1582 0
 4917 17e2 0B4B     		ldr	r3, .L212+32
 4918 17e4 0122     		movs	r2, #1
 4919 17e6 1A70     		strb	r2, [r3]
 4920              	.LBB33:
1583:main.c        ****             for (int i = 0; i < 12; i++)
 4921              		.loc 1 1583 0
 4922 17e8 0023     		movs	r3, #0
 4923 17ea BB63     		str	r3, [r7, #56]
 4924 17ec 57E0     		b	.L184
 4925              	.L213:
 4926 17ee 00BF     		.align	2
 4927              	.L212:
 4928 17f0 00000000 		.word	encoderNum
 4929 17f4 00000000 		.word	encoderVal
 4930 17f8 00000000 		.word	USB_check_flag
 4931 17fc 00000000 		.word	USB_active
 4932 1800 00000000 		.word	midiSent
 4933 1804 00000000 		.word	midiOverflow
 4934 1808 00000000 		.word	sendingMessage
 4935 180c 00000000 		.word	sendMessageEnd
 4936 1810 00000000 		.word	myArray
 4937 1814 00000000 		.word	presetNumberToWrite
 4938 1818 00000000 		.word	currentPresetSelection
 4939 181c 00000000 		.word	messageArraySendCount
 4940 1820 00000000 		.word	messageArraySize
 4941 1824 00000000 		.word	presetArray
 4942 1828 00000000 		.word	sendKnobs
 4943 182c 00000000 		.word	macroKnobValues
 4944 1830 00000000 		.word	knobs
 4945 1834 00000000 		.word	pedals8bit
 4946 1838 00000000 		.word	voice
 4947 183c 00000000 		.word	octave
 4948 1840 00000000 		.word	dualSlider
 4949 1844 00000000 		.word	neck
 4950 1848 00000000 		.word	patchNum
 4951 184c 00000000 		.word	processed_volumePedal
 4952 1850 00000000 		.word	bar
 4953              	.L185:
 4954              	.LBB34:
1584:main.c        ****             {
1585:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 4955              		.loc 1 1585 0 discriminator 3
 4956 1854 6E4A     		ldr	r2, .L214
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 117


 4957 1856 BB6B     		ldr	r3, [r7, #56]
 4958 1858 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4959 185c 4FF08841 		mov	r1, #1140850688
 4960 1860 1846     		mov	r0, r3
 4961 1862 FFF7FEFF 		bl	__aeabi_fmul
 4962 1866 0346     		mov	r3, r0
 4963 1868 1846     		mov	r0, r3
 4964 186a FFF7FEFF 		bl	roundf
 4965 186e 0346     		mov	r3, r0
 4966 1870 1846     		mov	r0, r3
 4967 1872 FFF7FEFF 		bl	__aeabi_f2iz
 4968 1876 0346     		mov	r3, r0
 4969 1878 3B61     		str	r3, [r7, #16]
1586:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 4970              		.loc 1 1586 0 discriminator 3
 4971 187a BB6B     		ldr	r3, [r7, #56]
 4972 187c 5B00     		lsls	r3, r3, #1
 4973 187e 0133     		adds	r3, r3, #1
 4974 1880 3A69     		ldr	r2, [r7, #16]
 4975 1882 1212     		asrs	r2, r2, #8
 4976 1884 D1B2     		uxtb	r1, r2
 4977 1886 634A     		ldr	r2, .L214+4
 4978 1888 D154     		strb	r1, [r2, r3]
1587:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 4979              		.loc 1 1587 0 discriminator 3
 4980 188a BB6B     		ldr	r3, [r7, #56]
 4981 188c 0133     		adds	r3, r3, #1
 4982 188e 5B00     		lsls	r3, r3, #1
 4983 1890 3A69     		ldr	r2, [r7, #16]
 4984 1892 D1B2     		uxtb	r1, r2
 4985 1894 5F4A     		ldr	r2, .L214+4
 4986 1896 D154     		strb	r1, [r2, r3]
 4987              	.LBE34:
1583:main.c        ****             {
 4988              		.loc 1 1583 0 discriminator 3
 4989 1898 BB6B     		ldr	r3, [r7, #56]
 4990 189a 0133     		adds	r3, r3, #1
 4991 189c BB63     		str	r3, [r7, #56]
 4992              	.L184:
1583:main.c        ****             {
 4993              		.loc 1 1583 0 is_stmt 0 discriminator 1
 4994 189e BB6B     		ldr	r3, [r7, #56]
 4995 18a0 0B2B     		cmp	r3, #11
 4996 18a2 D7DD     		ble	.L185
 4997              	.LBE33:
1588:main.c        ****             }
1589:main.c        ****             
1590:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 4998              		.loc 1 1590 0 is_stmt 1
 4999 18a4 5C4B     		ldr	r3, .L214+8
 5000 18a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5001 18a8 1B01     		lsls	r3, r3, #4
 5002 18aa 5AB2     		sxtb	r2, r3
 5003 18ac 5B4B     		ldr	r3, .L214+12
 5004 18ae 1B68     		ldr	r3, [r3]
 5005 18b0 5BB2     		sxtb	r3, r3
 5006 18b2 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 118


 5007 18b4 5AB2     		sxtb	r2, r3
 5008 18b6 5A4B     		ldr	r3, .L214+16
 5009 18b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5010 18ba 5B01     		lsls	r3, r3, #5
 5011 18bc 5BB2     		sxtb	r3, r3
 5012 18be 1343     		orrs	r3, r3, r2
 5013 18c0 5AB2     		sxtb	r2, r3
 5014 18c2 584B     		ldr	r3, .L214+20
 5015 18c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5016 18c6 9B01     		lsls	r3, r3, #6
 5017 18c8 5BB2     		sxtb	r3, r3
 5018 18ca 1343     		orrs	r3, r3, r2
 5019 18cc 5BB2     		sxtb	r3, r3
 5020 18ce DAB2     		uxtb	r2, r3
 5021 18d0 504B     		ldr	r3, .L214+4
 5022 18d2 1A76     		strb	r2, [r3, #24]
1591:main.c        ****             myArray[25] = patchNum;
 5023              		.loc 1 1591 0
 5024 18d4 544B     		ldr	r3, .L214+24
 5025 18d6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5026 18d8 4E4B     		ldr	r3, .L214+4
 5027 18da 5A76     		strb	r2, [r3, #25]
1592:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5028              		.loc 1 1592 0
 5029 18dc 534B     		ldr	r3, .L214+28
 5030 18de B3F90030 		ldrsh	r3, [r3]
 5031 18e2 1B12     		asrs	r3, r3, #8
 5032 18e4 1BB2     		sxth	r3, r3
 5033 18e6 DAB2     		uxtb	r2, r3
 5034 18e8 4A4B     		ldr	r3, .L214+4
 5035 18ea 9A76     		strb	r2, [r3, #26]
1593:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5036              		.loc 1 1593 0
 5037 18ec 4F4B     		ldr	r3, .L214+28
 5038 18ee B3F90030 		ldrsh	r3, [r3]
 5039 18f2 DAB2     		uxtb	r2, r3
 5040 18f4 474B     		ldr	r3, .L214+4
 5041 18f6 DA76     		strb	r2, [r3, #27]
1594:main.c        ****             myArray[28] = bar[0] >> 8;
 5042              		.loc 1 1594 0
 5043 18f8 4D4B     		ldr	r3, .L214+32
 5044 18fa 1B88     		ldrh	r3, [r3]	@ movhi
 5045 18fc 9BB2     		uxth	r3, r3
 5046 18fe 1B0A     		lsrs	r3, r3, #8
 5047 1900 9BB2     		uxth	r3, r3
 5048 1902 DAB2     		uxtb	r2, r3
 5049 1904 434B     		ldr	r3, .L214+4
 5050 1906 1A77     		strb	r2, [r3, #28]
1595:main.c        ****             myArray[29] = bar[0] & 0xff;
 5051              		.loc 1 1595 0
 5052 1908 494B     		ldr	r3, .L214+32
 5053 190a 1B88     		ldrh	r3, [r3]	@ movhi
 5054 190c 9BB2     		uxth	r3, r3
 5055 190e DAB2     		uxtb	r2, r3
 5056 1910 404B     		ldr	r3, .L214+4
 5057 1912 5A77     		strb	r2, [r3, #29]
1596:main.c        ****             myArray[30] = 254;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 119


 5058              		.loc 1 1596 0
 5059 1914 3F4B     		ldr	r3, .L214+4
 5060 1916 FE22     		movs	r2, #254
 5061 1918 9A77     		strb	r2, [r3, #30]
1597:main.c        ****             myArray[31] = 253;
 5062              		.loc 1 1597 0
 5063 191a 3E4B     		ldr	r3, .L214+4
 5064 191c FD22     		movs	r2, #253
 5065 191e DA77     		strb	r2, [r3, #31]
1598:main.c        ****             
1599:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 5066              		.loc 1 1599 0
 5067 1920 444B     		ldr	r3, .L214+36
 5068 1922 0122     		movs	r2, #1
 5069 1924 1A70     		strb	r2, [r3]
 5070              	.L176:
1600:main.c        ****             /*
1601:main.c        ****             for (int i = 0; i < 16; i++)
1602:main.c        ****             {
1603:main.c        ****                 myArray[i+56] = encoderVal[i];
1604:main.c        ****             }
1605:main.c        ****             */
1606:main.c        ****         }
1607:main.c        **** 
1608:main.c        ****         
1609:main.c        **** 
1610:main.c        **** /*
1611:main.c        ****         for(int i = 0; i < myBufferSize; i++)
1612:main.c        ****         {
1613:main.c        ****             SPIM_1_WriteTxData(myArray[i]);
1614:main.c        ****         }
1615:main.c        ****     */    
1616:main.c        ****         
1617:main.c        **** 
1618:main.c        ****        
1619:main.c        ****         
1620:main.c        ****         
1621:main.c        ****         //parse input from synth board (names)
1622:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 5071              		.loc 1 1622 0
 5072 1926 444B     		ldr	r3, .L214+40
 5073 1928 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5074 192a FD2B     		cmp	r3, #253
 5075 192c 5BD1     		bne	.L186
 5076              		.loc 1 1622 0 is_stmt 0 discriminator 1
 5077 192e 424B     		ldr	r3, .L214+40
 5078 1930 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5079 1932 FE2B     		cmp	r3, #254
 5080 1934 57D1     		bne	.L186
 5081              	.LBB35:
1623:main.c        ****         {
1624:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5082              		.loc 1 1624 0 is_stmt 1
 5083 1936 404B     		ldr	r3, .L214+40
 5084 1938 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5085 193a FB60     		str	r3, [r7, #12]
1625:main.c        ****             int whichMacroToStoreName = inBuffer[16];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 120


 5086              		.loc 1 1625 0
 5087 193c 3E4B     		ldr	r3, .L214+40
 5088 193e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5089 1940 BB60     		str	r3, [r7, #8]
1626:main.c        ****             int bufferPointer = 2;
 5090              		.loc 1 1626 0
 5091 1942 0223     		movs	r3, #2
 5092 1944 7B63     		str	r3, [r7, #52]
 5093              	.LBB36:
1627:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5094              		.loc 1 1627 0
 5095 1946 0023     		movs	r3, #0
 5096 1948 3B63     		str	r3, [r7, #48]
 5097 194a 14E0     		b	.L187
 5098              	.L188:
1628:main.c        ****             {
1629:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 5099              		.loc 1 1629 0 discriminator 3
 5100 194c 3A4A     		ldr	r2, .L214+40
 5101 194e 7B6B     		ldr	r3, [r7, #52]
 5102 1950 1344     		add	r3, r3, r2
 5103 1952 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5104 1954 3949     		ldr	r1, .L214+44
 5105 1956 FA68     		ldr	r2, [r7, #12]
 5106 1958 1346     		mov	r3, r2
 5107 195a DB00     		lsls	r3, r3, #3
 5108 195c 9B1A     		subs	r3, r3, r2
 5109 195e 5B00     		lsls	r3, r3, #1
 5110 1960 CA18     		adds	r2, r1, r3
 5111 1962 3B6B     		ldr	r3, [r7, #48]
 5112 1964 1344     		add	r3, r3, r2
 5113 1966 0246     		mov	r2, r0
 5114 1968 1A70     		strb	r2, [r3]
1630:main.c        ****                 bufferPointer++;
 5115              		.loc 1 1630 0 discriminator 3
 5116 196a 7B6B     		ldr	r3, [r7, #52]
 5117 196c 0133     		adds	r3, r3, #1
 5118 196e 7B63     		str	r3, [r7, #52]
1627:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5119              		.loc 1 1627 0 discriminator 3
 5120 1970 3B6B     		ldr	r3, [r7, #48]
 5121 1972 0133     		adds	r3, r3, #1
 5122 1974 3B63     		str	r3, [r7, #48]
 5123              	.L187:
1627:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5124              		.loc 1 1627 0 is_stmt 0 discriminator 1
 5125 1976 3B6B     		ldr	r3, [r7, #48]
 5126 1978 0D2B     		cmp	r3, #13
 5127 197a E7DD     		ble	.L188
 5128              	.LBE36:
1631:main.c        ****             }
1632:main.c        ****             bufferPointer = 17;
 5129              		.loc 1 1632 0 is_stmt 1
 5130 197c 1123     		movs	r3, #17
 5131 197e 7B63     		str	r3, [r7, #52]
 5132              	.LBB37:
1633:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 121


 5133              		.loc 1 1633 0
 5134 1980 0023     		movs	r3, #0
 5135 1982 FB62     		str	r3, [r7, #44]
 5136 1984 1BE0     		b	.L189
 5137              	.L190:
1634:main.c        ****             {
1635:main.c        ****                 macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[buffer
 5138              		.loc 1 1635 0 discriminator 3
 5139 1986 2C4A     		ldr	r2, .L214+40
 5140 1988 7B6B     		ldr	r3, [r7, #52]
 5141 198a 1344     		add	r3, r3, r2
 5142 198c 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5143 198e 2C48     		ldr	r0, .L214+48
 5144 1990 BB68     		ldr	r3, [r7, #8]
 5145 1992 F968     		ldr	r1, [r7, #12]
 5146 1994 1A46     		mov	r2, r3
 5147 1996 D200     		lsls	r2, r2, #3
 5148 1998 D21A     		subs	r2, r2, r3
 5149 199a 5300     		lsls	r3, r2, #1
 5150 199c 1A46     		mov	r2, r3
 5151 199e 0B46     		mov	r3, r1
 5152 19a0 DB00     		lsls	r3, r3, #3
 5153 19a2 5B1A     		subs	r3, r3, r1
 5154 19a4 1B01     		lsls	r3, r3, #4
 5155 19a6 1344     		add	r3, r3, r2
 5156 19a8 C218     		adds	r2, r0, r3
 5157 19aa FB6A     		ldr	r3, [r7, #44]
 5158 19ac 1344     		add	r3, r3, r2
 5159 19ae 2246     		mov	r2, r4
 5160 19b0 1A70     		strb	r2, [r3]
1636:main.c        ****                 bufferPointer++;
 5161              		.loc 1 1636 0 discriminator 3
 5162 19b2 7B6B     		ldr	r3, [r7, #52]
 5163 19b4 0133     		adds	r3, r3, #1
 5164 19b6 7B63     		str	r3, [r7, #52]
1633:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5165              		.loc 1 1633 0 discriminator 3
 5166 19b8 FB6A     		ldr	r3, [r7, #44]
 5167 19ba 0133     		adds	r3, r3, #1
 5168 19bc FB62     		str	r3, [r7, #44]
 5169              	.L189:
1633:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5170              		.loc 1 1633 0 is_stmt 0 discriminator 1
 5171 19be FB6A     		ldr	r3, [r7, #44]
 5172 19c0 0D2B     		cmp	r3, #13
 5173 19c2 E0DD     		ble	.L190
 5174              	.LBE37:
1637:main.c        ****             }
1638:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 5175              		.loc 1 1638 0 is_stmt 1
 5176 19c4 184B     		ldr	r3, .L214+24
 5177 19c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5178 19c8 1A46     		mov	r2, r3
 5179 19ca FB68     		ldr	r3, [r7, #12]
 5180 19cc 9A42     		cmp	r2, r3
 5181 19ce 0AD1     		bne	.L186
 5182              		.loc 1 1638 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 122


 5183 19d0 BB68     		ldr	r3, [r7, #8]
 5184 19d2 072B     		cmp	r3, #7
 5185 19d4 07D1     		bne	.L186
 5186              		.loc 1 1638 0 discriminator 2
 5187 19d6 1B4A     		ldr	r2, .L214+52
 5188 19d8 FB68     		ldr	r3, [r7, #12]
 5189 19da 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5190 19de 002B     		cmp	r3, #0
 5191 19e0 01D1     		bne	.L186
1639:main.c        ****             {
1640:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5192              		.loc 1 1640 0 is_stmt 1
 5193 19e2 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5194              	.L186:
 5195              	.LBE35:
1641:main.c        ****             }
1642:main.c        ****         }
1643:main.c        ****         
1644:main.c        ****         SPIM_1_ClearRxBuffer();
 5196              		.loc 1 1644 0
 5197 19e6 FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1645:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 5198              		.loc 1 1645 0
 5199 19ea 174B     		ldr	r3, .L214+56
 5200 19ec 1B78     		ldrb	r3, [r3]
 5201 19ee DBB2     		uxtb	r3, r3
 5202 19f0 0121     		movs	r1, #1
 5203 19f2 1846     		mov	r0, r3
 5204 19f4 FFF7FEFF 		bl	CyDmaChEnable
1646:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 5205              		.loc 1 1646 0
 5206 19f8 144B     		ldr	r3, .L214+60
 5207 19fa 1B78     		ldrb	r3, [r3]
 5208 19fc DBB2     		uxtb	r3, r3
 5209 19fe 0121     		movs	r1, #1
 5210 1a00 1846     		mov	r0, r3
 5211 1a02 FFF7FEFF 		bl	CyDmaChEnable
1647:main.c        ****         
1648:main.c        ****         testpin6_Write(0);
 5212              		.loc 1 1648 0
 5213 1a06 0020     		movs	r0, #0
 5214 1a08 FFF7FEFF 		bl	testpin6_Write
1649:main.c        ****        
1650:main.c        **** 
1651:main.c        ****      }
 5215              		.loc 1 1651 0
 5216 1a0c FEF755BD 		b	.L191
 5217              	.L215:
 5218              		.align	2
 5219              	.L214:
 5220 1a10 00000000 		.word	stringMIDI
 5221 1a14 00000000 		.word	myArray
 5222 1a18 00000000 		.word	voice
 5223 1a1c 00000000 		.word	octave
 5224 1a20 00000000 		.word	dualSlider
 5225 1a24 00000000 		.word	neck
 5226 1a28 00000000 		.word	patchNum
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 123


 5227 1a2c 00000000 		.word	processed_volumePedal
 5228 1a30 00000000 		.word	bar
 5229 1a34 00000000 		.word	sendKnobs
 5230 1a38 00000000 		.word	inBuffer
 5231 1a3c 00000000 		.word	presetNamesArray
 5232 1a40 00000000 		.word	macroNamesArray
 5233 1a44 00000000 		.word	presetAlreadyDisplayed
 5234 1a48 00000000 		.word	rx3Channel
 5235 1a4c 00000000 		.word	txChannel
 5236              		.cfi_endproc
 5237              	.LFE75:
 5238              		.size	main, .-main
 5239              		.section	.text.DmaTxConfiguration,"ax",%progbits
 5240              		.align	2
 5241              		.global	DmaTxConfiguration
 5242              		.thumb
 5243              		.thumb_func
 5244              		.type	DmaTxConfiguration, %function
 5245              	DmaTxConfiguration:
 5246              	.LFB76:
1652:main.c        **** }
1653:main.c        **** 
1654:main.c        **** void DmaTxConfiguration()
1655:main.c        **** {
 5247              		.loc 1 1655 0
 5248              		.cfi_startproc
 5249              		@ args = 0, pretend = 0, frame = 0
 5250              		@ frame_needed = 1, uses_anonymous_args = 0
 5251 0000 80B5     		push	{r7, lr}
 5252              		.cfi_def_cfa_offset 8
 5253              		.cfi_offset 7, -8
 5254              		.cfi_offset 14, -4
 5255 0002 00AF     		add	r7, sp, #0
 5256              		.cfi_def_cfa_register 7
1656:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1657:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 5257              		.loc 1 1657 0
 5258 0004 4FF48043 		mov	r3, #16384
 5259 0008 41F6FF72 		movw	r2, #8191
 5260 000c 0121     		movs	r1, #1
 5261 000e 0120     		movs	r0, #1
 5262 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 5263 0014 0346     		mov	r3, r0
 5264 0016 1A46     		mov	r2, r3
 5265 0018 124B     		ldr	r3, .L217
 5266 001a 1A70     		strb	r2, [r3]
1658:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1659:main.c        **** 
1660:main.c        ****     txTD = CyDmaTdAllocate();
 5267              		.loc 1 1660 0
 5268 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5269 0020 0346     		mov	r3, r0
 5270 0022 1A46     		mov	r2, r3
 5271 0024 104B     		ldr	r3, .L217+4
 5272 0026 1A70     		strb	r2, [r3]
1661:main.c        **** 
1662:main.c        ****     /* Configure this Td as follows:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 124


1663:main.c        ****     *  - Increment the source address, but not the destination address   
1664:main.c        ****     */
1665:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 5273              		.loc 1 1665 0
 5274 0028 0F4B     		ldr	r3, .L217+4
 5275 002a 1B78     		ldrb	r3, [r3]
 5276 002c D8B2     		uxtb	r0, r3
 5277 002e 0123     		movs	r3, #1
 5278 0030 FE22     		movs	r2, #254
 5279 0032 2021     		movs	r1, #32
 5280 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1666:main.c        **** 
1667:main.c        ****     /* From the memory to the SPIM */
1668:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 5281              		.loc 1 1668 0
 5282 0038 0B4B     		ldr	r3, .L217+4
 5283 003a 1B78     		ldrb	r3, [r3]
 5284 003c DBB2     		uxtb	r3, r3
 5285 003e 0B4A     		ldr	r2, .L217+8
 5286 0040 91B2     		uxth	r1, r2
 5287 0042 46F24242 		movw	r2, #25666
 5288 0046 1846     		mov	r0, r3
 5289 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1669:main.c        ****     
1670:main.c        ****     /* Associate the TD with the channel */
1671:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 5290              		.loc 1 1671 0
 5291 004c 054B     		ldr	r3, .L217
 5292 004e 1B78     		ldrb	r3, [r3]
 5293 0050 DAB2     		uxtb	r2, r3
 5294 0052 054B     		ldr	r3, .L217+4
 5295 0054 1B78     		ldrb	r3, [r3]
 5296 0056 DBB2     		uxtb	r3, r3
 5297 0058 1946     		mov	r1, r3
 5298 005a 1046     		mov	r0, r2
 5299 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1672:main.c        ****    
1673:main.c        **** } 
 5300              		.loc 1 1673 0
 5301 0060 00BF     		nop
 5302 0062 80BD     		pop	{r7, pc}
 5303              	.L218:
 5304              		.align	2
 5305              	.L217:
 5306 0064 00000000 		.word	txChannel
 5307 0068 00000000 		.word	txTD
 5308 006c 00000000 		.word	myArray
 5309              		.cfi_endproc
 5310              	.LFE76:
 5311              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 5312              		.section	.text.DmaRxConfiguration,"ax",%progbits
 5313              		.align	2
 5314              		.global	DmaRxConfiguration
 5315              		.thumb
 5316              		.thumb_func
 5317              		.type	DmaRxConfiguration, %function
 5318              	DmaRxConfiguration:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 125


 5319              	.LFB77:
1674:main.c        **** 
1675:main.c        **** void DmaRxConfiguration()
1676:main.c        **** { 
 5320              		.loc 1 1676 0
 5321              		.cfi_startproc
 5322              		@ args = 0, pretend = 0, frame = 0
 5323              		@ frame_needed = 1, uses_anonymous_args = 0
 5324 0000 80B5     		push	{r7, lr}
 5325              		.cfi_def_cfa_offset 8
 5326              		.cfi_offset 7, -8
 5327              		.cfi_offset 14, -4
 5328 0002 00AF     		add	r7, sp, #0
 5329              		.cfi_def_cfa_register 7
1677:main.c        ****     //pluck dma
1678:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5330              		.loc 1 1678 0
 5331 0004 41F6FF73 		movw	r3, #8191
 5332 0008 4FF48042 		mov	r2, #16384
 5333 000c 0121     		movs	r1, #1
 5334 000e 0120     		movs	r0, #1
 5335 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 5336 0014 0346     		mov	r3, r0
 5337 0016 1A46     		mov	r2, r3
 5338 0018 4A4B     		ldr	r3, .L220
 5339 001a 1A70     		strb	r2, [r3]
1679:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1680:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 5340              		.loc 1 1680 0
 5341 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5342 0020 0346     		mov	r3, r0
 5343 0022 1A46     		mov	r2, r3
 5344 0024 484B     		ldr	r3, .L220+4
 5345 0026 1A70     		strb	r2, [r3]
1681:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 5346              		.loc 1 1681 0
 5347 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 5348 002c 0346     		mov	r3, r0
 5349 002e 1A46     		mov	r2, r3
 5350 0030 454B     		ldr	r3, .L220+4
 5351 0032 5A70     		strb	r2, [r3, #1]
1682:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 5352              		.loc 1 1682 0
 5353 0034 444B     		ldr	r3, .L220+4
 5354 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5355 0038 0223     		movs	r3, #2
 5356 003a FE22     		movs	r2, #254
 5357 003c 1A21     		movs	r1, #26
 5358 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1683:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 5359              		.loc 1 1683 0
 5360 0042 414B     		ldr	r3, .L220+4
 5361 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5362 0046 0223     		movs	r3, #2
 5363 0048 FE22     		movs	r2, #254
 5364 004a 1A21     		movs	r1, #26
 5365 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 126


1684:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 5366              		.loc 1 1684 0
 5367 0050 3D4B     		ldr	r3, .L220+4
 5368 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5369 0054 3D4A     		ldr	r2, .L220+8
 5370 0056 92B2     		uxth	r2, r2
 5371 0058 46F25451 		movw	r1, #25940
 5372 005c 1846     		mov	r0, r3
 5373 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1685:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 5374              		.loc 1 1685 0
 5375 0062 394B     		ldr	r3, .L220+4
 5376 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5377 0066 3A4A     		ldr	r2, .L220+12
 5378 0068 92B2     		uxth	r2, r2
 5379 006a 46F25451 		movw	r1, #25940
 5380 006e 1846     		mov	r0, r3
 5381 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1686:main.c        **** 
1687:main.c        ****     //bar dma
1688:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5382              		.loc 1 1688 0
 5383 0074 41F6FF73 		movw	r3, #8191
 5384 0078 4FF48042 		mov	r2, #16384
 5385 007c 0121     		movs	r1, #1
 5386 007e 0120     		movs	r0, #1
 5387 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 5388 0084 0346     		mov	r3, r0
 5389 0086 1A46     		mov	r2, r3
 5390 0088 324B     		ldr	r3, .L220+16
 5391 008a 1A70     		strb	r2, [r3]
1689:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1690:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 5392              		.loc 1 1690 0
 5393 008c FFF7FEFF 		bl	CyDmaTdAllocate
 5394 0090 0346     		mov	r3, r0
 5395 0092 1A46     		mov	r2, r3
 5396 0094 304B     		ldr	r3, .L220+20
 5397 0096 1A70     		strb	r2, [r3]
1691:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 5398              		.loc 1 1691 0
 5399 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 5400 009c 0346     		mov	r3, r0
 5401 009e 1A46     		mov	r2, r3
 5402 00a0 2D4B     		ldr	r3, .L220+20
 5403 00a2 5A70     		strb	r2, [r3, #1]
1692:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5404              		.loc 1 1692 0
 5405 00a4 2C4B     		ldr	r3, .L220+20
 5406 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5407 00a8 0623     		movs	r3, #6
 5408 00aa FE22     		movs	r2, #254
 5409 00ac 0821     		movs	r1, #8
 5410 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1693:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5411              		.loc 1 1693 0
 5412 00b2 294B     		ldr	r3, .L220+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 127


 5413 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5414 00b6 0623     		movs	r3, #6
 5415 00b8 FE22     		movs	r2, #254
 5416 00ba 0821     		movs	r1, #8
 5417 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1694:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 5418              		.loc 1 1694 0
 5419 00c0 254B     		ldr	r3, .L220+20
 5420 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5421 00c4 254A     		ldr	r2, .L220+24
 5422 00c6 92B2     		uxth	r2, r2
 5423 00c8 46F25751 		movw	r1, #25943
 5424 00cc 1846     		mov	r0, r3
 5425 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1695:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 5426              		.loc 1 1695 0
 5427 00d2 214B     		ldr	r3, .L220+20
 5428 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5429 00d6 224A     		ldr	r2, .L220+28
 5430 00d8 92B2     		uxth	r2, r2
 5431 00da 46F25751 		movw	r1, #25943
 5432 00de 1846     		mov	r0, r3
 5433 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1696:main.c        ****     
1697:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1698:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5434              		.loc 1 1698 0
 5435 00e4 41F6FF73 		movw	r3, #8191
 5436 00e8 4FF48042 		mov	r2, #16384
 5437 00ec 0121     		movs	r1, #1
 5438 00ee 0120     		movs	r0, #1
 5439 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 5440 00f4 0346     		mov	r3, r0
 5441 00f6 1A46     		mov	r2, r3
 5442 00f8 1A4B     		ldr	r3, .L220+32
 5443 00fa 1A70     		strb	r2, [r3]
1699:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1700:main.c        **** 
1701:main.c        ****     rx3TD = CyDmaTdAllocate();
 5444              		.loc 1 1701 0
 5445 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 5446 0100 0346     		mov	r3, r0
 5447 0102 1A46     		mov	r2, r3
 5448 0104 184B     		ldr	r3, .L220+36
 5449 0106 1A70     		strb	r2, [r3]
1702:main.c        ****     
1703:main.c        ****     /* Configure this Td as follows:
1704:main.c        ****     *  - Increment the destination address, but not the source address
1705:main.c        ****     */
1706:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 5450              		.loc 1 1706 0
 5451 0108 174B     		ldr	r3, .L220+36
 5452 010a 1B78     		ldrb	r3, [r3]
 5453 010c D8B2     		uxtb	r0, r3
 5454 010e 0223     		movs	r3, #2
 5455 0110 FE22     		movs	r2, #254
 5456 0112 2021     		movs	r1, #32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 128


 5457 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1707:main.c        **** 
1708:main.c        ****     /* From the SPIM to the memory */
1709:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 5458              		.loc 1 1709 0
 5459 0118 134B     		ldr	r3, .L220+36
 5460 011a 1B78     		ldrb	r3, [r3]
 5461 011c DBB2     		uxtb	r3, r3
 5462 011e 134A     		ldr	r2, .L220+40
 5463 0120 92B2     		uxth	r2, r2
 5464 0122 46F25241 		movw	r1, #25682
 5465 0126 1846     		mov	r0, r3
 5466 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1710:main.c        **** 
1711:main.c        ****     /* Associate the TD with the channel */
1712:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 5467              		.loc 1 1712 0
 5468 012c 0D4B     		ldr	r3, .L220+32
 5469 012e 1B78     		ldrb	r3, [r3]
 5470 0130 DAB2     		uxtb	r2, r3
 5471 0132 0D4B     		ldr	r3, .L220+36
 5472 0134 1B78     		ldrb	r3, [r3]
 5473 0136 DBB2     		uxtb	r3, r3
 5474 0138 1946     		mov	r1, r3
 5475 013a 1046     		mov	r0, r2
 5476 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1713:main.c        **** }
 5477              		.loc 1 1713 0
 5478 0140 00BF     		nop
 5479 0142 80BD     		pop	{r7, pc}
 5480              	.L221:
 5481              		.align	2
 5482              	.L220:
 5483 0144 00000000 		.word	rx1Channel
 5484 0148 00000000 		.word	rx1TD
 5485 014c 00000000 		.word	rxBufferPluck
 5486 0150 1A000000 		.word	rxBufferPluck+26
 5487 0154 00000000 		.word	rx2Channel
 5488 0158 00000000 		.word	rx2TD
 5489 015c 00000000 		.word	rxBufferBar
 5490 0160 08000000 		.word	rxBufferBar+8
 5491 0164 00000000 		.word	rx3Channel
 5492 0168 00000000 		.word	rx3TD
 5493 016c 00000000 		.word	inBuffer
 5494              		.cfi_endproc
 5495              	.LFE77:
 5496              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 5497              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 5498              		.align	2
 5499              		.global	I2C_MasterWriteBlocking
 5500              		.thumb
 5501              		.thumb_func
 5502              		.type	I2C_MasterWriteBlocking, %function
 5503              	I2C_MasterWriteBlocking:
 5504              	.LFB78:
1714:main.c        **** 
1715:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 129


1716:main.c        **** {
 5505              		.loc 1 1716 0
 5506              		.cfi_startproc
 5507              		@ args = 0, pretend = 0, frame = 24
 5508              		@ frame_needed = 1, uses_anonymous_args = 0
 5509 0000 80B5     		push	{r7, lr}
 5510              		.cfi_def_cfa_offset 8
 5511              		.cfi_offset 7, -8
 5512              		.cfi_offset 14, -4
 5513 0002 86B0     		sub	sp, sp, #24
 5514              		.cfi_def_cfa_offset 32
 5515 0004 00AF     		add	r7, sp, #0
 5516              		.cfi_def_cfa_register 7
 5517 0006 0346     		mov	r3, r0
 5518 0008 FB71     		strb	r3, [r7, #7]
 5519 000a 0B46     		mov	r3, r1	@ movhi
 5520 000c BB80     		strh	r3, [r7, #4]	@ movhi
 5521 000e 1346     		mov	r3, r2
 5522 0010 BB71     		strb	r3, [r7, #6]
1717:main.c        ****     uint8 volatile status;
1718:main.c        ****     uint8_t error = 0;
 5523              		.loc 1 1718 0
 5524 0012 0023     		movs	r3, #0
 5525 0014 FB75     		strb	r3, [r7, #23]
1719:main.c        ****     uint32_t timeout = 50000;
 5526              		.loc 1 1719 0
 5527 0016 4CF25033 		movw	r3, #50000
 5528 001a 3B61     		str	r3, [r7, #16]
1720:main.c        ****     status = I2C_1_MasterClearStatus();
 5529              		.loc 1 1720 0
 5530 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 5531 0020 0346     		mov	r3, r0
 5532 0022 FB73     		strb	r3, [r7, #15]
1721:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 5533              		.loc 1 1721 0
 5534 0024 FB7B     		ldrb	r3, [r7, #15]
 5535 0026 DBB2     		uxtb	r3, r3
 5536 0028 5BB2     		sxtb	r3, r3
 5537 002a 002B     		cmp	r3, #0
 5538 002c 42DB     		blt	.L223
1722:main.c        ****     {
1723:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 5539              		.loc 1 1723 0
 5540 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 5541 0030 DAB2     		uxtb	r2, r3
 5542 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5543 0034 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5544 0036 2949     		ldr	r1, .L232
 5545 0038 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 5546 003c 0346     		mov	r3, r0
 5547 003e FB73     		strb	r3, [r7, #15]
1724:main.c        ****                                      mode);
1725:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 5548              		.loc 1 1725 0
 5549 0040 FB7B     		ldrb	r3, [r7, #15]
 5550 0042 DBB2     		uxtb	r3, r3
 5551 0044 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 130


 5552 0046 2FD1     		bne	.L224
 5553              	.L228:
1726:main.c        ****         {
1727:main.c        ****             /* wait for write complete and no error */
1728:main.c        ****             do
1729:main.c        ****             {
1730:main.c        ****                 status = I2C_1_MasterStatus();
 5554              		.loc 1 1730 0
 5555 0048 FFF7FEFF 		bl	I2C_1_MasterStatus
 5556 004c 0346     		mov	r3, r0
 5557 004e FB73     		strb	r3, [r7, #15]
1731:main.c        ****                 timeout--;
 5558              		.loc 1 1731 0
 5559 0050 3B69     		ldr	r3, [r7, #16]
 5560 0052 013B     		subs	r3, r3, #1
 5561 0054 3B61     		str	r3, [r7, #16]
1732:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 5562              		.loc 1 1732 0
 5563 0056 FB7B     		ldrb	r3, [r7, #15]
 5564 0058 DBB2     		uxtb	r3, r3
 5565 005a 802B     		cmp	r3, #128
 5566 005c 03D1     		bne	.L225
1733:main.c        ****                 {
1734:main.c        ****                     I2C_reset();
 5567              		.loc 1 1734 0
 5568 005e FFF7FEFF 		bl	I2C_reset
1735:main.c        ****                     error = 1;
 5569              		.loc 1 1735 0
 5570 0062 0123     		movs	r3, #1
 5571 0064 FB75     		strb	r3, [r7, #23]
 5572              	.L225:
1736:main.c        ****                 }
1737:main.c        ****                 if (timeout == 0)
 5573              		.loc 1 1737 0
 5574 0066 3B69     		ldr	r3, [r7, #16]
 5575 0068 002B     		cmp	r3, #0
 5576 006a 05D1     		bne	.L226
1738:main.c        ****                 {
1739:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5577              		.loc 1 1739 0
 5578 006c 8023     		movs	r3, #128
 5579 006e FB73     		strb	r3, [r7, #15]
1740:main.c        ****                     I2C_reset();
 5580              		.loc 1 1740 0
 5581 0070 FFF7FEFF 		bl	I2C_reset
1741:main.c        ****                     error = 1;
 5582              		.loc 1 1741 0
 5583 0074 0123     		movs	r3, #1
 5584 0076 FB75     		strb	r3, [r7, #23]
 5585              	.L226:
1742:main.c        ****                 }
1743:main.c        ****                 
1744:main.c        ****                 if (status == 0)
 5586              		.loc 1 1744 0
 5587 0078 FB7B     		ldrb	r3, [r7, #15]
 5588 007a DBB2     		uxtb	r3, r3
 5589 007c 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 131


 5590 007e 05D1     		bne	.L227
1745:main.c        ****                 {
1746:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5591              		.loc 1 1746 0
 5592 0080 8023     		movs	r3, #128
 5593 0082 FB73     		strb	r3, [r7, #15]
1747:main.c        ****                     I2C_reset();
 5594              		.loc 1 1747 0
 5595 0084 FFF7FEFF 		bl	I2C_reset
1748:main.c        ****                     error = 1;
 5596              		.loc 1 1748 0
 5597 0088 0123     		movs	r3, #1
 5598 008a FB75     		strb	r3, [r7, #23]
 5599              	.L227:
1749:main.c        ****                 }
1750:main.c        ****                 
1751:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 5600              		.loc 1 1751 0
 5601 008c FB7B     		ldrb	r3, [r7, #15]
 5602 008e DBB2     		uxtb	r3, r3
 5603 0090 03F08203 		and	r3, r3, #130
 5604 0094 002B     		cmp	r3, #0
 5605 0096 0DD1     		bne	.L223
 5606              		.loc 1 1751 0 is_stmt 0 discriminator 1
 5607 0098 FB7B     		ldrb	r3, [r7, #15]
 5608 009a DBB2     		uxtb	r3, r3
 5609 009c 002B     		cmp	r3, #0
 5610 009e 09D0     		beq	.L223
 5611              		.loc 1 1751 0 discriminator 2
 5612 00a0 3B69     		ldr	r3, [r7, #16]
 5613 00a2 002B     		cmp	r3, #0
 5614 00a4 D0D1     		bne	.L228
 5615 00a6 05E0     		b	.L223
 5616              	.L224:
1752:main.c        ****         }
1753:main.c        ****         else
1754:main.c        ****         {
1755:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1756:main.c        ****             *  I2CM_MasterStatus() error output */
1757:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 5617              		.loc 1 1757 0 is_stmt 1
 5618 00a8 8023     		movs	r3, #128
 5619 00aa FB73     		strb	r3, [r7, #15]
1758:main.c        ****             I2C_reset();
 5620              		.loc 1 1758 0
 5621 00ac FFF7FEFF 		bl	I2C_reset
1759:main.c        ****             error = 1;
 5622              		.loc 1 1759 0
 5623 00b0 0123     		movs	r3, #1
 5624 00b2 FB75     		strb	r3, [r7, #23]
 5625              	.L223:
1760:main.c        ****         } 
1761:main.c        ****     }  
1762:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 5626              		.loc 1 1762 0
 5627 00b4 FB7B     		ldrb	r3, [r7, #15]
 5628 00b6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 132


 5629 00b8 03F02003 		and	r3, r3, #32
 5630 00bc 002B     		cmp	r3, #0
 5631 00be 04D1     		bne	.L229
 5632              		.loc 1 1762 0 is_stmt 0 discriminator 1
 5633 00c0 FB7B     		ldrb	r3, [r7, #15]
 5634 00c2 DBB2     		uxtb	r3, r3
 5635 00c4 5BB2     		sxtb	r3, r3
 5636 00c6 002B     		cmp	r3, #0
 5637 00c8 03DA     		bge	.L230
 5638              	.L229:
1763:main.c        ****     {
1764:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1765:main.c        ****         //i2c_skipped[main_counter] = 1;
1766:main.c        ****         I2C_reset();
 5639              		.loc 1 1766 0 is_stmt 1
 5640 00ca FFF7FEFF 		bl	I2C_reset
1767:main.c        ****         error = 1;
 5641              		.loc 1 1767 0
 5642 00ce 0123     		movs	r3, #1
 5643 00d0 FB75     		strb	r3, [r7, #23]
 5644              	.L230:
1768:main.c        ****     }
1769:main.c        ****     return error;
 5645              		.loc 1 1769 0
 5646 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1770:main.c        **** }
 5647              		.loc 1 1770 0
 5648 00d4 1846     		mov	r0, r3
 5649 00d6 1837     		adds	r7, r7, #24
 5650              		.cfi_def_cfa_offset 8
 5651 00d8 BD46     		mov	sp, r7
 5652              		.cfi_def_cfa_register 13
 5653              		@ sp needed
 5654 00da 80BD     		pop	{r7, pc}
 5655              	.L233:
 5656              		.align	2
 5657              	.L232:
 5658 00dc 00000000 		.word	I2Cbuff1
 5659              		.cfi_endproc
 5660              	.LFE78:
 5661              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 5662              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 5663              		.align	2
 5664              		.global	I2C_MasterReadBlocking
 5665              		.thumb
 5666              		.thumb_func
 5667              		.type	I2C_MasterReadBlocking, %function
 5668              	I2C_MasterReadBlocking:
 5669              	.LFB79:
1771:main.c        **** 
1772:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1773:main.c        **** {
 5670              		.loc 1 1773 0
 5671              		.cfi_startproc
 5672              		@ args = 0, pretend = 0, frame = 16
 5673              		@ frame_needed = 1, uses_anonymous_args = 0
 5674 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 133


 5675              		.cfi_def_cfa_offset 8
 5676              		.cfi_offset 7, -8
 5677              		.cfi_offset 14, -4
 5678 0002 84B0     		sub	sp, sp, #16
 5679              		.cfi_def_cfa_offset 24
 5680 0004 00AF     		add	r7, sp, #0
 5681              		.cfi_def_cfa_register 7
 5682 0006 0346     		mov	r3, r0
 5683 0008 FB71     		strb	r3, [r7, #7]
 5684 000a 0B46     		mov	r3, r1
 5685 000c BB71     		strb	r3, [r7, #6]
 5686 000e 1346     		mov	r3, r2
 5687 0010 7B71     		strb	r3, [r7, #5]
1774:main.c        ****     uint8 volatile status;
1775:main.c        ****     uint32_t timeout = 50000;
 5688              		.loc 1 1775 0
 5689 0012 4CF25033 		movw	r3, #50000
 5690 0016 FB60     		str	r3, [r7, #12]
1776:main.c        ****     uint8_t error = 0;
 5691              		.loc 1 1776 0
 5692 0018 0023     		movs	r3, #0
 5693 001a FB72     		strb	r3, [r7, #11]
1777:main.c        ****     status = I2C_1_MasterClearStatus();
 5694              		.loc 1 1777 0
 5695 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 5696 0020 0346     		mov	r3, r0
 5697 0022 BB72     		strb	r3, [r7, #10]
1778:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 5698              		.loc 1 1778 0
 5699 0024 BB7A     		ldrb	r3, [r7, #10]
 5700 0026 DBB2     		uxtb	r3, r3
 5701 0028 5BB2     		sxtb	r3, r3
 5702 002a 002B     		cmp	r3, #0
 5703 002c 3DDB     		blt	.L235
1779:main.c        ****     {
1780:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 5704              		.loc 1 1780 0
 5705 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5706 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5707 0032 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5708 0034 2749     		ldr	r1, .L243
 5709 0036 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 5710 003a 0346     		mov	r3, r0
 5711 003c BB72     		strb	r3, [r7, #10]
1781:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1782:main.c        ****                                     nbytes, mode); 
1783:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 5712              		.loc 1 1783 0
 5713 003e BB7A     		ldrb	r3, [r7, #10]
 5714 0040 DBB2     		uxtb	r3, r3
 5715 0042 002B     		cmp	r3, #0
 5716 0044 2BD1     		bne	.L236
 5717              	.L239:
1784:main.c        ****         {
1785:main.c        ****             /* wait for read complete and no error */
1786:main.c        ****             do
1787:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 134


1788:main.c        ****                 status = I2C_1_MasterStatus();
 5718              		.loc 1 1788 0
 5719 0046 FFF7FEFF 		bl	I2C_1_MasterStatus
 5720 004a 0346     		mov	r3, r0
 5721 004c BB72     		strb	r3, [r7, #10]
1789:main.c        ****                 timeout--;
 5722              		.loc 1 1789 0
 5723 004e FB68     		ldr	r3, [r7, #12]
 5724 0050 013B     		subs	r3, r3, #1
 5725 0052 FB60     		str	r3, [r7, #12]
1790:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 5726              		.loc 1 1790 0
 5727 0054 BB7A     		ldrb	r3, [r7, #10]
 5728 0056 DBB2     		uxtb	r3, r3
 5729 0058 802B     		cmp	r3, #128
 5730 005a 09D1     		bne	.L237
1791:main.c        ****                 {
1792:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 5731              		.loc 1 1792 0
 5732 005c 1E4B     		ldr	r3, .L243+4
 5733 005e 1022     		movs	r2, #16
 5734 0060 1A70     		strb	r2, [r3]
 5735 0062 1E4B     		ldr	r3, .L243+8
 5736 0064 0422     		movs	r2, #4
 5737 0066 1A70     		strb	r2, [r3]
1793:main.c        ****                     I2C_reset();
 5738              		.loc 1 1793 0
 5739 0068 FFF7FEFF 		bl	I2C_reset
1794:main.c        ****                     error = 1;
 5740              		.loc 1 1794 0
 5741 006c 0123     		movs	r3, #1
 5742 006e FB72     		strb	r3, [r7, #11]
 5743              	.L237:
1795:main.c        ****                 }
1796:main.c        ****                 if (timeout == 0)
 5744              		.loc 1 1796 0
 5745 0070 FB68     		ldr	r3, [r7, #12]
 5746 0072 002B     		cmp	r3, #0
 5747 0074 05D1     		bne	.L238
1797:main.c        ****                 {
1798:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5748              		.loc 1 1798 0
 5749 0076 8023     		movs	r3, #128
 5750 0078 BB72     		strb	r3, [r7, #10]
1799:main.c        ****                     I2C_reset();
 5751              		.loc 1 1799 0
 5752 007a FFF7FEFF 		bl	I2C_reset
1800:main.c        ****                     error = 1;
 5753              		.loc 1 1800 0
 5754 007e 0123     		movs	r3, #1
 5755 0080 FB72     		strb	r3, [r7, #11]
 5756              	.L238:
1801:main.c        ****                 }
1802:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 5757              		.loc 1 1802 0
 5758 0082 BB7A     		ldrb	r3, [r7, #10]
 5759 0084 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 135


 5760 0086 03F08103 		and	r3, r3, #129
 5761 008a 002B     		cmp	r3, #0
 5762 008c 0DD1     		bne	.L235
 5763              		.loc 1 1802 0 is_stmt 0 discriminator 1
 5764 008e BB7A     		ldrb	r3, [r7, #10]
 5765 0090 DBB2     		uxtb	r3, r3
 5766 0092 002B     		cmp	r3, #0
 5767 0094 09D0     		beq	.L235
 5768              		.loc 1 1802 0 discriminator 2
 5769 0096 FB68     		ldr	r3, [r7, #12]
 5770 0098 002B     		cmp	r3, #0
 5771 009a D4D1     		bne	.L239
 5772 009c 05E0     		b	.L235
 5773              	.L236:
1803:main.c        ****         }
1804:main.c        ****         else
1805:main.c        ****         {
1806:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1807:main.c        ****             *  I2CM_MasterStatus() error output */
1808:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 5774              		.loc 1 1808 0 is_stmt 1
 5775 009e 8023     		movs	r3, #128
 5776 00a0 BB72     		strb	r3, [r7, #10]
1809:main.c        ****             I2C_reset();
 5777              		.loc 1 1809 0
 5778 00a2 FFF7FEFF 		bl	I2C_reset
1810:main.c        ****             error = 1;
 5779              		.loc 1 1810 0
 5780 00a6 0123     		movs	r3, #1
 5781 00a8 FB72     		strb	r3, [r7, #11]
 5782              	.L235:
1811:main.c        ****         }
1812:main.c        ****     }
1813:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 5783              		.loc 1 1813 0
 5784 00aa BB7A     		ldrb	r3, [r7, #10]
 5785 00ac DBB2     		uxtb	r3, r3
 5786 00ae 03F02003 		and	r3, r3, #32
 5787 00b2 002B     		cmp	r3, #0
 5788 00b4 04D1     		bne	.L240
 5789              		.loc 1 1813 0 is_stmt 0 discriminator 1
 5790 00b6 BB7A     		ldrb	r3, [r7, #10]
 5791 00b8 DBB2     		uxtb	r3, r3
 5792 00ba 5BB2     		sxtb	r3, r3
 5793 00bc 002B     		cmp	r3, #0
 5794 00be 03DA     		bge	.L241
 5795              	.L240:
1814:main.c        ****     {
1815:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1816:main.c        ****         //i2c_skipped[main_counter] = 1;
1817:main.c        ****         I2C_reset();
 5796              		.loc 1 1817 0 is_stmt 1
 5797 00c0 FFF7FEFF 		bl	I2C_reset
1818:main.c        ****         error = 1;
 5798              		.loc 1 1818 0
 5799 00c4 0123     		movs	r3, #1
 5800 00c6 FB72     		strb	r3, [r7, #11]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 136


 5801              	.L241:
1819:main.c        ****     }
1820:main.c        ****     return error;
 5802              		.loc 1 1820 0
 5803 00c8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1821:main.c        **** }
 5804              		.loc 1 1821 0
 5805 00ca 1846     		mov	r0, r3
 5806 00cc 1037     		adds	r7, r7, #16
 5807              		.cfi_def_cfa_offset 8
 5808 00ce BD46     		mov	sp, r7
 5809              		.cfi_def_cfa_register 13
 5810              		@ sp needed
 5811 00d0 80BD     		pop	{r7, pc}
 5812              	.L244:
 5813 00d2 00BF     		.align	2
 5814              	.L243:
 5815 00d4 00000000 		.word	I2Cbuff2
 5816 00d8 D9490040 		.word	1073760729
 5817 00dc D7490040 		.word	1073760727
 5818              		.cfi_endproc
 5819              	.LFE79:
 5820              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 5821              		.section	.text.I2C_reset,"ax",%progbits
 5822              		.align	2
 5823              		.global	I2C_reset
 5824              		.thumb
 5825              		.thumb_func
 5826              		.type	I2C_reset, %function
 5827              	I2C_reset:
 5828              	.LFB80:
1822:main.c        **** 
1823:main.c        **** void I2C_reset(void)
1824:main.c        **** {
 5829              		.loc 1 1824 0
 5830              		.cfi_startproc
 5831              		@ args = 0, pretend = 0, frame = 0
 5832              		@ frame_needed = 1, uses_anonymous_args = 0
 5833 0000 80B5     		push	{r7, lr}
 5834              		.cfi_def_cfa_offset 8
 5835              		.cfi_offset 7, -8
 5836              		.cfi_offset 14, -4
 5837 0002 00AF     		add	r7, sp, #0
 5838              		.cfi_def_cfa_register 7
1825:main.c        ****   I2C_1_Stop();
 5839              		.loc 1 1825 0
 5840 0004 FFF7FEFF 		bl	I2C_1_Stop
1826:main.c        **** 
1827:main.c        ****   /* Disable/clear everything, then reinitialize. */
1828:main.c        **** 
1829:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 5841              		.loc 1 1829 0
 5842 0008 064B     		ldr	r3, .L246
 5843 000a 0022     		movs	r2, #0
 5844 000c 1A70     		strb	r2, [r3]
1830:main.c        **** 
1831:main.c        ****   I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 137


 5845              		.loc 1 1831 0
 5846 000e 064B     		ldr	r3, .L246+4
 5847 0010 0022     		movs	r2, #0
 5848 0012 1A70     		strb	r2, [r3]
1832:main.c        **** 
1833:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 5849              		.loc 1 1833 0
 5850 0014 054B     		ldr	r3, .L246+8
 5851 0016 0022     		movs	r2, #0
 5852 0018 1A70     		strb	r2, [r3]
1834:main.c        **** 
1835:main.c        ****   I2C_1_Start();
 5853              		.loc 1 1835 0
 5854 001a FFF7FEFF 		bl	I2C_1_Start
1836:main.c        **** }
 5855              		.loc 1 1836 0
 5856 001e 00BF     		nop
 5857 0020 80BD     		pop	{r7, pc}
 5858              	.L247:
 5859 0022 00BF     		.align	2
 5860              	.L246:
 5861 0024 D6490040 		.word	1073760726
 5862 0028 C8490040 		.word	1073760712
 5863 002c 00000000 		.word	I2C_1_initVar
 5864              		.cfi_endproc
 5865              	.LFE80:
 5866              		.size	I2C_reset, .-I2C_reset
 5867              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 5868              		.align	2
 5869              		.global	displayCurrentPresetNameAndCopedent
 5870              		.thumb
 5871              		.thumb_func
 5872              		.type	displayCurrentPresetNameAndCopedent, %function
 5873              	displayCurrentPresetNameAndCopedent:
 5874              	.LFB81:
1837:main.c        **** 
1838:main.c        **** void displayCurrentPresetNameAndCopedent()
1839:main.c        **** {
 5875              		.loc 1 1839 0
 5876              		.cfi_startproc
 5877              		@ args = 0, pretend = 0, frame = 0
 5878              		@ frame_needed = 1, uses_anonymous_args = 0
 5879 0000 98B5     		push	{r3, r4, r7, lr}
 5880              		.cfi_def_cfa_offset 16
 5881              		.cfi_offset 3, -16
 5882              		.cfi_offset 4, -12
 5883              		.cfi_offset 7, -8
 5884              		.cfi_offset 14, -4
 5885 0002 00AF     		add	r7, sp, #0
 5886              		.cfi_def_cfa_register 7
1840:main.c        ****     if (macroNamesArray[patchNum][7][0] != 255) //don't display if the name data still hasn't been 
 5887              		.loc 1 1840 0
 5888 0004 2E4B     		ldr	r3, .L251
 5889 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5890 0008 1946     		mov	r1, r3
 5891 000a 2E4A     		ldr	r2, .L251+4
 5892 000c 0B46     		mov	r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 138


 5893 000e DB00     		lsls	r3, r3, #3
 5894 0010 5B1A     		subs	r3, r3, r1
 5895 0012 1B01     		lsls	r3, r3, #4
 5896 0014 1344     		add	r3, r3, r2
 5897 0016 6233     		adds	r3, r3, #98
 5898 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5899 001a FF2B     		cmp	r3, #255
 5900 001c 4DD0     		beq	.L250
1841:main.c        ****     {
1842:main.c        ****         OLEDclear(128, 64);
 5901              		.loc 1 1842 0
 5902 001e 4021     		movs	r1, #64
 5903 0020 8020     		movs	r0, #128
 5904 0022 FFF7FEFF 		bl	OLEDclear
1843:main.c        ****         
1844:main.c        ****         myGFX_setFont(0);
 5905              		.loc 1 1844 0
 5906 0026 0020     		movs	r0, #0
 5907 0028 FFF7FEFF 		bl	myGFX_setFont
1845:main.c        ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 5908              		.loc 1 1845 0
 5909 002c 244B     		ldr	r3, .L251
 5910 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5911 0030 1846     		mov	r0, r3
 5912 0032 0023     		movs	r3, #0
 5913 0034 0022     		movs	r2, #0
 5914 0036 0221     		movs	r1, #2
 5915 0038 FFF7FEFF 		bl	OLEDwriteInt
1846:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1847:main.c        ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], NAME_CLIPPED_LENGTH, 0, SecondLine)
 5916              		.loc 1 1847 0
 5917 003c 204B     		ldr	r3, .L251
 5918 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5919 0040 1A46     		mov	r2, r3
 5920 0042 1346     		mov	r3, r2
 5921 0044 DB00     		lsls	r3, r3, #3
 5922 0046 9B1A     		subs	r3, r3, r2
 5923 0048 5B00     		lsls	r3, r3, #1
 5924 004a 1F4A     		ldr	r2, .L251+8
 5925 004c 9818     		adds	r0, r3, r2
 5926 004e 0123     		movs	r3, #1
 5927 0050 0022     		movs	r2, #0
 5928 0052 0B21     		movs	r1, #11
 5929 0054 FFF7FEFF 		bl	OLEDwriteString
1848:main.c        ****         OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 5930              		.loc 1 1848 0
 5931 0058 1C4B     		ldr	r3, .L251+12
 5932 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5933 005c 1846     		mov	r0, r3
 5934 005e 0323     		movs	r3, #3
 5935 0060 0022     		movs	r2, #0
 5936 0062 0221     		movs	r1, #2
 5937 0064 FFF7FEFF 		bl	OLEDwriteInt
1849:main.c        ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 5938              		.loc 1 1849 0
 5939 0068 FFF7FEFF 		bl	OLEDgetCursor
 5940 006c 0246     		mov	r2, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 139


 5941 006e 0323     		movs	r3, #3
 5942 0070 0121     		movs	r1, #1
 5943 0072 1748     		ldr	r0, .L251+16
 5944 0074 FFF7FEFF 		bl	OLEDwriteString
1850:main.c        ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 5945              		.loc 1 1850 0
 5946 0078 144B     		ldr	r3, .L251+12
 5947 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5948 007c 1A46     		mov	r2, r3
 5949 007e 1346     		mov	r3, r2
 5950 0080 DB00     		lsls	r3, r3, #3
 5951 0082 9B1A     		subs	r3, r3, r2
 5952 0084 5B00     		lsls	r3, r3, #1
 5953 0086 134A     		ldr	r2, .L251+20
 5954 0088 9C18     		adds	r4, r3, r2
 5955 008a FFF7FEFF 		bl	OLEDgetCursor
 5956 008e 0246     		mov	r2, r0
 5957 0090 0323     		movs	r3, #3
 5958 0092 0821     		movs	r1, #8
 5959 0094 2046     		mov	r0, r4
 5960 0096 FFF7FEFF 		bl	OLEDwriteString
1851:main.c        ****         mainOLEDWaitingToSend = 1;
 5961              		.loc 1 1851 0
 5962 009a 0F4B     		ldr	r3, .L251+24
 5963 009c 0122     		movs	r2, #1
 5964 009e 1A60     		str	r2, [r3]
1852:main.c        ****         presetAlreadyDisplayed[patchNum] = 1;
 5965              		.loc 1 1852 0
 5966 00a0 074B     		ldr	r3, .L251
 5967 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5968 00a4 1946     		mov	r1, r3
 5969 00a6 0D4B     		ldr	r3, .L251+28
 5970 00a8 0122     		movs	r2, #1
 5971 00aa 43F82120 		str	r2, [r3, r1, lsl #2]
1853:main.c        ****         //and update the macro OLED screens
1854:main.c        ****         whichMacro = 0;
 5972              		.loc 1 1854 0
 5973 00ae 0C4B     		ldr	r3, .L251+32
 5974 00b0 0022     		movs	r2, #0
 5975 00b2 1A70     		strb	r2, [r3]
1855:main.c        ****         macroOLEDWaitingToSend = 1;
 5976              		.loc 1 1855 0
 5977 00b4 0B4B     		ldr	r3, .L251+36
 5978 00b6 0122     		movs	r2, #1
 5979 00b8 1A60     		str	r2, [r3]
 5980              	.L250:
1856:main.c        ****     }
1857:main.c        **** }
 5981              		.loc 1 1857 0
 5982 00ba 00BF     		nop
 5983 00bc 98BD     		pop	{r3, r4, r7, pc}
 5984              	.L252:
 5985 00be 00BF     		.align	2
 5986              	.L251:
 5987 00c0 00000000 		.word	patchNum
 5988 00c4 00000000 		.word	macroNamesArray
 5989 00c8 00000000 		.word	presetNamesArray
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 140


 5990 00cc 00000000 		.word	currentCopedent
 5991 00d0 00040000 		.word	.LC0
 5992 00d4 00000000 		.word	copedentNamesArray
 5993 00d8 00000000 		.word	mainOLEDWaitingToSend
 5994 00dc 00000000 		.word	presetAlreadyDisplayed
 5995 00e0 00000000 		.word	whichMacro
 5996 00e4 00000000 		.word	macroOLEDWaitingToSend
 5997              		.cfi_endproc
 5998              	.LFE81:
 5999              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 6000              		.section	.text.checkUSB_Vbus,"ax",%progbits
 6001              		.align	2
 6002              		.global	checkUSB_Vbus
 6003              		.thumb
 6004              		.thumb_func
 6005              		.type	checkUSB_Vbus, %function
 6006              	checkUSB_Vbus:
 6007              	.LFB82:
1858:main.c        ****     
1859:main.c        **** void checkUSB_Vbus(void)
1860:main.c        **** {
 6008              		.loc 1 1860 0
 6009              		.cfi_startproc
 6010              		@ args = 0, pretend = 0, frame = 0
 6011              		@ frame_needed = 1, uses_anonymous_args = 0
 6012 0000 80B5     		push	{r7, lr}
 6013              		.cfi_def_cfa_offset 8
 6014              		.cfi_offset 7, -8
 6015              		.cfi_offset 14, -4
 6016 0002 00AF     		add	r7, sp, #0
 6017              		.cfi_def_cfa_register 7
1861:main.c        ****    if (USB_VBusPresent() == 0)
 6018              		.loc 1 1861 0
 6019 0004 FFF7FEFF 		bl	USB_VBusPresent
 6020 0008 0346     		mov	r3, r0
 6021 000a 002B     		cmp	r3, #0
 6022 000c 05D1     		bne	.L254
1862:main.c        ****    {
1863:main.c        ****        USB_Stop();
 6023              		.loc 1 1863 0
 6024 000e FFF7FEFF 		bl	USB_Stop
1864:main.c        ****        USB_active = 0; 
 6025              		.loc 1 1864 0
 6026 0012 0E4B     		ldr	r3, .L257
 6027 0014 0022     		movs	r2, #0
 6028 0016 1A70     		strb	r2, [r3]
 6029 0018 13E0     		b	.L255
 6030              	.L254:
1865:main.c        ****    }
1866:main.c        ****    else if (USB_active == 0 )
 6031              		.loc 1 1866 0
 6032 001a 0C4B     		ldr	r3, .L257
 6033 001c 1B78     		ldrb	r3, [r3]
 6034 001e DBB2     		uxtb	r3, r3
 6035 0020 002B     		cmp	r3, #0
 6036 0022 0ED1     		bne	.L255
1867:main.c        ****    {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 141


1868:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 6037              		.loc 1 1868 0
 6038 0024 0021     		movs	r1, #0
 6039 0026 0020     		movs	r0, #0
 6040 0028 FFF7FEFF 		bl	USB_Start
1869:main.c        ****         while (0u == USB_GetConfiguration());
 6041              		.loc 1 1869 0
 6042 002c 00BF     		nop
 6043              	.L256:
 6044              		.loc 1 1869 0 is_stmt 0 discriminator 1
 6045 002e FFF7FEFF 		bl	USB_GetConfiguration
 6046 0032 0346     		mov	r3, r0
 6047 0034 002B     		cmp	r3, #0
 6048 0036 FAD0     		beq	.L256
1870:main.c        ****         USB_MIDI_EP_Init();
 6049              		.loc 1 1870 0 is_stmt 1
 6050 0038 FFF7FEFF 		bl	USB_MIDI_Init
1871:main.c        ****        USB_active = 1;
 6051              		.loc 1 1871 0
 6052 003c 034B     		ldr	r3, .L257
 6053 003e 0122     		movs	r2, #1
 6054 0040 1A70     		strb	r2, [r3]
 6055              	.L255:
1872:main.c        ****    }
1873:main.c        ****    USB_check_flag = 0;
 6056              		.loc 1 1873 0
 6057 0042 034B     		ldr	r3, .L257+4
 6058 0044 0022     		movs	r2, #0
 6059 0046 1A70     		strb	r2, [r3]
1874:main.c        **** }
 6060              		.loc 1 1874 0
 6061 0048 00BF     		nop
 6062 004a 80BD     		pop	{r7, pc}
 6063              	.L258:
 6064              		.align	2
 6065              	.L257:
 6066 004c 00000000 		.word	USB_active
 6067 0050 00000000 		.word	USB_check_flag
 6068              		.cfi_endproc
 6069              	.LFE82:
 6070              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 6071              		.section	.text.USB_service,"ax",%progbits
 6072              		.align	2
 6073              		.global	USB_service
 6074              		.thumb
 6075              		.thumb_func
 6076              		.type	USB_service, %function
 6077              	USB_service:
 6078              	.LFB83:
1875:main.c        **** 
1876:main.c        **** 
1877:main.c        **** 
1878:main.c        **** void USB_service(void)
1879:main.c        **** {
 6079              		.loc 1 1879 0
 6080              		.cfi_startproc
 6081              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 142


 6082              		@ frame_needed = 1, uses_anonymous_args = 0
 6083 0000 80B5     		push	{r7, lr}
 6084              		.cfi_def_cfa_offset 8
 6085              		.cfi_offset 7, -8
 6086              		.cfi_offset 14, -4
 6087 0002 00AF     		add	r7, sp, #0
 6088              		.cfi_def_cfa_register 7
1880:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 6089              		.loc 1 1880 0
 6090 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 6091 0008 0346     		mov	r3, r0
 6092 000a 002B     		cmp	r3, #0
 6093 000c 10D0     		beq	.L260
1881:main.c        ****     {
1882:main.c        ****         if(USB_GetConfiguration() != 0u)   
 6094              		.loc 1 1882 0
 6095 000e FFF7FEFF 		bl	USB_GetConfiguration
 6096 0012 0346     		mov	r3, r0
 6097 0014 002B     		cmp	r3, #0
 6098 0016 0BD0     		beq	.L260
1883:main.c        ****         {
1884:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1885:main.c        ****             
1886:main.c        ****             //SleepTimer_Start();
1887:main.c        ****         	
1888:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 6099              		.loc 1 1888 0
 6100 0018 244B     		ldr	r3, .L266
 6101 001a 1B78     		ldrb	r3, [r3]
 6102 001c DBB2     		uxtb	r3, r3
 6103 001e 002B     		cmp	r3, #0
 6104 0020 06D0     		beq	.L260
 6105              		.loc 1 1888 0 is_stmt 0 discriminator 1
 6106 0022 FFF7FEFF 		bl	USB_VBusPresent
 6107 0026 0346     		mov	r3, r0
 6108 0028 002B     		cmp	r3, #0
 6109 002a 01D0     		beq	.L260
1889:main.c        ****             {
1890:main.c        ****                 USB_MIDI_EP_Init();
 6110              		.loc 1 1890 0 is_stmt 1
 6111 002c FFF7FEFF 		bl	USB_MIDI_Init
 6112              	.L260:
1891:main.c        ****             }
1892:main.c        ****         }
1893:main.c        ****         else
1894:main.c        ****         {
1895:main.c        ****             //SleepTimer_Stop();
1896:main.c        ****         }    
1897:main.c        ****     }        
1898:main.c        ****     
1899:main.c        ****     if(USB_GetConfiguration() != 0u)    
 6113              		.loc 1 1899 0
 6114 0030 FFF7FEFF 		bl	USB_GetConfiguration
 6115 0034 0346     		mov	r3, r0
 6116 0036 002B     		cmp	r3, #0
 6117 0038 35D0     		beq	.L265
1900:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 143


1901:main.c        **** 
1902:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1903:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 6118              		.loc 1 1903 0
 6119 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 6120 003e 0346     		mov	r3, r0
 6121 0040 002B     		cmp	r3, #0
 6122 0042 18D0     		beq	.L263
1904:main.c        ****         {
1905:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 6123              		.loc 1 1905 0
 6124 0044 1A4B     		ldr	r3, .L266+4
 6125 0046 1B78     		ldrb	r3, [r3]
 6126 0048 D8B2     		uxtb	r0, r3
 6127 004a 1A4B     		ldr	r3, .L266+8
 6128 004c 1B78     		ldrb	r3, [r3]
 6129 004e DBB2     		uxtb	r3, r3
 6130 0050 9BB2     		uxth	r3, r3
 6131 0052 1A46     		mov	r2, r3
 6132 0054 1849     		ldr	r1, .L266+12
 6133 0056 FFF7FEFF 		bl	USB_LoadInEP
1906:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1907:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 6134              		.loc 1 1907 0
 6135 005a 184B     		ldr	r3, .L266+16
 6136 005c 1B78     		ldrb	r3, [r3]
 6137 005e DBB2     		uxtb	r3, r3
 6138 0060 4022     		movs	r2, #64
 6139 0062 1749     		ldr	r1, .L266+20
 6140 0064 1846     		mov	r0, r3
 6141 0066 FFF7FEFF 		bl	USB_ReadOutEP
1908:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1909:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1910:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 6142              		.loc 1 1910 0
 6143 006a 144B     		ldr	r3, .L266+16
 6144 006c 1B78     		ldrb	r3, [r3]
 6145 006e DBB2     		uxtb	r3, r3
 6146 0070 1846     		mov	r0, r3
 6147 0072 FFF7FEFF 		bl	USB_EnableOutEP
 6148              	.L263:
1911:main.c        ****         }
1912:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6149              		.loc 1 1912 0
 6150 0076 0D4B     		ldr	r3, .L266
 6151 0078 1B78     		ldrb	r3, [r3]
 6152 007a DBB2     		uxtb	r3, r3
 6153 007c 002B     		cmp	r3, #0
 6154 007e 06D0     		beq	.L264
 6155              		.loc 1 1912 0 is_stmt 0 discriminator 1
 6156 0080 FFF7FEFF 		bl	USB_VBusPresent
 6157 0084 0346     		mov	r3, r0
 6158 0086 002B     		cmp	r3, #0
 6159 0088 01D0     		beq	.L264
1913:main.c        ****         {
1914:main.c        ****             USB_MIDI_IN_Service();
 6160              		.loc 1 1914 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 144


 6161 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 6162              	.L264:
1915:main.c        ****         }
1916:main.c        **** 
1917:main.c        **** 
1918:main.c        **** 
1919:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6163              		.loc 1 1919 0
 6164 008e 074B     		ldr	r3, .L266
 6165 0090 1B78     		ldrb	r3, [r3]
 6166 0092 DBB2     		uxtb	r3, r3
 6167 0094 002B     		cmp	r3, #0
 6168 0096 06D0     		beq	.L265
 6169              		.loc 1 1919 0 is_stmt 0 discriminator 1
 6170 0098 FFF7FEFF 		bl	USB_VBusPresent
 6171 009c 0346     		mov	r3, r0
 6172 009e 002B     		cmp	r3, #0
 6173 00a0 01D0     		beq	.L265
1920:main.c        ****         {
1921:main.c        ****             USB_MIDI_OUT_Service();
 6174              		.loc 1 1921 0 is_stmt 1
 6175 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 6176              	.L265:
1922:main.c        ****         }
1923:main.c        ****     }
1924:main.c        ****         
1925:main.c        **** }
 6177              		.loc 1 1925 0
 6178 00a6 00BF     		nop
 6179 00a8 80BD     		pop	{r7, pc}
 6180              	.L267:
 6181 00aa 00BF     		.align	2
 6182              	.L266:
 6183 00ac 00000000 		.word	USB_active
 6184 00b0 00000000 		.word	USB_midi_in_ep
 6185 00b4 00000000 		.word	USB_midiInPointer
 6186 00b8 00000000 		.word	USB_midiInBuffer
 6187 00bc 00000000 		.word	USB_midi_out_ep
 6188 00c0 00000000 		.word	USB_midiOutBuffer
 6189              		.cfi_endproc
 6190              	.LFE83:
 6191              		.size	USB_service, .-USB_service
 6192              		.section	.text.log2f_approx,"ax",%progbits
 6193              		.align	2
 6194              		.global	log2f_approx
 6195              		.thumb
 6196              		.thumb_func
 6197              		.type	log2f_approx, %function
 6198              	log2f_approx:
 6199              	.LFB84:
1926:main.c        **** 
1927:main.c        **** // This is a fast approximation to log2()
1928:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1929:main.c        **** float log2f_approx(float X) {
 6200              		.loc 1 1929 0
 6201              		.cfi_startproc
 6202              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 145


 6203              		@ frame_needed = 1, uses_anonymous_args = 0
 6204 0000 80B5     		push	{r7, lr}
 6205              		.cfi_def_cfa_offset 8
 6206              		.cfi_offset 7, -8
 6207              		.cfi_offset 14, -4
 6208 0002 86B0     		sub	sp, sp, #24
 6209              		.cfi_def_cfa_offset 32
 6210 0004 00AF     		add	r7, sp, #0
 6211              		.cfi_def_cfa_register 7
 6212 0006 7860     		str	r0, [r7, #4]	@ float
1930:main.c        ****   float Y, F;
1931:main.c        ****   int E;
1932:main.c        ****   F = frexpf(fabsf(X), &E);
 6213              		.loc 1 1932 0
 6214 0008 7B68     		ldr	r3, [r7, #4]
 6215 000a 23F00043 		bic	r3, r3, #-2147483648
 6216 000e 07F10C02 		add	r2, r7, #12
 6217 0012 1146     		mov	r1, r2
 6218 0014 1846     		mov	r0, r3
 6219 0016 FFF7FEFF 		bl	frexpf
 6220 001a 7861     		str	r0, [r7, #20]	@ float
1933:main.c        ****   Y = 1.23149591368684f;
 6221              		.loc 1 1933 0
 6222 001c 1A4B     		ldr	r3, .L270
 6223 001e 3B61     		str	r3, [r7, #16]	@ float
1934:main.c        ****   Y *= F;
 6224              		.loc 1 1934 0
 6225 0020 7969     		ldr	r1, [r7, #20]	@ float
 6226 0022 3869     		ldr	r0, [r7, #16]	@ float
 6227 0024 FFF7FEFF 		bl	__aeabi_fmul
 6228 0028 0346     		mov	r3, r0
 6229 002a 3B61     		str	r3, [r7, #16]	@ float
1935:main.c        ****   Y += -4.11852516267426f;
 6230              		.loc 1 1935 0
 6231 002c 1749     		ldr	r1, .L270+4
 6232 002e 3869     		ldr	r0, [r7, #16]	@ float
 6233 0030 FFF7FEFF 		bl	__aeabi_fsub
 6234 0034 0346     		mov	r3, r0
 6235 0036 3B61     		str	r3, [r7, #16]	@ float
1936:main.c        ****   Y *= F;
 6236              		.loc 1 1936 0
 6237 0038 7969     		ldr	r1, [r7, #20]	@ float
 6238 003a 3869     		ldr	r0, [r7, #16]	@ float
 6239 003c FFF7FEFF 		bl	__aeabi_fmul
 6240 0040 0346     		mov	r3, r0
 6241 0042 3B61     		str	r3, [r7, #16]	@ float
1937:main.c        ****   Y += 6.02197014179219f;
 6242              		.loc 1 1937 0
 6243 0044 1249     		ldr	r1, .L270+8
 6244 0046 3869     		ldr	r0, [r7, #16]	@ float
 6245 0048 FFF7FEFF 		bl	__aeabi_fadd
 6246 004c 0346     		mov	r3, r0
 6247 004e 3B61     		str	r3, [r7, #16]	@ float
1938:main.c        ****   Y *= F;
 6248              		.loc 1 1938 0
 6249 0050 7969     		ldr	r1, [r7, #20]	@ float
 6250 0052 3869     		ldr	r0, [r7, #16]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 146


 6251 0054 FFF7FEFF 		bl	__aeabi_fmul
 6252 0058 0346     		mov	r3, r0
 6253 005a 3B61     		str	r3, [r7, #16]	@ float
1939:main.c        ****   Y += -3.13396450166353f;
 6254              		.loc 1 1939 0
 6255 005c 0D49     		ldr	r1, .L270+12
 6256 005e 3869     		ldr	r0, [r7, #16]	@ float
 6257 0060 FFF7FEFF 		bl	__aeabi_fsub
 6258 0064 0346     		mov	r3, r0
 6259 0066 3B61     		str	r3, [r7, #16]	@ float
1940:main.c        ****   Y += E;
 6260              		.loc 1 1940 0
 6261 0068 FB68     		ldr	r3, [r7, #12]
 6262 006a 1846     		mov	r0, r3
 6263 006c FFF7FEFF 		bl	__aeabi_i2f
 6264 0070 0346     		mov	r3, r0
 6265 0072 1946     		mov	r1, r3
 6266 0074 3869     		ldr	r0, [r7, #16]	@ float
 6267 0076 FFF7FEFF 		bl	__aeabi_fadd
 6268 007a 0346     		mov	r3, r0
 6269 007c 3B61     		str	r3, [r7, #16]	@ float
1941:main.c        ****   return(Y);
 6270              		.loc 1 1941 0
 6271 007e 3B69     		ldr	r3, [r7, #16]	@ float
1942:main.c        **** }
 6272              		.loc 1 1942 0
 6273 0080 1846     		mov	r0, r3
 6274 0082 1837     		adds	r7, r7, #24
 6275              		.cfi_def_cfa_offset 8
 6276 0084 BD46     		mov	sp, r7
 6277              		.cfi_def_cfa_register 13
 6278              		@ sp needed
 6279 0086 80BD     		pop	{r7, pc}
 6280              	.L271:
 6281              		.align	2
 6282              	.L270:
 6283 0088 A8A19D3F 		.word	1067295144
 6284 008c F5CA8340 		.word	1082378997
 6285 0090 FBB3C040 		.word	1086370811
 6286 0094 E0924840 		.word	1078498016
 6287              		.cfi_endproc
 6288              	.LFE84:
 6289              		.size	log2f_approx, .-log2f_approx
 6290              		.global	prevNotes
 6291              		.bss
 6292              		.align	2
 6293              		.type	prevNotes, %object
 6294              		.size	prevNotes, 48
 6295              	prevNotes:
 6296 00c8 00000000 		.space	48
 6296      00000000 
 6296      00000000 
 6296      00000000 
 6296      00000000 
 6297              		.section	.text.noteEvent,"ax",%progbits
 6298              		.align	2
 6299              		.global	noteEvent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 147


 6300              		.thumb
 6301              		.thumb_func
 6302              		.type	noteEvent, %function
 6303              	noteEvent:
 6304              	.LFB85:
1943:main.c        **** 
1944:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
1945:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
1946:main.c        **** 
1947:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1948:main.c        **** 
1949:main.c        **** void noteEvent(int string)
1950:main.c        **** {
 6305              		.loc 1 1950 0
 6306              		.cfi_startproc
 6307              		@ args = 0, pretend = 0, frame = 24
 6308              		@ frame_needed = 1, uses_anonymous_args = 0
 6309 0000 80B5     		push	{r7, lr}
 6310              		.cfi_def_cfa_offset 8
 6311              		.cfi_offset 7, -8
 6312              		.cfi_offset 14, -4
 6313 0002 86B0     		sub	sp, sp, #24
 6314              		.cfi_def_cfa_offset 32
 6315 0004 00AF     		add	r7, sp, #0
 6316              		.cfi_def_cfa_register 7
 6317 0006 7860     		str	r0, [r7, #4]
1951:main.c        ****     
1952:main.c        ****     /*
1953:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1954:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1955:main.c        ****     int vInt  = (int) (v*4.0f);
1956:main.c        ****     if (vInt > 127)
1957:main.c        ****     {
1958:main.c        ****         vInt = 127;
1959:main.c        ****     }
1960:main.c        ****     */
1961:main.c        ****     uint16_t velocity = strings[string];
 6318              		.loc 1 1961 0
 6319 0008 2C4A     		ldr	r2, .L277
 6320 000a 7B68     		ldr	r3, [r7, #4]
 6321 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 6322 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1962:main.c        ****     if (velocity > 0)
 6323              		.loc 1 1962 0
 6324 0012 FB8A     		ldrh	r3, [r7, #22]
 6325 0014 002B     		cmp	r3, #0
 6326 0016 43D0     		beq	.L273
 6327              	.LBB38:
1963:main.c        ****     {
1964:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1965:main.c        ****         float tempVel = (float)velocity;
 6328              		.loc 1 1965 0
 6329 0018 FB8A     		ldrh	r3, [r7, #22]
 6330 001a 1846     		mov	r0, r3
 6331 001c FFF7FEFF 		bl	__aeabi_ui2f
 6332 0020 0346     		mov	r3, r0
 6333 0022 3B61     		str	r3, [r7, #16]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 148


1966:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 6334              		.loc 1 1966 0
 6335 0024 4FF05E51 		mov	r1, #931135488
 6336 0028 3869     		ldr	r0, [r7, #16]	@ float
 6337 002a FFF7FEFF 		bl	__aeabi_fmul
 6338 002e 0346     		mov	r3, r0
 6339 0030 3B61     		str	r3, [r7, #16]	@ float
1967:main.c        ****         tempVel = sqrtf(tempVel);
 6340              		.loc 1 1967 0
 6341 0032 3869     		ldr	r0, [r7, #16]	@ float
 6342 0034 FFF7FEFF 		bl	sqrtf
 6343 0038 3861     		str	r0, [r7, #16]	@ float
1968:main.c        ****         tempVel = tempVel - 0.0239372430f;
 6344              		.loc 1 1968 0
 6345 003a 2149     		ldr	r1, .L277+4
 6346 003c 3869     		ldr	r0, [r7, #16]	@ float
 6347 003e FFF7FEFF 		bl	__aeabi_fsub
 6348 0042 0346     		mov	r3, r0
 6349 0044 3B61     		str	r3, [r7, #16]	@ float
1969:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 6350              		.loc 1 1969 0
 6351 0046 1F49     		ldr	r1, .L277+8
 6352 0048 3869     		ldr	r0, [r7, #16]	@ float
 6353 004a FFF7FEFF 		bl	__aeabi_fmul
 6354 004e 0346     		mov	r3, r0
 6355 0050 3B61     		str	r3, [r7, #16]	@ float
1970:main.c        ****         velocity = (int)tempVel;
 6356              		.loc 1 1970 0
 6357 0052 3869     		ldr	r0, [r7, #16]	@ float
 6358 0054 FFF7FEFF 		bl	__aeabi_f2iz
 6359 0058 0346     		mov	r3, r0
 6360 005a FB82     		strh	r3, [r7, #22]	@ movhi
1971:main.c        ****         
1972:main.c        **** 
1973:main.c        ****         if (velocity > 127)
 6361              		.loc 1 1973 0
 6362 005c FB8A     		ldrh	r3, [r7, #22]
 6363 005e 7F2B     		cmp	r3, #127
 6364 0060 01D9     		bls	.L274
1974:main.c        ****         {
1975:main.c        ****             velocity = 127;
 6365              		.loc 1 1975 0
 6366 0062 7F23     		movs	r3, #127
 6367 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 6368              	.L274:
1976:main.c        ****         }
1977:main.c        ****         
1978:main.c        ****         //only update octave on note-ons
1979:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1980:main.c        ****         int noteToSend = ((octave - 4) * 12) + openStringMIDI_Int[string];
 6369              		.loc 1 1980 0
 6370 0066 184B     		ldr	r3, .L277+12
 6371 0068 1B68     		ldr	r3, [r3]
 6372 006a 1A1F     		subs	r2, r3, #4
 6373 006c 1346     		mov	r3, r2
 6374 006e 5B00     		lsls	r3, r3, #1
 6375 0070 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 149


 6376 0072 9B00     		lsls	r3, r3, #2
 6377 0074 1946     		mov	r1, r3
 6378 0076 154A     		ldr	r2, .L277+16
 6379 0078 7B68     		ldr	r3, [r7, #4]
 6380 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6381 007e 0B44     		add	r3, r3, r1
 6382 0080 FB60     		str	r3, [r7, #12]
1981:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 6383              		.loc 1 1981 0
 6384 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6385 0084 DBB2     		uxtb	r3, r3
 6386 0086 1946     		mov	r1, r3
 6387 0088 7B68     		ldr	r3, [r7, #4]
 6388 008a 0133     		adds	r3, r3, #1
 6389 008c 1A46     		mov	r2, r3
 6390 008e F868     		ldr	r0, [r7, #12]
 6391 0090 FFF7FEFF 		bl	sendMIDINoteOn
1982:main.c        ****         prevNotes[string] = noteToSend;
 6392              		.loc 1 1982 0
 6393 0094 0E49     		ldr	r1, .L277+20
 6394 0096 7B68     		ldr	r3, [r7, #4]
 6395 0098 FA68     		ldr	r2, [r7, #12]
 6396 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 6397              	.LBE38:
1983:main.c        ****             
1984:main.c        ****     }
1985:main.c        ****     else
1986:main.c        ****     {
1987:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1988:main.c        ****     }
1989:main.c        **** 
1990:main.c        **** }
 6398              		.loc 1 1990 0
 6399 009e 09E0     		b	.L276
 6400              	.L273:
1987:main.c        ****     }
 6401              		.loc 1 1987 0
 6402 00a0 0B4A     		ldr	r2, .L277+20
 6403 00a2 7B68     		ldr	r3, [r7, #4]
 6404 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 6405 00a8 7B68     		ldr	r3, [r7, #4]
 6406 00aa 0133     		adds	r3, r3, #1
 6407 00ac 1A46     		mov	r2, r3
 6408 00ae 0021     		movs	r1, #0
 6409 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 6410              	.L276:
 6411              		.loc 1 1990 0
 6412 00b4 00BF     		nop
 6413 00b6 1837     		adds	r7, r7, #24
 6414              		.cfi_def_cfa_offset 8
 6415 00b8 BD46     		mov	sp, r7
 6416              		.cfi_def_cfa_register 13
 6417              		@ sp needed
 6418 00ba 80BD     		pop	{r7, pc}
 6419              	.L278:
 6420              		.align	2
 6421              	.L277:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 150


 6422 00bc 00000000 		.word	strings
 6423 00c0 0918C43C 		.word	1019484169
 6424 00c4 551D0243 		.word	1124212053
 6425 00c8 00000000 		.word	octave
 6426 00cc 00000000 		.word	openStringMIDI_Int
 6427 00d0 00000000 		.word	prevNotes
 6428              		.cfi_endproc
 6429              	.LFE85:
 6430              		.size	noteEvent, .-noteEvent
 6431              		.section	.text.CCEvent,"ax",%progbits
 6432              		.align	2
 6433              		.global	CCEvent
 6434              		.thumb
 6435              		.thumb_func
 6436              		.type	CCEvent, %function
 6437              	CCEvent:
 6438              	.LFB86:
1991:main.c        **** 
1992:main.c        **** void CCEvent(int cc, int val)
1993:main.c        **** {
 6439              		.loc 1 1993 0
 6440              		.cfi_startproc
 6441              		@ args = 0, pretend = 0, frame = 8
 6442              		@ frame_needed = 1, uses_anonymous_args = 0
 6443 0000 80B5     		push	{r7, lr}
 6444              		.cfi_def_cfa_offset 8
 6445              		.cfi_offset 7, -8
 6446              		.cfi_offset 14, -4
 6447 0002 82B0     		sub	sp, sp, #8
 6448              		.cfi_def_cfa_offset 16
 6449 0004 00AF     		add	r7, sp, #0
 6450              		.cfi_def_cfa_register 7
 6451 0006 7860     		str	r0, [r7, #4]
 6452 0008 3960     		str	r1, [r7]
1994:main.c        ****     
1995:main.c        ****     sendMIDIControlChange(cc, val, 0);
 6453              		.loc 1 1995 0
 6454 000a 0022     		movs	r2, #0
 6455 000c 3968     		ldr	r1, [r7]
 6456 000e 7868     		ldr	r0, [r7, #4]
 6457 0010 FFF7FEFF 		bl	sendMIDIControlChange
1996:main.c        **** }
 6458              		.loc 1 1996 0
 6459 0014 00BF     		nop
 6460 0016 0837     		adds	r7, r7, #8
 6461              		.cfi_def_cfa_offset 8
 6462 0018 BD46     		mov	sp, r7
 6463              		.cfi_def_cfa_register 13
 6464              		@ sp needed
 6465 001a 80BD     		pop	{r7, pc}
 6466              		.cfi_endproc
 6467              	.LFE86:
 6468              		.size	CCEvent, .-CCEvent
 6469              		.section	.text.sendMIDINoteOn,"ax",%progbits
 6470              		.align	2
 6471              		.global	sendMIDINoteOn
 6472              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 151


 6473              		.thumb_func
 6474              		.type	sendMIDINoteOn, %function
 6475              	sendMIDINoteOn:
 6476              	.LFB87:
1997:main.c        **** 
1998:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1999:main.c        **** {  
 6477              		.loc 1 1999 0
 6478              		.cfi_startproc
 6479              		@ args = 0, pretend = 0, frame = 16
 6480              		@ frame_needed = 1, uses_anonymous_args = 0
 6481 0000 80B5     		push	{r7, lr}
 6482              		.cfi_def_cfa_offset 8
 6483              		.cfi_offset 7, -8
 6484              		.cfi_offset 14, -4
 6485 0002 84B0     		sub	sp, sp, #16
 6486              		.cfi_def_cfa_offset 24
 6487 0004 00AF     		add	r7, sp, #0
 6488              		.cfi_def_cfa_register 7
 6489 0006 F860     		str	r0, [r7, #12]
 6490 0008 B960     		str	r1, [r7, #8]
 6491 000a 7A60     		str	r2, [r7, #4]
2000:main.c        ****    
2001:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 6492              		.loc 1 2001 0
 6493 000c 7B68     		ldr	r3, [r7, #4]
 6494 000e DBB2     		uxtb	r3, r3
 6495 0010 703B     		subs	r3, r3, #112
 6496 0012 DAB2     		uxtb	r2, r3
 6497 0014 114B     		ldr	r3, .L282
 6498 0016 1A70     		strb	r2, [r3]
2002:main.c        ****     midiMsg[1] = MIDInoteNum;
 6499              		.loc 1 2002 0
 6500 0018 FB68     		ldr	r3, [r7, #12]
 6501 001a DAB2     		uxtb	r2, r3
 6502 001c 0F4B     		ldr	r3, .L282
 6503 001e 5A70     		strb	r2, [r3, #1]
2003:main.c        ****     midiMsg[2] = velocity;	
 6504              		.loc 1 2003 0
 6505 0020 BB68     		ldr	r3, [r7, #8]
 6506 0022 DAB2     		uxtb	r2, r3
 6507 0024 0D4B     		ldr	r3, .L282
 6508 0026 9A70     		strb	r2, [r3, #2]
2004:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6509              		.loc 1 2004 0
 6510 0028 0D4B     		ldr	r3, .L282+4
 6511 002a 1B78     		ldrb	r3, [r3]
 6512 002c DBB2     		uxtb	r3, r3
 6513 002e 002B     		cmp	r3, #0
 6514 0030 09D0     		beq	.L281
 6515              		.loc 1 2004 0 is_stmt 0 discriminator 1
 6516 0032 FFF7FEFF 		bl	USB_VBusPresent
 6517 0036 0346     		mov	r3, r0
 6518 0038 002B     		cmp	r3, #0
 6519 003a 04D0     		beq	.L281
2005:main.c        ****     {
2006:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 152


 6520              		.loc 1 2006 0 is_stmt 1
 6521 003c 0022     		movs	r2, #0
 6522 003e 0749     		ldr	r1, .L282
 6523 0040 0320     		movs	r0, #3
 6524 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6525              	.L281:
2007:main.c        ****     } 
2008:main.c        ****     midiSent += 4;
 6526              		.loc 1 2008 0
 6527 0046 074B     		ldr	r3, .L282+8
 6528 0048 1B88     		ldrh	r3, [r3]
 6529 004a 0433     		adds	r3, r3, #4
 6530 004c 9AB2     		uxth	r2, r3
 6531 004e 054B     		ldr	r3, .L282+8
 6532 0050 1A80     		strh	r2, [r3]	@ movhi
2009:main.c        **** }
 6533              		.loc 1 2009 0
 6534 0052 00BF     		nop
 6535 0054 1037     		adds	r7, r7, #16
 6536              		.cfi_def_cfa_offset 8
 6537 0056 BD46     		mov	sp, r7
 6538              		.cfi_def_cfa_register 13
 6539              		@ sp needed
 6540 0058 80BD     		pop	{r7, pc}
 6541              	.L283:
 6542 005a 00BF     		.align	2
 6543              	.L282:
 6544 005c 00000000 		.word	midiMsg
 6545 0060 00000000 		.word	USB_active
 6546 0064 00000000 		.word	midiSent
 6547              		.cfi_endproc
 6548              	.LFE87:
 6549              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 6550              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 6551              		.align	2
 6552              		.global	sendMIDIPolyKeyPressure
 6553              		.thumb
 6554              		.thumb_func
 6555              		.type	sendMIDIPolyKeyPressure, %function
 6556              	sendMIDIPolyKeyPressure:
 6557              	.LFB88:
2010:main.c        **** 
2011:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
2012:main.c        **** {
 6558              		.loc 1 2012 0
 6559              		.cfi_startproc
 6560              		@ args = 0, pretend = 0, frame = 16
 6561              		@ frame_needed = 1, uses_anonymous_args = 0
 6562 0000 80B5     		push	{r7, lr}
 6563              		.cfi_def_cfa_offset 8
 6564              		.cfi_offset 7, -8
 6565              		.cfi_offset 14, -4
 6566 0002 84B0     		sub	sp, sp, #16
 6567              		.cfi_def_cfa_offset 24
 6568 0004 00AF     		add	r7, sp, #0
 6569              		.cfi_def_cfa_register 7
 6570 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 153


 6571 0008 B960     		str	r1, [r7, #8]
 6572 000a 7A60     		str	r2, [r7, #4]
2013:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 6573              		.loc 1 2013 0
 6574 000c 7B68     		ldr	r3, [r7, #4]
 6575 000e DBB2     		uxtb	r3, r3
 6576 0010 603B     		subs	r3, r3, #96
 6577 0012 DAB2     		uxtb	r2, r3
 6578 0014 114B     		ldr	r3, .L286
 6579 0016 1A70     		strb	r2, [r3]
2014:main.c        ****     midiMsg[1] = MIDInoteNum;
 6580              		.loc 1 2014 0
 6581 0018 FB68     		ldr	r3, [r7, #12]
 6582 001a DAB2     		uxtb	r2, r3
 6583 001c 0F4B     		ldr	r3, .L286
 6584 001e 5A70     		strb	r2, [r3, #1]
2015:main.c        ****     midiMsg[2] = pressure;		
 6585              		.loc 1 2015 0
 6586 0020 BB68     		ldr	r3, [r7, #8]
 6587 0022 DAB2     		uxtb	r2, r3
 6588 0024 0D4B     		ldr	r3, .L286
 6589 0026 9A70     		strb	r2, [r3, #2]
2016:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6590              		.loc 1 2016 0
 6591 0028 0D4B     		ldr	r3, .L286+4
 6592 002a 1B78     		ldrb	r3, [r3]
 6593 002c DBB2     		uxtb	r3, r3
 6594 002e 002B     		cmp	r3, #0
 6595 0030 09D0     		beq	.L285
 6596              		.loc 1 2016 0 is_stmt 0 discriminator 1
 6597 0032 FFF7FEFF 		bl	USB_VBusPresent
 6598 0036 0346     		mov	r3, r0
 6599 0038 002B     		cmp	r3, #0
 6600 003a 04D0     		beq	.L285
2017:main.c        ****     {
2018:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6601              		.loc 1 2018 0 is_stmt 1
 6602 003c 0022     		movs	r2, #0
 6603 003e 0749     		ldr	r1, .L286
 6604 0040 0320     		movs	r0, #3
 6605 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6606              	.L285:
2019:main.c        ****     } 
2020:main.c        ****     midiSent += 4;
 6607              		.loc 1 2020 0
 6608 0046 074B     		ldr	r3, .L286+8
 6609 0048 1B88     		ldrh	r3, [r3]
 6610 004a 0433     		adds	r3, r3, #4
 6611 004c 9AB2     		uxth	r2, r3
 6612 004e 054B     		ldr	r3, .L286+8
 6613 0050 1A80     		strh	r2, [r3]	@ movhi
2021:main.c        **** }
 6614              		.loc 1 2021 0
 6615 0052 00BF     		nop
 6616 0054 1037     		adds	r7, r7, #16
 6617              		.cfi_def_cfa_offset 8
 6618 0056 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 154


 6619              		.cfi_def_cfa_register 13
 6620              		@ sp needed
 6621 0058 80BD     		pop	{r7, pc}
 6622              	.L287:
 6623 005a 00BF     		.align	2
 6624              	.L286:
 6625 005c 00000000 		.word	midiMsg
 6626 0060 00000000 		.word	USB_active
 6627 0064 00000000 		.word	midiSent
 6628              		.cfi_endproc
 6629              	.LFE88:
 6630              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 6631              		.section	.text.sendMIDIControlChange,"ax",%progbits
 6632              		.align	2
 6633              		.global	sendMIDIControlChange
 6634              		.thumb
 6635              		.thumb_func
 6636              		.type	sendMIDIControlChange, %function
 6637              	sendMIDIControlChange:
 6638              	.LFB89:
2022:main.c        **** 
2023:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
2024:main.c        **** {
 6639              		.loc 1 2024 0
 6640              		.cfi_startproc
 6641              		@ args = 0, pretend = 0, frame = 16
 6642              		@ frame_needed = 1, uses_anonymous_args = 0
 6643 0000 80B5     		push	{r7, lr}
 6644              		.cfi_def_cfa_offset 8
 6645              		.cfi_offset 7, -8
 6646              		.cfi_offset 14, -4
 6647 0002 84B0     		sub	sp, sp, #16
 6648              		.cfi_def_cfa_offset 24
 6649 0004 00AF     		add	r7, sp, #0
 6650              		.cfi_def_cfa_register 7
 6651 0006 F860     		str	r0, [r7, #12]
 6652 0008 B960     		str	r1, [r7, #8]
 6653 000a 7A60     		str	r2, [r7, #4]
2025:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 6654              		.loc 1 2025 0
 6655 000c 7B68     		ldr	r3, [r7, #4]
 6656 000e DBB2     		uxtb	r3, r3
 6657 0010 503B     		subs	r3, r3, #80
 6658 0012 DAB2     		uxtb	r2, r3
 6659 0014 114B     		ldr	r3, .L290
 6660 0016 1A70     		strb	r2, [r3]
2026:main.c        ****     midiMsg[1] = CCnum;
 6661              		.loc 1 2026 0
 6662 0018 FB68     		ldr	r3, [r7, #12]
 6663 001a DAB2     		uxtb	r2, r3
 6664 001c 0F4B     		ldr	r3, .L290
 6665 001e 5A70     		strb	r2, [r3, #1]
2027:main.c        ****     midiMsg[2] = CCval;			
 6666              		.loc 1 2027 0
 6667 0020 BB68     		ldr	r3, [r7, #8]
 6668 0022 DAB2     		uxtb	r2, r3
 6669 0024 0D4B     		ldr	r3, .L290
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 155


 6670 0026 9A70     		strb	r2, [r3, #2]
2028:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6671              		.loc 1 2028 0
 6672 0028 0D4B     		ldr	r3, .L290+4
 6673 002a 1B78     		ldrb	r3, [r3]
 6674 002c DBB2     		uxtb	r3, r3
 6675 002e 002B     		cmp	r3, #0
 6676 0030 09D0     		beq	.L289
 6677              		.loc 1 2028 0 is_stmt 0 discriminator 1
 6678 0032 FFF7FEFF 		bl	USB_VBusPresent
 6679 0036 0346     		mov	r3, r0
 6680 0038 002B     		cmp	r3, #0
 6681 003a 04D0     		beq	.L289
2029:main.c        ****     {
2030:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6682              		.loc 1 2030 0 is_stmt 1
 6683 003c 0022     		movs	r2, #0
 6684 003e 0749     		ldr	r1, .L290
 6685 0040 0320     		movs	r0, #3
 6686 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6687              	.L289:
2031:main.c        ****     } 
2032:main.c        ****     midiSent += 4;
 6688              		.loc 1 2032 0
 6689 0046 074B     		ldr	r3, .L290+8
 6690 0048 1B88     		ldrh	r3, [r3]
 6691 004a 0433     		adds	r3, r3, #4
 6692 004c 9AB2     		uxth	r2, r3
 6693 004e 054B     		ldr	r3, .L290+8
 6694 0050 1A80     		strh	r2, [r3]	@ movhi
2033:main.c        **** }
 6695              		.loc 1 2033 0
 6696 0052 00BF     		nop
 6697 0054 1037     		adds	r7, r7, #16
 6698              		.cfi_def_cfa_offset 8
 6699 0056 BD46     		mov	sp, r7
 6700              		.cfi_def_cfa_register 13
 6701              		@ sp needed
 6702 0058 80BD     		pop	{r7, pc}
 6703              	.L291:
 6704 005a 00BF     		.align	2
 6705              	.L290:
 6706 005c 00000000 		.word	midiMsg
 6707 0060 00000000 		.word	USB_active
 6708 0064 00000000 		.word	midiSent
 6709              		.cfi_endproc
 6710              	.LFE89:
 6711              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 6712              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 6713              		.align	2
 6714              		.global	sendMIDIPitchBend
 6715              		.thumb
 6716              		.thumb_func
 6717              		.type	sendMIDIPitchBend, %function
 6718              	sendMIDIPitchBend:
 6719              	.LFB90:
2034:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 156


2035:main.c        **** void sendMIDIPitchBend(int val, int channel)
2036:main.c        **** {
 6720              		.loc 1 2036 0
 6721              		.cfi_startproc
 6722              		@ args = 0, pretend = 0, frame = 8
 6723              		@ frame_needed = 1, uses_anonymous_args = 0
 6724 0000 80B5     		push	{r7, lr}
 6725              		.cfi_def_cfa_offset 8
 6726              		.cfi_offset 7, -8
 6727              		.cfi_offset 14, -4
 6728 0002 82B0     		sub	sp, sp, #8
 6729              		.cfi_def_cfa_offset 16
 6730 0004 00AF     		add	r7, sp, #0
 6731              		.cfi_def_cfa_register 7
 6732 0006 7860     		str	r0, [r7, #4]
 6733 0008 3960     		str	r1, [r7]
2037:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 6734              		.loc 1 2037 0
 6735 000a 3B68     		ldr	r3, [r7]
 6736 000c DBB2     		uxtb	r3, r3
 6737 000e 203B     		subs	r3, r3, #32
 6738 0010 DAB2     		uxtb	r2, r3
 6739 0012 134B     		ldr	r3, .L294
 6740 0014 1A70     		strb	r2, [r3]
2038:main.c        ****     midiMsg[1] = (val & 127); //LSB
 6741              		.loc 1 2038 0
 6742 0016 7B68     		ldr	r3, [r7, #4]
 6743 0018 DBB2     		uxtb	r3, r3
 6744 001a 03F07F03 		and	r3, r3, #127
 6745 001e DAB2     		uxtb	r2, r3
 6746 0020 0F4B     		ldr	r3, .L294
 6747 0022 5A70     		strb	r2, [r3, #1]
2039:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 6748              		.loc 1 2039 0
 6749 0024 7B68     		ldr	r3, [r7, #4]
 6750 0026 DB11     		asrs	r3, r3, #7
 6751 0028 DAB2     		uxtb	r2, r3
 6752 002a 0D4B     		ldr	r3, .L294
 6753 002c 9A70     		strb	r2, [r3, #2]
2040:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6754              		.loc 1 2040 0
 6755 002e 0D4B     		ldr	r3, .L294+4
 6756 0030 1B78     		ldrb	r3, [r3]
 6757 0032 DBB2     		uxtb	r3, r3
 6758 0034 002B     		cmp	r3, #0
 6759 0036 09D0     		beq	.L293
 6760              		.loc 1 2040 0 is_stmt 0 discriminator 1
 6761 0038 FFF7FEFF 		bl	USB_VBusPresent
 6762 003c 0346     		mov	r3, r0
 6763 003e 002B     		cmp	r3, #0
 6764 0040 04D0     		beq	.L293
2041:main.c        ****     {
2042:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6765              		.loc 1 2042 0 is_stmt 1
 6766 0042 0022     		movs	r2, #0
 6767 0044 0649     		ldr	r1, .L294
 6768 0046 0320     		movs	r0, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 157


 6769 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6770              	.L293:
2043:main.c        ****     } 
2044:main.c        ****     midiSent += 4;
 6771              		.loc 1 2044 0
 6772 004c 064B     		ldr	r3, .L294+8
 6773 004e 1B88     		ldrh	r3, [r3]
 6774 0050 0433     		adds	r3, r3, #4
 6775 0052 9AB2     		uxth	r2, r3
 6776 0054 044B     		ldr	r3, .L294+8
 6777 0056 1A80     		strh	r2, [r3]	@ movhi
2045:main.c        **** }
 6778              		.loc 1 2045 0
 6779 0058 00BF     		nop
 6780 005a 0837     		adds	r7, r7, #8
 6781              		.cfi_def_cfa_offset 8
 6782 005c BD46     		mov	sp, r7
 6783              		.cfi_def_cfa_register 13
 6784              		@ sp needed
 6785 005e 80BD     		pop	{r7, pc}
 6786              	.L295:
 6787              		.align	2
 6788              	.L294:
 6789 0060 00000000 		.word	midiMsg
 6790 0064 00000000 		.word	USB_active
 6791 0068 00000000 		.word	midiSent
 6792              		.cfi_endproc
 6793              	.LFE90:
 6794              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 6795              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 6796              		.align	2
 6797              		.global	sendMIDIAllNotesOff
 6798              		.thumb
 6799              		.thumb_func
 6800              		.type	sendMIDIAllNotesOff, %function
 6801              	sendMIDIAllNotesOff:
 6802              	.LFB91:
2046:main.c        **** 
2047:main.c        **** void sendMIDIAllNotesOff(void)
2048:main.c        **** {   
 6803              		.loc 1 2048 0
 6804              		.cfi_startproc
 6805              		@ args = 0, pretend = 0, frame = 0
 6806              		@ frame_needed = 1, uses_anonymous_args = 0
 6807 0000 80B5     		push	{r7, lr}
 6808              		.cfi_def_cfa_offset 8
 6809              		.cfi_offset 7, -8
 6810              		.cfi_offset 14, -4
 6811 0002 00AF     		add	r7, sp, #0
 6812              		.cfi_def_cfa_register 7
2049:main.c        ****     for (i = 0; i < 128; i++)
 6813              		.loc 1 2049 0
 6814 0004 144B     		ldr	r3, .L300
 6815 0006 0022     		movs	r2, #0
 6816 0008 1A70     		strb	r2, [r3]
 6817 000a 1EE0     		b	.L297
 6818              	.L299:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 158


2050:main.c        ****     {
2051:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 6819              		.loc 1 2051 0
 6820 000c 134B     		ldr	r3, .L300+4
 6821 000e 9022     		movs	r2, #144
 6822 0010 1A70     		strb	r2, [r3]
2052:main.c        ****         midiMsg[1] = i;
 6823              		.loc 1 2052 0
 6824 0012 114B     		ldr	r3, .L300
 6825 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6826 0016 114B     		ldr	r3, .L300+4
 6827 0018 5A70     		strb	r2, [r3, #1]
2053:main.c        ****         midiMsg[2] = 0;	
 6828              		.loc 1 2053 0
 6829 001a 104B     		ldr	r3, .L300+4
 6830 001c 0022     		movs	r2, #0
 6831 001e 9A70     		strb	r2, [r3, #2]
2054:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6832              		.loc 1 2054 0
 6833 0020 0F4B     		ldr	r3, .L300+8
 6834 0022 1B78     		ldrb	r3, [r3]
 6835 0024 DBB2     		uxtb	r3, r3
 6836 0026 002B     		cmp	r3, #0
 6837 0028 09D0     		beq	.L298
 6838              		.loc 1 2054 0 is_stmt 0 discriminator 1
 6839 002a FFF7FEFF 		bl	USB_VBusPresent
 6840 002e 0346     		mov	r3, r0
 6841 0030 002B     		cmp	r3, #0
 6842 0032 04D0     		beq	.L298
2055:main.c        ****         {       
2056:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6843              		.loc 1 2056 0 is_stmt 1
 6844 0034 0022     		movs	r2, #0
 6845 0036 0949     		ldr	r1, .L300+4
 6846 0038 0320     		movs	r0, #3
 6847 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
 6848              	.L298:
2049:main.c        ****     {
 6849              		.loc 1 2049 0 discriminator 2
 6850 003e 064B     		ldr	r3, .L300
 6851 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6852 0042 0133     		adds	r3, r3, #1
 6853 0044 DAB2     		uxtb	r2, r3
 6854 0046 044B     		ldr	r3, .L300
 6855 0048 1A70     		strb	r2, [r3]
 6856              	.L297:
2049:main.c        ****     {
 6857              		.loc 1 2049 0 is_stmt 0 discriminator 1
 6858 004a 034B     		ldr	r3, .L300
 6859 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6860 004e 5BB2     		sxtb	r3, r3
 6861 0050 002B     		cmp	r3, #0
 6862 0052 DBDA     		bge	.L299
2057:main.c        ****         }
2058:main.c        ****     }
2059:main.c        **** }
 6863              		.loc 1 2059 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 159


 6864 0054 00BF     		nop
 6865 0056 80BD     		pop	{r7, pc}
 6866              	.L301:
 6867              		.align	2
 6868              	.L300:
 6869 0058 00000000 		.word	i
 6870 005c 00000000 		.word	midiMsg
 6871 0060 00000000 		.word	USB_active
 6872              		.cfi_endproc
 6873              	.LFE91:
 6874              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 6875              		.global	checkStatus
 6876              		.bss
 6877              		.type	checkStatus, %object
 6878              		.size	checkStatus, 1
 6879              	checkStatus:
 6880 00f8 00       		.space	1
 6881              		.global	checkBase
 6882 00f9 00       		.align	1
 6883              		.type	checkBase, %object
 6884              		.size	checkBase, 2
 6885              	checkBase:
 6886 00fa 0000     		.space	2
 6887              		.global	SPI_errors
 6888              		.align	2
 6889              		.type	SPI_errors, %object
 6890              		.size	SPI_errors, 4
 6891              	SPI_errors:
 6892 00fc 00000000 		.space	4
 6893              		.section	.text.parseSysex,"ax",%progbits
 6894              		.align	2
 6895              		.global	parseSysex
 6896              		.thumb
 6897              		.thumb_func
 6898              		.type	parseSysex, %function
 6899              	parseSysex:
 6900              	.LFB92:
2060:main.c        **** 
2061:main.c        **** 
2062:main.c        **** 
2063:main.c        **** 
2064:main.c        **** volatile uint8_t checkStatus = 0;
2065:main.c        **** volatile uint16_t checkBase = 0;
2066:main.c        **** 
2067:main.c        **** 
2068:main.c        **** 
2069:main.c        **** int SPI_errors = 0;
2070:main.c        **** 
2071:main.c        **** void parseSysex(void)
2072:main.c        **** {
 6901              		.loc 1 2072 0
 6902              		.cfi_startproc
 6903              		@ args = 0, pretend = 0, frame = 56
 6904              		@ frame_needed = 1, uses_anonymous_args = 0
 6905 0000 90B5     		push	{r4, r7, lr}
 6906              		.cfi_def_cfa_offset 12
 6907              		.cfi_offset 4, -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 160


 6908              		.cfi_offset 7, -8
 6909              		.cfi_offset 14, -4
 6910 0002 8FB0     		sub	sp, sp, #60
 6911              		.cfi_def_cfa_offset 72
 6912 0004 00AF     		add	r7, sp, #0
 6913              		.cfi_def_cfa_register 7
2073:main.c        ****     parsingSysex = 1;
 6914              		.loc 1 2073 0
 6915 0006 864B     		ldr	r3, .L349
 6916 0008 0122     		movs	r2, #1
 6917 000a 1A70     		strb	r2, [r3]
2074:main.c        ****     //0 = it's a preset
2075:main.c        ****     if (sysexBuffer[0] == 0)
 6918              		.loc 1 2075 0
 6919 000c 854B     		ldr	r3, .L349+4
 6920 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6921 0010 002B     		cmp	r3, #0
 6922 0012 40F09E82 		bne	.L303
 6923              	.LBB39:
2076:main.c        ****     {
2077:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 6924              		.loc 1 2077 0
 6925 0016 844B     		ldr	r3, .L349+8
 6926 0018 0122     		movs	r2, #1
 6927 001a 1A70     		strb	r2, [r3]
2078:main.c        ****         currentFloat = 0;
 6928              		.loc 1 2078 0
 6929 001c 834B     		ldr	r3, .L349+12
 6930 001e 0022     		movs	r2, #0
 6931 0020 1A60     		str	r2, [r3]
2079:main.c        ****         presetArraySection = presetName;
 6932              		.loc 1 2079 0
 6933 0022 834B     		ldr	r3, .L349+16
 6934 0024 0022     		movs	r2, #0
 6935 0026 1A70     		strb	r2, [r3]
2080:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 6936              		.loc 1 2080 0
 6937 0028 7E4B     		ldr	r3, .L349+4
 6938 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6939 002c 814B     		ldr	r3, .L349+20
 6940 002e 1A70     		strb	r2, [r3]
2081:main.c        ****         
2082:main.c        ****         union breakFloat theVal;
2083:main.c        ****         uint32_t i = 2;
 6941              		.loc 1 2083 0
 6942 0030 0223     		movs	r3, #2
 6943 0032 7B63     		str	r3, [r7, #52]
2084:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 6944              		.loc 1 2084 0
 6945 0034 1023     		movs	r3, #16
 6946 0036 FB77     		strb	r3, [r7, #31]
2085:main.c        ****         for (; i < stoppingPoint; i++)
 6947              		.loc 1 2085 0
 6948 0038 22E0     		b	.L304
 6949              	.L305:
2086:main.c        ****         {
2087:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 161


 6950              		.loc 1 2087 0 discriminator 2
 6951 003a 7B6B     		ldr	r3, [r7, #52]
 6952 003c 023B     		subs	r3, r3, #2
 6953 003e 7949     		ldr	r1, .L349+4
 6954 0040 7A6B     		ldr	r2, [r7, #52]
 6955 0042 0A44     		add	r2, r2, r1
 6956 0044 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6957 0046 02F07F02 		and	r2, r2, #127
 6958 004a D1B2     		uxtb	r1, r2
 6959 004c 7A4A     		ldr	r2, .L349+24
 6960 004e D154     		strb	r1, [r2, r3]
2088:main.c        ****             presetNamesArray[presetNumberToWrite][i-2] = sysexBuffer[i] & 127;
 6961              		.loc 1 2088 0 discriminator 2
 6962 0050 784B     		ldr	r3, .L349+20
 6963 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6964 0054 1846     		mov	r0, r3
 6965 0056 7B6B     		ldr	r3, [r7, #52]
 6966 0058 9A1E     		subs	r2, r3, #2
 6967 005a 7249     		ldr	r1, .L349+4
 6968 005c 7B6B     		ldr	r3, [r7, #52]
 6969 005e 0B44     		add	r3, r3, r1
 6970 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6971 0062 03F07F03 		and	r3, r3, #127
 6972 0066 DCB2     		uxtb	r4, r3
 6973 0068 7449     		ldr	r1, .L349+28
 6974 006a 0346     		mov	r3, r0
 6975 006c DB00     		lsls	r3, r3, #3
 6976 006e 1B1A     		subs	r3, r3, r0
 6977 0070 5B00     		lsls	r3, r3, #1
 6978 0072 0B44     		add	r3, r3, r1
 6979 0074 1344     		add	r3, r3, r2
 6980 0076 2246     		mov	r2, r4
 6981 0078 1A70     		strb	r2, [r3]
2085:main.c        ****         for (; i < stoppingPoint; i++)
 6982              		.loc 1 2085 0 discriminator 2
 6983 007a 7B6B     		ldr	r3, [r7, #52]
 6984 007c 0133     		adds	r3, r3, #1
 6985 007e 7B63     		str	r3, [r7, #52]
 6986              	.L304:
2085:main.c        ****         for (; i < stoppingPoint; i++)
 6987              		.loc 1 2085 0 is_stmt 0 discriminator 1
 6988 0080 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 6989 0082 7B6B     		ldr	r3, [r7, #52]
 6990 0084 9A42     		cmp	r2, r3
 6991 0086 D8D8     		bhi	.L305
2089:main.c        ****         }
2090:main.c        ****         
2091:main.c        ****         presetArraySection = macroNames;
 6992              		.loc 1 2091 0 is_stmt 1
 6993 0088 694B     		ldr	r3, .L349+16
 6994 008a 0122     		movs	r2, #1
 6995 008c 1A70     		strb	r2, [r3]
 6996              	.LBB40:
2092:main.c        **** 
2093:main.c        ****         
2094:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 6997              		.loc 1 2094 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 162


 6998 008e 0023     		movs	r3, #0
 6999 0090 3B63     		str	r3, [r7, #48]
 7000 0092 34E0     		b	.L306
 7001              	.L309:
 7002              	.LBB41:
2095:main.c        ****         {
2096:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 7003              		.loc 1 2096 0
 7004 0094 0023     		movs	r3, #0
 7005 0096 FB62     		str	r3, [r7, #44]
 7006 0098 2BE0     		b	.L307
 7007              	.L308:
2097:main.c        ****             {
2098:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 7008              		.loc 1 2098 0 discriminator 3
 7009 009a 7B6B     		ldr	r3, [r7, #52]
 7010 009c 023B     		subs	r3, r3, #2
 7011 009e 6149     		ldr	r1, .L349+4
 7012 00a0 7A6B     		ldr	r2, [r7, #52]
 7013 00a2 0A44     		add	r2, r2, r1
 7014 00a4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7015 00a6 02F07F02 		and	r2, r2, #127
 7016 00aa D1B2     		uxtb	r1, r2
 7017 00ac 624A     		ldr	r2, .L349+24
 7018 00ae D154     		strb	r1, [r2, r3]
2099:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 7019              		.loc 1 2099 0 discriminator 3
 7020 00b0 604B     		ldr	r3, .L349+20
 7021 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7022 00b4 1846     		mov	r0, r3
 7023 00b6 5B4A     		ldr	r2, .L349+4
 7024 00b8 7B6B     		ldr	r3, [r7, #52]
 7025 00ba 1344     		add	r3, r3, r2
 7026 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7027 00be 03F07F03 		and	r3, r3, #127
 7028 00c2 DCB2     		uxtb	r4, r3
 7029 00c4 5E49     		ldr	r1, .L349+32
 7030 00c6 3B6B     		ldr	r3, [r7, #48]
 7031 00c8 1A46     		mov	r2, r3
 7032 00ca D200     		lsls	r2, r2, #3
 7033 00cc D21A     		subs	r2, r2, r3
 7034 00ce 5300     		lsls	r3, r2, #1
 7035 00d0 1A46     		mov	r2, r3
 7036 00d2 0346     		mov	r3, r0
 7037 00d4 DB00     		lsls	r3, r3, #3
 7038 00d6 1B1A     		subs	r3, r3, r0
 7039 00d8 1B01     		lsls	r3, r3, #4
 7040 00da 1344     		add	r3, r3, r2
 7041 00dc CA18     		adds	r2, r1, r3
 7042 00de FB6A     		ldr	r3, [r7, #44]
 7043 00e0 1344     		add	r3, r3, r2
 7044 00e2 2246     		mov	r2, r4
 7045 00e4 1A70     		strb	r2, [r3]
2100:main.c        ****                 i++;
 7046              		.loc 1 2100 0 discriminator 3
 7047 00e6 7B6B     		ldr	r3, [r7, #52]
 7048 00e8 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 163


 7049 00ea 7B63     		str	r3, [r7, #52]
2096:main.c        ****             {
 7050              		.loc 1 2096 0 discriminator 3
 7051 00ec FB6A     		ldr	r3, [r7, #44]
 7052 00ee 0133     		adds	r3, r3, #1
 7053 00f0 FB62     		str	r3, [r7, #44]
 7054              	.L307:
2096:main.c        ****             {
 7055              		.loc 1 2096 0 is_stmt 0 discriminator 1
 7056 00f2 FB6A     		ldr	r3, [r7, #44]
 7057 00f4 0D2B     		cmp	r3, #13
 7058 00f6 D0DD     		ble	.L308
 7059              	.LBE41:
2094:main.c        ****         {
 7060              		.loc 1 2094 0 is_stmt 1 discriminator 2
 7061 00f8 3B6B     		ldr	r3, [r7, #48]
 7062 00fa 0133     		adds	r3, r3, #1
 7063 00fc 3B63     		str	r3, [r7, #48]
 7064              	.L306:
2094:main.c        ****         {
 7065              		.loc 1 2094 0 is_stmt 0 discriminator 1
 7066 00fe 3B6B     		ldr	r3, [r7, #48]
 7067 0100 072B     		cmp	r3, #7
 7068 0102 C7DD     		ble	.L309
 7069              	.LBE40:
2101:main.c        ****             }
2102:main.c        ****         }
2103:main.c        ****         
2104:main.c        ****         uint16_t valsStart = NAME_LENGTH_IN_BYTES + (NAME_LENGTH_IN_BYTES * NUM_MACROS);
 7070              		.loc 1 2104 0 is_stmt 1
 7071 0104 7E23     		movs	r3, #126
 7072 0106 BB83     		strh	r3, [r7, #28]	@ movhi
2105:main.c        ****         
2106:main.c        ****         presetArraySection = initialVals;
 7073              		.loc 1 2106 0
 7074 0108 494B     		ldr	r3, .L349+16
 7075 010a 0222     		movs	r2, #2
 7076 010c 1A70     		strb	r2, [r3]
2107:main.c        ****         
2108:main.c        ****         for (; i < sysexPointer; i = i+5)
 7077              		.loc 1 2108 0
 7078 010e 19E2     		b	.L310
 7079              	.L331:
2109:main.c        ****         {
2110:main.c        ****             theVal.u32 = 0;
 7080              		.loc 1 2110 0
 7081 0110 0023     		movs	r3, #0
 7082 0112 BB60     		str	r3, [r7, #8]
2111:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7083              		.loc 1 2111 0
 7084 0114 BB68     		ldr	r3, [r7, #8]
 7085 0116 4349     		ldr	r1, .L349+4
 7086 0118 7A6B     		ldr	r2, [r7, #52]
 7087 011a 0A44     		add	r2, r2, r1
 7088 011c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7089 011e 1207     		lsls	r2, r2, #28
 7090 0120 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 164


 7091 0122 BB60     		str	r3, [r7, #8]
2112:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 7092              		.loc 1 2112 0
 7093 0124 BB68     		ldr	r3, [r7, #8]
 7094 0126 7A6B     		ldr	r2, [r7, #52]
 7095 0128 0132     		adds	r2, r2, #1
 7096 012a 3E49     		ldr	r1, .L349+4
 7097 012c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7098 012e 5205     		lsls	r2, r2, #21
 7099 0130 1343     		orrs	r3, r3, r2
 7100 0132 BB60     		str	r3, [r7, #8]
2113:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 7101              		.loc 1 2113 0
 7102 0134 BB68     		ldr	r3, [r7, #8]
 7103 0136 7A6B     		ldr	r2, [r7, #52]
 7104 0138 0232     		adds	r2, r2, #2
 7105 013a 3A49     		ldr	r1, .L349+4
 7106 013c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7107 013e 9203     		lsls	r2, r2, #14
 7108 0140 1343     		orrs	r3, r3, r2
 7109 0142 BB60     		str	r3, [r7, #8]
2114:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 7110              		.loc 1 2114 0
 7111 0144 BB68     		ldr	r3, [r7, #8]
 7112 0146 7A6B     		ldr	r2, [r7, #52]
 7113 0148 0332     		adds	r2, r2, #3
 7114 014a 3649     		ldr	r1, .L349+4
 7115 014c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7116 014e D201     		lsls	r2, r2, #7
 7117 0150 1343     		orrs	r3, r3, r2
 7118 0152 BB60     		str	r3, [r7, #8]
2115:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 7119              		.loc 1 2115 0
 7120 0154 BA68     		ldr	r2, [r7, #8]
 7121 0156 7B6B     		ldr	r3, [r7, #52]
 7122 0158 0433     		adds	r3, r3, #4
 7123 015a 3249     		ldr	r1, .L349+4
 7124 015c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7125 015e 03F07F03 		and	r3, r3, #127
 7126 0162 1343     		orrs	r3, r3, r2
 7127 0164 BB60     		str	r3, [r7, #8]
2116:main.c        ****             testVal = theVal.f;
 7128              		.loc 1 2116 0
 7129 0166 BB68     		ldr	r3, [r7, #8]	@ float
 7130 0168 364A     		ldr	r2, .L349+36
 7131 016a 1360     		str	r3, [r2]	@ float
2117:main.c        ****             if (presetArraySection == initialVals)
 7132              		.loc 1 2117 0
 7133 016c 304B     		ldr	r3, .L349+16
 7134 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7135 0170 022B     		cmp	r3, #2
 7136 0172 40F0B980 		bne	.L311
2118:main.c        ****             {
2119:main.c        **** 
2120:main.c        ****                 if (currentFloat == 0)
 7137              		.loc 1 2120 0
 7138 0176 2D4B     		ldr	r3, .L349+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 165


 7139 0178 1B68     		ldr	r3, [r3]
 7140 017a 002B     		cmp	r3, #0
 7141 017c 22D1     		bne	.L312
2121:main.c        ****                 {
2122:main.c        ****                     valsCount = (uint16_t) theVal.f;
 7142              		.loc 1 2122 0
 7143 017e BB68     		ldr	r3, [r7, #8]	@ float
 7144 0180 1846     		mov	r0, r3
 7145 0182 FFF7FEFF 		bl	__aeabi_f2uiz
 7146 0186 0346     		mov	r3, r0
 7147 0188 9AB2     		uxth	r2, r3
 7148 018a 2F4B     		ldr	r3, .L349+40
 7149 018c 1A80     		strh	r2, [r3]	@ movhi
2123:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 7150              		.loc 1 2123 0
 7151 018e BA8B     		ldrh	r2, [r7, #28]
 7152 0190 264B     		ldr	r3, .L349+12
 7153 0192 1B68     		ldr	r3, [r3]
 7154 0194 591C     		adds	r1, r3, #1
 7155 0196 2548     		ldr	r0, .L349+12
 7156 0198 0160     		str	r1, [r0]
 7157 019a 1344     		add	r3, r3, r2
 7158 019c 2A4A     		ldr	r2, .L349+40
 7159 019e 1288     		ldrh	r2, [r2]
 7160 01a0 120A     		lsrs	r2, r2, #8
 7161 01a2 92B2     		uxth	r2, r2
 7162 01a4 D1B2     		uxtb	r1, r2
 7163 01a6 244A     		ldr	r2, .L349+24
 7164 01a8 D154     		strb	r1, [r2, r3]
2124:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 7165              		.loc 1 2124 0
 7166 01aa BA8B     		ldrh	r2, [r7, #28]
 7167 01ac 1F4B     		ldr	r3, .L349+12
 7168 01ae 1B68     		ldr	r3, [r3]
 7169 01b0 591C     		adds	r1, r3, #1
 7170 01b2 1E48     		ldr	r0, .L349+12
 7171 01b4 0160     		str	r1, [r0]
 7172 01b6 1344     		add	r3, r3, r2
 7173 01b8 234A     		ldr	r2, .L349+40
 7174 01ba 1288     		ldrh	r2, [r2]
 7175 01bc D1B2     		uxtb	r1, r2
 7176 01be 1E4A     		ldr	r2, .L349+24
 7177 01c0 D154     		strb	r1, [r2, r3]
 7178 01c2 BCE1     		b	.L318
 7179              	.L312:
2125:main.c        ****                 }
2126:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 7180              		.loc 1 2126 0
 7181 01c4 204B     		ldr	r3, .L349+40
 7182 01c6 1B88     		ldrh	r3, [r3]
 7183 01c8 0133     		adds	r3, r3, #1
 7184 01ca 5B00     		lsls	r3, r3, #1
 7185 01cc 1A46     		mov	r2, r3
 7186 01ce 174B     		ldr	r3, .L349+12
 7187 01d0 1B68     		ldr	r3, [r3]
 7188 01d2 9A42     		cmp	r2, r3
 7189 01d4 3CD9     		bls	.L314
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 166


 7190              	.LBB42:
2127:main.c        ****                 { 
2128:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 7191              		.loc 1 2128 0
 7192 01d6 BB68     		ldr	r3, [r7, #8]	@ float
 7193 01d8 1C49     		ldr	r1, .L349+44
 7194 01da 1846     		mov	r0, r3
 7195 01dc FFF7FEFF 		bl	__aeabi_fmul
 7196 01e0 0346     		mov	r3, r0
 7197 01e2 1846     		mov	r0, r3
 7198 01e4 FFF7FEFF 		bl	__aeabi_f2uiz
 7199 01e8 0346     		mov	r3, r0
 7200 01ea 7B83     		strh	r3, [r7, #26]	@ movhi
2129:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 7201              		.loc 1 2129 0
 7202 01ec BA8B     		ldrh	r2, [r7, #28]
 7203 01ee 0F4B     		ldr	r3, .L349+12
 7204 01f0 1B68     		ldr	r3, [r3]
 7205 01f2 591C     		adds	r1, r3, #1
 7206 01f4 0D48     		ldr	r0, .L349+12
 7207 01f6 0160     		str	r1, [r0]
 7208 01f8 1344     		add	r3, r3, r2
 7209 01fa 7A8B     		ldrh	r2, [r7, #26]
 7210 01fc 120A     		lsrs	r2, r2, #8
 7211 01fe 92B2     		uxth	r2, r2
 7212 0200 D1B2     		uxtb	r1, r2
 7213 0202 0D4A     		ldr	r2, .L349+24
 7214 0204 D154     		strb	r1, [r2, r3]
2130:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7215              		.loc 1 2130 0
 7216 0206 BA8B     		ldrh	r2, [r7, #28]
 7217 0208 084B     		ldr	r3, .L349+12
 7218 020a 1B68     		ldr	r3, [r3]
 7219 020c 591C     		adds	r1, r3, #1
 7220 020e 0748     		ldr	r0, .L349+12
 7221 0210 0160     		str	r1, [r0]
 7222 0212 1344     		add	r3, r3, r2
 7223 0214 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 7224 0216 D1B2     		uxtb	r1, r2
 7225 0218 074A     		ldr	r2, .L349+24
 7226 021a D154     		strb	r1, [r2, r3]
 7227              	.LBE42:
 7228 021c 8FE1     		b	.L318
 7229              	.L350:
 7230 021e 00BF     		.align	2
 7231              	.L349:
 7232 0220 00000000 		.word	parsingSysex
 7233 0224 00000000 		.word	sysexBuffer
 7234 0228 00000000 		.word	sysexMessageInProgress
 7235 022c 00000000 		.word	currentFloat
 7236 0230 00000000 		.word	presetArraySection
 7237 0234 00000000 		.word	presetNumberToWrite
 7238 0238 00000000 		.word	presetArray
 7239 023c 00000000 		.word	presetNamesArray
 7240 0240 00000000 		.word	macroNamesArray
 7241 0244 00000000 		.word	testVal
 7242 0248 00000000 		.word	valsCount
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 167


 7243 024c 00FF7F47 		.word	1199570688
 7244              	.L314:
2131:main.c        ****                 }
2132:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 7245              		.loc 1 2132 0
 7246 0250 854B     		ldr	r3, .L351
 7247 0252 1B88     		ldrh	r3, [r3]
 7248 0254 0133     		adds	r3, r3, #1
 7249 0256 5B00     		lsls	r3, r3, #1
 7250 0258 1A46     		mov	r2, r3
 7251 025a 844B     		ldr	r3, .L351+4
 7252 025c 1B68     		ldr	r3, [r3]
 7253 025e 9A42     		cmp	r2, r3
 7254 0260 40F06D81 		bne	.L318
2133:main.c        ****                 {
2134:main.c        ****                     valCheck = theVal.f;
 7255              		.loc 1 2134 0
 7256 0264 BB68     		ldr	r3, [r7, #8]	@ float
 7257 0266 824A     		ldr	r2, .L351+8
 7258 0268 1360     		str	r3, [r2]	@ float
2135:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 7259              		.loc 1 2135 0
 7260 026a 814B     		ldr	r3, .L351+8
 7261 026c 1B68     		ldr	r3, [r3]	@ float
 7262 026e 8149     		ldr	r1, .L351+12
 7263 0270 1846     		mov	r0, r3
 7264 0272 FFF7FEFF 		bl	__aeabi_fcmplt
 7265 0276 0346     		mov	r3, r0
 7266 0278 002B     		cmp	r3, #0
 7267 027a 23D0     		beq	.L315
 7268              		.loc 1 2135 0 is_stmt 0 discriminator 1
 7269 027c 7C4B     		ldr	r3, .L351+8
 7270 027e 1B68     		ldr	r3, [r3]	@ float
 7271 0280 7D49     		ldr	r1, .L351+16
 7272 0282 1846     		mov	r0, r3
 7273 0284 FFF7FEFF 		bl	__aeabi_fcmpgt
 7274 0288 0346     		mov	r3, r0
 7275 028a 002B     		cmp	r3, #0
 7276 028c 1AD0     		beq	.L315
2136:main.c        ****                     {
2137:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7277              		.loc 1 2137 0 is_stmt 1
 7278 028e BA8B     		ldrh	r2, [r7, #28]
 7279 0290 764B     		ldr	r3, .L351+4
 7280 0292 1B68     		ldr	r3, [r3]
 7281 0294 591C     		adds	r1, r3, #1
 7282 0296 7548     		ldr	r0, .L351+4
 7283 0298 0160     		str	r1, [r0]
 7284 029a 1344     		add	r3, r3, r2
 7285 029c 774A     		ldr	r2, .L351+20
 7286 029e EF21     		movs	r1, #239
 7287 02a0 D154     		strb	r1, [r2, r3]
2138:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7288              		.loc 1 2138 0
 7289 02a2 BA8B     		ldrh	r2, [r7, #28]
 7290 02a4 714B     		ldr	r3, .L351+4
 7291 02a6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 168


 7292 02a8 591C     		adds	r1, r3, #1
 7293 02aa 7048     		ldr	r0, .L351+4
 7294 02ac 0160     		str	r1, [r0]
 7295 02ae 1344     		add	r3, r3, r2
 7296 02b0 724A     		ldr	r2, .L351+20
 7297 02b2 EF21     		movs	r1, #239
 7298 02b4 D154     		strb	r1, [r2, r3]
2139:main.c        ****                         presetArraySection = mapCountNext;
 7299              		.loc 1 2139 0
 7300 02b6 724B     		ldr	r3, .L351+24
 7301 02b8 0322     		movs	r2, #3
 7302 02ba 1A70     		strb	r2, [r3]
2140:main.c        ****                         mapCount = 0;
 7303              		.loc 1 2140 0
 7304 02bc 714B     		ldr	r3, .L351+28
 7305 02be 0022     		movs	r2, #0
 7306 02c0 1A60     		str	r2, [r3]
 7307 02c2 3CE1     		b	.L318
 7308              	.L315:
2141:main.c        ****                     }
2142:main.c        ****                     else
2143:main.c        ****                     {
2144:main.c        ****                         //error state
2145:main.c        ****                         SPI_errors++;
 7309              		.loc 1 2145 0
 7310 02c4 704B     		ldr	r3, .L351+32
 7311 02c6 1B68     		ldr	r3, [r3]
 7312 02c8 0133     		adds	r3, r3, #1
 7313 02ca 6F4A     		ldr	r2, .L351+32
 7314 02cc 1360     		str	r3, [r2]
2146:main.c        ****                         sysexMessageInProgress = 0;
 7315              		.loc 1 2146 0
 7316 02ce 6F4B     		ldr	r3, .L351+36
 7317 02d0 0022     		movs	r2, #0
 7318 02d2 1A70     		strb	r2, [r3]
2147:main.c        ****                         sysexPointer = 0;
 7319              		.loc 1 2147 0
 7320 02d4 6E4B     		ldr	r3, .L351+40
 7321 02d6 0022     		movs	r2, #0
 7322 02d8 1A60     		str	r2, [r3]
2148:main.c        ****                         sendingMessage = 0;
 7323              		.loc 1 2148 0
 7324 02da 6E4B     		ldr	r3, .L351+44
 7325 02dc 0022     		movs	r2, #0
 7326 02de 1A70     		strb	r2, [r3]
2149:main.c        ****                         parseThatMF = 0;
 7327              		.loc 1 2149 0
 7328 02e0 6D4B     		ldr	r3, .L351+48
 7329 02e2 0022     		movs	r2, #0
 7330 02e4 1A70     		strb	r2, [r3]
 7331 02e6 2AE1     		b	.L318
 7332              	.L311:
2150:main.c        ****                     }
2151:main.c        ****                 }
2152:main.c        ****             }
2153:main.c        ****             else if (presetArraySection == mapCountNext)
 7333              		.loc 1 2153 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 169


 7334 02e8 654B     		ldr	r3, .L351+24
 7335 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7336 02ec 032B     		cmp	r3, #3
 7337 02ee 28D1     		bne	.L319
2154:main.c        ****             {
2155:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 7338              		.loc 1 2155 0
 7339 02f0 BB68     		ldr	r3, [r7, #8]	@ float
 7340 02f2 1846     		mov	r0, r3
 7341 02f4 FFF7FEFF 		bl	__aeabi_f2uiz
 7342 02f8 0346     		mov	r3, r0
 7343 02fa 9AB2     		uxth	r2, r3
 7344 02fc 674B     		ldr	r3, .L351+52
 7345 02fe 1A80     		strh	r2, [r3]	@ movhi
2156:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 7346              		.loc 1 2156 0
 7347 0300 BA8B     		ldrh	r2, [r7, #28]
 7348 0302 5A4B     		ldr	r3, .L351+4
 7349 0304 1B68     		ldr	r3, [r3]
 7350 0306 591C     		adds	r1, r3, #1
 7351 0308 5848     		ldr	r0, .L351+4
 7352 030a 0160     		str	r1, [r0]
 7353 030c 1344     		add	r3, r3, r2
 7354 030e 634A     		ldr	r2, .L351+52
 7355 0310 1288     		ldrh	r2, [r2]
 7356 0312 120A     		lsrs	r2, r2, #8
 7357 0314 92B2     		uxth	r2, r2
 7358 0316 D1B2     		uxtb	r1, r2
 7359 0318 584A     		ldr	r2, .L351+20
 7360 031a D154     		strb	r1, [r2, r3]
2157:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 7361              		.loc 1 2157 0
 7362 031c BA8B     		ldrh	r2, [r7, #28]
 7363 031e 534B     		ldr	r3, .L351+4
 7364 0320 1B68     		ldr	r3, [r3]
 7365 0322 591C     		adds	r1, r3, #1
 7366 0324 5148     		ldr	r0, .L351+4
 7367 0326 0160     		str	r1, [r0]
 7368 0328 1344     		add	r3, r3, r2
 7369 032a 5C4A     		ldr	r2, .L351+52
 7370 032c 1288     		ldrh	r2, [r2]
 7371 032e D1B2     		uxtb	r1, r2
 7372 0330 524A     		ldr	r2, .L351+20
 7373 0332 D154     		strb	r1, [r2, r3]
2158:main.c        ****                 presetArraySection = mapping;
 7374              		.loc 1 2158 0
 7375 0334 524B     		ldr	r3, .L351+24
 7376 0336 0422     		movs	r2, #4
 7377 0338 1A70     		strb	r2, [r3]
2159:main.c        ****                 numMappings = 0;
 7378              		.loc 1 2159 0
 7379 033a 594B     		ldr	r3, .L351+56
 7380 033c 0022     		movs	r2, #0
 7381 033e 1A80     		strh	r2, [r3]	@ movhi
 7382 0340 FDE0     		b	.L318
 7383              	.L319:
2160:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 170


2161:main.c        ****             else if (presetArraySection == mapping)
 7384              		.loc 1 2161 0
 7385 0342 4F4B     		ldr	r3, .L351+24
 7386 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7387 0346 042B     		cmp	r3, #4
 7388 0348 40F0F980 		bne	.L318
2162:main.c        ****             {
2163:main.c        ****                 // this is the order
2164:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
2165:main.c        ****                 if (numMappings < mapCountExpectation)
 7389              		.loc 1 2165 0
 7390 034c 544B     		ldr	r3, .L351+56
 7391 034e 1A88     		ldrh	r2, [r3]
 7392 0350 524B     		ldr	r3, .L351+52
 7393 0352 1B88     		ldrh	r3, [r3]
 7394 0354 9A42     		cmp	r2, r3
 7395 0356 80F0A780 		bcs	.L320
2166:main.c        ****                 {
2167:main.c        ****                     if ((mapCount % 4) == 0)
 7396              		.loc 1 2167 0
 7397 035a 4A4B     		ldr	r3, .L351+28
 7398 035c 1B68     		ldr	r3, [r3]
 7399 035e 03F00303 		and	r3, r3, #3
 7400 0362 002B     		cmp	r3, #0
 7401 0364 0FD1     		bne	.L321
2168:main.c        ****                     {
2169:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7402              		.loc 1 2169 0
 7403 0366 BA8B     		ldrh	r2, [r7, #28]
 7404 0368 404B     		ldr	r3, .L351+4
 7405 036a 1B68     		ldr	r3, [r3]
 7406 036c 591C     		adds	r1, r3, #1
 7407 036e 3F48     		ldr	r0, .L351+4
 7408 0370 0160     		str	r1, [r0]
 7409 0372 D418     		adds	r4, r2, r3
 7410 0374 BB68     		ldr	r3, [r7, #8]	@ float
 7411 0376 1846     		mov	r0, r3
 7412 0378 FFF7FEFF 		bl	__aeabi_f2uiz
 7413 037c 0346     		mov	r3, r0
 7414 037e DAB2     		uxtb	r2, r3
 7415 0380 3E4B     		ldr	r3, .L351+20
 7416 0382 1A55     		strb	r2, [r3, r4]
 7417 0384 69E0     		b	.L322
 7418              	.L321:
2170:main.c        ****                     }
2171:main.c        ****                     else if  (mapCount % 4 == 1)
 7419              		.loc 1 2171 0
 7420 0386 3F4B     		ldr	r3, .L351+28
 7421 0388 1B68     		ldr	r3, [r3]
 7422 038a 03F00303 		and	r3, r3, #3
 7423 038e 012B     		cmp	r3, #1
 7424 0390 0FD1     		bne	.L323
2172:main.c        ****                     {
2173:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7425              		.loc 1 2173 0
 7426 0392 BA8B     		ldrh	r2, [r7, #28]
 7427 0394 354B     		ldr	r3, .L351+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 171


 7428 0396 1B68     		ldr	r3, [r3]
 7429 0398 591C     		adds	r1, r3, #1
 7430 039a 3448     		ldr	r0, .L351+4
 7431 039c 0160     		str	r1, [r0]
 7432 039e D418     		adds	r4, r2, r3
 7433 03a0 BB68     		ldr	r3, [r7, #8]	@ float
 7434 03a2 1846     		mov	r0, r3
 7435 03a4 FFF7FEFF 		bl	__aeabi_f2uiz
 7436 03a8 0346     		mov	r3, r0
 7437 03aa DAB2     		uxtb	r2, r3
 7438 03ac 334B     		ldr	r3, .L351+20
 7439 03ae 1A55     		strb	r2, [r3, r4]
 7440 03b0 53E0     		b	.L322
 7441              	.L323:
2174:main.c        ****                     }
2175:main.c        ****                     else if (mapCount % 4 == 2) //check if the scalar source is -1 (if so send 255 
 7442              		.loc 1 2175 0
 7443 03b2 344B     		ldr	r3, .L351+28
 7444 03b4 1B68     		ldr	r3, [r3]
 7445 03b6 03F00303 		and	r3, r3, #3
 7446 03ba 022B     		cmp	r3, #2
 7447 03bc 23D1     		bne	.L324
2176:main.c        ****                     {
2177:main.c        ****                         if (theVal.f < 0.0f)
 7448              		.loc 1 2177 0
 7449 03be BB68     		ldr	r3, [r7, #8]	@ float
 7450 03c0 4FF00001 		mov	r1, #0
 7451 03c4 1846     		mov	r0, r3
 7452 03c6 FFF7FEFF 		bl	__aeabi_fcmplt
 7453 03ca 0346     		mov	r3, r0
 7454 03cc 002B     		cmp	r3, #0
 7455 03ce 0AD0     		beq	.L348
2178:main.c        ****                         {
2179:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 7456              		.loc 1 2179 0
 7457 03d0 BA8B     		ldrh	r2, [r7, #28]
 7458 03d2 264B     		ldr	r3, .L351+4
 7459 03d4 1B68     		ldr	r3, [r3]
 7460 03d6 591C     		adds	r1, r3, #1
 7461 03d8 2448     		ldr	r0, .L351+4
 7462 03da 0160     		str	r1, [r0]
 7463 03dc 1344     		add	r3, r3, r2
 7464 03de 274A     		ldr	r2, .L351+20
 7465 03e0 FF21     		movs	r1, #255
 7466 03e2 D154     		strb	r1, [r2, r3]
 7467 03e4 39E0     		b	.L322
 7468              	.L348:
2180:main.c        ****                         }
2181:main.c        ****                         else
2182:main.c        ****                         {
2183:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7469              		.loc 1 2183 0
 7470 03e6 BA8B     		ldrh	r2, [r7, #28]
 7471 03e8 204B     		ldr	r3, .L351+4
 7472 03ea 1B68     		ldr	r3, [r3]
 7473 03ec 591C     		adds	r1, r3, #1
 7474 03ee 1F48     		ldr	r0, .L351+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 172


 7475 03f0 0160     		str	r1, [r0]
 7476 03f2 D418     		adds	r4, r2, r3
 7477 03f4 BB68     		ldr	r3, [r7, #8]	@ float
 7478 03f6 1846     		mov	r0, r3
 7479 03f8 FFF7FEFF 		bl	__aeabi_f2uiz
 7480 03fc 0346     		mov	r3, r0
 7481 03fe DAB2     		uxtb	r2, r3
 7482 0400 1E4B     		ldr	r3, .L351+20
 7483 0402 1A55     		strb	r2, [r3, r4]
 7484 0404 29E0     		b	.L322
 7485              	.L324:
 7486              	.LBB43:
2184:main.c        ****                         }
2185:main.c        ****                     }
2186:main.c        ****                     else
2187:main.c        ****                     {
2188:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 7487              		.loc 1 2188 0
 7488 0406 BB68     		ldr	r3, [r7, #8]	@ float
 7489 0408 2649     		ldr	r1, .L351+60
 7490 040a 1846     		mov	r0, r3
 7491 040c FFF7FEFF 		bl	__aeabi_fmul
 7492 0410 0346     		mov	r3, r0
 7493 0412 1846     		mov	r0, r3
 7494 0414 FFF7FEFF 		bl	__aeabi_f2iz
 7495 0418 0346     		mov	r3, r0
 7496 041a 3B83     		strh	r3, [r7, #24]	@ movhi
2189:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 7497              		.loc 1 2189 0
 7498 041c BA8B     		ldrh	r2, [r7, #28]
 7499 041e 134B     		ldr	r3, .L351+4
 7500 0420 1B68     		ldr	r3, [r3]
 7501 0422 591C     		adds	r1, r3, #1
 7502 0424 1148     		ldr	r0, .L351+4
 7503 0426 0160     		str	r1, [r0]
 7504 0428 1344     		add	r3, r3, r2
 7505 042a B7F91820 		ldrsh	r2, [r7, #24]
 7506 042e 1212     		asrs	r2, r2, #8
 7507 0430 12B2     		sxth	r2, r2
 7508 0432 D1B2     		uxtb	r1, r2
 7509 0434 114A     		ldr	r2, .L351+20
 7510 0436 D154     		strb	r1, [r2, r3]
2190:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7511              		.loc 1 2190 0
 7512 0438 BA8B     		ldrh	r2, [r7, #28]
 7513 043a 0C4B     		ldr	r3, .L351+4
 7514 043c 1B68     		ldr	r3, [r3]
 7515 043e 591C     		adds	r1, r3, #1
 7516 0440 0A48     		ldr	r0, .L351+4
 7517 0442 0160     		str	r1, [r0]
 7518 0444 1344     		add	r3, r3, r2
 7519 0446 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 7520 0448 D1B2     		uxtb	r1, r2
 7521 044a 0C4A     		ldr	r2, .L351+20
 7522 044c D154     		strb	r1, [r2, r3]
2191:main.c        ****                         numMappings++;
 7523              		.loc 1 2191 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 173


 7524 044e 144B     		ldr	r3, .L351+56
 7525 0450 1B88     		ldrh	r3, [r3]
 7526 0452 0133     		adds	r3, r3, #1
 7527 0454 9AB2     		uxth	r2, r3
 7528 0456 124B     		ldr	r3, .L351+56
 7529 0458 1A80     		strh	r2, [r3]	@ movhi
 7530              	.L322:
 7531              	.LBE43:
2192:main.c        ****                     }
2193:main.c        ****                     mapCount++;
 7532              		.loc 1 2193 0
 7533 045a 0A4B     		ldr	r3, .L351+28
 7534 045c 1B68     		ldr	r3, [r3]
 7535 045e 0133     		adds	r3, r3, #1
 7536 0460 084A     		ldr	r2, .L351+28
 7537 0462 1360     		str	r3, [r2]
 7538 0464 6BE0     		b	.L318
 7539              	.L352:
 7540 0466 00BF     		.align	2
 7541              	.L351:
 7542 0468 00000000 		.word	valsCount
 7543 046c 00000000 		.word	currentFloat
 7544 0470 00000000 		.word	valCheck
 7545 0474 0000C0BF 		.word	-1077936128
 7546 0478 000020C0 		.word	-1071644672
 7547 047c 00000000 		.word	presetArray
 7548 0480 00000000 		.word	presetArraySection
 7549 0484 00000000 		.word	mapCount
 7550 0488 00000000 		.word	SPI_errors
 7551 048c 00000000 		.word	sysexMessageInProgress
 7552 0490 00000000 		.word	sysexPointer
 7553 0494 00000000 		.word	sendingMessage
 7554 0498 00000000 		.word	parseThatMF
 7555 049c 00000000 		.word	mapCountExpectation
 7556 04a0 00000000 		.word	numMappings
 7557 04a4 00FEFF46 		.word	1191181824
 7558              	.L320:
2194:main.c        ****                 }
2195:main.c        ****                 
2196:main.c        **** 
2197:main.c        ****                 else
2198:main.c        ****                 {
2199:main.c        ****                     //mapcount ended
2200:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 7559              		.loc 1 2200 0
 7560 04a8 BB68     		ldr	r3, [r7, #8]	@ float
 7561 04aa 6349     		ldr	r1, .L353
 7562 04ac 1846     		mov	r0, r3
 7563 04ae FFF7FEFF 		bl	__aeabi_fcmplt
 7564 04b2 0346     		mov	r3, r0
 7565 04b4 002B     		cmp	r3, #0
 7566 04b6 31D0     		beq	.L328
 7567              		.loc 1 2200 0 is_stmt 0 discriminator 1
 7568 04b8 BB68     		ldr	r3, [r7, #8]	@ float
 7569 04ba 6049     		ldr	r1, .L353+4
 7570 04bc 1846     		mov	r0, r3
 7571 04be FFF7FEFF 		bl	__aeabi_fcmpgt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 174


 7572 04c2 0346     		mov	r3, r0
 7573 04c4 002B     		cmp	r3, #0
 7574 04c6 29D0     		beq	.L328
2201:main.c        ****                     {
2202:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 7575              		.loc 1 2202 0 is_stmt 1
 7576 04c8 BA8B     		ldrh	r2, [r7, #28]
 7577 04ca 5D4B     		ldr	r3, .L353+8
 7578 04cc 1B68     		ldr	r3, [r3]
 7579 04ce 591C     		adds	r1, r3, #1
 7580 04d0 5B48     		ldr	r0, .L353+8
 7581 04d2 0160     		str	r1, [r0]
 7582 04d4 1344     		add	r3, r3, r2
 7583 04d6 5B4A     		ldr	r2, .L353+12
 7584 04d8 FE21     		movs	r1, #254
 7585 04da D154     		strb	r1, [r2, r3]
2203:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 7586              		.loc 1 2203 0
 7587 04dc BA8B     		ldrh	r2, [r7, #28]
 7588 04de 584B     		ldr	r3, .L353+8
 7589 04e0 1B68     		ldr	r3, [r3]
 7590 04e2 591C     		adds	r1, r3, #1
 7591 04e4 5648     		ldr	r0, .L353+8
 7592 04e6 0160     		str	r1, [r0]
 7593 04e8 1344     		add	r3, r3, r2
 7594 04ea 564A     		ldr	r2, .L353+12
 7595 04ec FE21     		movs	r1, #254
 7596 04ee D154     		strb	r1, [r2, r3]
2204:main.c        ****                         presetArraySection = presetEnd;
 7597              		.loc 1 2204 0
 7598 04f0 554B     		ldr	r3, .L353+16
 7599 04f2 0522     		movs	r2, #5
 7600 04f4 1A70     		strb	r2, [r3]
2205:main.c        ****                         sysexMessageInProgress = 0;
 7601              		.loc 1 2205 0
 7602 04f6 554B     		ldr	r3, .L353+20
 7603 04f8 0022     		movs	r2, #0
 7604 04fa 1A70     		strb	r2, [r3]
2206:main.c        ****                         sendingMessage = 1;
 7605              		.loc 1 2206 0
 7606 04fc 544B     		ldr	r3, .L353+24
 7607 04fe 0122     		movs	r2, #1
 7608 0500 1A70     		strb	r2, [r3]
2207:main.c        ****                         patchNum = presetNumberToWrite;
 7609              		.loc 1 2207 0
 7610 0502 544B     		ldr	r3, .L353+28
 7611 0504 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7612 0506 544B     		ldr	r3, .L353+32
 7613 0508 1A70     		strb	r2, [r3]
2208:main.c        ****                         messageArraySize = valsStart + currentFloat;
 7614              		.loc 1 2208 0
 7615 050a 4D4B     		ldr	r3, .L353+8
 7616 050c 1B68     		ldr	r3, [r3]
 7617 050e 9AB2     		uxth	r2, r3
 7618 0510 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 7619 0512 1344     		add	r3, r3, r2
 7620 0514 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 175


 7621 0516 514B     		ldr	r3, .L353+36
 7622 0518 1A80     		strh	r2, [r3]	@ movhi
 7623 051a 10E0     		b	.L318
 7624              	.L328:
2209:main.c        ****                     }
2210:main.c        ****                     else
2211:main.c        ****                     {
2212:main.c        ****                         //error state
2213:main.c        ****                         SPI_errors++;
 7625              		.loc 1 2213 0
 7626 051c 504B     		ldr	r3, .L353+40
 7627 051e 1B68     		ldr	r3, [r3]
 7628 0520 0133     		adds	r3, r3, #1
 7629 0522 4F4A     		ldr	r2, .L353+40
 7630 0524 1360     		str	r3, [r2]
2214:main.c        ****                         sysexMessageInProgress = 0;
 7631              		.loc 1 2214 0
 7632 0526 494B     		ldr	r3, .L353+20
 7633 0528 0022     		movs	r2, #0
 7634 052a 1A70     		strb	r2, [r3]
2215:main.c        ****                         sysexPointer = 0;
 7635              		.loc 1 2215 0
 7636 052c 4D4B     		ldr	r3, .L353+44
 7637 052e 0022     		movs	r2, #0
 7638 0530 1A60     		str	r2, [r3]
2216:main.c        ****                         sendingMessage = 0;
 7639              		.loc 1 2216 0
 7640 0532 474B     		ldr	r3, .L353+24
 7641 0534 0022     		movs	r2, #0
 7642 0536 1A70     		strb	r2, [r3]
2217:main.c        ****                         parseThatMF = 0;
 7643              		.loc 1 2217 0
 7644 0538 4B4B     		ldr	r3, .L353+48
 7645 053a 0022     		movs	r2, #0
 7646 053c 1A70     		strb	r2, [r3]
 7647              	.L318:
2108:main.c        ****         {
 7648              		.loc 1 2108 0
 7649 053e 7B6B     		ldr	r3, [r7, #52]
 7650 0540 0533     		adds	r3, r3, #5
 7651 0542 7B63     		str	r3, [r7, #52]
 7652              	.L310:
2108:main.c        ****         {
 7653              		.loc 1 2108 0 is_stmt 0 discriminator 1
 7654 0544 474B     		ldr	r3, .L353+44
 7655 0546 1B68     		ldr	r3, [r3]
 7656 0548 7A6B     		ldr	r2, [r7, #52]
 7657 054a 9A42     		cmp	r2, r3
 7658 054c FFF4E0AD 		bcc	.L331
 7659 0550 63E1     		b	.L332
 7660              	.L303:
 7661              	.LBE39:
2218:main.c        ****                     }
2219:main.c        ****                 }
2220:main.c        ****             }
2221:main.c        ****             
2222:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 176


2223:main.c        ****     }
2224:main.c        ****     #if 0
2225:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2226:main.c        ****     {
2227:main.c        ****         
2228:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
2229:main.c        ****         currentFloat = 0;
2230:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2231:main.c        ****         union breakFloat theVal;
2232:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2233:main.c        ****         {
2234:main.c        ****             theVal.u32 = 0;
2235:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2236:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2237:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2238:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2239:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
2240:main.c        ****             testVal = theVal.f;
2241:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2242:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2243:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2244:main.c        ****         }
2245:main.c        ****         
2246:main.c        ****         tuningArray[currentFloat++] = 0xef;
2247:main.c        ****         tuningArray[currentFloat++] = 0xef;
2248:main.c        ****                         
2249:main.c        ****         
2250:main.c        ****         messageArraySize = currentFloat;
2251:main.c        ****                     
2252:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
2253:main.c        ****         {
2254:main.c        ****             //error state
2255:main.c        ****             SPI_errors++;
2256:main.c        ****             sysexMessageInProgress = 0;
2257:main.c        ****             sysexPointer = 0;
2258:main.c        ****             sendingMessage = 0;
2259:main.c        ****             parseThatMF = 0;
2260:main.c        ****         } else 
2261:main.c        ****         {
2262:main.c        ****             sysexMessageInProgress = 0;
2263:main.c        ****             sendingMessage = 2;
2264:main.c        ****         }
2265:main.c        ****     }
2266:main.c        ****     #endif
2267:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 7662              		.loc 1 2267 0 is_stmt 1
 7663 0552 464B     		ldr	r3, .L353+52
 7664 0554 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7665 0556 022B     		cmp	r3, #2
 7666 0558 40F05F81 		bne	.L332
 7667              	.LBB44:
2268:main.c        ****     {
2269:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7668              		.loc 1 2269 0
 7669 055c 3B4B     		ldr	r3, .L353+20
 7670 055e 0122     		movs	r2, #1
 7671 0560 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 177


2270:main.c        ****         currentFloat = 0;
 7672              		.loc 1 2270 0
 7673 0562 374B     		ldr	r3, .L353+8
 7674 0564 0022     		movs	r2, #0
 7675 0566 1A60     		str	r2, [r3]
2271:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 7676              		.loc 1 2271 0
 7677 0568 404B     		ldr	r3, .L353+52
 7678 056a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7679 056c 404B     		ldr	r3, .L353+56
 7680 056e 1A70     		strb	r2, [r3]
2272:main.c        ****         currentCopedent = copedentNumberToWrite;
 7681              		.loc 1 2272 0
 7682 0570 3F4B     		ldr	r3, .L353+56
 7683 0572 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7684 0574 3F4B     		ldr	r3, .L353+60
 7685 0576 1A70     		strb	r2, [r3]
2273:main.c        ****         necks[currentNeck] = currentCopedent;
 7686              		.loc 1 2273 0
 7687 0578 3F4B     		ldr	r3, .L353+64
 7688 057a 1B68     		ldr	r3, [r3]
 7689 057c 3D4A     		ldr	r2, .L353+60
 7690 057e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 7691 0580 3E4A     		ldr	r2, .L353+68
 7692 0582 D154     		strb	r1, [r2, r3]
2274:main.c        **** 
2275:main.c        ****               
2276:main.c        ****         
2277:main.c        ****         union breakFloat theVal;
2278:main.c        ****         uint32_t i = 2;
 7693              		.loc 1 2278 0
 7694 0584 0223     		movs	r3, #2
 7695 0586 BB62     		str	r3, [r7, #40]
2279:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 7696              		.loc 1 2279 0
 7697 0588 1023     		movs	r3, #16
 7698 058a FB75     		strb	r3, [r7, #23]
2280:main.c        ****         for (; i < stoppingPoint; i++)
 7699              		.loc 1 2280 0
 7700 058c 40E0     		b	.L333
 7701              	.L334:
 7702              	.LBB45:
2281:main.c        ****         {
2282:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2283:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 7703              		.loc 1 2283 0 discriminator 2
 7704 058e 374A     		ldr	r2, .L353+52
 7705 0590 BB6A     		ldr	r3, [r7, #40]
 7706 0592 1344     		add	r3, r3, r2
 7707 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7708 0596 03F07F03 		and	r3, r3, #127
 7709 059a BB75     		strb	r3, [r7, #22]
2284:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 7710              		.loc 1 2284 0 discriminator 2
 7711 059c 344B     		ldr	r3, .L353+56
 7712 059e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7713 05a0 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 178


 7714 05a2 BB6A     		ldr	r3, [r7, #40]
 7715 05a4 9A1E     		subs	r2, r3, #2
 7716 05a6 3649     		ldr	r1, .L353+72
 7717 05a8 0346     		mov	r3, r0
 7718 05aa DB00     		lsls	r3, r3, #3
 7719 05ac 1B1A     		subs	r3, r3, r0
 7720 05ae 5B00     		lsls	r3, r3, #1
 7721 05b0 0B44     		add	r3, r3, r1
 7722 05b2 1344     		add	r3, r3, r2
 7723 05b4 BA7D     		ldrb	r2, [r7, #22]
 7724 05b6 1A70     		strb	r2, [r3]
2285:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 7725              		.loc 1 2285 0 discriminator 2
 7726 05b8 2D4B     		ldr	r3, .L353+56
 7727 05ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7728 05bc 9BB2     		uxth	r3, r3
 7729 05be 1A46     		mov	r2, r3	@ movhi
 7730 05c0 1201     		lsls	r2, r2, #4
 7731 05c2 1A44     		add	r2, r2, r3
 7732 05c4 9200     		lsls	r2, r2, #2
 7733 05c6 1A44     		add	r2, r2, r3
 7734 05c8 5200     		lsls	r2, r2, #1
 7735 05ca 1344     		add	r3, r3, r2
 7736 05cc 5B00     		lsls	r3, r3, #1
 7737 05ce 9BB2     		uxth	r3, r3
 7738 05d0 0233     		adds	r3, r3, #2
 7739 05d2 9AB2     		uxth	r2, r3
 7740 05d4 2B4B     		ldr	r3, .L353+76
 7741 05d6 1A80     		strh	r2, [r3]	@ movhi
2286:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 7742              		.loc 1 2286 0 discriminator 2
 7743 05d8 254B     		ldr	r3, .L353+56
 7744 05da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7745 05dc 9BB2     		uxth	r3, r3
 7746 05de 1A46     		mov	r2, r3	@ movhi
 7747 05e0 1201     		lsls	r2, r2, #4
 7748 05e2 1A44     		add	r2, r2, r3
 7749 05e4 9200     		lsls	r2, r2, #2
 7750 05e6 1A44     		add	r2, r2, r3
 7751 05e8 5200     		lsls	r2, r2, #1
 7752 05ea 1344     		add	r3, r3, r2
 7753 05ec 5B00     		lsls	r3, r3, #1
 7754 05ee 9AB2     		uxth	r2, r3
 7755 05f0 BB6A     		ldr	r3, [r7, #40]
 7756 05f2 9BB2     		uxth	r3, r3
 7757 05f4 1344     		add	r3, r3, r2
 7758 05f6 9AB2     		uxth	r2, r3
 7759 05f8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7760 05fa 1146     		mov	r1, r2
 7761 05fc 1846     		mov	r0, r3
 7762 05fe FFF7FEFF 		bl	EEPROM_WriteByte
 7763 0602 0346     		mov	r3, r0
 7764 0604 DAB2     		uxtb	r2, r3
 7765 0606 204B     		ldr	r3, .L353+80
 7766 0608 1A70     		strb	r2, [r3]
 7767              	.LBE45:
2280:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 179


 7768              		.loc 1 2280 0 discriminator 2
 7769 060a BB6A     		ldr	r3, [r7, #40]
 7770 060c 0133     		adds	r3, r3, #1
 7771 060e BB62     		str	r3, [r7, #40]
 7772              	.L333:
2280:main.c        ****         {
 7773              		.loc 1 2280 0 is_stmt 0 discriminator 1
 7774 0610 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7775 0612 BB6A     		ldr	r3, [r7, #40]
 7776 0614 9A42     		cmp	r2, r3
 7777 0616 BAD8     		bhi	.L334
2287:main.c        ****         }
2288:main.c        ****         
2289:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 7778              		.loc 1 2289 0 is_stmt 1
 7779 0618 1023     		movs	r3, #16
 7780 061a BB62     		str	r3, [r7, #40]
2290:main.c        **** 
2291:main.c        ****  
2292:main.c        ****         while(i < sysexPointer)
 7781              		.loc 1 2292 0
 7782 061c D7E0     		b	.L335
 7783              	.L340:
 7784              	.LBB46:
2293:main.c        ****         {
2294:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 7785              		.loc 1 2294 0
 7786 061e 0023     		movs	r3, #0
 7787 0620 7B62     		str	r3, [r7, #36]
 7788 0622 D0E0     		b	.L336
 7789              	.L339:
 7790              	.LBB47:
2295:main.c        ****             {
2296:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 7791              		.loc 1 2296 0
 7792 0624 7B6A     		ldr	r3, [r7, #36]
 7793 0626 9BB2     		uxth	r3, r3
 7794 0628 1A46     		mov	r2, r3	@ movhi
 7795 062a 5200     		lsls	r2, r2, #1
 7796 062c 1344     		add	r3, r3, r2
 7797 062e DB00     		lsls	r3, r3, #3
 7798 0630 BB82     		strh	r3, [r7, #20]	@ movhi
 7799              	.LBB48:
2297:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 7800              		.loc 1 2297 0
 7801 0632 0023     		movs	r3, #0
 7802 0634 3B62     		str	r3, [r7, #32]
 7803 0636 BFE0     		b	.L337
 7804              	.L354:
 7805              		.align	2
 7806              	.L353:
 7807 0638 000020C0 		.word	-1071644672
 7808 063c 000060C0 		.word	-1067450368
 7809 0640 00000000 		.word	currentFloat
 7810 0644 00000000 		.word	presetArray
 7811 0648 00000000 		.word	presetArraySection
 7812 064c 00000000 		.word	sysexMessageInProgress
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 180


 7813 0650 00000000 		.word	sendingMessage
 7814 0654 00000000 		.word	presetNumberToWrite
 7815 0658 00000000 		.word	patchNum
 7816 065c 00000000 		.word	messageArraySize
 7817 0660 00000000 		.word	SPI_errors
 7818 0664 00000000 		.word	sysexPointer
 7819 0668 00000000 		.word	parseThatMF
 7820 066c 00000000 		.word	sysexBuffer
 7821 0670 00000000 		.word	copedentNumberToWrite
 7822 0674 00000000 		.word	currentCopedent
 7823 0678 00000000 		.word	currentNeck
 7824 067c 00000000 		.word	necks
 7825 0680 00000000 		.word	copedentNamesArray
 7826 0684 00000000 		.word	checkBase
 7827 0688 00000000 		.word	checkStatus
 7828              	.L338:
 7829              	.LBB49:
2298:main.c        ****                 {
2299:main.c        ****                     
2300:main.c        ****                     theVal.u32 = 0;
 7830              		.loc 1 2300 0 discriminator 3
 7831 068c 0023     		movs	r3, #0
 7832 068e 7B60     		str	r3, [r7, #4]
2301:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7833              		.loc 1 2301 0 discriminator 3
 7834 0690 7B68     		ldr	r3, [r7, #4]
 7835 0692 6849     		ldr	r1, .L355
 7836 0694 BA6A     		ldr	r2, [r7, #40]
 7837 0696 0A44     		add	r2, r2, r1
 7838 0698 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7839 069a 1207     		lsls	r2, r2, #28
 7840 069c 1343     		orrs	r3, r3, r2
 7841 069e 7B60     		str	r3, [r7, #4]
2302:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 7842              		.loc 1 2302 0 discriminator 3
 7843 06a0 7B68     		ldr	r3, [r7, #4]
 7844 06a2 BA6A     		ldr	r2, [r7, #40]
 7845 06a4 0132     		adds	r2, r2, #1
 7846 06a6 6349     		ldr	r1, .L355
 7847 06a8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7848 06aa 5205     		lsls	r2, r2, #21
 7849 06ac 1343     		orrs	r3, r3, r2
 7850 06ae 7B60     		str	r3, [r7, #4]
2303:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 7851              		.loc 1 2303 0 discriminator 3
 7852 06b0 7B68     		ldr	r3, [r7, #4]
 7853 06b2 BA6A     		ldr	r2, [r7, #40]
 7854 06b4 0232     		adds	r2, r2, #2
 7855 06b6 5F49     		ldr	r1, .L355
 7856 06b8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7857 06ba 9203     		lsls	r2, r2, #14
 7858 06bc 1343     		orrs	r3, r3, r2
 7859 06be 7B60     		str	r3, [r7, #4]
2304:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 7860              		.loc 1 2304 0 discriminator 3
 7861 06c0 7B68     		ldr	r3, [r7, #4]
 7862 06c2 BA6A     		ldr	r2, [r7, #40]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 181


 7863 06c4 0332     		adds	r2, r2, #3
 7864 06c6 5B49     		ldr	r1, .L355
 7865 06c8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7866 06ca D201     		lsls	r2, r2, #7
 7867 06cc 1343     		orrs	r3, r3, r2
 7868 06ce 7B60     		str	r3, [r7, #4]
2305:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 7869              		.loc 1 2305 0 discriminator 3
 7870 06d0 7A68     		ldr	r2, [r7, #4]
 7871 06d2 BB6A     		ldr	r3, [r7, #40]
 7872 06d4 0433     		adds	r3, r3, #4
 7873 06d6 5749     		ldr	r1, .L355
 7874 06d8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7875 06da 03F07F03 		and	r3, r3, #127
 7876 06de 1343     		orrs	r3, r3, r2
 7877 06e0 7B60     		str	r3, [r7, #4]
2306:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 7878              		.loc 1 2306 0 discriminator 3
 7879 06e2 554B     		ldr	r3, .L355+4
 7880 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7881 06e6 1C46     		mov	r4, r3
 7882 06e8 7968     		ldr	r1, [r7, #4]	@ float
 7883 06ea 5448     		ldr	r0, .L355+8
 7884 06ec 7B6A     		ldr	r3, [r7, #36]
 7885 06ee 1A46     		mov	r2, r3
 7886 06f0 5200     		lsls	r2, r2, #1
 7887 06f2 1A44     		add	r2, r2, r3
 7888 06f4 9300     		lsls	r3, r2, #2
 7889 06f6 1A46     		mov	r2, r3
 7890 06f8 2346     		mov	r3, r4
 7891 06fa 5B01     		lsls	r3, r3, #5
 7892 06fc 2344     		add	r3, r3, r4
 7893 06fe 9B00     		lsls	r3, r3, #2
 7894 0700 1A44     		add	r2, r2, r3
 7895 0702 3B6A     		ldr	r3, [r7, #32]
 7896 0704 1344     		add	r3, r3, r2
 7897 0706 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2307:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 7898              		.loc 1 2307 0 discriminator 3
 7899 070a 7B68     		ldr	r3, [r7, #4]	@ float
 7900 070c 4FF08741 		mov	r1, #1132462080
 7901 0710 1846     		mov	r0, r3
 7902 0712 FFF7FEFF 		bl	__aeabi_fmul
 7903 0716 0346     		mov	r3, r0
 7904 0718 4FF08E41 		mov	r1, #1191182336
 7905 071c 1846     		mov	r0, r3
 7906 071e FFF7FEFF 		bl	__aeabi_fadd
 7907 0722 0346     		mov	r3, r0
 7908 0724 1846     		mov	r0, r3
 7909 0726 FFF7FEFF 		bl	__aeabi_f2uiz
 7910 072a 0346     		mov	r3, r0
 7911 072c 7B82     		strh	r3, [r7, #18]	@ movhi
2308:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 7912              		.loc 1 2308 0 discriminator 3
 7913 072e 7B8A     		ldrh	r3, [r7, #18]
 7914 0730 1B0A     		lsrs	r3, r3, #8
 7915 0732 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 182


 7916 0734 7B74     		strb	r3, [r7, #17]
2309:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 7917              		.loc 1 2309 0 discriminator 3
 7918 0736 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 7919 0738 3B74     		strb	r3, [r7, #16]
2310:main.c        ****                     
2311:main.c        ****                     
2312:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 7920              		.loc 1 2312 0 discriminator 3
 7921 073a 3B6A     		ldr	r3, [r7, #32]
 7922 073c 9BB2     		uxth	r3, r3
 7923 073e 5B00     		lsls	r3, r3, #1
 7924 0740 FB81     		strh	r3, [r7, #14]	@ movhi
2313:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 7925              		.loc 1 2313 0 discriminator 3
 7926 0742 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7927 0744 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 7928 0746 1344     		add	r3, r3, r2
 7929 0748 9AB2     		uxth	r2, r3
 7930 074a 3B4B     		ldr	r3, .L355+4
 7931 074c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7932 074e 9BB2     		uxth	r3, r3
 7933 0750 1946     		mov	r1, r3	@ movhi
 7934 0752 0901     		lsls	r1, r1, #4
 7935 0754 1944     		add	r1, r1, r3
 7936 0756 8900     		lsls	r1, r1, #2
 7937 0758 1944     		add	r1, r1, r3
 7938 075a 4900     		lsls	r1, r1, #1
 7939 075c 0B44     		add	r3, r3, r1
 7940 075e 5B00     		lsls	r3, r3, #1
 7941 0760 9BB2     		uxth	r3, r3
 7942 0762 1344     		add	r3, r3, r2
 7943 0764 9BB2     		uxth	r3, r3
 7944 0766 1033     		adds	r3, r3, #16
 7945 0768 9AB2     		uxth	r2, r3
 7946 076a 354B     		ldr	r3, .L355+12
 7947 076c 1A80     		strh	r2, [r3]	@ movhi
2314:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 7948              		.loc 1 2314 0 discriminator 3
 7949 076e 344B     		ldr	r3, .L355+12
 7950 0770 1B88     		ldrh	r3, [r3]	@ movhi
 7951 0772 9AB2     		uxth	r2, r3
 7952 0774 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 7953 0776 1146     		mov	r1, r2
 7954 0778 1846     		mov	r0, r3
 7955 077a FFF7FEFF 		bl	EEPROM_WriteByte
 7956 077e 0346     		mov	r3, r0
 7957 0780 DAB2     		uxtb	r2, r3
 7958 0782 304B     		ldr	r3, .L355+16
 7959 0784 1A70     		strb	r2, [r3]
2315:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 7960              		.loc 1 2315 0 discriminator 3
 7961 0786 2E4B     		ldr	r3, .L355+12
 7962 0788 1B88     		ldrh	r3, [r3]	@ movhi
 7963 078a 9BB2     		uxth	r3, r3
 7964 078c 0133     		adds	r3, r3, #1
 7965 078e 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 183


 7966 0790 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 7967 0792 1146     		mov	r1, r2
 7968 0794 1846     		mov	r0, r3
 7969 0796 FFF7FEFF 		bl	EEPROM_WriteByte
 7970 079a 0346     		mov	r3, r0
 7971 079c DAB2     		uxtb	r2, r3
 7972 079e 294B     		ldr	r3, .L355+16
 7973 07a0 1A70     		strb	r2, [r3]
2316:main.c        ****                     currentFloat++;
 7974              		.loc 1 2316 0 discriminator 3
 7975 07a2 294B     		ldr	r3, .L355+20
 7976 07a4 1B68     		ldr	r3, [r3]
 7977 07a6 0133     		adds	r3, r3, #1
 7978 07a8 274A     		ldr	r2, .L355+20
 7979 07aa 1360     		str	r3, [r2]
2317:main.c        ****                     i = i+5;
 7980              		.loc 1 2317 0 discriminator 3
 7981 07ac BB6A     		ldr	r3, [r7, #40]
 7982 07ae 0533     		adds	r3, r3, #5
 7983 07b0 BB62     		str	r3, [r7, #40]
 7984              	.LBE49:
2297:main.c        ****                 {
 7985              		.loc 1 2297 0 discriminator 3
 7986 07b2 3B6A     		ldr	r3, [r7, #32]
 7987 07b4 0133     		adds	r3, r3, #1
 7988 07b6 3B62     		str	r3, [r7, #32]
 7989              	.L337:
2297:main.c        ****                 {
 7990              		.loc 1 2297 0 is_stmt 0 discriminator 1
 7991 07b8 3B6A     		ldr	r3, [r7, #32]
 7992 07ba 0B2B     		cmp	r3, #11
 7993 07bc 7FF666AF 		bls	.L338
 7994              	.LBE48:
 7995              	.LBE47:
2294:main.c        ****             {
 7996              		.loc 1 2294 0 is_stmt 1 discriminator 2
 7997 07c0 7B6A     		ldr	r3, [r7, #36]
 7998 07c2 0133     		adds	r3, r3, #1
 7999 07c4 7B62     		str	r3, [r7, #36]
 8000              	.L336:
2294:main.c        ****             {
 8001              		.loc 1 2294 0 is_stmt 0 discriminator 1
 8002 07c6 7B6A     		ldr	r3, [r7, #36]
 8003 07c8 0A2B     		cmp	r3, #10
 8004 07ca 7FF62BAF 		bls	.L339
 8005              	.L335:
 8006              	.LBE46:
2292:main.c        ****         {
 8007              		.loc 1 2292 0 is_stmt 1
 8008 07ce 1F4B     		ldr	r3, .L355+24
 8009 07d0 1B68     		ldr	r3, [r3]
 8010 07d2 BA6A     		ldr	r2, [r7, #40]
 8011 07d4 9A42     		cmp	r2, r3
 8012 07d6 FFF422AF 		bcc	.L340
2318:main.c        ****                 }
2319:main.c        ****                 
2320:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 184


2321:main.c        ****         }
2322:main.c        ****                         
2323:main.c        ****         
2324:main.c        ****         messageArraySize = currentFloat;
 8013              		.loc 1 2324 0
 8014 07da 1B4B     		ldr	r3, .L355+20
 8015 07dc 1B68     		ldr	r3, [r3]
 8016 07de 9AB2     		uxth	r2, r3
 8017 07e0 1B4B     		ldr	r3, .L355+28
 8018 07e2 1A80     		strh	r2, [r3]	@ movhi
2325:main.c        ****                     
2326:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 8019              		.loc 1 2326 0
 8020 07e4 1A4B     		ldr	r3, .L355+28
 8021 07e6 1B88     		ldrh	r3, [r3]
 8022 07e8 842B     		cmp	r3, #132
 8023 07ea 11D0     		beq	.L341
2327:main.c        ****         {
2328:main.c        ****             //error state
2329:main.c        ****             SPI_errors++;
 8024              		.loc 1 2329 0
 8025 07ec 194B     		ldr	r3, .L355+32
 8026 07ee 1B68     		ldr	r3, [r3]
 8027 07f0 0133     		adds	r3, r3, #1
 8028 07f2 184A     		ldr	r2, .L355+32
 8029 07f4 1360     		str	r3, [r2]
2330:main.c        ****             sysexMessageInProgress = 0;
 8030              		.loc 1 2330 0
 8031 07f6 184B     		ldr	r3, .L355+36
 8032 07f8 0022     		movs	r2, #0
 8033 07fa 1A70     		strb	r2, [r3]
2331:main.c        ****             sysexPointer = 0;
 8034              		.loc 1 2331 0
 8035 07fc 134B     		ldr	r3, .L355+24
 8036 07fe 0022     		movs	r2, #0
 8037 0800 1A60     		str	r2, [r3]
2332:main.c        ****             sendingMessage = 0;
 8038              		.loc 1 2332 0
 8039 0802 164B     		ldr	r3, .L355+40
 8040 0804 0022     		movs	r2, #0
 8041 0806 1A70     		strb	r2, [r3]
2333:main.c        ****             parseThatMF = 0;
 8042              		.loc 1 2333 0
 8043 0808 154B     		ldr	r3, .L355+44
 8044 080a 0022     		movs	r2, #0
 8045 080c 1A70     		strb	r2, [r3]
 8046 080e 04E0     		b	.L332
 8047              	.L341:
2334:main.c        ****         } 
2335:main.c        ****         else 
2336:main.c        ****         {
2337:main.c        ****             sysexMessageInProgress = 0;
 8048              		.loc 1 2337 0
 8049 0810 114B     		ldr	r3, .L355+36
 8050 0812 0022     		movs	r2, #0
 8051 0814 1A70     		strb	r2, [r3]
2338:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 185


2339:main.c        ****             
2340:main.c        ****             displayCurrentPresetNameAndCopedent();
 8052              		.loc 1 2340 0
 8053 0816 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 8054              	.L332:
 8055              	.LBE44:
2341:main.c        ****         }
2342:main.c        ****     }
2343:main.c        ****     
2344:main.c        **** 
2345:main.c        ****     parsingSysex = 0;
 8056              		.loc 1 2345 0
 8057 081a 124B     		ldr	r3, .L355+48
 8058 081c 0022     		movs	r2, #0
 8059 081e 1A70     		strb	r2, [r3]
2346:main.c        ****     sysexPointer = 0;
 8060              		.loc 1 2346 0
 8061 0820 0A4B     		ldr	r3, .L355+24
 8062 0822 0022     		movs	r2, #0
 8063 0824 1A60     		str	r2, [r3]
2347:main.c        ****     parseThatMF = 0;
 8064              		.loc 1 2347 0
 8065 0826 0E4B     		ldr	r3, .L355+44
 8066 0828 0022     		movs	r2, #0
 8067 082a 1A70     		strb	r2, [r3]
2348:main.c        **** }
 8068              		.loc 1 2348 0
 8069 082c 00BF     		nop
 8070 082e 3C37     		adds	r7, r7, #60
 8071              		.cfi_def_cfa_offset 12
 8072 0830 BD46     		mov	sp, r7
 8073              		.cfi_def_cfa_register 13
 8074              		@ sp needed
 8075 0832 90BD     		pop	{r4, r7, pc}
 8076              	.L356:
 8077              		.align	2
 8078              	.L355:
 8079 0834 00000000 		.word	sysexBuffer
 8080 0838 00000000 		.word	copedentNumberToWrite
 8081 083c 00000000 		.word	copedent
 8082 0840 00000000 		.word	checkBase
 8083 0844 00000000 		.word	checkStatus
 8084 0848 00000000 		.word	currentFloat
 8085 084c 00000000 		.word	sysexPointer
 8086 0850 00000000 		.word	messageArraySize
 8087 0854 00000000 		.word	SPI_errors
 8088 0858 00000000 		.word	sysexMessageInProgress
 8089 085c 00000000 		.word	sendingMessage
 8090 0860 00000000 		.word	parseThatMF
 8091 0864 00000000 		.word	parsingSysex
 8092              		.cfi_endproc
 8093              	.LFE92:
 8094              		.size	parseSysex, .-parseSysex
 8095              		.comm	tempMIDI,4,4
 8096              		.global	firstSysex
 8097              		.bss
 8098              		.type	firstSysex, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 186


 8099              		.size	firstSysex, 1
 8100              	firstSysex:
 8101 0100 00       		.space	1
 8102              		.global	sysexPointerMask
 8103              		.section	.rodata
 8104              		.align	1
 8105              		.type	sysexPointerMask, %object
 8106              		.size	sysexPointerMask, 2
 8107              	sysexPointerMask:
 8108 0402 FF07     		.short	2047
 8109              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 8110              		.align	2
 8111              		.global	USB_callbackLocalMidiEvent
 8112              		.thumb
 8113              		.thumb_func
 8114              		.type	USB_callbackLocalMidiEvent, %function
 8115              	USB_callbackLocalMidiEvent:
 8116              	.LFB93:
2349:main.c        **** 
2350:main.c        **** volatile uint8_t tempMIDI[4];
2351:main.c        **** volatile uint8_t firstSysex = 0;
2352:main.c        **** const uint16_t sysexPointerMask = 2047;
2353:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2354:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2355:main.c        **** {   
 8117              		.loc 1 2355 0
 8118              		.cfi_startproc
 8119              		@ args = 0, pretend = 0, frame = 16
 8120              		@ frame_needed = 1, uses_anonymous_args = 0
 8121 0000 80B5     		push	{r7, lr}
 8122              		.cfi_def_cfa_offset 8
 8123              		.cfi_offset 7, -8
 8124              		.cfi_offset 14, -4
 8125 0002 84B0     		sub	sp, sp, #16
 8126              		.cfi_def_cfa_offset 24
 8127 0004 00AF     		add	r7, sp, #0
 8128              		.cfi_def_cfa_register 7
 8129 0006 0346     		mov	r3, r0
 8130 0008 3960     		str	r1, [r7]
 8131 000a FB71     		strb	r3, [r7, #7]
2356:main.c        ****     tempMIDI[0] = midiMsg[0];
 8132              		.loc 1 2356 0
 8133 000c 3B68     		ldr	r3, [r7]
 8134 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8135 0010 434B     		ldr	r3, .L367
 8136 0012 1A70     		strb	r2, [r3]
2357:main.c        ****     tempMIDI[1] = midiMsg[1];
 8137              		.loc 1 2357 0
 8138 0014 3B68     		ldr	r3, [r7]
 8139 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8140 0018 414B     		ldr	r3, .L367
 8141 001a 5A70     		strb	r2, [r3, #1]
2358:main.c        ****      tempMIDI[2] = midiMsg[2];
 8142              		.loc 1 2358 0
 8143 001c 3B68     		ldr	r3, [r7]
 8144 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 8145 0020 3F4B     		ldr	r3, .L367
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 187


 8146 0022 9A70     		strb	r2, [r3, #2]
2359:main.c        ****      tempMIDI[3] = midiMsg[3];
 8147              		.loc 1 2359 0
 8148 0024 3B68     		ldr	r3, [r7]
 8149 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 8150 0028 3D4B     		ldr	r3, .L367
 8151 002a DA70     		strb	r2, [r3, #3]
2360:main.c        ****     //check that we got here
2361:main.c        ****     
2362:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 8152              		.loc 1 2362 0
 8153 002c 3D4B     		ldr	r3, .L367+4
 8154 002e 1B78     		ldrb	r3, [r3]
 8155 0030 DBB2     		uxtb	r3, r3
 8156 0032 002B     		cmp	r3, #0
 8157 0034 71D0     		beq	.L357
 8158              		.loc 1 2362 0 is_stmt 0 discriminator 1
 8159 0036 FFF7FEFF 		bl	USB_VBusPresent
 8160 003a 0346     		mov	r3, r0
 8161 003c 002B     		cmp	r3, #0
 8162 003e 6CD0     		beq	.L357
2363:main.c        ****     {
2364:main.c        ****         if (receivingSysex)
 8163              		.loc 1 2364 0 is_stmt 1
 8164 0040 394B     		ldr	r3, .L367+8
 8165 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8166 0044 002B     		cmp	r3, #0
 8167 0046 29D0     		beq	.L359
 8168              	.LBB50:
2365:main.c        ****         {
2366:main.c        ****             for (int i = 0; i < 3; i++)
 8169              		.loc 1 2366 0
 8170 0048 0023     		movs	r3, #0
 8171 004a FB60     		str	r3, [r7, #12]
 8172 004c 22E0     		b	.L360
 8173              	.L363:
2367:main.c        ****             {
2368:main.c        ****                 if (midiMsg[i] < 128)
 8174              		.loc 1 2368 0
 8175 004e FB68     		ldr	r3, [r7, #12]
 8176 0050 3A68     		ldr	r2, [r7]
 8177 0052 1344     		add	r3, r3, r2
 8178 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8179 0056 5BB2     		sxtb	r3, r3
 8180 0058 002B     		cmp	r3, #0
 8181 005a 0EDB     		blt	.L361
2369:main.c        ****                 {
2370:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 8182              		.loc 1 2370 0
 8183 005c 334B     		ldr	r3, .L367+12
 8184 005e 1B68     		ldr	r3, [r3]
 8185 0060 5A1C     		adds	r2, r3, #1
 8186 0062 3249     		ldr	r1, .L367+12
 8187 0064 0A60     		str	r2, [r1]
 8188 0066 40F2FF72 		movw	r2, #2047
 8189 006a 1340     		ands	r3, r3, r2
 8190 006c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 188


 8191 006e 3968     		ldr	r1, [r7]
 8192 0070 0A44     		add	r2, r2, r1
 8193 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 8194 0074 2E4A     		ldr	r2, .L367+16
 8195 0076 D154     		strb	r1, [r2, r3]
 8196 0078 09E0     		b	.L362
 8197              	.L361:
2371:main.c        ****                 }
2372:main.c        ****                 else
2373:main.c        ****                 {
2374:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 8198              		.loc 1 2374 0
 8199 007a FB68     		ldr	r3, [r7, #12]
 8200 007c 3A68     		ldr	r2, [r7]
 8201 007e 1344     		add	r3, r3, r2
 8202 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8203 0082 F72B     		cmp	r3, #247
 8204 0084 03D1     		bne	.L362
2375:main.c        ****                     {
2376:main.c        ****                         receivingSysex = 0;
 8205              		.loc 1 2376 0
 8206 0086 284B     		ldr	r3, .L367+8
 8207 0088 0022     		movs	r2, #0
 8208 008a 1A70     		strb	r2, [r3]
2377:main.c        ****                         //parseSysex();
2378:main.c        ****                         return;
 8209              		.loc 1 2378 0
 8210 008c 45E0     		b	.L357
 8211              	.L362:
2366:main.c        ****             {
 8212              		.loc 1 2366 0 discriminator 2
 8213 008e FB68     		ldr	r3, [r7, #12]
 8214 0090 0133     		adds	r3, r3, #1
 8215 0092 FB60     		str	r3, [r7, #12]
 8216              	.L360:
2366:main.c        ****             {
 8217              		.loc 1 2366 0 is_stmt 0 discriminator 1
 8218 0094 FB68     		ldr	r3, [r7, #12]
 8219 0096 022B     		cmp	r3, #2
 8220 0098 D9DD     		ble	.L363
 8221 009a 3EE0     		b	.L357
 8222              	.L359:
 8223              	.LBE50:
2379:main.c        ****                      }
2380:main.c        ****                 }
2381:main.c        ****             }
2382:main.c        ****         }
2383:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 8224              		.loc 1 2383 0 is_stmt 1
 8225 009c 3B68     		ldr	r3, [r7]
 8226 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8227 00a0 F02B     		cmp	r3, #240
 8228 00a2 3AD1     		bne	.L357
2384:main.c        ****         {
2385:main.c        ****             if (!parsingSysex)
 8229              		.loc 1 2385 0
 8230 00a4 234B     		ldr	r3, .L367+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 189


 8231 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8232 00a8 002B     		cmp	r3, #0
 8233 00aa 36D1     		bne	.L357
2386:main.c        ****             {
2387:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 8234              		.loc 1 2387 0
 8235 00ac 3B68     		ldr	r3, [r7]
 8236 00ae 0133     		adds	r3, r3, #1
 8237 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8238 00b2 7E2B     		cmp	r3, #126
 8239 00b4 03D1     		bne	.L365
2388:main.c        ****                 {
2389:main.c        ****                     parseThatMF = 1;
 8240              		.loc 1 2389 0
 8241 00b6 204B     		ldr	r3, .L367+24
 8242 00b8 0122     		movs	r2, #1
 8243 00ba 1A70     		strb	r2, [r3]
 8244 00bc 2DE0     		b	.L357
 8245              	.L365:
2390:main.c        **** 
2391:main.c        ****                     //sysexPointer = 0;
2392:main.c        ****                 }
2393:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2)
 8246              		.loc 1 2393 0
 8247 00be 3B68     		ldr	r3, [r7]
 8248 00c0 0133     		adds	r3, r3, #1
 8249 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8250 00c4 002B     		cmp	r3, #0
 8251 00c6 09D0     		beq	.L366
 8252              		.loc 1 2393 0 is_stmt 0 discriminator 1
 8253 00c8 3B68     		ldr	r3, [r7]
 8254 00ca 0133     		adds	r3, r3, #1
 8255 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8256 00ce 012B     		cmp	r3, #1
 8257 00d0 04D0     		beq	.L366
 8258              		.loc 1 2393 0 discriminator 2
 8259 00d2 3B68     		ldr	r3, [r7]
 8260 00d4 0133     		adds	r3, r3, #1
 8261 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8262 00d8 022B     		cmp	r3, #2
 8263 00da 1ED1     		bne	.L357
 8264              	.L366:
2394:main.c        ****                 {
2395:main.c        ****                     receivingSysex = 1;
 8265              		.loc 1 2395 0 is_stmt 1
 8266 00dc 124B     		ldr	r3, .L367+8
 8267 00de 0122     		movs	r2, #1
 8268 00e0 1A70     		strb	r2, [r3]
2396:main.c        ****                     
2397:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2398:main.c        ****                     if (sysexPointer == 0)
 8269              		.loc 1 2398 0
 8270 00e2 124B     		ldr	r3, .L367+12
 8271 00e4 1B68     		ldr	r3, [r3]
 8272 00e6 002B     		cmp	r3, #0
 8273 00e8 17D1     		bne	.L357
2399:main.c        ****                     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 190


2400:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 8274              		.loc 1 2400 0
 8275 00ea 104B     		ldr	r3, .L367+12
 8276 00ec 1B68     		ldr	r3, [r3]
 8277 00ee 5A1C     		adds	r2, r3, #1
 8278 00f0 0E49     		ldr	r1, .L367+12
 8279 00f2 0A60     		str	r2, [r1]
 8280 00f4 40F2FF72 		movw	r2, #2047
 8281 00f8 1340     		ands	r3, r3, r2
 8282 00fa 3A68     		ldr	r2, [r7]
 8283 00fc 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 8284 00fe 0C4A     		ldr	r2, .L367+16
 8285 0100 D154     		strb	r1, [r2, r3]
2401:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 8286              		.loc 1 2401 0
 8287 0102 0A4B     		ldr	r3, .L367+12
 8288 0104 1B68     		ldr	r3, [r3]
 8289 0106 5A1C     		adds	r2, r3, #1
 8290 0108 0849     		ldr	r1, .L367+12
 8291 010a 0A60     		str	r2, [r1]
 8292 010c 40F2FF72 		movw	r2, #2047
 8293 0110 1340     		ands	r3, r3, r2
 8294 0112 3A68     		ldr	r2, [r7]
 8295 0114 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 8296 0116 064A     		ldr	r2, .L367+16
 8297 0118 D154     		strb	r1, [r2, r3]
 8298              	.L357:
2402:main.c        ****                     }
2403:main.c        ****                 }
2404:main.c        ****             }
2405:main.c        ****         }
2406:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2407:main.c        ****     }
2408:main.c        **** }    
 8299              		.loc 1 2408 0
 8300 011a 1037     		adds	r7, r7, #16
 8301              		.cfi_def_cfa_offset 8
 8302 011c BD46     		mov	sp, r7
 8303              		.cfi_def_cfa_register 13
 8304              		@ sp needed
 8305 011e 80BD     		pop	{r7, pc}
 8306              	.L368:
 8307              		.align	2
 8308              	.L367:
 8309 0120 00000000 		.word	tempMIDI
 8310 0124 00000000 		.word	USB_active
 8311 0128 00000000 		.word	receivingSysex
 8312 012c 00000000 		.word	sysexPointer
 8313 0130 00000000 		.word	sysexBuffer
 8314 0134 00000000 		.word	parsingSysex
 8315 0138 00000000 		.word	parseThatMF
 8316              		.cfi_endproc
 8317              	.LFE93:
 8318              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 8319              		.text
 8320              	.Letext0:
 8321              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 191


 8322              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8323              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 8324              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 8325              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8326              		.file 7 "oled.h"
 8327              		.file 8 "Generated_Source\\PSoC5/USB_midi.h"
 8328              		.file 9 "Generated_Source\\PSoC5/Em_EEPROM.h"
 8329              		.file 10 "Generated_Source\\PSoC5/I2C_1.h"
 8330              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 8331              		.section	.debug_info,"",%progbits
 8332              	.Ldebug_info0:
 8333 0000 0B1C0000 		.4byte	0x1c0b
 8334 0004 0400     		.2byte	0x4
 8335 0006 00000000 		.4byte	.Ldebug_abbrev0
 8336 000a 04       		.byte	0x4
 8337 000b 01       		.uleb128 0x1
 8338 000c A9080000 		.4byte	.LASF299
 8339 0010 0C       		.byte	0xc
 8340 0011 1C0A0000 		.4byte	.LASF300
 8341 0015 D1060000 		.4byte	.LASF301
 8342 0019 00000000 		.4byte	.Ldebug_ranges0+0
 8343 001d 00000000 		.4byte	0
 8344 0021 00000000 		.4byte	.Ldebug_line0
 8345 0025 02       		.uleb128 0x2
 8346 0026 01       		.byte	0x1
 8347 0027 06       		.byte	0x6
 8348 0028 6E030000 		.4byte	.LASF0
 8349 002c 03       		.uleb128 0x3
 8350 002d 12020000 		.4byte	.LASF2
 8351 0031 02       		.byte	0x2
 8352 0032 1D       		.byte	0x1d
 8353 0033 37000000 		.4byte	0x37
 8354 0037 02       		.uleb128 0x2
 8355 0038 01       		.byte	0x1
 8356 0039 08       		.byte	0x8
 8357 003a F5030000 		.4byte	.LASF1
 8358 003e 03       		.uleb128 0x3
 8359 003f E90C0000 		.4byte	.LASF3
 8360 0043 02       		.byte	0x2
 8361 0044 29       		.byte	0x29
 8362 0045 49000000 		.4byte	0x49
 8363 0049 02       		.uleb128 0x2
 8364 004a 02       		.byte	0x2
 8365 004b 05       		.byte	0x5
 8366 004c 7F0D0000 		.4byte	.LASF4
 8367 0050 03       		.uleb128 0x3
 8368 0051 21050000 		.4byte	.LASF5
 8369 0055 02       		.byte	0x2
 8370 0056 2B       		.byte	0x2b
 8371 0057 5B000000 		.4byte	0x5b
 8372 005b 02       		.uleb128 0x2
 8373 005c 02       		.byte	0x2
 8374 005d 07       		.byte	0x7
 8375 005e 460F0000 		.4byte	.LASF6
 8376 0062 03       		.uleb128 0x3
 8377 0063 710F0000 		.4byte	.LASF7
 8378 0067 02       		.byte	0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 192


 8379 0068 3F       		.byte	0x3f
 8380 0069 6D000000 		.4byte	0x6d
 8381 006d 02       		.uleb128 0x2
 8382 006e 04       		.byte	0x4
 8383 006f 05       		.byte	0x5
 8384 0070 65020000 		.4byte	.LASF8
 8385 0074 03       		.uleb128 0x3
 8386 0075 A0090000 		.4byte	.LASF9
 8387 0079 02       		.byte	0x2
 8388 007a 41       		.byte	0x41
 8389 007b 7F000000 		.4byte	0x7f
 8390 007f 02       		.uleb128 0x2
 8391 0080 04       		.byte	0x4
 8392 0081 07       		.byte	0x7
 8393 0082 AE070000 		.4byte	.LASF10
 8394 0086 02       		.uleb128 0x2
 8395 0087 08       		.byte	0x8
 8396 0088 05       		.byte	0x5
 8397 0089 AB090000 		.4byte	.LASF11
 8398 008d 02       		.uleb128 0x2
 8399 008e 08       		.byte	0x8
 8400 008f 07       		.byte	0x7
 8401 0090 0D0C0000 		.4byte	.LASF12
 8402 0094 04       		.uleb128 0x4
 8403 0095 04       		.byte	0x4
 8404 0096 05       		.byte	0x5
 8405 0097 696E7400 		.ascii	"int\000"
 8406 009b 02       		.uleb128 0x2
 8407 009c 04       		.byte	0x4
 8408 009d 07       		.byte	0x7
 8409 009e B10A0000 		.4byte	.LASF13
 8410 00a2 03       		.uleb128 0x3
 8411 00a3 7A030000 		.4byte	.LASF14
 8412 00a7 03       		.byte	0x3
 8413 00a8 18       		.byte	0x18
 8414 00a9 2C000000 		.4byte	0x2c
 8415 00ad 03       		.uleb128 0x3
 8416 00ae C90D0000 		.4byte	.LASF15
 8417 00b2 03       		.byte	0x3
 8418 00b3 20       		.byte	0x20
 8419 00b4 3E000000 		.4byte	0x3e
 8420 00b8 03       		.uleb128 0x3
 8421 00b9 240C0000 		.4byte	.LASF16
 8422 00bd 03       		.byte	0x3
 8423 00be 24       		.byte	0x24
 8424 00bf 50000000 		.4byte	0x50
 8425 00c3 03       		.uleb128 0x3
 8426 00c4 99000000 		.4byte	.LASF17
 8427 00c8 03       		.byte	0x3
 8428 00c9 2C       		.byte	0x2c
 8429 00ca 62000000 		.4byte	0x62
 8430 00ce 03       		.uleb128 0x3
 8431 00cf F20E0000 		.4byte	.LASF18
 8432 00d3 03       		.byte	0x3
 8433 00d4 30       		.byte	0x30
 8434 00d5 74000000 		.4byte	0x74
 8435 00d9 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 193


 8436 00da 630D0000 		.4byte	.LASF19
 8437 00de 04       		.byte	0x4
 8438 00df E901     		.2byte	0x1e9
 8439 00e1 37000000 		.4byte	0x37
 8440 00e5 05       		.uleb128 0x5
 8441 00e6 DE0F0000 		.4byte	.LASF20
 8442 00ea 04       		.byte	0x4
 8443 00eb EA01     		.2byte	0x1ea
 8444 00ed 5B000000 		.4byte	0x5b
 8445 00f1 05       		.uleb128 0x5
 8446 00f2 D5000000 		.4byte	.LASF21
 8447 00f6 04       		.byte	0x4
 8448 00f7 EB01     		.2byte	0x1eb
 8449 00f9 7F000000 		.4byte	0x7f
 8450 00fd 02       		.uleb128 0x2
 8451 00fe 04       		.byte	0x4
 8452 00ff 04       		.byte	0x4
 8453 0100 550A0000 		.4byte	.LASF22
 8454 0104 02       		.uleb128 0x2
 8455 0105 08       		.byte	0x8
 8456 0106 04       		.byte	0x4
 8457 0107 150A0000 		.4byte	.LASF23
 8458 010b 02       		.uleb128 0x2
 8459 010c 01       		.byte	0x1
 8460 010d 08       		.byte	0x8
 8461 010e D5040000 		.4byte	.LASF24
 8462 0112 05       		.uleb128 0x5
 8463 0113 F60A0000 		.4byte	.LASF25
 8464 0117 04       		.byte	0x4
 8465 0118 8B02     		.2byte	0x28b
 8466 011a 7F000000 		.4byte	0x7f
 8467 011e 05       		.uleb128 0x5
 8468 011f 850C0000 		.4byte	.LASF26
 8469 0123 04       		.byte	0x4
 8470 0124 9302     		.2byte	0x293
 8471 0126 2A010000 		.4byte	0x12a
 8472 012a 06       		.uleb128 0x6
 8473 012b D9000000 		.4byte	0xd9
 8474 012f 02       		.uleb128 0x2
 8475 0130 08       		.byte	0x8
 8476 0131 04       		.byte	0x4
 8477 0132 8C0B0000 		.4byte	.LASF27
 8478 0136 02       		.uleb128 0x2
 8479 0137 04       		.byte	0x4
 8480 0138 07       		.byte	0x7
 8481 0139 2A000000 		.4byte	.LASF28
 8482 013d 07       		.uleb128 0x7
 8483 013e D9000000 		.4byte	0xd9
 8484 0142 4D010000 		.4byte	0x14d
 8485 0146 08       		.uleb128 0x8
 8486 0147 36010000 		.4byte	0x136
 8487 014b 03       		.byte	0x3
 8488 014c 00       		.byte	0
 8489 014d 09       		.uleb128 0x9
 8490 014e 1C       		.byte	0x1c
 8491 014f 05       		.byte	0x5
 8492 0150 1601     		.2byte	0x116
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 194


 8493 0152 BF010000 		.4byte	0x1bf
 8494 0156 0A       		.uleb128 0xa
 8495 0157 82030000 		.4byte	.LASF29
 8496 015b 05       		.byte	0x5
 8497 015c 1B01     		.2byte	0x11b
 8498 015e F1000000 		.4byte	0xf1
 8499 0162 00       		.byte	0
 8500 0163 0A       		.uleb128 0xa
 8501 0164 D8010000 		.4byte	.LASF30
 8502 0168 05       		.byte	0x5
 8503 0169 2001     		.2byte	0x120
 8504 016b F1000000 		.4byte	0xf1
 8505 016f 04       		.byte	0x4
 8506 0170 0A       		.uleb128 0xa
 8507 0171 AF0F0000 		.4byte	.LASF31
 8508 0175 05       		.byte	0x5
 8509 0176 2301     		.2byte	0x123
 8510 0178 F1000000 		.4byte	0xf1
 8511 017c 08       		.byte	0x8
 8512 017d 0A       		.uleb128 0xa
 8513 017e DE0D0000 		.4byte	.LASF32
 8514 0182 05       		.byte	0x5
 8515 0183 2601     		.2byte	0x126
 8516 0185 F1000000 		.4byte	0xf1
 8517 0189 0C       		.byte	0xc
 8518 018a 0A       		.uleb128 0xa
 8519 018b 330E0000 		.4byte	.LASF33
 8520 018f 05       		.byte	0x5
 8521 0190 2B01     		.2byte	0x12b
 8522 0192 F1000000 		.4byte	0xf1
 8523 0196 10       		.byte	0x10
 8524 0197 0A       		.uleb128 0xa
 8525 0198 04020000 		.4byte	.LASF34
 8526 019c 05       		.byte	0x5
 8527 019d 2E01     		.2byte	0x12e
 8528 019f D9000000 		.4byte	0xd9
 8529 01a3 14       		.byte	0x14
 8530 01a4 0A       		.uleb128 0xa
 8531 01a5 FC090000 		.4byte	.LASF35
 8532 01a9 05       		.byte	0x5
 8533 01aa 3301     		.2byte	0x133
 8534 01ac D9000000 		.4byte	0xd9
 8535 01b0 15       		.byte	0x15
 8536 01b1 0A       		.uleb128 0xa
 8537 01b2 C5010000 		.4byte	.LASF36
 8538 01b6 05       		.byte	0x5
 8539 01b7 3601     		.2byte	0x136
 8540 01b9 F1000000 		.4byte	0xf1
 8541 01bd 18       		.byte	0x18
 8542 01be 00       		.byte	0
 8543 01bf 05       		.uleb128 0x5
 8544 01c0 96070000 		.4byte	.LASF37
 8545 01c4 05       		.byte	0x5
 8546 01c5 3701     		.2byte	0x137
 8547 01c7 4D010000 		.4byte	0x14d
 8548 01cb 0B       		.uleb128 0xb
 8549 01cc 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 195


 8550 01cd 37000000 		.4byte	0x37
 8551 01d1 05       		.byte	0x5
 8552 01d2 5401     		.2byte	0x154
 8553 01d4 F7010000 		.4byte	0x1f7
 8554 01d8 0C       		.uleb128 0xc
 8555 01d9 84000000 		.4byte	.LASF38
 8556 01dd 00       		.byte	0
 8557 01de 0C       		.uleb128 0xc
 8558 01df F1050000 		.4byte	.LASF39
 8559 01e3 01       		.byte	0x1
 8560 01e4 0C       		.uleb128 0xc
 8561 01e5 AB010000 		.4byte	.LASF40
 8562 01e9 02       		.byte	0x2
 8563 01ea 0C       		.uleb128 0xc
 8564 01eb B1030000 		.4byte	.LASF41
 8565 01ef 03       		.byte	0x3
 8566 01f0 0C       		.uleb128 0xc
 8567 01f1 49080000 		.4byte	.LASF42
 8568 01f5 04       		.byte	0x4
 8569 01f6 00       		.byte	0
 8570 01f7 05       		.uleb128 0x5
 8571 01f8 3E010000 		.4byte	.LASF43
 8572 01fc 05       		.byte	0x5
 8573 01fd 5A01     		.2byte	0x15a
 8574 01ff CB010000 		.4byte	0x1cb
 8575 0203 06       		.uleb128 0x6
 8576 0204 A2000000 		.4byte	0xa2
 8577 0208 06       		.uleb128 0x6
 8578 0209 B8000000 		.4byte	0xb8
 8579 020d 03       		.uleb128 0x3
 8580 020e 7B050000 		.4byte	.LASF44
 8581 0212 06       		.byte	0x6
 8582 0213 6C       		.byte	0x6c
 8583 0214 9B000000 		.4byte	0x9b
 8584 0218 0D       		.uleb128 0xd
 8585 0219 C7030000 		.4byte	.LASF50
 8586 021d 01       		.byte	0x1
 8587 021e 37000000 		.4byte	0x37
 8588 0222 07       		.byte	0x7
 8589 0223 1D       		.byte	0x1d
 8590 0224 47020000 		.4byte	0x247
 8591 0228 0C       		.uleb128 0xc
 8592 0229 53090000 		.4byte	.LASF45
 8593 022d 00       		.byte	0
 8594 022e 0C       		.uleb128 0xc
 8595 022f 0B030000 		.4byte	.LASF46
 8596 0233 01       		.byte	0x1
 8597 0234 0C       		.uleb128 0xc
 8598 0235 B3000000 		.4byte	.LASF47
 8599 0239 02       		.byte	0x2
 8600 023a 0C       		.uleb128 0xc
 8601 023b 4C060000 		.4byte	.LASF48
 8602 023f 03       		.byte	0x3
 8603 0240 0C       		.uleb128 0xc
 8604 0241 36010000 		.4byte	.LASF49
 8605 0245 04       		.byte	0x4
 8606 0246 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 196


 8607 0247 0D       		.uleb128 0xd
 8608 0248 2C030000 		.4byte	.LASF51
 8609 024c 01       		.byte	0x1
 8610 024d 37000000 		.4byte	0x37
 8611 0251 01       		.byte	0x1
 8612 0252 1F       		.byte	0x1f
 8613 0253 7C020000 		.4byte	0x27c
 8614 0257 0C       		.uleb128 0xc
 8615 0258 27060000 		.4byte	.LASF52
 8616 025c 00       		.byte	0
 8617 025d 0C       		.uleb128 0xc
 8618 025e BE040000 		.4byte	.LASF53
 8619 0262 01       		.byte	0x1
 8620 0263 0C       		.uleb128 0xc
 8621 0264 F30C0000 		.4byte	.LASF54
 8622 0268 02       		.byte	0x2
 8623 0269 0C       		.uleb128 0xc
 8624 026a A00C0000 		.4byte	.LASF55
 8625 026e 03       		.byte	0x3
 8626 026f 0C       		.uleb128 0xc
 8627 0270 590F0000 		.4byte	.LASF56
 8628 0274 04       		.byte	0x4
 8629 0275 0C       		.uleb128 0xc
 8630 0276 22020000 		.4byte	.LASF57
 8631 027a 05       		.byte	0x5
 8632 027b 00       		.byte	0
 8633 027c 0E       		.uleb128 0xe
 8634 027d 440C0000 		.4byte	.LASF302
 8635 0281 04       		.byte	0x4
 8636 0282 01       		.byte	0x1
 8637 0283 A3       		.byte	0xa3
 8638 0284 A6020000 		.4byte	0x2a6
 8639 0288 0F       		.uleb128 0xf
 8640 0289 6600     		.ascii	"f\000"
 8641 028b 01       		.byte	0x1
 8642 028c A4       		.byte	0xa4
 8643 028d FD000000 		.4byte	0xfd
 8644 0291 0F       		.uleb128 0xf
 8645 0292 6200     		.ascii	"b\000"
 8646 0294 01       		.byte	0x1
 8647 0295 A5       		.byte	0xa5
 8648 0296 A6020000 		.4byte	0x2a6
 8649 029a 0F       		.uleb128 0xf
 8650 029b 75333200 		.ascii	"u32\000"
 8651 029f 01       		.byte	0x1
 8652 02a0 A6       		.byte	0xa6
 8653 02a1 CE000000 		.4byte	0xce
 8654 02a5 00       		.byte	0
 8655 02a6 07       		.uleb128 0x7
 8656 02a7 A2000000 		.4byte	0xa2
 8657 02ab B6020000 		.4byte	0x2b6
 8658 02af 08       		.uleb128 0x8
 8659 02b0 36010000 		.4byte	0x136
 8660 02b4 03       		.byte	0x3
 8661 02b5 00       		.byte	0
 8662 02b6 10       		.uleb128 0x10
 8663 02b7 A7030000 		.4byte	.LASF107
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 197


 8664 02bb 01       		.byte	0x1
 8665 02bc AA       		.byte	0xaa
 8666 02bd 00000000 		.4byte	.LFB64
 8667 02c1 74010000 		.4byte	.LFE64-.LFB64
 8668 02c5 01       		.uleb128 0x1
 8669 02c6 9C       		.byte	0x9c
 8670 02c7 E2020000 		.4byte	0x2e2
 8671 02cb 11       		.uleb128 0x11
 8672 02cc 66000000 		.4byte	.LBB2
 8673 02d0 7A000000 		.4byte	.LBE2-.LBB2
 8674 02d4 12       		.uleb128 0x12
 8675 02d5 6900     		.ascii	"i\000"
 8676 02d7 01       		.byte	0x1
 8677 02d8 B0       		.byte	0xb0
 8678 02d9 94000000 		.4byte	0x94
 8679 02dd 02       		.uleb128 0x2
 8680 02de 91       		.byte	0x91
 8681 02df 6C       		.sleb128 -20
 8682 02e0 00       		.byte	0
 8683 02e1 00       		.byte	0
 8684 02e2 13       		.uleb128 0x13
 8685 02e3 590C0000 		.4byte	.LASF58
 8686 02e7 01       		.byte	0x1
 8687 02e8 CF       		.byte	0xcf
 8688 02e9 00000000 		.4byte	.LFB65
 8689 02ed 9C000000 		.4byte	.LFE65-.LFB65
 8690 02f1 01       		.uleb128 0x1
 8691 02f2 9C       		.byte	0x9c
 8692 02f3 13       		.uleb128 0x13
 8693 02f4 D30A0000 		.4byte	.LASF59
 8694 02f8 01       		.byte	0x1
 8695 02f9 F8       		.byte	0xf8
 8696 02fa 00000000 		.4byte	.LFB66
 8697 02fe 14000000 		.4byte	.LFE66-.LFB66
 8698 0302 01       		.uleb128 0x1
 8699 0303 9C       		.byte	0x9c
 8700 0304 14       		.uleb128 0x14
 8701 0305 68090000 		.4byte	.LASF60
 8702 0309 01       		.byte	0x1
 8703 030a 0301     		.2byte	0x103
 8704 030c 00000000 		.4byte	.LFB67
 8705 0310 7C000000 		.4byte	.LFE67-.LFB67
 8706 0314 01       		.uleb128 0x1
 8707 0315 9C       		.byte	0x9c
 8708 0316 15       		.uleb128 0x15
 8709 0317 FF040000 		.4byte	.LASF63
 8710 031b 01       		.byte	0x1
 8711 031c 1F01     		.2byte	0x11f
 8712 031e FD000000 		.4byte	0xfd
 8713 0322 00000000 		.4byte	.LFB68
 8714 0326 58000000 		.4byte	.LFE68-.LFB68
 8715 032a 01       		.uleb128 0x1
 8716 032b 9C       		.byte	0x9c
 8717 032c 7C030000 		.4byte	0x37c
 8718 0330 16       		.uleb128 0x16
 8719 0331 6D696E00 		.ascii	"min\000"
 8720 0335 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 198


 8721 0336 1F01     		.2byte	0x11f
 8722 0338 FD000000 		.4byte	0xfd
 8723 033c 02       		.uleb128 0x2
 8724 033d 91       		.byte	0x91
 8725 033e 6C       		.sleb128 -20
 8726 033f 16       		.uleb128 0x16
 8727 0340 76616C00 		.ascii	"val\000"
 8728 0344 01       		.byte	0x1
 8729 0345 1F01     		.2byte	0x11f
 8730 0347 FD000000 		.4byte	0xfd
 8731 034b 02       		.uleb128 0x2
 8732 034c 91       		.byte	0x91
 8733 034d 68       		.sleb128 -24
 8734 034e 16       		.uleb128 0x16
 8735 034f 6D617800 		.ascii	"max\000"
 8736 0353 01       		.byte	0x1
 8737 0354 1F01     		.2byte	0x11f
 8738 0356 FD000000 		.4byte	0xfd
 8739 035a 02       		.uleb128 0x2
 8740 035b 91       		.byte	0x91
 8741 035c 64       		.sleb128 -28
 8742 035d 17       		.uleb128 0x17
 8743 035e F4090000 		.4byte	.LASF61
 8744 0362 01       		.byte	0x1
 8745 0363 2101     		.2byte	0x121
 8746 0365 FD000000 		.4byte	0xfd
 8747 0369 02       		.uleb128 0x2
 8748 036a 91       		.byte	0x91
 8749 036b 74       		.sleb128 -12
 8750 036c 17       		.uleb128 0x17
 8751 036d 6E040000 		.4byte	.LASF62
 8752 0371 01       		.byte	0x1
 8753 0372 2201     		.2byte	0x122
 8754 0374 FD000000 		.4byte	0xfd
 8755 0378 02       		.uleb128 0x2
 8756 0379 91       		.byte	0x91
 8757 037a 70       		.sleb128 -16
 8758 037b 00       		.byte	0
 8759 037c 15       		.uleb128 0x15
 8760 037d 900F0000 		.4byte	.LASF64
 8761 0381 01       		.byte	0x1
 8762 0382 3501     		.2byte	0x135
 8763 0384 FD000000 		.4byte	0xfd
 8764 0388 00000000 		.4byte	.LFB69
 8765 038c 68000000 		.4byte	.LFE69-.LFB69
 8766 0390 01       		.uleb128 0x1
 8767 0391 9C       		.byte	0x9c
 8768 0392 A4030000 		.4byte	0x3a4
 8769 0396 16       		.uleb128 0x16
 8770 0397 6600     		.ascii	"f\000"
 8771 0399 01       		.byte	0x1
 8772 039a 3501     		.2byte	0x135
 8773 039c FD000000 		.4byte	0xfd
 8774 03a0 02       		.uleb128 0x2
 8775 03a1 91       		.byte	0x91
 8776 03a2 74       		.sleb128 -12
 8777 03a3 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 199


 8778 03a4 15       		.uleb128 0x15
 8779 03a5 CB0B0000 		.4byte	.LASF65
 8780 03a9 01       		.byte	0x1
 8781 03aa 3C01     		.2byte	0x13c
 8782 03ac FD000000 		.4byte	0xfd
 8783 03b0 00000000 		.4byte	.LFB70
 8784 03b4 4C000000 		.4byte	.LFE70-.LFB70
 8785 03b8 01       		.uleb128 0x1
 8786 03b9 9C       		.byte	0x9c
 8787 03ba CC030000 		.4byte	0x3cc
 8788 03be 16       		.uleb128 0x16
 8789 03bf 6600     		.ascii	"f\000"
 8790 03c1 01       		.byte	0x1
 8791 03c2 3C01     		.2byte	0x13c
 8792 03c4 FD000000 		.4byte	0xfd
 8793 03c8 02       		.uleb128 0x2
 8794 03c9 91       		.byte	0x91
 8795 03ca 74       		.sleb128 -12
 8796 03cb 00       		.byte	0
 8797 03cc 15       		.uleb128 0x15
 8798 03cd 72070000 		.4byte	.LASF66
 8799 03d1 01       		.byte	0x1
 8800 03d2 4201     		.2byte	0x142
 8801 03d4 FD000000 		.4byte	0xfd
 8802 03d8 00000000 		.4byte	.LFB71
 8803 03dc 46000000 		.4byte	.LFE71-.LFB71
 8804 03e0 01       		.uleb128 0x1
 8805 03e1 9C       		.byte	0x9c
 8806 03e2 2E040000 		.4byte	0x42e
 8807 03e6 16       		.uleb128 0x16
 8808 03e7 4100     		.ascii	"A\000"
 8809 03e9 01       		.byte	0x1
 8810 03ea 4201     		.2byte	0x142
 8811 03ec FD000000 		.4byte	0xfd
 8812 03f0 02       		.uleb128 0x2
 8813 03f1 91       		.byte	0x91
 8814 03f2 6C       		.sleb128 -20
 8815 03f3 16       		.uleb128 0x16
 8816 03f4 4200     		.ascii	"B\000"
 8817 03f6 01       		.byte	0x1
 8818 03f7 4201     		.2byte	0x142
 8819 03f9 FD000000 		.4byte	0xfd
 8820 03fd 02       		.uleb128 0x2
 8821 03fe 91       		.byte	0x91
 8822 03ff 68       		.sleb128 -24
 8823 0400 18       		.uleb128 0x18
 8824 0401 1C020000 		.4byte	.LASF67
 8825 0405 01       		.byte	0x1
 8826 0406 4201     		.2byte	0x142
 8827 0408 FD000000 		.4byte	0xfd
 8828 040c 02       		.uleb128 0x2
 8829 040d 91       		.byte	0x91
 8830 040e 64       		.sleb128 -28
 8831 040f 17       		.uleb128 0x17
 8832 0410 57030000 		.4byte	.LASF68
 8833 0414 01       		.byte	0x1
 8834 0415 4401     		.2byte	0x144
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 200


 8835 0417 FD000000 		.4byte	0xfd
 8836 041b 02       		.uleb128 0x2
 8837 041c 91       		.byte	0x91
 8838 041d 74       		.sleb128 -12
 8839 041e 19       		.uleb128 0x19
 8840 041f 6F757400 		.ascii	"out\000"
 8841 0423 01       		.byte	0x1
 8842 0424 4701     		.2byte	0x147
 8843 0426 FD000000 		.4byte	0xfd
 8844 042a 02       		.uleb128 0x2
 8845 042b 91       		.byte	0x91
 8846 042c 70       		.sleb128 -16
 8847 042d 00       		.byte	0
 8848 042e 1A       		.uleb128 0x1a
 8849 042f 6D617000 		.ascii	"map\000"
 8850 0433 01       		.byte	0x1
 8851 0434 B501     		.2byte	0x1b5
 8852 0436 FD000000 		.4byte	0xfd
 8853 043a 00000000 		.4byte	.LFB72
 8854 043e 56000000 		.4byte	.LFE72-.LFB72
 8855 0442 01       		.uleb128 0x1
 8856 0443 9C       		.byte	0x9c
 8857 0444 94040000 		.4byte	0x494
 8858 0448 18       		.uleb128 0x18
 8859 0449 84040000 		.4byte	.LASF69
 8860 044d 01       		.byte	0x1
 8861 044e B501     		.2byte	0x1b5
 8862 0450 FD000000 		.4byte	0xfd
 8863 0454 02       		.uleb128 0x2
 8864 0455 91       		.byte	0x91
 8865 0456 6C       		.sleb128 -20
 8866 0457 18       		.uleb128 0x18
 8867 0458 EC010000 		.4byte	.LASF70
 8868 045c 01       		.byte	0x1
 8869 045d B501     		.2byte	0x1b5
 8870 045f FD000000 		.4byte	0xfd
 8871 0463 02       		.uleb128 0x2
 8872 0464 91       		.byte	0x91
 8873 0465 68       		.sleb128 -24
 8874 0466 18       		.uleb128 0x18
 8875 0467 92080000 		.4byte	.LASF71
 8876 046b 01       		.byte	0x1
 8877 046c B501     		.2byte	0x1b5
 8878 046e FD000000 		.4byte	0xfd
 8879 0472 02       		.uleb128 0x2
 8880 0473 91       		.byte	0x91
 8881 0474 64       		.sleb128 -28
 8882 0475 18       		.uleb128 0x18
 8883 0476 61080000 		.4byte	.LASF72
 8884 047a 01       		.byte	0x1
 8885 047b B501     		.2byte	0x1b5
 8886 047d FD000000 		.4byte	0xfd
 8887 0481 02       		.uleb128 0x2
 8888 0482 91       		.byte	0x91
 8889 0483 60       		.sleb128 -32
 8890 0484 18       		.uleb128 0x18
 8891 0485 470A0000 		.4byte	.LASF73
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 201


 8892 0489 01       		.byte	0x1
 8893 048a B501     		.2byte	0x1b5
 8894 048c FD000000 		.4byte	0xfd
 8895 0490 02       		.uleb128 0x2
 8896 0491 91       		.byte	0x91
 8897 0492 00       		.sleb128 0
 8898 0493 00       		.byte	0
 8899 0494 1B       		.uleb128 0x1b
 8900 0495 8D050000 		.4byte	.LASF102
 8901 0499 01       		.byte	0x1
 8902 049a C001     		.2byte	0x1c0
 8903 049c 00000000 		.4byte	.LFB73
 8904 04a0 0C000000 		.4byte	.LFE73-.LFB73
 8905 04a4 01       		.uleb128 0x1
 8906 04a5 9C       		.byte	0x9c
 8907 04a6 1C       		.uleb128 0x1c
 8908 04a7 270F0000 		.4byte	.LASF303
 8909 04ab 01       		.byte	0x1
 8910 04ac C601     		.2byte	0x1c6
 8911 04ae 00000000 		.4byte	.LFB74
 8912 04b2 0C010000 		.4byte	.LFE74-.LFB74
 8913 04b6 01       		.uleb128 0x1
 8914 04b7 9C       		.byte	0x9c
 8915 04b8 ED040000 		.4byte	0x4ed
 8916 04bc 11       		.uleb128 0x11
 8917 04bd 06000000 		.4byte	.LBB3
 8918 04c1 EA000000 		.4byte	.LBE3-.LBB3
 8919 04c5 19       		.uleb128 0x19
 8920 04c6 6900     		.ascii	"i\000"
 8921 04c8 01       		.byte	0x1
 8922 04c9 CA01     		.2byte	0x1ca
 8923 04cb 94000000 		.4byte	0x94
 8924 04cf 02       		.uleb128 0x2
 8925 04d0 91       		.byte	0x91
 8926 04d1 6C       		.sleb128 -20
 8927 04d2 11       		.uleb128 0x11
 8928 04d3 0C000000 		.4byte	.LBB4
 8929 04d7 D8000000 		.4byte	.LBE4-.LBB4
 8930 04db 17       		.uleb128 0x17
 8931 04dc F3010000 		.4byte	.LASF74
 8932 04e0 01       		.byte	0x1
 8933 04e1 CD01     		.2byte	0x1cd
 8934 04e3 FD000000 		.4byte	0xfd
 8935 04e7 02       		.uleb128 0x2
 8936 04e8 91       		.byte	0x91
 8937 04e9 68       		.sleb128 -24
 8938 04ea 00       		.byte	0
 8939 04eb 00       		.byte	0
 8940 04ec 00       		.byte	0
 8941 04ed 15       		.uleb128 0x15
 8942 04ee CC020000 		.4byte	.LASF75
 8943 04f2 01       		.byte	0x1
 8944 04f3 D401     		.2byte	0x1d4
 8945 04f5 94000000 		.4byte	0x94
 8946 04f9 00000000 		.4byte	.LFB75
 8947 04fd 501A0000 		.4byte	.LFE75-.LFB75
 8948 0501 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 202


 8949 0502 9C       		.byte	0x9c
 8950 0503 D2080000 		.4byte	0x8d2
 8951 0507 17       		.uleb128 0x17
 8952 0508 BD0F0000 		.4byte	.LASF76
 8953 050c 01       		.byte	0x1
 8954 050d 1C02     		.2byte	0x21c
 8955 050f A2000000 		.4byte	0xa2
 8956 0513 03       		.uleb128 0x3
 8957 0514 91       		.byte	0x91
 8958 0515 FF7E     		.sleb128 -129
 8959 0517 1D       		.uleb128 0x1d
 8960 0518 30000000 		.4byte	.LBB5
 8961 051c 8A010000 		.4byte	.LBE5-.LBB5
 8962 0520 D3050000 		.4byte	0x5d3
 8963 0524 17       		.uleb128 0x17
 8964 0525 16040000 		.4byte	.LASF77
 8965 0529 01       		.byte	0x1
 8966 052a E101     		.2byte	0x1e1
 8967 052c 94000000 		.4byte	0x94
 8968 0530 02       		.uleb128 0x2
 8969 0531 91       		.byte	0x91
 8970 0532 6C       		.sleb128 -20
 8971 0533 1D       		.uleb128 0x1d
 8972 0534 38000000 		.4byte	.LBB6
 8973 0538 64000000 		.4byte	.LBE6-.LBB6
 8974 053c 50050000 		.4byte	0x550
 8975 0540 17       		.uleb128 0x17
 8976 0541 840E0000 		.4byte	.LASF78
 8977 0545 01       		.byte	0x1
 8978 0546 E401     		.2byte	0x1e4
 8979 0548 94000000 		.4byte	0x94
 8980 054c 02       		.uleb128 0x2
 8981 054d 91       		.byte	0x91
 8982 054e 68       		.sleb128 -24
 8983 054f 00       		.byte	0
 8984 0550 11       		.uleb128 0x11
 8985 0551 9C000000 		.4byte	.LBB7
 8986 0555 0A010000 		.4byte	.LBE7-.LBB7
 8987 0559 19       		.uleb128 0x19
 8988 055a 6900     		.ascii	"i\000"
 8989 055c 01       		.byte	0x1
 8990 055d E801     		.2byte	0x1e8
 8991 055f 94000000 		.4byte	0x94
 8992 0563 02       		.uleb128 0x2
 8993 0564 91       		.byte	0x91
 8994 0565 64       		.sleb128 -28
 8995 0566 11       		.uleb128 0x11
 8996 0567 A4000000 		.4byte	.LBB8
 8997 056b EE000000 		.4byte	.LBE8-.LBB8
 8998 056f 17       		.uleb128 0x17
 8999 0570 27040000 		.4byte	.LASF79
 9000 0574 01       		.byte	0x1
 9001 0575 EA01     		.2byte	0x1ea
 9002 0577 94000000 		.4byte	0x94
 9003 057b 03       		.uleb128 0x3
 9004 057c 91       		.byte	0x91
 9005 057d 887F     		.sleb128 -120
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 203


 9006 057f 11       		.uleb128 0x11
 9007 0580 B2000000 		.4byte	.LBB9
 9008 0584 E0000000 		.4byte	.LBE9-.LBB9
 9009 0588 19       		.uleb128 0x19
 9010 0589 6A00     		.ascii	"j\000"
 9011 058b 01       		.byte	0x1
 9012 058c EB01     		.2byte	0x1eb
 9013 058e 94000000 		.4byte	0x94
 9014 0592 02       		.uleb128 0x2
 9015 0593 91       		.byte	0x91
 9016 0594 60       		.sleb128 -32
 9017 0595 11       		.uleb128 0x11
 9018 0596 BA000000 		.4byte	.LBB10
 9019 059a C6000000 		.4byte	.LBE10-.LBB10
 9020 059e 17       		.uleb128 0x17
 9021 059f 5F030000 		.4byte	.LASF80
 9022 05a3 01       		.byte	0x1
 9023 05a4 EE01     		.2byte	0x1ee
 9024 05a6 94000000 		.4byte	0x94
 9025 05aa 03       		.uleb128 0x3
 9026 05ab 91       		.byte	0x91
 9027 05ac 847F     		.sleb128 -124
 9028 05ae 17       		.uleb128 0x17
 9029 05af 9C0F0000 		.4byte	.LASF81
 9030 05b3 01       		.byte	0x1
 9031 05b4 EF01     		.2byte	0x1ef
 9032 05b6 B8000000 		.4byte	0xb8
 9033 05ba 03       		.uleb128 0x3
 9034 05bb 91       		.byte	0x91
 9035 05bc 827F     		.sleb128 -126
 9036 05be 17       		.uleb128 0x17
 9037 05bf E9090000 		.4byte	.LASF82
 9038 05c3 01       		.byte	0x1
 9039 05c4 F001     		.2byte	0x1f0
 9040 05c6 B8000000 		.4byte	0xb8
 9041 05ca 03       		.uleb128 0x3
 9042 05cb 91       		.byte	0x91
 9043 05cc 807F     		.sleb128 -128
 9044 05ce 00       		.byte	0
 9045 05cf 00       		.byte	0
 9046 05d0 00       		.byte	0
 9047 05d1 00       		.byte	0
 9048 05d2 00       		.byte	0
 9049 05d3 1D       		.uleb128 0x1d
 9050 05d4 BA010000 		.4byte	.LBB11
 9051 05d8 90000000 		.4byte	.LBE11-.LBB11
 9052 05dc EE050000 		.4byte	0x5ee
 9053 05e0 19       		.uleb128 0x19
 9054 05e1 6900     		.ascii	"i\000"
 9055 05e3 01       		.byte	0x1
 9056 05e4 F701     		.2byte	0x1f7
 9057 05e6 94000000 		.4byte	0x94
 9058 05ea 02       		.uleb128 0x2
 9059 05eb 91       		.byte	0x91
 9060 05ec 5C       		.sleb128 -36
 9061 05ed 00       		.byte	0
 9062 05ee 1D       		.uleb128 0x1d
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 204


 9063 05ef 4E020000 		.4byte	.LBB12
 9064 05f3 A4000000 		.4byte	.LBE12-.LBB12
 9065 05f7 52060000 		.4byte	0x652
 9066 05fb 19       		.uleb128 0x19
 9067 05fc 6900     		.ascii	"i\000"
 9068 05fe 01       		.byte	0x1
 9069 05ff FF01     		.2byte	0x1ff
 9070 0601 94000000 		.4byte	0x94
 9071 0605 02       		.uleb128 0x2
 9072 0606 91       		.byte	0x91
 9073 0607 58       		.sleb128 -40
 9074 0608 1D       		.uleb128 0x1d
 9075 0609 54020000 		.4byte	.LBB13
 9076 060d 28000000 		.4byte	.LBE13-.LBB13
 9077 0611 23060000 		.4byte	0x623
 9078 0615 19       		.uleb128 0x19
 9079 0616 6A00     		.ascii	"j\000"
 9080 0618 01       		.byte	0x1
 9081 0619 0102     		.2byte	0x201
 9082 061b 94000000 		.4byte	0x94
 9083 061f 02       		.uleb128 0x2
 9084 0620 91       		.byte	0x91
 9085 0621 54       		.sleb128 -44
 9086 0622 00       		.byte	0
 9087 0623 11       		.uleb128 0x11
 9088 0624 7C020000 		.4byte	.LBB14
 9089 0628 60000000 		.4byte	.LBE14-.LBB14
 9090 062c 19       		.uleb128 0x19
 9091 062d 6A00     		.ascii	"j\000"
 9092 062f 01       		.byte	0x1
 9093 0630 0602     		.2byte	0x206
 9094 0632 94000000 		.4byte	0x94
 9095 0636 02       		.uleb128 0x2
 9096 0637 91       		.byte	0x91
 9097 0638 50       		.sleb128 -48
 9098 0639 11       		.uleb128 0x11
 9099 063a 82020000 		.4byte	.LBB15
 9100 063e 4E000000 		.4byte	.LBE15-.LBB15
 9101 0642 19       		.uleb128 0x19
 9102 0643 6B00     		.ascii	"k\000"
 9103 0645 01       		.byte	0x1
 9104 0646 0802     		.2byte	0x208
 9105 0648 94000000 		.4byte	0x94
 9106 064c 02       		.uleb128 0x2
 9107 064d 91       		.byte	0x91
 9108 064e 4C       		.sleb128 -52
 9109 064f 00       		.byte	0
 9110 0650 00       		.byte	0
 9111 0651 00       		.byte	0
 9112 0652 1D       		.uleb128 0x1d
 9113 0653 E8030000 		.4byte	.LBB16
 9114 0657 6A000000 		.4byte	.LBE16-.LBB16
 9115 065b 6D060000 		.4byte	0x66d
 9116 065f 19       		.uleb128 0x19
 9117 0660 7700     		.ascii	"w\000"
 9118 0662 01       		.byte	0x1
 9119 0663 3D02     		.2byte	0x23d
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 205


 9120 0665 94000000 		.4byte	0x94
 9121 0669 02       		.uleb128 0x2
 9122 066a 91       		.byte	0x91
 9123 066b 48       		.sleb128 -56
 9124 066c 00       		.byte	0
 9125 066d 1D       		.uleb128 0x1d
 9126 066e E4040000 		.4byte	.LBB17
 9127 0672 28000000 		.4byte	.LBE17-.LBB17
 9128 0676 8B060000 		.4byte	0x68b
 9129 067a 17       		.uleb128 0x17
 9130 067b F5070000 		.4byte	.LASF83
 9131 067f 01       		.byte	0x1
 9132 0680 FC02     		.2byte	0x2fc
 9133 0682 A2000000 		.4byte	0xa2
 9134 0686 03       		.uleb128 0x3
 9135 0687 91       		.byte	0x91
 9136 0688 FE7E     		.sleb128 -130
 9137 068a 00       		.byte	0
 9138 068b 1D       		.uleb128 0x1d
 9139 068c 40070000 		.4byte	.LBB18
 9140 0690 4E000000 		.4byte	.LBE18-.LBB18
 9141 0694 C0060000 		.4byte	0x6c0
 9142 0698 19       		.uleb128 0x19
 9143 0699 6900     		.ascii	"i\000"
 9144 069b 01       		.byte	0x1
 9145 069c 4403     		.2byte	0x344
 9146 069e 94000000 		.4byte	0x94
 9147 06a2 02       		.uleb128 0x2
 9148 06a3 91       		.byte	0x91
 9149 06a4 44       		.sleb128 -60
 9150 06a5 11       		.uleb128 0x11
 9151 06a6 46070000 		.4byte	.LBB19
 9152 06aa 3C000000 		.4byte	.LBE19-.LBB19
 9153 06ae 17       		.uleb128 0x17
 9154 06af ED070000 		.4byte	.LASF84
 9155 06b3 01       		.byte	0x1
 9156 06b4 4603     		.2byte	0x346
 9157 06b6 B8000000 		.4byte	0xb8
 9158 06ba 03       		.uleb128 0x3
 9159 06bb 91       		.byte	0x91
 9160 06bc E67E     		.sleb128 -154
 9161 06be 00       		.byte	0
 9162 06bf 00       		.byte	0
 9163 06c0 1D       		.uleb128 0x1d
 9164 06c1 B4080000 		.4byte	.LBB20
 9165 06c5 62010000 		.4byte	.LBE20-.LBB20
 9166 06c9 DE060000 		.4byte	0x6de
 9167 06cd 17       		.uleb128 0x17
 9168 06ce 5D000000 		.4byte	.LASF85
 9169 06d2 01       		.byte	0x1
 9170 06d3 F403     		.2byte	0x3f4
 9171 06d5 AD000000 		.4byte	0xad
 9172 06d9 03       		.uleb128 0x3
 9173 06da 91       		.byte	0x91
 9174 06db FC7E     		.sleb128 -132
 9175 06dd 00       		.byte	0
 9176 06de 1D       		.uleb128 0x1d
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 206


 9177 06df 720A0000 		.4byte	.LBB21
 9178 06e3 28000000 		.4byte	.LBE21-.LBB21
 9179 06e7 FC060000 		.4byte	0x6fc
 9180 06eb 17       		.uleb128 0x17
 9181 06ec 55050000 		.4byte	.LASF86
 9182 06f0 01       		.byte	0x1
 9183 06f1 1C04     		.2byte	0x41c
 9184 06f3 B8000000 		.4byte	0xb8
 9185 06f7 03       		.uleb128 0x3
 9186 06f8 91       		.byte	0x91
 9187 06f9 FA7E     		.sleb128 -134
 9188 06fb 00       		.byte	0
 9189 06fc 1D       		.uleb128 0x1d
 9190 06fd 0A0B0000 		.4byte	.LBB22
 9191 0701 7E000000 		.4byte	.LBE22-.LBB22
 9192 0705 17070000 		.4byte	0x717
 9193 0709 19       		.uleb128 0x19
 9194 070a 6900     		.ascii	"i\000"
 9195 070c 01       		.byte	0x1
 9196 070d 4704     		.2byte	0x447
 9197 070f 94000000 		.4byte	0x94
 9198 0713 02       		.uleb128 0x2
 9199 0714 91       		.byte	0x91
 9200 0715 40       		.sleb128 -64
 9201 0716 00       		.byte	0
 9202 0717 1D       		.uleb128 0x1d
 9203 0718 8E0B0000 		.4byte	.LBB23
 9204 071c 46000000 		.4byte	.LBE23-.LBB23
 9205 0720 33070000 		.4byte	0x733
 9206 0724 19       		.uleb128 0x19
 9207 0725 6900     		.ascii	"i\000"
 9208 0727 01       		.byte	0x1
 9209 0728 6904     		.2byte	0x469
 9210 072a 94000000 		.4byte	0x94
 9211 072e 03       		.uleb128 0x3
 9212 072f 91       		.byte	0x91
 9213 0730 BC7F     		.sleb128 -68
 9214 0732 00       		.byte	0
 9215 0733 1D       		.uleb128 0x1d
 9216 0734 28110000 		.4byte	.LBB24
 9217 0738 28000000 		.4byte	.LBE24-.LBB24
 9218 073c 4F070000 		.4byte	0x74f
 9219 0740 19       		.uleb128 0x19
 9220 0741 6900     		.ascii	"i\000"
 9221 0743 01       		.byte	0x1
 9222 0744 5505     		.2byte	0x555
 9223 0746 94000000 		.4byte	0x94
 9224 074a 03       		.uleb128 0x3
 9225 074b 91       		.byte	0x91
 9226 074c B87F     		.sleb128 -72
 9227 074e 00       		.byte	0
 9228 074f 1D       		.uleb128 0x1d
 9229 0750 5A110000 		.4byte	.LBB25
 9230 0754 CC000000 		.4byte	.LBE25-.LBB25
 9231 0758 6B070000 		.4byte	0x76b
 9232 075c 19       		.uleb128 0x19
 9233 075d 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 207


 9234 075f 01       		.byte	0x1
 9235 0760 6205     		.2byte	0x562
 9236 0762 94000000 		.4byte	0x94
 9237 0766 03       		.uleb128 0x3
 9238 0767 91       		.byte	0x91
 9239 0768 B47F     		.sleb128 -76
 9240 076a 00       		.byte	0
 9241 076b 1D       		.uleb128 0x1d
 9242 076c 40120000 		.4byte	.LBB26
 9243 0770 8A000000 		.4byte	.LBE26-.LBB26
 9244 0774 87070000 		.4byte	0x787
 9245 0778 19       		.uleb128 0x19
 9246 0779 6900     		.ascii	"i\000"
 9247 077b 01       		.byte	0x1
 9248 077c 7905     		.2byte	0x579
 9249 077e 94000000 		.4byte	0x94
 9250 0782 03       		.uleb128 0x3
 9251 0783 91       		.byte	0x91
 9252 0784 B07F     		.sleb128 -80
 9253 0786 00       		.byte	0
 9254 0787 1D       		.uleb128 0x1d
 9255 0788 D0120000 		.4byte	.LBB27
 9256 078c 74020000 		.4byte	.LBE27-.LBB27
 9257 0790 BD070000 		.4byte	0x7bd
 9258 0794 19       		.uleb128 0x19
 9259 0795 6900     		.ascii	"i\000"
 9260 0797 01       		.byte	0x1
 9261 0798 8805     		.2byte	0x588
 9262 079a 94000000 		.4byte	0x94
 9263 079e 03       		.uleb128 0x3
 9264 079f 91       		.byte	0x91
 9265 07a0 AC7F     		.sleb128 -84
 9266 07a2 11       		.uleb128 0x11
 9267 07a3 F4120000 		.4byte	.LBB28
 9268 07a7 3E020000 		.4byte	.LBE28-.LBB28
 9269 07ab 17       		.uleb128 0x17
 9270 07ac 300B0000 		.4byte	.LASF87
 9271 07b0 01       		.byte	0x1
 9272 07b1 9905     		.2byte	0x599
 9273 07b3 FD000000 		.4byte	0xfd
 9274 07b7 03       		.uleb128 0x3
 9275 07b8 91       		.byte	0x91
 9276 07b9 F47E     		.sleb128 -140
 9277 07bb 00       		.byte	0
 9278 07bc 00       		.byte	0
 9279 07bd 1D       		.uleb128 0x1d
 9280 07be 8C160000 		.4byte	.LBB29
 9281 07c2 4E000000 		.4byte	.LBE29-.LBB29
 9282 07c6 D9070000 		.4byte	0x7d9
 9283 07ca 19       		.uleb128 0x19
 9284 07cb 6900     		.ascii	"i\000"
 9285 07cd 01       		.byte	0x1
 9286 07ce 0106     		.2byte	0x601
 9287 07d0 0D020000 		.4byte	0x20d
 9288 07d4 03       		.uleb128 0x3
 9289 07d5 91       		.byte	0x91
 9290 07d6 A87F     		.sleb128 -88
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 208


 9291 07d8 00       		.byte	0
 9292 07d9 1D       		.uleb128 0x1d
 9293 07da F8160000 		.4byte	.LBB30
 9294 07de 22000000 		.4byte	.LBE30-.LBB30
 9295 07e2 F5070000 		.4byte	0x7f5
 9296 07e6 19       		.uleb128 0x19
 9297 07e7 6900     		.ascii	"i\000"
 9298 07e9 01       		.byte	0x1
 9299 07ea 1406     		.2byte	0x614
 9300 07ec 94000000 		.4byte	0x94
 9301 07f0 03       		.uleb128 0x3
 9302 07f1 91       		.byte	0x91
 9303 07f2 A47F     		.sleb128 -92
 9304 07f4 00       		.byte	0
 9305 07f5 1D       		.uleb128 0x1d
 9306 07f6 1A170000 		.4byte	.LBB31
 9307 07fa 22000000 		.4byte	.LBE31-.LBB31
 9308 07fe 11080000 		.4byte	0x811
 9309 0802 19       		.uleb128 0x19
 9310 0803 6900     		.ascii	"i\000"
 9311 0805 01       		.byte	0x1
 9312 0806 1806     		.2byte	0x618
 9313 0808 94000000 		.4byte	0x94
 9314 080c 03       		.uleb128 0x3
 9315 080d 91       		.byte	0x91
 9316 080e A07F     		.sleb128 -96
 9317 0810 00       		.byte	0
 9318 0811 1D       		.uleb128 0x1d
 9319 0812 3C170000 		.4byte	.LBB32
 9320 0816 22000000 		.4byte	.LBE32-.LBB32
 9321 081a 2D080000 		.4byte	0x82d
 9322 081e 19       		.uleb128 0x19
 9323 081f 6900     		.ascii	"i\000"
 9324 0821 01       		.byte	0x1
 9325 0822 1C06     		.2byte	0x61c
 9326 0824 94000000 		.4byte	0x94
 9327 0828 03       		.uleb128 0x3
 9328 0829 91       		.byte	0x91
 9329 082a 9C7F     		.sleb128 -100
 9330 082c 00       		.byte	0
 9331 082d 1D       		.uleb128 0x1d
 9332 082e E8170000 		.4byte	.LBB33
 9333 0832 BC000000 		.4byte	.LBE33-.LBB33
 9334 0836 63080000 		.4byte	0x863
 9335 083a 19       		.uleb128 0x19
 9336 083b 6900     		.ascii	"i\000"
 9337 083d 01       		.byte	0x1
 9338 083e 2F06     		.2byte	0x62f
 9339 0840 94000000 		.4byte	0x94
 9340 0844 03       		.uleb128 0x3
 9341 0845 91       		.byte	0x91
 9342 0846 987F     		.sleb128 -104
 9343 0848 11       		.uleb128 0x11
 9344 0849 54180000 		.4byte	.LBB34
 9345 084d 44000000 		.4byte	.LBE34-.LBB34
 9346 0851 17       		.uleb128 0x17
 9347 0852 7A0C0000 		.4byte	.LASF88
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 209


 9348 0856 01       		.byte	0x1
 9349 0857 3106     		.2byte	0x631
 9350 0859 94000000 		.4byte	0x94
 9351 085d 03       		.uleb128 0x3
 9352 085e 91       		.byte	0x91
 9353 085f F07E     		.sleb128 -144
 9354 0861 00       		.byte	0
 9355 0862 00       		.byte	0
 9356 0863 11       		.uleb128 0x11
 9357 0864 36190000 		.4byte	.LBB35
 9358 0868 B0000000 		.4byte	.LBE35-.LBB35
 9359 086c 17       		.uleb128 0x17
 9360 086d A4020000 		.4byte	.LASF89
 9361 0871 01       		.byte	0x1
 9362 0872 5806     		.2byte	0x658
 9363 0874 94000000 		.4byte	0x94
 9364 0878 03       		.uleb128 0x3
 9365 0879 91       		.byte	0x91
 9366 087a EC7E     		.sleb128 -148
 9367 087c 17       		.uleb128 0x17
 9368 087d DC000000 		.4byte	.LASF90
 9369 0881 01       		.byte	0x1
 9370 0882 5906     		.2byte	0x659
 9371 0884 94000000 		.4byte	0x94
 9372 0888 03       		.uleb128 0x3
 9373 0889 91       		.byte	0x91
 9374 088a E87E     		.sleb128 -152
 9375 088c 17       		.uleb128 0x17
 9376 088d B00D0000 		.4byte	.LASF91
 9377 0891 01       		.byte	0x1
 9378 0892 5A06     		.2byte	0x65a
 9379 0894 94000000 		.4byte	0x94
 9380 0898 03       		.uleb128 0x3
 9381 0899 91       		.byte	0x91
 9382 089a 947F     		.sleb128 -108
 9383 089c 1D       		.uleb128 0x1d
 9384 089d 46190000 		.4byte	.LBB36
 9385 08a1 36000000 		.4byte	.LBE36-.LBB36
 9386 08a5 B8080000 		.4byte	0x8b8
 9387 08a9 19       		.uleb128 0x19
 9388 08aa 6900     		.ascii	"i\000"
 9389 08ac 01       		.byte	0x1
 9390 08ad 5B06     		.2byte	0x65b
 9391 08af 94000000 		.4byte	0x94
 9392 08b3 03       		.uleb128 0x3
 9393 08b4 91       		.byte	0x91
 9394 08b5 907F     		.sleb128 -112
 9395 08b7 00       		.byte	0
 9396 08b8 11       		.uleb128 0x11
 9397 08b9 80190000 		.4byte	.LBB37
 9398 08bd 44000000 		.4byte	.LBE37-.LBB37
 9399 08c1 19       		.uleb128 0x19
 9400 08c2 6900     		.ascii	"i\000"
 9401 08c4 01       		.byte	0x1
 9402 08c5 6106     		.2byte	0x661
 9403 08c7 94000000 		.4byte	0x94
 9404 08cb 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 210


 9405 08cc 91       		.byte	0x91
 9406 08cd 8C7F     		.sleb128 -116
 9407 08cf 00       		.byte	0
 9408 08d0 00       		.byte	0
 9409 08d1 00       		.byte	0
 9410 08d2 14       		.uleb128 0x14
 9411 08d3 09050000 		.4byte	.LASF92
 9412 08d7 01       		.byte	0x1
 9413 08d8 7606     		.2byte	0x676
 9414 08da 00000000 		.4byte	.LFB76
 9415 08de 70000000 		.4byte	.LFE76-.LFB76
 9416 08e2 01       		.uleb128 0x1
 9417 08e3 9C       		.byte	0x9c
 9418 08e4 14       		.uleb128 0x14
 9419 08e5 DF0E0000 		.4byte	.LASF93
 9420 08e9 01       		.byte	0x1
 9421 08ea 8B06     		.2byte	0x68b
 9422 08ec 00000000 		.4byte	.LFB77
 9423 08f0 70010000 		.4byte	.LFE77-.LFB77
 9424 08f4 01       		.uleb128 0x1
 9425 08f5 9C       		.byte	0x9c
 9426 08f6 15       		.uleb128 0x15
 9427 08f7 20080000 		.4byte	.LASF94
 9428 08fb 01       		.byte	0x1
 9429 08fc B306     		.2byte	0x6b3
 9430 08fe D9000000 		.4byte	0xd9
 9431 0902 00000000 		.4byte	.LFB78
 9432 0906 E0000000 		.4byte	.LFE78-.LFB78
 9433 090a 01       		.uleb128 0x1
 9434 090b 9C       		.byte	0x9c
 9435 090c 6B090000 		.4byte	0x96b
 9436 0910 18       		.uleb128 0x18
 9437 0911 680E0000 		.4byte	.LASF95
 9438 0915 01       		.byte	0x1
 9439 0916 B306     		.2byte	0x6b3
 9440 0918 D9000000 		.4byte	0xd9
 9441 091c 02       		.uleb128 0x2
 9442 091d 91       		.byte	0x91
 9443 091e 67       		.sleb128 -25
 9444 091f 18       		.uleb128 0x18
 9445 0920 7A010000 		.4byte	.LASF96
 9446 0924 01       		.byte	0x1
 9447 0925 B306     		.2byte	0x6b3
 9448 0927 E5000000 		.4byte	0xe5
 9449 092b 02       		.uleb128 0x2
 9450 092c 91       		.byte	0x91
 9451 092d 64       		.sleb128 -28
 9452 092e 18       		.uleb128 0x18
 9453 092f AB0D0000 		.4byte	.LASF97
 9454 0933 01       		.byte	0x1
 9455 0934 B306     		.2byte	0x6b3
 9456 0936 A2000000 		.4byte	0xa2
 9457 093a 02       		.uleb128 0x2
 9458 093b 91       		.byte	0x91
 9459 093c 66       		.sleb128 -26
 9460 093d 17       		.uleb128 0x17
 9461 093e F5070000 		.4byte	.LASF83
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 211


 9462 0942 01       		.byte	0x1
 9463 0943 B506     		.2byte	0x6b5
 9464 0945 2A010000 		.4byte	0x12a
 9465 0949 02       		.uleb128 0x2
 9466 094a 91       		.byte	0x91
 9467 094b 6F       		.sleb128 -17
 9468 094c 17       		.uleb128 0x17
 9469 094d 05030000 		.4byte	.LASF98
 9470 0951 01       		.byte	0x1
 9471 0952 B606     		.2byte	0x6b6
 9472 0954 A2000000 		.4byte	0xa2
 9473 0958 02       		.uleb128 0x2
 9474 0959 91       		.byte	0x91
 9475 095a 77       		.sleb128 -9
 9476 095b 17       		.uleb128 0x17
 9477 095c 4D0A0000 		.4byte	.LASF99
 9478 0960 01       		.byte	0x1
 9479 0961 B706     		.2byte	0x6b7
 9480 0963 CE000000 		.4byte	0xce
 9481 0967 02       		.uleb128 0x2
 9482 0968 91       		.byte	0x91
 9483 0969 70       		.sleb128 -16
 9484 096a 00       		.byte	0
 9485 096b 15       		.uleb128 0x15
 9486 096c 980B0000 		.4byte	.LASF100
 9487 0970 01       		.byte	0x1
 9488 0971 EC06     		.2byte	0x6ec
 9489 0973 D9000000 		.4byte	0xd9
 9490 0977 00000000 		.4byte	.LFB79
 9491 097b E0000000 		.4byte	.LFE79-.LFB79
 9492 097f 01       		.uleb128 0x1
 9493 0980 9C       		.byte	0x9c
 9494 0981 E0090000 		.4byte	0x9e0
 9495 0985 18       		.uleb128 0x18
 9496 0986 680E0000 		.4byte	.LASF95
 9497 098a 01       		.byte	0x1
 9498 098b EC06     		.2byte	0x6ec
 9499 098d D9000000 		.4byte	0xd9
 9500 0991 02       		.uleb128 0x2
 9501 0992 91       		.byte	0x91
 9502 0993 6F       		.sleb128 -17
 9503 0994 18       		.uleb128 0x18
 9504 0995 7A010000 		.4byte	.LASF96
 9505 0999 01       		.byte	0x1
 9506 099a EC06     		.2byte	0x6ec
 9507 099c D9000000 		.4byte	0xd9
 9508 09a0 02       		.uleb128 0x2
 9509 09a1 91       		.byte	0x91
 9510 09a2 6E       		.sleb128 -18
 9511 09a3 18       		.uleb128 0x18
 9512 09a4 AB0D0000 		.4byte	.LASF97
 9513 09a8 01       		.byte	0x1
 9514 09a9 EC06     		.2byte	0x6ec
 9515 09ab A2000000 		.4byte	0xa2
 9516 09af 02       		.uleb128 0x2
 9517 09b0 91       		.byte	0x91
 9518 09b1 6D       		.sleb128 -19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 212


 9519 09b2 17       		.uleb128 0x17
 9520 09b3 F5070000 		.4byte	.LASF83
 9521 09b7 01       		.byte	0x1
 9522 09b8 EE06     		.2byte	0x6ee
 9523 09ba 2A010000 		.4byte	0x12a
 9524 09be 02       		.uleb128 0x2
 9525 09bf 91       		.byte	0x91
 9526 09c0 72       		.sleb128 -14
 9527 09c1 17       		.uleb128 0x17
 9528 09c2 4D0A0000 		.4byte	.LASF99
 9529 09c6 01       		.byte	0x1
 9530 09c7 EF06     		.2byte	0x6ef
 9531 09c9 CE000000 		.4byte	0xce
 9532 09cd 02       		.uleb128 0x2
 9533 09ce 91       		.byte	0x91
 9534 09cf 74       		.sleb128 -12
 9535 09d0 17       		.uleb128 0x17
 9536 09d1 05030000 		.4byte	.LASF98
 9537 09d5 01       		.byte	0x1
 9538 09d6 F006     		.2byte	0x6f0
 9539 09d8 A2000000 		.4byte	0xa2
 9540 09dc 02       		.uleb128 0x2
 9541 09dd 91       		.byte	0x91
 9542 09de 73       		.sleb128 -13
 9543 09df 00       		.byte	0
 9544 09e0 14       		.uleb128 0x14
 9545 09e1 5F050000 		.4byte	.LASF101
 9546 09e5 01       		.byte	0x1
 9547 09e6 1F07     		.2byte	0x71f
 9548 09e8 00000000 		.4byte	.LFB80
 9549 09ec 30000000 		.4byte	.LFE80-.LFB80
 9550 09f0 01       		.uleb128 0x1
 9551 09f1 9C       		.byte	0x9c
 9552 09f2 1E       		.uleb128 0x1e
 9553 09f3 E90D0000 		.4byte	.LASF103
 9554 09f7 01       		.byte	0x1
 9555 09f8 2E07     		.2byte	0x72e
 9556 09fa 00000000 		.4byte	.LFB81
 9557 09fe E8000000 		.4byte	.LFE81-.LFB81
 9558 0a02 01       		.uleb128 0x1
 9559 0a03 9C       		.byte	0x9c
 9560 0a04 14       		.uleb128 0x14
 9561 0a05 2C050000 		.4byte	.LASF104
 9562 0a09 01       		.byte	0x1
 9563 0a0a 4307     		.2byte	0x743
 9564 0a0c 00000000 		.4byte	.LFB82
 9565 0a10 54000000 		.4byte	.LFE82-.LFB82
 9566 0a14 01       		.uleb128 0x1
 9567 0a15 9C       		.byte	0x9c
 9568 0a16 14       		.uleb128 0x14
 9569 0a17 4E040000 		.4byte	.LASF105
 9570 0a1b 01       		.byte	0x1
 9571 0a1c 5607     		.2byte	0x756
 9572 0a1e 00000000 		.4byte	.LFB83
 9573 0a22 C4000000 		.4byte	.LFE83-.LFB83
 9574 0a26 01       		.uleb128 0x1
 9575 0a27 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 213


 9576 0a28 15       		.uleb128 0x15
 9577 0a29 2D0A0000 		.4byte	.LASF106
 9578 0a2d 01       		.byte	0x1
 9579 0a2e 8907     		.2byte	0x789
 9580 0a30 FD000000 		.4byte	0xfd
 9581 0a34 00000000 		.4byte	.LFB84
 9582 0a38 98000000 		.4byte	.LFE84-.LFB84
 9583 0a3c 01       		.uleb128 0x1
 9584 0a3d 9C       		.byte	0x9c
 9585 0a3e 770A0000 		.4byte	0xa77
 9586 0a42 16       		.uleb128 0x16
 9587 0a43 5800     		.ascii	"X\000"
 9588 0a45 01       		.byte	0x1
 9589 0a46 8907     		.2byte	0x789
 9590 0a48 FD000000 		.4byte	0xfd
 9591 0a4c 02       		.uleb128 0x2
 9592 0a4d 91       		.byte	0x91
 9593 0a4e 64       		.sleb128 -28
 9594 0a4f 19       		.uleb128 0x19
 9595 0a50 5900     		.ascii	"Y\000"
 9596 0a52 01       		.byte	0x1
 9597 0a53 8A07     		.2byte	0x78a
 9598 0a55 FD000000 		.4byte	0xfd
 9599 0a59 02       		.uleb128 0x2
 9600 0a5a 91       		.byte	0x91
 9601 0a5b 70       		.sleb128 -16
 9602 0a5c 19       		.uleb128 0x19
 9603 0a5d 4600     		.ascii	"F\000"
 9604 0a5f 01       		.byte	0x1
 9605 0a60 8A07     		.2byte	0x78a
 9606 0a62 FD000000 		.4byte	0xfd
 9607 0a66 02       		.uleb128 0x2
 9608 0a67 91       		.byte	0x91
 9609 0a68 74       		.sleb128 -12
 9610 0a69 19       		.uleb128 0x19
 9611 0a6a 4500     		.ascii	"E\000"
 9612 0a6c 01       		.byte	0x1
 9613 0a6d 8B07     		.2byte	0x78b
 9614 0a6f 94000000 		.4byte	0x94
 9615 0a73 02       		.uleb128 0x2
 9616 0a74 91       		.byte	0x91
 9617 0a75 6C       		.sleb128 -20
 9618 0a76 00       		.byte	0
 9619 0a77 1F       		.uleb128 0x1f
 9620 0a78 BD000000 		.4byte	.LASF108
 9621 0a7c 01       		.byte	0x1
 9622 0a7d 9D07     		.2byte	0x79d
 9623 0a7f 00000000 		.4byte	.LFB85
 9624 0a83 D4000000 		.4byte	.LFE85-.LFB85
 9625 0a87 01       		.uleb128 0x1
 9626 0a88 9C       		.byte	0x9c
 9627 0a89 D40A0000 		.4byte	0xad4
 9628 0a8d 18       		.uleb128 0x18
 9629 0a8e 980A0000 		.4byte	.LASF109
 9630 0a92 01       		.byte	0x1
 9631 0a93 9D07     		.2byte	0x79d
 9632 0a95 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 214


 9633 0a99 02       		.uleb128 0x2
 9634 0a9a 91       		.byte	0x91
 9635 0a9b 64       		.sleb128 -28
 9636 0a9c 17       		.uleb128 0x17
 9637 0a9d E10A0000 		.4byte	.LASF110
 9638 0aa1 01       		.byte	0x1
 9639 0aa2 A907     		.2byte	0x7a9
 9640 0aa4 B8000000 		.4byte	0xb8
 9641 0aa8 02       		.uleb128 0x2
 9642 0aa9 91       		.byte	0x91
 9643 0aaa 76       		.sleb128 -10
 9644 0aab 11       		.uleb128 0x11
 9645 0aac 18000000 		.4byte	.LBB38
 9646 0ab0 86000000 		.4byte	.LBE38-.LBB38
 9647 0ab4 17       		.uleb128 0x17
 9648 0ab5 B90C0000 		.4byte	.LASF111
 9649 0ab9 01       		.byte	0x1
 9650 0aba AD07     		.2byte	0x7ad
 9651 0abc FD000000 		.4byte	0xfd
 9652 0ac0 02       		.uleb128 0x2
 9653 0ac1 91       		.byte	0x91
 9654 0ac2 70       		.sleb128 -16
 9655 0ac3 17       		.uleb128 0x17
 9656 0ac4 610F0000 		.4byte	.LASF112
 9657 0ac8 01       		.byte	0x1
 9658 0ac9 BC07     		.2byte	0x7bc
 9659 0acb 94000000 		.4byte	0x94
 9660 0acf 02       		.uleb128 0x2
 9661 0ad0 91       		.byte	0x91
 9662 0ad1 6C       		.sleb128 -20
 9663 0ad2 00       		.byte	0
 9664 0ad3 00       		.byte	0
 9665 0ad4 1F       		.uleb128 0x1f
 9666 0ad5 BE060000 		.4byte	.LASF113
 9667 0ad9 01       		.byte	0x1
 9668 0ada C807     		.2byte	0x7c8
 9669 0adc 00000000 		.4byte	.LFB86
 9670 0ae0 1C000000 		.4byte	.LFE86-.LFB86
 9671 0ae4 01       		.uleb128 0x1
 9672 0ae5 9C       		.byte	0x9c
 9673 0ae6 080B0000 		.4byte	0xb08
 9674 0aea 16       		.uleb128 0x16
 9675 0aeb 636300   		.ascii	"cc\000"
 9676 0aee 01       		.byte	0x1
 9677 0aef C807     		.2byte	0x7c8
 9678 0af1 94000000 		.4byte	0x94
 9679 0af5 02       		.uleb128 0x2
 9680 0af6 91       		.byte	0x91
 9681 0af7 74       		.sleb128 -12
 9682 0af8 16       		.uleb128 0x16
 9683 0af9 76616C00 		.ascii	"val\000"
 9684 0afd 01       		.byte	0x1
 9685 0afe C807     		.2byte	0x7c8
 9686 0b00 94000000 		.4byte	0x94
 9687 0b04 02       		.uleb128 0x2
 9688 0b05 91       		.byte	0x91
 9689 0b06 70       		.sleb128 -16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 215


 9690 0b07 00       		.byte	0
 9691 0b08 1F       		.uleb128 0x1f
 9692 0b09 37090000 		.4byte	.LASF114
 9693 0b0d 01       		.byte	0x1
 9694 0b0e CE07     		.2byte	0x7ce
 9695 0b10 00000000 		.4byte	.LFB87
 9696 0b14 68000000 		.4byte	.LFE87-.LFB87
 9697 0b18 01       		.uleb128 0x1
 9698 0b19 9C       		.byte	0x9c
 9699 0b1a 4C0B0000 		.4byte	0xb4c
 9700 0b1e 18       		.uleb128 0x18
 9701 0b1f E5020000 		.4byte	.LASF115
 9702 0b23 01       		.byte	0x1
 9703 0b24 CE07     		.2byte	0x7ce
 9704 0b26 94000000 		.4byte	0x94
 9705 0b2a 02       		.uleb128 0x2
 9706 0b2b 91       		.byte	0x91
 9707 0b2c 74       		.sleb128 -12
 9708 0b2d 18       		.uleb128 0x18
 9709 0b2e E10A0000 		.4byte	.LASF110
 9710 0b32 01       		.byte	0x1
 9711 0b33 CE07     		.2byte	0x7ce
 9712 0b35 94000000 		.4byte	0x94
 9713 0b39 02       		.uleb128 0x2
 9714 0b3a 91       		.byte	0x91
 9715 0b3b 70       		.sleb128 -16
 9716 0b3c 18       		.uleb128 0x18
 9717 0b3d 18080000 		.4byte	.LASF116
 9718 0b41 01       		.byte	0x1
 9719 0b42 CE07     		.2byte	0x7ce
 9720 0b44 94000000 		.4byte	0x94
 9721 0b48 02       		.uleb128 0x2
 9722 0b49 91       		.byte	0x91
 9723 0b4a 6C       		.sleb128 -20
 9724 0b4b 00       		.byte	0
 9725 0b4c 1F       		.uleb128 0x1f
 9726 0b4d AB050000 		.4byte	.LASF117
 9727 0b51 01       		.byte	0x1
 9728 0b52 DB07     		.2byte	0x7db
 9729 0b54 00000000 		.4byte	.LFB88
 9730 0b58 68000000 		.4byte	.LFE88-.LFB88
 9731 0b5c 01       		.uleb128 0x1
 9732 0b5d 9C       		.byte	0x9c
 9733 0b5e 900B0000 		.4byte	0xb90
 9734 0b62 18       		.uleb128 0x18
 9735 0b63 E5020000 		.4byte	.LASF115
 9736 0b67 01       		.byte	0x1
 9737 0b68 DB07     		.2byte	0x7db
 9738 0b6a 94000000 		.4byte	0x94
 9739 0b6e 02       		.uleb128 0x2
 9740 0b6f 91       		.byte	0x91
 9741 0b70 74       		.sleb128 -12
 9742 0b71 18       		.uleb128 0x18
 9743 0b72 9E040000 		.4byte	.LASF118
 9744 0b76 01       		.byte	0x1
 9745 0b77 DB07     		.2byte	0x7db
 9746 0b79 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 216


 9747 0b7d 02       		.uleb128 0x2
 9748 0b7e 91       		.byte	0x91
 9749 0b7f 70       		.sleb128 -16
 9750 0b80 18       		.uleb128 0x18
 9751 0b81 18080000 		.4byte	.LASF116
 9752 0b85 01       		.byte	0x1
 9753 0b86 DB07     		.2byte	0x7db
 9754 0b88 94000000 		.4byte	0x94
 9755 0b8c 02       		.uleb128 0x2
 9756 0b8d 91       		.byte	0x91
 9757 0b8e 6C       		.sleb128 -20
 9758 0b8f 00       		.byte	0
 9759 0b90 1F       		.uleb128 0x1f
 9760 0b91 D0050000 		.4byte	.LASF119
 9761 0b95 01       		.byte	0x1
 9762 0b96 E707     		.2byte	0x7e7
 9763 0b98 00000000 		.4byte	.LFB89
 9764 0b9c 68000000 		.4byte	.LFE89-.LFB89
 9765 0ba0 01       		.uleb128 0x1
 9766 0ba1 9C       		.byte	0x9c
 9767 0ba2 D40B0000 		.4byte	0xbd4
 9768 0ba6 18       		.uleb128 0x18
 9769 0ba7 A5010000 		.4byte	.LASF120
 9770 0bab 01       		.byte	0x1
 9771 0bac E707     		.2byte	0x7e7
 9772 0bae 94000000 		.4byte	0x94
 9773 0bb2 02       		.uleb128 0x2
 9774 0bb3 91       		.byte	0x91
 9775 0bb4 74       		.sleb128 -12
 9776 0bb5 18       		.uleb128 0x18
 9777 0bb6 F2000000 		.4byte	.LASF121
 9778 0bba 01       		.byte	0x1
 9779 0bbb E707     		.2byte	0x7e7
 9780 0bbd 94000000 		.4byte	0x94
 9781 0bc1 02       		.uleb128 0x2
 9782 0bc2 91       		.byte	0x91
 9783 0bc3 70       		.sleb128 -16
 9784 0bc4 18       		.uleb128 0x18
 9785 0bc5 18080000 		.4byte	.LASF116
 9786 0bc9 01       		.byte	0x1
 9787 0bca E707     		.2byte	0x7e7
 9788 0bcc 94000000 		.4byte	0x94
 9789 0bd0 02       		.uleb128 0x2
 9790 0bd1 91       		.byte	0x91
 9791 0bd2 6C       		.sleb128 -20
 9792 0bd3 00       		.byte	0
 9793 0bd4 1F       		.uleb128 0x1f
 9794 0bd5 9F0A0000 		.4byte	.LASF122
 9795 0bd9 01       		.byte	0x1
 9796 0bda F307     		.2byte	0x7f3
 9797 0bdc 00000000 		.4byte	.LFB90
 9798 0be0 6C000000 		.4byte	.LFE90-.LFB90
 9799 0be4 01       		.uleb128 0x1
 9800 0be5 9C       		.byte	0x9c
 9801 0be6 090C0000 		.4byte	0xc09
 9802 0bea 16       		.uleb128 0x16
 9803 0beb 76616C00 		.ascii	"val\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 217


 9804 0bef 01       		.byte	0x1
 9805 0bf0 F307     		.2byte	0x7f3
 9806 0bf2 94000000 		.4byte	0x94
 9807 0bf6 02       		.uleb128 0x2
 9808 0bf7 91       		.byte	0x91
 9809 0bf8 74       		.sleb128 -12
 9810 0bf9 18       		.uleb128 0x18
 9811 0bfa 18080000 		.4byte	.LASF116
 9812 0bfe 01       		.byte	0x1
 9813 0bff F307     		.2byte	0x7f3
 9814 0c01 94000000 		.4byte	0x94
 9815 0c05 02       		.uleb128 0x2
 9816 0c06 91       		.byte	0x91
 9817 0c07 70       		.sleb128 -16
 9818 0c08 00       		.byte	0
 9819 0c09 14       		.uleb128 0x14
 9820 0c0a F1020000 		.4byte	.LASF123
 9821 0c0e 01       		.byte	0x1
 9822 0c0f FF07     		.2byte	0x7ff
 9823 0c11 00000000 		.4byte	.LFB91
 9824 0c15 64000000 		.4byte	.LFE91-.LFB91
 9825 0c19 01       		.uleb128 0x1
 9826 0c1a 9C       		.byte	0x9c
 9827 0c1b 1F       		.uleb128 0x1f
 9828 0c1c C6060000 		.4byte	.LASF124
 9829 0c20 01       		.byte	0x1
 9830 0c21 1708     		.2byte	0x817
 9831 0c23 00000000 		.4byte	.LFB92
 9832 0c27 68080000 		.4byte	.LFE92-.LFB92
 9833 0c2b 01       		.uleb128 0x1
 9834 0c2c 9C       		.byte	0x9c
 9835 0c2d C60D0000 		.4byte	0xdc6
 9836 0c31 1D       		.uleb128 0x1d
 9837 0c32 16000000 		.4byte	.LBB39
 9838 0c36 3C050000 		.4byte	.LBE39-.LBB39
 9839 0c3a E10C0000 		.4byte	0xce1
 9840 0c3e 17       		.uleb128 0x17
 9841 0c3f FD010000 		.4byte	.LASF125
 9842 0c43 01       		.byte	0x1
 9843 0c44 2208     		.2byte	0x822
 9844 0c46 7C020000 		.4byte	0x27c
 9845 0c4a 02       		.uleb128 0x2
 9846 0c4b 91       		.byte	0x91
 9847 0c4c 40       		.sleb128 -64
 9848 0c4d 19       		.uleb128 0x19
 9849 0c4e 6900     		.ascii	"i\000"
 9850 0c50 01       		.byte	0x1
 9851 0c51 2308     		.2byte	0x823
 9852 0c53 CE000000 		.4byte	0xce
 9853 0c57 02       		.uleb128 0x2
 9854 0c58 91       		.byte	0x91
 9855 0c59 6C       		.sleb128 -20
 9856 0c5a 17       		.uleb128 0x17
 9857 0c5b 76040000 		.4byte	.LASF126
 9858 0c5f 01       		.byte	0x1
 9859 0c60 2408     		.2byte	0x824
 9860 0c62 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 218


 9861 0c66 02       		.uleb128 0x2
 9862 0c67 91       		.byte	0x91
 9863 0c68 57       		.sleb128 -41
 9864 0c69 17       		.uleb128 0x17
 9865 0c6a 0C040000 		.4byte	.LASF127
 9866 0c6e 01       		.byte	0x1
 9867 0c6f 3808     		.2byte	0x838
 9868 0c71 B8000000 		.4byte	0xb8
 9869 0c75 02       		.uleb128 0x2
 9870 0c76 91       		.byte	0x91
 9871 0c77 54       		.sleb128 -44
 9872 0c78 1D       		.uleb128 0x1d
 9873 0c79 8E000000 		.4byte	.LBB40
 9874 0c7d 76000000 		.4byte	.LBE40-.LBB40
 9875 0c81 AA0C0000 		.4byte	0xcaa
 9876 0c85 19       		.uleb128 0x19
 9877 0c86 6A00     		.ascii	"j\000"
 9878 0c88 01       		.byte	0x1
 9879 0c89 2E08     		.2byte	0x82e
 9880 0c8b 94000000 		.4byte	0x94
 9881 0c8f 02       		.uleb128 0x2
 9882 0c90 91       		.byte	0x91
 9883 0c91 68       		.sleb128 -24
 9884 0c92 11       		.uleb128 0x11
 9885 0c93 94000000 		.4byte	.LBB41
 9886 0c97 64000000 		.4byte	.LBE41-.LBB41
 9887 0c9b 19       		.uleb128 0x19
 9888 0c9c 6B00     		.ascii	"k\000"
 9889 0c9e 01       		.byte	0x1
 9890 0c9f 3008     		.2byte	0x830
 9891 0ca1 94000000 		.4byte	0x94
 9892 0ca5 02       		.uleb128 0x2
 9893 0ca6 91       		.byte	0x91
 9894 0ca7 64       		.sleb128 -28
 9895 0ca8 00       		.byte	0
 9896 0ca9 00       		.byte	0
 9897 0caa 1D       		.uleb128 0x1d
 9898 0cab D6010000 		.4byte	.LBB42
 9899 0caf 46000000 		.4byte	.LBE42-.LBB42
 9900 0cb3 C70C0000 		.4byte	0xcc7
 9901 0cb7 17       		.uleb128 0x17
 9902 0cb8 E5010000 		.4byte	.LASF128
 9903 0cbc 01       		.byte	0x1
 9904 0cbd 5008     		.2byte	0x850
 9905 0cbf B8000000 		.4byte	0xb8
 9906 0cc3 02       		.uleb128 0x2
 9907 0cc4 91       		.byte	0x91
 9908 0cc5 52       		.sleb128 -46
 9909 0cc6 00       		.byte	0
 9910 0cc7 11       		.uleb128 0x11
 9911 0cc8 06040000 		.4byte	.LBB43
 9912 0ccc 54000000 		.4byte	.LBE43-.LBB43
 9913 0cd0 17       		.uleb128 0x17
 9914 0cd1 E5010000 		.4byte	.LASF128
 9915 0cd5 01       		.byte	0x1
 9916 0cd6 8C08     		.2byte	0x88c
 9917 0cd8 AD000000 		.4byte	0xad
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 219


 9918 0cdc 02       		.uleb128 0x2
 9919 0cdd 91       		.byte	0x91
 9920 0cde 50       		.sleb128 -48
 9921 0cdf 00       		.byte	0
 9922 0ce0 00       		.byte	0
 9923 0ce1 11       		.uleb128 0x11
 9924 0ce2 5C050000 		.4byte	.LBB44
 9925 0ce6 BE020000 		.4byte	.LBE44-.LBB44
 9926 0cea 17       		.uleb128 0x17
 9927 0ceb FD010000 		.4byte	.LASF125
 9928 0cef 01       		.byte	0x1
 9929 0cf0 E508     		.2byte	0x8e5
 9930 0cf2 7C020000 		.4byte	0x27c
 9931 0cf6 03       		.uleb128 0x3
 9932 0cf7 91       		.byte	0x91
 9933 0cf8 BC7F     		.sleb128 -68
 9934 0cfa 19       		.uleb128 0x19
 9935 0cfb 6900     		.ascii	"i\000"
 9936 0cfd 01       		.byte	0x1
 9937 0cfe E608     		.2byte	0x8e6
 9938 0d00 CE000000 		.4byte	0xce
 9939 0d04 02       		.uleb128 0x2
 9940 0d05 91       		.byte	0x91
 9941 0d06 60       		.sleb128 -32
 9942 0d07 17       		.uleb128 0x17
 9943 0d08 76040000 		.4byte	.LASF126
 9944 0d0c 01       		.byte	0x1
 9945 0d0d E708     		.2byte	0x8e7
 9946 0d0f A2000000 		.4byte	0xa2
 9947 0d13 02       		.uleb128 0x2
 9948 0d14 91       		.byte	0x91
 9949 0d15 4F       		.sleb128 -49
 9950 0d16 1D       		.uleb128 0x1d
 9951 0d17 8E050000 		.4byte	.LBB45
 9952 0d1b 7C000000 		.4byte	.LBE45-.LBB45
 9953 0d1f 330D0000 		.4byte	0xd33
 9954 0d23 17       		.uleb128 0x17
 9955 0d24 3A0D0000 		.4byte	.LASF129
 9956 0d28 01       		.byte	0x1
 9957 0d29 EB08     		.2byte	0x8eb
 9958 0d2b A2000000 		.4byte	0xa2
 9959 0d2f 02       		.uleb128 0x2
 9960 0d30 91       		.byte	0x91
 9961 0d31 4E       		.sleb128 -50
 9962 0d32 00       		.byte	0
 9963 0d33 11       		.uleb128 0x11
 9964 0d34 1E060000 		.4byte	.LBB46
 9965 0d38 B0010000 		.4byte	.LBE46-.LBB46
 9966 0d3c 17       		.uleb128 0x17
 9967 0d3d D10D0000 		.4byte	.LASF130
 9968 0d41 01       		.byte	0x1
 9969 0d42 F608     		.2byte	0x8f6
 9970 0d44 CE000000 		.4byte	0xce
 9971 0d48 02       		.uleb128 0x2
 9972 0d49 91       		.byte	0x91
 9973 0d4a 5C       		.sleb128 -36
 9974 0d4b 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 220


 9975 0d4c 24060000 		.4byte	.LBB47
 9976 0d50 9C010000 		.4byte	.LBE47-.LBB47
 9977 0d54 17       		.uleb128 0x17
 9978 0d55 27040000 		.4byte	.LASF79
 9979 0d59 01       		.byte	0x1
 9980 0d5a F808     		.2byte	0x8f8
 9981 0d5c B8000000 		.4byte	0xb8
 9982 0d60 02       		.uleb128 0x2
 9983 0d61 91       		.byte	0x91
 9984 0d62 4C       		.sleb128 -52
 9985 0d63 11       		.uleb128 0x11
 9986 0d64 32060000 		.4byte	.LBB48
 9987 0d68 8E010000 		.4byte	.LBE48-.LBB48
 9988 0d6c 17       		.uleb128 0x17
 9989 0d6d C3050000 		.4byte	.LASF131
 9990 0d71 01       		.byte	0x1
 9991 0d72 F908     		.2byte	0x8f9
 9992 0d74 CE000000 		.4byte	0xce
 9993 0d78 02       		.uleb128 0x2
 9994 0d79 91       		.byte	0x91
 9995 0d7a 58       		.sleb128 -40
 9996 0d7b 11       		.uleb128 0x11
 9997 0d7c 8C060000 		.4byte	.LBB49
 9998 0d80 26010000 		.4byte	.LBE49-.LBB49
 9999 0d84 17       		.uleb128 0x17
 10000 0d85 DA030000 		.4byte	.LASF132
 10001 0d89 01       		.byte	0x1
 10002 0d8a 0309     		.2byte	0x903
 10003 0d8c B8000000 		.4byte	0xb8
 10004 0d90 02       		.uleb128 0x2
 10005 0d91 91       		.byte	0x91
 10006 0d92 4A       		.sleb128 -54
 10007 0d93 17       		.uleb128 0x17
 10008 0d94 2D0C0000 		.4byte	.LASF133
 10009 0d98 01       		.byte	0x1
 10010 0d99 0409     		.2byte	0x904
 10011 0d9b A2000000 		.4byte	0xa2
 10012 0d9f 02       		.uleb128 0x2
 10013 0da0 91       		.byte	0x91
 10014 0da1 49       		.sleb128 -55
 10015 0da2 17       		.uleb128 0x17
 10016 0da3 21010000 		.4byte	.LASF134
 10017 0da7 01       		.byte	0x1
 10018 0da8 0509     		.2byte	0x905
 10019 0daa A2000000 		.4byte	0xa2
 10020 0dae 02       		.uleb128 0x2
 10021 0daf 91       		.byte	0x91
 10022 0db0 48       		.sleb128 -56
 10023 0db1 17       		.uleb128 0x17
 10024 0db2 5F030000 		.4byte	.LASF80
 10025 0db6 01       		.byte	0x1
 10026 0db7 0809     		.2byte	0x908
 10027 0db9 B8000000 		.4byte	0xb8
 10028 0dbd 02       		.uleb128 0x2
 10029 0dbe 91       		.byte	0x91
 10030 0dbf 46       		.sleb128 -58
 10031 0dc0 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 221


 10032 0dc1 00       		.byte	0
 10033 0dc2 00       		.byte	0
 10034 0dc3 00       		.byte	0
 10035 0dc4 00       		.byte	0
 10036 0dc5 00       		.byte	0
 10037 0dc6 1F       		.uleb128 0x1f
 10038 0dc7 8C030000 		.4byte	.LASF135
 10039 0dcb 01       		.byte	0x1
 10040 0dcc 3209     		.2byte	0x932
 10041 0dce 00000000 		.4byte	.LFB93
 10042 0dd2 3C010000 		.4byte	.LFE93-.LFB93
 10043 0dd6 01       		.uleb128 0x1
 10044 0dd7 9C       		.byte	0x9c
 10045 0dd8 120E0000 		.4byte	0xe12
 10046 0ddc 18       		.uleb128 0x18
 10047 0ddd CD0A0000 		.4byte	.LASF136
 10048 0de1 01       		.byte	0x1
 10049 0de2 3209     		.2byte	0x932
 10050 0de4 D9000000 		.4byte	0xd9
 10051 0de8 02       		.uleb128 0x2
 10052 0de9 91       		.byte	0x91
 10053 0dea 6F       		.sleb128 -17
 10054 0deb 18       		.uleb128 0x18
 10055 0dec F00B0000 		.4byte	.LASF137
 10056 0df0 01       		.byte	0x1
 10057 0df1 3209     		.2byte	0x932
 10058 0df3 120E0000 		.4byte	0xe12
 10059 0df7 02       		.uleb128 0x2
 10060 0df8 91       		.byte	0x91
 10061 0df9 68       		.sleb128 -24
 10062 0dfa 11       		.uleb128 0x11
 10063 0dfb 48000000 		.4byte	.LBB50
 10064 0dff 54000000 		.4byte	.LBE50-.LBB50
 10065 0e03 19       		.uleb128 0x19
 10066 0e04 6900     		.ascii	"i\000"
 10067 0e06 01       		.byte	0x1
 10068 0e07 3E09     		.2byte	0x93e
 10069 0e09 94000000 		.4byte	0x94
 10070 0e0d 02       		.uleb128 0x2
 10071 0e0e 91       		.byte	0x91
 10072 0e0f 74       		.sleb128 -12
 10073 0e10 00       		.byte	0
 10074 0e11 00       		.byte	0
 10075 0e12 20       		.uleb128 0x20
 10076 0e13 04       		.byte	0x4
 10077 0e14 D9000000 		.4byte	0xd9
 10078 0e18 07       		.uleb128 0x7
 10079 0e19 D9000000 		.4byte	0xd9
 10080 0e1d 280E0000 		.4byte	0xe28
 10081 0e21 08       		.uleb128 0x8
 10082 0e22 36010000 		.4byte	0x136
 10083 0e26 01       		.byte	0x1
 10084 0e27 00       		.byte	0
 10085 0e28 21       		.uleb128 0x21
 10086 0e29 DA040000 		.4byte	.LASF138
 10087 0e2d 01       		.byte	0x1
 10088 0e2e DE       		.byte	0xde
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 222


 10089 0e2f 180E0000 		.4byte	0xe18
 10090 0e33 05       		.uleb128 0x5
 10091 0e34 03       		.byte	0x3
 10092 0e35 60000000 		.4byte	eepromArray
 10093 0e39 22       		.uleb128 0x22
 10094 0e3a 460E0000 		.4byte	.LASF139
 10095 0e3e 08       		.byte	0x8
 10096 0e3f F3       		.byte	0xf3
 10097 0e40 2A010000 		.4byte	0x12a
 10098 0e44 22       		.uleb128 0x22
 10099 0e45 D00E0000 		.4byte	.LASF140
 10100 0e49 08       		.byte	0x8
 10101 0e4a F9       		.byte	0xf9
 10102 0e4b 2A010000 		.4byte	0x12a
 10103 0e4f 07       		.uleb128 0x7
 10104 0e50 D9000000 		.4byte	0xd9
 10105 0e54 5F0E0000 		.4byte	0xe5f
 10106 0e58 08       		.uleb128 0x8
 10107 0e59 36010000 		.4byte	0x136
 10108 0e5d 3F       		.byte	0x3f
 10109 0e5e 00       		.byte	0
 10110 0e5f 22       		.uleb128 0x22
 10111 0e60 98080000 		.4byte	.LASF141
 10112 0e64 08       		.byte	0x8
 10113 0e65 FA       		.byte	0xfa
 10114 0e66 4F0E0000 		.4byte	0xe4f
 10115 0e6a 22       		.uleb128 0x22
 10116 0e6b 45050000 		.4byte	.LASF142
 10117 0e6f 08       		.byte	0x8
 10118 0e70 FE       		.byte	0xfe
 10119 0e71 2A010000 		.4byte	0x12a
 10120 0e75 22       		.uleb128 0x22
 10121 0e76 8B0E0000 		.4byte	.LASF143
 10122 0e7a 08       		.byte	0x8
 10123 0e7b FF       		.byte	0xff
 10124 0e7c 4F0E0000 		.4byte	0xe4f
 10125 0e80 22       		.uleb128 0x22
 10126 0e81 A1000000 		.4byte	.LASF144
 10127 0e85 09       		.byte	0x9
 10128 0e86 82       		.byte	0x82
 10129 0e87 BF010000 		.4byte	0x1bf
 10130 0e8b 07       		.uleb128 0x7
 10131 0e8c 9C0E0000 		.4byte	0xe9c
 10132 0e90 9C0E0000 		.4byte	0xe9c
 10133 0e94 23       		.uleb128 0x23
 10134 0e95 36010000 		.4byte	0x136
 10135 0e99 FF03     		.2byte	0x3ff
 10136 0e9b 00       		.byte	0
 10137 0e9c 24       		.uleb128 0x24
 10138 0e9d A2000000 		.4byte	0xa2
 10139 0ea1 25       		.uleb128 0x25
 10140 0ea2 C0070000 		.4byte	.LASF145
 10141 0ea6 01       		.byte	0x1
 10142 0ea7 EB       		.byte	0xeb
 10143 0ea8 B20E0000 		.4byte	0xeb2
 10144 0eac 05       		.uleb128 0x5
 10145 0ead 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 223


 10146 0eae 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 10147 0eb2 24       		.uleb128 0x24
 10148 0eb3 8B0E0000 		.4byte	0xe8b
 10149 0eb7 22       		.uleb128 0x22
 10150 0eb8 19060000 		.4byte	.LASF146
 10151 0ebc 0A       		.byte	0xa
 10152 0ebd F9       		.byte	0xf9
 10153 0ebe D9000000 		.4byte	0xd9
 10154 0ec2 26       		.uleb128 0x26
 10155 0ec3 3A0A0000 		.4byte	.LASF147
 10156 0ec7 0B       		.byte	0xb
 10157 0ec8 1207     		.2byte	0x712
 10158 0eca CE0E0000 		.4byte	0xece
 10159 0ece 06       		.uleb128 0x6
 10160 0ecf C3000000 		.4byte	0xc3
 10161 0ed3 07       		.uleb128 0x7
 10162 0ed4 03020000 		.4byte	0x203
 10163 0ed8 E30E0000 		.4byte	0xee3
 10164 0edc 08       		.uleb128 0x8
 10165 0edd 36010000 		.4byte	0x136
 10166 0ee1 FF       		.byte	0xff
 10167 0ee2 00       		.byte	0
 10168 0ee3 27       		.uleb128 0x27
 10169 0ee4 04010000 		.4byte	.LASF148
 10170 0ee8 01       		.byte	0x1
 10171 0ee9 5301     		.2byte	0x153
 10172 0eeb F50E0000 		.4byte	0xef5
 10173 0eef 05       		.uleb128 0x5
 10174 0ef0 03       		.byte	0x3
 10175 0ef1 00000000 		.4byte	I2Cbuff1
 10176 0ef5 06       		.uleb128 0x6
 10177 0ef6 D30E0000 		.4byte	0xed3
 10178 0efa 07       		.uleb128 0x7
 10179 0efb A2000000 		.4byte	0xa2
 10180 0eff 0B0F0000 		.4byte	0xf0b
 10181 0f03 23       		.uleb128 0x23
 10182 0f04 36010000 		.4byte	0x136
 10183 0f08 FF07     		.2byte	0x7ff
 10184 0f0a 00       		.byte	0
 10185 0f0b 25       		.uleb128 0x25
 10186 0f0c 150D0000 		.4byte	.LASF149
 10187 0f10 01       		.byte	0x1
 10188 0f11 17       		.byte	0x17
 10189 0f12 FA0E0000 		.4byte	0xefa
 10190 0f16 05       		.uleb128 0x5
 10191 0f17 03       		.byte	0x3
 10192 0f18 00000000 		.4byte	sysexBuffer
 10193 0f1c 25       		.uleb128 0x25
 10194 0f1d 4A030000 		.4byte	.LASF150
 10195 0f21 01       		.byte	0x1
 10196 0f22 18       		.byte	0x18
 10197 0f23 CE000000 		.4byte	0xce
 10198 0f27 05       		.uleb128 0x5
 10199 0f28 03       		.byte	0x3
 10200 0f29 00000000 		.4byte	sysexPointer
 10201 0f2d 25       		.uleb128 0x25
 10202 0f2e BE0A0000 		.4byte	.LASF151
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 224


 10203 0f32 01       		.byte	0x1
 10204 0f33 19       		.byte	0x19
 10205 0f34 A2000000 		.4byte	0xa2
 10206 0f38 05       		.uleb128 0x5
 10207 0f39 03       		.byte	0x3
 10208 0f3a 00000000 		.4byte	receivingSysex
 10209 0f3e 25       		.uleb128 0x25
 10210 0f3f 32060000 		.4byte	.LASF152
 10211 0f43 01       		.byte	0x1
 10212 0f44 1A       		.byte	0x1a
 10213 0f45 A2000000 		.4byte	0xa2
 10214 0f49 05       		.uleb128 0x5
 10215 0f4a 03       		.byte	0x3
 10216 0f4b 00000000 		.4byte	parsingSysex
 10217 0f4f 07       		.uleb128 0x7
 10218 0f50 03020000 		.4byte	0x203
 10219 0f54 600F0000 		.4byte	0xf60
 10220 0f58 23       		.uleb128 0x23
 10221 0f59 36010000 		.4byte	0x136
 10222 0f5d FF07     		.2byte	0x7ff
 10223 0f5f 00       		.byte	0
 10224 0f60 25       		.uleb128 0x25
 10225 0f61 13000000 		.4byte	.LASF153
 10226 0f65 01       		.byte	0x1
 10227 0f66 1B       		.byte	0x1b
 10228 0f67 710F0000 		.4byte	0xf71
 10229 0f6b 05       		.uleb128 0x5
 10230 0f6c 03       		.byte	0x3
 10231 0f6d 00000000 		.4byte	presetArray
 10232 0f71 06       		.uleb128 0x6
 10233 0f72 4F0F0000 		.4byte	0xf4f
 10234 0f76 25       		.uleb128 0x25
 10235 0f77 90020000 		.4byte	.LASF154
 10236 0f7b 01       		.byte	0x1
 10237 0f7c 1C       		.byte	0x1c
 10238 0f7d A2000000 		.4byte	0xa2
 10239 0f81 05       		.uleb128 0x5
 10240 0f82 03       		.byte	0x3
 10241 0f83 00000000 		.4byte	presetNumberToWrite
 10242 0f87 25       		.uleb128 0x25
 10243 0f88 8A0C0000 		.4byte	.LASF155
 10244 0f8c 01       		.byte	0x1
 10245 0f8d 1D       		.byte	0x1d
 10246 0f8e A2000000 		.4byte	0xa2
 10247 0f92 05       		.uleb128 0x5
 10248 0f93 03       		.byte	0x3
 10249 0f94 00000000 		.4byte	copedentNumberToWrite
 10250 0f98 25       		.uleb128 0x25
 10251 0f99 35020000 		.4byte	.LASF156
 10252 0f9d 01       		.byte	0x1
 10253 0f9e 1E       		.byte	0x1e
 10254 0f9f A2000000 		.4byte	0xa2
 10255 0fa3 05       		.uleb128 0x5
 10256 0fa4 03       		.byte	0x3
 10257 0fa5 00000000 		.4byte	sendMessageEnd
 10258 0fa9 25       		.uleb128 0x25
 10259 0faa 00000000 		.4byte	.LASF157
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 225


 10260 0fae 01       		.byte	0x1
 10261 0faf 28       		.byte	0x28
 10262 0fb0 A2000000 		.4byte	0xa2
 10263 0fb4 05       		.uleb128 0x5
 10264 0fb5 03       		.byte	0x3
 10265 0fb6 00000000 		.4byte	presetArraySection
 10266 0fba 25       		.uleb128 0x25
 10267 0fbb 8A090000 		.4byte	.LASF158
 10268 0fbf 01       		.byte	0x1
 10269 0fc0 2A       		.byte	0x2a
 10270 0fc1 B8000000 		.4byte	0xb8
 10271 0fc5 05       		.uleb128 0x5
 10272 0fc6 03       		.byte	0x3
 10273 0fc7 00000000 		.4byte	messageArraySendCount
 10274 0fcb 25       		.uleb128 0x25
 10275 0fcc 890D0000 		.4byte	.LASF159
 10276 0fd0 01       		.byte	0x1
 10277 0fd1 2B       		.byte	0x2b
 10278 0fd2 B8000000 		.4byte	0xb8
 10279 0fd6 05       		.uleb128 0x5
 10280 0fd7 03       		.byte	0x3
 10281 0fd8 00000000 		.4byte	messageArraySize
 10282 0fdc 25       		.uleb128 0x25
 10283 0fdd A7060000 		.4byte	.LASF160
 10284 0fe1 01       		.byte	0x1
 10285 0fe2 2D       		.byte	0x2d
 10286 0fe3 A2000000 		.4byte	0xa2
 10287 0fe7 05       		.uleb128 0x5
 10288 0fe8 03       		.byte	0x3
 10289 0fe9 00000000 		.4byte	sysexMessageInProgress
 10290 0fed 25       		.uleb128 0x25
 10291 0fee 210D0000 		.4byte	.LASF161
 10292 0ff2 01       		.byte	0x1
 10293 0ff3 2F       		.byte	0x2f
 10294 0ff4 A2000000 		.4byte	0xa2
 10295 0ff8 05       		.uleb128 0x5
 10296 0ff9 03       		.byte	0x3
 10297 0ffa 00000000 		.4byte	bufCount
 10298 0ffe 25       		.uleb128 0x25
 10299 0fff 33000000 		.4byte	.LASF162
 10300 1003 01       		.byte	0x1
 10301 1004 30       		.byte	0x30
 10302 1005 03020000 		.4byte	0x203
 10303 1009 05       		.uleb128 0x5
 10304 100a 03       		.byte	0x3
 10305 100b 00000000 		.4byte	sendingMessage
 10306 100f 25       		.uleb128 0x25
 10307 1010 22030000 		.4byte	.LASF163
 10308 1014 01       		.byte	0x1
 10309 1015 31       		.byte	0x31
 10310 1016 03020000 		.4byte	0x203
 10311 101a 05       		.uleb128 0x5
 10312 101b 03       		.byte	0x3
 10313 101c 00000000 		.4byte	sendKnobs
 10314 1020 25       		.uleb128 0x25
 10315 1021 6E020000 		.4byte	.LASF164
 10316 1025 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 226


 10317 1026 32       		.byte	0x32
 10318 1027 CE000000 		.4byte	0xce
 10319 102b 05       		.uleb128 0x5
 10320 102c 03       		.byte	0x3
 10321 102d 00000000 		.4byte	currentFloat
 10322 1031 25       		.uleb128 0x25
 10323 1032 D1030000 		.4byte	.LASF165
 10324 1036 01       		.byte	0x1
 10325 1037 33       		.byte	0x33
 10326 1038 CE000000 		.4byte	0xce
 10327 103c 05       		.uleb128 0x5
 10328 103d 03       		.byte	0x3
 10329 103e 00000000 		.4byte	mapCount
 10330 1042 25       		.uleb128 0x25
 10331 1043 94010000 		.4byte	.LASF166
 10332 1047 01       		.byte	0x1
 10333 1048 35       		.byte	0x35
 10334 1049 B8000000 		.4byte	0xb8
 10335 104d 05       		.uleb128 0x5
 10336 104e 03       		.byte	0x3
 10337 104f 00000000 		.4byte	valsCount
 10338 1053 25       		.uleb128 0x25
 10339 1054 5A040000 		.4byte	.LASF167
 10340 1058 01       		.byte	0x1
 10341 1059 36       		.byte	0x36
 10342 105a B8000000 		.4byte	0xb8
 10343 105e 05       		.uleb128 0x5
 10344 105f 03       		.byte	0x3
 10345 1060 00000000 		.4byte	mapCountExpectation
 10346 1064 25       		.uleb128 0x25
 10347 1065 F8000000 		.4byte	.LASF168
 10348 1069 01       		.byte	0x1
 10349 106a 37       		.byte	0x37
 10350 106b B8000000 		.4byte	0xb8
 10351 106f 05       		.uleb128 0x5
 10352 1070 03       		.byte	0x3
 10353 1071 00000000 		.4byte	numMappings
 10354 1075 25       		.uleb128 0x25
 10355 1076 DD0C0000 		.4byte	.LASF169
 10356 107a 01       		.byte	0x1
 10357 107b 38       		.byte	0x38
 10358 107c 03020000 		.4byte	0x203
 10359 1080 05       		.uleb128 0x5
 10360 1081 03       		.byte	0x3
 10361 1082 00000000 		.4byte	parseThatMF
 10362 1086 25       		.uleb128 0x25
 10363 1087 03040000 		.4byte	.LASF170
 10364 108b 01       		.byte	0x1
 10365 108c 39       		.byte	0x39
 10366 108d 97100000 		.4byte	0x1097
 10367 1091 05       		.uleb128 0x5
 10368 1092 03       		.byte	0x3
 10369 1093 00000000 		.4byte	valCheck
 10370 1097 06       		.uleb128 0x6
 10371 1098 FD000000 		.4byte	0xfd
 10372 109c 25       		.uleb128 0x25
 10373 109d 360C0000 		.4byte	.LASF171
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 227


 10374 10a1 01       		.byte	0x1
 10375 10a2 3A       		.byte	0x3a
 10376 10a3 97100000 		.4byte	0x1097
 10377 10a7 05       		.uleb128 0x5
 10378 10a8 03       		.byte	0x3
 10379 10a9 00000000 		.4byte	testVal
 10380 10ad 25       		.uleb128 0x25
 10381 10ae 3E080000 		.4byte	.LASF172
 10382 10b2 01       		.byte	0x1
 10383 10b3 3C       		.byte	0x3c
 10384 10b4 94000000 		.4byte	0x94
 10385 10b8 05       		.uleb128 0x5
 10386 10b9 03       		.byte	0x3
 10387 10ba 00000000 		.4byte	numStrings
 10388 10be 25       		.uleb128 0x25
 10389 10bf C10C0000 		.4byte	.LASF173
 10390 10c3 01       		.byte	0x1
 10391 10c4 42       		.byte	0x42
 10392 10c5 2A010000 		.4byte	0x12a
 10393 10c9 05       		.uleb128 0x5
 10394 10ca 03       		.byte	0x3
 10395 10cb 00000000 		.4byte	usbActivityCounter
 10396 10cf 25       		.uleb128 0x25
 10397 10d0 F00B0000 		.4byte	.LASF137
 10398 10d4 01       		.byte	0x1
 10399 10d5 43       		.byte	0x43
 10400 10d6 3D010000 		.4byte	0x13d
 10401 10da 05       		.uleb128 0x5
 10402 10db 03       		.byte	0x3
 10403 10dc 00000000 		.4byte	midiMsg
 10404 10e0 25       		.uleb128 0x25
 10405 10e1 140F0000 		.4byte	.LASF174
 10406 10e5 01       		.byte	0x1
 10407 10e6 44       		.byte	0x44
 10408 10e7 A2000000 		.4byte	0xa2
 10409 10eb 05       		.uleb128 0x5
 10410 10ec 03       		.byte	0x3
 10411 10ed 00000000 		.4byte	currentVBUS
 10412 10f1 25       		.uleb128 0x25
 10413 10f2 050F0000 		.4byte	.LASF175
 10414 10f6 01       		.byte	0x1
 10415 10f7 45       		.byte	0x45
 10416 10f8 A2000000 		.4byte	0xa2
 10417 10fc 05       		.uleb128 0x5
 10418 10fd 03       		.byte	0x3
 10419 10fe 00000000 		.4byte	prevVBUS
 10420 1102 25       		.uleb128 0x25
 10421 1103 FF0C0000 		.4byte	.LASF176
 10422 1107 01       		.byte	0x1
 10423 1108 46       		.byte	0x46
 10424 1109 03020000 		.4byte	0x203
 10425 110d 05       		.uleb128 0x5
 10426 110e 03       		.byte	0x3
 10427 110f 00000000 		.4byte	USB_active
 10428 1113 25       		.uleb128 0x25
 10429 1114 7B090000 		.4byte	.LASF177
 10430 1118 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 228


 10431 1119 47       		.byte	0x47
 10432 111a 03020000 		.4byte	0x203
 10433 111e 05       		.uleb128 0x5
 10434 111f 03       		.byte	0x3
 10435 1120 00000000 		.4byte	USB_check_flag
 10436 1124 07       		.uleb128 0x7
 10437 1125 D9000000 		.4byte	0xd9
 10438 1129 34110000 		.4byte	0x1134
 10439 112d 08       		.uleb128 0x8
 10440 112e 36010000 		.4byte	0x136
 10441 1132 1F       		.byte	0x1f
 10442 1133 00       		.byte	0
 10443 1134 25       		.uleb128 0x25
 10444 1135 700E0000 		.4byte	.LASF178
 10445 1139 01       		.byte	0x1
 10446 113a 4A       		.byte	0x4a
 10447 113b 24110000 		.4byte	0x1124
 10448 113f 05       		.uleb128 0x5
 10449 1140 03       		.byte	0x3
 10450 1141 00000000 		.4byte	inBuffer
 10451 1145 25       		.uleb128 0x25
 10452 1146 E50F0000 		.4byte	.LASF179
 10453 114a 01       		.byte	0x1
 10454 114b 4C       		.byte	0x4c
 10455 114c 24110000 		.4byte	0x1124
 10456 1150 05       		.uleb128 0x5
 10457 1151 03       		.byte	0x3
 10458 1152 00000000 		.4byte	myArray
 10459 1156 25       		.uleb128 0x25
 10460 1157 830F0000 		.4byte	.LASF180
 10461 115b 01       		.byte	0x1
 10462 115c 4D       		.byte	0x4d
 10463 115d 180E0000 		.4byte	0xe18
 10464 1161 05       		.uleb128 0x5
 10465 1162 03       		.byte	0x3
 10466 1163 00000000 		.4byte	myInputArray
 10467 1167 07       		.uleb128 0x7
 10468 1168 C3000000 		.4byte	0xc3
 10469 116c 77110000 		.4byte	0x1177
 10470 1170 08       		.uleb128 0x8
 10471 1171 36010000 		.4byte	0x136
 10472 1175 01       		.byte	0x1
 10473 1176 00       		.byte	0
 10474 1177 25       		.uleb128 0x25
 10475 1178 04080000 		.4byte	.LASF181
 10476 117c 01       		.byte	0x1
 10477 117d 4E       		.byte	0x4e
 10478 117e 67110000 		.4byte	0x1167
 10479 1182 05       		.uleb128 0x5
 10480 1183 03       		.byte	0x3
 10481 1184 00000000 		.4byte	linearPotValue32Bit
 10482 1188 28       		.uleb128 0x28
 10483 1189 6900     		.ascii	"i\000"
 10484 118b 01       		.byte	0x1
 10485 118c 4F       		.byte	0x4f
 10486 118d A2000000 		.4byte	0xa2
 10487 1191 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 229


 10488 1192 03       		.byte	0x3
 10489 1193 00000000 		.4byte	i
 10490 1197 25       		.uleb128 0x25
 10491 1198 B9090000 		.4byte	.LASF182
 10492 119c 01       		.byte	0x1
 10493 119d 50       		.byte	0x50
 10494 119e A2000000 		.4byte	0xa2
 10495 11a2 05       		.uleb128 0x5
 10496 11a3 03       		.byte	0x3
 10497 11a4 00000000 		.4byte	counter
 10498 11a8 07       		.uleb128 0x7
 10499 11a9 A2000000 		.4byte	0xa2
 10500 11ad B8110000 		.4byte	0x11b8
 10501 11b1 08       		.uleb128 0x8
 10502 11b2 36010000 		.4byte	0x136
 10503 11b6 1F       		.byte	0x1f
 10504 11b7 00       		.byte	0
 10505 11b8 25       		.uleb128 0x25
 10506 11b9 3F060000 		.4byte	.LASF183
 10507 11bd 01       		.byte	0x1
 10508 11be 51       		.byte	0x51
 10509 11bf A8110000 		.4byte	0x11a8
 10510 11c3 05       		.uleb128 0x5
 10511 11c4 03       		.byte	0x3
 10512 11c5 00000000 		.4byte	returnedData
 10513 11c9 25       		.uleb128 0x25
 10514 11ca 9E010000 		.4byte	.LASF184
 10515 11ce 01       		.byte	0x1
 10516 11cf 52       		.byte	0x52
 10517 11d0 C3000000 		.4byte	0xc3
 10518 11d4 05       		.uleb128 0x5
 10519 11d5 03       		.byte	0x3
 10520 11d6 00000000 		.4byte	temper
 10521 11da 07       		.uleb128 0x7
 10522 11db 94000000 		.4byte	0x94
 10523 11df EA110000 		.4byte	0x11ea
 10524 11e3 08       		.uleb128 0x8
 10525 11e4 36010000 		.4byte	0x136
 10526 11e8 0A       		.byte	0xa
 10527 11e9 00       		.byte	0
 10528 11ea 25       		.uleb128 0x25
 10529 11eb 230E0000 		.4byte	.LASF185
 10530 11ef 01       		.byte	0x1
 10531 11f0 53       		.byte	0x53
 10532 11f1 DA110000 		.4byte	0x11da
 10533 11f5 05       		.uleb128 0x5
 10534 11f6 03       		.byte	0x3
 10535 11f7 00000000 		.4byte	previousButtons
 10536 11fb 25       		.uleb128 0x25
 10537 11fc 2F010000 		.4byte	.LASF186
 10538 1200 01       		.byte	0x1
 10539 1201 54       		.byte	0x54
 10540 1202 94000000 		.4byte	0x94
 10541 1206 05       		.uleb128 0x5
 10542 1207 03       		.byte	0x3
 10543 1208 00000000 		.4byte	octave
 10544 120c 07       		.uleb128 0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 230


 10545 120d B8000000 		.4byte	0xb8
 10546 1211 1C120000 		.4byte	0x121c
 10547 1215 08       		.uleb128 0x8
 10548 1216 36010000 		.4byte	0x136
 10549 121a 09       		.byte	0x9
 10550 121b 00       		.byte	0
 10551 121c 25       		.uleb128 0x25
 10552 121d 38080000 		.4byte	.LASF187
 10553 1221 01       		.byte	0x1
 10554 1222 55       		.byte	0x55
 10555 1223 0C120000 		.4byte	0x120c
 10556 1227 05       		.uleb128 0x5
 10557 1228 03       		.byte	0x3
 10558 1229 00000000 		.4byte	angle
 10559 122d 25       		.uleb128 0x25
 10560 122e 760B0000 		.4byte	.LASF188
 10561 1232 01       		.byte	0x1
 10562 1233 56       		.byte	0x56
 10563 1234 0C120000 		.4byte	0x120c
 10564 1238 05       		.uleb128 0x5
 10565 1239 03       		.byte	0x3
 10566 123a 00000000 		.4byte	prevAngle
 10567 123e 07       		.uleb128 0x7
 10568 123f B8000000 		.4byte	0xb8
 10569 1243 4E120000 		.4byte	0x124e
 10570 1247 08       		.uleb128 0x8
 10571 1248 36010000 		.4byte	0x136
 10572 124c 03       		.byte	0x3
 10573 124d 00       		.byte	0
 10574 124e 25       		.uleb128 0x25
 10575 124f C00B0000 		.4byte	.LASF189
 10576 1253 01       		.byte	0x1
 10577 1254 58       		.byte	0x58
 10578 1255 3E120000 		.4byte	0x123e
 10579 1259 05       		.uleb128 0x5
 10580 125a 03       		.byte	0x3
 10581 125b 00000000 		.4byte	ADC_values
 10582 125f 25       		.uleb128 0x25
 10583 1260 F6040000 		.4byte	.LASF190
 10584 1264 01       		.byte	0x1
 10585 1265 59       		.byte	0x59
 10586 1266 B8000000 		.4byte	0xb8
 10587 126a 05       		.uleb128 0x5
 10588 126b 03       		.byte	0x3
 10589 126c 00000000 		.4byte	rawAngle
 10590 1270 25       		.uleb128 0x25
 10591 1271 E70B0000 		.4byte	.LASF191
 10592 1275 01       		.byte	0x1
 10593 1276 5A       		.byte	0x5a
 10594 1277 B8000000 		.4byte	0xb8
 10595 127b 05       		.uleb128 0x5
 10596 127c 03       		.byte	0x3
 10597 127d 00000000 		.4byte	midiSent
 10598 1281 25       		.uleb128 0x25
 10599 1282 80050000 		.4byte	.LASF192
 10600 1286 01       		.byte	0x1
 10601 1287 5B       		.byte	0x5b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 231


 10602 1288 B8000000 		.4byte	0xb8
 10603 128c 05       		.uleb128 0x5
 10604 128d 03       		.byte	0x3
 10605 128e 00000000 		.4byte	midiOverflow
 10606 1292 07       		.uleb128 0x7
 10607 1293 A2000000 		.4byte	0xa2
 10608 1297 A2120000 		.4byte	0x12a2
 10609 129b 08       		.uleb128 0x8
 10610 129c 36010000 		.4byte	0x136
 10611 12a0 07       		.byte	0x7
 10612 12a1 00       		.byte	0
 10613 12a2 25       		.uleb128 0x25
 10614 12a3 9D0E0000 		.4byte	.LASF193
 10615 12a7 01       		.byte	0x1
 10616 12a8 5D       		.byte	0x5d
 10617 12a9 92120000 		.4byte	0x1292
 10618 12ad 05       		.uleb128 0x5
 10619 12ae 03       		.byte	0x3
 10620 12af 00000000 		.4byte	macroKnobValues
 10621 12b3 25       		.uleb128 0x25
 10622 12b4 E6040000 		.4byte	.LASF194
 10623 12b8 01       		.byte	0x1
 10624 12b9 5F       		.byte	0x5f
 10625 12ba A2000000 		.4byte	0xa2
 10626 12be 05       		.uleb128 0x5
 10627 12bf 03       		.byte	0x3
 10628 12c0 00000000 		.4byte	currentCopedent
 10629 12c4 07       		.uleb128 0x7
 10630 12c5 A2000000 		.4byte	0xa2
 10631 12c9 D4120000 		.4byte	0x12d4
 10632 12cd 08       		.uleb128 0x8
 10633 12ce 36010000 		.4byte	0x136
 10634 12d2 01       		.byte	0x1
 10635 12d3 00       		.byte	0
 10636 12d4 25       		.uleb128 0x25
 10637 12d5 29010000 		.4byte	.LASF195
 10638 12d9 01       		.byte	0x1
 10639 12da 60       		.byte	0x60
 10640 12db C4120000 		.4byte	0x12c4
 10641 12df 05       		.uleb128 0x5
 10642 12e0 03       		.byte	0x3
 10643 12e1 00000000 		.4byte	necks
 10644 12e5 25       		.uleb128 0x25
 10645 12e6 1C040000 		.4byte	.LASF196
 10646 12ea 01       		.byte	0x1
 10647 12eb 7F       		.byte	0x7f
 10648 12ec D9000000 		.4byte	0xd9
 10649 12f0 05       		.uleb128 0x5
 10650 12f1 03       		.byte	0x3
 10651 12f2 00000000 		.4byte	rx1Channel
 10652 12f6 25       		.uleb128 0x25
 10653 12f7 C50E0000 		.4byte	.LASF197
 10654 12fb 01       		.byte	0x1
 10655 12fc 7F       		.byte	0x7f
 10656 12fd D9000000 		.4byte	0xd9
 10657 1301 05       		.uleb128 0x5
 10658 1302 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 232


 10659 1303 00000000 		.4byte	rx2Channel
 10660 1307 25       		.uleb128 0x25
 10661 1308 CD090000 		.4byte	.LASF198
 10662 130c 01       		.byte	0x1
 10663 130d 80       		.byte	0x80
 10664 130e 180E0000 		.4byte	0xe18
 10665 1312 05       		.uleb128 0x5
 10666 1313 03       		.byte	0x3
 10667 1314 00000000 		.4byte	rx1TD
 10668 1318 25       		.uleb128 0x25
 10669 1319 3E0C0000 		.4byte	.LASF199
 10670 131d 01       		.byte	0x1
 10671 131e 80       		.byte	0x80
 10672 131f 180E0000 		.4byte	0xe18
 10673 1323 05       		.uleb128 0x5
 10674 1324 03       		.byte	0x3
 10675 1325 00000000 		.4byte	rx2TD
 10676 1329 25       		.uleb128 0x25
 10677 132a 450B0000 		.4byte	.LASF200
 10678 132e 01       		.byte	0x1
 10679 132f 82       		.byte	0x82
 10680 1330 2A010000 		.4byte	0x12a
 10681 1334 05       		.uleb128 0x5
 10682 1335 03       		.byte	0x3
 10683 1336 00000000 		.4byte	txChannel
 10684 133a 25       		.uleb128 0x25
 10685 133b 6C0F0000 		.4byte	.LASF201
 10686 133f 01       		.byte	0x1
 10687 1340 83       		.byte	0x83
 10688 1341 2A010000 		.4byte	0x12a
 10689 1345 05       		.uleb128 0x5
 10690 1346 03       		.byte	0x3
 10691 1347 00000000 		.4byte	txTD
 10692 134b 25       		.uleb128 0x25
 10693 134c 0A0A0000 		.4byte	.LASF202
 10694 1350 01       		.byte	0x1
 10695 1351 85       		.byte	0x85
 10696 1352 2A010000 		.4byte	0x12a
 10697 1356 05       		.uleb128 0x5
 10698 1357 03       		.byte	0x3
 10699 1358 00000000 		.4byte	rx3Channel
 10700 135c 25       		.uleb128 0x25
 10701 135d 0E0F0000 		.4byte	.LASF203
 10702 1361 01       		.byte	0x1
 10703 1362 86       		.byte	0x86
 10704 1363 2A010000 		.4byte	0x12a
 10705 1367 05       		.uleb128 0x5
 10706 1368 03       		.byte	0x3
 10707 1369 00000000 		.4byte	rx3TD
 10708 136d 07       		.uleb128 0x7
 10709 136e 2A010000 		.4byte	0x12a
 10710 1372 83130000 		.4byte	0x1383
 10711 1376 08       		.uleb128 0x8
 10712 1377 36010000 		.4byte	0x136
 10713 137b 01       		.byte	0x1
 10714 137c 08       		.uleb128 0x8
 10715 137d 36010000 		.4byte	0x136
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 233


 10716 1381 19       		.byte	0x19
 10717 1382 00       		.byte	0
 10718 1383 25       		.uleb128 0x25
 10719 1384 6E060000 		.4byte	.LASF204
 10720 1388 01       		.byte	0x1
 10721 1389 89       		.byte	0x89
 10722 138a 94130000 		.4byte	0x1394
 10723 138e 05       		.uleb128 0x5
 10724 138f 03       		.byte	0x3
 10725 1390 00000000 		.4byte	rxBufferPluck
 10726 1394 06       		.uleb128 0x6
 10727 1395 6D130000 		.4byte	0x136d
 10728 1399 07       		.uleb128 0x7
 10729 139a 2A010000 		.4byte	0x12a
 10730 139e AF130000 		.4byte	0x13af
 10731 13a2 08       		.uleb128 0x8
 10732 13a3 36010000 		.4byte	0x136
 10733 13a7 01       		.byte	0x1
 10734 13a8 08       		.uleb128 0x8
 10735 13a9 36010000 		.4byte	0x136
 10736 13ad 07       		.byte	0x7
 10737 13ae 00       		.byte	0
 10738 13af 25       		.uleb128 0x25
 10739 13b0 390B0000 		.4byte	.LASF205
 10740 13b4 01       		.byte	0x1
 10741 13b5 8A       		.byte	0x8a
 10742 13b6 C0130000 		.4byte	0x13c0
 10743 13ba 05       		.uleb128 0x5
 10744 13bb 03       		.byte	0x3
 10745 13bc 00000000 		.4byte	rxBufferBar
 10746 13c0 06       		.uleb128 0x6
 10747 13c1 99130000 		.4byte	0x1399
 10748 13c5 07       		.uleb128 0x7
 10749 13c6 08020000 		.4byte	0x208
 10750 13ca D5130000 		.4byte	0x13d5
 10751 13ce 08       		.uleb128 0x8
 10752 13cf 36010000 		.4byte	0x136
 10753 13d3 0B       		.byte	0xb
 10754 13d4 00       		.byte	0
 10755 13d5 25       		.uleb128 0x25
 10756 13d6 5D020000 		.4byte	.LASF206
 10757 13da 01       		.byte	0x1
 10758 13db 8C       		.byte	0x8c
 10759 13dc E6130000 		.4byte	0x13e6
 10760 13e0 05       		.uleb128 0x5
 10761 13e1 03       		.byte	0x3
 10762 13e2 00000000 		.4byte	strings
 10763 13e6 06       		.uleb128 0x6
 10764 13e7 C5130000 		.4byte	0x13c5
 10765 13eb 25       		.uleb128 0x25
 10766 13ec C9040000 		.4byte	.LASF207
 10767 13f0 01       		.byte	0x1
 10768 13f1 8D       		.byte	0x8d
 10769 13f2 FC130000 		.4byte	0x13fc
 10770 13f6 05       		.uleb128 0x5
 10771 13f7 03       		.byte	0x3
 10772 13f8 00000000 		.4byte	prevStrings
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 234


 10773 13fc 06       		.uleb128 0x6
 10774 13fd C5130000 		.4byte	0x13c5
 10775 1401 07       		.uleb128 0x7
 10776 1402 08020000 		.4byte	0x208
 10777 1406 11140000 		.4byte	0x1411
 10778 140a 08       		.uleb128 0x8
 10779 140b 36010000 		.4byte	0x136
 10780 140f 01       		.byte	0x1
 10781 1410 00       		.byte	0
 10782 1411 28       		.uleb128 0x28
 10783 1412 62617200 		.ascii	"bar\000"
 10784 1416 01       		.byte	0x1
 10785 1417 8E       		.byte	0x8e
 10786 1418 22140000 		.4byte	0x1422
 10787 141c 05       		.uleb128 0x5
 10788 141d 03       		.byte	0x3
 10789 141e 00000000 		.4byte	bar
 10790 1422 06       		.uleb128 0x6
 10791 1423 01140000 		.4byte	0x1401
 10792 1427 25       		.uleb128 0x25
 10793 1428 7B0F0000 		.4byte	.LASF208
 10794 142c 01       		.byte	0x1
 10795 142d 8F       		.byte	0x8f
 10796 142e 38140000 		.4byte	0x1438
 10797 1432 05       		.uleb128 0x5
 10798 1433 03       		.byte	0x3
 10799 1434 00000000 		.4byte	prevBar
 10800 1438 06       		.uleb128 0x6
 10801 1439 01140000 		.4byte	0x1401
 10802 143d 25       		.uleb128 0x25
 10803 143e 790E0000 		.4byte	.LASF209
 10804 1442 01       		.byte	0x1
 10805 1443 90       		.byte	0x90
 10806 1444 4E140000 		.4byte	0x144e
 10807 1448 05       		.uleb128 0x5
 10808 1449 03       		.byte	0x3
 10809 144a 00000000 		.4byte	maxStrings
 10810 144e 06       		.uleb128 0x6
 10811 144f C5130000 		.4byte	0x13c5
 10812 1453 25       		.uleb128 0x25
 10813 1454 6D0C0000 		.4byte	.LASF210
 10814 1458 01       		.byte	0x1
 10815 1459 91       		.byte	0x91
 10816 145a 03020000 		.4byte	0x203
 10817 145e 05       		.uleb128 0x5
 10818 145f 03       		.byte	0x3
 10819 1460 00000000 		.4byte	amHere
 10820 1464 25       		.uleb128 0x25
 10821 1465 E6050000 		.4byte	.LASF211
 10822 1469 01       		.byte	0x1
 10823 146a 92       		.byte	0x92
 10824 146b 03020000 		.4byte	0x203
 10825 146f 05       		.uleb128 0x5
 10826 1470 03       		.byte	0x3
 10827 1471 00000000 		.4byte	spiCounter
 10828 1475 25       		.uleb128 0x25
 10829 1476 35040000 		.4byte	.LASF212
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 235


 10830 147a 01       		.byte	0x1
 10831 147b 93       		.byte	0x93
 10832 147c 03020000 		.4byte	0x203
 10833 1480 05       		.uleb128 0x5
 10834 1481 03       		.byte	0x3
 10835 1482 00000000 		.4byte	newDataFlag
 10836 1486 25       		.uleb128 0x25
 10837 1487 740D0000 		.4byte	.LASF213
 10838 148b 01       		.byte	0x1
 10839 148c 94       		.byte	0x94
 10840 148d 94000000 		.4byte	0x94
 10841 1491 05       		.uleb128 0x5
 10842 1492 03       		.byte	0x3
 10843 1493 00000000 		.4byte	prevOctave
 10844 1497 25       		.uleb128 0x25
 10845 1498 800B0000 		.4byte	.LASF214
 10846 149c 01       		.byte	0x1
 10847 149d 95       		.byte	0x95
 10848 149e A2000000 		.4byte	0xa2
 10849 14a2 05       		.uleb128 0x5
 10850 14a3 03       		.byte	0x3
 10851 14a4 00000000 		.4byte	pluck_index
 10852 14a8 25       		.uleb128 0x25
 10853 14a9 710A0000 		.4byte	.LASF215
 10854 14ad 01       		.byte	0x1
 10855 14ae 96       		.byte	0x96
 10856 14af 03020000 		.4byte	0x203
 10857 14b3 05       		.uleb128 0x5
 10858 14b4 03       		.byte	0x3
 10859 14b5 00000000 		.4byte	amHere2
 10860 14b9 25       		.uleb128 0x25
 10861 14ba AD0C0000 		.4byte	.LASF216
 10862 14be 01       		.byte	0x1
 10863 14bf 97       		.byte	0x97
 10864 14c0 03020000 		.4byte	0x203
 10865 14c4 05       		.uleb128 0x5
 10866 14c5 03       		.byte	0x3
 10867 14c6 00000000 		.4byte	spiCounter2
 10868 14ca 25       		.uleb128 0x25
 10869 14cb 67000000 		.4byte	.LASF217
 10870 14cf 01       		.byte	0x1
 10871 14d0 98       		.byte	0x98
 10872 14d1 03020000 		.4byte	0x203
 10873 14d5 05       		.uleb128 0x5
 10874 14d6 03       		.byte	0x3
 10875 14d7 00000000 		.4byte	newDataFlag2
 10876 14db 25       		.uleb128 0x25
 10877 14dc 850A0000 		.4byte	.LASF218
 10878 14e0 01       		.byte	0x1
 10879 14e1 99       		.byte	0x99
 10880 14e2 03020000 		.4byte	0x203
 10881 14e6 05       		.uleb128 0x5
 10882 14e7 03       		.byte	0x3
 10883 14e8 00000000 		.4byte	currentPluckBuffer
 10884 14ec 25       		.uleb128 0x25
 10885 14ed AF0B0000 		.4byte	.LASF219
 10886 14f1 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 236


 10887 14f2 9A       		.byte	0x9a
 10888 14f3 03020000 		.4byte	0x203
 10889 14f7 05       		.uleb128 0x5
 10890 14f8 03       		.byte	0x3
 10891 14f9 00000000 		.4byte	currentBarBuffer
 10892 14fd 25       		.uleb128 0x25
 10893 14fe 2A0D0000 		.4byte	.LASF220
 10894 1502 01       		.byte	0x1
 10895 1503 9B       		.byte	0x9b
 10896 1504 03020000 		.4byte	0x203
 10897 1508 05       		.uleb128 0x5
 10898 1509 03       		.byte	0x3
 10899 150a 00000000 		.4byte	pluckErrorCount
 10900 150e 25       		.uleb128 0x25
 10901 150f D80B0000 		.4byte	.LASF221
 10902 1513 01       		.byte	0x1
 10903 1514 9C       		.byte	0x9c
 10904 1515 08020000 		.4byte	0x208
 10905 1519 05       		.uleb128 0x5
 10906 151a 03       		.byte	0x3
 10907 151b 00000000 		.4byte	SPI1ErrorCount
 10908 151f 25       		.uleb128 0x25
 10909 1520 68070000 		.4byte	.LASF222
 10910 1524 01       		.byte	0x1
 10911 1525 A0       		.byte	0xa0
 10912 1526 03020000 		.4byte	0x203
 10913 152a 05       		.uleb128 0x5
 10914 152b 03       		.byte	0x3
 10915 152c 00000000 		.4byte	inputData
 10916 1530 25       		.uleb128 0x25
 10917 1531 B90E0000 		.4byte	.LASF223
 10918 1535 01       		.byte	0x1
 10919 1536 C3       		.byte	0xc3
 10920 1537 A2000000 		.4byte	0xa2
 10921 153b 05       		.uleb128 0x5
 10922 153c 03       		.byte	0x3
 10923 153d 00000000 		.4byte	spiAdjusted
 10924 1541 25       		.uleb128 0x25
 10925 1542 9A060000 		.4byte	.LASF224
 10926 1546 01       		.byte	0x1
 10927 1547 C4       		.byte	0xc4
 10928 1548 A2000000 		.4byte	0xa2
 10929 154c 05       		.uleb128 0x5
 10930 154d 03       		.byte	0x3
 10931 154e 00000000 		.4byte	mySpiCounter
 10932 1552 25       		.uleb128 0x25
 10933 1553 090B0000 		.4byte	.LASF225
 10934 1557 01       		.byte	0x1
 10935 1558 C5       		.byte	0xc5
 10936 1559 08020000 		.4byte	0x208
 10937 155d 05       		.uleb128 0x5
 10938 155e 03       		.byte	0x3
 10939 155f 00000000 		.4byte	offsetErrorCount
 10940 1563 25       		.uleb128 0x25
 10941 1564 C7000000 		.4byte	.LASF226
 10942 1568 01       		.byte	0x1
 10943 1569 C6       		.byte	0xc6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 237


 10944 156a 03020000 		.4byte	0x203
 10945 156e 05       		.uleb128 0x5
 10946 156f 03       		.byte	0x3
 10947 1570 00000000 		.4byte	SPI2errorflag
 10948 1574 25       		.uleb128 0x25
 10949 1575 FF0A0000 		.4byte	.LASF227
 10950 1579 01       		.byte	0x1
 10951 157a C7       		.byte	0xc7
 10952 157b 85150000 		.4byte	0x1585
 10953 157f 05       		.uleb128 0x5
 10954 1580 03       		.byte	0x3
 10955 1581 00000000 		.4byte	bar_index
 10956 1585 06       		.uleb128 0x6
 10957 1586 94000000 		.4byte	0x94
 10958 158a 25       		.uleb128 0x25
 10959 158b 44030000 		.4byte	.LASF228
 10960 158f 01       		.byte	0x1
 10961 1590 C8       		.byte	0xc8
 10962 1591 A6020000 		.4byte	0x2a6
 10963 1595 05       		.uleb128 0x5
 10964 1596 03       		.byte	0x3
 10965 1597 00000000 		.4byte	knobs
 10966 159b 25       		.uleb128 0x25
 10967 159c 90060000 		.4byte	.LASF229
 10968 15a0 01       		.byte	0x1
 10969 15a1 C9       		.byte	0xc9
 10970 15a2 A6020000 		.4byte	0x2a6
 10971 15a6 05       		.uleb128 0x5
 10972 15a7 03       		.byte	0x3
 10973 15a8 00000000 		.4byte	prevKnobs
 10974 15ac 25       		.uleb128 0x25
 10975 15ad 790A0000 		.4byte	.LASF230
 10976 15b1 01       		.byte	0x1
 10977 15b2 CB       		.byte	0xcb
 10978 15b3 03020000 		.4byte	0x203
 10979 15b7 05       		.uleb128 0x5
 10980 15b8 03       		.byte	0x3
 10981 15b9 00000000 		.4byte	SPI2started
 10982 15bd 25       		.uleb128 0x25
 10983 15be 57060000 		.4byte	.LASF231
 10984 15c2 01       		.byte	0x1
 10985 15c3 CD       		.byte	0xcd
 10986 15c4 A2000000 		.4byte	0xa2
 10987 15c8 05       		.uleb128 0x5
 10988 15c9 03       		.byte	0x3
 10989 15ca 00000000 		.4byte	whichMacro
 10990 15ce 25       		.uleb128 0x25
 10991 15cf 740C0000 		.4byte	.LASF232
 10992 15d3 01       		.byte	0x1
 10993 15d4 E0       		.byte	0xe0
 10994 15d5 180E0000 		.4byte	0xe18
 10995 15d9 05       		.uleb128 0x5
 10996 15da 03       		.byte	0x3
 10997 15db 00000000 		.4byte	array
 10998 15df 25       		.uleb128 0x25
 10999 15e0 DB070000 		.4byte	.LASF233
 11000 15e4 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 238


 11001 15e5 E3       		.byte	0xe3
 11002 15e6 F7010000 		.4byte	0x1f7
 11003 15ea 05       		.uleb128 0x5
 11004 15eb 03       		.byte	0x3
 11005 15ec 00000000 		.4byte	eepromReturnValue
 11006 15f0 25       		.uleb128 0x25
 11007 15f1 3A050000 		.4byte	.LASF234
 11008 15f5 01       		.byte	0x1
 11009 15f6 EF       		.byte	0xef
 11010 15f7 D9000000 		.4byte	0xd9
 11011 15fb 05       		.uleb128 0x5
 11012 15fc 03       		.byte	0x3
 11013 15fd 00000000 		.4byte	eeprom_cnt
 11014 1601 25       		.uleb128 0x25
 11015 1602 F5070000 		.4byte	.LASF83
 11016 1606 01       		.byte	0x1
 11017 1607 F0       		.byte	0xf0
 11018 1608 12010000 		.4byte	0x112
 11019 160c 05       		.uleb128 0x5
 11020 160d 03       		.byte	0x3
 11021 160e 00000000 		.4byte	status
 11022 1612 28       		.uleb128 0x28
 11023 1613 70747200 		.ascii	"ptr\000"
 11024 1617 01       		.byte	0x1
 11025 1618 F1       		.byte	0xf1
 11026 1619 23160000 		.4byte	0x1623
 11027 161d 05       		.uleb128 0x5
 11028 161e 03       		.byte	0x3
 11029 161f 00000000 		.4byte	ptr
 11030 1623 20       		.uleb128 0x20
 11031 1624 04       		.byte	0x4
 11032 1625 2E160000 		.4byte	0x162e
 11033 1629 24       		.uleb128 0x24
 11034 162a D9000000 		.4byte	0xd9
 11035 162e 06       		.uleb128 0x6
 11036 162f 29160000 		.4byte	0x1629
 11037 1633 25       		.uleb128 0x25
 11038 1634 2C020000 		.4byte	.LASF235
 11039 1638 01       		.byte	0x1
 11040 1639 F2       		.byte	0xf2
 11041 163a 85150000 		.4byte	0x1585
 11042 163e 05       		.uleb128 0x5
 11043 163f 03       		.byte	0x3
 11044 1640 00000000 		.4byte	barCount
 11045 1644 07       		.uleb128 0x7
 11046 1645 03020000 		.4byte	0x203
 11047 1649 54160000 		.4byte	0x1654
 11048 164d 08       		.uleb128 0x8
 11049 164e 36010000 		.4byte	0x136
 11050 1652 0F       		.byte	0xf
 11051 1653 00       		.byte	0
 11052 1654 27       		.uleb128 0x27
 11053 1655 0D010000 		.4byte	.LASF236
 11054 1659 01       		.byte	0x1
 11055 165a 5401     		.2byte	0x154
 11056 165c 66160000 		.4byte	0x1666
 11057 1660 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 239


 11058 1661 03       		.byte	0x3
 11059 1662 00000000 		.4byte	I2Cbuff2
 11060 1666 06       		.uleb128 0x6
 11061 1667 44160000 		.4byte	0x1644
 11062 166b 27       		.uleb128 0x27
 11063 166c FC070000 		.4byte	.LASF237
 11064 1670 01       		.byte	0x1
 11065 1671 5501     		.2byte	0x155
 11066 1673 03020000 		.4byte	0x203
 11067 1677 05       		.uleb128 0x5
 11068 1678 03       		.byte	0x3
 11069 1679 00000000 		.4byte	send_it
 11070 167d 07       		.uleb128 0x7
 11071 167e A2000000 		.4byte	0xa2
 11072 1682 93160000 		.4byte	0x1693
 11073 1686 08       		.uleb128 0x8
 11074 1687 36010000 		.4byte	0x136
 11075 168b 0B       		.byte	0xb
 11076 168c 08       		.uleb128 0x8
 11077 168d 36010000 		.4byte	0x136
 11078 1691 01       		.byte	0x1
 11079 1692 00       		.byte	0
 11080 1693 27       		.uleb128 0x27
 11081 1694 16010000 		.4byte	.LASF238
 11082 1698 01       		.byte	0x1
 11083 1699 5C01     		.2byte	0x15c
 11084 169b 7D160000 		.4byte	0x167d
 11085 169f 05       		.uleb128 0x5
 11086 16a0 03       		.byte	0x3
 11087 16a1 00000000 		.4byte	mux_states
 11088 16a5 07       		.uleb128 0x7
 11089 16a6 A2000000 		.4byte	0xa2
 11090 16aa B5160000 		.4byte	0x16b5
 11091 16ae 08       		.uleb128 0x8
 11092 16af 36010000 		.4byte	0x136
 11093 16b3 0B       		.byte	0xb
 11094 16b4 00       		.byte	0
 11095 16b5 27       		.uleb128 0x27
 11096 16b6 AD0E0000 		.4byte	.LASF239
 11097 16ba 01       		.byte	0x1
 11098 16bb 5D01     		.2byte	0x15d
 11099 16bd A5160000 		.4byte	0x16a5
 11100 16c1 05       		.uleb128 0x5
 11101 16c2 03       		.byte	0x3
 11102 16c3 00000000 		.4byte	i2c_skipped
 11103 16c7 27       		.uleb128 0x27
 11104 16c8 690D0000 		.4byte	.LASF240
 11105 16cc 01       		.byte	0x1
 11106 16cd 5E01     		.2byte	0x15e
 11107 16cf 0C120000 		.4byte	0x120c
 11108 16d3 05       		.uleb128 0x5
 11109 16d4 03       		.byte	0x3
 11110 16d5 00000000 		.4byte	pedals_low
 11111 16d9 27       		.uleb128 0x27
 11112 16da 6E010000 		.4byte	.LASF241
 11113 16de 01       		.byte	0x1
 11114 16df 5F01     		.2byte	0x15f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 240


 11115 16e1 0C120000 		.4byte	0x120c
 11116 16e5 05       		.uleb128 0x5
 11117 16e6 03       		.byte	0x3
 11118 16e7 00000000 		.4byte	pedals_high
 11119 16eb 27       		.uleb128 0x27
 11120 16ec D40C0000 		.4byte	.LASF242
 11121 16f0 01       		.byte	0x1
 11122 16f1 6001     		.2byte	0x160
 11123 16f3 B8000000 		.4byte	0xb8
 11124 16f7 05       		.uleb128 0x5
 11125 16f8 03       		.byte	0x3
 11126 16f9 00000000 		.4byte	deadzone
 11127 16fd 27       		.uleb128 0x27
 11128 16fe 62060000 		.4byte	.LASF243
 11129 1702 01       		.byte	0x1
 11130 1703 6101     		.2byte	0x161
 11131 1705 B8000000 		.4byte	0xb8
 11132 1709 05       		.uleb128 0x5
 11133 170a 03       		.byte	0x3
 11134 170b 00000000 		.4byte	volumePedal
 11135 170f 27       		.uleb128 0x27
 11136 1710 4F0B0000 		.4byte	.LASF244
 11137 1714 01       		.byte	0x1
 11138 1715 6201     		.2byte	0x162
 11139 1717 0C120000 		.4byte	0x120c
 11140 171b 05       		.uleb128 0x5
 11141 171c 03       		.byte	0x3
 11142 171d 00000000 		.4byte	processed_pedals
 11143 1721 27       		.uleb128 0x27
 11144 1722 5B0A0000 		.4byte	.LASF245
 11145 1726 01       		.byte	0x1
 11146 1727 6301     		.2byte	0x163
 11147 1729 0C120000 		.4byte	0x120c
 11148 172d 05       		.uleb128 0x5
 11149 172e 03       		.byte	0x3
 11150 172f 00000000 		.4byte	prev_processed_pedals
 11151 1733 07       		.uleb128 0x7
 11152 1734 A2000000 		.4byte	0xa2
 11153 1738 43170000 		.4byte	0x1743
 11154 173c 08       		.uleb128 0x8
 11155 173d 36010000 		.4byte	0x136
 11156 1741 09       		.byte	0x9
 11157 1742 00       		.byte	0
 11158 1743 27       		.uleb128 0x27
 11159 1744 85060000 		.4byte	.LASF246
 11160 1748 01       		.byte	0x1
 11161 1749 6401     		.2byte	0x164
 11162 174b 33170000 		.4byte	0x1733
 11163 174f 05       		.uleb128 0x5
 11164 1750 03       		.byte	0x3
 11165 1751 00000000 		.4byte	pedals8bit
 11166 1755 27       		.uleb128 0x27
 11167 1756 42000000 		.4byte	.LASF247
 11168 175a 01       		.byte	0x1
 11169 175b 6501     		.2byte	0x165
 11170 175d AD000000 		.4byte	0xad
 11171 1761 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 241


 11172 1762 03       		.byte	0x3
 11173 1763 00000000 		.4byte	prev_processed_volumePedal
 11174 1767 27       		.uleb128 0x27
 11175 1768 1A0B0000 		.4byte	.LASF248
 11176 176c 01       		.byte	0x1
 11177 176d 6601     		.2byte	0x166
 11178 176f AD000000 		.4byte	0xad
 11179 1773 05       		.uleb128 0x5
 11180 1774 03       		.byte	0x3
 11181 1775 00000000 		.4byte	processed_volumePedal
 11182 1779 07       		.uleb128 0x7
 11183 177a FD000000 		.4byte	0xfd
 11184 177e 8F170000 		.4byte	0x178f
 11185 1782 08       		.uleb128 0x8
 11186 1783 36010000 		.4byte	0x136
 11187 1787 03       		.byte	0x3
 11188 1788 08       		.uleb128 0x8
 11189 1789 36010000 		.4byte	0x136
 11190 178d 03       		.byte	0x3
 11191 178e 00       		.byte	0
 11192 178f 27       		.uleb128 0x27
 11193 1790 9A0D0000 		.4byte	.LASF249
 11194 1794 01       		.byte	0x1
 11195 1795 6901     		.2byte	0x169
 11196 1797 79170000 		.4byte	0x1779
 11197 179b 05       		.uleb128 0x5
 11198 179c 03       		.byte	0x3
 11199 179d 00000000 		.4byte	fretMeasurements
 11200 17a1 27       		.uleb128 0x27
 11201 17a2 68080000 		.4byte	.LASF250
 11202 17a6 01       		.byte	0x1
 11203 17a7 7601     		.2byte	0x176
 11204 17a9 94000000 		.4byte	0x94
 11205 17ad 05       		.uleb128 0x5
 11206 17ae 03       		.byte	0x3
 11207 17af 00000000 		.4byte	currentPresetSelection
 11208 17b3 07       		.uleb128 0x7
 11209 17b4 A2000000 		.4byte	0xa2
 11210 17b8 C9170000 		.4byte	0x17c9
 11211 17bc 08       		.uleb128 0x8
 11212 17bd 36010000 		.4byte	0x136
 11213 17c1 3F       		.byte	0x3f
 11214 17c2 08       		.uleb128 0x8
 11215 17c3 36010000 		.4byte	0x136
 11216 17c7 0D       		.byte	0xd
 11217 17c8 00       		.byte	0
 11218 17c9 27       		.uleb128 0x27
 11219 17ca BB020000 		.4byte	.LASF251
 11220 17ce 01       		.byte	0x1
 11221 17cf 7701     		.2byte	0x177
 11222 17d1 B3170000 		.4byte	0x17b3
 11223 17d5 05       		.uleb128 0x5
 11224 17d6 03       		.byte	0x3
 11225 17d7 00000000 		.4byte	presetNamesArray
 11226 17db 27       		.uleb128 0x27
 11227 17dc 44020000 		.4byte	.LASF252
 11228 17e0 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 242


 11229 17e1 7801     		.2byte	0x178
 11230 17e3 A2000000 		.4byte	0xa2
 11231 17e7 05       		.uleb128 0x5
 11232 17e8 03       		.byte	0x3
 11233 17e9 00000000 		.4byte	presetNumberToLoad
 11234 17ed 27       		.uleb128 0x27
 11235 17ee 7B020000 		.4byte	.LASF253
 11236 17f2 01       		.byte	0x1
 11237 17f3 7901     		.2byte	0x179
 11238 17f5 C4120000 		.4byte	0x12c4
 11239 17f9 05       		.uleb128 0x5
 11240 17fa 03       		.byte	0x3
 11241 17fb 00000000 		.4byte	presetLoadedResponse
 11242 17ff 07       		.uleb128 0x7
 11243 1800 A2000000 		.4byte	0xa2
 11244 1804 1B180000 		.4byte	0x181b
 11245 1808 08       		.uleb128 0x8
 11246 1809 36010000 		.4byte	0x136
 11247 180d 3F       		.byte	0x3f
 11248 180e 08       		.uleb128 0x8
 11249 180f 36010000 		.4byte	0x136
 11250 1813 07       		.byte	0x7
 11251 1814 08       		.uleb128 0x8
 11252 1815 36010000 		.4byte	0x136
 11253 1819 0D       		.byte	0xd
 11254 181a 00       		.byte	0
 11255 181b 27       		.uleb128 0x27
 11256 181c 74000000 		.4byte	.LASF254
 11257 1820 01       		.byte	0x1
 11258 1821 7C01     		.2byte	0x17c
 11259 1823 FF170000 		.4byte	0x17ff
 11260 1827 05       		.uleb128 0x5
 11261 1828 03       		.byte	0x3
 11262 1829 00000000 		.4byte	macroNamesArray
 11263 182d 07       		.uleb128 0x7
 11264 182e FD000000 		.4byte	0xfd
 11265 1832 3D180000 		.4byte	0x183d
 11266 1836 08       		.uleb128 0x8
 11267 1837 36010000 		.4byte	0x136
 11268 183b 03       		.byte	0x3
 11269 183c 00       		.byte	0
 11270 183d 27       		.uleb128 0x27
 11271 183e 16030000 		.4byte	.LASF255
 11272 1842 01       		.byte	0x1
 11273 1843 8001     		.2byte	0x180
 11274 1845 2D180000 		.4byte	0x182d
 11275 1849 05       		.uleb128 0x5
 11276 184a 03       		.byte	0x3
 11277 184b 00000000 		.4byte	fretScaling
 11278 184f 07       		.uleb128 0x7
 11279 1850 FD000000 		.4byte	0xfd
 11280 1854 5F180000 		.4byte	0x185f
 11281 1858 08       		.uleb128 0x8
 11282 1859 36010000 		.4byte	0x136
 11283 185d 09       		.byte	0x9
 11284 185e 00       		.byte	0
 11285 185f 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 243


 11286 1860 E9030000 		.4byte	.LASF256
 11287 1864 01       		.byte	0x1
 11288 1865 8501     		.2byte	0x185
 11289 1867 4F180000 		.4byte	0x184f
 11290 186b 05       		.uleb128 0x5
 11291 186c 03       		.byte	0x3
 11292 186d 00000000 		.4byte	pedalRatios
 11293 1871 27       		.uleb128 0x27
 11294 1872 8A040000 		.4byte	.LASF257
 11295 1876 01       		.byte	0x1
 11296 1877 8601     		.2byte	0x186
 11297 1879 A2000000 		.4byte	0xa2
 11298 187d 05       		.uleb128 0x5
 11299 187e 03       		.byte	0x3
 11300 187f 00000000 		.4byte	last_mux
 11301 1883 27       		.uleb128 0x27
 11302 1884 46090000 		.4byte	.LASF258
 11303 1888 01       		.byte	0x1
 11304 1889 8701     		.2byte	0x187
 11305 188b 03020000 		.4byte	0x203
 11306 188f 05       		.uleb128 0x5
 11307 1890 03       		.byte	0x3
 11308 1891 00000000 		.4byte	main_counter
 11309 1895 27       		.uleb128 0x27
 11310 1896 1C050000 		.4byte	.LASF259
 11311 189a 01       		.byte	0x1
 11312 189b 8801     		.2byte	0x188
 11313 189d A2000000 		.4byte	0xa2
 11314 18a1 05       		.uleb128 0x5
 11315 18a2 03       		.byte	0x3
 11316 18a3 00000000 		.4byte	neck
 11317 18a7 27       		.uleb128 0x27
 11318 18a8 5D090000 		.4byte	.LASF260
 11319 18ac 01       		.byte	0x1
 11320 18ad 8901     		.2byte	0x189
 11321 18af A2000000 		.4byte	0xa2
 11322 18b3 05       		.uleb128 0x5
 11323 18b4 03       		.byte	0x3
 11324 18b5 00000000 		.4byte	dualSlider
 11325 18b9 27       		.uleb128 0x27
 11326 18ba D00B0000 		.4byte	.LASF261
 11327 18be 01       		.byte	0x1
 11328 18bf 8A01     		.2byte	0x18a
 11329 18c1 A2000000 		.4byte	0xa2
 11330 18c5 05       		.uleb128 0x5
 11331 18c6 03       		.byte	0x3
 11332 18c7 00000000 		.4byte	enterUp
 11333 18cb 27       		.uleb128 0x27
 11334 18cc 57020000 		.4byte	.LASF262
 11335 18d0 01       		.byte	0x1
 11336 18d1 8B01     		.2byte	0x18b
 11337 18d3 A2000000 		.4byte	0xa2
 11338 18d7 05       		.uleb128 0x5
 11339 18d8 03       		.byte	0x3
 11340 18d9 00000000 		.4byte	voice
 11341 18dd 27       		.uleb128 0x27
 11342 18de A80F0000 		.4byte	.LASF263
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 244


 11343 18e2 01       		.byte	0x1
 11344 18e3 8C01     		.2byte	0x18c
 11345 18e5 A2000000 		.4byte	0xa2
 11346 18e9 05       		.uleb128 0x5
 11347 18ea 03       		.byte	0x3
 11348 18eb 00000000 		.4byte	editUp
 11349 18ef 27       		.uleb128 0x27
 11350 18f0 74050000 		.4byte	.LASF264
 11351 18f4 01       		.byte	0x1
 11352 18f5 8D01     		.2byte	0x18d
 11353 18f7 A2000000 		.4byte	0xa2
 11354 18fb 05       		.uleb128 0x5
 11355 18fc 03       		.byte	0x3
 11356 18fd 00000000 		.4byte	oct1Up
 11357 1901 27       		.uleb128 0x27
 11358 1902 200F0000 		.4byte	.LASF265
 11359 1906 01       		.byte	0x1
 11360 1907 8E01     		.2byte	0x18e
 11361 1909 A2000000 		.4byte	0xa2
 11362 190d 05       		.uleb128 0x5
 11363 190e 03       		.byte	0x3
 11364 190f 00000000 		.4byte	oct4Up
 11365 1913 27       		.uleb128 0x27
 11366 1914 93040000 		.4byte	.LASF266
 11367 1918 01       		.byte	0x1
 11368 1919 9001     		.2byte	0x190
 11369 191b 25190000 		.4byte	0x1925
 11370 191f 05       		.uleb128 0x5
 11371 1920 03       		.byte	0x3
 11372 1921 00000000 		.4byte	encoderVal
 11373 1925 06       		.uleb128 0x6
 11374 1926 44160000 		.4byte	0x1644
 11375 192a 27       		.uleb128 0x27
 11376 192b 69050000 		.4byte	.LASF267
 11377 192f 01       		.byte	0x1
 11378 1930 9101     		.2byte	0x191
 11379 1932 94000000 		.4byte	0x94
 11380 1936 05       		.uleb128 0x5
 11381 1937 03       		.byte	0x3
 11382 1938 00000000 		.4byte	encoderNum
 11383 193c 27       		.uleb128 0x27
 11384 193d 230A0000 		.4byte	.LASF268
 11385 1941 01       		.byte	0x1
 11386 1942 9201     		.2byte	0x192
 11387 1944 A2000000 		.4byte	0xa2
 11388 1948 05       		.uleb128 0x5
 11389 1949 03       		.byte	0x3
 11390 194a 00000000 		.4byte	button1Up
 11391 194e 27       		.uleb128 0x27
 11392 194f 630C0000 		.4byte	.LASF269
 11393 1953 01       		.byte	0x1
 11394 1954 9301     		.2byte	0x193
 11395 1956 A2000000 		.4byte	0xa2
 11396 195a 05       		.uleb128 0x5
 11397 195b 03       		.byte	0x3
 11398 195c 00000000 		.4byte	button2Up
 11399 1960 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 245


 11400 1961 3C0F0000 		.4byte	.LASF270
 11401 1965 01       		.byte	0x1
 11402 1966 9401     		.2byte	0x194
 11403 1968 A2000000 		.4byte	0xa2
 11404 196c 05       		.uleb128 0x5
 11405 196d 03       		.byte	0x3
 11406 196e 00000000 		.4byte	button3Up
 11407 1972 27       		.uleb128 0x27
 11408 1973 FB0E0000 		.4byte	.LASF271
 11409 1977 01       		.byte	0x1
 11410 1978 9501     		.2byte	0x195
 11411 197a A2000000 		.4byte	0xa2
 11412 197e 05       		.uleb128 0x5
 11413 197f 03       		.byte	0x3
 11414 1980 00000000 		.4byte	button4Up
 11415 1984 27       		.uleb128 0x27
 11416 1985 4D0D0000 		.4byte	.LASF272
 11417 1989 01       		.byte	0x1
 11418 198a 9601     		.2byte	0x196
 11419 198c A2000000 		.4byte	0xa2
 11420 1990 05       		.uleb128 0x5
 11421 1991 03       		.byte	0x3
 11422 1992 00000000 		.4byte	patchNum
 11423 1996 07       		.uleb128 0x7
 11424 1997 FD000000 		.4byte	0xfd
 11425 199b B2190000 		.4byte	0x19b2
 11426 199f 08       		.uleb128 0x8
 11427 19a0 36010000 		.4byte	0x136
 11428 19a4 06       		.byte	0x6
 11429 19a5 08       		.uleb128 0x8
 11430 19a6 36010000 		.4byte	0x136
 11431 19aa 0A       		.byte	0xa
 11432 19ab 08       		.uleb128 0x8
 11433 19ac 36010000 		.4byte	0x136
 11434 19b0 0B       		.byte	0xb
 11435 19b1 00       		.byte	0
 11436 19b2 27       		.uleb128 0x27
 11437 19b3 7C060000 		.4byte	.LASF273
 11438 19b7 01       		.byte	0x1
 11439 19b8 9C01     		.2byte	0x19c
 11440 19ba 96190000 		.4byte	0x1996
 11441 19be 05       		.uleb128 0x5
 11442 19bf 03       		.byte	0x3
 11443 19c0 00000000 		.4byte	copedent
 11444 19c4 07       		.uleb128 0x7
 11445 19c5 A2000000 		.4byte	0xa2
 11446 19c9 DA190000 		.4byte	0x19da
 11447 19cd 08       		.uleb128 0x8
 11448 19ce 36010000 		.4byte	0x136
 11449 19d2 06       		.byte	0x6
 11450 19d3 08       		.uleb128 0x8
 11451 19d4 36010000 		.4byte	0x136
 11452 19d8 0D       		.byte	0xd
 11453 19d9 00       		.byte	0
 11454 19da 27       		.uleb128 0x27
 11455 19db 81010000 		.4byte	.LASF274
 11456 19df 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 246


 11457 19e0 9D01     		.2byte	0x19d
 11458 19e2 C4190000 		.4byte	0x19c4
 11459 19e6 05       		.uleb128 0x5
 11460 19e7 03       		.byte	0x3
 11461 19e8 00000000 		.4byte	copedentNamesArray
 11462 19ec 07       		.uleb128 0x7
 11463 19ed FD000000 		.4byte	0xfd
 11464 19f1 FC190000 		.4byte	0x19fc
 11465 19f5 08       		.uleb128 0x8
 11466 19f6 36010000 		.4byte	0x136
 11467 19fa 0B       		.byte	0xb
 11468 19fb 00       		.byte	0
 11469 19fc 27       		.uleb128 0x27
 11470 19fd D1020000 		.4byte	.LASF275
 11471 1a01 01       		.byte	0x1
 11472 1a02 9F01     		.2byte	0x19f
 11473 1a04 EC190000 		.4byte	0x19ec
 11474 1a08 05       		.uleb128 0x5
 11475 1a09 03       		.byte	0x3
 11476 1a0a 00000000 		.4byte	prevStringPitchBend
 11477 1a0e 07       		.uleb128 0x7
 11478 1a0f FD000000 		.4byte	0xfd
 11479 1a13 241A0000 		.4byte	0x1a24
 11480 1a17 08       		.uleb128 0x8
 11481 1a18 36010000 		.4byte	0x136
 11482 1a1c 09       		.byte	0x9
 11483 1a1d 08       		.uleb128 0x8
 11484 1a1e 36010000 		.4byte	0x136
 11485 1a22 0B       		.byte	0xb
 11486 1a23 00       		.byte	0
 11487 1a24 27       		.uleb128 0x27
 11488 1a25 950F0000 		.4byte	.LASF276
 11489 1a29 01       		.byte	0x1
 11490 1a2a A101     		.2byte	0x1a1
 11491 1a2c 0E1A0000 		.4byte	0x1a0e
 11492 1a30 05       		.uleb128 0x5
 11493 1a31 03       		.byte	0x3
 11494 1a32 00000000 		.4byte	pedals
 11495 1a36 27       		.uleb128 0x27
 11496 1a37 600B0000 		.4byte	.LASF277
 11497 1a3b 01       		.byte	0x1
 11498 1a3c A401     		.2byte	0x1a4
 11499 1a3e EC190000 		.4byte	0x19ec
 11500 1a42 05       		.uleb128 0x5
 11501 1a43 03       		.byte	0x3
 11502 1a44 00000000 		.4byte	openStringFrequencies
 11503 1a48 27       		.uleb128 0x27
 11504 1a49 0D0E0000 		.4byte	.LASF278
 11505 1a4d 01       		.byte	0x1
 11506 1a4e A501     		.2byte	0x1a5
 11507 1a50 EC190000 		.4byte	0x19ec
 11508 1a54 05       		.uleb128 0x5
 11509 1a55 03       		.byte	0x3
 11510 1a56 00000000 		.4byte	stringMappedPositions
 11511 1a5a 27       		.uleb128 0x27
 11512 1a5b 4F070000 		.4byte	.LASF279
 11513 1a5f 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 247


 11514 1a60 A601     		.2byte	0x1a6
 11515 1a62 EC190000 		.4byte	0x19ec
 11516 1a66 05       		.uleb128 0x5
 11517 1a67 03       		.byte	0x3
 11518 1a68 00000000 		.4byte	invStringMappedPositions
 11519 1a6c 27       		.uleb128 0x27
 11520 1a6d CC0F0000 		.4byte	.LASF280
 11521 1a71 01       		.byte	0x1
 11522 1a72 A701     		.2byte	0x1a7
 11523 1a74 EC190000 		.4byte	0x19ec
 11524 1a78 05       		.uleb128 0x5
 11525 1a79 03       		.byte	0x3
 11526 1a7a 00000000 		.4byte	stringFrequencies
 11527 1a7e 27       		.uleb128 0x27
 11528 1a7f 41040000 		.4byte	.LASF281
 11529 1a83 01       		.byte	0x1
 11530 1a84 A801     		.2byte	0x1a8
 11531 1a86 EC190000 		.4byte	0x19ec
 11532 1a8a 05       		.uleb128 0x5
 11533 1a8b 03       		.byte	0x3
 11534 1a8c 00000000 		.4byte	stringOctave
 11535 1a90 27       		.uleb128 0x27
 11536 1a91 C1090000 		.4byte	.LASF282
 11537 1a95 01       		.byte	0x1
 11538 1a96 A901     		.2byte	0x1a9
 11539 1a98 EC190000 		.4byte	0x19ec
 11540 1a9c 05       		.uleb128 0x5
 11541 1a9d 03       		.byte	0x3
 11542 1a9e 00000000 		.4byte	stringPitch
 11543 1aa2 27       		.uleb128 0x27
 11544 1aa3 BE0D0000 		.4byte	.LASF283
 11545 1aa7 01       		.byte	0x1
 11546 1aa8 AA01     		.2byte	0x1aa
 11547 1aaa EC190000 		.4byte	0x19ec
 11548 1aae 05       		.uleb128 0x5
 11549 1aaf 03       		.byte	0x3
 11550 1ab0 00000000 		.4byte	stringMIDI
 11551 1ab4 07       		.uleb128 0x7
 11552 1ab5 94000000 		.4byte	0x94
 11553 1ab9 C41A0000 		.4byte	0x1ac4
 11554 1abd 08       		.uleb128 0x8
 11555 1abe 36010000 		.4byte	0x136
 11556 1ac2 0B       		.byte	0xb
 11557 1ac3 00       		.byte	0
 11558 1ac4 27       		.uleb128 0x27
 11559 1ac5 7F080000 		.4byte	.LASF284
 11560 1ac9 01       		.byte	0x1
 11561 1aca AB01     		.2byte	0x1ab
 11562 1acc B41A0000 		.4byte	0x1ab4
 11563 1ad0 05       		.uleb128 0x5
 11564 1ad1 03       		.byte	0x3
 11565 1ad2 00000000 		.4byte	openStringMIDI_Int
 11566 1ad6 27       		.uleb128 0x27
 11567 1ad7 430D0000 		.4byte	.LASF285
 11568 1adb 01       		.byte	0x1
 11569 1adc AC01     		.2byte	0x1ac
 11570 1ade 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 248


 11571 1ae2 05       		.uleb128 0x5
 11572 1ae3 03       		.byte	0x3
 11573 1ae4 00000000 		.4byte	OLEDcount
 11574 1ae8 27       		.uleb128 0x27
 11575 1ae9 D3090000 		.4byte	.LASF286
 11576 1aed 01       		.byte	0x1
 11577 1aee AE01     		.2byte	0x1ae
 11578 1af0 94000000 		.4byte	0x94
 11579 1af4 05       		.uleb128 0x5
 11580 1af5 03       		.byte	0x3
 11581 1af6 00000000 		.4byte	mainOLEDWaitingToSend
 11582 1afa 27       		.uleb128 0x27
 11583 1afb 57010000 		.4byte	.LASF287
 11584 1aff 01       		.byte	0x1
 11585 1b00 AF01     		.2byte	0x1af
 11586 1b02 94000000 		.4byte	0x94
 11587 1b06 05       		.uleb128 0x5
 11588 1b07 03       		.byte	0x3
 11589 1b08 00000000 		.4byte	macroOLEDWaitingToSend
 11590 1b0c 07       		.uleb128 0x7
 11591 1b0d 94000000 		.4byte	0x94
 11592 1b11 1C1B0000 		.4byte	0x1b1c
 11593 1b15 08       		.uleb128 0x8
 11594 1b16 36010000 		.4byte	0x136
 11595 1b1a 3F       		.byte	0x3f
 11596 1b1b 00       		.byte	0
 11597 1b1c 27       		.uleb128 0x27
 11598 1b1d A7040000 		.4byte	.LASF288
 11599 1b21 01       		.byte	0x1
 11600 1b22 B101     		.2byte	0x1b1
 11601 1b24 0C1B0000 		.4byte	0x1b0c
 11602 1b28 05       		.uleb128 0x5
 11603 1b29 03       		.byte	0x3
 11604 1b2a 00000000 		.4byte	presetAlreadyDisplayed
 11605 1b2e 27       		.uleb128 0x27
 11606 1b2f 560D0000 		.4byte	.LASF289
 11607 1b33 01       		.byte	0x1
 11608 1b34 B301     		.2byte	0x1b3
 11609 1b36 4F180000 		.4byte	0x184f
 11610 1b3a 05       		.uleb128 0x5
 11611 1b3b 03       		.byte	0x3
 11612 1b3c 00000000 		.4byte	pedals_float
 11613 1b40 27       		.uleb128 0x27
 11614 1b41 F80B0000 		.4byte	.LASF290
 11615 1b45 01       		.byte	0x1
 11616 1b46 BB01     		.2byte	0x1bb
 11617 1b48 94000000 		.4byte	0x94
 11618 1b4c 05       		.uleb128 0x5
 11619 1b4d 03       		.byte	0x3
 11620 1b4e 00000000 		.4byte	currentNeck
 11621 1b52 27       		.uleb128 0x27
 11622 1b53 040C0000 		.4byte	.LASF291
 11623 1b57 01       		.byte	0x1
 11624 1b58 BD01     		.2byte	0x1bd
 11625 1b5a 94000000 		.4byte	0x94
 11626 1b5e 05       		.uleb128 0x5
 11627 1b5f 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 249


 11628 1b60 00000000 		.4byte	editMode
 11629 1b64 27       		.uleb128 0x27
 11630 1b65 580E0000 		.4byte	.LASF292
 11631 1b69 01       		.byte	0x1
 11632 1b6a BE01     		.2byte	0x1be
 11633 1b6c 94000000 		.4byte	0x94
 11634 1b70 05       		.uleb128 0x5
 11635 1b71 03       		.byte	0x3
 11636 1b72 00000000 		.4byte	calibrationMode
 11637 1b76 27       		.uleb128 0x27
 11638 1b77 8C070000 		.4byte	.LASF293
 11639 1b7b 01       		.byte	0x1
 11640 1b7c 9B07     		.2byte	0x79b
 11641 1b7e B41A0000 		.4byte	0x1ab4
 11642 1b82 05       		.uleb128 0x5
 11643 1b83 03       		.byte	0x3
 11644 1b84 00000000 		.4byte	prevNotes
 11645 1b88 27       		.uleb128 0x27
 11646 1b89 EA0A0000 		.4byte	.LASF294
 11647 1b8d 01       		.byte	0x1
 11648 1b8e 1008     		.2byte	0x810
 11649 1b90 03020000 		.4byte	0x203
 11650 1b94 05       		.uleb128 0x5
 11651 1b95 03       		.byte	0x3
 11652 1b96 00000000 		.4byte	checkStatus
 11653 1b9a 27       		.uleb128 0x27
 11654 1b9b 4F0C0000 		.4byte	.LASF295
 11655 1b9f 01       		.byte	0x1
 11656 1ba0 1108     		.2byte	0x811
 11657 1ba2 08020000 		.4byte	0x208
 11658 1ba6 05       		.uleb128 0x5
 11659 1ba7 03       		.byte	0x3
 11660 1ba8 00000000 		.4byte	checkBase
 11661 1bac 27       		.uleb128 0x27
 11662 1bad 0A0D0000 		.4byte	.LASF296
 11663 1bb1 01       		.byte	0x1
 11664 1bb2 1508     		.2byte	0x815
 11665 1bb4 94000000 		.4byte	0x94
 11666 1bb8 05       		.uleb128 0x5
 11667 1bb9 03       		.byte	0x3
 11668 1bba 00000000 		.4byte	SPI_errors
 11669 1bbe 07       		.uleb128 0x7
 11670 1bbf 03020000 		.4byte	0x203
 11671 1bc3 CE1B0000 		.4byte	0x1bce
 11672 1bc7 08       		.uleb128 0x8
 11673 1bc8 36010000 		.4byte	0x136
 11674 1bcc 03       		.byte	0x3
 11675 1bcd 00       		.byte	0
 11676 1bce 27       		.uleb128 0x27
 11677 1bcf 300B0000 		.4byte	.LASF87
 11678 1bd3 01       		.byte	0x1
 11679 1bd4 2E09     		.2byte	0x92e
 11680 1bd6 E01B0000 		.4byte	0x1be0
 11681 1bda 05       		.uleb128 0x5
 11682 1bdb 03       		.byte	0x3
 11683 1bdc 00000000 		.4byte	tempMIDI
 11684 1be0 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 250


 11685 1be1 BE1B0000 		.4byte	0x1bbe
 11686 1be5 27       		.uleb128 0x27
 11687 1be6 1F000000 		.4byte	.LASF297
 11688 1bea 01       		.byte	0x1
 11689 1beb 2F09     		.2byte	0x92f
 11690 1bed 03020000 		.4byte	0x203
 11691 1bf1 05       		.uleb128 0x5
 11692 1bf2 03       		.byte	0x3
 11693 1bf3 00000000 		.4byte	firstSysex
 11694 1bf7 27       		.uleb128 0x27
 11695 1bf8 08060000 		.4byte	.LASF298
 11696 1bfc 01       		.byte	0x1
 11697 1bfd 3009     		.2byte	0x930
 11698 1bff 091C0000 		.4byte	0x1c09
 11699 1c03 05       		.uleb128 0x5
 11700 1c04 03       		.byte	0x3
 11701 1c05 00000000 		.4byte	sysexPointerMask
 11702 1c09 24       		.uleb128 0x24
 11703 1c0a B8000000 		.4byte	0xb8
 11704 1c0e 00       		.byte	0
 11705              		.section	.debug_abbrev,"",%progbits
 11706              	.Ldebug_abbrev0:
 11707 0000 01       		.uleb128 0x1
 11708 0001 11       		.uleb128 0x11
 11709 0002 01       		.byte	0x1
 11710 0003 25       		.uleb128 0x25
 11711 0004 0E       		.uleb128 0xe
 11712 0005 13       		.uleb128 0x13
 11713 0006 0B       		.uleb128 0xb
 11714 0007 03       		.uleb128 0x3
 11715 0008 0E       		.uleb128 0xe
 11716 0009 1B       		.uleb128 0x1b
 11717 000a 0E       		.uleb128 0xe
 11718 000b 55       		.uleb128 0x55
 11719 000c 17       		.uleb128 0x17
 11720 000d 11       		.uleb128 0x11
 11721 000e 01       		.uleb128 0x1
 11722 000f 10       		.uleb128 0x10
 11723 0010 17       		.uleb128 0x17
 11724 0011 00       		.byte	0
 11725 0012 00       		.byte	0
 11726 0013 02       		.uleb128 0x2
 11727 0014 24       		.uleb128 0x24
 11728 0015 00       		.byte	0
 11729 0016 0B       		.uleb128 0xb
 11730 0017 0B       		.uleb128 0xb
 11731 0018 3E       		.uleb128 0x3e
 11732 0019 0B       		.uleb128 0xb
 11733 001a 03       		.uleb128 0x3
 11734 001b 0E       		.uleb128 0xe
 11735 001c 00       		.byte	0
 11736 001d 00       		.byte	0
 11737 001e 03       		.uleb128 0x3
 11738 001f 16       		.uleb128 0x16
 11739 0020 00       		.byte	0
 11740 0021 03       		.uleb128 0x3
 11741 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 251


 11742 0023 3A       		.uleb128 0x3a
 11743 0024 0B       		.uleb128 0xb
 11744 0025 3B       		.uleb128 0x3b
 11745 0026 0B       		.uleb128 0xb
 11746 0027 49       		.uleb128 0x49
 11747 0028 13       		.uleb128 0x13
 11748 0029 00       		.byte	0
 11749 002a 00       		.byte	0
 11750 002b 04       		.uleb128 0x4
 11751 002c 24       		.uleb128 0x24
 11752 002d 00       		.byte	0
 11753 002e 0B       		.uleb128 0xb
 11754 002f 0B       		.uleb128 0xb
 11755 0030 3E       		.uleb128 0x3e
 11756 0031 0B       		.uleb128 0xb
 11757 0032 03       		.uleb128 0x3
 11758 0033 08       		.uleb128 0x8
 11759 0034 00       		.byte	0
 11760 0035 00       		.byte	0
 11761 0036 05       		.uleb128 0x5
 11762 0037 16       		.uleb128 0x16
 11763 0038 00       		.byte	0
 11764 0039 03       		.uleb128 0x3
 11765 003a 0E       		.uleb128 0xe
 11766 003b 3A       		.uleb128 0x3a
 11767 003c 0B       		.uleb128 0xb
 11768 003d 3B       		.uleb128 0x3b
 11769 003e 05       		.uleb128 0x5
 11770 003f 49       		.uleb128 0x49
 11771 0040 13       		.uleb128 0x13
 11772 0041 00       		.byte	0
 11773 0042 00       		.byte	0
 11774 0043 06       		.uleb128 0x6
 11775 0044 35       		.uleb128 0x35
 11776 0045 00       		.byte	0
 11777 0046 49       		.uleb128 0x49
 11778 0047 13       		.uleb128 0x13
 11779 0048 00       		.byte	0
 11780 0049 00       		.byte	0
 11781 004a 07       		.uleb128 0x7
 11782 004b 01       		.uleb128 0x1
 11783 004c 01       		.byte	0x1
 11784 004d 49       		.uleb128 0x49
 11785 004e 13       		.uleb128 0x13
 11786 004f 01       		.uleb128 0x1
 11787 0050 13       		.uleb128 0x13
 11788 0051 00       		.byte	0
 11789 0052 00       		.byte	0
 11790 0053 08       		.uleb128 0x8
 11791 0054 21       		.uleb128 0x21
 11792 0055 00       		.byte	0
 11793 0056 49       		.uleb128 0x49
 11794 0057 13       		.uleb128 0x13
 11795 0058 2F       		.uleb128 0x2f
 11796 0059 0B       		.uleb128 0xb
 11797 005a 00       		.byte	0
 11798 005b 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 252


 11799 005c 09       		.uleb128 0x9
 11800 005d 13       		.uleb128 0x13
 11801 005e 01       		.byte	0x1
 11802 005f 0B       		.uleb128 0xb
 11803 0060 0B       		.uleb128 0xb
 11804 0061 3A       		.uleb128 0x3a
 11805 0062 0B       		.uleb128 0xb
 11806 0063 3B       		.uleb128 0x3b
 11807 0064 05       		.uleb128 0x5
 11808 0065 01       		.uleb128 0x1
 11809 0066 13       		.uleb128 0x13
 11810 0067 00       		.byte	0
 11811 0068 00       		.byte	0
 11812 0069 0A       		.uleb128 0xa
 11813 006a 0D       		.uleb128 0xd
 11814 006b 00       		.byte	0
 11815 006c 03       		.uleb128 0x3
 11816 006d 0E       		.uleb128 0xe
 11817 006e 3A       		.uleb128 0x3a
 11818 006f 0B       		.uleb128 0xb
 11819 0070 3B       		.uleb128 0x3b
 11820 0071 05       		.uleb128 0x5
 11821 0072 49       		.uleb128 0x49
 11822 0073 13       		.uleb128 0x13
 11823 0074 38       		.uleb128 0x38
 11824 0075 0B       		.uleb128 0xb
 11825 0076 00       		.byte	0
 11826 0077 00       		.byte	0
 11827 0078 0B       		.uleb128 0xb
 11828 0079 04       		.uleb128 0x4
 11829 007a 01       		.byte	0x1
 11830 007b 0B       		.uleb128 0xb
 11831 007c 0B       		.uleb128 0xb
 11832 007d 49       		.uleb128 0x49
 11833 007e 13       		.uleb128 0x13
 11834 007f 3A       		.uleb128 0x3a
 11835 0080 0B       		.uleb128 0xb
 11836 0081 3B       		.uleb128 0x3b
 11837 0082 05       		.uleb128 0x5
 11838 0083 01       		.uleb128 0x1
 11839 0084 13       		.uleb128 0x13
 11840 0085 00       		.byte	0
 11841 0086 00       		.byte	0
 11842 0087 0C       		.uleb128 0xc
 11843 0088 28       		.uleb128 0x28
 11844 0089 00       		.byte	0
 11845 008a 03       		.uleb128 0x3
 11846 008b 0E       		.uleb128 0xe
 11847 008c 1C       		.uleb128 0x1c
 11848 008d 0B       		.uleb128 0xb
 11849 008e 00       		.byte	0
 11850 008f 00       		.byte	0
 11851 0090 0D       		.uleb128 0xd
 11852 0091 04       		.uleb128 0x4
 11853 0092 01       		.byte	0x1
 11854 0093 03       		.uleb128 0x3
 11855 0094 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 253


 11856 0095 0B       		.uleb128 0xb
 11857 0096 0B       		.uleb128 0xb
 11858 0097 49       		.uleb128 0x49
 11859 0098 13       		.uleb128 0x13
 11860 0099 3A       		.uleb128 0x3a
 11861 009a 0B       		.uleb128 0xb
 11862 009b 3B       		.uleb128 0x3b
 11863 009c 0B       		.uleb128 0xb
 11864 009d 01       		.uleb128 0x1
 11865 009e 13       		.uleb128 0x13
 11866 009f 00       		.byte	0
 11867 00a0 00       		.byte	0
 11868 00a1 0E       		.uleb128 0xe
 11869 00a2 17       		.uleb128 0x17
 11870 00a3 01       		.byte	0x1
 11871 00a4 03       		.uleb128 0x3
 11872 00a5 0E       		.uleb128 0xe
 11873 00a6 0B       		.uleb128 0xb
 11874 00a7 0B       		.uleb128 0xb
 11875 00a8 3A       		.uleb128 0x3a
 11876 00a9 0B       		.uleb128 0xb
 11877 00aa 3B       		.uleb128 0x3b
 11878 00ab 0B       		.uleb128 0xb
 11879 00ac 01       		.uleb128 0x1
 11880 00ad 13       		.uleb128 0x13
 11881 00ae 00       		.byte	0
 11882 00af 00       		.byte	0
 11883 00b0 0F       		.uleb128 0xf
 11884 00b1 0D       		.uleb128 0xd
 11885 00b2 00       		.byte	0
 11886 00b3 03       		.uleb128 0x3
 11887 00b4 08       		.uleb128 0x8
 11888 00b5 3A       		.uleb128 0x3a
 11889 00b6 0B       		.uleb128 0xb
 11890 00b7 3B       		.uleb128 0x3b
 11891 00b8 0B       		.uleb128 0xb
 11892 00b9 49       		.uleb128 0x49
 11893 00ba 13       		.uleb128 0x13
 11894 00bb 00       		.byte	0
 11895 00bc 00       		.byte	0
 11896 00bd 10       		.uleb128 0x10
 11897 00be 2E       		.uleb128 0x2e
 11898 00bf 01       		.byte	0x1
 11899 00c0 3F       		.uleb128 0x3f
 11900 00c1 19       		.uleb128 0x19
 11901 00c2 03       		.uleb128 0x3
 11902 00c3 0E       		.uleb128 0xe
 11903 00c4 3A       		.uleb128 0x3a
 11904 00c5 0B       		.uleb128 0xb
 11905 00c6 3B       		.uleb128 0x3b
 11906 00c7 0B       		.uleb128 0xb
 11907 00c8 27       		.uleb128 0x27
 11908 00c9 19       		.uleb128 0x19
 11909 00ca 11       		.uleb128 0x11
 11910 00cb 01       		.uleb128 0x1
 11911 00cc 12       		.uleb128 0x12
 11912 00cd 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 254


 11913 00ce 40       		.uleb128 0x40
 11914 00cf 18       		.uleb128 0x18
 11915 00d0 9642     		.uleb128 0x2116
 11916 00d2 19       		.uleb128 0x19
 11917 00d3 01       		.uleb128 0x1
 11918 00d4 13       		.uleb128 0x13
 11919 00d5 00       		.byte	0
 11920 00d6 00       		.byte	0
 11921 00d7 11       		.uleb128 0x11
 11922 00d8 0B       		.uleb128 0xb
 11923 00d9 01       		.byte	0x1
 11924 00da 11       		.uleb128 0x11
 11925 00db 01       		.uleb128 0x1
 11926 00dc 12       		.uleb128 0x12
 11927 00dd 06       		.uleb128 0x6
 11928 00de 00       		.byte	0
 11929 00df 00       		.byte	0
 11930 00e0 12       		.uleb128 0x12
 11931 00e1 34       		.uleb128 0x34
 11932 00e2 00       		.byte	0
 11933 00e3 03       		.uleb128 0x3
 11934 00e4 08       		.uleb128 0x8
 11935 00e5 3A       		.uleb128 0x3a
 11936 00e6 0B       		.uleb128 0xb
 11937 00e7 3B       		.uleb128 0x3b
 11938 00e8 0B       		.uleb128 0xb
 11939 00e9 49       		.uleb128 0x49
 11940 00ea 13       		.uleb128 0x13
 11941 00eb 02       		.uleb128 0x2
 11942 00ec 18       		.uleb128 0x18
 11943 00ed 00       		.byte	0
 11944 00ee 00       		.byte	0
 11945 00ef 13       		.uleb128 0x13
 11946 00f0 2E       		.uleb128 0x2e
 11947 00f1 00       		.byte	0
 11948 00f2 3F       		.uleb128 0x3f
 11949 00f3 19       		.uleb128 0x19
 11950 00f4 03       		.uleb128 0x3
 11951 00f5 0E       		.uleb128 0xe
 11952 00f6 3A       		.uleb128 0x3a
 11953 00f7 0B       		.uleb128 0xb
 11954 00f8 3B       		.uleb128 0x3b
 11955 00f9 0B       		.uleb128 0xb
 11956 00fa 27       		.uleb128 0x27
 11957 00fb 19       		.uleb128 0x19
 11958 00fc 11       		.uleb128 0x11
 11959 00fd 01       		.uleb128 0x1
 11960 00fe 12       		.uleb128 0x12
 11961 00ff 06       		.uleb128 0x6
 11962 0100 40       		.uleb128 0x40
 11963 0101 18       		.uleb128 0x18
 11964 0102 9642     		.uleb128 0x2116
 11965 0104 19       		.uleb128 0x19
 11966 0105 00       		.byte	0
 11967 0106 00       		.byte	0
 11968 0107 14       		.uleb128 0x14
 11969 0108 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 255


 11970 0109 00       		.byte	0
 11971 010a 3F       		.uleb128 0x3f
 11972 010b 19       		.uleb128 0x19
 11973 010c 03       		.uleb128 0x3
 11974 010d 0E       		.uleb128 0xe
 11975 010e 3A       		.uleb128 0x3a
 11976 010f 0B       		.uleb128 0xb
 11977 0110 3B       		.uleb128 0x3b
 11978 0111 05       		.uleb128 0x5
 11979 0112 27       		.uleb128 0x27
 11980 0113 19       		.uleb128 0x19
 11981 0114 11       		.uleb128 0x11
 11982 0115 01       		.uleb128 0x1
 11983 0116 12       		.uleb128 0x12
 11984 0117 06       		.uleb128 0x6
 11985 0118 40       		.uleb128 0x40
 11986 0119 18       		.uleb128 0x18
 11987 011a 9642     		.uleb128 0x2116
 11988 011c 19       		.uleb128 0x19
 11989 011d 00       		.byte	0
 11990 011e 00       		.byte	0
 11991 011f 15       		.uleb128 0x15
 11992 0120 2E       		.uleb128 0x2e
 11993 0121 01       		.byte	0x1
 11994 0122 3F       		.uleb128 0x3f
 11995 0123 19       		.uleb128 0x19
 11996 0124 03       		.uleb128 0x3
 11997 0125 0E       		.uleb128 0xe
 11998 0126 3A       		.uleb128 0x3a
 11999 0127 0B       		.uleb128 0xb
 12000 0128 3B       		.uleb128 0x3b
 12001 0129 05       		.uleb128 0x5
 12002 012a 27       		.uleb128 0x27
 12003 012b 19       		.uleb128 0x19
 12004 012c 49       		.uleb128 0x49
 12005 012d 13       		.uleb128 0x13
 12006 012e 11       		.uleb128 0x11
 12007 012f 01       		.uleb128 0x1
 12008 0130 12       		.uleb128 0x12
 12009 0131 06       		.uleb128 0x6
 12010 0132 40       		.uleb128 0x40
 12011 0133 18       		.uleb128 0x18
 12012 0134 9642     		.uleb128 0x2116
 12013 0136 19       		.uleb128 0x19
 12014 0137 01       		.uleb128 0x1
 12015 0138 13       		.uleb128 0x13
 12016 0139 00       		.byte	0
 12017 013a 00       		.byte	0
 12018 013b 16       		.uleb128 0x16
 12019 013c 05       		.uleb128 0x5
 12020 013d 00       		.byte	0
 12021 013e 03       		.uleb128 0x3
 12022 013f 08       		.uleb128 0x8
 12023 0140 3A       		.uleb128 0x3a
 12024 0141 0B       		.uleb128 0xb
 12025 0142 3B       		.uleb128 0x3b
 12026 0143 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 256


 12027 0144 49       		.uleb128 0x49
 12028 0145 13       		.uleb128 0x13
 12029 0146 02       		.uleb128 0x2
 12030 0147 18       		.uleb128 0x18
 12031 0148 00       		.byte	0
 12032 0149 00       		.byte	0
 12033 014a 17       		.uleb128 0x17
 12034 014b 34       		.uleb128 0x34
 12035 014c 00       		.byte	0
 12036 014d 03       		.uleb128 0x3
 12037 014e 0E       		.uleb128 0xe
 12038 014f 3A       		.uleb128 0x3a
 12039 0150 0B       		.uleb128 0xb
 12040 0151 3B       		.uleb128 0x3b
 12041 0152 05       		.uleb128 0x5
 12042 0153 49       		.uleb128 0x49
 12043 0154 13       		.uleb128 0x13
 12044 0155 02       		.uleb128 0x2
 12045 0156 18       		.uleb128 0x18
 12046 0157 00       		.byte	0
 12047 0158 00       		.byte	0
 12048 0159 18       		.uleb128 0x18
 12049 015a 05       		.uleb128 0x5
 12050 015b 00       		.byte	0
 12051 015c 03       		.uleb128 0x3
 12052 015d 0E       		.uleb128 0xe
 12053 015e 3A       		.uleb128 0x3a
 12054 015f 0B       		.uleb128 0xb
 12055 0160 3B       		.uleb128 0x3b
 12056 0161 05       		.uleb128 0x5
 12057 0162 49       		.uleb128 0x49
 12058 0163 13       		.uleb128 0x13
 12059 0164 02       		.uleb128 0x2
 12060 0165 18       		.uleb128 0x18
 12061 0166 00       		.byte	0
 12062 0167 00       		.byte	0
 12063 0168 19       		.uleb128 0x19
 12064 0169 34       		.uleb128 0x34
 12065 016a 00       		.byte	0
 12066 016b 03       		.uleb128 0x3
 12067 016c 08       		.uleb128 0x8
 12068 016d 3A       		.uleb128 0x3a
 12069 016e 0B       		.uleb128 0xb
 12070 016f 3B       		.uleb128 0x3b
 12071 0170 05       		.uleb128 0x5
 12072 0171 49       		.uleb128 0x49
 12073 0172 13       		.uleb128 0x13
 12074 0173 02       		.uleb128 0x2
 12075 0174 18       		.uleb128 0x18
 12076 0175 00       		.byte	0
 12077 0176 00       		.byte	0
 12078 0177 1A       		.uleb128 0x1a
 12079 0178 2E       		.uleb128 0x2e
 12080 0179 01       		.byte	0x1
 12081 017a 3F       		.uleb128 0x3f
 12082 017b 19       		.uleb128 0x19
 12083 017c 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 257


 12084 017d 08       		.uleb128 0x8
 12085 017e 3A       		.uleb128 0x3a
 12086 017f 0B       		.uleb128 0xb
 12087 0180 3B       		.uleb128 0x3b
 12088 0181 05       		.uleb128 0x5
 12089 0182 27       		.uleb128 0x27
 12090 0183 19       		.uleb128 0x19
 12091 0184 49       		.uleb128 0x49
 12092 0185 13       		.uleb128 0x13
 12093 0186 11       		.uleb128 0x11
 12094 0187 01       		.uleb128 0x1
 12095 0188 12       		.uleb128 0x12
 12096 0189 06       		.uleb128 0x6
 12097 018a 40       		.uleb128 0x40
 12098 018b 18       		.uleb128 0x18
 12099 018c 9642     		.uleb128 0x2116
 12100 018e 19       		.uleb128 0x19
 12101 018f 01       		.uleb128 0x1
 12102 0190 13       		.uleb128 0x13
 12103 0191 00       		.byte	0
 12104 0192 00       		.byte	0
 12105 0193 1B       		.uleb128 0x1b
 12106 0194 2E       		.uleb128 0x2e
 12107 0195 00       		.byte	0
 12108 0196 3F       		.uleb128 0x3f
 12109 0197 19       		.uleb128 0x19
 12110 0198 03       		.uleb128 0x3
 12111 0199 0E       		.uleb128 0xe
 12112 019a 3A       		.uleb128 0x3a
 12113 019b 0B       		.uleb128 0xb
 12114 019c 3B       		.uleb128 0x3b
 12115 019d 05       		.uleb128 0x5
 12116 019e 11       		.uleb128 0x11
 12117 019f 01       		.uleb128 0x1
 12118 01a0 12       		.uleb128 0x12
 12119 01a1 06       		.uleb128 0x6
 12120 01a2 40       		.uleb128 0x40
 12121 01a3 18       		.uleb128 0x18
 12122 01a4 9742     		.uleb128 0x2117
 12123 01a6 19       		.uleb128 0x19
 12124 01a7 00       		.byte	0
 12125 01a8 00       		.byte	0
 12126 01a9 1C       		.uleb128 0x1c
 12127 01aa 2E       		.uleb128 0x2e
 12128 01ab 01       		.byte	0x1
 12129 01ac 3F       		.uleb128 0x3f
 12130 01ad 19       		.uleb128 0x19
 12131 01ae 03       		.uleb128 0x3
 12132 01af 0E       		.uleb128 0xe
 12133 01b0 3A       		.uleb128 0x3a
 12134 01b1 0B       		.uleb128 0xb
 12135 01b2 3B       		.uleb128 0x3b
 12136 01b3 05       		.uleb128 0x5
 12137 01b4 11       		.uleb128 0x11
 12138 01b5 01       		.uleb128 0x1
 12139 01b6 12       		.uleb128 0x12
 12140 01b7 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 258


 12141 01b8 40       		.uleb128 0x40
 12142 01b9 18       		.uleb128 0x18
 12143 01ba 9642     		.uleb128 0x2116
 12144 01bc 19       		.uleb128 0x19
 12145 01bd 01       		.uleb128 0x1
 12146 01be 13       		.uleb128 0x13
 12147 01bf 00       		.byte	0
 12148 01c0 00       		.byte	0
 12149 01c1 1D       		.uleb128 0x1d
 12150 01c2 0B       		.uleb128 0xb
 12151 01c3 01       		.byte	0x1
 12152 01c4 11       		.uleb128 0x11
 12153 01c5 01       		.uleb128 0x1
 12154 01c6 12       		.uleb128 0x12
 12155 01c7 06       		.uleb128 0x6
 12156 01c8 01       		.uleb128 0x1
 12157 01c9 13       		.uleb128 0x13
 12158 01ca 00       		.byte	0
 12159 01cb 00       		.byte	0
 12160 01cc 1E       		.uleb128 0x1e
 12161 01cd 2E       		.uleb128 0x2e
 12162 01ce 00       		.byte	0
 12163 01cf 3F       		.uleb128 0x3f
 12164 01d0 19       		.uleb128 0x19
 12165 01d1 03       		.uleb128 0x3
 12166 01d2 0E       		.uleb128 0xe
 12167 01d3 3A       		.uleb128 0x3a
 12168 01d4 0B       		.uleb128 0xb
 12169 01d5 3B       		.uleb128 0x3b
 12170 01d6 05       		.uleb128 0x5
 12171 01d7 11       		.uleb128 0x11
 12172 01d8 01       		.uleb128 0x1
 12173 01d9 12       		.uleb128 0x12
 12174 01da 06       		.uleb128 0x6
 12175 01db 40       		.uleb128 0x40
 12176 01dc 18       		.uleb128 0x18
 12177 01dd 9642     		.uleb128 0x2116
 12178 01df 19       		.uleb128 0x19
 12179 01e0 00       		.byte	0
 12180 01e1 00       		.byte	0
 12181 01e2 1F       		.uleb128 0x1f
 12182 01e3 2E       		.uleb128 0x2e
 12183 01e4 01       		.byte	0x1
 12184 01e5 3F       		.uleb128 0x3f
 12185 01e6 19       		.uleb128 0x19
 12186 01e7 03       		.uleb128 0x3
 12187 01e8 0E       		.uleb128 0xe
 12188 01e9 3A       		.uleb128 0x3a
 12189 01ea 0B       		.uleb128 0xb
 12190 01eb 3B       		.uleb128 0x3b
 12191 01ec 05       		.uleb128 0x5
 12192 01ed 27       		.uleb128 0x27
 12193 01ee 19       		.uleb128 0x19
 12194 01ef 11       		.uleb128 0x11
 12195 01f0 01       		.uleb128 0x1
 12196 01f1 12       		.uleb128 0x12
 12197 01f2 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 259


 12198 01f3 40       		.uleb128 0x40
 12199 01f4 18       		.uleb128 0x18
 12200 01f5 9642     		.uleb128 0x2116
 12201 01f7 19       		.uleb128 0x19
 12202 01f8 01       		.uleb128 0x1
 12203 01f9 13       		.uleb128 0x13
 12204 01fa 00       		.byte	0
 12205 01fb 00       		.byte	0
 12206 01fc 20       		.uleb128 0x20
 12207 01fd 0F       		.uleb128 0xf
 12208 01fe 00       		.byte	0
 12209 01ff 0B       		.uleb128 0xb
 12210 0200 0B       		.uleb128 0xb
 12211 0201 49       		.uleb128 0x49
 12212 0202 13       		.uleb128 0x13
 12213 0203 00       		.byte	0
 12214 0204 00       		.byte	0
 12215 0205 21       		.uleb128 0x21
 12216 0206 34       		.uleb128 0x34
 12217 0207 00       		.byte	0
 12218 0208 03       		.uleb128 0x3
 12219 0209 0E       		.uleb128 0xe
 12220 020a 3A       		.uleb128 0x3a
 12221 020b 0B       		.uleb128 0xb
 12222 020c 3B       		.uleb128 0x3b
 12223 020d 0B       		.uleb128 0xb
 12224 020e 49       		.uleb128 0x49
 12225 020f 13       		.uleb128 0x13
 12226 0210 02       		.uleb128 0x2
 12227 0211 18       		.uleb128 0x18
 12228 0212 00       		.byte	0
 12229 0213 00       		.byte	0
 12230 0214 22       		.uleb128 0x22
 12231 0215 34       		.uleb128 0x34
 12232 0216 00       		.byte	0
 12233 0217 03       		.uleb128 0x3
 12234 0218 0E       		.uleb128 0xe
 12235 0219 3A       		.uleb128 0x3a
 12236 021a 0B       		.uleb128 0xb
 12237 021b 3B       		.uleb128 0x3b
 12238 021c 0B       		.uleb128 0xb
 12239 021d 49       		.uleb128 0x49
 12240 021e 13       		.uleb128 0x13
 12241 021f 3F       		.uleb128 0x3f
 12242 0220 19       		.uleb128 0x19
 12243 0221 3C       		.uleb128 0x3c
 12244 0222 19       		.uleb128 0x19
 12245 0223 00       		.byte	0
 12246 0224 00       		.byte	0
 12247 0225 23       		.uleb128 0x23
 12248 0226 21       		.uleb128 0x21
 12249 0227 00       		.byte	0
 12250 0228 49       		.uleb128 0x49
 12251 0229 13       		.uleb128 0x13
 12252 022a 2F       		.uleb128 0x2f
 12253 022b 05       		.uleb128 0x5
 12254 022c 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 260


 12255 022d 00       		.byte	0
 12256 022e 24       		.uleb128 0x24
 12257 022f 26       		.uleb128 0x26
 12258 0230 00       		.byte	0
 12259 0231 49       		.uleb128 0x49
 12260 0232 13       		.uleb128 0x13
 12261 0233 00       		.byte	0
 12262 0234 00       		.byte	0
 12263 0235 25       		.uleb128 0x25
 12264 0236 34       		.uleb128 0x34
 12265 0237 00       		.byte	0
 12266 0238 03       		.uleb128 0x3
 12267 0239 0E       		.uleb128 0xe
 12268 023a 3A       		.uleb128 0x3a
 12269 023b 0B       		.uleb128 0xb
 12270 023c 3B       		.uleb128 0x3b
 12271 023d 0B       		.uleb128 0xb
 12272 023e 49       		.uleb128 0x49
 12273 023f 13       		.uleb128 0x13
 12274 0240 3F       		.uleb128 0x3f
 12275 0241 19       		.uleb128 0x19
 12276 0242 02       		.uleb128 0x2
 12277 0243 18       		.uleb128 0x18
 12278 0244 00       		.byte	0
 12279 0245 00       		.byte	0
 12280 0246 26       		.uleb128 0x26
 12281 0247 34       		.uleb128 0x34
 12282 0248 00       		.byte	0
 12283 0249 03       		.uleb128 0x3
 12284 024a 0E       		.uleb128 0xe
 12285 024b 3A       		.uleb128 0x3a
 12286 024c 0B       		.uleb128 0xb
 12287 024d 3B       		.uleb128 0x3b
 12288 024e 05       		.uleb128 0x5
 12289 024f 49       		.uleb128 0x49
 12290 0250 13       		.uleb128 0x13
 12291 0251 3F       		.uleb128 0x3f
 12292 0252 19       		.uleb128 0x19
 12293 0253 3C       		.uleb128 0x3c
 12294 0254 19       		.uleb128 0x19
 12295 0255 00       		.byte	0
 12296 0256 00       		.byte	0
 12297 0257 27       		.uleb128 0x27
 12298 0258 34       		.uleb128 0x34
 12299 0259 00       		.byte	0
 12300 025a 03       		.uleb128 0x3
 12301 025b 0E       		.uleb128 0xe
 12302 025c 3A       		.uleb128 0x3a
 12303 025d 0B       		.uleb128 0xb
 12304 025e 3B       		.uleb128 0x3b
 12305 025f 05       		.uleb128 0x5
 12306 0260 49       		.uleb128 0x49
 12307 0261 13       		.uleb128 0x13
 12308 0262 3F       		.uleb128 0x3f
 12309 0263 19       		.uleb128 0x19
 12310 0264 02       		.uleb128 0x2
 12311 0265 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 261


 12312 0266 00       		.byte	0
 12313 0267 00       		.byte	0
 12314 0268 28       		.uleb128 0x28
 12315 0269 34       		.uleb128 0x34
 12316 026a 00       		.byte	0
 12317 026b 03       		.uleb128 0x3
 12318 026c 08       		.uleb128 0x8
 12319 026d 3A       		.uleb128 0x3a
 12320 026e 0B       		.uleb128 0xb
 12321 026f 3B       		.uleb128 0x3b
 12322 0270 0B       		.uleb128 0xb
 12323 0271 49       		.uleb128 0x49
 12324 0272 13       		.uleb128 0x13
 12325 0273 3F       		.uleb128 0x3f
 12326 0274 19       		.uleb128 0x19
 12327 0275 02       		.uleb128 0x2
 12328 0276 18       		.uleb128 0x18
 12329 0277 00       		.byte	0
 12330 0278 00       		.byte	0
 12331 0279 00       		.byte	0
 12332              		.section	.debug_aranges,"",%progbits
 12333 0000 04010000 		.4byte	0x104
 12334 0004 0200     		.2byte	0x2
 12335 0006 00000000 		.4byte	.Ldebug_info0
 12336 000a 04       		.byte	0x4
 12337 000b 00       		.byte	0
 12338 000c 0000     		.2byte	0
 12339 000e 0000     		.2byte	0
 12340 0010 00000000 		.4byte	.LFB64
 12341 0014 74010000 		.4byte	.LFE64-.LFB64
 12342 0018 00000000 		.4byte	.LFB65
 12343 001c 9C000000 		.4byte	.LFE65-.LFB65
 12344 0020 00000000 		.4byte	.LFB66
 12345 0024 14000000 		.4byte	.LFE66-.LFB66
 12346 0028 00000000 		.4byte	.LFB67
 12347 002c 7C000000 		.4byte	.LFE67-.LFB67
 12348 0030 00000000 		.4byte	.LFB68
 12349 0034 58000000 		.4byte	.LFE68-.LFB68
 12350 0038 00000000 		.4byte	.LFB69
 12351 003c 68000000 		.4byte	.LFE69-.LFB69
 12352 0040 00000000 		.4byte	.LFB70
 12353 0044 4C000000 		.4byte	.LFE70-.LFB70
 12354 0048 00000000 		.4byte	.LFB71
 12355 004c 46000000 		.4byte	.LFE71-.LFB71
 12356 0050 00000000 		.4byte	.LFB72
 12357 0054 56000000 		.4byte	.LFE72-.LFB72
 12358 0058 00000000 		.4byte	.LFB73
 12359 005c 0C000000 		.4byte	.LFE73-.LFB73
 12360 0060 00000000 		.4byte	.LFB74
 12361 0064 0C010000 		.4byte	.LFE74-.LFB74
 12362 0068 00000000 		.4byte	.LFB75
 12363 006c 501A0000 		.4byte	.LFE75-.LFB75
 12364 0070 00000000 		.4byte	.LFB76
 12365 0074 70000000 		.4byte	.LFE76-.LFB76
 12366 0078 00000000 		.4byte	.LFB77
 12367 007c 70010000 		.4byte	.LFE77-.LFB77
 12368 0080 00000000 		.4byte	.LFB78
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 262


 12369 0084 E0000000 		.4byte	.LFE78-.LFB78
 12370 0088 00000000 		.4byte	.LFB79
 12371 008c E0000000 		.4byte	.LFE79-.LFB79
 12372 0090 00000000 		.4byte	.LFB80
 12373 0094 30000000 		.4byte	.LFE80-.LFB80
 12374 0098 00000000 		.4byte	.LFB81
 12375 009c E8000000 		.4byte	.LFE81-.LFB81
 12376 00a0 00000000 		.4byte	.LFB82
 12377 00a4 54000000 		.4byte	.LFE82-.LFB82
 12378 00a8 00000000 		.4byte	.LFB83
 12379 00ac C4000000 		.4byte	.LFE83-.LFB83
 12380 00b0 00000000 		.4byte	.LFB84
 12381 00b4 98000000 		.4byte	.LFE84-.LFB84
 12382 00b8 00000000 		.4byte	.LFB85
 12383 00bc D4000000 		.4byte	.LFE85-.LFB85
 12384 00c0 00000000 		.4byte	.LFB86
 12385 00c4 1C000000 		.4byte	.LFE86-.LFB86
 12386 00c8 00000000 		.4byte	.LFB87
 12387 00cc 68000000 		.4byte	.LFE87-.LFB87
 12388 00d0 00000000 		.4byte	.LFB88
 12389 00d4 68000000 		.4byte	.LFE88-.LFB88
 12390 00d8 00000000 		.4byte	.LFB89
 12391 00dc 68000000 		.4byte	.LFE89-.LFB89
 12392 00e0 00000000 		.4byte	.LFB90
 12393 00e4 6C000000 		.4byte	.LFE90-.LFB90
 12394 00e8 00000000 		.4byte	.LFB91
 12395 00ec 64000000 		.4byte	.LFE91-.LFB91
 12396 00f0 00000000 		.4byte	.LFB92
 12397 00f4 68080000 		.4byte	.LFE92-.LFB92
 12398 00f8 00000000 		.4byte	.LFB93
 12399 00fc 3C010000 		.4byte	.LFE93-.LFB93
 12400 0100 00000000 		.4byte	0
 12401 0104 00000000 		.4byte	0
 12402              		.section	.debug_ranges,"",%progbits
 12403              	.Ldebug_ranges0:
 12404 0000 00000000 		.4byte	.LFB64
 12405 0004 74010000 		.4byte	.LFE64
 12406 0008 00000000 		.4byte	.LFB65
 12407 000c 9C000000 		.4byte	.LFE65
 12408 0010 00000000 		.4byte	.LFB66
 12409 0014 14000000 		.4byte	.LFE66
 12410 0018 00000000 		.4byte	.LFB67
 12411 001c 7C000000 		.4byte	.LFE67
 12412 0020 00000000 		.4byte	.LFB68
 12413 0024 58000000 		.4byte	.LFE68
 12414 0028 00000000 		.4byte	.LFB69
 12415 002c 68000000 		.4byte	.LFE69
 12416 0030 00000000 		.4byte	.LFB70
 12417 0034 4C000000 		.4byte	.LFE70
 12418 0038 00000000 		.4byte	.LFB71
 12419 003c 46000000 		.4byte	.LFE71
 12420 0040 00000000 		.4byte	.LFB72
 12421 0044 56000000 		.4byte	.LFE72
 12422 0048 00000000 		.4byte	.LFB73
 12423 004c 0C000000 		.4byte	.LFE73
 12424 0050 00000000 		.4byte	.LFB74
 12425 0054 0C010000 		.4byte	.LFE74
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 263


 12426 0058 00000000 		.4byte	.LFB75
 12427 005c 501A0000 		.4byte	.LFE75
 12428 0060 00000000 		.4byte	.LFB76
 12429 0064 70000000 		.4byte	.LFE76
 12430 0068 00000000 		.4byte	.LFB77
 12431 006c 70010000 		.4byte	.LFE77
 12432 0070 00000000 		.4byte	.LFB78
 12433 0074 E0000000 		.4byte	.LFE78
 12434 0078 00000000 		.4byte	.LFB79
 12435 007c E0000000 		.4byte	.LFE79
 12436 0080 00000000 		.4byte	.LFB80
 12437 0084 30000000 		.4byte	.LFE80
 12438 0088 00000000 		.4byte	.LFB81
 12439 008c E8000000 		.4byte	.LFE81
 12440 0090 00000000 		.4byte	.LFB82
 12441 0094 54000000 		.4byte	.LFE82
 12442 0098 00000000 		.4byte	.LFB83
 12443 009c C4000000 		.4byte	.LFE83
 12444 00a0 00000000 		.4byte	.LFB84
 12445 00a4 98000000 		.4byte	.LFE84
 12446 00a8 00000000 		.4byte	.LFB85
 12447 00ac D4000000 		.4byte	.LFE85
 12448 00b0 00000000 		.4byte	.LFB86
 12449 00b4 1C000000 		.4byte	.LFE86
 12450 00b8 00000000 		.4byte	.LFB87
 12451 00bc 68000000 		.4byte	.LFE87
 12452 00c0 00000000 		.4byte	.LFB88
 12453 00c4 68000000 		.4byte	.LFE88
 12454 00c8 00000000 		.4byte	.LFB89
 12455 00cc 68000000 		.4byte	.LFE89
 12456 00d0 00000000 		.4byte	.LFB90
 12457 00d4 6C000000 		.4byte	.LFE90
 12458 00d8 00000000 		.4byte	.LFB91
 12459 00dc 64000000 		.4byte	.LFE91
 12460 00e0 00000000 		.4byte	.LFB92
 12461 00e4 68080000 		.4byte	.LFE92
 12462 00e8 00000000 		.4byte	.LFB93
 12463 00ec 3C010000 		.4byte	.LFE93
 12464 00f0 00000000 		.4byte	0
 12465 00f4 00000000 		.4byte	0
 12466              		.section	.debug_line,"",%progbits
 12467              	.Ldebug_line0:
 12468 0000 4F0B0000 		.section	.debug_str,"MS",%progbits,1
 12468      02009B01 
 12468      00000201 
 12468      FB0E0D00 
 12468      01010101 
 12469              	.LASF157:
 12470 0000 70726573 		.ascii	"presetArraySection\000"
 12470      65744172 
 12470      72617953 
 12470      65637469 
 12470      6F6E00
 12471              	.LASF153:
 12472 0013 70726573 		.ascii	"presetArray\000"
 12472      65744172 
 12472      72617900 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 264


 12473              	.LASF297:
 12474 001f 66697273 		.ascii	"firstSysex\000"
 12474      74537973 
 12474      657800
 12475              	.LASF28:
 12476 002a 73697A65 		.ascii	"sizetype\000"
 12476      74797065 
 12476      00
 12477              	.LASF162:
 12478 0033 73656E64 		.ascii	"sendingMessage\000"
 12478      696E674D 
 12478      65737361 
 12478      676500
 12479              	.LASF247:
 12480 0042 70726576 		.ascii	"prev_processed_volumePedal\000"
 12480      5F70726F 
 12480      63657373 
 12480      65645F76 
 12480      6F6C756D 
 12481              	.LASF85:
 12482 005d 74656D70 		.ascii	"tempangle\000"
 12482      616E676C 
 12482      6500
 12483              	.LASF217:
 12484 0067 6E657744 		.ascii	"newDataFlag2\000"
 12484      61746146 
 12484      6C616732 
 12484      00
 12485              	.LASF254:
 12486 0074 6D616372 		.ascii	"macroNamesArray\000"
 12486      6F4E616D 
 12486      65734172 
 12486      72617900 
 12487              	.LASF38:
 12488 0084 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 12488      4D5F4545 
 12488      50524F4D 
 12488      5F535543 
 12488      43455353 
 12489              	.LASF17:
 12490 0099 696E7433 		.ascii	"int32_t\000"
 12490      325F7400 
 12491              	.LASF144:
 12492 00a1 456D5F45 		.ascii	"Em_EEPROM_context\000"
 12492      4550524F 
 12492      4D5F636F 
 12492      6E746578 
 12492      7400
 12493              	.LASF47:
 12494 00b3 54686972 		.ascii	"ThirdLine\000"
 12494      644C696E 
 12494      6500
 12495              	.LASF108:
 12496 00bd 6E6F7465 		.ascii	"noteEvent\000"
 12496      4576656E 
 12496      7400
 12497              	.LASF226:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 265


 12498 00c7 53504932 		.ascii	"SPI2errorflag\000"
 12498      6572726F 
 12498      72666C61 
 12498      6700
 12499              	.LASF21:
 12500 00d5 75696E74 		.ascii	"uint32\000"
 12500      333200
 12501              	.LASF90:
 12502 00dc 77686963 		.ascii	"whichMacroToStoreName\000"
 12502      684D6163 
 12502      726F546F 
 12502      53746F72 
 12502      654E616D 
 12503              	.LASF121:
 12504 00f2 43437661 		.ascii	"CCval\000"
 12504      6C00
 12505              	.LASF168:
 12506 00f8 6E756D4D 		.ascii	"numMappings\000"
 12506      61707069 
 12506      6E677300 
 12507              	.LASF148:
 12508 0104 49324362 		.ascii	"I2Cbuff1\000"
 12508      75666631 
 12508      00
 12509              	.LASF236:
 12510 010d 49324362 		.ascii	"I2Cbuff2\000"
 12510      75666632 
 12510      00
 12511              	.LASF238:
 12512 0116 6D75785F 		.ascii	"mux_states\000"
 12512      73746174 
 12512      657300
 12513              	.LASF134:
 12514 0121 74656D70 		.ascii	"tempLow\000"
 12514      4C6F7700 
 12515              	.LASF195:
 12516 0129 6E65636B 		.ascii	"necks\000"
 12516      7300
 12517              	.LASF186:
 12518 012f 6F637461 		.ascii	"octave\000"
 12518      766500
 12519              	.LASF49:
 12520 0136 4E696C4C 		.ascii	"NilLine\000"
 12520      696E6500 
 12521              	.LASF43:
 12522 013e 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 12522      6E5F656D 
 12522      5F656570 
 12522      726F6D5F 
 12522      73746174 
 12523              	.LASF287:
 12524 0157 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 12524      6F4F4C45 
 12524      44576169 
 12524      74696E67 
 12524      546F5365 
 12525              	.LASF241:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 266


 12526 016e 70656461 		.ascii	"pedals_high\000"
 12526      6C735F68 
 12526      69676800 
 12527              	.LASF96:
 12528 017a 6E627974 		.ascii	"nbytes\000"
 12528      657300
 12529              	.LASF274:
 12530 0181 636F7065 		.ascii	"copedentNamesArray\000"
 12530      64656E74 
 12530      4E616D65 
 12530      73417272 
 12530      617900
 12531              	.LASF166:
 12532 0194 76616C73 		.ascii	"valsCount\000"
 12532      436F756E 
 12532      7400
 12533              	.LASF184:
 12534 019e 74656D70 		.ascii	"temper\000"
 12534      657200
 12535              	.LASF120:
 12536 01a5 43436E75 		.ascii	"CCnum\000"
 12536      6D00
 12537              	.LASF40:
 12538 01ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 12538      4D5F4545 
 12538      50524F4D 
 12538      5F424144 
 12538      5F434845 
 12539              	.LASF36:
 12540 01c5 75736572 		.ascii	"userFlashStartAddr\000"
 12540      466C6173 
 12540      68537461 
 12540      72744164 
 12540      647200
 12541              	.LASF30:
 12542 01d8 6E756D62 		.ascii	"numberOfRows\000"
 12542      65724F66 
 12542      526F7773 
 12542      00
 12543              	.LASF128:
 12544 01e5 696E7456 		.ascii	"intVal\000"
 12544      616C00
 12545              	.LASF70:
 12546 01ec 69737461 		.ascii	"istart\000"
 12546      727400
 12547              	.LASF74:
 12548 01f3 70656461 		.ascii	"pedalDiff\000"
 12548      6C446966 
 12548      6600
 12549              	.LASF125:
 12550 01fd 74686556 		.ascii	"theVal\000"
 12550      616C00
 12551              	.LASF34:
 12552 0204 72656475 		.ascii	"redundantCopy\000"
 12552      6E64616E 
 12552      74436F70 
 12552      7900
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 267


 12553              	.LASF2:
 12554 0212 5F5F7569 		.ascii	"__uint8_t\000"
 12554      6E74385F 
 12554      7400
 12555              	.LASF67:
 12556 021c 616C7068 		.ascii	"alpha\000"
 12556      6100
 12557              	.LASF57:
 12558 0222 70726573 		.ascii	"presetEnd\000"
 12558      6574456E 
 12558      6400
 12559              	.LASF235:
 12560 022c 62617243 		.ascii	"barCount\000"
 12560      6F756E74 
 12560      00
 12561              	.LASF156:
 12562 0235 73656E64 		.ascii	"sendMessageEnd\000"
 12562      4D657373 
 12562      61676545 
 12562      6E6400
 12563              	.LASF252:
 12564 0244 70726573 		.ascii	"presetNumberToLoad\000"
 12564      65744E75 
 12564      6D626572 
 12564      546F4C6F 
 12564      616400
 12565              	.LASF262:
 12566 0257 766F6963 		.ascii	"voice\000"
 12566      6500
 12567              	.LASF206:
 12568 025d 73747269 		.ascii	"strings\000"
 12568      6E677300 
 12569              	.LASF8:
 12570 0265 6C6F6E67 		.ascii	"long int\000"
 12570      20696E74 
 12570      00
 12571              	.LASF164:
 12572 026e 63757272 		.ascii	"currentFloat\000"
 12572      656E7446 
 12572      6C6F6174 
 12572      00
 12573              	.LASF253:
 12574 027b 70726573 		.ascii	"presetLoadedResponse\000"
 12574      65744C6F 
 12574      61646564 
 12574      52657370 
 12574      6F6E7365 
 12575              	.LASF154:
 12576 0290 70726573 		.ascii	"presetNumberToWrite\000"
 12576      65744E75 
 12576      6D626572 
 12576      546F5772 
 12576      69746500 
 12577              	.LASF89:
 12578 02a4 77686963 		.ascii	"whichPresetToStoreName\000"
 12578      68507265 
 12578      73657454 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 268


 12578      6F53746F 
 12578      72654E61 
 12579              	.LASF251:
 12580 02bb 70726573 		.ascii	"presetNamesArray\000"
 12580      65744E61 
 12580      6D657341 
 12580      72726179 
 12580      00
 12581              	.LASF75:
 12582 02cc 6D61696E 		.ascii	"main\000"
 12582      00
 12583              	.LASF275:
 12584 02d1 70726576 		.ascii	"prevStringPitchBend\000"
 12584      53747269 
 12584      6E675069 
 12584      74636842 
 12584      656E6400 
 12585              	.LASF115:
 12586 02e5 4D494449 		.ascii	"MIDInoteNum\000"
 12586      6E6F7465 
 12586      4E756D00 
 12587              	.LASF123:
 12588 02f1 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 12588      4D494449 
 12588      416C6C4E 
 12588      6F746573 
 12588      4F666600 
 12589              	.LASF98:
 12590 0305 6572726F 		.ascii	"error\000"
 12590      7200
 12591              	.LASF46:
 12592 030b 5365636F 		.ascii	"SecondLine\000"
 12592      6E644C69 
 12592      6E6500
 12593              	.LASF255:
 12594 0316 66726574 		.ascii	"fretScaling\000"
 12594      5363616C 
 12594      696E6700 
 12595              	.LASF163:
 12596 0322 73656E64 		.ascii	"sendKnobs\000"
 12596      4B6E6F62 
 12596      7300
 12597              	.LASF51:
 12598 032c 70726573 		.ascii	"presetArraySectionState\000"
 12598      65744172 
 12598      72617953 
 12598      65637469 
 12598      6F6E5374 
 12599              	.LASF228:
 12600 0344 6B6E6F62 		.ascii	"knobs\000"
 12600      7300
 12601              	.LASF150:
 12602 034a 73797365 		.ascii	"sysexPointer\000"
 12602      78506F69 
 12602      6E746572 
 12602      00
 12603              	.LASF68:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 269


 12604 0357 6F6D416C 		.ascii	"omAlpha\000"
 12604      70686100 
 12605              	.LASF80:
 12606 035f 73747269 		.ascii	"stringStartLoc\000"
 12606      6E675374 
 12606      6172744C 
 12606      6F6300
 12607              	.LASF0:
 12608 036e 7369676E 		.ascii	"signed char\000"
 12608      65642063 
 12608      68617200 
 12609              	.LASF14:
 12610 037a 75696E74 		.ascii	"uint8_t\000"
 12610      385F7400 
 12611              	.LASF29:
 12612 0382 776C456E 		.ascii	"wlEndAddr\000"
 12612      64416464 
 12612      7200
 12613              	.LASF135:
 12614 038c 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 12614      63616C6C 
 12614      6261636B 
 12614      4C6F6361 
 12614      6C4D6964 
 12615              	.LASF107:
 12616 03a7 73706973 		.ascii	"spis_1_ss\000"
 12616      5F315F73 
 12616      7300
 12617              	.LASF41:
 12618 03b1 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 12618      4D5F4545 
 12618      50524F4D 
 12618      5F424144 
 12618      5F444154 
 12619              	.LASF50:
 12620 03c7 5F4F4C45 		.ascii	"_OLEDLine\000"
 12620      444C696E 
 12620      6500
 12621              	.LASF165:
 12622 03d1 6D617043 		.ascii	"mapCount\000"
 12622      6F756E74 
 12622      00
 12623              	.LASF132:
 12624 03da 74656D70 		.ascii	"tempIntVersion\000"
 12624      496E7456 
 12624      65727369 
 12624      6F6E00
 12625              	.LASF256:
 12626 03e9 70656461 		.ascii	"pedalRatios\000"
 12626      6C526174 
 12626      696F7300 
 12627              	.LASF1:
 12628 03f5 756E7369 		.ascii	"unsigned char\000"
 12628      676E6564 
 12628      20636861 
 12628      7200
 12629              	.LASF170:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 270


 12630 0403 76616C43 		.ascii	"valCheck\000"
 12630      6865636B 
 12630      00
 12631              	.LASF127:
 12632 040c 76616C73 		.ascii	"valsStart\000"
 12632      53746172 
 12632      7400
 12633              	.LASF77:
 12634 0416 636F7065 		.ascii	"coped\000"
 12634      6400
 12635              	.LASF196:
 12636 041c 72783143 		.ascii	"rx1Channel\000"
 12636      68616E6E 
 12636      656C00
 12637              	.LASF79:
 12638 0427 70656461 		.ascii	"pedalStartLoc\000"
 12638      6C537461 
 12638      72744C6F 
 12638      6300
 12639              	.LASF212:
 12640 0435 6E657744 		.ascii	"newDataFlag\000"
 12640      61746146 
 12640      6C616700 
 12641              	.LASF281:
 12642 0441 73747269 		.ascii	"stringOctave\000"
 12642      6E674F63 
 12642      74617665 
 12642      00
 12643              	.LASF105:
 12644 044e 5553425F 		.ascii	"USB_service\000"
 12644      73657276 
 12644      69636500 
 12645              	.LASF167:
 12646 045a 6D617043 		.ascii	"mapCountExpectation\000"
 12646      6F756E74 
 12646      45787065 
 12646      63746174 
 12646      696F6E00 
 12647              	.LASF62:
 12648 046e 74656D70 		.ascii	"tempmax\000"
 12648      6D617800 
 12649              	.LASF126:
 12650 0476 73746F70 		.ascii	"stoppingPoint\000"
 12650      70696E67 
 12650      506F696E 
 12650      7400
 12651              	.LASF69:
 12652 0484 76616C75 		.ascii	"value\000"
 12652      6500
 12653              	.LASF257:
 12654 048a 6C617374 		.ascii	"last_mux\000"
 12654      5F6D7578 
 12654      00
 12655              	.LASF266:
 12656 0493 656E636F 		.ascii	"encoderVal\000"
 12656      64657256 
 12656      616C00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 271


 12657              	.LASF118:
 12658 049e 70726573 		.ascii	"pressure\000"
 12658      73757265 
 12658      00
 12659              	.LASF288:
 12660 04a7 70726573 		.ascii	"presetAlreadyDisplayed\000"
 12660      6574416C 
 12660      72656164 
 12660      79446973 
 12660      706C6179 
 12661              	.LASF53:
 12662 04be 6D616372 		.ascii	"macroNames\000"
 12662      6F4E616D 
 12662      657300
 12663              	.LASF207:
 12664 04c9 70726576 		.ascii	"prevStrings\000"
 12664      53747269 
 12664      6E677300 
 12665              	.LASF24:
 12666 04d5 63686172 		.ascii	"char\000"
 12666      00
 12667              	.LASF138:
 12668 04da 65657072 		.ascii	"eepromArray\000"
 12668      6F6D4172 
 12668      72617900 
 12669              	.LASF194:
 12670 04e6 63757272 		.ascii	"currentCopedent\000"
 12670      656E7443 
 12670      6F706564 
 12670      656E7400 
 12671              	.LASF190:
 12672 04f6 72617741 		.ascii	"rawAngle\000"
 12672      6E676C65 
 12672      00
 12673              	.LASF63:
 12674 04ff 4C454146 		.ascii	"LEAF_clip\000"
 12674      5F636C69 
 12674      7000
 12675              	.LASF92:
 12676 0509 446D6154 		.ascii	"DmaTxConfiguration\000"
 12676      78436F6E 
 12676      66696775 
 12676      72617469 
 12676      6F6E00
 12677              	.LASF259:
 12678 051c 6E65636B 		.ascii	"neck\000"
 12678      00
 12679              	.LASF5:
 12680 0521 5F5F7569 		.ascii	"__uint16_t\000"
 12680      6E743136 
 12680      5F7400
 12681              	.LASF104:
 12682 052c 63686563 		.ascii	"checkUSB_Vbus\000"
 12682      6B555342 
 12682      5F566275 
 12682      7300
 12683              	.LASF234:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 272


 12684 053a 65657072 		.ascii	"eeprom_cnt\000"
 12684      6F6D5F63 
 12684      6E7400
 12685              	.LASF142:
 12686 0545 5553425F 		.ascii	"USB_midi_out_ep\000"
 12686      6D696469 
 12686      5F6F7574 
 12686      5F657000 
 12687              	.LASF86:
 12688 0555 74656D70 		.ascii	"tempPedal\000"
 12688      50656461 
 12688      6C00
 12689              	.LASF101:
 12690 055f 4932435F 		.ascii	"I2C_reset\000"
 12690      72657365 
 12690      7400
 12691              	.LASF267:
 12692 0569 656E636F 		.ascii	"encoderNum\000"
 12692      6465724E 
 12692      756D00
 12693              	.LASF264:
 12694 0574 6F637431 		.ascii	"oct1Up\000"
 12694      557000
 12695              	.LASF44:
 12696 057b 75696E74 		.ascii	"uint\000"
 12696      00
 12697              	.LASF192:
 12698 0580 6D696469 		.ascii	"midiOverflow\000"
 12698      4F766572 
 12698      666C6F77 
 12698      00
 12699              	.LASF102:
 12700 058d 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 12700      496E6974 
 12700      69616C50 
 12700      6564616C 
 12700      5A65726F 
 12701              	.LASF117:
 12702 05ab 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 12702      4D494449 
 12702      506F6C79 
 12702      4B657950 
 12702      72657373 
 12703              	.LASF131:
 12704 05c3 73747269 		.ascii	"stringChange\000"
 12704      6E674368 
 12704      616E6765 
 12704      00
 12705              	.LASF119:
 12706 05d0 73656E64 		.ascii	"sendMIDIControlChange\000"
 12706      4D494449 
 12706      436F6E74 
 12706      726F6C43 
 12706      68616E67 
 12707              	.LASF211:
 12708 05e6 73706943 		.ascii	"spiCounter\000"
 12708      6F756E74 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 273


 12708      657200
 12709              	.LASF39:
 12710 05f1 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 12710      4D5F4545 
 12710      50524F4D 
 12710      5F424144 
 12710      5F504152 
 12711              	.LASF298:
 12712 0608 73797365 		.ascii	"sysexPointerMask\000"
 12712      78506F69 
 12712      6E746572 
 12712      4D61736B 
 12712      00
 12713              	.LASF146:
 12714 0619 4932435F 		.ascii	"I2C_1_initVar\000"
 12714      315F696E 
 12714      69745661 
 12714      7200
 12715              	.LASF52:
 12716 0627 70726573 		.ascii	"presetName\000"
 12716      65744E61 
 12716      6D6500
 12717              	.LASF152:
 12718 0632 70617273 		.ascii	"parsingSysex\000"
 12718      696E6753 
 12718      79736578 
 12718      00
 12719              	.LASF183:
 12720 063f 72657475 		.ascii	"returnedData\000"
 12720      726E6564 
 12720      44617461 
 12720      00
 12721              	.LASF48:
 12722 064c 466F7572 		.ascii	"FourthLine\000"
 12722      74684C69 
 12722      6E6500
 12723              	.LASF231:
 12724 0657 77686963 		.ascii	"whichMacro\000"
 12724      684D6163 
 12724      726F00
 12725              	.LASF243:
 12726 0662 766F6C75 		.ascii	"volumePedal\000"
 12726      6D655065 
 12726      64616C00 
 12727              	.LASF204:
 12728 066e 72784275 		.ascii	"rxBufferPluck\000"
 12728      66666572 
 12728      506C7563 
 12728      6B00
 12729              	.LASF273:
 12730 067c 636F7065 		.ascii	"copedent\000"
 12730      64656E74 
 12730      00
 12731              	.LASF246:
 12732 0685 70656461 		.ascii	"pedals8bit\000"
 12732      6C733862 
 12732      697400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 274


 12733              	.LASF229:
 12734 0690 70726576 		.ascii	"prevKnobs\000"
 12734      4B6E6F62 
 12734      7300
 12735              	.LASF224:
 12736 069a 6D795370 		.ascii	"mySpiCounter\000"
 12736      69436F75 
 12736      6E746572 
 12736      00
 12737              	.LASF160:
 12738 06a7 73797365 		.ascii	"sysexMessageInProgress\000"
 12738      784D6573 
 12738      73616765 
 12738      496E5072 
 12738      6F677265 
 12739              	.LASF113:
 12740 06be 43434576 		.ascii	"CCEvent\000"
 12740      656E7400 
 12741              	.LASF124:
 12742 06c6 70617273 		.ascii	"parseSysex\000"
 12742      65537973 
 12742      657800
 12743              	.LASF301:
 12744 06d1 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 12744      73657273 
 12744      5C4A6566 
 12744      66536E79 
 12744      6465725C 
 12745 06ff 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 12745      355F656C 
 12745      65637472 
 12745      6F737465 
 12745      656C5F73 
 12746 0731 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 12746      5F50534F 
 12746      43335F35 
 12746      5F546865 
 12746      726D6973 
 12747              	.LASF279:
 12748 074f 696E7653 		.ascii	"invStringMappedPositions\000"
 12748      7472696E 
 12748      674D6170 
 12748      70656450 
 12748      6F736974 
 12749              	.LASF222:
 12750 0768 696E7075 		.ascii	"inputData\000"
 12750      74446174 
 12750      6100
 12751              	.LASF66:
 12752 0772 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 12752      5F696E74 
 12752      6572706F 
 12752      6C617469 
 12752      6F6E5F6C 
 12753              	.LASF293:
 12754 078c 70726576 		.ascii	"prevNotes\000"
 12754      4E6F7465 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 275


 12754      7300
 12755              	.LASF37:
 12756 0796 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 12756      74635F65 
 12756      6570726F 
 12756      6D5F636F 
 12756      6E746578 
 12757              	.LASF10:
 12758 07ae 6C6F6E67 		.ascii	"long unsigned int\000"
 12758      20756E73 
 12758      69676E65 
 12758      6420696E 
 12758      7400
 12759              	.LASF145:
 12760 07c0 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 12760      4550524F 
 12760      4D5F656D 
 12760      5F456570 
 12760      726F6D53 
 12761              	.LASF233:
 12762 07db 65657072 		.ascii	"eepromReturnValue\000"
 12762      6F6D5265 
 12762      7475726E 
 12762      56616C75 
 12762      6500
 12763              	.LASF84:
 12764 07ed 74656D70 		.ascii	"tempInt\000"
 12764      496E7400 
 12765              	.LASF83:
 12766 07f5 73746174 		.ascii	"status\000"
 12766      757300
 12767              	.LASF237:
 12768 07fc 73656E64 		.ascii	"send_it\000"
 12768      5F697400 
 12769              	.LASF181:
 12770 0804 6C696E65 		.ascii	"linearPotValue32Bit\000"
 12770      6172506F 
 12770      7456616C 
 12770      75653332 
 12770      42697400 
 12771              	.LASF116:
 12772 0818 6368616E 		.ascii	"channel\000"
 12772      6E656C00 
 12773              	.LASF94:
 12774 0820 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 12774      4D617374 
 12774      65725772 
 12774      69746542 
 12774      6C6F636B 
 12775              	.LASF187:
 12776 0838 616E676C 		.ascii	"angle\000"
 12776      6500
 12777              	.LASF172:
 12778 083e 6E756D53 		.ascii	"numStrings\000"
 12778      7472696E 
 12778      677300
 12779              	.LASF42:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 276


 12780 0849 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 12780      4D5F4545 
 12780      50524F4D 
 12780      5F575249 
 12780      54455F46 
 12781              	.LASF72:
 12782 0861 6F737461 		.ascii	"ostart\000"
 12782      727400
 12783              	.LASF250:
 12784 0868 63757272 		.ascii	"currentPresetSelection\000"
 12784      656E7450 
 12784      72657365 
 12784      7453656C 
 12784      65637469 
 12785              	.LASF284:
 12786 087f 6F70656E 		.ascii	"openStringMIDI_Int\000"
 12786      53747269 
 12786      6E674D49 
 12786      44495F49 
 12786      6E7400
 12787              	.LASF71:
 12788 0892 6973746F 		.ascii	"istop\000"
 12788      7000
 12789              	.LASF141:
 12790 0898 5553425F 		.ascii	"USB_midiInBuffer\000"
 12790      6D696469 
 12790      496E4275 
 12790      66666572 
 12790      00
 12791              	.LASF299:
 12792 08a9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 12792      43313120 
 12792      352E342E 
 12792      31203230 
 12792      31363036 
 12793 08dc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 12793      20726576 
 12793      6973696F 
 12793      6E203233 
 12793      37373135 
 12794 090f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 12794      66756E63 
 12794      74696F6E 
 12794      2D736563 
 12794      74696F6E 
 12795              	.LASF114:
 12796 0937 73656E64 		.ascii	"sendMIDINoteOn\000"
 12796      4D494449 
 12796      4E6F7465 
 12796      4F6E00
 12797              	.LASF258:
 12798 0946 6D61696E 		.ascii	"main_counter\000"
 12798      5F636F75 
 12798      6E746572 
 12798      00
 12799              	.LASF45:
 12800 0953 46697273 		.ascii	"FirstLine\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 277


 12800      744C696E 
 12800      6500
 12801              	.LASF260:
 12802 095d 6475616C 		.ascii	"dualSlider\000"
 12802      536C6964 
 12802      657200
 12803              	.LASF60:
 12804 0968 72657374 		.ascii	"restartSystemCheck\000"
 12804      61727453 
 12804      79737465 
 12804      6D436865 
 12804      636B00
 12805              	.LASF177:
 12806 097b 5553425F 		.ascii	"USB_check_flag\000"
 12806      63686563 
 12806      6B5F666C 
 12806      616700
 12807              	.LASF158:
 12808 098a 6D657373 		.ascii	"messageArraySendCount\000"
 12808      61676541 
 12808      72726179 
 12808      53656E64 
 12808      436F756E 
 12809              	.LASF9:
 12810 09a0 5F5F7569 		.ascii	"__uint32_t\000"
 12810      6E743332 
 12810      5F7400
 12811              	.LASF11:
 12812 09ab 6C6F6E67 		.ascii	"long long int\000"
 12812      206C6F6E 
 12812      6720696E 
 12812      7400
 12813              	.LASF182:
 12814 09b9 636F756E 		.ascii	"counter\000"
 12814      74657200 
 12815              	.LASF282:
 12816 09c1 73747269 		.ascii	"stringPitch\000"
 12816      6E675069 
 12816      74636800 
 12817              	.LASF198:
 12818 09cd 72783154 		.ascii	"rx1TD\000"
 12818      4400
 12819              	.LASF286:
 12820 09d3 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 12820      4F4C4544 
 12820      57616974 
 12820      696E6754 
 12820      6F53656E 
 12821              	.LASF82:
 12822 09e9 74656D70 		.ascii	"tempIntLow\000"
 12822      496E744C 
 12822      6F7700
 12823              	.LASF61:
 12824 09f4 74656D70 		.ascii	"tempmin\000"
 12824      6D696E00 
 12825              	.LASF35:
 12826 09fc 626C6F63 		.ascii	"blockingWrite\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 278


 12826      6B696E67 
 12826      57726974 
 12826      6500
 12827              	.LASF202:
 12828 0a0a 72783343 		.ascii	"rx3Channel\000"
 12828      68616E6E 
 12828      656C00
 12829              	.LASF23:
 12830 0a15 646F7562 		.ascii	"double\000"
 12830      6C6500
 12831              	.LASF300:
 12832 0a1c 6D61696E 		.ascii	"main.c\000"
 12832      2E6300
 12833              	.LASF268:
 12834 0a23 62757474 		.ascii	"button1Up\000"
 12834      6F6E3155 
 12834      7000
 12835              	.LASF106:
 12836 0a2d 6C6F6732 		.ascii	"log2f_approx\000"
 12836      665F6170 
 12836      70726F78 
 12836      00
 12837              	.LASF147:
 12838 0a3a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 12838      52784275 
 12838      66666572 
 12838      00
 12839              	.LASF73:
 12840 0a47 6F73746F 		.ascii	"ostop\000"
 12840      7000
 12841              	.LASF99:
 12842 0a4d 74696D65 		.ascii	"timeout\000"
 12842      6F757400 
 12843              	.LASF22:
 12844 0a55 666C6F61 		.ascii	"float\000"
 12844      7400
 12845              	.LASF245:
 12846 0a5b 70726576 		.ascii	"prev_processed_pedals\000"
 12846      5F70726F 
 12846      63657373 
 12846      65645F70 
 12846      6564616C 
 12847              	.LASF215:
 12848 0a71 616D4865 		.ascii	"amHere2\000"
 12848      72653200 
 12849              	.LASF230:
 12850 0a79 53504932 		.ascii	"SPI2started\000"
 12850      73746172 
 12850      74656400 
 12851              	.LASF218:
 12852 0a85 63757272 		.ascii	"currentPluckBuffer\000"
 12852      656E7450 
 12852      6C75636B 
 12852      42756666 
 12852      657200
 12853              	.LASF109:
 12854 0a98 73747269 		.ascii	"string\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 279


 12854      6E6700
 12855              	.LASF122:
 12856 0a9f 73656E64 		.ascii	"sendMIDIPitchBend\000"
 12856      4D494449 
 12856      50697463 
 12856      6842656E 
 12856      6400
 12857              	.LASF13:
 12858 0ab1 756E7369 		.ascii	"unsigned int\000"
 12858      676E6564 
 12858      20696E74 
 12858      00
 12859              	.LASF151:
 12860 0abe 72656365 		.ascii	"receivingSysex\000"
 12860      6976696E 
 12860      67537973 
 12860      657800
 12861              	.LASF136:
 12862 0acd 6361626C 		.ascii	"cable\000"
 12862      6500
 12863              	.LASF59:
 12864 0ad3 56627573 		.ascii	"Vbus_function\000"
 12864      5F66756E 
 12864      6374696F 
 12864      6E00
 12865              	.LASF110:
 12866 0ae1 76656C6F 		.ascii	"velocity\000"
 12866      63697479 
 12866      00
 12867              	.LASF294:
 12868 0aea 63686563 		.ascii	"checkStatus\000"
 12868      6B537461 
 12868      74757300 
 12869              	.LASF25:
 12870 0af6 63797374 		.ascii	"cystatus\000"
 12870      61747573 
 12870      00
 12871              	.LASF227:
 12872 0aff 6261725F 		.ascii	"bar_index\000"
 12872      696E6465 
 12872      7800
 12873              	.LASF225:
 12874 0b09 6F666673 		.ascii	"offsetErrorCount\000"
 12874      65744572 
 12874      726F7243 
 12874      6F756E74 
 12874      00
 12875              	.LASF248:
 12876 0b1a 70726F63 		.ascii	"processed_volumePedal\000"
 12876      65737365 
 12876      645F766F 
 12876      6C756D65 
 12876      50656461 
 12877              	.LASF87:
 12878 0b30 74656D70 		.ascii	"tempMIDI\000"
 12878      4D494449 
 12878      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 280


 12879              	.LASF205:
 12880 0b39 72784275 		.ascii	"rxBufferBar\000"
 12880      66666572 
 12880      42617200 
 12881              	.LASF200:
 12882 0b45 74784368 		.ascii	"txChannel\000"
 12882      616E6E65 
 12882      6C00
 12883              	.LASF244:
 12884 0b4f 70726F63 		.ascii	"processed_pedals\000"
 12884      65737365 
 12884      645F7065 
 12884      64616C73 
 12884      00
 12885              	.LASF277:
 12886 0b60 6F70656E 		.ascii	"openStringFrequencies\000"
 12886      53747269 
 12886      6E674672 
 12886      65717565 
 12886      6E636965 
 12887              	.LASF188:
 12888 0b76 70726576 		.ascii	"prevAngle\000"
 12888      416E676C 
 12888      6500
 12889              	.LASF214:
 12890 0b80 706C7563 		.ascii	"pluck_index\000"
 12890      6B5F696E 
 12890      64657800 
 12891              	.LASF27:
 12892 0b8c 6C6F6E67 		.ascii	"long double\000"
 12892      20646F75 
 12892      626C6500 
 12893              	.LASF100:
 12894 0b98 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 12894      4D617374 
 12894      65725265 
 12894      6164426C 
 12894      6F636B69 
 12895              	.LASF219:
 12896 0baf 63757272 		.ascii	"currentBarBuffer\000"
 12896      656E7442 
 12896      61724275 
 12896      66666572 
 12896      00
 12897              	.LASF189:
 12898 0bc0 4144435F 		.ascii	"ADC_values\000"
 12898      76616C75 
 12898      657300
 12899              	.LASF65:
 12900 0bcb 66746F6D 		.ascii	"ftom\000"
 12900      00
 12901              	.LASF261:
 12902 0bd0 656E7465 		.ascii	"enterUp\000"
 12902      72557000 
 12903              	.LASF221:
 12904 0bd8 53504931 		.ascii	"SPI1ErrorCount\000"
 12904      4572726F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 281


 12904      72436F75 
 12904      6E7400
 12905              	.LASF191:
 12906 0be7 6D696469 		.ascii	"midiSent\000"
 12906      53656E74 
 12906      00
 12907              	.LASF137:
 12908 0bf0 6D696469 		.ascii	"midiMsg\000"
 12908      4D736700 
 12909              	.LASF290:
 12910 0bf8 63757272 		.ascii	"currentNeck\000"
 12910      656E744E 
 12910      65636B00 
 12911              	.LASF291:
 12912 0c04 65646974 		.ascii	"editMode\000"
 12912      4D6F6465 
 12912      00
 12913              	.LASF12:
 12914 0c0d 6C6F6E67 		.ascii	"long long unsigned int\000"
 12914      206C6F6E 
 12914      6720756E 
 12914      7369676E 
 12914      65642069 
 12915              	.LASF16:
 12916 0c24 75696E74 		.ascii	"uint16_t\000"
 12916      31365F74 
 12916      00
 12917              	.LASF133:
 12918 0c2d 74656D70 		.ascii	"tempHigh\000"
 12918      48696768 
 12918      00
 12919              	.LASF171:
 12920 0c36 74657374 		.ascii	"testVal\000"
 12920      56616C00 
 12921              	.LASF199:
 12922 0c3e 72783254 		.ascii	"rx2TD\000"
 12922      4400
 12923              	.LASF302:
 12924 0c44 62726561 		.ascii	"breakFloat\000"
 12924      6B466C6F 
 12924      617400
 12925              	.LASF295:
 12926 0c4f 63686563 		.ascii	"checkBase\000"
 12926      6B426173 
 12926      6500
 12927              	.LASF58:
 12928 0c59 73706973 		.ascii	"spis_2_ss\000"
 12928      5F325F73 
 12928      7300
 12929              	.LASF269:
 12930 0c63 62757474 		.ascii	"button2Up\000"
 12930      6F6E3255 
 12930      7000
 12931              	.LASF210:
 12932 0c6d 616D4865 		.ascii	"amHere\000"
 12932      726500
 12933              	.LASF232:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 282


 12934 0c74 61727261 		.ascii	"array\000"
 12934      7900
 12935              	.LASF88:
 12936 0c7a 7363616C 		.ascii	"scaledMIDI\000"
 12936      65644D49 
 12936      444900
 12937              	.LASF26:
 12938 0c85 72656738 		.ascii	"reg8\000"
 12938      00
 12939              	.LASF155:
 12940 0c8a 636F7065 		.ascii	"copedentNumberToWrite\000"
 12940      64656E74 
 12940      4E756D62 
 12940      6572546F 
 12940      57726974 
 12941              	.LASF55:
 12942 0ca0 6D617043 		.ascii	"mapCountNext\000"
 12942      6F756E74 
 12942      4E657874 
 12942      00
 12943              	.LASF216:
 12944 0cad 73706943 		.ascii	"spiCounter2\000"
 12944      6F756E74 
 12944      65723200 
 12945              	.LASF111:
 12946 0cb9 74656D70 		.ascii	"tempVel\000"
 12946      56656C00 
 12947              	.LASF173:
 12948 0cc1 75736241 		.ascii	"usbActivityCounter\000"
 12948      63746976 
 12948      69747943 
 12948      6F756E74 
 12948      657200
 12949              	.LASF242:
 12950 0cd4 64656164 		.ascii	"deadzone\000"
 12950      7A6F6E65 
 12950      00
 12951              	.LASF169:
 12952 0cdd 70617273 		.ascii	"parseThatMF\000"
 12952      65546861 
 12952      744D4600 
 12953              	.LASF3:
 12954 0ce9 5F5F696E 		.ascii	"__int16_t\000"
 12954      7431365F 
 12954      7400
 12955              	.LASF54:
 12956 0cf3 696E6974 		.ascii	"initialVals\000"
 12956      69616C56 
 12956      616C7300 
 12957              	.LASF176:
 12958 0cff 5553425F 		.ascii	"USB_active\000"
 12958      61637469 
 12958      766500
 12959              	.LASF296:
 12960 0d0a 5350495F 		.ascii	"SPI_errors\000"
 12960      6572726F 
 12960      727300
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 283


 12961              	.LASF149:
 12962 0d15 73797365 		.ascii	"sysexBuffer\000"
 12962      78427566 
 12962      66657200 
 12963              	.LASF161:
 12964 0d21 62756643 		.ascii	"bufCount\000"
 12964      6F756E74 
 12964      00
 12965              	.LASF220:
 12966 0d2a 706C7563 		.ascii	"pluckErrorCount\000"
 12966      6B457272 
 12966      6F72436F 
 12966      756E7400 
 12967              	.LASF129:
 12968 0d3a 74656D70 		.ascii	"tempChar\000"
 12968      43686172 
 12968      00
 12969              	.LASF285:
 12970 0d43 4F4C4544 		.ascii	"OLEDcount\000"
 12970      636F756E 
 12970      7400
 12971              	.LASF272:
 12972 0d4d 70617463 		.ascii	"patchNum\000"
 12972      684E756D 
 12972      00
 12973              	.LASF289:
 12974 0d56 70656461 		.ascii	"pedals_float\000"
 12974      6C735F66 
 12974      6C6F6174 
 12974      00
 12975              	.LASF19:
 12976 0d63 75696E74 		.ascii	"uint8\000"
 12976      3800
 12977              	.LASF240:
 12978 0d69 70656461 		.ascii	"pedals_low\000"
 12978      6C735F6C 
 12978      6F7700
 12979              	.LASF213:
 12980 0d74 70726576 		.ascii	"prevOctave\000"
 12980      4F637461 
 12980      766500
 12981              	.LASF4:
 12982 0d7f 73686F72 		.ascii	"short int\000"
 12982      7420696E 
 12982      7400
 12983              	.LASF159:
 12984 0d89 6D657373 		.ascii	"messageArraySize\000"
 12984      61676541 
 12984      72726179 
 12984      53697A65 
 12984      00
 12985              	.LASF249:
 12986 0d9a 66726574 		.ascii	"fretMeasurements\000"
 12986      4D656173 
 12986      7572656D 
 12986      656E7473 
 12986      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 284


 12987              	.LASF97:
 12988 0dab 6D6F6465 		.ascii	"mode\000"
 12988      00
 12989              	.LASF91:
 12990 0db0 62756666 		.ascii	"bufferPointer\000"
 12990      6572506F 
 12990      696E7465 
 12990      7200
 12991              	.LASF283:
 12992 0dbe 73747269 		.ascii	"stringMIDI\000"
 12992      6E674D49 
 12992      444900
 12993              	.LASF15:
 12994 0dc9 696E7431 		.ascii	"int16_t\000"
 12994      365F7400 
 12995              	.LASF130:
 12996 0dd1 70656461 		.ascii	"pedalToWrite\000"
 12996      6C546F57 
 12996      72697465 
 12996      00
 12997              	.LASF32:
 12998 0dde 65657072 		.ascii	"eepromSize\000"
 12998      6F6D5369 
 12998      7A6500
 12999              	.LASF103:
 13000 0de9 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 13000      6C617943 
 13000      75727265 
 13000      6E745072 
 13000      65736574 
 13001              	.LASF278:
 13002 0e0d 73747269 		.ascii	"stringMappedPositions\000"
 13002      6E674D61 
 13002      70706564 
 13002      506F7369 
 13002      74696F6E 
 13003              	.LASF185:
 13004 0e23 70726576 		.ascii	"previousButtons\000"
 13004      696F7573 
 13004      42757474 
 13004      6F6E7300 
 13005              	.LASF33:
 13006 0e33 77656172 		.ascii	"wearLevelingFactor\000"
 13006      4C657665 
 13006      6C696E67 
 13006      46616374 
 13006      6F7200
 13007              	.LASF139:
 13008 0e46 5553425F 		.ascii	"USB_midiInPointer\000"
 13008      6D696469 
 13008      496E506F 
 13008      696E7465 
 13008      7200
 13009              	.LASF292:
 13010 0e58 63616C69 		.ascii	"calibrationMode\000"
 13010      62726174 
 13010      696F6E4D 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 285


 13010      6F646500 
 13011              	.LASF95:
 13012 0e68 69324341 		.ascii	"i2CAddr\000"
 13012      64647200 
 13013              	.LASF178:
 13014 0e70 696E4275 		.ascii	"inBuffer\000"
 13014      66666572 
 13014      00
 13015              	.LASF209:
 13016 0e79 6D617853 		.ascii	"maxStrings\000"
 13016      7472696E 
 13016      677300
 13017              	.LASF78:
 13018 0e84 6C657474 		.ascii	"letter\000"
 13018      657200
 13019              	.LASF143:
 13020 0e8b 5553425F 		.ascii	"USB_midiOutBuffer\000"
 13020      6D696469 
 13020      4F757442 
 13020      75666665 
 13020      7200
 13021              	.LASF193:
 13022 0e9d 6D616372 		.ascii	"macroKnobValues\000"
 13022      6F4B6E6F 
 13022      6256616C 
 13022      75657300 
 13023              	.LASF239:
 13024 0ead 6932635F 		.ascii	"i2c_skipped\000"
 13024      736B6970 
 13024      70656400 
 13025              	.LASF223:
 13026 0eb9 73706941 		.ascii	"spiAdjusted\000"
 13026      646A7573 
 13026      74656400 
 13027              	.LASF197:
 13028 0ec5 72783243 		.ascii	"rx2Channel\000"
 13028      68616E6E 
 13028      656C00
 13029              	.LASF140:
 13030 0ed0 5553425F 		.ascii	"USB_midi_in_ep\000"
 13030      6D696469 
 13030      5F696E5F 
 13030      657000
 13031              	.LASF93:
 13032 0edf 446D6152 		.ascii	"DmaRxConfiguration\000"
 13032      78436F6E 
 13032      66696775 
 13032      72617469 
 13032      6F6E00
 13033              	.LASF18:
 13034 0ef2 75696E74 		.ascii	"uint32_t\000"
 13034      33325F74 
 13034      00
 13035              	.LASF271:
 13036 0efb 62757474 		.ascii	"button4Up\000"
 13036      6F6E3455 
 13036      7000
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 286


 13037              	.LASF175:
 13038 0f05 70726576 		.ascii	"prevVBUS\000"
 13038      56425553 
 13038      00
 13039              	.LASF203:
 13040 0f0e 72783354 		.ascii	"rx3TD\000"
 13040      4400
 13041              	.LASF174:
 13042 0f14 63757272 		.ascii	"currentVBUS\000"
 13042      656E7456 
 13042      42555300 
 13043              	.LASF265:
 13044 0f20 6F637434 		.ascii	"oct4Up\000"
 13044      557000
 13045              	.LASF303:
 13046 0f27 63616C63 		.ascii	"calculatePedalRatios\000"
 13046      756C6174 
 13046      65506564 
 13046      616C5261 
 13046      74696F73 
 13047              	.LASF270:
 13048 0f3c 62757474 		.ascii	"button3Up\000"
 13048      6F6E3355 
 13048      7000
 13049              	.LASF6:
 13050 0f46 73686F72 		.ascii	"short unsigned int\000"
 13050      7420756E 
 13050      7369676E 
 13050      65642069 
 13050      6E7400
 13051              	.LASF56:
 13052 0f59 6D617070 		.ascii	"mapping\000"
 13052      696E6700 
 13053              	.LASF112:
 13054 0f61 6E6F7465 		.ascii	"noteToSend\000"
 13054      546F5365 
 13054      6E6400
 13055              	.LASF201:
 13056 0f6c 74785444 		.ascii	"txTD\000"
 13056      00
 13057              	.LASF7:
 13058 0f71 5F5F696E 		.ascii	"__int32_t\000"
 13058      7433325F 
 13058      7400
 13059              	.LASF208:
 13060 0f7b 70726576 		.ascii	"prevBar\000"
 13060      42617200 
 13061              	.LASF180:
 13062 0f83 6D79496E 		.ascii	"myInputArray\000"
 13062      70757441 
 13062      72726179 
 13062      00
 13063              	.LASF64:
 13064 0f90 6D746F66 		.ascii	"mtof\000"
 13064      00
 13065              	.LASF276:
 13066 0f95 70656461 		.ascii	"pedals\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIX93YF.s 			page 287


 13066      6C7300
 13067              	.LASF81:
 13068 0f9c 74656D70 		.ascii	"tempIntHigh\000"
 13068      496E7448 
 13068      69676800 
 13069              	.LASF263:
 13070 0fa8 65646974 		.ascii	"editUp\000"
 13070      557000
 13071              	.LASF31:
 13072 0faf 6C617374 		.ascii	"lastWrRowAddr\000"
 13072      5772526F 
 13072      77416464 
 13072      7200
 13073              	.LASF76:
 13074 0fbd 6D794172 		.ascii	"myArrayCounter\000"
 13074      72617943 
 13074      6F756E74 
 13074      657200
 13075              	.LASF280:
 13076 0fcc 73747269 		.ascii	"stringFrequencies\000"
 13076      6E674672 
 13076      65717565 
 13076      6E636965 
 13076      7300
 13077              	.LASF20:
 13078 0fde 75696E74 		.ascii	"uint16\000"
 13078      313600
 13079              	.LASF179:
 13080 0fe5 6D794172 		.ascii	"myArray\000"
 13080      72617900 
 13081              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
