ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sysexBuffer,2048,4
  20              		.global	sysexPointer
  21              		.bss
  22              		.align	2
  23              		.type	sysexPointer, %object
  24              		.size	sysexPointer, 4
  25              	sysexPointer:
  26 0000 00000000 		.space	4
  27              		.global	receivingSysex
  28              		.type	receivingSysex, %object
  29              		.size	receivingSysex, 1
  30              	receivingSysex:
  31 0004 00       		.space	1
  32              		.global	parsingSysex
  33              		.type	parsingSysex, %object
  34              		.size	parsingSysex, 1
  35              	parsingSysex:
  36 0005 00       		.space	1
  37              		.comm	presetArray,2048,4
  38              		.global	presetNumberToWrite
  39              		.type	presetNumberToWrite, %object
  40              		.size	presetNumberToWrite, 1
  41              	presetNumberToWrite:
  42 0006 00       		.space	1
  43              		.global	copedentNumberToWrite
  44              		.type	copedentNumberToWrite, %object
  45              		.size	copedentNumberToWrite, 1
  46              	copedentNumberToWrite:
  47 0007 00       		.space	1
  48              		.global	sendMessageEnd
  49              		.type	sendMessageEnd, %object
  50              		.size	sendMessageEnd, 1
  51              	sendMessageEnd:
  52 0008 00       		.space	1
  53              		.global	sendSingleParamUpdate
  54              		.type	sendSingleParamUpdate, %object
  55              		.size	sendSingleParamUpdate, 1
  56              	sendSingleParamUpdate:
  57 0009 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 2


  58              		.global	singleParamToUpdateHigh
  59              		.type	singleParamToUpdateHigh, %object
  60              		.size	singleParamToUpdateHigh, 1
  61              	singleParamToUpdateHigh:
  62 000a 00       		.space	1
  63              		.global	singleParamToUpdateLow
  64              		.type	singleParamToUpdateLow, %object
  65              		.size	singleParamToUpdateLow, 1
  66              	singleParamToUpdateLow:
  67 000b 00       		.space	1
  68              		.global	singleParamValueHigh
  69              		.type	singleParamValueHigh, %object
  70              		.size	singleParamValueHigh, 1
  71              	singleParamValueHigh:
  72 000c 00       		.space	1
  73              		.global	singleParamValueLow
  74              		.type	singleParamValueLow, %object
  75              		.size	singleParamValueLow, 1
  76              	singleParamValueLow:
  77 000d 00       		.space	1
  78              		.global	sendMappingChangeUpdate
  79              		.type	sendMappingChangeUpdate, %object
  80              		.size	sendMappingChangeUpdate, 1
  81              	sendMappingChangeUpdate:
  82 000e 00       		.space	1
  83              		.global	presetArraySection
  84              		.type	presetArraySection, %object
  85              		.size	presetArraySection, 1
  86              	presetArraySection:
  87 000f 00       		.space	1
  88              		.global	messageArraySendCount
  89              		.align	1
  90              		.type	messageArraySendCount, %object
  91              		.size	messageArraySendCount, 2
  92              	messageArraySendCount:
  93 0010 0000     		.space	2
  94              		.global	messageArraySize
  95              		.align	1
  96              		.type	messageArraySize, %object
  97              		.size	messageArraySize, 2
  98              	messageArraySize:
  99 0012 0000     		.space	2
 100              		.global	sysexMessageInProgress
 101              		.type	sysexMessageInProgress, %object
 102              		.size	sysexMessageInProgress, 1
 103              	sysexMessageInProgress:
 104 0014 00       		.space	1
 105              		.global	bufCount
 106              		.type	bufCount, %object
 107              		.size	bufCount, 1
 108              	bufCount:
 109 0015 00       		.space	1
 110              		.global	sendingMessage
 111              		.type	sendingMessage, %object
 112              		.size	sendingMessage, 1
 113              	sendingMessage:
 114 0016 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 3


 115              		.global	sendKnobs
 116              		.type	sendKnobs, %object
 117              		.size	sendKnobs, 1
 118              	sendKnobs:
 119 0017 00       		.space	1
 120              		.global	currentFloat
 121              		.align	2
 122              		.type	currentFloat, %object
 123              		.size	currentFloat, 4
 124              	currentFloat:
 125 0018 00000000 		.space	4
 126              		.global	mapCount
 127              		.align	2
 128              		.type	mapCount, %object
 129              		.size	mapCount, 4
 130              	mapCount:
 131 001c 00000000 		.space	4
 132              		.global	valsCount
 133              		.align	1
 134              		.type	valsCount, %object
 135              		.size	valsCount, 2
 136              	valsCount:
 137 0020 0000     		.space	2
 138              		.global	mapCountExpectation
 139              		.align	1
 140              		.type	mapCountExpectation, %object
 141              		.size	mapCountExpectation, 2
 142              	mapCountExpectation:
 143 0022 0000     		.space	2
 144              		.global	numMappings
 145              		.align	1
 146              		.type	numMappings, %object
 147              		.size	numMappings, 2
 148              	numMappings:
 149 0024 0000     		.space	2
 150              		.global	parseThatMF
 151              		.type	parseThatMF, %object
 152              		.size	parseThatMF, 1
 153              	parseThatMF:
 154 0026 00       		.space	1
 155              		.global	valCheck
 156 0027 00       		.align	2
 157              		.type	valCheck, %object
 158              		.size	valCheck, 4
 159              	valCheck:
 160 0028 00000000 		.space	4
 161              		.global	testVal
 162              		.align	2
 163              		.type	testVal, %object
 164              		.size	testVal, 4
 165              	testVal:
 166 002c 00000000 		.space	4
 167              		.global	numStrings
 168              		.data
 169              		.align	2
 170              		.type	numStrings, %object
 171              		.size	numStrings, 4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 4


 172              	numStrings:
 173 0000 0A000000 		.word	10
 174              		.global	usbActivityCounter
 175              		.bss
 176              		.type	usbActivityCounter, %object
 177              		.size	usbActivityCounter, 1
 178              	usbActivityCounter:
 179 0030 00       		.space	1
 180              		.comm	midiMsg,4,4
 181              		.global	currentVBUS
 182              		.type	currentVBUS, %object
 183              		.size	currentVBUS, 1
 184              	currentVBUS:
 185 0031 00       		.space	1
 186              		.global	prevVBUS
 187              		.type	prevVBUS, %object
 188              		.size	prevVBUS, 1
 189              	prevVBUS:
 190 0032 00       		.space	1
 191              		.global	USB_active
 192              		.type	USB_active, %object
 193              		.size	USB_active, 1
 194              	USB_active:
 195 0033 00       		.space	1
 196              		.global	USB_check_flag
 197              		.type	USB_check_flag, %object
 198              		.size	USB_check_flag, 1
 199              	USB_check_flag:
 200 0034 00       		.space	1
 201              		.comm	mappingArray,6,4
 202              		.comm	inBuffer,32,4
 203              		.comm	myArray,32,4
 204              		.comm	myInputArray,2,4
 205              		.comm	linearPotValue32Bit,8,4
 206              		.global	i
 207              		.type	i, %object
 208              		.size	i, 1
 209              	i:
 210 0035 00       		.space	1
 211              		.global	counter
 212              		.type	counter, %object
 213              		.size	counter, 1
 214              	counter:
 215 0036 00       		.space	1
 216              		.comm	returnedData,32,4
 217              		.comm	temper,4,4
 218              		.comm	previousButtons,44,4
 219              		.global	octave
 220              		.data
 221              		.align	2
 222              		.type	octave, %object
 223              		.size	octave, 4
 224              	octave:
 225 0004 05000000 		.word	5
 226              		.comm	angle,20,4
 227              		.comm	prevAngle,20,4
 228              		.comm	ADC_values,8,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 5


 229              		.global	rawAngle
 230              		.bss
 231 0037 00       		.align	1
 232              		.type	rawAngle, %object
 233              		.size	rawAngle, 2
 234              	rawAngle:
 235 0038 0000     		.space	2
 236              		.global	midiSent
 237              		.align	1
 238              		.type	midiSent, %object
 239              		.size	midiSent, 2
 240              	midiSent:
 241 003a 0000     		.space	2
 242              		.global	midiOverflow
 243              		.align	1
 244              		.type	midiOverflow, %object
 245              		.size	midiOverflow, 2
 246              	midiOverflow:
 247 003c 0000     		.space	2
 248              		.comm	macroKnobValues,8,4
 249              		.global	currentCopedent
 250              		.type	currentCopedent, %object
 251              		.size	currentCopedent, 1
 252              	currentCopedent:
 253 003e 00       		.space	1
 254              		.global	necks
 255              		.data
 256              		.align	2
 257              		.type	necks, %object
 258              		.size	necks, 2
 259              	necks:
 260 0008 00       		.byte	0
 261 0009 01       		.byte	1
 262              		.comm	rx1Channel,1,1
 263              		.comm	rx2Channel,1,32
 264              		.comm	rx1TD,2,4
 265              		.comm	rx2TD,2,32
 266              		.comm	txChannel,1,32
 267              		.comm	txTD,1,32
 268              		.comm	rx3Channel,1,32
 269              		.comm	rx3TD,1,32
 270              		.comm	rxBufferPluck,52,32
 271              		.comm	rxBufferBar,16,32
 272              		.comm	strings,24,4
 273              		.comm	prevStrings,24,4
 274              		.comm	bar,4,4
 275              		.comm	prevBar,4,4
 276              		.comm	maxStrings,24,4
 277              		.global	amHere
 278              		.bss
 279              		.type	amHere, %object
 280              		.size	amHere, 1
 281              	amHere:
 282 003f 00       		.space	1
 283              		.global	spiCounter
 284              		.type	spiCounter, %object
 285              		.size	spiCounter, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 6


 286              	spiCounter:
 287 0040 00       		.space	1
 288              		.global	newDataFlag
 289              		.type	newDataFlag, %object
 290              		.size	newDataFlag, 1
 291              	newDataFlag:
 292 0041 00       		.space	1
 293              		.global	prevOctave
 294 0042 0000     		.align	2
 295              		.type	prevOctave, %object
 296              		.size	prevOctave, 4
 297              	prevOctave:
 298 0044 00000000 		.space	4
 299              		.global	pluck_index
 300              		.type	pluck_index, %object
 301              		.size	pluck_index, 1
 302              	pluck_index:
 303 0048 00       		.space	1
 304              		.global	amHere2
 305              		.type	amHere2, %object
 306              		.size	amHere2, 1
 307              	amHere2:
 308 0049 00       		.space	1
 309              		.global	spiCounter2
 310              		.type	spiCounter2, %object
 311              		.size	spiCounter2, 1
 312              	spiCounter2:
 313 004a 00       		.space	1
 314              		.global	newDataFlag2
 315              		.type	newDataFlag2, %object
 316              		.size	newDataFlag2, 1
 317              	newDataFlag2:
 318 004b 00       		.space	1
 319              		.global	currentPluckBuffer
 320              		.type	currentPluckBuffer, %object
 321              		.size	currentPluckBuffer, 1
 322              	currentPluckBuffer:
 323 004c 00       		.space	1
 324              		.global	currentBarBuffer
 325              		.type	currentBarBuffer, %object
 326              		.size	currentBarBuffer, 1
 327              	currentBarBuffer:
 328 004d 00       		.space	1
 329              		.global	pluckErrorCount
 330              		.type	pluckErrorCount, %object
 331              		.size	pluckErrorCount, 1
 332              	pluckErrorCount:
 333 004e 00       		.space	1
 334              		.global	SPI1ErrorCount
 335 004f 00       		.align	1
 336              		.type	SPI1ErrorCount, %object
 337              		.size	SPI1ErrorCount, 2
 338              	SPI1ErrorCount:
 339 0050 0000     		.space	2
 340              		.global	inputData
 341              		.type	inputData, %object
 342              		.size	inputData, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 7


 343              	inputData:
 344 0052 00       		.space	1
 345              		.section	.text.spis_1_ss,"ax",%progbits
 346              		.align	2
 347              		.global	spis_1_ss
 348              		.thumb
 349              		.thumb_func
 350              		.type	spis_1_ss, %function
 351              	spis_1_ss:
 352              	.LFB64:
 353              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** #define EEPROM_NECKS_OFFSET 0
  11:main.c        **** #define EEPROM_COPEDENT_OFFSET 2
  12:main.c        **** #define COPEDENT_SIZE_IN_BYTES 278 //including name bytes
  13:main.c        **** #define COPEDENT_SIZE_IN_FLOATS 132 // not including name bytes
  14:main.c        **** #define NAME_LENGTH_IN_BYTES 14
  15:main.c        **** #define EEPROM_CALIBRATION_OFFSET (EEPROM_NECKS_OFFSET + EEPROM_COPEDENT_OFFSET + (MAX_NUM_COPEDENT
  16:main.c        **** #define CALIBRATION_SIZE_IN_BYTES NUM_PEDALS * 4 //for each pedal, store 2 bytes for high and 2 byt
  17:main.c        **** #define MACRO_CLIPPED_LENGTH 8
  18:main.c        **** #define NAME_CLIPPED_LENGTH 11
  19:main.c        **** #define COPEDENT_NAME_CLIPPED_LENGTH 8
  20:main.c        **** #define myBufferSize 32
  21:main.c        **** void parseSysex(void);
  22:main.c        **** 
  23:main.c        **** uint8_t sysexBuffer[2048];
  24:main.c        **** uint32_t sysexPointer = 0;
  25:main.c        **** uint8_t receivingSysex = 0;
  26:main.c        **** uint8_t parsingSysex = 0;
  27:main.c        **** volatile uint8_t presetArray[2048];
  28:main.c        **** uint8_t presetNumberToWrite = 0;
  29:main.c        **** uint8_t copedentNumberToWrite = 0;
  30:main.c        **** uint8_t sendMessageEnd = 0;
  31:main.c        **** 
  32:main.c        **** uint8_t sendSingleParamUpdate = 0;
  33:main.c        **** uint8_t singleParamToUpdateHigh = 0;
  34:main.c        **** uint8_t singleParamToUpdateLow = 0;
  35:main.c        **** uint8_t singleParamValueHigh = 0;
  36:main.c        **** uint8_t singleParamValueLow = 0;
  37:main.c        ****             
  38:main.c        **** uint8_t sendMappingChangeUpdate = 0;
  39:main.c        ****             
  40:main.c        **** enum presetArraySectionState
  41:main.c        **** {
  42:main.c        ****     presetName = 0,
  43:main.c        ****     macroNames = 1,
  44:main.c        ****     initialVals = 2,
  45:main.c        ****     mapCountNext = 3,
  46:main.c        ****     mapping = 4,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 8


  47:main.c        ****     presetEnd = 5,
  48:main.c        **** };
  49:main.c        **** uint8_t presetArraySection = presetName;
  50:main.c        **** 
  51:main.c        **** uint16_t messageArraySendCount = 0;
  52:main.c        **** uint16_t messageArraySize = 0;
  53:main.c        **** 
  54:main.c        **** uint8_t sysexMessageInProgress = 0;
  55:main.c        **** 
  56:main.c        **** uint8_t bufCount = 0;
  57:main.c        **** volatile uint8_t sendingMessage = 0;
  58:main.c        **** volatile uint8_t sendKnobs = 0;
  59:main.c        **** uint32_t currentFloat = 0;
  60:main.c        **** uint32_t mapCount = 0;
  61:main.c        **** 
  62:main.c        **** uint16_t valsCount = 0;
  63:main.c        **** uint16_t mapCountExpectation = 0;
  64:main.c        **** uint16_t numMappings = 0;
  65:main.c        **** volatile uint8_t parseThatMF = 0;
  66:main.c        **** volatile float valCheck = 0.0f;
  67:main.c        **** volatile float testVal = 0.0f;
  68:main.c        **** 
  69:main.c        **** int numStrings = 10;
  70:main.c        **** /*
  71:main.c        **** #define TUNING_ARRAY_SIZE 258
  72:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  73:main.c        **** */
  74:main.c        **** 
  75:main.c        **** volatile uint8 usbActivityCounter = 0u;
  76:main.c        **** uint8 midiMsg[4];
  77:main.c        **** uint8_t currentVBUS = 0;
  78:main.c        **** uint8_t prevVBUS = 0;
  79:main.c        **** volatile uint8_t USB_active = 0;
  80:main.c        **** volatile uint8_t USB_check_flag = 0;
  81:main.c        **** 
  82:main.c        **** uint8_t mappingArray[6];
  83:main.c        **** 
  84:main.c        **** uint8 inBuffer[myBufferSize];
  85:main.c        **** 
  86:main.c        **** uint8 myArray[myBufferSize];
  87:main.c        **** uint8 myInputArray[2];
  88:main.c        **** int32_t linearPotValue32Bit[2];
  89:main.c        **** uint8_t i = 0;
  90:main.c        **** uint8_t counter = 0;
  91:main.c        **** uint8_t returnedData[myBufferSize];
  92:main.c        **** int32_t temper;
  93:main.c        **** int previousButtons[11];
  94:main.c        **** int octave = 5;
  95:main.c        **** uint16_t angle[10];
  96:main.c        **** uint16_t prevAngle[10];
  97:main.c        **** 
  98:main.c        **** uint16_t ADC_values[4];
  99:main.c        **** uint16_t rawAngle = 0;
 100:main.c        **** uint16_t midiSent = 0;
 101:main.c        **** uint16_t midiOverflow = 0;
 102:main.c        **** 
 103:main.c        **** uint8_t macroKnobValues[8];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 9


 104:main.c        **** 
 105:main.c        **** uint8_t currentCopedent = 0;
 106:main.c        **** uint8_t necks[2] = {0,1};
 107:main.c        **** 
 108:main.c        **** void checkUSB_Vbus(void);
 109:main.c        **** void sendMIDIAllNotesOff(void);
 110:main.c        **** void sendMIDIPitchBend(int val, int channel);
 111:main.c        **** void firstCheckUSB_Vbus(void);
 112:main.c        **** void restartSystemCheck(void);
 113:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 114:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 115:main.c        **** CY_ISR_PROTO(SleepIsr_function);
 116:main.c        **** void noteEvent(int string);
 117:main.c        **** void I2C_reset(void);
 118:main.c        **** void CCEvent(int cc, int val);
 119:main.c        **** void DmaRxConfiguration(void);
 120:main.c        **** /* DMA Configuration for DMA_RX */
 121:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
 122:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
 123:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
 124:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
 125:main.c        **** 
 126:main.c        **** void DmaTxConfiguration(void);
 127:main.c        **** 
 128:main.c        **** /* DMA Configuration for DMA_TX */
 129:main.c        **** #define DMA_TX_BYTES_PER_BURST      (1u)
 130:main.c        **** #define DMA_TX_REQUEST_PER_BURST    (1u)
 131:main.c        **** #define DMA_TX_SRC_BASE             (CYDEV_SRAM_BASE)
 132:main.c        **** #define DMA_TX_DST_BASE             (CYDEV_PERIPH_BASE)
 133:main.c        **** 
 134:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
 135:main.c        **** #define BAR_BUFFER_SIZE                 (8u)
 136:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
 137:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 138:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 139:main.c        **** 
 140:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 141:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 142:main.c        **** 
 143:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 144:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 145:main.c        **** 
 146:main.c        **** 
 147:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 148:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 149:main.c        **** 
 150:main.c        **** volatile uint16_t strings[12];
 151:main.c        **** volatile uint16_t prevStrings[12];
 152:main.c        **** volatile uint16_t bar[2];
 153:main.c        **** volatile uint16_t prevBar[2];
 154:main.c        **** volatile uint16_t maxStrings[12];
 155:main.c        **** volatile uint8_t amHere = 0;
 156:main.c        **** volatile uint8_t spiCounter = 0;
 157:main.c        **** volatile uint8_t newDataFlag = 0;
 158:main.c        **** int prevOctave = 0;
 159:main.c        **** uint8_t pluck_index = 0;
 160:main.c        **** volatile uint8_t amHere2 = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 10


 161:main.c        **** volatile uint8_t spiCounter2 = 0;
 162:main.c        **** volatile uint8_t newDataFlag2 = 0;
 163:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 164:main.c        **** volatile uint8_t currentBarBuffer = 0;
 165:main.c        **** volatile uint8_t pluckErrorCount = 0;
 166:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 167:main.c        **** 
 168:main.c        **** 
 169:main.c        **** 
 170:main.c        **** volatile uint8_t inputData = 0;
 171:main.c        **** 
 172:main.c        **** 
 173:main.c        **** union breakFloat {
 174:main.c        ****  float f;
 175:main.c        ****  uint8_t b[4];  
 176:main.c        ****  uint32_t u32;
 177:main.c        **** };
 178:main.c        **** 
 179:main.c        **** 
 180:main.c        **** CY_ISR(spis_1_ss)
 181:main.c        **** {
 354              		.loc 1 181 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 8
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 90B5     		push	{r4, r7, lr}
 359              		.cfi_def_cfa_offset 12
 360              		.cfi_offset 4, -12
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 83B0     		sub	sp, sp, #12
 364              		.cfi_def_cfa_offset 24
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 182:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 367              		.loc 1 182 0
 368 0006 554B     		ldr	r3, .L5
 369 0008 1B78     		ldrb	r3, [r3]
 370 000a DBB2     		uxtb	r3, r3
 371 000c 002B     		cmp	r3, #0
 372 000e 0CBF     		ite	eq
 373 0010 0123     		moveq	r3, #1
 374 0012 0023     		movne	r3, #0
 375 0014 DBB2     		uxtb	r3, r3
 376 0016 1A46     		mov	r2, r3
 377 0018 504B     		ldr	r3, .L5
 378 001a 1A70     		strb	r2, [r3]
 183:main.c        **** 
 184:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 379              		.loc 1 184 0
 380 001c 4F4B     		ldr	r3, .L5
 381 001e 1B78     		ldrb	r3, [r3]
 382 0020 DBB2     		uxtb	r3, r3
 383 0022 002B     		cmp	r3, #0
 384 0024 0CBF     		ite	eq
 385 0026 0123     		moveq	r3, #1
 386 0028 0023     		movne	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 11


 387 002a DBB2     		uxtb	r3, r3
 388 002c 1946     		mov	r1, r3
 389 002e 4C4A     		ldr	r2, .L5+4
 390 0030 1A23     		movs	r3, #26
 391 0032 03FB01F3 		mul	r3, r3, r1
 392 0036 1344     		add	r3, r3, r2
 393 0038 1B78     		ldrb	r3, [r3]
 394 003a DBB2     		uxtb	r3, r3
 395 003c FE2B     		cmp	r3, #254
 396 003e 4FD1     		bne	.L2
 397              		.loc 1 184 0 is_stmt 0 discriminator 1
 398 0040 464B     		ldr	r3, .L5
 399 0042 1B78     		ldrb	r3, [r3]
 400 0044 DBB2     		uxtb	r3, r3
 401 0046 002B     		cmp	r3, #0
 402 0048 0CBF     		ite	eq
 403 004a 0123     		moveq	r3, #1
 404 004c 0023     		movne	r3, #0
 405 004e DBB2     		uxtb	r3, r3
 406 0050 1946     		mov	r1, r3
 407 0052 434A     		ldr	r2, .L5+4
 408 0054 1A23     		movs	r3, #26
 409 0056 03FB01F3 		mul	r3, r3, r1
 410 005a 1344     		add	r3, r3, r2
 411 005c 1933     		adds	r3, r3, #25
 412 005e 1B78     		ldrb	r3, [r3]
 413 0060 DBB2     		uxtb	r3, r3
 414 0062 FD2B     		cmp	r3, #253
 415 0064 3CD1     		bne	.L2
 416              	.LBB2:
 185:main.c        ****     {
 186:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 417              		.loc 1 186 0 is_stmt 1
 418 0066 0023     		movs	r3, #0
 419 0068 7B60     		str	r3, [r7, #4]
 420 006a 34E0     		b	.L3
 421              	.L4:
 187:main.c        ****         {
 188:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 422              		.loc 1 188 0 discriminator 3
 423 006c 3B4B     		ldr	r3, .L5
 424 006e 1B78     		ldrb	r3, [r3]
 425 0070 DBB2     		uxtb	r3, r3
 426 0072 002B     		cmp	r3, #0
 427 0074 0CBF     		ite	eq
 428 0076 0123     		moveq	r3, #1
 429 0078 0023     		movne	r3, #0
 430 007a DBB2     		uxtb	r3, r3
 431 007c 1846     		mov	r0, r3
 432 007e 7B68     		ldr	r3, [r7, #4]
 433 0080 5B00     		lsls	r3, r3, #1
 434 0082 0133     		adds	r3, r3, #1
 435 0084 3649     		ldr	r1, .L5+4
 436 0086 1A22     		movs	r2, #26
 437 0088 02FB00F2 		mul	r2, r2, r0
 438 008c 0A44     		add	r2, r2, r1
 439 008e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 12


 440 0090 1B78     		ldrb	r3, [r3]
 441 0092 DBB2     		uxtb	r3, r3
 442 0094 9BB2     		uxth	r3, r3
 443 0096 1B02     		lsls	r3, r3, #8
 444 0098 9AB2     		uxth	r2, r3
 445 009a 304B     		ldr	r3, .L5
 446 009c 1B78     		ldrb	r3, [r3]
 447 009e DBB2     		uxtb	r3, r3
 448 00a0 002B     		cmp	r3, #0
 449 00a2 0CBF     		ite	eq
 450 00a4 0123     		moveq	r3, #1
 451 00a6 0023     		movne	r3, #0
 452 00a8 DBB2     		uxtb	r3, r3
 453 00aa 1C46     		mov	r4, r3
 454 00ac 7B68     		ldr	r3, [r7, #4]
 455 00ae 0133     		adds	r3, r3, #1
 456 00b0 5B00     		lsls	r3, r3, #1
 457 00b2 2B48     		ldr	r0, .L5+4
 458 00b4 1A21     		movs	r1, #26
 459 00b6 01FB04F1 		mul	r1, r1, r4
 460 00ba 0144     		add	r1, r1, r0
 461 00bc 0B44     		add	r3, r3, r1
 462 00be 1B78     		ldrb	r3, [r3]
 463 00c0 DBB2     		uxtb	r3, r3
 464 00c2 9BB2     		uxth	r3, r3
 465 00c4 1344     		add	r3, r3, r2
 466 00c6 99B2     		uxth	r1, r3
 467 00c8 264A     		ldr	r2, .L5+8
 468 00ca 7B68     		ldr	r3, [r7, #4]
 469 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 186:main.c        ****         {
 470              		.loc 1 186 0 discriminator 3
 471 00d0 7B68     		ldr	r3, [r7, #4]
 472 00d2 0133     		adds	r3, r3, #1
 473 00d4 7B60     		str	r3, [r7, #4]
 474              	.L3:
 186:main.c        ****         {
 475              		.loc 1 186 0 is_stmt 0 discriminator 1
 476 00d6 244B     		ldr	r3, .L5+12
 477 00d8 1B68     		ldr	r3, [r3]
 478 00da 7A68     		ldr	r2, [r7, #4]
 479 00dc 9A42     		cmp	r2, r3
 480 00de C5DB     		blt	.L4
 481              	.L2:
 482              	.LBE2:
 189:main.c        ****         }
 190:main.c        ****     }
 191:main.c        ****     SPIS_1_ClearRxBuffer();
 483              		.loc 1 191 0 is_stmt 1
 484 00e0 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 192:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 485              		.loc 1 192 0
 486 00e4 214B     		ldr	r3, .L5+16
 487 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 488 00e8 1846     		mov	r0, r3
 489 00ea FFF7FEFF 		bl	CyDmaClearPendingDrq
 193:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 13


 194:main.c        ****     //set up the next DMA transaction
 195:main.c        **** 
 196:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 490              		.loc 1 196 0
 491 00ee 1B4B     		ldr	r3, .L5
 492 00f0 1B78     		ldrb	r3, [r3]
 493 00f2 DBB2     		uxtb	r3, r3
 494 00f4 1A46     		mov	r2, r3
 495 00f6 1E4B     		ldr	r3, .L5+20
 496 00f8 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 497 00fa 0223     		movs	r3, #2
 498 00fc FE22     		movs	r2, #254
 499 00fe 1A21     		movs	r1, #26
 500 0100 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 197:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 501              		.loc 1 197 0
 502 0104 154B     		ldr	r3, .L5
 503 0106 1B78     		ldrb	r3, [r3]
 504 0108 DBB2     		uxtb	r3, r3
 505 010a 1A46     		mov	r2, r3
 506 010c 184B     		ldr	r3, .L5+20
 507 010e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 508 0110 124B     		ldr	r3, .L5
 509 0112 1B78     		ldrb	r3, [r3]
 510 0114 DBB2     		uxtb	r3, r3
 511 0116 1A46     		mov	r2, r3
 512 0118 1A23     		movs	r3, #26
 513 011a 03FB02F3 		mul	r3, r3, r2
 514 011e 104A     		ldr	r2, .L5+4
 515 0120 1344     		add	r3, r3, r2
 516 0122 9BB2     		uxth	r3, r3
 517 0124 1A46     		mov	r2, r3
 518 0126 46F25B41 		movw	r1, #25691
 519 012a FFF7FEFF 		bl	CyDmaTdSetAddress
 198:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 520              		.loc 1 198 0
 521 012e 0F4B     		ldr	r3, .L5+16
 522 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 523 0132 0A4B     		ldr	r3, .L5
 524 0134 1B78     		ldrb	r3, [r3]
 525 0136 DBB2     		uxtb	r3, r3
 526 0138 1946     		mov	r1, r3
 527 013a 0D4B     		ldr	r3, .L5+20
 528 013c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 529 013e 1946     		mov	r1, r3
 530 0140 1046     		mov	r0, r2
 531 0142 FFF7FEFF 		bl	CyDmaChSetInitialTd
 199:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 532              		.loc 1 199 0
 533 0146 094B     		ldr	r3, .L5+16
 534 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 535 014a 0121     		movs	r1, #1
 536 014c 1846     		mov	r0, r3
 537 014e FFF7FEFF 		bl	CyDmaChEnable
 200:main.c        **** 
 201:main.c        **** }
 538              		.loc 1 201 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 14


 539 0152 00BF     		nop
 540 0154 0C37     		adds	r7, r7, #12
 541              		.cfi_def_cfa_offset 12
 542 0156 BD46     		mov	sp, r7
 543              		.cfi_def_cfa_register 13
 544              		@ sp needed
 545 0158 90BD     		pop	{r4, r7, pc}
 546              	.L6:
 547 015a 00BF     		.align	2
 548              	.L5:
 549 015c 00000000 		.word	currentPluckBuffer
 550 0160 00000000 		.word	rxBufferPluck
 551 0164 00000000 		.word	strings
 552 0168 00000000 		.word	numStrings
 553 016c 00000000 		.word	rx1Channel
 554 0170 00000000 		.word	rx1TD
 555              		.cfi_endproc
 556              	.LFE64:
 557              		.size	spis_1_ss, .-spis_1_ss
 558              		.global	spiAdjusted
 559              		.bss
 560              		.type	spiAdjusted, %object
 561              		.size	spiAdjusted, 1
 562              	spiAdjusted:
 563 0053 00       		.space	1
 564              		.global	mySpiCounter
 565              		.type	mySpiCounter, %object
 566              		.size	mySpiCounter, 1
 567              	mySpiCounter:
 568 0054 00       		.space	1
 569              		.global	offsetErrorCount
 570 0055 00       		.align	1
 571              		.type	offsetErrorCount, %object
 572              		.size	offsetErrorCount, 2
 573              	offsetErrorCount:
 574 0056 0000     		.space	2
 575              		.global	SPI2errorflag
 576              		.type	SPI2errorflag, %object
 577              		.size	SPI2errorflag, 1
 578              	SPI2errorflag:
 579 0058 00       		.space	1
 580              		.global	bar_index
 581 0059 000000   		.align	2
 582              		.type	bar_index, %object
 583              		.size	bar_index, 4
 584              	bar_index:
 585 005c 00000000 		.space	4
 586              		.comm	knobs,4,4
 587              		.comm	prevKnobs,4,4
 588              		.comm	knobs7bit,4,4
 589              		.comm	prevKnobs7bit,4,4
 590              		.global	SPI2started
 591              		.type	SPI2started, %object
 592              		.size	SPI2started, 1
 593              	SPI2started:
 594 0060 00       		.space	1
 595              		.global	whichMacro
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 15


 596              		.type	whichMacro, %object
 597              		.size	whichMacro, 1
 598              	whichMacro:
 599 0061 00       		.space	1
 600              		.section	.text.spis_2_ss,"ax",%progbits
 601              		.align	2
 602              		.global	spis_2_ss
 603              		.thumb
 604              		.thumb_func
 605              		.type	spis_2_ss, %function
 606              	spis_2_ss:
 607              	.LFB65:
 202:main.c        **** 
 203:main.c        **** 
 204:main.c        **** 
 205:main.c        **** uint8_t spiAdjusted = 0;
 206:main.c        **** uint8_t mySpiCounter = 0;
 207:main.c        **** volatile uint16_t offsetErrorCount = 0;
 208:main.c        **** volatile uint8_t SPI2errorflag = 0;
 209:main.c        **** volatile int bar_index = 0;
 210:main.c        **** uint8_t knobs[4];
 211:main.c        **** uint8_t prevKnobs[4];
 212:main.c        **** 
 213:main.c        **** uint8_t knobs7bit[4];
 214:main.c        **** uint8_t prevKnobs7bit[4];
 215:main.c        **** 
 216:main.c        **** volatile uint8_t SPI2started = 0;
 217:main.c        **** 
 218:main.c        **** uint8_t whichMacro = 0;
 219:main.c        **** 
 220:main.c        **** CY_ISR(spis_2_ss)
 221:main.c        **** {
 608              		.loc 1 221 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 1, uses_anonymous_args = 0
 612 0000 80B5     		push	{r7, lr}
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 7, -8
 615              		.cfi_offset 14, -4
 616 0002 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 222:main.c        **** 
 223:main.c        ****     currentBarBuffer = !currentBarBuffer;
 618              		.loc 1 223 0
 619 0004 214B     		ldr	r3, .L8
 620 0006 1B78     		ldrb	r3, [r3]
 621 0008 DBB2     		uxtb	r3, r3
 622 000a 002B     		cmp	r3, #0
 623 000c 0CBF     		ite	eq
 624 000e 0123     		moveq	r3, #1
 625 0010 0023     		movne	r3, #0
 626 0012 DBB2     		uxtb	r3, r3
 627 0014 1A46     		mov	r2, r3
 628 0016 1D4B     		ldr	r3, .L8
 629 0018 1A70     		strb	r2, [r3]
 224:main.c        ****     SPIS_2_ClearRxBuffer();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 16


 630              		.loc 1 224 0
 631 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 225:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 632              		.loc 1 225 0
 633 001e 1C4B     		ldr	r3, .L8+4
 634 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 635 0022 1846     		mov	r0, r3
 636 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 226:main.c        **** 
 227:main.c        ****     //set up the next DMA transaction
 228:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 637              		.loc 1 228 0
 638 0028 184B     		ldr	r3, .L8
 639 002a 1B78     		ldrb	r3, [r3]
 640 002c DBB2     		uxtb	r3, r3
 641 002e 1A46     		mov	r2, r3
 642 0030 184B     		ldr	r3, .L8+8
 643 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 644 0034 0623     		movs	r3, #6
 645 0036 FE22     		movs	r2, #254
 646 0038 0821     		movs	r1, #8
 647 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 229:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 648              		.loc 1 229 0
 649 003e 134B     		ldr	r3, .L8
 650 0040 1B78     		ldrb	r3, [r3]
 651 0042 DBB2     		uxtb	r3, r3
 652 0044 1A46     		mov	r2, r3
 653 0046 134B     		ldr	r3, .L8+8
 654 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 655 004a 104B     		ldr	r3, .L8
 656 004c 1B78     		ldrb	r3, [r3]
 657 004e DBB2     		uxtb	r3, r3
 658 0050 DB00     		lsls	r3, r3, #3
 659 0052 114A     		ldr	r2, .L8+12
 660 0054 1344     		add	r3, r3, r2
 661 0056 9BB2     		uxth	r3, r3
 662 0058 1A46     		mov	r2, r3
 663 005a 46F25751 		movw	r1, #25943
 664 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 230:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 665              		.loc 1 230 0
 666 0062 0B4B     		ldr	r3, .L8+4
 667 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 668 0066 094B     		ldr	r3, .L8
 669 0068 1B78     		ldrb	r3, [r3]
 670 006a DBB2     		uxtb	r3, r3
 671 006c 1946     		mov	r1, r3
 672 006e 094B     		ldr	r3, .L8+8
 673 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 674 0072 1946     		mov	r1, r3
 675 0074 1046     		mov	r0, r2
 676 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 231:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 677              		.loc 1 231 0
 678 007a 054B     		ldr	r3, .L8+4
 679 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 17


 680 007e 0121     		movs	r1, #1
 681 0080 1846     		mov	r0, r3
 682 0082 FFF7FEFF 		bl	CyDmaChEnable
 232:main.c        **** }
 683              		.loc 1 232 0
 684 0086 00BF     		nop
 685 0088 80BD     		pop	{r7, pc}
 686              	.L9:
 687 008a 00BF     		.align	2
 688              	.L8:
 689 008c 00000000 		.word	currentBarBuffer
 690 0090 00000000 		.word	rx2Channel
 691 0094 00000000 		.word	rx2TD
 692 0098 00000000 		.word	rxBufferBar
 693              		.cfi_endproc
 694              	.LFE65:
 695              		.size	spis_2_ss, .-spis_2_ss
 696              		.bss
 697 0062 0000     		.align	2
 698              	eepromArray:
 699 0064 0000     		.space	2
 700              		.global	array
 701 0066 0000     		.align	2
 702              		.type	array, %object
 703              		.size	array, 2
 704              	array:
 705 0068 0000     		.space	2
 706              		.comm	eepromReturnValue,1,1
 707              		.global	Em_EEPROM_em_EepromStorage
 708              		.section	.rodata
 709              		.align	8
 710              		.type	Em_EEPROM_em_EepromStorage, %object
 711              		.size	Em_EEPROM_em_EepromStorage, 1024
 712              	Em_EEPROM_em_EepromStorage:
 713 0000 00000000 		.space	1024
 713      00000000 
 713      00000000 
 713      00000000 
 713      00000000 
 714              		.comm	eeprom_cnt,1,1
 715              		.comm	status,4,4
 716              		.comm	ptr,4,4
 717              		.global	barCount
 718              		.bss
 719 006a 0000     		.align	2
 720              		.type	barCount, %object
 721              		.size	barCount, 4
 722              	barCount:
 723 006c 00000000 		.space	4
 724              		.section	.text.Vbus_function,"ax",%progbits
 725              		.align	2
 726              		.global	Vbus_function
 727              		.thumb
 728              		.thumb_func
 729              		.type	Vbus_function, %function
 730              	Vbus_function:
 731              	.LFB66:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 18


 233:main.c        **** 
 234:main.c        **** 
 235:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 236:main.c        ****                                             
 237:main.c        ****     uint8 array[] ={ 0, 0 };
 238:main.c        ****                                 
 239:main.c        ****     /*Return status for EEPROM and UART*/ 
 240:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 241:main.c        **** 
 242:main.c        **** 
 243:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 244:main.c        **** #if defined (__ICCARM__)
 245:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 246:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 247:main.c        **** #else
 248:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 249:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 250:main.c        **** #endif /* defined (__ICCARM__) */
 251:main.c        **** 
 252:main.c        ****     uint8 eeprom_cnt;
 253:main.c        ****     cystatus status;
 254:main.c        ****     volatile const uint8 * ptr;
 255:main.c        **** volatile int barCount = 0;
 256:main.c        **** 
 257:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 258:main.c        ****     
 259:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 260:main.c        **** 
 261:main.c        **** CY_ISR(Vbus_function)
 262:main.c        **** {
 732              		.loc 1 262 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736 0000 80B5     		push	{r7, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 00AF     		add	r7, sp, #0
 741              		.cfi_def_cfa_register 7
 263:main.c        ****     //plug or unplug event
 264:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 265:main.c        ****     //otherwise, restart
 266:main.c        ****     my_Vbus_ISR_ClearPending();
 742              		.loc 1 266 0
 743 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 267:main.c        ****     vBusPin_ClearInterrupt();
 744              		.loc 1 267 0
 745 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 268:main.c        ****     restartSystemCheck();
 746              		.loc 1 268 0
 747 000c FFF7FEFF 		bl	restartSystemCheck
 269:main.c        **** 
 270:main.c        **** }
 748              		.loc 1 270 0
 749 0010 00BF     		nop
 750 0012 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 19


 751              		.cfi_endproc
 752              	.LFE66:
 753              		.size	Vbus_function, .-Vbus_function
 754              		.section	.text.restartSystemCheck,"ax",%progbits
 755              		.align	2
 756              		.global	restartSystemCheck
 757              		.thumb
 758              		.thumb_func
 759              		.type	restartSystemCheck, %function
 760              	restartSystemCheck:
 761              	.LFB67:
 271:main.c        **** 
 272:main.c        **** void restartSystemCheck()
 273:main.c        **** {
 762              		.loc 1 273 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0000 80B5     		push	{r7, lr}
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 274:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 772              		.loc 1 274 0
 773 0004 184B     		ldr	r3, .L15
 774 0006 0222     		movs	r2, #2
 775 0008 1849     		ldr	r1, .L15+4
 776 000a 0020     		movs	r0, #0
 777 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 778 0010 0346     		mov	r3, r0
 779 0012 1A46     		mov	r2, r3
 780 0014 164B     		ldr	r3, .L15+8
 781 0016 1A70     		strb	r2, [r3]
 275:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 276:main.c        ****     if (USB_VBusPresent() == 1)
 782              		.loc 1 276 0
 783 0018 FFF7FEFF 		bl	USB_VBusPresent
 784 001c 0346     		mov	r3, r0
 785 001e 012B     		cmp	r3, #1
 786 0020 20D1     		bne	.L14
 277:main.c        ****     {
 278:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 787              		.loc 1 278 0
 788 0022 124B     		ldr	r3, .L15+4
 789 0024 1B78     		ldrb	r3, [r3]
 790 0026 DBB2     		uxtb	r3, r3
 791 0028 012B     		cmp	r3, #1
 792 002a 0CD1     		bne	.L13
 279:main.c        ****         {
 280:main.c        ****             //a flag says we just restarted
 281:main.c        ****             //write a zero so it knows next time that it's OK to restart
 282:main.c        ****             array[0] = 0;
 793              		.loc 1 282 0
 794 002c 114B     		ldr	r3, .L15+12
 795 002e 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 20


 796 0030 1A70     		strb	r2, [r3]
 283:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 797              		.loc 1 283 0
 798 0032 0D4B     		ldr	r3, .L15
 799 0034 0222     		movs	r2, #2
 800 0036 0F49     		ldr	r1, .L15+12
 801 0038 0020     		movs	r0, #0
 802 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 284:main.c        ****             USB_check_flag = 1;
 803              		.loc 1 284 0
 804 003e 0E4B     		ldr	r3, .L15+16
 805 0040 0122     		movs	r2, #1
 806 0042 1A70     		strb	r2, [r3]
 285:main.c        ****         }
 286:main.c        ****         else
 287:main.c        ****         {
 288:main.c        ****            //otherwise, we need to restart
 289:main.c        ****            array[0] = 1;
 290:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 291:main.c        ****             USB_Stop();
 292:main.c        ****             I2C_1_Stop();
 293:main.c        ****             CySoftwareReset();
 294:main.c        ****         }
 295:main.c        ****     }
 296:main.c        **** }
 807              		.loc 1 296 0
 808 0044 0EE0     		b	.L14
 809              	.L13:
 289:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 810              		.loc 1 289 0
 811 0046 0B4B     		ldr	r3, .L15+12
 812 0048 0122     		movs	r2, #1
 813 004a 1A70     		strb	r2, [r3]
 290:main.c        ****             USB_Stop();
 814              		.loc 1 290 0
 815 004c 064B     		ldr	r3, .L15
 816 004e 0222     		movs	r2, #2
 817 0050 0849     		ldr	r1, .L15+12
 818 0052 0020     		movs	r0, #0
 819 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 291:main.c        ****             I2C_1_Stop();
 820              		.loc 1 291 0
 821 0058 FFF7FEFF 		bl	USB_Stop
 292:main.c        ****             CySoftwareReset();
 822              		.loc 1 292 0
 823 005c FFF7FEFF 		bl	I2C_1_Stop
 293:main.c        ****         }
 824              		.loc 1 293 0
 825 0060 FFF7FEFF 		bl	CySoftwareReset
 826              	.L14:
 827              		.loc 1 296 0
 828 0064 00BF     		nop
 829 0066 80BD     		pop	{r7, pc}
 830              	.L16:
 831              		.align	2
 832              	.L15:
 833 0068 00000000 		.word	Em_EEPROM_context
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 21


 834 006c 64000000 		.word	eepromArray
 835 0070 00000000 		.word	eepromReturnValue
 836 0074 00000000 		.word	array
 837 0078 00000000 		.word	USB_check_flag
 838              		.cfi_endproc
 839              	.LFE67:
 840              		.size	restartSystemCheck, .-restartSystemCheck
 841              		.global	__aeabi_fcmpgt
 842              		.global	__aeabi_fcmplt
 843              		.section	.text.LEAF_clip,"ax",%progbits
 844              		.align	2
 845              		.global	LEAF_clip
 846              		.thumb
 847              		.thumb_func
 848              		.type	LEAF_clip, %function
 849              	LEAF_clip:
 850              	.LFB68:
 297:main.c        ****     
 298:main.c        **** #define INV_440 0.0022727272727273f
 299:main.c        **** 
 300:main.c        **** float   LEAF_clip(float min, float val, float max)
 301:main.c        **** {
 851              		.loc 1 301 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 24
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855 0000 80B5     		push	{r7, lr}
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 7, -8
 858              		.cfi_offset 14, -4
 859 0002 86B0     		sub	sp, sp, #24
 860              		.cfi_def_cfa_offset 32
 861 0004 00AF     		add	r7, sp, #0
 862              		.cfi_def_cfa_register 7
 863 0006 F860     		str	r0, [r7, #12]	@ float
 864 0008 B960     		str	r1, [r7, #8]	@ float
 865 000a 7A60     		str	r2, [r7, #4]	@ float
 302:main.c        ****     float tempmin = min;
 866              		.loc 1 302 0
 867 000c FB68     		ldr	r3, [r7, #12]	@ float
 868 000e 7B61     		str	r3, [r7, #20]	@ float
 303:main.c        ****     float tempmax = max;
 869              		.loc 1 303 0
 870 0010 7B68     		ldr	r3, [r7, #4]	@ float
 871 0012 3B61     		str	r3, [r7, #16]	@ float
 304:main.c        ****     if (min > max)
 872              		.loc 1 304 0
 873 0014 7968     		ldr	r1, [r7, #4]	@ float
 874 0016 F868     		ldr	r0, [r7, #12]	@ float
 875 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 876 001c 0346     		mov	r3, r0
 877 001e 002B     		cmp	r3, #0
 878 0020 03D0     		beq	.L18
 305:main.c        ****     {
 306:main.c        ****         tempmin = max;
 879              		.loc 1 306 0
 880 0022 7B68     		ldr	r3, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 22


 881 0024 7B61     		str	r3, [r7, #20]	@ float
 307:main.c        ****         tempmax = min;
 882              		.loc 1 307 0
 883 0026 FB68     		ldr	r3, [r7, #12]	@ float
 884 0028 3B61     		str	r3, [r7, #16]	@ float
 885              	.L18:
 308:main.c        ****     }
 309:main.c        ****     if (val < tempmin)
 886              		.loc 1 309 0
 887 002a 7969     		ldr	r1, [r7, #20]	@ float
 888 002c B868     		ldr	r0, [r7, #8]	@ float
 889 002e FFF7FEFF 		bl	__aeabi_fcmplt
 890 0032 0346     		mov	r3, r0
 891 0034 002B     		cmp	r3, #0
 892 0036 01D0     		beq	.L28
 310:main.c        ****     {
 311:main.c        ****         return tempmin;
 893              		.loc 1 311 0
 894 0038 7B69     		ldr	r3, [r7, #20]	@ float
 895 003a 09E0     		b	.L22
 896              	.L28:
 312:main.c        ****     }
 313:main.c        ****     else if (val > tempmax)
 897              		.loc 1 313 0
 898 003c 3969     		ldr	r1, [r7, #16]	@ float
 899 003e B868     		ldr	r0, [r7, #8]	@ float
 900 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 901 0044 0346     		mov	r3, r0
 902 0046 002B     		cmp	r3, #0
 903 0048 01D0     		beq	.L29
 314:main.c        ****     {
 315:main.c        ****         return tempmax;
 904              		.loc 1 315 0
 905 004a 3B69     		ldr	r3, [r7, #16]	@ float
 906 004c 00E0     		b	.L22
 907              	.L29:
 316:main.c        ****     }
 317:main.c        ****     else
 318:main.c        ****     {
 319:main.c        ****         return val;
 908              		.loc 1 319 0
 909 004e BB68     		ldr	r3, [r7, #8]	@ float
 910              	.L22:
 320:main.c        ****     }
 321:main.c        **** }
 911              		.loc 1 321 0
 912 0050 1846     		mov	r0, r3
 913 0052 1837     		adds	r7, r7, #24
 914              		.cfi_def_cfa_offset 8
 915 0054 BD46     		mov	sp, r7
 916              		.cfi_def_cfa_register 13
 917              		@ sp needed
 918 0056 80BD     		pop	{r7, pc}
 919              		.cfi_endproc
 920              	.LFE68:
 921              		.size	LEAF_clip, .-LEAF_clip
 922              		.global	__aeabi_fcmple
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 23


 923              		.global	__aeabi_fmul
 924              		.section	.text.mtof,"ax",%progbits
 925              		.align	2
 926              		.global	mtof
 927              		.thumb
 928              		.thumb_func
 929              		.type	mtof, %function
 930              	mtof:
 931              	.LFB69:
 322:main.c        **** float mtof(float f)
 323:main.c        **** {
 932              		.loc 1 323 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 8
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936 0000 80B5     		push	{r7, lr}
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 7, -8
 939              		.cfi_offset 14, -4
 940 0002 82B0     		sub	sp, sp, #8
 941              		.cfi_def_cfa_offset 16
 942 0004 00AF     		add	r7, sp, #0
 943              		.cfi_def_cfa_register 7
 944 0006 7860     		str	r0, [r7, #4]	@ float
 324:main.c        ****     if (f <= -1500.0f) return(0);
 945              		.loc 1 324 0
 946 0008 1349     		ldr	r1, .L40
 947 000a 7868     		ldr	r0, [r7, #4]	@ float
 948 000c FFF7FEFF 		bl	__aeabi_fcmple
 949 0010 0346     		mov	r3, r0
 950 0012 002B     		cmp	r3, #0
 951 0014 02D0     		beq	.L38
 952              		.loc 1 324 0 is_stmt 0 discriminator 1
 953 0016 4FF00003 		mov	r3, #0
 954 001a 19E0     		b	.L33
 955              	.L38:
 325:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 956              		.loc 1 325 0 is_stmt 1
 957 001c 0F49     		ldr	r1, .L40+4
 958 001e 7868     		ldr	r0, [r7, #4]	@ float
 959 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 960 0024 0346     		mov	r3, r0
 961 0026 002B     		cmp	r3, #0
 962 0028 04D0     		beq	.L39
 963              		.loc 1 325 0 is_stmt 0 discriminator 1
 964 002a 0C48     		ldr	r0, .L40+4
 965 002c FFF7FEFF 		bl	mtof
 966 0030 0346     		mov	r3, r0
 967 0032 0DE0     		b	.L33
 968              	.L39:
 326:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 969              		.loc 1 326 0 is_stmt 1
 970 0034 0A49     		ldr	r1, .L40+8
 971 0036 7868     		ldr	r0, [r7, #4]	@ float
 972 0038 FFF7FEFF 		bl	__aeabi_fmul
 973 003c 0346     		mov	r3, r0
 974 003e 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 24


 975 0040 FFF7FEFF 		bl	expf
 976 0044 0346     		mov	r3, r0
 977 0046 0749     		ldr	r1, .L40+12
 978 0048 1846     		mov	r0, r3
 979 004a FFF7FEFF 		bl	__aeabi_fmul
 980 004e 0346     		mov	r3, r0
 981              	.L33:
 327:main.c        **** }
 982              		.loc 1 327 0
 983 0050 1846     		mov	r0, r3
 984 0052 0837     		adds	r7, r7, #8
 985              		.cfi_def_cfa_offset 8
 986 0054 BD46     		mov	sp, r7
 987              		.cfi_def_cfa_register 13
 988              		@ sp needed
 989 0056 80BD     		pop	{r7, pc}
 990              	.L41:
 991              		.align	2
 992              	.L40:
 993 0058 0080BBC4 		.word	-994344960
 994 005c 0060BB44 		.word	1153130496
 995 0060 20986C3D 		.word	1030527008
 996 0064 13D00241 		.word	1090703379
 997              		.cfi_endproc
 998              	.LFE69:
 999              		.size	mtof, .-mtof
 1000              		.section	.text.ftom,"ax",%progbits
 1001              		.align	2
 1002              		.global	ftom
 1003              		.thumb
 1004              		.thumb_func
 1005              		.type	ftom, %function
 1006              	ftom:
 1007              	.LFB70:
 328:main.c        **** 
 329:main.c        **** float ftom(float f)
 330:main.c        **** {
 1008              		.loc 1 330 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012 0000 80B5     		push	{r7, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 7, -8
 1015              		.cfi_offset 14, -4
 1016 0002 82B0     		sub	sp, sp, #8
 1017              		.cfi_def_cfa_offset 16
 1018 0004 00AF     		add	r7, sp, #0
 1019              		.cfi_def_cfa_register 7
 1020 0006 7860     		str	r0, [r7, #4]	@ float
 331:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 1021              		.loc 1 331 0
 1022 0008 4FF00001 		mov	r1, #0
 1023 000c 7868     		ldr	r0, [r7, #4]	@ float
 1024 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 1025 0012 0346     		mov	r3, r0
 1026 0014 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 25


 1027 0016 0ED0     		beq	.L48
 1028              		.loc 1 331 0 is_stmt 0 discriminator 1
 1029 0018 0949     		ldr	r1, .L49
 1030 001a 7868     		ldr	r0, [r7, #4]	@ float
 1031 001c FFF7FEFF 		bl	__aeabi_fmul
 1032 0020 0346     		mov	r3, r0
 1033 0022 1846     		mov	r0, r3
 1034 0024 FFF7FEFF 		bl	logf
 1035 0028 0346     		mov	r3, r0
 1036 002a 0649     		ldr	r1, .L49+4
 1037 002c 1846     		mov	r0, r3
 1038 002e FFF7FEFF 		bl	__aeabi_fmul
 1039 0032 0346     		mov	r3, r0
 1040 0034 00E0     		b	.L46
 1041              	.L48:
 1042              		.loc 1 331 0 discriminator 2
 1043 0036 044B     		ldr	r3, .L49+8
 1044              	.L46:
 332:main.c        **** }
 1045              		.loc 1 332 0 is_stmt 1 discriminator 5
 1046 0038 1846     		mov	r0, r3
 1047 003a 0837     		adds	r7, r7, #8
 1048              		.cfi_def_cfa_offset 8
 1049 003c BD46     		mov	sp, r7
 1050              		.cfi_def_cfa_register 13
 1051              		@ sp needed
 1052 003e 80BD     		pop	{r7, pc}
 1053              	.L50:
 1054              		.align	2
 1055              	.L49:
 1056 0040 D27EFA3D 		.word	1039826642
 1057 0044 AC7F8A41 		.word	1099595692
 1058 0048 0080BBC4 		.word	-994344960
 1059              		.cfi_endproc
 1060              	.LFE70:
 1061              		.size	ftom, .-ftom
 1062              		.global	__aeabi_fsub
 1063              		.global	__aeabi_fadd
 1064              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
 1065              		.align	2
 1066              		.global	LEAF_interpolation_linear
 1067              		.thumb
 1068              		.thumb_func
 1069              		.type	LEAF_interpolation_linear, %function
 1070              	LEAF_interpolation_linear:
 1071              	.LFB71:
 333:main.c        **** 
 334:main.c        **** // alpha, [0.0, 1.0]
 335:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 336:main.c        **** {
 1072              		.loc 1 336 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 24
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076 0000 80B5     		push	{r7, lr}
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 26


 1079              		.cfi_offset 14, -4
 1080 0002 86B0     		sub	sp, sp, #24
 1081              		.cfi_def_cfa_offset 32
 1082 0004 00AF     		add	r7, sp, #0
 1083              		.cfi_def_cfa_register 7
 1084 0006 F860     		str	r0, [r7, #12]	@ float
 1085 0008 B960     		str	r1, [r7, #8]	@ float
 1086 000a 7A60     		str	r2, [r7, #4]	@ float
 337:main.c        ****     float omAlpha = 1.0f - alpha;
 1087              		.loc 1 337 0
 1088 000c 7968     		ldr	r1, [r7, #4]	@ float
 1089 000e 4FF07E50 		mov	r0, #1065353216
 1090 0012 FFF7FEFF 		bl	__aeabi_fsub
 1091 0016 0346     		mov	r3, r0
 1092 0018 7B61     		str	r3, [r7, #20]	@ float
 338:main.c        ****     
 339:main.c        ****     // First 1/2 of interpolation
 340:main.c        ****     float out = A * omAlpha;
 1093              		.loc 1 340 0
 1094 001a 7969     		ldr	r1, [r7, #20]	@ float
 1095 001c F868     		ldr	r0, [r7, #12]	@ float
 1096 001e FFF7FEFF 		bl	__aeabi_fmul
 1097 0022 0346     		mov	r3, r0
 1098 0024 3B61     		str	r3, [r7, #16]	@ float
 341:main.c        ****     
 342:main.c        ****     out += B * alpha;
 1099              		.loc 1 342 0
 1100 0026 7968     		ldr	r1, [r7, #4]	@ float
 1101 0028 B868     		ldr	r0, [r7, #8]	@ float
 1102 002a FFF7FEFF 		bl	__aeabi_fmul
 1103 002e 0346     		mov	r3, r0
 1104 0030 1946     		mov	r1, r3
 1105 0032 3869     		ldr	r0, [r7, #16]	@ float
 1106 0034 FFF7FEFF 		bl	__aeabi_fadd
 1107 0038 0346     		mov	r3, r0
 1108 003a 3B61     		str	r3, [r7, #16]	@ float
 343:main.c        ****     
 344:main.c        ****     return out;
 1109              		.loc 1 344 0
 1110 003c 3B69     		ldr	r3, [r7, #16]	@ float
 345:main.c        **** }
 1111              		.loc 1 345 0
 1112 003e 1846     		mov	r0, r3
 1113 0040 1837     		adds	r7, r7, #24
 1114              		.cfi_def_cfa_offset 8
 1115 0042 BD46     		mov	sp, r7
 1116              		.cfi_def_cfa_register 13
 1117              		@ sp needed
 1118 0044 80BD     		pop	{r7, pc}
 1119              		.cfi_endproc
 1120              	.LFE71:
 1121              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1122              		.comm	I2Cbuff1,256,4
 1123              		.comm	I2Cbuff2,16,4
 1124              		.global	send_it
 1125 0046 00BF     		.bss
 1126              		.type	send_it, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 27


 1127              		.size	send_it, 1
 1128              	send_it:
 1129 0070 00       		.space	1
 1130              		.global	mux_states
 1131              		.data
 1132 000a 0000     		.align	2
 1133              		.type	mux_states, %object
 1134              		.size	mux_states, 24
 1135              	mux_states:
 1136 000c 05       		.byte	5
 1137 000d 00       		.byte	0
 1138 000e 05       		.byte	5
 1139 000f 01       		.byte	1
 1140 0010 05       		.byte	5
 1141 0011 02       		.byte	2
 1142 0012 05       		.byte	5
 1143 0013 03       		.byte	3
 1144 0014 05       		.byte	5
 1145 0015 04       		.byte	4
 1146 0016 00       		.byte	0
 1147 0017 00       		.byte	0
 1148 0018 01       		.byte	1
 1149 0019 00       		.byte	0
 1150 001a 03       		.byte	3
 1151 001b 00       		.byte	0
 1152 001c 04       		.byte	4
 1153 001d 00       		.byte	0
 1154 001e 02       		.byte	2
 1155 001f 00       		.byte	0
 1156 0020 05       		.byte	5
 1157 0021 05       		.byte	5
 1158 0022 06       		.byte	6
 1159 0023 00       		.byte	0
 1160              		.global	i2c_skipped
 1161              		.bss
 1162 0071 000000   		.align	2
 1163              		.type	i2c_skipped, %object
 1164              		.size	i2c_skipped, 12
 1165              	i2c_skipped:
 1166 0074 00000000 		.space	12
 1166      00000000 
 1166      00000000 
 1167              		.global	pedals_low
 1168              		.data
 1169              		.align	2
 1170              		.type	pedals_low, %object
 1171              		.size	pedals_low, 20
 1172              	pedals_low:
 1173 0024 830A     		.short	2691
 1174 0026 0109     		.short	2305
 1175 0028 9909     		.short	2457
 1176 002a 0E02     		.short	526
 1177 002c 9A0E     		.short	3738
 1178 002e 0309     		.short	2307
 1179 0030 C60B     		.short	3014
 1180 0032 8E08     		.short	2190
 1181 0034 E90A     		.short	2793
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 28


 1182 0036 2605     		.short	1318
 1183              		.global	pedals_high
 1184              		.align	2
 1185              		.type	pedals_high, %object
 1186              		.size	pedals_high, 20
 1187              	pedals_high:
 1188 0038 ED0A     		.short	2797
 1189 003a 6509     		.short	2405
 1190 003c 140A     		.short	2580
 1191 003e 8702     		.short	647
 1192 0040 0E0F     		.short	3854
 1193 0042 9D09     		.short	2461
 1194 0044 450C     		.short	3141
 1195 0046 3109     		.short	2353
 1196 0048 760B     		.short	2934
 1197 004a E005     		.short	1504
 1198              		.global	deadzone
 1199              		.align	1
 1200              		.type	deadzone, %object
 1201              		.size	deadzone, 2
 1202              	deadzone:
 1203 004c 9600     		.short	150
 1204              		.global	volumePedal
 1205              		.align	1
 1206              		.type	volumePedal, %object
 1207              		.size	volumePedal, 2
 1208              	volumePedal:
 1209 004e FF0F     		.short	4095
 1210              		.comm	processed_pedals,20,4
 1211              		.comm	prev_processed_pedals,20,4
 1212              		.comm	pedals8bit,10,4
 1213              		.comm	pedals7bit,10,4
 1214              		.comm	prevPedals7bit,10,4
 1215              		.comm	prev_processed_volumePedal,2,2
 1216              		.comm	processed_volumePedal,2,2
 1217              		.global	fretMeasurements
 1218              		.align	2
 1219              		.type	fretMeasurements, %object
 1220              		.size	fretMeasurements, 64
 1221              	fretMeasurements:
 1222 0050 001E7547 		.word	1198857728
 1223 0054 00A07047 		.word	1198563328
 1224 0058 0052F846 		.word	1190679040
 1225 005c 00000000 		.word	0
 1226 0060 00B01A47 		.word	1192931328
 1227 0064 001C2247 		.word	1193417728
 1228 0068 00507546 		.word	1182093312
 1229 006c 00000000 		.word	0
 1230 0070 0000D746 		.word	1188495360
 1231 0074 00F0EB46 		.word	1189867520
 1232 0078 00280446 		.word	1174677504
 1233 007c 00000000 		.word	0
 1234 0080 00481446 		.word	1175734272
 1235 0084 00805446 		.word	1179942912
 1236 0088 00202745 		.word	1160192000
 1237 008c 00000000 		.word	0
 1238              		.global	currentPresetSelection
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 29


 1239              		.bss
 1240              		.align	2
 1241              		.type	currentPresetSelection, %object
 1242              		.size	currentPresetSelection, 4
 1243              	currentPresetSelection:
 1244 0080 00000000 		.space	4
 1245              		.comm	presetNamesArray,896,4
 1246              		.global	presetNumberToLoad
 1247              		.type	presetNumberToLoad, %object
 1248              		.size	presetNumberToLoad, 1
 1249              	presetNumberToLoad:
 1250 0084 00       		.space	1
 1251              		.global	presetLoadedResponse
 1252              		.data
 1253              		.align	2
 1254              		.type	presetLoadedResponse, %object
 1255              		.size	presetLoadedResponse, 2
 1256              	presetLoadedResponse:
 1257 0090 FF       		.byte	-1
 1258 0091 00       		.byte	0
 1259              		.comm	macroNamesArray,7168,4
 1260              		.global	fretScaling
 1261 0092 0000     		.align	2
 1262              		.type	fretScaling, %object
 1263              		.size	fretScaling, 16
 1264              	fretScaling:
 1265 0094 0000803F 		.word	1065353216
 1266 0098 ABAA2A3F 		.word	1059760811
 1267 009c 0000003F 		.word	1056964608
 1268 00a0 0000803E 		.word	1048576000
 1269              		.comm	pedalRatios,40,4
 1270              		.global	last_mux
 1271              		.type	last_mux, %object
 1272              		.size	last_mux, 1
 1273              	last_mux:
 1274 00a4 01       		.byte	1
 1275              		.global	main_counter
 1276              		.bss
 1277              		.type	main_counter, %object
 1278              		.size	main_counter, 1
 1279              	main_counter:
 1280 0085 00       		.space	1
 1281              		.global	neck
 1282              		.type	neck, %object
 1283              		.size	neck, 1
 1284              	neck:
 1285 0086 00       		.space	1
 1286              		.global	dualSlider
 1287              		.type	dualSlider, %object
 1288              		.size	dualSlider, 1
 1289              	dualSlider:
 1290 0087 00       		.space	1
 1291              		.global	enterUp
 1292              		.data
 1293              		.type	enterUp, %object
 1294              		.size	enterUp, 1
 1295              	enterUp:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 30


 1296 00a5 01       		.byte	1
 1297              		.global	voice
 1298              		.bss
 1299              		.type	voice, %object
 1300              		.size	voice, 1
 1301              	voice:
 1302 0088 00       		.space	1
 1303              		.global	editUp
 1304              		.data
 1305              		.type	editUp, %object
 1306              		.size	editUp, 1
 1307              	editUp:
 1308 00a6 01       		.byte	1
 1309              		.global	oct1Up
 1310              		.type	oct1Up, %object
 1311              		.size	oct1Up, 1
 1312              	oct1Up:
 1313 00a7 01       		.byte	1
 1314              		.global	oct4Up
 1315              		.type	oct4Up, %object
 1316              		.size	oct4Up, 1
 1317              	oct4Up:
 1318 00a8 01       		.byte	1
 1319              		.comm	encoderVal,16,4
 1320              		.global	encoderNum
 1321              		.bss
 1322 0089 000000   		.align	2
 1323              		.type	encoderNum, %object
 1324              		.size	encoderNum, 4
 1325              	encoderNum:
 1326 008c 00000000 		.space	4
 1327              		.global	button1Up
 1328              		.type	button1Up, %object
 1329              		.size	button1Up, 1
 1330              	button1Up:
 1331 0090 00       		.space	1
 1332              		.global	button2Up
 1333              		.type	button2Up, %object
 1334              		.size	button2Up, 1
 1335              	button2Up:
 1336 0091 00       		.space	1
 1337              		.global	button3Up
 1338              		.type	button3Up, %object
 1339              		.size	button3Up, 1
 1340              	button3Up:
 1341 0092 00       		.space	1
 1342              		.global	button4Up
 1343              		.type	button4Up, %object
 1344              		.size	button4Up, 1
 1345              	button4Up:
 1346 0093 00       		.space	1
 1347              		.global	patchNum
 1348              		.type	patchNum, %object
 1349              		.size	patchNum, 1
 1350              	patchNum:
 1351 0094 00       		.space	1
 1352              		.comm	copedent,3696,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 31


 1353              		.comm	copedentNamesArray,98,4
 1354              		.comm	prevStringPitchBend,48,4
 1355              		.comm	pedals,480,4
 1356              		.global	pedal_cc_assignments
 1357              		.data
 1358 00a9 000000   		.align	2
 1359              		.type	pedal_cc_assignments, %object
 1360              		.size	pedal_cc_assignments, 10
 1361              	pedal_cc_assignments:
 1362 00ac 00       		.byte	0
 1363 00ad 01       		.byte	1
 1364 00ae 02       		.byte	2
 1365 00af 03       		.byte	3
 1366 00b0 04       		.byte	4
 1367 00b1 08       		.byte	8
 1368 00b2 09       		.byte	9
 1369 00b3 07       		.byte	7
 1370 00b4 06       		.byte	6
 1371 00b5 05       		.byte	5
 1372              		.comm	openStringFrequencies,48,4
 1373              		.comm	stringMappedPositions,48,4
 1374              		.comm	invStringMappedPositions,48,4
 1375              		.comm	stringFrequencies,48,4
 1376              		.comm	stringOctave,48,4
 1377              		.comm	stringPitch,48,4
 1378              		.comm	stringMIDI,48,4
 1379              		.comm	openStringMIDI_Int,48,4
 1380              		.global	OLEDcount
 1381              		.bss
 1382 0095 000000   		.align	2
 1383              		.type	OLEDcount, %object
 1384              		.size	OLEDcount, 4
 1385              	OLEDcount:
 1386 0098 00000000 		.space	4
 1387              		.global	mainOLEDWaitingToSend
 1388              		.align	2
 1389              		.type	mainOLEDWaitingToSend, %object
 1390              		.size	mainOLEDWaitingToSend, 4
 1391              	mainOLEDWaitingToSend:
 1392 009c 00000000 		.space	4
 1393              		.global	macroOLEDWaitingToSend
 1394              		.align	2
 1395              		.type	macroOLEDWaitingToSend, %object
 1396              		.size	macroOLEDWaitingToSend, 4
 1397              	macroOLEDWaitingToSend:
 1398 00a0 00000000 		.space	4
 1399              		.comm	presetAlreadyDisplayed,256,4
 1400              		.global	pedals_float
 1401              		.align	2
 1402              		.type	pedals_float, %object
 1403              		.size	pedals_float, 40
 1404              	pedals_float:
 1405 00a4 00000000 		.space	40
 1405      00000000 
 1405      00000000 
 1405      00000000 
 1405      00000000 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 32


 1406              		.global	__aeabi_fdiv
 1407              		.section	.text.map,"ax",%progbits
 1408              		.align	2
 1409              		.global	map
 1410              		.thumb
 1411              		.thumb_func
 1412              		.type	map, %function
 1413              	map:
 1414              	.LFB72:
 346:main.c        **** 
 347:main.c        **** 
 348:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 349:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 350:main.c        **** void USB_service(void);
 351:main.c        **** 
 352:main.c        **** volatile uint8_t I2Cbuff1[256];
 353:main.c        **** volatile uint8_t I2Cbuff2[16];
 354:main.c        **** volatile uint8_t send_it = 0;
 355:main.c        **** 
 356:main.c        **** 
 357:main.c        **** //first mux, 0x70 is first element of array. 
 358:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 359:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 360:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 361:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 362:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,0,0,0,0,0}; //so that pedals and levers can be marked as s
 363:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 364:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 365:main.c        **** uint16_t deadzone = 150;
 366:main.c        **** uint16_t volumePedal = 4095;
 367:main.c        **** uint16_t processed_pedals[10];
 368:main.c        **** uint16_t prev_processed_pedals[10];
 369:main.c        **** uint8_t pedals8bit[10];
 370:main.c        **** uint8_t pedals7bit[10];
 371:main.c        **** uint8_t prevPedals7bit[10];
 372:main.c        **** int16_t prev_processed_volumePedal;
 373:main.c        **** int16_t processed_volumePedal;
 374:main.c        **** 
 375:main.c        **** 
 376:main.c        **** float fretMeasurements[4][4] ={
 377:main.c        **** 
 378:main.c        **** 		{62750.0f, 61600.0f, 31785.0f, 0.0f },
 379:main.c        **** 
 380:main.c        **** 		{39600.0f, 41500.0f, 15700.0f, 0.0f},
 381:main.c        **** 
 382:main.c        **** 		{27520.0f, 30200.0f, 8458.0f, 0.0f},
 383:main.c        **** 
 384:main.c        **** 		{9490.0f, 13600.0f, 2674.0f, 0.0f}
 385:main.c        **** 
 386:main.c        **** 	};
 387:main.c        **** #define NUM_MACROS 8
 388:main.c        **** #define MAX_NUM_PRESETS 64
 389:main.c        **** int currentPresetSelection = 0;
 390:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 391:main.c        **** uint8_t presetNumberToLoad = 0;
 392:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 393:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 33


 394:main.c        **** 
 395:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS][NAME_LENGTH_IN_BYTES];
 396:main.c        **** 
 397:main.c        **** 
 398:main.c        **** 
 399:main.c        **** float fretScaling[4] = {1.0f, 0.6666666666666f, 0.5f, 0.25f};
 400:main.c        **** 
 401:main.c        **** 
 402:main.c        **** #define MAX_ENCODERS 16
 403:main.c        **** 
 404:main.c        **** float pedalRatios[10];
 405:main.c        **** uint8_t last_mux = 1;
 406:main.c        **** volatile uint8_t main_counter = 0;
 407:main.c        **** uint8_t neck = 0;
 408:main.c        **** uint8_t dualSlider = 0;
 409:main.c        **** uint8_t enterUp = 1;
 410:main.c        **** uint8_t voice = 0;
 411:main.c        **** uint8_t editUp = 1;
 412:main.c        **** uint8_t oct1Up = 1;
 413:main.c        **** uint8_t oct4Up = 1;
 414:main.c        **** 
 415:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 416:main.c        **** int encoderNum = 0;
 417:main.c        **** uint8_t button1Up = 0;
 418:main.c        **** uint8_t button2Up = 0;
 419:main.c        **** uint8_t button3Up = 0;
 420:main.c        **** uint8_t button4Up = 0;
 421:main.c        **** uint8_t patchNum = 0;
 422:main.c        **** #define NUM_STRINGS 12
 423:main.c        **** #define NUM_PEDALS 10
 424:main.c        **** 
 425:main.c        **** 
 426:main.c        **** #define MAX_NUM_COPEDENTS 7
 427:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 428:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 429:main.c        **** 
 430:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 431:main.c        **** 
 432:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 433:main.c        **** 
 434:main.c        **** uint8_t pedal_cc_assignments[NUM_PEDALS] = {0, 1, 2, 3, 4, 8, 9, 7, 6, 5};
 435:main.c        **** float openStringFrequencies[NUM_STRINGS];
 436:main.c        **** float stringMappedPositions[NUM_STRINGS];
 437:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 438:main.c        **** float stringFrequencies[NUM_STRINGS];
 439:main.c        **** float stringOctave[NUM_STRINGS];
 440:main.c        **** float stringPitch[NUM_STRINGS];
 441:main.c        **** float stringMIDI[NUM_STRINGS];
 442:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 443:main.c        **** int OLEDcount = 0;
 444:main.c        **** 
 445:main.c        **** int mainOLEDWaitingToSend = 0;
 446:main.c        **** int macroOLEDWaitingToSend = 0;
 447:main.c        **** 
 448:main.c        **** int presetAlreadyDisplayed[MAX_NUM_PRESETS];
 449:main.c        **** 
 450:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 34


 451:main.c        **** 
 452:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 453:main.c        **** {
 1415              		.loc 1 453 0
 1416              		.cfi_startproc
 1417              		@ args = 4, pretend = 0, frame = 16
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419 0000 B0B5     		push	{r4, r5, r7, lr}
 1420              		.cfi_def_cfa_offset 16
 1421              		.cfi_offset 4, -16
 1422              		.cfi_offset 5, -12
 1423              		.cfi_offset 7, -8
 1424              		.cfi_offset 14, -4
 1425 0002 84B0     		sub	sp, sp, #16
 1426              		.cfi_def_cfa_offset 32
 1427 0004 00AF     		add	r7, sp, #0
 1428              		.cfi_def_cfa_register 7
 1429 0006 F860     		str	r0, [r7, #12]	@ float
 1430 0008 B960     		str	r1, [r7, #8]	@ float
 1431 000a 7A60     		str	r2, [r7, #4]	@ float
 1432 000c 3B60     		str	r3, [r7]	@ float
 454:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1433              		.loc 1 454 0
 1434 000e 3968     		ldr	r1, [r7]	@ float
 1435 0010 386A     		ldr	r0, [r7, #32]	@ float
 1436 0012 FFF7FEFF 		bl	__aeabi_fsub
 1437 0016 0346     		mov	r3, r0
 1438 0018 1C46     		mov	r4, r3
 1439 001a B968     		ldr	r1, [r7, #8]	@ float
 1440 001c F868     		ldr	r0, [r7, #12]	@ float
 1441 001e FFF7FEFF 		bl	__aeabi_fsub
 1442 0022 0346     		mov	r3, r0
 1443 0024 1D46     		mov	r5, r3
 1444 0026 B968     		ldr	r1, [r7, #8]	@ float
 1445 0028 7868     		ldr	r0, [r7, #4]	@ float
 1446 002a FFF7FEFF 		bl	__aeabi_fsub
 1447 002e 0346     		mov	r3, r0
 1448 0030 1946     		mov	r1, r3
 1449 0032 2846     		mov	r0, r5
 1450 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1451 0038 0346     		mov	r3, r0
 1452 003a 1946     		mov	r1, r3
 1453 003c 2046     		mov	r0, r4
 1454 003e FFF7FEFF 		bl	__aeabi_fmul
 1455 0042 0346     		mov	r3, r0
 1456 0044 3968     		ldr	r1, [r7]	@ float
 1457 0046 1846     		mov	r0, r3
 1458 0048 FFF7FEFF 		bl	__aeabi_fadd
 1459 004c 0346     		mov	r3, r0
 455:main.c        **** }
 1460              		.loc 1 455 0
 1461 004e 1846     		mov	r0, r3
 1462 0050 1037     		adds	r7, r7, #16
 1463              		.cfi_def_cfa_offset 16
 1464 0052 BD46     		mov	sp, r7
 1465              		.cfi_def_cfa_register 13
 1466              		@ sp needed
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 35


 1467 0054 B0BD     		pop	{r4, r5, r7, pc}
 1468              		.cfi_endproc
 1469              	.LFE72:
 1470              		.size	map, .-map
 1471              		.global	currentNeck
 1472 0056 00BF     		.bss
 1473              		.align	2
 1474              		.type	currentNeck, %object
 1475              		.size	currentNeck, 4
 1476              	currentNeck:
 1477 00cc 00000000 		.space	4
 1478              		.global	editMode
 1479              		.align	2
 1480              		.type	editMode, %object
 1481              		.size	editMode, 4
 1482              	editMode:
 1483 00d0 00000000 		.space	4
 1484              		.global	calibrationMode
 1485              		.align	2
 1486              		.type	calibrationMode, %object
 1487              		.size	calibrationMode, 4
 1488              	calibrationMode:
 1489 00d4 00000000 		.space	4
 1490              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1491              		.align	2
 1492              		.global	burnInitialPedalZeroPositions
 1493              		.thumb
 1494              		.thumb_func
 1495              		.type	burnInitialPedalZeroPositions, %function
 1496              	burnInitialPedalZeroPositions:
 1497              	.LFB73:
 456:main.c        **** void displayCurrentPresetNameAndCopedent();
 457:main.c        **** 
 458:main.c        **** int currentNeck = 0;
 459:main.c        **** 
 460:main.c        **** int editMode = 0;
 461:main.c        **** int calibrationMode = 0;
 462:main.c        **** 
 463:main.c        **** void burnInitialPedalZeroPositions()
 464:main.c        **** {
 1498              		.loc 1 464 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
 1503 0000 80B4     		push	{r7}
 1504              		.cfi_def_cfa_offset 4
 1505              		.cfi_offset 7, -4
 1506 0002 00AF     		add	r7, sp, #0
 1507              		.cfi_def_cfa_register 7
 465:main.c        ****     
 466:main.c        **** }
 1508              		.loc 1 466 0
 1509 0004 00BF     		nop
 1510 0006 BD46     		mov	sp, r7
 1511              		.cfi_def_cfa_register 13
 1512              		@ sp needed
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 36


 1513 0008 80BC     		pop	{r7}
 1514              		.cfi_restore 7
 1515              		.cfi_def_cfa_offset 0
 1516 000a 7047     		bx	lr
 1517              		.cfi_endproc
 1518              	.LFE73:
 1519              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1520              		.global	__aeabi_ui2f
 1521              		.global	__aeabi_i2f
 1522              		.global	__aeabi_f2uiz
 1523              		.section	.text.calculatePedalRatios,"ax",%progbits
 1524              		.align	2
 1525              		.global	calculatePedalRatios
 1526              		.thumb
 1527              		.thumb_func
 1528              		.type	calculatePedalRatios, %function
 1529              	calculatePedalRatios:
 1530              	.LFB74:
 467:main.c        **** 
 468:main.c        **** 
 469:main.c        **** void calculatePedalRatios()
 470:main.c        **** {
 1531              		.loc 1 470 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 8
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 90B5     		push	{r4, r7, lr}
 1536              		.cfi_def_cfa_offset 12
 1537              		.cfi_offset 4, -12
 1538              		.cfi_offset 7, -8
 1539              		.cfi_offset 14, -4
 1540 0002 83B0     		sub	sp, sp, #12
 1541              		.cfi_def_cfa_offset 24
 1542 0004 00AF     		add	r7, sp, #0
 1543              		.cfi_def_cfa_register 7
 1544              	.LBB3:
 471:main.c        **** 
 472:main.c        ****     //add deadzones on edges of pedal sensing
 473:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1545              		.loc 1 473 0
 1546 0006 0023     		movs	r3, #0
 1547 0008 7B60     		str	r3, [r7, #4]
 1548 000a 6EE0     		b	.L57
 1549              	.L58:
 1550              	.LBB4:
 474:main.c        ****     {
 475:main.c        **** 
 476:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1551              		.loc 1 476 0 discriminator 3
 1552 000c 3A4A     		ldr	r2, .L59
 1553 000e 7B68     		ldr	r3, [r7, #4]
 1554 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1555 0014 1846     		mov	r0, r3
 1556 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1557 001a 0446     		mov	r4, r0
 1558 001c 374A     		ldr	r2, .L59+4
 1559 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 37


 1560 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1561 0024 1846     		mov	r0, r3
 1562 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1563 002a 0346     		mov	r3, r0
 1564 002c 1946     		mov	r1, r3
 1565 002e 2046     		mov	r0, r4
 1566 0030 FFF7FEFF 		bl	__aeabi_fsub
 1567 0034 0346     		mov	r3, r0
 1568 0036 3B60     		str	r3, [r7]	@ float
 477:main.c        ****         pedals_low[i] = pedals_low[i] + (0.1f * pedalDiff);
 1569              		.loc 1 477 0 discriminator 3
 1570 0038 304A     		ldr	r2, .L59+4
 1571 003a 7B68     		ldr	r3, [r7, #4]
 1572 003c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1573 0040 1846     		mov	r0, r3
 1574 0042 FFF7FEFF 		bl	__aeabi_i2f
 1575 0046 0446     		mov	r4, r0
 1576 0048 2D49     		ldr	r1, .L59+8
 1577 004a 3868     		ldr	r0, [r7]	@ float
 1578 004c FFF7FEFF 		bl	__aeabi_fmul
 1579 0050 0346     		mov	r3, r0
 1580 0052 1946     		mov	r1, r3
 1581 0054 2046     		mov	r0, r4
 1582 0056 FFF7FEFF 		bl	__aeabi_fadd
 1583 005a 0346     		mov	r3, r0
 1584 005c 1846     		mov	r0, r3
 1585 005e FFF7FEFF 		bl	__aeabi_f2uiz
 1586 0062 0346     		mov	r3, r0
 1587 0064 99B2     		uxth	r1, r3
 1588 0066 254A     		ldr	r2, .L59+4
 1589 0068 7B68     		ldr	r3, [r7, #4]
 1590 006a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 478:main.c        ****         pedals_high[i] = pedals_high[i] - (0.1f * pedalDiff);
 1591              		.loc 1 478 0 discriminator 3
 1592 006e 224A     		ldr	r2, .L59
 1593 0070 7B68     		ldr	r3, [r7, #4]
 1594 0072 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1595 0076 1846     		mov	r0, r3
 1596 0078 FFF7FEFF 		bl	__aeabi_i2f
 1597 007c 0446     		mov	r4, r0
 1598 007e 2049     		ldr	r1, .L59+8
 1599 0080 3868     		ldr	r0, [r7]	@ float
 1600 0082 FFF7FEFF 		bl	__aeabi_fmul
 1601 0086 0346     		mov	r3, r0
 1602 0088 1946     		mov	r1, r3
 1603 008a 2046     		mov	r0, r4
 1604 008c FFF7FEFF 		bl	__aeabi_fsub
 1605 0090 0346     		mov	r3, r0
 1606 0092 1846     		mov	r0, r3
 1607 0094 FFF7FEFF 		bl	__aeabi_f2uiz
 1608 0098 0346     		mov	r3, r0
 1609 009a 99B2     		uxth	r1, r3
 1610 009c 164A     		ldr	r2, .L59
 1611 009e 7B68     		ldr	r3, [r7, #4]
 1612 00a0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 479:main.c        ****         pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1613              		.loc 1 479 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 38


 1614 00a4 144A     		ldr	r2, .L59
 1615 00a6 7B68     		ldr	r3, [r7, #4]
 1616 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1617 00ac 1846     		mov	r0, r3
 1618 00ae FFF7FEFF 		bl	__aeabi_ui2f
 1619 00b2 0446     		mov	r4, r0
 1620 00b4 114A     		ldr	r2, .L59+4
 1621 00b6 7B68     		ldr	r3, [r7, #4]
 1622 00b8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1623 00bc 1846     		mov	r0, r3
 1624 00be FFF7FEFF 		bl	__aeabi_ui2f
 1625 00c2 0346     		mov	r3, r0
 1626 00c4 1946     		mov	r1, r3
 1627 00c6 2046     		mov	r0, r4
 1628 00c8 FFF7FEFF 		bl	__aeabi_fsub
 1629 00cc 0346     		mov	r3, r0
 1630 00ce 3B60     		str	r3, [r7]	@ float
 480:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1631              		.loc 1 480 0 discriminator 3
 1632 00d0 3968     		ldr	r1, [r7]	@ float
 1633 00d2 0C48     		ldr	r0, .L59+12
 1634 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1635 00d8 0346     		mov	r3, r0
 1636 00da 1946     		mov	r1, r3
 1637 00dc 0A4A     		ldr	r2, .L59+16
 1638 00de 7B68     		ldr	r3, [r7, #4]
 1639 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1640              	.LBE4:
 473:main.c        ****     {
 1641              		.loc 1 473 0 discriminator 3
 1642 00e4 7B68     		ldr	r3, [r7, #4]
 1643 00e6 0133     		adds	r3, r3, #1
 1644 00e8 7B60     		str	r3, [r7, #4]
 1645              	.L57:
 473:main.c        ****     {
 1646              		.loc 1 473 0 is_stmt 0 discriminator 1
 1647 00ea 7B68     		ldr	r3, [r7, #4]
 1648 00ec 092B     		cmp	r3, #9
 1649 00ee 8DDD     		ble	.L58
 1650              	.LBE3:
 481:main.c        ****     }
 482:main.c        **** }
 1651              		.loc 1 482 0 is_stmt 1
 1652 00f0 00BF     		nop
 1653 00f2 0C37     		adds	r7, r7, #12
 1654              		.cfi_def_cfa_offset 12
 1655 00f4 BD46     		mov	sp, r7
 1656              		.cfi_def_cfa_register 13
 1657              		@ sp needed
 1658 00f6 90BD     		pop	{r4, r7, pc}
 1659              	.L60:
 1660              		.align	2
 1661              	.L59:
 1662 00f8 00000000 		.word	pedals_high
 1663 00fc 00000000 		.word	pedals_low
 1664 0100 CDCCCC3D 		.word	1036831949
 1665 0104 00F07F45 		.word	1166012416
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 39


 1666 0108 00000000 		.word	pedalRatios
 1667              		.cfi_endproc
 1668              	.LFE74:
 1669              		.size	calculatePedalRatios, .-calculatePedalRatios
 1670              		.section	.rodata
 1671              		.align	2
 1672              	.LC0:
 1673 0400 2000     		.ascii	" \000"
 1674              		.global	__aeabi_f2iz
 1675              		.global	__aeabi_fcmpge
 1676 0402 0000     		.align	2
 1677              	.LC1:
 1678 0404 43414C49 		.ascii	"CALIBRATION\000"
 1678      42524154 
 1678      494F4E00 
 1679              		.align	2
 1680              	.LC2:
 1681 0410 4D4F5645 		.ascii	"MOVE PEDALS\000"
 1681      20504544 
 1681      414C5300 
 1682              		.align	2
 1683              	.LC3:
 1684 041c 414E4420 		.ascii	"AND LEVERS\000"
 1684      4C455645 
 1684      525300
 1685 0427 00       		.align	2
 1686              	.LC4:
 1687 0428 5448454E 		.ascii	"THEN EXIT\000"
 1687      20455849 
 1687      5400
 1688              		.global	__aeabi_fcmpeq
 1689 0432 0000     		.align	2
 1690              	.LC5:
 1691 0434 4649524D 		.ascii	"FIRMWARE   \000"
 1691      57415245 
 1691      20202000 
 1692              		.align	2
 1693              	.LC6:
 1694 0440 55504441 		.ascii	"UPDATE     \000"
 1694      54452020 
 1694      20202000 
 1695              		.align	2
 1696              	.LC7:
 1697 044c 20202020 		.ascii	"           \000"
 1697      20202020 
 1697      20202000 
 1698              		.section	.text.main,"ax",%progbits
 1699              		.align	2
 1700              		.global	main
 1701              		.thumb
 1702              		.thumb_func
 1703              		.type	main, %function
 1704              	main:
 1705              	.LFB75:
 483:main.c        **** int main(void)
 484:main.c        **** {
 1706              		.loc 1 484 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 40


 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 160
 1709              		@ frame_needed = 1, uses_anonymous_args = 0
 1710 0000 90B5     		push	{r4, r7, lr}
 1711              		.cfi_def_cfa_offset 12
 1712              		.cfi_offset 4, -12
 1713              		.cfi_offset 7, -8
 1714              		.cfi_offset 14, -4
 1715 0002 ABB0     		sub	sp, sp, #172
 1716              		.cfi_def_cfa_offset 184
 1717 0004 02AF     		add	r7, sp, #8
 1718              		.cfi_def_cfa 7, 176
 485:main.c        ****     
 486:main.c        **** 	CYGlobalIntEnable; 
 1719              		.loc 1 486 0
 1720              		.syntax unified
 1721              	@ 486 "main.c" 1
 1722 0006 62B6     		CPSIE   i
 1723              	@ 0 "" 2
 487:main.c        ****     EEPROM_Start();
 1724              		.loc 1 487 0
 1725              		.thumb
 1726              		.syntax unified
 1727 0008 FFF7FEFF 		bl	EEPROM_Start
 488:main.c        ****     Bootloadable_SET_RUN_TYPE(Bootloadable_SCHEDULE_BTLDB);
 1728              		.loc 1 488 0
 1729 000c B24B     		ldr	r3, .L223
 1730 000e 8022     		movs	r2, #128
 1731 0010 1A70     		strb	r2, [r3]
 489:main.c        ****     //since we sucessfully booted this firmware, set it to be the default until the brain chip gets
 490:main.c        ****     
 491:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 1732              		.loc 1 491 0
 1733 0012 B24B     		ldr	r3, .L223+4
 1734 0014 1846     		mov	r0, r3
 1735 0016 FFF7FEFF 		bl	Em_EEPROM_Init
 1736 001a 0346     		mov	r3, r0
 1737 001c 1A46     		mov	r2, r3
 1738 001e B04B     		ldr	r3, .L223+8
 1739 0020 1A70     		strb	r2, [r3]
 492:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 493:main.c        ****     {
 494:main.c        ****        // HandleError();
 495:main.c        ****     }
 496:main.c        ****     uint8_t myArrayCounter = 0;
 1740              		.loc 1 496 0
 1741 0022 0023     		movs	r3, #0
 1742 0024 87F83B30 		strb	r3, [r7, #59]
 497:main.c        ****   
 498:main.c        ****     I2C_1_Start();  
 1743              		.loc 1 498 0
 1744 0028 FFF7FEFF 		bl	I2C_1_Start
 499:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 1745              		.loc 1 499 0
 1746 002c 0120     		movs	r0, #1
 1747 002e FFF7FEFF 		bl	USB_SetPowerStatus
 500:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 41


 1748              		.loc 1 500 0
 1749 0032 AC48     		ldr	r0, .L223+12
 1750 0034 FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 501:main.c        ****     
 502:main.c        **** 
 503:main.c        **** 
 504:main.c        ****     
 505:main.c        ****     CyDelay(2000);
 1751              		.loc 1 505 0
 1752 0038 4FF4FA60 		mov	r0, #2000
 1753 003c FFF7FEFF 		bl	CyDelay
 506:main.c        ****     //read from eeprom which copedents are loaded on which necks
 507:main.c        ****     necks[0] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1754              		.loc 1 507 0
 1755 0040 0020     		movs	r0, #0
 1756 0042 FFF7FEFF 		bl	EEPROM_ReadByte
 1757 0046 0346     		mov	r3, r0
 1758 0048 1A46     		mov	r2, r3
 1759 004a A74B     		ldr	r3, .L223+16
 1760 004c 1A70     		strb	r2, [r3]
 508:main.c        ****     necks[1] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET + 1);
 1761              		.loc 1 508 0
 1762 004e 0120     		movs	r0, #1
 1763 0050 FFF7FEFF 		bl	EEPROM_ReadByte
 1764 0054 0346     		mov	r3, r0
 1765 0056 1A46     		mov	r2, r3
 1766 0058 A34B     		ldr	r3, .L223+16
 1767 005a 5A70     		strb	r2, [r3, #1]
 1768              	.LBB5:
 509:main.c        ****     
 510:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 1769              		.loc 1 510 0
 1770 005c 0023     		movs	r3, #0
 1771 005e C7F89C30 		str	r3, [r7, #156]
 1772 0062 BBE0     		b	.L62
 1773              	.L69:
 1774              	.LBB6:
 511:main.c        ****     {
 512:main.c        ****         
 513:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
 1775              		.loc 1 513 0
 1776 0064 0023     		movs	r3, #0
 1777 0066 C7F89830 		str	r3, [r7, #152]
 1778 006a 29E0     		b	.L63
 1779              	.L64:
 514:main.c        ****         {
 515:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 1780              		.loc 1 515 0 discriminator 3
 1781 006c D7F89C30 		ldr	r3, [r7, #156]
 1782 0070 9BB2     		uxth	r3, r3
 1783 0072 1A46     		mov	r2, r3	@ movhi
 1784 0074 1201     		lsls	r2, r2, #4
 1785 0076 1A44     		add	r2, r2, r3
 1786 0078 9200     		lsls	r2, r2, #2
 1787 007a 1A44     		add	r2, r2, r3
 1788 007c 5200     		lsls	r2, r2, #1
 1789 007e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 42


 1790 0080 5B00     		lsls	r3, r3, #1
 1791 0082 9AB2     		uxth	r2, r3
 1792 0084 D7F89830 		ldr	r3, [r7, #152]
 1793 0088 9BB2     		uxth	r3, r3
 1794 008a 1344     		add	r3, r3, r2
 1795 008c 9BB2     		uxth	r3, r3
 1796 008e 0233     		adds	r3, r3, #2
 1797 0090 9BB2     		uxth	r3, r3
 1798 0092 1846     		mov	r0, r3
 1799 0094 FFF7FEFF 		bl	EEPROM_ReadByte
 1800 0098 0346     		mov	r3, r0
 1801 009a 1846     		mov	r0, r3
 1802 009c 9349     		ldr	r1, .L223+20
 1803 009e D7F89C20 		ldr	r2, [r7, #156]
 1804 00a2 1346     		mov	r3, r2
 1805 00a4 DB00     		lsls	r3, r3, #3
 1806 00a6 9B1A     		subs	r3, r3, r2
 1807 00a8 5B00     		lsls	r3, r3, #1
 1808 00aa CA18     		adds	r2, r1, r3
 1809 00ac D7F89830 		ldr	r3, [r7, #152]
 1810 00b0 1344     		add	r3, r3, r2
 1811 00b2 0246     		mov	r2, r0
 1812 00b4 1A70     		strb	r2, [r3]
 513:main.c        ****         {
 1813              		.loc 1 513 0 discriminator 3
 1814 00b6 D7F89830 		ldr	r3, [r7, #152]
 1815 00ba 0133     		adds	r3, r3, #1
 1816 00bc C7F89830 		str	r3, [r7, #152]
 1817              	.L63:
 513:main.c        ****         {
 1818              		.loc 1 513 0 is_stmt 0 discriminator 1
 1819 00c0 D7F89830 		ldr	r3, [r7, #152]
 1820 00c4 0D2B     		cmp	r3, #13
 1821 00c6 D1DD     		ble	.L64
 1822              	.LBE6:
 1823              	.LBB7:
 516:main.c        ****         }
 517:main.c        ****         for (int i = 0; i < 11; i++)
 1824              		.loc 1 517 0 is_stmt 1
 1825 00c8 0023     		movs	r3, #0
 1826 00ca C7F89430 		str	r3, [r7, #148]
 1827 00ce 7BE0     		b	.L65
 1828              	.L68:
 1829              	.LBB8:
 518:main.c        ****     	{
 519:main.c        ****     		int pedalStartLoc = (i*24);
 1830              		.loc 1 519 0
 1831 00d0 D7F89420 		ldr	r2, [r7, #148]
 1832 00d4 1346     		mov	r3, r2
 1833 00d6 5B00     		lsls	r3, r3, #1
 1834 00d8 1344     		add	r3, r3, r2
 1835 00da DB00     		lsls	r3, r3, #3
 1836 00dc 7B63     		str	r3, [r7, #52]
 1837              	.LBB9:
 520:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 1838              		.loc 1 520 0
 1839 00de 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 43


 1840 00e0 C7F89030 		str	r3, [r7, #144]
 1841 00e4 67E0     		b	.L66
 1842              	.L67:
 1843              	.LBB10:
 521:main.c        ****     		{
 522:main.c        ****                 
 523:main.c        ****                 int stringStartLoc = (j*2);
 1844              		.loc 1 523 0 discriminator 3
 1845 00e6 D7F89030 		ldr	r3, [r7, #144]
 1846 00ea 5B00     		lsls	r3, r3, #1
 1847 00ec 3B63     		str	r3, [r7, #48]
 524:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 1848              		.loc 1 524 0 discriminator 3
 1849 00ee 3B6B     		ldr	r3, [r7, #48]
 1850 00f0 9AB2     		uxth	r2, r3
 1851 00f2 7B6B     		ldr	r3, [r7, #52]
 1852 00f4 9BB2     		uxth	r3, r3
 1853 00f6 1344     		add	r3, r3, r2
 1854 00f8 9AB2     		uxth	r2, r3
 1855 00fa D7F89C30 		ldr	r3, [r7, #156]
 1856 00fe 9BB2     		uxth	r3, r3
 1857 0100 1946     		mov	r1, r3	@ movhi
 1858 0102 0901     		lsls	r1, r1, #4
 1859 0104 1944     		add	r1, r1, r3
 1860 0106 8900     		lsls	r1, r1, #2
 1861 0108 1944     		add	r1, r1, r3
 1862 010a 4900     		lsls	r1, r1, #1
 1863 010c 0B44     		add	r3, r3, r1
 1864 010e 5B00     		lsls	r3, r3, #1
 1865 0110 9BB2     		uxth	r3, r3
 1866 0112 1344     		add	r3, r3, r2
 1867 0114 9BB2     		uxth	r3, r3
 1868 0116 1033     		adds	r3, r3, #16
 1869 0118 9BB2     		uxth	r3, r3
 1870 011a 1846     		mov	r0, r3
 1871 011c FFF7FEFF 		bl	EEPROM_ReadByte
 1872 0120 0346     		mov	r3, r0
 1873 0122 FB85     		strh	r3, [r7, #46]	@ movhi
 525:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 1874              		.loc 1 525 0 discriminator 3
 1875 0124 3B6B     		ldr	r3, [r7, #48]
 1876 0126 9AB2     		uxth	r2, r3
 1877 0128 7B6B     		ldr	r3, [r7, #52]
 1878 012a 9BB2     		uxth	r3, r3
 1879 012c 1344     		add	r3, r3, r2
 1880 012e 9AB2     		uxth	r2, r3
 1881 0130 D7F89C30 		ldr	r3, [r7, #156]
 1882 0134 9BB2     		uxth	r3, r3
 1883 0136 1946     		mov	r1, r3	@ movhi
 1884 0138 0901     		lsls	r1, r1, #4
 1885 013a 1944     		add	r1, r1, r3
 1886 013c 8900     		lsls	r1, r1, #2
 1887 013e 1944     		add	r1, r1, r3
 1888 0140 4900     		lsls	r1, r1, #1
 1889 0142 0B44     		add	r3, r3, r1
 1890 0144 5B00     		lsls	r3, r3, #1
 1891 0146 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 44


 1892 0148 1344     		add	r3, r3, r2
 1893 014a 9BB2     		uxth	r3, r3
 1894 014c 1133     		adds	r3, r3, #17
 1895 014e 9BB2     		uxth	r3, r3
 1896 0150 1846     		mov	r0, r3
 1897 0152 FFF7FEFF 		bl	EEPROM_ReadByte
 1898 0156 0346     		mov	r3, r0
 1899 0158 BB85     		strh	r3, [r7, #44]	@ movhi
 526:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 1900              		.loc 1 526 0 discriminator 3
 1901 015a FB8D     		ldrh	r3, [r7, #46]
 1902 015c 1A02     		lsls	r2, r3, #8
 1903 015e BB8D     		ldrh	r3, [r7, #44]
 1904 0160 1344     		add	r3, r3, r2
 1905 0162 1846     		mov	r0, r3
 1906 0164 FFF7FEFF 		bl	__aeabi_i2f
 1907 0168 0346     		mov	r3, r0
 1908 016a 4FF06E51 		mov	r1, #998244352
 1909 016e 1846     		mov	r0, r3
 1910 0170 FFF7FEFF 		bl	__aeabi_fmul
 1911 0174 0346     		mov	r3, r0
 1912 0176 4FF08641 		mov	r1, #1124073472
 1913 017a 1846     		mov	r0, r3
 1914 017c FFF7FEFF 		bl	__aeabi_fsub
 1915 0180 0346     		mov	r3, r0
 1916 0182 1C46     		mov	r4, r3
 1917 0184 5A48     		ldr	r0, .L223+24
 1918 0186 D7F89430 		ldr	r3, [r7, #148]
 1919 018a D7F89C10 		ldr	r1, [r7, #156]
 1920 018e 1A46     		mov	r2, r3
 1921 0190 5200     		lsls	r2, r2, #1
 1922 0192 1A44     		add	r2, r2, r3
 1923 0194 9300     		lsls	r3, r2, #2
 1924 0196 1A46     		mov	r2, r3
 1925 0198 0B46     		mov	r3, r1
 1926 019a 5B01     		lsls	r3, r3, #5
 1927 019c 0B44     		add	r3, r3, r1
 1928 019e 9B00     		lsls	r3, r3, #2
 1929 01a0 1A44     		add	r2, r2, r3
 1930 01a2 D7F89030 		ldr	r3, [r7, #144]
 1931 01a6 1344     		add	r3, r3, r2
 1932 01a8 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 1933              	.LBE10:
 520:main.c        ****     		{
 1934              		.loc 1 520 0 discriminator 3
 1935 01ac D7F89030 		ldr	r3, [r7, #144]
 1936 01b0 0133     		adds	r3, r3, #1
 1937 01b2 C7F89030 		str	r3, [r7, #144]
 1938              	.L66:
 520:main.c        ****     		{
 1939              		.loc 1 520 0 is_stmt 0 discriminator 1
 1940 01b6 D7F89030 		ldr	r3, [r7, #144]
 1941 01ba 0B2B     		cmp	r3, #11
 1942 01bc 93DD     		ble	.L67
 1943              	.LBE9:
 1944              	.LBE8:
 517:main.c        ****     	{
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 45


 1945              		.loc 1 517 0 is_stmt 1 discriminator 2
 1946 01be D7F89430 		ldr	r3, [r7, #148]
 1947 01c2 0133     		adds	r3, r3, #1
 1948 01c4 C7F89430 		str	r3, [r7, #148]
 1949              	.L65:
 517:main.c        ****     	{
 1950              		.loc 1 517 0 is_stmt 0 discriminator 1
 1951 01c8 D7F89430 		ldr	r3, [r7, #148]
 1952 01cc 0A2B     		cmp	r3, #10
 1953 01ce 7FF77FAF 		ble	.L68
 1954              	.LBE7:
 510:main.c        ****     {
 1955              		.loc 1 510 0 is_stmt 1 discriminator 2
 1956 01d2 D7F89C30 		ldr	r3, [r7, #156]
 1957 01d6 0133     		adds	r3, r3, #1
 1958 01d8 C7F89C30 		str	r3, [r7, #156]
 1959              	.L62:
 510:main.c        ****     {
 1960              		.loc 1 510 0 is_stmt 0 discriminator 1
 1961 01dc D7F89C30 		ldr	r3, [r7, #156]
 1962 01e0 062B     		cmp	r3, #6
 1963 01e2 7FF73FAF 		ble	.L69
 1964              	.LBE5:
 1965              	.LBB11:
 527:main.c        ****             }
 528:main.c        ****     	}
 529:main.c        ****     }
 530:main.c        **** 
 531:main.c        ****     
 532:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1966              		.loc 1 532 0 is_stmt 1
 1967 01e6 0023     		movs	r3, #0
 1968 01e8 C7F88C30 		str	r3, [r7, #140]
 1969 01ec 49E0     		b	.L70
 1970              	.L71:
 533:main.c        ****     {
 534:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_ReadByt
 1971              		.loc 1 534 0 discriminator 3
 1972 01ee D7F88C30 		ldr	r3, [r7, #140]
 1973 01f2 03F2E713 		addw	r3, r3, #487
 1974 01f6 9BB2     		uxth	r3, r3
 1975 01f8 9B00     		lsls	r3, r3, #2
 1976 01fa 9BB2     		uxth	r3, r3
 1977 01fc 1846     		mov	r0, r3
 1978 01fe FFF7FEFF 		bl	EEPROM_ReadByte
 1979 0202 0346     		mov	r3, r0
 1980 0204 9BB2     		uxth	r3, r3
 1981 0206 1B02     		lsls	r3, r3, #8
 1982 0208 9CB2     		uxth	r4, r3
 1983 020a D7F88C30 		ldr	r3, [r7, #140]
 1984 020e 9BB2     		uxth	r3, r3
 1985 0210 9B00     		lsls	r3, r3, #2
 1986 0212 9BB2     		uxth	r3, r3
 1987 0214 03F29D73 		addw	r3, r3, #1949
 1988 0218 9BB2     		uxth	r3, r3
 1989 021a 1846     		mov	r0, r3
 1990 021c FFF7FEFF 		bl	EEPROM_ReadByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 46


 1991 0220 0346     		mov	r3, r0
 1992 0222 9BB2     		uxth	r3, r3
 1993 0224 2344     		add	r3, r3, r4
 1994 0226 99B2     		uxth	r1, r3
 1995 0228 324A     		ldr	r2, .L223+28
 1996 022a D7F88C30 		ldr	r3, [r7, #140]
 1997 022e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 535:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (EEPROM_
 1998              		.loc 1 535 0 discriminator 3
 1999 0232 D7F88C30 		ldr	r3, [r7, #140]
 2000 0236 9BB2     		uxth	r3, r3
 2001 0238 9B00     		lsls	r3, r3, #2
 2002 023a 9BB2     		uxth	r3, r3
 2003 023c 03F29E73 		addw	r3, r3, #1950
 2004 0240 9BB2     		uxth	r3, r3
 2005 0242 1846     		mov	r0, r3
 2006 0244 FFF7FEFF 		bl	EEPROM_ReadByte
 2007 0248 0346     		mov	r3, r0
 2008 024a 9BB2     		uxth	r3, r3
 2009 024c 1B02     		lsls	r3, r3, #8
 2010 024e 9CB2     		uxth	r4, r3
 2011 0250 D7F88C30 		ldr	r3, [r7, #140]
 2012 0254 9BB2     		uxth	r3, r3
 2013 0256 9B00     		lsls	r3, r3, #2
 2014 0258 9BB2     		uxth	r3, r3
 2015 025a 03F29F73 		addw	r3, r3, #1951
 2016 025e 9BB2     		uxth	r3, r3
 2017 0260 1846     		mov	r0, r3
 2018 0262 FFF7FEFF 		bl	EEPROM_ReadByte
 2019 0266 0346     		mov	r3, r0
 2020 0268 9BB2     		uxth	r3, r3
 2021 026a 2344     		add	r3, r3, r4
 2022 026c 99B2     		uxth	r1, r3
 2023 026e 224A     		ldr	r2, .L223+32
 2024 0270 D7F88C30 		ldr	r3, [r7, #140]
 2025 0274 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 532:main.c        ****     {
 2026              		.loc 1 532 0 discriminator 3
 2027 0278 D7F88C30 		ldr	r3, [r7, #140]
 2028 027c 0133     		adds	r3, r3, #1
 2029 027e C7F88C30 		str	r3, [r7, #140]
 2030              	.L70:
 532:main.c        ****     {
 2031              		.loc 1 532 0 is_stmt 0 discriminator 1
 2032 0282 D7F88C30 		ldr	r3, [r7, #140]
 2033 0286 092B     		cmp	r3, #9
 2034 0288 B1DD     		ble	.L71
 2035              	.LBE11:
 536:main.c        ****     }
 537:main.c        ****     calculatePedalRatios();
 2036              		.loc 1 537 0 is_stmt 1
 2037 028a FFF7FEFF 		bl	calculatePedalRatios
 2038              	.LBB12:
 538:main.c        ****                 
 539:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 540:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 2039              		.loc 1 540 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 47


 2040 028e 0023     		movs	r3, #0
 2041 0290 C7F88830 		str	r3, [r7, #136]
 2042 0294 62E0     		b	.L72
 2043              	.L79:
 2044              	.LBB13:
 541:main.c        ****     {
 542:main.c        ****         for (int j = 0; j < NAME_LENGTH_IN_BYTES; j++)
 2045              		.loc 1 542 0
 2046 0296 0023     		movs	r3, #0
 2047 0298 C7F88430 		str	r3, [r7, #132]
 2048 029c 11E0     		b	.L73
 2049              	.L74:
 543:main.c        ****         {
 544:main.c        ****             presetNamesArray[i][j] = 255;
 2050              		.loc 1 544 0 discriminator 3
 2051 029e 1749     		ldr	r1, .L223+36
 2052 02a0 D7F88820 		ldr	r2, [r7, #136]
 2053 02a4 1346     		mov	r3, r2
 2054 02a6 DB00     		lsls	r3, r3, #3
 2055 02a8 9B1A     		subs	r3, r3, r2
 2056 02aa 5B00     		lsls	r3, r3, #1
 2057 02ac CA18     		adds	r2, r1, r3
 2058 02ae D7F88430 		ldr	r3, [r7, #132]
 2059 02b2 1344     		add	r3, r3, r2
 2060 02b4 FF22     		movs	r2, #255
 2061 02b6 1A70     		strb	r2, [r3]
 542:main.c        ****         {
 2062              		.loc 1 542 0 discriminator 3
 2063 02b8 D7F88430 		ldr	r3, [r7, #132]
 2064 02bc 0133     		adds	r3, r3, #1
 2065 02be C7F88430 		str	r3, [r7, #132]
 2066              	.L73:
 542:main.c        ****         {
 2067              		.loc 1 542 0 is_stmt 0 discriminator 1
 2068 02c2 D7F88430 		ldr	r3, [r7, #132]
 2069 02c6 0D2B     		cmp	r3, #13
 2070 02c8 E9DD     		ble	.L74
 2071              	.LBE13:
 2072              	.LBB14:
 545:main.c        **** 
 546:main.c        ****         }
 547:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 2073              		.loc 1 547 0 is_stmt 1
 2074 02ca 0023     		movs	r3, #0
 2075 02cc C7F88030 		str	r3, [r7, #128]
 2076 02d0 35E0     		b	.L75
 2077              	.L78:
 2078              	.LBB15:
 548:main.c        ****         {
 549:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 2079              		.loc 1 549 0
 2080 02d2 0023     		movs	r3, #0
 2081 02d4 FB67     		str	r3, [r7, #124]
 2082 02d6 2AE0     		b	.L76
 2083              	.L224:
 2084              		.align	2
 2085              	.L223:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 48


 2086 02d8 FA460040 		.word	1073759994
 2087 02dc 00000000 		.word	Em_EEPROM_em_EepromStorage
 2088 02e0 00000000 		.word	eepromReturnValue
 2089 02e4 00000000 		.word	Vbus_function
 2090 02e8 00000000 		.word	necks
 2091 02ec 00000000 		.word	copedentNamesArray
 2092 02f0 00000000 		.word	copedent
 2093 02f4 00000000 		.word	pedals_low
 2094 02f8 00000000 		.word	pedals_high
 2095 02fc 00000000 		.word	presetNamesArray
 2096              	.L77:
 550:main.c        ****             {
 551:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2097              		.loc 1 551 0 discriminator 3
 2098 0300 4E48     		ldr	r0, .L225
 2099 0302 D7F88030 		ldr	r3, [r7, #128]
 2100 0306 D7F88810 		ldr	r1, [r7, #136]
 2101 030a 1A46     		mov	r2, r3
 2102 030c D200     		lsls	r2, r2, #3
 2103 030e D21A     		subs	r2, r2, r3
 2104 0310 5300     		lsls	r3, r2, #1
 2105 0312 1A46     		mov	r2, r3
 2106 0314 0B46     		mov	r3, r1
 2107 0316 DB00     		lsls	r3, r3, #3
 2108 0318 5B1A     		subs	r3, r3, r1
 2109 031a 1B01     		lsls	r3, r3, #4
 2110 031c 1344     		add	r3, r3, r2
 2111 031e C218     		adds	r2, r0, r3
 2112 0320 FB6F     		ldr	r3, [r7, #124]
 2113 0322 1344     		add	r3, r3, r2
 2114 0324 FF22     		movs	r2, #255
 2115 0326 1A70     		strb	r2, [r3]
 549:main.c        ****             {
 2116              		.loc 1 549 0 discriminator 3
 2117 0328 FB6F     		ldr	r3, [r7, #124]
 2118 032a 0133     		adds	r3, r3, #1
 2119 032c FB67     		str	r3, [r7, #124]
 2120              	.L76:
 549:main.c        ****             {
 2121              		.loc 1 549 0 is_stmt 0 discriminator 1
 2122 032e FB6F     		ldr	r3, [r7, #124]
 2123 0330 0D2B     		cmp	r3, #13
 2124 0332 E5DD     		ble	.L77
 2125              	.LBE15:
 547:main.c        ****         {
 2126              		.loc 1 547 0 is_stmt 1 discriminator 2
 2127 0334 D7F88030 		ldr	r3, [r7, #128]
 2128 0338 0133     		adds	r3, r3, #1
 2129 033a C7F88030 		str	r3, [r7, #128]
 2130              	.L75:
 547:main.c        ****         {
 2131              		.loc 1 547 0 is_stmt 0 discriminator 1
 2132 033e D7F88030 		ldr	r3, [r7, #128]
 2133 0342 072B     		cmp	r3, #7
 2134 0344 C5DD     		ble	.L78
 2135              	.LBE14:
 552:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 49


 553:main.c        ****         }
 554:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2136              		.loc 1 554 0 is_stmt 1 discriminator 2
 2137 0346 3E4A     		ldr	r2, .L225+4
 2138 0348 D7F88830 		ldr	r3, [r7, #136]
 2139 034c 0021     		movs	r1, #0
 2140 034e 42F82310 		str	r1, [r2, r3, lsl #2]
 540:main.c        ****     {
 2141              		.loc 1 540 0 discriminator 2
 2142 0352 D7F88830 		ldr	r3, [r7, #136]
 2143 0356 0133     		adds	r3, r3, #1
 2144 0358 C7F88830 		str	r3, [r7, #136]
 2145              	.L72:
 540:main.c        ****     {
 2146              		.loc 1 540 0 is_stmt 0 discriminator 1
 2147 035c D7F88830 		ldr	r3, [r7, #136]
 2148 0360 3F2B     		cmp	r3, #63
 2149 0362 98DD     		ble	.L79
 2150              	.LBE12:
 555:main.c        ****     }
 556:main.c        ****     
 557:main.c        ****     QuadDec_1_Start();
 2151              		.loc 1 557 0 is_stmt 1
 2152 0364 FFF7FEFF 		bl	QuadDec_1_Start
 558:main.c        ****     LED_amber1_Write(0);
 2153              		.loc 1 558 0
 2154 0368 0020     		movs	r0, #0
 2155 036a FFF7FEFF 		bl	LED_amber1_Write
 559:main.c        ****     LED_amber2_Write(1);
 2156              		.loc 1 559 0
 2157 036e 0120     		movs	r0, #1
 2158 0370 FFF7FEFF 		bl	LED_amber2_Write
 560:main.c        ****     LED_amber3_Write(0);
 2159              		.loc 1 560 0
 2160 0374 0020     		movs	r0, #0
 2161 0376 FFF7FEFF 		bl	LED_amber3_Write
 561:main.c        ****     LED_amber4_Write(0);
 2162              		.loc 1 561 0
 2163 037a 0020     		movs	r0, #0
 2164 037c FFF7FEFF 		bl	LED_amber4_Write
 562:main.c        **** 
 563:main.c        **** 
 564:main.c        **** 
 565:main.c        **** 
 566:main.c        **** 
 567:main.c        ****     
 568:main.c        ****     LED_red1_Write(0);
 2165              		.loc 1 568 0
 2166 0380 0020     		movs	r0, #0
 2167 0382 FFF7FEFF 		bl	LED_red1_Write
 569:main.c        ****     LED_green2_Write(1);
 2168              		.loc 1 569 0
 2169 0386 0120     		movs	r0, #1
 2170 0388 FFF7FEFF 		bl	LED_green2_Write
 570:main.c        **** 
 571:main.c        ****     
 572:main.c        ****     ADC_SAR_Seq_1_Start();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 50


 2171              		.loc 1 572 0
 2172 038c FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 573:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2173              		.loc 1 573 0
 2174 0390 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 574:main.c        **** 
 575:main.c        ****             
 576:main.c        ****     currentCopedent = necks[currentNeck];
 2175              		.loc 1 576 0
 2176 0394 2B4B     		ldr	r3, .L225+8
 2177 0396 1B68     		ldr	r3, [r3]
 2178 0398 2B4A     		ldr	r2, .L225+12
 2179 039a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2180 039c 2B4B     		ldr	r3, .L225+16
 2181 039e 1A70     		strb	r2, [r3]
 577:main.c        ****     CyDelay(10);
 2182              		.loc 1 577 0
 2183 03a0 0A20     		movs	r0, #10
 2184 03a2 FFF7FEFF 		bl	CyDelay
 578:main.c        ****     
 579:main.c        ****     //set up for the OLED screen's first write
 580:main.c        ****     I2Cbuff1[0] = 1<<6;
 2185              		.loc 1 580 0
 2186 03a6 2A4B     		ldr	r3, .L225+20
 2187 03a8 4022     		movs	r2, #64
 2188 03aa 1A70     		strb	r2, [r3]
 581:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2189              		.loc 1 581 0
 2190 03ac 0022     		movs	r2, #0
 2191 03ae 0121     		movs	r1, #1
 2192 03b0 7020     		movs	r0, #112
 2193 03b2 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2194 03b6 0346     		mov	r3, r0
 2195 03b8 1A46     		mov	r2, r3
 2196 03ba 264B     		ldr	r3, .L225+24
 2197 03bc 1A60     		str	r2, [r3]
 582:main.c        ****     myGFX_init(128, 64);
 2198              		.loc 1 582 0
 2199 03be 4021     		movs	r1, #64
 2200 03c0 8020     		movs	r0, #128
 2201 03c2 FFF7FEFF 		bl	myGFX_init
 583:main.c        ****     myGFX_setFont(0);
 2202              		.loc 1 583 0
 2203 03c6 0020     		movs	r0, #0
 2204 03c8 FFF7FEFF 		bl	myGFX_setFont
 584:main.c        ****     OLED_init(128, 64);
 2205              		.loc 1 584 0
 2206 03cc 4021     		movs	r1, #64
 2207 03ce 8020     		movs	r0, #128
 2208 03d0 FFF7FEFF 		bl	OLED_init
 585:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2209              		.loc 1 585 0
 2210 03d4 1D4B     		ldr	r3, .L225+16
 2211 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2212 03d8 1846     		mov	r0, r3
 2213 03da 0323     		movs	r3, #3
 2214 03dc 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 51


 2215 03de 0221     		movs	r1, #2
 2216 03e0 FFF7FEFF 		bl	OLEDwriteInt
 586:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2217              		.loc 1 586 0
 2218 03e4 FFF7FEFF 		bl	OLEDgetCursor
 2219 03e8 0246     		mov	r2, r0
 2220 03ea 0323     		movs	r3, #3
 2221 03ec 0121     		movs	r1, #1
 2222 03ee 1A48     		ldr	r0, .L225+28
 2223 03f0 FFF7FEFF 		bl	OLEDwriteString
 587:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH, 
 2224              		.loc 1 587 0
 2225 03f4 154B     		ldr	r3, .L225+16
 2226 03f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2227 03f8 1A46     		mov	r2, r3
 2228 03fa 1346     		mov	r3, r2
 2229 03fc DB00     		lsls	r3, r3, #3
 2230 03fe 9B1A     		subs	r3, r3, r2
 2231 0400 5B00     		lsls	r3, r3, #1
 2232 0402 164A     		ldr	r2, .L225+32
 2233 0404 9C18     		adds	r4, r3, r2
 2234 0406 FFF7FEFF 		bl	OLEDgetCursor
 2235 040a 0246     		mov	r2, r0
 2236 040c 0323     		movs	r3, #3
 2237 040e 0821     		movs	r1, #8
 2238 0410 2046     		mov	r0, r4
 2239 0412 FFF7FEFF 		bl	OLEDwriteString
 588:main.c        ****     OLED_draw(128, 64);
 2240              		.loc 1 588 0
 2241 0416 4021     		movs	r1, #64
 2242 0418 8020     		movs	r0, #128
 2243 041a FFF7FEFF 		bl	OLED_draw
 589:main.c        ****     
 590:main.c        ****     
 591:main.c        ****     I2Cbuff1[0] = 1<<2;
 2244              		.loc 1 591 0
 2245 041e 0C4B     		ldr	r3, .L225+20
 2246 0420 0422     		movs	r2, #4
 2247 0422 1A70     		strb	r2, [r3]
 592:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2248              		.loc 1 592 0
 2249 0424 0022     		movs	r2, #0
 2250 0426 0121     		movs	r1, #1
 2251 0428 7020     		movs	r0, #112
 2252 042a FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2253 042e 0346     		mov	r3, r0
 2254 0430 1A46     		mov	r2, r3
 2255 0432 084B     		ldr	r3, .L225+24
 2256 0434 1A60     		str	r2, [r3]
 2257              	.LBB16:
 593:main.c        **** 
 594:main.c        ****     for (int w = 0; w < 8; w++)
 2258              		.loc 1 594 0
 2259 0436 0023     		movs	r3, #0
 2260 0438 BB67     		str	r3, [r7, #120]
 2261 043a 27E0     		b	.L80
 2262              	.L226:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 52


 2263              		.align	2
 2264              	.L225:
 2265 043c 00000000 		.word	macroNamesArray
 2266 0440 00000000 		.word	presetAlreadyDisplayed
 2267 0444 00000000 		.word	currentNeck
 2268 0448 00000000 		.word	necks
 2269 044c 00000000 		.word	currentCopedent
 2270 0450 00000000 		.word	I2Cbuff1
 2271 0454 00000000 		.word	status
 2272 0458 00040000 		.word	.LC0
 2273 045c 00000000 		.word	copedentNamesArray
 2274              	.L81:
 595:main.c        ****     {
 596:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 2275              		.loc 1 596 0 discriminator 3
 2276 0460 BB6F     		ldr	r3, [r7, #120]
 2277 0462 DBB2     		uxtb	r3, r3
 2278 0464 0833     		adds	r3, r3, #8
 2279 0466 DAB2     		uxtb	r2, r3
 2280 0468 924B     		ldr	r3, .L227
 2281 046a 1A70     		strb	r2, [r3]
 597:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2282              		.loc 1 597 0 discriminator 3
 2283 046c 0022     		movs	r2, #0
 2284 046e 0121     		movs	r1, #1
 2285 0470 7220     		movs	r0, #114
 2286 0472 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2287 0476 0346     		mov	r3, r0
 2288 0478 1A46     		mov	r2, r3
 2289 047a 8F4B     		ldr	r3, .L227+4
 2290 047c 1A60     		str	r2, [r3]
 598:main.c        ****         OLED_init(128, 32);
 2291              		.loc 1 598 0 discriminator 3
 2292 047e 2021     		movs	r1, #32
 2293 0480 8020     		movs	r0, #128
 2294 0482 FFF7FEFF 		bl	OLED_init
 594:main.c        ****     {
 2295              		.loc 1 594 0 discriminator 3
 2296 0486 BB6F     		ldr	r3, [r7, #120]
 2297 0488 0133     		adds	r3, r3, #1
 2298 048a BB67     		str	r3, [r7, #120]
 2299              	.L80:
 594:main.c        ****     {
 2300              		.loc 1 594 0 is_stmt 0 discriminator 1
 2301 048c BB6F     		ldr	r3, [r7, #120]
 2302 048e 072B     		cmp	r3, #7
 2303 0490 E6DD     		ble	.L81
 2304              	.LBE16:
 599:main.c        ****         //OLEDwriteInt(w , 1, 0,FirstLine);
 600:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 601:main.c        ****         //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OL
 602:main.c        ****        // OLED_draw(128, 32);
 603:main.c        ****     }
 604:main.c        **** 
 605:main.c        ****     //initialize the macro knob adc to scan all knobs
 606:main.c        ****     I2Cbuff1[0] = 1<<2;
 2305              		.loc 1 606 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 53


 2306 0492 884B     		ldr	r3, .L227
 2307 0494 0422     		movs	r2, #4
 2308 0496 1A70     		strb	r2, [r3]
 607:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2309              		.loc 1 607 0
 2310 0498 0022     		movs	r2, #0
 2311 049a 0121     		movs	r1, #1
 2312 049c 7020     		movs	r0, #112
 2313 049e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2314 04a2 0346     		mov	r3, r0
 2315 04a4 1A46     		mov	r2, r3
 2316 04a6 844B     		ldr	r3, .L227+4
 2317 04a8 1A60     		str	r2, [r3]
 608:main.c        ****     main_counter = 9;
 2318              		.loc 1 608 0
 2319 04aa 844B     		ldr	r3, .L227+8
 2320 04ac 0922     		movs	r2, #9
 2321 04ae 1A70     		strb	r2, [r3]
 609:main.c        **** 
 610:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 2322              		.loc 1 610 0
 2323 04b0 804B     		ldr	r3, .L227
 2324 04b2 0F22     		movs	r2, #15
 2325 04b4 1A70     		strb	r2, [r3]
 611:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 2326              		.loc 1 611 0
 2327 04b6 0022     		movs	r2, #0
 2328 04b8 0121     		movs	r1, #1
 2329 04ba 3520     		movs	r0, #53
 2330 04bc FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2331 04c0 0346     		mov	r3, r0
 2332 04c2 1A46     		mov	r2, r3
 2333 04c4 7C4B     		ldr	r3, .L227+4
 2334 04c6 1A60     		str	r2, [r3]
 612:main.c        ****     
 613:main.c        **** #if 0
 614:main.c        ****     while(1)
 615:main.c        ****     {
 616:main.c        ****         for (int i=  0; i < 4; i++)
 617:main.c        ****         {
 618:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 619:main.c        ****             if (knobs[i] != prevKnobs[i])
 620:main.c        ****             {
 621:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 622:main.c        ****             }
 623:main.c        ****             prevKnobs[i] = knobs[i];
 624:main.c        ****         }
 625:main.c        ****         
 626:main.c        **** 
 627:main.c        ****         I2Cbuff1[0] = 1<<0;
 628:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 629:main.c        **** 
 630:main.c        ****         //CyDelayUs(100);
 631:main.c        ****         I2Cbuff1[0] = 0x0E;
 632:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 633:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 634:main.c        ****        // CyDelayUs(100);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 54


 635:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 636:main.c        ****         angle[0] +=  I2Cbuff2[1];
 637:main.c        ****         
 638:main.c        ****     }
 639:main.c        ****     #endif
 640:main.c        ****     //OLEDclear();
 641:main.c        ****     /*
 642:main.c        ****     while(1)
 643:main.c        ****     {
 644:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 645:main.c        ****         OLED_draw();
 646:main.c        ****         CyDelay(1);
 647:main.c        ****         
 648:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 649:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 650:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 651:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
 652:main.c        ****         for (int i=  0; i < 4; i++)
 653:main.c        ****         {
 654:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 655:main.c        ****         }
 656:main.c        **** 
 657:main.c        ****     }
 658:main.c        ****     */
 659:main.c        **** #if 0
 660:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 661:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 662:main.c        **** 
 663:main.c        **** 
 664:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
 665:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 666:main.c        **** 
 667:main.c        ****     //address 0x48
 668:main.c        ****     I2Cbuff1[0] = 0x1;
 669:main.c        ****     I2Cbuff1[1] = 0b11000000;
 670:main.c        ****     I2Cbuff1[2] = 0b10000011;
 671:main.c        **** 
 672:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 673:main.c        ****     #endif
 674:main.c        **** 
 675:main.c        ****     SPIS_1_Start();  
 2335              		.loc 1 675 0
 2336 04c8 FFF7FEFF 		bl	SPIS_1_Start
 676:main.c        ****     SPIM_1_Start();  
 2337              		.loc 1 676 0
 2338 04cc FFF7FEFF 		bl	SPIM_1_Start
 677:main.c        ****     SPIS_2_Start(); 
 2339              		.loc 1 677 0
 2340 04d0 FFF7FEFF 		bl	SPIS_2_Start
 678:main.c        ****     DmaTxConfiguration();
 2341              		.loc 1 678 0
 2342 04d4 FFF7FEFF 		bl	DmaTxConfiguration
 679:main.c        ****     DmaRxConfiguration();
 2343              		.loc 1 679 0
 2344 04d8 FFF7FEFF 		bl	DmaRxConfiguration
 680:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 2345              		.loc 1 680 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 55


 2346 04dc 7848     		ldr	r0, .L227+12
 2347 04de FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 681:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2348              		.loc 1 681 0
 2349 04e2 7848     		ldr	r0, .L227+16
 2350 04e4 FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 682:main.c        ****     
 683:main.c        ****     myArray[30] = 254;
 2351              		.loc 1 683 0
 2352 04e8 774B     		ldr	r3, .L227+20
 2353 04ea FE22     		movs	r2, #254
 2354 04ec 9A77     		strb	r2, [r3, #30]
 684:main.c        ****     myArray[31] = 253;
 2355              		.loc 1 684 0
 2356 04ee 764B     		ldr	r3, .L227+20
 2357 04f0 FD22     		movs	r2, #253
 2358 04f2 DA77     		strb	r2, [r3, #31]
 685:main.c        **** 
 686:main.c        ****     main_counter = 0;
 2359              		.loc 1 686 0
 2360 04f4 714B     		ldr	r3, .L227+8
 2361 04f6 0022     		movs	r2, #0
 2362 04f8 1A70     		strb	r2, [r3]
 2363              	.L213:
 687:main.c        **** 
 688:main.c        **** 	for(;;)
 689:main.c        ****     {
 690:main.c        ****         
 691:main.c        ****         if (parseThatMF)
 2364              		.loc 1 691 0
 2365 04fa 744B     		ldr	r3, .L227+24
 2366 04fc 1B78     		ldrb	r3, [r3]
 2367 04fe DBB2     		uxtb	r3, r3
 2368 0500 002B     		cmp	r3, #0
 2369 0502 01D0     		beq	.L82
 692:main.c        ****         {
 693:main.c        ****             parseSysex();
 2370              		.loc 1 693 0
 2371 0504 FFF7FEFF 		bl	parseSysex
 2372              	.L82:
 694:main.c        ****         }
 695:main.c        ****         
 696:main.c        ****         //if (newDataFlag)
 697:main.c        ****         //{
 698:main.c        ****         //}
 699:main.c        ****             /*
 700:main.c        ****             for (int i = 0; i < 5; i++)
 701:main.c        ****             {
 702:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 703:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 704:main.c        ****                 I2C_1_MasterSendStop(); 
 705:main.c        **** 
 706:main.c        **** 
 707:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 708:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 709:main.c        ****                 //I2C_1_MasterSendStop();
 710:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 56


 711:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 712:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 713:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 714:main.c        ****                  I2C_1_MasterSendStop(); 
 715:main.c        ****                 
 716:main.c        ****                 CyDelay(1);
 717:main.c        **** 
 718:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 719:main.c        ****                 I2C_1_MasterWriteByte(0x01);
 720:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 721:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 722:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 723:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 724:main.c        ****                 I2C_1_MasterSendStop(); 
 725:main.c        ****                 
 726:main.c        ****                 CyDelay(2);
 727:main.c        **** 
 728:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 729:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 730:main.c        ****                I2C_1_MasterWriteByte(0x80);
 731:main.c        ****                 I2C_1_MasterSendStop(); 
 732:main.c        ****                CyDelay(2);
 733:main.c        ****             }
 734:main.c        ****         */
 735:main.c        ****         //set main i2c mux
 736:main.c        ****     
 737:main.c        ****         
 738:main.c        ****         /*
 739:main.c        ****         for (int i = 0; i < 4; i++)
 740:main.c        ****         {
 741:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 742:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 743:main.c        ****             I2C_1_MasterSendStop(); 
 744:main.c        **** 
 745:main.c        **** 
 746:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 747:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 748:main.c        ****             //I2C_1_MasterSendStop();
 749:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 750:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 751:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 752:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
 753:main.c        ****              I2C_1_MasterSendStop(); 
 754:main.c        ****             
 755:main.c        ****             CyDelay(1);
 756:main.c        **** 
 757:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 758:main.c        ****             I2C_1_MasterWriteByte(0x01);
 759:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 760:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 761:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 762:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 763:main.c        ****             I2C_1_MasterSendStop(); 
 764:main.c        ****             
 765:main.c        ****             CyDelay(2);
 766:main.c        **** 
 767:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 57


 768:main.c        ****             I2C_1_MasterWriteByte(0xff);
 769:main.c        ****             I2C_1_MasterWriteByte(0x80);
 770:main.c        ****             I2C_1_MasterSendStop(); 
 771:main.c        ****            CyDelay(2);
 772:main.c        ****         }
 773:main.c        ****             */
 774:main.c        ****         /*    
 775:main.c        ****         if (main_counter == 6)
 776:main.c        ****         {
 777:main.c        ****             main_counter = 8;
 778:main.c        ****         }
 779:main.c        ****         */    
 780:main.c        ****         testpin3_Write(1);
 2373              		.loc 1 780 0
 2374 0508 0120     		movs	r0, #1
 2375 050a FFF7FEFF 		bl	testpin3_Write
 781:main.c        ****        //sense levers and pedals
 782:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2376              		.loc 1 782 0
 2377 050e 6B4B     		ldr	r3, .L227+8
 2378 0510 1B78     		ldrb	r3, [r3]
 2379 0512 DBB2     		uxtb	r3, r3
 2380 0514 1A46     		mov	r2, r3
 2381 0516 6E4B     		ldr	r3, .L227+28
 2382 0518 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2383 051c 6D4B     		ldr	r3, .L227+32
 2384 051e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2385 0520 9A42     		cmp	r2, r3
 2386 0522 14D0     		beq	.L83
 2387              	.LBB17:
 783:main.c        ****         {
 784:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 2388              		.loc 1 784 0
 2389 0524 654B     		ldr	r3, .L227+8
 2390 0526 1B78     		ldrb	r3, [r3]
 2391 0528 DBB2     		uxtb	r3, r3
 2392 052a 1A46     		mov	r2, r3
 2393 052c 684B     		ldr	r3, .L227+28
 2394 052e 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2395 0532 1A46     		mov	r2, r3
 2396 0534 0123     		movs	r3, #1
 2397 0536 9340     		lsls	r3, r3, r2
 2398 0538 DAB2     		uxtb	r2, r3
 2399 053a 5E4B     		ldr	r3, .L227
 2400 053c 1A70     		strb	r2, [r3]
 785:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2401              		.loc 1 785 0
 2402 053e 0022     		movs	r2, #0
 2403 0540 0121     		movs	r1, #1
 2404 0542 7020     		movs	r0, #112
 2405 0544 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2406 0548 0346     		mov	r3, r0
 2407 054a 87F82B30 		strb	r3, [r7, #43]
 2408              	.L83:
 2409              	.LBE17:
 786:main.c        ****         }
 787:main.c        ****         last_mux = mux_states[main_counter][0];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 58


 2410              		.loc 1 787 0
 2411 054e 5B4B     		ldr	r3, .L227+8
 2412 0550 1B78     		ldrb	r3, [r3]
 2413 0552 DBB2     		uxtb	r3, r3
 2414 0554 1A46     		mov	r2, r3
 2415 0556 5E4B     		ldr	r3, .L227+28
 2416 0558 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2417 055c 5D4B     		ldr	r3, .L227+32
 2418 055e 1A70     		strb	r2, [r3]
 788:main.c        ****         
 789:main.c        ****         
 790:main.c        ****         CyDelayUs(10);
 2419              		.loc 1 790 0
 2420 0560 0A20     		movs	r0, #10
 2421 0562 FFF7FEFF 		bl	CyDelayUs
 791:main.c        ****         if (mux_states[main_counter][0] == 5)
 2422              		.loc 1 791 0
 2423 0566 554B     		ldr	r3, .L227+8
 2424 0568 1B78     		ldrb	r3, [r3]
 2425 056a DBB2     		uxtb	r3, r3
 2426 056c 1A46     		mov	r2, r3
 2427 056e 584B     		ldr	r3, .L227+28
 2428 0570 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2429 0574 052B     		cmp	r3, #5
 2430 0576 1DD1     		bne	.L84
 792:main.c        ****         {
 793:main.c        ****             if (!i2c_skipped[main_counter])
 2431              		.loc 1 793 0
 2432 0578 504B     		ldr	r3, .L227+8
 2433 057a 1B78     		ldrb	r3, [r3]
 2434 057c DBB2     		uxtb	r3, r3
 2435 057e 1A46     		mov	r2, r3
 2436 0580 554B     		ldr	r3, .L227+36
 2437 0582 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2438 0584 002B     		cmp	r3, #0
 2439 0586 15D1     		bne	.L84
 794:main.c        ****             {
 795:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 2440              		.loc 1 795 0
 2441 0588 4C4B     		ldr	r3, .L227+8
 2442 058a 1B78     		ldrb	r3, [r3]
 2443 058c DBB2     		uxtb	r3, r3
 2444 058e 504A     		ldr	r2, .L227+28
 2445 0590 5B00     		lsls	r3, r3, #1
 2446 0592 1344     		add	r3, r3, r2
 2447 0594 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2448 0596 1A46     		mov	r2, r3
 2449 0598 0123     		movs	r3, #1
 2450 059a 9340     		lsls	r3, r3, r2
 2451 059c DAB2     		uxtb	r2, r3
 2452 059e 454B     		ldr	r3, .L227
 2453 05a0 1A70     		strb	r2, [r3]
 796:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 2454              		.loc 1 796 0
 2455 05a2 0022     		movs	r2, #0
 2456 05a4 0121     		movs	r1, #1
 2457 05a6 7120     		movs	r0, #113
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 59


 2458 05a8 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2459 05ac 0346     		mov	r3, r0
 2460 05ae 1A46     		mov	r2, r3
 2461 05b0 414B     		ldr	r3, .L227+4
 2462 05b2 1A60     		str	r2, [r3]
 2463              	.L84:
 797:main.c        ****             }
 798:main.c        ****         }
 799:main.c        **** 
 800:main.c        ****         CyDelayUs(10);
 2464              		.loc 1 800 0
 2465 05b4 0A20     		movs	r0, #10
 2466 05b6 FFF7FEFF 		bl	CyDelayUs
 801:main.c        ****         //if it's a hall sensor
 802:main.c        **** 
 803:main.c        ****         //temporarily don't scan vertical knee lever, should be <10 normally
 804:main.c        ****         if (main_counter < 10)
 2467              		.loc 1 804 0
 2468 05ba 404B     		ldr	r3, .L227+8
 2469 05bc 1B78     		ldrb	r3, [r3]
 2470 05be DBB2     		uxtb	r3, r3
 2471 05c0 092B     		cmp	r3, #9
 2472 05c2 00F2BF80 		bhi	.L85
 805:main.c        ****         {
 806:main.c        ****             if (!i2c_skipped[main_counter])
 2473              		.loc 1 806 0
 2474 05c6 3D4B     		ldr	r3, .L227+8
 2475 05c8 1B78     		ldrb	r3, [r3]
 2476 05ca DBB2     		uxtb	r3, r3
 2477 05cc 1A46     		mov	r2, r3
 2478 05ce 424B     		ldr	r3, .L227+36
 2479 05d0 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2480 05d2 002B     		cmp	r3, #0
 2481 05d4 40F0B680 		bne	.L85
 807:main.c        ****             {
 808:main.c        ****                 //CyDelayUs(100);
 809:main.c        ****                 I2Cbuff1[0] = 0x0E;
 2482              		.loc 1 809 0
 2483 05d8 364B     		ldr	r3, .L227
 2484 05da 0E22     		movs	r2, #14
 2485 05dc 1A70     		strb	r2, [r3]
 810:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 2486              		.loc 1 810 0
 2487 05de 0222     		movs	r2, #2
 2488 05e0 0121     		movs	r1, #1
 2489 05e2 3620     		movs	r0, #54
 2490 05e4 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2491 05e8 0346     		mov	r3, r0
 2492 05ea 1A46     		mov	r2, r3
 2493 05ec 324B     		ldr	r3, .L227+4
 2494 05ee 1A60     		str	r2, [r3]
 811:main.c        ****                 if (status == 0)
 2495              		.loc 1 811 0
 2496 05f0 314B     		ldr	r3, .L227+4
 2497 05f2 1B68     		ldr	r3, [r3]
 2498 05f4 002B     		cmp	r3, #0
 2499 05f6 08D1     		bne	.L86
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 60


 812:main.c        ****                 {
 813:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 2500              		.loc 1 813 0
 2501 05f8 0122     		movs	r2, #1
 2502 05fa 0221     		movs	r1, #2
 2503 05fc 3620     		movs	r0, #54
 2504 05fe FFF7FEFF 		bl	I2C_MasterReadBlocking
 2505 0602 0346     		mov	r3, r0
 2506 0604 1A46     		mov	r2, r3
 2507 0606 2C4B     		ldr	r3, .L227+4
 2508 0608 1A60     		str	r2, [r3]
 2509              	.L86:
 814:main.c        ****                 }
 815:main.c        ****                 if (status  == 0)
 2510              		.loc 1 815 0
 2511 060a 2B4B     		ldr	r3, .L227+4
 2512 060c 1B68     		ldr	r3, [r3]
 2513 060e 002B     		cmp	r3, #0
 2514 0610 40F09880 		bne	.L85
 816:main.c        ****                 {
 817:main.c        ****                     //CyDelayUs(100);
 818:main.c        ****                     angle[main_counter] = I2Cbuff2[0] << 8;
 2515              		.loc 1 818 0
 2516 0614 294B     		ldr	r3, .L227+8
 2517 0616 1B78     		ldrb	r3, [r3]
 2518 0618 DBB2     		uxtb	r3, r3
 2519 061a 1A46     		mov	r2, r3
 2520 061c 2F4B     		ldr	r3, .L227+40
 2521 061e 1B78     		ldrb	r3, [r3]
 2522 0620 DBB2     		uxtb	r3, r3
 2523 0622 9BB2     		uxth	r3, r3
 2524 0624 1B02     		lsls	r3, r3, #8
 2525 0626 99B2     		uxth	r1, r3
 2526 0628 2D4B     		ldr	r3, .L227+44
 2527 062a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 819:main.c        ****                     angle[main_counter] +=  I2Cbuff2[1];
 2528              		.loc 1 819 0
 2529 062e 2B4B     		ldr	r3, .L227+40
 2530 0630 5B78     		ldrb	r3, [r3, #1]
 2531 0632 D8B2     		uxtb	r0, r3
 2532 0634 214B     		ldr	r3, .L227+8
 2533 0636 1B78     		ldrb	r3, [r3]
 2534 0638 DBB2     		uxtb	r3, r3
 2535 063a 1946     		mov	r1, r3
 2536 063c 1A46     		mov	r2, r3
 2537 063e 284B     		ldr	r3, .L227+44
 2538 0640 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2539 0644 83B2     		uxth	r3, r0
 2540 0646 1344     		add	r3, r3, r2
 2541 0648 9AB2     		uxth	r2, r3
 2542 064a 254B     		ldr	r3, .L227+44
 2543 064c 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 820:main.c        ****                     
 821:main.c        ****                     if (calibrationMode)
 2544              		.loc 1 821 0
 2545 0650 244B     		ldr	r3, .L227+48
 2546 0652 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 61


 2547 0654 002B     		cmp	r3, #0
 2548 0656 75D0     		beq	.L85
 822:main.c        ****                     {
 823:main.c        ****                         if (angle[main_counter] < pedals_low[main_counter])
 2549              		.loc 1 823 0
 2550 0658 184B     		ldr	r3, .L227+8
 2551 065a 1B78     		ldrb	r3, [r3]
 2552 065c DBB2     		uxtb	r3, r3
 2553 065e 1A46     		mov	r2, r3
 2554 0660 1F4B     		ldr	r3, .L227+44
 2555 0662 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2556 0666 154B     		ldr	r3, .L227+8
 2557 0668 1B78     		ldrb	r3, [r3]
 2558 066a DBB2     		uxtb	r3, r3
 2559 066c 1946     		mov	r1, r3
 2560 066e 1E4B     		ldr	r3, .L227+52
 2561 0670 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2562 0674 9A42     		cmp	r2, r3
 2563 0676 47D2     		bcs	.L87
 824:main.c        ****                         {
 825:main.c        ****                             if (main_counter == 0)
 2564              		.loc 1 825 0
 2565 0678 104B     		ldr	r3, .L227+8
 2566 067a 1B78     		ldrb	r3, [r3]
 2567 067c DBB2     		uxtb	r3, r3
 2568 067e 002B     		cmp	r3, #0
 2569 0680 34D1     		bne	.L88
 826:main.c        ****                             {
 827:main.c        ****                                 if (angle[main_counter] != 0)
 2570              		.loc 1 827 0
 2571 0682 0E4B     		ldr	r3, .L227+8
 2572 0684 1B78     		ldrb	r3, [r3]
 2573 0686 DBB2     		uxtb	r3, r3
 2574 0688 1A46     		mov	r2, r3
 2575 068a 154B     		ldr	r3, .L227+44
 2576 068c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2577 0690 002B     		cmp	r3, #0
 2578 0692 39D0     		beq	.L87
 828:main.c        ****                                 {
 829:main.c        ****                                      pedals_low[main_counter] = angle[main_counter];
 2579              		.loc 1 829 0
 2580 0694 094B     		ldr	r3, .L227+8
 2581 0696 1B78     		ldrb	r3, [r3]
 2582 0698 DBB2     		uxtb	r3, r3
 2583 069a 1A46     		mov	r2, r3
 2584 069c 074B     		ldr	r3, .L227+8
 2585 069e 1B78     		ldrb	r3, [r3]
 2586 06a0 DBB2     		uxtb	r3, r3
 2587 06a2 1946     		mov	r1, r3
 2588 06a4 0E4B     		ldr	r3, .L227+44
 2589 06a6 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2590 06aa 0F4B     		ldr	r3, .L227+52
 2591 06ac 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2592 06b0 2AE0     		b	.L87
 2593              	.L228:
 2594 06b2 00BF     		.align	2
 2595              	.L227:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 62


 2596 06b4 00000000 		.word	I2Cbuff1
 2597 06b8 00000000 		.word	status
 2598 06bc 00000000 		.word	main_counter
 2599 06c0 00000000 		.word	spis_1_ss
 2600 06c4 00000000 		.word	spis_2_ss
 2601 06c8 00000000 		.word	myArray
 2602 06cc 00000000 		.word	parseThatMF
 2603 06d0 00000000 		.word	mux_states
 2604 06d4 00000000 		.word	last_mux
 2605 06d8 00000000 		.word	i2c_skipped
 2606 06dc 00000000 		.word	I2Cbuff2
 2607 06e0 00000000 		.word	angle
 2608 06e4 00000000 		.word	calibrationMode
 2609 06e8 00000000 		.word	pedals_low
 2610              	.L88:
 830:main.c        ****                                 }
 831:main.c        ****                             }
 832:main.c        ****                             else
 833:main.c        ****                             {
 834:main.c        ****                                 pedals_low[main_counter] = angle[main_counter];
 2611              		.loc 1 834 0
 2612 06ec 9B4B     		ldr	r3, .L229
 2613 06ee 1B78     		ldrb	r3, [r3]
 2614 06f0 DBB2     		uxtb	r3, r3
 2615 06f2 1A46     		mov	r2, r3
 2616 06f4 994B     		ldr	r3, .L229
 2617 06f6 1B78     		ldrb	r3, [r3]
 2618 06f8 DBB2     		uxtb	r3, r3
 2619 06fa 1946     		mov	r1, r3
 2620 06fc 984B     		ldr	r3, .L229+4
 2621 06fe 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2622 0702 984B     		ldr	r3, .L229+8
 2623 0704 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2624              	.L87:
 835:main.c        ****                             }
 836:main.c        ****                             
 837:main.c        ****                         }
 838:main.c        ****                         if (angle[main_counter] > pedals_high[main_counter])
 2625              		.loc 1 838 0
 2626 0708 944B     		ldr	r3, .L229
 2627 070a 1B78     		ldrb	r3, [r3]
 2628 070c DBB2     		uxtb	r3, r3
 2629 070e 1A46     		mov	r2, r3
 2630 0710 934B     		ldr	r3, .L229+4
 2631 0712 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2632 0716 914B     		ldr	r3, .L229
 2633 0718 1B78     		ldrb	r3, [r3]
 2634 071a DBB2     		uxtb	r3, r3
 2635 071c 1946     		mov	r1, r3
 2636 071e 924B     		ldr	r3, .L229+12
 2637 0720 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2638 0724 9A42     		cmp	r2, r3
 2639 0726 0DD9     		bls	.L85
 839:main.c        ****                         {
 840:main.c        ****                              pedals_high[main_counter] = angle[main_counter];
 2640              		.loc 1 840 0
 2641 0728 8C4B     		ldr	r3, .L229
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 63


 2642 072a 1B78     		ldrb	r3, [r3]
 2643 072c DBB2     		uxtb	r3, r3
 2644 072e 1A46     		mov	r2, r3
 2645 0730 8A4B     		ldr	r3, .L229
 2646 0732 1B78     		ldrb	r3, [r3]
 2647 0734 DBB2     		uxtb	r3, r3
 2648 0736 1946     		mov	r1, r3
 2649 0738 894B     		ldr	r3, .L229+4
 2650 073a 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2651 073e 8A4B     		ldr	r3, .L229+12
 2652 0740 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2653              	.L85:
 841:main.c        ****                         }
 842:main.c        ****                     }
 843:main.c        ****                 }
 844:main.c        ****             }
 845:main.c        ****         }
 846:main.c        ****         
 847:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 848:main.c        ****         if (main_counter == 9)
 2654              		.loc 1 848 0
 2655 0744 854B     		ldr	r3, .L229
 2656 0746 1B78     		ldrb	r3, [r3]
 2657 0748 DBB2     		uxtb	r3, r3
 2658 074a 092B     		cmp	r3, #9
 2659 074c 40F08780 		bne	.L90
 849:main.c        ****         {
 850:main.c        ****             if (!i2c_skipped[main_counter])
 2660              		.loc 1 850 0
 2661 0750 824B     		ldr	r3, .L229
 2662 0752 1B78     		ldrb	r3, [r3]
 2663 0754 DBB2     		uxtb	r3, r3
 2664 0756 1A46     		mov	r2, r3
 2665 0758 844B     		ldr	r3, .L229+16
 2666 075a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2667 075c 002B     		cmp	r3, #0
 2668 075e 40F0C580 		bne	.L94
 851:main.c        ****             {
 852:main.c        ****                 //scan the knob adc
 853:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2669              		.loc 1 853 0
 2670 0762 834B     		ldr	r3, .L229+20
 2671 0764 0022     		movs	r2, #0
 2672 0766 1A70     		strb	r2, [r3]
 854:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 2673              		.loc 1 854 0
 2674 0768 0022     		movs	r2, #0
 2675 076a 1021     		movs	r1, #16
 2676 076c 3520     		movs	r0, #53
 2677 076e FFF7FEFF 		bl	I2C_MasterReadBlocking
 2678 0772 0346     		mov	r3, r0
 2679 0774 1A46     		mov	r2, r3
 2680 0776 7F4B     		ldr	r3, .L229+24
 2681 0778 1A60     		str	r2, [r3]
 855:main.c        ****                 if (status == 0)
 2682              		.loc 1 855 0
 2683 077a 7E4B     		ldr	r3, .L229+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 64


 2684 077c 1B68     		ldr	r3, [r3]
 2685 077e 002B     		cmp	r3, #0
 2686 0780 40F0B480 		bne	.L94
 2687              	.LBB18:
 856:main.c        ****                 {
 857:main.c        ****                     for (int i = 0; i < NUM_MACROS; i++)
 2688              		.loc 1 857 0
 2689 0784 0023     		movs	r3, #0
 2690 0786 7B67     		str	r3, [r7, #116]
 2691 0788 20E0     		b	.L92
 2692              	.L93:
 2693              	.LBB19:
 858:main.c        ****                     {
 859:main.c        ****                        uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[i*2] & 255)) & 4095; // 
 2694              		.loc 1 859 0 discriminator 3
 2695 078a 7B6F     		ldr	r3, [r7, #116]
 2696 078c 5B00     		lsls	r3, r3, #1
 2697 078e 7A4A     		ldr	r2, .L229+28
 2698 0790 D35C     		ldrb	r3, [r2, r3]
 2699 0792 DBB2     		uxtb	r3, r3
 2700 0794 9BB2     		uxth	r3, r3
 2701 0796 1B02     		lsls	r3, r3, #8
 2702 0798 9AB2     		uxth	r2, r3
 2703 079a 7B6F     		ldr	r3, [r7, #116]
 2704 079c 5B00     		lsls	r3, r3, #1
 2705 079e 7649     		ldr	r1, .L229+28
 2706 07a0 CB5C     		ldrb	r3, [r1, r3]
 2707 07a2 DBB2     		uxtb	r3, r3
 2708 07a4 9BB2     		uxth	r3, r3
 2709 07a6 1344     		add	r3, r3, r2
 2710 07a8 9BB2     		uxth	r3, r3
 2711 07aa C3F30B03 		ubfx	r3, r3, #0, #12
 2712 07ae 3B80     		strh	r3, [r7]	@ movhi
 860:main.c        ****                         macroKnobValues[i] = 255 - (tempInt >> 4); //now squish it down to 8 bit fo
 2713              		.loc 1 860 0 discriminator 3
 2714 07b0 3B88     		ldrh	r3, [r7]
 2715 07b2 1B09     		lsrs	r3, r3, #4
 2716 07b4 9BB2     		uxth	r3, r3
 2717 07b6 DBB2     		uxtb	r3, r3
 2718 07b8 DB43     		mvns	r3, r3
 2719 07ba D9B2     		uxtb	r1, r3
 2720 07bc 6F4A     		ldr	r2, .L229+32
 2721 07be 7B6F     		ldr	r3, [r7, #116]
 2722 07c0 1344     		add	r3, r3, r2
 2723 07c2 0A46     		mov	r2, r1
 2724 07c4 1A70     		strb	r2, [r3]
 2725              	.LBE19:
 857:main.c        ****                     {
 2726              		.loc 1 857 0 discriminator 3
 2727 07c6 7B6F     		ldr	r3, [r7, #116]
 2728 07c8 0133     		adds	r3, r3, #1
 2729 07ca 7B67     		str	r3, [r7, #116]
 2730              	.L92:
 857:main.c        ****                     {
 2731              		.loc 1 857 0 is_stmt 0 discriminator 1
 2732 07cc 7B6F     		ldr	r3, [r7, #116]
 2733 07ce 072B     		cmp	r3, #7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 65


 2734 07d0 DBDD     		ble	.L93
 2735              	.LBE18:
 861:main.c        ****                     }
 862:main.c        ****                     //
 863:main.c        ****                     if (macroOLEDWaitingToSend == 2)
 2736              		.loc 1 863 0 is_stmt 1
 2737 07d2 6B4B     		ldr	r3, .L229+36
 2738 07d4 1B68     		ldr	r3, [r3]
 2739 07d6 022B     		cmp	r3, #2
 2740 07d8 40F08880 		bne	.L94
 864:main.c        ****                     {
 865:main.c        ****                         //send the data to the little macro OLED screens
 866:main.c        ****                         
 867:main.c        ****                         I2Cbuff1[0] = (1 << 3) + whichMacro;
 2741              		.loc 1 867 0
 2742 07dc 694B     		ldr	r3, .L229+40
 2743 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2744 07e0 0833     		adds	r3, r3, #8
 2745 07e2 DAB2     		uxtb	r2, r3
 2746 07e4 624B     		ldr	r3, .L229+20
 2747 07e6 1A70     		strb	r2, [r3]
 868:main.c        ****                         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2748              		.loc 1 868 0
 2749 07e8 0022     		movs	r2, #0
 2750 07ea 0121     		movs	r1, #1
 2751 07ec 7220     		movs	r0, #114
 2752 07ee FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2753 07f2 0346     		mov	r3, r0
 2754 07f4 1A46     		mov	r2, r3
 2755 07f6 5F4B     		ldr	r3, .L229+24
 2756 07f8 1A60     		str	r2, [r3]
 869:main.c        ****                         //OLED_init(128, 32);
 870:main.c        ****                         OLEDclear(128, 32);
 2757              		.loc 1 870 0
 2758 07fa 2021     		movs	r1, #32
 2759 07fc 8020     		movs	r0, #128
 2760 07fe FFF7FEFF 		bl	OLEDclear
 871:main.c        ****                         //OLEDwriteInt(w , 1, 0,FirstLine);
 872:main.c        ****                         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 873:main.c        ****                         myGFX_setFont(1);
 2761              		.loc 1 873 0
 2762 0802 0120     		movs	r0, #1
 2763 0804 FFF7FEFF 		bl	myGFX_setFont
 874:main.c        ****                         //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
 875:main.c        ****                         OLEDwriteString((char *)&macroNamesArray[patchNum][whichMacro][0], MACRO_CL
 2764              		.loc 1 875 0
 2765 0808 5F4B     		ldr	r3, .L229+44
 2766 080a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2767 080c 1946     		mov	r1, r3
 2768 080e 5D4B     		ldr	r3, .L229+40
 2769 0810 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2770 0812 1A46     		mov	r2, r3
 2771 0814 D200     		lsls	r2, r2, #3
 2772 0816 D21A     		subs	r2, r2, r3
 2773 0818 5300     		lsls	r3, r2, #1
 2774 081a 1A46     		mov	r2, r3
 2775 081c 0B46     		mov	r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 66


 2776 081e DB00     		lsls	r3, r3, #3
 2777 0820 5B1A     		subs	r3, r3, r1
 2778 0822 1B01     		lsls	r3, r3, #4
 2779 0824 1344     		add	r3, r3, r2
 2780 0826 594A     		ldr	r2, .L229+48
 2781 0828 9818     		adds	r0, r3, r2
 2782 082a 0123     		movs	r3, #1
 2783 082c 0022     		movs	r2, #0
 2784 082e 0821     		movs	r1, #8
 2785 0830 FFF7FEFF 		bl	OLEDwriteString
 876:main.c        ****                         OLED_draw(128, 32);
 2786              		.loc 1 876 0
 2787 0834 2021     		movs	r1, #32
 2788 0836 8020     		movs	r0, #128
 2789 0838 FFF7FEFF 		bl	OLED_draw
 877:main.c        **** 
 878:main.c        ****                         whichMacro++;
 2790              		.loc 1 878 0
 2791 083c 514B     		ldr	r3, .L229+40
 2792 083e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2793 0840 0133     		adds	r3, r3, #1
 2794 0842 DAB2     		uxtb	r2, r3
 2795 0844 4F4B     		ldr	r3, .L229+40
 2796 0846 1A70     		strb	r2, [r3]
 879:main.c        ****                         if (whichMacro >=8)
 2797              		.loc 1 879 0
 2798 0848 4E4B     		ldr	r3, .L229+40
 2799 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2800 084c 072B     		cmp	r3, #7
 2801 084e 4DD9     		bls	.L94
 880:main.c        ****                         {
 881:main.c        ****                             macroOLEDWaitingToSend = 0;
 2802              		.loc 1 881 0
 2803 0850 4B4B     		ldr	r3, .L229+36
 2804 0852 0022     		movs	r2, #0
 2805 0854 1A60     		str	r2, [r3]
 882:main.c        ****                             whichMacro = 0;
 2806              		.loc 1 882 0
 2807 0856 4B4B     		ldr	r3, .L229+40
 2808 0858 0022     		movs	r2, #0
 2809 085a 1A70     		strb	r2, [r3]
 2810 085c 46E0     		b	.L94
 2811              	.L90:
 883:main.c        ****                         }
 884:main.c        ****                     }
 885:main.c        ****                 }
 886:main.c        ****             }
 887:main.c        ****             
 888:main.c        ****         }
 889:main.c        ****         //otherwise it's the ADC for the foot pedal
 890:main.c        ****         else if (main_counter == 10)
 2812              		.loc 1 890 0
 2813 085e 3F4B     		ldr	r3, .L229
 2814 0860 1B78     		ldrb	r3, [r3]
 2815 0862 DBB2     		uxtb	r3, r3
 2816 0864 0A2B     		cmp	r3, #10
 2817 0866 2AD1     		bne	.L95
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 67


 891:main.c        ****         {
 892:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 893:main.c        ****             if (!i2c_skipped[main_counter])
 2818              		.loc 1 893 0
 2819 0868 3C4B     		ldr	r3, .L229
 2820 086a 1B78     		ldrb	r3, [r3]
 2821 086c DBB2     		uxtb	r3, r3
 2822 086e 1A46     		mov	r2, r3
 2823 0870 3E4B     		ldr	r3, .L229+16
 2824 0872 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2825 0874 002B     		cmp	r3, #0
 2826 0876 39D1     		bne	.L94
 894:main.c        ****             {
 895:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2827              		.loc 1 895 0
 2828 0878 3D4B     		ldr	r3, .L229+20
 2829 087a 0022     		movs	r2, #0
 2830 087c 1A70     		strb	r2, [r3]
 896:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 2831              		.loc 1 896 0
 2832 087e 0022     		movs	r2, #0
 2833 0880 0221     		movs	r1, #2
 2834 0882 4F20     		movs	r0, #79
 2835 0884 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2836 0888 0346     		mov	r3, r0
 2837 088a 1A46     		mov	r2, r3
 2838 088c 394B     		ldr	r3, .L229+24
 2839 088e 1A60     		str	r2, [r3]
 897:main.c        ****                 if (status == 0)
 2840              		.loc 1 897 0
 2841 0890 384B     		ldr	r3, .L229+24
 2842 0892 1B68     		ldr	r3, [r3]
 2843 0894 002B     		cmp	r3, #0
 2844 0896 29D1     		bne	.L94
 898:main.c        ****                 {
 899:main.c        ****                     volumePedal = I2Cbuff2[0] << 8;
 2845              		.loc 1 899 0
 2846 0898 374B     		ldr	r3, .L229+28
 2847 089a 1B78     		ldrb	r3, [r3]
 2848 089c DBB2     		uxtb	r3, r3
 2849 089e 9BB2     		uxth	r3, r3
 2850 08a0 1B02     		lsls	r3, r3, #8
 2851 08a2 9AB2     		uxth	r2, r3
 2852 08a4 3A4B     		ldr	r3, .L229+52
 2853 08a6 1A80     		strh	r2, [r3]	@ movhi
 900:main.c        ****                     volumePedal +=  I2Cbuff2[1];
 2854              		.loc 1 900 0
 2855 08a8 334B     		ldr	r3, .L229+28
 2856 08aa 5B78     		ldrb	r3, [r3, #1]
 2857 08ac DBB2     		uxtb	r3, r3
 2858 08ae 9AB2     		uxth	r2, r3
 2859 08b0 374B     		ldr	r3, .L229+52
 2860 08b2 1B88     		ldrh	r3, [r3]
 2861 08b4 1344     		add	r3, r3, r2
 2862 08b6 9AB2     		uxth	r2, r3
 2863 08b8 354B     		ldr	r3, .L229+52
 2864 08ba 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 68


 2865 08bc 16E0     		b	.L94
 2866              	.L95:
 901:main.c        ****                 }
 902:main.c        ****             }
 903:main.c        ****         }
 904:main.c        ****         else
 905:main.c        ****         if (main_counter == 11)
 2867              		.loc 1 905 0
 2868 08be 274B     		ldr	r3, .L229
 2869 08c0 1B78     		ldrb	r3, [r3]
 2870 08c2 DBB2     		uxtb	r3, r3
 2871 08c4 0B2B     		cmp	r3, #11
 2872 08c6 11D1     		bne	.L94
 906:main.c        ****         { 
 907:main.c        ****             if (mainOLEDWaitingToSend)
 2873              		.loc 1 907 0
 2874 08c8 324B     		ldr	r3, .L229+56
 2875 08ca 1B68     		ldr	r3, [r3]
 2876 08cc 002B     		cmp	r3, #0
 2877 08ce 06D0     		beq	.L97
 908:main.c        ****             {
 909:main.c        ****                 OLED_draw(128, 64);
 2878              		.loc 1 909 0
 2879 08d0 4021     		movs	r1, #64
 2880 08d2 8020     		movs	r0, #128
 2881 08d4 FFF7FEFF 		bl	OLED_draw
 910:main.c        ****                 mainOLEDWaitingToSend = 0;
 2882              		.loc 1 910 0
 2883 08d8 2E4B     		ldr	r3, .L229+56
 2884 08da 0022     		movs	r2, #0
 2885 08dc 1A60     		str	r2, [r3]
 2886              	.L97:
 911:main.c        ****             }
 912:main.c        ****             if (macroOLEDWaitingToSend == 1)
 2887              		.loc 1 912 0
 2888 08de 284B     		ldr	r3, .L229+36
 2889 08e0 1B68     		ldr	r3, [r3]
 2890 08e2 012B     		cmp	r3, #1
 2891 08e4 02D1     		bne	.L94
 913:main.c        ****             {
 914:main.c        ****                 macroOLEDWaitingToSend = 2;
 2892              		.loc 1 914 0
 2893 08e6 264B     		ldr	r3, .L229+36
 2894 08e8 0222     		movs	r2, #2
 2895 08ea 1A60     		str	r2, [r3]
 2896              	.L94:
 915:main.c        ****             }
 916:main.c        ****             
 917:main.c        ****             #if 0
 918:main.c        ****             if (OLEDcount == 0)
 919:main.c        ****             {
 920:main.c        ****                 OLEDclearLine(FirstLine);
 921:main.c        ****             }
 922:main.c        ****             else if (OLEDcount == 1)
 923:main.c        ****             {
 924:main.c        ****                 OLEDwriteInt(encoderNum, 2, 0, FirstLine);
 925:main.c        **** 		    }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 69


 926:main.c        ****             else if (OLEDcount == 2)
 927:main.c        ****             {
 928:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
 929:main.c        ****             }
 930:main.c        ****             else if (OLEDcount == 3)
 931:main.c        ****             {
 932:main.c        ****                 OLEDwriteInt(encoderVal[encoderNum], 3, OLEDgetCursor(), FirstLine);
 933:main.c        ****             }
 934:main.c        ****             else if (OLEDcount == 4)
 935:main.c        ****             {
 936:main.c        ****                 OLEDwriteString("     ", 5, OLEDgetCursor(), FirstLine);
 937:main.c        ****             }
 938:main.c        ****             else if (OLEDcount == 5)
 939:main.c        ****             {
 940:main.c        ****                 OLEDwriteInt(patchNum, 2, OLEDgetCursor(), FirstLine);
 941:main.c        ****             }
 942:main.c        ****             else if (OLEDcount == 6)
 943:main.c        ****             {
 944:main.c        ****                 //OLED_drawFirstLine();
 945:main.c        ****                 
 946:main.c        ****                 //OLEDwriteInt( bar[0] , 6, 0,SecondLine);
 947:main.c        ****                 //OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 948:main.c        ****                 //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 949:main.c        ****                 //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_B
 950:main.c        ****                  //OLED_draw();
 951:main.c        ****             }
 952:main.c        ****             OLEDcount++;
 953:main.c        ****             if (OLEDcount > 6)
 954:main.c        ****             {
 955:main.c        ****                 OLEDcount = 0;
 956:main.c        ****             }
 957:main.c        ****             #endif
 958:main.c        ****         }
 959:main.c        **** 
 960:main.c        ****         /*
 961:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
 962:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 963:main.c        **** 
 964:main.c        ****                 for (int i = 0; i < 5; i++)
 965:main.c        ****                 {
 966:main.c        ****                     I2Cbuff1[0] = 1<<i;
 967:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 968:main.c        **** 
 969:main.c        ****                     I2Cbuff1[0] = 0x0E;
 970:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 971:main.c        **** 
 972:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 973:main.c        **** 
 974:main.c        **** 
 975:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 976:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 977:main.c        ****                 }
 978:main.c        ****             if (main_counter == 0)
 979:main.c        ****             {               
 980:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
 981:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 982:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 70


 983:main.c        ****                 for (int i = 0; i < 5; i++)
 984:main.c        ****                 {
 985:main.c        ****                     I2Cbuff1[0] = 1<<i;
 986:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 987:main.c        **** 
 988:main.c        ****                     I2Cbuff1[0] = 0x0E;
 989:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 990:main.c        **** 
 991:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 992:main.c        **** 
 993:main.c        **** 
 994:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 995:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 996:main.c        ****                 }
 997:main.c        ****             }
 998:main.c        ****             else
 999:main.c        ****             {
1000:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
1001:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1002:main.c        ****                 I2Cbuff1[0] = 0x0E;
1003:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
1004:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
1005:main.c        ****                 {
1006:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
1007:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1008:main.c        ****                 }
1009:main.c        ****            
1010:main.c        **** 
1011:main.c        **** 
1012:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
1013:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
1014:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
1015:main.c        ****                 {
1016:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
1017:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1018:main.c        ****                 }
1019:main.c        ****                 
1020:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
1021:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
1022:main.c        ****             }    
1023:main.c        ****                 
1024:main.c        **** 
1025:main.c        ****             send_it = 1;
1026:main.c        ****         }
1027:main.c        ****         */
1028:main.c        ****         
1029:main.c        ****         if (main_counter < 10)
 2897              		.loc 1 1029 0
 2898 08ec 1B4B     		ldr	r3, .L229
 2899 08ee 1B78     		ldrb	r3, [r3]
 2900 08f0 DBB2     		uxtb	r3, r3
 2901 08f2 092B     		cmp	r3, #9
 2902 08f4 00F2EC80 		bhi	.L98
 2903              	.LBB20:
1030:main.c        ****         {
1031:main.c        ****             
1032:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 71


1033:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_low[main_counter])
 2904              		.loc 1 1033 0
 2905 08f8 184B     		ldr	r3, .L229
 2906 08fa 1B78     		ldrb	r3, [r3]
 2907 08fc DBB2     		uxtb	r3, r3
 2908 08fe 1A46     		mov	r2, r3
 2909 0900 174B     		ldr	r3, .L229+4
 2910 0902 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2911 0906 154B     		ldr	r3, .L229
 2912 0908 1B78     		ldrb	r3, [r3]
 2913 090a DBB2     		uxtb	r3, r3
 2914 090c 1946     		mov	r1, r3
 2915 090e 154B     		ldr	r3, .L229+8
 2916 0910 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2917 0914 D31A     		subs	r3, r2, r3
 2918 0916 9BB2     		uxth	r3, r3
 2919 0918 3B85     		strh	r3, [r7, #40]	@ movhi
1034:main.c        ****             
1035:main.c        ****             if (tempangle > 0)
 2920              		.loc 1 1035 0
 2921 091a B7F92830 		ldrsh	r3, [r7, #40]
 2922 091e 002B     		cmp	r3, #0
 2923 0920 3EDD     		ble	.L99
1036:main.c        ****             {
1037:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 2924              		.loc 1 1037 0
 2925 0922 0E4B     		ldr	r3, .L229
 2926 0924 1B78     		ldrb	r3, [r3]
 2927 0926 DBB2     		uxtb	r3, r3
 2928 0928 1C46     		mov	r4, r3
 2929 092a B7F92830 		ldrsh	r3, [r7, #40]
 2930 092e 1846     		mov	r0, r3
 2931 0930 FFF7FEFF 		bl	__aeabi_i2f
 2932 0934 094B     		ldr	r3, .L229
 2933 0936 1B78     		ldrb	r3, [r3]
 2934 0938 DBB2     		uxtb	r3, r3
 2935 093a 1A46     		mov	r2, r3
 2936 093c 164B     		ldr	r3, .L229+60
 2937 093e 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 2938 0942 1946     		mov	r1, r3
 2939 0944 FFF7FEFF 		bl	__aeabi_fmul
 2940 0948 0346     		mov	r3, r0
 2941 094a 1846     		mov	r0, r3
 2942 094c FFF7FEFF 		bl	__aeabi_f2uiz
 2943 0950 0346     		mov	r3, r0
 2944 0952 9AB2     		uxth	r2, r3
 2945 0954 114B     		ldr	r3, .L229+64
 2946 0956 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 2947 095a 29E0     		b	.L100
 2948              	.L230:
 2949              		.align	2
 2950              	.L229:
 2951 095c 00000000 		.word	main_counter
 2952 0960 00000000 		.word	angle
 2953 0964 00000000 		.word	pedals_low
 2954 0968 00000000 		.word	pedals_high
 2955 096c 00000000 		.word	i2c_skipped
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 72


 2956 0970 00000000 		.word	I2Cbuff1
 2957 0974 00000000 		.word	status
 2958 0978 00000000 		.word	I2Cbuff2
 2959 097c 00000000 		.word	macroKnobValues
 2960 0980 00000000 		.word	macroOLEDWaitingToSend
 2961 0984 00000000 		.word	whichMacro
 2962 0988 00000000 		.word	patchNum
 2963 098c 00000000 		.word	macroNamesArray
 2964 0990 00000000 		.word	volumePedal
 2965 0994 00000000 		.word	mainOLEDWaitingToSend
 2966 0998 00000000 		.word	pedalRatios
 2967 099c 00000000 		.word	processed_pedals
 2968              	.L99:
1038:main.c        ****             }
1039:main.c        ****             else
1040:main.c        ****             {
1041:main.c        ****                 processed_pedals[main_counter] = 0;
 2969              		.loc 1 1041 0
 2970 09a0 864B     		ldr	r3, .L231
 2971 09a2 1B78     		ldrb	r3, [r3]
 2972 09a4 DBB2     		uxtb	r3, r3
 2973 09a6 1A46     		mov	r2, r3
 2974 09a8 854B     		ldr	r3, .L231+4
 2975 09aa 0021     		movs	r1, #0
 2976 09ac 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2977              	.L100:
1042:main.c        ****             }
1043:main.c        ****             if (processed_pedals[main_counter] > 4095)
 2978              		.loc 1 1043 0
 2979 09b0 824B     		ldr	r3, .L231
 2980 09b2 1B78     		ldrb	r3, [r3]
 2981 09b4 DBB2     		uxtb	r3, r3
 2982 09b6 1A46     		mov	r2, r3
 2983 09b8 814B     		ldr	r3, .L231+4
 2984 09ba 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2985 09be B3F5805F 		cmp	r3, #4096
 2986 09c2 08D3     		bcc	.L101
1044:main.c        ****             {
1045:main.c        ****                 processed_pedals[main_counter] = 4095;
 2987              		.loc 1 1045 0
 2988 09c4 7D4B     		ldr	r3, .L231
 2989 09c6 1B78     		ldrb	r3, [r3]
 2990 09c8 DBB2     		uxtb	r3, r3
 2991 09ca 1A46     		mov	r2, r3
 2992 09cc 7C4B     		ldr	r3, .L231+4
 2993 09ce 40F6FF71 		movw	r1, #4095
 2994 09d2 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2995              	.L101:
1046:main.c        ****             }
1047:main.c        ****             
1048:main.c        ****             
1049:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
1050:main.c        ****             {
1051:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
1052:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
1053:main.c        ****             }
1054:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 73


 2996              		.loc 1 1054 0
 2997 09d6 794B     		ldr	r3, .L231
 2998 09d8 1B78     		ldrb	r3, [r3]
 2999 09da DBB2     		uxtb	r3, r3
 3000 09dc 1C46     		mov	r4, r3
 3001 09de 774B     		ldr	r3, .L231
 3002 09e0 1B78     		ldrb	r3, [r3]
 3003 09e2 DBB2     		uxtb	r3, r3
 3004 09e4 1A46     		mov	r2, r3
 3005 09e6 764B     		ldr	r3, .L231+4
 3006 09e8 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3007 09ec 1846     		mov	r0, r3
 3008 09ee FFF7FEFF 		bl	__aeabi_ui2f
 3009 09f2 0346     		mov	r3, r0
 3010 09f4 7349     		ldr	r1, .L231+8
 3011 09f6 1846     		mov	r0, r3
 3012 09f8 FFF7FEFF 		bl	__aeabi_fmul
 3013 09fc 0346     		mov	r3, r0
 3014 09fe 1A46     		mov	r2, r3
 3015 0a00 714B     		ldr	r3, .L231+12
 3016 0a02 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
1055:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[pedal_cc_assignments[main_counter]] 
 3017              		.loc 1 1055 0
 3018 0a06 6D4B     		ldr	r3, .L231
 3019 0a08 1B78     		ldrb	r3, [r3]
 3020 0a0a DBB2     		uxtb	r3, r3
 3021 0a0c 1C46     		mov	r4, r3
 3022 0a0e 6B4B     		ldr	r3, .L231
 3023 0a10 1B78     		ldrb	r3, [r3]
 3024 0a12 DBB2     		uxtb	r3, r3
 3025 0a14 1A46     		mov	r2, r3
 3026 0a16 6D4B     		ldr	r3, .L231+16
 3027 0a18 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3028 0a1a 1A46     		mov	r2, r3
 3029 0a1c 684B     		ldr	r3, .L231+4
 3030 0a1e 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3031 0a22 1846     		mov	r0, r3
 3032 0a24 FFF7FEFF 		bl	__aeabi_ui2f
 3033 0a28 0346     		mov	r3, r0
 3034 0a2a 4FF07651 		mov	r1, #1031798784
 3035 0a2e 1846     		mov	r0, r3
 3036 0a30 FFF7FEFF 		bl	__aeabi_fmul
 3037 0a34 0346     		mov	r3, r0
 3038 0a36 1846     		mov	r0, r3
 3039 0a38 FFF7FEFF 		bl	__aeabi_f2uiz
 3040 0a3c 0346     		mov	r3, r0
 3041 0a3e DAB2     		uxtb	r2, r3
 3042 0a40 634B     		ldr	r3, .L231+20
 3043 0a42 1A55     		strb	r2, [r3, r4]
1056:main.c        ****             pedals7bit[main_counter] = pedals8bit[main_counter] >> 1;
 3044              		.loc 1 1056 0
 3045 0a44 5D4B     		ldr	r3, .L231
 3046 0a46 1B78     		ldrb	r3, [r3]
 3047 0a48 DBB2     		uxtb	r3, r3
 3048 0a4a 1A46     		mov	r2, r3
 3049 0a4c 5B4B     		ldr	r3, .L231
 3050 0a4e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 74


 3051 0a50 DBB2     		uxtb	r3, r3
 3052 0a52 1946     		mov	r1, r3
 3053 0a54 5E4B     		ldr	r3, .L231+20
 3054 0a56 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3055 0a58 5B08     		lsrs	r3, r3, #1
 3056 0a5a D9B2     		uxtb	r1, r3
 3057 0a5c 5D4B     		ldr	r3, .L231+24
 3058 0a5e 9954     		strb	r1, [r3, r2]
1057:main.c        ****             if (pedals7bit[main_counter] != prevPedals7bit[main_counter])
 3059              		.loc 1 1057 0
 3060 0a60 564B     		ldr	r3, .L231
 3061 0a62 1B78     		ldrb	r3, [r3]
 3062 0a64 DBB2     		uxtb	r3, r3
 3063 0a66 1A46     		mov	r2, r3
 3064 0a68 5A4B     		ldr	r3, .L231+24
 3065 0a6a 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3066 0a6c 534B     		ldr	r3, .L231
 3067 0a6e 1B78     		ldrb	r3, [r3]
 3068 0a70 DBB2     		uxtb	r3, r3
 3069 0a72 1946     		mov	r1, r3
 3070 0a74 584B     		ldr	r3, .L231+28
 3071 0a76 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3072 0a78 9A42     		cmp	r2, r3
 3073 0a7a 0ED0     		beq	.L102
1058:main.c        ****             {
1059:main.c        ****                 sendMIDIControlChange(main_counter + 14, (pedals7bit[main_counter]), 1);
 3074              		.loc 1 1059 0
 3075 0a7c 4F4B     		ldr	r3, .L231
 3076 0a7e 1B78     		ldrb	r3, [r3]
 3077 0a80 DBB2     		uxtb	r3, r3
 3078 0a82 03F10E00 		add	r0, r3, #14
 3079 0a86 4D4B     		ldr	r3, .L231
 3080 0a88 1B78     		ldrb	r3, [r3]
 3081 0a8a DBB2     		uxtb	r3, r3
 3082 0a8c 1A46     		mov	r2, r3
 3083 0a8e 514B     		ldr	r3, .L231+24
 3084 0a90 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3085 0a92 0122     		movs	r2, #1
 3086 0a94 1946     		mov	r1, r3
 3087 0a96 FFF7FEFF 		bl	sendMIDIControlChange
 3088              	.L102:
1060:main.c        ****             }
1061:main.c        ****             prevPedals7bit[main_counter] = pedals7bit[main_counter];
 3089              		.loc 1 1061 0
 3090 0a9a 484B     		ldr	r3, .L231
 3091 0a9c 1B78     		ldrb	r3, [r3]
 3092 0a9e DBB2     		uxtb	r3, r3
 3093 0aa0 1A46     		mov	r2, r3
 3094 0aa2 464B     		ldr	r3, .L231
 3095 0aa4 1B78     		ldrb	r3, [r3]
 3096 0aa6 DBB2     		uxtb	r3, r3
 3097 0aa8 1946     		mov	r1, r3
 3098 0aaa 4A4B     		ldr	r3, .L231+24
 3099 0aac 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 3100 0aae 4A4B     		ldr	r3, .L231+28
 3101 0ab0 9954     		strb	r1, [r3, r2]
1062:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 75


 3102              		.loc 1 1062 0
 3103 0ab2 424B     		ldr	r3, .L231
 3104 0ab4 1B78     		ldrb	r3, [r3]
 3105 0ab6 DBB2     		uxtb	r3, r3
 3106 0ab8 1A46     		mov	r2, r3
 3107 0aba 404B     		ldr	r3, .L231
 3108 0abc 1B78     		ldrb	r3, [r3]
 3109 0abe DBB2     		uxtb	r3, r3
 3110 0ac0 1946     		mov	r1, r3
 3111 0ac2 3F4B     		ldr	r3, .L231+4
 3112 0ac4 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3113 0ac8 444B     		ldr	r3, .L231+32
 3114 0aca 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3115              	.LBE20:
 3116 0ace 3DE0     		b	.L103
 3117              	.L98:
1063:main.c        ****         }
1064:main.c        ****         else
1065:main.c        ****         {
1066:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 3118              		.loc 1 1066 0
 3119 0ad0 434B     		ldr	r3, .L231+36
 3120 0ad2 1B88     		ldrh	r3, [r3]
 3121 0ad4 1846     		mov	r0, r3
 3122 0ad6 FFF7FEFF 		bl	__aeabi_ui2f
 3123 0ada 0346     		mov	r3, r0
 3124 0adc 4149     		ldr	r1, .L231+40
 3125 0ade 1846     		mov	r0, r3
 3126 0ae0 FFF7FEFF 		bl	__aeabi_fmul
 3127 0ae4 0346     		mov	r3, r0
 3128 0ae6 1846     		mov	r0, r3
 3129 0ae8 FFF7FEFF 		bl	__aeabi_f2iz
 3130 0aec 0346     		mov	r3, r0
 3131 0aee 1AB2     		sxth	r2, r3
 3132 0af0 3D4B     		ldr	r3, .L231+44
 3133 0af2 1A80     		strh	r2, [r3]	@ movhi
1067:main.c        **** 
1068:main.c        ****             if (processed_volumePedal < 0)
 3134              		.loc 1 1068 0
 3135 0af4 3C4B     		ldr	r3, .L231+44
 3136 0af6 B3F90030 		ldrsh	r3, [r3]
 3137 0afa 002B     		cmp	r3, #0
 3138 0afc 03DA     		bge	.L104
1069:main.c        ****             {
1070:main.c        ****                 processed_volumePedal = 0;
 3139              		.loc 1 1070 0
 3140 0afe 3A4B     		ldr	r3, .L231+44
 3141 0b00 0022     		movs	r2, #0
 3142 0b02 1A80     		strh	r2, [r3]	@ movhi
 3143 0b04 09E0     		b	.L105
 3144              	.L104:
1071:main.c        ****             }
1072:main.c        ****             else if (processed_volumePedal > 4095)
 3145              		.loc 1 1072 0
 3146 0b06 384B     		ldr	r3, .L231+44
 3147 0b08 B3F90030 		ldrsh	r3, [r3]
 3148 0b0c B3F5805F 		cmp	r3, #4096
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 76


 3149 0b10 03DB     		blt	.L105
1073:main.c        ****             {
1074:main.c        ****                  processed_volumePedal = 4095;
 3150              		.loc 1 1074 0
 3151 0b12 354B     		ldr	r3, .L231+44
 3152 0b14 40F6FF72 		movw	r2, #4095
 3153 0b18 1A80     		strh	r2, [r3]	@ movhi
 3154              	.L105:
1075:main.c        ****             }
1076:main.c        ****             
1077:main.c        ****             if ( processed_volumePedal != prev_processed_volumePedal)
 3155              		.loc 1 1077 0
 3156 0b1a 334B     		ldr	r3, .L231+44
 3157 0b1c B3F90020 		ldrsh	r2, [r3]
 3158 0b20 324B     		ldr	r3, .L231+48
 3159 0b22 B3F90030 		ldrsh	r3, [r3]
 3160 0b26 9A42     		cmp	r2, r3
 3161 0b28 0BD0     		beq	.L106
 3162              	.LBB21:
1078:main.c        ****             {
1079:main.c        ****                 uint16_t tempPedal = processed_volumePedal;
 3163              		.loc 1 1079 0
 3164 0b2a 2F4B     		ldr	r3, .L231+44
 3165 0b2c B3F90030 		ldrsh	r3, [r3]
 3166 0b30 FB84     		strh	r3, [r7, #38]	@ movhi
1080:main.c        ****                 
1081:main.c        ****                 sendMIDIControlChange(13, ( tempPedal >> 5), 0);
 3167              		.loc 1 1081 0
 3168 0b32 FB8C     		ldrh	r3, [r7, #38]
 3169 0b34 5B09     		lsrs	r3, r3, #5
 3170 0b36 9BB2     		uxth	r3, r3
 3171 0b38 0022     		movs	r2, #0
 3172 0b3a 1946     		mov	r1, r3
 3173 0b3c 0D20     		movs	r0, #13
 3174 0b3e FFF7FEFF 		bl	sendMIDIControlChange
 3175              	.L106:
 3176              	.LBE21:
1082:main.c        ****                 //sendMIDIControlChange(22, ( tempPedal & 127), 0);
1083:main.c        ****             }
1084:main.c        ****              prev_processed_volumePedal = processed_volumePedal;
 3177              		.loc 1 1084 0
 3178 0b42 294B     		ldr	r3, .L231+44
 3179 0b44 B3F90020 		ldrsh	r2, [r3]
 3180 0b48 284B     		ldr	r3, .L231+48
 3181 0b4a 1A80     		strh	r2, [r3]	@ movhi
 3182              	.L103:
1085:main.c        ****         }
1086:main.c        ****         
1087:main.c        ****         main_counter++;
 3183              		.loc 1 1087 0
 3184 0b4c 1B4B     		ldr	r3, .L231
 3185 0b4e 1B78     		ldrb	r3, [r3]
 3186 0b50 DBB2     		uxtb	r3, r3
 3187 0b52 0133     		adds	r3, r3, #1
 3188 0b54 DAB2     		uxtb	r2, r3
 3189 0b56 194B     		ldr	r3, .L231
 3190 0b58 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 77


1088:main.c        **** 
1089:main.c        ****         if (main_counter > 11)
 3191              		.loc 1 1089 0
 3192 0b5a 184B     		ldr	r3, .L231
 3193 0b5c 1B78     		ldrb	r3, [r3]
 3194 0b5e DBB2     		uxtb	r3, r3
 3195 0b60 0B2B     		cmp	r3, #11
 3196 0b62 02D9     		bls	.L107
1090:main.c        ****         {
1091:main.c        ****             main_counter = 0;
 3197              		.loc 1 1091 0
 3198 0b64 154B     		ldr	r3, .L231
 3199 0b66 0022     		movs	r2, #0
 3200 0b68 1A70     		strb	r2, [r3]
 3201              	.L107:
1092:main.c        ****         }
1093:main.c        ****         testpin3_Write(0);
 3202              		.loc 1 1093 0
 3203 0b6a 0020     		movs	r0, #0
 3204 0b6c FFF7FEFF 		bl	testpin3_Write
1094:main.c        ****         #if 0
1095:main.c        ****             
1096:main.c        ****             
1097:main.c        ****         main_counter++;
1098:main.c        ****         if (main_counter >= 11)
1099:main.c        ****         {
1100:main.c        ****                /*  
1101:main.c        ****             testpin3_Write(1);
1102:main.c        ****             I2Cbuff1[0] = 1<<6;
1103:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1104:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
1105:main.c        **** 
1106:main.c        ****         //CyDelay(1);
1107:main.c        ****         
1108:main.c        ****         OLEDwriteInt(octave, 1, 0,SecondLine);
1109:main.c        **** 
1110:main.c        ****         OLED_draw();
1111:main.c        ****                     I2Cbuff1[0] = 1<<0;
1112:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1113:main.c        ****         testpin3_Write(0);
1114:main.c        ****             */
1115:main.c        ****             main_counter = 0;
1116:main.c        ****         }
1117:main.c        ****         #endif
1118:main.c        ****         testpin5_Write(1);
 3205              		.loc 1 1118 0
 3206 0b70 0120     		movs	r0, #1
 3207 0b72 FFF7FEFF 		bl	testpin5_Write
1119:main.c        ****         
1120:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 3208              		.loc 1 1120 0
 3209 0b76 1E4B     		ldr	r3, .L231+52
 3210 0b78 1B78     		ldrb	r3, [r3]
 3211 0b7a DBB2     		uxtb	r3, r3
 3212 0b7c 002B     		cmp	r3, #0
 3213 0b7e 0CBF     		ite	eq
 3214 0b80 0123     		moveq	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 78


 3215 0b82 0023     		movne	r3, #0
 3216 0b84 DBB2     		uxtb	r3, r3
 3217 0b86 1B4A     		ldr	r2, .L231+56
 3218 0b88 DB00     		lsls	r3, r3, #3
 3219 0b8a 1344     		add	r3, r3, r2
 3220 0b8c 9B79     		ldrb	r3, [r3, #6]
 3221 0b8e DBB2     		uxtb	r3, r3
 3222 0b90 FE2B     		cmp	r3, #254
 3223 0b92 40F05B81 		bne	.L108
 3224              		.loc 1 1120 0 is_stmt 0 discriminator 1
 3225 0b96 164B     		ldr	r3, .L231+52
 3226 0b98 1B78     		ldrb	r3, [r3]
 3227 0b9a DBB2     		uxtb	r3, r3
 3228 0b9c 002B     		cmp	r3, #0
 3229 0b9e 0CBF     		ite	eq
 3230 0ba0 0123     		moveq	r3, #1
 3231 0ba2 0023     		movne	r3, #0
 3232 0ba4 DBB2     		uxtb	r3, r3
 3233 0ba6 134A     		ldr	r2, .L231+56
 3234 0ba8 DB00     		lsls	r3, r3, #3
 3235 0baa 1344     		add	r3, r3, r2
 3236 0bac DB79     		ldrb	r3, [r3, #7]
 3237 0bae DBB2     		uxtb	r3, r3
 3238 0bb0 FD2B     		cmp	r3, #253
 3239 0bb2 40F04B81 		bne	.L108
 3240              	.LBB22:
1121:main.c        ****         {
1122:main.c        ****             for (int i = 0; i < 2; i++)
 3241              		.loc 1 1122 0 is_stmt 1
 3242 0bb6 0023     		movs	r3, #0
 3243 0bb8 3B67     		str	r3, [r7, #112]
 3244 0bba 43E1     		b	.L109
 3245              	.L232:
 3246              		.align	2
 3247              	.L231:
 3248 0bbc 00000000 		.word	main_counter
 3249 0bc0 00000000 		.word	processed_pedals
 3250 0bc4 01088039 		.word	964691969
 3251 0bc8 00000000 		.word	pedals_float
 3252 0bcc 00000000 		.word	pedal_cc_assignments
 3253 0bd0 00000000 		.word	pedals8bit
 3254 0bd4 00000000 		.word	pedals7bit
 3255 0bd8 00000000 		.word	prevPedals7bit
 3256 0bdc 00000000 		.word	prev_processed_pedals
 3257 0be0 00000000 		.word	volumePedal
 3258 0be4 C5F1803F 		.word	1065415109
 3259 0be8 00000000 		.word	processed_volumePedal
 3260 0bec 00000000 		.word	prev_processed_volumePedal
 3261 0bf0 00000000 		.word	currentBarBuffer
 3262 0bf4 00000000 		.word	rxBufferBar
 3263              	.L121:
1123:main.c        ****             {
1124:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 3264              		.loc 1 1124 0
 3265 0bf8 974B     		ldr	r3, .L233
 3266 0bfa 1B78     		ldrb	r3, [r3]
 3267 0bfc DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 79


 3268 0bfe 002B     		cmp	r3, #0
 3269 0c00 0CBF     		ite	eq
 3270 0c02 0123     		moveq	r3, #1
 3271 0c04 0023     		movne	r3, #0
 3272 0c06 DBB2     		uxtb	r3, r3
 3273 0c08 1A46     		mov	r2, r3
 3274 0c0a 3B6F     		ldr	r3, [r7, #112]
 3275 0c0c 5B00     		lsls	r3, r3, #1
 3276 0c0e 9349     		ldr	r1, .L233+4
 3277 0c10 D200     		lsls	r2, r2, #3
 3278 0c12 0A44     		add	r2, r2, r1
 3279 0c14 1344     		add	r3, r3, r2
 3280 0c16 1B78     		ldrb	r3, [r3]
 3281 0c18 DBB2     		uxtb	r3, r3
 3282 0c1a 9BB2     		uxth	r3, r3
 3283 0c1c 1B02     		lsls	r3, r3, #8
 3284 0c1e 9AB2     		uxth	r2, r3
 3285 0c20 8D4B     		ldr	r3, .L233
 3286 0c22 1B78     		ldrb	r3, [r3]
 3287 0c24 DBB2     		uxtb	r3, r3
 3288 0c26 002B     		cmp	r3, #0
 3289 0c28 0CBF     		ite	eq
 3290 0c2a 0123     		moveq	r3, #1
 3291 0c2c 0023     		movne	r3, #0
 3292 0c2e DBB2     		uxtb	r3, r3
 3293 0c30 1946     		mov	r1, r3
 3294 0c32 3B6F     		ldr	r3, [r7, #112]
 3295 0c34 5B00     		lsls	r3, r3, #1
 3296 0c36 0133     		adds	r3, r3, #1
 3297 0c38 8848     		ldr	r0, .L233+4
 3298 0c3a C900     		lsls	r1, r1, #3
 3299 0c3c 0144     		add	r1, r1, r0
 3300 0c3e 0B44     		add	r3, r3, r1
 3301 0c40 1B78     		ldrb	r3, [r3]
 3302 0c42 DBB2     		uxtb	r3, r3
 3303 0c44 9BB2     		uxth	r3, r3
 3304 0c46 1344     		add	r3, r3, r2
 3305 0c48 99B2     		uxth	r1, r3
 3306 0c4a 854A     		ldr	r2, .L233+8
 3307 0c4c 3B6F     		ldr	r3, [r7, #112]
 3308 0c4e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1125:main.c        ****                 //
1126:main.c        ****                 if(bar[i] != prevBar[i])
 3309              		.loc 1 1126 0
 3310 0c52 834A     		ldr	r2, .L233+8
 3311 0c54 3B6F     		ldr	r3, [r7, #112]
 3312 0c56 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3313 0c5a 9AB2     		uxth	r2, r3
 3314 0c5c 8149     		ldr	r1, .L233+12
 3315 0c5e 3B6F     		ldr	r3, [r7, #112]
 3316 0c60 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3317 0c64 9BB2     		uxth	r3, r3
 3318 0c66 9A42     		cmp	r2, r3
 3319 0c68 00F0E080 		beq	.L110
1127:main.c        ****                 {
1128:main.c        ****     				if ((bar[i] == 65535) || (bar[i] > fretMeasurements[0][i]))
 3320              		.loc 1 1128 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 80


 3321 0c6c 7C4A     		ldr	r2, .L233+8
 3322 0c6e 3B6F     		ldr	r3, [r7, #112]
 3323 0c70 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3324 0c74 9BB2     		uxth	r3, r3
 3325 0c76 4FF6FF72 		movw	r2, #65535
 3326 0c7a 9342     		cmp	r3, r2
 3327 0c7c 11D0     		beq	.L111
 3328              		.loc 1 1128 0 is_stmt 0 discriminator 1
 3329 0c7e 784A     		ldr	r2, .L233+8
 3330 0c80 3B6F     		ldr	r3, [r7, #112]
 3331 0c82 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3332 0c86 9BB2     		uxth	r3, r3
 3333 0c88 1846     		mov	r0, r3
 3334 0c8a FFF7FEFF 		bl	__aeabi_i2f
 3335 0c8e 764A     		ldr	r2, .L233+16
 3336 0c90 3B6F     		ldr	r3, [r7, #112]
 3337 0c92 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3338 0c96 1946     		mov	r1, r3
 3339 0c98 FFF7FEFF 		bl	__aeabi_fcmpgt
 3340 0c9c 0346     		mov	r3, r0
 3341 0c9e 002B     		cmp	r3, #0
 3342 0ca0 06D0     		beq	.L220
 3343              	.L111:
1129:main.c        ****     				{
1130:main.c        ****     					stringMappedPositions[i] = 1.0f;
 3344              		.loc 1 1130 0 is_stmt 1
 3345 0ca2 724A     		ldr	r2, .L233+20
 3346 0ca4 3B6F     		ldr	r3, [r7, #112]
 3347 0ca6 4FF07E51 		mov	r1, #1065353216
 3348 0caa 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3349 0cae AEE0     		b	.L114
 3350              	.L220:
1131:main.c        ****     				}
1132:main.c        **** 
1133:main.c        ****     				else if ((bar[i] >= fretMeasurements[1][i]) && (bar[i] <= fretMeasurements[0][i]))
 3351              		.loc 1 1133 0
 3352 0cb0 6B4A     		ldr	r2, .L233+8
 3353 0cb2 3B6F     		ldr	r3, [r7, #112]
 3354 0cb4 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3355 0cb8 9BB2     		uxth	r3, r3
 3356 0cba 1846     		mov	r0, r3
 3357 0cbc FFF7FEFF 		bl	__aeabi_i2f
 3358 0cc0 694A     		ldr	r2, .L233+16
 3359 0cc2 3B6F     		ldr	r3, [r7, #112]
 3360 0cc4 0433     		adds	r3, r3, #4
 3361 0cc6 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3362 0cca 1946     		mov	r1, r3
 3363 0ccc FFF7FEFF 		bl	__aeabi_fcmpge
 3364 0cd0 0346     		mov	r3, r0
 3365 0cd2 002B     		cmp	r3, #0
 3366 0cd4 32D0     		beq	.L115
 3367              		.loc 1 1133 0 is_stmt 0 discriminator 1
 3368 0cd6 624A     		ldr	r2, .L233+8
 3369 0cd8 3B6F     		ldr	r3, [r7, #112]
 3370 0cda 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3371 0cde 9BB2     		uxth	r3, r3
 3372 0ce0 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 81


 3373 0ce2 FFF7FEFF 		bl	__aeabi_i2f
 3374 0ce6 604A     		ldr	r2, .L233+16
 3375 0ce8 3B6F     		ldr	r3, [r7, #112]
 3376 0cea 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3377 0cee 1946     		mov	r1, r3
 3378 0cf0 FFF7FEFF 		bl	__aeabi_fcmple
 3379 0cf4 0346     		mov	r3, r0
 3380 0cf6 002B     		cmp	r3, #0
 3381 0cf8 20D0     		beq	.L115
1134:main.c        ****     				{
1135:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[0][i], fretMeasurements[1][
 3382              		.loc 1 1135 0 is_stmt 1
 3383 0cfa 594A     		ldr	r2, .L233+8
 3384 0cfc 3B6F     		ldr	r3, [r7, #112]
 3385 0cfe 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3386 0d02 9BB2     		uxth	r3, r3
 3387 0d04 1846     		mov	r0, r3
 3388 0d06 FFF7FEFF 		bl	__aeabi_ui2f
 3389 0d0a 0446     		mov	r4, r0
 3390 0d0c 564A     		ldr	r2, .L233+16
 3391 0d0e 3B6F     		ldr	r3, [r7, #112]
 3392 0d10 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3393 0d14 544A     		ldr	r2, .L233+16
 3394 0d16 3B6F     		ldr	r3, [r7, #112]
 3395 0d18 0433     		adds	r3, r3, #4
 3396 0d1a 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3397 0d1e 544B     		ldr	r3, .L233+24
 3398 0d20 1868     		ldr	r0, [r3]	@ float
 3399 0d22 534B     		ldr	r3, .L233+24
 3400 0d24 5B68     		ldr	r3, [r3, #4]	@ float
 3401 0d26 0093     		str	r3, [sp]	@ float
 3402 0d28 0346     		mov	r3, r0
 3403 0d2a 2046     		mov	r0, r4
 3404 0d2c FFF7FEFF 		bl	map
 3405 0d30 0146     		mov	r1, r0
 3406 0d32 4E4A     		ldr	r2, .L233+20
 3407 0d34 3B6F     		ldr	r3, [r7, #112]
 3408 0d36 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3409 0d3a 68E0     		b	.L114
 3410              	.L115:
1136:main.c        ****     				}
1137:main.c        **** 
1138:main.c        ****     				else if ((bar[i] >= fretMeasurements[2][i]) && (bar[i] < fretMeasurements[1][i]))
 3411              		.loc 1 1138 0
 3412 0d3c 484A     		ldr	r2, .L233+8
 3413 0d3e 3B6F     		ldr	r3, [r7, #112]
 3414 0d40 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3415 0d44 9BB2     		uxth	r3, r3
 3416 0d46 1846     		mov	r0, r3
 3417 0d48 FFF7FEFF 		bl	__aeabi_i2f
 3418 0d4c 464A     		ldr	r2, .L233+16
 3419 0d4e 3B6F     		ldr	r3, [r7, #112]
 3420 0d50 0833     		adds	r3, r3, #8
 3421 0d52 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3422 0d56 1946     		mov	r1, r3
 3423 0d58 FFF7FEFF 		bl	__aeabi_fcmpge
 3424 0d5c 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 82


 3425 0d5e 002B     		cmp	r3, #0
 3426 0d60 34D0     		beq	.L118
 3427              		.loc 1 1138 0 is_stmt 0 discriminator 1
 3428 0d62 3F4A     		ldr	r2, .L233+8
 3429 0d64 3B6F     		ldr	r3, [r7, #112]
 3430 0d66 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3431 0d6a 9BB2     		uxth	r3, r3
 3432 0d6c 1846     		mov	r0, r3
 3433 0d6e FFF7FEFF 		bl	__aeabi_i2f
 3434 0d72 3D4A     		ldr	r2, .L233+16
 3435 0d74 3B6F     		ldr	r3, [r7, #112]
 3436 0d76 0433     		adds	r3, r3, #4
 3437 0d78 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3438 0d7c 1946     		mov	r1, r3
 3439 0d7e FFF7FEFF 		bl	__aeabi_fcmplt
 3440 0d82 0346     		mov	r3, r0
 3441 0d84 002B     		cmp	r3, #0
 3442 0d86 21D0     		beq	.L118
1139:main.c        ****     				{
1140:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[1][i], fretMeasurements[2][
 3443              		.loc 1 1140 0 is_stmt 1
 3444 0d88 354A     		ldr	r2, .L233+8
 3445 0d8a 3B6F     		ldr	r3, [r7, #112]
 3446 0d8c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3447 0d90 9BB2     		uxth	r3, r3
 3448 0d92 1846     		mov	r0, r3
 3449 0d94 FFF7FEFF 		bl	__aeabi_ui2f
 3450 0d98 0446     		mov	r4, r0
 3451 0d9a 334A     		ldr	r2, .L233+16
 3452 0d9c 3B6F     		ldr	r3, [r7, #112]
 3453 0d9e 0433     		adds	r3, r3, #4
 3454 0da0 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3455 0da4 304A     		ldr	r2, .L233+16
 3456 0da6 3B6F     		ldr	r3, [r7, #112]
 3457 0da8 0833     		adds	r3, r3, #8
 3458 0daa 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3459 0dae 304B     		ldr	r3, .L233+24
 3460 0db0 5868     		ldr	r0, [r3, #4]	@ float
 3461 0db2 2F4B     		ldr	r3, .L233+24
 3462 0db4 9B68     		ldr	r3, [r3, #8]	@ float
 3463 0db6 0093     		str	r3, [sp]	@ float
 3464 0db8 0346     		mov	r3, r0
 3465 0dba 2046     		mov	r0, r4
 3466 0dbc FFF7FEFF 		bl	map
 3467 0dc0 0146     		mov	r1, r0
 3468 0dc2 2A4A     		ldr	r2, .L233+20
 3469 0dc4 3B6F     		ldr	r3, [r7, #112]
 3470 0dc6 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3471 0dca 20E0     		b	.L114
 3472              	.L118:
1141:main.c        ****     				}
1142:main.c        **** 
1143:main.c        ****     				else
1144:main.c        ****     				{
1145:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[2][i], fretMeasurements[3][
 3473              		.loc 1 1145 0
 3474 0dcc 244A     		ldr	r2, .L233+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 83


 3475 0dce 3B6F     		ldr	r3, [r7, #112]
 3476 0dd0 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3477 0dd4 9BB2     		uxth	r3, r3
 3478 0dd6 1846     		mov	r0, r3
 3479 0dd8 FFF7FEFF 		bl	__aeabi_ui2f
 3480 0ddc 0446     		mov	r4, r0
 3481 0dde 224A     		ldr	r2, .L233+16
 3482 0de0 3B6F     		ldr	r3, [r7, #112]
 3483 0de2 0833     		adds	r3, r3, #8
 3484 0de4 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3485 0de8 1F4A     		ldr	r2, .L233+16
 3486 0dea 3B6F     		ldr	r3, [r7, #112]
 3487 0dec 0C33     		adds	r3, r3, #12
 3488 0dee 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3489 0df2 1F4B     		ldr	r3, .L233+24
 3490 0df4 9868     		ldr	r0, [r3, #8]	@ float
 3491 0df6 1E4B     		ldr	r3, .L233+24
 3492 0df8 DB68     		ldr	r3, [r3, #12]	@ float
 3493 0dfa 0093     		str	r3, [sp]	@ float
 3494 0dfc 0346     		mov	r3, r0
 3495 0dfe 2046     		mov	r0, r4
 3496 0e00 FFF7FEFF 		bl	map
 3497 0e04 0146     		mov	r1, r0
 3498 0e06 194A     		ldr	r2, .L233+20
 3499 0e08 3B6F     		ldr	r3, [r7, #112]
 3500 0e0a 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3501              	.L114:
1146:main.c        ****     				}
1147:main.c        **** 
1148:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
 3502              		.loc 1 1148 0
 3503 0e0e 174A     		ldr	r2, .L233+20
 3504 0e10 3B6F     		ldr	r3, [r7, #112]
 3505 0e12 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3506 0e16 1946     		mov	r1, r3
 3507 0e18 4FF07E50 		mov	r0, #1065353216
 3508 0e1c FFF7FEFF 		bl	__aeabi_fdiv
 3509 0e20 0346     		mov	r3, r0
 3510 0e22 1946     		mov	r1, r3
 3511 0e24 134A     		ldr	r2, .L233+28
 3512 0e26 3B6F     		ldr	r3, [r7, #112]
 3513 0e28 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3514              	.L110:
1149:main.c        ****                 }
1150:main.c        ****                 //
1151:main.c        ****                 prevBar[i] = bar[i];
 3515              		.loc 1 1151 0 discriminator 2
 3516 0e2c 0C4A     		ldr	r2, .L233+8
 3517 0e2e 3B6F     		ldr	r3, [r7, #112]
 3518 0e30 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3519 0e34 99B2     		uxth	r1, r3
 3520 0e36 0B4A     		ldr	r2, .L233+12
 3521 0e38 3B6F     		ldr	r3, [r7, #112]
 3522 0e3a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1122:main.c        ****             {
 3523              		.loc 1 1122 0 discriminator 2
 3524 0e3e 3B6F     		ldr	r3, [r7, #112]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 84


 3525 0e40 0133     		adds	r3, r3, #1
 3526 0e42 3B67     		str	r3, [r7, #112]
 3527              	.L109:
1122:main.c        ****             {
 3528              		.loc 1 1122 0 is_stmt 0 discriminator 1
 3529 0e44 3B6F     		ldr	r3, [r7, #112]
 3530 0e46 012B     		cmp	r3, #1
 3531 0e48 7FF7D6AE 		ble	.L121
 3532              	.L108:
 3533              	.LBE22:
1152:main.c        ****             }
1153:main.c        ****         }
1154:main.c        ****         
1155:main.c        ****         testpin5_Write(0);
 3534              		.loc 1 1155 0 is_stmt 1
 3535 0e4c 0020     		movs	r0, #0
 3536 0e4e FFF7FEFF 		bl	testpin5_Write
 3537              	.LBB23:
1156:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 3538              		.loc 1 1156 0
 3539 0e52 0023     		movs	r3, #0
 3540 0e54 FB66     		str	r3, [r7, #108]
 3541 0e56 2AE0     		b	.L122
 3542              	.L234:
 3543              		.align	2
 3544              	.L233:
 3545 0e58 00000000 		.word	currentBarBuffer
 3546 0e5c 00000000 		.word	rxBufferBar
 3547 0e60 00000000 		.word	bar
 3548 0e64 00000000 		.word	prevBar
 3549 0e68 00000000 		.word	fretMeasurements
 3550 0e6c 00000000 		.word	stringMappedPositions
 3551 0e70 00000000 		.word	fretScaling
 3552 0e74 00000000 		.word	invStringMappedPositions
 3553              	.L124:
1157:main.c        ****         {
1158:main.c        ****             if (strings[i] != prevStrings[i])
 3554              		.loc 1 1158 0
 3555 0e78 AF4A     		ldr	r2, .L235
 3556 0e7a FB6E     		ldr	r3, [r7, #108]
 3557 0e7c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3558 0e80 9AB2     		uxth	r2, r3
 3559 0e82 AE49     		ldr	r1, .L235+4
 3560 0e84 FB6E     		ldr	r3, [r7, #108]
 3561 0e86 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3562 0e8a 9BB2     		uxth	r3, r3
 3563 0e8c 9A42     		cmp	r2, r3
 3564 0e8e 02D0     		beq	.L123
1159:main.c        ****             {
1160:main.c        ****                 noteEvent(i);
 3565              		.loc 1 1160 0
 3566 0e90 F86E     		ldr	r0, [r7, #108]
 3567 0e92 FFF7FEFF 		bl	noteEvent
 3568              	.L123:
1161:main.c        ****             }
1162:main.c        ****             prevStrings[i] = strings[i];
 3569              		.loc 1 1162 0 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 85


 3570 0e96 A84A     		ldr	r2, .L235
 3571 0e98 FB6E     		ldr	r3, [r7, #108]
 3572 0e9a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3573 0e9e 99B2     		uxth	r1, r3
 3574 0ea0 A64A     		ldr	r2, .L235+4
 3575 0ea2 FB6E     		ldr	r3, [r7, #108]
 3576 0ea4 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1156:main.c        ****         {
 3577              		.loc 1 1156 0 discriminator 2
 3578 0ea8 FB6E     		ldr	r3, [r7, #108]
 3579 0eaa 0133     		adds	r3, r3, #1
 3580 0eac FB66     		str	r3, [r7, #108]
 3581              	.L122:
1156:main.c        ****         {
 3582              		.loc 1 1156 0 is_stmt 0 discriminator 1
 3583 0eae A44B     		ldr	r3, .L235+8
 3584 0eb0 1B68     		ldr	r3, [r3]
 3585 0eb2 FA6E     		ldr	r2, [r7, #108]
 3586 0eb4 9A42     		cmp	r2, r3
 3587 0eb6 DFDB     		blt	.L124
 3588              	.LBE23:
1163:main.c        ****         }
1164:main.c        ****         
1165:main.c        **** 
1166:main.c        **** 
1167:main.c        ****         
1168:main.c        ****         
1169:main.c        ****         if (!oct1_Read())
 3589              		.loc 1 1169 0 is_stmt 1
 3590 0eb8 FFF7FEFF 		bl	oct1_Read
 3591 0ebc 0346     		mov	r3, r0
 3592 0ebe 002B     		cmp	r3, #0
 3593 0ec0 24D1     		bne	.L125
1170:main.c        ****         {
1171:main.c        ****             if (octave > 4)
 3594              		.loc 1 1171 0
 3595 0ec2 A04B     		ldr	r3, .L235+12
 3596 0ec4 1B68     		ldr	r3, [r3]
 3597 0ec6 042B     		cmp	r3, #4
 3598 0ec8 03DD     		ble	.L126
1172:main.c        ****             {
1173:main.c        ****                 octave = 4;
 3599              		.loc 1 1173 0
 3600 0eca 9E4B     		ldr	r3, .L235+12
 3601 0ecc 0422     		movs	r2, #4
 3602 0ece 1A60     		str	r2, [r3]
 3603 0ed0 0CE0     		b	.L127
 3604              	.L126:
1174:main.c        **** 
1175:main.c        ****             }
1176:main.c        ****             else if ((oct1Up) && (octave > 0))
 3605              		.loc 1 1176 0
 3606 0ed2 9D4B     		ldr	r3, .L235+16
 3607 0ed4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3608 0ed6 002B     		cmp	r3, #0
 3609 0ed8 08D0     		beq	.L127
 3610              		.loc 1 1176 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 86


 3611 0eda 9A4B     		ldr	r3, .L235+12
 3612 0edc 1B68     		ldr	r3, [r3]
 3613 0ede 002B     		cmp	r3, #0
 3614 0ee0 04DD     		ble	.L127
1177:main.c        ****             {
1178:main.c        ****                 octave--;
 3615              		.loc 1 1178 0 is_stmt 1
 3616 0ee2 984B     		ldr	r3, .L235+12
 3617 0ee4 1B68     		ldr	r3, [r3]
 3618 0ee6 013B     		subs	r3, r3, #1
 3619 0ee8 964A     		ldr	r2, .L235+12
 3620 0eea 1360     		str	r3, [r2]
 3621              	.L127:
1179:main.c        ****             }
1180:main.c        ****             LED_amber1_Write(1);
 3622              		.loc 1 1180 0
 3623 0eec 0120     		movs	r0, #1
 3624 0eee FFF7FEFF 		bl	LED_amber1_Write
1181:main.c        ****             LED_amber2_Write(0);
 3625              		.loc 1 1181 0
 3626 0ef2 0020     		movs	r0, #0
 3627 0ef4 FFF7FEFF 		bl	LED_amber2_Write
1182:main.c        ****             LED_amber3_Write(0);
 3628              		.loc 1 1182 0
 3629 0ef8 0020     		movs	r0, #0
 3630 0efa FFF7FEFF 		bl	LED_amber3_Write
1183:main.c        ****             LED_amber4_Write(0);
 3631              		.loc 1 1183 0
 3632 0efe 0020     		movs	r0, #0
 3633 0f00 FFF7FEFF 		bl	LED_amber4_Write
1184:main.c        ****             oct1Up = 0;
 3634              		.loc 1 1184 0
 3635 0f04 904B     		ldr	r3, .L235+16
 3636 0f06 0022     		movs	r2, #0
 3637 0f08 1A70     		strb	r2, [r3]
 3638 0f0a 07E0     		b	.L128
 3639              	.L125:
1185:main.c        ****         }
1186:main.c        ****         
1187:main.c        ****         else if (oct1_Read())
 3640              		.loc 1 1187 0
 3641 0f0c FFF7FEFF 		bl	oct1_Read
 3642 0f10 0346     		mov	r3, r0
 3643 0f12 002B     		cmp	r3, #0
 3644 0f14 02D0     		beq	.L128
1188:main.c        ****         {
1189:main.c        ****             oct1Up = 1;
 3645              		.loc 1 1189 0
 3646 0f16 8C4B     		ldr	r3, .L235+16
 3647 0f18 0122     		movs	r2, #1
 3648 0f1a 1A70     		strb	r2, [r3]
 3649              	.L128:
1190:main.c        ****         }
1191:main.c        ****         
1192:main.c        ****         if (!oct2_Read())
 3650              		.loc 1 1192 0
 3651 0f1c FFF7FEFF 		bl	oct2_Read
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 87


 3652 0f20 0346     		mov	r3, r0
 3653 0f22 002B     		cmp	r3, #0
 3654 0f24 0ED1     		bne	.L129
1193:main.c        ****         {
1194:main.c        ****             octave = 5;
 3655              		.loc 1 1194 0
 3656 0f26 874B     		ldr	r3, .L235+12
 3657 0f28 0522     		movs	r2, #5
 3658 0f2a 1A60     		str	r2, [r3]
1195:main.c        ****             LED_amber1_Write(0);
 3659              		.loc 1 1195 0
 3660 0f2c 0020     		movs	r0, #0
 3661 0f2e FFF7FEFF 		bl	LED_amber1_Write
1196:main.c        ****             LED_amber2_Write(1);
 3662              		.loc 1 1196 0
 3663 0f32 0120     		movs	r0, #1
 3664 0f34 FFF7FEFF 		bl	LED_amber2_Write
1197:main.c        ****             LED_amber3_Write(0);
 3665              		.loc 1 1197 0
 3666 0f38 0020     		movs	r0, #0
 3667 0f3a FFF7FEFF 		bl	LED_amber3_Write
1198:main.c        ****             LED_amber4_Write(0);
 3668              		.loc 1 1198 0
 3669 0f3e 0020     		movs	r0, #0
 3670 0f40 FFF7FEFF 		bl	LED_amber4_Write
 3671              	.L129:
1199:main.c        ****         }
1200:main.c        ****         if (!oct3_Read())
 3672              		.loc 1 1200 0
 3673 0f44 FFF7FEFF 		bl	oct3_Read
 3674 0f48 0346     		mov	r3, r0
 3675 0f4a 002B     		cmp	r3, #0
 3676 0f4c 0ED1     		bne	.L130
1201:main.c        ****         {
1202:main.c        ****             octave = 6;
 3677              		.loc 1 1202 0
 3678 0f4e 7D4B     		ldr	r3, .L235+12
 3679 0f50 0622     		movs	r2, #6
 3680 0f52 1A60     		str	r2, [r3]
1203:main.c        ****             LED_amber1_Write(0);
 3681              		.loc 1 1203 0
 3682 0f54 0020     		movs	r0, #0
 3683 0f56 FFF7FEFF 		bl	LED_amber1_Write
1204:main.c        ****             LED_amber2_Write(0);
 3684              		.loc 1 1204 0
 3685 0f5a 0020     		movs	r0, #0
 3686 0f5c FFF7FEFF 		bl	LED_amber2_Write
1205:main.c        ****             LED_amber3_Write(1);
 3687              		.loc 1 1205 0
 3688 0f60 0120     		movs	r0, #1
 3689 0f62 FFF7FEFF 		bl	LED_amber3_Write
1206:main.c        ****             LED_amber4_Write(0);            
 3690              		.loc 1 1206 0
 3691 0f66 0020     		movs	r0, #0
 3692 0f68 FFF7FEFF 		bl	LED_amber4_Write
 3693              	.L130:
1207:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 88


1208:main.c        ****         if (!oct4_Read())
 3694              		.loc 1 1208 0
 3695 0f6c FFF7FEFF 		bl	oct4_Read
 3696 0f70 0346     		mov	r3, r0
 3697 0f72 002B     		cmp	r3, #0
 3698 0f74 24D1     		bne	.L131
1209:main.c        ****         {
1210:main.c        ****             if (octave < 7)
 3699              		.loc 1 1210 0
 3700 0f76 734B     		ldr	r3, .L235+12
 3701 0f78 1B68     		ldr	r3, [r3]
 3702 0f7a 062B     		cmp	r3, #6
 3703 0f7c 03DC     		bgt	.L132
1211:main.c        ****             {
1212:main.c        ****                 octave = 7;
 3704              		.loc 1 1212 0
 3705 0f7e 714B     		ldr	r3, .L235+12
 3706 0f80 0722     		movs	r2, #7
 3707 0f82 1A60     		str	r2, [r3]
 3708 0f84 0CE0     		b	.L133
 3709              	.L132:
1213:main.c        **** 
1214:main.c        ****             }
1215:main.c        ****             else if ((oct4Up) && (octave < 11))
 3710              		.loc 1 1215 0
 3711 0f86 714B     		ldr	r3, .L235+20
 3712 0f88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3713 0f8a 002B     		cmp	r3, #0
 3714 0f8c 08D0     		beq	.L133
 3715              		.loc 1 1215 0 is_stmt 0 discriminator 1
 3716 0f8e 6D4B     		ldr	r3, .L235+12
 3717 0f90 1B68     		ldr	r3, [r3]
 3718 0f92 0A2B     		cmp	r3, #10
 3719 0f94 04DC     		bgt	.L133
1216:main.c        ****             {
1217:main.c        ****                 octave++;
 3720              		.loc 1 1217 0 is_stmt 1
 3721 0f96 6B4B     		ldr	r3, .L235+12
 3722 0f98 1B68     		ldr	r3, [r3]
 3723 0f9a 0133     		adds	r3, r3, #1
 3724 0f9c 694A     		ldr	r2, .L235+12
 3725 0f9e 1360     		str	r3, [r2]
 3726              	.L133:
1218:main.c        **** 
1219:main.c        ****             }
1220:main.c        ****             LED_amber1_Write(0);
 3727              		.loc 1 1220 0
 3728 0fa0 0020     		movs	r0, #0
 3729 0fa2 FFF7FEFF 		bl	LED_amber1_Write
1221:main.c        ****             LED_amber2_Write(0);
 3730              		.loc 1 1221 0
 3731 0fa6 0020     		movs	r0, #0
 3732 0fa8 FFF7FEFF 		bl	LED_amber2_Write
1222:main.c        ****             LED_amber3_Write(0);
 3733              		.loc 1 1222 0
 3734 0fac 0020     		movs	r0, #0
 3735 0fae FFF7FEFF 		bl	LED_amber3_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 89


1223:main.c        ****             LED_amber4_Write(1);
 3736              		.loc 1 1223 0
 3737 0fb2 0120     		movs	r0, #1
 3738 0fb4 FFF7FEFF 		bl	LED_amber4_Write
1224:main.c        ****             oct4Up = 0;
 3739              		.loc 1 1224 0
 3740 0fb8 644B     		ldr	r3, .L235+20
 3741 0fba 0022     		movs	r2, #0
 3742 0fbc 1A70     		strb	r2, [r3]
 3743 0fbe 07E0     		b	.L134
 3744              	.L131:
1225:main.c        ****         }
1226:main.c        ****         
1227:main.c        ****         else if (oct4_Read())
 3745              		.loc 1 1227 0
 3746 0fc0 FFF7FEFF 		bl	oct4_Read
 3747 0fc4 0346     		mov	r3, r0
 3748 0fc6 002B     		cmp	r3, #0
 3749 0fc8 02D0     		beq	.L134
1228:main.c        ****         {
1229:main.c        ****             oct4Up = 1;
 3750              		.loc 1 1229 0
 3751 0fca 604B     		ldr	r3, .L235+20
 3752 0fcc 0122     		movs	r2, #1
 3753 0fce 1A70     		strb	r2, [r3]
 3754              	.L134:
1230:main.c        ****         }
1231:main.c        ****         
1232:main.c        ****         if (!neck1_button_Read())
 3755              		.loc 1 1232 0
 3756 0fd0 FFF7FEFF 		bl	neck1_button_Read
 3757 0fd4 0346     		mov	r3, r0
 3758 0fd6 002B     		cmp	r3, #0
 3759 0fd8 10D1     		bne	.L135
1233:main.c        ****         {
1234:main.c        ****             currentNeck = 0;
 3760              		.loc 1 1234 0
 3761 0fda 5D4B     		ldr	r3, .L235+24
 3762 0fdc 0022     		movs	r2, #0
 3763 0fde 1A60     		str	r2, [r3]
1235:main.c        ****             currentCopedent = necks[currentNeck];
 3764              		.loc 1 1235 0
 3765 0fe0 5B4B     		ldr	r3, .L235+24
 3766 0fe2 1B68     		ldr	r3, [r3]
 3767 0fe4 5B4A     		ldr	r2, .L235+28
 3768 0fe6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3769 0fe8 5B4B     		ldr	r3, .L235+32
 3770 0fea 1A70     		strb	r2, [r3]
1236:main.c        ****             LED_red1_Write(0);
 3771              		.loc 1 1236 0
 3772 0fec 0020     		movs	r0, #0
 3773 0fee FFF7FEFF 		bl	LED_red1_Write
1237:main.c        ****             LED_green2_Write(1);
 3774              		.loc 1 1237 0
 3775 0ff2 0120     		movs	r0, #1
 3776 0ff4 FFF7FEFF 		bl	LED_green2_Write
1238:main.c        ****             displayCurrentPresetNameAndCopedent();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 90


 3777              		.loc 1 1238 0
 3778 0ff8 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3779              	.L135:
1239:main.c        ****         }
1240:main.c        ****         if (!neck2_button_Read())
 3780              		.loc 1 1240 0
 3781 0ffc FFF7FEFF 		bl	neck2_button_Read
 3782 1000 0346     		mov	r3, r0
 3783 1002 002B     		cmp	r3, #0
 3784 1004 10D1     		bne	.L136
1241:main.c        ****         {
1242:main.c        ****             currentNeck = 1;
 3785              		.loc 1 1242 0
 3786 1006 524B     		ldr	r3, .L235+24
 3787 1008 0122     		movs	r2, #1
 3788 100a 1A60     		str	r2, [r3]
1243:main.c        ****             currentCopedent = necks[currentNeck];            
 3789              		.loc 1 1243 0
 3790 100c 504B     		ldr	r3, .L235+24
 3791 100e 1B68     		ldr	r3, [r3]
 3792 1010 504A     		ldr	r2, .L235+28
 3793 1012 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3794 1014 504B     		ldr	r3, .L235+32
 3795 1016 1A70     		strb	r2, [r3]
1244:main.c        ****             LED_red1_Write(1);
 3796              		.loc 1 1244 0
 3797 1018 0120     		movs	r0, #1
 3798 101a FFF7FEFF 		bl	LED_red1_Write
1245:main.c        ****             LED_green2_Write(0);          
 3799              		.loc 1 1245 0
 3800 101e 0020     		movs	r0, #0
 3801 1020 FFF7FEFF 		bl	LED_green2_Write
1246:main.c        ****             displayCurrentPresetNameAndCopedent();
 3802              		.loc 1 1246 0
 3803 1024 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3804              	.L136:
1247:main.c        ****         }
1248:main.c        ****         
1249:main.c        ****         if ((!enter_button_Read()) && (enterUp))
 3805              		.loc 1 1249 0
 3806 1028 FFF7FEFF 		bl	enter_button_Read
 3807 102c 0346     		mov	r3, r0
 3808 102e 002B     		cmp	r3, #0
 3809 1030 16D1     		bne	.L137
 3810              		.loc 1 1249 0 is_stmt 0 discriminator 1
 3811 1032 4A4B     		ldr	r3, .L235+36
 3812 1034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3813 1036 002B     		cmp	r3, #0
 3814 1038 12D0     		beq	.L137
1250:main.c        ****         {
1251:main.c        ****             dualSlider = !dualSlider;
 3815              		.loc 1 1251 0 is_stmt 1
 3816 103a 494B     		ldr	r3, .L235+40
 3817 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3818 103e 002B     		cmp	r3, #0
 3819 1040 0CBF     		ite	eq
 3820 1042 0123     		moveq	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 91


 3821 1044 0023     		movne	r3, #0
 3822 1046 DBB2     		uxtb	r3, r3
 3823 1048 1A46     		mov	r2, r3
 3824 104a 454B     		ldr	r3, .L235+40
 3825 104c 1A70     		strb	r2, [r3]
1252:main.c        ****             LED_green1_Write(dualSlider);
 3826              		.loc 1 1252 0
 3827 104e 444B     		ldr	r3, .L235+40
 3828 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3829 1052 1846     		mov	r0, r3
 3830 1054 FFF7FEFF 		bl	LED_green1_Write
1253:main.c        ****             enterUp = 0;
 3831              		.loc 1 1253 0
 3832 1058 404B     		ldr	r3, .L235+36
 3833 105a 0022     		movs	r2, #0
 3834 105c 1A70     		strb	r2, [r3]
 3835 105e 07E0     		b	.L138
 3836              	.L137:
1254:main.c        ****         }
1255:main.c        ****         else if (enter_button_Read())
 3837              		.loc 1 1255 0
 3838 1060 FFF7FEFF 		bl	enter_button_Read
 3839 1064 0346     		mov	r3, r0
 3840 1066 002B     		cmp	r3, #0
 3841 1068 02D0     		beq	.L138
1256:main.c        ****         {
1257:main.c        ****             enterUp = 1;
 3842              		.loc 1 1257 0
 3843 106a 3C4B     		ldr	r3, .L235+36
 3844 106c 0122     		movs	r2, #1
 3845 106e 1A70     		strb	r2, [r3]
 3846              	.L138:
1258:main.c        ****         }
1259:main.c        ****         
1260:main.c        ****         
1261:main.c        ****         if (!editMode)
 3847              		.loc 1 1261 0
 3848 1070 3C4B     		ldr	r3, .L235+44
 3849 1072 1B68     		ldr	r3, [r3]
 3850 1074 002B     		cmp	r3, #0
 3851 1076 40F0CD80 		bne	.L139
1262:main.c        ****         {
1263:main.c        ****         
1264:main.c        ****             if ((!button1_Read()) && (button1Up))
 3852              		.loc 1 1264 0
 3853 107a FFF7FEFF 		bl	button1_Read
 3854 107e 0346     		mov	r3, r0
 3855 1080 002B     		cmp	r3, #0
 3856 1082 25D1     		bne	.L140
 3857              		.loc 1 1264 0 is_stmt 0 discriminator 1
 3858 1084 384B     		ldr	r3, .L235+48
 3859 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3860 1088 002B     		cmp	r3, #0
 3861 108a 21D0     		beq	.L140
1265:main.c        ****             {
1266:main.c        ****                 currentCopedent -= 1;
 3862              		.loc 1 1266 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 92


 3863 108c 324B     		ldr	r3, .L235+32
 3864 108e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3865 1090 013B     		subs	r3, r3, #1
 3866 1092 DAB2     		uxtb	r2, r3
 3867 1094 304B     		ldr	r3, .L235+32
 3868 1096 1A70     		strb	r2, [r3]
1267:main.c        ****                 currentCopedent &= 31;
 3869              		.loc 1 1267 0
 3870 1098 2F4B     		ldr	r3, .L235+32
 3871 109a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3872 109c 03F01F03 		and	r3, r3, #31
 3873 10a0 DAB2     		uxtb	r2, r3
 3874 10a2 2D4B     		ldr	r3, .L235+32
 3875 10a4 1A70     		strb	r2, [r3]
1268:main.c        ****                 necks[currentNeck] = currentCopedent;
 3876              		.loc 1 1268 0
 3877 10a6 2A4B     		ldr	r3, .L235+24
 3878 10a8 1B68     		ldr	r3, [r3]
 3879 10aa 2B4A     		ldr	r2, .L235+32
 3880 10ac 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3881 10ae 294A     		ldr	r2, .L235+28
 3882 10b0 D154     		strb	r1, [r2, r3]
1269:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3883              		.loc 1 1269 0
 3884 10b2 294B     		ldr	r3, .L235+32
 3885 10b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3886 10b6 264B     		ldr	r3, .L235+24
 3887 10b8 1B68     		ldr	r3, [r3]
 3888 10ba 9BB2     		uxth	r3, r3
 3889 10bc 1946     		mov	r1, r3
 3890 10be 1046     		mov	r0, r2
 3891 10c0 FFF7FEFF 		bl	EEPROM_WriteByte
1270:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3892              		.loc 1 1270 0
 3893 10c4 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1271:main.c        ****                 button1Up = 0;
 3894              		.loc 1 1271 0
 3895 10c8 274B     		ldr	r3, .L235+48
 3896 10ca 0022     		movs	r2, #0
 3897 10cc 1A70     		strb	r2, [r3]
 3898 10ce 07E0     		b	.L141
 3899              	.L140:
1272:main.c        ****             }
1273:main.c        ****             else if (button1_Read())
 3900              		.loc 1 1273 0
 3901 10d0 FFF7FEFF 		bl	button1_Read
 3902 10d4 0346     		mov	r3, r0
 3903 10d6 002B     		cmp	r3, #0
 3904 10d8 02D0     		beq	.L141
1274:main.c        ****             {
1275:main.c        ****                 button1Up = 1;
 3905              		.loc 1 1275 0
 3906 10da 234B     		ldr	r3, .L235+48
 3907 10dc 0122     		movs	r2, #1
 3908 10de 1A70     		strb	r2, [r3]
 3909              	.L141:
1276:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 93


1277:main.c        ****             
1278:main.c        ****             if ((!button2_Read()) && (button2Up))
 3910              		.loc 1 1278 0
 3911 10e0 FFF7FEFF 		bl	button2_Read
 3912 10e4 0346     		mov	r3, r0
 3913 10e6 002B     		cmp	r3, #0
 3914 10e8 42D1     		bne	.L142
 3915              		.loc 1 1278 0 is_stmt 0 discriminator 1
 3916 10ea 204B     		ldr	r3, .L235+52
 3917 10ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3918 10ee 002B     		cmp	r3, #0
 3919 10f0 3ED0     		beq	.L142
1279:main.c        ****             {
1280:main.c        ****                 currentCopedent += 1;
 3920              		.loc 1 1280 0 is_stmt 1
 3921 10f2 194B     		ldr	r3, .L235+32
 3922 10f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3923 10f6 0133     		adds	r3, r3, #1
 3924 10f8 DAB2     		uxtb	r2, r3
 3925 10fa 174B     		ldr	r3, .L235+32
 3926 10fc 1A70     		strb	r2, [r3]
1281:main.c        ****                 currentCopedent &= 31;
 3927              		.loc 1 1281 0
 3928 10fe 164B     		ldr	r3, .L235+32
 3929 1100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3930 1102 03F01F03 		and	r3, r3, #31
 3931 1106 DAB2     		uxtb	r2, r3
 3932 1108 134B     		ldr	r3, .L235+32
 3933 110a 1A70     		strb	r2, [r3]
1282:main.c        ****                 necks[currentNeck] = currentCopedent;
 3934              		.loc 1 1282 0
 3935 110c 104B     		ldr	r3, .L235+24
 3936 110e 1B68     		ldr	r3, [r3]
 3937 1110 114A     		ldr	r2, .L235+32
 3938 1112 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3939 1114 0F4A     		ldr	r2, .L235+28
 3940 1116 D154     		strb	r1, [r2, r3]
1283:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3941              		.loc 1 1283 0
 3942 1118 0F4B     		ldr	r3, .L235+32
 3943 111a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3944 111c 0C4B     		ldr	r3, .L235+24
 3945 111e 1B68     		ldr	r3, [r3]
 3946 1120 9BB2     		uxth	r3, r3
 3947 1122 1946     		mov	r1, r3
 3948 1124 1046     		mov	r0, r2
 3949 1126 FFF7FEFF 		bl	EEPROM_WriteByte
1284:main.c        ****                 
1285:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3950              		.loc 1 1285 0
 3951 112a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1286:main.c        ****                 button2Up = 0;
 3952              		.loc 1 1286 0
 3953 112e 0F4B     		ldr	r3, .L235+52
 3954 1130 0022     		movs	r2, #0
 3955 1132 1A70     		strb	r2, [r3]
 3956 1134 24E0     		b	.L143
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 94


 3957              	.L236:
 3958 1136 00BF     		.align	2
 3959              	.L235:
 3960 1138 00000000 		.word	strings
 3961 113c 00000000 		.word	prevStrings
 3962 1140 00000000 		.word	numStrings
 3963 1144 00000000 		.word	octave
 3964 1148 00000000 		.word	oct1Up
 3965 114c 00000000 		.word	oct4Up
 3966 1150 00000000 		.word	currentNeck
 3967 1154 00000000 		.word	necks
 3968 1158 00000000 		.word	currentCopedent
 3969 115c 00000000 		.word	enterUp
 3970 1160 00000000 		.word	dualSlider
 3971 1164 00000000 		.word	editMode
 3972 1168 00000000 		.word	button1Up
 3973 116c 00000000 		.word	button2Up
 3974              	.L142:
1287:main.c        ****             }
1288:main.c        ****             else if (button2_Read())
 3975              		.loc 1 1288 0
 3976 1170 FFF7FEFF 		bl	button2_Read
 3977 1174 0346     		mov	r3, r0
 3978 1176 002B     		cmp	r3, #0
 3979 1178 02D0     		beq	.L143
1289:main.c        ****             {
1290:main.c        ****                 button2Up = 1;
 3980              		.loc 1 1290 0
 3981 117a AF4B     		ldr	r3, .L237
 3982 117c 0122     		movs	r2, #1
 3983 117e 1A70     		strb	r2, [r3]
 3984              	.L143:
1291:main.c        ****             }
1292:main.c        ****             
1293:main.c        ****             if ((!button3_Read()) && (button3Up))
 3985              		.loc 1 1293 0
 3986 1180 FFF7FEFF 		bl	button3_Read
 3987 1184 0346     		mov	r3, r0
 3988 1186 002B     		cmp	r3, #0
 3989 1188 16D1     		bne	.L144
 3990              		.loc 1 1293 0 is_stmt 0 discriminator 1
 3991 118a AC4B     		ldr	r3, .L237+4
 3992 118c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3993 118e 002B     		cmp	r3, #0
 3994 1190 12D0     		beq	.L144
1294:main.c        ****             {
1295:main.c        ****                 patchNum -= 1;
 3995              		.loc 1 1295 0 is_stmt 1
 3996 1192 AB4B     		ldr	r3, .L237+8
 3997 1194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3998 1196 013B     		subs	r3, r3, #1
 3999 1198 DAB2     		uxtb	r2, r3
 4000 119a A94B     		ldr	r3, .L237+8
 4001 119c 1A70     		strb	r2, [r3]
1296:main.c        ****                 patchNum &= 63;
 4002              		.loc 1 1296 0
 4003 119e A84B     		ldr	r3, .L237+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 95


 4004 11a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4005 11a2 03F03F03 		and	r3, r3, #63
 4006 11a6 DAB2     		uxtb	r2, r3
 4007 11a8 A54B     		ldr	r3, .L237+8
 4008 11aa 1A70     		strb	r2, [r3]
1297:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4009              		.loc 1 1297 0
 4010 11ac FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1298:main.c        ****                 button3Up = 0;
 4011              		.loc 1 1298 0
 4012 11b0 A24B     		ldr	r3, .L237+4
 4013 11b2 0022     		movs	r2, #0
 4014 11b4 1A70     		strb	r2, [r3]
 4015 11b6 07E0     		b	.L145
 4016              	.L144:
1299:main.c        ****             }
1300:main.c        ****             else if (button3_Read())
 4017              		.loc 1 1300 0
 4018 11b8 FFF7FEFF 		bl	button3_Read
 4019 11bc 0346     		mov	r3, r0
 4020 11be 002B     		cmp	r3, #0
 4021 11c0 02D0     		beq	.L145
1301:main.c        ****             {
1302:main.c        ****                 button3Up = 1;
 4022              		.loc 1 1302 0
 4023 11c2 9E4B     		ldr	r3, .L237+4
 4024 11c4 0122     		movs	r2, #1
 4025 11c6 1A70     		strb	r2, [r3]
 4026              	.L145:
1303:main.c        ****             }
1304:main.c        ****             
1305:main.c        ****             if ((!button4_Read()) && (button4Up))
 4027              		.loc 1 1305 0
 4028 11c8 FFF7FEFF 		bl	button4_Read
 4029 11cc 0346     		mov	r3, r0
 4030 11ce 002B     		cmp	r3, #0
 4031 11d0 16D1     		bne	.L146
 4032              		.loc 1 1305 0 is_stmt 0 discriminator 1
 4033 11d2 9C4B     		ldr	r3, .L237+12
 4034 11d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4035 11d6 002B     		cmp	r3, #0
 4036 11d8 12D0     		beq	.L146
1306:main.c        ****             {
1307:main.c        ****                 patchNum += 1;
 4037              		.loc 1 1307 0 is_stmt 1
 4038 11da 994B     		ldr	r3, .L237+8
 4039 11dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4040 11de 0133     		adds	r3, r3, #1
 4041 11e0 DAB2     		uxtb	r2, r3
 4042 11e2 974B     		ldr	r3, .L237+8
 4043 11e4 1A70     		strb	r2, [r3]
1308:main.c        ****                 patchNum &= 63;
 4044              		.loc 1 1308 0
 4045 11e6 964B     		ldr	r3, .L237+8
 4046 11e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4047 11ea 03F03F03 		and	r3, r3, #63
 4048 11ee DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 96


 4049 11f0 934B     		ldr	r3, .L237+8
 4050 11f2 1A70     		strb	r2, [r3]
1309:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4051              		.loc 1 1309 0
 4052 11f4 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1310:main.c        ****                 button4Up = 0;
 4053              		.loc 1 1310 0
 4054 11f8 924B     		ldr	r3, .L237+12
 4055 11fa 0022     		movs	r2, #0
 4056 11fc 1A70     		strb	r2, [r3]
 4057 11fe B7E0     		b	.L148
 4058              	.L146:
1311:main.c        ****             }
1312:main.c        ****             else if (button4_Read())
 4059              		.loc 1 1312 0
 4060 1200 FFF7FEFF 		bl	button4_Read
 4061 1204 0346     		mov	r3, r0
 4062 1206 002B     		cmp	r3, #0
 4063 1208 00F0B280 		beq	.L148
1313:main.c        ****             {
1314:main.c        ****                 button4Up = 1;
 4064              		.loc 1 1314 0
 4065 120c 8D4B     		ldr	r3, .L237+12
 4066 120e 0122     		movs	r2, #1
 4067 1210 1A70     		strb	r2, [r3]
 4068 1212 ADE0     		b	.L148
 4069              	.L139:
1315:main.c        ****             }
1316:main.c        ****         }
1317:main.c        ****         //if in edit mode, then /left right up down work differently
1318:main.c        ****         else
1319:main.c        ****         {
1320:main.c        ****         
1321:main.c        ****             if ((!button1_Read()) && (button1Up))
 4070              		.loc 1 1321 0
 4071 1214 FFF7FEFF 		bl	button1_Read
 4072 1218 0346     		mov	r3, r0
 4073 121a 002B     		cmp	r3, #0
 4074 121c 25D1     		bne	.L149
 4075              		.loc 1 1321 0 is_stmt 0 discriminator 1
 4076 121e 8A4B     		ldr	r3, .L237+16
 4077 1220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4078 1222 002B     		cmp	r3, #0
 4079 1224 21D0     		beq	.L149
1322:main.c        ****             {
1323:main.c        ****                 currentCopedent -= 1;
 4080              		.loc 1 1323 0 is_stmt 1
 4081 1226 894B     		ldr	r3, .L237+20
 4082 1228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4083 122a 013B     		subs	r3, r3, #1
 4084 122c DAB2     		uxtb	r2, r3
 4085 122e 874B     		ldr	r3, .L237+20
 4086 1230 1A70     		strb	r2, [r3]
1324:main.c        ****                 currentCopedent &= 31;
 4087              		.loc 1 1324 0
 4088 1232 864B     		ldr	r3, .L237+20
 4089 1234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 97


 4090 1236 03F01F03 		and	r3, r3, #31
 4091 123a DAB2     		uxtb	r2, r3
 4092 123c 834B     		ldr	r3, .L237+20
 4093 123e 1A70     		strb	r2, [r3]
1325:main.c        ****                 necks[currentNeck] = currentCopedent;
 4094              		.loc 1 1325 0
 4095 1240 834B     		ldr	r3, .L237+24
 4096 1242 1B68     		ldr	r3, [r3]
 4097 1244 814A     		ldr	r2, .L237+20
 4098 1246 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4099 1248 824A     		ldr	r2, .L237+28
 4100 124a D154     		strb	r1, [r2, r3]
1326:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 4101              		.loc 1 1326 0
 4102 124c 7F4B     		ldr	r3, .L237+20
 4103 124e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4104 1250 7F4B     		ldr	r3, .L237+24
 4105 1252 1B68     		ldr	r3, [r3]
 4106 1254 9BB2     		uxth	r3, r3
 4107 1256 1946     		mov	r1, r3
 4108 1258 1046     		mov	r0, r2
 4109 125a FFF7FEFF 		bl	EEPROM_WriteByte
1327:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4110              		.loc 1 1327 0
 4111 125e FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1328:main.c        ****                 button1Up = 0;
 4112              		.loc 1 1328 0
 4113 1262 794B     		ldr	r3, .L237+16
 4114 1264 0022     		movs	r2, #0
 4115 1266 1A70     		strb	r2, [r3]
 4116 1268 07E0     		b	.L150
 4117              	.L149:
1329:main.c        ****             }
1330:main.c        ****             else if (button1_Read())
 4118              		.loc 1 1330 0
 4119 126a FFF7FEFF 		bl	button1_Read
 4120 126e 0346     		mov	r3, r0
 4121 1270 002B     		cmp	r3, #0
 4122 1272 02D0     		beq	.L150
1331:main.c        ****             {
1332:main.c        ****                 button1Up = 1;
 4123              		.loc 1 1332 0
 4124 1274 744B     		ldr	r3, .L237+16
 4125 1276 0122     		movs	r2, #1
 4126 1278 1A70     		strb	r2, [r3]
 4127              	.L150:
1333:main.c        ****             }
1334:main.c        ****             
1335:main.c        ****             if ((!button2_Read()) && (button2Up))
 4128              		.loc 1 1335 0
 4129 127a FFF7FEFF 		bl	button2_Read
 4130 127e 0346     		mov	r3, r0
 4131 1280 002B     		cmp	r3, #0
 4132 1282 25D1     		bne	.L151
 4133              		.loc 1 1335 0 is_stmt 0 discriminator 1
 4134 1284 6C4B     		ldr	r3, .L237
 4135 1286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 98


 4136 1288 002B     		cmp	r3, #0
 4137 128a 21D0     		beq	.L151
1336:main.c        ****             {
1337:main.c        ****                 currentCopedent += 1;
 4138              		.loc 1 1337 0 is_stmt 1
 4139 128c 6F4B     		ldr	r3, .L237+20
 4140 128e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4141 1290 0133     		adds	r3, r3, #1
 4142 1292 DAB2     		uxtb	r2, r3
 4143 1294 6D4B     		ldr	r3, .L237+20
 4144 1296 1A70     		strb	r2, [r3]
1338:main.c        ****                 currentCopedent &= 31;
 4145              		.loc 1 1338 0
 4146 1298 6C4B     		ldr	r3, .L237+20
 4147 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4148 129c 03F01F03 		and	r3, r3, #31
 4149 12a0 DAB2     		uxtb	r2, r3
 4150 12a2 6A4B     		ldr	r3, .L237+20
 4151 12a4 1A70     		strb	r2, [r3]
1339:main.c        ****                 necks[currentNeck] = currentCopedent;
 4152              		.loc 1 1339 0
 4153 12a6 6A4B     		ldr	r3, .L237+24
 4154 12a8 1B68     		ldr	r3, [r3]
 4155 12aa 684A     		ldr	r2, .L237+20
 4156 12ac 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4157 12ae 694A     		ldr	r2, .L237+28
 4158 12b0 D154     		strb	r1, [r2, r3]
1340:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 4159              		.loc 1 1340 0
 4160 12b2 664B     		ldr	r3, .L237+20
 4161 12b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4162 12b6 664B     		ldr	r3, .L237+24
 4163 12b8 1B68     		ldr	r3, [r3]
 4164 12ba 9BB2     		uxth	r3, r3
 4165 12bc 1946     		mov	r1, r3
 4166 12be 1046     		mov	r0, r2
 4167 12c0 FFF7FEFF 		bl	EEPROM_WriteByte
1341:main.c        ****                 displayCurrentPresetNameAndCopedent();  
 4168              		.loc 1 1341 0
 4169 12c4 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1342:main.c        ****                 button2Up = 0;
 4170              		.loc 1 1342 0
 4171 12c8 5B4B     		ldr	r3, .L237
 4172 12ca 0022     		movs	r2, #0
 4173 12cc 1A70     		strb	r2, [r3]
 4174 12ce 07E0     		b	.L152
 4175              	.L151:
1343:main.c        ****             }
1344:main.c        ****             else if (button2_Read())
 4176              		.loc 1 1344 0
 4177 12d0 FFF7FEFF 		bl	button2_Read
 4178 12d4 0346     		mov	r3, r0
 4179 12d6 002B     		cmp	r3, #0
 4180 12d8 02D0     		beq	.L152
1345:main.c        ****             {
1346:main.c        ****                 button2Up = 1;
 4181              		.loc 1 1346 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 99


 4182 12da 574B     		ldr	r3, .L237
 4183 12dc 0122     		movs	r2, #1
 4184 12de 1A70     		strb	r2, [r3]
 4185              	.L152:
1347:main.c        ****             }
1348:main.c        ****             
1349:main.c        ****             if ((!button3_Read()) && (button3Up))
 4186              		.loc 1 1349 0
 4187 12e0 FFF7FEFF 		bl	button3_Read
 4188 12e4 0346     		mov	r3, r0
 4189 12e6 002B     		cmp	r3, #0
 4190 12e8 16D1     		bne	.L153
 4191              		.loc 1 1349 0 is_stmt 0 discriminator 1
 4192 12ea 544B     		ldr	r3, .L237+4
 4193 12ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4194 12ee 002B     		cmp	r3, #0
 4195 12f0 12D0     		beq	.L153
1350:main.c        ****             {
1351:main.c        ****                 patchNum -= 1;
 4196              		.loc 1 1351 0 is_stmt 1
 4197 12f2 534B     		ldr	r3, .L237+8
 4198 12f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4199 12f6 013B     		subs	r3, r3, #1
 4200 12f8 DAB2     		uxtb	r2, r3
 4201 12fa 514B     		ldr	r3, .L237+8
 4202 12fc 1A70     		strb	r2, [r3]
1352:main.c        ****                 patchNum &= 63;
 4203              		.loc 1 1352 0
 4204 12fe 504B     		ldr	r3, .L237+8
 4205 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4206 1302 03F03F03 		and	r3, r3, #63
 4207 1306 DAB2     		uxtb	r2, r3
 4208 1308 4D4B     		ldr	r3, .L237+8
 4209 130a 1A70     		strb	r2, [r3]
1353:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4210              		.loc 1 1353 0
 4211 130c FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1354:main.c        ****                 button3Up = 0;
 4212              		.loc 1 1354 0
 4213 1310 4A4B     		ldr	r3, .L237+4
 4214 1312 0022     		movs	r2, #0
 4215 1314 1A70     		strb	r2, [r3]
 4216 1316 07E0     		b	.L154
 4217              	.L153:
1355:main.c        ****             }
1356:main.c        ****             else if (button3_Read())
 4218              		.loc 1 1356 0
 4219 1318 FFF7FEFF 		bl	button3_Read
 4220 131c 0346     		mov	r3, r0
 4221 131e 002B     		cmp	r3, #0
 4222 1320 02D0     		beq	.L154
1357:main.c        ****             {
1358:main.c        ****                 button3Up = 1;
 4223              		.loc 1 1358 0
 4224 1322 464B     		ldr	r3, .L237+4
 4225 1324 0122     		movs	r2, #1
 4226 1326 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 100


 4227              	.L154:
1359:main.c        ****             }
1360:main.c        ****             
1361:main.c        ****             if ((!button4_Read()) && (button4Up))
 4228              		.loc 1 1361 0
 4229 1328 FFF7FEFF 		bl	button4_Read
 4230 132c 0346     		mov	r3, r0
 4231 132e 002B     		cmp	r3, #0
 4232 1330 16D1     		bne	.L155
 4233              		.loc 1 1361 0 is_stmt 0 discriminator 1
 4234 1332 444B     		ldr	r3, .L237+12
 4235 1334 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4236 1336 002B     		cmp	r3, #0
 4237 1338 12D0     		beq	.L155
1362:main.c        ****             {
1363:main.c        ****                 patchNum += 1;
 4238              		.loc 1 1363 0 is_stmt 1
 4239 133a 414B     		ldr	r3, .L237+8
 4240 133c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4241 133e 0133     		adds	r3, r3, #1
 4242 1340 DAB2     		uxtb	r2, r3
 4243 1342 3F4B     		ldr	r3, .L237+8
 4244 1344 1A70     		strb	r2, [r3]
1364:main.c        ****                 patchNum &= 63;
 4245              		.loc 1 1364 0
 4246 1346 3E4B     		ldr	r3, .L237+8
 4247 1348 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4248 134a 03F03F03 		and	r3, r3, #63
 4249 134e DAB2     		uxtb	r2, r3
 4250 1350 3B4B     		ldr	r3, .L237+8
 4251 1352 1A70     		strb	r2, [r3]
1365:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4252              		.loc 1 1365 0
 4253 1354 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1366:main.c        ****                 button4Up = 0;
 4254              		.loc 1 1366 0
 4255 1358 3A4B     		ldr	r3, .L237+12
 4256 135a 0022     		movs	r2, #0
 4257 135c 1A70     		strb	r2, [r3]
 4258 135e 07E0     		b	.L148
 4259              	.L155:
1367:main.c        ****             }
1368:main.c        ****             else if (button4_Read())
 4260              		.loc 1 1368 0
 4261 1360 FFF7FEFF 		bl	button4_Read
 4262 1364 0346     		mov	r3, r0
 4263 1366 002B     		cmp	r3, #0
 4264 1368 02D0     		beq	.L148
1369:main.c        ****             {
1370:main.c        ****                 button4Up = 1;
 4265              		.loc 1 1370 0
 4266 136a 364B     		ldr	r3, .L237+12
 4267 136c 0122     		movs	r2, #1
 4268 136e 1A70     		strb	r2, [r3]
 4269              	.L148:
1371:main.c        ****             }
1372:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 101


1373:main.c        ****         if (((!edit_button_Read() && !encoder_button_Read()) && (editUp)) || ((!edit_button_Read() 
 4270              		.loc 1 1373 0
 4271 1370 FFF7FEFF 		bl	edit_button_Read
 4272 1374 0346     		mov	r3, r0
 4273 1376 002B     		cmp	r3, #0
 4274 1378 08D1     		bne	.L156
 4275              		.loc 1 1373 0 is_stmt 0 discriminator 1
 4276 137a FFF7FEFF 		bl	encoder_button_Read
 4277 137e 0346     		mov	r3, r0
 4278 1380 002B     		cmp	r3, #0
 4279 1382 03D1     		bne	.L156
 4280              		.loc 1 1373 0 discriminator 3
 4281 1384 344B     		ldr	r3, .L237+32
 4282 1386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4283 1388 002B     		cmp	r3, #0
 4284 138a 0FD1     		bne	.L157
 4285              	.L156:
 4286              		.loc 1 1373 0 discriminator 5
 4287 138c FFF7FEFF 		bl	edit_button_Read
 4288 1390 0346     		mov	r3, r0
 4289 1392 002B     		cmp	r3, #0
 4290 1394 40F0D380 		bne	.L158
 4291              		.loc 1 1373 0 discriminator 6
 4292 1398 304B     		ldr	r3, .L237+36
 4293 139a 1B68     		ldr	r3, [r3]
 4294 139c 002B     		cmp	r3, #0
 4295 139e 00F0CE80 		beq	.L158
 4296              		.loc 1 1373 0 discriminator 7
 4297 13a2 2D4B     		ldr	r3, .L237+32
 4298 13a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4299 13a6 002B     		cmp	r3, #0
 4300 13a8 00F0C980 		beq	.L158
 4301              	.L157:
1374:main.c        ****         {
1375:main.c        ****             editMode = !editMode;
 4302              		.loc 1 1375 0 is_stmt 1
 4303 13ac 2B4B     		ldr	r3, .L237+36
 4304 13ae 1B68     		ldr	r3, [r3]
 4305 13b0 002B     		cmp	r3, #0
 4306 13b2 0CBF     		ite	eq
 4307 13b4 0123     		moveq	r3, #1
 4308 13b6 0023     		movne	r3, #0
 4309 13b8 DBB2     		uxtb	r3, r3
 4310 13ba 1A46     		mov	r2, r3
 4311 13bc 274B     		ldr	r3, .L237+36
 4312 13be 1A60     		str	r2, [r3]
1376:main.c        ****             //for now edit mode is calibration mode
1377:main.c        ****             calibrationMode = !calibrationMode;
 4313              		.loc 1 1377 0
 4314 13c0 274B     		ldr	r3, .L237+40
 4315 13c2 1B68     		ldr	r3, [r3]
 4316 13c4 002B     		cmp	r3, #0
 4317 13c6 0CBF     		ite	eq
 4318 13c8 0123     		moveq	r3, #1
 4319 13ca 0023     		movne	r3, #0
 4320 13cc DBB2     		uxtb	r3, r3
 4321 13ce 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 102


 4322 13d0 234B     		ldr	r3, .L237+40
 4323 13d2 1A60     		str	r2, [r3]
1378:main.c        ****             LED_red2_Write(editMode);
 4324              		.loc 1 1378 0
 4325 13d4 214B     		ldr	r3, .L237+36
 4326 13d6 1B68     		ldr	r3, [r3]
 4327 13d8 DBB2     		uxtb	r3, r3
 4328 13da 1846     		mov	r0, r3
 4329 13dc FFF7FEFF 		bl	LED_red2_Write
1379:main.c        ****             editUp = 0;
 4330              		.loc 1 1379 0
 4331 13e0 1D4B     		ldr	r3, .L237+32
 4332 13e2 0022     		movs	r2, #0
 4333 13e4 1A70     		strb	r2, [r3]
1380:main.c        ****             if (editMode)
 4334              		.loc 1 1380 0
 4335 13e6 1D4B     		ldr	r3, .L237+36
 4336 13e8 1B68     		ldr	r3, [r3]
 4337 13ea 002B     		cmp	r3, #0
 4338 13ec 56D0     		beq	.L159
1381:main.c        ****             {
1382:main.c        ****                 //#if 0
1383:main.c        ****                 OLEDclear(128, 64);
 4339              		.loc 1 1383 0
 4340 13ee 4021     		movs	r1, #64
 4341 13f0 8020     		movs	r0, #128
 4342 13f2 FFF7FEFF 		bl	OLEDclear
1384:main.c        ****         
1385:main.c        ****                 myGFX_setFont(0);
 4343              		.loc 1 1385 0
 4344 13f6 0020     		movs	r0, #0
 4345 13f8 FFF7FEFF 		bl	myGFX_setFont
1386:main.c        ****                 
1387:main.c        ****                 OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 4346              		.loc 1 1387 0
 4347 13fc 0023     		movs	r3, #0
 4348 13fe 0122     		movs	r2, #1
 4349 1400 0B21     		movs	r1, #11
 4350 1402 1848     		ldr	r0, .L237+44
 4351 1404 FFF7FEFF 		bl	OLEDwriteString
1388:main.c        ****                 OLEDwriteString("MOVE PEDALS", 11, 1, SecondLine);
 4352              		.loc 1 1388 0
 4353 1408 0123     		movs	r3, #1
 4354 140a 0122     		movs	r2, #1
 4355 140c 0B21     		movs	r1, #11
 4356 140e 1648     		ldr	r0, .L237+48
 4357 1410 FFF7FEFF 		bl	OLEDwriteString
1389:main.c        ****                 OLEDwriteString("AND LEVERS", 11, 1, ThirdLine);
 4358              		.loc 1 1389 0
 4359 1414 0223     		movs	r3, #2
 4360 1416 0122     		movs	r2, #1
 4361 1418 0B21     		movs	r1, #11
 4362 141a 1448     		ldr	r0, .L237+52
 4363 141c FFF7FEFF 		bl	OLEDwriteString
1390:main.c        ****                 OLEDwriteString("THEN EXIT", 11, 1, FourthLine);
 4364              		.loc 1 1390 0
 4365 1420 0323     		movs	r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 103


 4366 1422 0122     		movs	r2, #1
 4367 1424 0B21     		movs	r1, #11
 4368 1426 1248     		ldr	r0, .L237+56
 4369 1428 FFF7FEFF 		bl	OLEDwriteString
1391:main.c        ****                 mainOLEDWaitingToSend = 1;
 4370              		.loc 1 1391 0
 4371 142c 114B     		ldr	r3, .L237+60
 4372 142e 0122     		movs	r2, #1
 4373 1430 1A60     		str	r2, [r3]
 4374              	.LBB24:
1392:main.c        ****                                // #endif
1393:main.c        ****                 //entering calibration mode, clear the pedals low and high arrays
1394:main.c        ****                 for (int i = 0; i < 10; i++)
 4375              		.loc 1 1394 0
 4376 1432 0023     		movs	r3, #0
 4377 1434 BB66     		str	r3, [r7, #104]
 4378 1436 2DE0     		b	.L160
 4379              	.L238:
 4380              		.align	2
 4381              	.L237:
 4382 1438 00000000 		.word	button2Up
 4383 143c 00000000 		.word	button3Up
 4384 1440 00000000 		.word	patchNum
 4385 1444 00000000 		.word	button4Up
 4386 1448 00000000 		.word	button1Up
 4387 144c 00000000 		.word	currentCopedent
 4388 1450 00000000 		.word	currentNeck
 4389 1454 00000000 		.word	necks
 4390 1458 00000000 		.word	editUp
 4391 145c 00000000 		.word	editMode
 4392 1460 00000000 		.word	calibrationMode
 4393 1464 04040000 		.word	.LC1
 4394 1468 10040000 		.word	.LC2
 4395 146c 1C040000 		.word	.LC3
 4396 1470 28040000 		.word	.LC4
 4397 1474 00000000 		.word	mainOLEDWaitingToSend
 4398              	.L161:
1395:main.c        ****                 {
1396:main.c        ****                     pedals_low[i] = 4095;
 4399              		.loc 1 1396 0 discriminator 3
 4400 1478 614A     		ldr	r2, .L239
 4401 147a BB6E     		ldr	r3, [r7, #104]
 4402 147c 40F6FF71 		movw	r1, #4095
 4403 1480 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1397:main.c        ****                     pedals_high[i] = 0;
 4404              		.loc 1 1397 0 discriminator 3
 4405 1484 5F4A     		ldr	r2, .L239+4
 4406 1486 BB6E     		ldr	r3, [r7, #104]
 4407 1488 0021     		movs	r1, #0
 4408 148a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1394:main.c        ****                 {
 4409              		.loc 1 1394 0 discriminator 3
 4410 148e BB6E     		ldr	r3, [r7, #104]
 4411 1490 0133     		adds	r3, r3, #1
 4412 1492 BB66     		str	r3, [r7, #104]
 4413              	.L160:
1394:main.c        ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 104


 4414              		.loc 1 1394 0 is_stmt 0 discriminator 1
 4415 1494 BB6E     		ldr	r3, [r7, #104]
 4416 1496 092B     		cmp	r3, #9
 4417 1498 EEDD     		ble	.L161
 4418              	.LBE24:
1380:main.c        ****             {
 4419              		.loc 1 1380 0 is_stmt 1
 4420 149a 58E0     		b	.L165
 4421              	.L159:
1398:main.c        ****                 }
1399:main.c        **** 
1400:main.c        ****             }
1401:main.c        ****             else
1402:main.c        ****             {
1403:main.c        ****                 //draw normal screen
1404:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4422              		.loc 1 1404 0
 4423 149c FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1405:main.c        ****                 calculatePedalRatios();
 4424              		.loc 1 1405 0
 4425 14a0 FFF7FEFF 		bl	calculatePedalRatios
 4426              	.LBB25:
1406:main.c        ****                 //now need to store this in EEPROM.                
1407:main.c        ****                 for (int i = 0; i < NUM_PEDALS; i++)
 4427              		.loc 1 1407 0
 4428 14a4 0023     		movs	r3, #0
 4429 14a6 7B66     		str	r3, [r7, #100]
 4430 14a8 45E0     		b	.L163
 4431              	.L164:
1408:main.c        ****                 {
1409:main.c        ****                      EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_CALIBRATION_OFFSET + (i*4));
 4432              		.loc 1 1409 0 discriminator 3
 4433 14aa 554A     		ldr	r2, .L239
 4434 14ac 7B6E     		ldr	r3, [r7, #100]
 4435 14ae 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4436 14b2 1B0A     		lsrs	r3, r3, #8
 4437 14b4 9BB2     		uxth	r3, r3
 4438 14b6 DAB2     		uxtb	r2, r3
 4439 14b8 7B6E     		ldr	r3, [r7, #100]
 4440 14ba 03F2E713 		addw	r3, r3, #487
 4441 14be 9BB2     		uxth	r3, r3
 4442 14c0 9B00     		lsls	r3, r3, #2
 4443 14c2 9BB2     		uxth	r3, r3
 4444 14c4 1946     		mov	r1, r3
 4445 14c6 1046     		mov	r0, r2
 4446 14c8 FFF7FEFF 		bl	EEPROM_WriteByte
1410:main.c        ****                      EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 1
 4447              		.loc 1 1410 0 discriminator 3
 4448 14cc 4C4A     		ldr	r2, .L239
 4449 14ce 7B6E     		ldr	r3, [r7, #100]
 4450 14d0 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4451 14d4 DAB2     		uxtb	r2, r3
 4452 14d6 7B6E     		ldr	r3, [r7, #100]
 4453 14d8 9BB2     		uxth	r3, r3
 4454 14da 9B00     		lsls	r3, r3, #2
 4455 14dc 9BB2     		uxth	r3, r3
 4456 14de 03F29D73 		addw	r3, r3, #1949
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 105


 4457 14e2 9BB2     		uxth	r3, r3
 4458 14e4 1946     		mov	r1, r3
 4459 14e6 1046     		mov	r0, r2
 4460 14e8 FFF7FEFF 		bl	EEPROM_WriteByte
1411:main.c        ****                      EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_CALIBRATION_OFFSET + ((i*4) + 2
 4461              		.loc 1 1411 0 discriminator 3
 4462 14ec 454A     		ldr	r2, .L239+4
 4463 14ee 7B6E     		ldr	r3, [r7, #100]
 4464 14f0 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4465 14f4 1B0A     		lsrs	r3, r3, #8
 4466 14f6 9BB2     		uxth	r3, r3
 4467 14f8 DAB2     		uxtb	r2, r3
 4468 14fa 7B6E     		ldr	r3, [r7, #100]
 4469 14fc 9BB2     		uxth	r3, r3
 4470 14fe 9B00     		lsls	r3, r3, #2
 4471 1500 9BB2     		uxth	r3, r3
 4472 1502 03F29E73 		addw	r3, r3, #1950
 4473 1506 9BB2     		uxth	r3, r3
 4474 1508 1946     		mov	r1, r3
 4475 150a 1046     		mov	r0, r2
 4476 150c FFF7FEFF 		bl	EEPROM_WriteByte
1412:main.c        ****                      EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 
 4477              		.loc 1 1412 0 discriminator 3
 4478 1510 3C4A     		ldr	r2, .L239+4
 4479 1512 7B6E     		ldr	r3, [r7, #100]
 4480 1514 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4481 1518 DAB2     		uxtb	r2, r3
 4482 151a 7B6E     		ldr	r3, [r7, #100]
 4483 151c 9BB2     		uxth	r3, r3
 4484 151e 9B00     		lsls	r3, r3, #2
 4485 1520 9BB2     		uxth	r3, r3
 4486 1522 03F29F73 		addw	r3, r3, #1951
 4487 1526 9BB2     		uxth	r3, r3
 4488 1528 1946     		mov	r1, r3
 4489 152a 1046     		mov	r0, r2
 4490 152c FFF7FEFF 		bl	EEPROM_WriteByte
1407:main.c        ****                 {
 4491              		.loc 1 1407 0 discriminator 3
 4492 1530 7B6E     		ldr	r3, [r7, #100]
 4493 1532 0133     		adds	r3, r3, #1
 4494 1534 7B66     		str	r3, [r7, #100]
 4495              	.L163:
1407:main.c        ****                 {
 4496              		.loc 1 1407 0 is_stmt 0 discriminator 1
 4497 1536 7B6E     		ldr	r3, [r7, #100]
 4498 1538 092B     		cmp	r3, #9
 4499 153a B6DD     		ble	.L164
 4500              	.LBE25:
1380:main.c        ****             {
 4501              		.loc 1 1380 0 is_stmt 1
 4502 153c 07E0     		b	.L165
 4503              	.L158:
1413:main.c        ****                 }
1414:main.c        **** 
1415:main.c        ****                 // also need to make this a little more hidden - maybe first edit then Enter?
1416:main.c        ****             }
1417:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 106


1418:main.c        ****         else if (edit_button_Read())
 4504              		.loc 1 1418 0
 4505 153e FFF7FEFF 		bl	edit_button_Read
 4506 1542 0346     		mov	r3, r0
 4507 1544 002B     		cmp	r3, #0
 4508 1546 02D0     		beq	.L165
1419:main.c        ****         {
1420:main.c        ****             editUp = 1;
 4509              		.loc 1 1420 0
 4510 1548 2F4B     		ldr	r3, .L239+8
 4511 154a 0122     		movs	r2, #1
 4512 154c 1A70     		strb	r2, [r3]
 4513              	.L165:
1421:main.c        ****         }
1422:main.c        ****         
1423:main.c        ****         if (octave != prevOctave)
1424:main.c        ****         {
1425:main.c        ****             //sendMIDIControlChange(90, octave);
1426:main.c        ****         }
1427:main.c        ****         prevOctave = octave;
 4514              		.loc 1 1427 0
 4515 154e 2F4B     		ldr	r3, .L239+12
 4516 1550 1B68     		ldr	r3, [r3]
 4517 1552 2F4A     		ldr	r2, .L239+16
 4518 1554 1360     		str	r3, [r2]
 4519              	.LBB26:
1428:main.c        ****         
1429:main.c        ****         
1430:main.c        ****         for (int i=  0; i < 4; i++)
 4520              		.loc 1 1430 0
 4521 1556 0023     		movs	r3, #0
 4522 1558 3B66     		str	r3, [r7, #96]
 4523 155a 47E0     		b	.L166
 4524              	.L169:
1431:main.c        ****         {
1432:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)/16);
 4525              		.loc 1 1432 0
 4526 155c 3B6E     		ldr	r3, [r7, #96]
 4527 155e 9BB2     		uxth	r3, r3
 4528 1560 1846     		mov	r0, r3
 4529 1562 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4530 1566 0346     		mov	r3, r0
 4531 1568 002B     		cmp	r3, #0
 4532 156a 00DA     		bge	.L167
 4533 156c 0F33     		adds	r3, r3, #15
 4534              	.L167:
 4535 156e 1B11     		asrs	r3, r3, #4
 4536 1570 1BB2     		sxth	r3, r3
 4537 1572 D9B2     		uxtb	r1, r3
 4538 1574 274A     		ldr	r2, .L239+20
 4539 1576 3B6E     		ldr	r3, [r7, #96]
 4540 1578 1344     		add	r3, r3, r2
 4541 157a 0A46     		mov	r2, r1
 4542 157c 1A70     		strb	r2, [r3]
1433:main.c        ****             
1434:main.c        ****             knobs[i] = 255 - knobs[i];
 4543              		.loc 1 1434 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 107


 4544 157e 254A     		ldr	r2, .L239+20
 4545 1580 3B6E     		ldr	r3, [r7, #96]
 4546 1582 1344     		add	r3, r3, r2
 4547 1584 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4548 1586 DB43     		mvns	r3, r3
 4549 1588 D9B2     		uxtb	r1, r3
 4550 158a 224A     		ldr	r2, .L239+20
 4551 158c 3B6E     		ldr	r3, [r7, #96]
 4552 158e 1344     		add	r3, r3, r2
 4553 1590 0A46     		mov	r2, r1
 4554 1592 1A70     		strb	r2, [r3]
1435:main.c        ****             knobs7bit[i] = knobs[i] >> 1;
 4555              		.loc 1 1435 0
 4556 1594 1F4A     		ldr	r2, .L239+20
 4557 1596 3B6E     		ldr	r3, [r7, #96]
 4558 1598 1344     		add	r3, r3, r2
 4559 159a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4560 159c 5B08     		lsrs	r3, r3, #1
 4561 159e D9B2     		uxtb	r1, r3
 4562 15a0 1D4A     		ldr	r2, .L239+24
 4563 15a2 3B6E     		ldr	r3, [r7, #96]
 4564 15a4 1344     		add	r3, r3, r2
 4565 15a6 0A46     		mov	r2, r1
 4566 15a8 1A70     		strb	r2, [r3]
1436:main.c        ****             
1437:main.c        ****             if (knobs7bit[i] != prevKnobs7bit[i])
 4567              		.loc 1 1437 0
 4568 15aa 1B4A     		ldr	r2, .L239+24
 4569 15ac 3B6E     		ldr	r3, [r7, #96]
 4570 15ae 1344     		add	r3, r3, r2
 4571 15b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4572 15b2 1A49     		ldr	r1, .L239+28
 4573 15b4 3B6E     		ldr	r3, [r7, #96]
 4574 15b6 0B44     		add	r3, r3, r1
 4575 15b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4576 15ba 9A42     		cmp	r2, r3
 4577 15bc 0AD0     		beq	.L168
1438:main.c        ****             {
1439:main.c        ****                 sendMIDIControlChange(i+9, knobs7bit[i], 0);
 4578              		.loc 1 1439 0
 4579 15be 3B6E     		ldr	r3, [r7, #96]
 4580 15c0 03F10900 		add	r0, r3, #9
 4581 15c4 144A     		ldr	r2, .L239+24
 4582 15c6 3B6E     		ldr	r3, [r7, #96]
 4583 15c8 1344     		add	r3, r3, r2
 4584 15ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4585 15cc 0022     		movs	r2, #0
 4586 15ce 1946     		mov	r1, r3
 4587 15d0 FFF7FEFF 		bl	sendMIDIControlChange
 4588              	.L168:
1440:main.c        ****             }
1441:main.c        ****             prevKnobs7bit[i] = knobs7bit[i];
 4589              		.loc 1 1441 0 discriminator 2
 4590 15d4 104A     		ldr	r2, .L239+24
 4591 15d6 3B6E     		ldr	r3, [r7, #96]
 4592 15d8 1344     		add	r3, r3, r2
 4593 15da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 108


 4594 15dc 0F4A     		ldr	r2, .L239+28
 4595 15de 3B6E     		ldr	r3, [r7, #96]
 4596 15e0 1344     		add	r3, r3, r2
 4597 15e2 0A46     		mov	r2, r1
 4598 15e4 1A70     		strb	r2, [r3]
1430:main.c        ****         {
 4599              		.loc 1 1430 0 discriminator 2
 4600 15e6 3B6E     		ldr	r3, [r7, #96]
 4601 15e8 0133     		adds	r3, r3, #1
 4602 15ea 3B66     		str	r3, [r7, #96]
 4603              	.L166:
1430:main.c        ****         {
 4604              		.loc 1 1430 0 is_stmt 0 discriminator 1
 4605 15ec 3B6E     		ldr	r3, [r7, #96]
 4606 15ee 032B     		cmp	r3, #3
 4607 15f0 B4DD     		ble	.L169
 4608              	.LBE26:
1442:main.c        ****             
1443:main.c        ****         }
1444:main.c        ****         
1445:main.c        ****         testpin4_Write(1);
 4609              		.loc 1 1445 0 is_stmt 1
 4610 15f2 0120     		movs	r0, #1
 4611 15f4 FFF7FEFF 		bl	testpin4_Write
 4612              	.LBB27:
1446:main.c        ****         //calculate the pitch of each string based on the current Copedent
1447:main.c        ****         for (int i = 0; i < numStrings; i++)
 4613              		.loc 1 1447 0
 4614 15f8 0023     		movs	r3, #0
 4615 15fa FB65     		str	r3, [r7, #92]
 4616 15fc 9FE1     		b	.L170
 4617              	.L240:
 4618 15fe 00BF     		.align	2
 4619              	.L239:
 4620 1600 00000000 		.word	pedals_low
 4621 1604 00000000 		.word	pedals_high
 4622 1608 00000000 		.word	editUp
 4623 160c 00000000 		.word	octave
 4624 1610 00000000 		.word	prevOctave
 4625 1614 00000000 		.word	knobs
 4626 1618 00000000 		.word	knobs7bit
 4627 161c 00000000 		.word	prevKnobs7bit
 4628              	.L175:
 4629              	.LBB28:
1448:main.c        ****     	{
1449:main.c        ****     		//interpolate ratios for each of the strings
1450:main.c        ****            /*
1451:main.c        ****             float myMappedPos;
1452:main.c        ****             if (dualSlider)
1453:main.c        ****             {
1454:main.c        ****                myMappedPos = LEAF_interpolation_linear(stringMappedPositions[0], stringMappedPositi
1455:main.c        ****             }
1456:main.c        ****             else
1457:main.c        ****             {
1458:main.c        ****                 myMappedPos = stringMappedPositions[0];
1459:main.c        ****             }
1460:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 109


1461:main.c        ****     		stringOctave[i] = powf(2.0f,octave);
1462:main.c        ****             */
1463:main.c        ****     		//then apply those ratios to the fundamental frequencies
1464:main.c        ****     		float tempMIDI = (copedent[necks[currentNeck]][0][i] +
 4630              		.loc 1 1464 0
 4631 1620 AA4B     		ldr	r3, .L241
 4632 1622 1B68     		ldr	r3, [r3]
 4633 1624 AA4A     		ldr	r2, .L241+4
 4634 1626 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4635 1628 1A46     		mov	r2, r3
 4636 162a AA49     		ldr	r1, .L241+8
 4637 162c 1346     		mov	r3, r2
 4638 162e 5B01     		lsls	r3, r3, #5
 4639 1630 1344     		add	r3, r3, r2
 4640 1632 9B00     		lsls	r3, r3, #2
 4641 1634 FA6D     		ldr	r2, [r7, #92]
 4642 1636 1344     		add	r3, r3, r2
 4643 1638 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1465:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4644              		.loc 1 1465 0
 4645 163c A64B     		ldr	r3, .L241+12
 4646 163e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4647 1640 1A46     		mov	r2, r3
 4648 1642 A449     		ldr	r1, .L241+8
 4649 1644 1346     		mov	r3, r2
 4650 1646 5B01     		lsls	r3, r3, #5
 4651 1648 1344     		add	r3, r3, r2
 4652 164a 9B00     		lsls	r3, r3, #2
 4653 164c FA6D     		ldr	r2, [r7, #92]
 4654 164e 1344     		add	r3, r3, r2
 4655 1650 3033     		adds	r3, r3, #48
 4656 1652 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4657 1656 A14B     		ldr	r3, .L241+16
 4658 1658 1B68     		ldr	r3, [r3]	@ float
 4659 165a 1946     		mov	r1, r3
 4660 165c 1046     		mov	r0, r2
 4661 165e FFF7FEFF 		bl	__aeabi_fmul
 4662 1662 0346     		mov	r3, r0
1464:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4663              		.loc 1 1464 0
 4664 1664 1946     		mov	r1, r3
 4665 1666 2046     		mov	r0, r4
 4666 1668 FFF7FEFF 		bl	__aeabi_fadd
 4667 166c 0346     		mov	r3, r0
 4668 166e 1C46     		mov	r4, r3
1466:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4669              		.loc 1 1466 0
 4670 1670 994B     		ldr	r3, .L241+12
 4671 1672 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4672 1674 1A46     		mov	r2, r3
 4673 1676 9749     		ldr	r1, .L241+8
 4674 1678 1346     		mov	r3, r2
 4675 167a 5B01     		lsls	r3, r3, #5
 4676 167c 1344     		add	r3, r3, r2
 4677 167e 9B00     		lsls	r3, r3, #2
 4678 1680 FA6D     		ldr	r2, [r7, #92]
 4679 1682 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 110


 4680 1684 3C33     		adds	r3, r3, #60
 4681 1686 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4682 168a 944B     		ldr	r3, .L241+16
 4683 168c 5B68     		ldr	r3, [r3, #4]	@ float
 4684 168e 1946     		mov	r1, r3
 4685 1690 1046     		mov	r0, r2
 4686 1692 FFF7FEFF 		bl	__aeabi_fmul
 4687 1696 0346     		mov	r3, r0
1465:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4688              		.loc 1 1465 0
 4689 1698 1946     		mov	r1, r3
 4690 169a 2046     		mov	r0, r4
 4691 169c FFF7FEFF 		bl	__aeabi_fadd
 4692 16a0 0346     		mov	r3, r0
 4693 16a2 1C46     		mov	r4, r3
1467:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4694              		.loc 1 1467 0
 4695 16a4 8C4B     		ldr	r3, .L241+12
 4696 16a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4697 16a8 1A46     		mov	r2, r3
 4698 16aa 8A49     		ldr	r1, .L241+8
 4699 16ac 1346     		mov	r3, r2
 4700 16ae 5B01     		lsls	r3, r3, #5
 4701 16b0 1344     		add	r3, r3, r2
 4702 16b2 9B00     		lsls	r3, r3, #2
 4703 16b4 FA6D     		ldr	r2, [r7, #92]
 4704 16b6 1344     		add	r3, r3, r2
 4705 16b8 4833     		adds	r3, r3, #72
 4706 16ba 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4707 16be 874B     		ldr	r3, .L241+16
 4708 16c0 9B68     		ldr	r3, [r3, #8]	@ float
 4709 16c2 1946     		mov	r1, r3
 4710 16c4 1046     		mov	r0, r2
 4711 16c6 FFF7FEFF 		bl	__aeabi_fmul
 4712 16ca 0346     		mov	r3, r0
1466:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4713              		.loc 1 1466 0
 4714 16cc 1946     		mov	r1, r3
 4715 16ce 2046     		mov	r0, r4
 4716 16d0 FFF7FEFF 		bl	__aeabi_fadd
 4717 16d4 0346     		mov	r3, r0
 4718 16d6 1C46     		mov	r4, r3
1468:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4719              		.loc 1 1468 0
 4720 16d8 7F4B     		ldr	r3, .L241+12
 4721 16da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4722 16dc 1A46     		mov	r2, r3
 4723 16de 7D49     		ldr	r1, .L241+8
 4724 16e0 1346     		mov	r3, r2
 4725 16e2 5B01     		lsls	r3, r3, #5
 4726 16e4 1344     		add	r3, r3, r2
 4727 16e6 9B00     		lsls	r3, r3, #2
 4728 16e8 FA6D     		ldr	r2, [r7, #92]
 4729 16ea 1344     		add	r3, r3, r2
 4730 16ec 5433     		adds	r3, r3, #84
 4731 16ee 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4732 16f2 7A4B     		ldr	r3, .L241+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 111


 4733 16f4 DB68     		ldr	r3, [r3, #12]	@ float
 4734 16f6 1946     		mov	r1, r3
 4735 16f8 1046     		mov	r0, r2
 4736 16fa FFF7FEFF 		bl	__aeabi_fmul
 4737 16fe 0346     		mov	r3, r0
1467:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4738              		.loc 1 1467 0
 4739 1700 1946     		mov	r1, r3
 4740 1702 2046     		mov	r0, r4
 4741 1704 FFF7FEFF 		bl	__aeabi_fadd
 4742 1708 0346     		mov	r3, r0
 4743 170a 1C46     		mov	r4, r3
1469:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4744              		.loc 1 1469 0
 4745 170c 724B     		ldr	r3, .L241+12
 4746 170e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4747 1710 1A46     		mov	r2, r3
 4748 1712 7049     		ldr	r1, .L241+8
 4749 1714 1346     		mov	r3, r2
 4750 1716 5B01     		lsls	r3, r3, #5
 4751 1718 1344     		add	r3, r3, r2
 4752 171a 9B00     		lsls	r3, r3, #2
 4753 171c FA6D     		ldr	r2, [r7, #92]
 4754 171e 1344     		add	r3, r3, r2
 4755 1720 6033     		adds	r3, r3, #96
 4756 1722 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4757 1726 6D4B     		ldr	r3, .L241+16
 4758 1728 1B69     		ldr	r3, [r3, #16]	@ float
 4759 172a 1946     		mov	r1, r3
 4760 172c 1046     		mov	r0, r2
 4761 172e FFF7FEFF 		bl	__aeabi_fmul
 4762 1732 0346     		mov	r3, r0
1468:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4763              		.loc 1 1468 0
 4764 1734 1946     		mov	r1, r3
 4765 1736 2046     		mov	r0, r4
 4766 1738 FFF7FEFF 		bl	__aeabi_fadd
 4767 173c 0346     		mov	r3, r0
 4768 173e 1C46     		mov	r4, r3
1470:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4769              		.loc 1 1470 0
 4770 1740 654B     		ldr	r3, .L241+12
 4771 1742 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4772 1744 1A46     		mov	r2, r3
 4773 1746 6349     		ldr	r1, .L241+8
 4774 1748 1346     		mov	r3, r2
 4775 174a 5B01     		lsls	r3, r3, #5
 4776 174c 1344     		add	r3, r3, r2
 4777 174e 9B00     		lsls	r3, r3, #2
 4778 1750 FA6D     		ldr	r2, [r7, #92]
 4779 1752 1344     		add	r3, r3, r2
 4780 1754 7833     		adds	r3, r3, #120
 4781 1756 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4782 175a 604B     		ldr	r3, .L241+16
 4783 175c 5B69     		ldr	r3, [r3, #20]	@ float
 4784 175e 1946     		mov	r1, r3
 4785 1760 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 112


 4786 1762 FFF7FEFF 		bl	__aeabi_fmul
 4787 1766 0346     		mov	r3, r0
1469:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4788              		.loc 1 1469 0
 4789 1768 1946     		mov	r1, r3
 4790 176a 2046     		mov	r0, r4
 4791 176c FFF7FEFF 		bl	__aeabi_fadd
 4792 1770 0346     		mov	r3, r0
 4793 1772 1C46     		mov	r4, r3
1471:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4794              		.loc 1 1471 0
 4795 1774 584B     		ldr	r3, .L241+12
 4796 1776 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4797 1778 1A46     		mov	r2, r3
 4798 177a 5649     		ldr	r1, .L241+8
 4799 177c 1346     		mov	r3, r2
 4800 177e 5B01     		lsls	r3, r3, #5
 4801 1780 1344     		add	r3, r3, r2
 4802 1782 9B00     		lsls	r3, r3, #2
 4803 1784 FA6D     		ldr	r2, [r7, #92]
 4804 1786 1344     		add	r3, r3, r2
 4805 1788 6C33     		adds	r3, r3, #108
 4806 178a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4807 178e 534B     		ldr	r3, .L241+16
 4808 1790 9B69     		ldr	r3, [r3, #24]	@ float
 4809 1792 1946     		mov	r1, r3
 4810 1794 1046     		mov	r0, r2
 4811 1796 FFF7FEFF 		bl	__aeabi_fmul
 4812 179a 0346     		mov	r3, r0
1470:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4813              		.loc 1 1470 0
 4814 179c 1946     		mov	r1, r3
 4815 179e 2046     		mov	r0, r4
 4816 17a0 FFF7FEFF 		bl	__aeabi_fadd
 4817 17a4 0346     		mov	r3, r0
 4818 17a6 1C46     		mov	r4, r3
1472:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4819              		.loc 1 1472 0
 4820 17a8 4B4B     		ldr	r3, .L241+12
 4821 17aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4822 17ac 1A46     		mov	r2, r3
 4823 17ae 4949     		ldr	r1, .L241+8
 4824 17b0 1346     		mov	r3, r2
 4825 17b2 5B01     		lsls	r3, r3, #5
 4826 17b4 1344     		add	r3, r3, r2
 4827 17b6 9B00     		lsls	r3, r3, #2
 4828 17b8 FA6D     		ldr	r2, [r7, #92]
 4829 17ba 1344     		add	r3, r3, r2
 4830 17bc 2433     		adds	r3, r3, #36
 4831 17be 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4832 17c2 464B     		ldr	r3, .L241+16
 4833 17c4 DB69     		ldr	r3, [r3, #28]	@ float
 4834 17c6 1946     		mov	r1, r3
 4835 17c8 1046     		mov	r0, r2
 4836 17ca FFF7FEFF 		bl	__aeabi_fmul
 4837 17ce 0346     		mov	r3, r0
1471:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 113


 4838              		.loc 1 1471 0
 4839 17d0 1946     		mov	r1, r3
 4840 17d2 2046     		mov	r0, r4
 4841 17d4 FFF7FEFF 		bl	__aeabi_fadd
 4842 17d8 0346     		mov	r3, r0
 4843 17da 1C46     		mov	r4, r3
1473:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4844              		.loc 1 1473 0
 4845 17dc 3E4B     		ldr	r3, .L241+12
 4846 17de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4847 17e0 1A46     		mov	r2, r3
 4848 17e2 3C49     		ldr	r1, .L241+8
 4849 17e4 1346     		mov	r3, r2
 4850 17e6 5B01     		lsls	r3, r3, #5
 4851 17e8 1344     		add	r3, r3, r2
 4852 17ea 9B00     		lsls	r3, r3, #2
 4853 17ec FA6D     		ldr	r2, [r7, #92]
 4854 17ee 1344     		add	r3, r3, r2
 4855 17f0 0C33     		adds	r3, r3, #12
 4856 17f2 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4857 17f6 394B     		ldr	r3, .L241+16
 4858 17f8 1B6A     		ldr	r3, [r3, #32]	@ float
 4859 17fa 1946     		mov	r1, r3
 4860 17fc 1046     		mov	r0, r2
 4861 17fe FFF7FEFF 		bl	__aeabi_fmul
 4862 1802 0346     		mov	r3, r0
1472:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4863              		.loc 1 1472 0
 4864 1804 1946     		mov	r1, r3
 4865 1806 2046     		mov	r0, r4
 4866 1808 FFF7FEFF 		bl	__aeabi_fadd
 4867 180c 0346     		mov	r3, r0
 4868 180e 1C46     		mov	r4, r3
1474:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9]));
 4869              		.loc 1 1474 0
 4870 1810 314B     		ldr	r3, .L241+12
 4871 1812 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4872 1814 1A46     		mov	r2, r3
 4873 1816 2F49     		ldr	r1, .L241+8
 4874 1818 1346     		mov	r3, r2
 4875 181a 5B01     		lsls	r3, r3, #5
 4876 181c 1344     		add	r3, r3, r2
 4877 181e 9B00     		lsls	r3, r3, #2
 4878 1820 FA6D     		ldr	r2, [r7, #92]
 4879 1822 1344     		add	r3, r3, r2
 4880 1824 1833     		adds	r3, r3, #24
 4881 1826 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4882 182a 2C4B     		ldr	r3, .L241+16
 4883 182c 5B6A     		ldr	r3, [r3, #36]	@ float
 4884 182e 1946     		mov	r1, r3
 4885 1830 1046     		mov	r0, r2
 4886 1832 FFF7FEFF 		bl	__aeabi_fmul
 4887 1836 0346     		mov	r3, r0
1464:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4888              		.loc 1 1464 0
 4889 1838 1946     		mov	r1, r3
 4890 183a 2046     		mov	r0, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 114


 4891 183c FFF7FEFF 		bl	__aeabi_fadd
 4892 1840 0346     		mov	r3, r0
 4893 1842 3B62     		str	r3, [r7, #32]	@ float
1475:main.c        **** 
1476:main.c        ****             
1477:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 4894              		.loc 1 1477 0
 4895 1844 244B     		ldr	r3, .L241+12
 4896 1846 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4897 1848 1A46     		mov	r2, r3
 4898 184a 2249     		ldr	r1, .L241+8
 4899 184c 1346     		mov	r3, r2
 4900 184e 5B01     		lsls	r3, r3, #5
 4901 1850 1344     		add	r3, r3, r2
 4902 1852 9B00     		lsls	r3, r3, #2
 4903 1854 FA6D     		ldr	r2, [r7, #92]
 4904 1856 1344     		add	r3, r3, r2
 4905 1858 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 4906 185c FB61     		str	r3, [r7, #28]	@ float
1478:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 4907              		.loc 1 1478 0
 4908 185e F869     		ldr	r0, [r7, #28]	@ float
 4909 1860 FFF7FEFF 		bl	__aeabi_f2iz
 4910 1864 0146     		mov	r1, r0
 4911 1866 1E4A     		ldr	r2, .L241+20
 4912 1868 FB6D     		ldr	r3, [r7, #92]
 4913 186a 42F82310 		str	r1, [r2, r3, lsl #2]
1479:main.c        ****             
1480:main.c        ****             float barMIDI = ftom((invStringMappedPositions[0]) * mtof(tempMIDI));
 4914              		.loc 1 1480 0
 4915 186e 1D4B     		ldr	r3, .L241+24
 4916 1870 1C68     		ldr	r4, [r3]	@ float
 4917 1872 386A     		ldr	r0, [r7, #32]	@ float
 4918 1874 FFF7FEFF 		bl	mtof
 4919 1878 0346     		mov	r3, r0
 4920 187a 1946     		mov	r1, r3
 4921 187c 2046     		mov	r0, r4
 4922 187e FFF7FEFF 		bl	__aeabi_fmul
 4923 1882 0346     		mov	r3, r0
 4924 1884 1846     		mov	r0, r3
 4925 1886 FFF7FEFF 		bl	ftom
 4926 188a B861     		str	r0, [r7, #24]	@ float
1481:main.c        ****             
1482:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
 4927              		.loc 1 1482 0
 4928 188c 144A     		ldr	r2, .L241+20
 4929 188e FB6D     		ldr	r3, [r7, #92]
 4930 1890 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4931 1894 1846     		mov	r0, r3
 4932 1896 FFF7FEFF 		bl	__aeabi_i2f
 4933 189a 0346     		mov	r3, r0
 4934 189c 1946     		mov	r1, r3
 4935 189e B869     		ldr	r0, [r7, #24]	@ float
 4936 18a0 FFF7FEFF 		bl	__aeabi_fsub
 4937 18a4 0346     		mov	r3, r0
 4938 18a6 7B61     		str	r3, [r7, #20]	@ float
1483:main.c        ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 115


1484:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 4939              		.loc 1 1484 0
 4940 18a8 0F49     		ldr	r1, .L241+28
 4941 18aa 7869     		ldr	r0, [r7, #20]	@ float
 4942 18ac FFF7FEFF 		bl	__aeabi_fmul
 4943 18b0 0346     		mov	r3, r0
 4944 18b2 4FF08C41 		mov	r1, #1174405120
 4945 18b6 1846     		mov	r0, r3
 4946 18b8 FFF7FEFF 		bl	__aeabi_fadd
 4947 18bc 0346     		mov	r3, r0
 4948 18be 3B61     		str	r3, [r7, #16]	@ float
1485:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
 4949              		.loc 1 1485 0
 4950 18c0 0A4A     		ldr	r2, .L241+32
 4951 18c2 FB6D     		ldr	r3, [r7, #92]
 4952 18c4 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4953 18c8 12E0     		b	.L242
 4954              	.L243:
 4955 18ca 00BF     		.align	2
 4956              	.L241:
 4957 18cc 00000000 		.word	currentNeck
 4958 18d0 00000000 		.word	necks
 4959 18d4 00000000 		.word	copedent
 4960 18d8 00000000 		.word	currentCopedent
 4961 18dc 00000000 		.word	pedals_float
 4962 18e0 00000000 		.word	openStringMIDI_Int
 4963 18e4 00000000 		.word	invStringMappedPositions
 4964 18e8 ABAA2A43 		.word	1126869675
 4965 18ec 00000000 		.word	prevStringPitchBend
 4966              	.L242:
 4967 18f0 3969     		ldr	r1, [r7, #16]	@ float
 4968 18f2 1846     		mov	r0, r3
 4969 18f4 FFF7FEFF 		bl	__aeabi_fcmpeq
 4970 18f8 0346     		mov	r3, r0
 4971 18fa 002B     		cmp	r3, #0
 4972 18fc 0AD1     		bne	.L171
1486:main.c        ****             {
1487:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 4973              		.loc 1 1487 0
 4974 18fe 3869     		ldr	r0, [r7, #16]	@ float
 4975 1900 FFF7FEFF 		bl	__aeabi_f2uiz
 4976 1904 0346     		mov	r3, r0
 4977 1906 1A46     		mov	r2, r3
 4978 1908 FB6D     		ldr	r3, [r7, #92]
 4979 190a 0133     		adds	r3, r3, #1
 4980 190c 1946     		mov	r1, r3
 4981 190e 1046     		mov	r0, r2
 4982 1910 FFF7FEFF 		bl	sendMIDIPitchBend
 4983              	.L171:
1488:main.c        ****             }
1489:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 4984              		.loc 1 1489 0
 4985 1914 A049     		ldr	r1, .L244
 4986 1916 FB6D     		ldr	r3, [r7, #92]
 4987 1918 3A69     		ldr	r2, [r7, #16]	@ float
 4988 191a 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1490:main.c        ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 116


1491:main.c        ****             if (tempMIDI > 0.0f)
 4989              		.loc 1 1491 0
 4990 191e 4FF00001 		mov	r1, #0
 4991 1922 386A     		ldr	r0, [r7, #32]	@ float
 4992 1924 FFF7FEFF 		bl	__aeabi_fcmpgt
 4993 1928 0346     		mov	r3, r0
 4994 192a 002B     		cmp	r3, #0
 4995 192c 04D0     		beq	.L173
1492:main.c        ****             {
1493:main.c        ****                 stringMIDI[i] = tempMIDI;
 4996              		.loc 1 1493 0
 4997 192e 9B49     		ldr	r1, .L244+4
 4998 1930 FB6D     		ldr	r3, [r7, #92]
 4999 1932 3A6A     		ldr	r2, [r7, #32]	@ float
 5000 1934 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 5001              	.L173:
 5002              	.LBE28:
1447:main.c        ****     	{
 5003              		.loc 1 1447 0 discriminator 2
 5004 1938 FB6D     		ldr	r3, [r7, #92]
 5005 193a 0133     		adds	r3, r3, #1
 5006 193c FB65     		str	r3, [r7, #92]
 5007              	.L170:
1447:main.c        ****     	{
 5008              		.loc 1 1447 0 is_stmt 0 discriminator 1
 5009 193e 984B     		ldr	r3, .L244+8
 5010 1940 1B68     		ldr	r3, [r3]
 5011 1942 FA6D     		ldr	r2, [r7, #92]
 5012 1944 9A42     		cmp	r2, r3
 5013 1946 FFF66BAE 		blt	.L175
 5014              	.LBE27:
1494:main.c        ****             }
1495:main.c        ****     	}
1496:main.c        ****         testpin4_Write(0);
 5015              		.loc 1 1496 0 is_stmt 1
 5016 194a 0020     		movs	r0, #0
 5017 194c FFF7FEFF 		bl	testpin4_Write
1497:main.c        ****         if (encoder_button_Read())
 5018              		.loc 1 1497 0
 5019 1950 FFF7FEFF 		bl	encoder_button_Read
 5020 1954 0346     		mov	r3, r0
 5021 1956 002B     		cmp	r3, #0
 5022 1958 10D0     		beq	.L176
1498:main.c        ****         {
1499:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
 5023              		.loc 1 1499 0
 5024 195a FFF7FEFF 		bl	QuadDec_1_GetCounter
 5025 195e 0346     		mov	r3, r0
 5026 1960 9800     		lsls	r0, r3, #2
 5027 1962 904B     		ldr	r3, .L244+12
 5028 1964 1B68     		ldr	r3, [r3]
 5029 1966 8F4A     		ldr	r2, .L244+12
 5030 1968 1268     		ldr	r2, [r2]
 5031 196a 8F49     		ldr	r1, .L244+16
 5032 196c 8A5C     		ldrb	r2, [r1, r2]
 5033 196e D1B2     		uxtb	r1, r2
 5034 1970 C2B2     		uxtb	r2, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 117


 5035 1972 0A44     		add	r2, r2, r1
 5036 1974 D1B2     		uxtb	r1, r2
 5037 1976 8C4A     		ldr	r2, .L244+16
 5038 1978 D154     		strb	r1, [r2, r3]
 5039 197a 0FE0     		b	.L177
 5040              	.L176:
1500:main.c        ****         }
1501:main.c        ****         else
1502:main.c        ****         {
1503:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter();
 5041              		.loc 1 1503 0
 5042 197c FFF7FEFF 		bl	QuadDec_1_GetCounter
 5043 1980 0346     		mov	r3, r0
 5044 1982 1846     		mov	r0, r3
 5045 1984 874B     		ldr	r3, .L244+12
 5046 1986 1B68     		ldr	r3, [r3]
 5047 1988 864A     		ldr	r2, .L244+12
 5048 198a 1268     		ldr	r2, [r2]
 5049 198c 8649     		ldr	r1, .L244+16
 5050 198e 8A5C     		ldrb	r2, [r1, r2]
 5051 1990 D1B2     		uxtb	r1, r2
 5052 1992 C2B2     		uxtb	r2, r0
 5053 1994 0A44     		add	r2, r2, r1
 5054 1996 D1B2     		uxtb	r1, r2
 5055 1998 834A     		ldr	r2, .L244+16
 5056 199a D154     		strb	r1, [r2, r3]
 5057              	.L177:
1504:main.c        ****         }
1505:main.c        ****         QuadDec_1_SetCounter(0);
 5058              		.loc 1 1505 0
 5059 199c 0020     		movs	r0, #0
 5060 199e FFF7FEFF 		bl	QuadDec_1_SetCounter
1506:main.c        ****         
1507:main.c        **** 
1508:main.c        ****         
1509:main.c        ****         if (USB_check_flag)
 5061              		.loc 1 1509 0
 5062 19a2 824B     		ldr	r3, .L244+20
 5063 19a4 1B78     		ldrb	r3, [r3]
 5064 19a6 DBB2     		uxtb	r3, r3
 5065 19a8 002B     		cmp	r3, #0
 5066 19aa 01D0     		beq	.L178
1510:main.c        ****         {
1511:main.c        ****             checkUSB_Vbus();
 5067              		.loc 1 1511 0
 5068 19ac FFF7FEFF 		bl	checkUSB_Vbus
 5069              	.L178:
1512:main.c        ****         }
1513:main.c        ****         //only service the USB bus if there is a computer plugged in
1514:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 5070              		.loc 1 1514 0
 5071 19b0 7F4B     		ldr	r3, .L244+24
 5072 19b2 1B78     		ldrb	r3, [r3]
 5073 19b4 DBB2     		uxtb	r3, r3
 5074 19b6 002B     		cmp	r3, #0
 5075 19b8 13D0     		beq	.L222
 5076              		.loc 1 1514 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 118


 5077 19ba FFF7FEFF 		bl	USB_VBusPresent
 5078 19be 0346     		mov	r3, r0
 5079 19c0 002B     		cmp	r3, #0
 5080 19c2 0ED0     		beq	.L222
1515:main.c        ****         {
1516:main.c        ****             if (midiSent > 64)
 5081              		.loc 1 1516 0 is_stmt 1
 5082 19c4 7B4B     		ldr	r3, .L244+28
 5083 19c6 1B88     		ldrh	r3, [r3]
 5084 19c8 402B     		cmp	r3, #64
 5085 19ca 05D9     		bls	.L180
1517:main.c        ****             {
1518:main.c        ****                 midiOverflow++;
 5086              		.loc 1 1518 0
 5087 19cc 7A4B     		ldr	r3, .L244+32
 5088 19ce 1B88     		ldrh	r3, [r3]
 5089 19d0 0133     		adds	r3, r3, #1
 5090 19d2 9AB2     		uxth	r2, r3
 5091 19d4 784B     		ldr	r3, .L244+32
 5092 19d6 1A80     		strh	r2, [r3]	@ movhi
 5093              	.L180:
1519:main.c        ****             }
1520:main.c        ****             midiSent = 0;
 5094              		.loc 1 1520 0
 5095 19d8 764B     		ldr	r3, .L244+28
 5096 19da 0022     		movs	r2, #0
 5097 19dc 1A80     		strh	r2, [r3]	@ movhi
1521:main.c        ****             USB_service();
 5098              		.loc 1 1521 0
 5099 19de FFF7FEFF 		bl	USB_service
 5100              	.L222:
1522:main.c        ****         }
1523:main.c        **** 
1524:main.c        ****         
1525:main.c        ****         /*
1526:main.c        ****         for (int i = 0; i < 10; i++)
1527:main.c        ****         {
1528:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1529:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1530:main.c        ****         }
1531:main.c        ****         
1532:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1533:main.c        ****         for (int i = 0; i < 4; i++)
1534:main.c        ****         {
1535:main.c        ****             myArray[i+21] = knobs[i];
1536:main.c        ****         }
1537:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1538:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
1539:main.c        ****         */
1540:main.c        ****                 //make sure previous SPI2 transmission has completed before transferring the remain
1541:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 5101              		.loc 1 1541 0
 5102 19e2 00BF     		nop
 5103              	.L184:
 5104              		.loc 1 1541 0 is_stmt 0 discriminator 7
 5105 19e4 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5106 19e8 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 119


 5107 19ea 03F00103 		and	r3, r3, #1
 5108 19ee 002B     		cmp	r3, #0
 5109 19f0 06D1     		bne	.L181
 5110              		.loc 1 1541 0 discriminator 2
 5111 19f2 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5112 19f6 0346     		mov	r3, r0
 5113 19f8 03F01003 		and	r3, r3, #16
 5114 19fc 002B     		cmp	r3, #0
 5115 19fe 01D0     		beq	.L182
 5116              	.L181:
 5117              		.loc 1 1541 0 discriminator 3
 5118 1a00 0123     		movs	r3, #1
 5119 1a02 00E0     		b	.L183
 5120              	.L182:
 5121              		.loc 1 1541 0 discriminator 4
 5122 1a04 0023     		movs	r3, #0
 5123              	.L183:
 5124              		.loc 1 1541 0 discriminator 6
 5125 1a06 002B     		cmp	r3, #0
 5126 1a08 ECD0     		beq	.L184
1542:main.c        ****         {
1543:main.c        ****             ;
1544:main.c        ****         }
1545:main.c        ****         testpin6_Write(1);
 5127              		.loc 1 1545 0 is_stmt 1
 5128 1a0a 0120     		movs	r0, #1
 5129 1a0c FFF7FEFF 		bl	testpin6_Write
1546:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 5130              		.loc 1 1546 0
 5131 1a10 6A4B     		ldr	r3, .L244+36
 5132 1a12 1B78     		ldrb	r3, [r3]
 5133 1a14 DBB2     		uxtb	r3, r3
 5134 1a16 012B     		cmp	r3, #1
 5135 1a18 56D1     		bne	.L185
1547:main.c        ****         {
1548:main.c        ****             if (sendMessageEnd) //send end message
 5136              		.loc 1 1548 0
 5137 1a1a 694B     		ldr	r3, .L244+40
 5138 1a1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5139 1a1e 002B     		cmp	r3, #0
 5140 1a20 1DD0     		beq	.L186
1549:main.c        ****             {
1550:main.c        ****                 myArray[0] = 253;
 5141              		.loc 1 1550 0
 5142 1a22 684B     		ldr	r3, .L244+44
 5143 1a24 FD22     		movs	r2, #253
 5144 1a26 1A70     		strb	r2, [r3]
1551:main.c        ****                 myArray[1] = presetNumberToWrite;
 5145              		.loc 1 1551 0
 5146 1a28 674B     		ldr	r3, .L244+48
 5147 1a2a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5148 1a2c 654B     		ldr	r3, .L244+44
 5149 1a2e 5A70     		strb	r2, [r3, #1]
1552:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 5150              		.loc 1 1552 0
 5151 1a30 654B     		ldr	r3, .L244+48
 5152 1a32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 120


 5153 1a34 1A46     		mov	r2, r3
 5154 1a36 654B     		ldr	r3, .L244+52
 5155 1a38 1A60     		str	r2, [r3]
1553:main.c        ****                 //display previous preset as loaded
1554:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5156              		.loc 1 1554 0
 5157 1a3a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1555:main.c        ****                 //OLED_invert(0);
1556:main.c        ****                 sendMessageEnd = 0;
 5158              		.loc 1 1556 0
 5159 1a3e 604B     		ldr	r3, .L244+40
 5160 1a40 0022     		movs	r2, #0
 5161 1a42 1A70     		strb	r2, [r3]
1557:main.c        ****                 sendingMessage = 0;
 5162              		.loc 1 1557 0
 5163 1a44 5D4B     		ldr	r3, .L244+36
 5164 1a46 0022     		movs	r2, #0
 5165 1a48 1A70     		strb	r2, [r3]
1558:main.c        ****                 messageArraySendCount = 0;
 5166              		.loc 1 1558 0
 5167 1a4a 614B     		ldr	r3, .L244+56
 5168 1a4c 0022     		movs	r2, #0
 5169 1a4e 1A80     		strh	r2, [r3]	@ movhi
1559:main.c        ****                 myArray[30] = 254;
 5170              		.loc 1 1559 0
 5171 1a50 5C4B     		ldr	r3, .L244+44
 5172 1a52 FE22     		movs	r2, #254
 5173 1a54 9A77     		strb	r2, [r3, #30]
1560:main.c        ****                 myArray[31] = 253;
 5174              		.loc 1 1560 0
 5175 1a56 5B4B     		ldr	r3, .L244+44
 5176 1a58 FD22     		movs	r2, #253
 5177 1a5a DA77     		strb	r2, [r3, #31]
 5178 1a5c A0E1     		b	.L192
 5179              	.L186:
1561:main.c        ****                 
1562:main.c        ****             }
1563:main.c        ****             else //send chunks
1564:main.c        ****             {
1565:main.c        ****                 //send the next preset Chunkkkkk
1566:main.c        ****                 myArray[0] = 2;
 5180              		.loc 1 1566 0
 5181 1a5e 594B     		ldr	r3, .L244+44
 5182 1a60 0222     		movs	r2, #2
 5183 1a62 1A70     		strb	r2, [r3]
1567:main.c        ****                 myArray[1] = presetNumberToWrite;
 5184              		.loc 1 1567 0
 5185 1a64 584B     		ldr	r3, .L244+48
 5186 1a66 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5187 1a68 564B     		ldr	r3, .L244+44
 5188 1a6a 5A70     		strb	r2, [r3, #1]
 5189              	.LBB29:
1568:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 5190              		.loc 1 1568 0
 5191 1a6c 0223     		movs	r3, #2
 5192 1a6e BB65     		str	r3, [r7, #88]
 5193 1a70 20E0     		b	.L188
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 121


 5194              	.L191:
1569:main.c        ****                 {
1570:main.c        ****                     if (messageArraySendCount < messageArraySize)
 5195              		.loc 1 1570 0
 5196 1a72 574B     		ldr	r3, .L244+56
 5197 1a74 1A88     		ldrh	r2, [r3]
 5198 1a76 574B     		ldr	r3, .L244+60
 5199 1a78 1B88     		ldrh	r3, [r3]
 5200 1a7a 9A42     		cmp	r2, r3
 5201 1a7c 0FD2     		bcs	.L189
1571:main.c        ****                     {
1572:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 5202              		.loc 1 1572 0
 5203 1a7e 544B     		ldr	r3, .L244+56
 5204 1a80 1B88     		ldrh	r3, [r3]
 5205 1a82 5A1C     		adds	r2, r3, #1
 5206 1a84 91B2     		uxth	r1, r2
 5207 1a86 524A     		ldr	r2, .L244+56
 5208 1a88 1180     		strh	r1, [r2]	@ movhi
 5209 1a8a 1A46     		mov	r2, r3
 5210 1a8c 524B     		ldr	r3, .L244+64
 5211 1a8e 9B5C     		ldrb	r3, [r3, r2]
 5212 1a90 D9B2     		uxtb	r1, r3
 5213 1a92 4C4A     		ldr	r2, .L244+44
 5214 1a94 BB6D     		ldr	r3, [r7, #88]
 5215 1a96 1344     		add	r3, r3, r2
 5216 1a98 0A46     		mov	r2, r1
 5217 1a9a 1A70     		strb	r2, [r3]
 5218 1a9c 07E0     		b	.L190
 5219              	.L189:
1573:main.c        ****                     }
1574:main.c        ****                     else
1575:main.c        ****                     {
1576:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 5220              		.loc 1 1576 0
 5221 1a9e 494A     		ldr	r2, .L244+44
 5222 1aa0 BB6D     		ldr	r3, [r7, #88]
 5223 1aa2 1344     		add	r3, r3, r2
 5224 1aa4 EE22     		movs	r2, #238
 5225 1aa6 1A70     		strb	r2, [r3]
1577:main.c        ****                         sendMessageEnd = 1;
 5226              		.loc 1 1577 0
 5227 1aa8 454B     		ldr	r3, .L244+40
 5228 1aaa 0122     		movs	r2, #1
 5229 1aac 1A70     		strb	r2, [r3]
 5230              	.L190:
1568:main.c        ****                 {
 5231              		.loc 1 1568 0 discriminator 2
 5232 1aae BB6D     		ldr	r3, [r7, #88]
 5233 1ab0 0133     		adds	r3, r3, #1
 5234 1ab2 BB65     		str	r3, [r7, #88]
 5235              	.L188:
1568:main.c        ****                 {
 5236              		.loc 1 1568 0 is_stmt 0 discriminator 1
 5237 1ab4 BB6D     		ldr	r3, [r7, #88]
 5238 1ab6 1D2B     		cmp	r3, #29
 5239 1ab8 DBD9     		bls	.L191
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 122


 5240              	.LBE29:
1578:main.c        ****                     }
1579:main.c        ****                 }
1580:main.c        ****                 myArray[30] = 254;
 5241              		.loc 1 1580 0 is_stmt 1
 5242 1aba 424B     		ldr	r3, .L244+44
 5243 1abc FE22     		movs	r2, #254
 5244 1abe 9A77     		strb	r2, [r3, #30]
1581:main.c        ****                 myArray[31] = 253;
 5245              		.loc 1 1581 0
 5246 1ac0 404B     		ldr	r3, .L244+44
 5247 1ac2 FD22     		movs	r2, #253
 5248 1ac4 DA77     		strb	r2, [r3, #31]
 5249 1ac6 6BE1     		b	.L192
 5250              	.L185:
1582:main.c        ****             }    
1583:main.c        ****         }
1584:main.c        ****         
1585:main.c        ****         else if (sendSingleParamUpdate)
 5251              		.loc 1 1585 0
 5252 1ac8 444B     		ldr	r3, .L244+68
 5253 1aca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5254 1acc 002B     		cmp	r3, #0
 5255 1ace 1CD0     		beq	.L193
1586:main.c        ****         {
1587:main.c        ****             myArray[0] = 6;
 5256              		.loc 1 1587 0
 5257 1ad0 3C4B     		ldr	r3, .L244+44
 5258 1ad2 0622     		movs	r2, #6
 5259 1ad4 1A70     		strb	r2, [r3]
1588:main.c        ****             myArray[1] = singleParamToUpdateHigh;
 5260              		.loc 1 1588 0
 5261 1ad6 424B     		ldr	r3, .L244+72
 5262 1ad8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5263 1ada 3A4B     		ldr	r3, .L244+44
 5264 1adc 5A70     		strb	r2, [r3, #1]
1589:main.c        ****             myArray[2] = singleParamToUpdateLow;
 5265              		.loc 1 1589 0
 5266 1ade 414B     		ldr	r3, .L244+76
 5267 1ae0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5268 1ae2 384B     		ldr	r3, .L244+44
 5269 1ae4 9A70     		strb	r2, [r3, #2]
1590:main.c        ****             myArray[3] = singleParamValueHigh;
 5270              		.loc 1 1590 0
 5271 1ae6 404B     		ldr	r3, .L244+80
 5272 1ae8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5273 1aea 364B     		ldr	r3, .L244+44
 5274 1aec DA70     		strb	r2, [r3, #3]
1591:main.c        ****             myArray[4] = singleParamValueLow;
 5275              		.loc 1 1591 0
 5276 1aee 3F4B     		ldr	r3, .L244+84
 5277 1af0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5278 1af2 344B     		ldr	r3, .L244+44
 5279 1af4 1A71     		strb	r2, [r3, #4]
1592:main.c        ****             myArray[30] = 254;
 5280              		.loc 1 1592 0
 5281 1af6 334B     		ldr	r3, .L244+44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 123


 5282 1af8 FE22     		movs	r2, #254
 5283 1afa 9A77     		strb	r2, [r3, #30]
1593:main.c        ****             myArray[31] = 253;
 5284              		.loc 1 1593 0
 5285 1afc 314B     		ldr	r3, .L244+44
 5286 1afe FD22     		movs	r2, #253
 5287 1b00 DA77     		strb	r2, [r3, #31]
1594:main.c        ****             sendSingleParamUpdate = 0;
 5288              		.loc 1 1594 0
 5289 1b02 364B     		ldr	r3, .L244+68
 5290 1b04 0022     		movs	r2, #0
 5291 1b06 1A70     		strb	r2, [r3]
 5292 1b08 4AE1     		b	.L192
 5293              	.L193:
1595:main.c        ****         }
1596:main.c        ****         
1597:main.c        ****         else if (sendMappingChangeUpdate)
 5294              		.loc 1 1597 0
 5295 1b0a 394B     		ldr	r3, .L244+88
 5296 1b0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5297 1b0e 002B     		cmp	r3, #0
 5298 1b10 24D0     		beq	.L194
1598:main.c        ****         {
1599:main.c        ****             myArray[0] = 7;
 5299              		.loc 1 1599 0
 5300 1b12 2C4B     		ldr	r3, .L244+44
 5301 1b14 0722     		movs	r2, #7
 5302 1b16 1A70     		strb	r2, [r3]
1600:main.c        ****             myArray[1] = mappingArray[0];
 5303              		.loc 1 1600 0
 5304 1b18 364B     		ldr	r3, .L244+92
 5305 1b1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5306 1b1c 294B     		ldr	r3, .L244+44
 5307 1b1e 5A70     		strb	r2, [r3, #1]
1601:main.c        ****             myArray[2] =  mappingArray[1];
 5308              		.loc 1 1601 0
 5309 1b20 344B     		ldr	r3, .L244+92
 5310 1b22 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5311 1b24 274B     		ldr	r3, .L244+44
 5312 1b26 9A70     		strb	r2, [r3, #2]
1602:main.c        ****             myArray[3] =  mappingArray[2];
 5313              		.loc 1 1602 0
 5314 1b28 324B     		ldr	r3, .L244+92
 5315 1b2a 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 5316 1b2c 254B     		ldr	r3, .L244+44
 5317 1b2e DA70     		strb	r2, [r3, #3]
1603:main.c        ****             myArray[4] =  mappingArray[3];
 5318              		.loc 1 1603 0
 5319 1b30 304B     		ldr	r3, .L244+92
 5320 1b32 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5321 1b34 234B     		ldr	r3, .L244+44
 5322 1b36 1A71     		strb	r2, [r3, #4]
1604:main.c        ****              myArray[5] =  mappingArray[4];
 5323              		.loc 1 1604 0
 5324 1b38 2E4B     		ldr	r3, .L244+92
 5325 1b3a 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 5326 1b3c 214B     		ldr	r3, .L244+44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 124


 5327 1b3e 5A71     		strb	r2, [r3, #5]
1605:main.c        ****              myArray[6] =  mappingArray[5];
 5328              		.loc 1 1605 0
 5329 1b40 2C4B     		ldr	r3, .L244+92
 5330 1b42 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 5331 1b44 1F4B     		ldr	r3, .L244+44
 5332 1b46 9A71     		strb	r2, [r3, #6]
1606:main.c        ****             myArray[30] = 254;
 5333              		.loc 1 1606 0
 5334 1b48 1E4B     		ldr	r3, .L244+44
 5335 1b4a FE22     		movs	r2, #254
 5336 1b4c 9A77     		strb	r2, [r3, #30]
1607:main.c        ****             myArray[31] = 253;
 5337              		.loc 1 1607 0
 5338 1b4e 1D4B     		ldr	r3, .L244+44
 5339 1b50 FD22     		movs	r2, #253
 5340 1b52 DA77     		strb	r2, [r3, #31]
1608:main.c        ****             sendMappingChangeUpdate = 0;
 5341              		.loc 1 1608 0
 5342 1b54 264B     		ldr	r3, .L244+88
 5343 1b56 0022     		movs	r2, #0
 5344 1b58 1A70     		strb	r2, [r3]
 5345 1b5a 21E1     		b	.L192
 5346              	.L194:
1609:main.c        ****         }
1610:main.c        ****         
1611:main.c        ****         
1612:main.c        ****         else if (sendKnobs)
 5347              		.loc 1 1612 0
 5348 1b5c 264B     		ldr	r3, .L244+96
 5349 1b5e 1B78     		ldrb	r3, [r3]
 5350 1b60 DBB2     		uxtb	r3, r3
 5351 1b62 002B     		cmp	r3, #0
 5352 1b64 00F0AD80 		beq	.L195
1613:main.c        ****         {
1614:main.c        ****             myArray[0] = 3; //sending knob stuff, not a preset send
 5353              		.loc 1 1614 0
 5354 1b68 164B     		ldr	r3, .L244+44
 5355 1b6a 0322     		movs	r2, #3
 5356 1b6c 1A70     		strb	r2, [r3]
 5357              	.LBB30:
1615:main.c        ****             for (int i = 0; i < 8; i++)
 5358              		.loc 1 1615 0
 5359 1b6e 0023     		movs	r3, #0
 5360 1b70 7B65     		str	r3, [r7, #84]
 5361 1b72 0AE0     		b	.L196
 5362              	.L197:
1616:main.c        ****             {
1617:main.c        ****                 myArray[i + 1] = macroKnobValues[i];
 5363              		.loc 1 1617 0 discriminator 3
 5364 1b74 7B6D     		ldr	r3, [r7, #84]
 5365 1b76 0133     		adds	r3, r3, #1
 5366 1b78 2049     		ldr	r1, .L244+100
 5367 1b7a 7A6D     		ldr	r2, [r7, #84]
 5368 1b7c 0A44     		add	r2, r2, r1
 5369 1b7e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5370 1b80 104A     		ldr	r2, .L244+44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 125


 5371 1b82 D154     		strb	r1, [r2, r3]
1615:main.c        ****             for (int i = 0; i < 8; i++)
 5372              		.loc 1 1615 0 discriminator 3
 5373 1b84 7B6D     		ldr	r3, [r7, #84]
 5374 1b86 0133     		adds	r3, r3, #1
 5375 1b88 7B65     		str	r3, [r7, #84]
 5376              	.L196:
1615:main.c        ****             for (int i = 0; i < 8; i++)
 5377              		.loc 1 1615 0 is_stmt 0 discriminator 1
 5378 1b8a 7B6D     		ldr	r3, [r7, #84]
 5379 1b8c 072B     		cmp	r3, #7
 5380 1b8e F1DD     		ble	.L197
 5381              	.LBE30:
 5382              	.LBB31:
1618:main.c        ****             }
1619:main.c        ****             for (int i = 0; i < 4; i++)
 5383              		.loc 1 1619 0 is_stmt 1
 5384 1b90 0023     		movs	r3, #0
 5385 1b92 3B65     		str	r3, [r7, #80]
 5386 1b94 3FE0     		b	.L198
 5387              	.L245:
 5388 1b96 00BF     		.align	2
 5389              	.L244:
 5390 1b98 00000000 		.word	prevStringPitchBend
 5391 1b9c 00000000 		.word	stringMIDI
 5392 1ba0 00000000 		.word	numStrings
 5393 1ba4 00000000 		.word	encoderNum
 5394 1ba8 00000000 		.word	encoderVal
 5395 1bac 00000000 		.word	USB_check_flag
 5396 1bb0 00000000 		.word	USB_active
 5397 1bb4 00000000 		.word	midiSent
 5398 1bb8 00000000 		.word	midiOverflow
 5399 1bbc 00000000 		.word	sendingMessage
 5400 1bc0 00000000 		.word	sendMessageEnd
 5401 1bc4 00000000 		.word	myArray
 5402 1bc8 00000000 		.word	presetNumberToWrite
 5403 1bcc 00000000 		.word	currentPresetSelection
 5404 1bd0 00000000 		.word	messageArraySendCount
 5405 1bd4 00000000 		.word	messageArraySize
 5406 1bd8 00000000 		.word	presetArray
 5407 1bdc 00000000 		.word	sendSingleParamUpdate
 5408 1be0 00000000 		.word	singleParamToUpdateHigh
 5409 1be4 00000000 		.word	singleParamToUpdateLow
 5410 1be8 00000000 		.word	singleParamValueHigh
 5411 1bec 00000000 		.word	singleParamValueLow
 5412 1bf0 00000000 		.word	sendMappingChangeUpdate
 5413 1bf4 00000000 		.word	mappingArray
 5414 1bf8 00000000 		.word	sendKnobs
 5415 1bfc 00000000 		.word	macroKnobValues
 5416              	.L199:
1620:main.c        ****             {
1621:main.c        ****                 myArray[i + 9] = knobs[i];
 5417              		.loc 1 1621 0 discriminator 3
 5418 1c00 3B6D     		ldr	r3, [r7, #80]
 5419 1c02 0933     		adds	r3, r3, #9
 5420 1c04 9849     		ldr	r1, .L246
 5421 1c06 3A6D     		ldr	r2, [r7, #80]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 126


 5422 1c08 0A44     		add	r2, r2, r1
 5423 1c0a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5424 1c0c 974A     		ldr	r2, .L246+4
 5425 1c0e D154     		strb	r1, [r2, r3]
1619:main.c        ****             {
 5426              		.loc 1 1619 0 discriminator 3
 5427 1c10 3B6D     		ldr	r3, [r7, #80]
 5428 1c12 0133     		adds	r3, r3, #1
 5429 1c14 3B65     		str	r3, [r7, #80]
 5430              	.L198:
1619:main.c        ****             {
 5431              		.loc 1 1619 0 is_stmt 0 discriminator 1
 5432 1c16 3B6D     		ldr	r3, [r7, #80]
 5433 1c18 032B     		cmp	r3, #3
 5434 1c1a F1DD     		ble	.L199
 5435              	.LBE31:
 5436              	.LBB32:
1622:main.c        ****             }
1623:main.c        ****             for (int i = 0; i < 10; i++)
 5437              		.loc 1 1623 0 is_stmt 1
 5438 1c1c 0023     		movs	r3, #0
 5439 1c1e FB64     		str	r3, [r7, #76]
 5440 1c20 0AE0     		b	.L200
 5441              	.L201:
1624:main.c        ****             {
1625:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 5442              		.loc 1 1625 0 discriminator 3
 5443 1c22 FB6C     		ldr	r3, [r7, #76]
 5444 1c24 0D33     		adds	r3, r3, #13
 5445 1c26 9249     		ldr	r1, .L246+8
 5446 1c28 FA6C     		ldr	r2, [r7, #76]
 5447 1c2a 0A44     		add	r2, r2, r1
 5448 1c2c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5449 1c2e 8F4A     		ldr	r2, .L246+4
 5450 1c30 D154     		strb	r1, [r2, r3]
1623:main.c        ****             {
 5451              		.loc 1 1623 0 discriminator 3
 5452 1c32 FB6C     		ldr	r3, [r7, #76]
 5453 1c34 0133     		adds	r3, r3, #1
 5454 1c36 FB64     		str	r3, [r7, #76]
 5455              	.L200:
1623:main.c        ****             {
 5456              		.loc 1 1623 0 is_stmt 0 discriminator 1
 5457 1c38 FB6C     		ldr	r3, [r7, #76]
 5458 1c3a 092B     		cmp	r3, #9
 5459 1c3c F1DD     		ble	.L201
 5460              	.LBE32:
1626:main.c        ****             }
1627:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5461              		.loc 1 1627 0 is_stmt 1
 5462 1c3e 8D4B     		ldr	r3, .L246+12
 5463 1c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5464 1c42 1B01     		lsls	r3, r3, #4
 5465 1c44 5AB2     		sxtb	r2, r3
 5466 1c46 8C4B     		ldr	r3, .L246+16
 5467 1c48 1B68     		ldr	r3, [r3]
 5468 1c4a 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 127


 5469 1c4c 1343     		orrs	r3, r3, r2
 5470 1c4e 5AB2     		sxtb	r2, r3
 5471 1c50 8A4B     		ldr	r3, .L246+20
 5472 1c52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5473 1c54 5B01     		lsls	r3, r3, #5
 5474 1c56 5BB2     		sxtb	r3, r3
 5475 1c58 1343     		orrs	r3, r3, r2
 5476 1c5a 5AB2     		sxtb	r2, r3
 5477 1c5c 884B     		ldr	r3, .L246+24
 5478 1c5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5479 1c60 9B01     		lsls	r3, r3, #6
 5480 1c62 5BB2     		sxtb	r3, r3
 5481 1c64 1343     		orrs	r3, r3, r2
 5482 1c66 5BB2     		sxtb	r3, r3
 5483 1c68 DAB2     		uxtb	r2, r3
 5484 1c6a 804B     		ldr	r3, .L246+4
 5485 1c6c 1A76     		strb	r2, [r3, #24]
1628:main.c        ****             myArray[25] = patchNum;
 5486              		.loc 1 1628 0
 5487 1c6e 854B     		ldr	r3, .L246+28
 5488 1c70 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5489 1c72 7E4B     		ldr	r3, .L246+4
 5490 1c74 5A76     		strb	r2, [r3, #25]
1629:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5491              		.loc 1 1629 0
 5492 1c76 844B     		ldr	r3, .L246+32
 5493 1c78 B3F90030 		ldrsh	r3, [r3]
 5494 1c7c 1B12     		asrs	r3, r3, #8
 5495 1c7e 1BB2     		sxth	r3, r3
 5496 1c80 DAB2     		uxtb	r2, r3
 5497 1c82 7A4B     		ldr	r3, .L246+4
 5498 1c84 9A76     		strb	r2, [r3, #26]
1630:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5499              		.loc 1 1630 0
 5500 1c86 804B     		ldr	r3, .L246+32
 5501 1c88 B3F90030 		ldrsh	r3, [r3]
 5502 1c8c DAB2     		uxtb	r2, r3
 5503 1c8e 774B     		ldr	r3, .L246+4
 5504 1c90 DA76     		strb	r2, [r3, #27]
1631:main.c        ****             myArray[28] = bar[1] >> 8;
 5505              		.loc 1 1631 0
 5506 1c92 7E4B     		ldr	r3, .L246+36
 5507 1c94 5B88     		ldrh	r3, [r3, #2]	@ movhi
 5508 1c96 9BB2     		uxth	r3, r3
 5509 1c98 1B0A     		lsrs	r3, r3, #8
 5510 1c9a 9BB2     		uxth	r3, r3
 5511 1c9c DAB2     		uxtb	r2, r3
 5512 1c9e 734B     		ldr	r3, .L246+4
 5513 1ca0 1A77     		strb	r2, [r3, #28]
1632:main.c        ****             myArray[29] = bar[1] & 0xff;
 5514              		.loc 1 1632 0
 5515 1ca2 7A4B     		ldr	r3, .L246+36
 5516 1ca4 5B88     		ldrh	r3, [r3, #2]	@ movhi
 5517 1ca6 9BB2     		uxth	r3, r3
 5518 1ca8 DAB2     		uxtb	r2, r3
 5519 1caa 704B     		ldr	r3, .L246+4
 5520 1cac 5A77     		strb	r2, [r3, #29]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 128


1633:main.c        ****             myArray[30] = 254;
 5521              		.loc 1 1633 0
 5522 1cae 6F4B     		ldr	r3, .L246+4
 5523 1cb0 FE22     		movs	r2, #254
 5524 1cb2 9A77     		strb	r2, [r3, #30]
1634:main.c        ****             myArray[31] = 253;
 5525              		.loc 1 1634 0
 5526 1cb4 6D4B     		ldr	r3, .L246+4
 5527 1cb6 FD22     		movs	r2, #253
 5528 1cb8 DA77     		strb	r2, [r3, #31]
1635:main.c        ****             
1636:main.c        ****             
1637:main.c        ****             sendKnobs = 0;
 5529              		.loc 1 1637 0
 5530 1cba 754B     		ldr	r3, .L246+40
 5531 1cbc 0022     		movs	r2, #0
 5532 1cbe 1A70     		strb	r2, [r3]
 5533 1cc0 6EE0     		b	.L192
 5534              	.L195:
1638:main.c        ****         }
1639:main.c        ****         else
1640:main.c        ****         {
1641:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 5535              		.loc 1 1641 0
 5536 1cc2 6A4B     		ldr	r3, .L246+4
 5537 1cc4 0122     		movs	r2, #1
 5538 1cc6 1A70     		strb	r2, [r3]
 5539              	.LBB33:
1642:main.c        ****             for (int i = 0; i < 12; i++)
 5540              		.loc 1 1642 0
 5541 1cc8 0023     		movs	r3, #0
 5542 1cca BB64     		str	r3, [r7, #72]
 5543 1ccc 24E0     		b	.L202
 5544              	.L203:
 5545              	.LBB34:
1643:main.c        ****             {
1644:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 5546              		.loc 1 1644 0 discriminator 3
 5547 1cce 714A     		ldr	r2, .L246+44
 5548 1cd0 BB6C     		ldr	r3, [r7, #72]
 5549 1cd2 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5550 1cd6 4FF08841 		mov	r1, #1140850688
 5551 1cda 1846     		mov	r0, r3
 5552 1cdc FFF7FEFF 		bl	__aeabi_fmul
 5553 1ce0 0346     		mov	r3, r0
 5554 1ce2 1846     		mov	r0, r3
 5555 1ce4 FFF7FEFF 		bl	roundf
 5556 1ce8 0346     		mov	r3, r0
 5557 1cea 1846     		mov	r0, r3
 5558 1cec FFF7FEFF 		bl	__aeabi_f2iz
 5559 1cf0 0346     		mov	r3, r0
 5560 1cf2 FB60     		str	r3, [r7, #12]
1645:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 5561              		.loc 1 1645 0 discriminator 3
 5562 1cf4 BB6C     		ldr	r3, [r7, #72]
 5563 1cf6 5B00     		lsls	r3, r3, #1
 5564 1cf8 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 129


 5565 1cfa FA68     		ldr	r2, [r7, #12]
 5566 1cfc 1212     		asrs	r2, r2, #8
 5567 1cfe D1B2     		uxtb	r1, r2
 5568 1d00 5A4A     		ldr	r2, .L246+4
 5569 1d02 D154     		strb	r1, [r2, r3]
1646:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 5570              		.loc 1 1646 0 discriminator 3
 5571 1d04 BB6C     		ldr	r3, [r7, #72]
 5572 1d06 0133     		adds	r3, r3, #1
 5573 1d08 5B00     		lsls	r3, r3, #1
 5574 1d0a FA68     		ldr	r2, [r7, #12]
 5575 1d0c D1B2     		uxtb	r1, r2
 5576 1d0e 574A     		ldr	r2, .L246+4
 5577 1d10 D154     		strb	r1, [r2, r3]
 5578              	.LBE34:
1642:main.c        ****             {
 5579              		.loc 1 1642 0 discriminator 3
 5580 1d12 BB6C     		ldr	r3, [r7, #72]
 5581 1d14 0133     		adds	r3, r3, #1
 5582 1d16 BB64     		str	r3, [r7, #72]
 5583              	.L202:
1642:main.c        ****             {
 5584              		.loc 1 1642 0 is_stmt 0 discriminator 1
 5585 1d18 BB6C     		ldr	r3, [r7, #72]
 5586 1d1a 0B2B     		cmp	r3, #11
 5587 1d1c D7DD     		ble	.L203
 5588              	.LBE33:
1647:main.c        ****             }
1648:main.c        ****             
1649:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5589              		.loc 1 1649 0 is_stmt 1
 5590 1d1e 554B     		ldr	r3, .L246+12
 5591 1d20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5592 1d22 1B01     		lsls	r3, r3, #4
 5593 1d24 5AB2     		sxtb	r2, r3
 5594 1d26 544B     		ldr	r3, .L246+16
 5595 1d28 1B68     		ldr	r3, [r3]
 5596 1d2a 5BB2     		sxtb	r3, r3
 5597 1d2c 1343     		orrs	r3, r3, r2
 5598 1d2e 5AB2     		sxtb	r2, r3
 5599 1d30 524B     		ldr	r3, .L246+20
 5600 1d32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5601 1d34 5B01     		lsls	r3, r3, #5
 5602 1d36 5BB2     		sxtb	r3, r3
 5603 1d38 1343     		orrs	r3, r3, r2
 5604 1d3a 5AB2     		sxtb	r2, r3
 5605 1d3c 504B     		ldr	r3, .L246+24
 5606 1d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5607 1d40 9B01     		lsls	r3, r3, #6
 5608 1d42 5BB2     		sxtb	r3, r3
 5609 1d44 1343     		orrs	r3, r3, r2
 5610 1d46 5BB2     		sxtb	r3, r3
 5611 1d48 DAB2     		uxtb	r2, r3
 5612 1d4a 484B     		ldr	r3, .L246+4
 5613 1d4c 1A76     		strb	r2, [r3, #24]
1650:main.c        ****             myArray[25] = patchNum;
 5614              		.loc 1 1650 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 130


 5615 1d4e 4D4B     		ldr	r3, .L246+28
 5616 1d50 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5617 1d52 464B     		ldr	r3, .L246+4
 5618 1d54 5A76     		strb	r2, [r3, #25]
1651:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5619              		.loc 1 1651 0
 5620 1d56 4C4B     		ldr	r3, .L246+32
 5621 1d58 B3F90030 		ldrsh	r3, [r3]
 5622 1d5c 1B12     		asrs	r3, r3, #8
 5623 1d5e 1BB2     		sxth	r3, r3
 5624 1d60 DAB2     		uxtb	r2, r3
 5625 1d62 424B     		ldr	r3, .L246+4
 5626 1d64 9A76     		strb	r2, [r3, #26]
1652:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5627              		.loc 1 1652 0
 5628 1d66 484B     		ldr	r3, .L246+32
 5629 1d68 B3F90030 		ldrsh	r3, [r3]
 5630 1d6c DAB2     		uxtb	r2, r3
 5631 1d6e 3F4B     		ldr	r3, .L246+4
 5632 1d70 DA76     		strb	r2, [r3, #27]
1653:main.c        ****             myArray[28] = bar[0] >> 8;
 5633              		.loc 1 1653 0
 5634 1d72 464B     		ldr	r3, .L246+36
 5635 1d74 1B88     		ldrh	r3, [r3]	@ movhi
 5636 1d76 9BB2     		uxth	r3, r3
 5637 1d78 1B0A     		lsrs	r3, r3, #8
 5638 1d7a 9BB2     		uxth	r3, r3
 5639 1d7c DAB2     		uxtb	r2, r3
 5640 1d7e 3B4B     		ldr	r3, .L246+4
 5641 1d80 1A77     		strb	r2, [r3, #28]
1654:main.c        ****             myArray[29] = bar[0] & 0xff;
 5642              		.loc 1 1654 0
 5643 1d82 424B     		ldr	r3, .L246+36
 5644 1d84 1B88     		ldrh	r3, [r3]	@ movhi
 5645 1d86 9BB2     		uxth	r3, r3
 5646 1d88 DAB2     		uxtb	r2, r3
 5647 1d8a 384B     		ldr	r3, .L246+4
 5648 1d8c 5A77     		strb	r2, [r3, #29]
1655:main.c        ****             myArray[30] = 254;
 5649              		.loc 1 1655 0
 5650 1d8e 374B     		ldr	r3, .L246+4
 5651 1d90 FE22     		movs	r2, #254
 5652 1d92 9A77     		strb	r2, [r3, #30]
1656:main.c        ****             myArray[31] = 253;
 5653              		.loc 1 1656 0
 5654 1d94 354B     		ldr	r3, .L246+4
 5655 1d96 FD22     		movs	r2, #253
 5656 1d98 DA77     		strb	r2, [r3, #31]
1657:main.c        ****             
1658:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 5657              		.loc 1 1658 0
 5658 1d9a 3D4B     		ldr	r3, .L246+40
 5659 1d9c 0122     		movs	r2, #1
 5660 1d9e 1A70     		strb	r2, [r3]
 5661              	.L192:
1659:main.c        ****             /*
1660:main.c        ****             for (int i = 0; i < 16; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 131


1661:main.c        ****             {
1662:main.c        ****                 myArray[i+56] = encoderVal[i];
1663:main.c        ****             }
1664:main.c        ****             */
1665:main.c        ****         }
1666:main.c        **** 
1667:main.c        ****         
1668:main.c        **** 
1669:main.c        **** /*
1670:main.c        ****         for(int i = 0; i < myBufferSize; i++)
1671:main.c        ****         {
1672:main.c        ****             SPIM_1_WriteTxData(myArray[i]);
1673:main.c        ****         }
1674:main.c        ****     */    
1675:main.c        ****         
1676:main.c        **** 
1677:main.c        ****        
1678:main.c        ****         
1679:main.c        ****         
1680:main.c        ****         //parse input from synth board (names)
1681:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 5662              		.loc 1 1681 0
 5663 1da0 3D4B     		ldr	r3, .L246+48
 5664 1da2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5665 1da4 FD2B     		cmp	r3, #253
 5666 1da6 7FD1     		bne	.L204
 5667              		.loc 1 1681 0 is_stmt 0 discriminator 1
 5668 1da8 3B4B     		ldr	r3, .L246+48
 5669 1daa DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5670 1dac FE2B     		cmp	r3, #254
 5671 1dae 7BD1     		bne	.L204
 5672              	.LBB35:
1682:main.c        ****         {
1683:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5673              		.loc 1 1683 0 is_stmt 1
 5674 1db0 394B     		ldr	r3, .L246+48
 5675 1db2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5676 1db4 BB60     		str	r3, [r7, #8]
1684:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 5677              		.loc 1 1684 0
 5678 1db6 384B     		ldr	r3, .L246+48
 5679 1db8 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5680 1dba 7B60     		str	r3, [r7, #4]
1685:main.c        ****             int bufferPointer = 2;
 5681              		.loc 1 1685 0
 5682 1dbc 0223     		movs	r3, #2
 5683 1dbe 7B64     		str	r3, [r7, #68]
 5684              	.LBB36:
1686:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5685              		.loc 1 1686 0
 5686 1dc0 0023     		movs	r3, #0
 5687 1dc2 3B64     		str	r3, [r7, #64]
 5688 1dc4 14E0     		b	.L205
 5689              	.L206:
1687:main.c        ****             {
1688:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 5690              		.loc 1 1688 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 132


 5691 1dc6 344A     		ldr	r2, .L246+48
 5692 1dc8 7B6C     		ldr	r3, [r7, #68]
 5693 1dca 1344     		add	r3, r3, r2
 5694 1dcc 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5695 1dce 3349     		ldr	r1, .L246+52
 5696 1dd0 BA68     		ldr	r2, [r7, #8]
 5697 1dd2 1346     		mov	r3, r2
 5698 1dd4 DB00     		lsls	r3, r3, #3
 5699 1dd6 9B1A     		subs	r3, r3, r2
 5700 1dd8 5B00     		lsls	r3, r3, #1
 5701 1dda CA18     		adds	r2, r1, r3
 5702 1ddc 3B6C     		ldr	r3, [r7, #64]
 5703 1dde 1344     		add	r3, r3, r2
 5704 1de0 0246     		mov	r2, r0
 5705 1de2 1A70     		strb	r2, [r3]
1689:main.c        ****                 bufferPointer++;
 5706              		.loc 1 1689 0 discriminator 3
 5707 1de4 7B6C     		ldr	r3, [r7, #68]
 5708 1de6 0133     		adds	r3, r3, #1
 5709 1de8 7B64     		str	r3, [r7, #68]
1686:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5710              		.loc 1 1686 0 discriminator 3
 5711 1dea 3B6C     		ldr	r3, [r7, #64]
 5712 1dec 0133     		adds	r3, r3, #1
 5713 1dee 3B64     		str	r3, [r7, #64]
 5714              	.L205:
1686:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5715              		.loc 1 1686 0 is_stmt 0 discriminator 1
 5716 1df0 3B6C     		ldr	r3, [r7, #64]
 5717 1df2 0D2B     		cmp	r3, #13
 5718 1df4 E7DD     		ble	.L206
 5719              	.LBE36:
1690:main.c        ****             }
1691:main.c        ****             bufferPointer = 17;
 5720              		.loc 1 1691 0 is_stmt 1
 5721 1df6 1123     		movs	r3, #17
 5722 1df8 7B64     		str	r3, [r7, #68]
 5723              	.LBB37:
1692:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5724              		.loc 1 1692 0
 5725 1dfa 0023     		movs	r3, #0
 5726 1dfc FB63     		str	r3, [r7, #60]
 5727 1dfe 1BE0     		b	.L207
 5728              	.L208:
1693:main.c        ****             {
1694:main.c        ****                 macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[buffer
 5729              		.loc 1 1694 0 discriminator 3
 5730 1e00 254A     		ldr	r2, .L246+48
 5731 1e02 7B6C     		ldr	r3, [r7, #68]
 5732 1e04 1344     		add	r3, r3, r2
 5733 1e06 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5734 1e08 2548     		ldr	r0, .L246+56
 5735 1e0a 7B68     		ldr	r3, [r7, #4]
 5736 1e0c B968     		ldr	r1, [r7, #8]
 5737 1e0e 1A46     		mov	r2, r3
 5738 1e10 D200     		lsls	r2, r2, #3
 5739 1e12 D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 133


 5740 1e14 5300     		lsls	r3, r2, #1
 5741 1e16 1A46     		mov	r2, r3
 5742 1e18 0B46     		mov	r3, r1
 5743 1e1a DB00     		lsls	r3, r3, #3
 5744 1e1c 5B1A     		subs	r3, r3, r1
 5745 1e1e 1B01     		lsls	r3, r3, #4
 5746 1e20 1344     		add	r3, r3, r2
 5747 1e22 C218     		adds	r2, r0, r3
 5748 1e24 FB6B     		ldr	r3, [r7, #60]
 5749 1e26 1344     		add	r3, r3, r2
 5750 1e28 2246     		mov	r2, r4
 5751 1e2a 1A70     		strb	r2, [r3]
1695:main.c        ****                 bufferPointer++;
 5752              		.loc 1 1695 0 discriminator 3
 5753 1e2c 7B6C     		ldr	r3, [r7, #68]
 5754 1e2e 0133     		adds	r3, r3, #1
 5755 1e30 7B64     		str	r3, [r7, #68]
1692:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5756              		.loc 1 1692 0 discriminator 3
 5757 1e32 FB6B     		ldr	r3, [r7, #60]
 5758 1e34 0133     		adds	r3, r3, #1
 5759 1e36 FB63     		str	r3, [r7, #60]
 5760              	.L207:
1692:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5761              		.loc 1 1692 0 is_stmt 0 discriminator 1
 5762 1e38 FB6B     		ldr	r3, [r7, #60]
 5763 1e3a 0D2B     		cmp	r3, #13
 5764 1e3c E0DD     		ble	.L208
 5765              	.LBE37:
1696:main.c        ****             }
1697:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 5766              		.loc 1 1697 0 is_stmt 1
 5767 1e3e 114B     		ldr	r3, .L246+28
 5768 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5769 1e42 1A46     		mov	r2, r3
 5770 1e44 BB68     		ldr	r3, [r7, #8]
 5771 1e46 9A42     		cmp	r2, r3
 5772 1e48 40F0B380 		bne	.L221
 5773              		.loc 1 1697 0 is_stmt 0 discriminator 1
 5774 1e4c 7B68     		ldr	r3, [r7, #4]
 5775 1e4e 072B     		cmp	r3, #7
 5776 1e50 40F0AF80 		bne	.L221
 5777              		.loc 1 1697 0 discriminator 2
 5778 1e54 134A     		ldr	r2, .L246+60
 5779 1e56 BB68     		ldr	r3, [r7, #8]
 5780 1e58 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5781 1e5c 002B     		cmp	r3, #0
 5782 1e5e 40F0A880 		bne	.L221
1698:main.c        ****             {
1699:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5783              		.loc 1 1699 0 is_stmt 1
 5784 1e62 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5785              	.LBE35:
1682:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5786              		.loc 1 1682 0
 5787 1e66 A4E0     		b	.L221
 5788              	.L247:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 134


 5789              		.align	2
 5790              	.L246:
 5791 1e68 00000000 		.word	knobs
 5792 1e6c 00000000 		.word	myArray
 5793 1e70 00000000 		.word	pedals8bit
 5794 1e74 00000000 		.word	voice
 5795 1e78 00000000 		.word	octave
 5796 1e7c 00000000 		.word	dualSlider
 5797 1e80 00000000 		.word	neck
 5798 1e84 00000000 		.word	patchNum
 5799 1e88 00000000 		.word	processed_volumePedal
 5800 1e8c 00000000 		.word	bar
 5801 1e90 00000000 		.word	sendKnobs
 5802 1e94 00000000 		.word	stringMIDI
 5803 1e98 00000000 		.word	inBuffer
 5804 1e9c 00000000 		.word	presetNamesArray
 5805 1ea0 00000000 		.word	macroNamesArray
 5806 1ea4 00000000 		.word	presetAlreadyDisplayed
 5807              	.L204:
1700:main.c        ****             }
1701:main.c        ****         }
1702:main.c        ****         else if ((inBuffer[0] == 252) && (inBuffer[31] == 254))
 5808              		.loc 1 1702 0
 5809 1ea8 4D4B     		ldr	r3, .L248
 5810 1eaa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5811 1eac FC2B     		cmp	r3, #252
 5812 1eae 40F08180 		bne	.L210
 5813              		.loc 1 1702 0 is_stmt 0 discriminator 1
 5814 1eb2 4B4B     		ldr	r3, .L248
 5815 1eb4 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5816 1eb6 FE2B     		cmp	r3, #254
 5817 1eb8 7CD1     		bne	.L210
1703:main.c        ****         {
1704:main.c        ****             //oop this means we're about to get new firmware. Reset to bootloader
1705:main.c        ****             SPIM_1_Stop();
 5818              		.loc 1 1705 0 is_stmt 1
 5819 1eba FFF7FEFF 		bl	SPIM_1_Stop
1706:main.c        ****             myGFX_setFont(0);
 5820              		.loc 1 1706 0
 5821 1ebe 0020     		movs	r0, #0
 5822 1ec0 FFF7FEFF 		bl	myGFX_setFont
1707:main.c        ****             OLEDwriteString("FIRMWARE   ", 11, 1, FirstLine);
 5823              		.loc 1 1707 0
 5824 1ec4 0023     		movs	r3, #0
 5825 1ec6 0122     		movs	r2, #1
 5826 1ec8 0B21     		movs	r1, #11
 5827 1eca 4648     		ldr	r0, .L248+4
 5828 1ecc FFF7FEFF 		bl	OLEDwriteString
1708:main.c        ****             OLEDwriteString("UPDATE     ", 11, 1, SecondLine);
 5829              		.loc 1 1708 0
 5830 1ed0 0123     		movs	r3, #1
 5831 1ed2 0122     		movs	r2, #1
 5832 1ed4 0B21     		movs	r1, #11
 5833 1ed6 4448     		ldr	r0, .L248+8
 5834 1ed8 FFF7FEFF 		bl	OLEDwriteString
1709:main.c        ****             OLEDwriteString("           ", 11, 1, ThirdLine);
 5835              		.loc 1 1709 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 135


 5836 1edc 0223     		movs	r3, #2
 5837 1ede 0122     		movs	r2, #1
 5838 1ee0 0B21     		movs	r1, #11
 5839 1ee2 4248     		ldr	r0, .L248+12
 5840 1ee4 FFF7FEFF 		bl	OLEDwriteString
1710:main.c        ****             OLEDwriteString("           ", 11, 1, FourthLine);
 5841              		.loc 1 1710 0
 5842 1ee8 0323     		movs	r3, #3
 5843 1eea 0122     		movs	r2, #1
 5844 1eec 0B21     		movs	r1, #11
 5845 1eee 3F48     		ldr	r0, .L248+12
 5846 1ef0 FFF7FEFF 		bl	OLEDwriteString
1711:main.c        ****             main_counter = 11;
 5847              		.loc 1 1711 0
 5848 1ef4 3E4B     		ldr	r3, .L248+16
 5849 1ef6 0B22     		movs	r2, #11
 5850 1ef8 1A70     		strb	r2, [r3]
1712:main.c        ****                    //set muxes to write to main OLED
1713:main.c        ****             if (mux_states[main_counter][0] != last_mux)
 5851              		.loc 1 1713 0
 5852 1efa 3D4B     		ldr	r3, .L248+16
 5853 1efc 1B78     		ldrb	r3, [r3]
 5854 1efe DBB2     		uxtb	r3, r3
 5855 1f00 1A46     		mov	r2, r3
 5856 1f02 3C4B     		ldr	r3, .L248+20
 5857 1f04 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 5858 1f08 3B4B     		ldr	r3, .L248+24
 5859 1f0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5860 1f0c 9A42     		cmp	r2, r3
 5861 1f0e 13D0     		beq	.L211
 5862              	.LBB38:
1714:main.c        ****             {
1715:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 5863              		.loc 1 1715 0
 5864 1f10 374B     		ldr	r3, .L248+16
 5865 1f12 1B78     		ldrb	r3, [r3]
 5866 1f14 DBB2     		uxtb	r3, r3
 5867 1f16 1A46     		mov	r2, r3
 5868 1f18 364B     		ldr	r3, .L248+20
 5869 1f1a 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 5870 1f1e 1A46     		mov	r2, r3
 5871 1f20 0123     		movs	r3, #1
 5872 1f22 9340     		lsls	r3, r3, r2
 5873 1f24 DAB2     		uxtb	r2, r3
 5874 1f26 354B     		ldr	r3, .L248+28
 5875 1f28 1A70     		strb	r2, [r3]
1716:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 5876              		.loc 1 1716 0
 5877 1f2a 0022     		movs	r2, #0
 5878 1f2c 0121     		movs	r1, #1
 5879 1f2e 7020     		movs	r0, #112
 5880 1f30 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 5881 1f34 0346     		mov	r3, r0
 5882 1f36 FB70     		strb	r3, [r7, #3]
 5883              	.L211:
 5884              	.LBE38:
1717:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 136


1718:main.c        ****             last_mux = mux_states[main_counter][0];
 5885              		.loc 1 1718 0
 5886 1f38 2D4B     		ldr	r3, .L248+16
 5887 1f3a 1B78     		ldrb	r3, [r3]
 5888 1f3c DBB2     		uxtb	r3, r3
 5889 1f3e 1A46     		mov	r2, r3
 5890 1f40 2C4B     		ldr	r3, .L248+20
 5891 1f42 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 5892 1f46 2C4B     		ldr	r3, .L248+24
 5893 1f48 1A70     		strb	r2, [r3]
1719:main.c        ****             
1720:main.c        ****             
1721:main.c        ****             CyDelayUs(10);
 5894              		.loc 1 1721 0
 5895 1f4a 0A20     		movs	r0, #10
 5896 1f4c FFF7FEFF 		bl	CyDelayUs
1722:main.c        ****             if (mux_states[main_counter][0] == 5)
 5897              		.loc 1 1722 0
 5898 1f50 274B     		ldr	r3, .L248+16
 5899 1f52 1B78     		ldrb	r3, [r3]
 5900 1f54 DBB2     		uxtb	r3, r3
 5901 1f56 1A46     		mov	r2, r3
 5902 1f58 264B     		ldr	r3, .L248+20
 5903 1f5a 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 5904 1f5e 052B     		cmp	r3, #5
 5905 1f60 1DD1     		bne	.L212
1723:main.c        ****             {
1724:main.c        ****                 if (!i2c_skipped[main_counter])
 5906              		.loc 1 1724 0
 5907 1f62 234B     		ldr	r3, .L248+16
 5908 1f64 1B78     		ldrb	r3, [r3]
 5909 1f66 DBB2     		uxtb	r3, r3
 5910 1f68 1A46     		mov	r2, r3
 5911 1f6a 254B     		ldr	r3, .L248+32
 5912 1f6c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 5913 1f6e 002B     		cmp	r3, #0
 5914 1f70 15D1     		bne	.L212
1725:main.c        ****                 {
1726:main.c        ****                     I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 5915              		.loc 1 1726 0
 5916 1f72 1F4B     		ldr	r3, .L248+16
 5917 1f74 1B78     		ldrb	r3, [r3]
 5918 1f76 DBB2     		uxtb	r3, r3
 5919 1f78 1E4A     		ldr	r2, .L248+20
 5920 1f7a 5B00     		lsls	r3, r3, #1
 5921 1f7c 1344     		add	r3, r3, r2
 5922 1f7e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5923 1f80 1A46     		mov	r2, r3
 5924 1f82 0123     		movs	r3, #1
 5925 1f84 9340     		lsls	r3, r3, r2
 5926 1f86 DAB2     		uxtb	r2, r3
 5927 1f88 1C4B     		ldr	r3, .L248+28
 5928 1f8a 1A70     		strb	r2, [r3]
1727:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 5929              		.loc 1 1727 0
 5930 1f8c 0022     		movs	r2, #0
 5931 1f8e 0121     		movs	r1, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 137


 5932 1f90 7120     		movs	r0, #113
 5933 1f92 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 5934 1f96 0346     		mov	r3, r0
 5935 1f98 1A46     		mov	r2, r3
 5936 1f9a 1A4B     		ldr	r3, .L248+36
 5937 1f9c 1A60     		str	r2, [r3]
 5938              	.L212:
1728:main.c        ****                 }
1729:main.c        ****             }
1730:main.c        **** 
1731:main.c        ****             CyDelayUs(10);
 5939              		.loc 1 1731 0
 5940 1f9e 0A20     		movs	r0, #10
 5941 1fa0 FFF7FEFF 		bl	CyDelayUs
1732:main.c        **** 
1733:main.c        ****             OLED_draw(128, 64);
 5942              		.loc 1 1733 0
 5943 1fa4 4021     		movs	r1, #64
 5944 1fa6 8020     		movs	r0, #128
 5945 1fa8 FFF7FEFF 		bl	OLED_draw
1734:main.c        ****             Bootloadable_Load();
 5946              		.loc 1 1734 0
 5947 1fac FFF7FEFF 		bl	Bootloadable_Load
 5948 1fb0 00E0     		b	.L210
 5949              	.L221:
1682:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5950              		.loc 1 1682 0
 5951 1fb2 00BF     		nop
 5952              	.L210:
1735:main.c        ****         }
1736:main.c        ****         
1737:main.c        ****         SPIM_1_ClearRxBuffer();
 5953              		.loc 1 1737 0
 5954 1fb4 FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1738:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 5955              		.loc 1 1738 0
 5956 1fb8 134B     		ldr	r3, .L248+40
 5957 1fba 1B78     		ldrb	r3, [r3]
 5958 1fbc DBB2     		uxtb	r3, r3
 5959 1fbe 0121     		movs	r1, #1
 5960 1fc0 1846     		mov	r0, r3
 5961 1fc2 FFF7FEFF 		bl	CyDmaChEnable
1739:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 5962              		.loc 1 1739 0
 5963 1fc6 114B     		ldr	r3, .L248+44
 5964 1fc8 1B78     		ldrb	r3, [r3]
 5965 1fca DBB2     		uxtb	r3, r3
 5966 1fcc 0121     		movs	r1, #1
 5967 1fce 1846     		mov	r0, r3
 5968 1fd0 FFF7FEFF 		bl	CyDmaChEnable
1740:main.c        ****         
1741:main.c        ****         testpin6_Write(0);
 5969              		.loc 1 1741 0
 5970 1fd4 0020     		movs	r0, #0
 5971 1fd6 FFF7FEFF 		bl	testpin6_Write
1742:main.c        ****        
1743:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 138


1744:main.c        ****      }
 5972              		.loc 1 1744 0
 5973 1fda FEF78EBA 		b	.L213
 5974              	.L249:
 5975 1fde 00BF     		.align	2
 5976              	.L248:
 5977 1fe0 00000000 		.word	inBuffer
 5978 1fe4 34040000 		.word	.LC5
 5979 1fe8 40040000 		.word	.LC6
 5980 1fec 4C040000 		.word	.LC7
 5981 1ff0 00000000 		.word	main_counter
 5982 1ff4 00000000 		.word	mux_states
 5983 1ff8 00000000 		.word	last_mux
 5984 1ffc 00000000 		.word	I2Cbuff1
 5985 2000 00000000 		.word	i2c_skipped
 5986 2004 00000000 		.word	status
 5987 2008 00000000 		.word	rx3Channel
 5988 200c 00000000 		.word	txChannel
 5989              		.cfi_endproc
 5990              	.LFE75:
 5991              		.size	main, .-main
 5992              		.section	.text.DmaTxConfiguration,"ax",%progbits
 5993              		.align	2
 5994              		.global	DmaTxConfiguration
 5995              		.thumb
 5996              		.thumb_func
 5997              		.type	DmaTxConfiguration, %function
 5998              	DmaTxConfiguration:
 5999              	.LFB76:
1745:main.c        **** }
1746:main.c        **** 
1747:main.c        **** void DmaTxConfiguration()
1748:main.c        **** {
 6000              		.loc 1 1748 0
 6001              		.cfi_startproc
 6002              		@ args = 0, pretend = 0, frame = 0
 6003              		@ frame_needed = 1, uses_anonymous_args = 0
 6004 0000 80B5     		push	{r7, lr}
 6005              		.cfi_def_cfa_offset 8
 6006              		.cfi_offset 7, -8
 6007              		.cfi_offset 14, -4
 6008 0002 00AF     		add	r7, sp, #0
 6009              		.cfi_def_cfa_register 7
1749:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1750:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 6010              		.loc 1 1750 0
 6011 0004 4FF48043 		mov	r3, #16384
 6012 0008 41F6FF72 		movw	r2, #8191
 6013 000c 0121     		movs	r1, #1
 6014 000e 0120     		movs	r0, #1
 6015 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 6016 0014 0346     		mov	r3, r0
 6017 0016 1A46     		mov	r2, r3
 6018 0018 124B     		ldr	r3, .L251
 6019 001a 1A70     		strb	r2, [r3]
1751:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1752:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 139


1753:main.c        ****     txTD = CyDmaTdAllocate();
 6020              		.loc 1 1753 0
 6021 001c FFF7FEFF 		bl	CyDmaTdAllocate
 6022 0020 0346     		mov	r3, r0
 6023 0022 1A46     		mov	r2, r3
 6024 0024 104B     		ldr	r3, .L251+4
 6025 0026 1A70     		strb	r2, [r3]
1754:main.c        **** 
1755:main.c        ****     /* Configure this Td as follows:
1756:main.c        ****     *  - Increment the source address, but not the destination address   
1757:main.c        ****     */
1758:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 6026              		.loc 1 1758 0
 6027 0028 0F4B     		ldr	r3, .L251+4
 6028 002a 1B78     		ldrb	r3, [r3]
 6029 002c D8B2     		uxtb	r0, r3
 6030 002e 0123     		movs	r3, #1
 6031 0030 FE22     		movs	r2, #254
 6032 0032 2021     		movs	r1, #32
 6033 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1759:main.c        **** 
1760:main.c        ****     /* From the memory to the SPIM */
1761:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 6034              		.loc 1 1761 0
 6035 0038 0B4B     		ldr	r3, .L251+4
 6036 003a 1B78     		ldrb	r3, [r3]
 6037 003c DBB2     		uxtb	r3, r3
 6038 003e 0B4A     		ldr	r2, .L251+8
 6039 0040 91B2     		uxth	r1, r2
 6040 0042 46F24242 		movw	r2, #25666
 6041 0046 1846     		mov	r0, r3
 6042 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1762:main.c        ****     
1763:main.c        ****     /* Associate the TD with the channel */
1764:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 6043              		.loc 1 1764 0
 6044 004c 054B     		ldr	r3, .L251
 6045 004e 1B78     		ldrb	r3, [r3]
 6046 0050 DAB2     		uxtb	r2, r3
 6047 0052 054B     		ldr	r3, .L251+4
 6048 0054 1B78     		ldrb	r3, [r3]
 6049 0056 DBB2     		uxtb	r3, r3
 6050 0058 1946     		mov	r1, r3
 6051 005a 1046     		mov	r0, r2
 6052 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1765:main.c        ****    
1766:main.c        **** } 
 6053              		.loc 1 1766 0
 6054 0060 00BF     		nop
 6055 0062 80BD     		pop	{r7, pc}
 6056              	.L252:
 6057              		.align	2
 6058              	.L251:
 6059 0064 00000000 		.word	txChannel
 6060 0068 00000000 		.word	txTD
 6061 006c 00000000 		.word	myArray
 6062              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 140


 6063              	.LFE76:
 6064              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 6065              		.section	.text.DmaRxConfiguration,"ax",%progbits
 6066              		.align	2
 6067              		.global	DmaRxConfiguration
 6068              		.thumb
 6069              		.thumb_func
 6070              		.type	DmaRxConfiguration, %function
 6071              	DmaRxConfiguration:
 6072              	.LFB77:
1767:main.c        **** 
1768:main.c        **** void DmaRxConfiguration()
1769:main.c        **** { 
 6073              		.loc 1 1769 0
 6074              		.cfi_startproc
 6075              		@ args = 0, pretend = 0, frame = 0
 6076              		@ frame_needed = 1, uses_anonymous_args = 0
 6077 0000 80B5     		push	{r7, lr}
 6078              		.cfi_def_cfa_offset 8
 6079              		.cfi_offset 7, -8
 6080              		.cfi_offset 14, -4
 6081 0002 00AF     		add	r7, sp, #0
 6082              		.cfi_def_cfa_register 7
1770:main.c        ****     //pluck dma
1771:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6083              		.loc 1 1771 0
 6084 0004 41F6FF73 		movw	r3, #8191
 6085 0008 4FF48042 		mov	r2, #16384
 6086 000c 0121     		movs	r1, #1
 6087 000e 0120     		movs	r0, #1
 6088 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 6089 0014 0346     		mov	r3, r0
 6090 0016 1A46     		mov	r2, r3
 6091 0018 4A4B     		ldr	r3, .L254
 6092 001a 1A70     		strb	r2, [r3]
1772:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1773:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 6093              		.loc 1 1773 0
 6094 001c FFF7FEFF 		bl	CyDmaTdAllocate
 6095 0020 0346     		mov	r3, r0
 6096 0022 1A46     		mov	r2, r3
 6097 0024 484B     		ldr	r3, .L254+4
 6098 0026 1A70     		strb	r2, [r3]
1774:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 6099              		.loc 1 1774 0
 6100 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 6101 002c 0346     		mov	r3, r0
 6102 002e 1A46     		mov	r2, r3
 6103 0030 454B     		ldr	r3, .L254+4
 6104 0032 5A70     		strb	r2, [r3, #1]
1775:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 6105              		.loc 1 1775 0
 6106 0034 444B     		ldr	r3, .L254+4
 6107 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6108 0038 0223     		movs	r3, #2
 6109 003a FE22     		movs	r2, #254
 6110 003c 1A21     		movs	r1, #26
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 141


 6111 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1776:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 6112              		.loc 1 1776 0
 6113 0042 414B     		ldr	r3, .L254+4
 6114 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6115 0046 0223     		movs	r3, #2
 6116 0048 FE22     		movs	r2, #254
 6117 004a 1A21     		movs	r1, #26
 6118 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1777:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 6119              		.loc 1 1777 0
 6120 0050 3D4B     		ldr	r3, .L254+4
 6121 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6122 0054 3D4A     		ldr	r2, .L254+8
 6123 0056 92B2     		uxth	r2, r2
 6124 0058 46F25B41 		movw	r1, #25691
 6125 005c 1846     		mov	r0, r3
 6126 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1778:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 6127              		.loc 1 1778 0
 6128 0062 394B     		ldr	r3, .L254+4
 6129 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6130 0066 3A4A     		ldr	r2, .L254+12
 6131 0068 92B2     		uxth	r2, r2
 6132 006a 46F25B41 		movw	r1, #25691
 6133 006e 1846     		mov	r0, r3
 6134 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1779:main.c        **** 
1780:main.c        ****     //bar dma
1781:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6135              		.loc 1 1781 0
 6136 0074 41F6FF73 		movw	r3, #8191
 6137 0078 4FF48042 		mov	r2, #16384
 6138 007c 0121     		movs	r1, #1
 6139 007e 0120     		movs	r0, #1
 6140 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 6141 0084 0346     		mov	r3, r0
 6142 0086 1A46     		mov	r2, r3
 6143 0088 324B     		ldr	r3, .L254+16
 6144 008a 1A70     		strb	r2, [r3]
1782:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1783:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 6145              		.loc 1 1783 0
 6146 008c FFF7FEFF 		bl	CyDmaTdAllocate
 6147 0090 0346     		mov	r3, r0
 6148 0092 1A46     		mov	r2, r3
 6149 0094 304B     		ldr	r3, .L254+20
 6150 0096 1A70     		strb	r2, [r3]
1784:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 6151              		.loc 1 1784 0
 6152 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 6153 009c 0346     		mov	r3, r0
 6154 009e 1A46     		mov	r2, r3
 6155 00a0 2D4B     		ldr	r3, .L254+20
 6156 00a2 5A70     		strb	r2, [r3, #1]
1785:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 6157              		.loc 1 1785 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 142


 6158 00a4 2C4B     		ldr	r3, .L254+20
 6159 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6160 00a8 0623     		movs	r3, #6
 6161 00aa FE22     		movs	r2, #254
 6162 00ac 0821     		movs	r1, #8
 6163 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1786:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 6164              		.loc 1 1786 0
 6165 00b2 294B     		ldr	r3, .L254+20
 6166 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6167 00b6 0623     		movs	r3, #6
 6168 00b8 FE22     		movs	r2, #254
 6169 00ba 0821     		movs	r1, #8
 6170 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1787:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 6171              		.loc 1 1787 0
 6172 00c0 254B     		ldr	r3, .L254+20
 6173 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6174 00c4 254A     		ldr	r2, .L254+24
 6175 00c6 92B2     		uxth	r2, r2
 6176 00c8 46F25751 		movw	r1, #25943
 6177 00cc 1846     		mov	r0, r3
 6178 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1788:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 6179              		.loc 1 1788 0
 6180 00d2 214B     		ldr	r3, .L254+20
 6181 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6182 00d6 224A     		ldr	r2, .L254+28
 6183 00d8 92B2     		uxth	r2, r2
 6184 00da 46F25751 		movw	r1, #25943
 6185 00de 1846     		mov	r0, r3
 6186 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1789:main.c        ****     
1790:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1791:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6187              		.loc 1 1791 0
 6188 00e4 41F6FF73 		movw	r3, #8191
 6189 00e8 4FF48042 		mov	r2, #16384
 6190 00ec 0121     		movs	r1, #1
 6191 00ee 0120     		movs	r0, #1
 6192 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 6193 00f4 0346     		mov	r3, r0
 6194 00f6 1A46     		mov	r2, r3
 6195 00f8 1A4B     		ldr	r3, .L254+32
 6196 00fa 1A70     		strb	r2, [r3]
1792:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1793:main.c        **** 
1794:main.c        ****     rx3TD = CyDmaTdAllocate();
 6197              		.loc 1 1794 0
 6198 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 6199 0100 0346     		mov	r3, r0
 6200 0102 1A46     		mov	r2, r3
 6201 0104 184B     		ldr	r3, .L254+36
 6202 0106 1A70     		strb	r2, [r3]
1795:main.c        ****     
1796:main.c        ****     /* Configure this Td as follows:
1797:main.c        ****     *  - Increment the destination address, but not the source address
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 143


1798:main.c        ****     */
1799:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 6203              		.loc 1 1799 0
 6204 0108 174B     		ldr	r3, .L254+36
 6205 010a 1B78     		ldrb	r3, [r3]
 6206 010c D8B2     		uxtb	r0, r3
 6207 010e 0223     		movs	r3, #2
 6208 0110 FE22     		movs	r2, #254
 6209 0112 2021     		movs	r1, #32
 6210 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1800:main.c        **** 
1801:main.c        ****     /* From the SPIM to the memory */
1802:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 6211              		.loc 1 1802 0
 6212 0118 134B     		ldr	r3, .L254+36
 6213 011a 1B78     		ldrb	r3, [r3]
 6214 011c DBB2     		uxtb	r3, r3
 6215 011e 134A     		ldr	r2, .L254+40
 6216 0120 92B2     		uxth	r2, r2
 6217 0122 46F25241 		movw	r1, #25682
 6218 0126 1846     		mov	r0, r3
 6219 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1803:main.c        **** 
1804:main.c        ****     /* Associate the TD with the channel */
1805:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 6220              		.loc 1 1805 0
 6221 012c 0D4B     		ldr	r3, .L254+32
 6222 012e 1B78     		ldrb	r3, [r3]
 6223 0130 DAB2     		uxtb	r2, r3
 6224 0132 0D4B     		ldr	r3, .L254+36
 6225 0134 1B78     		ldrb	r3, [r3]
 6226 0136 DBB2     		uxtb	r3, r3
 6227 0138 1946     		mov	r1, r3
 6228 013a 1046     		mov	r0, r2
 6229 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1806:main.c        **** }
 6230              		.loc 1 1806 0
 6231 0140 00BF     		nop
 6232 0142 80BD     		pop	{r7, pc}
 6233              	.L255:
 6234              		.align	2
 6235              	.L254:
 6236 0144 00000000 		.word	rx1Channel
 6237 0148 00000000 		.word	rx1TD
 6238 014c 00000000 		.word	rxBufferPluck
 6239 0150 1A000000 		.word	rxBufferPluck+26
 6240 0154 00000000 		.word	rx2Channel
 6241 0158 00000000 		.word	rx2TD
 6242 015c 00000000 		.word	rxBufferBar
 6243 0160 08000000 		.word	rxBufferBar+8
 6244 0164 00000000 		.word	rx3Channel
 6245 0168 00000000 		.word	rx3TD
 6246 016c 00000000 		.word	inBuffer
 6247              		.cfi_endproc
 6248              	.LFE77:
 6249              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 6250              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 144


 6251              		.align	2
 6252              		.global	I2C_MasterWriteBlocking
 6253              		.thumb
 6254              		.thumb_func
 6255              		.type	I2C_MasterWriteBlocking, %function
 6256              	I2C_MasterWriteBlocking:
 6257              	.LFB78:
1807:main.c        **** 
1808:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1809:main.c        **** {
 6258              		.loc 1 1809 0
 6259              		.cfi_startproc
 6260              		@ args = 0, pretend = 0, frame = 24
 6261              		@ frame_needed = 1, uses_anonymous_args = 0
 6262 0000 80B5     		push	{r7, lr}
 6263              		.cfi_def_cfa_offset 8
 6264              		.cfi_offset 7, -8
 6265              		.cfi_offset 14, -4
 6266 0002 86B0     		sub	sp, sp, #24
 6267              		.cfi_def_cfa_offset 32
 6268 0004 00AF     		add	r7, sp, #0
 6269              		.cfi_def_cfa_register 7
 6270 0006 0346     		mov	r3, r0
 6271 0008 FB71     		strb	r3, [r7, #7]
 6272 000a 0B46     		mov	r3, r1	@ movhi
 6273 000c BB80     		strh	r3, [r7, #4]	@ movhi
 6274 000e 1346     		mov	r3, r2
 6275 0010 BB71     		strb	r3, [r7, #6]
1810:main.c        ****     uint8 volatile status;
1811:main.c        ****     uint8_t error = 0;
 6276              		.loc 1 1811 0
 6277 0012 0023     		movs	r3, #0
 6278 0014 FB75     		strb	r3, [r7, #23]
1812:main.c        ****     uint32_t timeout = 50000;
 6279              		.loc 1 1812 0
 6280 0016 4CF25033 		movw	r3, #50000
 6281 001a 3B61     		str	r3, [r7, #16]
1813:main.c        ****     status = I2C_1_MasterClearStatus();
 6282              		.loc 1 1813 0
 6283 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6284 0020 0346     		mov	r3, r0
 6285 0022 FB73     		strb	r3, [r7, #15]
1814:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6286              		.loc 1 1814 0
 6287 0024 FB7B     		ldrb	r3, [r7, #15]
 6288 0026 DBB2     		uxtb	r3, r3
 6289 0028 5BB2     		sxtb	r3, r3
 6290 002a 002B     		cmp	r3, #0
 6291 002c 42DB     		blt	.L257
1815:main.c        ****     {
1816:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 6292              		.loc 1 1816 0
 6293 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 6294 0030 DAB2     		uxtb	r2, r3
 6295 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6296 0034 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6297 0036 2949     		ldr	r1, .L266
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 145


 6298 0038 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 6299 003c 0346     		mov	r3, r0
 6300 003e FB73     		strb	r3, [r7, #15]
1817:main.c        ****                                      mode);
1818:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6301              		.loc 1 1818 0
 6302 0040 FB7B     		ldrb	r3, [r7, #15]
 6303 0042 DBB2     		uxtb	r3, r3
 6304 0044 002B     		cmp	r3, #0
 6305 0046 2FD1     		bne	.L258
 6306              	.L262:
1819:main.c        ****         {
1820:main.c        ****             /* wait for write complete and no error */
1821:main.c        ****             do
1822:main.c        ****             {
1823:main.c        ****                 status = I2C_1_MasterStatus();
 6307              		.loc 1 1823 0
 6308 0048 FFF7FEFF 		bl	I2C_1_MasterStatus
 6309 004c 0346     		mov	r3, r0
 6310 004e FB73     		strb	r3, [r7, #15]
1824:main.c        ****                 timeout--;
 6311              		.loc 1 1824 0
 6312 0050 3B69     		ldr	r3, [r7, #16]
 6313 0052 013B     		subs	r3, r3, #1
 6314 0054 3B61     		str	r3, [r7, #16]
1825:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6315              		.loc 1 1825 0
 6316 0056 FB7B     		ldrb	r3, [r7, #15]
 6317 0058 DBB2     		uxtb	r3, r3
 6318 005a 802B     		cmp	r3, #128
 6319 005c 03D1     		bne	.L259
1826:main.c        ****                 {
1827:main.c        ****                     I2C_reset();
 6320              		.loc 1 1827 0
 6321 005e FFF7FEFF 		bl	I2C_reset
1828:main.c        ****                     error = 1;
 6322              		.loc 1 1828 0
 6323 0062 0123     		movs	r3, #1
 6324 0064 FB75     		strb	r3, [r7, #23]
 6325              	.L259:
1829:main.c        ****                 }
1830:main.c        ****                 if (timeout == 0)
 6326              		.loc 1 1830 0
 6327 0066 3B69     		ldr	r3, [r7, #16]
 6328 0068 002B     		cmp	r3, #0
 6329 006a 05D1     		bne	.L260
1831:main.c        ****                 {
1832:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6330              		.loc 1 1832 0
 6331 006c 8023     		movs	r3, #128
 6332 006e FB73     		strb	r3, [r7, #15]
1833:main.c        ****                     I2C_reset();
 6333              		.loc 1 1833 0
 6334 0070 FFF7FEFF 		bl	I2C_reset
1834:main.c        ****                     error = 1;
 6335              		.loc 1 1834 0
 6336 0074 0123     		movs	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 146


 6337 0076 FB75     		strb	r3, [r7, #23]
 6338              	.L260:
1835:main.c        ****                 }
1836:main.c        ****                 
1837:main.c        ****                 if (status == 0)
 6339              		.loc 1 1837 0
 6340 0078 FB7B     		ldrb	r3, [r7, #15]
 6341 007a DBB2     		uxtb	r3, r3
 6342 007c 002B     		cmp	r3, #0
 6343 007e 05D1     		bne	.L261
1838:main.c        ****                 {
1839:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6344              		.loc 1 1839 0
 6345 0080 8023     		movs	r3, #128
 6346 0082 FB73     		strb	r3, [r7, #15]
1840:main.c        ****                     I2C_reset();
 6347              		.loc 1 1840 0
 6348 0084 FFF7FEFF 		bl	I2C_reset
1841:main.c        ****                     error = 1;
 6349              		.loc 1 1841 0
 6350 0088 0123     		movs	r3, #1
 6351 008a FB75     		strb	r3, [r7, #23]
 6352              	.L261:
1842:main.c        ****                 }
1843:main.c        ****                 
1844:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6353              		.loc 1 1844 0
 6354 008c FB7B     		ldrb	r3, [r7, #15]
 6355 008e DBB2     		uxtb	r3, r3
 6356 0090 03F08203 		and	r3, r3, #130
 6357 0094 002B     		cmp	r3, #0
 6358 0096 0DD1     		bne	.L257
 6359              		.loc 1 1844 0 is_stmt 0 discriminator 1
 6360 0098 FB7B     		ldrb	r3, [r7, #15]
 6361 009a DBB2     		uxtb	r3, r3
 6362 009c 002B     		cmp	r3, #0
 6363 009e 09D0     		beq	.L257
 6364              		.loc 1 1844 0 discriminator 2
 6365 00a0 3B69     		ldr	r3, [r7, #16]
 6366 00a2 002B     		cmp	r3, #0
 6367 00a4 D0D1     		bne	.L262
 6368 00a6 05E0     		b	.L257
 6369              	.L258:
1845:main.c        ****         }
1846:main.c        ****         else
1847:main.c        ****         {
1848:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1849:main.c        ****             *  I2CM_MasterStatus() error output */
1850:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6370              		.loc 1 1850 0 is_stmt 1
 6371 00a8 8023     		movs	r3, #128
 6372 00aa FB73     		strb	r3, [r7, #15]
1851:main.c        ****             I2C_reset();
 6373              		.loc 1 1851 0
 6374 00ac FFF7FEFF 		bl	I2C_reset
1852:main.c        ****             error = 1;
 6375              		.loc 1 1852 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 147


 6376 00b0 0123     		movs	r3, #1
 6377 00b2 FB75     		strb	r3, [r7, #23]
 6378              	.L257:
1853:main.c        ****         } 
1854:main.c        ****     }  
1855:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6379              		.loc 1 1855 0
 6380 00b4 FB7B     		ldrb	r3, [r7, #15]
 6381 00b6 DBB2     		uxtb	r3, r3
 6382 00b8 03F02003 		and	r3, r3, #32
 6383 00bc 002B     		cmp	r3, #0
 6384 00be 04D1     		bne	.L263
 6385              		.loc 1 1855 0 is_stmt 0 discriminator 1
 6386 00c0 FB7B     		ldrb	r3, [r7, #15]
 6387 00c2 DBB2     		uxtb	r3, r3
 6388 00c4 5BB2     		sxtb	r3, r3
 6389 00c6 002B     		cmp	r3, #0
 6390 00c8 03DA     		bge	.L264
 6391              	.L263:
1856:main.c        ****     {
1857:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1858:main.c        ****         //i2c_skipped[main_counter] = 1;
1859:main.c        ****         I2C_reset();
 6392              		.loc 1 1859 0 is_stmt 1
 6393 00ca FFF7FEFF 		bl	I2C_reset
1860:main.c        ****         error = 1;
 6394              		.loc 1 1860 0
 6395 00ce 0123     		movs	r3, #1
 6396 00d0 FB75     		strb	r3, [r7, #23]
 6397              	.L264:
1861:main.c        ****     }
1862:main.c        ****     return error;
 6398              		.loc 1 1862 0
 6399 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1863:main.c        **** }
 6400              		.loc 1 1863 0
 6401 00d4 1846     		mov	r0, r3
 6402 00d6 1837     		adds	r7, r7, #24
 6403              		.cfi_def_cfa_offset 8
 6404 00d8 BD46     		mov	sp, r7
 6405              		.cfi_def_cfa_register 13
 6406              		@ sp needed
 6407 00da 80BD     		pop	{r7, pc}
 6408              	.L267:
 6409              		.align	2
 6410              	.L266:
 6411 00dc 00000000 		.word	I2Cbuff1
 6412              		.cfi_endproc
 6413              	.LFE78:
 6414              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 6415              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 6416              		.align	2
 6417              		.global	I2C_MasterReadBlocking
 6418              		.thumb
 6419              		.thumb_func
 6420              		.type	I2C_MasterReadBlocking, %function
 6421              	I2C_MasterReadBlocking:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 148


 6422              	.LFB79:
1864:main.c        **** 
1865:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1866:main.c        **** {
 6423              		.loc 1 1866 0
 6424              		.cfi_startproc
 6425              		@ args = 0, pretend = 0, frame = 16
 6426              		@ frame_needed = 1, uses_anonymous_args = 0
 6427 0000 80B5     		push	{r7, lr}
 6428              		.cfi_def_cfa_offset 8
 6429              		.cfi_offset 7, -8
 6430              		.cfi_offset 14, -4
 6431 0002 84B0     		sub	sp, sp, #16
 6432              		.cfi_def_cfa_offset 24
 6433 0004 00AF     		add	r7, sp, #0
 6434              		.cfi_def_cfa_register 7
 6435 0006 0346     		mov	r3, r0
 6436 0008 FB71     		strb	r3, [r7, #7]
 6437 000a 0B46     		mov	r3, r1
 6438 000c BB71     		strb	r3, [r7, #6]
 6439 000e 1346     		mov	r3, r2
 6440 0010 7B71     		strb	r3, [r7, #5]
1867:main.c        ****     uint8 volatile status;
1868:main.c        ****     uint32_t timeout = 50000;
 6441              		.loc 1 1868 0
 6442 0012 4CF25033 		movw	r3, #50000
 6443 0016 FB60     		str	r3, [r7, #12]
1869:main.c        ****     uint8_t error = 0;
 6444              		.loc 1 1869 0
 6445 0018 0023     		movs	r3, #0
 6446 001a FB72     		strb	r3, [r7, #11]
1870:main.c        ****     status = I2C_1_MasterClearStatus();
 6447              		.loc 1 1870 0
 6448 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6449 0020 0346     		mov	r3, r0
 6450 0022 BB72     		strb	r3, [r7, #10]
1871:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6451              		.loc 1 1871 0
 6452 0024 BB7A     		ldrb	r3, [r7, #10]
 6453 0026 DBB2     		uxtb	r3, r3
 6454 0028 5BB2     		sxtb	r3, r3
 6455 002a 002B     		cmp	r3, #0
 6456 002c 3DDB     		blt	.L269
1872:main.c        ****     {
1873:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 6457              		.loc 1 1873 0
 6458 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6459 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 6460 0032 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6461 0034 2749     		ldr	r1, .L277
 6462 0036 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 6463 003a 0346     		mov	r3, r0
 6464 003c BB72     		strb	r3, [r7, #10]
1874:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1875:main.c        ****                                     nbytes, mode); 
1876:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6465              		.loc 1 1876 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 149


 6466 003e BB7A     		ldrb	r3, [r7, #10]
 6467 0040 DBB2     		uxtb	r3, r3
 6468 0042 002B     		cmp	r3, #0
 6469 0044 2BD1     		bne	.L270
 6470              	.L273:
1877:main.c        ****         {
1878:main.c        ****             /* wait for read complete and no error */
1879:main.c        ****             do
1880:main.c        ****             {
1881:main.c        ****                 status = I2C_1_MasterStatus();
 6471              		.loc 1 1881 0
 6472 0046 FFF7FEFF 		bl	I2C_1_MasterStatus
 6473 004a 0346     		mov	r3, r0
 6474 004c BB72     		strb	r3, [r7, #10]
1882:main.c        ****                 timeout--;
 6475              		.loc 1 1882 0
 6476 004e FB68     		ldr	r3, [r7, #12]
 6477 0050 013B     		subs	r3, r3, #1
 6478 0052 FB60     		str	r3, [r7, #12]
1883:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6479              		.loc 1 1883 0
 6480 0054 BB7A     		ldrb	r3, [r7, #10]
 6481 0056 DBB2     		uxtb	r3, r3
 6482 0058 802B     		cmp	r3, #128
 6483 005a 09D1     		bne	.L271
1884:main.c        ****                 {
1885:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 6484              		.loc 1 1885 0
 6485 005c 1E4B     		ldr	r3, .L277+4
 6486 005e 1022     		movs	r2, #16
 6487 0060 1A70     		strb	r2, [r3]
 6488 0062 1E4B     		ldr	r3, .L277+8
 6489 0064 0422     		movs	r2, #4
 6490 0066 1A70     		strb	r2, [r3]
1886:main.c        ****                     I2C_reset();
 6491              		.loc 1 1886 0
 6492 0068 FFF7FEFF 		bl	I2C_reset
1887:main.c        ****                     error = 1;
 6493              		.loc 1 1887 0
 6494 006c 0123     		movs	r3, #1
 6495 006e FB72     		strb	r3, [r7, #11]
 6496              	.L271:
1888:main.c        ****                 }
1889:main.c        ****                 if (timeout == 0)
 6497              		.loc 1 1889 0
 6498 0070 FB68     		ldr	r3, [r7, #12]
 6499 0072 002B     		cmp	r3, #0
 6500 0074 05D1     		bne	.L272
1890:main.c        ****                 {
1891:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6501              		.loc 1 1891 0
 6502 0076 8023     		movs	r3, #128
 6503 0078 BB72     		strb	r3, [r7, #10]
1892:main.c        ****                     I2C_reset();
 6504              		.loc 1 1892 0
 6505 007a FFF7FEFF 		bl	I2C_reset
1893:main.c        ****                     error = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 150


 6506              		.loc 1 1893 0
 6507 007e 0123     		movs	r3, #1
 6508 0080 FB72     		strb	r3, [r7, #11]
 6509              	.L272:
1894:main.c        ****                 }
1895:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6510              		.loc 1 1895 0
 6511 0082 BB7A     		ldrb	r3, [r7, #10]
 6512 0084 DBB2     		uxtb	r3, r3
 6513 0086 03F08103 		and	r3, r3, #129
 6514 008a 002B     		cmp	r3, #0
 6515 008c 0DD1     		bne	.L269
 6516              		.loc 1 1895 0 is_stmt 0 discriminator 1
 6517 008e BB7A     		ldrb	r3, [r7, #10]
 6518 0090 DBB2     		uxtb	r3, r3
 6519 0092 002B     		cmp	r3, #0
 6520 0094 09D0     		beq	.L269
 6521              		.loc 1 1895 0 discriminator 2
 6522 0096 FB68     		ldr	r3, [r7, #12]
 6523 0098 002B     		cmp	r3, #0
 6524 009a D4D1     		bne	.L273
 6525 009c 05E0     		b	.L269
 6526              	.L270:
1896:main.c        ****         }
1897:main.c        ****         else
1898:main.c        ****         {
1899:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1900:main.c        ****             *  I2CM_MasterStatus() error output */
1901:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6527              		.loc 1 1901 0 is_stmt 1
 6528 009e 8023     		movs	r3, #128
 6529 00a0 BB72     		strb	r3, [r7, #10]
1902:main.c        ****             I2C_reset();
 6530              		.loc 1 1902 0
 6531 00a2 FFF7FEFF 		bl	I2C_reset
1903:main.c        ****             error = 1;
 6532              		.loc 1 1903 0
 6533 00a6 0123     		movs	r3, #1
 6534 00a8 FB72     		strb	r3, [r7, #11]
 6535              	.L269:
1904:main.c        ****         }
1905:main.c        ****     }
1906:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6536              		.loc 1 1906 0
 6537 00aa BB7A     		ldrb	r3, [r7, #10]
 6538 00ac DBB2     		uxtb	r3, r3
 6539 00ae 03F02003 		and	r3, r3, #32
 6540 00b2 002B     		cmp	r3, #0
 6541 00b4 04D1     		bne	.L274
 6542              		.loc 1 1906 0 is_stmt 0 discriminator 1
 6543 00b6 BB7A     		ldrb	r3, [r7, #10]
 6544 00b8 DBB2     		uxtb	r3, r3
 6545 00ba 5BB2     		sxtb	r3, r3
 6546 00bc 002B     		cmp	r3, #0
 6547 00be 03DA     		bge	.L275
 6548              	.L274:
1907:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 151


1908:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1909:main.c        ****         //i2c_skipped[main_counter] = 1;
1910:main.c        ****         I2C_reset();
 6549              		.loc 1 1910 0 is_stmt 1
 6550 00c0 FFF7FEFF 		bl	I2C_reset
1911:main.c        ****         error = 1;
 6551              		.loc 1 1911 0
 6552 00c4 0123     		movs	r3, #1
 6553 00c6 FB72     		strb	r3, [r7, #11]
 6554              	.L275:
1912:main.c        ****     }
1913:main.c        ****     return error;
 6555              		.loc 1 1913 0
 6556 00c8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1914:main.c        **** }
 6557              		.loc 1 1914 0
 6558 00ca 1846     		mov	r0, r3
 6559 00cc 1037     		adds	r7, r7, #16
 6560              		.cfi_def_cfa_offset 8
 6561 00ce BD46     		mov	sp, r7
 6562              		.cfi_def_cfa_register 13
 6563              		@ sp needed
 6564 00d0 80BD     		pop	{r7, pc}
 6565              	.L278:
 6566 00d2 00BF     		.align	2
 6567              	.L277:
 6568 00d4 00000000 		.word	I2Cbuff2
 6569 00d8 D9490040 		.word	1073760729
 6570 00dc D7490040 		.word	1073760727
 6571              		.cfi_endproc
 6572              	.LFE79:
 6573              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 6574              		.section	.text.I2C_reset,"ax",%progbits
 6575              		.align	2
 6576              		.global	I2C_reset
 6577              		.thumb
 6578              		.thumb_func
 6579              		.type	I2C_reset, %function
 6580              	I2C_reset:
 6581              	.LFB80:
1915:main.c        **** 
1916:main.c        **** void I2C_reset(void)
1917:main.c        **** {
 6582              		.loc 1 1917 0
 6583              		.cfi_startproc
 6584              		@ args = 0, pretend = 0, frame = 0
 6585              		@ frame_needed = 1, uses_anonymous_args = 0
 6586 0000 80B5     		push	{r7, lr}
 6587              		.cfi_def_cfa_offset 8
 6588              		.cfi_offset 7, -8
 6589              		.cfi_offset 14, -4
 6590 0002 00AF     		add	r7, sp, #0
 6591              		.cfi_def_cfa_register 7
1918:main.c        ****   I2C_1_Stop();
 6592              		.loc 1 1918 0
 6593 0004 FFF7FEFF 		bl	I2C_1_Stop
1919:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 152


1920:main.c        ****   /* Disable/clear everything, then reinitialize. */
1921:main.c        **** 
1922:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 6594              		.loc 1 1922 0
 6595 0008 064B     		ldr	r3, .L280
 6596 000a 0022     		movs	r2, #0
 6597 000c 1A70     		strb	r2, [r3]
1923:main.c        **** 
1924:main.c        ****   I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
 6598              		.loc 1 1924 0
 6599 000e 064B     		ldr	r3, .L280+4
 6600 0010 0022     		movs	r2, #0
 6601 0012 1A70     		strb	r2, [r3]
1925:main.c        **** 
1926:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 6602              		.loc 1 1926 0
 6603 0014 054B     		ldr	r3, .L280+8
 6604 0016 0022     		movs	r2, #0
 6605 0018 1A70     		strb	r2, [r3]
1927:main.c        **** 
1928:main.c        ****   I2C_1_Start();
 6606              		.loc 1 1928 0
 6607 001a FFF7FEFF 		bl	I2C_1_Start
1929:main.c        **** }
 6608              		.loc 1 1929 0
 6609 001e 00BF     		nop
 6610 0020 80BD     		pop	{r7, pc}
 6611              	.L281:
 6612 0022 00BF     		.align	2
 6613              	.L280:
 6614 0024 D6490040 		.word	1073760726
 6615 0028 C8490040 		.word	1073760712
 6616 002c 00000000 		.word	I2C_1_initVar
 6617              		.cfi_endproc
 6618              	.LFE80:
 6619              		.size	I2C_reset, .-I2C_reset
 6620              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 6621              		.align	2
 6622              		.global	displayCurrentPresetNameAndCopedent
 6623              		.thumb
 6624              		.thumb_func
 6625              		.type	displayCurrentPresetNameAndCopedent, %function
 6626              	displayCurrentPresetNameAndCopedent:
 6627              	.LFB81:
1930:main.c        **** 
1931:main.c        **** void displayCurrentPresetNameAndCopedent()
1932:main.c        **** {
 6628              		.loc 1 1932 0
 6629              		.cfi_startproc
 6630              		@ args = 0, pretend = 0, frame = 0
 6631              		@ frame_needed = 1, uses_anonymous_args = 0
 6632 0000 98B5     		push	{r3, r4, r7, lr}
 6633              		.cfi_def_cfa_offset 16
 6634              		.cfi_offset 3, -16
 6635              		.cfi_offset 4, -12
 6636              		.cfi_offset 7, -8
 6637              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 153


 6638 0002 00AF     		add	r7, sp, #0
 6639              		.cfi_def_cfa_register 7
1933:main.c        ****     if (macroNamesArray[patchNum][7][0] != 255) //don't display if the name data still hasn't been 
 6640              		.loc 1 1933 0
 6641 0004 2E4B     		ldr	r3, .L285
 6642 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6643 0008 1946     		mov	r1, r3
 6644 000a 2E4A     		ldr	r2, .L285+4
 6645 000c 0B46     		mov	r3, r1
 6646 000e DB00     		lsls	r3, r3, #3
 6647 0010 5B1A     		subs	r3, r3, r1
 6648 0012 1B01     		lsls	r3, r3, #4
 6649 0014 1344     		add	r3, r3, r2
 6650 0016 6233     		adds	r3, r3, #98
 6651 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6652 001a FF2B     		cmp	r3, #255
 6653 001c 4DD0     		beq	.L284
1934:main.c        ****     {
1935:main.c        ****         OLEDclear(128, 64);
 6654              		.loc 1 1935 0
 6655 001e 4021     		movs	r1, #64
 6656 0020 8020     		movs	r0, #128
 6657 0022 FFF7FEFF 		bl	OLEDclear
1936:main.c        ****         
1937:main.c        ****         myGFX_setFont(0);
 6658              		.loc 1 1937 0
 6659 0026 0020     		movs	r0, #0
 6660 0028 FFF7FEFF 		bl	myGFX_setFont
1938:main.c        ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 6661              		.loc 1 1938 0
 6662 002c 244B     		ldr	r3, .L285
 6663 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6664 0030 1846     		mov	r0, r3
 6665 0032 0023     		movs	r3, #0
 6666 0034 0022     		movs	r2, #0
 6667 0036 0221     		movs	r1, #2
 6668 0038 FFF7FEFF 		bl	OLEDwriteInt
1939:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1940:main.c        ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], NAME_CLIPPED_LENGTH, 0, SecondLine)
 6669              		.loc 1 1940 0
 6670 003c 204B     		ldr	r3, .L285
 6671 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6672 0040 1A46     		mov	r2, r3
 6673 0042 1346     		mov	r3, r2
 6674 0044 DB00     		lsls	r3, r3, #3
 6675 0046 9B1A     		subs	r3, r3, r2
 6676 0048 5B00     		lsls	r3, r3, #1
 6677 004a 1F4A     		ldr	r2, .L285+8
 6678 004c 9818     		adds	r0, r3, r2
 6679 004e 0123     		movs	r3, #1
 6680 0050 0022     		movs	r2, #0
 6681 0052 0B21     		movs	r1, #11
 6682 0054 FFF7FEFF 		bl	OLEDwriteString
1941:main.c        ****         OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 6683              		.loc 1 1941 0
 6684 0058 1C4B     		ldr	r3, .L285+12
 6685 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 154


 6686 005c 1846     		mov	r0, r3
 6687 005e 0323     		movs	r3, #3
 6688 0060 0022     		movs	r2, #0
 6689 0062 0221     		movs	r1, #2
 6690 0064 FFF7FEFF 		bl	OLEDwriteInt
1942:main.c        ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 6691              		.loc 1 1942 0
 6692 0068 FFF7FEFF 		bl	OLEDgetCursor
 6693 006c 0246     		mov	r2, r0
 6694 006e 0323     		movs	r3, #3
 6695 0070 0121     		movs	r1, #1
 6696 0072 1748     		ldr	r0, .L285+16
 6697 0074 FFF7FEFF 		bl	OLEDwriteString
1943:main.c        ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 6698              		.loc 1 1943 0
 6699 0078 144B     		ldr	r3, .L285+12
 6700 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6701 007c 1A46     		mov	r2, r3
 6702 007e 1346     		mov	r3, r2
 6703 0080 DB00     		lsls	r3, r3, #3
 6704 0082 9B1A     		subs	r3, r3, r2
 6705 0084 5B00     		lsls	r3, r3, #1
 6706 0086 134A     		ldr	r2, .L285+20
 6707 0088 9C18     		adds	r4, r3, r2
 6708 008a FFF7FEFF 		bl	OLEDgetCursor
 6709 008e 0246     		mov	r2, r0
 6710 0090 0323     		movs	r3, #3
 6711 0092 0821     		movs	r1, #8
 6712 0094 2046     		mov	r0, r4
 6713 0096 FFF7FEFF 		bl	OLEDwriteString
1944:main.c        ****         mainOLEDWaitingToSend = 1;
 6714              		.loc 1 1944 0
 6715 009a 0F4B     		ldr	r3, .L285+24
 6716 009c 0122     		movs	r2, #1
 6717 009e 1A60     		str	r2, [r3]
1945:main.c        ****         presetAlreadyDisplayed[patchNum] = 1;
 6718              		.loc 1 1945 0
 6719 00a0 074B     		ldr	r3, .L285
 6720 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6721 00a4 1946     		mov	r1, r3
 6722 00a6 0D4B     		ldr	r3, .L285+28
 6723 00a8 0122     		movs	r2, #1
 6724 00aa 43F82120 		str	r2, [r3, r1, lsl #2]
1946:main.c        ****         //and update the macro OLED screens
1947:main.c        ****         whichMacro = 0;
 6725              		.loc 1 1947 0
 6726 00ae 0C4B     		ldr	r3, .L285+32
 6727 00b0 0022     		movs	r2, #0
 6728 00b2 1A70     		strb	r2, [r3]
1948:main.c        ****         macroOLEDWaitingToSend = 1;
 6729              		.loc 1 1948 0
 6730 00b4 0B4B     		ldr	r3, .L285+36
 6731 00b6 0122     		movs	r2, #1
 6732 00b8 1A60     		str	r2, [r3]
 6733              	.L284:
1949:main.c        ****     }
1950:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 155


 6734              		.loc 1 1950 0
 6735 00ba 00BF     		nop
 6736 00bc 98BD     		pop	{r3, r4, r7, pc}
 6737              	.L286:
 6738 00be 00BF     		.align	2
 6739              	.L285:
 6740 00c0 00000000 		.word	patchNum
 6741 00c4 00000000 		.word	macroNamesArray
 6742 00c8 00000000 		.word	presetNamesArray
 6743 00cc 00000000 		.word	currentCopedent
 6744 00d0 00040000 		.word	.LC0
 6745 00d4 00000000 		.word	copedentNamesArray
 6746 00d8 00000000 		.word	mainOLEDWaitingToSend
 6747 00dc 00000000 		.word	presetAlreadyDisplayed
 6748 00e0 00000000 		.word	whichMacro
 6749 00e4 00000000 		.word	macroOLEDWaitingToSend
 6750              		.cfi_endproc
 6751              	.LFE81:
 6752              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 6753              		.section	.text.checkUSB_Vbus,"ax",%progbits
 6754              		.align	2
 6755              		.global	checkUSB_Vbus
 6756              		.thumb
 6757              		.thumb_func
 6758              		.type	checkUSB_Vbus, %function
 6759              	checkUSB_Vbus:
 6760              	.LFB82:
1951:main.c        ****     
1952:main.c        **** void checkUSB_Vbus(void)
1953:main.c        **** {
 6761              		.loc 1 1953 0
 6762              		.cfi_startproc
 6763              		@ args = 0, pretend = 0, frame = 0
 6764              		@ frame_needed = 1, uses_anonymous_args = 0
 6765 0000 80B5     		push	{r7, lr}
 6766              		.cfi_def_cfa_offset 8
 6767              		.cfi_offset 7, -8
 6768              		.cfi_offset 14, -4
 6769 0002 00AF     		add	r7, sp, #0
 6770              		.cfi_def_cfa_register 7
1954:main.c        ****    if (USB_VBusPresent() == 0)
 6771              		.loc 1 1954 0
 6772 0004 FFF7FEFF 		bl	USB_VBusPresent
 6773 0008 0346     		mov	r3, r0
 6774 000a 002B     		cmp	r3, #0
 6775 000c 05D1     		bne	.L288
1955:main.c        ****    {
1956:main.c        ****        USB_Stop();
 6776              		.loc 1 1956 0
 6777 000e FFF7FEFF 		bl	USB_Stop
1957:main.c        ****        USB_active = 0; 
 6778              		.loc 1 1957 0
 6779 0012 0E4B     		ldr	r3, .L291
 6780 0014 0022     		movs	r2, #0
 6781 0016 1A70     		strb	r2, [r3]
 6782 0018 13E0     		b	.L289
 6783              	.L288:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 156


1958:main.c        ****    }
1959:main.c        ****    else if (USB_active == 0 )
 6784              		.loc 1 1959 0
 6785 001a 0C4B     		ldr	r3, .L291
 6786 001c 1B78     		ldrb	r3, [r3]
 6787 001e DBB2     		uxtb	r3, r3
 6788 0020 002B     		cmp	r3, #0
 6789 0022 0ED1     		bne	.L289
1960:main.c        ****    {
1961:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 6790              		.loc 1 1961 0
 6791 0024 0021     		movs	r1, #0
 6792 0026 0020     		movs	r0, #0
 6793 0028 FFF7FEFF 		bl	USB_Start
1962:main.c        ****         while (0u == USB_GetConfiguration());
 6794              		.loc 1 1962 0
 6795 002c 00BF     		nop
 6796              	.L290:
 6797              		.loc 1 1962 0 is_stmt 0 discriminator 1
 6798 002e FFF7FEFF 		bl	USB_GetConfiguration
 6799 0032 0346     		mov	r3, r0
 6800 0034 002B     		cmp	r3, #0
 6801 0036 FAD0     		beq	.L290
1963:main.c        ****         USB_MIDI_EP_Init();
 6802              		.loc 1 1963 0 is_stmt 1
 6803 0038 FFF7FEFF 		bl	USB_MIDI_Init
1964:main.c        ****        USB_active = 1;
 6804              		.loc 1 1964 0
 6805 003c 034B     		ldr	r3, .L291
 6806 003e 0122     		movs	r2, #1
 6807 0040 1A70     		strb	r2, [r3]
 6808              	.L289:
1965:main.c        ****    }
1966:main.c        ****    USB_check_flag = 0;
 6809              		.loc 1 1966 0
 6810 0042 034B     		ldr	r3, .L291+4
 6811 0044 0022     		movs	r2, #0
 6812 0046 1A70     		strb	r2, [r3]
1967:main.c        **** }
 6813              		.loc 1 1967 0
 6814 0048 00BF     		nop
 6815 004a 80BD     		pop	{r7, pc}
 6816              	.L292:
 6817              		.align	2
 6818              	.L291:
 6819 004c 00000000 		.word	USB_active
 6820 0050 00000000 		.word	USB_check_flag
 6821              		.cfi_endproc
 6822              	.LFE82:
 6823              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 6824              		.section	.text.USB_service,"ax",%progbits
 6825              		.align	2
 6826              		.global	USB_service
 6827              		.thumb
 6828              		.thumb_func
 6829              		.type	USB_service, %function
 6830              	USB_service:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 157


 6831              	.LFB83:
1968:main.c        **** 
1969:main.c        **** 
1970:main.c        **** 
1971:main.c        **** void USB_service(void)
1972:main.c        **** {
 6832              		.loc 1 1972 0
 6833              		.cfi_startproc
 6834              		@ args = 0, pretend = 0, frame = 0
 6835              		@ frame_needed = 1, uses_anonymous_args = 0
 6836 0000 80B5     		push	{r7, lr}
 6837              		.cfi_def_cfa_offset 8
 6838              		.cfi_offset 7, -8
 6839              		.cfi_offset 14, -4
 6840 0002 00AF     		add	r7, sp, #0
 6841              		.cfi_def_cfa_register 7
1973:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 6842              		.loc 1 1973 0
 6843 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 6844 0008 0346     		mov	r3, r0
 6845 000a 002B     		cmp	r3, #0
 6846 000c 10D0     		beq	.L294
1974:main.c        ****     {
1975:main.c        ****         if(USB_GetConfiguration() != 0u)   
 6847              		.loc 1 1975 0
 6848 000e FFF7FEFF 		bl	USB_GetConfiguration
 6849 0012 0346     		mov	r3, r0
 6850 0014 002B     		cmp	r3, #0
 6851 0016 0BD0     		beq	.L294
1976:main.c        ****         {
1977:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1978:main.c        ****             
1979:main.c        ****             //SleepTimer_Start();
1980:main.c        ****         	
1981:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 6852              		.loc 1 1981 0
 6853 0018 244B     		ldr	r3, .L300
 6854 001a 1B78     		ldrb	r3, [r3]
 6855 001c DBB2     		uxtb	r3, r3
 6856 001e 002B     		cmp	r3, #0
 6857 0020 06D0     		beq	.L294
 6858              		.loc 1 1981 0 is_stmt 0 discriminator 1
 6859 0022 FFF7FEFF 		bl	USB_VBusPresent
 6860 0026 0346     		mov	r3, r0
 6861 0028 002B     		cmp	r3, #0
 6862 002a 01D0     		beq	.L294
1982:main.c        ****             {
1983:main.c        ****                 USB_MIDI_EP_Init();
 6863              		.loc 1 1983 0 is_stmt 1
 6864 002c FFF7FEFF 		bl	USB_MIDI_Init
 6865              	.L294:
1984:main.c        ****             }
1985:main.c        ****         }
1986:main.c        ****         else
1987:main.c        ****         {
1988:main.c        ****             //SleepTimer_Stop();
1989:main.c        ****         }    
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 158


1990:main.c        ****     }        
1991:main.c        ****     
1992:main.c        ****     if(USB_GetConfiguration() != 0u)    
 6866              		.loc 1 1992 0
 6867 0030 FFF7FEFF 		bl	USB_GetConfiguration
 6868 0034 0346     		mov	r3, r0
 6869 0036 002B     		cmp	r3, #0
 6870 0038 35D0     		beq	.L299
1993:main.c        ****     {
1994:main.c        **** 
1995:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1996:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 6871              		.loc 1 1996 0
 6872 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 6873 003e 0346     		mov	r3, r0
 6874 0040 002B     		cmp	r3, #0
 6875 0042 18D0     		beq	.L297
1997:main.c        ****         {
1998:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 6876              		.loc 1 1998 0
 6877 0044 1A4B     		ldr	r3, .L300+4
 6878 0046 1B78     		ldrb	r3, [r3]
 6879 0048 D8B2     		uxtb	r0, r3
 6880 004a 1A4B     		ldr	r3, .L300+8
 6881 004c 1B78     		ldrb	r3, [r3]
 6882 004e DBB2     		uxtb	r3, r3
 6883 0050 9BB2     		uxth	r3, r3
 6884 0052 1A46     		mov	r2, r3
 6885 0054 1849     		ldr	r1, .L300+12
 6886 0056 FFF7FEFF 		bl	USB_LoadInEP
1999:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
2000:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 6887              		.loc 1 2000 0
 6888 005a 184B     		ldr	r3, .L300+16
 6889 005c 1B78     		ldrb	r3, [r3]
 6890 005e DBB2     		uxtb	r3, r3
 6891 0060 4022     		movs	r2, #64
 6892 0062 1749     		ldr	r1, .L300+20
 6893 0064 1846     		mov	r0, r3
 6894 0066 FFF7FEFF 		bl	USB_ReadOutEP
2001:main.c        ****                                              /* configuring the DMAs for the first time only, the d
2002:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
2003:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 6895              		.loc 1 2003 0
 6896 006a 144B     		ldr	r3, .L300+16
 6897 006c 1B78     		ldrb	r3, [r3]
 6898 006e DBB2     		uxtb	r3, r3
 6899 0070 1846     		mov	r0, r3
 6900 0072 FFF7FEFF 		bl	USB_EnableOutEP
 6901              	.L297:
2004:main.c        ****         }
2005:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6902              		.loc 1 2005 0
 6903 0076 0D4B     		ldr	r3, .L300
 6904 0078 1B78     		ldrb	r3, [r3]
 6905 007a DBB2     		uxtb	r3, r3
 6906 007c 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 159


 6907 007e 06D0     		beq	.L298
 6908              		.loc 1 2005 0 is_stmt 0 discriminator 1
 6909 0080 FFF7FEFF 		bl	USB_VBusPresent
 6910 0084 0346     		mov	r3, r0
 6911 0086 002B     		cmp	r3, #0
 6912 0088 01D0     		beq	.L298
2006:main.c        ****         {
2007:main.c        ****             USB_MIDI_IN_Service();
 6913              		.loc 1 2007 0 is_stmt 1
 6914 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 6915              	.L298:
2008:main.c        ****         }
2009:main.c        **** 
2010:main.c        **** 
2011:main.c        **** 
2012:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6916              		.loc 1 2012 0
 6917 008e 074B     		ldr	r3, .L300
 6918 0090 1B78     		ldrb	r3, [r3]
 6919 0092 DBB2     		uxtb	r3, r3
 6920 0094 002B     		cmp	r3, #0
 6921 0096 06D0     		beq	.L299
 6922              		.loc 1 2012 0 is_stmt 0 discriminator 1
 6923 0098 FFF7FEFF 		bl	USB_VBusPresent
 6924 009c 0346     		mov	r3, r0
 6925 009e 002B     		cmp	r3, #0
 6926 00a0 01D0     		beq	.L299
2013:main.c        ****         {
2014:main.c        ****             USB_MIDI_OUT_Service();
 6927              		.loc 1 2014 0 is_stmt 1
 6928 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 6929              	.L299:
2015:main.c        ****         }
2016:main.c        ****     }
2017:main.c        ****         
2018:main.c        **** }
 6930              		.loc 1 2018 0
 6931 00a6 00BF     		nop
 6932 00a8 80BD     		pop	{r7, pc}
 6933              	.L301:
 6934 00aa 00BF     		.align	2
 6935              	.L300:
 6936 00ac 00000000 		.word	USB_active
 6937 00b0 00000000 		.word	USB_midi_in_ep
 6938 00b4 00000000 		.word	USB_midiInPointer
 6939 00b8 00000000 		.word	USB_midiInBuffer
 6940 00bc 00000000 		.word	USB_midi_out_ep
 6941 00c0 00000000 		.word	USB_midiOutBuffer
 6942              		.cfi_endproc
 6943              	.LFE83:
 6944              		.size	USB_service, .-USB_service
 6945              		.section	.text.log2f_approx,"ax",%progbits
 6946              		.align	2
 6947              		.global	log2f_approx
 6948              		.thumb
 6949              		.thumb_func
 6950              		.type	log2f_approx, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 160


 6951              	log2f_approx:
 6952              	.LFB84:
2019:main.c        **** 
2020:main.c        **** // This is a fast approximation to log2()
2021:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
2022:main.c        **** float log2f_approx(float X) {
 6953              		.loc 1 2022 0
 6954              		.cfi_startproc
 6955              		@ args = 0, pretend = 0, frame = 24
 6956              		@ frame_needed = 1, uses_anonymous_args = 0
 6957 0000 80B5     		push	{r7, lr}
 6958              		.cfi_def_cfa_offset 8
 6959              		.cfi_offset 7, -8
 6960              		.cfi_offset 14, -4
 6961 0002 86B0     		sub	sp, sp, #24
 6962              		.cfi_def_cfa_offset 32
 6963 0004 00AF     		add	r7, sp, #0
 6964              		.cfi_def_cfa_register 7
 6965 0006 7860     		str	r0, [r7, #4]	@ float
2023:main.c        ****   float Y, F;
2024:main.c        ****   int E;
2025:main.c        ****   F = frexpf(fabsf(X), &E);
 6966              		.loc 1 2025 0
 6967 0008 7B68     		ldr	r3, [r7, #4]
 6968 000a 23F00043 		bic	r3, r3, #-2147483648
 6969 000e 07F10C02 		add	r2, r7, #12
 6970 0012 1146     		mov	r1, r2
 6971 0014 1846     		mov	r0, r3
 6972 0016 FFF7FEFF 		bl	frexpf
 6973 001a 7861     		str	r0, [r7, #20]	@ float
2026:main.c        ****   Y = 1.23149591368684f;
 6974              		.loc 1 2026 0
 6975 001c 1A4B     		ldr	r3, .L304
 6976 001e 3B61     		str	r3, [r7, #16]	@ float
2027:main.c        ****   Y *= F;
 6977              		.loc 1 2027 0
 6978 0020 7969     		ldr	r1, [r7, #20]	@ float
 6979 0022 3869     		ldr	r0, [r7, #16]	@ float
 6980 0024 FFF7FEFF 		bl	__aeabi_fmul
 6981 0028 0346     		mov	r3, r0
 6982 002a 3B61     		str	r3, [r7, #16]	@ float
2028:main.c        ****   Y += -4.11852516267426f;
 6983              		.loc 1 2028 0
 6984 002c 1749     		ldr	r1, .L304+4
 6985 002e 3869     		ldr	r0, [r7, #16]	@ float
 6986 0030 FFF7FEFF 		bl	__aeabi_fsub
 6987 0034 0346     		mov	r3, r0
 6988 0036 3B61     		str	r3, [r7, #16]	@ float
2029:main.c        ****   Y *= F;
 6989              		.loc 1 2029 0
 6990 0038 7969     		ldr	r1, [r7, #20]	@ float
 6991 003a 3869     		ldr	r0, [r7, #16]	@ float
 6992 003c FFF7FEFF 		bl	__aeabi_fmul
 6993 0040 0346     		mov	r3, r0
 6994 0042 3B61     		str	r3, [r7, #16]	@ float
2030:main.c        ****   Y += 6.02197014179219f;
 6995              		.loc 1 2030 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 161


 6996 0044 1249     		ldr	r1, .L304+8
 6997 0046 3869     		ldr	r0, [r7, #16]	@ float
 6998 0048 FFF7FEFF 		bl	__aeabi_fadd
 6999 004c 0346     		mov	r3, r0
 7000 004e 3B61     		str	r3, [r7, #16]	@ float
2031:main.c        ****   Y *= F;
 7001              		.loc 1 2031 0
 7002 0050 7969     		ldr	r1, [r7, #20]	@ float
 7003 0052 3869     		ldr	r0, [r7, #16]	@ float
 7004 0054 FFF7FEFF 		bl	__aeabi_fmul
 7005 0058 0346     		mov	r3, r0
 7006 005a 3B61     		str	r3, [r7, #16]	@ float
2032:main.c        ****   Y += -3.13396450166353f;
 7007              		.loc 1 2032 0
 7008 005c 0D49     		ldr	r1, .L304+12
 7009 005e 3869     		ldr	r0, [r7, #16]	@ float
 7010 0060 FFF7FEFF 		bl	__aeabi_fsub
 7011 0064 0346     		mov	r3, r0
 7012 0066 3B61     		str	r3, [r7, #16]	@ float
2033:main.c        ****   Y += E;
 7013              		.loc 1 2033 0
 7014 0068 FB68     		ldr	r3, [r7, #12]
 7015 006a 1846     		mov	r0, r3
 7016 006c FFF7FEFF 		bl	__aeabi_i2f
 7017 0070 0346     		mov	r3, r0
 7018 0072 1946     		mov	r1, r3
 7019 0074 3869     		ldr	r0, [r7, #16]	@ float
 7020 0076 FFF7FEFF 		bl	__aeabi_fadd
 7021 007a 0346     		mov	r3, r0
 7022 007c 3B61     		str	r3, [r7, #16]	@ float
2034:main.c        ****   return(Y);
 7023              		.loc 1 2034 0
 7024 007e 3B69     		ldr	r3, [r7, #16]	@ float
2035:main.c        **** }
 7025              		.loc 1 2035 0
 7026 0080 1846     		mov	r0, r3
 7027 0082 1837     		adds	r7, r7, #24
 7028              		.cfi_def_cfa_offset 8
 7029 0084 BD46     		mov	sp, r7
 7030              		.cfi_def_cfa_register 13
 7031              		@ sp needed
 7032 0086 80BD     		pop	{r7, pc}
 7033              	.L305:
 7034              		.align	2
 7035              	.L304:
 7036 0088 A8A19D3F 		.word	1067295144
 7037 008c F5CA8340 		.word	1082378997
 7038 0090 FBB3C040 		.word	1086370811
 7039 0094 E0924840 		.word	1078498016
 7040              		.cfi_endproc
 7041              	.LFE84:
 7042              		.size	log2f_approx, .-log2f_approx
 7043              		.global	prevNotes
 7044              		.bss
 7045              		.align	2
 7046              		.type	prevNotes, %object
 7047              		.size	prevNotes, 48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 162


 7048              	prevNotes:
 7049 00d8 00000000 		.space	48
 7049      00000000 
 7049      00000000 
 7049      00000000 
 7049      00000000 
 7050              		.section	.text.noteEvent,"ax",%progbits
 7051              		.align	2
 7052              		.global	noteEvent
 7053              		.thumb
 7054              		.thumb_func
 7055              		.type	noteEvent, %function
 7056              	noteEvent:
 7057              	.LFB85:
2036:main.c        **** 
2037:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
2038:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
2039:main.c        **** 
2040:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
2041:main.c        **** 
2042:main.c        **** void noteEvent(int string)
2043:main.c        **** {
 7058              		.loc 1 2043 0
 7059              		.cfi_startproc
 7060              		@ args = 0, pretend = 0, frame = 24
 7061              		@ frame_needed = 1, uses_anonymous_args = 0
 7062 0000 80B5     		push	{r7, lr}
 7063              		.cfi_def_cfa_offset 8
 7064              		.cfi_offset 7, -8
 7065              		.cfi_offset 14, -4
 7066 0002 86B0     		sub	sp, sp, #24
 7067              		.cfi_def_cfa_offset 32
 7068 0004 00AF     		add	r7, sp, #0
 7069              		.cfi_def_cfa_register 7
 7070 0006 7860     		str	r0, [r7, #4]
2044:main.c        ****     
2045:main.c        ****     /*
2046:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
2047:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
2048:main.c        ****     int vInt  = (int) (v*4.0f);
2049:main.c        ****     if (vInt > 127)
2050:main.c        ****     {
2051:main.c        ****         vInt = 127;
2052:main.c        ****     }
2053:main.c        ****     */
2054:main.c        ****     uint16_t velocity = strings[string];
 7071              		.loc 1 2054 0
 7072 0008 2C4A     		ldr	r2, .L311
 7073 000a 7B68     		ldr	r3, [r7, #4]
 7074 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 7075 0010 FB82     		strh	r3, [r7, #22]	@ movhi
2055:main.c        ****     if (velocity > 0)
 7076              		.loc 1 2055 0
 7077 0012 FB8A     		ldrh	r3, [r7, #22]
 7078 0014 002B     		cmp	r3, #0
 7079 0016 43D0     		beq	.L307
 7080              	.LBB39:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 163


2056:main.c        ****     {
2057:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
2058:main.c        ****         float tempVel = (float)velocity;
 7081              		.loc 1 2058 0
 7082 0018 FB8A     		ldrh	r3, [r7, #22]
 7083 001a 1846     		mov	r0, r3
 7084 001c FFF7FEFF 		bl	__aeabi_ui2f
 7085 0020 0346     		mov	r3, r0
 7086 0022 3B61     		str	r3, [r7, #16]	@ float
2059:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 7087              		.loc 1 2059 0
 7088 0024 4FF05E51 		mov	r1, #931135488
 7089 0028 3869     		ldr	r0, [r7, #16]	@ float
 7090 002a FFF7FEFF 		bl	__aeabi_fmul
 7091 002e 0346     		mov	r3, r0
 7092 0030 3B61     		str	r3, [r7, #16]	@ float
2060:main.c        ****         tempVel = sqrtf(tempVel);
 7093              		.loc 1 2060 0
 7094 0032 3869     		ldr	r0, [r7, #16]	@ float
 7095 0034 FFF7FEFF 		bl	sqrtf
 7096 0038 3861     		str	r0, [r7, #16]	@ float
2061:main.c        ****         tempVel = tempVel - 0.0239372430f;
 7097              		.loc 1 2061 0
 7098 003a 2149     		ldr	r1, .L311+4
 7099 003c 3869     		ldr	r0, [r7, #16]	@ float
 7100 003e FFF7FEFF 		bl	__aeabi_fsub
 7101 0042 0346     		mov	r3, r0
 7102 0044 3B61     		str	r3, [r7, #16]	@ float
2062:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 7103              		.loc 1 2062 0
 7104 0046 1F49     		ldr	r1, .L311+8
 7105 0048 3869     		ldr	r0, [r7, #16]	@ float
 7106 004a FFF7FEFF 		bl	__aeabi_fmul
 7107 004e 0346     		mov	r3, r0
 7108 0050 3B61     		str	r3, [r7, #16]	@ float
2063:main.c        ****         velocity = (int)tempVel;
 7109              		.loc 1 2063 0
 7110 0052 3869     		ldr	r0, [r7, #16]	@ float
 7111 0054 FFF7FEFF 		bl	__aeabi_f2iz
 7112 0058 0346     		mov	r3, r0
 7113 005a FB82     		strh	r3, [r7, #22]	@ movhi
2064:main.c        ****         
2065:main.c        **** 
2066:main.c        ****         if (velocity > 127)
 7114              		.loc 1 2066 0
 7115 005c FB8A     		ldrh	r3, [r7, #22]
 7116 005e 7F2B     		cmp	r3, #127
 7117 0060 01D9     		bls	.L308
2067:main.c        ****         {
2068:main.c        ****             velocity = 127;
 7118              		.loc 1 2068 0
 7119 0062 7F23     		movs	r3, #127
 7120 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 7121              	.L308:
2069:main.c        ****         }
2070:main.c        ****         
2071:main.c        ****         //only update octave on note-ons
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 164


2072:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
2073:main.c        ****         int noteToSend = ((octave - 4) * 12) + openStringMIDI_Int[string];
 7122              		.loc 1 2073 0
 7123 0066 184B     		ldr	r3, .L311+12
 7124 0068 1B68     		ldr	r3, [r3]
 7125 006a 1A1F     		subs	r2, r3, #4
 7126 006c 1346     		mov	r3, r2
 7127 006e 5B00     		lsls	r3, r3, #1
 7128 0070 1344     		add	r3, r3, r2
 7129 0072 9B00     		lsls	r3, r3, #2
 7130 0074 1946     		mov	r1, r3
 7131 0076 154A     		ldr	r2, .L311+16
 7132 0078 7B68     		ldr	r3, [r7, #4]
 7133 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7134 007e 0B44     		add	r3, r3, r1
 7135 0080 FB60     		str	r3, [r7, #12]
2074:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 7136              		.loc 1 2074 0
 7137 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 7138 0084 DBB2     		uxtb	r3, r3
 7139 0086 1946     		mov	r1, r3
 7140 0088 7B68     		ldr	r3, [r7, #4]
 7141 008a 0133     		adds	r3, r3, #1
 7142 008c 1A46     		mov	r2, r3
 7143 008e F868     		ldr	r0, [r7, #12]
 7144 0090 FFF7FEFF 		bl	sendMIDINoteOn
2075:main.c        ****         prevNotes[string] = noteToSend;
 7145              		.loc 1 2075 0
 7146 0094 0E49     		ldr	r1, .L311+20
 7147 0096 7B68     		ldr	r3, [r7, #4]
 7148 0098 FA68     		ldr	r2, [r7, #12]
 7149 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 7150              	.LBE39:
2076:main.c        ****             
2077:main.c        ****     }
2078:main.c        ****     else
2079:main.c        ****     {
2080:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
2081:main.c        ****     }
2082:main.c        **** 
2083:main.c        **** }
 7151              		.loc 1 2083 0
 7152 009e 09E0     		b	.L310
 7153              	.L307:
2080:main.c        ****     }
 7154              		.loc 1 2080 0
 7155 00a0 0B4A     		ldr	r2, .L311+20
 7156 00a2 7B68     		ldr	r3, [r7, #4]
 7157 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 7158 00a8 7B68     		ldr	r3, [r7, #4]
 7159 00aa 0133     		adds	r3, r3, #1
 7160 00ac 1A46     		mov	r2, r3
 7161 00ae 0021     		movs	r1, #0
 7162 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 7163              	.L310:
 7164              		.loc 1 2083 0
 7165 00b4 00BF     		nop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 165


 7166 00b6 1837     		adds	r7, r7, #24
 7167              		.cfi_def_cfa_offset 8
 7168 00b8 BD46     		mov	sp, r7
 7169              		.cfi_def_cfa_register 13
 7170              		@ sp needed
 7171 00ba 80BD     		pop	{r7, pc}
 7172              	.L312:
 7173              		.align	2
 7174              	.L311:
 7175 00bc 00000000 		.word	strings
 7176 00c0 0918C43C 		.word	1019484169
 7177 00c4 551D0243 		.word	1124212053
 7178 00c8 00000000 		.word	octave
 7179 00cc 00000000 		.word	openStringMIDI_Int
 7180 00d0 00000000 		.word	prevNotes
 7181              		.cfi_endproc
 7182              	.LFE85:
 7183              		.size	noteEvent, .-noteEvent
 7184              		.section	.text.CCEvent,"ax",%progbits
 7185              		.align	2
 7186              		.global	CCEvent
 7187              		.thumb
 7188              		.thumb_func
 7189              		.type	CCEvent, %function
 7190              	CCEvent:
 7191              	.LFB86:
2084:main.c        **** 
2085:main.c        **** void CCEvent(int cc, int val)
2086:main.c        **** {
 7192              		.loc 1 2086 0
 7193              		.cfi_startproc
 7194              		@ args = 0, pretend = 0, frame = 8
 7195              		@ frame_needed = 1, uses_anonymous_args = 0
 7196 0000 80B5     		push	{r7, lr}
 7197              		.cfi_def_cfa_offset 8
 7198              		.cfi_offset 7, -8
 7199              		.cfi_offset 14, -4
 7200 0002 82B0     		sub	sp, sp, #8
 7201              		.cfi_def_cfa_offset 16
 7202 0004 00AF     		add	r7, sp, #0
 7203              		.cfi_def_cfa_register 7
 7204 0006 7860     		str	r0, [r7, #4]
 7205 0008 3960     		str	r1, [r7]
2087:main.c        ****     
2088:main.c        ****     sendMIDIControlChange(cc, val, 0);
 7206              		.loc 1 2088 0
 7207 000a 0022     		movs	r2, #0
 7208 000c 3968     		ldr	r1, [r7]
 7209 000e 7868     		ldr	r0, [r7, #4]
 7210 0010 FFF7FEFF 		bl	sendMIDIControlChange
2089:main.c        **** }
 7211              		.loc 1 2089 0
 7212 0014 00BF     		nop
 7213 0016 0837     		adds	r7, r7, #8
 7214              		.cfi_def_cfa_offset 8
 7215 0018 BD46     		mov	sp, r7
 7216              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 166


 7217              		@ sp needed
 7218 001a 80BD     		pop	{r7, pc}
 7219              		.cfi_endproc
 7220              	.LFE86:
 7221              		.size	CCEvent, .-CCEvent
 7222              		.section	.text.sendMIDINoteOn,"ax",%progbits
 7223              		.align	2
 7224              		.global	sendMIDINoteOn
 7225              		.thumb
 7226              		.thumb_func
 7227              		.type	sendMIDINoteOn, %function
 7228              	sendMIDINoteOn:
 7229              	.LFB87:
2090:main.c        **** 
2091:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
2092:main.c        **** {  
 7230              		.loc 1 2092 0
 7231              		.cfi_startproc
 7232              		@ args = 0, pretend = 0, frame = 16
 7233              		@ frame_needed = 1, uses_anonymous_args = 0
 7234 0000 80B5     		push	{r7, lr}
 7235              		.cfi_def_cfa_offset 8
 7236              		.cfi_offset 7, -8
 7237              		.cfi_offset 14, -4
 7238 0002 84B0     		sub	sp, sp, #16
 7239              		.cfi_def_cfa_offset 24
 7240 0004 00AF     		add	r7, sp, #0
 7241              		.cfi_def_cfa_register 7
 7242 0006 F860     		str	r0, [r7, #12]
 7243 0008 B960     		str	r1, [r7, #8]
 7244 000a 7A60     		str	r2, [r7, #4]
2093:main.c        ****    
2094:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 7245              		.loc 1 2094 0
 7246 000c 7B68     		ldr	r3, [r7, #4]
 7247 000e DBB2     		uxtb	r3, r3
 7248 0010 703B     		subs	r3, r3, #112
 7249 0012 DAB2     		uxtb	r2, r3
 7250 0014 114B     		ldr	r3, .L316
 7251 0016 1A70     		strb	r2, [r3]
2095:main.c        ****     midiMsg[1] = MIDInoteNum;
 7252              		.loc 1 2095 0
 7253 0018 FB68     		ldr	r3, [r7, #12]
 7254 001a DAB2     		uxtb	r2, r3
 7255 001c 0F4B     		ldr	r3, .L316
 7256 001e 5A70     		strb	r2, [r3, #1]
2096:main.c        ****     midiMsg[2] = velocity;	
 7257              		.loc 1 2096 0
 7258 0020 BB68     		ldr	r3, [r7, #8]
 7259 0022 DAB2     		uxtb	r2, r3
 7260 0024 0D4B     		ldr	r3, .L316
 7261 0026 9A70     		strb	r2, [r3, #2]
2097:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7262              		.loc 1 2097 0
 7263 0028 0D4B     		ldr	r3, .L316+4
 7264 002a 1B78     		ldrb	r3, [r3]
 7265 002c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 167


 7266 002e 002B     		cmp	r3, #0
 7267 0030 09D0     		beq	.L315
 7268              		.loc 1 2097 0 is_stmt 0 discriminator 1
 7269 0032 FFF7FEFF 		bl	USB_VBusPresent
 7270 0036 0346     		mov	r3, r0
 7271 0038 002B     		cmp	r3, #0
 7272 003a 04D0     		beq	.L315
2098:main.c        ****     {
2099:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7273              		.loc 1 2099 0 is_stmt 1
 7274 003c 0022     		movs	r2, #0
 7275 003e 0749     		ldr	r1, .L316
 7276 0040 0320     		movs	r0, #3
 7277 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7278              	.L315:
2100:main.c        ****     } 
2101:main.c        ****     midiSent += 4;
 7279              		.loc 1 2101 0
 7280 0046 074B     		ldr	r3, .L316+8
 7281 0048 1B88     		ldrh	r3, [r3]
 7282 004a 0433     		adds	r3, r3, #4
 7283 004c 9AB2     		uxth	r2, r3
 7284 004e 054B     		ldr	r3, .L316+8
 7285 0050 1A80     		strh	r2, [r3]	@ movhi
2102:main.c        **** }
 7286              		.loc 1 2102 0
 7287 0052 00BF     		nop
 7288 0054 1037     		adds	r7, r7, #16
 7289              		.cfi_def_cfa_offset 8
 7290 0056 BD46     		mov	sp, r7
 7291              		.cfi_def_cfa_register 13
 7292              		@ sp needed
 7293 0058 80BD     		pop	{r7, pc}
 7294              	.L317:
 7295 005a 00BF     		.align	2
 7296              	.L316:
 7297 005c 00000000 		.word	midiMsg
 7298 0060 00000000 		.word	USB_active
 7299 0064 00000000 		.word	midiSent
 7300              		.cfi_endproc
 7301              	.LFE87:
 7302              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 7303              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 7304              		.align	2
 7305              		.global	sendMIDIPolyKeyPressure
 7306              		.thumb
 7307              		.thumb_func
 7308              		.type	sendMIDIPolyKeyPressure, %function
 7309              	sendMIDIPolyKeyPressure:
 7310              	.LFB88:
2103:main.c        **** 
2104:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
2105:main.c        **** {
 7311              		.loc 1 2105 0
 7312              		.cfi_startproc
 7313              		@ args = 0, pretend = 0, frame = 16
 7314              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 168


 7315 0000 80B5     		push	{r7, lr}
 7316              		.cfi_def_cfa_offset 8
 7317              		.cfi_offset 7, -8
 7318              		.cfi_offset 14, -4
 7319 0002 84B0     		sub	sp, sp, #16
 7320              		.cfi_def_cfa_offset 24
 7321 0004 00AF     		add	r7, sp, #0
 7322              		.cfi_def_cfa_register 7
 7323 0006 F860     		str	r0, [r7, #12]
 7324 0008 B960     		str	r1, [r7, #8]
 7325 000a 7A60     		str	r2, [r7, #4]
2106:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 7326              		.loc 1 2106 0
 7327 000c 7B68     		ldr	r3, [r7, #4]
 7328 000e DBB2     		uxtb	r3, r3
 7329 0010 603B     		subs	r3, r3, #96
 7330 0012 DAB2     		uxtb	r2, r3
 7331 0014 114B     		ldr	r3, .L320
 7332 0016 1A70     		strb	r2, [r3]
2107:main.c        ****     midiMsg[1] = MIDInoteNum;
 7333              		.loc 1 2107 0
 7334 0018 FB68     		ldr	r3, [r7, #12]
 7335 001a DAB2     		uxtb	r2, r3
 7336 001c 0F4B     		ldr	r3, .L320
 7337 001e 5A70     		strb	r2, [r3, #1]
2108:main.c        ****     midiMsg[2] = pressure;		
 7338              		.loc 1 2108 0
 7339 0020 BB68     		ldr	r3, [r7, #8]
 7340 0022 DAB2     		uxtb	r2, r3
 7341 0024 0D4B     		ldr	r3, .L320
 7342 0026 9A70     		strb	r2, [r3, #2]
2109:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7343              		.loc 1 2109 0
 7344 0028 0D4B     		ldr	r3, .L320+4
 7345 002a 1B78     		ldrb	r3, [r3]
 7346 002c DBB2     		uxtb	r3, r3
 7347 002e 002B     		cmp	r3, #0
 7348 0030 09D0     		beq	.L319
 7349              		.loc 1 2109 0 is_stmt 0 discriminator 1
 7350 0032 FFF7FEFF 		bl	USB_VBusPresent
 7351 0036 0346     		mov	r3, r0
 7352 0038 002B     		cmp	r3, #0
 7353 003a 04D0     		beq	.L319
2110:main.c        ****     {
2111:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7354              		.loc 1 2111 0 is_stmt 1
 7355 003c 0022     		movs	r2, #0
 7356 003e 0749     		ldr	r1, .L320
 7357 0040 0320     		movs	r0, #3
 7358 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7359              	.L319:
2112:main.c        ****     } 
2113:main.c        ****     midiSent += 4;
 7360              		.loc 1 2113 0
 7361 0046 074B     		ldr	r3, .L320+8
 7362 0048 1B88     		ldrh	r3, [r3]
 7363 004a 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 169


 7364 004c 9AB2     		uxth	r2, r3
 7365 004e 054B     		ldr	r3, .L320+8
 7366 0050 1A80     		strh	r2, [r3]	@ movhi
2114:main.c        **** }
 7367              		.loc 1 2114 0
 7368 0052 00BF     		nop
 7369 0054 1037     		adds	r7, r7, #16
 7370              		.cfi_def_cfa_offset 8
 7371 0056 BD46     		mov	sp, r7
 7372              		.cfi_def_cfa_register 13
 7373              		@ sp needed
 7374 0058 80BD     		pop	{r7, pc}
 7375              	.L321:
 7376 005a 00BF     		.align	2
 7377              	.L320:
 7378 005c 00000000 		.word	midiMsg
 7379 0060 00000000 		.word	USB_active
 7380 0064 00000000 		.word	midiSent
 7381              		.cfi_endproc
 7382              	.LFE88:
 7383              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 7384              		.section	.text.sendMIDIControlChange,"ax",%progbits
 7385              		.align	2
 7386              		.global	sendMIDIControlChange
 7387              		.thumb
 7388              		.thumb_func
 7389              		.type	sendMIDIControlChange, %function
 7390              	sendMIDIControlChange:
 7391              	.LFB89:
2115:main.c        **** 
2116:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
2117:main.c        **** {
 7392              		.loc 1 2117 0
 7393              		.cfi_startproc
 7394              		@ args = 0, pretend = 0, frame = 16
 7395              		@ frame_needed = 1, uses_anonymous_args = 0
 7396 0000 80B5     		push	{r7, lr}
 7397              		.cfi_def_cfa_offset 8
 7398              		.cfi_offset 7, -8
 7399              		.cfi_offset 14, -4
 7400 0002 84B0     		sub	sp, sp, #16
 7401              		.cfi_def_cfa_offset 24
 7402 0004 00AF     		add	r7, sp, #0
 7403              		.cfi_def_cfa_register 7
 7404 0006 F860     		str	r0, [r7, #12]
 7405 0008 B960     		str	r1, [r7, #8]
 7406 000a 7A60     		str	r2, [r7, #4]
2118:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 7407              		.loc 1 2118 0
 7408 000c 7B68     		ldr	r3, [r7, #4]
 7409 000e DBB2     		uxtb	r3, r3
 7410 0010 503B     		subs	r3, r3, #80
 7411 0012 DAB2     		uxtb	r2, r3
 7412 0014 114B     		ldr	r3, .L324
 7413 0016 1A70     		strb	r2, [r3]
2119:main.c        ****     midiMsg[1] = CCnum;
 7414              		.loc 1 2119 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 170


 7415 0018 FB68     		ldr	r3, [r7, #12]
 7416 001a DAB2     		uxtb	r2, r3
 7417 001c 0F4B     		ldr	r3, .L324
 7418 001e 5A70     		strb	r2, [r3, #1]
2120:main.c        ****     midiMsg[2] = CCval;			
 7419              		.loc 1 2120 0
 7420 0020 BB68     		ldr	r3, [r7, #8]
 7421 0022 DAB2     		uxtb	r2, r3
 7422 0024 0D4B     		ldr	r3, .L324
 7423 0026 9A70     		strb	r2, [r3, #2]
2121:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7424              		.loc 1 2121 0
 7425 0028 0D4B     		ldr	r3, .L324+4
 7426 002a 1B78     		ldrb	r3, [r3]
 7427 002c DBB2     		uxtb	r3, r3
 7428 002e 002B     		cmp	r3, #0
 7429 0030 09D0     		beq	.L323
 7430              		.loc 1 2121 0 is_stmt 0 discriminator 1
 7431 0032 FFF7FEFF 		bl	USB_VBusPresent
 7432 0036 0346     		mov	r3, r0
 7433 0038 002B     		cmp	r3, #0
 7434 003a 04D0     		beq	.L323
2122:main.c        ****     {
2123:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7435              		.loc 1 2123 0 is_stmt 1
 7436 003c 0022     		movs	r2, #0
 7437 003e 0749     		ldr	r1, .L324
 7438 0040 0320     		movs	r0, #3
 7439 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7440              	.L323:
2124:main.c        ****     } 
2125:main.c        ****     midiSent += 4;
 7441              		.loc 1 2125 0
 7442 0046 074B     		ldr	r3, .L324+8
 7443 0048 1B88     		ldrh	r3, [r3]
 7444 004a 0433     		adds	r3, r3, #4
 7445 004c 9AB2     		uxth	r2, r3
 7446 004e 054B     		ldr	r3, .L324+8
 7447 0050 1A80     		strh	r2, [r3]	@ movhi
2126:main.c        **** }
 7448              		.loc 1 2126 0
 7449 0052 00BF     		nop
 7450 0054 1037     		adds	r7, r7, #16
 7451              		.cfi_def_cfa_offset 8
 7452 0056 BD46     		mov	sp, r7
 7453              		.cfi_def_cfa_register 13
 7454              		@ sp needed
 7455 0058 80BD     		pop	{r7, pc}
 7456              	.L325:
 7457 005a 00BF     		.align	2
 7458              	.L324:
 7459 005c 00000000 		.word	midiMsg
 7460 0060 00000000 		.word	USB_active
 7461 0064 00000000 		.word	midiSent
 7462              		.cfi_endproc
 7463              	.LFE89:
 7464              		.size	sendMIDIControlChange, .-sendMIDIControlChange
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 171


 7465              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 7466              		.align	2
 7467              		.global	sendMIDIPitchBend
 7468              		.thumb
 7469              		.thumb_func
 7470              		.type	sendMIDIPitchBend, %function
 7471              	sendMIDIPitchBend:
 7472              	.LFB90:
2127:main.c        **** 
2128:main.c        **** void sendMIDIPitchBend(int val, int channel)
2129:main.c        **** {
 7473              		.loc 1 2129 0
 7474              		.cfi_startproc
 7475              		@ args = 0, pretend = 0, frame = 8
 7476              		@ frame_needed = 1, uses_anonymous_args = 0
 7477 0000 80B5     		push	{r7, lr}
 7478              		.cfi_def_cfa_offset 8
 7479              		.cfi_offset 7, -8
 7480              		.cfi_offset 14, -4
 7481 0002 82B0     		sub	sp, sp, #8
 7482              		.cfi_def_cfa_offset 16
 7483 0004 00AF     		add	r7, sp, #0
 7484              		.cfi_def_cfa_register 7
 7485 0006 7860     		str	r0, [r7, #4]
 7486 0008 3960     		str	r1, [r7]
2130:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 7487              		.loc 1 2130 0
 7488 000a 3B68     		ldr	r3, [r7]
 7489 000c DBB2     		uxtb	r3, r3
 7490 000e 203B     		subs	r3, r3, #32
 7491 0010 DAB2     		uxtb	r2, r3
 7492 0012 134B     		ldr	r3, .L328
 7493 0014 1A70     		strb	r2, [r3]
2131:main.c        ****     midiMsg[1] = (val & 127); //LSB
 7494              		.loc 1 2131 0
 7495 0016 7B68     		ldr	r3, [r7, #4]
 7496 0018 DBB2     		uxtb	r3, r3
 7497 001a 03F07F03 		and	r3, r3, #127
 7498 001e DAB2     		uxtb	r2, r3
 7499 0020 0F4B     		ldr	r3, .L328
 7500 0022 5A70     		strb	r2, [r3, #1]
2132:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 7501              		.loc 1 2132 0
 7502 0024 7B68     		ldr	r3, [r7, #4]
 7503 0026 DB11     		asrs	r3, r3, #7
 7504 0028 DAB2     		uxtb	r2, r3
 7505 002a 0D4B     		ldr	r3, .L328
 7506 002c 9A70     		strb	r2, [r3, #2]
2133:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7507              		.loc 1 2133 0
 7508 002e 0D4B     		ldr	r3, .L328+4
 7509 0030 1B78     		ldrb	r3, [r3]
 7510 0032 DBB2     		uxtb	r3, r3
 7511 0034 002B     		cmp	r3, #0
 7512 0036 09D0     		beq	.L327
 7513              		.loc 1 2133 0 is_stmt 0 discriminator 1
 7514 0038 FFF7FEFF 		bl	USB_VBusPresent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 172


 7515 003c 0346     		mov	r3, r0
 7516 003e 002B     		cmp	r3, #0
 7517 0040 04D0     		beq	.L327
2134:main.c        ****     {
2135:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7518              		.loc 1 2135 0 is_stmt 1
 7519 0042 0022     		movs	r2, #0
 7520 0044 0649     		ldr	r1, .L328
 7521 0046 0320     		movs	r0, #3
 7522 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7523              	.L327:
2136:main.c        ****     } 
2137:main.c        ****     midiSent += 4;
 7524              		.loc 1 2137 0
 7525 004c 064B     		ldr	r3, .L328+8
 7526 004e 1B88     		ldrh	r3, [r3]
 7527 0050 0433     		adds	r3, r3, #4
 7528 0052 9AB2     		uxth	r2, r3
 7529 0054 044B     		ldr	r3, .L328+8
 7530 0056 1A80     		strh	r2, [r3]	@ movhi
2138:main.c        **** }
 7531              		.loc 1 2138 0
 7532 0058 00BF     		nop
 7533 005a 0837     		adds	r7, r7, #8
 7534              		.cfi_def_cfa_offset 8
 7535 005c BD46     		mov	sp, r7
 7536              		.cfi_def_cfa_register 13
 7537              		@ sp needed
 7538 005e 80BD     		pop	{r7, pc}
 7539              	.L329:
 7540              		.align	2
 7541              	.L328:
 7542 0060 00000000 		.word	midiMsg
 7543 0064 00000000 		.word	USB_active
 7544 0068 00000000 		.word	midiSent
 7545              		.cfi_endproc
 7546              	.LFE90:
 7547              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 7548              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 7549              		.align	2
 7550              		.global	sendMIDIAllNotesOff
 7551              		.thumb
 7552              		.thumb_func
 7553              		.type	sendMIDIAllNotesOff, %function
 7554              	sendMIDIAllNotesOff:
 7555              	.LFB91:
2139:main.c        **** 
2140:main.c        **** void sendMIDIAllNotesOff(void)
2141:main.c        **** {   
 7556              		.loc 1 2141 0
 7557              		.cfi_startproc
 7558              		@ args = 0, pretend = 0, frame = 0
 7559              		@ frame_needed = 1, uses_anonymous_args = 0
 7560 0000 80B5     		push	{r7, lr}
 7561              		.cfi_def_cfa_offset 8
 7562              		.cfi_offset 7, -8
 7563              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 173


 7564 0002 00AF     		add	r7, sp, #0
 7565              		.cfi_def_cfa_register 7
2142:main.c        ****     for (i = 0; i < 128; i++)
 7566              		.loc 1 2142 0
 7567 0004 144B     		ldr	r3, .L334
 7568 0006 0022     		movs	r2, #0
 7569 0008 1A70     		strb	r2, [r3]
 7570 000a 1EE0     		b	.L331
 7571              	.L333:
2143:main.c        ****     {
2144:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 7572              		.loc 1 2144 0
 7573 000c 134B     		ldr	r3, .L334+4
 7574 000e 9022     		movs	r2, #144
 7575 0010 1A70     		strb	r2, [r3]
2145:main.c        ****         midiMsg[1] = i;
 7576              		.loc 1 2145 0
 7577 0012 114B     		ldr	r3, .L334
 7578 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7579 0016 114B     		ldr	r3, .L334+4
 7580 0018 5A70     		strb	r2, [r3, #1]
2146:main.c        ****         midiMsg[2] = 0;	
 7581              		.loc 1 2146 0
 7582 001a 104B     		ldr	r3, .L334+4
 7583 001c 0022     		movs	r2, #0
 7584 001e 9A70     		strb	r2, [r3, #2]
2147:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7585              		.loc 1 2147 0
 7586 0020 0F4B     		ldr	r3, .L334+8
 7587 0022 1B78     		ldrb	r3, [r3]
 7588 0024 DBB2     		uxtb	r3, r3
 7589 0026 002B     		cmp	r3, #0
 7590 0028 09D0     		beq	.L332
 7591              		.loc 1 2147 0 is_stmt 0 discriminator 1
 7592 002a FFF7FEFF 		bl	USB_VBusPresent
 7593 002e 0346     		mov	r3, r0
 7594 0030 002B     		cmp	r3, #0
 7595 0032 04D0     		beq	.L332
2148:main.c        ****         {       
2149:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7596              		.loc 1 2149 0 is_stmt 1
 7597 0034 0022     		movs	r2, #0
 7598 0036 0949     		ldr	r1, .L334+4
 7599 0038 0320     		movs	r0, #3
 7600 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
 7601              	.L332:
2142:main.c        ****     {
 7602              		.loc 1 2142 0 discriminator 2
 7603 003e 064B     		ldr	r3, .L334
 7604 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7605 0042 0133     		adds	r3, r3, #1
 7606 0044 DAB2     		uxtb	r2, r3
 7607 0046 044B     		ldr	r3, .L334
 7608 0048 1A70     		strb	r2, [r3]
 7609              	.L331:
2142:main.c        ****     {
 7610              		.loc 1 2142 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 174


 7611 004a 034B     		ldr	r3, .L334
 7612 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7613 004e 5BB2     		sxtb	r3, r3
 7614 0050 002B     		cmp	r3, #0
 7615 0052 DBDA     		bge	.L333
2150:main.c        ****         }
2151:main.c        ****     }
2152:main.c        **** }
 7616              		.loc 1 2152 0 is_stmt 1
 7617 0054 00BF     		nop
 7618 0056 80BD     		pop	{r7, pc}
 7619              	.L335:
 7620              		.align	2
 7621              	.L334:
 7622 0058 00000000 		.word	i
 7623 005c 00000000 		.word	midiMsg
 7624 0060 00000000 		.word	USB_active
 7625              		.cfi_endproc
 7626              	.LFE91:
 7627              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 7628              		.global	checkStatus
 7629              		.bss
 7630              		.type	checkStatus, %object
 7631              		.size	checkStatus, 1
 7632              	checkStatus:
 7633 0108 00       		.space	1
 7634              		.global	checkBase
 7635 0109 00       		.align	1
 7636              		.type	checkBase, %object
 7637              		.size	checkBase, 2
 7638              	checkBase:
 7639 010a 0000     		.space	2
 7640              		.global	SPI_errors
 7641              		.align	2
 7642              		.type	SPI_errors, %object
 7643              		.size	SPI_errors, 4
 7644              	SPI_errors:
 7645 010c 00000000 		.space	4
 7646              		.section	.text.parseSysex,"ax",%progbits
 7647              		.align	2
 7648              		.global	parseSysex
 7649              		.thumb
 7650              		.thumb_func
 7651              		.type	parseSysex, %function
 7652              	parseSysex:
 7653              	.LFB92:
2153:main.c        **** 
2154:main.c        **** 
2155:main.c        **** 
2156:main.c        **** 
2157:main.c        **** volatile uint8_t checkStatus = 0;
2158:main.c        **** volatile uint16_t checkBase = 0;
2159:main.c        **** 
2160:main.c        **** 
2161:main.c        **** 
2162:main.c        **** int SPI_errors = 0;
2163:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 175


2164:main.c        **** void parseSysex(void)
2165:main.c        **** {
 7654              		.loc 1 2165 0
 7655              		.cfi_startproc
 7656              		@ args = 0, pretend = 0, frame = 80
 7657              		@ frame_needed = 1, uses_anonymous_args = 0
 7658 0000 90B5     		push	{r4, r7, lr}
 7659              		.cfi_def_cfa_offset 12
 7660              		.cfi_offset 4, -12
 7661              		.cfi_offset 7, -8
 7662              		.cfi_offset 14, -4
 7663 0002 95B0     		sub	sp, sp, #84
 7664              		.cfi_def_cfa_offset 96
 7665 0004 00AF     		add	r7, sp, #0
 7666              		.cfi_def_cfa_register 7
2166:main.c        ****     parsingSysex = 1;
 7667              		.loc 1 2166 0
 7668 0006 8F4B     		ldr	r3, .L389
 7669 0008 0122     		movs	r2, #1
 7670 000a 1A70     		strb	r2, [r3]
2167:main.c        ****     //0 = it's a preset
2168:main.c        ****     if (sysexBuffer[0] == 0)
 7671              		.loc 1 2168 0
 7672 000c 8E4B     		ldr	r3, .L389+4
 7673 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7674 0010 002B     		cmp	r3, #0
 7675 0012 40F0E082 		bne	.L337
 7676              	.LBB40:
2169:main.c        ****     {
2170:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7677              		.loc 1 2170 0
 7678 0016 8D4B     		ldr	r3, .L389+8
 7679 0018 0122     		movs	r2, #1
 7680 001a 1A70     		strb	r2, [r3]
2171:main.c        ****         currentFloat = 0;
 7681              		.loc 1 2171 0
 7682 001c 8C4B     		ldr	r3, .L389+12
 7683 001e 0022     		movs	r2, #0
 7684 0020 1A60     		str	r2, [r3]
2172:main.c        ****         presetArraySection = presetName;
 7685              		.loc 1 2172 0
 7686 0022 8C4B     		ldr	r3, .L389+16
 7687 0024 0022     		movs	r2, #0
 7688 0026 1A70     		strb	r2, [r3]
2173:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 7689              		.loc 1 2173 0
 7690 0028 874B     		ldr	r3, .L389+4
 7691 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7692 002c 8A4B     		ldr	r3, .L389+20
 7693 002e 1A70     		strb	r2, [r3]
2174:main.c        ****         presetArray[0] = sysexBuffer[2];
 7694              		.loc 1 2174 0
 7695 0030 854B     		ldr	r3, .L389+4
 7696 0032 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 7697 0034 894B     		ldr	r3, .L389+24
 7698 0036 1A70     		strb	r2, [r3]
2175:main.c        ****         presetArray[1] = sysexBuffer[3];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 176


 7699              		.loc 1 2175 0
 7700 0038 834B     		ldr	r3, .L389+4
 7701 003a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 7702 003c 874B     		ldr	r3, .L389+24
 7703 003e 5A70     		strb	r2, [r3, #1]
2176:main.c        ****         presetArray[2] = sysexBuffer[4];
 7704              		.loc 1 2176 0
 7705 0040 814B     		ldr	r3, .L389+4
 7706 0042 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 7707 0044 854B     		ldr	r3, .L389+24
 7708 0046 9A70     		strb	r2, [r3, #2]
2177:main.c        ****         presetArray[3] = sysexBuffer[5];
 7709              		.loc 1 2177 0
 7710 0048 7F4B     		ldr	r3, .L389+4
 7711 004a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 7712 004c 834B     		ldr	r3, .L389+24
 7713 004e DA70     		strb	r2, [r3, #3]
2178:main.c        ****         
2179:main.c        ****         union breakFloat theVal;
2180:main.c        ****         uint32_t i = 6;
 7714              		.loc 1 2180 0
 7715 0050 0623     		movs	r3, #6
 7716 0052 FB64     		str	r3, [r7, #76]
2181:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+6;
 7717              		.loc 1 2181 0
 7718 0054 1423     		movs	r3, #20
 7719 0056 87F83730 		strb	r3, [r7, #55]
2182:main.c        ****         for (; i < stoppingPoint; i++)
 7720              		.loc 1 2182 0
 7721 005a 22E0     		b	.L338
 7722              	.L339:
2183:main.c        ****         {
2184:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 7723              		.loc 1 2184 0 discriminator 2
 7724 005c FB6C     		ldr	r3, [r7, #76]
 7725 005e 023B     		subs	r3, r3, #2
 7726 0060 7949     		ldr	r1, .L389+4
 7727 0062 FA6C     		ldr	r2, [r7, #76]
 7728 0064 0A44     		add	r2, r2, r1
 7729 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7730 0068 02F07F02 		and	r2, r2, #127
 7731 006c D1B2     		uxtb	r1, r2
 7732 006e 7B4A     		ldr	r2, .L389+24
 7733 0070 D154     		strb	r1, [r2, r3]
2185:main.c        ****             presetNamesArray[presetNumberToWrite][i-6] = sysexBuffer[i] & 127;
 7734              		.loc 1 2185 0 discriminator 2
 7735 0072 794B     		ldr	r3, .L389+20
 7736 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7737 0076 1846     		mov	r0, r3
 7738 0078 FB6C     		ldr	r3, [r7, #76]
 7739 007a 9A1F     		subs	r2, r3, #6
 7740 007c 7249     		ldr	r1, .L389+4
 7741 007e FB6C     		ldr	r3, [r7, #76]
 7742 0080 0B44     		add	r3, r3, r1
 7743 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7744 0084 03F07F03 		and	r3, r3, #127
 7745 0088 DCB2     		uxtb	r4, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 177


 7746 008a 7549     		ldr	r1, .L389+28
 7747 008c 0346     		mov	r3, r0
 7748 008e DB00     		lsls	r3, r3, #3
 7749 0090 1B1A     		subs	r3, r3, r0
 7750 0092 5B00     		lsls	r3, r3, #1
 7751 0094 0B44     		add	r3, r3, r1
 7752 0096 1344     		add	r3, r3, r2
 7753 0098 2246     		mov	r2, r4
 7754 009a 1A70     		strb	r2, [r3]
2182:main.c        ****         for (; i < stoppingPoint; i++)
 7755              		.loc 1 2182 0 discriminator 2
 7756 009c FB6C     		ldr	r3, [r7, #76]
 7757 009e 0133     		adds	r3, r3, #1
 7758 00a0 FB64     		str	r3, [r7, #76]
 7759              	.L338:
2182:main.c        ****         for (; i < stoppingPoint; i++)
 7760              		.loc 1 2182 0 is_stmt 0 discriminator 1
 7761 00a2 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 7762 00a6 FB6C     		ldr	r3, [r7, #76]
 7763 00a8 9A42     		cmp	r2, r3
 7764 00aa D7D8     		bhi	.L339
2186:main.c        ****         }
2187:main.c        ****         
2188:main.c        ****         presetArraySection = macroNames;
 7765              		.loc 1 2188 0 is_stmt 1
 7766 00ac 694B     		ldr	r3, .L389+16
 7767 00ae 0122     		movs	r2, #1
 7768 00b0 1A70     		strb	r2, [r3]
 7769              	.LBB41:
2189:main.c        **** 
2190:main.c        ****         
2191:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 7770              		.loc 1 2191 0
 7771 00b2 0023     		movs	r3, #0
 7772 00b4 BB64     		str	r3, [r7, #72]
 7773 00b6 34E0     		b	.L340
 7774              	.L343:
 7775              	.LBB42:
2192:main.c        ****         {
2193:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 7776              		.loc 1 2193 0
 7777 00b8 0023     		movs	r3, #0
 7778 00ba 7B64     		str	r3, [r7, #68]
 7779 00bc 2BE0     		b	.L341
 7780              	.L342:
2194:main.c        ****             {
2195:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 7781              		.loc 1 2195 0 discriminator 3
 7782 00be FB6C     		ldr	r3, [r7, #76]
 7783 00c0 023B     		subs	r3, r3, #2
 7784 00c2 6149     		ldr	r1, .L389+4
 7785 00c4 FA6C     		ldr	r2, [r7, #76]
 7786 00c6 0A44     		add	r2, r2, r1
 7787 00c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7788 00ca 02F07F02 		and	r2, r2, #127
 7789 00ce D1B2     		uxtb	r1, r2
 7790 00d0 624A     		ldr	r2, .L389+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 178


 7791 00d2 D154     		strb	r1, [r2, r3]
2196:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 7792              		.loc 1 2196 0 discriminator 3
 7793 00d4 604B     		ldr	r3, .L389+20
 7794 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7795 00d8 1846     		mov	r0, r3
 7796 00da 5B4A     		ldr	r2, .L389+4
 7797 00dc FB6C     		ldr	r3, [r7, #76]
 7798 00de 1344     		add	r3, r3, r2
 7799 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7800 00e2 03F07F03 		and	r3, r3, #127
 7801 00e6 DCB2     		uxtb	r4, r3
 7802 00e8 5E49     		ldr	r1, .L389+32
 7803 00ea BB6C     		ldr	r3, [r7, #72]
 7804 00ec 1A46     		mov	r2, r3
 7805 00ee D200     		lsls	r2, r2, #3
 7806 00f0 D21A     		subs	r2, r2, r3
 7807 00f2 5300     		lsls	r3, r2, #1
 7808 00f4 1A46     		mov	r2, r3
 7809 00f6 0346     		mov	r3, r0
 7810 00f8 DB00     		lsls	r3, r3, #3
 7811 00fa 1B1A     		subs	r3, r3, r0
 7812 00fc 1B01     		lsls	r3, r3, #4
 7813 00fe 1344     		add	r3, r3, r2
 7814 0100 CA18     		adds	r2, r1, r3
 7815 0102 7B6C     		ldr	r3, [r7, #68]
 7816 0104 1344     		add	r3, r3, r2
 7817 0106 2246     		mov	r2, r4
 7818 0108 1A70     		strb	r2, [r3]
2197:main.c        ****                 i++;
 7819              		.loc 1 2197 0 discriminator 3
 7820 010a FB6C     		ldr	r3, [r7, #76]
 7821 010c 0133     		adds	r3, r3, #1
 7822 010e FB64     		str	r3, [r7, #76]
2193:main.c        ****             {
 7823              		.loc 1 2193 0 discriminator 3
 7824 0110 7B6C     		ldr	r3, [r7, #68]
 7825 0112 0133     		adds	r3, r3, #1
 7826 0114 7B64     		str	r3, [r7, #68]
 7827              	.L341:
2193:main.c        ****             {
 7828              		.loc 1 2193 0 is_stmt 0 discriminator 1
 7829 0116 7B6C     		ldr	r3, [r7, #68]
 7830 0118 0D2B     		cmp	r3, #13
 7831 011a D0DD     		ble	.L342
 7832              	.LBE42:
2191:main.c        ****         {
 7833              		.loc 1 2191 0 is_stmt 1 discriminator 2
 7834 011c BB6C     		ldr	r3, [r7, #72]
 7835 011e 0133     		adds	r3, r3, #1
 7836 0120 BB64     		str	r3, [r7, #72]
 7837              	.L340:
2191:main.c        ****         {
 7838              		.loc 1 2191 0 is_stmt 0 discriminator 1
 7839 0122 BB6C     		ldr	r3, [r7, #72]
 7840 0124 072B     		cmp	r3, #7
 7841 0126 C7DD     		ble	.L343
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 179


 7842              	.LBE41:
2198:main.c        ****             }
2199:main.c        ****         }
2200:main.c        ****         
2201:main.c        ****         uint16_t valsStart = 4 + NAME_LENGTH_IN_BYTES + (NAME_LENGTH_IN_BYTES * NUM_MACROS);
 7843              		.loc 1 2201 0 is_stmt 1
 7844 0128 8223     		movs	r3, #130
 7845 012a BB86     		strh	r3, [r7, #52]	@ movhi
2202:main.c        ****         
2203:main.c        ****         presetArraySection = initialVals;
 7846              		.loc 1 2203 0
 7847 012c 494B     		ldr	r3, .L389+16
 7848 012e 0222     		movs	r2, #2
 7849 0130 1A70     		strb	r2, [r3]
2204:main.c        ****         
2205:main.c        ****         for (; i < sysexPointer; i = i+5)
 7850              		.loc 1 2205 0
 7851 0132 49E2     		b	.L344
 7852              	.L366:
2206:main.c        ****         {
2207:main.c        ****             theVal.u32 = 0;
 7853              		.loc 1 2207 0
 7854 0134 0023     		movs	r3, #0
 7855 0136 3B61     		str	r3, [r7, #16]
2208:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7856              		.loc 1 2208 0
 7857 0138 3B69     		ldr	r3, [r7, #16]
 7858 013a 4349     		ldr	r1, .L389+4
 7859 013c FA6C     		ldr	r2, [r7, #76]
 7860 013e 0A44     		add	r2, r2, r1
 7861 0140 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7862 0142 1207     		lsls	r2, r2, #28
 7863 0144 1343     		orrs	r3, r3, r2
 7864 0146 3B61     		str	r3, [r7, #16]
2209:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 7865              		.loc 1 2209 0
 7866 0148 3B69     		ldr	r3, [r7, #16]
 7867 014a FA6C     		ldr	r2, [r7, #76]
 7868 014c 0132     		adds	r2, r2, #1
 7869 014e 3E49     		ldr	r1, .L389+4
 7870 0150 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7871 0152 5205     		lsls	r2, r2, #21
 7872 0154 1343     		orrs	r3, r3, r2
 7873 0156 3B61     		str	r3, [r7, #16]
2210:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 7874              		.loc 1 2210 0
 7875 0158 3B69     		ldr	r3, [r7, #16]
 7876 015a FA6C     		ldr	r2, [r7, #76]
 7877 015c 0232     		adds	r2, r2, #2
 7878 015e 3A49     		ldr	r1, .L389+4
 7879 0160 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7880 0162 9203     		lsls	r2, r2, #14
 7881 0164 1343     		orrs	r3, r3, r2
 7882 0166 3B61     		str	r3, [r7, #16]
2211:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 7883              		.loc 1 2211 0
 7884 0168 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 180


 7885 016a FA6C     		ldr	r2, [r7, #76]
 7886 016c 0332     		adds	r2, r2, #3
 7887 016e 3649     		ldr	r1, .L389+4
 7888 0170 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7889 0172 D201     		lsls	r2, r2, #7
 7890 0174 1343     		orrs	r3, r3, r2
 7891 0176 3B61     		str	r3, [r7, #16]
2212:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 7892              		.loc 1 2212 0
 7893 0178 3A69     		ldr	r2, [r7, #16]
 7894 017a FB6C     		ldr	r3, [r7, #76]
 7895 017c 0433     		adds	r3, r3, #4
 7896 017e 3249     		ldr	r1, .L389+4
 7897 0180 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7898 0182 03F07F03 		and	r3, r3, #127
 7899 0186 1343     		orrs	r3, r3, r2
 7900 0188 3B61     		str	r3, [r7, #16]
2213:main.c        ****             testVal = theVal.f;
 7901              		.loc 1 2213 0
 7902 018a 3B69     		ldr	r3, [r7, #16]	@ float
 7903 018c 364A     		ldr	r2, .L389+36
 7904 018e 1360     		str	r3, [r2]	@ float
2214:main.c        ****             if (presetArraySection == initialVals)
 7905              		.loc 1 2214 0
 7906 0190 304B     		ldr	r3, .L389+16
 7907 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7908 0194 022B     		cmp	r3, #2
 7909 0196 40F0B980 		bne	.L345
2215:main.c        ****             {
2216:main.c        **** 
2217:main.c        ****                 if (currentFloat == 0)
 7910              		.loc 1 2217 0
 7911 019a 2D4B     		ldr	r3, .L389+12
 7912 019c 1B68     		ldr	r3, [r3]
 7913 019e 002B     		cmp	r3, #0
 7914 01a0 22D1     		bne	.L346
2218:main.c        ****                 {
2219:main.c        ****                     valsCount = (uint16_t) theVal.f;
 7915              		.loc 1 2219 0
 7916 01a2 3B69     		ldr	r3, [r7, #16]	@ float
 7917 01a4 1846     		mov	r0, r3
 7918 01a6 FFF7FEFF 		bl	__aeabi_f2uiz
 7919 01aa 0346     		mov	r3, r0
 7920 01ac 9AB2     		uxth	r2, r3
 7921 01ae 2F4B     		ldr	r3, .L389+40
 7922 01b0 1A80     		strh	r2, [r3]	@ movhi
2220:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 7923              		.loc 1 2220 0
 7924 01b2 BA8E     		ldrh	r2, [r7, #52]
 7925 01b4 264B     		ldr	r3, .L389+12
 7926 01b6 1B68     		ldr	r3, [r3]
 7927 01b8 591C     		adds	r1, r3, #1
 7928 01ba 2548     		ldr	r0, .L389+12
 7929 01bc 0160     		str	r1, [r0]
 7930 01be 1344     		add	r3, r3, r2
 7931 01c0 2A4A     		ldr	r2, .L389+40
 7932 01c2 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 181


 7933 01c4 120A     		lsrs	r2, r2, #8
 7934 01c6 92B2     		uxth	r2, r2
 7935 01c8 D1B2     		uxtb	r1, r2
 7936 01ca 244A     		ldr	r2, .L389+24
 7937 01cc D154     		strb	r1, [r2, r3]
2221:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 7938              		.loc 1 2221 0
 7939 01ce BA8E     		ldrh	r2, [r7, #52]
 7940 01d0 1F4B     		ldr	r3, .L389+12
 7941 01d2 1B68     		ldr	r3, [r3]
 7942 01d4 591C     		adds	r1, r3, #1
 7943 01d6 1E48     		ldr	r0, .L389+12
 7944 01d8 0160     		str	r1, [r0]
 7945 01da 1344     		add	r3, r3, r2
 7946 01dc 234A     		ldr	r2, .L389+40
 7947 01de 1288     		ldrh	r2, [r2]
 7948 01e0 D1B2     		uxtb	r1, r2
 7949 01e2 1E4A     		ldr	r2, .L389+24
 7950 01e4 D154     		strb	r1, [r2, r3]
 7951 01e6 ECE1     		b	.L352
 7952              	.L346:
2222:main.c        ****                 }
2223:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 7953              		.loc 1 2223 0
 7954 01e8 204B     		ldr	r3, .L389+40
 7955 01ea 1B88     		ldrh	r3, [r3]
 7956 01ec 0133     		adds	r3, r3, #1
 7957 01ee 5B00     		lsls	r3, r3, #1
 7958 01f0 1A46     		mov	r2, r3
 7959 01f2 174B     		ldr	r3, .L389+12
 7960 01f4 1B68     		ldr	r3, [r3]
 7961 01f6 9A42     		cmp	r2, r3
 7962 01f8 3CD9     		bls	.L348
 7963              	.LBB43:
2224:main.c        ****                 { 
2225:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 7964              		.loc 1 2225 0
 7965 01fa 3B69     		ldr	r3, [r7, #16]	@ float
 7966 01fc 1C49     		ldr	r1, .L389+44
 7967 01fe 1846     		mov	r0, r3
 7968 0200 FFF7FEFF 		bl	__aeabi_fmul
 7969 0204 0346     		mov	r3, r0
 7970 0206 1846     		mov	r0, r3
 7971 0208 FFF7FEFF 		bl	__aeabi_f2uiz
 7972 020c 0346     		mov	r3, r0
 7973 020e 7B86     		strh	r3, [r7, #50]	@ movhi
2226:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 7974              		.loc 1 2226 0
 7975 0210 BA8E     		ldrh	r2, [r7, #52]
 7976 0212 0F4B     		ldr	r3, .L389+12
 7977 0214 1B68     		ldr	r3, [r3]
 7978 0216 591C     		adds	r1, r3, #1
 7979 0218 0D48     		ldr	r0, .L389+12
 7980 021a 0160     		str	r1, [r0]
 7981 021c 1344     		add	r3, r3, r2
 7982 021e 7A8E     		ldrh	r2, [r7, #50]
 7983 0220 120A     		lsrs	r2, r2, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 182


 7984 0222 92B2     		uxth	r2, r2
 7985 0224 D1B2     		uxtb	r1, r2
 7986 0226 0D4A     		ldr	r2, .L389+24
 7987 0228 D154     		strb	r1, [r2, r3]
2227:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7988              		.loc 1 2227 0
 7989 022a BA8E     		ldrh	r2, [r7, #52]
 7990 022c 084B     		ldr	r3, .L389+12
 7991 022e 1B68     		ldr	r3, [r3]
 7992 0230 591C     		adds	r1, r3, #1
 7993 0232 0748     		ldr	r0, .L389+12
 7994 0234 0160     		str	r1, [r0]
 7995 0236 1344     		add	r3, r3, r2
 7996 0238 7A8E     		ldrh	r2, [r7, #50]	@ movhi
 7997 023a D1B2     		uxtb	r1, r2
 7998 023c 074A     		ldr	r2, .L389+24
 7999 023e D154     		strb	r1, [r2, r3]
 8000              	.LBE43:
 8001 0240 BFE1     		b	.L352
 8002              	.L390:
 8003 0242 00BF     		.align	2
 8004              	.L389:
 8005 0244 00000000 		.word	parsingSysex
 8006 0248 00000000 		.word	sysexBuffer
 8007 024c 00000000 		.word	sysexMessageInProgress
 8008 0250 00000000 		.word	currentFloat
 8009 0254 00000000 		.word	presetArraySection
 8010 0258 00000000 		.word	presetNumberToWrite
 8011 025c 00000000 		.word	presetArray
 8012 0260 00000000 		.word	presetNamesArray
 8013 0264 00000000 		.word	macroNamesArray
 8014 0268 00000000 		.word	testVal
 8015 026c 00000000 		.word	valsCount
 8016 0270 00FF7F47 		.word	1199570688
 8017              	.L348:
2228:main.c        ****                 }
2229:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 8018              		.loc 1 2229 0
 8019 0274 9C4B     		ldr	r3, .L391
 8020 0276 1B88     		ldrh	r3, [r3]
 8021 0278 0133     		adds	r3, r3, #1
 8022 027a 5B00     		lsls	r3, r3, #1
 8023 027c 1A46     		mov	r2, r3
 8024 027e 9B4B     		ldr	r3, .L391+4
 8025 0280 1B68     		ldr	r3, [r3]
 8026 0282 9A42     		cmp	r2, r3
 8027 0284 40F09D81 		bne	.L352
2230:main.c        ****                 {
2231:main.c        ****                     valCheck = theVal.f;
 8028              		.loc 1 2231 0
 8029 0288 3B69     		ldr	r3, [r7, #16]	@ float
 8030 028a 994A     		ldr	r2, .L391+8
 8031 028c 1360     		str	r3, [r2]	@ float
2232:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 8032              		.loc 1 2232 0
 8033 028e 984B     		ldr	r3, .L391+8
 8034 0290 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 183


 8035 0292 9849     		ldr	r1, .L391+12
 8036 0294 1846     		mov	r0, r3
 8037 0296 FFF7FEFF 		bl	__aeabi_fcmplt
 8038 029a 0346     		mov	r3, r0
 8039 029c 002B     		cmp	r3, #0
 8040 029e 23D0     		beq	.L349
 8041              		.loc 1 2232 0 is_stmt 0 discriminator 1
 8042 02a0 934B     		ldr	r3, .L391+8
 8043 02a2 1B68     		ldr	r3, [r3]	@ float
 8044 02a4 9449     		ldr	r1, .L391+16
 8045 02a6 1846     		mov	r0, r3
 8046 02a8 FFF7FEFF 		bl	__aeabi_fcmpgt
 8047 02ac 0346     		mov	r3, r0
 8048 02ae 002B     		cmp	r3, #0
 8049 02b0 1AD0     		beq	.L349
2233:main.c        ****                     {
2234:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 8050              		.loc 1 2234 0 is_stmt 1
 8051 02b2 BA8E     		ldrh	r2, [r7, #52]
 8052 02b4 8D4B     		ldr	r3, .L391+4
 8053 02b6 1B68     		ldr	r3, [r3]
 8054 02b8 591C     		adds	r1, r3, #1
 8055 02ba 8C48     		ldr	r0, .L391+4
 8056 02bc 0160     		str	r1, [r0]
 8057 02be 1344     		add	r3, r3, r2
 8058 02c0 8E4A     		ldr	r2, .L391+20
 8059 02c2 EF21     		movs	r1, #239
 8060 02c4 D154     		strb	r1, [r2, r3]
2235:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 8061              		.loc 1 2235 0
 8062 02c6 BA8E     		ldrh	r2, [r7, #52]
 8063 02c8 884B     		ldr	r3, .L391+4
 8064 02ca 1B68     		ldr	r3, [r3]
 8065 02cc 591C     		adds	r1, r3, #1
 8066 02ce 8748     		ldr	r0, .L391+4
 8067 02d0 0160     		str	r1, [r0]
 8068 02d2 1344     		add	r3, r3, r2
 8069 02d4 894A     		ldr	r2, .L391+20
 8070 02d6 EF21     		movs	r1, #239
 8071 02d8 D154     		strb	r1, [r2, r3]
2236:main.c        ****                         presetArraySection = mapCountNext;
 8072              		.loc 1 2236 0
 8073 02da 894B     		ldr	r3, .L391+24
 8074 02dc 0322     		movs	r2, #3
 8075 02de 1A70     		strb	r2, [r3]
2237:main.c        ****                         mapCount = 0;
 8076              		.loc 1 2237 0
 8077 02e0 884B     		ldr	r3, .L391+28
 8078 02e2 0022     		movs	r2, #0
 8079 02e4 1A60     		str	r2, [r3]
 8080 02e6 6CE1     		b	.L352
 8081              	.L349:
2238:main.c        ****                     }
2239:main.c        ****                     else
2240:main.c        ****                     {
2241:main.c        ****                         //error state
2242:main.c        ****                         SPI_errors++;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 184


 8082              		.loc 1 2242 0
 8083 02e8 874B     		ldr	r3, .L391+32
 8084 02ea 1B68     		ldr	r3, [r3]
 8085 02ec 0133     		adds	r3, r3, #1
 8086 02ee 864A     		ldr	r2, .L391+32
 8087 02f0 1360     		str	r3, [r2]
2243:main.c        ****                         sysexMessageInProgress = 0;
 8088              		.loc 1 2243 0
 8089 02f2 864B     		ldr	r3, .L391+36
 8090 02f4 0022     		movs	r2, #0
 8091 02f6 1A70     		strb	r2, [r3]
2244:main.c        ****                         sysexPointer = 0;
 8092              		.loc 1 2244 0
 8093 02f8 854B     		ldr	r3, .L391+40
 8094 02fa 0022     		movs	r2, #0
 8095 02fc 1A60     		str	r2, [r3]
2245:main.c        ****                         sendingMessage = 0;
 8096              		.loc 1 2245 0
 8097 02fe 854B     		ldr	r3, .L391+44
 8098 0300 0022     		movs	r2, #0
 8099 0302 1A70     		strb	r2, [r3]
2246:main.c        ****                         parseThatMF = 0;
 8100              		.loc 1 2246 0
 8101 0304 844B     		ldr	r3, .L391+48
 8102 0306 0022     		movs	r2, #0
 8103 0308 1A70     		strb	r2, [r3]
 8104 030a 5AE1     		b	.L352
 8105              	.L345:
2247:main.c        ****                     }
2248:main.c        ****                 }
2249:main.c        ****             }
2250:main.c        ****             else if (presetArraySection == mapCountNext)
 8106              		.loc 1 2250 0
 8107 030c 7C4B     		ldr	r3, .L391+24
 8108 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8109 0310 032B     		cmp	r3, #3
 8110 0312 28D1     		bne	.L353
2251:main.c        ****             {
2252:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 8111              		.loc 1 2252 0
 8112 0314 3B69     		ldr	r3, [r7, #16]	@ float
 8113 0316 1846     		mov	r0, r3
 8114 0318 FFF7FEFF 		bl	__aeabi_f2uiz
 8115 031c 0346     		mov	r3, r0
 8116 031e 9AB2     		uxth	r2, r3
 8117 0320 7E4B     		ldr	r3, .L391+52
 8118 0322 1A80     		strh	r2, [r3]	@ movhi
2253:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 8119              		.loc 1 2253 0
 8120 0324 BA8E     		ldrh	r2, [r7, #52]
 8121 0326 714B     		ldr	r3, .L391+4
 8122 0328 1B68     		ldr	r3, [r3]
 8123 032a 591C     		adds	r1, r3, #1
 8124 032c 6F48     		ldr	r0, .L391+4
 8125 032e 0160     		str	r1, [r0]
 8126 0330 1344     		add	r3, r3, r2
 8127 0332 7A4A     		ldr	r2, .L391+52
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 185


 8128 0334 1288     		ldrh	r2, [r2]
 8129 0336 120A     		lsrs	r2, r2, #8
 8130 0338 92B2     		uxth	r2, r2
 8131 033a D1B2     		uxtb	r1, r2
 8132 033c 6F4A     		ldr	r2, .L391+20
 8133 033e D154     		strb	r1, [r2, r3]
2254:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 8134              		.loc 1 2254 0
 8135 0340 BA8E     		ldrh	r2, [r7, #52]
 8136 0342 6A4B     		ldr	r3, .L391+4
 8137 0344 1B68     		ldr	r3, [r3]
 8138 0346 591C     		adds	r1, r3, #1
 8139 0348 6848     		ldr	r0, .L391+4
 8140 034a 0160     		str	r1, [r0]
 8141 034c 1344     		add	r3, r3, r2
 8142 034e 734A     		ldr	r2, .L391+52
 8143 0350 1288     		ldrh	r2, [r2]
 8144 0352 D1B2     		uxtb	r1, r2
 8145 0354 694A     		ldr	r2, .L391+20
 8146 0356 D154     		strb	r1, [r2, r3]
2255:main.c        ****                 presetArraySection = mapping;
 8147              		.loc 1 2255 0
 8148 0358 694B     		ldr	r3, .L391+24
 8149 035a 0422     		movs	r2, #4
 8150 035c 1A70     		strb	r2, [r3]
2256:main.c        ****                 numMappings = 0;
 8151              		.loc 1 2256 0
 8152 035e 704B     		ldr	r3, .L391+56
 8153 0360 0022     		movs	r2, #0
 8154 0362 1A80     		strh	r2, [r3]	@ movhi
 8155 0364 2DE1     		b	.L352
 8156              	.L353:
2257:main.c        ****             }
2258:main.c        ****             else if (presetArraySection == mapping)
 8157              		.loc 1 2258 0
 8158 0366 664B     		ldr	r3, .L391+24
 8159 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8160 036a 042B     		cmp	r3, #4
 8161 036c 40F02981 		bne	.L352
2259:main.c        ****             {
2260:main.c        ****                 // this is the order
2261:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
2262:main.c        ****                 if (numMappings < mapCountExpectation)
 8162              		.loc 1 2262 0
 8163 0370 6B4B     		ldr	r3, .L391+56
 8164 0372 1A88     		ldrh	r2, [r3]
 8165 0374 694B     		ldr	r3, .L391+52
 8166 0376 1B88     		ldrh	r3, [r3]
 8167 0378 9A42     		cmp	r2, r3
 8168 037a 80F0D780 		bcs	.L354
2263:main.c        ****                 {
2264:main.c        ****                     if ((mapCount % 5) == 0)
 8169              		.loc 1 2264 0
 8170 037e 614B     		ldr	r3, .L391+28
 8171 0380 1968     		ldr	r1, [r3]
 8172 0382 684B     		ldr	r3, .L391+60
 8173 0384 A3FB0123 		umull	r2, r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 186


 8174 0388 9A08     		lsrs	r2, r3, #2
 8175 038a 1346     		mov	r3, r2
 8176 038c 9B00     		lsls	r3, r3, #2
 8177 038e 1344     		add	r3, r3, r2
 8178 0390 CA1A     		subs	r2, r1, r3
 8179 0392 002A     		cmp	r2, #0
 8180 0394 0FD1     		bne	.L355
2265:main.c        ****                     {
2266:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8181              		.loc 1 2266 0
 8182 0396 BA8E     		ldrh	r2, [r7, #52]
 8183 0398 544B     		ldr	r3, .L391+4
 8184 039a 1B68     		ldr	r3, [r3]
 8185 039c 591C     		adds	r1, r3, #1
 8186 039e 5348     		ldr	r0, .L391+4
 8187 03a0 0160     		str	r1, [r0]
 8188 03a2 D418     		adds	r4, r2, r3
 8189 03a4 3B69     		ldr	r3, [r7, #16]	@ float
 8190 03a6 1846     		mov	r0, r3
 8191 03a8 FFF7FEFF 		bl	__aeabi_f2uiz
 8192 03ac 0346     		mov	r3, r0
 8193 03ae DAB2     		uxtb	r2, r3
 8194 03b0 524B     		ldr	r3, .L391+20
 8195 03b2 1A55     		strb	r2, [r3, r4]
 8196 03b4 91E0     		b	.L356
 8197              	.L355:
2267:main.c        ****                     }
2268:main.c        ****                     else if  (mapCount % 5 == 1)
 8198              		.loc 1 2268 0
 8199 03b6 534B     		ldr	r3, .L391+28
 8200 03b8 1968     		ldr	r1, [r3]
 8201 03ba 5A4B     		ldr	r3, .L391+60
 8202 03bc A3FB0123 		umull	r2, r3, r3, r1
 8203 03c0 9A08     		lsrs	r2, r3, #2
 8204 03c2 1346     		mov	r3, r2
 8205 03c4 9B00     		lsls	r3, r3, #2
 8206 03c6 1344     		add	r3, r3, r2
 8207 03c8 CA1A     		subs	r2, r1, r3
 8208 03ca 012A     		cmp	r2, #1
 8209 03cc 0FD1     		bne	.L357
2269:main.c        ****                     {
2270:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8210              		.loc 1 2270 0
 8211 03ce BA8E     		ldrh	r2, [r7, #52]
 8212 03d0 464B     		ldr	r3, .L391+4
 8213 03d2 1B68     		ldr	r3, [r3]
 8214 03d4 591C     		adds	r1, r3, #1
 8215 03d6 4548     		ldr	r0, .L391+4
 8216 03d8 0160     		str	r1, [r0]
 8217 03da D418     		adds	r4, r2, r3
 8218 03dc 3B69     		ldr	r3, [r7, #16]	@ float
 8219 03de 1846     		mov	r0, r3
 8220 03e0 FFF7FEFF 		bl	__aeabi_f2uiz
 8221 03e4 0346     		mov	r3, r0
 8222 03e6 DAB2     		uxtb	r2, r3
 8223 03e8 444B     		ldr	r3, .L391+20
 8224 03ea 1A55     		strb	r2, [r3, r4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 187


 8225 03ec 75E0     		b	.L356
 8226              	.L357:
2271:main.c        ****                     }
2272:main.c        ****                     else if (mapCount % 5 == 2) //check if the scalar source is -1 (if so send 255 
 8227              		.loc 1 2272 0
 8228 03ee 454B     		ldr	r3, .L391+28
 8229 03f0 1968     		ldr	r1, [r3]
 8230 03f2 4C4B     		ldr	r3, .L391+60
 8231 03f4 A3FB0123 		umull	r2, r3, r3, r1
 8232 03f8 9A08     		lsrs	r2, r3, #2
 8233 03fa 1346     		mov	r3, r2
 8234 03fc 9B00     		lsls	r3, r3, #2
 8235 03fe 1344     		add	r3, r3, r2
 8236 0400 CA1A     		subs	r2, r1, r3
 8237 0402 022A     		cmp	r2, #2
 8238 0404 23D1     		bne	.L358
2273:main.c        ****                     {
2274:main.c        ****                         if (theVal.f < 0.0f)
 8239              		.loc 1 2274 0
 8240 0406 3B69     		ldr	r3, [r7, #16]	@ float
 8241 0408 4FF00001 		mov	r1, #0
 8242 040c 1846     		mov	r0, r3
 8243 040e FFF7FEFF 		bl	__aeabi_fcmplt
 8244 0412 0346     		mov	r3, r0
 8245 0414 002B     		cmp	r3, #0
 8246 0416 0AD0     		beq	.L388
2275:main.c        ****                         {
2276:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 8247              		.loc 1 2276 0
 8248 0418 BA8E     		ldrh	r2, [r7, #52]
 8249 041a 344B     		ldr	r3, .L391+4
 8250 041c 1B68     		ldr	r3, [r3]
 8251 041e 591C     		adds	r1, r3, #1
 8252 0420 3248     		ldr	r0, .L391+4
 8253 0422 0160     		str	r1, [r0]
 8254 0424 1344     		add	r3, r3, r2
 8255 0426 354A     		ldr	r2, .L391+20
 8256 0428 FF21     		movs	r1, #255
 8257 042a D154     		strb	r1, [r2, r3]
 8258 042c 55E0     		b	.L356
 8259              	.L388:
2277:main.c        ****                         }
2278:main.c        ****                         else
2279:main.c        ****                         {
2280:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8260              		.loc 1 2280 0
 8261 042e BA8E     		ldrh	r2, [r7, #52]
 8262 0430 2E4B     		ldr	r3, .L391+4
 8263 0432 1B68     		ldr	r3, [r3]
 8264 0434 591C     		adds	r1, r3, #1
 8265 0436 2D48     		ldr	r0, .L391+4
 8266 0438 0160     		str	r1, [r0]
 8267 043a D418     		adds	r4, r2, r3
 8268 043c 3B69     		ldr	r3, [r7, #16]	@ float
 8269 043e 1846     		mov	r0, r3
 8270 0440 FFF7FEFF 		bl	__aeabi_f2uiz
 8271 0444 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 188


 8272 0446 DAB2     		uxtb	r2, r3
 8273 0448 2C4B     		ldr	r3, .L391+20
 8274 044a 1A55     		strb	r2, [r3, r4]
 8275 044c 45E0     		b	.L356
 8276              	.L358:
2281:main.c        ****                         }
2282:main.c        ****                     }
2283:main.c        ****                     else if (mapCount % 5 == 3)
 8277              		.loc 1 2283 0
 8278 044e 2D4B     		ldr	r3, .L391+28
 8279 0450 1968     		ldr	r1, [r3]
 8280 0452 344B     		ldr	r3, .L391+60
 8281 0454 A3FB0123 		umull	r2, r3, r3, r1
 8282 0458 9A08     		lsrs	r2, r3, #2
 8283 045a 1346     		mov	r3, r2
 8284 045c 9B00     		lsls	r3, r3, #2
 8285 045e 1344     		add	r3, r3, r2
 8286 0460 CA1A     		subs	r2, r1, r3
 8287 0462 032A     		cmp	r2, #3
 8288 0464 24D1     		bne	.L362
 8289              	.LBB44:
2284:main.c        ****                     {
2285:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 8290              		.loc 1 2285 0
 8291 0466 3B69     		ldr	r3, [r7, #16]	@ float
 8292 0468 2F49     		ldr	r1, .L391+64
 8293 046a 1846     		mov	r0, r3
 8294 046c FFF7FEFF 		bl	__aeabi_fmul
 8295 0470 0346     		mov	r3, r0
 8296 0472 1846     		mov	r0, r3
 8297 0474 FFF7FEFF 		bl	__aeabi_f2iz
 8298 0478 0346     		mov	r3, r0
 8299 047a 3B86     		strh	r3, [r7, #48]	@ movhi
2286:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 8300              		.loc 1 2286 0
 8301 047c BA8E     		ldrh	r2, [r7, #52]
 8302 047e 1B4B     		ldr	r3, .L391+4
 8303 0480 1B68     		ldr	r3, [r3]
 8304 0482 591C     		adds	r1, r3, #1
 8305 0484 1948     		ldr	r0, .L391+4
 8306 0486 0160     		str	r1, [r0]
 8307 0488 1344     		add	r3, r3, r2
 8308 048a B7F93020 		ldrsh	r2, [r7, #48]
 8309 048e 1212     		asrs	r2, r2, #8
 8310 0490 12B2     		sxth	r2, r2
 8311 0492 D1B2     		uxtb	r1, r2
 8312 0494 194A     		ldr	r2, .L391+20
 8313 0496 D154     		strb	r1, [r2, r3]
2287:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 8314              		.loc 1 2287 0
 8315 0498 BA8E     		ldrh	r2, [r7, #52]
 8316 049a 144B     		ldr	r3, .L391+4
 8317 049c 1B68     		ldr	r3, [r3]
 8318 049e 591C     		adds	r1, r3, #1
 8319 04a0 1248     		ldr	r0, .L391+4
 8320 04a2 0160     		str	r1, [r0]
 8321 04a4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 189


 8322 04a6 3A8E     		ldrh	r2, [r7, #48]	@ movhi
 8323 04a8 D1B2     		uxtb	r1, r2
 8324 04aa 144A     		ldr	r2, .L391+20
 8325 04ac D154     		strb	r1, [r2, r3]
 8326              	.LBE44:
 8327 04ae 14E0     		b	.L356
 8328              	.L362:
2288:main.c        **** 
2289:main.c        ****                     }
2290:main.c        ****                     else
2291:main.c        ****                     {
2292:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8329              		.loc 1 2292 0
 8330 04b0 BA8E     		ldrh	r2, [r7, #52]
 8331 04b2 0E4B     		ldr	r3, .L391+4
 8332 04b4 1B68     		ldr	r3, [r3]
 8333 04b6 591C     		adds	r1, r3, #1
 8334 04b8 0C48     		ldr	r0, .L391+4
 8335 04ba 0160     		str	r1, [r0]
 8336 04bc D418     		adds	r4, r2, r3
 8337 04be 3B69     		ldr	r3, [r7, #16]	@ float
 8338 04c0 1846     		mov	r0, r3
 8339 04c2 FFF7FEFF 		bl	__aeabi_f2uiz
 8340 04c6 0346     		mov	r3, r0
 8341 04c8 DAB2     		uxtb	r2, r3
 8342 04ca 0C4B     		ldr	r3, .L391+20
 8343 04cc 1A55     		strb	r2, [r3, r4]
2293:main.c        ****                         numMappings++;
 8344              		.loc 1 2293 0
 8345 04ce 144B     		ldr	r3, .L391+56
 8346 04d0 1B88     		ldrh	r3, [r3]
 8347 04d2 0133     		adds	r3, r3, #1
 8348 04d4 9AB2     		uxth	r2, r3
 8349 04d6 124B     		ldr	r3, .L391+56
 8350 04d8 1A80     		strh	r2, [r3]	@ movhi
 8351              	.L356:
2294:main.c        ****                     }
2295:main.c        ****                     mapCount++;
 8352              		.loc 1 2295 0
 8353 04da 0A4B     		ldr	r3, .L391+28
 8354 04dc 1B68     		ldr	r3, [r3]
 8355 04de 0133     		adds	r3, r3, #1
 8356 04e0 084A     		ldr	r2, .L391+28
 8357 04e2 1360     		str	r3, [r2]
 8358 04e4 6DE0     		b	.L352
 8359              	.L392:
 8360 04e6 00BF     		.align	2
 8361              	.L391:
 8362 04e8 00000000 		.word	valsCount
 8363 04ec 00000000 		.word	currentFloat
 8364 04f0 00000000 		.word	valCheck
 8365 04f4 0000C0BF 		.word	-1077936128
 8366 04f8 000020C0 		.word	-1071644672
 8367 04fc 00000000 		.word	presetArray
 8368 0500 00000000 		.word	presetArraySection
 8369 0504 00000000 		.word	mapCount
 8370 0508 00000000 		.word	SPI_errors
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 190


 8371 050c 00000000 		.word	sysexMessageInProgress
 8372 0510 00000000 		.word	sysexPointer
 8373 0514 00000000 		.word	sendingMessage
 8374 0518 00000000 		.word	parseThatMF
 8375 051c 00000000 		.word	mapCountExpectation
 8376 0520 00000000 		.word	numMappings
 8377 0524 CDCCCCCC 		.word	-858993459
 8378 0528 00FEFF46 		.word	1191181824
 8379              	.L354:
2296:main.c        ****                 }
2297:main.c        ****                 
2298:main.c        **** 
2299:main.c        ****                 else
2300:main.c        ****                 {
2301:main.c        ****                     //mapcount ended
2302:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 8380              		.loc 1 2302 0
 8381 052c 3B69     		ldr	r3, [r7, #16]	@ float
 8382 052e 6649     		ldr	r1, .L393
 8383 0530 1846     		mov	r0, r3
 8384 0532 FFF7FEFF 		bl	__aeabi_fcmplt
 8385 0536 0346     		mov	r3, r0
 8386 0538 002B     		cmp	r3, #0
 8387 053a 31D0     		beq	.L363
 8388              		.loc 1 2302 0 is_stmt 0 discriminator 1
 8389 053c 3B69     		ldr	r3, [r7, #16]	@ float
 8390 053e 6349     		ldr	r1, .L393+4
 8391 0540 1846     		mov	r0, r3
 8392 0542 FFF7FEFF 		bl	__aeabi_fcmpgt
 8393 0546 0346     		mov	r3, r0
 8394 0548 002B     		cmp	r3, #0
 8395 054a 29D0     		beq	.L363
2303:main.c        ****                     {
2304:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8396              		.loc 1 2304 0 is_stmt 1
 8397 054c BA8E     		ldrh	r2, [r7, #52]
 8398 054e 604B     		ldr	r3, .L393+8
 8399 0550 1B68     		ldr	r3, [r3]
 8400 0552 591C     		adds	r1, r3, #1
 8401 0554 5E48     		ldr	r0, .L393+8
 8402 0556 0160     		str	r1, [r0]
 8403 0558 1344     		add	r3, r3, r2
 8404 055a 5E4A     		ldr	r2, .L393+12
 8405 055c FE21     		movs	r1, #254
 8406 055e D154     		strb	r1, [r2, r3]
2305:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8407              		.loc 1 2305 0
 8408 0560 BA8E     		ldrh	r2, [r7, #52]
 8409 0562 5B4B     		ldr	r3, .L393+8
 8410 0564 1B68     		ldr	r3, [r3]
 8411 0566 591C     		adds	r1, r3, #1
 8412 0568 5948     		ldr	r0, .L393+8
 8413 056a 0160     		str	r1, [r0]
 8414 056c 1344     		add	r3, r3, r2
 8415 056e 594A     		ldr	r2, .L393+12
 8416 0570 FE21     		movs	r1, #254
 8417 0572 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 191


2306:main.c        ****                         presetArraySection = presetEnd;
 8418              		.loc 1 2306 0
 8419 0574 584B     		ldr	r3, .L393+16
 8420 0576 0522     		movs	r2, #5
 8421 0578 1A70     		strb	r2, [r3]
2307:main.c        ****                         sysexMessageInProgress = 0;
 8422              		.loc 1 2307 0
 8423 057a 584B     		ldr	r3, .L393+20
 8424 057c 0022     		movs	r2, #0
 8425 057e 1A70     		strb	r2, [r3]
2308:main.c        ****                         sendingMessage = 1;
 8426              		.loc 1 2308 0
 8427 0580 574B     		ldr	r3, .L393+24
 8428 0582 0122     		movs	r2, #1
 8429 0584 1A70     		strb	r2, [r3]
2309:main.c        ****                         patchNum = presetNumberToWrite;
 8430              		.loc 1 2309 0
 8431 0586 574B     		ldr	r3, .L393+28
 8432 0588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8433 058a 574B     		ldr	r3, .L393+32
 8434 058c 1A70     		strb	r2, [r3]
2310:main.c        ****                         messageArraySize = valsStart + currentFloat;
 8435              		.loc 1 2310 0
 8436 058e 504B     		ldr	r3, .L393+8
 8437 0590 1B68     		ldr	r3, [r3]
 8438 0592 9AB2     		uxth	r2, r3
 8439 0594 BB8E     		ldrh	r3, [r7, #52]	@ movhi
 8440 0596 1344     		add	r3, r3, r2
 8441 0598 9AB2     		uxth	r2, r3
 8442 059a 544B     		ldr	r3, .L393+36
 8443 059c 1A80     		strh	r2, [r3]	@ movhi
 8444 059e 10E0     		b	.L352
 8445              	.L363:
2311:main.c        ****                     }
2312:main.c        ****                     else
2313:main.c        ****                     {
2314:main.c        ****                         //error state
2315:main.c        ****                         SPI_errors++;
 8446              		.loc 1 2315 0
 8447 05a0 534B     		ldr	r3, .L393+40
 8448 05a2 1B68     		ldr	r3, [r3]
 8449 05a4 0133     		adds	r3, r3, #1
 8450 05a6 524A     		ldr	r2, .L393+40
 8451 05a8 1360     		str	r3, [r2]
2316:main.c        ****                         sysexMessageInProgress = 0;
 8452              		.loc 1 2316 0
 8453 05aa 4C4B     		ldr	r3, .L393+20
 8454 05ac 0022     		movs	r2, #0
 8455 05ae 1A70     		strb	r2, [r3]
2317:main.c        ****                         sysexPointer = 0;
 8456              		.loc 1 2317 0
 8457 05b0 504B     		ldr	r3, .L393+44
 8458 05b2 0022     		movs	r2, #0
 8459 05b4 1A60     		str	r2, [r3]
2318:main.c        ****                         sendingMessage = 0;
 8460              		.loc 1 2318 0
 8461 05b6 4A4B     		ldr	r3, .L393+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 192


 8462 05b8 0022     		movs	r2, #0
 8463 05ba 1A70     		strb	r2, [r3]
2319:main.c        ****                         parseThatMF = 0;
 8464              		.loc 1 2319 0
 8465 05bc 4E4B     		ldr	r3, .L393+48
 8466 05be 0022     		movs	r2, #0
 8467 05c0 1A70     		strb	r2, [r3]
 8468              	.L352:
2205:main.c        ****         {
 8469              		.loc 1 2205 0
 8470 05c2 FB6C     		ldr	r3, [r7, #76]
 8471 05c4 0533     		adds	r3, r3, #5
 8472 05c6 FB64     		str	r3, [r7, #76]
 8473              	.L344:
2205:main.c        ****         {
 8474              		.loc 1 2205 0 is_stmt 0 discriminator 1
 8475 05c8 4A4B     		ldr	r3, .L393+44
 8476 05ca 1B68     		ldr	r3, [r3]
 8477 05cc FA6C     		ldr	r2, [r7, #76]
 8478 05ce 9A42     		cmp	r2, r3
 8479 05d0 FFF4B0AD 		bcc	.L366
 8480 05d4 F0E2     		b	.L367
 8481              	.L337:
 8482              	.LBE40:
2320:main.c        ****                     }
2321:main.c        ****                 }
2322:main.c        ****             }
2323:main.c        ****             
2324:main.c        ****         }
2325:main.c        ****     }
2326:main.c        ****     #if 0
2327:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2328:main.c        ****     {
2329:main.c        ****         
2330:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
2331:main.c        ****         currentFloat = 0;
2332:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2333:main.c        ****         union breakFloat theVal;
2334:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2335:main.c        ****         {
2336:main.c        ****             theVal.u32 = 0;
2337:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2338:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2339:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2340:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2341:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
2342:main.c        ****             testVal = theVal.f;
2343:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2344:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2345:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2346:main.c        ****         }
2347:main.c        ****         
2348:main.c        ****         tuningArray[currentFloat++] = 0xef;
2349:main.c        ****         tuningArray[currentFloat++] = 0xef;
2350:main.c        ****                         
2351:main.c        ****         
2352:main.c        ****         messageArraySize = currentFloat;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 193


2353:main.c        ****                     
2354:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
2355:main.c        ****         {
2356:main.c        ****             //error state
2357:main.c        ****             SPI_errors++;
2358:main.c        ****             sysexMessageInProgress = 0;
2359:main.c        ****             sysexPointer = 0;
2360:main.c        ****             sendingMessage = 0;
2361:main.c        ****             parseThatMF = 0;
2362:main.c        ****         } else 
2363:main.c        ****         {
2364:main.c        ****             sysexMessageInProgress = 0;
2365:main.c        ****             sendingMessage = 2;
2366:main.c        ****         }
2367:main.c        ****     }
2368:main.c        ****     #endif
2369:main.c        ****     
2370:main.c        **** 
2371:main.c        ****     
2372:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 8483              		.loc 1 2372 0 is_stmt 1
 8484 05d6 494B     		ldr	r3, .L393+52
 8485 05d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8486 05da 022B     		cmp	r3, #2
 8487 05dc 40F08281 		bne	.L368
 8488              	.LBB45:
2373:main.c        ****     {
2374:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8489              		.loc 1 2374 0
 8490 05e0 3E4B     		ldr	r3, .L393+20
 8491 05e2 0122     		movs	r2, #1
 8492 05e4 1A70     		strb	r2, [r3]
2375:main.c        ****         currentFloat = 0;
 8493              		.loc 1 2375 0
 8494 05e6 3A4B     		ldr	r3, .L393+8
 8495 05e8 0022     		movs	r2, #0
 8496 05ea 1A60     		str	r2, [r3]
2376:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 8497              		.loc 1 2376 0
 8498 05ec 434B     		ldr	r3, .L393+52
 8499 05ee 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8500 05f0 434B     		ldr	r3, .L393+56
 8501 05f2 1A70     		strb	r2, [r3]
2377:main.c        ****         currentCopedent = copedentNumberToWrite;
 8502              		.loc 1 2377 0
 8503 05f4 424B     		ldr	r3, .L393+56
 8504 05f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8505 05f8 424B     		ldr	r3, .L393+60
 8506 05fa 1A70     		strb	r2, [r3]
2378:main.c        ****         necks[currentNeck] = currentCopedent;
 8507              		.loc 1 2378 0
 8508 05fc 424B     		ldr	r3, .L393+64
 8509 05fe 1B68     		ldr	r3, [r3]
 8510 0600 404A     		ldr	r2, .L393+60
 8511 0602 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 8512 0604 414A     		ldr	r2, .L393+68
 8513 0606 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 194


2379:main.c        **** 
2380:main.c        ****               
2381:main.c        ****         
2382:main.c        ****         union breakFloat theVal;
2383:main.c        ****         uint32_t i = 2;
 8514              		.loc 1 2383 0
 8515 0608 0223     		movs	r3, #2
 8516 060a 3B64     		str	r3, [r7, #64]
2384:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 8517              		.loc 1 2384 0
 8518 060c 1023     		movs	r3, #16
 8519 060e 87F82F30 		strb	r3, [r7, #47]
2385:main.c        ****         for (; i < stoppingPoint; i++)
 8520              		.loc 1 2385 0
 8521 0612 43E0     		b	.L369
 8522              	.L370:
 8523              	.LBB46:
2386:main.c        ****         {
2387:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2388:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 8524              		.loc 1 2388 0 discriminator 2
 8525 0614 394A     		ldr	r2, .L393+52
 8526 0616 3B6C     		ldr	r3, [r7, #64]
 8527 0618 1344     		add	r3, r3, r2
 8528 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8529 061c 03F07F03 		and	r3, r3, #127
 8530 0620 87F82E30 		strb	r3, [r7, #46]
2389:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 8531              		.loc 1 2389 0 discriminator 2
 8532 0624 364B     		ldr	r3, .L393+56
 8533 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8534 0628 1846     		mov	r0, r3
 8535 062a 3B6C     		ldr	r3, [r7, #64]
 8536 062c 9A1E     		subs	r2, r3, #2
 8537 062e 3849     		ldr	r1, .L393+72
 8538 0630 0346     		mov	r3, r0
 8539 0632 DB00     		lsls	r3, r3, #3
 8540 0634 1B1A     		subs	r3, r3, r0
 8541 0636 5B00     		lsls	r3, r3, #1
 8542 0638 0B44     		add	r3, r3, r1
 8543 063a 1344     		add	r3, r3, r2
 8544 063c 97F82E20 		ldrb	r2, [r7, #46]
 8545 0640 1A70     		strb	r2, [r3]
2390:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 8546              		.loc 1 2390 0 discriminator 2
 8547 0642 2F4B     		ldr	r3, .L393+56
 8548 0644 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8549 0646 9BB2     		uxth	r3, r3
 8550 0648 1A46     		mov	r2, r3	@ movhi
 8551 064a 1201     		lsls	r2, r2, #4
 8552 064c 1A44     		add	r2, r2, r3
 8553 064e 9200     		lsls	r2, r2, #2
 8554 0650 1A44     		add	r2, r2, r3
 8555 0652 5200     		lsls	r2, r2, #1
 8556 0654 1344     		add	r3, r3, r2
 8557 0656 5B00     		lsls	r3, r3, #1
 8558 0658 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 195


 8559 065a 0233     		adds	r3, r3, #2
 8560 065c 9AB2     		uxth	r2, r3
 8561 065e 2D4B     		ldr	r3, .L393+76
 8562 0660 1A80     		strh	r2, [r3]	@ movhi
2391:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 8563              		.loc 1 2391 0 discriminator 2
 8564 0662 274B     		ldr	r3, .L393+56
 8565 0664 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8566 0666 9BB2     		uxth	r3, r3
 8567 0668 1A46     		mov	r2, r3	@ movhi
 8568 066a 1201     		lsls	r2, r2, #4
 8569 066c 1A44     		add	r2, r2, r3
 8570 066e 9200     		lsls	r2, r2, #2
 8571 0670 1A44     		add	r2, r2, r3
 8572 0672 5200     		lsls	r2, r2, #1
 8573 0674 1344     		add	r3, r3, r2
 8574 0676 5B00     		lsls	r3, r3, #1
 8575 0678 9AB2     		uxth	r2, r3
 8576 067a 3B6C     		ldr	r3, [r7, #64]
 8577 067c 9BB2     		uxth	r3, r3
 8578 067e 1344     		add	r3, r3, r2
 8579 0680 9AB2     		uxth	r2, r3
 8580 0682 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 8581 0686 1146     		mov	r1, r2
 8582 0688 1846     		mov	r0, r3
 8583 068a FFF7FEFF 		bl	EEPROM_WriteByte
 8584 068e 0346     		mov	r3, r0
 8585 0690 DAB2     		uxtb	r2, r3
 8586 0692 214B     		ldr	r3, .L393+80
 8587 0694 1A70     		strb	r2, [r3]
 8588              	.LBE46:
2385:main.c        ****         {
 8589              		.loc 1 2385 0 discriminator 2
 8590 0696 3B6C     		ldr	r3, [r7, #64]
 8591 0698 0133     		adds	r3, r3, #1
 8592 069a 3B64     		str	r3, [r7, #64]
 8593              	.L369:
2385:main.c        ****         {
 8594              		.loc 1 2385 0 is_stmt 0 discriminator 1
 8595 069c 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 8596 06a0 3B6C     		ldr	r3, [r7, #64]
 8597 06a2 9A42     		cmp	r2, r3
 8598 06a4 B6D8     		bhi	.L370
2392:main.c        ****         }
2393:main.c        ****         
2394:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 8599              		.loc 1 2394 0 is_stmt 1
 8600 06a6 1023     		movs	r3, #16
 8601 06a8 3B64     		str	r3, [r7, #64]
2395:main.c        **** 
2396:main.c        ****  
2397:main.c        ****         while(i < sysexPointer)
 8602              		.loc 1 2397 0
 8603 06aa DCE0     		b	.L371
 8604              	.L376:
 8605              	.LBB47:
2398:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 196


2399:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 8606              		.loc 1 2399 0
 8607 06ac 0023     		movs	r3, #0
 8608 06ae FB63     		str	r3, [r7, #60]
 8609 06b0 D5E0     		b	.L372
 8610              	.L375:
 8611              	.LBB48:
2400:main.c        ****             {
2401:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 8612              		.loc 1 2401 0
 8613 06b2 FB6B     		ldr	r3, [r7, #60]
 8614 06b4 9BB2     		uxth	r3, r3
 8615 06b6 1A46     		mov	r2, r3	@ movhi
 8616 06b8 5200     		lsls	r2, r2, #1
 8617 06ba 1344     		add	r3, r3, r2
 8618 06bc DB00     		lsls	r3, r3, #3
 8619 06be BB85     		strh	r3, [r7, #44]	@ movhi
 8620              	.LBB49:
2402:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 8621              		.loc 1 2402 0
 8622 06c0 0023     		movs	r3, #0
 8623 06c2 BB63     		str	r3, [r7, #56]
 8624 06c4 C4E0     		b	.L373
 8625              	.L394:
 8626 06c6 00BF     		.align	2
 8627              	.L393:
 8628 06c8 000020C0 		.word	-1071644672
 8629 06cc 000060C0 		.word	-1067450368
 8630 06d0 00000000 		.word	currentFloat
 8631 06d4 00000000 		.word	presetArray
 8632 06d8 00000000 		.word	presetArraySection
 8633 06dc 00000000 		.word	sysexMessageInProgress
 8634 06e0 00000000 		.word	sendingMessage
 8635 06e4 00000000 		.word	presetNumberToWrite
 8636 06e8 00000000 		.word	patchNum
 8637 06ec 00000000 		.word	messageArraySize
 8638 06f0 00000000 		.word	SPI_errors
 8639 06f4 00000000 		.word	sysexPointer
 8640 06f8 00000000 		.word	parseThatMF
 8641 06fc 00000000 		.word	sysexBuffer
 8642 0700 00000000 		.word	copedentNumberToWrite
 8643 0704 00000000 		.word	currentCopedent
 8644 0708 00000000 		.word	currentNeck
 8645 070c 00000000 		.word	necks
 8646 0710 00000000 		.word	copedentNamesArray
 8647 0714 00000000 		.word	checkBase
 8648 0718 00000000 		.word	checkStatus
 8649              	.L374:
 8650              	.LBB50:
2403:main.c        ****                 {
2404:main.c        ****                     
2405:main.c        ****                     theVal.u32 = 0;
 8651              		.loc 1 2405 0 discriminator 3
 8652 071c 0023     		movs	r3, #0
 8653 071e FB60     		str	r3, [r7, #12]
2406:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8654              		.loc 1 2406 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 197


 8655 0720 FB68     		ldr	r3, [r7, #12]
 8656 0722 6449     		ldr	r1, .L395
 8657 0724 3A6C     		ldr	r2, [r7, #64]
 8658 0726 0A44     		add	r2, r2, r1
 8659 0728 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8660 072a 1207     		lsls	r2, r2, #28
 8661 072c 1343     		orrs	r3, r3, r2
 8662 072e FB60     		str	r3, [r7, #12]
2407:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 8663              		.loc 1 2407 0 discriminator 3
 8664 0730 FB68     		ldr	r3, [r7, #12]
 8665 0732 3A6C     		ldr	r2, [r7, #64]
 8666 0734 0132     		adds	r2, r2, #1
 8667 0736 5F49     		ldr	r1, .L395
 8668 0738 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8669 073a 5205     		lsls	r2, r2, #21
 8670 073c 1343     		orrs	r3, r3, r2
 8671 073e FB60     		str	r3, [r7, #12]
2408:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 8672              		.loc 1 2408 0 discriminator 3
 8673 0740 FB68     		ldr	r3, [r7, #12]
 8674 0742 3A6C     		ldr	r2, [r7, #64]
 8675 0744 0232     		adds	r2, r2, #2
 8676 0746 5B49     		ldr	r1, .L395
 8677 0748 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8678 074a 9203     		lsls	r2, r2, #14
 8679 074c 1343     		orrs	r3, r3, r2
 8680 074e FB60     		str	r3, [r7, #12]
2409:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 8681              		.loc 1 2409 0 discriminator 3
 8682 0750 FB68     		ldr	r3, [r7, #12]
 8683 0752 3A6C     		ldr	r2, [r7, #64]
 8684 0754 0332     		adds	r2, r2, #3
 8685 0756 5749     		ldr	r1, .L395
 8686 0758 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8687 075a D201     		lsls	r2, r2, #7
 8688 075c 1343     		orrs	r3, r3, r2
 8689 075e FB60     		str	r3, [r7, #12]
2410:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 8690              		.loc 1 2410 0 discriminator 3
 8691 0760 FA68     		ldr	r2, [r7, #12]
 8692 0762 3B6C     		ldr	r3, [r7, #64]
 8693 0764 0433     		adds	r3, r3, #4
 8694 0766 5349     		ldr	r1, .L395
 8695 0768 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8696 076a 03F07F03 		and	r3, r3, #127
 8697 076e 1343     		orrs	r3, r3, r2
 8698 0770 FB60     		str	r3, [r7, #12]
2411:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 8699              		.loc 1 2411 0 discriminator 3
 8700 0772 514B     		ldr	r3, .L395+4
 8701 0774 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8702 0776 1C46     		mov	r4, r3
 8703 0778 F968     		ldr	r1, [r7, #12]	@ float
 8704 077a 5048     		ldr	r0, .L395+8
 8705 077c FB6B     		ldr	r3, [r7, #60]
 8706 077e 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 198


 8707 0780 5200     		lsls	r2, r2, #1
 8708 0782 1A44     		add	r2, r2, r3
 8709 0784 9300     		lsls	r3, r2, #2
 8710 0786 1A46     		mov	r2, r3
 8711 0788 2346     		mov	r3, r4
 8712 078a 5B01     		lsls	r3, r3, #5
 8713 078c 2344     		add	r3, r3, r4
 8714 078e 9B00     		lsls	r3, r3, #2
 8715 0790 1A44     		add	r2, r2, r3
 8716 0792 BB6B     		ldr	r3, [r7, #56]
 8717 0794 1344     		add	r3, r3, r2
 8718 0796 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2412:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 8719              		.loc 1 2412 0 discriminator 3
 8720 079a FB68     		ldr	r3, [r7, #12]	@ float
 8721 079c 4FF08741 		mov	r1, #1132462080
 8722 07a0 1846     		mov	r0, r3
 8723 07a2 FFF7FEFF 		bl	__aeabi_fmul
 8724 07a6 0346     		mov	r3, r0
 8725 07a8 4FF08E41 		mov	r1, #1191182336
 8726 07ac 1846     		mov	r0, r3
 8727 07ae FFF7FEFF 		bl	__aeabi_fadd
 8728 07b2 0346     		mov	r3, r0
 8729 07b4 1846     		mov	r0, r3
 8730 07b6 FFF7FEFF 		bl	__aeabi_f2uiz
 8731 07ba 0346     		mov	r3, r0
 8732 07bc 7B85     		strh	r3, [r7, #42]	@ movhi
2413:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 8733              		.loc 1 2413 0 discriminator 3
 8734 07be 7B8D     		ldrh	r3, [r7, #42]
 8735 07c0 1B0A     		lsrs	r3, r3, #8
 8736 07c2 9BB2     		uxth	r3, r3
 8737 07c4 87F82930 		strb	r3, [r7, #41]
2414:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 8738              		.loc 1 2414 0 discriminator 3
 8739 07c8 7B8D     		ldrh	r3, [r7, #42]	@ movhi
 8740 07ca 87F82830 		strb	r3, [r7, #40]
2415:main.c        ****                     
2416:main.c        ****                     
2417:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 8741              		.loc 1 2417 0 discriminator 3
 8742 07ce BB6B     		ldr	r3, [r7, #56]
 8743 07d0 9BB2     		uxth	r3, r3
 8744 07d2 5B00     		lsls	r3, r3, #1
 8745 07d4 FB84     		strh	r3, [r7, #38]	@ movhi
2418:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 8746              		.loc 1 2418 0 discriminator 3
 8747 07d6 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 8748 07d8 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 8749 07da 1344     		add	r3, r3, r2
 8750 07dc 9AB2     		uxth	r2, r3
 8751 07de 364B     		ldr	r3, .L395+4
 8752 07e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8753 07e2 9BB2     		uxth	r3, r3
 8754 07e4 1946     		mov	r1, r3	@ movhi
 8755 07e6 0901     		lsls	r1, r1, #4
 8756 07e8 1944     		add	r1, r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 199


 8757 07ea 8900     		lsls	r1, r1, #2
 8758 07ec 1944     		add	r1, r1, r3
 8759 07ee 4900     		lsls	r1, r1, #1
 8760 07f0 0B44     		add	r3, r3, r1
 8761 07f2 5B00     		lsls	r3, r3, #1
 8762 07f4 9BB2     		uxth	r3, r3
 8763 07f6 1344     		add	r3, r3, r2
 8764 07f8 9BB2     		uxth	r3, r3
 8765 07fa 1033     		adds	r3, r3, #16
 8766 07fc 9AB2     		uxth	r2, r3
 8767 07fe 304B     		ldr	r3, .L395+12
 8768 0800 1A80     		strh	r2, [r3]	@ movhi
2419:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 8769              		.loc 1 2419 0 discriminator 3
 8770 0802 2F4B     		ldr	r3, .L395+12
 8771 0804 1B88     		ldrh	r3, [r3]	@ movhi
 8772 0806 9AB2     		uxth	r2, r3
 8773 0808 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 8774 080c 1146     		mov	r1, r2
 8775 080e 1846     		mov	r0, r3
 8776 0810 FFF7FEFF 		bl	EEPROM_WriteByte
 8777 0814 0346     		mov	r3, r0
 8778 0816 DAB2     		uxtb	r2, r3
 8779 0818 2A4B     		ldr	r3, .L395+16
 8780 081a 1A70     		strb	r2, [r3]
2420:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 8781              		.loc 1 2420 0 discriminator 3
 8782 081c 284B     		ldr	r3, .L395+12
 8783 081e 1B88     		ldrh	r3, [r3]	@ movhi
 8784 0820 9BB2     		uxth	r3, r3
 8785 0822 0133     		adds	r3, r3, #1
 8786 0824 9AB2     		uxth	r2, r3
 8787 0826 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 8788 082a 1146     		mov	r1, r2
 8789 082c 1846     		mov	r0, r3
 8790 082e FFF7FEFF 		bl	EEPROM_WriteByte
 8791 0832 0346     		mov	r3, r0
 8792 0834 DAB2     		uxtb	r2, r3
 8793 0836 234B     		ldr	r3, .L395+16
 8794 0838 1A70     		strb	r2, [r3]
2421:main.c        ****                     currentFloat++;
 8795              		.loc 1 2421 0 discriminator 3
 8796 083a 234B     		ldr	r3, .L395+20
 8797 083c 1B68     		ldr	r3, [r3]
 8798 083e 0133     		adds	r3, r3, #1
 8799 0840 214A     		ldr	r2, .L395+20
 8800 0842 1360     		str	r3, [r2]
2422:main.c        ****                     i = i+5;
 8801              		.loc 1 2422 0 discriminator 3
 8802 0844 3B6C     		ldr	r3, [r7, #64]
 8803 0846 0533     		adds	r3, r3, #5
 8804 0848 3B64     		str	r3, [r7, #64]
 8805              	.LBE50:
2402:main.c        ****                 {
 8806              		.loc 1 2402 0 discriminator 3
 8807 084a BB6B     		ldr	r3, [r7, #56]
 8808 084c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 200


 8809 084e BB63     		str	r3, [r7, #56]
 8810              	.L373:
2402:main.c        ****                 {
 8811              		.loc 1 2402 0 is_stmt 0 discriminator 1
 8812 0850 BB6B     		ldr	r3, [r7, #56]
 8813 0852 0B2B     		cmp	r3, #11
 8814 0854 7FF662AF 		bls	.L374
 8815              	.LBE49:
 8816              	.LBE48:
2399:main.c        ****             {
 8817              		.loc 1 2399 0 is_stmt 1 discriminator 2
 8818 0858 FB6B     		ldr	r3, [r7, #60]
 8819 085a 0133     		adds	r3, r3, #1
 8820 085c FB63     		str	r3, [r7, #60]
 8821              	.L372:
2399:main.c        ****             {
 8822              		.loc 1 2399 0 is_stmt 0 discriminator 1
 8823 085e FB6B     		ldr	r3, [r7, #60]
 8824 0860 0A2B     		cmp	r3, #10
 8825 0862 7FF626AF 		bls	.L375
 8826              	.L371:
 8827              	.LBE47:
2397:main.c        ****         {
 8828              		.loc 1 2397 0 is_stmt 1
 8829 0866 194B     		ldr	r3, .L395+24
 8830 0868 1B68     		ldr	r3, [r3]
 8831 086a 3A6C     		ldr	r2, [r7, #64]
 8832 086c 9A42     		cmp	r2, r3
 8833 086e FFF41DAF 		bcc	.L376
2423:main.c        ****                 }
2424:main.c        ****                 
2425:main.c        ****             }
2426:main.c        ****         }
2427:main.c        ****                         
2428:main.c        ****         
2429:main.c        ****         messageArraySize = currentFloat;
 8834              		.loc 1 2429 0
 8835 0872 154B     		ldr	r3, .L395+20
 8836 0874 1B68     		ldr	r3, [r3]
 8837 0876 9AB2     		uxth	r2, r3
 8838 0878 154B     		ldr	r3, .L395+28
 8839 087a 1A80     		strh	r2, [r3]	@ movhi
2430:main.c        ****                     
2431:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 8840              		.loc 1 2431 0
 8841 087c 144B     		ldr	r3, .L395+28
 8842 087e 1B88     		ldrh	r3, [r3]
 8843 0880 842B     		cmp	r3, #132
 8844 0882 11D0     		beq	.L377
2432:main.c        ****         {
2433:main.c        ****             //error state
2434:main.c        ****             SPI_errors++;
 8845              		.loc 1 2434 0
 8846 0884 134B     		ldr	r3, .L395+32
 8847 0886 1B68     		ldr	r3, [r3]
 8848 0888 0133     		adds	r3, r3, #1
 8849 088a 124A     		ldr	r2, .L395+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 201


 8850 088c 1360     		str	r3, [r2]
2435:main.c        ****             sysexMessageInProgress = 0;
 8851              		.loc 1 2435 0
 8852 088e 124B     		ldr	r3, .L395+36
 8853 0890 0022     		movs	r2, #0
 8854 0892 1A70     		strb	r2, [r3]
2436:main.c        ****             sysexPointer = 0;
 8855              		.loc 1 2436 0
 8856 0894 0D4B     		ldr	r3, .L395+24
 8857 0896 0022     		movs	r2, #0
 8858 0898 1A60     		str	r2, [r3]
2437:main.c        ****             sendingMessage = 0;
 8859              		.loc 1 2437 0
 8860 089a 104B     		ldr	r3, .L395+40
 8861 089c 0022     		movs	r2, #0
 8862 089e 1A70     		strb	r2, [r3]
2438:main.c        ****             parseThatMF = 0;
 8863              		.loc 1 2438 0
 8864 08a0 0F4B     		ldr	r3, .L395+44
 8865 08a2 0022     		movs	r2, #0
 8866 08a4 1A70     		strb	r2, [r3]
 8867 08a6 87E1     		b	.L367
 8868              	.L377:
2439:main.c        ****         } 
2440:main.c        ****         else 
2441:main.c        ****         {
2442:main.c        ****             sysexMessageInProgress = 0;
 8869              		.loc 1 2442 0
 8870 08a8 0B4B     		ldr	r3, .L395+36
 8871 08aa 0022     		movs	r2, #0
 8872 08ac 1A70     		strb	r2, [r3]
2443:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2444:main.c        ****             
2445:main.c        ****             displayCurrentPresetNameAndCopedent();
 8873              		.loc 1 2445 0
 8874 08ae FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 8875 08b2 81E1     		b	.L367
 8876              	.L396:
 8877              		.align	2
 8878              	.L395:
 8879 08b4 00000000 		.word	sysexBuffer
 8880 08b8 00000000 		.word	copedentNumberToWrite
 8881 08bc 00000000 		.word	copedent
 8882 08c0 00000000 		.word	checkBase
 8883 08c4 00000000 		.word	checkStatus
 8884 08c8 00000000 		.word	currentFloat
 8885 08cc 00000000 		.word	sysexPointer
 8886 08d0 00000000 		.word	messageArraySize
 8887 08d4 00000000 		.word	SPI_errors
 8888 08d8 00000000 		.word	sysexMessageInProgress
 8889 08dc 00000000 		.word	sendingMessage
 8890 08e0 00000000 		.word	parseThatMF
 8891              	.L368:
 8892              	.LBE45:
2446:main.c        ****         }
2447:main.c        ****     }
2448:main.c        ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 202


2449:main.c        ****     
2450:main.c        ****     else if (sysexBuffer[0] == 3) //it's a real-time parameter change
 8893              		.loc 1 2450 0
 8894 08e4 9F4B     		ldr	r3, .L397
 8895 08e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8896 08e8 032B     		cmp	r3, #3
 8897 08ea 40F08B80 		bne	.L379
 8898              	.LBB51:
2451:main.c        ****     {
2452:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8899              		.loc 1 2452 0
 8900 08ee 9E4B     		ldr	r3, .L397+4
 8901 08f0 0122     		movs	r2, #1
 8902 08f2 1A70     		strb	r2, [r3]
2453:main.c        ****         union breakFloat theVal;
2454:main.c        ****         uint32_t i = 2;
 8903              		.loc 1 2454 0
 8904 08f4 0223     		movs	r3, #2
 8905 08f6 3B62     		str	r3, [r7, #32]
2455:main.c        ****         
2456:main.c        ****         //get the parameter ID
2457:main.c        ****         theVal.u32 = 0;
 8906              		.loc 1 2457 0
 8907 08f8 0023     		movs	r3, #0
 8908 08fa BB60     		str	r3, [r7, #8]
2458:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8909              		.loc 1 2458 0
 8910 08fc BB68     		ldr	r3, [r7, #8]
 8911 08fe 9949     		ldr	r1, .L397
 8912 0900 3A6A     		ldr	r2, [r7, #32]
 8913 0902 0A44     		add	r2, r2, r1
 8914 0904 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8915 0906 1207     		lsls	r2, r2, #28
 8916 0908 1343     		orrs	r3, r3, r2
 8917 090a BB60     		str	r3, [r7, #8]
2459:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8918              		.loc 1 2459 0
 8919 090c BB68     		ldr	r3, [r7, #8]
 8920 090e 3A6A     		ldr	r2, [r7, #32]
 8921 0910 0132     		adds	r2, r2, #1
 8922 0912 9449     		ldr	r1, .L397
 8923 0914 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8924 0916 5205     		lsls	r2, r2, #21
 8925 0918 1343     		orrs	r3, r3, r2
 8926 091a BB60     		str	r3, [r7, #8]
2460:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8927              		.loc 1 2460 0
 8928 091c BB68     		ldr	r3, [r7, #8]
 8929 091e 3A6A     		ldr	r2, [r7, #32]
 8930 0920 0232     		adds	r2, r2, #2
 8931 0922 9049     		ldr	r1, .L397
 8932 0924 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8933 0926 9203     		lsls	r2, r2, #14
 8934 0928 1343     		orrs	r3, r3, r2
 8935 092a BB60     		str	r3, [r7, #8]
2461:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8936              		.loc 1 2461 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 203


 8937 092c BB68     		ldr	r3, [r7, #8]
 8938 092e 3A6A     		ldr	r2, [r7, #32]
 8939 0930 0332     		adds	r2, r2, #3
 8940 0932 8C49     		ldr	r1, .L397
 8941 0934 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8942 0936 D201     		lsls	r2, r2, #7
 8943 0938 1343     		orrs	r3, r3, r2
 8944 093a BB60     		str	r3, [r7, #8]
2462:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8945              		.loc 1 2462 0
 8946 093c BA68     		ldr	r2, [r7, #8]
 8947 093e 3B6A     		ldr	r3, [r7, #32]
 8948 0940 0433     		adds	r3, r3, #4
 8949 0942 8849     		ldr	r1, .L397
 8950 0944 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8951 0946 03F07F03 		and	r3, r3, #127
 8952 094a 1343     		orrs	r3, r3, r2
 8953 094c BB60     		str	r3, [r7, #8]
2463:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 8954              		.loc 1 2463 0
 8955 094e BB68     		ldr	r3, [r7, #8]	@ float
 8956 0950 1846     		mov	r0, r3
 8957 0952 FFF7FEFF 		bl	roundf
 8958 0956 0346     		mov	r3, r0
 8959 0958 1846     		mov	r0, r3
 8960 095a FFF7FEFF 		bl	__aeabi_f2uiz
 8961 095e 0346     		mov	r3, r0
 8962 0960 FB83     		strh	r3, [r7, #30]	@ movhi
2464:main.c        ****         singleParamToUpdateHigh = (roundedIndex << 8);
 8963              		.loc 1 2464 0
 8964 0962 824B     		ldr	r3, .L397+8
 8965 0964 0022     		movs	r2, #0
 8966 0966 1A70     		strb	r2, [r3]
2465:main.c        ****         singleParamToUpdateLow = roundedIndex & 0xff;
 8967              		.loc 1 2465 0
 8968 0968 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 8969 096a DAB2     		uxtb	r2, r3
 8970 096c 804B     		ldr	r3, .L397+12
 8971 096e 1A70     		strb	r2, [r3]
2466:main.c        ****         
2467:main.c        ****         i = i+5;
 8972              		.loc 1 2467 0
 8973 0970 3B6A     		ldr	r3, [r7, #32]
 8974 0972 0533     		adds	r3, r3, #5
 8975 0974 3B62     		str	r3, [r7, #32]
2468:main.c        ****         
2469:main.c        ****         //get the parameter value
2470:main.c        ****         theVal.u32 = 0;
 8976              		.loc 1 2470 0
 8977 0976 0023     		movs	r3, #0
 8978 0978 BB60     		str	r3, [r7, #8]
2471:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8979              		.loc 1 2471 0
 8980 097a BB68     		ldr	r3, [r7, #8]
 8981 097c 7949     		ldr	r1, .L397
 8982 097e 3A6A     		ldr	r2, [r7, #32]
 8983 0980 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 204


 8984 0982 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8985 0984 1207     		lsls	r2, r2, #28
 8986 0986 1343     		orrs	r3, r3, r2
 8987 0988 BB60     		str	r3, [r7, #8]
2472:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8988              		.loc 1 2472 0
 8989 098a BB68     		ldr	r3, [r7, #8]
 8990 098c 3A6A     		ldr	r2, [r7, #32]
 8991 098e 0132     		adds	r2, r2, #1
 8992 0990 7449     		ldr	r1, .L397
 8993 0992 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8994 0994 5205     		lsls	r2, r2, #21
 8995 0996 1343     		orrs	r3, r3, r2
 8996 0998 BB60     		str	r3, [r7, #8]
2473:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8997              		.loc 1 2473 0
 8998 099a BB68     		ldr	r3, [r7, #8]
 8999 099c 3A6A     		ldr	r2, [r7, #32]
 9000 099e 0232     		adds	r2, r2, #2
 9001 09a0 7049     		ldr	r1, .L397
 9002 09a2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9003 09a4 9203     		lsls	r2, r2, #14
 9004 09a6 1343     		orrs	r3, r3, r2
 9005 09a8 BB60     		str	r3, [r7, #8]
2474:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 9006              		.loc 1 2474 0
 9007 09aa BB68     		ldr	r3, [r7, #8]
 9008 09ac 3A6A     		ldr	r2, [r7, #32]
 9009 09ae 0332     		adds	r2, r2, #3
 9010 09b0 6C49     		ldr	r1, .L397
 9011 09b2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9012 09b4 D201     		lsls	r2, r2, #7
 9013 09b6 1343     		orrs	r3, r3, r2
 9014 09b8 BB60     		str	r3, [r7, #8]
2475:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9015              		.loc 1 2475 0
 9016 09ba BA68     		ldr	r2, [r7, #8]
 9017 09bc 3B6A     		ldr	r3, [r7, #32]
 9018 09be 0433     		adds	r3, r3, #4
 9019 09c0 6849     		ldr	r1, .L397
 9020 09c2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9021 09c4 03F07F03 		and	r3, r3, #127
 9022 09c8 1343     		orrs	r3, r3, r2
 9023 09ca BB60     		str	r3, [r7, #8]
2476:main.c        ****         
2477:main.c        ****         uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 9024              		.loc 1 2477 0
 9025 09cc BB68     		ldr	r3, [r7, #8]	@ float
 9026 09ce 6949     		ldr	r1, .L397+16
 9027 09d0 1846     		mov	r0, r3
 9028 09d2 FFF7FEFF 		bl	__aeabi_fmul
 9029 09d6 0346     		mov	r3, r0
 9030 09d8 1846     		mov	r0, r3
 9031 09da FFF7FEFF 		bl	__aeabi_f2uiz
 9032 09de 0346     		mov	r3, r0
 9033 09e0 BB83     		strh	r3, [r7, #28]	@ movhi
2478:main.c        ****         singleParamValueHigh = intVal >> 8;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 205


 9034              		.loc 1 2478 0
 9035 09e2 BB8B     		ldrh	r3, [r7, #28]
 9036 09e4 1B0A     		lsrs	r3, r3, #8
 9037 09e6 9BB2     		uxth	r3, r3
 9038 09e8 DAB2     		uxtb	r2, r3
 9039 09ea 634B     		ldr	r3, .L397+20
 9040 09ec 1A70     		strb	r2, [r3]
2479:main.c        ****         singleParamValueLow = intVal & 0xff;
 9041              		.loc 1 2479 0
 9042 09ee BB8B     		ldrh	r3, [r7, #28]	@ movhi
 9043 09f0 DAB2     		uxtb	r2, r3
 9044 09f2 624B     		ldr	r3, .L397+24
 9045 09f4 1A70     		strb	r2, [r3]
2480:main.c        ****         
2481:main.c        ****         sysexMessageInProgress = 0;
 9046              		.loc 1 2481 0
 9047 09f6 5C4B     		ldr	r3, .L397+4
 9048 09f8 0022     		movs	r2, #0
 9049 09fa 1A70     		strb	r2, [r3]
2482:main.c        ****         sendSingleParamUpdate = 1;
 9050              		.loc 1 2482 0
 9051 09fc 604B     		ldr	r3, .L397+28
 9052 09fe 0122     		movs	r2, #1
 9053 0a00 1A70     		strb	r2, [r3]
 9054              	.LBE51:
 9055 0a02 D9E0     		b	.L367
 9056              	.L379:
2483:main.c        ****     }
2484:main.c        ****     
2485:main.c        ****      else if (sysexBuffer[0] == 4) //it's a real-time mapping change
 9057              		.loc 1 2485 0
 9058 0a04 574B     		ldr	r3, .L397
 9059 0a06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9060 0a08 042B     		cmp	r3, #4
 9061 0a0a 40F0D580 		bne	.L367
 9062              	.LBB52:
2486:main.c        ****     {
2487:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 9063              		.loc 1 2487 0
 9064 0a0e 564B     		ldr	r3, .L397+4
 9065 0a10 0122     		movs	r2, #1
 9066 0a12 1A70     		strb	r2, [r3]
2488:main.c        ****         union breakFloat theVal;
2489:main.c        ****         uint32_t i = 2;
 9067              		.loc 1 2489 0
 9068 0a14 0223     		movs	r3, #2
 9069 0a16 BB61     		str	r3, [r7, #24]
2490:main.c        ****         
2491:main.c        ****         //get the destination number
2492:main.c        ****         theVal.u32 = 0;
 9070              		.loc 1 2492 0
 9071 0a18 0023     		movs	r3, #0
 9072 0a1a 7B60     		str	r3, [r7, #4]
2493:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 9073              		.loc 1 2493 0
 9074 0a1c 7B68     		ldr	r3, [r7, #4]
 9075 0a1e 5149     		ldr	r1, .L397
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 206


 9076 0a20 BA69     		ldr	r2, [r7, #24]
 9077 0a22 0A44     		add	r2, r2, r1
 9078 0a24 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9079 0a26 1207     		lsls	r2, r2, #28
 9080 0a28 1343     		orrs	r3, r3, r2
 9081 0a2a 7B60     		str	r3, [r7, #4]
2494:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 9082              		.loc 1 2494 0
 9083 0a2c 7B68     		ldr	r3, [r7, #4]
 9084 0a2e BA69     		ldr	r2, [r7, #24]
 9085 0a30 0132     		adds	r2, r2, #1
 9086 0a32 4C49     		ldr	r1, .L397
 9087 0a34 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9088 0a36 5205     		lsls	r2, r2, #21
 9089 0a38 1343     		orrs	r3, r3, r2
 9090 0a3a 7B60     		str	r3, [r7, #4]
2495:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 9091              		.loc 1 2495 0
 9092 0a3c 7B68     		ldr	r3, [r7, #4]
 9093 0a3e BA69     		ldr	r2, [r7, #24]
 9094 0a40 0232     		adds	r2, r2, #2
 9095 0a42 4849     		ldr	r1, .L397
 9096 0a44 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9097 0a46 9203     		lsls	r2, r2, #14
 9098 0a48 1343     		orrs	r3, r3, r2
 9099 0a4a 7B60     		str	r3, [r7, #4]
2496:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 9100              		.loc 1 2496 0
 9101 0a4c 7B68     		ldr	r3, [r7, #4]
 9102 0a4e BA69     		ldr	r2, [r7, #24]
 9103 0a50 0332     		adds	r2, r2, #3
 9104 0a52 4449     		ldr	r1, .L397
 9105 0a54 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9106 0a56 D201     		lsls	r2, r2, #7
 9107 0a58 1343     		orrs	r3, r3, r2
 9108 0a5a 7B60     		str	r3, [r7, #4]
2497:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9109              		.loc 1 2497 0
 9110 0a5c 7A68     		ldr	r2, [r7, #4]
 9111 0a5e BB69     		ldr	r3, [r7, #24]
 9112 0a60 0433     		adds	r3, r3, #4
 9113 0a62 4049     		ldr	r1, .L397
 9114 0a64 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9115 0a66 03F07F03 		and	r3, r3, #127
 9116 0a6a 1343     		orrs	r3, r3, r2
 9117 0a6c 7B60     		str	r3, [r7, #4]
2498:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 9118              		.loc 1 2498 0
 9119 0a6e 7B68     		ldr	r3, [r7, #4]	@ float
 9120 0a70 1846     		mov	r0, r3
 9121 0a72 FFF7FEFF 		bl	roundf
 9122 0a76 0346     		mov	r3, r0
 9123 0a78 1846     		mov	r0, r3
 9124 0a7a FFF7FEFF 		bl	__aeabi_f2uiz
 9125 0a7e 0346     		mov	r3, r0
 9126 0a80 FB82     		strh	r3, [r7, #22]	@ movhi
2499:main.c        ****         mappingArray[0] = (roundedIndex << 8);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 207


 9127              		.loc 1 2499 0
 9128 0a82 404B     		ldr	r3, .L397+32
 9129 0a84 0022     		movs	r2, #0
 9130 0a86 1A70     		strb	r2, [r3]
2500:main.c        ****         mappingArray[1] = roundedIndex & 0xff;
 9131              		.loc 1 2500 0
 9132 0a88 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 9133 0a8a DAB2     		uxtb	r2, r3
 9134 0a8c 3D4B     		ldr	r3, .L397+32
 9135 0a8e 5A70     		strb	r2, [r3, #1]
2501:main.c        ****         
2502:main.c        ****         
2503:main.c        ****         mappingArray[2] = sysexBuffer[i+5]; //slot id
 9136              		.loc 1 2503 0
 9137 0a90 BB69     		ldr	r3, [r7, #24]
 9138 0a92 0533     		adds	r3, r3, #5
 9139 0a94 334A     		ldr	r2, .L397
 9140 0a96 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9141 0a98 3A4B     		ldr	r3, .L397+32
 9142 0a9a 9A70     		strb	r2, [r3, #2]
2504:main.c        ****         mappingArray[3] = sysexBuffer[i+6]; //mapping change type
 9143              		.loc 1 2504 0
 9144 0a9c BB69     		ldr	r3, [r7, #24]
 9145 0a9e 0633     		adds	r3, r3, #6
 9146 0aa0 304A     		ldr	r2, .L397
 9147 0aa2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9148 0aa4 374B     		ldr	r3, .L397+32
 9149 0aa6 DA70     		strb	r2, [r3, #3]
2505:main.c        ****         
2506:main.c        ****         i = i+7;
 9150              		.loc 1 2506 0
 9151 0aa8 BB69     		ldr	r3, [r7, #24]
 9152 0aaa 0733     		adds	r3, r3, #7
 9153 0aac BB61     		str	r3, [r7, #24]
2507:main.c        ****         
2508:main.c        ****         //get the parameter value
2509:main.c        ****         theVal.u32 = 0;
 9154              		.loc 1 2509 0
 9155 0aae 0023     		movs	r3, #0
 9156 0ab0 7B60     		str	r3, [r7, #4]
2510:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 9157              		.loc 1 2510 0
 9158 0ab2 7B68     		ldr	r3, [r7, #4]
 9159 0ab4 2B49     		ldr	r1, .L397
 9160 0ab6 BA69     		ldr	r2, [r7, #24]
 9161 0ab8 0A44     		add	r2, r2, r1
 9162 0aba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9163 0abc 1207     		lsls	r2, r2, #28
 9164 0abe 1343     		orrs	r3, r3, r2
 9165 0ac0 7B60     		str	r3, [r7, #4]
2511:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 9166              		.loc 1 2511 0
 9167 0ac2 7B68     		ldr	r3, [r7, #4]
 9168 0ac4 BA69     		ldr	r2, [r7, #24]
 9169 0ac6 0132     		adds	r2, r2, #1
 9170 0ac8 2649     		ldr	r1, .L397
 9171 0aca 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 208


 9172 0acc 5205     		lsls	r2, r2, #21
 9173 0ace 1343     		orrs	r3, r3, r2
 9174 0ad0 7B60     		str	r3, [r7, #4]
2512:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 9175              		.loc 1 2512 0
 9176 0ad2 7B68     		ldr	r3, [r7, #4]
 9177 0ad4 BA69     		ldr	r2, [r7, #24]
 9178 0ad6 0232     		adds	r2, r2, #2
 9179 0ad8 2249     		ldr	r1, .L397
 9180 0ada 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9181 0adc 9203     		lsls	r2, r2, #14
 9182 0ade 1343     		orrs	r3, r3, r2
 9183 0ae0 7B60     		str	r3, [r7, #4]
2513:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 9184              		.loc 1 2513 0
 9185 0ae2 7B68     		ldr	r3, [r7, #4]
 9186 0ae4 BA69     		ldr	r2, [r7, #24]
 9187 0ae6 0332     		adds	r2, r2, #3
 9188 0ae8 1E49     		ldr	r1, .L397
 9189 0aea 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9190 0aec D201     		lsls	r2, r2, #7
 9191 0aee 1343     		orrs	r3, r3, r2
 9192 0af0 7B60     		str	r3, [r7, #4]
2514:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9193              		.loc 1 2514 0
 9194 0af2 7A68     		ldr	r2, [r7, #4]
 9195 0af4 BB69     		ldr	r3, [r7, #24]
 9196 0af6 0433     		adds	r3, r3, #4
 9197 0af8 1A49     		ldr	r1, .L397
 9198 0afa CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9199 0afc 03F07F03 		and	r3, r3, #127
 9200 0b00 1343     		orrs	r3, r3, r2
 9201 0b02 7B60     		str	r3, [r7, #4]
2515:main.c        ****         if (mappingArray[3] == 0) // source id
 9202              		.loc 1 2515 0
 9203 0b04 1F4B     		ldr	r3, .L397+32
 9204 0b06 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9205 0b08 002B     		cmp	r3, #0
 9206 0b0a 10D1     		bne	.L380
2516:main.c        ****         {
2517:main.c        ****             mappingArray[4] = 0;
 9207              		.loc 1 2517 0
 9208 0b0c 1D4B     		ldr	r3, .L397+32
 9209 0b0e 0022     		movs	r2, #0
 9210 0b10 1A71     		strb	r2, [r3, #4]
2518:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 9211              		.loc 1 2518 0
 9212 0b12 7B68     		ldr	r3, [r7, #4]	@ float
 9213 0b14 1846     		mov	r0, r3
 9214 0b16 FFF7FEFF 		bl	roundf
 9215 0b1a 0346     		mov	r3, r0
 9216 0b1c 1846     		mov	r0, r3
 9217 0b1e FFF7FEFF 		bl	__aeabi_f2iz
 9218 0b22 0346     		mov	r3, r0
 9219 0b24 1BB2     		sxth	r3, r3
 9220 0b26 DAB2     		uxtb	r2, r3
 9221 0b28 164B     		ldr	r3, .L397+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 209


 9222 0b2a 5A71     		strb	r2, [r3, #5]
 9223 0b2c 3EE0     		b	.L381
 9224              	.L380:
2519:main.c        ****         }
2520:main.c        ****         else if (mappingArray[3] == 1) // amount
 9225              		.loc 1 2520 0
 9226 0b2e 154B     		ldr	r3, .L397+32
 9227 0b30 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9228 0b32 012B     		cmp	r3, #1
 9229 0b34 2AD1     		bne	.L382
 9230              	.LBB53:
2521:main.c        ****         {
2522:main.c        ****             int16_t intVal = (int16_t)(theVal.f * 32767.0f);
 9231              		.loc 1 2522 0
 9232 0b36 7B68     		ldr	r3, [r7, #4]	@ float
 9233 0b38 1349     		ldr	r1, .L397+36
 9234 0b3a 1846     		mov	r0, r3
 9235 0b3c FFF7FEFF 		bl	__aeabi_fmul
 9236 0b40 0346     		mov	r3, r0
 9237 0b42 1846     		mov	r0, r3
 9238 0b44 FFF7FEFF 		bl	__aeabi_f2iz
 9239 0b48 0346     		mov	r3, r0
 9240 0b4a BB82     		strh	r3, [r7, #20]	@ movhi
2523:main.c        ****             mappingArray[4] = intVal >> 8;
 9241              		.loc 1 2523 0
 9242 0b4c B7F91430 		ldrsh	r3, [r7, #20]
 9243 0b50 1B12     		asrs	r3, r3, #8
 9244 0b52 1BB2     		sxth	r3, r3
 9245 0b54 DAB2     		uxtb	r2, r3
 9246 0b56 0B4B     		ldr	r3, .L397+32
 9247 0b58 1A71     		strb	r2, [r3, #4]
2524:main.c        ****             mappingArray[5] = intVal & 0xff;
 9248              		.loc 1 2524 0
 9249 0b5a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 9250 0b5c DAB2     		uxtb	r2, r3
 9251 0b5e 094B     		ldr	r3, .L397+32
 9252 0b60 5A71     		strb	r2, [r3, #5]
 9253              	.LBE53:
 9254 0b62 23E0     		b	.L381
 9255              	.L398:
 9256              		.align	2
 9257              	.L397:
 9258 0b64 00000000 		.word	sysexBuffer
 9259 0b68 00000000 		.word	sysexMessageInProgress
 9260 0b6c 00000000 		.word	singleParamToUpdateHigh
 9261 0b70 00000000 		.word	singleParamToUpdateLow
 9262 0b74 00FF7F47 		.word	1199570688
 9263 0b78 00000000 		.word	singleParamValueHigh
 9264 0b7c 00000000 		.word	singleParamValueLow
 9265 0b80 00000000 		.word	sendSingleParamUpdate
 9266 0b84 00000000 		.word	mappingArray
 9267 0b88 00FEFF46 		.word	1191181824
 9268              	.L382:
2525:main.c        ****         }
2526:main.c        ****         else // scalar source
2527:main.c        ****         {
2528:main.c        ****             mappingArray[4] = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 210


 9269              		.loc 1 2528 0
 9270 0b8c 114B     		ldr	r3, .L399
 9271 0b8e 0022     		movs	r2, #0
 9272 0b90 1A71     		strb	r2, [r3, #4]
2529:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 9273              		.loc 1 2529 0
 9274 0b92 7B68     		ldr	r3, [r7, #4]	@ float
 9275 0b94 1846     		mov	r0, r3
 9276 0b96 FFF7FEFF 		bl	roundf
 9277 0b9a 0346     		mov	r3, r0
 9278 0b9c 1846     		mov	r0, r3
 9279 0b9e FFF7FEFF 		bl	__aeabi_f2iz
 9280 0ba2 0346     		mov	r3, r0
 9281 0ba4 1BB2     		sxth	r3, r3
 9282 0ba6 DAB2     		uxtb	r2, r3
 9283 0ba8 0A4B     		ldr	r3, .L399
 9284 0baa 5A71     		strb	r2, [r3, #5]
 9285              	.L381:
2530:main.c        ****         }
2531:main.c        ****         
2532:main.c        ****         
2533:main.c        ****         sysexMessageInProgress = 0;
 9286              		.loc 1 2533 0
 9287 0bac 0A4B     		ldr	r3, .L399+4
 9288 0bae 0022     		movs	r2, #0
 9289 0bb0 1A70     		strb	r2, [r3]
2534:main.c        ****         sendMappingChangeUpdate = 1;
 9290              		.loc 1 2534 0
 9291 0bb2 0A4B     		ldr	r3, .L399+8
 9292 0bb4 0122     		movs	r2, #1
 9293 0bb6 1A70     		strb	r2, [r3]
 9294              	.L367:
 9295              	.LBE52:
2535:main.c        ****     }
2536:main.c        **** 
2537:main.c        ****     parsingSysex = 0;
 9296              		.loc 1 2537 0
 9297 0bb8 094B     		ldr	r3, .L399+12
 9298 0bba 0022     		movs	r2, #0
 9299 0bbc 1A70     		strb	r2, [r3]
2538:main.c        ****     sysexPointer = 0;
 9300              		.loc 1 2538 0
 9301 0bbe 094B     		ldr	r3, .L399+16
 9302 0bc0 0022     		movs	r2, #0
 9303 0bc2 1A60     		str	r2, [r3]
2539:main.c        ****     parseThatMF = 0;
 9304              		.loc 1 2539 0
 9305 0bc4 084B     		ldr	r3, .L399+20
 9306 0bc6 0022     		movs	r2, #0
 9307 0bc8 1A70     		strb	r2, [r3]
2540:main.c        **** }
 9308              		.loc 1 2540 0
 9309 0bca 00BF     		nop
 9310 0bcc 5437     		adds	r7, r7, #84
 9311              		.cfi_def_cfa_offset 12
 9312 0bce BD46     		mov	sp, r7
 9313              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 211


 9314              		@ sp needed
 9315 0bd0 90BD     		pop	{r4, r7, pc}
 9316              	.L400:
 9317 0bd2 00BF     		.align	2
 9318              	.L399:
 9319 0bd4 00000000 		.word	mappingArray
 9320 0bd8 00000000 		.word	sysexMessageInProgress
 9321 0bdc 00000000 		.word	sendMappingChangeUpdate
 9322 0be0 00000000 		.word	parsingSysex
 9323 0be4 00000000 		.word	sysexPointer
 9324 0be8 00000000 		.word	parseThatMF
 9325              		.cfi_endproc
 9326              	.LFE92:
 9327              		.size	parseSysex, .-parseSysex
 9328              		.comm	tempMIDI,4,4
 9329              		.global	firstSysex
 9330              		.bss
 9331              		.type	firstSysex, %object
 9332              		.size	firstSysex, 1
 9333              	firstSysex:
 9334 0110 00       		.space	1
 9335              		.global	sysexPointerMask
 9336              		.section	.rodata
 9337              		.align	1
 9338              		.type	sysexPointerMask, %object
 9339              		.size	sysexPointerMask, 2
 9340              	sysexPointerMask:
 9341 0458 FF07     		.short	2047
 9342              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 9343              		.align	2
 9344              		.global	USB_callbackLocalMidiEvent
 9345              		.thumb
 9346              		.thumb_func
 9347              		.type	USB_callbackLocalMidiEvent, %function
 9348              	USB_callbackLocalMidiEvent:
 9349              	.LFB93:
2541:main.c        **** 
2542:main.c        **** volatile uint8_t tempMIDI[4];
2543:main.c        **** volatile uint8_t firstSysex = 0;
2544:main.c        **** const uint16_t sysexPointerMask = 2047;
2545:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2546:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2547:main.c        **** {   
 9350              		.loc 1 2547 0
 9351              		.cfi_startproc
 9352              		@ args = 0, pretend = 0, frame = 16
 9353              		@ frame_needed = 1, uses_anonymous_args = 0
 9354 0000 80B5     		push	{r7, lr}
 9355              		.cfi_def_cfa_offset 8
 9356              		.cfi_offset 7, -8
 9357              		.cfi_offset 14, -4
 9358 0002 84B0     		sub	sp, sp, #16
 9359              		.cfi_def_cfa_offset 24
 9360 0004 00AF     		add	r7, sp, #0
 9361              		.cfi_def_cfa_register 7
 9362 0006 0346     		mov	r3, r0
 9363 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 212


 9364 000a FB71     		strb	r3, [r7, #7]
2548:main.c        ****     tempMIDI[0] = midiMsg[0];
 9365              		.loc 1 2548 0
 9366 000c 3B68     		ldr	r3, [r7]
 9367 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9368 0010 484B     		ldr	r3, .L411
 9369 0012 1A70     		strb	r2, [r3]
2549:main.c        ****     tempMIDI[1] = midiMsg[1];
 9370              		.loc 1 2549 0
 9371 0014 3B68     		ldr	r3, [r7]
 9372 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 9373 0018 464B     		ldr	r3, .L411
 9374 001a 5A70     		strb	r2, [r3, #1]
2550:main.c        ****      tempMIDI[2] = midiMsg[2];
 9375              		.loc 1 2550 0
 9376 001c 3B68     		ldr	r3, [r7]
 9377 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 9378 0020 444B     		ldr	r3, .L411
 9379 0022 9A70     		strb	r2, [r3, #2]
2551:main.c        ****      tempMIDI[3] = midiMsg[3];
 9380              		.loc 1 2551 0
 9381 0024 3B68     		ldr	r3, [r7]
 9382 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9383 0028 424B     		ldr	r3, .L411
 9384 002a DA70     		strb	r2, [r3, #3]
2552:main.c        ****     //check that we got here
2553:main.c        ****     
2554:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 9385              		.loc 1 2554 0
 9386 002c 424B     		ldr	r3, .L411+4
 9387 002e 1B78     		ldrb	r3, [r3]
 9388 0030 DBB2     		uxtb	r3, r3
 9389 0032 002B     		cmp	r3, #0
 9390 0034 7BD0     		beq	.L401
 9391              		.loc 1 2554 0 is_stmt 0 discriminator 1
 9392 0036 FFF7FEFF 		bl	USB_VBusPresent
 9393 003a 0346     		mov	r3, r0
 9394 003c 002B     		cmp	r3, #0
 9395 003e 76D0     		beq	.L401
2555:main.c        ****     {
2556:main.c        ****         if (receivingSysex)
 9396              		.loc 1 2556 0 is_stmt 1
 9397 0040 3E4B     		ldr	r3, .L411+8
 9398 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9399 0044 002B     		cmp	r3, #0
 9400 0046 29D0     		beq	.L403
 9401              	.LBB54:
2557:main.c        ****         {
2558:main.c        ****             for (int i = 0; i < 3; i++)
 9402              		.loc 1 2558 0
 9403 0048 0023     		movs	r3, #0
 9404 004a FB60     		str	r3, [r7, #12]
 9405 004c 22E0     		b	.L404
 9406              	.L407:
2559:main.c        ****             {
2560:main.c        ****                 if (midiMsg[i] < 128)
 9407              		.loc 1 2560 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 213


 9408 004e FB68     		ldr	r3, [r7, #12]
 9409 0050 3A68     		ldr	r2, [r7]
 9410 0052 1344     		add	r3, r3, r2
 9411 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9412 0056 5BB2     		sxtb	r3, r3
 9413 0058 002B     		cmp	r3, #0
 9414 005a 0EDB     		blt	.L405
2561:main.c        ****                 {
2562:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 9415              		.loc 1 2562 0
 9416 005c 384B     		ldr	r3, .L411+12
 9417 005e 1B68     		ldr	r3, [r3]
 9418 0060 5A1C     		adds	r2, r3, #1
 9419 0062 3749     		ldr	r1, .L411+12
 9420 0064 0A60     		str	r2, [r1]
 9421 0066 40F2FF72 		movw	r2, #2047
 9422 006a 1340     		ands	r3, r3, r2
 9423 006c FA68     		ldr	r2, [r7, #12]
 9424 006e 3968     		ldr	r1, [r7]
 9425 0070 0A44     		add	r2, r2, r1
 9426 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 9427 0074 334A     		ldr	r2, .L411+16
 9428 0076 D154     		strb	r1, [r2, r3]
 9429 0078 09E0     		b	.L406
 9430              	.L405:
2563:main.c        ****                 }
2564:main.c        ****                 else
2565:main.c        ****                 {
2566:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 9431              		.loc 1 2566 0
 9432 007a FB68     		ldr	r3, [r7, #12]
 9433 007c 3A68     		ldr	r2, [r7]
 9434 007e 1344     		add	r3, r3, r2
 9435 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9436 0082 F72B     		cmp	r3, #247
 9437 0084 03D1     		bne	.L406
2567:main.c        ****                     {
2568:main.c        ****                         receivingSysex = 0;
 9438              		.loc 1 2568 0
 9439 0086 2D4B     		ldr	r3, .L411+8
 9440 0088 0022     		movs	r2, #0
 9441 008a 1A70     		strb	r2, [r3]
2569:main.c        ****                         //parseSysex();
2570:main.c        ****                         return;
 9442              		.loc 1 2570 0
 9443 008c 4FE0     		b	.L401
 9444              	.L406:
2558:main.c        ****             {
 9445              		.loc 1 2558 0 discriminator 2
 9446 008e FB68     		ldr	r3, [r7, #12]
 9447 0090 0133     		adds	r3, r3, #1
 9448 0092 FB60     		str	r3, [r7, #12]
 9449              	.L404:
2558:main.c        ****             {
 9450              		.loc 1 2558 0 is_stmt 0 discriminator 1
 9451 0094 FB68     		ldr	r3, [r7, #12]
 9452 0096 022B     		cmp	r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 214


 9453 0098 D9DD     		ble	.L407
 9454 009a 48E0     		b	.L401
 9455              	.L403:
 9456              	.LBE54:
2571:main.c        ****                      }
2572:main.c        ****                 }
2573:main.c        ****             }
2574:main.c        ****         }
2575:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 9457              		.loc 1 2575 0 is_stmt 1
 9458 009c 3B68     		ldr	r3, [r7]
 9459 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9460 00a0 F02B     		cmp	r3, #240
 9461 00a2 44D1     		bne	.L401
2576:main.c        ****         {
2577:main.c        ****             if (!parsingSysex)
 9462              		.loc 1 2577 0
 9463 00a4 284B     		ldr	r3, .L411+20
 9464 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9465 00a8 002B     		cmp	r3, #0
 9466 00aa 40D1     		bne	.L401
2578:main.c        ****             {
2579:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 9467              		.loc 1 2579 0
 9468 00ac 3B68     		ldr	r3, [r7]
 9469 00ae 0133     		adds	r3, r3, #1
 9470 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9471 00b2 7E2B     		cmp	r3, #126
 9472 00b4 03D1     		bne	.L409
2580:main.c        ****                 {
2581:main.c        ****                     parseThatMF = 1;
 9473              		.loc 1 2581 0
 9474 00b6 254B     		ldr	r3, .L411+24
 9475 00b8 0122     		movs	r2, #1
 9476 00ba 1A70     		strb	r2, [r3]
 9477 00bc 37E0     		b	.L401
 9478              	.L409:
2582:main.c        **** 
2583:main.c        ****                     //sysexPointer = 0;
2584:main.c        ****                 }
2585:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2 || midiMsg[1] == 3 |
 9479              		.loc 1 2585 0
 9480 00be 3B68     		ldr	r3, [r7]
 9481 00c0 0133     		adds	r3, r3, #1
 9482 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9483 00c4 002B     		cmp	r3, #0
 9484 00c6 13D0     		beq	.L410
 9485              		.loc 1 2585 0 is_stmt 0 discriminator 1
 9486 00c8 3B68     		ldr	r3, [r7]
 9487 00ca 0133     		adds	r3, r3, #1
 9488 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9489 00ce 012B     		cmp	r3, #1
 9490 00d0 0ED0     		beq	.L410
 9491              		.loc 1 2585 0 discriminator 2
 9492 00d2 3B68     		ldr	r3, [r7]
 9493 00d4 0133     		adds	r3, r3, #1
 9494 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 215


 9495 00d8 022B     		cmp	r3, #2
 9496 00da 09D0     		beq	.L410
 9497              		.loc 1 2585 0 discriminator 3
 9498 00dc 3B68     		ldr	r3, [r7]
 9499 00de 0133     		adds	r3, r3, #1
 9500 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9501 00e2 032B     		cmp	r3, #3
 9502 00e4 04D0     		beq	.L410
 9503              		.loc 1 2585 0 discriminator 4
 9504 00e6 3B68     		ldr	r3, [r7]
 9505 00e8 0133     		adds	r3, r3, #1
 9506 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9507 00ec 042B     		cmp	r3, #4
 9508 00ee 1ED1     		bne	.L401
 9509              	.L410:
2586:main.c        ****                 {
2587:main.c        ****                     receivingSysex = 1;
 9510              		.loc 1 2587 0 is_stmt 1
 9511 00f0 124B     		ldr	r3, .L411+8
 9512 00f2 0122     		movs	r2, #1
 9513 00f4 1A70     		strb	r2, [r3]
2588:main.c        ****                     
2589:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2590:main.c        ****                     if (sysexPointer == 0)
 9514              		.loc 1 2590 0
 9515 00f6 124B     		ldr	r3, .L411+12
 9516 00f8 1B68     		ldr	r3, [r3]
 9517 00fa 002B     		cmp	r3, #0
 9518 00fc 17D1     		bne	.L401
2591:main.c        ****                     {
2592:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 9519              		.loc 1 2592 0
 9520 00fe 104B     		ldr	r3, .L411+12
 9521 0100 1B68     		ldr	r3, [r3]
 9522 0102 5A1C     		adds	r2, r3, #1
 9523 0104 0E49     		ldr	r1, .L411+12
 9524 0106 0A60     		str	r2, [r1]
 9525 0108 40F2FF72 		movw	r2, #2047
 9526 010c 1340     		ands	r3, r3, r2
 9527 010e 3A68     		ldr	r2, [r7]
 9528 0110 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 9529 0112 0C4A     		ldr	r2, .L411+16
 9530 0114 D154     		strb	r1, [r2, r3]
2593:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 9531              		.loc 1 2593 0
 9532 0116 0A4B     		ldr	r3, .L411+12
 9533 0118 1B68     		ldr	r3, [r3]
 9534 011a 5A1C     		adds	r2, r3, #1
 9535 011c 0849     		ldr	r1, .L411+12
 9536 011e 0A60     		str	r2, [r1]
 9537 0120 40F2FF72 		movw	r2, #2047
 9538 0124 1340     		ands	r3, r3, r2
 9539 0126 3A68     		ldr	r2, [r7]
 9540 0128 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 9541 012a 064A     		ldr	r2, .L411+16
 9542 012c D154     		strb	r1, [r2, r3]
 9543              	.L401:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 216


2594:main.c        ****                     }
2595:main.c        ****                 }
2596:main.c        ****             }
2597:main.c        ****         }
2598:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2599:main.c        ****     }
2600:main.c        **** }    
 9544              		.loc 1 2600 0
 9545 012e 1037     		adds	r7, r7, #16
 9546              		.cfi_def_cfa_offset 8
 9547 0130 BD46     		mov	sp, r7
 9548              		.cfi_def_cfa_register 13
 9549              		@ sp needed
 9550 0132 80BD     		pop	{r7, pc}
 9551              	.L412:
 9552              		.align	2
 9553              	.L411:
 9554 0134 00000000 		.word	tempMIDI
 9555 0138 00000000 		.word	USB_active
 9556 013c 00000000 		.word	receivingSysex
 9557 0140 00000000 		.word	sysexPointer
 9558 0144 00000000 		.word	sysexBuffer
 9559 0148 00000000 		.word	parsingSysex
 9560 014c 00000000 		.word	parseThatMF
 9561              		.cfi_endproc
 9562              	.LFE93:
 9563              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 9564              		.text
 9565              	.Letext0:
 9566              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9567              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9568              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 9569              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 9570              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9571              		.file 7 "oled.h"
 9572              		.file 8 "Generated_Source\\PSoC5/USB_midi.h"
 9573              		.file 9 "Generated_Source\\PSoC5/Em_EEPROM.h"
 9574              		.file 10 "Generated_Source\\PSoC5/I2C_1.h"
 9575              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 9576              		.section	.debug_info,"",%progbits
 9577              	.Ldebug_info0:
 9578 0000 EB1D0000 		.4byte	0x1deb
 9579 0004 0400     		.2byte	0x4
 9580 0006 00000000 		.4byte	.Ldebug_abbrev0
 9581 000a 04       		.byte	0x4
 9582 000b 01       		.uleb128 0x1
 9583 000c E8080000 		.4byte	.LASF316
 9584 0010 0C       		.byte	0xc
 9585 0011 5B0A0000 		.4byte	.LASF317
 9586 0015 10070000 		.4byte	.LASF318
 9587 0019 00000000 		.4byte	.Ldebug_ranges0+0
 9588 001d 00000000 		.4byte	0
 9589 0021 00000000 		.4byte	.Ldebug_line0
 9590 0025 02       		.uleb128 0x2
 9591 0026 01       		.byte	0x1
 9592 0027 06       		.byte	0x6
 9593 0028 6E030000 		.4byte	.LASF0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 217


 9594 002c 03       		.uleb128 0x3
 9595 002d 12020000 		.4byte	.LASF2
 9596 0031 02       		.byte	0x2
 9597 0032 1D       		.byte	0x1d
 9598 0033 37000000 		.4byte	0x37
 9599 0037 02       		.uleb128 0x2
 9600 0038 01       		.byte	0x1
 9601 0039 08       		.byte	0x8
 9602 003a F5030000 		.4byte	.LASF1
 9603 003e 03       		.uleb128 0x3
 9604 003f BB0D0000 		.4byte	.LASF3
 9605 0043 02       		.byte	0x2
 9606 0044 29       		.byte	0x29
 9607 0045 49000000 		.4byte	0x49
 9608 0049 02       		.uleb128 0x2
 9609 004a 02       		.byte	0x2
 9610 004b 05       		.byte	0x5
 9611 004c 790E0000 		.4byte	.LASF4
 9612 0050 03       		.uleb128 0x3
 9613 0051 21050000 		.4byte	.LASF5
 9614 0055 02       		.byte	0x2
 9615 0056 2B       		.byte	0x2b
 9616 0057 5B000000 		.4byte	0x5b
 9617 005b 02       		.uleb128 0x2
 9618 005c 02       		.byte	0x2
 9619 005d 07       		.byte	0x7
 9620 005e 67100000 		.4byte	.LASF6
 9621 0062 03       		.uleb128 0x3
 9622 0063 92100000 		.4byte	.LASF7
 9623 0067 02       		.byte	0x2
 9624 0068 3F       		.byte	0x3f
 9625 0069 6D000000 		.4byte	0x6d
 9626 006d 02       		.uleb128 0x2
 9627 006e 04       		.byte	0x4
 9628 006f 05       		.byte	0x5
 9629 0070 65020000 		.4byte	.LASF8
 9630 0074 03       		.uleb128 0x3
 9631 0075 DF090000 		.4byte	.LASF9
 9632 0079 02       		.byte	0x2
 9633 007a 41       		.byte	0x41
 9634 007b 7F000000 		.4byte	0x7f
 9635 007f 02       		.uleb128 0x2
 9636 0080 04       		.byte	0x4
 9637 0081 07       		.byte	0x7
 9638 0082 ED070000 		.4byte	.LASF10
 9639 0086 02       		.uleb128 0x2
 9640 0087 08       		.byte	0x8
 9641 0088 05       		.byte	0x5
 9642 0089 EA090000 		.4byte	.LASF11
 9643 008d 02       		.uleb128 0x2
 9644 008e 08       		.byte	0x8
 9645 008f 07       		.byte	0x7
 9646 0090 BC0C0000 		.4byte	.LASF12
 9647 0094 04       		.uleb128 0x4
 9648 0095 04       		.byte	0x4
 9649 0096 05       		.byte	0x5
 9650 0097 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 218


 9651 009b 02       		.uleb128 0x2
 9652 009c 04       		.byte	0x4
 9653 009d 07       		.byte	0x7
 9654 009e 1D0B0000 		.4byte	.LASF13
 9655 00a2 03       		.uleb128 0x3
 9656 00a3 7A030000 		.4byte	.LASF14
 9657 00a7 03       		.byte	0x3
 9658 00a8 18       		.byte	0x18
 9659 00a9 2C000000 		.4byte	0x2c
 9660 00ad 03       		.uleb128 0x3
 9661 00ae D20E0000 		.4byte	.LASF15
 9662 00b2 03       		.byte	0x3
 9663 00b3 20       		.byte	0x20
 9664 00b4 3E000000 		.4byte	0x3e
 9665 00b8 03       		.uleb128 0x3
 9666 00b9 D30C0000 		.4byte	.LASF16
 9667 00bd 03       		.byte	0x3
 9668 00be 24       		.byte	0x24
 9669 00bf 50000000 		.4byte	0x50
 9670 00c3 03       		.uleb128 0x3
 9671 00c4 99000000 		.4byte	.LASF17
 9672 00c8 03       		.byte	0x3
 9673 00c9 2C       		.byte	0x2c
 9674 00ca 62000000 		.4byte	0x62
 9675 00ce 03       		.uleb128 0x3
 9676 00cf 13100000 		.4byte	.LASF18
 9677 00d3 03       		.byte	0x3
 9678 00d4 30       		.byte	0x30
 9679 00d5 74000000 		.4byte	0x74
 9680 00d9 05       		.uleb128 0x5
 9681 00da 400E0000 		.4byte	.LASF19
 9682 00de 04       		.byte	0x4
 9683 00df E901     		.2byte	0x1e9
 9684 00e1 37000000 		.4byte	0x37
 9685 00e5 05       		.uleb128 0x5
 9686 00e6 FF100000 		.4byte	.LASF20
 9687 00ea 04       		.byte	0x4
 9688 00eb EA01     		.2byte	0x1ea
 9689 00ed 5B000000 		.4byte	0x5b
 9690 00f1 05       		.uleb128 0x5
 9691 00f2 D5000000 		.4byte	.LASF21
 9692 00f6 04       		.byte	0x4
 9693 00f7 EB01     		.2byte	0x1eb
 9694 00f9 7F000000 		.4byte	0x7f
 9695 00fd 02       		.uleb128 0x2
 9696 00fe 04       		.byte	0x4
 9697 00ff 04       		.byte	0x4
 9698 0100 C00A0000 		.4byte	.LASF22
 9699 0104 02       		.uleb128 0x2
 9700 0105 08       		.byte	0x8
 9701 0106 04       		.byte	0x4
 9702 0107 540A0000 		.4byte	.LASF23
 9703 010b 02       		.uleb128 0x2
 9704 010c 01       		.byte	0x1
 9705 010d 08       		.byte	0x8
 9706 010e D5040000 		.4byte	.LASF24
 9707 0112 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 219


 9708 0113 940B0000 		.4byte	.LASF25
 9709 0117 04       		.byte	0x4
 9710 0118 8B02     		.2byte	0x28b
 9711 011a 7F000000 		.4byte	0x7f
 9712 011e 05       		.uleb128 0x5
 9713 011f 570D0000 		.4byte	.LASF26
 9714 0123 04       		.byte	0x4
 9715 0124 9302     		.2byte	0x293
 9716 0126 2A010000 		.4byte	0x12a
 9717 012a 06       		.uleb128 0x6
 9718 012b D9000000 		.4byte	0xd9
 9719 012f 02       		.uleb128 0x2
 9720 0130 08       		.byte	0x8
 9721 0131 04       		.byte	0x4
 9722 0132 3B0C0000 		.4byte	.LASF27
 9723 0136 02       		.uleb128 0x2
 9724 0137 04       		.byte	0x4
 9725 0138 07       		.byte	0x7
 9726 0139 2A000000 		.4byte	.LASF28
 9727 013d 07       		.uleb128 0x7
 9728 013e D9000000 		.4byte	0xd9
 9729 0142 4D010000 		.4byte	0x14d
 9730 0146 08       		.uleb128 0x8
 9731 0147 36010000 		.4byte	0x136
 9732 014b 03       		.byte	0x3
 9733 014c 00       		.byte	0
 9734 014d 09       		.uleb128 0x9
 9735 014e 1C       		.byte	0x1c
 9736 014f 05       		.byte	0x5
 9737 0150 1601     		.2byte	0x116
 9738 0152 BF010000 		.4byte	0x1bf
 9739 0156 0A       		.uleb128 0xa
 9740 0157 82030000 		.4byte	.LASF29
 9741 015b 05       		.byte	0x5
 9742 015c 1B01     		.2byte	0x11b
 9743 015e F1000000 		.4byte	0xf1
 9744 0162 00       		.byte	0
 9745 0163 0A       		.uleb128 0xa
 9746 0164 D8010000 		.4byte	.LASF30
 9747 0168 05       		.byte	0x5
 9748 0169 2001     		.2byte	0x120
 9749 016b F1000000 		.4byte	0xf1
 9750 016f 04       		.byte	0x4
 9751 0170 0A       		.uleb128 0xa
 9752 0171 D0100000 		.4byte	.LASF31
 9753 0175 05       		.byte	0x5
 9754 0176 2301     		.2byte	0x123
 9755 0178 F1000000 		.4byte	0xf1
 9756 017c 08       		.byte	0x8
 9757 017d 0A       		.uleb128 0xa
 9758 017e E70E0000 		.4byte	.LASF32
 9759 0182 05       		.byte	0x5
 9760 0183 2601     		.2byte	0x126
 9761 0185 F1000000 		.4byte	0xf1
 9762 0189 0C       		.byte	0xc
 9763 018a 0A       		.uleb128 0xa
 9764 018b 3C0F0000 		.4byte	.LASF33
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 220


 9765 018f 05       		.byte	0x5
 9766 0190 2B01     		.2byte	0x12b
 9767 0192 F1000000 		.4byte	0xf1
 9768 0196 10       		.byte	0x10
 9769 0197 0A       		.uleb128 0xa
 9770 0198 04020000 		.4byte	.LASF34
 9771 019c 05       		.byte	0x5
 9772 019d 2E01     		.2byte	0x12e
 9773 019f D9000000 		.4byte	0xd9
 9774 01a3 14       		.byte	0x14
 9775 01a4 0A       		.uleb128 0xa
 9776 01a5 3B0A0000 		.4byte	.LASF35
 9777 01a9 05       		.byte	0x5
 9778 01aa 3301     		.2byte	0x133
 9779 01ac D9000000 		.4byte	0xd9
 9780 01b0 15       		.byte	0x15
 9781 01b1 0A       		.uleb128 0xa
 9782 01b2 C5010000 		.4byte	.LASF36
 9783 01b6 05       		.byte	0x5
 9784 01b7 3601     		.2byte	0x136
 9785 01b9 F1000000 		.4byte	0xf1
 9786 01bd 18       		.byte	0x18
 9787 01be 00       		.byte	0
 9788 01bf 05       		.uleb128 0x5
 9789 01c0 D5070000 		.4byte	.LASF37
 9790 01c4 05       		.byte	0x5
 9791 01c5 3701     		.2byte	0x137
 9792 01c7 4D010000 		.4byte	0x14d
 9793 01cb 0B       		.uleb128 0xb
 9794 01cc 01       		.byte	0x1
 9795 01cd 37000000 		.4byte	0x37
 9796 01d1 05       		.byte	0x5
 9797 01d2 5401     		.2byte	0x154
 9798 01d4 F7010000 		.4byte	0x1f7
 9799 01d8 0C       		.uleb128 0xc
 9800 01d9 84000000 		.4byte	.LASF38
 9801 01dd 00       		.byte	0
 9802 01de 0C       		.uleb128 0xc
 9803 01df 25060000 		.4byte	.LASF39
 9804 01e3 01       		.byte	0x1
 9805 01e4 0C       		.uleb128 0xc
 9806 01e5 AB010000 		.4byte	.LASF40
 9807 01e9 02       		.byte	0x2
 9808 01ea 0C       		.uleb128 0xc
 9809 01eb B1030000 		.4byte	.LASF41
 9810 01ef 03       		.byte	0x3
 9811 01f0 0C       		.uleb128 0xc
 9812 01f1 88080000 		.4byte	.LASF42
 9813 01f5 04       		.byte	0x4
 9814 01f6 00       		.byte	0
 9815 01f7 05       		.uleb128 0x5
 9816 01f8 3E010000 		.4byte	.LASF43
 9817 01fc 05       		.byte	0x5
 9818 01fd 5A01     		.2byte	0x15a
 9819 01ff CB010000 		.4byte	0x1cb
 9820 0203 06       		.uleb128 0x6
 9821 0204 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 221


 9822 0208 06       		.uleb128 0x6
 9823 0209 B8000000 		.4byte	0xb8
 9824 020d 03       		.uleb128 0x3
 9825 020e 88050000 		.4byte	.LASF44
 9826 0212 06       		.byte	0x6
 9827 0213 6C       		.byte	0x6c
 9828 0214 9B000000 		.4byte	0x9b
 9829 0218 0D       		.uleb128 0xd
 9830 0219 C7030000 		.4byte	.LASF50
 9831 021d 01       		.byte	0x1
 9832 021e 37000000 		.4byte	0x37
 9833 0222 07       		.byte	0x7
 9834 0223 1D       		.byte	0x1d
 9835 0224 47020000 		.4byte	0x247
 9836 0228 0C       		.uleb128 0xc
 9837 0229 92090000 		.4byte	.LASF45
 9838 022d 00       		.byte	0
 9839 022e 0C       		.uleb128 0xc
 9840 022f 0B030000 		.4byte	.LASF46
 9841 0233 01       		.byte	0x1
 9842 0234 0C       		.uleb128 0xc
 9843 0235 B3000000 		.4byte	.LASF47
 9844 0239 02       		.byte	0x2
 9845 023a 0C       		.uleb128 0xc
 9846 023b 80060000 		.4byte	.LASF48
 9847 023f 03       		.byte	0x3
 9848 0240 0C       		.uleb128 0xc
 9849 0241 36010000 		.4byte	.LASF49
 9850 0245 04       		.byte	0x4
 9851 0246 00       		.byte	0
 9852 0247 0D       		.uleb128 0xd
 9853 0248 2C030000 		.4byte	.LASF51
 9854 024c 01       		.byte	0x1
 9855 024d 37000000 		.4byte	0x37
 9856 0251 01       		.byte	0x1
 9857 0252 28       		.byte	0x28
 9858 0253 7C020000 		.4byte	0x27c
 9859 0257 0C       		.uleb128 0xc
 9860 0258 5B060000 		.4byte	.LASF52
 9861 025c 00       		.byte	0
 9862 025d 0C       		.uleb128 0xc
 9863 025e BE040000 		.4byte	.LASF53
 9864 0262 01       		.byte	0x1
 9865 0263 0C       		.uleb128 0xc
 9866 0264 C50D0000 		.4byte	.LASF54
 9867 0268 02       		.byte	0x2
 9868 0269 0C       		.uleb128 0xc
 9869 026a 720D0000 		.4byte	.LASF55
 9870 026e 03       		.byte	0x3
 9871 026f 0C       		.uleb128 0xc
 9872 0270 7A100000 		.4byte	.LASF56
 9873 0274 04       		.byte	0x4
 9874 0275 0C       		.uleb128 0xc
 9875 0276 22020000 		.4byte	.LASF57
 9876 027a 05       		.byte	0x5
 9877 027b 00       		.byte	0
 9878 027c 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 222


 9879 027d FE0C0000 		.4byte	.LASF319
 9880 0281 04       		.byte	0x4
 9881 0282 01       		.byte	0x1
 9882 0283 AD       		.byte	0xad
 9883 0284 A6020000 		.4byte	0x2a6
 9884 0288 0F       		.uleb128 0xf
 9885 0289 6600     		.ascii	"f\000"
 9886 028b 01       		.byte	0x1
 9887 028c AE       		.byte	0xae
 9888 028d FD000000 		.4byte	0xfd
 9889 0291 0F       		.uleb128 0xf
 9890 0292 6200     		.ascii	"b\000"
 9891 0294 01       		.byte	0x1
 9892 0295 AF       		.byte	0xaf
 9893 0296 A6020000 		.4byte	0x2a6
 9894 029a 0F       		.uleb128 0xf
 9895 029b 75333200 		.ascii	"u32\000"
 9896 029f 01       		.byte	0x1
 9897 02a0 B0       		.byte	0xb0
 9898 02a1 CE000000 		.4byte	0xce
 9899 02a5 00       		.byte	0
 9900 02a6 07       		.uleb128 0x7
 9901 02a7 A2000000 		.4byte	0xa2
 9902 02ab B6020000 		.4byte	0x2b6
 9903 02af 08       		.uleb128 0x8
 9904 02b0 36010000 		.4byte	0x136
 9905 02b4 03       		.byte	0x3
 9906 02b5 00       		.byte	0
 9907 02b6 10       		.uleb128 0x10
 9908 02b7 A7030000 		.4byte	.LASF111
 9909 02bb 01       		.byte	0x1
 9910 02bc B4       		.byte	0xb4
 9911 02bd 00000000 		.4byte	.LFB64
 9912 02c1 74010000 		.4byte	.LFE64-.LFB64
 9913 02c5 01       		.uleb128 0x1
 9914 02c6 9C       		.byte	0x9c
 9915 02c7 E2020000 		.4byte	0x2e2
 9916 02cb 11       		.uleb128 0x11
 9917 02cc 66000000 		.4byte	.LBB2
 9918 02d0 7A000000 		.4byte	.LBE2-.LBB2
 9919 02d4 12       		.uleb128 0x12
 9920 02d5 6900     		.ascii	"i\000"
 9921 02d7 01       		.byte	0x1
 9922 02d8 BA       		.byte	0xba
 9923 02d9 94000000 		.4byte	0x94
 9924 02dd 02       		.uleb128 0x2
 9925 02de 91       		.byte	0x91
 9926 02df 6C       		.sleb128 -20
 9927 02e0 00       		.byte	0
 9928 02e1 00       		.byte	0
 9929 02e2 13       		.uleb128 0x13
 9930 02e3 130D0000 		.4byte	.LASF58
 9931 02e7 01       		.byte	0x1
 9932 02e8 DC       		.byte	0xdc
 9933 02e9 00000000 		.4byte	.LFB65
 9934 02ed 9C000000 		.4byte	.LFE65-.LFB65
 9935 02f1 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 223


 9936 02f2 9C       		.byte	0x9c
 9937 02f3 14       		.uleb128 0x14
 9938 02f4 620B0000 		.4byte	.LASF59
 9939 02f8 01       		.byte	0x1
 9940 02f9 0501     		.2byte	0x105
 9941 02fb 00000000 		.4byte	.LFB66
 9942 02ff 14000000 		.4byte	.LFE66-.LFB66
 9943 0303 01       		.uleb128 0x1
 9944 0304 9C       		.byte	0x9c
 9945 0305 14       		.uleb128 0x14
 9946 0306 A7090000 		.4byte	.LASF60
 9947 030a 01       		.byte	0x1
 9948 030b 1001     		.2byte	0x110
 9949 030d 00000000 		.4byte	.LFB67
 9950 0311 7C000000 		.4byte	.LFE67-.LFB67
 9951 0315 01       		.uleb128 0x1
 9952 0316 9C       		.byte	0x9c
 9953 0317 15       		.uleb128 0x15
 9954 0318 FF040000 		.4byte	.LASF63
 9955 031c 01       		.byte	0x1
 9956 031d 2C01     		.2byte	0x12c
 9957 031f FD000000 		.4byte	0xfd
 9958 0323 00000000 		.4byte	.LFB68
 9959 0327 58000000 		.4byte	.LFE68-.LFB68
 9960 032b 01       		.uleb128 0x1
 9961 032c 9C       		.byte	0x9c
 9962 032d 7D030000 		.4byte	0x37d
 9963 0331 16       		.uleb128 0x16
 9964 0332 6D696E00 		.ascii	"min\000"
 9965 0336 01       		.byte	0x1
 9966 0337 2C01     		.2byte	0x12c
 9967 0339 FD000000 		.4byte	0xfd
 9968 033d 02       		.uleb128 0x2
 9969 033e 91       		.byte	0x91
 9970 033f 6C       		.sleb128 -20
 9971 0340 16       		.uleb128 0x16
 9972 0341 76616C00 		.ascii	"val\000"
 9973 0345 01       		.byte	0x1
 9974 0346 2C01     		.2byte	0x12c
 9975 0348 FD000000 		.4byte	0xfd
 9976 034c 02       		.uleb128 0x2
 9977 034d 91       		.byte	0x91
 9978 034e 68       		.sleb128 -24
 9979 034f 16       		.uleb128 0x16
 9980 0350 6D617800 		.ascii	"max\000"
 9981 0354 01       		.byte	0x1
 9982 0355 2C01     		.2byte	0x12c
 9983 0357 FD000000 		.4byte	0xfd
 9984 035b 02       		.uleb128 0x2
 9985 035c 91       		.byte	0x91
 9986 035d 64       		.sleb128 -28
 9987 035e 17       		.uleb128 0x17
 9988 035f 330A0000 		.4byte	.LASF61
 9989 0363 01       		.byte	0x1
 9990 0364 2E01     		.2byte	0x12e
 9991 0366 FD000000 		.4byte	0xfd
 9992 036a 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 224


 9993 036b 91       		.byte	0x91
 9994 036c 74       		.sleb128 -12
 9995 036d 17       		.uleb128 0x17
 9996 036e 6E040000 		.4byte	.LASF62
 9997 0372 01       		.byte	0x1
 9998 0373 2F01     		.2byte	0x12f
 9999 0375 FD000000 		.4byte	0xfd
 10000 0379 02       		.uleb128 0x2
 10001 037a 91       		.byte	0x91
 10002 037b 70       		.sleb128 -16
 10003 037c 00       		.byte	0
 10004 037d 15       		.uleb128 0x15
 10005 037e B1100000 		.4byte	.LASF64
 10006 0382 01       		.byte	0x1
 10007 0383 4201     		.2byte	0x142
 10008 0385 FD000000 		.4byte	0xfd
 10009 0389 00000000 		.4byte	.LFB69
 10010 038d 68000000 		.4byte	.LFE69-.LFB69
 10011 0391 01       		.uleb128 0x1
 10012 0392 9C       		.byte	0x9c
 10013 0393 A5030000 		.4byte	0x3a5
 10014 0397 16       		.uleb128 0x16
 10015 0398 6600     		.ascii	"f\000"
 10016 039a 01       		.byte	0x1
 10017 039b 4201     		.2byte	0x142
 10018 039d FD000000 		.4byte	0xfd
 10019 03a1 02       		.uleb128 0x2
 10020 03a2 91       		.byte	0x91
 10021 03a3 74       		.sleb128 -12
 10022 03a4 00       		.byte	0
 10023 03a5 15       		.uleb128 0x15
 10024 03a6 7A0C0000 		.4byte	.LASF65
 10025 03aa 01       		.byte	0x1
 10026 03ab 4901     		.2byte	0x149
 10027 03ad FD000000 		.4byte	0xfd
 10028 03b1 00000000 		.4byte	.LFB70
 10029 03b5 4C000000 		.4byte	.LFE70-.LFB70
 10030 03b9 01       		.uleb128 0x1
 10031 03ba 9C       		.byte	0x9c
 10032 03bb CD030000 		.4byte	0x3cd
 10033 03bf 16       		.uleb128 0x16
 10034 03c0 6600     		.ascii	"f\000"
 10035 03c2 01       		.byte	0x1
 10036 03c3 4901     		.2byte	0x149
 10037 03c5 FD000000 		.4byte	0xfd
 10038 03c9 02       		.uleb128 0x2
 10039 03ca 91       		.byte	0x91
 10040 03cb 74       		.sleb128 -12
 10041 03cc 00       		.byte	0
 10042 03cd 15       		.uleb128 0x15
 10043 03ce B1070000 		.4byte	.LASF66
 10044 03d2 01       		.byte	0x1
 10045 03d3 4F01     		.2byte	0x14f
 10046 03d5 FD000000 		.4byte	0xfd
 10047 03d9 00000000 		.4byte	.LFB71
 10048 03dd 46000000 		.4byte	.LFE71-.LFB71
 10049 03e1 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 225


 10050 03e2 9C       		.byte	0x9c
 10051 03e3 2F040000 		.4byte	0x42f
 10052 03e7 16       		.uleb128 0x16
 10053 03e8 4100     		.ascii	"A\000"
 10054 03ea 01       		.byte	0x1
 10055 03eb 4F01     		.2byte	0x14f
 10056 03ed FD000000 		.4byte	0xfd
 10057 03f1 02       		.uleb128 0x2
 10058 03f2 91       		.byte	0x91
 10059 03f3 6C       		.sleb128 -20
 10060 03f4 16       		.uleb128 0x16
 10061 03f5 4200     		.ascii	"B\000"
 10062 03f7 01       		.byte	0x1
 10063 03f8 4F01     		.2byte	0x14f
 10064 03fa FD000000 		.4byte	0xfd
 10065 03fe 02       		.uleb128 0x2
 10066 03ff 91       		.byte	0x91
 10067 0400 68       		.sleb128 -24
 10068 0401 18       		.uleb128 0x18
 10069 0402 1C020000 		.4byte	.LASF67
 10070 0406 01       		.byte	0x1
 10071 0407 4F01     		.2byte	0x14f
 10072 0409 FD000000 		.4byte	0xfd
 10073 040d 02       		.uleb128 0x2
 10074 040e 91       		.byte	0x91
 10075 040f 64       		.sleb128 -28
 10076 0410 17       		.uleb128 0x17
 10077 0411 57030000 		.4byte	.LASF68
 10078 0415 01       		.byte	0x1
 10079 0416 5101     		.2byte	0x151
 10080 0418 FD000000 		.4byte	0xfd
 10081 041c 02       		.uleb128 0x2
 10082 041d 91       		.byte	0x91
 10083 041e 74       		.sleb128 -12
 10084 041f 19       		.uleb128 0x19
 10085 0420 6F757400 		.ascii	"out\000"
 10086 0424 01       		.byte	0x1
 10087 0425 5401     		.2byte	0x154
 10088 0427 FD000000 		.4byte	0xfd
 10089 042b 02       		.uleb128 0x2
 10090 042c 91       		.byte	0x91
 10091 042d 70       		.sleb128 -16
 10092 042e 00       		.byte	0
 10093 042f 1A       		.uleb128 0x1a
 10094 0430 6D617000 		.ascii	"map\000"
 10095 0434 01       		.byte	0x1
 10096 0435 C401     		.2byte	0x1c4
 10097 0437 FD000000 		.4byte	0xfd
 10098 043b 00000000 		.4byte	.LFB72
 10099 043f 56000000 		.4byte	.LFE72-.LFB72
 10100 0443 01       		.uleb128 0x1
 10101 0444 9C       		.byte	0x9c
 10102 0445 95040000 		.4byte	0x495
 10103 0449 18       		.uleb128 0x18
 10104 044a 84040000 		.4byte	.LASF69
 10105 044e 01       		.byte	0x1
 10106 044f C401     		.2byte	0x1c4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 226


 10107 0451 FD000000 		.4byte	0xfd
 10108 0455 02       		.uleb128 0x2
 10109 0456 91       		.byte	0x91
 10110 0457 6C       		.sleb128 -20
 10111 0458 18       		.uleb128 0x18
 10112 0459 EC010000 		.4byte	.LASF70
 10113 045d 01       		.byte	0x1
 10114 045e C401     		.2byte	0x1c4
 10115 0460 FD000000 		.4byte	0xfd
 10116 0464 02       		.uleb128 0x2
 10117 0465 91       		.byte	0x91
 10118 0466 68       		.sleb128 -24
 10119 0467 18       		.uleb128 0x18
 10120 0468 D1080000 		.4byte	.LASF71
 10121 046c 01       		.byte	0x1
 10122 046d C401     		.2byte	0x1c4
 10123 046f FD000000 		.4byte	0xfd
 10124 0473 02       		.uleb128 0x2
 10125 0474 91       		.byte	0x91
 10126 0475 64       		.sleb128 -28
 10127 0476 18       		.uleb128 0x18
 10128 0477 A0080000 		.4byte	.LASF72
 10129 047b 01       		.byte	0x1
 10130 047c C401     		.2byte	0x1c4
 10131 047e FD000000 		.4byte	0xfd
 10132 0482 02       		.uleb128 0x2
 10133 0483 91       		.byte	0x91
 10134 0484 60       		.sleb128 -32
 10135 0485 18       		.uleb128 0x18
 10136 0486 B20A0000 		.4byte	.LASF73
 10137 048a 01       		.byte	0x1
 10138 048b C401     		.2byte	0x1c4
 10139 048d FD000000 		.4byte	0xfd
 10140 0491 02       		.uleb128 0x2
 10141 0492 91       		.byte	0x91
 10142 0493 00       		.sleb128 0
 10143 0494 00       		.byte	0
 10144 0495 1B       		.uleb128 0x1b
 10145 0496 9A050000 		.4byte	.LASF106
 10146 049a 01       		.byte	0x1
 10147 049b CF01     		.2byte	0x1cf
 10148 049d 00000000 		.4byte	.LFB73
 10149 04a1 0C000000 		.4byte	.LFE73-.LFB73
 10150 04a5 01       		.uleb128 0x1
 10151 04a6 9C       		.byte	0x9c
 10152 04a7 1C       		.uleb128 0x1c
 10153 04a8 48100000 		.4byte	.LASF320
 10154 04ac 01       		.byte	0x1
 10155 04ad D501     		.2byte	0x1d5
 10156 04af 00000000 		.4byte	.LFB74
 10157 04b3 0C010000 		.4byte	.LFE74-.LFB74
 10158 04b7 01       		.uleb128 0x1
 10159 04b8 9C       		.byte	0x9c
 10160 04b9 EE040000 		.4byte	0x4ee
 10161 04bd 11       		.uleb128 0x11
 10162 04be 06000000 		.4byte	.LBB3
 10163 04c2 EA000000 		.4byte	.LBE3-.LBB3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 227


 10164 04c6 19       		.uleb128 0x19
 10165 04c7 6900     		.ascii	"i\000"
 10166 04c9 01       		.byte	0x1
 10167 04ca D901     		.2byte	0x1d9
 10168 04cc 94000000 		.4byte	0x94
 10169 04d0 02       		.uleb128 0x2
 10170 04d1 91       		.byte	0x91
 10171 04d2 6C       		.sleb128 -20
 10172 04d3 11       		.uleb128 0x11
 10173 04d4 0C000000 		.4byte	.LBB4
 10174 04d8 D8000000 		.4byte	.LBE4-.LBB4
 10175 04dc 17       		.uleb128 0x17
 10176 04dd F3010000 		.4byte	.LASF74
 10177 04e1 01       		.byte	0x1
 10178 04e2 DC01     		.2byte	0x1dc
 10179 04e4 FD000000 		.4byte	0xfd
 10180 04e8 02       		.uleb128 0x2
 10181 04e9 91       		.byte	0x91
 10182 04ea 68       		.sleb128 -24
 10183 04eb 00       		.byte	0
 10184 04ec 00       		.byte	0
 10185 04ed 00       		.byte	0
 10186 04ee 15       		.uleb128 0x15
 10187 04ef CC020000 		.4byte	.LASF75
 10188 04f3 01       		.byte	0x1
 10189 04f4 E301     		.2byte	0x1e3
 10190 04f6 94000000 		.4byte	0x94
 10191 04fa 00000000 		.4byte	.LFB75
 10192 04fe 10200000 		.4byte	.LFE75-.LFB75
 10193 0502 01       		.uleb128 0x1
 10194 0503 9C       		.byte	0x9c
 10195 0504 31090000 		.4byte	0x931
 10196 0508 17       		.uleb128 0x17
 10197 0509 DE100000 		.4byte	.LASF76
 10198 050d 01       		.byte	0x1
 10199 050e F001     		.2byte	0x1f0
 10200 0510 A2000000 		.4byte	0xa2
 10201 0514 03       		.uleb128 0x3
 10202 0515 91       		.byte	0x91
 10203 0516 8B7F     		.sleb128 -117
 10204 0518 1D       		.uleb128 0x1d
 10205 0519 5C000000 		.4byte	.LBB5
 10206 051d 8A010000 		.4byte	.LBE5-.LBB5
 10207 0521 D4050000 		.4byte	0x5d4
 10208 0525 17       		.uleb128 0x17
 10209 0526 16040000 		.4byte	.LASF77
 10210 052a 01       		.byte	0x1
 10211 052b FE01     		.2byte	0x1fe
 10212 052d 94000000 		.4byte	0x94
 10213 0531 02       		.uleb128 0x2
 10214 0532 91       		.byte	0x91
 10215 0533 6C       		.sleb128 -20
 10216 0534 1D       		.uleb128 0x1d
 10217 0535 64000000 		.4byte	.LBB6
 10218 0539 64000000 		.4byte	.LBE6-.LBB6
 10219 053d 51050000 		.4byte	0x551
 10220 0541 17       		.uleb128 0x17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 228


 10221 0542 8D0F0000 		.4byte	.LASF78
 10222 0546 01       		.byte	0x1
 10223 0547 0102     		.2byte	0x201
 10224 0549 94000000 		.4byte	0x94
 10225 054d 02       		.uleb128 0x2
 10226 054e 91       		.byte	0x91
 10227 054f 68       		.sleb128 -24
 10228 0550 00       		.byte	0
 10229 0551 11       		.uleb128 0x11
 10230 0552 C8000000 		.4byte	.LBB7
 10231 0556 0A010000 		.4byte	.LBE7-.LBB7
 10232 055a 19       		.uleb128 0x19
 10233 055b 6900     		.ascii	"i\000"
 10234 055d 01       		.byte	0x1
 10235 055e 0502     		.2byte	0x205
 10236 0560 94000000 		.4byte	0x94
 10237 0564 02       		.uleb128 0x2
 10238 0565 91       		.byte	0x91
 10239 0566 64       		.sleb128 -28
 10240 0567 11       		.uleb128 0x11
 10241 0568 D0000000 		.4byte	.LBB8
 10242 056c EE000000 		.4byte	.LBE8-.LBB8
 10243 0570 17       		.uleb128 0x17
 10244 0571 27040000 		.4byte	.LASF79
 10245 0575 01       		.byte	0x1
 10246 0576 0702     		.2byte	0x207
 10247 0578 94000000 		.4byte	0x94
 10248 057c 03       		.uleb128 0x3
 10249 057d 91       		.byte	0x91
 10250 057e 847F     		.sleb128 -124
 10251 0580 11       		.uleb128 0x11
 10252 0581 DE000000 		.4byte	.LBB9
 10253 0585 E0000000 		.4byte	.LBE9-.LBB9
 10254 0589 19       		.uleb128 0x19
 10255 058a 6A00     		.ascii	"j\000"
 10256 058c 01       		.byte	0x1
 10257 058d 0802     		.2byte	0x208
 10258 058f 94000000 		.4byte	0x94
 10259 0593 02       		.uleb128 0x2
 10260 0594 91       		.byte	0x91
 10261 0595 60       		.sleb128 -32
 10262 0596 11       		.uleb128 0x11
 10263 0597 E6000000 		.4byte	.LBB10
 10264 059b C6000000 		.4byte	.LBE10-.LBB10
 10265 059f 17       		.uleb128 0x17
 10266 05a0 5F030000 		.4byte	.LASF80
 10267 05a4 01       		.byte	0x1
 10268 05a5 0B02     		.2byte	0x20b
 10269 05a7 94000000 		.4byte	0x94
 10270 05ab 03       		.uleb128 0x3
 10271 05ac 91       		.byte	0x91
 10272 05ad 807F     		.sleb128 -128
 10273 05af 17       		.uleb128 0x17
 10274 05b0 BD100000 		.4byte	.LASF81
 10275 05b4 01       		.byte	0x1
 10276 05b5 0C02     		.2byte	0x20c
 10277 05b7 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 229


 10278 05bb 03       		.uleb128 0x3
 10279 05bc 91       		.byte	0x91
 10280 05bd FE7E     		.sleb128 -130
 10281 05bf 17       		.uleb128 0x17
 10282 05c0 280A0000 		.4byte	.LASF82
 10283 05c4 01       		.byte	0x1
 10284 05c5 0D02     		.2byte	0x20d
 10285 05c7 B8000000 		.4byte	0xb8
 10286 05cb 03       		.uleb128 0x3
 10287 05cc 91       		.byte	0x91
 10288 05cd FC7E     		.sleb128 -132
 10289 05cf 00       		.byte	0
 10290 05d0 00       		.byte	0
 10291 05d1 00       		.byte	0
 10292 05d2 00       		.byte	0
 10293 05d3 00       		.byte	0
 10294 05d4 1D       		.uleb128 0x1d
 10295 05d5 E6010000 		.4byte	.LBB11
 10296 05d9 A4000000 		.4byte	.LBE11-.LBB11
 10297 05dd EF050000 		.4byte	0x5ef
 10298 05e1 19       		.uleb128 0x19
 10299 05e2 6900     		.ascii	"i\000"
 10300 05e4 01       		.byte	0x1
 10301 05e5 1402     		.2byte	0x214
 10302 05e7 94000000 		.4byte	0x94
 10303 05eb 02       		.uleb128 0x2
 10304 05ec 91       		.byte	0x91
 10305 05ed 5C       		.sleb128 -36
 10306 05ee 00       		.byte	0
 10307 05ef 1D       		.uleb128 0x1d
 10308 05f0 8E020000 		.4byte	.LBB12
 10309 05f4 D6000000 		.4byte	.LBE12-.LBB12
 10310 05f8 53060000 		.4byte	0x653
 10311 05fc 19       		.uleb128 0x19
 10312 05fd 6900     		.ascii	"i\000"
 10313 05ff 01       		.byte	0x1
 10314 0600 1C02     		.2byte	0x21c
 10315 0602 94000000 		.4byte	0x94
 10316 0606 02       		.uleb128 0x2
 10317 0607 91       		.byte	0x91
 10318 0608 58       		.sleb128 -40
 10319 0609 1D       		.uleb128 0x1d
 10320 060a 96020000 		.4byte	.LBB13
 10321 060e 34000000 		.4byte	.LBE13-.LBB13
 10322 0612 24060000 		.4byte	0x624
 10323 0616 19       		.uleb128 0x19
 10324 0617 6A00     		.ascii	"j\000"
 10325 0619 01       		.byte	0x1
 10326 061a 1E02     		.2byte	0x21e
 10327 061c 94000000 		.4byte	0x94
 10328 0620 02       		.uleb128 0x2
 10329 0621 91       		.byte	0x91
 10330 0622 54       		.sleb128 -44
 10331 0623 00       		.byte	0
 10332 0624 11       		.uleb128 0x11
 10333 0625 CA020000 		.4byte	.LBB14
 10334 0629 7C000000 		.4byte	.LBE14-.LBB14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 230


 10335 062d 19       		.uleb128 0x19
 10336 062e 6A00     		.ascii	"j\000"
 10337 0630 01       		.byte	0x1
 10338 0631 2302     		.2byte	0x223
 10339 0633 94000000 		.4byte	0x94
 10340 0637 02       		.uleb128 0x2
 10341 0638 91       		.byte	0x91
 10342 0639 50       		.sleb128 -48
 10343 063a 11       		.uleb128 0x11
 10344 063b D2020000 		.4byte	.LBB15
 10345 063f 62000000 		.4byte	.LBE15-.LBB15
 10346 0643 19       		.uleb128 0x19
 10347 0644 6B00     		.ascii	"k\000"
 10348 0646 01       		.byte	0x1
 10349 0647 2502     		.2byte	0x225
 10350 0649 94000000 		.4byte	0x94
 10351 064d 02       		.uleb128 0x2
 10352 064e 91       		.byte	0x91
 10353 064f 4C       		.sleb128 -52
 10354 0650 00       		.byte	0
 10355 0651 00       		.byte	0
 10356 0652 00       		.byte	0
 10357 0653 1D       		.uleb128 0x1d
 10358 0654 36040000 		.4byte	.LBB16
 10359 0658 5C000000 		.4byte	.LBE16-.LBB16
 10360 065c 6E060000 		.4byte	0x66e
 10361 0660 19       		.uleb128 0x19
 10362 0661 7700     		.ascii	"w\000"
 10363 0663 01       		.byte	0x1
 10364 0664 5202     		.2byte	0x252
 10365 0666 94000000 		.4byte	0x94
 10366 066a 02       		.uleb128 0x2
 10367 066b 91       		.byte	0x91
 10368 066c 48       		.sleb128 -56
 10369 066d 00       		.byte	0
 10370 066e 1D       		.uleb128 0x1d
 10371 066f 24050000 		.4byte	.LBB17
 10372 0673 2A000000 		.4byte	.LBE17-.LBB17
 10373 0677 8C060000 		.4byte	0x68c
 10374 067b 17       		.uleb128 0x17
 10375 067c 34080000 		.4byte	.LASF83
 10376 0680 01       		.byte	0x1
 10377 0681 1103     		.2byte	0x311
 10378 0683 A2000000 		.4byte	0xa2
 10379 0687 03       		.uleb128 0x3
 10380 0688 91       		.byte	0x91
 10381 0689 FB7E     		.sleb128 -133
 10382 068b 00       		.byte	0
 10383 068c 1D       		.uleb128 0x1d
 10384 068d 84070000 		.4byte	.LBB18
 10385 0691 4E000000 		.4byte	.LBE18-.LBB18
 10386 0695 C1060000 		.4byte	0x6c1
 10387 0699 19       		.uleb128 0x19
 10388 069a 6900     		.ascii	"i\000"
 10389 069c 01       		.byte	0x1
 10390 069d 5903     		.2byte	0x359
 10391 069f 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 231


 10392 06a3 02       		.uleb128 0x2
 10393 06a4 91       		.byte	0x91
 10394 06a5 44       		.sleb128 -60
 10395 06a6 11       		.uleb128 0x11
 10396 06a7 8A070000 		.4byte	.LBB19
 10397 06ab 3C000000 		.4byte	.LBE19-.LBB19
 10398 06af 17       		.uleb128 0x17
 10399 06b0 2C080000 		.4byte	.LASF84
 10400 06b4 01       		.byte	0x1
 10401 06b5 5B03     		.2byte	0x35b
 10402 06b7 B8000000 		.4byte	0xb8
 10403 06bb 03       		.uleb128 0x3
 10404 06bc 91       		.byte	0x91
 10405 06bd D07E     		.sleb128 -176
 10406 06bf 00       		.byte	0
 10407 06c0 00       		.byte	0
 10408 06c1 1D       		.uleb128 0x1d
 10409 06c2 F8080000 		.4byte	.LBB20
 10410 06c6 D6010000 		.4byte	.LBE20-.LBB20
 10411 06ca DF060000 		.4byte	0x6df
 10412 06ce 17       		.uleb128 0x17
 10413 06cf 5D000000 		.4byte	.LASF85
 10414 06d3 01       		.byte	0x1
 10415 06d4 0904     		.2byte	0x409
 10416 06d6 AD000000 		.4byte	0xad
 10417 06da 03       		.uleb128 0x3
 10418 06db 91       		.byte	0x91
 10419 06dc F87E     		.sleb128 -136
 10420 06de 00       		.byte	0
 10421 06df 1D       		.uleb128 0x1d
 10422 06e0 2A0B0000 		.4byte	.LBB21
 10423 06e4 18000000 		.4byte	.LBE21-.LBB21
 10424 06e8 FD060000 		.4byte	0x6fd
 10425 06ec 17       		.uleb128 0x17
 10426 06ed 62050000 		.4byte	.LASF86
 10427 06f1 01       		.byte	0x1
 10428 06f2 3704     		.2byte	0x437
 10429 06f4 B8000000 		.4byte	0xb8
 10430 06f8 03       		.uleb128 0x3
 10431 06f9 91       		.byte	0x91
 10432 06fa F67E     		.sleb128 -138
 10433 06fc 00       		.byte	0
 10434 06fd 1D       		.uleb128 0x1d
 10435 06fe B60B0000 		.4byte	.LBB22
 10436 0702 96020000 		.4byte	.LBE22-.LBB22
 10437 0706 18070000 		.4byte	0x718
 10438 070a 19       		.uleb128 0x19
 10439 070b 6900     		.ascii	"i\000"
 10440 070d 01       		.byte	0x1
 10441 070e 6204     		.2byte	0x462
 10442 0710 94000000 		.4byte	0x94
 10443 0714 02       		.uleb128 0x2
 10444 0715 91       		.byte	0x91
 10445 0716 40       		.sleb128 -64
 10446 0717 00       		.byte	0
 10447 0718 1D       		.uleb128 0x1d
 10448 0719 520E0000 		.4byte	.LBB23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 232


 10449 071d 66000000 		.4byte	.LBE23-.LBB23
 10450 0721 34070000 		.4byte	0x734
 10451 0725 19       		.uleb128 0x19
 10452 0726 6900     		.ascii	"i\000"
 10453 0728 01       		.byte	0x1
 10454 0729 8404     		.2byte	0x484
 10455 072b 94000000 		.4byte	0x94
 10456 072f 03       		.uleb128 0x3
 10457 0730 91       		.byte	0x91
 10458 0731 BC7F     		.sleb128 -68
 10459 0733 00       		.byte	0
 10460 0734 1D       		.uleb128 0x1d
 10461 0735 32140000 		.4byte	.LBB24
 10462 0739 68000000 		.4byte	.LBE24-.LBB24
 10463 073d 50070000 		.4byte	0x750
 10464 0741 19       		.uleb128 0x19
 10465 0742 6900     		.ascii	"i\000"
 10466 0744 01       		.byte	0x1
 10467 0745 7205     		.2byte	0x572
 10468 0747 94000000 		.4byte	0x94
 10469 074b 03       		.uleb128 0x3
 10470 074c 91       		.byte	0x91
 10471 074d B87F     		.sleb128 -72
 10472 074f 00       		.byte	0
 10473 0750 1D       		.uleb128 0x1d
 10474 0751 A4140000 		.4byte	.LBB25
 10475 0755 98000000 		.4byte	.LBE25-.LBB25
 10476 0759 6C070000 		.4byte	0x76c
 10477 075d 19       		.uleb128 0x19
 10478 075e 6900     		.ascii	"i\000"
 10479 0760 01       		.byte	0x1
 10480 0761 7F05     		.2byte	0x57f
 10481 0763 94000000 		.4byte	0x94
 10482 0767 03       		.uleb128 0x3
 10483 0768 91       		.byte	0x91
 10484 0769 B47F     		.sleb128 -76
 10485 076b 00       		.byte	0
 10486 076c 1D       		.uleb128 0x1d
 10487 076d 56150000 		.4byte	.LBB26
 10488 0771 9C000000 		.4byte	.LBE26-.LBB26
 10489 0775 88070000 		.4byte	0x788
 10490 0779 19       		.uleb128 0x19
 10491 077a 6900     		.ascii	"i\000"
 10492 077c 01       		.byte	0x1
 10493 077d 9605     		.2byte	0x596
 10494 077f 94000000 		.4byte	0x94
 10495 0783 03       		.uleb128 0x3
 10496 0784 91       		.byte	0x91
 10497 0785 B07F     		.sleb128 -80
 10498 0787 00       		.byte	0
 10499 0788 1D       		.uleb128 0x1d
 10500 0789 F8150000 		.4byte	.LBB27
 10501 078d 52030000 		.4byte	.LBE27-.LBB27
 10502 0791 FE070000 		.4byte	0x7fe
 10503 0795 19       		.uleb128 0x19
 10504 0796 6900     		.ascii	"i\000"
 10505 0798 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 233


 10506 0799 A705     		.2byte	0x5a7
 10507 079b 94000000 		.4byte	0x94
 10508 079f 03       		.uleb128 0x3
 10509 07a0 91       		.byte	0x91
 10510 07a1 AC7F     		.sleb128 -84
 10511 07a3 11       		.uleb128 0x11
 10512 07a4 20160000 		.4byte	.LBB28
 10513 07a8 18030000 		.4byte	.LBE28-.LBB28
 10514 07ac 17       		.uleb128 0x17
 10515 07ad DF0B0000 		.4byte	.LASF87
 10516 07b1 01       		.byte	0x1
 10517 07b2 B805     		.2byte	0x5b8
 10518 07b4 FD000000 		.4byte	0xfd
 10519 07b8 03       		.uleb128 0x3
 10520 07b9 91       		.byte	0x91
 10521 07ba F07E     		.sleb128 -144
 10522 07bc 17       		.uleb128 0x17
 10523 07bd C30E0000 		.4byte	.LASF88
 10524 07c1 01       		.byte	0x1
 10525 07c2 C505     		.2byte	0x5c5
 10526 07c4 FD000000 		.4byte	0xfd
 10527 07c8 03       		.uleb128 0x3
 10528 07c9 91       		.byte	0x91
 10529 07ca EC7E     		.sleb128 -148
 10530 07cc 17       		.uleb128 0x17
 10531 07cd 030B0000 		.4byte	.LASF89
 10532 07d1 01       		.byte	0x1
 10533 07d2 C805     		.2byte	0x5c8
 10534 07d4 FD000000 		.4byte	0xfd
 10535 07d8 03       		.uleb128 0x3
 10536 07d9 91       		.byte	0x91
 10537 07da E87E     		.sleb128 -152
 10538 07dc 17       		.uleb128 0x17
 10539 07dd DD050000 		.4byte	.LASF90
 10540 07e1 01       		.byte	0x1
 10541 07e2 CA05     		.2byte	0x5ca
 10542 07e4 FD000000 		.4byte	0xfd
 10543 07e8 03       		.uleb128 0x3
 10544 07e9 91       		.byte	0x91
 10545 07ea E47E     		.sleb128 -156
 10546 07ec 17       		.uleb128 0x17
 10547 07ed 510E0000 		.4byte	.LASF91
 10548 07f1 01       		.byte	0x1
 10549 07f2 CC05     		.2byte	0x5cc
 10550 07f4 FD000000 		.4byte	0xfd
 10551 07f8 03       		.uleb128 0x3
 10552 07f9 91       		.byte	0x91
 10553 07fa E07E     		.sleb128 -160
 10554 07fc 00       		.byte	0
 10555 07fd 00       		.byte	0
 10556 07fe 1D       		.uleb128 0x1d
 10557 07ff 6C1A0000 		.4byte	.LBB29
 10558 0803 4E000000 		.4byte	.LBE29-.LBB29
 10559 0807 1A080000 		.4byte	0x81a
 10560 080b 19       		.uleb128 0x19
 10561 080c 6900     		.ascii	"i\000"
 10562 080e 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 234


 10563 080f 2006     		.2byte	0x620
 10564 0811 0D020000 		.4byte	0x20d
 10565 0815 03       		.uleb128 0x3
 10566 0816 91       		.byte	0x91
 10567 0817 A87F     		.sleb128 -88
 10568 0819 00       		.byte	0
 10569 081a 1D       		.uleb128 0x1d
 10570 081b 6E1B0000 		.4byte	.LBB30
 10571 081f 22000000 		.4byte	.LBE30-.LBB30
 10572 0823 36080000 		.4byte	0x836
 10573 0827 19       		.uleb128 0x19
 10574 0828 6900     		.ascii	"i\000"
 10575 082a 01       		.byte	0x1
 10576 082b 4F06     		.2byte	0x64f
 10577 082d 94000000 		.4byte	0x94
 10578 0831 03       		.uleb128 0x3
 10579 0832 91       		.byte	0x91
 10580 0833 A47F     		.sleb128 -92
 10581 0835 00       		.byte	0
 10582 0836 1D       		.uleb128 0x1d
 10583 0837 901B0000 		.4byte	.LBB31
 10584 083b 8C000000 		.4byte	.LBE31-.LBB31
 10585 083f 52080000 		.4byte	0x852
 10586 0843 19       		.uleb128 0x19
 10587 0844 6900     		.ascii	"i\000"
 10588 0846 01       		.byte	0x1
 10589 0847 5306     		.2byte	0x653
 10590 0849 94000000 		.4byte	0x94
 10591 084d 03       		.uleb128 0x3
 10592 084e 91       		.byte	0x91
 10593 084f A07F     		.sleb128 -96
 10594 0851 00       		.byte	0
 10595 0852 1D       		.uleb128 0x1d
 10596 0853 1C1C0000 		.4byte	.LBB32
 10597 0857 22000000 		.4byte	.LBE32-.LBB32
 10598 085b 6E080000 		.4byte	0x86e
 10599 085f 19       		.uleb128 0x19
 10600 0860 6900     		.ascii	"i\000"
 10601 0862 01       		.byte	0x1
 10602 0863 5706     		.2byte	0x657
 10603 0865 94000000 		.4byte	0x94
 10604 0869 03       		.uleb128 0x3
 10605 086a 91       		.byte	0x91
 10606 086b 9C7F     		.sleb128 -100
 10607 086d 00       		.byte	0
 10608 086e 1D       		.uleb128 0x1d
 10609 086f C81C0000 		.4byte	.LBB33
 10610 0873 56000000 		.4byte	.LBE33-.LBB33
 10611 0877 A4080000 		.4byte	0x8a4
 10612 087b 19       		.uleb128 0x19
 10613 087c 6900     		.ascii	"i\000"
 10614 087e 01       		.byte	0x1
 10615 087f 6A06     		.2byte	0x66a
 10616 0881 94000000 		.4byte	0x94
 10617 0885 03       		.uleb128 0x3
 10618 0886 91       		.byte	0x91
 10619 0887 987F     		.sleb128 -104
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 235


 10620 0889 11       		.uleb128 0x11
 10621 088a CE1C0000 		.4byte	.LBB34
 10622 088e 44000000 		.4byte	.LBE34-.LBB34
 10623 0892 17       		.uleb128 0x17
 10624 0893 4C0D0000 		.4byte	.LASF92
 10625 0897 01       		.byte	0x1
 10626 0898 6C06     		.2byte	0x66c
 10627 089a 94000000 		.4byte	0x94
 10628 089e 03       		.uleb128 0x3
 10629 089f 91       		.byte	0x91
 10630 08a0 DC7E     		.sleb128 -164
 10631 08a2 00       		.byte	0
 10632 08a3 00       		.byte	0
 10633 08a4 1D       		.uleb128 0x1d
 10634 08a5 B01D0000 		.4byte	.LBB35
 10635 08a9 B6000000 		.4byte	.LBE35-.LBB35
 10636 08ad 16090000 		.4byte	0x916
 10637 08b1 17       		.uleb128 0x17
 10638 08b2 A4020000 		.4byte	.LASF93
 10639 08b6 01       		.byte	0x1
 10640 08b7 9306     		.2byte	0x693
 10641 08b9 94000000 		.4byte	0x94
 10642 08bd 03       		.uleb128 0x3
 10643 08be 91       		.byte	0x91
 10644 08bf D87E     		.sleb128 -168
 10645 08c1 17       		.uleb128 0x17
 10646 08c2 DC000000 		.4byte	.LASF94
 10647 08c6 01       		.byte	0x1
 10648 08c7 9406     		.2byte	0x694
 10649 08c9 94000000 		.4byte	0x94
 10650 08cd 03       		.uleb128 0x3
 10651 08ce 91       		.byte	0x91
 10652 08cf D47E     		.sleb128 -172
 10653 08d1 17       		.uleb128 0x17
 10654 08d2 AA0E0000 		.4byte	.LASF95
 10655 08d6 01       		.byte	0x1
 10656 08d7 9506     		.2byte	0x695
 10657 08d9 94000000 		.4byte	0x94
 10658 08dd 03       		.uleb128 0x3
 10659 08de 91       		.byte	0x91
 10660 08df 947F     		.sleb128 -108
 10661 08e1 1D       		.uleb128 0x1d
 10662 08e2 C01D0000 		.4byte	.LBB36
 10663 08e6 36000000 		.4byte	.LBE36-.LBB36
 10664 08ea FD080000 		.4byte	0x8fd
 10665 08ee 19       		.uleb128 0x19
 10666 08ef 6900     		.ascii	"i\000"
 10667 08f1 01       		.byte	0x1
 10668 08f2 9606     		.2byte	0x696
 10669 08f4 94000000 		.4byte	0x94
 10670 08f8 03       		.uleb128 0x3
 10671 08f9 91       		.byte	0x91
 10672 08fa 907F     		.sleb128 -112
 10673 08fc 00       		.byte	0
 10674 08fd 11       		.uleb128 0x11
 10675 08fe FA1D0000 		.4byte	.LBB37
 10676 0902 44000000 		.4byte	.LBE37-.LBB37
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 236


 10677 0906 19       		.uleb128 0x19
 10678 0907 6900     		.ascii	"i\000"
 10679 0909 01       		.byte	0x1
 10680 090a 9C06     		.2byte	0x69c
 10681 090c 94000000 		.4byte	0x94
 10682 0910 03       		.uleb128 0x3
 10683 0911 91       		.byte	0x91
 10684 0912 8C7F     		.sleb128 -116
 10685 0914 00       		.byte	0
 10686 0915 00       		.byte	0
 10687 0916 11       		.uleb128 0x11
 10688 0917 101F0000 		.4byte	.LBB38
 10689 091b 28000000 		.4byte	.LBE38-.LBB38
 10690 091f 17       		.uleb128 0x17
 10691 0920 34080000 		.4byte	.LASF83
 10692 0924 01       		.byte	0x1
 10693 0925 B406     		.2byte	0x6b4
 10694 0927 A2000000 		.4byte	0xa2
 10695 092b 03       		.uleb128 0x3
 10696 092c 91       		.byte	0x91
 10697 092d D37E     		.sleb128 -173
 10698 092f 00       		.byte	0
 10699 0930 00       		.byte	0
 10700 0931 14       		.uleb128 0x14
 10701 0932 09050000 		.4byte	.LASF96
 10702 0936 01       		.byte	0x1
 10703 0937 D306     		.2byte	0x6d3
 10704 0939 00000000 		.4byte	.LFB76
 10705 093d 70000000 		.4byte	.LFE76-.LFB76
 10706 0941 01       		.uleb128 0x1
 10707 0942 9C       		.byte	0x9c
 10708 0943 14       		.uleb128 0x14
 10709 0944 00100000 		.4byte	.LASF97
 10710 0948 01       		.byte	0x1
 10711 0949 E806     		.2byte	0x6e8
 10712 094b 00000000 		.4byte	.LFB77
 10713 094f 70010000 		.4byte	.LFE77-.LFB77
 10714 0953 01       		.uleb128 0x1
 10715 0954 9C       		.byte	0x9c
 10716 0955 15       		.uleb128 0x15
 10717 0956 5F080000 		.4byte	.LASF98
 10718 095a 01       		.byte	0x1
 10719 095b 1007     		.2byte	0x710
 10720 095d D9000000 		.4byte	0xd9
 10721 0961 00000000 		.4byte	.LFB78
 10722 0965 E0000000 		.4byte	.LFE78-.LFB78
 10723 0969 01       		.uleb128 0x1
 10724 096a 9C       		.byte	0x9c
 10725 096b CA090000 		.4byte	0x9ca
 10726 096f 18       		.uleb128 0x18
 10727 0970 710F0000 		.4byte	.LASF99
 10728 0974 01       		.byte	0x1
 10729 0975 1007     		.2byte	0x710
 10730 0977 D9000000 		.4byte	0xd9
 10731 097b 02       		.uleb128 0x2
 10732 097c 91       		.byte	0x91
 10733 097d 67       		.sleb128 -25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 237


 10734 097e 18       		.uleb128 0x18
 10735 097f 7A010000 		.4byte	.LASF100
 10736 0983 01       		.byte	0x1
 10737 0984 1007     		.2byte	0x710
 10738 0986 E5000000 		.4byte	0xe5
 10739 098a 02       		.uleb128 0x2
 10740 098b 91       		.byte	0x91
 10741 098c 64       		.sleb128 -28
 10742 098d 18       		.uleb128 0x18
 10743 098e A50E0000 		.4byte	.LASF101
 10744 0992 01       		.byte	0x1
 10745 0993 1007     		.2byte	0x710
 10746 0995 A2000000 		.4byte	0xa2
 10747 0999 02       		.uleb128 0x2
 10748 099a 91       		.byte	0x91
 10749 099b 66       		.sleb128 -26
 10750 099c 17       		.uleb128 0x17
 10751 099d 34080000 		.4byte	.LASF83
 10752 09a1 01       		.byte	0x1
 10753 09a2 1207     		.2byte	0x712
 10754 09a4 2A010000 		.4byte	0x12a
 10755 09a8 02       		.uleb128 0x2
 10756 09a9 91       		.byte	0x91
 10757 09aa 6F       		.sleb128 -17
 10758 09ab 17       		.uleb128 0x17
 10759 09ac 05030000 		.4byte	.LASF102
 10760 09b0 01       		.byte	0x1
 10761 09b1 1307     		.2byte	0x713
 10762 09b3 A2000000 		.4byte	0xa2
 10763 09b7 02       		.uleb128 0x2
 10764 09b8 91       		.byte	0x91
 10765 09b9 77       		.sleb128 -9
 10766 09ba 17       		.uleb128 0x17
 10767 09bb B80A0000 		.4byte	.LASF103
 10768 09bf 01       		.byte	0x1
 10769 09c0 1407     		.2byte	0x714
 10770 09c2 CE000000 		.4byte	0xce
 10771 09c6 02       		.uleb128 0x2
 10772 09c7 91       		.byte	0x91
 10773 09c8 70       		.sleb128 -16
 10774 09c9 00       		.byte	0
 10775 09ca 15       		.uleb128 0x15
 10776 09cb 470C0000 		.4byte	.LASF104
 10777 09cf 01       		.byte	0x1
 10778 09d0 4907     		.2byte	0x749
 10779 09d2 D9000000 		.4byte	0xd9
 10780 09d6 00000000 		.4byte	.LFB79
 10781 09da E0000000 		.4byte	.LFE79-.LFB79
 10782 09de 01       		.uleb128 0x1
 10783 09df 9C       		.byte	0x9c
 10784 09e0 3F0A0000 		.4byte	0xa3f
 10785 09e4 18       		.uleb128 0x18
 10786 09e5 710F0000 		.4byte	.LASF99
 10787 09e9 01       		.byte	0x1
 10788 09ea 4907     		.2byte	0x749
 10789 09ec D9000000 		.4byte	0xd9
 10790 09f0 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 238


 10791 09f1 91       		.byte	0x91
 10792 09f2 6F       		.sleb128 -17
 10793 09f3 18       		.uleb128 0x18
 10794 09f4 7A010000 		.4byte	.LASF100
 10795 09f8 01       		.byte	0x1
 10796 09f9 4907     		.2byte	0x749
 10797 09fb D9000000 		.4byte	0xd9
 10798 09ff 02       		.uleb128 0x2
 10799 0a00 91       		.byte	0x91
 10800 0a01 6E       		.sleb128 -18
 10801 0a02 18       		.uleb128 0x18
 10802 0a03 A50E0000 		.4byte	.LASF101
 10803 0a07 01       		.byte	0x1
 10804 0a08 4907     		.2byte	0x749
 10805 0a0a A2000000 		.4byte	0xa2
 10806 0a0e 02       		.uleb128 0x2
 10807 0a0f 91       		.byte	0x91
 10808 0a10 6D       		.sleb128 -19
 10809 0a11 17       		.uleb128 0x17
 10810 0a12 34080000 		.4byte	.LASF83
 10811 0a16 01       		.byte	0x1
 10812 0a17 4B07     		.2byte	0x74b
 10813 0a19 2A010000 		.4byte	0x12a
 10814 0a1d 02       		.uleb128 0x2
 10815 0a1e 91       		.byte	0x91
 10816 0a1f 72       		.sleb128 -14
 10817 0a20 17       		.uleb128 0x17
 10818 0a21 B80A0000 		.4byte	.LASF103
 10819 0a25 01       		.byte	0x1
 10820 0a26 4C07     		.2byte	0x74c
 10821 0a28 CE000000 		.4byte	0xce
 10822 0a2c 02       		.uleb128 0x2
 10823 0a2d 91       		.byte	0x91
 10824 0a2e 74       		.sleb128 -12
 10825 0a2f 17       		.uleb128 0x17
 10826 0a30 05030000 		.4byte	.LASF102
 10827 0a34 01       		.byte	0x1
 10828 0a35 4D07     		.2byte	0x74d
 10829 0a37 A2000000 		.4byte	0xa2
 10830 0a3b 02       		.uleb128 0x2
 10831 0a3c 91       		.byte	0x91
 10832 0a3d 73       		.sleb128 -13
 10833 0a3e 00       		.byte	0
 10834 0a3f 14       		.uleb128 0x14
 10835 0a40 6C050000 		.4byte	.LASF105
 10836 0a44 01       		.byte	0x1
 10837 0a45 7C07     		.2byte	0x77c
 10838 0a47 00000000 		.4byte	.LFB80
 10839 0a4b 30000000 		.4byte	.LFE80-.LFB80
 10840 0a4f 01       		.uleb128 0x1
 10841 0a50 9C       		.byte	0x9c
 10842 0a51 1E       		.uleb128 0x1e
 10843 0a52 F20E0000 		.4byte	.LASF107
 10844 0a56 01       		.byte	0x1
 10845 0a57 8B07     		.2byte	0x78b
 10846 0a59 00000000 		.4byte	.LFB81
 10847 0a5d E8000000 		.4byte	.LFE81-.LFB81
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 239


 10848 0a61 01       		.uleb128 0x1
 10849 0a62 9C       		.byte	0x9c
 10850 0a63 14       		.uleb128 0x14
 10851 0a64 2C050000 		.4byte	.LASF108
 10852 0a68 01       		.byte	0x1
 10853 0a69 A007     		.2byte	0x7a0
 10854 0a6b 00000000 		.4byte	.LFB82
 10855 0a6f 54000000 		.4byte	.LFE82-.LFB82
 10856 0a73 01       		.uleb128 0x1
 10857 0a74 9C       		.byte	0x9c
 10858 0a75 14       		.uleb128 0x14
 10859 0a76 4E040000 		.4byte	.LASF109
 10860 0a7a 01       		.byte	0x1
 10861 0a7b B307     		.2byte	0x7b3
 10862 0a7d 00000000 		.4byte	.LFB83
 10863 0a81 C4000000 		.4byte	.LFE83-.LFB83
 10864 0a85 01       		.uleb128 0x1
 10865 0a86 9C       		.byte	0x9c
 10866 0a87 15       		.uleb128 0x15
 10867 0a88 6C0A0000 		.4byte	.LASF110
 10868 0a8c 01       		.byte	0x1
 10869 0a8d E607     		.2byte	0x7e6
 10870 0a8f FD000000 		.4byte	0xfd
 10871 0a93 00000000 		.4byte	.LFB84
 10872 0a97 98000000 		.4byte	.LFE84-.LFB84
 10873 0a9b 01       		.uleb128 0x1
 10874 0a9c 9C       		.byte	0x9c
 10875 0a9d D60A0000 		.4byte	0xad6
 10876 0aa1 16       		.uleb128 0x16
 10877 0aa2 5800     		.ascii	"X\000"
 10878 0aa4 01       		.byte	0x1
 10879 0aa5 E607     		.2byte	0x7e6
 10880 0aa7 FD000000 		.4byte	0xfd
 10881 0aab 02       		.uleb128 0x2
 10882 0aac 91       		.byte	0x91
 10883 0aad 64       		.sleb128 -28
 10884 0aae 19       		.uleb128 0x19
 10885 0aaf 5900     		.ascii	"Y\000"
 10886 0ab1 01       		.byte	0x1
 10887 0ab2 E707     		.2byte	0x7e7
 10888 0ab4 FD000000 		.4byte	0xfd
 10889 0ab8 02       		.uleb128 0x2
 10890 0ab9 91       		.byte	0x91
 10891 0aba 70       		.sleb128 -16
 10892 0abb 19       		.uleb128 0x19
 10893 0abc 4600     		.ascii	"F\000"
 10894 0abe 01       		.byte	0x1
 10895 0abf E707     		.2byte	0x7e7
 10896 0ac1 FD000000 		.4byte	0xfd
 10897 0ac5 02       		.uleb128 0x2
 10898 0ac6 91       		.byte	0x91
 10899 0ac7 74       		.sleb128 -12
 10900 0ac8 19       		.uleb128 0x19
 10901 0ac9 4500     		.ascii	"E\000"
 10902 0acb 01       		.byte	0x1
 10903 0acc E807     		.2byte	0x7e8
 10904 0ace 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 240


 10905 0ad2 02       		.uleb128 0x2
 10906 0ad3 91       		.byte	0x91
 10907 0ad4 6C       		.sleb128 -20
 10908 0ad5 00       		.byte	0
 10909 0ad6 1F       		.uleb128 0x1f
 10910 0ad7 BD000000 		.4byte	.LASF112
 10911 0adb 01       		.byte	0x1
 10912 0adc FA07     		.2byte	0x7fa
 10913 0ade 00000000 		.4byte	.LFB85
 10914 0ae2 D4000000 		.4byte	.LFE85-.LFB85
 10915 0ae6 01       		.uleb128 0x1
 10916 0ae7 9C       		.byte	0x9c
 10917 0ae8 330B0000 		.4byte	0xb33
 10918 0aec 18       		.uleb128 0x18
 10919 0aed B10B0000 		.4byte	.LASF113
 10920 0af1 01       		.byte	0x1
 10921 0af2 FA07     		.2byte	0x7fa
 10922 0af4 94000000 		.4byte	0x94
 10923 0af8 02       		.uleb128 0x2
 10924 0af9 91       		.byte	0x91
 10925 0afa 64       		.sleb128 -28
 10926 0afb 17       		.uleb128 0x17
 10927 0afc 7F0B0000 		.4byte	.LASF114
 10928 0b00 01       		.byte	0x1
 10929 0b01 0608     		.2byte	0x806
 10930 0b03 B8000000 		.4byte	0xb8
 10931 0b07 02       		.uleb128 0x2
 10932 0b08 91       		.byte	0x91
 10933 0b09 76       		.sleb128 -10
 10934 0b0a 11       		.uleb128 0x11
 10935 0b0b 18000000 		.4byte	.LBB39
 10936 0b0f 86000000 		.4byte	.LBE39-.LBB39
 10937 0b13 17       		.uleb128 0x17
 10938 0b14 8B0D0000 		.4byte	.LASF115
 10939 0b18 01       		.byte	0x1
 10940 0b19 0A08     		.2byte	0x80a
 10941 0b1b FD000000 		.4byte	0xfd
 10942 0b1f 02       		.uleb128 0x2
 10943 0b20 91       		.byte	0x91
 10944 0b21 70       		.sleb128 -16
 10945 0b22 17       		.uleb128 0x17
 10946 0b23 82100000 		.4byte	.LASF116
 10947 0b27 01       		.byte	0x1
 10948 0b28 1908     		.2byte	0x819
 10949 0b2a 94000000 		.4byte	0x94
 10950 0b2e 02       		.uleb128 0x2
 10951 0b2f 91       		.byte	0x91
 10952 0b30 6C       		.sleb128 -20
 10953 0b31 00       		.byte	0
 10954 0b32 00       		.byte	0
 10955 0b33 1F       		.uleb128 0x1f
 10956 0b34 FD060000 		.4byte	.LASF117
 10957 0b38 01       		.byte	0x1
 10958 0b39 2508     		.2byte	0x825
 10959 0b3b 00000000 		.4byte	.LFB86
 10960 0b3f 1C000000 		.4byte	.LFE86-.LFB86
 10961 0b43 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 241


 10962 0b44 9C       		.byte	0x9c
 10963 0b45 670B0000 		.4byte	0xb67
 10964 0b49 16       		.uleb128 0x16
 10965 0b4a 636300   		.ascii	"cc\000"
 10966 0b4d 01       		.byte	0x1
 10967 0b4e 2508     		.2byte	0x825
 10968 0b50 94000000 		.4byte	0x94
 10969 0b54 02       		.uleb128 0x2
 10970 0b55 91       		.byte	0x91
 10971 0b56 74       		.sleb128 -12
 10972 0b57 16       		.uleb128 0x16
 10973 0b58 76616C00 		.ascii	"val\000"
 10974 0b5c 01       		.byte	0x1
 10975 0b5d 2508     		.2byte	0x825
 10976 0b5f 94000000 		.4byte	0x94
 10977 0b63 02       		.uleb128 0x2
 10978 0b64 91       		.byte	0x91
 10979 0b65 70       		.sleb128 -16
 10980 0b66 00       		.byte	0
 10981 0b67 1F       		.uleb128 0x1f
 10982 0b68 76090000 		.4byte	.LASF118
 10983 0b6c 01       		.byte	0x1
 10984 0b6d 2B08     		.2byte	0x82b
 10985 0b6f 00000000 		.4byte	.LFB87
 10986 0b73 68000000 		.4byte	.LFE87-.LFB87
 10987 0b77 01       		.uleb128 0x1
 10988 0b78 9C       		.byte	0x9c
 10989 0b79 AB0B0000 		.4byte	0xbab
 10990 0b7d 18       		.uleb128 0x18
 10991 0b7e E5020000 		.4byte	.LASF119
 10992 0b82 01       		.byte	0x1
 10993 0b83 2B08     		.2byte	0x82b
 10994 0b85 94000000 		.4byte	0x94
 10995 0b89 02       		.uleb128 0x2
 10996 0b8a 91       		.byte	0x91
 10997 0b8b 74       		.sleb128 -12
 10998 0b8c 18       		.uleb128 0x18
 10999 0b8d 7F0B0000 		.4byte	.LASF114
 11000 0b91 01       		.byte	0x1
 11001 0b92 2B08     		.2byte	0x82b
 11002 0b94 94000000 		.4byte	0x94
 11003 0b98 02       		.uleb128 0x2
 11004 0b99 91       		.byte	0x91
 11005 0b9a 70       		.sleb128 -16
 11006 0b9b 18       		.uleb128 0x18
 11007 0b9c 57080000 		.4byte	.LASF120
 11008 0ba0 01       		.byte	0x1
 11009 0ba1 2B08     		.2byte	0x82b
 11010 0ba3 94000000 		.4byte	0x94
 11011 0ba7 02       		.uleb128 0x2
 11012 0ba8 91       		.byte	0x91
 11013 0ba9 6C       		.sleb128 -20
 11014 0baa 00       		.byte	0
 11015 0bab 1F       		.uleb128 0x1f
 11016 0bac B8050000 		.4byte	.LASF121
 11017 0bb0 01       		.byte	0x1
 11018 0bb1 3808     		.2byte	0x838
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 242


 11019 0bb3 00000000 		.4byte	.LFB88
 11020 0bb7 68000000 		.4byte	.LFE88-.LFB88
 11021 0bbb 01       		.uleb128 0x1
 11022 0bbc 9C       		.byte	0x9c
 11023 0bbd EF0B0000 		.4byte	0xbef
 11024 0bc1 18       		.uleb128 0x18
 11025 0bc2 E5020000 		.4byte	.LASF119
 11026 0bc6 01       		.byte	0x1
 11027 0bc7 3808     		.2byte	0x838
 11028 0bc9 94000000 		.4byte	0x94
 11029 0bcd 02       		.uleb128 0x2
 11030 0bce 91       		.byte	0x91
 11031 0bcf 74       		.sleb128 -12
 11032 0bd0 18       		.uleb128 0x18
 11033 0bd1 9E040000 		.4byte	.LASF122
 11034 0bd5 01       		.byte	0x1
 11035 0bd6 3808     		.2byte	0x838
 11036 0bd8 94000000 		.4byte	0x94
 11037 0bdc 02       		.uleb128 0x2
 11038 0bdd 91       		.byte	0x91
 11039 0bde 70       		.sleb128 -16
 11040 0bdf 18       		.uleb128 0x18
 11041 0be0 57080000 		.4byte	.LASF120
 11042 0be4 01       		.byte	0x1
 11043 0be5 3808     		.2byte	0x838
 11044 0be7 94000000 		.4byte	0x94
 11045 0beb 02       		.uleb128 0x2
 11046 0bec 91       		.byte	0x91
 11047 0bed 6C       		.sleb128 -20
 11048 0bee 00       		.byte	0
 11049 0bef 1F       		.uleb128 0x1f
 11050 0bf0 04060000 		.4byte	.LASF123
 11051 0bf4 01       		.byte	0x1
 11052 0bf5 4408     		.2byte	0x844
 11053 0bf7 00000000 		.4byte	.LFB89
 11054 0bfb 68000000 		.4byte	.LFE89-.LFB89
 11055 0bff 01       		.uleb128 0x1
 11056 0c00 9C       		.byte	0x9c
 11057 0c01 330C0000 		.4byte	0xc33
 11058 0c05 18       		.uleb128 0x18
 11059 0c06 A5010000 		.4byte	.LASF124
 11060 0c0a 01       		.byte	0x1
 11061 0c0b 4408     		.2byte	0x844
 11062 0c0d 94000000 		.4byte	0x94
 11063 0c11 02       		.uleb128 0x2
 11064 0c12 91       		.byte	0x91
 11065 0c13 74       		.sleb128 -12
 11066 0c14 18       		.uleb128 0x18
 11067 0c15 F2000000 		.4byte	.LASF125
 11068 0c19 01       		.byte	0x1
 11069 0c1a 4408     		.2byte	0x844
 11070 0c1c 94000000 		.4byte	0x94
 11071 0c20 02       		.uleb128 0x2
 11072 0c21 91       		.byte	0x91
 11073 0c22 70       		.sleb128 -16
 11074 0c23 18       		.uleb128 0x18
 11075 0c24 57080000 		.4byte	.LASF120
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 243


 11076 0c28 01       		.byte	0x1
 11077 0c29 4408     		.2byte	0x844
 11078 0c2b 94000000 		.4byte	0x94
 11079 0c2f 02       		.uleb128 0x2
 11080 0c30 91       		.byte	0x91
 11081 0c31 6C       		.sleb128 -20
 11082 0c32 00       		.byte	0
 11083 0c33 1F       		.uleb128 0x1f
 11084 0c34 0B0B0000 		.4byte	.LASF126
 11085 0c38 01       		.byte	0x1
 11086 0c39 5008     		.2byte	0x850
 11087 0c3b 00000000 		.4byte	.LFB90
 11088 0c3f 6C000000 		.4byte	.LFE90-.LFB90
 11089 0c43 01       		.uleb128 0x1
 11090 0c44 9C       		.byte	0x9c
 11091 0c45 680C0000 		.4byte	0xc68
 11092 0c49 16       		.uleb128 0x16
 11093 0c4a 76616C00 		.ascii	"val\000"
 11094 0c4e 01       		.byte	0x1
 11095 0c4f 5008     		.2byte	0x850
 11096 0c51 94000000 		.4byte	0x94
 11097 0c55 02       		.uleb128 0x2
 11098 0c56 91       		.byte	0x91
 11099 0c57 74       		.sleb128 -12
 11100 0c58 18       		.uleb128 0x18
 11101 0c59 57080000 		.4byte	.LASF120
 11102 0c5d 01       		.byte	0x1
 11103 0c5e 5008     		.2byte	0x850
 11104 0c60 94000000 		.4byte	0x94
 11105 0c64 02       		.uleb128 0x2
 11106 0c65 91       		.byte	0x91
 11107 0c66 70       		.sleb128 -16
 11108 0c67 00       		.byte	0
 11109 0c68 14       		.uleb128 0x14
 11110 0c69 F1020000 		.4byte	.LASF127
 11111 0c6d 01       		.byte	0x1
 11112 0c6e 5C08     		.2byte	0x85c
 11113 0c70 00000000 		.4byte	.LFB91
 11114 0c74 64000000 		.4byte	.LFE91-.LFB91
 11115 0c78 01       		.uleb128 0x1
 11116 0c79 9C       		.byte	0x9c
 11117 0c7a 1F       		.uleb128 0x1f
 11118 0c7b 05070000 		.4byte	.LASF128
 11119 0c7f 01       		.byte	0x1
 11120 0c80 7408     		.2byte	0x874
 11121 0c82 00000000 		.4byte	.LFB92
 11122 0c86 EC0B0000 		.4byte	.LFE92-.LFB92
 11123 0c8a 01       		.uleb128 0x1
 11124 0c8b 9C       		.byte	0x9c
 11125 0c8c C70E0000 		.4byte	0xec7
 11126 0c90 1D       		.uleb128 0x1d
 11127 0c91 16000000 		.4byte	.LBB40
 11128 0c95 C0050000 		.4byte	.LBE40-.LBB40
 11129 0c99 410D0000 		.4byte	0xd41
 11130 0c9d 17       		.uleb128 0x17
 11131 0c9e FD010000 		.4byte	.LASF129
 11132 0ca2 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 244


 11133 0ca3 8308     		.2byte	0x883
 11134 0ca5 7C020000 		.4byte	0x27c
 11135 0ca9 03       		.uleb128 0x3
 11136 0caa 91       		.byte	0x91
 11137 0cab B07F     		.sleb128 -80
 11138 0cad 19       		.uleb128 0x19
 11139 0cae 6900     		.ascii	"i\000"
 11140 0cb0 01       		.byte	0x1
 11141 0cb1 8408     		.2byte	0x884
 11142 0cb3 CE000000 		.4byte	0xce
 11143 0cb7 02       		.uleb128 0x2
 11144 0cb8 91       		.byte	0x91
 11145 0cb9 6C       		.sleb128 -20
 11146 0cba 17       		.uleb128 0x17
 11147 0cbb 76040000 		.4byte	.LASF130
 11148 0cbf 01       		.byte	0x1
 11149 0cc0 8508     		.2byte	0x885
 11150 0cc2 A2000000 		.4byte	0xa2
 11151 0cc6 02       		.uleb128 0x2
 11152 0cc7 91       		.byte	0x91
 11153 0cc8 57       		.sleb128 -41
 11154 0cc9 17       		.uleb128 0x17
 11155 0cca 0C040000 		.4byte	.LASF131
 11156 0cce 01       		.byte	0x1
 11157 0ccf 9908     		.2byte	0x899
 11158 0cd1 B8000000 		.4byte	0xb8
 11159 0cd5 02       		.uleb128 0x2
 11160 0cd6 91       		.byte	0x91
 11161 0cd7 54       		.sleb128 -44
 11162 0cd8 1D       		.uleb128 0x1d
 11163 0cd9 B2000000 		.4byte	.LBB41
 11164 0cdd 76000000 		.4byte	.LBE41-.LBB41
 11165 0ce1 0A0D0000 		.4byte	0xd0a
 11166 0ce5 19       		.uleb128 0x19
 11167 0ce6 6A00     		.ascii	"j\000"
 11168 0ce8 01       		.byte	0x1
 11169 0ce9 8F08     		.2byte	0x88f
 11170 0ceb 94000000 		.4byte	0x94
 11171 0cef 02       		.uleb128 0x2
 11172 0cf0 91       		.byte	0x91
 11173 0cf1 68       		.sleb128 -24
 11174 0cf2 11       		.uleb128 0x11
 11175 0cf3 B8000000 		.4byte	.LBB42
 11176 0cf7 64000000 		.4byte	.LBE42-.LBB42
 11177 0cfb 19       		.uleb128 0x19
 11178 0cfc 6B00     		.ascii	"k\000"
 11179 0cfe 01       		.byte	0x1
 11180 0cff 9108     		.2byte	0x891
 11181 0d01 94000000 		.4byte	0x94
 11182 0d05 02       		.uleb128 0x2
 11183 0d06 91       		.byte	0x91
 11184 0d07 64       		.sleb128 -28
 11185 0d08 00       		.byte	0
 11186 0d09 00       		.byte	0
 11187 0d0a 1D       		.uleb128 0x1d
 11188 0d0b FA010000 		.4byte	.LBB43
 11189 0d0f 46000000 		.4byte	.LBE43-.LBB43
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 245


 11190 0d13 270D0000 		.4byte	0xd27
 11191 0d17 17       		.uleb128 0x17
 11192 0d18 E5010000 		.4byte	.LASF132
 11193 0d1c 01       		.byte	0x1
 11194 0d1d B108     		.2byte	0x8b1
 11195 0d1f B8000000 		.4byte	0xb8
 11196 0d23 02       		.uleb128 0x2
 11197 0d24 91       		.byte	0x91
 11198 0d25 52       		.sleb128 -46
 11199 0d26 00       		.byte	0
 11200 0d27 11       		.uleb128 0x11
 11201 0d28 66040000 		.4byte	.LBB44
 11202 0d2c 48000000 		.4byte	.LBE44-.LBB44
 11203 0d30 17       		.uleb128 0x17
 11204 0d31 E5010000 		.4byte	.LASF132
 11205 0d35 01       		.byte	0x1
 11206 0d36 ED08     		.2byte	0x8ed
 11207 0d38 AD000000 		.4byte	0xad
 11208 0d3c 02       		.uleb128 0x2
 11209 0d3d 91       		.byte	0x91
 11210 0d3e 50       		.sleb128 -48
 11211 0d3f 00       		.byte	0
 11212 0d40 00       		.byte	0
 11213 0d41 1D       		.uleb128 0x1d
 11214 0d42 E0050000 		.4byte	.LBB45
 11215 0d46 04030000 		.4byte	.LBE45-.LBB45
 11216 0d4a 290E0000 		.4byte	0xe29
 11217 0d4e 17       		.uleb128 0x17
 11218 0d4f FD010000 		.4byte	.LASF129
 11219 0d53 01       		.byte	0x1
 11220 0d54 4E09     		.2byte	0x94e
 11221 0d56 7C020000 		.4byte	0x27c
 11222 0d5a 03       		.uleb128 0x3
 11223 0d5b 91       		.byte	0x91
 11224 0d5c AC7F     		.sleb128 -84
 11225 0d5e 19       		.uleb128 0x19
 11226 0d5f 6900     		.ascii	"i\000"
 11227 0d61 01       		.byte	0x1
 11228 0d62 4F09     		.2byte	0x94f
 11229 0d64 CE000000 		.4byte	0xce
 11230 0d68 02       		.uleb128 0x2
 11231 0d69 91       		.byte	0x91
 11232 0d6a 60       		.sleb128 -32
 11233 0d6b 17       		.uleb128 0x17
 11234 0d6c 76040000 		.4byte	.LASF130
 11235 0d70 01       		.byte	0x1
 11236 0d71 5009     		.2byte	0x950
 11237 0d73 A2000000 		.4byte	0xa2
 11238 0d77 02       		.uleb128 0x2
 11239 0d78 91       		.byte	0x91
 11240 0d79 4F       		.sleb128 -49
 11241 0d7a 1D       		.uleb128 0x1d
 11242 0d7b 14060000 		.4byte	.LBB46
 11243 0d7f 82000000 		.4byte	.LBE46-.LBB46
 11244 0d83 970D0000 		.4byte	0xd97
 11245 0d87 17       		.uleb128 0x17
 11246 0d88 170E0000 		.4byte	.LASF133
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 246


 11247 0d8c 01       		.byte	0x1
 11248 0d8d 5409     		.2byte	0x954
 11249 0d8f A2000000 		.4byte	0xa2
 11250 0d93 02       		.uleb128 0x2
 11251 0d94 91       		.byte	0x91
 11252 0d95 4E       		.sleb128 -50
 11253 0d96 00       		.byte	0
 11254 0d97 11       		.uleb128 0x11
 11255 0d98 AC060000 		.4byte	.LBB47
 11256 0d9c BA010000 		.4byte	.LBE47-.LBB47
 11257 0da0 17       		.uleb128 0x17
 11258 0da1 DA0E0000 		.4byte	.LASF134
 11259 0da5 01       		.byte	0x1
 11260 0da6 5F09     		.2byte	0x95f
 11261 0da8 CE000000 		.4byte	0xce
 11262 0dac 02       		.uleb128 0x2
 11263 0dad 91       		.byte	0x91
 11264 0dae 5C       		.sleb128 -36
 11265 0daf 11       		.uleb128 0x11
 11266 0db0 B2060000 		.4byte	.LBB48
 11267 0db4 A6010000 		.4byte	.LBE48-.LBB48
 11268 0db8 17       		.uleb128 0x17
 11269 0db9 27040000 		.4byte	.LASF79
 11270 0dbd 01       		.byte	0x1
 11271 0dbe 6109     		.2byte	0x961
 11272 0dc0 B8000000 		.4byte	0xb8
 11273 0dc4 02       		.uleb128 0x2
 11274 0dc5 91       		.byte	0x91
 11275 0dc6 4C       		.sleb128 -52
 11276 0dc7 11       		.uleb128 0x11
 11277 0dc8 C0060000 		.4byte	.LBB49
 11278 0dcc 98010000 		.4byte	.LBE49-.LBB49
 11279 0dd0 17       		.uleb128 0x17
 11280 0dd1 D0050000 		.4byte	.LASF135
 11281 0dd5 01       		.byte	0x1
 11282 0dd6 6209     		.2byte	0x962
 11283 0dd8 CE000000 		.4byte	0xce
 11284 0ddc 02       		.uleb128 0x2
 11285 0ddd 91       		.byte	0x91
 11286 0dde 58       		.sleb128 -40
 11287 0ddf 11       		.uleb128 0x11
 11288 0de0 1C070000 		.4byte	.LBB50
 11289 0de4 2E010000 		.4byte	.LBE50-.LBB50
 11290 0de8 17       		.uleb128 0x17
 11291 0de9 DA030000 		.4byte	.LASF136
 11292 0ded 01       		.byte	0x1
 11293 0dee 6C09     		.2byte	0x96c
 11294 0df0 B8000000 		.4byte	0xb8
 11295 0df4 02       		.uleb128 0x2
 11296 0df5 91       		.byte	0x91
 11297 0df6 4A       		.sleb128 -54
 11298 0df7 17       		.uleb128 0x17
 11299 0df8 DC0C0000 		.4byte	.LASF137
 11300 0dfc 01       		.byte	0x1
 11301 0dfd 6D09     		.2byte	0x96d
 11302 0dff A2000000 		.4byte	0xa2
 11303 0e03 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 247


 11304 0e04 91       		.byte	0x91
 11305 0e05 49       		.sleb128 -55
 11306 0e06 17       		.uleb128 0x17
 11307 0e07 21010000 		.4byte	.LASF138
 11308 0e0b 01       		.byte	0x1
 11309 0e0c 6E09     		.2byte	0x96e
 11310 0e0e A2000000 		.4byte	0xa2
 11311 0e12 02       		.uleb128 0x2
 11312 0e13 91       		.byte	0x91
 11313 0e14 48       		.sleb128 -56
 11314 0e15 17       		.uleb128 0x17
 11315 0e16 5F030000 		.4byte	.LASF80
 11316 0e1a 01       		.byte	0x1
 11317 0e1b 7109     		.2byte	0x971
 11318 0e1d B8000000 		.4byte	0xb8
 11319 0e21 02       		.uleb128 0x2
 11320 0e22 91       		.byte	0x91
 11321 0e23 46       		.sleb128 -58
 11322 0e24 00       		.byte	0
 11323 0e25 00       		.byte	0
 11324 0e26 00       		.byte	0
 11325 0e27 00       		.byte	0
 11326 0e28 00       		.byte	0
 11327 0e29 1D       		.uleb128 0x1d
 11328 0e2a EE080000 		.4byte	.LBB51
 11329 0e2e 14010000 		.4byte	.LBE51-.LBB51
 11330 0e32 740E0000 		.4byte	0xe74
 11331 0e36 17       		.uleb128 0x17
 11332 0e37 FD010000 		.4byte	.LASF129
 11333 0e3b 01       		.byte	0x1
 11334 0e3c 9509     		.2byte	0x995
 11335 0e3e 7C020000 		.4byte	0x27c
 11336 0e42 03       		.uleb128 0x3
 11337 0e43 91       		.byte	0x91
 11338 0e44 A87F     		.sleb128 -88
 11339 0e46 19       		.uleb128 0x19
 11340 0e47 6900     		.ascii	"i\000"
 11341 0e49 01       		.byte	0x1
 11342 0e4a 9609     		.2byte	0x996
 11343 0e4c CE000000 		.4byte	0xce
 11344 0e50 02       		.uleb128 0x2
 11345 0e51 91       		.byte	0x91
 11346 0e52 40       		.sleb128 -64
 11347 0e53 17       		.uleb128 0x17
 11348 0e54 3A050000 		.4byte	.LASF139
 11349 0e58 01       		.byte	0x1
 11350 0e59 9F09     		.2byte	0x99f
 11351 0e5b B8000000 		.4byte	0xb8
 11352 0e5f 03       		.uleb128 0x3
 11353 0e60 91       		.byte	0x91
 11354 0e61 BE7F     		.sleb128 -66
 11355 0e63 17       		.uleb128 0x17
 11356 0e64 E5010000 		.4byte	.LASF132
 11357 0e68 01       		.byte	0x1
 11358 0e69 AD09     		.2byte	0x9ad
 11359 0e6b B8000000 		.4byte	0xb8
 11360 0e6f 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 248


 11361 0e70 91       		.byte	0x91
 11362 0e71 BC7F     		.sleb128 -68
 11363 0e73 00       		.byte	0
 11364 0e74 11       		.uleb128 0x11
 11365 0e75 0E0A0000 		.4byte	.LBB52
 11366 0e79 AA010000 		.4byte	.LBE52-.LBB52
 11367 0e7d 17       		.uleb128 0x17
 11368 0e7e FD010000 		.4byte	.LASF129
 11369 0e82 01       		.byte	0x1
 11370 0e83 B809     		.2byte	0x9b8
 11371 0e85 7C020000 		.4byte	0x27c
 11372 0e89 03       		.uleb128 0x3
 11373 0e8a 91       		.byte	0x91
 11374 0e8b A47F     		.sleb128 -92
 11375 0e8d 19       		.uleb128 0x19
 11376 0e8e 6900     		.ascii	"i\000"
 11377 0e90 01       		.byte	0x1
 11378 0e91 B909     		.2byte	0x9b9
 11379 0e93 CE000000 		.4byte	0xce
 11380 0e97 03       		.uleb128 0x3
 11381 0e98 91       		.byte	0x91
 11382 0e99 B87F     		.sleb128 -72
 11383 0e9b 17       		.uleb128 0x17
 11384 0e9c 3A050000 		.4byte	.LASF139
 11385 0ea0 01       		.byte	0x1
 11386 0ea1 C209     		.2byte	0x9c2
 11387 0ea3 B8000000 		.4byte	0xb8
 11388 0ea7 03       		.uleb128 0x3
 11389 0ea8 91       		.byte	0x91
 11390 0ea9 B67F     		.sleb128 -74
 11391 0eab 11       		.uleb128 0x11
 11392 0eac 360B0000 		.4byte	.LBB53
 11393 0eb0 2C000000 		.4byte	.LBE53-.LBB53
 11394 0eb4 17       		.uleb128 0x17
 11395 0eb5 E5010000 		.4byte	.LASF132
 11396 0eb9 01       		.byte	0x1
 11397 0eba DA09     		.2byte	0x9da
 11398 0ebc AD000000 		.4byte	0xad
 11399 0ec0 03       		.uleb128 0x3
 11400 0ec1 91       		.byte	0x91
 11401 0ec2 B47F     		.sleb128 -76
 11402 0ec4 00       		.byte	0
 11403 0ec5 00       		.byte	0
 11404 0ec6 00       		.byte	0
 11405 0ec7 1F       		.uleb128 0x1f
 11406 0ec8 8C030000 		.4byte	.LASF140
 11407 0ecc 01       		.byte	0x1
 11408 0ecd F209     		.2byte	0x9f2
 11409 0ecf 00000000 		.4byte	.LFB93
 11410 0ed3 50010000 		.4byte	.LFE93-.LFB93
 11411 0ed7 01       		.uleb128 0x1
 11412 0ed8 9C       		.byte	0x9c
 11413 0ed9 130F0000 		.4byte	0xf13
 11414 0edd 18       		.uleb128 0x18
 11415 0ede 4E0B0000 		.4byte	.LASF141
 11416 0ee2 01       		.byte	0x1
 11417 0ee3 F209     		.2byte	0x9f2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 249


 11418 0ee5 D9000000 		.4byte	0xd9
 11419 0ee9 02       		.uleb128 0x2
 11420 0eea 91       		.byte	0x91
 11421 0eeb 6F       		.sleb128 -17
 11422 0eec 18       		.uleb128 0x18
 11423 0eed 9F0C0000 		.4byte	.LASF142
 11424 0ef1 01       		.byte	0x1
 11425 0ef2 F209     		.2byte	0x9f2
 11426 0ef4 130F0000 		.4byte	0xf13
 11427 0ef8 02       		.uleb128 0x2
 11428 0ef9 91       		.byte	0x91
 11429 0efa 68       		.sleb128 -24
 11430 0efb 11       		.uleb128 0x11
 11431 0efc 48000000 		.4byte	.LBB54
 11432 0f00 54000000 		.4byte	.LBE54-.LBB54
 11433 0f04 19       		.uleb128 0x19
 11434 0f05 6900     		.ascii	"i\000"
 11435 0f07 01       		.byte	0x1
 11436 0f08 FE09     		.2byte	0x9fe
 11437 0f0a 94000000 		.4byte	0x94
 11438 0f0e 02       		.uleb128 0x2
 11439 0f0f 91       		.byte	0x91
 11440 0f10 74       		.sleb128 -12
 11441 0f11 00       		.byte	0
 11442 0f12 00       		.byte	0
 11443 0f13 20       		.uleb128 0x20
 11444 0f14 04       		.byte	0x4
 11445 0f15 D9000000 		.4byte	0xd9
 11446 0f19 07       		.uleb128 0x7
 11447 0f1a D9000000 		.4byte	0xd9
 11448 0f1e 290F0000 		.4byte	0xf29
 11449 0f22 08       		.uleb128 0x8
 11450 0f23 36010000 		.4byte	0x136
 11451 0f27 01       		.byte	0x1
 11452 0f28 00       		.byte	0
 11453 0f29 21       		.uleb128 0x21
 11454 0f2a DA040000 		.4byte	.LASF143
 11455 0f2e 01       		.byte	0x1
 11456 0f2f EB       		.byte	0xeb
 11457 0f30 190F0000 		.4byte	0xf19
 11458 0f34 05       		.uleb128 0x5
 11459 0f35 03       		.byte	0x3
 11460 0f36 64000000 		.4byte	eepromArray
 11461 0f3a 22       		.uleb128 0x22
 11462 0f3b 4F0F0000 		.4byte	.LASF144
 11463 0f3f 08       		.byte	0x8
 11464 0f40 F3       		.byte	0xf3
 11465 0f41 2A010000 		.4byte	0x12a
 11466 0f45 22       		.uleb128 0x22
 11467 0f46 F10F0000 		.4byte	.LASF145
 11468 0f4a 08       		.byte	0x8
 11469 0f4b F9       		.byte	0xf9
 11470 0f4c 2A010000 		.4byte	0x12a
 11471 0f50 07       		.uleb128 0x7
 11472 0f51 D9000000 		.4byte	0xd9
 11473 0f55 600F0000 		.4byte	0xf60
 11474 0f59 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 250


 11475 0f5a 36010000 		.4byte	0x136
 11476 0f5e 3F       		.byte	0x3f
 11477 0f5f 00       		.byte	0
 11478 0f60 22       		.uleb128 0x22
 11479 0f61 D7080000 		.4byte	.LASF146
 11480 0f65 08       		.byte	0x8
 11481 0f66 FA       		.byte	0xfa
 11482 0f67 500F0000 		.4byte	0xf50
 11483 0f6b 22       		.uleb128 0x22
 11484 0f6c 52050000 		.4byte	.LASF147
 11485 0f70 08       		.byte	0x8
 11486 0f71 FE       		.byte	0xfe
 11487 0f72 2A010000 		.4byte	0x12a
 11488 0f76 22       		.uleb128 0x22
 11489 0f77 940F0000 		.4byte	.LASF148
 11490 0f7b 08       		.byte	0x8
 11491 0f7c FF       		.byte	0xff
 11492 0f7d 500F0000 		.4byte	0xf50
 11493 0f81 22       		.uleb128 0x22
 11494 0f82 A1000000 		.4byte	.LASF149
 11495 0f86 09       		.byte	0x9
 11496 0f87 82       		.byte	0x82
 11497 0f88 BF010000 		.4byte	0x1bf
 11498 0f8c 07       		.uleb128 0x7
 11499 0f8d 9D0F0000 		.4byte	0xf9d
 11500 0f91 9D0F0000 		.4byte	0xf9d
 11501 0f95 23       		.uleb128 0x23
 11502 0f96 36010000 		.4byte	0x136
 11503 0f9a FF03     		.2byte	0x3ff
 11504 0f9c 00       		.byte	0
 11505 0f9d 24       		.uleb128 0x24
 11506 0f9e A2000000 		.4byte	0xa2
 11507 0fa2 25       		.uleb128 0x25
 11508 0fa3 FF070000 		.4byte	.LASF150
 11509 0fa7 01       		.byte	0x1
 11510 0fa8 F8       		.byte	0xf8
 11511 0fa9 B30F0000 		.4byte	0xfb3
 11512 0fad 05       		.uleb128 0x5
 11513 0fae 03       		.byte	0x3
 11514 0faf 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 11515 0fb3 24       		.uleb128 0x24
 11516 0fb4 8C0F0000 		.4byte	0xf8c
 11517 0fb8 22       		.uleb128 0x22
 11518 0fb9 4D060000 		.4byte	.LASF151
 11519 0fbd 0A       		.byte	0xa
 11520 0fbe F9       		.byte	0xf9
 11521 0fbf D9000000 		.4byte	0xd9
 11522 0fc3 26       		.uleb128 0x26
 11523 0fc4 8E0A0000 		.4byte	.LASF152
 11524 0fc8 0B       		.byte	0xb
 11525 0fc9 1207     		.2byte	0x712
 11526 0fcb CF0F0000 		.4byte	0xfcf
 11527 0fcf 06       		.uleb128 0x6
 11528 0fd0 C3000000 		.4byte	0xc3
 11529 0fd4 07       		.uleb128 0x7
 11530 0fd5 03020000 		.4byte	0x203
 11531 0fd9 E40F0000 		.4byte	0xfe4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 251


 11532 0fdd 08       		.uleb128 0x8
 11533 0fde 36010000 		.4byte	0x136
 11534 0fe2 FF       		.byte	0xff
 11535 0fe3 00       		.byte	0
 11536 0fe4 27       		.uleb128 0x27
 11537 0fe5 04010000 		.4byte	.LASF153
 11538 0fe9 01       		.byte	0x1
 11539 0fea 6001     		.2byte	0x160
 11540 0fec F60F0000 		.4byte	0xff6
 11541 0ff0 05       		.uleb128 0x5
 11542 0ff1 03       		.byte	0x3
 11543 0ff2 00000000 		.4byte	I2Cbuff1
 11544 0ff6 06       		.uleb128 0x6
 11545 0ff7 D40F0000 		.4byte	0xfd4
 11546 0ffb 07       		.uleb128 0x7
 11547 0ffc A2000000 		.4byte	0xa2
 11548 1000 0C100000 		.4byte	0x100c
 11549 1004 23       		.uleb128 0x23
 11550 1005 36010000 		.4byte	0x136
 11551 1009 FF07     		.2byte	0x7ff
 11552 100b 00       		.byte	0
 11553 100c 25       		.uleb128 0x25
 11554 100d F20D0000 		.4byte	.LASF154
 11555 1011 01       		.byte	0x1
 11556 1012 17       		.byte	0x17
 11557 1013 FB0F0000 		.4byte	0xffb
 11558 1017 05       		.uleb128 0x5
 11559 1018 03       		.byte	0x3
 11560 1019 00000000 		.4byte	sysexBuffer
 11561 101d 25       		.uleb128 0x25
 11562 101e 4A030000 		.4byte	.LASF155
 11563 1022 01       		.byte	0x1
 11564 1023 18       		.byte	0x18
 11565 1024 CE000000 		.4byte	0xce
 11566 1028 05       		.uleb128 0x5
 11567 1029 03       		.byte	0x3
 11568 102a 00000000 		.4byte	sysexPointer
 11569 102e 25       		.uleb128 0x25
 11570 102f 3F0B0000 		.4byte	.LASF156
 11571 1033 01       		.byte	0x1
 11572 1034 19       		.byte	0x19
 11573 1035 A2000000 		.4byte	0xa2
 11574 1039 05       		.uleb128 0x5
 11575 103a 03       		.byte	0x3
 11576 103b 00000000 		.4byte	receivingSysex
 11577 103f 25       		.uleb128 0x25
 11578 1040 66060000 		.4byte	.LASF157
 11579 1044 01       		.byte	0x1
 11580 1045 1A       		.byte	0x1a
 11581 1046 A2000000 		.4byte	0xa2
 11582 104a 05       		.uleb128 0x5
 11583 104b 03       		.byte	0x3
 11584 104c 00000000 		.4byte	parsingSysex
 11585 1050 07       		.uleb128 0x7
 11586 1051 03020000 		.4byte	0x203
 11587 1055 61100000 		.4byte	0x1061
 11588 1059 23       		.uleb128 0x23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 252


 11589 105a 36010000 		.4byte	0x136
 11590 105e FF07     		.2byte	0x7ff
 11591 1060 00       		.byte	0
 11592 1061 25       		.uleb128 0x25
 11593 1062 13000000 		.4byte	.LASF158
 11594 1066 01       		.byte	0x1
 11595 1067 1B       		.byte	0x1b
 11596 1068 72100000 		.4byte	0x1072
 11597 106c 05       		.uleb128 0x5
 11598 106d 03       		.byte	0x3
 11599 106e 00000000 		.4byte	presetArray
 11600 1072 06       		.uleb128 0x6
 11601 1073 50100000 		.4byte	0x1050
 11602 1077 25       		.uleb128 0x25
 11603 1078 90020000 		.4byte	.LASF159
 11604 107c 01       		.byte	0x1
 11605 107d 1C       		.byte	0x1c
 11606 107e A2000000 		.4byte	0xa2
 11607 1082 05       		.uleb128 0x5
 11608 1083 03       		.byte	0x3
 11609 1084 00000000 		.4byte	presetNumberToWrite
 11610 1088 25       		.uleb128 0x25
 11611 1089 5C0D0000 		.4byte	.LASF160
 11612 108d 01       		.byte	0x1
 11613 108e 1D       		.byte	0x1d
 11614 108f A2000000 		.4byte	0xa2
 11615 1093 05       		.uleb128 0x5
 11616 1094 03       		.byte	0x3
 11617 1095 00000000 		.4byte	copedentNumberToWrite
 11618 1099 25       		.uleb128 0x25
 11619 109a 35020000 		.4byte	.LASF161
 11620 109e 01       		.byte	0x1
 11621 109f 1E       		.byte	0x1e
 11622 10a0 A2000000 		.4byte	0xa2
 11623 10a4 05       		.uleb128 0x5
 11624 10a5 03       		.byte	0x3
 11625 10a6 00000000 		.4byte	sendMessageEnd
 11626 10aa 25       		.uleb128 0x25
 11627 10ab DC0D0000 		.4byte	.LASF162
 11628 10af 01       		.byte	0x1
 11629 10b0 20       		.byte	0x20
 11630 10b1 A2000000 		.4byte	0xa2
 11631 10b5 05       		.uleb128 0x5
 11632 10b6 03       		.byte	0x3
 11633 10b7 00000000 		.4byte	sendSingleParamUpdate
 11634 10bb 25       		.uleb128 0x25
 11635 10bc 610E0000 		.4byte	.LASF163
 11636 10c0 01       		.byte	0x1
 11637 10c1 21       		.byte	0x21
 11638 10c2 A2000000 		.4byte	0xa2
 11639 10c6 05       		.uleb128 0x5
 11640 10c7 03       		.byte	0x3
 11641 10c8 00000000 		.4byte	singleParamToUpdateHigh
 11642 10cc 25       		.uleb128 0x25
 11643 10cd 9B0A0000 		.4byte	.LASF164
 11644 10d1 01       		.byte	0x1
 11645 10d2 22       		.byte	0x22
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 253


 11646 10d3 A2000000 		.4byte	0xa2
 11647 10d7 05       		.uleb128 0x5
 11648 10d8 03       		.byte	0x3
 11649 10d9 00000000 		.4byte	singleParamToUpdateLow
 11650 10dd 25       		.uleb128 0x25
 11651 10de 790A0000 		.4byte	.LASF165
 11652 10e2 01       		.byte	0x1
 11653 10e3 23       		.byte	0x23
 11654 10e4 A2000000 		.4byte	0xa2
 11655 10e8 05       		.uleb128 0x5
 11656 10e9 03       		.byte	0x3
 11657 10ea 00000000 		.4byte	singleParamValueHigh
 11658 10ee 25       		.uleb128 0x25
 11659 10ef F0050000 		.4byte	.LASF166
 11660 10f3 01       		.byte	0x1
 11661 10f4 24       		.byte	0x24
 11662 10f5 A2000000 		.4byte	0xa2
 11663 10f9 05       		.uleb128 0x5
 11664 10fa 03       		.byte	0x3
 11665 10fb 00000000 		.4byte	singleParamValueLow
 11666 10ff 25       		.uleb128 0x25
 11667 1100 270D0000 		.4byte	.LASF167
 11668 1104 01       		.byte	0x1
 11669 1105 26       		.byte	0x26
 11670 1106 A2000000 		.4byte	0xa2
 11671 110a 05       		.uleb128 0x5
 11672 110b 03       		.byte	0x3
 11673 110c 00000000 		.4byte	sendMappingChangeUpdate
 11674 1110 25       		.uleb128 0x25
 11675 1111 00000000 		.4byte	.LASF168
 11676 1115 01       		.byte	0x1
 11677 1116 31       		.byte	0x31
 11678 1117 A2000000 		.4byte	0xa2
 11679 111b 05       		.uleb128 0x5
 11680 111c 03       		.byte	0x3
 11681 111d 00000000 		.4byte	presetArraySection
 11682 1121 25       		.uleb128 0x25
 11683 1122 C9090000 		.4byte	.LASF169
 11684 1126 01       		.byte	0x1
 11685 1127 33       		.byte	0x33
 11686 1128 B8000000 		.4byte	0xb8
 11687 112c 05       		.uleb128 0x5
 11688 112d 03       		.byte	0x3
 11689 112e 00000000 		.4byte	messageArraySendCount
 11690 1132 25       		.uleb128 0x25
 11691 1133 830E0000 		.4byte	.LASF170
 11692 1137 01       		.byte	0x1
 11693 1138 34       		.byte	0x34
 11694 1139 B8000000 		.4byte	0xb8
 11695 113d 05       		.uleb128 0x5
 11696 113e 03       		.byte	0x3
 11697 113f 00000000 		.4byte	messageArraySize
 11698 1143 25       		.uleb128 0x25
 11699 1144 DB060000 		.4byte	.LASF171
 11700 1148 01       		.byte	0x1
 11701 1149 36       		.byte	0x36
 11702 114a A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 254


 11703 114e 05       		.uleb128 0x5
 11704 114f 03       		.byte	0x3
 11705 1150 00000000 		.4byte	sysexMessageInProgress
 11706 1154 25       		.uleb128 0x25
 11707 1155 FE0D0000 		.4byte	.LASF172
 11708 1159 01       		.byte	0x1
 11709 115a 38       		.byte	0x38
 11710 115b A2000000 		.4byte	0xa2
 11711 115f 05       		.uleb128 0x5
 11712 1160 03       		.byte	0x3
 11713 1161 00000000 		.4byte	bufCount
 11714 1165 25       		.uleb128 0x25
 11715 1166 33000000 		.4byte	.LASF173
 11716 116a 01       		.byte	0x1
 11717 116b 39       		.byte	0x39
 11718 116c 03020000 		.4byte	0x203
 11719 1170 05       		.uleb128 0x5
 11720 1171 03       		.byte	0x3
 11721 1172 00000000 		.4byte	sendingMessage
 11722 1176 25       		.uleb128 0x25
 11723 1177 22030000 		.4byte	.LASF174
 11724 117b 01       		.byte	0x1
 11725 117c 3A       		.byte	0x3a
 11726 117d 03020000 		.4byte	0x203
 11727 1181 05       		.uleb128 0x5
 11728 1182 03       		.byte	0x3
 11729 1183 00000000 		.4byte	sendKnobs
 11730 1187 25       		.uleb128 0x25
 11731 1188 6E020000 		.4byte	.LASF175
 11732 118c 01       		.byte	0x1
 11733 118d 3B       		.byte	0x3b
 11734 118e CE000000 		.4byte	0xce
 11735 1192 05       		.uleb128 0x5
 11736 1193 03       		.byte	0x3
 11737 1194 00000000 		.4byte	currentFloat
 11738 1198 25       		.uleb128 0x25
 11739 1199 D1030000 		.4byte	.LASF176
 11740 119d 01       		.byte	0x1
 11741 119e 3C       		.byte	0x3c
 11742 119f CE000000 		.4byte	0xce
 11743 11a3 05       		.uleb128 0x5
 11744 11a4 03       		.byte	0x3
 11745 11a5 00000000 		.4byte	mapCount
 11746 11a9 25       		.uleb128 0x25
 11747 11aa 94010000 		.4byte	.LASF177
 11748 11ae 01       		.byte	0x1
 11749 11af 3E       		.byte	0x3e
 11750 11b0 B8000000 		.4byte	0xb8
 11751 11b4 05       		.uleb128 0x5
 11752 11b5 03       		.byte	0x3
 11753 11b6 00000000 		.4byte	valsCount
 11754 11ba 25       		.uleb128 0x25
 11755 11bb 5A040000 		.4byte	.LASF178
 11756 11bf 01       		.byte	0x1
 11757 11c0 3F       		.byte	0x3f
 11758 11c1 B8000000 		.4byte	0xb8
 11759 11c5 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 255


 11760 11c6 03       		.byte	0x3
 11761 11c7 00000000 		.4byte	mapCountExpectation
 11762 11cb 25       		.uleb128 0x25
 11763 11cc F8000000 		.4byte	.LASF179
 11764 11d0 01       		.byte	0x1
 11765 11d1 40       		.byte	0x40
 11766 11d2 B8000000 		.4byte	0xb8
 11767 11d6 05       		.uleb128 0x5
 11768 11d7 03       		.byte	0x3
 11769 11d8 00000000 		.4byte	numMappings
 11770 11dc 25       		.uleb128 0x25
 11771 11dd AF0D0000 		.4byte	.LASF180
 11772 11e1 01       		.byte	0x1
 11773 11e2 41       		.byte	0x41
 11774 11e3 03020000 		.4byte	0x203
 11775 11e7 05       		.uleb128 0x5
 11776 11e8 03       		.byte	0x3
 11777 11e9 00000000 		.4byte	parseThatMF
 11778 11ed 25       		.uleb128 0x25
 11779 11ee 03040000 		.4byte	.LASF181
 11780 11f2 01       		.byte	0x1
 11781 11f3 42       		.byte	0x42
 11782 11f4 FE110000 		.4byte	0x11fe
 11783 11f8 05       		.uleb128 0x5
 11784 11f9 03       		.byte	0x3
 11785 11fa 00000000 		.4byte	valCheck
 11786 11fe 06       		.uleb128 0x6
 11787 11ff FD000000 		.4byte	0xfd
 11788 1203 25       		.uleb128 0x25
 11789 1204 E50C0000 		.4byte	.LASF182
 11790 1208 01       		.byte	0x1
 11791 1209 43       		.byte	0x43
 11792 120a FE110000 		.4byte	0x11fe
 11793 120e 05       		.uleb128 0x5
 11794 120f 03       		.byte	0x3
 11795 1210 00000000 		.4byte	testVal
 11796 1214 25       		.uleb128 0x25
 11797 1215 7D080000 		.4byte	.LASF183
 11798 1219 01       		.byte	0x1
 11799 121a 45       		.byte	0x45
 11800 121b 94000000 		.4byte	0x94
 11801 121f 05       		.uleb128 0x5
 11802 1220 03       		.byte	0x3
 11803 1221 00000000 		.4byte	numStrings
 11804 1225 25       		.uleb128 0x25
 11805 1226 930D0000 		.4byte	.LASF184
 11806 122a 01       		.byte	0x1
 11807 122b 4B       		.byte	0x4b
 11808 122c 2A010000 		.4byte	0x12a
 11809 1230 05       		.uleb128 0x5
 11810 1231 03       		.byte	0x3
 11811 1232 00000000 		.4byte	usbActivityCounter
 11812 1236 25       		.uleb128 0x25
 11813 1237 9F0C0000 		.4byte	.LASF142
 11814 123b 01       		.byte	0x1
 11815 123c 4C       		.byte	0x4c
 11816 123d 3D010000 		.4byte	0x13d
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 256


 11817 1241 05       		.uleb128 0x5
 11818 1242 03       		.byte	0x3
 11819 1243 00000000 		.4byte	midiMsg
 11820 1247 25       		.uleb128 0x25
 11821 1248 35100000 		.4byte	.LASF185
 11822 124c 01       		.byte	0x1
 11823 124d 4D       		.byte	0x4d
 11824 124e A2000000 		.4byte	0xa2
 11825 1252 05       		.uleb128 0x5
 11826 1253 03       		.byte	0x3
 11827 1254 00000000 		.4byte	currentVBUS
 11828 1258 25       		.uleb128 0x25
 11829 1259 26100000 		.4byte	.LASF186
 11830 125d 01       		.byte	0x1
 11831 125e 4E       		.byte	0x4e
 11832 125f A2000000 		.4byte	0xa2
 11833 1263 05       		.uleb128 0x5
 11834 1264 03       		.byte	0x3
 11835 1265 00000000 		.4byte	prevVBUS
 11836 1269 25       		.uleb128 0x25
 11837 126a D10D0000 		.4byte	.LASF187
 11838 126e 01       		.byte	0x1
 11839 126f 4F       		.byte	0x4f
 11840 1270 03020000 		.4byte	0x203
 11841 1274 05       		.uleb128 0x5
 11842 1275 03       		.byte	0x3
 11843 1276 00000000 		.4byte	USB_active
 11844 127a 25       		.uleb128 0x25
 11845 127b BA090000 		.4byte	.LASF188
 11846 127f 01       		.byte	0x1
 11847 1280 50       		.byte	0x50
 11848 1281 03020000 		.4byte	0x203
 11849 1285 05       		.uleb128 0x5
 11850 1286 03       		.byte	0x3
 11851 1287 00000000 		.4byte	USB_check_flag
 11852 128b 07       		.uleb128 0x7
 11853 128c A2000000 		.4byte	0xa2
 11854 1290 9B120000 		.4byte	0x129b
 11855 1294 08       		.uleb128 0x8
 11856 1295 36010000 		.4byte	0x136
 11857 1299 05       		.byte	0x5
 11858 129a 00       		.byte	0
 11859 129b 25       		.uleb128 0x25
 11860 129c CD0F0000 		.4byte	.LASF189
 11861 12a0 01       		.byte	0x1
 11862 12a1 52       		.byte	0x52
 11863 12a2 8B120000 		.4byte	0x128b
 11864 12a6 05       		.uleb128 0x5
 11865 12a7 03       		.byte	0x3
 11866 12a8 00000000 		.4byte	mappingArray
 11867 12ac 07       		.uleb128 0x7
 11868 12ad D9000000 		.4byte	0xd9
 11869 12b1 BC120000 		.4byte	0x12bc
 11870 12b5 08       		.uleb128 0x8
 11871 12b6 36010000 		.4byte	0x136
 11872 12ba 1F       		.byte	0x1f
 11873 12bb 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 257


 11874 12bc 25       		.uleb128 0x25
 11875 12bd 790F0000 		.4byte	.LASF190
 11876 12c1 01       		.byte	0x1
 11877 12c2 54       		.byte	0x54
 11878 12c3 AC120000 		.4byte	0x12ac
 11879 12c7 05       		.uleb128 0x5
 11880 12c8 03       		.byte	0x3
 11881 12c9 00000000 		.4byte	inBuffer
 11882 12cd 25       		.uleb128 0x25
 11883 12ce 06110000 		.4byte	.LASF191
 11884 12d2 01       		.byte	0x1
 11885 12d3 56       		.byte	0x56
 11886 12d4 AC120000 		.4byte	0x12ac
 11887 12d8 05       		.uleb128 0x5
 11888 12d9 03       		.byte	0x3
 11889 12da 00000000 		.4byte	myArray
 11890 12de 25       		.uleb128 0x25
 11891 12df A4100000 		.4byte	.LASF192
 11892 12e3 01       		.byte	0x1
 11893 12e4 57       		.byte	0x57
 11894 12e5 190F0000 		.4byte	0xf19
 11895 12e9 05       		.uleb128 0x5
 11896 12ea 03       		.byte	0x3
 11897 12eb 00000000 		.4byte	myInputArray
 11898 12ef 07       		.uleb128 0x7
 11899 12f0 C3000000 		.4byte	0xc3
 11900 12f4 FF120000 		.4byte	0x12ff
 11901 12f8 08       		.uleb128 0x8
 11902 12f9 36010000 		.4byte	0x136
 11903 12fd 01       		.byte	0x1
 11904 12fe 00       		.byte	0
 11905 12ff 25       		.uleb128 0x25
 11906 1300 43080000 		.4byte	.LASF193
 11907 1304 01       		.byte	0x1
 11908 1305 58       		.byte	0x58
 11909 1306 EF120000 		.4byte	0x12ef
 11910 130a 05       		.uleb128 0x5
 11911 130b 03       		.byte	0x3
 11912 130c 00000000 		.4byte	linearPotValue32Bit
 11913 1310 28       		.uleb128 0x28
 11914 1311 6900     		.ascii	"i\000"
 11915 1313 01       		.byte	0x1
 11916 1314 59       		.byte	0x59
 11917 1315 A2000000 		.4byte	0xa2
 11918 1319 05       		.uleb128 0x5
 11919 131a 03       		.byte	0x3
 11920 131b 00000000 		.4byte	i
 11921 131f 25       		.uleb128 0x25
 11922 1320 F8090000 		.4byte	.LASF194
 11923 1324 01       		.byte	0x1
 11924 1325 5A       		.byte	0x5a
 11925 1326 A2000000 		.4byte	0xa2
 11926 132a 05       		.uleb128 0x5
 11927 132b 03       		.byte	0x3
 11928 132c 00000000 		.4byte	counter
 11929 1330 07       		.uleb128 0x7
 11930 1331 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 258


 11931 1335 40130000 		.4byte	0x1340
 11932 1339 08       		.uleb128 0x8
 11933 133a 36010000 		.4byte	0x136
 11934 133e 1F       		.byte	0x1f
 11935 133f 00       		.byte	0
 11936 1340 25       		.uleb128 0x25
 11937 1341 73060000 		.4byte	.LASF195
 11938 1345 01       		.byte	0x1
 11939 1346 5B       		.byte	0x5b
 11940 1347 30130000 		.4byte	0x1330
 11941 134b 05       		.uleb128 0x5
 11942 134c 03       		.byte	0x3
 11943 134d 00000000 		.4byte	returnedData
 11944 1351 25       		.uleb128 0x25
 11945 1352 9E010000 		.4byte	.LASF196
 11946 1356 01       		.byte	0x1
 11947 1357 5C       		.byte	0x5c
 11948 1358 C3000000 		.4byte	0xc3
 11949 135c 05       		.uleb128 0x5
 11950 135d 03       		.byte	0x3
 11951 135e 00000000 		.4byte	temper
 11952 1362 07       		.uleb128 0x7
 11953 1363 94000000 		.4byte	0x94
 11954 1367 72130000 		.4byte	0x1372
 11955 136b 08       		.uleb128 0x8
 11956 136c 36010000 		.4byte	0x136
 11957 1370 0A       		.byte	0xa
 11958 1371 00       		.byte	0
 11959 1372 25       		.uleb128 0x25
 11960 1373 2C0F0000 		.4byte	.LASF197
 11961 1377 01       		.byte	0x1
 11962 1378 5D       		.byte	0x5d
 11963 1379 62130000 		.4byte	0x1362
 11964 137d 05       		.uleb128 0x5
 11965 137e 03       		.byte	0x3
 11966 137f 00000000 		.4byte	previousButtons
 11967 1383 25       		.uleb128 0x25
 11968 1384 2F010000 		.4byte	.LASF198
 11969 1388 01       		.byte	0x1
 11970 1389 5E       		.byte	0x5e
 11971 138a 94000000 		.4byte	0x94
 11972 138e 05       		.uleb128 0x5
 11973 138f 03       		.byte	0x3
 11974 1390 00000000 		.4byte	octave
 11975 1394 07       		.uleb128 0x7
 11976 1395 B8000000 		.4byte	0xb8
 11977 1399 A4130000 		.4byte	0x13a4
 11978 139d 08       		.uleb128 0x8
 11979 139e 36010000 		.4byte	0x136
 11980 13a2 09       		.byte	0x9
 11981 13a3 00       		.byte	0
 11982 13a4 25       		.uleb128 0x25
 11983 13a5 77080000 		.4byte	.LASF199
 11984 13a9 01       		.byte	0x1
 11985 13aa 5F       		.byte	0x5f
 11986 13ab 94130000 		.4byte	0x1394
 11987 13af 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 259


 11988 13b0 03       		.byte	0x3
 11989 13b1 00000000 		.4byte	angle
 11990 13b5 25       		.uleb128 0x25
 11991 13b6 250C0000 		.4byte	.LASF200
 11992 13ba 01       		.byte	0x1
 11993 13bb 60       		.byte	0x60
 11994 13bc 94130000 		.4byte	0x1394
 11995 13c0 05       		.uleb128 0x5
 11996 13c1 03       		.byte	0x3
 11997 13c2 00000000 		.4byte	prevAngle
 11998 13c6 07       		.uleb128 0x7
 11999 13c7 B8000000 		.4byte	0xb8
 12000 13cb D6130000 		.4byte	0x13d6
 12001 13cf 08       		.uleb128 0x8
 12002 13d0 36010000 		.4byte	0x136
 12003 13d4 03       		.byte	0x3
 12004 13d5 00       		.byte	0
 12005 13d6 25       		.uleb128 0x25
 12006 13d7 6F0C0000 		.4byte	.LASF201
 12007 13db 01       		.byte	0x1
 12008 13dc 62       		.byte	0x62
 12009 13dd C6130000 		.4byte	0x13c6
 12010 13e1 05       		.uleb128 0x5
 12011 13e2 03       		.byte	0x3
 12012 13e3 00000000 		.4byte	ADC_values
 12013 13e7 25       		.uleb128 0x25
 12014 13e8 F6040000 		.4byte	.LASF202
 12015 13ec 01       		.byte	0x1
 12016 13ed 63       		.byte	0x63
 12017 13ee B8000000 		.4byte	0xb8
 12018 13f2 05       		.uleb128 0x5
 12019 13f3 03       		.byte	0x3
 12020 13f4 00000000 		.4byte	rawAngle
 12021 13f8 25       		.uleb128 0x25
 12022 13f9 960C0000 		.4byte	.LASF203
 12023 13fd 01       		.byte	0x1
 12024 13fe 64       		.byte	0x64
 12025 13ff B8000000 		.4byte	0xb8
 12026 1403 05       		.uleb128 0x5
 12027 1404 03       		.byte	0x3
 12028 1405 00000000 		.4byte	midiSent
 12029 1409 25       		.uleb128 0x25
 12030 140a 8D050000 		.4byte	.LASF204
 12031 140e 01       		.byte	0x1
 12032 140f 65       		.byte	0x65
 12033 1410 B8000000 		.4byte	0xb8
 12034 1414 05       		.uleb128 0x5
 12035 1415 03       		.byte	0x3
 12036 1416 00000000 		.4byte	midiOverflow
 12037 141a 07       		.uleb128 0x7
 12038 141b A2000000 		.4byte	0xa2
 12039 141f 2A140000 		.4byte	0x142a
 12040 1423 08       		.uleb128 0x8
 12041 1424 36010000 		.4byte	0x136
 12042 1428 07       		.byte	0x7
 12043 1429 00       		.byte	0
 12044 142a 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 260


 12045 142b A60F0000 		.4byte	.LASF205
 12046 142f 01       		.byte	0x1
 12047 1430 67       		.byte	0x67
 12048 1431 1A140000 		.4byte	0x141a
 12049 1435 05       		.uleb128 0x5
 12050 1436 03       		.byte	0x3
 12051 1437 00000000 		.4byte	macroKnobValues
 12052 143b 25       		.uleb128 0x25
 12053 143c E6040000 		.4byte	.LASF206
 12054 1440 01       		.byte	0x1
 12055 1441 69       		.byte	0x69
 12056 1442 A2000000 		.4byte	0xa2
 12057 1446 05       		.uleb128 0x5
 12058 1447 03       		.byte	0x3
 12059 1448 00000000 		.4byte	currentCopedent
 12060 144c 07       		.uleb128 0x7
 12061 144d A2000000 		.4byte	0xa2
 12062 1451 5C140000 		.4byte	0x145c
 12063 1455 08       		.uleb128 0x8
 12064 1456 36010000 		.4byte	0x136
 12065 145a 01       		.byte	0x1
 12066 145b 00       		.byte	0
 12067 145c 25       		.uleb128 0x25
 12068 145d 29010000 		.4byte	.LASF207
 12069 1461 01       		.byte	0x1
 12070 1462 6A       		.byte	0x6a
 12071 1463 4C140000 		.4byte	0x144c
 12072 1467 05       		.uleb128 0x5
 12073 1468 03       		.byte	0x3
 12074 1469 00000000 		.4byte	necks
 12075 146d 25       		.uleb128 0x25
 12076 146e 1C040000 		.4byte	.LASF208
 12077 1472 01       		.byte	0x1
 12078 1473 89       		.byte	0x89
 12079 1474 D9000000 		.4byte	0xd9
 12080 1478 05       		.uleb128 0x5
 12081 1479 03       		.byte	0x3
 12082 147a 00000000 		.4byte	rx1Channel
 12083 147e 25       		.uleb128 0x25
 12084 147f E60F0000 		.4byte	.LASF209
 12085 1483 01       		.byte	0x1
 12086 1484 89       		.byte	0x89
 12087 1485 D9000000 		.4byte	0xd9
 12088 1489 05       		.uleb128 0x5
 12089 148a 03       		.byte	0x3
 12090 148b 00000000 		.4byte	rx2Channel
 12091 148f 25       		.uleb128 0x25
 12092 1490 0C0A0000 		.4byte	.LASF210
 12093 1494 01       		.byte	0x1
 12094 1495 8A       		.byte	0x8a
 12095 1496 190F0000 		.4byte	0xf19
 12096 149a 05       		.uleb128 0x5
 12097 149b 03       		.byte	0x3
 12098 149c 00000000 		.4byte	rx1TD
 12099 14a0 25       		.uleb128 0x25
 12100 14a1 ED0C0000 		.4byte	.LASF211
 12101 14a5 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 261


 12102 14a6 8A       		.byte	0x8a
 12103 14a7 190F0000 		.4byte	0xf19
 12104 14ab 05       		.uleb128 0x5
 12105 14ac 03       		.byte	0x3
 12106 14ad 00000000 		.4byte	rx2TD
 12107 14b1 25       		.uleb128 0x25
 12108 14b2 F40B0000 		.4byte	.LASF212
 12109 14b6 01       		.byte	0x1
 12110 14b7 8C       		.byte	0x8c
 12111 14b8 2A010000 		.4byte	0x12a
 12112 14bc 05       		.uleb128 0x5
 12113 14bd 03       		.byte	0x3
 12114 14be 00000000 		.4byte	txChannel
 12115 14c2 25       		.uleb128 0x25
 12116 14c3 8D100000 		.4byte	.LASF213
 12117 14c7 01       		.byte	0x1
 12118 14c8 8D       		.byte	0x8d
 12119 14c9 2A010000 		.4byte	0x12a
 12120 14cd 05       		.uleb128 0x5
 12121 14ce 03       		.byte	0x3
 12122 14cf 00000000 		.4byte	txTD
 12123 14d3 25       		.uleb128 0x25
 12124 14d4 490A0000 		.4byte	.LASF214
 12125 14d8 01       		.byte	0x1
 12126 14d9 8F       		.byte	0x8f
 12127 14da 2A010000 		.4byte	0x12a
 12128 14de 05       		.uleb128 0x5
 12129 14df 03       		.byte	0x3
 12130 14e0 00000000 		.4byte	rx3Channel
 12131 14e4 25       		.uleb128 0x25
 12132 14e5 2F100000 		.4byte	.LASF215
 12133 14e9 01       		.byte	0x1
 12134 14ea 90       		.byte	0x90
 12135 14eb 2A010000 		.4byte	0x12a
 12136 14ef 05       		.uleb128 0x5
 12137 14f0 03       		.byte	0x3
 12138 14f1 00000000 		.4byte	rx3TD
 12139 14f5 07       		.uleb128 0x7
 12140 14f6 2A010000 		.4byte	0x12a
 12141 14fa 0B150000 		.4byte	0x150b
 12142 14fe 08       		.uleb128 0x8
 12143 14ff 36010000 		.4byte	0x136
 12144 1503 01       		.byte	0x1
 12145 1504 08       		.uleb128 0x8
 12146 1505 36010000 		.4byte	0x136
 12147 1509 19       		.byte	0x19
 12148 150a 00       		.byte	0
 12149 150b 25       		.uleb128 0x25
 12150 150c A2060000 		.4byte	.LASF216
 12151 1510 01       		.byte	0x1
 12152 1511 93       		.byte	0x93
 12153 1512 1C150000 		.4byte	0x151c
 12154 1516 05       		.uleb128 0x5
 12155 1517 03       		.byte	0x3
 12156 1518 00000000 		.4byte	rxBufferPluck
 12157 151c 06       		.uleb128 0x6
 12158 151d F5140000 		.4byte	0x14f5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 262


 12159 1521 07       		.uleb128 0x7
 12160 1522 2A010000 		.4byte	0x12a
 12161 1526 37150000 		.4byte	0x1537
 12162 152a 08       		.uleb128 0x8
 12163 152b 36010000 		.4byte	0x136
 12164 152f 01       		.byte	0x1
 12165 1530 08       		.uleb128 0x8
 12166 1531 36010000 		.4byte	0x136
 12167 1535 07       		.byte	0x7
 12168 1536 00       		.byte	0
 12169 1537 25       		.uleb128 0x25
 12170 1538 E80B0000 		.4byte	.LASF217
 12171 153c 01       		.byte	0x1
 12172 153d 94       		.byte	0x94
 12173 153e 48150000 		.4byte	0x1548
 12174 1542 05       		.uleb128 0x5
 12175 1543 03       		.byte	0x3
 12176 1544 00000000 		.4byte	rxBufferBar
 12177 1548 06       		.uleb128 0x6
 12178 1549 21150000 		.4byte	0x1521
 12179 154d 07       		.uleb128 0x7
 12180 154e 08020000 		.4byte	0x208
 12181 1552 5D150000 		.4byte	0x155d
 12182 1556 08       		.uleb128 0x8
 12183 1557 36010000 		.4byte	0x136
 12184 155b 0B       		.byte	0xb
 12185 155c 00       		.byte	0
 12186 155d 25       		.uleb128 0x25
 12187 155e 5D020000 		.4byte	.LASF218
 12188 1562 01       		.byte	0x1
 12189 1563 96       		.byte	0x96
 12190 1564 6E150000 		.4byte	0x156e
 12191 1568 05       		.uleb128 0x5
 12192 1569 03       		.byte	0x3
 12193 156a 00000000 		.4byte	strings
 12194 156e 06       		.uleb128 0x6
 12195 156f 4D150000 		.4byte	0x154d
 12196 1573 25       		.uleb128 0x25
 12197 1574 C9040000 		.4byte	.LASF219
 12198 1578 01       		.byte	0x1
 12199 1579 97       		.byte	0x97
 12200 157a 84150000 		.4byte	0x1584
 12201 157e 05       		.uleb128 0x5
 12202 157f 03       		.byte	0x3
 12203 1580 00000000 		.4byte	prevStrings
 12204 1584 06       		.uleb128 0x6
 12205 1585 4D150000 		.4byte	0x154d
 12206 1589 07       		.uleb128 0x7
 12207 158a 08020000 		.4byte	0x208
 12208 158e 99150000 		.4byte	0x1599
 12209 1592 08       		.uleb128 0x8
 12210 1593 36010000 		.4byte	0x136
 12211 1597 01       		.byte	0x1
 12212 1598 00       		.byte	0
 12213 1599 28       		.uleb128 0x28
 12214 159a 62617200 		.ascii	"bar\000"
 12215 159e 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 263


 12216 159f 98       		.byte	0x98
 12217 15a0 AA150000 		.4byte	0x15aa
 12218 15a4 05       		.uleb128 0x5
 12219 15a5 03       		.byte	0x3
 12220 15a6 00000000 		.4byte	bar
 12221 15aa 06       		.uleb128 0x6
 12222 15ab 89150000 		.4byte	0x1589
 12223 15af 25       		.uleb128 0x25
 12224 15b0 9C100000 		.4byte	.LASF220
 12225 15b4 01       		.byte	0x1
 12226 15b5 99       		.byte	0x99
 12227 15b6 C0150000 		.4byte	0x15c0
 12228 15ba 05       		.uleb128 0x5
 12229 15bb 03       		.byte	0x3
 12230 15bc 00000000 		.4byte	prevBar
 12231 15c0 06       		.uleb128 0x6
 12232 15c1 89150000 		.4byte	0x1589
 12233 15c5 25       		.uleb128 0x25
 12234 15c6 820F0000 		.4byte	.LASF221
 12235 15ca 01       		.byte	0x1
 12236 15cb 9A       		.byte	0x9a
 12237 15cc D6150000 		.4byte	0x15d6
 12238 15d0 05       		.uleb128 0x5
 12239 15d1 03       		.byte	0x3
 12240 15d2 00000000 		.4byte	maxStrings
 12241 15d6 06       		.uleb128 0x6
 12242 15d7 4D150000 		.4byte	0x154d
 12243 15db 25       		.uleb128 0x25
 12244 15dc 3F0D0000 		.4byte	.LASF222
 12245 15e0 01       		.byte	0x1
 12246 15e1 9B       		.byte	0x9b
 12247 15e2 03020000 		.4byte	0x203
 12248 15e6 05       		.uleb128 0x5
 12249 15e7 03       		.byte	0x3
 12250 15e8 00000000 		.4byte	amHere
 12251 15ec 25       		.uleb128 0x25
 12252 15ed 1A060000 		.4byte	.LASF223
 12253 15f1 01       		.byte	0x1
 12254 15f2 9C       		.byte	0x9c
 12255 15f3 03020000 		.4byte	0x203
 12256 15f7 05       		.uleb128 0x5
 12257 15f8 03       		.byte	0x3
 12258 15f9 00000000 		.4byte	spiCounter
 12259 15fd 25       		.uleb128 0x25
 12260 15fe 35040000 		.4byte	.LASF224
 12261 1602 01       		.byte	0x1
 12262 1603 9D       		.byte	0x9d
 12263 1604 03020000 		.4byte	0x203
 12264 1608 05       		.uleb128 0x5
 12265 1609 03       		.byte	0x3
 12266 160a 00000000 		.4byte	newDataFlag
 12267 160e 25       		.uleb128 0x25
 12268 160f F30C0000 		.4byte	.LASF225
 12269 1613 01       		.byte	0x1
 12270 1614 9E       		.byte	0x9e
 12271 1615 94000000 		.4byte	0x94
 12272 1619 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 264


 12273 161a 03       		.byte	0x3
 12274 161b 00000000 		.4byte	prevOctave
 12275 161f 25       		.uleb128 0x25
 12276 1620 2F0C0000 		.4byte	.LASF226
 12277 1624 01       		.byte	0x1
 12278 1625 9F       		.byte	0x9f
 12279 1626 A2000000 		.4byte	0xa2
 12280 162a 05       		.uleb128 0x5
 12281 162b 03       		.byte	0x3
 12282 162c 00000000 		.4byte	pluck_index
 12283 1630 25       		.uleb128 0x25
 12284 1631 DC0A0000 		.4byte	.LASF227
 12285 1635 01       		.byte	0x1
 12286 1636 A0       		.byte	0xa0
 12287 1637 03020000 		.4byte	0x203
 12288 163b 05       		.uleb128 0x5
 12289 163c 03       		.byte	0x3
 12290 163d 00000000 		.4byte	amHere2
 12291 1641 25       		.uleb128 0x25
 12292 1642 7F0D0000 		.4byte	.LASF228
 12293 1646 01       		.byte	0x1
 12294 1647 A1       		.byte	0xa1
 12295 1648 03020000 		.4byte	0x203
 12296 164c 05       		.uleb128 0x5
 12297 164d 03       		.byte	0x3
 12298 164e 00000000 		.4byte	spiCounter2
 12299 1652 25       		.uleb128 0x25
 12300 1653 67000000 		.4byte	.LASF229
 12301 1657 01       		.byte	0x1
 12302 1658 A2       		.byte	0xa2
 12303 1659 03020000 		.4byte	0x203
 12304 165d 05       		.uleb128 0x5
 12305 165e 03       		.byte	0x3
 12306 165f 00000000 		.4byte	newDataFlag2
 12307 1663 25       		.uleb128 0x25
 12308 1664 F00A0000 		.4byte	.LASF230
 12309 1668 01       		.byte	0x1
 12310 1669 A3       		.byte	0xa3
 12311 166a 03020000 		.4byte	0x203
 12312 166e 05       		.uleb128 0x5
 12313 166f 03       		.byte	0x3
 12314 1670 00000000 		.4byte	currentPluckBuffer
 12315 1674 25       		.uleb128 0x25
 12316 1675 5E0C0000 		.4byte	.LASF231
 12317 1679 01       		.byte	0x1
 12318 167a A4       		.byte	0xa4
 12319 167b 03020000 		.4byte	0x203
 12320 167f 05       		.uleb128 0x5
 12321 1680 03       		.byte	0x3
 12322 1681 00000000 		.4byte	currentBarBuffer
 12323 1685 25       		.uleb128 0x25
 12324 1686 070E0000 		.4byte	.LASF232
 12325 168a 01       		.byte	0x1
 12326 168b A5       		.byte	0xa5
 12327 168c 03020000 		.4byte	0x203
 12328 1690 05       		.uleb128 0x5
 12329 1691 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 265


 12330 1692 00000000 		.4byte	pluckErrorCount
 12331 1696 25       		.uleb128 0x25
 12332 1697 870C0000 		.4byte	.LASF233
 12333 169b 01       		.byte	0x1
 12334 169c A6       		.byte	0xa6
 12335 169d 08020000 		.4byte	0x208
 12336 16a1 05       		.uleb128 0x5
 12337 16a2 03       		.byte	0x3
 12338 16a3 00000000 		.4byte	SPI1ErrorCount
 12339 16a7 25       		.uleb128 0x25
 12340 16a8 A7070000 		.4byte	.LASF234
 12341 16ac 01       		.byte	0x1
 12342 16ad AA       		.byte	0xaa
 12343 16ae 03020000 		.4byte	0x203
 12344 16b2 05       		.uleb128 0x5
 12345 16b3 03       		.byte	0x3
 12346 16b4 00000000 		.4byte	inputData
 12347 16b8 25       		.uleb128 0x25
 12348 16b9 DA0F0000 		.4byte	.LASF235
 12349 16bd 01       		.byte	0x1
 12350 16be CD       		.byte	0xcd
 12351 16bf A2000000 		.4byte	0xa2
 12352 16c3 05       		.uleb128 0x5
 12353 16c4 03       		.byte	0x3
 12354 16c5 00000000 		.4byte	spiAdjusted
 12355 16c9 25       		.uleb128 0x25
 12356 16ca CE060000 		.4byte	.LASF236
 12357 16ce 01       		.byte	0x1
 12358 16cf CE       		.byte	0xce
 12359 16d0 A2000000 		.4byte	0xa2
 12360 16d4 05       		.uleb128 0x5
 12361 16d5 03       		.byte	0x3
 12362 16d6 00000000 		.4byte	mySpiCounter
 12363 16da 25       		.uleb128 0x25
 12364 16db B80B0000 		.4byte	.LASF237
 12365 16df 01       		.byte	0x1
 12366 16e0 CF       		.byte	0xcf
 12367 16e1 08020000 		.4byte	0x208
 12368 16e5 05       		.uleb128 0x5
 12369 16e6 03       		.byte	0x3
 12370 16e7 00000000 		.4byte	offsetErrorCount
 12371 16eb 25       		.uleb128 0x25
 12372 16ec C7000000 		.4byte	.LASF238
 12373 16f0 01       		.byte	0x1
 12374 16f1 D0       		.byte	0xd0
 12375 16f2 03020000 		.4byte	0x203
 12376 16f6 05       		.uleb128 0x5
 12377 16f7 03       		.byte	0x3
 12378 16f8 00000000 		.4byte	SPI2errorflag
 12379 16fc 25       		.uleb128 0x25
 12380 16fd 9D0B0000 		.4byte	.LASF239
 12381 1701 01       		.byte	0x1
 12382 1702 D1       		.byte	0xd1
 12383 1703 0D170000 		.4byte	0x170d
 12384 1707 05       		.uleb128 0x5
 12385 1708 03       		.byte	0x3
 12386 1709 00000000 		.4byte	bar_index
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 266


 12387 170d 06       		.uleb128 0x6
 12388 170e 94000000 		.4byte	0x94
 12389 1712 25       		.uleb128 0x25
 12390 1713 44030000 		.4byte	.LASF240
 12391 1717 01       		.byte	0x1
 12392 1718 D2       		.byte	0xd2
 12393 1719 A6020000 		.4byte	0x2a6
 12394 171d 05       		.uleb128 0x5
 12395 171e 03       		.byte	0x3
 12396 171f 00000000 		.4byte	knobs
 12397 1723 25       		.uleb128 0x25
 12398 1724 C4060000 		.4byte	.LASF241
 12399 1728 01       		.byte	0x1
 12400 1729 D3       		.byte	0xd3
 12401 172a A6020000 		.4byte	0x2a6
 12402 172e 05       		.uleb128 0x5
 12403 172f 03       		.byte	0x3
 12404 1730 00000000 		.4byte	prevKnobs
 12405 1734 25       		.uleb128 0x25
 12406 1735 A70B0000 		.4byte	.LASF242
 12407 1739 01       		.byte	0x1
 12408 173a D5       		.byte	0xd5
 12409 173b A6020000 		.4byte	0x2a6
 12410 173f 05       		.uleb128 0x5
 12411 1740 03       		.byte	0x3
 12412 1741 00000000 		.4byte	knobs7bit
 12413 1745 25       		.uleb128 0x25
 12414 1746 540B0000 		.4byte	.LASF243
 12415 174a 01       		.byte	0x1
 12416 174b D6       		.byte	0xd6
 12417 174c A6020000 		.4byte	0x2a6
 12418 1750 05       		.uleb128 0x5
 12419 1751 03       		.byte	0x3
 12420 1752 00000000 		.4byte	prevKnobs7bit
 12421 1756 25       		.uleb128 0x25
 12422 1757 E40A0000 		.4byte	.LASF244
 12423 175b 01       		.byte	0x1
 12424 175c D8       		.byte	0xd8
 12425 175d 03020000 		.4byte	0x203
 12426 1761 05       		.uleb128 0x5
 12427 1762 03       		.byte	0x3
 12428 1763 00000000 		.4byte	SPI2started
 12429 1767 25       		.uleb128 0x25
 12430 1768 8B060000 		.4byte	.LASF245
 12431 176c 01       		.byte	0x1
 12432 176d DA       		.byte	0xda
 12433 176e A2000000 		.4byte	0xa2
 12434 1772 05       		.uleb128 0x5
 12435 1773 03       		.byte	0x3
 12436 1774 00000000 		.4byte	whichMacro
 12437 1778 25       		.uleb128 0x25
 12438 1779 460D0000 		.4byte	.LASF246
 12439 177d 01       		.byte	0x1
 12440 177e ED       		.byte	0xed
 12441 177f 190F0000 		.4byte	0xf19
 12442 1783 05       		.uleb128 0x5
 12443 1784 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 267


 12444 1785 00000000 		.4byte	array
 12445 1789 25       		.uleb128 0x25
 12446 178a 1A080000 		.4byte	.LASF247
 12447 178e 01       		.byte	0x1
 12448 178f F0       		.byte	0xf0
 12449 1790 F7010000 		.4byte	0x1f7
 12450 1794 05       		.uleb128 0x5
 12451 1795 03       		.byte	0x3
 12452 1796 00000000 		.4byte	eepromReturnValue
 12453 179a 25       		.uleb128 0x25
 12454 179b 47050000 		.4byte	.LASF248
 12455 179f 01       		.byte	0x1
 12456 17a0 FC       		.byte	0xfc
 12457 17a1 D9000000 		.4byte	0xd9
 12458 17a5 05       		.uleb128 0x5
 12459 17a6 03       		.byte	0x3
 12460 17a7 00000000 		.4byte	eeprom_cnt
 12461 17ab 25       		.uleb128 0x25
 12462 17ac 34080000 		.4byte	.LASF83
 12463 17b0 01       		.byte	0x1
 12464 17b1 FD       		.byte	0xfd
 12465 17b2 12010000 		.4byte	0x112
 12466 17b6 05       		.uleb128 0x5
 12467 17b7 03       		.byte	0x3
 12468 17b8 00000000 		.4byte	status
 12469 17bc 28       		.uleb128 0x28
 12470 17bd 70747200 		.ascii	"ptr\000"
 12471 17c1 01       		.byte	0x1
 12472 17c2 FE       		.byte	0xfe
 12473 17c3 CD170000 		.4byte	0x17cd
 12474 17c7 05       		.uleb128 0x5
 12475 17c8 03       		.byte	0x3
 12476 17c9 00000000 		.4byte	ptr
 12477 17cd 20       		.uleb128 0x20
 12478 17ce 04       		.byte	0x4
 12479 17cf D8170000 		.4byte	0x17d8
 12480 17d3 24       		.uleb128 0x24
 12481 17d4 D9000000 		.4byte	0xd9
 12482 17d8 06       		.uleb128 0x6
 12483 17d9 D3170000 		.4byte	0x17d3
 12484 17dd 25       		.uleb128 0x25
 12485 17de 2C020000 		.4byte	.LASF249
 12486 17e2 01       		.byte	0x1
 12487 17e3 FF       		.byte	0xff
 12488 17e4 0D170000 		.4byte	0x170d
 12489 17e8 05       		.uleb128 0x5
 12490 17e9 03       		.byte	0x3
 12491 17ea 00000000 		.4byte	barCount
 12492 17ee 07       		.uleb128 0x7
 12493 17ef 03020000 		.4byte	0x203
 12494 17f3 FE170000 		.4byte	0x17fe
 12495 17f7 08       		.uleb128 0x8
 12496 17f8 36010000 		.4byte	0x136
 12497 17fc 0F       		.byte	0xf
 12498 17fd 00       		.byte	0
 12499 17fe 27       		.uleb128 0x27
 12500 17ff 0D010000 		.4byte	.LASF250
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 268


 12501 1803 01       		.byte	0x1
 12502 1804 6101     		.2byte	0x161
 12503 1806 10180000 		.4byte	0x1810
 12504 180a 05       		.uleb128 0x5
 12505 180b 03       		.byte	0x3
 12506 180c 00000000 		.4byte	I2Cbuff2
 12507 1810 06       		.uleb128 0x6
 12508 1811 EE170000 		.4byte	0x17ee
 12509 1815 27       		.uleb128 0x27
 12510 1816 3B080000 		.4byte	.LASF251
 12511 181a 01       		.byte	0x1
 12512 181b 6201     		.2byte	0x162
 12513 181d 03020000 		.4byte	0x203
 12514 1821 05       		.uleb128 0x5
 12515 1822 03       		.byte	0x3
 12516 1823 00000000 		.4byte	send_it
 12517 1827 07       		.uleb128 0x7
 12518 1828 A2000000 		.4byte	0xa2
 12519 182c 3D180000 		.4byte	0x183d
 12520 1830 08       		.uleb128 0x8
 12521 1831 36010000 		.4byte	0x136
 12522 1835 0B       		.byte	0xb
 12523 1836 08       		.uleb128 0x8
 12524 1837 36010000 		.4byte	0x136
 12525 183b 01       		.byte	0x1
 12526 183c 00       		.byte	0
 12527 183d 27       		.uleb128 0x27
 12528 183e 16010000 		.4byte	.LASF252
 12529 1842 01       		.byte	0x1
 12530 1843 6901     		.2byte	0x169
 12531 1845 27180000 		.4byte	0x1827
 12532 1849 05       		.uleb128 0x5
 12533 184a 03       		.byte	0x3
 12534 184b 00000000 		.4byte	mux_states
 12535 184f 07       		.uleb128 0x7
 12536 1850 A2000000 		.4byte	0xa2
 12537 1854 5F180000 		.4byte	0x185f
 12538 1858 08       		.uleb128 0x8
 12539 1859 36010000 		.4byte	0x136
 12540 185d 0B       		.byte	0xb
 12541 185e 00       		.byte	0
 12542 185f 27       		.uleb128 0x27
 12543 1860 B60F0000 		.4byte	.LASF253
 12544 1864 01       		.byte	0x1
 12545 1865 6A01     		.2byte	0x16a
 12546 1867 4F180000 		.4byte	0x184f
 12547 186b 05       		.uleb128 0x5
 12548 186c 03       		.byte	0x3
 12549 186d 00000000 		.4byte	i2c_skipped
 12550 1871 27       		.uleb128 0x27
 12551 1872 460E0000 		.4byte	.LASF254
 12552 1876 01       		.byte	0x1
 12553 1877 6B01     		.2byte	0x16b
 12554 1879 94130000 		.4byte	0x1394
 12555 187d 05       		.uleb128 0x5
 12556 187e 03       		.byte	0x3
 12557 187f 00000000 		.4byte	pedals_low
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 269


 12558 1883 27       		.uleb128 0x27
 12559 1884 6E010000 		.4byte	.LASF255
 12560 1888 01       		.byte	0x1
 12561 1889 6C01     		.2byte	0x16c
 12562 188b 94130000 		.4byte	0x1394
 12563 188f 05       		.uleb128 0x5
 12564 1890 03       		.byte	0x3
 12565 1891 00000000 		.4byte	pedals_high
 12566 1895 27       		.uleb128 0x27
 12567 1896 A60D0000 		.4byte	.LASF256
 12568 189a 01       		.byte	0x1
 12569 189b 6D01     		.2byte	0x16d
 12570 189d B8000000 		.4byte	0xb8
 12571 18a1 05       		.uleb128 0x5
 12572 18a2 03       		.byte	0x3
 12573 18a3 00000000 		.4byte	deadzone
 12574 18a7 27       		.uleb128 0x27
 12575 18a8 96060000 		.4byte	.LASF257
 12576 18ac 01       		.byte	0x1
 12577 18ad 6E01     		.2byte	0x16e
 12578 18af B8000000 		.4byte	0xb8
 12579 18b3 05       		.uleb128 0x5
 12580 18b4 03       		.byte	0x3
 12581 18b5 00000000 		.4byte	volumePedal
 12582 18b9 27       		.uleb128 0x27
 12583 18ba FE0B0000 		.4byte	.LASF258
 12584 18be 01       		.byte	0x1
 12585 18bf 6F01     		.2byte	0x16f
 12586 18c1 94130000 		.4byte	0x1394
 12587 18c5 05       		.uleb128 0x5
 12588 18c6 03       		.byte	0x3
 12589 18c7 00000000 		.4byte	processed_pedals
 12590 18cb 27       		.uleb128 0x27
 12591 18cc C60A0000 		.4byte	.LASF259
 12592 18d0 01       		.byte	0x1
 12593 18d1 7001     		.2byte	0x170
 12594 18d3 94130000 		.4byte	0x1394
 12595 18d7 05       		.uleb128 0x5
 12596 18d8 03       		.byte	0x3
 12597 18d9 00000000 		.4byte	prev_processed_pedals
 12598 18dd 07       		.uleb128 0x7
 12599 18de A2000000 		.4byte	0xa2
 12600 18e2 ED180000 		.4byte	0x18ed
 12601 18e6 08       		.uleb128 0x8
 12602 18e7 36010000 		.4byte	0x136
 12603 18eb 09       		.byte	0x9
 12604 18ec 00       		.byte	0
 12605 18ed 27       		.uleb128 0x27
 12606 18ee B9060000 		.4byte	.LASF260
 12607 18f2 01       		.byte	0x1
 12608 18f3 7101     		.2byte	0x171
 12609 18f5 DD180000 		.4byte	0x18dd
 12610 18f9 05       		.uleb128 0x5
 12611 18fa 03       		.byte	0x3
 12612 18fb 00000000 		.4byte	pedals8bit
 12613 18ff 27       		.uleb128 0x27
 12614 1900 C20F0000 		.4byte	.LASF261
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 270


 12615 1904 01       		.byte	0x1
 12616 1905 7201     		.2byte	0x172
 12617 1907 DD180000 		.4byte	0x18dd
 12618 190b 05       		.uleb128 0x5
 12619 190c 03       		.byte	0x3
 12620 190d 00000000 		.4byte	pedals7bit
 12621 1911 27       		.uleb128 0x27
 12622 1912 700B0000 		.4byte	.LASF262
 12623 1916 01       		.byte	0x1
 12624 1917 7301     		.2byte	0x173
 12625 1919 DD180000 		.4byte	0x18dd
 12626 191d 05       		.uleb128 0x5
 12627 191e 03       		.byte	0x3
 12628 191f 00000000 		.4byte	prevPedals7bit
 12629 1923 27       		.uleb128 0x27
 12630 1924 42000000 		.4byte	.LASF263
 12631 1928 01       		.byte	0x1
 12632 1929 7401     		.2byte	0x174
 12633 192b AD000000 		.4byte	0xad
 12634 192f 05       		.uleb128 0x5
 12635 1930 03       		.byte	0x3
 12636 1931 00000000 		.4byte	prev_processed_volumePedal
 12637 1935 27       		.uleb128 0x27
 12638 1936 C90B0000 		.4byte	.LASF264
 12639 193a 01       		.byte	0x1
 12640 193b 7501     		.2byte	0x175
 12641 193d AD000000 		.4byte	0xad
 12642 1941 05       		.uleb128 0x5
 12643 1942 03       		.byte	0x3
 12644 1943 00000000 		.4byte	processed_volumePedal
 12645 1947 07       		.uleb128 0x7
 12646 1948 FD000000 		.4byte	0xfd
 12647 194c 5D190000 		.4byte	0x195d
 12648 1950 08       		.uleb128 0x8
 12649 1951 36010000 		.4byte	0x136
 12650 1955 03       		.byte	0x3
 12651 1956 08       		.uleb128 0x8
 12652 1957 36010000 		.4byte	0x136
 12653 195b 03       		.byte	0x3
 12654 195c 00       		.byte	0
 12655 195d 27       		.uleb128 0x27
 12656 195e 940E0000 		.4byte	.LASF265
 12657 1962 01       		.byte	0x1
 12658 1963 7801     		.2byte	0x178
 12659 1965 47190000 		.4byte	0x1947
 12660 1969 05       		.uleb128 0x5
 12661 196a 03       		.byte	0x3
 12662 196b 00000000 		.4byte	fretMeasurements
 12663 196f 27       		.uleb128 0x27
 12664 1970 A7080000 		.4byte	.LASF266
 12665 1974 01       		.byte	0x1
 12666 1975 8501     		.2byte	0x185
 12667 1977 94000000 		.4byte	0x94
 12668 197b 05       		.uleb128 0x5
 12669 197c 03       		.byte	0x3
 12670 197d 00000000 		.4byte	currentPresetSelection
 12671 1981 07       		.uleb128 0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 271


 12672 1982 A2000000 		.4byte	0xa2
 12673 1986 97190000 		.4byte	0x1997
 12674 198a 08       		.uleb128 0x8
 12675 198b 36010000 		.4byte	0x136
 12676 198f 3F       		.byte	0x3f
 12677 1990 08       		.uleb128 0x8
 12678 1991 36010000 		.4byte	0x136
 12679 1995 0D       		.byte	0xd
 12680 1996 00       		.byte	0
 12681 1997 27       		.uleb128 0x27
 12682 1998 BB020000 		.4byte	.LASF267
 12683 199c 01       		.byte	0x1
 12684 199d 8601     		.2byte	0x186
 12685 199f 81190000 		.4byte	0x1981
 12686 19a3 05       		.uleb128 0x5
 12687 19a4 03       		.byte	0x3
 12688 19a5 00000000 		.4byte	presetNamesArray
 12689 19a9 27       		.uleb128 0x27
 12690 19aa 44020000 		.4byte	.LASF268
 12691 19ae 01       		.byte	0x1
 12692 19af 8701     		.2byte	0x187
 12693 19b1 A2000000 		.4byte	0xa2
 12694 19b5 05       		.uleb128 0x5
 12695 19b6 03       		.byte	0x3
 12696 19b7 00000000 		.4byte	presetNumberToLoad
 12697 19bb 27       		.uleb128 0x27
 12698 19bc 7B020000 		.4byte	.LASF269
 12699 19c0 01       		.byte	0x1
 12700 19c1 8801     		.2byte	0x188
 12701 19c3 4C140000 		.4byte	0x144c
 12702 19c7 05       		.uleb128 0x5
 12703 19c8 03       		.byte	0x3
 12704 19c9 00000000 		.4byte	presetLoadedResponse
 12705 19cd 07       		.uleb128 0x7
 12706 19ce A2000000 		.4byte	0xa2
 12707 19d2 E9190000 		.4byte	0x19e9
 12708 19d6 08       		.uleb128 0x8
 12709 19d7 36010000 		.4byte	0x136
 12710 19db 3F       		.byte	0x3f
 12711 19dc 08       		.uleb128 0x8
 12712 19dd 36010000 		.4byte	0x136
 12713 19e1 07       		.byte	0x7
 12714 19e2 08       		.uleb128 0x8
 12715 19e3 36010000 		.4byte	0x136
 12716 19e7 0D       		.byte	0xd
 12717 19e8 00       		.byte	0
 12718 19e9 27       		.uleb128 0x27
 12719 19ea 74000000 		.4byte	.LASF270
 12720 19ee 01       		.byte	0x1
 12721 19ef 8B01     		.2byte	0x18b
 12722 19f1 CD190000 		.4byte	0x19cd
 12723 19f5 05       		.uleb128 0x5
 12724 19f6 03       		.byte	0x3
 12725 19f7 00000000 		.4byte	macroNamesArray
 12726 19fb 07       		.uleb128 0x7
 12727 19fc FD000000 		.4byte	0xfd
 12728 1a00 0B1A0000 		.4byte	0x1a0b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 272


 12729 1a04 08       		.uleb128 0x8
 12730 1a05 36010000 		.4byte	0x136
 12731 1a09 03       		.byte	0x3
 12732 1a0a 00       		.byte	0
 12733 1a0b 27       		.uleb128 0x27
 12734 1a0c 16030000 		.4byte	.LASF271
 12735 1a10 01       		.byte	0x1
 12736 1a11 8F01     		.2byte	0x18f
 12737 1a13 FB190000 		.4byte	0x19fb
 12738 1a17 05       		.uleb128 0x5
 12739 1a18 03       		.byte	0x3
 12740 1a19 00000000 		.4byte	fretScaling
 12741 1a1d 07       		.uleb128 0x7
 12742 1a1e FD000000 		.4byte	0xfd
 12743 1a22 2D1A0000 		.4byte	0x1a2d
 12744 1a26 08       		.uleb128 0x8
 12745 1a27 36010000 		.4byte	0x136
 12746 1a2b 09       		.byte	0x9
 12747 1a2c 00       		.byte	0
 12748 1a2d 27       		.uleb128 0x27
 12749 1a2e E9030000 		.4byte	.LASF272
 12750 1a32 01       		.byte	0x1
 12751 1a33 9401     		.2byte	0x194
 12752 1a35 1D1A0000 		.4byte	0x1a1d
 12753 1a39 05       		.uleb128 0x5
 12754 1a3a 03       		.byte	0x3
 12755 1a3b 00000000 		.4byte	pedalRatios
 12756 1a3f 27       		.uleb128 0x27
 12757 1a40 8A040000 		.4byte	.LASF273
 12758 1a44 01       		.byte	0x1
 12759 1a45 9501     		.2byte	0x195
 12760 1a47 A2000000 		.4byte	0xa2
 12761 1a4b 05       		.uleb128 0x5
 12762 1a4c 03       		.byte	0x3
 12763 1a4d 00000000 		.4byte	last_mux
 12764 1a51 27       		.uleb128 0x27
 12765 1a52 85090000 		.4byte	.LASF274
 12766 1a56 01       		.byte	0x1
 12767 1a57 9601     		.2byte	0x196
 12768 1a59 03020000 		.4byte	0x203
 12769 1a5d 05       		.uleb128 0x5
 12770 1a5e 03       		.byte	0x3
 12771 1a5f 00000000 		.4byte	main_counter
 12772 1a63 27       		.uleb128 0x27
 12773 1a64 1C050000 		.4byte	.LASF275
 12774 1a68 01       		.byte	0x1
 12775 1a69 9701     		.2byte	0x197
 12776 1a6b A2000000 		.4byte	0xa2
 12777 1a6f 05       		.uleb128 0x5
 12778 1a70 03       		.byte	0x3
 12779 1a71 00000000 		.4byte	neck
 12780 1a75 27       		.uleb128 0x27
 12781 1a76 9C090000 		.4byte	.LASF276
 12782 1a7a 01       		.byte	0x1
 12783 1a7b 9801     		.2byte	0x198
 12784 1a7d A2000000 		.4byte	0xa2
 12785 1a81 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 273


 12786 1a82 03       		.byte	0x3
 12787 1a83 00000000 		.4byte	dualSlider
 12788 1a87 27       		.uleb128 0x27
 12789 1a88 7F0C0000 		.4byte	.LASF277
 12790 1a8c 01       		.byte	0x1
 12791 1a8d 9901     		.2byte	0x199
 12792 1a8f A2000000 		.4byte	0xa2
 12793 1a93 05       		.uleb128 0x5
 12794 1a94 03       		.byte	0x3
 12795 1a95 00000000 		.4byte	enterUp
 12796 1a99 27       		.uleb128 0x27
 12797 1a9a 57020000 		.4byte	.LASF278
 12798 1a9e 01       		.byte	0x1
 12799 1a9f 9A01     		.2byte	0x19a
 12800 1aa1 A2000000 		.4byte	0xa2
 12801 1aa5 05       		.uleb128 0x5
 12802 1aa6 03       		.byte	0x3
 12803 1aa7 00000000 		.4byte	voice
 12804 1aab 27       		.uleb128 0x27
 12805 1aac C9100000 		.4byte	.LASF279
 12806 1ab0 01       		.byte	0x1
 12807 1ab1 9B01     		.2byte	0x19b
 12808 1ab3 A2000000 		.4byte	0xa2
 12809 1ab7 05       		.uleb128 0x5
 12810 1ab8 03       		.byte	0x3
 12811 1ab9 00000000 		.4byte	editUp
 12812 1abd 27       		.uleb128 0x27
 12813 1abe 81050000 		.4byte	.LASF280
 12814 1ac2 01       		.byte	0x1
 12815 1ac3 9C01     		.2byte	0x19c
 12816 1ac5 A2000000 		.4byte	0xa2
 12817 1ac9 05       		.uleb128 0x5
 12818 1aca 03       		.byte	0x3
 12819 1acb 00000000 		.4byte	oct1Up
 12820 1acf 27       		.uleb128 0x27
 12821 1ad0 41100000 		.4byte	.LASF281
 12822 1ad4 01       		.byte	0x1
 12823 1ad5 9D01     		.2byte	0x19d
 12824 1ad7 A2000000 		.4byte	0xa2
 12825 1adb 05       		.uleb128 0x5
 12826 1adc 03       		.byte	0x3
 12827 1add 00000000 		.4byte	oct4Up
 12828 1ae1 27       		.uleb128 0x27
 12829 1ae2 93040000 		.4byte	.LASF282
 12830 1ae6 01       		.byte	0x1
 12831 1ae7 9F01     		.2byte	0x19f
 12832 1ae9 F31A0000 		.4byte	0x1af3
 12833 1aed 05       		.uleb128 0x5
 12834 1aee 03       		.byte	0x3
 12835 1aef 00000000 		.4byte	encoderVal
 12836 1af3 06       		.uleb128 0x6
 12837 1af4 EE170000 		.4byte	0x17ee
 12838 1af8 27       		.uleb128 0x27
 12839 1af9 76050000 		.4byte	.LASF283
 12840 1afd 01       		.byte	0x1
 12841 1afe A001     		.2byte	0x1a0
 12842 1b00 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 274


 12843 1b04 05       		.uleb128 0x5
 12844 1b05 03       		.byte	0x3
 12845 1b06 00000000 		.4byte	encoderNum
 12846 1b0a 27       		.uleb128 0x27
 12847 1b0b 620A0000 		.4byte	.LASF284
 12848 1b0f 01       		.byte	0x1
 12849 1b10 A101     		.2byte	0x1a1
 12850 1b12 A2000000 		.4byte	0xa2
 12851 1b16 05       		.uleb128 0x5
 12852 1b17 03       		.byte	0x3
 12853 1b18 00000000 		.4byte	button1Up
 12854 1b1c 27       		.uleb128 0x27
 12855 1b1d 1D0D0000 		.4byte	.LASF285
 12856 1b21 01       		.byte	0x1
 12857 1b22 A201     		.2byte	0x1a2
 12858 1b24 A2000000 		.4byte	0xa2
 12859 1b28 05       		.uleb128 0x5
 12860 1b29 03       		.byte	0x3
 12861 1b2a 00000000 		.4byte	button2Up
 12862 1b2e 27       		.uleb128 0x27
 12863 1b2f 5D100000 		.4byte	.LASF286
 12864 1b33 01       		.byte	0x1
 12865 1b34 A301     		.2byte	0x1a3
 12866 1b36 A2000000 		.4byte	0xa2
 12867 1b3a 05       		.uleb128 0x5
 12868 1b3b 03       		.byte	0x3
 12869 1b3c 00000000 		.4byte	button3Up
 12870 1b40 27       		.uleb128 0x27
 12871 1b41 1C100000 		.4byte	.LASF287
 12872 1b45 01       		.byte	0x1
 12873 1b46 A401     		.2byte	0x1a4
 12874 1b48 A2000000 		.4byte	0xa2
 12875 1b4c 05       		.uleb128 0x5
 12876 1b4d 03       		.byte	0x3
 12877 1b4e 00000000 		.4byte	button4Up
 12878 1b52 27       		.uleb128 0x27
 12879 1b53 2A0E0000 		.4byte	.LASF288
 12880 1b57 01       		.byte	0x1
 12881 1b58 A501     		.2byte	0x1a5
 12882 1b5a A2000000 		.4byte	0xa2
 12883 1b5e 05       		.uleb128 0x5
 12884 1b5f 03       		.byte	0x3
 12885 1b60 00000000 		.4byte	patchNum
 12886 1b64 07       		.uleb128 0x7
 12887 1b65 FD000000 		.4byte	0xfd
 12888 1b69 801B0000 		.4byte	0x1b80
 12889 1b6d 08       		.uleb128 0x8
 12890 1b6e 36010000 		.4byte	0x136
 12891 1b72 06       		.byte	0x6
 12892 1b73 08       		.uleb128 0x8
 12893 1b74 36010000 		.4byte	0x136
 12894 1b78 0A       		.byte	0xa
 12895 1b79 08       		.uleb128 0x8
 12896 1b7a 36010000 		.4byte	0x136
 12897 1b7e 0B       		.byte	0xb
 12898 1b7f 00       		.byte	0
 12899 1b80 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 275


 12900 1b81 B0060000 		.4byte	.LASF289
 12901 1b85 01       		.byte	0x1
 12902 1b86 AB01     		.2byte	0x1ab
 12903 1b88 641B0000 		.4byte	0x1b64
 12904 1b8c 05       		.uleb128 0x5
 12905 1b8d 03       		.byte	0x3
 12906 1b8e 00000000 		.4byte	copedent
 12907 1b92 07       		.uleb128 0x7
 12908 1b93 A2000000 		.4byte	0xa2
 12909 1b97 A81B0000 		.4byte	0x1ba8
 12910 1b9b 08       		.uleb128 0x8
 12911 1b9c 36010000 		.4byte	0x136
 12912 1ba0 06       		.byte	0x6
 12913 1ba1 08       		.uleb128 0x8
 12914 1ba2 36010000 		.4byte	0x136
 12915 1ba6 0D       		.byte	0xd
 12916 1ba7 00       		.byte	0
 12917 1ba8 27       		.uleb128 0x27
 12918 1ba9 81010000 		.4byte	.LASF290
 12919 1bad 01       		.byte	0x1
 12920 1bae AC01     		.2byte	0x1ac
 12921 1bb0 921B0000 		.4byte	0x1b92
 12922 1bb4 05       		.uleb128 0x5
 12923 1bb5 03       		.byte	0x3
 12924 1bb6 00000000 		.4byte	copedentNamesArray
 12925 1bba 07       		.uleb128 0x7
 12926 1bbb FD000000 		.4byte	0xfd
 12927 1bbf CA1B0000 		.4byte	0x1bca
 12928 1bc3 08       		.uleb128 0x8
 12929 1bc4 36010000 		.4byte	0x136
 12930 1bc8 0B       		.byte	0xb
 12931 1bc9 00       		.byte	0
 12932 1bca 27       		.uleb128 0x27
 12933 1bcb D1020000 		.4byte	.LASF291
 12934 1bcf 01       		.byte	0x1
 12935 1bd0 AE01     		.2byte	0x1ae
 12936 1bd2 BA1B0000 		.4byte	0x1bba
 12937 1bd6 05       		.uleb128 0x5
 12938 1bd7 03       		.byte	0x3
 12939 1bd8 00000000 		.4byte	prevStringPitchBend
 12940 1bdc 07       		.uleb128 0x7
 12941 1bdd FD000000 		.4byte	0xfd
 12942 1be1 F21B0000 		.4byte	0x1bf2
 12943 1be5 08       		.uleb128 0x8
 12944 1be6 36010000 		.4byte	0x136
 12945 1bea 09       		.byte	0x9
 12946 1beb 08       		.uleb128 0x8
 12947 1bec 36010000 		.4byte	0x136
 12948 1bf0 0B       		.byte	0xb
 12949 1bf1 00       		.byte	0
 12950 1bf2 27       		.uleb128 0x27
 12951 1bf3 B6100000 		.4byte	.LASF292
 12952 1bf7 01       		.byte	0x1
 12953 1bf8 B001     		.2byte	0x1b0
 12954 1bfa DC1B0000 		.4byte	0x1bdc
 12955 1bfe 05       		.uleb128 0x5
 12956 1bff 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 276


 12957 1c00 00000000 		.4byte	pedals
 12958 1c04 27       		.uleb128 0x27
 12959 1c05 2A0B0000 		.4byte	.LASF293
 12960 1c09 01       		.byte	0x1
 12961 1c0a B201     		.2byte	0x1b2
 12962 1c0c DD180000 		.4byte	0x18dd
 12963 1c10 05       		.uleb128 0x5
 12964 1c11 03       		.byte	0x3
 12965 1c12 00000000 		.4byte	pedal_cc_assignments
 12966 1c16 27       		.uleb128 0x27
 12967 1c17 0F0C0000 		.4byte	.LASF294
 12968 1c1b 01       		.byte	0x1
 12969 1c1c B301     		.2byte	0x1b3
 12970 1c1e BA1B0000 		.4byte	0x1bba
 12971 1c22 05       		.uleb128 0x5
 12972 1c23 03       		.byte	0x3
 12973 1c24 00000000 		.4byte	openStringFrequencies
 12974 1c28 27       		.uleb128 0x27
 12975 1c29 160F0000 		.4byte	.LASF295
 12976 1c2d 01       		.byte	0x1
 12977 1c2e B401     		.2byte	0x1b4
 12978 1c30 BA1B0000 		.4byte	0x1bba
 12979 1c34 05       		.uleb128 0x5
 12980 1c35 03       		.byte	0x3
 12981 1c36 00000000 		.4byte	stringMappedPositions
 12982 1c3a 27       		.uleb128 0x27
 12983 1c3b 8E070000 		.4byte	.LASF296
 12984 1c3f 01       		.byte	0x1
 12985 1c40 B501     		.2byte	0x1b5
 12986 1c42 BA1B0000 		.4byte	0x1bba
 12987 1c46 05       		.uleb128 0x5
 12988 1c47 03       		.byte	0x3
 12989 1c48 00000000 		.4byte	invStringMappedPositions
 12990 1c4c 27       		.uleb128 0x27
 12991 1c4d ED100000 		.4byte	.LASF297
 12992 1c51 01       		.byte	0x1
 12993 1c52 B601     		.2byte	0x1b6
 12994 1c54 BA1B0000 		.4byte	0x1bba
 12995 1c58 05       		.uleb128 0x5
 12996 1c59 03       		.byte	0x3
 12997 1c5a 00000000 		.4byte	stringFrequencies
 12998 1c5e 27       		.uleb128 0x27
 12999 1c5f 41040000 		.4byte	.LASF298
 13000 1c63 01       		.byte	0x1
 13001 1c64 B701     		.2byte	0x1b7
 13002 1c66 BA1B0000 		.4byte	0x1bba
 13003 1c6a 05       		.uleb128 0x5
 13004 1c6b 03       		.byte	0x3
 13005 1c6c 00000000 		.4byte	stringOctave
 13006 1c70 27       		.uleb128 0x27
 13007 1c71 000A0000 		.4byte	.LASF299
 13008 1c75 01       		.byte	0x1
 13009 1c76 B801     		.2byte	0x1b8
 13010 1c78 BA1B0000 		.4byte	0x1bba
 13011 1c7c 05       		.uleb128 0x5
 13012 1c7d 03       		.byte	0x3
 13013 1c7e 00000000 		.4byte	stringPitch
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 277


 13014 1c82 27       		.uleb128 0x27
 13015 1c83 B80E0000 		.4byte	.LASF300
 13016 1c87 01       		.byte	0x1
 13017 1c88 B901     		.2byte	0x1b9
 13018 1c8a BA1B0000 		.4byte	0x1bba
 13019 1c8e 05       		.uleb128 0x5
 13020 1c8f 03       		.byte	0x3
 13021 1c90 00000000 		.4byte	stringMIDI
 13022 1c94 07       		.uleb128 0x7
 13023 1c95 94000000 		.4byte	0x94
 13024 1c99 A41C0000 		.4byte	0x1ca4
 13025 1c9d 08       		.uleb128 0x8
 13026 1c9e 36010000 		.4byte	0x136
 13027 1ca2 0B       		.byte	0xb
 13028 1ca3 00       		.byte	0
 13029 1ca4 27       		.uleb128 0x27
 13030 1ca5 BE080000 		.4byte	.LASF301
 13031 1ca9 01       		.byte	0x1
 13032 1caa BA01     		.2byte	0x1ba
 13033 1cac 941C0000 		.4byte	0x1c94
 13034 1cb0 05       		.uleb128 0x5
 13035 1cb1 03       		.byte	0x3
 13036 1cb2 00000000 		.4byte	openStringMIDI_Int
 13037 1cb6 27       		.uleb128 0x27
 13038 1cb7 200E0000 		.4byte	.LASF302
 13039 1cbb 01       		.byte	0x1
 13040 1cbc BB01     		.2byte	0x1bb
 13041 1cbe 94000000 		.4byte	0x94
 13042 1cc2 05       		.uleb128 0x5
 13043 1cc3 03       		.byte	0x3
 13044 1cc4 00000000 		.4byte	OLEDcount
 13045 1cc8 27       		.uleb128 0x27
 13046 1cc9 120A0000 		.4byte	.LASF303
 13047 1ccd 01       		.byte	0x1
 13048 1cce BD01     		.2byte	0x1bd
 13049 1cd0 94000000 		.4byte	0x94
 13050 1cd4 05       		.uleb128 0x5
 13051 1cd5 03       		.byte	0x3
 13052 1cd6 00000000 		.4byte	mainOLEDWaitingToSend
 13053 1cda 27       		.uleb128 0x27
 13054 1cdb 57010000 		.4byte	.LASF304
 13055 1cdf 01       		.byte	0x1
 13056 1ce0 BE01     		.2byte	0x1be
 13057 1ce2 94000000 		.4byte	0x94
 13058 1ce6 05       		.uleb128 0x5
 13059 1ce7 03       		.byte	0x3
 13060 1ce8 00000000 		.4byte	macroOLEDWaitingToSend
 13061 1cec 07       		.uleb128 0x7
 13062 1ced 94000000 		.4byte	0x94
 13063 1cf1 FC1C0000 		.4byte	0x1cfc
 13064 1cf5 08       		.uleb128 0x8
 13065 1cf6 36010000 		.4byte	0x136
 13066 1cfa 3F       		.byte	0x3f
 13067 1cfb 00       		.byte	0
 13068 1cfc 27       		.uleb128 0x27
 13069 1cfd A7040000 		.4byte	.LASF305
 13070 1d01 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 278


 13071 1d02 C001     		.2byte	0x1c0
 13072 1d04 EC1C0000 		.4byte	0x1cec
 13073 1d08 05       		.uleb128 0x5
 13074 1d09 03       		.byte	0x3
 13075 1d0a 00000000 		.4byte	presetAlreadyDisplayed
 13076 1d0e 27       		.uleb128 0x27
 13077 1d0f 330E0000 		.4byte	.LASF306
 13078 1d13 01       		.byte	0x1
 13079 1d14 C201     		.2byte	0x1c2
 13080 1d16 1D1A0000 		.4byte	0x1a1d
 13081 1d1a 05       		.uleb128 0x5
 13082 1d1b 03       		.byte	0x3
 13083 1d1c 00000000 		.4byte	pedals_float
 13084 1d20 27       		.uleb128 0x27
 13085 1d21 A70C0000 		.4byte	.LASF307
 13086 1d25 01       		.byte	0x1
 13087 1d26 CA01     		.2byte	0x1ca
 13088 1d28 94000000 		.4byte	0x94
 13089 1d2c 05       		.uleb128 0x5
 13090 1d2d 03       		.byte	0x3
 13091 1d2e 00000000 		.4byte	currentNeck
 13092 1d32 27       		.uleb128 0x27
 13093 1d33 B30C0000 		.4byte	.LASF308
 13094 1d37 01       		.byte	0x1
 13095 1d38 CC01     		.2byte	0x1cc
 13096 1d3a 94000000 		.4byte	0x94
 13097 1d3e 05       		.uleb128 0x5
 13098 1d3f 03       		.byte	0x3
 13099 1d40 00000000 		.4byte	editMode
 13100 1d44 27       		.uleb128 0x27
 13101 1d45 610F0000 		.4byte	.LASF309
 13102 1d49 01       		.byte	0x1
 13103 1d4a CD01     		.2byte	0x1cd
 13104 1d4c 94000000 		.4byte	0x94
 13105 1d50 05       		.uleb128 0x5
 13106 1d51 03       		.byte	0x3
 13107 1d52 00000000 		.4byte	calibrationMode
 13108 1d56 27       		.uleb128 0x27
 13109 1d57 CB070000 		.4byte	.LASF310
 13110 1d5b 01       		.byte	0x1
 13111 1d5c F807     		.2byte	0x7f8
 13112 1d5e 941C0000 		.4byte	0x1c94
 13113 1d62 05       		.uleb128 0x5
 13114 1d63 03       		.byte	0x3
 13115 1d64 00000000 		.4byte	prevNotes
 13116 1d68 27       		.uleb128 0x27
 13117 1d69 880B0000 		.4byte	.LASF311
 13118 1d6d 01       		.byte	0x1
 13119 1d6e 6D08     		.2byte	0x86d
 13120 1d70 03020000 		.4byte	0x203
 13121 1d74 05       		.uleb128 0x5
 13122 1d75 03       		.byte	0x3
 13123 1d76 00000000 		.4byte	checkStatus
 13124 1d7a 27       		.uleb128 0x27
 13125 1d7b 090D0000 		.4byte	.LASF312
 13126 1d7f 01       		.byte	0x1
 13127 1d80 6E08     		.2byte	0x86e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 279


 13128 1d82 08020000 		.4byte	0x208
 13129 1d86 05       		.uleb128 0x5
 13130 1d87 03       		.byte	0x3
 13131 1d88 00000000 		.4byte	checkBase
 13132 1d8c 27       		.uleb128 0x27
 13133 1d8d F2060000 		.4byte	.LASF313
 13134 1d91 01       		.byte	0x1
 13135 1d92 7208     		.2byte	0x872
 13136 1d94 94000000 		.4byte	0x94
 13137 1d98 05       		.uleb128 0x5
 13138 1d99 03       		.byte	0x3
 13139 1d9a 00000000 		.4byte	SPI_errors
 13140 1d9e 07       		.uleb128 0x7
 13141 1d9f 03020000 		.4byte	0x203
 13142 1da3 AE1D0000 		.4byte	0x1dae
 13143 1da7 08       		.uleb128 0x8
 13144 1da8 36010000 		.4byte	0x136
 13145 1dac 03       		.byte	0x3
 13146 1dad 00       		.byte	0
 13147 1dae 27       		.uleb128 0x27
 13148 1daf DF0B0000 		.4byte	.LASF87
 13149 1db3 01       		.byte	0x1
 13150 1db4 EE09     		.2byte	0x9ee
 13151 1db6 C01D0000 		.4byte	0x1dc0
 13152 1dba 05       		.uleb128 0x5
 13153 1dbb 03       		.byte	0x3
 13154 1dbc 00000000 		.4byte	tempMIDI
 13155 1dc0 06       		.uleb128 0x6
 13156 1dc1 9E1D0000 		.4byte	0x1d9e
 13157 1dc5 27       		.uleb128 0x27
 13158 1dc6 1F000000 		.4byte	.LASF314
 13159 1dca 01       		.byte	0x1
 13160 1dcb EF09     		.2byte	0x9ef
 13161 1dcd 03020000 		.4byte	0x203
 13162 1dd1 05       		.uleb128 0x5
 13163 1dd2 03       		.byte	0x3
 13164 1dd3 00000000 		.4byte	firstSysex
 13165 1dd7 27       		.uleb128 0x27
 13166 1dd8 3C060000 		.4byte	.LASF315
 13167 1ddc 01       		.byte	0x1
 13168 1ddd F009     		.2byte	0x9f0
 13169 1ddf E91D0000 		.4byte	0x1de9
 13170 1de3 05       		.uleb128 0x5
 13171 1de4 03       		.byte	0x3
 13172 1de5 00000000 		.4byte	sysexPointerMask
 13173 1de9 24       		.uleb128 0x24
 13174 1dea B8000000 		.4byte	0xb8
 13175 1dee 00       		.byte	0
 13176              		.section	.debug_abbrev,"",%progbits
 13177              	.Ldebug_abbrev0:
 13178 0000 01       		.uleb128 0x1
 13179 0001 11       		.uleb128 0x11
 13180 0002 01       		.byte	0x1
 13181 0003 25       		.uleb128 0x25
 13182 0004 0E       		.uleb128 0xe
 13183 0005 13       		.uleb128 0x13
 13184 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 280


 13185 0007 03       		.uleb128 0x3
 13186 0008 0E       		.uleb128 0xe
 13187 0009 1B       		.uleb128 0x1b
 13188 000a 0E       		.uleb128 0xe
 13189 000b 55       		.uleb128 0x55
 13190 000c 17       		.uleb128 0x17
 13191 000d 11       		.uleb128 0x11
 13192 000e 01       		.uleb128 0x1
 13193 000f 10       		.uleb128 0x10
 13194 0010 17       		.uleb128 0x17
 13195 0011 00       		.byte	0
 13196 0012 00       		.byte	0
 13197 0013 02       		.uleb128 0x2
 13198 0014 24       		.uleb128 0x24
 13199 0015 00       		.byte	0
 13200 0016 0B       		.uleb128 0xb
 13201 0017 0B       		.uleb128 0xb
 13202 0018 3E       		.uleb128 0x3e
 13203 0019 0B       		.uleb128 0xb
 13204 001a 03       		.uleb128 0x3
 13205 001b 0E       		.uleb128 0xe
 13206 001c 00       		.byte	0
 13207 001d 00       		.byte	0
 13208 001e 03       		.uleb128 0x3
 13209 001f 16       		.uleb128 0x16
 13210 0020 00       		.byte	0
 13211 0021 03       		.uleb128 0x3
 13212 0022 0E       		.uleb128 0xe
 13213 0023 3A       		.uleb128 0x3a
 13214 0024 0B       		.uleb128 0xb
 13215 0025 3B       		.uleb128 0x3b
 13216 0026 0B       		.uleb128 0xb
 13217 0027 49       		.uleb128 0x49
 13218 0028 13       		.uleb128 0x13
 13219 0029 00       		.byte	0
 13220 002a 00       		.byte	0
 13221 002b 04       		.uleb128 0x4
 13222 002c 24       		.uleb128 0x24
 13223 002d 00       		.byte	0
 13224 002e 0B       		.uleb128 0xb
 13225 002f 0B       		.uleb128 0xb
 13226 0030 3E       		.uleb128 0x3e
 13227 0031 0B       		.uleb128 0xb
 13228 0032 03       		.uleb128 0x3
 13229 0033 08       		.uleb128 0x8
 13230 0034 00       		.byte	0
 13231 0035 00       		.byte	0
 13232 0036 05       		.uleb128 0x5
 13233 0037 16       		.uleb128 0x16
 13234 0038 00       		.byte	0
 13235 0039 03       		.uleb128 0x3
 13236 003a 0E       		.uleb128 0xe
 13237 003b 3A       		.uleb128 0x3a
 13238 003c 0B       		.uleb128 0xb
 13239 003d 3B       		.uleb128 0x3b
 13240 003e 05       		.uleb128 0x5
 13241 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 281


 13242 0040 13       		.uleb128 0x13
 13243 0041 00       		.byte	0
 13244 0042 00       		.byte	0
 13245 0043 06       		.uleb128 0x6
 13246 0044 35       		.uleb128 0x35
 13247 0045 00       		.byte	0
 13248 0046 49       		.uleb128 0x49
 13249 0047 13       		.uleb128 0x13
 13250 0048 00       		.byte	0
 13251 0049 00       		.byte	0
 13252 004a 07       		.uleb128 0x7
 13253 004b 01       		.uleb128 0x1
 13254 004c 01       		.byte	0x1
 13255 004d 49       		.uleb128 0x49
 13256 004e 13       		.uleb128 0x13
 13257 004f 01       		.uleb128 0x1
 13258 0050 13       		.uleb128 0x13
 13259 0051 00       		.byte	0
 13260 0052 00       		.byte	0
 13261 0053 08       		.uleb128 0x8
 13262 0054 21       		.uleb128 0x21
 13263 0055 00       		.byte	0
 13264 0056 49       		.uleb128 0x49
 13265 0057 13       		.uleb128 0x13
 13266 0058 2F       		.uleb128 0x2f
 13267 0059 0B       		.uleb128 0xb
 13268 005a 00       		.byte	0
 13269 005b 00       		.byte	0
 13270 005c 09       		.uleb128 0x9
 13271 005d 13       		.uleb128 0x13
 13272 005e 01       		.byte	0x1
 13273 005f 0B       		.uleb128 0xb
 13274 0060 0B       		.uleb128 0xb
 13275 0061 3A       		.uleb128 0x3a
 13276 0062 0B       		.uleb128 0xb
 13277 0063 3B       		.uleb128 0x3b
 13278 0064 05       		.uleb128 0x5
 13279 0065 01       		.uleb128 0x1
 13280 0066 13       		.uleb128 0x13
 13281 0067 00       		.byte	0
 13282 0068 00       		.byte	0
 13283 0069 0A       		.uleb128 0xa
 13284 006a 0D       		.uleb128 0xd
 13285 006b 00       		.byte	0
 13286 006c 03       		.uleb128 0x3
 13287 006d 0E       		.uleb128 0xe
 13288 006e 3A       		.uleb128 0x3a
 13289 006f 0B       		.uleb128 0xb
 13290 0070 3B       		.uleb128 0x3b
 13291 0071 05       		.uleb128 0x5
 13292 0072 49       		.uleb128 0x49
 13293 0073 13       		.uleb128 0x13
 13294 0074 38       		.uleb128 0x38
 13295 0075 0B       		.uleb128 0xb
 13296 0076 00       		.byte	0
 13297 0077 00       		.byte	0
 13298 0078 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 282


 13299 0079 04       		.uleb128 0x4
 13300 007a 01       		.byte	0x1
 13301 007b 0B       		.uleb128 0xb
 13302 007c 0B       		.uleb128 0xb
 13303 007d 49       		.uleb128 0x49
 13304 007e 13       		.uleb128 0x13
 13305 007f 3A       		.uleb128 0x3a
 13306 0080 0B       		.uleb128 0xb
 13307 0081 3B       		.uleb128 0x3b
 13308 0082 05       		.uleb128 0x5
 13309 0083 01       		.uleb128 0x1
 13310 0084 13       		.uleb128 0x13
 13311 0085 00       		.byte	0
 13312 0086 00       		.byte	0
 13313 0087 0C       		.uleb128 0xc
 13314 0088 28       		.uleb128 0x28
 13315 0089 00       		.byte	0
 13316 008a 03       		.uleb128 0x3
 13317 008b 0E       		.uleb128 0xe
 13318 008c 1C       		.uleb128 0x1c
 13319 008d 0B       		.uleb128 0xb
 13320 008e 00       		.byte	0
 13321 008f 00       		.byte	0
 13322 0090 0D       		.uleb128 0xd
 13323 0091 04       		.uleb128 0x4
 13324 0092 01       		.byte	0x1
 13325 0093 03       		.uleb128 0x3
 13326 0094 0E       		.uleb128 0xe
 13327 0095 0B       		.uleb128 0xb
 13328 0096 0B       		.uleb128 0xb
 13329 0097 49       		.uleb128 0x49
 13330 0098 13       		.uleb128 0x13
 13331 0099 3A       		.uleb128 0x3a
 13332 009a 0B       		.uleb128 0xb
 13333 009b 3B       		.uleb128 0x3b
 13334 009c 0B       		.uleb128 0xb
 13335 009d 01       		.uleb128 0x1
 13336 009e 13       		.uleb128 0x13
 13337 009f 00       		.byte	0
 13338 00a0 00       		.byte	0
 13339 00a1 0E       		.uleb128 0xe
 13340 00a2 17       		.uleb128 0x17
 13341 00a3 01       		.byte	0x1
 13342 00a4 03       		.uleb128 0x3
 13343 00a5 0E       		.uleb128 0xe
 13344 00a6 0B       		.uleb128 0xb
 13345 00a7 0B       		.uleb128 0xb
 13346 00a8 3A       		.uleb128 0x3a
 13347 00a9 0B       		.uleb128 0xb
 13348 00aa 3B       		.uleb128 0x3b
 13349 00ab 0B       		.uleb128 0xb
 13350 00ac 01       		.uleb128 0x1
 13351 00ad 13       		.uleb128 0x13
 13352 00ae 00       		.byte	0
 13353 00af 00       		.byte	0
 13354 00b0 0F       		.uleb128 0xf
 13355 00b1 0D       		.uleb128 0xd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 283


 13356 00b2 00       		.byte	0
 13357 00b3 03       		.uleb128 0x3
 13358 00b4 08       		.uleb128 0x8
 13359 00b5 3A       		.uleb128 0x3a
 13360 00b6 0B       		.uleb128 0xb
 13361 00b7 3B       		.uleb128 0x3b
 13362 00b8 0B       		.uleb128 0xb
 13363 00b9 49       		.uleb128 0x49
 13364 00ba 13       		.uleb128 0x13
 13365 00bb 00       		.byte	0
 13366 00bc 00       		.byte	0
 13367 00bd 10       		.uleb128 0x10
 13368 00be 2E       		.uleb128 0x2e
 13369 00bf 01       		.byte	0x1
 13370 00c0 3F       		.uleb128 0x3f
 13371 00c1 19       		.uleb128 0x19
 13372 00c2 03       		.uleb128 0x3
 13373 00c3 0E       		.uleb128 0xe
 13374 00c4 3A       		.uleb128 0x3a
 13375 00c5 0B       		.uleb128 0xb
 13376 00c6 3B       		.uleb128 0x3b
 13377 00c7 0B       		.uleb128 0xb
 13378 00c8 27       		.uleb128 0x27
 13379 00c9 19       		.uleb128 0x19
 13380 00ca 11       		.uleb128 0x11
 13381 00cb 01       		.uleb128 0x1
 13382 00cc 12       		.uleb128 0x12
 13383 00cd 06       		.uleb128 0x6
 13384 00ce 40       		.uleb128 0x40
 13385 00cf 18       		.uleb128 0x18
 13386 00d0 9642     		.uleb128 0x2116
 13387 00d2 19       		.uleb128 0x19
 13388 00d3 01       		.uleb128 0x1
 13389 00d4 13       		.uleb128 0x13
 13390 00d5 00       		.byte	0
 13391 00d6 00       		.byte	0
 13392 00d7 11       		.uleb128 0x11
 13393 00d8 0B       		.uleb128 0xb
 13394 00d9 01       		.byte	0x1
 13395 00da 11       		.uleb128 0x11
 13396 00db 01       		.uleb128 0x1
 13397 00dc 12       		.uleb128 0x12
 13398 00dd 06       		.uleb128 0x6
 13399 00de 00       		.byte	0
 13400 00df 00       		.byte	0
 13401 00e0 12       		.uleb128 0x12
 13402 00e1 34       		.uleb128 0x34
 13403 00e2 00       		.byte	0
 13404 00e3 03       		.uleb128 0x3
 13405 00e4 08       		.uleb128 0x8
 13406 00e5 3A       		.uleb128 0x3a
 13407 00e6 0B       		.uleb128 0xb
 13408 00e7 3B       		.uleb128 0x3b
 13409 00e8 0B       		.uleb128 0xb
 13410 00e9 49       		.uleb128 0x49
 13411 00ea 13       		.uleb128 0x13
 13412 00eb 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 284


 13413 00ec 18       		.uleb128 0x18
 13414 00ed 00       		.byte	0
 13415 00ee 00       		.byte	0
 13416 00ef 13       		.uleb128 0x13
 13417 00f0 2E       		.uleb128 0x2e
 13418 00f1 00       		.byte	0
 13419 00f2 3F       		.uleb128 0x3f
 13420 00f3 19       		.uleb128 0x19
 13421 00f4 03       		.uleb128 0x3
 13422 00f5 0E       		.uleb128 0xe
 13423 00f6 3A       		.uleb128 0x3a
 13424 00f7 0B       		.uleb128 0xb
 13425 00f8 3B       		.uleb128 0x3b
 13426 00f9 0B       		.uleb128 0xb
 13427 00fa 27       		.uleb128 0x27
 13428 00fb 19       		.uleb128 0x19
 13429 00fc 11       		.uleb128 0x11
 13430 00fd 01       		.uleb128 0x1
 13431 00fe 12       		.uleb128 0x12
 13432 00ff 06       		.uleb128 0x6
 13433 0100 40       		.uleb128 0x40
 13434 0101 18       		.uleb128 0x18
 13435 0102 9642     		.uleb128 0x2116
 13436 0104 19       		.uleb128 0x19
 13437 0105 00       		.byte	0
 13438 0106 00       		.byte	0
 13439 0107 14       		.uleb128 0x14
 13440 0108 2E       		.uleb128 0x2e
 13441 0109 00       		.byte	0
 13442 010a 3F       		.uleb128 0x3f
 13443 010b 19       		.uleb128 0x19
 13444 010c 03       		.uleb128 0x3
 13445 010d 0E       		.uleb128 0xe
 13446 010e 3A       		.uleb128 0x3a
 13447 010f 0B       		.uleb128 0xb
 13448 0110 3B       		.uleb128 0x3b
 13449 0111 05       		.uleb128 0x5
 13450 0112 27       		.uleb128 0x27
 13451 0113 19       		.uleb128 0x19
 13452 0114 11       		.uleb128 0x11
 13453 0115 01       		.uleb128 0x1
 13454 0116 12       		.uleb128 0x12
 13455 0117 06       		.uleb128 0x6
 13456 0118 40       		.uleb128 0x40
 13457 0119 18       		.uleb128 0x18
 13458 011a 9642     		.uleb128 0x2116
 13459 011c 19       		.uleb128 0x19
 13460 011d 00       		.byte	0
 13461 011e 00       		.byte	0
 13462 011f 15       		.uleb128 0x15
 13463 0120 2E       		.uleb128 0x2e
 13464 0121 01       		.byte	0x1
 13465 0122 3F       		.uleb128 0x3f
 13466 0123 19       		.uleb128 0x19
 13467 0124 03       		.uleb128 0x3
 13468 0125 0E       		.uleb128 0xe
 13469 0126 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 285


 13470 0127 0B       		.uleb128 0xb
 13471 0128 3B       		.uleb128 0x3b
 13472 0129 05       		.uleb128 0x5
 13473 012a 27       		.uleb128 0x27
 13474 012b 19       		.uleb128 0x19
 13475 012c 49       		.uleb128 0x49
 13476 012d 13       		.uleb128 0x13
 13477 012e 11       		.uleb128 0x11
 13478 012f 01       		.uleb128 0x1
 13479 0130 12       		.uleb128 0x12
 13480 0131 06       		.uleb128 0x6
 13481 0132 40       		.uleb128 0x40
 13482 0133 18       		.uleb128 0x18
 13483 0134 9642     		.uleb128 0x2116
 13484 0136 19       		.uleb128 0x19
 13485 0137 01       		.uleb128 0x1
 13486 0138 13       		.uleb128 0x13
 13487 0139 00       		.byte	0
 13488 013a 00       		.byte	0
 13489 013b 16       		.uleb128 0x16
 13490 013c 05       		.uleb128 0x5
 13491 013d 00       		.byte	0
 13492 013e 03       		.uleb128 0x3
 13493 013f 08       		.uleb128 0x8
 13494 0140 3A       		.uleb128 0x3a
 13495 0141 0B       		.uleb128 0xb
 13496 0142 3B       		.uleb128 0x3b
 13497 0143 05       		.uleb128 0x5
 13498 0144 49       		.uleb128 0x49
 13499 0145 13       		.uleb128 0x13
 13500 0146 02       		.uleb128 0x2
 13501 0147 18       		.uleb128 0x18
 13502 0148 00       		.byte	0
 13503 0149 00       		.byte	0
 13504 014a 17       		.uleb128 0x17
 13505 014b 34       		.uleb128 0x34
 13506 014c 00       		.byte	0
 13507 014d 03       		.uleb128 0x3
 13508 014e 0E       		.uleb128 0xe
 13509 014f 3A       		.uleb128 0x3a
 13510 0150 0B       		.uleb128 0xb
 13511 0151 3B       		.uleb128 0x3b
 13512 0152 05       		.uleb128 0x5
 13513 0153 49       		.uleb128 0x49
 13514 0154 13       		.uleb128 0x13
 13515 0155 02       		.uleb128 0x2
 13516 0156 18       		.uleb128 0x18
 13517 0157 00       		.byte	0
 13518 0158 00       		.byte	0
 13519 0159 18       		.uleb128 0x18
 13520 015a 05       		.uleb128 0x5
 13521 015b 00       		.byte	0
 13522 015c 03       		.uleb128 0x3
 13523 015d 0E       		.uleb128 0xe
 13524 015e 3A       		.uleb128 0x3a
 13525 015f 0B       		.uleb128 0xb
 13526 0160 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 286


 13527 0161 05       		.uleb128 0x5
 13528 0162 49       		.uleb128 0x49
 13529 0163 13       		.uleb128 0x13
 13530 0164 02       		.uleb128 0x2
 13531 0165 18       		.uleb128 0x18
 13532 0166 00       		.byte	0
 13533 0167 00       		.byte	0
 13534 0168 19       		.uleb128 0x19
 13535 0169 34       		.uleb128 0x34
 13536 016a 00       		.byte	0
 13537 016b 03       		.uleb128 0x3
 13538 016c 08       		.uleb128 0x8
 13539 016d 3A       		.uleb128 0x3a
 13540 016e 0B       		.uleb128 0xb
 13541 016f 3B       		.uleb128 0x3b
 13542 0170 05       		.uleb128 0x5
 13543 0171 49       		.uleb128 0x49
 13544 0172 13       		.uleb128 0x13
 13545 0173 02       		.uleb128 0x2
 13546 0174 18       		.uleb128 0x18
 13547 0175 00       		.byte	0
 13548 0176 00       		.byte	0
 13549 0177 1A       		.uleb128 0x1a
 13550 0178 2E       		.uleb128 0x2e
 13551 0179 01       		.byte	0x1
 13552 017a 3F       		.uleb128 0x3f
 13553 017b 19       		.uleb128 0x19
 13554 017c 03       		.uleb128 0x3
 13555 017d 08       		.uleb128 0x8
 13556 017e 3A       		.uleb128 0x3a
 13557 017f 0B       		.uleb128 0xb
 13558 0180 3B       		.uleb128 0x3b
 13559 0181 05       		.uleb128 0x5
 13560 0182 27       		.uleb128 0x27
 13561 0183 19       		.uleb128 0x19
 13562 0184 49       		.uleb128 0x49
 13563 0185 13       		.uleb128 0x13
 13564 0186 11       		.uleb128 0x11
 13565 0187 01       		.uleb128 0x1
 13566 0188 12       		.uleb128 0x12
 13567 0189 06       		.uleb128 0x6
 13568 018a 40       		.uleb128 0x40
 13569 018b 18       		.uleb128 0x18
 13570 018c 9642     		.uleb128 0x2116
 13571 018e 19       		.uleb128 0x19
 13572 018f 01       		.uleb128 0x1
 13573 0190 13       		.uleb128 0x13
 13574 0191 00       		.byte	0
 13575 0192 00       		.byte	0
 13576 0193 1B       		.uleb128 0x1b
 13577 0194 2E       		.uleb128 0x2e
 13578 0195 00       		.byte	0
 13579 0196 3F       		.uleb128 0x3f
 13580 0197 19       		.uleb128 0x19
 13581 0198 03       		.uleb128 0x3
 13582 0199 0E       		.uleb128 0xe
 13583 019a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 287


 13584 019b 0B       		.uleb128 0xb
 13585 019c 3B       		.uleb128 0x3b
 13586 019d 05       		.uleb128 0x5
 13587 019e 11       		.uleb128 0x11
 13588 019f 01       		.uleb128 0x1
 13589 01a0 12       		.uleb128 0x12
 13590 01a1 06       		.uleb128 0x6
 13591 01a2 40       		.uleb128 0x40
 13592 01a3 18       		.uleb128 0x18
 13593 01a4 9742     		.uleb128 0x2117
 13594 01a6 19       		.uleb128 0x19
 13595 01a7 00       		.byte	0
 13596 01a8 00       		.byte	0
 13597 01a9 1C       		.uleb128 0x1c
 13598 01aa 2E       		.uleb128 0x2e
 13599 01ab 01       		.byte	0x1
 13600 01ac 3F       		.uleb128 0x3f
 13601 01ad 19       		.uleb128 0x19
 13602 01ae 03       		.uleb128 0x3
 13603 01af 0E       		.uleb128 0xe
 13604 01b0 3A       		.uleb128 0x3a
 13605 01b1 0B       		.uleb128 0xb
 13606 01b2 3B       		.uleb128 0x3b
 13607 01b3 05       		.uleb128 0x5
 13608 01b4 11       		.uleb128 0x11
 13609 01b5 01       		.uleb128 0x1
 13610 01b6 12       		.uleb128 0x12
 13611 01b7 06       		.uleb128 0x6
 13612 01b8 40       		.uleb128 0x40
 13613 01b9 18       		.uleb128 0x18
 13614 01ba 9642     		.uleb128 0x2116
 13615 01bc 19       		.uleb128 0x19
 13616 01bd 01       		.uleb128 0x1
 13617 01be 13       		.uleb128 0x13
 13618 01bf 00       		.byte	0
 13619 01c0 00       		.byte	0
 13620 01c1 1D       		.uleb128 0x1d
 13621 01c2 0B       		.uleb128 0xb
 13622 01c3 01       		.byte	0x1
 13623 01c4 11       		.uleb128 0x11
 13624 01c5 01       		.uleb128 0x1
 13625 01c6 12       		.uleb128 0x12
 13626 01c7 06       		.uleb128 0x6
 13627 01c8 01       		.uleb128 0x1
 13628 01c9 13       		.uleb128 0x13
 13629 01ca 00       		.byte	0
 13630 01cb 00       		.byte	0
 13631 01cc 1E       		.uleb128 0x1e
 13632 01cd 2E       		.uleb128 0x2e
 13633 01ce 00       		.byte	0
 13634 01cf 3F       		.uleb128 0x3f
 13635 01d0 19       		.uleb128 0x19
 13636 01d1 03       		.uleb128 0x3
 13637 01d2 0E       		.uleb128 0xe
 13638 01d3 3A       		.uleb128 0x3a
 13639 01d4 0B       		.uleb128 0xb
 13640 01d5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 288


 13641 01d6 05       		.uleb128 0x5
 13642 01d7 11       		.uleb128 0x11
 13643 01d8 01       		.uleb128 0x1
 13644 01d9 12       		.uleb128 0x12
 13645 01da 06       		.uleb128 0x6
 13646 01db 40       		.uleb128 0x40
 13647 01dc 18       		.uleb128 0x18
 13648 01dd 9642     		.uleb128 0x2116
 13649 01df 19       		.uleb128 0x19
 13650 01e0 00       		.byte	0
 13651 01e1 00       		.byte	0
 13652 01e2 1F       		.uleb128 0x1f
 13653 01e3 2E       		.uleb128 0x2e
 13654 01e4 01       		.byte	0x1
 13655 01e5 3F       		.uleb128 0x3f
 13656 01e6 19       		.uleb128 0x19
 13657 01e7 03       		.uleb128 0x3
 13658 01e8 0E       		.uleb128 0xe
 13659 01e9 3A       		.uleb128 0x3a
 13660 01ea 0B       		.uleb128 0xb
 13661 01eb 3B       		.uleb128 0x3b
 13662 01ec 05       		.uleb128 0x5
 13663 01ed 27       		.uleb128 0x27
 13664 01ee 19       		.uleb128 0x19
 13665 01ef 11       		.uleb128 0x11
 13666 01f0 01       		.uleb128 0x1
 13667 01f1 12       		.uleb128 0x12
 13668 01f2 06       		.uleb128 0x6
 13669 01f3 40       		.uleb128 0x40
 13670 01f4 18       		.uleb128 0x18
 13671 01f5 9642     		.uleb128 0x2116
 13672 01f7 19       		.uleb128 0x19
 13673 01f8 01       		.uleb128 0x1
 13674 01f9 13       		.uleb128 0x13
 13675 01fa 00       		.byte	0
 13676 01fb 00       		.byte	0
 13677 01fc 20       		.uleb128 0x20
 13678 01fd 0F       		.uleb128 0xf
 13679 01fe 00       		.byte	0
 13680 01ff 0B       		.uleb128 0xb
 13681 0200 0B       		.uleb128 0xb
 13682 0201 49       		.uleb128 0x49
 13683 0202 13       		.uleb128 0x13
 13684 0203 00       		.byte	0
 13685 0204 00       		.byte	0
 13686 0205 21       		.uleb128 0x21
 13687 0206 34       		.uleb128 0x34
 13688 0207 00       		.byte	0
 13689 0208 03       		.uleb128 0x3
 13690 0209 0E       		.uleb128 0xe
 13691 020a 3A       		.uleb128 0x3a
 13692 020b 0B       		.uleb128 0xb
 13693 020c 3B       		.uleb128 0x3b
 13694 020d 0B       		.uleb128 0xb
 13695 020e 49       		.uleb128 0x49
 13696 020f 13       		.uleb128 0x13
 13697 0210 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 289


 13698 0211 18       		.uleb128 0x18
 13699 0212 00       		.byte	0
 13700 0213 00       		.byte	0
 13701 0214 22       		.uleb128 0x22
 13702 0215 34       		.uleb128 0x34
 13703 0216 00       		.byte	0
 13704 0217 03       		.uleb128 0x3
 13705 0218 0E       		.uleb128 0xe
 13706 0219 3A       		.uleb128 0x3a
 13707 021a 0B       		.uleb128 0xb
 13708 021b 3B       		.uleb128 0x3b
 13709 021c 0B       		.uleb128 0xb
 13710 021d 49       		.uleb128 0x49
 13711 021e 13       		.uleb128 0x13
 13712 021f 3F       		.uleb128 0x3f
 13713 0220 19       		.uleb128 0x19
 13714 0221 3C       		.uleb128 0x3c
 13715 0222 19       		.uleb128 0x19
 13716 0223 00       		.byte	0
 13717 0224 00       		.byte	0
 13718 0225 23       		.uleb128 0x23
 13719 0226 21       		.uleb128 0x21
 13720 0227 00       		.byte	0
 13721 0228 49       		.uleb128 0x49
 13722 0229 13       		.uleb128 0x13
 13723 022a 2F       		.uleb128 0x2f
 13724 022b 05       		.uleb128 0x5
 13725 022c 00       		.byte	0
 13726 022d 00       		.byte	0
 13727 022e 24       		.uleb128 0x24
 13728 022f 26       		.uleb128 0x26
 13729 0230 00       		.byte	0
 13730 0231 49       		.uleb128 0x49
 13731 0232 13       		.uleb128 0x13
 13732 0233 00       		.byte	0
 13733 0234 00       		.byte	0
 13734 0235 25       		.uleb128 0x25
 13735 0236 34       		.uleb128 0x34
 13736 0237 00       		.byte	0
 13737 0238 03       		.uleb128 0x3
 13738 0239 0E       		.uleb128 0xe
 13739 023a 3A       		.uleb128 0x3a
 13740 023b 0B       		.uleb128 0xb
 13741 023c 3B       		.uleb128 0x3b
 13742 023d 0B       		.uleb128 0xb
 13743 023e 49       		.uleb128 0x49
 13744 023f 13       		.uleb128 0x13
 13745 0240 3F       		.uleb128 0x3f
 13746 0241 19       		.uleb128 0x19
 13747 0242 02       		.uleb128 0x2
 13748 0243 18       		.uleb128 0x18
 13749 0244 00       		.byte	0
 13750 0245 00       		.byte	0
 13751 0246 26       		.uleb128 0x26
 13752 0247 34       		.uleb128 0x34
 13753 0248 00       		.byte	0
 13754 0249 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 290


 13755 024a 0E       		.uleb128 0xe
 13756 024b 3A       		.uleb128 0x3a
 13757 024c 0B       		.uleb128 0xb
 13758 024d 3B       		.uleb128 0x3b
 13759 024e 05       		.uleb128 0x5
 13760 024f 49       		.uleb128 0x49
 13761 0250 13       		.uleb128 0x13
 13762 0251 3F       		.uleb128 0x3f
 13763 0252 19       		.uleb128 0x19
 13764 0253 3C       		.uleb128 0x3c
 13765 0254 19       		.uleb128 0x19
 13766 0255 00       		.byte	0
 13767 0256 00       		.byte	0
 13768 0257 27       		.uleb128 0x27
 13769 0258 34       		.uleb128 0x34
 13770 0259 00       		.byte	0
 13771 025a 03       		.uleb128 0x3
 13772 025b 0E       		.uleb128 0xe
 13773 025c 3A       		.uleb128 0x3a
 13774 025d 0B       		.uleb128 0xb
 13775 025e 3B       		.uleb128 0x3b
 13776 025f 05       		.uleb128 0x5
 13777 0260 49       		.uleb128 0x49
 13778 0261 13       		.uleb128 0x13
 13779 0262 3F       		.uleb128 0x3f
 13780 0263 19       		.uleb128 0x19
 13781 0264 02       		.uleb128 0x2
 13782 0265 18       		.uleb128 0x18
 13783 0266 00       		.byte	0
 13784 0267 00       		.byte	0
 13785 0268 28       		.uleb128 0x28
 13786 0269 34       		.uleb128 0x34
 13787 026a 00       		.byte	0
 13788 026b 03       		.uleb128 0x3
 13789 026c 08       		.uleb128 0x8
 13790 026d 3A       		.uleb128 0x3a
 13791 026e 0B       		.uleb128 0xb
 13792 026f 3B       		.uleb128 0x3b
 13793 0270 0B       		.uleb128 0xb
 13794 0271 49       		.uleb128 0x49
 13795 0272 13       		.uleb128 0x13
 13796 0273 3F       		.uleb128 0x3f
 13797 0274 19       		.uleb128 0x19
 13798 0275 02       		.uleb128 0x2
 13799 0276 18       		.uleb128 0x18
 13800 0277 00       		.byte	0
 13801 0278 00       		.byte	0
 13802 0279 00       		.byte	0
 13803              		.section	.debug_aranges,"",%progbits
 13804 0000 04010000 		.4byte	0x104
 13805 0004 0200     		.2byte	0x2
 13806 0006 00000000 		.4byte	.Ldebug_info0
 13807 000a 04       		.byte	0x4
 13808 000b 00       		.byte	0
 13809 000c 0000     		.2byte	0
 13810 000e 0000     		.2byte	0
 13811 0010 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 291


 13812 0014 74010000 		.4byte	.LFE64-.LFB64
 13813 0018 00000000 		.4byte	.LFB65
 13814 001c 9C000000 		.4byte	.LFE65-.LFB65
 13815 0020 00000000 		.4byte	.LFB66
 13816 0024 14000000 		.4byte	.LFE66-.LFB66
 13817 0028 00000000 		.4byte	.LFB67
 13818 002c 7C000000 		.4byte	.LFE67-.LFB67
 13819 0030 00000000 		.4byte	.LFB68
 13820 0034 58000000 		.4byte	.LFE68-.LFB68
 13821 0038 00000000 		.4byte	.LFB69
 13822 003c 68000000 		.4byte	.LFE69-.LFB69
 13823 0040 00000000 		.4byte	.LFB70
 13824 0044 4C000000 		.4byte	.LFE70-.LFB70
 13825 0048 00000000 		.4byte	.LFB71
 13826 004c 46000000 		.4byte	.LFE71-.LFB71
 13827 0050 00000000 		.4byte	.LFB72
 13828 0054 56000000 		.4byte	.LFE72-.LFB72
 13829 0058 00000000 		.4byte	.LFB73
 13830 005c 0C000000 		.4byte	.LFE73-.LFB73
 13831 0060 00000000 		.4byte	.LFB74
 13832 0064 0C010000 		.4byte	.LFE74-.LFB74
 13833 0068 00000000 		.4byte	.LFB75
 13834 006c 10200000 		.4byte	.LFE75-.LFB75
 13835 0070 00000000 		.4byte	.LFB76
 13836 0074 70000000 		.4byte	.LFE76-.LFB76
 13837 0078 00000000 		.4byte	.LFB77
 13838 007c 70010000 		.4byte	.LFE77-.LFB77
 13839 0080 00000000 		.4byte	.LFB78
 13840 0084 E0000000 		.4byte	.LFE78-.LFB78
 13841 0088 00000000 		.4byte	.LFB79
 13842 008c E0000000 		.4byte	.LFE79-.LFB79
 13843 0090 00000000 		.4byte	.LFB80
 13844 0094 30000000 		.4byte	.LFE80-.LFB80
 13845 0098 00000000 		.4byte	.LFB81
 13846 009c E8000000 		.4byte	.LFE81-.LFB81
 13847 00a0 00000000 		.4byte	.LFB82
 13848 00a4 54000000 		.4byte	.LFE82-.LFB82
 13849 00a8 00000000 		.4byte	.LFB83
 13850 00ac C4000000 		.4byte	.LFE83-.LFB83
 13851 00b0 00000000 		.4byte	.LFB84
 13852 00b4 98000000 		.4byte	.LFE84-.LFB84
 13853 00b8 00000000 		.4byte	.LFB85
 13854 00bc D4000000 		.4byte	.LFE85-.LFB85
 13855 00c0 00000000 		.4byte	.LFB86
 13856 00c4 1C000000 		.4byte	.LFE86-.LFB86
 13857 00c8 00000000 		.4byte	.LFB87
 13858 00cc 68000000 		.4byte	.LFE87-.LFB87
 13859 00d0 00000000 		.4byte	.LFB88
 13860 00d4 68000000 		.4byte	.LFE88-.LFB88
 13861 00d8 00000000 		.4byte	.LFB89
 13862 00dc 68000000 		.4byte	.LFE89-.LFB89
 13863 00e0 00000000 		.4byte	.LFB90
 13864 00e4 6C000000 		.4byte	.LFE90-.LFB90
 13865 00e8 00000000 		.4byte	.LFB91
 13866 00ec 64000000 		.4byte	.LFE91-.LFB91
 13867 00f0 00000000 		.4byte	.LFB92
 13868 00f4 EC0B0000 		.4byte	.LFE92-.LFB92
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 292


 13869 00f8 00000000 		.4byte	.LFB93
 13870 00fc 50010000 		.4byte	.LFE93-.LFB93
 13871 0100 00000000 		.4byte	0
 13872 0104 00000000 		.4byte	0
 13873              		.section	.debug_ranges,"",%progbits
 13874              	.Ldebug_ranges0:
 13875 0000 00000000 		.4byte	.LFB64
 13876 0004 74010000 		.4byte	.LFE64
 13877 0008 00000000 		.4byte	.LFB65
 13878 000c 9C000000 		.4byte	.LFE65
 13879 0010 00000000 		.4byte	.LFB66
 13880 0014 14000000 		.4byte	.LFE66
 13881 0018 00000000 		.4byte	.LFB67
 13882 001c 7C000000 		.4byte	.LFE67
 13883 0020 00000000 		.4byte	.LFB68
 13884 0024 58000000 		.4byte	.LFE68
 13885 0028 00000000 		.4byte	.LFB69
 13886 002c 68000000 		.4byte	.LFE69
 13887 0030 00000000 		.4byte	.LFB70
 13888 0034 4C000000 		.4byte	.LFE70
 13889 0038 00000000 		.4byte	.LFB71
 13890 003c 46000000 		.4byte	.LFE71
 13891 0040 00000000 		.4byte	.LFB72
 13892 0044 56000000 		.4byte	.LFE72
 13893 0048 00000000 		.4byte	.LFB73
 13894 004c 0C000000 		.4byte	.LFE73
 13895 0050 00000000 		.4byte	.LFB74
 13896 0054 0C010000 		.4byte	.LFE74
 13897 0058 00000000 		.4byte	.LFB75
 13898 005c 10200000 		.4byte	.LFE75
 13899 0060 00000000 		.4byte	.LFB76
 13900 0064 70000000 		.4byte	.LFE76
 13901 0068 00000000 		.4byte	.LFB77
 13902 006c 70010000 		.4byte	.LFE77
 13903 0070 00000000 		.4byte	.LFB78
 13904 0074 E0000000 		.4byte	.LFE78
 13905 0078 00000000 		.4byte	.LFB79
 13906 007c E0000000 		.4byte	.LFE79
 13907 0080 00000000 		.4byte	.LFB80
 13908 0084 30000000 		.4byte	.LFE80
 13909 0088 00000000 		.4byte	.LFB81
 13910 008c E8000000 		.4byte	.LFE81
 13911 0090 00000000 		.4byte	.LFB82
 13912 0094 54000000 		.4byte	.LFE82
 13913 0098 00000000 		.4byte	.LFB83
 13914 009c C4000000 		.4byte	.LFE83
 13915 00a0 00000000 		.4byte	.LFB84
 13916 00a4 98000000 		.4byte	.LFE84
 13917 00a8 00000000 		.4byte	.LFB85
 13918 00ac D4000000 		.4byte	.LFE85
 13919 00b0 00000000 		.4byte	.LFB86
 13920 00b4 1C000000 		.4byte	.LFE86
 13921 00b8 00000000 		.4byte	.LFB87
 13922 00bc 68000000 		.4byte	.LFE87
 13923 00c0 00000000 		.4byte	.LFB88
 13924 00c4 68000000 		.4byte	.LFE88
 13925 00c8 00000000 		.4byte	.LFB89
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 293


 13926 00cc 68000000 		.4byte	.LFE89
 13927 00d0 00000000 		.4byte	.LFB90
 13928 00d4 6C000000 		.4byte	.LFE90
 13929 00d8 00000000 		.4byte	.LFB91
 13930 00dc 64000000 		.4byte	.LFE91
 13931 00e0 00000000 		.4byte	.LFB92
 13932 00e4 EC0B0000 		.4byte	.LFE92
 13933 00e8 00000000 		.4byte	.LFB93
 13934 00ec 50010000 		.4byte	.LFE93
 13935 00f0 00000000 		.4byte	0
 13936 00f4 00000000 		.4byte	0
 13937              		.section	.debug_line,"",%progbits
 13938              	.Ldebug_line0:
 13939 0000 1D0C0000 		.section	.debug_str,"MS",%progbits,1
 13939      02009B01 
 13939      00000201 
 13939      FB0E0D00 
 13939      01010101 
 13940              	.LASF168:
 13941 0000 70726573 		.ascii	"presetArraySection\000"
 13941      65744172 
 13941      72617953 
 13941      65637469 
 13941      6F6E00
 13942              	.LASF158:
 13943 0013 70726573 		.ascii	"presetArray\000"
 13943      65744172 
 13943      72617900 
 13944              	.LASF314:
 13945 001f 66697273 		.ascii	"firstSysex\000"
 13945      74537973 
 13945      657800
 13946              	.LASF28:
 13947 002a 73697A65 		.ascii	"sizetype\000"
 13947      74797065 
 13947      00
 13948              	.LASF173:
 13949 0033 73656E64 		.ascii	"sendingMessage\000"
 13949      696E674D 
 13949      65737361 
 13949      676500
 13950              	.LASF263:
 13951 0042 70726576 		.ascii	"prev_processed_volumePedal\000"
 13951      5F70726F 
 13951      63657373 
 13951      65645F76 
 13951      6F6C756D 
 13952              	.LASF85:
 13953 005d 74656D70 		.ascii	"tempangle\000"
 13953      616E676C 
 13953      6500
 13954              	.LASF229:
 13955 0067 6E657744 		.ascii	"newDataFlag2\000"
 13955      61746146 
 13955      6C616732 
 13955      00
 13956              	.LASF270:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 294


 13957 0074 6D616372 		.ascii	"macroNamesArray\000"
 13957      6F4E616D 
 13957      65734172 
 13957      72617900 
 13958              	.LASF38:
 13959 0084 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 13959      4D5F4545 
 13959      50524F4D 
 13959      5F535543 
 13959      43455353 
 13960              	.LASF17:
 13961 0099 696E7433 		.ascii	"int32_t\000"
 13961      325F7400 
 13962              	.LASF149:
 13963 00a1 456D5F45 		.ascii	"Em_EEPROM_context\000"
 13963      4550524F 
 13963      4D5F636F 
 13963      6E746578 
 13963      7400
 13964              	.LASF47:
 13965 00b3 54686972 		.ascii	"ThirdLine\000"
 13965      644C696E 
 13965      6500
 13966              	.LASF112:
 13967 00bd 6E6F7465 		.ascii	"noteEvent\000"
 13967      4576656E 
 13967      7400
 13968              	.LASF238:
 13969 00c7 53504932 		.ascii	"SPI2errorflag\000"
 13969      6572726F 
 13969      72666C61 
 13969      6700
 13970              	.LASF21:
 13971 00d5 75696E74 		.ascii	"uint32\000"
 13971      333200
 13972              	.LASF94:
 13973 00dc 77686963 		.ascii	"whichMacroToStoreName\000"
 13973      684D6163 
 13973      726F546F 
 13973      53746F72 
 13973      654E616D 
 13974              	.LASF125:
 13975 00f2 43437661 		.ascii	"CCval\000"
 13975      6C00
 13976              	.LASF179:
 13977 00f8 6E756D4D 		.ascii	"numMappings\000"
 13977      61707069 
 13977      6E677300 
 13978              	.LASF153:
 13979 0104 49324362 		.ascii	"I2Cbuff1\000"
 13979      75666631 
 13979      00
 13980              	.LASF250:
 13981 010d 49324362 		.ascii	"I2Cbuff2\000"
 13981      75666632 
 13981      00
 13982              	.LASF252:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 295


 13983 0116 6D75785F 		.ascii	"mux_states\000"
 13983      73746174 
 13983      657300
 13984              	.LASF138:
 13985 0121 74656D70 		.ascii	"tempLow\000"
 13985      4C6F7700 
 13986              	.LASF207:
 13987 0129 6E65636B 		.ascii	"necks\000"
 13987      7300
 13988              	.LASF198:
 13989 012f 6F637461 		.ascii	"octave\000"
 13989      766500
 13990              	.LASF49:
 13991 0136 4E696C4C 		.ascii	"NilLine\000"
 13991      696E6500 
 13992              	.LASF43:
 13993 013e 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 13993      6E5F656D 
 13993      5F656570 
 13993      726F6D5F 
 13993      73746174 
 13994              	.LASF304:
 13995 0157 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 13995      6F4F4C45 
 13995      44576169 
 13995      74696E67 
 13995      546F5365 
 13996              	.LASF255:
 13997 016e 70656461 		.ascii	"pedals_high\000"
 13997      6C735F68 
 13997      69676800 
 13998              	.LASF100:
 13999 017a 6E627974 		.ascii	"nbytes\000"
 13999      657300
 14000              	.LASF290:
 14001 0181 636F7065 		.ascii	"copedentNamesArray\000"
 14001      64656E74 
 14001      4E616D65 
 14001      73417272 
 14001      617900
 14002              	.LASF177:
 14003 0194 76616C73 		.ascii	"valsCount\000"
 14003      436F756E 
 14003      7400
 14004              	.LASF196:
 14005 019e 74656D70 		.ascii	"temper\000"
 14005      657200
 14006              	.LASF124:
 14007 01a5 43436E75 		.ascii	"CCnum\000"
 14007      6D00
 14008              	.LASF40:
 14009 01ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 14009      4D5F4545 
 14009      50524F4D 
 14009      5F424144 
 14009      5F434845 
 14010              	.LASF36:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 296


 14011 01c5 75736572 		.ascii	"userFlashStartAddr\000"
 14011      466C6173 
 14011      68537461 
 14011      72744164 
 14011      647200
 14012              	.LASF30:
 14013 01d8 6E756D62 		.ascii	"numberOfRows\000"
 14013      65724F66 
 14013      526F7773 
 14013      00
 14014              	.LASF132:
 14015 01e5 696E7456 		.ascii	"intVal\000"
 14015      616C00
 14016              	.LASF70:
 14017 01ec 69737461 		.ascii	"istart\000"
 14017      727400
 14018              	.LASF74:
 14019 01f3 70656461 		.ascii	"pedalDiff\000"
 14019      6C446966 
 14019      6600
 14020              	.LASF129:
 14021 01fd 74686556 		.ascii	"theVal\000"
 14021      616C00
 14022              	.LASF34:
 14023 0204 72656475 		.ascii	"redundantCopy\000"
 14023      6E64616E 
 14023      74436F70 
 14023      7900
 14024              	.LASF2:
 14025 0212 5F5F7569 		.ascii	"__uint8_t\000"
 14025      6E74385F 
 14025      7400
 14026              	.LASF67:
 14027 021c 616C7068 		.ascii	"alpha\000"
 14027      6100
 14028              	.LASF57:
 14029 0222 70726573 		.ascii	"presetEnd\000"
 14029      6574456E 
 14029      6400
 14030              	.LASF249:
 14031 022c 62617243 		.ascii	"barCount\000"
 14031      6F756E74 
 14031      00
 14032              	.LASF161:
 14033 0235 73656E64 		.ascii	"sendMessageEnd\000"
 14033      4D657373 
 14033      61676545 
 14033      6E6400
 14034              	.LASF268:
 14035 0244 70726573 		.ascii	"presetNumberToLoad\000"
 14035      65744E75 
 14035      6D626572 
 14035      546F4C6F 
 14035      616400
 14036              	.LASF278:
 14037 0257 766F6963 		.ascii	"voice\000"
 14037      6500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 297


 14038              	.LASF218:
 14039 025d 73747269 		.ascii	"strings\000"
 14039      6E677300 
 14040              	.LASF8:
 14041 0265 6C6F6E67 		.ascii	"long int\000"
 14041      20696E74 
 14041      00
 14042              	.LASF175:
 14043 026e 63757272 		.ascii	"currentFloat\000"
 14043      656E7446 
 14043      6C6F6174 
 14043      00
 14044              	.LASF269:
 14045 027b 70726573 		.ascii	"presetLoadedResponse\000"
 14045      65744C6F 
 14045      61646564 
 14045      52657370 
 14045      6F6E7365 
 14046              	.LASF159:
 14047 0290 70726573 		.ascii	"presetNumberToWrite\000"
 14047      65744E75 
 14047      6D626572 
 14047      546F5772 
 14047      69746500 
 14048              	.LASF93:
 14049 02a4 77686963 		.ascii	"whichPresetToStoreName\000"
 14049      68507265 
 14049      73657454 
 14049      6F53746F 
 14049      72654E61 
 14050              	.LASF267:
 14051 02bb 70726573 		.ascii	"presetNamesArray\000"
 14051      65744E61 
 14051      6D657341 
 14051      72726179 
 14051      00
 14052              	.LASF75:
 14053 02cc 6D61696E 		.ascii	"main\000"
 14053      00
 14054              	.LASF291:
 14055 02d1 70726576 		.ascii	"prevStringPitchBend\000"
 14055      53747269 
 14055      6E675069 
 14055      74636842 
 14055      656E6400 
 14056              	.LASF119:
 14057 02e5 4D494449 		.ascii	"MIDInoteNum\000"
 14057      6E6F7465 
 14057      4E756D00 
 14058              	.LASF127:
 14059 02f1 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 14059      4D494449 
 14059      416C6C4E 
 14059      6F746573 
 14059      4F666600 
 14060              	.LASF102:
 14061 0305 6572726F 		.ascii	"error\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 298


 14061      7200
 14062              	.LASF46:
 14063 030b 5365636F 		.ascii	"SecondLine\000"
 14063      6E644C69 
 14063      6E6500
 14064              	.LASF271:
 14065 0316 66726574 		.ascii	"fretScaling\000"
 14065      5363616C 
 14065      696E6700 
 14066              	.LASF174:
 14067 0322 73656E64 		.ascii	"sendKnobs\000"
 14067      4B6E6F62 
 14067      7300
 14068              	.LASF51:
 14069 032c 70726573 		.ascii	"presetArraySectionState\000"
 14069      65744172 
 14069      72617953 
 14069      65637469 
 14069      6F6E5374 
 14070              	.LASF240:
 14071 0344 6B6E6F62 		.ascii	"knobs\000"
 14071      7300
 14072              	.LASF155:
 14073 034a 73797365 		.ascii	"sysexPointer\000"
 14073      78506F69 
 14073      6E746572 
 14073      00
 14074              	.LASF68:
 14075 0357 6F6D416C 		.ascii	"omAlpha\000"
 14075      70686100 
 14076              	.LASF80:
 14077 035f 73747269 		.ascii	"stringStartLoc\000"
 14077      6E675374 
 14077      6172744C 
 14077      6F6300
 14078              	.LASF0:
 14079 036e 7369676E 		.ascii	"signed char\000"
 14079      65642063 
 14079      68617200 
 14080              	.LASF14:
 14081 037a 75696E74 		.ascii	"uint8_t\000"
 14081      385F7400 
 14082              	.LASF29:
 14083 0382 776C456E 		.ascii	"wlEndAddr\000"
 14083      64416464 
 14083      7200
 14084              	.LASF140:
 14085 038c 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 14085      63616C6C 
 14085      6261636B 
 14085      4C6F6361 
 14085      6C4D6964 
 14086              	.LASF111:
 14087 03a7 73706973 		.ascii	"spis_1_ss\000"
 14087      5F315F73 
 14087      7300
 14088              	.LASF41:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 299


 14089 03b1 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 14089      4D5F4545 
 14089      50524F4D 
 14089      5F424144 
 14089      5F444154 
 14090              	.LASF50:
 14091 03c7 5F4F4C45 		.ascii	"_OLEDLine\000"
 14091      444C696E 
 14091      6500
 14092              	.LASF176:
 14093 03d1 6D617043 		.ascii	"mapCount\000"
 14093      6F756E74 
 14093      00
 14094              	.LASF136:
 14095 03da 74656D70 		.ascii	"tempIntVersion\000"
 14095      496E7456 
 14095      65727369 
 14095      6F6E00
 14096              	.LASF272:
 14097 03e9 70656461 		.ascii	"pedalRatios\000"
 14097      6C526174 
 14097      696F7300 
 14098              	.LASF1:
 14099 03f5 756E7369 		.ascii	"unsigned char\000"
 14099      676E6564 
 14099      20636861 
 14099      7200
 14100              	.LASF181:
 14101 0403 76616C43 		.ascii	"valCheck\000"
 14101      6865636B 
 14101      00
 14102              	.LASF131:
 14103 040c 76616C73 		.ascii	"valsStart\000"
 14103      53746172 
 14103      7400
 14104              	.LASF77:
 14105 0416 636F7065 		.ascii	"coped\000"
 14105      6400
 14106              	.LASF208:
 14107 041c 72783143 		.ascii	"rx1Channel\000"
 14107      68616E6E 
 14107      656C00
 14108              	.LASF79:
 14109 0427 70656461 		.ascii	"pedalStartLoc\000"
 14109      6C537461 
 14109      72744C6F 
 14109      6300
 14110              	.LASF224:
 14111 0435 6E657744 		.ascii	"newDataFlag\000"
 14111      61746146 
 14111      6C616700 
 14112              	.LASF298:
 14113 0441 73747269 		.ascii	"stringOctave\000"
 14113      6E674F63 
 14113      74617665 
 14113      00
 14114              	.LASF109:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 300


 14115 044e 5553425F 		.ascii	"USB_service\000"
 14115      73657276 
 14115      69636500 
 14116              	.LASF178:
 14117 045a 6D617043 		.ascii	"mapCountExpectation\000"
 14117      6F756E74 
 14117      45787065 
 14117      63746174 
 14117      696F6E00 
 14118              	.LASF62:
 14119 046e 74656D70 		.ascii	"tempmax\000"
 14119      6D617800 
 14120              	.LASF130:
 14121 0476 73746F70 		.ascii	"stoppingPoint\000"
 14121      70696E67 
 14121      506F696E 
 14121      7400
 14122              	.LASF69:
 14123 0484 76616C75 		.ascii	"value\000"
 14123      6500
 14124              	.LASF273:
 14125 048a 6C617374 		.ascii	"last_mux\000"
 14125      5F6D7578 
 14125      00
 14126              	.LASF282:
 14127 0493 656E636F 		.ascii	"encoderVal\000"
 14127      64657256 
 14127      616C00
 14128              	.LASF122:
 14129 049e 70726573 		.ascii	"pressure\000"
 14129      73757265 
 14129      00
 14130              	.LASF305:
 14131 04a7 70726573 		.ascii	"presetAlreadyDisplayed\000"
 14131      6574416C 
 14131      72656164 
 14131      79446973 
 14131      706C6179 
 14132              	.LASF53:
 14133 04be 6D616372 		.ascii	"macroNames\000"
 14133      6F4E616D 
 14133      657300
 14134              	.LASF219:
 14135 04c9 70726576 		.ascii	"prevStrings\000"
 14135      53747269 
 14135      6E677300 
 14136              	.LASF24:
 14137 04d5 63686172 		.ascii	"char\000"
 14137      00
 14138              	.LASF143:
 14139 04da 65657072 		.ascii	"eepromArray\000"
 14139      6F6D4172 
 14139      72617900 
 14140              	.LASF206:
 14141 04e6 63757272 		.ascii	"currentCopedent\000"
 14141      656E7443 
 14141      6F706564 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 301


 14141      656E7400 
 14142              	.LASF202:
 14143 04f6 72617741 		.ascii	"rawAngle\000"
 14143      6E676C65 
 14143      00
 14144              	.LASF63:
 14145 04ff 4C454146 		.ascii	"LEAF_clip\000"
 14145      5F636C69 
 14145      7000
 14146              	.LASF96:
 14147 0509 446D6154 		.ascii	"DmaTxConfiguration\000"
 14147      78436F6E 
 14147      66696775 
 14147      72617469 
 14147      6F6E00
 14148              	.LASF275:
 14149 051c 6E65636B 		.ascii	"neck\000"
 14149      00
 14150              	.LASF5:
 14151 0521 5F5F7569 		.ascii	"__uint16_t\000"
 14151      6E743136 
 14151      5F7400
 14152              	.LASF108:
 14153 052c 63686563 		.ascii	"checkUSB_Vbus\000"
 14153      6B555342 
 14153      5F566275 
 14153      7300
 14154              	.LASF139:
 14155 053a 726F756E 		.ascii	"roundedIndex\000"
 14155      64656449 
 14155      6E646578 
 14155      00
 14156              	.LASF248:
 14157 0547 65657072 		.ascii	"eeprom_cnt\000"
 14157      6F6D5F63 
 14157      6E7400
 14158              	.LASF147:
 14159 0552 5553425F 		.ascii	"USB_midi_out_ep\000"
 14159      6D696469 
 14159      5F6F7574 
 14159      5F657000 
 14160              	.LASF86:
 14161 0562 74656D70 		.ascii	"tempPedal\000"
 14161      50656461 
 14161      6C00
 14162              	.LASF105:
 14163 056c 4932435F 		.ascii	"I2C_reset\000"
 14163      72657365 
 14163      7400
 14164              	.LASF283:
 14165 0576 656E636F 		.ascii	"encoderNum\000"
 14165      6465724E 
 14165      756D00
 14166              	.LASF280:
 14167 0581 6F637431 		.ascii	"oct1Up\000"
 14167      557000
 14168              	.LASF44:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 302


 14169 0588 75696E74 		.ascii	"uint\000"
 14169      00
 14170              	.LASF204:
 14171 058d 6D696469 		.ascii	"midiOverflow\000"
 14171      4F766572 
 14171      666C6F77 
 14171      00
 14172              	.LASF106:
 14173 059a 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 14173      496E6974 
 14173      69616C50 
 14173      6564616C 
 14173      5A65726F 
 14174              	.LASF121:
 14175 05b8 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 14175      4D494449 
 14175      506F6C79 
 14175      4B657950 
 14175      72657373 
 14176              	.LASF135:
 14177 05d0 73747269 		.ascii	"stringChange\000"
 14177      6E674368 
 14177      616E6765 
 14177      00
 14178              	.LASF90:
 14179 05dd 636F6D70 		.ascii	"computerMIDIOffset\000"
 14179      75746572 
 14179      4D494449 
 14179      4F666673 
 14179      657400
 14180              	.LASF166:
 14181 05f0 73696E67 		.ascii	"singleParamValueLow\000"
 14181      6C655061 
 14181      72616D56 
 14181      616C7565 
 14181      4C6F7700 
 14182              	.LASF123:
 14183 0604 73656E64 		.ascii	"sendMIDIControlChange\000"
 14183      4D494449 
 14183      436F6E74 
 14183      726F6C43 
 14183      68616E67 
 14184              	.LASF223:
 14185 061a 73706943 		.ascii	"spiCounter\000"
 14185      6F756E74 
 14185      657200
 14186              	.LASF39:
 14187 0625 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 14187      4D5F4545 
 14187      50524F4D 
 14187      5F424144 
 14187      5F504152 
 14188              	.LASF315:
 14189 063c 73797365 		.ascii	"sysexPointerMask\000"
 14189      78506F69 
 14189      6E746572 
 14189      4D61736B 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 303


 14189      00
 14190              	.LASF151:
 14191 064d 4932435F 		.ascii	"I2C_1_initVar\000"
 14191      315F696E 
 14191      69745661 
 14191      7200
 14192              	.LASF52:
 14193 065b 70726573 		.ascii	"presetName\000"
 14193      65744E61 
 14193      6D6500
 14194              	.LASF157:
 14195 0666 70617273 		.ascii	"parsingSysex\000"
 14195      696E6753 
 14195      79736578 
 14195      00
 14196              	.LASF195:
 14197 0673 72657475 		.ascii	"returnedData\000"
 14197      726E6564 
 14197      44617461 
 14197      00
 14198              	.LASF48:
 14199 0680 466F7572 		.ascii	"FourthLine\000"
 14199      74684C69 
 14199      6E6500
 14200              	.LASF245:
 14201 068b 77686963 		.ascii	"whichMacro\000"
 14201      684D6163 
 14201      726F00
 14202              	.LASF257:
 14203 0696 766F6C75 		.ascii	"volumePedal\000"
 14203      6D655065 
 14203      64616C00 
 14204              	.LASF216:
 14205 06a2 72784275 		.ascii	"rxBufferPluck\000"
 14205      66666572 
 14205      506C7563 
 14205      6B00
 14206              	.LASF289:
 14207 06b0 636F7065 		.ascii	"copedent\000"
 14207      64656E74 
 14207      00
 14208              	.LASF260:
 14209 06b9 70656461 		.ascii	"pedals8bit\000"
 14209      6C733862 
 14209      697400
 14210              	.LASF241:
 14211 06c4 70726576 		.ascii	"prevKnobs\000"
 14211      4B6E6F62 
 14211      7300
 14212              	.LASF236:
 14213 06ce 6D795370 		.ascii	"mySpiCounter\000"
 14213      69436F75 
 14213      6E746572 
 14213      00
 14214              	.LASF171:
 14215 06db 73797365 		.ascii	"sysexMessageInProgress\000"
 14215      784D6573 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 304


 14215      73616765 
 14215      496E5072 
 14215      6F677265 
 14216              	.LASF313:
 14217 06f2 5350495F 		.ascii	"SPI_errors\000"
 14217      6572726F 
 14217      727300
 14218              	.LASF117:
 14219 06fd 43434576 		.ascii	"CCEvent\000"
 14219      656E7400 
 14220              	.LASF128:
 14221 0705 70617273 		.ascii	"parseSysex\000"
 14221      65537973 
 14221      657800
 14222              	.LASF318:
 14223 0710 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 14223      73657273 
 14223      5C4A6566 
 14223      66536E79 
 14223      6465725C 
 14224 073e 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 14224      355F656C 
 14224      65637472 
 14224      6F737465 
 14224      656C5F73 
 14225 0770 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 14225      5F50534F 
 14225      43335F35 
 14225      5F546865 
 14225      726D6973 
 14226              	.LASF296:
 14227 078e 696E7653 		.ascii	"invStringMappedPositions\000"
 14227      7472696E 
 14227      674D6170 
 14227      70656450 
 14227      6F736974 
 14228              	.LASF234:
 14229 07a7 696E7075 		.ascii	"inputData\000"
 14229      74446174 
 14229      6100
 14230              	.LASF66:
 14231 07b1 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 14231      5F696E74 
 14231      6572706F 
 14231      6C617469 
 14231      6F6E5F6C 
 14232              	.LASF310:
 14233 07cb 70726576 		.ascii	"prevNotes\000"
 14233      4E6F7465 
 14233      7300
 14234              	.LASF37:
 14235 07d5 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 14235      74635F65 
 14235      6570726F 
 14235      6D5F636F 
 14235      6E746578 
 14236              	.LASF10:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 305


 14237 07ed 6C6F6E67 		.ascii	"long unsigned int\000"
 14237      20756E73 
 14237      69676E65 
 14237      6420696E 
 14237      7400
 14238              	.LASF150:
 14239 07ff 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 14239      4550524F 
 14239      4D5F656D 
 14239      5F456570 
 14239      726F6D53 
 14240              	.LASF247:
 14241 081a 65657072 		.ascii	"eepromReturnValue\000"
 14241      6F6D5265 
 14241      7475726E 
 14241      56616C75 
 14241      6500
 14242              	.LASF84:
 14243 082c 74656D70 		.ascii	"tempInt\000"
 14243      496E7400 
 14244              	.LASF83:
 14245 0834 73746174 		.ascii	"status\000"
 14245      757300
 14246              	.LASF251:
 14247 083b 73656E64 		.ascii	"send_it\000"
 14247      5F697400 
 14248              	.LASF193:
 14249 0843 6C696E65 		.ascii	"linearPotValue32Bit\000"
 14249      6172506F 
 14249      7456616C 
 14249      75653332 
 14249      42697400 
 14250              	.LASF120:
 14251 0857 6368616E 		.ascii	"channel\000"
 14251      6E656C00 
 14252              	.LASF98:
 14253 085f 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 14253      4D617374 
 14253      65725772 
 14253      69746542 
 14253      6C6F636B 
 14254              	.LASF199:
 14255 0877 616E676C 		.ascii	"angle\000"
 14255      6500
 14256              	.LASF183:
 14257 087d 6E756D53 		.ascii	"numStrings\000"
 14257      7472696E 
 14257      677300
 14258              	.LASF42:
 14259 0888 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 14259      4D5F4545 
 14259      50524F4D 
 14259      5F575249 
 14259      54455F46 
 14260              	.LASF72:
 14261 08a0 6F737461 		.ascii	"ostart\000"
 14261      727400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 306


 14262              	.LASF266:
 14263 08a7 63757272 		.ascii	"currentPresetSelection\000"
 14263      656E7450 
 14263      72657365 
 14263      7453656C 
 14263      65637469 
 14264              	.LASF301:
 14265 08be 6F70656E 		.ascii	"openStringMIDI_Int\000"
 14265      53747269 
 14265      6E674D49 
 14265      44495F49 
 14265      6E7400
 14266              	.LASF71:
 14267 08d1 6973746F 		.ascii	"istop\000"
 14267      7000
 14268              	.LASF146:
 14269 08d7 5553425F 		.ascii	"USB_midiInBuffer\000"
 14269      6D696469 
 14269      496E4275 
 14269      66666572 
 14269      00
 14270              	.LASF316:
 14271 08e8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 14271      43313120 
 14271      352E342E 
 14271      31203230 
 14271      31363036 
 14272 091b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 14272      20726576 
 14272      6973696F 
 14272      6E203233 
 14272      37373135 
 14273 094e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 14273      66756E63 
 14273      74696F6E 
 14273      2D736563 
 14273      74696F6E 
 14274              	.LASF118:
 14275 0976 73656E64 		.ascii	"sendMIDINoteOn\000"
 14275      4D494449 
 14275      4E6F7465 
 14275      4F6E00
 14276              	.LASF274:
 14277 0985 6D61696E 		.ascii	"main_counter\000"
 14277      5F636F75 
 14277      6E746572 
 14277      00
 14278              	.LASF45:
 14279 0992 46697273 		.ascii	"FirstLine\000"
 14279      744C696E 
 14279      6500
 14280              	.LASF276:
 14281 099c 6475616C 		.ascii	"dualSlider\000"
 14281      536C6964 
 14281      657200
 14282              	.LASF60:
 14283 09a7 72657374 		.ascii	"restartSystemCheck\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 307


 14283      61727453 
 14283      79737465 
 14283      6D436865 
 14283      636B00
 14284              	.LASF188:
 14285 09ba 5553425F 		.ascii	"USB_check_flag\000"
 14285      63686563 
 14285      6B5F666C 
 14285      616700
 14286              	.LASF169:
 14287 09c9 6D657373 		.ascii	"messageArraySendCount\000"
 14287      61676541 
 14287      72726179 
 14287      53656E64 
 14287      436F756E 
 14288              	.LASF9:
 14289 09df 5F5F7569 		.ascii	"__uint32_t\000"
 14289      6E743332 
 14289      5F7400
 14290              	.LASF11:
 14291 09ea 6C6F6E67 		.ascii	"long long int\000"
 14291      206C6F6E 
 14291      6720696E 
 14291      7400
 14292              	.LASF194:
 14293 09f8 636F756E 		.ascii	"counter\000"
 14293      74657200 
 14294              	.LASF299:
 14295 0a00 73747269 		.ascii	"stringPitch\000"
 14295      6E675069 
 14295      74636800 
 14296              	.LASF210:
 14297 0a0c 72783154 		.ascii	"rx1TD\000"
 14297      4400
 14298              	.LASF303:
 14299 0a12 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 14299      4F4C4544 
 14299      57616974 
 14299      696E6754 
 14299      6F53656E 
 14300              	.LASF82:
 14301 0a28 74656D70 		.ascii	"tempIntLow\000"
 14301      496E744C 
 14301      6F7700
 14302              	.LASF61:
 14303 0a33 74656D70 		.ascii	"tempmin\000"
 14303      6D696E00 
 14304              	.LASF35:
 14305 0a3b 626C6F63 		.ascii	"blockingWrite\000"
 14305      6B696E67 
 14305      57726974 
 14305      6500
 14306              	.LASF214:
 14307 0a49 72783343 		.ascii	"rx3Channel\000"
 14307      68616E6E 
 14307      656C00
 14308              	.LASF23:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 308


 14309 0a54 646F7562 		.ascii	"double\000"
 14309      6C6500
 14310              	.LASF317:
 14311 0a5b 6D61696E 		.ascii	"main.c\000"
 14311      2E6300
 14312              	.LASF284:
 14313 0a62 62757474 		.ascii	"button1Up\000"
 14313      6F6E3155 
 14313      7000
 14314              	.LASF110:
 14315 0a6c 6C6F6732 		.ascii	"log2f_approx\000"
 14315      665F6170 
 14315      70726F78 
 14315      00
 14316              	.LASF165:
 14317 0a79 73696E67 		.ascii	"singleParamValueHigh\000"
 14317      6C655061 
 14317      72616D56 
 14317      616C7565 
 14317      48696768 
 14318              	.LASF152:
 14319 0a8e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 14319      52784275 
 14319      66666572 
 14319      00
 14320              	.LASF164:
 14321 0a9b 73696E67 		.ascii	"singleParamToUpdateLow\000"
 14321      6C655061 
 14321      72616D54 
 14321      6F557064 
 14321      6174654C 
 14322              	.LASF73:
 14323 0ab2 6F73746F 		.ascii	"ostop\000"
 14323      7000
 14324              	.LASF103:
 14325 0ab8 74696D65 		.ascii	"timeout\000"
 14325      6F757400 
 14326              	.LASF22:
 14327 0ac0 666C6F61 		.ascii	"float\000"
 14327      7400
 14328              	.LASF259:
 14329 0ac6 70726576 		.ascii	"prev_processed_pedals\000"
 14329      5F70726F 
 14329      63657373 
 14329      65645F70 
 14329      6564616C 
 14330              	.LASF227:
 14331 0adc 616D4865 		.ascii	"amHere2\000"
 14331      72653200 
 14332              	.LASF244:
 14333 0ae4 53504932 		.ascii	"SPI2started\000"
 14333      73746172 
 14333      74656400 
 14334              	.LASF230:
 14335 0af0 63757272 		.ascii	"currentPluckBuffer\000"
 14335      656E7450 
 14335      6C75636B 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 309


 14335      42756666 
 14335      657200
 14336              	.LASF89:
 14337 0b03 6261724D 		.ascii	"barMIDI\000"
 14337      49444900 
 14338              	.LASF126:
 14339 0b0b 73656E64 		.ascii	"sendMIDIPitchBend\000"
 14339      4D494449 
 14339      50697463 
 14339      6842656E 
 14339      6400
 14340              	.LASF13:
 14341 0b1d 756E7369 		.ascii	"unsigned int\000"
 14341      676E6564 
 14341      20696E74 
 14341      00
 14342              	.LASF293:
 14343 0b2a 70656461 		.ascii	"pedal_cc_assignments\000"
 14343      6C5F6363 
 14343      5F617373 
 14343      69676E6D 
 14343      656E7473 
 14344              	.LASF156:
 14345 0b3f 72656365 		.ascii	"receivingSysex\000"
 14345      6976696E 
 14345      67537973 
 14345      657800
 14346              	.LASF141:
 14347 0b4e 6361626C 		.ascii	"cable\000"
 14347      6500
 14348              	.LASF243:
 14349 0b54 70726576 		.ascii	"prevKnobs7bit\000"
 14349      4B6E6F62 
 14349      73376269 
 14349      7400
 14350              	.LASF59:
 14351 0b62 56627573 		.ascii	"Vbus_function\000"
 14351      5F66756E 
 14351      6374696F 
 14351      6E00
 14352              	.LASF262:
 14353 0b70 70726576 		.ascii	"prevPedals7bit\000"
 14353      50656461 
 14353      6C733762 
 14353      697400
 14354              	.LASF114:
 14355 0b7f 76656C6F 		.ascii	"velocity\000"
 14355      63697479 
 14355      00
 14356              	.LASF311:
 14357 0b88 63686563 		.ascii	"checkStatus\000"
 14357      6B537461 
 14357      74757300 
 14358              	.LASF25:
 14359 0b94 63797374 		.ascii	"cystatus\000"
 14359      61747573 
 14359      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 310


 14360              	.LASF239:
 14361 0b9d 6261725F 		.ascii	"bar_index\000"
 14361      696E6465 
 14361      7800
 14362              	.LASF242:
 14363 0ba7 6B6E6F62 		.ascii	"knobs7bit\000"
 14363      73376269 
 14363      7400
 14364              	.LASF113:
 14365 0bb1 73747269 		.ascii	"string\000"
 14365      6E6700
 14366              	.LASF237:
 14367 0bb8 6F666673 		.ascii	"offsetErrorCount\000"
 14367      65744572 
 14367      726F7243 
 14367      6F756E74 
 14367      00
 14368              	.LASF264:
 14369 0bc9 70726F63 		.ascii	"processed_volumePedal\000"
 14369      65737365 
 14369      645F766F 
 14369      6C756D65 
 14369      50656461 
 14370              	.LASF87:
 14371 0bdf 74656D70 		.ascii	"tempMIDI\000"
 14371      4D494449 
 14371      00
 14372              	.LASF217:
 14373 0be8 72784275 		.ascii	"rxBufferBar\000"
 14373      66666572 
 14373      42617200 
 14374              	.LASF212:
 14375 0bf4 74784368 		.ascii	"txChannel\000"
 14375      616E6E65 
 14375      6C00
 14376              	.LASF258:
 14377 0bfe 70726F63 		.ascii	"processed_pedals\000"
 14377      65737365 
 14377      645F7065 
 14377      64616C73 
 14377      00
 14378              	.LASF294:
 14379 0c0f 6F70656E 		.ascii	"openStringFrequencies\000"
 14379      53747269 
 14379      6E674672 
 14379      65717565 
 14379      6E636965 
 14380              	.LASF200:
 14381 0c25 70726576 		.ascii	"prevAngle\000"
 14381      416E676C 
 14381      6500
 14382              	.LASF226:
 14383 0c2f 706C7563 		.ascii	"pluck_index\000"
 14383      6B5F696E 
 14383      64657800 
 14384              	.LASF27:
 14385 0c3b 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 311


 14385      20646F75 
 14385      626C6500 
 14386              	.LASF104:
 14387 0c47 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 14387      4D617374 
 14387      65725265 
 14387      6164426C 
 14387      6F636B69 
 14388              	.LASF231:
 14389 0c5e 63757272 		.ascii	"currentBarBuffer\000"
 14389      656E7442 
 14389      61724275 
 14389      66666572 
 14389      00
 14390              	.LASF201:
 14391 0c6f 4144435F 		.ascii	"ADC_values\000"
 14391      76616C75 
 14391      657300
 14392              	.LASF65:
 14393 0c7a 66746F6D 		.ascii	"ftom\000"
 14393      00
 14394              	.LASF277:
 14395 0c7f 656E7465 		.ascii	"enterUp\000"
 14395      72557000 
 14396              	.LASF233:
 14397 0c87 53504931 		.ascii	"SPI1ErrorCount\000"
 14397      4572726F 
 14397      72436F75 
 14397      6E7400
 14398              	.LASF203:
 14399 0c96 6D696469 		.ascii	"midiSent\000"
 14399      53656E74 
 14399      00
 14400              	.LASF142:
 14401 0c9f 6D696469 		.ascii	"midiMsg\000"
 14401      4D736700 
 14402              	.LASF307:
 14403 0ca7 63757272 		.ascii	"currentNeck\000"
 14403      656E744E 
 14403      65636B00 
 14404              	.LASF308:
 14405 0cb3 65646974 		.ascii	"editMode\000"
 14405      4D6F6465 
 14405      00
 14406              	.LASF12:
 14407 0cbc 6C6F6E67 		.ascii	"long long unsigned int\000"
 14407      206C6F6E 
 14407      6720756E 
 14407      7369676E 
 14407      65642069 
 14408              	.LASF16:
 14409 0cd3 75696E74 		.ascii	"uint16_t\000"
 14409      31365F74 
 14409      00
 14410              	.LASF137:
 14411 0cdc 74656D70 		.ascii	"tempHigh\000"
 14411      48696768 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 312


 14411      00
 14412              	.LASF182:
 14413 0ce5 74657374 		.ascii	"testVal\000"
 14413      56616C00 
 14414              	.LASF211:
 14415 0ced 72783254 		.ascii	"rx2TD\000"
 14415      4400
 14416              	.LASF225:
 14417 0cf3 70726576 		.ascii	"prevOctave\000"
 14417      4F637461 
 14417      766500
 14418              	.LASF319:
 14419 0cfe 62726561 		.ascii	"breakFloat\000"
 14419      6B466C6F 
 14419      617400
 14420              	.LASF312:
 14421 0d09 63686563 		.ascii	"checkBase\000"
 14421      6B426173 
 14421      6500
 14422              	.LASF58:
 14423 0d13 73706973 		.ascii	"spis_2_ss\000"
 14423      5F325F73 
 14423      7300
 14424              	.LASF285:
 14425 0d1d 62757474 		.ascii	"button2Up\000"
 14425      6F6E3255 
 14425      7000
 14426              	.LASF167:
 14427 0d27 73656E64 		.ascii	"sendMappingChangeUpdate\000"
 14427      4D617070 
 14427      696E6743 
 14427      68616E67 
 14427      65557064 
 14428              	.LASF222:
 14429 0d3f 616D4865 		.ascii	"amHere\000"
 14429      726500
 14430              	.LASF246:
 14431 0d46 61727261 		.ascii	"array\000"
 14431      7900
 14432              	.LASF92:
 14433 0d4c 7363616C 		.ascii	"scaledMIDI\000"
 14433      65644D49 
 14433      444900
 14434              	.LASF26:
 14435 0d57 72656738 		.ascii	"reg8\000"
 14435      00
 14436              	.LASF160:
 14437 0d5c 636F7065 		.ascii	"copedentNumberToWrite\000"
 14437      64656E74 
 14437      4E756D62 
 14437      6572546F 
 14437      57726974 
 14438              	.LASF55:
 14439 0d72 6D617043 		.ascii	"mapCountNext\000"
 14439      6F756E74 
 14439      4E657874 
 14439      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 313


 14440              	.LASF228:
 14441 0d7f 73706943 		.ascii	"spiCounter2\000"
 14441      6F756E74 
 14441      65723200 
 14442              	.LASF115:
 14443 0d8b 74656D70 		.ascii	"tempVel\000"
 14443      56656C00 
 14444              	.LASF184:
 14445 0d93 75736241 		.ascii	"usbActivityCounter\000"
 14445      63746976 
 14445      69747943 
 14445      6F756E74 
 14445      657200
 14446              	.LASF256:
 14447 0da6 64656164 		.ascii	"deadzone\000"
 14447      7A6F6E65 
 14447      00
 14448              	.LASF180:
 14449 0daf 70617273 		.ascii	"parseThatMF\000"
 14449      65546861 
 14449      744D4600 
 14450              	.LASF3:
 14451 0dbb 5F5F696E 		.ascii	"__int16_t\000"
 14451      7431365F 
 14451      7400
 14452              	.LASF54:
 14453 0dc5 696E6974 		.ascii	"initialVals\000"
 14453      69616C56 
 14453      616C7300 
 14454              	.LASF187:
 14455 0dd1 5553425F 		.ascii	"USB_active\000"
 14455      61637469 
 14455      766500
 14456              	.LASF162:
 14457 0ddc 73656E64 		.ascii	"sendSingleParamUpdate\000"
 14457      53696E67 
 14457      6C655061 
 14457      72616D55 
 14457      70646174 
 14458              	.LASF154:
 14459 0df2 73797365 		.ascii	"sysexBuffer\000"
 14459      78427566 
 14459      66657200 
 14460              	.LASF172:
 14461 0dfe 62756643 		.ascii	"bufCount\000"
 14461      6F756E74 
 14461      00
 14462              	.LASF232:
 14463 0e07 706C7563 		.ascii	"pluckErrorCount\000"
 14463      6B457272 
 14463      6F72436F 
 14463      756E7400 
 14464              	.LASF133:
 14465 0e17 74656D70 		.ascii	"tempChar\000"
 14465      43686172 
 14465      00
 14466              	.LASF302:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 314


 14467 0e20 4F4C4544 		.ascii	"OLEDcount\000"
 14467      636F756E 
 14467      7400
 14468              	.LASF288:
 14469 0e2a 70617463 		.ascii	"patchNum\000"
 14469      684E756D 
 14469      00
 14470              	.LASF306:
 14471 0e33 70656461 		.ascii	"pedals_float\000"
 14471      6C735F66 
 14471      6C6F6174 
 14471      00
 14472              	.LASF19:
 14473 0e40 75696E74 		.ascii	"uint8\000"
 14473      3800
 14474              	.LASF254:
 14475 0e46 70656461 		.ascii	"pedals_low\000"
 14475      6C735F6C 
 14475      6F7700
 14476              	.LASF91:
 14477 0e51 70697463 		.ascii	"pitchBendAmount\000"
 14477      6842656E 
 14477      64416D6F 
 14477      756E7400 
 14478              	.LASF163:
 14479 0e61 73696E67 		.ascii	"singleParamToUpdateHigh\000"
 14479      6C655061 
 14479      72616D54 
 14479      6F557064 
 14479      61746548 
 14480              	.LASF4:
 14481 0e79 73686F72 		.ascii	"short int\000"
 14481      7420696E 
 14481      7400
 14482              	.LASF170:
 14483 0e83 6D657373 		.ascii	"messageArraySize\000"
 14483      61676541 
 14483      72726179 
 14483      53697A65 
 14483      00
 14484              	.LASF265:
 14485 0e94 66726574 		.ascii	"fretMeasurements\000"
 14485      4D656173 
 14485      7572656D 
 14485      656E7473 
 14485      00
 14486              	.LASF101:
 14487 0ea5 6D6F6465 		.ascii	"mode\000"
 14487      00
 14488              	.LASF95:
 14489 0eaa 62756666 		.ascii	"bufferPointer\000"
 14489      6572506F 
 14489      696E7465 
 14489      7200
 14490              	.LASF300:
 14491 0eb8 73747269 		.ascii	"stringMIDI\000"
 14491      6E674D49 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 315


 14491      444900
 14492              	.LASF88:
 14493 0ec3 6F70656E 		.ascii	"openStringMIDI\000"
 14493      53747269 
 14493      6E674D49 
 14493      444900
 14494              	.LASF15:
 14495 0ed2 696E7431 		.ascii	"int16_t\000"
 14495      365F7400 
 14496              	.LASF134:
 14497 0eda 70656461 		.ascii	"pedalToWrite\000"
 14497      6C546F57 
 14497      72697465 
 14497      00
 14498              	.LASF32:
 14499 0ee7 65657072 		.ascii	"eepromSize\000"
 14499      6F6D5369 
 14499      7A6500
 14500              	.LASF107:
 14501 0ef2 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 14501      6C617943 
 14501      75727265 
 14501      6E745072 
 14501      65736574 
 14502              	.LASF295:
 14503 0f16 73747269 		.ascii	"stringMappedPositions\000"
 14503      6E674D61 
 14503      70706564 
 14503      506F7369 
 14503      74696F6E 
 14504              	.LASF197:
 14505 0f2c 70726576 		.ascii	"previousButtons\000"
 14505      696F7573 
 14505      42757474 
 14505      6F6E7300 
 14506              	.LASF33:
 14507 0f3c 77656172 		.ascii	"wearLevelingFactor\000"
 14507      4C657665 
 14507      6C696E67 
 14507      46616374 
 14507      6F7200
 14508              	.LASF144:
 14509 0f4f 5553425F 		.ascii	"USB_midiInPointer\000"
 14509      6D696469 
 14509      496E506F 
 14509      696E7465 
 14509      7200
 14510              	.LASF309:
 14511 0f61 63616C69 		.ascii	"calibrationMode\000"
 14511      62726174 
 14511      696F6E4D 
 14511      6F646500 
 14512              	.LASF99:
 14513 0f71 69324341 		.ascii	"i2CAddr\000"
 14513      64647200 
 14514              	.LASF190:
 14515 0f79 696E4275 		.ascii	"inBuffer\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 316


 14515      66666572 
 14515      00
 14516              	.LASF221:
 14517 0f82 6D617853 		.ascii	"maxStrings\000"
 14517      7472696E 
 14517      677300
 14518              	.LASF78:
 14519 0f8d 6C657474 		.ascii	"letter\000"
 14519      657200
 14520              	.LASF148:
 14521 0f94 5553425F 		.ascii	"USB_midiOutBuffer\000"
 14521      6D696469 
 14521      4F757442 
 14521      75666665 
 14521      7200
 14522              	.LASF205:
 14523 0fa6 6D616372 		.ascii	"macroKnobValues\000"
 14523      6F4B6E6F 
 14523      6256616C 
 14523      75657300 
 14524              	.LASF253:
 14525 0fb6 6932635F 		.ascii	"i2c_skipped\000"
 14525      736B6970 
 14525      70656400 
 14526              	.LASF261:
 14527 0fc2 70656461 		.ascii	"pedals7bit\000"
 14527      6C733762 
 14527      697400
 14528              	.LASF189:
 14529 0fcd 6D617070 		.ascii	"mappingArray\000"
 14529      696E6741 
 14529      72726179 
 14529      00
 14530              	.LASF235:
 14531 0fda 73706941 		.ascii	"spiAdjusted\000"
 14531      646A7573 
 14531      74656400 
 14532              	.LASF209:
 14533 0fe6 72783243 		.ascii	"rx2Channel\000"
 14533      68616E6E 
 14533      656C00
 14534              	.LASF145:
 14535 0ff1 5553425F 		.ascii	"USB_midi_in_ep\000"
 14535      6D696469 
 14535      5F696E5F 
 14535      657000
 14536              	.LASF97:
 14537 1000 446D6152 		.ascii	"DmaRxConfiguration\000"
 14537      78436F6E 
 14537      66696775 
 14537      72617469 
 14537      6F6E00
 14538              	.LASF18:
 14539 1013 75696E74 		.ascii	"uint32_t\000"
 14539      33325F74 
 14539      00
 14540              	.LASF287:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 317


 14541 101c 62757474 		.ascii	"button4Up\000"
 14541      6F6E3455 
 14541      7000
 14542              	.LASF186:
 14543 1026 70726576 		.ascii	"prevVBUS\000"
 14543      56425553 
 14543      00
 14544              	.LASF215:
 14545 102f 72783354 		.ascii	"rx3TD\000"
 14545      4400
 14546              	.LASF185:
 14547 1035 63757272 		.ascii	"currentVBUS\000"
 14547      656E7456 
 14547      42555300 
 14548              	.LASF281:
 14549 1041 6F637434 		.ascii	"oct4Up\000"
 14549      557000
 14550              	.LASF320:
 14551 1048 63616C63 		.ascii	"calculatePedalRatios\000"
 14551      756C6174 
 14551      65506564 
 14551      616C5261 
 14551      74696F73 
 14552              	.LASF286:
 14553 105d 62757474 		.ascii	"button3Up\000"
 14553      6F6E3355 
 14553      7000
 14554              	.LASF6:
 14555 1067 73686F72 		.ascii	"short unsigned int\000"
 14555      7420756E 
 14555      7369676E 
 14555      65642069 
 14555      6E7400
 14556              	.LASF56:
 14557 107a 6D617070 		.ascii	"mapping\000"
 14557      696E6700 
 14558              	.LASF116:
 14559 1082 6E6F7465 		.ascii	"noteToSend\000"
 14559      546F5365 
 14559      6E6400
 14560              	.LASF213:
 14561 108d 74785444 		.ascii	"txTD\000"
 14561      00
 14562              	.LASF7:
 14563 1092 5F5F696E 		.ascii	"__int32_t\000"
 14563      7433325F 
 14563      7400
 14564              	.LASF220:
 14565 109c 70726576 		.ascii	"prevBar\000"
 14565      42617200 
 14566              	.LASF192:
 14567 10a4 6D79496E 		.ascii	"myInputArray\000"
 14567      70757441 
 14567      72726179 
 14567      00
 14568              	.LASF64:
 14569 10b1 6D746F66 		.ascii	"mtof\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccEPDFmT.s 			page 318


 14569      00
 14570              	.LASF292:
 14571 10b6 70656461 		.ascii	"pedals\000"
 14571      6C7300
 14572              	.LASF81:
 14573 10bd 74656D70 		.ascii	"tempIntHigh\000"
 14573      496E7448 
 14573      69676800 
 14574              	.LASF279:
 14575 10c9 65646974 		.ascii	"editUp\000"
 14575      557000
 14576              	.LASF31:
 14577 10d0 6C617374 		.ascii	"lastWrRowAddr\000"
 14577      5772526F 
 14577      77416464 
 14577      7200
 14578              	.LASF76:
 14579 10de 6D794172 		.ascii	"myArrayCounter\000"
 14579      72617943 
 14579      6F756E74 
 14579      657200
 14580              	.LASF297:
 14581 10ed 73747269 		.ascii	"stringFrequencies\000"
 14581      6E674672 
 14581      65717565 
 14581      6E636965 
 14581      7300
 14582              	.LASF20:
 14583 10ff 75696E74 		.ascii	"uint16\000"
 14583      313600
 14584              	.LASF191:
 14585 1106 6D794172 		.ascii	"myArray\000"
 14585      72617900 
 14586              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
