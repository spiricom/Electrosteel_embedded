ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sysexBuffer,2048,4
  20              		.global	sysexPointer
  21              		.bss
  22              		.align	2
  23              		.type	sysexPointer, %object
  24              		.size	sysexPointer, 4
  25              	sysexPointer:
  26 0000 00000000 		.space	4
  27              		.global	receivingSysex
  28              		.type	receivingSysex, %object
  29              		.size	receivingSysex, 1
  30              	receivingSysex:
  31 0004 00       		.space	1
  32              		.global	parsingSysex
  33              		.type	parsingSysex, %object
  34              		.size	parsingSysex, 1
  35              	parsingSysex:
  36 0005 00       		.space	1
  37              		.comm	presetArray,2048,4
  38              		.global	presetNumberToWrite
  39              		.type	presetNumberToWrite, %object
  40              		.size	presetNumberToWrite, 1
  41              	presetNumberToWrite:
  42 0006 00       		.space	1
  43              		.global	copedentNumberToWrite
  44              		.type	copedentNumberToWrite, %object
  45              		.size	copedentNumberToWrite, 1
  46              	copedentNumberToWrite:
  47 0007 00       		.space	1
  48              		.global	sendMessageEnd
  49              		.type	sendMessageEnd, %object
  50              		.size	sendMessageEnd, 1
  51              	sendMessageEnd:
  52 0008 00       		.space	1
  53              		.global	sendSingleParamUpdate
  54              		.type	sendSingleParamUpdate, %object
  55              		.size	sendSingleParamUpdate, 1
  56              	sendSingleParamUpdate:
  57 0009 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 2


  58              		.global	singleParamToUpdateHigh
  59              		.type	singleParamToUpdateHigh, %object
  60              		.size	singleParamToUpdateHigh, 1
  61              	singleParamToUpdateHigh:
  62 000a 00       		.space	1
  63              		.global	singleParamToUpdateLow
  64              		.type	singleParamToUpdateLow, %object
  65              		.size	singleParamToUpdateLow, 1
  66              	singleParamToUpdateLow:
  67 000b 00       		.space	1
  68              		.global	singleParamValueHigh
  69              		.type	singleParamValueHigh, %object
  70              		.size	singleParamValueHigh, 1
  71              	singleParamValueHigh:
  72 000c 00       		.space	1
  73              		.global	singleParamValueLow
  74              		.type	singleParamValueLow, %object
  75              		.size	singleParamValueLow, 1
  76              	singleParamValueLow:
  77 000d 00       		.space	1
  78              		.global	presetArraySection
  79              		.type	presetArraySection, %object
  80              		.size	presetArraySection, 1
  81              	presetArraySection:
  82 000e 00       		.space	1
  83              		.global	messageArraySendCount
  84 000f 00       		.align	1
  85              		.type	messageArraySendCount, %object
  86              		.size	messageArraySendCount, 2
  87              	messageArraySendCount:
  88 0010 0000     		.space	2
  89              		.global	messageArraySize
  90              		.align	1
  91              		.type	messageArraySize, %object
  92              		.size	messageArraySize, 2
  93              	messageArraySize:
  94 0012 0000     		.space	2
  95              		.global	sysexMessageInProgress
  96              		.type	sysexMessageInProgress, %object
  97              		.size	sysexMessageInProgress, 1
  98              	sysexMessageInProgress:
  99 0014 00       		.space	1
 100              		.global	bufCount
 101              		.type	bufCount, %object
 102              		.size	bufCount, 1
 103              	bufCount:
 104 0015 00       		.space	1
 105              		.global	sendingMessage
 106              		.type	sendingMessage, %object
 107              		.size	sendingMessage, 1
 108              	sendingMessage:
 109 0016 00       		.space	1
 110              		.global	sendKnobs
 111              		.type	sendKnobs, %object
 112              		.size	sendKnobs, 1
 113              	sendKnobs:
 114 0017 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 3


 115              		.global	currentFloat
 116              		.align	2
 117              		.type	currentFloat, %object
 118              		.size	currentFloat, 4
 119              	currentFloat:
 120 0018 00000000 		.space	4
 121              		.global	mapCount
 122              		.align	2
 123              		.type	mapCount, %object
 124              		.size	mapCount, 4
 125              	mapCount:
 126 001c 00000000 		.space	4
 127              		.global	valsCount
 128              		.align	1
 129              		.type	valsCount, %object
 130              		.size	valsCount, 2
 131              	valsCount:
 132 0020 0000     		.space	2
 133              		.global	mapCountExpectation
 134              		.align	1
 135              		.type	mapCountExpectation, %object
 136              		.size	mapCountExpectation, 2
 137              	mapCountExpectation:
 138 0022 0000     		.space	2
 139              		.global	numMappings
 140              		.align	1
 141              		.type	numMappings, %object
 142              		.size	numMappings, 2
 143              	numMappings:
 144 0024 0000     		.space	2
 145              		.global	parseThatMF
 146              		.type	parseThatMF, %object
 147              		.size	parseThatMF, 1
 148              	parseThatMF:
 149 0026 00       		.space	1
 150              		.global	valCheck
 151 0027 00       		.align	2
 152              		.type	valCheck, %object
 153              		.size	valCheck, 4
 154              	valCheck:
 155 0028 00000000 		.space	4
 156              		.global	testVal
 157              		.align	2
 158              		.type	testVal, %object
 159              		.size	testVal, 4
 160              	testVal:
 161 002c 00000000 		.space	4
 162              		.global	numStrings
 163              		.data
 164              		.align	2
 165              		.type	numStrings, %object
 166              		.size	numStrings, 4
 167              	numStrings:
 168 0000 0A000000 		.word	10
 169              		.global	usbActivityCounter
 170              		.bss
 171              		.type	usbActivityCounter, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 4


 172              		.size	usbActivityCounter, 1
 173              	usbActivityCounter:
 174 0030 00       		.space	1
 175              		.comm	midiMsg,4,4
 176              		.global	currentVBUS
 177              		.type	currentVBUS, %object
 178              		.size	currentVBUS, 1
 179              	currentVBUS:
 180 0031 00       		.space	1
 181              		.global	prevVBUS
 182              		.type	prevVBUS, %object
 183              		.size	prevVBUS, 1
 184              	prevVBUS:
 185 0032 00       		.space	1
 186              		.global	USB_active
 187              		.type	USB_active, %object
 188              		.size	USB_active, 1
 189              	USB_active:
 190 0033 00       		.space	1
 191              		.global	USB_check_flag
 192              		.type	USB_check_flag, %object
 193              		.size	USB_check_flag, 1
 194              	USB_check_flag:
 195 0034 00       		.space	1
 196              		.comm	inBuffer,32,4
 197              		.comm	myArray,32,4
 198              		.comm	myInputArray,2,4
 199              		.comm	linearPotValue32Bit,8,4
 200              		.global	i
 201              		.type	i, %object
 202              		.size	i, 1
 203              	i:
 204 0035 00       		.space	1
 205              		.global	counter
 206              		.type	counter, %object
 207              		.size	counter, 1
 208              	counter:
 209 0036 00       		.space	1
 210              		.comm	returnedData,32,4
 211              		.comm	temper,4,4
 212              		.comm	previousButtons,44,4
 213              		.global	octave
 214              		.data
 215              		.align	2
 216              		.type	octave, %object
 217              		.size	octave, 4
 218              	octave:
 219 0004 05000000 		.word	5
 220              		.comm	angle,20,4
 221              		.comm	prevAngle,20,4
 222              		.comm	ADC_values,8,4
 223              		.global	rawAngle
 224              		.bss
 225 0037 00       		.align	1
 226              		.type	rawAngle, %object
 227              		.size	rawAngle, 2
 228              	rawAngle:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 5


 229 0038 0000     		.space	2
 230              		.global	midiSent
 231              		.align	1
 232              		.type	midiSent, %object
 233              		.size	midiSent, 2
 234              	midiSent:
 235 003a 0000     		.space	2
 236              		.global	midiOverflow
 237              		.align	1
 238              		.type	midiOverflow, %object
 239              		.size	midiOverflow, 2
 240              	midiOverflow:
 241 003c 0000     		.space	2
 242              		.comm	macroKnobValues,8,4
 243              		.global	currentCopedent
 244              		.type	currentCopedent, %object
 245              		.size	currentCopedent, 1
 246              	currentCopedent:
 247 003e 00       		.space	1
 248              		.global	necks
 249              		.data
 250              		.align	2
 251              		.type	necks, %object
 252              		.size	necks, 2
 253              	necks:
 254 0008 00       		.byte	0
 255 0009 01       		.byte	1
 256              		.comm	rx1Channel,1,1
 257              		.comm	rx2Channel,1,32
 258              		.comm	rx1TD,2,4
 259              		.comm	rx2TD,2,32
 260              		.comm	txChannel,1,32
 261              		.comm	txTD,1,32
 262              		.comm	rx3Channel,1,32
 263              		.comm	rx3TD,1,32
 264              		.comm	rxBufferPluck,52,32
 265              		.comm	rxBufferBar,16,32
 266              		.comm	strings,24,4
 267              		.comm	prevStrings,24,4
 268              		.comm	bar,4,4
 269              		.comm	prevBar,4,4
 270              		.comm	maxStrings,24,4
 271              		.global	amHere
 272              		.bss
 273              		.type	amHere, %object
 274              		.size	amHere, 1
 275              	amHere:
 276 003f 00       		.space	1
 277              		.global	spiCounter
 278              		.type	spiCounter, %object
 279              		.size	spiCounter, 1
 280              	spiCounter:
 281 0040 00       		.space	1
 282              		.global	newDataFlag
 283              		.type	newDataFlag, %object
 284              		.size	newDataFlag, 1
 285              	newDataFlag:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 6


 286 0041 00       		.space	1
 287              		.global	prevOctave
 288 0042 0000     		.align	2
 289              		.type	prevOctave, %object
 290              		.size	prevOctave, 4
 291              	prevOctave:
 292 0044 00000000 		.space	4
 293              		.global	pluck_index
 294              		.type	pluck_index, %object
 295              		.size	pluck_index, 1
 296              	pluck_index:
 297 0048 00       		.space	1
 298              		.global	amHere2
 299              		.type	amHere2, %object
 300              		.size	amHere2, 1
 301              	amHere2:
 302 0049 00       		.space	1
 303              		.global	spiCounter2
 304              		.type	spiCounter2, %object
 305              		.size	spiCounter2, 1
 306              	spiCounter2:
 307 004a 00       		.space	1
 308              		.global	newDataFlag2
 309              		.type	newDataFlag2, %object
 310              		.size	newDataFlag2, 1
 311              	newDataFlag2:
 312 004b 00       		.space	1
 313              		.global	currentPluckBuffer
 314              		.type	currentPluckBuffer, %object
 315              		.size	currentPluckBuffer, 1
 316              	currentPluckBuffer:
 317 004c 00       		.space	1
 318              		.global	currentBarBuffer
 319              		.type	currentBarBuffer, %object
 320              		.size	currentBarBuffer, 1
 321              	currentBarBuffer:
 322 004d 00       		.space	1
 323              		.global	pluckErrorCount
 324              		.type	pluckErrorCount, %object
 325              		.size	pluckErrorCount, 1
 326              	pluckErrorCount:
 327 004e 00       		.space	1
 328              		.global	SPI1ErrorCount
 329 004f 00       		.align	1
 330              		.type	SPI1ErrorCount, %object
 331              		.size	SPI1ErrorCount, 2
 332              	SPI1ErrorCount:
 333 0050 0000     		.space	2
 334              		.global	inputData
 335              		.type	inputData, %object
 336              		.size	inputData, 1
 337              	inputData:
 338 0052 00       		.space	1
 339              		.section	.text.spis_1_ss,"ax",%progbits
 340              		.align	2
 341              		.global	spis_1_ss
 342              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 7


 343              		.thumb_func
 344              		.type	spis_1_ss, %function
 345              	spis_1_ss:
 346              	.LFB64:
 347              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** #define EEPROM_NECKS_OFFSET 0
  11:main.c        **** #define EEPROM_COPEDENT_OFFSET 2
  12:main.c        **** #define COPEDENT_SIZE_IN_BYTES 278 //including name bytes
  13:main.c        **** #define COPEDENT_SIZE_IN_FLOATS 132 // not including name bytes
  14:main.c        **** #define NAME_LENGTH_IN_BYTES 14
  15:main.c        **** #define EEPROM_CALIBRATION_OFFSET (EEPROM_NECKS_OFFSET + EEPROM_COPEDENT_OFFSET + (MAX_NUM_COPEDENT
  16:main.c        **** #define CALIBRATION_SIZE_IN_BYTES NUM_PEDALS * 4 //for each pedal, store 2 bytes for high and 2 byt
  17:main.c        **** #define MACRO_CLIPPED_LENGTH 8
  18:main.c        **** #define NAME_CLIPPED_LENGTH 11
  19:main.c        **** #define COPEDENT_NAME_CLIPPED_LENGTH 8
  20:main.c        **** #define myBufferSize 32
  21:main.c        **** void parseSysex(void);
  22:main.c        **** 
  23:main.c        **** uint8_t sysexBuffer[2048];
  24:main.c        **** uint32_t sysexPointer = 0;
  25:main.c        **** uint8_t receivingSysex = 0;
  26:main.c        **** uint8_t parsingSysex = 0;
  27:main.c        **** volatile uint8_t presetArray[2048];
  28:main.c        **** uint8_t presetNumberToWrite = 0;
  29:main.c        **** uint8_t copedentNumberToWrite = 0;
  30:main.c        **** uint8_t sendMessageEnd = 0;
  31:main.c        **** 
  32:main.c        **** uint8_t sendSingleParamUpdate = 0;
  33:main.c        **** uint8_t singleParamToUpdateHigh = 0;
  34:main.c        **** uint8_t singleParamToUpdateLow = 0;
  35:main.c        **** uint8_t singleParamValueHigh = 0;
  36:main.c        **** uint8_t singleParamValueLow = 0;
  37:main.c        ****             
  38:main.c        ****             
  39:main.c        **** enum presetArraySectionState
  40:main.c        **** {
  41:main.c        ****     presetName = 0,
  42:main.c        ****     macroNames = 1,
  43:main.c        ****     initialVals = 2,
  44:main.c        ****     mapCountNext = 3,
  45:main.c        ****     mapping = 4,
  46:main.c        ****     presetEnd = 5,
  47:main.c        **** };
  48:main.c        **** uint8_t presetArraySection = presetName;
  49:main.c        **** 
  50:main.c        **** uint16_t messageArraySendCount = 0;
  51:main.c        **** uint16_t messageArraySize = 0;
  52:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 8


  53:main.c        **** uint8_t sysexMessageInProgress = 0;
  54:main.c        **** 
  55:main.c        **** uint8_t bufCount = 0;
  56:main.c        **** volatile uint8_t sendingMessage = 0;
  57:main.c        **** volatile uint8_t sendKnobs = 0;
  58:main.c        **** uint32_t currentFloat = 0;
  59:main.c        **** uint32_t mapCount = 0;
  60:main.c        **** 
  61:main.c        **** uint16_t valsCount = 0;
  62:main.c        **** uint16_t mapCountExpectation = 0;
  63:main.c        **** uint16_t numMappings = 0;
  64:main.c        **** volatile uint8_t parseThatMF = 0;
  65:main.c        **** volatile float valCheck = 0.0f;
  66:main.c        **** volatile float testVal = 0.0f;
  67:main.c        **** 
  68:main.c        **** int numStrings = 10;
  69:main.c        **** /*
  70:main.c        **** #define TUNING_ARRAY_SIZE 258
  71:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  72:main.c        **** */
  73:main.c        **** 
  74:main.c        **** volatile uint8 usbActivityCounter = 0u;
  75:main.c        **** uint8 midiMsg[4];
  76:main.c        **** uint8_t currentVBUS = 0;
  77:main.c        **** uint8_t prevVBUS = 0;
  78:main.c        **** volatile uint8_t USB_active = 0;
  79:main.c        **** volatile uint8_t USB_check_flag = 0;
  80:main.c        **** 
  81:main.c        **** 
  82:main.c        **** uint8 inBuffer[myBufferSize];
  83:main.c        **** 
  84:main.c        **** uint8 myArray[myBufferSize];
  85:main.c        **** uint8 myInputArray[2];
  86:main.c        **** int32_t linearPotValue32Bit[2];
  87:main.c        **** uint8_t i = 0;
  88:main.c        **** uint8_t counter = 0;
  89:main.c        **** uint8_t returnedData[myBufferSize];
  90:main.c        **** int32_t temper;
  91:main.c        **** int previousButtons[11];
  92:main.c        **** int octave = 5;
  93:main.c        **** uint16_t angle[10];
  94:main.c        **** uint16_t prevAngle[10];
  95:main.c        **** 
  96:main.c        **** uint16_t ADC_values[4];
  97:main.c        **** uint16_t rawAngle = 0;
  98:main.c        **** uint16_t midiSent = 0;
  99:main.c        **** uint16_t midiOverflow = 0;
 100:main.c        **** 
 101:main.c        **** uint8_t macroKnobValues[8];
 102:main.c        **** 
 103:main.c        **** uint8_t currentCopedent = 0;
 104:main.c        **** uint8_t necks[2] = {0,1};
 105:main.c        **** 
 106:main.c        **** void checkUSB_Vbus(void);
 107:main.c        **** void sendMIDIAllNotesOff(void);
 108:main.c        **** void sendMIDIPitchBend(int val, int channel);
 109:main.c        **** void firstCheckUSB_Vbus(void);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 9


 110:main.c        **** void restartSystemCheck(void);
 111:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 112:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 113:main.c        **** CY_ISR_PROTO(SleepIsr_function);
 114:main.c        **** void noteEvent(int string);
 115:main.c        **** void I2C_reset(void);
 116:main.c        **** void CCEvent(int cc, int val);
 117:main.c        **** void DmaRxConfiguration(void);
 118:main.c        **** /* DMA Configuration for DMA_RX */
 119:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
 120:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
 121:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
 122:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
 123:main.c        **** 
 124:main.c        **** void DmaTxConfiguration(void);
 125:main.c        **** 
 126:main.c        **** /* DMA Configuration for DMA_TX */
 127:main.c        **** #define DMA_TX_BYTES_PER_BURST      (1u)
 128:main.c        **** #define DMA_TX_REQUEST_PER_BURST    (1u)
 129:main.c        **** #define DMA_TX_SRC_BASE             (CYDEV_SRAM_BASE)
 130:main.c        **** #define DMA_TX_DST_BASE             (CYDEV_PERIPH_BASE)
 131:main.c        **** 
 132:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
 133:main.c        **** #define BAR_BUFFER_SIZE                 (8u)
 134:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
 135:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 136:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 137:main.c        **** 
 138:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 139:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 140:main.c        **** 
 141:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 142:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 143:main.c        **** 
 144:main.c        **** 
 145:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 146:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 147:main.c        **** 
 148:main.c        **** volatile uint16_t strings[12];
 149:main.c        **** volatile uint16_t prevStrings[12];
 150:main.c        **** volatile uint16_t bar[2];
 151:main.c        **** volatile uint16_t prevBar[2];
 152:main.c        **** volatile uint16_t maxStrings[12];
 153:main.c        **** volatile uint8_t amHere = 0;
 154:main.c        **** volatile uint8_t spiCounter = 0;
 155:main.c        **** volatile uint8_t newDataFlag = 0;
 156:main.c        **** int prevOctave = 0;
 157:main.c        **** uint8_t pluck_index = 0;
 158:main.c        **** volatile uint8_t amHere2 = 0;
 159:main.c        **** volatile uint8_t spiCounter2 = 0;
 160:main.c        **** volatile uint8_t newDataFlag2 = 0;
 161:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 162:main.c        **** volatile uint8_t currentBarBuffer = 0;
 163:main.c        **** volatile uint8_t pluckErrorCount = 0;
 164:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 165:main.c        **** 
 166:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 10


 167:main.c        **** 
 168:main.c        **** volatile uint8_t inputData = 0;
 169:main.c        **** 
 170:main.c        **** 
 171:main.c        **** union breakFloat {
 172:main.c        ****  float f;
 173:main.c        ****  uint8_t b[4];  
 174:main.c        ****  uint32_t u32;
 175:main.c        **** };
 176:main.c        **** 
 177:main.c        **** 
 178:main.c        **** CY_ISR(spis_1_ss)
 179:main.c        **** {
 348              		.loc 1 179 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 90B5     		push	{r4, r7, lr}
 353              		.cfi_def_cfa_offset 12
 354              		.cfi_offset 4, -12
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 83B0     		sub	sp, sp, #12
 358              		.cfi_def_cfa_offset 24
 359 0004 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 180:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 361              		.loc 1 180 0
 362 0006 554B     		ldr	r3, .L5
 363 0008 1B78     		ldrb	r3, [r3]
 364 000a DBB2     		uxtb	r3, r3
 365 000c 002B     		cmp	r3, #0
 366 000e 0CBF     		ite	eq
 367 0010 0123     		moveq	r3, #1
 368 0012 0023     		movne	r3, #0
 369 0014 DBB2     		uxtb	r3, r3
 370 0016 1A46     		mov	r2, r3
 371 0018 504B     		ldr	r3, .L5
 372 001a 1A70     		strb	r2, [r3]
 181:main.c        **** 
 182:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 373              		.loc 1 182 0
 374 001c 4F4B     		ldr	r3, .L5
 375 001e 1B78     		ldrb	r3, [r3]
 376 0020 DBB2     		uxtb	r3, r3
 377 0022 002B     		cmp	r3, #0
 378 0024 0CBF     		ite	eq
 379 0026 0123     		moveq	r3, #1
 380 0028 0023     		movne	r3, #0
 381 002a DBB2     		uxtb	r3, r3
 382 002c 1946     		mov	r1, r3
 383 002e 4C4A     		ldr	r2, .L5+4
 384 0030 1A23     		movs	r3, #26
 385 0032 03FB01F3 		mul	r3, r3, r1
 386 0036 1344     		add	r3, r3, r2
 387 0038 1B78     		ldrb	r3, [r3]
 388 003a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 11


 389 003c FE2B     		cmp	r3, #254
 390 003e 4FD1     		bne	.L2
 391              		.loc 1 182 0 is_stmt 0 discriminator 1
 392 0040 464B     		ldr	r3, .L5
 393 0042 1B78     		ldrb	r3, [r3]
 394 0044 DBB2     		uxtb	r3, r3
 395 0046 002B     		cmp	r3, #0
 396 0048 0CBF     		ite	eq
 397 004a 0123     		moveq	r3, #1
 398 004c 0023     		movne	r3, #0
 399 004e DBB2     		uxtb	r3, r3
 400 0050 1946     		mov	r1, r3
 401 0052 434A     		ldr	r2, .L5+4
 402 0054 1A23     		movs	r3, #26
 403 0056 03FB01F3 		mul	r3, r3, r1
 404 005a 1344     		add	r3, r3, r2
 405 005c 1933     		adds	r3, r3, #25
 406 005e 1B78     		ldrb	r3, [r3]
 407 0060 DBB2     		uxtb	r3, r3
 408 0062 FD2B     		cmp	r3, #253
 409 0064 3CD1     		bne	.L2
 410              	.LBB2:
 183:main.c        ****     {
 184:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 411              		.loc 1 184 0 is_stmt 1
 412 0066 0023     		movs	r3, #0
 413 0068 7B60     		str	r3, [r7, #4]
 414 006a 34E0     		b	.L3
 415              	.L4:
 185:main.c        ****         {
 186:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 416              		.loc 1 186 0 discriminator 3
 417 006c 3B4B     		ldr	r3, .L5
 418 006e 1B78     		ldrb	r3, [r3]
 419 0070 DBB2     		uxtb	r3, r3
 420 0072 002B     		cmp	r3, #0
 421 0074 0CBF     		ite	eq
 422 0076 0123     		moveq	r3, #1
 423 0078 0023     		movne	r3, #0
 424 007a DBB2     		uxtb	r3, r3
 425 007c 1846     		mov	r0, r3
 426 007e 7B68     		ldr	r3, [r7, #4]
 427 0080 5B00     		lsls	r3, r3, #1
 428 0082 0133     		adds	r3, r3, #1
 429 0084 3649     		ldr	r1, .L5+4
 430 0086 1A22     		movs	r2, #26
 431 0088 02FB00F2 		mul	r2, r2, r0
 432 008c 0A44     		add	r2, r2, r1
 433 008e 1344     		add	r3, r3, r2
 434 0090 1B78     		ldrb	r3, [r3]
 435 0092 DBB2     		uxtb	r3, r3
 436 0094 9BB2     		uxth	r3, r3
 437 0096 1B02     		lsls	r3, r3, #8
 438 0098 9AB2     		uxth	r2, r3
 439 009a 304B     		ldr	r3, .L5
 440 009c 1B78     		ldrb	r3, [r3]
 441 009e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 12


 442 00a0 002B     		cmp	r3, #0
 443 00a2 0CBF     		ite	eq
 444 00a4 0123     		moveq	r3, #1
 445 00a6 0023     		movne	r3, #0
 446 00a8 DBB2     		uxtb	r3, r3
 447 00aa 1C46     		mov	r4, r3
 448 00ac 7B68     		ldr	r3, [r7, #4]
 449 00ae 0133     		adds	r3, r3, #1
 450 00b0 5B00     		lsls	r3, r3, #1
 451 00b2 2B48     		ldr	r0, .L5+4
 452 00b4 1A21     		movs	r1, #26
 453 00b6 01FB04F1 		mul	r1, r1, r4
 454 00ba 0144     		add	r1, r1, r0
 455 00bc 0B44     		add	r3, r3, r1
 456 00be 1B78     		ldrb	r3, [r3]
 457 00c0 DBB2     		uxtb	r3, r3
 458 00c2 9BB2     		uxth	r3, r3
 459 00c4 1344     		add	r3, r3, r2
 460 00c6 99B2     		uxth	r1, r3
 461 00c8 264A     		ldr	r2, .L5+8
 462 00ca 7B68     		ldr	r3, [r7, #4]
 463 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 184:main.c        ****         {
 464              		.loc 1 184 0 discriminator 3
 465 00d0 7B68     		ldr	r3, [r7, #4]
 466 00d2 0133     		adds	r3, r3, #1
 467 00d4 7B60     		str	r3, [r7, #4]
 468              	.L3:
 184:main.c        ****         {
 469              		.loc 1 184 0 is_stmt 0 discriminator 1
 470 00d6 244B     		ldr	r3, .L5+12
 471 00d8 1B68     		ldr	r3, [r3]
 472 00da 7A68     		ldr	r2, [r7, #4]
 473 00dc 9A42     		cmp	r2, r3
 474 00de C5DB     		blt	.L4
 475              	.L2:
 476              	.LBE2:
 187:main.c        ****         }
 188:main.c        ****     }
 189:main.c        ****     SPIS_1_ClearRxBuffer();
 477              		.loc 1 189 0 is_stmt 1
 478 00e0 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 190:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 479              		.loc 1 190 0
 480 00e4 214B     		ldr	r3, .L5+16
 481 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 482 00e8 1846     		mov	r0, r3
 483 00ea FFF7FEFF 		bl	CyDmaClearPendingDrq
 191:main.c        **** 
 192:main.c        ****     //set up the next DMA transaction
 193:main.c        **** 
 194:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 484              		.loc 1 194 0
 485 00ee 1B4B     		ldr	r3, .L5
 486 00f0 1B78     		ldrb	r3, [r3]
 487 00f2 DBB2     		uxtb	r3, r3
 488 00f4 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 13


 489 00f6 1E4B     		ldr	r3, .L5+20
 490 00f8 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 491 00fa 0223     		movs	r3, #2
 492 00fc FE22     		movs	r2, #254
 493 00fe 1A21     		movs	r1, #26
 494 0100 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 195:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 495              		.loc 1 195 0
 496 0104 154B     		ldr	r3, .L5
 497 0106 1B78     		ldrb	r3, [r3]
 498 0108 DBB2     		uxtb	r3, r3
 499 010a 1A46     		mov	r2, r3
 500 010c 184B     		ldr	r3, .L5+20
 501 010e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 502 0110 124B     		ldr	r3, .L5
 503 0112 1B78     		ldrb	r3, [r3]
 504 0114 DBB2     		uxtb	r3, r3
 505 0116 1A46     		mov	r2, r3
 506 0118 1A23     		movs	r3, #26
 507 011a 03FB02F3 		mul	r3, r3, r2
 508 011e 104A     		ldr	r2, .L5+4
 509 0120 1344     		add	r3, r3, r2
 510 0122 9BB2     		uxth	r3, r3
 511 0124 1A46     		mov	r2, r3
 512 0126 46F25451 		movw	r1, #25940
 513 012a FFF7FEFF 		bl	CyDmaTdSetAddress
 196:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 514              		.loc 1 196 0
 515 012e 0F4B     		ldr	r3, .L5+16
 516 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 517 0132 0A4B     		ldr	r3, .L5
 518 0134 1B78     		ldrb	r3, [r3]
 519 0136 DBB2     		uxtb	r3, r3
 520 0138 1946     		mov	r1, r3
 521 013a 0D4B     		ldr	r3, .L5+20
 522 013c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 523 013e 1946     		mov	r1, r3
 524 0140 1046     		mov	r0, r2
 525 0142 FFF7FEFF 		bl	CyDmaChSetInitialTd
 197:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 526              		.loc 1 197 0
 527 0146 094B     		ldr	r3, .L5+16
 528 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 529 014a 0121     		movs	r1, #1
 530 014c 1846     		mov	r0, r3
 531 014e FFF7FEFF 		bl	CyDmaChEnable
 198:main.c        **** 
 199:main.c        **** }
 532              		.loc 1 199 0
 533 0152 00BF     		nop
 534 0154 0C37     		adds	r7, r7, #12
 535              		.cfi_def_cfa_offset 12
 536 0156 BD46     		mov	sp, r7
 537              		.cfi_def_cfa_register 13
 538              		@ sp needed
 539 0158 90BD     		pop	{r4, r7, pc}
 540              	.L6:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 14


 541 015a 00BF     		.align	2
 542              	.L5:
 543 015c 00000000 		.word	currentPluckBuffer
 544 0160 00000000 		.word	rxBufferPluck
 545 0164 00000000 		.word	strings
 546 0168 00000000 		.word	numStrings
 547 016c 00000000 		.word	rx1Channel
 548 0170 00000000 		.word	rx1TD
 549              		.cfi_endproc
 550              	.LFE64:
 551              		.size	spis_1_ss, .-spis_1_ss
 552              		.global	spiAdjusted
 553              		.bss
 554              		.type	spiAdjusted, %object
 555              		.size	spiAdjusted, 1
 556              	spiAdjusted:
 557 0053 00       		.space	1
 558              		.global	mySpiCounter
 559              		.type	mySpiCounter, %object
 560              		.size	mySpiCounter, 1
 561              	mySpiCounter:
 562 0054 00       		.space	1
 563              		.global	offsetErrorCount
 564 0055 00       		.align	1
 565              		.type	offsetErrorCount, %object
 566              		.size	offsetErrorCount, 2
 567              	offsetErrorCount:
 568 0056 0000     		.space	2
 569              		.global	SPI2errorflag
 570              		.type	SPI2errorflag, %object
 571              		.size	SPI2errorflag, 1
 572              	SPI2errorflag:
 573 0058 00       		.space	1
 574              		.global	bar_index
 575 0059 000000   		.align	2
 576              		.type	bar_index, %object
 577              		.size	bar_index, 4
 578              	bar_index:
 579 005c 00000000 		.space	4
 580              		.comm	knobs,4,4
 581              		.comm	prevKnobs,4,4
 582              		.comm	knobs7bit,4,4
 583              		.comm	prevKnobs7bit,4,4
 584              		.global	SPI2started
 585              		.type	SPI2started, %object
 586              		.size	SPI2started, 1
 587              	SPI2started:
 588 0060 00       		.space	1
 589              		.global	whichMacro
 590              		.type	whichMacro, %object
 591              		.size	whichMacro, 1
 592              	whichMacro:
 593 0061 00       		.space	1
 594              		.section	.text.spis_2_ss,"ax",%progbits
 595              		.align	2
 596              		.global	spis_2_ss
 597              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 15


 598              		.thumb_func
 599              		.type	spis_2_ss, %function
 600              	spis_2_ss:
 601              	.LFB65:
 200:main.c        **** 
 201:main.c        **** 
 202:main.c        **** 
 203:main.c        **** uint8_t spiAdjusted = 0;
 204:main.c        **** uint8_t mySpiCounter = 0;
 205:main.c        **** volatile uint16_t offsetErrorCount = 0;
 206:main.c        **** volatile uint8_t SPI2errorflag = 0;
 207:main.c        **** volatile int bar_index = 0;
 208:main.c        **** uint8_t knobs[4];
 209:main.c        **** uint8_t prevKnobs[4];
 210:main.c        **** 
 211:main.c        **** uint8_t knobs7bit[4];
 212:main.c        **** uint8_t prevKnobs7bit[4];
 213:main.c        **** 
 214:main.c        **** volatile uint8_t SPI2started = 0;
 215:main.c        **** 
 216:main.c        **** uint8_t whichMacro = 0;
 217:main.c        **** 
 218:main.c        **** CY_ISR(spis_2_ss)
 219:main.c        **** {
 602              		.loc 1 219 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606 0000 80B5     		push	{r7, lr}
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 7, -8
 609              		.cfi_offset 14, -4
 610 0002 00AF     		add	r7, sp, #0
 611              		.cfi_def_cfa_register 7
 220:main.c        **** 
 221:main.c        ****     currentBarBuffer = !currentBarBuffer;
 612              		.loc 1 221 0
 613 0004 214B     		ldr	r3, .L8
 614 0006 1B78     		ldrb	r3, [r3]
 615 0008 DBB2     		uxtb	r3, r3
 616 000a 002B     		cmp	r3, #0
 617 000c 0CBF     		ite	eq
 618 000e 0123     		moveq	r3, #1
 619 0010 0023     		movne	r3, #0
 620 0012 DBB2     		uxtb	r3, r3
 621 0014 1A46     		mov	r2, r3
 622 0016 1D4B     		ldr	r3, .L8
 623 0018 1A70     		strb	r2, [r3]
 222:main.c        ****     SPIS_2_ClearRxBuffer();
 624              		.loc 1 222 0
 625 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 223:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 626              		.loc 1 223 0
 627 001e 1C4B     		ldr	r3, .L8+4
 628 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 629 0022 1846     		mov	r0, r3
 630 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 16


 224:main.c        **** 
 225:main.c        ****     //set up the next DMA transaction
 226:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 631              		.loc 1 226 0
 632 0028 184B     		ldr	r3, .L8
 633 002a 1B78     		ldrb	r3, [r3]
 634 002c DBB2     		uxtb	r3, r3
 635 002e 1A46     		mov	r2, r3
 636 0030 184B     		ldr	r3, .L8+8
 637 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 638 0034 0623     		movs	r3, #6
 639 0036 FE22     		movs	r2, #254
 640 0038 0821     		movs	r1, #8
 641 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 227:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 642              		.loc 1 227 0
 643 003e 134B     		ldr	r3, .L8
 644 0040 1B78     		ldrb	r3, [r3]
 645 0042 DBB2     		uxtb	r3, r3
 646 0044 1A46     		mov	r2, r3
 647 0046 134B     		ldr	r3, .L8+8
 648 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 649 004a 104B     		ldr	r3, .L8
 650 004c 1B78     		ldrb	r3, [r3]
 651 004e DBB2     		uxtb	r3, r3
 652 0050 DB00     		lsls	r3, r3, #3
 653 0052 114A     		ldr	r2, .L8+12
 654 0054 1344     		add	r3, r3, r2
 655 0056 9BB2     		uxth	r3, r3
 656 0058 1A46     		mov	r2, r3
 657 005a 46F25751 		movw	r1, #25943
 658 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 228:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 659              		.loc 1 228 0
 660 0062 0B4B     		ldr	r3, .L8+4
 661 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 662 0066 094B     		ldr	r3, .L8
 663 0068 1B78     		ldrb	r3, [r3]
 664 006a DBB2     		uxtb	r3, r3
 665 006c 1946     		mov	r1, r3
 666 006e 094B     		ldr	r3, .L8+8
 667 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 668 0072 1946     		mov	r1, r3
 669 0074 1046     		mov	r0, r2
 670 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 229:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 671              		.loc 1 229 0
 672 007a 054B     		ldr	r3, .L8+4
 673 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 674 007e 0121     		movs	r1, #1
 675 0080 1846     		mov	r0, r3
 676 0082 FFF7FEFF 		bl	CyDmaChEnable
 230:main.c        **** }
 677              		.loc 1 230 0
 678 0086 00BF     		nop
 679 0088 80BD     		pop	{r7, pc}
 680              	.L9:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 17


 681 008a 00BF     		.align	2
 682              	.L8:
 683 008c 00000000 		.word	currentBarBuffer
 684 0090 00000000 		.word	rx2Channel
 685 0094 00000000 		.word	rx2TD
 686 0098 00000000 		.word	rxBufferBar
 687              		.cfi_endproc
 688              	.LFE65:
 689              		.size	spis_2_ss, .-spis_2_ss
 690              		.bss
 691 0062 0000     		.align	2
 692              	eepromArray:
 693 0064 0000     		.space	2
 694              		.global	array
 695 0066 0000     		.align	2
 696              		.type	array, %object
 697              		.size	array, 2
 698              	array:
 699 0068 0000     		.space	2
 700              		.comm	eepromReturnValue,1,1
 701              		.global	Em_EEPROM_em_EepromStorage
 702              		.section	.rodata
 703              		.align	8
 704              		.type	Em_EEPROM_em_EepromStorage, %object
 705              		.size	Em_EEPROM_em_EepromStorage, 1024
 706              	Em_EEPROM_em_EepromStorage:
 707 0000 00000000 		.space	1024
 707      00000000 
 707      00000000 
 707      00000000 
 707      00000000 
 708              		.comm	eeprom_cnt,1,1
 709              		.comm	status,4,4
 710              		.comm	ptr,4,4
 711              		.global	barCount
 712              		.bss
 713 006a 0000     		.align	2
 714              		.type	barCount, %object
 715              		.size	barCount, 4
 716              	barCount:
 717 006c 00000000 		.space	4
 718              		.section	.text.Vbus_function,"ax",%progbits
 719              		.align	2
 720              		.global	Vbus_function
 721              		.thumb
 722              		.thumb_func
 723              		.type	Vbus_function, %function
 724              	Vbus_function:
 725              	.LFB66:
 231:main.c        **** 
 232:main.c        **** 
 233:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 234:main.c        ****                                             
 235:main.c        ****     uint8 array[] ={ 0, 0 };
 236:main.c        ****                                 
 237:main.c        ****     /*Return status for EEPROM and UART*/ 
 238:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 18


 239:main.c        **** 
 240:main.c        **** 
 241:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 242:main.c        **** #if defined (__ICCARM__)
 243:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 244:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 245:main.c        **** #else
 246:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 247:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 248:main.c        **** #endif /* defined (__ICCARM__) */
 249:main.c        **** 
 250:main.c        ****     uint8 eeprom_cnt;
 251:main.c        ****     cystatus status;
 252:main.c        ****     volatile const uint8 * ptr;
 253:main.c        **** volatile int barCount = 0;
 254:main.c        **** 
 255:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 256:main.c        ****     
 257:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 258:main.c        **** 
 259:main.c        **** CY_ISR(Vbus_function)
 260:main.c        **** {
 726              		.loc 1 260 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 00AF     		add	r7, sp, #0
 735              		.cfi_def_cfa_register 7
 261:main.c        ****     //plug or unplug event
 262:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 263:main.c        ****     //otherwise, restart
 264:main.c        ****     my_Vbus_ISR_ClearPending();
 736              		.loc 1 264 0
 737 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 265:main.c        ****     vBusPin_ClearInterrupt();
 738              		.loc 1 265 0
 739 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 266:main.c        ****     restartSystemCheck();
 740              		.loc 1 266 0
 741 000c FFF7FEFF 		bl	restartSystemCheck
 267:main.c        **** 
 268:main.c        **** }
 742              		.loc 1 268 0
 743 0010 00BF     		nop
 744 0012 80BD     		pop	{r7, pc}
 745              		.cfi_endproc
 746              	.LFE66:
 747              		.size	Vbus_function, .-Vbus_function
 748              		.section	.text.restartSystemCheck,"ax",%progbits
 749              		.align	2
 750              		.global	restartSystemCheck
 751              		.thumb
 752              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 19


 753              		.type	restartSystemCheck, %function
 754              	restartSystemCheck:
 755              	.LFB67:
 269:main.c        **** 
 270:main.c        **** void restartSystemCheck()
 271:main.c        **** {
 756              		.loc 1 271 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760 0000 80B5     		push	{r7, lr}
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 272:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 766              		.loc 1 272 0
 767 0004 184B     		ldr	r3, .L15
 768 0006 0222     		movs	r2, #2
 769 0008 1849     		ldr	r1, .L15+4
 770 000a 0020     		movs	r0, #0
 771 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 772 0010 0346     		mov	r3, r0
 773 0012 1A46     		mov	r2, r3
 774 0014 164B     		ldr	r3, .L15+8
 775 0016 1A70     		strb	r2, [r3]
 273:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 274:main.c        ****     if (USB_VBusPresent() == 1)
 776              		.loc 1 274 0
 777 0018 FFF7FEFF 		bl	USB_VBusPresent
 778 001c 0346     		mov	r3, r0
 779 001e 012B     		cmp	r3, #1
 780 0020 20D1     		bne	.L14
 275:main.c        ****     {
 276:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 781              		.loc 1 276 0
 782 0022 124B     		ldr	r3, .L15+4
 783 0024 1B78     		ldrb	r3, [r3]
 784 0026 DBB2     		uxtb	r3, r3
 785 0028 012B     		cmp	r3, #1
 786 002a 0CD1     		bne	.L13
 277:main.c        ****         {
 278:main.c        ****             //a flag says we just restarted
 279:main.c        ****             //write a zero so it knows next time that it's OK to restart
 280:main.c        ****             array[0] = 0;
 787              		.loc 1 280 0
 788 002c 114B     		ldr	r3, .L15+12
 789 002e 0022     		movs	r2, #0
 790 0030 1A70     		strb	r2, [r3]
 281:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 791              		.loc 1 281 0
 792 0032 0D4B     		ldr	r3, .L15
 793 0034 0222     		movs	r2, #2
 794 0036 0F49     		ldr	r1, .L15+12
 795 0038 0020     		movs	r0, #0
 796 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 20


 282:main.c        ****             USB_check_flag = 1;
 797              		.loc 1 282 0
 798 003e 0E4B     		ldr	r3, .L15+16
 799 0040 0122     		movs	r2, #1
 800 0042 1A70     		strb	r2, [r3]
 283:main.c        ****         }
 284:main.c        ****         else
 285:main.c        ****         {
 286:main.c        ****            //otherwise, we need to restart
 287:main.c        ****            array[0] = 1;
 288:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 289:main.c        ****             USB_Stop();
 290:main.c        ****             I2C_1_Stop();
 291:main.c        ****             CySoftwareReset();
 292:main.c        ****         }
 293:main.c        ****     }
 294:main.c        **** }
 801              		.loc 1 294 0
 802 0044 0EE0     		b	.L14
 803              	.L13:
 287:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 804              		.loc 1 287 0
 805 0046 0B4B     		ldr	r3, .L15+12
 806 0048 0122     		movs	r2, #1
 807 004a 1A70     		strb	r2, [r3]
 288:main.c        ****             USB_Stop();
 808              		.loc 1 288 0
 809 004c 064B     		ldr	r3, .L15
 810 004e 0222     		movs	r2, #2
 811 0050 0849     		ldr	r1, .L15+12
 812 0052 0020     		movs	r0, #0
 813 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 289:main.c        ****             I2C_1_Stop();
 814              		.loc 1 289 0
 815 0058 FFF7FEFF 		bl	USB_Stop
 290:main.c        ****             CySoftwareReset();
 816              		.loc 1 290 0
 817 005c FFF7FEFF 		bl	I2C_1_Stop
 291:main.c        ****         }
 818              		.loc 1 291 0
 819 0060 FFF7FEFF 		bl	CySoftwareReset
 820              	.L14:
 821              		.loc 1 294 0
 822 0064 00BF     		nop
 823 0066 80BD     		pop	{r7, pc}
 824              	.L16:
 825              		.align	2
 826              	.L15:
 827 0068 00000000 		.word	Em_EEPROM_context
 828 006c 64000000 		.word	eepromArray
 829 0070 00000000 		.word	eepromReturnValue
 830 0074 00000000 		.word	array
 831 0078 00000000 		.word	USB_check_flag
 832              		.cfi_endproc
 833              	.LFE67:
 834              		.size	restartSystemCheck, .-restartSystemCheck
 835              		.global	__aeabi_fcmpgt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 21


 836              		.global	__aeabi_fcmplt
 837              		.section	.text.LEAF_clip,"ax",%progbits
 838              		.align	2
 839              		.global	LEAF_clip
 840              		.thumb
 841              		.thumb_func
 842              		.type	LEAF_clip, %function
 843              	LEAF_clip:
 844              	.LFB68:
 295:main.c        ****     
 296:main.c        **** #define INV_440 0.0022727272727273f
 297:main.c        **** 
 298:main.c        **** float   LEAF_clip(float min, float val, float max)
 299:main.c        **** {
 845              		.loc 1 299 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 24
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849 0000 80B5     		push	{r7, lr}
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 7, -8
 852              		.cfi_offset 14, -4
 853 0002 86B0     		sub	sp, sp, #24
 854              		.cfi_def_cfa_offset 32
 855 0004 00AF     		add	r7, sp, #0
 856              		.cfi_def_cfa_register 7
 857 0006 F860     		str	r0, [r7, #12]	@ float
 858 0008 B960     		str	r1, [r7, #8]	@ float
 859 000a 7A60     		str	r2, [r7, #4]	@ float
 300:main.c        ****     float tempmin = min;
 860              		.loc 1 300 0
 861 000c FB68     		ldr	r3, [r7, #12]	@ float
 862 000e 7B61     		str	r3, [r7, #20]	@ float
 301:main.c        ****     float tempmax = max;
 863              		.loc 1 301 0
 864 0010 7B68     		ldr	r3, [r7, #4]	@ float
 865 0012 3B61     		str	r3, [r7, #16]	@ float
 302:main.c        ****     if (min > max)
 866              		.loc 1 302 0
 867 0014 7968     		ldr	r1, [r7, #4]	@ float
 868 0016 F868     		ldr	r0, [r7, #12]	@ float
 869 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 870 001c 0346     		mov	r3, r0
 871 001e 002B     		cmp	r3, #0
 872 0020 03D0     		beq	.L18
 303:main.c        ****     {
 304:main.c        ****         tempmin = max;
 873              		.loc 1 304 0
 874 0022 7B68     		ldr	r3, [r7, #4]	@ float
 875 0024 7B61     		str	r3, [r7, #20]	@ float
 305:main.c        ****         tempmax = min;
 876              		.loc 1 305 0
 877 0026 FB68     		ldr	r3, [r7, #12]	@ float
 878 0028 3B61     		str	r3, [r7, #16]	@ float
 879              	.L18:
 306:main.c        ****     }
 307:main.c        ****     if (val < tempmin)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 22


 880              		.loc 1 307 0
 881 002a 7969     		ldr	r1, [r7, #20]	@ float
 882 002c B868     		ldr	r0, [r7, #8]	@ float
 883 002e FFF7FEFF 		bl	__aeabi_fcmplt
 884 0032 0346     		mov	r3, r0
 885 0034 002B     		cmp	r3, #0
 886 0036 01D0     		beq	.L28
 308:main.c        ****     {
 309:main.c        ****         return tempmin;
 887              		.loc 1 309 0
 888 0038 7B69     		ldr	r3, [r7, #20]	@ float
 889 003a 09E0     		b	.L22
 890              	.L28:
 310:main.c        ****     }
 311:main.c        ****     else if (val > tempmax)
 891              		.loc 1 311 0
 892 003c 3969     		ldr	r1, [r7, #16]	@ float
 893 003e B868     		ldr	r0, [r7, #8]	@ float
 894 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 895 0044 0346     		mov	r3, r0
 896 0046 002B     		cmp	r3, #0
 897 0048 01D0     		beq	.L29
 312:main.c        ****     {
 313:main.c        ****         return tempmax;
 898              		.loc 1 313 0
 899 004a 3B69     		ldr	r3, [r7, #16]	@ float
 900 004c 00E0     		b	.L22
 901              	.L29:
 314:main.c        ****     }
 315:main.c        ****     else
 316:main.c        ****     {
 317:main.c        ****         return val;
 902              		.loc 1 317 0
 903 004e BB68     		ldr	r3, [r7, #8]	@ float
 904              	.L22:
 318:main.c        ****     }
 319:main.c        **** }
 905              		.loc 1 319 0
 906 0050 1846     		mov	r0, r3
 907 0052 1837     		adds	r7, r7, #24
 908              		.cfi_def_cfa_offset 8
 909 0054 BD46     		mov	sp, r7
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 0056 80BD     		pop	{r7, pc}
 913              		.cfi_endproc
 914              	.LFE68:
 915              		.size	LEAF_clip, .-LEAF_clip
 916              		.global	__aeabi_fcmple
 917              		.global	__aeabi_fmul
 918              		.section	.text.mtof,"ax",%progbits
 919              		.align	2
 920              		.global	mtof
 921              		.thumb
 922              		.thumb_func
 923              		.type	mtof, %function
 924              	mtof:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 23


 925              	.LFB69:
 320:main.c        **** float mtof(float f)
 321:main.c        **** {
 926              		.loc 1 321 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 8
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930 0000 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
 938 0006 7860     		str	r0, [r7, #4]	@ float
 322:main.c        ****     if (f <= -1500.0f) return(0);
 939              		.loc 1 322 0
 940 0008 1349     		ldr	r1, .L40
 941 000a 7868     		ldr	r0, [r7, #4]	@ float
 942 000c FFF7FEFF 		bl	__aeabi_fcmple
 943 0010 0346     		mov	r3, r0
 944 0012 002B     		cmp	r3, #0
 945 0014 02D0     		beq	.L38
 946              		.loc 1 322 0 is_stmt 0 discriminator 1
 947 0016 4FF00003 		mov	r3, #0
 948 001a 19E0     		b	.L33
 949              	.L38:
 323:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 950              		.loc 1 323 0 is_stmt 1
 951 001c 0F49     		ldr	r1, .L40+4
 952 001e 7868     		ldr	r0, [r7, #4]	@ float
 953 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 954 0024 0346     		mov	r3, r0
 955 0026 002B     		cmp	r3, #0
 956 0028 04D0     		beq	.L39
 957              		.loc 1 323 0 is_stmt 0 discriminator 1
 958 002a 0C48     		ldr	r0, .L40+4
 959 002c FFF7FEFF 		bl	mtof
 960 0030 0346     		mov	r3, r0
 961 0032 0DE0     		b	.L33
 962              	.L39:
 324:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 963              		.loc 1 324 0 is_stmt 1
 964 0034 0A49     		ldr	r1, .L40+8
 965 0036 7868     		ldr	r0, [r7, #4]	@ float
 966 0038 FFF7FEFF 		bl	__aeabi_fmul
 967 003c 0346     		mov	r3, r0
 968 003e 1846     		mov	r0, r3
 969 0040 FFF7FEFF 		bl	expf
 970 0044 0346     		mov	r3, r0
 971 0046 0749     		ldr	r1, .L40+12
 972 0048 1846     		mov	r0, r3
 973 004a FFF7FEFF 		bl	__aeabi_fmul
 974 004e 0346     		mov	r3, r0
 975              	.L33:
 325:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 24


 976              		.loc 1 325 0
 977 0050 1846     		mov	r0, r3
 978 0052 0837     		adds	r7, r7, #8
 979              		.cfi_def_cfa_offset 8
 980 0054 BD46     		mov	sp, r7
 981              		.cfi_def_cfa_register 13
 982              		@ sp needed
 983 0056 80BD     		pop	{r7, pc}
 984              	.L41:
 985              		.align	2
 986              	.L40:
 987 0058 0080BBC4 		.word	-994344960
 988 005c 0060BB44 		.word	1153130496
 989 0060 20986C3D 		.word	1030527008
 990 0064 13D00241 		.word	1090703379
 991              		.cfi_endproc
 992              	.LFE69:
 993              		.size	mtof, .-mtof
 994              		.section	.text.ftom,"ax",%progbits
 995              		.align	2
 996              		.global	ftom
 997              		.thumb
 998              		.thumb_func
 999              		.type	ftom, %function
 1000              	ftom:
 1001              	.LFB70:
 326:main.c        **** 
 327:main.c        **** float ftom(float f)
 328:main.c        **** {
 1002              		.loc 1 328 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 8
 1005              		@ frame_needed = 1, uses_anonymous_args = 0
 1006 0000 80B5     		push	{r7, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 82B0     		sub	sp, sp, #8
 1011              		.cfi_def_cfa_offset 16
 1012 0004 00AF     		add	r7, sp, #0
 1013              		.cfi_def_cfa_register 7
 1014 0006 7860     		str	r0, [r7, #4]	@ float
 329:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 1015              		.loc 1 329 0
 1016 0008 4FF00001 		mov	r1, #0
 1017 000c 7868     		ldr	r0, [r7, #4]	@ float
 1018 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 1019 0012 0346     		mov	r3, r0
 1020 0014 002B     		cmp	r3, #0
 1021 0016 0ED0     		beq	.L48
 1022              		.loc 1 329 0 is_stmt 0 discriminator 1
 1023 0018 0949     		ldr	r1, .L49
 1024 001a 7868     		ldr	r0, [r7, #4]	@ float
 1025 001c FFF7FEFF 		bl	__aeabi_fmul
 1026 0020 0346     		mov	r3, r0
 1027 0022 1846     		mov	r0, r3
 1028 0024 FFF7FEFF 		bl	logf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 25


 1029 0028 0346     		mov	r3, r0
 1030 002a 0649     		ldr	r1, .L49+4
 1031 002c 1846     		mov	r0, r3
 1032 002e FFF7FEFF 		bl	__aeabi_fmul
 1033 0032 0346     		mov	r3, r0
 1034 0034 00E0     		b	.L46
 1035              	.L48:
 1036              		.loc 1 329 0 discriminator 2
 1037 0036 044B     		ldr	r3, .L49+8
 1038              	.L46:
 330:main.c        **** }
 1039              		.loc 1 330 0 is_stmt 1 discriminator 5
 1040 0038 1846     		mov	r0, r3
 1041 003a 0837     		adds	r7, r7, #8
 1042              		.cfi_def_cfa_offset 8
 1043 003c BD46     		mov	sp, r7
 1044              		.cfi_def_cfa_register 13
 1045              		@ sp needed
 1046 003e 80BD     		pop	{r7, pc}
 1047              	.L50:
 1048              		.align	2
 1049              	.L49:
 1050 0040 D27EFA3D 		.word	1039826642
 1051 0044 AC7F8A41 		.word	1099595692
 1052 0048 0080BBC4 		.word	-994344960
 1053              		.cfi_endproc
 1054              	.LFE70:
 1055              		.size	ftom, .-ftom
 1056              		.global	__aeabi_fsub
 1057              		.global	__aeabi_fadd
 1058              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
 1059              		.align	2
 1060              		.global	LEAF_interpolation_linear
 1061              		.thumb
 1062              		.thumb_func
 1063              		.type	LEAF_interpolation_linear, %function
 1064              	LEAF_interpolation_linear:
 1065              	.LFB71:
 331:main.c        **** 
 332:main.c        **** // alpha, [0.0, 1.0]
 333:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 334:main.c        **** {
 1066              		.loc 1 334 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 24
 1069              		@ frame_needed = 1, uses_anonymous_args = 0
 1070 0000 80B5     		push	{r7, lr}
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 7, -8
 1073              		.cfi_offset 14, -4
 1074 0002 86B0     		sub	sp, sp, #24
 1075              		.cfi_def_cfa_offset 32
 1076 0004 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
 1078 0006 F860     		str	r0, [r7, #12]	@ float
 1079 0008 B960     		str	r1, [r7, #8]	@ float
 1080 000a 7A60     		str	r2, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 26


 335:main.c        ****     float omAlpha = 1.0f - alpha;
 1081              		.loc 1 335 0
 1082 000c 7968     		ldr	r1, [r7, #4]	@ float
 1083 000e 4FF07E50 		mov	r0, #1065353216
 1084 0012 FFF7FEFF 		bl	__aeabi_fsub
 1085 0016 0346     		mov	r3, r0
 1086 0018 7B61     		str	r3, [r7, #20]	@ float
 336:main.c        ****     
 337:main.c        ****     // First 1/2 of interpolation
 338:main.c        ****     float out = A * omAlpha;
 1087              		.loc 1 338 0
 1088 001a 7969     		ldr	r1, [r7, #20]	@ float
 1089 001c F868     		ldr	r0, [r7, #12]	@ float
 1090 001e FFF7FEFF 		bl	__aeabi_fmul
 1091 0022 0346     		mov	r3, r0
 1092 0024 3B61     		str	r3, [r7, #16]	@ float
 339:main.c        ****     
 340:main.c        ****     out += B * alpha;
 1093              		.loc 1 340 0
 1094 0026 7968     		ldr	r1, [r7, #4]	@ float
 1095 0028 B868     		ldr	r0, [r7, #8]	@ float
 1096 002a FFF7FEFF 		bl	__aeabi_fmul
 1097 002e 0346     		mov	r3, r0
 1098 0030 1946     		mov	r1, r3
 1099 0032 3869     		ldr	r0, [r7, #16]	@ float
 1100 0034 FFF7FEFF 		bl	__aeabi_fadd
 1101 0038 0346     		mov	r3, r0
 1102 003a 3B61     		str	r3, [r7, #16]	@ float
 341:main.c        ****     
 342:main.c        ****     return out;
 1103              		.loc 1 342 0
 1104 003c 3B69     		ldr	r3, [r7, #16]	@ float
 343:main.c        **** }
 1105              		.loc 1 343 0
 1106 003e 1846     		mov	r0, r3
 1107 0040 1837     		adds	r7, r7, #24
 1108              		.cfi_def_cfa_offset 8
 1109 0042 BD46     		mov	sp, r7
 1110              		.cfi_def_cfa_register 13
 1111              		@ sp needed
 1112 0044 80BD     		pop	{r7, pc}
 1113              		.cfi_endproc
 1114              	.LFE71:
 1115              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1116              		.comm	I2Cbuff1,256,4
 1117              		.comm	I2Cbuff2,16,4
 1118              		.global	send_it
 1119 0046 00BF     		.bss
 1120              		.type	send_it, %object
 1121              		.size	send_it, 1
 1122              	send_it:
 1123 0070 00       		.space	1
 1124              		.global	mux_states
 1125              		.data
 1126 000a 0000     		.align	2
 1127              		.type	mux_states, %object
 1128              		.size	mux_states, 24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 27


 1129              	mux_states:
 1130 000c 05       		.byte	5
 1131 000d 00       		.byte	0
 1132 000e 05       		.byte	5
 1133 000f 01       		.byte	1
 1134 0010 05       		.byte	5
 1135 0011 02       		.byte	2
 1136 0012 05       		.byte	5
 1137 0013 03       		.byte	3
 1138 0014 05       		.byte	5
 1139 0015 04       		.byte	4
 1140 0016 00       		.byte	0
 1141 0017 00       		.byte	0
 1142 0018 01       		.byte	1
 1143 0019 00       		.byte	0
 1144 001a 03       		.byte	3
 1145 001b 00       		.byte	0
 1146 001c 04       		.byte	4
 1147 001d 00       		.byte	0
 1148 001e 02       		.byte	2
 1149 001f 00       		.byte	0
 1150 0020 05       		.byte	5
 1151 0021 05       		.byte	5
 1152 0022 06       		.byte	6
 1153 0023 00       		.byte	0
 1154              		.global	i2c_skipped
 1155              		.bss
 1156 0071 000000   		.align	2
 1157              		.type	i2c_skipped, %object
 1158              		.size	i2c_skipped, 12
 1159              	i2c_skipped:
 1160 0074 00000000 		.space	12
 1160      00000000 
 1160      00000000 
 1161              		.global	pedals_low
 1162              		.data
 1163              		.align	2
 1164              		.type	pedals_low, %object
 1165              		.size	pedals_low, 20
 1166              	pedals_low:
 1167 0024 830A     		.short	2691
 1168 0026 0109     		.short	2305
 1169 0028 9909     		.short	2457
 1170 002a 0E02     		.short	526
 1171 002c 9A0E     		.short	3738
 1172 002e 0309     		.short	2307
 1173 0030 C60B     		.short	3014
 1174 0032 8E08     		.short	2190
 1175 0034 E90A     		.short	2793
 1176 0036 2605     		.short	1318
 1177              		.global	pedals_high
 1178              		.align	2
 1179              		.type	pedals_high, %object
 1180              		.size	pedals_high, 20
 1181              	pedals_high:
 1182 0038 ED0A     		.short	2797
 1183 003a 6509     		.short	2405
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 28


 1184 003c 140A     		.short	2580
 1185 003e 8702     		.short	647
 1186 0040 0E0F     		.short	3854
 1187 0042 9D09     		.short	2461
 1188 0044 450C     		.short	3141
 1189 0046 3109     		.short	2353
 1190 0048 760B     		.short	2934
 1191 004a E005     		.short	1504
 1192              		.global	deadzone
 1193              		.align	1
 1194              		.type	deadzone, %object
 1195              		.size	deadzone, 2
 1196              	deadzone:
 1197 004c 9600     		.short	150
 1198              		.global	volumePedal
 1199              		.align	1
 1200              		.type	volumePedal, %object
 1201              		.size	volumePedal, 2
 1202              	volumePedal:
 1203 004e FF0F     		.short	4095
 1204              		.comm	processed_pedals,20,4
 1205              		.comm	prev_processed_pedals,20,4
 1206              		.comm	pedals8bit,10,4
 1207              		.comm	pedals7bit,10,4
 1208              		.comm	prevPedals7bit,10,4
 1209              		.comm	prev_processed_volumePedal,2,2
 1210              		.comm	processed_volumePedal,2,2
 1211              		.global	fretMeasurements
 1212              		.align	2
 1213              		.type	fretMeasurements, %object
 1214              		.size	fretMeasurements, 64
 1215              	fretMeasurements:
 1216 0050 001E7547 		.word	1198857728
 1217 0054 00A07047 		.word	1198563328
 1218 0058 0052F846 		.word	1190679040
 1219 005c 00000000 		.word	0
 1220 0060 00B01A47 		.word	1192931328
 1221 0064 001C2247 		.word	1193417728
 1222 0068 00507546 		.word	1182093312
 1223 006c 00000000 		.word	0
 1224 0070 0000D746 		.word	1188495360
 1225 0074 00F0EB46 		.word	1189867520
 1226 0078 00280446 		.word	1174677504
 1227 007c 00000000 		.word	0
 1228 0080 00481446 		.word	1175734272
 1229 0084 00805446 		.word	1179942912
 1230 0088 00202745 		.word	1160192000
 1231 008c 00000000 		.word	0
 1232              		.global	currentPresetSelection
 1233              		.bss
 1234              		.align	2
 1235              		.type	currentPresetSelection, %object
 1236              		.size	currentPresetSelection, 4
 1237              	currentPresetSelection:
 1238 0080 00000000 		.space	4
 1239              		.comm	presetNamesArray,896,4
 1240              		.global	presetNumberToLoad
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 29


 1241              		.type	presetNumberToLoad, %object
 1242              		.size	presetNumberToLoad, 1
 1243              	presetNumberToLoad:
 1244 0084 00       		.space	1
 1245              		.global	presetLoadedResponse
 1246              		.data
 1247              		.align	2
 1248              		.type	presetLoadedResponse, %object
 1249              		.size	presetLoadedResponse, 2
 1250              	presetLoadedResponse:
 1251 0090 FF       		.byte	-1
 1252 0091 00       		.byte	0
 1253              		.comm	macroNamesArray,7168,4
 1254              		.global	fretScaling
 1255 0092 0000     		.align	2
 1256              		.type	fretScaling, %object
 1257              		.size	fretScaling, 16
 1258              	fretScaling:
 1259 0094 0000803F 		.word	1065353216
 1260 0098 ABAA2A3F 		.word	1059760811
 1261 009c 0000003F 		.word	1056964608
 1262 00a0 0000803E 		.word	1048576000
 1263              		.comm	pedalRatios,40,4
 1264              		.global	last_mux
 1265              		.type	last_mux, %object
 1266              		.size	last_mux, 1
 1267              	last_mux:
 1268 00a4 01       		.byte	1
 1269              		.global	main_counter
 1270              		.bss
 1271              		.type	main_counter, %object
 1272              		.size	main_counter, 1
 1273              	main_counter:
 1274 0085 00       		.space	1
 1275              		.global	neck
 1276              		.type	neck, %object
 1277              		.size	neck, 1
 1278              	neck:
 1279 0086 00       		.space	1
 1280              		.global	dualSlider
 1281              		.type	dualSlider, %object
 1282              		.size	dualSlider, 1
 1283              	dualSlider:
 1284 0087 00       		.space	1
 1285              		.global	enterUp
 1286              		.data
 1287              		.type	enterUp, %object
 1288              		.size	enterUp, 1
 1289              	enterUp:
 1290 00a5 01       		.byte	1
 1291              		.global	voice
 1292              		.bss
 1293              		.type	voice, %object
 1294              		.size	voice, 1
 1295              	voice:
 1296 0088 00       		.space	1
 1297              		.global	editUp
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 30


 1298              		.data
 1299              		.type	editUp, %object
 1300              		.size	editUp, 1
 1301              	editUp:
 1302 00a6 01       		.byte	1
 1303              		.global	oct1Up
 1304              		.type	oct1Up, %object
 1305              		.size	oct1Up, 1
 1306              	oct1Up:
 1307 00a7 01       		.byte	1
 1308              		.global	oct4Up
 1309              		.type	oct4Up, %object
 1310              		.size	oct4Up, 1
 1311              	oct4Up:
 1312 00a8 01       		.byte	1
 1313              		.comm	encoderVal,16,4
 1314              		.global	encoderNum
 1315              		.bss
 1316 0089 000000   		.align	2
 1317              		.type	encoderNum, %object
 1318              		.size	encoderNum, 4
 1319              	encoderNum:
 1320 008c 00000000 		.space	4
 1321              		.global	button1Up
 1322              		.type	button1Up, %object
 1323              		.size	button1Up, 1
 1324              	button1Up:
 1325 0090 00       		.space	1
 1326              		.global	button2Up
 1327              		.type	button2Up, %object
 1328              		.size	button2Up, 1
 1329              	button2Up:
 1330 0091 00       		.space	1
 1331              		.global	button3Up
 1332              		.type	button3Up, %object
 1333              		.size	button3Up, 1
 1334              	button3Up:
 1335 0092 00       		.space	1
 1336              		.global	button4Up
 1337              		.type	button4Up, %object
 1338              		.size	button4Up, 1
 1339              	button4Up:
 1340 0093 00       		.space	1
 1341              		.global	patchNum
 1342              		.type	patchNum, %object
 1343              		.size	patchNum, 1
 1344              	patchNum:
 1345 0094 00       		.space	1
 1346              		.comm	copedent,3696,4
 1347              		.comm	copedentNamesArray,98,4
 1348              		.comm	prevStringPitchBend,48,4
 1349              		.comm	pedals,480,4
 1350              		.global	pedal_cc_assignments
 1351              		.data
 1352 00a9 000000   		.align	2
 1353              		.type	pedal_cc_assignments, %object
 1354              		.size	pedal_cc_assignments, 10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 31


 1355              	pedal_cc_assignments:
 1356 00ac 00       		.byte	0
 1357 00ad 01       		.byte	1
 1358 00ae 02       		.byte	2
 1359 00af 03       		.byte	3
 1360 00b0 04       		.byte	4
 1361 00b1 08       		.byte	8
 1362 00b2 09       		.byte	9
 1363 00b3 07       		.byte	7
 1364 00b4 06       		.byte	6
 1365 00b5 05       		.byte	5
 1366              		.comm	openStringFrequencies,48,4
 1367              		.comm	stringMappedPositions,48,4
 1368              		.comm	invStringMappedPositions,48,4
 1369              		.comm	stringFrequencies,48,4
 1370              		.comm	stringOctave,48,4
 1371              		.comm	stringPitch,48,4
 1372              		.comm	stringMIDI,48,4
 1373              		.comm	openStringMIDI_Int,48,4
 1374              		.global	OLEDcount
 1375              		.bss
 1376 0095 000000   		.align	2
 1377              		.type	OLEDcount, %object
 1378              		.size	OLEDcount, 4
 1379              	OLEDcount:
 1380 0098 00000000 		.space	4
 1381              		.global	mainOLEDWaitingToSend
 1382              		.align	2
 1383              		.type	mainOLEDWaitingToSend, %object
 1384              		.size	mainOLEDWaitingToSend, 4
 1385              	mainOLEDWaitingToSend:
 1386 009c 00000000 		.space	4
 1387              		.global	macroOLEDWaitingToSend
 1388              		.align	2
 1389              		.type	macroOLEDWaitingToSend, %object
 1390              		.size	macroOLEDWaitingToSend, 4
 1391              	macroOLEDWaitingToSend:
 1392 00a0 00000000 		.space	4
 1393              		.comm	presetAlreadyDisplayed,256,4
 1394              		.global	pedals_float
 1395              		.align	2
 1396              		.type	pedals_float, %object
 1397              		.size	pedals_float, 40
 1398              	pedals_float:
 1399 00a4 00000000 		.space	40
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1400              		.global	__aeabi_fdiv
 1401              		.section	.text.map,"ax",%progbits
 1402              		.align	2
 1403              		.global	map
 1404              		.thumb
 1405              		.thumb_func
 1406              		.type	map, %function
 1407              	map:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 32


 1408              	.LFB72:
 344:main.c        **** 
 345:main.c        **** 
 346:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 347:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 348:main.c        **** void USB_service(void);
 349:main.c        **** 
 350:main.c        **** volatile uint8_t I2Cbuff1[256];
 351:main.c        **** volatile uint8_t I2Cbuff2[16];
 352:main.c        **** volatile uint8_t send_it = 0;
 353:main.c        **** 
 354:main.c        **** 
 355:main.c        **** //first mux, 0x70 is first element of array. 
 356:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 357:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 358:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 359:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 360:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,0,0,0,0,0}; //so that pedals and levers can be marked as s
 361:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 362:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 363:main.c        **** uint16_t deadzone = 150;
 364:main.c        **** uint16_t volumePedal = 4095;
 365:main.c        **** uint16_t processed_pedals[10];
 366:main.c        **** uint16_t prev_processed_pedals[10];
 367:main.c        **** uint8_t pedals8bit[10];
 368:main.c        **** uint8_t pedals7bit[10];
 369:main.c        **** uint8_t prevPedals7bit[10];
 370:main.c        **** int16_t prev_processed_volumePedal;
 371:main.c        **** int16_t processed_volumePedal;
 372:main.c        **** 
 373:main.c        **** 
 374:main.c        **** float fretMeasurements[4][4] ={
 375:main.c        **** 
 376:main.c        **** 		{62750.0f, 61600.0f, 31785.0f, 0.0f },
 377:main.c        **** 
 378:main.c        **** 		{39600.0f, 41500.0f, 15700.0f, 0.0f},
 379:main.c        **** 
 380:main.c        **** 		{27520.0f, 30200.0f, 8458.0f, 0.0f},
 381:main.c        **** 
 382:main.c        **** 		{9490.0f, 13600.0f, 2674.0f, 0.0f}
 383:main.c        **** 
 384:main.c        **** 	};
 385:main.c        **** #define NUM_MACROS 8
 386:main.c        **** #define MAX_NUM_PRESETS 64
 387:main.c        **** int currentPresetSelection = 0;
 388:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 389:main.c        **** uint8_t presetNumberToLoad = 0;
 390:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 391:main.c        **** 
 392:main.c        **** 
 393:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS][NAME_LENGTH_IN_BYTES];
 394:main.c        **** 
 395:main.c        **** 
 396:main.c        **** 
 397:main.c        **** float fretScaling[4] = {1.0f, 0.6666666666666f, 0.5f, 0.25f};
 398:main.c        **** 
 399:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 33


 400:main.c        **** #define MAX_ENCODERS 16
 401:main.c        **** 
 402:main.c        **** float pedalRatios[10];
 403:main.c        **** uint8_t last_mux = 1;
 404:main.c        **** volatile uint8_t main_counter = 0;
 405:main.c        **** uint8_t neck = 0;
 406:main.c        **** uint8_t dualSlider = 0;
 407:main.c        **** uint8_t enterUp = 1;
 408:main.c        **** uint8_t voice = 0;
 409:main.c        **** uint8_t editUp = 1;
 410:main.c        **** uint8_t oct1Up = 1;
 411:main.c        **** uint8_t oct4Up = 1;
 412:main.c        **** 
 413:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 414:main.c        **** int encoderNum = 0;
 415:main.c        **** uint8_t button1Up = 0;
 416:main.c        **** uint8_t button2Up = 0;
 417:main.c        **** uint8_t button3Up = 0;
 418:main.c        **** uint8_t button4Up = 0;
 419:main.c        **** uint8_t patchNum = 0;
 420:main.c        **** #define NUM_STRINGS 12
 421:main.c        **** #define NUM_PEDALS 10
 422:main.c        **** 
 423:main.c        **** 
 424:main.c        **** #define MAX_NUM_COPEDENTS 7
 425:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 426:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 427:main.c        **** 
 428:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 429:main.c        **** 
 430:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 431:main.c        **** 
 432:main.c        **** uint8_t pedal_cc_assignments[NUM_PEDALS] = {0, 1, 2, 3, 4, 8, 9, 7, 6, 5};
 433:main.c        **** float openStringFrequencies[NUM_STRINGS];
 434:main.c        **** float stringMappedPositions[NUM_STRINGS];
 435:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 436:main.c        **** float stringFrequencies[NUM_STRINGS];
 437:main.c        **** float stringOctave[NUM_STRINGS];
 438:main.c        **** float stringPitch[NUM_STRINGS];
 439:main.c        **** float stringMIDI[NUM_STRINGS];
 440:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 441:main.c        **** int OLEDcount = 0;
 442:main.c        **** 
 443:main.c        **** int mainOLEDWaitingToSend = 0;
 444:main.c        **** int macroOLEDWaitingToSend = 0;
 445:main.c        **** 
 446:main.c        **** int presetAlreadyDisplayed[MAX_NUM_PRESETS];
 447:main.c        **** 
 448:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 449:main.c        **** 
 450:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 451:main.c        **** {
 1409              		.loc 1 451 0
 1410              		.cfi_startproc
 1411              		@ args = 4, pretend = 0, frame = 16
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413 0000 B0B5     		push	{r4, r5, r7, lr}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 34


 1414              		.cfi_def_cfa_offset 16
 1415              		.cfi_offset 4, -16
 1416              		.cfi_offset 5, -12
 1417              		.cfi_offset 7, -8
 1418              		.cfi_offset 14, -4
 1419 0002 84B0     		sub	sp, sp, #16
 1420              		.cfi_def_cfa_offset 32
 1421 0004 00AF     		add	r7, sp, #0
 1422              		.cfi_def_cfa_register 7
 1423 0006 F860     		str	r0, [r7, #12]	@ float
 1424 0008 B960     		str	r1, [r7, #8]	@ float
 1425 000a 7A60     		str	r2, [r7, #4]	@ float
 1426 000c 3B60     		str	r3, [r7]	@ float
 452:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1427              		.loc 1 452 0
 1428 000e 3968     		ldr	r1, [r7]	@ float
 1429 0010 386A     		ldr	r0, [r7, #32]	@ float
 1430 0012 FFF7FEFF 		bl	__aeabi_fsub
 1431 0016 0346     		mov	r3, r0
 1432 0018 1C46     		mov	r4, r3
 1433 001a B968     		ldr	r1, [r7, #8]	@ float
 1434 001c F868     		ldr	r0, [r7, #12]	@ float
 1435 001e FFF7FEFF 		bl	__aeabi_fsub
 1436 0022 0346     		mov	r3, r0
 1437 0024 1D46     		mov	r5, r3
 1438 0026 B968     		ldr	r1, [r7, #8]	@ float
 1439 0028 7868     		ldr	r0, [r7, #4]	@ float
 1440 002a FFF7FEFF 		bl	__aeabi_fsub
 1441 002e 0346     		mov	r3, r0
 1442 0030 1946     		mov	r1, r3
 1443 0032 2846     		mov	r0, r5
 1444 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1445 0038 0346     		mov	r3, r0
 1446 003a 1946     		mov	r1, r3
 1447 003c 2046     		mov	r0, r4
 1448 003e FFF7FEFF 		bl	__aeabi_fmul
 1449 0042 0346     		mov	r3, r0
 1450 0044 3968     		ldr	r1, [r7]	@ float
 1451 0046 1846     		mov	r0, r3
 1452 0048 FFF7FEFF 		bl	__aeabi_fadd
 1453 004c 0346     		mov	r3, r0
 453:main.c        **** }
 1454              		.loc 1 453 0
 1455 004e 1846     		mov	r0, r3
 1456 0050 1037     		adds	r7, r7, #16
 1457              		.cfi_def_cfa_offset 16
 1458 0052 BD46     		mov	sp, r7
 1459              		.cfi_def_cfa_register 13
 1460              		@ sp needed
 1461 0054 B0BD     		pop	{r4, r5, r7, pc}
 1462              		.cfi_endproc
 1463              	.LFE72:
 1464              		.size	map, .-map
 1465              		.global	currentNeck
 1466 0056 00BF     		.bss
 1467              		.align	2
 1468              		.type	currentNeck, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 35


 1469              		.size	currentNeck, 4
 1470              	currentNeck:
 1471 00cc 00000000 		.space	4
 1472              		.global	editMode
 1473              		.align	2
 1474              		.type	editMode, %object
 1475              		.size	editMode, 4
 1476              	editMode:
 1477 00d0 00000000 		.space	4
 1478              		.global	calibrationMode
 1479              		.align	2
 1480              		.type	calibrationMode, %object
 1481              		.size	calibrationMode, 4
 1482              	calibrationMode:
 1483 00d4 00000000 		.space	4
 1484              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1485              		.align	2
 1486              		.global	burnInitialPedalZeroPositions
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	burnInitialPedalZeroPositions, %function
 1490              	burnInitialPedalZeroPositions:
 1491              	.LFB73:
 454:main.c        **** void displayCurrentPresetNameAndCopedent();
 455:main.c        **** 
 456:main.c        **** int currentNeck = 0;
 457:main.c        **** 
 458:main.c        **** int editMode = 0;
 459:main.c        **** int calibrationMode = 0;
 460:main.c        **** 
 461:main.c        **** void burnInitialPedalZeroPositions()
 462:main.c        **** {
 1492              		.loc 1 462 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 0
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496              		@ link register save eliminated.
 1497 0000 80B4     		push	{r7}
 1498              		.cfi_def_cfa_offset 4
 1499              		.cfi_offset 7, -4
 1500 0002 00AF     		add	r7, sp, #0
 1501              		.cfi_def_cfa_register 7
 463:main.c        ****     
 464:main.c        **** }
 1502              		.loc 1 464 0
 1503 0004 00BF     		nop
 1504 0006 BD46     		mov	sp, r7
 1505              		.cfi_def_cfa_register 13
 1506              		@ sp needed
 1507 0008 80BC     		pop	{r7}
 1508              		.cfi_restore 7
 1509              		.cfi_def_cfa_offset 0
 1510 000a 7047     		bx	lr
 1511              		.cfi_endproc
 1512              	.LFE73:
 1513              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1514              		.global	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 36


 1515              		.global	__aeabi_i2f
 1516              		.global	__aeabi_f2uiz
 1517              		.section	.text.calculatePedalRatios,"ax",%progbits
 1518              		.align	2
 1519              		.global	calculatePedalRatios
 1520              		.thumb
 1521              		.thumb_func
 1522              		.type	calculatePedalRatios, %function
 1523              	calculatePedalRatios:
 1524              	.LFB74:
 465:main.c        **** 
 466:main.c        **** 
 467:main.c        **** void calculatePedalRatios()
 468:main.c        **** {
 1525              		.loc 1 468 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 8
 1528              		@ frame_needed = 1, uses_anonymous_args = 0
 1529 0000 90B5     		push	{r4, r7, lr}
 1530              		.cfi_def_cfa_offset 12
 1531              		.cfi_offset 4, -12
 1532              		.cfi_offset 7, -8
 1533              		.cfi_offset 14, -4
 1534 0002 83B0     		sub	sp, sp, #12
 1535              		.cfi_def_cfa_offset 24
 1536 0004 00AF     		add	r7, sp, #0
 1537              		.cfi_def_cfa_register 7
 1538              	.LBB3:
 469:main.c        **** 
 470:main.c        ****     //add deadzones on edges of pedal sensing
 471:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1539              		.loc 1 471 0
 1540 0006 0023     		movs	r3, #0
 1541 0008 7B60     		str	r3, [r7, #4]
 1542 000a 6EE0     		b	.L57
 1543              	.L58:
 1544              	.LBB4:
 472:main.c        ****     {
 473:main.c        **** 
 474:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1545              		.loc 1 474 0 discriminator 3
 1546 000c 3A4A     		ldr	r2, .L59
 1547 000e 7B68     		ldr	r3, [r7, #4]
 1548 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1549 0014 1846     		mov	r0, r3
 1550 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1551 001a 0446     		mov	r4, r0
 1552 001c 374A     		ldr	r2, .L59+4
 1553 001e 7B68     		ldr	r3, [r7, #4]
 1554 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1555 0024 1846     		mov	r0, r3
 1556 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1557 002a 0346     		mov	r3, r0
 1558 002c 1946     		mov	r1, r3
 1559 002e 2046     		mov	r0, r4
 1560 0030 FFF7FEFF 		bl	__aeabi_fsub
 1561 0034 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 37


 1562 0036 3B60     		str	r3, [r7]	@ float
 475:main.c        ****         pedals_low[i] = pedals_low[i] + (0.1f * pedalDiff);
 1563              		.loc 1 475 0 discriminator 3
 1564 0038 304A     		ldr	r2, .L59+4
 1565 003a 7B68     		ldr	r3, [r7, #4]
 1566 003c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1567 0040 1846     		mov	r0, r3
 1568 0042 FFF7FEFF 		bl	__aeabi_i2f
 1569 0046 0446     		mov	r4, r0
 1570 0048 2D49     		ldr	r1, .L59+8
 1571 004a 3868     		ldr	r0, [r7]	@ float
 1572 004c FFF7FEFF 		bl	__aeabi_fmul
 1573 0050 0346     		mov	r3, r0
 1574 0052 1946     		mov	r1, r3
 1575 0054 2046     		mov	r0, r4
 1576 0056 FFF7FEFF 		bl	__aeabi_fadd
 1577 005a 0346     		mov	r3, r0
 1578 005c 1846     		mov	r0, r3
 1579 005e FFF7FEFF 		bl	__aeabi_f2uiz
 1580 0062 0346     		mov	r3, r0
 1581 0064 99B2     		uxth	r1, r3
 1582 0066 254A     		ldr	r2, .L59+4
 1583 0068 7B68     		ldr	r3, [r7, #4]
 1584 006a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 476:main.c        ****         pedals_high[i] = pedals_high[i] - (0.1f * pedalDiff);
 1585              		.loc 1 476 0 discriminator 3
 1586 006e 224A     		ldr	r2, .L59
 1587 0070 7B68     		ldr	r3, [r7, #4]
 1588 0072 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1589 0076 1846     		mov	r0, r3
 1590 0078 FFF7FEFF 		bl	__aeabi_i2f
 1591 007c 0446     		mov	r4, r0
 1592 007e 2049     		ldr	r1, .L59+8
 1593 0080 3868     		ldr	r0, [r7]	@ float
 1594 0082 FFF7FEFF 		bl	__aeabi_fmul
 1595 0086 0346     		mov	r3, r0
 1596 0088 1946     		mov	r1, r3
 1597 008a 2046     		mov	r0, r4
 1598 008c FFF7FEFF 		bl	__aeabi_fsub
 1599 0090 0346     		mov	r3, r0
 1600 0092 1846     		mov	r0, r3
 1601 0094 FFF7FEFF 		bl	__aeabi_f2uiz
 1602 0098 0346     		mov	r3, r0
 1603 009a 99B2     		uxth	r1, r3
 1604 009c 164A     		ldr	r2, .L59
 1605 009e 7B68     		ldr	r3, [r7, #4]
 1606 00a0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 477:main.c        ****         pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1607              		.loc 1 477 0 discriminator 3
 1608 00a4 144A     		ldr	r2, .L59
 1609 00a6 7B68     		ldr	r3, [r7, #4]
 1610 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1611 00ac 1846     		mov	r0, r3
 1612 00ae FFF7FEFF 		bl	__aeabi_ui2f
 1613 00b2 0446     		mov	r4, r0
 1614 00b4 114A     		ldr	r2, .L59+4
 1615 00b6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 38


 1616 00b8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1617 00bc 1846     		mov	r0, r3
 1618 00be FFF7FEFF 		bl	__aeabi_ui2f
 1619 00c2 0346     		mov	r3, r0
 1620 00c4 1946     		mov	r1, r3
 1621 00c6 2046     		mov	r0, r4
 1622 00c8 FFF7FEFF 		bl	__aeabi_fsub
 1623 00cc 0346     		mov	r3, r0
 1624 00ce 3B60     		str	r3, [r7]	@ float
 478:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1625              		.loc 1 478 0 discriminator 3
 1626 00d0 3968     		ldr	r1, [r7]	@ float
 1627 00d2 0C48     		ldr	r0, .L59+12
 1628 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1629 00d8 0346     		mov	r3, r0
 1630 00da 1946     		mov	r1, r3
 1631 00dc 0A4A     		ldr	r2, .L59+16
 1632 00de 7B68     		ldr	r3, [r7, #4]
 1633 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1634              	.LBE4:
 471:main.c        ****     {
 1635              		.loc 1 471 0 discriminator 3
 1636 00e4 7B68     		ldr	r3, [r7, #4]
 1637 00e6 0133     		adds	r3, r3, #1
 1638 00e8 7B60     		str	r3, [r7, #4]
 1639              	.L57:
 471:main.c        ****     {
 1640              		.loc 1 471 0 is_stmt 0 discriminator 1
 1641 00ea 7B68     		ldr	r3, [r7, #4]
 1642 00ec 092B     		cmp	r3, #9
 1643 00ee 8DDD     		ble	.L58
 1644              	.LBE3:
 479:main.c        ****     }
 480:main.c        **** }
 1645              		.loc 1 480 0 is_stmt 1
 1646 00f0 00BF     		nop
 1647 00f2 0C37     		adds	r7, r7, #12
 1648              		.cfi_def_cfa_offset 12
 1649 00f4 BD46     		mov	sp, r7
 1650              		.cfi_def_cfa_register 13
 1651              		@ sp needed
 1652 00f6 90BD     		pop	{r4, r7, pc}
 1653              	.L60:
 1654              		.align	2
 1655              	.L59:
 1656 00f8 00000000 		.word	pedals_high
 1657 00fc 00000000 		.word	pedals_low
 1658 0100 CDCCCC3D 		.word	1036831949
 1659 0104 00F07F45 		.word	1166012416
 1660 0108 00000000 		.word	pedalRatios
 1661              		.cfi_endproc
 1662              	.LFE74:
 1663              		.size	calculatePedalRatios, .-calculatePedalRatios
 1664              		.section	.rodata
 1665              		.align	2
 1666              	.LC0:
 1667 0400 2000     		.ascii	" \000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 39


 1668              		.global	__aeabi_f2iz
 1669              		.global	__aeabi_fcmpge
 1670 0402 0000     		.align	2
 1671              	.LC1:
 1672 0404 43414C49 		.ascii	"CALIBRATION\000"
 1672      42524154 
 1672      494F4E00 
 1673              		.align	2
 1674              	.LC2:
 1675 0410 4D4F5645 		.ascii	"MOVE PEDALS\000"
 1675      20504544 
 1675      414C5300 
 1676              		.align	2
 1677              	.LC3:
 1678 041c 414E4420 		.ascii	"AND LEVERS\000"
 1678      4C455645 
 1678      525300
 1679 0427 00       		.align	2
 1680              	.LC4:
 1681 0428 5448454E 		.ascii	"THEN EXIT\000"
 1681      20455849 
 1681      5400
 1682              		.global	__aeabi_fcmpeq
 1683              		.section	.text.main,"ax",%progbits
 1684              		.align	2
 1685              		.global	main
 1686              		.thumb
 1687              		.thumb_func
 1688              		.type	main, %function
 1689              	main:
 1690              	.LFB75:
 481:main.c        **** int main(void)
 482:main.c        **** {
 1691              		.loc 1 482 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 160
 1694              		@ frame_needed = 1, uses_anonymous_args = 0
 1695 0000 90B5     		push	{r4, r7, lr}
 1696              		.cfi_def_cfa_offset 12
 1697              		.cfi_offset 4, -12
 1698              		.cfi_offset 7, -8
 1699              		.cfi_offset 14, -4
 1700 0002 ABB0     		sub	sp, sp, #172
 1701              		.cfi_def_cfa_offset 184
 1702 0004 02AF     		add	r7, sp, #8
 1703              		.cfi_def_cfa 7, 176
 483:main.c        ****     
 484:main.c        **** 	CYGlobalIntEnable; 
 1704              		.loc 1 484 0
 1705              		.syntax unified
 1706              	@ 484 "main.c" 1
 1707 0006 62B6     		CPSIE   i
 1708              	@ 0 "" 2
 485:main.c        ****     EEPROM_Start();
 1709              		.loc 1 485 0
 1710              		.thumb
 1711              		.syntax unified
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 40


 1712 0008 FFF7FEFF 		bl	EEPROM_Start
 486:main.c        ****     
 487:main.c        ****         eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 1713              		.loc 1 487 0
 1714 000c B14B     		ldr	r3, .L217
 1715 000e 1846     		mov	r0, r3
 1716 0010 FFF7FEFF 		bl	Em_EEPROM_Init
 1717 0014 0346     		mov	r3, r0
 1718 0016 1A46     		mov	r2, r3
 1719 0018 AF4B     		ldr	r3, .L217+4
 1720 001a 1A70     		strb	r2, [r3]
 488:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 489:main.c        ****     {
 490:main.c        ****        // HandleError();
 491:main.c        ****     }
 492:main.c        ****     uint8_t myArrayCounter = 0;
 1721              		.loc 1 492 0
 1722 001c 0023     		movs	r3, #0
 1723 001e 87F83B30 		strb	r3, [r7, #59]
 493:main.c        ****   
 494:main.c        ****     I2C_1_Start();  
 1724              		.loc 1 494 0
 1725 0022 FFF7FEFF 		bl	I2C_1_Start
 495:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 1726              		.loc 1 495 0
 1727 0026 0120     		movs	r0, #1
 1728 0028 FFF7FEFF 		bl	USB_SetPowerStatus
 496:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 1729              		.loc 1 496 0
 1730 002c AB48     		ldr	r0, .L217+8
 1731 002e FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 497:main.c        ****     
 498:main.c        **** 
 499:main.c        **** 
 500:main.c        ****     
 501:main.c        ****     CyDelay(2000);
 1732              		.loc 1 501 0
 1733 0032 4FF4FA60 		mov	r0, #2000
 1734 0036 FFF7FEFF 		bl	CyDelay
 502:main.c        ****     //read from eeprom which copedents are loaded on which necks
 503:main.c        ****     necks[0] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1735              		.loc 1 503 0
 1736 003a 0020     		movs	r0, #0
 1737 003c FFF7FEFF 		bl	EEPROM_ReadByte
 1738 0040 0346     		mov	r3, r0
 1739 0042 1A46     		mov	r2, r3
 1740 0044 A64B     		ldr	r3, .L217+12
 1741 0046 1A70     		strb	r2, [r3]
 504:main.c        ****     necks[1] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET + 1);
 1742              		.loc 1 504 0
 1743 0048 0120     		movs	r0, #1
 1744 004a FFF7FEFF 		bl	EEPROM_ReadByte
 1745 004e 0346     		mov	r3, r0
 1746 0050 1A46     		mov	r2, r3
 1747 0052 A34B     		ldr	r3, .L217+12
 1748 0054 5A70     		strb	r2, [r3, #1]
 1749              	.LBB5:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 41


 505:main.c        ****     
 506:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 1750              		.loc 1 506 0
 1751 0056 0023     		movs	r3, #0
 1752 0058 C7F89C30 		str	r3, [r7, #156]
 1753 005c BBE0     		b	.L62
 1754              	.L69:
 1755              	.LBB6:
 507:main.c        ****     {
 508:main.c        ****         
 509:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
 1756              		.loc 1 509 0
 1757 005e 0023     		movs	r3, #0
 1758 0060 C7F89830 		str	r3, [r7, #152]
 1759 0064 29E0     		b	.L63
 1760              	.L64:
 510:main.c        ****         {
 511:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 1761              		.loc 1 511 0 discriminator 3
 1762 0066 D7F89C30 		ldr	r3, [r7, #156]
 1763 006a 9BB2     		uxth	r3, r3
 1764 006c 1A46     		mov	r2, r3	@ movhi
 1765 006e 1201     		lsls	r2, r2, #4
 1766 0070 1A44     		add	r2, r2, r3
 1767 0072 9200     		lsls	r2, r2, #2
 1768 0074 1A44     		add	r2, r2, r3
 1769 0076 5200     		lsls	r2, r2, #1
 1770 0078 1344     		add	r3, r3, r2
 1771 007a 5B00     		lsls	r3, r3, #1
 1772 007c 9AB2     		uxth	r2, r3
 1773 007e D7F89830 		ldr	r3, [r7, #152]
 1774 0082 9BB2     		uxth	r3, r3
 1775 0084 1344     		add	r3, r3, r2
 1776 0086 9BB2     		uxth	r3, r3
 1777 0088 0233     		adds	r3, r3, #2
 1778 008a 9BB2     		uxth	r3, r3
 1779 008c 1846     		mov	r0, r3
 1780 008e FFF7FEFF 		bl	EEPROM_ReadByte
 1781 0092 0346     		mov	r3, r0
 1782 0094 1846     		mov	r0, r3
 1783 0096 9349     		ldr	r1, .L217+16
 1784 0098 D7F89C20 		ldr	r2, [r7, #156]
 1785 009c 1346     		mov	r3, r2
 1786 009e DB00     		lsls	r3, r3, #3
 1787 00a0 9B1A     		subs	r3, r3, r2
 1788 00a2 5B00     		lsls	r3, r3, #1
 1789 00a4 CA18     		adds	r2, r1, r3
 1790 00a6 D7F89830 		ldr	r3, [r7, #152]
 1791 00aa 1344     		add	r3, r3, r2
 1792 00ac 0246     		mov	r2, r0
 1793 00ae 1A70     		strb	r2, [r3]
 509:main.c        ****         {
 1794              		.loc 1 509 0 discriminator 3
 1795 00b0 D7F89830 		ldr	r3, [r7, #152]
 1796 00b4 0133     		adds	r3, r3, #1
 1797 00b6 C7F89830 		str	r3, [r7, #152]
 1798              	.L63:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 42


 509:main.c        ****         {
 1799              		.loc 1 509 0 is_stmt 0 discriminator 1
 1800 00ba D7F89830 		ldr	r3, [r7, #152]
 1801 00be 0D2B     		cmp	r3, #13
 1802 00c0 D1DD     		ble	.L64
 1803              	.LBE6:
 1804              	.LBB7:
 512:main.c        ****         }
 513:main.c        ****         for (int i = 0; i < 11; i++)
 1805              		.loc 1 513 0 is_stmt 1
 1806 00c2 0023     		movs	r3, #0
 1807 00c4 C7F89430 		str	r3, [r7, #148]
 1808 00c8 7BE0     		b	.L65
 1809              	.L68:
 1810              	.LBB8:
 514:main.c        ****     	{
 515:main.c        ****     		int pedalStartLoc = (i*24);
 1811              		.loc 1 515 0
 1812 00ca D7F89420 		ldr	r2, [r7, #148]
 1813 00ce 1346     		mov	r3, r2
 1814 00d0 5B00     		lsls	r3, r3, #1
 1815 00d2 1344     		add	r3, r3, r2
 1816 00d4 DB00     		lsls	r3, r3, #3
 1817 00d6 7B63     		str	r3, [r7, #52]
 1818              	.LBB9:
 516:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 1819              		.loc 1 516 0
 1820 00d8 0023     		movs	r3, #0
 1821 00da C7F89030 		str	r3, [r7, #144]
 1822 00de 67E0     		b	.L66
 1823              	.L67:
 1824              	.LBB10:
 517:main.c        ****     		{
 518:main.c        ****                 
 519:main.c        ****                 int stringStartLoc = (j*2);
 1825              		.loc 1 519 0 discriminator 3
 1826 00e0 D7F89030 		ldr	r3, [r7, #144]
 1827 00e4 5B00     		lsls	r3, r3, #1
 1828 00e6 3B63     		str	r3, [r7, #48]
 520:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 1829              		.loc 1 520 0 discriminator 3
 1830 00e8 3B6B     		ldr	r3, [r7, #48]
 1831 00ea 9AB2     		uxth	r2, r3
 1832 00ec 7B6B     		ldr	r3, [r7, #52]
 1833 00ee 9BB2     		uxth	r3, r3
 1834 00f0 1344     		add	r3, r3, r2
 1835 00f2 9AB2     		uxth	r2, r3
 1836 00f4 D7F89C30 		ldr	r3, [r7, #156]
 1837 00f8 9BB2     		uxth	r3, r3
 1838 00fa 1946     		mov	r1, r3	@ movhi
 1839 00fc 0901     		lsls	r1, r1, #4
 1840 00fe 1944     		add	r1, r1, r3
 1841 0100 8900     		lsls	r1, r1, #2
 1842 0102 1944     		add	r1, r1, r3
 1843 0104 4900     		lsls	r1, r1, #1
 1844 0106 0B44     		add	r3, r3, r1
 1845 0108 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 43


 1846 010a 9BB2     		uxth	r3, r3
 1847 010c 1344     		add	r3, r3, r2
 1848 010e 9BB2     		uxth	r3, r3
 1849 0110 1033     		adds	r3, r3, #16
 1850 0112 9BB2     		uxth	r3, r3
 1851 0114 1846     		mov	r0, r3
 1852 0116 FFF7FEFF 		bl	EEPROM_ReadByte
 1853 011a 0346     		mov	r3, r0
 1854 011c FB85     		strh	r3, [r7, #46]	@ movhi
 521:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 1855              		.loc 1 521 0 discriminator 3
 1856 011e 3B6B     		ldr	r3, [r7, #48]
 1857 0120 9AB2     		uxth	r2, r3
 1858 0122 7B6B     		ldr	r3, [r7, #52]
 1859 0124 9BB2     		uxth	r3, r3
 1860 0126 1344     		add	r3, r3, r2
 1861 0128 9AB2     		uxth	r2, r3
 1862 012a D7F89C30 		ldr	r3, [r7, #156]
 1863 012e 9BB2     		uxth	r3, r3
 1864 0130 1946     		mov	r1, r3	@ movhi
 1865 0132 0901     		lsls	r1, r1, #4
 1866 0134 1944     		add	r1, r1, r3
 1867 0136 8900     		lsls	r1, r1, #2
 1868 0138 1944     		add	r1, r1, r3
 1869 013a 4900     		lsls	r1, r1, #1
 1870 013c 0B44     		add	r3, r3, r1
 1871 013e 5B00     		lsls	r3, r3, #1
 1872 0140 9BB2     		uxth	r3, r3
 1873 0142 1344     		add	r3, r3, r2
 1874 0144 9BB2     		uxth	r3, r3
 1875 0146 1133     		adds	r3, r3, #17
 1876 0148 9BB2     		uxth	r3, r3
 1877 014a 1846     		mov	r0, r3
 1878 014c FFF7FEFF 		bl	EEPROM_ReadByte
 1879 0150 0346     		mov	r3, r0
 1880 0152 BB85     		strh	r3, [r7, #44]	@ movhi
 522:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 1881              		.loc 1 522 0 discriminator 3
 1882 0154 FB8D     		ldrh	r3, [r7, #46]
 1883 0156 1A02     		lsls	r2, r3, #8
 1884 0158 BB8D     		ldrh	r3, [r7, #44]
 1885 015a 1344     		add	r3, r3, r2
 1886 015c 1846     		mov	r0, r3
 1887 015e FFF7FEFF 		bl	__aeabi_i2f
 1888 0162 0346     		mov	r3, r0
 1889 0164 4FF06E51 		mov	r1, #998244352
 1890 0168 1846     		mov	r0, r3
 1891 016a FFF7FEFF 		bl	__aeabi_fmul
 1892 016e 0346     		mov	r3, r0
 1893 0170 4FF08641 		mov	r1, #1124073472
 1894 0174 1846     		mov	r0, r3
 1895 0176 FFF7FEFF 		bl	__aeabi_fsub
 1896 017a 0346     		mov	r3, r0
 1897 017c 1C46     		mov	r4, r3
 1898 017e 5A48     		ldr	r0, .L217+20
 1899 0180 D7F89430 		ldr	r3, [r7, #148]
 1900 0184 D7F89C10 		ldr	r1, [r7, #156]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 44


 1901 0188 1A46     		mov	r2, r3
 1902 018a 5200     		lsls	r2, r2, #1
 1903 018c 1A44     		add	r2, r2, r3
 1904 018e 9300     		lsls	r3, r2, #2
 1905 0190 1A46     		mov	r2, r3
 1906 0192 0B46     		mov	r3, r1
 1907 0194 5B01     		lsls	r3, r3, #5
 1908 0196 0B44     		add	r3, r3, r1
 1909 0198 9B00     		lsls	r3, r3, #2
 1910 019a 1A44     		add	r2, r2, r3
 1911 019c D7F89030 		ldr	r3, [r7, #144]
 1912 01a0 1344     		add	r3, r3, r2
 1913 01a2 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 1914              	.LBE10:
 516:main.c        ****     		{
 1915              		.loc 1 516 0 discriminator 3
 1916 01a6 D7F89030 		ldr	r3, [r7, #144]
 1917 01aa 0133     		adds	r3, r3, #1
 1918 01ac C7F89030 		str	r3, [r7, #144]
 1919              	.L66:
 516:main.c        ****     		{
 1920              		.loc 1 516 0 is_stmt 0 discriminator 1
 1921 01b0 D7F89030 		ldr	r3, [r7, #144]
 1922 01b4 0B2B     		cmp	r3, #11
 1923 01b6 93DD     		ble	.L67
 1924              	.LBE9:
 1925              	.LBE8:
 513:main.c        ****     	{
 1926              		.loc 1 513 0 is_stmt 1 discriminator 2
 1927 01b8 D7F89430 		ldr	r3, [r7, #148]
 1928 01bc 0133     		adds	r3, r3, #1
 1929 01be C7F89430 		str	r3, [r7, #148]
 1930              	.L65:
 513:main.c        ****     	{
 1931              		.loc 1 513 0 is_stmt 0 discriminator 1
 1932 01c2 D7F89430 		ldr	r3, [r7, #148]
 1933 01c6 0A2B     		cmp	r3, #10
 1934 01c8 7FF77FAF 		ble	.L68
 1935              	.LBE7:
 506:main.c        ****     {
 1936              		.loc 1 506 0 is_stmt 1 discriminator 2
 1937 01cc D7F89C30 		ldr	r3, [r7, #156]
 1938 01d0 0133     		adds	r3, r3, #1
 1939 01d2 C7F89C30 		str	r3, [r7, #156]
 1940              	.L62:
 506:main.c        ****     {
 1941              		.loc 1 506 0 is_stmt 0 discriminator 1
 1942 01d6 D7F89C30 		ldr	r3, [r7, #156]
 1943 01da 062B     		cmp	r3, #6
 1944 01dc 7FF73FAF 		ble	.L69
 1945              	.LBE5:
 1946              	.LBB11:
 523:main.c        ****             }
 524:main.c        ****     	}
 525:main.c        ****     }
 526:main.c        **** 
 527:main.c        ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 45


 528:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1947              		.loc 1 528 0 is_stmt 1
 1948 01e0 0023     		movs	r3, #0
 1949 01e2 C7F88C30 		str	r3, [r7, #140]
 1950 01e6 49E0     		b	.L70
 1951              	.L71:
 529:main.c        ****     {
 530:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_ReadByt
 1952              		.loc 1 530 0 discriminator 3
 1953 01e8 D7F88C30 		ldr	r3, [r7, #140]
 1954 01ec 03F2E713 		addw	r3, r3, #487
 1955 01f0 9BB2     		uxth	r3, r3
 1956 01f2 9B00     		lsls	r3, r3, #2
 1957 01f4 9BB2     		uxth	r3, r3
 1958 01f6 1846     		mov	r0, r3
 1959 01f8 FFF7FEFF 		bl	EEPROM_ReadByte
 1960 01fc 0346     		mov	r3, r0
 1961 01fe 9BB2     		uxth	r3, r3
 1962 0200 1B02     		lsls	r3, r3, #8
 1963 0202 9CB2     		uxth	r4, r3
 1964 0204 D7F88C30 		ldr	r3, [r7, #140]
 1965 0208 9BB2     		uxth	r3, r3
 1966 020a 9B00     		lsls	r3, r3, #2
 1967 020c 9BB2     		uxth	r3, r3
 1968 020e 03F29D73 		addw	r3, r3, #1949
 1969 0212 9BB2     		uxth	r3, r3
 1970 0214 1846     		mov	r0, r3
 1971 0216 FFF7FEFF 		bl	EEPROM_ReadByte
 1972 021a 0346     		mov	r3, r0
 1973 021c 9BB2     		uxth	r3, r3
 1974 021e 2344     		add	r3, r3, r4
 1975 0220 99B2     		uxth	r1, r3
 1976 0222 324A     		ldr	r2, .L217+24
 1977 0224 D7F88C30 		ldr	r3, [r7, #140]
 1978 0228 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 531:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (EEPROM_
 1979              		.loc 1 531 0 discriminator 3
 1980 022c D7F88C30 		ldr	r3, [r7, #140]
 1981 0230 9BB2     		uxth	r3, r3
 1982 0232 9B00     		lsls	r3, r3, #2
 1983 0234 9BB2     		uxth	r3, r3
 1984 0236 03F29E73 		addw	r3, r3, #1950
 1985 023a 9BB2     		uxth	r3, r3
 1986 023c 1846     		mov	r0, r3
 1987 023e FFF7FEFF 		bl	EEPROM_ReadByte
 1988 0242 0346     		mov	r3, r0
 1989 0244 9BB2     		uxth	r3, r3
 1990 0246 1B02     		lsls	r3, r3, #8
 1991 0248 9CB2     		uxth	r4, r3
 1992 024a D7F88C30 		ldr	r3, [r7, #140]
 1993 024e 9BB2     		uxth	r3, r3
 1994 0250 9B00     		lsls	r3, r3, #2
 1995 0252 9BB2     		uxth	r3, r3
 1996 0254 03F29F73 		addw	r3, r3, #1951
 1997 0258 9BB2     		uxth	r3, r3
 1998 025a 1846     		mov	r0, r3
 1999 025c FFF7FEFF 		bl	EEPROM_ReadByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 46


 2000 0260 0346     		mov	r3, r0
 2001 0262 9BB2     		uxth	r3, r3
 2002 0264 2344     		add	r3, r3, r4
 2003 0266 99B2     		uxth	r1, r3
 2004 0268 214A     		ldr	r2, .L217+28
 2005 026a D7F88C30 		ldr	r3, [r7, #140]
 2006 026e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 528:main.c        ****     {
 2007              		.loc 1 528 0 discriminator 3
 2008 0272 D7F88C30 		ldr	r3, [r7, #140]
 2009 0276 0133     		adds	r3, r3, #1
 2010 0278 C7F88C30 		str	r3, [r7, #140]
 2011              	.L70:
 528:main.c        ****     {
 2012              		.loc 1 528 0 is_stmt 0 discriminator 1
 2013 027c D7F88C30 		ldr	r3, [r7, #140]
 2014 0280 092B     		cmp	r3, #9
 2015 0282 B1DD     		ble	.L71
 2016              	.LBE11:
 532:main.c        ****     }
 533:main.c        ****     calculatePedalRatios();
 2017              		.loc 1 533 0 is_stmt 1
 2018 0284 FFF7FEFF 		bl	calculatePedalRatios
 2019              	.LBB12:
 534:main.c        ****                 
 535:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 536:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 2020              		.loc 1 536 0
 2021 0288 0023     		movs	r3, #0
 2022 028a C7F88830 		str	r3, [r7, #136]
 2023 028e 61E0     		b	.L72
 2024              	.L79:
 2025              	.LBB13:
 537:main.c        ****     {
 538:main.c        ****         for (int j = 0; j < NAME_LENGTH_IN_BYTES; j++)
 2026              		.loc 1 538 0
 2027 0290 0023     		movs	r3, #0
 2028 0292 C7F88430 		str	r3, [r7, #132]
 2029 0296 11E0     		b	.L73
 2030              	.L74:
 539:main.c        ****         {
 540:main.c        ****             presetNamesArray[i][j] = 255;
 2031              		.loc 1 540 0 discriminator 3
 2032 0298 1649     		ldr	r1, .L217+32
 2033 029a D7F88820 		ldr	r2, [r7, #136]
 2034 029e 1346     		mov	r3, r2
 2035 02a0 DB00     		lsls	r3, r3, #3
 2036 02a2 9B1A     		subs	r3, r3, r2
 2037 02a4 5B00     		lsls	r3, r3, #1
 2038 02a6 CA18     		adds	r2, r1, r3
 2039 02a8 D7F88430 		ldr	r3, [r7, #132]
 2040 02ac 1344     		add	r3, r3, r2
 2041 02ae FF22     		movs	r2, #255
 2042 02b0 1A70     		strb	r2, [r3]
 538:main.c        ****         {
 2043              		.loc 1 538 0 discriminator 3
 2044 02b2 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 47


 2045 02b6 0133     		adds	r3, r3, #1
 2046 02b8 C7F88430 		str	r3, [r7, #132]
 2047              	.L73:
 538:main.c        ****         {
 2048              		.loc 1 538 0 is_stmt 0 discriminator 1
 2049 02bc D7F88430 		ldr	r3, [r7, #132]
 2050 02c0 0D2B     		cmp	r3, #13
 2051 02c2 E9DD     		ble	.L74
 2052              	.LBE13:
 2053              	.LBB14:
 541:main.c        **** 
 542:main.c        ****         }
 543:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 2054              		.loc 1 543 0 is_stmt 1
 2055 02c4 0023     		movs	r3, #0
 2056 02c6 C7F88030 		str	r3, [r7, #128]
 2057 02ca 34E0     		b	.L75
 2058              	.L78:
 2059              	.LBB15:
 544:main.c        ****         {
 545:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 2060              		.loc 1 545 0
 2061 02cc 0023     		movs	r3, #0
 2062 02ce FB67     		str	r3, [r7, #124]
 2063 02d0 29E0     		b	.L76
 2064              	.L218:
 2065 02d2 00BF     		.align	2
 2066              	.L217:
 2067 02d4 00000000 		.word	Em_EEPROM_em_EepromStorage
 2068 02d8 00000000 		.word	eepromReturnValue
 2069 02dc 00000000 		.word	Vbus_function
 2070 02e0 00000000 		.word	necks
 2071 02e4 00000000 		.word	copedentNamesArray
 2072 02e8 00000000 		.word	copedent
 2073 02ec 00000000 		.word	pedals_low
 2074 02f0 00000000 		.word	pedals_high
 2075 02f4 00000000 		.word	presetNamesArray
 2076              	.L77:
 546:main.c        ****             {
 547:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2077              		.loc 1 547 0 discriminator 3
 2078 02f8 4E48     		ldr	r0, .L219
 2079 02fa D7F88030 		ldr	r3, [r7, #128]
 2080 02fe D7F88810 		ldr	r1, [r7, #136]
 2081 0302 1A46     		mov	r2, r3
 2082 0304 D200     		lsls	r2, r2, #3
 2083 0306 D21A     		subs	r2, r2, r3
 2084 0308 5300     		lsls	r3, r2, #1
 2085 030a 1A46     		mov	r2, r3
 2086 030c 0B46     		mov	r3, r1
 2087 030e DB00     		lsls	r3, r3, #3
 2088 0310 5B1A     		subs	r3, r3, r1
 2089 0312 1B01     		lsls	r3, r3, #4
 2090 0314 1344     		add	r3, r3, r2
 2091 0316 C218     		adds	r2, r0, r3
 2092 0318 FB6F     		ldr	r3, [r7, #124]
 2093 031a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 48


 2094 031c FF22     		movs	r2, #255
 2095 031e 1A70     		strb	r2, [r3]
 545:main.c        ****             {
 2096              		.loc 1 545 0 discriminator 3
 2097 0320 FB6F     		ldr	r3, [r7, #124]
 2098 0322 0133     		adds	r3, r3, #1
 2099 0324 FB67     		str	r3, [r7, #124]
 2100              	.L76:
 545:main.c        ****             {
 2101              		.loc 1 545 0 is_stmt 0 discriminator 1
 2102 0326 FB6F     		ldr	r3, [r7, #124]
 2103 0328 0D2B     		cmp	r3, #13
 2104 032a E5DD     		ble	.L77
 2105              	.LBE15:
 543:main.c        ****         {
 2106              		.loc 1 543 0 is_stmt 1 discriminator 2
 2107 032c D7F88030 		ldr	r3, [r7, #128]
 2108 0330 0133     		adds	r3, r3, #1
 2109 0332 C7F88030 		str	r3, [r7, #128]
 2110              	.L75:
 543:main.c        ****         {
 2111              		.loc 1 543 0 is_stmt 0 discriminator 1
 2112 0336 D7F88030 		ldr	r3, [r7, #128]
 2113 033a 072B     		cmp	r3, #7
 2114 033c C6DD     		ble	.L78
 2115              	.LBE14:
 548:main.c        ****             }
 549:main.c        ****         }
 550:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2116              		.loc 1 550 0 is_stmt 1 discriminator 2
 2117 033e 3E4A     		ldr	r2, .L219+4
 2118 0340 D7F88830 		ldr	r3, [r7, #136]
 2119 0344 0021     		movs	r1, #0
 2120 0346 42F82310 		str	r1, [r2, r3, lsl #2]
 536:main.c        ****     {
 2121              		.loc 1 536 0 discriminator 2
 2122 034a D7F88830 		ldr	r3, [r7, #136]
 2123 034e 0133     		adds	r3, r3, #1
 2124 0350 C7F88830 		str	r3, [r7, #136]
 2125              	.L72:
 536:main.c        ****     {
 2126              		.loc 1 536 0 is_stmt 0 discriminator 1
 2127 0354 D7F88830 		ldr	r3, [r7, #136]
 2128 0358 3F2B     		cmp	r3, #63
 2129 035a 99DD     		ble	.L79
 2130              	.LBE12:
 551:main.c        ****     }
 552:main.c        ****     
 553:main.c        ****     QuadDec_1_Start();
 2131              		.loc 1 553 0 is_stmt 1
 2132 035c FFF7FEFF 		bl	QuadDec_1_Start
 554:main.c        ****     LED_amber1_Write(0);
 2133              		.loc 1 554 0
 2134 0360 0020     		movs	r0, #0
 2135 0362 FFF7FEFF 		bl	LED_amber1_Write
 555:main.c        ****     LED_amber2_Write(1);
 2136              		.loc 1 555 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 49


 2137 0366 0120     		movs	r0, #1
 2138 0368 FFF7FEFF 		bl	LED_amber2_Write
 556:main.c        ****     LED_amber3_Write(0);
 2139              		.loc 1 556 0
 2140 036c 0020     		movs	r0, #0
 2141 036e FFF7FEFF 		bl	LED_amber3_Write
 557:main.c        ****     LED_amber4_Write(0);
 2142              		.loc 1 557 0
 2143 0372 0020     		movs	r0, #0
 2144 0374 FFF7FEFF 		bl	LED_amber4_Write
 558:main.c        **** 
 559:main.c        **** 
 560:main.c        **** 
 561:main.c        **** 
 562:main.c        **** 
 563:main.c        ****     
 564:main.c        ****     LED_red1_Write(0);
 2145              		.loc 1 564 0
 2146 0378 0020     		movs	r0, #0
 2147 037a FFF7FEFF 		bl	LED_red1_Write
 565:main.c        ****     LED_green2_Write(1);
 2148              		.loc 1 565 0
 2149 037e 0120     		movs	r0, #1
 2150 0380 FFF7FEFF 		bl	LED_green2_Write
 566:main.c        **** 
 567:main.c        ****     
 568:main.c        ****     ADC_SAR_Seq_1_Start();
 2151              		.loc 1 568 0
 2152 0384 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 569:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2153              		.loc 1 569 0
 2154 0388 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 570:main.c        **** 
 571:main.c        ****             
 572:main.c        ****     currentCopedent = necks[currentNeck];
 2155              		.loc 1 572 0
 2156 038c 2B4B     		ldr	r3, .L219+8
 2157 038e 1B68     		ldr	r3, [r3]
 2158 0390 2B4A     		ldr	r2, .L219+12
 2159 0392 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2160 0394 2B4B     		ldr	r3, .L219+16
 2161 0396 1A70     		strb	r2, [r3]
 573:main.c        ****     CyDelay(10);
 2162              		.loc 1 573 0
 2163 0398 0A20     		movs	r0, #10
 2164 039a FFF7FEFF 		bl	CyDelay
 574:main.c        ****     
 575:main.c        ****     //set up for the OLED screen's first write
 576:main.c        ****     I2Cbuff1[0] = 1<<6;
 2165              		.loc 1 576 0
 2166 039e 2A4B     		ldr	r3, .L219+20
 2167 03a0 4022     		movs	r2, #64
 2168 03a2 1A70     		strb	r2, [r3]
 577:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2169              		.loc 1 577 0
 2170 03a4 0022     		movs	r2, #0
 2171 03a6 0121     		movs	r1, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 50


 2172 03a8 7020     		movs	r0, #112
 2173 03aa FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2174 03ae 0346     		mov	r3, r0
 2175 03b0 1A46     		mov	r2, r3
 2176 03b2 264B     		ldr	r3, .L219+24
 2177 03b4 1A60     		str	r2, [r3]
 578:main.c        ****     myGFX_init(128, 64);
 2178              		.loc 1 578 0
 2179 03b6 4021     		movs	r1, #64
 2180 03b8 8020     		movs	r0, #128
 2181 03ba FFF7FEFF 		bl	myGFX_init
 579:main.c        ****     myGFX_setFont(0);
 2182              		.loc 1 579 0
 2183 03be 0020     		movs	r0, #0
 2184 03c0 FFF7FEFF 		bl	myGFX_setFont
 580:main.c        ****     OLED_init(128, 64);
 2185              		.loc 1 580 0
 2186 03c4 4021     		movs	r1, #64
 2187 03c6 8020     		movs	r0, #128
 2188 03c8 FFF7FEFF 		bl	OLED_init
 581:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2189              		.loc 1 581 0
 2190 03cc 1D4B     		ldr	r3, .L219+16
 2191 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2192 03d0 1846     		mov	r0, r3
 2193 03d2 0323     		movs	r3, #3
 2194 03d4 0022     		movs	r2, #0
 2195 03d6 0221     		movs	r1, #2
 2196 03d8 FFF7FEFF 		bl	OLEDwriteInt
 582:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2197              		.loc 1 582 0
 2198 03dc FFF7FEFF 		bl	OLEDgetCursor
 2199 03e0 0246     		mov	r2, r0
 2200 03e2 0323     		movs	r3, #3
 2201 03e4 0121     		movs	r1, #1
 2202 03e6 1A48     		ldr	r0, .L219+28
 2203 03e8 FFF7FEFF 		bl	OLEDwriteString
 583:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH, 
 2204              		.loc 1 583 0
 2205 03ec 154B     		ldr	r3, .L219+16
 2206 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2207 03f0 1A46     		mov	r2, r3
 2208 03f2 1346     		mov	r3, r2
 2209 03f4 DB00     		lsls	r3, r3, #3
 2210 03f6 9B1A     		subs	r3, r3, r2
 2211 03f8 5B00     		lsls	r3, r3, #1
 2212 03fa 164A     		ldr	r2, .L219+32
 2213 03fc 9C18     		adds	r4, r3, r2
 2214 03fe FFF7FEFF 		bl	OLEDgetCursor
 2215 0402 0246     		mov	r2, r0
 2216 0404 0323     		movs	r3, #3
 2217 0406 0821     		movs	r1, #8
 2218 0408 2046     		mov	r0, r4
 2219 040a FFF7FEFF 		bl	OLEDwriteString
 584:main.c        ****     OLED_draw(128, 64);
 2220              		.loc 1 584 0
 2221 040e 4021     		movs	r1, #64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 51


 2222 0410 8020     		movs	r0, #128
 2223 0412 FFF7FEFF 		bl	OLED_draw
 585:main.c        ****     
 586:main.c        ****     
 587:main.c        ****     I2Cbuff1[0] = 1<<2;
 2224              		.loc 1 587 0
 2225 0416 0C4B     		ldr	r3, .L219+20
 2226 0418 0422     		movs	r2, #4
 2227 041a 1A70     		strb	r2, [r3]
 588:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2228              		.loc 1 588 0
 2229 041c 0022     		movs	r2, #0
 2230 041e 0121     		movs	r1, #1
 2231 0420 7020     		movs	r0, #112
 2232 0422 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2233 0426 0346     		mov	r3, r0
 2234 0428 1A46     		mov	r2, r3
 2235 042a 084B     		ldr	r3, .L219+24
 2236 042c 1A60     		str	r2, [r3]
 2237              	.LBB16:
 589:main.c        **** 
 590:main.c        ****     for (int w = 0; w < 8; w++)
 2238              		.loc 1 590 0
 2239 042e 0023     		movs	r3, #0
 2240 0430 BB67     		str	r3, [r7, #120]
 2241 0432 27E0     		b	.L80
 2242              	.L220:
 2243              		.align	2
 2244              	.L219:
 2245 0434 00000000 		.word	macroNamesArray
 2246 0438 00000000 		.word	presetAlreadyDisplayed
 2247 043c 00000000 		.word	currentNeck
 2248 0440 00000000 		.word	necks
 2249 0444 00000000 		.word	currentCopedent
 2250 0448 00000000 		.word	I2Cbuff1
 2251 044c 00000000 		.word	status
 2252 0450 00040000 		.word	.LC0
 2253 0454 00000000 		.word	copedentNamesArray
 2254              	.L81:
 591:main.c        ****     {
 592:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 2255              		.loc 1 592 0 discriminator 3
 2256 0458 BB6F     		ldr	r3, [r7, #120]
 2257 045a DBB2     		uxtb	r3, r3
 2258 045c 0833     		adds	r3, r3, #8
 2259 045e DAB2     		uxtb	r2, r3
 2260 0460 924B     		ldr	r3, .L221
 2261 0462 1A70     		strb	r2, [r3]
 593:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2262              		.loc 1 593 0 discriminator 3
 2263 0464 0022     		movs	r2, #0
 2264 0466 0121     		movs	r1, #1
 2265 0468 7220     		movs	r0, #114
 2266 046a FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2267 046e 0346     		mov	r3, r0
 2268 0470 1A46     		mov	r2, r3
 2269 0472 8F4B     		ldr	r3, .L221+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 52


 2270 0474 1A60     		str	r2, [r3]
 594:main.c        ****         OLED_init(128, 32);
 2271              		.loc 1 594 0 discriminator 3
 2272 0476 2021     		movs	r1, #32
 2273 0478 8020     		movs	r0, #128
 2274 047a FFF7FEFF 		bl	OLED_init
 590:main.c        ****     {
 2275              		.loc 1 590 0 discriminator 3
 2276 047e BB6F     		ldr	r3, [r7, #120]
 2277 0480 0133     		adds	r3, r3, #1
 2278 0482 BB67     		str	r3, [r7, #120]
 2279              	.L80:
 590:main.c        ****     {
 2280              		.loc 1 590 0 is_stmt 0 discriminator 1
 2281 0484 BB6F     		ldr	r3, [r7, #120]
 2282 0486 072B     		cmp	r3, #7
 2283 0488 E6DD     		ble	.L81
 2284              	.LBE16:
 595:main.c        ****         //OLEDwriteInt(w , 1, 0,FirstLine);
 596:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 597:main.c        ****         //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OL
 598:main.c        ****        // OLED_draw(128, 32);
 599:main.c        ****     }
 600:main.c        **** 
 601:main.c        ****     //initialize the macro knob adc to scan all knobs
 602:main.c        ****     I2Cbuff1[0] = 1<<2;
 2285              		.loc 1 602 0 is_stmt 1
 2286 048a 884B     		ldr	r3, .L221
 2287 048c 0422     		movs	r2, #4
 2288 048e 1A70     		strb	r2, [r3]
 603:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2289              		.loc 1 603 0
 2290 0490 0022     		movs	r2, #0
 2291 0492 0121     		movs	r1, #1
 2292 0494 7020     		movs	r0, #112
 2293 0496 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2294 049a 0346     		mov	r3, r0
 2295 049c 1A46     		mov	r2, r3
 2296 049e 844B     		ldr	r3, .L221+4
 2297 04a0 1A60     		str	r2, [r3]
 604:main.c        ****     main_counter = 9;
 2298              		.loc 1 604 0
 2299 04a2 844B     		ldr	r3, .L221+8
 2300 04a4 0922     		movs	r2, #9
 2301 04a6 1A70     		strb	r2, [r3]
 605:main.c        **** 
 606:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 2302              		.loc 1 606 0
 2303 04a8 804B     		ldr	r3, .L221
 2304 04aa 0F22     		movs	r2, #15
 2305 04ac 1A70     		strb	r2, [r3]
 607:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 2306              		.loc 1 607 0
 2307 04ae 0022     		movs	r2, #0
 2308 04b0 0121     		movs	r1, #1
 2309 04b2 3520     		movs	r0, #53
 2310 04b4 FFF7FEFF 		bl	I2C_MasterWriteBlocking
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 53


 2311 04b8 0346     		mov	r3, r0
 2312 04ba 1A46     		mov	r2, r3
 2313 04bc 7C4B     		ldr	r3, .L221+4
 2314 04be 1A60     		str	r2, [r3]
 608:main.c        ****     
 609:main.c        **** #if 0
 610:main.c        ****     while(1)
 611:main.c        ****     {
 612:main.c        ****         for (int i=  0; i < 4; i++)
 613:main.c        ****         {
 614:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 615:main.c        ****             if (knobs[i] != prevKnobs[i])
 616:main.c        ****             {
 617:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 618:main.c        ****             }
 619:main.c        ****             prevKnobs[i] = knobs[i];
 620:main.c        ****         }
 621:main.c        ****         
 622:main.c        **** 
 623:main.c        ****         I2Cbuff1[0] = 1<<0;
 624:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 625:main.c        **** 
 626:main.c        ****         //CyDelayUs(100);
 627:main.c        ****         I2Cbuff1[0] = 0x0E;
 628:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 629:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 630:main.c        ****        // CyDelayUs(100);
 631:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 632:main.c        ****         angle[0] +=  I2Cbuff2[1];
 633:main.c        ****         
 634:main.c        ****     }
 635:main.c        ****     #endif
 636:main.c        ****     //OLEDclear();
 637:main.c        ****     /*
 638:main.c        ****     while(1)
 639:main.c        ****     {
 640:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 641:main.c        ****         OLED_draw();
 642:main.c        ****         CyDelay(1);
 643:main.c        ****         
 644:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 645:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 646:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 647:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
 648:main.c        ****         for (int i=  0; i < 4; i++)
 649:main.c        ****         {
 650:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 651:main.c        ****         }
 652:main.c        **** 
 653:main.c        ****     }
 654:main.c        ****     */
 655:main.c        **** #if 0
 656:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 657:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 658:main.c        **** 
 659:main.c        **** 
 660:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 54


 661:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 662:main.c        **** 
 663:main.c        ****     //address 0x48
 664:main.c        ****     I2Cbuff1[0] = 0x1;
 665:main.c        ****     I2Cbuff1[1] = 0b11000000;
 666:main.c        ****     I2Cbuff1[2] = 0b10000011;
 667:main.c        **** 
 668:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 669:main.c        ****     #endif
 670:main.c        **** 
 671:main.c        ****     SPIS_1_Start();  
 2315              		.loc 1 671 0
 2316 04c0 FFF7FEFF 		bl	SPIS_1_Start
 672:main.c        ****     SPIM_1_Start();  
 2317              		.loc 1 672 0
 2318 04c4 FFF7FEFF 		bl	SPIM_1_Start
 673:main.c        ****     SPIS_2_Start(); 
 2319              		.loc 1 673 0
 2320 04c8 FFF7FEFF 		bl	SPIS_2_Start
 674:main.c        ****     DmaTxConfiguration();
 2321              		.loc 1 674 0
 2322 04cc FFF7FEFF 		bl	DmaTxConfiguration
 675:main.c        ****     DmaRxConfiguration();
 2323              		.loc 1 675 0
 2324 04d0 FFF7FEFF 		bl	DmaRxConfiguration
 676:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 2325              		.loc 1 676 0
 2326 04d4 7848     		ldr	r0, .L221+12
 2327 04d6 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 677:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2328              		.loc 1 677 0
 2329 04da 7848     		ldr	r0, .L221+16
 2330 04dc FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 678:main.c        ****     
 679:main.c        ****     myArray[30] = 254;
 2331              		.loc 1 679 0
 2332 04e0 774B     		ldr	r3, .L221+20
 2333 04e2 FE22     		movs	r2, #254
 2334 04e4 9A77     		strb	r2, [r3, #30]
 680:main.c        ****     myArray[31] = 253;
 2335              		.loc 1 680 0
 2336 04e6 764B     		ldr	r3, .L221+20
 2337 04e8 FD22     		movs	r2, #253
 2338 04ea DA77     		strb	r2, [r3, #31]
 681:main.c        **** 
 682:main.c        ****     main_counter = 0;
 2339              		.loc 1 682 0
 2340 04ec 714B     		ldr	r3, .L221+8
 2341 04ee 0022     		movs	r2, #0
 2342 04f0 1A70     		strb	r2, [r3]
 2343              	.L208:
 683:main.c        **** 
 684:main.c        **** 	for(;;)
 685:main.c        ****     {
 686:main.c        ****         
 687:main.c        ****         if (parseThatMF)
 2344              		.loc 1 687 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 55


 2345 04f2 744B     		ldr	r3, .L221+24
 2346 04f4 1B78     		ldrb	r3, [r3]
 2347 04f6 DBB2     		uxtb	r3, r3
 2348 04f8 002B     		cmp	r3, #0
 2349 04fa 01D0     		beq	.L82
 688:main.c        ****         {
 689:main.c        ****             parseSysex();
 2350              		.loc 1 689 0
 2351 04fc FFF7FEFF 		bl	parseSysex
 2352              	.L82:
 690:main.c        ****         }
 691:main.c        ****         
 692:main.c        ****         //if (newDataFlag)
 693:main.c        ****         //{
 694:main.c        ****         //}
 695:main.c        ****             /*
 696:main.c        ****             for (int i = 0; i < 5; i++)
 697:main.c        ****             {
 698:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 699:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 700:main.c        ****                 I2C_1_MasterSendStop(); 
 701:main.c        **** 
 702:main.c        **** 
 703:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 704:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 705:main.c        ****                 //I2C_1_MasterSendStop();
 706:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
 707:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 708:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 709:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 710:main.c        ****                  I2C_1_MasterSendStop(); 
 711:main.c        ****                 
 712:main.c        ****                 CyDelay(1);
 713:main.c        **** 
 714:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 715:main.c        ****                 I2C_1_MasterWriteByte(0x01);
 716:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 717:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 718:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 719:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 720:main.c        ****                 I2C_1_MasterSendStop(); 
 721:main.c        ****                 
 722:main.c        ****                 CyDelay(2);
 723:main.c        **** 
 724:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 725:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 726:main.c        ****                I2C_1_MasterWriteByte(0x80);
 727:main.c        ****                 I2C_1_MasterSendStop(); 
 728:main.c        ****                CyDelay(2);
 729:main.c        ****             }
 730:main.c        ****         */
 731:main.c        ****         //set main i2c mux
 732:main.c        ****     
 733:main.c        ****         
 734:main.c        ****         /*
 735:main.c        ****         for (int i = 0; i < 4; i++)
 736:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 56


 737:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 738:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 739:main.c        ****             I2C_1_MasterSendStop(); 
 740:main.c        **** 
 741:main.c        **** 
 742:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 743:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 744:main.c        ****             //I2C_1_MasterSendStop();
 745:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 746:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 747:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 748:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
 749:main.c        ****              I2C_1_MasterSendStop(); 
 750:main.c        ****             
 751:main.c        ****             CyDelay(1);
 752:main.c        **** 
 753:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 754:main.c        ****             I2C_1_MasterWriteByte(0x01);
 755:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 756:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 757:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 758:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 759:main.c        ****             I2C_1_MasterSendStop(); 
 760:main.c        ****             
 761:main.c        ****             CyDelay(2);
 762:main.c        **** 
 763:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 764:main.c        ****             I2C_1_MasterWriteByte(0xff);
 765:main.c        ****             I2C_1_MasterWriteByte(0x80);
 766:main.c        ****             I2C_1_MasterSendStop(); 
 767:main.c        ****            CyDelay(2);
 768:main.c        ****         }
 769:main.c        ****             */
 770:main.c        ****         /*    
 771:main.c        ****         if (main_counter == 6)
 772:main.c        ****         {
 773:main.c        ****             main_counter = 8;
 774:main.c        ****         }
 775:main.c        ****         */    
 776:main.c        ****         testpin3_Write(1);
 2353              		.loc 1 776 0
 2354 0500 0120     		movs	r0, #1
 2355 0502 FFF7FEFF 		bl	testpin3_Write
 777:main.c        ****        //sense levers and pedals
 778:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2356              		.loc 1 778 0
 2357 0506 6B4B     		ldr	r3, .L221+8
 2358 0508 1B78     		ldrb	r3, [r3]
 2359 050a DBB2     		uxtb	r3, r3
 2360 050c 1A46     		mov	r2, r3
 2361 050e 6E4B     		ldr	r3, .L221+28
 2362 0510 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2363 0514 6D4B     		ldr	r3, .L221+32
 2364 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2365 0518 9A42     		cmp	r2, r3
 2366 051a 14D0     		beq	.L83
 2367              	.LBB17:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 57


 779:main.c        ****         {
 780:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 2368              		.loc 1 780 0
 2369 051c 654B     		ldr	r3, .L221+8
 2370 051e 1B78     		ldrb	r3, [r3]
 2371 0520 DBB2     		uxtb	r3, r3
 2372 0522 1A46     		mov	r2, r3
 2373 0524 684B     		ldr	r3, .L221+28
 2374 0526 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2375 052a 1A46     		mov	r2, r3
 2376 052c 0123     		movs	r3, #1
 2377 052e 9340     		lsls	r3, r3, r2
 2378 0530 DAB2     		uxtb	r2, r3
 2379 0532 5E4B     		ldr	r3, .L221
 2380 0534 1A70     		strb	r2, [r3]
 781:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2381              		.loc 1 781 0
 2382 0536 0022     		movs	r2, #0
 2383 0538 0121     		movs	r1, #1
 2384 053a 7020     		movs	r0, #112
 2385 053c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2386 0540 0346     		mov	r3, r0
 2387 0542 87F82B30 		strb	r3, [r7, #43]
 2388              	.L83:
 2389              	.LBE17:
 782:main.c        ****         }
 783:main.c        ****         last_mux = mux_states[main_counter][0];
 2390              		.loc 1 783 0
 2391 0546 5B4B     		ldr	r3, .L221+8
 2392 0548 1B78     		ldrb	r3, [r3]
 2393 054a DBB2     		uxtb	r3, r3
 2394 054c 1A46     		mov	r2, r3
 2395 054e 5E4B     		ldr	r3, .L221+28
 2396 0550 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2397 0554 5D4B     		ldr	r3, .L221+32
 2398 0556 1A70     		strb	r2, [r3]
 784:main.c        ****         
 785:main.c        ****         
 786:main.c        ****         CyDelayUs(10);
 2399              		.loc 1 786 0
 2400 0558 0A20     		movs	r0, #10
 2401 055a FFF7FEFF 		bl	CyDelayUs
 787:main.c        ****         if (mux_states[main_counter][0] == 5)
 2402              		.loc 1 787 0
 2403 055e 554B     		ldr	r3, .L221+8
 2404 0560 1B78     		ldrb	r3, [r3]
 2405 0562 DBB2     		uxtb	r3, r3
 2406 0564 1A46     		mov	r2, r3
 2407 0566 584B     		ldr	r3, .L221+28
 2408 0568 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2409 056c 052B     		cmp	r3, #5
 2410 056e 1DD1     		bne	.L84
 788:main.c        ****         {
 789:main.c        ****             if (!i2c_skipped[main_counter])
 2411              		.loc 1 789 0
 2412 0570 504B     		ldr	r3, .L221+8
 2413 0572 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 58


 2414 0574 DBB2     		uxtb	r3, r3
 2415 0576 1A46     		mov	r2, r3
 2416 0578 554B     		ldr	r3, .L221+36
 2417 057a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2418 057c 002B     		cmp	r3, #0
 2419 057e 15D1     		bne	.L84
 790:main.c        ****             {
 791:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 2420              		.loc 1 791 0
 2421 0580 4C4B     		ldr	r3, .L221+8
 2422 0582 1B78     		ldrb	r3, [r3]
 2423 0584 DBB2     		uxtb	r3, r3
 2424 0586 504A     		ldr	r2, .L221+28
 2425 0588 5B00     		lsls	r3, r3, #1
 2426 058a 1344     		add	r3, r3, r2
 2427 058c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2428 058e 1A46     		mov	r2, r3
 2429 0590 0123     		movs	r3, #1
 2430 0592 9340     		lsls	r3, r3, r2
 2431 0594 DAB2     		uxtb	r2, r3
 2432 0596 454B     		ldr	r3, .L221
 2433 0598 1A70     		strb	r2, [r3]
 792:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 2434              		.loc 1 792 0
 2435 059a 0022     		movs	r2, #0
 2436 059c 0121     		movs	r1, #1
 2437 059e 7120     		movs	r0, #113
 2438 05a0 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2439 05a4 0346     		mov	r3, r0
 2440 05a6 1A46     		mov	r2, r3
 2441 05a8 414B     		ldr	r3, .L221+4
 2442 05aa 1A60     		str	r2, [r3]
 2443              	.L84:
 793:main.c        ****             }
 794:main.c        ****         }
 795:main.c        **** 
 796:main.c        ****         CyDelayUs(10);
 2444              		.loc 1 796 0
 2445 05ac 0A20     		movs	r0, #10
 2446 05ae FFF7FEFF 		bl	CyDelayUs
 797:main.c        ****         //if it's a hall sensor
 798:main.c        **** 
 799:main.c        ****         //temporarily don't scan vertical knee lever, should be <10 normally
 800:main.c        ****         if (main_counter < 10)
 2447              		.loc 1 800 0
 2448 05b2 404B     		ldr	r3, .L221+8
 2449 05b4 1B78     		ldrb	r3, [r3]
 2450 05b6 DBB2     		uxtb	r3, r3
 2451 05b8 092B     		cmp	r3, #9
 2452 05ba 00F2BF80 		bhi	.L85
 801:main.c        ****         {
 802:main.c        ****             if (!i2c_skipped[main_counter])
 2453              		.loc 1 802 0
 2454 05be 3D4B     		ldr	r3, .L221+8
 2455 05c0 1B78     		ldrb	r3, [r3]
 2456 05c2 DBB2     		uxtb	r3, r3
 2457 05c4 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 59


 2458 05c6 424B     		ldr	r3, .L221+36
 2459 05c8 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2460 05ca 002B     		cmp	r3, #0
 2461 05cc 40F0B680 		bne	.L85
 803:main.c        ****             {
 804:main.c        ****                 //CyDelayUs(100);
 805:main.c        ****                 I2Cbuff1[0] = 0x0E;
 2462              		.loc 1 805 0
 2463 05d0 364B     		ldr	r3, .L221
 2464 05d2 0E22     		movs	r2, #14
 2465 05d4 1A70     		strb	r2, [r3]
 806:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 2466              		.loc 1 806 0
 2467 05d6 0222     		movs	r2, #2
 2468 05d8 0121     		movs	r1, #1
 2469 05da 3620     		movs	r0, #54
 2470 05dc FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2471 05e0 0346     		mov	r3, r0
 2472 05e2 1A46     		mov	r2, r3
 2473 05e4 324B     		ldr	r3, .L221+4
 2474 05e6 1A60     		str	r2, [r3]
 807:main.c        ****                 if (status == 0)
 2475              		.loc 1 807 0
 2476 05e8 314B     		ldr	r3, .L221+4
 2477 05ea 1B68     		ldr	r3, [r3]
 2478 05ec 002B     		cmp	r3, #0
 2479 05ee 08D1     		bne	.L86
 808:main.c        ****                 {
 809:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 2480              		.loc 1 809 0
 2481 05f0 0122     		movs	r2, #1
 2482 05f2 0221     		movs	r1, #2
 2483 05f4 3620     		movs	r0, #54
 2484 05f6 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2485 05fa 0346     		mov	r3, r0
 2486 05fc 1A46     		mov	r2, r3
 2487 05fe 2C4B     		ldr	r3, .L221+4
 2488 0600 1A60     		str	r2, [r3]
 2489              	.L86:
 810:main.c        ****                 }
 811:main.c        ****                 if (status  == 0)
 2490              		.loc 1 811 0
 2491 0602 2B4B     		ldr	r3, .L221+4
 2492 0604 1B68     		ldr	r3, [r3]
 2493 0606 002B     		cmp	r3, #0
 2494 0608 40F09880 		bne	.L85
 812:main.c        ****                 {
 813:main.c        ****                     //CyDelayUs(100);
 814:main.c        ****                     angle[main_counter] = I2Cbuff2[0] << 8;
 2495              		.loc 1 814 0
 2496 060c 294B     		ldr	r3, .L221+8
 2497 060e 1B78     		ldrb	r3, [r3]
 2498 0610 DBB2     		uxtb	r3, r3
 2499 0612 1A46     		mov	r2, r3
 2500 0614 2F4B     		ldr	r3, .L221+40
 2501 0616 1B78     		ldrb	r3, [r3]
 2502 0618 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 60


 2503 061a 9BB2     		uxth	r3, r3
 2504 061c 1B02     		lsls	r3, r3, #8
 2505 061e 99B2     		uxth	r1, r3
 2506 0620 2D4B     		ldr	r3, .L221+44
 2507 0622 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 815:main.c        ****                     angle[main_counter] +=  I2Cbuff2[1];
 2508              		.loc 1 815 0
 2509 0626 2B4B     		ldr	r3, .L221+40
 2510 0628 5B78     		ldrb	r3, [r3, #1]
 2511 062a D8B2     		uxtb	r0, r3
 2512 062c 214B     		ldr	r3, .L221+8
 2513 062e 1B78     		ldrb	r3, [r3]
 2514 0630 DBB2     		uxtb	r3, r3
 2515 0632 1946     		mov	r1, r3
 2516 0634 1A46     		mov	r2, r3
 2517 0636 284B     		ldr	r3, .L221+44
 2518 0638 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2519 063c 83B2     		uxth	r3, r0
 2520 063e 1344     		add	r3, r3, r2
 2521 0640 9AB2     		uxth	r2, r3
 2522 0642 254B     		ldr	r3, .L221+44
 2523 0644 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 816:main.c        ****                     
 817:main.c        ****                     if (calibrationMode)
 2524              		.loc 1 817 0
 2525 0648 244B     		ldr	r3, .L221+48
 2526 064a 1B68     		ldr	r3, [r3]
 2527 064c 002B     		cmp	r3, #0
 2528 064e 75D0     		beq	.L85
 818:main.c        ****                     {
 819:main.c        ****                         if (angle[main_counter] < pedals_low[main_counter])
 2529              		.loc 1 819 0
 2530 0650 184B     		ldr	r3, .L221+8
 2531 0652 1B78     		ldrb	r3, [r3]
 2532 0654 DBB2     		uxtb	r3, r3
 2533 0656 1A46     		mov	r2, r3
 2534 0658 1F4B     		ldr	r3, .L221+44
 2535 065a 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2536 065e 154B     		ldr	r3, .L221+8
 2537 0660 1B78     		ldrb	r3, [r3]
 2538 0662 DBB2     		uxtb	r3, r3
 2539 0664 1946     		mov	r1, r3
 2540 0666 1E4B     		ldr	r3, .L221+52
 2541 0668 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2542 066c 9A42     		cmp	r2, r3
 2543 066e 47D2     		bcs	.L87
 820:main.c        ****                         {
 821:main.c        ****                             if (main_counter == 0)
 2544              		.loc 1 821 0
 2545 0670 104B     		ldr	r3, .L221+8
 2546 0672 1B78     		ldrb	r3, [r3]
 2547 0674 DBB2     		uxtb	r3, r3
 2548 0676 002B     		cmp	r3, #0
 2549 0678 34D1     		bne	.L88
 822:main.c        ****                             {
 823:main.c        ****                                 if (angle[main_counter] != 0)
 2550              		.loc 1 823 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 61


 2551 067a 0E4B     		ldr	r3, .L221+8
 2552 067c 1B78     		ldrb	r3, [r3]
 2553 067e DBB2     		uxtb	r3, r3
 2554 0680 1A46     		mov	r2, r3
 2555 0682 154B     		ldr	r3, .L221+44
 2556 0684 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2557 0688 002B     		cmp	r3, #0
 2558 068a 39D0     		beq	.L87
 824:main.c        ****                                 {
 825:main.c        ****                                      pedals_low[main_counter] = angle[main_counter];
 2559              		.loc 1 825 0
 2560 068c 094B     		ldr	r3, .L221+8
 2561 068e 1B78     		ldrb	r3, [r3]
 2562 0690 DBB2     		uxtb	r3, r3
 2563 0692 1A46     		mov	r2, r3
 2564 0694 074B     		ldr	r3, .L221+8
 2565 0696 1B78     		ldrb	r3, [r3]
 2566 0698 DBB2     		uxtb	r3, r3
 2567 069a 1946     		mov	r1, r3
 2568 069c 0E4B     		ldr	r3, .L221+44
 2569 069e 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2570 06a2 0F4B     		ldr	r3, .L221+52
 2571 06a4 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2572 06a8 2AE0     		b	.L87
 2573              	.L222:
 2574 06aa 00BF     		.align	2
 2575              	.L221:
 2576 06ac 00000000 		.word	I2Cbuff1
 2577 06b0 00000000 		.word	status
 2578 06b4 00000000 		.word	main_counter
 2579 06b8 00000000 		.word	spis_1_ss
 2580 06bc 00000000 		.word	spis_2_ss
 2581 06c0 00000000 		.word	myArray
 2582 06c4 00000000 		.word	parseThatMF
 2583 06c8 00000000 		.word	mux_states
 2584 06cc 00000000 		.word	last_mux
 2585 06d0 00000000 		.word	i2c_skipped
 2586 06d4 00000000 		.word	I2Cbuff2
 2587 06d8 00000000 		.word	angle
 2588 06dc 00000000 		.word	calibrationMode
 2589 06e0 00000000 		.word	pedals_low
 2590              	.L88:
 826:main.c        ****                                 }
 827:main.c        ****                             }
 828:main.c        ****                             else
 829:main.c        ****                             {
 830:main.c        ****                                 pedals_low[main_counter] = angle[main_counter];
 2591              		.loc 1 830 0
 2592 06e4 9B4B     		ldr	r3, .L223
 2593 06e6 1B78     		ldrb	r3, [r3]
 2594 06e8 DBB2     		uxtb	r3, r3
 2595 06ea 1A46     		mov	r2, r3
 2596 06ec 994B     		ldr	r3, .L223
 2597 06ee 1B78     		ldrb	r3, [r3]
 2598 06f0 DBB2     		uxtb	r3, r3
 2599 06f2 1946     		mov	r1, r3
 2600 06f4 984B     		ldr	r3, .L223+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 62


 2601 06f6 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2602 06fa 984B     		ldr	r3, .L223+8
 2603 06fc 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2604              	.L87:
 831:main.c        ****                             }
 832:main.c        ****                             
 833:main.c        ****                         }
 834:main.c        ****                         if (angle[main_counter] > pedals_high[main_counter])
 2605              		.loc 1 834 0
 2606 0700 944B     		ldr	r3, .L223
 2607 0702 1B78     		ldrb	r3, [r3]
 2608 0704 DBB2     		uxtb	r3, r3
 2609 0706 1A46     		mov	r2, r3
 2610 0708 934B     		ldr	r3, .L223+4
 2611 070a 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2612 070e 914B     		ldr	r3, .L223
 2613 0710 1B78     		ldrb	r3, [r3]
 2614 0712 DBB2     		uxtb	r3, r3
 2615 0714 1946     		mov	r1, r3
 2616 0716 924B     		ldr	r3, .L223+12
 2617 0718 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2618 071c 9A42     		cmp	r2, r3
 2619 071e 0DD9     		bls	.L85
 835:main.c        ****                         {
 836:main.c        ****                              pedals_high[main_counter] = angle[main_counter];
 2620              		.loc 1 836 0
 2621 0720 8C4B     		ldr	r3, .L223
 2622 0722 1B78     		ldrb	r3, [r3]
 2623 0724 DBB2     		uxtb	r3, r3
 2624 0726 1A46     		mov	r2, r3
 2625 0728 8A4B     		ldr	r3, .L223
 2626 072a 1B78     		ldrb	r3, [r3]
 2627 072c DBB2     		uxtb	r3, r3
 2628 072e 1946     		mov	r1, r3
 2629 0730 894B     		ldr	r3, .L223+4
 2630 0732 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2631 0736 8A4B     		ldr	r3, .L223+12
 2632 0738 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2633              	.L85:
 837:main.c        ****                         }
 838:main.c        ****                     }
 839:main.c        ****                 }
 840:main.c        ****             }
 841:main.c        ****         }
 842:main.c        ****         
 843:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 844:main.c        ****         if (main_counter == 9)
 2634              		.loc 1 844 0
 2635 073c 854B     		ldr	r3, .L223
 2636 073e 1B78     		ldrb	r3, [r3]
 2637 0740 DBB2     		uxtb	r3, r3
 2638 0742 092B     		cmp	r3, #9
 2639 0744 40F08780 		bne	.L90
 845:main.c        ****         {
 846:main.c        ****             if (!i2c_skipped[main_counter])
 2640              		.loc 1 846 0
 2641 0748 824B     		ldr	r3, .L223
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 63


 2642 074a 1B78     		ldrb	r3, [r3]
 2643 074c DBB2     		uxtb	r3, r3
 2644 074e 1A46     		mov	r2, r3
 2645 0750 844B     		ldr	r3, .L223+16
 2646 0752 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2647 0754 002B     		cmp	r3, #0
 2648 0756 40F0C580 		bne	.L94
 847:main.c        ****             {
 848:main.c        ****                 //scan the knob adc
 849:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2649              		.loc 1 849 0
 2650 075a 834B     		ldr	r3, .L223+20
 2651 075c 0022     		movs	r2, #0
 2652 075e 1A70     		strb	r2, [r3]
 850:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 2653              		.loc 1 850 0
 2654 0760 0022     		movs	r2, #0
 2655 0762 1021     		movs	r1, #16
 2656 0764 3520     		movs	r0, #53
 2657 0766 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2658 076a 0346     		mov	r3, r0
 2659 076c 1A46     		mov	r2, r3
 2660 076e 7F4B     		ldr	r3, .L223+24
 2661 0770 1A60     		str	r2, [r3]
 851:main.c        ****                 if (status == 0)
 2662              		.loc 1 851 0
 2663 0772 7E4B     		ldr	r3, .L223+24
 2664 0774 1B68     		ldr	r3, [r3]
 2665 0776 002B     		cmp	r3, #0
 2666 0778 40F0B480 		bne	.L94
 2667              	.LBB18:
 852:main.c        ****                 {
 853:main.c        ****                     for (int i = 0; i < NUM_MACROS; i++)
 2668              		.loc 1 853 0
 2669 077c 0023     		movs	r3, #0
 2670 077e 7B67     		str	r3, [r7, #116]
 2671 0780 20E0     		b	.L92
 2672              	.L93:
 2673              	.LBB19:
 854:main.c        ****                     {
 855:main.c        ****                        uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[i*2] & 255)) & 4095; // 
 2674              		.loc 1 855 0 discriminator 3
 2675 0782 7B6F     		ldr	r3, [r7, #116]
 2676 0784 5B00     		lsls	r3, r3, #1
 2677 0786 7A4A     		ldr	r2, .L223+28
 2678 0788 D35C     		ldrb	r3, [r2, r3]
 2679 078a DBB2     		uxtb	r3, r3
 2680 078c 9BB2     		uxth	r3, r3
 2681 078e 1B02     		lsls	r3, r3, #8
 2682 0790 9AB2     		uxth	r2, r3
 2683 0792 7B6F     		ldr	r3, [r7, #116]
 2684 0794 5B00     		lsls	r3, r3, #1
 2685 0796 7649     		ldr	r1, .L223+28
 2686 0798 CB5C     		ldrb	r3, [r1, r3]
 2687 079a DBB2     		uxtb	r3, r3
 2688 079c 9BB2     		uxth	r3, r3
 2689 079e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 64


 2690 07a0 9BB2     		uxth	r3, r3
 2691 07a2 C3F30B03 		ubfx	r3, r3, #0, #12
 2692 07a6 7B80     		strh	r3, [r7, #2]	@ movhi
 856:main.c        ****                         macroKnobValues[i] = 255 - (tempInt >> 4); //now squish it down to 8 bit fo
 2693              		.loc 1 856 0 discriminator 3
 2694 07a8 7B88     		ldrh	r3, [r7, #2]
 2695 07aa 1B09     		lsrs	r3, r3, #4
 2696 07ac 9BB2     		uxth	r3, r3
 2697 07ae DBB2     		uxtb	r3, r3
 2698 07b0 DB43     		mvns	r3, r3
 2699 07b2 D9B2     		uxtb	r1, r3
 2700 07b4 6F4A     		ldr	r2, .L223+32
 2701 07b6 7B6F     		ldr	r3, [r7, #116]
 2702 07b8 1344     		add	r3, r3, r2
 2703 07ba 0A46     		mov	r2, r1
 2704 07bc 1A70     		strb	r2, [r3]
 2705              	.LBE19:
 853:main.c        ****                     {
 2706              		.loc 1 853 0 discriminator 3
 2707 07be 7B6F     		ldr	r3, [r7, #116]
 2708 07c0 0133     		adds	r3, r3, #1
 2709 07c2 7B67     		str	r3, [r7, #116]
 2710              	.L92:
 853:main.c        ****                     {
 2711              		.loc 1 853 0 is_stmt 0 discriminator 1
 2712 07c4 7B6F     		ldr	r3, [r7, #116]
 2713 07c6 072B     		cmp	r3, #7
 2714 07c8 DBDD     		ble	.L93
 2715              	.LBE18:
 857:main.c        ****                     }
 858:main.c        ****                     //
 859:main.c        ****                     if (macroOLEDWaitingToSend == 2)
 2716              		.loc 1 859 0 is_stmt 1
 2717 07ca 6B4B     		ldr	r3, .L223+36
 2718 07cc 1B68     		ldr	r3, [r3]
 2719 07ce 022B     		cmp	r3, #2
 2720 07d0 40F08880 		bne	.L94
 860:main.c        ****                     {
 861:main.c        ****                         //send the data to the little macro OLED screens
 862:main.c        ****                         
 863:main.c        ****                         I2Cbuff1[0] = (1 << 3) + whichMacro;
 2721              		.loc 1 863 0
 2722 07d4 694B     		ldr	r3, .L223+40
 2723 07d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2724 07d8 0833     		adds	r3, r3, #8
 2725 07da DAB2     		uxtb	r2, r3
 2726 07dc 624B     		ldr	r3, .L223+20
 2727 07de 1A70     		strb	r2, [r3]
 864:main.c        ****                         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2728              		.loc 1 864 0
 2729 07e0 0022     		movs	r2, #0
 2730 07e2 0121     		movs	r1, #1
 2731 07e4 7220     		movs	r0, #114
 2732 07e6 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2733 07ea 0346     		mov	r3, r0
 2734 07ec 1A46     		mov	r2, r3
 2735 07ee 5F4B     		ldr	r3, .L223+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 65


 2736 07f0 1A60     		str	r2, [r3]
 865:main.c        ****                         //OLED_init(128, 32);
 866:main.c        ****                         OLEDclear(128, 32);
 2737              		.loc 1 866 0
 2738 07f2 2021     		movs	r1, #32
 2739 07f4 8020     		movs	r0, #128
 2740 07f6 FFF7FEFF 		bl	OLEDclear
 867:main.c        ****                         //OLEDwriteInt(w , 1, 0,FirstLine);
 868:main.c        ****                         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 869:main.c        ****                         myGFX_setFont(1);
 2741              		.loc 1 869 0
 2742 07fa 0120     		movs	r0, #1
 2743 07fc FFF7FEFF 		bl	myGFX_setFont
 870:main.c        ****                         //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
 871:main.c        ****                         OLEDwriteString((char *)&macroNamesArray[patchNum][whichMacro][0], MACRO_CL
 2744              		.loc 1 871 0
 2745 0800 5F4B     		ldr	r3, .L223+44
 2746 0802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2747 0804 1946     		mov	r1, r3
 2748 0806 5D4B     		ldr	r3, .L223+40
 2749 0808 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2750 080a 1A46     		mov	r2, r3
 2751 080c D200     		lsls	r2, r2, #3
 2752 080e D21A     		subs	r2, r2, r3
 2753 0810 5300     		lsls	r3, r2, #1
 2754 0812 1A46     		mov	r2, r3
 2755 0814 0B46     		mov	r3, r1
 2756 0816 DB00     		lsls	r3, r3, #3
 2757 0818 5B1A     		subs	r3, r3, r1
 2758 081a 1B01     		lsls	r3, r3, #4
 2759 081c 1344     		add	r3, r3, r2
 2760 081e 594A     		ldr	r2, .L223+48
 2761 0820 9818     		adds	r0, r3, r2
 2762 0822 0123     		movs	r3, #1
 2763 0824 0022     		movs	r2, #0
 2764 0826 0821     		movs	r1, #8
 2765 0828 FFF7FEFF 		bl	OLEDwriteString
 872:main.c        ****                         OLED_draw(128, 32);
 2766              		.loc 1 872 0
 2767 082c 2021     		movs	r1, #32
 2768 082e 8020     		movs	r0, #128
 2769 0830 FFF7FEFF 		bl	OLED_draw
 873:main.c        **** 
 874:main.c        ****                         whichMacro++;
 2770              		.loc 1 874 0
 2771 0834 514B     		ldr	r3, .L223+40
 2772 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773 0838 0133     		adds	r3, r3, #1
 2774 083a DAB2     		uxtb	r2, r3
 2775 083c 4F4B     		ldr	r3, .L223+40
 2776 083e 1A70     		strb	r2, [r3]
 875:main.c        ****                         if (whichMacro >=8)
 2777              		.loc 1 875 0
 2778 0840 4E4B     		ldr	r3, .L223+40
 2779 0842 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2780 0844 072B     		cmp	r3, #7
 2781 0846 4DD9     		bls	.L94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 66


 876:main.c        ****                         {
 877:main.c        ****                             macroOLEDWaitingToSend = 0;
 2782              		.loc 1 877 0
 2783 0848 4B4B     		ldr	r3, .L223+36
 2784 084a 0022     		movs	r2, #0
 2785 084c 1A60     		str	r2, [r3]
 878:main.c        ****                             whichMacro = 0;
 2786              		.loc 1 878 0
 2787 084e 4B4B     		ldr	r3, .L223+40
 2788 0850 0022     		movs	r2, #0
 2789 0852 1A70     		strb	r2, [r3]
 2790 0854 46E0     		b	.L94
 2791              	.L90:
 879:main.c        ****                         }
 880:main.c        ****                     }
 881:main.c        ****                 }
 882:main.c        ****             }
 883:main.c        ****             
 884:main.c        ****         }
 885:main.c        ****         //otherwise it's the ADC for the foot pedal
 886:main.c        ****         else if (main_counter == 10)
 2792              		.loc 1 886 0
 2793 0856 3F4B     		ldr	r3, .L223
 2794 0858 1B78     		ldrb	r3, [r3]
 2795 085a DBB2     		uxtb	r3, r3
 2796 085c 0A2B     		cmp	r3, #10
 2797 085e 2AD1     		bne	.L95
 887:main.c        ****         {
 888:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 889:main.c        ****             if (!i2c_skipped[main_counter])
 2798              		.loc 1 889 0
 2799 0860 3C4B     		ldr	r3, .L223
 2800 0862 1B78     		ldrb	r3, [r3]
 2801 0864 DBB2     		uxtb	r3, r3
 2802 0866 1A46     		mov	r2, r3
 2803 0868 3E4B     		ldr	r3, .L223+16
 2804 086a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2805 086c 002B     		cmp	r3, #0
 2806 086e 39D1     		bne	.L94
 890:main.c        ****             {
 891:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2807              		.loc 1 891 0
 2808 0870 3D4B     		ldr	r3, .L223+20
 2809 0872 0022     		movs	r2, #0
 2810 0874 1A70     		strb	r2, [r3]
 892:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 2811              		.loc 1 892 0
 2812 0876 0022     		movs	r2, #0
 2813 0878 0221     		movs	r1, #2
 2814 087a 4F20     		movs	r0, #79
 2815 087c FFF7FEFF 		bl	I2C_MasterReadBlocking
 2816 0880 0346     		mov	r3, r0
 2817 0882 1A46     		mov	r2, r3
 2818 0884 394B     		ldr	r3, .L223+24
 2819 0886 1A60     		str	r2, [r3]
 893:main.c        ****                 if (status == 0)
 2820              		.loc 1 893 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 67


 2821 0888 384B     		ldr	r3, .L223+24
 2822 088a 1B68     		ldr	r3, [r3]
 2823 088c 002B     		cmp	r3, #0
 2824 088e 29D1     		bne	.L94
 894:main.c        ****                 {
 895:main.c        ****                     volumePedal = I2Cbuff2[0] << 8;
 2825              		.loc 1 895 0
 2826 0890 374B     		ldr	r3, .L223+28
 2827 0892 1B78     		ldrb	r3, [r3]
 2828 0894 DBB2     		uxtb	r3, r3
 2829 0896 9BB2     		uxth	r3, r3
 2830 0898 1B02     		lsls	r3, r3, #8
 2831 089a 9AB2     		uxth	r2, r3
 2832 089c 3A4B     		ldr	r3, .L223+52
 2833 089e 1A80     		strh	r2, [r3]	@ movhi
 896:main.c        ****                     volumePedal +=  I2Cbuff2[1];
 2834              		.loc 1 896 0
 2835 08a0 334B     		ldr	r3, .L223+28
 2836 08a2 5B78     		ldrb	r3, [r3, #1]
 2837 08a4 DBB2     		uxtb	r3, r3
 2838 08a6 9AB2     		uxth	r2, r3
 2839 08a8 374B     		ldr	r3, .L223+52
 2840 08aa 1B88     		ldrh	r3, [r3]
 2841 08ac 1344     		add	r3, r3, r2
 2842 08ae 9AB2     		uxth	r2, r3
 2843 08b0 354B     		ldr	r3, .L223+52
 2844 08b2 1A80     		strh	r2, [r3]	@ movhi
 2845 08b4 16E0     		b	.L94
 2846              	.L95:
 897:main.c        ****                 }
 898:main.c        ****             }
 899:main.c        ****         }
 900:main.c        ****         else
 901:main.c        ****         if (main_counter == 11)
 2847              		.loc 1 901 0
 2848 08b6 274B     		ldr	r3, .L223
 2849 08b8 1B78     		ldrb	r3, [r3]
 2850 08ba DBB2     		uxtb	r3, r3
 2851 08bc 0B2B     		cmp	r3, #11
 2852 08be 11D1     		bne	.L94
 902:main.c        ****         { 
 903:main.c        ****             if (mainOLEDWaitingToSend)
 2853              		.loc 1 903 0
 2854 08c0 324B     		ldr	r3, .L223+56
 2855 08c2 1B68     		ldr	r3, [r3]
 2856 08c4 002B     		cmp	r3, #0
 2857 08c6 06D0     		beq	.L97
 904:main.c        ****             {
 905:main.c        ****                 OLED_draw(128, 64);
 2858              		.loc 1 905 0
 2859 08c8 4021     		movs	r1, #64
 2860 08ca 8020     		movs	r0, #128
 2861 08cc FFF7FEFF 		bl	OLED_draw
 906:main.c        ****                 mainOLEDWaitingToSend = 0;
 2862              		.loc 1 906 0
 2863 08d0 2E4B     		ldr	r3, .L223+56
 2864 08d2 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 68


 2865 08d4 1A60     		str	r2, [r3]
 2866              	.L97:
 907:main.c        ****             }
 908:main.c        ****             if (macroOLEDWaitingToSend == 1)
 2867              		.loc 1 908 0
 2868 08d6 284B     		ldr	r3, .L223+36
 2869 08d8 1B68     		ldr	r3, [r3]
 2870 08da 012B     		cmp	r3, #1
 2871 08dc 02D1     		bne	.L94
 909:main.c        ****             {
 910:main.c        ****                 macroOLEDWaitingToSend = 2;
 2872              		.loc 1 910 0
 2873 08de 264B     		ldr	r3, .L223+36
 2874 08e0 0222     		movs	r2, #2
 2875 08e2 1A60     		str	r2, [r3]
 2876              	.L94:
 911:main.c        ****             }
 912:main.c        ****             
 913:main.c        ****             #if 0
 914:main.c        ****             if (OLEDcount == 0)
 915:main.c        ****             {
 916:main.c        ****                 OLEDclearLine(FirstLine);
 917:main.c        ****             }
 918:main.c        ****             else if (OLEDcount == 1)
 919:main.c        ****             {
 920:main.c        ****                 OLEDwriteInt(encoderNum, 2, 0, FirstLine);
 921:main.c        **** 		    }
 922:main.c        ****             else if (OLEDcount == 2)
 923:main.c        ****             {
 924:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
 925:main.c        ****             }
 926:main.c        ****             else if (OLEDcount == 3)
 927:main.c        ****             {
 928:main.c        ****                 OLEDwriteInt(encoderVal[encoderNum], 3, OLEDgetCursor(), FirstLine);
 929:main.c        ****             }
 930:main.c        ****             else if (OLEDcount == 4)
 931:main.c        ****             {
 932:main.c        ****                 OLEDwriteString("     ", 5, OLEDgetCursor(), FirstLine);
 933:main.c        ****             }
 934:main.c        ****             else if (OLEDcount == 5)
 935:main.c        ****             {
 936:main.c        ****                 OLEDwriteInt(patchNum, 2, OLEDgetCursor(), FirstLine);
 937:main.c        ****             }
 938:main.c        ****             else if (OLEDcount == 6)
 939:main.c        ****             {
 940:main.c        ****                 //OLED_drawFirstLine();
 941:main.c        ****                 
 942:main.c        ****                 //OLEDwriteInt( bar[0] , 6, 0,SecondLine);
 943:main.c        ****                 //OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 944:main.c        ****                 //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 945:main.c        ****                 //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_B
 946:main.c        ****                  //OLED_draw();
 947:main.c        ****             }
 948:main.c        ****             OLEDcount++;
 949:main.c        ****             if (OLEDcount > 6)
 950:main.c        ****             {
 951:main.c        ****                 OLEDcount = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 69


 952:main.c        ****             }
 953:main.c        ****             #endif
 954:main.c        ****         }
 955:main.c        **** 
 956:main.c        ****         /*
 957:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
 958:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 959:main.c        **** 
 960:main.c        ****                 for (int i = 0; i < 5; i++)
 961:main.c        ****                 {
 962:main.c        ****                     I2Cbuff1[0] = 1<<i;
 963:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 964:main.c        **** 
 965:main.c        ****                     I2Cbuff1[0] = 0x0E;
 966:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 967:main.c        **** 
 968:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 969:main.c        **** 
 970:main.c        **** 
 971:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 972:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 973:main.c        ****                 }
 974:main.c        ****             if (main_counter == 0)
 975:main.c        ****             {               
 976:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
 977:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 978:main.c        **** 
 979:main.c        ****                 for (int i = 0; i < 5; i++)
 980:main.c        ****                 {
 981:main.c        ****                     I2Cbuff1[0] = 1<<i;
 982:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 983:main.c        **** 
 984:main.c        ****                     I2Cbuff1[0] = 0x0E;
 985:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 986:main.c        **** 
 987:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 988:main.c        **** 
 989:main.c        **** 
 990:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 991:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 992:main.c        ****                 }
 993:main.c        ****             }
 994:main.c        ****             else
 995:main.c        ****             {
 996:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
 997:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 998:main.c        ****                 I2Cbuff1[0] = 0x0E;
 999:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
1000:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
1001:main.c        ****                 {
1002:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
1003:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1004:main.c        ****                 }
1005:main.c        ****            
1006:main.c        **** 
1007:main.c        **** 
1008:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 70


1009:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
1010:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
1011:main.c        ****                 {
1012:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
1013:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1014:main.c        ****                 }
1015:main.c        ****                 
1016:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
1017:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
1018:main.c        ****             }    
1019:main.c        ****                 
1020:main.c        **** 
1021:main.c        ****             send_it = 1;
1022:main.c        ****         }
1023:main.c        ****         */
1024:main.c        ****         
1025:main.c        ****         if (main_counter < 10)
 2877              		.loc 1 1025 0
 2878 08e4 1B4B     		ldr	r3, .L223
 2879 08e6 1B78     		ldrb	r3, [r3]
 2880 08e8 DBB2     		uxtb	r3, r3
 2881 08ea 092B     		cmp	r3, #9
 2882 08ec 00F2EC80 		bhi	.L98
 2883              	.LBB20:
1026:main.c        ****         {
1027:main.c        ****             
1028:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
1029:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_low[main_counter])
 2884              		.loc 1 1029 0
 2885 08f0 184B     		ldr	r3, .L223
 2886 08f2 1B78     		ldrb	r3, [r3]
 2887 08f4 DBB2     		uxtb	r3, r3
 2888 08f6 1A46     		mov	r2, r3
 2889 08f8 174B     		ldr	r3, .L223+4
 2890 08fa 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2891 08fe 154B     		ldr	r3, .L223
 2892 0900 1B78     		ldrb	r3, [r3]
 2893 0902 DBB2     		uxtb	r3, r3
 2894 0904 1946     		mov	r1, r3
 2895 0906 154B     		ldr	r3, .L223+8
 2896 0908 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2897 090c D31A     		subs	r3, r2, r3
 2898 090e 9BB2     		uxth	r3, r3
 2899 0910 3B85     		strh	r3, [r7, #40]	@ movhi
1030:main.c        ****             
1031:main.c        ****             if (tempangle > 0)
 2900              		.loc 1 1031 0
 2901 0912 B7F92830 		ldrsh	r3, [r7, #40]
 2902 0916 002B     		cmp	r3, #0
 2903 0918 3EDD     		ble	.L99
1032:main.c        ****             {
1033:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 2904              		.loc 1 1033 0
 2905 091a 0E4B     		ldr	r3, .L223
 2906 091c 1B78     		ldrb	r3, [r3]
 2907 091e DBB2     		uxtb	r3, r3
 2908 0920 1C46     		mov	r4, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 71


 2909 0922 B7F92830 		ldrsh	r3, [r7, #40]
 2910 0926 1846     		mov	r0, r3
 2911 0928 FFF7FEFF 		bl	__aeabi_i2f
 2912 092c 094B     		ldr	r3, .L223
 2913 092e 1B78     		ldrb	r3, [r3]
 2914 0930 DBB2     		uxtb	r3, r3
 2915 0932 1A46     		mov	r2, r3
 2916 0934 164B     		ldr	r3, .L223+60
 2917 0936 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 2918 093a 1946     		mov	r1, r3
 2919 093c FFF7FEFF 		bl	__aeabi_fmul
 2920 0940 0346     		mov	r3, r0
 2921 0942 1846     		mov	r0, r3
 2922 0944 FFF7FEFF 		bl	__aeabi_f2uiz
 2923 0948 0346     		mov	r3, r0
 2924 094a 9AB2     		uxth	r2, r3
 2925 094c 114B     		ldr	r3, .L223+64
 2926 094e 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 2927 0952 29E0     		b	.L100
 2928              	.L224:
 2929              		.align	2
 2930              	.L223:
 2931 0954 00000000 		.word	main_counter
 2932 0958 00000000 		.word	angle
 2933 095c 00000000 		.word	pedals_low
 2934 0960 00000000 		.word	pedals_high
 2935 0964 00000000 		.word	i2c_skipped
 2936 0968 00000000 		.word	I2Cbuff1
 2937 096c 00000000 		.word	status
 2938 0970 00000000 		.word	I2Cbuff2
 2939 0974 00000000 		.word	macroKnobValues
 2940 0978 00000000 		.word	macroOLEDWaitingToSend
 2941 097c 00000000 		.word	whichMacro
 2942 0980 00000000 		.word	patchNum
 2943 0984 00000000 		.word	macroNamesArray
 2944 0988 00000000 		.word	volumePedal
 2945 098c 00000000 		.word	mainOLEDWaitingToSend
 2946 0990 00000000 		.word	pedalRatios
 2947 0994 00000000 		.word	processed_pedals
 2948              	.L99:
1034:main.c        ****             }
1035:main.c        ****             else
1036:main.c        ****             {
1037:main.c        ****                 processed_pedals[main_counter] = 0;
 2949              		.loc 1 1037 0
 2950 0998 864B     		ldr	r3, .L225
 2951 099a 1B78     		ldrb	r3, [r3]
 2952 099c DBB2     		uxtb	r3, r3
 2953 099e 1A46     		mov	r2, r3
 2954 09a0 854B     		ldr	r3, .L225+4
 2955 09a2 0021     		movs	r1, #0
 2956 09a4 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2957              	.L100:
1038:main.c        ****             }
1039:main.c        ****             if (processed_pedals[main_counter] > 4095)
 2958              		.loc 1 1039 0
 2959 09a8 824B     		ldr	r3, .L225
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 72


 2960 09aa 1B78     		ldrb	r3, [r3]
 2961 09ac DBB2     		uxtb	r3, r3
 2962 09ae 1A46     		mov	r2, r3
 2963 09b0 814B     		ldr	r3, .L225+4
 2964 09b2 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2965 09b6 B3F5805F 		cmp	r3, #4096
 2966 09ba 08D3     		bcc	.L101
1040:main.c        ****             {
1041:main.c        ****                 processed_pedals[main_counter] = 4095;
 2967              		.loc 1 1041 0
 2968 09bc 7D4B     		ldr	r3, .L225
 2969 09be 1B78     		ldrb	r3, [r3]
 2970 09c0 DBB2     		uxtb	r3, r3
 2971 09c2 1A46     		mov	r2, r3
 2972 09c4 7C4B     		ldr	r3, .L225+4
 2973 09c6 40F6FF71 		movw	r1, #4095
 2974 09ca 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2975              	.L101:
1042:main.c        ****             }
1043:main.c        ****             
1044:main.c        ****             
1045:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
1046:main.c        ****             {
1047:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
1048:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
1049:main.c        ****             }
1050:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 2976              		.loc 1 1050 0
 2977 09ce 794B     		ldr	r3, .L225
 2978 09d0 1B78     		ldrb	r3, [r3]
 2979 09d2 DBB2     		uxtb	r3, r3
 2980 09d4 1C46     		mov	r4, r3
 2981 09d6 774B     		ldr	r3, .L225
 2982 09d8 1B78     		ldrb	r3, [r3]
 2983 09da DBB2     		uxtb	r3, r3
 2984 09dc 1A46     		mov	r2, r3
 2985 09de 764B     		ldr	r3, .L225+4
 2986 09e0 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2987 09e4 1846     		mov	r0, r3
 2988 09e6 FFF7FEFF 		bl	__aeabi_ui2f
 2989 09ea 0346     		mov	r3, r0
 2990 09ec 7349     		ldr	r1, .L225+8
 2991 09ee 1846     		mov	r0, r3
 2992 09f0 FFF7FEFF 		bl	__aeabi_fmul
 2993 09f4 0346     		mov	r3, r0
 2994 09f6 1A46     		mov	r2, r3
 2995 09f8 714B     		ldr	r3, .L225+12
 2996 09fa 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
1051:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[pedal_cc_assignments[main_counter]] 
 2997              		.loc 1 1051 0
 2998 09fe 6D4B     		ldr	r3, .L225
 2999 0a00 1B78     		ldrb	r3, [r3]
 3000 0a02 DBB2     		uxtb	r3, r3
 3001 0a04 1C46     		mov	r4, r3
 3002 0a06 6B4B     		ldr	r3, .L225
 3003 0a08 1B78     		ldrb	r3, [r3]
 3004 0a0a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 73


 3005 0a0c 1A46     		mov	r2, r3
 3006 0a0e 6D4B     		ldr	r3, .L225+16
 3007 0a10 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3008 0a12 1A46     		mov	r2, r3
 3009 0a14 684B     		ldr	r3, .L225+4
 3010 0a16 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3011 0a1a 1846     		mov	r0, r3
 3012 0a1c FFF7FEFF 		bl	__aeabi_ui2f
 3013 0a20 0346     		mov	r3, r0
 3014 0a22 4FF07651 		mov	r1, #1031798784
 3015 0a26 1846     		mov	r0, r3
 3016 0a28 FFF7FEFF 		bl	__aeabi_fmul
 3017 0a2c 0346     		mov	r3, r0
 3018 0a2e 1846     		mov	r0, r3
 3019 0a30 FFF7FEFF 		bl	__aeabi_f2uiz
 3020 0a34 0346     		mov	r3, r0
 3021 0a36 DAB2     		uxtb	r2, r3
 3022 0a38 634B     		ldr	r3, .L225+20
 3023 0a3a 1A55     		strb	r2, [r3, r4]
1052:main.c        ****             pedals7bit[main_counter] = pedals8bit[main_counter] >> 1;
 3024              		.loc 1 1052 0
 3025 0a3c 5D4B     		ldr	r3, .L225
 3026 0a3e 1B78     		ldrb	r3, [r3]
 3027 0a40 DBB2     		uxtb	r3, r3
 3028 0a42 1A46     		mov	r2, r3
 3029 0a44 5B4B     		ldr	r3, .L225
 3030 0a46 1B78     		ldrb	r3, [r3]
 3031 0a48 DBB2     		uxtb	r3, r3
 3032 0a4a 1946     		mov	r1, r3
 3033 0a4c 5E4B     		ldr	r3, .L225+20
 3034 0a4e 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3035 0a50 5B08     		lsrs	r3, r3, #1
 3036 0a52 D9B2     		uxtb	r1, r3
 3037 0a54 5D4B     		ldr	r3, .L225+24
 3038 0a56 9954     		strb	r1, [r3, r2]
1053:main.c        ****             if (pedals7bit[main_counter] != prevPedals7bit[main_counter])
 3039              		.loc 1 1053 0
 3040 0a58 564B     		ldr	r3, .L225
 3041 0a5a 1B78     		ldrb	r3, [r3]
 3042 0a5c DBB2     		uxtb	r3, r3
 3043 0a5e 1A46     		mov	r2, r3
 3044 0a60 5A4B     		ldr	r3, .L225+24
 3045 0a62 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3046 0a64 534B     		ldr	r3, .L225
 3047 0a66 1B78     		ldrb	r3, [r3]
 3048 0a68 DBB2     		uxtb	r3, r3
 3049 0a6a 1946     		mov	r1, r3
 3050 0a6c 584B     		ldr	r3, .L225+28
 3051 0a6e 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3052 0a70 9A42     		cmp	r2, r3
 3053 0a72 0ED0     		beq	.L102
1054:main.c        ****             {
1055:main.c        ****                 sendMIDIControlChange(main_counter + 14, (pedals7bit[main_counter]), 1);
 3054              		.loc 1 1055 0
 3055 0a74 4F4B     		ldr	r3, .L225
 3056 0a76 1B78     		ldrb	r3, [r3]
 3057 0a78 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 74


 3058 0a7a 03F10E00 		add	r0, r3, #14
 3059 0a7e 4D4B     		ldr	r3, .L225
 3060 0a80 1B78     		ldrb	r3, [r3]
 3061 0a82 DBB2     		uxtb	r3, r3
 3062 0a84 1A46     		mov	r2, r3
 3063 0a86 514B     		ldr	r3, .L225+24
 3064 0a88 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3065 0a8a 0122     		movs	r2, #1
 3066 0a8c 1946     		mov	r1, r3
 3067 0a8e FFF7FEFF 		bl	sendMIDIControlChange
 3068              	.L102:
1056:main.c        ****             }
1057:main.c        ****             prevPedals7bit[main_counter] = pedals7bit[main_counter];
 3069              		.loc 1 1057 0
 3070 0a92 484B     		ldr	r3, .L225
 3071 0a94 1B78     		ldrb	r3, [r3]
 3072 0a96 DBB2     		uxtb	r3, r3
 3073 0a98 1A46     		mov	r2, r3
 3074 0a9a 464B     		ldr	r3, .L225
 3075 0a9c 1B78     		ldrb	r3, [r3]
 3076 0a9e DBB2     		uxtb	r3, r3
 3077 0aa0 1946     		mov	r1, r3
 3078 0aa2 4A4B     		ldr	r3, .L225+24
 3079 0aa4 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 3080 0aa6 4A4B     		ldr	r3, .L225+28
 3081 0aa8 9954     		strb	r1, [r3, r2]
1058:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 3082              		.loc 1 1058 0
 3083 0aaa 424B     		ldr	r3, .L225
 3084 0aac 1B78     		ldrb	r3, [r3]
 3085 0aae DBB2     		uxtb	r3, r3
 3086 0ab0 1A46     		mov	r2, r3
 3087 0ab2 404B     		ldr	r3, .L225
 3088 0ab4 1B78     		ldrb	r3, [r3]
 3089 0ab6 DBB2     		uxtb	r3, r3
 3090 0ab8 1946     		mov	r1, r3
 3091 0aba 3F4B     		ldr	r3, .L225+4
 3092 0abc 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3093 0ac0 444B     		ldr	r3, .L225+32
 3094 0ac2 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3095              	.LBE20:
 3096 0ac6 3DE0     		b	.L103
 3097              	.L98:
1059:main.c        ****         }
1060:main.c        ****         else
1061:main.c        ****         {
1062:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 3098              		.loc 1 1062 0
 3099 0ac8 434B     		ldr	r3, .L225+36
 3100 0aca 1B88     		ldrh	r3, [r3]
 3101 0acc 1846     		mov	r0, r3
 3102 0ace FFF7FEFF 		bl	__aeabi_ui2f
 3103 0ad2 0346     		mov	r3, r0
 3104 0ad4 4149     		ldr	r1, .L225+40
 3105 0ad6 1846     		mov	r0, r3
 3106 0ad8 FFF7FEFF 		bl	__aeabi_fmul
 3107 0adc 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 75


 3108 0ade 1846     		mov	r0, r3
 3109 0ae0 FFF7FEFF 		bl	__aeabi_f2iz
 3110 0ae4 0346     		mov	r3, r0
 3111 0ae6 1AB2     		sxth	r2, r3
 3112 0ae8 3D4B     		ldr	r3, .L225+44
 3113 0aea 1A80     		strh	r2, [r3]	@ movhi
1063:main.c        **** 
1064:main.c        ****             if (processed_volumePedal < 0)
 3114              		.loc 1 1064 0
 3115 0aec 3C4B     		ldr	r3, .L225+44
 3116 0aee B3F90030 		ldrsh	r3, [r3]
 3117 0af2 002B     		cmp	r3, #0
 3118 0af4 03DA     		bge	.L104
1065:main.c        ****             {
1066:main.c        ****                 processed_volumePedal = 0;
 3119              		.loc 1 1066 0
 3120 0af6 3A4B     		ldr	r3, .L225+44
 3121 0af8 0022     		movs	r2, #0
 3122 0afa 1A80     		strh	r2, [r3]	@ movhi
 3123 0afc 09E0     		b	.L105
 3124              	.L104:
1067:main.c        ****             }
1068:main.c        ****             else if (processed_volumePedal > 4095)
 3125              		.loc 1 1068 0
 3126 0afe 384B     		ldr	r3, .L225+44
 3127 0b00 B3F90030 		ldrsh	r3, [r3]
 3128 0b04 B3F5805F 		cmp	r3, #4096
 3129 0b08 03DB     		blt	.L105
1069:main.c        ****             {
1070:main.c        ****                  processed_volumePedal = 4095;
 3130              		.loc 1 1070 0
 3131 0b0a 354B     		ldr	r3, .L225+44
 3132 0b0c 40F6FF72 		movw	r2, #4095
 3133 0b10 1A80     		strh	r2, [r3]	@ movhi
 3134              	.L105:
1071:main.c        ****             }
1072:main.c        ****             
1073:main.c        ****             if ( processed_volumePedal != prev_processed_volumePedal)
 3135              		.loc 1 1073 0
 3136 0b12 334B     		ldr	r3, .L225+44
 3137 0b14 B3F90020 		ldrsh	r2, [r3]
 3138 0b18 324B     		ldr	r3, .L225+48
 3139 0b1a B3F90030 		ldrsh	r3, [r3]
 3140 0b1e 9A42     		cmp	r2, r3
 3141 0b20 0BD0     		beq	.L106
 3142              	.LBB21:
1074:main.c        ****             {
1075:main.c        ****                 uint16_t tempPedal = processed_volumePedal;
 3143              		.loc 1 1075 0
 3144 0b22 2F4B     		ldr	r3, .L225+44
 3145 0b24 B3F90030 		ldrsh	r3, [r3]
 3146 0b28 FB84     		strh	r3, [r7, #38]	@ movhi
1076:main.c        ****                 
1077:main.c        ****                 sendMIDIControlChange(13, ( tempPedal >> 5), 0);
 3147              		.loc 1 1077 0
 3148 0b2a FB8C     		ldrh	r3, [r7, #38]
 3149 0b2c 5B09     		lsrs	r3, r3, #5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 76


 3150 0b2e 9BB2     		uxth	r3, r3
 3151 0b30 0022     		movs	r2, #0
 3152 0b32 1946     		mov	r1, r3
 3153 0b34 0D20     		movs	r0, #13
 3154 0b36 FFF7FEFF 		bl	sendMIDIControlChange
 3155              	.L106:
 3156              	.LBE21:
1078:main.c        ****                 //sendMIDIControlChange(22, ( tempPedal & 127), 0);
1079:main.c        ****             }
1080:main.c        ****              prev_processed_volumePedal = processed_volumePedal;
 3157              		.loc 1 1080 0
 3158 0b3a 294B     		ldr	r3, .L225+44
 3159 0b3c B3F90020 		ldrsh	r2, [r3]
 3160 0b40 284B     		ldr	r3, .L225+48
 3161 0b42 1A80     		strh	r2, [r3]	@ movhi
 3162              	.L103:
1081:main.c        ****         }
1082:main.c        ****         
1083:main.c        ****         main_counter++;
 3163              		.loc 1 1083 0
 3164 0b44 1B4B     		ldr	r3, .L225
 3165 0b46 1B78     		ldrb	r3, [r3]
 3166 0b48 DBB2     		uxtb	r3, r3
 3167 0b4a 0133     		adds	r3, r3, #1
 3168 0b4c DAB2     		uxtb	r2, r3
 3169 0b4e 194B     		ldr	r3, .L225
 3170 0b50 1A70     		strb	r2, [r3]
1084:main.c        **** 
1085:main.c        ****         if (main_counter > 11)
 3171              		.loc 1 1085 0
 3172 0b52 184B     		ldr	r3, .L225
 3173 0b54 1B78     		ldrb	r3, [r3]
 3174 0b56 DBB2     		uxtb	r3, r3
 3175 0b58 0B2B     		cmp	r3, #11
 3176 0b5a 02D9     		bls	.L107
1086:main.c        ****         {
1087:main.c        ****             main_counter = 0;
 3177              		.loc 1 1087 0
 3178 0b5c 154B     		ldr	r3, .L225
 3179 0b5e 0022     		movs	r2, #0
 3180 0b60 1A70     		strb	r2, [r3]
 3181              	.L107:
1088:main.c        ****         }
1089:main.c        ****         testpin3_Write(0);
 3182              		.loc 1 1089 0
 3183 0b62 0020     		movs	r0, #0
 3184 0b64 FFF7FEFF 		bl	testpin3_Write
1090:main.c        ****         #if 0
1091:main.c        ****             
1092:main.c        ****             
1093:main.c        ****         main_counter++;
1094:main.c        ****         if (main_counter >= 11)
1095:main.c        ****         {
1096:main.c        ****                /*  
1097:main.c        ****             testpin3_Write(1);
1098:main.c        ****             I2Cbuff1[0] = 1<<6;
1099:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 77


1100:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
1101:main.c        **** 
1102:main.c        ****         //CyDelay(1);
1103:main.c        ****         
1104:main.c        ****         OLEDwriteInt(octave, 1, 0,SecondLine);
1105:main.c        **** 
1106:main.c        ****         OLED_draw();
1107:main.c        ****                     I2Cbuff1[0] = 1<<0;
1108:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1109:main.c        ****         testpin3_Write(0);
1110:main.c        ****             */
1111:main.c        ****             main_counter = 0;
1112:main.c        ****         }
1113:main.c        ****         #endif
1114:main.c        ****         testpin5_Write(1);
 3185              		.loc 1 1114 0
 3186 0b68 0120     		movs	r0, #1
 3187 0b6a FFF7FEFF 		bl	testpin5_Write
1115:main.c        ****         
1116:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 3188              		.loc 1 1116 0
 3189 0b6e 1E4B     		ldr	r3, .L225+52
 3190 0b70 1B78     		ldrb	r3, [r3]
 3191 0b72 DBB2     		uxtb	r3, r3
 3192 0b74 002B     		cmp	r3, #0
 3193 0b76 0CBF     		ite	eq
 3194 0b78 0123     		moveq	r3, #1
 3195 0b7a 0023     		movne	r3, #0
 3196 0b7c DBB2     		uxtb	r3, r3
 3197 0b7e 1B4A     		ldr	r2, .L225+56
 3198 0b80 DB00     		lsls	r3, r3, #3
 3199 0b82 1344     		add	r3, r3, r2
 3200 0b84 9B79     		ldrb	r3, [r3, #6]
 3201 0b86 DBB2     		uxtb	r3, r3
 3202 0b88 FE2B     		cmp	r3, #254
 3203 0b8a 40F05B81 		bne	.L108
 3204              		.loc 1 1116 0 is_stmt 0 discriminator 1
 3205 0b8e 164B     		ldr	r3, .L225+52
 3206 0b90 1B78     		ldrb	r3, [r3]
 3207 0b92 DBB2     		uxtb	r3, r3
 3208 0b94 002B     		cmp	r3, #0
 3209 0b96 0CBF     		ite	eq
 3210 0b98 0123     		moveq	r3, #1
 3211 0b9a 0023     		movne	r3, #0
 3212 0b9c DBB2     		uxtb	r3, r3
 3213 0b9e 134A     		ldr	r2, .L225+56
 3214 0ba0 DB00     		lsls	r3, r3, #3
 3215 0ba2 1344     		add	r3, r3, r2
 3216 0ba4 DB79     		ldrb	r3, [r3, #7]
 3217 0ba6 DBB2     		uxtb	r3, r3
 3218 0ba8 FD2B     		cmp	r3, #253
 3219 0baa 40F04B81 		bne	.L108
 3220              	.LBB22:
1117:main.c        ****         {
1118:main.c        ****             for (int i = 0; i < 2; i++)
 3221              		.loc 1 1118 0 is_stmt 1
 3222 0bae 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 78


 3223 0bb0 3B67     		str	r3, [r7, #112]
 3224 0bb2 43E1     		b	.L109
 3225              	.L226:
 3226              		.align	2
 3227              	.L225:
 3228 0bb4 00000000 		.word	main_counter
 3229 0bb8 00000000 		.word	processed_pedals
 3230 0bbc 01088039 		.word	964691969
 3231 0bc0 00000000 		.word	pedals_float
 3232 0bc4 00000000 		.word	pedal_cc_assignments
 3233 0bc8 00000000 		.word	pedals8bit
 3234 0bcc 00000000 		.word	pedals7bit
 3235 0bd0 00000000 		.word	prevPedals7bit
 3236 0bd4 00000000 		.word	prev_processed_pedals
 3237 0bd8 00000000 		.word	volumePedal
 3238 0bdc C5F1803F 		.word	1065415109
 3239 0be0 00000000 		.word	processed_volumePedal
 3240 0be4 00000000 		.word	prev_processed_volumePedal
 3241 0be8 00000000 		.word	currentBarBuffer
 3242 0bec 00000000 		.word	rxBufferBar
 3243              	.L121:
1119:main.c        ****             {
1120:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 3244              		.loc 1 1120 0
 3245 0bf0 974B     		ldr	r3, .L227
 3246 0bf2 1B78     		ldrb	r3, [r3]
 3247 0bf4 DBB2     		uxtb	r3, r3
 3248 0bf6 002B     		cmp	r3, #0
 3249 0bf8 0CBF     		ite	eq
 3250 0bfa 0123     		moveq	r3, #1
 3251 0bfc 0023     		movne	r3, #0
 3252 0bfe DBB2     		uxtb	r3, r3
 3253 0c00 1A46     		mov	r2, r3
 3254 0c02 3B6F     		ldr	r3, [r7, #112]
 3255 0c04 5B00     		lsls	r3, r3, #1
 3256 0c06 9349     		ldr	r1, .L227+4
 3257 0c08 D200     		lsls	r2, r2, #3
 3258 0c0a 0A44     		add	r2, r2, r1
 3259 0c0c 1344     		add	r3, r3, r2
 3260 0c0e 1B78     		ldrb	r3, [r3]
 3261 0c10 DBB2     		uxtb	r3, r3
 3262 0c12 9BB2     		uxth	r3, r3
 3263 0c14 1B02     		lsls	r3, r3, #8
 3264 0c16 9AB2     		uxth	r2, r3
 3265 0c18 8D4B     		ldr	r3, .L227
 3266 0c1a 1B78     		ldrb	r3, [r3]
 3267 0c1c DBB2     		uxtb	r3, r3
 3268 0c1e 002B     		cmp	r3, #0
 3269 0c20 0CBF     		ite	eq
 3270 0c22 0123     		moveq	r3, #1
 3271 0c24 0023     		movne	r3, #0
 3272 0c26 DBB2     		uxtb	r3, r3
 3273 0c28 1946     		mov	r1, r3
 3274 0c2a 3B6F     		ldr	r3, [r7, #112]
 3275 0c2c 5B00     		lsls	r3, r3, #1
 3276 0c2e 0133     		adds	r3, r3, #1
 3277 0c30 8848     		ldr	r0, .L227+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 79


 3278 0c32 C900     		lsls	r1, r1, #3
 3279 0c34 0144     		add	r1, r1, r0
 3280 0c36 0B44     		add	r3, r3, r1
 3281 0c38 1B78     		ldrb	r3, [r3]
 3282 0c3a DBB2     		uxtb	r3, r3
 3283 0c3c 9BB2     		uxth	r3, r3
 3284 0c3e 1344     		add	r3, r3, r2
 3285 0c40 99B2     		uxth	r1, r3
 3286 0c42 854A     		ldr	r2, .L227+8
 3287 0c44 3B6F     		ldr	r3, [r7, #112]
 3288 0c46 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1121:main.c        ****                 //
1122:main.c        ****                 if(bar[i] != prevBar[i])
 3289              		.loc 1 1122 0
 3290 0c4a 834A     		ldr	r2, .L227+8
 3291 0c4c 3B6F     		ldr	r3, [r7, #112]
 3292 0c4e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3293 0c52 9AB2     		uxth	r2, r3
 3294 0c54 8149     		ldr	r1, .L227+12
 3295 0c56 3B6F     		ldr	r3, [r7, #112]
 3296 0c58 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3297 0c5c 9BB2     		uxth	r3, r3
 3298 0c5e 9A42     		cmp	r2, r3
 3299 0c60 00F0E080 		beq	.L110
1123:main.c        ****                 {
1124:main.c        ****     				if ((bar[i] == 65535) || (bar[i] > fretMeasurements[0][i]))
 3300              		.loc 1 1124 0
 3301 0c64 7C4A     		ldr	r2, .L227+8
 3302 0c66 3B6F     		ldr	r3, [r7, #112]
 3303 0c68 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3304 0c6c 9BB2     		uxth	r3, r3
 3305 0c6e 4FF6FF72 		movw	r2, #65535
 3306 0c72 9342     		cmp	r3, r2
 3307 0c74 11D0     		beq	.L111
 3308              		.loc 1 1124 0 is_stmt 0 discriminator 1
 3309 0c76 784A     		ldr	r2, .L227+8
 3310 0c78 3B6F     		ldr	r3, [r7, #112]
 3311 0c7a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3312 0c7e 9BB2     		uxth	r3, r3
 3313 0c80 1846     		mov	r0, r3
 3314 0c82 FFF7FEFF 		bl	__aeabi_i2f
 3315 0c86 764A     		ldr	r2, .L227+16
 3316 0c88 3B6F     		ldr	r3, [r7, #112]
 3317 0c8a 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3318 0c8e 1946     		mov	r1, r3
 3319 0c90 FFF7FEFF 		bl	__aeabi_fcmpgt
 3320 0c94 0346     		mov	r3, r0
 3321 0c96 002B     		cmp	r3, #0
 3322 0c98 06D0     		beq	.L215
 3323              	.L111:
1125:main.c        ****     				{
1126:main.c        ****     					stringMappedPositions[i] = 1.0f;
 3324              		.loc 1 1126 0 is_stmt 1
 3325 0c9a 724A     		ldr	r2, .L227+20
 3326 0c9c 3B6F     		ldr	r3, [r7, #112]
 3327 0c9e 4FF07E51 		mov	r1, #1065353216
 3328 0ca2 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 80


 3329 0ca6 AEE0     		b	.L114
 3330              	.L215:
1127:main.c        ****     				}
1128:main.c        **** 
1129:main.c        ****     				else if ((bar[i] >= fretMeasurements[1][i]) && (bar[i] <= fretMeasurements[0][i]))
 3331              		.loc 1 1129 0
 3332 0ca8 6B4A     		ldr	r2, .L227+8
 3333 0caa 3B6F     		ldr	r3, [r7, #112]
 3334 0cac 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3335 0cb0 9BB2     		uxth	r3, r3
 3336 0cb2 1846     		mov	r0, r3
 3337 0cb4 FFF7FEFF 		bl	__aeabi_i2f
 3338 0cb8 694A     		ldr	r2, .L227+16
 3339 0cba 3B6F     		ldr	r3, [r7, #112]
 3340 0cbc 0433     		adds	r3, r3, #4
 3341 0cbe 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3342 0cc2 1946     		mov	r1, r3
 3343 0cc4 FFF7FEFF 		bl	__aeabi_fcmpge
 3344 0cc8 0346     		mov	r3, r0
 3345 0cca 002B     		cmp	r3, #0
 3346 0ccc 32D0     		beq	.L115
 3347              		.loc 1 1129 0 is_stmt 0 discriminator 1
 3348 0cce 624A     		ldr	r2, .L227+8
 3349 0cd0 3B6F     		ldr	r3, [r7, #112]
 3350 0cd2 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3351 0cd6 9BB2     		uxth	r3, r3
 3352 0cd8 1846     		mov	r0, r3
 3353 0cda FFF7FEFF 		bl	__aeabi_i2f
 3354 0cde 604A     		ldr	r2, .L227+16
 3355 0ce0 3B6F     		ldr	r3, [r7, #112]
 3356 0ce2 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3357 0ce6 1946     		mov	r1, r3
 3358 0ce8 FFF7FEFF 		bl	__aeabi_fcmple
 3359 0cec 0346     		mov	r3, r0
 3360 0cee 002B     		cmp	r3, #0
 3361 0cf0 20D0     		beq	.L115
1130:main.c        ****     				{
1131:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[0][i], fretMeasurements[1][
 3362              		.loc 1 1131 0 is_stmt 1
 3363 0cf2 594A     		ldr	r2, .L227+8
 3364 0cf4 3B6F     		ldr	r3, [r7, #112]
 3365 0cf6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3366 0cfa 9BB2     		uxth	r3, r3
 3367 0cfc 1846     		mov	r0, r3
 3368 0cfe FFF7FEFF 		bl	__aeabi_ui2f
 3369 0d02 0446     		mov	r4, r0
 3370 0d04 564A     		ldr	r2, .L227+16
 3371 0d06 3B6F     		ldr	r3, [r7, #112]
 3372 0d08 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3373 0d0c 544A     		ldr	r2, .L227+16
 3374 0d0e 3B6F     		ldr	r3, [r7, #112]
 3375 0d10 0433     		adds	r3, r3, #4
 3376 0d12 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3377 0d16 544B     		ldr	r3, .L227+24
 3378 0d18 1868     		ldr	r0, [r3]	@ float
 3379 0d1a 534B     		ldr	r3, .L227+24
 3380 0d1c 5B68     		ldr	r3, [r3, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 81


 3381 0d1e 0093     		str	r3, [sp]	@ float
 3382 0d20 0346     		mov	r3, r0
 3383 0d22 2046     		mov	r0, r4
 3384 0d24 FFF7FEFF 		bl	map
 3385 0d28 0146     		mov	r1, r0
 3386 0d2a 4E4A     		ldr	r2, .L227+20
 3387 0d2c 3B6F     		ldr	r3, [r7, #112]
 3388 0d2e 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3389 0d32 68E0     		b	.L114
 3390              	.L115:
1132:main.c        ****     				}
1133:main.c        **** 
1134:main.c        ****     				else if ((bar[i] >= fretMeasurements[2][i]) && (bar[i] < fretMeasurements[1][i]))
 3391              		.loc 1 1134 0
 3392 0d34 484A     		ldr	r2, .L227+8
 3393 0d36 3B6F     		ldr	r3, [r7, #112]
 3394 0d38 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3395 0d3c 9BB2     		uxth	r3, r3
 3396 0d3e 1846     		mov	r0, r3
 3397 0d40 FFF7FEFF 		bl	__aeabi_i2f
 3398 0d44 464A     		ldr	r2, .L227+16
 3399 0d46 3B6F     		ldr	r3, [r7, #112]
 3400 0d48 0833     		adds	r3, r3, #8
 3401 0d4a 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3402 0d4e 1946     		mov	r1, r3
 3403 0d50 FFF7FEFF 		bl	__aeabi_fcmpge
 3404 0d54 0346     		mov	r3, r0
 3405 0d56 002B     		cmp	r3, #0
 3406 0d58 34D0     		beq	.L118
 3407              		.loc 1 1134 0 is_stmt 0 discriminator 1
 3408 0d5a 3F4A     		ldr	r2, .L227+8
 3409 0d5c 3B6F     		ldr	r3, [r7, #112]
 3410 0d5e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3411 0d62 9BB2     		uxth	r3, r3
 3412 0d64 1846     		mov	r0, r3
 3413 0d66 FFF7FEFF 		bl	__aeabi_i2f
 3414 0d6a 3D4A     		ldr	r2, .L227+16
 3415 0d6c 3B6F     		ldr	r3, [r7, #112]
 3416 0d6e 0433     		adds	r3, r3, #4
 3417 0d70 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3418 0d74 1946     		mov	r1, r3
 3419 0d76 FFF7FEFF 		bl	__aeabi_fcmplt
 3420 0d7a 0346     		mov	r3, r0
 3421 0d7c 002B     		cmp	r3, #0
 3422 0d7e 21D0     		beq	.L118
1135:main.c        ****     				{
1136:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[1][i], fretMeasurements[2][
 3423              		.loc 1 1136 0 is_stmt 1
 3424 0d80 354A     		ldr	r2, .L227+8
 3425 0d82 3B6F     		ldr	r3, [r7, #112]
 3426 0d84 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3427 0d88 9BB2     		uxth	r3, r3
 3428 0d8a 1846     		mov	r0, r3
 3429 0d8c FFF7FEFF 		bl	__aeabi_ui2f
 3430 0d90 0446     		mov	r4, r0
 3431 0d92 334A     		ldr	r2, .L227+16
 3432 0d94 3B6F     		ldr	r3, [r7, #112]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 82


 3433 0d96 0433     		adds	r3, r3, #4
 3434 0d98 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3435 0d9c 304A     		ldr	r2, .L227+16
 3436 0d9e 3B6F     		ldr	r3, [r7, #112]
 3437 0da0 0833     		adds	r3, r3, #8
 3438 0da2 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3439 0da6 304B     		ldr	r3, .L227+24
 3440 0da8 5868     		ldr	r0, [r3, #4]	@ float
 3441 0daa 2F4B     		ldr	r3, .L227+24
 3442 0dac 9B68     		ldr	r3, [r3, #8]	@ float
 3443 0dae 0093     		str	r3, [sp]	@ float
 3444 0db0 0346     		mov	r3, r0
 3445 0db2 2046     		mov	r0, r4
 3446 0db4 FFF7FEFF 		bl	map
 3447 0db8 0146     		mov	r1, r0
 3448 0dba 2A4A     		ldr	r2, .L227+20
 3449 0dbc 3B6F     		ldr	r3, [r7, #112]
 3450 0dbe 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3451 0dc2 20E0     		b	.L114
 3452              	.L118:
1137:main.c        ****     				}
1138:main.c        **** 
1139:main.c        ****     				else
1140:main.c        ****     				{
1141:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[2][i], fretMeasurements[3][
 3453              		.loc 1 1141 0
 3454 0dc4 244A     		ldr	r2, .L227+8
 3455 0dc6 3B6F     		ldr	r3, [r7, #112]
 3456 0dc8 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3457 0dcc 9BB2     		uxth	r3, r3
 3458 0dce 1846     		mov	r0, r3
 3459 0dd0 FFF7FEFF 		bl	__aeabi_ui2f
 3460 0dd4 0446     		mov	r4, r0
 3461 0dd6 224A     		ldr	r2, .L227+16
 3462 0dd8 3B6F     		ldr	r3, [r7, #112]
 3463 0dda 0833     		adds	r3, r3, #8
 3464 0ddc 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3465 0de0 1F4A     		ldr	r2, .L227+16
 3466 0de2 3B6F     		ldr	r3, [r7, #112]
 3467 0de4 0C33     		adds	r3, r3, #12
 3468 0de6 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3469 0dea 1F4B     		ldr	r3, .L227+24
 3470 0dec 9868     		ldr	r0, [r3, #8]	@ float
 3471 0dee 1E4B     		ldr	r3, .L227+24
 3472 0df0 DB68     		ldr	r3, [r3, #12]	@ float
 3473 0df2 0093     		str	r3, [sp]	@ float
 3474 0df4 0346     		mov	r3, r0
 3475 0df6 2046     		mov	r0, r4
 3476 0df8 FFF7FEFF 		bl	map
 3477 0dfc 0146     		mov	r1, r0
 3478 0dfe 194A     		ldr	r2, .L227+20
 3479 0e00 3B6F     		ldr	r3, [r7, #112]
 3480 0e02 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3481              	.L114:
1142:main.c        ****     				}
1143:main.c        **** 
1144:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 83


 3482              		.loc 1 1144 0
 3483 0e06 174A     		ldr	r2, .L227+20
 3484 0e08 3B6F     		ldr	r3, [r7, #112]
 3485 0e0a 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3486 0e0e 1946     		mov	r1, r3
 3487 0e10 4FF07E50 		mov	r0, #1065353216
 3488 0e14 FFF7FEFF 		bl	__aeabi_fdiv
 3489 0e18 0346     		mov	r3, r0
 3490 0e1a 1946     		mov	r1, r3
 3491 0e1c 134A     		ldr	r2, .L227+28
 3492 0e1e 3B6F     		ldr	r3, [r7, #112]
 3493 0e20 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3494              	.L110:
1145:main.c        ****                 }
1146:main.c        ****                 //
1147:main.c        ****                 prevBar[i] = bar[i];
 3495              		.loc 1 1147 0 discriminator 2
 3496 0e24 0C4A     		ldr	r2, .L227+8
 3497 0e26 3B6F     		ldr	r3, [r7, #112]
 3498 0e28 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3499 0e2c 99B2     		uxth	r1, r3
 3500 0e2e 0B4A     		ldr	r2, .L227+12
 3501 0e30 3B6F     		ldr	r3, [r7, #112]
 3502 0e32 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1118:main.c        ****             {
 3503              		.loc 1 1118 0 discriminator 2
 3504 0e36 3B6F     		ldr	r3, [r7, #112]
 3505 0e38 0133     		adds	r3, r3, #1
 3506 0e3a 3B67     		str	r3, [r7, #112]
 3507              	.L109:
1118:main.c        ****             {
 3508              		.loc 1 1118 0 is_stmt 0 discriminator 1
 3509 0e3c 3B6F     		ldr	r3, [r7, #112]
 3510 0e3e 012B     		cmp	r3, #1
 3511 0e40 7FF7D6AE 		ble	.L121
 3512              	.L108:
 3513              	.LBE22:
1148:main.c        ****             }
1149:main.c        ****         }
1150:main.c        ****         
1151:main.c        ****         testpin5_Write(0);
 3514              		.loc 1 1151 0 is_stmt 1
 3515 0e44 0020     		movs	r0, #0
 3516 0e46 FFF7FEFF 		bl	testpin5_Write
 3517              	.LBB23:
1152:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 3518              		.loc 1 1152 0
 3519 0e4a 0023     		movs	r3, #0
 3520 0e4c FB66     		str	r3, [r7, #108]
 3521 0e4e 2AE0     		b	.L122
 3522              	.L228:
 3523              		.align	2
 3524              	.L227:
 3525 0e50 00000000 		.word	currentBarBuffer
 3526 0e54 00000000 		.word	rxBufferBar
 3527 0e58 00000000 		.word	bar
 3528 0e5c 00000000 		.word	prevBar
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 84


 3529 0e60 00000000 		.word	fretMeasurements
 3530 0e64 00000000 		.word	stringMappedPositions
 3531 0e68 00000000 		.word	fretScaling
 3532 0e6c 00000000 		.word	invStringMappedPositions
 3533              	.L124:
1153:main.c        ****         {
1154:main.c        ****             if (strings[i] != prevStrings[i])
 3534              		.loc 1 1154 0
 3535 0e70 AF4A     		ldr	r2, .L229
 3536 0e72 FB6E     		ldr	r3, [r7, #108]
 3537 0e74 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3538 0e78 9AB2     		uxth	r2, r3
 3539 0e7a AE49     		ldr	r1, .L229+4
 3540 0e7c FB6E     		ldr	r3, [r7, #108]
 3541 0e7e 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3542 0e82 9BB2     		uxth	r3, r3
 3543 0e84 9A42     		cmp	r2, r3
 3544 0e86 02D0     		beq	.L123
1155:main.c        ****             {
1156:main.c        ****                 noteEvent(i);
 3545              		.loc 1 1156 0
 3546 0e88 F86E     		ldr	r0, [r7, #108]
 3547 0e8a FFF7FEFF 		bl	noteEvent
 3548              	.L123:
1157:main.c        ****             }
1158:main.c        ****             prevStrings[i] = strings[i];
 3549              		.loc 1 1158 0 discriminator 2
 3550 0e8e A84A     		ldr	r2, .L229
 3551 0e90 FB6E     		ldr	r3, [r7, #108]
 3552 0e92 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3553 0e96 99B2     		uxth	r1, r3
 3554 0e98 A64A     		ldr	r2, .L229+4
 3555 0e9a FB6E     		ldr	r3, [r7, #108]
 3556 0e9c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1152:main.c        ****         {
 3557              		.loc 1 1152 0 discriminator 2
 3558 0ea0 FB6E     		ldr	r3, [r7, #108]
 3559 0ea2 0133     		adds	r3, r3, #1
 3560 0ea4 FB66     		str	r3, [r7, #108]
 3561              	.L122:
1152:main.c        ****         {
 3562              		.loc 1 1152 0 is_stmt 0 discriminator 1
 3563 0ea6 A44B     		ldr	r3, .L229+8
 3564 0ea8 1B68     		ldr	r3, [r3]
 3565 0eaa FA6E     		ldr	r2, [r7, #108]
 3566 0eac 9A42     		cmp	r2, r3
 3567 0eae DFDB     		blt	.L124
 3568              	.LBE23:
1159:main.c        ****         }
1160:main.c        ****         
1161:main.c        **** 
1162:main.c        **** 
1163:main.c        ****         
1164:main.c        ****         
1165:main.c        ****         if (!oct1_Read())
 3569              		.loc 1 1165 0 is_stmt 1
 3570 0eb0 FFF7FEFF 		bl	oct1_Read
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 85


 3571 0eb4 0346     		mov	r3, r0
 3572 0eb6 002B     		cmp	r3, #0
 3573 0eb8 24D1     		bne	.L125
1166:main.c        ****         {
1167:main.c        ****             if (octave > 4)
 3574              		.loc 1 1167 0
 3575 0eba A04B     		ldr	r3, .L229+12
 3576 0ebc 1B68     		ldr	r3, [r3]
 3577 0ebe 042B     		cmp	r3, #4
 3578 0ec0 03DD     		ble	.L126
1168:main.c        ****             {
1169:main.c        ****                 octave = 4;
 3579              		.loc 1 1169 0
 3580 0ec2 9E4B     		ldr	r3, .L229+12
 3581 0ec4 0422     		movs	r2, #4
 3582 0ec6 1A60     		str	r2, [r3]
 3583 0ec8 0CE0     		b	.L127
 3584              	.L126:
1170:main.c        **** 
1171:main.c        ****             }
1172:main.c        ****             else if ((oct1Up) && (octave > 0))
 3585              		.loc 1 1172 0
 3586 0eca 9D4B     		ldr	r3, .L229+16
 3587 0ecc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3588 0ece 002B     		cmp	r3, #0
 3589 0ed0 08D0     		beq	.L127
 3590              		.loc 1 1172 0 is_stmt 0 discriminator 1
 3591 0ed2 9A4B     		ldr	r3, .L229+12
 3592 0ed4 1B68     		ldr	r3, [r3]
 3593 0ed6 002B     		cmp	r3, #0
 3594 0ed8 04DD     		ble	.L127
1173:main.c        ****             {
1174:main.c        ****                 octave--;
 3595              		.loc 1 1174 0 is_stmt 1
 3596 0eda 984B     		ldr	r3, .L229+12
 3597 0edc 1B68     		ldr	r3, [r3]
 3598 0ede 013B     		subs	r3, r3, #1
 3599 0ee0 964A     		ldr	r2, .L229+12
 3600 0ee2 1360     		str	r3, [r2]
 3601              	.L127:
1175:main.c        ****             }
1176:main.c        ****             LED_amber1_Write(1);
 3602              		.loc 1 1176 0
 3603 0ee4 0120     		movs	r0, #1
 3604 0ee6 FFF7FEFF 		bl	LED_amber1_Write
1177:main.c        ****             LED_amber2_Write(0);
 3605              		.loc 1 1177 0
 3606 0eea 0020     		movs	r0, #0
 3607 0eec FFF7FEFF 		bl	LED_amber2_Write
1178:main.c        ****             LED_amber3_Write(0);
 3608              		.loc 1 1178 0
 3609 0ef0 0020     		movs	r0, #0
 3610 0ef2 FFF7FEFF 		bl	LED_amber3_Write
1179:main.c        ****             LED_amber4_Write(0);
 3611              		.loc 1 1179 0
 3612 0ef6 0020     		movs	r0, #0
 3613 0ef8 FFF7FEFF 		bl	LED_amber4_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 86


1180:main.c        ****             oct1Up = 0;
 3614              		.loc 1 1180 0
 3615 0efc 904B     		ldr	r3, .L229+16
 3616 0efe 0022     		movs	r2, #0
 3617 0f00 1A70     		strb	r2, [r3]
 3618 0f02 07E0     		b	.L128
 3619              	.L125:
1181:main.c        ****         }
1182:main.c        ****         
1183:main.c        ****         else if (oct1_Read())
 3620              		.loc 1 1183 0
 3621 0f04 FFF7FEFF 		bl	oct1_Read
 3622 0f08 0346     		mov	r3, r0
 3623 0f0a 002B     		cmp	r3, #0
 3624 0f0c 02D0     		beq	.L128
1184:main.c        ****         {
1185:main.c        ****             oct1Up = 1;
 3625              		.loc 1 1185 0
 3626 0f0e 8C4B     		ldr	r3, .L229+16
 3627 0f10 0122     		movs	r2, #1
 3628 0f12 1A70     		strb	r2, [r3]
 3629              	.L128:
1186:main.c        ****         }
1187:main.c        ****         
1188:main.c        ****         if (!oct2_Read())
 3630              		.loc 1 1188 0
 3631 0f14 FFF7FEFF 		bl	oct2_Read
 3632 0f18 0346     		mov	r3, r0
 3633 0f1a 002B     		cmp	r3, #0
 3634 0f1c 0ED1     		bne	.L129
1189:main.c        ****         {
1190:main.c        ****             octave = 5;
 3635              		.loc 1 1190 0
 3636 0f1e 874B     		ldr	r3, .L229+12
 3637 0f20 0522     		movs	r2, #5
 3638 0f22 1A60     		str	r2, [r3]
1191:main.c        ****             LED_amber1_Write(0);
 3639              		.loc 1 1191 0
 3640 0f24 0020     		movs	r0, #0
 3641 0f26 FFF7FEFF 		bl	LED_amber1_Write
1192:main.c        ****             LED_amber2_Write(1);
 3642              		.loc 1 1192 0
 3643 0f2a 0120     		movs	r0, #1
 3644 0f2c FFF7FEFF 		bl	LED_amber2_Write
1193:main.c        ****             LED_amber3_Write(0);
 3645              		.loc 1 1193 0
 3646 0f30 0020     		movs	r0, #0
 3647 0f32 FFF7FEFF 		bl	LED_amber3_Write
1194:main.c        ****             LED_amber4_Write(0);
 3648              		.loc 1 1194 0
 3649 0f36 0020     		movs	r0, #0
 3650 0f38 FFF7FEFF 		bl	LED_amber4_Write
 3651              	.L129:
1195:main.c        ****         }
1196:main.c        ****         if (!oct3_Read())
 3652              		.loc 1 1196 0
 3653 0f3c FFF7FEFF 		bl	oct3_Read
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 87


 3654 0f40 0346     		mov	r3, r0
 3655 0f42 002B     		cmp	r3, #0
 3656 0f44 0ED1     		bne	.L130
1197:main.c        ****         {
1198:main.c        ****             octave = 6;
 3657              		.loc 1 1198 0
 3658 0f46 7D4B     		ldr	r3, .L229+12
 3659 0f48 0622     		movs	r2, #6
 3660 0f4a 1A60     		str	r2, [r3]
1199:main.c        ****             LED_amber1_Write(0);
 3661              		.loc 1 1199 0
 3662 0f4c 0020     		movs	r0, #0
 3663 0f4e FFF7FEFF 		bl	LED_amber1_Write
1200:main.c        ****             LED_amber2_Write(0);
 3664              		.loc 1 1200 0
 3665 0f52 0020     		movs	r0, #0
 3666 0f54 FFF7FEFF 		bl	LED_amber2_Write
1201:main.c        ****             LED_amber3_Write(1);
 3667              		.loc 1 1201 0
 3668 0f58 0120     		movs	r0, #1
 3669 0f5a FFF7FEFF 		bl	LED_amber3_Write
1202:main.c        ****             LED_amber4_Write(0);            
 3670              		.loc 1 1202 0
 3671 0f5e 0020     		movs	r0, #0
 3672 0f60 FFF7FEFF 		bl	LED_amber4_Write
 3673              	.L130:
1203:main.c        ****         }
1204:main.c        ****         if (!oct4_Read())
 3674              		.loc 1 1204 0
 3675 0f64 FFF7FEFF 		bl	oct4_Read
 3676 0f68 0346     		mov	r3, r0
 3677 0f6a 002B     		cmp	r3, #0
 3678 0f6c 24D1     		bne	.L131
1205:main.c        ****         {
1206:main.c        ****             if (octave < 7)
 3679              		.loc 1 1206 0
 3680 0f6e 734B     		ldr	r3, .L229+12
 3681 0f70 1B68     		ldr	r3, [r3]
 3682 0f72 062B     		cmp	r3, #6
 3683 0f74 03DC     		bgt	.L132
1207:main.c        ****             {
1208:main.c        ****                 octave = 7;
 3684              		.loc 1 1208 0
 3685 0f76 714B     		ldr	r3, .L229+12
 3686 0f78 0722     		movs	r2, #7
 3687 0f7a 1A60     		str	r2, [r3]
 3688 0f7c 0CE0     		b	.L133
 3689              	.L132:
1209:main.c        **** 
1210:main.c        ****             }
1211:main.c        ****             else if ((oct4Up) && (octave < 11))
 3690              		.loc 1 1211 0
 3691 0f7e 714B     		ldr	r3, .L229+20
 3692 0f80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3693 0f82 002B     		cmp	r3, #0
 3694 0f84 08D0     		beq	.L133
 3695              		.loc 1 1211 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 88


 3696 0f86 6D4B     		ldr	r3, .L229+12
 3697 0f88 1B68     		ldr	r3, [r3]
 3698 0f8a 0A2B     		cmp	r3, #10
 3699 0f8c 04DC     		bgt	.L133
1212:main.c        ****             {
1213:main.c        ****                 octave++;
 3700              		.loc 1 1213 0 is_stmt 1
 3701 0f8e 6B4B     		ldr	r3, .L229+12
 3702 0f90 1B68     		ldr	r3, [r3]
 3703 0f92 0133     		adds	r3, r3, #1
 3704 0f94 694A     		ldr	r2, .L229+12
 3705 0f96 1360     		str	r3, [r2]
 3706              	.L133:
1214:main.c        **** 
1215:main.c        ****             }
1216:main.c        ****             LED_amber1_Write(0);
 3707              		.loc 1 1216 0
 3708 0f98 0020     		movs	r0, #0
 3709 0f9a FFF7FEFF 		bl	LED_amber1_Write
1217:main.c        ****             LED_amber2_Write(0);
 3710              		.loc 1 1217 0
 3711 0f9e 0020     		movs	r0, #0
 3712 0fa0 FFF7FEFF 		bl	LED_amber2_Write
1218:main.c        ****             LED_amber3_Write(0);
 3713              		.loc 1 1218 0
 3714 0fa4 0020     		movs	r0, #0
 3715 0fa6 FFF7FEFF 		bl	LED_amber3_Write
1219:main.c        ****             LED_amber4_Write(1);
 3716              		.loc 1 1219 0
 3717 0faa 0120     		movs	r0, #1
 3718 0fac FFF7FEFF 		bl	LED_amber4_Write
1220:main.c        ****             oct4Up = 0;
 3719              		.loc 1 1220 0
 3720 0fb0 644B     		ldr	r3, .L229+20
 3721 0fb2 0022     		movs	r2, #0
 3722 0fb4 1A70     		strb	r2, [r3]
 3723 0fb6 07E0     		b	.L134
 3724              	.L131:
1221:main.c        ****         }
1222:main.c        ****         
1223:main.c        ****         else if (oct4_Read())
 3725              		.loc 1 1223 0
 3726 0fb8 FFF7FEFF 		bl	oct4_Read
 3727 0fbc 0346     		mov	r3, r0
 3728 0fbe 002B     		cmp	r3, #0
 3729 0fc0 02D0     		beq	.L134
1224:main.c        ****         {
1225:main.c        ****             oct4Up = 1;
 3730              		.loc 1 1225 0
 3731 0fc2 604B     		ldr	r3, .L229+20
 3732 0fc4 0122     		movs	r2, #1
 3733 0fc6 1A70     		strb	r2, [r3]
 3734              	.L134:
1226:main.c        ****         }
1227:main.c        ****         
1228:main.c        ****         if (!neck1_button_Read())
 3735              		.loc 1 1228 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 89


 3736 0fc8 FFF7FEFF 		bl	neck1_button_Read
 3737 0fcc 0346     		mov	r3, r0
 3738 0fce 002B     		cmp	r3, #0
 3739 0fd0 10D1     		bne	.L135
1229:main.c        ****         {
1230:main.c        ****             currentNeck = 0;
 3740              		.loc 1 1230 0
 3741 0fd2 5D4B     		ldr	r3, .L229+24
 3742 0fd4 0022     		movs	r2, #0
 3743 0fd6 1A60     		str	r2, [r3]
1231:main.c        ****             currentCopedent = necks[currentNeck];
 3744              		.loc 1 1231 0
 3745 0fd8 5B4B     		ldr	r3, .L229+24
 3746 0fda 1B68     		ldr	r3, [r3]
 3747 0fdc 5B4A     		ldr	r2, .L229+28
 3748 0fde D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3749 0fe0 5B4B     		ldr	r3, .L229+32
 3750 0fe2 1A70     		strb	r2, [r3]
1232:main.c        ****             LED_red1_Write(0);
 3751              		.loc 1 1232 0
 3752 0fe4 0020     		movs	r0, #0
 3753 0fe6 FFF7FEFF 		bl	LED_red1_Write
1233:main.c        ****             LED_green2_Write(1);
 3754              		.loc 1 1233 0
 3755 0fea 0120     		movs	r0, #1
 3756 0fec FFF7FEFF 		bl	LED_green2_Write
1234:main.c        ****             displayCurrentPresetNameAndCopedent();
 3757              		.loc 1 1234 0
 3758 0ff0 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3759              	.L135:
1235:main.c        ****         }
1236:main.c        ****         if (!neck2_button_Read())
 3760              		.loc 1 1236 0
 3761 0ff4 FFF7FEFF 		bl	neck2_button_Read
 3762 0ff8 0346     		mov	r3, r0
 3763 0ffa 002B     		cmp	r3, #0
 3764 0ffc 10D1     		bne	.L136
1237:main.c        ****         {
1238:main.c        ****             currentNeck = 1;
 3765              		.loc 1 1238 0
 3766 0ffe 524B     		ldr	r3, .L229+24
 3767 1000 0122     		movs	r2, #1
 3768 1002 1A60     		str	r2, [r3]
1239:main.c        ****             currentCopedent = necks[currentNeck];            
 3769              		.loc 1 1239 0
 3770 1004 504B     		ldr	r3, .L229+24
 3771 1006 1B68     		ldr	r3, [r3]
 3772 1008 504A     		ldr	r2, .L229+28
 3773 100a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3774 100c 504B     		ldr	r3, .L229+32
 3775 100e 1A70     		strb	r2, [r3]
1240:main.c        ****             LED_red1_Write(1);
 3776              		.loc 1 1240 0
 3777 1010 0120     		movs	r0, #1
 3778 1012 FFF7FEFF 		bl	LED_red1_Write
1241:main.c        ****             LED_green2_Write(0);          
 3779              		.loc 1 1241 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 90


 3780 1016 0020     		movs	r0, #0
 3781 1018 FFF7FEFF 		bl	LED_green2_Write
1242:main.c        ****             displayCurrentPresetNameAndCopedent();
 3782              		.loc 1 1242 0
 3783 101c FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3784              	.L136:
1243:main.c        ****         }
1244:main.c        ****         
1245:main.c        ****         if ((!enter_button_Read()) && (enterUp))
 3785              		.loc 1 1245 0
 3786 1020 FFF7FEFF 		bl	enter_button_Read
 3787 1024 0346     		mov	r3, r0
 3788 1026 002B     		cmp	r3, #0
 3789 1028 16D1     		bne	.L137
 3790              		.loc 1 1245 0 is_stmt 0 discriminator 1
 3791 102a 4A4B     		ldr	r3, .L229+36
 3792 102c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3793 102e 002B     		cmp	r3, #0
 3794 1030 12D0     		beq	.L137
1246:main.c        ****         {
1247:main.c        ****             dualSlider = !dualSlider;
 3795              		.loc 1 1247 0 is_stmt 1
 3796 1032 494B     		ldr	r3, .L229+40
 3797 1034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3798 1036 002B     		cmp	r3, #0
 3799 1038 0CBF     		ite	eq
 3800 103a 0123     		moveq	r3, #1
 3801 103c 0023     		movne	r3, #0
 3802 103e DBB2     		uxtb	r3, r3
 3803 1040 1A46     		mov	r2, r3
 3804 1042 454B     		ldr	r3, .L229+40
 3805 1044 1A70     		strb	r2, [r3]
1248:main.c        ****             LED_green1_Write(dualSlider);
 3806              		.loc 1 1248 0
 3807 1046 444B     		ldr	r3, .L229+40
 3808 1048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3809 104a 1846     		mov	r0, r3
 3810 104c FFF7FEFF 		bl	LED_green1_Write
1249:main.c        ****             enterUp = 0;
 3811              		.loc 1 1249 0
 3812 1050 404B     		ldr	r3, .L229+36
 3813 1052 0022     		movs	r2, #0
 3814 1054 1A70     		strb	r2, [r3]
 3815 1056 07E0     		b	.L138
 3816              	.L137:
1250:main.c        ****         }
1251:main.c        ****         else if (enter_button_Read())
 3817              		.loc 1 1251 0
 3818 1058 FFF7FEFF 		bl	enter_button_Read
 3819 105c 0346     		mov	r3, r0
 3820 105e 002B     		cmp	r3, #0
 3821 1060 02D0     		beq	.L138
1252:main.c        ****         {
1253:main.c        ****             enterUp = 1;
 3822              		.loc 1 1253 0
 3823 1062 3C4B     		ldr	r3, .L229+36
 3824 1064 0122     		movs	r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 91


 3825 1066 1A70     		strb	r2, [r3]
 3826              	.L138:
1254:main.c        ****         }
1255:main.c        ****         
1256:main.c        ****         
1257:main.c        ****         if (!editMode)
 3827              		.loc 1 1257 0
 3828 1068 3C4B     		ldr	r3, .L229+44
 3829 106a 1B68     		ldr	r3, [r3]
 3830 106c 002B     		cmp	r3, #0
 3831 106e 40F0CD80 		bne	.L139
1258:main.c        ****         {
1259:main.c        ****         
1260:main.c        ****             if ((!button1_Read()) && (button1Up))
 3832              		.loc 1 1260 0
 3833 1072 FFF7FEFF 		bl	button1_Read
 3834 1076 0346     		mov	r3, r0
 3835 1078 002B     		cmp	r3, #0
 3836 107a 25D1     		bne	.L140
 3837              		.loc 1 1260 0 is_stmt 0 discriminator 1
 3838 107c 384B     		ldr	r3, .L229+48
 3839 107e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3840 1080 002B     		cmp	r3, #0
 3841 1082 21D0     		beq	.L140
1261:main.c        ****             {
1262:main.c        ****                 currentCopedent -= 1;
 3842              		.loc 1 1262 0 is_stmt 1
 3843 1084 324B     		ldr	r3, .L229+32
 3844 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3845 1088 013B     		subs	r3, r3, #1
 3846 108a DAB2     		uxtb	r2, r3
 3847 108c 304B     		ldr	r3, .L229+32
 3848 108e 1A70     		strb	r2, [r3]
1263:main.c        ****                 currentCopedent &= 31;
 3849              		.loc 1 1263 0
 3850 1090 2F4B     		ldr	r3, .L229+32
 3851 1092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3852 1094 03F01F03 		and	r3, r3, #31
 3853 1098 DAB2     		uxtb	r2, r3
 3854 109a 2D4B     		ldr	r3, .L229+32
 3855 109c 1A70     		strb	r2, [r3]
1264:main.c        ****                 necks[currentNeck] = currentCopedent;
 3856              		.loc 1 1264 0
 3857 109e 2A4B     		ldr	r3, .L229+24
 3858 10a0 1B68     		ldr	r3, [r3]
 3859 10a2 2B4A     		ldr	r2, .L229+32
 3860 10a4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3861 10a6 294A     		ldr	r2, .L229+28
 3862 10a8 D154     		strb	r1, [r2, r3]
1265:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3863              		.loc 1 1265 0
 3864 10aa 294B     		ldr	r3, .L229+32
 3865 10ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3866 10ae 264B     		ldr	r3, .L229+24
 3867 10b0 1B68     		ldr	r3, [r3]
 3868 10b2 9BB2     		uxth	r3, r3
 3869 10b4 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 92


 3870 10b6 1046     		mov	r0, r2
 3871 10b8 FFF7FEFF 		bl	EEPROM_WriteByte
1266:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3872              		.loc 1 1266 0
 3873 10bc FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1267:main.c        ****                 button1Up = 0;
 3874              		.loc 1 1267 0
 3875 10c0 274B     		ldr	r3, .L229+48
 3876 10c2 0022     		movs	r2, #0
 3877 10c4 1A70     		strb	r2, [r3]
 3878 10c6 07E0     		b	.L141
 3879              	.L140:
1268:main.c        ****             }
1269:main.c        ****             else if (button1_Read())
 3880              		.loc 1 1269 0
 3881 10c8 FFF7FEFF 		bl	button1_Read
 3882 10cc 0346     		mov	r3, r0
 3883 10ce 002B     		cmp	r3, #0
 3884 10d0 02D0     		beq	.L141
1270:main.c        ****             {
1271:main.c        ****                 button1Up = 1;
 3885              		.loc 1 1271 0
 3886 10d2 234B     		ldr	r3, .L229+48
 3887 10d4 0122     		movs	r2, #1
 3888 10d6 1A70     		strb	r2, [r3]
 3889              	.L141:
1272:main.c        ****             }
1273:main.c        ****             
1274:main.c        ****             if ((!button2_Read()) && (button2Up))
 3890              		.loc 1 1274 0
 3891 10d8 FFF7FEFF 		bl	button2_Read
 3892 10dc 0346     		mov	r3, r0
 3893 10de 002B     		cmp	r3, #0
 3894 10e0 42D1     		bne	.L142
 3895              		.loc 1 1274 0 is_stmt 0 discriminator 1
 3896 10e2 204B     		ldr	r3, .L229+52
 3897 10e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3898 10e6 002B     		cmp	r3, #0
 3899 10e8 3ED0     		beq	.L142
1275:main.c        ****             {
1276:main.c        ****                 currentCopedent += 1;
 3900              		.loc 1 1276 0 is_stmt 1
 3901 10ea 194B     		ldr	r3, .L229+32
 3902 10ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3903 10ee 0133     		adds	r3, r3, #1
 3904 10f0 DAB2     		uxtb	r2, r3
 3905 10f2 174B     		ldr	r3, .L229+32
 3906 10f4 1A70     		strb	r2, [r3]
1277:main.c        ****                 currentCopedent &= 31;
 3907              		.loc 1 1277 0
 3908 10f6 164B     		ldr	r3, .L229+32
 3909 10f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3910 10fa 03F01F03 		and	r3, r3, #31
 3911 10fe DAB2     		uxtb	r2, r3
 3912 1100 134B     		ldr	r3, .L229+32
 3913 1102 1A70     		strb	r2, [r3]
1278:main.c        ****                 necks[currentNeck] = currentCopedent;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 93


 3914              		.loc 1 1278 0
 3915 1104 104B     		ldr	r3, .L229+24
 3916 1106 1B68     		ldr	r3, [r3]
 3917 1108 114A     		ldr	r2, .L229+32
 3918 110a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3919 110c 0F4A     		ldr	r2, .L229+28
 3920 110e D154     		strb	r1, [r2, r3]
1279:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3921              		.loc 1 1279 0
 3922 1110 0F4B     		ldr	r3, .L229+32
 3923 1112 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3924 1114 0C4B     		ldr	r3, .L229+24
 3925 1116 1B68     		ldr	r3, [r3]
 3926 1118 9BB2     		uxth	r3, r3
 3927 111a 1946     		mov	r1, r3
 3928 111c 1046     		mov	r0, r2
 3929 111e FFF7FEFF 		bl	EEPROM_WriteByte
1280:main.c        ****                 
1281:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3930              		.loc 1 1281 0
 3931 1122 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1282:main.c        ****                 button2Up = 0;
 3932              		.loc 1 1282 0
 3933 1126 0F4B     		ldr	r3, .L229+52
 3934 1128 0022     		movs	r2, #0
 3935 112a 1A70     		strb	r2, [r3]
 3936 112c 24E0     		b	.L143
 3937              	.L230:
 3938 112e 00BF     		.align	2
 3939              	.L229:
 3940 1130 00000000 		.word	strings
 3941 1134 00000000 		.word	prevStrings
 3942 1138 00000000 		.word	numStrings
 3943 113c 00000000 		.word	octave
 3944 1140 00000000 		.word	oct1Up
 3945 1144 00000000 		.word	oct4Up
 3946 1148 00000000 		.word	currentNeck
 3947 114c 00000000 		.word	necks
 3948 1150 00000000 		.word	currentCopedent
 3949 1154 00000000 		.word	enterUp
 3950 1158 00000000 		.word	dualSlider
 3951 115c 00000000 		.word	editMode
 3952 1160 00000000 		.word	button1Up
 3953 1164 00000000 		.word	button2Up
 3954              	.L142:
1283:main.c        ****             }
1284:main.c        ****             else if (button2_Read())
 3955              		.loc 1 1284 0
 3956 1168 FFF7FEFF 		bl	button2_Read
 3957 116c 0346     		mov	r3, r0
 3958 116e 002B     		cmp	r3, #0
 3959 1170 02D0     		beq	.L143
1285:main.c        ****             {
1286:main.c        ****                 button2Up = 1;
 3960              		.loc 1 1286 0
 3961 1172 AF4B     		ldr	r3, .L231
 3962 1174 0122     		movs	r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 94


 3963 1176 1A70     		strb	r2, [r3]
 3964              	.L143:
1287:main.c        ****             }
1288:main.c        ****             
1289:main.c        ****             if ((!button3_Read()) && (button3Up))
 3965              		.loc 1 1289 0
 3966 1178 FFF7FEFF 		bl	button3_Read
 3967 117c 0346     		mov	r3, r0
 3968 117e 002B     		cmp	r3, #0
 3969 1180 16D1     		bne	.L144
 3970              		.loc 1 1289 0 is_stmt 0 discriminator 1
 3971 1182 AC4B     		ldr	r3, .L231+4
 3972 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3973 1186 002B     		cmp	r3, #0
 3974 1188 12D0     		beq	.L144
1290:main.c        ****             {
1291:main.c        ****                 patchNum -= 1;
 3975              		.loc 1 1291 0 is_stmt 1
 3976 118a AB4B     		ldr	r3, .L231+8
 3977 118c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3978 118e 013B     		subs	r3, r3, #1
 3979 1190 DAB2     		uxtb	r2, r3
 3980 1192 A94B     		ldr	r3, .L231+8
 3981 1194 1A70     		strb	r2, [r3]
1292:main.c        ****                 patchNum &= 63;
 3982              		.loc 1 1292 0
 3983 1196 A84B     		ldr	r3, .L231+8
 3984 1198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3985 119a 03F03F03 		and	r3, r3, #63
 3986 119e DAB2     		uxtb	r2, r3
 3987 11a0 A54B     		ldr	r3, .L231+8
 3988 11a2 1A70     		strb	r2, [r3]
1293:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3989              		.loc 1 1293 0
 3990 11a4 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1294:main.c        ****                 button3Up = 0;
 3991              		.loc 1 1294 0
 3992 11a8 A24B     		ldr	r3, .L231+4
 3993 11aa 0022     		movs	r2, #0
 3994 11ac 1A70     		strb	r2, [r3]
 3995 11ae 07E0     		b	.L145
 3996              	.L144:
1295:main.c        ****             }
1296:main.c        ****             else if (button3_Read())
 3997              		.loc 1 1296 0
 3998 11b0 FFF7FEFF 		bl	button3_Read
 3999 11b4 0346     		mov	r3, r0
 4000 11b6 002B     		cmp	r3, #0
 4001 11b8 02D0     		beq	.L145
1297:main.c        ****             {
1298:main.c        ****                 button3Up = 1;
 4002              		.loc 1 1298 0
 4003 11ba 9E4B     		ldr	r3, .L231+4
 4004 11bc 0122     		movs	r2, #1
 4005 11be 1A70     		strb	r2, [r3]
 4006              	.L145:
1299:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 95


1300:main.c        ****             
1301:main.c        ****             if ((!button4_Read()) && (button4Up))
 4007              		.loc 1 1301 0
 4008 11c0 FFF7FEFF 		bl	button4_Read
 4009 11c4 0346     		mov	r3, r0
 4010 11c6 002B     		cmp	r3, #0
 4011 11c8 16D1     		bne	.L146
 4012              		.loc 1 1301 0 is_stmt 0 discriminator 1
 4013 11ca 9C4B     		ldr	r3, .L231+12
 4014 11cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4015 11ce 002B     		cmp	r3, #0
 4016 11d0 12D0     		beq	.L146
1302:main.c        ****             {
1303:main.c        ****                 patchNum += 1;
 4017              		.loc 1 1303 0 is_stmt 1
 4018 11d2 994B     		ldr	r3, .L231+8
 4019 11d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4020 11d6 0133     		adds	r3, r3, #1
 4021 11d8 DAB2     		uxtb	r2, r3
 4022 11da 974B     		ldr	r3, .L231+8
 4023 11dc 1A70     		strb	r2, [r3]
1304:main.c        ****                 patchNum &= 63;
 4024              		.loc 1 1304 0
 4025 11de 964B     		ldr	r3, .L231+8
 4026 11e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4027 11e2 03F03F03 		and	r3, r3, #63
 4028 11e6 DAB2     		uxtb	r2, r3
 4029 11e8 934B     		ldr	r3, .L231+8
 4030 11ea 1A70     		strb	r2, [r3]
1305:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4031              		.loc 1 1305 0
 4032 11ec FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1306:main.c        ****                 button4Up = 0;
 4033              		.loc 1 1306 0
 4034 11f0 924B     		ldr	r3, .L231+12
 4035 11f2 0022     		movs	r2, #0
 4036 11f4 1A70     		strb	r2, [r3]
 4037 11f6 B7E0     		b	.L148
 4038              	.L146:
1307:main.c        ****             }
1308:main.c        ****             else if (button4_Read())
 4039              		.loc 1 1308 0
 4040 11f8 FFF7FEFF 		bl	button4_Read
 4041 11fc 0346     		mov	r3, r0
 4042 11fe 002B     		cmp	r3, #0
 4043 1200 00F0B280 		beq	.L148
1309:main.c        ****             {
1310:main.c        ****                 button4Up = 1;
 4044              		.loc 1 1310 0
 4045 1204 8D4B     		ldr	r3, .L231+12
 4046 1206 0122     		movs	r2, #1
 4047 1208 1A70     		strb	r2, [r3]
 4048 120a ADE0     		b	.L148
 4049              	.L139:
1311:main.c        ****             }
1312:main.c        ****         }
1313:main.c        ****         //if in edit mode, then /left right up down work differently
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 96


1314:main.c        ****         else
1315:main.c        ****         {
1316:main.c        ****         
1317:main.c        ****             if ((!button1_Read()) && (button1Up))
 4050              		.loc 1 1317 0
 4051 120c FFF7FEFF 		bl	button1_Read
 4052 1210 0346     		mov	r3, r0
 4053 1212 002B     		cmp	r3, #0
 4054 1214 25D1     		bne	.L149
 4055              		.loc 1 1317 0 is_stmt 0 discriminator 1
 4056 1216 8A4B     		ldr	r3, .L231+16
 4057 1218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4058 121a 002B     		cmp	r3, #0
 4059 121c 21D0     		beq	.L149
1318:main.c        ****             {
1319:main.c        ****                 currentCopedent -= 1;
 4060              		.loc 1 1319 0 is_stmt 1
 4061 121e 894B     		ldr	r3, .L231+20
 4062 1220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4063 1222 013B     		subs	r3, r3, #1
 4064 1224 DAB2     		uxtb	r2, r3
 4065 1226 874B     		ldr	r3, .L231+20
 4066 1228 1A70     		strb	r2, [r3]
1320:main.c        ****                 currentCopedent &= 31;
 4067              		.loc 1 1320 0
 4068 122a 864B     		ldr	r3, .L231+20
 4069 122c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4070 122e 03F01F03 		and	r3, r3, #31
 4071 1232 DAB2     		uxtb	r2, r3
 4072 1234 834B     		ldr	r3, .L231+20
 4073 1236 1A70     		strb	r2, [r3]
1321:main.c        ****                 necks[currentNeck] = currentCopedent;
 4074              		.loc 1 1321 0
 4075 1238 834B     		ldr	r3, .L231+24
 4076 123a 1B68     		ldr	r3, [r3]
 4077 123c 814A     		ldr	r2, .L231+20
 4078 123e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4079 1240 824A     		ldr	r2, .L231+28
 4080 1242 D154     		strb	r1, [r2, r3]
1322:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 4081              		.loc 1 1322 0
 4082 1244 7F4B     		ldr	r3, .L231+20
 4083 1246 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4084 1248 7F4B     		ldr	r3, .L231+24
 4085 124a 1B68     		ldr	r3, [r3]
 4086 124c 9BB2     		uxth	r3, r3
 4087 124e 1946     		mov	r1, r3
 4088 1250 1046     		mov	r0, r2
 4089 1252 FFF7FEFF 		bl	EEPROM_WriteByte
1323:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4090              		.loc 1 1323 0
 4091 1256 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1324:main.c        ****                 button1Up = 0;
 4092              		.loc 1 1324 0
 4093 125a 794B     		ldr	r3, .L231+16
 4094 125c 0022     		movs	r2, #0
 4095 125e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 97


 4096 1260 07E0     		b	.L150
 4097              	.L149:
1325:main.c        ****             }
1326:main.c        ****             else if (button1_Read())
 4098              		.loc 1 1326 0
 4099 1262 FFF7FEFF 		bl	button1_Read
 4100 1266 0346     		mov	r3, r0
 4101 1268 002B     		cmp	r3, #0
 4102 126a 02D0     		beq	.L150
1327:main.c        ****             {
1328:main.c        ****                 button1Up = 1;
 4103              		.loc 1 1328 0
 4104 126c 744B     		ldr	r3, .L231+16
 4105 126e 0122     		movs	r2, #1
 4106 1270 1A70     		strb	r2, [r3]
 4107              	.L150:
1329:main.c        ****             }
1330:main.c        ****             
1331:main.c        ****             if ((!button2_Read()) && (button2Up))
 4108              		.loc 1 1331 0
 4109 1272 FFF7FEFF 		bl	button2_Read
 4110 1276 0346     		mov	r3, r0
 4111 1278 002B     		cmp	r3, #0
 4112 127a 25D1     		bne	.L151
 4113              		.loc 1 1331 0 is_stmt 0 discriminator 1
 4114 127c 6C4B     		ldr	r3, .L231
 4115 127e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4116 1280 002B     		cmp	r3, #0
 4117 1282 21D0     		beq	.L151
1332:main.c        ****             {
1333:main.c        ****                 currentCopedent += 1;
 4118              		.loc 1 1333 0 is_stmt 1
 4119 1284 6F4B     		ldr	r3, .L231+20
 4120 1286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4121 1288 0133     		adds	r3, r3, #1
 4122 128a DAB2     		uxtb	r2, r3
 4123 128c 6D4B     		ldr	r3, .L231+20
 4124 128e 1A70     		strb	r2, [r3]
1334:main.c        ****                 currentCopedent &= 31;
 4125              		.loc 1 1334 0
 4126 1290 6C4B     		ldr	r3, .L231+20
 4127 1292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4128 1294 03F01F03 		and	r3, r3, #31
 4129 1298 DAB2     		uxtb	r2, r3
 4130 129a 6A4B     		ldr	r3, .L231+20
 4131 129c 1A70     		strb	r2, [r3]
1335:main.c        ****                 necks[currentNeck] = currentCopedent;
 4132              		.loc 1 1335 0
 4133 129e 6A4B     		ldr	r3, .L231+24
 4134 12a0 1B68     		ldr	r3, [r3]
 4135 12a2 684A     		ldr	r2, .L231+20
 4136 12a4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4137 12a6 694A     		ldr	r2, .L231+28
 4138 12a8 D154     		strb	r1, [r2, r3]
1336:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 4139              		.loc 1 1336 0
 4140 12aa 664B     		ldr	r3, .L231+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 98


 4141 12ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4142 12ae 664B     		ldr	r3, .L231+24
 4143 12b0 1B68     		ldr	r3, [r3]
 4144 12b2 9BB2     		uxth	r3, r3
 4145 12b4 1946     		mov	r1, r3
 4146 12b6 1046     		mov	r0, r2
 4147 12b8 FFF7FEFF 		bl	EEPROM_WriteByte
1337:main.c        ****                 displayCurrentPresetNameAndCopedent();  
 4148              		.loc 1 1337 0
 4149 12bc FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1338:main.c        ****                 button2Up = 0;
 4150              		.loc 1 1338 0
 4151 12c0 5B4B     		ldr	r3, .L231
 4152 12c2 0022     		movs	r2, #0
 4153 12c4 1A70     		strb	r2, [r3]
 4154 12c6 07E0     		b	.L152
 4155              	.L151:
1339:main.c        ****             }
1340:main.c        ****             else if (button2_Read())
 4156              		.loc 1 1340 0
 4157 12c8 FFF7FEFF 		bl	button2_Read
 4158 12cc 0346     		mov	r3, r0
 4159 12ce 002B     		cmp	r3, #0
 4160 12d0 02D0     		beq	.L152
1341:main.c        ****             {
1342:main.c        ****                 button2Up = 1;
 4161              		.loc 1 1342 0
 4162 12d2 574B     		ldr	r3, .L231
 4163 12d4 0122     		movs	r2, #1
 4164 12d6 1A70     		strb	r2, [r3]
 4165              	.L152:
1343:main.c        ****             }
1344:main.c        ****             
1345:main.c        ****             if ((!button3_Read()) && (button3Up))
 4166              		.loc 1 1345 0
 4167 12d8 FFF7FEFF 		bl	button3_Read
 4168 12dc 0346     		mov	r3, r0
 4169 12de 002B     		cmp	r3, #0
 4170 12e0 16D1     		bne	.L153
 4171              		.loc 1 1345 0 is_stmt 0 discriminator 1
 4172 12e2 544B     		ldr	r3, .L231+4
 4173 12e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4174 12e6 002B     		cmp	r3, #0
 4175 12e8 12D0     		beq	.L153
1346:main.c        ****             {
1347:main.c        ****                 patchNum -= 1;
 4176              		.loc 1 1347 0 is_stmt 1
 4177 12ea 534B     		ldr	r3, .L231+8
 4178 12ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4179 12ee 013B     		subs	r3, r3, #1
 4180 12f0 DAB2     		uxtb	r2, r3
 4181 12f2 514B     		ldr	r3, .L231+8
 4182 12f4 1A70     		strb	r2, [r3]
1348:main.c        ****                 patchNum &= 63;
 4183              		.loc 1 1348 0
 4184 12f6 504B     		ldr	r3, .L231+8
 4185 12f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 99


 4186 12fa 03F03F03 		and	r3, r3, #63
 4187 12fe DAB2     		uxtb	r2, r3
 4188 1300 4D4B     		ldr	r3, .L231+8
 4189 1302 1A70     		strb	r2, [r3]
1349:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4190              		.loc 1 1349 0
 4191 1304 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1350:main.c        ****                 button3Up = 0;
 4192              		.loc 1 1350 0
 4193 1308 4A4B     		ldr	r3, .L231+4
 4194 130a 0022     		movs	r2, #0
 4195 130c 1A70     		strb	r2, [r3]
 4196 130e 07E0     		b	.L154
 4197              	.L153:
1351:main.c        ****             }
1352:main.c        ****             else if (button3_Read())
 4198              		.loc 1 1352 0
 4199 1310 FFF7FEFF 		bl	button3_Read
 4200 1314 0346     		mov	r3, r0
 4201 1316 002B     		cmp	r3, #0
 4202 1318 02D0     		beq	.L154
1353:main.c        ****             {
1354:main.c        ****                 button3Up = 1;
 4203              		.loc 1 1354 0
 4204 131a 464B     		ldr	r3, .L231+4
 4205 131c 0122     		movs	r2, #1
 4206 131e 1A70     		strb	r2, [r3]
 4207              	.L154:
1355:main.c        ****             }
1356:main.c        ****             
1357:main.c        ****             if ((!button4_Read()) && (button4Up))
 4208              		.loc 1 1357 0
 4209 1320 FFF7FEFF 		bl	button4_Read
 4210 1324 0346     		mov	r3, r0
 4211 1326 002B     		cmp	r3, #0
 4212 1328 16D1     		bne	.L155
 4213              		.loc 1 1357 0 is_stmt 0 discriminator 1
 4214 132a 444B     		ldr	r3, .L231+12
 4215 132c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4216 132e 002B     		cmp	r3, #0
 4217 1330 12D0     		beq	.L155
1358:main.c        ****             {
1359:main.c        ****                 patchNum += 1;
 4218              		.loc 1 1359 0 is_stmt 1
 4219 1332 414B     		ldr	r3, .L231+8
 4220 1334 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4221 1336 0133     		adds	r3, r3, #1
 4222 1338 DAB2     		uxtb	r2, r3
 4223 133a 3F4B     		ldr	r3, .L231+8
 4224 133c 1A70     		strb	r2, [r3]
1360:main.c        ****                 patchNum &= 63;
 4225              		.loc 1 1360 0
 4226 133e 3E4B     		ldr	r3, .L231+8
 4227 1340 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4228 1342 03F03F03 		and	r3, r3, #63
 4229 1346 DAB2     		uxtb	r2, r3
 4230 1348 3B4B     		ldr	r3, .L231+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 100


 4231 134a 1A70     		strb	r2, [r3]
1361:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4232              		.loc 1 1361 0
 4233 134c FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1362:main.c        ****                 button4Up = 0;
 4234              		.loc 1 1362 0
 4235 1350 3A4B     		ldr	r3, .L231+12
 4236 1352 0022     		movs	r2, #0
 4237 1354 1A70     		strb	r2, [r3]
 4238 1356 07E0     		b	.L148
 4239              	.L155:
1363:main.c        ****             }
1364:main.c        ****             else if (button4_Read())
 4240              		.loc 1 1364 0
 4241 1358 FFF7FEFF 		bl	button4_Read
 4242 135c 0346     		mov	r3, r0
 4243 135e 002B     		cmp	r3, #0
 4244 1360 02D0     		beq	.L148
1365:main.c        ****             {
1366:main.c        ****                 button4Up = 1;
 4245              		.loc 1 1366 0
 4246 1362 364B     		ldr	r3, .L231+12
 4247 1364 0122     		movs	r2, #1
 4248 1366 1A70     		strb	r2, [r3]
 4249              	.L148:
1367:main.c        ****             }
1368:main.c        ****         }
1369:main.c        ****         if (((!edit_button_Read() && !encoder_button_Read()) && (editUp)) || ((!edit_button_Read() 
 4250              		.loc 1 1369 0
 4251 1368 FFF7FEFF 		bl	edit_button_Read
 4252 136c 0346     		mov	r3, r0
 4253 136e 002B     		cmp	r3, #0
 4254 1370 08D1     		bne	.L156
 4255              		.loc 1 1369 0 is_stmt 0 discriminator 1
 4256 1372 FFF7FEFF 		bl	encoder_button_Read
 4257 1376 0346     		mov	r3, r0
 4258 1378 002B     		cmp	r3, #0
 4259 137a 03D1     		bne	.L156
 4260              		.loc 1 1369 0 discriminator 3
 4261 137c 344B     		ldr	r3, .L231+32
 4262 137e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4263 1380 002B     		cmp	r3, #0
 4264 1382 0FD1     		bne	.L157
 4265              	.L156:
 4266              		.loc 1 1369 0 discriminator 5
 4267 1384 FFF7FEFF 		bl	edit_button_Read
 4268 1388 0346     		mov	r3, r0
 4269 138a 002B     		cmp	r3, #0
 4270 138c 40F0D380 		bne	.L158
 4271              		.loc 1 1369 0 discriminator 6
 4272 1390 304B     		ldr	r3, .L231+36
 4273 1392 1B68     		ldr	r3, [r3]
 4274 1394 002B     		cmp	r3, #0
 4275 1396 00F0CE80 		beq	.L158
 4276              		.loc 1 1369 0 discriminator 7
 4277 139a 2D4B     		ldr	r3, .L231+32
 4278 139c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 101


 4279 139e 002B     		cmp	r3, #0
 4280 13a0 00F0C980 		beq	.L158
 4281              	.L157:
1370:main.c        ****         {
1371:main.c        ****             editMode = !editMode;
 4282              		.loc 1 1371 0 is_stmt 1
 4283 13a4 2B4B     		ldr	r3, .L231+36
 4284 13a6 1B68     		ldr	r3, [r3]
 4285 13a8 002B     		cmp	r3, #0
 4286 13aa 0CBF     		ite	eq
 4287 13ac 0123     		moveq	r3, #1
 4288 13ae 0023     		movne	r3, #0
 4289 13b0 DBB2     		uxtb	r3, r3
 4290 13b2 1A46     		mov	r2, r3
 4291 13b4 274B     		ldr	r3, .L231+36
 4292 13b6 1A60     		str	r2, [r3]
1372:main.c        ****             //for now edit mode is calibration mode
1373:main.c        ****             calibrationMode = !calibrationMode;
 4293              		.loc 1 1373 0
 4294 13b8 274B     		ldr	r3, .L231+40
 4295 13ba 1B68     		ldr	r3, [r3]
 4296 13bc 002B     		cmp	r3, #0
 4297 13be 0CBF     		ite	eq
 4298 13c0 0123     		moveq	r3, #1
 4299 13c2 0023     		movne	r3, #0
 4300 13c4 DBB2     		uxtb	r3, r3
 4301 13c6 1A46     		mov	r2, r3
 4302 13c8 234B     		ldr	r3, .L231+40
 4303 13ca 1A60     		str	r2, [r3]
1374:main.c        ****             LED_red2_Write(editMode);
 4304              		.loc 1 1374 0
 4305 13cc 214B     		ldr	r3, .L231+36
 4306 13ce 1B68     		ldr	r3, [r3]
 4307 13d0 DBB2     		uxtb	r3, r3
 4308 13d2 1846     		mov	r0, r3
 4309 13d4 FFF7FEFF 		bl	LED_red2_Write
1375:main.c        ****             editUp = 0;
 4310              		.loc 1 1375 0
 4311 13d8 1D4B     		ldr	r3, .L231+32
 4312 13da 0022     		movs	r2, #0
 4313 13dc 1A70     		strb	r2, [r3]
1376:main.c        ****             if (editMode)
 4314              		.loc 1 1376 0
 4315 13de 1D4B     		ldr	r3, .L231+36
 4316 13e0 1B68     		ldr	r3, [r3]
 4317 13e2 002B     		cmp	r3, #0
 4318 13e4 56D0     		beq	.L159
1377:main.c        ****             {
1378:main.c        ****                 //#if 0
1379:main.c        ****                 OLEDclear(128, 64);
 4319              		.loc 1 1379 0
 4320 13e6 4021     		movs	r1, #64
 4321 13e8 8020     		movs	r0, #128
 4322 13ea FFF7FEFF 		bl	OLEDclear
1380:main.c        ****         
1381:main.c        ****                 myGFX_setFont(0);
 4323              		.loc 1 1381 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 102


 4324 13ee 0020     		movs	r0, #0
 4325 13f0 FFF7FEFF 		bl	myGFX_setFont
1382:main.c        ****                 
1383:main.c        ****                 OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 4326              		.loc 1 1383 0
 4327 13f4 0023     		movs	r3, #0
 4328 13f6 0122     		movs	r2, #1
 4329 13f8 0B21     		movs	r1, #11
 4330 13fa 1848     		ldr	r0, .L231+44
 4331 13fc FFF7FEFF 		bl	OLEDwriteString
1384:main.c        ****                 OLEDwriteString("MOVE PEDALS", 11, 1, SecondLine);
 4332              		.loc 1 1384 0
 4333 1400 0123     		movs	r3, #1
 4334 1402 0122     		movs	r2, #1
 4335 1404 0B21     		movs	r1, #11
 4336 1406 1648     		ldr	r0, .L231+48
 4337 1408 FFF7FEFF 		bl	OLEDwriteString
1385:main.c        ****                 OLEDwriteString("AND LEVERS", 11, 1, ThirdLine);
 4338              		.loc 1 1385 0
 4339 140c 0223     		movs	r3, #2
 4340 140e 0122     		movs	r2, #1
 4341 1410 0B21     		movs	r1, #11
 4342 1412 1448     		ldr	r0, .L231+52
 4343 1414 FFF7FEFF 		bl	OLEDwriteString
1386:main.c        ****                 OLEDwriteString("THEN EXIT", 11, 1, FourthLine);
 4344              		.loc 1 1386 0
 4345 1418 0323     		movs	r3, #3
 4346 141a 0122     		movs	r2, #1
 4347 141c 0B21     		movs	r1, #11
 4348 141e 1248     		ldr	r0, .L231+56
 4349 1420 FFF7FEFF 		bl	OLEDwriteString
1387:main.c        ****                 mainOLEDWaitingToSend = 1;
 4350              		.loc 1 1387 0
 4351 1424 114B     		ldr	r3, .L231+60
 4352 1426 0122     		movs	r2, #1
 4353 1428 1A60     		str	r2, [r3]
 4354              	.LBB24:
1388:main.c        ****                                // #endif
1389:main.c        ****                 //entering calibration mode, clear the pedals low and high arrays
1390:main.c        ****                 for (int i = 0; i < 10; i++)
 4355              		.loc 1 1390 0
 4356 142a 0023     		movs	r3, #0
 4357 142c BB66     		str	r3, [r7, #104]
 4358 142e 2DE0     		b	.L160
 4359              	.L232:
 4360              		.align	2
 4361              	.L231:
 4362 1430 00000000 		.word	button2Up
 4363 1434 00000000 		.word	button3Up
 4364 1438 00000000 		.word	patchNum
 4365 143c 00000000 		.word	button4Up
 4366 1440 00000000 		.word	button1Up
 4367 1444 00000000 		.word	currentCopedent
 4368 1448 00000000 		.word	currentNeck
 4369 144c 00000000 		.word	necks
 4370 1450 00000000 		.word	editUp
 4371 1454 00000000 		.word	editMode
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 103


 4372 1458 00000000 		.word	calibrationMode
 4373 145c 04040000 		.word	.LC1
 4374 1460 10040000 		.word	.LC2
 4375 1464 1C040000 		.word	.LC3
 4376 1468 28040000 		.word	.LC4
 4377 146c 00000000 		.word	mainOLEDWaitingToSend
 4378              	.L161:
1391:main.c        ****                 {
1392:main.c        ****                     pedals_low[i] = 4095;
 4379              		.loc 1 1392 0 discriminator 3
 4380 1470 614A     		ldr	r2, .L233
 4381 1472 BB6E     		ldr	r3, [r7, #104]
 4382 1474 40F6FF71 		movw	r1, #4095
 4383 1478 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1393:main.c        ****                     pedals_high[i] = 0;
 4384              		.loc 1 1393 0 discriminator 3
 4385 147c 5F4A     		ldr	r2, .L233+4
 4386 147e BB6E     		ldr	r3, [r7, #104]
 4387 1480 0021     		movs	r1, #0
 4388 1482 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1390:main.c        ****                 {
 4389              		.loc 1 1390 0 discriminator 3
 4390 1486 BB6E     		ldr	r3, [r7, #104]
 4391 1488 0133     		adds	r3, r3, #1
 4392 148a BB66     		str	r3, [r7, #104]
 4393              	.L160:
1390:main.c        ****                 {
 4394              		.loc 1 1390 0 is_stmt 0 discriminator 1
 4395 148c BB6E     		ldr	r3, [r7, #104]
 4396 148e 092B     		cmp	r3, #9
 4397 1490 EEDD     		ble	.L161
 4398              	.LBE24:
1376:main.c        ****             {
 4399              		.loc 1 1376 0 is_stmt 1
 4400 1492 58E0     		b	.L165
 4401              	.L159:
1394:main.c        ****                 }
1395:main.c        **** 
1396:main.c        ****             }
1397:main.c        ****             else
1398:main.c        ****             {
1399:main.c        ****                 //draw normal screen
1400:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4402              		.loc 1 1400 0
 4403 1494 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1401:main.c        ****                 calculatePedalRatios();
 4404              		.loc 1 1401 0
 4405 1498 FFF7FEFF 		bl	calculatePedalRatios
 4406              	.LBB25:
1402:main.c        ****                 //now need to store this in EEPROM.                
1403:main.c        ****                 for (int i = 0; i < NUM_PEDALS; i++)
 4407              		.loc 1 1403 0
 4408 149c 0023     		movs	r3, #0
 4409 149e 7B66     		str	r3, [r7, #100]
 4410 14a0 45E0     		b	.L163
 4411              	.L164:
1404:main.c        ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 104


1405:main.c        ****                      EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_CALIBRATION_OFFSET + (i*4));
 4412              		.loc 1 1405 0 discriminator 3
 4413 14a2 554A     		ldr	r2, .L233
 4414 14a4 7B6E     		ldr	r3, [r7, #100]
 4415 14a6 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4416 14aa 1B0A     		lsrs	r3, r3, #8
 4417 14ac 9BB2     		uxth	r3, r3
 4418 14ae DAB2     		uxtb	r2, r3
 4419 14b0 7B6E     		ldr	r3, [r7, #100]
 4420 14b2 03F2E713 		addw	r3, r3, #487
 4421 14b6 9BB2     		uxth	r3, r3
 4422 14b8 9B00     		lsls	r3, r3, #2
 4423 14ba 9BB2     		uxth	r3, r3
 4424 14bc 1946     		mov	r1, r3
 4425 14be 1046     		mov	r0, r2
 4426 14c0 FFF7FEFF 		bl	EEPROM_WriteByte
1406:main.c        ****                      EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 1
 4427              		.loc 1 1406 0 discriminator 3
 4428 14c4 4C4A     		ldr	r2, .L233
 4429 14c6 7B6E     		ldr	r3, [r7, #100]
 4430 14c8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4431 14cc DAB2     		uxtb	r2, r3
 4432 14ce 7B6E     		ldr	r3, [r7, #100]
 4433 14d0 9BB2     		uxth	r3, r3
 4434 14d2 9B00     		lsls	r3, r3, #2
 4435 14d4 9BB2     		uxth	r3, r3
 4436 14d6 03F29D73 		addw	r3, r3, #1949
 4437 14da 9BB2     		uxth	r3, r3
 4438 14dc 1946     		mov	r1, r3
 4439 14de 1046     		mov	r0, r2
 4440 14e0 FFF7FEFF 		bl	EEPROM_WriteByte
1407:main.c        ****                      EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_CALIBRATION_OFFSET + ((i*4) + 2
 4441              		.loc 1 1407 0 discriminator 3
 4442 14e4 454A     		ldr	r2, .L233+4
 4443 14e6 7B6E     		ldr	r3, [r7, #100]
 4444 14e8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4445 14ec 1B0A     		lsrs	r3, r3, #8
 4446 14ee 9BB2     		uxth	r3, r3
 4447 14f0 DAB2     		uxtb	r2, r3
 4448 14f2 7B6E     		ldr	r3, [r7, #100]
 4449 14f4 9BB2     		uxth	r3, r3
 4450 14f6 9B00     		lsls	r3, r3, #2
 4451 14f8 9BB2     		uxth	r3, r3
 4452 14fa 03F29E73 		addw	r3, r3, #1950
 4453 14fe 9BB2     		uxth	r3, r3
 4454 1500 1946     		mov	r1, r3
 4455 1502 1046     		mov	r0, r2
 4456 1504 FFF7FEFF 		bl	EEPROM_WriteByte
1408:main.c        ****                      EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 
 4457              		.loc 1 1408 0 discriminator 3
 4458 1508 3C4A     		ldr	r2, .L233+4
 4459 150a 7B6E     		ldr	r3, [r7, #100]
 4460 150c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4461 1510 DAB2     		uxtb	r2, r3
 4462 1512 7B6E     		ldr	r3, [r7, #100]
 4463 1514 9BB2     		uxth	r3, r3
 4464 1516 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 105


 4465 1518 9BB2     		uxth	r3, r3
 4466 151a 03F29F73 		addw	r3, r3, #1951
 4467 151e 9BB2     		uxth	r3, r3
 4468 1520 1946     		mov	r1, r3
 4469 1522 1046     		mov	r0, r2
 4470 1524 FFF7FEFF 		bl	EEPROM_WriteByte
1403:main.c        ****                 {
 4471              		.loc 1 1403 0 discriminator 3
 4472 1528 7B6E     		ldr	r3, [r7, #100]
 4473 152a 0133     		adds	r3, r3, #1
 4474 152c 7B66     		str	r3, [r7, #100]
 4475              	.L163:
1403:main.c        ****                 {
 4476              		.loc 1 1403 0 is_stmt 0 discriminator 1
 4477 152e 7B6E     		ldr	r3, [r7, #100]
 4478 1530 092B     		cmp	r3, #9
 4479 1532 B6DD     		ble	.L164
 4480              	.LBE25:
1376:main.c        ****             {
 4481              		.loc 1 1376 0 is_stmt 1
 4482 1534 07E0     		b	.L165
 4483              	.L158:
1409:main.c        ****                 }
1410:main.c        **** 
1411:main.c        ****                 // also need to make this a little more hidden - maybe first edit then Enter?
1412:main.c        ****             }
1413:main.c        ****         }
1414:main.c        ****         else if (edit_button_Read())
 4484              		.loc 1 1414 0
 4485 1536 FFF7FEFF 		bl	edit_button_Read
 4486 153a 0346     		mov	r3, r0
 4487 153c 002B     		cmp	r3, #0
 4488 153e 02D0     		beq	.L165
1415:main.c        ****         {
1416:main.c        ****             editUp = 1;
 4489              		.loc 1 1416 0
 4490 1540 2F4B     		ldr	r3, .L233+8
 4491 1542 0122     		movs	r2, #1
 4492 1544 1A70     		strb	r2, [r3]
 4493              	.L165:
1417:main.c        ****         }
1418:main.c        ****         
1419:main.c        ****         if (octave != prevOctave)
1420:main.c        ****         {
1421:main.c        ****             //sendMIDIControlChange(90, octave);
1422:main.c        ****         }
1423:main.c        ****         prevOctave = octave;
 4494              		.loc 1 1423 0
 4495 1546 2F4B     		ldr	r3, .L233+12
 4496 1548 1B68     		ldr	r3, [r3]
 4497 154a 2F4A     		ldr	r2, .L233+16
 4498 154c 1360     		str	r3, [r2]
 4499              	.LBB26:
1424:main.c        ****         
1425:main.c        ****         
1426:main.c        ****         for (int i=  0; i < 4; i++)
 4500              		.loc 1 1426 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 106


 4501 154e 0023     		movs	r3, #0
 4502 1550 3B66     		str	r3, [r7, #96]
 4503 1552 47E0     		b	.L166
 4504              	.L169:
1427:main.c        ****         {
1428:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)/16);
 4505              		.loc 1 1428 0
 4506 1554 3B6E     		ldr	r3, [r7, #96]
 4507 1556 9BB2     		uxth	r3, r3
 4508 1558 1846     		mov	r0, r3
 4509 155a FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4510 155e 0346     		mov	r3, r0
 4511 1560 002B     		cmp	r3, #0
 4512 1562 00DA     		bge	.L167
 4513 1564 0F33     		adds	r3, r3, #15
 4514              	.L167:
 4515 1566 1B11     		asrs	r3, r3, #4
 4516 1568 1BB2     		sxth	r3, r3
 4517 156a D9B2     		uxtb	r1, r3
 4518 156c 274A     		ldr	r2, .L233+20
 4519 156e 3B6E     		ldr	r3, [r7, #96]
 4520 1570 1344     		add	r3, r3, r2
 4521 1572 0A46     		mov	r2, r1
 4522 1574 1A70     		strb	r2, [r3]
1429:main.c        ****             
1430:main.c        ****             knobs[i] = 255 - knobs[i];
 4523              		.loc 1 1430 0
 4524 1576 254A     		ldr	r2, .L233+20
 4525 1578 3B6E     		ldr	r3, [r7, #96]
 4526 157a 1344     		add	r3, r3, r2
 4527 157c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4528 157e DB43     		mvns	r3, r3
 4529 1580 D9B2     		uxtb	r1, r3
 4530 1582 224A     		ldr	r2, .L233+20
 4531 1584 3B6E     		ldr	r3, [r7, #96]
 4532 1586 1344     		add	r3, r3, r2
 4533 1588 0A46     		mov	r2, r1
 4534 158a 1A70     		strb	r2, [r3]
1431:main.c        ****             knobs7bit[i] = knobs[i] >> 1;
 4535              		.loc 1 1431 0
 4536 158c 1F4A     		ldr	r2, .L233+20
 4537 158e 3B6E     		ldr	r3, [r7, #96]
 4538 1590 1344     		add	r3, r3, r2
 4539 1592 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4540 1594 5B08     		lsrs	r3, r3, #1
 4541 1596 D9B2     		uxtb	r1, r3
 4542 1598 1D4A     		ldr	r2, .L233+24
 4543 159a 3B6E     		ldr	r3, [r7, #96]
 4544 159c 1344     		add	r3, r3, r2
 4545 159e 0A46     		mov	r2, r1
 4546 15a0 1A70     		strb	r2, [r3]
1432:main.c        ****             
1433:main.c        ****             if (knobs7bit[i] != prevKnobs7bit[i])
 4547              		.loc 1 1433 0
 4548 15a2 1B4A     		ldr	r2, .L233+24
 4549 15a4 3B6E     		ldr	r3, [r7, #96]
 4550 15a6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 107


 4551 15a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4552 15aa 1A49     		ldr	r1, .L233+28
 4553 15ac 3B6E     		ldr	r3, [r7, #96]
 4554 15ae 0B44     		add	r3, r3, r1
 4555 15b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4556 15b2 9A42     		cmp	r2, r3
 4557 15b4 0AD0     		beq	.L168
1434:main.c        ****             {
1435:main.c        ****                 sendMIDIControlChange(i+9, knobs7bit[i], 0);
 4558              		.loc 1 1435 0
 4559 15b6 3B6E     		ldr	r3, [r7, #96]
 4560 15b8 03F10900 		add	r0, r3, #9
 4561 15bc 144A     		ldr	r2, .L233+24
 4562 15be 3B6E     		ldr	r3, [r7, #96]
 4563 15c0 1344     		add	r3, r3, r2
 4564 15c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4565 15c4 0022     		movs	r2, #0
 4566 15c6 1946     		mov	r1, r3
 4567 15c8 FFF7FEFF 		bl	sendMIDIControlChange
 4568              	.L168:
1436:main.c        ****             }
1437:main.c        ****             prevKnobs7bit[i] = knobs7bit[i];
 4569              		.loc 1 1437 0 discriminator 2
 4570 15cc 104A     		ldr	r2, .L233+24
 4571 15ce 3B6E     		ldr	r3, [r7, #96]
 4572 15d0 1344     		add	r3, r3, r2
 4573 15d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4574 15d4 0F4A     		ldr	r2, .L233+28
 4575 15d6 3B6E     		ldr	r3, [r7, #96]
 4576 15d8 1344     		add	r3, r3, r2
 4577 15da 0A46     		mov	r2, r1
 4578 15dc 1A70     		strb	r2, [r3]
1426:main.c        ****         {
 4579              		.loc 1 1426 0 discriminator 2
 4580 15de 3B6E     		ldr	r3, [r7, #96]
 4581 15e0 0133     		adds	r3, r3, #1
 4582 15e2 3B66     		str	r3, [r7, #96]
 4583              	.L166:
1426:main.c        ****         {
 4584              		.loc 1 1426 0 is_stmt 0 discriminator 1
 4585 15e4 3B6E     		ldr	r3, [r7, #96]
 4586 15e6 032B     		cmp	r3, #3
 4587 15e8 B4DD     		ble	.L169
 4588              	.LBE26:
1438:main.c        ****             
1439:main.c        ****         }
1440:main.c        ****         
1441:main.c        ****         testpin4_Write(1);
 4589              		.loc 1 1441 0 is_stmt 1
 4590 15ea 0120     		movs	r0, #1
 4591 15ec FFF7FEFF 		bl	testpin4_Write
 4592              	.LBB27:
1442:main.c        ****         //calculate the pitch of each string based on the current Copedent
1443:main.c        ****         for (int i = 0; i < numStrings; i++)
 4593              		.loc 1 1443 0
 4594 15f0 0023     		movs	r3, #0
 4595 15f2 FB65     		str	r3, [r7, #92]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 108


 4596 15f4 9FE1     		b	.L170
 4597              	.L234:
 4598 15f6 00BF     		.align	2
 4599              	.L233:
 4600 15f8 00000000 		.word	pedals_low
 4601 15fc 00000000 		.word	pedals_high
 4602 1600 00000000 		.word	editUp
 4603 1604 00000000 		.word	octave
 4604 1608 00000000 		.word	prevOctave
 4605 160c 00000000 		.word	knobs
 4606 1610 00000000 		.word	knobs7bit
 4607 1614 00000000 		.word	prevKnobs7bit
 4608              	.L175:
 4609              	.LBB28:
1444:main.c        ****     	{
1445:main.c        ****     		//interpolate ratios for each of the strings
1446:main.c        ****            /*
1447:main.c        ****             float myMappedPos;
1448:main.c        ****             if (dualSlider)
1449:main.c        ****             {
1450:main.c        ****                myMappedPos = LEAF_interpolation_linear(stringMappedPositions[0], stringMappedPositi
1451:main.c        ****             }
1452:main.c        ****             else
1453:main.c        ****             {
1454:main.c        ****                 myMappedPos = stringMappedPositions[0];
1455:main.c        ****             }
1456:main.c        **** 
1457:main.c        ****     		stringOctave[i] = powf(2.0f,octave);
1458:main.c        ****             */
1459:main.c        ****     		//then apply those ratios to the fundamental frequencies
1460:main.c        ****     		float tempMIDI = (copedent[necks[currentNeck]][0][i] +
 4610              		.loc 1 1460 0
 4611 1618 AA4B     		ldr	r3, .L235
 4612 161a 1B68     		ldr	r3, [r3]
 4613 161c AA4A     		ldr	r2, .L235+4
 4614 161e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4615 1620 1A46     		mov	r2, r3
 4616 1622 AA49     		ldr	r1, .L235+8
 4617 1624 1346     		mov	r3, r2
 4618 1626 5B01     		lsls	r3, r3, #5
 4619 1628 1344     		add	r3, r3, r2
 4620 162a 9B00     		lsls	r3, r3, #2
 4621 162c FA6D     		ldr	r2, [r7, #92]
 4622 162e 1344     		add	r3, r3, r2
 4623 1630 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1461:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4624              		.loc 1 1461 0
 4625 1634 A64B     		ldr	r3, .L235+12
 4626 1636 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4627 1638 1A46     		mov	r2, r3
 4628 163a A449     		ldr	r1, .L235+8
 4629 163c 1346     		mov	r3, r2
 4630 163e 5B01     		lsls	r3, r3, #5
 4631 1640 1344     		add	r3, r3, r2
 4632 1642 9B00     		lsls	r3, r3, #2
 4633 1644 FA6D     		ldr	r2, [r7, #92]
 4634 1646 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 109


 4635 1648 3033     		adds	r3, r3, #48
 4636 164a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4637 164e A14B     		ldr	r3, .L235+16
 4638 1650 1B68     		ldr	r3, [r3]	@ float
 4639 1652 1946     		mov	r1, r3
 4640 1654 1046     		mov	r0, r2
 4641 1656 FFF7FEFF 		bl	__aeabi_fmul
 4642 165a 0346     		mov	r3, r0
1460:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4643              		.loc 1 1460 0
 4644 165c 1946     		mov	r1, r3
 4645 165e 2046     		mov	r0, r4
 4646 1660 FFF7FEFF 		bl	__aeabi_fadd
 4647 1664 0346     		mov	r3, r0
 4648 1666 1C46     		mov	r4, r3
1462:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4649              		.loc 1 1462 0
 4650 1668 994B     		ldr	r3, .L235+12
 4651 166a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4652 166c 1A46     		mov	r2, r3
 4653 166e 9749     		ldr	r1, .L235+8
 4654 1670 1346     		mov	r3, r2
 4655 1672 5B01     		lsls	r3, r3, #5
 4656 1674 1344     		add	r3, r3, r2
 4657 1676 9B00     		lsls	r3, r3, #2
 4658 1678 FA6D     		ldr	r2, [r7, #92]
 4659 167a 1344     		add	r3, r3, r2
 4660 167c 3C33     		adds	r3, r3, #60
 4661 167e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4662 1682 944B     		ldr	r3, .L235+16
 4663 1684 5B68     		ldr	r3, [r3, #4]	@ float
 4664 1686 1946     		mov	r1, r3
 4665 1688 1046     		mov	r0, r2
 4666 168a FFF7FEFF 		bl	__aeabi_fmul
 4667 168e 0346     		mov	r3, r0
1461:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4668              		.loc 1 1461 0
 4669 1690 1946     		mov	r1, r3
 4670 1692 2046     		mov	r0, r4
 4671 1694 FFF7FEFF 		bl	__aeabi_fadd
 4672 1698 0346     		mov	r3, r0
 4673 169a 1C46     		mov	r4, r3
1463:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4674              		.loc 1 1463 0
 4675 169c 8C4B     		ldr	r3, .L235+12
 4676 169e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4677 16a0 1A46     		mov	r2, r3
 4678 16a2 8A49     		ldr	r1, .L235+8
 4679 16a4 1346     		mov	r3, r2
 4680 16a6 5B01     		lsls	r3, r3, #5
 4681 16a8 1344     		add	r3, r3, r2
 4682 16aa 9B00     		lsls	r3, r3, #2
 4683 16ac FA6D     		ldr	r2, [r7, #92]
 4684 16ae 1344     		add	r3, r3, r2
 4685 16b0 4833     		adds	r3, r3, #72
 4686 16b2 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4687 16b6 874B     		ldr	r3, .L235+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 110


 4688 16b8 9B68     		ldr	r3, [r3, #8]	@ float
 4689 16ba 1946     		mov	r1, r3
 4690 16bc 1046     		mov	r0, r2
 4691 16be FFF7FEFF 		bl	__aeabi_fmul
 4692 16c2 0346     		mov	r3, r0
1462:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4693              		.loc 1 1462 0
 4694 16c4 1946     		mov	r1, r3
 4695 16c6 2046     		mov	r0, r4
 4696 16c8 FFF7FEFF 		bl	__aeabi_fadd
 4697 16cc 0346     		mov	r3, r0
 4698 16ce 1C46     		mov	r4, r3
1464:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4699              		.loc 1 1464 0
 4700 16d0 7F4B     		ldr	r3, .L235+12
 4701 16d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4702 16d4 1A46     		mov	r2, r3
 4703 16d6 7D49     		ldr	r1, .L235+8
 4704 16d8 1346     		mov	r3, r2
 4705 16da 5B01     		lsls	r3, r3, #5
 4706 16dc 1344     		add	r3, r3, r2
 4707 16de 9B00     		lsls	r3, r3, #2
 4708 16e0 FA6D     		ldr	r2, [r7, #92]
 4709 16e2 1344     		add	r3, r3, r2
 4710 16e4 5433     		adds	r3, r3, #84
 4711 16e6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4712 16ea 7A4B     		ldr	r3, .L235+16
 4713 16ec DB68     		ldr	r3, [r3, #12]	@ float
 4714 16ee 1946     		mov	r1, r3
 4715 16f0 1046     		mov	r0, r2
 4716 16f2 FFF7FEFF 		bl	__aeabi_fmul
 4717 16f6 0346     		mov	r3, r0
1463:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4718              		.loc 1 1463 0
 4719 16f8 1946     		mov	r1, r3
 4720 16fa 2046     		mov	r0, r4
 4721 16fc FFF7FEFF 		bl	__aeabi_fadd
 4722 1700 0346     		mov	r3, r0
 4723 1702 1C46     		mov	r4, r3
1465:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4724              		.loc 1 1465 0
 4725 1704 724B     		ldr	r3, .L235+12
 4726 1706 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4727 1708 1A46     		mov	r2, r3
 4728 170a 7049     		ldr	r1, .L235+8
 4729 170c 1346     		mov	r3, r2
 4730 170e 5B01     		lsls	r3, r3, #5
 4731 1710 1344     		add	r3, r3, r2
 4732 1712 9B00     		lsls	r3, r3, #2
 4733 1714 FA6D     		ldr	r2, [r7, #92]
 4734 1716 1344     		add	r3, r3, r2
 4735 1718 6033     		adds	r3, r3, #96
 4736 171a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4737 171e 6D4B     		ldr	r3, .L235+16
 4738 1720 1B69     		ldr	r3, [r3, #16]	@ float
 4739 1722 1946     		mov	r1, r3
 4740 1724 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 111


 4741 1726 FFF7FEFF 		bl	__aeabi_fmul
 4742 172a 0346     		mov	r3, r0
1464:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4743              		.loc 1 1464 0
 4744 172c 1946     		mov	r1, r3
 4745 172e 2046     		mov	r0, r4
 4746 1730 FFF7FEFF 		bl	__aeabi_fadd
 4747 1734 0346     		mov	r3, r0
 4748 1736 1C46     		mov	r4, r3
1466:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4749              		.loc 1 1466 0
 4750 1738 654B     		ldr	r3, .L235+12
 4751 173a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4752 173c 1A46     		mov	r2, r3
 4753 173e 6349     		ldr	r1, .L235+8
 4754 1740 1346     		mov	r3, r2
 4755 1742 5B01     		lsls	r3, r3, #5
 4756 1744 1344     		add	r3, r3, r2
 4757 1746 9B00     		lsls	r3, r3, #2
 4758 1748 FA6D     		ldr	r2, [r7, #92]
 4759 174a 1344     		add	r3, r3, r2
 4760 174c 7833     		adds	r3, r3, #120
 4761 174e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4762 1752 604B     		ldr	r3, .L235+16
 4763 1754 5B69     		ldr	r3, [r3, #20]	@ float
 4764 1756 1946     		mov	r1, r3
 4765 1758 1046     		mov	r0, r2
 4766 175a FFF7FEFF 		bl	__aeabi_fmul
 4767 175e 0346     		mov	r3, r0
1465:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4768              		.loc 1 1465 0
 4769 1760 1946     		mov	r1, r3
 4770 1762 2046     		mov	r0, r4
 4771 1764 FFF7FEFF 		bl	__aeabi_fadd
 4772 1768 0346     		mov	r3, r0
 4773 176a 1C46     		mov	r4, r3
1467:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4774              		.loc 1 1467 0
 4775 176c 584B     		ldr	r3, .L235+12
 4776 176e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4777 1770 1A46     		mov	r2, r3
 4778 1772 5649     		ldr	r1, .L235+8
 4779 1774 1346     		mov	r3, r2
 4780 1776 5B01     		lsls	r3, r3, #5
 4781 1778 1344     		add	r3, r3, r2
 4782 177a 9B00     		lsls	r3, r3, #2
 4783 177c FA6D     		ldr	r2, [r7, #92]
 4784 177e 1344     		add	r3, r3, r2
 4785 1780 6C33     		adds	r3, r3, #108
 4786 1782 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4787 1786 534B     		ldr	r3, .L235+16
 4788 1788 9B69     		ldr	r3, [r3, #24]	@ float
 4789 178a 1946     		mov	r1, r3
 4790 178c 1046     		mov	r0, r2
 4791 178e FFF7FEFF 		bl	__aeabi_fmul
 4792 1792 0346     		mov	r3, r0
1466:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 112


 4793              		.loc 1 1466 0
 4794 1794 1946     		mov	r1, r3
 4795 1796 2046     		mov	r0, r4
 4796 1798 FFF7FEFF 		bl	__aeabi_fadd
 4797 179c 0346     		mov	r3, r0
 4798 179e 1C46     		mov	r4, r3
1468:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4799              		.loc 1 1468 0
 4800 17a0 4B4B     		ldr	r3, .L235+12
 4801 17a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4802 17a4 1A46     		mov	r2, r3
 4803 17a6 4949     		ldr	r1, .L235+8
 4804 17a8 1346     		mov	r3, r2
 4805 17aa 5B01     		lsls	r3, r3, #5
 4806 17ac 1344     		add	r3, r3, r2
 4807 17ae 9B00     		lsls	r3, r3, #2
 4808 17b0 FA6D     		ldr	r2, [r7, #92]
 4809 17b2 1344     		add	r3, r3, r2
 4810 17b4 2433     		adds	r3, r3, #36
 4811 17b6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4812 17ba 464B     		ldr	r3, .L235+16
 4813 17bc DB69     		ldr	r3, [r3, #28]	@ float
 4814 17be 1946     		mov	r1, r3
 4815 17c0 1046     		mov	r0, r2
 4816 17c2 FFF7FEFF 		bl	__aeabi_fmul
 4817 17c6 0346     		mov	r3, r0
1467:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4818              		.loc 1 1467 0
 4819 17c8 1946     		mov	r1, r3
 4820 17ca 2046     		mov	r0, r4
 4821 17cc FFF7FEFF 		bl	__aeabi_fadd
 4822 17d0 0346     		mov	r3, r0
 4823 17d2 1C46     		mov	r4, r3
1469:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4824              		.loc 1 1469 0
 4825 17d4 3E4B     		ldr	r3, .L235+12
 4826 17d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4827 17d8 1A46     		mov	r2, r3
 4828 17da 3C49     		ldr	r1, .L235+8
 4829 17dc 1346     		mov	r3, r2
 4830 17de 5B01     		lsls	r3, r3, #5
 4831 17e0 1344     		add	r3, r3, r2
 4832 17e2 9B00     		lsls	r3, r3, #2
 4833 17e4 FA6D     		ldr	r2, [r7, #92]
 4834 17e6 1344     		add	r3, r3, r2
 4835 17e8 0C33     		adds	r3, r3, #12
 4836 17ea 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4837 17ee 394B     		ldr	r3, .L235+16
 4838 17f0 1B6A     		ldr	r3, [r3, #32]	@ float
 4839 17f2 1946     		mov	r1, r3
 4840 17f4 1046     		mov	r0, r2
 4841 17f6 FFF7FEFF 		bl	__aeabi_fmul
 4842 17fa 0346     		mov	r3, r0
1468:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4843              		.loc 1 1468 0
 4844 17fc 1946     		mov	r1, r3
 4845 17fe 2046     		mov	r0, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 113


 4846 1800 FFF7FEFF 		bl	__aeabi_fadd
 4847 1804 0346     		mov	r3, r0
 4848 1806 1C46     		mov	r4, r3
1470:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9]));
 4849              		.loc 1 1470 0
 4850 1808 314B     		ldr	r3, .L235+12
 4851 180a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4852 180c 1A46     		mov	r2, r3
 4853 180e 2F49     		ldr	r1, .L235+8
 4854 1810 1346     		mov	r3, r2
 4855 1812 5B01     		lsls	r3, r3, #5
 4856 1814 1344     		add	r3, r3, r2
 4857 1816 9B00     		lsls	r3, r3, #2
 4858 1818 FA6D     		ldr	r2, [r7, #92]
 4859 181a 1344     		add	r3, r3, r2
 4860 181c 1833     		adds	r3, r3, #24
 4861 181e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4862 1822 2C4B     		ldr	r3, .L235+16
 4863 1824 5B6A     		ldr	r3, [r3, #36]	@ float
 4864 1826 1946     		mov	r1, r3
 4865 1828 1046     		mov	r0, r2
 4866 182a FFF7FEFF 		bl	__aeabi_fmul
 4867 182e 0346     		mov	r3, r0
1460:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4868              		.loc 1 1460 0
 4869 1830 1946     		mov	r1, r3
 4870 1832 2046     		mov	r0, r4
 4871 1834 FFF7FEFF 		bl	__aeabi_fadd
 4872 1838 0346     		mov	r3, r0
 4873 183a 3B62     		str	r3, [r7, #32]	@ float
1471:main.c        **** 
1472:main.c        ****             
1473:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 4874              		.loc 1 1473 0
 4875 183c 244B     		ldr	r3, .L235+12
 4876 183e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4877 1840 1A46     		mov	r2, r3
 4878 1842 2249     		ldr	r1, .L235+8
 4879 1844 1346     		mov	r3, r2
 4880 1846 5B01     		lsls	r3, r3, #5
 4881 1848 1344     		add	r3, r3, r2
 4882 184a 9B00     		lsls	r3, r3, #2
 4883 184c FA6D     		ldr	r2, [r7, #92]
 4884 184e 1344     		add	r3, r3, r2
 4885 1850 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 4886 1854 FB61     		str	r3, [r7, #28]	@ float
1474:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 4887              		.loc 1 1474 0
 4888 1856 F869     		ldr	r0, [r7, #28]	@ float
 4889 1858 FFF7FEFF 		bl	__aeabi_f2iz
 4890 185c 0146     		mov	r1, r0
 4891 185e 1E4A     		ldr	r2, .L235+20
 4892 1860 FB6D     		ldr	r3, [r7, #92]
 4893 1862 42F82310 		str	r1, [r2, r3, lsl #2]
1475:main.c        ****             
1476:main.c        ****             float barMIDI = ftom((invStringMappedPositions[0]) * mtof(tempMIDI));
 4894              		.loc 1 1476 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 114


 4895 1866 1D4B     		ldr	r3, .L235+24
 4896 1868 1C68     		ldr	r4, [r3]	@ float
 4897 186a 386A     		ldr	r0, [r7, #32]	@ float
 4898 186c FFF7FEFF 		bl	mtof
 4899 1870 0346     		mov	r3, r0
 4900 1872 1946     		mov	r1, r3
 4901 1874 2046     		mov	r0, r4
 4902 1876 FFF7FEFF 		bl	__aeabi_fmul
 4903 187a 0346     		mov	r3, r0
 4904 187c 1846     		mov	r0, r3
 4905 187e FFF7FEFF 		bl	ftom
 4906 1882 B861     		str	r0, [r7, #24]	@ float
1477:main.c        ****             
1478:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
 4907              		.loc 1 1478 0
 4908 1884 144A     		ldr	r2, .L235+20
 4909 1886 FB6D     		ldr	r3, [r7, #92]
 4910 1888 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4911 188c 1846     		mov	r0, r3
 4912 188e FFF7FEFF 		bl	__aeabi_i2f
 4913 1892 0346     		mov	r3, r0
 4914 1894 1946     		mov	r1, r3
 4915 1896 B869     		ldr	r0, [r7, #24]	@ float
 4916 1898 FFF7FEFF 		bl	__aeabi_fsub
 4917 189c 0346     		mov	r3, r0
 4918 189e 7B61     		str	r3, [r7, #20]	@ float
1479:main.c        ****             
1480:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 4919              		.loc 1 1480 0
 4920 18a0 0F49     		ldr	r1, .L235+28
 4921 18a2 7869     		ldr	r0, [r7, #20]	@ float
 4922 18a4 FFF7FEFF 		bl	__aeabi_fmul
 4923 18a8 0346     		mov	r3, r0
 4924 18aa 4FF08C41 		mov	r1, #1174405120
 4925 18ae 1846     		mov	r0, r3
 4926 18b0 FFF7FEFF 		bl	__aeabi_fadd
 4927 18b4 0346     		mov	r3, r0
 4928 18b6 3B61     		str	r3, [r7, #16]	@ float
1481:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
 4929              		.loc 1 1481 0
 4930 18b8 0A4A     		ldr	r2, .L235+32
 4931 18ba FB6D     		ldr	r3, [r7, #92]
 4932 18bc 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4933 18c0 12E0     		b	.L236
 4934              	.L237:
 4935 18c2 00BF     		.align	2
 4936              	.L235:
 4937 18c4 00000000 		.word	currentNeck
 4938 18c8 00000000 		.word	necks
 4939 18cc 00000000 		.word	copedent
 4940 18d0 00000000 		.word	currentCopedent
 4941 18d4 00000000 		.word	pedals_float
 4942 18d8 00000000 		.word	openStringMIDI_Int
 4943 18dc 00000000 		.word	invStringMappedPositions
 4944 18e0 ABAA2A43 		.word	1126869675
 4945 18e4 00000000 		.word	prevStringPitchBend
 4946              	.L236:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 115


 4947 18e8 3969     		ldr	r1, [r7, #16]	@ float
 4948 18ea 1846     		mov	r0, r3
 4949 18ec FFF7FEFF 		bl	__aeabi_fcmpeq
 4950 18f0 0346     		mov	r3, r0
 4951 18f2 002B     		cmp	r3, #0
 4952 18f4 0AD1     		bne	.L171
1482:main.c        ****             {
1483:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 4953              		.loc 1 1483 0
 4954 18f6 3869     		ldr	r0, [r7, #16]	@ float
 4955 18f8 FFF7FEFF 		bl	__aeabi_f2uiz
 4956 18fc 0346     		mov	r3, r0
 4957 18fe 1A46     		mov	r2, r3
 4958 1900 FB6D     		ldr	r3, [r7, #92]
 4959 1902 0133     		adds	r3, r3, #1
 4960 1904 1946     		mov	r1, r3
 4961 1906 1046     		mov	r0, r2
 4962 1908 FFF7FEFF 		bl	sendMIDIPitchBend
 4963              	.L171:
1484:main.c        ****             }
1485:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 4964              		.loc 1 1485 0
 4965 190c 9449     		ldr	r1, .L238
 4966 190e FB6D     		ldr	r3, [r7, #92]
 4967 1910 3A69     		ldr	r2, [r7, #16]	@ float
 4968 1912 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1486:main.c        ****             
1487:main.c        ****             if (tempMIDI > 0.0f)
 4969              		.loc 1 1487 0
 4970 1916 4FF00001 		mov	r1, #0
 4971 191a 386A     		ldr	r0, [r7, #32]	@ float
 4972 191c FFF7FEFF 		bl	__aeabi_fcmpgt
 4973 1920 0346     		mov	r3, r0
 4974 1922 002B     		cmp	r3, #0
 4975 1924 04D0     		beq	.L173
1488:main.c        ****             {
1489:main.c        ****                 stringMIDI[i] = tempMIDI;
 4976              		.loc 1 1489 0
 4977 1926 8F49     		ldr	r1, .L238+4
 4978 1928 FB6D     		ldr	r3, [r7, #92]
 4979 192a 3A6A     		ldr	r2, [r7, #32]	@ float
 4980 192c 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 4981              	.L173:
 4982              	.LBE28:
1443:main.c        ****     	{
 4983              		.loc 1 1443 0 discriminator 2
 4984 1930 FB6D     		ldr	r3, [r7, #92]
 4985 1932 0133     		adds	r3, r3, #1
 4986 1934 FB65     		str	r3, [r7, #92]
 4987              	.L170:
1443:main.c        ****     	{
 4988              		.loc 1 1443 0 is_stmt 0 discriminator 1
 4989 1936 8C4B     		ldr	r3, .L238+8
 4990 1938 1B68     		ldr	r3, [r3]
 4991 193a FA6D     		ldr	r2, [r7, #92]
 4992 193c 9A42     		cmp	r2, r3
 4993 193e FFF66BAE 		blt	.L175
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 116


 4994              	.LBE27:
1490:main.c        ****             }
1491:main.c        ****     	}
1492:main.c        ****         testpin4_Write(0);
 4995              		.loc 1 1492 0 is_stmt 1
 4996 1942 0020     		movs	r0, #0
 4997 1944 FFF7FEFF 		bl	testpin4_Write
1493:main.c        ****         if (encoder_button_Read())
 4998              		.loc 1 1493 0
 4999 1948 FFF7FEFF 		bl	encoder_button_Read
 5000 194c 0346     		mov	r3, r0
 5001 194e 002B     		cmp	r3, #0
 5002 1950 10D0     		beq	.L176
1494:main.c        ****         {
1495:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
 5003              		.loc 1 1495 0
 5004 1952 FFF7FEFF 		bl	QuadDec_1_GetCounter
 5005 1956 0346     		mov	r3, r0
 5006 1958 9800     		lsls	r0, r3, #2
 5007 195a 844B     		ldr	r3, .L238+12
 5008 195c 1B68     		ldr	r3, [r3]
 5009 195e 834A     		ldr	r2, .L238+12
 5010 1960 1268     		ldr	r2, [r2]
 5011 1962 8349     		ldr	r1, .L238+16
 5012 1964 8A5C     		ldrb	r2, [r1, r2]
 5013 1966 D1B2     		uxtb	r1, r2
 5014 1968 C2B2     		uxtb	r2, r0
 5015 196a 0A44     		add	r2, r2, r1
 5016 196c D1B2     		uxtb	r1, r2
 5017 196e 804A     		ldr	r2, .L238+16
 5018 1970 D154     		strb	r1, [r2, r3]
 5019 1972 0FE0     		b	.L177
 5020              	.L176:
1496:main.c        ****         }
1497:main.c        ****         else
1498:main.c        ****         {
1499:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter();
 5021              		.loc 1 1499 0
 5022 1974 FFF7FEFF 		bl	QuadDec_1_GetCounter
 5023 1978 0346     		mov	r3, r0
 5024 197a 1846     		mov	r0, r3
 5025 197c 7B4B     		ldr	r3, .L238+12
 5026 197e 1B68     		ldr	r3, [r3]
 5027 1980 7A4A     		ldr	r2, .L238+12
 5028 1982 1268     		ldr	r2, [r2]
 5029 1984 7A49     		ldr	r1, .L238+16
 5030 1986 8A5C     		ldrb	r2, [r1, r2]
 5031 1988 D1B2     		uxtb	r1, r2
 5032 198a C2B2     		uxtb	r2, r0
 5033 198c 0A44     		add	r2, r2, r1
 5034 198e D1B2     		uxtb	r1, r2
 5035 1990 774A     		ldr	r2, .L238+16
 5036 1992 D154     		strb	r1, [r2, r3]
 5037              	.L177:
1500:main.c        ****         }
1501:main.c        ****         QuadDec_1_SetCounter(0);
 5038              		.loc 1 1501 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 117


 5039 1994 0020     		movs	r0, #0
 5040 1996 FFF7FEFF 		bl	QuadDec_1_SetCounter
1502:main.c        ****         
1503:main.c        **** 
1504:main.c        ****         
1505:main.c        ****         if (USB_check_flag)
 5041              		.loc 1 1505 0
 5042 199a 764B     		ldr	r3, .L238+20
 5043 199c 1B78     		ldrb	r3, [r3]
 5044 199e DBB2     		uxtb	r3, r3
 5045 19a0 002B     		cmp	r3, #0
 5046 19a2 01D0     		beq	.L178
1506:main.c        ****         {
1507:main.c        ****             checkUSB_Vbus();
 5047              		.loc 1 1507 0
 5048 19a4 FFF7FEFF 		bl	checkUSB_Vbus
 5049              	.L178:
1508:main.c        ****         }
1509:main.c        ****         //only service the USB bus if there is a computer plugged in
1510:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 5050              		.loc 1 1510 0
 5051 19a8 734B     		ldr	r3, .L238+24
 5052 19aa 1B78     		ldrb	r3, [r3]
 5053 19ac DBB2     		uxtb	r3, r3
 5054 19ae 002B     		cmp	r3, #0
 5055 19b0 13D0     		beq	.L216
 5056              		.loc 1 1510 0 is_stmt 0 discriminator 1
 5057 19b2 FFF7FEFF 		bl	USB_VBusPresent
 5058 19b6 0346     		mov	r3, r0
 5059 19b8 002B     		cmp	r3, #0
 5060 19ba 0ED0     		beq	.L216
1511:main.c        ****         {
1512:main.c        ****             if (midiSent > 64)
 5061              		.loc 1 1512 0 is_stmt 1
 5062 19bc 6F4B     		ldr	r3, .L238+28
 5063 19be 1B88     		ldrh	r3, [r3]
 5064 19c0 402B     		cmp	r3, #64
 5065 19c2 05D9     		bls	.L180
1513:main.c        ****             {
1514:main.c        ****                 midiOverflow++;
 5066              		.loc 1 1514 0
 5067 19c4 6E4B     		ldr	r3, .L238+32
 5068 19c6 1B88     		ldrh	r3, [r3]
 5069 19c8 0133     		adds	r3, r3, #1
 5070 19ca 9AB2     		uxth	r2, r3
 5071 19cc 6C4B     		ldr	r3, .L238+32
 5072 19ce 1A80     		strh	r2, [r3]	@ movhi
 5073              	.L180:
1515:main.c        ****             }
1516:main.c        ****             midiSent = 0;
 5074              		.loc 1 1516 0
 5075 19d0 6A4B     		ldr	r3, .L238+28
 5076 19d2 0022     		movs	r2, #0
 5077 19d4 1A80     		strh	r2, [r3]	@ movhi
1517:main.c        ****             USB_service();
 5078              		.loc 1 1517 0
 5079 19d6 FFF7FEFF 		bl	USB_service
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 118


 5080              	.L216:
1518:main.c        ****         }
1519:main.c        **** 
1520:main.c        ****         
1521:main.c        ****         /*
1522:main.c        ****         for (int i = 0; i < 10; i++)
1523:main.c        ****         {
1524:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1525:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1526:main.c        ****         }
1527:main.c        ****         
1528:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1529:main.c        ****         for (int i = 0; i < 4; i++)
1530:main.c        ****         {
1531:main.c        ****             myArray[i+21] = knobs[i];
1532:main.c        ****         }
1533:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1534:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
1535:main.c        ****         */
1536:main.c        ****                 //make sure previous SPI2 transmission has completed before transferring the remain
1537:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 5081              		.loc 1 1537 0
 5082 19da 00BF     		nop
 5083              	.L184:
 5084              		.loc 1 1537 0 is_stmt 0 discriminator 7
 5085 19dc FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5086 19e0 0346     		mov	r3, r0
 5087 19e2 03F00103 		and	r3, r3, #1
 5088 19e6 002B     		cmp	r3, #0
 5089 19e8 06D1     		bne	.L181
 5090              		.loc 1 1537 0 discriminator 2
 5091 19ea FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5092 19ee 0346     		mov	r3, r0
 5093 19f0 03F01003 		and	r3, r3, #16
 5094 19f4 002B     		cmp	r3, #0
 5095 19f6 01D0     		beq	.L182
 5096              	.L181:
 5097              		.loc 1 1537 0 discriminator 3
 5098 19f8 0123     		movs	r3, #1
 5099 19fa 00E0     		b	.L183
 5100              	.L182:
 5101              		.loc 1 1537 0 discriminator 4
 5102 19fc 0023     		movs	r3, #0
 5103              	.L183:
 5104              		.loc 1 1537 0 discriminator 6
 5105 19fe 002B     		cmp	r3, #0
 5106 1a00 ECD0     		beq	.L184
1538:main.c        ****         {
1539:main.c        ****             ;
1540:main.c        ****         }
1541:main.c        ****         testpin6_Write(1);
 5107              		.loc 1 1541 0 is_stmt 1
 5108 1a02 0120     		movs	r0, #1
 5109 1a04 FFF7FEFF 		bl	testpin6_Write
1542:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 5110              		.loc 1 1542 0
 5111 1a08 5E4B     		ldr	r3, .L238+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 119


 5112 1a0a 1B78     		ldrb	r3, [r3]
 5113 1a0c DBB2     		uxtb	r3, r3
 5114 1a0e 012B     		cmp	r3, #1
 5115 1a10 56D1     		bne	.L185
1543:main.c        ****         {
1544:main.c        ****             if (sendMessageEnd) //send end message
 5116              		.loc 1 1544 0
 5117 1a12 5D4B     		ldr	r3, .L238+40
 5118 1a14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5119 1a16 002B     		cmp	r3, #0
 5120 1a18 1DD0     		beq	.L186
1545:main.c        ****             {
1546:main.c        ****                 myArray[0] = 253;
 5121              		.loc 1 1546 0
 5122 1a1a 5C4B     		ldr	r3, .L238+44
 5123 1a1c FD22     		movs	r2, #253
 5124 1a1e 1A70     		strb	r2, [r3]
1547:main.c        ****                 myArray[1] = presetNumberToWrite;
 5125              		.loc 1 1547 0
 5126 1a20 5B4B     		ldr	r3, .L238+48
 5127 1a22 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5128 1a24 594B     		ldr	r3, .L238+44
 5129 1a26 5A70     		strb	r2, [r3, #1]
1548:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 5130              		.loc 1 1548 0
 5131 1a28 594B     		ldr	r3, .L238+48
 5132 1a2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5133 1a2c 1A46     		mov	r2, r3
 5134 1a2e 594B     		ldr	r3, .L238+52
 5135 1a30 1A60     		str	r2, [r3]
1549:main.c        ****                 //display previous preset as loaded
1550:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5136              		.loc 1 1550 0
 5137 1a32 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1551:main.c        ****                 //OLED_invert(0);
1552:main.c        ****                 sendMessageEnd = 0;
 5138              		.loc 1 1552 0
 5139 1a36 544B     		ldr	r3, .L238+40
 5140 1a38 0022     		movs	r2, #0
 5141 1a3a 1A70     		strb	r2, [r3]
1553:main.c        ****                 sendingMessage = 0;
 5142              		.loc 1 1553 0
 5143 1a3c 514B     		ldr	r3, .L238+36
 5144 1a3e 0022     		movs	r2, #0
 5145 1a40 1A70     		strb	r2, [r3]
1554:main.c        ****                 messageArraySendCount = 0;
 5146              		.loc 1 1554 0
 5147 1a42 554B     		ldr	r3, .L238+56
 5148 1a44 0022     		movs	r2, #0
 5149 1a46 1A80     		strh	r2, [r3]	@ movhi
1555:main.c        ****                 myArray[30] = 254;
 5150              		.loc 1 1555 0
 5151 1a48 504B     		ldr	r3, .L238+44
 5152 1a4a FE22     		movs	r2, #254
 5153 1a4c 9A77     		strb	r2, [r3, #30]
1556:main.c        ****                 myArray[31] = 253;
 5154              		.loc 1 1556 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 120


 5155 1a4e 4F4B     		ldr	r3, .L238+44
 5156 1a50 FD22     		movs	r2, #253
 5157 1a52 DA77     		strb	r2, [r3, #31]
 5158 1a54 75E1     		b	.L192
 5159              	.L186:
1557:main.c        ****                 
1558:main.c        ****             }
1559:main.c        ****             else //send chunks
1560:main.c        ****             {
1561:main.c        ****                 //send the next preset Chunkkkkk
1562:main.c        ****                 myArray[0] = 2;
 5160              		.loc 1 1562 0
 5161 1a56 4D4B     		ldr	r3, .L238+44
 5162 1a58 0222     		movs	r2, #2
 5163 1a5a 1A70     		strb	r2, [r3]
1563:main.c        ****                 myArray[1] = presetNumberToWrite;
 5164              		.loc 1 1563 0
 5165 1a5c 4C4B     		ldr	r3, .L238+48
 5166 1a5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5167 1a60 4A4B     		ldr	r3, .L238+44
 5168 1a62 5A70     		strb	r2, [r3, #1]
 5169              	.LBB29:
1564:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 5170              		.loc 1 1564 0
 5171 1a64 0223     		movs	r3, #2
 5172 1a66 BB65     		str	r3, [r7, #88]
 5173 1a68 20E0     		b	.L188
 5174              	.L191:
1565:main.c        ****                 {
1566:main.c        ****                     if (messageArraySendCount < messageArraySize)
 5175              		.loc 1 1566 0
 5176 1a6a 4B4B     		ldr	r3, .L238+56
 5177 1a6c 1A88     		ldrh	r2, [r3]
 5178 1a6e 4B4B     		ldr	r3, .L238+60
 5179 1a70 1B88     		ldrh	r3, [r3]
 5180 1a72 9A42     		cmp	r2, r3
 5181 1a74 0FD2     		bcs	.L189
1567:main.c        ****                     {
1568:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 5182              		.loc 1 1568 0
 5183 1a76 484B     		ldr	r3, .L238+56
 5184 1a78 1B88     		ldrh	r3, [r3]
 5185 1a7a 5A1C     		adds	r2, r3, #1
 5186 1a7c 91B2     		uxth	r1, r2
 5187 1a7e 464A     		ldr	r2, .L238+56
 5188 1a80 1180     		strh	r1, [r2]	@ movhi
 5189 1a82 1A46     		mov	r2, r3
 5190 1a84 464B     		ldr	r3, .L238+64
 5191 1a86 9B5C     		ldrb	r3, [r3, r2]
 5192 1a88 D9B2     		uxtb	r1, r3
 5193 1a8a 404A     		ldr	r2, .L238+44
 5194 1a8c BB6D     		ldr	r3, [r7, #88]
 5195 1a8e 1344     		add	r3, r3, r2
 5196 1a90 0A46     		mov	r2, r1
 5197 1a92 1A70     		strb	r2, [r3]
 5198 1a94 07E0     		b	.L190
 5199              	.L189:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 121


1569:main.c        ****                     }
1570:main.c        ****                     else
1571:main.c        ****                     {
1572:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 5200              		.loc 1 1572 0
 5201 1a96 3D4A     		ldr	r2, .L238+44
 5202 1a98 BB6D     		ldr	r3, [r7, #88]
 5203 1a9a 1344     		add	r3, r3, r2
 5204 1a9c EE22     		movs	r2, #238
 5205 1a9e 1A70     		strb	r2, [r3]
1573:main.c        ****                         sendMessageEnd = 1;
 5206              		.loc 1 1573 0
 5207 1aa0 394B     		ldr	r3, .L238+40
 5208 1aa2 0122     		movs	r2, #1
 5209 1aa4 1A70     		strb	r2, [r3]
 5210              	.L190:
1564:main.c        ****                 {
 5211              		.loc 1 1564 0 discriminator 2
 5212 1aa6 BB6D     		ldr	r3, [r7, #88]
 5213 1aa8 0133     		adds	r3, r3, #1
 5214 1aaa BB65     		str	r3, [r7, #88]
 5215              	.L188:
1564:main.c        ****                 {
 5216              		.loc 1 1564 0 is_stmt 0 discriminator 1
 5217 1aac BB6D     		ldr	r3, [r7, #88]
 5218 1aae 1D2B     		cmp	r3, #29
 5219 1ab0 DBD9     		bls	.L191
 5220              	.LBE29:
1574:main.c        ****                     }
1575:main.c        ****                 }
1576:main.c        ****                 myArray[30] = 254;
 5221              		.loc 1 1576 0 is_stmt 1
 5222 1ab2 364B     		ldr	r3, .L238+44
 5223 1ab4 FE22     		movs	r2, #254
 5224 1ab6 9A77     		strb	r2, [r3, #30]
1577:main.c        ****                 myArray[31] = 253;
 5225              		.loc 1 1577 0
 5226 1ab8 344B     		ldr	r3, .L238+44
 5227 1aba FD22     		movs	r2, #253
 5228 1abc DA77     		strb	r2, [r3, #31]
 5229 1abe 40E1     		b	.L192
 5230              	.L185:
1578:main.c        ****             }    
1579:main.c        ****         }
1580:main.c        ****         
1581:main.c        ****         else if (sendSingleParamUpdate)
 5231              		.loc 1 1581 0
 5232 1ac0 384B     		ldr	r3, .L238+68
 5233 1ac2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5234 1ac4 002B     		cmp	r3, #0
 5235 1ac6 1CD0     		beq	.L193
1582:main.c        ****         {
1583:main.c        ****             myArray[0] = 6;
 5236              		.loc 1 1583 0
 5237 1ac8 304B     		ldr	r3, .L238+44
 5238 1aca 0622     		movs	r2, #6
 5239 1acc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 122


1584:main.c        ****             myArray[1] = singleParamToUpdateHigh;
 5240              		.loc 1 1584 0
 5241 1ace 364B     		ldr	r3, .L238+72
 5242 1ad0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5243 1ad2 2E4B     		ldr	r3, .L238+44
 5244 1ad4 5A70     		strb	r2, [r3, #1]
1585:main.c        ****             myArray[2] = singleParamToUpdateLow;
 5245              		.loc 1 1585 0
 5246 1ad6 354B     		ldr	r3, .L238+76
 5247 1ad8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5248 1ada 2C4B     		ldr	r3, .L238+44
 5249 1adc 9A70     		strb	r2, [r3, #2]
1586:main.c        ****             myArray[3] = singleParamValueHigh;
 5250              		.loc 1 1586 0
 5251 1ade 344B     		ldr	r3, .L238+80
 5252 1ae0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5253 1ae2 2A4B     		ldr	r3, .L238+44
 5254 1ae4 DA70     		strb	r2, [r3, #3]
1587:main.c        ****             myArray[4] = singleParamValueLow;
 5255              		.loc 1 1587 0
 5256 1ae6 334B     		ldr	r3, .L238+84
 5257 1ae8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5258 1aea 284B     		ldr	r3, .L238+44
 5259 1aec 1A71     		strb	r2, [r3, #4]
1588:main.c        ****             myArray[30] = 254;
 5260              		.loc 1 1588 0
 5261 1aee 274B     		ldr	r3, .L238+44
 5262 1af0 FE22     		movs	r2, #254
 5263 1af2 9A77     		strb	r2, [r3, #30]
1589:main.c        ****             myArray[31] = 253;
 5264              		.loc 1 1589 0
 5265 1af4 254B     		ldr	r3, .L238+44
 5266 1af6 FD22     		movs	r2, #253
 5267 1af8 DA77     		strb	r2, [r3, #31]
1590:main.c        ****             sendSingleParamUpdate = 0;
 5268              		.loc 1 1590 0
 5269 1afa 2A4B     		ldr	r3, .L238+68
 5270 1afc 0022     		movs	r2, #0
 5271 1afe 1A70     		strb	r2, [r3]
 5272 1b00 1FE1     		b	.L192
 5273              	.L193:
1591:main.c        ****         }
1592:main.c        ****         else if (sendKnobs)
 5274              		.loc 1 1592 0
 5275 1b02 2D4B     		ldr	r3, .L238+88
 5276 1b04 1B78     		ldrb	r3, [r3]
 5277 1b06 DBB2     		uxtb	r3, r3
 5278 1b08 002B     		cmp	r3, #0
 5279 1b0a 00F0AB80 		beq	.L194
1593:main.c        ****         {
1594:main.c        ****             myArray[0] = 3; //sending knob stuff, not a preset send
 5280              		.loc 1 1594 0
 5281 1b0e 1F4B     		ldr	r3, .L238+44
 5282 1b10 0322     		movs	r2, #3
 5283 1b12 1A70     		strb	r2, [r3]
 5284              	.LBB30:
1595:main.c        ****             for (int i = 0; i < 8; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 123


 5285              		.loc 1 1595 0
 5286 1b14 0023     		movs	r3, #0
 5287 1b16 7B65     		str	r3, [r7, #84]
 5288 1b18 0AE0     		b	.L195
 5289              	.L196:
1596:main.c        ****             {
1597:main.c        ****                 myArray[i + 1] = macroKnobValues[i];
 5290              		.loc 1 1597 0 discriminator 3
 5291 1b1a 7B6D     		ldr	r3, [r7, #84]
 5292 1b1c 0133     		adds	r3, r3, #1
 5293 1b1e 2749     		ldr	r1, .L238+92
 5294 1b20 7A6D     		ldr	r2, [r7, #84]
 5295 1b22 0A44     		add	r2, r2, r1
 5296 1b24 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5297 1b26 194A     		ldr	r2, .L238+44
 5298 1b28 D154     		strb	r1, [r2, r3]
1595:main.c        ****             for (int i = 0; i < 8; i++)
 5299              		.loc 1 1595 0 discriminator 3
 5300 1b2a 7B6D     		ldr	r3, [r7, #84]
 5301 1b2c 0133     		adds	r3, r3, #1
 5302 1b2e 7B65     		str	r3, [r7, #84]
 5303              	.L195:
1595:main.c        ****             for (int i = 0; i < 8; i++)
 5304              		.loc 1 1595 0 is_stmt 0 discriminator 1
 5305 1b30 7B6D     		ldr	r3, [r7, #84]
 5306 1b32 072B     		cmp	r3, #7
 5307 1b34 F1DD     		ble	.L196
 5308              	.LBE30:
 5309              	.LBB31:
1598:main.c        ****             }
1599:main.c        ****             for (int i = 0; i < 4; i++)
 5310              		.loc 1 1599 0 is_stmt 1
 5311 1b36 0023     		movs	r3, #0
 5312 1b38 3B65     		str	r3, [r7, #80]
 5313 1b3a 0AE0     		b	.L197
 5314              	.L198:
1600:main.c        ****             {
1601:main.c        ****                 myArray[i + 9] = knobs[i];
 5315              		.loc 1 1601 0 discriminator 3
 5316 1b3c 3B6D     		ldr	r3, [r7, #80]
 5317 1b3e 0933     		adds	r3, r3, #9
 5318 1b40 1F49     		ldr	r1, .L238+96
 5319 1b42 3A6D     		ldr	r2, [r7, #80]
 5320 1b44 0A44     		add	r2, r2, r1
 5321 1b46 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5322 1b48 104A     		ldr	r2, .L238+44
 5323 1b4a D154     		strb	r1, [r2, r3]
1599:main.c        ****             {
 5324              		.loc 1 1599 0 discriminator 3
 5325 1b4c 3B6D     		ldr	r3, [r7, #80]
 5326 1b4e 0133     		adds	r3, r3, #1
 5327 1b50 3B65     		str	r3, [r7, #80]
 5328              	.L197:
1599:main.c        ****             {
 5329              		.loc 1 1599 0 is_stmt 0 discriminator 1
 5330 1b52 3B6D     		ldr	r3, [r7, #80]
 5331 1b54 032B     		cmp	r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 124


 5332 1b56 F1DD     		ble	.L198
 5333              	.LBE31:
 5334              	.LBB32:
1602:main.c        ****             }
1603:main.c        ****             for (int i = 0; i < 10; i++)
 5335              		.loc 1 1603 0 is_stmt 1
 5336 1b58 0023     		movs	r3, #0
 5337 1b5a FB64     		str	r3, [r7, #76]
 5338 1b5c 3DE0     		b	.L199
 5339              	.L239:
 5340 1b5e 00BF     		.align	2
 5341              	.L238:
 5342 1b60 00000000 		.word	prevStringPitchBend
 5343 1b64 00000000 		.word	stringMIDI
 5344 1b68 00000000 		.word	numStrings
 5345 1b6c 00000000 		.word	encoderNum
 5346 1b70 00000000 		.word	encoderVal
 5347 1b74 00000000 		.word	USB_check_flag
 5348 1b78 00000000 		.word	USB_active
 5349 1b7c 00000000 		.word	midiSent
 5350 1b80 00000000 		.word	midiOverflow
 5351 1b84 00000000 		.word	sendingMessage
 5352 1b88 00000000 		.word	sendMessageEnd
 5353 1b8c 00000000 		.word	myArray
 5354 1b90 00000000 		.word	presetNumberToWrite
 5355 1b94 00000000 		.word	currentPresetSelection
 5356 1b98 00000000 		.word	messageArraySendCount
 5357 1b9c 00000000 		.word	messageArraySize
 5358 1ba0 00000000 		.word	presetArray
 5359 1ba4 00000000 		.word	sendSingleParamUpdate
 5360 1ba8 00000000 		.word	singleParamToUpdateHigh
 5361 1bac 00000000 		.word	singleParamToUpdateLow
 5362 1bb0 00000000 		.word	singleParamValueHigh
 5363 1bb4 00000000 		.word	singleParamValueLow
 5364 1bb8 00000000 		.word	sendKnobs
 5365 1bbc 00000000 		.word	macroKnobValues
 5366 1bc0 00000000 		.word	knobs
 5367              	.L200:
1604:main.c        ****             {
1605:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 5368              		.loc 1 1605 0 discriminator 3
 5369 1bc4 FB6C     		ldr	r3, [r7, #76]
 5370 1bc6 0D33     		adds	r3, r3, #13
 5371 1bc8 9849     		ldr	r1, .L240
 5372 1bca FA6C     		ldr	r2, [r7, #76]
 5373 1bcc 0A44     		add	r2, r2, r1
 5374 1bce 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5375 1bd0 974A     		ldr	r2, .L240+4
 5376 1bd2 D154     		strb	r1, [r2, r3]
1603:main.c        ****             {
 5377              		.loc 1 1603 0 discriminator 3
 5378 1bd4 FB6C     		ldr	r3, [r7, #76]
 5379 1bd6 0133     		adds	r3, r3, #1
 5380 1bd8 FB64     		str	r3, [r7, #76]
 5381              	.L199:
1603:main.c        ****             {
 5382              		.loc 1 1603 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 125


 5383 1bda FB6C     		ldr	r3, [r7, #76]
 5384 1bdc 092B     		cmp	r3, #9
 5385 1bde F1DD     		ble	.L200
 5386              	.LBE32:
1606:main.c        ****             }
1607:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5387              		.loc 1 1607 0 is_stmt 1
 5388 1be0 944B     		ldr	r3, .L240+8
 5389 1be2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5390 1be4 1B01     		lsls	r3, r3, #4
 5391 1be6 5AB2     		sxtb	r2, r3
 5392 1be8 934B     		ldr	r3, .L240+12
 5393 1bea 1B68     		ldr	r3, [r3]
 5394 1bec 5BB2     		sxtb	r3, r3
 5395 1bee 1343     		orrs	r3, r3, r2
 5396 1bf0 5AB2     		sxtb	r2, r3
 5397 1bf2 924B     		ldr	r3, .L240+16
 5398 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5399 1bf6 5B01     		lsls	r3, r3, #5
 5400 1bf8 5BB2     		sxtb	r3, r3
 5401 1bfa 1343     		orrs	r3, r3, r2
 5402 1bfc 5AB2     		sxtb	r2, r3
 5403 1bfe 904B     		ldr	r3, .L240+20
 5404 1c00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5405 1c02 9B01     		lsls	r3, r3, #6
 5406 1c04 5BB2     		sxtb	r3, r3
 5407 1c06 1343     		orrs	r3, r3, r2
 5408 1c08 5BB2     		sxtb	r3, r3
 5409 1c0a DAB2     		uxtb	r2, r3
 5410 1c0c 884B     		ldr	r3, .L240+4
 5411 1c0e 1A76     		strb	r2, [r3, #24]
1608:main.c        ****             myArray[25] = patchNum;
 5412              		.loc 1 1608 0
 5413 1c10 8C4B     		ldr	r3, .L240+24
 5414 1c12 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5415 1c14 864B     		ldr	r3, .L240+4
 5416 1c16 5A76     		strb	r2, [r3, #25]
1609:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5417              		.loc 1 1609 0
 5418 1c18 8B4B     		ldr	r3, .L240+28
 5419 1c1a B3F90030 		ldrsh	r3, [r3]
 5420 1c1e 1B12     		asrs	r3, r3, #8
 5421 1c20 1BB2     		sxth	r3, r3
 5422 1c22 DAB2     		uxtb	r2, r3
 5423 1c24 824B     		ldr	r3, .L240+4
 5424 1c26 9A76     		strb	r2, [r3, #26]
1610:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5425              		.loc 1 1610 0
 5426 1c28 874B     		ldr	r3, .L240+28
 5427 1c2a B3F90030 		ldrsh	r3, [r3]
 5428 1c2e DAB2     		uxtb	r2, r3
 5429 1c30 7F4B     		ldr	r3, .L240+4
 5430 1c32 DA76     		strb	r2, [r3, #27]
1611:main.c        ****             myArray[28] = bar[1] >> 8;
 5431              		.loc 1 1611 0
 5432 1c34 854B     		ldr	r3, .L240+32
 5433 1c36 5B88     		ldrh	r3, [r3, #2]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 126


 5434 1c38 9BB2     		uxth	r3, r3
 5435 1c3a 1B0A     		lsrs	r3, r3, #8
 5436 1c3c 9BB2     		uxth	r3, r3
 5437 1c3e DAB2     		uxtb	r2, r3
 5438 1c40 7B4B     		ldr	r3, .L240+4
 5439 1c42 1A77     		strb	r2, [r3, #28]
1612:main.c        ****             myArray[29] = bar[1] & 0xff;
 5440              		.loc 1 1612 0
 5441 1c44 814B     		ldr	r3, .L240+32
 5442 1c46 5B88     		ldrh	r3, [r3, #2]	@ movhi
 5443 1c48 9BB2     		uxth	r3, r3
 5444 1c4a DAB2     		uxtb	r2, r3
 5445 1c4c 784B     		ldr	r3, .L240+4
 5446 1c4e 5A77     		strb	r2, [r3, #29]
1613:main.c        ****             myArray[30] = 254;
 5447              		.loc 1 1613 0
 5448 1c50 774B     		ldr	r3, .L240+4
 5449 1c52 FE22     		movs	r2, #254
 5450 1c54 9A77     		strb	r2, [r3, #30]
1614:main.c        ****             myArray[31] = 253;
 5451              		.loc 1 1614 0
 5452 1c56 764B     		ldr	r3, .L240+4
 5453 1c58 FD22     		movs	r2, #253
 5454 1c5a DA77     		strb	r2, [r3, #31]
1615:main.c        ****             
1616:main.c        ****             
1617:main.c        ****             sendKnobs = 0;
 5455              		.loc 1 1617 0
 5456 1c5c 7C4B     		ldr	r3, .L240+36
 5457 1c5e 0022     		movs	r2, #0
 5458 1c60 1A70     		strb	r2, [r3]
 5459 1c62 6EE0     		b	.L192
 5460              	.L194:
1618:main.c        ****         }
1619:main.c        ****         else
1620:main.c        ****         {
1621:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 5461              		.loc 1 1621 0
 5462 1c64 724B     		ldr	r3, .L240+4
 5463 1c66 0122     		movs	r2, #1
 5464 1c68 1A70     		strb	r2, [r3]
 5465              	.LBB33:
1622:main.c        ****             for (int i = 0; i < 12; i++)
 5466              		.loc 1 1622 0
 5467 1c6a 0023     		movs	r3, #0
 5468 1c6c BB64     		str	r3, [r7, #72]
 5469 1c6e 24E0     		b	.L201
 5470              	.L202:
 5471              	.LBB34:
1623:main.c        ****             {
1624:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 5472              		.loc 1 1624 0 discriminator 3
 5473 1c70 784A     		ldr	r2, .L240+40
 5474 1c72 BB6C     		ldr	r3, [r7, #72]
 5475 1c74 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5476 1c78 4FF08841 		mov	r1, #1140850688
 5477 1c7c 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 127


 5478 1c7e FFF7FEFF 		bl	__aeabi_fmul
 5479 1c82 0346     		mov	r3, r0
 5480 1c84 1846     		mov	r0, r3
 5481 1c86 FFF7FEFF 		bl	roundf
 5482 1c8a 0346     		mov	r3, r0
 5483 1c8c 1846     		mov	r0, r3
 5484 1c8e FFF7FEFF 		bl	__aeabi_f2iz
 5485 1c92 0346     		mov	r3, r0
 5486 1c94 FB60     		str	r3, [r7, #12]
1625:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 5487              		.loc 1 1625 0 discriminator 3
 5488 1c96 BB6C     		ldr	r3, [r7, #72]
 5489 1c98 5B00     		lsls	r3, r3, #1
 5490 1c9a 0133     		adds	r3, r3, #1
 5491 1c9c FA68     		ldr	r2, [r7, #12]
 5492 1c9e 1212     		asrs	r2, r2, #8
 5493 1ca0 D1B2     		uxtb	r1, r2
 5494 1ca2 634A     		ldr	r2, .L240+4
 5495 1ca4 D154     		strb	r1, [r2, r3]
1626:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 5496              		.loc 1 1626 0 discriminator 3
 5497 1ca6 BB6C     		ldr	r3, [r7, #72]
 5498 1ca8 0133     		adds	r3, r3, #1
 5499 1caa 5B00     		lsls	r3, r3, #1
 5500 1cac FA68     		ldr	r2, [r7, #12]
 5501 1cae D1B2     		uxtb	r1, r2
 5502 1cb0 5F4A     		ldr	r2, .L240+4
 5503 1cb2 D154     		strb	r1, [r2, r3]
 5504              	.LBE34:
1622:main.c        ****             {
 5505              		.loc 1 1622 0 discriminator 3
 5506 1cb4 BB6C     		ldr	r3, [r7, #72]
 5507 1cb6 0133     		adds	r3, r3, #1
 5508 1cb8 BB64     		str	r3, [r7, #72]
 5509              	.L201:
1622:main.c        ****             {
 5510              		.loc 1 1622 0 is_stmt 0 discriminator 1
 5511 1cba BB6C     		ldr	r3, [r7, #72]
 5512 1cbc 0B2B     		cmp	r3, #11
 5513 1cbe D7DD     		ble	.L202
 5514              	.LBE33:
1627:main.c        ****             }
1628:main.c        ****             
1629:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5515              		.loc 1 1629 0 is_stmt 1
 5516 1cc0 5C4B     		ldr	r3, .L240+8
 5517 1cc2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5518 1cc4 1B01     		lsls	r3, r3, #4
 5519 1cc6 5AB2     		sxtb	r2, r3
 5520 1cc8 5B4B     		ldr	r3, .L240+12
 5521 1cca 1B68     		ldr	r3, [r3]
 5522 1ccc 5BB2     		sxtb	r3, r3
 5523 1cce 1343     		orrs	r3, r3, r2
 5524 1cd0 5AB2     		sxtb	r2, r3
 5525 1cd2 5A4B     		ldr	r3, .L240+16
 5526 1cd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5527 1cd6 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 128


 5528 1cd8 5BB2     		sxtb	r3, r3
 5529 1cda 1343     		orrs	r3, r3, r2
 5530 1cdc 5AB2     		sxtb	r2, r3
 5531 1cde 584B     		ldr	r3, .L240+20
 5532 1ce0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5533 1ce2 9B01     		lsls	r3, r3, #6
 5534 1ce4 5BB2     		sxtb	r3, r3
 5535 1ce6 1343     		orrs	r3, r3, r2
 5536 1ce8 5BB2     		sxtb	r3, r3
 5537 1cea DAB2     		uxtb	r2, r3
 5538 1cec 504B     		ldr	r3, .L240+4
 5539 1cee 1A76     		strb	r2, [r3, #24]
1630:main.c        ****             myArray[25] = patchNum;
 5540              		.loc 1 1630 0
 5541 1cf0 544B     		ldr	r3, .L240+24
 5542 1cf2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5543 1cf4 4E4B     		ldr	r3, .L240+4
 5544 1cf6 5A76     		strb	r2, [r3, #25]
1631:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5545              		.loc 1 1631 0
 5546 1cf8 534B     		ldr	r3, .L240+28
 5547 1cfa B3F90030 		ldrsh	r3, [r3]
 5548 1cfe 1B12     		asrs	r3, r3, #8
 5549 1d00 1BB2     		sxth	r3, r3
 5550 1d02 DAB2     		uxtb	r2, r3
 5551 1d04 4A4B     		ldr	r3, .L240+4
 5552 1d06 9A76     		strb	r2, [r3, #26]
1632:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5553              		.loc 1 1632 0
 5554 1d08 4F4B     		ldr	r3, .L240+28
 5555 1d0a B3F90030 		ldrsh	r3, [r3]
 5556 1d0e DAB2     		uxtb	r2, r3
 5557 1d10 474B     		ldr	r3, .L240+4
 5558 1d12 DA76     		strb	r2, [r3, #27]
1633:main.c        ****             myArray[28] = bar[0] >> 8;
 5559              		.loc 1 1633 0
 5560 1d14 4D4B     		ldr	r3, .L240+32
 5561 1d16 1B88     		ldrh	r3, [r3]	@ movhi
 5562 1d18 9BB2     		uxth	r3, r3
 5563 1d1a 1B0A     		lsrs	r3, r3, #8
 5564 1d1c 9BB2     		uxth	r3, r3
 5565 1d1e DAB2     		uxtb	r2, r3
 5566 1d20 434B     		ldr	r3, .L240+4
 5567 1d22 1A77     		strb	r2, [r3, #28]
1634:main.c        ****             myArray[29] = bar[0] & 0xff;
 5568              		.loc 1 1634 0
 5569 1d24 494B     		ldr	r3, .L240+32
 5570 1d26 1B88     		ldrh	r3, [r3]	@ movhi
 5571 1d28 9BB2     		uxth	r3, r3
 5572 1d2a DAB2     		uxtb	r2, r3
 5573 1d2c 404B     		ldr	r3, .L240+4
 5574 1d2e 5A77     		strb	r2, [r3, #29]
1635:main.c        ****             myArray[30] = 254;
 5575              		.loc 1 1635 0
 5576 1d30 3F4B     		ldr	r3, .L240+4
 5577 1d32 FE22     		movs	r2, #254
 5578 1d34 9A77     		strb	r2, [r3, #30]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 129


1636:main.c        ****             myArray[31] = 253;
 5579              		.loc 1 1636 0
 5580 1d36 3E4B     		ldr	r3, .L240+4
 5581 1d38 FD22     		movs	r2, #253
 5582 1d3a DA77     		strb	r2, [r3, #31]
1637:main.c        ****             
1638:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 5583              		.loc 1 1638 0
 5584 1d3c 444B     		ldr	r3, .L240+36
 5585 1d3e 0122     		movs	r2, #1
 5586 1d40 1A70     		strb	r2, [r3]
 5587              	.L192:
1639:main.c        ****             /*
1640:main.c        ****             for (int i = 0; i < 16; i++)
1641:main.c        ****             {
1642:main.c        ****                 myArray[i+56] = encoderVal[i];
1643:main.c        ****             }
1644:main.c        ****             */
1645:main.c        ****         }
1646:main.c        **** 
1647:main.c        ****         
1648:main.c        **** 
1649:main.c        **** /*
1650:main.c        ****         for(int i = 0; i < myBufferSize; i++)
1651:main.c        ****         {
1652:main.c        ****             SPIM_1_WriteTxData(myArray[i]);
1653:main.c        ****         }
1654:main.c        ****     */    
1655:main.c        ****         
1656:main.c        **** 
1657:main.c        ****        
1658:main.c        ****         
1659:main.c        ****         
1660:main.c        ****         //parse input from synth board (names)
1661:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 5588              		.loc 1 1661 0
 5589 1d42 454B     		ldr	r3, .L240+44
 5590 1d44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5591 1d46 FD2B     		cmp	r3, #253
 5592 1d48 5BD1     		bne	.L203
 5593              		.loc 1 1661 0 is_stmt 0 discriminator 1
 5594 1d4a 434B     		ldr	r3, .L240+44
 5595 1d4c DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5596 1d4e FE2B     		cmp	r3, #254
 5597 1d50 57D1     		bne	.L203
 5598              	.LBB35:
1662:main.c        ****         {
1663:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5599              		.loc 1 1663 0 is_stmt 1
 5600 1d52 414B     		ldr	r3, .L240+44
 5601 1d54 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5602 1d56 BB60     		str	r3, [r7, #8]
1664:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 5603              		.loc 1 1664 0
 5604 1d58 3F4B     		ldr	r3, .L240+44
 5605 1d5a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5606 1d5c 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 130


1665:main.c        ****             int bufferPointer = 2;
 5607              		.loc 1 1665 0
 5608 1d5e 0223     		movs	r3, #2
 5609 1d60 7B64     		str	r3, [r7, #68]
 5610              	.LBB36:
1666:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5611              		.loc 1 1666 0
 5612 1d62 0023     		movs	r3, #0
 5613 1d64 3B64     		str	r3, [r7, #64]
 5614 1d66 14E0     		b	.L204
 5615              	.L205:
1667:main.c        ****             {
1668:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 5616              		.loc 1 1668 0 discriminator 3
 5617 1d68 3B4A     		ldr	r2, .L240+44
 5618 1d6a 7B6C     		ldr	r3, [r7, #68]
 5619 1d6c 1344     		add	r3, r3, r2
 5620 1d6e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5621 1d70 3A49     		ldr	r1, .L240+48
 5622 1d72 BA68     		ldr	r2, [r7, #8]
 5623 1d74 1346     		mov	r3, r2
 5624 1d76 DB00     		lsls	r3, r3, #3
 5625 1d78 9B1A     		subs	r3, r3, r2
 5626 1d7a 5B00     		lsls	r3, r3, #1
 5627 1d7c CA18     		adds	r2, r1, r3
 5628 1d7e 3B6C     		ldr	r3, [r7, #64]
 5629 1d80 1344     		add	r3, r3, r2
 5630 1d82 0246     		mov	r2, r0
 5631 1d84 1A70     		strb	r2, [r3]
1669:main.c        ****                 bufferPointer++;
 5632              		.loc 1 1669 0 discriminator 3
 5633 1d86 7B6C     		ldr	r3, [r7, #68]
 5634 1d88 0133     		adds	r3, r3, #1
 5635 1d8a 7B64     		str	r3, [r7, #68]
1666:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5636              		.loc 1 1666 0 discriminator 3
 5637 1d8c 3B6C     		ldr	r3, [r7, #64]
 5638 1d8e 0133     		adds	r3, r3, #1
 5639 1d90 3B64     		str	r3, [r7, #64]
 5640              	.L204:
1666:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5641              		.loc 1 1666 0 is_stmt 0 discriminator 1
 5642 1d92 3B6C     		ldr	r3, [r7, #64]
 5643 1d94 0D2B     		cmp	r3, #13
 5644 1d96 E7DD     		ble	.L205
 5645              	.LBE36:
1670:main.c        ****             }
1671:main.c        ****             bufferPointer = 17;
 5646              		.loc 1 1671 0 is_stmt 1
 5647 1d98 1123     		movs	r3, #17
 5648 1d9a 7B64     		str	r3, [r7, #68]
 5649              	.LBB37:
1672:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5650              		.loc 1 1672 0
 5651 1d9c 0023     		movs	r3, #0
 5652 1d9e FB63     		str	r3, [r7, #60]
 5653 1da0 1BE0     		b	.L206
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 131


 5654              	.L207:
1673:main.c        ****             {
1674:main.c        ****                 macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[buffer
 5655              		.loc 1 1674 0 discriminator 3
 5656 1da2 2D4A     		ldr	r2, .L240+44
 5657 1da4 7B6C     		ldr	r3, [r7, #68]
 5658 1da6 1344     		add	r3, r3, r2
 5659 1da8 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5660 1daa 2D48     		ldr	r0, .L240+52
 5661 1dac 7B68     		ldr	r3, [r7, #4]
 5662 1dae B968     		ldr	r1, [r7, #8]
 5663 1db0 1A46     		mov	r2, r3
 5664 1db2 D200     		lsls	r2, r2, #3
 5665 1db4 D21A     		subs	r2, r2, r3
 5666 1db6 5300     		lsls	r3, r2, #1
 5667 1db8 1A46     		mov	r2, r3
 5668 1dba 0B46     		mov	r3, r1
 5669 1dbc DB00     		lsls	r3, r3, #3
 5670 1dbe 5B1A     		subs	r3, r3, r1
 5671 1dc0 1B01     		lsls	r3, r3, #4
 5672 1dc2 1344     		add	r3, r3, r2
 5673 1dc4 C218     		adds	r2, r0, r3
 5674 1dc6 FB6B     		ldr	r3, [r7, #60]
 5675 1dc8 1344     		add	r3, r3, r2
 5676 1dca 2246     		mov	r2, r4
 5677 1dcc 1A70     		strb	r2, [r3]
1675:main.c        ****                 bufferPointer++;
 5678              		.loc 1 1675 0 discriminator 3
 5679 1dce 7B6C     		ldr	r3, [r7, #68]
 5680 1dd0 0133     		adds	r3, r3, #1
 5681 1dd2 7B64     		str	r3, [r7, #68]
1672:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5682              		.loc 1 1672 0 discriminator 3
 5683 1dd4 FB6B     		ldr	r3, [r7, #60]
 5684 1dd6 0133     		adds	r3, r3, #1
 5685 1dd8 FB63     		str	r3, [r7, #60]
 5686              	.L206:
1672:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5687              		.loc 1 1672 0 is_stmt 0 discriminator 1
 5688 1dda FB6B     		ldr	r3, [r7, #60]
 5689 1ddc 0D2B     		cmp	r3, #13
 5690 1dde E0DD     		ble	.L207
 5691              	.LBE37:
1676:main.c        ****             }
1677:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 5692              		.loc 1 1677 0 is_stmt 1
 5693 1de0 184B     		ldr	r3, .L240+24
 5694 1de2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5695 1de4 1A46     		mov	r2, r3
 5696 1de6 BB68     		ldr	r3, [r7, #8]
 5697 1de8 9A42     		cmp	r2, r3
 5698 1dea 0AD1     		bne	.L203
 5699              		.loc 1 1677 0 is_stmt 0 discriminator 1
 5700 1dec 7B68     		ldr	r3, [r7, #4]
 5701 1dee 072B     		cmp	r3, #7
 5702 1df0 07D1     		bne	.L203
 5703              		.loc 1 1677 0 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 132


 5704 1df2 1C4A     		ldr	r2, .L240+56
 5705 1df4 BB68     		ldr	r3, [r7, #8]
 5706 1df6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5707 1dfa 002B     		cmp	r3, #0
 5708 1dfc 01D1     		bne	.L203
1678:main.c        ****             {
1679:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5709              		.loc 1 1679 0 is_stmt 1
 5710 1dfe FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5711              	.L203:
 5712              	.LBE35:
1680:main.c        ****             }
1681:main.c        ****         }
1682:main.c        ****         
1683:main.c        ****         SPIM_1_ClearRxBuffer();
 5713              		.loc 1 1683 0
 5714 1e02 FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1684:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 5715              		.loc 1 1684 0
 5716 1e06 184B     		ldr	r3, .L240+60
 5717 1e08 1B78     		ldrb	r3, [r3]
 5718 1e0a DBB2     		uxtb	r3, r3
 5719 1e0c 0121     		movs	r1, #1
 5720 1e0e 1846     		mov	r0, r3
 5721 1e10 FFF7FEFF 		bl	CyDmaChEnable
1685:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 5722              		.loc 1 1685 0
 5723 1e14 154B     		ldr	r3, .L240+64
 5724 1e16 1B78     		ldrb	r3, [r3]
 5725 1e18 DBB2     		uxtb	r3, r3
 5726 1e1a 0121     		movs	r1, #1
 5727 1e1c 1846     		mov	r0, r3
 5728 1e1e FFF7FEFF 		bl	CyDmaChEnable
1686:main.c        ****         
1687:main.c        ****         testpin6_Write(0);
 5729              		.loc 1 1687 0
 5730 1e22 0020     		movs	r0, #0
 5731 1e24 FFF7FEFF 		bl	testpin6_Write
1688:main.c        ****        
1689:main.c        **** 
1690:main.c        ****      }
 5732              		.loc 1 1690 0
 5733 1e28 FEF763BB 		b	.L208
 5734              	.L241:
 5735              		.align	2
 5736              	.L240:
 5737 1e2c 00000000 		.word	pedals8bit
 5738 1e30 00000000 		.word	myArray
 5739 1e34 00000000 		.word	voice
 5740 1e38 00000000 		.word	octave
 5741 1e3c 00000000 		.word	dualSlider
 5742 1e40 00000000 		.word	neck
 5743 1e44 00000000 		.word	patchNum
 5744 1e48 00000000 		.word	processed_volumePedal
 5745 1e4c 00000000 		.word	bar
 5746 1e50 00000000 		.word	sendKnobs
 5747 1e54 00000000 		.word	stringMIDI
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 133


 5748 1e58 00000000 		.word	inBuffer
 5749 1e5c 00000000 		.word	presetNamesArray
 5750 1e60 00000000 		.word	macroNamesArray
 5751 1e64 00000000 		.word	presetAlreadyDisplayed
 5752 1e68 00000000 		.word	rx3Channel
 5753 1e6c 00000000 		.word	txChannel
 5754              		.cfi_endproc
 5755              	.LFE75:
 5756              		.size	main, .-main
 5757              		.section	.text.DmaTxConfiguration,"ax",%progbits
 5758              		.align	2
 5759              		.global	DmaTxConfiguration
 5760              		.thumb
 5761              		.thumb_func
 5762              		.type	DmaTxConfiguration, %function
 5763              	DmaTxConfiguration:
 5764              	.LFB76:
1691:main.c        **** }
1692:main.c        **** 
1693:main.c        **** void DmaTxConfiguration()
1694:main.c        **** {
 5765              		.loc 1 1694 0
 5766              		.cfi_startproc
 5767              		@ args = 0, pretend = 0, frame = 0
 5768              		@ frame_needed = 1, uses_anonymous_args = 0
 5769 0000 80B5     		push	{r7, lr}
 5770              		.cfi_def_cfa_offset 8
 5771              		.cfi_offset 7, -8
 5772              		.cfi_offset 14, -4
 5773 0002 00AF     		add	r7, sp, #0
 5774              		.cfi_def_cfa_register 7
1695:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1696:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 5775              		.loc 1 1696 0
 5776 0004 4FF48043 		mov	r3, #16384
 5777 0008 41F6FF72 		movw	r2, #8191
 5778 000c 0121     		movs	r1, #1
 5779 000e 0120     		movs	r0, #1
 5780 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 5781 0014 0346     		mov	r3, r0
 5782 0016 1A46     		mov	r2, r3
 5783 0018 124B     		ldr	r3, .L243
 5784 001a 1A70     		strb	r2, [r3]
1697:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1698:main.c        **** 
1699:main.c        ****     txTD = CyDmaTdAllocate();
 5785              		.loc 1 1699 0
 5786 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5787 0020 0346     		mov	r3, r0
 5788 0022 1A46     		mov	r2, r3
 5789 0024 104B     		ldr	r3, .L243+4
 5790 0026 1A70     		strb	r2, [r3]
1700:main.c        **** 
1701:main.c        ****     /* Configure this Td as follows:
1702:main.c        ****     *  - Increment the source address, but not the destination address   
1703:main.c        ****     */
1704:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 134


 5791              		.loc 1 1704 0
 5792 0028 0F4B     		ldr	r3, .L243+4
 5793 002a 1B78     		ldrb	r3, [r3]
 5794 002c D8B2     		uxtb	r0, r3
 5795 002e 0123     		movs	r3, #1
 5796 0030 FE22     		movs	r2, #254
 5797 0032 2021     		movs	r1, #32
 5798 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1705:main.c        **** 
1706:main.c        ****     /* From the memory to the SPIM */
1707:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 5799              		.loc 1 1707 0
 5800 0038 0B4B     		ldr	r3, .L243+4
 5801 003a 1B78     		ldrb	r3, [r3]
 5802 003c DBB2     		uxtb	r3, r3
 5803 003e 0B4A     		ldr	r2, .L243+8
 5804 0040 91B2     		uxth	r1, r2
 5805 0042 46F24242 		movw	r2, #25666
 5806 0046 1846     		mov	r0, r3
 5807 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1708:main.c        ****     
1709:main.c        ****     /* Associate the TD with the channel */
1710:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 5808              		.loc 1 1710 0
 5809 004c 054B     		ldr	r3, .L243
 5810 004e 1B78     		ldrb	r3, [r3]
 5811 0050 DAB2     		uxtb	r2, r3
 5812 0052 054B     		ldr	r3, .L243+4
 5813 0054 1B78     		ldrb	r3, [r3]
 5814 0056 DBB2     		uxtb	r3, r3
 5815 0058 1946     		mov	r1, r3
 5816 005a 1046     		mov	r0, r2
 5817 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1711:main.c        ****    
1712:main.c        **** } 
 5818              		.loc 1 1712 0
 5819 0060 00BF     		nop
 5820 0062 80BD     		pop	{r7, pc}
 5821              	.L244:
 5822              		.align	2
 5823              	.L243:
 5824 0064 00000000 		.word	txChannel
 5825 0068 00000000 		.word	txTD
 5826 006c 00000000 		.word	myArray
 5827              		.cfi_endproc
 5828              	.LFE76:
 5829              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 5830              		.section	.text.DmaRxConfiguration,"ax",%progbits
 5831              		.align	2
 5832              		.global	DmaRxConfiguration
 5833              		.thumb
 5834              		.thumb_func
 5835              		.type	DmaRxConfiguration, %function
 5836              	DmaRxConfiguration:
 5837              	.LFB77:
1713:main.c        **** 
1714:main.c        **** void DmaRxConfiguration()
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 135


1715:main.c        **** { 
 5838              		.loc 1 1715 0
 5839              		.cfi_startproc
 5840              		@ args = 0, pretend = 0, frame = 0
 5841              		@ frame_needed = 1, uses_anonymous_args = 0
 5842 0000 80B5     		push	{r7, lr}
 5843              		.cfi_def_cfa_offset 8
 5844              		.cfi_offset 7, -8
 5845              		.cfi_offset 14, -4
 5846 0002 00AF     		add	r7, sp, #0
 5847              		.cfi_def_cfa_register 7
1716:main.c        ****     //pluck dma
1717:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5848              		.loc 1 1717 0
 5849 0004 41F6FF73 		movw	r3, #8191
 5850 0008 4FF48042 		mov	r2, #16384
 5851 000c 0121     		movs	r1, #1
 5852 000e 0120     		movs	r0, #1
 5853 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 5854 0014 0346     		mov	r3, r0
 5855 0016 1A46     		mov	r2, r3
 5856 0018 4A4B     		ldr	r3, .L246
 5857 001a 1A70     		strb	r2, [r3]
1718:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1719:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 5858              		.loc 1 1719 0
 5859 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5860 0020 0346     		mov	r3, r0
 5861 0022 1A46     		mov	r2, r3
 5862 0024 484B     		ldr	r3, .L246+4
 5863 0026 1A70     		strb	r2, [r3]
1720:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 5864              		.loc 1 1720 0
 5865 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 5866 002c 0346     		mov	r3, r0
 5867 002e 1A46     		mov	r2, r3
 5868 0030 454B     		ldr	r3, .L246+4
 5869 0032 5A70     		strb	r2, [r3, #1]
1721:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 5870              		.loc 1 1721 0
 5871 0034 444B     		ldr	r3, .L246+4
 5872 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5873 0038 0223     		movs	r3, #2
 5874 003a FE22     		movs	r2, #254
 5875 003c 1A21     		movs	r1, #26
 5876 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1722:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 5877              		.loc 1 1722 0
 5878 0042 414B     		ldr	r3, .L246+4
 5879 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5880 0046 0223     		movs	r3, #2
 5881 0048 FE22     		movs	r2, #254
 5882 004a 1A21     		movs	r1, #26
 5883 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1723:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 5884              		.loc 1 1723 0
 5885 0050 3D4B     		ldr	r3, .L246+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 136


 5886 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5887 0054 3D4A     		ldr	r2, .L246+8
 5888 0056 92B2     		uxth	r2, r2
 5889 0058 46F25451 		movw	r1, #25940
 5890 005c 1846     		mov	r0, r3
 5891 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1724:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 5892              		.loc 1 1724 0
 5893 0062 394B     		ldr	r3, .L246+4
 5894 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5895 0066 3A4A     		ldr	r2, .L246+12
 5896 0068 92B2     		uxth	r2, r2
 5897 006a 46F25451 		movw	r1, #25940
 5898 006e 1846     		mov	r0, r3
 5899 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1725:main.c        **** 
1726:main.c        ****     //bar dma
1727:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5900              		.loc 1 1727 0
 5901 0074 41F6FF73 		movw	r3, #8191
 5902 0078 4FF48042 		mov	r2, #16384
 5903 007c 0121     		movs	r1, #1
 5904 007e 0120     		movs	r0, #1
 5905 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 5906 0084 0346     		mov	r3, r0
 5907 0086 1A46     		mov	r2, r3
 5908 0088 324B     		ldr	r3, .L246+16
 5909 008a 1A70     		strb	r2, [r3]
1728:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1729:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 5910              		.loc 1 1729 0
 5911 008c FFF7FEFF 		bl	CyDmaTdAllocate
 5912 0090 0346     		mov	r3, r0
 5913 0092 1A46     		mov	r2, r3
 5914 0094 304B     		ldr	r3, .L246+20
 5915 0096 1A70     		strb	r2, [r3]
1730:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 5916              		.loc 1 1730 0
 5917 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 5918 009c 0346     		mov	r3, r0
 5919 009e 1A46     		mov	r2, r3
 5920 00a0 2D4B     		ldr	r3, .L246+20
 5921 00a2 5A70     		strb	r2, [r3, #1]
1731:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5922              		.loc 1 1731 0
 5923 00a4 2C4B     		ldr	r3, .L246+20
 5924 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5925 00a8 0623     		movs	r3, #6
 5926 00aa FE22     		movs	r2, #254
 5927 00ac 0821     		movs	r1, #8
 5928 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1732:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5929              		.loc 1 1732 0
 5930 00b2 294B     		ldr	r3, .L246+20
 5931 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5932 00b6 0623     		movs	r3, #6
 5933 00b8 FE22     		movs	r2, #254
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 137


 5934 00ba 0821     		movs	r1, #8
 5935 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1733:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 5936              		.loc 1 1733 0
 5937 00c0 254B     		ldr	r3, .L246+20
 5938 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5939 00c4 254A     		ldr	r2, .L246+24
 5940 00c6 92B2     		uxth	r2, r2
 5941 00c8 46F25751 		movw	r1, #25943
 5942 00cc 1846     		mov	r0, r3
 5943 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1734:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 5944              		.loc 1 1734 0
 5945 00d2 214B     		ldr	r3, .L246+20
 5946 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5947 00d6 224A     		ldr	r2, .L246+28
 5948 00d8 92B2     		uxth	r2, r2
 5949 00da 46F25751 		movw	r1, #25943
 5950 00de 1846     		mov	r0, r3
 5951 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1735:main.c        ****     
1736:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1737:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5952              		.loc 1 1737 0
 5953 00e4 41F6FF73 		movw	r3, #8191
 5954 00e8 4FF48042 		mov	r2, #16384
 5955 00ec 0121     		movs	r1, #1
 5956 00ee 0120     		movs	r0, #1
 5957 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 5958 00f4 0346     		mov	r3, r0
 5959 00f6 1A46     		mov	r2, r3
 5960 00f8 1A4B     		ldr	r3, .L246+32
 5961 00fa 1A70     		strb	r2, [r3]
1738:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1739:main.c        **** 
1740:main.c        ****     rx3TD = CyDmaTdAllocate();
 5962              		.loc 1 1740 0
 5963 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 5964 0100 0346     		mov	r3, r0
 5965 0102 1A46     		mov	r2, r3
 5966 0104 184B     		ldr	r3, .L246+36
 5967 0106 1A70     		strb	r2, [r3]
1741:main.c        ****     
1742:main.c        ****     /* Configure this Td as follows:
1743:main.c        ****     *  - Increment the destination address, but not the source address
1744:main.c        ****     */
1745:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 5968              		.loc 1 1745 0
 5969 0108 174B     		ldr	r3, .L246+36
 5970 010a 1B78     		ldrb	r3, [r3]
 5971 010c D8B2     		uxtb	r0, r3
 5972 010e 0223     		movs	r3, #2
 5973 0110 FE22     		movs	r2, #254
 5974 0112 2021     		movs	r1, #32
 5975 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1746:main.c        **** 
1747:main.c        ****     /* From the SPIM to the memory */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 138


1748:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 5976              		.loc 1 1748 0
 5977 0118 134B     		ldr	r3, .L246+36
 5978 011a 1B78     		ldrb	r3, [r3]
 5979 011c DBB2     		uxtb	r3, r3
 5980 011e 134A     		ldr	r2, .L246+40
 5981 0120 92B2     		uxth	r2, r2
 5982 0122 46F25241 		movw	r1, #25682
 5983 0126 1846     		mov	r0, r3
 5984 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1749:main.c        **** 
1750:main.c        ****     /* Associate the TD with the channel */
1751:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 5985              		.loc 1 1751 0
 5986 012c 0D4B     		ldr	r3, .L246+32
 5987 012e 1B78     		ldrb	r3, [r3]
 5988 0130 DAB2     		uxtb	r2, r3
 5989 0132 0D4B     		ldr	r3, .L246+36
 5990 0134 1B78     		ldrb	r3, [r3]
 5991 0136 DBB2     		uxtb	r3, r3
 5992 0138 1946     		mov	r1, r3
 5993 013a 1046     		mov	r0, r2
 5994 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1752:main.c        **** }
 5995              		.loc 1 1752 0
 5996 0140 00BF     		nop
 5997 0142 80BD     		pop	{r7, pc}
 5998              	.L247:
 5999              		.align	2
 6000              	.L246:
 6001 0144 00000000 		.word	rx1Channel
 6002 0148 00000000 		.word	rx1TD
 6003 014c 00000000 		.word	rxBufferPluck
 6004 0150 1A000000 		.word	rxBufferPluck+26
 6005 0154 00000000 		.word	rx2Channel
 6006 0158 00000000 		.word	rx2TD
 6007 015c 00000000 		.word	rxBufferBar
 6008 0160 08000000 		.word	rxBufferBar+8
 6009 0164 00000000 		.word	rx3Channel
 6010 0168 00000000 		.word	rx3TD
 6011 016c 00000000 		.word	inBuffer
 6012              		.cfi_endproc
 6013              	.LFE77:
 6014              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 6015              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 6016              		.align	2
 6017              		.global	I2C_MasterWriteBlocking
 6018              		.thumb
 6019              		.thumb_func
 6020              		.type	I2C_MasterWriteBlocking, %function
 6021              	I2C_MasterWriteBlocking:
 6022              	.LFB78:
1753:main.c        **** 
1754:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1755:main.c        **** {
 6023              		.loc 1 1755 0
 6024              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 139


 6025              		@ args = 0, pretend = 0, frame = 24
 6026              		@ frame_needed = 1, uses_anonymous_args = 0
 6027 0000 80B5     		push	{r7, lr}
 6028              		.cfi_def_cfa_offset 8
 6029              		.cfi_offset 7, -8
 6030              		.cfi_offset 14, -4
 6031 0002 86B0     		sub	sp, sp, #24
 6032              		.cfi_def_cfa_offset 32
 6033 0004 00AF     		add	r7, sp, #0
 6034              		.cfi_def_cfa_register 7
 6035 0006 0346     		mov	r3, r0
 6036 0008 FB71     		strb	r3, [r7, #7]
 6037 000a 0B46     		mov	r3, r1	@ movhi
 6038 000c BB80     		strh	r3, [r7, #4]	@ movhi
 6039 000e 1346     		mov	r3, r2
 6040 0010 BB71     		strb	r3, [r7, #6]
1756:main.c        ****     uint8 volatile status;
1757:main.c        ****     uint8_t error = 0;
 6041              		.loc 1 1757 0
 6042 0012 0023     		movs	r3, #0
 6043 0014 FB75     		strb	r3, [r7, #23]
1758:main.c        ****     uint32_t timeout = 50000;
 6044              		.loc 1 1758 0
 6045 0016 4CF25033 		movw	r3, #50000
 6046 001a 3B61     		str	r3, [r7, #16]
1759:main.c        ****     status = I2C_1_MasterClearStatus();
 6047              		.loc 1 1759 0
 6048 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6049 0020 0346     		mov	r3, r0
 6050 0022 FB73     		strb	r3, [r7, #15]
1760:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6051              		.loc 1 1760 0
 6052 0024 FB7B     		ldrb	r3, [r7, #15]
 6053 0026 DBB2     		uxtb	r3, r3
 6054 0028 5BB2     		sxtb	r3, r3
 6055 002a 002B     		cmp	r3, #0
 6056 002c 42DB     		blt	.L249
1761:main.c        ****     {
1762:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 6057              		.loc 1 1762 0
 6058 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 6059 0030 DAB2     		uxtb	r2, r3
 6060 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6061 0034 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6062 0036 2949     		ldr	r1, .L258
 6063 0038 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 6064 003c 0346     		mov	r3, r0
 6065 003e FB73     		strb	r3, [r7, #15]
1763:main.c        ****                                      mode);
1764:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6066              		.loc 1 1764 0
 6067 0040 FB7B     		ldrb	r3, [r7, #15]
 6068 0042 DBB2     		uxtb	r3, r3
 6069 0044 002B     		cmp	r3, #0
 6070 0046 2FD1     		bne	.L250
 6071              	.L254:
1765:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 140


1766:main.c        ****             /* wait for write complete and no error */
1767:main.c        ****             do
1768:main.c        ****             {
1769:main.c        ****                 status = I2C_1_MasterStatus();
 6072              		.loc 1 1769 0
 6073 0048 FFF7FEFF 		bl	I2C_1_MasterStatus
 6074 004c 0346     		mov	r3, r0
 6075 004e FB73     		strb	r3, [r7, #15]
1770:main.c        ****                 timeout--;
 6076              		.loc 1 1770 0
 6077 0050 3B69     		ldr	r3, [r7, #16]
 6078 0052 013B     		subs	r3, r3, #1
 6079 0054 3B61     		str	r3, [r7, #16]
1771:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6080              		.loc 1 1771 0
 6081 0056 FB7B     		ldrb	r3, [r7, #15]
 6082 0058 DBB2     		uxtb	r3, r3
 6083 005a 802B     		cmp	r3, #128
 6084 005c 03D1     		bne	.L251
1772:main.c        ****                 {
1773:main.c        ****                     I2C_reset();
 6085              		.loc 1 1773 0
 6086 005e FFF7FEFF 		bl	I2C_reset
1774:main.c        ****                     error = 1;
 6087              		.loc 1 1774 0
 6088 0062 0123     		movs	r3, #1
 6089 0064 FB75     		strb	r3, [r7, #23]
 6090              	.L251:
1775:main.c        ****                 }
1776:main.c        ****                 if (timeout == 0)
 6091              		.loc 1 1776 0
 6092 0066 3B69     		ldr	r3, [r7, #16]
 6093 0068 002B     		cmp	r3, #0
 6094 006a 05D1     		bne	.L252
1777:main.c        ****                 {
1778:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6095              		.loc 1 1778 0
 6096 006c 8023     		movs	r3, #128
 6097 006e FB73     		strb	r3, [r7, #15]
1779:main.c        ****                     I2C_reset();
 6098              		.loc 1 1779 0
 6099 0070 FFF7FEFF 		bl	I2C_reset
1780:main.c        ****                     error = 1;
 6100              		.loc 1 1780 0
 6101 0074 0123     		movs	r3, #1
 6102 0076 FB75     		strb	r3, [r7, #23]
 6103              	.L252:
1781:main.c        ****                 }
1782:main.c        ****                 
1783:main.c        ****                 if (status == 0)
 6104              		.loc 1 1783 0
 6105 0078 FB7B     		ldrb	r3, [r7, #15]
 6106 007a DBB2     		uxtb	r3, r3
 6107 007c 002B     		cmp	r3, #0
 6108 007e 05D1     		bne	.L253
1784:main.c        ****                 {
1785:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 141


 6109              		.loc 1 1785 0
 6110 0080 8023     		movs	r3, #128
 6111 0082 FB73     		strb	r3, [r7, #15]
1786:main.c        ****                     I2C_reset();
 6112              		.loc 1 1786 0
 6113 0084 FFF7FEFF 		bl	I2C_reset
1787:main.c        ****                     error = 1;
 6114              		.loc 1 1787 0
 6115 0088 0123     		movs	r3, #1
 6116 008a FB75     		strb	r3, [r7, #23]
 6117              	.L253:
1788:main.c        ****                 }
1789:main.c        ****                 
1790:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6118              		.loc 1 1790 0
 6119 008c FB7B     		ldrb	r3, [r7, #15]
 6120 008e DBB2     		uxtb	r3, r3
 6121 0090 03F08203 		and	r3, r3, #130
 6122 0094 002B     		cmp	r3, #0
 6123 0096 0DD1     		bne	.L249
 6124              		.loc 1 1790 0 is_stmt 0 discriminator 1
 6125 0098 FB7B     		ldrb	r3, [r7, #15]
 6126 009a DBB2     		uxtb	r3, r3
 6127 009c 002B     		cmp	r3, #0
 6128 009e 09D0     		beq	.L249
 6129              		.loc 1 1790 0 discriminator 2
 6130 00a0 3B69     		ldr	r3, [r7, #16]
 6131 00a2 002B     		cmp	r3, #0
 6132 00a4 D0D1     		bne	.L254
 6133 00a6 05E0     		b	.L249
 6134              	.L250:
1791:main.c        ****         }
1792:main.c        ****         else
1793:main.c        ****         {
1794:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1795:main.c        ****             *  I2CM_MasterStatus() error output */
1796:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6135              		.loc 1 1796 0 is_stmt 1
 6136 00a8 8023     		movs	r3, #128
 6137 00aa FB73     		strb	r3, [r7, #15]
1797:main.c        ****             I2C_reset();
 6138              		.loc 1 1797 0
 6139 00ac FFF7FEFF 		bl	I2C_reset
1798:main.c        ****             error = 1;
 6140              		.loc 1 1798 0
 6141 00b0 0123     		movs	r3, #1
 6142 00b2 FB75     		strb	r3, [r7, #23]
 6143              	.L249:
1799:main.c        ****         } 
1800:main.c        ****     }  
1801:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6144              		.loc 1 1801 0
 6145 00b4 FB7B     		ldrb	r3, [r7, #15]
 6146 00b6 DBB2     		uxtb	r3, r3
 6147 00b8 03F02003 		and	r3, r3, #32
 6148 00bc 002B     		cmp	r3, #0
 6149 00be 04D1     		bne	.L255
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 142


 6150              		.loc 1 1801 0 is_stmt 0 discriminator 1
 6151 00c0 FB7B     		ldrb	r3, [r7, #15]
 6152 00c2 DBB2     		uxtb	r3, r3
 6153 00c4 5BB2     		sxtb	r3, r3
 6154 00c6 002B     		cmp	r3, #0
 6155 00c8 03DA     		bge	.L256
 6156              	.L255:
1802:main.c        ****     {
1803:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1804:main.c        ****         //i2c_skipped[main_counter] = 1;
1805:main.c        ****         I2C_reset();
 6157              		.loc 1 1805 0 is_stmt 1
 6158 00ca FFF7FEFF 		bl	I2C_reset
1806:main.c        ****         error = 1;
 6159              		.loc 1 1806 0
 6160 00ce 0123     		movs	r3, #1
 6161 00d0 FB75     		strb	r3, [r7, #23]
 6162              	.L256:
1807:main.c        ****     }
1808:main.c        ****     return error;
 6163              		.loc 1 1808 0
 6164 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1809:main.c        **** }
 6165              		.loc 1 1809 0
 6166 00d4 1846     		mov	r0, r3
 6167 00d6 1837     		adds	r7, r7, #24
 6168              		.cfi_def_cfa_offset 8
 6169 00d8 BD46     		mov	sp, r7
 6170              		.cfi_def_cfa_register 13
 6171              		@ sp needed
 6172 00da 80BD     		pop	{r7, pc}
 6173              	.L259:
 6174              		.align	2
 6175              	.L258:
 6176 00dc 00000000 		.word	I2Cbuff1
 6177              		.cfi_endproc
 6178              	.LFE78:
 6179              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 6180              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 6181              		.align	2
 6182              		.global	I2C_MasterReadBlocking
 6183              		.thumb
 6184              		.thumb_func
 6185              		.type	I2C_MasterReadBlocking, %function
 6186              	I2C_MasterReadBlocking:
 6187              	.LFB79:
1810:main.c        **** 
1811:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1812:main.c        **** {
 6188              		.loc 1 1812 0
 6189              		.cfi_startproc
 6190              		@ args = 0, pretend = 0, frame = 16
 6191              		@ frame_needed = 1, uses_anonymous_args = 0
 6192 0000 80B5     		push	{r7, lr}
 6193              		.cfi_def_cfa_offset 8
 6194              		.cfi_offset 7, -8
 6195              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 143


 6196 0002 84B0     		sub	sp, sp, #16
 6197              		.cfi_def_cfa_offset 24
 6198 0004 00AF     		add	r7, sp, #0
 6199              		.cfi_def_cfa_register 7
 6200 0006 0346     		mov	r3, r0
 6201 0008 FB71     		strb	r3, [r7, #7]
 6202 000a 0B46     		mov	r3, r1
 6203 000c BB71     		strb	r3, [r7, #6]
 6204 000e 1346     		mov	r3, r2
 6205 0010 7B71     		strb	r3, [r7, #5]
1813:main.c        ****     uint8 volatile status;
1814:main.c        ****     uint32_t timeout = 50000;
 6206              		.loc 1 1814 0
 6207 0012 4CF25033 		movw	r3, #50000
 6208 0016 FB60     		str	r3, [r7, #12]
1815:main.c        ****     uint8_t error = 0;
 6209              		.loc 1 1815 0
 6210 0018 0023     		movs	r3, #0
 6211 001a FB72     		strb	r3, [r7, #11]
1816:main.c        ****     status = I2C_1_MasterClearStatus();
 6212              		.loc 1 1816 0
 6213 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6214 0020 0346     		mov	r3, r0
 6215 0022 BB72     		strb	r3, [r7, #10]
1817:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6216              		.loc 1 1817 0
 6217 0024 BB7A     		ldrb	r3, [r7, #10]
 6218 0026 DBB2     		uxtb	r3, r3
 6219 0028 5BB2     		sxtb	r3, r3
 6220 002a 002B     		cmp	r3, #0
 6221 002c 3DDB     		blt	.L261
1818:main.c        ****     {
1819:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 6222              		.loc 1 1819 0
 6223 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6224 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 6225 0032 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6226 0034 2749     		ldr	r1, .L269
 6227 0036 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 6228 003a 0346     		mov	r3, r0
 6229 003c BB72     		strb	r3, [r7, #10]
1820:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1821:main.c        ****                                     nbytes, mode); 
1822:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6230              		.loc 1 1822 0
 6231 003e BB7A     		ldrb	r3, [r7, #10]
 6232 0040 DBB2     		uxtb	r3, r3
 6233 0042 002B     		cmp	r3, #0
 6234 0044 2BD1     		bne	.L262
 6235              	.L265:
1823:main.c        ****         {
1824:main.c        ****             /* wait for read complete and no error */
1825:main.c        ****             do
1826:main.c        ****             {
1827:main.c        ****                 status = I2C_1_MasterStatus();
 6236              		.loc 1 1827 0
 6237 0046 FFF7FEFF 		bl	I2C_1_MasterStatus
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 144


 6238 004a 0346     		mov	r3, r0
 6239 004c BB72     		strb	r3, [r7, #10]
1828:main.c        ****                 timeout--;
 6240              		.loc 1 1828 0
 6241 004e FB68     		ldr	r3, [r7, #12]
 6242 0050 013B     		subs	r3, r3, #1
 6243 0052 FB60     		str	r3, [r7, #12]
1829:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6244              		.loc 1 1829 0
 6245 0054 BB7A     		ldrb	r3, [r7, #10]
 6246 0056 DBB2     		uxtb	r3, r3
 6247 0058 802B     		cmp	r3, #128
 6248 005a 09D1     		bne	.L263
1830:main.c        ****                 {
1831:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 6249              		.loc 1 1831 0
 6250 005c 1E4B     		ldr	r3, .L269+4
 6251 005e 1022     		movs	r2, #16
 6252 0060 1A70     		strb	r2, [r3]
 6253 0062 1E4B     		ldr	r3, .L269+8
 6254 0064 0422     		movs	r2, #4
 6255 0066 1A70     		strb	r2, [r3]
1832:main.c        ****                     I2C_reset();
 6256              		.loc 1 1832 0
 6257 0068 FFF7FEFF 		bl	I2C_reset
1833:main.c        ****                     error = 1;
 6258              		.loc 1 1833 0
 6259 006c 0123     		movs	r3, #1
 6260 006e FB72     		strb	r3, [r7, #11]
 6261              	.L263:
1834:main.c        ****                 }
1835:main.c        ****                 if (timeout == 0)
 6262              		.loc 1 1835 0
 6263 0070 FB68     		ldr	r3, [r7, #12]
 6264 0072 002B     		cmp	r3, #0
 6265 0074 05D1     		bne	.L264
1836:main.c        ****                 {
1837:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6266              		.loc 1 1837 0
 6267 0076 8023     		movs	r3, #128
 6268 0078 BB72     		strb	r3, [r7, #10]
1838:main.c        ****                     I2C_reset();
 6269              		.loc 1 1838 0
 6270 007a FFF7FEFF 		bl	I2C_reset
1839:main.c        ****                     error = 1;
 6271              		.loc 1 1839 0
 6272 007e 0123     		movs	r3, #1
 6273 0080 FB72     		strb	r3, [r7, #11]
 6274              	.L264:
1840:main.c        ****                 }
1841:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6275              		.loc 1 1841 0
 6276 0082 BB7A     		ldrb	r3, [r7, #10]
 6277 0084 DBB2     		uxtb	r3, r3
 6278 0086 03F08103 		and	r3, r3, #129
 6279 008a 002B     		cmp	r3, #0
 6280 008c 0DD1     		bne	.L261
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 145


 6281              		.loc 1 1841 0 is_stmt 0 discriminator 1
 6282 008e BB7A     		ldrb	r3, [r7, #10]
 6283 0090 DBB2     		uxtb	r3, r3
 6284 0092 002B     		cmp	r3, #0
 6285 0094 09D0     		beq	.L261
 6286              		.loc 1 1841 0 discriminator 2
 6287 0096 FB68     		ldr	r3, [r7, #12]
 6288 0098 002B     		cmp	r3, #0
 6289 009a D4D1     		bne	.L265
 6290 009c 05E0     		b	.L261
 6291              	.L262:
1842:main.c        ****         }
1843:main.c        ****         else
1844:main.c        ****         {
1845:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1846:main.c        ****             *  I2CM_MasterStatus() error output */
1847:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6292              		.loc 1 1847 0 is_stmt 1
 6293 009e 8023     		movs	r3, #128
 6294 00a0 BB72     		strb	r3, [r7, #10]
1848:main.c        ****             I2C_reset();
 6295              		.loc 1 1848 0
 6296 00a2 FFF7FEFF 		bl	I2C_reset
1849:main.c        ****             error = 1;
 6297              		.loc 1 1849 0
 6298 00a6 0123     		movs	r3, #1
 6299 00a8 FB72     		strb	r3, [r7, #11]
 6300              	.L261:
1850:main.c        ****         }
1851:main.c        ****     }
1852:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6301              		.loc 1 1852 0
 6302 00aa BB7A     		ldrb	r3, [r7, #10]
 6303 00ac DBB2     		uxtb	r3, r3
 6304 00ae 03F02003 		and	r3, r3, #32
 6305 00b2 002B     		cmp	r3, #0
 6306 00b4 04D1     		bne	.L266
 6307              		.loc 1 1852 0 is_stmt 0 discriminator 1
 6308 00b6 BB7A     		ldrb	r3, [r7, #10]
 6309 00b8 DBB2     		uxtb	r3, r3
 6310 00ba 5BB2     		sxtb	r3, r3
 6311 00bc 002B     		cmp	r3, #0
 6312 00be 03DA     		bge	.L267
 6313              	.L266:
1853:main.c        ****     {
1854:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1855:main.c        ****         //i2c_skipped[main_counter] = 1;
1856:main.c        ****         I2C_reset();
 6314              		.loc 1 1856 0 is_stmt 1
 6315 00c0 FFF7FEFF 		bl	I2C_reset
1857:main.c        ****         error = 1;
 6316              		.loc 1 1857 0
 6317 00c4 0123     		movs	r3, #1
 6318 00c6 FB72     		strb	r3, [r7, #11]
 6319              	.L267:
1858:main.c        ****     }
1859:main.c        ****     return error;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 146


 6320              		.loc 1 1859 0
 6321 00c8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1860:main.c        **** }
 6322              		.loc 1 1860 0
 6323 00ca 1846     		mov	r0, r3
 6324 00cc 1037     		adds	r7, r7, #16
 6325              		.cfi_def_cfa_offset 8
 6326 00ce BD46     		mov	sp, r7
 6327              		.cfi_def_cfa_register 13
 6328              		@ sp needed
 6329 00d0 80BD     		pop	{r7, pc}
 6330              	.L270:
 6331 00d2 00BF     		.align	2
 6332              	.L269:
 6333 00d4 00000000 		.word	I2Cbuff2
 6334 00d8 D9490040 		.word	1073760729
 6335 00dc D7490040 		.word	1073760727
 6336              		.cfi_endproc
 6337              	.LFE79:
 6338              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 6339              		.section	.text.I2C_reset,"ax",%progbits
 6340              		.align	2
 6341              		.global	I2C_reset
 6342              		.thumb
 6343              		.thumb_func
 6344              		.type	I2C_reset, %function
 6345              	I2C_reset:
 6346              	.LFB80:
1861:main.c        **** 
1862:main.c        **** void I2C_reset(void)
1863:main.c        **** {
 6347              		.loc 1 1863 0
 6348              		.cfi_startproc
 6349              		@ args = 0, pretend = 0, frame = 0
 6350              		@ frame_needed = 1, uses_anonymous_args = 0
 6351 0000 80B5     		push	{r7, lr}
 6352              		.cfi_def_cfa_offset 8
 6353              		.cfi_offset 7, -8
 6354              		.cfi_offset 14, -4
 6355 0002 00AF     		add	r7, sp, #0
 6356              		.cfi_def_cfa_register 7
1864:main.c        ****   I2C_1_Stop();
 6357              		.loc 1 1864 0
 6358 0004 FFF7FEFF 		bl	I2C_1_Stop
1865:main.c        **** 
1866:main.c        ****   /* Disable/clear everything, then reinitialize. */
1867:main.c        **** 
1868:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 6359              		.loc 1 1868 0
 6360 0008 064B     		ldr	r3, .L272
 6361 000a 0022     		movs	r2, #0
 6362 000c 1A70     		strb	r2, [r3]
1869:main.c        **** 
1870:main.c        ****   I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
 6363              		.loc 1 1870 0
 6364 000e 064B     		ldr	r3, .L272+4
 6365 0010 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 147


 6366 0012 1A70     		strb	r2, [r3]
1871:main.c        **** 
1872:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 6367              		.loc 1 1872 0
 6368 0014 054B     		ldr	r3, .L272+8
 6369 0016 0022     		movs	r2, #0
 6370 0018 1A70     		strb	r2, [r3]
1873:main.c        **** 
1874:main.c        ****   I2C_1_Start();
 6371              		.loc 1 1874 0
 6372 001a FFF7FEFF 		bl	I2C_1_Start
1875:main.c        **** }
 6373              		.loc 1 1875 0
 6374 001e 00BF     		nop
 6375 0020 80BD     		pop	{r7, pc}
 6376              	.L273:
 6377 0022 00BF     		.align	2
 6378              	.L272:
 6379 0024 D6490040 		.word	1073760726
 6380 0028 C8490040 		.word	1073760712
 6381 002c 00000000 		.word	I2C_1_initVar
 6382              		.cfi_endproc
 6383              	.LFE80:
 6384              		.size	I2C_reset, .-I2C_reset
 6385              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 6386              		.align	2
 6387              		.global	displayCurrentPresetNameAndCopedent
 6388              		.thumb
 6389              		.thumb_func
 6390              		.type	displayCurrentPresetNameAndCopedent, %function
 6391              	displayCurrentPresetNameAndCopedent:
 6392              	.LFB81:
1876:main.c        **** 
1877:main.c        **** void displayCurrentPresetNameAndCopedent()
1878:main.c        **** {
 6393              		.loc 1 1878 0
 6394              		.cfi_startproc
 6395              		@ args = 0, pretend = 0, frame = 0
 6396              		@ frame_needed = 1, uses_anonymous_args = 0
 6397 0000 98B5     		push	{r3, r4, r7, lr}
 6398              		.cfi_def_cfa_offset 16
 6399              		.cfi_offset 3, -16
 6400              		.cfi_offset 4, -12
 6401              		.cfi_offset 7, -8
 6402              		.cfi_offset 14, -4
 6403 0002 00AF     		add	r7, sp, #0
 6404              		.cfi_def_cfa_register 7
1879:main.c        ****     if (macroNamesArray[patchNum][7][0] != 255) //don't display if the name data still hasn't been 
 6405              		.loc 1 1879 0
 6406 0004 2E4B     		ldr	r3, .L277
 6407 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6408 0008 1946     		mov	r1, r3
 6409 000a 2E4A     		ldr	r2, .L277+4
 6410 000c 0B46     		mov	r3, r1
 6411 000e DB00     		lsls	r3, r3, #3
 6412 0010 5B1A     		subs	r3, r3, r1
 6413 0012 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 148


 6414 0014 1344     		add	r3, r3, r2
 6415 0016 6233     		adds	r3, r3, #98
 6416 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6417 001a FF2B     		cmp	r3, #255
 6418 001c 4DD0     		beq	.L276
1880:main.c        ****     {
1881:main.c        ****         OLEDclear(128, 64);
 6419              		.loc 1 1881 0
 6420 001e 4021     		movs	r1, #64
 6421 0020 8020     		movs	r0, #128
 6422 0022 FFF7FEFF 		bl	OLEDclear
1882:main.c        ****         
1883:main.c        ****         myGFX_setFont(0);
 6423              		.loc 1 1883 0
 6424 0026 0020     		movs	r0, #0
 6425 0028 FFF7FEFF 		bl	myGFX_setFont
1884:main.c        ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 6426              		.loc 1 1884 0
 6427 002c 244B     		ldr	r3, .L277
 6428 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6429 0030 1846     		mov	r0, r3
 6430 0032 0023     		movs	r3, #0
 6431 0034 0022     		movs	r2, #0
 6432 0036 0221     		movs	r1, #2
 6433 0038 FFF7FEFF 		bl	OLEDwriteInt
1885:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1886:main.c        ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], NAME_CLIPPED_LENGTH, 0, SecondLine)
 6434              		.loc 1 1886 0
 6435 003c 204B     		ldr	r3, .L277
 6436 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6437 0040 1A46     		mov	r2, r3
 6438 0042 1346     		mov	r3, r2
 6439 0044 DB00     		lsls	r3, r3, #3
 6440 0046 9B1A     		subs	r3, r3, r2
 6441 0048 5B00     		lsls	r3, r3, #1
 6442 004a 1F4A     		ldr	r2, .L277+8
 6443 004c 9818     		adds	r0, r3, r2
 6444 004e 0123     		movs	r3, #1
 6445 0050 0022     		movs	r2, #0
 6446 0052 0B21     		movs	r1, #11
 6447 0054 FFF7FEFF 		bl	OLEDwriteString
1887:main.c        ****         OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 6448              		.loc 1 1887 0
 6449 0058 1C4B     		ldr	r3, .L277+12
 6450 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6451 005c 1846     		mov	r0, r3
 6452 005e 0323     		movs	r3, #3
 6453 0060 0022     		movs	r2, #0
 6454 0062 0221     		movs	r1, #2
 6455 0064 FFF7FEFF 		bl	OLEDwriteInt
1888:main.c        ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 6456              		.loc 1 1888 0
 6457 0068 FFF7FEFF 		bl	OLEDgetCursor
 6458 006c 0246     		mov	r2, r0
 6459 006e 0323     		movs	r3, #3
 6460 0070 0121     		movs	r1, #1
 6461 0072 1748     		ldr	r0, .L277+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 149


 6462 0074 FFF7FEFF 		bl	OLEDwriteString
1889:main.c        ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 6463              		.loc 1 1889 0
 6464 0078 144B     		ldr	r3, .L277+12
 6465 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6466 007c 1A46     		mov	r2, r3
 6467 007e 1346     		mov	r3, r2
 6468 0080 DB00     		lsls	r3, r3, #3
 6469 0082 9B1A     		subs	r3, r3, r2
 6470 0084 5B00     		lsls	r3, r3, #1
 6471 0086 134A     		ldr	r2, .L277+20
 6472 0088 9C18     		adds	r4, r3, r2
 6473 008a FFF7FEFF 		bl	OLEDgetCursor
 6474 008e 0246     		mov	r2, r0
 6475 0090 0323     		movs	r3, #3
 6476 0092 0821     		movs	r1, #8
 6477 0094 2046     		mov	r0, r4
 6478 0096 FFF7FEFF 		bl	OLEDwriteString
1890:main.c        ****         mainOLEDWaitingToSend = 1;
 6479              		.loc 1 1890 0
 6480 009a 0F4B     		ldr	r3, .L277+24
 6481 009c 0122     		movs	r2, #1
 6482 009e 1A60     		str	r2, [r3]
1891:main.c        ****         presetAlreadyDisplayed[patchNum] = 1;
 6483              		.loc 1 1891 0
 6484 00a0 074B     		ldr	r3, .L277
 6485 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6486 00a4 1946     		mov	r1, r3
 6487 00a6 0D4B     		ldr	r3, .L277+28
 6488 00a8 0122     		movs	r2, #1
 6489 00aa 43F82120 		str	r2, [r3, r1, lsl #2]
1892:main.c        ****         //and update the macro OLED screens
1893:main.c        ****         whichMacro = 0;
 6490              		.loc 1 1893 0
 6491 00ae 0C4B     		ldr	r3, .L277+32
 6492 00b0 0022     		movs	r2, #0
 6493 00b2 1A70     		strb	r2, [r3]
1894:main.c        ****         macroOLEDWaitingToSend = 1;
 6494              		.loc 1 1894 0
 6495 00b4 0B4B     		ldr	r3, .L277+36
 6496 00b6 0122     		movs	r2, #1
 6497 00b8 1A60     		str	r2, [r3]
 6498              	.L276:
1895:main.c        ****     }
1896:main.c        **** }
 6499              		.loc 1 1896 0
 6500 00ba 00BF     		nop
 6501 00bc 98BD     		pop	{r3, r4, r7, pc}
 6502              	.L278:
 6503 00be 00BF     		.align	2
 6504              	.L277:
 6505 00c0 00000000 		.word	patchNum
 6506 00c4 00000000 		.word	macroNamesArray
 6507 00c8 00000000 		.word	presetNamesArray
 6508 00cc 00000000 		.word	currentCopedent
 6509 00d0 00040000 		.word	.LC0
 6510 00d4 00000000 		.word	copedentNamesArray
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 150


 6511 00d8 00000000 		.word	mainOLEDWaitingToSend
 6512 00dc 00000000 		.word	presetAlreadyDisplayed
 6513 00e0 00000000 		.word	whichMacro
 6514 00e4 00000000 		.word	macroOLEDWaitingToSend
 6515              		.cfi_endproc
 6516              	.LFE81:
 6517              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 6518              		.section	.text.checkUSB_Vbus,"ax",%progbits
 6519              		.align	2
 6520              		.global	checkUSB_Vbus
 6521              		.thumb
 6522              		.thumb_func
 6523              		.type	checkUSB_Vbus, %function
 6524              	checkUSB_Vbus:
 6525              	.LFB82:
1897:main.c        ****     
1898:main.c        **** void checkUSB_Vbus(void)
1899:main.c        **** {
 6526              		.loc 1 1899 0
 6527              		.cfi_startproc
 6528              		@ args = 0, pretend = 0, frame = 0
 6529              		@ frame_needed = 1, uses_anonymous_args = 0
 6530 0000 80B5     		push	{r7, lr}
 6531              		.cfi_def_cfa_offset 8
 6532              		.cfi_offset 7, -8
 6533              		.cfi_offset 14, -4
 6534 0002 00AF     		add	r7, sp, #0
 6535              		.cfi_def_cfa_register 7
1900:main.c        ****    if (USB_VBusPresent() == 0)
 6536              		.loc 1 1900 0
 6537 0004 FFF7FEFF 		bl	USB_VBusPresent
 6538 0008 0346     		mov	r3, r0
 6539 000a 002B     		cmp	r3, #0
 6540 000c 05D1     		bne	.L280
1901:main.c        ****    {
1902:main.c        ****        USB_Stop();
 6541              		.loc 1 1902 0
 6542 000e FFF7FEFF 		bl	USB_Stop
1903:main.c        ****        USB_active = 0; 
 6543              		.loc 1 1903 0
 6544 0012 0E4B     		ldr	r3, .L283
 6545 0014 0022     		movs	r2, #0
 6546 0016 1A70     		strb	r2, [r3]
 6547 0018 13E0     		b	.L281
 6548              	.L280:
1904:main.c        ****    }
1905:main.c        ****    else if (USB_active == 0 )
 6549              		.loc 1 1905 0
 6550 001a 0C4B     		ldr	r3, .L283
 6551 001c 1B78     		ldrb	r3, [r3]
 6552 001e DBB2     		uxtb	r3, r3
 6553 0020 002B     		cmp	r3, #0
 6554 0022 0ED1     		bne	.L281
1906:main.c        ****    {
1907:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 6555              		.loc 1 1907 0
 6556 0024 0021     		movs	r1, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 151


 6557 0026 0020     		movs	r0, #0
 6558 0028 FFF7FEFF 		bl	USB_Start
1908:main.c        ****         while (0u == USB_GetConfiguration());
 6559              		.loc 1 1908 0
 6560 002c 00BF     		nop
 6561              	.L282:
 6562              		.loc 1 1908 0 is_stmt 0 discriminator 1
 6563 002e FFF7FEFF 		bl	USB_GetConfiguration
 6564 0032 0346     		mov	r3, r0
 6565 0034 002B     		cmp	r3, #0
 6566 0036 FAD0     		beq	.L282
1909:main.c        ****         USB_MIDI_EP_Init();
 6567              		.loc 1 1909 0 is_stmt 1
 6568 0038 FFF7FEFF 		bl	USB_MIDI_Init
1910:main.c        ****        USB_active = 1;
 6569              		.loc 1 1910 0
 6570 003c 034B     		ldr	r3, .L283
 6571 003e 0122     		movs	r2, #1
 6572 0040 1A70     		strb	r2, [r3]
 6573              	.L281:
1911:main.c        ****    }
1912:main.c        ****    USB_check_flag = 0;
 6574              		.loc 1 1912 0
 6575 0042 034B     		ldr	r3, .L283+4
 6576 0044 0022     		movs	r2, #0
 6577 0046 1A70     		strb	r2, [r3]
1913:main.c        **** }
 6578              		.loc 1 1913 0
 6579 0048 00BF     		nop
 6580 004a 80BD     		pop	{r7, pc}
 6581              	.L284:
 6582              		.align	2
 6583              	.L283:
 6584 004c 00000000 		.word	USB_active
 6585 0050 00000000 		.word	USB_check_flag
 6586              		.cfi_endproc
 6587              	.LFE82:
 6588              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 6589              		.section	.text.USB_service,"ax",%progbits
 6590              		.align	2
 6591              		.global	USB_service
 6592              		.thumb
 6593              		.thumb_func
 6594              		.type	USB_service, %function
 6595              	USB_service:
 6596              	.LFB83:
1914:main.c        **** 
1915:main.c        **** 
1916:main.c        **** 
1917:main.c        **** void USB_service(void)
1918:main.c        **** {
 6597              		.loc 1 1918 0
 6598              		.cfi_startproc
 6599              		@ args = 0, pretend = 0, frame = 0
 6600              		@ frame_needed = 1, uses_anonymous_args = 0
 6601 0000 80B5     		push	{r7, lr}
 6602              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 152


 6603              		.cfi_offset 7, -8
 6604              		.cfi_offset 14, -4
 6605 0002 00AF     		add	r7, sp, #0
 6606              		.cfi_def_cfa_register 7
1919:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 6607              		.loc 1 1919 0
 6608 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 6609 0008 0346     		mov	r3, r0
 6610 000a 002B     		cmp	r3, #0
 6611 000c 10D0     		beq	.L286
1920:main.c        ****     {
1921:main.c        ****         if(USB_GetConfiguration() != 0u)   
 6612              		.loc 1 1921 0
 6613 000e FFF7FEFF 		bl	USB_GetConfiguration
 6614 0012 0346     		mov	r3, r0
 6615 0014 002B     		cmp	r3, #0
 6616 0016 0BD0     		beq	.L286
1922:main.c        ****         {
1923:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1924:main.c        ****             
1925:main.c        ****             //SleepTimer_Start();
1926:main.c        ****         	
1927:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 6617              		.loc 1 1927 0
 6618 0018 244B     		ldr	r3, .L292
 6619 001a 1B78     		ldrb	r3, [r3]
 6620 001c DBB2     		uxtb	r3, r3
 6621 001e 002B     		cmp	r3, #0
 6622 0020 06D0     		beq	.L286
 6623              		.loc 1 1927 0 is_stmt 0 discriminator 1
 6624 0022 FFF7FEFF 		bl	USB_VBusPresent
 6625 0026 0346     		mov	r3, r0
 6626 0028 002B     		cmp	r3, #0
 6627 002a 01D0     		beq	.L286
1928:main.c        ****             {
1929:main.c        ****                 USB_MIDI_EP_Init();
 6628              		.loc 1 1929 0 is_stmt 1
 6629 002c FFF7FEFF 		bl	USB_MIDI_Init
 6630              	.L286:
1930:main.c        ****             }
1931:main.c        ****         }
1932:main.c        ****         else
1933:main.c        ****         {
1934:main.c        ****             //SleepTimer_Stop();
1935:main.c        ****         }    
1936:main.c        ****     }        
1937:main.c        ****     
1938:main.c        ****     if(USB_GetConfiguration() != 0u)    
 6631              		.loc 1 1938 0
 6632 0030 FFF7FEFF 		bl	USB_GetConfiguration
 6633 0034 0346     		mov	r3, r0
 6634 0036 002B     		cmp	r3, #0
 6635 0038 35D0     		beq	.L291
1939:main.c        ****     {
1940:main.c        **** 
1941:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1942:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 153


 6636              		.loc 1 1942 0
 6637 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 6638 003e 0346     		mov	r3, r0
 6639 0040 002B     		cmp	r3, #0
 6640 0042 18D0     		beq	.L289
1943:main.c        ****         {
1944:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 6641              		.loc 1 1944 0
 6642 0044 1A4B     		ldr	r3, .L292+4
 6643 0046 1B78     		ldrb	r3, [r3]
 6644 0048 D8B2     		uxtb	r0, r3
 6645 004a 1A4B     		ldr	r3, .L292+8
 6646 004c 1B78     		ldrb	r3, [r3]
 6647 004e DBB2     		uxtb	r3, r3
 6648 0050 9BB2     		uxth	r3, r3
 6649 0052 1A46     		mov	r2, r3
 6650 0054 1849     		ldr	r1, .L292+12
 6651 0056 FFF7FEFF 		bl	USB_LoadInEP
1945:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1946:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 6652              		.loc 1 1946 0
 6653 005a 184B     		ldr	r3, .L292+16
 6654 005c 1B78     		ldrb	r3, [r3]
 6655 005e DBB2     		uxtb	r3, r3
 6656 0060 4022     		movs	r2, #64
 6657 0062 1749     		ldr	r1, .L292+20
 6658 0064 1846     		mov	r0, r3
 6659 0066 FFF7FEFF 		bl	USB_ReadOutEP
1947:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1948:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1949:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 6660              		.loc 1 1949 0
 6661 006a 144B     		ldr	r3, .L292+16
 6662 006c 1B78     		ldrb	r3, [r3]
 6663 006e DBB2     		uxtb	r3, r3
 6664 0070 1846     		mov	r0, r3
 6665 0072 FFF7FEFF 		bl	USB_EnableOutEP
 6666              	.L289:
1950:main.c        ****         }
1951:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6667              		.loc 1 1951 0
 6668 0076 0D4B     		ldr	r3, .L292
 6669 0078 1B78     		ldrb	r3, [r3]
 6670 007a DBB2     		uxtb	r3, r3
 6671 007c 002B     		cmp	r3, #0
 6672 007e 06D0     		beq	.L290
 6673              		.loc 1 1951 0 is_stmt 0 discriminator 1
 6674 0080 FFF7FEFF 		bl	USB_VBusPresent
 6675 0084 0346     		mov	r3, r0
 6676 0086 002B     		cmp	r3, #0
 6677 0088 01D0     		beq	.L290
1952:main.c        ****         {
1953:main.c        ****             USB_MIDI_IN_Service();
 6678              		.loc 1 1953 0 is_stmt 1
 6679 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 6680              	.L290:
1954:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 154


1955:main.c        **** 
1956:main.c        **** 
1957:main.c        **** 
1958:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6681              		.loc 1 1958 0
 6682 008e 074B     		ldr	r3, .L292
 6683 0090 1B78     		ldrb	r3, [r3]
 6684 0092 DBB2     		uxtb	r3, r3
 6685 0094 002B     		cmp	r3, #0
 6686 0096 06D0     		beq	.L291
 6687              		.loc 1 1958 0 is_stmt 0 discriminator 1
 6688 0098 FFF7FEFF 		bl	USB_VBusPresent
 6689 009c 0346     		mov	r3, r0
 6690 009e 002B     		cmp	r3, #0
 6691 00a0 01D0     		beq	.L291
1959:main.c        ****         {
1960:main.c        ****             USB_MIDI_OUT_Service();
 6692              		.loc 1 1960 0 is_stmt 1
 6693 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 6694              	.L291:
1961:main.c        ****         }
1962:main.c        ****     }
1963:main.c        ****         
1964:main.c        **** }
 6695              		.loc 1 1964 0
 6696 00a6 00BF     		nop
 6697 00a8 80BD     		pop	{r7, pc}
 6698              	.L293:
 6699 00aa 00BF     		.align	2
 6700              	.L292:
 6701 00ac 00000000 		.word	USB_active
 6702 00b0 00000000 		.word	USB_midi_in_ep
 6703 00b4 00000000 		.word	USB_midiInPointer
 6704 00b8 00000000 		.word	USB_midiInBuffer
 6705 00bc 00000000 		.word	USB_midi_out_ep
 6706 00c0 00000000 		.word	USB_midiOutBuffer
 6707              		.cfi_endproc
 6708              	.LFE83:
 6709              		.size	USB_service, .-USB_service
 6710              		.section	.text.log2f_approx,"ax",%progbits
 6711              		.align	2
 6712              		.global	log2f_approx
 6713              		.thumb
 6714              		.thumb_func
 6715              		.type	log2f_approx, %function
 6716              	log2f_approx:
 6717              	.LFB84:
1965:main.c        **** 
1966:main.c        **** // This is a fast approximation to log2()
1967:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1968:main.c        **** float log2f_approx(float X) {
 6718              		.loc 1 1968 0
 6719              		.cfi_startproc
 6720              		@ args = 0, pretend = 0, frame = 24
 6721              		@ frame_needed = 1, uses_anonymous_args = 0
 6722 0000 80B5     		push	{r7, lr}
 6723              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 155


 6724              		.cfi_offset 7, -8
 6725              		.cfi_offset 14, -4
 6726 0002 86B0     		sub	sp, sp, #24
 6727              		.cfi_def_cfa_offset 32
 6728 0004 00AF     		add	r7, sp, #0
 6729              		.cfi_def_cfa_register 7
 6730 0006 7860     		str	r0, [r7, #4]	@ float
1969:main.c        ****   float Y, F;
1970:main.c        ****   int E;
1971:main.c        ****   F = frexpf(fabsf(X), &E);
 6731              		.loc 1 1971 0
 6732 0008 7B68     		ldr	r3, [r7, #4]
 6733 000a 23F00043 		bic	r3, r3, #-2147483648
 6734 000e 07F10C02 		add	r2, r7, #12
 6735 0012 1146     		mov	r1, r2
 6736 0014 1846     		mov	r0, r3
 6737 0016 FFF7FEFF 		bl	frexpf
 6738 001a 7861     		str	r0, [r7, #20]	@ float
1972:main.c        ****   Y = 1.23149591368684f;
 6739              		.loc 1 1972 0
 6740 001c 1A4B     		ldr	r3, .L296
 6741 001e 3B61     		str	r3, [r7, #16]	@ float
1973:main.c        ****   Y *= F;
 6742              		.loc 1 1973 0
 6743 0020 7969     		ldr	r1, [r7, #20]	@ float
 6744 0022 3869     		ldr	r0, [r7, #16]	@ float
 6745 0024 FFF7FEFF 		bl	__aeabi_fmul
 6746 0028 0346     		mov	r3, r0
 6747 002a 3B61     		str	r3, [r7, #16]	@ float
1974:main.c        ****   Y += -4.11852516267426f;
 6748              		.loc 1 1974 0
 6749 002c 1749     		ldr	r1, .L296+4
 6750 002e 3869     		ldr	r0, [r7, #16]	@ float
 6751 0030 FFF7FEFF 		bl	__aeabi_fsub
 6752 0034 0346     		mov	r3, r0
 6753 0036 3B61     		str	r3, [r7, #16]	@ float
1975:main.c        ****   Y *= F;
 6754              		.loc 1 1975 0
 6755 0038 7969     		ldr	r1, [r7, #20]	@ float
 6756 003a 3869     		ldr	r0, [r7, #16]	@ float
 6757 003c FFF7FEFF 		bl	__aeabi_fmul
 6758 0040 0346     		mov	r3, r0
 6759 0042 3B61     		str	r3, [r7, #16]	@ float
1976:main.c        ****   Y += 6.02197014179219f;
 6760              		.loc 1 1976 0
 6761 0044 1249     		ldr	r1, .L296+8
 6762 0046 3869     		ldr	r0, [r7, #16]	@ float
 6763 0048 FFF7FEFF 		bl	__aeabi_fadd
 6764 004c 0346     		mov	r3, r0
 6765 004e 3B61     		str	r3, [r7, #16]	@ float
1977:main.c        ****   Y *= F;
 6766              		.loc 1 1977 0
 6767 0050 7969     		ldr	r1, [r7, #20]	@ float
 6768 0052 3869     		ldr	r0, [r7, #16]	@ float
 6769 0054 FFF7FEFF 		bl	__aeabi_fmul
 6770 0058 0346     		mov	r3, r0
 6771 005a 3B61     		str	r3, [r7, #16]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 156


1978:main.c        ****   Y += -3.13396450166353f;
 6772              		.loc 1 1978 0
 6773 005c 0D49     		ldr	r1, .L296+12
 6774 005e 3869     		ldr	r0, [r7, #16]	@ float
 6775 0060 FFF7FEFF 		bl	__aeabi_fsub
 6776 0064 0346     		mov	r3, r0
 6777 0066 3B61     		str	r3, [r7, #16]	@ float
1979:main.c        ****   Y += E;
 6778              		.loc 1 1979 0
 6779 0068 FB68     		ldr	r3, [r7, #12]
 6780 006a 1846     		mov	r0, r3
 6781 006c FFF7FEFF 		bl	__aeabi_i2f
 6782 0070 0346     		mov	r3, r0
 6783 0072 1946     		mov	r1, r3
 6784 0074 3869     		ldr	r0, [r7, #16]	@ float
 6785 0076 FFF7FEFF 		bl	__aeabi_fadd
 6786 007a 0346     		mov	r3, r0
 6787 007c 3B61     		str	r3, [r7, #16]	@ float
1980:main.c        ****   return(Y);
 6788              		.loc 1 1980 0
 6789 007e 3B69     		ldr	r3, [r7, #16]	@ float
1981:main.c        **** }
 6790              		.loc 1 1981 0
 6791 0080 1846     		mov	r0, r3
 6792 0082 1837     		adds	r7, r7, #24
 6793              		.cfi_def_cfa_offset 8
 6794 0084 BD46     		mov	sp, r7
 6795              		.cfi_def_cfa_register 13
 6796              		@ sp needed
 6797 0086 80BD     		pop	{r7, pc}
 6798              	.L297:
 6799              		.align	2
 6800              	.L296:
 6801 0088 A8A19D3F 		.word	1067295144
 6802 008c F5CA8340 		.word	1082378997
 6803 0090 FBB3C040 		.word	1086370811
 6804 0094 E0924840 		.word	1078498016
 6805              		.cfi_endproc
 6806              	.LFE84:
 6807              		.size	log2f_approx, .-log2f_approx
 6808              		.global	prevNotes
 6809              		.bss
 6810              		.align	2
 6811              		.type	prevNotes, %object
 6812              		.size	prevNotes, 48
 6813              	prevNotes:
 6814 00d8 00000000 		.space	48
 6814      00000000 
 6814      00000000 
 6814      00000000 
 6814      00000000 
 6815              		.section	.text.noteEvent,"ax",%progbits
 6816              		.align	2
 6817              		.global	noteEvent
 6818              		.thumb
 6819              		.thumb_func
 6820              		.type	noteEvent, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 157


 6821              	noteEvent:
 6822              	.LFB85:
1982:main.c        **** 
1983:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
1984:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
1985:main.c        **** 
1986:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1987:main.c        **** 
1988:main.c        **** void noteEvent(int string)
1989:main.c        **** {
 6823              		.loc 1 1989 0
 6824              		.cfi_startproc
 6825              		@ args = 0, pretend = 0, frame = 24
 6826              		@ frame_needed = 1, uses_anonymous_args = 0
 6827 0000 80B5     		push	{r7, lr}
 6828              		.cfi_def_cfa_offset 8
 6829              		.cfi_offset 7, -8
 6830              		.cfi_offset 14, -4
 6831 0002 86B0     		sub	sp, sp, #24
 6832              		.cfi_def_cfa_offset 32
 6833 0004 00AF     		add	r7, sp, #0
 6834              		.cfi_def_cfa_register 7
 6835 0006 7860     		str	r0, [r7, #4]
1990:main.c        ****     
1991:main.c        ****     /*
1992:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1993:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1994:main.c        ****     int vInt  = (int) (v*4.0f);
1995:main.c        ****     if (vInt > 127)
1996:main.c        ****     {
1997:main.c        ****         vInt = 127;
1998:main.c        ****     }
1999:main.c        ****     */
2000:main.c        ****     uint16_t velocity = strings[string];
 6836              		.loc 1 2000 0
 6837 0008 2C4A     		ldr	r2, .L303
 6838 000a 7B68     		ldr	r3, [r7, #4]
 6839 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 6840 0010 FB82     		strh	r3, [r7, #22]	@ movhi
2001:main.c        ****     if (velocity > 0)
 6841              		.loc 1 2001 0
 6842 0012 FB8A     		ldrh	r3, [r7, #22]
 6843 0014 002B     		cmp	r3, #0
 6844 0016 43D0     		beq	.L299
 6845              	.LBB38:
2002:main.c        ****     {
2003:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
2004:main.c        ****         float tempVel = (float)velocity;
 6846              		.loc 1 2004 0
 6847 0018 FB8A     		ldrh	r3, [r7, #22]
 6848 001a 1846     		mov	r0, r3
 6849 001c FFF7FEFF 		bl	__aeabi_ui2f
 6850 0020 0346     		mov	r3, r0
 6851 0022 3B61     		str	r3, [r7, #16]	@ float
2005:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 6852              		.loc 1 2005 0
 6853 0024 4FF05E51 		mov	r1, #931135488
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 158


 6854 0028 3869     		ldr	r0, [r7, #16]	@ float
 6855 002a FFF7FEFF 		bl	__aeabi_fmul
 6856 002e 0346     		mov	r3, r0
 6857 0030 3B61     		str	r3, [r7, #16]	@ float
2006:main.c        ****         tempVel = sqrtf(tempVel);
 6858              		.loc 1 2006 0
 6859 0032 3869     		ldr	r0, [r7, #16]	@ float
 6860 0034 FFF7FEFF 		bl	sqrtf
 6861 0038 3861     		str	r0, [r7, #16]	@ float
2007:main.c        ****         tempVel = tempVel - 0.0239372430f;
 6862              		.loc 1 2007 0
 6863 003a 2149     		ldr	r1, .L303+4
 6864 003c 3869     		ldr	r0, [r7, #16]	@ float
 6865 003e FFF7FEFF 		bl	__aeabi_fsub
 6866 0042 0346     		mov	r3, r0
 6867 0044 3B61     		str	r3, [r7, #16]	@ float
2008:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 6868              		.loc 1 2008 0
 6869 0046 1F49     		ldr	r1, .L303+8
 6870 0048 3869     		ldr	r0, [r7, #16]	@ float
 6871 004a FFF7FEFF 		bl	__aeabi_fmul
 6872 004e 0346     		mov	r3, r0
 6873 0050 3B61     		str	r3, [r7, #16]	@ float
2009:main.c        ****         velocity = (int)tempVel;
 6874              		.loc 1 2009 0
 6875 0052 3869     		ldr	r0, [r7, #16]	@ float
 6876 0054 FFF7FEFF 		bl	__aeabi_f2iz
 6877 0058 0346     		mov	r3, r0
 6878 005a FB82     		strh	r3, [r7, #22]	@ movhi
2010:main.c        ****         
2011:main.c        **** 
2012:main.c        ****         if (velocity > 127)
 6879              		.loc 1 2012 0
 6880 005c FB8A     		ldrh	r3, [r7, #22]
 6881 005e 7F2B     		cmp	r3, #127
 6882 0060 01D9     		bls	.L300
2013:main.c        ****         {
2014:main.c        ****             velocity = 127;
 6883              		.loc 1 2014 0
 6884 0062 7F23     		movs	r3, #127
 6885 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 6886              	.L300:
2015:main.c        ****         }
2016:main.c        ****         
2017:main.c        ****         //only update octave on note-ons
2018:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
2019:main.c        ****         int noteToSend = ((octave - 4) * 12) + openStringMIDI_Int[string];
 6887              		.loc 1 2019 0
 6888 0066 184B     		ldr	r3, .L303+12
 6889 0068 1B68     		ldr	r3, [r3]
 6890 006a 1A1F     		subs	r2, r3, #4
 6891 006c 1346     		mov	r3, r2
 6892 006e 5B00     		lsls	r3, r3, #1
 6893 0070 1344     		add	r3, r3, r2
 6894 0072 9B00     		lsls	r3, r3, #2
 6895 0074 1946     		mov	r1, r3
 6896 0076 154A     		ldr	r2, .L303+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 159


 6897 0078 7B68     		ldr	r3, [r7, #4]
 6898 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6899 007e 0B44     		add	r3, r3, r1
 6900 0080 FB60     		str	r3, [r7, #12]
2020:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 6901              		.loc 1 2020 0
 6902 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6903 0084 DBB2     		uxtb	r3, r3
 6904 0086 1946     		mov	r1, r3
 6905 0088 7B68     		ldr	r3, [r7, #4]
 6906 008a 0133     		adds	r3, r3, #1
 6907 008c 1A46     		mov	r2, r3
 6908 008e F868     		ldr	r0, [r7, #12]
 6909 0090 FFF7FEFF 		bl	sendMIDINoteOn
2021:main.c        ****         prevNotes[string] = noteToSend;
 6910              		.loc 1 2021 0
 6911 0094 0E49     		ldr	r1, .L303+20
 6912 0096 7B68     		ldr	r3, [r7, #4]
 6913 0098 FA68     		ldr	r2, [r7, #12]
 6914 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 6915              	.LBE38:
2022:main.c        ****             
2023:main.c        ****     }
2024:main.c        ****     else
2025:main.c        ****     {
2026:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
2027:main.c        ****     }
2028:main.c        **** 
2029:main.c        **** }
 6916              		.loc 1 2029 0
 6917 009e 09E0     		b	.L302
 6918              	.L299:
2026:main.c        ****     }
 6919              		.loc 1 2026 0
 6920 00a0 0B4A     		ldr	r2, .L303+20
 6921 00a2 7B68     		ldr	r3, [r7, #4]
 6922 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 6923 00a8 7B68     		ldr	r3, [r7, #4]
 6924 00aa 0133     		adds	r3, r3, #1
 6925 00ac 1A46     		mov	r2, r3
 6926 00ae 0021     		movs	r1, #0
 6927 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 6928              	.L302:
 6929              		.loc 1 2029 0
 6930 00b4 00BF     		nop
 6931 00b6 1837     		adds	r7, r7, #24
 6932              		.cfi_def_cfa_offset 8
 6933 00b8 BD46     		mov	sp, r7
 6934              		.cfi_def_cfa_register 13
 6935              		@ sp needed
 6936 00ba 80BD     		pop	{r7, pc}
 6937              	.L304:
 6938              		.align	2
 6939              	.L303:
 6940 00bc 00000000 		.word	strings
 6941 00c0 0918C43C 		.word	1019484169
 6942 00c4 551D0243 		.word	1124212053
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 160


 6943 00c8 00000000 		.word	octave
 6944 00cc 00000000 		.word	openStringMIDI_Int
 6945 00d0 00000000 		.word	prevNotes
 6946              		.cfi_endproc
 6947              	.LFE85:
 6948              		.size	noteEvent, .-noteEvent
 6949              		.section	.text.CCEvent,"ax",%progbits
 6950              		.align	2
 6951              		.global	CCEvent
 6952              		.thumb
 6953              		.thumb_func
 6954              		.type	CCEvent, %function
 6955              	CCEvent:
 6956              	.LFB86:
2030:main.c        **** 
2031:main.c        **** void CCEvent(int cc, int val)
2032:main.c        **** {
 6957              		.loc 1 2032 0
 6958              		.cfi_startproc
 6959              		@ args = 0, pretend = 0, frame = 8
 6960              		@ frame_needed = 1, uses_anonymous_args = 0
 6961 0000 80B5     		push	{r7, lr}
 6962              		.cfi_def_cfa_offset 8
 6963              		.cfi_offset 7, -8
 6964              		.cfi_offset 14, -4
 6965 0002 82B0     		sub	sp, sp, #8
 6966              		.cfi_def_cfa_offset 16
 6967 0004 00AF     		add	r7, sp, #0
 6968              		.cfi_def_cfa_register 7
 6969 0006 7860     		str	r0, [r7, #4]
 6970 0008 3960     		str	r1, [r7]
2033:main.c        ****     
2034:main.c        ****     sendMIDIControlChange(cc, val, 0);
 6971              		.loc 1 2034 0
 6972 000a 0022     		movs	r2, #0
 6973 000c 3968     		ldr	r1, [r7]
 6974 000e 7868     		ldr	r0, [r7, #4]
 6975 0010 FFF7FEFF 		bl	sendMIDIControlChange
2035:main.c        **** }
 6976              		.loc 1 2035 0
 6977 0014 00BF     		nop
 6978 0016 0837     		adds	r7, r7, #8
 6979              		.cfi_def_cfa_offset 8
 6980 0018 BD46     		mov	sp, r7
 6981              		.cfi_def_cfa_register 13
 6982              		@ sp needed
 6983 001a 80BD     		pop	{r7, pc}
 6984              		.cfi_endproc
 6985              	.LFE86:
 6986              		.size	CCEvent, .-CCEvent
 6987              		.section	.text.sendMIDINoteOn,"ax",%progbits
 6988              		.align	2
 6989              		.global	sendMIDINoteOn
 6990              		.thumb
 6991              		.thumb_func
 6992              		.type	sendMIDINoteOn, %function
 6993              	sendMIDINoteOn:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 161


 6994              	.LFB87:
2036:main.c        **** 
2037:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
2038:main.c        **** {  
 6995              		.loc 1 2038 0
 6996              		.cfi_startproc
 6997              		@ args = 0, pretend = 0, frame = 16
 6998              		@ frame_needed = 1, uses_anonymous_args = 0
 6999 0000 80B5     		push	{r7, lr}
 7000              		.cfi_def_cfa_offset 8
 7001              		.cfi_offset 7, -8
 7002              		.cfi_offset 14, -4
 7003 0002 84B0     		sub	sp, sp, #16
 7004              		.cfi_def_cfa_offset 24
 7005 0004 00AF     		add	r7, sp, #0
 7006              		.cfi_def_cfa_register 7
 7007 0006 F860     		str	r0, [r7, #12]
 7008 0008 B960     		str	r1, [r7, #8]
 7009 000a 7A60     		str	r2, [r7, #4]
2039:main.c        ****    
2040:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 7010              		.loc 1 2040 0
 7011 000c 7B68     		ldr	r3, [r7, #4]
 7012 000e DBB2     		uxtb	r3, r3
 7013 0010 703B     		subs	r3, r3, #112
 7014 0012 DAB2     		uxtb	r2, r3
 7015 0014 114B     		ldr	r3, .L308
 7016 0016 1A70     		strb	r2, [r3]
2041:main.c        ****     midiMsg[1] = MIDInoteNum;
 7017              		.loc 1 2041 0
 7018 0018 FB68     		ldr	r3, [r7, #12]
 7019 001a DAB2     		uxtb	r2, r3
 7020 001c 0F4B     		ldr	r3, .L308
 7021 001e 5A70     		strb	r2, [r3, #1]
2042:main.c        ****     midiMsg[2] = velocity;	
 7022              		.loc 1 2042 0
 7023 0020 BB68     		ldr	r3, [r7, #8]
 7024 0022 DAB2     		uxtb	r2, r3
 7025 0024 0D4B     		ldr	r3, .L308
 7026 0026 9A70     		strb	r2, [r3, #2]
2043:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7027              		.loc 1 2043 0
 7028 0028 0D4B     		ldr	r3, .L308+4
 7029 002a 1B78     		ldrb	r3, [r3]
 7030 002c DBB2     		uxtb	r3, r3
 7031 002e 002B     		cmp	r3, #0
 7032 0030 09D0     		beq	.L307
 7033              		.loc 1 2043 0 is_stmt 0 discriminator 1
 7034 0032 FFF7FEFF 		bl	USB_VBusPresent
 7035 0036 0346     		mov	r3, r0
 7036 0038 002B     		cmp	r3, #0
 7037 003a 04D0     		beq	.L307
2044:main.c        ****     {
2045:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7038              		.loc 1 2045 0 is_stmt 1
 7039 003c 0022     		movs	r2, #0
 7040 003e 0749     		ldr	r1, .L308
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 162


 7041 0040 0320     		movs	r0, #3
 7042 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7043              	.L307:
2046:main.c        ****     } 
2047:main.c        ****     midiSent += 4;
 7044              		.loc 1 2047 0
 7045 0046 074B     		ldr	r3, .L308+8
 7046 0048 1B88     		ldrh	r3, [r3]
 7047 004a 0433     		adds	r3, r3, #4
 7048 004c 9AB2     		uxth	r2, r3
 7049 004e 054B     		ldr	r3, .L308+8
 7050 0050 1A80     		strh	r2, [r3]	@ movhi
2048:main.c        **** }
 7051              		.loc 1 2048 0
 7052 0052 00BF     		nop
 7053 0054 1037     		adds	r7, r7, #16
 7054              		.cfi_def_cfa_offset 8
 7055 0056 BD46     		mov	sp, r7
 7056              		.cfi_def_cfa_register 13
 7057              		@ sp needed
 7058 0058 80BD     		pop	{r7, pc}
 7059              	.L309:
 7060 005a 00BF     		.align	2
 7061              	.L308:
 7062 005c 00000000 		.word	midiMsg
 7063 0060 00000000 		.word	USB_active
 7064 0064 00000000 		.word	midiSent
 7065              		.cfi_endproc
 7066              	.LFE87:
 7067              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 7068              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 7069              		.align	2
 7070              		.global	sendMIDIPolyKeyPressure
 7071              		.thumb
 7072              		.thumb_func
 7073              		.type	sendMIDIPolyKeyPressure, %function
 7074              	sendMIDIPolyKeyPressure:
 7075              	.LFB88:
2049:main.c        **** 
2050:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
2051:main.c        **** {
 7076              		.loc 1 2051 0
 7077              		.cfi_startproc
 7078              		@ args = 0, pretend = 0, frame = 16
 7079              		@ frame_needed = 1, uses_anonymous_args = 0
 7080 0000 80B5     		push	{r7, lr}
 7081              		.cfi_def_cfa_offset 8
 7082              		.cfi_offset 7, -8
 7083              		.cfi_offset 14, -4
 7084 0002 84B0     		sub	sp, sp, #16
 7085              		.cfi_def_cfa_offset 24
 7086 0004 00AF     		add	r7, sp, #0
 7087              		.cfi_def_cfa_register 7
 7088 0006 F860     		str	r0, [r7, #12]
 7089 0008 B960     		str	r1, [r7, #8]
 7090 000a 7A60     		str	r2, [r7, #4]
2052:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 163


 7091              		.loc 1 2052 0
 7092 000c 7B68     		ldr	r3, [r7, #4]
 7093 000e DBB2     		uxtb	r3, r3
 7094 0010 603B     		subs	r3, r3, #96
 7095 0012 DAB2     		uxtb	r2, r3
 7096 0014 114B     		ldr	r3, .L312
 7097 0016 1A70     		strb	r2, [r3]
2053:main.c        ****     midiMsg[1] = MIDInoteNum;
 7098              		.loc 1 2053 0
 7099 0018 FB68     		ldr	r3, [r7, #12]
 7100 001a DAB2     		uxtb	r2, r3
 7101 001c 0F4B     		ldr	r3, .L312
 7102 001e 5A70     		strb	r2, [r3, #1]
2054:main.c        ****     midiMsg[2] = pressure;		
 7103              		.loc 1 2054 0
 7104 0020 BB68     		ldr	r3, [r7, #8]
 7105 0022 DAB2     		uxtb	r2, r3
 7106 0024 0D4B     		ldr	r3, .L312
 7107 0026 9A70     		strb	r2, [r3, #2]
2055:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7108              		.loc 1 2055 0
 7109 0028 0D4B     		ldr	r3, .L312+4
 7110 002a 1B78     		ldrb	r3, [r3]
 7111 002c DBB2     		uxtb	r3, r3
 7112 002e 002B     		cmp	r3, #0
 7113 0030 09D0     		beq	.L311
 7114              		.loc 1 2055 0 is_stmt 0 discriminator 1
 7115 0032 FFF7FEFF 		bl	USB_VBusPresent
 7116 0036 0346     		mov	r3, r0
 7117 0038 002B     		cmp	r3, #0
 7118 003a 04D0     		beq	.L311
2056:main.c        ****     {
2057:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7119              		.loc 1 2057 0 is_stmt 1
 7120 003c 0022     		movs	r2, #0
 7121 003e 0749     		ldr	r1, .L312
 7122 0040 0320     		movs	r0, #3
 7123 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7124              	.L311:
2058:main.c        ****     } 
2059:main.c        ****     midiSent += 4;
 7125              		.loc 1 2059 0
 7126 0046 074B     		ldr	r3, .L312+8
 7127 0048 1B88     		ldrh	r3, [r3]
 7128 004a 0433     		adds	r3, r3, #4
 7129 004c 9AB2     		uxth	r2, r3
 7130 004e 054B     		ldr	r3, .L312+8
 7131 0050 1A80     		strh	r2, [r3]	@ movhi
2060:main.c        **** }
 7132              		.loc 1 2060 0
 7133 0052 00BF     		nop
 7134 0054 1037     		adds	r7, r7, #16
 7135              		.cfi_def_cfa_offset 8
 7136 0056 BD46     		mov	sp, r7
 7137              		.cfi_def_cfa_register 13
 7138              		@ sp needed
 7139 0058 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 164


 7140              	.L313:
 7141 005a 00BF     		.align	2
 7142              	.L312:
 7143 005c 00000000 		.word	midiMsg
 7144 0060 00000000 		.word	USB_active
 7145 0064 00000000 		.word	midiSent
 7146              		.cfi_endproc
 7147              	.LFE88:
 7148              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 7149              		.section	.text.sendMIDIControlChange,"ax",%progbits
 7150              		.align	2
 7151              		.global	sendMIDIControlChange
 7152              		.thumb
 7153              		.thumb_func
 7154              		.type	sendMIDIControlChange, %function
 7155              	sendMIDIControlChange:
 7156              	.LFB89:
2061:main.c        **** 
2062:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
2063:main.c        **** {
 7157              		.loc 1 2063 0
 7158              		.cfi_startproc
 7159              		@ args = 0, pretend = 0, frame = 16
 7160              		@ frame_needed = 1, uses_anonymous_args = 0
 7161 0000 80B5     		push	{r7, lr}
 7162              		.cfi_def_cfa_offset 8
 7163              		.cfi_offset 7, -8
 7164              		.cfi_offset 14, -4
 7165 0002 84B0     		sub	sp, sp, #16
 7166              		.cfi_def_cfa_offset 24
 7167 0004 00AF     		add	r7, sp, #0
 7168              		.cfi_def_cfa_register 7
 7169 0006 F860     		str	r0, [r7, #12]
 7170 0008 B960     		str	r1, [r7, #8]
 7171 000a 7A60     		str	r2, [r7, #4]
2064:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 7172              		.loc 1 2064 0
 7173 000c 7B68     		ldr	r3, [r7, #4]
 7174 000e DBB2     		uxtb	r3, r3
 7175 0010 503B     		subs	r3, r3, #80
 7176 0012 DAB2     		uxtb	r2, r3
 7177 0014 114B     		ldr	r3, .L316
 7178 0016 1A70     		strb	r2, [r3]
2065:main.c        ****     midiMsg[1] = CCnum;
 7179              		.loc 1 2065 0
 7180 0018 FB68     		ldr	r3, [r7, #12]
 7181 001a DAB2     		uxtb	r2, r3
 7182 001c 0F4B     		ldr	r3, .L316
 7183 001e 5A70     		strb	r2, [r3, #1]
2066:main.c        ****     midiMsg[2] = CCval;			
 7184              		.loc 1 2066 0
 7185 0020 BB68     		ldr	r3, [r7, #8]
 7186 0022 DAB2     		uxtb	r2, r3
 7187 0024 0D4B     		ldr	r3, .L316
 7188 0026 9A70     		strb	r2, [r3, #2]
2067:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7189              		.loc 1 2067 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 165


 7190 0028 0D4B     		ldr	r3, .L316+4
 7191 002a 1B78     		ldrb	r3, [r3]
 7192 002c DBB2     		uxtb	r3, r3
 7193 002e 002B     		cmp	r3, #0
 7194 0030 09D0     		beq	.L315
 7195              		.loc 1 2067 0 is_stmt 0 discriminator 1
 7196 0032 FFF7FEFF 		bl	USB_VBusPresent
 7197 0036 0346     		mov	r3, r0
 7198 0038 002B     		cmp	r3, #0
 7199 003a 04D0     		beq	.L315
2068:main.c        ****     {
2069:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7200              		.loc 1 2069 0 is_stmt 1
 7201 003c 0022     		movs	r2, #0
 7202 003e 0749     		ldr	r1, .L316
 7203 0040 0320     		movs	r0, #3
 7204 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7205              	.L315:
2070:main.c        ****     } 
2071:main.c        ****     midiSent += 4;
 7206              		.loc 1 2071 0
 7207 0046 074B     		ldr	r3, .L316+8
 7208 0048 1B88     		ldrh	r3, [r3]
 7209 004a 0433     		adds	r3, r3, #4
 7210 004c 9AB2     		uxth	r2, r3
 7211 004e 054B     		ldr	r3, .L316+8
 7212 0050 1A80     		strh	r2, [r3]	@ movhi
2072:main.c        **** }
 7213              		.loc 1 2072 0
 7214 0052 00BF     		nop
 7215 0054 1037     		adds	r7, r7, #16
 7216              		.cfi_def_cfa_offset 8
 7217 0056 BD46     		mov	sp, r7
 7218              		.cfi_def_cfa_register 13
 7219              		@ sp needed
 7220 0058 80BD     		pop	{r7, pc}
 7221              	.L317:
 7222 005a 00BF     		.align	2
 7223              	.L316:
 7224 005c 00000000 		.word	midiMsg
 7225 0060 00000000 		.word	USB_active
 7226 0064 00000000 		.word	midiSent
 7227              		.cfi_endproc
 7228              	.LFE89:
 7229              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 7230              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 7231              		.align	2
 7232              		.global	sendMIDIPitchBend
 7233              		.thumb
 7234              		.thumb_func
 7235              		.type	sendMIDIPitchBend, %function
 7236              	sendMIDIPitchBend:
 7237              	.LFB90:
2073:main.c        **** 
2074:main.c        **** void sendMIDIPitchBend(int val, int channel)
2075:main.c        **** {
 7238              		.loc 1 2075 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 166


 7239              		.cfi_startproc
 7240              		@ args = 0, pretend = 0, frame = 8
 7241              		@ frame_needed = 1, uses_anonymous_args = 0
 7242 0000 80B5     		push	{r7, lr}
 7243              		.cfi_def_cfa_offset 8
 7244              		.cfi_offset 7, -8
 7245              		.cfi_offset 14, -4
 7246 0002 82B0     		sub	sp, sp, #8
 7247              		.cfi_def_cfa_offset 16
 7248 0004 00AF     		add	r7, sp, #0
 7249              		.cfi_def_cfa_register 7
 7250 0006 7860     		str	r0, [r7, #4]
 7251 0008 3960     		str	r1, [r7]
2076:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 7252              		.loc 1 2076 0
 7253 000a 3B68     		ldr	r3, [r7]
 7254 000c DBB2     		uxtb	r3, r3
 7255 000e 203B     		subs	r3, r3, #32
 7256 0010 DAB2     		uxtb	r2, r3
 7257 0012 134B     		ldr	r3, .L320
 7258 0014 1A70     		strb	r2, [r3]
2077:main.c        ****     midiMsg[1] = (val & 127); //LSB
 7259              		.loc 1 2077 0
 7260 0016 7B68     		ldr	r3, [r7, #4]
 7261 0018 DBB2     		uxtb	r3, r3
 7262 001a 03F07F03 		and	r3, r3, #127
 7263 001e DAB2     		uxtb	r2, r3
 7264 0020 0F4B     		ldr	r3, .L320
 7265 0022 5A70     		strb	r2, [r3, #1]
2078:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 7266              		.loc 1 2078 0
 7267 0024 7B68     		ldr	r3, [r7, #4]
 7268 0026 DB11     		asrs	r3, r3, #7
 7269 0028 DAB2     		uxtb	r2, r3
 7270 002a 0D4B     		ldr	r3, .L320
 7271 002c 9A70     		strb	r2, [r3, #2]
2079:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7272              		.loc 1 2079 0
 7273 002e 0D4B     		ldr	r3, .L320+4
 7274 0030 1B78     		ldrb	r3, [r3]
 7275 0032 DBB2     		uxtb	r3, r3
 7276 0034 002B     		cmp	r3, #0
 7277 0036 09D0     		beq	.L319
 7278              		.loc 1 2079 0 is_stmt 0 discriminator 1
 7279 0038 FFF7FEFF 		bl	USB_VBusPresent
 7280 003c 0346     		mov	r3, r0
 7281 003e 002B     		cmp	r3, #0
 7282 0040 04D0     		beq	.L319
2080:main.c        ****     {
2081:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7283              		.loc 1 2081 0 is_stmt 1
 7284 0042 0022     		movs	r2, #0
 7285 0044 0649     		ldr	r1, .L320
 7286 0046 0320     		movs	r0, #3
 7287 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7288              	.L319:
2082:main.c        ****     } 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 167


2083:main.c        ****     midiSent += 4;
 7289              		.loc 1 2083 0
 7290 004c 064B     		ldr	r3, .L320+8
 7291 004e 1B88     		ldrh	r3, [r3]
 7292 0050 0433     		adds	r3, r3, #4
 7293 0052 9AB2     		uxth	r2, r3
 7294 0054 044B     		ldr	r3, .L320+8
 7295 0056 1A80     		strh	r2, [r3]	@ movhi
2084:main.c        **** }
 7296              		.loc 1 2084 0
 7297 0058 00BF     		nop
 7298 005a 0837     		adds	r7, r7, #8
 7299              		.cfi_def_cfa_offset 8
 7300 005c BD46     		mov	sp, r7
 7301              		.cfi_def_cfa_register 13
 7302              		@ sp needed
 7303 005e 80BD     		pop	{r7, pc}
 7304              	.L321:
 7305              		.align	2
 7306              	.L320:
 7307 0060 00000000 		.word	midiMsg
 7308 0064 00000000 		.word	USB_active
 7309 0068 00000000 		.word	midiSent
 7310              		.cfi_endproc
 7311              	.LFE90:
 7312              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 7313              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 7314              		.align	2
 7315              		.global	sendMIDIAllNotesOff
 7316              		.thumb
 7317              		.thumb_func
 7318              		.type	sendMIDIAllNotesOff, %function
 7319              	sendMIDIAllNotesOff:
 7320              	.LFB91:
2085:main.c        **** 
2086:main.c        **** void sendMIDIAllNotesOff(void)
2087:main.c        **** {   
 7321              		.loc 1 2087 0
 7322              		.cfi_startproc
 7323              		@ args = 0, pretend = 0, frame = 0
 7324              		@ frame_needed = 1, uses_anonymous_args = 0
 7325 0000 80B5     		push	{r7, lr}
 7326              		.cfi_def_cfa_offset 8
 7327              		.cfi_offset 7, -8
 7328              		.cfi_offset 14, -4
 7329 0002 00AF     		add	r7, sp, #0
 7330              		.cfi_def_cfa_register 7
2088:main.c        ****     for (i = 0; i < 128; i++)
 7331              		.loc 1 2088 0
 7332 0004 144B     		ldr	r3, .L326
 7333 0006 0022     		movs	r2, #0
 7334 0008 1A70     		strb	r2, [r3]
 7335 000a 1EE0     		b	.L323
 7336              	.L325:
2089:main.c        ****     {
2090:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 7337              		.loc 1 2090 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 168


 7338 000c 134B     		ldr	r3, .L326+4
 7339 000e 9022     		movs	r2, #144
 7340 0010 1A70     		strb	r2, [r3]
2091:main.c        ****         midiMsg[1] = i;
 7341              		.loc 1 2091 0
 7342 0012 114B     		ldr	r3, .L326
 7343 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7344 0016 114B     		ldr	r3, .L326+4
 7345 0018 5A70     		strb	r2, [r3, #1]
2092:main.c        ****         midiMsg[2] = 0;	
 7346              		.loc 1 2092 0
 7347 001a 104B     		ldr	r3, .L326+4
 7348 001c 0022     		movs	r2, #0
 7349 001e 9A70     		strb	r2, [r3, #2]
2093:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7350              		.loc 1 2093 0
 7351 0020 0F4B     		ldr	r3, .L326+8
 7352 0022 1B78     		ldrb	r3, [r3]
 7353 0024 DBB2     		uxtb	r3, r3
 7354 0026 002B     		cmp	r3, #0
 7355 0028 09D0     		beq	.L324
 7356              		.loc 1 2093 0 is_stmt 0 discriminator 1
 7357 002a FFF7FEFF 		bl	USB_VBusPresent
 7358 002e 0346     		mov	r3, r0
 7359 0030 002B     		cmp	r3, #0
 7360 0032 04D0     		beq	.L324
2094:main.c        ****         {       
2095:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7361              		.loc 1 2095 0 is_stmt 1
 7362 0034 0022     		movs	r2, #0
 7363 0036 0949     		ldr	r1, .L326+4
 7364 0038 0320     		movs	r0, #3
 7365 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
 7366              	.L324:
2088:main.c        ****     {
 7367              		.loc 1 2088 0 discriminator 2
 7368 003e 064B     		ldr	r3, .L326
 7369 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7370 0042 0133     		adds	r3, r3, #1
 7371 0044 DAB2     		uxtb	r2, r3
 7372 0046 044B     		ldr	r3, .L326
 7373 0048 1A70     		strb	r2, [r3]
 7374              	.L323:
2088:main.c        ****     {
 7375              		.loc 1 2088 0 is_stmt 0 discriminator 1
 7376 004a 034B     		ldr	r3, .L326
 7377 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7378 004e 5BB2     		sxtb	r3, r3
 7379 0050 002B     		cmp	r3, #0
 7380 0052 DBDA     		bge	.L325
2096:main.c        ****         }
2097:main.c        ****     }
2098:main.c        **** }
 7381              		.loc 1 2098 0 is_stmt 1
 7382 0054 00BF     		nop
 7383 0056 80BD     		pop	{r7, pc}
 7384              	.L327:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 169


 7385              		.align	2
 7386              	.L326:
 7387 0058 00000000 		.word	i
 7388 005c 00000000 		.word	midiMsg
 7389 0060 00000000 		.word	USB_active
 7390              		.cfi_endproc
 7391              	.LFE91:
 7392              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 7393              		.global	checkStatus
 7394              		.bss
 7395              		.type	checkStatus, %object
 7396              		.size	checkStatus, 1
 7397              	checkStatus:
 7398 0108 00       		.space	1
 7399              		.global	checkBase
 7400 0109 00       		.align	1
 7401              		.type	checkBase, %object
 7402              		.size	checkBase, 2
 7403              	checkBase:
 7404 010a 0000     		.space	2
 7405              		.global	SPI_errors
 7406              		.align	2
 7407              		.type	SPI_errors, %object
 7408              		.size	SPI_errors, 4
 7409              	SPI_errors:
 7410 010c 00000000 		.space	4
 7411              		.section	.text.parseSysex,"ax",%progbits
 7412              		.align	2
 7413              		.global	parseSysex
 7414              		.thumb
 7415              		.thumb_func
 7416              		.type	parseSysex, %function
 7417              	parseSysex:
 7418              	.LFB92:
2099:main.c        **** 
2100:main.c        **** 
2101:main.c        **** 
2102:main.c        **** 
2103:main.c        **** volatile uint8_t checkStatus = 0;
2104:main.c        **** volatile uint16_t checkBase = 0;
2105:main.c        **** 
2106:main.c        **** 
2107:main.c        **** 
2108:main.c        **** int SPI_errors = 0;
2109:main.c        **** 
2110:main.c        **** void parseSysex(void)
2111:main.c        **** {
 7419              		.loc 1 2111 0
 7420              		.cfi_startproc
 7421              		@ args = 0, pretend = 0, frame = 64
 7422              		@ frame_needed = 1, uses_anonymous_args = 0
 7423 0000 90B5     		push	{r4, r7, lr}
 7424              		.cfi_def_cfa_offset 12
 7425              		.cfi_offset 4, -12
 7426              		.cfi_offset 7, -8
 7427              		.cfi_offset 14, -4
 7428 0002 91B0     		sub	sp, sp, #68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 170


 7429              		.cfi_def_cfa_offset 80
 7430 0004 00AF     		add	r7, sp, #0
 7431              		.cfi_def_cfa_register 7
2112:main.c        ****     parsingSysex = 1;
 7432              		.loc 1 2112 0
 7433 0006 8F4B     		ldr	r3, .L376
 7434 0008 0122     		movs	r2, #1
 7435 000a 1A70     		strb	r2, [r3]
2113:main.c        ****     //0 = it's a preset
2114:main.c        ****     if (sysexBuffer[0] == 0)
 7436              		.loc 1 2114 0
 7437 000c 8E4B     		ldr	r3, .L376+4
 7438 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7439 0010 002B     		cmp	r3, #0
 7440 0012 40F0B082 		bne	.L329
 7441              	.LBB39:
2115:main.c        ****     {
2116:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7442              		.loc 1 2116 0
 7443 0016 8D4B     		ldr	r3, .L376+8
 7444 0018 0122     		movs	r2, #1
 7445 001a 1A70     		strb	r2, [r3]
2117:main.c        ****         currentFloat = 0;
 7446              		.loc 1 2117 0
 7447 001c 8C4B     		ldr	r3, .L376+12
 7448 001e 0022     		movs	r2, #0
 7449 0020 1A60     		str	r2, [r3]
2118:main.c        ****         presetArraySection = presetName;
 7450              		.loc 1 2118 0
 7451 0022 8C4B     		ldr	r3, .L376+16
 7452 0024 0022     		movs	r2, #0
 7453 0026 1A70     		strb	r2, [r3]
2119:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 7454              		.loc 1 2119 0
 7455 0028 874B     		ldr	r3, .L376+4
 7456 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7457 002c 8A4B     		ldr	r3, .L376+20
 7458 002e 1A70     		strb	r2, [r3]
2120:main.c        ****         presetArray[0] = sysexBuffer[2];
 7459              		.loc 1 2120 0
 7460 0030 854B     		ldr	r3, .L376+4
 7461 0032 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 7462 0034 894B     		ldr	r3, .L376+24
 7463 0036 1A70     		strb	r2, [r3]
2121:main.c        ****         presetArray[1] = sysexBuffer[3];
 7464              		.loc 1 2121 0
 7465 0038 834B     		ldr	r3, .L376+4
 7466 003a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 7467 003c 874B     		ldr	r3, .L376+24
 7468 003e 5A70     		strb	r2, [r3, #1]
2122:main.c        ****         presetArray[2] = sysexBuffer[4];
 7469              		.loc 1 2122 0
 7470 0040 814B     		ldr	r3, .L376+4
 7471 0042 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 7472 0044 854B     		ldr	r3, .L376+24
 7473 0046 9A70     		strb	r2, [r3, #2]
2123:main.c        ****         presetArray[3] = sysexBuffer[5];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 171


 7474              		.loc 1 2123 0
 7475 0048 7F4B     		ldr	r3, .L376+4
 7476 004a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 7477 004c 834B     		ldr	r3, .L376+24
 7478 004e DA70     		strb	r2, [r3, #3]
2124:main.c        ****         
2125:main.c        ****         union breakFloat theVal;
2126:main.c        ****         uint32_t i = 6;
 7479              		.loc 1 2126 0
 7480 0050 0623     		movs	r3, #6
 7481 0052 FB63     		str	r3, [r7, #60]
2127:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+6;
 7482              		.loc 1 2127 0
 7483 0054 1423     		movs	r3, #20
 7484 0056 87F82730 		strb	r3, [r7, #39]
2128:main.c        ****         for (; i < stoppingPoint; i++)
 7485              		.loc 1 2128 0
 7486 005a 22E0     		b	.L330
 7487              	.L331:
2129:main.c        ****         {
2130:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 7488              		.loc 1 2130 0 discriminator 2
 7489 005c FB6B     		ldr	r3, [r7, #60]
 7490 005e 023B     		subs	r3, r3, #2
 7491 0060 7949     		ldr	r1, .L376+4
 7492 0062 FA6B     		ldr	r2, [r7, #60]
 7493 0064 0A44     		add	r2, r2, r1
 7494 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7495 0068 02F07F02 		and	r2, r2, #127
 7496 006c D1B2     		uxtb	r1, r2
 7497 006e 7B4A     		ldr	r2, .L376+24
 7498 0070 D154     		strb	r1, [r2, r3]
2131:main.c        ****             presetNamesArray[presetNumberToWrite][i-6] = sysexBuffer[i] & 127;
 7499              		.loc 1 2131 0 discriminator 2
 7500 0072 794B     		ldr	r3, .L376+20
 7501 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7502 0076 1846     		mov	r0, r3
 7503 0078 FB6B     		ldr	r3, [r7, #60]
 7504 007a 9A1F     		subs	r2, r3, #6
 7505 007c 7249     		ldr	r1, .L376+4
 7506 007e FB6B     		ldr	r3, [r7, #60]
 7507 0080 0B44     		add	r3, r3, r1
 7508 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7509 0084 03F07F03 		and	r3, r3, #127
 7510 0088 DCB2     		uxtb	r4, r3
 7511 008a 7549     		ldr	r1, .L376+28
 7512 008c 0346     		mov	r3, r0
 7513 008e DB00     		lsls	r3, r3, #3
 7514 0090 1B1A     		subs	r3, r3, r0
 7515 0092 5B00     		lsls	r3, r3, #1
 7516 0094 0B44     		add	r3, r3, r1
 7517 0096 1344     		add	r3, r3, r2
 7518 0098 2246     		mov	r2, r4
 7519 009a 1A70     		strb	r2, [r3]
2128:main.c        ****         for (; i < stoppingPoint; i++)
 7520              		.loc 1 2128 0 discriminator 2
 7521 009c FB6B     		ldr	r3, [r7, #60]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 172


 7522 009e 0133     		adds	r3, r3, #1
 7523 00a0 FB63     		str	r3, [r7, #60]
 7524              	.L330:
2128:main.c        ****         for (; i < stoppingPoint; i++)
 7525              		.loc 1 2128 0 is_stmt 0 discriminator 1
 7526 00a2 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 7527 00a6 FB6B     		ldr	r3, [r7, #60]
 7528 00a8 9A42     		cmp	r2, r3
 7529 00aa D7D8     		bhi	.L331
2132:main.c        ****         }
2133:main.c        ****         
2134:main.c        ****         presetArraySection = macroNames;
 7530              		.loc 1 2134 0 is_stmt 1
 7531 00ac 694B     		ldr	r3, .L376+16
 7532 00ae 0122     		movs	r2, #1
 7533 00b0 1A70     		strb	r2, [r3]
 7534              	.LBB40:
2135:main.c        **** 
2136:main.c        ****         
2137:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 7535              		.loc 1 2137 0
 7536 00b2 0023     		movs	r3, #0
 7537 00b4 BB63     		str	r3, [r7, #56]
 7538 00b6 34E0     		b	.L332
 7539              	.L335:
 7540              	.LBB41:
2138:main.c        ****         {
2139:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 7541              		.loc 1 2139 0
 7542 00b8 0023     		movs	r3, #0
 7543 00ba 7B63     		str	r3, [r7, #52]
 7544 00bc 2BE0     		b	.L333
 7545              	.L334:
2140:main.c        ****             {
2141:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 7546              		.loc 1 2141 0 discriminator 3
 7547 00be FB6B     		ldr	r3, [r7, #60]
 7548 00c0 023B     		subs	r3, r3, #2
 7549 00c2 6149     		ldr	r1, .L376+4
 7550 00c4 FA6B     		ldr	r2, [r7, #60]
 7551 00c6 0A44     		add	r2, r2, r1
 7552 00c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7553 00ca 02F07F02 		and	r2, r2, #127
 7554 00ce D1B2     		uxtb	r1, r2
 7555 00d0 624A     		ldr	r2, .L376+24
 7556 00d2 D154     		strb	r1, [r2, r3]
2142:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 7557              		.loc 1 2142 0 discriminator 3
 7558 00d4 604B     		ldr	r3, .L376+20
 7559 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7560 00d8 1846     		mov	r0, r3
 7561 00da 5B4A     		ldr	r2, .L376+4
 7562 00dc FB6B     		ldr	r3, [r7, #60]
 7563 00de 1344     		add	r3, r3, r2
 7564 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7565 00e2 03F07F03 		and	r3, r3, #127
 7566 00e6 DCB2     		uxtb	r4, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 173


 7567 00e8 5E49     		ldr	r1, .L376+32
 7568 00ea BB6B     		ldr	r3, [r7, #56]
 7569 00ec 1A46     		mov	r2, r3
 7570 00ee D200     		lsls	r2, r2, #3
 7571 00f0 D21A     		subs	r2, r2, r3
 7572 00f2 5300     		lsls	r3, r2, #1
 7573 00f4 1A46     		mov	r2, r3
 7574 00f6 0346     		mov	r3, r0
 7575 00f8 DB00     		lsls	r3, r3, #3
 7576 00fa 1B1A     		subs	r3, r3, r0
 7577 00fc 1B01     		lsls	r3, r3, #4
 7578 00fe 1344     		add	r3, r3, r2
 7579 0100 CA18     		adds	r2, r1, r3
 7580 0102 7B6B     		ldr	r3, [r7, #52]
 7581 0104 1344     		add	r3, r3, r2
 7582 0106 2246     		mov	r2, r4
 7583 0108 1A70     		strb	r2, [r3]
2143:main.c        ****                 i++;
 7584              		.loc 1 2143 0 discriminator 3
 7585 010a FB6B     		ldr	r3, [r7, #60]
 7586 010c 0133     		adds	r3, r3, #1
 7587 010e FB63     		str	r3, [r7, #60]
2139:main.c        ****             {
 7588              		.loc 1 2139 0 discriminator 3
 7589 0110 7B6B     		ldr	r3, [r7, #52]
 7590 0112 0133     		adds	r3, r3, #1
 7591 0114 7B63     		str	r3, [r7, #52]
 7592              	.L333:
2139:main.c        ****             {
 7593              		.loc 1 2139 0 is_stmt 0 discriminator 1
 7594 0116 7B6B     		ldr	r3, [r7, #52]
 7595 0118 0D2B     		cmp	r3, #13
 7596 011a D0DD     		ble	.L334
 7597              	.LBE41:
2137:main.c        ****         {
 7598              		.loc 1 2137 0 is_stmt 1 discriminator 2
 7599 011c BB6B     		ldr	r3, [r7, #56]
 7600 011e 0133     		adds	r3, r3, #1
 7601 0120 BB63     		str	r3, [r7, #56]
 7602              	.L332:
2137:main.c        ****         {
 7603              		.loc 1 2137 0 is_stmt 0 discriminator 1
 7604 0122 BB6B     		ldr	r3, [r7, #56]
 7605 0124 072B     		cmp	r3, #7
 7606 0126 C7DD     		ble	.L335
 7607              	.LBE40:
2144:main.c        ****             }
2145:main.c        ****         }
2146:main.c        ****         
2147:main.c        ****         uint16_t valsStart = 4 + NAME_LENGTH_IN_BYTES + (NAME_LENGTH_IN_BYTES * NUM_MACROS);
 7608              		.loc 1 2147 0 is_stmt 1
 7609 0128 8223     		movs	r3, #130
 7610 012a BB84     		strh	r3, [r7, #36]	@ movhi
2148:main.c        ****         
2149:main.c        ****         presetArraySection = initialVals;
 7611              		.loc 1 2149 0
 7612 012c 494B     		ldr	r3, .L376+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 174


 7613 012e 0222     		movs	r2, #2
 7614 0130 1A70     		strb	r2, [r3]
2150:main.c        ****         
2151:main.c        ****         for (; i < sysexPointer; i = i+5)
 7615              		.loc 1 2151 0
 7616 0132 19E2     		b	.L336
 7617              	.L357:
2152:main.c        ****         {
2153:main.c        ****             theVal.u32 = 0;
 7618              		.loc 1 2153 0
 7619 0134 0023     		movs	r3, #0
 7620 0136 BB60     		str	r3, [r7, #8]
2154:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7621              		.loc 1 2154 0
 7622 0138 BB68     		ldr	r3, [r7, #8]
 7623 013a 4349     		ldr	r1, .L376+4
 7624 013c FA6B     		ldr	r2, [r7, #60]
 7625 013e 0A44     		add	r2, r2, r1
 7626 0140 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7627 0142 1207     		lsls	r2, r2, #28
 7628 0144 1343     		orrs	r3, r3, r2
 7629 0146 BB60     		str	r3, [r7, #8]
2155:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 7630              		.loc 1 2155 0
 7631 0148 BB68     		ldr	r3, [r7, #8]
 7632 014a FA6B     		ldr	r2, [r7, #60]
 7633 014c 0132     		adds	r2, r2, #1
 7634 014e 3E49     		ldr	r1, .L376+4
 7635 0150 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7636 0152 5205     		lsls	r2, r2, #21
 7637 0154 1343     		orrs	r3, r3, r2
 7638 0156 BB60     		str	r3, [r7, #8]
2156:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 7639              		.loc 1 2156 0
 7640 0158 BB68     		ldr	r3, [r7, #8]
 7641 015a FA6B     		ldr	r2, [r7, #60]
 7642 015c 0232     		adds	r2, r2, #2
 7643 015e 3A49     		ldr	r1, .L376+4
 7644 0160 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7645 0162 9203     		lsls	r2, r2, #14
 7646 0164 1343     		orrs	r3, r3, r2
 7647 0166 BB60     		str	r3, [r7, #8]
2157:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 7648              		.loc 1 2157 0
 7649 0168 BB68     		ldr	r3, [r7, #8]
 7650 016a FA6B     		ldr	r2, [r7, #60]
 7651 016c 0332     		adds	r2, r2, #3
 7652 016e 3649     		ldr	r1, .L376+4
 7653 0170 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7654 0172 D201     		lsls	r2, r2, #7
 7655 0174 1343     		orrs	r3, r3, r2
 7656 0176 BB60     		str	r3, [r7, #8]
2158:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 7657              		.loc 1 2158 0
 7658 0178 BA68     		ldr	r2, [r7, #8]
 7659 017a FB6B     		ldr	r3, [r7, #60]
 7660 017c 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 175


 7661 017e 3249     		ldr	r1, .L376+4
 7662 0180 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7663 0182 03F07F03 		and	r3, r3, #127
 7664 0186 1343     		orrs	r3, r3, r2
 7665 0188 BB60     		str	r3, [r7, #8]
2159:main.c        ****             testVal = theVal.f;
 7666              		.loc 1 2159 0
 7667 018a BB68     		ldr	r3, [r7, #8]	@ float
 7668 018c 364A     		ldr	r2, .L376+36
 7669 018e 1360     		str	r3, [r2]	@ float
2160:main.c        ****             if (presetArraySection == initialVals)
 7670              		.loc 1 2160 0
 7671 0190 304B     		ldr	r3, .L376+16
 7672 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7673 0194 022B     		cmp	r3, #2
 7674 0196 40F0B980 		bne	.L337
2161:main.c        ****             {
2162:main.c        **** 
2163:main.c        ****                 if (currentFloat == 0)
 7675              		.loc 1 2163 0
 7676 019a 2D4B     		ldr	r3, .L376+12
 7677 019c 1B68     		ldr	r3, [r3]
 7678 019e 002B     		cmp	r3, #0
 7679 01a0 22D1     		bne	.L338
2164:main.c        ****                 {
2165:main.c        ****                     valsCount = (uint16_t) theVal.f;
 7680              		.loc 1 2165 0
 7681 01a2 BB68     		ldr	r3, [r7, #8]	@ float
 7682 01a4 1846     		mov	r0, r3
 7683 01a6 FFF7FEFF 		bl	__aeabi_f2uiz
 7684 01aa 0346     		mov	r3, r0
 7685 01ac 9AB2     		uxth	r2, r3
 7686 01ae 2F4B     		ldr	r3, .L376+40
 7687 01b0 1A80     		strh	r2, [r3]	@ movhi
2166:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 7688              		.loc 1 2166 0
 7689 01b2 BA8C     		ldrh	r2, [r7, #36]
 7690 01b4 264B     		ldr	r3, .L376+12
 7691 01b6 1B68     		ldr	r3, [r3]
 7692 01b8 591C     		adds	r1, r3, #1
 7693 01ba 2548     		ldr	r0, .L376+12
 7694 01bc 0160     		str	r1, [r0]
 7695 01be 1344     		add	r3, r3, r2
 7696 01c0 2A4A     		ldr	r2, .L376+40
 7697 01c2 1288     		ldrh	r2, [r2]
 7698 01c4 120A     		lsrs	r2, r2, #8
 7699 01c6 92B2     		uxth	r2, r2
 7700 01c8 D1B2     		uxtb	r1, r2
 7701 01ca 244A     		ldr	r2, .L376+24
 7702 01cc D154     		strb	r1, [r2, r3]
2167:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 7703              		.loc 1 2167 0
 7704 01ce BA8C     		ldrh	r2, [r7, #36]
 7705 01d0 1F4B     		ldr	r3, .L376+12
 7706 01d2 1B68     		ldr	r3, [r3]
 7707 01d4 591C     		adds	r1, r3, #1
 7708 01d6 1E48     		ldr	r0, .L376+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 176


 7709 01d8 0160     		str	r1, [r0]
 7710 01da 1344     		add	r3, r3, r2
 7711 01dc 234A     		ldr	r2, .L376+40
 7712 01de 1288     		ldrh	r2, [r2]
 7713 01e0 D1B2     		uxtb	r1, r2
 7714 01e2 1E4A     		ldr	r2, .L376+24
 7715 01e4 D154     		strb	r1, [r2, r3]
 7716 01e6 BCE1     		b	.L344
 7717              	.L338:
2168:main.c        ****                 }
2169:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 7718              		.loc 1 2169 0
 7719 01e8 204B     		ldr	r3, .L376+40
 7720 01ea 1B88     		ldrh	r3, [r3]
 7721 01ec 0133     		adds	r3, r3, #1
 7722 01ee 5B00     		lsls	r3, r3, #1
 7723 01f0 1A46     		mov	r2, r3
 7724 01f2 174B     		ldr	r3, .L376+12
 7725 01f4 1B68     		ldr	r3, [r3]
 7726 01f6 9A42     		cmp	r2, r3
 7727 01f8 3CD9     		bls	.L340
 7728              	.LBB42:
2170:main.c        ****                 { 
2171:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 7729              		.loc 1 2171 0
 7730 01fa BB68     		ldr	r3, [r7, #8]	@ float
 7731 01fc 1C49     		ldr	r1, .L376+44
 7732 01fe 1846     		mov	r0, r3
 7733 0200 FFF7FEFF 		bl	__aeabi_fmul
 7734 0204 0346     		mov	r3, r0
 7735 0206 1846     		mov	r0, r3
 7736 0208 FFF7FEFF 		bl	__aeabi_f2uiz
 7737 020c 0346     		mov	r3, r0
 7738 020e 7B84     		strh	r3, [r7, #34]	@ movhi
2172:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 7739              		.loc 1 2172 0
 7740 0210 BA8C     		ldrh	r2, [r7, #36]
 7741 0212 0F4B     		ldr	r3, .L376+12
 7742 0214 1B68     		ldr	r3, [r3]
 7743 0216 591C     		adds	r1, r3, #1
 7744 0218 0D48     		ldr	r0, .L376+12
 7745 021a 0160     		str	r1, [r0]
 7746 021c 1344     		add	r3, r3, r2
 7747 021e 7A8C     		ldrh	r2, [r7, #34]
 7748 0220 120A     		lsrs	r2, r2, #8
 7749 0222 92B2     		uxth	r2, r2
 7750 0224 D1B2     		uxtb	r1, r2
 7751 0226 0D4A     		ldr	r2, .L376+24
 7752 0228 D154     		strb	r1, [r2, r3]
2173:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7753              		.loc 1 2173 0
 7754 022a BA8C     		ldrh	r2, [r7, #36]
 7755 022c 084B     		ldr	r3, .L376+12
 7756 022e 1B68     		ldr	r3, [r3]
 7757 0230 591C     		adds	r1, r3, #1
 7758 0232 0748     		ldr	r0, .L376+12
 7759 0234 0160     		str	r1, [r0]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 177


 7760 0236 1344     		add	r3, r3, r2
 7761 0238 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 7762 023a D1B2     		uxtb	r1, r2
 7763 023c 074A     		ldr	r2, .L376+24
 7764 023e D154     		strb	r1, [r2, r3]
 7765              	.LBE42:
 7766 0240 8FE1     		b	.L344
 7767              	.L377:
 7768 0242 00BF     		.align	2
 7769              	.L376:
 7770 0244 00000000 		.word	parsingSysex
 7771 0248 00000000 		.word	sysexBuffer
 7772 024c 00000000 		.word	sysexMessageInProgress
 7773 0250 00000000 		.word	currentFloat
 7774 0254 00000000 		.word	presetArraySection
 7775 0258 00000000 		.word	presetNumberToWrite
 7776 025c 00000000 		.word	presetArray
 7777 0260 00000000 		.word	presetNamesArray
 7778 0264 00000000 		.word	macroNamesArray
 7779 0268 00000000 		.word	testVal
 7780 026c 00000000 		.word	valsCount
 7781 0270 00FF7F47 		.word	1199570688
 7782              	.L340:
2174:main.c        ****                 }
2175:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 7783              		.loc 1 2175 0
 7784 0274 854B     		ldr	r3, .L378
 7785 0276 1B88     		ldrh	r3, [r3]
 7786 0278 0133     		adds	r3, r3, #1
 7787 027a 5B00     		lsls	r3, r3, #1
 7788 027c 1A46     		mov	r2, r3
 7789 027e 844B     		ldr	r3, .L378+4
 7790 0280 1B68     		ldr	r3, [r3]
 7791 0282 9A42     		cmp	r2, r3
 7792 0284 40F06D81 		bne	.L344
2176:main.c        ****                 {
2177:main.c        ****                     valCheck = theVal.f;
 7793              		.loc 1 2177 0
 7794 0288 BB68     		ldr	r3, [r7, #8]	@ float
 7795 028a 824A     		ldr	r2, .L378+8
 7796 028c 1360     		str	r3, [r2]	@ float
2178:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 7797              		.loc 1 2178 0
 7798 028e 814B     		ldr	r3, .L378+8
 7799 0290 1B68     		ldr	r3, [r3]	@ float
 7800 0292 8149     		ldr	r1, .L378+12
 7801 0294 1846     		mov	r0, r3
 7802 0296 FFF7FEFF 		bl	__aeabi_fcmplt
 7803 029a 0346     		mov	r3, r0
 7804 029c 002B     		cmp	r3, #0
 7805 029e 23D0     		beq	.L341
 7806              		.loc 1 2178 0 is_stmt 0 discriminator 1
 7807 02a0 7C4B     		ldr	r3, .L378+8
 7808 02a2 1B68     		ldr	r3, [r3]	@ float
 7809 02a4 7D49     		ldr	r1, .L378+16
 7810 02a6 1846     		mov	r0, r3
 7811 02a8 FFF7FEFF 		bl	__aeabi_fcmpgt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 178


 7812 02ac 0346     		mov	r3, r0
 7813 02ae 002B     		cmp	r3, #0
 7814 02b0 1AD0     		beq	.L341
2179:main.c        ****                     {
2180:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7815              		.loc 1 2180 0 is_stmt 1
 7816 02b2 BA8C     		ldrh	r2, [r7, #36]
 7817 02b4 764B     		ldr	r3, .L378+4
 7818 02b6 1B68     		ldr	r3, [r3]
 7819 02b8 591C     		adds	r1, r3, #1
 7820 02ba 7548     		ldr	r0, .L378+4
 7821 02bc 0160     		str	r1, [r0]
 7822 02be 1344     		add	r3, r3, r2
 7823 02c0 774A     		ldr	r2, .L378+20
 7824 02c2 EF21     		movs	r1, #239
 7825 02c4 D154     		strb	r1, [r2, r3]
2181:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7826              		.loc 1 2181 0
 7827 02c6 BA8C     		ldrh	r2, [r7, #36]
 7828 02c8 714B     		ldr	r3, .L378+4
 7829 02ca 1B68     		ldr	r3, [r3]
 7830 02cc 591C     		adds	r1, r3, #1
 7831 02ce 7048     		ldr	r0, .L378+4
 7832 02d0 0160     		str	r1, [r0]
 7833 02d2 1344     		add	r3, r3, r2
 7834 02d4 724A     		ldr	r2, .L378+20
 7835 02d6 EF21     		movs	r1, #239
 7836 02d8 D154     		strb	r1, [r2, r3]
2182:main.c        ****                         presetArraySection = mapCountNext;
 7837              		.loc 1 2182 0
 7838 02da 724B     		ldr	r3, .L378+24
 7839 02dc 0322     		movs	r2, #3
 7840 02de 1A70     		strb	r2, [r3]
2183:main.c        ****                         mapCount = 0;
 7841              		.loc 1 2183 0
 7842 02e0 714B     		ldr	r3, .L378+28
 7843 02e2 0022     		movs	r2, #0
 7844 02e4 1A60     		str	r2, [r3]
 7845 02e6 3CE1     		b	.L344
 7846              	.L341:
2184:main.c        ****                     }
2185:main.c        ****                     else
2186:main.c        ****                     {
2187:main.c        ****                         //error state
2188:main.c        ****                         SPI_errors++;
 7847              		.loc 1 2188 0
 7848 02e8 704B     		ldr	r3, .L378+32
 7849 02ea 1B68     		ldr	r3, [r3]
 7850 02ec 0133     		adds	r3, r3, #1
 7851 02ee 6F4A     		ldr	r2, .L378+32
 7852 02f0 1360     		str	r3, [r2]
2189:main.c        ****                         sysexMessageInProgress = 0;
 7853              		.loc 1 2189 0
 7854 02f2 6F4B     		ldr	r3, .L378+36
 7855 02f4 0022     		movs	r2, #0
 7856 02f6 1A70     		strb	r2, [r3]
2190:main.c        ****                         sysexPointer = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 179


 7857              		.loc 1 2190 0
 7858 02f8 6E4B     		ldr	r3, .L378+40
 7859 02fa 0022     		movs	r2, #0
 7860 02fc 1A60     		str	r2, [r3]
2191:main.c        ****                         sendingMessage = 0;
 7861              		.loc 1 2191 0
 7862 02fe 6E4B     		ldr	r3, .L378+44
 7863 0300 0022     		movs	r2, #0
 7864 0302 1A70     		strb	r2, [r3]
2192:main.c        ****                         parseThatMF = 0;
 7865              		.loc 1 2192 0
 7866 0304 6D4B     		ldr	r3, .L378+48
 7867 0306 0022     		movs	r2, #0
 7868 0308 1A70     		strb	r2, [r3]
 7869 030a 2AE1     		b	.L344
 7870              	.L337:
2193:main.c        ****                     }
2194:main.c        ****                 }
2195:main.c        ****             }
2196:main.c        ****             else if (presetArraySection == mapCountNext)
 7871              		.loc 1 2196 0
 7872 030c 654B     		ldr	r3, .L378+24
 7873 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7874 0310 032B     		cmp	r3, #3
 7875 0312 28D1     		bne	.L345
2197:main.c        ****             {
2198:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 7876              		.loc 1 2198 0
 7877 0314 BB68     		ldr	r3, [r7, #8]	@ float
 7878 0316 1846     		mov	r0, r3
 7879 0318 FFF7FEFF 		bl	__aeabi_f2uiz
 7880 031c 0346     		mov	r3, r0
 7881 031e 9AB2     		uxth	r2, r3
 7882 0320 674B     		ldr	r3, .L378+52
 7883 0322 1A80     		strh	r2, [r3]	@ movhi
2199:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 7884              		.loc 1 2199 0
 7885 0324 BA8C     		ldrh	r2, [r7, #36]
 7886 0326 5A4B     		ldr	r3, .L378+4
 7887 0328 1B68     		ldr	r3, [r3]
 7888 032a 591C     		adds	r1, r3, #1
 7889 032c 5848     		ldr	r0, .L378+4
 7890 032e 0160     		str	r1, [r0]
 7891 0330 1344     		add	r3, r3, r2
 7892 0332 634A     		ldr	r2, .L378+52
 7893 0334 1288     		ldrh	r2, [r2]
 7894 0336 120A     		lsrs	r2, r2, #8
 7895 0338 92B2     		uxth	r2, r2
 7896 033a D1B2     		uxtb	r1, r2
 7897 033c 584A     		ldr	r2, .L378+20
 7898 033e D154     		strb	r1, [r2, r3]
2200:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 7899              		.loc 1 2200 0
 7900 0340 BA8C     		ldrh	r2, [r7, #36]
 7901 0342 534B     		ldr	r3, .L378+4
 7902 0344 1B68     		ldr	r3, [r3]
 7903 0346 591C     		adds	r1, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 180


 7904 0348 5148     		ldr	r0, .L378+4
 7905 034a 0160     		str	r1, [r0]
 7906 034c 1344     		add	r3, r3, r2
 7907 034e 5C4A     		ldr	r2, .L378+52
 7908 0350 1288     		ldrh	r2, [r2]
 7909 0352 D1B2     		uxtb	r1, r2
 7910 0354 524A     		ldr	r2, .L378+20
 7911 0356 D154     		strb	r1, [r2, r3]
2201:main.c        ****                 presetArraySection = mapping;
 7912              		.loc 1 2201 0
 7913 0358 524B     		ldr	r3, .L378+24
 7914 035a 0422     		movs	r2, #4
 7915 035c 1A70     		strb	r2, [r3]
2202:main.c        ****                 numMappings = 0;
 7916              		.loc 1 2202 0
 7917 035e 594B     		ldr	r3, .L378+56
 7918 0360 0022     		movs	r2, #0
 7919 0362 1A80     		strh	r2, [r3]	@ movhi
 7920 0364 FDE0     		b	.L344
 7921              	.L345:
2203:main.c        ****             }
2204:main.c        ****             else if (presetArraySection == mapping)
 7922              		.loc 1 2204 0
 7923 0366 4F4B     		ldr	r3, .L378+24
 7924 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7925 036a 042B     		cmp	r3, #4
 7926 036c 40F0F980 		bne	.L344
2205:main.c        ****             {
2206:main.c        ****                 // this is the order
2207:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
2208:main.c        ****                 if (numMappings < mapCountExpectation)
 7927              		.loc 1 2208 0
 7928 0370 544B     		ldr	r3, .L378+56
 7929 0372 1A88     		ldrh	r2, [r3]
 7930 0374 524B     		ldr	r3, .L378+52
 7931 0376 1B88     		ldrh	r3, [r3]
 7932 0378 9A42     		cmp	r2, r3
 7933 037a 80F0A780 		bcs	.L346
2209:main.c        ****                 {
2210:main.c        ****                     if ((mapCount % 4) == 0)
 7934              		.loc 1 2210 0
 7935 037e 4A4B     		ldr	r3, .L378+28
 7936 0380 1B68     		ldr	r3, [r3]
 7937 0382 03F00303 		and	r3, r3, #3
 7938 0386 002B     		cmp	r3, #0
 7939 0388 0FD1     		bne	.L347
2211:main.c        ****                     {
2212:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7940              		.loc 1 2212 0
 7941 038a BA8C     		ldrh	r2, [r7, #36]
 7942 038c 404B     		ldr	r3, .L378+4
 7943 038e 1B68     		ldr	r3, [r3]
 7944 0390 591C     		adds	r1, r3, #1
 7945 0392 3F48     		ldr	r0, .L378+4
 7946 0394 0160     		str	r1, [r0]
 7947 0396 D418     		adds	r4, r2, r3
 7948 0398 BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 181


 7949 039a 1846     		mov	r0, r3
 7950 039c FFF7FEFF 		bl	__aeabi_f2uiz
 7951 03a0 0346     		mov	r3, r0
 7952 03a2 DAB2     		uxtb	r2, r3
 7953 03a4 3E4B     		ldr	r3, .L378+20
 7954 03a6 1A55     		strb	r2, [r3, r4]
 7955 03a8 69E0     		b	.L348
 7956              	.L347:
2213:main.c        ****                     }
2214:main.c        ****                     else if  (mapCount % 4 == 1)
 7957              		.loc 1 2214 0
 7958 03aa 3F4B     		ldr	r3, .L378+28
 7959 03ac 1B68     		ldr	r3, [r3]
 7960 03ae 03F00303 		and	r3, r3, #3
 7961 03b2 012B     		cmp	r3, #1
 7962 03b4 0FD1     		bne	.L349
2215:main.c        ****                     {
2216:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7963              		.loc 1 2216 0
 7964 03b6 BA8C     		ldrh	r2, [r7, #36]
 7965 03b8 354B     		ldr	r3, .L378+4
 7966 03ba 1B68     		ldr	r3, [r3]
 7967 03bc 591C     		adds	r1, r3, #1
 7968 03be 3448     		ldr	r0, .L378+4
 7969 03c0 0160     		str	r1, [r0]
 7970 03c2 D418     		adds	r4, r2, r3
 7971 03c4 BB68     		ldr	r3, [r7, #8]	@ float
 7972 03c6 1846     		mov	r0, r3
 7973 03c8 FFF7FEFF 		bl	__aeabi_f2uiz
 7974 03cc 0346     		mov	r3, r0
 7975 03ce DAB2     		uxtb	r2, r3
 7976 03d0 334B     		ldr	r3, .L378+20
 7977 03d2 1A55     		strb	r2, [r3, r4]
 7978 03d4 53E0     		b	.L348
 7979              	.L349:
2217:main.c        ****                     }
2218:main.c        ****                     else if (mapCount % 4 == 2) //check if the scalar source is -1 (if so send 255 
 7980              		.loc 1 2218 0
 7981 03d6 344B     		ldr	r3, .L378+28
 7982 03d8 1B68     		ldr	r3, [r3]
 7983 03da 03F00303 		and	r3, r3, #3
 7984 03de 022B     		cmp	r3, #2
 7985 03e0 23D1     		bne	.L350
2219:main.c        ****                     {
2220:main.c        ****                         if (theVal.f < 0.0f)
 7986              		.loc 1 2220 0
 7987 03e2 BB68     		ldr	r3, [r7, #8]	@ float
 7988 03e4 4FF00001 		mov	r1, #0
 7989 03e8 1846     		mov	r0, r3
 7990 03ea FFF7FEFF 		bl	__aeabi_fcmplt
 7991 03ee 0346     		mov	r3, r0
 7992 03f0 002B     		cmp	r3, #0
 7993 03f2 0AD0     		beq	.L375
2221:main.c        ****                         {
2222:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 7994              		.loc 1 2222 0
 7995 03f4 BA8C     		ldrh	r2, [r7, #36]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 182


 7996 03f6 264B     		ldr	r3, .L378+4
 7997 03f8 1B68     		ldr	r3, [r3]
 7998 03fa 591C     		adds	r1, r3, #1
 7999 03fc 2448     		ldr	r0, .L378+4
 8000 03fe 0160     		str	r1, [r0]
 8001 0400 1344     		add	r3, r3, r2
 8002 0402 274A     		ldr	r2, .L378+20
 8003 0404 FF21     		movs	r1, #255
 8004 0406 D154     		strb	r1, [r2, r3]
 8005 0408 39E0     		b	.L348
 8006              	.L375:
2223:main.c        ****                         }
2224:main.c        ****                         else
2225:main.c        ****                         {
2226:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8007              		.loc 1 2226 0
 8008 040a BA8C     		ldrh	r2, [r7, #36]
 8009 040c 204B     		ldr	r3, .L378+4
 8010 040e 1B68     		ldr	r3, [r3]
 8011 0410 591C     		adds	r1, r3, #1
 8012 0412 1F48     		ldr	r0, .L378+4
 8013 0414 0160     		str	r1, [r0]
 8014 0416 D418     		adds	r4, r2, r3
 8015 0418 BB68     		ldr	r3, [r7, #8]	@ float
 8016 041a 1846     		mov	r0, r3
 8017 041c FFF7FEFF 		bl	__aeabi_f2uiz
 8018 0420 0346     		mov	r3, r0
 8019 0422 DAB2     		uxtb	r2, r3
 8020 0424 1E4B     		ldr	r3, .L378+20
 8021 0426 1A55     		strb	r2, [r3, r4]
 8022 0428 29E0     		b	.L348
 8023              	.L350:
 8024              	.LBB43:
2227:main.c        ****                         }
2228:main.c        ****                     }
2229:main.c        ****                     else
2230:main.c        ****                     {
2231:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 8025              		.loc 1 2231 0
 8026 042a BB68     		ldr	r3, [r7, #8]	@ float
 8027 042c 2649     		ldr	r1, .L378+60
 8028 042e 1846     		mov	r0, r3
 8029 0430 FFF7FEFF 		bl	__aeabi_fmul
 8030 0434 0346     		mov	r3, r0
 8031 0436 1846     		mov	r0, r3
 8032 0438 FFF7FEFF 		bl	__aeabi_f2iz
 8033 043c 0346     		mov	r3, r0
 8034 043e 3B84     		strh	r3, [r7, #32]	@ movhi
2232:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 8035              		.loc 1 2232 0
 8036 0440 BA8C     		ldrh	r2, [r7, #36]
 8037 0442 134B     		ldr	r3, .L378+4
 8038 0444 1B68     		ldr	r3, [r3]
 8039 0446 591C     		adds	r1, r3, #1
 8040 0448 1148     		ldr	r0, .L378+4
 8041 044a 0160     		str	r1, [r0]
 8042 044c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 183


 8043 044e B7F92020 		ldrsh	r2, [r7, #32]
 8044 0452 1212     		asrs	r2, r2, #8
 8045 0454 12B2     		sxth	r2, r2
 8046 0456 D1B2     		uxtb	r1, r2
 8047 0458 114A     		ldr	r2, .L378+20
 8048 045a D154     		strb	r1, [r2, r3]
2233:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 8049              		.loc 1 2233 0
 8050 045c BA8C     		ldrh	r2, [r7, #36]
 8051 045e 0C4B     		ldr	r3, .L378+4
 8052 0460 1B68     		ldr	r3, [r3]
 8053 0462 591C     		adds	r1, r3, #1
 8054 0464 0A48     		ldr	r0, .L378+4
 8055 0466 0160     		str	r1, [r0]
 8056 0468 1344     		add	r3, r3, r2
 8057 046a 3A8C     		ldrh	r2, [r7, #32]	@ movhi
 8058 046c D1B2     		uxtb	r1, r2
 8059 046e 0C4A     		ldr	r2, .L378+20
 8060 0470 D154     		strb	r1, [r2, r3]
2234:main.c        ****                         numMappings++;
 8061              		.loc 1 2234 0
 8062 0472 144B     		ldr	r3, .L378+56
 8063 0474 1B88     		ldrh	r3, [r3]
 8064 0476 0133     		adds	r3, r3, #1
 8065 0478 9AB2     		uxth	r2, r3
 8066 047a 124B     		ldr	r3, .L378+56
 8067 047c 1A80     		strh	r2, [r3]	@ movhi
 8068              	.L348:
 8069              	.LBE43:
2235:main.c        ****                     }
2236:main.c        ****                     mapCount++;
 8070              		.loc 1 2236 0
 8071 047e 0A4B     		ldr	r3, .L378+28
 8072 0480 1B68     		ldr	r3, [r3]
 8073 0482 0133     		adds	r3, r3, #1
 8074 0484 084A     		ldr	r2, .L378+28
 8075 0486 1360     		str	r3, [r2]
 8076 0488 6BE0     		b	.L344
 8077              	.L379:
 8078 048a 00BF     		.align	2
 8079              	.L378:
 8080 048c 00000000 		.word	valsCount
 8081 0490 00000000 		.word	currentFloat
 8082 0494 00000000 		.word	valCheck
 8083 0498 0000C0BF 		.word	-1077936128
 8084 049c 000020C0 		.word	-1071644672
 8085 04a0 00000000 		.word	presetArray
 8086 04a4 00000000 		.word	presetArraySection
 8087 04a8 00000000 		.word	mapCount
 8088 04ac 00000000 		.word	SPI_errors
 8089 04b0 00000000 		.word	sysexMessageInProgress
 8090 04b4 00000000 		.word	sysexPointer
 8091 04b8 00000000 		.word	sendingMessage
 8092 04bc 00000000 		.word	parseThatMF
 8093 04c0 00000000 		.word	mapCountExpectation
 8094 04c4 00000000 		.word	numMappings
 8095 04c8 00FEFF46 		.word	1191181824
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 184


 8096              	.L346:
2237:main.c        ****                 }
2238:main.c        ****                 
2239:main.c        **** 
2240:main.c        ****                 else
2241:main.c        ****                 {
2242:main.c        ****                     //mapcount ended
2243:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 8097              		.loc 1 2243 0
 8098 04cc BB68     		ldr	r3, [r7, #8]	@ float
 8099 04ce 6349     		ldr	r1, .L380
 8100 04d0 1846     		mov	r0, r3
 8101 04d2 FFF7FEFF 		bl	__aeabi_fcmplt
 8102 04d6 0346     		mov	r3, r0
 8103 04d8 002B     		cmp	r3, #0
 8104 04da 31D0     		beq	.L354
 8105              		.loc 1 2243 0 is_stmt 0 discriminator 1
 8106 04dc BB68     		ldr	r3, [r7, #8]	@ float
 8107 04de 6049     		ldr	r1, .L380+4
 8108 04e0 1846     		mov	r0, r3
 8109 04e2 FFF7FEFF 		bl	__aeabi_fcmpgt
 8110 04e6 0346     		mov	r3, r0
 8111 04e8 002B     		cmp	r3, #0
 8112 04ea 29D0     		beq	.L354
2244:main.c        ****                     {
2245:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8113              		.loc 1 2245 0 is_stmt 1
 8114 04ec BA8C     		ldrh	r2, [r7, #36]
 8115 04ee 5D4B     		ldr	r3, .L380+8
 8116 04f0 1B68     		ldr	r3, [r3]
 8117 04f2 591C     		adds	r1, r3, #1
 8118 04f4 5B48     		ldr	r0, .L380+8
 8119 04f6 0160     		str	r1, [r0]
 8120 04f8 1344     		add	r3, r3, r2
 8121 04fa 5B4A     		ldr	r2, .L380+12
 8122 04fc FE21     		movs	r1, #254
 8123 04fe D154     		strb	r1, [r2, r3]
2246:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8124              		.loc 1 2246 0
 8125 0500 BA8C     		ldrh	r2, [r7, #36]
 8126 0502 584B     		ldr	r3, .L380+8
 8127 0504 1B68     		ldr	r3, [r3]
 8128 0506 591C     		adds	r1, r3, #1
 8129 0508 5648     		ldr	r0, .L380+8
 8130 050a 0160     		str	r1, [r0]
 8131 050c 1344     		add	r3, r3, r2
 8132 050e 564A     		ldr	r2, .L380+12
 8133 0510 FE21     		movs	r1, #254
 8134 0512 D154     		strb	r1, [r2, r3]
2247:main.c        ****                         presetArraySection = presetEnd;
 8135              		.loc 1 2247 0
 8136 0514 554B     		ldr	r3, .L380+16
 8137 0516 0522     		movs	r2, #5
 8138 0518 1A70     		strb	r2, [r3]
2248:main.c        ****                         sysexMessageInProgress = 0;
 8139              		.loc 1 2248 0
 8140 051a 554B     		ldr	r3, .L380+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 185


 8141 051c 0022     		movs	r2, #0
 8142 051e 1A70     		strb	r2, [r3]
2249:main.c        ****                         sendingMessage = 1;
 8143              		.loc 1 2249 0
 8144 0520 544B     		ldr	r3, .L380+24
 8145 0522 0122     		movs	r2, #1
 8146 0524 1A70     		strb	r2, [r3]
2250:main.c        ****                         patchNum = presetNumberToWrite;
 8147              		.loc 1 2250 0
 8148 0526 544B     		ldr	r3, .L380+28
 8149 0528 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8150 052a 544B     		ldr	r3, .L380+32
 8151 052c 1A70     		strb	r2, [r3]
2251:main.c        ****                         messageArraySize = valsStart + currentFloat;
 8152              		.loc 1 2251 0
 8153 052e 4D4B     		ldr	r3, .L380+8
 8154 0530 1B68     		ldr	r3, [r3]
 8155 0532 9AB2     		uxth	r2, r3
 8156 0534 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 8157 0536 1344     		add	r3, r3, r2
 8158 0538 9AB2     		uxth	r2, r3
 8159 053a 514B     		ldr	r3, .L380+36
 8160 053c 1A80     		strh	r2, [r3]	@ movhi
 8161 053e 10E0     		b	.L344
 8162              	.L354:
2252:main.c        ****                     }
2253:main.c        ****                     else
2254:main.c        ****                     {
2255:main.c        ****                         //error state
2256:main.c        ****                         SPI_errors++;
 8163              		.loc 1 2256 0
 8164 0540 504B     		ldr	r3, .L380+40
 8165 0542 1B68     		ldr	r3, [r3]
 8166 0544 0133     		adds	r3, r3, #1
 8167 0546 4F4A     		ldr	r2, .L380+40
 8168 0548 1360     		str	r3, [r2]
2257:main.c        ****                         sysexMessageInProgress = 0;
 8169              		.loc 1 2257 0
 8170 054a 494B     		ldr	r3, .L380+20
 8171 054c 0022     		movs	r2, #0
 8172 054e 1A70     		strb	r2, [r3]
2258:main.c        ****                         sysexPointer = 0;
 8173              		.loc 1 2258 0
 8174 0550 4D4B     		ldr	r3, .L380+44
 8175 0552 0022     		movs	r2, #0
 8176 0554 1A60     		str	r2, [r3]
2259:main.c        ****                         sendingMessage = 0;
 8177              		.loc 1 2259 0
 8178 0556 474B     		ldr	r3, .L380+24
 8179 0558 0022     		movs	r2, #0
 8180 055a 1A70     		strb	r2, [r3]
2260:main.c        ****                         parseThatMF = 0;
 8181              		.loc 1 2260 0
 8182 055c 4B4B     		ldr	r3, .L380+48
 8183 055e 0022     		movs	r2, #0
 8184 0560 1A70     		strb	r2, [r3]
 8185              	.L344:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 186


2151:main.c        ****         {
 8186              		.loc 1 2151 0
 8187 0562 FB6B     		ldr	r3, [r7, #60]
 8188 0564 0533     		adds	r3, r3, #5
 8189 0566 FB63     		str	r3, [r7, #60]
 8190              	.L336:
2151:main.c        ****         {
 8191              		.loc 1 2151 0 is_stmt 0 discriminator 1
 8192 0568 474B     		ldr	r3, .L380+44
 8193 056a 1B68     		ldr	r3, [r3]
 8194 056c FA6B     		ldr	r2, [r7, #60]
 8195 056e 9A42     		cmp	r2, r3
 8196 0570 FFF4E0AD 		bcc	.L357
 8197 0574 0BE2     		b	.L358
 8198              	.L329:
 8199              	.LBE39:
2261:main.c        ****                     }
2262:main.c        ****                 }
2263:main.c        ****             }
2264:main.c        ****             
2265:main.c        ****         }
2266:main.c        ****     }
2267:main.c        ****     #if 0
2268:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2269:main.c        ****     {
2270:main.c        ****         
2271:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
2272:main.c        ****         currentFloat = 0;
2273:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2274:main.c        ****         union breakFloat theVal;
2275:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2276:main.c        ****         {
2277:main.c        ****             theVal.u32 = 0;
2278:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2279:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2280:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2281:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2282:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
2283:main.c        ****             testVal = theVal.f;
2284:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2285:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2286:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2287:main.c        ****         }
2288:main.c        ****         
2289:main.c        ****         tuningArray[currentFloat++] = 0xef;
2290:main.c        ****         tuningArray[currentFloat++] = 0xef;
2291:main.c        ****                         
2292:main.c        ****         
2293:main.c        ****         messageArraySize = currentFloat;
2294:main.c        ****                     
2295:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
2296:main.c        ****         {
2297:main.c        ****             //error state
2298:main.c        ****             SPI_errors++;
2299:main.c        ****             sysexMessageInProgress = 0;
2300:main.c        ****             sysexPointer = 0;
2301:main.c        ****             sendingMessage = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 187


2302:main.c        ****             parseThatMF = 0;
2303:main.c        ****         } else 
2304:main.c        ****         {
2305:main.c        ****             sysexMessageInProgress = 0;
2306:main.c        ****             sendingMessage = 2;
2307:main.c        ****         }
2308:main.c        ****     }
2309:main.c        ****     #endif
2310:main.c        ****     
2311:main.c        **** 
2312:main.c        ****     
2313:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 8200              		.loc 1 2313 0 is_stmt 1
 8201 0576 464B     		ldr	r3, .L380+52
 8202 0578 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8203 057a 022B     		cmp	r3, #2
 8204 057c 40F07881 		bne	.L359
 8205              	.LBB44:
2314:main.c        ****     {
2315:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8206              		.loc 1 2315 0
 8207 0580 3B4B     		ldr	r3, .L380+20
 8208 0582 0122     		movs	r2, #1
 8209 0584 1A70     		strb	r2, [r3]
2316:main.c        ****         currentFloat = 0;
 8210              		.loc 1 2316 0
 8211 0586 374B     		ldr	r3, .L380+8
 8212 0588 0022     		movs	r2, #0
 8213 058a 1A60     		str	r2, [r3]
2317:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 8214              		.loc 1 2317 0
 8215 058c 404B     		ldr	r3, .L380+52
 8216 058e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8217 0590 404B     		ldr	r3, .L380+56
 8218 0592 1A70     		strb	r2, [r3]
2318:main.c        ****         currentCopedent = copedentNumberToWrite;
 8219              		.loc 1 2318 0
 8220 0594 3F4B     		ldr	r3, .L380+56
 8221 0596 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8222 0598 3F4B     		ldr	r3, .L380+60
 8223 059a 1A70     		strb	r2, [r3]
2319:main.c        ****         necks[currentNeck] = currentCopedent;
 8224              		.loc 1 2319 0
 8225 059c 3F4B     		ldr	r3, .L380+64
 8226 059e 1B68     		ldr	r3, [r3]
 8227 05a0 3D4A     		ldr	r2, .L380+60
 8228 05a2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 8229 05a4 3E4A     		ldr	r2, .L380+68
 8230 05a6 D154     		strb	r1, [r2, r3]
2320:main.c        **** 
2321:main.c        ****               
2322:main.c        ****         
2323:main.c        ****         union breakFloat theVal;
2324:main.c        ****         uint32_t i = 2;
 8231              		.loc 1 2324 0
 8232 05a8 0223     		movs	r3, #2
 8233 05aa 3B63     		str	r3, [r7, #48]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 188


2325:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 8234              		.loc 1 2325 0
 8235 05ac 1023     		movs	r3, #16
 8236 05ae FB77     		strb	r3, [r7, #31]
2326:main.c        ****         for (; i < stoppingPoint; i++)
 8237              		.loc 1 2326 0
 8238 05b0 40E0     		b	.L360
 8239              	.L361:
 8240              	.LBB45:
2327:main.c        ****         {
2328:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2329:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 8241              		.loc 1 2329 0 discriminator 2
 8242 05b2 374A     		ldr	r2, .L380+52
 8243 05b4 3B6B     		ldr	r3, [r7, #48]
 8244 05b6 1344     		add	r3, r3, r2
 8245 05b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8246 05ba 03F07F03 		and	r3, r3, #127
 8247 05be BB77     		strb	r3, [r7, #30]
2330:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 8248              		.loc 1 2330 0 discriminator 2
 8249 05c0 344B     		ldr	r3, .L380+56
 8250 05c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8251 05c4 1846     		mov	r0, r3
 8252 05c6 3B6B     		ldr	r3, [r7, #48]
 8253 05c8 9A1E     		subs	r2, r3, #2
 8254 05ca 3649     		ldr	r1, .L380+72
 8255 05cc 0346     		mov	r3, r0
 8256 05ce DB00     		lsls	r3, r3, #3
 8257 05d0 1B1A     		subs	r3, r3, r0
 8258 05d2 5B00     		lsls	r3, r3, #1
 8259 05d4 0B44     		add	r3, r3, r1
 8260 05d6 1344     		add	r3, r3, r2
 8261 05d8 BA7F     		ldrb	r2, [r7, #30]
 8262 05da 1A70     		strb	r2, [r3]
2331:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 8263              		.loc 1 2331 0 discriminator 2
 8264 05dc 2D4B     		ldr	r3, .L380+56
 8265 05de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8266 05e0 9BB2     		uxth	r3, r3
 8267 05e2 1A46     		mov	r2, r3	@ movhi
 8268 05e4 1201     		lsls	r2, r2, #4
 8269 05e6 1A44     		add	r2, r2, r3
 8270 05e8 9200     		lsls	r2, r2, #2
 8271 05ea 1A44     		add	r2, r2, r3
 8272 05ec 5200     		lsls	r2, r2, #1
 8273 05ee 1344     		add	r3, r3, r2
 8274 05f0 5B00     		lsls	r3, r3, #1
 8275 05f2 9BB2     		uxth	r3, r3
 8276 05f4 0233     		adds	r3, r3, #2
 8277 05f6 9AB2     		uxth	r2, r3
 8278 05f8 2B4B     		ldr	r3, .L380+76
 8279 05fa 1A80     		strh	r2, [r3]	@ movhi
2332:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 8280              		.loc 1 2332 0 discriminator 2
 8281 05fc 254B     		ldr	r3, .L380+56
 8282 05fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 189


 8283 0600 9BB2     		uxth	r3, r3
 8284 0602 1A46     		mov	r2, r3	@ movhi
 8285 0604 1201     		lsls	r2, r2, #4
 8286 0606 1A44     		add	r2, r2, r3
 8287 0608 9200     		lsls	r2, r2, #2
 8288 060a 1A44     		add	r2, r2, r3
 8289 060c 5200     		lsls	r2, r2, #1
 8290 060e 1344     		add	r3, r3, r2
 8291 0610 5B00     		lsls	r3, r3, #1
 8292 0612 9AB2     		uxth	r2, r3
 8293 0614 3B6B     		ldr	r3, [r7, #48]
 8294 0616 9BB2     		uxth	r3, r3
 8295 0618 1344     		add	r3, r3, r2
 8296 061a 9AB2     		uxth	r2, r3
 8297 061c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 8298 061e 1146     		mov	r1, r2
 8299 0620 1846     		mov	r0, r3
 8300 0622 FFF7FEFF 		bl	EEPROM_WriteByte
 8301 0626 0346     		mov	r3, r0
 8302 0628 DAB2     		uxtb	r2, r3
 8303 062a 204B     		ldr	r3, .L380+80
 8304 062c 1A70     		strb	r2, [r3]
 8305              	.LBE45:
2326:main.c        ****         {
 8306              		.loc 1 2326 0 discriminator 2
 8307 062e 3B6B     		ldr	r3, [r7, #48]
 8308 0630 0133     		adds	r3, r3, #1
 8309 0632 3B63     		str	r3, [r7, #48]
 8310              	.L360:
2326:main.c        ****         {
 8311              		.loc 1 2326 0 is_stmt 0 discriminator 1
 8312 0634 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 8313 0636 3B6B     		ldr	r3, [r7, #48]
 8314 0638 9A42     		cmp	r2, r3
 8315 063a BAD8     		bhi	.L361
2333:main.c        ****         }
2334:main.c        ****         
2335:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 8316              		.loc 1 2335 0 is_stmt 1
 8317 063c 1023     		movs	r3, #16
 8318 063e 3B63     		str	r3, [r7, #48]
2336:main.c        **** 
2337:main.c        ****  
2338:main.c        ****         while(i < sysexPointer)
 8319              		.loc 1 2338 0
 8320 0640 D7E0     		b	.L362
 8321              	.L367:
 8322              	.LBB46:
2339:main.c        ****         {
2340:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 8323              		.loc 1 2340 0
 8324 0642 0023     		movs	r3, #0
 8325 0644 FB62     		str	r3, [r7, #44]
 8326 0646 D0E0     		b	.L363
 8327              	.L366:
 8328              	.LBB47:
2341:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 190


2342:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 8329              		.loc 1 2342 0
 8330 0648 FB6A     		ldr	r3, [r7, #44]
 8331 064a 9BB2     		uxth	r3, r3
 8332 064c 1A46     		mov	r2, r3	@ movhi
 8333 064e 5200     		lsls	r2, r2, #1
 8334 0650 1344     		add	r3, r3, r2
 8335 0652 DB00     		lsls	r3, r3, #3
 8336 0654 BB83     		strh	r3, [r7, #28]	@ movhi
 8337              	.LBB48:
2343:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 8338              		.loc 1 2343 0
 8339 0656 0023     		movs	r3, #0
 8340 0658 BB62     		str	r3, [r7, #40]
 8341 065a BFE0     		b	.L364
 8342              	.L381:
 8343              		.align	2
 8344              	.L380:
 8345 065c 000020C0 		.word	-1071644672
 8346 0660 000060C0 		.word	-1067450368
 8347 0664 00000000 		.word	currentFloat
 8348 0668 00000000 		.word	presetArray
 8349 066c 00000000 		.word	presetArraySection
 8350 0670 00000000 		.word	sysexMessageInProgress
 8351 0674 00000000 		.word	sendingMessage
 8352 0678 00000000 		.word	presetNumberToWrite
 8353 067c 00000000 		.word	patchNum
 8354 0680 00000000 		.word	messageArraySize
 8355 0684 00000000 		.word	SPI_errors
 8356 0688 00000000 		.word	sysexPointer
 8357 068c 00000000 		.word	parseThatMF
 8358 0690 00000000 		.word	sysexBuffer
 8359 0694 00000000 		.word	copedentNumberToWrite
 8360 0698 00000000 		.word	currentCopedent
 8361 069c 00000000 		.word	currentNeck
 8362 06a0 00000000 		.word	necks
 8363 06a4 00000000 		.word	copedentNamesArray
 8364 06a8 00000000 		.word	checkBase
 8365 06ac 00000000 		.word	checkStatus
 8366              	.L365:
 8367              	.LBB49:
2344:main.c        ****                 {
2345:main.c        ****                     
2346:main.c        ****                     theVal.u32 = 0;
 8368              		.loc 1 2346 0 discriminator 3
 8369 06b0 0023     		movs	r3, #0
 8370 06b2 7B60     		str	r3, [r7, #4]
2347:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8371              		.loc 1 2347 0 discriminator 3
 8372 06b4 7B68     		ldr	r3, [r7, #4]
 8373 06b6 6249     		ldr	r1, .L382
 8374 06b8 3A6B     		ldr	r2, [r7, #48]
 8375 06ba 0A44     		add	r2, r2, r1
 8376 06bc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8377 06be 1207     		lsls	r2, r2, #28
 8378 06c0 1343     		orrs	r3, r3, r2
 8379 06c2 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 191


2348:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 8380              		.loc 1 2348 0 discriminator 3
 8381 06c4 7B68     		ldr	r3, [r7, #4]
 8382 06c6 3A6B     		ldr	r2, [r7, #48]
 8383 06c8 0132     		adds	r2, r2, #1
 8384 06ca 5D49     		ldr	r1, .L382
 8385 06cc 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8386 06ce 5205     		lsls	r2, r2, #21
 8387 06d0 1343     		orrs	r3, r3, r2
 8388 06d2 7B60     		str	r3, [r7, #4]
2349:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 8389              		.loc 1 2349 0 discriminator 3
 8390 06d4 7B68     		ldr	r3, [r7, #4]
 8391 06d6 3A6B     		ldr	r2, [r7, #48]
 8392 06d8 0232     		adds	r2, r2, #2
 8393 06da 5949     		ldr	r1, .L382
 8394 06dc 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8395 06de 9203     		lsls	r2, r2, #14
 8396 06e0 1343     		orrs	r3, r3, r2
 8397 06e2 7B60     		str	r3, [r7, #4]
2350:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 8398              		.loc 1 2350 0 discriminator 3
 8399 06e4 7B68     		ldr	r3, [r7, #4]
 8400 06e6 3A6B     		ldr	r2, [r7, #48]
 8401 06e8 0332     		adds	r2, r2, #3
 8402 06ea 5549     		ldr	r1, .L382
 8403 06ec 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8404 06ee D201     		lsls	r2, r2, #7
 8405 06f0 1343     		orrs	r3, r3, r2
 8406 06f2 7B60     		str	r3, [r7, #4]
2351:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 8407              		.loc 1 2351 0 discriminator 3
 8408 06f4 7A68     		ldr	r2, [r7, #4]
 8409 06f6 3B6B     		ldr	r3, [r7, #48]
 8410 06f8 0433     		adds	r3, r3, #4
 8411 06fa 5149     		ldr	r1, .L382
 8412 06fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8413 06fe 03F07F03 		and	r3, r3, #127
 8414 0702 1343     		orrs	r3, r3, r2
 8415 0704 7B60     		str	r3, [r7, #4]
2352:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 8416              		.loc 1 2352 0 discriminator 3
 8417 0706 4F4B     		ldr	r3, .L382+4
 8418 0708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8419 070a 1C46     		mov	r4, r3
 8420 070c 7968     		ldr	r1, [r7, #4]	@ float
 8421 070e 4E48     		ldr	r0, .L382+8
 8422 0710 FB6A     		ldr	r3, [r7, #44]
 8423 0712 1A46     		mov	r2, r3
 8424 0714 5200     		lsls	r2, r2, #1
 8425 0716 1A44     		add	r2, r2, r3
 8426 0718 9300     		lsls	r3, r2, #2
 8427 071a 1A46     		mov	r2, r3
 8428 071c 2346     		mov	r3, r4
 8429 071e 5B01     		lsls	r3, r3, #5
 8430 0720 2344     		add	r3, r3, r4
 8431 0722 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 192


 8432 0724 1A44     		add	r2, r2, r3
 8433 0726 BB6A     		ldr	r3, [r7, #40]
 8434 0728 1344     		add	r3, r3, r2
 8435 072a 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2353:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 8436              		.loc 1 2353 0 discriminator 3
 8437 072e 7B68     		ldr	r3, [r7, #4]	@ float
 8438 0730 4FF08741 		mov	r1, #1132462080
 8439 0734 1846     		mov	r0, r3
 8440 0736 FFF7FEFF 		bl	__aeabi_fmul
 8441 073a 0346     		mov	r3, r0
 8442 073c 4FF08E41 		mov	r1, #1191182336
 8443 0740 1846     		mov	r0, r3
 8444 0742 FFF7FEFF 		bl	__aeabi_fadd
 8445 0746 0346     		mov	r3, r0
 8446 0748 1846     		mov	r0, r3
 8447 074a FFF7FEFF 		bl	__aeabi_f2uiz
 8448 074e 0346     		mov	r3, r0
 8449 0750 7B83     		strh	r3, [r7, #26]	@ movhi
2354:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 8450              		.loc 1 2354 0 discriminator 3
 8451 0752 7B8B     		ldrh	r3, [r7, #26]
 8452 0754 1B0A     		lsrs	r3, r3, #8
 8453 0756 9BB2     		uxth	r3, r3
 8454 0758 7B76     		strb	r3, [r7, #25]
2355:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 8455              		.loc 1 2355 0 discriminator 3
 8456 075a 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 8457 075c 3B76     		strb	r3, [r7, #24]
2356:main.c        ****                     
2357:main.c        ****                     
2358:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 8458              		.loc 1 2358 0 discriminator 3
 8459 075e BB6A     		ldr	r3, [r7, #40]
 8460 0760 9BB2     		uxth	r3, r3
 8461 0762 5B00     		lsls	r3, r3, #1
 8462 0764 FB82     		strh	r3, [r7, #22]	@ movhi
2359:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 8463              		.loc 1 2359 0 discriminator 3
 8464 0766 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 8465 0768 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 8466 076a 1344     		add	r3, r3, r2
 8467 076c 9AB2     		uxth	r2, r3
 8468 076e 354B     		ldr	r3, .L382+4
 8469 0770 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8470 0772 9BB2     		uxth	r3, r3
 8471 0774 1946     		mov	r1, r3	@ movhi
 8472 0776 0901     		lsls	r1, r1, #4
 8473 0778 1944     		add	r1, r1, r3
 8474 077a 8900     		lsls	r1, r1, #2
 8475 077c 1944     		add	r1, r1, r3
 8476 077e 4900     		lsls	r1, r1, #1
 8477 0780 0B44     		add	r3, r3, r1
 8478 0782 5B00     		lsls	r3, r3, #1
 8479 0784 9BB2     		uxth	r3, r3
 8480 0786 1344     		add	r3, r3, r2
 8481 0788 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 193


 8482 078a 1033     		adds	r3, r3, #16
 8483 078c 9AB2     		uxth	r2, r3
 8484 078e 2F4B     		ldr	r3, .L382+12
 8485 0790 1A80     		strh	r2, [r3]	@ movhi
2360:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 8486              		.loc 1 2360 0 discriminator 3
 8487 0792 2E4B     		ldr	r3, .L382+12
 8488 0794 1B88     		ldrh	r3, [r3]	@ movhi
 8489 0796 9AB2     		uxth	r2, r3
 8490 0798 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 8491 079a 1146     		mov	r1, r2
 8492 079c 1846     		mov	r0, r3
 8493 079e FFF7FEFF 		bl	EEPROM_WriteByte
 8494 07a2 0346     		mov	r3, r0
 8495 07a4 DAB2     		uxtb	r2, r3
 8496 07a6 2A4B     		ldr	r3, .L382+16
 8497 07a8 1A70     		strb	r2, [r3]
2361:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 8498              		.loc 1 2361 0 discriminator 3
 8499 07aa 284B     		ldr	r3, .L382+12
 8500 07ac 1B88     		ldrh	r3, [r3]	@ movhi
 8501 07ae 9BB2     		uxth	r3, r3
 8502 07b0 0133     		adds	r3, r3, #1
 8503 07b2 9AB2     		uxth	r2, r3
 8504 07b4 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 8505 07b6 1146     		mov	r1, r2
 8506 07b8 1846     		mov	r0, r3
 8507 07ba FFF7FEFF 		bl	EEPROM_WriteByte
 8508 07be 0346     		mov	r3, r0
 8509 07c0 DAB2     		uxtb	r2, r3
 8510 07c2 234B     		ldr	r3, .L382+16
 8511 07c4 1A70     		strb	r2, [r3]
2362:main.c        ****                     currentFloat++;
 8512              		.loc 1 2362 0 discriminator 3
 8513 07c6 234B     		ldr	r3, .L382+20
 8514 07c8 1B68     		ldr	r3, [r3]
 8515 07ca 0133     		adds	r3, r3, #1
 8516 07cc 214A     		ldr	r2, .L382+20
 8517 07ce 1360     		str	r3, [r2]
2363:main.c        ****                     i = i+5;
 8518              		.loc 1 2363 0 discriminator 3
 8519 07d0 3B6B     		ldr	r3, [r7, #48]
 8520 07d2 0533     		adds	r3, r3, #5
 8521 07d4 3B63     		str	r3, [r7, #48]
 8522              	.LBE49:
2343:main.c        ****                 {
 8523              		.loc 1 2343 0 discriminator 3
 8524 07d6 BB6A     		ldr	r3, [r7, #40]
 8525 07d8 0133     		adds	r3, r3, #1
 8526 07da BB62     		str	r3, [r7, #40]
 8527              	.L364:
2343:main.c        ****                 {
 8528              		.loc 1 2343 0 is_stmt 0 discriminator 1
 8529 07dc BB6A     		ldr	r3, [r7, #40]
 8530 07de 0B2B     		cmp	r3, #11
 8531 07e0 7FF666AF 		bls	.L365
 8532              	.LBE48:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 194


 8533              	.LBE47:
2340:main.c        ****             {
 8534              		.loc 1 2340 0 is_stmt 1 discriminator 2
 8535 07e4 FB6A     		ldr	r3, [r7, #44]
 8536 07e6 0133     		adds	r3, r3, #1
 8537 07e8 FB62     		str	r3, [r7, #44]
 8538              	.L363:
2340:main.c        ****             {
 8539              		.loc 1 2340 0 is_stmt 0 discriminator 1
 8540 07ea FB6A     		ldr	r3, [r7, #44]
 8541 07ec 0A2B     		cmp	r3, #10
 8542 07ee 7FF62BAF 		bls	.L366
 8543              	.L362:
 8544              	.LBE46:
2338:main.c        ****         {
 8545              		.loc 1 2338 0 is_stmt 1
 8546 07f2 194B     		ldr	r3, .L382+24
 8547 07f4 1B68     		ldr	r3, [r3]
 8548 07f6 3A6B     		ldr	r2, [r7, #48]
 8549 07f8 9A42     		cmp	r2, r3
 8550 07fa FFF422AF 		bcc	.L367
2364:main.c        ****                 }
2365:main.c        ****                 
2366:main.c        ****             }
2367:main.c        ****         }
2368:main.c        ****                         
2369:main.c        ****         
2370:main.c        ****         messageArraySize = currentFloat;
 8551              		.loc 1 2370 0
 8552 07fe 154B     		ldr	r3, .L382+20
 8553 0800 1B68     		ldr	r3, [r3]
 8554 0802 9AB2     		uxth	r2, r3
 8555 0804 154B     		ldr	r3, .L382+28
 8556 0806 1A80     		strh	r2, [r3]	@ movhi
2371:main.c        ****                     
2372:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 8557              		.loc 1 2372 0
 8558 0808 144B     		ldr	r3, .L382+28
 8559 080a 1B88     		ldrh	r3, [r3]
 8560 080c 842B     		cmp	r3, #132
 8561 080e 11D0     		beq	.L368
2373:main.c        ****         {
2374:main.c        ****             //error state
2375:main.c        ****             SPI_errors++;
 8562              		.loc 1 2375 0
 8563 0810 134B     		ldr	r3, .L382+32
 8564 0812 1B68     		ldr	r3, [r3]
 8565 0814 0133     		adds	r3, r3, #1
 8566 0816 124A     		ldr	r2, .L382+32
 8567 0818 1360     		str	r3, [r2]
2376:main.c        ****             sysexMessageInProgress = 0;
 8568              		.loc 1 2376 0
 8569 081a 124B     		ldr	r3, .L382+36
 8570 081c 0022     		movs	r2, #0
 8571 081e 1A70     		strb	r2, [r3]
2377:main.c        ****             sysexPointer = 0;
 8572              		.loc 1 2377 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 195


 8573 0820 0D4B     		ldr	r3, .L382+24
 8574 0822 0022     		movs	r2, #0
 8575 0824 1A60     		str	r2, [r3]
2378:main.c        ****             sendingMessage = 0;
 8576              		.loc 1 2378 0
 8577 0826 104B     		ldr	r3, .L382+40
 8578 0828 0022     		movs	r2, #0
 8579 082a 1A70     		strb	r2, [r3]
2379:main.c        ****             parseThatMF = 0;
 8580              		.loc 1 2379 0
 8581 082c 0F4B     		ldr	r3, .L382+44
 8582 082e 0022     		movs	r2, #0
 8583 0830 1A70     		strb	r2, [r3]
 8584 0832 ACE0     		b	.L358
 8585              	.L368:
2380:main.c        ****         } 
2381:main.c        ****         else 
2382:main.c        ****         {
2383:main.c        ****             sysexMessageInProgress = 0;
 8586              		.loc 1 2383 0
 8587 0834 0B4B     		ldr	r3, .L382+36
 8588 0836 0022     		movs	r2, #0
 8589 0838 1A70     		strb	r2, [r3]
2384:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2385:main.c        ****             
2386:main.c        ****             displayCurrentPresetNameAndCopedent();
 8590              		.loc 1 2386 0
 8591 083a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 8592 083e A6E0     		b	.L358
 8593              	.L383:
 8594              		.align	2
 8595              	.L382:
 8596 0840 00000000 		.word	sysexBuffer
 8597 0844 00000000 		.word	copedentNumberToWrite
 8598 0848 00000000 		.word	copedent
 8599 084c 00000000 		.word	checkBase
 8600 0850 00000000 		.word	checkStatus
 8601 0854 00000000 		.word	currentFloat
 8602 0858 00000000 		.word	sysexPointer
 8603 085c 00000000 		.word	messageArraySize
 8604 0860 00000000 		.word	SPI_errors
 8605 0864 00000000 		.word	sysexMessageInProgress
 8606 0868 00000000 		.word	sendingMessage
 8607 086c 00000000 		.word	parseThatMF
 8608              	.L359:
 8609              	.LBE44:
2387:main.c        ****         }
2388:main.c        ****     }
2389:main.c        ****     
2390:main.c        ****     
2391:main.c        ****     else if (sysexBuffer[0] == 3) //it's a real-time parameter change
 8610              		.loc 1 2391 0
 8611 0870 4D4B     		ldr	r3, .L384
 8612 0872 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8613 0874 032B     		cmp	r3, #3
 8614 0876 40F08A80 		bne	.L358
 8615              	.LBB50:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 196


2392:main.c        ****     {
2393:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8616              		.loc 1 2393 0
 8617 087a 4C4B     		ldr	r3, .L384+4
 8618 087c 0122     		movs	r2, #1
 8619 087e 1A70     		strb	r2, [r3]
2394:main.c        ****         union breakFloat theVal;
2395:main.c        ****         uint32_t i = 2;
 8620              		.loc 1 2395 0
 8621 0880 0223     		movs	r3, #2
 8622 0882 3B61     		str	r3, [r7, #16]
2396:main.c        ****         
2397:main.c        ****         //get the parameter ID
2398:main.c        ****         theVal.u32 = 0;
 8623              		.loc 1 2398 0
 8624 0884 0023     		movs	r3, #0
 8625 0886 3B60     		str	r3, [r7]
2399:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8626              		.loc 1 2399 0
 8627 0888 3B68     		ldr	r3, [r7]
 8628 088a 4749     		ldr	r1, .L384
 8629 088c 3A69     		ldr	r2, [r7, #16]
 8630 088e 0A44     		add	r2, r2, r1
 8631 0890 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8632 0892 1207     		lsls	r2, r2, #28
 8633 0894 1343     		orrs	r3, r3, r2
 8634 0896 3B60     		str	r3, [r7]
2400:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8635              		.loc 1 2400 0
 8636 0898 3B68     		ldr	r3, [r7]
 8637 089a 3A69     		ldr	r2, [r7, #16]
 8638 089c 0132     		adds	r2, r2, #1
 8639 089e 4249     		ldr	r1, .L384
 8640 08a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8641 08a2 5205     		lsls	r2, r2, #21
 8642 08a4 1343     		orrs	r3, r3, r2
 8643 08a6 3B60     		str	r3, [r7]
2401:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8644              		.loc 1 2401 0
 8645 08a8 3B68     		ldr	r3, [r7]
 8646 08aa 3A69     		ldr	r2, [r7, #16]
 8647 08ac 0232     		adds	r2, r2, #2
 8648 08ae 3E49     		ldr	r1, .L384
 8649 08b0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8650 08b2 9203     		lsls	r2, r2, #14
 8651 08b4 1343     		orrs	r3, r3, r2
 8652 08b6 3B60     		str	r3, [r7]
2402:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8653              		.loc 1 2402 0
 8654 08b8 3B68     		ldr	r3, [r7]
 8655 08ba 3A69     		ldr	r2, [r7, #16]
 8656 08bc 0332     		adds	r2, r2, #3
 8657 08be 3A49     		ldr	r1, .L384
 8658 08c0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8659 08c2 D201     		lsls	r2, r2, #7
 8660 08c4 1343     		orrs	r3, r3, r2
 8661 08c6 3B60     		str	r3, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 197


2403:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8662              		.loc 1 2403 0
 8663 08c8 3A68     		ldr	r2, [r7]
 8664 08ca 3B69     		ldr	r3, [r7, #16]
 8665 08cc 0433     		adds	r3, r3, #4
 8666 08ce 3649     		ldr	r1, .L384
 8667 08d0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8668 08d2 03F07F03 		and	r3, r3, #127
 8669 08d6 1343     		orrs	r3, r3, r2
 8670 08d8 3B60     		str	r3, [r7]
2404:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 8671              		.loc 1 2404 0
 8672 08da 3B68     		ldr	r3, [r7]	@ float
 8673 08dc 1846     		mov	r0, r3
 8674 08de FFF7FEFF 		bl	roundf
 8675 08e2 0346     		mov	r3, r0
 8676 08e4 1846     		mov	r0, r3
 8677 08e6 FFF7FEFF 		bl	__aeabi_f2uiz
 8678 08ea 0346     		mov	r3, r0
 8679 08ec FB81     		strh	r3, [r7, #14]	@ movhi
2405:main.c        ****         singleParamToUpdateHigh = (roundedIndex << 8);
 8680              		.loc 1 2405 0
 8681 08ee 304B     		ldr	r3, .L384+8
 8682 08f0 0022     		movs	r2, #0
 8683 08f2 1A70     		strb	r2, [r3]
2406:main.c        ****         singleParamToUpdateLow = roundedIndex & 0xff;
 8684              		.loc 1 2406 0
 8685 08f4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8686 08f6 DAB2     		uxtb	r2, r3
 8687 08f8 2E4B     		ldr	r3, .L384+12
 8688 08fa 1A70     		strb	r2, [r3]
2407:main.c        ****         
2408:main.c        ****         i = i+5;
 8689              		.loc 1 2408 0
 8690 08fc 3B69     		ldr	r3, [r7, #16]
 8691 08fe 0533     		adds	r3, r3, #5
 8692 0900 3B61     		str	r3, [r7, #16]
2409:main.c        ****         
2410:main.c        ****         //get the parameter value
2411:main.c        ****         theVal.u32 = 0;
 8693              		.loc 1 2411 0
 8694 0902 0023     		movs	r3, #0
 8695 0904 3B60     		str	r3, [r7]
2412:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8696              		.loc 1 2412 0
 8697 0906 3B68     		ldr	r3, [r7]
 8698 0908 2749     		ldr	r1, .L384
 8699 090a 3A69     		ldr	r2, [r7, #16]
 8700 090c 0A44     		add	r2, r2, r1
 8701 090e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8702 0910 1207     		lsls	r2, r2, #28
 8703 0912 1343     		orrs	r3, r3, r2
 8704 0914 3B60     		str	r3, [r7]
2413:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8705              		.loc 1 2413 0
 8706 0916 3B68     		ldr	r3, [r7]
 8707 0918 3A69     		ldr	r2, [r7, #16]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 198


 8708 091a 0132     		adds	r2, r2, #1
 8709 091c 2249     		ldr	r1, .L384
 8710 091e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8711 0920 5205     		lsls	r2, r2, #21
 8712 0922 1343     		orrs	r3, r3, r2
 8713 0924 3B60     		str	r3, [r7]
2414:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8714              		.loc 1 2414 0
 8715 0926 3B68     		ldr	r3, [r7]
 8716 0928 3A69     		ldr	r2, [r7, #16]
 8717 092a 0232     		adds	r2, r2, #2
 8718 092c 1E49     		ldr	r1, .L384
 8719 092e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8720 0930 9203     		lsls	r2, r2, #14
 8721 0932 1343     		orrs	r3, r3, r2
 8722 0934 3B60     		str	r3, [r7]
2415:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8723              		.loc 1 2415 0
 8724 0936 3B68     		ldr	r3, [r7]
 8725 0938 3A69     		ldr	r2, [r7, #16]
 8726 093a 0332     		adds	r2, r2, #3
 8727 093c 1A49     		ldr	r1, .L384
 8728 093e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8729 0940 D201     		lsls	r2, r2, #7
 8730 0942 1343     		orrs	r3, r3, r2
 8731 0944 3B60     		str	r3, [r7]
2416:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 8732              		.loc 1 2416 0
 8733 0946 3A68     		ldr	r2, [r7]
 8734 0948 3B69     		ldr	r3, [r7, #16]
 8735 094a 0433     		adds	r3, r3, #4
 8736 094c 1649     		ldr	r1, .L384
 8737 094e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8738 0950 03F07F03 		and	r3, r3, #127
 8739 0954 1343     		orrs	r3, r3, r2
 8740 0956 3B60     		str	r3, [r7]
2417:main.c        ****         
2418:main.c        ****         uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 8741              		.loc 1 2418 0
 8742 0958 3B68     		ldr	r3, [r7]	@ float
 8743 095a 1749     		ldr	r1, .L384+16
 8744 095c 1846     		mov	r0, r3
 8745 095e FFF7FEFF 		bl	__aeabi_fmul
 8746 0962 0346     		mov	r3, r0
 8747 0964 1846     		mov	r0, r3
 8748 0966 FFF7FEFF 		bl	__aeabi_f2uiz
 8749 096a 0346     		mov	r3, r0
 8750 096c BB81     		strh	r3, [r7, #12]	@ movhi
2419:main.c        ****         singleParamValueHigh = intVal >> 8;
 8751              		.loc 1 2419 0
 8752 096e BB89     		ldrh	r3, [r7, #12]
 8753 0970 1B0A     		lsrs	r3, r3, #8
 8754 0972 9BB2     		uxth	r3, r3
 8755 0974 DAB2     		uxtb	r2, r3
 8756 0976 114B     		ldr	r3, .L384+20
 8757 0978 1A70     		strb	r2, [r3]
2420:main.c        ****         singleParamValueLow = intVal & 0xff;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 199


 8758              		.loc 1 2420 0
 8759 097a BB89     		ldrh	r3, [r7, #12]	@ movhi
 8760 097c DAB2     		uxtb	r2, r3
 8761 097e 104B     		ldr	r3, .L384+24
 8762 0980 1A70     		strb	r2, [r3]
2421:main.c        ****         
2422:main.c        ****         sysexMessageInProgress = 0;
 8763              		.loc 1 2422 0
 8764 0982 0A4B     		ldr	r3, .L384+4
 8765 0984 0022     		movs	r2, #0
 8766 0986 1A70     		strb	r2, [r3]
2423:main.c        ****         sendSingleParamUpdate = 1;
 8767              		.loc 1 2423 0
 8768 0988 0E4B     		ldr	r3, .L384+28
 8769 098a 0122     		movs	r2, #1
 8770 098c 1A70     		strb	r2, [r3]
 8771              	.L358:
 8772              	.LBE50:
2424:main.c        ****     }
2425:main.c        **** 
2426:main.c        ****     parsingSysex = 0;
 8773              		.loc 1 2426 0
 8774 098e 0E4B     		ldr	r3, .L384+32
 8775 0990 0022     		movs	r2, #0
 8776 0992 1A70     		strb	r2, [r3]
2427:main.c        ****     sysexPointer = 0;
 8777              		.loc 1 2427 0
 8778 0994 0D4B     		ldr	r3, .L384+36
 8779 0996 0022     		movs	r2, #0
 8780 0998 1A60     		str	r2, [r3]
2428:main.c        ****     parseThatMF = 0;
 8781              		.loc 1 2428 0
 8782 099a 0D4B     		ldr	r3, .L384+40
 8783 099c 0022     		movs	r2, #0
 8784 099e 1A70     		strb	r2, [r3]
2429:main.c        **** }
 8785              		.loc 1 2429 0
 8786 09a0 00BF     		nop
 8787 09a2 4437     		adds	r7, r7, #68
 8788              		.cfi_def_cfa_offset 12
 8789 09a4 BD46     		mov	sp, r7
 8790              		.cfi_def_cfa_register 13
 8791              		@ sp needed
 8792 09a6 90BD     		pop	{r4, r7, pc}
 8793              	.L385:
 8794              		.align	2
 8795              	.L384:
 8796 09a8 00000000 		.word	sysexBuffer
 8797 09ac 00000000 		.word	sysexMessageInProgress
 8798 09b0 00000000 		.word	singleParamToUpdateHigh
 8799 09b4 00000000 		.word	singleParamToUpdateLow
 8800 09b8 00FF7F47 		.word	1199570688
 8801 09bc 00000000 		.word	singleParamValueHigh
 8802 09c0 00000000 		.word	singleParamValueLow
 8803 09c4 00000000 		.word	sendSingleParamUpdate
 8804 09c8 00000000 		.word	parsingSysex
 8805 09cc 00000000 		.word	sysexPointer
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 200


 8806 09d0 00000000 		.word	parseThatMF
 8807              		.cfi_endproc
 8808              	.LFE92:
 8809              		.size	parseSysex, .-parseSysex
 8810              		.comm	tempMIDI,4,4
 8811              		.global	firstSysex
 8812              		.bss
 8813              		.type	firstSysex, %object
 8814              		.size	firstSysex, 1
 8815              	firstSysex:
 8816 0110 00       		.space	1
 8817              		.global	sysexPointerMask
 8818              		.section	.rodata
 8819              		.align	1
 8820              		.type	sysexPointerMask, %object
 8821              		.size	sysexPointerMask, 2
 8822              	sysexPointerMask:
 8823 0432 FF07     		.short	2047
 8824              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 8825              		.align	2
 8826              		.global	USB_callbackLocalMidiEvent
 8827              		.thumb
 8828              		.thumb_func
 8829              		.type	USB_callbackLocalMidiEvent, %function
 8830              	USB_callbackLocalMidiEvent:
 8831              	.LFB93:
2430:main.c        **** 
2431:main.c        **** volatile uint8_t tempMIDI[4];
2432:main.c        **** volatile uint8_t firstSysex = 0;
2433:main.c        **** const uint16_t sysexPointerMask = 2047;
2434:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2435:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2436:main.c        **** {   
 8832              		.loc 1 2436 0
 8833              		.cfi_startproc
 8834              		@ args = 0, pretend = 0, frame = 16
 8835              		@ frame_needed = 1, uses_anonymous_args = 0
 8836 0000 80B5     		push	{r7, lr}
 8837              		.cfi_def_cfa_offset 8
 8838              		.cfi_offset 7, -8
 8839              		.cfi_offset 14, -4
 8840 0002 84B0     		sub	sp, sp, #16
 8841              		.cfi_def_cfa_offset 24
 8842 0004 00AF     		add	r7, sp, #0
 8843              		.cfi_def_cfa_register 7
 8844 0006 0346     		mov	r3, r0
 8845 0008 3960     		str	r1, [r7]
 8846 000a FB71     		strb	r3, [r7, #7]
2437:main.c        ****     tempMIDI[0] = midiMsg[0];
 8847              		.loc 1 2437 0
 8848 000c 3B68     		ldr	r3, [r7]
 8849 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8850 0010 464B     		ldr	r3, .L396
 8851 0012 1A70     		strb	r2, [r3]
2438:main.c        ****     tempMIDI[1] = midiMsg[1];
 8852              		.loc 1 2438 0
 8853 0014 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 201


 8854 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8855 0018 444B     		ldr	r3, .L396
 8856 001a 5A70     		strb	r2, [r3, #1]
2439:main.c        ****      tempMIDI[2] = midiMsg[2];
 8857              		.loc 1 2439 0
 8858 001c 3B68     		ldr	r3, [r7]
 8859 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 8860 0020 424B     		ldr	r3, .L396
 8861 0022 9A70     		strb	r2, [r3, #2]
2440:main.c        ****      tempMIDI[3] = midiMsg[3];
 8862              		.loc 1 2440 0
 8863 0024 3B68     		ldr	r3, [r7]
 8864 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 8865 0028 404B     		ldr	r3, .L396
 8866 002a DA70     		strb	r2, [r3, #3]
2441:main.c        ****     //check that we got here
2442:main.c        ****     
2443:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 8867              		.loc 1 2443 0
 8868 002c 404B     		ldr	r3, .L396+4
 8869 002e 1B78     		ldrb	r3, [r3]
 8870 0030 DBB2     		uxtb	r3, r3
 8871 0032 002B     		cmp	r3, #0
 8872 0034 76D0     		beq	.L386
 8873              		.loc 1 2443 0 is_stmt 0 discriminator 1
 8874 0036 FFF7FEFF 		bl	USB_VBusPresent
 8875 003a 0346     		mov	r3, r0
 8876 003c 002B     		cmp	r3, #0
 8877 003e 71D0     		beq	.L386
2444:main.c        ****     {
2445:main.c        ****         if (receivingSysex)
 8878              		.loc 1 2445 0 is_stmt 1
 8879 0040 3C4B     		ldr	r3, .L396+8
 8880 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8881 0044 002B     		cmp	r3, #0
 8882 0046 29D0     		beq	.L388
 8883              	.LBB51:
2446:main.c        ****         {
2447:main.c        ****             for (int i = 0; i < 3; i++)
 8884              		.loc 1 2447 0
 8885 0048 0023     		movs	r3, #0
 8886 004a FB60     		str	r3, [r7, #12]
 8887 004c 22E0     		b	.L389
 8888              	.L392:
2448:main.c        ****             {
2449:main.c        ****                 if (midiMsg[i] < 128)
 8889              		.loc 1 2449 0
 8890 004e FB68     		ldr	r3, [r7, #12]
 8891 0050 3A68     		ldr	r2, [r7]
 8892 0052 1344     		add	r3, r3, r2
 8893 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8894 0056 5BB2     		sxtb	r3, r3
 8895 0058 002B     		cmp	r3, #0
 8896 005a 0EDB     		blt	.L390
2450:main.c        ****                 {
2451:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 8897              		.loc 1 2451 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 202


 8898 005c 364B     		ldr	r3, .L396+12
 8899 005e 1B68     		ldr	r3, [r3]
 8900 0060 5A1C     		adds	r2, r3, #1
 8901 0062 3549     		ldr	r1, .L396+12
 8902 0064 0A60     		str	r2, [r1]
 8903 0066 40F2FF72 		movw	r2, #2047
 8904 006a 1340     		ands	r3, r3, r2
 8905 006c FA68     		ldr	r2, [r7, #12]
 8906 006e 3968     		ldr	r1, [r7]
 8907 0070 0A44     		add	r2, r2, r1
 8908 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 8909 0074 314A     		ldr	r2, .L396+16
 8910 0076 D154     		strb	r1, [r2, r3]
 8911 0078 09E0     		b	.L391
 8912              	.L390:
2452:main.c        ****                 }
2453:main.c        ****                 else
2454:main.c        ****                 {
2455:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 8913              		.loc 1 2455 0
 8914 007a FB68     		ldr	r3, [r7, #12]
 8915 007c 3A68     		ldr	r2, [r7]
 8916 007e 1344     		add	r3, r3, r2
 8917 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8918 0082 F72B     		cmp	r3, #247
 8919 0084 03D1     		bne	.L391
2456:main.c        ****                     {
2457:main.c        ****                         receivingSysex = 0;
 8920              		.loc 1 2457 0
 8921 0086 2B4B     		ldr	r3, .L396+8
 8922 0088 0022     		movs	r2, #0
 8923 008a 1A70     		strb	r2, [r3]
2458:main.c        ****                         //parseSysex();
2459:main.c        ****                         return;
 8924              		.loc 1 2459 0
 8925 008c 4AE0     		b	.L386
 8926              	.L391:
2447:main.c        ****             {
 8927              		.loc 1 2447 0 discriminator 2
 8928 008e FB68     		ldr	r3, [r7, #12]
 8929 0090 0133     		adds	r3, r3, #1
 8930 0092 FB60     		str	r3, [r7, #12]
 8931              	.L389:
2447:main.c        ****             {
 8932              		.loc 1 2447 0 is_stmt 0 discriminator 1
 8933 0094 FB68     		ldr	r3, [r7, #12]
 8934 0096 022B     		cmp	r3, #2
 8935 0098 D9DD     		ble	.L392
 8936 009a 43E0     		b	.L386
 8937              	.L388:
 8938              	.LBE51:
2460:main.c        ****                      }
2461:main.c        ****                 }
2462:main.c        ****             }
2463:main.c        ****         }
2464:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 8939              		.loc 1 2464 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 203


 8940 009c 3B68     		ldr	r3, [r7]
 8941 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8942 00a0 F02B     		cmp	r3, #240
 8943 00a2 3FD1     		bne	.L386
2465:main.c        ****         {
2466:main.c        ****             if (!parsingSysex)
 8944              		.loc 1 2466 0
 8945 00a4 264B     		ldr	r3, .L396+20
 8946 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8947 00a8 002B     		cmp	r3, #0
 8948 00aa 3BD1     		bne	.L386
2467:main.c        ****             {
2468:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 8949              		.loc 1 2468 0
 8950 00ac 3B68     		ldr	r3, [r7]
 8951 00ae 0133     		adds	r3, r3, #1
 8952 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8953 00b2 7E2B     		cmp	r3, #126
 8954 00b4 03D1     		bne	.L394
2469:main.c        ****                 {
2470:main.c        ****                     parseThatMF = 1;
 8955              		.loc 1 2470 0
 8956 00b6 234B     		ldr	r3, .L396+24
 8957 00b8 0122     		movs	r2, #1
 8958 00ba 1A70     		strb	r2, [r3]
 8959 00bc 32E0     		b	.L386
 8960              	.L394:
2471:main.c        **** 
2472:main.c        ****                     //sysexPointer = 0;
2473:main.c        ****                 }
2474:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2 || midiMsg[1] == 3)
 8961              		.loc 1 2474 0
 8962 00be 3B68     		ldr	r3, [r7]
 8963 00c0 0133     		adds	r3, r3, #1
 8964 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8965 00c4 002B     		cmp	r3, #0
 8966 00c6 0ED0     		beq	.L395
 8967              		.loc 1 2474 0 is_stmt 0 discriminator 1
 8968 00c8 3B68     		ldr	r3, [r7]
 8969 00ca 0133     		adds	r3, r3, #1
 8970 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8971 00ce 012B     		cmp	r3, #1
 8972 00d0 09D0     		beq	.L395
 8973              		.loc 1 2474 0 discriminator 2
 8974 00d2 3B68     		ldr	r3, [r7]
 8975 00d4 0133     		adds	r3, r3, #1
 8976 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8977 00d8 022B     		cmp	r3, #2
 8978 00da 04D0     		beq	.L395
 8979              		.loc 1 2474 0 discriminator 3
 8980 00dc 3B68     		ldr	r3, [r7]
 8981 00de 0133     		adds	r3, r3, #1
 8982 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8983 00e2 032B     		cmp	r3, #3
 8984 00e4 1ED1     		bne	.L386
 8985              	.L395:
2475:main.c        ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 204


2476:main.c        ****                     receivingSysex = 1;
 8986              		.loc 1 2476 0 is_stmt 1
 8987 00e6 134B     		ldr	r3, .L396+8
 8988 00e8 0122     		movs	r2, #1
 8989 00ea 1A70     		strb	r2, [r3]
2477:main.c        ****                     
2478:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2479:main.c        ****                     if (sysexPointer == 0)
 8990              		.loc 1 2479 0
 8991 00ec 124B     		ldr	r3, .L396+12
 8992 00ee 1B68     		ldr	r3, [r3]
 8993 00f0 002B     		cmp	r3, #0
 8994 00f2 17D1     		bne	.L386
2480:main.c        ****                     {
2481:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 8995              		.loc 1 2481 0
 8996 00f4 104B     		ldr	r3, .L396+12
 8997 00f6 1B68     		ldr	r3, [r3]
 8998 00f8 5A1C     		adds	r2, r3, #1
 8999 00fa 0F49     		ldr	r1, .L396+12
 9000 00fc 0A60     		str	r2, [r1]
 9001 00fe 40F2FF72 		movw	r2, #2047
 9002 0102 1340     		ands	r3, r3, r2
 9003 0104 3A68     		ldr	r2, [r7]
 9004 0106 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 9005 0108 0C4A     		ldr	r2, .L396+16
 9006 010a D154     		strb	r1, [r2, r3]
2482:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 9007              		.loc 1 2482 0
 9008 010c 0A4B     		ldr	r3, .L396+12
 9009 010e 1B68     		ldr	r3, [r3]
 9010 0110 5A1C     		adds	r2, r3, #1
 9011 0112 0949     		ldr	r1, .L396+12
 9012 0114 0A60     		str	r2, [r1]
 9013 0116 40F2FF72 		movw	r2, #2047
 9014 011a 1340     		ands	r3, r3, r2
 9015 011c 3A68     		ldr	r2, [r7]
 9016 011e 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 9017 0120 064A     		ldr	r2, .L396+16
 9018 0122 D154     		strb	r1, [r2, r3]
 9019              	.L386:
2483:main.c        ****                     }
2484:main.c        ****                 }
2485:main.c        ****             }
2486:main.c        ****         }
2487:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2488:main.c        ****     }
2489:main.c        **** }    
 9020              		.loc 1 2489 0
 9021 0124 1037     		adds	r7, r7, #16
 9022              		.cfi_def_cfa_offset 8
 9023 0126 BD46     		mov	sp, r7
 9024              		.cfi_def_cfa_register 13
 9025              		@ sp needed
 9026 0128 80BD     		pop	{r7, pc}
 9027              	.L397:
 9028 012a 00BF     		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 205


 9029              	.L396:
 9030 012c 00000000 		.word	tempMIDI
 9031 0130 00000000 		.word	USB_active
 9032 0134 00000000 		.word	receivingSysex
 9033 0138 00000000 		.word	sysexPointer
 9034 013c 00000000 		.word	sysexBuffer
 9035 0140 00000000 		.word	parsingSysex
 9036 0144 00000000 		.word	parseThatMF
 9037              		.cfi_endproc
 9038              	.LFE93:
 9039              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 9040              		.text
 9041              	.Letext0:
 9042              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9043              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9044              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 9045              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 9046              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9047              		.file 7 "oled.h"
 9048              		.file 8 "Generated_Source\\PSoC5/USB_midi.h"
 9049              		.file 9 "Generated_Source\\PSoC5/Em_EEPROM.h"
 9050              		.file 10 "Generated_Source\\PSoC5/I2C_1.h"
 9051              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 9052              		.section	.debug_info,"",%progbits
 9053              	.Ldebug_info0:
 9054 0000 451D0000 		.4byte	0x1d45
 9055 0004 0400     		.2byte	0x4
 9056 0006 00000000 		.4byte	.Ldebug_abbrev0
 9057 000a 04       		.byte	0x4
 9058 000b 01       		.uleb128 0x1
 9059 000c E8080000 		.4byte	.LASF314
 9060 0010 0C       		.byte	0xc
 9061 0011 5B0A0000 		.4byte	.LASF315
 9062 0015 10070000 		.4byte	.LASF316
 9063 0019 00000000 		.4byte	.Ldebug_ranges0+0
 9064 001d 00000000 		.4byte	0
 9065 0021 00000000 		.4byte	.Ldebug_line0
 9066 0025 02       		.uleb128 0x2
 9067 0026 01       		.byte	0x1
 9068 0027 06       		.byte	0x6
 9069 0028 6E030000 		.4byte	.LASF0
 9070 002c 03       		.uleb128 0x3
 9071 002d 12020000 		.4byte	.LASF2
 9072 0031 02       		.byte	0x2
 9073 0032 1D       		.byte	0x1d
 9074 0033 37000000 		.4byte	0x37
 9075 0037 02       		.uleb128 0x2
 9076 0038 01       		.byte	0x1
 9077 0039 08       		.byte	0x8
 9078 003a F5030000 		.4byte	.LASF1
 9079 003e 03       		.uleb128 0x3
 9080 003f A30D0000 		.4byte	.LASF3
 9081 0043 02       		.byte	0x2
 9082 0044 29       		.byte	0x29
 9083 0045 49000000 		.4byte	0x49
 9084 0049 02       		.uleb128 0x2
 9085 004a 02       		.byte	0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 206


 9086 004b 05       		.byte	0x5
 9087 004c 610E0000 		.4byte	.LASF4
 9088 0050 03       		.uleb128 0x3
 9089 0051 21050000 		.4byte	.LASF5
 9090 0055 02       		.byte	0x2
 9091 0056 2B       		.byte	0x2b
 9092 0057 5B000000 		.4byte	0x5b
 9093 005b 02       		.uleb128 0x2
 9094 005c 02       		.byte	0x2
 9095 005d 07       		.byte	0x7
 9096 005e 42100000 		.4byte	.LASF6
 9097 0062 03       		.uleb128 0x3
 9098 0063 6D100000 		.4byte	.LASF7
 9099 0067 02       		.byte	0x2
 9100 0068 3F       		.byte	0x3f
 9101 0069 6D000000 		.4byte	0x6d
 9102 006d 02       		.uleb128 0x2
 9103 006e 04       		.byte	0x4
 9104 006f 05       		.byte	0x5
 9105 0070 65020000 		.4byte	.LASF8
 9106 0074 03       		.uleb128 0x3
 9107 0075 DF090000 		.4byte	.LASF9
 9108 0079 02       		.byte	0x2
 9109 007a 41       		.byte	0x41
 9110 007b 7F000000 		.4byte	0x7f
 9111 007f 02       		.uleb128 0x2
 9112 0080 04       		.byte	0x4
 9113 0081 07       		.byte	0x7
 9114 0082 ED070000 		.4byte	.LASF10
 9115 0086 02       		.uleb128 0x2
 9116 0087 08       		.byte	0x8
 9117 0088 05       		.byte	0x5
 9118 0089 EA090000 		.4byte	.LASF11
 9119 008d 02       		.uleb128 0x2
 9120 008e 08       		.byte	0x8
 9121 008f 07       		.byte	0x7
 9122 0090 BC0C0000 		.4byte	.LASF12
 9123 0094 04       		.uleb128 0x4
 9124 0095 04       		.byte	0x4
 9125 0096 05       		.byte	0x5
 9126 0097 696E7400 		.ascii	"int\000"
 9127 009b 02       		.uleb128 0x2
 9128 009c 04       		.byte	0x4
 9129 009d 07       		.byte	0x7
 9130 009e 1D0B0000 		.4byte	.LASF13
 9131 00a2 03       		.uleb128 0x3
 9132 00a3 7A030000 		.4byte	.LASF14
 9133 00a7 03       		.byte	0x3
 9134 00a8 18       		.byte	0x18
 9135 00a9 2C000000 		.4byte	0x2c
 9136 00ad 03       		.uleb128 0x3
 9137 00ae BA0E0000 		.4byte	.LASF15
 9138 00b2 03       		.byte	0x3
 9139 00b3 20       		.byte	0x20
 9140 00b4 3E000000 		.4byte	0x3e
 9141 00b8 03       		.uleb128 0x3
 9142 00b9 D30C0000 		.4byte	.LASF16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 207


 9143 00bd 03       		.byte	0x3
 9144 00be 24       		.byte	0x24
 9145 00bf 50000000 		.4byte	0x50
 9146 00c3 03       		.uleb128 0x3
 9147 00c4 99000000 		.4byte	.LASF17
 9148 00c8 03       		.byte	0x3
 9149 00c9 2C       		.byte	0x2c
 9150 00ca 62000000 		.4byte	0x62
 9151 00ce 03       		.uleb128 0x3
 9152 00cf EE0F0000 		.4byte	.LASF18
 9153 00d3 03       		.byte	0x3
 9154 00d4 30       		.byte	0x30
 9155 00d5 74000000 		.4byte	0x74
 9156 00d9 05       		.uleb128 0x5
 9157 00da 280E0000 		.4byte	.LASF19
 9158 00de 04       		.byte	0x4
 9159 00df E901     		.2byte	0x1e9
 9160 00e1 37000000 		.4byte	0x37
 9161 00e5 05       		.uleb128 0x5
 9162 00e6 DA100000 		.4byte	.LASF20
 9163 00ea 04       		.byte	0x4
 9164 00eb EA01     		.2byte	0x1ea
 9165 00ed 5B000000 		.4byte	0x5b
 9166 00f1 05       		.uleb128 0x5
 9167 00f2 D5000000 		.4byte	.LASF21
 9168 00f6 04       		.byte	0x4
 9169 00f7 EB01     		.2byte	0x1eb
 9170 00f9 7F000000 		.4byte	0x7f
 9171 00fd 02       		.uleb128 0x2
 9172 00fe 04       		.byte	0x4
 9173 00ff 04       		.byte	0x4
 9174 0100 C00A0000 		.4byte	.LASF22
 9175 0104 02       		.uleb128 0x2
 9176 0105 08       		.byte	0x8
 9177 0106 04       		.byte	0x4
 9178 0107 540A0000 		.4byte	.LASF23
 9179 010b 02       		.uleb128 0x2
 9180 010c 01       		.byte	0x1
 9181 010d 08       		.byte	0x8
 9182 010e D5040000 		.4byte	.LASF24
 9183 0112 05       		.uleb128 0x5
 9184 0113 940B0000 		.4byte	.LASF25
 9185 0117 04       		.byte	0x4
 9186 0118 8B02     		.2byte	0x28b
 9187 011a 7F000000 		.4byte	0x7f
 9188 011e 05       		.uleb128 0x5
 9189 011f 3F0D0000 		.4byte	.LASF26
 9190 0123 04       		.byte	0x4
 9191 0124 9302     		.2byte	0x293
 9192 0126 2A010000 		.4byte	0x12a
 9193 012a 06       		.uleb128 0x6
 9194 012b D9000000 		.4byte	0xd9
 9195 012f 02       		.uleb128 0x2
 9196 0130 08       		.byte	0x8
 9197 0131 04       		.byte	0x4
 9198 0132 3B0C0000 		.4byte	.LASF27
 9199 0136 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 208


 9200 0137 04       		.byte	0x4
 9201 0138 07       		.byte	0x7
 9202 0139 2A000000 		.4byte	.LASF28
 9203 013d 07       		.uleb128 0x7
 9204 013e D9000000 		.4byte	0xd9
 9205 0142 4D010000 		.4byte	0x14d
 9206 0146 08       		.uleb128 0x8
 9207 0147 36010000 		.4byte	0x136
 9208 014b 03       		.byte	0x3
 9209 014c 00       		.byte	0
 9210 014d 09       		.uleb128 0x9
 9211 014e 1C       		.byte	0x1c
 9212 014f 05       		.byte	0x5
 9213 0150 1601     		.2byte	0x116
 9214 0152 BF010000 		.4byte	0x1bf
 9215 0156 0A       		.uleb128 0xa
 9216 0157 82030000 		.4byte	.LASF29
 9217 015b 05       		.byte	0x5
 9218 015c 1B01     		.2byte	0x11b
 9219 015e F1000000 		.4byte	0xf1
 9220 0162 00       		.byte	0
 9221 0163 0A       		.uleb128 0xa
 9222 0164 D8010000 		.4byte	.LASF30
 9223 0168 05       		.byte	0x5
 9224 0169 2001     		.2byte	0x120
 9225 016b F1000000 		.4byte	0xf1
 9226 016f 04       		.byte	0x4
 9227 0170 0A       		.uleb128 0xa
 9228 0171 AB100000 		.4byte	.LASF31
 9229 0175 05       		.byte	0x5
 9230 0176 2301     		.2byte	0x123
 9231 0178 F1000000 		.4byte	0xf1
 9232 017c 08       		.byte	0x8
 9233 017d 0A       		.uleb128 0xa
 9234 017e CF0E0000 		.4byte	.LASF32
 9235 0182 05       		.byte	0x5
 9236 0183 2601     		.2byte	0x126
 9237 0185 F1000000 		.4byte	0xf1
 9238 0189 0C       		.byte	0xc
 9239 018a 0A       		.uleb128 0xa
 9240 018b 240F0000 		.4byte	.LASF33
 9241 018f 05       		.byte	0x5
 9242 0190 2B01     		.2byte	0x12b
 9243 0192 F1000000 		.4byte	0xf1
 9244 0196 10       		.byte	0x10
 9245 0197 0A       		.uleb128 0xa
 9246 0198 04020000 		.4byte	.LASF34
 9247 019c 05       		.byte	0x5
 9248 019d 2E01     		.2byte	0x12e
 9249 019f D9000000 		.4byte	0xd9
 9250 01a3 14       		.byte	0x14
 9251 01a4 0A       		.uleb128 0xa
 9252 01a5 3B0A0000 		.4byte	.LASF35
 9253 01a9 05       		.byte	0x5
 9254 01aa 3301     		.2byte	0x133
 9255 01ac D9000000 		.4byte	0xd9
 9256 01b0 15       		.byte	0x15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 209


 9257 01b1 0A       		.uleb128 0xa
 9258 01b2 C5010000 		.4byte	.LASF36
 9259 01b6 05       		.byte	0x5
 9260 01b7 3601     		.2byte	0x136
 9261 01b9 F1000000 		.4byte	0xf1
 9262 01bd 18       		.byte	0x18
 9263 01be 00       		.byte	0
 9264 01bf 05       		.uleb128 0x5
 9265 01c0 D5070000 		.4byte	.LASF37
 9266 01c4 05       		.byte	0x5
 9267 01c5 3701     		.2byte	0x137
 9268 01c7 4D010000 		.4byte	0x14d
 9269 01cb 0B       		.uleb128 0xb
 9270 01cc 01       		.byte	0x1
 9271 01cd 37000000 		.4byte	0x37
 9272 01d1 05       		.byte	0x5
 9273 01d2 5401     		.2byte	0x154
 9274 01d4 F7010000 		.4byte	0x1f7
 9275 01d8 0C       		.uleb128 0xc
 9276 01d9 84000000 		.4byte	.LASF38
 9277 01dd 00       		.byte	0
 9278 01de 0C       		.uleb128 0xc
 9279 01df 25060000 		.4byte	.LASF39
 9280 01e3 01       		.byte	0x1
 9281 01e4 0C       		.uleb128 0xc
 9282 01e5 AB010000 		.4byte	.LASF40
 9283 01e9 02       		.byte	0x2
 9284 01ea 0C       		.uleb128 0xc
 9285 01eb B1030000 		.4byte	.LASF41
 9286 01ef 03       		.byte	0x3
 9287 01f0 0C       		.uleb128 0xc
 9288 01f1 88080000 		.4byte	.LASF42
 9289 01f5 04       		.byte	0x4
 9290 01f6 00       		.byte	0
 9291 01f7 05       		.uleb128 0x5
 9292 01f8 3E010000 		.4byte	.LASF43
 9293 01fc 05       		.byte	0x5
 9294 01fd 5A01     		.2byte	0x15a
 9295 01ff CB010000 		.4byte	0x1cb
 9296 0203 06       		.uleb128 0x6
 9297 0204 A2000000 		.4byte	0xa2
 9298 0208 06       		.uleb128 0x6
 9299 0209 B8000000 		.4byte	0xb8
 9300 020d 03       		.uleb128 0x3
 9301 020e 88050000 		.4byte	.LASF44
 9302 0212 06       		.byte	0x6
 9303 0213 6C       		.byte	0x6c
 9304 0214 9B000000 		.4byte	0x9b
 9305 0218 0D       		.uleb128 0xd
 9306 0219 C7030000 		.4byte	.LASF50
 9307 021d 01       		.byte	0x1
 9308 021e 37000000 		.4byte	0x37
 9309 0222 07       		.byte	0x7
 9310 0223 1D       		.byte	0x1d
 9311 0224 47020000 		.4byte	0x247
 9312 0228 0C       		.uleb128 0xc
 9313 0229 92090000 		.4byte	.LASF45
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 210


 9314 022d 00       		.byte	0
 9315 022e 0C       		.uleb128 0xc
 9316 022f 0B030000 		.4byte	.LASF46
 9317 0233 01       		.byte	0x1
 9318 0234 0C       		.uleb128 0xc
 9319 0235 B3000000 		.4byte	.LASF47
 9320 0239 02       		.byte	0x2
 9321 023a 0C       		.uleb128 0xc
 9322 023b 80060000 		.4byte	.LASF48
 9323 023f 03       		.byte	0x3
 9324 0240 0C       		.uleb128 0xc
 9325 0241 36010000 		.4byte	.LASF49
 9326 0245 04       		.byte	0x4
 9327 0246 00       		.byte	0
 9328 0247 0D       		.uleb128 0xd
 9329 0248 2C030000 		.4byte	.LASF51
 9330 024c 01       		.byte	0x1
 9331 024d 37000000 		.4byte	0x37
 9332 0251 01       		.byte	0x1
 9333 0252 27       		.byte	0x27
 9334 0253 7C020000 		.4byte	0x27c
 9335 0257 0C       		.uleb128 0xc
 9336 0258 5B060000 		.4byte	.LASF52
 9337 025c 00       		.byte	0
 9338 025d 0C       		.uleb128 0xc
 9339 025e BE040000 		.4byte	.LASF53
 9340 0262 01       		.byte	0x1
 9341 0263 0C       		.uleb128 0xc
 9342 0264 AD0D0000 		.4byte	.LASF54
 9343 0268 02       		.byte	0x2
 9344 0269 0C       		.uleb128 0xc
 9345 026a 5A0D0000 		.4byte	.LASF55
 9346 026e 03       		.byte	0x3
 9347 026f 0C       		.uleb128 0xc
 9348 0270 55100000 		.4byte	.LASF56
 9349 0274 04       		.byte	0x4
 9350 0275 0C       		.uleb128 0xc
 9351 0276 22020000 		.4byte	.LASF57
 9352 027a 05       		.byte	0x5
 9353 027b 00       		.byte	0
 9354 027c 0E       		.uleb128 0xe
 9355 027d FE0C0000 		.4byte	.LASF317
 9356 0281 04       		.byte	0x4
 9357 0282 01       		.byte	0x1
 9358 0283 AB       		.byte	0xab
 9359 0284 A6020000 		.4byte	0x2a6
 9360 0288 0F       		.uleb128 0xf
 9361 0289 6600     		.ascii	"f\000"
 9362 028b 01       		.byte	0x1
 9363 028c AC       		.byte	0xac
 9364 028d FD000000 		.4byte	0xfd
 9365 0291 0F       		.uleb128 0xf
 9366 0292 6200     		.ascii	"b\000"
 9367 0294 01       		.byte	0x1
 9368 0295 AD       		.byte	0xad
 9369 0296 A6020000 		.4byte	0x2a6
 9370 029a 0F       		.uleb128 0xf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 211


 9371 029b 75333200 		.ascii	"u32\000"
 9372 029f 01       		.byte	0x1
 9373 02a0 AE       		.byte	0xae
 9374 02a1 CE000000 		.4byte	0xce
 9375 02a5 00       		.byte	0
 9376 02a6 07       		.uleb128 0x7
 9377 02a7 A2000000 		.4byte	0xa2
 9378 02ab B6020000 		.4byte	0x2b6
 9379 02af 08       		.uleb128 0x8
 9380 02b0 36010000 		.4byte	0x136
 9381 02b4 03       		.byte	0x3
 9382 02b5 00       		.byte	0
 9383 02b6 10       		.uleb128 0x10
 9384 02b7 A7030000 		.4byte	.LASF111
 9385 02bb 01       		.byte	0x1
 9386 02bc B2       		.byte	0xb2
 9387 02bd 00000000 		.4byte	.LFB64
 9388 02c1 74010000 		.4byte	.LFE64-.LFB64
 9389 02c5 01       		.uleb128 0x1
 9390 02c6 9C       		.byte	0x9c
 9391 02c7 E2020000 		.4byte	0x2e2
 9392 02cb 11       		.uleb128 0x11
 9393 02cc 66000000 		.4byte	.LBB2
 9394 02d0 7A000000 		.4byte	.LBE2-.LBB2
 9395 02d4 12       		.uleb128 0x12
 9396 02d5 6900     		.ascii	"i\000"
 9397 02d7 01       		.byte	0x1
 9398 02d8 B8       		.byte	0xb8
 9399 02d9 94000000 		.4byte	0x94
 9400 02dd 02       		.uleb128 0x2
 9401 02de 91       		.byte	0x91
 9402 02df 6C       		.sleb128 -20
 9403 02e0 00       		.byte	0
 9404 02e1 00       		.byte	0
 9405 02e2 13       		.uleb128 0x13
 9406 02e3 130D0000 		.4byte	.LASF58
 9407 02e7 01       		.byte	0x1
 9408 02e8 DA       		.byte	0xda
 9409 02e9 00000000 		.4byte	.LFB65
 9410 02ed 9C000000 		.4byte	.LFE65-.LFB65
 9411 02f1 01       		.uleb128 0x1
 9412 02f2 9C       		.byte	0x9c
 9413 02f3 14       		.uleb128 0x14
 9414 02f4 620B0000 		.4byte	.LASF59
 9415 02f8 01       		.byte	0x1
 9416 02f9 0301     		.2byte	0x103
 9417 02fb 00000000 		.4byte	.LFB66
 9418 02ff 14000000 		.4byte	.LFE66-.LFB66
 9419 0303 01       		.uleb128 0x1
 9420 0304 9C       		.byte	0x9c
 9421 0305 14       		.uleb128 0x14
 9422 0306 A7090000 		.4byte	.LASF60
 9423 030a 01       		.byte	0x1
 9424 030b 0E01     		.2byte	0x10e
 9425 030d 00000000 		.4byte	.LFB67
 9426 0311 7C000000 		.4byte	.LFE67-.LFB67
 9427 0315 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 212


 9428 0316 9C       		.byte	0x9c
 9429 0317 15       		.uleb128 0x15
 9430 0318 FF040000 		.4byte	.LASF63
 9431 031c 01       		.byte	0x1
 9432 031d 2A01     		.2byte	0x12a
 9433 031f FD000000 		.4byte	0xfd
 9434 0323 00000000 		.4byte	.LFB68
 9435 0327 58000000 		.4byte	.LFE68-.LFB68
 9436 032b 01       		.uleb128 0x1
 9437 032c 9C       		.byte	0x9c
 9438 032d 7D030000 		.4byte	0x37d
 9439 0331 16       		.uleb128 0x16
 9440 0332 6D696E00 		.ascii	"min\000"
 9441 0336 01       		.byte	0x1
 9442 0337 2A01     		.2byte	0x12a
 9443 0339 FD000000 		.4byte	0xfd
 9444 033d 02       		.uleb128 0x2
 9445 033e 91       		.byte	0x91
 9446 033f 6C       		.sleb128 -20
 9447 0340 16       		.uleb128 0x16
 9448 0341 76616C00 		.ascii	"val\000"
 9449 0345 01       		.byte	0x1
 9450 0346 2A01     		.2byte	0x12a
 9451 0348 FD000000 		.4byte	0xfd
 9452 034c 02       		.uleb128 0x2
 9453 034d 91       		.byte	0x91
 9454 034e 68       		.sleb128 -24
 9455 034f 16       		.uleb128 0x16
 9456 0350 6D617800 		.ascii	"max\000"
 9457 0354 01       		.byte	0x1
 9458 0355 2A01     		.2byte	0x12a
 9459 0357 FD000000 		.4byte	0xfd
 9460 035b 02       		.uleb128 0x2
 9461 035c 91       		.byte	0x91
 9462 035d 64       		.sleb128 -28
 9463 035e 17       		.uleb128 0x17
 9464 035f 330A0000 		.4byte	.LASF61
 9465 0363 01       		.byte	0x1
 9466 0364 2C01     		.2byte	0x12c
 9467 0366 FD000000 		.4byte	0xfd
 9468 036a 02       		.uleb128 0x2
 9469 036b 91       		.byte	0x91
 9470 036c 74       		.sleb128 -12
 9471 036d 17       		.uleb128 0x17
 9472 036e 6E040000 		.4byte	.LASF62
 9473 0372 01       		.byte	0x1
 9474 0373 2D01     		.2byte	0x12d
 9475 0375 FD000000 		.4byte	0xfd
 9476 0379 02       		.uleb128 0x2
 9477 037a 91       		.byte	0x91
 9478 037b 70       		.sleb128 -16
 9479 037c 00       		.byte	0
 9480 037d 15       		.uleb128 0x15
 9481 037e 8C100000 		.4byte	.LASF64
 9482 0382 01       		.byte	0x1
 9483 0383 4001     		.2byte	0x140
 9484 0385 FD000000 		.4byte	0xfd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 213


 9485 0389 00000000 		.4byte	.LFB69
 9486 038d 68000000 		.4byte	.LFE69-.LFB69
 9487 0391 01       		.uleb128 0x1
 9488 0392 9C       		.byte	0x9c
 9489 0393 A5030000 		.4byte	0x3a5
 9490 0397 16       		.uleb128 0x16
 9491 0398 6600     		.ascii	"f\000"
 9492 039a 01       		.byte	0x1
 9493 039b 4001     		.2byte	0x140
 9494 039d FD000000 		.4byte	0xfd
 9495 03a1 02       		.uleb128 0x2
 9496 03a2 91       		.byte	0x91
 9497 03a3 74       		.sleb128 -12
 9498 03a4 00       		.byte	0
 9499 03a5 15       		.uleb128 0x15
 9500 03a6 7A0C0000 		.4byte	.LASF65
 9501 03aa 01       		.byte	0x1
 9502 03ab 4701     		.2byte	0x147
 9503 03ad FD000000 		.4byte	0xfd
 9504 03b1 00000000 		.4byte	.LFB70
 9505 03b5 4C000000 		.4byte	.LFE70-.LFB70
 9506 03b9 01       		.uleb128 0x1
 9507 03ba 9C       		.byte	0x9c
 9508 03bb CD030000 		.4byte	0x3cd
 9509 03bf 16       		.uleb128 0x16
 9510 03c0 6600     		.ascii	"f\000"
 9511 03c2 01       		.byte	0x1
 9512 03c3 4701     		.2byte	0x147
 9513 03c5 FD000000 		.4byte	0xfd
 9514 03c9 02       		.uleb128 0x2
 9515 03ca 91       		.byte	0x91
 9516 03cb 74       		.sleb128 -12
 9517 03cc 00       		.byte	0
 9518 03cd 15       		.uleb128 0x15
 9519 03ce B1070000 		.4byte	.LASF66
 9520 03d2 01       		.byte	0x1
 9521 03d3 4D01     		.2byte	0x14d
 9522 03d5 FD000000 		.4byte	0xfd
 9523 03d9 00000000 		.4byte	.LFB71
 9524 03dd 46000000 		.4byte	.LFE71-.LFB71
 9525 03e1 01       		.uleb128 0x1
 9526 03e2 9C       		.byte	0x9c
 9527 03e3 2F040000 		.4byte	0x42f
 9528 03e7 16       		.uleb128 0x16
 9529 03e8 4100     		.ascii	"A\000"
 9530 03ea 01       		.byte	0x1
 9531 03eb 4D01     		.2byte	0x14d
 9532 03ed FD000000 		.4byte	0xfd
 9533 03f1 02       		.uleb128 0x2
 9534 03f2 91       		.byte	0x91
 9535 03f3 6C       		.sleb128 -20
 9536 03f4 16       		.uleb128 0x16
 9537 03f5 4200     		.ascii	"B\000"
 9538 03f7 01       		.byte	0x1
 9539 03f8 4D01     		.2byte	0x14d
 9540 03fa FD000000 		.4byte	0xfd
 9541 03fe 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 214


 9542 03ff 91       		.byte	0x91
 9543 0400 68       		.sleb128 -24
 9544 0401 18       		.uleb128 0x18
 9545 0402 1C020000 		.4byte	.LASF67
 9546 0406 01       		.byte	0x1
 9547 0407 4D01     		.2byte	0x14d
 9548 0409 FD000000 		.4byte	0xfd
 9549 040d 02       		.uleb128 0x2
 9550 040e 91       		.byte	0x91
 9551 040f 64       		.sleb128 -28
 9552 0410 17       		.uleb128 0x17
 9553 0411 57030000 		.4byte	.LASF68
 9554 0415 01       		.byte	0x1
 9555 0416 4F01     		.2byte	0x14f
 9556 0418 FD000000 		.4byte	0xfd
 9557 041c 02       		.uleb128 0x2
 9558 041d 91       		.byte	0x91
 9559 041e 74       		.sleb128 -12
 9560 041f 19       		.uleb128 0x19
 9561 0420 6F757400 		.ascii	"out\000"
 9562 0424 01       		.byte	0x1
 9563 0425 5201     		.2byte	0x152
 9564 0427 FD000000 		.4byte	0xfd
 9565 042b 02       		.uleb128 0x2
 9566 042c 91       		.byte	0x91
 9567 042d 70       		.sleb128 -16
 9568 042e 00       		.byte	0
 9569 042f 1A       		.uleb128 0x1a
 9570 0430 6D617000 		.ascii	"map\000"
 9571 0434 01       		.byte	0x1
 9572 0435 C201     		.2byte	0x1c2
 9573 0437 FD000000 		.4byte	0xfd
 9574 043b 00000000 		.4byte	.LFB72
 9575 043f 56000000 		.4byte	.LFE72-.LFB72
 9576 0443 01       		.uleb128 0x1
 9577 0444 9C       		.byte	0x9c
 9578 0445 95040000 		.4byte	0x495
 9579 0449 18       		.uleb128 0x18
 9580 044a 84040000 		.4byte	.LASF69
 9581 044e 01       		.byte	0x1
 9582 044f C201     		.2byte	0x1c2
 9583 0451 FD000000 		.4byte	0xfd
 9584 0455 02       		.uleb128 0x2
 9585 0456 91       		.byte	0x91
 9586 0457 6C       		.sleb128 -20
 9587 0458 18       		.uleb128 0x18
 9588 0459 EC010000 		.4byte	.LASF70
 9589 045d 01       		.byte	0x1
 9590 045e C201     		.2byte	0x1c2
 9591 0460 FD000000 		.4byte	0xfd
 9592 0464 02       		.uleb128 0x2
 9593 0465 91       		.byte	0x91
 9594 0466 68       		.sleb128 -24
 9595 0467 18       		.uleb128 0x18
 9596 0468 D1080000 		.4byte	.LASF71
 9597 046c 01       		.byte	0x1
 9598 046d C201     		.2byte	0x1c2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 215


 9599 046f FD000000 		.4byte	0xfd
 9600 0473 02       		.uleb128 0x2
 9601 0474 91       		.byte	0x91
 9602 0475 64       		.sleb128 -28
 9603 0476 18       		.uleb128 0x18
 9604 0477 A0080000 		.4byte	.LASF72
 9605 047b 01       		.byte	0x1
 9606 047c C201     		.2byte	0x1c2
 9607 047e FD000000 		.4byte	0xfd
 9608 0482 02       		.uleb128 0x2
 9609 0483 91       		.byte	0x91
 9610 0484 60       		.sleb128 -32
 9611 0485 18       		.uleb128 0x18
 9612 0486 B20A0000 		.4byte	.LASF73
 9613 048a 01       		.byte	0x1
 9614 048b C201     		.2byte	0x1c2
 9615 048d FD000000 		.4byte	0xfd
 9616 0491 02       		.uleb128 0x2
 9617 0492 91       		.byte	0x91
 9618 0493 00       		.sleb128 0
 9619 0494 00       		.byte	0
 9620 0495 1B       		.uleb128 0x1b
 9621 0496 9A050000 		.4byte	.LASF106
 9622 049a 01       		.byte	0x1
 9623 049b CD01     		.2byte	0x1cd
 9624 049d 00000000 		.4byte	.LFB73
 9625 04a1 0C000000 		.4byte	.LFE73-.LFB73
 9626 04a5 01       		.uleb128 0x1
 9627 04a6 9C       		.byte	0x9c
 9628 04a7 1C       		.uleb128 0x1c
 9629 04a8 23100000 		.4byte	.LASF318
 9630 04ac 01       		.byte	0x1
 9631 04ad D301     		.2byte	0x1d3
 9632 04af 00000000 		.4byte	.LFB74
 9633 04b3 0C010000 		.4byte	.LFE74-.LFB74
 9634 04b7 01       		.uleb128 0x1
 9635 04b8 9C       		.byte	0x9c
 9636 04b9 EE040000 		.4byte	0x4ee
 9637 04bd 11       		.uleb128 0x11
 9638 04be 06000000 		.4byte	.LBB3
 9639 04c2 EA000000 		.4byte	.LBE3-.LBB3
 9640 04c6 19       		.uleb128 0x19
 9641 04c7 6900     		.ascii	"i\000"
 9642 04c9 01       		.byte	0x1
 9643 04ca D701     		.2byte	0x1d7
 9644 04cc 94000000 		.4byte	0x94
 9645 04d0 02       		.uleb128 0x2
 9646 04d1 91       		.byte	0x91
 9647 04d2 6C       		.sleb128 -20
 9648 04d3 11       		.uleb128 0x11
 9649 04d4 0C000000 		.4byte	.LBB4
 9650 04d8 D8000000 		.4byte	.LBE4-.LBB4
 9651 04dc 17       		.uleb128 0x17
 9652 04dd F3010000 		.4byte	.LASF74
 9653 04e1 01       		.byte	0x1
 9654 04e2 DA01     		.2byte	0x1da
 9655 04e4 FD000000 		.4byte	0xfd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 216


 9656 04e8 02       		.uleb128 0x2
 9657 04e9 91       		.byte	0x91
 9658 04ea 68       		.sleb128 -24
 9659 04eb 00       		.byte	0
 9660 04ec 00       		.byte	0
 9661 04ed 00       		.byte	0
 9662 04ee 15       		.uleb128 0x15
 9663 04ef CC020000 		.4byte	.LASF75
 9664 04f3 01       		.byte	0x1
 9665 04f4 E101     		.2byte	0x1e1
 9666 04f6 94000000 		.4byte	0x94
 9667 04fa 00000000 		.4byte	.LFB75
 9668 04fe 701E0000 		.4byte	.LFE75-.LFB75
 9669 0502 01       		.uleb128 0x1
 9670 0503 9C       		.byte	0x9c
 9671 0504 13090000 		.4byte	0x913
 9672 0508 17       		.uleb128 0x17
 9673 0509 B9100000 		.4byte	.LASF76
 9674 050d 01       		.byte	0x1
 9675 050e EC01     		.2byte	0x1ec
 9676 0510 A2000000 		.4byte	0xa2
 9677 0514 03       		.uleb128 0x3
 9678 0515 91       		.byte	0x91
 9679 0516 8B7F     		.sleb128 -117
 9680 0518 1D       		.uleb128 0x1d
 9681 0519 56000000 		.4byte	.LBB5
 9682 051d 8A010000 		.4byte	.LBE5-.LBB5
 9683 0521 D4050000 		.4byte	0x5d4
 9684 0525 17       		.uleb128 0x17
 9685 0526 16040000 		.4byte	.LASF77
 9686 052a 01       		.byte	0x1
 9687 052b FA01     		.2byte	0x1fa
 9688 052d 94000000 		.4byte	0x94
 9689 0531 02       		.uleb128 0x2
 9690 0532 91       		.byte	0x91
 9691 0533 6C       		.sleb128 -20
 9692 0534 1D       		.uleb128 0x1d
 9693 0535 5E000000 		.4byte	.LBB6
 9694 0539 64000000 		.4byte	.LBE6-.LBB6
 9695 053d 51050000 		.4byte	0x551
 9696 0541 17       		.uleb128 0x17
 9697 0542 750F0000 		.4byte	.LASF78
 9698 0546 01       		.byte	0x1
 9699 0547 FD01     		.2byte	0x1fd
 9700 0549 94000000 		.4byte	0x94
 9701 054d 02       		.uleb128 0x2
 9702 054e 91       		.byte	0x91
 9703 054f 68       		.sleb128 -24
 9704 0550 00       		.byte	0
 9705 0551 11       		.uleb128 0x11
 9706 0552 C2000000 		.4byte	.LBB7
 9707 0556 0A010000 		.4byte	.LBE7-.LBB7
 9708 055a 19       		.uleb128 0x19
 9709 055b 6900     		.ascii	"i\000"
 9710 055d 01       		.byte	0x1
 9711 055e 0102     		.2byte	0x201
 9712 0560 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 217


 9713 0564 02       		.uleb128 0x2
 9714 0565 91       		.byte	0x91
 9715 0566 64       		.sleb128 -28
 9716 0567 11       		.uleb128 0x11
 9717 0568 CA000000 		.4byte	.LBB8
 9718 056c EE000000 		.4byte	.LBE8-.LBB8
 9719 0570 17       		.uleb128 0x17
 9720 0571 27040000 		.4byte	.LASF79
 9721 0575 01       		.byte	0x1
 9722 0576 0302     		.2byte	0x203
 9723 0578 94000000 		.4byte	0x94
 9724 057c 03       		.uleb128 0x3
 9725 057d 91       		.byte	0x91
 9726 057e 847F     		.sleb128 -124
 9727 0580 11       		.uleb128 0x11
 9728 0581 D8000000 		.4byte	.LBB9
 9729 0585 E0000000 		.4byte	.LBE9-.LBB9
 9730 0589 19       		.uleb128 0x19
 9731 058a 6A00     		.ascii	"j\000"
 9732 058c 01       		.byte	0x1
 9733 058d 0402     		.2byte	0x204
 9734 058f 94000000 		.4byte	0x94
 9735 0593 02       		.uleb128 0x2
 9736 0594 91       		.byte	0x91
 9737 0595 60       		.sleb128 -32
 9738 0596 11       		.uleb128 0x11
 9739 0597 E0000000 		.4byte	.LBB10
 9740 059b C6000000 		.4byte	.LBE10-.LBB10
 9741 059f 17       		.uleb128 0x17
 9742 05a0 5F030000 		.4byte	.LASF80
 9743 05a4 01       		.byte	0x1
 9744 05a5 0702     		.2byte	0x207
 9745 05a7 94000000 		.4byte	0x94
 9746 05ab 03       		.uleb128 0x3
 9747 05ac 91       		.byte	0x91
 9748 05ad 807F     		.sleb128 -128
 9749 05af 17       		.uleb128 0x17
 9750 05b0 98100000 		.4byte	.LASF81
 9751 05b4 01       		.byte	0x1
 9752 05b5 0802     		.2byte	0x208
 9753 05b7 B8000000 		.4byte	0xb8
 9754 05bb 03       		.uleb128 0x3
 9755 05bc 91       		.byte	0x91
 9756 05bd FE7E     		.sleb128 -130
 9757 05bf 17       		.uleb128 0x17
 9758 05c0 280A0000 		.4byte	.LASF82
 9759 05c4 01       		.byte	0x1
 9760 05c5 0902     		.2byte	0x209
 9761 05c7 B8000000 		.4byte	0xb8
 9762 05cb 03       		.uleb128 0x3
 9763 05cc 91       		.byte	0x91
 9764 05cd FC7E     		.sleb128 -132
 9765 05cf 00       		.byte	0
 9766 05d0 00       		.byte	0
 9767 05d1 00       		.byte	0
 9768 05d2 00       		.byte	0
 9769 05d3 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 218


 9770 05d4 1D       		.uleb128 0x1d
 9771 05d5 E0010000 		.4byte	.LBB11
 9772 05d9 A4000000 		.4byte	.LBE11-.LBB11
 9773 05dd EF050000 		.4byte	0x5ef
 9774 05e1 19       		.uleb128 0x19
 9775 05e2 6900     		.ascii	"i\000"
 9776 05e4 01       		.byte	0x1
 9777 05e5 1002     		.2byte	0x210
 9778 05e7 94000000 		.4byte	0x94
 9779 05eb 02       		.uleb128 0x2
 9780 05ec 91       		.byte	0x91
 9781 05ed 5C       		.sleb128 -36
 9782 05ee 00       		.byte	0
 9783 05ef 1D       		.uleb128 0x1d
 9784 05f0 88020000 		.4byte	.LBB12
 9785 05f4 D4000000 		.4byte	.LBE12-.LBB12
 9786 05f8 53060000 		.4byte	0x653
 9787 05fc 19       		.uleb128 0x19
 9788 05fd 6900     		.ascii	"i\000"
 9789 05ff 01       		.byte	0x1
 9790 0600 1802     		.2byte	0x218
 9791 0602 94000000 		.4byte	0x94
 9792 0606 02       		.uleb128 0x2
 9793 0607 91       		.byte	0x91
 9794 0608 58       		.sleb128 -40
 9795 0609 1D       		.uleb128 0x1d
 9796 060a 90020000 		.4byte	.LBB13
 9797 060e 34000000 		.4byte	.LBE13-.LBB13
 9798 0612 24060000 		.4byte	0x624
 9799 0616 19       		.uleb128 0x19
 9800 0617 6A00     		.ascii	"j\000"
 9801 0619 01       		.byte	0x1
 9802 061a 1A02     		.2byte	0x21a
 9803 061c 94000000 		.4byte	0x94
 9804 0620 02       		.uleb128 0x2
 9805 0621 91       		.byte	0x91
 9806 0622 54       		.sleb128 -44
 9807 0623 00       		.byte	0
 9808 0624 11       		.uleb128 0x11
 9809 0625 C4020000 		.4byte	.LBB14
 9810 0629 7A000000 		.4byte	.LBE14-.LBB14
 9811 062d 19       		.uleb128 0x19
 9812 062e 6A00     		.ascii	"j\000"
 9813 0630 01       		.byte	0x1
 9814 0631 1F02     		.2byte	0x21f
 9815 0633 94000000 		.4byte	0x94
 9816 0637 02       		.uleb128 0x2
 9817 0638 91       		.byte	0x91
 9818 0639 50       		.sleb128 -48
 9819 063a 11       		.uleb128 0x11
 9820 063b CC020000 		.4byte	.LBB15
 9821 063f 60000000 		.4byte	.LBE15-.LBB15
 9822 0643 19       		.uleb128 0x19
 9823 0644 6B00     		.ascii	"k\000"
 9824 0646 01       		.byte	0x1
 9825 0647 2102     		.2byte	0x221
 9826 0649 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 219


 9827 064d 02       		.uleb128 0x2
 9828 064e 91       		.byte	0x91
 9829 064f 4C       		.sleb128 -52
 9830 0650 00       		.byte	0
 9831 0651 00       		.byte	0
 9832 0652 00       		.byte	0
 9833 0653 1D       		.uleb128 0x1d
 9834 0654 2E040000 		.4byte	.LBB16
 9835 0658 5C000000 		.4byte	.LBE16-.LBB16
 9836 065c 6E060000 		.4byte	0x66e
 9837 0660 19       		.uleb128 0x19
 9838 0661 7700     		.ascii	"w\000"
 9839 0663 01       		.byte	0x1
 9840 0664 4E02     		.2byte	0x24e
 9841 0666 94000000 		.4byte	0x94
 9842 066a 02       		.uleb128 0x2
 9843 066b 91       		.byte	0x91
 9844 066c 48       		.sleb128 -56
 9845 066d 00       		.byte	0
 9846 066e 1D       		.uleb128 0x1d
 9847 066f 1C050000 		.4byte	.LBB17
 9848 0673 2A000000 		.4byte	.LBE17-.LBB17
 9849 0677 8C060000 		.4byte	0x68c
 9850 067b 17       		.uleb128 0x17
 9851 067c 34080000 		.4byte	.LASF83
 9852 0680 01       		.byte	0x1
 9853 0681 0D03     		.2byte	0x30d
 9854 0683 A2000000 		.4byte	0xa2
 9855 0687 03       		.uleb128 0x3
 9856 0688 91       		.byte	0x91
 9857 0689 FB7E     		.sleb128 -133
 9858 068b 00       		.byte	0
 9859 068c 1D       		.uleb128 0x1d
 9860 068d 7C070000 		.4byte	.LBB18
 9861 0691 4E000000 		.4byte	.LBE18-.LBB18
 9862 0695 C1060000 		.4byte	0x6c1
 9863 0699 19       		.uleb128 0x19
 9864 069a 6900     		.ascii	"i\000"
 9865 069c 01       		.byte	0x1
 9866 069d 5503     		.2byte	0x355
 9867 069f 94000000 		.4byte	0x94
 9868 06a3 02       		.uleb128 0x2
 9869 06a4 91       		.byte	0x91
 9870 06a5 44       		.sleb128 -60
 9871 06a6 11       		.uleb128 0x11
 9872 06a7 82070000 		.4byte	.LBB19
 9873 06ab 3C000000 		.4byte	.LBE19-.LBB19
 9874 06af 17       		.uleb128 0x17
 9875 06b0 2C080000 		.4byte	.LASF84
 9876 06b4 01       		.byte	0x1
 9877 06b5 5703     		.2byte	0x357
 9878 06b7 B8000000 		.4byte	0xb8
 9879 06bb 03       		.uleb128 0x3
 9880 06bc 91       		.byte	0x91
 9881 06bd D27E     		.sleb128 -174
 9882 06bf 00       		.byte	0
 9883 06c0 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 220


 9884 06c1 1D       		.uleb128 0x1d
 9885 06c2 F0080000 		.4byte	.LBB20
 9886 06c6 D6010000 		.4byte	.LBE20-.LBB20
 9887 06ca DF060000 		.4byte	0x6df
 9888 06ce 17       		.uleb128 0x17
 9889 06cf 5D000000 		.4byte	.LASF85
 9890 06d3 01       		.byte	0x1
 9891 06d4 0504     		.2byte	0x405
 9892 06d6 AD000000 		.4byte	0xad
 9893 06da 03       		.uleb128 0x3
 9894 06db 91       		.byte	0x91
 9895 06dc F87E     		.sleb128 -136
 9896 06de 00       		.byte	0
 9897 06df 1D       		.uleb128 0x1d
 9898 06e0 220B0000 		.4byte	.LBB21
 9899 06e4 18000000 		.4byte	.LBE21-.LBB21
 9900 06e8 FD060000 		.4byte	0x6fd
 9901 06ec 17       		.uleb128 0x17
 9902 06ed 62050000 		.4byte	.LASF86
 9903 06f1 01       		.byte	0x1
 9904 06f2 3304     		.2byte	0x433
 9905 06f4 B8000000 		.4byte	0xb8
 9906 06f8 03       		.uleb128 0x3
 9907 06f9 91       		.byte	0x91
 9908 06fa F67E     		.sleb128 -138
 9909 06fc 00       		.byte	0
 9910 06fd 1D       		.uleb128 0x1d
 9911 06fe AE0B0000 		.4byte	.LBB22
 9912 0702 96020000 		.4byte	.LBE22-.LBB22
 9913 0706 18070000 		.4byte	0x718
 9914 070a 19       		.uleb128 0x19
 9915 070b 6900     		.ascii	"i\000"
 9916 070d 01       		.byte	0x1
 9917 070e 5E04     		.2byte	0x45e
 9918 0710 94000000 		.4byte	0x94
 9919 0714 02       		.uleb128 0x2
 9920 0715 91       		.byte	0x91
 9921 0716 40       		.sleb128 -64
 9922 0717 00       		.byte	0
 9923 0718 1D       		.uleb128 0x1d
 9924 0719 4A0E0000 		.4byte	.LBB23
 9925 071d 66000000 		.4byte	.LBE23-.LBB23
 9926 0721 34070000 		.4byte	0x734
 9927 0725 19       		.uleb128 0x19
 9928 0726 6900     		.ascii	"i\000"
 9929 0728 01       		.byte	0x1
 9930 0729 8004     		.2byte	0x480
 9931 072b 94000000 		.4byte	0x94
 9932 072f 03       		.uleb128 0x3
 9933 0730 91       		.byte	0x91
 9934 0731 BC7F     		.sleb128 -68
 9935 0733 00       		.byte	0
 9936 0734 1D       		.uleb128 0x1d
 9937 0735 2A140000 		.4byte	.LBB24
 9938 0739 68000000 		.4byte	.LBE24-.LBB24
 9939 073d 50070000 		.4byte	0x750
 9940 0741 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 221


 9941 0742 6900     		.ascii	"i\000"
 9942 0744 01       		.byte	0x1
 9943 0745 6E05     		.2byte	0x56e
 9944 0747 94000000 		.4byte	0x94
 9945 074b 03       		.uleb128 0x3
 9946 074c 91       		.byte	0x91
 9947 074d B87F     		.sleb128 -72
 9948 074f 00       		.byte	0
 9949 0750 1D       		.uleb128 0x1d
 9950 0751 9C140000 		.4byte	.LBB25
 9951 0755 98000000 		.4byte	.LBE25-.LBB25
 9952 0759 6C070000 		.4byte	0x76c
 9953 075d 19       		.uleb128 0x19
 9954 075e 6900     		.ascii	"i\000"
 9955 0760 01       		.byte	0x1
 9956 0761 7B05     		.2byte	0x57b
 9957 0763 94000000 		.4byte	0x94
 9958 0767 03       		.uleb128 0x3
 9959 0768 91       		.byte	0x91
 9960 0769 B47F     		.sleb128 -76
 9961 076b 00       		.byte	0
 9962 076c 1D       		.uleb128 0x1d
 9963 076d 4E150000 		.4byte	.LBB26
 9964 0771 9C000000 		.4byte	.LBE26-.LBB26
 9965 0775 88070000 		.4byte	0x788
 9966 0779 19       		.uleb128 0x19
 9967 077a 6900     		.ascii	"i\000"
 9968 077c 01       		.byte	0x1
 9969 077d 9205     		.2byte	0x592
 9970 077f 94000000 		.4byte	0x94
 9971 0783 03       		.uleb128 0x3
 9972 0784 91       		.byte	0x91
 9973 0785 B07F     		.sleb128 -80
 9974 0787 00       		.byte	0
 9975 0788 1D       		.uleb128 0x1d
 9976 0789 F0150000 		.4byte	.LBB27
 9977 078d 52030000 		.4byte	.LBE27-.LBB27
 9978 0791 FE070000 		.4byte	0x7fe
 9979 0795 19       		.uleb128 0x19
 9980 0796 6900     		.ascii	"i\000"
 9981 0798 01       		.byte	0x1
 9982 0799 A305     		.2byte	0x5a3
 9983 079b 94000000 		.4byte	0x94
 9984 079f 03       		.uleb128 0x3
 9985 07a0 91       		.byte	0x91
 9986 07a1 AC7F     		.sleb128 -84
 9987 07a3 11       		.uleb128 0x11
 9988 07a4 18160000 		.4byte	.LBB28
 9989 07a8 18030000 		.4byte	.LBE28-.LBB28
 9990 07ac 17       		.uleb128 0x17
 9991 07ad DF0B0000 		.4byte	.LASF87
 9992 07b1 01       		.byte	0x1
 9993 07b2 B405     		.2byte	0x5b4
 9994 07b4 FD000000 		.4byte	0xfd
 9995 07b8 03       		.uleb128 0x3
 9996 07b9 91       		.byte	0x91
 9997 07ba F07E     		.sleb128 -144
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 222


 9998 07bc 17       		.uleb128 0x17
 9999 07bd AB0E0000 		.4byte	.LASF88
 10000 07c1 01       		.byte	0x1
 10001 07c2 C105     		.2byte	0x5c1
 10002 07c4 FD000000 		.4byte	0xfd
 10003 07c8 03       		.uleb128 0x3
 10004 07c9 91       		.byte	0x91
 10005 07ca EC7E     		.sleb128 -148
 10006 07cc 17       		.uleb128 0x17
 10007 07cd 030B0000 		.4byte	.LASF89
 10008 07d1 01       		.byte	0x1
 10009 07d2 C405     		.2byte	0x5c4
 10010 07d4 FD000000 		.4byte	0xfd
 10011 07d8 03       		.uleb128 0x3
 10012 07d9 91       		.byte	0x91
 10013 07da E87E     		.sleb128 -152
 10014 07dc 17       		.uleb128 0x17
 10015 07dd DD050000 		.4byte	.LASF90
 10016 07e1 01       		.byte	0x1
 10017 07e2 C605     		.2byte	0x5c6
 10018 07e4 FD000000 		.4byte	0xfd
 10019 07e8 03       		.uleb128 0x3
 10020 07e9 91       		.byte	0x91
 10021 07ea E47E     		.sleb128 -156
 10022 07ec 17       		.uleb128 0x17
 10023 07ed 390E0000 		.4byte	.LASF91
 10024 07f1 01       		.byte	0x1
 10025 07f2 C805     		.2byte	0x5c8
 10026 07f4 FD000000 		.4byte	0xfd
 10027 07f8 03       		.uleb128 0x3
 10028 07f9 91       		.byte	0x91
 10029 07fa E07E     		.sleb128 -160
 10030 07fc 00       		.byte	0
 10031 07fd 00       		.byte	0
 10032 07fe 1D       		.uleb128 0x1d
 10033 07ff 641A0000 		.4byte	.LBB29
 10034 0803 4E000000 		.4byte	.LBE29-.LBB29
 10035 0807 1A080000 		.4byte	0x81a
 10036 080b 19       		.uleb128 0x19
 10037 080c 6900     		.ascii	"i\000"
 10038 080e 01       		.byte	0x1
 10039 080f 1C06     		.2byte	0x61c
 10040 0811 0D020000 		.4byte	0x20d
 10041 0815 03       		.uleb128 0x3
 10042 0816 91       		.byte	0x91
 10043 0817 A87F     		.sleb128 -88
 10044 0819 00       		.byte	0
 10045 081a 1D       		.uleb128 0x1d
 10046 081b 141B0000 		.4byte	.LBB30
 10047 081f 22000000 		.4byte	.LBE30-.LBB30
 10048 0823 36080000 		.4byte	0x836
 10049 0827 19       		.uleb128 0x19
 10050 0828 6900     		.ascii	"i\000"
 10051 082a 01       		.byte	0x1
 10052 082b 3B06     		.2byte	0x63b
 10053 082d 94000000 		.4byte	0x94
 10054 0831 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 223


 10055 0832 91       		.byte	0x91
 10056 0833 A47F     		.sleb128 -92
 10057 0835 00       		.byte	0
 10058 0836 1D       		.uleb128 0x1d
 10059 0837 361B0000 		.4byte	.LBB31
 10060 083b 22000000 		.4byte	.LBE31-.LBB31
 10061 083f 52080000 		.4byte	0x852
 10062 0843 19       		.uleb128 0x19
 10063 0844 6900     		.ascii	"i\000"
 10064 0846 01       		.byte	0x1
 10065 0847 3F06     		.2byte	0x63f
 10066 0849 94000000 		.4byte	0x94
 10067 084d 03       		.uleb128 0x3
 10068 084e 91       		.byte	0x91
 10069 084f A07F     		.sleb128 -96
 10070 0851 00       		.byte	0
 10071 0852 1D       		.uleb128 0x1d
 10072 0853 581B0000 		.4byte	.LBB32
 10073 0857 88000000 		.4byte	.LBE32-.LBB32
 10074 085b 6E080000 		.4byte	0x86e
 10075 085f 19       		.uleb128 0x19
 10076 0860 6900     		.ascii	"i\000"
 10077 0862 01       		.byte	0x1
 10078 0863 4306     		.2byte	0x643
 10079 0865 94000000 		.4byte	0x94
 10080 0869 03       		.uleb128 0x3
 10081 086a 91       		.byte	0x91
 10082 086b 9C7F     		.sleb128 -100
 10083 086d 00       		.byte	0
 10084 086e 1D       		.uleb128 0x1d
 10085 086f 6A1C0000 		.4byte	.LBB33
 10086 0873 56000000 		.4byte	.LBE33-.LBB33
 10087 0877 A4080000 		.4byte	0x8a4
 10088 087b 19       		.uleb128 0x19
 10089 087c 6900     		.ascii	"i\000"
 10090 087e 01       		.byte	0x1
 10091 087f 5606     		.2byte	0x656
 10092 0881 94000000 		.4byte	0x94
 10093 0885 03       		.uleb128 0x3
 10094 0886 91       		.byte	0x91
 10095 0887 987F     		.sleb128 -104
 10096 0889 11       		.uleb128 0x11
 10097 088a 701C0000 		.4byte	.LBB34
 10098 088e 44000000 		.4byte	.LBE34-.LBB34
 10099 0892 17       		.uleb128 0x17
 10100 0893 340D0000 		.4byte	.LASF92
 10101 0897 01       		.byte	0x1
 10102 0898 5806     		.2byte	0x658
 10103 089a 94000000 		.4byte	0x94
 10104 089e 03       		.uleb128 0x3
 10105 089f 91       		.byte	0x91
 10106 08a0 DC7E     		.sleb128 -164
 10107 08a2 00       		.byte	0
 10108 08a3 00       		.byte	0
 10109 08a4 11       		.uleb128 0x11
 10110 08a5 521D0000 		.4byte	.LBB35
 10111 08a9 B0000000 		.4byte	.LBE35-.LBB35
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 224


 10112 08ad 17       		.uleb128 0x17
 10113 08ae A4020000 		.4byte	.LASF93
 10114 08b2 01       		.byte	0x1
 10115 08b3 7F06     		.2byte	0x67f
 10116 08b5 94000000 		.4byte	0x94
 10117 08b9 03       		.uleb128 0x3
 10118 08ba 91       		.byte	0x91
 10119 08bb D87E     		.sleb128 -168
 10120 08bd 17       		.uleb128 0x17
 10121 08be DC000000 		.4byte	.LASF94
 10122 08c2 01       		.byte	0x1
 10123 08c3 8006     		.2byte	0x680
 10124 08c5 94000000 		.4byte	0x94
 10125 08c9 03       		.uleb128 0x3
 10126 08ca 91       		.byte	0x91
 10127 08cb D47E     		.sleb128 -172
 10128 08cd 17       		.uleb128 0x17
 10129 08ce 920E0000 		.4byte	.LASF95
 10130 08d2 01       		.byte	0x1
 10131 08d3 8106     		.2byte	0x681
 10132 08d5 94000000 		.4byte	0x94
 10133 08d9 03       		.uleb128 0x3
 10134 08da 91       		.byte	0x91
 10135 08db 947F     		.sleb128 -108
 10136 08dd 1D       		.uleb128 0x1d
 10137 08de 621D0000 		.4byte	.LBB36
 10138 08e2 36000000 		.4byte	.LBE36-.LBB36
 10139 08e6 F9080000 		.4byte	0x8f9
 10140 08ea 19       		.uleb128 0x19
 10141 08eb 6900     		.ascii	"i\000"
 10142 08ed 01       		.byte	0x1
 10143 08ee 8206     		.2byte	0x682
 10144 08f0 94000000 		.4byte	0x94
 10145 08f4 03       		.uleb128 0x3
 10146 08f5 91       		.byte	0x91
 10147 08f6 907F     		.sleb128 -112
 10148 08f8 00       		.byte	0
 10149 08f9 11       		.uleb128 0x11
 10150 08fa 9C1D0000 		.4byte	.LBB37
 10151 08fe 44000000 		.4byte	.LBE37-.LBB37
 10152 0902 19       		.uleb128 0x19
 10153 0903 6900     		.ascii	"i\000"
 10154 0905 01       		.byte	0x1
 10155 0906 8806     		.2byte	0x688
 10156 0908 94000000 		.4byte	0x94
 10157 090c 03       		.uleb128 0x3
 10158 090d 91       		.byte	0x91
 10159 090e 8C7F     		.sleb128 -116
 10160 0910 00       		.byte	0
 10161 0911 00       		.byte	0
 10162 0912 00       		.byte	0
 10163 0913 14       		.uleb128 0x14
 10164 0914 09050000 		.4byte	.LASF96
 10165 0918 01       		.byte	0x1
 10166 0919 9D06     		.2byte	0x69d
 10167 091b 00000000 		.4byte	.LFB76
 10168 091f 70000000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 225


 10169 0923 01       		.uleb128 0x1
 10170 0924 9C       		.byte	0x9c
 10171 0925 14       		.uleb128 0x14
 10172 0926 DB0F0000 		.4byte	.LASF97
 10173 092a 01       		.byte	0x1
 10174 092b B206     		.2byte	0x6b2
 10175 092d 00000000 		.4byte	.LFB77
 10176 0931 70010000 		.4byte	.LFE77-.LFB77
 10177 0935 01       		.uleb128 0x1
 10178 0936 9C       		.byte	0x9c
 10179 0937 15       		.uleb128 0x15
 10180 0938 5F080000 		.4byte	.LASF98
 10181 093c 01       		.byte	0x1
 10182 093d DA06     		.2byte	0x6da
 10183 093f D9000000 		.4byte	0xd9
 10184 0943 00000000 		.4byte	.LFB78
 10185 0947 E0000000 		.4byte	.LFE78-.LFB78
 10186 094b 01       		.uleb128 0x1
 10187 094c 9C       		.byte	0x9c
 10188 094d AC090000 		.4byte	0x9ac
 10189 0951 18       		.uleb128 0x18
 10190 0952 590F0000 		.4byte	.LASF99
 10191 0956 01       		.byte	0x1
 10192 0957 DA06     		.2byte	0x6da
 10193 0959 D9000000 		.4byte	0xd9
 10194 095d 02       		.uleb128 0x2
 10195 095e 91       		.byte	0x91
 10196 095f 67       		.sleb128 -25
 10197 0960 18       		.uleb128 0x18
 10198 0961 7A010000 		.4byte	.LASF100
 10199 0965 01       		.byte	0x1
 10200 0966 DA06     		.2byte	0x6da
 10201 0968 E5000000 		.4byte	0xe5
 10202 096c 02       		.uleb128 0x2
 10203 096d 91       		.byte	0x91
 10204 096e 64       		.sleb128 -28
 10205 096f 18       		.uleb128 0x18
 10206 0970 8D0E0000 		.4byte	.LASF101
 10207 0974 01       		.byte	0x1
 10208 0975 DA06     		.2byte	0x6da
 10209 0977 A2000000 		.4byte	0xa2
 10210 097b 02       		.uleb128 0x2
 10211 097c 91       		.byte	0x91
 10212 097d 66       		.sleb128 -26
 10213 097e 17       		.uleb128 0x17
 10214 097f 34080000 		.4byte	.LASF83
 10215 0983 01       		.byte	0x1
 10216 0984 DC06     		.2byte	0x6dc
 10217 0986 2A010000 		.4byte	0x12a
 10218 098a 02       		.uleb128 0x2
 10219 098b 91       		.byte	0x91
 10220 098c 6F       		.sleb128 -17
 10221 098d 17       		.uleb128 0x17
 10222 098e 05030000 		.4byte	.LASF102
 10223 0992 01       		.byte	0x1
 10224 0993 DD06     		.2byte	0x6dd
 10225 0995 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 226


 10226 0999 02       		.uleb128 0x2
 10227 099a 91       		.byte	0x91
 10228 099b 77       		.sleb128 -9
 10229 099c 17       		.uleb128 0x17
 10230 099d B80A0000 		.4byte	.LASF103
 10231 09a1 01       		.byte	0x1
 10232 09a2 DE06     		.2byte	0x6de
 10233 09a4 CE000000 		.4byte	0xce
 10234 09a8 02       		.uleb128 0x2
 10235 09a9 91       		.byte	0x91
 10236 09aa 70       		.sleb128 -16
 10237 09ab 00       		.byte	0
 10238 09ac 15       		.uleb128 0x15
 10239 09ad 470C0000 		.4byte	.LASF104
 10240 09b1 01       		.byte	0x1
 10241 09b2 1307     		.2byte	0x713
 10242 09b4 D9000000 		.4byte	0xd9
 10243 09b8 00000000 		.4byte	.LFB79
 10244 09bc E0000000 		.4byte	.LFE79-.LFB79
 10245 09c0 01       		.uleb128 0x1
 10246 09c1 9C       		.byte	0x9c
 10247 09c2 210A0000 		.4byte	0xa21
 10248 09c6 18       		.uleb128 0x18
 10249 09c7 590F0000 		.4byte	.LASF99
 10250 09cb 01       		.byte	0x1
 10251 09cc 1307     		.2byte	0x713
 10252 09ce D9000000 		.4byte	0xd9
 10253 09d2 02       		.uleb128 0x2
 10254 09d3 91       		.byte	0x91
 10255 09d4 6F       		.sleb128 -17
 10256 09d5 18       		.uleb128 0x18
 10257 09d6 7A010000 		.4byte	.LASF100
 10258 09da 01       		.byte	0x1
 10259 09db 1307     		.2byte	0x713
 10260 09dd D9000000 		.4byte	0xd9
 10261 09e1 02       		.uleb128 0x2
 10262 09e2 91       		.byte	0x91
 10263 09e3 6E       		.sleb128 -18
 10264 09e4 18       		.uleb128 0x18
 10265 09e5 8D0E0000 		.4byte	.LASF101
 10266 09e9 01       		.byte	0x1
 10267 09ea 1307     		.2byte	0x713
 10268 09ec A2000000 		.4byte	0xa2
 10269 09f0 02       		.uleb128 0x2
 10270 09f1 91       		.byte	0x91
 10271 09f2 6D       		.sleb128 -19
 10272 09f3 17       		.uleb128 0x17
 10273 09f4 34080000 		.4byte	.LASF83
 10274 09f8 01       		.byte	0x1
 10275 09f9 1507     		.2byte	0x715
 10276 09fb 2A010000 		.4byte	0x12a
 10277 09ff 02       		.uleb128 0x2
 10278 0a00 91       		.byte	0x91
 10279 0a01 72       		.sleb128 -14
 10280 0a02 17       		.uleb128 0x17
 10281 0a03 B80A0000 		.4byte	.LASF103
 10282 0a07 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 227


 10283 0a08 1607     		.2byte	0x716
 10284 0a0a CE000000 		.4byte	0xce
 10285 0a0e 02       		.uleb128 0x2
 10286 0a0f 91       		.byte	0x91
 10287 0a10 74       		.sleb128 -12
 10288 0a11 17       		.uleb128 0x17
 10289 0a12 05030000 		.4byte	.LASF102
 10290 0a16 01       		.byte	0x1
 10291 0a17 1707     		.2byte	0x717
 10292 0a19 A2000000 		.4byte	0xa2
 10293 0a1d 02       		.uleb128 0x2
 10294 0a1e 91       		.byte	0x91
 10295 0a1f 73       		.sleb128 -13
 10296 0a20 00       		.byte	0
 10297 0a21 14       		.uleb128 0x14
 10298 0a22 6C050000 		.4byte	.LASF105
 10299 0a26 01       		.byte	0x1
 10300 0a27 4607     		.2byte	0x746
 10301 0a29 00000000 		.4byte	.LFB80
 10302 0a2d 30000000 		.4byte	.LFE80-.LFB80
 10303 0a31 01       		.uleb128 0x1
 10304 0a32 9C       		.byte	0x9c
 10305 0a33 1E       		.uleb128 0x1e
 10306 0a34 DA0E0000 		.4byte	.LASF107
 10307 0a38 01       		.byte	0x1
 10308 0a39 5507     		.2byte	0x755
 10309 0a3b 00000000 		.4byte	.LFB81
 10310 0a3f E8000000 		.4byte	.LFE81-.LFB81
 10311 0a43 01       		.uleb128 0x1
 10312 0a44 9C       		.byte	0x9c
 10313 0a45 14       		.uleb128 0x14
 10314 0a46 2C050000 		.4byte	.LASF108
 10315 0a4a 01       		.byte	0x1
 10316 0a4b 6A07     		.2byte	0x76a
 10317 0a4d 00000000 		.4byte	.LFB82
 10318 0a51 54000000 		.4byte	.LFE82-.LFB82
 10319 0a55 01       		.uleb128 0x1
 10320 0a56 9C       		.byte	0x9c
 10321 0a57 14       		.uleb128 0x14
 10322 0a58 4E040000 		.4byte	.LASF109
 10323 0a5c 01       		.byte	0x1
 10324 0a5d 7D07     		.2byte	0x77d
 10325 0a5f 00000000 		.4byte	.LFB83
 10326 0a63 C4000000 		.4byte	.LFE83-.LFB83
 10327 0a67 01       		.uleb128 0x1
 10328 0a68 9C       		.byte	0x9c
 10329 0a69 15       		.uleb128 0x15
 10330 0a6a 6C0A0000 		.4byte	.LASF110
 10331 0a6e 01       		.byte	0x1
 10332 0a6f B007     		.2byte	0x7b0
 10333 0a71 FD000000 		.4byte	0xfd
 10334 0a75 00000000 		.4byte	.LFB84
 10335 0a79 98000000 		.4byte	.LFE84-.LFB84
 10336 0a7d 01       		.uleb128 0x1
 10337 0a7e 9C       		.byte	0x9c
 10338 0a7f B80A0000 		.4byte	0xab8
 10339 0a83 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 228


 10340 0a84 5800     		.ascii	"X\000"
 10341 0a86 01       		.byte	0x1
 10342 0a87 B007     		.2byte	0x7b0
 10343 0a89 FD000000 		.4byte	0xfd
 10344 0a8d 02       		.uleb128 0x2
 10345 0a8e 91       		.byte	0x91
 10346 0a8f 64       		.sleb128 -28
 10347 0a90 19       		.uleb128 0x19
 10348 0a91 5900     		.ascii	"Y\000"
 10349 0a93 01       		.byte	0x1
 10350 0a94 B107     		.2byte	0x7b1
 10351 0a96 FD000000 		.4byte	0xfd
 10352 0a9a 02       		.uleb128 0x2
 10353 0a9b 91       		.byte	0x91
 10354 0a9c 70       		.sleb128 -16
 10355 0a9d 19       		.uleb128 0x19
 10356 0a9e 4600     		.ascii	"F\000"
 10357 0aa0 01       		.byte	0x1
 10358 0aa1 B107     		.2byte	0x7b1
 10359 0aa3 FD000000 		.4byte	0xfd
 10360 0aa7 02       		.uleb128 0x2
 10361 0aa8 91       		.byte	0x91
 10362 0aa9 74       		.sleb128 -12
 10363 0aaa 19       		.uleb128 0x19
 10364 0aab 4500     		.ascii	"E\000"
 10365 0aad 01       		.byte	0x1
 10366 0aae B207     		.2byte	0x7b2
 10367 0ab0 94000000 		.4byte	0x94
 10368 0ab4 02       		.uleb128 0x2
 10369 0ab5 91       		.byte	0x91
 10370 0ab6 6C       		.sleb128 -20
 10371 0ab7 00       		.byte	0
 10372 0ab8 1F       		.uleb128 0x1f
 10373 0ab9 BD000000 		.4byte	.LASF112
 10374 0abd 01       		.byte	0x1
 10375 0abe C407     		.2byte	0x7c4
 10376 0ac0 00000000 		.4byte	.LFB85
 10377 0ac4 D4000000 		.4byte	.LFE85-.LFB85
 10378 0ac8 01       		.uleb128 0x1
 10379 0ac9 9C       		.byte	0x9c
 10380 0aca 150B0000 		.4byte	0xb15
 10381 0ace 18       		.uleb128 0x18
 10382 0acf B10B0000 		.4byte	.LASF113
 10383 0ad3 01       		.byte	0x1
 10384 0ad4 C407     		.2byte	0x7c4
 10385 0ad6 94000000 		.4byte	0x94
 10386 0ada 02       		.uleb128 0x2
 10387 0adb 91       		.byte	0x91
 10388 0adc 64       		.sleb128 -28
 10389 0add 17       		.uleb128 0x17
 10390 0ade 7F0B0000 		.4byte	.LASF114
 10391 0ae2 01       		.byte	0x1
 10392 0ae3 D007     		.2byte	0x7d0
 10393 0ae5 B8000000 		.4byte	0xb8
 10394 0ae9 02       		.uleb128 0x2
 10395 0aea 91       		.byte	0x91
 10396 0aeb 76       		.sleb128 -10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 229


 10397 0aec 11       		.uleb128 0x11
 10398 0aed 18000000 		.4byte	.LBB38
 10399 0af1 86000000 		.4byte	.LBE38-.LBB38
 10400 0af5 17       		.uleb128 0x17
 10401 0af6 730D0000 		.4byte	.LASF115
 10402 0afa 01       		.byte	0x1
 10403 0afb D407     		.2byte	0x7d4
 10404 0afd FD000000 		.4byte	0xfd
 10405 0b01 02       		.uleb128 0x2
 10406 0b02 91       		.byte	0x91
 10407 0b03 70       		.sleb128 -16
 10408 0b04 17       		.uleb128 0x17
 10409 0b05 5D100000 		.4byte	.LASF116
 10410 0b09 01       		.byte	0x1
 10411 0b0a E307     		.2byte	0x7e3
 10412 0b0c 94000000 		.4byte	0x94
 10413 0b10 02       		.uleb128 0x2
 10414 0b11 91       		.byte	0x91
 10415 0b12 6C       		.sleb128 -20
 10416 0b13 00       		.byte	0
 10417 0b14 00       		.byte	0
 10418 0b15 1F       		.uleb128 0x1f
 10419 0b16 FD060000 		.4byte	.LASF117
 10420 0b1a 01       		.byte	0x1
 10421 0b1b EF07     		.2byte	0x7ef
 10422 0b1d 00000000 		.4byte	.LFB86
 10423 0b21 1C000000 		.4byte	.LFE86-.LFB86
 10424 0b25 01       		.uleb128 0x1
 10425 0b26 9C       		.byte	0x9c
 10426 0b27 490B0000 		.4byte	0xb49
 10427 0b2b 16       		.uleb128 0x16
 10428 0b2c 636300   		.ascii	"cc\000"
 10429 0b2f 01       		.byte	0x1
 10430 0b30 EF07     		.2byte	0x7ef
 10431 0b32 94000000 		.4byte	0x94
 10432 0b36 02       		.uleb128 0x2
 10433 0b37 91       		.byte	0x91
 10434 0b38 74       		.sleb128 -12
 10435 0b39 16       		.uleb128 0x16
 10436 0b3a 76616C00 		.ascii	"val\000"
 10437 0b3e 01       		.byte	0x1
 10438 0b3f EF07     		.2byte	0x7ef
 10439 0b41 94000000 		.4byte	0x94
 10440 0b45 02       		.uleb128 0x2
 10441 0b46 91       		.byte	0x91
 10442 0b47 70       		.sleb128 -16
 10443 0b48 00       		.byte	0
 10444 0b49 1F       		.uleb128 0x1f
 10445 0b4a 76090000 		.4byte	.LASF118
 10446 0b4e 01       		.byte	0x1
 10447 0b4f F507     		.2byte	0x7f5
 10448 0b51 00000000 		.4byte	.LFB87
 10449 0b55 68000000 		.4byte	.LFE87-.LFB87
 10450 0b59 01       		.uleb128 0x1
 10451 0b5a 9C       		.byte	0x9c
 10452 0b5b 8D0B0000 		.4byte	0xb8d
 10453 0b5f 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 230


 10454 0b60 E5020000 		.4byte	.LASF119
 10455 0b64 01       		.byte	0x1
 10456 0b65 F507     		.2byte	0x7f5
 10457 0b67 94000000 		.4byte	0x94
 10458 0b6b 02       		.uleb128 0x2
 10459 0b6c 91       		.byte	0x91
 10460 0b6d 74       		.sleb128 -12
 10461 0b6e 18       		.uleb128 0x18
 10462 0b6f 7F0B0000 		.4byte	.LASF114
 10463 0b73 01       		.byte	0x1
 10464 0b74 F507     		.2byte	0x7f5
 10465 0b76 94000000 		.4byte	0x94
 10466 0b7a 02       		.uleb128 0x2
 10467 0b7b 91       		.byte	0x91
 10468 0b7c 70       		.sleb128 -16
 10469 0b7d 18       		.uleb128 0x18
 10470 0b7e 57080000 		.4byte	.LASF120
 10471 0b82 01       		.byte	0x1
 10472 0b83 F507     		.2byte	0x7f5
 10473 0b85 94000000 		.4byte	0x94
 10474 0b89 02       		.uleb128 0x2
 10475 0b8a 91       		.byte	0x91
 10476 0b8b 6C       		.sleb128 -20
 10477 0b8c 00       		.byte	0
 10478 0b8d 1F       		.uleb128 0x1f
 10479 0b8e B8050000 		.4byte	.LASF121
 10480 0b92 01       		.byte	0x1
 10481 0b93 0208     		.2byte	0x802
 10482 0b95 00000000 		.4byte	.LFB88
 10483 0b99 68000000 		.4byte	.LFE88-.LFB88
 10484 0b9d 01       		.uleb128 0x1
 10485 0b9e 9C       		.byte	0x9c
 10486 0b9f D10B0000 		.4byte	0xbd1
 10487 0ba3 18       		.uleb128 0x18
 10488 0ba4 E5020000 		.4byte	.LASF119
 10489 0ba8 01       		.byte	0x1
 10490 0ba9 0208     		.2byte	0x802
 10491 0bab 94000000 		.4byte	0x94
 10492 0baf 02       		.uleb128 0x2
 10493 0bb0 91       		.byte	0x91
 10494 0bb1 74       		.sleb128 -12
 10495 0bb2 18       		.uleb128 0x18
 10496 0bb3 9E040000 		.4byte	.LASF122
 10497 0bb7 01       		.byte	0x1
 10498 0bb8 0208     		.2byte	0x802
 10499 0bba 94000000 		.4byte	0x94
 10500 0bbe 02       		.uleb128 0x2
 10501 0bbf 91       		.byte	0x91
 10502 0bc0 70       		.sleb128 -16
 10503 0bc1 18       		.uleb128 0x18
 10504 0bc2 57080000 		.4byte	.LASF120
 10505 0bc6 01       		.byte	0x1
 10506 0bc7 0208     		.2byte	0x802
 10507 0bc9 94000000 		.4byte	0x94
 10508 0bcd 02       		.uleb128 0x2
 10509 0bce 91       		.byte	0x91
 10510 0bcf 6C       		.sleb128 -20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 231


 10511 0bd0 00       		.byte	0
 10512 0bd1 1F       		.uleb128 0x1f
 10513 0bd2 04060000 		.4byte	.LASF123
 10514 0bd6 01       		.byte	0x1
 10515 0bd7 0E08     		.2byte	0x80e
 10516 0bd9 00000000 		.4byte	.LFB89
 10517 0bdd 68000000 		.4byte	.LFE89-.LFB89
 10518 0be1 01       		.uleb128 0x1
 10519 0be2 9C       		.byte	0x9c
 10520 0be3 150C0000 		.4byte	0xc15
 10521 0be7 18       		.uleb128 0x18
 10522 0be8 A5010000 		.4byte	.LASF124
 10523 0bec 01       		.byte	0x1
 10524 0bed 0E08     		.2byte	0x80e
 10525 0bef 94000000 		.4byte	0x94
 10526 0bf3 02       		.uleb128 0x2
 10527 0bf4 91       		.byte	0x91
 10528 0bf5 74       		.sleb128 -12
 10529 0bf6 18       		.uleb128 0x18
 10530 0bf7 F2000000 		.4byte	.LASF125
 10531 0bfb 01       		.byte	0x1
 10532 0bfc 0E08     		.2byte	0x80e
 10533 0bfe 94000000 		.4byte	0x94
 10534 0c02 02       		.uleb128 0x2
 10535 0c03 91       		.byte	0x91
 10536 0c04 70       		.sleb128 -16
 10537 0c05 18       		.uleb128 0x18
 10538 0c06 57080000 		.4byte	.LASF120
 10539 0c0a 01       		.byte	0x1
 10540 0c0b 0E08     		.2byte	0x80e
 10541 0c0d 94000000 		.4byte	0x94
 10542 0c11 02       		.uleb128 0x2
 10543 0c12 91       		.byte	0x91
 10544 0c13 6C       		.sleb128 -20
 10545 0c14 00       		.byte	0
 10546 0c15 1F       		.uleb128 0x1f
 10547 0c16 0B0B0000 		.4byte	.LASF126
 10548 0c1a 01       		.byte	0x1
 10549 0c1b 1A08     		.2byte	0x81a
 10550 0c1d 00000000 		.4byte	.LFB90
 10551 0c21 6C000000 		.4byte	.LFE90-.LFB90
 10552 0c25 01       		.uleb128 0x1
 10553 0c26 9C       		.byte	0x9c
 10554 0c27 4A0C0000 		.4byte	0xc4a
 10555 0c2b 16       		.uleb128 0x16
 10556 0c2c 76616C00 		.ascii	"val\000"
 10557 0c30 01       		.byte	0x1
 10558 0c31 1A08     		.2byte	0x81a
 10559 0c33 94000000 		.4byte	0x94
 10560 0c37 02       		.uleb128 0x2
 10561 0c38 91       		.byte	0x91
 10562 0c39 74       		.sleb128 -12
 10563 0c3a 18       		.uleb128 0x18
 10564 0c3b 57080000 		.4byte	.LASF120
 10565 0c3f 01       		.byte	0x1
 10566 0c40 1A08     		.2byte	0x81a
 10567 0c42 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 232


 10568 0c46 02       		.uleb128 0x2
 10569 0c47 91       		.byte	0x91
 10570 0c48 70       		.sleb128 -16
 10571 0c49 00       		.byte	0
 10572 0c4a 14       		.uleb128 0x14
 10573 0c4b F1020000 		.4byte	.LASF127
 10574 0c4f 01       		.byte	0x1
 10575 0c50 2608     		.2byte	0x826
 10576 0c52 00000000 		.4byte	.LFB91
 10577 0c56 64000000 		.4byte	.LFE91-.LFB91
 10578 0c5a 01       		.uleb128 0x1
 10579 0c5b 9C       		.byte	0x9c
 10580 0c5c 1F       		.uleb128 0x1f
 10581 0c5d 05070000 		.4byte	.LASF128
 10582 0c61 01       		.byte	0x1
 10583 0c62 3E08     		.2byte	0x83e
 10584 0c64 00000000 		.4byte	.LFB92
 10585 0c68 D4090000 		.4byte	.LFE92-.LFB92
 10586 0c6c 01       		.uleb128 0x1
 10587 0c6d 9C       		.byte	0x9c
 10588 0c6e 530E0000 		.4byte	0xe53
 10589 0c72 1D       		.uleb128 0x1d
 10590 0c73 16000000 		.4byte	.LBB39
 10591 0c77 60050000 		.4byte	.LBE39-.LBB39
 10592 0c7b 230D0000 		.4byte	0xd23
 10593 0c7f 17       		.uleb128 0x17
 10594 0c80 FD010000 		.4byte	.LASF129
 10595 0c84 01       		.byte	0x1
 10596 0c85 4D08     		.2byte	0x84d
 10597 0c87 7C020000 		.4byte	0x27c
 10598 0c8b 03       		.uleb128 0x3
 10599 0c8c 91       		.byte	0x91
 10600 0c8d B87F     		.sleb128 -72
 10601 0c8f 19       		.uleb128 0x19
 10602 0c90 6900     		.ascii	"i\000"
 10603 0c92 01       		.byte	0x1
 10604 0c93 4E08     		.2byte	0x84e
 10605 0c95 CE000000 		.4byte	0xce
 10606 0c99 02       		.uleb128 0x2
 10607 0c9a 91       		.byte	0x91
 10608 0c9b 6C       		.sleb128 -20
 10609 0c9c 17       		.uleb128 0x17
 10610 0c9d 76040000 		.4byte	.LASF130
 10611 0ca1 01       		.byte	0x1
 10612 0ca2 4F08     		.2byte	0x84f
 10613 0ca4 A2000000 		.4byte	0xa2
 10614 0ca8 02       		.uleb128 0x2
 10615 0ca9 91       		.byte	0x91
 10616 0caa 57       		.sleb128 -41
 10617 0cab 17       		.uleb128 0x17
 10618 0cac 0C040000 		.4byte	.LASF131
 10619 0cb0 01       		.byte	0x1
 10620 0cb1 6308     		.2byte	0x863
 10621 0cb3 B8000000 		.4byte	0xb8
 10622 0cb7 02       		.uleb128 0x2
 10623 0cb8 91       		.byte	0x91
 10624 0cb9 54       		.sleb128 -44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 233


 10625 0cba 1D       		.uleb128 0x1d
 10626 0cbb B2000000 		.4byte	.LBB40
 10627 0cbf 76000000 		.4byte	.LBE40-.LBB40
 10628 0cc3 EC0C0000 		.4byte	0xcec
 10629 0cc7 19       		.uleb128 0x19
 10630 0cc8 6A00     		.ascii	"j\000"
 10631 0cca 01       		.byte	0x1
 10632 0ccb 5908     		.2byte	0x859
 10633 0ccd 94000000 		.4byte	0x94
 10634 0cd1 02       		.uleb128 0x2
 10635 0cd2 91       		.byte	0x91
 10636 0cd3 68       		.sleb128 -24
 10637 0cd4 11       		.uleb128 0x11
 10638 0cd5 B8000000 		.4byte	.LBB41
 10639 0cd9 64000000 		.4byte	.LBE41-.LBB41
 10640 0cdd 19       		.uleb128 0x19
 10641 0cde 6B00     		.ascii	"k\000"
 10642 0ce0 01       		.byte	0x1
 10643 0ce1 5B08     		.2byte	0x85b
 10644 0ce3 94000000 		.4byte	0x94
 10645 0ce7 02       		.uleb128 0x2
 10646 0ce8 91       		.byte	0x91
 10647 0ce9 64       		.sleb128 -28
 10648 0cea 00       		.byte	0
 10649 0ceb 00       		.byte	0
 10650 0cec 1D       		.uleb128 0x1d
 10651 0ced FA010000 		.4byte	.LBB42
 10652 0cf1 46000000 		.4byte	.LBE42-.LBB42
 10653 0cf5 090D0000 		.4byte	0xd09
 10654 0cf9 17       		.uleb128 0x17
 10655 0cfa E5010000 		.4byte	.LASF132
 10656 0cfe 01       		.byte	0x1
 10657 0cff 7B08     		.2byte	0x87b
 10658 0d01 B8000000 		.4byte	0xb8
 10659 0d05 02       		.uleb128 0x2
 10660 0d06 91       		.byte	0x91
 10661 0d07 52       		.sleb128 -46
 10662 0d08 00       		.byte	0
 10663 0d09 11       		.uleb128 0x11
 10664 0d0a 2A040000 		.4byte	.LBB43
 10665 0d0e 54000000 		.4byte	.LBE43-.LBB43
 10666 0d12 17       		.uleb128 0x17
 10667 0d13 E5010000 		.4byte	.LASF132
 10668 0d17 01       		.byte	0x1
 10669 0d18 B708     		.2byte	0x8b7
 10670 0d1a AD000000 		.4byte	0xad
 10671 0d1e 02       		.uleb128 0x2
 10672 0d1f 91       		.byte	0x91
 10673 0d20 50       		.sleb128 -48
 10674 0d21 00       		.byte	0
 10675 0d22 00       		.byte	0
 10676 0d23 1D       		.uleb128 0x1d
 10677 0d24 80050000 		.4byte	.LBB44
 10678 0d28 F0020000 		.4byte	.LBE44-.LBB44
 10679 0d2c 0B0E0000 		.4byte	0xe0b
 10680 0d30 17       		.uleb128 0x17
 10681 0d31 FD010000 		.4byte	.LASF129
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 234


 10682 0d35 01       		.byte	0x1
 10683 0d36 1309     		.2byte	0x913
 10684 0d38 7C020000 		.4byte	0x27c
 10685 0d3c 03       		.uleb128 0x3
 10686 0d3d 91       		.byte	0x91
 10687 0d3e B47F     		.sleb128 -76
 10688 0d40 19       		.uleb128 0x19
 10689 0d41 6900     		.ascii	"i\000"
 10690 0d43 01       		.byte	0x1
 10691 0d44 1409     		.2byte	0x914
 10692 0d46 CE000000 		.4byte	0xce
 10693 0d4a 02       		.uleb128 0x2
 10694 0d4b 91       		.byte	0x91
 10695 0d4c 60       		.sleb128 -32
 10696 0d4d 17       		.uleb128 0x17
 10697 0d4e 76040000 		.4byte	.LASF130
 10698 0d52 01       		.byte	0x1
 10699 0d53 1509     		.2byte	0x915
 10700 0d55 A2000000 		.4byte	0xa2
 10701 0d59 02       		.uleb128 0x2
 10702 0d5a 91       		.byte	0x91
 10703 0d5b 4F       		.sleb128 -49
 10704 0d5c 1D       		.uleb128 0x1d
 10705 0d5d B2050000 		.4byte	.LBB45
 10706 0d61 7C000000 		.4byte	.LBE45-.LBB45
 10707 0d65 790D0000 		.4byte	0xd79
 10708 0d69 17       		.uleb128 0x17
 10709 0d6a FF0D0000 		.4byte	.LASF133
 10710 0d6e 01       		.byte	0x1
 10711 0d6f 1909     		.2byte	0x919
 10712 0d71 A2000000 		.4byte	0xa2
 10713 0d75 02       		.uleb128 0x2
 10714 0d76 91       		.byte	0x91
 10715 0d77 4E       		.sleb128 -50
 10716 0d78 00       		.byte	0
 10717 0d79 11       		.uleb128 0x11
 10718 0d7a 42060000 		.4byte	.LBB46
 10719 0d7e B0010000 		.4byte	.LBE46-.LBB46
 10720 0d82 17       		.uleb128 0x17
 10721 0d83 C20E0000 		.4byte	.LASF134
 10722 0d87 01       		.byte	0x1
 10723 0d88 2409     		.2byte	0x924
 10724 0d8a CE000000 		.4byte	0xce
 10725 0d8e 02       		.uleb128 0x2
 10726 0d8f 91       		.byte	0x91
 10727 0d90 5C       		.sleb128 -36
 10728 0d91 11       		.uleb128 0x11
 10729 0d92 48060000 		.4byte	.LBB47
 10730 0d96 9C010000 		.4byte	.LBE47-.LBB47
 10731 0d9a 17       		.uleb128 0x17
 10732 0d9b 27040000 		.4byte	.LASF79
 10733 0d9f 01       		.byte	0x1
 10734 0da0 2609     		.2byte	0x926
 10735 0da2 B8000000 		.4byte	0xb8
 10736 0da6 02       		.uleb128 0x2
 10737 0da7 91       		.byte	0x91
 10738 0da8 4C       		.sleb128 -52
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 235


 10739 0da9 11       		.uleb128 0x11
 10740 0daa 56060000 		.4byte	.LBB48
 10741 0dae 8E010000 		.4byte	.LBE48-.LBB48
 10742 0db2 17       		.uleb128 0x17
 10743 0db3 D0050000 		.4byte	.LASF135
 10744 0db7 01       		.byte	0x1
 10745 0db8 2709     		.2byte	0x927
 10746 0dba CE000000 		.4byte	0xce
 10747 0dbe 02       		.uleb128 0x2
 10748 0dbf 91       		.byte	0x91
 10749 0dc0 58       		.sleb128 -40
 10750 0dc1 11       		.uleb128 0x11
 10751 0dc2 B0060000 		.4byte	.LBB49
 10752 0dc6 26010000 		.4byte	.LBE49-.LBB49
 10753 0dca 17       		.uleb128 0x17
 10754 0dcb DA030000 		.4byte	.LASF136
 10755 0dcf 01       		.byte	0x1
 10756 0dd0 3109     		.2byte	0x931
 10757 0dd2 B8000000 		.4byte	0xb8
 10758 0dd6 02       		.uleb128 0x2
 10759 0dd7 91       		.byte	0x91
 10760 0dd8 4A       		.sleb128 -54
 10761 0dd9 17       		.uleb128 0x17
 10762 0dda DC0C0000 		.4byte	.LASF137
 10763 0dde 01       		.byte	0x1
 10764 0ddf 3209     		.2byte	0x932
 10765 0de1 A2000000 		.4byte	0xa2
 10766 0de5 02       		.uleb128 0x2
 10767 0de6 91       		.byte	0x91
 10768 0de7 49       		.sleb128 -55
 10769 0de8 17       		.uleb128 0x17
 10770 0de9 21010000 		.4byte	.LASF138
 10771 0ded 01       		.byte	0x1
 10772 0dee 3309     		.2byte	0x933
 10773 0df0 A2000000 		.4byte	0xa2
 10774 0df4 02       		.uleb128 0x2
 10775 0df5 91       		.byte	0x91
 10776 0df6 48       		.sleb128 -56
 10777 0df7 17       		.uleb128 0x17
 10778 0df8 5F030000 		.4byte	.LASF80
 10779 0dfc 01       		.byte	0x1
 10780 0dfd 3609     		.2byte	0x936
 10781 0dff B8000000 		.4byte	0xb8
 10782 0e03 02       		.uleb128 0x2
 10783 0e04 91       		.byte	0x91
 10784 0e05 46       		.sleb128 -58
 10785 0e06 00       		.byte	0
 10786 0e07 00       		.byte	0
 10787 0e08 00       		.byte	0
 10788 0e09 00       		.byte	0
 10789 0e0a 00       		.byte	0
 10790 0e0b 11       		.uleb128 0x11
 10791 0e0c 7A080000 		.4byte	.LBB50
 10792 0e10 14010000 		.4byte	.LBE50-.LBB50
 10793 0e14 17       		.uleb128 0x17
 10794 0e15 FD010000 		.4byte	.LASF129
 10795 0e19 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 236


 10796 0e1a 5A09     		.2byte	0x95a
 10797 0e1c 7C020000 		.4byte	0x27c
 10798 0e20 03       		.uleb128 0x3
 10799 0e21 91       		.byte	0x91
 10800 0e22 B07F     		.sleb128 -80
 10801 0e24 19       		.uleb128 0x19
 10802 0e25 6900     		.ascii	"i\000"
 10803 0e27 01       		.byte	0x1
 10804 0e28 5B09     		.2byte	0x95b
 10805 0e2a CE000000 		.4byte	0xce
 10806 0e2e 02       		.uleb128 0x2
 10807 0e2f 91       		.byte	0x91
 10808 0e30 40       		.sleb128 -64
 10809 0e31 17       		.uleb128 0x17
 10810 0e32 3A050000 		.4byte	.LASF139
 10811 0e36 01       		.byte	0x1
 10812 0e37 6409     		.2byte	0x964
 10813 0e39 B8000000 		.4byte	0xb8
 10814 0e3d 03       		.uleb128 0x3
 10815 0e3e 91       		.byte	0x91
 10816 0e3f BE7F     		.sleb128 -66
 10817 0e41 17       		.uleb128 0x17
 10818 0e42 E5010000 		.4byte	.LASF132
 10819 0e46 01       		.byte	0x1
 10820 0e47 7209     		.2byte	0x972
 10821 0e49 B8000000 		.4byte	0xb8
 10822 0e4d 03       		.uleb128 0x3
 10823 0e4e 91       		.byte	0x91
 10824 0e4f BC7F     		.sleb128 -68
 10825 0e51 00       		.byte	0
 10826 0e52 00       		.byte	0
 10827 0e53 1F       		.uleb128 0x1f
 10828 0e54 8C030000 		.4byte	.LASF140
 10829 0e58 01       		.byte	0x1
 10830 0e59 8309     		.2byte	0x983
 10831 0e5b 00000000 		.4byte	.LFB93
 10832 0e5f 48010000 		.4byte	.LFE93-.LFB93
 10833 0e63 01       		.uleb128 0x1
 10834 0e64 9C       		.byte	0x9c
 10835 0e65 9F0E0000 		.4byte	0xe9f
 10836 0e69 18       		.uleb128 0x18
 10837 0e6a 4E0B0000 		.4byte	.LASF141
 10838 0e6e 01       		.byte	0x1
 10839 0e6f 8309     		.2byte	0x983
 10840 0e71 D9000000 		.4byte	0xd9
 10841 0e75 02       		.uleb128 0x2
 10842 0e76 91       		.byte	0x91
 10843 0e77 6F       		.sleb128 -17
 10844 0e78 18       		.uleb128 0x18
 10845 0e79 9F0C0000 		.4byte	.LASF142
 10846 0e7d 01       		.byte	0x1
 10847 0e7e 8309     		.2byte	0x983
 10848 0e80 9F0E0000 		.4byte	0xe9f
 10849 0e84 02       		.uleb128 0x2
 10850 0e85 91       		.byte	0x91
 10851 0e86 68       		.sleb128 -24
 10852 0e87 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 237


 10853 0e88 48000000 		.4byte	.LBB51
 10854 0e8c 54000000 		.4byte	.LBE51-.LBB51
 10855 0e90 19       		.uleb128 0x19
 10856 0e91 6900     		.ascii	"i\000"
 10857 0e93 01       		.byte	0x1
 10858 0e94 8F09     		.2byte	0x98f
 10859 0e96 94000000 		.4byte	0x94
 10860 0e9a 02       		.uleb128 0x2
 10861 0e9b 91       		.byte	0x91
 10862 0e9c 74       		.sleb128 -12
 10863 0e9d 00       		.byte	0
 10864 0e9e 00       		.byte	0
 10865 0e9f 20       		.uleb128 0x20
 10866 0ea0 04       		.byte	0x4
 10867 0ea1 D9000000 		.4byte	0xd9
 10868 0ea5 07       		.uleb128 0x7
 10869 0ea6 D9000000 		.4byte	0xd9
 10870 0eaa B50E0000 		.4byte	0xeb5
 10871 0eae 08       		.uleb128 0x8
 10872 0eaf 36010000 		.4byte	0x136
 10873 0eb3 01       		.byte	0x1
 10874 0eb4 00       		.byte	0
 10875 0eb5 21       		.uleb128 0x21
 10876 0eb6 DA040000 		.4byte	.LASF143
 10877 0eba 01       		.byte	0x1
 10878 0ebb E9       		.byte	0xe9
 10879 0ebc A50E0000 		.4byte	0xea5
 10880 0ec0 05       		.uleb128 0x5
 10881 0ec1 03       		.byte	0x3
 10882 0ec2 64000000 		.4byte	eepromArray
 10883 0ec6 22       		.uleb128 0x22
 10884 0ec7 370F0000 		.4byte	.LASF144
 10885 0ecb 08       		.byte	0x8
 10886 0ecc F3       		.byte	0xf3
 10887 0ecd 2A010000 		.4byte	0x12a
 10888 0ed1 22       		.uleb128 0x22
 10889 0ed2 CC0F0000 		.4byte	.LASF145
 10890 0ed6 08       		.byte	0x8
 10891 0ed7 F9       		.byte	0xf9
 10892 0ed8 2A010000 		.4byte	0x12a
 10893 0edc 07       		.uleb128 0x7
 10894 0edd D9000000 		.4byte	0xd9
 10895 0ee1 EC0E0000 		.4byte	0xeec
 10896 0ee5 08       		.uleb128 0x8
 10897 0ee6 36010000 		.4byte	0x136
 10898 0eea 3F       		.byte	0x3f
 10899 0eeb 00       		.byte	0
 10900 0eec 22       		.uleb128 0x22
 10901 0eed D7080000 		.4byte	.LASF146
 10902 0ef1 08       		.byte	0x8
 10903 0ef2 FA       		.byte	0xfa
 10904 0ef3 DC0E0000 		.4byte	0xedc
 10905 0ef7 22       		.uleb128 0x22
 10906 0ef8 52050000 		.4byte	.LASF147
 10907 0efc 08       		.byte	0x8
 10908 0efd FE       		.byte	0xfe
 10909 0efe 2A010000 		.4byte	0x12a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 238


 10910 0f02 22       		.uleb128 0x22
 10911 0f03 7C0F0000 		.4byte	.LASF148
 10912 0f07 08       		.byte	0x8
 10913 0f08 FF       		.byte	0xff
 10914 0f09 DC0E0000 		.4byte	0xedc
 10915 0f0d 22       		.uleb128 0x22
 10916 0f0e A1000000 		.4byte	.LASF149
 10917 0f12 09       		.byte	0x9
 10918 0f13 82       		.byte	0x82
 10919 0f14 BF010000 		.4byte	0x1bf
 10920 0f18 07       		.uleb128 0x7
 10921 0f19 290F0000 		.4byte	0xf29
 10922 0f1d 290F0000 		.4byte	0xf29
 10923 0f21 23       		.uleb128 0x23
 10924 0f22 36010000 		.4byte	0x136
 10925 0f26 FF03     		.2byte	0x3ff
 10926 0f28 00       		.byte	0
 10927 0f29 24       		.uleb128 0x24
 10928 0f2a A2000000 		.4byte	0xa2
 10929 0f2e 25       		.uleb128 0x25
 10930 0f2f FF070000 		.4byte	.LASF150
 10931 0f33 01       		.byte	0x1
 10932 0f34 F6       		.byte	0xf6
 10933 0f35 3F0F0000 		.4byte	0xf3f
 10934 0f39 05       		.uleb128 0x5
 10935 0f3a 03       		.byte	0x3
 10936 0f3b 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 10937 0f3f 24       		.uleb128 0x24
 10938 0f40 180F0000 		.4byte	0xf18
 10939 0f44 22       		.uleb128 0x22
 10940 0f45 4D060000 		.4byte	.LASF151
 10941 0f49 0A       		.byte	0xa
 10942 0f4a F9       		.byte	0xf9
 10943 0f4b D9000000 		.4byte	0xd9
 10944 0f4f 26       		.uleb128 0x26
 10945 0f50 8E0A0000 		.4byte	.LASF152
 10946 0f54 0B       		.byte	0xb
 10947 0f55 1207     		.2byte	0x712
 10948 0f57 5B0F0000 		.4byte	0xf5b
 10949 0f5b 06       		.uleb128 0x6
 10950 0f5c C3000000 		.4byte	0xc3
 10951 0f60 07       		.uleb128 0x7
 10952 0f61 03020000 		.4byte	0x203
 10953 0f65 700F0000 		.4byte	0xf70
 10954 0f69 08       		.uleb128 0x8
 10955 0f6a 36010000 		.4byte	0x136
 10956 0f6e FF       		.byte	0xff
 10957 0f6f 00       		.byte	0
 10958 0f70 27       		.uleb128 0x27
 10959 0f71 04010000 		.4byte	.LASF153
 10960 0f75 01       		.byte	0x1
 10961 0f76 5E01     		.2byte	0x15e
 10962 0f78 820F0000 		.4byte	0xf82
 10963 0f7c 05       		.uleb128 0x5
 10964 0f7d 03       		.byte	0x3
 10965 0f7e 00000000 		.4byte	I2Cbuff1
 10966 0f82 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 239


 10967 0f83 600F0000 		.4byte	0xf60
 10968 0f87 07       		.uleb128 0x7
 10969 0f88 A2000000 		.4byte	0xa2
 10970 0f8c 980F0000 		.4byte	0xf98
 10971 0f90 23       		.uleb128 0x23
 10972 0f91 36010000 		.4byte	0x136
 10973 0f95 FF07     		.2byte	0x7ff
 10974 0f97 00       		.byte	0
 10975 0f98 25       		.uleb128 0x25
 10976 0f99 DA0D0000 		.4byte	.LASF154
 10977 0f9d 01       		.byte	0x1
 10978 0f9e 17       		.byte	0x17
 10979 0f9f 870F0000 		.4byte	0xf87
 10980 0fa3 05       		.uleb128 0x5
 10981 0fa4 03       		.byte	0x3
 10982 0fa5 00000000 		.4byte	sysexBuffer
 10983 0fa9 25       		.uleb128 0x25
 10984 0faa 4A030000 		.4byte	.LASF155
 10985 0fae 01       		.byte	0x1
 10986 0faf 18       		.byte	0x18
 10987 0fb0 CE000000 		.4byte	0xce
 10988 0fb4 05       		.uleb128 0x5
 10989 0fb5 03       		.byte	0x3
 10990 0fb6 00000000 		.4byte	sysexPointer
 10991 0fba 25       		.uleb128 0x25
 10992 0fbb 3F0B0000 		.4byte	.LASF156
 10993 0fbf 01       		.byte	0x1
 10994 0fc0 19       		.byte	0x19
 10995 0fc1 A2000000 		.4byte	0xa2
 10996 0fc5 05       		.uleb128 0x5
 10997 0fc6 03       		.byte	0x3
 10998 0fc7 00000000 		.4byte	receivingSysex
 10999 0fcb 25       		.uleb128 0x25
 11000 0fcc 66060000 		.4byte	.LASF157
 11001 0fd0 01       		.byte	0x1
 11002 0fd1 1A       		.byte	0x1a
 11003 0fd2 A2000000 		.4byte	0xa2
 11004 0fd6 05       		.uleb128 0x5
 11005 0fd7 03       		.byte	0x3
 11006 0fd8 00000000 		.4byte	parsingSysex
 11007 0fdc 07       		.uleb128 0x7
 11008 0fdd 03020000 		.4byte	0x203
 11009 0fe1 ED0F0000 		.4byte	0xfed
 11010 0fe5 23       		.uleb128 0x23
 11011 0fe6 36010000 		.4byte	0x136
 11012 0fea FF07     		.2byte	0x7ff
 11013 0fec 00       		.byte	0
 11014 0fed 25       		.uleb128 0x25
 11015 0fee 13000000 		.4byte	.LASF158
 11016 0ff2 01       		.byte	0x1
 11017 0ff3 1B       		.byte	0x1b
 11018 0ff4 FE0F0000 		.4byte	0xffe
 11019 0ff8 05       		.uleb128 0x5
 11020 0ff9 03       		.byte	0x3
 11021 0ffa 00000000 		.4byte	presetArray
 11022 0ffe 06       		.uleb128 0x6
 11023 0fff DC0F0000 		.4byte	0xfdc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 240


 11024 1003 25       		.uleb128 0x25
 11025 1004 90020000 		.4byte	.LASF159
 11026 1008 01       		.byte	0x1
 11027 1009 1C       		.byte	0x1c
 11028 100a A2000000 		.4byte	0xa2
 11029 100e 05       		.uleb128 0x5
 11030 100f 03       		.byte	0x3
 11031 1010 00000000 		.4byte	presetNumberToWrite
 11032 1014 25       		.uleb128 0x25
 11033 1015 440D0000 		.4byte	.LASF160
 11034 1019 01       		.byte	0x1
 11035 101a 1D       		.byte	0x1d
 11036 101b A2000000 		.4byte	0xa2
 11037 101f 05       		.uleb128 0x5
 11038 1020 03       		.byte	0x3
 11039 1021 00000000 		.4byte	copedentNumberToWrite
 11040 1025 25       		.uleb128 0x25
 11041 1026 35020000 		.4byte	.LASF161
 11042 102a 01       		.byte	0x1
 11043 102b 1E       		.byte	0x1e
 11044 102c A2000000 		.4byte	0xa2
 11045 1030 05       		.uleb128 0x5
 11046 1031 03       		.byte	0x3
 11047 1032 00000000 		.4byte	sendMessageEnd
 11048 1036 25       		.uleb128 0x25
 11049 1037 C40D0000 		.4byte	.LASF162
 11050 103b 01       		.byte	0x1
 11051 103c 20       		.byte	0x20
 11052 103d A2000000 		.4byte	0xa2
 11053 1041 05       		.uleb128 0x5
 11054 1042 03       		.byte	0x3
 11055 1043 00000000 		.4byte	sendSingleParamUpdate
 11056 1047 25       		.uleb128 0x25
 11057 1048 490E0000 		.4byte	.LASF163
 11058 104c 01       		.byte	0x1
 11059 104d 21       		.byte	0x21
 11060 104e A2000000 		.4byte	0xa2
 11061 1052 05       		.uleb128 0x5
 11062 1053 03       		.byte	0x3
 11063 1054 00000000 		.4byte	singleParamToUpdateHigh
 11064 1058 25       		.uleb128 0x25
 11065 1059 9B0A0000 		.4byte	.LASF164
 11066 105d 01       		.byte	0x1
 11067 105e 22       		.byte	0x22
 11068 105f A2000000 		.4byte	0xa2
 11069 1063 05       		.uleb128 0x5
 11070 1064 03       		.byte	0x3
 11071 1065 00000000 		.4byte	singleParamToUpdateLow
 11072 1069 25       		.uleb128 0x25
 11073 106a 790A0000 		.4byte	.LASF165
 11074 106e 01       		.byte	0x1
 11075 106f 23       		.byte	0x23
 11076 1070 A2000000 		.4byte	0xa2
 11077 1074 05       		.uleb128 0x5
 11078 1075 03       		.byte	0x3
 11079 1076 00000000 		.4byte	singleParamValueHigh
 11080 107a 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 241


 11081 107b F0050000 		.4byte	.LASF166
 11082 107f 01       		.byte	0x1
 11083 1080 24       		.byte	0x24
 11084 1081 A2000000 		.4byte	0xa2
 11085 1085 05       		.uleb128 0x5
 11086 1086 03       		.byte	0x3
 11087 1087 00000000 		.4byte	singleParamValueLow
 11088 108b 25       		.uleb128 0x25
 11089 108c 00000000 		.4byte	.LASF167
 11090 1090 01       		.byte	0x1
 11091 1091 30       		.byte	0x30
 11092 1092 A2000000 		.4byte	0xa2
 11093 1096 05       		.uleb128 0x5
 11094 1097 03       		.byte	0x3
 11095 1098 00000000 		.4byte	presetArraySection
 11096 109c 25       		.uleb128 0x25
 11097 109d C9090000 		.4byte	.LASF168
 11098 10a1 01       		.byte	0x1
 11099 10a2 32       		.byte	0x32
 11100 10a3 B8000000 		.4byte	0xb8
 11101 10a7 05       		.uleb128 0x5
 11102 10a8 03       		.byte	0x3
 11103 10a9 00000000 		.4byte	messageArraySendCount
 11104 10ad 25       		.uleb128 0x25
 11105 10ae 6B0E0000 		.4byte	.LASF169
 11106 10b2 01       		.byte	0x1
 11107 10b3 33       		.byte	0x33
 11108 10b4 B8000000 		.4byte	0xb8
 11109 10b8 05       		.uleb128 0x5
 11110 10b9 03       		.byte	0x3
 11111 10ba 00000000 		.4byte	messageArraySize
 11112 10be 25       		.uleb128 0x25
 11113 10bf DB060000 		.4byte	.LASF170
 11114 10c3 01       		.byte	0x1
 11115 10c4 35       		.byte	0x35
 11116 10c5 A2000000 		.4byte	0xa2
 11117 10c9 05       		.uleb128 0x5
 11118 10ca 03       		.byte	0x3
 11119 10cb 00000000 		.4byte	sysexMessageInProgress
 11120 10cf 25       		.uleb128 0x25
 11121 10d0 E60D0000 		.4byte	.LASF171
 11122 10d4 01       		.byte	0x1
 11123 10d5 37       		.byte	0x37
 11124 10d6 A2000000 		.4byte	0xa2
 11125 10da 05       		.uleb128 0x5
 11126 10db 03       		.byte	0x3
 11127 10dc 00000000 		.4byte	bufCount
 11128 10e0 25       		.uleb128 0x25
 11129 10e1 33000000 		.4byte	.LASF172
 11130 10e5 01       		.byte	0x1
 11131 10e6 38       		.byte	0x38
 11132 10e7 03020000 		.4byte	0x203
 11133 10eb 05       		.uleb128 0x5
 11134 10ec 03       		.byte	0x3
 11135 10ed 00000000 		.4byte	sendingMessage
 11136 10f1 25       		.uleb128 0x25
 11137 10f2 22030000 		.4byte	.LASF173
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 242


 11138 10f6 01       		.byte	0x1
 11139 10f7 39       		.byte	0x39
 11140 10f8 03020000 		.4byte	0x203
 11141 10fc 05       		.uleb128 0x5
 11142 10fd 03       		.byte	0x3
 11143 10fe 00000000 		.4byte	sendKnobs
 11144 1102 25       		.uleb128 0x25
 11145 1103 6E020000 		.4byte	.LASF174
 11146 1107 01       		.byte	0x1
 11147 1108 3A       		.byte	0x3a
 11148 1109 CE000000 		.4byte	0xce
 11149 110d 05       		.uleb128 0x5
 11150 110e 03       		.byte	0x3
 11151 110f 00000000 		.4byte	currentFloat
 11152 1113 25       		.uleb128 0x25
 11153 1114 D1030000 		.4byte	.LASF175
 11154 1118 01       		.byte	0x1
 11155 1119 3B       		.byte	0x3b
 11156 111a CE000000 		.4byte	0xce
 11157 111e 05       		.uleb128 0x5
 11158 111f 03       		.byte	0x3
 11159 1120 00000000 		.4byte	mapCount
 11160 1124 25       		.uleb128 0x25
 11161 1125 94010000 		.4byte	.LASF176
 11162 1129 01       		.byte	0x1
 11163 112a 3D       		.byte	0x3d
 11164 112b B8000000 		.4byte	0xb8
 11165 112f 05       		.uleb128 0x5
 11166 1130 03       		.byte	0x3
 11167 1131 00000000 		.4byte	valsCount
 11168 1135 25       		.uleb128 0x25
 11169 1136 5A040000 		.4byte	.LASF177
 11170 113a 01       		.byte	0x1
 11171 113b 3E       		.byte	0x3e
 11172 113c B8000000 		.4byte	0xb8
 11173 1140 05       		.uleb128 0x5
 11174 1141 03       		.byte	0x3
 11175 1142 00000000 		.4byte	mapCountExpectation
 11176 1146 25       		.uleb128 0x25
 11177 1147 F8000000 		.4byte	.LASF178
 11178 114b 01       		.byte	0x1
 11179 114c 3F       		.byte	0x3f
 11180 114d B8000000 		.4byte	0xb8
 11181 1151 05       		.uleb128 0x5
 11182 1152 03       		.byte	0x3
 11183 1153 00000000 		.4byte	numMappings
 11184 1157 25       		.uleb128 0x25
 11185 1158 970D0000 		.4byte	.LASF179
 11186 115c 01       		.byte	0x1
 11187 115d 40       		.byte	0x40
 11188 115e 03020000 		.4byte	0x203
 11189 1162 05       		.uleb128 0x5
 11190 1163 03       		.byte	0x3
 11191 1164 00000000 		.4byte	parseThatMF
 11192 1168 25       		.uleb128 0x25
 11193 1169 03040000 		.4byte	.LASF180
 11194 116d 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 243


 11195 116e 41       		.byte	0x41
 11196 116f 79110000 		.4byte	0x1179
 11197 1173 05       		.uleb128 0x5
 11198 1174 03       		.byte	0x3
 11199 1175 00000000 		.4byte	valCheck
 11200 1179 06       		.uleb128 0x6
 11201 117a FD000000 		.4byte	0xfd
 11202 117e 25       		.uleb128 0x25
 11203 117f E50C0000 		.4byte	.LASF181
 11204 1183 01       		.byte	0x1
 11205 1184 42       		.byte	0x42
 11206 1185 79110000 		.4byte	0x1179
 11207 1189 05       		.uleb128 0x5
 11208 118a 03       		.byte	0x3
 11209 118b 00000000 		.4byte	testVal
 11210 118f 25       		.uleb128 0x25
 11211 1190 7D080000 		.4byte	.LASF182
 11212 1194 01       		.byte	0x1
 11213 1195 44       		.byte	0x44
 11214 1196 94000000 		.4byte	0x94
 11215 119a 05       		.uleb128 0x5
 11216 119b 03       		.byte	0x3
 11217 119c 00000000 		.4byte	numStrings
 11218 11a0 25       		.uleb128 0x25
 11219 11a1 7B0D0000 		.4byte	.LASF183
 11220 11a5 01       		.byte	0x1
 11221 11a6 4A       		.byte	0x4a
 11222 11a7 2A010000 		.4byte	0x12a
 11223 11ab 05       		.uleb128 0x5
 11224 11ac 03       		.byte	0x3
 11225 11ad 00000000 		.4byte	usbActivityCounter
 11226 11b1 25       		.uleb128 0x25
 11227 11b2 9F0C0000 		.4byte	.LASF142
 11228 11b6 01       		.byte	0x1
 11229 11b7 4B       		.byte	0x4b
 11230 11b8 3D010000 		.4byte	0x13d
 11231 11bc 05       		.uleb128 0x5
 11232 11bd 03       		.byte	0x3
 11233 11be 00000000 		.4byte	midiMsg
 11234 11c2 25       		.uleb128 0x25
 11235 11c3 10100000 		.4byte	.LASF184
 11236 11c7 01       		.byte	0x1
 11237 11c8 4C       		.byte	0x4c
 11238 11c9 A2000000 		.4byte	0xa2
 11239 11cd 05       		.uleb128 0x5
 11240 11ce 03       		.byte	0x3
 11241 11cf 00000000 		.4byte	currentVBUS
 11242 11d3 25       		.uleb128 0x25
 11243 11d4 01100000 		.4byte	.LASF185
 11244 11d8 01       		.byte	0x1
 11245 11d9 4D       		.byte	0x4d
 11246 11da A2000000 		.4byte	0xa2
 11247 11de 05       		.uleb128 0x5
 11248 11df 03       		.byte	0x3
 11249 11e0 00000000 		.4byte	prevVBUS
 11250 11e4 25       		.uleb128 0x25
 11251 11e5 B90D0000 		.4byte	.LASF186
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 244


 11252 11e9 01       		.byte	0x1
 11253 11ea 4E       		.byte	0x4e
 11254 11eb 03020000 		.4byte	0x203
 11255 11ef 05       		.uleb128 0x5
 11256 11f0 03       		.byte	0x3
 11257 11f1 00000000 		.4byte	USB_active
 11258 11f5 25       		.uleb128 0x25
 11259 11f6 BA090000 		.4byte	.LASF187
 11260 11fa 01       		.byte	0x1
 11261 11fb 4F       		.byte	0x4f
 11262 11fc 03020000 		.4byte	0x203
 11263 1200 05       		.uleb128 0x5
 11264 1201 03       		.byte	0x3
 11265 1202 00000000 		.4byte	USB_check_flag
 11266 1206 07       		.uleb128 0x7
 11267 1207 D9000000 		.4byte	0xd9
 11268 120b 16120000 		.4byte	0x1216
 11269 120f 08       		.uleb128 0x8
 11270 1210 36010000 		.4byte	0x136
 11271 1214 1F       		.byte	0x1f
 11272 1215 00       		.byte	0
 11273 1216 25       		.uleb128 0x25
 11274 1217 610F0000 		.4byte	.LASF188
 11275 121b 01       		.byte	0x1
 11276 121c 52       		.byte	0x52
 11277 121d 06120000 		.4byte	0x1206
 11278 1221 05       		.uleb128 0x5
 11279 1222 03       		.byte	0x3
 11280 1223 00000000 		.4byte	inBuffer
 11281 1227 25       		.uleb128 0x25
 11282 1228 E1100000 		.4byte	.LASF189
 11283 122c 01       		.byte	0x1
 11284 122d 54       		.byte	0x54
 11285 122e 06120000 		.4byte	0x1206
 11286 1232 05       		.uleb128 0x5
 11287 1233 03       		.byte	0x3
 11288 1234 00000000 		.4byte	myArray
 11289 1238 25       		.uleb128 0x25
 11290 1239 7F100000 		.4byte	.LASF190
 11291 123d 01       		.byte	0x1
 11292 123e 55       		.byte	0x55
 11293 123f A50E0000 		.4byte	0xea5
 11294 1243 05       		.uleb128 0x5
 11295 1244 03       		.byte	0x3
 11296 1245 00000000 		.4byte	myInputArray
 11297 1249 07       		.uleb128 0x7
 11298 124a C3000000 		.4byte	0xc3
 11299 124e 59120000 		.4byte	0x1259
 11300 1252 08       		.uleb128 0x8
 11301 1253 36010000 		.4byte	0x136
 11302 1257 01       		.byte	0x1
 11303 1258 00       		.byte	0
 11304 1259 25       		.uleb128 0x25
 11305 125a 43080000 		.4byte	.LASF191
 11306 125e 01       		.byte	0x1
 11307 125f 56       		.byte	0x56
 11308 1260 49120000 		.4byte	0x1249
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 245


 11309 1264 05       		.uleb128 0x5
 11310 1265 03       		.byte	0x3
 11311 1266 00000000 		.4byte	linearPotValue32Bit
 11312 126a 28       		.uleb128 0x28
 11313 126b 6900     		.ascii	"i\000"
 11314 126d 01       		.byte	0x1
 11315 126e 57       		.byte	0x57
 11316 126f A2000000 		.4byte	0xa2
 11317 1273 05       		.uleb128 0x5
 11318 1274 03       		.byte	0x3
 11319 1275 00000000 		.4byte	i
 11320 1279 25       		.uleb128 0x25
 11321 127a F8090000 		.4byte	.LASF192
 11322 127e 01       		.byte	0x1
 11323 127f 58       		.byte	0x58
 11324 1280 A2000000 		.4byte	0xa2
 11325 1284 05       		.uleb128 0x5
 11326 1285 03       		.byte	0x3
 11327 1286 00000000 		.4byte	counter
 11328 128a 07       		.uleb128 0x7
 11329 128b A2000000 		.4byte	0xa2
 11330 128f 9A120000 		.4byte	0x129a
 11331 1293 08       		.uleb128 0x8
 11332 1294 36010000 		.4byte	0x136
 11333 1298 1F       		.byte	0x1f
 11334 1299 00       		.byte	0
 11335 129a 25       		.uleb128 0x25
 11336 129b 73060000 		.4byte	.LASF193
 11337 129f 01       		.byte	0x1
 11338 12a0 59       		.byte	0x59
 11339 12a1 8A120000 		.4byte	0x128a
 11340 12a5 05       		.uleb128 0x5
 11341 12a6 03       		.byte	0x3
 11342 12a7 00000000 		.4byte	returnedData
 11343 12ab 25       		.uleb128 0x25
 11344 12ac 9E010000 		.4byte	.LASF194
 11345 12b0 01       		.byte	0x1
 11346 12b1 5A       		.byte	0x5a
 11347 12b2 C3000000 		.4byte	0xc3
 11348 12b6 05       		.uleb128 0x5
 11349 12b7 03       		.byte	0x3
 11350 12b8 00000000 		.4byte	temper
 11351 12bc 07       		.uleb128 0x7
 11352 12bd 94000000 		.4byte	0x94
 11353 12c1 CC120000 		.4byte	0x12cc
 11354 12c5 08       		.uleb128 0x8
 11355 12c6 36010000 		.4byte	0x136
 11356 12ca 0A       		.byte	0xa
 11357 12cb 00       		.byte	0
 11358 12cc 25       		.uleb128 0x25
 11359 12cd 140F0000 		.4byte	.LASF195
 11360 12d1 01       		.byte	0x1
 11361 12d2 5B       		.byte	0x5b
 11362 12d3 BC120000 		.4byte	0x12bc
 11363 12d7 05       		.uleb128 0x5
 11364 12d8 03       		.byte	0x3
 11365 12d9 00000000 		.4byte	previousButtons
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 246


 11366 12dd 25       		.uleb128 0x25
 11367 12de 2F010000 		.4byte	.LASF196
 11368 12e2 01       		.byte	0x1
 11369 12e3 5C       		.byte	0x5c
 11370 12e4 94000000 		.4byte	0x94
 11371 12e8 05       		.uleb128 0x5
 11372 12e9 03       		.byte	0x3
 11373 12ea 00000000 		.4byte	octave
 11374 12ee 07       		.uleb128 0x7
 11375 12ef B8000000 		.4byte	0xb8
 11376 12f3 FE120000 		.4byte	0x12fe
 11377 12f7 08       		.uleb128 0x8
 11378 12f8 36010000 		.4byte	0x136
 11379 12fc 09       		.byte	0x9
 11380 12fd 00       		.byte	0
 11381 12fe 25       		.uleb128 0x25
 11382 12ff 77080000 		.4byte	.LASF197
 11383 1303 01       		.byte	0x1
 11384 1304 5D       		.byte	0x5d
 11385 1305 EE120000 		.4byte	0x12ee
 11386 1309 05       		.uleb128 0x5
 11387 130a 03       		.byte	0x3
 11388 130b 00000000 		.4byte	angle
 11389 130f 25       		.uleb128 0x25
 11390 1310 250C0000 		.4byte	.LASF198
 11391 1314 01       		.byte	0x1
 11392 1315 5E       		.byte	0x5e
 11393 1316 EE120000 		.4byte	0x12ee
 11394 131a 05       		.uleb128 0x5
 11395 131b 03       		.byte	0x3
 11396 131c 00000000 		.4byte	prevAngle
 11397 1320 07       		.uleb128 0x7
 11398 1321 B8000000 		.4byte	0xb8
 11399 1325 30130000 		.4byte	0x1330
 11400 1329 08       		.uleb128 0x8
 11401 132a 36010000 		.4byte	0x136
 11402 132e 03       		.byte	0x3
 11403 132f 00       		.byte	0
 11404 1330 25       		.uleb128 0x25
 11405 1331 6F0C0000 		.4byte	.LASF199
 11406 1335 01       		.byte	0x1
 11407 1336 60       		.byte	0x60
 11408 1337 20130000 		.4byte	0x1320
 11409 133b 05       		.uleb128 0x5
 11410 133c 03       		.byte	0x3
 11411 133d 00000000 		.4byte	ADC_values
 11412 1341 25       		.uleb128 0x25
 11413 1342 F6040000 		.4byte	.LASF200
 11414 1346 01       		.byte	0x1
 11415 1347 61       		.byte	0x61
 11416 1348 B8000000 		.4byte	0xb8
 11417 134c 05       		.uleb128 0x5
 11418 134d 03       		.byte	0x3
 11419 134e 00000000 		.4byte	rawAngle
 11420 1352 25       		.uleb128 0x25
 11421 1353 960C0000 		.4byte	.LASF201
 11422 1357 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 247


 11423 1358 62       		.byte	0x62
 11424 1359 B8000000 		.4byte	0xb8
 11425 135d 05       		.uleb128 0x5
 11426 135e 03       		.byte	0x3
 11427 135f 00000000 		.4byte	midiSent
 11428 1363 25       		.uleb128 0x25
 11429 1364 8D050000 		.4byte	.LASF202
 11430 1368 01       		.byte	0x1
 11431 1369 63       		.byte	0x63
 11432 136a B8000000 		.4byte	0xb8
 11433 136e 05       		.uleb128 0x5
 11434 136f 03       		.byte	0x3
 11435 1370 00000000 		.4byte	midiOverflow
 11436 1374 07       		.uleb128 0x7
 11437 1375 A2000000 		.4byte	0xa2
 11438 1379 84130000 		.4byte	0x1384
 11439 137d 08       		.uleb128 0x8
 11440 137e 36010000 		.4byte	0x136
 11441 1382 07       		.byte	0x7
 11442 1383 00       		.byte	0
 11443 1384 25       		.uleb128 0x25
 11444 1385 8E0F0000 		.4byte	.LASF203
 11445 1389 01       		.byte	0x1
 11446 138a 65       		.byte	0x65
 11447 138b 74130000 		.4byte	0x1374
 11448 138f 05       		.uleb128 0x5
 11449 1390 03       		.byte	0x3
 11450 1391 00000000 		.4byte	macroKnobValues
 11451 1395 25       		.uleb128 0x25
 11452 1396 E6040000 		.4byte	.LASF204
 11453 139a 01       		.byte	0x1
 11454 139b 67       		.byte	0x67
 11455 139c A2000000 		.4byte	0xa2
 11456 13a0 05       		.uleb128 0x5
 11457 13a1 03       		.byte	0x3
 11458 13a2 00000000 		.4byte	currentCopedent
 11459 13a6 07       		.uleb128 0x7
 11460 13a7 A2000000 		.4byte	0xa2
 11461 13ab B6130000 		.4byte	0x13b6
 11462 13af 08       		.uleb128 0x8
 11463 13b0 36010000 		.4byte	0x136
 11464 13b4 01       		.byte	0x1
 11465 13b5 00       		.byte	0
 11466 13b6 25       		.uleb128 0x25
 11467 13b7 29010000 		.4byte	.LASF205
 11468 13bb 01       		.byte	0x1
 11469 13bc 68       		.byte	0x68
 11470 13bd A6130000 		.4byte	0x13a6
 11471 13c1 05       		.uleb128 0x5
 11472 13c2 03       		.byte	0x3
 11473 13c3 00000000 		.4byte	necks
 11474 13c7 25       		.uleb128 0x25
 11475 13c8 1C040000 		.4byte	.LASF206
 11476 13cc 01       		.byte	0x1
 11477 13cd 87       		.byte	0x87
 11478 13ce D9000000 		.4byte	0xd9
 11479 13d2 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 248


 11480 13d3 03       		.byte	0x3
 11481 13d4 00000000 		.4byte	rx1Channel
 11482 13d8 25       		.uleb128 0x25
 11483 13d9 C10F0000 		.4byte	.LASF207
 11484 13dd 01       		.byte	0x1
 11485 13de 87       		.byte	0x87
 11486 13df D9000000 		.4byte	0xd9
 11487 13e3 05       		.uleb128 0x5
 11488 13e4 03       		.byte	0x3
 11489 13e5 00000000 		.4byte	rx2Channel
 11490 13e9 25       		.uleb128 0x25
 11491 13ea 0C0A0000 		.4byte	.LASF208
 11492 13ee 01       		.byte	0x1
 11493 13ef 88       		.byte	0x88
 11494 13f0 A50E0000 		.4byte	0xea5
 11495 13f4 05       		.uleb128 0x5
 11496 13f5 03       		.byte	0x3
 11497 13f6 00000000 		.4byte	rx1TD
 11498 13fa 25       		.uleb128 0x25
 11499 13fb ED0C0000 		.4byte	.LASF209
 11500 13ff 01       		.byte	0x1
 11501 1400 88       		.byte	0x88
 11502 1401 A50E0000 		.4byte	0xea5
 11503 1405 05       		.uleb128 0x5
 11504 1406 03       		.byte	0x3
 11505 1407 00000000 		.4byte	rx2TD
 11506 140b 25       		.uleb128 0x25
 11507 140c F40B0000 		.4byte	.LASF210
 11508 1410 01       		.byte	0x1
 11509 1411 8A       		.byte	0x8a
 11510 1412 2A010000 		.4byte	0x12a
 11511 1416 05       		.uleb128 0x5
 11512 1417 03       		.byte	0x3
 11513 1418 00000000 		.4byte	txChannel
 11514 141c 25       		.uleb128 0x25
 11515 141d 68100000 		.4byte	.LASF211
 11516 1421 01       		.byte	0x1
 11517 1422 8B       		.byte	0x8b
 11518 1423 2A010000 		.4byte	0x12a
 11519 1427 05       		.uleb128 0x5
 11520 1428 03       		.byte	0x3
 11521 1429 00000000 		.4byte	txTD
 11522 142d 25       		.uleb128 0x25
 11523 142e 490A0000 		.4byte	.LASF212
 11524 1432 01       		.byte	0x1
 11525 1433 8D       		.byte	0x8d
 11526 1434 2A010000 		.4byte	0x12a
 11527 1438 05       		.uleb128 0x5
 11528 1439 03       		.byte	0x3
 11529 143a 00000000 		.4byte	rx3Channel
 11530 143e 25       		.uleb128 0x25
 11531 143f 0A100000 		.4byte	.LASF213
 11532 1443 01       		.byte	0x1
 11533 1444 8E       		.byte	0x8e
 11534 1445 2A010000 		.4byte	0x12a
 11535 1449 05       		.uleb128 0x5
 11536 144a 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 249


 11537 144b 00000000 		.4byte	rx3TD
 11538 144f 07       		.uleb128 0x7
 11539 1450 2A010000 		.4byte	0x12a
 11540 1454 65140000 		.4byte	0x1465
 11541 1458 08       		.uleb128 0x8
 11542 1459 36010000 		.4byte	0x136
 11543 145d 01       		.byte	0x1
 11544 145e 08       		.uleb128 0x8
 11545 145f 36010000 		.4byte	0x136
 11546 1463 19       		.byte	0x19
 11547 1464 00       		.byte	0
 11548 1465 25       		.uleb128 0x25
 11549 1466 A2060000 		.4byte	.LASF214
 11550 146a 01       		.byte	0x1
 11551 146b 91       		.byte	0x91
 11552 146c 76140000 		.4byte	0x1476
 11553 1470 05       		.uleb128 0x5
 11554 1471 03       		.byte	0x3
 11555 1472 00000000 		.4byte	rxBufferPluck
 11556 1476 06       		.uleb128 0x6
 11557 1477 4F140000 		.4byte	0x144f
 11558 147b 07       		.uleb128 0x7
 11559 147c 2A010000 		.4byte	0x12a
 11560 1480 91140000 		.4byte	0x1491
 11561 1484 08       		.uleb128 0x8
 11562 1485 36010000 		.4byte	0x136
 11563 1489 01       		.byte	0x1
 11564 148a 08       		.uleb128 0x8
 11565 148b 36010000 		.4byte	0x136
 11566 148f 07       		.byte	0x7
 11567 1490 00       		.byte	0
 11568 1491 25       		.uleb128 0x25
 11569 1492 E80B0000 		.4byte	.LASF215
 11570 1496 01       		.byte	0x1
 11571 1497 92       		.byte	0x92
 11572 1498 A2140000 		.4byte	0x14a2
 11573 149c 05       		.uleb128 0x5
 11574 149d 03       		.byte	0x3
 11575 149e 00000000 		.4byte	rxBufferBar
 11576 14a2 06       		.uleb128 0x6
 11577 14a3 7B140000 		.4byte	0x147b
 11578 14a7 07       		.uleb128 0x7
 11579 14a8 08020000 		.4byte	0x208
 11580 14ac B7140000 		.4byte	0x14b7
 11581 14b0 08       		.uleb128 0x8
 11582 14b1 36010000 		.4byte	0x136
 11583 14b5 0B       		.byte	0xb
 11584 14b6 00       		.byte	0
 11585 14b7 25       		.uleb128 0x25
 11586 14b8 5D020000 		.4byte	.LASF216
 11587 14bc 01       		.byte	0x1
 11588 14bd 94       		.byte	0x94
 11589 14be C8140000 		.4byte	0x14c8
 11590 14c2 05       		.uleb128 0x5
 11591 14c3 03       		.byte	0x3
 11592 14c4 00000000 		.4byte	strings
 11593 14c8 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 250


 11594 14c9 A7140000 		.4byte	0x14a7
 11595 14cd 25       		.uleb128 0x25
 11596 14ce C9040000 		.4byte	.LASF217
 11597 14d2 01       		.byte	0x1
 11598 14d3 95       		.byte	0x95
 11599 14d4 DE140000 		.4byte	0x14de
 11600 14d8 05       		.uleb128 0x5
 11601 14d9 03       		.byte	0x3
 11602 14da 00000000 		.4byte	prevStrings
 11603 14de 06       		.uleb128 0x6
 11604 14df A7140000 		.4byte	0x14a7
 11605 14e3 07       		.uleb128 0x7
 11606 14e4 08020000 		.4byte	0x208
 11607 14e8 F3140000 		.4byte	0x14f3
 11608 14ec 08       		.uleb128 0x8
 11609 14ed 36010000 		.4byte	0x136
 11610 14f1 01       		.byte	0x1
 11611 14f2 00       		.byte	0
 11612 14f3 28       		.uleb128 0x28
 11613 14f4 62617200 		.ascii	"bar\000"
 11614 14f8 01       		.byte	0x1
 11615 14f9 96       		.byte	0x96
 11616 14fa 04150000 		.4byte	0x1504
 11617 14fe 05       		.uleb128 0x5
 11618 14ff 03       		.byte	0x3
 11619 1500 00000000 		.4byte	bar
 11620 1504 06       		.uleb128 0x6
 11621 1505 E3140000 		.4byte	0x14e3
 11622 1509 25       		.uleb128 0x25
 11623 150a 77100000 		.4byte	.LASF218
 11624 150e 01       		.byte	0x1
 11625 150f 97       		.byte	0x97
 11626 1510 1A150000 		.4byte	0x151a
 11627 1514 05       		.uleb128 0x5
 11628 1515 03       		.byte	0x3
 11629 1516 00000000 		.4byte	prevBar
 11630 151a 06       		.uleb128 0x6
 11631 151b E3140000 		.4byte	0x14e3
 11632 151f 25       		.uleb128 0x25
 11633 1520 6A0F0000 		.4byte	.LASF219
 11634 1524 01       		.byte	0x1
 11635 1525 98       		.byte	0x98
 11636 1526 30150000 		.4byte	0x1530
 11637 152a 05       		.uleb128 0x5
 11638 152b 03       		.byte	0x3
 11639 152c 00000000 		.4byte	maxStrings
 11640 1530 06       		.uleb128 0x6
 11641 1531 A7140000 		.4byte	0x14a7
 11642 1535 25       		.uleb128 0x25
 11643 1536 270D0000 		.4byte	.LASF220
 11644 153a 01       		.byte	0x1
 11645 153b 99       		.byte	0x99
 11646 153c 03020000 		.4byte	0x203
 11647 1540 05       		.uleb128 0x5
 11648 1541 03       		.byte	0x3
 11649 1542 00000000 		.4byte	amHere
 11650 1546 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 251


 11651 1547 1A060000 		.4byte	.LASF221
 11652 154b 01       		.byte	0x1
 11653 154c 9A       		.byte	0x9a
 11654 154d 03020000 		.4byte	0x203
 11655 1551 05       		.uleb128 0x5
 11656 1552 03       		.byte	0x3
 11657 1553 00000000 		.4byte	spiCounter
 11658 1557 25       		.uleb128 0x25
 11659 1558 35040000 		.4byte	.LASF222
 11660 155c 01       		.byte	0x1
 11661 155d 9B       		.byte	0x9b
 11662 155e 03020000 		.4byte	0x203
 11663 1562 05       		.uleb128 0x5
 11664 1563 03       		.byte	0x3
 11665 1564 00000000 		.4byte	newDataFlag
 11666 1568 25       		.uleb128 0x25
 11667 1569 F30C0000 		.4byte	.LASF223
 11668 156d 01       		.byte	0x1
 11669 156e 9C       		.byte	0x9c
 11670 156f 94000000 		.4byte	0x94
 11671 1573 05       		.uleb128 0x5
 11672 1574 03       		.byte	0x3
 11673 1575 00000000 		.4byte	prevOctave
 11674 1579 25       		.uleb128 0x25
 11675 157a 2F0C0000 		.4byte	.LASF224
 11676 157e 01       		.byte	0x1
 11677 157f 9D       		.byte	0x9d
 11678 1580 A2000000 		.4byte	0xa2
 11679 1584 05       		.uleb128 0x5
 11680 1585 03       		.byte	0x3
 11681 1586 00000000 		.4byte	pluck_index
 11682 158a 25       		.uleb128 0x25
 11683 158b DC0A0000 		.4byte	.LASF225
 11684 158f 01       		.byte	0x1
 11685 1590 9E       		.byte	0x9e
 11686 1591 03020000 		.4byte	0x203
 11687 1595 05       		.uleb128 0x5
 11688 1596 03       		.byte	0x3
 11689 1597 00000000 		.4byte	amHere2
 11690 159b 25       		.uleb128 0x25
 11691 159c 670D0000 		.4byte	.LASF226
 11692 15a0 01       		.byte	0x1
 11693 15a1 9F       		.byte	0x9f
 11694 15a2 03020000 		.4byte	0x203
 11695 15a6 05       		.uleb128 0x5
 11696 15a7 03       		.byte	0x3
 11697 15a8 00000000 		.4byte	spiCounter2
 11698 15ac 25       		.uleb128 0x25
 11699 15ad 67000000 		.4byte	.LASF227
 11700 15b1 01       		.byte	0x1
 11701 15b2 A0       		.byte	0xa0
 11702 15b3 03020000 		.4byte	0x203
 11703 15b7 05       		.uleb128 0x5
 11704 15b8 03       		.byte	0x3
 11705 15b9 00000000 		.4byte	newDataFlag2
 11706 15bd 25       		.uleb128 0x25
 11707 15be F00A0000 		.4byte	.LASF228
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 252


 11708 15c2 01       		.byte	0x1
 11709 15c3 A1       		.byte	0xa1
 11710 15c4 03020000 		.4byte	0x203
 11711 15c8 05       		.uleb128 0x5
 11712 15c9 03       		.byte	0x3
 11713 15ca 00000000 		.4byte	currentPluckBuffer
 11714 15ce 25       		.uleb128 0x25
 11715 15cf 5E0C0000 		.4byte	.LASF229
 11716 15d3 01       		.byte	0x1
 11717 15d4 A2       		.byte	0xa2
 11718 15d5 03020000 		.4byte	0x203
 11719 15d9 05       		.uleb128 0x5
 11720 15da 03       		.byte	0x3
 11721 15db 00000000 		.4byte	currentBarBuffer
 11722 15df 25       		.uleb128 0x25
 11723 15e0 EF0D0000 		.4byte	.LASF230
 11724 15e4 01       		.byte	0x1
 11725 15e5 A3       		.byte	0xa3
 11726 15e6 03020000 		.4byte	0x203
 11727 15ea 05       		.uleb128 0x5
 11728 15eb 03       		.byte	0x3
 11729 15ec 00000000 		.4byte	pluckErrorCount
 11730 15f0 25       		.uleb128 0x25
 11731 15f1 870C0000 		.4byte	.LASF231
 11732 15f5 01       		.byte	0x1
 11733 15f6 A4       		.byte	0xa4
 11734 15f7 08020000 		.4byte	0x208
 11735 15fb 05       		.uleb128 0x5
 11736 15fc 03       		.byte	0x3
 11737 15fd 00000000 		.4byte	SPI1ErrorCount
 11738 1601 25       		.uleb128 0x25
 11739 1602 A7070000 		.4byte	.LASF232
 11740 1606 01       		.byte	0x1
 11741 1607 A8       		.byte	0xa8
 11742 1608 03020000 		.4byte	0x203
 11743 160c 05       		.uleb128 0x5
 11744 160d 03       		.byte	0x3
 11745 160e 00000000 		.4byte	inputData
 11746 1612 25       		.uleb128 0x25
 11747 1613 B50F0000 		.4byte	.LASF233
 11748 1617 01       		.byte	0x1
 11749 1618 CB       		.byte	0xcb
 11750 1619 A2000000 		.4byte	0xa2
 11751 161d 05       		.uleb128 0x5
 11752 161e 03       		.byte	0x3
 11753 161f 00000000 		.4byte	spiAdjusted
 11754 1623 25       		.uleb128 0x25
 11755 1624 CE060000 		.4byte	.LASF234
 11756 1628 01       		.byte	0x1
 11757 1629 CC       		.byte	0xcc
 11758 162a A2000000 		.4byte	0xa2
 11759 162e 05       		.uleb128 0x5
 11760 162f 03       		.byte	0x3
 11761 1630 00000000 		.4byte	mySpiCounter
 11762 1634 25       		.uleb128 0x25
 11763 1635 B80B0000 		.4byte	.LASF235
 11764 1639 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 253


 11765 163a CD       		.byte	0xcd
 11766 163b 08020000 		.4byte	0x208
 11767 163f 05       		.uleb128 0x5
 11768 1640 03       		.byte	0x3
 11769 1641 00000000 		.4byte	offsetErrorCount
 11770 1645 25       		.uleb128 0x25
 11771 1646 C7000000 		.4byte	.LASF236
 11772 164a 01       		.byte	0x1
 11773 164b CE       		.byte	0xce
 11774 164c 03020000 		.4byte	0x203
 11775 1650 05       		.uleb128 0x5
 11776 1651 03       		.byte	0x3
 11777 1652 00000000 		.4byte	SPI2errorflag
 11778 1656 25       		.uleb128 0x25
 11779 1657 9D0B0000 		.4byte	.LASF237
 11780 165b 01       		.byte	0x1
 11781 165c CF       		.byte	0xcf
 11782 165d 67160000 		.4byte	0x1667
 11783 1661 05       		.uleb128 0x5
 11784 1662 03       		.byte	0x3
 11785 1663 00000000 		.4byte	bar_index
 11786 1667 06       		.uleb128 0x6
 11787 1668 94000000 		.4byte	0x94
 11788 166c 25       		.uleb128 0x25
 11789 166d 44030000 		.4byte	.LASF238
 11790 1671 01       		.byte	0x1
 11791 1672 D0       		.byte	0xd0
 11792 1673 A6020000 		.4byte	0x2a6
 11793 1677 05       		.uleb128 0x5
 11794 1678 03       		.byte	0x3
 11795 1679 00000000 		.4byte	knobs
 11796 167d 25       		.uleb128 0x25
 11797 167e C4060000 		.4byte	.LASF239
 11798 1682 01       		.byte	0x1
 11799 1683 D1       		.byte	0xd1
 11800 1684 A6020000 		.4byte	0x2a6
 11801 1688 05       		.uleb128 0x5
 11802 1689 03       		.byte	0x3
 11803 168a 00000000 		.4byte	prevKnobs
 11804 168e 25       		.uleb128 0x25
 11805 168f A70B0000 		.4byte	.LASF240
 11806 1693 01       		.byte	0x1
 11807 1694 D3       		.byte	0xd3
 11808 1695 A6020000 		.4byte	0x2a6
 11809 1699 05       		.uleb128 0x5
 11810 169a 03       		.byte	0x3
 11811 169b 00000000 		.4byte	knobs7bit
 11812 169f 25       		.uleb128 0x25
 11813 16a0 540B0000 		.4byte	.LASF241
 11814 16a4 01       		.byte	0x1
 11815 16a5 D4       		.byte	0xd4
 11816 16a6 A6020000 		.4byte	0x2a6
 11817 16aa 05       		.uleb128 0x5
 11818 16ab 03       		.byte	0x3
 11819 16ac 00000000 		.4byte	prevKnobs7bit
 11820 16b0 25       		.uleb128 0x25
 11821 16b1 E40A0000 		.4byte	.LASF242
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 254


 11822 16b5 01       		.byte	0x1
 11823 16b6 D6       		.byte	0xd6
 11824 16b7 03020000 		.4byte	0x203
 11825 16bb 05       		.uleb128 0x5
 11826 16bc 03       		.byte	0x3
 11827 16bd 00000000 		.4byte	SPI2started
 11828 16c1 25       		.uleb128 0x25
 11829 16c2 8B060000 		.4byte	.LASF243
 11830 16c6 01       		.byte	0x1
 11831 16c7 D8       		.byte	0xd8
 11832 16c8 A2000000 		.4byte	0xa2
 11833 16cc 05       		.uleb128 0x5
 11834 16cd 03       		.byte	0x3
 11835 16ce 00000000 		.4byte	whichMacro
 11836 16d2 25       		.uleb128 0x25
 11837 16d3 2E0D0000 		.4byte	.LASF244
 11838 16d7 01       		.byte	0x1
 11839 16d8 EB       		.byte	0xeb
 11840 16d9 A50E0000 		.4byte	0xea5
 11841 16dd 05       		.uleb128 0x5
 11842 16de 03       		.byte	0x3
 11843 16df 00000000 		.4byte	array
 11844 16e3 25       		.uleb128 0x25
 11845 16e4 1A080000 		.4byte	.LASF245
 11846 16e8 01       		.byte	0x1
 11847 16e9 EE       		.byte	0xee
 11848 16ea F7010000 		.4byte	0x1f7
 11849 16ee 05       		.uleb128 0x5
 11850 16ef 03       		.byte	0x3
 11851 16f0 00000000 		.4byte	eepromReturnValue
 11852 16f4 25       		.uleb128 0x25
 11853 16f5 47050000 		.4byte	.LASF246
 11854 16f9 01       		.byte	0x1
 11855 16fa FA       		.byte	0xfa
 11856 16fb D9000000 		.4byte	0xd9
 11857 16ff 05       		.uleb128 0x5
 11858 1700 03       		.byte	0x3
 11859 1701 00000000 		.4byte	eeprom_cnt
 11860 1705 25       		.uleb128 0x25
 11861 1706 34080000 		.4byte	.LASF83
 11862 170a 01       		.byte	0x1
 11863 170b FB       		.byte	0xfb
 11864 170c 12010000 		.4byte	0x112
 11865 1710 05       		.uleb128 0x5
 11866 1711 03       		.byte	0x3
 11867 1712 00000000 		.4byte	status
 11868 1716 28       		.uleb128 0x28
 11869 1717 70747200 		.ascii	"ptr\000"
 11870 171b 01       		.byte	0x1
 11871 171c FC       		.byte	0xfc
 11872 171d 27170000 		.4byte	0x1727
 11873 1721 05       		.uleb128 0x5
 11874 1722 03       		.byte	0x3
 11875 1723 00000000 		.4byte	ptr
 11876 1727 20       		.uleb128 0x20
 11877 1728 04       		.byte	0x4
 11878 1729 32170000 		.4byte	0x1732
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 255


 11879 172d 24       		.uleb128 0x24
 11880 172e D9000000 		.4byte	0xd9
 11881 1732 06       		.uleb128 0x6
 11882 1733 2D170000 		.4byte	0x172d
 11883 1737 25       		.uleb128 0x25
 11884 1738 2C020000 		.4byte	.LASF247
 11885 173c 01       		.byte	0x1
 11886 173d FD       		.byte	0xfd
 11887 173e 67160000 		.4byte	0x1667
 11888 1742 05       		.uleb128 0x5
 11889 1743 03       		.byte	0x3
 11890 1744 00000000 		.4byte	barCount
 11891 1748 07       		.uleb128 0x7
 11892 1749 03020000 		.4byte	0x203
 11893 174d 58170000 		.4byte	0x1758
 11894 1751 08       		.uleb128 0x8
 11895 1752 36010000 		.4byte	0x136
 11896 1756 0F       		.byte	0xf
 11897 1757 00       		.byte	0
 11898 1758 27       		.uleb128 0x27
 11899 1759 0D010000 		.4byte	.LASF248
 11900 175d 01       		.byte	0x1
 11901 175e 5F01     		.2byte	0x15f
 11902 1760 6A170000 		.4byte	0x176a
 11903 1764 05       		.uleb128 0x5
 11904 1765 03       		.byte	0x3
 11905 1766 00000000 		.4byte	I2Cbuff2
 11906 176a 06       		.uleb128 0x6
 11907 176b 48170000 		.4byte	0x1748
 11908 176f 27       		.uleb128 0x27
 11909 1770 3B080000 		.4byte	.LASF249
 11910 1774 01       		.byte	0x1
 11911 1775 6001     		.2byte	0x160
 11912 1777 03020000 		.4byte	0x203
 11913 177b 05       		.uleb128 0x5
 11914 177c 03       		.byte	0x3
 11915 177d 00000000 		.4byte	send_it
 11916 1781 07       		.uleb128 0x7
 11917 1782 A2000000 		.4byte	0xa2
 11918 1786 97170000 		.4byte	0x1797
 11919 178a 08       		.uleb128 0x8
 11920 178b 36010000 		.4byte	0x136
 11921 178f 0B       		.byte	0xb
 11922 1790 08       		.uleb128 0x8
 11923 1791 36010000 		.4byte	0x136
 11924 1795 01       		.byte	0x1
 11925 1796 00       		.byte	0
 11926 1797 27       		.uleb128 0x27
 11927 1798 16010000 		.4byte	.LASF250
 11928 179c 01       		.byte	0x1
 11929 179d 6701     		.2byte	0x167
 11930 179f 81170000 		.4byte	0x1781
 11931 17a3 05       		.uleb128 0x5
 11932 17a4 03       		.byte	0x3
 11933 17a5 00000000 		.4byte	mux_states
 11934 17a9 07       		.uleb128 0x7
 11935 17aa A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 256


 11936 17ae B9170000 		.4byte	0x17b9
 11937 17b2 08       		.uleb128 0x8
 11938 17b3 36010000 		.4byte	0x136
 11939 17b7 0B       		.byte	0xb
 11940 17b8 00       		.byte	0
 11941 17b9 27       		.uleb128 0x27
 11942 17ba 9E0F0000 		.4byte	.LASF251
 11943 17be 01       		.byte	0x1
 11944 17bf 6801     		.2byte	0x168
 11945 17c1 A9170000 		.4byte	0x17a9
 11946 17c5 05       		.uleb128 0x5
 11947 17c6 03       		.byte	0x3
 11948 17c7 00000000 		.4byte	i2c_skipped
 11949 17cb 27       		.uleb128 0x27
 11950 17cc 2E0E0000 		.4byte	.LASF252
 11951 17d0 01       		.byte	0x1
 11952 17d1 6901     		.2byte	0x169
 11953 17d3 EE120000 		.4byte	0x12ee
 11954 17d7 05       		.uleb128 0x5
 11955 17d8 03       		.byte	0x3
 11956 17d9 00000000 		.4byte	pedals_low
 11957 17dd 27       		.uleb128 0x27
 11958 17de 6E010000 		.4byte	.LASF253
 11959 17e2 01       		.byte	0x1
 11960 17e3 6A01     		.2byte	0x16a
 11961 17e5 EE120000 		.4byte	0x12ee
 11962 17e9 05       		.uleb128 0x5
 11963 17ea 03       		.byte	0x3
 11964 17eb 00000000 		.4byte	pedals_high
 11965 17ef 27       		.uleb128 0x27
 11966 17f0 8E0D0000 		.4byte	.LASF254
 11967 17f4 01       		.byte	0x1
 11968 17f5 6B01     		.2byte	0x16b
 11969 17f7 B8000000 		.4byte	0xb8
 11970 17fb 05       		.uleb128 0x5
 11971 17fc 03       		.byte	0x3
 11972 17fd 00000000 		.4byte	deadzone
 11973 1801 27       		.uleb128 0x27
 11974 1802 96060000 		.4byte	.LASF255
 11975 1806 01       		.byte	0x1
 11976 1807 6C01     		.2byte	0x16c
 11977 1809 B8000000 		.4byte	0xb8
 11978 180d 05       		.uleb128 0x5
 11979 180e 03       		.byte	0x3
 11980 180f 00000000 		.4byte	volumePedal
 11981 1813 27       		.uleb128 0x27
 11982 1814 FE0B0000 		.4byte	.LASF256
 11983 1818 01       		.byte	0x1
 11984 1819 6D01     		.2byte	0x16d
 11985 181b EE120000 		.4byte	0x12ee
 11986 181f 05       		.uleb128 0x5
 11987 1820 03       		.byte	0x3
 11988 1821 00000000 		.4byte	processed_pedals
 11989 1825 27       		.uleb128 0x27
 11990 1826 C60A0000 		.4byte	.LASF257
 11991 182a 01       		.byte	0x1
 11992 182b 6E01     		.2byte	0x16e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 257


 11993 182d EE120000 		.4byte	0x12ee
 11994 1831 05       		.uleb128 0x5
 11995 1832 03       		.byte	0x3
 11996 1833 00000000 		.4byte	prev_processed_pedals
 11997 1837 07       		.uleb128 0x7
 11998 1838 A2000000 		.4byte	0xa2
 11999 183c 47180000 		.4byte	0x1847
 12000 1840 08       		.uleb128 0x8
 12001 1841 36010000 		.4byte	0x136
 12002 1845 09       		.byte	0x9
 12003 1846 00       		.byte	0
 12004 1847 27       		.uleb128 0x27
 12005 1848 B9060000 		.4byte	.LASF258
 12006 184c 01       		.byte	0x1
 12007 184d 6F01     		.2byte	0x16f
 12008 184f 37180000 		.4byte	0x1837
 12009 1853 05       		.uleb128 0x5
 12010 1854 03       		.byte	0x3
 12011 1855 00000000 		.4byte	pedals8bit
 12012 1859 27       		.uleb128 0x27
 12013 185a AA0F0000 		.4byte	.LASF259
 12014 185e 01       		.byte	0x1
 12015 185f 7001     		.2byte	0x170
 12016 1861 37180000 		.4byte	0x1837
 12017 1865 05       		.uleb128 0x5
 12018 1866 03       		.byte	0x3
 12019 1867 00000000 		.4byte	pedals7bit
 12020 186b 27       		.uleb128 0x27
 12021 186c 700B0000 		.4byte	.LASF260
 12022 1870 01       		.byte	0x1
 12023 1871 7101     		.2byte	0x171
 12024 1873 37180000 		.4byte	0x1837
 12025 1877 05       		.uleb128 0x5
 12026 1878 03       		.byte	0x3
 12027 1879 00000000 		.4byte	prevPedals7bit
 12028 187d 27       		.uleb128 0x27
 12029 187e 42000000 		.4byte	.LASF261
 12030 1882 01       		.byte	0x1
 12031 1883 7201     		.2byte	0x172
 12032 1885 AD000000 		.4byte	0xad
 12033 1889 05       		.uleb128 0x5
 12034 188a 03       		.byte	0x3
 12035 188b 00000000 		.4byte	prev_processed_volumePedal
 12036 188f 27       		.uleb128 0x27
 12037 1890 C90B0000 		.4byte	.LASF262
 12038 1894 01       		.byte	0x1
 12039 1895 7301     		.2byte	0x173
 12040 1897 AD000000 		.4byte	0xad
 12041 189b 05       		.uleb128 0x5
 12042 189c 03       		.byte	0x3
 12043 189d 00000000 		.4byte	processed_volumePedal
 12044 18a1 07       		.uleb128 0x7
 12045 18a2 FD000000 		.4byte	0xfd
 12046 18a6 B7180000 		.4byte	0x18b7
 12047 18aa 08       		.uleb128 0x8
 12048 18ab 36010000 		.4byte	0x136
 12049 18af 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 258


 12050 18b0 08       		.uleb128 0x8
 12051 18b1 36010000 		.4byte	0x136
 12052 18b5 03       		.byte	0x3
 12053 18b6 00       		.byte	0
 12054 18b7 27       		.uleb128 0x27
 12055 18b8 7C0E0000 		.4byte	.LASF263
 12056 18bc 01       		.byte	0x1
 12057 18bd 7601     		.2byte	0x176
 12058 18bf A1180000 		.4byte	0x18a1
 12059 18c3 05       		.uleb128 0x5
 12060 18c4 03       		.byte	0x3
 12061 18c5 00000000 		.4byte	fretMeasurements
 12062 18c9 27       		.uleb128 0x27
 12063 18ca A7080000 		.4byte	.LASF264
 12064 18ce 01       		.byte	0x1
 12065 18cf 8301     		.2byte	0x183
 12066 18d1 94000000 		.4byte	0x94
 12067 18d5 05       		.uleb128 0x5
 12068 18d6 03       		.byte	0x3
 12069 18d7 00000000 		.4byte	currentPresetSelection
 12070 18db 07       		.uleb128 0x7
 12071 18dc A2000000 		.4byte	0xa2
 12072 18e0 F1180000 		.4byte	0x18f1
 12073 18e4 08       		.uleb128 0x8
 12074 18e5 36010000 		.4byte	0x136
 12075 18e9 3F       		.byte	0x3f
 12076 18ea 08       		.uleb128 0x8
 12077 18eb 36010000 		.4byte	0x136
 12078 18ef 0D       		.byte	0xd
 12079 18f0 00       		.byte	0
 12080 18f1 27       		.uleb128 0x27
 12081 18f2 BB020000 		.4byte	.LASF265
 12082 18f6 01       		.byte	0x1
 12083 18f7 8401     		.2byte	0x184
 12084 18f9 DB180000 		.4byte	0x18db
 12085 18fd 05       		.uleb128 0x5
 12086 18fe 03       		.byte	0x3
 12087 18ff 00000000 		.4byte	presetNamesArray
 12088 1903 27       		.uleb128 0x27
 12089 1904 44020000 		.4byte	.LASF266
 12090 1908 01       		.byte	0x1
 12091 1909 8501     		.2byte	0x185
 12092 190b A2000000 		.4byte	0xa2
 12093 190f 05       		.uleb128 0x5
 12094 1910 03       		.byte	0x3
 12095 1911 00000000 		.4byte	presetNumberToLoad
 12096 1915 27       		.uleb128 0x27
 12097 1916 7B020000 		.4byte	.LASF267
 12098 191a 01       		.byte	0x1
 12099 191b 8601     		.2byte	0x186
 12100 191d A6130000 		.4byte	0x13a6
 12101 1921 05       		.uleb128 0x5
 12102 1922 03       		.byte	0x3
 12103 1923 00000000 		.4byte	presetLoadedResponse
 12104 1927 07       		.uleb128 0x7
 12105 1928 A2000000 		.4byte	0xa2
 12106 192c 43190000 		.4byte	0x1943
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 259


 12107 1930 08       		.uleb128 0x8
 12108 1931 36010000 		.4byte	0x136
 12109 1935 3F       		.byte	0x3f
 12110 1936 08       		.uleb128 0x8
 12111 1937 36010000 		.4byte	0x136
 12112 193b 07       		.byte	0x7
 12113 193c 08       		.uleb128 0x8
 12114 193d 36010000 		.4byte	0x136
 12115 1941 0D       		.byte	0xd
 12116 1942 00       		.byte	0
 12117 1943 27       		.uleb128 0x27
 12118 1944 74000000 		.4byte	.LASF268
 12119 1948 01       		.byte	0x1
 12120 1949 8901     		.2byte	0x189
 12121 194b 27190000 		.4byte	0x1927
 12122 194f 05       		.uleb128 0x5
 12123 1950 03       		.byte	0x3
 12124 1951 00000000 		.4byte	macroNamesArray
 12125 1955 07       		.uleb128 0x7
 12126 1956 FD000000 		.4byte	0xfd
 12127 195a 65190000 		.4byte	0x1965
 12128 195e 08       		.uleb128 0x8
 12129 195f 36010000 		.4byte	0x136
 12130 1963 03       		.byte	0x3
 12131 1964 00       		.byte	0
 12132 1965 27       		.uleb128 0x27
 12133 1966 16030000 		.4byte	.LASF269
 12134 196a 01       		.byte	0x1
 12135 196b 8D01     		.2byte	0x18d
 12136 196d 55190000 		.4byte	0x1955
 12137 1971 05       		.uleb128 0x5
 12138 1972 03       		.byte	0x3
 12139 1973 00000000 		.4byte	fretScaling
 12140 1977 07       		.uleb128 0x7
 12141 1978 FD000000 		.4byte	0xfd
 12142 197c 87190000 		.4byte	0x1987
 12143 1980 08       		.uleb128 0x8
 12144 1981 36010000 		.4byte	0x136
 12145 1985 09       		.byte	0x9
 12146 1986 00       		.byte	0
 12147 1987 27       		.uleb128 0x27
 12148 1988 E9030000 		.4byte	.LASF270
 12149 198c 01       		.byte	0x1
 12150 198d 9201     		.2byte	0x192
 12151 198f 77190000 		.4byte	0x1977
 12152 1993 05       		.uleb128 0x5
 12153 1994 03       		.byte	0x3
 12154 1995 00000000 		.4byte	pedalRatios
 12155 1999 27       		.uleb128 0x27
 12156 199a 8A040000 		.4byte	.LASF271
 12157 199e 01       		.byte	0x1
 12158 199f 9301     		.2byte	0x193
 12159 19a1 A2000000 		.4byte	0xa2
 12160 19a5 05       		.uleb128 0x5
 12161 19a6 03       		.byte	0x3
 12162 19a7 00000000 		.4byte	last_mux
 12163 19ab 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 260


 12164 19ac 85090000 		.4byte	.LASF272
 12165 19b0 01       		.byte	0x1
 12166 19b1 9401     		.2byte	0x194
 12167 19b3 03020000 		.4byte	0x203
 12168 19b7 05       		.uleb128 0x5
 12169 19b8 03       		.byte	0x3
 12170 19b9 00000000 		.4byte	main_counter
 12171 19bd 27       		.uleb128 0x27
 12172 19be 1C050000 		.4byte	.LASF273
 12173 19c2 01       		.byte	0x1
 12174 19c3 9501     		.2byte	0x195
 12175 19c5 A2000000 		.4byte	0xa2
 12176 19c9 05       		.uleb128 0x5
 12177 19ca 03       		.byte	0x3
 12178 19cb 00000000 		.4byte	neck
 12179 19cf 27       		.uleb128 0x27
 12180 19d0 9C090000 		.4byte	.LASF274
 12181 19d4 01       		.byte	0x1
 12182 19d5 9601     		.2byte	0x196
 12183 19d7 A2000000 		.4byte	0xa2
 12184 19db 05       		.uleb128 0x5
 12185 19dc 03       		.byte	0x3
 12186 19dd 00000000 		.4byte	dualSlider
 12187 19e1 27       		.uleb128 0x27
 12188 19e2 7F0C0000 		.4byte	.LASF275
 12189 19e6 01       		.byte	0x1
 12190 19e7 9701     		.2byte	0x197
 12191 19e9 A2000000 		.4byte	0xa2
 12192 19ed 05       		.uleb128 0x5
 12193 19ee 03       		.byte	0x3
 12194 19ef 00000000 		.4byte	enterUp
 12195 19f3 27       		.uleb128 0x27
 12196 19f4 57020000 		.4byte	.LASF276
 12197 19f8 01       		.byte	0x1
 12198 19f9 9801     		.2byte	0x198
 12199 19fb A2000000 		.4byte	0xa2
 12200 19ff 05       		.uleb128 0x5
 12201 1a00 03       		.byte	0x3
 12202 1a01 00000000 		.4byte	voice
 12203 1a05 27       		.uleb128 0x27
 12204 1a06 A4100000 		.4byte	.LASF277
 12205 1a0a 01       		.byte	0x1
 12206 1a0b 9901     		.2byte	0x199
 12207 1a0d A2000000 		.4byte	0xa2
 12208 1a11 05       		.uleb128 0x5
 12209 1a12 03       		.byte	0x3
 12210 1a13 00000000 		.4byte	editUp
 12211 1a17 27       		.uleb128 0x27
 12212 1a18 81050000 		.4byte	.LASF278
 12213 1a1c 01       		.byte	0x1
 12214 1a1d 9A01     		.2byte	0x19a
 12215 1a1f A2000000 		.4byte	0xa2
 12216 1a23 05       		.uleb128 0x5
 12217 1a24 03       		.byte	0x3
 12218 1a25 00000000 		.4byte	oct1Up
 12219 1a29 27       		.uleb128 0x27
 12220 1a2a 1C100000 		.4byte	.LASF279
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 261


 12221 1a2e 01       		.byte	0x1
 12222 1a2f 9B01     		.2byte	0x19b
 12223 1a31 A2000000 		.4byte	0xa2
 12224 1a35 05       		.uleb128 0x5
 12225 1a36 03       		.byte	0x3
 12226 1a37 00000000 		.4byte	oct4Up
 12227 1a3b 27       		.uleb128 0x27
 12228 1a3c 93040000 		.4byte	.LASF280
 12229 1a40 01       		.byte	0x1
 12230 1a41 9D01     		.2byte	0x19d
 12231 1a43 4D1A0000 		.4byte	0x1a4d
 12232 1a47 05       		.uleb128 0x5
 12233 1a48 03       		.byte	0x3
 12234 1a49 00000000 		.4byte	encoderVal
 12235 1a4d 06       		.uleb128 0x6
 12236 1a4e 48170000 		.4byte	0x1748
 12237 1a52 27       		.uleb128 0x27
 12238 1a53 76050000 		.4byte	.LASF281
 12239 1a57 01       		.byte	0x1
 12240 1a58 9E01     		.2byte	0x19e
 12241 1a5a 94000000 		.4byte	0x94
 12242 1a5e 05       		.uleb128 0x5
 12243 1a5f 03       		.byte	0x3
 12244 1a60 00000000 		.4byte	encoderNum
 12245 1a64 27       		.uleb128 0x27
 12246 1a65 620A0000 		.4byte	.LASF282
 12247 1a69 01       		.byte	0x1
 12248 1a6a 9F01     		.2byte	0x19f
 12249 1a6c A2000000 		.4byte	0xa2
 12250 1a70 05       		.uleb128 0x5
 12251 1a71 03       		.byte	0x3
 12252 1a72 00000000 		.4byte	button1Up
 12253 1a76 27       		.uleb128 0x27
 12254 1a77 1D0D0000 		.4byte	.LASF283
 12255 1a7b 01       		.byte	0x1
 12256 1a7c A001     		.2byte	0x1a0
 12257 1a7e A2000000 		.4byte	0xa2
 12258 1a82 05       		.uleb128 0x5
 12259 1a83 03       		.byte	0x3
 12260 1a84 00000000 		.4byte	button2Up
 12261 1a88 27       		.uleb128 0x27
 12262 1a89 38100000 		.4byte	.LASF284
 12263 1a8d 01       		.byte	0x1
 12264 1a8e A101     		.2byte	0x1a1
 12265 1a90 A2000000 		.4byte	0xa2
 12266 1a94 05       		.uleb128 0x5
 12267 1a95 03       		.byte	0x3
 12268 1a96 00000000 		.4byte	button3Up
 12269 1a9a 27       		.uleb128 0x27
 12270 1a9b F70F0000 		.4byte	.LASF285
 12271 1a9f 01       		.byte	0x1
 12272 1aa0 A201     		.2byte	0x1a2
 12273 1aa2 A2000000 		.4byte	0xa2
 12274 1aa6 05       		.uleb128 0x5
 12275 1aa7 03       		.byte	0x3
 12276 1aa8 00000000 		.4byte	button4Up
 12277 1aac 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 262


 12278 1aad 120E0000 		.4byte	.LASF286
 12279 1ab1 01       		.byte	0x1
 12280 1ab2 A301     		.2byte	0x1a3
 12281 1ab4 A2000000 		.4byte	0xa2
 12282 1ab8 05       		.uleb128 0x5
 12283 1ab9 03       		.byte	0x3
 12284 1aba 00000000 		.4byte	patchNum
 12285 1abe 07       		.uleb128 0x7
 12286 1abf FD000000 		.4byte	0xfd
 12287 1ac3 DA1A0000 		.4byte	0x1ada
 12288 1ac7 08       		.uleb128 0x8
 12289 1ac8 36010000 		.4byte	0x136
 12290 1acc 06       		.byte	0x6
 12291 1acd 08       		.uleb128 0x8
 12292 1ace 36010000 		.4byte	0x136
 12293 1ad2 0A       		.byte	0xa
 12294 1ad3 08       		.uleb128 0x8
 12295 1ad4 36010000 		.4byte	0x136
 12296 1ad8 0B       		.byte	0xb
 12297 1ad9 00       		.byte	0
 12298 1ada 27       		.uleb128 0x27
 12299 1adb B0060000 		.4byte	.LASF287
 12300 1adf 01       		.byte	0x1
 12301 1ae0 A901     		.2byte	0x1a9
 12302 1ae2 BE1A0000 		.4byte	0x1abe
 12303 1ae6 05       		.uleb128 0x5
 12304 1ae7 03       		.byte	0x3
 12305 1ae8 00000000 		.4byte	copedent
 12306 1aec 07       		.uleb128 0x7
 12307 1aed A2000000 		.4byte	0xa2
 12308 1af1 021B0000 		.4byte	0x1b02
 12309 1af5 08       		.uleb128 0x8
 12310 1af6 36010000 		.4byte	0x136
 12311 1afa 06       		.byte	0x6
 12312 1afb 08       		.uleb128 0x8
 12313 1afc 36010000 		.4byte	0x136
 12314 1b00 0D       		.byte	0xd
 12315 1b01 00       		.byte	0
 12316 1b02 27       		.uleb128 0x27
 12317 1b03 81010000 		.4byte	.LASF288
 12318 1b07 01       		.byte	0x1
 12319 1b08 AA01     		.2byte	0x1aa
 12320 1b0a EC1A0000 		.4byte	0x1aec
 12321 1b0e 05       		.uleb128 0x5
 12322 1b0f 03       		.byte	0x3
 12323 1b10 00000000 		.4byte	copedentNamesArray
 12324 1b14 07       		.uleb128 0x7
 12325 1b15 FD000000 		.4byte	0xfd
 12326 1b19 241B0000 		.4byte	0x1b24
 12327 1b1d 08       		.uleb128 0x8
 12328 1b1e 36010000 		.4byte	0x136
 12329 1b22 0B       		.byte	0xb
 12330 1b23 00       		.byte	0
 12331 1b24 27       		.uleb128 0x27
 12332 1b25 D1020000 		.4byte	.LASF289
 12333 1b29 01       		.byte	0x1
 12334 1b2a AC01     		.2byte	0x1ac
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 263


 12335 1b2c 141B0000 		.4byte	0x1b14
 12336 1b30 05       		.uleb128 0x5
 12337 1b31 03       		.byte	0x3
 12338 1b32 00000000 		.4byte	prevStringPitchBend
 12339 1b36 07       		.uleb128 0x7
 12340 1b37 FD000000 		.4byte	0xfd
 12341 1b3b 4C1B0000 		.4byte	0x1b4c
 12342 1b3f 08       		.uleb128 0x8
 12343 1b40 36010000 		.4byte	0x136
 12344 1b44 09       		.byte	0x9
 12345 1b45 08       		.uleb128 0x8
 12346 1b46 36010000 		.4byte	0x136
 12347 1b4a 0B       		.byte	0xb
 12348 1b4b 00       		.byte	0
 12349 1b4c 27       		.uleb128 0x27
 12350 1b4d 91100000 		.4byte	.LASF290
 12351 1b51 01       		.byte	0x1
 12352 1b52 AE01     		.2byte	0x1ae
 12353 1b54 361B0000 		.4byte	0x1b36
 12354 1b58 05       		.uleb128 0x5
 12355 1b59 03       		.byte	0x3
 12356 1b5a 00000000 		.4byte	pedals
 12357 1b5e 27       		.uleb128 0x27
 12358 1b5f 2A0B0000 		.4byte	.LASF291
 12359 1b63 01       		.byte	0x1
 12360 1b64 B001     		.2byte	0x1b0
 12361 1b66 37180000 		.4byte	0x1837
 12362 1b6a 05       		.uleb128 0x5
 12363 1b6b 03       		.byte	0x3
 12364 1b6c 00000000 		.4byte	pedal_cc_assignments
 12365 1b70 27       		.uleb128 0x27
 12366 1b71 0F0C0000 		.4byte	.LASF292
 12367 1b75 01       		.byte	0x1
 12368 1b76 B101     		.2byte	0x1b1
 12369 1b78 141B0000 		.4byte	0x1b14
 12370 1b7c 05       		.uleb128 0x5
 12371 1b7d 03       		.byte	0x3
 12372 1b7e 00000000 		.4byte	openStringFrequencies
 12373 1b82 27       		.uleb128 0x27
 12374 1b83 FE0E0000 		.4byte	.LASF293
 12375 1b87 01       		.byte	0x1
 12376 1b88 B201     		.2byte	0x1b2
 12377 1b8a 141B0000 		.4byte	0x1b14
 12378 1b8e 05       		.uleb128 0x5
 12379 1b8f 03       		.byte	0x3
 12380 1b90 00000000 		.4byte	stringMappedPositions
 12381 1b94 27       		.uleb128 0x27
 12382 1b95 8E070000 		.4byte	.LASF294
 12383 1b99 01       		.byte	0x1
 12384 1b9a B301     		.2byte	0x1b3
 12385 1b9c 141B0000 		.4byte	0x1b14
 12386 1ba0 05       		.uleb128 0x5
 12387 1ba1 03       		.byte	0x3
 12388 1ba2 00000000 		.4byte	invStringMappedPositions
 12389 1ba6 27       		.uleb128 0x27
 12390 1ba7 C8100000 		.4byte	.LASF295
 12391 1bab 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 264


 12392 1bac B401     		.2byte	0x1b4
 12393 1bae 141B0000 		.4byte	0x1b14
 12394 1bb2 05       		.uleb128 0x5
 12395 1bb3 03       		.byte	0x3
 12396 1bb4 00000000 		.4byte	stringFrequencies
 12397 1bb8 27       		.uleb128 0x27
 12398 1bb9 41040000 		.4byte	.LASF296
 12399 1bbd 01       		.byte	0x1
 12400 1bbe B501     		.2byte	0x1b5
 12401 1bc0 141B0000 		.4byte	0x1b14
 12402 1bc4 05       		.uleb128 0x5
 12403 1bc5 03       		.byte	0x3
 12404 1bc6 00000000 		.4byte	stringOctave
 12405 1bca 27       		.uleb128 0x27
 12406 1bcb 000A0000 		.4byte	.LASF297
 12407 1bcf 01       		.byte	0x1
 12408 1bd0 B601     		.2byte	0x1b6
 12409 1bd2 141B0000 		.4byte	0x1b14
 12410 1bd6 05       		.uleb128 0x5
 12411 1bd7 03       		.byte	0x3
 12412 1bd8 00000000 		.4byte	stringPitch
 12413 1bdc 27       		.uleb128 0x27
 12414 1bdd A00E0000 		.4byte	.LASF298
 12415 1be1 01       		.byte	0x1
 12416 1be2 B701     		.2byte	0x1b7
 12417 1be4 141B0000 		.4byte	0x1b14
 12418 1be8 05       		.uleb128 0x5
 12419 1be9 03       		.byte	0x3
 12420 1bea 00000000 		.4byte	stringMIDI
 12421 1bee 07       		.uleb128 0x7
 12422 1bef 94000000 		.4byte	0x94
 12423 1bf3 FE1B0000 		.4byte	0x1bfe
 12424 1bf7 08       		.uleb128 0x8
 12425 1bf8 36010000 		.4byte	0x136
 12426 1bfc 0B       		.byte	0xb
 12427 1bfd 00       		.byte	0
 12428 1bfe 27       		.uleb128 0x27
 12429 1bff BE080000 		.4byte	.LASF299
 12430 1c03 01       		.byte	0x1
 12431 1c04 B801     		.2byte	0x1b8
 12432 1c06 EE1B0000 		.4byte	0x1bee
 12433 1c0a 05       		.uleb128 0x5
 12434 1c0b 03       		.byte	0x3
 12435 1c0c 00000000 		.4byte	openStringMIDI_Int
 12436 1c10 27       		.uleb128 0x27
 12437 1c11 080E0000 		.4byte	.LASF300
 12438 1c15 01       		.byte	0x1
 12439 1c16 B901     		.2byte	0x1b9
 12440 1c18 94000000 		.4byte	0x94
 12441 1c1c 05       		.uleb128 0x5
 12442 1c1d 03       		.byte	0x3
 12443 1c1e 00000000 		.4byte	OLEDcount
 12444 1c22 27       		.uleb128 0x27
 12445 1c23 120A0000 		.4byte	.LASF301
 12446 1c27 01       		.byte	0x1
 12447 1c28 BB01     		.2byte	0x1bb
 12448 1c2a 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 265


 12449 1c2e 05       		.uleb128 0x5
 12450 1c2f 03       		.byte	0x3
 12451 1c30 00000000 		.4byte	mainOLEDWaitingToSend
 12452 1c34 27       		.uleb128 0x27
 12453 1c35 57010000 		.4byte	.LASF302
 12454 1c39 01       		.byte	0x1
 12455 1c3a BC01     		.2byte	0x1bc
 12456 1c3c 94000000 		.4byte	0x94
 12457 1c40 05       		.uleb128 0x5
 12458 1c41 03       		.byte	0x3
 12459 1c42 00000000 		.4byte	macroOLEDWaitingToSend
 12460 1c46 07       		.uleb128 0x7
 12461 1c47 94000000 		.4byte	0x94
 12462 1c4b 561C0000 		.4byte	0x1c56
 12463 1c4f 08       		.uleb128 0x8
 12464 1c50 36010000 		.4byte	0x136
 12465 1c54 3F       		.byte	0x3f
 12466 1c55 00       		.byte	0
 12467 1c56 27       		.uleb128 0x27
 12468 1c57 A7040000 		.4byte	.LASF303
 12469 1c5b 01       		.byte	0x1
 12470 1c5c BE01     		.2byte	0x1be
 12471 1c5e 461C0000 		.4byte	0x1c46
 12472 1c62 05       		.uleb128 0x5
 12473 1c63 03       		.byte	0x3
 12474 1c64 00000000 		.4byte	presetAlreadyDisplayed
 12475 1c68 27       		.uleb128 0x27
 12476 1c69 1B0E0000 		.4byte	.LASF304
 12477 1c6d 01       		.byte	0x1
 12478 1c6e C001     		.2byte	0x1c0
 12479 1c70 77190000 		.4byte	0x1977
 12480 1c74 05       		.uleb128 0x5
 12481 1c75 03       		.byte	0x3
 12482 1c76 00000000 		.4byte	pedals_float
 12483 1c7a 27       		.uleb128 0x27
 12484 1c7b A70C0000 		.4byte	.LASF305
 12485 1c7f 01       		.byte	0x1
 12486 1c80 C801     		.2byte	0x1c8
 12487 1c82 94000000 		.4byte	0x94
 12488 1c86 05       		.uleb128 0x5
 12489 1c87 03       		.byte	0x3
 12490 1c88 00000000 		.4byte	currentNeck
 12491 1c8c 27       		.uleb128 0x27
 12492 1c8d B30C0000 		.4byte	.LASF306
 12493 1c91 01       		.byte	0x1
 12494 1c92 CA01     		.2byte	0x1ca
 12495 1c94 94000000 		.4byte	0x94
 12496 1c98 05       		.uleb128 0x5
 12497 1c99 03       		.byte	0x3
 12498 1c9a 00000000 		.4byte	editMode
 12499 1c9e 27       		.uleb128 0x27
 12500 1c9f 490F0000 		.4byte	.LASF307
 12501 1ca3 01       		.byte	0x1
 12502 1ca4 CB01     		.2byte	0x1cb
 12503 1ca6 94000000 		.4byte	0x94
 12504 1caa 05       		.uleb128 0x5
 12505 1cab 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 266


 12506 1cac 00000000 		.4byte	calibrationMode
 12507 1cb0 27       		.uleb128 0x27
 12508 1cb1 CB070000 		.4byte	.LASF308
 12509 1cb5 01       		.byte	0x1
 12510 1cb6 C207     		.2byte	0x7c2
 12511 1cb8 EE1B0000 		.4byte	0x1bee
 12512 1cbc 05       		.uleb128 0x5
 12513 1cbd 03       		.byte	0x3
 12514 1cbe 00000000 		.4byte	prevNotes
 12515 1cc2 27       		.uleb128 0x27
 12516 1cc3 880B0000 		.4byte	.LASF309
 12517 1cc7 01       		.byte	0x1
 12518 1cc8 3708     		.2byte	0x837
 12519 1cca 03020000 		.4byte	0x203
 12520 1cce 05       		.uleb128 0x5
 12521 1ccf 03       		.byte	0x3
 12522 1cd0 00000000 		.4byte	checkStatus
 12523 1cd4 27       		.uleb128 0x27
 12524 1cd5 090D0000 		.4byte	.LASF310
 12525 1cd9 01       		.byte	0x1
 12526 1cda 3808     		.2byte	0x838
 12527 1cdc 08020000 		.4byte	0x208
 12528 1ce0 05       		.uleb128 0x5
 12529 1ce1 03       		.byte	0x3
 12530 1ce2 00000000 		.4byte	checkBase
 12531 1ce6 27       		.uleb128 0x27
 12532 1ce7 F2060000 		.4byte	.LASF311
 12533 1ceb 01       		.byte	0x1
 12534 1cec 3C08     		.2byte	0x83c
 12535 1cee 94000000 		.4byte	0x94
 12536 1cf2 05       		.uleb128 0x5
 12537 1cf3 03       		.byte	0x3
 12538 1cf4 00000000 		.4byte	SPI_errors
 12539 1cf8 07       		.uleb128 0x7
 12540 1cf9 03020000 		.4byte	0x203
 12541 1cfd 081D0000 		.4byte	0x1d08
 12542 1d01 08       		.uleb128 0x8
 12543 1d02 36010000 		.4byte	0x136
 12544 1d06 03       		.byte	0x3
 12545 1d07 00       		.byte	0
 12546 1d08 27       		.uleb128 0x27
 12547 1d09 DF0B0000 		.4byte	.LASF87
 12548 1d0d 01       		.byte	0x1
 12549 1d0e 7F09     		.2byte	0x97f
 12550 1d10 1A1D0000 		.4byte	0x1d1a
 12551 1d14 05       		.uleb128 0x5
 12552 1d15 03       		.byte	0x3
 12553 1d16 00000000 		.4byte	tempMIDI
 12554 1d1a 06       		.uleb128 0x6
 12555 1d1b F81C0000 		.4byte	0x1cf8
 12556 1d1f 27       		.uleb128 0x27
 12557 1d20 1F000000 		.4byte	.LASF312
 12558 1d24 01       		.byte	0x1
 12559 1d25 8009     		.2byte	0x980
 12560 1d27 03020000 		.4byte	0x203
 12561 1d2b 05       		.uleb128 0x5
 12562 1d2c 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 267


 12563 1d2d 00000000 		.4byte	firstSysex
 12564 1d31 27       		.uleb128 0x27
 12565 1d32 3C060000 		.4byte	.LASF313
 12566 1d36 01       		.byte	0x1
 12567 1d37 8109     		.2byte	0x981
 12568 1d39 431D0000 		.4byte	0x1d43
 12569 1d3d 05       		.uleb128 0x5
 12570 1d3e 03       		.byte	0x3
 12571 1d3f 00000000 		.4byte	sysexPointerMask
 12572 1d43 24       		.uleb128 0x24
 12573 1d44 B8000000 		.4byte	0xb8
 12574 1d48 00       		.byte	0
 12575              		.section	.debug_abbrev,"",%progbits
 12576              	.Ldebug_abbrev0:
 12577 0000 01       		.uleb128 0x1
 12578 0001 11       		.uleb128 0x11
 12579 0002 01       		.byte	0x1
 12580 0003 25       		.uleb128 0x25
 12581 0004 0E       		.uleb128 0xe
 12582 0005 13       		.uleb128 0x13
 12583 0006 0B       		.uleb128 0xb
 12584 0007 03       		.uleb128 0x3
 12585 0008 0E       		.uleb128 0xe
 12586 0009 1B       		.uleb128 0x1b
 12587 000a 0E       		.uleb128 0xe
 12588 000b 55       		.uleb128 0x55
 12589 000c 17       		.uleb128 0x17
 12590 000d 11       		.uleb128 0x11
 12591 000e 01       		.uleb128 0x1
 12592 000f 10       		.uleb128 0x10
 12593 0010 17       		.uleb128 0x17
 12594 0011 00       		.byte	0
 12595 0012 00       		.byte	0
 12596 0013 02       		.uleb128 0x2
 12597 0014 24       		.uleb128 0x24
 12598 0015 00       		.byte	0
 12599 0016 0B       		.uleb128 0xb
 12600 0017 0B       		.uleb128 0xb
 12601 0018 3E       		.uleb128 0x3e
 12602 0019 0B       		.uleb128 0xb
 12603 001a 03       		.uleb128 0x3
 12604 001b 0E       		.uleb128 0xe
 12605 001c 00       		.byte	0
 12606 001d 00       		.byte	0
 12607 001e 03       		.uleb128 0x3
 12608 001f 16       		.uleb128 0x16
 12609 0020 00       		.byte	0
 12610 0021 03       		.uleb128 0x3
 12611 0022 0E       		.uleb128 0xe
 12612 0023 3A       		.uleb128 0x3a
 12613 0024 0B       		.uleb128 0xb
 12614 0025 3B       		.uleb128 0x3b
 12615 0026 0B       		.uleb128 0xb
 12616 0027 49       		.uleb128 0x49
 12617 0028 13       		.uleb128 0x13
 12618 0029 00       		.byte	0
 12619 002a 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 268


 12620 002b 04       		.uleb128 0x4
 12621 002c 24       		.uleb128 0x24
 12622 002d 00       		.byte	0
 12623 002e 0B       		.uleb128 0xb
 12624 002f 0B       		.uleb128 0xb
 12625 0030 3E       		.uleb128 0x3e
 12626 0031 0B       		.uleb128 0xb
 12627 0032 03       		.uleb128 0x3
 12628 0033 08       		.uleb128 0x8
 12629 0034 00       		.byte	0
 12630 0035 00       		.byte	0
 12631 0036 05       		.uleb128 0x5
 12632 0037 16       		.uleb128 0x16
 12633 0038 00       		.byte	0
 12634 0039 03       		.uleb128 0x3
 12635 003a 0E       		.uleb128 0xe
 12636 003b 3A       		.uleb128 0x3a
 12637 003c 0B       		.uleb128 0xb
 12638 003d 3B       		.uleb128 0x3b
 12639 003e 05       		.uleb128 0x5
 12640 003f 49       		.uleb128 0x49
 12641 0040 13       		.uleb128 0x13
 12642 0041 00       		.byte	0
 12643 0042 00       		.byte	0
 12644 0043 06       		.uleb128 0x6
 12645 0044 35       		.uleb128 0x35
 12646 0045 00       		.byte	0
 12647 0046 49       		.uleb128 0x49
 12648 0047 13       		.uleb128 0x13
 12649 0048 00       		.byte	0
 12650 0049 00       		.byte	0
 12651 004a 07       		.uleb128 0x7
 12652 004b 01       		.uleb128 0x1
 12653 004c 01       		.byte	0x1
 12654 004d 49       		.uleb128 0x49
 12655 004e 13       		.uleb128 0x13
 12656 004f 01       		.uleb128 0x1
 12657 0050 13       		.uleb128 0x13
 12658 0051 00       		.byte	0
 12659 0052 00       		.byte	0
 12660 0053 08       		.uleb128 0x8
 12661 0054 21       		.uleb128 0x21
 12662 0055 00       		.byte	0
 12663 0056 49       		.uleb128 0x49
 12664 0057 13       		.uleb128 0x13
 12665 0058 2F       		.uleb128 0x2f
 12666 0059 0B       		.uleb128 0xb
 12667 005a 00       		.byte	0
 12668 005b 00       		.byte	0
 12669 005c 09       		.uleb128 0x9
 12670 005d 13       		.uleb128 0x13
 12671 005e 01       		.byte	0x1
 12672 005f 0B       		.uleb128 0xb
 12673 0060 0B       		.uleb128 0xb
 12674 0061 3A       		.uleb128 0x3a
 12675 0062 0B       		.uleb128 0xb
 12676 0063 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 269


 12677 0064 05       		.uleb128 0x5
 12678 0065 01       		.uleb128 0x1
 12679 0066 13       		.uleb128 0x13
 12680 0067 00       		.byte	0
 12681 0068 00       		.byte	0
 12682 0069 0A       		.uleb128 0xa
 12683 006a 0D       		.uleb128 0xd
 12684 006b 00       		.byte	0
 12685 006c 03       		.uleb128 0x3
 12686 006d 0E       		.uleb128 0xe
 12687 006e 3A       		.uleb128 0x3a
 12688 006f 0B       		.uleb128 0xb
 12689 0070 3B       		.uleb128 0x3b
 12690 0071 05       		.uleb128 0x5
 12691 0072 49       		.uleb128 0x49
 12692 0073 13       		.uleb128 0x13
 12693 0074 38       		.uleb128 0x38
 12694 0075 0B       		.uleb128 0xb
 12695 0076 00       		.byte	0
 12696 0077 00       		.byte	0
 12697 0078 0B       		.uleb128 0xb
 12698 0079 04       		.uleb128 0x4
 12699 007a 01       		.byte	0x1
 12700 007b 0B       		.uleb128 0xb
 12701 007c 0B       		.uleb128 0xb
 12702 007d 49       		.uleb128 0x49
 12703 007e 13       		.uleb128 0x13
 12704 007f 3A       		.uleb128 0x3a
 12705 0080 0B       		.uleb128 0xb
 12706 0081 3B       		.uleb128 0x3b
 12707 0082 05       		.uleb128 0x5
 12708 0083 01       		.uleb128 0x1
 12709 0084 13       		.uleb128 0x13
 12710 0085 00       		.byte	0
 12711 0086 00       		.byte	0
 12712 0087 0C       		.uleb128 0xc
 12713 0088 28       		.uleb128 0x28
 12714 0089 00       		.byte	0
 12715 008a 03       		.uleb128 0x3
 12716 008b 0E       		.uleb128 0xe
 12717 008c 1C       		.uleb128 0x1c
 12718 008d 0B       		.uleb128 0xb
 12719 008e 00       		.byte	0
 12720 008f 00       		.byte	0
 12721 0090 0D       		.uleb128 0xd
 12722 0091 04       		.uleb128 0x4
 12723 0092 01       		.byte	0x1
 12724 0093 03       		.uleb128 0x3
 12725 0094 0E       		.uleb128 0xe
 12726 0095 0B       		.uleb128 0xb
 12727 0096 0B       		.uleb128 0xb
 12728 0097 49       		.uleb128 0x49
 12729 0098 13       		.uleb128 0x13
 12730 0099 3A       		.uleb128 0x3a
 12731 009a 0B       		.uleb128 0xb
 12732 009b 3B       		.uleb128 0x3b
 12733 009c 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 270


 12734 009d 01       		.uleb128 0x1
 12735 009e 13       		.uleb128 0x13
 12736 009f 00       		.byte	0
 12737 00a0 00       		.byte	0
 12738 00a1 0E       		.uleb128 0xe
 12739 00a2 17       		.uleb128 0x17
 12740 00a3 01       		.byte	0x1
 12741 00a4 03       		.uleb128 0x3
 12742 00a5 0E       		.uleb128 0xe
 12743 00a6 0B       		.uleb128 0xb
 12744 00a7 0B       		.uleb128 0xb
 12745 00a8 3A       		.uleb128 0x3a
 12746 00a9 0B       		.uleb128 0xb
 12747 00aa 3B       		.uleb128 0x3b
 12748 00ab 0B       		.uleb128 0xb
 12749 00ac 01       		.uleb128 0x1
 12750 00ad 13       		.uleb128 0x13
 12751 00ae 00       		.byte	0
 12752 00af 00       		.byte	0
 12753 00b0 0F       		.uleb128 0xf
 12754 00b1 0D       		.uleb128 0xd
 12755 00b2 00       		.byte	0
 12756 00b3 03       		.uleb128 0x3
 12757 00b4 08       		.uleb128 0x8
 12758 00b5 3A       		.uleb128 0x3a
 12759 00b6 0B       		.uleb128 0xb
 12760 00b7 3B       		.uleb128 0x3b
 12761 00b8 0B       		.uleb128 0xb
 12762 00b9 49       		.uleb128 0x49
 12763 00ba 13       		.uleb128 0x13
 12764 00bb 00       		.byte	0
 12765 00bc 00       		.byte	0
 12766 00bd 10       		.uleb128 0x10
 12767 00be 2E       		.uleb128 0x2e
 12768 00bf 01       		.byte	0x1
 12769 00c0 3F       		.uleb128 0x3f
 12770 00c1 19       		.uleb128 0x19
 12771 00c2 03       		.uleb128 0x3
 12772 00c3 0E       		.uleb128 0xe
 12773 00c4 3A       		.uleb128 0x3a
 12774 00c5 0B       		.uleb128 0xb
 12775 00c6 3B       		.uleb128 0x3b
 12776 00c7 0B       		.uleb128 0xb
 12777 00c8 27       		.uleb128 0x27
 12778 00c9 19       		.uleb128 0x19
 12779 00ca 11       		.uleb128 0x11
 12780 00cb 01       		.uleb128 0x1
 12781 00cc 12       		.uleb128 0x12
 12782 00cd 06       		.uleb128 0x6
 12783 00ce 40       		.uleb128 0x40
 12784 00cf 18       		.uleb128 0x18
 12785 00d0 9642     		.uleb128 0x2116
 12786 00d2 19       		.uleb128 0x19
 12787 00d3 01       		.uleb128 0x1
 12788 00d4 13       		.uleb128 0x13
 12789 00d5 00       		.byte	0
 12790 00d6 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 271


 12791 00d7 11       		.uleb128 0x11
 12792 00d8 0B       		.uleb128 0xb
 12793 00d9 01       		.byte	0x1
 12794 00da 11       		.uleb128 0x11
 12795 00db 01       		.uleb128 0x1
 12796 00dc 12       		.uleb128 0x12
 12797 00dd 06       		.uleb128 0x6
 12798 00de 00       		.byte	0
 12799 00df 00       		.byte	0
 12800 00e0 12       		.uleb128 0x12
 12801 00e1 34       		.uleb128 0x34
 12802 00e2 00       		.byte	0
 12803 00e3 03       		.uleb128 0x3
 12804 00e4 08       		.uleb128 0x8
 12805 00e5 3A       		.uleb128 0x3a
 12806 00e6 0B       		.uleb128 0xb
 12807 00e7 3B       		.uleb128 0x3b
 12808 00e8 0B       		.uleb128 0xb
 12809 00e9 49       		.uleb128 0x49
 12810 00ea 13       		.uleb128 0x13
 12811 00eb 02       		.uleb128 0x2
 12812 00ec 18       		.uleb128 0x18
 12813 00ed 00       		.byte	0
 12814 00ee 00       		.byte	0
 12815 00ef 13       		.uleb128 0x13
 12816 00f0 2E       		.uleb128 0x2e
 12817 00f1 00       		.byte	0
 12818 00f2 3F       		.uleb128 0x3f
 12819 00f3 19       		.uleb128 0x19
 12820 00f4 03       		.uleb128 0x3
 12821 00f5 0E       		.uleb128 0xe
 12822 00f6 3A       		.uleb128 0x3a
 12823 00f7 0B       		.uleb128 0xb
 12824 00f8 3B       		.uleb128 0x3b
 12825 00f9 0B       		.uleb128 0xb
 12826 00fa 27       		.uleb128 0x27
 12827 00fb 19       		.uleb128 0x19
 12828 00fc 11       		.uleb128 0x11
 12829 00fd 01       		.uleb128 0x1
 12830 00fe 12       		.uleb128 0x12
 12831 00ff 06       		.uleb128 0x6
 12832 0100 40       		.uleb128 0x40
 12833 0101 18       		.uleb128 0x18
 12834 0102 9642     		.uleb128 0x2116
 12835 0104 19       		.uleb128 0x19
 12836 0105 00       		.byte	0
 12837 0106 00       		.byte	0
 12838 0107 14       		.uleb128 0x14
 12839 0108 2E       		.uleb128 0x2e
 12840 0109 00       		.byte	0
 12841 010a 3F       		.uleb128 0x3f
 12842 010b 19       		.uleb128 0x19
 12843 010c 03       		.uleb128 0x3
 12844 010d 0E       		.uleb128 0xe
 12845 010e 3A       		.uleb128 0x3a
 12846 010f 0B       		.uleb128 0xb
 12847 0110 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 272


 12848 0111 05       		.uleb128 0x5
 12849 0112 27       		.uleb128 0x27
 12850 0113 19       		.uleb128 0x19
 12851 0114 11       		.uleb128 0x11
 12852 0115 01       		.uleb128 0x1
 12853 0116 12       		.uleb128 0x12
 12854 0117 06       		.uleb128 0x6
 12855 0118 40       		.uleb128 0x40
 12856 0119 18       		.uleb128 0x18
 12857 011a 9642     		.uleb128 0x2116
 12858 011c 19       		.uleb128 0x19
 12859 011d 00       		.byte	0
 12860 011e 00       		.byte	0
 12861 011f 15       		.uleb128 0x15
 12862 0120 2E       		.uleb128 0x2e
 12863 0121 01       		.byte	0x1
 12864 0122 3F       		.uleb128 0x3f
 12865 0123 19       		.uleb128 0x19
 12866 0124 03       		.uleb128 0x3
 12867 0125 0E       		.uleb128 0xe
 12868 0126 3A       		.uleb128 0x3a
 12869 0127 0B       		.uleb128 0xb
 12870 0128 3B       		.uleb128 0x3b
 12871 0129 05       		.uleb128 0x5
 12872 012a 27       		.uleb128 0x27
 12873 012b 19       		.uleb128 0x19
 12874 012c 49       		.uleb128 0x49
 12875 012d 13       		.uleb128 0x13
 12876 012e 11       		.uleb128 0x11
 12877 012f 01       		.uleb128 0x1
 12878 0130 12       		.uleb128 0x12
 12879 0131 06       		.uleb128 0x6
 12880 0132 40       		.uleb128 0x40
 12881 0133 18       		.uleb128 0x18
 12882 0134 9642     		.uleb128 0x2116
 12883 0136 19       		.uleb128 0x19
 12884 0137 01       		.uleb128 0x1
 12885 0138 13       		.uleb128 0x13
 12886 0139 00       		.byte	0
 12887 013a 00       		.byte	0
 12888 013b 16       		.uleb128 0x16
 12889 013c 05       		.uleb128 0x5
 12890 013d 00       		.byte	0
 12891 013e 03       		.uleb128 0x3
 12892 013f 08       		.uleb128 0x8
 12893 0140 3A       		.uleb128 0x3a
 12894 0141 0B       		.uleb128 0xb
 12895 0142 3B       		.uleb128 0x3b
 12896 0143 05       		.uleb128 0x5
 12897 0144 49       		.uleb128 0x49
 12898 0145 13       		.uleb128 0x13
 12899 0146 02       		.uleb128 0x2
 12900 0147 18       		.uleb128 0x18
 12901 0148 00       		.byte	0
 12902 0149 00       		.byte	0
 12903 014a 17       		.uleb128 0x17
 12904 014b 34       		.uleb128 0x34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 273


 12905 014c 00       		.byte	0
 12906 014d 03       		.uleb128 0x3
 12907 014e 0E       		.uleb128 0xe
 12908 014f 3A       		.uleb128 0x3a
 12909 0150 0B       		.uleb128 0xb
 12910 0151 3B       		.uleb128 0x3b
 12911 0152 05       		.uleb128 0x5
 12912 0153 49       		.uleb128 0x49
 12913 0154 13       		.uleb128 0x13
 12914 0155 02       		.uleb128 0x2
 12915 0156 18       		.uleb128 0x18
 12916 0157 00       		.byte	0
 12917 0158 00       		.byte	0
 12918 0159 18       		.uleb128 0x18
 12919 015a 05       		.uleb128 0x5
 12920 015b 00       		.byte	0
 12921 015c 03       		.uleb128 0x3
 12922 015d 0E       		.uleb128 0xe
 12923 015e 3A       		.uleb128 0x3a
 12924 015f 0B       		.uleb128 0xb
 12925 0160 3B       		.uleb128 0x3b
 12926 0161 05       		.uleb128 0x5
 12927 0162 49       		.uleb128 0x49
 12928 0163 13       		.uleb128 0x13
 12929 0164 02       		.uleb128 0x2
 12930 0165 18       		.uleb128 0x18
 12931 0166 00       		.byte	0
 12932 0167 00       		.byte	0
 12933 0168 19       		.uleb128 0x19
 12934 0169 34       		.uleb128 0x34
 12935 016a 00       		.byte	0
 12936 016b 03       		.uleb128 0x3
 12937 016c 08       		.uleb128 0x8
 12938 016d 3A       		.uleb128 0x3a
 12939 016e 0B       		.uleb128 0xb
 12940 016f 3B       		.uleb128 0x3b
 12941 0170 05       		.uleb128 0x5
 12942 0171 49       		.uleb128 0x49
 12943 0172 13       		.uleb128 0x13
 12944 0173 02       		.uleb128 0x2
 12945 0174 18       		.uleb128 0x18
 12946 0175 00       		.byte	0
 12947 0176 00       		.byte	0
 12948 0177 1A       		.uleb128 0x1a
 12949 0178 2E       		.uleb128 0x2e
 12950 0179 01       		.byte	0x1
 12951 017a 3F       		.uleb128 0x3f
 12952 017b 19       		.uleb128 0x19
 12953 017c 03       		.uleb128 0x3
 12954 017d 08       		.uleb128 0x8
 12955 017e 3A       		.uleb128 0x3a
 12956 017f 0B       		.uleb128 0xb
 12957 0180 3B       		.uleb128 0x3b
 12958 0181 05       		.uleb128 0x5
 12959 0182 27       		.uleb128 0x27
 12960 0183 19       		.uleb128 0x19
 12961 0184 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 274


 12962 0185 13       		.uleb128 0x13
 12963 0186 11       		.uleb128 0x11
 12964 0187 01       		.uleb128 0x1
 12965 0188 12       		.uleb128 0x12
 12966 0189 06       		.uleb128 0x6
 12967 018a 40       		.uleb128 0x40
 12968 018b 18       		.uleb128 0x18
 12969 018c 9642     		.uleb128 0x2116
 12970 018e 19       		.uleb128 0x19
 12971 018f 01       		.uleb128 0x1
 12972 0190 13       		.uleb128 0x13
 12973 0191 00       		.byte	0
 12974 0192 00       		.byte	0
 12975 0193 1B       		.uleb128 0x1b
 12976 0194 2E       		.uleb128 0x2e
 12977 0195 00       		.byte	0
 12978 0196 3F       		.uleb128 0x3f
 12979 0197 19       		.uleb128 0x19
 12980 0198 03       		.uleb128 0x3
 12981 0199 0E       		.uleb128 0xe
 12982 019a 3A       		.uleb128 0x3a
 12983 019b 0B       		.uleb128 0xb
 12984 019c 3B       		.uleb128 0x3b
 12985 019d 05       		.uleb128 0x5
 12986 019e 11       		.uleb128 0x11
 12987 019f 01       		.uleb128 0x1
 12988 01a0 12       		.uleb128 0x12
 12989 01a1 06       		.uleb128 0x6
 12990 01a2 40       		.uleb128 0x40
 12991 01a3 18       		.uleb128 0x18
 12992 01a4 9742     		.uleb128 0x2117
 12993 01a6 19       		.uleb128 0x19
 12994 01a7 00       		.byte	0
 12995 01a8 00       		.byte	0
 12996 01a9 1C       		.uleb128 0x1c
 12997 01aa 2E       		.uleb128 0x2e
 12998 01ab 01       		.byte	0x1
 12999 01ac 3F       		.uleb128 0x3f
 13000 01ad 19       		.uleb128 0x19
 13001 01ae 03       		.uleb128 0x3
 13002 01af 0E       		.uleb128 0xe
 13003 01b0 3A       		.uleb128 0x3a
 13004 01b1 0B       		.uleb128 0xb
 13005 01b2 3B       		.uleb128 0x3b
 13006 01b3 05       		.uleb128 0x5
 13007 01b4 11       		.uleb128 0x11
 13008 01b5 01       		.uleb128 0x1
 13009 01b6 12       		.uleb128 0x12
 13010 01b7 06       		.uleb128 0x6
 13011 01b8 40       		.uleb128 0x40
 13012 01b9 18       		.uleb128 0x18
 13013 01ba 9642     		.uleb128 0x2116
 13014 01bc 19       		.uleb128 0x19
 13015 01bd 01       		.uleb128 0x1
 13016 01be 13       		.uleb128 0x13
 13017 01bf 00       		.byte	0
 13018 01c0 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 275


 13019 01c1 1D       		.uleb128 0x1d
 13020 01c2 0B       		.uleb128 0xb
 13021 01c3 01       		.byte	0x1
 13022 01c4 11       		.uleb128 0x11
 13023 01c5 01       		.uleb128 0x1
 13024 01c6 12       		.uleb128 0x12
 13025 01c7 06       		.uleb128 0x6
 13026 01c8 01       		.uleb128 0x1
 13027 01c9 13       		.uleb128 0x13
 13028 01ca 00       		.byte	0
 13029 01cb 00       		.byte	0
 13030 01cc 1E       		.uleb128 0x1e
 13031 01cd 2E       		.uleb128 0x2e
 13032 01ce 00       		.byte	0
 13033 01cf 3F       		.uleb128 0x3f
 13034 01d0 19       		.uleb128 0x19
 13035 01d1 03       		.uleb128 0x3
 13036 01d2 0E       		.uleb128 0xe
 13037 01d3 3A       		.uleb128 0x3a
 13038 01d4 0B       		.uleb128 0xb
 13039 01d5 3B       		.uleb128 0x3b
 13040 01d6 05       		.uleb128 0x5
 13041 01d7 11       		.uleb128 0x11
 13042 01d8 01       		.uleb128 0x1
 13043 01d9 12       		.uleb128 0x12
 13044 01da 06       		.uleb128 0x6
 13045 01db 40       		.uleb128 0x40
 13046 01dc 18       		.uleb128 0x18
 13047 01dd 9642     		.uleb128 0x2116
 13048 01df 19       		.uleb128 0x19
 13049 01e0 00       		.byte	0
 13050 01e1 00       		.byte	0
 13051 01e2 1F       		.uleb128 0x1f
 13052 01e3 2E       		.uleb128 0x2e
 13053 01e4 01       		.byte	0x1
 13054 01e5 3F       		.uleb128 0x3f
 13055 01e6 19       		.uleb128 0x19
 13056 01e7 03       		.uleb128 0x3
 13057 01e8 0E       		.uleb128 0xe
 13058 01e9 3A       		.uleb128 0x3a
 13059 01ea 0B       		.uleb128 0xb
 13060 01eb 3B       		.uleb128 0x3b
 13061 01ec 05       		.uleb128 0x5
 13062 01ed 27       		.uleb128 0x27
 13063 01ee 19       		.uleb128 0x19
 13064 01ef 11       		.uleb128 0x11
 13065 01f0 01       		.uleb128 0x1
 13066 01f1 12       		.uleb128 0x12
 13067 01f2 06       		.uleb128 0x6
 13068 01f3 40       		.uleb128 0x40
 13069 01f4 18       		.uleb128 0x18
 13070 01f5 9642     		.uleb128 0x2116
 13071 01f7 19       		.uleb128 0x19
 13072 01f8 01       		.uleb128 0x1
 13073 01f9 13       		.uleb128 0x13
 13074 01fa 00       		.byte	0
 13075 01fb 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 276


 13076 01fc 20       		.uleb128 0x20
 13077 01fd 0F       		.uleb128 0xf
 13078 01fe 00       		.byte	0
 13079 01ff 0B       		.uleb128 0xb
 13080 0200 0B       		.uleb128 0xb
 13081 0201 49       		.uleb128 0x49
 13082 0202 13       		.uleb128 0x13
 13083 0203 00       		.byte	0
 13084 0204 00       		.byte	0
 13085 0205 21       		.uleb128 0x21
 13086 0206 34       		.uleb128 0x34
 13087 0207 00       		.byte	0
 13088 0208 03       		.uleb128 0x3
 13089 0209 0E       		.uleb128 0xe
 13090 020a 3A       		.uleb128 0x3a
 13091 020b 0B       		.uleb128 0xb
 13092 020c 3B       		.uleb128 0x3b
 13093 020d 0B       		.uleb128 0xb
 13094 020e 49       		.uleb128 0x49
 13095 020f 13       		.uleb128 0x13
 13096 0210 02       		.uleb128 0x2
 13097 0211 18       		.uleb128 0x18
 13098 0212 00       		.byte	0
 13099 0213 00       		.byte	0
 13100 0214 22       		.uleb128 0x22
 13101 0215 34       		.uleb128 0x34
 13102 0216 00       		.byte	0
 13103 0217 03       		.uleb128 0x3
 13104 0218 0E       		.uleb128 0xe
 13105 0219 3A       		.uleb128 0x3a
 13106 021a 0B       		.uleb128 0xb
 13107 021b 3B       		.uleb128 0x3b
 13108 021c 0B       		.uleb128 0xb
 13109 021d 49       		.uleb128 0x49
 13110 021e 13       		.uleb128 0x13
 13111 021f 3F       		.uleb128 0x3f
 13112 0220 19       		.uleb128 0x19
 13113 0221 3C       		.uleb128 0x3c
 13114 0222 19       		.uleb128 0x19
 13115 0223 00       		.byte	0
 13116 0224 00       		.byte	0
 13117 0225 23       		.uleb128 0x23
 13118 0226 21       		.uleb128 0x21
 13119 0227 00       		.byte	0
 13120 0228 49       		.uleb128 0x49
 13121 0229 13       		.uleb128 0x13
 13122 022a 2F       		.uleb128 0x2f
 13123 022b 05       		.uleb128 0x5
 13124 022c 00       		.byte	0
 13125 022d 00       		.byte	0
 13126 022e 24       		.uleb128 0x24
 13127 022f 26       		.uleb128 0x26
 13128 0230 00       		.byte	0
 13129 0231 49       		.uleb128 0x49
 13130 0232 13       		.uleb128 0x13
 13131 0233 00       		.byte	0
 13132 0234 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 277


 13133 0235 25       		.uleb128 0x25
 13134 0236 34       		.uleb128 0x34
 13135 0237 00       		.byte	0
 13136 0238 03       		.uleb128 0x3
 13137 0239 0E       		.uleb128 0xe
 13138 023a 3A       		.uleb128 0x3a
 13139 023b 0B       		.uleb128 0xb
 13140 023c 3B       		.uleb128 0x3b
 13141 023d 0B       		.uleb128 0xb
 13142 023e 49       		.uleb128 0x49
 13143 023f 13       		.uleb128 0x13
 13144 0240 3F       		.uleb128 0x3f
 13145 0241 19       		.uleb128 0x19
 13146 0242 02       		.uleb128 0x2
 13147 0243 18       		.uleb128 0x18
 13148 0244 00       		.byte	0
 13149 0245 00       		.byte	0
 13150 0246 26       		.uleb128 0x26
 13151 0247 34       		.uleb128 0x34
 13152 0248 00       		.byte	0
 13153 0249 03       		.uleb128 0x3
 13154 024a 0E       		.uleb128 0xe
 13155 024b 3A       		.uleb128 0x3a
 13156 024c 0B       		.uleb128 0xb
 13157 024d 3B       		.uleb128 0x3b
 13158 024e 05       		.uleb128 0x5
 13159 024f 49       		.uleb128 0x49
 13160 0250 13       		.uleb128 0x13
 13161 0251 3F       		.uleb128 0x3f
 13162 0252 19       		.uleb128 0x19
 13163 0253 3C       		.uleb128 0x3c
 13164 0254 19       		.uleb128 0x19
 13165 0255 00       		.byte	0
 13166 0256 00       		.byte	0
 13167 0257 27       		.uleb128 0x27
 13168 0258 34       		.uleb128 0x34
 13169 0259 00       		.byte	0
 13170 025a 03       		.uleb128 0x3
 13171 025b 0E       		.uleb128 0xe
 13172 025c 3A       		.uleb128 0x3a
 13173 025d 0B       		.uleb128 0xb
 13174 025e 3B       		.uleb128 0x3b
 13175 025f 05       		.uleb128 0x5
 13176 0260 49       		.uleb128 0x49
 13177 0261 13       		.uleb128 0x13
 13178 0262 3F       		.uleb128 0x3f
 13179 0263 19       		.uleb128 0x19
 13180 0264 02       		.uleb128 0x2
 13181 0265 18       		.uleb128 0x18
 13182 0266 00       		.byte	0
 13183 0267 00       		.byte	0
 13184 0268 28       		.uleb128 0x28
 13185 0269 34       		.uleb128 0x34
 13186 026a 00       		.byte	0
 13187 026b 03       		.uleb128 0x3
 13188 026c 08       		.uleb128 0x8
 13189 026d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 278


 13190 026e 0B       		.uleb128 0xb
 13191 026f 3B       		.uleb128 0x3b
 13192 0270 0B       		.uleb128 0xb
 13193 0271 49       		.uleb128 0x49
 13194 0272 13       		.uleb128 0x13
 13195 0273 3F       		.uleb128 0x3f
 13196 0274 19       		.uleb128 0x19
 13197 0275 02       		.uleb128 0x2
 13198 0276 18       		.uleb128 0x18
 13199 0277 00       		.byte	0
 13200 0278 00       		.byte	0
 13201 0279 00       		.byte	0
 13202              		.section	.debug_aranges,"",%progbits
 13203 0000 04010000 		.4byte	0x104
 13204 0004 0200     		.2byte	0x2
 13205 0006 00000000 		.4byte	.Ldebug_info0
 13206 000a 04       		.byte	0x4
 13207 000b 00       		.byte	0
 13208 000c 0000     		.2byte	0
 13209 000e 0000     		.2byte	0
 13210 0010 00000000 		.4byte	.LFB64
 13211 0014 74010000 		.4byte	.LFE64-.LFB64
 13212 0018 00000000 		.4byte	.LFB65
 13213 001c 9C000000 		.4byte	.LFE65-.LFB65
 13214 0020 00000000 		.4byte	.LFB66
 13215 0024 14000000 		.4byte	.LFE66-.LFB66
 13216 0028 00000000 		.4byte	.LFB67
 13217 002c 7C000000 		.4byte	.LFE67-.LFB67
 13218 0030 00000000 		.4byte	.LFB68
 13219 0034 58000000 		.4byte	.LFE68-.LFB68
 13220 0038 00000000 		.4byte	.LFB69
 13221 003c 68000000 		.4byte	.LFE69-.LFB69
 13222 0040 00000000 		.4byte	.LFB70
 13223 0044 4C000000 		.4byte	.LFE70-.LFB70
 13224 0048 00000000 		.4byte	.LFB71
 13225 004c 46000000 		.4byte	.LFE71-.LFB71
 13226 0050 00000000 		.4byte	.LFB72
 13227 0054 56000000 		.4byte	.LFE72-.LFB72
 13228 0058 00000000 		.4byte	.LFB73
 13229 005c 0C000000 		.4byte	.LFE73-.LFB73
 13230 0060 00000000 		.4byte	.LFB74
 13231 0064 0C010000 		.4byte	.LFE74-.LFB74
 13232 0068 00000000 		.4byte	.LFB75
 13233 006c 701E0000 		.4byte	.LFE75-.LFB75
 13234 0070 00000000 		.4byte	.LFB76
 13235 0074 70000000 		.4byte	.LFE76-.LFB76
 13236 0078 00000000 		.4byte	.LFB77
 13237 007c 70010000 		.4byte	.LFE77-.LFB77
 13238 0080 00000000 		.4byte	.LFB78
 13239 0084 E0000000 		.4byte	.LFE78-.LFB78
 13240 0088 00000000 		.4byte	.LFB79
 13241 008c E0000000 		.4byte	.LFE79-.LFB79
 13242 0090 00000000 		.4byte	.LFB80
 13243 0094 30000000 		.4byte	.LFE80-.LFB80
 13244 0098 00000000 		.4byte	.LFB81
 13245 009c E8000000 		.4byte	.LFE81-.LFB81
 13246 00a0 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 279


 13247 00a4 54000000 		.4byte	.LFE82-.LFB82
 13248 00a8 00000000 		.4byte	.LFB83
 13249 00ac C4000000 		.4byte	.LFE83-.LFB83
 13250 00b0 00000000 		.4byte	.LFB84
 13251 00b4 98000000 		.4byte	.LFE84-.LFB84
 13252 00b8 00000000 		.4byte	.LFB85
 13253 00bc D4000000 		.4byte	.LFE85-.LFB85
 13254 00c0 00000000 		.4byte	.LFB86
 13255 00c4 1C000000 		.4byte	.LFE86-.LFB86
 13256 00c8 00000000 		.4byte	.LFB87
 13257 00cc 68000000 		.4byte	.LFE87-.LFB87
 13258 00d0 00000000 		.4byte	.LFB88
 13259 00d4 68000000 		.4byte	.LFE88-.LFB88
 13260 00d8 00000000 		.4byte	.LFB89
 13261 00dc 68000000 		.4byte	.LFE89-.LFB89
 13262 00e0 00000000 		.4byte	.LFB90
 13263 00e4 6C000000 		.4byte	.LFE90-.LFB90
 13264 00e8 00000000 		.4byte	.LFB91
 13265 00ec 64000000 		.4byte	.LFE91-.LFB91
 13266 00f0 00000000 		.4byte	.LFB92
 13267 00f4 D4090000 		.4byte	.LFE92-.LFB92
 13268 00f8 00000000 		.4byte	.LFB93
 13269 00fc 48010000 		.4byte	.LFE93-.LFB93
 13270 0100 00000000 		.4byte	0
 13271 0104 00000000 		.4byte	0
 13272              		.section	.debug_ranges,"",%progbits
 13273              	.Ldebug_ranges0:
 13274 0000 00000000 		.4byte	.LFB64
 13275 0004 74010000 		.4byte	.LFE64
 13276 0008 00000000 		.4byte	.LFB65
 13277 000c 9C000000 		.4byte	.LFE65
 13278 0010 00000000 		.4byte	.LFB66
 13279 0014 14000000 		.4byte	.LFE66
 13280 0018 00000000 		.4byte	.LFB67
 13281 001c 7C000000 		.4byte	.LFE67
 13282 0020 00000000 		.4byte	.LFB68
 13283 0024 58000000 		.4byte	.LFE68
 13284 0028 00000000 		.4byte	.LFB69
 13285 002c 68000000 		.4byte	.LFE69
 13286 0030 00000000 		.4byte	.LFB70
 13287 0034 4C000000 		.4byte	.LFE70
 13288 0038 00000000 		.4byte	.LFB71
 13289 003c 46000000 		.4byte	.LFE71
 13290 0040 00000000 		.4byte	.LFB72
 13291 0044 56000000 		.4byte	.LFE72
 13292 0048 00000000 		.4byte	.LFB73
 13293 004c 0C000000 		.4byte	.LFE73
 13294 0050 00000000 		.4byte	.LFB74
 13295 0054 0C010000 		.4byte	.LFE74
 13296 0058 00000000 		.4byte	.LFB75
 13297 005c 701E0000 		.4byte	.LFE75
 13298 0060 00000000 		.4byte	.LFB76
 13299 0064 70000000 		.4byte	.LFE76
 13300 0068 00000000 		.4byte	.LFB77
 13301 006c 70010000 		.4byte	.LFE77
 13302 0070 00000000 		.4byte	.LFB78
 13303 0074 E0000000 		.4byte	.LFE78
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 280


 13304 0078 00000000 		.4byte	.LFB79
 13305 007c E0000000 		.4byte	.LFE79
 13306 0080 00000000 		.4byte	.LFB80
 13307 0084 30000000 		.4byte	.LFE80
 13308 0088 00000000 		.4byte	.LFB81
 13309 008c E8000000 		.4byte	.LFE81
 13310 0090 00000000 		.4byte	.LFB82
 13311 0094 54000000 		.4byte	.LFE82
 13312 0098 00000000 		.4byte	.LFB83
 13313 009c C4000000 		.4byte	.LFE83
 13314 00a0 00000000 		.4byte	.LFB84
 13315 00a4 98000000 		.4byte	.LFE84
 13316 00a8 00000000 		.4byte	.LFB85
 13317 00ac D4000000 		.4byte	.LFE85
 13318 00b0 00000000 		.4byte	.LFB86
 13319 00b4 1C000000 		.4byte	.LFE86
 13320 00b8 00000000 		.4byte	.LFB87
 13321 00bc 68000000 		.4byte	.LFE87
 13322 00c0 00000000 		.4byte	.LFB88
 13323 00c4 68000000 		.4byte	.LFE88
 13324 00c8 00000000 		.4byte	.LFB89
 13325 00cc 68000000 		.4byte	.LFE89
 13326 00d0 00000000 		.4byte	.LFB90
 13327 00d4 6C000000 		.4byte	.LFE90
 13328 00d8 00000000 		.4byte	.LFB91
 13329 00dc 64000000 		.4byte	.LFE91
 13330 00e0 00000000 		.4byte	.LFB92
 13331 00e4 D4090000 		.4byte	.LFE92
 13332 00e8 00000000 		.4byte	.LFB93
 13333 00ec 48010000 		.4byte	.LFE93
 13334 00f0 00000000 		.4byte	0
 13335 00f4 00000000 		.4byte	0
 13336              		.section	.debug_line,"",%progbits
 13337              	.Ldebug_line0:
 13338 0000 C50B0000 		.section	.debug_str,"MS",%progbits,1
 13338      02009B01 
 13338      00000201 
 13338      FB0E0D00 
 13338      01010101 
 13339              	.LASF167:
 13340 0000 70726573 		.ascii	"presetArraySection\000"
 13340      65744172 
 13340      72617953 
 13340      65637469 
 13340      6F6E00
 13341              	.LASF158:
 13342 0013 70726573 		.ascii	"presetArray\000"
 13342      65744172 
 13342      72617900 
 13343              	.LASF312:
 13344 001f 66697273 		.ascii	"firstSysex\000"
 13344      74537973 
 13344      657800
 13345              	.LASF28:
 13346 002a 73697A65 		.ascii	"sizetype\000"
 13346      74797065 
 13346      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 281


 13347              	.LASF172:
 13348 0033 73656E64 		.ascii	"sendingMessage\000"
 13348      696E674D 
 13348      65737361 
 13348      676500
 13349              	.LASF261:
 13350 0042 70726576 		.ascii	"prev_processed_volumePedal\000"
 13350      5F70726F 
 13350      63657373 
 13350      65645F76 
 13350      6F6C756D 
 13351              	.LASF85:
 13352 005d 74656D70 		.ascii	"tempangle\000"
 13352      616E676C 
 13352      6500
 13353              	.LASF227:
 13354 0067 6E657744 		.ascii	"newDataFlag2\000"
 13354      61746146 
 13354      6C616732 
 13354      00
 13355              	.LASF268:
 13356 0074 6D616372 		.ascii	"macroNamesArray\000"
 13356      6F4E616D 
 13356      65734172 
 13356      72617900 
 13357              	.LASF38:
 13358 0084 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 13358      4D5F4545 
 13358      50524F4D 
 13358      5F535543 
 13358      43455353 
 13359              	.LASF17:
 13360 0099 696E7433 		.ascii	"int32_t\000"
 13360      325F7400 
 13361              	.LASF149:
 13362 00a1 456D5F45 		.ascii	"Em_EEPROM_context\000"
 13362      4550524F 
 13362      4D5F636F 
 13362      6E746578 
 13362      7400
 13363              	.LASF47:
 13364 00b3 54686972 		.ascii	"ThirdLine\000"
 13364      644C696E 
 13364      6500
 13365              	.LASF112:
 13366 00bd 6E6F7465 		.ascii	"noteEvent\000"
 13366      4576656E 
 13366      7400
 13367              	.LASF236:
 13368 00c7 53504932 		.ascii	"SPI2errorflag\000"
 13368      6572726F 
 13368      72666C61 
 13368      6700
 13369              	.LASF21:
 13370 00d5 75696E74 		.ascii	"uint32\000"
 13370      333200
 13371              	.LASF94:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 282


 13372 00dc 77686963 		.ascii	"whichMacroToStoreName\000"
 13372      684D6163 
 13372      726F546F 
 13372      53746F72 
 13372      654E616D 
 13373              	.LASF125:
 13374 00f2 43437661 		.ascii	"CCval\000"
 13374      6C00
 13375              	.LASF178:
 13376 00f8 6E756D4D 		.ascii	"numMappings\000"
 13376      61707069 
 13376      6E677300 
 13377              	.LASF153:
 13378 0104 49324362 		.ascii	"I2Cbuff1\000"
 13378      75666631 
 13378      00
 13379              	.LASF248:
 13380 010d 49324362 		.ascii	"I2Cbuff2\000"
 13380      75666632 
 13380      00
 13381              	.LASF250:
 13382 0116 6D75785F 		.ascii	"mux_states\000"
 13382      73746174 
 13382      657300
 13383              	.LASF138:
 13384 0121 74656D70 		.ascii	"tempLow\000"
 13384      4C6F7700 
 13385              	.LASF205:
 13386 0129 6E65636B 		.ascii	"necks\000"
 13386      7300
 13387              	.LASF196:
 13388 012f 6F637461 		.ascii	"octave\000"
 13388      766500
 13389              	.LASF49:
 13390 0136 4E696C4C 		.ascii	"NilLine\000"
 13390      696E6500 
 13391              	.LASF43:
 13392 013e 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 13392      6E5F656D 
 13392      5F656570 
 13392      726F6D5F 
 13392      73746174 
 13393              	.LASF302:
 13394 0157 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 13394      6F4F4C45 
 13394      44576169 
 13394      74696E67 
 13394      546F5365 
 13395              	.LASF253:
 13396 016e 70656461 		.ascii	"pedals_high\000"
 13396      6C735F68 
 13396      69676800 
 13397              	.LASF100:
 13398 017a 6E627974 		.ascii	"nbytes\000"
 13398      657300
 13399              	.LASF288:
 13400 0181 636F7065 		.ascii	"copedentNamesArray\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 283


 13400      64656E74 
 13400      4E616D65 
 13400      73417272 
 13400      617900
 13401              	.LASF176:
 13402 0194 76616C73 		.ascii	"valsCount\000"
 13402      436F756E 
 13402      7400
 13403              	.LASF194:
 13404 019e 74656D70 		.ascii	"temper\000"
 13404      657200
 13405              	.LASF124:
 13406 01a5 43436E75 		.ascii	"CCnum\000"
 13406      6D00
 13407              	.LASF40:
 13408 01ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 13408      4D5F4545 
 13408      50524F4D 
 13408      5F424144 
 13408      5F434845 
 13409              	.LASF36:
 13410 01c5 75736572 		.ascii	"userFlashStartAddr\000"
 13410      466C6173 
 13410      68537461 
 13410      72744164 
 13410      647200
 13411              	.LASF30:
 13412 01d8 6E756D62 		.ascii	"numberOfRows\000"
 13412      65724F66 
 13412      526F7773 
 13412      00
 13413              	.LASF132:
 13414 01e5 696E7456 		.ascii	"intVal\000"
 13414      616C00
 13415              	.LASF70:
 13416 01ec 69737461 		.ascii	"istart\000"
 13416      727400
 13417              	.LASF74:
 13418 01f3 70656461 		.ascii	"pedalDiff\000"
 13418      6C446966 
 13418      6600
 13419              	.LASF129:
 13420 01fd 74686556 		.ascii	"theVal\000"
 13420      616C00
 13421              	.LASF34:
 13422 0204 72656475 		.ascii	"redundantCopy\000"
 13422      6E64616E 
 13422      74436F70 
 13422      7900
 13423              	.LASF2:
 13424 0212 5F5F7569 		.ascii	"__uint8_t\000"
 13424      6E74385F 
 13424      7400
 13425              	.LASF67:
 13426 021c 616C7068 		.ascii	"alpha\000"
 13426      6100
 13427              	.LASF57:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 284


 13428 0222 70726573 		.ascii	"presetEnd\000"
 13428      6574456E 
 13428      6400
 13429              	.LASF247:
 13430 022c 62617243 		.ascii	"barCount\000"
 13430      6F756E74 
 13430      00
 13431              	.LASF161:
 13432 0235 73656E64 		.ascii	"sendMessageEnd\000"
 13432      4D657373 
 13432      61676545 
 13432      6E6400
 13433              	.LASF266:
 13434 0244 70726573 		.ascii	"presetNumberToLoad\000"
 13434      65744E75 
 13434      6D626572 
 13434      546F4C6F 
 13434      616400
 13435              	.LASF276:
 13436 0257 766F6963 		.ascii	"voice\000"
 13436      6500
 13437              	.LASF216:
 13438 025d 73747269 		.ascii	"strings\000"
 13438      6E677300 
 13439              	.LASF8:
 13440 0265 6C6F6E67 		.ascii	"long int\000"
 13440      20696E74 
 13440      00
 13441              	.LASF174:
 13442 026e 63757272 		.ascii	"currentFloat\000"
 13442      656E7446 
 13442      6C6F6174 
 13442      00
 13443              	.LASF267:
 13444 027b 70726573 		.ascii	"presetLoadedResponse\000"
 13444      65744C6F 
 13444      61646564 
 13444      52657370 
 13444      6F6E7365 
 13445              	.LASF159:
 13446 0290 70726573 		.ascii	"presetNumberToWrite\000"
 13446      65744E75 
 13446      6D626572 
 13446      546F5772 
 13446      69746500 
 13447              	.LASF93:
 13448 02a4 77686963 		.ascii	"whichPresetToStoreName\000"
 13448      68507265 
 13448      73657454 
 13448      6F53746F 
 13448      72654E61 
 13449              	.LASF265:
 13450 02bb 70726573 		.ascii	"presetNamesArray\000"
 13450      65744E61 
 13450      6D657341 
 13450      72726179 
 13450      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 285


 13451              	.LASF75:
 13452 02cc 6D61696E 		.ascii	"main\000"
 13452      00
 13453              	.LASF289:
 13454 02d1 70726576 		.ascii	"prevStringPitchBend\000"
 13454      53747269 
 13454      6E675069 
 13454      74636842 
 13454      656E6400 
 13455              	.LASF119:
 13456 02e5 4D494449 		.ascii	"MIDInoteNum\000"
 13456      6E6F7465 
 13456      4E756D00 
 13457              	.LASF127:
 13458 02f1 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 13458      4D494449 
 13458      416C6C4E 
 13458      6F746573 
 13458      4F666600 
 13459              	.LASF102:
 13460 0305 6572726F 		.ascii	"error\000"
 13460      7200
 13461              	.LASF46:
 13462 030b 5365636F 		.ascii	"SecondLine\000"
 13462      6E644C69 
 13462      6E6500
 13463              	.LASF269:
 13464 0316 66726574 		.ascii	"fretScaling\000"
 13464      5363616C 
 13464      696E6700 
 13465              	.LASF173:
 13466 0322 73656E64 		.ascii	"sendKnobs\000"
 13466      4B6E6F62 
 13466      7300
 13467              	.LASF51:
 13468 032c 70726573 		.ascii	"presetArraySectionState\000"
 13468      65744172 
 13468      72617953 
 13468      65637469 
 13468      6F6E5374 
 13469              	.LASF238:
 13470 0344 6B6E6F62 		.ascii	"knobs\000"
 13470      7300
 13471              	.LASF155:
 13472 034a 73797365 		.ascii	"sysexPointer\000"
 13472      78506F69 
 13472      6E746572 
 13472      00
 13473              	.LASF68:
 13474 0357 6F6D416C 		.ascii	"omAlpha\000"
 13474      70686100 
 13475              	.LASF80:
 13476 035f 73747269 		.ascii	"stringStartLoc\000"
 13476      6E675374 
 13476      6172744C 
 13476      6F6300
 13477              	.LASF0:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 286


 13478 036e 7369676E 		.ascii	"signed char\000"
 13478      65642063 
 13478      68617200 
 13479              	.LASF14:
 13480 037a 75696E74 		.ascii	"uint8_t\000"
 13480      385F7400 
 13481              	.LASF29:
 13482 0382 776C456E 		.ascii	"wlEndAddr\000"
 13482      64416464 
 13482      7200
 13483              	.LASF140:
 13484 038c 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 13484      63616C6C 
 13484      6261636B 
 13484      4C6F6361 
 13484      6C4D6964 
 13485              	.LASF111:
 13486 03a7 73706973 		.ascii	"spis_1_ss\000"
 13486      5F315F73 
 13486      7300
 13487              	.LASF41:
 13488 03b1 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 13488      4D5F4545 
 13488      50524F4D 
 13488      5F424144 
 13488      5F444154 
 13489              	.LASF50:
 13490 03c7 5F4F4C45 		.ascii	"_OLEDLine\000"
 13490      444C696E 
 13490      6500
 13491              	.LASF175:
 13492 03d1 6D617043 		.ascii	"mapCount\000"
 13492      6F756E74 
 13492      00
 13493              	.LASF136:
 13494 03da 74656D70 		.ascii	"tempIntVersion\000"
 13494      496E7456 
 13494      65727369 
 13494      6F6E00
 13495              	.LASF270:
 13496 03e9 70656461 		.ascii	"pedalRatios\000"
 13496      6C526174 
 13496      696F7300 
 13497              	.LASF1:
 13498 03f5 756E7369 		.ascii	"unsigned char\000"
 13498      676E6564 
 13498      20636861 
 13498      7200
 13499              	.LASF180:
 13500 0403 76616C43 		.ascii	"valCheck\000"
 13500      6865636B 
 13500      00
 13501              	.LASF131:
 13502 040c 76616C73 		.ascii	"valsStart\000"
 13502      53746172 
 13502      7400
 13503              	.LASF77:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 287


 13504 0416 636F7065 		.ascii	"coped\000"
 13504      6400
 13505              	.LASF206:
 13506 041c 72783143 		.ascii	"rx1Channel\000"
 13506      68616E6E 
 13506      656C00
 13507              	.LASF79:
 13508 0427 70656461 		.ascii	"pedalStartLoc\000"
 13508      6C537461 
 13508      72744C6F 
 13508      6300
 13509              	.LASF222:
 13510 0435 6E657744 		.ascii	"newDataFlag\000"
 13510      61746146 
 13510      6C616700 
 13511              	.LASF296:
 13512 0441 73747269 		.ascii	"stringOctave\000"
 13512      6E674F63 
 13512      74617665 
 13512      00
 13513              	.LASF109:
 13514 044e 5553425F 		.ascii	"USB_service\000"
 13514      73657276 
 13514      69636500 
 13515              	.LASF177:
 13516 045a 6D617043 		.ascii	"mapCountExpectation\000"
 13516      6F756E74 
 13516      45787065 
 13516      63746174 
 13516      696F6E00 
 13517              	.LASF62:
 13518 046e 74656D70 		.ascii	"tempmax\000"
 13518      6D617800 
 13519              	.LASF130:
 13520 0476 73746F70 		.ascii	"stoppingPoint\000"
 13520      70696E67 
 13520      506F696E 
 13520      7400
 13521              	.LASF69:
 13522 0484 76616C75 		.ascii	"value\000"
 13522      6500
 13523              	.LASF271:
 13524 048a 6C617374 		.ascii	"last_mux\000"
 13524      5F6D7578 
 13524      00
 13525              	.LASF280:
 13526 0493 656E636F 		.ascii	"encoderVal\000"
 13526      64657256 
 13526      616C00
 13527              	.LASF122:
 13528 049e 70726573 		.ascii	"pressure\000"
 13528      73757265 
 13528      00
 13529              	.LASF303:
 13530 04a7 70726573 		.ascii	"presetAlreadyDisplayed\000"
 13530      6574416C 
 13530      72656164 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 288


 13530      79446973 
 13530      706C6179 
 13531              	.LASF53:
 13532 04be 6D616372 		.ascii	"macroNames\000"
 13532      6F4E616D 
 13532      657300
 13533              	.LASF217:
 13534 04c9 70726576 		.ascii	"prevStrings\000"
 13534      53747269 
 13534      6E677300 
 13535              	.LASF24:
 13536 04d5 63686172 		.ascii	"char\000"
 13536      00
 13537              	.LASF143:
 13538 04da 65657072 		.ascii	"eepromArray\000"
 13538      6F6D4172 
 13538      72617900 
 13539              	.LASF204:
 13540 04e6 63757272 		.ascii	"currentCopedent\000"
 13540      656E7443 
 13540      6F706564 
 13540      656E7400 
 13541              	.LASF200:
 13542 04f6 72617741 		.ascii	"rawAngle\000"
 13542      6E676C65 
 13542      00
 13543              	.LASF63:
 13544 04ff 4C454146 		.ascii	"LEAF_clip\000"
 13544      5F636C69 
 13544      7000
 13545              	.LASF96:
 13546 0509 446D6154 		.ascii	"DmaTxConfiguration\000"
 13546      78436F6E 
 13546      66696775 
 13546      72617469 
 13546      6F6E00
 13547              	.LASF273:
 13548 051c 6E65636B 		.ascii	"neck\000"
 13548      00
 13549              	.LASF5:
 13550 0521 5F5F7569 		.ascii	"__uint16_t\000"
 13550      6E743136 
 13550      5F7400
 13551              	.LASF108:
 13552 052c 63686563 		.ascii	"checkUSB_Vbus\000"
 13552      6B555342 
 13552      5F566275 
 13552      7300
 13553              	.LASF139:
 13554 053a 726F756E 		.ascii	"roundedIndex\000"
 13554      64656449 
 13554      6E646578 
 13554      00
 13555              	.LASF246:
 13556 0547 65657072 		.ascii	"eeprom_cnt\000"
 13556      6F6D5F63 
 13556      6E7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 289


 13557              	.LASF147:
 13558 0552 5553425F 		.ascii	"USB_midi_out_ep\000"
 13558      6D696469 
 13558      5F6F7574 
 13558      5F657000 
 13559              	.LASF86:
 13560 0562 74656D70 		.ascii	"tempPedal\000"
 13560      50656461 
 13560      6C00
 13561              	.LASF105:
 13562 056c 4932435F 		.ascii	"I2C_reset\000"
 13562      72657365 
 13562      7400
 13563              	.LASF281:
 13564 0576 656E636F 		.ascii	"encoderNum\000"
 13564      6465724E 
 13564      756D00
 13565              	.LASF278:
 13566 0581 6F637431 		.ascii	"oct1Up\000"
 13566      557000
 13567              	.LASF44:
 13568 0588 75696E74 		.ascii	"uint\000"
 13568      00
 13569              	.LASF202:
 13570 058d 6D696469 		.ascii	"midiOverflow\000"
 13570      4F766572 
 13570      666C6F77 
 13570      00
 13571              	.LASF106:
 13572 059a 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 13572      496E6974 
 13572      69616C50 
 13572      6564616C 
 13572      5A65726F 
 13573              	.LASF121:
 13574 05b8 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 13574      4D494449 
 13574      506F6C79 
 13574      4B657950 
 13574      72657373 
 13575              	.LASF135:
 13576 05d0 73747269 		.ascii	"stringChange\000"
 13576      6E674368 
 13576      616E6765 
 13576      00
 13577              	.LASF90:
 13578 05dd 636F6D70 		.ascii	"computerMIDIOffset\000"
 13578      75746572 
 13578      4D494449 
 13578      4F666673 
 13578      657400
 13579              	.LASF166:
 13580 05f0 73696E67 		.ascii	"singleParamValueLow\000"
 13580      6C655061 
 13580      72616D56 
 13580      616C7565 
 13580      4C6F7700 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 290


 13581              	.LASF123:
 13582 0604 73656E64 		.ascii	"sendMIDIControlChange\000"
 13582      4D494449 
 13582      436F6E74 
 13582      726F6C43 
 13582      68616E67 
 13583              	.LASF221:
 13584 061a 73706943 		.ascii	"spiCounter\000"
 13584      6F756E74 
 13584      657200
 13585              	.LASF39:
 13586 0625 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 13586      4D5F4545 
 13586      50524F4D 
 13586      5F424144 
 13586      5F504152 
 13587              	.LASF313:
 13588 063c 73797365 		.ascii	"sysexPointerMask\000"
 13588      78506F69 
 13588      6E746572 
 13588      4D61736B 
 13588      00
 13589              	.LASF151:
 13590 064d 4932435F 		.ascii	"I2C_1_initVar\000"
 13590      315F696E 
 13590      69745661 
 13590      7200
 13591              	.LASF52:
 13592 065b 70726573 		.ascii	"presetName\000"
 13592      65744E61 
 13592      6D6500
 13593              	.LASF157:
 13594 0666 70617273 		.ascii	"parsingSysex\000"
 13594      696E6753 
 13594      79736578 
 13594      00
 13595              	.LASF193:
 13596 0673 72657475 		.ascii	"returnedData\000"
 13596      726E6564 
 13596      44617461 
 13596      00
 13597              	.LASF48:
 13598 0680 466F7572 		.ascii	"FourthLine\000"
 13598      74684C69 
 13598      6E6500
 13599              	.LASF243:
 13600 068b 77686963 		.ascii	"whichMacro\000"
 13600      684D6163 
 13600      726F00
 13601              	.LASF255:
 13602 0696 766F6C75 		.ascii	"volumePedal\000"
 13602      6D655065 
 13602      64616C00 
 13603              	.LASF214:
 13604 06a2 72784275 		.ascii	"rxBufferPluck\000"
 13604      66666572 
 13604      506C7563 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 291


 13604      6B00
 13605              	.LASF287:
 13606 06b0 636F7065 		.ascii	"copedent\000"
 13606      64656E74 
 13606      00
 13607              	.LASF258:
 13608 06b9 70656461 		.ascii	"pedals8bit\000"
 13608      6C733862 
 13608      697400
 13609              	.LASF239:
 13610 06c4 70726576 		.ascii	"prevKnobs\000"
 13610      4B6E6F62 
 13610      7300
 13611              	.LASF234:
 13612 06ce 6D795370 		.ascii	"mySpiCounter\000"
 13612      69436F75 
 13612      6E746572 
 13612      00
 13613              	.LASF170:
 13614 06db 73797365 		.ascii	"sysexMessageInProgress\000"
 13614      784D6573 
 13614      73616765 
 13614      496E5072 
 13614      6F677265 
 13615              	.LASF311:
 13616 06f2 5350495F 		.ascii	"SPI_errors\000"
 13616      6572726F 
 13616      727300
 13617              	.LASF117:
 13618 06fd 43434576 		.ascii	"CCEvent\000"
 13618      656E7400 
 13619              	.LASF128:
 13620 0705 70617273 		.ascii	"parseSysex\000"
 13620      65537973 
 13620      657800
 13621              	.LASF316:
 13622 0710 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 13622      73657273 
 13622      5C4A6566 
 13622      66536E79 
 13622      6465725C 
 13623 073e 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 13623      355F656C 
 13623      65637472 
 13623      6F737465 
 13623      656C5F73 
 13624 0770 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 13624      5F50534F 
 13624      43335F35 
 13624      5F546865 
 13624      726D6973 
 13625              	.LASF294:
 13626 078e 696E7653 		.ascii	"invStringMappedPositions\000"
 13626      7472696E 
 13626      674D6170 
 13626      70656450 
 13626      6F736974 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 292


 13627              	.LASF232:
 13628 07a7 696E7075 		.ascii	"inputData\000"
 13628      74446174 
 13628      6100
 13629              	.LASF66:
 13630 07b1 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 13630      5F696E74 
 13630      6572706F 
 13630      6C617469 
 13630      6F6E5F6C 
 13631              	.LASF308:
 13632 07cb 70726576 		.ascii	"prevNotes\000"
 13632      4E6F7465 
 13632      7300
 13633              	.LASF37:
 13634 07d5 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 13634      74635F65 
 13634      6570726F 
 13634      6D5F636F 
 13634      6E746578 
 13635              	.LASF10:
 13636 07ed 6C6F6E67 		.ascii	"long unsigned int\000"
 13636      20756E73 
 13636      69676E65 
 13636      6420696E 
 13636      7400
 13637              	.LASF150:
 13638 07ff 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 13638      4550524F 
 13638      4D5F656D 
 13638      5F456570 
 13638      726F6D53 
 13639              	.LASF245:
 13640 081a 65657072 		.ascii	"eepromReturnValue\000"
 13640      6F6D5265 
 13640      7475726E 
 13640      56616C75 
 13640      6500
 13641              	.LASF84:
 13642 082c 74656D70 		.ascii	"tempInt\000"
 13642      496E7400 
 13643              	.LASF83:
 13644 0834 73746174 		.ascii	"status\000"
 13644      757300
 13645              	.LASF249:
 13646 083b 73656E64 		.ascii	"send_it\000"
 13646      5F697400 
 13647              	.LASF191:
 13648 0843 6C696E65 		.ascii	"linearPotValue32Bit\000"
 13648      6172506F 
 13648      7456616C 
 13648      75653332 
 13648      42697400 
 13649              	.LASF120:
 13650 0857 6368616E 		.ascii	"channel\000"
 13650      6E656C00 
 13651              	.LASF98:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 293


 13652 085f 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 13652      4D617374 
 13652      65725772 
 13652      69746542 
 13652      6C6F636B 
 13653              	.LASF197:
 13654 0877 616E676C 		.ascii	"angle\000"
 13654      6500
 13655              	.LASF182:
 13656 087d 6E756D53 		.ascii	"numStrings\000"
 13656      7472696E 
 13656      677300
 13657              	.LASF42:
 13658 0888 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 13658      4D5F4545 
 13658      50524F4D 
 13658      5F575249 
 13658      54455F46 
 13659              	.LASF72:
 13660 08a0 6F737461 		.ascii	"ostart\000"
 13660      727400
 13661              	.LASF264:
 13662 08a7 63757272 		.ascii	"currentPresetSelection\000"
 13662      656E7450 
 13662      72657365 
 13662      7453656C 
 13662      65637469 
 13663              	.LASF299:
 13664 08be 6F70656E 		.ascii	"openStringMIDI_Int\000"
 13664      53747269 
 13664      6E674D49 
 13664      44495F49 
 13664      6E7400
 13665              	.LASF71:
 13666 08d1 6973746F 		.ascii	"istop\000"
 13666      7000
 13667              	.LASF146:
 13668 08d7 5553425F 		.ascii	"USB_midiInBuffer\000"
 13668      6D696469 
 13668      496E4275 
 13668      66666572 
 13668      00
 13669              	.LASF314:
 13670 08e8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 13670      43313120 
 13670      352E342E 
 13670      31203230 
 13670      31363036 
 13671 091b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 13671      20726576 
 13671      6973696F 
 13671      6E203233 
 13671      37373135 
 13672 094e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 13672      66756E63 
 13672      74696F6E 
 13672      2D736563 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 294


 13672      74696F6E 
 13673              	.LASF118:
 13674 0976 73656E64 		.ascii	"sendMIDINoteOn\000"
 13674      4D494449 
 13674      4E6F7465 
 13674      4F6E00
 13675              	.LASF272:
 13676 0985 6D61696E 		.ascii	"main_counter\000"
 13676      5F636F75 
 13676      6E746572 
 13676      00
 13677              	.LASF45:
 13678 0992 46697273 		.ascii	"FirstLine\000"
 13678      744C696E 
 13678      6500
 13679              	.LASF274:
 13680 099c 6475616C 		.ascii	"dualSlider\000"
 13680      536C6964 
 13680      657200
 13681              	.LASF60:
 13682 09a7 72657374 		.ascii	"restartSystemCheck\000"
 13682      61727453 
 13682      79737465 
 13682      6D436865 
 13682      636B00
 13683              	.LASF187:
 13684 09ba 5553425F 		.ascii	"USB_check_flag\000"
 13684      63686563 
 13684      6B5F666C 
 13684      616700
 13685              	.LASF168:
 13686 09c9 6D657373 		.ascii	"messageArraySendCount\000"
 13686      61676541 
 13686      72726179 
 13686      53656E64 
 13686      436F756E 
 13687              	.LASF9:
 13688 09df 5F5F7569 		.ascii	"__uint32_t\000"
 13688      6E743332 
 13688      5F7400
 13689              	.LASF11:
 13690 09ea 6C6F6E67 		.ascii	"long long int\000"
 13690      206C6F6E 
 13690      6720696E 
 13690      7400
 13691              	.LASF192:
 13692 09f8 636F756E 		.ascii	"counter\000"
 13692      74657200 
 13693              	.LASF297:
 13694 0a00 73747269 		.ascii	"stringPitch\000"
 13694      6E675069 
 13694      74636800 
 13695              	.LASF208:
 13696 0a0c 72783154 		.ascii	"rx1TD\000"
 13696      4400
 13697              	.LASF301:
 13698 0a12 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 295


 13698      4F4C4544 
 13698      57616974 
 13698      696E6754 
 13698      6F53656E 
 13699              	.LASF82:
 13700 0a28 74656D70 		.ascii	"tempIntLow\000"
 13700      496E744C 
 13700      6F7700
 13701              	.LASF61:
 13702 0a33 74656D70 		.ascii	"tempmin\000"
 13702      6D696E00 
 13703              	.LASF35:
 13704 0a3b 626C6F63 		.ascii	"blockingWrite\000"
 13704      6B696E67 
 13704      57726974 
 13704      6500
 13705              	.LASF212:
 13706 0a49 72783343 		.ascii	"rx3Channel\000"
 13706      68616E6E 
 13706      656C00
 13707              	.LASF23:
 13708 0a54 646F7562 		.ascii	"double\000"
 13708      6C6500
 13709              	.LASF315:
 13710 0a5b 6D61696E 		.ascii	"main.c\000"
 13710      2E6300
 13711              	.LASF282:
 13712 0a62 62757474 		.ascii	"button1Up\000"
 13712      6F6E3155 
 13712      7000
 13713              	.LASF110:
 13714 0a6c 6C6F6732 		.ascii	"log2f_approx\000"
 13714      665F6170 
 13714      70726F78 
 13714      00
 13715              	.LASF165:
 13716 0a79 73696E67 		.ascii	"singleParamValueHigh\000"
 13716      6C655061 
 13716      72616D56 
 13716      616C7565 
 13716      48696768 
 13717              	.LASF152:
 13718 0a8e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 13718      52784275 
 13718      66666572 
 13718      00
 13719              	.LASF164:
 13720 0a9b 73696E67 		.ascii	"singleParamToUpdateLow\000"
 13720      6C655061 
 13720      72616D54 
 13720      6F557064 
 13720      6174654C 
 13721              	.LASF73:
 13722 0ab2 6F73746F 		.ascii	"ostop\000"
 13722      7000
 13723              	.LASF103:
 13724 0ab8 74696D65 		.ascii	"timeout\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 296


 13724      6F757400 
 13725              	.LASF22:
 13726 0ac0 666C6F61 		.ascii	"float\000"
 13726      7400
 13727              	.LASF257:
 13728 0ac6 70726576 		.ascii	"prev_processed_pedals\000"
 13728      5F70726F 
 13728      63657373 
 13728      65645F70 
 13728      6564616C 
 13729              	.LASF225:
 13730 0adc 616D4865 		.ascii	"amHere2\000"
 13730      72653200 
 13731              	.LASF242:
 13732 0ae4 53504932 		.ascii	"SPI2started\000"
 13732      73746172 
 13732      74656400 
 13733              	.LASF228:
 13734 0af0 63757272 		.ascii	"currentPluckBuffer\000"
 13734      656E7450 
 13734      6C75636B 
 13734      42756666 
 13734      657200
 13735              	.LASF89:
 13736 0b03 6261724D 		.ascii	"barMIDI\000"
 13736      49444900 
 13737              	.LASF126:
 13738 0b0b 73656E64 		.ascii	"sendMIDIPitchBend\000"
 13738      4D494449 
 13738      50697463 
 13738      6842656E 
 13738      6400
 13739              	.LASF13:
 13740 0b1d 756E7369 		.ascii	"unsigned int\000"
 13740      676E6564 
 13740      20696E74 
 13740      00
 13741              	.LASF291:
 13742 0b2a 70656461 		.ascii	"pedal_cc_assignments\000"
 13742      6C5F6363 
 13742      5F617373 
 13742      69676E6D 
 13742      656E7473 
 13743              	.LASF156:
 13744 0b3f 72656365 		.ascii	"receivingSysex\000"
 13744      6976696E 
 13744      67537973 
 13744      657800
 13745              	.LASF141:
 13746 0b4e 6361626C 		.ascii	"cable\000"
 13746      6500
 13747              	.LASF241:
 13748 0b54 70726576 		.ascii	"prevKnobs7bit\000"
 13748      4B6E6F62 
 13748      73376269 
 13748      7400
 13749              	.LASF59:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 297


 13750 0b62 56627573 		.ascii	"Vbus_function\000"
 13750      5F66756E 
 13750      6374696F 
 13750      6E00
 13751              	.LASF260:
 13752 0b70 70726576 		.ascii	"prevPedals7bit\000"
 13752      50656461 
 13752      6C733762 
 13752      697400
 13753              	.LASF114:
 13754 0b7f 76656C6F 		.ascii	"velocity\000"
 13754      63697479 
 13754      00
 13755              	.LASF309:
 13756 0b88 63686563 		.ascii	"checkStatus\000"
 13756      6B537461 
 13756      74757300 
 13757              	.LASF25:
 13758 0b94 63797374 		.ascii	"cystatus\000"
 13758      61747573 
 13758      00
 13759              	.LASF237:
 13760 0b9d 6261725F 		.ascii	"bar_index\000"
 13760      696E6465 
 13760      7800
 13761              	.LASF240:
 13762 0ba7 6B6E6F62 		.ascii	"knobs7bit\000"
 13762      73376269 
 13762      7400
 13763              	.LASF113:
 13764 0bb1 73747269 		.ascii	"string\000"
 13764      6E6700
 13765              	.LASF235:
 13766 0bb8 6F666673 		.ascii	"offsetErrorCount\000"
 13766      65744572 
 13766      726F7243 
 13766      6F756E74 
 13766      00
 13767              	.LASF262:
 13768 0bc9 70726F63 		.ascii	"processed_volumePedal\000"
 13768      65737365 
 13768      645F766F 
 13768      6C756D65 
 13768      50656461 
 13769              	.LASF87:
 13770 0bdf 74656D70 		.ascii	"tempMIDI\000"
 13770      4D494449 
 13770      00
 13771              	.LASF215:
 13772 0be8 72784275 		.ascii	"rxBufferBar\000"
 13772      66666572 
 13772      42617200 
 13773              	.LASF210:
 13774 0bf4 74784368 		.ascii	"txChannel\000"
 13774      616E6E65 
 13774      6C00
 13775              	.LASF256:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 298


 13776 0bfe 70726F63 		.ascii	"processed_pedals\000"
 13776      65737365 
 13776      645F7065 
 13776      64616C73 
 13776      00
 13777              	.LASF292:
 13778 0c0f 6F70656E 		.ascii	"openStringFrequencies\000"
 13778      53747269 
 13778      6E674672 
 13778      65717565 
 13778      6E636965 
 13779              	.LASF198:
 13780 0c25 70726576 		.ascii	"prevAngle\000"
 13780      416E676C 
 13780      6500
 13781              	.LASF224:
 13782 0c2f 706C7563 		.ascii	"pluck_index\000"
 13782      6B5F696E 
 13782      64657800 
 13783              	.LASF27:
 13784 0c3b 6C6F6E67 		.ascii	"long double\000"
 13784      20646F75 
 13784      626C6500 
 13785              	.LASF104:
 13786 0c47 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 13786      4D617374 
 13786      65725265 
 13786      6164426C 
 13786      6F636B69 
 13787              	.LASF229:
 13788 0c5e 63757272 		.ascii	"currentBarBuffer\000"
 13788      656E7442 
 13788      61724275 
 13788      66666572 
 13788      00
 13789              	.LASF199:
 13790 0c6f 4144435F 		.ascii	"ADC_values\000"
 13790      76616C75 
 13790      657300
 13791              	.LASF65:
 13792 0c7a 66746F6D 		.ascii	"ftom\000"
 13792      00
 13793              	.LASF275:
 13794 0c7f 656E7465 		.ascii	"enterUp\000"
 13794      72557000 
 13795              	.LASF231:
 13796 0c87 53504931 		.ascii	"SPI1ErrorCount\000"
 13796      4572726F 
 13796      72436F75 
 13796      6E7400
 13797              	.LASF201:
 13798 0c96 6D696469 		.ascii	"midiSent\000"
 13798      53656E74 
 13798      00
 13799              	.LASF142:
 13800 0c9f 6D696469 		.ascii	"midiMsg\000"
 13800      4D736700 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 299


 13801              	.LASF305:
 13802 0ca7 63757272 		.ascii	"currentNeck\000"
 13802      656E744E 
 13802      65636B00 
 13803              	.LASF306:
 13804 0cb3 65646974 		.ascii	"editMode\000"
 13804      4D6F6465 
 13804      00
 13805              	.LASF12:
 13806 0cbc 6C6F6E67 		.ascii	"long long unsigned int\000"
 13806      206C6F6E 
 13806      6720756E 
 13806      7369676E 
 13806      65642069 
 13807              	.LASF16:
 13808 0cd3 75696E74 		.ascii	"uint16_t\000"
 13808      31365F74 
 13808      00
 13809              	.LASF137:
 13810 0cdc 74656D70 		.ascii	"tempHigh\000"
 13810      48696768 
 13810      00
 13811              	.LASF181:
 13812 0ce5 74657374 		.ascii	"testVal\000"
 13812      56616C00 
 13813              	.LASF209:
 13814 0ced 72783254 		.ascii	"rx2TD\000"
 13814      4400
 13815              	.LASF223:
 13816 0cf3 70726576 		.ascii	"prevOctave\000"
 13816      4F637461 
 13816      766500
 13817              	.LASF317:
 13818 0cfe 62726561 		.ascii	"breakFloat\000"
 13818      6B466C6F 
 13818      617400
 13819              	.LASF310:
 13820 0d09 63686563 		.ascii	"checkBase\000"
 13820      6B426173 
 13820      6500
 13821              	.LASF58:
 13822 0d13 73706973 		.ascii	"spis_2_ss\000"
 13822      5F325F73 
 13822      7300
 13823              	.LASF283:
 13824 0d1d 62757474 		.ascii	"button2Up\000"
 13824      6F6E3255 
 13824      7000
 13825              	.LASF220:
 13826 0d27 616D4865 		.ascii	"amHere\000"
 13826      726500
 13827              	.LASF244:
 13828 0d2e 61727261 		.ascii	"array\000"
 13828      7900
 13829              	.LASF92:
 13830 0d34 7363616C 		.ascii	"scaledMIDI\000"
 13830      65644D49 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 300


 13830      444900
 13831              	.LASF26:
 13832 0d3f 72656738 		.ascii	"reg8\000"
 13832      00
 13833              	.LASF160:
 13834 0d44 636F7065 		.ascii	"copedentNumberToWrite\000"
 13834      64656E74 
 13834      4E756D62 
 13834      6572546F 
 13834      57726974 
 13835              	.LASF55:
 13836 0d5a 6D617043 		.ascii	"mapCountNext\000"
 13836      6F756E74 
 13836      4E657874 
 13836      00
 13837              	.LASF226:
 13838 0d67 73706943 		.ascii	"spiCounter2\000"
 13838      6F756E74 
 13838      65723200 
 13839              	.LASF115:
 13840 0d73 74656D70 		.ascii	"tempVel\000"
 13840      56656C00 
 13841              	.LASF183:
 13842 0d7b 75736241 		.ascii	"usbActivityCounter\000"
 13842      63746976 
 13842      69747943 
 13842      6F756E74 
 13842      657200
 13843              	.LASF254:
 13844 0d8e 64656164 		.ascii	"deadzone\000"
 13844      7A6F6E65 
 13844      00
 13845              	.LASF179:
 13846 0d97 70617273 		.ascii	"parseThatMF\000"
 13846      65546861 
 13846      744D4600 
 13847              	.LASF3:
 13848 0da3 5F5F696E 		.ascii	"__int16_t\000"
 13848      7431365F 
 13848      7400
 13849              	.LASF54:
 13850 0dad 696E6974 		.ascii	"initialVals\000"
 13850      69616C56 
 13850      616C7300 
 13851              	.LASF186:
 13852 0db9 5553425F 		.ascii	"USB_active\000"
 13852      61637469 
 13852      766500
 13853              	.LASF162:
 13854 0dc4 73656E64 		.ascii	"sendSingleParamUpdate\000"
 13854      53696E67 
 13854      6C655061 
 13854      72616D55 
 13854      70646174 
 13855              	.LASF154:
 13856 0dda 73797365 		.ascii	"sysexBuffer\000"
 13856      78427566 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 301


 13856      66657200 
 13857              	.LASF171:
 13858 0de6 62756643 		.ascii	"bufCount\000"
 13858      6F756E74 
 13858      00
 13859              	.LASF230:
 13860 0def 706C7563 		.ascii	"pluckErrorCount\000"
 13860      6B457272 
 13860      6F72436F 
 13860      756E7400 
 13861              	.LASF133:
 13862 0dff 74656D70 		.ascii	"tempChar\000"
 13862      43686172 
 13862      00
 13863              	.LASF300:
 13864 0e08 4F4C4544 		.ascii	"OLEDcount\000"
 13864      636F756E 
 13864      7400
 13865              	.LASF286:
 13866 0e12 70617463 		.ascii	"patchNum\000"
 13866      684E756D 
 13866      00
 13867              	.LASF304:
 13868 0e1b 70656461 		.ascii	"pedals_float\000"
 13868      6C735F66 
 13868      6C6F6174 
 13868      00
 13869              	.LASF19:
 13870 0e28 75696E74 		.ascii	"uint8\000"
 13870      3800
 13871              	.LASF252:
 13872 0e2e 70656461 		.ascii	"pedals_low\000"
 13872      6C735F6C 
 13872      6F7700
 13873              	.LASF91:
 13874 0e39 70697463 		.ascii	"pitchBendAmount\000"
 13874      6842656E 
 13874      64416D6F 
 13874      756E7400 
 13875              	.LASF163:
 13876 0e49 73696E67 		.ascii	"singleParamToUpdateHigh\000"
 13876      6C655061 
 13876      72616D54 
 13876      6F557064 
 13876      61746548 
 13877              	.LASF4:
 13878 0e61 73686F72 		.ascii	"short int\000"
 13878      7420696E 
 13878      7400
 13879              	.LASF169:
 13880 0e6b 6D657373 		.ascii	"messageArraySize\000"
 13880      61676541 
 13880      72726179 
 13880      53697A65 
 13880      00
 13881              	.LASF263:
 13882 0e7c 66726574 		.ascii	"fretMeasurements\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 302


 13882      4D656173 
 13882      7572656D 
 13882      656E7473 
 13882      00
 13883              	.LASF101:
 13884 0e8d 6D6F6465 		.ascii	"mode\000"
 13884      00
 13885              	.LASF95:
 13886 0e92 62756666 		.ascii	"bufferPointer\000"
 13886      6572506F 
 13886      696E7465 
 13886      7200
 13887              	.LASF298:
 13888 0ea0 73747269 		.ascii	"stringMIDI\000"
 13888      6E674D49 
 13888      444900
 13889              	.LASF88:
 13890 0eab 6F70656E 		.ascii	"openStringMIDI\000"
 13890      53747269 
 13890      6E674D49 
 13890      444900
 13891              	.LASF15:
 13892 0eba 696E7431 		.ascii	"int16_t\000"
 13892      365F7400 
 13893              	.LASF134:
 13894 0ec2 70656461 		.ascii	"pedalToWrite\000"
 13894      6C546F57 
 13894      72697465 
 13894      00
 13895              	.LASF32:
 13896 0ecf 65657072 		.ascii	"eepromSize\000"
 13896      6F6D5369 
 13896      7A6500
 13897              	.LASF107:
 13898 0eda 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 13898      6C617943 
 13898      75727265 
 13898      6E745072 
 13898      65736574 
 13899              	.LASF293:
 13900 0efe 73747269 		.ascii	"stringMappedPositions\000"
 13900      6E674D61 
 13900      70706564 
 13900      506F7369 
 13900      74696F6E 
 13901              	.LASF195:
 13902 0f14 70726576 		.ascii	"previousButtons\000"
 13902      696F7573 
 13902      42757474 
 13902      6F6E7300 
 13903              	.LASF33:
 13904 0f24 77656172 		.ascii	"wearLevelingFactor\000"
 13904      4C657665 
 13904      6C696E67 
 13904      46616374 
 13904      6F7200
 13905              	.LASF144:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 303


 13906 0f37 5553425F 		.ascii	"USB_midiInPointer\000"
 13906      6D696469 
 13906      496E506F 
 13906      696E7465 
 13906      7200
 13907              	.LASF307:
 13908 0f49 63616C69 		.ascii	"calibrationMode\000"
 13908      62726174 
 13908      696F6E4D 
 13908      6F646500 
 13909              	.LASF99:
 13910 0f59 69324341 		.ascii	"i2CAddr\000"
 13910      64647200 
 13911              	.LASF188:
 13912 0f61 696E4275 		.ascii	"inBuffer\000"
 13912      66666572 
 13912      00
 13913              	.LASF219:
 13914 0f6a 6D617853 		.ascii	"maxStrings\000"
 13914      7472696E 
 13914      677300
 13915              	.LASF78:
 13916 0f75 6C657474 		.ascii	"letter\000"
 13916      657200
 13917              	.LASF148:
 13918 0f7c 5553425F 		.ascii	"USB_midiOutBuffer\000"
 13918      6D696469 
 13918      4F757442 
 13918      75666665 
 13918      7200
 13919              	.LASF203:
 13920 0f8e 6D616372 		.ascii	"macroKnobValues\000"
 13920      6F4B6E6F 
 13920      6256616C 
 13920      75657300 
 13921              	.LASF251:
 13922 0f9e 6932635F 		.ascii	"i2c_skipped\000"
 13922      736B6970 
 13922      70656400 
 13923              	.LASF259:
 13924 0faa 70656461 		.ascii	"pedals7bit\000"
 13924      6C733762 
 13924      697400
 13925              	.LASF233:
 13926 0fb5 73706941 		.ascii	"spiAdjusted\000"
 13926      646A7573 
 13926      74656400 
 13927              	.LASF207:
 13928 0fc1 72783243 		.ascii	"rx2Channel\000"
 13928      68616E6E 
 13928      656C00
 13929              	.LASF145:
 13930 0fcc 5553425F 		.ascii	"USB_midi_in_ep\000"
 13930      6D696469 
 13930      5F696E5F 
 13930      657000
 13931              	.LASF97:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 304


 13932 0fdb 446D6152 		.ascii	"DmaRxConfiguration\000"
 13932      78436F6E 
 13932      66696775 
 13932      72617469 
 13932      6F6E00
 13933              	.LASF18:
 13934 0fee 75696E74 		.ascii	"uint32_t\000"
 13934      33325F74 
 13934      00
 13935              	.LASF285:
 13936 0ff7 62757474 		.ascii	"button4Up\000"
 13936      6F6E3455 
 13936      7000
 13937              	.LASF185:
 13938 1001 70726576 		.ascii	"prevVBUS\000"
 13938      56425553 
 13938      00
 13939              	.LASF213:
 13940 100a 72783354 		.ascii	"rx3TD\000"
 13940      4400
 13941              	.LASF184:
 13942 1010 63757272 		.ascii	"currentVBUS\000"
 13942      656E7456 
 13942      42555300 
 13943              	.LASF279:
 13944 101c 6F637434 		.ascii	"oct4Up\000"
 13944      557000
 13945              	.LASF318:
 13946 1023 63616C63 		.ascii	"calculatePedalRatios\000"
 13946      756C6174 
 13946      65506564 
 13946      616C5261 
 13946      74696F73 
 13947              	.LASF284:
 13948 1038 62757474 		.ascii	"button3Up\000"
 13948      6F6E3355 
 13948      7000
 13949              	.LASF6:
 13950 1042 73686F72 		.ascii	"short unsigned int\000"
 13950      7420756E 
 13950      7369676E 
 13950      65642069 
 13950      6E7400
 13951              	.LASF56:
 13952 1055 6D617070 		.ascii	"mapping\000"
 13952      696E6700 
 13953              	.LASF116:
 13954 105d 6E6F7465 		.ascii	"noteToSend\000"
 13954      546F5365 
 13954      6E6400
 13955              	.LASF211:
 13956 1068 74785444 		.ascii	"txTD\000"
 13956      00
 13957              	.LASF7:
 13958 106d 5F5F696E 		.ascii	"__int32_t\000"
 13958      7433325F 
 13958      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwUd8HP.s 			page 305


 13959              	.LASF218:
 13960 1077 70726576 		.ascii	"prevBar\000"
 13960      42617200 
 13961              	.LASF190:
 13962 107f 6D79496E 		.ascii	"myInputArray\000"
 13962      70757441 
 13962      72726179 
 13962      00
 13963              	.LASF64:
 13964 108c 6D746F66 		.ascii	"mtof\000"
 13964      00
 13965              	.LASF290:
 13966 1091 70656461 		.ascii	"pedals\000"
 13966      6C7300
 13967              	.LASF81:
 13968 1098 74656D70 		.ascii	"tempIntHigh\000"
 13968      496E7448 
 13968      69676800 
 13969              	.LASF277:
 13970 10a4 65646974 		.ascii	"editUp\000"
 13970      557000
 13971              	.LASF31:
 13972 10ab 6C617374 		.ascii	"lastWrRowAddr\000"
 13972      5772526F 
 13972      77416464 
 13972      7200
 13973              	.LASF76:
 13974 10b9 6D794172 		.ascii	"myArrayCounter\000"
 13974      72617943 
 13974      6F756E74 
 13974      657200
 13975              	.LASF295:
 13976 10c8 73747269 		.ascii	"stringFrequencies\000"
 13976      6E674672 
 13976      65717565 
 13976      6E636965 
 13976      7300
 13977              	.LASF20:
 13978 10da 75696E74 		.ascii	"uint16\000"
 13978      313600
 13979              	.LASF189:
 13980 10e1 6D794172 		.ascii	"myArray\000"
 13980      72617900 
 13981              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
