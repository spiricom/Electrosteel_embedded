ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.comm	prevLastBufferBegin,8,4
  21              		.comm	lastBufferBegin,8,4
  22              		.global	masterTimer
  23              		.bss
  24              		.align	2
  25              		.type	masterTimer, %object
  26              		.size	masterTimer, 4
  27              	masterTimer:
  28 0000 00000000 		.space	4
  29              		.global	lastParseCall
  30              		.align	2
  31              		.type	lastParseCall, %object
  32              		.size	lastParseCall, 4
  33              	lastParseCall:
  34 0004 00000000 		.space	4
  35              		.global	prevLastParseCall
  36              		.align	2
  37              		.type	prevLastParseCall, %object
  38              		.size	prevLastParseCall, 4
  39              	prevLastParseCall:
  40 0008 00000000 		.space	4
  41              		.global	lastBufferStuff
  42              		.align	2
  43              		.type	lastBufferStuff, %object
  44              		.size	lastBufferStuff, 4
  45              	lastBufferStuff:
  46 000c 00000000 		.space	4
  47              		.global	lastEndReceive
  48              		.align	2
  49              		.type	lastEndReceive, %object
  50              		.size	lastEndReceive, 4
  51              	lastEndReceive:
  52 0010 00000000 		.space	4
  53              		.comm	sysexBuffer,2048,4
  54              		.global	sysexWritePointer
  55              		.align	2
  56              		.type	sysexWritePointer, %object
  57              		.size	sysexWritePointer, 4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 2


  58              	sysexWritePointer:
  59 0014 00000000 		.space	4
  60              		.global	sysexReadPointer
  61              		.align	2
  62              		.type	sysexReadPointer, %object
  63              		.size	sysexReadPointer, 4
  64              	sysexReadPointer:
  65 0018 00000000 		.space	4
  66              		.global	sysexReset
  67              		.data
  68              		.type	sysexReset, %object
  69              		.size	sysexReset, 1
  70              	sysexReset:
  71 0000 01       		.byte	1
  72              		.comm	sysexMessageStartPoints,1024,4
  73              		.global	sysexMessageStartPointsWritePosition
  74              		.bss
  75              		.type	sysexMessageStartPointsWritePosition, %object
  76              		.size	sysexMessageStartPointsWritePosition, 1
  77              	sysexMessageStartPointsWritePosition:
  78 001c 00       		.space	1
  79              		.global	sysexMessageStartPointsReadPosition
  80              		.type	sysexMessageStartPointsReadPosition, %object
  81              		.size	sysexMessageStartPointsReadPosition, 1
  82              	sysexMessageStartPointsReadPosition:
  83 001d 00       		.space	1
  84              		.global	receivingSysex
  85              		.type	receivingSysex, %object
  86              		.size	receivingSysex, 1
  87              	receivingSysex:
  88 001e 00       		.space	1
  89              		.global	parsingSysex
  90              		.type	parsingSysex, %object
  91              		.size	parsingSysex, 1
  92              	parsingSysex:
  93 001f 00       		.space	1
  94              		.comm	presetArray,2048,4
  95              		.global	presetNumberToWrite
  96              		.type	presetNumberToWrite, %object
  97              		.size	presetNumberToWrite, 1
  98              	presetNumberToWrite:
  99 0020 00       		.space	1
 100              		.global	copedentNumberToWrite
 101              		.type	copedentNumberToWrite, %object
 102              		.size	copedentNumberToWrite, 1
 103              	copedentNumberToWrite:
 104 0021 00       		.space	1
 105              		.global	sendMessageEnd
 106              		.type	sendMessageEnd, %object
 107              		.size	sendMessageEnd, 1
 108              	sendMessageEnd:
 109 0022 00       		.space	1
 110              		.global	sendSingleParamUpdate
 111              		.type	sendSingleParamUpdate, %object
 112              		.size	sendSingleParamUpdate, 1
 113              	sendSingleParamUpdate:
 114 0023 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 3


 115              		.global	singleParamToUpdateHigh
 116              		.type	singleParamToUpdateHigh, %object
 117              		.size	singleParamToUpdateHigh, 1
 118              	singleParamToUpdateHigh:
 119 0024 00       		.space	1
 120              		.global	singleParamToUpdateLow
 121              		.type	singleParamToUpdateLow, %object
 122              		.size	singleParamToUpdateLow, 1
 123              	singleParamToUpdateLow:
 124 0025 00       		.space	1
 125              		.global	singleParamValueHigh
 126              		.type	singleParamValueHigh, %object
 127              		.size	singleParamValueHigh, 1
 128              	singleParamValueHigh:
 129 0026 00       		.space	1
 130              		.global	singleParamValueLow
 131              		.type	singleParamValueLow, %object
 132              		.size	singleParamValueLow, 1
 133              	singleParamValueLow:
 134 0027 00       		.space	1
 135              		.global	sendMappingChangeUpdate
 136              		.type	sendMappingChangeUpdate, %object
 137              		.size	sendMappingChangeUpdate, 1
 138              	sendMappingChangeUpdate:
 139 0028 00       		.space	1
 140              		.global	presetNumberToStore
 141              		.type	presetNumberToStore, %object
 142              		.size	presetNumberToStore, 1
 143              	presetNumberToStore:
 144 0029 00       		.space	1
 145              		.global	transposeSemitones
 146              		.type	transposeSemitones, %object
 147              		.size	transposeSemitones, 1
 148              	transposeSemitones:
 149 002a 00       		.space	1
 150              		.global	transposeCents
 151              		.type	transposeCents, %object
 152              		.size	transposeCents, 1
 153              	transposeCents:
 154 002b 00       		.space	1
 155              		.global	transposeFloat
 156              		.align	2
 157              		.type	transposeFloat, %object
 158              		.size	transposeFloat, 4
 159              	transposeFloat:
 160 002c 00000000 		.space	4
 161              		.global	volumeInt
 162              		.type	volumeInt, %object
 163              		.size	volumeInt, 1
 164              	volumeInt:
 165 0030 00       		.space	1
 166              		.global	volumeWaitingToSend
 167              		.type	volumeWaitingToSend, %object
 168              		.size	volumeWaitingToSend, 1
 169              	volumeWaitingToSend:
 170 0031 00       		.space	1
 171              		.global	midiSendOn
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 4


 172              		.type	midiSendOn, %object
 173              		.size	midiSendOn, 1
 174              	midiSendOn:
 175 0032 00       		.space	1
 176              		.global	midiBarSendOn
 177              		.type	midiBarSendOn, %object
 178              		.size	midiBarSendOn, 1
 179              	midiBarSendOn:
 180 0033 00       		.space	1
 181              		.global	pitchSmoothing
 182              		.type	pitchSmoothing, %object
 183              		.size	pitchSmoothing, 1
 184              	pitchSmoothing:
 185 0034 00       		.space	1
 186              		.global	controlSmoothing
 187              		.type	controlSmoothing, %object
 188              		.size	controlSmoothing, 1
 189              	controlSmoothing:
 190 0035 00       		.space	1
 191              		.global	octaveAction
 192              		.type	octaveAction, %object
 193              		.size	octaveAction, 1
 194              	octaveAction:
 195 0036 00       		.space	1
 196              		.global	stringRepresentation
 197              		.data
 198 0001 000000   		.align	2
 199              		.type	stringRepresentation, %object
 200              		.size	stringRepresentation, 2
 201              	stringRepresentation:
 202 0004 03       		.byte	3
 203 0005 08       		.byte	8
 204              		.global	presetArraySection
 205              		.bss
 206              		.type	presetArraySection, %object
 207              		.size	presetArraySection, 1
 208              	presetArraySection:
 209 0037 00       		.space	1
 210              		.comm	sendLocalPresetStoreCommand,1,1
 211              		.global	messageArraySendCount
 212              		.align	1
 213              		.type	messageArraySendCount, %object
 214              		.size	messageArraySendCount, 2
 215              	messageArraySendCount:
 216 0038 0000     		.space	2
 217              		.global	messageArraySize
 218              		.align	1
 219              		.type	messageArraySize, %object
 220              		.size	messageArraySize, 2
 221              	messageArraySize:
 222 003a 0000     		.space	2
 223              		.global	sysexMessageInProgress
 224              		.type	sysexMessageInProgress, %object
 225              		.size	sysexMessageInProgress, 1
 226              	sysexMessageInProgress:
 227 003c 00       		.space	1
 228              		.global	bufCount
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 5


 229              		.type	bufCount, %object
 230              		.size	bufCount, 1
 231              	bufCount:
 232 003d 00       		.space	1
 233              		.global	sendingMessage
 234              		.type	sendingMessage, %object
 235              		.size	sendingMessage, 1
 236              	sendingMessage:
 237 003e 00       		.space	1
 238              		.global	sendKnobs
 239              		.type	sendKnobs, %object
 240              		.size	sendKnobs, 1
 241              	sendKnobs:
 242 003f 00       		.space	1
 243              		.global	currentFloat
 244              		.align	2
 245              		.type	currentFloat, %object
 246              		.size	currentFloat, 4
 247              	currentFloat:
 248 0040 00000000 		.space	4
 249              		.global	mapCount
 250              		.align	2
 251              		.type	mapCount, %object
 252              		.size	mapCount, 4
 253              	mapCount:
 254 0044 00000000 		.space	4
 255              		.global	valsCount
 256              		.align	1
 257              		.type	valsCount, %object
 258              		.size	valsCount, 2
 259              	valsCount:
 260 0048 0000     		.space	2
 261              		.global	mapCountExpectation
 262              		.align	1
 263              		.type	mapCountExpectation, %object
 264              		.size	mapCountExpectation, 2
 265              	mapCountExpectation:
 266 004a 0000     		.space	2
 267              		.global	numMappings
 268              		.align	1
 269              		.type	numMappings, %object
 270              		.size	numMappings, 2
 271              	numMappings:
 272 004c 0000     		.space	2
 273              		.global	parseThatMF
 274              		.type	parseThatMF, %object
 275              		.size	parseThatMF, 1
 276              	parseThatMF:
 277 004e 00       		.space	1
 278              		.global	valCheck
 279 004f 00       		.align	2
 280              		.type	valCheck, %object
 281              		.size	valCheck, 4
 282              	valCheck:
 283 0050 00000000 		.space	4
 284              		.global	testVal
 285              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 6


 286              		.type	testVal, %object
 287              		.size	testVal, 4
 288              	testVal:
 289 0054 00000000 		.space	4
 290              		.global	sendFirmwareUpdateRequest
 291              		.type	sendFirmwareUpdateRequest, %object
 292              		.size	sendFirmwareUpdateRequest, 1
 293              	sendFirmwareUpdateRequest:
 294 0058 00       		.space	1
 295              		.global	numStrings
 296              		.data
 297              		.type	numStrings, %object
 298              		.size	numStrings, 1
 299              	numStrings:
 300 0006 0A       		.byte	10
 301              		.global	usbActivityCounter
 302              		.bss
 303              		.type	usbActivityCounter, %object
 304              		.size	usbActivityCounter, 1
 305              	usbActivityCounter:
 306 0059 00       		.space	1
 307              		.comm	midiMsg,4,4
 308              		.global	currentVBUS
 309              		.type	currentVBUS, %object
 310              		.size	currentVBUS, 1
 311              	currentVBUS:
 312 005a 00       		.space	1
 313              		.global	prevVBUS
 314              		.type	prevVBUS, %object
 315              		.size	prevVBUS, 1
 316              	prevVBUS:
 317 005b 00       		.space	1
 318              		.global	USB_active
 319              		.type	USB_active, %object
 320              		.size	USB_active, 1
 321              	USB_active:
 322 005c 00       		.space	1
 323              		.global	USB_check_flag
 324              		.type	USB_check_flag, %object
 325              		.size	USB_check_flag, 1
 326              	USB_check_flag:
 327 005d 00       		.space	1
 328              		.comm	mappingArray,6,4
 329              		.comm	inBuffer,32,4
 330              		.comm	myArray,32,4
 331              		.comm	returnedData,32,4
 332              		.global	octave
 333              		.data
 334 0007 00       		.align	2
 335              		.type	octave, %object
 336              		.size	octave, 4
 337              	octave:
 338 0008 05000000 		.word	5
 339              		.comm	angle,20,4
 340              		.comm	prevAngle,20,4
 341              		.comm	ADC_values,8,4
 342              		.global	rawAngle
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 7


 343              		.bss
 344              		.align	1
 345              		.type	rawAngle, %object
 346              		.size	rawAngle, 2
 347              	rawAngle:
 348 005e 0000     		.space	2
 349              		.global	midiSent
 350              		.align	1
 351              		.type	midiSent, %object
 352              		.size	midiSent, 2
 353              	midiSent:
 354 0060 0000     		.space	2
 355              		.global	midiOverflow
 356              		.align	1
 357              		.type	midiOverflow, %object
 358              		.size	midiOverflow, 2
 359              	midiOverflow:
 360 0062 0000     		.space	2
 361              		.comm	macroKnobValues,16,4
 362              		.global	currentCopedent
 363              		.type	currentCopedent, %object
 364              		.size	currentCopedent, 1
 365              	currentCopedent:
 366 0064 00       		.space	1
 367              		.global	necks
 368              		.data
 369              		.align	2
 370              		.type	necks, %object
 371              		.size	necks, 2
 372              	necks:
 373 000c 00       		.byte	0
 374 000d 01       		.byte	1
 375              		.global	neckPreset
 376 000e 0000     		.align	2
 377              		.type	neckPreset, %object
 378              		.size	neckPreset, 2
 379              	neckPreset:
 380 0010 00       		.byte	0
 381 0011 01       		.byte	1
 382              		.comm	neckPresetsByte,1,1
 383              		.comm	rx1Channel,1,1
 384              		.comm	rx2Channel,1,32
 385              		.comm	rx1TD,2,4
 386              		.comm	rx2TD,2,32
 387              		.comm	txChannel,1,32
 388              		.comm	txTD,1,32
 389              		.comm	rx3Channel,1,32
 390              		.comm	rx3TD,1,32
 391              		.comm	rxBufferPluck,64,32
 392              		.comm	rxBufferBar,16,32
 393              		.comm	strings,24,4
 394              		.comm	prevStrings,24,4
 395              		.comm	bar,4,4
 396              		.comm	prevBar,4,4
 397              		.comm	maxStrings,24,4
 398              		.global	amHere
 399              		.bss
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 8


 400              		.type	amHere, %object
 401              		.size	amHere, 1
 402              	amHere:
 403 0065 00       		.space	1
 404              		.global	spiCounter
 405              		.type	spiCounter, %object
 406              		.size	spiCounter, 1
 407              	spiCounter:
 408 0066 00       		.space	1
 409              		.global	newDataFlag
 410              		.type	newDataFlag, %object
 411              		.size	newDataFlag, 1
 412              	newDataFlag:
 413 0067 00       		.space	1
 414              		.global	prevOctave
 415              		.align	2
 416              		.type	prevOctave, %object
 417              		.size	prevOctave, 4
 418              	prevOctave:
 419 0068 00000000 		.space	4
 420              		.global	pluck_index
 421              		.type	pluck_index, %object
 422              		.size	pluck_index, 1
 423              	pluck_index:
 424 006c 00       		.space	1
 425              		.global	amHere2
 426              		.type	amHere2, %object
 427              		.size	amHere2, 1
 428              	amHere2:
 429 006d 00       		.space	1
 430              		.global	spiCounter2
 431              		.type	spiCounter2, %object
 432              		.size	spiCounter2, 1
 433              	spiCounter2:
 434 006e 00       		.space	1
 435              		.global	newDataFlag2
 436              		.type	newDataFlag2, %object
 437              		.size	newDataFlag2, 1
 438              	newDataFlag2:
 439 006f 00       		.space	1
 440              		.global	currentPluckBuffer
 441              		.type	currentPluckBuffer, %object
 442              		.size	currentPluckBuffer, 1
 443              	currentPluckBuffer:
 444 0070 00       		.space	1
 445              		.global	currentBarBuffer
 446              		.type	currentBarBuffer, %object
 447              		.size	currentBarBuffer, 1
 448              	currentBarBuffer:
 449 0071 00       		.space	1
 450              		.global	pluckErrorCount
 451              		.type	pluckErrorCount, %object
 452              		.size	pluckErrorCount, 1
 453              	pluckErrorCount:
 454 0072 00       		.space	1
 455              		.global	SPI1ErrorCount
 456 0073 00       		.align	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 9


 457              		.type	SPI1ErrorCount, %object
 458              		.size	SPI1ErrorCount, 2
 459              	SPI1ErrorCount:
 460 0074 0000     		.space	2
 461              		.global	inputData
 462              		.type	inputData, %object
 463              		.size	inputData, 1
 464              	inputData:
 465 0076 00       		.space	1
 466              		.global	spiAdjusted
 467              		.type	spiAdjusted, %object
 468              		.size	spiAdjusted, 1
 469              	spiAdjusted:
 470 0077 00       		.space	1
 471              		.global	mySpiCounter
 472              		.type	mySpiCounter, %object
 473              		.size	mySpiCounter, 1
 474              	mySpiCounter:
 475 0078 00       		.space	1
 476              		.global	offsetErrorCount
 477 0079 00       		.align	1
 478              		.type	offsetErrorCount, %object
 479              		.size	offsetErrorCount, 2
 480              	offsetErrorCount:
 481 007a 0000     		.space	2
 482              		.global	SPI2errorflag
 483              		.type	SPI2errorflag, %object
 484              		.size	SPI2errorflag, 1
 485              	SPI2errorflag:
 486 007c 00       		.space	1
 487              		.comm	knobs,4,4
 488              		.comm	prevKnobs,4,4
 489              		.comm	knobs7bit,4,4
 490              		.comm	prevKnobs7bit,4,4
 491              		.global	u7bit_volumePedal
 492              		.type	u7bit_volumePedal, %object
 493              		.size	u7bit_volumePedal, 1
 494              	u7bit_volumePedal:
 495 007d 00       		.space	1
 496              		.global	prev_7bit_volumePedal
 497              		.type	prev_7bit_volumePedal, %object
 498              		.size	prev_7bit_volumePedal, 1
 499              	prev_7bit_volumePedal:
 500 007e 00       		.space	1
 501              		.global	SPI2started
 502              		.type	SPI2started, %object
 503              		.size	SPI2started, 1
 504              	SPI2started:
 505 007f 00       		.space	1
 506              		.global	whichMacro
 507              		.type	whichMacro, %object
 508              		.size	whichMacro, 1
 509              	whichMacro:
 510 0080 00       		.space	1
 511              		.comm	macroKnobValues7bit,16,4
 512              		.comm	prevMacroKnobValues7bit,16,4
 513              		.comm	prevMacroKnobValues,32,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 10


 514              		.comm	knobFrozen,16,4
 515              		.global	knobPanelLightActive
 516              		.type	knobPanelLightActive, %object
 517              		.size	knobPanelLightActive, 1
 518              	knobPanelLightActive:
 519 0081 00       		.space	1
 520 0082 0000     		.align	2
 521              	eepromArray:
 522 0084 0000     		.space	2
 523              		.global	array
 524 0086 0000     		.align	2
 525              		.type	array, %object
 526              		.size	array, 2
 527              	array:
 528 0088 0000     		.space	2
 529              		.comm	eepromReturnValue,1,1
 530              		.global	Em_EEPROM_em_EepromStorage
 531              		.section	.rodata
 532              		.align	8
 533              		.type	Em_EEPROM_em_EepromStorage, %object
 534              		.size	Em_EEPROM_em_EepromStorage, 1024
 535              	Em_EEPROM_em_EepromStorage:
 536 0000 00000000 		.space	1024
 536      00000000 
 536      00000000 
 536      00000000 
 536      00000000 
 537              		.comm	eeprom_cnt,1,1
 538              		.comm	status,4,4
 539              		.comm	ptr,4,4
 540              		.global	barCount
 541              		.bss
 542 008a 0000     		.align	2
 543              		.type	barCount, %object
 544              		.size	barCount, 4
 545              	barCount:
 546 008c 00000000 		.space	4
 547              		.comm	I2Cbuff1,256,4
 548              		.comm	I2Cbuff2,16,4
 549              		.global	send_it
 550              		.type	send_it, %object
 551              		.size	send_it, 1
 552              	send_it:
 553 0090 00       		.space	1
 554              		.global	mux_states
 555              		.data
 556 0012 0000     		.align	2
 557              		.type	mux_states, %object
 558              		.size	mux_states, 24
 559              	mux_states:
 560 0014 05       		.byte	5
 561 0015 00       		.byte	0
 562 0016 05       		.byte	5
 563 0017 01       		.byte	1
 564 0018 05       		.byte	5
 565 0019 02       		.byte	2
 566 001a 05       		.byte	5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 11


 567 001b 03       		.byte	3
 568 001c 05       		.byte	5
 569 001d 04       		.byte	4
 570 001e 00       		.byte	0
 571 001f 00       		.byte	0
 572 0020 01       		.byte	1
 573 0021 00       		.byte	0
 574 0022 03       		.byte	3
 575 0023 00       		.byte	0
 576 0024 04       		.byte	4
 577 0025 00       		.byte	0
 578 0026 02       		.byte	2
 579 0027 00       		.byte	0
 580 0028 05       		.byte	5
 581 0029 05       		.byte	5
 582 002a 06       		.byte	6
 583 002b 00       		.byte	0
 584              		.global	i2c_skipped
 585              		.bss
 586 0091 000000   		.align	2
 587              		.type	i2c_skipped, %object
 588              		.size	i2c_skipped, 12
 589              	i2c_skipped:
 590 0094 00000000 		.space	12
 590      00000000 
 590      00000000 
 591              		.global	pedals_low
 592              		.data
 593              		.align	2
 594              		.type	pedals_low, %object
 595              		.size	pedals_low, 20
 596              	pedals_low:
 597 002c 830A     		.short	2691
 598 002e 0109     		.short	2305
 599 0030 9909     		.short	2457
 600 0032 0E02     		.short	526
 601 0034 9A0E     		.short	3738
 602 0036 0309     		.short	2307
 603 0038 C60B     		.short	3014
 604 003a 8E08     		.short	2190
 605 003c E90A     		.short	2793
 606 003e 2605     		.short	1318
 607              		.global	pedals_high
 608              		.align	2
 609              		.type	pedals_high, %object
 610              		.size	pedals_high, 20
 611              	pedals_high:
 612 0040 ED0A     		.short	2797
 613 0042 6509     		.short	2405
 614 0044 140A     		.short	2580
 615 0046 8702     		.short	647
 616 0048 0E0F     		.short	3854
 617 004a 9D09     		.short	2461
 618 004c 450C     		.short	3141
 619 004e 3109     		.short	2353
 620 0050 760B     		.short	2934
 621 0052 E005     		.short	1504
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 12


 622              		.global	pedals_lowWithDeadZone
 623              		.align	2
 624              		.type	pedals_lowWithDeadZone, %object
 625              		.size	pedals_lowWithDeadZone, 20
 626              	pedals_lowWithDeadZone:
 627 0054 830A     		.short	2691
 628 0056 0109     		.short	2305
 629 0058 9909     		.short	2457
 630 005a 0E02     		.short	526
 631 005c 9A0E     		.short	3738
 632 005e 0309     		.short	2307
 633 0060 C60B     		.short	3014
 634 0062 8E08     		.short	2190
 635 0064 E90A     		.short	2793
 636 0066 2605     		.short	1318
 637              		.global	pedals_highWithDeadZone
 638              		.align	2
 639              		.type	pedals_highWithDeadZone, %object
 640              		.size	pedals_highWithDeadZone, 20
 641              	pedals_highWithDeadZone:
 642 0068 ED0A     		.short	2797
 643 006a 6509     		.short	2405
 644 006c 140A     		.short	2580
 645 006e 8702     		.short	647
 646 0070 0E0F     		.short	3854
 647 0072 9D09     		.short	2461
 648 0074 450C     		.short	3141
 649 0076 3109     		.short	2353
 650 0078 760B     		.short	2934
 651 007a E005     		.short	1504
 652              		.global	deadZone
 653              		.type	deadZone, %object
 654              		.size	deadZone, 1
 655              	deadZone:
 656 007c 33       		.byte	51
 657              		.global	volumePedal
 658 007d 00       		.align	1
 659              		.type	volumePedal, %object
 660              		.size	volumePedal, 2
 661              	volumePedal:
 662 007e FF0F     		.short	4095
 663              		.comm	processed_pedals,20,4
 664              		.comm	prev_processed_pedals,20,4
 665              		.comm	pedals8bit,10,4
 666              		.comm	pedals7bit,10,4
 667              		.comm	prevPedals7bit,10,4
 668              		.comm	prev_processed_volumePedal,2,2
 669              		.comm	processed_volumePedal,2,2
 670              		.global	sliderBugOn
 671              		.bss
 672              		.type	sliderBugOn, %object
 673              		.size	sliderBugOn, 1
 674              	sliderBugOn:
 675 00a0 00       		.space	1
 676              		.comm	fretMeasurements,48,4
 677              		.global	currentPresetSelection
 678              		.type	currentPresetSelection, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 13


 679              		.size	currentPresetSelection, 1
 680              	currentPresetSelection:
 681 00a1 00       		.space	1
 682              		.comm	presetNamesArray,896,4
 683              		.global	presetNumberToLoad
 684              		.type	presetNumberToLoad, %object
 685              		.size	presetNumberToLoad, 1
 686              	presetNumberToLoad:
 687 00a2 00       		.space	1
 688              		.global	presetLoadedResponse
 689              		.data
 690              		.align	2
 691              		.type	presetLoadedResponse, %object
 692              		.size	presetLoadedResponse, 2
 693              	presetLoadedResponse:
 694 0080 FF       		.byte	-1
 695 0081 00       		.byte	0
 696              		.comm	macroNamesArray,9216,4
 697              		.comm	controlNamesArray,2560,4
 698              		.global	fretScalingInMIDI
 699 0082 0000     		.align	2
 700              		.type	fretScalingInMIDI, %object
 701              		.size	fretScalingInMIDI, 48
 702              	fretScalingInMIDI:
 703 0084 00000000 		.word	0
 704 0088 0000803F 		.word	1065353216
 705 008c 00004040 		.word	1077936128
 706 0090 0000A040 		.word	1084227584
 707 0094 0000E040 		.word	1088421888
 708 0098 00001041 		.word	1091567616
 709 009c 00004041 		.word	1094713344
 710 00a0 00007041 		.word	1097859072
 711 00a4 00008841 		.word	1099431936
 712 00a8 00009841 		.word	1100480512
 713 00ac 0000A841 		.word	1101529088
 714 00b0 0000C041 		.word	1103101952
 715              		.global	fretScalingInRatios
 716              		.align	2
 717              		.type	fretScalingInRatios, %object
 718              		.size	fretScalingInRatios, 48
 719              	fretScalingInRatios:
 720 00b4 0000803F 		.word	1065353216
 721 00b8 809C873F 		.word	1065852032
 722 00bc F537983F 		.word	1066940405
 723 00c0 01DCAA3F 		.word	1068162049
 724 00c4 85C8BF3F 		.word	1069533317
 725 00c8 F244D73F 		.word	1071072498
 726 00cc 00000040 		.word	1073741824
 727 00d0 F5371840 		.word	1075329013
 728 00d4 01DC2A40 		.word	1076550657
 729 00d8 85C83F40 		.word	1077921925
 730 00dc F2445740 		.word	1079461106
 731 00e0 00008040 		.word	1082130432
 732              		.comm	pedalRatios,40,4
 733              		.global	last_mux
 734              		.type	last_mux, %object
 735              		.size	last_mux, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 14


 736              	last_mux:
 737 00e4 01       		.byte	1
 738              		.global	main_counter
 739              		.bss
 740              		.type	main_counter, %object
 741              		.size	main_counter, 1
 742              	main_counter:
 743 00a3 00       		.space	1
 744              		.global	dualSlider
 745              		.type	dualSlider, %object
 746              		.size	dualSlider, 1
 747              	dualSlider:
 748 00a4 00       		.space	1
 749              		.global	voice
 750              		.type	voice, %object
 751              		.size	voice, 1
 752              	voice:
 753 00a5 00       		.space	1
 754              		.global	patchNum
 755              		.type	patchNum, %object
 756              		.size	patchNum, 1
 757              	patchNum:
 758 00a6 00       		.space	1
 759              		.global	pedal_inverted
 760 00a7 00       		.align	2
 761              		.type	pedal_inverted, %object
 762              		.size	pedal_inverted, 10
 763              	pedal_inverted:
 764 00a8 00000000 		.space	10
 764      00000000 
 764      0000
 765              		.global	traditionalPedalAdd
 766              		.type	traditionalPedalAdd, %object
 767              		.size	traditionalPedalAdd, 1
 768              	traditionalPedalAdd:
 769 00b2 00       		.space	1
 770              		.global	copedentMapping
 771              		.data
 772 00e5 000000   		.align	2
 773              		.type	copedentMapping, %object
 774              		.size	copedentMapping, 10
 775              	copedentMapping:
 776 00e8 04       		.byte	4
 777 00e9 05       		.byte	5
 778 00ea 06       		.byte	6
 779 00eb 07       		.byte	7
 780 00ec 08       		.byte	8
 781 00ed 0A       		.byte	10
 782 00ee 09       		.byte	9
 783 00ef 03       		.byte	3
 784 00f0 01       		.byte	1
 785 00f1 02       		.byte	2
 786              		.comm	copedent,3696,4
 787              		.comm	copedentNamesArray,70,4
 788              		.comm	prevStringPitchBend,48,4
 789              		.comm	pedals,480,4
 790              		.global	pedal_cc_assignments
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 15


 791 00f2 0000     		.align	2
 792              		.type	pedal_cc_assignments, %object
 793              		.size	pedal_cc_assignments, 10
 794              	pedal_cc_assignments:
 795 00f4 00       		.byte	0
 796 00f5 01       		.byte	1
 797 00f6 02       		.byte	2
 798 00f7 03       		.byte	3
 799 00f8 04       		.byte	4
 800 00f9 08       		.byte	8
 801 00fa 09       		.byte	9
 802 00fb 07       		.byte	7
 803 00fc 06       		.byte	6
 804 00fd 05       		.byte	5
 805              		.comm	openStringFrequencies,48,4
 806              		.comm	stringMappedPositionsInRatios,8,4
 807              		.comm	stringMappedPositionsInMIDI,8,4
 808              		.comm	barMidiOuterStrings,4,4
 809              		.comm	stringFrequencies,48,4
 810              		.comm	stringOctave,48,4
 811              		.comm	stringPitch,48,4
 812              		.comm	stringMIDI,48,4
 813              		.comm	openStringMIDI_Int,48,4
 814              		.global	mainOLEDWaitingToSend
 815              		.bss
 816              		.type	mainOLEDWaitingToSend, %object
 817              		.size	mainOLEDWaitingToSend, 1
 818              	mainOLEDWaitingToSend:
 819 00b3 00       		.space	1
 820              		.global	macroOLEDWaitingToSend
 821              		.type	macroOLEDWaitingToSend, %object
 822              		.size	macroOLEDWaitingToSend, 1
 823              	macroOLEDWaitingToSend:
 824 00b4 00       		.space	1
 825              		.comm	presetAlreadyDisplayed,64,4
 826              		.global	currentNeck
 827              		.type	currentNeck, %object
 828              		.size	currentNeck, 1
 829              	currentNeck:
 830 00b5 00       		.space	1
 831              		.global	neckByte
 832              		.type	neckByte, %object
 833              		.size	neckByte, 1
 834              	neckByte:
 835 00b6 00       		.space	1
 836              		.global	editMode
 837              		.type	editMode, %object
 838              		.size	editMode, 1
 839              	editMode:
 840 00b7 00       		.space	1
 841              		.global	leverCalibrationMode
 842              		.type	leverCalibrationMode, %object
 843              		.size	leverCalibrationMode, 1
 844              	leverCalibrationMode:
 845 00b8 00       		.space	1
 846              		.global	fretCalibrationMode
 847              		.type	fretCalibrationMode, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 16


 848              		.size	fretCalibrationMode, 1
 849              	fretCalibrationMode:
 850 00b9 00       		.space	1
 851              		.global	presetWhenMacroWriteStarted
 852              		.type	presetWhenMacroWriteStarted, %object
 853              		.size	presetWhenMacroWriteStarted, 1
 854              	presetWhenMacroWriteStarted:
 855 00ba 00       		.space	1
 856              		.global	macroPageWhenMacroWriteStarted
 857              		.type	macroPageWhenMacroWriteStarted, %object
 858              		.size	macroPageWhenMacroWriteStarted, 1
 859              	macroPageWhenMacroWriteStarted:
 860 00bb 00       		.space	1
 861              		.global	pedals_float
 862              		.align	2
 863              		.type	pedals_float, %object
 864              		.size	pedals_float, 40
 865              	pedals_float:
 866 00bc 00000000 		.space	40
 866      00000000 
 866      00000000 
 866      00000000 
 866      00000000 
 867              		.global	stringRepDivider
 868              		.data
 869 00fe 0000     		.align	2
 870              		.type	stringRepDivider, %object
 871              		.size	stringRepDivider, 4
 872              	stringRepDivider:
 873 0100 0000803F 		.word	1065353216
 874              		.global	__aeabi_fsub
 875              		.global	__aeabi_fdiv
 876              		.global	__aeabi_fmul
 877              		.global	__aeabi_fadd
 878              		.section	.text.map,"ax",%progbits
 879              		.align	2
 880              		.global	map
 881              		.thumb
 882              		.thumb_func
 883              		.type	map, %function
 884              	map:
 885              	.LFB64:
 886              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** #include "ui.h"
   9:main.c        **** 
  10:main.c        **** #define BOOTLOAD_STYLE
  11:main.c        **** 
  12:main.c        **** 
  13:main.c        **** uint32_t prevLastBufferBegin[2];
  14:main.c        **** uint32_t lastBufferBegin[2];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 17


  15:main.c        **** uint32_t masterTimer = 0;
  16:main.c        **** uint32_t lastParseCall = 0;
  17:main.c        **** uint32_t prevLastParseCall = 0;
  18:main.c        **** uint32_t lastBufferStuff = 0;
  19:main.c        **** uint32_t lastEndReceive = 0;
  20:main.c        **** 
  21:main.c        **** uint8_t sysexBuffer[2048];
  22:main.c        **** uint32_t sysexWritePointer = 0;
  23:main.c        **** uint32_t sysexReadPointer = 0;
  24:main.c        **** uint8_t sysexReset = 1;
  25:main.c        **** uint32_t sysexMessageStartPoints[256];
  26:main.c        **** uint8_t sysexMessageStartPointsWritePosition = 0;
  27:main.c        **** uint8_t sysexMessageStartPointsReadPosition = 0;
  28:main.c        **** uint8_t receivingSysex = 0;
  29:main.c        **** uint8_t parsingSysex = 0;
  30:main.c        **** volatile uint8_t presetArray[2048];
  31:main.c        **** uint8_t presetNumberToWrite = 0;
  32:main.c        **** uint8_t copedentNumberToWrite = 0;
  33:main.c        **** uint8_t sendMessageEnd = 0;
  34:main.c        **** 
  35:main.c        **** uint8_t sendSingleParamUpdate = 0;
  36:main.c        **** uint8_t singleParamToUpdateHigh = 0;
  37:main.c        **** uint8_t singleParamToUpdateLow = 0;
  38:main.c        **** uint8_t singleParamValueHigh = 0;
  39:main.c        **** uint8_t singleParamValueLow = 0;
  40:main.c        ****             
  41:main.c        **** uint8_t sendMappingChangeUpdate = 0;
  42:main.c        **** 
  43:main.c        **** 
  44:main.c        **** int8_t presetNumberToStore = 0;
  45:main.c        ****             
  46:main.c        **** 
  47:main.c        **** int8_t transposeSemitones = 0;
  48:main.c        **** int8_t transposeCents = 0;
  49:main.c        **** float transposeFloat = 0.0f;
  50:main.c        **** int8_t volumeInt = 0;
  51:main.c        **** uint8_t volumeWaitingToSend = 0;
  52:main.c        **** uint8_t midiSendOn = 0;
  53:main.c        **** uint8_t midiBarSendOn = 0;
  54:main.c        **** uint8_t pitchSmoothing = 0;
  55:main.c        **** uint8_t controlSmoothing = 0;
  56:main.c        **** uint8_t octaveAction = 0;
  57:main.c        **** uint8_t stringRepresentation[2] = {3,8};
  58:main.c        **** 
  59:main.c        **** uint8_t presetArraySection = presetName;
  60:main.c        **** 
  61:main.c        **** uint8_t sendLocalPresetStoreCommand;
  62:main.c        **** 
  63:main.c        **** uint16_t messageArraySendCount = 0;
  64:main.c        **** uint16_t messageArraySize = 0;
  65:main.c        **** 
  66:main.c        **** uint8_t sysexMessageInProgress = 0;
  67:main.c        **** 
  68:main.c        **** uint8_t bufCount = 0;
  69:main.c        **** volatile uint8_t sendingMessage = 0;
  70:main.c        **** volatile uint8_t sendKnobs = 0;
  71:main.c        **** uint32_t currentFloat = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 18


  72:main.c        **** uint32_t mapCount = 0;
  73:main.c        **** 
  74:main.c        **** uint16_t valsCount = 0;
  75:main.c        **** uint16_t mapCountExpectation = 0;
  76:main.c        **** uint16_t numMappings = 0;
  77:main.c        **** volatile uint8_t parseThatMF = 0;
  78:main.c        **** volatile float valCheck = 0.0f;
  79:main.c        **** volatile float testVal = 0.0f;
  80:main.c        **** 
  81:main.c        **** uint8_t sendFirmwareUpdateRequest = 0;
  82:main.c        **** 
  83:main.c        **** uint8_t numStrings = 10;
  84:main.c        **** /*
  85:main.c        **** #define TUNING_ARRAY_SIZE 258
  86:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  87:main.c        **** */
  88:main.c        **** 
  89:main.c        **** volatile uint8_t usbActivityCounter = 0u;
  90:main.c        **** uint8_t midiMsg[4];
  91:main.c        **** uint8_t currentVBUS = 0;
  92:main.c        **** uint8_t prevVBUS = 0;
  93:main.c        **** volatile uint8_t USB_active = 0;
  94:main.c        **** volatile uint8_t USB_check_flag = 0;
  95:main.c        **** 
  96:main.c        **** uint8_t mappingArray[6];
  97:main.c        **** 
  98:main.c        **** uint8_t inBuffer[myBufferSize];
  99:main.c        **** 
 100:main.c        **** uint8_t myArray[myBufferSize];
 101:main.c        **** uint8_t returnedData[myBufferSize];
 102:main.c        **** int octave = 5;
 103:main.c        **** uint16_t angle[NUM_PEDALS];
 104:main.c        **** uint16_t prevAngle[NUM_PEDALS];
 105:main.c        **** 
 106:main.c        **** uint16_t ADC_values[4];
 107:main.c        **** uint16_t rawAngle = 0;
 108:main.c        **** uint16_t midiSent = 0;
 109:main.c        **** uint16_t midiOverflow = 0;
 110:main.c        **** 
 111:main.c        **** uint8_t macroKnobValues[NUM_MACROS*NUM_MACRO_PAGES];
 112:main.c        **** 
 113:main.c        **** uint8_t currentCopedent = 0;
 114:main.c        **** uint8_t necks[2] = {0,1};
 115:main.c        **** uint8_t neckPreset[2] = {0,1};
 116:main.c        **** uint8_t neckPresetsByte;
 117:main.c        **** 
 118:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 119:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 120:main.c        **** 
 121:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 122:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 123:main.c        **** 
 124:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 125:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 126:main.c        **** 
 127:main.c        **** 
 128:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 19


 129:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 130:main.c        **** 
 131:main.c        **** volatile uint16_t strings[12];
 132:main.c        **** volatile uint16_t prevStrings[12];
 133:main.c        **** volatile uint16_t bar[2];
 134:main.c        **** volatile uint16_t prevBar[2];
 135:main.c        **** volatile uint16_t maxStrings[12];
 136:main.c        **** volatile uint8_t amHere = 0;
 137:main.c        **** volatile uint8_t spiCounter = 0;
 138:main.c        **** volatile uint8_t newDataFlag = 0;
 139:main.c        **** int prevOctave = 0;
 140:main.c        **** uint8_t pluck_index = 0;
 141:main.c        **** volatile uint8_t amHere2 = 0;
 142:main.c        **** volatile uint8_t spiCounter2 = 0;
 143:main.c        **** volatile uint8_t newDataFlag2 = 0;
 144:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 145:main.c        **** volatile uint8_t currentBarBuffer = 0;
 146:main.c        **** volatile uint8_t pluckErrorCount = 0;
 147:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 148:main.c        **** 
 149:main.c        **** volatile uint8_t inputData = 0;
 150:main.c        **** 
 151:main.c        **** union breakFloat {
 152:main.c        ****  float f;
 153:main.c        ****  uint8_t b[4];  
 154:main.c        ****  uint32_t u32;
 155:main.c        **** };
 156:main.c        **** 
 157:main.c        **** 
 158:main.c        **** uint8_t spiAdjusted = 0;
 159:main.c        **** uint8_t mySpiCounter = 0;
 160:main.c        **** volatile uint16_t offsetErrorCount = 0;
 161:main.c        **** volatile uint8_t SPI2errorflag = 0;
 162:main.c        **** uint8_t knobs[4];
 163:main.c        **** uint8_t prevKnobs[4];
 164:main.c        **** 
 165:main.c        **** uint8_t knobs7bit[4];
 166:main.c        **** uint8_t prevKnobs7bit[4];
 167:main.c        **** 
 168:main.c        **** uint8_t u7bit_volumePedal = 0;
 169:main.c        **** uint8_t prev_7bit_volumePedal = 0;
 170:main.c        **** volatile uint8_t SPI2started = 0;
 171:main.c        **** 
 172:main.c        **** uint8_t whichMacro = 0;
 173:main.c        **** 
 174:main.c        **** uint8_t macroKnobValues7bit[NUM_MACROS*NUM_MACRO_PAGES];
 175:main.c        **** uint8_t prevMacroKnobValues7bit[NUM_MACROS*NUM_MACRO_PAGES];
 176:main.c        **** int16_t prevMacroKnobValues[NUM_MACROS*NUM_MACRO_PAGES];
 177:main.c        **** uint8_t knobFrozen[NUM_MACROS*NUM_MACRO_PAGES];
 178:main.c        **** 
 179:main.c        **** uint8_t knobPanelLightActive = 0;
 180:main.c        **** 
 181:main.c        **** static uint8 CYCODE eepromArray[]={ 0, 0 };
 182:main.c        ****                                             
 183:main.c        **** uint8 array[] ={ 0, 0 };
 184:main.c        ****                                 
 185:main.c        ****     /*Return status for EEPROM and UART*/ 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 20


 186:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 187:main.c        **** 
 188:main.c        **** 
 189:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 190:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] __ALIGNED(CY_FLASH_SIZEOF_ROW) = 
 191:main.c        **** 
 192:main.c        **** 
 193:main.c        **** uint8 eeprom_cnt;
 194:main.c        **** cystatus status;
 195:main.c        **** volatile const uint8 * ptr;
 196:main.c        **** volatile int barCount = 0;
 197:main.c        **** 
 198:main.c        **** 
 199:main.c        ****     
 200:main.c        **** volatile uint8_t I2Cbuff1[256];
 201:main.c        **** volatile uint8_t I2Cbuff2[16];
 202:main.c        **** volatile uint8_t send_it = 0;
 203:main.c        **** 
 204:main.c        **** //first mux, 0x70 is first element of array. 
 205:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 206:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 207:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 208:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 209:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,0,0,0,0,0}; //so that pedals and levers can be marked as s
 210:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 211:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 212:main.c        **** uint16_t pedals_lowWithDeadZone[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 213:main.c        **** uint16_t pedals_highWithDeadZone[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 214:main.c        **** uint8_t deadZone = 51;
 215:main.c        **** uint16_t volumePedal = 4095;
 216:main.c        **** uint16_t processed_pedals[NUM_PEDALS];
 217:main.c        **** uint16_t prev_processed_pedals[NUM_PEDALS];
 218:main.c        **** uint8_t pedals8bit[NUM_PEDALS];
 219:main.c        **** uint8_t pedals7bit[NUM_PEDALS];
 220:main.c        **** uint8_t prevPedals7bit[NUM_PEDALS];
 221:main.c        **** int16_t prev_processed_volumePedal;
 222:main.c        **** int16_t processed_volumePedal;
 223:main.c        **** 
 224:main.c        **** uint8_t sliderBugOn = 0;
 225:main.c        **** 
 226:main.c        **** uint16_t fretMeasurements[NUM_SLIDERS][NUM_FRET_MEASUREMENTS];
 227:main.c        **** 
 228:main.c        **** 
 229:main.c        **** 
 230:main.c        **** uint8_t currentPresetSelection = 0;
 231:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][PRESET_NAME_LENGTH_IN_BYTES];
 232:main.c        **** uint8_t presetNumberToLoad = 0;
 233:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 234:main.c        **** 
 235:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS*NUM_MACRO_PAGES][MACRO_NAME_LENGTH_IN_BYTES];
 236:main.c        **** uint8_t controlNamesArray[MAX_NUM_PRESETS][NUM_CONTROLS][CONTROL_NAME_LENGTH_IN_BYTES];
 237:main.c        **** 
 238:main.c        **** //frets 0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24
 239:main.c        **** float fretScalingInMIDI[NUM_FRET_MEASUREMENTS] = {0.0f, 1.0f, 3.0f, 5.0f, 7.0f, 9.0f, 12.0f, 15.0f,
 240:main.c        **** float fretScalingInRatios[NUM_FRET_MEASUREMENTS] = {1.0f, 1.0594634453327456842756554370605f, 1.189
 241:main.c        **** 
 242:main.c        **** float pedalRatios[NUM_PEDALS];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 21


 243:main.c        **** uint8_t last_mux = 1;
 244:main.c        **** volatile uint8_t main_counter = 0;
 245:main.c        **** uint8_t dualSlider = 0;
 246:main.c        **** uint8_t voice = 0; //unused for now
 247:main.c        **** 
 248:main.c        **** uint8_t patchNum = 0;
 249:main.c        **** 
 250:main.c        **** uint8_t pedal_inverted[NUM_PEDALS] = {0,0,0,0,0,0,0,0,0,0};
 251:main.c        **** 
 252:main.c        **** uint8_t traditionalPedalAdd = 0;
 253:main.c        **** uint8_t copedentMapping[10] = {4, 5, 6, 7, 8, 10, 9, 3, 1, 2};
 254:main.c        **** float copedent[MAX_NUM_COPEDENTS][NUM_PEDALS+1][NUM_STRINGS];
 255:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][COPEDENT_NAME_LENGTH_IN_BYTES];
 256:main.c        **** 
 257:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 258:main.c        **** 
 259:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 260:main.c        **** 
 261:main.c        **** uint8_t pedal_cc_assignments[NUM_PEDALS] = {0, 1, 2, 3, 4, 8, 9, 7, 6, 5};
 262:main.c        **** float openStringFrequencies[NUM_STRINGS];
 263:main.c        **** float stringMappedPositionsInRatios[NUM_SLIDERS];
 264:main.c        **** float stringMappedPositionsInMIDI[NUM_SLIDERS];
 265:main.c        **** uint16_t barMidiOuterStrings[2];
 266:main.c        **** float stringFrequencies[NUM_STRINGS];
 267:main.c        **** float stringOctave[NUM_STRINGS];
 268:main.c        **** float stringPitch[NUM_STRINGS];
 269:main.c        **** float stringMIDI[NUM_STRINGS];
 270:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 271:main.c        **** 
 272:main.c        **** uint8_t mainOLEDWaitingToSend = 0;
 273:main.c        **** uint8_t macroOLEDWaitingToSend = 0;
 274:main.c        **** 
 275:main.c        **** uint8_t presetAlreadyDisplayed[MAX_NUM_PRESETS];
 276:main.c        **** 
 277:main.c        **** uint8_t currentNeck = 0;
 278:main.c        **** uint8_t neckByte = 0;
 279:main.c        **** 
 280:main.c        **** uint8_t editMode = 0;
 281:main.c        **** uint8_t leverCalibrationMode = 0;
 282:main.c        **** uint8_t fretCalibrationMode = 0;
 283:main.c        **** 
 284:main.c        **** uint8_t presetWhenMacroWriteStarted = 0;
 285:main.c        **** uint8_t macroPageWhenMacroWriteStarted = 0;
 286:main.c        **** 
 287:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 288:main.c        **** float stringRepDivider = 1.0f;
 289:main.c        **** 
 290:main.c        **** //function prototypes
 291:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 292:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 293:main.c        **** void USB_service(void);
 294:main.c        **** void checkUSB_Vbus(void);
 295:main.c        **** void sendMIDIAllNotesOff(void);
 296:main.c        **** void sendMIDIPitchBend(int val, int channel);
 297:main.c        **** void firstCheckUSB_Vbus(void);
 298:main.c        **** void restartSystemCheck(void);
 299:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 22


 300:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 301:main.c        **** void noteEvent(int string);
 302:main.c        **** void I2C_reset(void);
 303:main.c        **** void CCEvent(int cc, int val);
 304:main.c        **** void DmaRxConfiguration(void);
 305:main.c        **** void DmaTxConfiguration(void);
 306:main.c        **** void parseSysex(void);
 307:main.c        **** 
 308:main.c        **** //helper functions
 309:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 310:main.c        **** {
 887              		.loc 1 310 0
 888              		.cfi_startproc
 889              		@ args = 4, pretend = 0, frame = 16
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891 0000 B0B5     		push	{r4, r5, r7, lr}
 892              		.cfi_def_cfa_offset 16
 893              		.cfi_offset 4, -16
 894              		.cfi_offset 5, -12
 895              		.cfi_offset 7, -8
 896              		.cfi_offset 14, -4
 897 0002 84B0     		sub	sp, sp, #16
 898              		.cfi_def_cfa_offset 32
 899 0004 00AF     		add	r7, sp, #0
 900              		.cfi_def_cfa_register 7
 901 0006 F860     		str	r0, [r7, #12]	@ float
 902 0008 B960     		str	r1, [r7, #8]	@ float
 903 000a 7A60     		str	r2, [r7, #4]	@ float
 904 000c 3B60     		str	r3, [r7]	@ float
 311:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 905              		.loc 1 311 0
 906 000e 3968     		ldr	r1, [r7]	@ float
 907 0010 386A     		ldr	r0, [r7, #32]	@ float
 908 0012 FFF7FEFF 		bl	__aeabi_fsub
 909 0016 0346     		mov	r3, r0
 910 0018 1C46     		mov	r4, r3
 911 001a B968     		ldr	r1, [r7, #8]	@ float
 912 001c F868     		ldr	r0, [r7, #12]	@ float
 913 001e FFF7FEFF 		bl	__aeabi_fsub
 914 0022 0346     		mov	r3, r0
 915 0024 1D46     		mov	r5, r3
 916 0026 B968     		ldr	r1, [r7, #8]	@ float
 917 0028 7868     		ldr	r0, [r7, #4]	@ float
 918 002a FFF7FEFF 		bl	__aeabi_fsub
 919 002e 0346     		mov	r3, r0
 920 0030 1946     		mov	r1, r3
 921 0032 2846     		mov	r0, r5
 922 0034 FFF7FEFF 		bl	__aeabi_fdiv
 923 0038 0346     		mov	r3, r0
 924 003a 1946     		mov	r1, r3
 925 003c 2046     		mov	r0, r4
 926 003e FFF7FEFF 		bl	__aeabi_fmul
 927 0042 0346     		mov	r3, r0
 928 0044 3968     		ldr	r1, [r7]	@ float
 929 0046 1846     		mov	r0, r3
 930 0048 FFF7FEFF 		bl	__aeabi_fadd
 931 004c 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 23


 312:main.c        **** }
 932              		.loc 1 312 0
 933 004e 1846     		mov	r0, r3
 934 0050 1037     		adds	r7, r7, #16
 935              		.cfi_def_cfa_offset 16
 936 0052 BD46     		mov	sp, r7
 937              		.cfi_def_cfa_register 13
 938              		@ sp needed
 939 0054 B0BD     		pop	{r4, r5, r7, pc}
 940              		.cfi_endproc
 941              	.LFE64:
 942              		.size	map, .-map
 943              		.global	__aeabi_i2f
 944 0056 00BF     		.section	.text.mapDualSlider,"ax",%progbits
 945              		.align	2
 946              		.global	mapDualSlider
 947              		.thumb
 948              		.thumb_func
 949              		.type	mapDualSlider, %function
 950              	mapDualSlider:
 951              	.LFB65:
 313:main.c        **** 
 314:main.c        **** float mapDualSlider(float value, float ostart, float ostop)
 315:main.c        **** {
 952              		.loc 1 315 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 16
 955              		@ frame_needed = 1, uses_anonymous_args = 0
 956 0000 90B5     		push	{r4, r7, lr}
 957              		.cfi_def_cfa_offset 12
 958              		.cfi_offset 4, -12
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 85B0     		sub	sp, sp, #20
 962              		.cfi_def_cfa_offset 32
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 965 0006 F860     		str	r0, [r7, #12]	@ float
 966 0008 B960     		str	r1, [r7, #8]	@ float
 967 000a 7A60     		str	r2, [r7, #4]	@ float
 316:main.c        ****     return ostart + (ostop - ostart) * ((value - stringRepresentation[0]) * stringRepDivider);
 968              		.loc 1 316 0
 969 000c B968     		ldr	r1, [r7, #8]	@ float
 970 000e 7868     		ldr	r0, [r7, #4]	@ float
 971 0010 FFF7FEFF 		bl	__aeabi_fsub
 972 0014 0346     		mov	r3, r0
 973 0016 1C46     		mov	r4, r3
 974 0018 104B     		ldr	r3, .L5
 975 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976 001c 1846     		mov	r0, r3
 977 001e FFF7FEFF 		bl	__aeabi_i2f
 978 0022 0346     		mov	r3, r0
 979 0024 1946     		mov	r1, r3
 980 0026 F868     		ldr	r0, [r7, #12]	@ float
 981 0028 FFF7FEFF 		bl	__aeabi_fsub
 982 002c 0346     		mov	r3, r0
 983 002e 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 24


 984 0030 0B4B     		ldr	r3, .L5+4
 985 0032 1B68     		ldr	r3, [r3]	@ float
 986 0034 1946     		mov	r1, r3
 987 0036 1046     		mov	r0, r2
 988 0038 FFF7FEFF 		bl	__aeabi_fmul
 989 003c 0346     		mov	r3, r0
 990 003e 1946     		mov	r1, r3
 991 0040 2046     		mov	r0, r4
 992 0042 FFF7FEFF 		bl	__aeabi_fmul
 993 0046 0346     		mov	r3, r0
 994 0048 B968     		ldr	r1, [r7, #8]	@ float
 995 004a 1846     		mov	r0, r3
 996 004c FFF7FEFF 		bl	__aeabi_fadd
 997 0050 0346     		mov	r3, r0
 317:main.c        **** }
 998              		.loc 1 317 0
 999 0052 1846     		mov	r0, r3
 1000 0054 1437     		adds	r7, r7, #20
 1001              		.cfi_def_cfa_offset 12
 1002 0056 BD46     		mov	sp, r7
 1003              		.cfi_def_cfa_register 13
 1004              		@ sp needed
 1005 0058 90BD     		pop	{r4, r7, pc}
 1006              	.L6:
 1007 005a 00BF     		.align	2
 1008              	.L5:
 1009 005c 00000000 		.word	stringRepresentation
 1010 0060 00000000 		.word	stringRepDivider
 1011              		.cfi_endproc
 1012              	.LFE65:
 1013              		.size	mapDualSlider, .-mapDualSlider
 1014              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1015              		.align	2
 1016              		.global	burnInitialPedalZeroPositions
 1017              		.thumb
 1018              		.thumb_func
 1019              		.type	burnInitialPedalZeroPositions, %function
 1020              	burnInitialPedalZeroPositions:
 1021              	.LFB66:
 318:main.c        **** 
 319:main.c        **** void burnInitialPedalZeroPositions()
 320:main.c        **** {
 1022              		.loc 1 320 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 8
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026 0000 80B5     		push	{r7, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 7, -8
 1029              		.cfi_offset 14, -4
 1030 0002 82B0     		sub	sp, sp, #8
 1031              		.cfi_def_cfa_offset 16
 1032 0004 00AF     		add	r7, sp, #0
 1033              		.cfi_def_cfa_register 7
 1034              	.LBB2:
 321:main.c        ****     for (int i = 0; i < 5; i++)
 1035              		.loc 1 321 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 25


 1036 0006 0023     		movs	r3, #0
 1037 0008 7B60     		str	r3, [r7, #4]
 1038 000a 6EE0     		b	.L8
 1039              	.L9:
 322:main.c        ****     {
 323:main.c        ****         I2C_1_MasterSendStart(0x70, 0); 
 1040              		.loc 1 323 0 discriminator 3
 1041 000c 0021     		movs	r1, #0
 1042 000e 7020     		movs	r0, #112
 1043 0010 FFF7FEFF 		bl	I2C_1_MasterSendStart
 324:main.c        ****         I2C_1_MasterWriteByte(1<<i);
 1044              		.loc 1 324 0 discriminator 3
 1045 0014 0122     		movs	r2, #1
 1046 0016 7B68     		ldr	r3, [r7, #4]
 1047 0018 02FA03F3 		lsl	r3, r2, r3
 1048 001c DBB2     		uxtb	r3, r3
 1049 001e 1846     		mov	r0, r3
 1050 0020 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 325:main.c        ****         I2C_1_MasterSendStop(); 
 1051              		.loc 1 325 0 discriminator 3
 1052 0024 FFF7FEFF 		bl	I2C_1_MasterSendStop
 326:main.c        **** 
 327:main.c        **** 
 328:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1053              		.loc 1 328 0 discriminator 3
 1054 0028 0021     		movs	r1, #0
 1055 002a 3620     		movs	r0, #54
 1056 002c FFF7FEFF 		bl	I2C_1_MasterSendStart
 329:main.c        ****         I2C_1_MasterWriteByte(0x0C);
 1057              		.loc 1 329 0 discriminator 3
 1058 0030 0C20     		movs	r0, #12
 1059 0032 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 330:main.c        ****         //I2C_1_MasterSendStop();
 331:main.c        ****         I2C_1_MasterSendRestart(0x36, 1); 
 1060              		.loc 1 331 0 discriminator 3
 1061 0036 0121     		movs	r1, #1
 1062 0038 3620     		movs	r0, #54
 1063 003a FFF7FEFF 		bl	I2C_1_MasterSendRestart
 332:main.c        ****         rawAngle = I2C_1_MasterReadByte(1) << 8;
 1064              		.loc 1 332 0 discriminator 3
 1065 003e 0120     		movs	r0, #1
 1066 0040 FFF7FEFF 		bl	I2C_1_MasterReadByte
 1067 0044 0346     		mov	r3, r0
 1068 0046 9BB2     		uxth	r3, r3
 1069 0048 1B02     		lsls	r3, r3, #8
 1070 004a 9AB2     		uxth	r2, r3
 1071 004c 654B     		ldr	r3, .L12
 1072 004e 1A80     		strh	r2, [r3]	@ movhi
 333:main.c        ****         //I2C_1_MasterSendRestart(0x36, 1);
 334:main.c        ****         rawAngle +=  I2C_1_MasterReadByte(0);
 1073              		.loc 1 334 0 discriminator 3
 1074 0050 0020     		movs	r0, #0
 1075 0052 FFF7FEFF 		bl	I2C_1_MasterReadByte
 1076 0056 0346     		mov	r3, r0
 1077 0058 9AB2     		uxth	r2, r3
 1078 005a 624B     		ldr	r3, .L12
 1079 005c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 26


 1080 005e 1344     		add	r3, r3, r2
 1081 0060 9AB2     		uxth	r2, r3
 1082 0062 604B     		ldr	r3, .L12
 1083 0064 1A80     		strh	r2, [r3]	@ movhi
 335:main.c        ****          I2C_1_MasterSendStop(); 
 1084              		.loc 1 335 0 discriminator 3
 1085 0066 FFF7FEFF 		bl	I2C_1_MasterSendStop
 336:main.c        ****         
 337:main.c        ****         CyDelay(1);
 1086              		.loc 1 337 0 discriminator 3
 1087 006a 0120     		movs	r0, #1
 1088 006c FFF7FEFF 		bl	CyDelay
 338:main.c        **** 
 339:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1089              		.loc 1 339 0 discriminator 3
 1090 0070 0021     		movs	r1, #0
 1091 0072 3620     		movs	r0, #54
 1092 0074 FFF7FEFF 		bl	I2C_1_MasterSendStart
 340:main.c        ****         I2C_1_MasterWriteByte(0x01);
 1093              		.loc 1 340 0 discriminator 3
 1094 0078 0120     		movs	r0, #1
 1095 007a FFF7FEFF 		bl	I2C_1_MasterWriteByte
 341:main.c        ****         I2C_1_MasterWriteByte(rawAngle >> 8);
 1096              		.loc 1 341 0 discriminator 3
 1097 007e 594B     		ldr	r3, .L12
 1098 0080 1B88     		ldrh	r3, [r3]
 1099 0082 1B0A     		lsrs	r3, r3, #8
 1100 0084 9BB2     		uxth	r3, r3
 1101 0086 DBB2     		uxtb	r3, r3
 1102 0088 1846     		mov	r0, r3
 1103 008a FFF7FEFF 		bl	I2C_1_MasterWriteByte
 342:main.c        ****         I2C_1_MasterWriteByte(rawAngle & 0xff);
 1104              		.loc 1 342 0 discriminator 3
 1105 008e 554B     		ldr	r3, .L12
 1106 0090 1B88     		ldrh	r3, [r3]
 1107 0092 DBB2     		uxtb	r3, r3
 1108 0094 1846     		mov	r0, r3
 1109 0096 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 343:main.c        ****         I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 1110              		.loc 1 343 0 discriminator 3
 1111 009a 524B     		ldr	r3, .L12
 1112 009c 1B88     		ldrh	r3, [r3]
 1113 009e 03F5FA73 		add	r3, r3, #500
 1114 00a2 1B12     		asrs	r3, r3, #8
 1115 00a4 DBB2     		uxtb	r3, r3
 1116 00a6 1846     		mov	r0, r3
 1117 00a8 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 344:main.c        ****         I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 1118              		.loc 1 344 0 discriminator 3
 1119 00ac 4D4B     		ldr	r3, .L12
 1120 00ae 1B88     		ldrh	r3, [r3]
 1121 00b0 DBB2     		uxtb	r3, r3
 1122 00b2 0C3B     		subs	r3, r3, #12
 1123 00b4 DBB2     		uxtb	r3, r3
 1124 00b6 1846     		mov	r0, r3
 1125 00b8 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 345:main.c        ****         I2C_1_MasterSendStop(); 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 27


 1126              		.loc 1 345 0 discriminator 3
 1127 00bc FFF7FEFF 		bl	I2C_1_MasterSendStop
 346:main.c        ****         
 347:main.c        ****         CyDelay(2);
 1128              		.loc 1 347 0 discriminator 3
 1129 00c0 0220     		movs	r0, #2
 1130 00c2 FFF7FEFF 		bl	CyDelay
 348:main.c        **** 
 349:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1131              		.loc 1 349 0 discriminator 3
 1132 00c6 0021     		movs	r1, #0
 1133 00c8 3620     		movs	r0, #54
 1134 00ca FFF7FEFF 		bl	I2C_1_MasterSendStart
 350:main.c        ****         I2C_1_MasterWriteByte(0xff);
 1135              		.loc 1 350 0 discriminator 3
 1136 00ce FF20     		movs	r0, #255
 1137 00d0 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 351:main.c        ****        I2C_1_MasterWriteByte(0x80);
 1138              		.loc 1 351 0 discriminator 3
 1139 00d4 8020     		movs	r0, #128
 1140 00d6 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 352:main.c        ****         I2C_1_MasterSendStop(); 
 1141              		.loc 1 352 0 discriminator 3
 1142 00da FFF7FEFF 		bl	I2C_1_MasterSendStop
 353:main.c        ****        CyDelay(2);
 1143              		.loc 1 353 0 discriminator 3
 1144 00de 0220     		movs	r0, #2
 1145 00e0 FFF7FEFF 		bl	CyDelay
 321:main.c        ****     {
 1146              		.loc 1 321 0 discriminator 3
 1147 00e4 7B68     		ldr	r3, [r7, #4]
 1148 00e6 0133     		adds	r3, r3, #1
 1149 00e8 7B60     		str	r3, [r7, #4]
 1150              	.L8:
 321:main.c        ****     {
 1151              		.loc 1 321 0 is_stmt 0 discriminator 1
 1152 00ea 7B68     		ldr	r3, [r7, #4]
 1153 00ec 042B     		cmp	r3, #4
 1154 00ee 8DDD     		ble	.L9
 1155              	.LBE2:
 1156              	.LBB3:
 354:main.c        ****     }
 355:main.c        ****     
 356:main.c        ****     //set main i2c mux
 357:main.c        ****     for (int i = 0; i < 4; i++)
 1157              		.loc 1 357 0 is_stmt 1
 1158 00f0 0023     		movs	r3, #0
 1159 00f2 3B60     		str	r3, [r7]
 1160 00f4 6FE0     		b	.L10
 1161              	.L11:
 358:main.c        ****     {
 359:main.c        ****         I2C_1_MasterSendStart(0x71, 0); 
 1162              		.loc 1 359 0 discriminator 3
 1163 00f6 0021     		movs	r1, #0
 1164 00f8 7120     		movs	r0, #113
 1165 00fa FFF7FEFF 		bl	I2C_1_MasterSendStart
 360:main.c        ****         I2C_1_MasterWriteByte(1<<(i+2));
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 28


 1166              		.loc 1 360 0 discriminator 3
 1167 00fe 3B68     		ldr	r3, [r7]
 1168 0100 0233     		adds	r3, r3, #2
 1169 0102 0122     		movs	r2, #1
 1170 0104 02FA03F3 		lsl	r3, r2, r3
 1171 0108 DBB2     		uxtb	r3, r3
 1172 010a 1846     		mov	r0, r3
 1173 010c FFF7FEFF 		bl	I2C_1_MasterWriteByte
 361:main.c        ****         I2C_1_MasterSendStop(); 
 1174              		.loc 1 361 0 discriminator 3
 1175 0110 FFF7FEFF 		bl	I2C_1_MasterSendStop
 362:main.c        **** 
 363:main.c        **** 
 364:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1176              		.loc 1 364 0 discriminator 3
 1177 0114 0021     		movs	r1, #0
 1178 0116 3620     		movs	r0, #54
 1179 0118 FFF7FEFF 		bl	I2C_1_MasterSendStart
 365:main.c        ****         I2C_1_MasterWriteByte(0x0C);
 1180              		.loc 1 365 0 discriminator 3
 1181 011c 0C20     		movs	r0, #12
 1182 011e FFF7FEFF 		bl	I2C_1_MasterWriteByte
 366:main.c        ****         //I2C_1_MasterSendStop();
 367:main.c        ****         I2C_1_MasterSendRestart(0x36, 1); 
 1183              		.loc 1 367 0 discriminator 3
 1184 0122 0121     		movs	r1, #1
 1185 0124 3620     		movs	r0, #54
 1186 0126 FFF7FEFF 		bl	I2C_1_MasterSendRestart
 368:main.c        ****         rawAngle = I2C_1_MasterReadByte(1) << 8;
 1187              		.loc 1 368 0 discriminator 3
 1188 012a 0120     		movs	r0, #1
 1189 012c FFF7FEFF 		bl	I2C_1_MasterReadByte
 1190 0130 0346     		mov	r3, r0
 1191 0132 9BB2     		uxth	r3, r3
 1192 0134 1B02     		lsls	r3, r3, #8
 1193 0136 9AB2     		uxth	r2, r3
 1194 0138 2A4B     		ldr	r3, .L12
 1195 013a 1A80     		strh	r2, [r3]	@ movhi
 369:main.c        ****         //I2C_1_MasterSendRestart(0x36, 1);
 370:main.c        ****         rawAngle +=  I2C_1_MasterReadByte(0);
 1196              		.loc 1 370 0 discriminator 3
 1197 013c 0020     		movs	r0, #0
 1198 013e FFF7FEFF 		bl	I2C_1_MasterReadByte
 1199 0142 0346     		mov	r3, r0
 1200 0144 9AB2     		uxth	r2, r3
 1201 0146 274B     		ldr	r3, .L12
 1202 0148 1B88     		ldrh	r3, [r3]
 1203 014a 1344     		add	r3, r3, r2
 1204 014c 9AB2     		uxth	r2, r3
 1205 014e 254B     		ldr	r3, .L12
 1206 0150 1A80     		strh	r2, [r3]	@ movhi
 371:main.c        ****          I2C_1_MasterSendStop(); 
 1207              		.loc 1 371 0 discriminator 3
 1208 0152 FFF7FEFF 		bl	I2C_1_MasterSendStop
 372:main.c        ****         
 373:main.c        ****         CyDelay(1);
 1209              		.loc 1 373 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 29


 1210 0156 0120     		movs	r0, #1
 1211 0158 FFF7FEFF 		bl	CyDelay
 374:main.c        **** 
 375:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1212              		.loc 1 375 0 discriminator 3
 1213 015c 0021     		movs	r1, #0
 1214 015e 3620     		movs	r0, #54
 1215 0160 FFF7FEFF 		bl	I2C_1_MasterSendStart
 376:main.c        ****         I2C_1_MasterWriteByte(0x01);
 1216              		.loc 1 376 0 discriminator 3
 1217 0164 0120     		movs	r0, #1
 1218 0166 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 377:main.c        ****         I2C_1_MasterWriteByte(rawAngle >> 8);
 1219              		.loc 1 377 0 discriminator 3
 1220 016a 1E4B     		ldr	r3, .L12
 1221 016c 1B88     		ldrh	r3, [r3]
 1222 016e 1B0A     		lsrs	r3, r3, #8
 1223 0170 9BB2     		uxth	r3, r3
 1224 0172 DBB2     		uxtb	r3, r3
 1225 0174 1846     		mov	r0, r3
 1226 0176 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 378:main.c        ****         I2C_1_MasterWriteByte(rawAngle & 0xff);
 1227              		.loc 1 378 0 discriminator 3
 1228 017a 1A4B     		ldr	r3, .L12
 1229 017c 1B88     		ldrh	r3, [r3]
 1230 017e DBB2     		uxtb	r3, r3
 1231 0180 1846     		mov	r0, r3
 1232 0182 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 379:main.c        ****         I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 1233              		.loc 1 379 0 discriminator 3
 1234 0186 174B     		ldr	r3, .L12
 1235 0188 1B88     		ldrh	r3, [r3]
 1236 018a 03F52F73 		add	r3, r3, #700
 1237 018e 1B12     		asrs	r3, r3, #8
 1238 0190 DBB2     		uxtb	r3, r3
 1239 0192 1846     		mov	r0, r3
 1240 0194 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 380:main.c        ****         I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 1241              		.loc 1 380 0 discriminator 3
 1242 0198 124B     		ldr	r3, .L12
 1243 019a 1B88     		ldrh	r3, [r3]
 1244 019c DBB2     		uxtb	r3, r3
 1245 019e 443B     		subs	r3, r3, #68
 1246 01a0 DBB2     		uxtb	r3, r3
 1247 01a2 1846     		mov	r0, r3
 1248 01a4 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 381:main.c        ****         I2C_1_MasterSendStop(); 
 1249              		.loc 1 381 0 discriminator 3
 1250 01a8 FFF7FEFF 		bl	I2C_1_MasterSendStop
 382:main.c        ****         
 383:main.c        ****         CyDelay(2);
 1251              		.loc 1 383 0 discriminator 3
 1252 01ac 0220     		movs	r0, #2
 1253 01ae FFF7FEFF 		bl	CyDelay
 384:main.c        **** 
 385:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1254              		.loc 1 385 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 30


 1255 01b2 0021     		movs	r1, #0
 1256 01b4 3620     		movs	r0, #54
 1257 01b6 FFF7FEFF 		bl	I2C_1_MasterSendStart
 386:main.c        ****         I2C_1_MasterWriteByte(0xff);
 1258              		.loc 1 386 0 discriminator 3
 1259 01ba FF20     		movs	r0, #255
 1260 01bc FFF7FEFF 		bl	I2C_1_MasterWriteByte
 387:main.c        ****         I2C_1_MasterWriteByte(0x80);
 1261              		.loc 1 387 0 discriminator 3
 1262 01c0 8020     		movs	r0, #128
 1263 01c2 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 388:main.c        ****         I2C_1_MasterSendStop(); 
 1264              		.loc 1 388 0 discriminator 3
 1265 01c6 FFF7FEFF 		bl	I2C_1_MasterSendStop
 389:main.c        ****        CyDelay(2);
 1266              		.loc 1 389 0 discriminator 3
 1267 01ca 0220     		movs	r0, #2
 1268 01cc FFF7FEFF 		bl	CyDelay
 357:main.c        ****     {
 1269              		.loc 1 357 0 discriminator 3
 1270 01d0 3B68     		ldr	r3, [r7]
 1271 01d2 0133     		adds	r3, r3, #1
 1272 01d4 3B60     		str	r3, [r7]
 1273              	.L10:
 357:main.c        ****     {
 1274              		.loc 1 357 0 is_stmt 0 discriminator 1
 1275 01d6 3B68     		ldr	r3, [r7]
 1276 01d8 032B     		cmp	r3, #3
 1277 01da 8CDD     		ble	.L11
 1278              	.LBE3:
 390:main.c        ****     }
 391:main.c        **** }
 1279              		.loc 1 391 0 is_stmt 1
 1280 01dc 00BF     		nop
 1281 01de 0837     		adds	r7, r7, #8
 1282              		.cfi_def_cfa_offset 8
 1283 01e0 BD46     		mov	sp, r7
 1284              		.cfi_def_cfa_register 13
 1285              		@ sp needed
 1286 01e2 80BD     		pop	{r7, pc}
 1287              	.L13:
 1288              		.align	2
 1289              	.L12:
 1290 01e4 00000000 		.word	rawAngle
 1291              		.cfi_endproc
 1292              	.LFE66:
 1293              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1294              		.global	__aeabi_ui2f
 1295              		.global	__aeabi_f2uiz
 1296              		.section	.text.calculatePedalRatios,"ax",%progbits
 1297              		.align	2
 1298              		.global	calculatePedalRatios
 1299              		.thumb
 1300              		.thumb_func
 1301              		.type	calculatePedalRatios, %function
 1302              	calculatePedalRatios:
 1303              	.LFB67:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 31


 392:main.c        **** 
 393:main.c        **** void calculatePedalRatios(void)
 394:main.c        **** {
 1304              		.loc 1 394 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 16
 1307              		@ frame_needed = 1, uses_anonymous_args = 0
 1308 0000 90B5     		push	{r4, r7, lr}
 1309              		.cfi_def_cfa_offset 12
 1310              		.cfi_offset 4, -12
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 85B0     		sub	sp, sp, #20
 1314              		.cfi_def_cfa_offset 32
 1315 0004 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
 1317              	.LBB4:
 395:main.c        ****     //add deadzones on edges of pedal sensing
 396:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1318              		.loc 1 396 0
 1319 0006 0023     		movs	r3, #0
 1320 0008 FB60     		str	r3, [r7, #12]
 1321 000a 6EE0     		b	.L15
 1322              	.L16:
 1323              	.LBB5:
 397:main.c        ****     {
 398:main.c        **** 
 399:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i]; //temporary diff to calculat
 1324              		.loc 1 399 0 discriminator 3
 1325 000c 3A4A     		ldr	r2, .L17
 1326 000e FB68     		ldr	r3, [r7, #12]
 1327 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1328 0014 1846     		mov	r0, r3
 1329 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1330 001a 0446     		mov	r4, r0
 1331 001c 374A     		ldr	r2, .L17+4
 1332 001e FB68     		ldr	r3, [r7, #12]
 1333 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1334 0024 1846     		mov	r0, r3
 1335 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1336 002a 0346     		mov	r3, r0
 1337 002c 1946     		mov	r1, r3
 1338 002e 2046     		mov	r0, r4
 1339 0030 FFF7FEFF 		bl	__aeabi_fsub
 1340 0034 0346     		mov	r3, r0
 1341 0036 BB60     		str	r3, [r7, #8]	@ float
 400:main.c        ****         float deadZoneFloat = ((float)deadZone) * 0.002f * pedalDiff;
 1342              		.loc 1 400 0 discriminator 3
 1343 0038 314B     		ldr	r3, .L17+8
 1344 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1345 003c 1846     		mov	r0, r3
 1346 003e FFF7FEFF 		bl	__aeabi_ui2f
 1347 0042 0346     		mov	r3, r0
 1348 0044 2F49     		ldr	r1, .L17+12
 1349 0046 1846     		mov	r0, r3
 1350 0048 FFF7FEFF 		bl	__aeabi_fmul
 1351 004c 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 32


 1352 004e B968     		ldr	r1, [r7, #8]	@ float
 1353 0050 1846     		mov	r0, r3
 1354 0052 FFF7FEFF 		bl	__aeabi_fmul
 1355 0056 0346     		mov	r3, r0
 1356 0058 7B60     		str	r3, [r7, #4]	@ float
 401:main.c        ****         pedals_lowWithDeadZone[i] = (float)pedals_low[i] + deadZoneFloat;
 1357              		.loc 1 401 0 discriminator 3
 1358 005a 284A     		ldr	r2, .L17+4
 1359 005c FB68     		ldr	r3, [r7, #12]
 1360 005e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1361 0062 1846     		mov	r0, r3
 1362 0064 FFF7FEFF 		bl	__aeabi_ui2f
 1363 0068 0346     		mov	r3, r0
 1364 006a 7968     		ldr	r1, [r7, #4]	@ float
 1365 006c 1846     		mov	r0, r3
 1366 006e FFF7FEFF 		bl	__aeabi_fadd
 1367 0072 0346     		mov	r3, r0
 1368 0074 1846     		mov	r0, r3
 1369 0076 FFF7FEFF 		bl	__aeabi_f2uiz
 1370 007a 0346     		mov	r3, r0
 1371 007c 99B2     		uxth	r1, r3
 1372 007e 224A     		ldr	r2, .L17+16
 1373 0080 FB68     		ldr	r3, [r7, #12]
 1374 0082 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 402:main.c        ****         pedals_highWithDeadZone[i] = (float)pedals_high[i] - deadZoneFloat;
 1375              		.loc 1 402 0 discriminator 3
 1376 0086 1C4A     		ldr	r2, .L17
 1377 0088 FB68     		ldr	r3, [r7, #12]
 1378 008a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1379 008e 1846     		mov	r0, r3
 1380 0090 FFF7FEFF 		bl	__aeabi_ui2f
 1381 0094 0346     		mov	r3, r0
 1382 0096 7968     		ldr	r1, [r7, #4]	@ float
 1383 0098 1846     		mov	r0, r3
 1384 009a FFF7FEFF 		bl	__aeabi_fsub
 1385 009e 0346     		mov	r3, r0
 1386 00a0 1846     		mov	r0, r3
 1387 00a2 FFF7FEFF 		bl	__aeabi_f2uiz
 1388 00a6 0346     		mov	r3, r0
 1389 00a8 99B2     		uxth	r1, r3
 1390 00aa 184A     		ldr	r2, .L17+20
 1391 00ac FB68     		ldr	r3, [r7, #12]
 1392 00ae 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 403:main.c        ****         pedalDiff = pedals_highWithDeadZone[i] - pedals_lowWithDeadZone[i]; //final diff to calcula
 1393              		.loc 1 403 0 discriminator 3
 1394 00b2 164A     		ldr	r2, .L17+20
 1395 00b4 FB68     		ldr	r3, [r7, #12]
 1396 00b6 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1397 00ba 1946     		mov	r1, r3
 1398 00bc 124A     		ldr	r2, .L17+16
 1399 00be FB68     		ldr	r3, [r7, #12]
 1400 00c0 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1401 00c4 CB1A     		subs	r3, r1, r3
 1402 00c6 1846     		mov	r0, r3
 1403 00c8 FFF7FEFF 		bl	__aeabi_i2f
 1404 00cc 0346     		mov	r3, r0
 1405 00ce BB60     		str	r3, [r7, #8]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 33


 404:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1406              		.loc 1 404 0 discriminator 3
 1407 00d0 B968     		ldr	r1, [r7, #8]	@ float
 1408 00d2 0F48     		ldr	r0, .L17+24
 1409 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1410 00d8 0346     		mov	r3, r0
 1411 00da 1946     		mov	r1, r3
 1412 00dc 0D4A     		ldr	r2, .L17+28
 1413 00de FB68     		ldr	r3, [r7, #12]
 1414 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1415              	.LBE5:
 396:main.c        ****     {
 1416              		.loc 1 396 0 discriminator 3
 1417 00e4 FB68     		ldr	r3, [r7, #12]
 1418 00e6 0133     		adds	r3, r3, #1
 1419 00e8 FB60     		str	r3, [r7, #12]
 1420              	.L15:
 396:main.c        ****     {
 1421              		.loc 1 396 0 is_stmt 0 discriminator 1
 1422 00ea FB68     		ldr	r3, [r7, #12]
 1423 00ec 092B     		cmp	r3, #9
 1424 00ee 8DDD     		ble	.L16
 1425              	.LBE4:
 405:main.c        ****     }
 406:main.c        **** }
 1426              		.loc 1 406 0 is_stmt 1
 1427 00f0 00BF     		nop
 1428 00f2 1437     		adds	r7, r7, #20
 1429              		.cfi_def_cfa_offset 12
 1430 00f4 BD46     		mov	sp, r7
 1431              		.cfi_def_cfa_register 13
 1432              		@ sp needed
 1433 00f6 90BD     		pop	{r4, r7, pc}
 1434              	.L18:
 1435              		.align	2
 1436              	.L17:
 1437 00f8 00000000 		.word	pedals_high
 1438 00fc 00000000 		.word	pedals_low
 1439 0100 00000000 		.word	deadZone
 1440 0104 6F12033B 		.word	990057071
 1441 0108 00000000 		.word	pedals_lowWithDeadZone
 1442 010c 00000000 		.word	pedals_highWithDeadZone
 1443 0110 00F07F45 		.word	1166012416
 1444 0114 00000000 		.word	pedalRatios
 1445              		.cfi_endproc
 1446              	.LFE67:
 1447              		.size	calculatePedalRatios, .-calculatePedalRatios
 1448              		.global	__aeabi_fcmpeq
 1449              		.section	.text.calculateStringRepDivider,"ax",%progbits
 1450              		.align	2
 1451              		.global	calculateStringRepDivider
 1452              		.thumb
 1453              		.thumb_func
 1454              		.type	calculateStringRepDivider, %function
 1455              	calculateStringRepDivider:
 1456              	.LFB68:
 407:main.c        **** void calculateStringRepDivider(void)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 34


 408:main.c        **** {
 1457              		.loc 1 408 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 1, uses_anonymous_args = 0
 1461 0000 80B5     		push	{r7, lr}
 1462              		.cfi_def_cfa_offset 8
 1463              		.cfi_offset 7, -8
 1464              		.cfi_offset 14, -4
 1465 0002 00AF     		add	r7, sp, #0
 1466              		.cfi_def_cfa_register 7
 409:main.c        ****     stringRepDivider = (stringRepresentation[1] - stringRepresentation[0]);
 1467              		.loc 1 409 0
 1468 0004 1C4B     		ldr	r3, .L25
 1469 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1470 0008 1A46     		mov	r2, r3
 1471 000a 1B4B     		ldr	r3, .L25
 1472 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 000e D31A     		subs	r3, r2, r3
 1474 0010 1846     		mov	r0, r3
 1475 0012 FFF7FEFF 		bl	__aeabi_i2f
 1476 0016 0246     		mov	r2, r0
 1477 0018 184B     		ldr	r3, .L25+4
 1478 001a 1A60     		str	r2, [r3]	@ float
 410:main.c        ****     if (stringRepDivider == 0.0f)
 1479              		.loc 1 410 0
 1480 001c 174B     		ldr	r3, .L25+4
 1481 001e 1B68     		ldr	r3, [r3]	@ float
 1482 0020 4FF00001 		mov	r1, #0
 1483 0024 1846     		mov	r0, r3
 1484 0026 FFF7FEFF 		bl	__aeabi_fcmpeq
 1485 002a 0346     		mov	r3, r0
 1486 002c 002B     		cmp	r3, #0
 1487 002e 11D0     		beq	.L20
 411:main.c        ****     {
 412:main.c        ****         stringRepresentation[0] = 2;
 1488              		.loc 1 412 0
 1489 0030 114B     		ldr	r3, .L25
 1490 0032 0222     		movs	r2, #2
 1491 0034 1A70     		strb	r2, [r3]
 413:main.c        ****         stringRepresentation[1] = 7;
 1492              		.loc 1 413 0
 1493 0036 104B     		ldr	r3, .L25
 1494 0038 0722     		movs	r2, #7
 1495 003a 5A70     		strb	r2, [r3, #1]
 414:main.c        ****         stringRepDivider = (stringRepresentation[1] - stringRepresentation[0]);
 1496              		.loc 1 414 0
 1497 003c 0E4B     		ldr	r3, .L25
 1498 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1499 0040 1A46     		mov	r2, r3
 1500 0042 0D4B     		ldr	r3, .L25
 1501 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 0046 D31A     		subs	r3, r2, r3
 1503 0048 1846     		mov	r0, r3
 1504 004a FFF7FEFF 		bl	__aeabi_i2f
 1505 004e 0246     		mov	r2, r0
 1506 0050 0A4B     		ldr	r3, .L25+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 35


 1507 0052 1A60     		str	r2, [r3]	@ float
 1508              	.L20:
 415:main.c        ****     }
 416:main.c        ****     if (!sliderBugOn)
 1509              		.loc 1 416 0
 1510 0054 0A4B     		ldr	r3, .L25+8
 1511 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1512 0058 002B     		cmp	r3, #0
 1513 005a 0AD1     		bne	.L24
 417:main.c        ****     {
 418:main.c        ****         stringRepDivider = (1.0f / stringRepDivider);
 1514              		.loc 1 418 0
 1515 005c 074B     		ldr	r3, .L25+4
 1516 005e 1B68     		ldr	r3, [r3]	@ float
 1517 0060 1946     		mov	r1, r3
 1518 0062 4FF07E50 		mov	r0, #1065353216
 1519 0066 FFF7FEFF 		bl	__aeabi_fdiv
 1520 006a 0346     		mov	r3, r0
 1521 006c 1A46     		mov	r2, r3
 1522 006e 034B     		ldr	r3, .L25+4
 1523 0070 1A60     		str	r2, [r3]	@ float
 1524              	.L24:
 419:main.c        ****     }
 420:main.c        **** }
 1525              		.loc 1 420 0
 1526 0072 00BF     		nop
 1527 0074 80BD     		pop	{r7, pc}
 1528              	.L26:
 1529 0076 00BF     		.align	2
 1530              	.L25:
 1531 0078 00000000 		.word	stringRepresentation
 1532 007c 00000000 		.word	stringRepDivider
 1533 0080 00000000 		.word	sliderBugOn
 1534              		.cfi_endproc
 1535              	.LFE68:
 1536              		.size	calculateStringRepDivider, .-calculateStringRepDivider
 1537              		.section	.text.unsafeFtom,"ax",%progbits
 1538              		.align	2
 1539              		.global	unsafeFtom
 1540              		.thumb
 1541              		.thumb_func
 1542              		.type	unsafeFtom, %function
 1543              	unsafeFtom:
 1544              	.LFB69:
 421:main.c        **** 
 422:main.c        **** float unsafeFtom(float f)
 423:main.c        **** {
 1545              		.loc 1 423 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 8
 1548              		@ frame_needed = 1, uses_anonymous_args = 0
 1549 0000 80B5     		push	{r7, lr}
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 7, -8
 1552              		.cfi_offset 14, -4
 1553 0002 82B0     		sub	sp, sp, #8
 1554              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 36


 1555 0004 00AF     		add	r7, sp, #0
 1556              		.cfi_def_cfa_register 7
 1557 0006 7860     		str	r0, [r7, #4]	@ float
 424:main.c        ****     return (17.3123405046f * logf(.12231220585f * f));
 1558              		.loc 1 424 0
 1559 0008 0849     		ldr	r1, .L29
 1560 000a 7868     		ldr	r0, [r7, #4]	@ float
 1561 000c FFF7FEFF 		bl	__aeabi_fmul
 1562 0010 0346     		mov	r3, r0
 1563 0012 1846     		mov	r0, r3
 1564 0014 FFF7FEFF 		bl	logf
 1565 0018 0346     		mov	r3, r0
 1566 001a 0549     		ldr	r1, .L29+4
 1567 001c 1846     		mov	r0, r3
 1568 001e FFF7FEFF 		bl	__aeabi_fmul
 1569 0022 0346     		mov	r3, r0
 425:main.c        **** }
 1570              		.loc 1 425 0
 1571 0024 1846     		mov	r0, r3
 1572 0026 0837     		adds	r7, r7, #8
 1573              		.cfi_def_cfa_offset 8
 1574 0028 BD46     		mov	sp, r7
 1575              		.cfi_def_cfa_register 13
 1576              		@ sp needed
 1577 002a 80BD     		pop	{r7, pc}
 1578              	.L30:
 1579              		.align	2
 1580              	.L29:
 1581 002c D27EFA3D 		.word	1039826642
 1582 0030 AC7F8A41 		.word	1099595692
 1583              		.cfi_endproc
 1584              	.LFE69:
 1585              		.size	unsafeFtom, .-unsafeFtom
 1586              		.section	.text.restartSystemCheck,"ax",%progbits
 1587              		.align	2
 1588              		.global	restartSystemCheck
 1589              		.thumb
 1590              		.thumb_func
 1591              		.type	restartSystemCheck, %function
 1592              	restartSystemCheck:
 1593              	.LFB70:
 426:main.c        **** 
 427:main.c        **** 
 428:main.c        **** //a check for when a usb cable is plugged in and it needs to restart only once
 429:main.c        **** void restartSystemCheck()
 430:main.c        **** {
 1594              		.loc 1 430 0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 0
 1597              		@ frame_needed = 1, uses_anonymous_args = 0
 1598 0000 80B5     		push	{r7, lr}
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 1602 0002 00AF     		add	r7, sp, #0
 1603              		.cfi_def_cfa_register 7
 431:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 37


 1604              		.loc 1 431 0
 1605 0004 184B     		ldr	r3, .L35
 1606 0006 0222     		movs	r2, #2
 1607 0008 1849     		ldr	r1, .L35+4
 1608 000a 0020     		movs	r0, #0
 1609 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 1610 0010 0346     		mov	r3, r0
 1611 0012 1A46     		mov	r2, r3
 1612 0014 164B     		ldr	r3, .L35+8
 1613 0016 1A70     		strb	r2, [r3]
 432:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 433:main.c        ****     if (USB_VBusPresent() == 1)
 1614              		.loc 1 433 0
 1615 0018 FFF7FEFF 		bl	USB_VBusPresent
 1616 001c 0346     		mov	r3, r0
 1617 001e 012B     		cmp	r3, #1
 1618 0020 20D1     		bne	.L34
 434:main.c        ****     {
 435:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 1619              		.loc 1 435 0
 1620 0022 124B     		ldr	r3, .L35+4
 1621 0024 1B78     		ldrb	r3, [r3]
 1622 0026 DBB2     		uxtb	r3, r3
 1623 0028 012B     		cmp	r3, #1
 1624 002a 0CD1     		bne	.L33
 436:main.c        ****         {
 437:main.c        ****             //a flag says we just restarted
 438:main.c        ****             //write a zero so it knows next time that it's OK to restart
 439:main.c        ****             array[0] = 0;
 1625              		.loc 1 439 0
 1626 002c 114B     		ldr	r3, .L35+12
 1627 002e 0022     		movs	r2, #0
 1628 0030 1A70     		strb	r2, [r3]
 440:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 1629              		.loc 1 440 0
 1630 0032 0D4B     		ldr	r3, .L35
 1631 0034 0222     		movs	r2, #2
 1632 0036 0F49     		ldr	r1, .L35+12
 1633 0038 0020     		movs	r0, #0
 1634 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 441:main.c        ****             USB_check_flag = 1;
 1635              		.loc 1 441 0
 1636 003e 0E4B     		ldr	r3, .L35+16
 1637 0040 0122     		movs	r2, #1
 1638 0042 1A70     		strb	r2, [r3]
 442:main.c        ****         }
 443:main.c        ****         else
 444:main.c        ****         {
 445:main.c        ****            //otherwise, we need to restart
 446:main.c        ****            array[0] = 1;
 447:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 448:main.c        ****             USB_Stop();
 449:main.c        ****             I2C_1_Stop();
 450:main.c        ****             CySoftwareReset();
 451:main.c        ****         }
 452:main.c        ****     }
 453:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 38


 1639              		.loc 1 453 0
 1640 0044 0EE0     		b	.L34
 1641              	.L33:
 446:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 1642              		.loc 1 446 0
 1643 0046 0B4B     		ldr	r3, .L35+12
 1644 0048 0122     		movs	r2, #1
 1645 004a 1A70     		strb	r2, [r3]
 447:main.c        ****             USB_Stop();
 1646              		.loc 1 447 0
 1647 004c 064B     		ldr	r3, .L35
 1648 004e 0222     		movs	r2, #2
 1649 0050 0849     		ldr	r1, .L35+12
 1650 0052 0020     		movs	r0, #0
 1651 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 448:main.c        ****             I2C_1_Stop();
 1652              		.loc 1 448 0
 1653 0058 FFF7FEFF 		bl	USB_Stop
 449:main.c        ****             CySoftwareReset();
 1654              		.loc 1 449 0
 1655 005c FFF7FEFF 		bl	I2C_1_Stop
 450:main.c        ****         }
 1656              		.loc 1 450 0
 1657 0060 FFF7FEFF 		bl	CySoftwareReset
 1658              	.L34:
 1659              		.loc 1 453 0
 1660 0064 00BF     		nop
 1661 0066 80BD     		pop	{r7, pc}
 1662              	.L36:
 1663              		.align	2
 1664              	.L35:
 1665 0068 00000000 		.word	Em_EEPROM_context
 1666 006c 84000000 		.word	eepromArray
 1667 0070 00000000 		.word	eepromReturnValue
 1668 0074 00000000 		.word	array
 1669 0078 00000000 		.word	USB_check_flag
 1670              		.cfi_endproc
 1671              	.LFE70:
 1672              		.size	restartSystemCheck, .-restartSystemCheck
 1673              		.section	.text.Vbus_function,"ax",%progbits
 1674              		.align	2
 1675              		.global	Vbus_function
 1676              		.thumb
 1677              		.thumb_func
 1678              		.type	Vbus_function, %function
 1679              	Vbus_function:
 1680              	.LFB71:
 454:main.c        **** 
 455:main.c        **** //ISRs
 456:main.c        **** 
 457:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 458:main.c        **** CY_ISR(Vbus_function)
 459:main.c        **** {
 1681              		.loc 1 459 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 39


 1685 0000 80B5     		push	{r7, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 7, -8
 1688              		.cfi_offset 14, -4
 1689 0002 00AF     		add	r7, sp, #0
 1690              		.cfi_def_cfa_register 7
 460:main.c        ****     //plug or unplug event
 461:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 462:main.c        ****     //otherwise, restart
 463:main.c        ****     my_Vbus_ISR_ClearPending();
 1691              		.loc 1 463 0
 1692 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 464:main.c        ****     vBusPin_ClearInterrupt();
 1693              		.loc 1 464 0
 1694 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 465:main.c        ****     restartSystemCheck();
 1695              		.loc 1 465 0
 1696 000c FFF7FEFF 		bl	restartSystemCheck
 466:main.c        **** 
 467:main.c        **** }
 1697              		.loc 1 467 0
 1698 0010 00BF     		nop
 1699 0012 80BD     		pop	{r7, pc}
 1700              		.cfi_endproc
 1701              	.LFE71:
 1702              		.size	Vbus_function, .-Vbus_function
 1703              		.section	.text.spis_2_ss,"ax",%progbits
 1704              		.align	2
 1705              		.global	spis_2_ss
 1706              		.thumb
 1707              		.thumb_func
 1708              		.type	spis_2_ss, %function
 1709              	spis_2_ss:
 1710              	.LFB72:
 468:main.c        **** 
 469:main.c        **** //This one happens when the Bar slider buffer gets filled by SPI
 470:main.c        **** CY_ISR(spis_2_ss)
 471:main.c        **** {
 1711              		.loc 1 471 0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 1, uses_anonymous_args = 0
 1715 0000 80B5     		push	{r7, lr}
 1716              		.cfi_def_cfa_offset 8
 1717              		.cfi_offset 7, -8
 1718              		.cfi_offset 14, -4
 1719 0002 00AF     		add	r7, sp, #0
 1720              		.cfi_def_cfa_register 7
 472:main.c        **** 
 473:main.c        ****     currentBarBuffer = !currentBarBuffer;
 1721              		.loc 1 473 0
 1722 0004 214B     		ldr	r3, .L39
 1723 0006 1B78     		ldrb	r3, [r3]
 1724 0008 DBB2     		uxtb	r3, r3
 1725 000a 002B     		cmp	r3, #0
 1726 000c 0CBF     		ite	eq
 1727 000e 0123     		moveq	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 40


 1728 0010 0023     		movne	r3, #0
 1729 0012 DBB2     		uxtb	r3, r3
 1730 0014 1A46     		mov	r2, r3
 1731 0016 1D4B     		ldr	r3, .L39
 1732 0018 1A70     		strb	r2, [r3]
 474:main.c        ****     SPIS_2_ClearRxBuffer();
 1733              		.loc 1 474 0
 1734 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 475:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 1735              		.loc 1 475 0
 1736 001e 1C4B     		ldr	r3, .L39+4
 1737 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1738 0022 1846     		mov	r0, r3
 1739 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 476:main.c        **** 
 477:main.c        ****     //set up the next DMA transaction
 478:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 1740              		.loc 1 478 0
 1741 0028 184B     		ldr	r3, .L39
 1742 002a 1B78     		ldrb	r3, [r3]
 1743 002c DBB2     		uxtb	r3, r3
 1744 002e 1A46     		mov	r2, r3
 1745 0030 184B     		ldr	r3, .L39+8
 1746 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1747 0034 0223     		movs	r3, #2
 1748 0036 FE22     		movs	r2, #254
 1749 0038 0821     		movs	r1, #8
 1750 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 479:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 1751              		.loc 1 479 0
 1752 003e 134B     		ldr	r3, .L39
 1753 0040 1B78     		ldrb	r3, [r3]
 1754 0042 DBB2     		uxtb	r3, r3
 1755 0044 1A46     		mov	r2, r3
 1756 0046 134B     		ldr	r3, .L39+8
 1757 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1758 004a 104B     		ldr	r3, .L39
 1759 004c 1B78     		ldrb	r3, [r3]
 1760 004e DBB2     		uxtb	r3, r3
 1761 0050 DB00     		lsls	r3, r3, #3
 1762 0052 114A     		ldr	r2, .L39+12
 1763 0054 1344     		add	r3, r3, r2
 1764 0056 9BB2     		uxth	r3, r3
 1765 0058 1A46     		mov	r2, r3
 1766 005a 46F25551 		movw	r1, #25941
 1767 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 480:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 1768              		.loc 1 480 0
 1769 0062 0B4B     		ldr	r3, .L39+4
 1770 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1771 0066 094B     		ldr	r3, .L39
 1772 0068 1B78     		ldrb	r3, [r3]
 1773 006a DBB2     		uxtb	r3, r3
 1774 006c 1946     		mov	r1, r3
 1775 006e 094B     		ldr	r3, .L39+8
 1776 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1777 0072 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 41


 1778 0074 1046     		mov	r0, r2
 1779 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 481:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 1780              		.loc 1 481 0
 1781 007a 054B     		ldr	r3, .L39+4
 1782 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1783 007e 0121     		movs	r1, #1
 1784 0080 1846     		mov	r0, r3
 1785 0082 FFF7FEFF 		bl	CyDmaChEnable
 482:main.c        **** }
 1786              		.loc 1 482 0
 1787 0086 00BF     		nop
 1788 0088 80BD     		pop	{r7, pc}
 1789              	.L40:
 1790 008a 00BF     		.align	2
 1791              	.L39:
 1792 008c 00000000 		.word	currentBarBuffer
 1793 0090 00000000 		.word	rx2Channel
 1794 0094 00000000 		.word	rx2TD
 1795 0098 00000000 		.word	rxBufferBar
 1796              		.cfi_endproc
 1797              	.LFE72:
 1798              		.size	spis_2_ss, .-spis_2_ss
 1799              		.section	.text.spis_1_ss,"ax",%progbits
 1800              		.align	2
 1801              		.global	spis_1_ss
 1802              		.thumb
 1803              		.thumb_func
 1804              		.type	spis_1_ss, %function
 1805              	spis_1_ss:
 1806              	.LFB73:
 483:main.c        **** 
 484:main.c        **** CY_ISR(spis_1_ss)
 485:main.c        **** {
 1807              		.loc 1 485 0
 1808              		.cfi_startproc
 1809              		@ args = 0, pretend = 0, frame = 8
 1810              		@ frame_needed = 1, uses_anonymous_args = 0
 1811 0000 80B5     		push	{r7, lr}
 1812              		.cfi_def_cfa_offset 8
 1813              		.cfi_offset 7, -8
 1814              		.cfi_offset 14, -4
 1815 0002 82B0     		sub	sp, sp, #8
 1816              		.cfi_def_cfa_offset 16
 1817 0004 00AF     		add	r7, sp, #0
 1818              		.cfi_def_cfa_register 7
 486:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 1819              		.loc 1 486 0
 1820 0006 4F4B     		ldr	r3, .L45
 1821 0008 1B78     		ldrb	r3, [r3]
 1822 000a DBB2     		uxtb	r3, r3
 1823 000c 002B     		cmp	r3, #0
 1824 000e 0CBF     		ite	eq
 1825 0010 0123     		moveq	r3, #1
 1826 0012 0023     		movne	r3, #0
 1827 0014 DBB2     		uxtb	r3, r3
 1828 0016 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 42


 1829 0018 4A4B     		ldr	r3, .L45
 1830 001a 1A70     		strb	r2, [r3]
 487:main.c        **** 
 488:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][31] =
 1831              		.loc 1 488 0
 1832 001c 494B     		ldr	r3, .L45
 1833 001e 1B78     		ldrb	r3, [r3]
 1834 0020 DBB2     		uxtb	r3, r3
 1835 0022 002B     		cmp	r3, #0
 1836 0024 0CBF     		ite	eq
 1837 0026 0123     		moveq	r3, #1
 1838 0028 0023     		movne	r3, #0
 1839 002a DBB2     		uxtb	r3, r3
 1840 002c 464A     		ldr	r2, .L45+4
 1841 002e 5B01     		lsls	r3, r3, #5
 1842 0030 1344     		add	r3, r3, r2
 1843 0032 1B78     		ldrb	r3, [r3]
 1844 0034 DBB2     		uxtb	r3, r3
 1845 0036 FE2B     		cmp	r3, #254
 1846 0038 49D1     		bne	.L42
 1847              		.loc 1 488 0 is_stmt 0 discriminator 1
 1848 003a 424B     		ldr	r3, .L45
 1849 003c 1B78     		ldrb	r3, [r3]
 1850 003e DBB2     		uxtb	r3, r3
 1851 0040 002B     		cmp	r3, #0
 1852 0042 0CBF     		ite	eq
 1853 0044 0123     		moveq	r3, #1
 1854 0046 0023     		movne	r3, #0
 1855 0048 DBB2     		uxtb	r3, r3
 1856 004a 3F4A     		ldr	r2, .L45+4
 1857 004c 5B01     		lsls	r3, r3, #5
 1858 004e 1344     		add	r3, r3, r2
 1859 0050 1F33     		adds	r3, r3, #31
 1860 0052 1B78     		ldrb	r3, [r3]
 1861 0054 DBB2     		uxtb	r3, r3
 1862 0056 FD2B     		cmp	r3, #253
 1863 0058 39D1     		bne	.L42
 1864              	.LBB6:
 489:main.c        ****     {
 490:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 1865              		.loc 1 490 0 is_stmt 1
 1866 005a 0023     		movs	r3, #0
 1867 005c 7B60     		str	r3, [r7, #4]
 1868 005e 30E0     		b	.L43
 1869              	.L44:
 491:main.c        ****         {
 492:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 1870              		.loc 1 492 0 discriminator 3
 1871 0060 384B     		ldr	r3, .L45
 1872 0062 1B78     		ldrb	r3, [r3]
 1873 0064 DBB2     		uxtb	r3, r3
 1874 0066 002B     		cmp	r3, #0
 1875 0068 0CBF     		ite	eq
 1876 006a 0123     		moveq	r3, #1
 1877 006c 0023     		movne	r3, #0
 1878 006e DBB2     		uxtb	r3, r3
 1879 0070 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 43


 1880 0072 7B68     		ldr	r3, [r7, #4]
 1881 0074 5B00     		lsls	r3, r3, #1
 1882 0076 0133     		adds	r3, r3, #1
 1883 0078 3349     		ldr	r1, .L45+4
 1884 007a 5201     		lsls	r2, r2, #5
 1885 007c 0A44     		add	r2, r2, r1
 1886 007e 1344     		add	r3, r3, r2
 1887 0080 1B78     		ldrb	r3, [r3]
 1888 0082 DBB2     		uxtb	r3, r3
 1889 0084 9BB2     		uxth	r3, r3
 1890 0086 1B02     		lsls	r3, r3, #8
 1891 0088 9AB2     		uxth	r2, r3
 1892 008a 2E4B     		ldr	r3, .L45
 1893 008c 1B78     		ldrb	r3, [r3]
 1894 008e DBB2     		uxtb	r3, r3
 1895 0090 002B     		cmp	r3, #0
 1896 0092 0CBF     		ite	eq
 1897 0094 0123     		moveq	r3, #1
 1898 0096 0023     		movne	r3, #0
 1899 0098 DBB2     		uxtb	r3, r3
 1900 009a 1946     		mov	r1, r3
 1901 009c 7B68     		ldr	r3, [r7, #4]
 1902 009e 0133     		adds	r3, r3, #1
 1903 00a0 5B00     		lsls	r3, r3, #1
 1904 00a2 2948     		ldr	r0, .L45+4
 1905 00a4 4901     		lsls	r1, r1, #5
 1906 00a6 0144     		add	r1, r1, r0
 1907 00a8 0B44     		add	r3, r3, r1
 1908 00aa 1B78     		ldrb	r3, [r3]
 1909 00ac DBB2     		uxtb	r3, r3
 1910 00ae 9BB2     		uxth	r3, r3
 1911 00b0 1344     		add	r3, r3, r2
 1912 00b2 99B2     		uxth	r1, r3
 1913 00b4 254A     		ldr	r2, .L45+8
 1914 00b6 7B68     		ldr	r3, [r7, #4]
 1915 00b8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 490:main.c        ****         {
 1916              		.loc 1 490 0 discriminator 3
 1917 00bc 7B68     		ldr	r3, [r7, #4]
 1918 00be 0133     		adds	r3, r3, #1
 1919 00c0 7B60     		str	r3, [r7, #4]
 1920              	.L43:
 490:main.c        ****         {
 1921              		.loc 1 490 0 is_stmt 0 discriminator 1
 1922 00c2 234B     		ldr	r3, .L45+12
 1923 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1924 00c6 1A46     		mov	r2, r3
 1925 00c8 7B68     		ldr	r3, [r7, #4]
 1926 00ca 9A42     		cmp	r2, r3
 1927 00cc C8DC     		bgt	.L44
 1928              	.L42:
 1929              	.LBE6:
 493:main.c        ****         }
 494:main.c        ****     }
 495:main.c        ****     SPIS_1_ClearRxBuffer();
 1930              		.loc 1 495 0 is_stmt 1
 1931 00ce FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 44


 496:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 1932              		.loc 1 496 0
 1933 00d2 204B     		ldr	r3, .L45+16
 1934 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1935 00d6 1846     		mov	r0, r3
 1936 00d8 FFF7FEFF 		bl	CyDmaClearPendingDrq
 497:main.c        **** 
 498:main.c        ****     //set up the next DMA transaction
 499:main.c        **** 
 500:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 1937              		.loc 1 500 0
 1938 00dc 194B     		ldr	r3, .L45
 1939 00de 1B78     		ldrb	r3, [r3]
 1940 00e0 DBB2     		uxtb	r3, r3
 1941 00e2 1A46     		mov	r2, r3
 1942 00e4 1C4B     		ldr	r3, .L45+20
 1943 00e6 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1944 00e8 0223     		movs	r3, #2
 1945 00ea FE22     		movs	r2, #254
 1946 00ec 2021     		movs	r1, #32
 1947 00ee FFF7FEFF 		bl	CyDmaTdSetConfiguration
 501:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 1948              		.loc 1 501 0
 1949 00f2 144B     		ldr	r3, .L45
 1950 00f4 1B78     		ldrb	r3, [r3]
 1951 00f6 DBB2     		uxtb	r3, r3
 1952 00f8 1A46     		mov	r2, r3
 1953 00fa 174B     		ldr	r3, .L45+20
 1954 00fc 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1955 00fe 114B     		ldr	r3, .L45
 1956 0100 1B78     		ldrb	r3, [r3]
 1957 0102 DBB2     		uxtb	r3, r3
 1958 0104 5B01     		lsls	r3, r3, #5
 1959 0106 104A     		ldr	r2, .L45+4
 1960 0108 1344     		add	r3, r3, r2
 1961 010a 9BB2     		uxth	r3, r3
 1962 010c 1A46     		mov	r2, r3
 1963 010e 46F25741 		movw	r1, #25687
 1964 0112 FFF7FEFF 		bl	CyDmaTdSetAddress
 502:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 1965              		.loc 1 502 0
 1966 0116 0F4B     		ldr	r3, .L45+16
 1967 0118 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1968 011a 0A4B     		ldr	r3, .L45
 1969 011c 1B78     		ldrb	r3, [r3]
 1970 011e DBB2     		uxtb	r3, r3
 1971 0120 1946     		mov	r1, r3
 1972 0122 0D4B     		ldr	r3, .L45+20
 1973 0124 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1974 0126 1946     		mov	r1, r3
 1975 0128 1046     		mov	r0, r2
 1976 012a FFF7FEFF 		bl	CyDmaChSetInitialTd
 503:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 1977              		.loc 1 503 0
 1978 012e 094B     		ldr	r3, .L45+16
 1979 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1980 0132 0121     		movs	r1, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 45


 1981 0134 1846     		mov	r0, r3
 1982 0136 FFF7FEFF 		bl	CyDmaChEnable
 504:main.c        **** 
 505:main.c        **** }
 1983              		.loc 1 505 0
 1984 013a 00BF     		nop
 1985 013c 0837     		adds	r7, r7, #8
 1986              		.cfi_def_cfa_offset 8
 1987 013e BD46     		mov	sp, r7
 1988              		.cfi_def_cfa_register 13
 1989              		@ sp needed
 1990 0140 80BD     		pop	{r7, pc}
 1991              	.L46:
 1992 0142 00BF     		.align	2
 1993              	.L45:
 1994 0144 00000000 		.word	currentPluckBuffer
 1995 0148 00000000 		.word	rxBufferPluck
 1996 014c 00000000 		.word	strings
 1997 0150 00000000 		.word	numStrings
 1998 0154 00000000 		.word	rx1Channel
 1999 0158 00000000 		.word	rx1TD
 2000              		.cfi_endproc
 2001              	.LFE73:
 2002              		.size	spis_1_ss, .-spis_1_ss
 2003              		.section	.text.loadEEPROMdefaults,"ax",%progbits
 2004              		.align	2
 2005              		.global	loadEEPROMdefaults
 2006              		.thumb
 2007              		.thumb_func
 2008              		.type	loadEEPROMdefaults, %function
 2009              	loadEEPROMdefaults:
 2010              	.LFB74:
 506:main.c        **** 
 507:main.c        **** void loadEEPROMdefaults(void)
 508:main.c        **** {
 2011              		.loc 1 508 0
 2012              		.cfi_startproc
 2013              		@ args = 0, pretend = 0, frame = 0
 2014              		@ frame_needed = 1, uses_anonymous_args = 0
 2015 0000 80B5     		push	{r7, lr}
 2016              		.cfi_def_cfa_offset 8
 2017              		.cfi_offset 7, -8
 2018              		.cfi_offset 14, -4
 2019 0002 00AF     		add	r7, sp, #0
 2020              		.cfi_def_cfa_register 7
 509:main.c        ****     EEPROM_WriteByte(0, EEPROM_CURRENT_PRESET_OFFSET);
 2021              		.loc 1 509 0
 2022 0004 40F2D671 		movw	r1, #2006
 2023 0008 0020     		movs	r0, #0
 2024 000a FFF7FEFF 		bl	EEPROM_WriteByte
 510:main.c        ****     EEPROM_WriteByte(0, EEPROM_NECKS_OFFSET);
 2025              		.loc 1 510 0
 2026 000e 40F2E371 		movw	r1, #2019
 2027 0012 0020     		movs	r0, #0
 2028 0014 FFF7FEFF 		bl	EEPROM_WriteByte
 511:main.c        ****     EEPROM_WriteByte((int8_t)0, EEPROM_TRANSPOSE_OFFSET);
 2029              		.loc 1 511 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 46


 2030 0018 4FF4FB61 		mov	r1, #2008
 2031 001c 0020     		movs	r0, #0
 2032 001e FFF7FEFF 		bl	EEPROM_WriteByte
 512:main.c        ****     EEPROM_WriteByte((int8_t)0, EEPROM_TRANSPOSE_OFFSET+1);
 2033              		.loc 1 512 0
 2034 0022 40F2D971 		movw	r1, #2009
 2035 0026 0020     		movs	r0, #0
 2036 0028 FFF7FEFF 		bl	EEPROM_WriteByte
 513:main.c        ****     EEPROM_WriteByte(1, EEPROM_MIDI_SEND_OFFSET);
 2037              		.loc 1 513 0
 2038 002c 40F2DF71 		movw	r1, #2015
 2039 0030 0120     		movs	r0, #1
 2040 0032 FFF7FEFF 		bl	EEPROM_WriteByte
 514:main.c        ****     EEPROM_WriteByte(0,EEPROM_NECK_PRESETS_OFFSET);
 2041              		.loc 1 514 0
 2042 0036 40F2DC71 		movw	r1, #2012
 2043 003a 0020     		movs	r0, #0
 2044 003c FFF7FEFF 		bl	EEPROM_WriteByte
 515:main.c        ****     EEPROM_WriteByte(0,EEPROM_PEDALSUM_OFFSET);
 2045              		.loc 1 515 0
 2046 0040 40F2DE71 		movw	r1, #2014
 2047 0044 0020     		movs	r0, #0
 2048 0046 FFF7FEFF 		bl	EEPROM_WriteByte
 516:main.c        ****     EEPROM_WriteByte(64,EEPROM_DEADZONES_OFFSET);
 2049              		.loc 1 516 0
 2050 004a 40F2DB71 		movw	r1, #2011
 2051 004e 4020     		movs	r0, #64
 2052 0050 FFF7FEFF 		bl	EEPROM_WriteByte
 517:main.c        ****     EEPROM_WriteByte(0,EEPROM_OCTAVE_ACTION_OFFSET);
 2053              		.loc 1 517 0
 2054 0054 40F2DA71 		movw	r1, #2010
 2055 0058 0020     		movs	r0, #0
 2056 005a FFF7FEFF 		bl	EEPROM_WriteByte
 518:main.c        ****     EEPROM_WriteByte(114,EEPROM_STRING_REP_OFFSET);// (strings 3 and 8)
 2057              		.loc 1 518 0
 2058 005e 40F2D771 		movw	r1, #2007
 2059 0062 7220     		movs	r0, #114
 2060 0064 FFF7FEFF 		bl	EEPROM_WriteByte
 519:main.c        ****     EEPROM_WriteByte(0,EEPROM_DUAL_SLIDER_OFFSET);
 2061              		.loc 1 519 0
 2062 0068 40F2E271 		movw	r1, #2018
 2063 006c 0020     		movs	r0, #0
 2064 006e FFF7FEFF 		bl	EEPROM_WriteByte
 520:main.c        ****     EEPROM_WriteByte(64,EEPROM_VOLUME_OFFSET);
 2065              		.loc 1 520 0
 2066 0072 40F2E471 		movw	r1, #2020
 2067 0076 4020     		movs	r0, #64
 2068 0078 FFF7FEFF 		bl	EEPROM_WriteByte
 521:main.c        **** }
 2069              		.loc 1 521 0
 2070 007c 00BF     		nop
 2071 007e 80BD     		pop	{r7, pc}
 2072              		.cfi_endproc
 2073              	.LFE74:
 2074              		.size	loadEEPROMdefaults, .-loadEEPROMdefaults
 2075              		.section	.rodata
 2076              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 47


 2077              	.LC0:
 2078 0400 2000     		.ascii	" \000"
 2079              		.global	__aeabi_f2iz
 2080              		.global	__aeabi_fcmpgt
 2081              		.global	__aeabi_fcmplt
 2082 0402 0000     		.align	2
 2083              	.LC1:
 2084 0404 4649524D 		.ascii	"FIRMWARE   \000"
 2084      57415245 
 2084      20202000 
 2085              		.align	2
 2086              	.LC2:
 2087 0410 55504441 		.ascii	"UPDATE     \000"
 2087      54452020 
 2087      20202000 
 2088              		.align	2
 2089              	.LC3:
 2090 041c 20202020 		.ascii	"           \000"
 2090      20202020 
 2090      20202000 
 2091              		.section	.text.main,"ax",%progbits
 2092              		.align	2
 2093              		.global	main
 2094              		.thumb
 2095              		.thumb_func
 2096              		.type	main, %function
 2097              	main:
 2098              	.LFB75:
 522:main.c        **** 
 523:main.c        **** 
 524:main.c        **** int main(void)
 525:main.c        **** {
 2099              		.loc 1 525 0
 2100              		.cfi_startproc
 2101              		@ args = 0, pretend = 0, frame = 216
 2102              		@ frame_needed = 1, uses_anonymous_args = 0
 2103 0000 B0B5     		push	{r4, r5, r7, lr}
 2104              		.cfi_def_cfa_offset 16
 2105              		.cfi_offset 4, -16
 2106              		.cfi_offset 5, -12
 2107              		.cfi_offset 7, -8
 2108              		.cfi_offset 14, -4
 2109 0002 B8B0     		sub	sp, sp, #224
 2110              		.cfi_def_cfa_offset 240
 2111 0004 02AF     		add	r7, sp, #8
 2112              		.cfi_def_cfa 7, 232
 526:main.c        ****     
 527:main.c        **** 	CYGlobalIntEnable; 
 2113              		.loc 1 527 0
 2114              		.syntax unified
 2115              	@ 527 "main.c" 1
 2116 0006 62B6     		CPSIE   i
 2117              	@ 0 "" 2
 528:main.c        ****     EEPROM_Start();
 2118              		.loc 1 528 0
 2119              		.thumb
 2120              		.syntax unified
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 48


 2121 0008 FFF7FEFF 		bl	EEPROM_Start
 529:main.c        ****      #ifdef BOOTLOAD_STYLE
 530:main.c        ****      //since we sucessfully booted this firmware, set it to be the default until the brain chip get
 531:main.c        ****     Bootloadable_SET_RUN_TYPE(Bootloadable_SCHEDULE_BTLDB);
 2122              		.loc 1 531 0
 2123 000c A64B     		ldr	r3, .L217
 2124 000e 8022     		movs	r2, #128
 2125 0010 1A70     		strb	r2, [r3]
 532:main.c        ****     #endif
 533:main.c        **** 
 534:main.c        ****     
 535:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 2126              		.loc 1 535 0
 2127 0012 A64B     		ldr	r3, .L217+4
 2128 0014 1846     		mov	r0, r3
 2129 0016 FFF7FEFF 		bl	Em_EEPROM_Init
 2130 001a 0346     		mov	r3, r0
 2131 001c 1A46     		mov	r2, r3
 2132 001e A44B     		ldr	r3, .L217+8
 2133 0020 1A70     		strb	r2, [r3]
 536:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 537:main.c        ****     {
 538:main.c        ****        // HandleError();
 539:main.c        ****     }
 540:main.c        ****     sysexMessageStartPoints[sysexMessageStartPointsWritePosition] = 0;
 2134              		.loc 1 540 0
 2135 0022 A44B     		ldr	r3, .L217+12
 2136 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2137 0026 1946     		mov	r1, r3
 2138 0028 A34B     		ldr	r3, .L217+16
 2139 002a 0022     		movs	r2, #0
 2140 002c 43F82120 		str	r2, [r3, r1, lsl #2]
 541:main.c        ****     I2C_1_Start();  
 2141              		.loc 1 541 0
 2142 0030 FFF7FEFF 		bl	I2C_1_Start
 542:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 2143              		.loc 1 542 0
 2144 0034 0120     		movs	r0, #1
 2145 0036 FFF7FEFF 		bl	USB_SetPowerStatus
 543:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 2146              		.loc 1 543 0
 2147 003a A048     		ldr	r0, .L217+20
 2148 003c FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 544:main.c        ****     
 545:main.c        ****     CyDelay(4000);
 2149              		.loc 1 545 0
 2150 0040 4FF47A60 		mov	r0, #4000
 2151 0044 FFF7FEFF 		bl	CyDelay
 546:main.c        ****     //read from eeprom all the stored user settings
 547:main.c        ****     
 548:main.c        ****     //check if this is the first time it's ever booted up, in which case there will be no copedents
 549:main.c        ****     if (EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET) == 0)
 2152              		.loc 1 549 0
 2153 0048 0020     		movs	r0, #0
 2154 004a FFF7FEFF 		bl	EEPROM_ReadByte
 2155 004e 0346     		mov	r3, r0
 2156 0050 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 49


 2157 0052 01D1     		bne	.L49
 550:main.c        ****     {
 551:main.c        ****         loadEEPROMdefaults();
 2158              		.loc 1 551 0
 2159 0054 FFF7FEFF 		bl	loadEEPROMdefaults
 2160              	.L49:
 552:main.c        ****         
 553:main.c        ****     }
 554:main.c        ****     patchNum = EEPROM_ReadByte(EEPROM_CURRENT_PRESET_OFFSET);
 2161              		.loc 1 554 0
 2162 0058 40F2D670 		movw	r0, #2006
 2163 005c FFF7FEFF 		bl	EEPROM_ReadByte
 2164 0060 0346     		mov	r3, r0
 2165 0062 1A46     		mov	r2, r3
 2166 0064 964B     		ldr	r3, .L217+24
 2167 0066 1A70     		strb	r2, [r3]
 555:main.c        ****     neckByte = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 2168              		.loc 1 555 0
 2169 0068 40F2E370 		movw	r0, #2019
 2170 006c FFF7FEFF 		bl	EEPROM_ReadByte
 2171 0070 0346     		mov	r3, r0
 2172 0072 1A46     		mov	r2, r3
 2173 0074 934B     		ldr	r3, .L217+28
 2174 0076 1A70     		strb	r2, [r3]
 556:main.c        ****     necks[0] = (neckByte >> 5) & 7;
 2175              		.loc 1 556 0
 2176 0078 924B     		ldr	r3, .L217+28
 2177 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2178 007c 5B09     		lsrs	r3, r3, #5
 2179 007e DAB2     		uxtb	r2, r3
 2180 0080 914B     		ldr	r3, .L217+32
 2181 0082 1A70     		strb	r2, [r3]
 557:main.c        ****     necks[1] = (neckByte >> 2) & 7;
 2182              		.loc 1 557 0
 2183 0084 8F4B     		ldr	r3, .L217+28
 2184 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2185 0088 9B08     		lsrs	r3, r3, #2
 2186 008a DBB2     		uxtb	r3, r3
 2187 008c 03F00703 		and	r3, r3, #7
 2188 0090 DAB2     		uxtb	r2, r3
 2189 0092 8D4B     		ldr	r3, .L217+32
 2190 0094 5A70     		strb	r2, [r3, #1]
 558:main.c        ****     currentNeck = neckByte & 1;
 2191              		.loc 1 558 0
 2192 0096 8B4B     		ldr	r3, .L217+28
 2193 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2194 009a 03F00103 		and	r3, r3, #1
 2195 009e DAB2     		uxtb	r2, r3
 2196 00a0 8A4B     		ldr	r3, .L217+36
 2197 00a2 1A70     		strb	r2, [r3]
 559:main.c        ****     transposeSemitones = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET);
 2198              		.loc 1 559 0
 2199 00a4 4FF4FB60 		mov	r0, #2008
 2200 00a8 FFF7FEFF 		bl	EEPROM_ReadByte
 2201 00ac 0346     		mov	r3, r0
 2202 00ae 5AB2     		sxtb	r2, r3
 2203 00b0 874B     		ldr	r3, .L217+40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 50


 2204 00b2 1A70     		strb	r2, [r3]
 560:main.c        ****     transposeCents = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET + 1);
 2205              		.loc 1 560 0
 2206 00b4 40F2D970 		movw	r0, #2009
 2207 00b8 FFF7FEFF 		bl	EEPROM_ReadByte
 2208 00bc 0346     		mov	r3, r0
 2209 00be 5AB2     		sxtb	r2, r3
 2210 00c0 844B     		ldr	r3, .L217+44
 2211 00c2 1A70     		strb	r2, [r3]
 561:main.c        ****     transposeFloat = ((float)transposeSemitones) + (((float)transposeCents) * 0.01f);
 2212              		.loc 1 561 0
 2213 00c4 824B     		ldr	r3, .L217+40
 2214 00c6 93F90030 		ldrsb	r3, [r3]
 2215 00ca 1846     		mov	r0, r3
 2216 00cc FFF7FEFF 		bl	__aeabi_i2f
 2217 00d0 0446     		mov	r4, r0
 2218 00d2 804B     		ldr	r3, .L217+44
 2219 00d4 93F90030 		ldrsb	r3, [r3]
 2220 00d8 1846     		mov	r0, r3
 2221 00da FFF7FEFF 		bl	__aeabi_i2f
 2222 00de 0346     		mov	r3, r0
 2223 00e0 7D49     		ldr	r1, .L217+48
 2224 00e2 1846     		mov	r0, r3
 2225 00e4 FFF7FEFF 		bl	__aeabi_fmul
 2226 00e8 0346     		mov	r3, r0
 2227 00ea 1946     		mov	r1, r3
 2228 00ec 2046     		mov	r0, r4
 2229 00ee FFF7FEFF 		bl	__aeabi_fadd
 2230 00f2 0346     		mov	r3, r0
 2231 00f4 1A46     		mov	r2, r3
 2232 00f6 794B     		ldr	r3, .L217+52
 2233 00f8 1A60     		str	r2, [r3]	@ float
 562:main.c        ****     midiSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&1;
 2234              		.loc 1 562 0
 2235 00fa 40F2DF70 		movw	r0, #2015
 2236 00fe FFF7FEFF 		bl	EEPROM_ReadByte
 2237 0102 0346     		mov	r3, r0
 2238 0104 03F00103 		and	r3, r3, #1
 2239 0108 DAB2     		uxtb	r2, r3
 2240 010a 754B     		ldr	r3, .L217+56
 2241 010c 1A70     		strb	r2, [r3]
 563:main.c        ****     midiBarSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&(1<<1);
 2242              		.loc 1 563 0
 2243 010e 40F2DF70 		movw	r0, #2015
 2244 0112 FFF7FEFF 		bl	EEPROM_ReadByte
 2245 0116 0346     		mov	r3, r0
 2246 0118 03F00203 		and	r3, r3, #2
 2247 011c DAB2     		uxtb	r2, r3
 2248 011e 714B     		ldr	r3, .L217+60
 2249 0120 1A70     		strb	r2, [r3]
 564:main.c        ****     neckPreset[0] =  EEPROM_ReadByte(EEPROM_NECK_PRESETS_OFFSET);
 2250              		.loc 1 564 0
 2251 0122 40F2DC70 		movw	r0, #2012
 2252 0126 FFF7FEFF 		bl	EEPROM_ReadByte
 2253 012a 0346     		mov	r3, r0
 2254 012c 1A46     		mov	r2, r3
 2255 012e 6E4B     		ldr	r3, .L217+64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 51


 2256 0130 1A70     		strb	r2, [r3]
 565:main.c        ****     neckPreset[1] =  EEPROM_ReadByte(EEPROM_NECK_PRESETS_OFFSET+1);
 2257              		.loc 1 565 0
 2258 0132 40F2DD70 		movw	r0, #2013
 2259 0136 FFF7FEFF 		bl	EEPROM_ReadByte
 2260 013a 0346     		mov	r3, r0
 2261 013c 1A46     		mov	r2, r3
 2262 013e 6A4B     		ldr	r3, .L217+64
 2263 0140 5A70     		strb	r2, [r3, #1]
 566:main.c        ****     traditionalPedalAdd = EEPROM_ReadByte(EEPROM_PEDALSUM_OFFSET) & 1;
 2264              		.loc 1 566 0
 2265 0142 40F2DE70 		movw	r0, #2014
 2266 0146 FFF7FEFF 		bl	EEPROM_ReadByte
 2267 014a 0346     		mov	r3, r0
 2268 014c 03F00103 		and	r3, r3, #1
 2269 0150 DAB2     		uxtb	r2, r3
 2270 0152 664B     		ldr	r3, .L217+68
 2271 0154 1A70     		strb	r2, [r3]
 567:main.c        ****     deadZone = EEPROM_ReadByte(EEPROM_DEADZONES_OFFSET);
 2272              		.loc 1 567 0
 2273 0156 40F2DB70 		movw	r0, #2011
 2274 015a FFF7FEFF 		bl	EEPROM_ReadByte
 2275 015e 0346     		mov	r3, r0
 2276 0160 1A46     		mov	r2, r3
 2277 0162 634B     		ldr	r3, .L217+72
 2278 0164 1A70     		strb	r2, [r3]
 568:main.c        ****     octaveAction = EEPROM_ReadByte(EEPROM_OCTAVE_ACTION_OFFSET);
 2279              		.loc 1 568 0
 2280 0166 40F2DA70 		movw	r0, #2010
 2281 016a FFF7FEFF 		bl	EEPROM_ReadByte
 2282 016e 0346     		mov	r3, r0
 2283 0170 1A46     		mov	r2, r3
 2284 0172 604B     		ldr	r3, .L217+76
 2285 0174 1A70     		strb	r2, [r3]
 569:main.c        ****     stringRepresentation[0] = (EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET)>>4) & 15; //first 4 bits o
 2286              		.loc 1 569 0
 2287 0176 40F2D770 		movw	r0, #2007
 2288 017a FFF7FEFF 		bl	EEPROM_ReadByte
 2289 017e 0346     		mov	r3, r0
 2290 0180 1B09     		lsrs	r3, r3, #4
 2291 0182 DAB2     		uxtb	r2, r3
 2292 0184 5C4B     		ldr	r3, .L217+80
 2293 0186 1A70     		strb	r2, [r3]
 570:main.c        ****     stringRepresentation[1] = EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET) & 15;//last 4 bits of the b
 2294              		.loc 1 570 0
 2295 0188 40F2D770 		movw	r0, #2007
 2296 018c FFF7FEFF 		bl	EEPROM_ReadByte
 2297 0190 0346     		mov	r3, r0
 2298 0192 03F00F03 		and	r3, r3, #15
 2299 0196 DAB2     		uxtb	r2, r3
 2300 0198 574B     		ldr	r3, .L217+80
 2301 019a 5A70     		strb	r2, [r3, #1]
 571:main.c        ****     calculateStringRepDivider();
 2302              		.loc 1 571 0
 2303 019c FFF7FEFF 		bl	calculateStringRepDivider
 572:main.c        ****     dualSlider = EEPROM_ReadByte(EEPROM_DUAL_SLIDER_OFFSET) & 1;
 2304              		.loc 1 572 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 52


 2305 01a0 40F2E270 		movw	r0, #2018
 2306 01a4 FFF7FEFF 		bl	EEPROM_ReadByte
 2307 01a8 0346     		mov	r3, r0
 2308 01aa 03F00103 		and	r3, r3, #1
 2309 01ae DAB2     		uxtb	r2, r3
 2310 01b0 524B     		ldr	r3, .L217+84
 2311 01b2 1A70     		strb	r2, [r3]
 573:main.c        ****     volumeInt = (int8_t) EEPROM_ReadByte(EEPROM_VOLUME_OFFSET);
 2312              		.loc 1 573 0
 2313 01b4 40F2E470 		movw	r0, #2020
 2314 01b8 FFF7FEFF 		bl	EEPROM_ReadByte
 2315 01bc 0346     		mov	r3, r0
 2316 01be 5AB2     		sxtb	r2, r3
 2317 01c0 4F4B     		ldr	r3, .L217+88
 2318 01c2 1A70     		strb	r2, [r3]
 574:main.c        ****     uint16_t pedal_inverted_byte = (EEPROM_ReadByte(EEPROM_PEDAL_INVERTED_OFFSET) << 8) + EEPROM_Re
 2319              		.loc 1 574 0
 2320 01c4 4FF4FC60 		mov	r0, #2016
 2321 01c8 FFF7FEFF 		bl	EEPROM_ReadByte
 2322 01cc 0346     		mov	r3, r0
 2323 01ce 9BB2     		uxth	r3, r3
 2324 01d0 1B02     		lsls	r3, r3, #8
 2325 01d2 9CB2     		uxth	r4, r3
 2326 01d4 40F2E170 		movw	r0, #2017
 2327 01d8 FFF7FEFF 		bl	EEPROM_ReadByte
 2328 01dc 0346     		mov	r3, r0
 2329 01de 9BB2     		uxth	r3, r3
 2330 01e0 2344     		add	r3, r3, r4
 2331 01e2 A7F84630 		strh	r3, [r7, #70]	@ movhi
 2332              	.LBB7:
 575:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2333              		.loc 1 575 0
 2334 01e6 0023     		movs	r3, #0
 2335 01e8 C7F8D430 		str	r3, [r7, #212]
 2336 01ec 16E0     		b	.L50
 2337              	.L51:
 576:main.c        ****     {
 577:main.c        ****         pedal_inverted[i] = pedal_inverted_byte & (1<<i);
 2338              		.loc 1 577 0 discriminator 3
 2339 01ee B7F84630 		ldrh	r3, [r7, #70]	@ movhi
 2340 01f2 5AB2     		sxtb	r2, r3
 2341 01f4 0121     		movs	r1, #1
 2342 01f6 D7F8D430 		ldr	r3, [r7, #212]
 2343 01fa 01FA03F3 		lsl	r3, r1, r3
 2344 01fe 5BB2     		sxtb	r3, r3
 2345 0200 1340     		ands	r3, r3, r2
 2346 0202 5BB2     		sxtb	r3, r3
 2347 0204 D9B2     		uxtb	r1, r3
 2348 0206 3F4A     		ldr	r2, .L217+92
 2349 0208 D7F8D430 		ldr	r3, [r7, #212]
 2350 020c 1344     		add	r3, r3, r2
 2351 020e 0A46     		mov	r2, r1
 2352 0210 1A70     		strb	r2, [r3]
 575:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2353              		.loc 1 575 0 discriminator 3
 2354 0212 D7F8D430 		ldr	r3, [r7, #212]
 2355 0216 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 53


 2356 0218 C7F8D430 		str	r3, [r7, #212]
 2357              	.L50:
 575:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2358              		.loc 1 575 0 is_stmt 0 discriminator 1
 2359 021c D7F8D430 		ldr	r3, [r7, #212]
 2360 0220 092B     		cmp	r3, #9
 2361 0222 E4DD     		ble	.L51
 2362              	.LBE7:
 2363              	.LBB8:
 578:main.c        ****     }
 579:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 2364              		.loc 1 579 0 is_stmt 1
 2365 0224 0023     		movs	r3, #0
 2366 0226 C7F8D030 		str	r3, [r7, #208]
 2367 022a E6E0     		b	.L52
 2368              	.L59:
 2369              	.LBB9:
 580:main.c        ****     {
 581:main.c        ****         for (int letter = 0; letter < COPEDENT_NAME_LENGTH_IN_BYTES; letter++)
 2370              		.loc 1 581 0
 2371 022c 0023     		movs	r3, #0
 2372 022e C7F8CC30 		str	r3, [r7, #204]
 2373 0232 25E0     		b	.L53
 2374              	.L54:
 582:main.c        ****         {
 583:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 2375              		.loc 1 583 0 discriminator 3
 2376 0234 D7F8D030 		ldr	r3, [r7, #208]
 2377 0238 9BB2     		uxth	r3, r3
 2378 023a 1A46     		mov	r2, r3	@ movhi
 2379 023c 1201     		lsls	r2, r2, #4
 2380 023e 1A44     		add	r2, r2, r3
 2381 0240 D200     		lsls	r2, r2, #3
 2382 0242 1344     		add	r3, r3, r2
 2383 0244 5B00     		lsls	r3, r3, #1
 2384 0246 9AB2     		uxth	r2, r3
 2385 0248 D7F8CC30 		ldr	r3, [r7, #204]
 2386 024c 9BB2     		uxth	r3, r3
 2387 024e 1344     		add	r3, r3, r2
 2388 0250 9BB2     		uxth	r3, r3
 2389 0252 1846     		mov	r0, r3
 2390 0254 FFF7FEFF 		bl	EEPROM_ReadByte
 2391 0258 0346     		mov	r3, r0
 2392 025a 1846     		mov	r0, r3
 2393 025c 2A49     		ldr	r1, .L217+96
 2394 025e D7F8D020 		ldr	r2, [r7, #208]
 2395 0262 1346     		mov	r3, r2
 2396 0264 9B00     		lsls	r3, r3, #2
 2397 0266 1344     		add	r3, r3, r2
 2398 0268 5B00     		lsls	r3, r3, #1
 2399 026a CA18     		adds	r2, r1, r3
 2400 026c D7F8CC30 		ldr	r3, [r7, #204]
 2401 0270 1344     		add	r3, r3, r2
 2402 0272 0246     		mov	r2, r0
 2403 0274 1A70     		strb	r2, [r3]
 581:main.c        ****         {
 2404              		.loc 1 581 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 54


 2405 0276 D7F8CC30 		ldr	r3, [r7, #204]
 2406 027a 0133     		adds	r3, r3, #1
 2407 027c C7F8CC30 		str	r3, [r7, #204]
 2408              	.L53:
 581:main.c        ****         {
 2409              		.loc 1 581 0 is_stmt 0 discriminator 1
 2410 0280 D7F8CC30 		ldr	r3, [r7, #204]
 2411 0284 092B     		cmp	r3, #9
 2412 0286 D5DD     		ble	.L54
 2413              	.LBE9:
 2414              	.LBB10:
 584:main.c        ****         }
 585:main.c        ****         for (int i = 0; i < 11; i++)
 2415              		.loc 1 585 0 is_stmt 1
 2416 0288 0023     		movs	r3, #0
 2417 028a C7F8C830 		str	r3, [r7, #200]
 2418 028e AAE0     		b	.L55
 2419              	.L58:
 2420              	.LBB11:
 586:main.c        ****     	{
 587:main.c        ****     		int pedalStartLoc = (i*24);
 2421              		.loc 1 587 0
 2422 0290 D7F8C820 		ldr	r2, [r7, #200]
 2423 0294 1346     		mov	r3, r2
 2424 0296 5B00     		lsls	r3, r3, #1
 2425 0298 1344     		add	r3, r3, r2
 2426 029a DB00     		lsls	r3, r3, #3
 2427 029c 3B64     		str	r3, [r7, #64]
 2428              	.LBB12:
 588:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 2429              		.loc 1 588 0
 2430 029e 0023     		movs	r3, #0
 2431 02a0 C7F8C430 		str	r3, [r7, #196]
 2432 02a4 96E0     		b	.L56
 2433              	.L218:
 2434 02a6 00BF     		.align	2
 2435              	.L217:
 2436 02a8 FA460040 		.word	1073759994
 2437 02ac 00000000 		.word	Em_EEPROM_em_EepromStorage
 2438 02b0 00000000 		.word	eepromReturnValue
 2439 02b4 00000000 		.word	sysexMessageStartPointsWritePosition
 2440 02b8 00000000 		.word	sysexMessageStartPoints
 2441 02bc 00000000 		.word	Vbus_function
 2442 02c0 00000000 		.word	patchNum
 2443 02c4 00000000 		.word	neckByte
 2444 02c8 00000000 		.word	necks
 2445 02cc 00000000 		.word	currentNeck
 2446 02d0 00000000 		.word	transposeSemitones
 2447 02d4 00000000 		.word	transposeCents
 2448 02d8 0AD7233C 		.word	1008981770
 2449 02dc 00000000 		.word	transposeFloat
 2450 02e0 00000000 		.word	midiSendOn
 2451 02e4 00000000 		.word	midiBarSendOn
 2452 02e8 00000000 		.word	neckPreset
 2453 02ec 00000000 		.word	traditionalPedalAdd
 2454 02f0 00000000 		.word	deadZone
 2455 02f4 00000000 		.word	octaveAction
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 55


 2456 02f8 00000000 		.word	stringRepresentation
 2457 02fc 00000000 		.word	dualSlider
 2458 0300 00000000 		.word	volumeInt
 2459 0304 00000000 		.word	pedal_inverted
 2460 0308 00000000 		.word	copedentNamesArray
 2461              	.L57:
 2462              	.LBB13:
 589:main.c        ****     		{
 590:main.c        ****                 
 591:main.c        ****                 int stringStartLoc = (j*2);
 2463              		.loc 1 591 0 discriminator 3
 2464 030c D7F8C430 		ldr	r3, [r7, #196]
 2465 0310 5B00     		lsls	r3, r3, #1
 2466 0312 FB63     		str	r3, [r7, #60]
 592:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 2467              		.loc 1 592 0 discriminator 3
 2468 0314 FB6B     		ldr	r3, [r7, #60]
 2469 0316 9AB2     		uxth	r2, r3
 2470 0318 3B6C     		ldr	r3, [r7, #64]
 2471 031a 9BB2     		uxth	r3, r3
 2472 031c 1344     		add	r3, r3, r2
 2473 031e 9AB2     		uxth	r2, r3
 2474 0320 D7F8D030 		ldr	r3, [r7, #208]
 2475 0324 9BB2     		uxth	r3, r3
 2476 0326 1946     		mov	r1, r3	@ movhi
 2477 0328 0901     		lsls	r1, r1, #4
 2478 032a 1944     		add	r1, r1, r3
 2479 032c C900     		lsls	r1, r1, #3
 2480 032e 0B44     		add	r3, r3, r1
 2481 0330 5B00     		lsls	r3, r3, #1
 2482 0332 9BB2     		uxth	r3, r3
 2483 0334 1344     		add	r3, r3, r2
 2484 0336 9BB2     		uxth	r3, r3
 2485 0338 0A33     		adds	r3, r3, #10
 2486 033a 9BB2     		uxth	r3, r3
 2487 033c 1846     		mov	r0, r3
 2488 033e FFF7FEFF 		bl	EEPROM_ReadByte
 2489 0342 0346     		mov	r3, r0
 2490 0344 7B87     		strh	r3, [r7, #58]	@ movhi
 593:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 2491              		.loc 1 593 0 discriminator 3
 2492 0346 FB6B     		ldr	r3, [r7, #60]
 2493 0348 9AB2     		uxth	r2, r3
 2494 034a 3B6C     		ldr	r3, [r7, #64]
 2495 034c 9BB2     		uxth	r3, r3
 2496 034e 1344     		add	r3, r3, r2
 2497 0350 9AB2     		uxth	r2, r3
 2498 0352 D7F8D030 		ldr	r3, [r7, #208]
 2499 0356 9BB2     		uxth	r3, r3
 2500 0358 1946     		mov	r1, r3	@ movhi
 2501 035a 0901     		lsls	r1, r1, #4
 2502 035c 1944     		add	r1, r1, r3
 2503 035e C900     		lsls	r1, r1, #3
 2504 0360 0B44     		add	r3, r3, r1
 2505 0362 5B00     		lsls	r3, r3, #1
 2506 0364 9BB2     		uxth	r3, r3
 2507 0366 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 56


 2508 0368 9BB2     		uxth	r3, r3
 2509 036a 0B33     		adds	r3, r3, #11
 2510 036c 9BB2     		uxth	r3, r3
 2511 036e 1846     		mov	r0, r3
 2512 0370 FFF7FEFF 		bl	EEPROM_ReadByte
 2513 0374 0346     		mov	r3, r0
 2514 0376 3B87     		strh	r3, [r7, #56]	@ movhi
 594:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 2515              		.loc 1 594 0 discriminator 3
 2516 0378 7B8F     		ldrh	r3, [r7, #58]
 2517 037a 1A02     		lsls	r2, r3, #8
 2518 037c 3B8F     		ldrh	r3, [r7, #56]
 2519 037e 1344     		add	r3, r3, r2
 2520 0380 1846     		mov	r0, r3
 2521 0382 FFF7FEFF 		bl	__aeabi_i2f
 2522 0386 0346     		mov	r3, r0
 2523 0388 4FF06E51 		mov	r1, #998244352
 2524 038c 1846     		mov	r0, r3
 2525 038e FFF7FEFF 		bl	__aeabi_fmul
 2526 0392 0346     		mov	r3, r0
 2527 0394 4FF08641 		mov	r1, #1124073472
 2528 0398 1846     		mov	r0, r3
 2529 039a FFF7FEFF 		bl	__aeabi_fsub
 2530 039e 0346     		mov	r3, r0
 2531 03a0 1C46     		mov	r4, r3
 2532 03a2 9548     		ldr	r0, .L219
 2533 03a4 D7F8C830 		ldr	r3, [r7, #200]
 2534 03a8 D7F8D010 		ldr	r1, [r7, #208]
 2535 03ac 1A46     		mov	r2, r3
 2536 03ae 5200     		lsls	r2, r2, #1
 2537 03b0 1A44     		add	r2, r2, r3
 2538 03b2 9300     		lsls	r3, r2, #2
 2539 03b4 1A46     		mov	r2, r3
 2540 03b6 0B46     		mov	r3, r1
 2541 03b8 5B01     		lsls	r3, r3, #5
 2542 03ba 0B44     		add	r3, r3, r1
 2543 03bc 9B00     		lsls	r3, r3, #2
 2544 03be 1A44     		add	r2, r2, r3
 2545 03c0 D7F8C430 		ldr	r3, [r7, #196]
 2546 03c4 1344     		add	r3, r3, r2
 2547 03c6 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 2548              	.LBE13:
 588:main.c        ****     		{
 2549              		.loc 1 588 0 discriminator 3
 2550 03ca D7F8C430 		ldr	r3, [r7, #196]
 2551 03ce 0133     		adds	r3, r3, #1
 2552 03d0 C7F8C430 		str	r3, [r7, #196]
 2553              	.L56:
 588:main.c        ****     		{
 2554              		.loc 1 588 0 is_stmt 0 discriminator 1
 2555 03d4 D7F8C430 		ldr	r3, [r7, #196]
 2556 03d8 0B2B     		cmp	r3, #11
 2557 03da 97DD     		ble	.L57
 2558              	.LBE12:
 2559              	.LBE11:
 585:main.c        ****     	{
 2560              		.loc 1 585 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 57


 2561 03dc D7F8C830 		ldr	r3, [r7, #200]
 2562 03e0 0133     		adds	r3, r3, #1
 2563 03e2 C7F8C830 		str	r3, [r7, #200]
 2564              	.L55:
 585:main.c        ****     	{
 2565              		.loc 1 585 0 is_stmt 0 discriminator 1
 2566 03e6 D7F8C830 		ldr	r3, [r7, #200]
 2567 03ea 0A2B     		cmp	r3, #10
 2568 03ec 7FF750AF 		ble	.L58
 2569              	.LBE10:
 579:main.c        ****     {
 2570              		.loc 1 579 0 is_stmt 1 discriminator 2
 2571 03f0 D7F8D030 		ldr	r3, [r7, #208]
 2572 03f4 0133     		adds	r3, r3, #1
 2573 03f6 C7F8D030 		str	r3, [r7, #208]
 2574              	.L52:
 579:main.c        ****     {
 2575              		.loc 1 579 0 is_stmt 0 discriminator 1
 2576 03fa D7F8D030 		ldr	r3, [r7, #208]
 2577 03fe 062B     		cmp	r3, #6
 2578 0400 7FF714AF 		ble	.L59
 2579              	.LBE8:
 2580              	.LBB14:
 595:main.c        ****             }
 596:main.c        ****     	}
 597:main.c        ****     }
 598:main.c        **** 
 599:main.c        ****     
 600:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2581              		.loc 1 600 0 is_stmt 1
 2582 0404 0023     		movs	r3, #0
 2583 0406 C7F8C030 		str	r3, [r7, #192]
 2584 040a 49E0     		b	.L60
 2585              	.L61:
 601:main.c        ****     {
 602:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_R
 2586              		.loc 1 602 0 discriminator 3
 2587 040c D7F8C030 		ldr	r3, [r7, #192]
 2588 0410 9BB2     		uxth	r3, r3
 2589 0412 9B00     		lsls	r3, r3, #2
 2590 0414 9BB2     		uxth	r3, r3
 2591 0416 03F27E73 		addw	r3, r3, #1918
 2592 041a 9BB2     		uxth	r3, r3
 2593 041c 1846     		mov	r0, r3
 2594 041e FFF7FEFF 		bl	EEPROM_ReadByte
 2595 0422 0346     		mov	r3, r0
 2596 0424 9BB2     		uxth	r3, r3
 2597 0426 1B02     		lsls	r3, r3, #8
 2598 0428 9CB2     		uxth	r4, r3
 2599 042a D7F8C030 		ldr	r3, [r7, #192]
 2600 042e 9BB2     		uxth	r3, r3
 2601 0430 9B00     		lsls	r3, r3, #2
 2602 0432 9BB2     		uxth	r3, r3
 2603 0434 03F27F73 		addw	r3, r3, #1919
 2604 0438 9BB2     		uxth	r3, r3
 2605 043a 1846     		mov	r0, r3
 2606 043c FFF7FEFF 		bl	EEPROM_ReadByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 58


 2607 0440 0346     		mov	r3, r0
 2608 0442 9BB2     		uxth	r3, r3
 2609 0444 2344     		add	r3, r3, r4
 2610 0446 99B2     		uxth	r1, r3
 2611 0448 6C4A     		ldr	r2, .L219+4
 2612 044a D7F8C030 		ldr	r3, [r7, #192]
 2613 044e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 603:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (E
 2614              		.loc 1 603 0 discriminator 3
 2615 0452 D7F8C030 		ldr	r3, [r7, #192]
 2616 0456 03F5F073 		add	r3, r3, #480
 2617 045a 9BB2     		uxth	r3, r3
 2618 045c 9B00     		lsls	r3, r3, #2
 2619 045e 9BB2     		uxth	r3, r3
 2620 0460 1846     		mov	r0, r3
 2621 0462 FFF7FEFF 		bl	EEPROM_ReadByte
 2622 0466 0346     		mov	r3, r0
 2623 0468 9BB2     		uxth	r3, r3
 2624 046a 1B02     		lsls	r3, r3, #8
 2625 046c 9CB2     		uxth	r4, r3
 2626 046e D7F8C030 		ldr	r3, [r7, #192]
 2627 0472 9BB2     		uxth	r3, r3
 2628 0474 9B00     		lsls	r3, r3, #2
 2629 0476 9BB2     		uxth	r3, r3
 2630 0478 03F28173 		addw	r3, r3, #1921
 2631 047c 9BB2     		uxth	r3, r3
 2632 047e 1846     		mov	r0, r3
 2633 0480 FFF7FEFF 		bl	EEPROM_ReadByte
 2634 0484 0346     		mov	r3, r0
 2635 0486 9BB2     		uxth	r3, r3
 2636 0488 2344     		add	r3, r3, r4
 2637 048a 99B2     		uxth	r1, r3
 2638 048c 5C4A     		ldr	r2, .L219+8
 2639 048e D7F8C030 		ldr	r3, [r7, #192]
 2640 0492 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 600:main.c        ****     {
 2641              		.loc 1 600 0 discriminator 3
 2642 0496 D7F8C030 		ldr	r3, [r7, #192]
 2643 049a 0133     		adds	r3, r3, #1
 2644 049c C7F8C030 		str	r3, [r7, #192]
 2645              	.L60:
 600:main.c        ****     {
 2646              		.loc 1 600 0 is_stmt 0 discriminator 1
 2647 04a0 D7F8C030 		ldr	r3, [r7, #192]
 2648 04a4 092B     		cmp	r3, #9
 2649 04a6 B1DD     		ble	.L61
 2650              	.LBE14:
 604:main.c        ****     }
 605:main.c        ****     calculatePedalRatios();
 2651              		.loc 1 605 0 is_stmt 1
 2652 04a8 FFF7FEFF 		bl	calculatePedalRatios
 2653              	.LBB15:
 606:main.c        ****                 
 607:main.c        ****     
 608:main.c        ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 2654              		.loc 1 608 0
 2655 04ac 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 59


 2656 04ae C7F8BC30 		str	r3, [r7, #188]
 2657 04b2 4AE0     		b	.L62
 2658              	.L63:
 609:main.c        ****     {
 610:main.c        ****         fretMeasurements[0][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + (i*4)) << 8) + (
 2659              		.loc 1 610 0 discriminator 3
 2660 04b4 D7F8BC30 		ldr	r3, [r7, #188]
 2661 04b8 9BB2     		uxth	r3, r3
 2662 04ba 9B00     		lsls	r3, r3, #2
 2663 04bc 9BB2     		uxth	r3, r3
 2664 04be 03F2A673 		addw	r3, r3, #1958
 2665 04c2 9BB2     		uxth	r3, r3
 2666 04c4 1846     		mov	r0, r3
 2667 04c6 FFF7FEFF 		bl	EEPROM_ReadByte
 2668 04ca 0346     		mov	r3, r0
 2669 04cc 9BB2     		uxth	r3, r3
 2670 04ce 1B02     		lsls	r3, r3, #8
 2671 04d0 9CB2     		uxth	r4, r3
 2672 04d2 D7F8BC30 		ldr	r3, [r7, #188]
 2673 04d6 9BB2     		uxth	r3, r3
 2674 04d8 9B00     		lsls	r3, r3, #2
 2675 04da 9BB2     		uxth	r3, r3
 2676 04dc 03F2A773 		addw	r3, r3, #1959
 2677 04e0 9BB2     		uxth	r3, r3
 2678 04e2 1846     		mov	r0, r3
 2679 04e4 FFF7FEFF 		bl	EEPROM_ReadByte
 2680 04e8 0346     		mov	r3, r0
 2681 04ea 9BB2     		uxth	r3, r3
 2682 04ec 2344     		add	r3, r3, r4
 2683 04ee 99B2     		uxth	r1, r3
 2684 04f0 444A     		ldr	r2, .L219+12
 2685 04f2 D7F8BC30 		ldr	r3, [r7, #188]
 2686 04f6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 611:main.c        ****         fretMeasurements[1][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 2)) << 
 2687              		.loc 1 611 0 discriminator 3
 2688 04fa D7F8BC30 		ldr	r3, [r7, #188]
 2689 04fe 03F5F573 		add	r3, r3, #490
 2690 0502 9BB2     		uxth	r3, r3
 2691 0504 9B00     		lsls	r3, r3, #2
 2692 0506 9BB2     		uxth	r3, r3
 2693 0508 1846     		mov	r0, r3
 2694 050a FFF7FEFF 		bl	EEPROM_ReadByte
 2695 050e 0346     		mov	r3, r0
 2696 0510 9BB2     		uxth	r3, r3
 2697 0512 1B02     		lsls	r3, r3, #8
 2698 0514 9CB2     		uxth	r4, r3
 2699 0516 D7F8BC30 		ldr	r3, [r7, #188]
 2700 051a 9BB2     		uxth	r3, r3
 2701 051c 9B00     		lsls	r3, r3, #2
 2702 051e 9BB2     		uxth	r3, r3
 2703 0520 03F2A973 		addw	r3, r3, #1961
 2704 0524 9BB2     		uxth	r3, r3
 2705 0526 1846     		mov	r0, r3
 2706 0528 FFF7FEFF 		bl	EEPROM_ReadByte
 2707 052c 0346     		mov	r3, r0
 2708 052e 9BB2     		uxth	r3, r3
 2709 0530 2344     		add	r3, r3, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 60


 2710 0532 99B2     		uxth	r1, r3
 2711 0534 334A     		ldr	r2, .L219+12
 2712 0536 D7F8BC30 		ldr	r3, [r7, #188]
 2713 053a 0C33     		adds	r3, r3, #12
 2714 053c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 608:main.c        ****     {
 2715              		.loc 1 608 0 discriminator 3
 2716 0540 D7F8BC30 		ldr	r3, [r7, #188]
 2717 0544 0133     		adds	r3, r3, #1
 2718 0546 C7F8BC30 		str	r3, [r7, #188]
 2719              	.L62:
 608:main.c        ****     {
 2720              		.loc 1 608 0 is_stmt 0 discriminator 1
 2721 054a D7F8BC30 		ldr	r3, [r7, #188]
 2722 054e 0B2B     		cmp	r3, #11
 2723 0550 B0DD     		ble	.L63
 2724              	.LBE15:
 2725              	.LBB16:
 612:main.c        ****     }
 613:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 614:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 2726              		.loc 1 614 0 is_stmt 1
 2727 0552 0023     		movs	r3, #0
 2728 0554 C7F8B830 		str	r3, [r7, #184]
 2729 0558 8CE0     		b	.L64
 2730              	.L75:
 2731              	.LBB17:
 615:main.c        ****     {
 616:main.c        ****         for (int j = 0; j < PRESET_NAME_LENGTH_IN_BYTES; j++)
 2732              		.loc 1 616 0
 2733 055a 0023     		movs	r3, #0
 2734 055c C7F8B430 		str	r3, [r7, #180]
 2735 0560 11E0     		b	.L65
 2736              	.L66:
 617:main.c        ****         {
 618:main.c        ****             presetNamesArray[i][j] = 255;
 2737              		.loc 1 618 0 discriminator 3
 2738 0562 2949     		ldr	r1, .L219+16
 2739 0564 D7F8B820 		ldr	r2, [r7, #184]
 2740 0568 1346     		mov	r3, r2
 2741 056a DB00     		lsls	r3, r3, #3
 2742 056c 9B1A     		subs	r3, r3, r2
 2743 056e 5B00     		lsls	r3, r3, #1
 2744 0570 CA18     		adds	r2, r1, r3
 2745 0572 D7F8B430 		ldr	r3, [r7, #180]
 2746 0576 1344     		add	r3, r3, r2
 2747 0578 FF22     		movs	r2, #255
 2748 057a 1A70     		strb	r2, [r3]
 616:main.c        ****         {
 2749              		.loc 1 616 0 discriminator 3
 2750 057c D7F8B430 		ldr	r3, [r7, #180]
 2751 0580 0133     		adds	r3, r3, #1
 2752 0582 C7F8B430 		str	r3, [r7, #180]
 2753              	.L65:
 616:main.c        ****         {
 2754              		.loc 1 616 0 is_stmt 0 discriminator 1
 2755 0586 D7F8B430 		ldr	r3, [r7, #180]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 61


 2756 058a 0D2B     		cmp	r3, #13
 2757 058c E9DD     		ble	.L66
 2758              	.LBE17:
 2759              	.LBB18:
 619:main.c        **** 
 620:main.c        ****         }
 621:main.c        ****         for (int j = 0; j < NUM_MACROS*NUM_MACRO_PAGES; j++)
 2760              		.loc 1 621 0 is_stmt 1
 2761 058e 0023     		movs	r3, #0
 2762 0590 C7F8B030 		str	r3, [r7, #176]
 2763 0594 24E0     		b	.L67
 2764              	.L70:
 2765              	.LBB19:
 622:main.c        ****         {
 623:main.c        ****             for (int k = 0; k < MACRO_NAME_LENGTH_IN_BYTES; k++)
 2766              		.loc 1 623 0
 2767 0596 0023     		movs	r3, #0
 2768 0598 C7F8AC30 		str	r3, [r7, #172]
 2769 059c 17E0     		b	.L68
 2770              	.L69:
 624:main.c        ****             {
 625:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2771              		.loc 1 625 0 discriminator 3
 2772 059e 1B48     		ldr	r0, .L219+20
 2773 05a0 D7F8B030 		ldr	r3, [r7, #176]
 2774 05a4 D7F8B810 		ldr	r1, [r7, #184]
 2775 05a8 1A46     		mov	r2, r3
 2776 05aa D200     		lsls	r2, r2, #3
 2777 05ac 1A44     		add	r2, r2, r3
 2778 05ae 0B46     		mov	r3, r1
 2779 05b0 DB00     		lsls	r3, r3, #3
 2780 05b2 0B44     		add	r3, r3, r1
 2781 05b4 1B01     		lsls	r3, r3, #4
 2782 05b6 1344     		add	r3, r3, r2
 2783 05b8 C218     		adds	r2, r0, r3
 2784 05ba D7F8AC30 		ldr	r3, [r7, #172]
 2785 05be 1344     		add	r3, r3, r2
 2786 05c0 FF22     		movs	r2, #255
 2787 05c2 1A70     		strb	r2, [r3]
 623:main.c        ****             {
 2788              		.loc 1 623 0 discriminator 3
 2789 05c4 D7F8AC30 		ldr	r3, [r7, #172]
 2790 05c8 0133     		adds	r3, r3, #1
 2791 05ca C7F8AC30 		str	r3, [r7, #172]
 2792              	.L68:
 623:main.c        ****             {
 2793              		.loc 1 623 0 is_stmt 0 discriminator 1
 2794 05ce D7F8AC30 		ldr	r3, [r7, #172]
 2795 05d2 082B     		cmp	r3, #8
 2796 05d4 E3DD     		ble	.L69
 2797              	.LBE19:
 621:main.c        ****         {
 2798              		.loc 1 621 0 is_stmt 1 discriminator 2
 2799 05d6 D7F8B030 		ldr	r3, [r7, #176]
 2800 05da 0133     		adds	r3, r3, #1
 2801 05dc C7F8B030 		str	r3, [r7, #176]
 2802              	.L67:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 62


 621:main.c        ****         {
 2803              		.loc 1 621 0 is_stmt 0 discriminator 1
 2804 05e0 D7F8B030 		ldr	r3, [r7, #176]
 2805 05e4 0F2B     		cmp	r3, #15
 2806 05e6 D6DD     		ble	.L70
 2807              	.LBE18:
 2808              	.LBB20:
 626:main.c        ****             }
 627:main.c        ****         }
 628:main.c        ****         for (int j = 0; j < NUM_CONTROLS; j++)
 2809              		.loc 1 628 0 is_stmt 1
 2810 05e8 0023     		movs	r3, #0
 2811 05ea C7F8A830 		str	r3, [r7, #168]
 2812 05ee 32E0     		b	.L71
 2813              	.L74:
 2814              	.LBB21:
 629:main.c        ****         {
 630:main.c        ****             for (int k = 0; k < CONTROL_NAME_LENGTH_IN_BYTES; k++)
 2815              		.loc 1 630 0
 2816 05f0 0023     		movs	r3, #0
 2817 05f2 C7F8A430 		str	r3, [r7, #164]
 2818 05f6 25E0     		b	.L72
 2819              	.L220:
 2820              		.align	2
 2821              	.L219:
 2822 05f8 00000000 		.word	copedent
 2823 05fc 00000000 		.word	pedals_low
 2824 0600 00000000 		.word	pedals_high
 2825 0604 00000000 		.word	fretMeasurements
 2826 0608 00000000 		.word	presetNamesArray
 2827 060c 00000000 		.word	macroNamesArray
 2828              	.L73:
 631:main.c        ****             {
 632:main.c        ****                 controlNamesArray[i][j][k] = 255;
 2829              		.loc 1 632 0 discriminator 3
 2830 0610 9748     		ldr	r0, .L221
 2831 0612 D7F8A830 		ldr	r3, [r7, #168]
 2832 0616 D7F8B810 		ldr	r1, [r7, #184]
 2833 061a 1A46     		mov	r2, r3
 2834 061c 9200     		lsls	r2, r2, #2
 2835 061e 1A44     		add	r2, r2, r3
 2836 0620 5300     		lsls	r3, r2, #1
 2837 0622 1A46     		mov	r2, r3
 2838 0624 0B46     		mov	r3, r1
 2839 0626 9B00     		lsls	r3, r3, #2
 2840 0628 0B44     		add	r3, r3, r1
 2841 062a DB00     		lsls	r3, r3, #3
 2842 062c 1344     		add	r3, r3, r2
 2843 062e C218     		adds	r2, r0, r3
 2844 0630 D7F8A430 		ldr	r3, [r7, #164]
 2845 0634 1344     		add	r3, r3, r2
 2846 0636 FF22     		movs	r2, #255
 2847 0638 1A70     		strb	r2, [r3]
 630:main.c        ****             {
 2848              		.loc 1 630 0 discriminator 3
 2849 063a D7F8A430 		ldr	r3, [r7, #164]
 2850 063e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 63


 2851 0640 C7F8A430 		str	r3, [r7, #164]
 2852              	.L72:
 630:main.c        ****             {
 2853              		.loc 1 630 0 is_stmt 0 discriminator 1
 2854 0644 D7F8A430 		ldr	r3, [r7, #164]
 2855 0648 092B     		cmp	r3, #9
 2856 064a E1DD     		ble	.L73
 2857              	.LBE21:
 628:main.c        ****         {
 2858              		.loc 1 628 0 is_stmt 1 discriminator 2
 2859 064c D7F8A830 		ldr	r3, [r7, #168]
 2860 0650 0133     		adds	r3, r3, #1
 2861 0652 C7F8A830 		str	r3, [r7, #168]
 2862              	.L71:
 628:main.c        ****         {
 2863              		.loc 1 628 0 is_stmt 0 discriminator 1
 2864 0656 D7F8A830 		ldr	r3, [r7, #168]
 2865 065a 032B     		cmp	r3, #3
 2866 065c C8DD     		ble	.L74
 2867              	.LBE20:
 633:main.c        ****             }
 634:main.c        ****         }
 635:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2868              		.loc 1 635 0 is_stmt 1 discriminator 2
 2869 065e 854A     		ldr	r2, .L221+4
 2870 0660 D7F8B830 		ldr	r3, [r7, #184]
 2871 0664 1344     		add	r3, r3, r2
 2872 0666 0022     		movs	r2, #0
 2873 0668 1A70     		strb	r2, [r3]
 614:main.c        ****     {
 2874              		.loc 1 614 0 discriminator 2
 2875 066a D7F8B830 		ldr	r3, [r7, #184]
 2876 066e 0133     		adds	r3, r3, #1
 2877 0670 C7F8B830 		str	r3, [r7, #184]
 2878              	.L64:
 614:main.c        ****     {
 2879              		.loc 1 614 0 is_stmt 0 discriminator 1
 2880 0674 D7F8B830 		ldr	r3, [r7, #184]
 2881 0678 3F2B     		cmp	r3, #63
 2882 067a 7FF76EAF 		ble	.L75
 2883              	.LBE16:
 636:main.c        ****     }
 637:main.c        ****     LED_amber1_Write(0);
 2884              		.loc 1 637 0 is_stmt 1
 2885 067e 0020     		movs	r0, #0
 2886 0680 FFF7FEFF 		bl	LED_amber1_Write
 638:main.c        ****     LED_amber2_Write(1);
 2887              		.loc 1 638 0
 2888 0684 0120     		movs	r0, #1
 2889 0686 FFF7FEFF 		bl	LED_amber2_Write
 639:main.c        ****     LED_amber3_Write(0);
 2890              		.loc 1 639 0
 2891 068a 0020     		movs	r0, #0
 2892 068c FFF7FEFF 		bl	LED_amber3_Write
 640:main.c        ****     LED_amber4_Write(0);
 2893              		.loc 1 640 0
 2894 0690 0020     		movs	r0, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 64


 2895 0692 FFF7FEFF 		bl	LED_amber4_Write
 641:main.c        ****     LED_green1_Write(dualSlider);
 2896              		.loc 1 641 0
 2897 0696 784B     		ldr	r3, .L221+8
 2898 0698 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2899 069a 1846     		mov	r0, r3
 2900 069c FFF7FEFF 		bl	LED_green1_Write
 642:main.c        ****     LED_red1_Write(currentNeck);
 2901              		.loc 1 642 0
 2902 06a0 764B     		ldr	r3, .L221+12
 2903 06a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2904 06a4 1846     		mov	r0, r3
 2905 06a6 FFF7FEFF 		bl	LED_red1_Write
 643:main.c        ****     LED_green2_Write(!currentNeck);
 2906              		.loc 1 643 0
 2907 06aa 744B     		ldr	r3, .L221+12
 2908 06ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2909 06ae 002B     		cmp	r3, #0
 2910 06b0 0CBF     		ite	eq
 2911 06b2 0123     		moveq	r3, #1
 2912 06b4 0023     		movne	r3, #0
 2913 06b6 DBB2     		uxtb	r3, r3
 2914 06b8 1846     		mov	r0, r3
 2915 06ba FFF7FEFF 		bl	LED_green2_Write
 644:main.c        ****     ADC_SAR_Seq_1_Start();
 2916              		.loc 1 644 0
 2917 06be FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 645:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2918              		.loc 1 645 0
 2919 06c2 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 646:main.c        **** 
 647:main.c        ****             
 648:main.c        ****     currentCopedent = necks[currentNeck];
 2920              		.loc 1 648 0
 2921 06c6 6D4B     		ldr	r3, .L221+12
 2922 06c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2923 06ca 1A46     		mov	r2, r3
 2924 06cc 6C4B     		ldr	r3, .L221+16
 2925 06ce 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 2926 06d0 6C4B     		ldr	r3, .L221+20
 2927 06d2 1A70     		strb	r2, [r3]
 649:main.c        ****     CyDelay(10);
 2928              		.loc 1 649 0
 2929 06d4 0A20     		movs	r0, #10
 2930 06d6 FFF7FEFF 		bl	CyDelay
 650:main.c        ****     
 651:main.c        ****     //set up for the OLED screen's first write
 652:main.c        ****     I2Cbuff1[0] = 1<<6;
 2931              		.loc 1 652 0
 2932 06da 6B4B     		ldr	r3, .L221+24
 2933 06dc 4022     		movs	r2, #64
 2934 06de 1A70     		strb	r2, [r3]
 653:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2935              		.loc 1 653 0
 2936 06e0 0022     		movs	r2, #0
 2937 06e2 0121     		movs	r1, #1
 2938 06e4 7020     		movs	r0, #112
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 65


 2939 06e6 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2940 06ea 0346     		mov	r3, r0
 2941 06ec 1A46     		mov	r2, r3
 2942 06ee 674B     		ldr	r3, .L221+28
 2943 06f0 1A60     		str	r2, [r3]
 654:main.c        ****     myGFX_init(128, 64);
 2944              		.loc 1 654 0
 2945 06f2 4021     		movs	r1, #64
 2946 06f4 8020     		movs	r0, #128
 2947 06f6 FFF7FEFF 		bl	myGFX_init
 655:main.c        ****     myGFX_setFont(0);
 2948              		.loc 1 655 0
 2949 06fa 0020     		movs	r0, #0
 2950 06fc FFF7FEFF 		bl	myGFX_setFont
 656:main.c        ****     OLED_init(128, 64);
 2951              		.loc 1 656 0
 2952 0700 4021     		movs	r1, #64
 2953 0702 8020     		movs	r0, #128
 2954 0704 FFF7FEFF 		bl	OLED_init
 657:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2955              		.loc 1 657 0
 2956 0708 5E4B     		ldr	r3, .L221+20
 2957 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2958 070c 1846     		mov	r0, r3
 2959 070e 0323     		movs	r3, #3
 2960 0710 0022     		movs	r2, #0
 2961 0712 0221     		movs	r1, #2
 2962 0714 FFF7FEFF 		bl	OLEDwriteInt
 658:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2963              		.loc 1 658 0
 2964 0718 FFF7FEFF 		bl	OLEDgetCursor
 2965 071c 0246     		mov	r2, r0
 2966 071e 0323     		movs	r3, #3
 2967 0720 0121     		movs	r1, #1
 2968 0722 5B48     		ldr	r0, .L221+32
 2969 0724 FFF7FEFF 		bl	OLEDwriteString
 659:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH, 
 2970              		.loc 1 659 0
 2971 0728 564B     		ldr	r3, .L221+20
 2972 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2973 072c 1A46     		mov	r2, r3
 2974 072e 1346     		mov	r3, r2
 2975 0730 9B00     		lsls	r3, r3, #2
 2976 0732 1344     		add	r3, r3, r2
 2977 0734 5B00     		lsls	r3, r3, #1
 2978 0736 574A     		ldr	r2, .L221+36
 2979 0738 9C18     		adds	r4, r3, r2
 2980 073a FFF7FEFF 		bl	OLEDgetCursor
 2981 073e 0246     		mov	r2, r0
 2982 0740 0323     		movs	r3, #3
 2983 0742 0A21     		movs	r1, #10
 2984 0744 2046     		mov	r0, r4
 2985 0746 FFF7FEFF 		bl	OLEDwriteString
 660:main.c        ****     OLED_draw(128, 64);
 2986              		.loc 1 660 0
 2987 074a 4021     		movs	r1, #64
 2988 074c 8020     		movs	r0, #128
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 66


 2989 074e FFF7FEFF 		bl	OLED_draw
 661:main.c        ****     
 662:main.c        ****     
 663:main.c        ****     I2Cbuff1[0] = 1<<2;
 2990              		.loc 1 663 0
 2991 0752 4D4B     		ldr	r3, .L221+24
 2992 0754 0422     		movs	r2, #4
 2993 0756 1A70     		strb	r2, [r3]
 664:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2994              		.loc 1 664 0
 2995 0758 0022     		movs	r2, #0
 2996 075a 0121     		movs	r1, #1
 2997 075c 7020     		movs	r0, #112
 2998 075e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2999 0762 0346     		mov	r3, r0
 3000 0764 1A46     		mov	r2, r3
 3001 0766 494B     		ldr	r3, .L221+28
 3002 0768 1A60     		str	r2, [r3]
 3003              	.LBB22:
 665:main.c        **** 
 666:main.c        ****     for (int w = 0; w < 8; w++)
 3004              		.loc 1 666 0
 3005 076a 0023     		movs	r3, #0
 3006 076c C7F8A030 		str	r3, [r7, #160]
 3007 0770 18E0     		b	.L76
 3008              	.L77:
 667:main.c        ****     {
 668:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 3009              		.loc 1 668 0 discriminator 3
 3010 0772 D7F8A030 		ldr	r3, [r7, #160]
 3011 0776 DBB2     		uxtb	r3, r3
 3012 0778 0833     		adds	r3, r3, #8
 3013 077a DAB2     		uxtb	r2, r3
 3014 077c 424B     		ldr	r3, .L221+24
 3015 077e 1A70     		strb	r2, [r3]
 669:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 3016              		.loc 1 669 0 discriminator 3
 3017 0780 0022     		movs	r2, #0
 3018 0782 0121     		movs	r1, #1
 3019 0784 7220     		movs	r0, #114
 3020 0786 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3021 078a 0346     		mov	r3, r0
 3022 078c 1A46     		mov	r2, r3
 3023 078e 3F4B     		ldr	r3, .L221+28
 3024 0790 1A60     		str	r2, [r3]
 670:main.c        ****         OLED_init(128, 32);
 3025              		.loc 1 670 0 discriminator 3
 3026 0792 2021     		movs	r1, #32
 3027 0794 8020     		movs	r0, #128
 3028 0796 FFF7FEFF 		bl	OLED_init
 666:main.c        ****     {
 3029              		.loc 1 666 0 discriminator 3
 3030 079a D7F8A030 		ldr	r3, [r7, #160]
 3031 079e 0133     		adds	r3, r3, #1
 3032 07a0 C7F8A030 		str	r3, [r7, #160]
 3033              	.L76:
 666:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 67


 3034              		.loc 1 666 0 is_stmt 0 discriminator 1
 3035 07a4 D7F8A030 		ldr	r3, [r7, #160]
 3036 07a8 072B     		cmp	r3, #7
 3037 07aa E2DD     		ble	.L77
 3038              	.LBE22:
 671:main.c        ****     }
 672:main.c        **** 
 673:main.c        ****     //initialize the macro knob adc to scan all knobs
 674:main.c        ****     I2Cbuff1[0] = 1<<2;
 3039              		.loc 1 674 0 is_stmt 1
 3040 07ac 364B     		ldr	r3, .L221+24
 3041 07ae 0422     		movs	r2, #4
 3042 07b0 1A70     		strb	r2, [r3]
 675:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 3043              		.loc 1 675 0
 3044 07b2 0022     		movs	r2, #0
 3045 07b4 0121     		movs	r1, #1
 3046 07b6 7020     		movs	r0, #112
 3047 07b8 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3048 07bc 0346     		mov	r3, r0
 3049 07be 1A46     		mov	r2, r3
 3050 07c0 324B     		ldr	r3, .L221+28
 3051 07c2 1A60     		str	r2, [r3]
 676:main.c        ****     main_counter = 9;
 3052              		.loc 1 676 0
 3053 07c4 344B     		ldr	r3, .L221+40
 3054 07c6 0922     		movs	r2, #9
 3055 07c8 1A70     		strb	r2, [r3]
 677:main.c        **** 
 678:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 3056              		.loc 1 678 0
 3057 07ca 2F4B     		ldr	r3, .L221+24
 3058 07cc 0F22     		movs	r2, #15
 3059 07ce 1A70     		strb	r2, [r3]
 679:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 3060              		.loc 1 679 0
 3061 07d0 0022     		movs	r2, #0
 3062 07d2 0121     		movs	r1, #1
 3063 07d4 3520     		movs	r0, #53
 3064 07d6 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3065 07da 0346     		mov	r3, r0
 3066 07dc 1A46     		mov	r2, r3
 3067 07de 2B4B     		ldr	r3, .L221+28
 3068 07e0 1A60     		str	r2, [r3]
 680:main.c        ****     
 681:main.c        **** 
 682:main.c        ****     SPIS_1_Start();  
 3069              		.loc 1 682 0
 3070 07e2 FFF7FEFF 		bl	SPIS_1_Start
 683:main.c        ****     SPIM_1_Start();  
 3071              		.loc 1 683 0
 3072 07e6 FFF7FEFF 		bl	SPIM_1_Start
 684:main.c        ****     SPIS_2_Start(); 
 3073              		.loc 1 684 0
 3074 07ea FFF7FEFF 		bl	SPIS_2_Start
 685:main.c        ****     DmaTxConfiguration();
 3075              		.loc 1 685 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 68


 3076 07ee FFF7FEFF 		bl	DmaTxConfiguration
 686:main.c        ****     DmaRxConfiguration();
 3077              		.loc 1 686 0
 3078 07f2 FFF7FEFF 		bl	DmaRxConfiguration
 687:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 3079              		.loc 1 687 0
 3080 07f6 2948     		ldr	r0, .L221+44
 3081 07f8 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 688:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 3082              		.loc 1 688 0
 3083 07fc 2848     		ldr	r0, .L221+48
 3084 07fe FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 689:main.c        ****     
 690:main.c        ****     myArray[30] = 254;
 3085              		.loc 1 690 0
 3086 0802 284B     		ldr	r3, .L221+52
 3087 0804 FE22     		movs	r2, #254
 3088 0806 9A77     		strb	r2, [r3, #30]
 691:main.c        ****     myArray[31] = 253;
 3089              		.loc 1 691 0
 3090 0808 264B     		ldr	r3, .L221+52
 3091 080a FD22     		movs	r2, #253
 3092 080c DA77     		strb	r2, [r3, #31]
 692:main.c        **** 
 693:main.c        ****     main_counter = 0;
 3093              		.loc 1 693 0
 3094 080e 224B     		ldr	r3, .L221+40
 3095 0810 0022     		movs	r2, #0
 3096 0812 1A70     		strb	r2, [r3]
 3097              	.L209:
 694:main.c        **** 
 695:main.c        **** 	for(;;)
 696:main.c        ****     {
 697:main.c        ****         
 698:main.c        ****         if (parseThatMF)
 3098              		.loc 1 698 0
 3099 0814 244B     		ldr	r3, .L221+56
 3100 0816 1B78     		ldrb	r3, [r3]
 3101 0818 DBB2     		uxtb	r3, r3
 3102 081a 002B     		cmp	r3, #0
 3103 081c 01D0     		beq	.L78
 699:main.c        ****         {
 700:main.c        ****             parseSysex();
 3104              		.loc 1 700 0
 3105 081e FFF7FEFF 		bl	parseSysex
 3106              	.L78:
 701:main.c        ****         }
 702:main.c        ****        
 703:main.c        ****         //testpin3_Write(1);
 704:main.c        ****        //sense levers and pedals
 705:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 3107              		.loc 1 705 0
 3108 0822 1D4B     		ldr	r3, .L221+40
 3109 0824 1B78     		ldrb	r3, [r3]
 3110 0826 DBB2     		uxtb	r3, r3
 3111 0828 1A46     		mov	r2, r3
 3112 082a 204B     		ldr	r3, .L221+60
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 69


 3113 082c 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 3114 0830 1F4B     		ldr	r3, .L221+64
 3115 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3116 0834 9A42     		cmp	r2, r3
 3117 0836 49D0     		beq	.L79
 3118              	.LBB23:
 706:main.c        ****         {
 707:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 3119              		.loc 1 707 0
 3120 0838 174B     		ldr	r3, .L221+40
 3121 083a 1B78     		ldrb	r3, [r3]
 3122 083c DBB2     		uxtb	r3, r3
 3123 083e 1A46     		mov	r2, r3
 3124 0840 1A4B     		ldr	r3, .L221+60
 3125 0842 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 3126 0846 1A46     		mov	r2, r3
 3127 0848 0123     		movs	r3, #1
 3128 084a 9340     		lsls	r3, r3, r2
 3129 084c DAB2     		uxtb	r2, r3
 3130 084e 0E4B     		ldr	r3, .L221+24
 3131 0850 1A70     		strb	r2, [r3]
 708:main.c        ****             if (mux_states[main_counter][0] == 5) //slow down I2C communication if it's going throu
 3132              		.loc 1 708 0
 3133 0852 114B     		ldr	r3, .L221+40
 3134 0854 1B78     		ldrb	r3, [r3]
 3135 0856 DBB2     		uxtb	r3, r3
 3136 0858 1A46     		mov	r2, r3
 3137 085a 144B     		ldr	r3, .L221+60
 3138 085c 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 3139 0860 052B     		cmp	r3, #5
 3140 0862 27D1     		bne	.L80
 709:main.c        ****             {
 710:main.c        ****                 Clock_2_SetDividerValue(13); //slow speed 400k
 3141              		.loc 1 710 0
 3142 0864 0121     		movs	r1, #1
 3143 0866 0C20     		movs	r0, #12
 3144 0868 FFF7FEFF 		bl	Clock_2_SetDividerRegister
 3145 086c 26E0     		b	.L81
 3146              	.L222:
 3147 086e 00BF     		.align	2
 3148              	.L221:
 3149 0870 00000000 		.word	controlNamesArray
 3150 0874 00000000 		.word	presetAlreadyDisplayed
 3151 0878 00000000 		.word	dualSlider
 3152 087c 00000000 		.word	currentNeck
 3153 0880 00000000 		.word	necks
 3154 0884 00000000 		.word	currentCopedent
 3155 0888 00000000 		.word	I2Cbuff1
 3156 088c 00000000 		.word	status
 3157 0890 00040000 		.word	.LC0
 3158 0894 00000000 		.word	copedentNamesArray
 3159 0898 00000000 		.word	main_counter
 3160 089c 00000000 		.word	spis_1_ss
 3161 08a0 00000000 		.word	spis_2_ss
 3162 08a4 00000000 		.word	myArray
 3163 08a8 00000000 		.word	parseThatMF
 3164 08ac 00000000 		.word	mux_states
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 70


 3165 08b0 00000000 		.word	last_mux
 3166              	.L80:
 711:main.c        ****             }
 712:main.c        ****             else
 713:main.c        ****             {
 714:main.c        ****                 Clock_2_SetDividerValue(5); //otherwise full speed 1000k
 3167              		.loc 1 714 0
 3168 08b4 0121     		movs	r1, #1
 3169 08b6 0420     		movs	r0, #4
 3170 08b8 FFF7FEFF 		bl	Clock_2_SetDividerRegister
 3171              	.L81:
 715:main.c        ****             }
 716:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 3172              		.loc 1 716 0
 3173 08bc 0022     		movs	r2, #0
 3174 08be 0121     		movs	r1, #1
 3175 08c0 7020     		movs	r0, #112
 3176 08c2 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3177 08c6 0346     		mov	r3, r0
 3178 08c8 87F83730 		strb	r3, [r7, #55]
 3179              	.L79:
 3180              	.LBE23:
 717:main.c        ****         }
 718:main.c        ****         last_mux = mux_states[main_counter][0];
 3181              		.loc 1 718 0
 3182 08cc A24B     		ldr	r3, .L223
 3183 08ce 1B78     		ldrb	r3, [r3]
 3184 08d0 DBB2     		uxtb	r3, r3
 3185 08d2 1A46     		mov	r2, r3
 3186 08d4 A14B     		ldr	r3, .L223+4
 3187 08d6 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 3188 08da A14B     		ldr	r3, .L223+8
 3189 08dc 1A70     		strb	r2, [r3]
 719:main.c        ****         
 720:main.c        ****         
 721:main.c        ****         CyDelayUs(10);
 3190              		.loc 1 721 0
 3191 08de 0A20     		movs	r0, #10
 3192 08e0 FFF7FEFF 		bl	CyDelayUs
 722:main.c        ****         if (mux_states[main_counter][0] == 5)
 3193              		.loc 1 722 0
 3194 08e4 9C4B     		ldr	r3, .L223
 3195 08e6 1B78     		ldrb	r3, [r3]
 3196 08e8 DBB2     		uxtb	r3, r3
 3197 08ea 1A46     		mov	r2, r3
 3198 08ec 9B4B     		ldr	r3, .L223+4
 3199 08ee 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 3200 08f2 052B     		cmp	r3, #5
 3201 08f4 1DD1     		bne	.L82
 723:main.c        ****         {
 724:main.c        ****             if (!i2c_skipped[main_counter])
 3202              		.loc 1 724 0
 3203 08f6 984B     		ldr	r3, .L223
 3204 08f8 1B78     		ldrb	r3, [r3]
 3205 08fa DBB2     		uxtb	r3, r3
 3206 08fc 1A46     		mov	r2, r3
 3207 08fe 994B     		ldr	r3, .L223+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 71


 3208 0900 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3209 0902 002B     		cmp	r3, #0
 3210 0904 15D1     		bne	.L82
 725:main.c        ****             {
 726:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 3211              		.loc 1 726 0
 3212 0906 944B     		ldr	r3, .L223
 3213 0908 1B78     		ldrb	r3, [r3]
 3214 090a DBB2     		uxtb	r3, r3
 3215 090c 934A     		ldr	r2, .L223+4
 3216 090e 5B00     		lsls	r3, r3, #1
 3217 0910 1344     		add	r3, r3, r2
 3218 0912 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3219 0914 1A46     		mov	r2, r3
 3220 0916 0123     		movs	r3, #1
 3221 0918 9340     		lsls	r3, r3, r2
 3222 091a DAB2     		uxtb	r2, r3
 3223 091c 924B     		ldr	r3, .L223+16
 3224 091e 1A70     		strb	r2, [r3]
 727:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 3225              		.loc 1 727 0
 3226 0920 0022     		movs	r2, #0
 3227 0922 0121     		movs	r1, #1
 3228 0924 7120     		movs	r0, #113
 3229 0926 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3230 092a 0346     		mov	r3, r0
 3231 092c 1A46     		mov	r2, r3
 3232 092e 8F4B     		ldr	r3, .L223+20
 3233 0930 1A60     		str	r2, [r3]
 3234              	.L82:
 728:main.c        ****             }
 729:main.c        ****         }
 730:main.c        **** 
 731:main.c        ****         CyDelayUs(10);
 3235              		.loc 1 731 0
 3236 0932 0A20     		movs	r0, #10
 3237 0934 FFF7FEFF 		bl	CyDelayUs
 732:main.c        ****         //if it's a hall sensor
 733:main.c        **** 
 734:main.c        ****         if (main_counter < 10)
 3238              		.loc 1 734 0
 3239 0938 874B     		ldr	r3, .L223
 3240 093a 1B78     		ldrb	r3, [r3]
 3241 093c DBB2     		uxtb	r3, r3
 3242 093e 092B     		cmp	r3, #9
 3243 0940 00F2A180 		bhi	.L83
 735:main.c        ****         {
 736:main.c        ****             if (!i2c_skipped[main_counter])
 3244              		.loc 1 736 0
 3245 0944 844B     		ldr	r3, .L223
 3246 0946 1B78     		ldrb	r3, [r3]
 3247 0948 DBB2     		uxtb	r3, r3
 3248 094a 1A46     		mov	r2, r3
 3249 094c 854B     		ldr	r3, .L223+12
 3250 094e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3251 0950 002B     		cmp	r3, #0
 3252 0952 40F09880 		bne	.L83
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 72


 737:main.c        ****             {
 738:main.c        ****                 //CyDelayUs(100);
 739:main.c        ****                 I2Cbuff1[0] = 0x0E;
 3253              		.loc 1 739 0
 3254 0956 844B     		ldr	r3, .L223+16
 3255 0958 0E22     		movs	r2, #14
 3256 095a 1A70     		strb	r2, [r3]
 740:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 3257              		.loc 1 740 0
 3258 095c 0222     		movs	r2, #2
 3259 095e 0121     		movs	r1, #1
 3260 0960 3620     		movs	r0, #54
 3261 0962 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3262 0966 0346     		mov	r3, r0
 3263 0968 1A46     		mov	r2, r3
 3264 096a 804B     		ldr	r3, .L223+20
 3265 096c 1A60     		str	r2, [r3]
 741:main.c        ****                 if (status == 0)
 3266              		.loc 1 741 0
 3267 096e 7F4B     		ldr	r3, .L223+20
 3268 0970 1B68     		ldr	r3, [r3]
 3269 0972 002B     		cmp	r3, #0
 3270 0974 08D1     		bne	.L84
 742:main.c        ****                 {
 743:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 3271              		.loc 1 743 0
 3272 0976 0122     		movs	r2, #1
 3273 0978 0221     		movs	r1, #2
 3274 097a 3620     		movs	r0, #54
 3275 097c FFF7FEFF 		bl	I2C_MasterReadBlocking
 3276 0980 0346     		mov	r3, r0
 3277 0982 1A46     		mov	r2, r3
 3278 0984 794B     		ldr	r3, .L223+20
 3279 0986 1A60     		str	r2, [r3]
 3280              	.L84:
 744:main.c        ****                 }
 745:main.c        ****                 if (status  == 0)
 3281              		.loc 1 745 0
 3282 0988 784B     		ldr	r3, .L223+20
 3283 098a 1B68     		ldr	r3, [r3]
 3284 098c 002B     		cmp	r3, #0
 3285 098e 7AD1     		bne	.L83
 746:main.c        ****                 {
 747:main.c        ****                     //CyDelayUs(100);
 748:main.c        ****                     angle[main_counter] = I2Cbuff2[0] << 8;
 3286              		.loc 1 748 0
 3287 0990 714B     		ldr	r3, .L223
 3288 0992 1B78     		ldrb	r3, [r3]
 3289 0994 DBB2     		uxtb	r3, r3
 3290 0996 1A46     		mov	r2, r3
 3291 0998 754B     		ldr	r3, .L223+24
 3292 099a 1B78     		ldrb	r3, [r3]
 3293 099c DBB2     		uxtb	r3, r3
 3294 099e 9BB2     		uxth	r3, r3
 3295 09a0 1B02     		lsls	r3, r3, #8
 3296 09a2 99B2     		uxth	r1, r3
 3297 09a4 734B     		ldr	r3, .L223+28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 73


 3298 09a6 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 749:main.c        ****                     angle[main_counter] +=  I2Cbuff2[1];
 3299              		.loc 1 749 0
 3300 09aa 714B     		ldr	r3, .L223+24
 3301 09ac 5B78     		ldrb	r3, [r3, #1]
 3302 09ae D8B2     		uxtb	r0, r3
 3303 09b0 694B     		ldr	r3, .L223
 3304 09b2 1B78     		ldrb	r3, [r3]
 3305 09b4 DBB2     		uxtb	r3, r3
 3306 09b6 1946     		mov	r1, r3
 3307 09b8 1A46     		mov	r2, r3
 3308 09ba 6E4B     		ldr	r3, .L223+28
 3309 09bc 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3310 09c0 83B2     		uxth	r3, r0
 3311 09c2 1344     		add	r3, r3, r2
 3312 09c4 9AB2     		uxth	r2, r3
 3313 09c6 6B4B     		ldr	r3, .L223+28
 3314 09c8 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 750:main.c        ****                     
 751:main.c        ****                     if (leverCalibrationMode)
 3315              		.loc 1 751 0
 3316 09cc 6A4B     		ldr	r3, .L223+32
 3317 09ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3318 09d0 002B     		cmp	r3, #0
 3319 09d2 58D0     		beq	.L83
 752:main.c        ****                     {
 753:main.c        ****                         if (angle[main_counter] < pedals_low[main_counter])
 3320              		.loc 1 753 0
 3321 09d4 604B     		ldr	r3, .L223
 3322 09d6 1B78     		ldrb	r3, [r3]
 3323 09d8 DBB2     		uxtb	r3, r3
 3324 09da 1A46     		mov	r2, r3
 3325 09dc 654B     		ldr	r3, .L223+28
 3326 09de 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3327 09e2 5D4B     		ldr	r3, .L223
 3328 09e4 1B78     		ldrb	r3, [r3]
 3329 09e6 DBB2     		uxtb	r3, r3
 3330 09e8 1946     		mov	r1, r3
 3331 09ea 644B     		ldr	r3, .L223+36
 3332 09ec 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3333 09f0 9A42     		cmp	r2, r3
 3334 09f2 2AD2     		bcs	.L85
 754:main.c        ****                         {
 755:main.c        ****                             if (main_counter == 0)
 3335              		.loc 1 755 0
 3336 09f4 584B     		ldr	r3, .L223
 3337 09f6 1B78     		ldrb	r3, [r3]
 3338 09f8 DBB2     		uxtb	r3, r3
 3339 09fa 002B     		cmp	r3, #0
 3340 09fc 17D1     		bne	.L86
 756:main.c        ****                             {
 757:main.c        ****                                 if (angle[main_counter] != 0)
 3341              		.loc 1 757 0
 3342 09fe 564B     		ldr	r3, .L223
 3343 0a00 1B78     		ldrb	r3, [r3]
 3344 0a02 DBB2     		uxtb	r3, r3
 3345 0a04 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 74


 3346 0a06 5B4B     		ldr	r3, .L223+28
 3347 0a08 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3348 0a0c 002B     		cmp	r3, #0
 3349 0a0e 1CD0     		beq	.L85
 758:main.c        ****                                 {
 759:main.c        ****                                      pedals_low[main_counter] = angle[main_counter];
 3350              		.loc 1 759 0
 3351 0a10 514B     		ldr	r3, .L223
 3352 0a12 1B78     		ldrb	r3, [r3]
 3353 0a14 DBB2     		uxtb	r3, r3
 3354 0a16 1A46     		mov	r2, r3
 3355 0a18 4F4B     		ldr	r3, .L223
 3356 0a1a 1B78     		ldrb	r3, [r3]
 3357 0a1c DBB2     		uxtb	r3, r3
 3358 0a1e 1946     		mov	r1, r3
 3359 0a20 544B     		ldr	r3, .L223+28
 3360 0a22 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3361 0a26 554B     		ldr	r3, .L223+36
 3362 0a28 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3363 0a2c 0DE0     		b	.L85
 3364              	.L86:
 760:main.c        ****                                      
 761:main.c        ****                                 }
 762:main.c        ****                             }
 763:main.c        ****                             else
 764:main.c        ****                             {
 765:main.c        ****                                 pedals_low[main_counter] = angle[main_counter];
 3365              		.loc 1 765 0
 3366 0a2e 4A4B     		ldr	r3, .L223
 3367 0a30 1B78     		ldrb	r3, [r3]
 3368 0a32 DBB2     		uxtb	r3, r3
 3369 0a34 1A46     		mov	r2, r3
 3370 0a36 484B     		ldr	r3, .L223
 3371 0a38 1B78     		ldrb	r3, [r3]
 3372 0a3a DBB2     		uxtb	r3, r3
 3373 0a3c 1946     		mov	r1, r3
 3374 0a3e 4D4B     		ldr	r3, .L223+28
 3375 0a40 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3376 0a44 4D4B     		ldr	r3, .L223+36
 3377 0a46 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3378              	.L85:
 766:main.c        ****                                
 767:main.c        ****                             }
 768:main.c        ****                             
 769:main.c        ****                         }
 770:main.c        ****                         if (angle[main_counter] > pedals_high[main_counter])
 3379              		.loc 1 770 0
 3380 0a4a 434B     		ldr	r3, .L223
 3381 0a4c 1B78     		ldrb	r3, [r3]
 3382 0a4e DBB2     		uxtb	r3, r3
 3383 0a50 1A46     		mov	r2, r3
 3384 0a52 484B     		ldr	r3, .L223+28
 3385 0a54 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3386 0a58 3F4B     		ldr	r3, .L223
 3387 0a5a 1B78     		ldrb	r3, [r3]
 3388 0a5c DBB2     		uxtb	r3, r3
 3389 0a5e 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 75


 3390 0a60 474B     		ldr	r3, .L223+40
 3391 0a62 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3392 0a66 9A42     		cmp	r2, r3
 3393 0a68 0DD9     		bls	.L83
 771:main.c        ****                         {
 772:main.c        ****                              pedals_high[main_counter] = angle[main_counter];
 3394              		.loc 1 772 0
 3395 0a6a 3B4B     		ldr	r3, .L223
 3396 0a6c 1B78     		ldrb	r3, [r3]
 3397 0a6e DBB2     		uxtb	r3, r3
 3398 0a70 1A46     		mov	r2, r3
 3399 0a72 394B     		ldr	r3, .L223
 3400 0a74 1B78     		ldrb	r3, [r3]
 3401 0a76 DBB2     		uxtb	r3, r3
 3402 0a78 1946     		mov	r1, r3
 3403 0a7a 3E4B     		ldr	r3, .L223+28
 3404 0a7c 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3405 0a80 3F4B     		ldr	r3, .L223+40
 3406 0a82 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3407              	.L83:
 773:main.c        ****                              
 774:main.c        ****                         }
 775:main.c        ****                     }
 776:main.c        ****                 }
 777:main.c        ****             }
 778:main.c        ****         }
 779:main.c        ****         
 780:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 781:main.c        ****         if (main_counter == 9)
 3408              		.loc 1 781 0
 3409 0a86 344B     		ldr	r3, .L223
 3410 0a88 1B78     		ldrb	r3, [r3]
 3411 0a8a DBB2     		uxtb	r3, r3
 3412 0a8c 092B     		cmp	r3, #9
 3413 0a8e 40F01681 		bne	.L88
 782:main.c        ****         {
 783:main.c        ****             if (!i2c_skipped[main_counter])
 3414              		.loc 1 783 0
 3415 0a92 314B     		ldr	r3, .L223
 3416 0a94 1B78     		ldrb	r3, [r3]
 3417 0a96 DBB2     		uxtb	r3, r3
 3418 0a98 1A46     		mov	r2, r3
 3419 0a9a 324B     		ldr	r3, .L223+12
 3420 0a9c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3421 0a9e 002B     		cmp	r3, #0
 3422 0aa0 40F05C81 		bne	.L100
 784:main.c        ****             {
 785:main.c        ****                 //scan the knob adc
 786:main.c        ****                 I2Cbuff1[0] = 0x0;      
 3423              		.loc 1 786 0
 3424 0aa4 304B     		ldr	r3, .L223+16
 3425 0aa6 0022     		movs	r2, #0
 3426 0aa8 1A70     		strb	r2, [r3]
 787:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 3427              		.loc 1 787 0
 3428 0aaa 0022     		movs	r2, #0
 3429 0aac 1021     		movs	r1, #16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 76


 3430 0aae 3520     		movs	r0, #53
 3431 0ab0 FFF7FEFF 		bl	I2C_MasterReadBlocking
 3432 0ab4 0346     		mov	r3, r0
 3433 0ab6 1A46     		mov	r2, r3
 3434 0ab8 2C4B     		ldr	r3, .L223+20
 3435 0aba 1A60     		str	r2, [r3]
 788:main.c        ****                 if (status == 0)
 3436              		.loc 1 788 0
 3437 0abc 2B4B     		ldr	r3, .L223+20
 3438 0abe 1B68     		ldr	r3, [r3]
 3439 0ac0 002B     		cmp	r3, #0
 3440 0ac2 40F04B81 		bne	.L100
 3441              	.LBB24:
 789:main.c        ****                 {
 790:main.c        ****                     for (int i = 0; i < 8; i++)
 3442              		.loc 1 790 0
 3443 0ac6 0023     		movs	r3, #0
 3444 0ac8 C7F89C30 		str	r3, [r7, #156]
 3445 0acc 9CE0     		b	.L90
 3446              	.L97:
 3447              	.LBB25:
 791:main.c        ****                     {
 792:main.c        ****                        uint8_t myKnob = i+whichMacroPageIsActive;
 3448              		.loc 1 792 0
 3449 0ace D7F89C30 		ldr	r3, [r7, #156]
 3450 0ad2 DAB2     		uxtb	r2, r3
 3451 0ad4 2B4B     		ldr	r3, .L223+44
 3452 0ad6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3453 0ad8 1344     		add	r3, r3, r2
 3454 0ada BB72     		strb	r3, [r7, #10]
 793:main.c        ****                         uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[(i*2) + 1] & 255)) & 40
 3455              		.loc 1 793 0
 3456 0adc D7F89C30 		ldr	r3, [r7, #156]
 3457 0ae0 5B00     		lsls	r3, r3, #1
 3458 0ae2 234A     		ldr	r2, .L223+24
 3459 0ae4 D35C     		ldrb	r3, [r2, r3]
 3460 0ae6 DBB2     		uxtb	r3, r3
 3461 0ae8 9BB2     		uxth	r3, r3
 3462 0aea 1B02     		lsls	r3, r3, #8
 3463 0aec 9AB2     		uxth	r2, r3
 3464 0aee D7F89C30 		ldr	r3, [r7, #156]
 3465 0af2 5B00     		lsls	r3, r3, #1
 3466 0af4 0133     		adds	r3, r3, #1
 3467 0af6 1E49     		ldr	r1, .L223+24
 3468 0af8 CB5C     		ldrb	r3, [r1, r3]
 3469 0afa DBB2     		uxtb	r3, r3
 3470 0afc 9BB2     		uxth	r3, r3
 3471 0afe 1344     		add	r3, r3, r2
 3472 0b00 9BB2     		uxth	r3, r3
 3473 0b02 C3F30B03 		ubfx	r3, r3, #0, #12
 3474 0b06 3B81     		strh	r3, [r7, #8]	@ movhi
 794:main.c        ****                         int16_t tempSquished = 255 - (tempInt >> 4);
 3475              		.loc 1 794 0
 3476 0b08 3B89     		ldrh	r3, [r7, #8]
 3477 0b0a 1B09     		lsrs	r3, r3, #4
 3478 0b0c 9BB2     		uxth	r3, r3
 3479 0b0e C3F1FF03 		rsb	r3, r3, #255
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 77


 3480 0b12 9BB2     		uxth	r3, r3
 3481 0b14 FB80     		strh	r3, [r7, #6]	@ movhi
 795:main.c        ****                         if (knobFrozen[myKnob] == 1)
 3482              		.loc 1 795 0
 3483 0b16 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3484 0b18 1B4A     		ldr	r2, .L223+48
 3485 0b1a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3486 0b1c 012B     		cmp	r3, #1
 3487 0b1e 39D1     		bne	.L91
 796:main.c        ****                         {
 797:main.c        ****                             if ((tempSquished > prevMacroKnobValues[myKnob] + 4) || (tempSquished <
 3488              		.loc 1 797 0
 3489 0b20 B7F90620 		ldrsh	r2, [r7, #6]
 3490 0b24 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3491 0b26 1949     		ldr	r1, .L223+52
 3492 0b28 31F91330 		ldrsh	r3, [r1, r3, lsl #1]
 3493 0b2c 0433     		adds	r3, r3, #4
 3494 0b2e 9A42     		cmp	r2, r3
 3495 0b30 08DC     		bgt	.L92
 3496              		.loc 1 797 0 is_stmt 0 discriminator 1
 3497 0b32 B7F90620 		ldrsh	r2, [r7, #6]
 3498 0b36 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3499 0b38 1449     		ldr	r1, .L223+52
 3500 0b3a 31F91330 		ldrsh	r3, [r1, r3, lsl #1]
 3501 0b3e 043B     		subs	r3, r3, #4
 3502 0b40 9A42     		cmp	r2, r3
 3503 0b42 5CDA     		bge	.L94
 3504              	.L92:
 798:main.c        ****                             {
 799:main.c        ****                                 //update
 800:main.c        ****                                 macroKnobValues[myKnob] = tempSquished;
 3505              		.loc 1 800 0 is_stmt 1
 3506 0b44 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3507 0b46 FA88     		ldrh	r2, [r7, #6]	@ movhi
 3508 0b48 D1B2     		uxtb	r1, r2
 3509 0b4a 114A     		ldr	r2, .L223+56
 3510 0b4c D154     		strb	r1, [r2, r3]
 801:main.c        ****                                 knobFrozen[myKnob] = 0;
 3511              		.loc 1 801 0
 3512 0b4e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3513 0b50 0D4A     		ldr	r2, .L223+48
 3514 0b52 0021     		movs	r1, #0
 3515 0b54 D154     		strb	r1, [r2, r3]
 3516 0b56 52E0     		b	.L94
 3517              	.L224:
 3518              		.align	2
 3519              	.L223:
 3520 0b58 00000000 		.word	main_counter
 3521 0b5c 00000000 		.word	mux_states
 3522 0b60 00000000 		.word	last_mux
 3523 0b64 00000000 		.word	i2c_skipped
 3524 0b68 00000000 		.word	I2Cbuff1
 3525 0b6c 00000000 		.word	status
 3526 0b70 00000000 		.word	I2Cbuff2
 3527 0b74 00000000 		.word	angle
 3528 0b78 00000000 		.word	leverCalibrationMode
 3529 0b7c 00000000 		.word	pedals_low
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 78


 3530 0b80 00000000 		.word	pedals_high
 3531 0b84 00000000 		.word	whichMacroPageIsActive
 3532 0b88 00000000 		.word	knobFrozen
 3533 0b8c 00000000 		.word	prevMacroKnobValues
 3534 0b90 00000000 		.word	macroKnobValues
 3535              	.L91:
 802:main.c        ****                             }
 803:main.c        ****                         }
 804:main.c        ****                         else
 805:main.c        ****                         {
 806:main.c        ****                             macroKnobValues[myKnob] = tempSquished; //now squish it down to 8 bit f
 3536              		.loc 1 806 0
 3537 0b94 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3538 0b96 FA88     		ldrh	r2, [r7, #6]	@ movhi
 3539 0b98 D1B2     		uxtb	r1, r2
 3540 0b9a 8C4A     		ldr	r2, .L225
 3541 0b9c D154     		strb	r1, [r2, r3]
 807:main.c        ****                             if (midiSendOn)
 3542              		.loc 1 807 0
 3543 0b9e 8C4B     		ldr	r3, .L225+4
 3544 0ba0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3545 0ba2 002B     		cmp	r3, #0
 3546 0ba4 26D0     		beq	.L95
 808:main.c        ****                             {
 809:main.c        ****                                 macroKnobValues7bit[myKnob] = macroKnobValues[myKnob] >> 1;
 3547              		.loc 1 809 0
 3548 0ba6 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3549 0ba8 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 3550 0baa 8849     		ldr	r1, .L225
 3551 0bac 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 3552 0bae 5208     		lsrs	r2, r2, #1
 3553 0bb0 D1B2     		uxtb	r1, r2
 3554 0bb2 884A     		ldr	r2, .L225+8
 3555 0bb4 D154     		strb	r1, [r2, r3]
 810:main.c        ****                                 if (macroKnobValues7bit[myKnob] != prevMacroKnobValues7bit[myKnob])
 3556              		.loc 1 810 0
 3557 0bb6 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3558 0bb8 864A     		ldr	r2, .L225+8
 3559 0bba D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3560 0bbc BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3561 0bbe 8649     		ldr	r1, .L225+12
 3562 0bc0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 3563 0bc2 9A42     		cmp	r2, r3
 3564 0bc4 10D0     		beq	.L96
 811:main.c        ****                                 {
 812:main.c        ****                                     sendMIDIControlChange(i+1 + (3*whichMacroPageIsActive), macroKn
 3565              		.loc 1 812 0
 3566 0bc6 D7F89C30 		ldr	r3, [r7, #156]
 3567 0bca 5A1C     		adds	r2, r3, #1
 3568 0bcc 834B     		ldr	r3, .L225+16
 3569 0bce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3570 0bd0 1946     		mov	r1, r3
 3571 0bd2 0B46     		mov	r3, r1
 3572 0bd4 5B00     		lsls	r3, r3, #1
 3573 0bd6 0B44     		add	r3, r3, r1
 3574 0bd8 D018     		adds	r0, r2, r3
 3575 0bda BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 79


 3576 0bdc 7D4A     		ldr	r2, .L225+8
 3577 0bde D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3578 0be0 0022     		movs	r2, #0
 3579 0be2 1946     		mov	r1, r3
 3580 0be4 FFF7FEFF 		bl	sendMIDIControlChange
 3581              	.L96:
 813:main.c        ****                                 }
 814:main.c        ****                                 prevMacroKnobValues7bit[myKnob] = macroKnobValues7bit[myKnob];
 3582              		.loc 1 814 0
 3583 0be8 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3584 0bea BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 3585 0bec 7949     		ldr	r1, .L225+8
 3586 0bee 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3587 0bf0 794A     		ldr	r2, .L225+12
 3588 0bf2 D154     		strb	r1, [r2, r3]
 3589              	.L95:
 815:main.c        ****                             }
 816:main.c        ****                             prevMacroKnobValues[myKnob] =  tempSquished;
 3590              		.loc 1 816 0
 3591 0bf4 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3592 0bf6 7A49     		ldr	r1, .L225+20
 3593 0bf8 FA88     		ldrh	r2, [r7, #6]	@ movhi
 3594 0bfa 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 3595              	.L94:
 3596              	.LBE25:
 790:main.c        ****                     {
 3597              		.loc 1 790 0 discriminator 2
 3598 0bfe D7F89C30 		ldr	r3, [r7, #156]
 3599 0c02 0133     		adds	r3, r3, #1
 3600 0c04 C7F89C30 		str	r3, [r7, #156]
 3601              	.L90:
 790:main.c        ****                     {
 3602              		.loc 1 790 0 is_stmt 0 discriminator 1
 3603 0c08 D7F89C30 		ldr	r3, [r7, #156]
 3604 0c0c 072B     		cmp	r3, #7
 3605 0c0e 7FF75EAF 		ble	.L97
 3606              	.LBE24:
 817:main.c        ****                         }
 818:main.c        **** 
 819:main.c        ****                     }
 820:main.c        ****                     //
 821:main.c        ****                     if (macroOLEDWaitingToSend == 2)
 3607              		.loc 1 821 0 is_stmt 1
 3608 0c12 744B     		ldr	r3, .L225+24
 3609 0c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3610 0c16 022B     		cmp	r3, #2
 3611 0c18 40F0A080 		bne	.L100
 822:main.c        ****                     {
 823:main.c        ****                         //send the data to the little macro OLED screens
 824:main.c        ****                         
 825:main.c        ****                         I2Cbuff1[0] = (1 << 3) + whichMacro;
 3612              		.loc 1 825 0
 3613 0c1c 724B     		ldr	r3, .L225+28
 3614 0c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3615 0c20 0833     		adds	r3, r3, #8
 3616 0c22 DAB2     		uxtb	r2, r3
 3617 0c24 714B     		ldr	r3, .L225+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 80


 3618 0c26 1A70     		strb	r2, [r3]
 826:main.c        ****                         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 3619              		.loc 1 826 0
 3620 0c28 0022     		movs	r2, #0
 3621 0c2a 0121     		movs	r1, #1
 3622 0c2c 7220     		movs	r0, #114
 3623 0c2e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3624 0c32 0346     		mov	r3, r0
 3625 0c34 1A46     		mov	r2, r3
 3626 0c36 6E4B     		ldr	r3, .L225+36
 3627 0c38 1A60     		str	r2, [r3]
 827:main.c        ****                         //OLED_init(128, 32);
 828:main.c        ****                         OLEDclear(128, 32);
 3628              		.loc 1 828 0
 3629 0c3a 2021     		movs	r1, #32
 3630 0c3c 8020     		movs	r0, #128
 3631 0c3e FFF7FEFF 		bl	OLEDclear
 829:main.c        ****                         //OLEDwriteInt(w , 1, 0,FirstLine);
 830:main.c        ****                         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 831:main.c        ****                         myGFX_setFont(1);
 3632              		.loc 1 831 0
 3633 0c42 0120     		movs	r0, #1
 3634 0c44 FFF7FEFF 		bl	myGFX_setFont
 832:main.c        ****                          //make sure we didn't switch stuff while the display was updating
 833:main.c        ****                         if ((presetWhenMacroWriteStarted != patchNum)  || (macroPageWhenMacroWriteS
 3635              		.loc 1 833 0
 3636 0c48 6A4B     		ldr	r3, .L225+40
 3637 0c4a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3638 0c4c 6A4B     		ldr	r3, .L225+44
 3639 0c4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3640 0c50 9A42     		cmp	r2, r3
 3641 0c52 05D1     		bne	.L98
 3642              		.loc 1 833 0 is_stmt 0 discriminator 1
 3643 0c54 694B     		ldr	r3, .L225+48
 3644 0c56 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3645 0c58 604B     		ldr	r3, .L225+16
 3646 0c5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3647 0c5c 9A42     		cmp	r2, r3
 3648 0c5e 02D0     		beq	.L99
 3649              	.L98:
 834:main.c        ****                         {
 835:main.c        ****                             whichMacro = 0;
 3650              		.loc 1 835 0 is_stmt 1
 3651 0c60 614B     		ldr	r3, .L225+28
 3652 0c62 0022     		movs	r2, #0
 3653 0c64 1A70     		strb	r2, [r3]
 3654              	.L99:
 836:main.c        ****                         }
 837:main.c        ****                         //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
 838:main.c        ****                         OLEDwriteLineMiddle((char *)&macroNamesArray[patchNum][whichMacro+whichMacr
 3655              		.loc 1 838 0
 3656 0c66 644B     		ldr	r3, .L225+44
 3657 0c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3658 0c6a 1946     		mov	r1, r3
 3659 0c6c 5E4B     		ldr	r3, .L225+28
 3660 0c6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3661 0c70 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 81


 3662 0c72 5A4B     		ldr	r3, .L225+16
 3663 0c74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3664 0c76 1344     		add	r3, r3, r2
 3665 0c78 1A46     		mov	r2, r3
 3666 0c7a D200     		lsls	r2, r2, #3
 3667 0c7c 1A44     		add	r2, r2, r3
 3668 0c7e 0B46     		mov	r3, r1
 3669 0c80 DB00     		lsls	r3, r3, #3
 3670 0c82 0B44     		add	r3, r3, r1
 3671 0c84 1B01     		lsls	r3, r3, #4
 3672 0c86 1344     		add	r3, r3, r2
 3673 0c88 5D4A     		ldr	r2, .L225+52
 3674 0c8a 1344     		add	r3, r3, r2
 3675 0c8c 0921     		movs	r1, #9
 3676 0c8e 1846     		mov	r0, r3
 3677 0c90 FFF7FEFF 		bl	OLEDwriteLineMiddle
 839:main.c        ****                         OLED_draw(128, 32);
 3678              		.loc 1 839 0
 3679 0c94 2021     		movs	r1, #32
 3680 0c96 8020     		movs	r0, #128
 3681 0c98 FFF7FEFF 		bl	OLED_draw
 840:main.c        **** 
 841:main.c        ****                         whichMacro++;
 3682              		.loc 1 841 0
 3683 0c9c 524B     		ldr	r3, .L225+28
 3684 0c9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3685 0ca0 0133     		adds	r3, r3, #1
 3686 0ca2 DAB2     		uxtb	r2, r3
 3687 0ca4 504B     		ldr	r3, .L225+28
 3688 0ca6 1A70     		strb	r2, [r3]
 842:main.c        ****                         if (whichMacro >= NUM_MACROS)
 3689              		.loc 1 842 0
 3690 0ca8 4F4B     		ldr	r3, .L225+28
 3691 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3692 0cac 072B     		cmp	r3, #7
 3693 0cae 55D9     		bls	.L100
 843:main.c        ****                         {
 844:main.c        ****                             macroOLEDWaitingToSend = 0;
 3694              		.loc 1 844 0
 3695 0cb0 4C4B     		ldr	r3, .L225+24
 3696 0cb2 0022     		movs	r2, #0
 3697 0cb4 1A70     		strb	r2, [r3]
 845:main.c        ****                             whichMacro = 0;
 3698              		.loc 1 845 0
 3699 0cb6 4C4B     		ldr	r3, .L225+28
 3700 0cb8 0022     		movs	r2, #0
 3701 0cba 1A70     		strb	r2, [r3]
 3702 0cbc 4EE0     		b	.L100
 3703              	.L88:
 846:main.c        ****                            
 847:main.c        **** 
 848:main.c        ****                         }
 849:main.c        ****                     }
 850:main.c        ****                 }
 851:main.c        ****             }
 852:main.c        ****             
 853:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 82


 854:main.c        ****         //otherwise it's the ADC for the foot pedal
 855:main.c        ****         else if (main_counter == 10)
 3704              		.loc 1 855 0
 3705 0cbe 514B     		ldr	r3, .L225+56
 3706 0cc0 1B78     		ldrb	r3, [r3]
 3707 0cc2 DBB2     		uxtb	r3, r3
 3708 0cc4 0A2B     		cmp	r3, #10
 3709 0cc6 2AD1     		bne	.L101
 856:main.c        ****         {
 857:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 858:main.c        ****             if (!i2c_skipped[main_counter])
 3710              		.loc 1 858 0
 3711 0cc8 4E4B     		ldr	r3, .L225+56
 3712 0cca 1B78     		ldrb	r3, [r3]
 3713 0ccc DBB2     		uxtb	r3, r3
 3714 0cce 1A46     		mov	r2, r3
 3715 0cd0 4D4B     		ldr	r3, .L225+60
 3716 0cd2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3717 0cd4 002B     		cmp	r3, #0
 3718 0cd6 41D1     		bne	.L100
 859:main.c        ****             {
 860:main.c        ****                 I2Cbuff1[0] = 0x0;      
 3719              		.loc 1 860 0
 3720 0cd8 444B     		ldr	r3, .L225+32
 3721 0cda 0022     		movs	r2, #0
 3722 0cdc 1A70     		strb	r2, [r3]
 861:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 3723              		.loc 1 861 0
 3724 0cde 0022     		movs	r2, #0
 3725 0ce0 0221     		movs	r1, #2
 3726 0ce2 4F20     		movs	r0, #79
 3727 0ce4 FFF7FEFF 		bl	I2C_MasterReadBlocking
 3728 0ce8 0346     		mov	r3, r0
 3729 0cea 1A46     		mov	r2, r3
 3730 0cec 404B     		ldr	r3, .L225+36
 3731 0cee 1A60     		str	r2, [r3]
 862:main.c        ****                 if (status == 0)
 3732              		.loc 1 862 0
 3733 0cf0 3F4B     		ldr	r3, .L225+36
 3734 0cf2 1B68     		ldr	r3, [r3]
 3735 0cf4 002B     		cmp	r3, #0
 3736 0cf6 31D1     		bne	.L100
 863:main.c        ****                 {
 864:main.c        ****                     volumePedal = I2Cbuff2[0] << 8;
 3737              		.loc 1 864 0
 3738 0cf8 444B     		ldr	r3, .L225+64
 3739 0cfa 1B78     		ldrb	r3, [r3]
 3740 0cfc DBB2     		uxtb	r3, r3
 3741 0cfe 9BB2     		uxth	r3, r3
 3742 0d00 1B02     		lsls	r3, r3, #8
 3743 0d02 9AB2     		uxth	r2, r3
 3744 0d04 424B     		ldr	r3, .L225+68
 3745 0d06 1A80     		strh	r2, [r3]	@ movhi
 865:main.c        ****                     volumePedal +=  I2Cbuff2[1];
 3746              		.loc 1 865 0
 3747 0d08 404B     		ldr	r3, .L225+64
 3748 0d0a 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 83


 3749 0d0c DBB2     		uxtb	r3, r3
 3750 0d0e 9AB2     		uxth	r2, r3
 3751 0d10 3F4B     		ldr	r3, .L225+68
 3752 0d12 1B88     		ldrh	r3, [r3]
 3753 0d14 1344     		add	r3, r3, r2
 3754 0d16 9AB2     		uxth	r2, r3
 3755 0d18 3D4B     		ldr	r3, .L225+68
 3756 0d1a 1A80     		strh	r2, [r3]	@ movhi
 3757 0d1c 1EE0     		b	.L100
 3758              	.L101:
 866:main.c        ****                 }
 867:main.c        ****             }
 868:main.c        ****         }
 869:main.c        ****         else
 870:main.c        ****         if (main_counter == 11)
 3759              		.loc 1 870 0
 3760 0d1e 394B     		ldr	r3, .L225+56
 3761 0d20 1B78     		ldrb	r3, [r3]
 3762 0d22 DBB2     		uxtb	r3, r3
 3763 0d24 0B2B     		cmp	r3, #11
 3764 0d26 19D1     		bne	.L100
 871:main.c        ****         { 
 872:main.c        ****             if (mainOLEDWaitingToSend)
 3765              		.loc 1 872 0
 3766 0d28 3A4B     		ldr	r3, .L225+72
 3767 0d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3768 0d2c 002B     		cmp	r3, #0
 3769 0d2e 06D0     		beq	.L103
 873:main.c        ****             {
 874:main.c        ****                 OLED_draw(128, 64);
 3770              		.loc 1 874 0
 3771 0d30 4021     		movs	r1, #64
 3772 0d32 8020     		movs	r0, #128
 3773 0d34 FFF7FEFF 		bl	OLED_draw
 875:main.c        ****                 mainOLEDWaitingToSend = 0;
 3774              		.loc 1 875 0
 3775 0d38 364B     		ldr	r3, .L225+72
 3776 0d3a 0022     		movs	r2, #0
 3777 0d3c 1A70     		strb	r2, [r3]
 3778              	.L103:
 876:main.c        ****             }
 877:main.c        ****             if (macroOLEDWaitingToSend == 1)
 3779              		.loc 1 877 0
 3780 0d3e 294B     		ldr	r3, .L225+24
 3781 0d40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3782 0d42 012B     		cmp	r3, #1
 3783 0d44 0AD1     		bne	.L100
 878:main.c        ****             {
 879:main.c        ****                 macroOLEDWaitingToSend = 2;
 3784              		.loc 1 879 0
 3785 0d46 274B     		ldr	r3, .L225+24
 3786 0d48 0222     		movs	r2, #2
 3787 0d4a 1A70     		strb	r2, [r3]
 880:main.c        ****                 presetWhenMacroWriteStarted = patchNum;
 3788              		.loc 1 880 0
 3789 0d4c 2A4B     		ldr	r3, .L225+44
 3790 0d4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 84


 3791 0d50 284B     		ldr	r3, .L225+40
 3792 0d52 1A70     		strb	r2, [r3]
 881:main.c        ****                 macroPageWhenMacroWriteStarted = whichMacroPageIsActive;
 3793              		.loc 1 881 0
 3794 0d54 214B     		ldr	r3, .L225+16
 3795 0d56 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3796 0d58 284B     		ldr	r3, .L225+48
 3797 0d5a 1A70     		strb	r2, [r3]
 3798              	.L100:
 882:main.c        ****             }
 883:main.c        ****         }
 884:main.c        **** 
 885:main.c        ****        
 886:main.c        ****         
 887:main.c        ****         if (main_counter < 10)
 3799              		.loc 1 887 0
 3800 0d5c 294B     		ldr	r3, .L225+56
 3801 0d5e 1B78     		ldrb	r3, [r3]
 3802 0d60 DBB2     		uxtb	r3, r3
 3803 0d62 092B     		cmp	r3, #9
 3804 0d64 00F21681 		bhi	.L104
 3805              	.LBB26:
 888:main.c        ****         {
 889:main.c        ****             
 890:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
 891:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_lowWithDeadZone[ma
 3806              		.loc 1 891 0
 3807 0d68 264B     		ldr	r3, .L225+56
 3808 0d6a 1B78     		ldrb	r3, [r3]
 3809 0d6c DBB2     		uxtb	r3, r3
 3810 0d6e 1A46     		mov	r2, r3
 3811 0d70 294B     		ldr	r3, .L225+76
 3812 0d72 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3813 0d76 234B     		ldr	r3, .L225+56
 3814 0d78 1B78     		ldrb	r3, [r3]
 3815 0d7a DBB2     		uxtb	r3, r3
 3816 0d7c 1946     		mov	r1, r3
 3817 0d7e 274B     		ldr	r3, .L225+80
 3818 0d80 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3819 0d84 D31A     		subs	r3, r2, r3
 3820 0d86 9BB2     		uxth	r3, r3
 3821 0d88 BB86     		strh	r3, [r7, #52]	@ movhi
 892:main.c        ****             
 893:main.c        ****             if (tempangle > 0)
 3822              		.loc 1 893 0
 3823 0d8a B7F93430 		ldrsh	r3, [r7, #52]
 3824 0d8e 002B     		cmp	r3, #0
 3825 0d90 4ADD     		ble	.L105
 894:main.c        ****             {
 895:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 3826              		.loc 1 895 0
 3827 0d92 1C4B     		ldr	r3, .L225+56
 3828 0d94 1B78     		ldrb	r3, [r3]
 3829 0d96 DBB2     		uxtb	r3, r3
 3830 0d98 1C46     		mov	r4, r3
 3831 0d9a B7F93430 		ldrsh	r3, [r7, #52]
 3832 0d9e 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 85


 3833 0da0 FFF7FEFF 		bl	__aeabi_i2f
 3834 0da4 174B     		ldr	r3, .L225+56
 3835 0da6 1B78     		ldrb	r3, [r3]
 3836 0da8 DBB2     		uxtb	r3, r3
 3837 0daa 1A46     		mov	r2, r3
 3838 0dac 1C4B     		ldr	r3, .L225+84
 3839 0dae 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 3840 0db2 1946     		mov	r1, r3
 3841 0db4 FFF7FEFF 		bl	__aeabi_fmul
 3842 0db8 0346     		mov	r3, r0
 3843 0dba 1846     		mov	r0, r3
 3844 0dbc FFF7FEFF 		bl	__aeabi_f2uiz
 3845 0dc0 0346     		mov	r3, r0
 3846 0dc2 9AB2     		uxth	r2, r3
 3847 0dc4 174B     		ldr	r3, .L225+88
 3848 0dc6 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 3849 0dca 35E0     		b	.L106
 3850              	.L226:
 3851              		.align	2
 3852              	.L225:
 3853 0dcc 00000000 		.word	macroKnobValues
 3854 0dd0 00000000 		.word	midiSendOn
 3855 0dd4 00000000 		.word	macroKnobValues7bit
 3856 0dd8 00000000 		.word	prevMacroKnobValues7bit
 3857 0ddc 00000000 		.word	whichMacroPageIsActive
 3858 0de0 00000000 		.word	prevMacroKnobValues
 3859 0de4 00000000 		.word	macroOLEDWaitingToSend
 3860 0de8 00000000 		.word	whichMacro
 3861 0dec 00000000 		.word	I2Cbuff1
 3862 0df0 00000000 		.word	status
 3863 0df4 00000000 		.word	presetWhenMacroWriteStarted
 3864 0df8 00000000 		.word	patchNum
 3865 0dfc 00000000 		.word	macroPageWhenMacroWriteStarted
 3866 0e00 00000000 		.word	macroNamesArray
 3867 0e04 00000000 		.word	main_counter
 3868 0e08 00000000 		.word	i2c_skipped
 3869 0e0c 00000000 		.word	I2Cbuff2
 3870 0e10 00000000 		.word	volumePedal
 3871 0e14 00000000 		.word	mainOLEDWaitingToSend
 3872 0e18 00000000 		.word	angle
 3873 0e1c 00000000 		.word	pedals_lowWithDeadZone
 3874 0e20 00000000 		.word	pedalRatios
 3875 0e24 00000000 		.word	processed_pedals
 3876              	.L105:
 896:main.c        ****             }
 897:main.c        ****             else
 898:main.c        ****             {
 899:main.c        ****                 processed_pedals[main_counter] = 0;
 3877              		.loc 1 899 0
 3878 0e28 954B     		ldr	r3, .L227
 3879 0e2a 1B78     		ldrb	r3, [r3]
 3880 0e2c DBB2     		uxtb	r3, r3
 3881 0e2e 1A46     		mov	r2, r3
 3882 0e30 944B     		ldr	r3, .L227+4
 3883 0e32 0021     		movs	r1, #0
 3884 0e34 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3885              	.L106:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 86


 900:main.c        ****             }
 901:main.c        ****             if (processed_pedals[main_counter] > 4095)
 3886              		.loc 1 901 0
 3887 0e38 914B     		ldr	r3, .L227
 3888 0e3a 1B78     		ldrb	r3, [r3]
 3889 0e3c DBB2     		uxtb	r3, r3
 3890 0e3e 1A46     		mov	r2, r3
 3891 0e40 904B     		ldr	r3, .L227+4
 3892 0e42 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3893 0e46 B3F5805F 		cmp	r3, #4096
 3894 0e4a 08D3     		bcc	.L107
 902:main.c        ****             {
 903:main.c        ****                 processed_pedals[main_counter] = 4095;
 3895              		.loc 1 903 0
 3896 0e4c 8C4B     		ldr	r3, .L227
 3897 0e4e 1B78     		ldrb	r3, [r3]
 3898 0e50 DBB2     		uxtb	r3, r3
 3899 0e52 1A46     		mov	r2, r3
 3900 0e54 8B4B     		ldr	r3, .L227+4
 3901 0e56 40F6FF71 		movw	r1, #4095
 3902 0e5a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3903              	.L107:
 904:main.c        ****             }
 905:main.c        ****             //invert the ones that are sensing rotation backwards
 906:main.c        ****             if (pedal_inverted[main_counter])
 3904              		.loc 1 906 0
 3905 0e5e 884B     		ldr	r3, .L227
 3906 0e60 1B78     		ldrb	r3, [r3]
 3907 0e62 DBB2     		uxtb	r3, r3
 3908 0e64 1A46     		mov	r2, r3
 3909 0e66 884B     		ldr	r3, .L227+8
 3910 0e68 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3911 0e6a 002B     		cmp	r3, #0
 3912 0e6c 11D0     		beq	.L108
 907:main.c        ****             {
 908:main.c        ****                 processed_pedals[main_counter] = 4095 - processed_pedals[main_counter];
 3913              		.loc 1 908 0
 3914 0e6e 844B     		ldr	r3, .L227
 3915 0e70 1B78     		ldrb	r3, [r3]
 3916 0e72 DBB2     		uxtb	r3, r3
 3917 0e74 1A46     		mov	r2, r3
 3918 0e76 824B     		ldr	r3, .L227
 3919 0e78 1B78     		ldrb	r3, [r3]
 3920 0e7a DBB2     		uxtb	r3, r3
 3921 0e7c 1946     		mov	r1, r3
 3922 0e7e 814B     		ldr	r3, .L227+4
 3923 0e80 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3924 0e84 C3F57F63 		rsb	r3, r3, #4080
 3925 0e88 0F33     		adds	r3, r3, #15
 3926 0e8a 99B2     		uxth	r1, r3
 3927 0e8c 7D4B     		ldr	r3, .L227+4
 3928 0e8e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3929              	.L108:
 909:main.c        ****             }
 910:main.c        ****             
 911:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
 912:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 87


 913:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
 914:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
 915:main.c        ****             }
 916:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 3930              		.loc 1 916 0
 3931 0e92 7B4B     		ldr	r3, .L227
 3932 0e94 1B78     		ldrb	r3, [r3]
 3933 0e96 DBB2     		uxtb	r3, r3
 3934 0e98 1C46     		mov	r4, r3
 3935 0e9a 794B     		ldr	r3, .L227
 3936 0e9c 1B78     		ldrb	r3, [r3]
 3937 0e9e DBB2     		uxtb	r3, r3
 3938 0ea0 1A46     		mov	r2, r3
 3939 0ea2 784B     		ldr	r3, .L227+4
 3940 0ea4 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3941 0ea8 1846     		mov	r0, r3
 3942 0eaa FFF7FEFF 		bl	__aeabi_ui2f
 3943 0eae 0346     		mov	r3, r0
 3944 0eb0 7649     		ldr	r1, .L227+12
 3945 0eb2 1846     		mov	r0, r3
 3946 0eb4 FFF7FEFF 		bl	__aeabi_fmul
 3947 0eb8 0346     		mov	r3, r0
 3948 0eba 1A46     		mov	r2, r3
 3949 0ebc 744B     		ldr	r3, .L227+16
 3950 0ebe 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
 917:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[pedal_cc_assignments[main_counter]] 
 3951              		.loc 1 917 0
 3952 0ec2 6F4B     		ldr	r3, .L227
 3953 0ec4 1B78     		ldrb	r3, [r3]
 3954 0ec6 DBB2     		uxtb	r3, r3
 3955 0ec8 1C46     		mov	r4, r3
 3956 0eca 6D4B     		ldr	r3, .L227
 3957 0ecc 1B78     		ldrb	r3, [r3]
 3958 0ece DBB2     		uxtb	r3, r3
 3959 0ed0 1A46     		mov	r2, r3
 3960 0ed2 704B     		ldr	r3, .L227+20
 3961 0ed4 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3962 0ed6 1A46     		mov	r2, r3
 3963 0ed8 6A4B     		ldr	r3, .L227+4
 3964 0eda 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3965 0ede 1846     		mov	r0, r3
 3966 0ee0 FFF7FEFF 		bl	__aeabi_ui2f
 3967 0ee4 0346     		mov	r3, r0
 3968 0ee6 4FF07651 		mov	r1, #1031798784
 3969 0eea 1846     		mov	r0, r3
 3970 0eec FFF7FEFF 		bl	__aeabi_fmul
 3971 0ef0 0346     		mov	r3, r0
 3972 0ef2 1846     		mov	r0, r3
 3973 0ef4 FFF7FEFF 		bl	__aeabi_f2uiz
 3974 0ef8 0346     		mov	r3, r0
 3975 0efa DAB2     		uxtb	r2, r3
 3976 0efc 664B     		ldr	r3, .L227+24
 3977 0efe 1A55     		strb	r2, [r3, r4]
 918:main.c        ****             if (midiSendOn)
 3978              		.loc 1 918 0
 3979 0f00 664B     		ldr	r3, .L227+28
 3980 0f02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 88


 3981 0f04 002B     		cmp	r3, #0
 3982 0f06 36D0     		beq	.L109
 919:main.c        ****             {
 920:main.c        ****                 pedals7bit[main_counter] = pedals8bit[main_counter] >> 1;
 3983              		.loc 1 920 0
 3984 0f08 5D4B     		ldr	r3, .L227
 3985 0f0a 1B78     		ldrb	r3, [r3]
 3986 0f0c DBB2     		uxtb	r3, r3
 3987 0f0e 1A46     		mov	r2, r3
 3988 0f10 5B4B     		ldr	r3, .L227
 3989 0f12 1B78     		ldrb	r3, [r3]
 3990 0f14 DBB2     		uxtb	r3, r3
 3991 0f16 1946     		mov	r1, r3
 3992 0f18 5F4B     		ldr	r3, .L227+24
 3993 0f1a 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3994 0f1c 5B08     		lsrs	r3, r3, #1
 3995 0f1e D9B2     		uxtb	r1, r3
 3996 0f20 5F4B     		ldr	r3, .L227+32
 3997 0f22 9954     		strb	r1, [r3, r2]
 921:main.c        ****                 if (pedals7bit[main_counter] != prevPedals7bit[main_counter])
 3998              		.loc 1 921 0
 3999 0f24 564B     		ldr	r3, .L227
 4000 0f26 1B78     		ldrb	r3, [r3]
 4001 0f28 DBB2     		uxtb	r3, r3
 4002 0f2a 1A46     		mov	r2, r3
 4003 0f2c 5C4B     		ldr	r3, .L227+32
 4004 0f2e 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 4005 0f30 534B     		ldr	r3, .L227
 4006 0f32 1B78     		ldrb	r3, [r3]
 4007 0f34 DBB2     		uxtb	r3, r3
 4008 0f36 1946     		mov	r1, r3
 4009 0f38 5A4B     		ldr	r3, .L227+36
 4010 0f3a 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 4011 0f3c 9A42     		cmp	r2, r3
 4012 0f3e 0ED0     		beq	.L110
 922:main.c        ****                 {
 923:main.c        ****                     sendMIDIControlChange(main_counter + 14, (pedals7bit[main_counter]), 1);
 4013              		.loc 1 923 0
 4014 0f40 4F4B     		ldr	r3, .L227
 4015 0f42 1B78     		ldrb	r3, [r3]
 4016 0f44 DBB2     		uxtb	r3, r3
 4017 0f46 03F10E00 		add	r0, r3, #14
 4018 0f4a 4D4B     		ldr	r3, .L227
 4019 0f4c 1B78     		ldrb	r3, [r3]
 4020 0f4e DBB2     		uxtb	r3, r3
 4021 0f50 1A46     		mov	r2, r3
 4022 0f52 534B     		ldr	r3, .L227+32
 4023 0f54 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 4024 0f56 0122     		movs	r2, #1
 4025 0f58 1946     		mov	r1, r3
 4026 0f5a FFF7FEFF 		bl	sendMIDIControlChange
 4027              	.L110:
 924:main.c        ****                 }
 925:main.c        ****                 prevPedals7bit[main_counter] = pedals7bit[main_counter];
 4028              		.loc 1 925 0
 4029 0f5e 484B     		ldr	r3, .L227
 4030 0f60 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 89


 4031 0f62 DBB2     		uxtb	r3, r3
 4032 0f64 1A46     		mov	r2, r3
 4033 0f66 464B     		ldr	r3, .L227
 4034 0f68 1B78     		ldrb	r3, [r3]
 4035 0f6a DBB2     		uxtb	r3, r3
 4036 0f6c 1946     		mov	r1, r3
 4037 0f6e 4C4B     		ldr	r3, .L227+32
 4038 0f70 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 4039 0f72 4C4B     		ldr	r3, .L227+36
 4040 0f74 9954     		strb	r1, [r3, r2]
 4041              	.L109:
 926:main.c        ****             }
 927:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 4042              		.loc 1 927 0
 4043 0f76 424B     		ldr	r3, .L227
 4044 0f78 1B78     		ldrb	r3, [r3]
 4045 0f7a DBB2     		uxtb	r3, r3
 4046 0f7c 1A46     		mov	r2, r3
 4047 0f7e 404B     		ldr	r3, .L227
 4048 0f80 1B78     		ldrb	r3, [r3]
 4049 0f82 DBB2     		uxtb	r3, r3
 4050 0f84 1946     		mov	r1, r3
 4051 0f86 3F4B     		ldr	r3, .L227+4
 4052 0f88 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 4053 0f8c 464B     		ldr	r3, .L227+40
 4054 0f8e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 4055              	.LBE26:
 4056 0f92 41E0     		b	.L111
 4057              	.L104:
 928:main.c        ****         }
 929:main.c        ****         else
 930:main.c        ****         {
 931:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 4058              		.loc 1 931 0
 4059 0f94 454B     		ldr	r3, .L227+44
 4060 0f96 1B88     		ldrh	r3, [r3]
 4061 0f98 1846     		mov	r0, r3
 4062 0f9a FFF7FEFF 		bl	__aeabi_ui2f
 4063 0f9e 0346     		mov	r3, r0
 4064 0fa0 4349     		ldr	r1, .L227+48
 4065 0fa2 1846     		mov	r0, r3
 4066 0fa4 FFF7FEFF 		bl	__aeabi_fmul
 4067 0fa8 0346     		mov	r3, r0
 4068 0faa 1846     		mov	r0, r3
 4069 0fac FFF7FEFF 		bl	__aeabi_f2iz
 4070 0fb0 0346     		mov	r3, r0
 4071 0fb2 1AB2     		sxth	r2, r3
 4072 0fb4 3F4B     		ldr	r3, .L227+52
 4073 0fb6 1A80     		strh	r2, [r3]	@ movhi
 932:main.c        **** 
 933:main.c        ****             if (processed_volumePedal < 0)
 4074              		.loc 1 933 0
 4075 0fb8 3E4B     		ldr	r3, .L227+52
 4076 0fba B3F90030 		ldrsh	r3, [r3]
 4077 0fbe 002B     		cmp	r3, #0
 4078 0fc0 03DA     		bge	.L112
 934:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 90


 935:main.c        ****                 processed_volumePedal = 0;
 4079              		.loc 1 935 0
 4080 0fc2 3C4B     		ldr	r3, .L227+52
 4081 0fc4 0022     		movs	r2, #0
 4082 0fc6 1A80     		strh	r2, [r3]	@ movhi
 4083 0fc8 09E0     		b	.L113
 4084              	.L112:
 936:main.c        ****             }
 937:main.c        ****             else if (processed_volumePedal > 4095)
 4085              		.loc 1 937 0
 4086 0fca 3A4B     		ldr	r3, .L227+52
 4087 0fcc B3F90030 		ldrsh	r3, [r3]
 4088 0fd0 B3F5805F 		cmp	r3, #4096
 4089 0fd4 03DB     		blt	.L113
 938:main.c        ****             {
 939:main.c        ****                  processed_volumePedal = 4095;
 4090              		.loc 1 939 0
 4091 0fd6 374B     		ldr	r3, .L227+52
 4092 0fd8 40F6FF72 		movw	r2, #4095
 4093 0fdc 1A80     		strh	r2, [r3]	@ movhi
 4094              	.L113:
 940:main.c        ****             }
 941:main.c        ****             if (midiSendOn)
 4095              		.loc 1 941 0
 4096 0fde 2F4B     		ldr	r3, .L227+28
 4097 0fe0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4098 0fe2 002B     		cmp	r3, #0
 4099 0fe4 18D0     		beq	.L111
 942:main.c        ****             {
 943:main.c        ****                 u7bit_volumePedal = processed_volumePedal >> 5;
 4100              		.loc 1 943 0
 4101 0fe6 334B     		ldr	r3, .L227+52
 4102 0fe8 B3F90030 		ldrsh	r3, [r3]
 4103 0fec 5B11     		asrs	r3, r3, #5
 4104 0fee 1BB2     		sxth	r3, r3
 4105 0ff0 DAB2     		uxtb	r2, r3
 4106 0ff2 314B     		ldr	r3, .L227+56
 4107 0ff4 1A70     		strb	r2, [r3]
 944:main.c        ****                 if ( u7bit_volumePedal != prev_7bit_volumePedal)
 4108              		.loc 1 944 0
 4109 0ff6 304B     		ldr	r3, .L227+56
 4110 0ff8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4111 0ffa 304B     		ldr	r3, .L227+60
 4112 0ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4113 0ffe 9A42     		cmp	r2, r3
 4114 1000 06D0     		beq	.L114
 945:main.c        ****                 {
 946:main.c        ****                     //uint16_t tempPedal = processed_volumePedal;
 947:main.c        ****                     
 948:main.c        ****                     sendMIDIControlChange(13, u7bit_volumePedal, 0);
 4115              		.loc 1 948 0
 4116 1002 2D4B     		ldr	r3, .L227+56
 4117 1004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4118 1006 0022     		movs	r2, #0
 4119 1008 1946     		mov	r1, r3
 4120 100a 0D20     		movs	r0, #13
 4121 100c FFF7FEFF 		bl	sendMIDIControlChange
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 91


 4122              	.L114:
 949:main.c        ****                     //sendMIDIControlChange(22, ( tempPedal & 127), 0);
 950:main.c        ****                 }
 951:main.c        ****                  //prev_processed_volumePedal = processed_volumePedal;
 952:main.c        ****                 prev_7bit_volumePedal = u7bit_volumePedal;
 4123              		.loc 1 952 0
 4124 1010 294B     		ldr	r3, .L227+56
 4125 1012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4126 1014 294B     		ldr	r3, .L227+60
 4127 1016 1A70     		strb	r2, [r3]
 4128              	.L111:
 953:main.c        ****             }
 954:main.c        ****         }
 955:main.c        ****         
 956:main.c        ****         main_counter++;
 4129              		.loc 1 956 0
 4130 1018 194B     		ldr	r3, .L227
 4131 101a 1B78     		ldrb	r3, [r3]
 4132 101c DBB2     		uxtb	r3, r3
 4133 101e 0133     		adds	r3, r3, #1
 4134 1020 DAB2     		uxtb	r2, r3
 4135 1022 174B     		ldr	r3, .L227
 4136 1024 1A70     		strb	r2, [r3]
 957:main.c        **** 
 958:main.c        ****         if (main_counter > 11)
 4137              		.loc 1 958 0
 4138 1026 164B     		ldr	r3, .L227
 4139 1028 1B78     		ldrb	r3, [r3]
 4140 102a DBB2     		uxtb	r3, r3
 4141 102c 0B2B     		cmp	r3, #11
 4142 102e 02D9     		bls	.L115
 959:main.c        ****         {
 960:main.c        ****             main_counter = 0;
 4143              		.loc 1 960 0
 4144 1030 134B     		ldr	r3, .L227
 4145 1032 0022     		movs	r2, #0
 4146 1034 1A70     		strb	r2, [r3]
 4147              	.L115:
 961:main.c        ****         }
 962:main.c        ****         //testpin3_Write(0);
 963:main.c        **** 
 964:main.c        ****        // testpin5_Write(1);
 965:main.c        ****         
 966:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 4148              		.loc 1 966 0
 4149 1036 224B     		ldr	r3, .L227+64
 4150 1038 1B78     		ldrb	r3, [r3]
 4151 103a DBB2     		uxtb	r3, r3
 4152 103c 002B     		cmp	r3, #0
 4153 103e 0CBF     		ite	eq
 4154 1040 0123     		moveq	r3, #1
 4155 1042 0023     		movne	r3, #0
 4156 1044 DBB2     		uxtb	r3, r3
 4157 1046 1F4A     		ldr	r2, .L227+68
 4158 1048 DB00     		lsls	r3, r3, #3
 4159 104a 1344     		add	r3, r3, r2
 4160 104c 9B79     		ldrb	r3, [r3, #6]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 92


 4161 104e DBB2     		uxtb	r3, r3
 4162 1050 FE2B     		cmp	r3, #254
 4163 1052 40F07381 		bne	.L116
 4164              		.loc 1 966 0 is_stmt 0 discriminator 1
 4165 1056 1A4B     		ldr	r3, .L227+64
 4166 1058 1B78     		ldrb	r3, [r3]
 4167 105a DBB2     		uxtb	r3, r3
 4168 105c 002B     		cmp	r3, #0
 4169 105e 0CBF     		ite	eq
 4170 1060 0123     		moveq	r3, #1
 4171 1062 0023     		movne	r3, #0
 4172 1064 DBB2     		uxtb	r3, r3
 4173 1066 174A     		ldr	r2, .L227+68
 4174 1068 DB00     		lsls	r3, r3, #3
 4175 106a 1344     		add	r3, r3, r2
 4176 106c DB79     		ldrb	r3, [r3, #7]
 4177 106e DBB2     		uxtb	r3, r3
 4178 1070 FD2B     		cmp	r3, #253
 4179 1072 40F06381 		bne	.L116
 4180              	.LBB27:
 967:main.c        ****         {
 968:main.c        ****             for (int i = 0; i < NUM_SLIDERS; i++)
 4181              		.loc 1 968 0 is_stmt 1
 4182 1076 0023     		movs	r3, #0
 4183 1078 C7F89830 		str	r3, [r7, #152]
 4184 107c 59E1     		b	.L117
 4185              	.L228:
 4186 107e 00BF     		.align	2
 4187              	.L227:
 4188 1080 00000000 		.word	main_counter
 4189 1084 00000000 		.word	processed_pedals
 4190 1088 00000000 		.word	pedal_inverted
 4191 108c 01088039 		.word	964691969
 4192 1090 00000000 		.word	pedals_float
 4193 1094 00000000 		.word	pedal_cc_assignments
 4194 1098 00000000 		.word	pedals8bit
 4195 109c 00000000 		.word	midiSendOn
 4196 10a0 00000000 		.word	pedals7bit
 4197 10a4 00000000 		.word	prevPedals7bit
 4198 10a8 00000000 		.word	prev_processed_pedals
 4199 10ac 00000000 		.word	volumePedal
 4200 10b0 C5F1803F 		.word	1065415109
 4201 10b4 00000000 		.word	processed_volumePedal
 4202 10b8 00000000 		.word	u7bit_volumePedal
 4203 10bc 00000000 		.word	prev_7bit_volumePedal
 4204 10c0 00000000 		.word	currentBarBuffer
 4205 10c4 00000000 		.word	rxBufferBar
 4206              	.L126:
 969:main.c        ****             {
 970:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 4207              		.loc 1 970 0
 4208 10c8 B84B     		ldr	r3, .L229
 4209 10ca 1B78     		ldrb	r3, [r3]
 4210 10cc DBB2     		uxtb	r3, r3
 4211 10ce 002B     		cmp	r3, #0
 4212 10d0 0CBF     		ite	eq
 4213 10d2 0123     		moveq	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 93


 4214 10d4 0023     		movne	r3, #0
 4215 10d6 DBB2     		uxtb	r3, r3
 4216 10d8 1A46     		mov	r2, r3
 4217 10da D7F89830 		ldr	r3, [r7, #152]
 4218 10de 5B00     		lsls	r3, r3, #1
 4219 10e0 B349     		ldr	r1, .L229+4
 4220 10e2 D200     		lsls	r2, r2, #3
 4221 10e4 0A44     		add	r2, r2, r1
 4222 10e6 1344     		add	r3, r3, r2
 4223 10e8 1B78     		ldrb	r3, [r3]
 4224 10ea DBB2     		uxtb	r3, r3
 4225 10ec 9BB2     		uxth	r3, r3
 4226 10ee 1B02     		lsls	r3, r3, #8
 4227 10f0 9AB2     		uxth	r2, r3
 4228 10f2 AE4B     		ldr	r3, .L229
 4229 10f4 1B78     		ldrb	r3, [r3]
 4230 10f6 DBB2     		uxtb	r3, r3
 4231 10f8 002B     		cmp	r3, #0
 4232 10fa 0CBF     		ite	eq
 4233 10fc 0123     		moveq	r3, #1
 4234 10fe 0023     		movne	r3, #0
 4235 1100 DBB2     		uxtb	r3, r3
 4236 1102 1946     		mov	r1, r3
 4237 1104 D7F89830 		ldr	r3, [r7, #152]
 4238 1108 5B00     		lsls	r3, r3, #1
 4239 110a 0133     		adds	r3, r3, #1
 4240 110c A848     		ldr	r0, .L229+4
 4241 110e C900     		lsls	r1, r1, #3
 4242 1110 0144     		add	r1, r1, r0
 4243 1112 0B44     		add	r3, r3, r1
 4244 1114 1B78     		ldrb	r3, [r3]
 4245 1116 DBB2     		uxtb	r3, r3
 4246 1118 9BB2     		uxth	r3, r3
 4247 111a 1344     		add	r3, r3, r2
 4248 111c 99B2     		uxth	r1, r3
 4249 111e A54A     		ldr	r2, .L229+8
 4250 1120 D7F89830 		ldr	r3, [r7, #152]
 4251 1124 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 971:main.c        ****                 //
 972:main.c        ****                 if(bar[i] != prevBar[i])
 4252              		.loc 1 972 0
 4253 1128 A24A     		ldr	r2, .L229+8
 4254 112a D7F89830 		ldr	r3, [r7, #152]
 4255 112e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4256 1132 9AB2     		uxth	r2, r3
 4257 1134 A049     		ldr	r1, .L229+12
 4258 1136 D7F89830 		ldr	r3, [r7, #152]
 4259 113a 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 4260 113e 9BB2     		uxth	r3, r3
 4261 1140 9A42     		cmp	r2, r3
 4262 1142 00F0E680 		beq	.L118
 973:main.c        ****                 {
 974:main.c        ****     				
 975:main.c        ****                     if ((bar[i] == 65535) || (bar[i] > fretMeasurements[i][0]))
 4263              		.loc 1 975 0
 4264 1146 9B4A     		ldr	r2, .L229+8
 4265 1148 D7F89830 		ldr	r3, [r7, #152]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 94


 4266 114c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4267 1150 9BB2     		uxth	r3, r3
 4268 1152 4FF6FF72 		movw	r2, #65535
 4269 1156 9342     		cmp	r3, r2
 4270 1158 10D0     		beq	.L119
 4271              		.loc 1 975 0 is_stmt 0 discriminator 1
 4272 115a 964A     		ldr	r2, .L229+8
 4273 115c D7F89830 		ldr	r3, [r7, #152]
 4274 1160 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4275 1164 99B2     		uxth	r1, r3
 4276 1166 9548     		ldr	r0, .L229+16
 4277 1168 D7F89820 		ldr	r2, [r7, #152]
 4278 116c 1346     		mov	r3, r2
 4279 116e 5B00     		lsls	r3, r3, #1
 4280 1170 1344     		add	r3, r3, r2
 4281 1172 DB00     		lsls	r3, r3, #3
 4282 1174 0344     		add	r3, r3, r0
 4283 1176 1B88     		ldrh	r3, [r3]
 4284 1178 9942     		cmp	r1, r3
 4285 117a 07D9     		bls	.L120
 4286              	.L119:
 976:main.c        ****     				{
 977:main.c        ****     					stringMappedPositionsInRatios[i] = 1.0f;
 4287              		.loc 1 977 0 is_stmt 1
 4288 117c 904A     		ldr	r2, .L229+20
 4289 117e D7F89830 		ldr	r3, [r7, #152]
 4290 1182 4FF07E51 		mov	r1, #1065353216
 4291 1186 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 4292 118a C2E0     		b	.L118
 4293              	.L120:
 978:main.c        ****     				}
 979:main.c        ****                     else if (bar[i] > fretMeasurements[i][NUM_FRET_MEASUREMENTS-1])
 4294              		.loc 1 979 0
 4295 118c 894A     		ldr	r2, .L229+8
 4296 118e D7F89830 		ldr	r3, [r7, #152]
 4297 1192 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4298 1196 99B2     		uxth	r1, r3
 4299 1198 8848     		ldr	r0, .L229+16
 4300 119a D7F89820 		ldr	r2, [r7, #152]
 4301 119e 1346     		mov	r3, r2
 4302 11a0 5B00     		lsls	r3, r3, #1
 4303 11a2 1344     		add	r3, r3, r2
 4304 11a4 DB00     		lsls	r3, r3, #3
 4305 11a6 0344     		add	r3, r3, r0
 4306 11a8 1633     		adds	r3, r3, #22
 4307 11aa 1B88     		ldrh	r3, [r3]
 4308 11ac 9942     		cmp	r1, r3
 4309 11ae 79D9     		bls	.L121
 4310              	.LBB28:
 980:main.c        ****                     {
 981:main.c        ****                         for (int j = 0; j < NUM_FRET_MEASUREMENTS-1; j++)
 4311              		.loc 1 981 0
 4312 11b0 0023     		movs	r3, #0
 4313 11b2 C7F89430 		str	r3, [r7, #148]
 4314 11b6 70E0     		b	.L122
 4315              	.L125:
 982:main.c        ****                         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 95


 983:main.c        ****                             if ((bar[i] <=  fretMeasurements[i][j]) && (bar[i] >  fretMeasurements[
 4316              		.loc 1 983 0
 4317 11b8 7E4A     		ldr	r2, .L229+8
 4318 11ba D7F89830 		ldr	r3, [r7, #152]
 4319 11be 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4320 11c2 99B2     		uxth	r1, r3
 4321 11c4 7D48     		ldr	r0, .L229+16
 4322 11c6 D7F89820 		ldr	r2, [r7, #152]
 4323 11ca 1346     		mov	r3, r2
 4324 11cc 5B00     		lsls	r3, r3, #1
 4325 11ce 1344     		add	r3, r3, r2
 4326 11d0 9B00     		lsls	r3, r3, #2
 4327 11d2 D7F89420 		ldr	r2, [r7, #148]
 4328 11d6 1344     		add	r3, r3, r2
 4329 11d8 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 4330 11dc 9942     		cmp	r1, r3
 4331 11de 57D8     		bhi	.L123
 4332              		.loc 1 983 0 is_stmt 0 discriminator 1
 4333 11e0 744A     		ldr	r2, .L229+8
 4334 11e2 D7F89830 		ldr	r3, [r7, #152]
 4335 11e6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4336 11ea 99B2     		uxth	r1, r3
 4337 11ec D7F89430 		ldr	r3, [r7, #148]
 4338 11f0 581C     		adds	r0, r3, #1
 4339 11f2 724C     		ldr	r4, .L229+16
 4340 11f4 D7F89820 		ldr	r2, [r7, #152]
 4341 11f8 1346     		mov	r3, r2
 4342 11fa 5B00     		lsls	r3, r3, #1
 4343 11fc 1344     		add	r3, r3, r2
 4344 11fe 9B00     		lsls	r3, r3, #2
 4345 1200 0344     		add	r3, r3, r0
 4346 1202 34F81330 		ldrh	r3, [r4, r3, lsl #1]
 4347 1206 9942     		cmp	r1, r3
 4348 1208 42D9     		bls	.L123
 984:main.c        ****                             {
 985:main.c        ****                                 stringMappedPositionsInRatios[i] = map((float)bar[i], fretMeasureme
 4349              		.loc 1 985 0 is_stmt 1
 4350 120a 6A4A     		ldr	r2, .L229+8
 4351 120c D7F89830 		ldr	r3, [r7, #152]
 4352 1210 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4353 1214 9BB2     		uxth	r3, r3
 4354 1216 1846     		mov	r0, r3
 4355 1218 FFF7FEFF 		bl	__aeabi_ui2f
 4356 121c 0446     		mov	r4, r0
 4357 121e 6749     		ldr	r1, .L229+16
 4358 1220 D7F89820 		ldr	r2, [r7, #152]
 4359 1224 1346     		mov	r3, r2
 4360 1226 5B00     		lsls	r3, r3, #1
 4361 1228 1344     		add	r3, r3, r2
 4362 122a 9B00     		lsls	r3, r3, #2
 4363 122c D7F89420 		ldr	r2, [r7, #148]
 4364 1230 1344     		add	r3, r3, r2
 4365 1232 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 4366 1236 1846     		mov	r0, r3
 4367 1238 FFF7FEFF 		bl	__aeabi_ui2f
 4368 123c 0546     		mov	r5, r0
 4369 123e D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 96


 4370 1242 591C     		adds	r1, r3, #1
 4371 1244 5D48     		ldr	r0, .L229+16
 4372 1246 D7F89820 		ldr	r2, [r7, #152]
 4373 124a 1346     		mov	r3, r2
 4374 124c 5B00     		lsls	r3, r3, #1
 4375 124e 1344     		add	r3, r3, r2
 4376 1250 9B00     		lsls	r3, r3, #2
 4377 1252 0B44     		add	r3, r3, r1
 4378 1254 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 4379 1258 1846     		mov	r0, r3
 4380 125a FFF7FEFF 		bl	__aeabi_ui2f
 4381 125e 594A     		ldr	r2, .L229+24
 4382 1260 D7F89430 		ldr	r3, [r7, #148]
 4383 1264 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 4384 1268 D7F89430 		ldr	r3, [r7, #148]
 4385 126c 0133     		adds	r3, r3, #1
 4386 126e 554A     		ldr	r2, .L229+24
 4387 1270 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4388 1274 0093     		str	r3, [sp]	@ float
 4389 1276 0B46     		mov	r3, r1
 4390 1278 0246     		mov	r2, r0
 4391 127a 2946     		mov	r1, r5
 4392 127c 2046     		mov	r0, r4
 4393 127e FFF7FEFF 		bl	map
 4394 1282 0146     		mov	r1, r0
 4395 1284 4E4A     		ldr	r2, .L229+20
 4396 1286 D7F89830 		ldr	r3, [r7, #152]
 4397 128a 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 986:main.c        ****                                 break;
 4398              		.loc 1 986 0
 4399 128e 40E0     		b	.L118
 4400              	.L123:
 981:main.c        ****                         {
 4401              		.loc 1 981 0 discriminator 2
 4402 1290 D7F89430 		ldr	r3, [r7, #148]
 4403 1294 0133     		adds	r3, r3, #1
 4404 1296 C7F89430 		str	r3, [r7, #148]
 4405              	.L122:
 981:main.c        ****                         {
 4406              		.loc 1 981 0 is_stmt 0 discriminator 1
 4407 129a D7F89430 		ldr	r3, [r7, #148]
 4408 129e 0A2B     		cmp	r3, #10
 4409 12a0 8ADD     		ble	.L125
 4410 12a2 36E0     		b	.L118
 4411              	.L121:
 4412              	.LBE28:
 987:main.c        ****                             }
 988:main.c        ****                         }
 989:main.c        ****                     }
 990:main.c        ****                     else
 991:main.c        ****                     {
 992:main.c        ****                         stringMappedPositionsInRatios[i] = map((float)bar[i], fretMeasurements[i][N
 4413              		.loc 1 992 0 is_stmt 1
 4414 12a4 434A     		ldr	r2, .L229+8
 4415 12a6 D7F89830 		ldr	r3, [r7, #152]
 4416 12aa 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4417 12ae 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 97


 4418 12b0 1846     		mov	r0, r3
 4419 12b2 FFF7FEFF 		bl	__aeabi_ui2f
 4420 12b6 0446     		mov	r4, r0
 4421 12b8 4049     		ldr	r1, .L229+16
 4422 12ba D7F89820 		ldr	r2, [r7, #152]
 4423 12be 1346     		mov	r3, r2
 4424 12c0 5B00     		lsls	r3, r3, #1
 4425 12c2 1344     		add	r3, r3, r2
 4426 12c4 DB00     		lsls	r3, r3, #3
 4427 12c6 0B44     		add	r3, r3, r1
 4428 12c8 1433     		adds	r3, r3, #20
 4429 12ca 1B88     		ldrh	r3, [r3]
 4430 12cc 1846     		mov	r0, r3
 4431 12ce FFF7FEFF 		bl	__aeabi_ui2f
 4432 12d2 0546     		mov	r5, r0
 4433 12d4 3949     		ldr	r1, .L229+16
 4434 12d6 D7F89820 		ldr	r2, [r7, #152]
 4435 12da 1346     		mov	r3, r2
 4436 12dc 5B00     		lsls	r3, r3, #1
 4437 12de 1344     		add	r3, r3, r2
 4438 12e0 DB00     		lsls	r3, r3, #3
 4439 12e2 0B44     		add	r3, r3, r1
 4440 12e4 1633     		adds	r3, r3, #22
 4441 12e6 1B88     		ldrh	r3, [r3]
 4442 12e8 1846     		mov	r0, r3
 4443 12ea FFF7FEFF 		bl	__aeabi_ui2f
 4444 12ee 0146     		mov	r1, r0
 4445 12f0 344B     		ldr	r3, .L229+24
 4446 12f2 9A6A     		ldr	r2, [r3, #40]	@ float
 4447 12f4 334B     		ldr	r3, .L229+24
 4448 12f6 DB6A     		ldr	r3, [r3, #44]	@ float
 4449 12f8 0093     		str	r3, [sp]	@ float
 4450 12fa 1346     		mov	r3, r2
 4451 12fc 0A46     		mov	r2, r1
 4452 12fe 2946     		mov	r1, r5
 4453 1300 2046     		mov	r0, r4
 4454 1302 FFF7FEFF 		bl	map
 4455 1306 0146     		mov	r1, r0
 4456 1308 2D4A     		ldr	r2, .L229+20
 4457 130a D7F89830 		ldr	r3, [r7, #152]
 4458 130e 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 4459              	.L118:
 993:main.c        ****                     }
 994:main.c        ****                 }
 995:main.c        ****                 //
 996:main.c        ****                 prevBar[i] = bar[i];
 4460              		.loc 1 996 0 discriminator 2
 4461 1312 284A     		ldr	r2, .L229+8
 4462 1314 D7F89830 		ldr	r3, [r7, #152]
 4463 1318 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4464 131c 99B2     		uxth	r1, r3
 4465 131e 264A     		ldr	r2, .L229+12
 4466 1320 D7F89830 		ldr	r3, [r7, #152]
 4467 1324 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 968:main.c        ****             {
 4468              		.loc 1 968 0 discriminator 2
 4469 1328 D7F89830 		ldr	r3, [r7, #152]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 98


 4470 132c 0133     		adds	r3, r3, #1
 4471 132e C7F89830 		str	r3, [r7, #152]
 4472              	.L117:
 968:main.c        ****             {
 4473              		.loc 1 968 0 is_stmt 0 discriminator 1
 4474 1332 D7F89830 		ldr	r3, [r7, #152]
 4475 1336 012B     		cmp	r3, #1
 4476 1338 7FF7C6AE 		ble	.L126
 4477              	.L116:
 4478              	.LBE27:
 997:main.c        ****             }
 998:main.c        ****         }
 999:main.c        ****         
1000:main.c        ****         //testpin5_Write(0);
1001:main.c        ****         if (midiSendOn)
 4479              		.loc 1 1001 0 is_stmt 1
 4480 133c 224B     		ldr	r3, .L229+28
 4481 133e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4482 1340 002B     		cmp	r3, #0
 4483 1342 2CD0     		beq	.L127
 4484              	.LBB29:
1002:main.c        ****         {
1003:main.c        ****             for (int i = 0 ; i < numStrings; i++)
 4485              		.loc 1 1003 0
 4486 1344 0023     		movs	r3, #0
 4487 1346 C7F89030 		str	r3, [r7, #144]
 4488 134a 21E0     		b	.L128
 4489              	.L130:
1004:main.c        ****             {
1005:main.c        ****                 if (strings[i] != prevStrings[i])
 4490              		.loc 1 1005 0
 4491 134c 1F4A     		ldr	r2, .L229+32
 4492 134e D7F89030 		ldr	r3, [r7, #144]
 4493 1352 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4494 1356 9AB2     		uxth	r2, r3
 4495 1358 1D49     		ldr	r1, .L229+36
 4496 135a D7F89030 		ldr	r3, [r7, #144]
 4497 135e 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 4498 1362 9BB2     		uxth	r3, r3
 4499 1364 9A42     		cmp	r2, r3
 4500 1366 03D0     		beq	.L129
1006:main.c        ****                 {
1007:main.c        ****                     noteEvent(i);
 4501              		.loc 1 1007 0
 4502 1368 D7F89000 		ldr	r0, [r7, #144]
 4503 136c FFF7FEFF 		bl	noteEvent
 4504              	.L129:
1008:main.c        ****                 }
1009:main.c        ****                 prevStrings[i] = strings[i];
 4505              		.loc 1 1009 0 discriminator 2
 4506 1370 164A     		ldr	r2, .L229+32
 4507 1372 D7F89030 		ldr	r3, [r7, #144]
 4508 1376 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4509 137a 99B2     		uxth	r1, r3
 4510 137c 144A     		ldr	r2, .L229+36
 4511 137e D7F89030 		ldr	r3, [r7, #144]
 4512 1382 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 99


1003:main.c        ****             {
 4513              		.loc 1 1003 0 discriminator 2
 4514 1386 D7F89030 		ldr	r3, [r7, #144]
 4515 138a 0133     		adds	r3, r3, #1
 4516 138c C7F89030 		str	r3, [r7, #144]
 4517              	.L128:
1003:main.c        ****             {
 4518              		.loc 1 1003 0 is_stmt 0 discriminator 1
 4519 1390 104B     		ldr	r3, .L229+40
 4520 1392 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4521 1394 1A46     		mov	r2, r3
 4522 1396 D7F89030 		ldr	r3, [r7, #144]
 4523 139a 9A42     		cmp	r2, r3
 4524 139c D6DC     		bgt	.L130
 4525              	.L127:
 4526              	.LBE29:
1010:main.c        ****             }
1011:main.c        ****         }
1012:main.c        ****        
1013:main.c        ****         scanUI();
 4527              		.loc 1 1013 0 is_stmt 1
 4528 139e FFF7FEFF 		bl	scanUI
 4529              	.LBB30:
1014:main.c        ****         
1015:main.c        ****         for (int i=  0; i < 4; i++)
 4530              		.loc 1 1015 0
 4531 13a2 0023     		movs	r3, #0
 4532 13a4 C7F88C30 		str	r3, [r7, #140]
 4533 13a8 71E0     		b	.L131
 4534              	.L230:
 4535 13aa 00BF     		.align	2
 4536              	.L229:
 4537 13ac 00000000 		.word	currentBarBuffer
 4538 13b0 00000000 		.word	rxBufferBar
 4539 13b4 00000000 		.word	bar
 4540 13b8 00000000 		.word	prevBar
 4541 13bc 00000000 		.word	fretMeasurements
 4542 13c0 00000000 		.word	stringMappedPositionsInRatios
 4543 13c4 00000000 		.word	fretScalingInRatios
 4544 13c8 00000000 		.word	midiSendOn
 4545 13cc 00000000 		.word	strings
 4546 13d0 00000000 		.word	prevStrings
 4547 13d4 00000000 		.word	numStrings
 4548              	.L135:
1016:main.c        ****         {
1017:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)>>4); //divide by 16
 4549              		.loc 1 1017 0
 4550 13d8 D7F88C30 		ldr	r3, [r7, #140]
 4551 13dc 9BB2     		uxth	r3, r3
 4552 13de 1846     		mov	r0, r3
 4553 13e0 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4554 13e4 0346     		mov	r3, r0
 4555 13e6 1B11     		asrs	r3, r3, #4
 4556 13e8 1BB2     		sxth	r3, r3
 4557 13ea D9B2     		uxtb	r1, r3
 4558 13ec 444A     		ldr	r2, .L231
 4559 13ee D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 100


 4560 13f2 1344     		add	r3, r3, r2
 4561 13f4 0A46     		mov	r2, r1
 4562 13f6 1A70     		strb	r2, [r3]
1018:main.c        ****             if (i != 2) // all are backwards except X axis
 4563              		.loc 1 1018 0
 4564 13f8 D7F88C30 		ldr	r3, [r7, #140]
 4565 13fc 022B     		cmp	r3, #2
 4566 13fe 0CD0     		beq	.L132
1019:main.c        ****             {
1020:main.c        ****                 knobs[i] = 255 - knobs[i];
 4567              		.loc 1 1020 0
 4568 1400 3F4A     		ldr	r2, .L231
 4569 1402 D7F88C30 		ldr	r3, [r7, #140]
 4570 1406 1344     		add	r3, r3, r2
 4571 1408 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4572 140a DB43     		mvns	r3, r3
 4573 140c D9B2     		uxtb	r1, r3
 4574 140e 3C4A     		ldr	r2, .L231
 4575 1410 D7F88C30 		ldr	r3, [r7, #140]
 4576 1414 1344     		add	r3, r3, r2
 4577 1416 0A46     		mov	r2, r1
 4578 1418 1A70     		strb	r2, [r3]
 4579              	.L132:
1021:main.c        ****             }
1022:main.c        ****             if (midiSendOn)
 4580              		.loc 1 1022 0
 4581 141a 3A4B     		ldr	r3, .L231+4
 4582 141c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4583 141e 002B     		cmp	r3, #0
 4584 1420 30D0     		beq	.L133
1023:main.c        ****             {
1024:main.c        ****                 knobs7bit[i] = knobs[i] >> 1;
 4585              		.loc 1 1024 0
 4586 1422 374A     		ldr	r2, .L231
 4587 1424 D7F88C30 		ldr	r3, [r7, #140]
 4588 1428 1344     		add	r3, r3, r2
 4589 142a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4590 142c 5B08     		lsrs	r3, r3, #1
 4591 142e D9B2     		uxtb	r1, r3
 4592 1430 354A     		ldr	r2, .L231+8
 4593 1432 D7F88C30 		ldr	r3, [r7, #140]
 4594 1436 1344     		add	r3, r3, r2
 4595 1438 0A46     		mov	r2, r1
 4596 143a 1A70     		strb	r2, [r3]
1025:main.c        ****                 
1026:main.c        ****                 if (knobs7bit[i] != prevKnobs7bit[i])
 4597              		.loc 1 1026 0
 4598 143c 324A     		ldr	r2, .L231+8
 4599 143e D7F88C30 		ldr	r3, [r7, #140]
 4600 1442 1344     		add	r3, r3, r2
 4601 1444 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4602 1446 3149     		ldr	r1, .L231+12
 4603 1448 D7F88C30 		ldr	r3, [r7, #140]
 4604 144c 0B44     		add	r3, r3, r1
 4605 144e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4606 1450 9A42     		cmp	r2, r3
 4607 1452 0CD0     		beq	.L134
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 101


1027:main.c        ****                 {
1028:main.c        ****                     sendMIDIControlChange(i+9, knobs7bit[i], 0);
 4608              		.loc 1 1028 0
 4609 1454 D7F88C30 		ldr	r3, [r7, #140]
 4610 1458 03F10900 		add	r0, r3, #9
 4611 145c 2A4A     		ldr	r2, .L231+8
 4612 145e D7F88C30 		ldr	r3, [r7, #140]
 4613 1462 1344     		add	r3, r3, r2
 4614 1464 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4615 1466 0022     		movs	r2, #0
 4616 1468 1946     		mov	r1, r3
 4617 146a FFF7FEFF 		bl	sendMIDIControlChange
 4618              	.L134:
1029:main.c        ****                 }
1030:main.c        ****                 prevKnobs7bit[i] = knobs7bit[i];
 4619              		.loc 1 1030 0
 4620 146e 264A     		ldr	r2, .L231+8
 4621 1470 D7F88C30 		ldr	r3, [r7, #140]
 4622 1474 1344     		add	r3, r3, r2
 4623 1476 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4624 1478 244A     		ldr	r2, .L231+12
 4625 147a D7F88C30 		ldr	r3, [r7, #140]
 4626 147e 1344     		add	r3, r3, r2
 4627 1480 0A46     		mov	r2, r1
 4628 1482 1A70     		strb	r2, [r3]
 4629              	.L133:
1015:main.c        ****         {
 4630              		.loc 1 1015 0 discriminator 2
 4631 1484 D7F88C30 		ldr	r3, [r7, #140]
 4632 1488 0133     		adds	r3, r3, #1
 4633 148a C7F88C30 		str	r3, [r7, #140]
 4634              	.L131:
1015:main.c        ****         {
 4635              		.loc 1 1015 0 is_stmt 0 discriminator 1
 4636 148e D7F88C30 		ldr	r3, [r7, #140]
 4637 1492 032B     		cmp	r3, #3
 4638 1494 A0DD     		ble	.L135
 4639              	.LBE30:
 4640              	.LBB31:
1031:main.c        ****             }
1032:main.c        ****             
1033:main.c        ****         }
1034:main.c        ****         
1035:main.c        ****         //testpin4_Write(1);
1036:main.c        ****         //calculate the pitch of each string based on the current Copedent
1037:main.c        ****         for (int i = 0; i < numStrings; i++)
 4641              		.loc 1 1037 0 is_stmt 1
 4642 1496 0023     		movs	r3, #0
 4643 1498 C7F88830 		str	r3, [r7, #136]
 4644 149c B1E2     		b	.L136
 4645              	.L158:
 4646              	.LBB32:
1038:main.c        ****     	{
1039:main.c        ****     		//interpolate ratios for each of the strings
1040:main.c        ****            
1041:main.c        ****             float myMappedPos;
1042:main.c        ****             if (dualSlider)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 102


 4647              		.loc 1 1042 0
 4648 149e 1C4B     		ldr	r3, .L231+16
 4649 14a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4650 14a2 002B     		cmp	r3, #0
 4651 14a4 3AD0     		beq	.L137
1043:main.c        ****             {
1044:main.c        ****                if ((bar[0] != 65535) && (bar[1] != 65535))
 4652              		.loc 1 1044 0
 4653 14a6 1B4B     		ldr	r3, .L231+20
 4654 14a8 1B88     		ldrh	r3, [r3]	@ movhi
 4655 14aa 9BB2     		uxth	r3, r3
 4656 14ac 4FF6FF72 		movw	r2, #65535
 4657 14b0 9342     		cmp	r3, r2
 4658 14b2 14D0     		beq	.L138
 4659              		.loc 1 1044 0 is_stmt 0 discriminator 1
 4660 14b4 174B     		ldr	r3, .L231+20
 4661 14b6 5B88     		ldrh	r3, [r3, #2]	@ movhi
 4662 14b8 9BB2     		uxth	r3, r3
 4663 14ba 4FF6FF72 		movw	r2, #65535
 4664 14be 9342     		cmp	r3, r2
 4665 14c0 0DD0     		beq	.L138
1045:main.c        ****                 {
1046:main.c        ****                     myMappedPos = mapDualSlider(i, stringMappedPositionsInRatios[0], stringMappedPo
 4666              		.loc 1 1046 0 is_stmt 1
 4667 14c2 D7F88800 		ldr	r0, [r7, #136]
 4668 14c6 FFF7FEFF 		bl	__aeabi_i2f
 4669 14ca 134B     		ldr	r3, .L231+24
 4670 14cc 1968     		ldr	r1, [r3]	@ float
 4671 14ce 124B     		ldr	r3, .L231+24
 4672 14d0 5B68     		ldr	r3, [r3, #4]	@ float
 4673 14d2 1A46     		mov	r2, r3
 4674 14d4 FFF7FEFF 		bl	mapDualSlider
 4675 14d8 C7F88400 		str	r0, [r7, #132]	@ float
 4676 14dc 22E0     		b	.L141
 4677              	.L138:
1047:main.c        ****                 }
1048:main.c        ****                 else if (bar[0] != 65535)
 4678              		.loc 1 1048 0
 4679 14de 0D4B     		ldr	r3, .L231+20
 4680 14e0 1B88     		ldrh	r3, [r3]	@ movhi
 4681 14e2 9BB2     		uxth	r3, r3
 4682 14e4 4FF6FF72 		movw	r2, #65535
 4683 14e8 9342     		cmp	r3, r2
 4684 14ea 04D0     		beq	.L140
1049:main.c        ****                 {
1050:main.c        ****                     myMappedPos = stringMappedPositionsInRatios[0];
 4685              		.loc 1 1050 0
 4686 14ec 0A4B     		ldr	r3, .L231+24
 4687 14ee 1B68     		ldr	r3, [r3]	@ float
 4688 14f0 C7F88430 		str	r3, [r7, #132]	@ float
 4689 14f4 16E0     		b	.L141
 4690              	.L140:
1051:main.c        ****                 }
1052:main.c        ****                 else
1053:main.c        ****                 {
1054:main.c        ****                     myMappedPos = stringMappedPositionsInRatios[1];
 4691              		.loc 1 1054 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 103


 4692 14f6 084B     		ldr	r3, .L231+24
 4693 14f8 5B68     		ldr	r3, [r3, #4]	@ float
 4694 14fa C7F88430 		str	r3, [r7, #132]	@ float
 4695 14fe 11E0     		b	.L141
 4696              	.L232:
 4697              		.align	2
 4698              	.L231:
 4699 1500 00000000 		.word	knobs
 4700 1504 00000000 		.word	midiSendOn
 4701 1508 00000000 		.word	knobs7bit
 4702 150c 00000000 		.word	prevKnobs7bit
 4703 1510 00000000 		.word	dualSlider
 4704 1514 00000000 		.word	bar
 4705 1518 00000000 		.word	stringMappedPositionsInRatios
 4706              	.L137:
1055:main.c        ****                 }
1056:main.c        ****             }
1057:main.c        ****             else
1058:main.c        ****             {
1059:main.c        ****                 myMappedPos = stringMappedPositionsInRatios[0];
 4707              		.loc 1 1059 0
 4708 151c 9D4B     		ldr	r3, .L233
 4709 151e 1B68     		ldr	r3, [r3]	@ float
 4710 1520 C7F88430 		str	r3, [r7, #132]	@ float
 4711              	.L141:
1060:main.c        ****             }
1061:main.c        **** 
1062:main.c        ****             float pedalsMIDI = 0.0f;
 4712              		.loc 1 1062 0
 4713 1524 4FF00003 		mov	r3, #0
 4714 1528 C7F88030 		str	r3, [r7, #128]	@ float
1063:main.c        ****     		//then apply those ratios to the fundamental frequencies
1064:main.c        ****             if (!traditionalPedalAdd)
 4715              		.loc 1 1064 0
 4716 152c 9A4B     		ldr	r3, .L233+4
 4717 152e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4718 1530 002B     		cmp	r3, #0
 4719 1532 40F02581 		bne	.L142
1065:main.c        ****             {
1066:main.c        ****     		    pedalsMIDI = (copedent[currentCopedent][0][i] +
 4720              		.loc 1 1066 0
 4721 1536 994B     		ldr	r3, .L233+8
 4722 1538 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4723 153a 1A46     		mov	r2, r3
 4724 153c 9849     		ldr	r1, .L233+12
 4725 153e 1346     		mov	r3, r2
 4726 1540 5B01     		lsls	r3, r3, #5
 4727 1542 1344     		add	r3, r3, r2
 4728 1544 9B00     		lsls	r3, r3, #2
 4729 1546 D7F88820 		ldr	r2, [r7, #136]
 4730 154a 1344     		add	r3, r3, r2
 4731 154c 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1067:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4732              		.loc 1 1067 0
 4733 1550 924B     		ldr	r3, .L233+8
 4734 1552 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4735 1554 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 104


 4736 1556 9249     		ldr	r1, .L233+12
 4737 1558 1346     		mov	r3, r2
 4738 155a 5B01     		lsls	r3, r3, #5
 4739 155c 1344     		add	r3, r3, r2
 4740 155e 9B00     		lsls	r3, r3, #2
 4741 1560 D7F88820 		ldr	r2, [r7, #136]
 4742 1564 1344     		add	r3, r3, r2
 4743 1566 3033     		adds	r3, r3, #48
 4744 1568 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4745 156c 8D4B     		ldr	r3, .L233+16
 4746 156e 1B68     		ldr	r3, [r3]	@ float
 4747 1570 1946     		mov	r1, r3
 4748 1572 1046     		mov	r0, r2
 4749 1574 FFF7FEFF 		bl	__aeabi_fmul
 4750 1578 0346     		mov	r3, r0
1066:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4751              		.loc 1 1066 0
 4752 157a 1946     		mov	r1, r3
 4753 157c 2046     		mov	r0, r4
 4754 157e FFF7FEFF 		bl	__aeabi_fadd
 4755 1582 0346     		mov	r3, r0
 4756 1584 1C46     		mov	r4, r3
1068:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4757              		.loc 1 1068 0
 4758 1586 854B     		ldr	r3, .L233+8
 4759 1588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4760 158a 1A46     		mov	r2, r3
 4761 158c 8449     		ldr	r1, .L233+12
 4762 158e 1346     		mov	r3, r2
 4763 1590 5B01     		lsls	r3, r3, #5
 4764 1592 1344     		add	r3, r3, r2
 4765 1594 9B00     		lsls	r3, r3, #2
 4766 1596 D7F88820 		ldr	r2, [r7, #136]
 4767 159a 1344     		add	r3, r3, r2
 4768 159c 3C33     		adds	r3, r3, #60
 4769 159e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4770 15a2 804B     		ldr	r3, .L233+16
 4771 15a4 5B68     		ldr	r3, [r3, #4]	@ float
 4772 15a6 1946     		mov	r1, r3
 4773 15a8 1046     		mov	r0, r2
 4774 15aa FFF7FEFF 		bl	__aeabi_fmul
 4775 15ae 0346     		mov	r3, r0
1067:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4776              		.loc 1 1067 0
 4777 15b0 1946     		mov	r1, r3
 4778 15b2 2046     		mov	r0, r4
 4779 15b4 FFF7FEFF 		bl	__aeabi_fadd
 4780 15b8 0346     		mov	r3, r0
 4781 15ba 1C46     		mov	r4, r3
1069:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4782              		.loc 1 1069 0
 4783 15bc 774B     		ldr	r3, .L233+8
 4784 15be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4785 15c0 1A46     		mov	r2, r3
 4786 15c2 7749     		ldr	r1, .L233+12
 4787 15c4 1346     		mov	r3, r2
 4788 15c6 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 105


 4789 15c8 1344     		add	r3, r3, r2
 4790 15ca 9B00     		lsls	r3, r3, #2
 4791 15cc D7F88820 		ldr	r2, [r7, #136]
 4792 15d0 1344     		add	r3, r3, r2
 4793 15d2 4833     		adds	r3, r3, #72
 4794 15d4 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4795 15d8 724B     		ldr	r3, .L233+16
 4796 15da 9B68     		ldr	r3, [r3, #8]	@ float
 4797 15dc 1946     		mov	r1, r3
 4798 15de 1046     		mov	r0, r2
 4799 15e0 FFF7FEFF 		bl	__aeabi_fmul
 4800 15e4 0346     		mov	r3, r0
1068:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4801              		.loc 1 1068 0
 4802 15e6 1946     		mov	r1, r3
 4803 15e8 2046     		mov	r0, r4
 4804 15ea FFF7FEFF 		bl	__aeabi_fadd
 4805 15ee 0346     		mov	r3, r0
 4806 15f0 1C46     		mov	r4, r3
1070:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4807              		.loc 1 1070 0
 4808 15f2 6A4B     		ldr	r3, .L233+8
 4809 15f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4810 15f6 1A46     		mov	r2, r3
 4811 15f8 6949     		ldr	r1, .L233+12
 4812 15fa 1346     		mov	r3, r2
 4813 15fc 5B01     		lsls	r3, r3, #5
 4814 15fe 1344     		add	r3, r3, r2
 4815 1600 9B00     		lsls	r3, r3, #2
 4816 1602 D7F88820 		ldr	r2, [r7, #136]
 4817 1606 1344     		add	r3, r3, r2
 4818 1608 5433     		adds	r3, r3, #84
 4819 160a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4820 160e 654B     		ldr	r3, .L233+16
 4821 1610 DB68     		ldr	r3, [r3, #12]	@ float
 4822 1612 1946     		mov	r1, r3
 4823 1614 1046     		mov	r0, r2
 4824 1616 FFF7FEFF 		bl	__aeabi_fmul
 4825 161a 0346     		mov	r3, r0
1069:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4826              		.loc 1 1069 0
 4827 161c 1946     		mov	r1, r3
 4828 161e 2046     		mov	r0, r4
 4829 1620 FFF7FEFF 		bl	__aeabi_fadd
 4830 1624 0346     		mov	r3, r0
 4831 1626 1C46     		mov	r4, r3
1071:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4832              		.loc 1 1071 0
 4833 1628 5C4B     		ldr	r3, .L233+8
 4834 162a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4835 162c 1A46     		mov	r2, r3
 4836 162e 5C49     		ldr	r1, .L233+12
 4837 1630 1346     		mov	r3, r2
 4838 1632 5B01     		lsls	r3, r3, #5
 4839 1634 1344     		add	r3, r3, r2
 4840 1636 9B00     		lsls	r3, r3, #2
 4841 1638 D7F88820 		ldr	r2, [r7, #136]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 106


 4842 163c 1344     		add	r3, r3, r2
 4843 163e 6033     		adds	r3, r3, #96
 4844 1640 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4845 1644 574B     		ldr	r3, .L233+16
 4846 1646 1B69     		ldr	r3, [r3, #16]	@ float
 4847 1648 1946     		mov	r1, r3
 4848 164a 1046     		mov	r0, r2
 4849 164c FFF7FEFF 		bl	__aeabi_fmul
 4850 1650 0346     		mov	r3, r0
1070:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4851              		.loc 1 1070 0
 4852 1652 1946     		mov	r1, r3
 4853 1654 2046     		mov	r0, r4
 4854 1656 FFF7FEFF 		bl	__aeabi_fadd
 4855 165a 0346     		mov	r3, r0
 4856 165c 1C46     		mov	r4, r3
1072:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4857              		.loc 1 1072 0
 4858 165e 4F4B     		ldr	r3, .L233+8
 4859 1660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4860 1662 1A46     		mov	r2, r3
 4861 1664 4E49     		ldr	r1, .L233+12
 4862 1666 1346     		mov	r3, r2
 4863 1668 5B01     		lsls	r3, r3, #5
 4864 166a 1344     		add	r3, r3, r2
 4865 166c 9B00     		lsls	r3, r3, #2
 4866 166e D7F88820 		ldr	r2, [r7, #136]
 4867 1672 1344     		add	r3, r3, r2
 4868 1674 7833     		adds	r3, r3, #120
 4869 1676 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4870 167a 4A4B     		ldr	r3, .L233+16
 4871 167c 5B69     		ldr	r3, [r3, #20]	@ float
 4872 167e 1946     		mov	r1, r3
 4873 1680 1046     		mov	r0, r2
 4874 1682 FFF7FEFF 		bl	__aeabi_fmul
 4875 1686 0346     		mov	r3, r0
1071:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4876              		.loc 1 1071 0
 4877 1688 1946     		mov	r1, r3
 4878 168a 2046     		mov	r0, r4
 4879 168c FFF7FEFF 		bl	__aeabi_fadd
 4880 1690 0346     		mov	r3, r0
 4881 1692 1C46     		mov	r4, r3
1073:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4882              		.loc 1 1073 0
 4883 1694 414B     		ldr	r3, .L233+8
 4884 1696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4885 1698 1A46     		mov	r2, r3
 4886 169a 4149     		ldr	r1, .L233+12
 4887 169c 1346     		mov	r3, r2
 4888 169e 5B01     		lsls	r3, r3, #5
 4889 16a0 1344     		add	r3, r3, r2
 4890 16a2 9B00     		lsls	r3, r3, #2
 4891 16a4 D7F88820 		ldr	r2, [r7, #136]
 4892 16a8 1344     		add	r3, r3, r2
 4893 16aa 6C33     		adds	r3, r3, #108
 4894 16ac 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 107


 4895 16b0 3C4B     		ldr	r3, .L233+16
 4896 16b2 9B69     		ldr	r3, [r3, #24]	@ float
 4897 16b4 1946     		mov	r1, r3
 4898 16b6 1046     		mov	r0, r2
 4899 16b8 FFF7FEFF 		bl	__aeabi_fmul
 4900 16bc 0346     		mov	r3, r0
1072:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4901              		.loc 1 1072 0
 4902 16be 1946     		mov	r1, r3
 4903 16c0 2046     		mov	r0, r4
 4904 16c2 FFF7FEFF 		bl	__aeabi_fadd
 4905 16c6 0346     		mov	r3, r0
 4906 16c8 1C46     		mov	r4, r3
1074:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4907              		.loc 1 1074 0
 4908 16ca 344B     		ldr	r3, .L233+8
 4909 16cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4910 16ce 1A46     		mov	r2, r3
 4911 16d0 3349     		ldr	r1, .L233+12
 4912 16d2 1346     		mov	r3, r2
 4913 16d4 5B01     		lsls	r3, r3, #5
 4914 16d6 1344     		add	r3, r3, r2
 4915 16d8 9B00     		lsls	r3, r3, #2
 4916 16da D7F88820 		ldr	r2, [r7, #136]
 4917 16de 1344     		add	r3, r3, r2
 4918 16e0 2433     		adds	r3, r3, #36
 4919 16e2 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4920 16e6 2F4B     		ldr	r3, .L233+16
 4921 16e8 DB69     		ldr	r3, [r3, #28]	@ float
 4922 16ea 1946     		mov	r1, r3
 4923 16ec 1046     		mov	r0, r2
 4924 16ee FFF7FEFF 		bl	__aeabi_fmul
 4925 16f2 0346     		mov	r3, r0
1073:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4926              		.loc 1 1073 0
 4927 16f4 1946     		mov	r1, r3
 4928 16f6 2046     		mov	r0, r4
 4929 16f8 FFF7FEFF 		bl	__aeabi_fadd
 4930 16fc 0346     		mov	r3, r0
 4931 16fe 1C46     		mov	r4, r3
1075:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4932              		.loc 1 1075 0
 4933 1700 264B     		ldr	r3, .L233+8
 4934 1702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4935 1704 1A46     		mov	r2, r3
 4936 1706 2649     		ldr	r1, .L233+12
 4937 1708 1346     		mov	r3, r2
 4938 170a 5B01     		lsls	r3, r3, #5
 4939 170c 1344     		add	r3, r3, r2
 4940 170e 9B00     		lsls	r3, r3, #2
 4941 1710 D7F88820 		ldr	r2, [r7, #136]
 4942 1714 1344     		add	r3, r3, r2
 4943 1716 0C33     		adds	r3, r3, #12
 4944 1718 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4945 171c 214B     		ldr	r3, .L233+16
 4946 171e 1B6A     		ldr	r3, [r3, #32]	@ float
 4947 1720 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 108


 4948 1722 1046     		mov	r0, r2
 4949 1724 FFF7FEFF 		bl	__aeabi_fmul
 4950 1728 0346     		mov	r3, r0
1074:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4951              		.loc 1 1074 0
 4952 172a 1946     		mov	r1, r3
 4953 172c 2046     		mov	r0, r4
 4954 172e FFF7FEFF 		bl	__aeabi_fadd
 4955 1732 0346     		mov	r3, r0
 4956 1734 1C46     		mov	r4, r3
1076:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9])) + transposeFloat;
 4957              		.loc 1 1076 0
 4958 1736 194B     		ldr	r3, .L233+8
 4959 1738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4960 173a 1A46     		mov	r2, r3
 4961 173c 1849     		ldr	r1, .L233+12
 4962 173e 1346     		mov	r3, r2
 4963 1740 5B01     		lsls	r3, r3, #5
 4964 1742 1344     		add	r3, r3, r2
 4965 1744 9B00     		lsls	r3, r3, #2
 4966 1746 D7F88820 		ldr	r2, [r7, #136]
 4967 174a 1344     		add	r3, r3, r2
 4968 174c 1833     		adds	r3, r3, #24
 4969 174e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4970 1752 144B     		ldr	r3, .L233+16
 4971 1754 5B6A     		ldr	r3, [r3, #36]	@ float
 4972 1756 1946     		mov	r1, r3
 4973 1758 1046     		mov	r0, r2
 4974 175a FFF7FEFF 		bl	__aeabi_fmul
 4975 175e 0346     		mov	r3, r0
1075:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4976              		.loc 1 1075 0
 4977 1760 1946     		mov	r1, r3
 4978 1762 2046     		mov	r0, r4
 4979 1764 FFF7FEFF 		bl	__aeabi_fadd
 4980 1768 0346     		mov	r3, r0
 4981 176a 1A46     		mov	r2, r3
 4982              		.loc 1 1076 0
 4983 176c 0E4B     		ldr	r3, .L233+20
 4984 176e 1B68     		ldr	r3, [r3]	@ float
1066:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4985              		.loc 1 1066 0
 4986 1770 1946     		mov	r1, r3
 4987 1772 1046     		mov	r0, r2
 4988 1774 FFF7FEFF 		bl	__aeabi_fadd
 4989 1778 0346     		mov	r3, r0
 4990 177a C7F88030 		str	r3, [r7, #128]	@ float
 4991 177e 70E0     		b	.L143
 4992              	.L142:
 4993              	.LBB33:
1077:main.c        ****             }
1078:main.c        ****             else
1079:main.c        ****             {
1080:main.c        ****                 float pedalsMIDIUp = 0.0f;
 4994              		.loc 1 1080 0
 4995 1780 4FF00003 		mov	r3, #0
 4996 1784 FB67     		str	r3, [r7, #124]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 109


1081:main.c        ****                 float pedalsMIDIDown = 0.0f;
 4997              		.loc 1 1081 0
 4998 1786 4FF00003 		mov	r3, #0
 4999 178a BB67     		str	r3, [r7, #120]	@ float
 5000              	.LBB34:
1082:main.c        ****                 
1083:main.c        ****                 
1084:main.c        ****                 for (int j = 0; j < 10; j++)
 5001              		.loc 1 1084 0
 5002 178c 0023     		movs	r3, #0
 5003 178e 7B67     		str	r3, [r7, #116]
 5004 1790 42E0     		b	.L144
 5005              	.L234:
 5006 1792 00BF     		.align	2
 5007              	.L233:
 5008 1794 00000000 		.word	stringMappedPositionsInRatios
 5009 1798 00000000 		.word	traditionalPedalAdd
 5010 179c 00000000 		.word	currentCopedent
 5011 17a0 00000000 		.word	copedent
 5012 17a4 00000000 		.word	pedals_float
 5013 17a8 00000000 		.word	transposeFloat
 5014              	.L149:
 5015              	.LBB35:
1085:main.c        ****                 {
1086:main.c        ****                     float tempMIDI = copedent[currentCopedent][copedentMapping[j]][i] * pedals_floa
 5016              		.loc 1 1086 0
 5017 17ac B14B     		ldr	r3, .L235
 5018 17ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5019 17b0 1846     		mov	r0, r3
 5020 17b2 B14A     		ldr	r2, .L235+4
 5021 17b4 7B6F     		ldr	r3, [r7, #116]
 5022 17b6 1344     		add	r3, r3, r2
 5023 17b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5024 17ba B049     		ldr	r1, .L235+8
 5025 17bc 1A46     		mov	r2, r3
 5026 17be 5200     		lsls	r2, r2, #1
 5027 17c0 1A44     		add	r2, r2, r3
 5028 17c2 9300     		lsls	r3, r2, #2
 5029 17c4 1A46     		mov	r2, r3
 5030 17c6 0346     		mov	r3, r0
 5031 17c8 5B01     		lsls	r3, r3, #5
 5032 17ca 0344     		add	r3, r3, r0
 5033 17cc 9B00     		lsls	r3, r3, #2
 5034 17ce 1A44     		add	r2, r2, r3
 5035 17d0 D7F88830 		ldr	r3, [r7, #136]
 5036 17d4 1344     		add	r3, r3, r2
 5037 17d6 51F82300 		ldr	r0, [r1, r3, lsl #2]	@ float
 5038 17da A94A     		ldr	r2, .L235+12
 5039 17dc 7B6F     		ldr	r3, [r7, #116]
 5040 17de 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5041 17e2 1946     		mov	r1, r3
 5042 17e4 FFF7FEFF 		bl	__aeabi_fmul
 5043 17e8 0346     		mov	r3, r0
 5044 17ea 3B63     		str	r3, [r7, #48]	@ float
1087:main.c        ****                     if (tempMIDI > pedalsMIDIUp)
 5045              		.loc 1 1087 0
 5046 17ec F96F     		ldr	r1, [r7, #124]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 110


 5047 17ee 386B     		ldr	r0, [r7, #48]	@ float
 5048 17f0 FFF7FEFF 		bl	__aeabi_fcmpgt
 5049 17f4 0346     		mov	r3, r0
 5050 17f6 002B     		cmp	r3, #0
 5051 17f8 02D0     		beq	.L214
1088:main.c        ****                     {
1089:main.c        ****                         pedalsMIDIUp = tempMIDI;
 5052              		.loc 1 1089 0
 5053 17fa 3B6B     		ldr	r3, [r7, #48]	@ float
 5054 17fc FB67     		str	r3, [r7, #124]	@ float
 5055 17fe 08E0     		b	.L147
 5056              	.L214:
1090:main.c        ****                     }
1091:main.c        ****                     else if (tempMIDI < pedalsMIDIDown)
 5057              		.loc 1 1091 0
 5058 1800 B96F     		ldr	r1, [r7, #120]	@ float
 5059 1802 386B     		ldr	r0, [r7, #48]	@ float
 5060 1804 FFF7FEFF 		bl	__aeabi_fcmplt
 5061 1808 0346     		mov	r3, r0
 5062 180a 002B     		cmp	r3, #0
 5063 180c 01D0     		beq	.L147
1092:main.c        ****                     {
1093:main.c        ****                         pedalsMIDIDown = tempMIDI;
 5064              		.loc 1 1093 0
 5065 180e 3B6B     		ldr	r3, [r7, #48]	@ float
 5066 1810 BB67     		str	r3, [r7, #120]	@ float
 5067              	.L147:
 5068              	.LBE35:
1084:main.c        ****                 {
 5069              		.loc 1 1084 0 discriminator 2
 5070 1812 7B6F     		ldr	r3, [r7, #116]
 5071 1814 0133     		adds	r3, r3, #1
 5072 1816 7B67     		str	r3, [r7, #116]
 5073              	.L144:
1084:main.c        ****                 {
 5074              		.loc 1 1084 0 is_stmt 0 discriminator 1
 5075 1818 7B6F     		ldr	r3, [r7, #116]
 5076 181a 092B     		cmp	r3, #9
 5077 181c C6DD     		ble	.L149
 5078              	.LBE34:
1094:main.c        ****                     }
1095:main.c        ****                 }
1096:main.c        ****                 float openStringTemp = copedent[currentCopedent][0][i];
 5079              		.loc 1 1096 0 is_stmt 1
 5080 181e 954B     		ldr	r3, .L235
 5081 1820 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5082 1822 1A46     		mov	r2, r3
 5083 1824 9549     		ldr	r1, .L235+8
 5084 1826 1346     		mov	r3, r2
 5085 1828 5B01     		lsls	r3, r3, #5
 5086 182a 1344     		add	r3, r3, r2
 5087 182c 9B00     		lsls	r3, r3, #2
 5088 182e D7F88820 		ldr	r2, [r7, #136]
 5089 1832 1344     		add	r3, r3, r2
 5090 1834 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 5091 1838 FB62     		str	r3, [r7, #44]	@ float
1097:main.c        ****                 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 111


1098:main.c        ****                 pedalsMIDI = pedalsMIDIUp + pedalsMIDIDown + openStringTemp + transposeFloat;
 5092              		.loc 1 1098 0
 5093 183a B96F     		ldr	r1, [r7, #120]	@ float
 5094 183c F86F     		ldr	r0, [r7, #124]	@ float
 5095 183e FFF7FEFF 		bl	__aeabi_fadd
 5096 1842 0346     		mov	r3, r0
 5097 1844 F96A     		ldr	r1, [r7, #44]	@ float
 5098 1846 1846     		mov	r0, r3
 5099 1848 FFF7FEFF 		bl	__aeabi_fadd
 5100 184c 0346     		mov	r3, r0
 5101 184e 1A46     		mov	r2, r3
 5102 1850 8C4B     		ldr	r3, .L235+16
 5103 1852 1B68     		ldr	r3, [r3]	@ float
 5104 1854 1946     		mov	r1, r3
 5105 1856 1046     		mov	r0, r2
 5106 1858 FFF7FEFF 		bl	__aeabi_fadd
 5107 185c 0346     		mov	r3, r0
 5108 185e C7F88030 		str	r3, [r7, #128]	@ float
 5109              	.L143:
 5110              	.LBE33:
1099:main.c        ****                 
1100:main.c        ****             }
1101:main.c        ****             
1102:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 5111              		.loc 1 1102 0
 5112 1862 844B     		ldr	r3, .L235
 5113 1864 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5114 1866 1A46     		mov	r2, r3
 5115 1868 8449     		ldr	r1, .L235+8
 5116 186a 1346     		mov	r3, r2
 5117 186c 5B01     		lsls	r3, r3, #5
 5118 186e 1344     		add	r3, r3, r2
 5119 1870 9B00     		lsls	r3, r3, #2
 5120 1872 D7F88820 		ldr	r2, [r7, #136]
 5121 1876 1344     		add	r3, r3, r2
 5122 1878 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 5123 187c BB62     		str	r3, [r7, #40]	@ float
1103:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 5124              		.loc 1 1103 0
 5125 187e B86A     		ldr	r0, [r7, #40]	@ float
 5126 1880 FFF7FEFF 		bl	__aeabi_f2iz
 5127 1884 0146     		mov	r1, r0
 5128 1886 804A     		ldr	r2, .L235+20
 5129 1888 D7F88830 		ldr	r3, [r7, #136]
 5130 188c 42F82310 		str	r1, [r2, r3, lsl #2]
1104:main.c        ****             float barMIDI = (unsafeFtom(myMappedPos*55.0f)) - 33.0f; //give midi note added by the 
 5131              		.loc 1 1104 0
 5132 1890 7E49     		ldr	r1, .L235+24
 5133 1892 D7F88400 		ldr	r0, [r7, #132]	@ float
 5134 1896 FFF7FEFF 		bl	__aeabi_fmul
 5135 189a 0346     		mov	r3, r0
 5136 189c 1846     		mov	r0, r3
 5137 189e FFF7FEFF 		bl	unsafeFtom
 5138 18a2 0346     		mov	r3, r0
 5139 18a4 7A49     		ldr	r1, .L235+28
 5140 18a6 1846     		mov	r0, r3
 5141 18a8 FFF7FEFF 		bl	__aeabi_fsub
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 112


 5142 18ac 0346     		mov	r3, r0
 5143 18ae 7B62     		str	r3, [r7, #36]	@ float
1105:main.c        ****             if (i == 0)
 5144              		.loc 1 1105 0
 5145 18b0 D7F88830 		ldr	r3, [r7, #136]
 5146 18b4 002B     		cmp	r3, #0
 5147 18b6 0DD1     		bne	.L150
1106:main.c        ****             {
1107:main.c        ****                 barMidiOuterStrings[0] = (uint16_t)(barMIDI * 512.0f);
 5148              		.loc 1 1107 0
 5149 18b8 4FF08841 		mov	r1, #1140850688
 5150 18bc 786A     		ldr	r0, [r7, #36]	@ float
 5151 18be FFF7FEFF 		bl	__aeabi_fmul
 5152 18c2 0346     		mov	r3, r0
 5153 18c4 1846     		mov	r0, r3
 5154 18c6 FFF7FEFF 		bl	__aeabi_f2uiz
 5155 18ca 0346     		mov	r3, r0
 5156 18cc 9AB2     		uxth	r2, r3
 5157 18ce 714B     		ldr	r3, .L235+32
 5158 18d0 1A80     		strh	r2, [r3]	@ movhi
 5159 18d2 38E0     		b	.L151
 5160              	.L150:
1108:main.c        ****             }
1109:main.c        **** 
1110:main.c        ****             else if (i == 5) //the average bar position for single midi bar position report via cha
 5161              		.loc 1 1110 0
 5162 18d4 D7F88830 		ldr	r3, [r7, #136]
 5163 18d8 052B     		cmp	r3, #5
 5164 18da 20D1     		bne	.L152
1111:main.c        ****             {
1112:main.c        ****                 if (midiBarSendOn)
 5165              		.loc 1 1112 0
 5166 18dc 6E4B     		ldr	r3, .L235+36
 5167 18de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5168 18e0 002B     		cmp	r3, #0
 5169 18e2 30D0     		beq	.L151
 5170              	.LBB36:
1113:main.c        ****                 {
1114:main.c        ****                     float barBend = (uint16_t)(barMIDI * 128.0f);
 5171              		.loc 1 1114 0
 5172 18e4 4FF08641 		mov	r1, #1124073472
 5173 18e8 786A     		ldr	r0, [r7, #36]	@ float
 5174 18ea FFF7FEFF 		bl	__aeabi_fmul
 5175 18ee 0346     		mov	r3, r0
 5176 18f0 1846     		mov	r0, r3
 5177 18f2 FFF7FEFF 		bl	__aeabi_f2uiz
 5178 18f6 0346     		mov	r3, r0
 5179 18f8 9BB2     		uxth	r3, r3
 5180 18fa 1846     		mov	r0, r3
 5181 18fc FFF7FEFF 		bl	__aeabi_ui2f
 5182 1900 0346     		mov	r3, r0
 5183 1902 3B62     		str	r3, [r7, #32]	@ float
1115:main.c        ****                     if (midiBarSendOn)
 5184              		.loc 1 1115 0
 5185 1904 644B     		ldr	r3, .L235+36
 5186 1906 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5187 1908 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 113


 5188 190a 1CD0     		beq	.L151
1116:main.c        ****                     {
1117:main.c        ****                         sendMIDIPitchBend((uint)barBend,12);
 5189              		.loc 1 1117 0
 5190 190c 386A     		ldr	r0, [r7, #32]	@ float
 5191 190e FFF7FEFF 		bl	__aeabi_f2uiz
 5192 1912 0346     		mov	r3, r0
 5193 1914 0C21     		movs	r1, #12
 5194 1916 1846     		mov	r0, r3
 5195 1918 FFF7FEFF 		bl	sendMIDIPitchBend
 5196 191c 13E0     		b	.L151
 5197              	.L152:
 5198              	.LBE36:
1118:main.c        ****                     }
1119:main.c        ****                 }
1120:main.c        ****             }
1121:main.c        ****             else if (i == (numStrings - 1))
 5199              		.loc 1 1121 0
 5200 191e 5F4B     		ldr	r3, .L235+40
 5201 1920 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5202 1922 5A1E     		subs	r2, r3, #1
 5203 1924 D7F88830 		ldr	r3, [r7, #136]
 5204 1928 9A42     		cmp	r2, r3
 5205 192a 0CD1     		bne	.L151
1122:main.c        ****             {
1123:main.c        ****                  barMidiOuterStrings[1] = (uint16_t)(barMIDI * 512.0f);
 5206              		.loc 1 1123 0
 5207 192c 4FF08841 		mov	r1, #1140850688
 5208 1930 786A     		ldr	r0, [r7, #36]	@ float
 5209 1932 FFF7FEFF 		bl	__aeabi_fmul
 5210 1936 0346     		mov	r3, r0
 5211 1938 1846     		mov	r0, r3
 5212 193a FFF7FEFF 		bl	__aeabi_f2uiz
 5213 193e 0346     		mov	r3, r0
 5214 1940 9AB2     		uxth	r2, r3
 5215 1942 544B     		ldr	r3, .L235+32
 5216 1944 5A80     		strh	r2, [r3, #2]	@ movhi
 5217              	.L151:
1124:main.c        ****             }
1125:main.c        ****             
1126:main.c        ****             float computerMIDIOffset = barMIDI + pedalsMIDI - openStringMIDI_Int[i];// + stringOcta
 5218              		.loc 1 1126 0
 5219 1946 D7F88010 		ldr	r1, [r7, #128]	@ float
 5220 194a 786A     		ldr	r0, [r7, #36]	@ float
 5221 194c FFF7FEFF 		bl	__aeabi_fadd
 5222 1950 0346     		mov	r3, r0
 5223 1952 1C46     		mov	r4, r3
 5224 1954 4C4A     		ldr	r2, .L235+20
 5225 1956 D7F88830 		ldr	r3, [r7, #136]
 5226 195a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5227 195e 1846     		mov	r0, r3
 5228 1960 FFF7FEFF 		bl	__aeabi_i2f
 5229 1964 0346     		mov	r3, r0
 5230 1966 1946     		mov	r1, r3
 5231 1968 2046     		mov	r0, r4
 5232 196a FFF7FEFF 		bl	__aeabi_fsub
 5233 196e 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 114


 5234 1970 FB61     		str	r3, [r7, #28]	@ float
1127:main.c        ****             
1128:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 5235              		.loc 1 1128 0
 5236 1972 4B49     		ldr	r1, .L235+44
 5237 1974 F869     		ldr	r0, [r7, #28]	@ float
 5238 1976 FFF7FEFF 		bl	__aeabi_fmul
 5239 197a 0346     		mov	r3, r0
 5240 197c 4FF08C41 		mov	r1, #1174405120
 5241 1980 1846     		mov	r0, r3
 5242 1982 FFF7FEFF 		bl	__aeabi_fadd
 5243 1986 0346     		mov	r3, r0
 5244 1988 BB61     		str	r3, [r7, #24]	@ float
1129:main.c        ****             if (midiSendOn)
 5245              		.loc 1 1129 0
 5246 198a 464B     		ldr	r3, .L235+48
 5247 198c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5248 198e 002B     		cmp	r3, #0
 5249 1990 17D0     		beq	.L154
1130:main.c        ****             {
1131:main.c        ****                 if (pitchBendAmount != prevStringPitchBend[i])
 5250              		.loc 1 1131 0
 5251 1992 454A     		ldr	r2, .L235+52
 5252 1994 D7F88830 		ldr	r3, [r7, #136]
 5253 1998 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5254 199c B969     		ldr	r1, [r7, #24]	@ float
 5255 199e 1846     		mov	r0, r3
 5256 19a0 FFF7FEFF 		bl	__aeabi_fcmpeq
 5257 19a4 0346     		mov	r3, r0
 5258 19a6 002B     		cmp	r3, #0
 5259 19a8 0BD1     		bne	.L154
1132:main.c        ****                 {
1133:main.c        ****                     sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 5260              		.loc 1 1133 0
 5261 19aa B869     		ldr	r0, [r7, #24]	@ float
 5262 19ac FFF7FEFF 		bl	__aeabi_f2uiz
 5263 19b0 0346     		mov	r3, r0
 5264 19b2 1A46     		mov	r2, r3
 5265 19b4 D7F88830 		ldr	r3, [r7, #136]
 5266 19b8 0133     		adds	r3, r3, #1
 5267 19ba 1946     		mov	r1, r3
 5268 19bc 1046     		mov	r0, r2
 5269 19be FFF7FEFF 		bl	sendMIDIPitchBend
 5270              	.L154:
1134:main.c        ****                 }
1135:main.c        ****             }
1136:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 5271              		.loc 1 1136 0
 5272 19c2 3949     		ldr	r1, .L235+52
 5273 19c4 D7F88830 		ldr	r3, [r7, #136]
 5274 19c8 BA69     		ldr	r2, [r7, #24]	@ float
 5275 19ca 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1137:main.c        ****             
1138:main.c        ****             if (pedalsMIDI > 0.0f)
 5276              		.loc 1 1138 0
 5277 19ce 4FF00001 		mov	r1, #0
 5278 19d2 D7F88000 		ldr	r0, [r7, #128]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 115


 5279 19d6 FFF7FEFF 		bl	__aeabi_fcmpgt
 5280 19da 0346     		mov	r3, r0
 5281 19dc 002B     		cmp	r3, #0
 5282 19de 0BD0     		beq	.L156
1139:main.c        ****             {
1140:main.c        ****                 stringMIDI[i] = pedalsMIDI + barMIDI;
 5283              		.loc 1 1140 0
 5284 19e0 796A     		ldr	r1, [r7, #36]	@ float
 5285 19e2 D7F88000 		ldr	r0, [r7, #128]	@ float
 5286 19e6 FFF7FEFF 		bl	__aeabi_fadd
 5287 19ea 0346     		mov	r3, r0
 5288 19ec 1946     		mov	r1, r3
 5289 19ee 2F4A     		ldr	r2, .L235+56
 5290 19f0 D7F88830 		ldr	r3, [r7, #136]
 5291 19f4 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 5292              	.L156:
 5293              	.LBE32:
1037:main.c        ****     	{
 5294              		.loc 1 1037 0 discriminator 2
 5295 19f8 D7F88830 		ldr	r3, [r7, #136]
 5296 19fc 0133     		adds	r3, r3, #1
 5297 19fe C7F88830 		str	r3, [r7, #136]
 5298              	.L136:
1037:main.c        ****     	{
 5299              		.loc 1 1037 0 is_stmt 0 discriminator 1
 5300 1a02 264B     		ldr	r3, .L235+40
 5301 1a04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5302 1a06 1A46     		mov	r2, r3
 5303 1a08 D7F88830 		ldr	r3, [r7, #136]
 5304 1a0c 9A42     		cmp	r2, r3
 5305 1a0e 3FF746AD 		bgt	.L158
 5306              	.LBE31:
1141:main.c        ****             }
1142:main.c        ****     	}
1143:main.c        ****        // testpin4_Write(0);
1144:main.c        **** 
1145:main.c        ****         
1146:main.c        ****         if (USB_check_flag)
 5307              		.loc 1 1146 0 is_stmt 1
 5308 1a12 274B     		ldr	r3, .L235+60
 5309 1a14 1B78     		ldrb	r3, [r3]
 5310 1a16 DBB2     		uxtb	r3, r3
 5311 1a18 002B     		cmp	r3, #0
 5312 1a1a 01D0     		beq	.L159
1147:main.c        ****         {
1148:main.c        ****             checkUSB_Vbus();
 5313              		.loc 1 1148 0
 5314 1a1c FFF7FEFF 		bl	checkUSB_Vbus
 5315              	.L159:
1149:main.c        ****         }
1150:main.c        ****         //only service the USB bus if there is a computer plugged in
1151:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 5316              		.loc 1 1151 0
 5317 1a20 244B     		ldr	r3, .L235+64
 5318 1a22 1B78     		ldrb	r3, [r3]
 5319 1a24 DBB2     		uxtb	r3, r3
 5320 1a26 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 116


 5321 1a28 13D0     		beq	.L216
 5322              		.loc 1 1151 0 is_stmt 0 discriminator 1
 5323 1a2a FFF7FEFF 		bl	USB_VBusPresent
 5324 1a2e 0346     		mov	r3, r0
 5325 1a30 002B     		cmp	r3, #0
 5326 1a32 0ED0     		beq	.L216
1152:main.c        ****         {
1153:main.c        ****             if (midiSent > 64)
 5327              		.loc 1 1153 0 is_stmt 1
 5328 1a34 204B     		ldr	r3, .L235+68
 5329 1a36 1B88     		ldrh	r3, [r3]
 5330 1a38 402B     		cmp	r3, #64
 5331 1a3a 05D9     		bls	.L161
1154:main.c        ****             {
1155:main.c        ****                 midiOverflow++;
 5332              		.loc 1 1155 0
 5333 1a3c 1F4B     		ldr	r3, .L235+72
 5334 1a3e 1B88     		ldrh	r3, [r3]
 5335 1a40 0133     		adds	r3, r3, #1
 5336 1a42 9AB2     		uxth	r2, r3
 5337 1a44 1D4B     		ldr	r3, .L235+72
 5338 1a46 1A80     		strh	r2, [r3]	@ movhi
 5339              	.L161:
1156:main.c        ****             }
1157:main.c        ****             midiSent = 0;
 5340              		.loc 1 1157 0
 5341 1a48 1B4B     		ldr	r3, .L235+68
 5342 1a4a 0022     		movs	r2, #0
 5343 1a4c 1A80     		strh	r2, [r3]	@ movhi
1158:main.c        ****             USB_service();
 5344              		.loc 1 1158 0
 5345 1a4e FFF7FEFF 		bl	USB_service
 5346              	.L216:
1159:main.c        ****         }
1160:main.c        **** 
1161:main.c        ****         
1162:main.c        ****         //make sure previous SPI2 transmission has completed before transferring the remaining midi
1163:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 5347              		.loc 1 1163 0
 5348 1a52 00BF     		nop
 5349              	.L165:
 5350              		.loc 1 1163 0 is_stmt 0 discriminator 7
 5351 1a54 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5352 1a58 0346     		mov	r3, r0
 5353 1a5a 03F00103 		and	r3, r3, #1
 5354 1a5e 002B     		cmp	r3, #0
 5355 1a60 06D1     		bne	.L162
 5356              		.loc 1 1163 0 discriminator 2
 5357 1a62 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5358 1a66 0346     		mov	r3, r0
 5359 1a68 03F01003 		and	r3, r3, #16
 5360 1a6c 002B     		cmp	r3, #0
 5361 1a6e 27D0     		beq	.L163
 5362              	.L162:
 5363              		.loc 1 1163 0 discriminator 3
 5364 1a70 0123     		movs	r3, #1
 5365 1a72 26E0     		b	.L164
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 117


 5366              	.L236:
 5367              		.align	2
 5368              	.L235:
 5369 1a74 00000000 		.word	currentCopedent
 5370 1a78 00000000 		.word	copedentMapping
 5371 1a7c 00000000 		.word	copedent
 5372 1a80 00000000 		.word	pedals_float
 5373 1a84 00000000 		.word	transposeFloat
 5374 1a88 00000000 		.word	openStringMIDI_Int
 5375 1a8c 00005C42 		.word	1113325568
 5376 1a90 00000442 		.word	1107558400
 5377 1a94 00000000 		.word	barMidiOuterStrings
 5378 1a98 00000000 		.word	midiBarSendOn
 5379 1a9c 00000000 		.word	numStrings
 5380 1aa0 ABAA2A43 		.word	1126869675
 5381 1aa4 00000000 		.word	midiSendOn
 5382 1aa8 00000000 		.word	prevStringPitchBend
 5383 1aac 00000000 		.word	stringMIDI
 5384 1ab0 00000000 		.word	USB_check_flag
 5385 1ab4 00000000 		.word	USB_active
 5386 1ab8 00000000 		.word	midiSent
 5387 1abc 00000000 		.word	midiOverflow
 5388              	.L163:
 5389              		.loc 1 1163 0 discriminator 4
 5390 1ac0 0023     		movs	r3, #0
 5391              	.L164:
 5392              		.loc 1 1163 0 discriminator 6
 5393 1ac2 002B     		cmp	r3, #0
 5394 1ac4 C6D0     		beq	.L165
1164:main.c        ****         {
1165:main.c        ****             ;
1166:main.c        ****         }
1167:main.c        ****         //testpin6_Write(1);
1168:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 5395              		.loc 1 1168 0 is_stmt 1
 5396 1ac6 A34B     		ldr	r3, .L237
 5397 1ac8 1B78     		ldrb	r3, [r3]
 5398 1aca DBB2     		uxtb	r3, r3
 5399 1acc 012B     		cmp	r3, #1
 5400 1ace 55D1     		bne	.L166
1169:main.c        ****         {
1170:main.c        ****             if (sendMessageEnd) //send end message
 5401              		.loc 1 1170 0
 5402 1ad0 A14B     		ldr	r3, .L237+4
 5403 1ad2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5404 1ad4 002B     		cmp	r3, #0
 5405 1ad6 1CD0     		beq	.L167
1171:main.c        ****             {
1172:main.c        ****                 myArray[0] = 253;
 5406              		.loc 1 1172 0
 5407 1ad8 A04B     		ldr	r3, .L237+8
 5408 1ada FD22     		movs	r2, #253
 5409 1adc 1A70     		strb	r2, [r3]
1173:main.c        ****                 myArray[1] = presetNumberToWrite;
 5410              		.loc 1 1173 0
 5411 1ade A04B     		ldr	r3, .L237+12
 5412 1ae0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 118


 5413 1ae2 9E4B     		ldr	r3, .L237+8
 5414 1ae4 5A70     		strb	r2, [r3, #1]
1174:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 5415              		.loc 1 1174 0
 5416 1ae6 9E4B     		ldr	r3, .L237+12
 5417 1ae8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5418 1aea 9E4B     		ldr	r3, .L237+16
 5419 1aec 1A70     		strb	r2, [r3]
1175:main.c        ****                 //display previous preset as loaded
1176:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5420              		.loc 1 1176 0
 5421 1aee FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1177:main.c        ****                 //OLED_invert(0);
1178:main.c        ****                 sendMessageEnd = 0;
 5422              		.loc 1 1178 0
 5423 1af2 994B     		ldr	r3, .L237+4
 5424 1af4 0022     		movs	r2, #0
 5425 1af6 1A70     		strb	r2, [r3]
1179:main.c        ****                 sendingMessage = 0;
 5426              		.loc 1 1179 0
 5427 1af8 964B     		ldr	r3, .L237
 5428 1afa 0022     		movs	r2, #0
 5429 1afc 1A70     		strb	r2, [r3]
1180:main.c        ****                 messageArraySendCount = 0;
 5430              		.loc 1 1180 0
 5431 1afe 9A4B     		ldr	r3, .L237+20
 5432 1b00 0022     		movs	r2, #0
 5433 1b02 1A80     		strh	r2, [r3]	@ movhi
1181:main.c        ****                 myArray[30] = 254;
 5434              		.loc 1 1181 0
 5435 1b04 954B     		ldr	r3, .L237+8
 5436 1b06 FE22     		movs	r2, #254
 5437 1b08 9A77     		strb	r2, [r3, #30]
1182:main.c        ****                 myArray[31] = 253;
 5438              		.loc 1 1182 0
 5439 1b0a 944B     		ldr	r3, .L237+8
 5440 1b0c FD22     		movs	r2, #253
 5441 1b0e DA77     		strb	r2, [r3, #31]
 5442 1b10 3AE2     		b	.L173
 5443              	.L167:
1183:main.c        ****                 
1184:main.c        ****             }
1185:main.c        ****             else //send chunks
1186:main.c        ****             {
1187:main.c        ****                 //send the next preset Chunkkkkk
1188:main.c        ****                 myArray[0] = 2;
 5444              		.loc 1 1188 0
 5445 1b12 924B     		ldr	r3, .L237+8
 5446 1b14 0222     		movs	r2, #2
 5447 1b16 1A70     		strb	r2, [r3]
1189:main.c        ****                 myArray[1] = presetNumberToWrite;
 5448              		.loc 1 1189 0
 5449 1b18 914B     		ldr	r3, .L237+12
 5450 1b1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5451 1b1c 8F4B     		ldr	r3, .L237+8
 5452 1b1e 5A70     		strb	r2, [r3, #1]
 5453              	.LBB37:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 119


1190:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 5454              		.loc 1 1190 0
 5455 1b20 0223     		movs	r3, #2
 5456 1b22 3B67     		str	r3, [r7, #112]
 5457 1b24 20E0     		b	.L169
 5458              	.L172:
1191:main.c        ****                 {
1192:main.c        ****                     if (messageArraySendCount < messageArraySize)
 5459              		.loc 1 1192 0
 5460 1b26 904B     		ldr	r3, .L237+20
 5461 1b28 1A88     		ldrh	r2, [r3]
 5462 1b2a 904B     		ldr	r3, .L237+24
 5463 1b2c 1B88     		ldrh	r3, [r3]
 5464 1b2e 9A42     		cmp	r2, r3
 5465 1b30 0FD2     		bcs	.L170
1193:main.c        ****                     {
1194:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 5466              		.loc 1 1194 0
 5467 1b32 8D4B     		ldr	r3, .L237+20
 5468 1b34 1B88     		ldrh	r3, [r3]
 5469 1b36 5A1C     		adds	r2, r3, #1
 5470 1b38 91B2     		uxth	r1, r2
 5471 1b3a 8B4A     		ldr	r2, .L237+20
 5472 1b3c 1180     		strh	r1, [r2]	@ movhi
 5473 1b3e 1A46     		mov	r2, r3
 5474 1b40 8B4B     		ldr	r3, .L237+28
 5475 1b42 9B5C     		ldrb	r3, [r3, r2]
 5476 1b44 D9B2     		uxtb	r1, r3
 5477 1b46 854A     		ldr	r2, .L237+8
 5478 1b48 3B6F     		ldr	r3, [r7, #112]
 5479 1b4a 1344     		add	r3, r3, r2
 5480 1b4c 0A46     		mov	r2, r1
 5481 1b4e 1A70     		strb	r2, [r3]
 5482 1b50 07E0     		b	.L171
 5483              	.L170:
1195:main.c        ****                     }
1196:main.c        ****                     else
1197:main.c        ****                     {
1198:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 5484              		.loc 1 1198 0
 5485 1b52 824A     		ldr	r2, .L237+8
 5486 1b54 3B6F     		ldr	r3, [r7, #112]
 5487 1b56 1344     		add	r3, r3, r2
 5488 1b58 EE22     		movs	r2, #238
 5489 1b5a 1A70     		strb	r2, [r3]
1199:main.c        ****                         sendMessageEnd = 1;
 5490              		.loc 1 1199 0
 5491 1b5c 7E4B     		ldr	r3, .L237+4
 5492 1b5e 0122     		movs	r2, #1
 5493 1b60 1A70     		strb	r2, [r3]
 5494              	.L171:
1190:main.c        ****                 {
 5495              		.loc 1 1190 0 discriminator 2
 5496 1b62 3B6F     		ldr	r3, [r7, #112]
 5497 1b64 0133     		adds	r3, r3, #1
 5498 1b66 3B67     		str	r3, [r7, #112]
 5499              	.L169:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 120


1190:main.c        ****                 {
 5500              		.loc 1 1190 0 is_stmt 0 discriminator 1
 5501 1b68 3B6F     		ldr	r3, [r7, #112]
 5502 1b6a 1D2B     		cmp	r3, #29
 5503 1b6c DBD9     		bls	.L172
 5504              	.LBE37:
1200:main.c        ****                     }
1201:main.c        ****                 }
1202:main.c        ****                 myArray[30] = 254;
 5505              		.loc 1 1202 0 is_stmt 1
 5506 1b6e 7B4B     		ldr	r3, .L237+8
 5507 1b70 FE22     		movs	r2, #254
 5508 1b72 9A77     		strb	r2, [r3, #30]
1203:main.c        ****                 myArray[31] = 253;
 5509              		.loc 1 1203 0
 5510 1b74 794B     		ldr	r3, .L237+8
 5511 1b76 FD22     		movs	r2, #253
 5512 1b78 DA77     		strb	r2, [r3, #31]
 5513 1b7a 05E2     		b	.L173
 5514              	.L166:
1204:main.c        ****             }    
1205:main.c        ****         }
1206:main.c        ****         
1207:main.c        ****         else if (sendSingleParamUpdate)
 5515              		.loc 1 1207 0
 5516 1b7c 7D4B     		ldr	r3, .L237+32
 5517 1b7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5518 1b80 002B     		cmp	r3, #0
 5519 1b82 1CD0     		beq	.L174
1208:main.c        ****         {
1209:main.c        ****             myArray[0] = 6;
 5520              		.loc 1 1209 0
 5521 1b84 754B     		ldr	r3, .L237+8
 5522 1b86 0622     		movs	r2, #6
 5523 1b88 1A70     		strb	r2, [r3]
1210:main.c        ****             myArray[1] = singleParamToUpdateHigh;
 5524              		.loc 1 1210 0
 5525 1b8a 7B4B     		ldr	r3, .L237+36
 5526 1b8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5527 1b8e 734B     		ldr	r3, .L237+8
 5528 1b90 5A70     		strb	r2, [r3, #1]
1211:main.c        ****             myArray[2] = singleParamToUpdateLow;
 5529              		.loc 1 1211 0
 5530 1b92 7A4B     		ldr	r3, .L237+40
 5531 1b94 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5532 1b96 714B     		ldr	r3, .L237+8
 5533 1b98 9A70     		strb	r2, [r3, #2]
1212:main.c        ****             myArray[3] = singleParamValueHigh;
 5534              		.loc 1 1212 0
 5535 1b9a 794B     		ldr	r3, .L237+44
 5536 1b9c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5537 1b9e 6F4B     		ldr	r3, .L237+8
 5538 1ba0 DA70     		strb	r2, [r3, #3]
1213:main.c        ****             myArray[4] = singleParamValueLow;
 5539              		.loc 1 1213 0
 5540 1ba2 784B     		ldr	r3, .L237+48
 5541 1ba4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 121


 5542 1ba6 6D4B     		ldr	r3, .L237+8
 5543 1ba8 1A71     		strb	r2, [r3, #4]
1214:main.c        ****             myArray[30] = 254;
 5544              		.loc 1 1214 0
 5545 1baa 6C4B     		ldr	r3, .L237+8
 5546 1bac FE22     		movs	r2, #254
 5547 1bae 9A77     		strb	r2, [r3, #30]
1215:main.c        ****             myArray[31] = 253;
 5548              		.loc 1 1215 0
 5549 1bb0 6A4B     		ldr	r3, .L237+8
 5550 1bb2 FD22     		movs	r2, #253
 5551 1bb4 DA77     		strb	r2, [r3, #31]
1216:main.c        ****             sendSingleParamUpdate = 0;
 5552              		.loc 1 1216 0
 5553 1bb6 6F4B     		ldr	r3, .L237+32
 5554 1bb8 0022     		movs	r2, #0
 5555 1bba 1A70     		strb	r2, [r3]
 5556 1bbc E4E1     		b	.L173
 5557              	.L174:
1217:main.c        ****         }
1218:main.c        ****         
1219:main.c        ****         else if (sendMappingChangeUpdate)
 5558              		.loc 1 1219 0
 5559 1bbe 724B     		ldr	r3, .L237+52
 5560 1bc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5561 1bc2 002B     		cmp	r3, #0
 5562 1bc4 24D0     		beq	.L175
1220:main.c        ****         {
1221:main.c        ****             myArray[0] = 7;
 5563              		.loc 1 1221 0
 5564 1bc6 654B     		ldr	r3, .L237+8
 5565 1bc8 0722     		movs	r2, #7
 5566 1bca 1A70     		strb	r2, [r3]
1222:main.c        ****             myArray[1] = mappingArray[0];
 5567              		.loc 1 1222 0
 5568 1bcc 6F4B     		ldr	r3, .L237+56
 5569 1bce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5570 1bd0 624B     		ldr	r3, .L237+8
 5571 1bd2 5A70     		strb	r2, [r3, #1]
1223:main.c        ****             myArray[2] =  mappingArray[1];
 5572              		.loc 1 1223 0
 5573 1bd4 6D4B     		ldr	r3, .L237+56
 5574 1bd6 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5575 1bd8 604B     		ldr	r3, .L237+8
 5576 1bda 9A70     		strb	r2, [r3, #2]
1224:main.c        ****             myArray[3] =  mappingArray[2];
 5577              		.loc 1 1224 0
 5578 1bdc 6B4B     		ldr	r3, .L237+56
 5579 1bde 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 5580 1be0 5E4B     		ldr	r3, .L237+8
 5581 1be2 DA70     		strb	r2, [r3, #3]
1225:main.c        ****             myArray[4] =  mappingArray[3];
 5582              		.loc 1 1225 0
 5583 1be4 694B     		ldr	r3, .L237+56
 5584 1be6 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5585 1be8 5C4B     		ldr	r3, .L237+8
 5586 1bea 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 122


1226:main.c        ****             myArray[5] =  mappingArray[4];
 5587              		.loc 1 1226 0
 5588 1bec 674B     		ldr	r3, .L237+56
 5589 1bee 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 5590 1bf0 5A4B     		ldr	r3, .L237+8
 5591 1bf2 5A71     		strb	r2, [r3, #5]
1227:main.c        ****             myArray[6] =  mappingArray[5];
 5592              		.loc 1 1227 0
 5593 1bf4 654B     		ldr	r3, .L237+56
 5594 1bf6 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 5595 1bf8 584B     		ldr	r3, .L237+8
 5596 1bfa 9A71     		strb	r2, [r3, #6]
1228:main.c        ****             myArray[30] = 254;
 5597              		.loc 1 1228 0
 5598 1bfc 574B     		ldr	r3, .L237+8
 5599 1bfe FE22     		movs	r2, #254
 5600 1c00 9A77     		strb	r2, [r3, #30]
1229:main.c        ****             myArray[31] = 253;
 5601              		.loc 1 1229 0
 5602 1c02 564B     		ldr	r3, .L237+8
 5603 1c04 FD22     		movs	r2, #253
 5604 1c06 DA77     		strb	r2, [r3, #31]
1230:main.c        ****             sendMappingChangeUpdate = 0;
 5605              		.loc 1 1230 0
 5606 1c08 5F4B     		ldr	r3, .L237+52
 5607 1c0a 0022     		movs	r2, #0
 5608 1c0c 1A70     		strb	r2, [r3]
 5609 1c0e BBE1     		b	.L173
 5610              	.L175:
1231:main.c        ****         }
1232:main.c        ****         else if (volumeWaitingToSend)
 5611              		.loc 1 1232 0
 5612 1c10 5F4B     		ldr	r3, .L237+60
 5613 1c12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5614 1c14 002B     		cmp	r3, #0
 5615 1c16 12D0     		beq	.L176
1233:main.c        ****         {
1234:main.c        ****             myArray[0] = 10;
 5616              		.loc 1 1234 0
 5617 1c18 504B     		ldr	r3, .L237+8
 5618 1c1a 0A22     		movs	r2, #10
 5619 1c1c 1A70     		strb	r2, [r3]
1235:main.c        ****             myArray[1] = volumeInt;
 5620              		.loc 1 1235 0
 5621 1c1e 5D4B     		ldr	r3, .L237+64
 5622 1c20 93F90030 		ldrsb	r3, [r3]
 5623 1c24 DAB2     		uxtb	r2, r3
 5624 1c26 4D4B     		ldr	r3, .L237+8
 5625 1c28 5A70     		strb	r2, [r3, #1]
1236:main.c        ****             myArray[30] = 254;
 5626              		.loc 1 1236 0
 5627 1c2a 4C4B     		ldr	r3, .L237+8
 5628 1c2c FE22     		movs	r2, #254
 5629 1c2e 9A77     		strb	r2, [r3, #30]
1237:main.c        ****             myArray[31] = 253;
 5630              		.loc 1 1237 0
 5631 1c30 4A4B     		ldr	r3, .L237+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 123


 5632 1c32 FD22     		movs	r2, #253
 5633 1c34 DA77     		strb	r2, [r3, #31]
1238:main.c        ****             volumeWaitingToSend = 0;
 5634              		.loc 1 1238 0
 5635 1c36 564B     		ldr	r3, .L237+60
 5636 1c38 0022     		movs	r2, #0
 5637 1c3a 1A70     		strb	r2, [r3]
 5638 1c3c A4E1     		b	.L173
 5639              	.L176:
1239:main.c        ****         }
1240:main.c        ****         
1241:main.c        ****         else if (sendFirmwareUpdateRequest == 1)
 5640              		.loc 1 1241 0
 5641 1c3e 564B     		ldr	r3, .L237+68
 5642 1c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5643 1c42 012B     		cmp	r3, #1
 5644 1c44 0FD1     		bne	.L177
1242:main.c        ****         {
1243:main.c        ****             myArray[0] = 11;
 5645              		.loc 1 1243 0
 5646 1c46 454B     		ldr	r3, .L237+8
 5647 1c48 0B22     		movs	r2, #11
 5648 1c4a 1A70     		strb	r2, [r3]
1244:main.c        ****             myArray[1] = 0;
 5649              		.loc 1 1244 0
 5650 1c4c 434B     		ldr	r3, .L237+8
 5651 1c4e 0022     		movs	r2, #0
 5652 1c50 5A70     		strb	r2, [r3, #1]
1245:main.c        ****             myArray[30] = 254;
 5653              		.loc 1 1245 0
 5654 1c52 424B     		ldr	r3, .L237+8
 5655 1c54 FE22     		movs	r2, #254
 5656 1c56 9A77     		strb	r2, [r3, #30]
1246:main.c        ****             myArray[31] = 253;
 5657              		.loc 1 1246 0
 5658 1c58 404B     		ldr	r3, .L237+8
 5659 1c5a FD22     		movs	r2, #253
 5660 1c5c DA77     		strb	r2, [r3, #31]
1247:main.c        ****             sendFirmwareUpdateRequest = 0;
 5661              		.loc 1 1247 0
 5662 1c5e 4E4B     		ldr	r3, .L237+68
 5663 1c60 0022     		movs	r2, #0
 5664 1c62 1A70     		strb	r2, [r3]
 5665 1c64 90E1     		b	.L173
 5666              	.L177:
1248:main.c        ****         }
1249:main.c        ****         else if (sendFirmwareUpdateRequest == 2)
 5667              		.loc 1 1249 0
 5668 1c66 4C4B     		ldr	r3, .L237+68
 5669 1c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5670 1c6a 022B     		cmp	r3, #2
 5671 1c6c 0FD1     		bne	.L178
1250:main.c        ****         {
1251:main.c        ****             myArray[0] = 12;
 5672              		.loc 1 1251 0
 5673 1c6e 3B4B     		ldr	r3, .L237+8
 5674 1c70 0C22     		movs	r2, #12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 124


 5675 1c72 1A70     		strb	r2, [r3]
1252:main.c        ****             myArray[1] = 0;
 5676              		.loc 1 1252 0
 5677 1c74 394B     		ldr	r3, .L237+8
 5678 1c76 0022     		movs	r2, #0
 5679 1c78 5A70     		strb	r2, [r3, #1]
1253:main.c        ****             myArray[30] = 254;
 5680              		.loc 1 1253 0
 5681 1c7a 384B     		ldr	r3, .L237+8
 5682 1c7c FE22     		movs	r2, #254
 5683 1c7e 9A77     		strb	r2, [r3, #30]
1254:main.c        ****             myArray[31] = 253;
 5684              		.loc 1 1254 0
 5685 1c80 364B     		ldr	r3, .L237+8
 5686 1c82 FD22     		movs	r2, #253
 5687 1c84 DA77     		strb	r2, [r3, #31]
1255:main.c        ****             sendFirmwareUpdateRequest = 0;
 5688              		.loc 1 1255 0
 5689 1c86 444B     		ldr	r3, .L237+68
 5690 1c88 0022     		movs	r2, #0
 5691 1c8a 1A70     		strb	r2, [r3]
 5692 1c8c 7CE1     		b	.L173
 5693              	.L178:
1256:main.c        ****         }
1257:main.c        ****         
1258:main.c        ****         else if (sendLocalPresetStoreCommand == 1)
 5694              		.loc 1 1258 0
 5695 1c8e 434B     		ldr	r3, .L237+72
 5696 1c90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5697 1c92 012B     		cmp	r3, #1
 5698 1c94 4FD1     		bne	.L179
1259:main.c        ****         {
1260:main.c        ****             myArray[0] = 14;
 5699              		.loc 1 1260 0
 5700 1c96 314B     		ldr	r3, .L237+8
 5701 1c98 0E22     		movs	r2, #14
 5702 1c9a 1A70     		strb	r2, [r3]
1261:main.c        ****             myArray[1] = presetNumberToStore;
 5703              		.loc 1 1261 0
 5704 1c9c 404B     		ldr	r3, .L237+76
 5705 1c9e 93F90030 		ldrsb	r3, [r3]
 5706 1ca2 DAB2     		uxtb	r2, r3
 5707 1ca4 2D4B     		ldr	r3, .L237+8
 5708 1ca6 5A70     		strb	r2, [r3, #1]
1262:main.c        ****             myArray[2] = 17;
 5709              		.loc 1 1262 0
 5710 1ca8 2C4B     		ldr	r3, .L237+8
 5711 1caa 1122     		movs	r2, #17
 5712 1cac 9A70     		strb	r2, [r3, #2]
1263:main.c        ****             myArray[3] = 18;
 5713              		.loc 1 1263 0
 5714 1cae 2B4B     		ldr	r3, .L237+8
 5715 1cb0 1222     		movs	r2, #18
 5716 1cb2 DA70     		strb	r2, [r3, #3]
1264:main.c        ****             myArray[4] = 1;
 5717              		.loc 1 1264 0
 5718 1cb4 294B     		ldr	r3, .L237+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 125


 5719 1cb6 0122     		movs	r2, #1
 5720 1cb8 1A71     		strb	r2, [r3, #4]
1265:main.c        ****             myArray[5] = 1;
 5721              		.loc 1 1265 0
 5722 1cba 284B     		ldr	r3, .L237+8
 5723 1cbc 0122     		movs	r2, #1
 5724 1cbe 5A71     		strb	r2, [r3, #5]
1266:main.c        ****             myArray[30] = 254;
 5725              		.loc 1 1266 0
 5726 1cc0 264B     		ldr	r3, .L237+8
 5727 1cc2 FE22     		movs	r2, #254
 5728 1cc4 9A77     		strb	r2, [r3, #30]
1267:main.c        ****             myArray[31] = 253;
 5729              		.loc 1 1267 0
 5730 1cc6 254B     		ldr	r3, .L237+8
 5731 1cc8 FD22     		movs	r2, #253
 5732 1cca DA77     		strb	r2, [r3, #31]
 5733              	.LBB38:
1268:main.c        ****             for (int i = 0; i < 14; i++)
 5734              		.loc 1 1268 0
 5735 1ccc 0023     		movs	r3, #0
 5736 1cce FB66     		str	r3, [r7, #108]
 5737 1cd0 0AE0     		b	.L180
 5738              	.L181:
1269:main.c        ****             {
1270:main.c        ****                  myArray[i+6] = newPresetName[i];
 5739              		.loc 1 1270 0 discriminator 3
 5740 1cd2 FB6E     		ldr	r3, [r7, #108]
 5741 1cd4 0633     		adds	r3, r3, #6
 5742 1cd6 3349     		ldr	r1, .L237+80
 5743 1cd8 FA6E     		ldr	r2, [r7, #108]
 5744 1cda 0A44     		add	r2, r2, r1
 5745 1cdc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5746 1cde 1F4A     		ldr	r2, .L237+8
 5747 1ce0 D154     		strb	r1, [r2, r3]
1268:main.c        ****             for (int i = 0; i < 14; i++)
 5748              		.loc 1 1268 0 discriminator 3
 5749 1ce2 FB6E     		ldr	r3, [r7, #108]
 5750 1ce4 0133     		adds	r3, r3, #1
 5751 1ce6 FB66     		str	r3, [r7, #108]
 5752              	.L180:
1268:main.c        ****             for (int i = 0; i < 14; i++)
 5753              		.loc 1 1268 0 is_stmt 0 discriminator 1
 5754 1ce8 FB6E     		ldr	r3, [r7, #108]
 5755 1cea 0D2B     		cmp	r3, #13
 5756 1cec F1DD     		ble	.L181
 5757              	.LBE38:
1271:main.c        ****             }
1272:main.c        ****             sendLocalPresetStoreCommand = 0;
 5758              		.loc 1 1272 0 is_stmt 1
 5759 1cee 2B4B     		ldr	r3, .L237+72
 5760 1cf0 0022     		movs	r2, #0
 5761 1cf2 1A70     		strb	r2, [r3]
1273:main.c        ****             patchNum = presetNumberToStore;
 5762              		.loc 1 1273 0
 5763 1cf4 2A4B     		ldr	r3, .L237+76
 5764 1cf6 93F90030 		ldrsb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 126


 5765 1cfa DAB2     		uxtb	r2, r3
 5766 1cfc 2A4B     		ldr	r3, .L237+84
 5767 1cfe 1A70     		strb	r2, [r3]
1274:main.c        ****             EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 5768              		.loc 1 1274 0
 5769 1d00 294B     		ldr	r3, .L237+84
 5770 1d02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5771 1d04 40F2D671 		movw	r1, #2006
 5772 1d08 1846     		mov	r0, r3
 5773 1d0a FFF7FEFF 		bl	EEPROM_WriteByte
1275:main.c        ****             neckPreset[currentNeck] = patchNum;
 5774              		.loc 1 1275 0
 5775 1d0e 274B     		ldr	r3, .L237+88
 5776 1d10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5777 1d12 1A46     		mov	r2, r3
 5778 1d14 244B     		ldr	r3, .L237+84
 5779 1d16 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5780 1d18 254B     		ldr	r3, .L237+92
 5781 1d1a 9954     		strb	r1, [r3, r2]
1276:main.c        ****             EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 5782              		.loc 1 1276 0
 5783 1d1c 224B     		ldr	r3, .L237+84
 5784 1d1e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5785 1d20 224B     		ldr	r3, .L237+88
 5786 1d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5787 1d24 9BB2     		uxth	r3, r3
 5788 1d26 03F2DC73 		addw	r3, r3, #2012
 5789 1d2a 9BB2     		uxth	r3, r3
 5790 1d2c 1946     		mov	r1, r3
 5791 1d2e 1046     		mov	r0, r2
 5792 1d30 FFF7FEFF 		bl	EEPROM_WriteByte
 5793 1d34 28E1     		b	.L173
 5794              	.L179:
1277:main.c        ****         }
1278:main.c        ****         
1279:main.c        ****         else if (sendKnobs)
 5795              		.loc 1 1279 0
 5796 1d36 1F4B     		ldr	r3, .L237+96
 5797 1d38 1B78     		ldrb	r3, [r3]
 5798 1d3a DBB2     		uxtb	r3, r3
 5799 1d3c 002B     		cmp	r3, #0
 5800 1d3e 00F0B680 		beq	.L182
1280:main.c        ****         {
1281:main.c        ****             if (whichMacroPageIsActive == 0)
 5801              		.loc 1 1281 0
 5802 1d42 1D4B     		ldr	r3, .L237+100
 5803 1d44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5804 1d46 002B     		cmp	r3, #0
 5805 1d48 38D1     		bne	.L183
1282:main.c        ****             {
1283:main.c        ****                 myArray[0] = 3; //sending knob stuff, not a preset send
 5806              		.loc 1 1283 0
 5807 1d4a 044B     		ldr	r3, .L237+8
 5808 1d4c 0322     		movs	r2, #3
 5809 1d4e 1A70     		strb	r2, [r3]
 5810 1d50 37E0     		b	.L184
 5811              	.L238:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 127


 5812 1d52 00BF     		.align	2
 5813              	.L237:
 5814 1d54 00000000 		.word	sendingMessage
 5815 1d58 00000000 		.word	sendMessageEnd
 5816 1d5c 00000000 		.word	myArray
 5817 1d60 00000000 		.word	presetNumberToWrite
 5818 1d64 00000000 		.word	currentPresetSelection
 5819 1d68 00000000 		.word	messageArraySendCount
 5820 1d6c 00000000 		.word	messageArraySize
 5821 1d70 00000000 		.word	presetArray
 5822 1d74 00000000 		.word	sendSingleParamUpdate
 5823 1d78 00000000 		.word	singleParamToUpdateHigh
 5824 1d7c 00000000 		.word	singleParamToUpdateLow
 5825 1d80 00000000 		.word	singleParamValueHigh
 5826 1d84 00000000 		.word	singleParamValueLow
 5827 1d88 00000000 		.word	sendMappingChangeUpdate
 5828 1d8c 00000000 		.word	mappingArray
 5829 1d90 00000000 		.word	volumeWaitingToSend
 5830 1d94 00000000 		.word	volumeInt
 5831 1d98 00000000 		.word	sendFirmwareUpdateRequest
 5832 1d9c 00000000 		.word	sendLocalPresetStoreCommand
 5833 1da0 00000000 		.word	presetNumberToStore
 5834 1da4 00000000 		.word	newPresetName
 5835 1da8 00000000 		.word	patchNum
 5836 1dac 00000000 		.word	currentNeck
 5837 1db0 00000000 		.word	neckPreset
 5838 1db4 00000000 		.word	sendKnobs
 5839 1db8 00000000 		.word	whichMacroPageIsActive
 5840              	.L183:
1284:main.c        ****             }
1285:main.c        ****             else
1286:main.c        ****             {
1287:main.c        ****                 myArray[0] = 13; //sending additional knob stuff, not a preset send
 5841              		.loc 1 1287 0
 5842 1dbc 9F4B     		ldr	r3, .L239
 5843 1dbe 0D22     		movs	r2, #13
 5844 1dc0 1A70     		strb	r2, [r3]
 5845              	.L184:
 5846              	.LBB39:
1288:main.c        ****             }
1289:main.c        ****             for (int i = 0; i < 8; i++)
 5847              		.loc 1 1289 0
 5848 1dc2 0023     		movs	r3, #0
 5849 1dc4 BB66     		str	r3, [r7, #104]
 5850 1dc6 0DE0     		b	.L185
 5851              	.L186:
1290:main.c        ****             {
1291:main.c        ****                 myArray[i + 1] = macroKnobValues[i+whichMacroPageIsActive];
 5852              		.loc 1 1291 0 discriminator 3
 5853 1dc8 BB6E     		ldr	r3, [r7, #104]
 5854 1dca 0133     		adds	r3, r3, #1
 5855 1dcc 9C4A     		ldr	r2, .L239+4
 5856 1dce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5857 1dd0 1146     		mov	r1, r2
 5858 1dd2 BA6E     		ldr	r2, [r7, #104]
 5859 1dd4 0A44     		add	r2, r2, r1
 5860 1dd6 9B49     		ldr	r1, .L239+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 128


 5861 1dd8 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5862 1dda 984A     		ldr	r2, .L239
 5863 1ddc D154     		strb	r1, [r2, r3]
1289:main.c        ****             {
 5864              		.loc 1 1289 0 discriminator 3
 5865 1dde BB6E     		ldr	r3, [r7, #104]
 5866 1de0 0133     		adds	r3, r3, #1
 5867 1de2 BB66     		str	r3, [r7, #104]
 5868              	.L185:
1289:main.c        ****             {
 5869              		.loc 1 1289 0 is_stmt 0 discriminator 1
 5870 1de4 BB6E     		ldr	r3, [r7, #104]
 5871 1de6 072B     		cmp	r3, #7
 5872 1de8 EEDD     		ble	.L186
 5873              	.LBE39:
 5874              	.LBB40:
1292:main.c        ****             }
1293:main.c        ****             for (int i = 0; i < 4; i++)
 5875              		.loc 1 1293 0 is_stmt 1
 5876 1dea 0023     		movs	r3, #0
 5877 1dec 7B66     		str	r3, [r7, #100]
 5878 1dee 0AE0     		b	.L187
 5879              	.L188:
1294:main.c        ****             {
1295:main.c        ****                 myArray[i + 9] = knobs[i];
 5880              		.loc 1 1295 0 discriminator 3
 5881 1df0 7B6E     		ldr	r3, [r7, #100]
 5882 1df2 0933     		adds	r3, r3, #9
 5883 1df4 9449     		ldr	r1, .L239+12
 5884 1df6 7A6E     		ldr	r2, [r7, #100]
 5885 1df8 0A44     		add	r2, r2, r1
 5886 1dfa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5887 1dfc 8F4A     		ldr	r2, .L239
 5888 1dfe D154     		strb	r1, [r2, r3]
1293:main.c        ****             {
 5889              		.loc 1 1293 0 discriminator 3
 5890 1e00 7B6E     		ldr	r3, [r7, #100]
 5891 1e02 0133     		adds	r3, r3, #1
 5892 1e04 7B66     		str	r3, [r7, #100]
 5893              	.L187:
1293:main.c        ****             {
 5894              		.loc 1 1293 0 is_stmt 0 discriminator 1
 5895 1e06 7B6E     		ldr	r3, [r7, #100]
 5896 1e08 032B     		cmp	r3, #3
 5897 1e0a F1DD     		ble	.L188
 5898              	.LBE40:
 5899              	.LBB41:
1296:main.c        ****             }
1297:main.c        ****             for (int i = 0; i < 10; i++)
 5900              		.loc 1 1297 0 is_stmt 1
 5901 1e0c 0023     		movs	r3, #0
 5902 1e0e 3B66     		str	r3, [r7, #96]
 5903 1e10 0AE0     		b	.L189
 5904              	.L190:
1298:main.c        ****             {
1299:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 5905              		.loc 1 1299 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 129


 5906 1e12 3B6E     		ldr	r3, [r7, #96]
 5907 1e14 0D33     		adds	r3, r3, #13
 5908 1e16 8D49     		ldr	r1, .L239+16
 5909 1e18 3A6E     		ldr	r2, [r7, #96]
 5910 1e1a 0A44     		add	r2, r2, r1
 5911 1e1c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5912 1e1e 874A     		ldr	r2, .L239
 5913 1e20 D154     		strb	r1, [r2, r3]
1297:main.c        ****             {
 5914              		.loc 1 1297 0 discriminator 3
 5915 1e22 3B6E     		ldr	r3, [r7, #96]
 5916 1e24 0133     		adds	r3, r3, #1
 5917 1e26 3B66     		str	r3, [r7, #96]
 5918              	.L189:
1297:main.c        ****             {
 5919              		.loc 1 1297 0 is_stmt 0 discriminator 1
 5920 1e28 3B6E     		ldr	r3, [r7, #96]
 5921 1e2a 092B     		cmp	r3, #9
 5922 1e2c F1DD     		ble	.L190
 5923              	.LBE41:
1300:main.c        ****             }
1301:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (octaveAction << 6);
 5924              		.loc 1 1301 0 is_stmt 1
 5925 1e2e 884B     		ldr	r3, .L239+20
 5926 1e30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5927 1e32 1B01     		lsls	r3, r3, #4
 5928 1e34 5AB2     		sxtb	r2, r3
 5929 1e36 874B     		ldr	r3, .L239+24
 5930 1e38 1B68     		ldr	r3, [r3]
 5931 1e3a 5BB2     		sxtb	r3, r3
 5932 1e3c 1343     		orrs	r3, r3, r2
 5933 1e3e 5AB2     		sxtb	r2, r3
 5934 1e40 854B     		ldr	r3, .L239+28
 5935 1e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5936 1e44 5B01     		lsls	r3, r3, #5
 5937 1e46 5BB2     		sxtb	r3, r3
 5938 1e48 1343     		orrs	r3, r3, r2
 5939 1e4a 5AB2     		sxtb	r2, r3
 5940 1e4c 834B     		ldr	r3, .L239+32
 5941 1e4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5942 1e50 9B01     		lsls	r3, r3, #6
 5943 1e52 5BB2     		sxtb	r3, r3
 5944 1e54 1343     		orrs	r3, r3, r2
 5945 1e56 5BB2     		sxtb	r3, r3
 5946 1e58 DAB2     		uxtb	r2, r3
 5947 1e5a 784B     		ldr	r3, .L239
 5948 1e5c 1A76     		strb	r2, [r3, #24]
1302:main.c        ****             myArray[25] = patchNum;
 5949              		.loc 1 1302 0
 5950 1e5e 804B     		ldr	r3, .L239+36
 5951 1e60 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5952 1e62 764B     		ldr	r3, .L239
 5953 1e64 5A76     		strb	r2, [r3, #25]
1303:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5954              		.loc 1 1303 0
 5955 1e66 7F4B     		ldr	r3, .L239+40
 5956 1e68 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 130


 5957 1e6c 1B12     		asrs	r3, r3, #8
 5958 1e6e 1BB2     		sxth	r3, r3
 5959 1e70 DAB2     		uxtb	r2, r3
 5960 1e72 724B     		ldr	r3, .L239
 5961 1e74 9A76     		strb	r2, [r3, #26]
1304:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5962              		.loc 1 1304 0
 5963 1e76 7B4B     		ldr	r3, .L239+40
 5964 1e78 B3F90030 		ldrsh	r3, [r3]
 5965 1e7c DAB2     		uxtb	r2, r3
 5966 1e7e 6F4B     		ldr	r3, .L239
 5967 1e80 DA76     		strb	r2, [r3, #27]
1305:main.c        ****             myArray[28] = barMidiOuterStrings[1] >> 8;
 5968              		.loc 1 1305 0
 5969 1e82 794B     		ldr	r3, .L239+44
 5970 1e84 5B88     		ldrh	r3, [r3, #2]
 5971 1e86 1B0A     		lsrs	r3, r3, #8
 5972 1e88 9BB2     		uxth	r3, r3
 5973 1e8a DAB2     		uxtb	r2, r3
 5974 1e8c 6B4B     		ldr	r3, .L239
 5975 1e8e 1A77     		strb	r2, [r3, #28]
1306:main.c        ****             myArray[29] = barMidiOuterStrings[1] & 0xff;
 5976              		.loc 1 1306 0
 5977 1e90 754B     		ldr	r3, .L239+44
 5978 1e92 5B88     		ldrh	r3, [r3, #2]
 5979 1e94 DAB2     		uxtb	r2, r3
 5980 1e96 694B     		ldr	r3, .L239
 5981 1e98 5A77     		strb	r2, [r3, #29]
1307:main.c        ****             myArray[30] = 254;
 5982              		.loc 1 1307 0
 5983 1e9a 684B     		ldr	r3, .L239
 5984 1e9c FE22     		movs	r2, #254
 5985 1e9e 9A77     		strb	r2, [r3, #30]
1308:main.c        ****             myArray[31] = 253;
 5986              		.loc 1 1308 0
 5987 1ea0 664B     		ldr	r3, .L239
 5988 1ea2 FD22     		movs	r2, #253
 5989 1ea4 DA77     		strb	r2, [r3, #31]
1309:main.c        ****             
1310:main.c        ****             
1311:main.c        ****             sendKnobs = 0;
 5990              		.loc 1 1311 0
 5991 1ea6 714B     		ldr	r3, .L239+48
 5992 1ea8 0022     		movs	r2, #0
 5993 1eaa 1A70     		strb	r2, [r3]
 5994 1eac 6CE0     		b	.L173
 5995              	.L182:
1312:main.c        ****         }
1313:main.c        ****         else
1314:main.c        ****         {
1315:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 5996              		.loc 1 1315 0
 5997 1eae 634B     		ldr	r3, .L239
 5998 1eb0 0122     		movs	r2, #1
 5999 1eb2 1A70     		strb	r2, [r3]
 6000              	.LBB42:
1316:main.c        ****             for (int i = 0; i < 12; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 131


 6001              		.loc 1 1316 0
 6002 1eb4 0023     		movs	r3, #0
 6003 1eb6 FB65     		str	r3, [r7, #92]
 6004 1eb8 24E0     		b	.L191
 6005              	.L192:
 6006              	.LBB43:
1317:main.c        ****             {
1318:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 6007              		.loc 1 1318 0 discriminator 3
 6008 1eba 6D4A     		ldr	r2, .L239+52
 6009 1ebc FB6D     		ldr	r3, [r7, #92]
 6010 1ebe 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 6011 1ec2 4FF08841 		mov	r1, #1140850688
 6012 1ec6 1846     		mov	r0, r3
 6013 1ec8 FFF7FEFF 		bl	__aeabi_fmul
 6014 1ecc 0346     		mov	r3, r0
 6015 1ece 1846     		mov	r0, r3
 6016 1ed0 FFF7FEFF 		bl	roundf
 6017 1ed4 0346     		mov	r3, r0
 6018 1ed6 1846     		mov	r0, r3
 6019 1ed8 FFF7FEFF 		bl	__aeabi_f2iz
 6020 1edc 0346     		mov	r3, r0
 6021 1ede 7B61     		str	r3, [r7, #20]
1319:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 6022              		.loc 1 1319 0 discriminator 3
 6023 1ee0 FB6D     		ldr	r3, [r7, #92]
 6024 1ee2 5B00     		lsls	r3, r3, #1
 6025 1ee4 0133     		adds	r3, r3, #1
 6026 1ee6 7A69     		ldr	r2, [r7, #20]
 6027 1ee8 1212     		asrs	r2, r2, #8
 6028 1eea D1B2     		uxtb	r1, r2
 6029 1eec 534A     		ldr	r2, .L239
 6030 1eee D154     		strb	r1, [r2, r3]
1320:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 6031              		.loc 1 1320 0 discriminator 3
 6032 1ef0 FB6D     		ldr	r3, [r7, #92]
 6033 1ef2 0133     		adds	r3, r3, #1
 6034 1ef4 5B00     		lsls	r3, r3, #1
 6035 1ef6 7A69     		ldr	r2, [r7, #20]
 6036 1ef8 D1B2     		uxtb	r1, r2
 6037 1efa 504A     		ldr	r2, .L239
 6038 1efc D154     		strb	r1, [r2, r3]
 6039              	.LBE43:
1316:main.c        ****             {
 6040              		.loc 1 1316 0 discriminator 3
 6041 1efe FB6D     		ldr	r3, [r7, #92]
 6042 1f00 0133     		adds	r3, r3, #1
 6043 1f02 FB65     		str	r3, [r7, #92]
 6044              	.L191:
1316:main.c        ****             {
 6045              		.loc 1 1316 0 is_stmt 0 discriminator 1
 6046 1f04 FB6D     		ldr	r3, [r7, #92]
 6047 1f06 0B2B     		cmp	r3, #11
 6048 1f08 D7DD     		ble	.L192
 6049              	.LBE42:
1321:main.c        ****             }
1322:main.c        ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 132


1323:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (octaveAction << 6);
 6050              		.loc 1 1323 0 is_stmt 1
 6051 1f0a 514B     		ldr	r3, .L239+20
 6052 1f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6053 1f0e 1B01     		lsls	r3, r3, #4
 6054 1f10 5AB2     		sxtb	r2, r3
 6055 1f12 504B     		ldr	r3, .L239+24
 6056 1f14 1B68     		ldr	r3, [r3]
 6057 1f16 5BB2     		sxtb	r3, r3
 6058 1f18 1343     		orrs	r3, r3, r2
 6059 1f1a 5AB2     		sxtb	r2, r3
 6060 1f1c 4E4B     		ldr	r3, .L239+28
 6061 1f1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6062 1f20 5B01     		lsls	r3, r3, #5
 6063 1f22 5BB2     		sxtb	r3, r3
 6064 1f24 1343     		orrs	r3, r3, r2
 6065 1f26 5AB2     		sxtb	r2, r3
 6066 1f28 4C4B     		ldr	r3, .L239+32
 6067 1f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6068 1f2c 9B01     		lsls	r3, r3, #6
 6069 1f2e 5BB2     		sxtb	r3, r3
 6070 1f30 1343     		orrs	r3, r3, r2
 6071 1f32 5BB2     		sxtb	r3, r3
 6072 1f34 DAB2     		uxtb	r2, r3
 6073 1f36 414B     		ldr	r3, .L239
 6074 1f38 1A76     		strb	r2, [r3, #24]
1324:main.c        ****             myArray[25] = patchNum;
 6075              		.loc 1 1324 0
 6076 1f3a 494B     		ldr	r3, .L239+36
 6077 1f3c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6078 1f3e 3F4B     		ldr	r3, .L239
 6079 1f40 5A76     		strb	r2, [r3, #25]
1325:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 6080              		.loc 1 1325 0
 6081 1f42 484B     		ldr	r3, .L239+40
 6082 1f44 B3F90030 		ldrsh	r3, [r3]
 6083 1f48 1B12     		asrs	r3, r3, #8
 6084 1f4a 1BB2     		sxth	r3, r3
 6085 1f4c DAB2     		uxtb	r2, r3
 6086 1f4e 3B4B     		ldr	r3, .L239
 6087 1f50 9A76     		strb	r2, [r3, #26]
1326:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 6088              		.loc 1 1326 0
 6089 1f52 444B     		ldr	r3, .L239+40
 6090 1f54 B3F90030 		ldrsh	r3, [r3]
 6091 1f58 DAB2     		uxtb	r2, r3
 6092 1f5a 384B     		ldr	r3, .L239
 6093 1f5c DA76     		strb	r2, [r3, #27]
1327:main.c        ****             myArray[28] = barMidiOuterStrings[0] >> 8;
 6094              		.loc 1 1327 0
 6095 1f5e 424B     		ldr	r3, .L239+44
 6096 1f60 1B88     		ldrh	r3, [r3]
 6097 1f62 1B0A     		lsrs	r3, r3, #8
 6098 1f64 9BB2     		uxth	r3, r3
 6099 1f66 DAB2     		uxtb	r2, r3
 6100 1f68 344B     		ldr	r3, .L239
 6101 1f6a 1A77     		strb	r2, [r3, #28]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 133


1328:main.c        ****             myArray[29] = barMidiOuterStrings[0] & 0xff;
 6102              		.loc 1 1328 0
 6103 1f6c 3E4B     		ldr	r3, .L239+44
 6104 1f6e 1B88     		ldrh	r3, [r3]
 6105 1f70 DAB2     		uxtb	r2, r3
 6106 1f72 324B     		ldr	r3, .L239
 6107 1f74 5A77     		strb	r2, [r3, #29]
1329:main.c        ****             myArray[30] = 254;
 6108              		.loc 1 1329 0
 6109 1f76 314B     		ldr	r3, .L239
 6110 1f78 FE22     		movs	r2, #254
 6111 1f7a 9A77     		strb	r2, [r3, #30]
1330:main.c        ****             myArray[31] = 253;
 6112              		.loc 1 1330 0
 6113 1f7c 2F4B     		ldr	r3, .L239
 6114 1f7e FD22     		movs	r2, #253
 6115 1f80 DA77     		strb	r2, [r3, #31]
1331:main.c        ****             
1332:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 6116              		.loc 1 1332 0
 6117 1f82 3A4B     		ldr	r3, .L239+48
 6118 1f84 0122     		movs	r2, #1
 6119 1f86 1A70     		strb	r2, [r3]
 6120              	.L173:
1333:main.c        ****         }
1334:main.c        **** 
1335:main.c        ****         //parse input from synth board (names)
1336:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 6121              		.loc 1 1336 0
 6122 1f88 3A4B     		ldr	r3, .L239+56
 6123 1f8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6124 1f8c FD2B     		cmp	r3, #253
 6125 1f8e 40F0CE80 		bne	.L193
 6126              		.loc 1 1336 0 is_stmt 0 discriminator 1
 6127 1f92 384B     		ldr	r3, .L239+56
 6128 1f94 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 6129 1f96 FE2B     		cmp	r3, #254
 6130 1f98 40F0C980 		bne	.L193
 6131              	.LBB44:
1337:main.c        ****         {
1338:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 6132              		.loc 1 1338 0 is_stmt 1
 6133 1f9c 354B     		ldr	r3, .L239+56
 6134 1f9e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6135 1fa0 3B61     		str	r3, [r7, #16]
1339:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 6136              		.loc 1 1339 0
 6137 1fa2 344B     		ldr	r3, .L239+56
 6138 1fa4 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 6139 1fa6 FB60     		str	r3, [r7, #12]
1340:main.c        ****             int bufferPointer = 2;
 6140              		.loc 1 1340 0
 6141 1fa8 0223     		movs	r3, #2
 6142 1faa BB65     		str	r3, [r7, #88]
 6143              	.LBB45:
1341:main.c        ****             for (int i = 0; i < PRESET_NAME_LENGTH_IN_BYTES; i++)
 6144              		.loc 1 1341 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 134


 6145 1fac 0023     		movs	r3, #0
 6146 1fae 7B65     		str	r3, [r7, #84]
 6147 1fb0 14E0     		b	.L194
 6148              	.L195:
1342:main.c        ****             {
1343:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 6149              		.loc 1 1343 0 discriminator 3
 6150 1fb2 304A     		ldr	r2, .L239+56
 6151 1fb4 BB6D     		ldr	r3, [r7, #88]
 6152 1fb6 1344     		add	r3, r3, r2
 6153 1fb8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6154 1fba 2F49     		ldr	r1, .L239+60
 6155 1fbc 3A69     		ldr	r2, [r7, #16]
 6156 1fbe 1346     		mov	r3, r2
 6157 1fc0 DB00     		lsls	r3, r3, #3
 6158 1fc2 9B1A     		subs	r3, r3, r2
 6159 1fc4 5B00     		lsls	r3, r3, #1
 6160 1fc6 CA18     		adds	r2, r1, r3
 6161 1fc8 7B6D     		ldr	r3, [r7, #84]
 6162 1fca 1344     		add	r3, r3, r2
 6163 1fcc 0246     		mov	r2, r0
 6164 1fce 1A70     		strb	r2, [r3]
1344:main.c        ****                 bufferPointer++;
 6165              		.loc 1 1344 0 discriminator 3
 6166 1fd0 BB6D     		ldr	r3, [r7, #88]
 6167 1fd2 0133     		adds	r3, r3, #1
 6168 1fd4 BB65     		str	r3, [r7, #88]
1341:main.c        ****             for (int i = 0; i < PRESET_NAME_LENGTH_IN_BYTES; i++)
 6169              		.loc 1 1341 0 discriminator 3
 6170 1fd6 7B6D     		ldr	r3, [r7, #84]
 6171 1fd8 0133     		adds	r3, r3, #1
 6172 1fda 7B65     		str	r3, [r7, #84]
 6173              	.L194:
1341:main.c        ****             for (int i = 0; i < PRESET_NAME_LENGTH_IN_BYTES; i++)
 6174              		.loc 1 1341 0 is_stmt 0 discriminator 1
 6175 1fdc 7B6D     		ldr	r3, [r7, #84]
 6176 1fde 0D2B     		cmp	r3, #13
 6177 1fe0 E7DD     		ble	.L195
 6178              	.LBE45:
1345:main.c        ****             }
1346:main.c        ****             bufferPointer = 17;
 6179              		.loc 1 1346 0 is_stmt 1
 6180 1fe2 1123     		movs	r3, #17
 6181 1fe4 BB65     		str	r3, [r7, #88]
1347:main.c        ****             if (whichMacroToStoreName < 8)
 6182              		.loc 1 1347 0
 6183 1fe6 FB68     		ldr	r3, [r7, #12]
 6184 1fe8 072B     		cmp	r3, #7
 6185 1fea 20DC     		bgt	.L196
 6186              	.LBB46:
1348:main.c        ****             {
1349:main.c        ****                 for (int i = 0; i < MACRO_NAME_LENGTH_IN_BYTES; i++)
 6187              		.loc 1 1349 0
 6188 1fec 0023     		movs	r3, #0
 6189 1fee 3B65     		str	r3, [r7, #80]
 6190 1ff0 19E0     		b	.L197
 6191              	.L198:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 135


1350:main.c        ****                 {
1351:main.c        ****                     macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[bu
 6192              		.loc 1 1351 0 discriminator 3
 6193 1ff2 204A     		ldr	r2, .L239+56
 6194 1ff4 BB6D     		ldr	r3, [r7, #88]
 6195 1ff6 1344     		add	r3, r3, r2
 6196 1ff8 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 6197 1ffa 2048     		ldr	r0, .L239+64
 6198 1ffc FB68     		ldr	r3, [r7, #12]
 6199 1ffe 3969     		ldr	r1, [r7, #16]
 6200 2000 1A46     		mov	r2, r3
 6201 2002 D200     		lsls	r2, r2, #3
 6202 2004 1A44     		add	r2, r2, r3
 6203 2006 0B46     		mov	r3, r1
 6204 2008 DB00     		lsls	r3, r3, #3
 6205 200a 0B44     		add	r3, r3, r1
 6206 200c 1B01     		lsls	r3, r3, #4
 6207 200e 1344     		add	r3, r3, r2
 6208 2010 C218     		adds	r2, r0, r3
 6209 2012 3B6D     		ldr	r3, [r7, #80]
 6210 2014 1344     		add	r3, r3, r2
 6211 2016 2246     		mov	r2, r4
 6212 2018 1A70     		strb	r2, [r3]
1352:main.c        ****                     bufferPointer++;
 6213              		.loc 1 1352 0 discriminator 3
 6214 201a BB6D     		ldr	r3, [r7, #88]
 6215 201c 0133     		adds	r3, r3, #1
 6216 201e BB65     		str	r3, [r7, #88]
1349:main.c        ****                 {
 6217              		.loc 1 1349 0 discriminator 3
 6218 2020 3B6D     		ldr	r3, [r7, #80]
 6219 2022 0133     		adds	r3, r3, #1
 6220 2024 3B65     		str	r3, [r7, #80]
 6221              	.L197:
1349:main.c        ****                 {
 6222              		.loc 1 1349 0 is_stmt 0 discriminator 1
 6223 2026 3B6D     		ldr	r3, [r7, #80]
 6224 2028 082B     		cmp	r3, #8
 6225 202a E2DD     		ble	.L198
 6226 202c 6AE0     		b	.L199
 6227              	.L196:
 6228              	.LBE46:
1353:main.c        ****                 }
1354:main.c        ****             }
1355:main.c        ****             else if (whichMacroToStoreName < 12) //if it's macro #8-12 it's actually a control knob
 6229              		.loc 1 1355 0 is_stmt 1
 6230 202e FB68     		ldr	r3, [r7, #12]
 6231 2030 0B2B     		cmp	r3, #11
 6232 2032 46DC     		bgt	.L200
 6233              	.LBB47:
1356:main.c        ****             {
1357:main.c        ****                 for (int i = 0; i < CONTROL_NAME_LENGTH_IN_BYTES; i++)
 6234              		.loc 1 1357 0
 6235 2034 0023     		movs	r3, #0
 6236 2036 FB64     		str	r3, [r7, #76]
 6237 2038 3FE0     		b	.L201
 6238              	.L240:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 136


 6239 203a 00BF     		.align	2
 6240              	.L239:
 6241 203c 00000000 		.word	myArray
 6242 2040 00000000 		.word	whichMacroPageIsActive
 6243 2044 00000000 		.word	macroKnobValues
 6244 2048 00000000 		.word	knobs
 6245 204c 00000000 		.word	pedals8bit
 6246 2050 00000000 		.word	voice
 6247 2054 00000000 		.word	octave
 6248 2058 00000000 		.word	dualSlider
 6249 205c 00000000 		.word	octaveAction
 6250 2060 00000000 		.word	patchNum
 6251 2064 00000000 		.word	processed_volumePedal
 6252 2068 00000000 		.word	barMidiOuterStrings
 6253 206c 00000000 		.word	sendKnobs
 6254 2070 00000000 		.word	stringMIDI
 6255 2074 00000000 		.word	inBuffer
 6256 2078 00000000 		.word	presetNamesArray
 6257 207c 00000000 		.word	macroNamesArray
 6258              	.L202:
1358:main.c        ****                 {
1359:main.c        ****                     controlNamesArray[whichPresetToStoreName][(whichMacroToStoreName - 8)][i] = inB
 6259              		.loc 1 1359 0 discriminator 3
 6260 2080 FB68     		ldr	r3, [r7, #12]
 6261 2082 083B     		subs	r3, r3, #8
 6262 2084 7649     		ldr	r1, .L241
 6263 2086 BA6D     		ldr	r2, [r7, #88]
 6264 2088 0A44     		add	r2, r2, r1
 6265 208a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 6266 208c 7548     		ldr	r0, .L241+4
 6267 208e 3969     		ldr	r1, [r7, #16]
 6268 2090 1A46     		mov	r2, r3
 6269 2092 9200     		lsls	r2, r2, #2
 6270 2094 1A44     		add	r2, r2, r3
 6271 2096 5300     		lsls	r3, r2, #1
 6272 2098 1A46     		mov	r2, r3
 6273 209a 0B46     		mov	r3, r1
 6274 209c 9B00     		lsls	r3, r3, #2
 6275 209e 0B44     		add	r3, r3, r1
 6276 20a0 DB00     		lsls	r3, r3, #3
 6277 20a2 1344     		add	r3, r3, r2
 6278 20a4 C218     		adds	r2, r0, r3
 6279 20a6 FB6C     		ldr	r3, [r7, #76]
 6280 20a8 1344     		add	r3, r3, r2
 6281 20aa 2246     		mov	r2, r4
 6282 20ac 1A70     		strb	r2, [r3]
1360:main.c        ****                     bufferPointer++;
 6283              		.loc 1 1360 0 discriminator 3
 6284 20ae BB6D     		ldr	r3, [r7, #88]
 6285 20b0 0133     		adds	r3, r3, #1
 6286 20b2 BB65     		str	r3, [r7, #88]
1357:main.c        ****                 {
 6287              		.loc 1 1357 0 discriminator 3
 6288 20b4 FB6C     		ldr	r3, [r7, #76]
 6289 20b6 0133     		adds	r3, r3, #1
 6290 20b8 FB64     		str	r3, [r7, #76]
 6291              	.L201:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 137


1357:main.c        ****                 {
 6292              		.loc 1 1357 0 is_stmt 0 discriminator 1
 6293 20ba FB6C     		ldr	r3, [r7, #76]
 6294 20bc 092B     		cmp	r3, #9
 6295 20be DFDD     		ble	.L202
 6296 20c0 20E0     		b	.L199
 6297              	.L200:
 6298              	.LBE47:
 6299              	.LBB48:
1361:main.c        ****                 }
1362:main.c        ****             }
1363:main.c        ****             else
1364:main.c        ****             {
1365:main.c        ****                 for (int i = 0; i < MACRO_NAME_LENGTH_IN_BYTES; i++)
 6300              		.loc 1 1365 0 is_stmt 1
 6301 20c2 0023     		movs	r3, #0
 6302 20c4 BB64     		str	r3, [r7, #72]
 6303 20c6 1AE0     		b	.L203
 6304              	.L204:
1366:main.c        ****                 {
1367:main.c        ****                     macroNamesArray[whichPresetToStoreName][whichMacroToStoreName - 4][i] = inBuffe
 6305              		.loc 1 1367 0 discriminator 3
 6306 20c8 FB68     		ldr	r3, [r7, #12]
 6307 20ca 043B     		subs	r3, r3, #4
 6308 20cc 6449     		ldr	r1, .L241
 6309 20ce BA6D     		ldr	r2, [r7, #88]
 6310 20d0 0A44     		add	r2, r2, r1
 6311 20d2 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 6312 20d4 6448     		ldr	r0, .L241+8
 6313 20d6 3969     		ldr	r1, [r7, #16]
 6314 20d8 1A46     		mov	r2, r3
 6315 20da D200     		lsls	r2, r2, #3
 6316 20dc 1A44     		add	r2, r2, r3
 6317 20de 0B46     		mov	r3, r1
 6318 20e0 DB00     		lsls	r3, r3, #3
 6319 20e2 0B44     		add	r3, r3, r1
 6320 20e4 1B01     		lsls	r3, r3, #4
 6321 20e6 1344     		add	r3, r3, r2
 6322 20e8 C218     		adds	r2, r0, r3
 6323 20ea BB6C     		ldr	r3, [r7, #72]
 6324 20ec 1344     		add	r3, r3, r2
 6325 20ee 2246     		mov	r2, r4
 6326 20f0 1A70     		strb	r2, [r3]
1368:main.c        ****                     bufferPointer++;
 6327              		.loc 1 1368 0 discriminator 3
 6328 20f2 BB6D     		ldr	r3, [r7, #88]
 6329 20f4 0133     		adds	r3, r3, #1
 6330 20f6 BB65     		str	r3, [r7, #88]
1365:main.c        ****                 {
 6331              		.loc 1 1365 0 discriminator 3
 6332 20f8 BB6C     		ldr	r3, [r7, #72]
 6333 20fa 0133     		adds	r3, r3, #1
 6334 20fc BB64     		str	r3, [r7, #72]
 6335              	.L203:
1365:main.c        ****                 {
 6336              		.loc 1 1365 0 is_stmt 0 discriminator 1
 6337 20fe BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 138


 6338 2100 082B     		cmp	r3, #8
 6339 2102 E1DD     		ble	.L204
 6340              	.L199:
 6341              	.LBE48:
1369:main.c        ****                 }
1370:main.c        ****             }
1371:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 6342              		.loc 1 1371 0 is_stmt 1
 6343 2104 594B     		ldr	r3, .L241+12
 6344 2106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6345 2108 1A46     		mov	r2, r3
 6346 210a 3B69     		ldr	r3, [r7, #16]
 6347 210c 9A42     		cmp	r2, r3
 6348 210e 40F09380 		bne	.L215
 6349              		.loc 1 1371 0 is_stmt 0 discriminator 1
 6350 2112 FB68     		ldr	r3, [r7, #12]
 6351 2114 072B     		cmp	r3, #7
 6352 2116 40F08F80 		bne	.L215
 6353              		.loc 1 1371 0 discriminator 2
 6354 211a 554A     		ldr	r2, .L241+16
 6355 211c 3B69     		ldr	r3, [r7, #16]
 6356 211e 1344     		add	r3, r3, r2
 6357 2120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6358 2122 002B     		cmp	r3, #0
 6359 2124 40F08880 		bne	.L215
1372:main.c        ****             {
1373:main.c        ****                 displayCurrentPresetNameAndCopedent();
 6360              		.loc 1 1373 0 is_stmt 1
 6361 2128 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 6362              	.LBE44:
1337:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 6363              		.loc 1 1337 0
 6364 212c 84E0     		b	.L215
 6365              	.L193:
1374:main.c        ****             }
1375:main.c        ****         }
1376:main.c        ****         else if ((inBuffer[0] == 252) && (inBuffer[31] == 254))
 6366              		.loc 1 1376 0
 6367 212e 4C4B     		ldr	r3, .L241
 6368 2130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6369 2132 FC2B     		cmp	r3, #252
 6370 2134 40F08180 		bne	.L206
 6371              		.loc 1 1376 0 is_stmt 0 discriminator 1
 6372 2138 494B     		ldr	r3, .L241
 6373 213a DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 6374 213c FE2B     		cmp	r3, #254
 6375 213e 7CD1     		bne	.L206
1377:main.c        ****         {
1378:main.c        ****             //oop this means we're about to get new firmware. Reset to bootloader
1379:main.c        ****             SPIM_1_Stop();
 6376              		.loc 1 1379 0 is_stmt 1
 6377 2140 FFF7FEFF 		bl	SPIM_1_Stop
1380:main.c        ****             myGFX_setFont(0);
 6378              		.loc 1 1380 0
 6379 2144 0020     		movs	r0, #0
 6380 2146 FFF7FEFF 		bl	myGFX_setFont
1381:main.c        ****             OLEDwriteString("FIRMWARE   ", 11, 1, FirstLine);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 139


 6381              		.loc 1 1381 0
 6382 214a 0023     		movs	r3, #0
 6383 214c 0122     		movs	r2, #1
 6384 214e 0B21     		movs	r1, #11
 6385 2150 4848     		ldr	r0, .L241+20
 6386 2152 FFF7FEFF 		bl	OLEDwriteString
1382:main.c        ****             OLEDwriteString("UPDATE     ", 11, 1, SecondLine);
 6387              		.loc 1 1382 0
 6388 2156 0123     		movs	r3, #1
 6389 2158 0122     		movs	r2, #1
 6390 215a 0B21     		movs	r1, #11
 6391 215c 4648     		ldr	r0, .L241+24
 6392 215e FFF7FEFF 		bl	OLEDwriteString
1383:main.c        ****             OLEDwriteString("           ", 11, 1, ThirdLine);
 6393              		.loc 1 1383 0
 6394 2162 0223     		movs	r3, #2
 6395 2164 0122     		movs	r2, #1
 6396 2166 0B21     		movs	r1, #11
 6397 2168 4448     		ldr	r0, .L241+28
 6398 216a FFF7FEFF 		bl	OLEDwriteString
1384:main.c        ****             OLEDwriteString("           ", 11, 1, FourthLine);
 6399              		.loc 1 1384 0
 6400 216e 0323     		movs	r3, #3
 6401 2170 0122     		movs	r2, #1
 6402 2172 0B21     		movs	r1, #11
 6403 2174 4148     		ldr	r0, .L241+28
 6404 2176 FFF7FEFF 		bl	OLEDwriteString
1385:main.c        ****             main_counter = 11;
 6405              		.loc 1 1385 0
 6406 217a 414B     		ldr	r3, .L241+32
 6407 217c 0B22     		movs	r2, #11
 6408 217e 1A70     		strb	r2, [r3]
1386:main.c        ****                    //set muxes to write to main OLED
1387:main.c        ****             if (mux_states[main_counter][0] != last_mux)
 6409              		.loc 1 1387 0
 6410 2180 3F4B     		ldr	r3, .L241+32
 6411 2182 1B78     		ldrb	r3, [r3]
 6412 2184 DBB2     		uxtb	r3, r3
 6413 2186 1A46     		mov	r2, r3
 6414 2188 3E4B     		ldr	r3, .L241+36
 6415 218a 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 6416 218e 3E4B     		ldr	r3, .L241+40
 6417 2190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6418 2192 9A42     		cmp	r2, r3
 6419 2194 13D0     		beq	.L207
 6420              	.LBB49:
1388:main.c        ****             {
1389:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 6421              		.loc 1 1389 0
 6422 2196 3A4B     		ldr	r3, .L241+32
 6423 2198 1B78     		ldrb	r3, [r3]
 6424 219a DBB2     		uxtb	r3, r3
 6425 219c 1A46     		mov	r2, r3
 6426 219e 394B     		ldr	r3, .L241+36
 6427 21a0 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 6428 21a4 1A46     		mov	r2, r3
 6429 21a6 0123     		movs	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 140


 6430 21a8 9340     		lsls	r3, r3, r2
 6431 21aa DAB2     		uxtb	r2, r3
 6432 21ac 374B     		ldr	r3, .L241+44
 6433 21ae 1A70     		strb	r2, [r3]
1390:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 6434              		.loc 1 1390 0
 6435 21b0 0022     		movs	r2, #0
 6436 21b2 0121     		movs	r1, #1
 6437 21b4 7020     		movs	r0, #112
 6438 21b6 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 6439 21ba 0346     		mov	r3, r0
 6440 21bc FB72     		strb	r3, [r7, #11]
 6441              	.L207:
 6442              	.LBE49:
1391:main.c        ****             }
1392:main.c        ****             last_mux = mux_states[main_counter][0];
 6443              		.loc 1 1392 0
 6444 21be 304B     		ldr	r3, .L241+32
 6445 21c0 1B78     		ldrb	r3, [r3]
 6446 21c2 DBB2     		uxtb	r3, r3
 6447 21c4 1A46     		mov	r2, r3
 6448 21c6 2F4B     		ldr	r3, .L241+36
 6449 21c8 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 6450 21cc 2E4B     		ldr	r3, .L241+40
 6451 21ce 1A70     		strb	r2, [r3]
1393:main.c        ****             
1394:main.c        ****             
1395:main.c        ****             CyDelayUs(10);
 6452              		.loc 1 1395 0
 6453 21d0 0A20     		movs	r0, #10
 6454 21d2 FFF7FEFF 		bl	CyDelayUs
1396:main.c        ****             if (mux_states[main_counter][0] == 5)
 6455              		.loc 1 1396 0
 6456 21d6 2A4B     		ldr	r3, .L241+32
 6457 21d8 1B78     		ldrb	r3, [r3]
 6458 21da DBB2     		uxtb	r3, r3
 6459 21dc 1A46     		mov	r2, r3
 6460 21de 294B     		ldr	r3, .L241+36
 6461 21e0 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 6462 21e4 052B     		cmp	r3, #5
 6463 21e6 1DD1     		bne	.L208
1397:main.c        ****             {
1398:main.c        ****                 if (!i2c_skipped[main_counter])
 6464              		.loc 1 1398 0
 6465 21e8 254B     		ldr	r3, .L241+32
 6466 21ea 1B78     		ldrb	r3, [r3]
 6467 21ec DBB2     		uxtb	r3, r3
 6468 21ee 1A46     		mov	r2, r3
 6469 21f0 274B     		ldr	r3, .L241+48
 6470 21f2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 6471 21f4 002B     		cmp	r3, #0
 6472 21f6 15D1     		bne	.L208
1399:main.c        ****                 {
1400:main.c        ****                     I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 6473              		.loc 1 1400 0
 6474 21f8 214B     		ldr	r3, .L241+32
 6475 21fa 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 141


 6476 21fc DBB2     		uxtb	r3, r3
 6477 21fe 214A     		ldr	r2, .L241+36
 6478 2200 5B00     		lsls	r3, r3, #1
 6479 2202 1344     		add	r3, r3, r2
 6480 2204 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6481 2206 1A46     		mov	r2, r3
 6482 2208 0123     		movs	r3, #1
 6483 220a 9340     		lsls	r3, r3, r2
 6484 220c DAB2     		uxtb	r2, r3
 6485 220e 1F4B     		ldr	r3, .L241+44
 6486 2210 1A70     		strb	r2, [r3]
1401:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 6487              		.loc 1 1401 0
 6488 2212 0022     		movs	r2, #0
 6489 2214 0121     		movs	r1, #1
 6490 2216 7120     		movs	r0, #113
 6491 2218 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 6492 221c 0346     		mov	r3, r0
 6493 221e 1A46     		mov	r2, r3
 6494 2220 1C4B     		ldr	r3, .L241+52
 6495 2222 1A60     		str	r2, [r3]
 6496              	.L208:
1402:main.c        ****                 }
1403:main.c        ****             }
1404:main.c        **** 
1405:main.c        ****             CyDelayUs(10);
 6497              		.loc 1 1405 0
 6498 2224 0A20     		movs	r0, #10
 6499 2226 FFF7FEFF 		bl	CyDelayUs
1406:main.c        **** 
1407:main.c        ****             OLED_draw(128, 64);
 6500              		.loc 1 1407 0
 6501 222a 4021     		movs	r1, #64
 6502 222c 8020     		movs	r0, #128
 6503 222e FFF7FEFF 		bl	OLED_draw
1408:main.c        ****             #ifdef BOOTLOAD_STYLE
1409:main.c        ****             Bootloadable_Load();
 6504              		.loc 1 1409 0
 6505 2232 FFF7FEFF 		bl	Bootloadable_Load
 6506 2236 00E0     		b	.L206
 6507              	.L215:
1337:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 6508              		.loc 1 1337 0
 6509 2238 00BF     		nop
 6510              	.L206:
1410:main.c        ****                 #endif
1411:main.c        ****         }
1412:main.c        ****         
1413:main.c        ****         SPIM_1_ClearRxBuffer();
 6511              		.loc 1 1413 0
 6512 223a FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1414:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 6513              		.loc 1 1414 0
 6514 223e 164B     		ldr	r3, .L241+56
 6515 2240 1B78     		ldrb	r3, [r3]
 6516 2242 DBB2     		uxtb	r3, r3
 6517 2244 0121     		movs	r1, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 142


 6518 2246 1846     		mov	r0, r3
 6519 2248 FFF7FEFF 		bl	CyDmaChEnable
1415:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 6520              		.loc 1 1415 0
 6521 224c 134B     		ldr	r3, .L241+60
 6522 224e 1B78     		ldrb	r3, [r3]
 6523 2250 DBB2     		uxtb	r3, r3
 6524 2252 0121     		movs	r1, #1
 6525 2254 1846     		mov	r0, r3
 6526 2256 FFF7FEFF 		bl	CyDmaChEnable
1416:main.c        ****         
1417:main.c        ****        // testpin6_Write(0);
1418:main.c        ****        
1419:main.c        **** 
1420:main.c        ****      }
 6527              		.loc 1 1420 0
 6528 225a FEF7DBBA 		b	.L209
 6529              	.L242:
 6530 225e 00BF     		.align	2
 6531              	.L241:
 6532 2260 00000000 		.word	inBuffer
 6533 2264 00000000 		.word	controlNamesArray
 6534 2268 00000000 		.word	macroNamesArray
 6535 226c 00000000 		.word	patchNum
 6536 2270 00000000 		.word	presetAlreadyDisplayed
 6537 2274 04040000 		.word	.LC1
 6538 2278 10040000 		.word	.LC2
 6539 227c 1C040000 		.word	.LC3
 6540 2280 00000000 		.word	main_counter
 6541 2284 00000000 		.word	mux_states
 6542 2288 00000000 		.word	last_mux
 6543 228c 00000000 		.word	I2Cbuff1
 6544 2290 00000000 		.word	i2c_skipped
 6545 2294 00000000 		.word	status
 6546 2298 00000000 		.word	rx3Channel
 6547 229c 00000000 		.word	txChannel
 6548              		.cfi_endproc
 6549              	.LFE75:
 6550              		.size	main, .-main
 6551              		.section	.text.DmaTxConfiguration,"ax",%progbits
 6552              		.align	2
 6553              		.global	DmaTxConfiguration
 6554              		.thumb
 6555              		.thumb_func
 6556              		.type	DmaTxConfiguration, %function
 6557              	DmaTxConfiguration:
 6558              	.LFB76:
1421:main.c        **** }
1422:main.c        **** 
1423:main.c        **** void DmaTxConfiguration()
1424:main.c        **** {
 6559              		.loc 1 1424 0
 6560              		.cfi_startproc
 6561              		@ args = 0, pretend = 0, frame = 0
 6562              		@ frame_needed = 1, uses_anonymous_args = 0
 6563 0000 80B5     		push	{r7, lr}
 6564              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 143


 6565              		.cfi_offset 7, -8
 6566              		.cfi_offset 14, -4
 6567 0002 00AF     		add	r7, sp, #0
 6568              		.cfi_def_cfa_register 7
1425:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1426:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 6569              		.loc 1 1426 0
 6570 0004 4FF48043 		mov	r3, #16384
 6571 0008 41F6FF72 		movw	r2, #8191
 6572 000c 0121     		movs	r1, #1
 6573 000e 0120     		movs	r0, #1
 6574 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 6575 0014 0346     		mov	r3, r0
 6576 0016 1A46     		mov	r2, r3
 6577 0018 124B     		ldr	r3, .L244
 6578 001a 1A70     		strb	r2, [r3]
1427:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1428:main.c        **** 
1429:main.c        ****     txTD = CyDmaTdAllocate();
 6579              		.loc 1 1429 0
 6580 001c FFF7FEFF 		bl	CyDmaTdAllocate
 6581 0020 0346     		mov	r3, r0
 6582 0022 1A46     		mov	r2, r3
 6583 0024 104B     		ldr	r3, .L244+4
 6584 0026 1A70     		strb	r2, [r3]
1430:main.c        **** 
1431:main.c        ****     /* Configure this Td as follows:
1432:main.c        ****     *  - Increment the source address, but not the destination address   
1433:main.c        ****     */
1434:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 6585              		.loc 1 1434 0
 6586 0028 0F4B     		ldr	r3, .L244+4
 6587 002a 1B78     		ldrb	r3, [r3]
 6588 002c D8B2     		uxtb	r0, r3
 6589 002e 0123     		movs	r3, #1
 6590 0030 FE22     		movs	r2, #254
 6591 0032 2021     		movs	r1, #32
 6592 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1435:main.c        **** 
1436:main.c        ****     /* From the memory to the SPIM */
1437:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 6593              		.loc 1 1437 0
 6594 0038 0B4B     		ldr	r3, .L244+4
 6595 003a 1B78     		ldrb	r3, [r3]
 6596 003c DBB2     		uxtb	r3, r3
 6597 003e 0B4A     		ldr	r2, .L244+8
 6598 0040 91B2     		uxth	r1, r2
 6599 0042 46F24C42 		movw	r2, #25676
 6600 0046 1846     		mov	r0, r3
 6601 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1438:main.c        ****     
1439:main.c        ****     /* Associate the TD with the channel */
1440:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 6602              		.loc 1 1440 0
 6603 004c 054B     		ldr	r3, .L244
 6604 004e 1B78     		ldrb	r3, [r3]
 6605 0050 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 144


 6606 0052 054B     		ldr	r3, .L244+4
 6607 0054 1B78     		ldrb	r3, [r3]
 6608 0056 DBB2     		uxtb	r3, r3
 6609 0058 1946     		mov	r1, r3
 6610 005a 1046     		mov	r0, r2
 6611 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1441:main.c        ****    
1442:main.c        **** } 
 6612              		.loc 1 1442 0
 6613 0060 00BF     		nop
 6614 0062 80BD     		pop	{r7, pc}
 6615              	.L245:
 6616              		.align	2
 6617              	.L244:
 6618 0064 00000000 		.word	txChannel
 6619 0068 00000000 		.word	txTD
 6620 006c 00000000 		.word	myArray
 6621              		.cfi_endproc
 6622              	.LFE76:
 6623              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 6624              		.section	.text.DmaRxConfiguration,"ax",%progbits
 6625              		.align	2
 6626              		.global	DmaRxConfiguration
 6627              		.thumb
 6628              		.thumb_func
 6629              		.type	DmaRxConfiguration, %function
 6630              	DmaRxConfiguration:
 6631              	.LFB77:
1443:main.c        **** 
1444:main.c        **** void DmaRxConfiguration()
1445:main.c        **** { 
 6632              		.loc 1 1445 0
 6633              		.cfi_startproc
 6634              		@ args = 0, pretend = 0, frame = 0
 6635              		@ frame_needed = 1, uses_anonymous_args = 0
 6636 0000 80B5     		push	{r7, lr}
 6637              		.cfi_def_cfa_offset 8
 6638              		.cfi_offset 7, -8
 6639              		.cfi_offset 14, -4
 6640 0002 00AF     		add	r7, sp, #0
 6641              		.cfi_def_cfa_register 7
1446:main.c        ****     //pluck dma
1447:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6642              		.loc 1 1447 0
 6643 0004 41F6FF73 		movw	r3, #8191
 6644 0008 4FF48042 		mov	r2, #16384
 6645 000c 0121     		movs	r1, #1
 6646 000e 0120     		movs	r0, #1
 6647 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 6648 0014 0346     		mov	r3, r0
 6649 0016 1A46     		mov	r2, r3
 6650 0018 4A4B     		ldr	r3, .L247
 6651 001a 1A70     		strb	r2, [r3]
1448:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1449:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 6652              		.loc 1 1449 0
 6653 001c FFF7FEFF 		bl	CyDmaTdAllocate
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 145


 6654 0020 0346     		mov	r3, r0
 6655 0022 1A46     		mov	r2, r3
 6656 0024 484B     		ldr	r3, .L247+4
 6657 0026 1A70     		strb	r2, [r3]
1450:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 6658              		.loc 1 1450 0
 6659 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 6660 002c 0346     		mov	r3, r0
 6661 002e 1A46     		mov	r2, r3
 6662 0030 454B     		ldr	r3, .L247+4
 6663 0032 5A70     		strb	r2, [r3, #1]
1451:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 6664              		.loc 1 1451 0
 6665 0034 444B     		ldr	r3, .L247+4
 6666 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6667 0038 0223     		movs	r3, #2
 6668 003a FE22     		movs	r2, #254
 6669 003c 2021     		movs	r1, #32
 6670 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1452:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 6671              		.loc 1 1452 0
 6672 0042 414B     		ldr	r3, .L247+4
 6673 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6674 0046 0223     		movs	r3, #2
 6675 0048 FE22     		movs	r2, #254
 6676 004a 2021     		movs	r1, #32
 6677 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1453:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 6678              		.loc 1 1453 0
 6679 0050 3D4B     		ldr	r3, .L247+4
 6680 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6681 0054 3D4A     		ldr	r2, .L247+8
 6682 0056 92B2     		uxth	r2, r2
 6683 0058 46F25741 		movw	r1, #25687
 6684 005c 1846     		mov	r0, r3
 6685 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1454:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 6686              		.loc 1 1454 0
 6687 0062 394B     		ldr	r3, .L247+4
 6688 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6689 0066 3A4A     		ldr	r2, .L247+12
 6690 0068 92B2     		uxth	r2, r2
 6691 006a 46F25741 		movw	r1, #25687
 6692 006e 1846     		mov	r0, r3
 6693 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1455:main.c        **** 
1456:main.c        ****     //bar dma
1457:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6694              		.loc 1 1457 0
 6695 0074 41F6FF73 		movw	r3, #8191
 6696 0078 4FF48042 		mov	r2, #16384
 6697 007c 0121     		movs	r1, #1
 6698 007e 0120     		movs	r0, #1
 6699 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 6700 0084 0346     		mov	r3, r0
 6701 0086 1A46     		mov	r2, r3
 6702 0088 324B     		ldr	r3, .L247+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 146


 6703 008a 1A70     		strb	r2, [r3]
1458:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1459:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 6704              		.loc 1 1459 0
 6705 008c FFF7FEFF 		bl	CyDmaTdAllocate
 6706 0090 0346     		mov	r3, r0
 6707 0092 1A46     		mov	r2, r3
 6708 0094 304B     		ldr	r3, .L247+20
 6709 0096 1A70     		strb	r2, [r3]
1460:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 6710              		.loc 1 1460 0
 6711 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 6712 009c 0346     		mov	r3, r0
 6713 009e 1A46     		mov	r2, r3
 6714 00a0 2D4B     		ldr	r3, .L247+20
 6715 00a2 5A70     		strb	r2, [r3, #1]
1461:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 6716              		.loc 1 1461 0
 6717 00a4 2C4B     		ldr	r3, .L247+20
 6718 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6719 00a8 0223     		movs	r3, #2
 6720 00aa FE22     		movs	r2, #254
 6721 00ac 0821     		movs	r1, #8
 6722 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1462:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 6723              		.loc 1 1462 0
 6724 00b2 294B     		ldr	r3, .L247+20
 6725 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6726 00b6 0223     		movs	r3, #2
 6727 00b8 FE22     		movs	r2, #254
 6728 00ba 0821     		movs	r1, #8
 6729 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1463:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 6730              		.loc 1 1463 0
 6731 00c0 254B     		ldr	r3, .L247+20
 6732 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6733 00c4 254A     		ldr	r2, .L247+24
 6734 00c6 92B2     		uxth	r2, r2
 6735 00c8 46F25551 		movw	r1, #25941
 6736 00cc 1846     		mov	r0, r3
 6737 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1464:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 6738              		.loc 1 1464 0
 6739 00d2 214B     		ldr	r3, .L247+20
 6740 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6741 00d6 224A     		ldr	r2, .L247+28
 6742 00d8 92B2     		uxth	r2, r2
 6743 00da 46F25551 		movw	r1, #25941
 6744 00de 1846     		mov	r0, r3
 6745 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1465:main.c        ****     
1466:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1467:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6746              		.loc 1 1467 0
 6747 00e4 41F6FF73 		movw	r3, #8191
 6748 00e8 4FF48042 		mov	r2, #16384
 6749 00ec 0121     		movs	r1, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 147


 6750 00ee 0120     		movs	r0, #1
 6751 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 6752 00f4 0346     		mov	r3, r0
 6753 00f6 1A46     		mov	r2, r3
 6754 00f8 1A4B     		ldr	r3, .L247+32
 6755 00fa 1A70     		strb	r2, [r3]
1468:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1469:main.c        **** 
1470:main.c        ****     rx3TD = CyDmaTdAllocate();
 6756              		.loc 1 1470 0
 6757 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 6758 0100 0346     		mov	r3, r0
 6759 0102 1A46     		mov	r2, r3
 6760 0104 184B     		ldr	r3, .L247+36
 6761 0106 1A70     		strb	r2, [r3]
1471:main.c        ****     
1472:main.c        ****     /* Configure this Td as follows:
1473:main.c        ****     *  - Increment the destination address, but not the source address
1474:main.c        ****     */
1475:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 6762              		.loc 1 1475 0
 6763 0108 174B     		ldr	r3, .L247+36
 6764 010a 1B78     		ldrb	r3, [r3]
 6765 010c D8B2     		uxtb	r0, r3
 6766 010e 0223     		movs	r3, #2
 6767 0110 FE22     		movs	r2, #254
 6768 0112 2021     		movs	r1, #32
 6769 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1476:main.c        **** 
1477:main.c        ****     /* From the SPIM to the memory */
1478:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 6770              		.loc 1 1478 0
 6771 0118 134B     		ldr	r3, .L247+36
 6772 011a 1B78     		ldrb	r3, [r3]
 6773 011c DBB2     		uxtb	r3, r3
 6774 011e 134A     		ldr	r2, .L247+40
 6775 0120 92B2     		uxth	r2, r2
 6776 0122 46F25C41 		movw	r1, #25692
 6777 0126 1846     		mov	r0, r3
 6778 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1479:main.c        **** 
1480:main.c        ****     /* Associate the TD with the channel */
1481:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 6779              		.loc 1 1481 0
 6780 012c 0D4B     		ldr	r3, .L247+32
 6781 012e 1B78     		ldrb	r3, [r3]
 6782 0130 DAB2     		uxtb	r2, r3
 6783 0132 0D4B     		ldr	r3, .L247+36
 6784 0134 1B78     		ldrb	r3, [r3]
 6785 0136 DBB2     		uxtb	r3, r3
 6786 0138 1946     		mov	r1, r3
 6787 013a 1046     		mov	r0, r2
 6788 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1482:main.c        **** }
 6789              		.loc 1 1482 0
 6790 0140 00BF     		nop
 6791 0142 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 148


 6792              	.L248:
 6793              		.align	2
 6794              	.L247:
 6795 0144 00000000 		.word	rx1Channel
 6796 0148 00000000 		.word	rx1TD
 6797 014c 00000000 		.word	rxBufferPluck
 6798 0150 20000000 		.word	rxBufferPluck+32
 6799 0154 00000000 		.word	rx2Channel
 6800 0158 00000000 		.word	rx2TD
 6801 015c 00000000 		.word	rxBufferBar
 6802 0160 08000000 		.word	rxBufferBar+8
 6803 0164 00000000 		.word	rx3Channel
 6804 0168 00000000 		.word	rx3TD
 6805 016c 00000000 		.word	inBuffer
 6806              		.cfi_endproc
 6807              	.LFE77:
 6808              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 6809              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 6810              		.align	2
 6811              		.global	I2C_MasterWriteBlocking
 6812              		.thumb
 6813              		.thumb_func
 6814              		.type	I2C_MasterWriteBlocking, %function
 6815              	I2C_MasterWriteBlocking:
 6816              	.LFB78:
1483:main.c        **** 
1484:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1485:main.c        **** {
 6817              		.loc 1 1485 0
 6818              		.cfi_startproc
 6819              		@ args = 0, pretend = 0, frame = 24
 6820              		@ frame_needed = 1, uses_anonymous_args = 0
 6821 0000 80B5     		push	{r7, lr}
 6822              		.cfi_def_cfa_offset 8
 6823              		.cfi_offset 7, -8
 6824              		.cfi_offset 14, -4
 6825 0002 86B0     		sub	sp, sp, #24
 6826              		.cfi_def_cfa_offset 32
 6827 0004 00AF     		add	r7, sp, #0
 6828              		.cfi_def_cfa_register 7
 6829 0006 0346     		mov	r3, r0
 6830 0008 FB71     		strb	r3, [r7, #7]
 6831 000a 0B46     		mov	r3, r1	@ movhi
 6832 000c BB80     		strh	r3, [r7, #4]	@ movhi
 6833 000e 1346     		mov	r3, r2
 6834 0010 BB71     		strb	r3, [r7, #6]
1486:main.c        ****     uint8 volatile status;
1487:main.c        ****     uint8_t error = 0;
 6835              		.loc 1 1487 0
 6836 0012 0023     		movs	r3, #0
 6837 0014 FB75     		strb	r3, [r7, #23]
1488:main.c        ****     uint32_t timeout = 1000;
 6838              		.loc 1 1488 0
 6839 0016 4FF47A73 		mov	r3, #1000
 6840 001a 3B61     		str	r3, [r7, #16]
1489:main.c        ****     status = I2C_1_MasterClearStatus();
 6841              		.loc 1 1489 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 149


 6842 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6843 0020 0346     		mov	r3, r0
 6844 0022 FB73     		strb	r3, [r7, #15]
1490:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6845              		.loc 1 1490 0
 6846 0024 FB7B     		ldrb	r3, [r7, #15]
 6847 0026 DBB2     		uxtb	r3, r3
 6848 0028 5BB2     		sxtb	r3, r3
 6849 002a 002B     		cmp	r3, #0
 6850 002c 42DB     		blt	.L250
1491:main.c        ****     {
1492:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 6851              		.loc 1 1492 0
 6852 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 6853 0030 DAB2     		uxtb	r2, r3
 6854 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6855 0034 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6856 0036 2949     		ldr	r1, .L259
 6857 0038 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 6858 003c 0346     		mov	r3, r0
 6859 003e FB73     		strb	r3, [r7, #15]
1493:main.c        ****                                      mode);
1494:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6860              		.loc 1 1494 0
 6861 0040 FB7B     		ldrb	r3, [r7, #15]
 6862 0042 DBB2     		uxtb	r3, r3
 6863 0044 002B     		cmp	r3, #0
 6864 0046 2FD1     		bne	.L251
 6865              	.L255:
1495:main.c        ****         {
1496:main.c        ****             /* wait for write complete and no error */
1497:main.c        ****             do
1498:main.c        ****             {
1499:main.c        ****                 status = I2C_1_MasterStatus();
 6866              		.loc 1 1499 0
 6867 0048 FFF7FEFF 		bl	I2C_1_MasterStatus
 6868 004c 0346     		mov	r3, r0
 6869 004e FB73     		strb	r3, [r7, #15]
1500:main.c        ****                 timeout--;
 6870              		.loc 1 1500 0
 6871 0050 3B69     		ldr	r3, [r7, #16]
 6872 0052 013B     		subs	r3, r3, #1
 6873 0054 3B61     		str	r3, [r7, #16]
1501:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6874              		.loc 1 1501 0
 6875 0056 FB7B     		ldrb	r3, [r7, #15]
 6876 0058 DBB2     		uxtb	r3, r3
 6877 005a 802B     		cmp	r3, #128
 6878 005c 03D1     		bne	.L252
1502:main.c        ****                 {
1503:main.c        ****                     I2C_reset();
 6879              		.loc 1 1503 0
 6880 005e FFF7FEFF 		bl	I2C_reset
1504:main.c        ****                     error = 1;
 6881              		.loc 1 1504 0
 6882 0062 0123     		movs	r3, #1
 6883 0064 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 150


 6884              	.L252:
1505:main.c        ****                 }
1506:main.c        ****                 if (timeout == 0)
 6885              		.loc 1 1506 0
 6886 0066 3B69     		ldr	r3, [r7, #16]
 6887 0068 002B     		cmp	r3, #0
 6888 006a 05D1     		bne	.L253
1507:main.c        ****                 {
1508:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6889              		.loc 1 1508 0
 6890 006c 8023     		movs	r3, #128
 6891 006e FB73     		strb	r3, [r7, #15]
1509:main.c        ****                     I2C_reset();
 6892              		.loc 1 1509 0
 6893 0070 FFF7FEFF 		bl	I2C_reset
1510:main.c        ****                     error = 1;
 6894              		.loc 1 1510 0
 6895 0074 0123     		movs	r3, #1
 6896 0076 FB75     		strb	r3, [r7, #23]
 6897              	.L253:
1511:main.c        ****                 }
1512:main.c        ****                 
1513:main.c        ****                 if (status == 0)
 6898              		.loc 1 1513 0
 6899 0078 FB7B     		ldrb	r3, [r7, #15]
 6900 007a DBB2     		uxtb	r3, r3
 6901 007c 002B     		cmp	r3, #0
 6902 007e 05D1     		bne	.L254
1514:main.c        ****                 {
1515:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6903              		.loc 1 1515 0
 6904 0080 8023     		movs	r3, #128
 6905 0082 FB73     		strb	r3, [r7, #15]
1516:main.c        ****                     I2C_reset();
 6906              		.loc 1 1516 0
 6907 0084 FFF7FEFF 		bl	I2C_reset
1517:main.c        ****                     error = 1;
 6908              		.loc 1 1517 0
 6909 0088 0123     		movs	r3, #1
 6910 008a FB75     		strb	r3, [r7, #23]
 6911              	.L254:
1518:main.c        ****                 }
1519:main.c        ****                 
1520:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6912              		.loc 1 1520 0
 6913 008c FB7B     		ldrb	r3, [r7, #15]
 6914 008e DBB2     		uxtb	r3, r3
 6915 0090 03F08203 		and	r3, r3, #130
 6916 0094 002B     		cmp	r3, #0
 6917 0096 0DD1     		bne	.L250
 6918              		.loc 1 1520 0 is_stmt 0 discriminator 1
 6919 0098 FB7B     		ldrb	r3, [r7, #15]
 6920 009a DBB2     		uxtb	r3, r3
 6921 009c 002B     		cmp	r3, #0
 6922 009e 09D0     		beq	.L250
 6923              		.loc 1 1520 0 discriminator 2
 6924 00a0 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 151


 6925 00a2 002B     		cmp	r3, #0
 6926 00a4 D0D1     		bne	.L255
 6927 00a6 05E0     		b	.L250
 6928              	.L251:
1521:main.c        ****         }
1522:main.c        ****         else
1523:main.c        ****         {
1524:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1525:main.c        ****             *  I2CM_MasterStatus() error output */
1526:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6929              		.loc 1 1526 0 is_stmt 1
 6930 00a8 8023     		movs	r3, #128
 6931 00aa FB73     		strb	r3, [r7, #15]
1527:main.c        ****             I2C_reset();
 6932              		.loc 1 1527 0
 6933 00ac FFF7FEFF 		bl	I2C_reset
1528:main.c        ****             error = 1;
 6934              		.loc 1 1528 0
 6935 00b0 0123     		movs	r3, #1
 6936 00b2 FB75     		strb	r3, [r7, #23]
 6937              	.L250:
1529:main.c        ****         } 
1530:main.c        ****     }  
1531:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6938              		.loc 1 1531 0
 6939 00b4 FB7B     		ldrb	r3, [r7, #15]
 6940 00b6 DBB2     		uxtb	r3, r3
 6941 00b8 03F02003 		and	r3, r3, #32
 6942 00bc 002B     		cmp	r3, #0
 6943 00be 04D1     		bne	.L256
 6944              		.loc 1 1531 0 is_stmt 0 discriminator 1
 6945 00c0 FB7B     		ldrb	r3, [r7, #15]
 6946 00c2 DBB2     		uxtb	r3, r3
 6947 00c4 5BB2     		sxtb	r3, r3
 6948 00c6 002B     		cmp	r3, #0
 6949 00c8 03DA     		bge	.L257
 6950              	.L256:
1532:main.c        ****     {
1533:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1534:main.c        ****         //i2c_skipped[main_counter] = 1;
1535:main.c        ****         I2C_reset();
 6951              		.loc 1 1535 0 is_stmt 1
 6952 00ca FFF7FEFF 		bl	I2C_reset
1536:main.c        ****         error = 1;
 6953              		.loc 1 1536 0
 6954 00ce 0123     		movs	r3, #1
 6955 00d0 FB75     		strb	r3, [r7, #23]
 6956              	.L257:
1537:main.c        ****     }
1538:main.c        ****     return error;
 6957              		.loc 1 1538 0
 6958 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1539:main.c        **** }
 6959              		.loc 1 1539 0
 6960 00d4 1846     		mov	r0, r3
 6961 00d6 1837     		adds	r7, r7, #24
 6962              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 152


 6963 00d8 BD46     		mov	sp, r7
 6964              		.cfi_def_cfa_register 13
 6965              		@ sp needed
 6966 00da 80BD     		pop	{r7, pc}
 6967              	.L260:
 6968              		.align	2
 6969              	.L259:
 6970 00dc 00000000 		.word	I2Cbuff1
 6971              		.cfi_endproc
 6972              	.LFE78:
 6973              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 6974              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 6975              		.align	2
 6976              		.global	I2C_MasterReadBlocking
 6977              		.thumb
 6978              		.thumb_func
 6979              		.type	I2C_MasterReadBlocking, %function
 6980              	I2C_MasterReadBlocking:
 6981              	.LFB79:
1540:main.c        **** 
1541:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1542:main.c        **** {
 6982              		.loc 1 1542 0
 6983              		.cfi_startproc
 6984              		@ args = 0, pretend = 0, frame = 16
 6985              		@ frame_needed = 1, uses_anonymous_args = 0
 6986 0000 80B5     		push	{r7, lr}
 6987              		.cfi_def_cfa_offset 8
 6988              		.cfi_offset 7, -8
 6989              		.cfi_offset 14, -4
 6990 0002 84B0     		sub	sp, sp, #16
 6991              		.cfi_def_cfa_offset 24
 6992 0004 00AF     		add	r7, sp, #0
 6993              		.cfi_def_cfa_register 7
 6994 0006 0346     		mov	r3, r0
 6995 0008 FB71     		strb	r3, [r7, #7]
 6996 000a 0B46     		mov	r3, r1
 6997 000c BB71     		strb	r3, [r7, #6]
 6998 000e 1346     		mov	r3, r2
 6999 0010 7B71     		strb	r3, [r7, #5]
1543:main.c        ****     uint8 volatile status;
1544:main.c        ****     uint32_t timeout = 50000;
 7000              		.loc 1 1544 0
 7001 0012 4CF25033 		movw	r3, #50000
 7002 0016 FB60     		str	r3, [r7, #12]
1545:main.c        ****     uint8_t error = 0;
 7003              		.loc 1 1545 0
 7004 0018 0023     		movs	r3, #0
 7005 001a FB72     		strb	r3, [r7, #11]
1546:main.c        ****     status = I2C_1_MasterClearStatus();
 7006              		.loc 1 1546 0
 7007 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 7008 0020 0346     		mov	r3, r0
 7009 0022 BB72     		strb	r3, [r7, #10]
1547:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 7010              		.loc 1 1547 0
 7011 0024 BB7A     		ldrb	r3, [r7, #10]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 153


 7012 0026 DBB2     		uxtb	r3, r3
 7013 0028 5BB2     		sxtb	r3, r3
 7014 002a 002B     		cmp	r3, #0
 7015 002c 46DB     		blt	.L262
1548:main.c        ****     {
1549:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 7016              		.loc 1 1549 0
 7017 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 7018 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 7019 0032 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 7020 0034 2B49     		ldr	r1, .L271
 7021 0036 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 7022 003a 0346     		mov	r3, r0
 7023 003c BB72     		strb	r3, [r7, #10]
1550:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1551:main.c        ****                                     nbytes, mode); 
1552:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 7024              		.loc 1 1552 0
 7025 003e BB7A     		ldrb	r3, [r7, #10]
 7026 0040 DBB2     		uxtb	r3, r3
 7027 0042 002B     		cmp	r3, #0
 7028 0044 34D1     		bne	.L263
 7029              	.L267:
1553:main.c        ****         {
1554:main.c        ****             /* wait for read complete and no error */
1555:main.c        ****             do
1556:main.c        ****             {
1557:main.c        ****                 status = I2C_1_MasterStatus();
 7030              		.loc 1 1557 0
 7031 0046 FFF7FEFF 		bl	I2C_1_MasterStatus
 7032 004a 0346     		mov	r3, r0
 7033 004c BB72     		strb	r3, [r7, #10]
1558:main.c        ****                 timeout--;
 7034              		.loc 1 1558 0
 7035 004e FB68     		ldr	r3, [r7, #12]
 7036 0050 013B     		subs	r3, r3, #1
 7037 0052 FB60     		str	r3, [r7, #12]
1559:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 7038              		.loc 1 1559 0
 7039 0054 BB7A     		ldrb	r3, [r7, #10]
 7040 0056 DBB2     		uxtb	r3, r3
 7041 0058 802B     		cmp	r3, #128
 7042 005a 12D1     		bne	.L264
1560:main.c        ****                 {
1561:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 7043              		.loc 1 1561 0
 7044 005c 224B     		ldr	r3, .L271+4
 7045 005e 5222     		movs	r2, #82
 7046 0060 1A70     		strb	r2, [r3]
 7047 0062 224B     		ldr	r3, .L271+8
 7048 0064 FF22     		movs	r2, #255
 7049 0066 1A70     		strb	r2, [r3]
 7050 0068 214B     		ldr	r3, .L271+12
 7051 006a 0022     		movs	r2, #0
 7052 006c 1A70     		strb	r2, [r3]
 7053 006e 00BF     		nop
 7054              	.L265:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 154


 7055              		.loc 1 1561 0 is_stmt 0 discriminator 2
 7056 0070 1E4B     		ldr	r3, .L271+8
 7057 0072 1B78     		ldrb	r3, [r3]
 7058 0074 DBB2     		uxtb	r3, r3
 7059 0076 002B     		cmp	r3, #0
 7060 0078 FAD1     		bne	.L265
1562:main.c        ****                     I2C_reset();
 7061              		.loc 1 1562 0 is_stmt 1
 7062 007a FFF7FEFF 		bl	I2C_reset
1563:main.c        ****                     error = 1;
 7063              		.loc 1 1563 0
 7064 007e 0123     		movs	r3, #1
 7065 0080 FB72     		strb	r3, [r7, #11]
 7066              	.L264:
1564:main.c        ****                 }
1565:main.c        ****                 if (timeout == 0)
 7067              		.loc 1 1565 0
 7068 0082 FB68     		ldr	r3, [r7, #12]
 7069 0084 002B     		cmp	r3, #0
 7070 0086 05D1     		bne	.L266
1566:main.c        ****                 {
1567:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 7071              		.loc 1 1567 0
 7072 0088 8023     		movs	r3, #128
 7073 008a BB72     		strb	r3, [r7, #10]
1568:main.c        ****                     I2C_reset();
 7074              		.loc 1 1568 0
 7075 008c FFF7FEFF 		bl	I2C_reset
1569:main.c        ****                     error = 1;
 7076              		.loc 1 1569 0
 7077 0090 0123     		movs	r3, #1
 7078 0092 FB72     		strb	r3, [r7, #11]
 7079              	.L266:
1570:main.c        ****                 }
1571:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 7080              		.loc 1 1571 0
 7081 0094 BB7A     		ldrb	r3, [r7, #10]
 7082 0096 DBB2     		uxtb	r3, r3
 7083 0098 03F08103 		and	r3, r3, #129
 7084 009c 002B     		cmp	r3, #0
 7085 009e 0DD1     		bne	.L262
 7086              		.loc 1 1571 0 is_stmt 0 discriminator 1
 7087 00a0 BB7A     		ldrb	r3, [r7, #10]
 7088 00a2 DBB2     		uxtb	r3, r3
 7089 00a4 002B     		cmp	r3, #0
 7090 00a6 09D0     		beq	.L262
 7091              		.loc 1 1571 0 discriminator 2
 7092 00a8 FB68     		ldr	r3, [r7, #12]
 7093 00aa 002B     		cmp	r3, #0
 7094 00ac CBD1     		bne	.L267
 7095 00ae 05E0     		b	.L262
 7096              	.L263:
1572:main.c        ****         }
1573:main.c        ****         else
1574:main.c        ****         {
1575:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1576:main.c        ****             *  I2CM_MasterStatus() error output */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 155


1577:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 7097              		.loc 1 1577 0 is_stmt 1
 7098 00b0 8023     		movs	r3, #128
 7099 00b2 BB72     		strb	r3, [r7, #10]
1578:main.c        ****             I2C_reset();
 7100              		.loc 1 1578 0
 7101 00b4 FFF7FEFF 		bl	I2C_reset
1579:main.c        ****             error = 1;
 7102              		.loc 1 1579 0
 7103 00b8 0123     		movs	r3, #1
 7104 00ba FB72     		strb	r3, [r7, #11]
 7105              	.L262:
1580:main.c        ****         }
1581:main.c        ****     }
1582:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 7106              		.loc 1 1582 0
 7107 00bc BB7A     		ldrb	r3, [r7, #10]
 7108 00be DBB2     		uxtb	r3, r3
 7109 00c0 03F02003 		and	r3, r3, #32
 7110 00c4 002B     		cmp	r3, #0
 7111 00c6 04D1     		bne	.L268
 7112              		.loc 1 1582 0 is_stmt 0 discriminator 1
 7113 00c8 BB7A     		ldrb	r3, [r7, #10]
 7114 00ca DBB2     		uxtb	r3, r3
 7115 00cc 5BB2     		sxtb	r3, r3
 7116 00ce 002B     		cmp	r3, #0
 7117 00d0 03DA     		bge	.L269
 7118              	.L268:
1583:main.c        ****     {
1584:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1585:main.c        ****         //i2c_skipped[main_counter] = 1;
1586:main.c        ****         I2C_reset();
 7119              		.loc 1 1586 0 is_stmt 1
 7120 00d2 FFF7FEFF 		bl	I2C_reset
1587:main.c        ****         error = 1;
 7121              		.loc 1 1587 0
 7122 00d6 0123     		movs	r3, #1
 7123 00d8 FB72     		strb	r3, [r7, #11]
 7124              	.L269:
1588:main.c        ****     }
1589:main.c        ****     return error;
 7125              		.loc 1 1589 0
 7126 00da FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1590:main.c        **** }
 7127              		.loc 1 1590 0
 7128 00dc 1846     		mov	r0, r3
 7129 00de 1037     		adds	r7, r7, #16
 7130              		.cfi_def_cfa_offset 8
 7131 00e0 BD46     		mov	sp, r7
 7132              		.cfi_def_cfa_register 13
 7133              		@ sp needed
 7134 00e2 80BD     		pop	{r7, pc}
 7135              	.L272:
 7136              		.align	2
 7137              	.L271:
 7138 00e4 00000000 		.word	I2Cbuff2
 7139 00e8 78640040 		.word	1073767544
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 156


 7140 00ec 18640040 		.word	1073767448
 7141 00f0 58640040 		.word	1073767512
 7142              		.cfi_endproc
 7143              	.LFE79:
 7144              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 7145              		.section	.text.I2C_reset,"ax",%progbits
 7146              		.align	2
 7147              		.global	I2C_reset
 7148              		.thumb
 7149              		.thumb_func
 7150              		.type	I2C_reset, %function
 7151              	I2C_reset:
 7152              	.LFB80:
1591:main.c        **** 
1592:main.c        **** void I2C_reset(void)
1593:main.c        **** {
 7153              		.loc 1 1593 0
 7154              		.cfi_startproc
 7155              		@ args = 0, pretend = 0, frame = 0
 7156              		@ frame_needed = 1, uses_anonymous_args = 0
 7157 0000 80B5     		push	{r7, lr}
 7158              		.cfi_def_cfa_offset 8
 7159              		.cfi_offset 7, -8
 7160              		.cfi_offset 14, -4
 7161 0002 00AF     		add	r7, sp, #0
 7162              		.cfi_def_cfa_register 7
1594:main.c        ****   I2C_1_Stop();
 7163              		.loc 1 1594 0
 7164 0004 FFF7FEFF 		bl	I2C_1_Stop
1595:main.c        **** 
1596:main.c        ****   /* Disable/clear everything, then reinitialize. */
1597:main.c        **** 
1598:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 7165              		.loc 1 1598 0
 7166 0008 044B     		ldr	r3, .L274
 7167 000a 0022     		movs	r2, #0
 7168 000c 1A70     		strb	r2, [r3]
1599:main.c        **** 
1600:main.c        ****   //I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
1601:main.c        **** 
1602:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 7169              		.loc 1 1602 0
 7170 000e 044B     		ldr	r3, .L274+4
 7171 0010 0022     		movs	r2, #0
 7172 0012 1A70     		strb	r2, [r3]
1603:main.c        **** 
1604:main.c        ****   I2C_1_Start();
 7173              		.loc 1 1604 0
 7174 0014 FFF7FEFF 		bl	I2C_1_Start
1605:main.c        **** }
 7175              		.loc 1 1605 0
 7176 0018 00BF     		nop
 7177 001a 80BD     		pop	{r7, pc}
 7178              	.L275:
 7179              		.align	2
 7180              	.L274:
 7181 001c 78640040 		.word	1073767544
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 157


 7182 0020 00000000 		.word	I2C_1_initVar
 7183              		.cfi_endproc
 7184              	.LFE80:
 7185              		.size	I2C_reset, .-I2C_reset
 7186              		.section	.text.checkUSB_Vbus,"ax",%progbits
 7187              		.align	2
 7188              		.global	checkUSB_Vbus
 7189              		.thumb
 7190              		.thumb_func
 7191              		.type	checkUSB_Vbus, %function
 7192              	checkUSB_Vbus:
 7193              	.LFB81:
1606:main.c        **** 
1607:main.c        **** 
1608:main.c        ****     
1609:main.c        **** void checkUSB_Vbus(void)
1610:main.c        **** {
 7194              		.loc 1 1610 0
 7195              		.cfi_startproc
 7196              		@ args = 0, pretend = 0, frame = 0
 7197              		@ frame_needed = 1, uses_anonymous_args = 0
 7198 0000 80B5     		push	{r7, lr}
 7199              		.cfi_def_cfa_offset 8
 7200              		.cfi_offset 7, -8
 7201              		.cfi_offset 14, -4
 7202 0002 00AF     		add	r7, sp, #0
 7203              		.cfi_def_cfa_register 7
1611:main.c        ****    if (USB_VBusPresent() == 0)
 7204              		.loc 1 1611 0
 7205 0004 FFF7FEFF 		bl	USB_VBusPresent
 7206 0008 0346     		mov	r3, r0
 7207 000a 002B     		cmp	r3, #0
 7208 000c 05D1     		bne	.L277
1612:main.c        ****    {
1613:main.c        ****        USB_Stop();
 7209              		.loc 1 1613 0
 7210 000e FFF7FEFF 		bl	USB_Stop
1614:main.c        ****        USB_active = 0; 
 7211              		.loc 1 1614 0
 7212 0012 0E4B     		ldr	r3, .L280
 7213 0014 0022     		movs	r2, #0
 7214 0016 1A70     		strb	r2, [r3]
 7215 0018 13E0     		b	.L278
 7216              	.L277:
1615:main.c        ****    }
1616:main.c        ****    else if (USB_active == 0 )
 7217              		.loc 1 1616 0
 7218 001a 0C4B     		ldr	r3, .L280
 7219 001c 1B78     		ldrb	r3, [r3]
 7220 001e DBB2     		uxtb	r3, r3
 7221 0020 002B     		cmp	r3, #0
 7222 0022 0ED1     		bne	.L278
1617:main.c        ****    {
1618:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 7223              		.loc 1 1618 0
 7224 0024 0021     		movs	r1, #0
 7225 0026 0020     		movs	r0, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 158


 7226 0028 FFF7FEFF 		bl	USB_Start
1619:main.c        ****         while (0u == USB_GetConfiguration());
 7227              		.loc 1 1619 0
 7228 002c 00BF     		nop
 7229              	.L279:
 7230              		.loc 1 1619 0 is_stmt 0 discriminator 1
 7231 002e FFF7FEFF 		bl	USB_GetConfiguration
 7232 0032 0346     		mov	r3, r0
 7233 0034 002B     		cmp	r3, #0
 7234 0036 FAD0     		beq	.L279
1620:main.c        ****         USB_MIDI_EP_Init();
 7235              		.loc 1 1620 0 is_stmt 1
 7236 0038 FFF7FEFF 		bl	USB_MIDI_Init
1621:main.c        ****        USB_active = 1;
 7237              		.loc 1 1621 0
 7238 003c 034B     		ldr	r3, .L280
 7239 003e 0122     		movs	r2, #1
 7240 0040 1A70     		strb	r2, [r3]
 7241              	.L278:
1622:main.c        ****    }
1623:main.c        ****    USB_check_flag = 0;
 7242              		.loc 1 1623 0
 7243 0042 034B     		ldr	r3, .L280+4
 7244 0044 0022     		movs	r2, #0
 7245 0046 1A70     		strb	r2, [r3]
1624:main.c        **** }
 7246              		.loc 1 1624 0
 7247 0048 00BF     		nop
 7248 004a 80BD     		pop	{r7, pc}
 7249              	.L281:
 7250              		.align	2
 7251              	.L280:
 7252 004c 00000000 		.word	USB_active
 7253 0050 00000000 		.word	USB_check_flag
 7254              		.cfi_endproc
 7255              	.LFE81:
 7256              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 7257              		.section	.text.USB_service,"ax",%progbits
 7258              		.align	2
 7259              		.global	USB_service
 7260              		.thumb
 7261              		.thumb_func
 7262              		.type	USB_service, %function
 7263              	USB_service:
 7264              	.LFB82:
1625:main.c        **** 
1626:main.c        **** 
1627:main.c        **** 
1628:main.c        **** void USB_service(void)
1629:main.c        **** {
 7265              		.loc 1 1629 0
 7266              		.cfi_startproc
 7267              		@ args = 0, pretend = 0, frame = 0
 7268              		@ frame_needed = 1, uses_anonymous_args = 0
 7269 0000 80B5     		push	{r7, lr}
 7270              		.cfi_def_cfa_offset 8
 7271              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 159


 7272              		.cfi_offset 14, -4
 7273 0002 00AF     		add	r7, sp, #0
 7274              		.cfi_def_cfa_register 7
1630:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 7275              		.loc 1 1630 0
 7276 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 7277 0008 0346     		mov	r3, r0
 7278 000a 002B     		cmp	r3, #0
 7279 000c 10D0     		beq	.L283
1631:main.c        ****     {
1632:main.c        ****         if(USB_GetConfiguration() != 0u)   
 7280              		.loc 1 1632 0
 7281 000e FFF7FEFF 		bl	USB_GetConfiguration
 7282 0012 0346     		mov	r3, r0
 7283 0014 002B     		cmp	r3, #0
 7284 0016 0BD0     		beq	.L283
1633:main.c        ****         {
1634:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1635:main.c        ****             
1636:main.c        ****             //SleepTimer_Start();
1637:main.c        ****         	
1638:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 7285              		.loc 1 1638 0
 7286 0018 244B     		ldr	r3, .L289
 7287 001a 1B78     		ldrb	r3, [r3]
 7288 001c DBB2     		uxtb	r3, r3
 7289 001e 002B     		cmp	r3, #0
 7290 0020 06D0     		beq	.L283
 7291              		.loc 1 1638 0 is_stmt 0 discriminator 1
 7292 0022 FFF7FEFF 		bl	USB_VBusPresent
 7293 0026 0346     		mov	r3, r0
 7294 0028 002B     		cmp	r3, #0
 7295 002a 01D0     		beq	.L283
1639:main.c        ****             {
1640:main.c        ****                 USB_MIDI_EP_Init();
 7296              		.loc 1 1640 0 is_stmt 1
 7297 002c FFF7FEFF 		bl	USB_MIDI_Init
 7298              	.L283:
1641:main.c        ****             }
1642:main.c        ****         }
1643:main.c        ****         else
1644:main.c        ****         {
1645:main.c        ****             //SleepTimer_Stop();
1646:main.c        ****         }    
1647:main.c        ****     }        
1648:main.c        ****     
1649:main.c        ****     if(USB_GetConfiguration() != 0u)    
 7299              		.loc 1 1649 0
 7300 0030 FFF7FEFF 		bl	USB_GetConfiguration
 7301 0034 0346     		mov	r3, r0
 7302 0036 002B     		cmp	r3, #0
 7303 0038 35D0     		beq	.L288
1650:main.c        ****     {
1651:main.c        **** 
1652:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1653:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 7304              		.loc 1 1653 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 160


 7305 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 7306 003e 0346     		mov	r3, r0
 7307 0040 002B     		cmp	r3, #0
 7308 0042 18D0     		beq	.L286
1654:main.c        ****         {
1655:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 7309              		.loc 1 1655 0
 7310 0044 1A4B     		ldr	r3, .L289+4
 7311 0046 1B78     		ldrb	r3, [r3]
 7312 0048 D8B2     		uxtb	r0, r3
 7313 004a 1A4B     		ldr	r3, .L289+8
 7314 004c 1B78     		ldrb	r3, [r3]
 7315 004e DBB2     		uxtb	r3, r3
 7316 0050 9BB2     		uxth	r3, r3
 7317 0052 1A46     		mov	r2, r3
 7318 0054 1849     		ldr	r1, .L289+12
 7319 0056 FFF7FEFF 		bl	USB_LoadInEP
1656:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1657:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 7320              		.loc 1 1657 0
 7321 005a 184B     		ldr	r3, .L289+16
 7322 005c 1B78     		ldrb	r3, [r3]
 7323 005e DBB2     		uxtb	r3, r3
 7324 0060 4022     		movs	r2, #64
 7325 0062 1749     		ldr	r1, .L289+20
 7326 0064 1846     		mov	r0, r3
 7327 0066 FFF7FEFF 		bl	USB_ReadOutEP
1658:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1659:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1660:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 7328              		.loc 1 1660 0
 7329 006a 144B     		ldr	r3, .L289+16
 7330 006c 1B78     		ldrb	r3, [r3]
 7331 006e DBB2     		uxtb	r3, r3
 7332 0070 1846     		mov	r0, r3
 7333 0072 FFF7FEFF 		bl	USB_EnableOutEP
 7334              	.L286:
1661:main.c        ****         }
1662:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7335              		.loc 1 1662 0
 7336 0076 0D4B     		ldr	r3, .L289
 7337 0078 1B78     		ldrb	r3, [r3]
 7338 007a DBB2     		uxtb	r3, r3
 7339 007c 002B     		cmp	r3, #0
 7340 007e 06D0     		beq	.L287
 7341              		.loc 1 1662 0 is_stmt 0 discriminator 1
 7342 0080 FFF7FEFF 		bl	USB_VBusPresent
 7343 0084 0346     		mov	r3, r0
 7344 0086 002B     		cmp	r3, #0
 7345 0088 01D0     		beq	.L287
1663:main.c        ****         {
1664:main.c        ****             USB_MIDI_IN_Service();
 7346              		.loc 1 1664 0 is_stmt 1
 7347 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 7348              	.L287:
1665:main.c        ****         }
1666:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 161


1667:main.c        **** 
1668:main.c        **** 
1669:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7349              		.loc 1 1669 0
 7350 008e 074B     		ldr	r3, .L289
 7351 0090 1B78     		ldrb	r3, [r3]
 7352 0092 DBB2     		uxtb	r3, r3
 7353 0094 002B     		cmp	r3, #0
 7354 0096 06D0     		beq	.L288
 7355              		.loc 1 1669 0 is_stmt 0 discriminator 1
 7356 0098 FFF7FEFF 		bl	USB_VBusPresent
 7357 009c 0346     		mov	r3, r0
 7358 009e 002B     		cmp	r3, #0
 7359 00a0 01D0     		beq	.L288
1670:main.c        ****         {
1671:main.c        ****             USB_MIDI_OUT_Service();
 7360              		.loc 1 1671 0 is_stmt 1
 7361 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 7362              	.L288:
1672:main.c        ****         }
1673:main.c        ****     }
1674:main.c        ****         
1675:main.c        **** }
 7363              		.loc 1 1675 0
 7364 00a6 00BF     		nop
 7365 00a8 80BD     		pop	{r7, pc}
 7366              	.L290:
 7367 00aa 00BF     		.align	2
 7368              	.L289:
 7369 00ac 00000000 		.word	USB_active
 7370 00b0 00000000 		.word	USB_midi_in_ep
 7371 00b4 00000000 		.word	USB_midiInPointer
 7372 00b8 00000000 		.word	USB_midiInBuffer
 7373 00bc 00000000 		.word	USB_midi_out_ep
 7374 00c0 00000000 		.word	USB_midiOutBuffer
 7375              		.cfi_endproc
 7376              	.LFE82:
 7377              		.size	USB_service, .-USB_service
 7378              		.section	.text.log2f_approx,"ax",%progbits
 7379              		.align	2
 7380              		.global	log2f_approx
 7381              		.thumb
 7382              		.thumb_func
 7383              		.type	log2f_approx, %function
 7384              	log2f_approx:
 7385              	.LFB83:
1676:main.c        **** 
1677:main.c        **** // This is a fast approximation to log2()
1678:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1679:main.c        **** float log2f_approx(float X) {
 7386              		.loc 1 1679 0
 7387              		.cfi_startproc
 7388              		@ args = 0, pretend = 0, frame = 24
 7389              		@ frame_needed = 1, uses_anonymous_args = 0
 7390 0000 80B5     		push	{r7, lr}
 7391              		.cfi_def_cfa_offset 8
 7392              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 162


 7393              		.cfi_offset 14, -4
 7394 0002 86B0     		sub	sp, sp, #24
 7395              		.cfi_def_cfa_offset 32
 7396 0004 00AF     		add	r7, sp, #0
 7397              		.cfi_def_cfa_register 7
 7398 0006 7860     		str	r0, [r7, #4]	@ float
1680:main.c        ****   float Y, F;
1681:main.c        ****   int E;
1682:main.c        ****   F = frexpf(fabsf(X), &E);
 7399              		.loc 1 1682 0
 7400 0008 7B68     		ldr	r3, [r7, #4]
 7401 000a 23F00043 		bic	r3, r3, #-2147483648
 7402 000e 07F10C02 		add	r2, r7, #12
 7403 0012 1146     		mov	r1, r2
 7404 0014 1846     		mov	r0, r3
 7405 0016 FFF7FEFF 		bl	frexpf
 7406 001a 7861     		str	r0, [r7, #20]	@ float
1683:main.c        ****   Y = 1.23149591368684f;
 7407              		.loc 1 1683 0
 7408 001c 1A4B     		ldr	r3, .L293
 7409 001e 3B61     		str	r3, [r7, #16]	@ float
1684:main.c        ****   Y *= F;
 7410              		.loc 1 1684 0
 7411 0020 7969     		ldr	r1, [r7, #20]	@ float
 7412 0022 3869     		ldr	r0, [r7, #16]	@ float
 7413 0024 FFF7FEFF 		bl	__aeabi_fmul
 7414 0028 0346     		mov	r3, r0
 7415 002a 3B61     		str	r3, [r7, #16]	@ float
1685:main.c        ****   Y += -4.11852516267426f;
 7416              		.loc 1 1685 0
 7417 002c 1749     		ldr	r1, .L293+4
 7418 002e 3869     		ldr	r0, [r7, #16]	@ float
 7419 0030 FFF7FEFF 		bl	__aeabi_fsub
 7420 0034 0346     		mov	r3, r0
 7421 0036 3B61     		str	r3, [r7, #16]	@ float
1686:main.c        ****   Y *= F;
 7422              		.loc 1 1686 0
 7423 0038 7969     		ldr	r1, [r7, #20]	@ float
 7424 003a 3869     		ldr	r0, [r7, #16]	@ float
 7425 003c FFF7FEFF 		bl	__aeabi_fmul
 7426 0040 0346     		mov	r3, r0
 7427 0042 3B61     		str	r3, [r7, #16]	@ float
1687:main.c        ****   Y += 6.02197014179219f;
 7428              		.loc 1 1687 0
 7429 0044 1249     		ldr	r1, .L293+8
 7430 0046 3869     		ldr	r0, [r7, #16]	@ float
 7431 0048 FFF7FEFF 		bl	__aeabi_fadd
 7432 004c 0346     		mov	r3, r0
 7433 004e 3B61     		str	r3, [r7, #16]	@ float
1688:main.c        ****   Y *= F;
 7434              		.loc 1 1688 0
 7435 0050 7969     		ldr	r1, [r7, #20]	@ float
 7436 0052 3869     		ldr	r0, [r7, #16]	@ float
 7437 0054 FFF7FEFF 		bl	__aeabi_fmul
 7438 0058 0346     		mov	r3, r0
 7439 005a 3B61     		str	r3, [r7, #16]	@ float
1689:main.c        ****   Y += -3.13396450166353f;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 163


 7440              		.loc 1 1689 0
 7441 005c 0D49     		ldr	r1, .L293+12
 7442 005e 3869     		ldr	r0, [r7, #16]	@ float
 7443 0060 FFF7FEFF 		bl	__aeabi_fsub
 7444 0064 0346     		mov	r3, r0
 7445 0066 3B61     		str	r3, [r7, #16]	@ float
1690:main.c        ****   Y += E;
 7446              		.loc 1 1690 0
 7447 0068 FB68     		ldr	r3, [r7, #12]
 7448 006a 1846     		mov	r0, r3
 7449 006c FFF7FEFF 		bl	__aeabi_i2f
 7450 0070 0346     		mov	r3, r0
 7451 0072 1946     		mov	r1, r3
 7452 0074 3869     		ldr	r0, [r7, #16]	@ float
 7453 0076 FFF7FEFF 		bl	__aeabi_fadd
 7454 007a 0346     		mov	r3, r0
 7455 007c 3B61     		str	r3, [r7, #16]	@ float
1691:main.c        ****   return(Y);
 7456              		.loc 1 1691 0
 7457 007e 3B69     		ldr	r3, [r7, #16]	@ float
1692:main.c        **** }
 7458              		.loc 1 1692 0
 7459 0080 1846     		mov	r0, r3
 7460 0082 1837     		adds	r7, r7, #24
 7461              		.cfi_def_cfa_offset 8
 7462 0084 BD46     		mov	sp, r7
 7463              		.cfi_def_cfa_register 13
 7464              		@ sp needed
 7465 0086 80BD     		pop	{r7, pc}
 7466              	.L294:
 7467              		.align	2
 7468              	.L293:
 7469 0088 A8A19D3F 		.word	1067295144
 7470 008c F5CA8340 		.word	1082378997
 7471 0090 FBB3C040 		.word	1086370811
 7472 0094 E0924840 		.word	1078498016
 7473              		.cfi_endproc
 7474              	.LFE83:
 7475              		.size	log2f_approx, .-log2f_approx
 7476              		.global	prevNotes
 7477              		.bss
 7478              		.align	2
 7479              		.type	prevNotes, %object
 7480              		.size	prevNotes, 48
 7481              	prevNotes:
 7482 00e4 00000000 		.space	48
 7482      00000000 
 7482      00000000 
 7482      00000000 
 7482      00000000 
 7483              		.section	.text.noteEvent,"ax",%progbits
 7484              		.align	2
 7485              		.global	noteEvent
 7486              		.thumb
 7487              		.thumb_func
 7488              		.type	noteEvent, %function
 7489              	noteEvent:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 164


 7490              	.LFB84:
1693:main.c        **** 
1694:main.c        **** 
1695:main.c        **** 
1696:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1697:main.c        **** 
1698:main.c        **** void noteEvent(int string)
1699:main.c        **** {
 7491              		.loc 1 1699 0
 7492              		.cfi_startproc
 7493              		@ args = 0, pretend = 0, frame = 24
 7494              		@ frame_needed = 1, uses_anonymous_args = 0
 7495 0000 80B5     		push	{r7, lr}
 7496              		.cfi_def_cfa_offset 8
 7497              		.cfi_offset 7, -8
 7498              		.cfi_offset 14, -4
 7499 0002 86B0     		sub	sp, sp, #24
 7500              		.cfi_def_cfa_offset 32
 7501 0004 00AF     		add	r7, sp, #0
 7502              		.cfi_def_cfa_register 7
 7503 0006 7860     		str	r0, [r7, #4]
1700:main.c        ****     
1701:main.c        ****     /*
1702:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1703:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1704:main.c        ****     int vInt  = (int) (v*4.0f);
1705:main.c        ****     if (vInt > 127)
1706:main.c        ****     {
1707:main.c        ****         vInt = 127;
1708:main.c        ****     }
1709:main.c        ****     */
1710:main.c        ****     uint16_t velocity = strings[string];
 7504              		.loc 1 1710 0
 7505 0008 2C4A     		ldr	r2, .L300
 7506 000a 7B68     		ldr	r3, [r7, #4]
 7507 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 7508 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1711:main.c        ****     if (velocity > 0)
 7509              		.loc 1 1711 0
 7510 0012 FB8A     		ldrh	r3, [r7, #22]
 7511 0014 002B     		cmp	r3, #0
 7512 0016 43D0     		beq	.L296
 7513              	.LBB50:
1712:main.c        ****     {
1713:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1714:main.c        ****         float tempVel = (float)velocity;
 7514              		.loc 1 1714 0
 7515 0018 FB8A     		ldrh	r3, [r7, #22]
 7516 001a 1846     		mov	r0, r3
 7517 001c FFF7FEFF 		bl	__aeabi_ui2f
 7518 0020 0346     		mov	r3, r0
 7519 0022 3B61     		str	r3, [r7, #16]	@ float
1715:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 7520              		.loc 1 1715 0
 7521 0024 4FF05E51 		mov	r1, #931135488
 7522 0028 3869     		ldr	r0, [r7, #16]	@ float
 7523 002a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 165


 7524 002e 0346     		mov	r3, r0
 7525 0030 3B61     		str	r3, [r7, #16]	@ float
1716:main.c        ****         tempVel = sqrtf(tempVel);
 7526              		.loc 1 1716 0
 7527 0032 3869     		ldr	r0, [r7, #16]	@ float
 7528 0034 FFF7FEFF 		bl	sqrtf
 7529 0038 3861     		str	r0, [r7, #16]	@ float
1717:main.c        ****         tempVel = tempVel - 0.0239372430f;
 7530              		.loc 1 1717 0
 7531 003a 2149     		ldr	r1, .L300+4
 7532 003c 3869     		ldr	r0, [r7, #16]	@ float
 7533 003e FFF7FEFF 		bl	__aeabi_fsub
 7534 0042 0346     		mov	r3, r0
 7535 0044 3B61     		str	r3, [r7, #16]	@ float
1718:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 7536              		.loc 1 1718 0
 7537 0046 1F49     		ldr	r1, .L300+8
 7538 0048 3869     		ldr	r0, [r7, #16]	@ float
 7539 004a FFF7FEFF 		bl	__aeabi_fmul
 7540 004e 0346     		mov	r3, r0
 7541 0050 3B61     		str	r3, [r7, #16]	@ float
1719:main.c        ****         velocity = (int)tempVel;
 7542              		.loc 1 1719 0
 7543 0052 3869     		ldr	r0, [r7, #16]	@ float
 7544 0054 FFF7FEFF 		bl	__aeabi_f2iz
 7545 0058 0346     		mov	r3, r0
 7546 005a FB82     		strh	r3, [r7, #22]	@ movhi
1720:main.c        ****         
1721:main.c        **** 
1722:main.c        ****         if (velocity > 127)
 7547              		.loc 1 1722 0
 7548 005c FB8A     		ldrh	r3, [r7, #22]
 7549 005e 7F2B     		cmp	r3, #127
 7550 0060 01D9     		bls	.L297
1723:main.c        ****         {
1724:main.c        ****             velocity = 127;
 7551              		.loc 1 1724 0
 7552 0062 7F23     		movs	r3, #127
 7553 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 7554              	.L297:
1725:main.c        ****         }
1726:main.c        ****         
1727:main.c        ****         //only update octave on note-ons
1728:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1729:main.c        ****         int noteToSend = ((octave - 5) * 12) + openStringMIDI_Int[string];
 7555              		.loc 1 1729 0
 7556 0066 184B     		ldr	r3, .L300+12
 7557 0068 1B68     		ldr	r3, [r3]
 7558 006a 5A1F     		subs	r2, r3, #5
 7559 006c 1346     		mov	r3, r2
 7560 006e 5B00     		lsls	r3, r3, #1
 7561 0070 1344     		add	r3, r3, r2
 7562 0072 9B00     		lsls	r3, r3, #2
 7563 0074 1946     		mov	r1, r3
 7564 0076 154A     		ldr	r2, .L300+16
 7565 0078 7B68     		ldr	r3, [r7, #4]
 7566 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 166


 7567 007e 0B44     		add	r3, r3, r1
 7568 0080 FB60     		str	r3, [r7, #12]
1730:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 7569              		.loc 1 1730 0
 7570 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 7571 0084 DBB2     		uxtb	r3, r3
 7572 0086 1946     		mov	r1, r3
 7573 0088 7B68     		ldr	r3, [r7, #4]
 7574 008a 0133     		adds	r3, r3, #1
 7575 008c 1A46     		mov	r2, r3
 7576 008e F868     		ldr	r0, [r7, #12]
 7577 0090 FFF7FEFF 		bl	sendMIDINoteOn
1731:main.c        ****         prevNotes[string] = noteToSend;
 7578              		.loc 1 1731 0
 7579 0094 0E49     		ldr	r1, .L300+20
 7580 0096 7B68     		ldr	r3, [r7, #4]
 7581 0098 FA68     		ldr	r2, [r7, #12]
 7582 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 7583              	.LBE50:
1732:main.c        ****             
1733:main.c        ****     }
1734:main.c        ****     else
1735:main.c        ****     {
1736:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1737:main.c        ****     }
1738:main.c        **** 
1739:main.c        **** }
 7584              		.loc 1 1739 0
 7585 009e 09E0     		b	.L299
 7586              	.L296:
1736:main.c        ****     }
 7587              		.loc 1 1736 0
 7588 00a0 0B4A     		ldr	r2, .L300+20
 7589 00a2 7B68     		ldr	r3, [r7, #4]
 7590 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 7591 00a8 7B68     		ldr	r3, [r7, #4]
 7592 00aa 0133     		adds	r3, r3, #1
 7593 00ac 1A46     		mov	r2, r3
 7594 00ae 0021     		movs	r1, #0
 7595 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 7596              	.L299:
 7597              		.loc 1 1739 0
 7598 00b4 00BF     		nop
 7599 00b6 1837     		adds	r7, r7, #24
 7600              		.cfi_def_cfa_offset 8
 7601 00b8 BD46     		mov	sp, r7
 7602              		.cfi_def_cfa_register 13
 7603              		@ sp needed
 7604 00ba 80BD     		pop	{r7, pc}
 7605              	.L301:
 7606              		.align	2
 7607              	.L300:
 7608 00bc 00000000 		.word	strings
 7609 00c0 0918C43C 		.word	1019484169
 7610 00c4 551D0243 		.word	1124212053
 7611 00c8 00000000 		.word	octave
 7612 00cc 00000000 		.word	openStringMIDI_Int
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 167


 7613 00d0 00000000 		.word	prevNotes
 7614              		.cfi_endproc
 7615              	.LFE84:
 7616              		.size	noteEvent, .-noteEvent
 7617              		.section	.text.CCEvent,"ax",%progbits
 7618              		.align	2
 7619              		.global	CCEvent
 7620              		.thumb
 7621              		.thumb_func
 7622              		.type	CCEvent, %function
 7623              	CCEvent:
 7624              	.LFB85:
1740:main.c        **** 
1741:main.c        **** void CCEvent(int cc, int val)
1742:main.c        **** {
 7625              		.loc 1 1742 0
 7626              		.cfi_startproc
 7627              		@ args = 0, pretend = 0, frame = 8
 7628              		@ frame_needed = 1, uses_anonymous_args = 0
 7629 0000 80B5     		push	{r7, lr}
 7630              		.cfi_def_cfa_offset 8
 7631              		.cfi_offset 7, -8
 7632              		.cfi_offset 14, -4
 7633 0002 82B0     		sub	sp, sp, #8
 7634              		.cfi_def_cfa_offset 16
 7635 0004 00AF     		add	r7, sp, #0
 7636              		.cfi_def_cfa_register 7
 7637 0006 7860     		str	r0, [r7, #4]
 7638 0008 3960     		str	r1, [r7]
1743:main.c        ****     
1744:main.c        ****     sendMIDIControlChange(cc, val, 0);
 7639              		.loc 1 1744 0
 7640 000a 0022     		movs	r2, #0
 7641 000c 3968     		ldr	r1, [r7]
 7642 000e 7868     		ldr	r0, [r7, #4]
 7643 0010 FFF7FEFF 		bl	sendMIDIControlChange
1745:main.c        **** }
 7644              		.loc 1 1745 0
 7645 0014 00BF     		nop
 7646 0016 0837     		adds	r7, r7, #8
 7647              		.cfi_def_cfa_offset 8
 7648 0018 BD46     		mov	sp, r7
 7649              		.cfi_def_cfa_register 13
 7650              		@ sp needed
 7651 001a 80BD     		pop	{r7, pc}
 7652              		.cfi_endproc
 7653              	.LFE85:
 7654              		.size	CCEvent, .-CCEvent
 7655              		.section	.text.sendMIDINoteOn,"ax",%progbits
 7656              		.align	2
 7657              		.global	sendMIDINoteOn
 7658              		.thumb
 7659              		.thumb_func
 7660              		.type	sendMIDINoteOn, %function
 7661              	sendMIDINoteOn:
 7662              	.LFB86:
1746:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 168


1747:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1748:main.c        **** {  
 7663              		.loc 1 1748 0
 7664              		.cfi_startproc
 7665              		@ args = 0, pretend = 0, frame = 16
 7666              		@ frame_needed = 1, uses_anonymous_args = 0
 7667 0000 80B5     		push	{r7, lr}
 7668              		.cfi_def_cfa_offset 8
 7669              		.cfi_offset 7, -8
 7670              		.cfi_offset 14, -4
 7671 0002 84B0     		sub	sp, sp, #16
 7672              		.cfi_def_cfa_offset 24
 7673 0004 00AF     		add	r7, sp, #0
 7674              		.cfi_def_cfa_register 7
 7675 0006 F860     		str	r0, [r7, #12]
 7676 0008 B960     		str	r1, [r7, #8]
 7677 000a 7A60     		str	r2, [r7, #4]
1749:main.c        ****    
1750:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 7678              		.loc 1 1750 0
 7679 000c 7B68     		ldr	r3, [r7, #4]
 7680 000e DBB2     		uxtb	r3, r3
 7681 0010 703B     		subs	r3, r3, #112
 7682 0012 DAB2     		uxtb	r2, r3
 7683 0014 114B     		ldr	r3, .L305
 7684 0016 1A70     		strb	r2, [r3]
1751:main.c        ****     midiMsg[1] = MIDInoteNum;
 7685              		.loc 1 1751 0
 7686 0018 FB68     		ldr	r3, [r7, #12]
 7687 001a DAB2     		uxtb	r2, r3
 7688 001c 0F4B     		ldr	r3, .L305
 7689 001e 5A70     		strb	r2, [r3, #1]
1752:main.c        ****     midiMsg[2] = velocity;	
 7690              		.loc 1 1752 0
 7691 0020 BB68     		ldr	r3, [r7, #8]
 7692 0022 DAB2     		uxtb	r2, r3
 7693 0024 0D4B     		ldr	r3, .L305
 7694 0026 9A70     		strb	r2, [r3, #2]
1753:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7695              		.loc 1 1753 0
 7696 0028 0D4B     		ldr	r3, .L305+4
 7697 002a 1B78     		ldrb	r3, [r3]
 7698 002c DBB2     		uxtb	r3, r3
 7699 002e 002B     		cmp	r3, #0
 7700 0030 09D0     		beq	.L304
 7701              		.loc 1 1753 0 is_stmt 0 discriminator 1
 7702 0032 FFF7FEFF 		bl	USB_VBusPresent
 7703 0036 0346     		mov	r3, r0
 7704 0038 002B     		cmp	r3, #0
 7705 003a 04D0     		beq	.L304
1754:main.c        ****     {
1755:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7706              		.loc 1 1755 0 is_stmt 1
 7707 003c 0022     		movs	r2, #0
 7708 003e 0749     		ldr	r1, .L305
 7709 0040 0320     		movs	r0, #3
 7710 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 169


 7711              	.L304:
1756:main.c        ****     } 
1757:main.c        ****     midiSent += 4;
 7712              		.loc 1 1757 0
 7713 0046 074B     		ldr	r3, .L305+8
 7714 0048 1B88     		ldrh	r3, [r3]
 7715 004a 0433     		adds	r3, r3, #4
 7716 004c 9AB2     		uxth	r2, r3
 7717 004e 054B     		ldr	r3, .L305+8
 7718 0050 1A80     		strh	r2, [r3]	@ movhi
1758:main.c        **** }
 7719              		.loc 1 1758 0
 7720 0052 00BF     		nop
 7721 0054 1037     		adds	r7, r7, #16
 7722              		.cfi_def_cfa_offset 8
 7723 0056 BD46     		mov	sp, r7
 7724              		.cfi_def_cfa_register 13
 7725              		@ sp needed
 7726 0058 80BD     		pop	{r7, pc}
 7727              	.L306:
 7728 005a 00BF     		.align	2
 7729              	.L305:
 7730 005c 00000000 		.word	midiMsg
 7731 0060 00000000 		.word	USB_active
 7732 0064 00000000 		.word	midiSent
 7733              		.cfi_endproc
 7734              	.LFE86:
 7735              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 7736              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 7737              		.align	2
 7738              		.global	sendMIDIPolyKeyPressure
 7739              		.thumb
 7740              		.thumb_func
 7741              		.type	sendMIDIPolyKeyPressure, %function
 7742              	sendMIDIPolyKeyPressure:
 7743              	.LFB87:
1759:main.c        **** 
1760:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1761:main.c        **** {
 7744              		.loc 1 1761 0
 7745              		.cfi_startproc
 7746              		@ args = 0, pretend = 0, frame = 16
 7747              		@ frame_needed = 1, uses_anonymous_args = 0
 7748 0000 80B5     		push	{r7, lr}
 7749              		.cfi_def_cfa_offset 8
 7750              		.cfi_offset 7, -8
 7751              		.cfi_offset 14, -4
 7752 0002 84B0     		sub	sp, sp, #16
 7753              		.cfi_def_cfa_offset 24
 7754 0004 00AF     		add	r7, sp, #0
 7755              		.cfi_def_cfa_register 7
 7756 0006 F860     		str	r0, [r7, #12]
 7757 0008 B960     		str	r1, [r7, #8]
 7758 000a 7A60     		str	r2, [r7, #4]
1762:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 7759              		.loc 1 1762 0
 7760 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 170


 7761 000e DBB2     		uxtb	r3, r3
 7762 0010 603B     		subs	r3, r3, #96
 7763 0012 DAB2     		uxtb	r2, r3
 7764 0014 114B     		ldr	r3, .L309
 7765 0016 1A70     		strb	r2, [r3]
1763:main.c        ****     midiMsg[1] = MIDInoteNum;
 7766              		.loc 1 1763 0
 7767 0018 FB68     		ldr	r3, [r7, #12]
 7768 001a DAB2     		uxtb	r2, r3
 7769 001c 0F4B     		ldr	r3, .L309
 7770 001e 5A70     		strb	r2, [r3, #1]
1764:main.c        ****     midiMsg[2] = pressure;		
 7771              		.loc 1 1764 0
 7772 0020 BB68     		ldr	r3, [r7, #8]
 7773 0022 DAB2     		uxtb	r2, r3
 7774 0024 0D4B     		ldr	r3, .L309
 7775 0026 9A70     		strb	r2, [r3, #2]
1765:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7776              		.loc 1 1765 0
 7777 0028 0D4B     		ldr	r3, .L309+4
 7778 002a 1B78     		ldrb	r3, [r3]
 7779 002c DBB2     		uxtb	r3, r3
 7780 002e 002B     		cmp	r3, #0
 7781 0030 09D0     		beq	.L308
 7782              		.loc 1 1765 0 is_stmt 0 discriminator 1
 7783 0032 FFF7FEFF 		bl	USB_VBusPresent
 7784 0036 0346     		mov	r3, r0
 7785 0038 002B     		cmp	r3, #0
 7786 003a 04D0     		beq	.L308
1766:main.c        ****     {
1767:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7787              		.loc 1 1767 0 is_stmt 1
 7788 003c 0022     		movs	r2, #0
 7789 003e 0749     		ldr	r1, .L309
 7790 0040 0320     		movs	r0, #3
 7791 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7792              	.L308:
1768:main.c        ****     } 
1769:main.c        ****     midiSent += 4;
 7793              		.loc 1 1769 0
 7794 0046 074B     		ldr	r3, .L309+8
 7795 0048 1B88     		ldrh	r3, [r3]
 7796 004a 0433     		adds	r3, r3, #4
 7797 004c 9AB2     		uxth	r2, r3
 7798 004e 054B     		ldr	r3, .L309+8
 7799 0050 1A80     		strh	r2, [r3]	@ movhi
1770:main.c        **** }
 7800              		.loc 1 1770 0
 7801 0052 00BF     		nop
 7802 0054 1037     		adds	r7, r7, #16
 7803              		.cfi_def_cfa_offset 8
 7804 0056 BD46     		mov	sp, r7
 7805              		.cfi_def_cfa_register 13
 7806              		@ sp needed
 7807 0058 80BD     		pop	{r7, pc}
 7808              	.L310:
 7809 005a 00BF     		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 171


 7810              	.L309:
 7811 005c 00000000 		.word	midiMsg
 7812 0060 00000000 		.word	USB_active
 7813 0064 00000000 		.word	midiSent
 7814              		.cfi_endproc
 7815              	.LFE87:
 7816              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 7817              		.section	.text.sendMIDIControlChange,"ax",%progbits
 7818              		.align	2
 7819              		.global	sendMIDIControlChange
 7820              		.thumb
 7821              		.thumb_func
 7822              		.type	sendMIDIControlChange, %function
 7823              	sendMIDIControlChange:
 7824              	.LFB88:
1771:main.c        **** 
1772:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1773:main.c        **** {
 7825              		.loc 1 1773 0
 7826              		.cfi_startproc
 7827              		@ args = 0, pretend = 0, frame = 16
 7828              		@ frame_needed = 1, uses_anonymous_args = 0
 7829 0000 80B5     		push	{r7, lr}
 7830              		.cfi_def_cfa_offset 8
 7831              		.cfi_offset 7, -8
 7832              		.cfi_offset 14, -4
 7833 0002 84B0     		sub	sp, sp, #16
 7834              		.cfi_def_cfa_offset 24
 7835 0004 00AF     		add	r7, sp, #0
 7836              		.cfi_def_cfa_register 7
 7837 0006 F860     		str	r0, [r7, #12]
 7838 0008 B960     		str	r1, [r7, #8]
 7839 000a 7A60     		str	r2, [r7, #4]
1774:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 7840              		.loc 1 1774 0
 7841 000c 7B68     		ldr	r3, [r7, #4]
 7842 000e DBB2     		uxtb	r3, r3
 7843 0010 503B     		subs	r3, r3, #80
 7844 0012 DAB2     		uxtb	r2, r3
 7845 0014 114B     		ldr	r3, .L313
 7846 0016 1A70     		strb	r2, [r3]
1775:main.c        ****     midiMsg[1] = CCnum;
 7847              		.loc 1 1775 0
 7848 0018 FB68     		ldr	r3, [r7, #12]
 7849 001a DAB2     		uxtb	r2, r3
 7850 001c 0F4B     		ldr	r3, .L313
 7851 001e 5A70     		strb	r2, [r3, #1]
1776:main.c        ****     midiMsg[2] = CCval;			
 7852              		.loc 1 1776 0
 7853 0020 BB68     		ldr	r3, [r7, #8]
 7854 0022 DAB2     		uxtb	r2, r3
 7855 0024 0D4B     		ldr	r3, .L313
 7856 0026 9A70     		strb	r2, [r3, #2]
1777:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7857              		.loc 1 1777 0
 7858 0028 0D4B     		ldr	r3, .L313+4
 7859 002a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 172


 7860 002c DBB2     		uxtb	r3, r3
 7861 002e 002B     		cmp	r3, #0
 7862 0030 09D0     		beq	.L312
 7863              		.loc 1 1777 0 is_stmt 0 discriminator 1
 7864 0032 FFF7FEFF 		bl	USB_VBusPresent
 7865 0036 0346     		mov	r3, r0
 7866 0038 002B     		cmp	r3, #0
 7867 003a 04D0     		beq	.L312
1778:main.c        ****     {
1779:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7868              		.loc 1 1779 0 is_stmt 1
 7869 003c 0022     		movs	r2, #0
 7870 003e 0749     		ldr	r1, .L313
 7871 0040 0320     		movs	r0, #3
 7872 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7873              	.L312:
1780:main.c        ****     } 
1781:main.c        ****     midiSent += 4;
 7874              		.loc 1 1781 0
 7875 0046 074B     		ldr	r3, .L313+8
 7876 0048 1B88     		ldrh	r3, [r3]
 7877 004a 0433     		adds	r3, r3, #4
 7878 004c 9AB2     		uxth	r2, r3
 7879 004e 054B     		ldr	r3, .L313+8
 7880 0050 1A80     		strh	r2, [r3]	@ movhi
1782:main.c        **** }
 7881              		.loc 1 1782 0
 7882 0052 00BF     		nop
 7883 0054 1037     		adds	r7, r7, #16
 7884              		.cfi_def_cfa_offset 8
 7885 0056 BD46     		mov	sp, r7
 7886              		.cfi_def_cfa_register 13
 7887              		@ sp needed
 7888 0058 80BD     		pop	{r7, pc}
 7889              	.L314:
 7890 005a 00BF     		.align	2
 7891              	.L313:
 7892 005c 00000000 		.word	midiMsg
 7893 0060 00000000 		.word	USB_active
 7894 0064 00000000 		.word	midiSent
 7895              		.cfi_endproc
 7896              	.LFE88:
 7897              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 7898              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 7899              		.align	2
 7900              		.global	sendMIDIPitchBend
 7901              		.thumb
 7902              		.thumb_func
 7903              		.type	sendMIDIPitchBend, %function
 7904              	sendMIDIPitchBend:
 7905              	.LFB89:
1783:main.c        **** 
1784:main.c        **** void sendMIDIPitchBend(int val, int channel)
1785:main.c        **** {
 7906              		.loc 1 1785 0
 7907              		.cfi_startproc
 7908              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 173


 7909              		@ frame_needed = 1, uses_anonymous_args = 0
 7910 0000 80B5     		push	{r7, lr}
 7911              		.cfi_def_cfa_offset 8
 7912              		.cfi_offset 7, -8
 7913              		.cfi_offset 14, -4
 7914 0002 82B0     		sub	sp, sp, #8
 7915              		.cfi_def_cfa_offset 16
 7916 0004 00AF     		add	r7, sp, #0
 7917              		.cfi_def_cfa_register 7
 7918 0006 7860     		str	r0, [r7, #4]
 7919 0008 3960     		str	r1, [r7]
1786:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 7920              		.loc 1 1786 0
 7921 000a 3B68     		ldr	r3, [r7]
 7922 000c DBB2     		uxtb	r3, r3
 7923 000e 203B     		subs	r3, r3, #32
 7924 0010 DAB2     		uxtb	r2, r3
 7925 0012 134B     		ldr	r3, .L317
 7926 0014 1A70     		strb	r2, [r3]
1787:main.c        ****     midiMsg[1] = (val & 127); //LSB
 7927              		.loc 1 1787 0
 7928 0016 7B68     		ldr	r3, [r7, #4]
 7929 0018 DBB2     		uxtb	r3, r3
 7930 001a 03F07F03 		and	r3, r3, #127
 7931 001e DAB2     		uxtb	r2, r3
 7932 0020 0F4B     		ldr	r3, .L317
 7933 0022 5A70     		strb	r2, [r3, #1]
1788:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 7934              		.loc 1 1788 0
 7935 0024 7B68     		ldr	r3, [r7, #4]
 7936 0026 DB11     		asrs	r3, r3, #7
 7937 0028 DAB2     		uxtb	r2, r3
 7938 002a 0D4B     		ldr	r3, .L317
 7939 002c 9A70     		strb	r2, [r3, #2]
1789:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7940              		.loc 1 1789 0
 7941 002e 0D4B     		ldr	r3, .L317+4
 7942 0030 1B78     		ldrb	r3, [r3]
 7943 0032 DBB2     		uxtb	r3, r3
 7944 0034 002B     		cmp	r3, #0
 7945 0036 09D0     		beq	.L316
 7946              		.loc 1 1789 0 is_stmt 0 discriminator 1
 7947 0038 FFF7FEFF 		bl	USB_VBusPresent
 7948 003c 0346     		mov	r3, r0
 7949 003e 002B     		cmp	r3, #0
 7950 0040 04D0     		beq	.L316
1790:main.c        ****     {
1791:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7951              		.loc 1 1791 0 is_stmt 1
 7952 0042 0022     		movs	r2, #0
 7953 0044 0649     		ldr	r1, .L317
 7954 0046 0320     		movs	r0, #3
 7955 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7956              	.L316:
1792:main.c        ****     } 
1793:main.c        ****     midiSent += 4;
 7957              		.loc 1 1793 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 174


 7958 004c 064B     		ldr	r3, .L317+8
 7959 004e 1B88     		ldrh	r3, [r3]
 7960 0050 0433     		adds	r3, r3, #4
 7961 0052 9AB2     		uxth	r2, r3
 7962 0054 044B     		ldr	r3, .L317+8
 7963 0056 1A80     		strh	r2, [r3]	@ movhi
1794:main.c        **** }
 7964              		.loc 1 1794 0
 7965 0058 00BF     		nop
 7966 005a 0837     		adds	r7, r7, #8
 7967              		.cfi_def_cfa_offset 8
 7968 005c BD46     		mov	sp, r7
 7969              		.cfi_def_cfa_register 13
 7970              		@ sp needed
 7971 005e 80BD     		pop	{r7, pc}
 7972              	.L318:
 7973              		.align	2
 7974              	.L317:
 7975 0060 00000000 		.word	midiMsg
 7976 0064 00000000 		.word	USB_active
 7977 0068 00000000 		.word	midiSent
 7978              		.cfi_endproc
 7979              	.LFE89:
 7980              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 7981              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 7982              		.align	2
 7983              		.global	sendMIDIAllNotesOff
 7984              		.thumb
 7985              		.thumb_func
 7986              		.type	sendMIDIAllNotesOff, %function
 7987              	sendMIDIAllNotesOff:
 7988              	.LFB90:
1795:main.c        **** 
1796:main.c        **** void sendMIDIAllNotesOff(void)
1797:main.c        **** {   
 7989              		.loc 1 1797 0
 7990              		.cfi_startproc
 7991              		@ args = 0, pretend = 0, frame = 8
 7992              		@ frame_needed = 1, uses_anonymous_args = 0
 7993 0000 80B5     		push	{r7, lr}
 7994              		.cfi_def_cfa_offset 8
 7995              		.cfi_offset 7, -8
 7996              		.cfi_offset 14, -4
 7997 0002 82B0     		sub	sp, sp, #8
 7998              		.cfi_def_cfa_offset 16
 7999 0004 00AF     		add	r7, sp, #0
 8000              		.cfi_def_cfa_register 7
 8001              	.LBB51:
1798:main.c        ****     for (uint8_t i = 0; i < 128; i++)
 8002              		.loc 1 1798 0
 8003 0006 0023     		movs	r3, #0
 8004 0008 FB71     		strb	r3, [r7, #7]
 8005 000a 1AE0     		b	.L320
 8006              	.L322:
1799:main.c        ****     {
1800:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 8007              		.loc 1 1800 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 175


 8008 000c 114B     		ldr	r3, .L323
 8009 000e 9022     		movs	r2, #144
 8010 0010 1A70     		strb	r2, [r3]
1801:main.c        ****         midiMsg[1] = i;
 8011              		.loc 1 1801 0
 8012 0012 104A     		ldr	r2, .L323
 8013 0014 FB79     		ldrb	r3, [r7, #7]
 8014 0016 5370     		strb	r3, [r2, #1]
1802:main.c        ****         midiMsg[2] = 0;	
 8015              		.loc 1 1802 0
 8016 0018 0E4B     		ldr	r3, .L323
 8017 001a 0022     		movs	r2, #0
 8018 001c 9A70     		strb	r2, [r3, #2]
1803:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 8019              		.loc 1 1803 0
 8020 001e 0E4B     		ldr	r3, .L323+4
 8021 0020 1B78     		ldrb	r3, [r3]
 8022 0022 DBB2     		uxtb	r3, r3
 8023 0024 002B     		cmp	r3, #0
 8024 0026 09D0     		beq	.L321
 8025              		.loc 1 1803 0 is_stmt 0 discriminator 1
 8026 0028 FFF7FEFF 		bl	USB_VBusPresent
 8027 002c 0346     		mov	r3, r0
 8028 002e 002B     		cmp	r3, #0
 8029 0030 04D0     		beq	.L321
1804:main.c        ****         {       
1805:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 8030              		.loc 1 1805 0 is_stmt 1
 8031 0032 0022     		movs	r2, #0
 8032 0034 0749     		ldr	r1, .L323
 8033 0036 0320     		movs	r0, #3
 8034 0038 FFF7FEFF 		bl	USB_PutUsbMidiIn
 8035              	.L321:
1798:main.c        ****     {
 8036              		.loc 1 1798 0 discriminator 2
 8037 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8038 003e 0133     		adds	r3, r3, #1
 8039 0040 FB71     		strb	r3, [r7, #7]
 8040              	.L320:
1798:main.c        ****     {
 8041              		.loc 1 1798 0 is_stmt 0 discriminator 1
 8042 0042 97F90730 		ldrsb	r3, [r7, #7]
 8043 0046 002B     		cmp	r3, #0
 8044 0048 E0DA     		bge	.L322
 8045              	.LBE51:
1806:main.c        ****         }
1807:main.c        ****     }
1808:main.c        **** }
 8046              		.loc 1 1808 0 is_stmt 1
 8047 004a 00BF     		nop
 8048 004c 0837     		adds	r7, r7, #8
 8049              		.cfi_def_cfa_offset 8
 8050 004e BD46     		mov	sp, r7
 8051              		.cfi_def_cfa_register 13
 8052              		@ sp needed
 8053 0050 80BD     		pop	{r7, pc}
 8054              	.L324:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 176


 8055 0052 00BF     		.align	2
 8056              	.L323:
 8057 0054 00000000 		.word	midiMsg
 8058 0058 00000000 		.word	USB_active
 8059              		.cfi_endproc
 8060              	.LFE90:
 8061              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 8062              		.global	checkStatus
 8063              		.bss
 8064              		.type	checkStatus, %object
 8065              		.size	checkStatus, 1
 8066              	checkStatus:
 8067 0114 00       		.space	1
 8068              		.global	checkBase
 8069 0115 00       		.align	1
 8070              		.type	checkBase, %object
 8071              		.size	checkBase, 2
 8072              	checkBase:
 8073 0116 0000     		.space	2
 8074              		.comm	tempMIDI,4,4
 8075              		.global	firstSysex
 8076              		.type	firstSysex, %object
 8077              		.size	firstSysex, 1
 8078              	firstSysex:
 8079 0118 00       		.space	1
 8080              		.global	sysexPointerMask
 8081              		.section	.rodata
 8082              		.align	2
 8083              		.type	sysexPointerMask, %object
 8084              		.size	sysexPointerMask, 4
 8085              	sysexPointerMask:
 8086 0428 FF070000 		.word	2047
 8087              		.global	moreToDo
 8088              		.bss
 8089 0119 000000   		.align	2
 8090              		.type	moreToDo, %object
 8091              		.size	moreToDo, 4
 8092              	moreToDo:
 8093 011c 00000000 		.space	4
 8094              		.global	SPI_errors
 8095              		.align	2
 8096              		.type	SPI_errors, %object
 8097              		.size	SPI_errors, 4
 8098              	SPI_errors:
 8099 0120 00000000 		.space	4
 8100              		.comm	nearbyValues,64,4
 8101              		.section	.text.parseSysex,"ax",%progbits
 8102              		.align	2
 8103              		.global	parseSysex
 8104              		.thumb
 8105              		.thumb_func
 8106              		.type	parseSysex, %function
 8107              	parseSysex:
 8108              	.LFB91:
1809:main.c        **** 
1810:main.c        **** 
1811:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 177


1812:main.c        **** 
1813:main.c        **** volatile uint8_t checkStatus = 0;
1814:main.c        **** volatile uint16_t checkBase = 0;
1815:main.c        **** volatile uint8_t tempMIDI[4];
1816:main.c        **** volatile uint8_t firstSysex = 0;
1817:main.c        **** const uint32_t sysexPointerMask = 2047;
1818:main.c        **** volatile uint32_t moreToDo = 0;
1819:main.c        **** 
1820:main.c        **** int SPI_errors = 0;
1821:main.c        **** 
1822:main.c        **** volatile uint32_t nearbyValues[16];
1823:main.c        **** 
1824:main.c        **** void parseSysex(void)
1825:main.c        **** {
 8109              		.loc 1 1825 0
 8110              		.cfi_startproc
 8111              		@ args = 0, pretend = 0, frame = 96
 8112              		@ frame_needed = 1, uses_anonymous_args = 0
 8113 0000 90B5     		push	{r4, r7, lr}
 8114              		.cfi_def_cfa_offset 12
 8115              		.cfi_offset 4, -12
 8116              		.cfi_offset 7, -8
 8117              		.cfi_offset 14, -4
 8118 0002 99B0     		sub	sp, sp, #100
 8119              		.cfi_def_cfa_offset 112
 8120 0004 00AF     		add	r7, sp, #0
 8121              		.cfi_def_cfa_register 7
1826:main.c        ****     parsingSysex = 1;
 8122              		.loc 1 1826 0
 8123 0006 A54B     		ldr	r3, .L387
 8124 0008 0122     		movs	r2, #1
 8125 000a 1A70     		strb	r2, [r3]
1827:main.c        ****     
1828:main.c        ****     uint32_t messageStart = sysexMessageStartPoints[sysexMessageStartPointsReadPosition];
 8126              		.loc 1 1828 0
 8127 000c A44B     		ldr	r3, .L387+4
 8128 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8129 0010 1A46     		mov	r2, r3
 8130 0012 A44B     		ldr	r3, .L387+8
 8131 0014 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8132 0018 BB63     		str	r3, [r7, #56]
1829:main.c        ****     uint32_t messageEnd = sysexMessageStartPoints[(sysexMessageStartPointsReadPosition + 1)];
 8133              		.loc 1 1829 0
 8134 001a A14B     		ldr	r3, .L387+4
 8135 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8136 001e 0133     		adds	r3, r3, #1
 8137 0020 A04A     		ldr	r2, .L387+8
 8138 0022 52F82330 		ldr	r3, [r2, r3, lsl #2]
 8139 0026 7B63     		str	r3, [r7, #52]
1830:main.c        ****     sysexMessageStartPointsReadPosition++; //get ready for next one
 8140              		.loc 1 1830 0
 8141 0028 9D4B     		ldr	r3, .L387+4
 8142 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8143 002c 0133     		adds	r3, r3, #1
 8144 002e DAB2     		uxtb	r2, r3
 8145 0030 9B4B     		ldr	r3, .L387+4
 8146 0032 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 178


1831:main.c        ****     sysexReadPointer = messageStart;
 8147              		.loc 1 1831 0
 8148 0034 9C4A     		ldr	r2, .L387+12
 8149 0036 BB6B     		ldr	r3, [r7, #56]
 8150 0038 1360     		str	r3, [r2]
 8151              	.LBB52:
1832:main.c        ****     for (int i = 0; i < 16; i++)
 8152              		.loc 1 1832 0
 8153 003a 0023     		movs	r3, #0
 8154 003c FB65     		str	r3, [r7, #92]
 8155 003e 11E0     		b	.L326
 8156              	.L327:
1833:main.c        ****     {
1834:main.c        ****         nearbyValues[i]= sysexBuffer[(sysexReadPointer-8+i) &sysexPointerMask];
 8157              		.loc 1 1834 0 discriminator 3
 8158 0040 994B     		ldr	r3, .L387+12
 8159 0042 1A68     		ldr	r2, [r3]
 8160 0044 FB6D     		ldr	r3, [r7, #92]
 8161 0046 1344     		add	r3, r3, r2
 8162 0048 083B     		subs	r3, r3, #8
 8163 004a 40F2FF72 		movw	r2, #2047
 8164 004e 1340     		ands	r3, r3, r2
 8165 0050 964A     		ldr	r2, .L387+16
 8166 0052 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8167 0054 1946     		mov	r1, r3
 8168 0056 964A     		ldr	r2, .L387+20
 8169 0058 FB6D     		ldr	r3, [r7, #92]
 8170 005a 42F82310 		str	r1, [r2, r3, lsl #2]
1832:main.c        ****     for (int i = 0; i < 16; i++)
 8171              		.loc 1 1832 0 discriminator 3
 8172 005e FB6D     		ldr	r3, [r7, #92]
 8173 0060 0133     		adds	r3, r3, #1
 8174 0062 FB65     		str	r3, [r7, #92]
 8175              	.L326:
1832:main.c        ****     for (int i = 0; i < 16; i++)
 8176              		.loc 1 1832 0 is_stmt 0 discriminator 1
 8177 0064 FB6D     		ldr	r3, [r7, #92]
 8178 0066 0F2B     		cmp	r3, #15
 8179 0068 EADD     		ble	.L327
 8180              	.LBE52:
1835:main.c        ****     }
1836:main.c        ****     //0 = it's a preset
1837:main.c        ****     if (sysexBuffer[sysexReadPointer & sysexPointerMask] == 0)
 8181              		.loc 1 1837 0 is_stmt 1
 8182 006a 8F4B     		ldr	r3, .L387+12
 8183 006c 1B68     		ldr	r3, [r3]
 8184 006e 40F2FF72 		movw	r2, #2047
 8185 0072 1340     		ands	r3, r3, r2
 8186 0074 8D4A     		ldr	r2, .L387+16
 8187 0076 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8188 0078 002B     		cmp	r3, #0
 8189 007a 40F07583 		bne	.L328
 8190              	.LBB53:
1838:main.c        ****     {
1839:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8191              		.loc 1 1839 0
 8192 007e 8D4B     		ldr	r3, .L387+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 179


 8193 0080 0122     		movs	r2, #1
 8194 0082 1A70     		strb	r2, [r3]
1840:main.c        ****         currentFloat = 0;
 8195              		.loc 1 1840 0
 8196 0084 8C4B     		ldr	r3, .L387+28
 8197 0086 0022     		movs	r2, #0
 8198 0088 1A60     		str	r2, [r3]
1841:main.c        ****         presetArraySection = presetName;
 8199              		.loc 1 1841 0
 8200 008a 8C4B     		ldr	r3, .L387+32
 8201 008c 0022     		movs	r2, #0
 8202 008e 1A70     		strb	r2, [r3]
1842:main.c        ****         presetNumberToWrite = sysexBuffer[(sysexReadPointer+1) & sysexPointerMask];
 8203              		.loc 1 1842 0
 8204 0090 854B     		ldr	r3, .L387+12
 8205 0092 1B68     		ldr	r3, [r3]
 8206 0094 0133     		adds	r3, r3, #1
 8207 0096 40F2FF72 		movw	r2, #2047
 8208 009a 1340     		ands	r3, r3, r2
 8209 009c 834A     		ldr	r2, .L387+16
 8210 009e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8211 00a0 874B     		ldr	r3, .L387+36
 8212 00a2 1A70     		strb	r2, [r3]
1843:main.c        ****         presetArray[0] = sysexBuffer[(sysexReadPointer+2) & sysexPointerMask];
 8213              		.loc 1 1843 0
 8214 00a4 804B     		ldr	r3, .L387+12
 8215 00a6 1B68     		ldr	r3, [r3]
 8216 00a8 0233     		adds	r3, r3, #2
 8217 00aa 40F2FF72 		movw	r2, #2047
 8218 00ae 1340     		ands	r3, r3, r2
 8219 00b0 7E4A     		ldr	r2, .L387+16
 8220 00b2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8221 00b4 834B     		ldr	r3, .L387+40
 8222 00b6 1A70     		strb	r2, [r3]
1844:main.c        ****         presetArray[1] = sysexBuffer[(sysexReadPointer+3) & sysexPointerMask];
 8223              		.loc 1 1844 0
 8224 00b8 7B4B     		ldr	r3, .L387+12
 8225 00ba 1B68     		ldr	r3, [r3]
 8226 00bc 0333     		adds	r3, r3, #3
 8227 00be 40F2FF72 		movw	r2, #2047
 8228 00c2 1340     		ands	r3, r3, r2
 8229 00c4 794A     		ldr	r2, .L387+16
 8230 00c6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8231 00c8 7E4B     		ldr	r3, .L387+40
 8232 00ca 5A70     		strb	r2, [r3, #1]
1845:main.c        ****         presetArray[2] = sysexBuffer[(sysexReadPointer+4) & sysexPointerMask];
 8233              		.loc 1 1845 0
 8234 00cc 764B     		ldr	r3, .L387+12
 8235 00ce 1B68     		ldr	r3, [r3]
 8236 00d0 0433     		adds	r3, r3, #4
 8237 00d2 40F2FF72 		movw	r2, #2047
 8238 00d6 1340     		ands	r3, r3, r2
 8239 00d8 744A     		ldr	r2, .L387+16
 8240 00da D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8241 00dc 794B     		ldr	r3, .L387+40
 8242 00de 9A70     		strb	r2, [r3, #2]
1846:main.c        ****         presetArray[3] = sysexBuffer[(sysexReadPointer+5) & sysexPointerMask];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 180


 8243              		.loc 1 1846 0
 8244 00e0 714B     		ldr	r3, .L387+12
 8245 00e2 1B68     		ldr	r3, [r3]
 8246 00e4 0533     		adds	r3, r3, #5
 8247 00e6 40F2FF72 		movw	r2, #2047
 8248 00ea 1340     		ands	r3, r3, r2
 8249 00ec 6F4A     		ldr	r2, .L387+16
 8250 00ee D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8251 00f0 744B     		ldr	r3, .L387+40
 8252 00f2 DA70     		strb	r2, [r3, #3]
1847:main.c        ****         
1848:main.c        ****         union breakFloat theVal;
1849:main.c        ****         uint32_t i = 6;
 8253              		.loc 1 1849 0
 8254 00f4 0623     		movs	r3, #6
 8255 00f6 BB65     		str	r3, [r7, #88]
1850:main.c        ****         sysexReadPointer = i + sysexReadPointer;
 8256              		.loc 1 1850 0
 8257 00f8 6B4B     		ldr	r3, .L387+12
 8258 00fa 1A68     		ldr	r2, [r3]
 8259 00fc BB6D     		ldr	r3, [r7, #88]
 8260 00fe 1344     		add	r3, r3, r2
 8261 0100 694A     		ldr	r2, .L387+12
 8262 0102 1360     		str	r3, [r2]
1851:main.c        ****         uint8_t stoppingPoint = PRESET_NAME_LENGTH_IN_BYTES+i;
 8263              		.loc 1 1851 0
 8264 0104 BB6D     		ldr	r3, [r7, #88]
 8265 0106 DBB2     		uxtb	r3, r3
 8266 0108 0E33     		adds	r3, r3, #14
 8267 010a 87F83330 		strb	r3, [r7, #51]
1852:main.c        ****         for (; i < stoppingPoint; i++)
 8268              		.loc 1 1852 0
 8269 010e 2DE0     		b	.L329
 8270              	.L330:
1853:main.c        ****         {
1854:main.c        ****             presetArray[i-2] = sysexBuffer[sysexReadPointer & sysexPointerMask] & 127; // pass on t
 8271              		.loc 1 1854 0 discriminator 2
 8272 0110 BB6D     		ldr	r3, [r7, #88]
 8273 0112 023B     		subs	r3, r3, #2
 8274 0114 644A     		ldr	r2, .L387+12
 8275 0116 1268     		ldr	r2, [r2]
 8276 0118 40F2FF71 		movw	r1, #2047
 8277 011c 0A40     		ands	r2, r2, r1
 8278 011e 6349     		ldr	r1, .L387+16
 8279 0120 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8280 0122 02F07F02 		and	r2, r2, #127
 8281 0126 D1B2     		uxtb	r1, r2
 8282 0128 664A     		ldr	r2, .L387+40
 8283 012a D154     		strb	r1, [r2, r3]
1855:main.c        ****             presetNamesArray[presetNumberToWrite][i-6] = sysexBuffer[sysexReadPointer & sysexPointe
 8284              		.loc 1 1855 0 discriminator 2
 8285 012c 644B     		ldr	r3, .L387+36
 8286 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8287 0130 1846     		mov	r0, r3
 8288 0132 BB6D     		ldr	r3, [r7, #88]
 8289 0134 9A1F     		subs	r2, r3, #6
 8290 0136 5C4B     		ldr	r3, .L387+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 181


 8291 0138 1B68     		ldr	r3, [r3]
 8292 013a 40F2FF71 		movw	r1, #2047
 8293 013e 0B40     		ands	r3, r3, r1
 8294 0140 5A49     		ldr	r1, .L387+16
 8295 0142 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8296 0144 03F07F03 		and	r3, r3, #127
 8297 0148 DCB2     		uxtb	r4, r3
 8298 014a 5F49     		ldr	r1, .L387+44
 8299 014c 0346     		mov	r3, r0
 8300 014e DB00     		lsls	r3, r3, #3
 8301 0150 1B1A     		subs	r3, r3, r0
 8302 0152 5B00     		lsls	r3, r3, #1
 8303 0154 0B44     		add	r3, r3, r1
 8304 0156 1344     		add	r3, r3, r2
 8305 0158 2246     		mov	r2, r4
 8306 015a 1A70     		strb	r2, [r3]
1856:main.c        ****             sysexReadPointer++;
 8307              		.loc 1 1856 0 discriminator 2
 8308 015c 524B     		ldr	r3, .L387+12
 8309 015e 1B68     		ldr	r3, [r3]
 8310 0160 0133     		adds	r3, r3, #1
 8311 0162 514A     		ldr	r2, .L387+12
 8312 0164 1360     		str	r3, [r2]
1852:main.c        ****         {
 8313              		.loc 1 1852 0 discriminator 2
 8314 0166 BB6D     		ldr	r3, [r7, #88]
 8315 0168 0133     		adds	r3, r3, #1
 8316 016a BB65     		str	r3, [r7, #88]
 8317              	.L329:
1852:main.c        ****         {
 8318              		.loc 1 1852 0 is_stmt 0 discriminator 1
 8319 016c 97F83320 		ldrb	r2, [r7, #51]	@ zero_extendqisi2
 8320 0170 BB6D     		ldr	r3, [r7, #88]
 8321 0172 9A42     		cmp	r2, r3
 8322 0174 CCD8     		bhi	.L330
1857:main.c        ****         }
1858:main.c        ****         
1859:main.c        ****         presetArraySection = macroNames;
 8323              		.loc 1 1859 0 is_stmt 1
 8324 0176 514B     		ldr	r3, .L387+32
 8325 0178 0122     		movs	r2, #1
 8326 017a 1A70     		strb	r2, [r3]
 8327              	.LBB54:
1860:main.c        **** 
1861:main.c        ****         
1862:main.c        ****         for (int j = 0; j < (NUM_MACROS); j++)
 8328              		.loc 1 1862 0
 8329 017c 0023     		movs	r3, #0
 8330 017e 7B65     		str	r3, [r7, #84]
 8331 0180 3DE0     		b	.L331
 8332              	.L334:
 8333              	.LBB55:
1863:main.c        ****         {
1864:main.c        ****             for (int k = 0; k < MACRO_NAME_LENGTH_IN_BYTES; k++)
 8334              		.loc 1 1864 0
 8335 0182 0023     		movs	r3, #0
 8336 0184 3B65     		str	r3, [r7, #80]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 182


 8337 0186 34E0     		b	.L332
 8338              	.L333:
1865:main.c        ****             {
1866:main.c        ****                 presetArray[i-2] = sysexBuffer[sysexReadPointer & sysexPointerMask] & 127; // pass 
 8339              		.loc 1 1866 0 discriminator 3
 8340 0188 BB6D     		ldr	r3, [r7, #88]
 8341 018a 023B     		subs	r3, r3, #2
 8342 018c 464A     		ldr	r2, .L387+12
 8343 018e 1268     		ldr	r2, [r2]
 8344 0190 40F2FF71 		movw	r1, #2047
 8345 0194 0A40     		ands	r2, r2, r1
 8346 0196 4549     		ldr	r1, .L387+16
 8347 0198 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8348 019a 02F07F02 		and	r2, r2, #127
 8349 019e D1B2     		uxtb	r1, r2
 8350 01a0 484A     		ldr	r2, .L387+40
 8351 01a2 D154     		strb	r1, [r2, r3]
1867:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[sysexReadPointer & sysexPo
 8352              		.loc 1 1867 0 discriminator 3
 8353 01a4 464B     		ldr	r3, .L387+36
 8354 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8355 01a8 1846     		mov	r0, r3
 8356 01aa 3F4B     		ldr	r3, .L387+12
 8357 01ac 1B68     		ldr	r3, [r3]
 8358 01ae 40F2FF72 		movw	r2, #2047
 8359 01b2 1340     		ands	r3, r3, r2
 8360 01b4 3D4A     		ldr	r2, .L387+16
 8361 01b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8362 01b8 03F07F03 		and	r3, r3, #127
 8363 01bc DCB2     		uxtb	r4, r3
 8364 01be 4349     		ldr	r1, .L387+48
 8365 01c0 7B6D     		ldr	r3, [r7, #84]
 8366 01c2 1A46     		mov	r2, r3
 8367 01c4 D200     		lsls	r2, r2, #3
 8368 01c6 1A44     		add	r2, r2, r3
 8369 01c8 0346     		mov	r3, r0
 8370 01ca DB00     		lsls	r3, r3, #3
 8371 01cc 0344     		add	r3, r3, r0
 8372 01ce 1B01     		lsls	r3, r3, #4
 8373 01d0 1344     		add	r3, r3, r2
 8374 01d2 CA18     		adds	r2, r1, r3
 8375 01d4 3B6D     		ldr	r3, [r7, #80]
 8376 01d6 1344     		add	r3, r3, r2
 8377 01d8 2246     		mov	r2, r4
 8378 01da 1A70     		strb	r2, [r3]
1868:main.c        ****                 i++;
 8379              		.loc 1 1868 0 discriminator 3
 8380 01dc BB6D     		ldr	r3, [r7, #88]
 8381 01de 0133     		adds	r3, r3, #1
 8382 01e0 BB65     		str	r3, [r7, #88]
1869:main.c        ****                 sysexReadPointer++;
 8383              		.loc 1 1869 0 discriminator 3
 8384 01e2 314B     		ldr	r3, .L387+12
 8385 01e4 1B68     		ldr	r3, [r3]
 8386 01e6 0133     		adds	r3, r3, #1
 8387 01e8 2F4A     		ldr	r2, .L387+12
 8388 01ea 1360     		str	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 183


1864:main.c        ****             {
 8389              		.loc 1 1864 0 discriminator 3
 8390 01ec 3B6D     		ldr	r3, [r7, #80]
 8391 01ee 0133     		adds	r3, r3, #1
 8392 01f0 3B65     		str	r3, [r7, #80]
 8393              	.L332:
1864:main.c        ****             {
 8394              		.loc 1 1864 0 is_stmt 0 discriminator 1
 8395 01f2 3B6D     		ldr	r3, [r7, #80]
 8396 01f4 082B     		cmp	r3, #8
 8397 01f6 C7DD     		ble	.L333
 8398              	.LBE55:
1862:main.c        ****         {
 8399              		.loc 1 1862 0 is_stmt 1 discriminator 2
 8400 01f8 7B6D     		ldr	r3, [r7, #84]
 8401 01fa 0133     		adds	r3, r3, #1
 8402 01fc 7B65     		str	r3, [r7, #84]
 8403              	.L331:
1862:main.c        ****         {
 8404              		.loc 1 1862 0 is_stmt 0 discriminator 1
 8405 01fe 7B6D     		ldr	r3, [r7, #84]
 8406 0200 072B     		cmp	r3, #7
 8407 0202 BEDD     		ble	.L334
 8408              	.LBE54:
 8409              	.LBB56:
1870:main.c        ****             }
1871:main.c        ****         }
1872:main.c        ****         for (int j = 0; j < NUM_CONTROLS; j++)
 8410              		.loc 1 1872 0 is_stmt 1
 8411 0204 0023     		movs	r3, #0
 8412 0206 FB64     		str	r3, [r7, #76]
 8413 0208 3FE0     		b	.L335
 8414              	.L338:
 8415              	.LBB57:
1873:main.c        ****         {
1874:main.c        ****             for (int k = 0; k < CONTROL_NAME_LENGTH_IN_BYTES; k++)
 8416              		.loc 1 1874 0
 8417 020a 0023     		movs	r3, #0
 8418 020c BB64     		str	r3, [r7, #72]
 8419 020e 36E0     		b	.L336
 8420              	.L337:
1875:main.c        ****             {
1876:main.c        ****                 presetArray[i-2] = sysexBuffer[sysexReadPointer & sysexPointerMask] & 127; // pass 
 8421              		.loc 1 1876 0 discriminator 3
 8422 0210 BB6D     		ldr	r3, [r7, #88]
 8423 0212 023B     		subs	r3, r3, #2
 8424 0214 244A     		ldr	r2, .L387+12
 8425 0216 1268     		ldr	r2, [r2]
 8426 0218 40F2FF71 		movw	r1, #2047
 8427 021c 0A40     		ands	r2, r2, r1
 8428 021e 2349     		ldr	r1, .L387+16
 8429 0220 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8430 0222 02F07F02 		and	r2, r2, #127
 8431 0226 D1B2     		uxtb	r1, r2
 8432 0228 264A     		ldr	r2, .L387+40
 8433 022a D154     		strb	r1, [r2, r3]
1877:main.c        ****                 controlNamesArray[presetNumberToWrite][j][k] = sysexBuffer[sysexReadPointer & sysex
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 184


 8434              		.loc 1 1877 0 discriminator 3
 8435 022c 244B     		ldr	r3, .L387+36
 8436 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8437 0230 1846     		mov	r0, r3
 8438 0232 1D4B     		ldr	r3, .L387+12
 8439 0234 1B68     		ldr	r3, [r3]
 8440 0236 40F2FF72 		movw	r2, #2047
 8441 023a 1340     		ands	r3, r3, r2
 8442 023c 1B4A     		ldr	r2, .L387+16
 8443 023e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8444 0240 03F07F03 		and	r3, r3, #127
 8445 0244 DCB2     		uxtb	r4, r3
 8446 0246 2249     		ldr	r1, .L387+52
 8447 0248 FB6C     		ldr	r3, [r7, #76]
 8448 024a 1A46     		mov	r2, r3
 8449 024c 9200     		lsls	r2, r2, #2
 8450 024e 1A44     		add	r2, r2, r3
 8451 0250 5300     		lsls	r3, r2, #1
 8452 0252 1A46     		mov	r2, r3
 8453 0254 0346     		mov	r3, r0
 8454 0256 9B00     		lsls	r3, r3, #2
 8455 0258 0344     		add	r3, r3, r0
 8456 025a DB00     		lsls	r3, r3, #3
 8457 025c 1344     		add	r3, r3, r2
 8458 025e CA18     		adds	r2, r1, r3
 8459 0260 BB6C     		ldr	r3, [r7, #72]
 8460 0262 1344     		add	r3, r3, r2
 8461 0264 2246     		mov	r2, r4
 8462 0266 1A70     		strb	r2, [r3]
1878:main.c        ****                  i++;
 8463              		.loc 1 1878 0 discriminator 3
 8464 0268 BB6D     		ldr	r3, [r7, #88]
 8465 026a 0133     		adds	r3, r3, #1
 8466 026c BB65     		str	r3, [r7, #88]
1879:main.c        ****                 sysexReadPointer++;
 8467              		.loc 1 1879 0 discriminator 3
 8468 026e 0E4B     		ldr	r3, .L387+12
 8469 0270 1B68     		ldr	r3, [r3]
 8470 0272 0133     		adds	r3, r3, #1
 8471 0274 0C4A     		ldr	r2, .L387+12
 8472 0276 1360     		str	r3, [r2]
1874:main.c        ****             {
 8473              		.loc 1 1874 0 discriminator 3
 8474 0278 BB6C     		ldr	r3, [r7, #72]
 8475 027a 0133     		adds	r3, r3, #1
 8476 027c BB64     		str	r3, [r7, #72]
 8477              	.L336:
1874:main.c        ****             {
 8478              		.loc 1 1874 0 is_stmt 0 discriminator 1
 8479 027e BB6C     		ldr	r3, [r7, #72]
 8480 0280 092B     		cmp	r3, #9
 8481 0282 C5DD     		ble	.L337
 8482              	.LBE57:
1872:main.c        ****         {
 8483              		.loc 1 1872 0 is_stmt 1 discriminator 2
 8484 0284 FB6C     		ldr	r3, [r7, #76]
 8485 0286 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 185


 8486 0288 FB64     		str	r3, [r7, #76]
 8487              	.L335:
1872:main.c        ****         {
 8488              		.loc 1 1872 0 is_stmt 0 discriminator 1
 8489 028a FB6C     		ldr	r3, [r7, #76]
 8490 028c 032B     		cmp	r3, #3
 8491 028e BCDD     		ble	.L338
 8492              	.LBE56:
1880:main.c        ****             }
1881:main.c        ****         }
1882:main.c        ****         
1883:main.c        ****         uint16_t valsStart = 4 + PRESET_NAME_LENGTH_IN_BYTES + (MACRO_NAME_LENGTH_IN_BYTES * NUM_MA
 8493              		.loc 1 1883 0 is_stmt 1
 8494 0290 8223     		movs	r3, #130
 8495 0292 3B86     		strh	r3, [r7, #48]	@ movhi
1884:main.c        ****         
1885:main.c        ****         presetArraySection = initialVals;
 8496              		.loc 1 1885 0
 8497 0294 094B     		ldr	r3, .L387+32
 8498 0296 0222     		movs	r2, #2
 8499 0298 1A70     		strb	r2, [r3]
1886:main.c        ****         
1887:main.c        ****         for (; sysexReadPointer < (messageEnd); sysexReadPointer = (sysexReadPointer+5))
 8500              		.loc 1 1887 0
 8501 029a 5EE2     		b	.L339
 8502              	.L388:
 8503              		.align	2
 8504              	.L387:
 8505 029c 00000000 		.word	parsingSysex
 8506 02a0 00000000 		.word	sysexMessageStartPointsReadPosition
 8507 02a4 00000000 		.word	sysexMessageStartPoints
 8508 02a8 00000000 		.word	sysexReadPointer
 8509 02ac 00000000 		.word	sysexBuffer
 8510 02b0 00000000 		.word	nearbyValues
 8511 02b4 00000000 		.word	sysexMessageInProgress
 8512 02b8 00000000 		.word	currentFloat
 8513 02bc 00000000 		.word	presetArraySection
 8514 02c0 00000000 		.word	presetNumberToWrite
 8515 02c4 00000000 		.word	presetArray
 8516 02c8 00000000 		.word	presetNamesArray
 8517 02cc 00000000 		.word	macroNamesArray
 8518 02d0 00000000 		.word	controlNamesArray
 8519              	.L361:
1888:main.c        ****         {
1889:main.c        ****             theVal.u32 = 0;
 8520              		.loc 1 1889 0
 8521 02d4 0023     		movs	r3, #0
 8522 02d6 FB60     		str	r3, [r7, #12]
1890:main.c        ****             theVal.u32 |= ((sysexBuffer[sysexReadPointer & sysexPointerMask ] &15) << 28);
 8523              		.loc 1 1890 0
 8524 02d8 FB68     		ldr	r3, [r7, #12]
 8525 02da 9A4A     		ldr	r2, .L389
 8526 02dc 1268     		ldr	r2, [r2]
 8527 02de 40F2FF71 		movw	r1, #2047
 8528 02e2 0A40     		ands	r2, r2, r1
 8529 02e4 9849     		ldr	r1, .L389+4
 8530 02e6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 186


 8531 02e8 1207     		lsls	r2, r2, #28
 8532 02ea 1343     		orrs	r3, r3, r2
 8533 02ec FB60     		str	r3, [r7, #12]
1891:main.c        ****             theVal.u32 |= (sysexBuffer[(sysexReadPointer+1) & sysexPointerMask] << 21);
 8534              		.loc 1 1891 0
 8535 02ee FB68     		ldr	r3, [r7, #12]
 8536 02f0 944A     		ldr	r2, .L389
 8537 02f2 1268     		ldr	r2, [r2]
 8538 02f4 0132     		adds	r2, r2, #1
 8539 02f6 40F2FF71 		movw	r1, #2047
 8540 02fa 0A40     		ands	r2, r2, r1
 8541 02fc 9249     		ldr	r1, .L389+4
 8542 02fe 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8543 0300 5205     		lsls	r2, r2, #21
 8544 0302 1343     		orrs	r3, r3, r2
 8545 0304 FB60     		str	r3, [r7, #12]
1892:main.c        ****             theVal.u32 |= (sysexBuffer[(sysexReadPointer+2) & sysexPointerMask] << 14);
 8546              		.loc 1 1892 0
 8547 0306 FB68     		ldr	r3, [r7, #12]
 8548 0308 8E4A     		ldr	r2, .L389
 8549 030a 1268     		ldr	r2, [r2]
 8550 030c 0232     		adds	r2, r2, #2
 8551 030e 40F2FF71 		movw	r1, #2047
 8552 0312 0A40     		ands	r2, r2, r1
 8553 0314 8C49     		ldr	r1, .L389+4
 8554 0316 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8555 0318 9203     		lsls	r2, r2, #14
 8556 031a 1343     		orrs	r3, r3, r2
 8557 031c FB60     		str	r3, [r7, #12]
1893:main.c        ****             theVal.u32 |= (sysexBuffer[(sysexReadPointer+3) & sysexPointerMask] << 7);
 8558              		.loc 1 1893 0
 8559 031e FB68     		ldr	r3, [r7, #12]
 8560 0320 884A     		ldr	r2, .L389
 8561 0322 1268     		ldr	r2, [r2]
 8562 0324 0332     		adds	r2, r2, #3
 8563 0326 40F2FF71 		movw	r1, #2047
 8564 032a 0A40     		ands	r2, r2, r1
 8565 032c 8649     		ldr	r1, .L389+4
 8566 032e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8567 0330 D201     		lsls	r2, r2, #7
 8568 0332 1343     		orrs	r3, r3, r2
 8569 0334 FB60     		str	r3, [r7, #12]
1894:main.c        ****             theVal.u32 |= (sysexBuffer[(sysexReadPointer+4) & sysexPointerMask] & 127);
 8570              		.loc 1 1894 0
 8571 0336 FA68     		ldr	r2, [r7, #12]
 8572 0338 824B     		ldr	r3, .L389
 8573 033a 1B68     		ldr	r3, [r3]
 8574 033c 0433     		adds	r3, r3, #4
 8575 033e 40F2FF71 		movw	r1, #2047
 8576 0342 0B40     		ands	r3, r3, r1
 8577 0344 8049     		ldr	r1, .L389+4
 8578 0346 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8579 0348 03F07F03 		and	r3, r3, #127
 8580 034c 1343     		orrs	r3, r3, r2
 8581 034e FB60     		str	r3, [r7, #12]
1895:main.c        ****             testVal = theVal.f;
 8582              		.loc 1 1895 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 187


 8583 0350 FB68     		ldr	r3, [r7, #12]	@ float
 8584 0352 7E4A     		ldr	r2, .L389+8
 8585 0354 1360     		str	r3, [r2]	@ float
1896:main.c        ****             if (presetArraySection == initialVals)
 8586              		.loc 1 1896 0
 8587 0356 7E4B     		ldr	r3, .L389+12
 8588 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8589 035a 022B     		cmp	r3, #2
 8590 035c 40F09D80 		bne	.L340
1897:main.c        ****             {
1898:main.c        **** 
1899:main.c        ****                 if (currentFloat == 0)
 8591              		.loc 1 1899 0
 8592 0360 7C4B     		ldr	r3, .L389+16
 8593 0362 1B68     		ldr	r3, [r3]
 8594 0364 002B     		cmp	r3, #0
 8595 0366 22D1     		bne	.L341
1900:main.c        ****                 {
1901:main.c        ****                     valsCount = (uint16_t) theVal.f;
 8596              		.loc 1 1901 0
 8597 0368 FB68     		ldr	r3, [r7, #12]	@ float
 8598 036a 1846     		mov	r0, r3
 8599 036c FFF7FEFF 		bl	__aeabi_f2uiz
 8600 0370 0346     		mov	r3, r0
 8601 0372 9AB2     		uxth	r2, r3
 8602 0374 784B     		ldr	r3, .L389+20
 8603 0376 1A80     		strh	r2, [r3]	@ movhi
1902:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 8604              		.loc 1 1902 0
 8605 0378 3A8E     		ldrh	r2, [r7, #48]
 8606 037a 764B     		ldr	r3, .L389+16
 8607 037c 1B68     		ldr	r3, [r3]
 8608 037e 591C     		adds	r1, r3, #1
 8609 0380 7448     		ldr	r0, .L389+16
 8610 0382 0160     		str	r1, [r0]
 8611 0384 1344     		add	r3, r3, r2
 8612 0386 744A     		ldr	r2, .L389+20
 8613 0388 1288     		ldrh	r2, [r2]
 8614 038a 120A     		lsrs	r2, r2, #8
 8615 038c 92B2     		uxth	r2, r2
 8616 038e D1B2     		uxtb	r1, r2
 8617 0390 724A     		ldr	r2, .L389+24
 8618 0392 D154     		strb	r1, [r2, r3]
1903:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 8619              		.loc 1 1903 0
 8620 0394 3A8E     		ldrh	r2, [r7, #48]
 8621 0396 6F4B     		ldr	r3, .L389+16
 8622 0398 1B68     		ldr	r3, [r3]
 8623 039a 591C     		adds	r1, r3, #1
 8624 039c 6D48     		ldr	r0, .L389+16
 8625 039e 0160     		str	r1, [r0]
 8626 03a0 1344     		add	r3, r3, r2
 8627 03a2 6D4A     		ldr	r2, .L389+20
 8628 03a4 1288     		ldrh	r2, [r2]
 8629 03a6 D1B2     		uxtb	r1, r2
 8630 03a8 6C4A     		ldr	r2, .L389+24
 8631 03aa D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 188


 8632 03ac D0E1     		b	.L347
 8633              	.L341:
1904:main.c        ****                 }
1905:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 8634              		.loc 1 1905 0
 8635 03ae 6A4B     		ldr	r3, .L389+20
 8636 03b0 1B88     		ldrh	r3, [r3]
 8637 03b2 0133     		adds	r3, r3, #1
 8638 03b4 5B00     		lsls	r3, r3, #1
 8639 03b6 1A46     		mov	r2, r3
 8640 03b8 664B     		ldr	r3, .L389+16
 8641 03ba 1B68     		ldr	r3, [r3]
 8642 03bc 9A42     		cmp	r2, r3
 8643 03be 23D9     		bls	.L343
 8644              	.LBB58:
1906:main.c        ****                 { 
1907:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 8645              		.loc 1 1907 0
 8646 03c0 FB68     		ldr	r3, [r7, #12]	@ float
 8647 03c2 6749     		ldr	r1, .L389+28
 8648 03c4 1846     		mov	r0, r3
 8649 03c6 FFF7FEFF 		bl	__aeabi_fmul
 8650 03ca 0346     		mov	r3, r0
 8651 03cc 1846     		mov	r0, r3
 8652 03ce FFF7FEFF 		bl	__aeabi_f2uiz
 8653 03d2 0346     		mov	r3, r0
 8654 03d4 FB85     		strh	r3, [r7, #46]	@ movhi
1908:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 8655              		.loc 1 1908 0
 8656 03d6 3A8E     		ldrh	r2, [r7, #48]
 8657 03d8 5E4B     		ldr	r3, .L389+16
 8658 03da 1B68     		ldr	r3, [r3]
 8659 03dc 591C     		adds	r1, r3, #1
 8660 03de 5D48     		ldr	r0, .L389+16
 8661 03e0 0160     		str	r1, [r0]
 8662 03e2 1344     		add	r3, r3, r2
 8663 03e4 FA8D     		ldrh	r2, [r7, #46]
 8664 03e6 120A     		lsrs	r2, r2, #8
 8665 03e8 92B2     		uxth	r2, r2
 8666 03ea D1B2     		uxtb	r1, r2
 8667 03ec 5B4A     		ldr	r2, .L389+24
 8668 03ee D154     		strb	r1, [r2, r3]
1909:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 8669              		.loc 1 1909 0
 8670 03f0 3A8E     		ldrh	r2, [r7, #48]
 8671 03f2 584B     		ldr	r3, .L389+16
 8672 03f4 1B68     		ldr	r3, [r3]
 8673 03f6 591C     		adds	r1, r3, #1
 8674 03f8 5648     		ldr	r0, .L389+16
 8675 03fa 0160     		str	r1, [r0]
 8676 03fc 1344     		add	r3, r3, r2
 8677 03fe FA8D     		ldrh	r2, [r7, #46]	@ movhi
 8678 0400 D1B2     		uxtb	r1, r2
 8679 0402 564A     		ldr	r2, .L389+24
 8680 0404 D154     		strb	r1, [r2, r3]
 8681              	.LBE58:
 8682 0406 A3E1     		b	.L347
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 189


 8683              	.L343:
1910:main.c        ****                 }
1911:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 8684              		.loc 1 1911 0
 8685 0408 534B     		ldr	r3, .L389+20
 8686 040a 1B88     		ldrh	r3, [r3]
 8687 040c 0133     		adds	r3, r3, #1
 8688 040e 5B00     		lsls	r3, r3, #1
 8689 0410 1A46     		mov	r2, r3
 8690 0412 504B     		ldr	r3, .L389+16
 8691 0414 1B68     		ldr	r3, [r3]
 8692 0416 9A42     		cmp	r2, r3
 8693 0418 40F09A81 		bne	.L347
1912:main.c        ****                 {
1913:main.c        ****                     valCheck = theVal.f;
 8694              		.loc 1 1913 0
 8695 041c FB68     		ldr	r3, [r7, #12]	@ float
 8696 041e 514A     		ldr	r2, .L389+32
 8697 0420 1360     		str	r3, [r2]	@ float
1914:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 8698              		.loc 1 1914 0
 8699 0422 504B     		ldr	r3, .L389+32
 8700 0424 1B68     		ldr	r3, [r3]	@ float
 8701 0426 5049     		ldr	r1, .L389+36
 8702 0428 1846     		mov	r0, r3
 8703 042a FFF7FEFF 		bl	__aeabi_fcmplt
 8704 042e 0346     		mov	r3, r0
 8705 0430 002B     		cmp	r3, #0
 8706 0432 23D0     		beq	.L344
 8707              		.loc 1 1914 0 is_stmt 0 discriminator 1
 8708 0434 4B4B     		ldr	r3, .L389+32
 8709 0436 1B68     		ldr	r3, [r3]	@ float
 8710 0438 4C49     		ldr	r1, .L389+40
 8711 043a 1846     		mov	r0, r3
 8712 043c FFF7FEFF 		bl	__aeabi_fcmpgt
 8713 0440 0346     		mov	r3, r0
 8714 0442 002B     		cmp	r3, #0
 8715 0444 1AD0     		beq	.L344
1915:main.c        ****                     {
1916:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 8716              		.loc 1 1916 0 is_stmt 1
 8717 0446 3A8E     		ldrh	r2, [r7, #48]
 8718 0448 424B     		ldr	r3, .L389+16
 8719 044a 1B68     		ldr	r3, [r3]
 8720 044c 591C     		adds	r1, r3, #1
 8721 044e 4148     		ldr	r0, .L389+16
 8722 0450 0160     		str	r1, [r0]
 8723 0452 1344     		add	r3, r3, r2
 8724 0454 414A     		ldr	r2, .L389+24
 8725 0456 EF21     		movs	r1, #239
 8726 0458 D154     		strb	r1, [r2, r3]
1917:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 8727              		.loc 1 1917 0
 8728 045a 3A8E     		ldrh	r2, [r7, #48]
 8729 045c 3D4B     		ldr	r3, .L389+16
 8730 045e 1B68     		ldr	r3, [r3]
 8731 0460 591C     		adds	r1, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 190


 8732 0462 3C48     		ldr	r0, .L389+16
 8733 0464 0160     		str	r1, [r0]
 8734 0466 1344     		add	r3, r3, r2
 8735 0468 3C4A     		ldr	r2, .L389+24
 8736 046a EF21     		movs	r1, #239
 8737 046c D154     		strb	r1, [r2, r3]
1918:main.c        ****                         presetArraySection = mapCountNext;
 8738              		.loc 1 1918 0
 8739 046e 384B     		ldr	r3, .L389+12
 8740 0470 0322     		movs	r2, #3
 8741 0472 1A70     		strb	r2, [r3]
1919:main.c        ****                         mapCount = 0;
 8742              		.loc 1 1919 0
 8743 0474 3E4B     		ldr	r3, .L389+44
 8744 0476 0022     		movs	r2, #0
 8745 0478 1A60     		str	r2, [r3]
 8746 047a 69E1     		b	.L347
 8747              	.L344:
1920:main.c        ****                     }
1921:main.c        ****                     else
1922:main.c        ****                     {
1923:main.c        ****                         //error state
1924:main.c        ****                         SPI_errors++;
 8748              		.loc 1 1924 0
 8749 047c 3D4B     		ldr	r3, .L389+48
 8750 047e 1B68     		ldr	r3, [r3]
 8751 0480 0133     		adds	r3, r3, #1
 8752 0482 3C4A     		ldr	r2, .L389+48
 8753 0484 1360     		str	r3, [r2]
1925:main.c        ****                         sysexMessageInProgress = 0;
 8754              		.loc 1 1925 0
 8755 0486 3C4B     		ldr	r3, .L389+52
 8756 0488 0022     		movs	r2, #0
 8757 048a 1A70     		strb	r2, [r3]
1926:main.c        ****                         //sysexPointer = 0;
1927:main.c        ****                         sendingMessage = 0;
 8758              		.loc 1 1927 0
 8759 048c 3B4B     		ldr	r3, .L389+56
 8760 048e 0022     		movs	r2, #0
 8761 0490 1A70     		strb	r2, [r3]
1928:main.c        ****                         parseThatMF = 0;
 8762              		.loc 1 1928 0
 8763 0492 3B4B     		ldr	r3, .L389+60
 8764 0494 0022     		movs	r2, #0
 8765 0496 1A70     		strb	r2, [r3]
 8766 0498 5AE1     		b	.L347
 8767              	.L340:
1929:main.c        ****                     }
1930:main.c        ****                 }
1931:main.c        ****             }
1932:main.c        ****             else if (presetArraySection == mapCountNext)
 8768              		.loc 1 1932 0
 8769 049a 2D4B     		ldr	r3, .L389+12
 8770 049c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8771 049e 032B     		cmp	r3, #3
 8772 04a0 28D1     		bne	.L348
1933:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 191


1934:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 8773              		.loc 1 1934 0
 8774 04a2 FB68     		ldr	r3, [r7, #12]	@ float
 8775 04a4 1846     		mov	r0, r3
 8776 04a6 FFF7FEFF 		bl	__aeabi_f2uiz
 8777 04aa 0346     		mov	r3, r0
 8778 04ac 9AB2     		uxth	r2, r3
 8779 04ae 354B     		ldr	r3, .L389+64
 8780 04b0 1A80     		strh	r2, [r3]	@ movhi
1935:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 8781              		.loc 1 1935 0
 8782 04b2 3A8E     		ldrh	r2, [r7, #48]
 8783 04b4 274B     		ldr	r3, .L389+16
 8784 04b6 1B68     		ldr	r3, [r3]
 8785 04b8 591C     		adds	r1, r3, #1
 8786 04ba 2648     		ldr	r0, .L389+16
 8787 04bc 0160     		str	r1, [r0]
 8788 04be 1344     		add	r3, r3, r2
 8789 04c0 304A     		ldr	r2, .L389+64
 8790 04c2 1288     		ldrh	r2, [r2]
 8791 04c4 120A     		lsrs	r2, r2, #8
 8792 04c6 92B2     		uxth	r2, r2
 8793 04c8 D1B2     		uxtb	r1, r2
 8794 04ca 244A     		ldr	r2, .L389+24
 8795 04cc D154     		strb	r1, [r2, r3]
1936:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 8796              		.loc 1 1936 0
 8797 04ce 3A8E     		ldrh	r2, [r7, #48]
 8798 04d0 204B     		ldr	r3, .L389+16
 8799 04d2 1B68     		ldr	r3, [r3]
 8800 04d4 591C     		adds	r1, r3, #1
 8801 04d6 1F48     		ldr	r0, .L389+16
 8802 04d8 0160     		str	r1, [r0]
 8803 04da 1344     		add	r3, r3, r2
 8804 04dc 294A     		ldr	r2, .L389+64
 8805 04de 1288     		ldrh	r2, [r2]
 8806 04e0 D1B2     		uxtb	r1, r2
 8807 04e2 1E4A     		ldr	r2, .L389+24
 8808 04e4 D154     		strb	r1, [r2, r3]
1937:main.c        ****                 presetArraySection = mapping;
 8809              		.loc 1 1937 0
 8810 04e6 1A4B     		ldr	r3, .L389+12
 8811 04e8 0422     		movs	r2, #4
 8812 04ea 1A70     		strb	r2, [r3]
1938:main.c        ****                 numMappings = 0;
 8813              		.loc 1 1938 0
 8814 04ec 264B     		ldr	r3, .L389+68
 8815 04ee 0022     		movs	r2, #0
 8816 04f0 1A80     		strh	r2, [r3]	@ movhi
 8817 04f2 2DE1     		b	.L347
 8818              	.L348:
1939:main.c        ****             }
1940:main.c        ****             else if (presetArraySection == mapping)
 8819              		.loc 1 1940 0
 8820 04f4 164B     		ldr	r3, .L389+12
 8821 04f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8822 04f8 042B     		cmp	r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 192


 8823 04fa 40F02981 		bne	.L347
1941:main.c        ****             {
1942:main.c        ****                 // this is the order
1943:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
1944:main.c        ****                 if (numMappings < mapCountExpectation)
 8824              		.loc 1 1944 0
 8825 04fe 224B     		ldr	r3, .L389+68
 8826 0500 1A88     		ldrh	r2, [r3]
 8827 0502 204B     		ldr	r3, .L389+64
 8828 0504 1B88     		ldrh	r3, [r3]
 8829 0506 9A42     		cmp	r2, r3
 8830 0508 80F0DA80 		bcs	.L349
1945:main.c        ****                 {
1946:main.c        ****                     if ((mapCount % 5) == 0)
 8831              		.loc 1 1946 0
 8832 050c 184B     		ldr	r3, .L389+44
 8833 050e 1968     		ldr	r1, [r3]
 8834 0510 1E4B     		ldr	r3, .L389+72
 8835 0512 A3FB0123 		umull	r2, r3, r3, r1
 8836 0516 9A08     		lsrs	r2, r3, #2
 8837 0518 1346     		mov	r3, r2
 8838 051a 9B00     		lsls	r3, r3, #2
 8839 051c 1344     		add	r3, r3, r2
 8840 051e CA1A     		subs	r2, r1, r3
 8841 0520 002A     		cmp	r2, #0
 8842 0522 35D1     		bne	.L350
1947:main.c        ****                     {
1948:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8843              		.loc 1 1948 0
 8844 0524 3A8E     		ldrh	r2, [r7, #48]
 8845 0526 0B4B     		ldr	r3, .L389+16
 8846 0528 1B68     		ldr	r3, [r3]
 8847 052a 591C     		adds	r1, r3, #1
 8848 052c 0948     		ldr	r0, .L389+16
 8849 052e 0160     		str	r1, [r0]
 8850 0530 D418     		adds	r4, r2, r3
 8851 0532 FB68     		ldr	r3, [r7, #12]	@ float
 8852 0534 1846     		mov	r0, r3
 8853 0536 FFF7FEFF 		bl	__aeabi_f2uiz
 8854 053a 0346     		mov	r3, r0
 8855 053c DAB2     		uxtb	r2, r3
 8856 053e 074B     		ldr	r3, .L389+24
 8857 0540 1A55     		strb	r2, [r3, r4]
 8858 0542 B7E0     		b	.L351
 8859              	.L390:
 8860              		.align	2
 8861              	.L389:
 8862 0544 00000000 		.word	sysexReadPointer
 8863 0548 00000000 		.word	sysexBuffer
 8864 054c 00000000 		.word	testVal
 8865 0550 00000000 		.word	presetArraySection
 8866 0554 00000000 		.word	currentFloat
 8867 0558 00000000 		.word	valsCount
 8868 055c 00000000 		.word	presetArray
 8869 0560 00FF7F47 		.word	1199570688
 8870 0564 00000000 		.word	valCheck
 8871 0568 0000C0BF 		.word	-1077936128
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 193


 8872 056c 000020C0 		.word	-1071644672
 8873 0570 00000000 		.word	mapCount
 8874 0574 00000000 		.word	SPI_errors
 8875 0578 00000000 		.word	sysexMessageInProgress
 8876 057c 00000000 		.word	sendingMessage
 8877 0580 00000000 		.word	parseThatMF
 8878 0584 00000000 		.word	mapCountExpectation
 8879 0588 00000000 		.word	numMappings
 8880 058c CDCCCCCC 		.word	-858993459
 8881              	.L350:
1949:main.c        ****                     }
1950:main.c        ****                     else if  (mapCount % 5 == 1)
 8882              		.loc 1 1950 0
 8883 0590 8D4B     		ldr	r3, .L391
 8884 0592 1968     		ldr	r1, [r3]
 8885 0594 8D4B     		ldr	r3, .L391+4
 8886 0596 A3FB0123 		umull	r2, r3, r3, r1
 8887 059a 9A08     		lsrs	r2, r3, #2
 8888 059c 1346     		mov	r3, r2
 8889 059e 9B00     		lsls	r3, r3, #2
 8890 05a0 1344     		add	r3, r3, r2
 8891 05a2 CA1A     		subs	r2, r1, r3
 8892 05a4 012A     		cmp	r2, #1
 8893 05a6 0FD1     		bne	.L352
1951:main.c        ****                     {
1952:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8894              		.loc 1 1952 0
 8895 05a8 3A8E     		ldrh	r2, [r7, #48]
 8896 05aa 894B     		ldr	r3, .L391+8
 8897 05ac 1B68     		ldr	r3, [r3]
 8898 05ae 591C     		adds	r1, r3, #1
 8899 05b0 8748     		ldr	r0, .L391+8
 8900 05b2 0160     		str	r1, [r0]
 8901 05b4 D418     		adds	r4, r2, r3
 8902 05b6 FB68     		ldr	r3, [r7, #12]	@ float
 8903 05b8 1846     		mov	r0, r3
 8904 05ba FFF7FEFF 		bl	__aeabi_f2uiz
 8905 05be 0346     		mov	r3, r0
 8906 05c0 DAB2     		uxtb	r2, r3
 8907 05c2 844B     		ldr	r3, .L391+12
 8908 05c4 1A55     		strb	r2, [r3, r4]
 8909 05c6 75E0     		b	.L351
 8910              	.L352:
1953:main.c        ****                     }
1954:main.c        ****                     else if (mapCount % 5 == 2) //check if the scalar source is -1 (if so send 255 
 8911              		.loc 1 1954 0
 8912 05c8 7F4B     		ldr	r3, .L391
 8913 05ca 1968     		ldr	r1, [r3]
 8914 05cc 7F4B     		ldr	r3, .L391+4
 8915 05ce A3FB0123 		umull	r2, r3, r3, r1
 8916 05d2 9A08     		lsrs	r2, r3, #2
 8917 05d4 1346     		mov	r3, r2
 8918 05d6 9B00     		lsls	r3, r3, #2
 8919 05d8 1344     		add	r3, r3, r2
 8920 05da CA1A     		subs	r2, r1, r3
 8921 05dc 022A     		cmp	r2, #2
 8922 05de 23D1     		bne	.L353
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 194


1955:main.c        ****                     {
1956:main.c        ****                         if (theVal.f < 0.0f)
 8923              		.loc 1 1956 0
 8924 05e0 FB68     		ldr	r3, [r7, #12]	@ float
 8925 05e2 4FF00001 		mov	r1, #0
 8926 05e6 1846     		mov	r0, r3
 8927 05e8 FFF7FEFF 		bl	__aeabi_fcmplt
 8928 05ec 0346     		mov	r3, r0
 8929 05ee 002B     		cmp	r3, #0
 8930 05f0 0AD0     		beq	.L385
1957:main.c        ****                         {
1958:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 8931              		.loc 1 1958 0
 8932 05f2 3A8E     		ldrh	r2, [r7, #48]
 8933 05f4 764B     		ldr	r3, .L391+8
 8934 05f6 1B68     		ldr	r3, [r3]
 8935 05f8 591C     		adds	r1, r3, #1
 8936 05fa 7548     		ldr	r0, .L391+8
 8937 05fc 0160     		str	r1, [r0]
 8938 05fe 1344     		add	r3, r3, r2
 8939 0600 744A     		ldr	r2, .L391+12
 8940 0602 FF21     		movs	r1, #255
 8941 0604 D154     		strb	r1, [r2, r3]
 8942 0606 55E0     		b	.L351
 8943              	.L385:
1959:main.c        ****                         }
1960:main.c        ****                         else
1961:main.c        ****                         {
1962:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8944              		.loc 1 1962 0
 8945 0608 3A8E     		ldrh	r2, [r7, #48]
 8946 060a 714B     		ldr	r3, .L391+8
 8947 060c 1B68     		ldr	r3, [r3]
 8948 060e 591C     		adds	r1, r3, #1
 8949 0610 6F48     		ldr	r0, .L391+8
 8950 0612 0160     		str	r1, [r0]
 8951 0614 D418     		adds	r4, r2, r3
 8952 0616 FB68     		ldr	r3, [r7, #12]	@ float
 8953 0618 1846     		mov	r0, r3
 8954 061a FFF7FEFF 		bl	__aeabi_f2uiz
 8955 061e 0346     		mov	r3, r0
 8956 0620 DAB2     		uxtb	r2, r3
 8957 0622 6C4B     		ldr	r3, .L391+12
 8958 0624 1A55     		strb	r2, [r3, r4]
 8959 0626 45E0     		b	.L351
 8960              	.L353:
1963:main.c        ****                         }
1964:main.c        ****                     }
1965:main.c        ****                     else if (mapCount % 5 == 3)
 8961              		.loc 1 1965 0
 8962 0628 674B     		ldr	r3, .L391
 8963 062a 1968     		ldr	r1, [r3]
 8964 062c 674B     		ldr	r3, .L391+4
 8965 062e A3FB0123 		umull	r2, r3, r3, r1
 8966 0632 9A08     		lsrs	r2, r3, #2
 8967 0634 1346     		mov	r3, r2
 8968 0636 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 195


 8969 0638 1344     		add	r3, r3, r2
 8970 063a CA1A     		subs	r2, r1, r3
 8971 063c 032A     		cmp	r2, #3
 8972 063e 24D1     		bne	.L357
 8973              	.LBB59:
1966:main.c        ****                     {
1967:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 8974              		.loc 1 1967 0
 8975 0640 FB68     		ldr	r3, [r7, #12]	@ float
 8976 0642 6549     		ldr	r1, .L391+16
 8977 0644 1846     		mov	r0, r3
 8978 0646 FFF7FEFF 		bl	__aeabi_fmul
 8979 064a 0346     		mov	r3, r0
 8980 064c 1846     		mov	r0, r3
 8981 064e FFF7FEFF 		bl	__aeabi_f2iz
 8982 0652 0346     		mov	r3, r0
 8983 0654 BB85     		strh	r3, [r7, #44]	@ movhi
1968:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 8984              		.loc 1 1968 0
 8985 0656 3A8E     		ldrh	r2, [r7, #48]
 8986 0658 5D4B     		ldr	r3, .L391+8
 8987 065a 1B68     		ldr	r3, [r3]
 8988 065c 591C     		adds	r1, r3, #1
 8989 065e 5C48     		ldr	r0, .L391+8
 8990 0660 0160     		str	r1, [r0]
 8991 0662 1344     		add	r3, r3, r2
 8992 0664 B7F92C20 		ldrsh	r2, [r7, #44]
 8993 0668 1212     		asrs	r2, r2, #8
 8994 066a 12B2     		sxth	r2, r2
 8995 066c D1B2     		uxtb	r1, r2
 8996 066e 594A     		ldr	r2, .L391+12
 8997 0670 D154     		strb	r1, [r2, r3]
1969:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 8998              		.loc 1 1969 0
 8999 0672 3A8E     		ldrh	r2, [r7, #48]
 9000 0674 564B     		ldr	r3, .L391+8
 9001 0676 1B68     		ldr	r3, [r3]
 9002 0678 591C     		adds	r1, r3, #1
 9003 067a 5548     		ldr	r0, .L391+8
 9004 067c 0160     		str	r1, [r0]
 9005 067e 1344     		add	r3, r3, r2
 9006 0680 BA8D     		ldrh	r2, [r7, #44]	@ movhi
 9007 0682 D1B2     		uxtb	r1, r2
 9008 0684 534A     		ldr	r2, .L391+12
 9009 0686 D154     		strb	r1, [r2, r3]
 9010              	.LBE59:
 9011 0688 14E0     		b	.L351
 9012              	.L357:
1970:main.c        **** 
1971:main.c        ****                     }
1972:main.c        ****                     else
1973:main.c        ****                     {
1974:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 9013              		.loc 1 1974 0
 9014 068a 3A8E     		ldrh	r2, [r7, #48]
 9015 068c 504B     		ldr	r3, .L391+8
 9016 068e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 196


 9017 0690 591C     		adds	r1, r3, #1
 9018 0692 4F48     		ldr	r0, .L391+8
 9019 0694 0160     		str	r1, [r0]
 9020 0696 D418     		adds	r4, r2, r3
 9021 0698 FB68     		ldr	r3, [r7, #12]	@ float
 9022 069a 1846     		mov	r0, r3
 9023 069c FFF7FEFF 		bl	__aeabi_f2uiz
 9024 06a0 0346     		mov	r3, r0
 9025 06a2 DAB2     		uxtb	r2, r3
 9026 06a4 4B4B     		ldr	r3, .L391+12
 9027 06a6 1A55     		strb	r2, [r3, r4]
1975:main.c        ****                         numMappings++;
 9028              		.loc 1 1975 0
 9029 06a8 4C4B     		ldr	r3, .L391+20
 9030 06aa 1B88     		ldrh	r3, [r3]
 9031 06ac 0133     		adds	r3, r3, #1
 9032 06ae 9AB2     		uxth	r2, r3
 9033 06b0 4A4B     		ldr	r3, .L391+20
 9034 06b2 1A80     		strh	r2, [r3]	@ movhi
 9035              	.L351:
1976:main.c        ****                     }
1977:main.c        ****                     mapCount++;
 9036              		.loc 1 1977 0
 9037 06b4 444B     		ldr	r3, .L391
 9038 06b6 1B68     		ldr	r3, [r3]
 9039 06b8 0133     		adds	r3, r3, #1
 9040 06ba 434A     		ldr	r2, .L391
 9041 06bc 1360     		str	r3, [r2]
 9042 06be 47E0     		b	.L347
 9043              	.L349:
1978:main.c        ****                 }
1979:main.c        ****                 
1980:main.c        **** 
1981:main.c        ****                 else
1982:main.c        ****                 {
1983:main.c        ****                     //mapcount ended
1984:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 9044              		.loc 1 1984 0
 9045 06c0 FB68     		ldr	r3, [r7, #12]	@ float
 9046 06c2 4749     		ldr	r1, .L391+24
 9047 06c4 1846     		mov	r0, r3
 9048 06c6 FFF7FEFF 		bl	__aeabi_fcmplt
 9049 06ca 0346     		mov	r3, r0
 9050 06cc 002B     		cmp	r3, #0
 9051 06ce 31D0     		beq	.L358
 9052              		.loc 1 1984 0 is_stmt 0 discriminator 1
 9053 06d0 FB68     		ldr	r3, [r7, #12]	@ float
 9054 06d2 4449     		ldr	r1, .L391+28
 9055 06d4 1846     		mov	r0, r3
 9056 06d6 FFF7FEFF 		bl	__aeabi_fcmpgt
 9057 06da 0346     		mov	r3, r0
 9058 06dc 002B     		cmp	r3, #0
 9059 06de 29D0     		beq	.L358
1985:main.c        ****                     {
1986:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 9060              		.loc 1 1986 0 is_stmt 1
 9061 06e0 3A8E     		ldrh	r2, [r7, #48]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 197


 9062 06e2 3B4B     		ldr	r3, .L391+8
 9063 06e4 1B68     		ldr	r3, [r3]
 9064 06e6 591C     		adds	r1, r3, #1
 9065 06e8 3948     		ldr	r0, .L391+8
 9066 06ea 0160     		str	r1, [r0]
 9067 06ec 1344     		add	r3, r3, r2
 9068 06ee 394A     		ldr	r2, .L391+12
 9069 06f0 FE21     		movs	r1, #254
 9070 06f2 D154     		strb	r1, [r2, r3]
1987:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 9071              		.loc 1 1987 0
 9072 06f4 3A8E     		ldrh	r2, [r7, #48]
 9073 06f6 364B     		ldr	r3, .L391+8
 9074 06f8 1B68     		ldr	r3, [r3]
 9075 06fa 591C     		adds	r1, r3, #1
 9076 06fc 3448     		ldr	r0, .L391+8
 9077 06fe 0160     		str	r1, [r0]
 9078 0700 1344     		add	r3, r3, r2
 9079 0702 344A     		ldr	r2, .L391+12
 9080 0704 FE21     		movs	r1, #254
 9081 0706 D154     		strb	r1, [r2, r3]
1988:main.c        ****                         presetArraySection = presetEnd;
 9082              		.loc 1 1988 0
 9083 0708 374B     		ldr	r3, .L391+32
 9084 070a 0522     		movs	r2, #5
 9085 070c 1A70     		strb	r2, [r3]
1989:main.c        ****                         sysexMessageInProgress = 0;
 9086              		.loc 1 1989 0
 9087 070e 374B     		ldr	r3, .L391+36
 9088 0710 0022     		movs	r2, #0
 9089 0712 1A70     		strb	r2, [r3]
1990:main.c        ****                         sendingMessage = 1;
 9090              		.loc 1 1990 0
 9091 0714 364B     		ldr	r3, .L391+40
 9092 0716 0122     		movs	r2, #1
 9093 0718 1A70     		strb	r2, [r3]
1991:main.c        ****                         patchNum = presetNumberToWrite;
 9094              		.loc 1 1991 0
 9095 071a 364B     		ldr	r3, .L391+44
 9096 071c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9097 071e 364B     		ldr	r3, .L391+48
 9098 0720 1A70     		strb	r2, [r3]
1992:main.c        ****                         messageArraySize = valsStart + currentFloat;
 9099              		.loc 1 1992 0
 9100 0722 2B4B     		ldr	r3, .L391+8
 9101 0724 1B68     		ldr	r3, [r3]
 9102 0726 9AB2     		uxth	r2, r3
 9103 0728 3B8E     		ldrh	r3, [r7, #48]	@ movhi
 9104 072a 1344     		add	r3, r3, r2
 9105 072c 9AB2     		uxth	r2, r3
 9106 072e 334B     		ldr	r3, .L391+52
 9107 0730 1A80     		strh	r2, [r3]	@ movhi
 9108 0732 0DE0     		b	.L347
 9109              	.L358:
1993:main.c        ****                     }
1994:main.c        ****                     else
1995:main.c        ****                     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 198


1996:main.c        ****                         //error state
1997:main.c        ****                         SPI_errors++;
 9110              		.loc 1 1997 0
 9111 0734 324B     		ldr	r3, .L391+56
 9112 0736 1B68     		ldr	r3, [r3]
 9113 0738 0133     		adds	r3, r3, #1
 9114 073a 314A     		ldr	r2, .L391+56
 9115 073c 1360     		str	r3, [r2]
1998:main.c        ****                         sysexMessageInProgress = 0;
 9116              		.loc 1 1998 0
 9117 073e 2B4B     		ldr	r3, .L391+36
 9118 0740 0022     		movs	r2, #0
 9119 0742 1A70     		strb	r2, [r3]
1999:main.c        ****                        // sysexPointer = 0;
2000:main.c        ****                         sendingMessage = 0;
 9120              		.loc 1 2000 0
 9121 0744 2A4B     		ldr	r3, .L391+40
 9122 0746 0022     		movs	r2, #0
 9123 0748 1A70     		strb	r2, [r3]
2001:main.c        ****                         parseThatMF = 0;
 9124              		.loc 1 2001 0
 9125 074a 2E4B     		ldr	r3, .L391+60
 9126 074c 0022     		movs	r2, #0
 9127 074e 1A70     		strb	r2, [r3]
 9128              	.L347:
1887:main.c        ****         {
 9129              		.loc 1 1887 0
 9130 0750 2D4B     		ldr	r3, .L391+64
 9131 0752 1B68     		ldr	r3, [r3]
 9132 0754 0533     		adds	r3, r3, #5
 9133 0756 2C4A     		ldr	r2, .L391+64
 9134 0758 1360     		str	r3, [r2]
 9135              	.L339:
1887:main.c        ****         {
 9136              		.loc 1 1887 0 is_stmt 0 discriminator 1
 9137 075a 2B4B     		ldr	r3, .L391+64
 9138 075c 1A68     		ldr	r2, [r3]
 9139 075e 7B6B     		ldr	r3, [r7, #52]
 9140 0760 9A42     		cmp	r2, r3
 9141 0762 FFF4B7AD 		bcc	.L361
 9142 0766 59E3     		b	.L362
 9143              	.L328:
 9144              	.LBE53:
2002:main.c        ****                     }
2003:main.c        ****                 }
2004:main.c        ****             }
2005:main.c        ****             
2006:main.c        ****         }
2007:main.c        ****     }
2008:main.c        ****     #if 0
2009:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2010:main.c        ****     {
2011:main.c        ****         
2012:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
2013:main.c        ****         currentFloat = 0;
2014:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2015:main.c        ****         union breakFloat theVal;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 199


2016:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2017:main.c        ****         {
2018:main.c        ****             theVal.u32 = 0;
2019:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2020:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2021:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2022:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2023:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
2024:main.c        ****             testVal = theVal.f;
2025:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2026:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2027:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2028:main.c        ****         }
2029:main.c        ****         
2030:main.c        ****         tuningArray[currentFloat++] = 0xef;
2031:main.c        ****         tuningArray[currentFloat++] = 0xef;
2032:main.c        ****                         
2033:main.c        ****         
2034:main.c        ****         messageArraySize = currentFloat;
2035:main.c        ****                     
2036:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
2037:main.c        ****         {
2038:main.c        ****             //error state
2039:main.c        ****             SPI_errors++;
2040:main.c        ****             sysexMessageInProgress = 0;
2041:main.c        ****             sysexPointer = 0;
2042:main.c        ****             sendingMessage = 0;
2043:main.c        ****             parseThatMF = 0;
2044:main.c        ****         } else 
2045:main.c        ****         {
2046:main.c        ****             sysexMessageInProgress = 0;
2047:main.c        ****             sendingMessage = 2;
2048:main.c        ****         }
2049:main.c        ****     }
2050:main.c        ****     #endif
2051:main.c        ****     
2052:main.c        **** 
2053:main.c        ****     
2054:main.c        ****     else if (sysexBuffer[sysexReadPointer & sysexPointerMask] == 2) //its a copedent
 9145              		.loc 1 2054 0 is_stmt 1
 9146 0768 274B     		ldr	r3, .L391+64
 9147 076a 1B68     		ldr	r3, [r3]
 9148 076c 40F2FF72 		movw	r2, #2047
 9149 0770 1340     		ands	r3, r3, r2
 9150 0772 264A     		ldr	r2, .L391+68
 9151 0774 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9152 0776 022B     		cmp	r3, #2
 9153 0778 40F09E81 		bne	.L363
 9154              	.LBB60:
2055:main.c        ****     {
2056:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 9155              		.loc 1 2056 0
 9156 077c 1B4B     		ldr	r3, .L391+36
 9157 077e 0122     		movs	r2, #1
 9158 0780 1A70     		strb	r2, [r3]
2057:main.c        ****         currentFloat = 0;
 9159              		.loc 1 2057 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 200


 9160 0782 134B     		ldr	r3, .L391+8
 9161 0784 0022     		movs	r2, #0
 9162 0786 1A60     		str	r2, [r3]
2058:main.c        ****         copedentNumberToWrite = sysexBuffer[(messageStart+1) & sysexPointerMask];
 9163              		.loc 1 2058 0
 9164 0788 BB6B     		ldr	r3, [r7, #56]
 9165 078a 0133     		adds	r3, r3, #1
 9166 078c 40F2FF72 		movw	r2, #2047
 9167 0790 1340     		ands	r3, r3, r2
 9168 0792 1E4A     		ldr	r2, .L391+68
 9169 0794 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9170 0796 1E4B     		ldr	r3, .L391+72
 9171 0798 1A70     		strb	r2, [r3]
2059:main.c        ****         currentCopedent = copedentNumberToWrite;
 9172              		.loc 1 2059 0
 9173 079a 1D4B     		ldr	r3, .L391+72
 9174 079c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9175 079e 1D4B     		ldr	r3, .L391+76
 9176 07a0 1A70     		strb	r2, [r3]
2060:main.c        ****         necks[currentNeck] = currentCopedent;
 9177              		.loc 1 2060 0
 9178 07a2 1D4B     		ldr	r3, .L391+80
 9179 07a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9180 07a6 1A46     		mov	r2, r3
 9181 07a8 1A4B     		ldr	r3, .L391+76
 9182 07aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9183 07ac 1B4B     		ldr	r3, .L391+84
 9184 07ae 9954     		strb	r1, [r3, r2]
2061:main.c        **** 
2062:main.c        ****               
2063:main.c        ****         
2064:main.c        ****         union breakFloat theVal;
2065:main.c        ****         uint32_t i = 2;
 9185              		.loc 1 2065 0
 9186 07b0 0223     		movs	r3, #2
 9187 07b2 7B64     		str	r3, [r7, #68]
2066:main.c        ****         sysexReadPointer = i + messageStart;
 9188              		.loc 1 2066 0
 9189 07b4 7A6C     		ldr	r2, [r7, #68]
 9190 07b6 BB6B     		ldr	r3, [r7, #56]
 9191 07b8 1344     		add	r3, r3, r2
 9192 07ba 134A     		ldr	r2, .L391+64
 9193 07bc 1360     		str	r3, [r2]
2067:main.c        ****         uint8_t stoppingPoint = COPEDENT_NAME_LENGTH_IN_BYTES + 2;
 9194              		.loc 1 2067 0
 9195 07be 0C23     		movs	r3, #12
 9196 07c0 87F82B30 		strb	r3, [r7, #43]
2068:main.c        ****         for (; i < stoppingPoint; i++)
 9197              		.loc 1 2068 0
 9198 07c4 74E0     		b	.L364
 9199              	.L392:
 9200 07c6 00BF     		.align	2
 9201              	.L391:
 9202 07c8 00000000 		.word	mapCount
 9203 07cc CDCCCCCC 		.word	-858993459
 9204 07d0 00000000 		.word	currentFloat
 9205 07d4 00000000 		.word	presetArray
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 201


 9206 07d8 00FEFF46 		.word	1191181824
 9207 07dc 00000000 		.word	numMappings
 9208 07e0 000020C0 		.word	-1071644672
 9209 07e4 000060C0 		.word	-1067450368
 9210 07e8 00000000 		.word	presetArraySection
 9211 07ec 00000000 		.word	sysexMessageInProgress
 9212 07f0 00000000 		.word	sendingMessage
 9213 07f4 00000000 		.word	presetNumberToWrite
 9214 07f8 00000000 		.word	patchNum
 9215 07fc 00000000 		.word	messageArraySize
 9216 0800 00000000 		.word	SPI_errors
 9217 0804 00000000 		.word	parseThatMF
 9218 0808 00000000 		.word	sysexReadPointer
 9219 080c 00000000 		.word	sysexBuffer
 9220 0810 00000000 		.word	copedentNumberToWrite
 9221 0814 00000000 		.word	currentCopedent
 9222 0818 00000000 		.word	currentNeck
 9223 081c 00000000 		.word	necks
 9224              	.L365:
 9225              	.LBB61:
2069:main.c        ****         {
2070:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2071:main.c        ****             uint8_t tempChar = sysexBuffer[sysexReadPointer & sysexPointerMask] & 127;
 9226              		.loc 1 2071 0 discriminator 2
 9227 0820 984B     		ldr	r3, .L393
 9228 0822 1B68     		ldr	r3, [r3]
 9229 0824 40F2FF72 		movw	r2, #2047
 9230 0828 1340     		ands	r3, r3, r2
 9231 082a 974A     		ldr	r2, .L393+4
 9232 082c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9233 082e 03F07F03 		and	r3, r3, #127
 9234 0832 87F82A30 		strb	r3, [r7, #42]
2072:main.c        ****             copedentNamesArray[copedentNumberToWrite][(i-2)] = tempChar;//not sure about the minus 
 9235              		.loc 1 2072 0 discriminator 2
 9236 0836 954B     		ldr	r3, .L393+8
 9237 0838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9238 083a 1846     		mov	r0, r3
 9239 083c 7B6C     		ldr	r3, [r7, #68]
 9240 083e 9A1E     		subs	r2, r3, #2
 9241 0840 9349     		ldr	r1, .L393+12
 9242 0842 0346     		mov	r3, r0
 9243 0844 9B00     		lsls	r3, r3, #2
 9244 0846 0344     		add	r3, r3, r0
 9245 0848 5B00     		lsls	r3, r3, #1
 9246 084a 0B44     		add	r3, r3, r1
 9247 084c 1344     		add	r3, r3, r2
 9248 084e 97F82A20 		ldrb	r2, [r7, #42]
 9249 0852 1A70     		strb	r2, [r3]
2073:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 9250              		.loc 1 2073 0 discriminator 2
 9251 0854 8D4B     		ldr	r3, .L393+8
 9252 0856 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9253 0858 9BB2     		uxth	r3, r3
 9254 085a 1A46     		mov	r2, r3	@ movhi
 9255 085c 1201     		lsls	r2, r2, #4
 9256 085e 1A44     		add	r2, r2, r3
 9257 0860 D200     		lsls	r2, r2, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 202


 9258 0862 1344     		add	r3, r3, r2
 9259 0864 5B00     		lsls	r3, r3, #1
 9260 0866 9AB2     		uxth	r2, r3
 9261 0868 8A4B     		ldr	r3, .L393+16
 9262 086a 1A80     		strh	r2, [r3]	@ movhi
2074:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 9263              		.loc 1 2074 0 discriminator 2
 9264 086c 874B     		ldr	r3, .L393+8
 9265 086e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9266 0870 9BB2     		uxth	r3, r3
 9267 0872 1A46     		mov	r2, r3	@ movhi
 9268 0874 1201     		lsls	r2, r2, #4
 9269 0876 1A44     		add	r2, r2, r3
 9270 0878 D200     		lsls	r2, r2, #3
 9271 087a 1344     		add	r3, r3, r2
 9272 087c 5B00     		lsls	r3, r3, #1
 9273 087e 9AB2     		uxth	r2, r3
 9274 0880 7B6C     		ldr	r3, [r7, #68]
 9275 0882 9BB2     		uxth	r3, r3
 9276 0884 1344     		add	r3, r3, r2
 9277 0886 9BB2     		uxth	r3, r3
 9278 0888 023B     		subs	r3, r3, #2
 9279 088a 9AB2     		uxth	r2, r3
 9280 088c 97F82A30 		ldrb	r3, [r7, #42]	@ zero_extendqisi2
 9281 0890 1146     		mov	r1, r2
 9282 0892 1846     		mov	r0, r3
 9283 0894 FFF7FEFF 		bl	EEPROM_WriteByte
 9284 0898 0346     		mov	r3, r0
 9285 089a DAB2     		uxtb	r2, r3
 9286 089c 7E4B     		ldr	r3, .L393+20
 9287 089e 1A70     		strb	r2, [r3]
2075:main.c        ****             sysexReadPointer++;
 9288              		.loc 1 2075 0 discriminator 2
 9289 08a0 784B     		ldr	r3, .L393
 9290 08a2 1B68     		ldr	r3, [r3]
 9291 08a4 0133     		adds	r3, r3, #1
 9292 08a6 774A     		ldr	r2, .L393
 9293 08a8 1360     		str	r3, [r2]
 9294              	.LBE61:
2068:main.c        ****         {
 9295              		.loc 1 2068 0 discriminator 2
 9296 08aa 7B6C     		ldr	r3, [r7, #68]
 9297 08ac 0133     		adds	r3, r3, #1
 9298 08ae 7B64     		str	r3, [r7, #68]
 9299              	.L364:
2068:main.c        ****         {
 9300              		.loc 1 2068 0 is_stmt 0 discriminator 1
 9301 08b0 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 9302 08b4 7B6C     		ldr	r3, [r7, #68]
 9303 08b6 9A42     		cmp	r2, r3
 9304 08b8 B2D8     		bhi	.L365
2076:main.c        ****         }
2077:main.c        ****         
2078:main.c        ****         i = (COPEDENT_NAME_LENGTH_IN_BYTES + 2 + messageStart); // start after the name storage to 
 9305              		.loc 1 2078 0 is_stmt 1
 9306 08ba BB6B     		ldr	r3, [r7, #56]
 9307 08bc 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 203


 9308 08be 7B64     		str	r3, [r7, #68]
2079:main.c        **** 
2080:main.c        ****  
2081:main.c        ****         while(i < messageEnd)
 9309              		.loc 1 2081 0
 9310 08c0 BDE0     		b	.L366
 9311              	.L371:
 9312              	.LBB62:
2082:main.c        ****         {
2083:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 9313              		.loc 1 2083 0
 9314 08c2 0023     		movs	r3, #0
 9315 08c4 3B64     		str	r3, [r7, #64]
 9316 08c6 B6E0     		b	.L367
 9317              	.L370:
 9318              	.LBB63:
2084:main.c        ****             {
2085:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 9319              		.loc 1 2085 0
 9320 08c8 3B6C     		ldr	r3, [r7, #64]
 9321 08ca 9BB2     		uxth	r3, r3
 9322 08cc 1A46     		mov	r2, r3	@ movhi
 9323 08ce 5200     		lsls	r2, r2, #1
 9324 08d0 1344     		add	r3, r3, r2
 9325 08d2 DB00     		lsls	r3, r3, #3
 9326 08d4 3B85     		strh	r3, [r7, #40]	@ movhi
 9327              	.LBB64:
2086:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 9328              		.loc 1 2086 0
 9329 08d6 0023     		movs	r3, #0
 9330 08d8 FB63     		str	r3, [r7, #60]
 9331 08da A5E0     		b	.L368
 9332              	.L369:
 9333              	.LBB65:
2087:main.c        ****                 {
2088:main.c        ****                     
2089:main.c        ****                     theVal.u32 = 0;
 9334              		.loc 1 2089 0 discriminator 3
 9335 08dc 0023     		movs	r3, #0
 9336 08de BB60     		str	r3, [r7, #8]
2090:main.c        ****                     theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 9337              		.loc 1 2090 0 discriminator 3
 9338 08e0 BB68     		ldr	r3, [r7, #8]
 9339 08e2 40F2FF71 		movw	r1, #2047
 9340 08e6 7A6C     		ldr	r2, [r7, #68]
 9341 08e8 0A40     		ands	r2, r2, r1
 9342 08ea 6749     		ldr	r1, .L393+4
 9343 08ec 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9344 08ee 1207     		lsls	r2, r2, #28
 9345 08f0 1343     		orrs	r3, r3, r2
 9346 08f2 BB60     		str	r3, [r7, #8]
2091:main.c        ****                     theVal.u32 |= (sysexBuffer[(i+1) & sysexPointerMask] << 21);
 9347              		.loc 1 2091 0 discriminator 3
 9348 08f4 BB68     		ldr	r3, [r7, #8]
 9349 08f6 7A6C     		ldr	r2, [r7, #68]
 9350 08f8 0132     		adds	r2, r2, #1
 9351 08fa 40F2FF71 		movw	r1, #2047
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 204


 9352 08fe 0A40     		ands	r2, r2, r1
 9353 0900 6149     		ldr	r1, .L393+4
 9354 0902 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9355 0904 5205     		lsls	r2, r2, #21
 9356 0906 1343     		orrs	r3, r3, r2
 9357 0908 BB60     		str	r3, [r7, #8]
2092:main.c        ****                     theVal.u32 |= (sysexBuffer[(i+2) & sysexPointerMask] << 14);
 9358              		.loc 1 2092 0 discriminator 3
 9359 090a BB68     		ldr	r3, [r7, #8]
 9360 090c 7A6C     		ldr	r2, [r7, #68]
 9361 090e 0232     		adds	r2, r2, #2
 9362 0910 40F2FF71 		movw	r1, #2047
 9363 0914 0A40     		ands	r2, r2, r1
 9364 0916 5C49     		ldr	r1, .L393+4
 9365 0918 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9366 091a 9203     		lsls	r2, r2, #14
 9367 091c 1343     		orrs	r3, r3, r2
 9368 091e BB60     		str	r3, [r7, #8]
2093:main.c        ****                     theVal.u32 |= (sysexBuffer[(i+3) & sysexPointerMask] << 7);
 9369              		.loc 1 2093 0 discriminator 3
 9370 0920 BB68     		ldr	r3, [r7, #8]
 9371 0922 7A6C     		ldr	r2, [r7, #68]
 9372 0924 0332     		adds	r2, r2, #3
 9373 0926 40F2FF71 		movw	r1, #2047
 9374 092a 0A40     		ands	r2, r2, r1
 9375 092c 5649     		ldr	r1, .L393+4
 9376 092e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9377 0930 D201     		lsls	r2, r2, #7
 9378 0932 1343     		orrs	r3, r3, r2
 9379 0934 BB60     		str	r3, [r7, #8]
2094:main.c        ****                     theVal.u32 |= (sysexBuffer[(i+4) & sysexPointerMask] & 127);
 9380              		.loc 1 2094 0 discriminator 3
 9381 0936 BA68     		ldr	r2, [r7, #8]
 9382 0938 7B6C     		ldr	r3, [r7, #68]
 9383 093a 0433     		adds	r3, r3, #4
 9384 093c 40F2FF71 		movw	r1, #2047
 9385 0940 0B40     		ands	r3, r3, r1
 9386 0942 5149     		ldr	r1, .L393+4
 9387 0944 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9388 0946 03F07F03 		and	r3, r3, #127
 9389 094a 1343     		orrs	r3, r3, r2
 9390 094c BB60     		str	r3, [r7, #8]
2095:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 9391              		.loc 1 2095 0 discriminator 3
 9392 094e 4F4B     		ldr	r3, .L393+8
 9393 0950 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9394 0952 1C46     		mov	r4, r3
 9395 0954 B968     		ldr	r1, [r7, #8]	@ float
 9396 0956 5148     		ldr	r0, .L393+24
 9397 0958 3B6C     		ldr	r3, [r7, #64]
 9398 095a 1A46     		mov	r2, r3
 9399 095c 5200     		lsls	r2, r2, #1
 9400 095e 1A44     		add	r2, r2, r3
 9401 0960 9300     		lsls	r3, r2, #2
 9402 0962 1A46     		mov	r2, r3
 9403 0964 2346     		mov	r3, r4
 9404 0966 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 205


 9405 0968 2344     		add	r3, r3, r4
 9406 096a 9B00     		lsls	r3, r3, #2
 9407 096c 1A44     		add	r2, r2, r3
 9408 096e FB6B     		ldr	r3, [r7, #60]
 9409 0970 1344     		add	r3, r3, r2
 9410 0972 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2096:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 9411              		.loc 1 2096 0 discriminator 3
 9412 0976 BB68     		ldr	r3, [r7, #8]	@ float
 9413 0978 4FF08741 		mov	r1, #1132462080
 9414 097c 1846     		mov	r0, r3
 9415 097e FFF7FEFF 		bl	__aeabi_fmul
 9416 0982 0346     		mov	r3, r0
 9417 0984 4FF08E41 		mov	r1, #1191182336
 9418 0988 1846     		mov	r0, r3
 9419 098a FFF7FEFF 		bl	__aeabi_fadd
 9420 098e 0346     		mov	r3, r0
 9421 0990 1846     		mov	r0, r3
 9422 0992 FFF7FEFF 		bl	__aeabi_f2uiz
 9423 0996 0346     		mov	r3, r0
 9424 0998 FB84     		strh	r3, [r7, #38]	@ movhi
2097:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 9425              		.loc 1 2097 0 discriminator 3
 9426 099a FB8C     		ldrh	r3, [r7, #38]
 9427 099c 1B0A     		lsrs	r3, r3, #8
 9428 099e 9BB2     		uxth	r3, r3
 9429 09a0 87F82530 		strb	r3, [r7, #37]
2098:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 9430              		.loc 1 2098 0 discriminator 3
 9431 09a4 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 9432 09a6 87F82430 		strb	r3, [r7, #36]
2099:main.c        ****                     
2100:main.c        ****                     
2101:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 9433              		.loc 1 2101 0 discriminator 3
 9434 09aa FB6B     		ldr	r3, [r7, #60]
 9435 09ac 9BB2     		uxth	r3, r3
 9436 09ae 5B00     		lsls	r3, r3, #1
 9437 09b0 7B84     		strh	r3, [r7, #34]	@ movhi
2102:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 9438              		.loc 1 2102 0 discriminator 3
 9439 09b2 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 9440 09b4 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 9441 09b6 1344     		add	r3, r3, r2
 9442 09b8 9AB2     		uxth	r2, r3
 9443 09ba 344B     		ldr	r3, .L393+8
 9444 09bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9445 09be 9BB2     		uxth	r3, r3
 9446 09c0 1946     		mov	r1, r3	@ movhi
 9447 09c2 0901     		lsls	r1, r1, #4
 9448 09c4 1944     		add	r1, r1, r3
 9449 09c6 C900     		lsls	r1, r1, #3
 9450 09c8 0B44     		add	r3, r3, r1
 9451 09ca 5B00     		lsls	r3, r3, #1
 9452 09cc 9BB2     		uxth	r3, r3
 9453 09ce 1344     		add	r3, r3, r2
 9454 09d0 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 206


 9455 09d2 0A33     		adds	r3, r3, #10
 9456 09d4 9AB2     		uxth	r2, r3
 9457 09d6 2F4B     		ldr	r3, .L393+16
 9458 09d8 1A80     		strh	r2, [r3]	@ movhi
2103:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 9459              		.loc 1 2103 0 discriminator 3
 9460 09da 2E4B     		ldr	r3, .L393+16
 9461 09dc 1B88     		ldrh	r3, [r3]	@ movhi
 9462 09de 9AB2     		uxth	r2, r3
 9463 09e0 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 9464 09e4 1146     		mov	r1, r2
 9465 09e6 1846     		mov	r0, r3
 9466 09e8 FFF7FEFF 		bl	EEPROM_WriteByte
 9467 09ec 0346     		mov	r3, r0
 9468 09ee DAB2     		uxtb	r2, r3
 9469 09f0 294B     		ldr	r3, .L393+20
 9470 09f2 1A70     		strb	r2, [r3]
2104:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 9471              		.loc 1 2104 0 discriminator 3
 9472 09f4 274B     		ldr	r3, .L393+16
 9473 09f6 1B88     		ldrh	r3, [r3]	@ movhi
 9474 09f8 9BB2     		uxth	r3, r3
 9475 09fa 0133     		adds	r3, r3, #1
 9476 09fc 9AB2     		uxth	r2, r3
 9477 09fe 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 9478 0a02 1146     		mov	r1, r2
 9479 0a04 1846     		mov	r0, r3
 9480 0a06 FFF7FEFF 		bl	EEPROM_WriteByte
 9481 0a0a 0346     		mov	r3, r0
 9482 0a0c DAB2     		uxtb	r2, r3
 9483 0a0e 224B     		ldr	r3, .L393+20
 9484 0a10 1A70     		strb	r2, [r3]
2105:main.c        ****                     currentFloat++;
 9485              		.loc 1 2105 0 discriminator 3
 9486 0a12 234B     		ldr	r3, .L393+28
 9487 0a14 1B68     		ldr	r3, [r3]
 9488 0a16 0133     		adds	r3, r3, #1
 9489 0a18 214A     		ldr	r2, .L393+28
 9490 0a1a 1360     		str	r3, [r2]
2106:main.c        ****                     i = (i+5);
 9491              		.loc 1 2106 0 discriminator 3
 9492 0a1c 7B6C     		ldr	r3, [r7, #68]
 9493 0a1e 0533     		adds	r3, r3, #5
 9494 0a20 7B64     		str	r3, [r7, #68]
 9495              	.LBE65:
2086:main.c        ****                 {
 9496              		.loc 1 2086 0 discriminator 3
 9497 0a22 FB6B     		ldr	r3, [r7, #60]
 9498 0a24 0133     		adds	r3, r3, #1
 9499 0a26 FB63     		str	r3, [r7, #60]
 9500              	.L368:
2086:main.c        ****                 {
 9501              		.loc 1 2086 0 is_stmt 0 discriminator 1
 9502 0a28 FB6B     		ldr	r3, [r7, #60]
 9503 0a2a 0B2B     		cmp	r3, #11
 9504 0a2c 7FF656AF 		bls	.L369
 9505              	.LBE64:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 207


 9506              	.LBE63:
2083:main.c        ****             {
 9507              		.loc 1 2083 0 is_stmt 1 discriminator 2
 9508 0a30 3B6C     		ldr	r3, [r7, #64]
 9509 0a32 0133     		adds	r3, r3, #1
 9510 0a34 3B64     		str	r3, [r7, #64]
 9511              	.L367:
2083:main.c        ****             {
 9512              		.loc 1 2083 0 is_stmt 0 discriminator 1
 9513 0a36 3B6C     		ldr	r3, [r7, #64]
 9514 0a38 0A2B     		cmp	r3, #10
 9515 0a3a 7FF645AF 		bls	.L370
 9516              	.L366:
 9517              	.LBE62:
2081:main.c        ****         {
 9518              		.loc 1 2081 0 is_stmt 1
 9519 0a3e 7A6C     		ldr	r2, [r7, #68]
 9520 0a40 7B6B     		ldr	r3, [r7, #52]
 9521 0a42 9A42     		cmp	r2, r3
 9522 0a44 FFF43DAF 		bcc	.L371
2107:main.c        ****                 }
2108:main.c        ****                 
2109:main.c        ****             }
2110:main.c        ****         }
2111:main.c        ****                         
2112:main.c        ****         
2113:main.c        ****         messageArraySize = currentFloat;
 9523              		.loc 1 2113 0
 9524 0a48 154B     		ldr	r3, .L393+28
 9525 0a4a 1B68     		ldr	r3, [r3]
 9526 0a4c 9AB2     		uxth	r2, r3
 9527 0a4e 154B     		ldr	r3, .L393+32
 9528 0a50 1A80     		strh	r2, [r3]	@ movhi
2114:main.c        ****                     
2115:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 9529              		.loc 1 2115 0
 9530 0a52 144B     		ldr	r3, .L393+32
 9531 0a54 1B88     		ldrh	r3, [r3]
 9532 0a56 842B     		cmp	r3, #132
 9533 0a58 0ED0     		beq	.L372
2116:main.c        ****         {
2117:main.c        ****             //error state
2118:main.c        ****             SPI_errors++;
 9534              		.loc 1 2118 0
 9535 0a5a 134B     		ldr	r3, .L393+36
 9536 0a5c 1B68     		ldr	r3, [r3]
 9537 0a5e 0133     		adds	r3, r3, #1
 9538 0a60 114A     		ldr	r2, .L393+36
 9539 0a62 1360     		str	r3, [r2]
2119:main.c        ****             sysexMessageInProgress = 0;
 9540              		.loc 1 2119 0
 9541 0a64 114B     		ldr	r3, .L393+40
 9542 0a66 0022     		movs	r2, #0
 9543 0a68 1A70     		strb	r2, [r3]
2120:main.c        ****            // sysexPointer = 0;
2121:main.c        ****             sendingMessage = 0;
 9544              		.loc 1 2121 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 208


 9545 0a6a 114B     		ldr	r3, .L393+44
 9546 0a6c 0022     		movs	r2, #0
 9547 0a6e 1A70     		strb	r2, [r3]
2122:main.c        ****             parseThatMF = 0;
 9548              		.loc 1 2122 0
 9549 0a70 104B     		ldr	r3, .L393+48
 9550 0a72 0022     		movs	r2, #0
 9551 0a74 1A70     		strb	r2, [r3]
 9552 0a76 D1E1     		b	.L362
 9553              	.L372:
2123:main.c        ****         } 
2124:main.c        ****         else 
2125:main.c        ****         {
2126:main.c        ****             sysexMessageInProgress = 0;
 9554              		.loc 1 2126 0
 9555 0a78 0C4B     		ldr	r3, .L393+40
 9556 0a7a 0022     		movs	r2, #0
 9557 0a7c 1A70     		strb	r2, [r3]
2127:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2128:main.c        ****             
2129:main.c        ****             displayCurrentPresetNameAndCopedent();
 9558              		.loc 1 2129 0
 9559 0a7e FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 9560 0a82 CBE1     		b	.L362
 9561              	.L394:
 9562              		.align	2
 9563              	.L393:
 9564 0a84 00000000 		.word	sysexReadPointer
 9565 0a88 00000000 		.word	sysexBuffer
 9566 0a8c 00000000 		.word	copedentNumberToWrite
 9567 0a90 00000000 		.word	copedentNamesArray
 9568 0a94 00000000 		.word	checkBase
 9569 0a98 00000000 		.word	checkStatus
 9570 0a9c 00000000 		.word	copedent
 9571 0aa0 00000000 		.word	currentFloat
 9572 0aa4 00000000 		.word	messageArraySize
 9573 0aa8 00000000 		.word	SPI_errors
 9574 0aac 00000000 		.word	sysexMessageInProgress
 9575 0ab0 00000000 		.word	sendingMessage
 9576 0ab4 00000000 		.word	parseThatMF
 9577              	.L363:
 9578              	.LBE60:
2130:main.c        ****         }
2131:main.c        ****     }
2132:main.c        ****     
2133:main.c        ****     
2134:main.c        ****     else if (sysexBuffer[sysexReadPointer & sysexPointerMask] == 3) //it's a real-time parameter ch
 9579              		.loc 1 2134 0
 9580 0ab8 584B     		ldr	r3, .L395
 9581 0aba 1B68     		ldr	r3, [r3]
 9582 0abc 40F2FF72 		movw	r2, #2047
 9583 0ac0 1340     		ands	r3, r3, r2
 9584 0ac2 574A     		ldr	r2, .L395+4
 9585 0ac4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9586 0ac6 032B     		cmp	r3, #3
 9587 0ac8 40F0BA80 		bne	.L374
 9588              	.LBB66:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 209


2135:main.c        ****     {
2136:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 9589              		.loc 1 2136 0
 9590 0acc 554B     		ldr	r3, .L395+8
 9591 0ace 0122     		movs	r2, #1
 9592 0ad0 1A70     		strb	r2, [r3]
2137:main.c        ****         union breakFloat theVal;
2138:main.c        ****         uint32_t i = (2+messageStart);
 9593              		.loc 1 2138 0
 9594 0ad2 BB6B     		ldr	r3, [r7, #56]
 9595 0ad4 0233     		adds	r3, r3, #2
 9596 0ad6 FB61     		str	r3, [r7, #28]
2139:main.c        ****         
2140:main.c        ****         //get the parameter ID
2141:main.c        ****         theVal.u32 = 0;
 9597              		.loc 1 2141 0
 9598 0ad8 0023     		movs	r3, #0
 9599 0ada 7B60     		str	r3, [r7, #4]
2142:main.c        ****         theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 9600              		.loc 1 2142 0
 9601 0adc 7B68     		ldr	r3, [r7, #4]
 9602 0ade 40F2FF71 		movw	r1, #2047
 9603 0ae2 FA69     		ldr	r2, [r7, #28]
 9604 0ae4 0A40     		ands	r2, r2, r1
 9605 0ae6 4E49     		ldr	r1, .L395+4
 9606 0ae8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9607 0aea 1207     		lsls	r2, r2, #28
 9608 0aec 1343     		orrs	r3, r3, r2
 9609 0aee 7B60     		str	r3, [r7, #4]
2143:main.c        ****         theVal.u32 |= (sysexBuffer[(i+1) & sysexPointerMask] << 21);
 9610              		.loc 1 2143 0
 9611 0af0 7B68     		ldr	r3, [r7, #4]
 9612 0af2 FA69     		ldr	r2, [r7, #28]
 9613 0af4 0132     		adds	r2, r2, #1
 9614 0af6 40F2FF71 		movw	r1, #2047
 9615 0afa 0A40     		ands	r2, r2, r1
 9616 0afc 4849     		ldr	r1, .L395+4
 9617 0afe 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9618 0b00 5205     		lsls	r2, r2, #21
 9619 0b02 1343     		orrs	r3, r3, r2
 9620 0b04 7B60     		str	r3, [r7, #4]
2144:main.c        ****         theVal.u32 |= (sysexBuffer[(i+2) & sysexPointerMask] << 14);
 9621              		.loc 1 2144 0
 9622 0b06 7B68     		ldr	r3, [r7, #4]
 9623 0b08 FA69     		ldr	r2, [r7, #28]
 9624 0b0a 0232     		adds	r2, r2, #2
 9625 0b0c 40F2FF71 		movw	r1, #2047
 9626 0b10 0A40     		ands	r2, r2, r1
 9627 0b12 4349     		ldr	r1, .L395+4
 9628 0b14 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9629 0b16 9203     		lsls	r2, r2, #14
 9630 0b18 1343     		orrs	r3, r3, r2
 9631 0b1a 7B60     		str	r3, [r7, #4]
2145:main.c        ****         theVal.u32 |= (sysexBuffer[(i+3) & sysexPointerMask] << 7);
 9632              		.loc 1 2145 0
 9633 0b1c 7B68     		ldr	r3, [r7, #4]
 9634 0b1e FA69     		ldr	r2, [r7, #28]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 210


 9635 0b20 0332     		adds	r2, r2, #3
 9636 0b22 40F2FF71 		movw	r1, #2047
 9637 0b26 0A40     		ands	r2, r2, r1
 9638 0b28 3D49     		ldr	r1, .L395+4
 9639 0b2a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9640 0b2c D201     		lsls	r2, r2, #7
 9641 0b2e 1343     		orrs	r3, r3, r2
 9642 0b30 7B60     		str	r3, [r7, #4]
2146:main.c        ****         theVal.u32 |= (sysexBuffer[(i+4) & sysexPointerMask] & 127);
 9643              		.loc 1 2146 0
 9644 0b32 7A68     		ldr	r2, [r7, #4]
 9645 0b34 FB69     		ldr	r3, [r7, #28]
 9646 0b36 0433     		adds	r3, r3, #4
 9647 0b38 40F2FF71 		movw	r1, #2047
 9648 0b3c 0B40     		ands	r3, r3, r1
 9649 0b3e 3849     		ldr	r1, .L395+4
 9650 0b40 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9651 0b42 03F07F03 		and	r3, r3, #127
 9652 0b46 1343     		orrs	r3, r3, r2
 9653 0b48 7B60     		str	r3, [r7, #4]
2147:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 9654              		.loc 1 2147 0
 9655 0b4a 7B68     		ldr	r3, [r7, #4]	@ float
 9656 0b4c 1846     		mov	r0, r3
 9657 0b4e FFF7FEFF 		bl	roundf
 9658 0b52 0346     		mov	r3, r0
 9659 0b54 1846     		mov	r0, r3
 9660 0b56 FFF7FEFF 		bl	__aeabi_f2uiz
 9661 0b5a 0346     		mov	r3, r0
 9662 0b5c 7B83     		strh	r3, [r7, #26]	@ movhi
2148:main.c        ****         singleParamToUpdateHigh = (roundedIndex << 8);
 9663              		.loc 1 2148 0
 9664 0b5e 324B     		ldr	r3, .L395+12
 9665 0b60 0022     		movs	r2, #0
 9666 0b62 1A70     		strb	r2, [r3]
2149:main.c        ****         singleParamToUpdateLow = roundedIndex & 0xff;
 9667              		.loc 1 2149 0
 9668 0b64 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 9669 0b66 DAB2     		uxtb	r2, r3
 9670 0b68 304B     		ldr	r3, .L395+16
 9671 0b6a 1A70     		strb	r2, [r3]
2150:main.c        ****         
2151:main.c        ****         i = (i+5);
 9672              		.loc 1 2151 0
 9673 0b6c FB69     		ldr	r3, [r7, #28]
 9674 0b6e 0533     		adds	r3, r3, #5
 9675 0b70 FB61     		str	r3, [r7, #28]
2152:main.c        ****         
2153:main.c        ****         //get the parameter value
2154:main.c        ****         theVal.u32 = 0;
 9676              		.loc 1 2154 0
 9677 0b72 0023     		movs	r3, #0
 9678 0b74 7B60     		str	r3, [r7, #4]
2155:main.c        ****         theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 9679              		.loc 1 2155 0
 9680 0b76 7B68     		ldr	r3, [r7, #4]
 9681 0b78 40F2FF71 		movw	r1, #2047
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 211


 9682 0b7c FA69     		ldr	r2, [r7, #28]
 9683 0b7e 0A40     		ands	r2, r2, r1
 9684 0b80 2749     		ldr	r1, .L395+4
 9685 0b82 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9686 0b84 1207     		lsls	r2, r2, #28
 9687 0b86 1343     		orrs	r3, r3, r2
 9688 0b88 7B60     		str	r3, [r7, #4]
2156:main.c        ****         theVal.u32 |= (sysexBuffer[(i+1)& sysexPointerMask] << 21);
 9689              		.loc 1 2156 0
 9690 0b8a 7B68     		ldr	r3, [r7, #4]
 9691 0b8c FA69     		ldr	r2, [r7, #28]
 9692 0b8e 0132     		adds	r2, r2, #1
 9693 0b90 40F2FF71 		movw	r1, #2047
 9694 0b94 0A40     		ands	r2, r2, r1
 9695 0b96 2249     		ldr	r1, .L395+4
 9696 0b98 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9697 0b9a 5205     		lsls	r2, r2, #21
 9698 0b9c 1343     		orrs	r3, r3, r2
 9699 0b9e 7B60     		str	r3, [r7, #4]
2157:main.c        ****         theVal.u32 |= (sysexBuffer[(i+2)& sysexPointerMask] << 14);
 9700              		.loc 1 2157 0
 9701 0ba0 7B68     		ldr	r3, [r7, #4]
 9702 0ba2 FA69     		ldr	r2, [r7, #28]
 9703 0ba4 0232     		adds	r2, r2, #2
 9704 0ba6 40F2FF71 		movw	r1, #2047
 9705 0baa 0A40     		ands	r2, r2, r1
 9706 0bac 1C49     		ldr	r1, .L395+4
 9707 0bae 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9708 0bb0 9203     		lsls	r2, r2, #14
 9709 0bb2 1343     		orrs	r3, r3, r2
 9710 0bb4 7B60     		str	r3, [r7, #4]
2158:main.c        ****         theVal.u32 |= (sysexBuffer[(i+3)& sysexPointerMask] << 7);
 9711              		.loc 1 2158 0
 9712 0bb6 7B68     		ldr	r3, [r7, #4]
 9713 0bb8 FA69     		ldr	r2, [r7, #28]
 9714 0bba 0332     		adds	r2, r2, #3
 9715 0bbc 40F2FF71 		movw	r1, #2047
 9716 0bc0 0A40     		ands	r2, r2, r1
 9717 0bc2 1749     		ldr	r1, .L395+4
 9718 0bc4 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9719 0bc6 D201     		lsls	r2, r2, #7
 9720 0bc8 1343     		orrs	r3, r3, r2
 9721 0bca 7B60     		str	r3, [r7, #4]
2159:main.c        ****         theVal.u32 |= (sysexBuffer[(i+4)& sysexPointerMask] & 127);
 9722              		.loc 1 2159 0
 9723 0bcc 7A68     		ldr	r2, [r7, #4]
 9724 0bce FB69     		ldr	r3, [r7, #28]
 9725 0bd0 0433     		adds	r3, r3, #4
 9726 0bd2 40F2FF71 		movw	r1, #2047
 9727 0bd6 0B40     		ands	r3, r3, r1
 9728 0bd8 1149     		ldr	r1, .L395+4
 9729 0bda CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9730 0bdc 03F07F03 		and	r3, r3, #127
 9731 0be0 1343     		orrs	r3, r3, r2
 9732 0be2 7B60     		str	r3, [r7, #4]
2160:main.c        ****         
2161:main.c        ****         uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 212


 9733              		.loc 1 2161 0
 9734 0be4 7B68     		ldr	r3, [r7, #4]	@ float
 9735 0be6 1249     		ldr	r1, .L395+20
 9736 0be8 1846     		mov	r0, r3
 9737 0bea FFF7FEFF 		bl	__aeabi_fmul
 9738 0bee 0346     		mov	r3, r0
 9739 0bf0 1846     		mov	r0, r3
 9740 0bf2 FFF7FEFF 		bl	__aeabi_f2uiz
 9741 0bf6 0346     		mov	r3, r0
 9742 0bf8 3B83     		strh	r3, [r7, #24]	@ movhi
2162:main.c        ****         singleParamValueHigh = intVal >> 8;
 9743              		.loc 1 2162 0
 9744 0bfa 3B8B     		ldrh	r3, [r7, #24]
 9745 0bfc 1B0A     		lsrs	r3, r3, #8
 9746 0bfe 9BB2     		uxth	r3, r3
 9747 0c00 DAB2     		uxtb	r2, r3
 9748 0c02 0C4B     		ldr	r3, .L395+24
 9749 0c04 1A70     		strb	r2, [r3]
2163:main.c        ****         singleParamValueLow = intVal & 0xff;
 9750              		.loc 1 2163 0
 9751 0c06 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 9752 0c08 DAB2     		uxtb	r2, r3
 9753 0c0a 0B4B     		ldr	r3, .L395+28
 9754 0c0c 1A70     		strb	r2, [r3]
2164:main.c        ****         
2165:main.c        ****         sysexMessageInProgress = 0;
 9755              		.loc 1 2165 0
 9756 0c0e 054B     		ldr	r3, .L395+8
 9757 0c10 0022     		movs	r2, #0
 9758 0c12 1A70     		strb	r2, [r3]
2166:main.c        ****         sendSingleParamUpdate = 1;
 9759              		.loc 1 2166 0
 9760 0c14 094B     		ldr	r3, .L395+32
 9761 0c16 0122     		movs	r2, #1
 9762 0c18 1A70     		strb	r2, [r3]
 9763              	.LBE66:
 9764 0c1a FFE0     		b	.L362
 9765              	.L396:
 9766              		.align	2
 9767              	.L395:
 9768 0c1c 00000000 		.word	sysexReadPointer
 9769 0c20 00000000 		.word	sysexBuffer
 9770 0c24 00000000 		.word	sysexMessageInProgress
 9771 0c28 00000000 		.word	singleParamToUpdateHigh
 9772 0c2c 00000000 		.word	singleParamToUpdateLow
 9773 0c30 00FF7F47 		.word	1199570688
 9774 0c34 00000000 		.word	singleParamValueHigh
 9775 0c38 00000000 		.word	singleParamValueLow
 9776 0c3c 00000000 		.word	sendSingleParamUpdate
 9777              	.L374:
2167:main.c        ****     }
2168:main.c        ****     
2169:main.c        ****      else if (sysexBuffer[sysexReadPointer & sysexPointerMask] == 4) //it's a real-time mapping cha
 9778              		.loc 1 2169 0
 9779 0c40 814B     		ldr	r3, .L397
 9780 0c42 1B68     		ldr	r3, [r3]
 9781 0c44 40F2FF72 		movw	r2, #2047
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 213


 9782 0c48 1340     		ands	r3, r3, r2
 9783 0c4a 804A     		ldr	r2, .L397+4
 9784 0c4c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9785 0c4e 042B     		cmp	r3, #4
 9786 0c50 40F0E480 		bne	.L362
 9787              	.LBB67:
2170:main.c        ****     {
2171:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 9788              		.loc 1 2171 0
 9789 0c54 7E4B     		ldr	r3, .L397+8
 9790 0c56 0122     		movs	r2, #1
 9791 0c58 1A70     		strb	r2, [r3]
2172:main.c        ****         union breakFloat theVal;
2173:main.c        ****         uint32_t i = (2 + messageStart);
 9792              		.loc 1 2173 0
 9793 0c5a BB6B     		ldr	r3, [r7, #56]
 9794 0c5c 0233     		adds	r3, r3, #2
 9795 0c5e 7B61     		str	r3, [r7, #20]
2174:main.c        ****         
2175:main.c        ****         //get the destination number
2176:main.c        ****         theVal.u32 = 0;
 9796              		.loc 1 2176 0
 9797 0c60 0023     		movs	r3, #0
 9798 0c62 3B60     		str	r3, [r7]
2177:main.c        ****         theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 9799              		.loc 1 2177 0
 9800 0c64 3B68     		ldr	r3, [r7]
 9801 0c66 40F2FF71 		movw	r1, #2047
 9802 0c6a 7A69     		ldr	r2, [r7, #20]
 9803 0c6c 0A40     		ands	r2, r2, r1
 9804 0c6e 7749     		ldr	r1, .L397+4
 9805 0c70 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9806 0c72 1207     		lsls	r2, r2, #28
 9807 0c74 1343     		orrs	r3, r3, r2
 9808 0c76 3B60     		str	r3, [r7]
2178:main.c        ****         theVal.u32 |= (sysexBuffer[(i+1) & sysexPointerMask] << 21);
 9809              		.loc 1 2178 0
 9810 0c78 3B68     		ldr	r3, [r7]
 9811 0c7a 7A69     		ldr	r2, [r7, #20]
 9812 0c7c 0132     		adds	r2, r2, #1
 9813 0c7e 40F2FF71 		movw	r1, #2047
 9814 0c82 0A40     		ands	r2, r2, r1
 9815 0c84 7149     		ldr	r1, .L397+4
 9816 0c86 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9817 0c88 5205     		lsls	r2, r2, #21
 9818 0c8a 1343     		orrs	r3, r3, r2
 9819 0c8c 3B60     		str	r3, [r7]
2179:main.c        ****         theVal.u32 |= (sysexBuffer[(i+2) & sysexPointerMask] << 14);
 9820              		.loc 1 2179 0
 9821 0c8e 3B68     		ldr	r3, [r7]
 9822 0c90 7A69     		ldr	r2, [r7, #20]
 9823 0c92 0232     		adds	r2, r2, #2
 9824 0c94 40F2FF71 		movw	r1, #2047
 9825 0c98 0A40     		ands	r2, r2, r1
 9826 0c9a 6C49     		ldr	r1, .L397+4
 9827 0c9c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9828 0c9e 9203     		lsls	r2, r2, #14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 214


 9829 0ca0 1343     		orrs	r3, r3, r2
 9830 0ca2 3B60     		str	r3, [r7]
2180:main.c        ****         theVal.u32 |= (sysexBuffer[(i+3) & sysexPointerMask] << 7);
 9831              		.loc 1 2180 0
 9832 0ca4 3B68     		ldr	r3, [r7]
 9833 0ca6 7A69     		ldr	r2, [r7, #20]
 9834 0ca8 0332     		adds	r2, r2, #3
 9835 0caa 40F2FF71 		movw	r1, #2047
 9836 0cae 0A40     		ands	r2, r2, r1
 9837 0cb0 6649     		ldr	r1, .L397+4
 9838 0cb2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9839 0cb4 D201     		lsls	r2, r2, #7
 9840 0cb6 1343     		orrs	r3, r3, r2
 9841 0cb8 3B60     		str	r3, [r7]
2181:main.c        ****         theVal.u32 |= (sysexBuffer[(i+4) & sysexPointerMask] & 127);
 9842              		.loc 1 2181 0
 9843 0cba 3A68     		ldr	r2, [r7]
 9844 0cbc 7B69     		ldr	r3, [r7, #20]
 9845 0cbe 0433     		adds	r3, r3, #4
 9846 0cc0 40F2FF71 		movw	r1, #2047
 9847 0cc4 0B40     		ands	r3, r3, r1
 9848 0cc6 6149     		ldr	r1, .L397+4
 9849 0cc8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9850 0cca 03F07F03 		and	r3, r3, #127
 9851 0cce 1343     		orrs	r3, r3, r2
 9852 0cd0 3B60     		str	r3, [r7]
2182:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 9853              		.loc 1 2182 0
 9854 0cd2 3B68     		ldr	r3, [r7]	@ float
 9855 0cd4 1846     		mov	r0, r3
 9856 0cd6 FFF7FEFF 		bl	roundf
 9857 0cda 0346     		mov	r3, r0
 9858 0cdc 1846     		mov	r0, r3
 9859 0cde FFF7FEFF 		bl	__aeabi_f2uiz
 9860 0ce2 0346     		mov	r3, r0
 9861 0ce4 7B82     		strh	r3, [r7, #18]	@ movhi
2183:main.c        ****         mappingArray[0] = (roundedIndex << 8);
 9862              		.loc 1 2183 0
 9863 0ce6 5B4B     		ldr	r3, .L397+12
 9864 0ce8 0022     		movs	r2, #0
 9865 0cea 1A70     		strb	r2, [r3]
2184:main.c        ****         mappingArray[1] = roundedIndex & 0xff;
 9866              		.loc 1 2184 0
 9867 0cec 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 9868 0cee DAB2     		uxtb	r2, r3
 9869 0cf0 584B     		ldr	r3, .L397+12
 9870 0cf2 5A70     		strb	r2, [r3, #1]
2185:main.c        ****         
2186:main.c        ****         
2187:main.c        ****         mappingArray[2] = sysexBuffer[(i+5) & sysexPointerMask]; //slot id
 9871              		.loc 1 2187 0
 9872 0cf4 7B69     		ldr	r3, [r7, #20]
 9873 0cf6 0533     		adds	r3, r3, #5
 9874 0cf8 40F2FF72 		movw	r2, #2047
 9875 0cfc 1340     		ands	r3, r3, r2
 9876 0cfe 534A     		ldr	r2, .L397+4
 9877 0d00 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 215


 9878 0d02 544B     		ldr	r3, .L397+12
 9879 0d04 9A70     		strb	r2, [r3, #2]
2188:main.c        ****         mappingArray[3] = sysexBuffer[(i+6) & sysexPointerMask]; //mapping change type
 9880              		.loc 1 2188 0
 9881 0d06 7B69     		ldr	r3, [r7, #20]
 9882 0d08 0633     		adds	r3, r3, #6
 9883 0d0a 40F2FF72 		movw	r2, #2047
 9884 0d0e 1340     		ands	r3, r3, r2
 9885 0d10 4E4A     		ldr	r2, .L397+4
 9886 0d12 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9887 0d14 4F4B     		ldr	r3, .L397+12
 9888 0d16 DA70     		strb	r2, [r3, #3]
2189:main.c        ****         
2190:main.c        ****         i = (i+7);
 9889              		.loc 1 2190 0
 9890 0d18 7B69     		ldr	r3, [r7, #20]
 9891 0d1a 0733     		adds	r3, r3, #7
 9892 0d1c 7B61     		str	r3, [r7, #20]
2191:main.c        ****         
2192:main.c        ****         //get the parameter value
2193:main.c        ****         theVal.u32 = 0;
 9893              		.loc 1 2193 0
 9894 0d1e 0023     		movs	r3, #0
 9895 0d20 3B60     		str	r3, [r7]
2194:main.c        ****         theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 9896              		.loc 1 2194 0
 9897 0d22 3B68     		ldr	r3, [r7]
 9898 0d24 40F2FF71 		movw	r1, #2047
 9899 0d28 7A69     		ldr	r2, [r7, #20]
 9900 0d2a 0A40     		ands	r2, r2, r1
 9901 0d2c 4749     		ldr	r1, .L397+4
 9902 0d2e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9903 0d30 1207     		lsls	r2, r2, #28
 9904 0d32 1343     		orrs	r3, r3, r2
 9905 0d34 3B60     		str	r3, [r7]
2195:main.c        ****         theVal.u32 |= (sysexBuffer[(i+1) & sysexPointerMask] << 21);
 9906              		.loc 1 2195 0
 9907 0d36 3B68     		ldr	r3, [r7]
 9908 0d38 7A69     		ldr	r2, [r7, #20]
 9909 0d3a 0132     		adds	r2, r2, #1
 9910 0d3c 40F2FF71 		movw	r1, #2047
 9911 0d40 0A40     		ands	r2, r2, r1
 9912 0d42 4249     		ldr	r1, .L397+4
 9913 0d44 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9914 0d46 5205     		lsls	r2, r2, #21
 9915 0d48 1343     		orrs	r3, r3, r2
 9916 0d4a 3B60     		str	r3, [r7]
2196:main.c        ****         theVal.u32 |= (sysexBuffer[(i+2) & sysexPointerMask] << 14);
 9917              		.loc 1 2196 0
 9918 0d4c 3B68     		ldr	r3, [r7]
 9919 0d4e 7A69     		ldr	r2, [r7, #20]
 9920 0d50 0232     		adds	r2, r2, #2
 9921 0d52 40F2FF71 		movw	r1, #2047
 9922 0d56 0A40     		ands	r2, r2, r1
 9923 0d58 3C49     		ldr	r1, .L397+4
 9924 0d5a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9925 0d5c 9203     		lsls	r2, r2, #14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 216


 9926 0d5e 1343     		orrs	r3, r3, r2
 9927 0d60 3B60     		str	r3, [r7]
2197:main.c        ****         theVal.u32 |= (sysexBuffer[(i+3) & sysexPointerMask] << 7);
 9928              		.loc 1 2197 0
 9929 0d62 3B68     		ldr	r3, [r7]
 9930 0d64 7A69     		ldr	r2, [r7, #20]
 9931 0d66 0332     		adds	r2, r2, #3
 9932 0d68 40F2FF71 		movw	r1, #2047
 9933 0d6c 0A40     		ands	r2, r2, r1
 9934 0d6e 3749     		ldr	r1, .L397+4
 9935 0d70 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9936 0d72 D201     		lsls	r2, r2, #7
 9937 0d74 1343     		orrs	r3, r3, r2
 9938 0d76 3B60     		str	r3, [r7]
2198:main.c        ****         theVal.u32 |= (sysexBuffer[(i+4) & sysexPointerMask] & 127);
 9939              		.loc 1 2198 0
 9940 0d78 3A68     		ldr	r2, [r7]
 9941 0d7a 7B69     		ldr	r3, [r7, #20]
 9942 0d7c 0433     		adds	r3, r3, #4
 9943 0d7e 40F2FF71 		movw	r1, #2047
 9944 0d82 0B40     		ands	r3, r3, r1
 9945 0d84 3149     		ldr	r1, .L397+4
 9946 0d86 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9947 0d88 03F07F03 		and	r3, r3, #127
 9948 0d8c 1343     		orrs	r3, r3, r2
 9949 0d8e 3B60     		str	r3, [r7]
2199:main.c        ****         if (mappingArray[3] == 0) // source id
 9950              		.loc 1 2199 0
 9951 0d90 304B     		ldr	r3, .L397+12
 9952 0d92 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9953 0d94 002B     		cmp	r3, #0
 9954 0d96 10D1     		bne	.L375
2200:main.c        ****         {
2201:main.c        ****             mappingArray[4] = 0;
 9955              		.loc 1 2201 0
 9956 0d98 2E4B     		ldr	r3, .L397+12
 9957 0d9a 0022     		movs	r2, #0
 9958 0d9c 1A71     		strb	r2, [r3, #4]
2202:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 9959              		.loc 1 2202 0
 9960 0d9e 3B68     		ldr	r3, [r7]	@ float
 9961 0da0 1846     		mov	r0, r3
 9962 0da2 FFF7FEFF 		bl	roundf
 9963 0da6 0346     		mov	r3, r0
 9964 0da8 1846     		mov	r0, r3
 9965 0daa FFF7FEFF 		bl	__aeabi_f2iz
 9966 0dae 0346     		mov	r3, r0
 9967 0db0 1BB2     		sxth	r3, r3
 9968 0db2 DAB2     		uxtb	r2, r3
 9969 0db4 274B     		ldr	r3, .L397+12
 9970 0db6 5A71     		strb	r2, [r3, #5]
 9971 0db8 2AE0     		b	.L376
 9972              	.L375:
2203:main.c        ****         }
2204:main.c        ****         else if (mappingArray[3] == 1) // amount
 9973              		.loc 1 2204 0
 9974 0dba 264B     		ldr	r3, .L397+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 217


 9975 0dbc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9976 0dbe 012B     		cmp	r3, #1
 9977 0dc0 16D1     		bne	.L377
 9978              	.LBB68:
2205:main.c        ****         {
2206:main.c        ****             int16_t intVal = (int16_t)(theVal.f * 32767.0f);
 9979              		.loc 1 2206 0
 9980 0dc2 3B68     		ldr	r3, [r7]	@ float
 9981 0dc4 2449     		ldr	r1, .L397+16
 9982 0dc6 1846     		mov	r0, r3
 9983 0dc8 FFF7FEFF 		bl	__aeabi_fmul
 9984 0dcc 0346     		mov	r3, r0
 9985 0dce 1846     		mov	r0, r3
 9986 0dd0 FFF7FEFF 		bl	__aeabi_f2iz
 9987 0dd4 0346     		mov	r3, r0
 9988 0dd6 3B82     		strh	r3, [r7, #16]	@ movhi
2207:main.c        ****             mappingArray[4] = intVal >> 8;
 9989              		.loc 1 2207 0
 9990 0dd8 B7F91030 		ldrsh	r3, [r7, #16]
 9991 0ddc 1B12     		asrs	r3, r3, #8
 9992 0dde 1BB2     		sxth	r3, r3
 9993 0de0 DAB2     		uxtb	r2, r3
 9994 0de2 1C4B     		ldr	r3, .L397+12
 9995 0de4 1A71     		strb	r2, [r3, #4]
2208:main.c        ****             mappingArray[5] = intVal & 0xff;
 9996              		.loc 1 2208 0
 9997 0de6 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 9998 0de8 DAB2     		uxtb	r2, r3
 9999 0dea 1A4B     		ldr	r3, .L397+12
 10000 0dec 5A71     		strb	r2, [r3, #5]
 10001              	.LBE68:
 10002 0dee 0FE0     		b	.L376
 10003              	.L377:
2209:main.c        ****         }
2210:main.c        ****         else // scalar source
2211:main.c        ****         {
2212:main.c        ****             mappingArray[4] = 0;
 10004              		.loc 1 2212 0
 10005 0df0 184B     		ldr	r3, .L397+12
 10006 0df2 0022     		movs	r2, #0
 10007 0df4 1A71     		strb	r2, [r3, #4]
2213:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 10008              		.loc 1 2213 0
 10009 0df6 3B68     		ldr	r3, [r7]	@ float
 10010 0df8 1846     		mov	r0, r3
 10011 0dfa FFF7FEFF 		bl	roundf
 10012 0dfe 0346     		mov	r3, r0
 10013 0e00 1846     		mov	r0, r3
 10014 0e02 FFF7FEFF 		bl	__aeabi_f2iz
 10015 0e06 0346     		mov	r3, r0
 10016 0e08 1BB2     		sxth	r3, r3
 10017 0e0a DAB2     		uxtb	r2, r3
 10018 0e0c 114B     		ldr	r3, .L397+12
 10019 0e0e 5A71     		strb	r2, [r3, #5]
 10020              	.L376:
2214:main.c        ****         }
2215:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 218


2216:main.c        ****         
2217:main.c        ****         sysexMessageInProgress = 0;
 10021              		.loc 1 2217 0
 10022 0e10 0F4B     		ldr	r3, .L397+8
 10023 0e12 0022     		movs	r2, #0
 10024 0e14 1A70     		strb	r2, [r3]
2218:main.c        ****         sendMappingChangeUpdate = 1;
 10025              		.loc 1 2218 0
 10026 0e16 114B     		ldr	r3, .L397+20
 10027 0e18 0122     		movs	r2, #1
 10028 0e1a 1A70     		strb	r2, [r3]
 10029              	.L362:
 10030              	.LBE67:
2219:main.c        ****     }
2220:main.c        **** 
2221:main.c        ****     parsingSysex = 0;
 10031              		.loc 1 2221 0
 10032 0e1c 104B     		ldr	r3, .L397+24
 10033 0e1e 0022     		movs	r2, #0
 10034 0e20 1A70     		strb	r2, [r3]
2222:main.c        ****     if (sysexMessageStartPointsReadPosition == sysexMessageStartPointsWritePosition)
 10035              		.loc 1 2222 0
 10036 0e22 104B     		ldr	r3, .L397+28
 10037 0e24 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10038 0e26 104B     		ldr	r3, .L397+32
 10039 0e28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10040 0e2a 9A42     		cmp	r2, r3
 10041 0e2c 03D1     		bne	.L378
2223:main.c        ****     {
2224:main.c        ****         parseThatMF = 0;
 10042              		.loc 1 2224 0
 10043 0e2e 0F4B     		ldr	r3, .L397+36
 10044 0e30 0022     		movs	r2, #0
 10045 0e32 1A70     		strb	r2, [r3]
2225:main.c        ****     }
2226:main.c        ****     else
2227:main.c        ****     {
2228:main.c        ****         moreToDo++;
2229:main.c        ****     }
2230:main.c        **** }
 10046              		.loc 1 2230 0
 10047 0e34 04E0     		b	.L386
 10048              	.L378:
2228:main.c        ****     }
 10049              		.loc 1 2228 0
 10050 0e36 0E4B     		ldr	r3, .L397+40
 10051 0e38 1B68     		ldr	r3, [r3]
 10052 0e3a 0133     		adds	r3, r3, #1
 10053 0e3c 0C4A     		ldr	r2, .L397+40
 10054 0e3e 1360     		str	r3, [r2]
 10055              	.L386:
 10056              		.loc 1 2230 0
 10057 0e40 00BF     		nop
 10058 0e42 6437     		adds	r7, r7, #100
 10059              		.cfi_def_cfa_offset 12
 10060 0e44 BD46     		mov	sp, r7
 10061              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 219


 10062              		@ sp needed
 10063 0e46 90BD     		pop	{r4, r7, pc}
 10064              	.L398:
 10065              		.align	2
 10066              	.L397:
 10067 0e48 00000000 		.word	sysexReadPointer
 10068 0e4c 00000000 		.word	sysexBuffer
 10069 0e50 00000000 		.word	sysexMessageInProgress
 10070 0e54 00000000 		.word	mappingArray
 10071 0e58 00FEFF46 		.word	1191181824
 10072 0e5c 00000000 		.word	sendMappingChangeUpdate
 10073 0e60 00000000 		.word	parsingSysex
 10074 0e64 00000000 		.word	sysexMessageStartPointsReadPosition
 10075 0e68 00000000 		.word	sysexMessageStartPointsWritePosition
 10076 0e6c 00000000 		.word	parseThatMF
 10077 0e70 00000000 		.word	moreToDo
 10078              		.cfi_endproc
 10079              	.LFE91:
 10080              		.size	parseSysex, .-parseSysex
 10081              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 10082              		.align	2
 10083              		.global	USB_callbackLocalMidiEvent
 10084              		.thumb
 10085              		.thumb_func
 10086              		.type	USB_callbackLocalMidiEvent, %function
 10087              	USB_callbackLocalMidiEvent:
 10088              	.LFB92:
2231:main.c        **** 
2232:main.c        **** 
2233:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2234:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2235:main.c        **** {   
 10089              		.loc 1 2235 0
 10090              		.cfi_startproc
 10091              		@ args = 0, pretend = 0, frame = 16
 10092              		@ frame_needed = 1, uses_anonymous_args = 0
 10093 0000 80B5     		push	{r7, lr}
 10094              		.cfi_def_cfa_offset 8
 10095              		.cfi_offset 7, -8
 10096              		.cfi_offset 14, -4
 10097 0002 84B0     		sub	sp, sp, #16
 10098              		.cfi_def_cfa_offset 24
 10099 0004 00AF     		add	r7, sp, #0
 10100              		.cfi_def_cfa_register 7
 10101 0006 0346     		mov	r3, r0
 10102 0008 3960     		str	r1, [r7]
 10103 000a FB71     		strb	r3, [r7, #7]
2236:main.c        ****     tempMIDI[0] = midiMsg[0];
 10104              		.loc 1 2236 0
 10105 000c 3B68     		ldr	r3, [r7]
 10106 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10107 0010 694B     		ldr	r3, .L411
 10108 0012 1A70     		strb	r2, [r3]
2237:main.c        ****     tempMIDI[1] = midiMsg[1];
 10109              		.loc 1 2237 0
 10110 0014 3B68     		ldr	r3, [r7]
 10111 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 220


 10112 0018 674B     		ldr	r3, .L411
 10113 001a 5A70     		strb	r2, [r3, #1]
2238:main.c        ****     tempMIDI[2] = midiMsg[2];
 10114              		.loc 1 2238 0
 10115 001c 3B68     		ldr	r3, [r7]
 10116 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 10117 0020 654B     		ldr	r3, .L411
 10118 0022 9A70     		strb	r2, [r3, #2]
2239:main.c        ****     tempMIDI[3] = midiMsg[3];
 10119              		.loc 1 2239 0
 10120 0024 3B68     		ldr	r3, [r7]
 10121 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 10122 0028 634B     		ldr	r3, .L411
 10123 002a DA70     		strb	r2, [r3, #3]
2240:main.c        ****     //check that we got here
2241:main.c        ****     
2242:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 10124              		.loc 1 2242 0
 10125 002c 634B     		ldr	r3, .L411+4
 10126 002e 1B78     		ldrb	r3, [r3]
 10127 0030 DBB2     		uxtb	r3, r3
 10128 0032 002B     		cmp	r3, #0
 10129 0034 00F0BD80 		beq	.L399
 10130              		.loc 1 2242 0 is_stmt 0 discriminator 1
 10131 0038 FFF7FEFF 		bl	USB_VBusPresent
 10132 003c 0346     		mov	r3, r0
 10133 003e 002B     		cmp	r3, #0
 10134 0040 00F0B780 		beq	.L399
2243:main.c        ****     {
2244:main.c        ****         if (receivingSysex)
 10135              		.loc 1 2244 0 is_stmt 1
 10136 0044 5E4B     		ldr	r3, .L411+8
 10137 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10138 0048 002B     		cmp	r3, #0
 10139 004a 36D0     		beq	.L401
 10140              	.LBB69:
2245:main.c        ****         {
2246:main.c        ****             for (int i = 0; i < 3; i++)
 10141              		.loc 1 2246 0
 10142 004c 0023     		movs	r3, #0
 10143 004e FB60     		str	r3, [r7, #12]
 10144 0050 2AE0     		b	.L402
 10145              	.L405:
2247:main.c        ****             {
2248:main.c        ****                 if (midiMsg[i] < 128)
 10146              		.loc 1 2248 0
 10147 0052 FB68     		ldr	r3, [r7, #12]
 10148 0054 3A68     		ldr	r2, [r7]
 10149 0056 1344     		add	r3, r3, r2
 10150 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10151 005a 5BB2     		sxtb	r3, r3
 10152 005c 002B     		cmp	r3, #0
 10153 005e 12DB     		blt	.L403
2249:main.c        ****                 {
2250:main.c        ****                     sysexBuffer[(sysexWritePointer++) & sysexPointerMask] = midiMsg[i];
 10154              		.loc 1 2250 0
 10155 0060 584B     		ldr	r3, .L411+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 221


 10156 0062 1B68     		ldr	r3, [r3]
 10157 0064 5A1C     		adds	r2, r3, #1
 10158 0066 5749     		ldr	r1, .L411+12
 10159 0068 0A60     		str	r2, [r1]
 10160 006a 40F2FF72 		movw	r2, #2047
 10161 006e 1340     		ands	r3, r3, r2
 10162 0070 FA68     		ldr	r2, [r7, #12]
 10163 0072 3968     		ldr	r1, [r7]
 10164 0074 0A44     		add	r2, r2, r1
 10165 0076 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 10166 0078 534A     		ldr	r2, .L411+16
 10167 007a D154     		strb	r1, [r2, r3]
2251:main.c        ****                     lastBufferStuff = masterTimer;
 10168              		.loc 1 2251 0
 10169 007c 534B     		ldr	r3, .L411+20
 10170 007e 1B68     		ldr	r3, [r3]
 10171 0080 534A     		ldr	r2, .L411+24
 10172 0082 1360     		str	r3, [r2]
 10173 0084 0DE0     		b	.L404
 10174              	.L403:
2252:main.c        ****                     
2253:main.c        ****                 }
2254:main.c        ****                 else
2255:main.c        ****                 {
2256:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 10175              		.loc 1 2256 0
 10176 0086 FB68     		ldr	r3, [r7, #12]
 10177 0088 3A68     		ldr	r2, [r7]
 10178 008a 1344     		add	r3, r3, r2
 10179 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10180 008e F72B     		cmp	r3, #247
 10181 0090 07D1     		bne	.L404
2257:main.c        ****                     {
2258:main.c        ****                         receivingSysex = 0;
 10182              		.loc 1 2258 0
 10183 0092 4B4B     		ldr	r3, .L411+8
 10184 0094 0022     		movs	r2, #0
 10185 0096 1A70     		strb	r2, [r3]
2259:main.c        ****                         lastEndReceive = masterTimer;
 10186              		.loc 1 2259 0
 10187 0098 4C4B     		ldr	r3, .L411+20
 10188 009a 1B68     		ldr	r3, [r3]
 10189 009c 4D4A     		ldr	r2, .L411+28
 10190 009e 1360     		str	r3, [r2]
2260:main.c        **** 
2261:main.c        ****                         //parseSysex();
2262:main.c        ****                         return;
 10191              		.loc 1 2262 0
 10192 00a0 87E0     		b	.L399
 10193              	.L404:
2246:main.c        ****             {
 10194              		.loc 1 2246 0 discriminator 2
 10195 00a2 FB68     		ldr	r3, [r7, #12]
 10196 00a4 0133     		adds	r3, r3, #1
 10197 00a6 FB60     		str	r3, [r7, #12]
 10198              	.L402:
2246:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 222


 10199              		.loc 1 2246 0 is_stmt 0 discriminator 1
 10200 00a8 FB68     		ldr	r3, [r7, #12]
 10201 00aa 022B     		cmp	r3, #2
 10202 00ac D1DD     		ble	.L405
 10203              	.LBE69:
2263:main.c        ****                      }
2264:main.c        ****                 }
2265:main.c        ****             }
2266:main.c        ****             masterTimer++;
 10204              		.loc 1 2266 0 is_stmt 1
 10205 00ae 474B     		ldr	r3, .L411+20
 10206 00b0 1B68     		ldr	r3, [r3]
 10207 00b2 0133     		adds	r3, r3, #1
 10208 00b4 454A     		ldr	r2, .L411+20
 10209 00b6 1360     		str	r3, [r2]
 10210 00b8 7BE0     		b	.L399
 10211              	.L401:
2267:main.c        ****         }
2268:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 10212              		.loc 1 2268 0
 10213 00ba 3B68     		ldr	r3, [r7]
 10214 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10215 00be F02B     		cmp	r3, #240
 10216 00c0 77D1     		bne	.L399
2269:main.c        ****         {
2270:main.c        ****             if (!parsingSysex)
 10217              		.loc 1 2270 0
 10218 00c2 454B     		ldr	r3, .L411+32
 10219 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10220 00c6 002B     		cmp	r3, #0
 10221 00c8 6ED1     		bne	.L407
2271:main.c        ****             {
2272:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 10222              		.loc 1 2272 0
 10223 00ca 3B68     		ldr	r3, [r7]
 10224 00cc 0133     		adds	r3, r3, #1
 10225 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10226 00d0 7E2B     		cmp	r3, #126
 10227 00d2 1CD1     		bne	.L408
2273:main.c        ****                 {
2274:main.c        ****                     parseThatMF = 1;
 10228              		.loc 1 2274 0
 10229 00d4 414B     		ldr	r3, .L411+36
 10230 00d6 0122     		movs	r2, #1
 10231 00d8 1A70     		strb	r2, [r3]
2275:main.c        ****                     prevLastParseCall = lastParseCall;
 10232              		.loc 1 2275 0
 10233 00da 414B     		ldr	r3, .L411+40
 10234 00dc 1B68     		ldr	r3, [r3]
 10235 00de 414A     		ldr	r2, .L411+44
 10236 00e0 1360     		str	r3, [r2]
2276:main.c        ****                     lastParseCall = masterTimer;
 10237              		.loc 1 2276 0
 10238 00e2 3A4B     		ldr	r3, .L411+20
 10239 00e4 1B68     		ldr	r3, [r3]
 10240 00e6 3E4A     		ldr	r2, .L411+40
 10241 00e8 1360     		str	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 223


2277:main.c        ****                     sysexReset = 1;
 10242              		.loc 1 2277 0
 10243 00ea 3F4B     		ldr	r3, .L411+48
 10244 00ec 0122     		movs	r2, #1
 10245 00ee 1A70     		strb	r2, [r3]
2278:main.c        ****                     sysexMessageStartPointsWritePosition++;
 10246              		.loc 1 2278 0
 10247 00f0 3E4B     		ldr	r3, .L411+52
 10248 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10249 00f4 0133     		adds	r3, r3, #1
 10250 00f6 DAB2     		uxtb	r2, r3
 10251 00f8 3C4B     		ldr	r3, .L411+52
 10252 00fa 1A70     		strb	r2, [r3]
2279:main.c        ****                     sysexMessageStartPoints[sysexMessageStartPointsWritePosition] = sysexWritePoint
 10253              		.loc 1 2279 0
 10254 00fc 3B4B     		ldr	r3, .L411+52
 10255 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10256 0100 1946     		mov	r1, r3
 10257 0102 304B     		ldr	r3, .L411+12
 10258 0104 1B68     		ldr	r3, [r3]
 10259 0106 3A4A     		ldr	r2, .L411+56
 10260 0108 42F82130 		str	r3, [r2, r1, lsl #2]
 10261 010c 4CE0     		b	.L407
 10262              	.L408:
2280:main.c        ****                     
2281:main.c        ****                     //sysexPointer = 0;
2282:main.c        ****                 }
2283:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2 || midiMsg[1] == 3 |
 10263              		.loc 1 2283 0
 10264 010e 3B68     		ldr	r3, [r7]
 10265 0110 0133     		adds	r3, r3, #1
 10266 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10267 0114 002B     		cmp	r3, #0
 10268 0116 13D0     		beq	.L409
 10269              		.loc 1 2283 0 is_stmt 0 discriminator 1
 10270 0118 3B68     		ldr	r3, [r7]
 10271 011a 0133     		adds	r3, r3, #1
 10272 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10273 011e 012B     		cmp	r3, #1
 10274 0120 0ED0     		beq	.L409
 10275              		.loc 1 2283 0 discriminator 2
 10276 0122 3B68     		ldr	r3, [r7]
 10277 0124 0133     		adds	r3, r3, #1
 10278 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10279 0128 022B     		cmp	r3, #2
 10280 012a 09D0     		beq	.L409
 10281              		.loc 1 2283 0 discriminator 3
 10282 012c 3B68     		ldr	r3, [r7]
 10283 012e 0133     		adds	r3, r3, #1
 10284 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10285 0132 032B     		cmp	r3, #3
 10286 0134 04D0     		beq	.L409
 10287              		.loc 1 2283 0 discriminator 4
 10288 0136 3B68     		ldr	r3, [r7]
 10289 0138 0133     		adds	r3, r3, #1
 10290 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10291 013c 042B     		cmp	r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 224


 10292 013e 33D1     		bne	.L407
 10293              	.L409:
2284:main.c        ****                 {
2285:main.c        ****                     receivingSysex = 1;
 10294              		.loc 1 2285 0 is_stmt 1
 10295 0140 1F4B     		ldr	r3, .L411+8
 10296 0142 0122     		movs	r2, #1
 10297 0144 1A70     		strb	r2, [r3]
2286:main.c        **** 
2287:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2288:main.c        ****                     if (sysexReset == 1)
 10298              		.loc 1 2288 0
 10299 0146 284B     		ldr	r3, .L411+48
 10300 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10301 014a 012B     		cmp	r3, #1
 10302 014c 1AD1     		bne	.L410
2289:main.c        ****                     {
2290:main.c        ****                         sysexBuffer[sysexWritePointer++ & sysexPointerMask] = midiMsg[1];
 10303              		.loc 1 2290 0
 10304 014e 1D4B     		ldr	r3, .L411+12
 10305 0150 1B68     		ldr	r3, [r3]
 10306 0152 5A1C     		adds	r2, r3, #1
 10307 0154 1B49     		ldr	r1, .L411+12
 10308 0156 0A60     		str	r2, [r1]
 10309 0158 40F2FF72 		movw	r2, #2047
 10310 015c 1340     		ands	r3, r3, r2
 10311 015e 3A68     		ldr	r2, [r7]
 10312 0160 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 10313 0162 194A     		ldr	r2, .L411+16
 10314 0164 D154     		strb	r1, [r2, r3]
2291:main.c        ****                         sysexBuffer[sysexWritePointer++ & sysexPointerMask] = midiMsg[2];
 10315              		.loc 1 2291 0
 10316 0166 174B     		ldr	r3, .L411+12
 10317 0168 1B68     		ldr	r3, [r3]
 10318 016a 5A1C     		adds	r2, r3, #1
 10319 016c 1549     		ldr	r1, .L411+12
 10320 016e 0A60     		str	r2, [r1]
 10321 0170 40F2FF72 		movw	r2, #2047
 10322 0174 1340     		ands	r3, r3, r2
 10323 0176 3A68     		ldr	r2, [r7]
 10324 0178 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 10325 017a 134A     		ldr	r2, .L411+16
 10326 017c D154     		strb	r1, [r2, r3]
2292:main.c        ****                         sysexReset = 0;
 10327              		.loc 1 2292 0
 10328 017e 1A4B     		ldr	r3, .L411+48
 10329 0180 0022     		movs	r2, #0
 10330 0182 1A70     		strb	r2, [r3]
 10331              	.L410:
2293:main.c        ****                     }
2294:main.c        ****                     prevLastBufferBegin[0] = lastBufferBegin[0] ;
 10332              		.loc 1 2294 0
 10333 0184 1B4B     		ldr	r3, .L411+60
 10334 0186 1B68     		ldr	r3, [r3]
 10335 0188 1B4A     		ldr	r2, .L411+64
 10336 018a 1360     		str	r3, [r2]
2295:main.c        ****                     prevLastBufferBegin[1] = lastBufferBegin[1];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 225


 10337              		.loc 1 2295 0
 10338 018c 194B     		ldr	r3, .L411+60
 10339 018e 5B68     		ldr	r3, [r3, #4]
 10340 0190 194A     		ldr	r2, .L411+64
 10341 0192 5360     		str	r3, [r2, #4]
2296:main.c        ****                     lastBufferBegin[0] = masterTimer;
 10342              		.loc 1 2296 0
 10343 0194 0D4B     		ldr	r3, .L411+20
 10344 0196 1B68     		ldr	r3, [r3]
 10345 0198 164A     		ldr	r2, .L411+60
 10346 019a 1360     		str	r3, [r2]
2297:main.c        ****                     lastBufferBegin[1] = midiMsg[1];
 10347              		.loc 1 2297 0
 10348 019c 3B68     		ldr	r3, [r7]
 10349 019e 0133     		adds	r3, r3, #1
 10350 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10351 01a2 1A46     		mov	r2, r3
 10352 01a4 134B     		ldr	r3, .L411+60
 10353 01a6 5A60     		str	r2, [r3, #4]
 10354              	.L407:
2298:main.c        ****                 }
2299:main.c        ****             }
2300:main.c        ****             masterTimer++;
 10355              		.loc 1 2300 0
 10356 01a8 084B     		ldr	r3, .L411+20
 10357 01aa 1B68     		ldr	r3, [r3]
 10358 01ac 0133     		adds	r3, r3, #1
 10359 01ae 074A     		ldr	r2, .L411+20
 10360 01b0 1360     		str	r3, [r2]
 10361              	.L399:
2301:main.c        ****         }
2302:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2303:main.c        ****     }
2304:main.c        **** }    
 10362              		.loc 1 2304 0
 10363 01b2 1037     		adds	r7, r7, #16
 10364              		.cfi_def_cfa_offset 8
 10365 01b4 BD46     		mov	sp, r7
 10366              		.cfi_def_cfa_register 13
 10367              		@ sp needed
 10368 01b6 80BD     		pop	{r7, pc}
 10369              	.L412:
 10370              		.align	2
 10371              	.L411:
 10372 01b8 00000000 		.word	tempMIDI
 10373 01bc 00000000 		.word	USB_active
 10374 01c0 00000000 		.word	receivingSysex
 10375 01c4 00000000 		.word	sysexWritePointer
 10376 01c8 00000000 		.word	sysexBuffer
 10377 01cc 00000000 		.word	masterTimer
 10378 01d0 00000000 		.word	lastBufferStuff
 10379 01d4 00000000 		.word	lastEndReceive
 10380 01d8 00000000 		.word	parsingSysex
 10381 01dc 00000000 		.word	parseThatMF
 10382 01e0 00000000 		.word	lastParseCall
 10383 01e4 00000000 		.word	prevLastParseCall
 10384 01e8 00000000 		.word	sysexReset
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 226


 10385 01ec 00000000 		.word	sysexMessageStartPointsWritePosition
 10386 01f0 00000000 		.word	sysexMessageStartPoints
 10387 01f4 00000000 		.word	lastBufferBegin
 10388 01f8 00000000 		.word	prevLastBufferBegin
 10389              		.cfi_endproc
 10390              	.LFE92:
 10391              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 10392              		.text
 10393              	.Letext0:
 10394              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10395              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10396              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 10397              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 10398              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10399              		.file 7 "oled.h"
 10400              		.file 8 "main.h"
 10401              		.file 9 "Generated_Source\\PSoC5/USB_midi.h"
 10402              		.file 10 "Generated_Source\\PSoC5/Em_EEPROM.h"
 10403              		.file 11 "Generated_Source\\PSoC5/I2C_1.h"
 10404              		.file 12 "Generated_Source\\PSoC5/core_cm3.h"
 10405              		.file 13 "Generated_Source\\PSoC5/Decoder_1.h"
 10406              		.file 14 "ui.h"
 10407              		.section	.debug_info,"",%progbits
 10408              	.Ldebug_info0:
 10409 0000 E8210000 		.4byte	0x21e8
 10410 0004 0400     		.2byte	0x4
 10411 0006 00000000 		.4byte	.Ldebug_abbrev0
 10412 000a 04       		.byte	0x4
 10413 000b 01       		.uleb128 0x1
 10414 000c 160B0000 		.4byte	.LASF359
 10415 0010 0C       		.byte	0xc
 10416 0011 AC0C0000 		.4byte	.LASF360
 10417 0015 C2080000 		.4byte	.LASF361
 10418 0019 00000000 		.4byte	.Ldebug_ranges0+0
 10419 001d 00000000 		.4byte	0
 10420 0021 00000000 		.4byte	.Ldebug_line0
 10421 0025 02       		.uleb128 0x2
 10422 0026 360F0000 		.4byte	.LASF0
 10423 002a 02       		.byte	0x2
 10424 002b 1B       		.byte	0x1b
 10425 002c 30000000 		.4byte	0x30
 10426 0030 03       		.uleb128 0x3
 10427 0031 01       		.byte	0x1
 10428 0032 06       		.byte	0x6
 10429 0033 54040000 		.4byte	.LASF2
 10430 0037 02       		.uleb128 0x2
 10431 0038 A3020000 		.4byte	.LASF1
 10432 003c 02       		.byte	0x2
 10433 003d 1D       		.byte	0x1d
 10434 003e 42000000 		.4byte	0x42
 10435 0042 03       		.uleb128 0x3
 10436 0043 01       		.byte	0x1
 10437 0044 08       		.byte	0x8
 10438 0045 EF040000 		.4byte	.LASF3
 10439 0049 02       		.uleb128 0x2
 10440 004a 64100000 		.4byte	.LASF4
 10441 004e 02       		.byte	0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 227


 10442 004f 29       		.byte	0x29
 10443 0050 54000000 		.4byte	0x54
 10444 0054 03       		.uleb128 0x3
 10445 0055 02       		.byte	0x2
 10446 0056 05       		.byte	0x5
 10447 0057 B1110000 		.4byte	.LASF5
 10448 005b 02       		.uleb128 0x2
 10449 005c 29060000 		.4byte	.LASF6
 10450 0060 02       		.byte	0x2
 10451 0061 2B       		.byte	0x2b
 10452 0062 66000000 		.4byte	0x66
 10453 0066 03       		.uleb128 0x3
 10454 0067 02       		.byte	0x2
 10455 0068 07       		.byte	0x7
 10456 0069 C7130000 		.4byte	.LASF7
 10457 006d 02       		.uleb128 0x2
 10458 006e 20140000 		.4byte	.LASF8
 10459 0072 02       		.byte	0x2
 10460 0073 3F       		.byte	0x3f
 10461 0074 78000000 		.4byte	0x78
 10462 0078 03       		.uleb128 0x3
 10463 0079 04       		.byte	0x4
 10464 007a 05       		.byte	0x5
 10465 007b 1C030000 		.4byte	.LASF9
 10466 007f 02       		.uleb128 0x2
 10467 0080 2D0C0000 		.4byte	.LASF10
 10468 0084 02       		.byte	0x2
 10469 0085 41       		.byte	0x41
 10470 0086 8A000000 		.4byte	0x8a
 10471 008a 03       		.uleb128 0x3
 10472 008b 04       		.byte	0x4
 10473 008c 07       		.byte	0x7
 10474 008d 62090000 		.4byte	.LASF11
 10475 0091 03       		.uleb128 0x3
 10476 0092 08       		.byte	0x8
 10477 0093 05       		.byte	0x5
 10478 0094 4A0C0000 		.4byte	.LASF12
 10479 0098 03       		.uleb128 0x3
 10480 0099 08       		.byte	0x8
 10481 009a 07       		.byte	0x7
 10482 009b 540F0000 		.4byte	.LASF13
 10483 009f 04       		.uleb128 0x4
 10484 00a0 04       		.byte	0x4
 10485 00a1 05       		.byte	0x5
 10486 00a2 696E7400 		.ascii	"int\000"
 10487 00a6 03       		.uleb128 0x3
 10488 00a7 04       		.byte	0x4
 10489 00a8 07       		.byte	0x7
 10490 00a9 810D0000 		.4byte	.LASF14
 10491 00ad 02       		.uleb128 0x2
 10492 00ae 20000000 		.4byte	.LASF15
 10493 00b2 03       		.byte	0x3
 10494 00b3 14       		.byte	0x14
 10495 00b4 25000000 		.4byte	0x25
 10496 00b8 02       		.uleb128 0x2
 10497 00b9 60040000 		.4byte	.LASF16
 10498 00bd 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 228


 10499 00be 18       		.byte	0x18
 10500 00bf 37000000 		.4byte	0x37
 10501 00c3 02       		.uleb128 0x2
 10502 00c4 13120000 		.4byte	.LASF17
 10503 00c8 03       		.byte	0x3
 10504 00c9 20       		.byte	0x20
 10505 00ca 49000000 		.4byte	0x49
 10506 00ce 02       		.uleb128 0x2
 10507 00cf 6B0F0000 		.4byte	.LASF18
 10508 00d3 03       		.byte	0x3
 10509 00d4 24       		.byte	0x24
 10510 00d5 5B000000 		.4byte	0x5b
 10511 00d9 02       		.uleb128 0x2
 10512 00da C9000000 		.4byte	.LASF19
 10513 00de 03       		.byte	0x3
 10514 00df 2C       		.byte	0x2c
 10515 00e0 6D000000 		.4byte	0x6d
 10516 00e4 02       		.uleb128 0x2
 10517 00e5 8D130000 		.4byte	.LASF20
 10518 00e9 03       		.byte	0x3
 10519 00ea 30       		.byte	0x30
 10520 00eb 7F000000 		.4byte	0x7f
 10521 00ef 05       		.uleb128 0x5
 10522 00f0 77110000 		.4byte	.LASF21
 10523 00f4 04       		.byte	0x4
 10524 00f5 E901     		.2byte	0x1e9
 10525 00f7 42000000 		.4byte	0x42
 10526 00fb 05       		.uleb128 0x5
 10527 00fc 9F140000 		.4byte	.LASF22
 10528 0100 04       		.byte	0x4
 10529 0101 EA01     		.2byte	0x1ea
 10530 0103 66000000 		.4byte	0x66
 10531 0107 05       		.uleb128 0x5
 10532 0108 1F010000 		.4byte	.LASF23
 10533 010c 04       		.byte	0x4
 10534 010d EB01     		.2byte	0x1eb
 10535 010f 8A000000 		.4byte	0x8a
 10536 0113 03       		.uleb128 0x3
 10537 0114 04       		.byte	0x4
 10538 0115 04       		.byte	0x4
 10539 0116 2C0D0000 		.4byte	.LASF24
 10540 011a 03       		.uleb128 0x3
 10541 011b 08       		.byte	0x8
 10542 011c 04       		.byte	0x4
 10543 011d A50C0000 		.4byte	.LASF25
 10544 0121 03       		.uleb128 0x3
 10545 0122 01       		.byte	0x1
 10546 0123 08       		.byte	0x8
 10547 0124 C1050000 		.4byte	.LASF26
 10548 0128 05       		.uleb128 0x5
 10549 0129 140E0000 		.4byte	.LASF27
 10550 012d 04       		.byte	0x4
 10551 012e 8B02     		.2byte	0x28b
 10552 0130 8A000000 		.4byte	0x8a
 10553 0134 05       		.uleb128 0x5
 10554 0135 F60F0000 		.4byte	.LASF28
 10555 0139 04       		.byte	0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 229


 10556 013a 9302     		.2byte	0x293
 10557 013c 40010000 		.4byte	0x140
 10558 0140 06       		.uleb128 0x6
 10559 0141 EF000000 		.4byte	0xef
 10560 0145 03       		.uleb128 0x3
 10561 0146 08       		.byte	0x8
 10562 0147 04       		.byte	0x4
 10563 0148 D70E0000 		.4byte	.LASF29
 10564 014c 03       		.uleb128 0x3
 10565 014d 04       		.byte	0x4
 10566 014e 07       		.byte	0x7
 10567 014f 3E000000 		.4byte	.LASF30
 10568 0153 07       		.uleb128 0x7
 10569 0154 1C       		.byte	0x1c
 10570 0155 05       		.byte	0x5
 10571 0156 1601     		.2byte	0x116
 10572 0158 C5010000 		.4byte	0x1c5
 10573 015c 08       		.uleb128 0x8
 10574 015d 68040000 		.4byte	.LASF31
 10575 0161 05       		.byte	0x5
 10576 0162 1B01     		.2byte	0x11b
 10577 0164 07010000 		.4byte	0x107
 10578 0168 00       		.byte	0
 10579 0169 08       		.uleb128 0x8
 10580 016a 69020000 		.4byte	.LASF32
 10581 016e 05       		.byte	0x5
 10582 016f 2001     		.2byte	0x120
 10583 0171 07010000 		.4byte	0x107
 10584 0175 04       		.byte	0x4
 10585 0176 08       		.uleb128 0x8
 10586 0177 70140000 		.4byte	.LASF33
 10587 017b 05       		.byte	0x5
 10588 017c 2301     		.2byte	0x123
 10589 017e 07010000 		.4byte	0x107
 10590 0182 08       		.byte	0x8
 10591 0183 08       		.uleb128 0x8
 10592 0184 47120000 		.4byte	.LASF34
 10593 0188 05       		.byte	0x5
 10594 0189 2601     		.2byte	0x126
 10595 018b 07010000 		.4byte	0x107
 10596 018f 0C       		.byte	0xc
 10597 0190 08       		.uleb128 0x8
 10598 0191 66120000 		.4byte	.LASF35
 10599 0195 05       		.byte	0x5
 10600 0196 2B01     		.2byte	0x12b
 10601 0198 07010000 		.4byte	0x107
 10602 019c 10       		.byte	0x10
 10603 019d 08       		.uleb128 0x8
 10604 019e 95020000 		.4byte	.LASF36
 10605 01a2 05       		.byte	0x5
 10606 01a3 2E01     		.2byte	0x12e
 10607 01a5 EF000000 		.4byte	0xef
 10608 01a9 14       		.byte	0x14
 10609 01aa 08       		.uleb128 0x8
 10610 01ab 8C0C0000 		.4byte	.LASF37
 10611 01af 05       		.byte	0x5
 10612 01b0 3301     		.2byte	0x133
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 230


 10613 01b2 EF000000 		.4byte	0xef
 10614 01b6 15       		.byte	0x15
 10615 01b7 08       		.uleb128 0x8
 10616 01b8 56020000 		.4byte	.LASF38
 10617 01bc 05       		.byte	0x5
 10618 01bd 3601     		.2byte	0x136
 10619 01bf 07010000 		.4byte	0x107
 10620 01c3 18       		.byte	0x18
 10621 01c4 00       		.byte	0
 10622 01c5 05       		.uleb128 0x5
 10623 01c6 4A090000 		.4byte	.LASF39
 10624 01ca 05       		.byte	0x5
 10625 01cb 3701     		.2byte	0x137
 10626 01cd 53010000 		.4byte	0x153
 10627 01d1 09       		.uleb128 0x9
 10628 01d2 01       		.byte	0x1
 10629 01d3 42000000 		.4byte	0x42
 10630 01d7 05       		.byte	0x5
 10631 01d8 5401     		.2byte	0x154
 10632 01da FD010000 		.4byte	0x1fd
 10633 01de 0A       		.uleb128 0xa
 10634 01df B4000000 		.4byte	.LASF40
 10635 01e3 00       		.byte	0
 10636 01e4 0A       		.uleb128 0xa
 10637 01e5 6C070000 		.4byte	.LASF41
 10638 01e9 01       		.byte	0x1
 10639 01ea 0A       		.uleb128 0xa
 10640 01eb 3C020000 		.4byte	.LASF42
 10641 01ef 02       		.byte	0x2
 10642 01f0 0A       		.uleb128 0xa
 10643 01f1 AB040000 		.4byte	.LASF43
 10644 01f5 03       		.byte	0x3
 10645 01f6 0A       		.uleb128 0xa
 10646 01f7 970A0000 		.4byte	.LASF44
 10647 01fb 04       		.byte	0x4
 10648 01fc 00       		.byte	0
 10649 01fd 05       		.uleb128 0x5
 10650 01fe A9010000 		.4byte	.LASF45
 10651 0202 05       		.byte	0x5
 10652 0203 5A01     		.2byte	0x15a
 10653 0205 D1010000 		.4byte	0x1d1
 10654 0209 06       		.uleb128 0x6
 10655 020a E4000000 		.4byte	0xe4
 10656 020e 06       		.uleb128 0x6
 10657 020f B8000000 		.4byte	0xb8
 10658 0213 06       		.uleb128 0x6
 10659 0214 CE000000 		.4byte	0xce
 10660 0218 0B       		.uleb128 0xb
 10661 0219 E4000000 		.4byte	0xe4
 10662 021d 28020000 		.4byte	0x228
 10663 0221 0C       		.uleb128 0xc
 10664 0222 4C010000 		.4byte	0x14c
 10665 0226 01       		.byte	0x1
 10666 0227 00       		.byte	0
 10667 0228 02       		.uleb128 0x2
 10668 0229 A1060000 		.4byte	.LASF46
 10669 022d 06       		.byte	0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 231


 10670 022e 6C       		.byte	0x6c
 10671 022f A6000000 		.4byte	0xa6
 10672 0233 0D       		.uleb128 0xd
 10673 0234 C1040000 		.4byte	.LASF52
 10674 0238 01       		.byte	0x1
 10675 0239 42000000 		.4byte	0x42
 10676 023d 07       		.byte	0x7
 10677 023e 1D       		.byte	0x1d
 10678 023f 62020000 		.4byte	0x262
 10679 0243 0A       		.uleb128 0xa
 10680 0244 E00B0000 		.4byte	.LASF47
 10681 0248 00       		.byte	0
 10682 0249 0A       		.uleb128 0xa
 10683 024a EB030000 		.4byte	.LASF48
 10684 024e 01       		.byte	0x1
 10685 024f 0A       		.uleb128 0xa
 10686 0250 E3000000 		.4byte	.LASF49
 10687 0254 02       		.byte	0x2
 10688 0255 0A       		.uleb128 0xa
 10689 0256 F0070000 		.4byte	.LASF50
 10690 025a 03       		.byte	0x3
 10691 025b 0A       		.uleb128 0xa
 10692 025c A1010000 		.4byte	.LASF51
 10693 0260 04       		.byte	0x4
 10694 0261 00       		.byte	0
 10695 0262 0D       		.uleb128 0xd
 10696 0263 BD070000 		.4byte	.LASF53
 10697 0267 01       		.byte	0x1
 10698 0268 42000000 		.4byte	0x42
 10699 026c 08       		.byte	0x8
 10700 026d A3       		.byte	0xa3
 10701 026e 97020000 		.4byte	0x297
 10702 0272 0A       		.uleb128 0xa
 10703 0273 B2070000 		.4byte	.LASF54
 10704 0277 00       		.byte	0
 10705 0278 0A       		.uleb128 0xa
 10706 0279 AA050000 		.4byte	.LASF55
 10707 027d 01       		.byte	0x1
 10708 027e 0A       		.uleb128 0xa
 10709 027f 6E100000 		.4byte	.LASF56
 10710 0283 02       		.byte	0x2
 10711 0284 0A       		.uleb128 0xa
 10712 0285 11100000 		.4byte	.LASF57
 10713 0289 03       		.byte	0x3
 10714 028a 0A       		.uleb128 0xa
 10715 028b FD130000 		.4byte	.LASF58
 10716 028f 04       		.byte	0x4
 10717 0290 0A       		.uleb128 0xa
 10718 0291 C1020000 		.4byte	.LASF59
 10719 0295 05       		.byte	0x5
 10720 0296 00       		.byte	0
 10721 0297 0E       		.uleb128 0xe
 10722 0298 A70F0000 		.4byte	.LASF362
 10723 029c 04       		.byte	0x4
 10724 029d 01       		.byte	0x1
 10725 029e 97       		.byte	0x97
 10726 029f C1020000 		.4byte	0x2c1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 232


 10727 02a3 0F       		.uleb128 0xf
 10728 02a4 6600     		.ascii	"f\000"
 10729 02a6 01       		.byte	0x1
 10730 02a7 98       		.byte	0x98
 10731 02a8 13010000 		.4byte	0x113
 10732 02ac 0F       		.uleb128 0xf
 10733 02ad 6200     		.ascii	"b\000"
 10734 02af 01       		.byte	0x1
 10735 02b0 99       		.byte	0x99
 10736 02b1 C1020000 		.4byte	0x2c1
 10737 02b5 0F       		.uleb128 0xf
 10738 02b6 75333200 		.ascii	"u32\000"
 10739 02ba 01       		.byte	0x1
 10740 02bb 9A       		.byte	0x9a
 10741 02bc E4000000 		.4byte	0xe4
 10742 02c0 00       		.byte	0
 10743 02c1 0B       		.uleb128 0xb
 10744 02c2 B8000000 		.4byte	0xb8
 10745 02c6 D1020000 		.4byte	0x2d1
 10746 02ca 0C       		.uleb128 0xc
 10747 02cb 4C010000 		.4byte	0x14c
 10748 02cf 03       		.byte	0x3
 10749 02d0 00       		.byte	0
 10750 02d1 10       		.uleb128 0x10
 10751 02d2 6D617000 		.ascii	"map\000"
 10752 02d6 01       		.byte	0x1
 10753 02d7 3501     		.2byte	0x135
 10754 02d9 13010000 		.4byte	0x113
 10755 02dd 00000000 		.4byte	.LFB64
 10756 02e1 56000000 		.4byte	.LFE64-.LFB64
 10757 02e5 01       		.uleb128 0x1
 10758 02e6 9C       		.byte	0x9c
 10759 02e7 37030000 		.4byte	0x337
 10760 02eb 11       		.uleb128 0x11
 10761 02ec 7B050000 		.4byte	.LASF60
 10762 02f0 01       		.byte	0x1
 10763 02f1 3501     		.2byte	0x135
 10764 02f3 13010000 		.4byte	0x113
 10765 02f7 02       		.uleb128 0x2
 10766 02f8 91       		.byte	0x91
 10767 02f9 6C       		.sleb128 -20
 10768 02fa 11       		.uleb128 0x11
 10769 02fb 7D020000 		.4byte	.LASF61
 10770 02ff 01       		.byte	0x1
 10771 0300 3501     		.2byte	0x135
 10772 0302 13010000 		.4byte	0x113
 10773 0306 02       		.uleb128 0x2
 10774 0307 91       		.byte	0x91
 10775 0308 68       		.sleb128 -24
 10776 0309 11       		.uleb128 0x11
 10777 030a E00A0000 		.4byte	.LASF62
 10778 030e 01       		.byte	0x1
 10779 030f 3501     		.2byte	0x135
 10780 0311 13010000 		.4byte	0x113
 10781 0315 02       		.uleb128 0x2
 10782 0316 91       		.byte	0x91
 10783 0317 64       		.sleb128 -28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 233


 10784 0318 11       		.uleb128 0x11
 10785 0319 AF0A0000 		.4byte	.LASF63
 10786 031d 01       		.byte	0x1
 10787 031e 3501     		.2byte	0x135
 10788 0320 13010000 		.4byte	0x113
 10789 0324 02       		.uleb128 0x2
 10790 0325 91       		.byte	0x91
 10791 0326 60       		.sleb128 -32
 10792 0327 11       		.uleb128 0x11
 10793 0328 1E0D0000 		.4byte	.LASF64
 10794 032c 01       		.byte	0x1
 10795 032d 3501     		.2byte	0x135
 10796 032f 13010000 		.4byte	0x113
 10797 0333 02       		.uleb128 0x2
 10798 0334 91       		.byte	0x91
 10799 0335 00       		.sleb128 0
 10800 0336 00       		.byte	0
 10801 0337 12       		.uleb128 0x12
 10802 0338 A6140000 		.4byte	.LASF65
 10803 033c 01       		.byte	0x1
 10804 033d 3A01     		.2byte	0x13a
 10805 033f 13010000 		.4byte	0x113
 10806 0343 00000000 		.4byte	.LFB65
 10807 0347 64000000 		.4byte	.LFE65-.LFB65
 10808 034b 01       		.uleb128 0x1
 10809 034c 9C       		.byte	0x9c
 10810 034d 7F030000 		.4byte	0x37f
 10811 0351 11       		.uleb128 0x11
 10812 0352 7B050000 		.4byte	.LASF60
 10813 0356 01       		.byte	0x1
 10814 0357 3A01     		.2byte	0x13a
 10815 0359 13010000 		.4byte	0x113
 10816 035d 02       		.uleb128 0x2
 10817 035e 91       		.byte	0x91
 10818 035f 6C       		.sleb128 -20
 10819 0360 11       		.uleb128 0x11
 10820 0361 AF0A0000 		.4byte	.LASF63
 10821 0365 01       		.byte	0x1
 10822 0366 3A01     		.2byte	0x13a
 10823 0368 13010000 		.4byte	0x113
 10824 036c 02       		.uleb128 0x2
 10825 036d 91       		.byte	0x91
 10826 036e 68       		.sleb128 -24
 10827 036f 11       		.uleb128 0x11
 10828 0370 1E0D0000 		.4byte	.LASF64
 10829 0374 01       		.byte	0x1
 10830 0375 3A01     		.2byte	0x13a
 10831 0377 13010000 		.4byte	0x113
 10832 037b 02       		.uleb128 0x2
 10833 037c 91       		.byte	0x91
 10834 037d 64       		.sleb128 -28
 10835 037e 00       		.byte	0
 10836 037f 13       		.uleb128 0x13
 10837 0380 A6060000 		.4byte	.LASF363
 10838 0384 01       		.byte	0x1
 10839 0385 3F01     		.2byte	0x13f
 10840 0387 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 234


 10841 038b E8010000 		.4byte	.LFE66-.LFB66
 10842 038f 01       		.uleb128 0x1
 10843 0390 9C       		.byte	0x9c
 10844 0391 C8030000 		.4byte	0x3c8
 10845 0395 14       		.uleb128 0x14
 10846 0396 06000000 		.4byte	.LBB2
 10847 039a EA000000 		.4byte	.LBE2-.LBB2
 10848 039e B0030000 		.4byte	0x3b0
 10849 03a2 15       		.uleb128 0x15
 10850 03a3 6900     		.ascii	"i\000"
 10851 03a5 01       		.byte	0x1
 10852 03a6 4101     		.2byte	0x141
 10853 03a8 9F000000 		.4byte	0x9f
 10854 03ac 02       		.uleb128 0x2
 10855 03ad 91       		.byte	0x91
 10856 03ae 74       		.sleb128 -12
 10857 03af 00       		.byte	0
 10858 03b0 16       		.uleb128 0x16
 10859 03b1 F0000000 		.4byte	.LBB3
 10860 03b5 EC000000 		.4byte	.LBE3-.LBB3
 10861 03b9 15       		.uleb128 0x15
 10862 03ba 6900     		.ascii	"i\000"
 10863 03bc 01       		.byte	0x1
 10864 03bd 6501     		.2byte	0x165
 10865 03bf 9F000000 		.4byte	0x9f
 10866 03c3 02       		.uleb128 0x2
 10867 03c4 91       		.byte	0x91
 10868 03c5 70       		.sleb128 -16
 10869 03c6 00       		.byte	0
 10870 03c7 00       		.byte	0
 10871 03c8 17       		.uleb128 0x17
 10872 03c9 B2130000 		.4byte	.LASF73
 10873 03cd 01       		.byte	0x1
 10874 03ce 8901     		.2byte	0x189
 10875 03d0 00000000 		.4byte	.LFB67
 10876 03d4 18010000 		.4byte	.LFE67-.LFB67
 10877 03d8 01       		.uleb128 0x1
 10878 03d9 9C       		.byte	0x9c
 10879 03da 1E040000 		.4byte	0x41e
 10880 03de 16       		.uleb128 0x16
 10881 03df 06000000 		.4byte	.LBB4
 10882 03e3 EA000000 		.4byte	.LBE4-.LBB4
 10883 03e7 15       		.uleb128 0x15
 10884 03e8 6900     		.ascii	"i\000"
 10885 03ea 01       		.byte	0x1
 10886 03eb 8C01     		.2byte	0x18c
 10887 03ed 9F000000 		.4byte	0x9f
 10888 03f1 02       		.uleb128 0x2
 10889 03f2 91       		.byte	0x91
 10890 03f3 6C       		.sleb128 -20
 10891 03f4 16       		.uleb128 0x16
 10892 03f5 0C000000 		.4byte	.LBB5
 10893 03f9 D8000000 		.4byte	.LBE5-.LBB5
 10894 03fd 18       		.uleb128 0x18
 10895 03fe 84020000 		.4byte	.LASF66
 10896 0402 01       		.byte	0x1
 10897 0403 8F01     		.2byte	0x18f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 235


 10898 0405 13010000 		.4byte	0x113
 10899 0409 02       		.uleb128 0x2
 10900 040a 91       		.byte	0x91
 10901 040b 68       		.sleb128 -24
 10902 040c 18       		.uleb128 0x18
 10903 040d 7D110000 		.4byte	.LASF67
 10904 0411 01       		.byte	0x1
 10905 0412 9001     		.2byte	0x190
 10906 0414 13010000 		.4byte	0x113
 10907 0418 02       		.uleb128 0x2
 10908 0419 91       		.byte	0x91
 10909 041a 64       		.sleb128 -28
 10910 041b 00       		.byte	0
 10911 041c 00       		.byte	0
 10912 041d 00       		.byte	0
 10913 041e 19       		.uleb128 0x19
 10914 041f 270E0000 		.4byte	.LASF69
 10915 0423 01       		.byte	0x1
 10916 0424 9701     		.2byte	0x197
 10917 0426 00000000 		.4byte	.LFB68
 10918 042a 84000000 		.4byte	.LFE68-.LFB68
 10919 042e 01       		.uleb128 0x1
 10920 042f 9C       		.byte	0x9c
 10921 0430 12       		.uleb128 0x12
 10922 0431 40080000 		.4byte	.LASF68
 10923 0435 01       		.byte	0x1
 10924 0436 A601     		.2byte	0x1a6
 10925 0438 13010000 		.4byte	0x113
 10926 043c 00000000 		.4byte	.LFB69
 10927 0440 34000000 		.4byte	.LFE69-.LFB69
 10928 0444 01       		.uleb128 0x1
 10929 0445 9C       		.byte	0x9c
 10930 0446 58040000 		.4byte	0x458
 10931 044a 1A       		.uleb128 0x1a
 10932 044b 6600     		.ascii	"f\000"
 10933 044d 01       		.byte	0x1
 10934 044e A601     		.2byte	0x1a6
 10935 0450 13010000 		.4byte	0x113
 10936 0454 02       		.uleb128 0x2
 10937 0455 91       		.byte	0x91
 10938 0456 74       		.sleb128 -12
 10939 0457 00       		.byte	0
 10940 0458 19       		.uleb128 0x19
 10941 0459 F50B0000 		.4byte	.LASF70
 10942 045d 01       		.byte	0x1
 10943 045e AD01     		.2byte	0x1ad
 10944 0460 00000000 		.4byte	.LFB70
 10945 0464 7C000000 		.4byte	.LFE70-.LFB70
 10946 0468 01       		.uleb128 0x1
 10947 0469 9C       		.byte	0x9c
 10948 046a 19       		.uleb128 0x19
 10949 046b CF0D0000 		.4byte	.LASF71
 10950 046f 01       		.byte	0x1
 10951 0470 CA01     		.2byte	0x1ca
 10952 0472 00000000 		.4byte	.LFB71
 10953 0476 14000000 		.4byte	.LFE71-.LFB71
 10954 047a 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 236


 10955 047b 9C       		.byte	0x9c
 10956 047c 19       		.uleb128 0x19
 10957 047d BC0F0000 		.4byte	.LASF72
 10958 0481 01       		.byte	0x1
 10959 0482 D601     		.2byte	0x1d6
 10960 0484 00000000 		.4byte	.LFB72
 10961 0488 9C000000 		.4byte	.LFE72-.LFB72
 10962 048c 01       		.uleb128 0x1
 10963 048d 9C       		.byte	0x9c
 10964 048e 17       		.uleb128 0x17
 10965 048f A1040000 		.4byte	.LASF74
 10966 0493 01       		.byte	0x1
 10967 0494 E401     		.2byte	0x1e4
 10968 0496 00000000 		.4byte	.LFB73
 10969 049a 5C010000 		.4byte	.LFE73-.LFB73
 10970 049e 01       		.uleb128 0x1
 10971 049f 9C       		.byte	0x9c
 10972 04a0 BC040000 		.4byte	0x4bc
 10973 04a4 16       		.uleb128 0x16
 10974 04a5 5A000000 		.4byte	.LBB6
 10975 04a9 74000000 		.4byte	.LBE6-.LBB6
 10976 04ad 15       		.uleb128 0x15
 10977 04ae 6900     		.ascii	"i\000"
 10978 04b0 01       		.byte	0x1
 10979 04b1 EA01     		.2byte	0x1ea
 10980 04b3 9F000000 		.4byte	0x9f
 10981 04b7 02       		.uleb128 0x2
 10982 04b8 91       		.byte	0x91
 10983 04b9 74       		.sleb128 -12
 10984 04ba 00       		.byte	0
 10985 04bb 00       		.byte	0
 10986 04bc 19       		.uleb128 0x19
 10987 04bd F50D0000 		.4byte	.LASF75
 10988 04c1 01       		.byte	0x1
 10989 04c2 FB01     		.2byte	0x1fb
 10990 04c4 00000000 		.4byte	.LFB74
 10991 04c8 80000000 		.4byte	.LFE74-.LFB74
 10992 04cc 01       		.uleb128 0x1
 10993 04cd 9C       		.byte	0x9c
 10994 04ce 12       		.uleb128 0x12
 10995 04cf 9E030000 		.4byte	.LASF76
 10996 04d3 01       		.byte	0x1
 10997 04d4 0C02     		.2byte	0x20c
 10998 04d6 9F000000 		.4byte	0x9f
 10999 04da 00000000 		.4byte	.LFB75
 11000 04de A0220000 		.4byte	.LFE75-.LFB75
 11001 04e2 01       		.uleb128 0x1
 11002 04e3 9C       		.byte	0x9c
 11003 04e4 4D0A0000 		.4byte	0xa4d
 11004 04e8 18       		.uleb128 0x18
 11005 04e9 F10A0000 		.4byte	.LASF77
 11006 04ed 01       		.byte	0x1
 11007 04ee 3E02     		.2byte	0x23e
 11008 04f0 CE000000 		.4byte	0xce
 11009 04f4 03       		.uleb128 0x3
 11010 04f5 91       		.byte	0x91
 11011 04f6 DE7E     		.sleb128 -162
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 237


 11012 04f8 14       		.uleb128 0x14
 11013 04f9 E6010000 		.4byte	.LBB7
 11014 04fd 3E000000 		.4byte	.LBE7-.LBB7
 11015 0501 13050000 		.4byte	0x513
 11016 0505 15       		.uleb128 0x15
 11017 0506 6900     		.ascii	"i\000"
 11018 0508 01       		.byte	0x1
 11019 0509 3F02     		.2byte	0x23f
 11020 050b 9F000000 		.4byte	0x9f
 11021 050f 02       		.uleb128 0x2
 11022 0510 91       		.byte	0x91
 11023 0511 6C       		.sleb128 -20
 11024 0512 00       		.byte	0
 11025 0513 14       		.uleb128 0x14
 11026 0514 24020000 		.4byte	.LBB8
 11027 0518 E0010000 		.4byte	.LBE8-.LBB8
 11028 051c CF050000 		.4byte	0x5cf
 11029 0520 18       		.uleb128 0x18
 11030 0521 10050000 		.4byte	.LASF78
 11031 0525 01       		.byte	0x1
 11032 0526 4302     		.2byte	0x243
 11033 0528 9F000000 		.4byte	0x9f
 11034 052c 02       		.uleb128 0x2
 11035 052d 91       		.byte	0x91
 11036 052e 68       		.sleb128 -24
 11037 052f 14       		.uleb128 0x14
 11038 0530 2C020000 		.4byte	.LBB9
 11039 0534 5C000000 		.4byte	.LBE9-.LBB9
 11040 0538 4C050000 		.4byte	0x54c
 11041 053c 18       		.uleb128 0x18
 11042 053d B6120000 		.4byte	.LASF79
 11043 0541 01       		.byte	0x1
 11044 0542 4502     		.2byte	0x245
 11045 0544 9F000000 		.4byte	0x9f
 11046 0548 02       		.uleb128 0x2
 11047 0549 91       		.byte	0x91
 11048 054a 64       		.sleb128 -28
 11049 054b 00       		.byte	0
 11050 054c 16       		.uleb128 0x16
 11051 054d 88020000 		.4byte	.LBB10
 11052 0551 68010000 		.4byte	.LBE10-.LBB10
 11053 0555 15       		.uleb128 0x15
 11054 0556 6900     		.ascii	"i\000"
 11055 0558 01       		.byte	0x1
 11056 0559 4902     		.2byte	0x249
 11057 055b 9F000000 		.4byte	0x9f
 11058 055f 02       		.uleb128 0x2
 11059 0560 91       		.byte	0x91
 11060 0561 60       		.sleb128 -32
 11061 0562 16       		.uleb128 0x16
 11062 0563 90020000 		.4byte	.LBB11
 11063 0567 4C010000 		.4byte	.LBE11-.LBB11
 11064 056b 18       		.uleb128 0x18
 11065 056c 21050000 		.4byte	.LASF80
 11066 0570 01       		.byte	0x1
 11067 0571 4B02     		.2byte	0x24b
 11068 0573 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 238


 11069 0577 03       		.uleb128 0x3
 11070 0578 91       		.byte	0x91
 11071 0579 D87E     		.sleb128 -168
 11072 057b 16       		.uleb128 0x16
 11073 057c 9E020000 		.4byte	.LBB12
 11074 0580 3E010000 		.4byte	.LBE12-.LBB12
 11075 0584 15       		.uleb128 0x15
 11076 0585 6A00     		.ascii	"j\000"
 11077 0587 01       		.byte	0x1
 11078 0588 4C02     		.2byte	0x24c
 11079 058a 9F000000 		.4byte	0x9f
 11080 058e 02       		.uleb128 0x2
 11081 058f 91       		.byte	0x91
 11082 0590 5C       		.sleb128 -36
 11083 0591 16       		.uleb128 0x16
 11084 0592 0C030000 		.4byte	.LBB13
 11085 0596 BE000000 		.4byte	.LBE13-.LBB13
 11086 059a 18       		.uleb128 0x18
 11087 059b 45040000 		.4byte	.LASF81
 11088 059f 01       		.byte	0x1
 11089 05a0 4F02     		.2byte	0x24f
 11090 05a2 9F000000 		.4byte	0x9f
 11091 05a6 03       		.uleb128 0x3
 11092 05a7 91       		.byte	0x91
 11093 05a8 D47E     		.sleb128 -172
 11094 05aa 18       		.uleb128 0x18
 11095 05ab 4D140000 		.4byte	.LASF82
 11096 05af 01       		.byte	0x1
 11097 05b0 5002     		.2byte	0x250
 11098 05b2 CE000000 		.4byte	0xce
 11099 05b6 03       		.uleb128 0x3
 11100 05b7 91       		.byte	0x91
 11101 05b8 D27E     		.sleb128 -174
 11102 05ba 18       		.uleb128 0x18
 11103 05bb 730C0000 		.4byte	.LASF83
 11104 05bf 01       		.byte	0x1
 11105 05c0 5102     		.2byte	0x251
 11106 05c2 CE000000 		.4byte	0xce
 11107 05c6 03       		.uleb128 0x3
 11108 05c7 91       		.byte	0x91
 11109 05c8 D07E     		.sleb128 -176
 11110 05ca 00       		.byte	0
 11111 05cb 00       		.byte	0
 11112 05cc 00       		.byte	0
 11113 05cd 00       		.byte	0
 11114 05ce 00       		.byte	0
 11115 05cf 14       		.uleb128 0x14
 11116 05d0 04040000 		.4byte	.LBB14
 11117 05d4 A4000000 		.4byte	.LBE14-.LBB14
 11118 05d8 EA050000 		.4byte	0x5ea
 11119 05dc 15       		.uleb128 0x15
 11120 05dd 6900     		.ascii	"i\000"
 11121 05df 01       		.byte	0x1
 11122 05e0 5802     		.2byte	0x258
 11123 05e2 9F000000 		.4byte	0x9f
 11124 05e6 02       		.uleb128 0x2
 11125 05e7 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 239


 11126 05e8 58       		.sleb128 -40
 11127 05e9 00       		.byte	0
 11128 05ea 14       		.uleb128 0x14
 11129 05eb AC040000 		.4byte	.LBB15
 11130 05ef A6000000 		.4byte	.LBE15-.LBB15
 11131 05f3 05060000 		.4byte	0x605
 11132 05f7 15       		.uleb128 0x15
 11133 05f8 6900     		.ascii	"i\000"
 11134 05fa 01       		.byte	0x1
 11135 05fb 6002     		.2byte	0x260
 11136 05fd 9F000000 		.4byte	0x9f
 11137 0601 02       		.uleb128 0x2
 11138 0602 91       		.byte	0x91
 11139 0603 54       		.sleb128 -44
 11140 0604 00       		.byte	0
 11141 0605 14       		.uleb128 0x14
 11142 0606 52050000 		.4byte	.LBB16
 11143 060a 2C010000 		.4byte	.LBE16-.LBB16
 11144 060e 9C060000 		.4byte	0x69c
 11145 0612 15       		.uleb128 0x15
 11146 0613 6900     		.ascii	"i\000"
 11147 0615 01       		.byte	0x1
 11148 0616 6602     		.2byte	0x266
 11149 0618 9F000000 		.4byte	0x9f
 11150 061c 02       		.uleb128 0x2
 11151 061d 91       		.byte	0x91
 11152 061e 50       		.sleb128 -48
 11153 061f 14       		.uleb128 0x14
 11154 0620 5A050000 		.4byte	.LBB17
 11155 0624 34000000 		.4byte	.LBE17-.LBB17
 11156 0628 3A060000 		.4byte	0x63a
 11157 062c 15       		.uleb128 0x15
 11158 062d 6A00     		.ascii	"j\000"
 11159 062f 01       		.byte	0x1
 11160 0630 6802     		.2byte	0x268
 11161 0632 9F000000 		.4byte	0x9f
 11162 0636 02       		.uleb128 0x2
 11163 0637 91       		.byte	0x91
 11164 0638 4C       		.sleb128 -52
 11165 0639 00       		.byte	0
 11166 063a 14       		.uleb128 0x14
 11167 063b 8E050000 		.4byte	.LBB18
 11168 063f 5A000000 		.4byte	.LBE18-.LBB18
 11169 0643 6C060000 		.4byte	0x66c
 11170 0647 15       		.uleb128 0x15
 11171 0648 6A00     		.ascii	"j\000"
 11172 064a 01       		.byte	0x1
 11173 064b 6D02     		.2byte	0x26d
 11174 064d 9F000000 		.4byte	0x9f
 11175 0651 02       		.uleb128 0x2
 11176 0652 91       		.byte	0x91
 11177 0653 48       		.sleb128 -56
 11178 0654 16       		.uleb128 0x16
 11179 0655 96050000 		.4byte	.LBB19
 11180 0659 40000000 		.4byte	.LBE19-.LBB19
 11181 065d 15       		.uleb128 0x15
 11182 065e 6B00     		.ascii	"k\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 240


 11183 0660 01       		.byte	0x1
 11184 0661 6F02     		.2byte	0x26f
 11185 0663 9F000000 		.4byte	0x9f
 11186 0667 02       		.uleb128 0x2
 11187 0668 91       		.byte	0x91
 11188 0669 44       		.sleb128 -60
 11189 066a 00       		.byte	0
 11190 066b 00       		.byte	0
 11191 066c 16       		.uleb128 0x16
 11192 066d E8050000 		.4byte	.LBB20
 11193 0671 76000000 		.4byte	.LBE20-.LBB20
 11194 0675 15       		.uleb128 0x15
 11195 0676 6A00     		.ascii	"j\000"
 11196 0678 01       		.byte	0x1
 11197 0679 7402     		.2byte	0x274
 11198 067b 9F000000 		.4byte	0x9f
 11199 067f 02       		.uleb128 0x2
 11200 0680 91       		.byte	0x91
 11201 0681 40       		.sleb128 -64
 11202 0682 16       		.uleb128 0x16
 11203 0683 F0050000 		.4byte	.LBB21
 11204 0687 5C000000 		.4byte	.LBE21-.LBB21
 11205 068b 15       		.uleb128 0x15
 11206 068c 6B00     		.ascii	"k\000"
 11207 068e 01       		.byte	0x1
 11208 068f 7602     		.2byte	0x276
 11209 0691 9F000000 		.4byte	0x9f
 11210 0695 03       		.uleb128 0x3
 11211 0696 91       		.byte	0x91
 11212 0697 BC7F     		.sleb128 -68
 11213 0699 00       		.byte	0
 11214 069a 00       		.byte	0
 11215 069b 00       		.byte	0
 11216 069c 14       		.uleb128 0x14
 11217 069d 6A070000 		.4byte	.LBB22
 11218 06a1 42000000 		.4byte	.LBE22-.LBB22
 11219 06a5 B8060000 		.4byte	0x6b8
 11220 06a9 15       		.uleb128 0x15
 11221 06aa 7700     		.ascii	"w\000"
 11222 06ac 01       		.byte	0x1
 11223 06ad 9A02     		.2byte	0x29a
 11224 06af 9F000000 		.4byte	0x9f
 11225 06b3 03       		.uleb128 0x3
 11226 06b4 91       		.byte	0x91
 11227 06b5 B87F     		.sleb128 -72
 11228 06b7 00       		.byte	0
 11229 06b8 14       		.uleb128 0x14
 11230 06b9 38080000 		.4byte	.LBB23
 11231 06bd 94000000 		.4byte	.LBE23-.LBB23
 11232 06c1 D6060000 		.4byte	0x6d6
 11233 06c5 18       		.uleb128 0x18
 11234 06c6 0C0A0000 		.4byte	.LASF84
 11235 06ca 01       		.byte	0x1
 11236 06cb CC02     		.2byte	0x2cc
 11237 06cd B8000000 		.4byte	0xb8
 11238 06d1 03       		.uleb128 0x3
 11239 06d2 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 241


 11240 06d3 CF7E     		.sleb128 -177
 11241 06d5 00       		.byte	0
 11242 06d6 14       		.uleb128 0x14
 11243 06d7 C60A0000 		.4byte	.LBB24
 11244 06db 4C010000 		.4byte	.LBE24-.LBB24
 11245 06df 2C070000 		.4byte	0x72c
 11246 06e3 15       		.uleb128 0x15
 11247 06e4 6900     		.ascii	"i\000"
 11248 06e6 01       		.byte	0x1
 11249 06e7 1603     		.2byte	0x316
 11250 06e9 9F000000 		.4byte	0x9f
 11251 06ed 03       		.uleb128 0x3
 11252 06ee 91       		.byte	0x91
 11253 06ef B47F     		.sleb128 -76
 11254 06f1 16       		.uleb128 0x16
 11255 06f2 CE0A0000 		.4byte	.LBB25
 11256 06f6 30010000 		.4byte	.LBE25-.LBB25
 11257 06fa 18       		.uleb128 0x18
 11258 06fb E5100000 		.4byte	.LASF85
 11259 06ff 01       		.byte	0x1
 11260 0700 1803     		.2byte	0x318
 11261 0702 B8000000 		.4byte	0xb8
 11262 0706 03       		.uleb128 0x3
 11263 0707 91       		.byte	0x91
 11264 0708 A27E     		.sleb128 -222
 11265 070a 18       		.uleb128 0x18
 11266 070b 040A0000 		.4byte	.LASF86
 11267 070f 01       		.byte	0x1
 11268 0710 1903     		.2byte	0x319
 11269 0712 CE000000 		.4byte	0xce
 11270 0716 03       		.uleb128 0x3
 11271 0717 91       		.byte	0x91
 11272 0718 A07E     		.sleb128 -224
 11273 071a 18       		.uleb128 0x18
 11274 071b F6030000 		.4byte	.LASF87
 11275 071f 01       		.byte	0x1
 11276 0720 1A03     		.2byte	0x31a
 11277 0722 C3000000 		.4byte	0xc3
 11278 0726 03       		.uleb128 0x3
 11279 0727 91       		.byte	0x91
 11280 0728 9E7E     		.sleb128 -226
 11281 072a 00       		.byte	0
 11282 072b 00       		.byte	0
 11283 072c 14       		.uleb128 0x14
 11284 072d 680D0000 		.4byte	.LBB26
 11285 0731 2A020000 		.4byte	.LBE26-.LBB26
 11286 0735 4A070000 		.4byte	0x74a
 11287 0739 18       		.uleb128 0x18
 11288 073a 71000000 		.4byte	.LASF88
 11289 073e 01       		.byte	0x1
 11290 073f 7B03     		.2byte	0x37b
 11291 0741 C3000000 		.4byte	0xc3
 11292 0745 03       		.uleb128 0x3
 11293 0746 91       		.byte	0x91
 11294 0747 CC7E     		.sleb128 -180
 11295 0749 00       		.byte	0
 11296 074a 14       		.uleb128 0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 242


 11297 074b 76100000 		.4byte	.LBB27
 11298 074f C6020000 		.4byte	.LBE27-.LBB27
 11299 0753 7E070000 		.4byte	0x77e
 11300 0757 15       		.uleb128 0x15
 11301 0758 6900     		.ascii	"i\000"
 11302 075a 01       		.byte	0x1
 11303 075b C803     		.2byte	0x3c8
 11304 075d 9F000000 		.4byte	0x9f
 11305 0761 03       		.uleb128 0x3
 11306 0762 91       		.byte	0x91
 11307 0763 B07F     		.sleb128 -80
 11308 0765 16       		.uleb128 0x16
 11309 0766 B0110000 		.4byte	.LBB28
 11310 076a F4000000 		.4byte	.LBE28-.LBB28
 11311 076e 15       		.uleb128 0x15
 11312 076f 6A00     		.ascii	"j\000"
 11313 0771 01       		.byte	0x1
 11314 0772 D503     		.2byte	0x3d5
 11315 0774 9F000000 		.4byte	0x9f
 11316 0778 03       		.uleb128 0x3
 11317 0779 91       		.byte	0x91
 11318 077a AC7F     		.sleb128 -84
 11319 077c 00       		.byte	0
 11320 077d 00       		.byte	0
 11321 077e 14       		.uleb128 0x14
 11322 077f 44130000 		.4byte	.LBB29
 11323 0783 5A000000 		.4byte	.LBE29-.LBB29
 11324 0787 9A070000 		.4byte	0x79a
 11325 078b 15       		.uleb128 0x15
 11326 078c 6900     		.ascii	"i\000"
 11327 078e 01       		.byte	0x1
 11328 078f EB03     		.2byte	0x3eb
 11329 0791 9F000000 		.4byte	0x9f
 11330 0795 03       		.uleb128 0x3
 11331 0796 91       		.byte	0x91
 11332 0797 A87F     		.sleb128 -88
 11333 0799 00       		.byte	0
 11334 079a 14       		.uleb128 0x14
 11335 079b A2130000 		.4byte	.LBB30
 11336 079f F4000000 		.4byte	.LBE30-.LBB30
 11337 07a3 B6070000 		.4byte	0x7b6
 11338 07a7 15       		.uleb128 0x15
 11339 07a8 6900     		.ascii	"i\000"
 11340 07aa 01       		.byte	0x1
 11341 07ab F703     		.2byte	0x3f7
 11342 07ad 9F000000 		.4byte	0x9f
 11343 07b1 03       		.uleb128 0x3
 11344 07b2 91       		.byte	0x91
 11345 07b3 A47F     		.sleb128 -92
 11346 07b5 00       		.byte	0
 11347 07b6 14       		.uleb128 0x14
 11348 07b7 96140000 		.4byte	.LBB31
 11349 07bb 7C050000 		.4byte	.LBE31-.LBB31
 11350 07bf C6080000 		.4byte	0x8c6
 11351 07c3 15       		.uleb128 0x15
 11352 07c4 6900     		.ascii	"i\000"
 11353 07c6 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 243


 11354 07c7 0D04     		.2byte	0x40d
 11355 07c9 9F000000 		.4byte	0x9f
 11356 07cd 03       		.uleb128 0x3
 11357 07ce 91       		.byte	0x91
 11358 07cf A07F     		.sleb128 -96
 11359 07d1 16       		.uleb128 0x16
 11360 07d2 9E140000 		.4byte	.LBB32
 11361 07d6 5A050000 		.4byte	.LBE32-.LBB32
 11362 07da 18       		.uleb128 0x18
 11363 07db 0F110000 		.4byte	.LASF89
 11364 07df 01       		.byte	0x1
 11365 07e0 1104     		.2byte	0x411
 11366 07e2 13010000 		.4byte	0x113
 11367 07e6 03       		.uleb128 0x3
 11368 07e7 91       		.byte	0x91
 11369 07e8 9C7F     		.sleb128 -100
 11370 07ea 18       		.uleb128 0x18
 11371 07eb 850F0000 		.4byte	.LASF90
 11372 07ef 01       		.byte	0x1
 11373 07f0 2604     		.2byte	0x426
 11374 07f2 13010000 		.4byte	0x113
 11375 07f6 03       		.uleb128 0x3
 11376 07f7 91       		.byte	0x91
 11377 07f8 987F     		.sleb128 -104
 11378 07fa 18       		.uleb128 0x18
 11379 07fb 04120000 		.4byte	.LASF91
 11380 07ff 01       		.byte	0x1
 11381 0800 4E04     		.2byte	0x44e
 11382 0802 13010000 		.4byte	0x113
 11383 0806 03       		.uleb128 0x3
 11384 0807 91       		.byte	0x91
 11385 0808 C07E     		.sleb128 -192
 11386 080a 18       		.uleb128 0x18
 11387 080b 670D0000 		.4byte	.LASF92
 11388 080f 01       		.byte	0x1
 11389 0810 5004     		.2byte	0x450
 11390 0812 13010000 		.4byte	0x113
 11391 0816 03       		.uleb128 0x3
 11392 0817 91       		.byte	0x91
 11393 0818 BC7E     		.sleb128 -196
 11394 081a 18       		.uleb128 0x18
 11395 081b 15070000 		.4byte	.LASF93
 11396 081f 01       		.byte	0x1
 11397 0820 6604     		.2byte	0x466
 11398 0822 13010000 		.4byte	0x113
 11399 0826 03       		.uleb128 0x3
 11400 0827 91       		.byte	0x91
 11401 0828 B47E     		.sleb128 -204
 11402 082a 18       		.uleb128 0x18
 11403 082b 96110000 		.4byte	.LASF94
 11404 082f 01       		.byte	0x1
 11405 0830 6804     		.2byte	0x468
 11406 0832 13010000 		.4byte	0x113
 11407 0836 03       		.uleb128 0x3
 11408 0837 91       		.byte	0x91
 11409 0838 B07E     		.sleb128 -208
 11410 083a 14       		.uleb128 0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 244


 11411 083b 80170000 		.4byte	.LBB33
 11412 083f E2000000 		.4byte	.LBE33-.LBB33
 11413 0843 AA080000 		.4byte	0x8aa
 11414 0847 18       		.uleb128 0x18
 11415 0848 00000000 		.4byte	.LASF95
 11416 084c 01       		.byte	0x1
 11417 084d 3804     		.2byte	0x438
 11418 084f 13010000 		.4byte	0x113
 11419 0853 03       		.uleb128 0x3
 11420 0854 91       		.byte	0x91
 11421 0855 947F     		.sleb128 -108
 11422 0857 18       		.uleb128 0x18
 11423 0858 9C120000 		.4byte	.LASF96
 11424 085c 01       		.byte	0x1
 11425 085d 3904     		.2byte	0x439
 11426 085f 13010000 		.4byte	0x113
 11427 0863 03       		.uleb128 0x3
 11428 0864 91       		.byte	0x91
 11429 0865 907F     		.sleb128 -112
 11430 0867 18       		.uleb128 0x18
 11431 0868 54050000 		.4byte	.LASF97
 11432 086c 01       		.byte	0x1
 11433 086d 4804     		.2byte	0x448
 11434 086f 13010000 		.4byte	0x113
 11435 0873 03       		.uleb128 0x3
 11436 0874 91       		.byte	0x91
 11437 0875 C47E     		.sleb128 -188
 11438 0877 16       		.uleb128 0x16
 11439 0878 8C170000 		.4byte	.LBB34
 11440 087c 92000000 		.4byte	.LBE34-.LBB34
 11441 0880 15       		.uleb128 0x15
 11442 0881 6A00     		.ascii	"j\000"
 11443 0883 01       		.byte	0x1
 11444 0884 3C04     		.2byte	0x43c
 11445 0886 9F000000 		.4byte	0x9f
 11446 088a 03       		.uleb128 0x3
 11447 088b 91       		.byte	0x91
 11448 088c 8C7F     		.sleb128 -116
 11449 088e 16       		.uleb128 0x16
 11450 088f AC170000 		.4byte	.LBB35
 11451 0893 66000000 		.4byte	.LBE35-.LBB35
 11452 0897 18       		.uleb128 0x18
 11453 0898 6F0E0000 		.4byte	.LASF98
 11454 089c 01       		.byte	0x1
 11455 089d 3E04     		.2byte	0x43e
 11456 089f 13010000 		.4byte	0x113
 11457 08a3 03       		.uleb128 0x3
 11458 08a4 91       		.byte	0x91
 11459 08a5 C87E     		.sleb128 -184
 11460 08a7 00       		.byte	0
 11461 08a8 00       		.byte	0
 11462 08a9 00       		.byte	0
 11463 08aa 16       		.uleb128 0x16
 11464 08ab E4180000 		.4byte	.LBB36
 11465 08af 3A000000 		.4byte	.LBE36-.LBB36
 11466 08b3 18       		.uleb128 0x18
 11467 08b4 ED000000 		.4byte	.LASF99
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 245


 11468 08b8 01       		.byte	0x1
 11469 08b9 5A04     		.2byte	0x45a
 11470 08bb 13010000 		.4byte	0x113
 11471 08bf 03       		.uleb128 0x3
 11472 08c0 91       		.byte	0x91
 11473 08c1 B87E     		.sleb128 -200
 11474 08c3 00       		.byte	0
 11475 08c4 00       		.byte	0
 11476 08c5 00       		.byte	0
 11477 08c6 14       		.uleb128 0x14
 11478 08c7 201B0000 		.4byte	.LBB37
 11479 08cb 4E000000 		.4byte	.LBE37-.LBB37
 11480 08cf E2080000 		.4byte	0x8e2
 11481 08d3 15       		.uleb128 0x15
 11482 08d4 6900     		.ascii	"i\000"
 11483 08d6 01       		.byte	0x1
 11484 08d7 A604     		.2byte	0x4a6
 11485 08d9 28020000 		.4byte	0x228
 11486 08dd 03       		.uleb128 0x3
 11487 08de 91       		.byte	0x91
 11488 08df 887F     		.sleb128 -120
 11489 08e1 00       		.byte	0
 11490 08e2 14       		.uleb128 0x14
 11491 08e3 CC1C0000 		.4byte	.LBB38
 11492 08e7 22000000 		.4byte	.LBE38-.LBB38
 11493 08eb FE080000 		.4byte	0x8fe
 11494 08ef 15       		.uleb128 0x15
 11495 08f0 6900     		.ascii	"i\000"
 11496 08f2 01       		.byte	0x1
 11497 08f3 F404     		.2byte	0x4f4
 11498 08f5 9F000000 		.4byte	0x9f
 11499 08f9 03       		.uleb128 0x3
 11500 08fa 91       		.byte	0x91
 11501 08fb 847F     		.sleb128 -124
 11502 08fd 00       		.byte	0
 11503 08fe 14       		.uleb128 0x14
 11504 08ff C21D0000 		.4byte	.LBB39
 11505 0903 28000000 		.4byte	.LBE39-.LBB39
 11506 0907 1A090000 		.4byte	0x91a
 11507 090b 15       		.uleb128 0x15
 11508 090c 6900     		.ascii	"i\000"
 11509 090e 01       		.byte	0x1
 11510 090f 0905     		.2byte	0x509
 11511 0911 9F000000 		.4byte	0x9f
 11512 0915 03       		.uleb128 0x3
 11513 0916 91       		.byte	0x91
 11514 0917 807F     		.sleb128 -128
 11515 0919 00       		.byte	0
 11516 091a 14       		.uleb128 0x14
 11517 091b EA1D0000 		.4byte	.LBB40
 11518 091f 22000000 		.4byte	.LBE40-.LBB40
 11519 0923 36090000 		.4byte	0x936
 11520 0927 15       		.uleb128 0x15
 11521 0928 6900     		.ascii	"i\000"
 11522 092a 01       		.byte	0x1
 11523 092b 0D05     		.2byte	0x50d
 11524 092d 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 246


 11525 0931 03       		.uleb128 0x3
 11526 0932 91       		.byte	0x91
 11527 0933 FC7E     		.sleb128 -132
 11528 0935 00       		.byte	0
 11529 0936 14       		.uleb128 0x14
 11530 0937 0C1E0000 		.4byte	.LBB41
 11531 093b 22000000 		.4byte	.LBE41-.LBB41
 11532 093f 52090000 		.4byte	0x952
 11533 0943 15       		.uleb128 0x15
 11534 0944 6900     		.ascii	"i\000"
 11535 0946 01       		.byte	0x1
 11536 0947 1105     		.2byte	0x511
 11537 0949 9F000000 		.4byte	0x9f
 11538 094d 03       		.uleb128 0x3
 11539 094e 91       		.byte	0x91
 11540 094f F87E     		.sleb128 -136
 11541 0951 00       		.byte	0
 11542 0952 14       		.uleb128 0x14
 11543 0953 B41E0000 		.4byte	.LBB42
 11544 0957 56000000 		.4byte	.LBE42-.LBB42
 11545 095b 88090000 		.4byte	0x988
 11546 095f 15       		.uleb128 0x15
 11547 0960 6900     		.ascii	"i\000"
 11548 0962 01       		.byte	0x1
 11549 0963 2405     		.2byte	0x524
 11550 0965 9F000000 		.4byte	0x9f
 11551 0969 03       		.uleb128 0x3
 11552 096a 91       		.byte	0x91
 11553 096b F47E     		.sleb128 -140
 11554 096d 16       		.uleb128 0x16
 11555 096e BA1E0000 		.4byte	.LBB43
 11556 0972 44000000 		.4byte	.LBE43-.LBB43
 11557 0976 18       		.uleb128 0x18
 11558 0977 EB0F0000 		.4byte	.LASF100
 11559 097b 01       		.byte	0x1
 11560 097c 2605     		.2byte	0x526
 11561 097e 9F000000 		.4byte	0x9f
 11562 0982 03       		.uleb128 0x3
 11563 0983 91       		.byte	0x91
 11564 0984 AC7E     		.sleb128 -212
 11565 0986 00       		.byte	0
 11566 0987 00       		.byte	0
 11567 0988 14       		.uleb128 0x14
 11568 0989 9C1F0000 		.4byte	.LBB44
 11569 098d 90010000 		.4byte	.LBE44-.LBB44
 11570 0991 320A0000 		.4byte	0xa32
 11571 0995 18       		.uleb128 0x18
 11572 0996 76030000 		.4byte	.LASF101
 11573 099a 01       		.byte	0x1
 11574 099b 3A05     		.2byte	0x53a
 11575 099d 9F000000 		.4byte	0x9f
 11576 09a1 03       		.uleb128 0x3
 11577 09a2 91       		.byte	0x91
 11578 09a3 A87E     		.sleb128 -216
 11579 09a5 18       		.uleb128 0x18
 11580 09a6 26010000 		.4byte	.LASF102
 11581 09aa 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 247


 11582 09ab 3B05     		.2byte	0x53b
 11583 09ad 9F000000 		.4byte	0x9f
 11584 09b1 03       		.uleb128 0x3
 11585 09b2 91       		.byte	0x91
 11586 09b3 A47E     		.sleb128 -220
 11587 09b5 18       		.uleb128 0x18
 11588 09b6 E2110000 		.4byte	.LASF103
 11589 09ba 01       		.byte	0x1
 11590 09bb 3C05     		.2byte	0x53c
 11591 09bd 9F000000 		.4byte	0x9f
 11592 09c1 03       		.uleb128 0x3
 11593 09c2 91       		.byte	0x91
 11594 09c3 F07E     		.sleb128 -144
 11595 09c5 14       		.uleb128 0x14
 11596 09c6 AC1F0000 		.4byte	.LBB45
 11597 09ca 36000000 		.4byte	.LBE45-.LBB45
 11598 09ce E1090000 		.4byte	0x9e1
 11599 09d2 15       		.uleb128 0x15
 11600 09d3 6900     		.ascii	"i\000"
 11601 09d5 01       		.byte	0x1
 11602 09d6 3D05     		.2byte	0x53d
 11603 09d8 9F000000 		.4byte	0x9f
 11604 09dc 03       		.uleb128 0x3
 11605 09dd 91       		.byte	0x91
 11606 09de EC7E     		.sleb128 -148
 11607 09e0 00       		.byte	0
 11608 09e1 14       		.uleb128 0x14
 11609 09e2 EC1F0000 		.4byte	.LBB46
 11610 09e6 42000000 		.4byte	.LBE46-.LBB46
 11611 09ea FD090000 		.4byte	0x9fd
 11612 09ee 15       		.uleb128 0x15
 11613 09ef 6900     		.ascii	"i\000"
 11614 09f1 01       		.byte	0x1
 11615 09f2 4505     		.2byte	0x545
 11616 09f4 9F000000 		.4byte	0x9f
 11617 09f8 03       		.uleb128 0x3
 11618 09f9 91       		.byte	0x91
 11619 09fa E87E     		.sleb128 -152
 11620 09fc 00       		.byte	0
 11621 09fd 14       		.uleb128 0x14
 11622 09fe 34200000 		.4byte	.LBB47
 11623 0a02 8E000000 		.4byte	.LBE47-.LBB47
 11624 0a06 190A0000 		.4byte	0xa19
 11625 0a0a 15       		.uleb128 0x15
 11626 0a0b 6900     		.ascii	"i\000"
 11627 0a0d 01       		.byte	0x1
 11628 0a0e 4D05     		.2byte	0x54d
 11629 0a10 9F000000 		.4byte	0x9f
 11630 0a14 03       		.uleb128 0x3
 11631 0a15 91       		.byte	0x91
 11632 0a16 E47E     		.sleb128 -156
 11633 0a18 00       		.byte	0
 11634 0a19 16       		.uleb128 0x16
 11635 0a1a C2200000 		.4byte	.LBB48
 11636 0a1e 42000000 		.4byte	.LBE48-.LBB48
 11637 0a22 15       		.uleb128 0x15
 11638 0a23 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 248


 11639 0a25 01       		.byte	0x1
 11640 0a26 5505     		.2byte	0x555
 11641 0a28 9F000000 		.4byte	0x9f
 11642 0a2c 03       		.uleb128 0x3
 11643 0a2d 91       		.byte	0x91
 11644 0a2e E07E     		.sleb128 -160
 11645 0a30 00       		.byte	0
 11646 0a31 00       		.byte	0
 11647 0a32 16       		.uleb128 0x16
 11648 0a33 96210000 		.4byte	.LBB49
 11649 0a37 28000000 		.4byte	.LBE49-.LBB49
 11650 0a3b 18       		.uleb128 0x18
 11651 0a3c 0C0A0000 		.4byte	.LASF84
 11652 0a40 01       		.byte	0x1
 11653 0a41 6E05     		.2byte	0x56e
 11654 0a43 B8000000 		.4byte	0xb8
 11655 0a47 03       		.uleb128 0x3
 11656 0a48 91       		.byte	0x91
 11657 0a49 A37E     		.sleb128 -221
 11658 0a4b 00       		.byte	0
 11659 0a4c 00       		.byte	0
 11660 0a4d 19       		.uleb128 0x19
 11661 0a4e 16060000 		.4byte	.LASF104
 11662 0a52 01       		.byte	0x1
 11663 0a53 8F05     		.2byte	0x58f
 11664 0a55 00000000 		.4byte	.LFB76
 11665 0a59 70000000 		.4byte	.LFE76-.LFB76
 11666 0a5d 01       		.uleb128 0x1
 11667 0a5e 9C       		.byte	0x9c
 11668 0a5f 19       		.uleb128 0x19
 11669 0a60 7A130000 		.4byte	.LASF105
 11670 0a64 01       		.byte	0x1
 11671 0a65 A405     		.2byte	0x5a4
 11672 0a67 00000000 		.4byte	.LFB77
 11673 0a6b 70010000 		.4byte	.LFE77-.LFB77
 11674 0a6f 01       		.uleb128 0x1
 11675 0a70 9C       		.byte	0x9c
 11676 0a71 12       		.uleb128 0x12
 11677 0a72 5A0A0000 		.4byte	.LASF106
 11678 0a76 01       		.byte	0x1
 11679 0a77 CC05     		.2byte	0x5cc
 11680 0a79 EF000000 		.4byte	0xef
 11681 0a7d 00000000 		.4byte	.LFB78
 11682 0a81 E0000000 		.4byte	.LFE78-.LFB78
 11683 0a85 01       		.uleb128 0x1
 11684 0a86 9C       		.byte	0x9c
 11685 0a87 E60A0000 		.4byte	0xae6
 11686 0a8b 11       		.uleb128 0x11
 11687 0a8c 8B120000 		.4byte	.LASF107
 11688 0a90 01       		.byte	0x1
 11689 0a91 CC05     		.2byte	0x5cc
 11690 0a93 EF000000 		.4byte	0xef
 11691 0a97 02       		.uleb128 0x2
 11692 0a98 91       		.byte	0x91
 11693 0a99 67       		.sleb128 -25
 11694 0a9a 11       		.uleb128 0x11
 11695 0a9b F5010000 		.4byte	.LASF108
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 249


 11696 0a9f 01       		.byte	0x1
 11697 0aa0 CC05     		.2byte	0x5cc
 11698 0aa2 FB000000 		.4byte	0xfb
 11699 0aa6 02       		.uleb128 0x2
 11700 0aa7 91       		.byte	0x91
 11701 0aa8 64       		.sleb128 -28
 11702 0aa9 11       		.uleb128 0x11
 11703 0aaa DD110000 		.4byte	.LASF109
 11704 0aae 01       		.byte	0x1
 11705 0aaf CC05     		.2byte	0x5cc
 11706 0ab1 B8000000 		.4byte	0xb8
 11707 0ab5 02       		.uleb128 0x2
 11708 0ab6 91       		.byte	0x91
 11709 0ab7 66       		.sleb128 -26
 11710 0ab8 18       		.uleb128 0x18
 11711 0ab9 0C0A0000 		.4byte	.LASF84
 11712 0abd 01       		.byte	0x1
 11713 0abe CE05     		.2byte	0x5ce
 11714 0ac0 40010000 		.4byte	0x140
 11715 0ac4 02       		.uleb128 0x2
 11716 0ac5 91       		.byte	0x91
 11717 0ac6 6F       		.sleb128 -17
 11718 0ac7 18       		.uleb128 0x18
 11719 0ac8 E5030000 		.4byte	.LASF110
 11720 0acc 01       		.byte	0x1
 11721 0acd CF05     		.2byte	0x5cf
 11722 0acf B8000000 		.4byte	0xb8
 11723 0ad3 02       		.uleb128 0x2
 11724 0ad4 91       		.byte	0x91
 11725 0ad5 77       		.sleb128 -9
 11726 0ad6 18       		.uleb128 0x18
 11727 0ad7 240D0000 		.4byte	.LASF111
 11728 0adb 01       		.byte	0x1
 11729 0adc D005     		.2byte	0x5d0
 11730 0ade E4000000 		.4byte	0xe4
 11731 0ae2 02       		.uleb128 0x2
 11732 0ae3 91       		.byte	0x91
 11733 0ae4 70       		.sleb128 -16
 11734 0ae5 00       		.byte	0
 11735 0ae6 12       		.uleb128 0x12
 11736 0ae7 E30E0000 		.4byte	.LASF112
 11737 0aeb 01       		.byte	0x1
 11738 0aec 0506     		.2byte	0x605
 11739 0aee EF000000 		.4byte	0xef
 11740 0af2 00000000 		.4byte	.LFB79
 11741 0af6 F4000000 		.4byte	.LFE79-.LFB79
 11742 0afa 01       		.uleb128 0x1
 11743 0afb 9C       		.byte	0x9c
 11744 0afc 5B0B0000 		.4byte	0xb5b
 11745 0b00 11       		.uleb128 0x11
 11746 0b01 8B120000 		.4byte	.LASF107
 11747 0b05 01       		.byte	0x1
 11748 0b06 0506     		.2byte	0x605
 11749 0b08 EF000000 		.4byte	0xef
 11750 0b0c 02       		.uleb128 0x2
 11751 0b0d 91       		.byte	0x91
 11752 0b0e 6F       		.sleb128 -17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 250


 11753 0b0f 11       		.uleb128 0x11
 11754 0b10 F5010000 		.4byte	.LASF108
 11755 0b14 01       		.byte	0x1
 11756 0b15 0506     		.2byte	0x605
 11757 0b17 EF000000 		.4byte	0xef
 11758 0b1b 02       		.uleb128 0x2
 11759 0b1c 91       		.byte	0x91
 11760 0b1d 6E       		.sleb128 -18
 11761 0b1e 11       		.uleb128 0x11
 11762 0b1f DD110000 		.4byte	.LASF109
 11763 0b23 01       		.byte	0x1
 11764 0b24 0506     		.2byte	0x605
 11765 0b26 B8000000 		.4byte	0xb8
 11766 0b2a 02       		.uleb128 0x2
 11767 0b2b 91       		.byte	0x91
 11768 0b2c 6D       		.sleb128 -19
 11769 0b2d 18       		.uleb128 0x18
 11770 0b2e 0C0A0000 		.4byte	.LASF84
 11771 0b32 01       		.byte	0x1
 11772 0b33 0706     		.2byte	0x607
 11773 0b35 40010000 		.4byte	0x140
 11774 0b39 02       		.uleb128 0x2
 11775 0b3a 91       		.byte	0x91
 11776 0b3b 72       		.sleb128 -14
 11777 0b3c 18       		.uleb128 0x18
 11778 0b3d 240D0000 		.4byte	.LASF111
 11779 0b41 01       		.byte	0x1
 11780 0b42 0806     		.2byte	0x608
 11781 0b44 E4000000 		.4byte	0xe4
 11782 0b48 02       		.uleb128 0x2
 11783 0b49 91       		.byte	0x91
 11784 0b4a 74       		.sleb128 -12
 11785 0b4b 18       		.uleb128 0x18
 11786 0b4c E5030000 		.4byte	.LASF110
 11787 0b50 01       		.byte	0x1
 11788 0b51 0906     		.2byte	0x609
 11789 0b53 B8000000 		.4byte	0xb8
 11790 0b57 02       		.uleb128 0x2
 11791 0b58 91       		.byte	0x91
 11792 0b59 73       		.sleb128 -13
 11793 0b5a 00       		.byte	0
 11794 0b5b 19       		.uleb128 0x19
 11795 0b5c 88060000 		.4byte	.LASF113
 11796 0b60 01       		.byte	0x1
 11797 0b61 3806     		.2byte	0x638
 11798 0b63 00000000 		.4byte	.LFB80
 11799 0b67 24000000 		.4byte	.LFE80-.LFB80
 11800 0b6b 01       		.uleb128 0x1
 11801 0b6c 9C       		.byte	0x9c
 11802 0b6d 19       		.uleb128 0x19
 11803 0b6e 34060000 		.4byte	.LASF114
 11804 0b72 01       		.byte	0x1
 11805 0b73 4906     		.2byte	0x649
 11806 0b75 00000000 		.4byte	.LFB81
 11807 0b79 54000000 		.4byte	.LFE81-.LFB81
 11808 0b7d 01       		.uleb128 0x1
 11809 0b7e 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 251


 11810 0b7f 19       		.uleb128 0x19
 11811 0b80 48050000 		.4byte	.LASF115
 11812 0b84 01       		.byte	0x1
 11813 0b85 5C06     		.2byte	0x65c
 11814 0b87 00000000 		.4byte	.LFB82
 11815 0b8b C4000000 		.4byte	.LFE82-.LFB82
 11816 0b8f 01       		.uleb128 0x1
 11817 0b90 9C       		.byte	0x9c
 11818 0b91 12       		.uleb128 0x12
 11819 0b92 BD0C0000 		.4byte	.LASF116
 11820 0b96 01       		.byte	0x1
 11821 0b97 8F06     		.2byte	0x68f
 11822 0b99 13010000 		.4byte	0x113
 11823 0b9d 00000000 		.4byte	.LFB83
 11824 0ba1 98000000 		.4byte	.LFE83-.LFB83
 11825 0ba5 01       		.uleb128 0x1
 11826 0ba6 9C       		.byte	0x9c
 11827 0ba7 E00B0000 		.4byte	0xbe0
 11828 0bab 1A       		.uleb128 0x1a
 11829 0bac 5800     		.ascii	"X\000"
 11830 0bae 01       		.byte	0x1
 11831 0baf 8F06     		.2byte	0x68f
 11832 0bb1 13010000 		.4byte	0x113
 11833 0bb5 02       		.uleb128 0x2
 11834 0bb6 91       		.byte	0x91
 11835 0bb7 64       		.sleb128 -28
 11836 0bb8 15       		.uleb128 0x15
 11837 0bb9 5900     		.ascii	"Y\000"
 11838 0bbb 01       		.byte	0x1
 11839 0bbc 9006     		.2byte	0x690
 11840 0bbe 13010000 		.4byte	0x113
 11841 0bc2 02       		.uleb128 0x2
 11842 0bc3 91       		.byte	0x91
 11843 0bc4 70       		.sleb128 -16
 11844 0bc5 15       		.uleb128 0x15
 11845 0bc6 4600     		.ascii	"F\000"
 11846 0bc8 01       		.byte	0x1
 11847 0bc9 9006     		.2byte	0x690
 11848 0bcb 13010000 		.4byte	0x113
 11849 0bcf 02       		.uleb128 0x2
 11850 0bd0 91       		.byte	0x91
 11851 0bd1 74       		.sleb128 -12
 11852 0bd2 15       		.uleb128 0x15
 11853 0bd3 4500     		.ascii	"E\000"
 11854 0bd5 01       		.byte	0x1
 11855 0bd6 9106     		.2byte	0x691
 11856 0bd8 9F000000 		.4byte	0x9f
 11857 0bdc 02       		.uleb128 0x2
 11858 0bdd 91       		.byte	0x91
 11859 0bde 6C       		.sleb128 -20
 11860 0bdf 00       		.byte	0
 11861 0be0 17       		.uleb128 0x17
 11862 0be1 F5000000 		.4byte	.LASF117
 11863 0be5 01       		.byte	0x1
 11864 0be6 A206     		.2byte	0x6a2
 11865 0be8 00000000 		.4byte	.LFB84
 11866 0bec D4000000 		.4byte	.LFE84-.LFB84
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 252


 11867 0bf0 01       		.uleb128 0x1
 11868 0bf1 9C       		.byte	0x9c
 11869 0bf2 3D0C0000 		.4byte	0xc3d
 11870 0bf6 11       		.uleb128 0x11
 11871 0bf7 410E0000 		.4byte	.LASF118
 11872 0bfb 01       		.byte	0x1
 11873 0bfc A206     		.2byte	0x6a2
 11874 0bfe 9F000000 		.4byte	0x9f
 11875 0c02 02       		.uleb128 0x2
 11876 0c03 91       		.byte	0x91
 11877 0c04 64       		.sleb128 -28
 11878 0c05 18       		.uleb128 0x18
 11879 0c06 EC0D0000 		.4byte	.LASF119
 11880 0c0a 01       		.byte	0x1
 11881 0c0b AE06     		.2byte	0x6ae
 11882 0c0d CE000000 		.4byte	0xce
 11883 0c11 02       		.uleb128 0x2
 11884 0c12 91       		.byte	0x91
 11885 0c13 76       		.sleb128 -10
 11886 0c14 16       		.uleb128 0x16
 11887 0c15 18000000 		.4byte	.LBB50
 11888 0c19 86000000 		.4byte	.LBE50-.LBB50
 11889 0c1d 18       		.uleb128 0x18
 11890 0c1e 2A100000 		.4byte	.LASF120
 11891 0c22 01       		.byte	0x1
 11892 0c23 B206     		.2byte	0x6b2
 11893 0c25 13010000 		.4byte	0x113
 11894 0c29 02       		.uleb128 0x2
 11895 0c2a 91       		.byte	0x91
 11896 0c2b 70       		.sleb128 -16
 11897 0c2c 18       		.uleb128 0x18
 11898 0c2d 10140000 		.4byte	.LASF121
 11899 0c31 01       		.byte	0x1
 11900 0c32 C106     		.2byte	0x6c1
 11901 0c34 9F000000 		.4byte	0x9f
 11902 0c38 02       		.uleb128 0x2
 11903 0c39 91       		.byte	0x91
 11904 0c3a 6C       		.sleb128 -20
 11905 0c3b 00       		.byte	0
 11906 0c3c 00       		.byte	0
 11907 0c3d 17       		.uleb128 0x17
 11908 0c3e 93080000 		.4byte	.LASF122
 11909 0c42 01       		.byte	0x1
 11910 0c43 CD06     		.2byte	0x6cd
 11911 0c45 00000000 		.4byte	.LFB85
 11912 0c49 1C000000 		.4byte	.LFE85-.LFB85
 11913 0c4d 01       		.uleb128 0x1
 11914 0c4e 9C       		.byte	0x9c
 11915 0c4f 710C0000 		.4byte	0xc71
 11916 0c53 1A       		.uleb128 0x1a
 11917 0c54 636300   		.ascii	"cc\000"
 11918 0c57 01       		.byte	0x1
 11919 0c58 CD06     		.2byte	0x6cd
 11920 0c5a 9F000000 		.4byte	0x9f
 11921 0c5e 02       		.uleb128 0x2
 11922 0c5f 91       		.byte	0x91
 11923 0c60 74       		.sleb128 -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 253


 11924 0c61 1A       		.uleb128 0x1a
 11925 0c62 76616C00 		.ascii	"val\000"
 11926 0c66 01       		.byte	0x1
 11927 0c67 CD06     		.2byte	0x6cd
 11928 0c69 9F000000 		.4byte	0x9f
 11929 0c6d 02       		.uleb128 0x2
 11930 0c6e 91       		.byte	0x91
 11931 0c6f 70       		.sleb128 -16
 11932 0c70 00       		.byte	0
 11933 0c71 17       		.uleb128 0x17
 11934 0c72 B90B0000 		.4byte	.LASF123
 11935 0c76 01       		.byte	0x1
 11936 0c77 D306     		.2byte	0x6d3
 11937 0c79 00000000 		.4byte	.LFB86
 11938 0c7d 68000000 		.4byte	.LFE86-.LFB86
 11939 0c81 01       		.uleb128 0x1
 11940 0c82 9C       		.byte	0x9c
 11941 0c83 B50C0000 		.4byte	0xcb5
 11942 0c87 11       		.uleb128 0x11
 11943 0c88 B7030000 		.4byte	.LASF124
 11944 0c8c 01       		.byte	0x1
 11945 0c8d D306     		.2byte	0x6d3
 11946 0c8f 9F000000 		.4byte	0x9f
 11947 0c93 02       		.uleb128 0x2
 11948 0c94 91       		.byte	0x91
 11949 0c95 74       		.sleb128 -12
 11950 0c96 11       		.uleb128 0x11
 11951 0c97 EC0D0000 		.4byte	.LASF119
 11952 0c9b 01       		.byte	0x1
 11953 0c9c D306     		.2byte	0x6d3
 11954 0c9e 9F000000 		.4byte	0x9f
 11955 0ca2 02       		.uleb128 0x2
 11956 0ca3 91       		.byte	0x91
 11957 0ca4 70       		.sleb128 -16
 11958 0ca5 11       		.uleb128 0x11
 11959 0ca6 280A0000 		.4byte	.LASF125
 11960 0caa 01       		.byte	0x1
 11961 0cab D306     		.2byte	0x6d3
 11962 0cad 9F000000 		.4byte	0x9f
 11963 0cb1 02       		.uleb128 0x2
 11964 0cb2 91       		.byte	0x91
 11965 0cb3 6C       		.sleb128 -20
 11966 0cb4 00       		.byte	0
 11967 0cb5 17       		.uleb128 0x17
 11968 0cb6 C4060000 		.4byte	.LASF126
 11969 0cba 01       		.byte	0x1
 11970 0cbb E006     		.2byte	0x6e0
 11971 0cbd 00000000 		.4byte	.LFB87
 11972 0cc1 68000000 		.4byte	.LFE87-.LFB87
 11973 0cc5 01       		.uleb128 0x1
 11974 0cc6 9C       		.byte	0x9c
 11975 0cc7 F90C0000 		.4byte	0xcf9
 11976 0ccb 11       		.uleb128 0x11
 11977 0ccc B7030000 		.4byte	.LASF124
 11978 0cd0 01       		.byte	0x1
 11979 0cd1 E006     		.2byte	0x6e0
 11980 0cd3 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 254


 11981 0cd7 02       		.uleb128 0x2
 11982 0cd8 91       		.byte	0x91
 11983 0cd9 74       		.sleb128 -12
 11984 0cda 11       		.uleb128 0x11
 11985 0cdb 8A050000 		.4byte	.LASF127
 11986 0cdf 01       		.byte	0x1
 11987 0ce0 E006     		.2byte	0x6e0
 11988 0ce2 9F000000 		.4byte	0x9f
 11989 0ce6 02       		.uleb128 0x2
 11990 0ce7 91       		.byte	0x91
 11991 0ce8 70       		.sleb128 -16
 11992 0ce9 11       		.uleb128 0x11
 11993 0cea 280A0000 		.4byte	.LASF125
 11994 0cee 01       		.byte	0x1
 11995 0cef E006     		.2byte	0x6e0
 11996 0cf1 9F000000 		.4byte	0x9f
 11997 0cf5 02       		.uleb128 0x2
 11998 0cf6 91       		.byte	0x91
 11999 0cf7 6C       		.sleb128 -20
 12000 0cf8 00       		.byte	0
 12001 0cf9 17       		.uleb128 0x17
 12002 0cfa 3C070000 		.4byte	.LASF128
 12003 0cfe 01       		.byte	0x1
 12004 0cff EC06     		.2byte	0x6ec
 12005 0d01 00000000 		.4byte	.LFB88
 12006 0d05 68000000 		.4byte	.LFE88-.LFB88
 12007 0d09 01       		.uleb128 0x1
 12008 0d0a 9C       		.byte	0x9c
 12009 0d0b 3D0D0000 		.4byte	0xd3d
 12010 0d0f 11       		.uleb128 0x11
 12011 0d10 25020000 		.4byte	.LASF129
 12012 0d14 01       		.byte	0x1
 12013 0d15 EC06     		.2byte	0x6ec
 12014 0d17 9F000000 		.4byte	0x9f
 12015 0d1b 02       		.uleb128 0x2
 12016 0d1c 91       		.byte	0x91
 12017 0d1d 74       		.sleb128 -12
 12018 0d1e 11       		.uleb128 0x11
 12019 0d1f 3C010000 		.4byte	.LASF130
 12020 0d23 01       		.byte	0x1
 12021 0d24 EC06     		.2byte	0x6ec
 12022 0d26 9F000000 		.4byte	0x9f
 12023 0d2a 02       		.uleb128 0x2
 12024 0d2b 91       		.byte	0x91
 12025 0d2c 70       		.sleb128 -16
 12026 0d2d 11       		.uleb128 0x11
 12027 0d2e 280A0000 		.4byte	.LASF125
 12028 0d32 01       		.byte	0x1
 12029 0d33 EC06     		.2byte	0x6ec
 12030 0d35 9F000000 		.4byte	0x9f
 12031 0d39 02       		.uleb128 0x2
 12032 0d3a 91       		.byte	0x91
 12033 0d3b 6C       		.sleb128 -20
 12034 0d3c 00       		.byte	0
 12035 0d3d 17       		.uleb128 0x17
 12036 0d3e 6F0D0000 		.4byte	.LASF131
 12037 0d42 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 255


 12038 0d43 F806     		.2byte	0x6f8
 12039 0d45 00000000 		.4byte	.LFB89
 12040 0d49 6C000000 		.4byte	.LFE89-.LFB89
 12041 0d4d 01       		.uleb128 0x1
 12042 0d4e 9C       		.byte	0x9c
 12043 0d4f 720D0000 		.4byte	0xd72
 12044 0d53 1A       		.uleb128 0x1a
 12045 0d54 76616C00 		.ascii	"val\000"
 12046 0d58 01       		.byte	0x1
 12047 0d59 F806     		.2byte	0x6f8
 12048 0d5b 9F000000 		.4byte	0x9f
 12049 0d5f 02       		.uleb128 0x2
 12050 0d60 91       		.byte	0x91
 12051 0d61 74       		.sleb128 -12
 12052 0d62 11       		.uleb128 0x11
 12053 0d63 280A0000 		.4byte	.LASF125
 12054 0d67 01       		.byte	0x1
 12055 0d68 F806     		.2byte	0x6f8
 12056 0d6a 9F000000 		.4byte	0x9f
 12057 0d6e 02       		.uleb128 0x2
 12058 0d6f 91       		.byte	0x91
 12059 0d70 70       		.sleb128 -16
 12060 0d71 00       		.byte	0
 12061 0d72 17       		.uleb128 0x17
 12062 0d73 C3030000 		.4byte	.LASF132
 12063 0d77 01       		.byte	0x1
 12064 0d78 0407     		.2byte	0x704
 12065 0d7a 00000000 		.4byte	.LFB90
 12066 0d7e 5C000000 		.4byte	.LFE90-.LFB90
 12067 0d82 01       		.uleb128 0x1
 12068 0d83 9C       		.byte	0x9c
 12069 0d84 A00D0000 		.4byte	0xda0
 12070 0d88 16       		.uleb128 0x16
 12071 0d89 06000000 		.4byte	.LBB51
 12072 0d8d 44000000 		.4byte	.LBE51-.LBB51
 12073 0d91 15       		.uleb128 0x15
 12074 0d92 6900     		.ascii	"i\000"
 12075 0d94 01       		.byte	0x1
 12076 0d95 0607     		.2byte	0x706
 12077 0d97 B8000000 		.4byte	0xb8
 12078 0d9b 02       		.uleb128 0x2
 12079 0d9c 91       		.byte	0x91
 12080 0d9d 77       		.sleb128 -9
 12081 0d9e 00       		.byte	0
 12082 0d9f 00       		.byte	0
 12083 0da0 17       		.uleb128 0x17
 12084 0da1 B7080000 		.4byte	.LASF133
 12085 0da5 01       		.byte	0x1
 12086 0da6 2007     		.2byte	0x720
 12087 0da8 00000000 		.4byte	.LFB91
 12088 0dac 740E0000 		.4byte	.LFE91-.LFB91
 12089 0db0 01       		.uleb128 0x1
 12090 0db1 9C       		.byte	0x9c
 12091 0db2 62100000 		.4byte	0x1062
 12092 0db6 18       		.uleb128 0x18
 12093 0db7 D2050000 		.4byte	.LASF134
 12094 0dbb 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 256


 12095 0dbc 2407     		.2byte	0x724
 12096 0dbe E4000000 		.4byte	0xe4
 12097 0dc2 02       		.uleb128 0x2
 12098 0dc3 91       		.byte	0x91
 12099 0dc4 48       		.sleb128 -56
 12100 0dc5 18       		.uleb128 0x18
 12101 0dc6 D50B0000 		.4byte	.LASF135
 12102 0dca 01       		.byte	0x1
 12103 0dcb 2507     		.2byte	0x725
 12104 0dcd E4000000 		.4byte	0xe4
 12105 0dd1 02       		.uleb128 0x2
 12106 0dd2 91       		.byte	0x91
 12107 0dd3 44       		.sleb128 -60
 12108 0dd4 14       		.uleb128 0x14
 12109 0dd5 3A000000 		.4byte	.LBB52
 12110 0dd9 30000000 		.4byte	.LBE52-.LBB52
 12111 0ddd EF0D0000 		.4byte	0xdef
 12112 0de1 15       		.uleb128 0x15
 12113 0de2 6900     		.ascii	"i\000"
 12114 0de4 01       		.byte	0x1
 12115 0de5 2807     		.2byte	0x728
 12116 0de7 9F000000 		.4byte	0x9f
 12117 0deb 02       		.uleb128 0x2
 12118 0dec 91       		.byte	0x91
 12119 0ded 6C       		.sleb128 -20
 12120 0dee 00       		.byte	0
 12121 0def 14       		.uleb128 0x14
 12122 0df0 7E000000 		.4byte	.LBB53
 12123 0df4 EA060000 		.4byte	.LBE53-.LBB53
 12124 0df8 D40E0000 		.4byte	0xed4
 12125 0dfc 18       		.uleb128 0x18
 12126 0dfd 8E020000 		.4byte	.LASF136
 12127 0e01 01       		.byte	0x1
 12128 0e02 3807     		.2byte	0x738
 12129 0e04 97020000 		.4byte	0x297
 12130 0e08 03       		.uleb128 0x3
 12131 0e09 91       		.byte	0x91
 12132 0e0a 9C7F     		.sleb128 -100
 12133 0e0c 15       		.uleb128 0x15
 12134 0e0d 6900     		.ascii	"i\000"
 12135 0e0f 01       		.byte	0x1
 12136 0e10 3907     		.2byte	0x739
 12137 0e12 E4000000 		.4byte	0xe4
 12138 0e16 02       		.uleb128 0x2
 12139 0e17 91       		.byte	0x91
 12140 0e18 68       		.sleb128 -24
 12141 0e19 18       		.uleb128 0x18
 12142 0e1a 7E0C0000 		.4byte	.LASF137
 12143 0e1e 01       		.byte	0x1
 12144 0e1f 3B07     		.2byte	0x73b
 12145 0e21 B8000000 		.4byte	0xb8
 12146 0e25 02       		.uleb128 0x2
 12147 0e26 91       		.byte	0x91
 12148 0e27 43       		.sleb128 -61
 12149 0e28 18       		.uleb128 0x18
 12150 0e29 06050000 		.4byte	.LASF138
 12151 0e2d 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 257


 12152 0e2e 5B07     		.2byte	0x75b
 12153 0e30 CE000000 		.4byte	0xce
 12154 0e34 02       		.uleb128 0x2
 12155 0e35 91       		.byte	0x91
 12156 0e36 40       		.sleb128 -64
 12157 0e37 14       		.uleb128 0x14
 12158 0e38 7C010000 		.4byte	.LBB54
 12159 0e3c 88000000 		.4byte	.LBE54-.LBB54
 12160 0e40 690E0000 		.4byte	0xe69
 12161 0e44 15       		.uleb128 0x15
 12162 0e45 6A00     		.ascii	"j\000"
 12163 0e47 01       		.byte	0x1
 12164 0e48 4607     		.2byte	0x746
 12165 0e4a 9F000000 		.4byte	0x9f
 12166 0e4e 02       		.uleb128 0x2
 12167 0e4f 91       		.byte	0x91
 12168 0e50 64       		.sleb128 -28
 12169 0e51 16       		.uleb128 0x16
 12170 0e52 82010000 		.4byte	.LBB55
 12171 0e56 76000000 		.4byte	.LBE55-.LBB55
 12172 0e5a 15       		.uleb128 0x15
 12173 0e5b 6B00     		.ascii	"k\000"
 12174 0e5d 01       		.byte	0x1
 12175 0e5e 4807     		.2byte	0x748
 12176 0e60 9F000000 		.4byte	0x9f
 12177 0e64 02       		.uleb128 0x2
 12178 0e65 91       		.byte	0x91
 12179 0e66 60       		.sleb128 -32
 12180 0e67 00       		.byte	0
 12181 0e68 00       		.byte	0
 12182 0e69 14       		.uleb128 0x14
 12183 0e6a 04020000 		.4byte	.LBB56
 12184 0e6e 8C000000 		.4byte	.LBE56-.LBB56
 12185 0e72 9B0E0000 		.4byte	0xe9b
 12186 0e76 15       		.uleb128 0x15
 12187 0e77 6A00     		.ascii	"j\000"
 12188 0e79 01       		.byte	0x1
 12189 0e7a 5007     		.2byte	0x750
 12190 0e7c 9F000000 		.4byte	0x9f
 12191 0e80 02       		.uleb128 0x2
 12192 0e81 91       		.byte	0x91
 12193 0e82 5C       		.sleb128 -36
 12194 0e83 16       		.uleb128 0x16
 12195 0e84 0A020000 		.4byte	.LBB57
 12196 0e88 7A000000 		.4byte	.LBE57-.LBB57
 12197 0e8c 15       		.uleb128 0x15
 12198 0e8d 6B00     		.ascii	"k\000"
 12199 0e8f 01       		.byte	0x1
 12200 0e90 5207     		.2byte	0x752
 12201 0e92 9F000000 		.4byte	0x9f
 12202 0e96 02       		.uleb128 0x2
 12203 0e97 91       		.byte	0x91
 12204 0e98 58       		.sleb128 -40
 12205 0e99 00       		.byte	0
 12206 0e9a 00       		.byte	0
 12207 0e9b 14       		.uleb128 0x14
 12208 0e9c C0030000 		.4byte	.LBB58
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 258


 12209 0ea0 46000000 		.4byte	.LBE58-.LBB58
 12210 0ea4 B90E0000 		.4byte	0xeb9
 12211 0ea8 18       		.uleb128 0x18
 12212 0ea9 76020000 		.4byte	.LASF139
 12213 0ead 01       		.byte	0x1
 12214 0eae 7307     		.2byte	0x773
 12215 0eb0 CE000000 		.4byte	0xce
 12216 0eb4 03       		.uleb128 0x3
 12217 0eb5 91       		.byte	0x91
 12218 0eb6 BE7F     		.sleb128 -66
 12219 0eb8 00       		.byte	0
 12220 0eb9 16       		.uleb128 0x16
 12221 0eba 40060000 		.4byte	.LBB59
 12222 0ebe 48000000 		.4byte	.LBE59-.LBB59
 12223 0ec2 18       		.uleb128 0x18
 12224 0ec3 76020000 		.4byte	.LASF139
 12225 0ec7 01       		.byte	0x1
 12226 0ec8 AF07     		.2byte	0x7af
 12227 0eca C3000000 		.4byte	0xc3
 12228 0ece 03       		.uleb128 0x3
 12229 0ecf 91       		.byte	0x91
 12230 0ed0 BC7F     		.sleb128 -68
 12231 0ed2 00       		.byte	0
 12232 0ed3 00       		.byte	0
 12233 0ed4 14       		.uleb128 0x14
 12234 0ed5 7C070000 		.4byte	.LBB60
 12235 0ed9 3C030000 		.4byte	.LBE60-.LBB60
 12236 0edd C30F0000 		.4byte	0xfc3
 12237 0ee1 18       		.uleb128 0x18
 12238 0ee2 8E020000 		.4byte	.LASF136
 12239 0ee6 01       		.byte	0x1
 12240 0ee7 1008     		.2byte	0x810
 12241 0ee9 97020000 		.4byte	0x297
 12242 0eed 03       		.uleb128 0x3
 12243 0eee 91       		.byte	0x91
 12244 0eef 987F     		.sleb128 -104
 12245 0ef1 15       		.uleb128 0x15
 12246 0ef2 6900     		.ascii	"i\000"
 12247 0ef4 01       		.byte	0x1
 12248 0ef5 1108     		.2byte	0x811
 12249 0ef7 E4000000 		.4byte	0xe4
 12250 0efb 02       		.uleb128 0x2
 12251 0efc 91       		.byte	0x91
 12252 0efd 54       		.sleb128 -44
 12253 0efe 18       		.uleb128 0x18
 12254 0eff 7E0C0000 		.4byte	.LASF137
 12255 0f03 01       		.byte	0x1
 12256 0f04 1308     		.2byte	0x813
 12257 0f06 B8000000 		.4byte	0xb8
 12258 0f0a 03       		.uleb128 0x3
 12259 0f0b 91       		.byte	0x91
 12260 0f0c BB7F     		.sleb128 -69
 12261 0f0e 14       		.uleb128 0x14
 12262 0f0f 20080000 		.4byte	.LBB61
 12263 0f13 8A000000 		.4byte	.LBE61-.LBB61
 12264 0f17 2C0F0000 		.4byte	0xf2c
 12265 0f1b 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 259


 12266 0f1c EC100000 		.4byte	.LASF140
 12267 0f20 01       		.byte	0x1
 12268 0f21 1708     		.2byte	0x817
 12269 0f23 B8000000 		.4byte	0xb8
 12270 0f27 03       		.uleb128 0x3
 12271 0f28 91       		.byte	0x91
 12272 0f29 BA7F     		.sleb128 -70
 12273 0f2b 00       		.byte	0
 12274 0f2c 16       		.uleb128 0x16
 12275 0f2d C2080000 		.4byte	.LBB62
 12276 0f31 7C010000 		.4byte	.LBE62-.LBB62
 12277 0f35 18       		.uleb128 0x18
 12278 0f36 1B120000 		.4byte	.LASF141
 12279 0f3a 01       		.byte	0x1
 12280 0f3b 2308     		.2byte	0x823
 12281 0f3d E4000000 		.4byte	0xe4
 12282 0f41 02       		.uleb128 0x2
 12283 0f42 91       		.byte	0x91
 12284 0f43 50       		.sleb128 -48
 12285 0f44 16       		.uleb128 0x16
 12286 0f45 C8080000 		.4byte	.LBB63
 12287 0f49 68010000 		.4byte	.LBE63-.LBB63
 12288 0f4d 18       		.uleb128 0x18
 12289 0f4e 21050000 		.4byte	.LASF80
 12290 0f52 01       		.byte	0x1
 12291 0f53 2508     		.2byte	0x825
 12292 0f55 CE000000 		.4byte	0xce
 12293 0f59 03       		.uleb128 0x3
 12294 0f5a 91       		.byte	0x91
 12295 0f5b B87F     		.sleb128 -72
 12296 0f5d 16       		.uleb128 0x16
 12297 0f5e D6080000 		.4byte	.LBB64
 12298 0f62 5A010000 		.4byte	.LBE64-.LBB64
 12299 0f66 18       		.uleb128 0x18
 12300 0f67 F4060000 		.4byte	.LASF142
 12301 0f6b 01       		.byte	0x1
 12302 0f6c 2608     		.2byte	0x826
 12303 0f6e E4000000 		.4byte	0xe4
 12304 0f72 02       		.uleb128 0x2
 12305 0f73 91       		.byte	0x91
 12306 0f74 4C       		.sleb128 -52
 12307 0f75 16       		.uleb128 0x16
 12308 0f76 DC080000 		.4byte	.LBB65
 12309 0f7a 46010000 		.4byte	.LBE65-.LBB65
 12310 0f7e 18       		.uleb128 0x18
 12311 0f7f D4040000 		.4byte	.LASF143
 12312 0f83 01       		.byte	0x1
 12313 0f84 3008     		.2byte	0x830
 12314 0f86 CE000000 		.4byte	0xce
 12315 0f8a 03       		.uleb128 0x3
 12316 0f8b 91       		.byte	0x91
 12317 0f8c B67F     		.sleb128 -74
 12318 0f8e 18       		.uleb128 0x18
 12319 0f8f 740F0000 		.4byte	.LASF144
 12320 0f93 01       		.byte	0x1
 12321 0f94 3108     		.2byte	0x831
 12322 0f96 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 260


 12323 0f9a 03       		.uleb128 0x3
 12324 0f9b 91       		.byte	0x91
 12325 0f9c B57F     		.sleb128 -75
 12326 0f9e 18       		.uleb128 0x18
 12327 0f9f 6B010000 		.4byte	.LASF145
 12328 0fa3 01       		.byte	0x1
 12329 0fa4 3208     		.2byte	0x832
 12330 0fa6 B8000000 		.4byte	0xb8
 12331 0faa 03       		.uleb128 0x3
 12332 0fab 91       		.byte	0x91
 12333 0fac B47F     		.sleb128 -76
 12334 0fae 18       		.uleb128 0x18
 12335 0faf 45040000 		.4byte	.LASF81
 12336 0fb3 01       		.byte	0x1
 12337 0fb4 3508     		.2byte	0x835
 12338 0fb6 CE000000 		.4byte	0xce
 12339 0fba 03       		.uleb128 0x3
 12340 0fbb 91       		.byte	0x91
 12341 0fbc B27F     		.sleb128 -78
 12342 0fbe 00       		.byte	0
 12343 0fbf 00       		.byte	0
 12344 0fc0 00       		.byte	0
 12345 0fc1 00       		.byte	0
 12346 0fc2 00       		.byte	0
 12347 0fc3 14       		.uleb128 0x14
 12348 0fc4 CC0A0000 		.4byte	.LBB66
 12349 0fc8 4E010000 		.4byte	.LBE66-.LBB66
 12350 0fcc 0F100000 		.4byte	0x100f
 12351 0fd0 18       		.uleb128 0x18
 12352 0fd1 8E020000 		.4byte	.LASF136
 12353 0fd5 01       		.byte	0x1
 12354 0fd6 5908     		.2byte	0x859
 12355 0fd8 97020000 		.4byte	0x297
 12356 0fdc 03       		.uleb128 0x3
 12357 0fdd 91       		.byte	0x91
 12358 0fde 947F     		.sleb128 -108
 12359 0fe0 15       		.uleb128 0x15
 12360 0fe1 6900     		.ascii	"i\000"
 12361 0fe3 01       		.byte	0x1
 12362 0fe4 5A08     		.2byte	0x85a
 12363 0fe6 E4000000 		.4byte	0xe4
 12364 0fea 03       		.uleb128 0x3
 12365 0feb 91       		.byte	0x91
 12366 0fec AC7F     		.sleb128 -84
 12367 0fee 18       		.uleb128 0x18
 12368 0fef 60060000 		.4byte	.LASF146
 12369 0ff3 01       		.byte	0x1
 12370 0ff4 6308     		.2byte	0x863
 12371 0ff6 CE000000 		.4byte	0xce
 12372 0ffa 03       		.uleb128 0x3
 12373 0ffb 91       		.byte	0x91
 12374 0ffc AA7F     		.sleb128 -86
 12375 0ffe 18       		.uleb128 0x18
 12376 0fff 76020000 		.4byte	.LASF139
 12377 1003 01       		.byte	0x1
 12378 1004 7108     		.2byte	0x871
 12379 1006 CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 261


 12380 100a 03       		.uleb128 0x3
 12381 100b 91       		.byte	0x91
 12382 100c A87F     		.sleb128 -88
 12383 100e 00       		.byte	0
 12384 100f 16       		.uleb128 0x16
 12385 1010 540C0000 		.4byte	.LBB67
 12386 1014 C8010000 		.4byte	.LBE67-.LBB67
 12387 1018 18       		.uleb128 0x18
 12388 1019 8E020000 		.4byte	.LASF136
 12389 101d 01       		.byte	0x1
 12390 101e 7C08     		.2byte	0x87c
 12391 1020 97020000 		.4byte	0x297
 12392 1024 03       		.uleb128 0x3
 12393 1025 91       		.byte	0x91
 12394 1026 907F     		.sleb128 -112
 12395 1028 15       		.uleb128 0x15
 12396 1029 6900     		.ascii	"i\000"
 12397 102b 01       		.byte	0x1
 12398 102c 7D08     		.2byte	0x87d
 12399 102e E4000000 		.4byte	0xe4
 12400 1032 03       		.uleb128 0x3
 12401 1033 91       		.byte	0x91
 12402 1034 A47F     		.sleb128 -92
 12403 1036 18       		.uleb128 0x18
 12404 1037 60060000 		.4byte	.LASF146
 12405 103b 01       		.byte	0x1
 12406 103c 8608     		.2byte	0x886
 12407 103e CE000000 		.4byte	0xce
 12408 1042 03       		.uleb128 0x3
 12409 1043 91       		.byte	0x91
 12410 1044 A27F     		.sleb128 -94
 12411 1046 16       		.uleb128 0x16
 12412 1047 C20D0000 		.4byte	.LBB68
 12413 104b 2C000000 		.4byte	.LBE68-.LBB68
 12414 104f 18       		.uleb128 0x18
 12415 1050 76020000 		.4byte	.LASF139
 12416 1054 01       		.byte	0x1
 12417 1055 9E08     		.2byte	0x89e
 12418 1057 C3000000 		.4byte	0xc3
 12419 105b 03       		.uleb128 0x3
 12420 105c 91       		.byte	0x91
 12421 105d A07F     		.sleb128 -96
 12422 105f 00       		.byte	0
 12423 1060 00       		.byte	0
 12424 1061 00       		.byte	0
 12425 1062 17       		.uleb128 0x17
 12426 1063 72040000 		.4byte	.LASF147
 12427 1067 01       		.byte	0x1
 12428 1068 BA08     		.2byte	0x8ba
 12429 106a 00000000 		.4byte	.LFB92
 12430 106e FC010000 		.4byte	.LFE92-.LFB92
 12431 1072 01       		.uleb128 0x1
 12432 1073 9C       		.byte	0x9c
 12433 1074 AE100000 		.4byte	0x10ae
 12434 1078 11       		.uleb128 0x11
 12435 1079 B20D0000 		.4byte	.LASF148
 12436 107d 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 262


 12437 107e BA08     		.2byte	0x8ba
 12438 1080 EF000000 		.4byte	0xef
 12439 1084 02       		.uleb128 0x2
 12440 1085 91       		.byte	0x91
 12441 1086 6F       		.sleb128 -17
 12442 1087 11       		.uleb128 0x11
 12443 1088 2E0F0000 		.4byte	.LASF149
 12444 108c 01       		.byte	0x1
 12445 108d BA08     		.2byte	0x8ba
 12446 108f AE100000 		.4byte	0x10ae
 12447 1093 02       		.uleb128 0x2
 12448 1094 91       		.byte	0x91
 12449 1095 68       		.sleb128 -24
 12450 1096 16       		.uleb128 0x16
 12451 1097 4C000000 		.4byte	.LBB69
 12452 109b 62000000 		.4byte	.LBE69-.LBB69
 12453 109f 15       		.uleb128 0x15
 12454 10a0 6900     		.ascii	"i\000"
 12455 10a2 01       		.byte	0x1
 12456 10a3 C608     		.2byte	0x8c6
 12457 10a5 9F000000 		.4byte	0x9f
 12458 10a9 02       		.uleb128 0x2
 12459 10aa 91       		.byte	0x91
 12460 10ab 74       		.sleb128 -12
 12461 10ac 00       		.byte	0
 12462 10ad 00       		.byte	0
 12463 10ae 1B       		.uleb128 0x1b
 12464 10af 04       		.byte	0x4
 12465 10b0 EF000000 		.4byte	0xef
 12466 10b4 0B       		.uleb128 0xb
 12467 10b5 EF000000 		.4byte	0xef
 12468 10b9 C4100000 		.4byte	0x10c4
 12469 10bd 0C       		.uleb128 0xc
 12470 10be 4C010000 		.4byte	0x14c
 12471 10c2 01       		.byte	0x1
 12472 10c3 00       		.byte	0
 12473 10c4 1C       		.uleb128 0x1c
 12474 10c5 C6050000 		.4byte	.LASF150
 12475 10c9 01       		.byte	0x1
 12476 10ca B5       		.byte	0xb5
 12477 10cb B4100000 		.4byte	0x10b4
 12478 10cf 05       		.uleb128 0x5
 12479 10d0 03       		.byte	0x3
 12480 10d1 84000000 		.4byte	eepromArray
 12481 10d5 1D       		.uleb128 0x1d
 12482 10d6 79120000 		.4byte	.LASF151
 12483 10da 09       		.byte	0x9
 12484 10db F3       		.byte	0xf3
 12485 10dc 40010000 		.4byte	0x140
 12486 10e0 1D       		.uleb128 0x1d
 12487 10e1 6B130000 		.4byte	.LASF152
 12488 10e5 09       		.byte	0x9
 12489 10e6 F9       		.byte	0xf9
 12490 10e7 40010000 		.4byte	0x140
 12491 10eb 0B       		.uleb128 0xb
 12492 10ec EF000000 		.4byte	0xef
 12493 10f0 FB100000 		.4byte	0x10fb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 263


 12494 10f4 0C       		.uleb128 0xc
 12495 10f5 4C010000 		.4byte	0x14c
 12496 10f9 3F       		.byte	0x3f
 12497 10fa 00       		.byte	0
 12498 10fb 1D       		.uleb128 0x1d
 12499 10fc 050B0000 		.4byte	.LASF153
 12500 1100 09       		.byte	0x9
 12501 1101 FA       		.byte	0xfa
 12502 1102 EB100000 		.4byte	0x10eb
 12503 1106 1D       		.uleb128 0x1d
 12504 1107 78060000 		.4byte	.LASF154
 12505 110b 09       		.byte	0x9
 12506 110c FE       		.byte	0xfe
 12507 110d 40010000 		.4byte	0x140
 12508 1111 1D       		.uleb128 0x1d
 12509 1112 BD120000 		.4byte	.LASF155
 12510 1116 09       		.byte	0x9
 12511 1117 FF       		.byte	0xff
 12512 1118 EB100000 		.4byte	0x10eb
 12513 111c 1D       		.uleb128 0x1d
 12514 111d D1000000 		.4byte	.LASF156
 12515 1121 0A       		.byte	0xa
 12516 1122 82       		.byte	0x82
 12517 1123 C5010000 		.4byte	0x1c5
 12518 1127 0B       		.uleb128 0xb
 12519 1128 38110000 		.4byte	0x1138
 12520 112c 38110000 		.4byte	0x1138
 12521 1130 1E       		.uleb128 0x1e
 12522 1131 4C010000 		.4byte	0x14c
 12523 1135 FF03     		.2byte	0x3ff
 12524 1137 00       		.byte	0
 12525 1138 1F       		.uleb128 0x1f
 12526 1139 B8000000 		.4byte	0xb8
 12527 113d 20       		.uleb128 0x20
 12528 113e 90090000 		.4byte	.LASF157
 12529 1142 01       		.byte	0x1
 12530 1143 BE       		.byte	0xbe
 12531 1144 4E110000 		.4byte	0x114e
 12532 1148 05       		.uleb128 0x5
 12533 1149 03       		.byte	0x3
 12534 114a 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 12535 114e 1F       		.uleb128 0x1f
 12536 114f 27110000 		.4byte	0x1127
 12537 1153 1D       		.uleb128 0x1d
 12538 1154 94070000 		.4byte	.LASF158
 12539 1158 0B       		.byte	0xb
 12540 1159 F9       		.byte	0xf9
 12541 115a EF000000 		.4byte	0xef
 12542 115e 21       		.uleb128 0x21
 12543 115f FA0C0000 		.4byte	.LASF159
 12544 1163 0C       		.byte	0xc
 12545 1164 1207     		.2byte	0x712
 12546 1166 6A110000 		.4byte	0x116a
 12547 116a 06       		.uleb128 0x6
 12548 116b D9000000 		.4byte	0xd9
 12549 116f 20       		.uleb128 0x20
 12550 1170 E2090000 		.4byte	.LASF160
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 264


 12551 1174 0D       		.byte	0xd
 12552 1175 41       		.byte	0x41
 12553 1176 EF000000 		.4byte	0xef
 12554 117a 05       		.uleb128 0x5
 12555 117b 03       		.byte	0x3
 12556 117c 00000000 		.4byte	Decoder_1_Enabled
 12557 1180 0B       		.uleb128 0xb
 12558 1181 0E020000 		.4byte	0x20e
 12559 1185 90110000 		.4byte	0x1190
 12560 1189 0C       		.uleb128 0xc
 12561 118a 4C010000 		.4byte	0x14c
 12562 118e FF       		.byte	0xff
 12563 118f 00       		.byte	0
 12564 1190 20       		.uleb128 0x20
 12565 1191 4E010000 		.4byte	.LASF161
 12566 1195 01       		.byte	0x1
 12567 1196 C8       		.byte	0xc8
 12568 1197 A1110000 		.4byte	0x11a1
 12569 119b 05       		.uleb128 0x5
 12570 119c 03       		.byte	0x3
 12571 119d 00000000 		.4byte	I2Cbuff1
 12572 11a1 06       		.uleb128 0x6
 12573 11a2 80110000 		.4byte	0x1180
 12574 11a6 20       		.uleb128 0x20
 12575 11a7 79010000 		.4byte	.LASF162
 12576 11ab 01       		.byte	0x1
 12577 11ac 66       		.byte	0x66
 12578 11ad 9F000000 		.4byte	0x9f
 12579 11b1 05       		.uleb128 0x5
 12580 11b2 03       		.byte	0x3
 12581 11b3 00000000 		.4byte	octave
 12582 11b7 22       		.uleb128 0x22
 12583 11b8 3F0F0000 		.4byte	.LASF163
 12584 11bc 01       		.byte	0x1
 12585 11bd 1501     		.2byte	0x115
 12586 11bf B8000000 		.4byte	0xb8
 12587 11c3 05       		.uleb128 0x5
 12588 11c4 03       		.byte	0x3
 12589 11c5 00000000 		.4byte	currentNeck
 12590 11c9 20       		.uleb128 0x20
 12591 11ca A2070000 		.4byte	.LASF164
 12592 11ce 01       		.byte	0x1
 12593 11cf 71       		.byte	0x71
 12594 11d0 B8000000 		.4byte	0xb8
 12595 11d4 05       		.uleb128 0x5
 12596 11d5 03       		.byte	0x3
 12597 11d6 00000000 		.4byte	currentCopedent
 12598 11da 20       		.uleb128 0x20
 12599 11db E8050000 		.4byte	.LASF165
 12600 11df 01       		.byte	0x1
 12601 11e0 FC       		.byte	0xfc
 12602 11e1 B8000000 		.4byte	0xb8
 12603 11e5 05       		.uleb128 0x5
 12604 11e6 03       		.byte	0x3
 12605 11e7 00000000 		.4byte	traditionalPedalAdd
 12606 11eb 22       		.uleb128 0x22
 12607 11ec 25030000 		.4byte	.LASF166
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 265


 12608 11f0 01       		.byte	0x1
 12609 11f1 1001     		.2byte	0x110
 12610 11f3 B8000000 		.4byte	0xb8
 12611 11f7 05       		.uleb128 0x5
 12612 11f8 03       		.byte	0x3
 12613 11f9 00000000 		.4byte	mainOLEDWaitingToSend
 12614 11fd 20       		.uleb128 0x20
 12615 11fe 8D010000 		.4byte	.LASF167
 12616 1202 01       		.byte	0x1
 12617 1203 33       		.byte	0x33
 12618 1204 B8000000 		.4byte	0xb8
 12619 1208 05       		.uleb128 0x5
 12620 1209 03       		.byte	0x3
 12621 120a 00000000 		.4byte	volumeWaitingToSend
 12622 120e 22       		.uleb128 0x22
 12623 120f D2010000 		.4byte	.LASF168
 12624 1213 01       		.byte	0x1
 12625 1214 1101     		.2byte	0x111
 12626 1216 B8000000 		.4byte	0xb8
 12627 121a 05       		.uleb128 0x5
 12628 121b 03       		.byte	0x3
 12629 121c 00000000 		.4byte	macroOLEDWaitingToSend
 12630 1220 22       		.uleb128 0x22
 12631 1221 F0110000 		.4byte	.LASF169
 12632 1225 01       		.byte	0x1
 12633 1226 1601     		.2byte	0x116
 12634 1228 B8000000 		.4byte	0xb8
 12635 122c 05       		.uleb128 0x5
 12636 122d 03       		.byte	0x3
 12637 122e 00000000 		.4byte	neckByte
 12638 1232 0B       		.uleb128 0xb
 12639 1233 B8000000 		.4byte	0xb8
 12640 1237 42120000 		.4byte	0x1242
 12641 123b 0C       		.uleb128 0xc
 12642 123c 4C010000 		.4byte	0x14c
 12643 1240 01       		.byte	0x1
 12644 1241 00       		.byte	0
 12645 1242 20       		.uleb128 0x20
 12646 1243 73010000 		.4byte	.LASF170
 12647 1247 01       		.byte	0x1
 12648 1248 72       		.byte	0x72
 12649 1249 32120000 		.4byte	0x1232
 12650 124d 05       		.uleb128 0x5
 12651 124e 03       		.byte	0x3
 12652 124f 00000000 		.4byte	necks
 12653 1253 22       		.uleb128 0x22
 12654 1254 4B0F0000 		.4byte	.LASF171
 12655 1258 01       		.byte	0x1
 12656 1259 1801     		.2byte	0x118
 12657 125b B8000000 		.4byte	0xb8
 12658 125f 05       		.uleb128 0x5
 12659 1260 03       		.byte	0x3
 12660 1261 00000000 		.4byte	editMode
 12661 1265 0B       		.uleb128 0xb
 12662 1266 B8000000 		.4byte	0xb8
 12663 126a 81120000 		.4byte	0x1281
 12664 126e 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 266


 12665 126f 4C010000 		.4byte	0x14c
 12666 1273 3F       		.byte	0x3f
 12667 1274 0C       		.uleb128 0xc
 12668 1275 4C010000 		.4byte	0x14c
 12669 1279 0F       		.byte	0xf
 12670 127a 0C       		.uleb128 0xc
 12671 127b 4C010000 		.4byte	0x14c
 12672 127f 08       		.byte	0x8
 12673 1280 00       		.byte	0
 12674 1281 20       		.uleb128 0x20
 12675 1282 88000000 		.4byte	.LASF172
 12676 1286 01       		.byte	0x1
 12677 1287 EB       		.byte	0xeb
 12678 1288 65120000 		.4byte	0x1265
 12679 128c 05       		.uleb128 0x5
 12680 128d 03       		.byte	0x3
 12681 128e 00000000 		.4byte	macroNamesArray
 12682 1292 0B       		.uleb128 0xb
 12683 1293 B8000000 		.4byte	0xb8
 12684 1297 AE120000 		.4byte	0x12ae
 12685 129b 0C       		.uleb128 0xc
 12686 129c 4C010000 		.4byte	0x14c
 12687 12a0 3F       		.byte	0x3f
 12688 12a1 0C       		.uleb128 0xc
 12689 12a2 4C010000 		.4byte	0x14c
 12690 12a6 03       		.byte	0x3
 12691 12a7 0C       		.uleb128 0xc
 12692 12a8 4C010000 		.4byte	0x14c
 12693 12ac 09       		.byte	0x9
 12694 12ad 00       		.byte	0
 12695 12ae 20       		.uleb128 0x20
 12696 12af FF000000 		.4byte	.LASF173
 12697 12b3 01       		.byte	0x1
 12698 12b4 EC       		.byte	0xec
 12699 12b5 92120000 		.4byte	0x1292
 12700 12b9 05       		.uleb128 0x5
 12701 12ba 03       		.byte	0x3
 12702 12bb 00000000 		.4byte	controlNamesArray
 12703 12bf 20       		.uleb128 0x20
 12704 12c0 06110000 		.4byte	.LASF174
 12705 12c4 01       		.byte	0x1
 12706 12c5 F8       		.byte	0xf8
 12707 12c6 B8000000 		.4byte	0xb8
 12708 12ca 05       		.uleb128 0x5
 12709 12cb 03       		.byte	0x3
 12710 12cc 00000000 		.4byte	patchNum
 12711 12d0 20       		.uleb128 0x20
 12712 12d1 B60A0000 		.4byte	.LASF175
 12713 12d5 01       		.byte	0x1
 12714 12d6 E6       		.byte	0xe6
 12715 12d7 B8000000 		.4byte	0xb8
 12716 12db 05       		.uleb128 0x5
 12717 12dc 03       		.byte	0x3
 12718 12dd 00000000 		.4byte	currentPresetSelection
 12719 12e1 0B       		.uleb128 0xb
 12720 12e2 B8000000 		.4byte	0xb8
 12721 12e6 F7120000 		.4byte	0x12f7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 267


 12722 12ea 0C       		.uleb128 0xc
 12723 12eb 4C010000 		.4byte	0x14c
 12724 12ef 3F       		.byte	0x3f
 12725 12f0 0C       		.uleb128 0xc
 12726 12f1 4C010000 		.4byte	0x14c
 12727 12f5 0D       		.byte	0xd
 12728 12f6 00       		.byte	0
 12729 12f7 20       		.uleb128 0x20
 12730 12f8 8D030000 		.4byte	.LASF176
 12731 12fc 01       		.byte	0x1
 12732 12fd E7       		.byte	0xe7
 12733 12fe E1120000 		.4byte	0x12e1
 12734 1302 05       		.uleb128 0x5
 12735 1303 03       		.byte	0x3
 12736 1304 00000000 		.4byte	presetNamesArray
 12737 1308 20       		.uleb128 0x20
 12738 1309 FB020000 		.4byte	.LASF177
 12739 130d 01       		.byte	0x1
 12740 130e E8       		.byte	0xe8
 12741 130f B8000000 		.4byte	0xb8
 12742 1313 05       		.uleb128 0x5
 12743 1314 03       		.byte	0x3
 12744 1315 00000000 		.4byte	presetNumberToLoad
 12745 1319 0B       		.uleb128 0xb
 12746 131a B8000000 		.4byte	0xb8
 12747 131e 2F130000 		.4byte	0x132f
 12748 1322 0C       		.uleb128 0xc
 12749 1323 4C010000 		.4byte	0x14c
 12750 1327 06       		.byte	0x6
 12751 1328 0C       		.uleb128 0xc
 12752 1329 4C010000 		.4byte	0x14c
 12753 132d 09       		.byte	0x9
 12754 132e 00       		.byte	0
 12755 132f 20       		.uleb128 0x20
 12756 1330 FC010000 		.4byte	.LASF178
 12757 1334 01       		.byte	0x1
 12758 1335 FF       		.byte	0xff
 12759 1336 19130000 		.4byte	0x1319
 12760 133a 05       		.uleb128 0x5
 12761 133b 03       		.byte	0x3
 12762 133c 00000000 		.4byte	copedentNamesArray
 12763 1340 0B       		.uleb128 0xb
 12764 1341 B8000000 		.4byte	0xb8
 12765 1345 50130000 		.4byte	0x1350
 12766 1349 0C       		.uleb128 0xc
 12767 134a 4C010000 		.4byte	0x14c
 12768 134e 3F       		.byte	0x3f
 12769 134f 00       		.byte	0
 12770 1350 22       		.uleb128 0x22
 12771 1351 93050000 		.4byte	.LASF179
 12772 1355 01       		.byte	0x1
 12773 1356 1301     		.2byte	0x113
 12774 1358 40130000 		.4byte	0x1340
 12775 135c 05       		.uleb128 0x5
 12776 135d 03       		.byte	0x3
 12777 135e 00000000 		.4byte	presetAlreadyDisplayed
 12778 1362 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 268


 12779 1363 07080000 		.4byte	.LASF180
 12780 1367 01       		.byte	0x1
 12781 1368 AC       		.byte	0xac
 12782 1369 B8000000 		.4byte	0xb8
 12783 136d 05       		.uleb128 0x5
 12784 136e 03       		.byte	0x3
 12785 136f 00000000 		.4byte	whichMacro
 12786 1373 22       		.uleb128 0x22
 12787 1374 85100000 		.4byte	.LASF181
 12788 1378 01       		.byte	0x1
 12789 1379 1A01     		.2byte	0x11a
 12790 137b B8000000 		.4byte	0xb8
 12791 137f 05       		.uleb128 0x5
 12792 1380 03       		.byte	0x3
 12793 1381 00000000 		.4byte	fretCalibrationMode
 12794 1385 22       		.uleb128 0x22
 12795 1386 56130000 		.4byte	.LASF182
 12796 138a 01       		.byte	0x1
 12797 138b 1901     		.2byte	0x119
 12798 138d B8000000 		.4byte	0xb8
 12799 1391 05       		.uleb128 0x5
 12800 1392 03       		.byte	0x3
 12801 1393 00000000 		.4byte	leverCalibrationMode
 12802 1397 0B       		.uleb128 0xb
 12803 1398 CE000000 		.4byte	0xce
 12804 139c AD130000 		.4byte	0x13ad
 12805 13a0 0C       		.uleb128 0xc
 12806 13a1 4C010000 		.4byte	0x14c
 12807 13a5 01       		.byte	0x1
 12808 13a6 0C       		.uleb128 0xc
 12809 13a7 4C010000 		.4byte	0x14c
 12810 13ab 0B       		.byte	0xb
 12811 13ac 00       		.byte	0
 12812 13ad 20       		.uleb128 0x20
 12813 13ae CC110000 		.4byte	.LASF183
 12814 13b2 01       		.byte	0x1
 12815 13b3 E2       		.byte	0xe2
 12816 13b4 97130000 		.4byte	0x1397
 12817 13b8 05       		.uleb128 0x5
 12818 13b9 03       		.byte	0x3
 12819 13ba 00000000 		.4byte	fretMeasurements
 12820 13be 0B       		.uleb128 0xb
 12821 13bf CE000000 		.4byte	0xce
 12822 13c3 CE130000 		.4byte	0x13ce
 12823 13c7 0C       		.uleb128 0xc
 12824 13c8 4C010000 		.4byte	0x14c
 12825 13cc 09       		.byte	0x9
 12826 13cd 00       		.byte	0
 12827 13ce 20       		.uleb128 0x20
 12828 13cf 8B110000 		.4byte	.LASF184
 12829 13d3 01       		.byte	0x1
 12830 13d4 D2       		.byte	0xd2
 12831 13d5 BE130000 		.4byte	0x13be
 12832 13d9 05       		.uleb128 0x5
 12833 13da 03       		.byte	0x3
 12834 13db 00000000 		.4byte	pedals_low
 12835 13df 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 269


 12836 13e0 E9010000 		.4byte	.LASF185
 12837 13e4 01       		.byte	0x1
 12838 13e5 D3       		.byte	0xd3
 12839 13e6 BE130000 		.4byte	0x13be
 12840 13ea 05       		.uleb128 0x5
 12841 13eb 03       		.byte	0x3
 12842 13ec 00000000 		.4byte	pedals_high
 12843 13f0 0B       		.uleb128 0xb
 12844 13f1 B8000000 		.4byte	0xb8
 12845 13f5 00140000 		.4byte	0x1400
 12846 13f9 0C       		.uleb128 0xc
 12847 13fa 4C010000 		.4byte	0x14c
 12848 13fe 09       		.byte	0x9
 12849 13ff 00       		.byte	0
 12850 1400 20       		.uleb128 0x20
 12851 1401 92060000 		.4byte	.LASF186
 12852 1405 01       		.byte	0x1
 12853 1406 FA       		.byte	0xfa
 12854 1407 F0130000 		.4byte	0x13f0
 12855 140b 05       		.uleb128 0x5
 12856 140c 03       		.byte	0x3
 12857 140d 00000000 		.4byte	pedal_inverted
 12858 1411 20       		.uleb128 0x20
 12859 1412 720A0000 		.4byte	.LASF187
 12860 1416 01       		.byte	0x1
 12861 1417 67       		.byte	0x67
 12862 1418 BE130000 		.4byte	0x13be
 12863 141c 05       		.uleb128 0x5
 12864 141d 03       		.byte	0x3
 12865 141e 00000000 		.4byte	angle
 12866 1422 0B       		.uleb128 0xb
 12867 1423 13020000 		.4byte	0x213
 12868 1427 32140000 		.4byte	0x1432
 12869 142b 0C       		.uleb128 0xc
 12870 142c 4C010000 		.4byte	0x14c
 12871 1430 01       		.byte	0x1
 12872 1431 00       		.byte	0
 12873 1432 23       		.uleb128 0x23
 12874 1433 62617200 		.ascii	"bar\000"
 12875 1437 01       		.byte	0x1
 12876 1438 85       		.byte	0x85
 12877 1439 43140000 		.4byte	0x1443
 12878 143d 05       		.uleb128 0x5
 12879 143e 03       		.byte	0x3
 12880 143f 00000000 		.4byte	bar
 12881 1443 06       		.uleb128 0x6
 12882 1444 22140000 		.4byte	0x1422
 12883 1448 20       		.uleb128 0x20
 12884 1449 45100000 		.4byte	.LASF188
 12885 144d 01       		.byte	0x1
 12886 144e 2F       		.byte	0x2f
 12887 144f AD000000 		.4byte	0xad
 12888 1453 05       		.uleb128 0x5
 12889 1454 03       		.byte	0x3
 12890 1455 00000000 		.4byte	transposeSemitones
 12891 1459 20       		.uleb128 0x20
 12892 145a 5D070000 		.4byte	.LASF189
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 270


 12893 145e 01       		.byte	0x1
 12894 145f 30       		.byte	0x30
 12895 1460 AD000000 		.4byte	0xad
 12896 1464 05       		.uleb128 0x5
 12897 1465 03       		.byte	0x3
 12898 1466 00000000 		.4byte	transposeCents
 12899 146a 20       		.uleb128 0x20
 12900 146b 7E140000 		.4byte	.LASF190
 12901 146f 01       		.byte	0x1
 12902 1470 31       		.byte	0x31
 12903 1471 13010000 		.4byte	0x113
 12904 1475 05       		.uleb128 0x5
 12905 1476 03       		.byte	0x3
 12906 1477 00000000 		.4byte	transposeFloat
 12907 147b 20       		.uleb128 0x20
 12908 147c 420A0000 		.4byte	.LASF191
 12909 1480 01       		.byte	0x1
 12910 1481 32       		.byte	0x32
 12911 1482 AD000000 		.4byte	0xad
 12912 1486 05       		.uleb128 0x5
 12913 1487 03       		.byte	0x3
 12914 1488 00000000 		.4byte	volumeInt
 12915 148c 20       		.uleb128 0x20
 12916 148d A6110000 		.4byte	.LASF192
 12917 1491 01       		.byte	0x1
 12918 1492 8B       		.byte	0x8b
 12919 1493 9F000000 		.4byte	0x9f
 12920 1497 05       		.uleb128 0x5
 12921 1498 03       		.byte	0x3
 12922 1499 00000000 		.4byte	prevOctave
 12923 149d 20       		.uleb128 0x20
 12924 149e EA0B0000 		.4byte	.LASF193
 12925 14a2 01       		.byte	0x1
 12926 14a3 F5       		.byte	0xf5
 12927 14a4 B8000000 		.4byte	0xb8
 12928 14a8 05       		.uleb128 0x5
 12929 14a9 03       		.byte	0x3
 12930 14aa 00000000 		.4byte	dualSlider
 12931 14ae 20       		.uleb128 0x20
 12932 14af C60D0000 		.4byte	.LASF194
 12933 14b3 01       		.byte	0x1
 12934 14b4 D6       		.byte	0xd6
 12935 14b5 B8000000 		.4byte	0xb8
 12936 14b9 05       		.uleb128 0x5
 12937 14ba 03       		.byte	0x3
 12938 14bb 00000000 		.4byte	deadZone
 12939 14bf 20       		.uleb128 0x20
 12940 14c0 580C0000 		.4byte	.LASF195
 12941 14c4 01       		.byte	0x1
 12942 14c5 39       		.byte	0x39
 12943 14c6 32120000 		.4byte	0x1232
 12944 14ca 05       		.uleb128 0x5
 12945 14cb 03       		.byte	0x3
 12946 14cc 00000000 		.4byte	stringRepresentation
 12947 14d0 20       		.uleb128 0x20
 12948 14d1 96130000 		.4byte	.LASF196
 12949 14d5 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 271


 12950 14d6 38       		.byte	0x38
 12951 14d7 B8000000 		.4byte	0xb8
 12952 14db 05       		.uleb128 0x5
 12953 14dc 03       		.byte	0x3
 12954 14dd 00000000 		.4byte	octaveAction
 12955 14e1 20       		.uleb128 0x20
 12956 14e2 DA0C0000 		.4byte	.LASF197
 12957 14e6 01       		.byte	0x1
 12958 14e7 34       		.byte	0x34
 12959 14e8 B8000000 		.4byte	0xb8
 12960 14ec 05       		.uleb128 0x5
 12961 14ed 03       		.byte	0x3
 12962 14ee 00000000 		.4byte	midiSendOn
 12963 14f2 20       		.uleb128 0x20
 12964 14f3 25040000 		.4byte	.LASF198
 12965 14f7 01       		.byte	0x1
 12966 14f8 35       		.byte	0x35
 12967 14f9 B8000000 		.4byte	0xb8
 12968 14fd 05       		.uleb128 0x5
 12969 14fe 03       		.byte	0x3
 12970 14ff 00000000 		.4byte	midiBarSendOn
 12971 1503 20       		.uleb128 0x20
 12972 1504 FC050000 		.4byte	.LASF199
 12973 1508 01       		.byte	0x1
 12974 1509 51       		.byte	0x51
 12975 150a B8000000 		.4byte	0xb8
 12976 150e 05       		.uleb128 0x5
 12977 150f 03       		.byte	0x3
 12978 1510 00000000 		.4byte	sendFirmwareUpdateRequest
 12979 1514 0B       		.uleb128 0xb
 12980 1515 B8000000 		.4byte	0xb8
 12981 1519 24150000 		.4byte	0x1524
 12982 151d 0C       		.uleb128 0xc
 12983 151e 4C010000 		.4byte	0x14c
 12984 1522 0F       		.byte	0xf
 12985 1523 00       		.byte	0
 12986 1524 20       		.uleb128 0x20
 12987 1525 01070000 		.4byte	.LASF200
 12988 1529 01       		.byte	0x1
 12989 152a B1       		.byte	0xb1
 12990 152b 14150000 		.4byte	0x1514
 12991 152f 05       		.uleb128 0x5
 12992 1530 03       		.byte	0x3
 12993 1531 00000000 		.4byte	knobFrozen
 12994 1535 0B       		.uleb128 0xb
 12995 1536 C3000000 		.4byte	0xc3
 12996 153a 45150000 		.4byte	0x1545
 12997 153e 0C       		.uleb128 0xc
 12998 153f 4C010000 		.4byte	0x14c
 12999 1543 0F       		.byte	0xf
 13000 1544 00       		.byte	0
 13001 1545 20       		.uleb128 0x20
 13002 1546 8D040000 		.4byte	.LASF201
 13003 154a 01       		.byte	0x1
 13004 154b B0       		.byte	0xb0
 13005 154c 35150000 		.4byte	0x1535
 13006 1550 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 272


 13007 1551 03       		.byte	0x3
 13008 1552 00000000 		.4byte	prevMacroKnobValues
 13009 1556 20       		.uleb128 0x20
 13010 1557 DA130000 		.4byte	.LASF202
 13011 155b 01       		.byte	0x1
 13012 155c 2C       		.byte	0x2c
 13013 155d AD000000 		.4byte	0xad
 13014 1561 05       		.uleb128 0x5
 13015 1562 03       		.byte	0x3
 13016 1563 00000000 		.4byte	presetNumberToStore
 13017 1567 20       		.uleb128 0x20
 13018 1568 98000000 		.4byte	.LASF203
 13019 156c 01       		.byte	0x1
 13020 156d 3D       		.byte	0x3d
 13021 156e B8000000 		.4byte	0xb8
 13022 1572 05       		.uleb128 0x5
 13023 1573 03       		.byte	0x3
 13024 1574 00000000 		.4byte	sendLocalPresetStoreCommand
 13025 1578 0B       		.uleb128 0xb
 13026 1579 21010000 		.4byte	0x121
 13027 157d 88150000 		.4byte	0x1588
 13028 1581 0C       		.uleb128 0xc
 13029 1582 4C010000 		.4byte	0x14c
 13030 1586 0D       		.byte	0xd
 13031 1587 00       		.byte	0
 13032 1588 1D       		.uleb128 0x1d
 13033 1589 D7030000 		.4byte	.LASF204
 13034 158d 08       		.byte	0x8
 13035 158e 8B       		.byte	0x8b
 13036 158f 78150000 		.4byte	0x1578
 13037 1593 20       		.uleb128 0x20
 13038 1594 A40B0000 		.4byte	.LASF205
 13039 1598 01       		.byte	0x1
 13040 1599 B3       		.byte	0xb3
 13041 159a B8000000 		.4byte	0xb8
 13042 159e 05       		.uleb128 0x5
 13043 159f 03       		.byte	0x3
 13044 15a0 00000000 		.4byte	knobPanelLightActive
 13045 15a4 20       		.uleb128 0x20
 13046 15a5 05140000 		.4byte	.LASF206
 13047 15a9 01       		.byte	0x1
 13048 15aa 73       		.byte	0x73
 13049 15ab 32120000 		.4byte	0x1232
 13050 15af 05       		.uleb128 0x5
 13051 15b0 03       		.byte	0x3
 13052 15b1 00000000 		.4byte	neckPreset
 13053 15b5 20       		.uleb128 0x20
 13054 15b6 CA0C0000 		.4byte	.LASF207
 13055 15ba 01       		.byte	0x1
 13056 15bb 74       		.byte	0x74
 13057 15bc B8000000 		.4byte	0xb8
 13058 15c0 05       		.uleb128 0x5
 13059 15c1 03       		.byte	0x3
 13060 15c2 00000000 		.4byte	neckPresetsByte
 13061 15c6 1D       		.uleb128 0x1d
 13062 15c7 59140000 		.4byte	.LASF208
 13063 15cb 0E       		.byte	0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 273


 13064 15cc 12       		.byte	0x12
 13065 15cd B8000000 		.4byte	0xb8
 13066 15d1 20       		.uleb128 0x20
 13067 15d2 D1100000 		.4byte	.LASF209
 13068 15d6 01       		.byte	0x1
 13069 15d7 0D       		.byte	0xd
 13070 15d8 18020000 		.4byte	0x218
 13071 15dc 05       		.uleb128 0x5
 13072 15dd 03       		.byte	0x3
 13073 15de 00000000 		.4byte	prevLastBufferBegin
 13074 15e2 20       		.uleb128 0x20
 13075 15e3 F4090000 		.4byte	.LASF210
 13076 15e7 01       		.byte	0x1
 13077 15e8 0E       		.byte	0xe
 13078 15e9 18020000 		.4byte	0x218
 13079 15ed 05       		.uleb128 0x5
 13080 15ee 03       		.byte	0x3
 13081 15ef 00000000 		.4byte	lastBufferBegin
 13082 15f3 20       		.uleb128 0x20
 13083 15f4 19020000 		.4byte	.LASF211
 13084 15f8 01       		.byte	0x1
 13085 15f9 0F       		.byte	0xf
 13086 15fa E4000000 		.4byte	0xe4
 13087 15fe 05       		.uleb128 0x5
 13088 15ff 03       		.byte	0x3
 13089 1600 00000000 		.4byte	masterTimer
 13090 1604 20       		.uleb128 0x20
 13091 1605 4C0A0000 		.4byte	.LASF212
 13092 1609 01       		.byte	0x1
 13093 160a 10       		.byte	0x10
 13094 160b E4000000 		.4byte	0xe4
 13095 160f 05       		.uleb128 0x5
 13096 1610 03       		.byte	0x3
 13097 1611 00000000 		.4byte	lastParseCall
 13098 1615 20       		.uleb128 0x20
 13099 1616 840E0000 		.4byte	.LASF213
 13100 161a 01       		.byte	0x1
 13101 161b 11       		.byte	0x11
 13102 161c E4000000 		.4byte	0xe4
 13103 1620 05       		.uleb128 0x5
 13104 1621 03       		.byte	0x3
 13105 1622 00000000 		.4byte	prevLastParseCall
 13106 1626 20       		.uleb128 0x20
 13107 1627 C2010000 		.4byte	.LASF214
 13108 162b 01       		.byte	0x1
 13109 162c 12       		.byte	0x12
 13110 162d E4000000 		.4byte	0xe4
 13111 1631 05       		.uleb128 0x5
 13112 1632 03       		.byte	0x3
 13113 1633 00000000 		.4byte	lastBufferStuff
 13114 1637 20       		.uleb128 0x20
 13115 1638 62080000 		.4byte	.LASF215
 13116 163c 01       		.byte	0x1
 13117 163d 13       		.byte	0x13
 13118 163e E4000000 		.4byte	0xe4
 13119 1642 05       		.uleb128 0x5
 13120 1643 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 274


 13121 1644 00000000 		.4byte	lastEndReceive
 13122 1648 0B       		.uleb128 0xb
 13123 1649 B8000000 		.4byte	0xb8
 13124 164d 59160000 		.4byte	0x1659
 13125 1651 1E       		.uleb128 0x1e
 13126 1652 4C010000 		.4byte	0x14c
 13127 1656 FF07     		.2byte	0x7ff
 13128 1658 00       		.byte	0
 13129 1659 20       		.uleb128 0x20
 13130 165a BC100000 		.4byte	.LASF216
 13131 165e 01       		.byte	0x1
 13132 165f 15       		.byte	0x15
 13133 1660 48160000 		.4byte	0x1648
 13134 1664 05       		.uleb128 0x5
 13135 1665 03       		.byte	0x3
 13136 1666 00000000 		.4byte	sysexBuffer
 13137 166a 20       		.uleb128 0x20
 13138 166b 380C0000 		.4byte	.LASF217
 13139 166f 01       		.byte	0x1
 13140 1670 16       		.byte	0x16
 13141 1671 E4000000 		.4byte	0xe4
 13142 1675 05       		.uleb128 0x5
 13143 1676 03       		.byte	0x3
 13144 1677 00000000 		.4byte	sysexWritePointer
 13145 167b 20       		.uleb128 0x20
 13146 167c 2B020000 		.4byte	.LASF218
 13147 1680 01       		.byte	0x1
 13148 1681 17       		.byte	0x17
 13149 1682 E4000000 		.4byte	0xe4
 13150 1686 05       		.uleb128 0x5
 13151 1687 03       		.byte	0x3
 13152 1688 00000000 		.4byte	sysexReadPointer
 13153 168c 20       		.uleb128 0x20
 13154 168d E60A0000 		.4byte	.LASF219
 13155 1691 01       		.byte	0x1
 13156 1692 18       		.byte	0x18
 13157 1693 B8000000 		.4byte	0xb8
 13158 1697 05       		.uleb128 0x5
 13159 1698 03       		.byte	0x3
 13160 1699 00000000 		.4byte	sysexReset
 13161 169d 0B       		.uleb128 0xb
 13162 169e E4000000 		.4byte	0xe4
 13163 16a2 AD160000 		.4byte	0x16ad
 13164 16a6 0C       		.uleb128 0xc
 13165 16a7 4C010000 		.4byte	0x14c
 13166 16ab FF       		.byte	0xff
 13167 16ac 00       		.byte	0
 13168 16ad 20       		.uleb128 0x20
 13169 16ae DC060000 		.4byte	.LASF220
 13170 16b2 01       		.byte	0x1
 13171 16b3 19       		.byte	0x19
 13172 16b4 9D160000 		.4byte	0x169d
 13173 16b8 05       		.uleb128 0x5
 13174 16b9 03       		.byte	0x3
 13175 16ba 00000000 		.4byte	sysexMessageStartPoints
 13176 16be 20       		.uleb128 0x20
 13177 16bf AB090000 		.4byte	.LASF221
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 275


 13178 16c3 01       		.byte	0x1
 13179 16c4 1A       		.byte	0x1a
 13180 16c5 B8000000 		.4byte	0xb8
 13181 16c9 05       		.uleb128 0x5
 13182 16ca 03       		.byte	0x3
 13183 16cb 00000000 		.4byte	sysexMessageStartPointsWritePosition
 13184 16cf 20       		.uleb128 0x20
 13185 16d0 3F110000 		.4byte	.LASF222
 13186 16d4 01       		.byte	0x1
 13187 16d5 1B       		.byte	0x1b
 13188 16d6 B8000000 		.4byte	0xb8
 13189 16da 05       		.uleb128 0x5
 13190 16db 03       		.byte	0x3
 13191 16dc 00000000 		.4byte	sysexMessageStartPointsReadPosition
 13192 16e0 20       		.uleb128 0x20
 13193 16e1 A30D0000 		.4byte	.LASF223
 13194 16e5 01       		.byte	0x1
 13195 16e6 1C       		.byte	0x1c
 13196 16e7 B8000000 		.4byte	0xb8
 13197 16eb 05       		.uleb128 0x5
 13198 16ec 03       		.byte	0x3
 13199 16ed 00000000 		.4byte	receivingSysex
 13200 16f1 20       		.uleb128 0x20
 13201 16f2 D6070000 		.4byte	.LASF224
 13202 16f6 01       		.byte	0x1
 13203 16f7 1D       		.byte	0x1d
 13204 16f8 B8000000 		.4byte	0xb8
 13205 16fc 05       		.uleb128 0x5
 13206 16fd 03       		.byte	0x3
 13207 16fe 00000000 		.4byte	parsingSysex
 13208 1702 0B       		.uleb128 0xb
 13209 1703 0E020000 		.4byte	0x20e
 13210 1707 13170000 		.4byte	0x1713
 13211 170b 1E       		.uleb128 0x1e
 13212 170c 4C010000 		.4byte	0x14c
 13213 1710 FF07     		.2byte	0x7ff
 13214 1712 00       		.byte	0
 13215 1713 20       		.uleb128 0x20
 13216 1714 27000000 		.4byte	.LASF225
 13217 1718 01       		.byte	0x1
 13218 1719 1E       		.byte	0x1e
 13219 171a 24170000 		.4byte	0x1724
 13220 171e 05       		.uleb128 0x5
 13221 171f 03       		.byte	0x3
 13222 1720 00000000 		.4byte	presetArray
 13223 1724 06       		.uleb128 0x6
 13224 1725 02170000 		.4byte	0x1702
 13225 1729 20       		.uleb128 0x20
 13226 172a 62030000 		.4byte	.LASF226
 13227 172e 01       		.byte	0x1
 13228 172f 1F       		.byte	0x1f
 13229 1730 B8000000 		.4byte	0xb8
 13230 1734 05       		.uleb128 0x5
 13231 1735 03       		.byte	0x3
 13232 1736 00000000 		.4byte	presetNumberToWrite
 13233 173a 20       		.uleb128 0x20
 13234 173b FB0F0000 		.4byte	.LASF227
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 276


 13235 173f 01       		.byte	0x1
 13236 1740 20       		.byte	0x20
 13237 1741 B8000000 		.4byte	0xb8
 13238 1745 05       		.uleb128 0x5
 13239 1746 03       		.byte	0x3
 13240 1747 00000000 		.4byte	copedentNumberToWrite
 13241 174b 20       		.uleb128 0x20
 13242 174c D4020000 		.4byte	.LASF228
 13243 1750 01       		.byte	0x1
 13244 1751 21       		.byte	0x21
 13245 1752 B8000000 		.4byte	0xb8
 13246 1756 05       		.uleb128 0x5
 13247 1757 03       		.byte	0x3
 13248 1758 00000000 		.4byte	sendMessageEnd
 13249 175c 20       		.uleb128 0x20
 13250 175d 99100000 		.4byte	.LASF229
 13251 1761 01       		.byte	0x1
 13252 1762 23       		.byte	0x23
 13253 1763 B8000000 		.4byte	0xb8
 13254 1767 05       		.uleb128 0x5
 13255 1768 03       		.byte	0x3
 13256 1769 00000000 		.4byte	sendSingleParamUpdate
 13257 176d 20       		.uleb128 0x20
 13258 176e 63050000 		.4byte	.LASF230
 13259 1772 01       		.byte	0x1
 13260 1773 24       		.byte	0x24
 13261 1774 B8000000 		.4byte	0xb8
 13262 1778 05       		.uleb128 0x5
 13263 1779 03       		.byte	0x3
 13264 177a 00000000 		.4byte	singleParamToUpdateHigh
 13265 177e 20       		.uleb128 0x20
 13266 177f 070D0000 		.4byte	.LASF231
 13267 1783 01       		.byte	0x1
 13268 1784 25       		.byte	0x25
 13269 1785 B8000000 		.4byte	0xb8
 13270 1789 05       		.uleb128 0x5
 13271 178a 03       		.byte	0x3
 13272 178b 00000000 		.4byte	singleParamToUpdateLow
 13273 178f 20       		.uleb128 0x20
 13274 1790 E50C0000 		.4byte	.LASF232
 13275 1794 01       		.byte	0x1
 13276 1795 26       		.byte	0x26
 13277 1796 B8000000 		.4byte	0xb8
 13278 179a 05       		.uleb128 0x5
 13279 179b 03       		.byte	0x3
 13280 179c 00000000 		.4byte	singleParamValueHigh
 13281 17a0 20       		.uleb128 0x20
 13282 17a1 28070000 		.4byte	.LASF233
 13283 17a5 01       		.byte	0x1
 13284 17a6 27       		.byte	0x27
 13285 17a7 B8000000 		.4byte	0xb8
 13286 17ab 05       		.uleb128 0x5
 13287 17ac 03       		.byte	0x3
 13288 17ad 00000000 		.4byte	singleParamValueLow
 13289 17b1 20       		.uleb128 0x20
 13290 17b2 C60F0000 		.4byte	.LASF234
 13291 17b6 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 277


 13292 17b7 29       		.byte	0x29
 13293 17b8 B8000000 		.4byte	0xb8
 13294 17bc 05       		.uleb128 0x5
 13295 17bd 03       		.byte	0x3
 13296 17be 00000000 		.4byte	sendMappingChangeUpdate
 13297 17c2 20       		.uleb128 0x20
 13298 17c3 EE130000 		.4byte	.LASF235
 13299 17c7 01       		.byte	0x1
 13300 17c8 36       		.byte	0x36
 13301 17c9 B8000000 		.4byte	0xb8
 13302 17cd 05       		.uleb128 0x5
 13303 17ce 03       		.byte	0x3
 13304 17cf 00000000 		.4byte	pitchSmoothing
 13305 17d3 20       		.uleb128 0x20
 13306 17d4 960F0000 		.4byte	.LASF236
 13307 17d8 01       		.byte	0x1
 13308 17d9 37       		.byte	0x37
 13309 17da B8000000 		.4byte	0xb8
 13310 17de 05       		.uleb128 0x5
 13311 17df 03       		.byte	0x3
 13312 17e0 00000000 		.4byte	controlSmoothing
 13313 17e4 20       		.uleb128 0x20
 13314 17e5 0D000000 		.4byte	.LASF237
 13315 17e9 01       		.byte	0x1
 13316 17ea 3B       		.byte	0x3b
 13317 17eb B8000000 		.4byte	0xb8
 13318 17ef 05       		.uleb128 0x5
 13319 17f0 03       		.byte	0x3
 13320 17f1 00000000 		.4byte	presetArraySection
 13321 17f5 20       		.uleb128 0x20
 13322 17f6 170C0000 		.4byte	.LASF238
 13323 17fa 01       		.byte	0x1
 13324 17fb 3F       		.byte	0x3f
 13325 17fc CE000000 		.4byte	0xce
 13326 1800 05       		.uleb128 0x5
 13327 1801 03       		.byte	0x3
 13328 1802 00000000 		.4byte	messageArraySendCount
 13329 1806 20       		.uleb128 0x20
 13330 1807 BB110000 		.4byte	.LASF239
 13331 180b 01       		.byte	0x1
 13332 180c 40       		.byte	0x40
 13333 180d CE000000 		.4byte	0xce
 13334 1811 05       		.uleb128 0x5
 13335 1812 03       		.byte	0x3
 13336 1813 00000000 		.4byte	messageArraySize
 13337 1817 20       		.uleb128 0x20
 13338 1818 71080000 		.4byte	.LASF240
 13339 181c 01       		.byte	0x1
 13340 181d 42       		.byte	0x42
 13341 181e B8000000 		.4byte	0xb8
 13342 1822 05       		.uleb128 0x5
 13343 1823 03       		.byte	0x3
 13344 1824 00000000 		.4byte	sysexMessageInProgress
 13345 1828 20       		.uleb128 0x20
 13346 1829 C8100000 		.4byte	.LASF241
 13347 182d 01       		.byte	0x1
 13348 182e 44       		.byte	0x44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 278


 13349 182f B8000000 		.4byte	0xb8
 13350 1833 05       		.uleb128 0x5
 13351 1834 03       		.byte	0x3
 13352 1835 00000000 		.4byte	bufCount
 13353 1839 20       		.uleb128 0x20
 13354 183a 47000000 		.4byte	.LASF242
 13355 183e 01       		.byte	0x1
 13356 183f 45       		.byte	0x45
 13357 1840 0E020000 		.4byte	0x20e
 13358 1844 05       		.uleb128 0x5
 13359 1845 03       		.byte	0x3
 13360 1846 00000000 		.4byte	sendingMessage
 13361 184a 20       		.uleb128 0x20
 13362 184b 03040000 		.4byte	.LASF243
 13363 184f 01       		.byte	0x1
 13364 1850 46       		.byte	0x46
 13365 1851 0E020000 		.4byte	0x20e
 13366 1855 05       		.uleb128 0x5
 13367 1856 03       		.byte	0x3
 13368 1857 00000000 		.4byte	sendKnobs
 13369 185b 20       		.uleb128 0x20
 13370 185c 80010000 		.4byte	.LASF244
 13371 1860 01       		.byte	0x1
 13372 1861 47       		.byte	0x47
 13373 1862 E4000000 		.4byte	0xe4
 13374 1866 05       		.uleb128 0x5
 13375 1867 03       		.byte	0x3
 13376 1868 00000000 		.4byte	currentFloat
 13377 186c 20       		.uleb128 0x20
 13378 186d CB040000 		.4byte	.LASF245
 13379 1871 01       		.byte	0x1
 13380 1872 48       		.byte	0x48
 13381 1873 E4000000 		.4byte	0xe4
 13382 1877 05       		.uleb128 0x5
 13383 1878 03       		.byte	0x3
 13384 1879 00000000 		.4byte	mapCount
 13385 187d 20       		.uleb128 0x20
 13386 187e 0F020000 		.4byte	.LASF246
 13387 1882 01       		.byte	0x1
 13388 1883 4A       		.byte	0x4a
 13389 1884 CE000000 		.4byte	0xce
 13390 1888 05       		.uleb128 0x5
 13391 1889 03       		.byte	0x3
 13392 188a 00000000 		.4byte	valsCount
 13393 188e 20       		.uleb128 0x20
 13394 188f AD020000 		.4byte	.LASF247
 13395 1893 01       		.byte	0x1
 13396 1894 4B       		.byte	0x4b
 13397 1895 CE000000 		.4byte	0xce
 13398 1899 05       		.uleb128 0x5
 13399 189a 03       		.byte	0x3
 13400 189b 00000000 		.4byte	mapCountExpectation
 13401 189f 20       		.uleb128 0x20
 13402 18a0 42010000 		.4byte	.LASF248
 13403 18a4 01       		.byte	0x1
 13404 18a5 4C       		.byte	0x4c
 13405 18a6 CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 279


 13406 18aa 05       		.uleb128 0x5
 13407 18ab 03       		.byte	0x3
 13408 18ac 00000000 		.4byte	numMappings
 13409 18b0 20       		.uleb128 0x20
 13410 18b1 58100000 		.4byte	.LASF249
 13411 18b5 01       		.byte	0x1
 13412 18b6 4D       		.byte	0x4d
 13413 18b7 0E020000 		.4byte	0x20e
 13414 18bb 05       		.uleb128 0x5
 13415 18bc 03       		.byte	0x3
 13416 18bd 00000000 		.4byte	parseThatMF
 13417 18c1 20       		.uleb128 0x20
 13418 18c2 FD040000 		.4byte	.LASF250
 13419 18c6 01       		.byte	0x1
 13420 18c7 4E       		.byte	0x4e
 13421 18c8 D2180000 		.4byte	0x18d2
 13422 18cc 05       		.uleb128 0x5
 13423 18cd 03       		.byte	0x3
 13424 18ce 00000000 		.4byte	valCheck
 13425 18d2 06       		.uleb128 0x6
 13426 18d3 13010000 		.4byte	0x113
 13427 18d7 20       		.uleb128 0x20
 13428 18d8 7D0F0000 		.4byte	.LASF251
 13429 18dc 01       		.byte	0x1
 13430 18dd 4F       		.byte	0x4f
 13431 18de D2180000 		.4byte	0x18d2
 13432 18e2 05       		.uleb128 0x5
 13433 18e3 03       		.byte	0x3
 13434 18e4 00000000 		.4byte	testVal
 13435 18e8 20       		.uleb128 0x20
 13436 18e9 780A0000 		.4byte	.LASF252
 13437 18ed 01       		.byte	0x1
 13438 18ee 53       		.byte	0x53
 13439 18ef B8000000 		.4byte	0xb8
 13440 18f3 05       		.uleb128 0x5
 13441 18f4 03       		.byte	0x3
 13442 18f5 00000000 		.4byte	numStrings
 13443 18f9 20       		.uleb128 0x20
 13444 18fa 32100000 		.4byte	.LASF253
 13445 18fe 01       		.byte	0x1
 13446 18ff 59       		.byte	0x59
 13447 1900 0E020000 		.4byte	0x20e
 13448 1904 05       		.uleb128 0x5
 13449 1905 03       		.byte	0x3
 13450 1906 00000000 		.4byte	usbActivityCounter
 13451 190a 20       		.uleb128 0x20
 13452 190b 2E0F0000 		.4byte	.LASF149
 13453 190f 01       		.byte	0x1
 13454 1910 5A       		.byte	0x5a
 13455 1911 C1020000 		.4byte	0x2c1
 13456 1915 05       		.uleb128 0x5
 13457 1916 03       		.byte	0x3
 13458 1917 00000000 		.4byte	midiMsg
 13459 191b 20       		.uleb128 0x20
 13460 191c 39040000 		.4byte	.LASF254
 13461 1920 01       		.byte	0x1
 13462 1921 5B       		.byte	0x5b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 280


 13463 1922 B8000000 		.4byte	0xb8
 13464 1926 05       		.uleb128 0x5
 13465 1927 03       		.byte	0x3
 13466 1928 00000000 		.4byte	currentVBUS
 13467 192c 20       		.uleb128 0x20
 13468 192d A3130000 		.4byte	.LASF255
 13469 1931 01       		.byte	0x1
 13470 1932 5C       		.byte	0x5c
 13471 1933 B8000000 		.4byte	0xb8
 13472 1937 05       		.uleb128 0x5
 13473 1938 03       		.byte	0x3
 13474 1939 00000000 		.4byte	prevVBUS
 13475 193d 20       		.uleb128 0x20
 13476 193e 7A100000 		.4byte	.LASF256
 13477 1942 01       		.byte	0x1
 13478 1943 5D       		.byte	0x5d
 13479 1944 0E020000 		.4byte	0x20e
 13480 1948 05       		.uleb128 0x5
 13481 1949 03       		.byte	0x3
 13482 194a 00000000 		.4byte	USB_active
 13483 194e 20       		.uleb128 0x20
 13484 194f 080C0000 		.4byte	.LASF257
 13485 1953 01       		.byte	0x1
 13486 1954 5E       		.byte	0x5e
 13487 1955 0E020000 		.4byte	0x20e
 13488 1959 05       		.uleb128 0x5
 13489 195a 03       		.byte	0x3
 13490 195b 00000000 		.4byte	USB_check_flag
 13491 195f 0B       		.uleb128 0xb
 13492 1960 B8000000 		.4byte	0xb8
 13493 1964 6F190000 		.4byte	0x196f
 13494 1968 0C       		.uleb128 0xc
 13495 1969 4C010000 		.4byte	0x14c
 13496 196d 05       		.byte	0x5
 13497 196e 00       		.byte	0
 13498 196f 20       		.uleb128 0x20
 13499 1970 22130000 		.4byte	.LASF258
 13500 1974 01       		.byte	0x1
 13501 1975 60       		.byte	0x60
 13502 1976 5F190000 		.4byte	0x195f
 13503 197a 05       		.uleb128 0x5
 13504 197b 03       		.byte	0x3
 13505 197c 00000000 		.4byte	mappingArray
 13506 1980 0B       		.uleb128 0xb
 13507 1981 B8000000 		.4byte	0xb8
 13508 1985 90190000 		.4byte	0x1990
 13509 1989 0C       		.uleb128 0xc
 13510 198a 4C010000 		.4byte	0x14c
 13511 198e 1F       		.byte	0x1f
 13512 198f 00       		.byte	0
 13513 1990 20       		.uleb128 0x20
 13514 1991 93120000 		.4byte	.LASF259
 13515 1995 01       		.byte	0x1
 13516 1996 62       		.byte	0x62
 13517 1997 80190000 		.4byte	0x1980
 13518 199b 05       		.uleb128 0x5
 13519 199c 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 281


 13520 199d 00000000 		.4byte	inBuffer
 13521 19a1 20       		.uleb128 0x20
 13522 19a2 B4140000 		.4byte	.LASF260
 13523 19a6 01       		.byte	0x1
 13524 19a7 64       		.byte	0x64
 13525 19a8 80190000 		.4byte	0x1980
 13526 19ac 05       		.uleb128 0x5
 13527 19ad 03       		.byte	0x3
 13528 19ae 00000000 		.4byte	myArray
 13529 19b2 20       		.uleb128 0x20
 13530 19b3 E3070000 		.4byte	.LASF261
 13531 19b7 01       		.byte	0x1
 13532 19b8 65       		.byte	0x65
 13533 19b9 80190000 		.4byte	0x1980
 13534 19bd 05       		.uleb128 0x5
 13535 19be 03       		.byte	0x3
 13536 19bf 00000000 		.4byte	returnedData
 13537 19c3 20       		.uleb128 0x20
 13538 19c4 C10E0000 		.4byte	.LASF262
 13539 19c8 01       		.byte	0x1
 13540 19c9 68       		.byte	0x68
 13541 19ca BE130000 		.4byte	0x13be
 13542 19ce 05       		.uleb128 0x5
 13543 19cf 03       		.byte	0x3
 13544 19d0 00000000 		.4byte	prevAngle
 13545 19d4 0B       		.uleb128 0xb
 13546 19d5 CE000000 		.4byte	0xce
 13547 19d9 E4190000 		.4byte	0x19e4
 13548 19dd 0C       		.uleb128 0xc
 13549 19de 4C010000 		.4byte	0x14c
 13550 19e2 03       		.byte	0x3
 13551 19e3 00       		.byte	0
 13552 19e4 20       		.uleb128 0x20
 13553 19e5 0B0F0000 		.4byte	.LASF263
 13554 19e9 01       		.byte	0x1
 13555 19ea 6A       		.byte	0x6a
 13556 19eb D4190000 		.4byte	0x19d4
 13557 19ef 05       		.uleb128 0x5
 13558 19f0 03       		.byte	0x3
 13559 19f1 00000000 		.4byte	ADC_values
 13560 19f5 20       		.uleb128 0x20
 13561 19f6 DF050000 		.4byte	.LASF264
 13562 19fa 01       		.byte	0x1
 13563 19fb 6B       		.byte	0x6b
 13564 19fc CE000000 		.4byte	0xce
 13565 1a00 05       		.uleb128 0x5
 13566 1a01 03       		.byte	0x3
 13567 1a02 00000000 		.4byte	rawAngle
 13568 1a06 20       		.uleb128 0x20
 13569 1a07 250F0000 		.4byte	.LASF265
 13570 1a0b 01       		.byte	0x1
 13571 1a0c 6C       		.byte	0x6c
 13572 1a0d CE000000 		.4byte	0xce
 13573 1a11 05       		.uleb128 0x5
 13574 1a12 03       		.byte	0x3
 13575 1a13 00000000 		.4byte	midiSent
 13576 1a17 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 282


 13577 1a18 1B0A0000 		.4byte	.LASF266
 13578 1a1c 01       		.byte	0x1
 13579 1a1d 6D       		.byte	0x6d
 13580 1a1e CE000000 		.4byte	0xce
 13581 1a22 05       		.uleb128 0x5
 13582 1a23 03       		.byte	0x3
 13583 1a24 00000000 		.4byte	midiOverflow
 13584 1a28 20       		.uleb128 0x20
 13585 1a29 CF120000 		.4byte	.LASF267
 13586 1a2d 01       		.byte	0x1
 13587 1a2e 6F       		.byte	0x6f
 13588 1a2f 14150000 		.4byte	0x1514
 13589 1a33 05       		.uleb128 0x5
 13590 1a34 03       		.byte	0x3
 13591 1a35 00000000 		.4byte	macroKnobValues
 13592 1a39 20       		.uleb128 0x20
 13593 1a3a 16050000 		.4byte	.LASF268
 13594 1a3e 01       		.byte	0x1
 13595 1a3f 76       		.byte	0x76
 13596 1a40 EF000000 		.4byte	0xef
 13597 1a44 05       		.uleb128 0x5
 13598 1a45 03       		.byte	0x3
 13599 1a46 00000000 		.4byte	rx1Channel
 13600 1a4a 20       		.uleb128 0x20
 13601 1a4b 3B130000 		.4byte	.LASF269
 13602 1a4f 01       		.byte	0x1
 13603 1a50 76       		.byte	0x76
 13604 1a51 EF000000 		.4byte	0xef
 13605 1a55 05       		.uleb128 0x5
 13606 1a56 03       		.byte	0x3
 13607 1a57 00000000 		.4byte	rx2Channel
 13608 1a5b 20       		.uleb128 0x20
 13609 1a5c 6D0C0000 		.4byte	.LASF270
 13610 1a60 01       		.byte	0x1
 13611 1a61 77       		.byte	0x77
 13612 1a62 B4100000 		.4byte	0x10b4
 13613 1a66 05       		.uleb128 0x5
 13614 1a67 03       		.byte	0x3
 13615 1a68 00000000 		.4byte	rx1TD
 13616 1a6c 20       		.uleb128 0x20
 13617 1a6d 900F0000 		.4byte	.LASF271
 13618 1a71 01       		.byte	0x1
 13619 1a72 77       		.byte	0x77
 13620 1a73 B4100000 		.4byte	0x10b4
 13621 1a77 05       		.uleb128 0x5
 13622 1a78 03       		.byte	0x3
 13623 1a79 00000000 		.4byte	rx2TD
 13624 1a7d 20       		.uleb128 0x20
 13625 1a7e 960E0000 		.4byte	.LASF272
 13626 1a82 01       		.byte	0x1
 13627 1a83 79       		.byte	0x79
 13628 1a84 40010000 		.4byte	0x140
 13629 1a88 05       		.uleb128 0x5
 13630 1a89 03       		.byte	0x3
 13631 1a8a 00000000 		.4byte	txChannel
 13632 1a8e 20       		.uleb128 0x20
 13633 1a8f 1B140000 		.4byte	.LASF273
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 283


 13634 1a93 01       		.byte	0x1
 13635 1a94 7A       		.byte	0x7a
 13636 1a95 40010000 		.4byte	0x140
 13637 1a99 05       		.uleb128 0x5
 13638 1a9a 03       		.byte	0x3
 13639 1a9b 00000000 		.4byte	txTD
 13640 1a9f 20       		.uleb128 0x20
 13641 1aa0 9A0C0000 		.4byte	.LASF274
 13642 1aa4 01       		.byte	0x1
 13643 1aa5 7C       		.byte	0x7c
 13644 1aa6 40010000 		.4byte	0x140
 13645 1aaa 05       		.uleb128 0x5
 13646 1aab 03       		.byte	0x3
 13647 1aac 00000000 		.4byte	rx3Channel
 13648 1ab0 20       		.uleb128 0x20
 13649 1ab1 AC130000 		.4byte	.LASF275
 13650 1ab5 01       		.byte	0x1
 13651 1ab6 7D       		.byte	0x7d
 13652 1ab7 40010000 		.4byte	0x140
 13653 1abb 05       		.uleb128 0x5
 13654 1abc 03       		.byte	0x3
 13655 1abd 00000000 		.4byte	rx3TD
 13656 1ac1 0B       		.uleb128 0xb
 13657 1ac2 40010000 		.4byte	0x140
 13658 1ac6 D71A0000 		.4byte	0x1ad7
 13659 1aca 0C       		.uleb128 0xc
 13660 1acb 4C010000 		.4byte	0x14c
 13661 1acf 01       		.byte	0x1
 13662 1ad0 0C       		.uleb128 0xc
 13663 1ad1 4C010000 		.4byte	0x14c
 13664 1ad5 1F       		.byte	0x1f
 13665 1ad6 00       		.byte	0
 13666 1ad7 20       		.uleb128 0x20
 13667 1ad8 1E080000 		.4byte	.LASF276
 13668 1adc 01       		.byte	0x1
 13669 1add 80       		.byte	0x80
 13670 1ade E81A0000 		.4byte	0x1ae8
 13671 1ae2 05       		.uleb128 0x5
 13672 1ae3 03       		.byte	0x3
 13673 1ae4 00000000 		.4byte	rxBufferPluck
 13674 1ae8 06       		.uleb128 0x6
 13675 1ae9 C11A0000 		.4byte	0x1ac1
 13676 1aed 0B       		.uleb128 0xb
 13677 1aee 40010000 		.4byte	0x140
 13678 1af2 031B0000 		.4byte	0x1b03
 13679 1af6 0C       		.uleb128 0xc
 13680 1af7 4C010000 		.4byte	0x14c
 13681 1afb 01       		.byte	0x1
 13682 1afc 0C       		.uleb128 0xc
 13683 1afd 4C010000 		.4byte	0x14c
 13684 1b01 07       		.byte	0x7
 13685 1b02 00       		.byte	0
 13686 1b03 20       		.uleb128 0x20
 13687 1b04 780E0000 		.4byte	.LASF277
 13688 1b08 01       		.byte	0x1
 13689 1b09 81       		.byte	0x81
 13690 1b0a 141B0000 		.4byte	0x1b14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 284


 13691 1b0e 05       		.uleb128 0x5
 13692 1b0f 03       		.byte	0x3
 13693 1b10 00000000 		.4byte	rxBufferBar
 13694 1b14 06       		.uleb128 0x6
 13695 1b15 ED1A0000 		.4byte	0x1aed
 13696 1b19 0B       		.uleb128 0xb
 13697 1b1a 13020000 		.4byte	0x213
 13698 1b1e 291B0000 		.4byte	0x1b29
 13699 1b22 0C       		.uleb128 0xc
 13700 1b23 4C010000 		.4byte	0x14c
 13701 1b27 0B       		.byte	0xb
 13702 1b28 00       		.byte	0
 13703 1b29 20       		.uleb128 0x20
 13704 1b2a 14030000 		.4byte	.LASF278
 13705 1b2e 01       		.byte	0x1
 13706 1b2f 83       		.byte	0x83
 13707 1b30 3A1B0000 		.4byte	0x1b3a
 13708 1b34 05       		.uleb128 0x5
 13709 1b35 03       		.byte	0x3
 13710 1b36 00000000 		.4byte	strings
 13711 1b3a 06       		.uleb128 0x6
 13712 1b3b 191B0000 		.4byte	0x1b19
 13713 1b3f 20       		.uleb128 0x20
 13714 1b40 B5050000 		.4byte	.LASF279
 13715 1b44 01       		.byte	0x1
 13716 1b45 84       		.byte	0x84
 13717 1b46 501B0000 		.4byte	0x1b50
 13718 1b4a 05       		.uleb128 0x5
 13719 1b4b 03       		.byte	0x3
 13720 1b4c 00000000 		.4byte	prevStrings
 13721 1b50 06       		.uleb128 0x6
 13722 1b51 191B0000 		.4byte	0x1b19
 13723 1b55 20       		.uleb128 0x20
 13724 1b56 2A140000 		.4byte	.LASF280
 13725 1b5a 01       		.byte	0x1
 13726 1b5b 86       		.byte	0x86
 13727 1b5c 661B0000 		.4byte	0x1b66
 13728 1b60 05       		.uleb128 0x5
 13729 1b61 03       		.byte	0x3
 13730 1b62 00000000 		.4byte	prevBar
 13731 1b66 06       		.uleb128 0x6
 13732 1b67 22140000 		.4byte	0x1422
 13733 1b6b 20       		.uleb128 0x20
 13734 1b6c AB120000 		.4byte	.LASF281
 13735 1b70 01       		.byte	0x1
 13736 1b71 87       		.byte	0x87
 13737 1b72 7C1B0000 		.4byte	0x1b7c
 13738 1b76 05       		.uleb128 0x5
 13739 1b77 03       		.byte	0x3
 13740 1b78 00000000 		.4byte	maxStrings
 13741 1b7c 06       		.uleb128 0x6
 13742 1b7d 191B0000 		.4byte	0x1b19
 13743 1b81 20       		.uleb128 0x20
 13744 1b82 DE0F0000 		.4byte	.LASF282
 13745 1b86 01       		.byte	0x1
 13746 1b87 88       		.byte	0x88
 13747 1b88 0E020000 		.4byte	0x20e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 285


 13748 1b8c 05       		.uleb128 0x5
 13749 1b8d 03       		.byte	0x3
 13750 1b8e 00000000 		.4byte	amHere
 13751 1b92 20       		.uleb128 0x20
 13752 1b93 52070000 		.4byte	.LASF283
 13753 1b97 01       		.byte	0x1
 13754 1b98 89       		.byte	0x89
 13755 1b99 0E020000 		.4byte	0x20e
 13756 1b9d 05       		.uleb128 0x5
 13757 1b9e 03       		.byte	0x3
 13758 1b9f 00000000 		.4byte	spiCounter
 13759 1ba3 20       		.uleb128 0x20
 13760 1ba4 2F050000 		.4byte	.LASF284
 13761 1ba8 01       		.byte	0x1
 13762 1ba9 8A       		.byte	0x8a
 13763 1baa 0E020000 		.4byte	0x20e
 13764 1bae 05       		.uleb128 0x5
 13765 1baf 03       		.byte	0x3
 13766 1bb0 00000000 		.4byte	newDataFlag
 13767 1bb4 20       		.uleb128 0x20
 13768 1bb5 CB0E0000 		.4byte	.LASF285
 13769 1bb9 01       		.byte	0x1
 13770 1bba 8C       		.byte	0x8c
 13771 1bbb B8000000 		.4byte	0xb8
 13772 1bbf 05       		.uleb128 0x5
 13773 1bc0 03       		.byte	0x3
 13774 1bc1 00000000 		.4byte	pluck_index
 13775 1bc5 20       		.uleb128 0x20
 13776 1bc6 52120000 		.4byte	.LASF286
 13777 1bca 01       		.byte	0x1
 13778 1bcb 8D       		.byte	0x8d
 13779 1bcc 0E020000 		.4byte	0x20e
 13780 1bd0 05       		.uleb128 0x5
 13781 1bd1 03       		.byte	0x3
 13782 1bd2 00000000 		.4byte	amHere2
 13783 1bd6 20       		.uleb128 0x20
 13784 1bd7 1E100000 		.4byte	.LASF287
 13785 1bdb 01       		.byte	0x1
 13786 1bdc 8E       		.byte	0x8e
 13787 1bdd 0E020000 		.4byte	0x20e
 13788 1be1 05       		.uleb128 0x5
 13789 1be2 03       		.byte	0x3
 13790 1be3 00000000 		.4byte	spiCounter2
 13791 1be7 20       		.uleb128 0x20
 13792 1be8 7B000000 		.4byte	.LASF288
 13793 1bec 01       		.byte	0x1
 13794 1bed 8F       		.byte	0x8f
 13795 1bee 0E020000 		.4byte	0x20e
 13796 1bf2 05       		.uleb128 0x5
 13797 1bf3 03       		.byte	0x3
 13798 1bf4 00000000 		.4byte	newDataFlag2
 13799 1bf8 20       		.uleb128 0x20
 13800 1bf9 540D0000 		.4byte	.LASF289
 13801 1bfd 01       		.byte	0x1
 13802 1bfe 90       		.byte	0x90
 13803 1bff 0E020000 		.4byte	0x20e
 13804 1c03 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 286


 13805 1c04 03       		.byte	0x3
 13806 1c05 00000000 		.4byte	currentPluckBuffer
 13807 1c09 20       		.uleb128 0x20
 13808 1c0a FA0E0000 		.4byte	.LASF290
 13809 1c0e 01       		.byte	0x1
 13810 1c0f 91       		.byte	0x91
 13811 1c10 0E020000 		.4byte	0x20e
 13812 1c14 05       		.uleb128 0x5
 13813 1c15 03       		.byte	0x3
 13814 1c16 00000000 		.4byte	currentBarBuffer
 13815 1c1a 20       		.uleb128 0x20
 13816 1c1b 46130000 		.4byte	.LASF291
 13817 1c1f 01       		.byte	0x1
 13818 1c20 92       		.byte	0x92
 13819 1c21 0E020000 		.4byte	0x20e
 13820 1c25 05       		.uleb128 0x5
 13821 1c26 03       		.byte	0x3
 13822 1c27 00000000 		.4byte	pluckErrorCount
 13823 1c2b 20       		.uleb128 0x20
 13824 1c2c 160F0000 		.4byte	.LASF292
 13825 1c30 01       		.byte	0x1
 13826 1c31 93       		.byte	0x93
 13827 1c32 13020000 		.4byte	0x213
 13828 1c36 05       		.uleb128 0x5
 13829 1c37 03       		.byte	0x3
 13830 1c38 00000000 		.4byte	SPI1ErrorCount
 13831 1c3c 20       		.uleb128 0x20
 13832 1c3d 40090000 		.4byte	.LASF293
 13833 1c41 01       		.byte	0x1
 13834 1c42 95       		.byte	0x95
 13835 1c43 0E020000 		.4byte	0x20e
 13836 1c47 05       		.uleb128 0x5
 13837 1c48 03       		.byte	0x3
 13838 1c49 00000000 		.4byte	inputData
 13839 1c4d 20       		.uleb128 0x20
 13840 1c4e 2F130000 		.4byte	.LASF294
 13841 1c52 01       		.byte	0x1
 13842 1c53 9E       		.byte	0x9e
 13843 1c54 B8000000 		.4byte	0xb8
 13844 1c58 05       		.uleb128 0x5
 13845 1c59 03       		.byte	0x3
 13846 1c5a 00000000 		.4byte	spiAdjusted
 13847 1c5e 20       		.uleb128 0x20
 13848 1c5f 55080000 		.4byte	.LASF295
 13849 1c63 01       		.byte	0x1
 13850 1c64 9F       		.byte	0x9f
 13851 1c65 B8000000 		.4byte	0xb8
 13852 1c69 05       		.uleb128 0x5
 13853 1c6a 03       		.byte	0x3
 13854 1c6b 00000000 		.4byte	mySpiCounter
 13855 1c6f 20       		.uleb128 0x20
 13856 1c70 480E0000 		.4byte	.LASF296
 13857 1c74 01       		.byte	0x1
 13858 1c75 A0       		.byte	0xa0
 13859 1c76 13020000 		.4byte	0x213
 13860 1c7a 05       		.uleb128 0x5
 13861 1c7b 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 287


 13862 1c7c 00000000 		.4byte	offsetErrorCount
 13863 1c80 20       		.uleb128 0x20
 13864 1c81 11010000 		.4byte	.LASF297
 13865 1c85 01       		.byte	0x1
 13866 1c86 A1       		.byte	0xa1
 13867 1c87 0E020000 		.4byte	0x20e
 13868 1c8b 05       		.uleb128 0x5
 13869 1c8c 03       		.byte	0x3
 13870 1c8d 00000000 		.4byte	SPI2errorflag
 13871 1c91 20       		.uleb128 0x20
 13872 1c92 33040000 		.4byte	.LASF298
 13873 1c96 01       		.byte	0x1
 13874 1c97 A2       		.byte	0xa2
 13875 1c98 C1020000 		.4byte	0x2c1
 13876 1c9c 05       		.uleb128 0x5
 13877 1c9d 03       		.byte	0x3
 13878 1c9e 00000000 		.4byte	knobs
 13879 1ca2 20       		.uleb128 0x20
 13880 1ca3 4B080000 		.4byte	.LASF299
 13881 1ca7 01       		.byte	0x1
 13882 1ca8 A3       		.byte	0xa3
 13883 1ca9 C1020000 		.4byte	0x2c1
 13884 1cad 05       		.uleb128 0x5
 13885 1cae 03       		.byte	0x3
 13886 1caf 00000000 		.4byte	prevKnobs
 13887 1cb3 20       		.uleb128 0x20
 13888 1cb4 1D0E0000 		.4byte	.LASF300
 13889 1cb8 01       		.byte	0x1
 13890 1cb9 A5       		.byte	0xa5
 13891 1cba C1020000 		.4byte	0x2c1
 13892 1cbe 05       		.uleb128 0x5
 13893 1cbf 03       		.byte	0x3
 13894 1cc0 00000000 		.4byte	knobs7bit
 13895 1cc4 20       		.uleb128 0x20
 13896 1cc5 B80D0000 		.4byte	.LASF301
 13897 1cc9 01       		.byte	0x1
 13898 1cca A6       		.byte	0xa6
 13899 1ccb C1020000 		.4byte	0x2c1
 13900 1ccf 05       		.uleb128 0x5
 13901 1cd0 03       		.byte	0x3
 13902 1cd1 00000000 		.4byte	prevKnobs7bit
 13903 1cd5 20       		.uleb128 0x20
 13904 1cd6 300A0000 		.4byte	.LASF302
 13905 1cda 01       		.byte	0x1
 13906 1cdb A8       		.byte	0xa8
 13907 1cdc B8000000 		.4byte	0xb8
 13908 1ce0 05       		.uleb128 0x5
 13909 1ce1 03       		.byte	0x3
 13910 1ce2 00000000 		.4byte	u7bit_volumePedal
 13911 1ce6 20       		.uleb128 0x20
 13912 1ce7 0C130000 		.4byte	.LASF303
 13913 1ceb 01       		.byte	0x1
 13914 1cec A9       		.byte	0xa9
 13915 1ced B8000000 		.4byte	0xb8
 13916 1cf1 05       		.uleb128 0x5
 13917 1cf2 03       		.byte	0x3
 13918 1cf3 00000000 		.4byte	prev_7bit_volumePedal
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 288


 13919 1cf7 20       		.uleb128 0x20
 13920 1cf8 480D0000 		.4byte	.LASF304
 13921 1cfc 01       		.byte	0x1
 13922 1cfd AA       		.byte	0xaa
 13923 1cfe 0E020000 		.4byte	0x20e
 13924 1d02 05       		.uleb128 0x5
 13925 1d03 03       		.byte	0x3
 13926 1d04 00000000 		.4byte	SPI2started
 13927 1d08 20       		.uleb128 0x20
 13928 1d09 63110000 		.4byte	.LASF305
 13929 1d0d 01       		.byte	0x1
 13930 1d0e AE       		.byte	0xae
 13931 1d0f 14150000 		.4byte	0x1514
 13932 1d13 05       		.uleb128 0x5
 13933 1d14 03       		.byte	0x3
 13934 1d15 00000000 		.4byte	macroKnobValues7bit
 13935 1d19 20       		.uleb128 0x20
 13936 1d1a 0D040000 		.4byte	.LASF306
 13937 1d1e 01       		.byte	0x1
 13938 1d1f AF       		.byte	0xaf
 13939 1d20 14150000 		.4byte	0x1514
 13940 1d24 05       		.uleb128 0x5
 13941 1d25 03       		.byte	0x3
 13942 1d26 00000000 		.4byte	prevMacroKnobValues7bit
 13943 1d2a 20       		.uleb128 0x20
 13944 1d2b E50F0000 		.4byte	.LASF307
 13945 1d2f 01       		.byte	0x1
 13946 1d30 B7       		.byte	0xb7
 13947 1d31 B4100000 		.4byte	0x10b4
 13948 1d35 05       		.uleb128 0x5
 13949 1d36 03       		.byte	0x3
 13950 1d37 00000000 		.4byte	array
 13951 1d3b 20       		.uleb128 0x20
 13952 1d3c D0090000 		.4byte	.LASF308
 13953 1d40 01       		.byte	0x1
 13954 1d41 BA       		.byte	0xba
 13955 1d42 FD010000 		.4byte	0x1fd
 13956 1d46 05       		.uleb128 0x5
 13957 1d47 03       		.byte	0x3
 13958 1d48 00000000 		.4byte	eepromReturnValue
 13959 1d4c 20       		.uleb128 0x20
 13960 1d4d 6D060000 		.4byte	.LASF309
 13961 1d51 01       		.byte	0x1
 13962 1d52 C1       		.byte	0xc1
 13963 1d53 EF000000 		.4byte	0xef
 13964 1d57 05       		.uleb128 0x5
 13965 1d58 03       		.byte	0x3
 13966 1d59 00000000 		.4byte	eeprom_cnt
 13967 1d5d 20       		.uleb128 0x20
 13968 1d5e 0C0A0000 		.4byte	.LASF84
 13969 1d62 01       		.byte	0x1
 13970 1d63 C2       		.byte	0xc2
 13971 1d64 28010000 		.4byte	0x128
 13972 1d68 05       		.uleb128 0x5
 13973 1d69 03       		.byte	0x3
 13974 1d6a 00000000 		.4byte	status
 13975 1d6e 23       		.uleb128 0x23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 289


 13976 1d6f 70747200 		.ascii	"ptr\000"
 13977 1d73 01       		.byte	0x1
 13978 1d74 C3       		.byte	0xc3
 13979 1d75 7F1D0000 		.4byte	0x1d7f
 13980 1d79 05       		.uleb128 0x5
 13981 1d7a 03       		.byte	0x3
 13982 1d7b 00000000 		.4byte	ptr
 13983 1d7f 1B       		.uleb128 0x1b
 13984 1d80 04       		.byte	0x4
 13985 1d81 8A1D0000 		.4byte	0x1d8a
 13986 1d85 1F       		.uleb128 0x1f
 13987 1d86 EF000000 		.4byte	0xef
 13988 1d8a 06       		.uleb128 0x6
 13989 1d8b 851D0000 		.4byte	0x1d85
 13990 1d8f 20       		.uleb128 0x20
 13991 1d90 CB020000 		.4byte	.LASF310
 13992 1d94 01       		.byte	0x1
 13993 1d95 C4       		.byte	0xc4
 13994 1d96 A01D0000 		.4byte	0x1da0
 13995 1d9a 05       		.uleb128 0x5
 13996 1d9b 03       		.byte	0x3
 13997 1d9c 00000000 		.4byte	barCount
 13998 1da0 06       		.uleb128 0x6
 13999 1da1 9F000000 		.4byte	0x9f
 14000 1da5 0B       		.uleb128 0xb
 14001 1da6 0E020000 		.4byte	0x20e
 14002 1daa B51D0000 		.4byte	0x1db5
 14003 1dae 0C       		.uleb128 0xc
 14004 1daf 4C010000 		.4byte	0x14c
 14005 1db3 0F       		.byte	0xf
 14006 1db4 00       		.byte	0
 14007 1db5 20       		.uleb128 0x20
 14008 1db6 57010000 		.4byte	.LASF311
 14009 1dba 01       		.byte	0x1
 14010 1dbb C9       		.byte	0xc9
 14011 1dbc C61D0000 		.4byte	0x1dc6
 14012 1dc0 05       		.uleb128 0x5
 14013 1dc1 03       		.byte	0x3
 14014 1dc2 00000000 		.4byte	I2Cbuff2
 14015 1dc6 06       		.uleb128 0x6
 14016 1dc7 A51D0000 		.4byte	0x1da5
 14017 1dcb 20       		.uleb128 0x20
 14018 1dcc 130A0000 		.4byte	.LASF312
 14019 1dd0 01       		.byte	0x1
 14020 1dd1 CA       		.byte	0xca
 14021 1dd2 0E020000 		.4byte	0x20e
 14022 1dd6 05       		.uleb128 0x5
 14023 1dd7 03       		.byte	0x3
 14024 1dd8 00000000 		.4byte	send_it
 14025 1ddc 0B       		.uleb128 0xb
 14026 1ddd B8000000 		.4byte	0xb8
 14027 1de1 F21D0000 		.4byte	0x1df2
 14028 1de5 0C       		.uleb128 0xc
 14029 1de6 4C010000 		.4byte	0x14c
 14030 1dea 0B       		.byte	0xb
 14031 1deb 0C       		.uleb128 0xc
 14032 1dec 4C010000 		.4byte	0x14c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 290


 14033 1df0 01       		.byte	0x1
 14034 1df1 00       		.byte	0
 14035 1df2 20       		.uleb128 0x20
 14036 1df3 60010000 		.4byte	.LASF313
 14037 1df7 01       		.byte	0x1
 14038 1df8 D0       		.byte	0xd0
 14039 1df9 DC1D0000 		.4byte	0x1ddc
 14040 1dfd 05       		.uleb128 0x5
 14041 1dfe 03       		.byte	0x3
 14042 1dff 00000000 		.4byte	mux_states
 14043 1e03 0B       		.uleb128 0xb
 14044 1e04 B8000000 		.4byte	0xb8
 14045 1e08 131E0000 		.4byte	0x1e13
 14046 1e0c 0C       		.uleb128 0xc
 14047 1e0d 4C010000 		.4byte	0x14c
 14048 1e11 0B       		.byte	0xb
 14049 1e12 00       		.byte	0
 14050 1e13 20       		.uleb128 0x20
 14051 1e14 DF120000 		.4byte	.LASF314
 14052 1e18 01       		.byte	0x1
 14053 1e19 D1       		.byte	0xd1
 14054 1e1a 031E0000 		.4byte	0x1e03
 14055 1e1e 05       		.uleb128 0x5
 14056 1e1f 03       		.byte	0x3
 14057 1e20 00000000 		.4byte	i2c_skipped
 14058 1e24 20       		.uleb128 0x20
 14059 1e25 28110000 		.4byte	.LASF315
 14060 1e29 01       		.byte	0x1
 14061 1e2a D4       		.byte	0xd4
 14062 1e2b BE130000 		.4byte	0x13be
 14063 1e2f 05       		.uleb128 0x5
 14064 1e30 03       		.byte	0x3
 14065 1e31 00000000 		.4byte	pedals_lowWithDeadZone
 14066 1e35 20       		.uleb128 0x20
 14067 1e36 E3020000 		.4byte	.LASF316
 14068 1e3a 01       		.byte	0x1
 14069 1e3b D5       		.byte	0xd5
 14070 1e3c BE130000 		.4byte	0x13be
 14071 1e40 05       		.uleb128 0x5
 14072 1e41 03       		.byte	0x3
 14073 1e42 00000000 		.4byte	pedals_highWithDeadZone
 14074 1e46 20       		.uleb128 0x20
 14075 1e47 12080000 		.4byte	.LASF317
 14076 1e4b 01       		.byte	0x1
 14077 1e4c D7       		.byte	0xd7
 14078 1e4d CE000000 		.4byte	0xce
 14079 1e51 05       		.uleb128 0x5
 14080 1e52 03       		.byte	0x3
 14081 1e53 00000000 		.4byte	volumePedal
 14082 1e57 20       		.uleb128 0x20
 14083 1e58 A00E0000 		.4byte	.LASF318
 14084 1e5c 01       		.byte	0x1
 14085 1e5d D8       		.byte	0xd8
 14086 1e5e BE130000 		.4byte	0x13be
 14087 1e62 05       		.uleb128 0x5
 14088 1e63 03       		.byte	0x3
 14089 1e64 00000000 		.4byte	processed_pedals
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 291


 14090 1e68 20       		.uleb128 0x20
 14091 1e69 320D0000 		.4byte	.LASF319
 14092 1e6d 01       		.byte	0x1
 14093 1e6e D9       		.byte	0xd9
 14094 1e6f BE130000 		.4byte	0x13be
 14095 1e73 05       		.uleb128 0x5
 14096 1e74 03       		.byte	0x3
 14097 1e75 00000000 		.4byte	prev_processed_pedals
 14098 1e79 20       		.uleb128 0x20
 14099 1e7a 35080000 		.4byte	.LASF320
 14100 1e7e 01       		.byte	0x1
 14101 1e7f DA       		.byte	0xda
 14102 1e80 F0130000 		.4byte	0x13f0
 14103 1e84 05       		.uleb128 0x5
 14104 1e85 03       		.byte	0x3
 14105 1e86 00000000 		.4byte	pedals8bit
 14106 1e8a 20       		.uleb128 0x20
 14107 1e8b 01130000 		.4byte	.LASF321
 14108 1e8f 01       		.byte	0x1
 14109 1e90 DB       		.byte	0xdb
 14110 1e91 F0130000 		.4byte	0x13f0
 14111 1e95 05       		.uleb128 0x5
 14112 1e96 03       		.byte	0x3
 14113 1e97 00000000 		.4byte	pedals7bit
 14114 1e9b 20       		.uleb128 0x20
 14115 1e9c DD0D0000 		.4byte	.LASF322
 14116 1ea0 01       		.byte	0x1
 14117 1ea1 DC       		.byte	0xdc
 14118 1ea2 F0130000 		.4byte	0x13f0
 14119 1ea6 05       		.uleb128 0x5
 14120 1ea7 03       		.byte	0x3
 14121 1ea8 00000000 		.4byte	prevPedals7bit
 14122 1eac 20       		.uleb128 0x20
 14123 1ead 56000000 		.4byte	.LASF323
 14124 1eb1 01       		.byte	0x1
 14125 1eb2 DD       		.byte	0xdd
 14126 1eb3 C3000000 		.4byte	0xc3
 14127 1eb7 05       		.uleb128 0x5
 14128 1eb8 03       		.byte	0x3
 14129 1eb9 00000000 		.4byte	prev_processed_volumePedal
 14130 1ebd 20       		.uleb128 0x20
 14131 1ebe 590E0000 		.4byte	.LASF324
 14132 1ec2 01       		.byte	0x1
 14133 1ec3 DE       		.byte	0xde
 14134 1ec4 C3000000 		.4byte	0xc3
 14135 1ec8 05       		.uleb128 0x5
 14136 1ec9 03       		.byte	0x3
 14137 1eca 00000000 		.4byte	processed_volumePedal
 14138 1ece 20       		.uleb128 0x20
 14139 1ecf FB070000 		.4byte	.LASF325
 14140 1ed3 01       		.byte	0x1
 14141 1ed4 E0       		.byte	0xe0
 14142 1ed5 B8000000 		.4byte	0xb8
 14143 1ed9 05       		.uleb128 0x5
 14144 1eda 03       		.byte	0x3
 14145 1edb 00000000 		.4byte	sliderBugOn
 14146 1edf 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 292


 14147 1ee0 4D030000 		.4byte	.LASF326
 14148 1ee4 01       		.byte	0x1
 14149 1ee5 E9       		.byte	0xe9
 14150 1ee6 32120000 		.4byte	0x1232
 14151 1eea 05       		.uleb128 0x5
 14152 1eeb 03       		.byte	0x3
 14153 1eec 00000000 		.4byte	presetLoadedResponse
 14154 1ef0 0B       		.uleb128 0xb
 14155 1ef1 13010000 		.4byte	0x113
 14156 1ef5 001F0000 		.4byte	0x1f00
 14157 1ef9 0C       		.uleb128 0xc
 14158 1efa 4C010000 		.4byte	0x14c
 14159 1efe 0B       		.byte	0xb
 14160 1eff 00       		.byte	0
 14161 1f00 20       		.uleb128 0x20
 14162 1f01 3B030000 		.4byte	.LASF327
 14163 1f05 01       		.byte	0x1
 14164 1f06 EF       		.byte	0xef
 14165 1f07 F01E0000 		.4byte	0x1ef0
 14166 1f0b 05       		.uleb128 0x5
 14167 1f0c 03       		.byte	0x3
 14168 1f0d 00000000 		.4byte	fretScalingInMIDI
 14169 1f11 20       		.uleb128 0x20
 14170 1f12 39140000 		.4byte	.LASF328
 14171 1f16 01       		.byte	0x1
 14172 1f17 F0       		.byte	0xf0
 14173 1f18 F01E0000 		.4byte	0x1ef0
 14174 1f1c 05       		.uleb128 0x5
 14175 1f1d 03       		.byte	0x3
 14176 1f1e 00000000 		.4byte	fretScalingInRatios
 14177 1f22 0B       		.uleb128 0xb
 14178 1f23 13010000 		.4byte	0x113
 14179 1f27 321F0000 		.4byte	0x1f32
 14180 1f2b 0C       		.uleb128 0xc
 14181 1f2c 4C010000 		.4byte	0x14c
 14182 1f30 09       		.byte	0x9
 14183 1f31 00       		.byte	0
 14184 1f32 20       		.uleb128 0x20
 14185 1f33 E3040000 		.4byte	.LASF329
 14186 1f37 01       		.byte	0x1
 14187 1f38 F2       		.byte	0xf2
 14188 1f39 221F0000 		.4byte	0x1f22
 14189 1f3d 05       		.uleb128 0x5
 14190 1f3e 03       		.byte	0x3
 14191 1f3f 00000000 		.4byte	pedalRatios
 14192 1f43 20       		.uleb128 0x20
 14193 1f44 81050000 		.4byte	.LASF330
 14194 1f48 01       		.byte	0x1
 14195 1f49 F3       		.byte	0xf3
 14196 1f4a B8000000 		.4byte	0xb8
 14197 1f4e 05       		.uleb128 0x5
 14198 1f4f 03       		.byte	0x3
 14199 1f50 00000000 		.4byte	last_mux
 14200 1f54 20       		.uleb128 0x20
 14201 1f55 C80B0000 		.4byte	.LASF331
 14202 1f59 01       		.byte	0x1
 14203 1f5a F4       		.byte	0xf4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 293


 14204 1f5b 0E020000 		.4byte	0x20e
 14205 1f5f 05       		.uleb128 0x5
 14206 1f60 03       		.byte	0x3
 14207 1f61 00000000 		.4byte	main_counter
 14208 1f65 20       		.uleb128 0x20
 14209 1f66 0E030000 		.4byte	.LASF332
 14210 1f6a 01       		.byte	0x1
 14211 1f6b F6       		.byte	0xf6
 14212 1f6c B8000000 		.4byte	0xb8
 14213 1f70 05       		.uleb128 0x5
 14214 1f71 03       		.byte	0x3
 14215 1f72 00000000 		.4byte	voice
 14216 1f76 20       		.uleb128 0x20
 14217 1f77 B10E0000 		.4byte	.LASF333
 14218 1f7b 01       		.byte	0x1
 14219 1f7c FD       		.byte	0xfd
 14220 1f7d F0130000 		.4byte	0x13f0
 14221 1f81 05       		.uleb128 0x5
 14222 1f82 03       		.byte	0x3
 14223 1f83 00000000 		.4byte	copedentMapping
 14224 1f87 0B       		.uleb128 0xb
 14225 1f88 13010000 		.4byte	0x113
 14226 1f8c A31F0000 		.4byte	0x1fa3
 14227 1f90 0C       		.uleb128 0xc
 14228 1f91 4C010000 		.4byte	0x14c
 14229 1f95 06       		.byte	0x6
 14230 1f96 0C       		.uleb128 0xc
 14231 1f97 4C010000 		.4byte	0x14c
 14232 1f9b 0A       		.byte	0xa
 14233 1f9c 0C       		.uleb128 0xc
 14234 1f9d 4C010000 		.4byte	0x14c
 14235 1fa1 0B       		.byte	0xb
 14236 1fa2 00       		.byte	0
 14237 1fa3 20       		.uleb128 0x20
 14238 1fa4 2C080000 		.4byte	.LASF334
 14239 1fa8 01       		.byte	0x1
 14240 1fa9 FE       		.byte	0xfe
 14241 1faa 871F0000 		.4byte	0x1f87
 14242 1fae 05       		.uleb128 0x5
 14243 1faf 03       		.byte	0x3
 14244 1fb0 00000000 		.4byte	copedent
 14245 1fb4 22       		.uleb128 0x22
 14246 1fb5 A3030000 		.4byte	.LASF335
 14247 1fb9 01       		.byte	0x1
 14248 1fba 0101     		.2byte	0x101
 14249 1fbc F01E0000 		.4byte	0x1ef0
 14250 1fc0 05       		.uleb128 0x5
 14251 1fc1 03       		.byte	0x3
 14252 1fc2 00000000 		.4byte	prevStringPitchBend
 14253 1fc6 0B       		.uleb128 0xb
 14254 1fc7 13010000 		.4byte	0x113
 14255 1fcb DC1F0000 		.4byte	0x1fdc
 14256 1fcf 0C       		.uleb128 0xc
 14257 1fd0 4C010000 		.4byte	0x14c
 14258 1fd4 09       		.byte	0x9
 14259 1fd5 0C       		.uleb128 0xc
 14260 1fd6 4C010000 		.4byte	0x14c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 294


 14261 1fda 0B       		.byte	0xb
 14262 1fdb 00       		.byte	0
 14263 1fdc 22       		.uleb128 0x22
 14264 1fdd 32140000 		.4byte	.LASF336
 14265 1fe1 01       		.byte	0x1
 14266 1fe2 0301     		.2byte	0x103
 14267 1fe4 C61F0000 		.4byte	0x1fc6
 14268 1fe8 05       		.uleb128 0x5
 14269 1fe9 03       		.byte	0x3
 14270 1fea 00000000 		.4byte	pedals
 14271 1fee 22       		.uleb128 0x22
 14272 1fef 8E0D0000 		.4byte	.LASF337
 14273 1ff3 01       		.byte	0x1
 14274 1ff4 0501     		.2byte	0x105
 14275 1ff6 F0130000 		.4byte	0x13f0
 14276 1ffa 05       		.uleb128 0x5
 14277 1ffb 03       		.byte	0x3
 14278 1ffc 00000000 		.4byte	pedal_cc_assignments
 14279 2000 22       		.uleb128 0x22
 14280 2001 EB120000 		.4byte	.LASF338
 14281 2005 01       		.byte	0x1
 14282 2006 0601     		.2byte	0x106
 14283 2008 F01E0000 		.4byte	0x1ef0
 14284 200c 05       		.uleb128 0x5
 14285 200d 03       		.byte	0x3
 14286 200e 00000000 		.4byte	openStringFrequencies
 14287 2012 0B       		.uleb128 0xb
 14288 2013 13010000 		.4byte	0x113
 14289 2017 22200000 		.4byte	0x2022
 14290 201b 0C       		.uleb128 0xc
 14291 201c 4C010000 		.4byte	0x14c
 14292 2020 01       		.byte	0x1
 14293 2021 00       		.byte	0
 14294 2022 22       		.uleb128 0x22
 14295 2023 42060000 		.4byte	.LASF339
 14296 2027 01       		.byte	0x1
 14297 2028 0701     		.2byte	0x107
 14298 202a 12200000 		.4byte	0x2012
 14299 202e 05       		.uleb128 0x5
 14300 202f 03       		.byte	0x3
 14301 2030 00000000 		.4byte	stringMappedPositionsInRatios
 14302 2034 22       		.uleb128 0x22
 14303 2035 9B080000 		.4byte	.LASF340
 14304 2039 01       		.byte	0x1
 14305 203a 0801     		.2byte	0x108
 14306 203c 12200000 		.4byte	0x2012
 14307 2040 05       		.uleb128 0x5
 14308 2041 03       		.byte	0x3
 14309 2042 00000000 		.4byte	stringMappedPositionsInMIDI
 14310 2046 0B       		.uleb128 0xb
 14311 2047 CE000000 		.4byte	0xce
 14312 204b 56200000 		.4byte	0x2056
 14313 204f 0C       		.uleb128 0xc
 14314 2050 4C010000 		.4byte	0x14c
 14315 2054 01       		.byte	0x1
 14316 2055 00       		.byte	0
 14317 2056 22       		.uleb128 0x22
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 295


 14318 2057 830A0000 		.4byte	.LASF341
 14319 205b 01       		.byte	0x1
 14320 205c 0901     		.2byte	0x109
 14321 205e 46200000 		.4byte	0x2046
 14322 2062 05       		.uleb128 0x5
 14323 2063 03       		.byte	0x3
 14324 2064 00000000 		.4byte	barMidiOuterStrings
 14325 2068 22       		.uleb128 0x22
 14326 2069 8D140000 		.4byte	.LASF342
 14327 206d 01       		.byte	0x1
 14328 206e 0A01     		.2byte	0x10a
 14329 2070 F01E0000 		.4byte	0x1ef0
 14330 2074 05       		.uleb128 0x5
 14331 2075 03       		.byte	0x3
 14332 2076 00000000 		.4byte	stringFrequencies
 14333 207a 22       		.uleb128 0x22
 14334 207b 3B050000 		.4byte	.LASF343
 14335 207f 01       		.byte	0x1
 14336 2080 0B01     		.2byte	0x10b
 14337 2082 F01E0000 		.4byte	0x1ef0
 14338 2086 05       		.uleb128 0x5
 14339 2087 03       		.byte	0x3
 14340 2088 00000000 		.4byte	stringOctave
 14341 208c 22       		.uleb128 0x22
 14342 208d 5A120000 		.4byte	.LASF344
 14343 2091 01       		.byte	0x1
 14344 2092 0C01     		.2byte	0x10c
 14345 2094 F01E0000 		.4byte	0x1ef0
 14346 2098 05       		.uleb128 0x5
 14347 2099 03       		.byte	0x3
 14348 209a 00000000 		.4byte	stringPitch
 14349 209e 22       		.uleb128 0x22
 14350 209f F9110000 		.4byte	.LASF345
 14351 20a3 01       		.byte	0x1
 14352 20a4 0D01     		.2byte	0x10d
 14353 20a6 F01E0000 		.4byte	0x1ef0
 14354 20aa 05       		.uleb128 0x5
 14355 20ab 03       		.byte	0x3
 14356 20ac 00000000 		.4byte	stringMIDI
 14357 20b0 0B       		.uleb128 0xb
 14358 20b1 9F000000 		.4byte	0x9f
 14359 20b5 C0200000 		.4byte	0x20c0
 14360 20b9 0C       		.uleb128 0xc
 14361 20ba 4C010000 		.4byte	0x14c
 14362 20be 0B       		.byte	0xb
 14363 20bf 00       		.byte	0
 14364 20c0 22       		.uleb128 0x22
 14365 20c1 CD0A0000 		.4byte	.LASF346
 14366 20c5 01       		.byte	0x1
 14367 20c6 0E01     		.2byte	0x10e
 14368 20c8 B0200000 		.4byte	0x20b0
 14369 20cc 05       		.uleb128 0x5
 14370 20cd 03       		.byte	0x3
 14371 20ce 00000000 		.4byte	openStringMIDI_Int
 14372 20d2 22       		.uleb128 0x22
 14373 20d3 74090000 		.4byte	.LASF347
 14374 20d7 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 296


 14375 20d8 1C01     		.2byte	0x11c
 14376 20da B8000000 		.4byte	0xb8
 14377 20de 05       		.uleb128 0x5
 14378 20df 03       		.byte	0x3
 14379 20e0 00000000 		.4byte	presetWhenMacroWriteStarted
 14380 20e4 22       		.uleb128 0x22
 14381 20e5 28120000 		.4byte	.LASF348
 14382 20e9 01       		.byte	0x1
 14383 20ea 1D01     		.2byte	0x11d
 14384 20ec B8000000 		.4byte	0xb8
 14385 20f0 05       		.uleb128 0x5
 14386 20f1 03       		.byte	0x3
 14387 20f2 00000000 		.4byte	macroPageWhenMacroWriteStarted
 14388 20f6 22       		.uleb128 0x22
 14389 20f7 1B110000 		.4byte	.LASF349
 14390 20fb 01       		.byte	0x1
 14391 20fc 1F01     		.2byte	0x11f
 14392 20fe 221F0000 		.4byte	0x1f22
 14393 2102 05       		.uleb128 0x5
 14394 2103 03       		.byte	0x3
 14395 2104 00000000 		.4byte	pedals_float
 14396 2108 22       		.uleb128 0x22
 14397 2109 F5100000 		.4byte	.LASF350
 14398 210d 01       		.byte	0x1
 14399 210e 2001     		.2byte	0x120
 14400 2110 13010000 		.4byte	0x113
 14401 2114 05       		.uleb128 0x5
 14402 2115 03       		.byte	0x3
 14403 2116 00000000 		.4byte	stringRepDivider
 14404 211a 22       		.uleb128 0x22
 14405 211b B30C0000 		.4byte	.LASF351
 14406 211f 01       		.byte	0x1
 14407 2120 A006     		.2byte	0x6a0
 14408 2122 B0200000 		.4byte	0x20b0
 14409 2126 05       		.uleb128 0x5
 14410 2127 03       		.byte	0x3
 14411 2128 00000000 		.4byte	prevNotes
 14412 212c 22       		.uleb128 0x22
 14413 212d 080E0000 		.4byte	.LASF352
 14414 2131 01       		.byte	0x1
 14415 2132 1507     		.2byte	0x715
 14416 2134 0E020000 		.4byte	0x20e
 14417 2138 05       		.uleb128 0x5
 14418 2139 03       		.byte	0x3
 14419 213a 00000000 		.4byte	checkStatus
 14420 213e 22       		.uleb128 0x22
 14421 213f B20F0000 		.4byte	.LASF353
 14422 2143 01       		.byte	0x1
 14423 2144 1607     		.2byte	0x716
 14424 2146 13020000 		.4byte	0x213
 14425 214a 05       		.uleb128 0x5
 14426 214b 03       		.byte	0x3
 14427 214c 00000000 		.4byte	checkBase
 14428 2150 0B       		.uleb128 0xb
 14429 2151 0E020000 		.4byte	0x20e
 14430 2155 60210000 		.4byte	0x2160
 14431 2159 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 297


 14432 215a 4C010000 		.4byte	0x14c
 14433 215e 03       		.byte	0x3
 14434 215f 00       		.byte	0
 14435 2160 22       		.uleb128 0x22
 14436 2161 6F0E0000 		.4byte	.LASF98
 14437 2165 01       		.byte	0x1
 14438 2166 1707     		.2byte	0x717
 14439 2168 72210000 		.4byte	0x2172
 14440 216c 05       		.uleb128 0x5
 14441 216d 03       		.byte	0x3
 14442 216e 00000000 		.4byte	tempMIDI
 14443 2172 06       		.uleb128 0x6
 14444 2173 50210000 		.4byte	0x2150
 14445 2177 22       		.uleb128 0x22
 14446 2178 33000000 		.4byte	.LASF354
 14447 217c 01       		.byte	0x1
 14448 217d 1807     		.2byte	0x718
 14449 217f 0E020000 		.4byte	0x20e
 14450 2183 05       		.uleb128 0x5
 14451 2184 03       		.byte	0x3
 14452 2185 00000000 		.4byte	firstSysex
 14453 2189 22       		.uleb128 0x22
 14454 218a 83070000 		.4byte	.LASF355
 14455 218e 01       		.byte	0x1
 14456 218f 1907     		.2byte	0x719
 14457 2191 9B210000 		.4byte	0x219b
 14458 2195 05       		.uleb128 0x5
 14459 2196 03       		.byte	0x3
 14460 2197 00000000 		.4byte	sysexPointerMask
 14461 219b 1F       		.uleb128 0x1f
 14462 219c E4000000 		.4byte	0xe4
 14463 21a0 22       		.uleb128 0x22
 14464 21a1 0C070000 		.4byte	.LASF356
 14465 21a5 01       		.byte	0x1
 14466 21a6 1A07     		.2byte	0x71a
 14467 21a8 09020000 		.4byte	0x209
 14468 21ac 05       		.uleb128 0x5
 14469 21ad 03       		.byte	0x3
 14470 21ae 00000000 		.4byte	moreToDo
 14471 21b2 22       		.uleb128 0x22
 14472 21b3 88080000 		.4byte	.LASF357
 14473 21b7 01       		.byte	0x1
 14474 21b8 1C07     		.2byte	0x71c
 14475 21ba 9F000000 		.4byte	0x9f
 14476 21be 05       		.uleb128 0x5
 14477 21bf 03       		.byte	0x3
 14478 21c0 00000000 		.4byte	SPI_errors
 14479 21c4 0B       		.uleb128 0xb
 14480 21c5 09020000 		.4byte	0x209
 14481 21c9 D4210000 		.4byte	0x21d4
 14482 21cd 0C       		.uleb128 0xc
 14483 21ce 4C010000 		.4byte	0x14c
 14484 21d2 0F       		.byte	0xf
 14485 21d3 00       		.byte	0
 14486 21d4 22       		.uleb128 0x22
 14487 21d5 AF100000 		.4byte	.LASF358
 14488 21d9 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 298


 14489 21da 1E07     		.2byte	0x71e
 14490 21dc E6210000 		.4byte	0x21e6
 14491 21e0 05       		.uleb128 0x5
 14492 21e1 03       		.byte	0x3
 14493 21e2 00000000 		.4byte	nearbyValues
 14494 21e6 06       		.uleb128 0x6
 14495 21e7 C4210000 		.4byte	0x21c4
 14496 21eb 00       		.byte	0
 14497              		.section	.debug_abbrev,"",%progbits
 14498              	.Ldebug_abbrev0:
 14499 0000 01       		.uleb128 0x1
 14500 0001 11       		.uleb128 0x11
 14501 0002 01       		.byte	0x1
 14502 0003 25       		.uleb128 0x25
 14503 0004 0E       		.uleb128 0xe
 14504 0005 13       		.uleb128 0x13
 14505 0006 0B       		.uleb128 0xb
 14506 0007 03       		.uleb128 0x3
 14507 0008 0E       		.uleb128 0xe
 14508 0009 1B       		.uleb128 0x1b
 14509 000a 0E       		.uleb128 0xe
 14510 000b 55       		.uleb128 0x55
 14511 000c 17       		.uleb128 0x17
 14512 000d 11       		.uleb128 0x11
 14513 000e 01       		.uleb128 0x1
 14514 000f 10       		.uleb128 0x10
 14515 0010 17       		.uleb128 0x17
 14516 0011 00       		.byte	0
 14517 0012 00       		.byte	0
 14518 0013 02       		.uleb128 0x2
 14519 0014 16       		.uleb128 0x16
 14520 0015 00       		.byte	0
 14521 0016 03       		.uleb128 0x3
 14522 0017 0E       		.uleb128 0xe
 14523 0018 3A       		.uleb128 0x3a
 14524 0019 0B       		.uleb128 0xb
 14525 001a 3B       		.uleb128 0x3b
 14526 001b 0B       		.uleb128 0xb
 14527 001c 49       		.uleb128 0x49
 14528 001d 13       		.uleb128 0x13
 14529 001e 00       		.byte	0
 14530 001f 00       		.byte	0
 14531 0020 03       		.uleb128 0x3
 14532 0021 24       		.uleb128 0x24
 14533 0022 00       		.byte	0
 14534 0023 0B       		.uleb128 0xb
 14535 0024 0B       		.uleb128 0xb
 14536 0025 3E       		.uleb128 0x3e
 14537 0026 0B       		.uleb128 0xb
 14538 0027 03       		.uleb128 0x3
 14539 0028 0E       		.uleb128 0xe
 14540 0029 00       		.byte	0
 14541 002a 00       		.byte	0
 14542 002b 04       		.uleb128 0x4
 14543 002c 24       		.uleb128 0x24
 14544 002d 00       		.byte	0
 14545 002e 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 299


 14546 002f 0B       		.uleb128 0xb
 14547 0030 3E       		.uleb128 0x3e
 14548 0031 0B       		.uleb128 0xb
 14549 0032 03       		.uleb128 0x3
 14550 0033 08       		.uleb128 0x8
 14551 0034 00       		.byte	0
 14552 0035 00       		.byte	0
 14553 0036 05       		.uleb128 0x5
 14554 0037 16       		.uleb128 0x16
 14555 0038 00       		.byte	0
 14556 0039 03       		.uleb128 0x3
 14557 003a 0E       		.uleb128 0xe
 14558 003b 3A       		.uleb128 0x3a
 14559 003c 0B       		.uleb128 0xb
 14560 003d 3B       		.uleb128 0x3b
 14561 003e 05       		.uleb128 0x5
 14562 003f 49       		.uleb128 0x49
 14563 0040 13       		.uleb128 0x13
 14564 0041 00       		.byte	0
 14565 0042 00       		.byte	0
 14566 0043 06       		.uleb128 0x6
 14567 0044 35       		.uleb128 0x35
 14568 0045 00       		.byte	0
 14569 0046 49       		.uleb128 0x49
 14570 0047 13       		.uleb128 0x13
 14571 0048 00       		.byte	0
 14572 0049 00       		.byte	0
 14573 004a 07       		.uleb128 0x7
 14574 004b 13       		.uleb128 0x13
 14575 004c 01       		.byte	0x1
 14576 004d 0B       		.uleb128 0xb
 14577 004e 0B       		.uleb128 0xb
 14578 004f 3A       		.uleb128 0x3a
 14579 0050 0B       		.uleb128 0xb
 14580 0051 3B       		.uleb128 0x3b
 14581 0052 05       		.uleb128 0x5
 14582 0053 01       		.uleb128 0x1
 14583 0054 13       		.uleb128 0x13
 14584 0055 00       		.byte	0
 14585 0056 00       		.byte	0
 14586 0057 08       		.uleb128 0x8
 14587 0058 0D       		.uleb128 0xd
 14588 0059 00       		.byte	0
 14589 005a 03       		.uleb128 0x3
 14590 005b 0E       		.uleb128 0xe
 14591 005c 3A       		.uleb128 0x3a
 14592 005d 0B       		.uleb128 0xb
 14593 005e 3B       		.uleb128 0x3b
 14594 005f 05       		.uleb128 0x5
 14595 0060 49       		.uleb128 0x49
 14596 0061 13       		.uleb128 0x13
 14597 0062 38       		.uleb128 0x38
 14598 0063 0B       		.uleb128 0xb
 14599 0064 00       		.byte	0
 14600 0065 00       		.byte	0
 14601 0066 09       		.uleb128 0x9
 14602 0067 04       		.uleb128 0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 300


 14603 0068 01       		.byte	0x1
 14604 0069 0B       		.uleb128 0xb
 14605 006a 0B       		.uleb128 0xb
 14606 006b 49       		.uleb128 0x49
 14607 006c 13       		.uleb128 0x13
 14608 006d 3A       		.uleb128 0x3a
 14609 006e 0B       		.uleb128 0xb
 14610 006f 3B       		.uleb128 0x3b
 14611 0070 05       		.uleb128 0x5
 14612 0071 01       		.uleb128 0x1
 14613 0072 13       		.uleb128 0x13
 14614 0073 00       		.byte	0
 14615 0074 00       		.byte	0
 14616 0075 0A       		.uleb128 0xa
 14617 0076 28       		.uleb128 0x28
 14618 0077 00       		.byte	0
 14619 0078 03       		.uleb128 0x3
 14620 0079 0E       		.uleb128 0xe
 14621 007a 1C       		.uleb128 0x1c
 14622 007b 0B       		.uleb128 0xb
 14623 007c 00       		.byte	0
 14624 007d 00       		.byte	0
 14625 007e 0B       		.uleb128 0xb
 14626 007f 01       		.uleb128 0x1
 14627 0080 01       		.byte	0x1
 14628 0081 49       		.uleb128 0x49
 14629 0082 13       		.uleb128 0x13
 14630 0083 01       		.uleb128 0x1
 14631 0084 13       		.uleb128 0x13
 14632 0085 00       		.byte	0
 14633 0086 00       		.byte	0
 14634 0087 0C       		.uleb128 0xc
 14635 0088 21       		.uleb128 0x21
 14636 0089 00       		.byte	0
 14637 008a 49       		.uleb128 0x49
 14638 008b 13       		.uleb128 0x13
 14639 008c 2F       		.uleb128 0x2f
 14640 008d 0B       		.uleb128 0xb
 14641 008e 00       		.byte	0
 14642 008f 00       		.byte	0
 14643 0090 0D       		.uleb128 0xd
 14644 0091 04       		.uleb128 0x4
 14645 0092 01       		.byte	0x1
 14646 0093 03       		.uleb128 0x3
 14647 0094 0E       		.uleb128 0xe
 14648 0095 0B       		.uleb128 0xb
 14649 0096 0B       		.uleb128 0xb
 14650 0097 49       		.uleb128 0x49
 14651 0098 13       		.uleb128 0x13
 14652 0099 3A       		.uleb128 0x3a
 14653 009a 0B       		.uleb128 0xb
 14654 009b 3B       		.uleb128 0x3b
 14655 009c 0B       		.uleb128 0xb
 14656 009d 01       		.uleb128 0x1
 14657 009e 13       		.uleb128 0x13
 14658 009f 00       		.byte	0
 14659 00a0 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 301


 14660 00a1 0E       		.uleb128 0xe
 14661 00a2 17       		.uleb128 0x17
 14662 00a3 01       		.byte	0x1
 14663 00a4 03       		.uleb128 0x3
 14664 00a5 0E       		.uleb128 0xe
 14665 00a6 0B       		.uleb128 0xb
 14666 00a7 0B       		.uleb128 0xb
 14667 00a8 3A       		.uleb128 0x3a
 14668 00a9 0B       		.uleb128 0xb
 14669 00aa 3B       		.uleb128 0x3b
 14670 00ab 0B       		.uleb128 0xb
 14671 00ac 01       		.uleb128 0x1
 14672 00ad 13       		.uleb128 0x13
 14673 00ae 00       		.byte	0
 14674 00af 00       		.byte	0
 14675 00b0 0F       		.uleb128 0xf
 14676 00b1 0D       		.uleb128 0xd
 14677 00b2 00       		.byte	0
 14678 00b3 03       		.uleb128 0x3
 14679 00b4 08       		.uleb128 0x8
 14680 00b5 3A       		.uleb128 0x3a
 14681 00b6 0B       		.uleb128 0xb
 14682 00b7 3B       		.uleb128 0x3b
 14683 00b8 0B       		.uleb128 0xb
 14684 00b9 49       		.uleb128 0x49
 14685 00ba 13       		.uleb128 0x13
 14686 00bb 00       		.byte	0
 14687 00bc 00       		.byte	0
 14688 00bd 10       		.uleb128 0x10
 14689 00be 2E       		.uleb128 0x2e
 14690 00bf 01       		.byte	0x1
 14691 00c0 3F       		.uleb128 0x3f
 14692 00c1 19       		.uleb128 0x19
 14693 00c2 03       		.uleb128 0x3
 14694 00c3 08       		.uleb128 0x8
 14695 00c4 3A       		.uleb128 0x3a
 14696 00c5 0B       		.uleb128 0xb
 14697 00c6 3B       		.uleb128 0x3b
 14698 00c7 05       		.uleb128 0x5
 14699 00c8 27       		.uleb128 0x27
 14700 00c9 19       		.uleb128 0x19
 14701 00ca 49       		.uleb128 0x49
 14702 00cb 13       		.uleb128 0x13
 14703 00cc 11       		.uleb128 0x11
 14704 00cd 01       		.uleb128 0x1
 14705 00ce 12       		.uleb128 0x12
 14706 00cf 06       		.uleb128 0x6
 14707 00d0 40       		.uleb128 0x40
 14708 00d1 18       		.uleb128 0x18
 14709 00d2 9642     		.uleb128 0x2116
 14710 00d4 19       		.uleb128 0x19
 14711 00d5 01       		.uleb128 0x1
 14712 00d6 13       		.uleb128 0x13
 14713 00d7 00       		.byte	0
 14714 00d8 00       		.byte	0
 14715 00d9 11       		.uleb128 0x11
 14716 00da 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 302


 14717 00db 00       		.byte	0
 14718 00dc 03       		.uleb128 0x3
 14719 00dd 0E       		.uleb128 0xe
 14720 00de 3A       		.uleb128 0x3a
 14721 00df 0B       		.uleb128 0xb
 14722 00e0 3B       		.uleb128 0x3b
 14723 00e1 05       		.uleb128 0x5
 14724 00e2 49       		.uleb128 0x49
 14725 00e3 13       		.uleb128 0x13
 14726 00e4 02       		.uleb128 0x2
 14727 00e5 18       		.uleb128 0x18
 14728 00e6 00       		.byte	0
 14729 00e7 00       		.byte	0
 14730 00e8 12       		.uleb128 0x12
 14731 00e9 2E       		.uleb128 0x2e
 14732 00ea 01       		.byte	0x1
 14733 00eb 3F       		.uleb128 0x3f
 14734 00ec 19       		.uleb128 0x19
 14735 00ed 03       		.uleb128 0x3
 14736 00ee 0E       		.uleb128 0xe
 14737 00ef 3A       		.uleb128 0x3a
 14738 00f0 0B       		.uleb128 0xb
 14739 00f1 3B       		.uleb128 0x3b
 14740 00f2 05       		.uleb128 0x5
 14741 00f3 27       		.uleb128 0x27
 14742 00f4 19       		.uleb128 0x19
 14743 00f5 49       		.uleb128 0x49
 14744 00f6 13       		.uleb128 0x13
 14745 00f7 11       		.uleb128 0x11
 14746 00f8 01       		.uleb128 0x1
 14747 00f9 12       		.uleb128 0x12
 14748 00fa 06       		.uleb128 0x6
 14749 00fb 40       		.uleb128 0x40
 14750 00fc 18       		.uleb128 0x18
 14751 00fd 9642     		.uleb128 0x2116
 14752 00ff 19       		.uleb128 0x19
 14753 0100 01       		.uleb128 0x1
 14754 0101 13       		.uleb128 0x13
 14755 0102 00       		.byte	0
 14756 0103 00       		.byte	0
 14757 0104 13       		.uleb128 0x13
 14758 0105 2E       		.uleb128 0x2e
 14759 0106 01       		.byte	0x1
 14760 0107 3F       		.uleb128 0x3f
 14761 0108 19       		.uleb128 0x19
 14762 0109 03       		.uleb128 0x3
 14763 010a 0E       		.uleb128 0xe
 14764 010b 3A       		.uleb128 0x3a
 14765 010c 0B       		.uleb128 0xb
 14766 010d 3B       		.uleb128 0x3b
 14767 010e 05       		.uleb128 0x5
 14768 010f 11       		.uleb128 0x11
 14769 0110 01       		.uleb128 0x1
 14770 0111 12       		.uleb128 0x12
 14771 0112 06       		.uleb128 0x6
 14772 0113 40       		.uleb128 0x40
 14773 0114 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 303


 14774 0115 9642     		.uleb128 0x2116
 14775 0117 19       		.uleb128 0x19
 14776 0118 01       		.uleb128 0x1
 14777 0119 13       		.uleb128 0x13
 14778 011a 00       		.byte	0
 14779 011b 00       		.byte	0
 14780 011c 14       		.uleb128 0x14
 14781 011d 0B       		.uleb128 0xb
 14782 011e 01       		.byte	0x1
 14783 011f 11       		.uleb128 0x11
 14784 0120 01       		.uleb128 0x1
 14785 0121 12       		.uleb128 0x12
 14786 0122 06       		.uleb128 0x6
 14787 0123 01       		.uleb128 0x1
 14788 0124 13       		.uleb128 0x13
 14789 0125 00       		.byte	0
 14790 0126 00       		.byte	0
 14791 0127 15       		.uleb128 0x15
 14792 0128 34       		.uleb128 0x34
 14793 0129 00       		.byte	0
 14794 012a 03       		.uleb128 0x3
 14795 012b 08       		.uleb128 0x8
 14796 012c 3A       		.uleb128 0x3a
 14797 012d 0B       		.uleb128 0xb
 14798 012e 3B       		.uleb128 0x3b
 14799 012f 05       		.uleb128 0x5
 14800 0130 49       		.uleb128 0x49
 14801 0131 13       		.uleb128 0x13
 14802 0132 02       		.uleb128 0x2
 14803 0133 18       		.uleb128 0x18
 14804 0134 00       		.byte	0
 14805 0135 00       		.byte	0
 14806 0136 16       		.uleb128 0x16
 14807 0137 0B       		.uleb128 0xb
 14808 0138 01       		.byte	0x1
 14809 0139 11       		.uleb128 0x11
 14810 013a 01       		.uleb128 0x1
 14811 013b 12       		.uleb128 0x12
 14812 013c 06       		.uleb128 0x6
 14813 013d 00       		.byte	0
 14814 013e 00       		.byte	0
 14815 013f 17       		.uleb128 0x17
 14816 0140 2E       		.uleb128 0x2e
 14817 0141 01       		.byte	0x1
 14818 0142 3F       		.uleb128 0x3f
 14819 0143 19       		.uleb128 0x19
 14820 0144 03       		.uleb128 0x3
 14821 0145 0E       		.uleb128 0xe
 14822 0146 3A       		.uleb128 0x3a
 14823 0147 0B       		.uleb128 0xb
 14824 0148 3B       		.uleb128 0x3b
 14825 0149 05       		.uleb128 0x5
 14826 014a 27       		.uleb128 0x27
 14827 014b 19       		.uleb128 0x19
 14828 014c 11       		.uleb128 0x11
 14829 014d 01       		.uleb128 0x1
 14830 014e 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 304


 14831 014f 06       		.uleb128 0x6
 14832 0150 40       		.uleb128 0x40
 14833 0151 18       		.uleb128 0x18
 14834 0152 9642     		.uleb128 0x2116
 14835 0154 19       		.uleb128 0x19
 14836 0155 01       		.uleb128 0x1
 14837 0156 13       		.uleb128 0x13
 14838 0157 00       		.byte	0
 14839 0158 00       		.byte	0
 14840 0159 18       		.uleb128 0x18
 14841 015a 34       		.uleb128 0x34
 14842 015b 00       		.byte	0
 14843 015c 03       		.uleb128 0x3
 14844 015d 0E       		.uleb128 0xe
 14845 015e 3A       		.uleb128 0x3a
 14846 015f 0B       		.uleb128 0xb
 14847 0160 3B       		.uleb128 0x3b
 14848 0161 05       		.uleb128 0x5
 14849 0162 49       		.uleb128 0x49
 14850 0163 13       		.uleb128 0x13
 14851 0164 02       		.uleb128 0x2
 14852 0165 18       		.uleb128 0x18
 14853 0166 00       		.byte	0
 14854 0167 00       		.byte	0
 14855 0168 19       		.uleb128 0x19
 14856 0169 2E       		.uleb128 0x2e
 14857 016a 00       		.byte	0
 14858 016b 3F       		.uleb128 0x3f
 14859 016c 19       		.uleb128 0x19
 14860 016d 03       		.uleb128 0x3
 14861 016e 0E       		.uleb128 0xe
 14862 016f 3A       		.uleb128 0x3a
 14863 0170 0B       		.uleb128 0xb
 14864 0171 3B       		.uleb128 0x3b
 14865 0172 05       		.uleb128 0x5
 14866 0173 27       		.uleb128 0x27
 14867 0174 19       		.uleb128 0x19
 14868 0175 11       		.uleb128 0x11
 14869 0176 01       		.uleb128 0x1
 14870 0177 12       		.uleb128 0x12
 14871 0178 06       		.uleb128 0x6
 14872 0179 40       		.uleb128 0x40
 14873 017a 18       		.uleb128 0x18
 14874 017b 9642     		.uleb128 0x2116
 14875 017d 19       		.uleb128 0x19
 14876 017e 00       		.byte	0
 14877 017f 00       		.byte	0
 14878 0180 1A       		.uleb128 0x1a
 14879 0181 05       		.uleb128 0x5
 14880 0182 00       		.byte	0
 14881 0183 03       		.uleb128 0x3
 14882 0184 08       		.uleb128 0x8
 14883 0185 3A       		.uleb128 0x3a
 14884 0186 0B       		.uleb128 0xb
 14885 0187 3B       		.uleb128 0x3b
 14886 0188 05       		.uleb128 0x5
 14887 0189 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 305


 14888 018a 13       		.uleb128 0x13
 14889 018b 02       		.uleb128 0x2
 14890 018c 18       		.uleb128 0x18
 14891 018d 00       		.byte	0
 14892 018e 00       		.byte	0
 14893 018f 1B       		.uleb128 0x1b
 14894 0190 0F       		.uleb128 0xf
 14895 0191 00       		.byte	0
 14896 0192 0B       		.uleb128 0xb
 14897 0193 0B       		.uleb128 0xb
 14898 0194 49       		.uleb128 0x49
 14899 0195 13       		.uleb128 0x13
 14900 0196 00       		.byte	0
 14901 0197 00       		.byte	0
 14902 0198 1C       		.uleb128 0x1c
 14903 0199 34       		.uleb128 0x34
 14904 019a 00       		.byte	0
 14905 019b 03       		.uleb128 0x3
 14906 019c 0E       		.uleb128 0xe
 14907 019d 3A       		.uleb128 0x3a
 14908 019e 0B       		.uleb128 0xb
 14909 019f 3B       		.uleb128 0x3b
 14910 01a0 0B       		.uleb128 0xb
 14911 01a1 49       		.uleb128 0x49
 14912 01a2 13       		.uleb128 0x13
 14913 01a3 02       		.uleb128 0x2
 14914 01a4 18       		.uleb128 0x18
 14915 01a5 00       		.byte	0
 14916 01a6 00       		.byte	0
 14917 01a7 1D       		.uleb128 0x1d
 14918 01a8 34       		.uleb128 0x34
 14919 01a9 00       		.byte	0
 14920 01aa 03       		.uleb128 0x3
 14921 01ab 0E       		.uleb128 0xe
 14922 01ac 3A       		.uleb128 0x3a
 14923 01ad 0B       		.uleb128 0xb
 14924 01ae 3B       		.uleb128 0x3b
 14925 01af 0B       		.uleb128 0xb
 14926 01b0 49       		.uleb128 0x49
 14927 01b1 13       		.uleb128 0x13
 14928 01b2 3F       		.uleb128 0x3f
 14929 01b3 19       		.uleb128 0x19
 14930 01b4 3C       		.uleb128 0x3c
 14931 01b5 19       		.uleb128 0x19
 14932 01b6 00       		.byte	0
 14933 01b7 00       		.byte	0
 14934 01b8 1E       		.uleb128 0x1e
 14935 01b9 21       		.uleb128 0x21
 14936 01ba 00       		.byte	0
 14937 01bb 49       		.uleb128 0x49
 14938 01bc 13       		.uleb128 0x13
 14939 01bd 2F       		.uleb128 0x2f
 14940 01be 05       		.uleb128 0x5
 14941 01bf 00       		.byte	0
 14942 01c0 00       		.byte	0
 14943 01c1 1F       		.uleb128 0x1f
 14944 01c2 26       		.uleb128 0x26
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 306


 14945 01c3 00       		.byte	0
 14946 01c4 49       		.uleb128 0x49
 14947 01c5 13       		.uleb128 0x13
 14948 01c6 00       		.byte	0
 14949 01c7 00       		.byte	0
 14950 01c8 20       		.uleb128 0x20
 14951 01c9 34       		.uleb128 0x34
 14952 01ca 00       		.byte	0
 14953 01cb 03       		.uleb128 0x3
 14954 01cc 0E       		.uleb128 0xe
 14955 01cd 3A       		.uleb128 0x3a
 14956 01ce 0B       		.uleb128 0xb
 14957 01cf 3B       		.uleb128 0x3b
 14958 01d0 0B       		.uleb128 0xb
 14959 01d1 49       		.uleb128 0x49
 14960 01d2 13       		.uleb128 0x13
 14961 01d3 3F       		.uleb128 0x3f
 14962 01d4 19       		.uleb128 0x19
 14963 01d5 02       		.uleb128 0x2
 14964 01d6 18       		.uleb128 0x18
 14965 01d7 00       		.byte	0
 14966 01d8 00       		.byte	0
 14967 01d9 21       		.uleb128 0x21
 14968 01da 34       		.uleb128 0x34
 14969 01db 00       		.byte	0
 14970 01dc 03       		.uleb128 0x3
 14971 01dd 0E       		.uleb128 0xe
 14972 01de 3A       		.uleb128 0x3a
 14973 01df 0B       		.uleb128 0xb
 14974 01e0 3B       		.uleb128 0x3b
 14975 01e1 05       		.uleb128 0x5
 14976 01e2 49       		.uleb128 0x49
 14977 01e3 13       		.uleb128 0x13
 14978 01e4 3F       		.uleb128 0x3f
 14979 01e5 19       		.uleb128 0x19
 14980 01e6 3C       		.uleb128 0x3c
 14981 01e7 19       		.uleb128 0x19
 14982 01e8 00       		.byte	0
 14983 01e9 00       		.byte	0
 14984 01ea 22       		.uleb128 0x22
 14985 01eb 34       		.uleb128 0x34
 14986 01ec 00       		.byte	0
 14987 01ed 03       		.uleb128 0x3
 14988 01ee 0E       		.uleb128 0xe
 14989 01ef 3A       		.uleb128 0x3a
 14990 01f0 0B       		.uleb128 0xb
 14991 01f1 3B       		.uleb128 0x3b
 14992 01f2 05       		.uleb128 0x5
 14993 01f3 49       		.uleb128 0x49
 14994 01f4 13       		.uleb128 0x13
 14995 01f5 3F       		.uleb128 0x3f
 14996 01f6 19       		.uleb128 0x19
 14997 01f7 02       		.uleb128 0x2
 14998 01f8 18       		.uleb128 0x18
 14999 01f9 00       		.byte	0
 15000 01fa 00       		.byte	0
 15001 01fb 23       		.uleb128 0x23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 307


 15002 01fc 34       		.uleb128 0x34
 15003 01fd 00       		.byte	0
 15004 01fe 03       		.uleb128 0x3
 15005 01ff 08       		.uleb128 0x8
 15006 0200 3A       		.uleb128 0x3a
 15007 0201 0B       		.uleb128 0xb
 15008 0202 3B       		.uleb128 0x3b
 15009 0203 0B       		.uleb128 0xb
 15010 0204 49       		.uleb128 0x49
 15011 0205 13       		.uleb128 0x13
 15012 0206 3F       		.uleb128 0x3f
 15013 0207 19       		.uleb128 0x19
 15014 0208 02       		.uleb128 0x2
 15015 0209 18       		.uleb128 0x18
 15016 020a 00       		.byte	0
 15017 020b 00       		.byte	0
 15018 020c 00       		.byte	0
 15019              		.section	.debug_aranges,"",%progbits
 15020 0000 FC000000 		.4byte	0xfc
 15021 0004 0200     		.2byte	0x2
 15022 0006 00000000 		.4byte	.Ldebug_info0
 15023 000a 04       		.byte	0x4
 15024 000b 00       		.byte	0
 15025 000c 0000     		.2byte	0
 15026 000e 0000     		.2byte	0
 15027 0010 00000000 		.4byte	.LFB64
 15028 0014 56000000 		.4byte	.LFE64-.LFB64
 15029 0018 00000000 		.4byte	.LFB65
 15030 001c 64000000 		.4byte	.LFE65-.LFB65
 15031 0020 00000000 		.4byte	.LFB66
 15032 0024 E8010000 		.4byte	.LFE66-.LFB66
 15033 0028 00000000 		.4byte	.LFB67
 15034 002c 18010000 		.4byte	.LFE67-.LFB67
 15035 0030 00000000 		.4byte	.LFB68
 15036 0034 84000000 		.4byte	.LFE68-.LFB68
 15037 0038 00000000 		.4byte	.LFB69
 15038 003c 34000000 		.4byte	.LFE69-.LFB69
 15039 0040 00000000 		.4byte	.LFB70
 15040 0044 7C000000 		.4byte	.LFE70-.LFB70
 15041 0048 00000000 		.4byte	.LFB71
 15042 004c 14000000 		.4byte	.LFE71-.LFB71
 15043 0050 00000000 		.4byte	.LFB72
 15044 0054 9C000000 		.4byte	.LFE72-.LFB72
 15045 0058 00000000 		.4byte	.LFB73
 15046 005c 5C010000 		.4byte	.LFE73-.LFB73
 15047 0060 00000000 		.4byte	.LFB74
 15048 0064 80000000 		.4byte	.LFE74-.LFB74
 15049 0068 00000000 		.4byte	.LFB75
 15050 006c A0220000 		.4byte	.LFE75-.LFB75
 15051 0070 00000000 		.4byte	.LFB76
 15052 0074 70000000 		.4byte	.LFE76-.LFB76
 15053 0078 00000000 		.4byte	.LFB77
 15054 007c 70010000 		.4byte	.LFE77-.LFB77
 15055 0080 00000000 		.4byte	.LFB78
 15056 0084 E0000000 		.4byte	.LFE78-.LFB78
 15057 0088 00000000 		.4byte	.LFB79
 15058 008c F4000000 		.4byte	.LFE79-.LFB79
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 308


 15059 0090 00000000 		.4byte	.LFB80
 15060 0094 24000000 		.4byte	.LFE80-.LFB80
 15061 0098 00000000 		.4byte	.LFB81
 15062 009c 54000000 		.4byte	.LFE81-.LFB81
 15063 00a0 00000000 		.4byte	.LFB82
 15064 00a4 C4000000 		.4byte	.LFE82-.LFB82
 15065 00a8 00000000 		.4byte	.LFB83
 15066 00ac 98000000 		.4byte	.LFE83-.LFB83
 15067 00b0 00000000 		.4byte	.LFB84
 15068 00b4 D4000000 		.4byte	.LFE84-.LFB84
 15069 00b8 00000000 		.4byte	.LFB85
 15070 00bc 1C000000 		.4byte	.LFE85-.LFB85
 15071 00c0 00000000 		.4byte	.LFB86
 15072 00c4 68000000 		.4byte	.LFE86-.LFB86
 15073 00c8 00000000 		.4byte	.LFB87
 15074 00cc 68000000 		.4byte	.LFE87-.LFB87
 15075 00d0 00000000 		.4byte	.LFB88
 15076 00d4 68000000 		.4byte	.LFE88-.LFB88
 15077 00d8 00000000 		.4byte	.LFB89
 15078 00dc 6C000000 		.4byte	.LFE89-.LFB89
 15079 00e0 00000000 		.4byte	.LFB90
 15080 00e4 5C000000 		.4byte	.LFE90-.LFB90
 15081 00e8 00000000 		.4byte	.LFB91
 15082 00ec 740E0000 		.4byte	.LFE91-.LFB91
 15083 00f0 00000000 		.4byte	.LFB92
 15084 00f4 FC010000 		.4byte	.LFE92-.LFB92
 15085 00f8 00000000 		.4byte	0
 15086 00fc 00000000 		.4byte	0
 15087              		.section	.debug_ranges,"",%progbits
 15088              	.Ldebug_ranges0:
 15089 0000 00000000 		.4byte	.LFB64
 15090 0004 56000000 		.4byte	.LFE64
 15091 0008 00000000 		.4byte	.LFB65
 15092 000c 64000000 		.4byte	.LFE65
 15093 0010 00000000 		.4byte	.LFB66
 15094 0014 E8010000 		.4byte	.LFE66
 15095 0018 00000000 		.4byte	.LFB67
 15096 001c 18010000 		.4byte	.LFE67
 15097 0020 00000000 		.4byte	.LFB68
 15098 0024 84000000 		.4byte	.LFE68
 15099 0028 00000000 		.4byte	.LFB69
 15100 002c 34000000 		.4byte	.LFE69
 15101 0030 00000000 		.4byte	.LFB70
 15102 0034 7C000000 		.4byte	.LFE70
 15103 0038 00000000 		.4byte	.LFB71
 15104 003c 14000000 		.4byte	.LFE71
 15105 0040 00000000 		.4byte	.LFB72
 15106 0044 9C000000 		.4byte	.LFE72
 15107 0048 00000000 		.4byte	.LFB73
 15108 004c 5C010000 		.4byte	.LFE73
 15109 0050 00000000 		.4byte	.LFB74
 15110 0054 80000000 		.4byte	.LFE74
 15111 0058 00000000 		.4byte	.LFB75
 15112 005c A0220000 		.4byte	.LFE75
 15113 0060 00000000 		.4byte	.LFB76
 15114 0064 70000000 		.4byte	.LFE76
 15115 0068 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 309


 15116 006c 70010000 		.4byte	.LFE77
 15117 0070 00000000 		.4byte	.LFB78
 15118 0074 E0000000 		.4byte	.LFE78
 15119 0078 00000000 		.4byte	.LFB79
 15120 007c F4000000 		.4byte	.LFE79
 15121 0080 00000000 		.4byte	.LFB80
 15122 0084 24000000 		.4byte	.LFE80
 15123 0088 00000000 		.4byte	.LFB81
 15124 008c 54000000 		.4byte	.LFE81
 15125 0090 00000000 		.4byte	.LFB82
 15126 0094 C4000000 		.4byte	.LFE82
 15127 0098 00000000 		.4byte	.LFB83
 15128 009c 98000000 		.4byte	.LFE83
 15129 00a0 00000000 		.4byte	.LFB84
 15130 00a4 D4000000 		.4byte	.LFE84
 15131 00a8 00000000 		.4byte	.LFB85
 15132 00ac 1C000000 		.4byte	.LFE85
 15133 00b0 00000000 		.4byte	.LFB86
 15134 00b4 68000000 		.4byte	.LFE86
 15135 00b8 00000000 		.4byte	.LFB87
 15136 00bc 68000000 		.4byte	.LFE87
 15137 00c0 00000000 		.4byte	.LFB88
 15138 00c4 68000000 		.4byte	.LFE88
 15139 00c8 00000000 		.4byte	.LFB89
 15140 00cc 6C000000 		.4byte	.LFE89
 15141 00d0 00000000 		.4byte	.LFB90
 15142 00d4 5C000000 		.4byte	.LFE90
 15143 00d8 00000000 		.4byte	.LFB91
 15144 00dc 740E0000 		.4byte	.LFE91
 15145 00e0 00000000 		.4byte	.LFB92
 15146 00e4 FC010000 		.4byte	.LFE92
 15147 00e8 00000000 		.4byte	0
 15148 00ec 00000000 		.4byte	0
 15149              		.section	.debug_line,"",%progbits
 15150              	.Ldebug_line0:
 15151 0000 5B0D0000 		.section	.debug_str,"MS",%progbits,1
 15151      0200BC01 
 15151      00000201 
 15151      FB0E0D00 
 15151      01010101 
 15152              	.LASF95:
 15153 0000 70656461 		.ascii	"pedalsMIDIUp\000"
 15153      6C734D49 
 15153      44495570 
 15153      00
 15154              	.LASF237:
 15155 000d 70726573 		.ascii	"presetArraySection\000"
 15155      65744172 
 15155      72617953 
 15155      65637469 
 15155      6F6E00
 15156              	.LASF15:
 15157 0020 696E7438 		.ascii	"int8_t\000"
 15157      5F7400
 15158              	.LASF225:
 15159 0027 70726573 		.ascii	"presetArray\000"
 15159      65744172 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 310


 15159      72617900 
 15160              	.LASF354:
 15161 0033 66697273 		.ascii	"firstSysex\000"
 15161      74537973 
 15161      657800
 15162              	.LASF30:
 15163 003e 73697A65 		.ascii	"sizetype\000"
 15163      74797065 
 15163      00
 15164              	.LASF242:
 15165 0047 73656E64 		.ascii	"sendingMessage\000"
 15165      696E674D 
 15165      65737361 
 15165      676500
 15166              	.LASF323:
 15167 0056 70726576 		.ascii	"prev_processed_volumePedal\000"
 15167      5F70726F 
 15167      63657373 
 15167      65645F76 
 15167      6F6C756D 
 15168              	.LASF88:
 15169 0071 74656D70 		.ascii	"tempangle\000"
 15169      616E676C 
 15169      6500
 15170              	.LASF288:
 15171 007b 6E657744 		.ascii	"newDataFlag2\000"
 15171      61746146 
 15171      6C616732 
 15171      00
 15172              	.LASF172:
 15173 0088 6D616372 		.ascii	"macroNamesArray\000"
 15173      6F4E616D 
 15173      65734172 
 15173      72617900 
 15174              	.LASF203:
 15175 0098 73656E64 		.ascii	"sendLocalPresetStoreCommand\000"
 15175      4C6F6361 
 15175      6C507265 
 15175      73657453 
 15175      746F7265 
 15176              	.LASF40:
 15177 00b4 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 15177      4D5F4545 
 15177      50524F4D 
 15177      5F535543 
 15177      43455353 
 15178              	.LASF19:
 15179 00c9 696E7433 		.ascii	"int32_t\000"
 15179      325F7400 
 15180              	.LASF156:
 15181 00d1 456D5F45 		.ascii	"Em_EEPROM_context\000"
 15181      4550524F 
 15181      4D5F636F 
 15181      6E746578 
 15181      7400
 15182              	.LASF49:
 15183 00e3 54686972 		.ascii	"ThirdLine\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 311


 15183      644C696E 
 15183      6500
 15184              	.LASF99:
 15185 00ed 62617242 		.ascii	"barBend\000"
 15185      656E6400 
 15186              	.LASF117:
 15187 00f5 6E6F7465 		.ascii	"noteEvent\000"
 15187      4576656E 
 15187      7400
 15188              	.LASF173:
 15189 00ff 636F6E74 		.ascii	"controlNamesArray\000"
 15189      726F6C4E 
 15189      616D6573 
 15189      41727261 
 15189      7900
 15190              	.LASF297:
 15191 0111 53504932 		.ascii	"SPI2errorflag\000"
 15191      6572726F 
 15191      72666C61 
 15191      6700
 15192              	.LASF23:
 15193 011f 75696E74 		.ascii	"uint32\000"
 15193      333200
 15194              	.LASF102:
 15195 0126 77686963 		.ascii	"whichMacroToStoreName\000"
 15195      684D6163 
 15195      726F546F 
 15195      53746F72 
 15195      654E616D 
 15196              	.LASF130:
 15197 013c 43437661 		.ascii	"CCval\000"
 15197      6C00
 15198              	.LASF248:
 15199 0142 6E756D4D 		.ascii	"numMappings\000"
 15199      61707069 
 15199      6E677300 
 15200              	.LASF161:
 15201 014e 49324362 		.ascii	"I2Cbuff1\000"
 15201      75666631 
 15201      00
 15202              	.LASF311:
 15203 0157 49324362 		.ascii	"I2Cbuff2\000"
 15203      75666632 
 15203      00
 15204              	.LASF313:
 15205 0160 6D75785F 		.ascii	"mux_states\000"
 15205      73746174 
 15205      657300
 15206              	.LASF145:
 15207 016b 74656D70 		.ascii	"tempLow\000"
 15207      4C6F7700 
 15208              	.LASF170:
 15209 0173 6E65636B 		.ascii	"necks\000"
 15209      7300
 15210              	.LASF162:
 15211 0179 6F637461 		.ascii	"octave\000"
 15211      766500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 312


 15212              	.LASF244:
 15213 0180 63757272 		.ascii	"currentFloat\000"
 15213      656E7446 
 15213      6C6F6174 
 15213      00
 15214              	.LASF167:
 15215 018d 766F6C75 		.ascii	"volumeWaitingToSend\000"
 15215      6D655761 
 15215      6974696E 
 15215      67546F53 
 15215      656E6400 
 15216              	.LASF51:
 15217 01a1 4E696C4C 		.ascii	"NilLine\000"
 15217      696E6500 
 15218              	.LASF45:
 15219 01a9 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 15219      6E5F656D 
 15219      5F656570 
 15219      726F6D5F 
 15219      73746174 
 15220              	.LASF214:
 15221 01c2 6C617374 		.ascii	"lastBufferStuff\000"
 15221      42756666 
 15221      65725374 
 15221      75666600 
 15222              	.LASF168:
 15223 01d2 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 15223      6F4F4C45 
 15223      44576169 
 15223      74696E67 
 15223      546F5365 
 15224              	.LASF185:
 15225 01e9 70656461 		.ascii	"pedals_high\000"
 15225      6C735F68 
 15225      69676800 
 15226              	.LASF108:
 15227 01f5 6E627974 		.ascii	"nbytes\000"
 15227      657300
 15228              	.LASF178:
 15229 01fc 636F7065 		.ascii	"copedentNamesArray\000"
 15229      64656E74 
 15229      4E616D65 
 15229      73417272 
 15229      617900
 15230              	.LASF246:
 15231 020f 76616C73 		.ascii	"valsCount\000"
 15231      436F756E 
 15231      7400
 15232              	.LASF211:
 15233 0219 6D617374 		.ascii	"masterTimer\000"
 15233      65725469 
 15233      6D657200 
 15234              	.LASF129:
 15235 0225 43436E75 		.ascii	"CCnum\000"
 15235      6D00
 15236              	.LASF218:
 15237 022b 73797365 		.ascii	"sysexReadPointer\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 313


 15237      78526561 
 15237      64506F69 
 15237      6E746572 
 15237      00
 15238              	.LASF42:
 15239 023c 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 15239      4D5F4545 
 15239      50524F4D 
 15239      5F424144 
 15239      5F434845 
 15240              	.LASF38:
 15241 0256 75736572 		.ascii	"userFlashStartAddr\000"
 15241      466C6173 
 15241      68537461 
 15241      72744164 
 15241      647200
 15242              	.LASF32:
 15243 0269 6E756D62 		.ascii	"numberOfRows\000"
 15243      65724F66 
 15243      526F7773 
 15243      00
 15244              	.LASF139:
 15245 0276 696E7456 		.ascii	"intVal\000"
 15245      616C00
 15246              	.LASF61:
 15247 027d 69737461 		.ascii	"istart\000"
 15247      727400
 15248              	.LASF66:
 15249 0284 70656461 		.ascii	"pedalDiff\000"
 15249      6C446966 
 15249      6600
 15250              	.LASF136:
 15251 028e 74686556 		.ascii	"theVal\000"
 15251      616C00
 15252              	.LASF36:
 15253 0295 72656475 		.ascii	"redundantCopy\000"
 15253      6E64616E 
 15253      74436F70 
 15253      7900
 15254              	.LASF1:
 15255 02a3 5F5F7569 		.ascii	"__uint8_t\000"
 15255      6E74385F 
 15255      7400
 15256              	.LASF247:
 15257 02ad 6D617043 		.ascii	"mapCountExpectation\000"
 15257      6F756E74 
 15257      45787065 
 15257      63746174 
 15257      696F6E00 
 15258              	.LASF59:
 15259 02c1 70726573 		.ascii	"presetEnd\000"
 15259      6574456E 
 15259      6400
 15260              	.LASF310:
 15261 02cb 62617243 		.ascii	"barCount\000"
 15261      6F756E74 
 15261      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 314


 15262              	.LASF228:
 15263 02d4 73656E64 		.ascii	"sendMessageEnd\000"
 15263      4D657373 
 15263      61676545 
 15263      6E6400
 15264              	.LASF316:
 15265 02e3 70656461 		.ascii	"pedals_highWithDeadZone\000"
 15265      6C735F68 
 15265      69676857 
 15265      69746844 
 15265      6561645A 
 15266              	.LASF177:
 15267 02fb 70726573 		.ascii	"presetNumberToLoad\000"
 15267      65744E75 
 15267      6D626572 
 15267      546F4C6F 
 15267      616400
 15268              	.LASF332:
 15269 030e 766F6963 		.ascii	"voice\000"
 15269      6500
 15270              	.LASF278:
 15271 0314 73747269 		.ascii	"strings\000"
 15271      6E677300 
 15272              	.LASF9:
 15273 031c 6C6F6E67 		.ascii	"long int\000"
 15273      20696E74 
 15273      00
 15274              	.LASF166:
 15275 0325 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 15275      4F4C4544 
 15275      57616974 
 15275      696E6754 
 15275      6F53656E 
 15276              	.LASF327:
 15277 033b 66726574 		.ascii	"fretScalingInMIDI\000"
 15277      5363616C 
 15277      696E6749 
 15277      6E4D4944 
 15277      4900
 15278              	.LASF326:
 15279 034d 70726573 		.ascii	"presetLoadedResponse\000"
 15279      65744C6F 
 15279      61646564 
 15279      52657370 
 15279      6F6E7365 
 15280              	.LASF226:
 15281 0362 70726573 		.ascii	"presetNumberToWrite\000"
 15281      65744E75 
 15281      6D626572 
 15281      546F5772 
 15281      69746500 
 15282              	.LASF101:
 15283 0376 77686963 		.ascii	"whichPresetToStoreName\000"
 15283      68507265 
 15283      73657454 
 15283      6F53746F 
 15283      72654E61 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 315


 15284              	.LASF176:
 15285 038d 70726573 		.ascii	"presetNamesArray\000"
 15285      65744E61 
 15285      6D657341 
 15285      72726179 
 15285      00
 15286              	.LASF76:
 15287 039e 6D61696E 		.ascii	"main\000"
 15287      00
 15288              	.LASF335:
 15289 03a3 70726576 		.ascii	"prevStringPitchBend\000"
 15289      53747269 
 15289      6E675069 
 15289      74636842 
 15289      656E6400 
 15290              	.LASF124:
 15291 03b7 4D494449 		.ascii	"MIDInoteNum\000"
 15291      6E6F7465 
 15291      4E756D00 
 15292              	.LASF132:
 15293 03c3 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 15293      4D494449 
 15293      416C6C4E 
 15293      6F746573 
 15293      4F666600 
 15294              	.LASF204:
 15295 03d7 6E657750 		.ascii	"newPresetName\000"
 15295      72657365 
 15295      744E616D 
 15295      6500
 15296              	.LASF110:
 15297 03e5 6572726F 		.ascii	"error\000"
 15297      7200
 15298              	.LASF48:
 15299 03eb 5365636F 		.ascii	"SecondLine\000"
 15299      6E644C69 
 15299      6E6500
 15300              	.LASF87:
 15301 03f6 74656D70 		.ascii	"tempSquished\000"
 15301      53717569 
 15301      73686564 
 15301      00
 15302              	.LASF243:
 15303 0403 73656E64 		.ascii	"sendKnobs\000"
 15303      4B6E6F62 
 15303      7300
 15304              	.LASF306:
 15305 040d 70726576 		.ascii	"prevMacroKnobValues7bit\000"
 15305      4D616372 
 15305      6F4B6E6F 
 15305      6256616C 
 15305      75657337 
 15306              	.LASF198:
 15307 0425 6D696469 		.ascii	"midiBarSendOn\000"
 15307      42617253 
 15307      656E644F 
 15307      6E00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 316


 15308              	.LASF298:
 15309 0433 6B6E6F62 		.ascii	"knobs\000"
 15309      7300
 15310              	.LASF254:
 15311 0439 63757272 		.ascii	"currentVBUS\000"
 15311      656E7456 
 15311      42555300 
 15312              	.LASF81:
 15313 0445 73747269 		.ascii	"stringStartLoc\000"
 15313      6E675374 
 15313      6172744C 
 15313      6F6300
 15314              	.LASF2:
 15315 0454 7369676E 		.ascii	"signed char\000"
 15315      65642063 
 15315      68617200 
 15316              	.LASF16:
 15317 0460 75696E74 		.ascii	"uint8_t\000"
 15317      385F7400 
 15318              	.LASF31:
 15319 0468 776C456E 		.ascii	"wlEndAddr\000"
 15319      64416464 
 15319      7200
 15320              	.LASF147:
 15321 0472 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 15321      63616C6C 
 15321      6261636B 
 15321      4C6F6361 
 15321      6C4D6964 
 15322              	.LASF201:
 15323 048d 70726576 		.ascii	"prevMacroKnobValues\000"
 15323      4D616372 
 15323      6F4B6E6F 
 15323      6256616C 
 15323      75657300 
 15324              	.LASF74:
 15325 04a1 73706973 		.ascii	"spis_1_ss\000"
 15325      5F315F73 
 15325      7300
 15326              	.LASF43:
 15327 04ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 15327      4D5F4545 
 15327      50524F4D 
 15327      5F424144 
 15327      5F444154 
 15328              	.LASF52:
 15329 04c1 5F4F4C45 		.ascii	"_OLEDLine\000"
 15329      444C696E 
 15329      6500
 15330              	.LASF245:
 15331 04cb 6D617043 		.ascii	"mapCount\000"
 15331      6F756E74 
 15331      00
 15332              	.LASF143:
 15333 04d4 74656D70 		.ascii	"tempIntVersion\000"
 15333      496E7456 
 15333      65727369 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 317


 15333      6F6E00
 15334              	.LASF329:
 15335 04e3 70656461 		.ascii	"pedalRatios\000"
 15335      6C526174 
 15335      696F7300 
 15336              	.LASF3:
 15337 04ef 756E7369 		.ascii	"unsigned char\000"
 15337      676E6564 
 15337      20636861 
 15337      7200
 15338              	.LASF250:
 15339 04fd 76616C43 		.ascii	"valCheck\000"
 15339      6865636B 
 15339      00
 15340              	.LASF138:
 15341 0506 76616C73 		.ascii	"valsStart\000"
 15341      53746172 
 15341      7400
 15342              	.LASF78:
 15343 0510 636F7065 		.ascii	"coped\000"
 15343      6400
 15344              	.LASF268:
 15345 0516 72783143 		.ascii	"rx1Channel\000"
 15345      68616E6E 
 15345      656C00
 15346              	.LASF80:
 15347 0521 70656461 		.ascii	"pedalStartLoc\000"
 15347      6C537461 
 15347      72744C6F 
 15347      6300
 15348              	.LASF284:
 15349 052f 6E657744 		.ascii	"newDataFlag\000"
 15349      61746146 
 15349      6C616700 
 15350              	.LASF343:
 15351 053b 73747269 		.ascii	"stringOctave\000"
 15351      6E674F63 
 15351      74617665 
 15351      00
 15352              	.LASF115:
 15353 0548 5553425F 		.ascii	"USB_service\000"
 15353      73657276 
 15353      69636500 
 15354              	.LASF97:
 15355 0554 6F70656E 		.ascii	"openStringTemp\000"
 15355      53747269 
 15355      6E675465 
 15355      6D7000
 15356              	.LASF230:
 15357 0563 73696E67 		.ascii	"singleParamToUpdateHigh\000"
 15357      6C655061 
 15357      72616D54 
 15357      6F557064 
 15357      61746548 
 15358              	.LASF60:
 15359 057b 76616C75 		.ascii	"value\000"
 15359      6500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 318


 15360              	.LASF330:
 15361 0581 6C617374 		.ascii	"last_mux\000"
 15361      5F6D7578 
 15361      00
 15362              	.LASF127:
 15363 058a 70726573 		.ascii	"pressure\000"
 15363      73757265 
 15363      00
 15364              	.LASF179:
 15365 0593 70726573 		.ascii	"presetAlreadyDisplayed\000"
 15365      6574416C 
 15365      72656164 
 15365      79446973 
 15365      706C6179 
 15366              	.LASF55:
 15367 05aa 6D616372 		.ascii	"macroNames\000"
 15367      6F4E616D 
 15367      657300
 15368              	.LASF279:
 15369 05b5 70726576 		.ascii	"prevStrings\000"
 15369      53747269 
 15369      6E677300 
 15370              	.LASF26:
 15371 05c1 63686172 		.ascii	"char\000"
 15371      00
 15372              	.LASF150:
 15373 05c6 65657072 		.ascii	"eepromArray\000"
 15373      6F6D4172 
 15373      72617900 
 15374              	.LASF134:
 15375 05d2 6D657373 		.ascii	"messageStart\000"
 15375      61676553 
 15375      74617274 
 15375      00
 15376              	.LASF264:
 15377 05df 72617741 		.ascii	"rawAngle\000"
 15377      6E676C65 
 15377      00
 15378              	.LASF165:
 15379 05e8 74726164 		.ascii	"traditionalPedalAdd\000"
 15379      6974696F 
 15379      6E616C50 
 15379      6564616C 
 15379      41646400 
 15380              	.LASF199:
 15381 05fc 73656E64 		.ascii	"sendFirmwareUpdateRequest\000"
 15381      4669726D 
 15381      77617265 
 15381      55706461 
 15381      74655265 
 15382              	.LASF104:
 15383 0616 446D6154 		.ascii	"DmaTxConfiguration\000"
 15383      78436F6E 
 15383      66696775 
 15383      72617469 
 15383      6F6E00
 15384              	.LASF6:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 319


 15385 0629 5F5F7569 		.ascii	"__uint16_t\000"
 15385      6E743136 
 15385      5F7400
 15386              	.LASF114:
 15387 0634 63686563 		.ascii	"checkUSB_Vbus\000"
 15387      6B555342 
 15387      5F566275 
 15387      7300
 15388              	.LASF339:
 15389 0642 73747269 		.ascii	"stringMappedPositionsInRatios\000"
 15389      6E674D61 
 15389      70706564 
 15389      506F7369 
 15389      74696F6E 
 15390              	.LASF146:
 15391 0660 726F756E 		.ascii	"roundedIndex\000"
 15391      64656449 
 15391      6E646578 
 15391      00
 15392              	.LASF309:
 15393 066d 65657072 		.ascii	"eeprom_cnt\000"
 15393      6F6D5F63 
 15393      6E7400
 15394              	.LASF154:
 15395 0678 5553425F 		.ascii	"USB_midi_out_ep\000"
 15395      6D696469 
 15395      5F6F7574 
 15395      5F657000 
 15396              	.LASF113:
 15397 0688 4932435F 		.ascii	"I2C_reset\000"
 15397      72657365 
 15397      7400
 15398              	.LASF186:
 15399 0692 70656461 		.ascii	"pedal_inverted\000"
 15399      6C5F696E 
 15399      76657274 
 15399      656400
 15400              	.LASF46:
 15401 06a1 75696E74 		.ascii	"uint\000"
 15401      00
 15402              	.LASF363:
 15403 06a6 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 15403      496E6974 
 15403      69616C50 
 15403      6564616C 
 15403      5A65726F 
 15404              	.LASF126:
 15405 06c4 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 15405      4D494449 
 15405      506F6C79 
 15405      4B657950 
 15405      72657373 
 15406              	.LASF220:
 15407 06dc 73797365 		.ascii	"sysexMessageStartPoints\000"
 15407      784D6573 
 15407      73616765 
 15407      53746172 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 320


 15407      74506F69 
 15408              	.LASF142:
 15409 06f4 73747269 		.ascii	"stringChange\000"
 15409      6E674368 
 15409      616E6765 
 15409      00
 15410              	.LASF200:
 15411 0701 6B6E6F62 		.ascii	"knobFrozen\000"
 15411      46726F7A 
 15411      656E00
 15412              	.LASF356:
 15413 070c 6D6F7265 		.ascii	"moreToDo\000"
 15413      546F446F 
 15413      00
 15414              	.LASF93:
 15415 0715 636F6D70 		.ascii	"computerMIDIOffset\000"
 15415      75746572 
 15415      4D494449 
 15415      4F666673 
 15415      657400
 15416              	.LASF233:
 15417 0728 73696E67 		.ascii	"singleParamValueLow\000"
 15417      6C655061 
 15417      72616D56 
 15417      616C7565 
 15417      4C6F7700 
 15418              	.LASF128:
 15419 073c 73656E64 		.ascii	"sendMIDIControlChange\000"
 15419      4D494449 
 15419      436F6E74 
 15419      726F6C43 
 15419      68616E67 
 15420              	.LASF283:
 15421 0752 73706943 		.ascii	"spiCounter\000"
 15421      6F756E74 
 15421      657200
 15422              	.LASF189:
 15423 075d 7472616E 		.ascii	"transposeCents\000"
 15423      73706F73 
 15423      6543656E 
 15423      747300
 15424              	.LASF41:
 15425 076c 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 15425      4D5F4545 
 15425      50524F4D 
 15425      5F424144 
 15425      5F504152 
 15426              	.LASF355:
 15427 0783 73797365 		.ascii	"sysexPointerMask\000"
 15427      78506F69 
 15427      6E746572 
 15427      4D61736B 
 15427      00
 15428              	.LASF158:
 15429 0794 4932435F 		.ascii	"I2C_1_initVar\000"
 15429      315F696E 
 15429      69745661 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 321


 15429      7200
 15430              	.LASF164:
 15431 07a2 63757272 		.ascii	"currentCopedent\000"
 15431      656E7443 
 15431      6F706564 
 15431      656E7400 
 15432              	.LASF54:
 15433 07b2 70726573 		.ascii	"presetName\000"
 15433      65744E61 
 15433      6D6500
 15434              	.LASF53:
 15435 07bd 5F707265 		.ascii	"_presetArraySectionState\000"
 15435      73657441 
 15435      72726179 
 15435      53656374 
 15435      696F6E53 
 15436              	.LASF224:
 15437 07d6 70617273 		.ascii	"parsingSysex\000"
 15437      696E6753 
 15437      79736578 
 15437      00
 15438              	.LASF261:
 15439 07e3 72657475 		.ascii	"returnedData\000"
 15439      726E6564 
 15439      44617461 
 15439      00
 15440              	.LASF50:
 15441 07f0 466F7572 		.ascii	"FourthLine\000"
 15441      74684C69 
 15441      6E6500
 15442              	.LASF325:
 15443 07fb 736C6964 		.ascii	"sliderBugOn\000"
 15443      65724275 
 15443      674F6E00 
 15444              	.LASF180:
 15445 0807 77686963 		.ascii	"whichMacro\000"
 15445      684D6163 
 15445      726F00
 15446              	.LASF317:
 15447 0812 766F6C75 		.ascii	"volumePedal\000"
 15447      6D655065 
 15447      64616C00 
 15448              	.LASF276:
 15449 081e 72784275 		.ascii	"rxBufferPluck\000"
 15449      66666572 
 15449      506C7563 
 15449      6B00
 15450              	.LASF334:
 15451 082c 636F7065 		.ascii	"copedent\000"
 15451      64656E74 
 15451      00
 15452              	.LASF320:
 15453 0835 70656461 		.ascii	"pedals8bit\000"
 15453      6C733862 
 15453      697400
 15454              	.LASF68:
 15455 0840 756E7361 		.ascii	"unsafeFtom\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 322


 15455      66654674 
 15455      6F6D00
 15456              	.LASF299:
 15457 084b 70726576 		.ascii	"prevKnobs\000"
 15457      4B6E6F62 
 15457      7300
 15458              	.LASF295:
 15459 0855 6D795370 		.ascii	"mySpiCounter\000"
 15459      69436F75 
 15459      6E746572 
 15459      00
 15460              	.LASF215:
 15461 0862 6C617374 		.ascii	"lastEndReceive\000"
 15461      456E6452 
 15461      65636569 
 15461      766500
 15462              	.LASF240:
 15463 0871 73797365 		.ascii	"sysexMessageInProgress\000"
 15463      784D6573 
 15463      73616765 
 15463      496E5072 
 15463      6F677265 
 15464              	.LASF357:
 15465 0888 5350495F 		.ascii	"SPI_errors\000"
 15465      6572726F 
 15465      727300
 15466              	.LASF122:
 15467 0893 43434576 		.ascii	"CCEvent\000"
 15467      656E7400 
 15468              	.LASF340:
 15469 089b 73747269 		.ascii	"stringMappedPositionsInMIDI\000"
 15469      6E674D61 
 15469      70706564 
 15469      506F7369 
 15469      74696F6E 
 15470              	.LASF133:
 15471 08b7 70617273 		.ascii	"parseSysex\000"
 15471      65537973 
 15471      657800
 15472              	.LASF361:
 15473 08c2 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 15473      73657273 
 15473      5C4A6566 
 15473      66536E79 
 15473      6465725C 
 15474 08f0 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 15474      355F656C 
 15474      65637472 
 15474      6F737465 
 15474      656C5F73 
 15475 0922 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 15475      5F50534F 
 15475      43335F35 
 15475      5F546865 
 15475      726D6973 
 15476              	.LASF293:
 15477 0940 696E7075 		.ascii	"inputData\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 323


 15477      74446174 
 15477      6100
 15478              	.LASF39:
 15479 094a 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 15479      74635F65 
 15479      6570726F 
 15479      6D5F636F 
 15479      6E746578 
 15480              	.LASF11:
 15481 0962 6C6F6E67 		.ascii	"long unsigned int\000"
 15481      20756E73 
 15481      69676E65 
 15481      6420696E 
 15481      7400
 15482              	.LASF347:
 15483 0974 70726573 		.ascii	"presetWhenMacroWriteStarted\000"
 15483      65745768 
 15483      656E4D61 
 15483      63726F57 
 15483      72697465 
 15484              	.LASF157:
 15485 0990 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 15485      4550524F 
 15485      4D5F656D 
 15485      5F456570 
 15485      726F6D53 
 15486              	.LASF221:
 15487 09ab 73797365 		.ascii	"sysexMessageStartPointsWritePosition\000"
 15487      784D6573 
 15487      73616765 
 15487      53746172 
 15487      74506F69 
 15488              	.LASF308:
 15489 09d0 65657072 		.ascii	"eepromReturnValue\000"
 15489      6F6D5265 
 15489      7475726E 
 15489      56616C75 
 15489      6500
 15490              	.LASF160:
 15491 09e2 4465636F 		.ascii	"Decoder_1_Enabled\000"
 15491      6465725F 
 15491      315F456E 
 15491      61626C65 
 15491      6400
 15492              	.LASF210:
 15493 09f4 6C617374 		.ascii	"lastBufferBegin\000"
 15493      42756666 
 15493      65724265 
 15493      67696E00 
 15494              	.LASF86:
 15495 0a04 74656D70 		.ascii	"tempInt\000"
 15495      496E7400 
 15496              	.LASF84:
 15497 0a0c 73746174 		.ascii	"status\000"
 15497      757300
 15498              	.LASF312:
 15499 0a13 73656E64 		.ascii	"send_it\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 324


 15499      5F697400 
 15500              	.LASF266:
 15501 0a1b 6D696469 		.ascii	"midiOverflow\000"
 15501      4F766572 
 15501      666C6F77 
 15501      00
 15502              	.LASF125:
 15503 0a28 6368616E 		.ascii	"channel\000"
 15503      6E656C00 
 15504              	.LASF302:
 15505 0a30 75376269 		.ascii	"u7bit_volumePedal\000"
 15505      745F766F 
 15505      6C756D65 
 15505      50656461 
 15505      6C00
 15506              	.LASF191:
 15507 0a42 766F6C75 		.ascii	"volumeInt\000"
 15507      6D65496E 
 15507      7400
 15508              	.LASF212:
 15509 0a4c 6C617374 		.ascii	"lastParseCall\000"
 15509      50617273 
 15509      6543616C 
 15509      6C00
 15510              	.LASF106:
 15511 0a5a 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 15511      4D617374 
 15511      65725772 
 15511      69746542 
 15511      6C6F636B 
 15512              	.LASF187:
 15513 0a72 616E676C 		.ascii	"angle\000"
 15513      6500
 15514              	.LASF252:
 15515 0a78 6E756D53 		.ascii	"numStrings\000"
 15515      7472696E 
 15515      677300
 15516              	.LASF341:
 15517 0a83 6261724D 		.ascii	"barMidiOuterStrings\000"
 15517      6964694F 
 15517      75746572 
 15517      53747269 
 15517      6E677300 
 15518              	.LASF44:
 15519 0a97 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 15519      4D5F4545 
 15519      50524F4D 
 15519      5F575249 
 15519      54455F46 
 15520              	.LASF63:
 15521 0aaf 6F737461 		.ascii	"ostart\000"
 15521      727400
 15522              	.LASF175:
 15523 0ab6 63757272 		.ascii	"currentPresetSelection\000"
 15523      656E7450 
 15523      72657365 
 15523      7453656C 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 325


 15523      65637469 
 15524              	.LASF346:
 15525 0acd 6F70656E 		.ascii	"openStringMIDI_Int\000"
 15525      53747269 
 15525      6E674D49 
 15525      44495F49 
 15525      6E7400
 15526              	.LASF62:
 15527 0ae0 6973746F 		.ascii	"istop\000"
 15527      7000
 15528              	.LASF219:
 15529 0ae6 73797365 		.ascii	"sysexReset\000"
 15529      78526573 
 15529      657400
 15530              	.LASF77:
 15531 0af1 70656461 		.ascii	"pedal_inverted_byte\000"
 15531      6C5F696E 
 15531      76657274 
 15531      65645F62 
 15531      79746500 
 15532              	.LASF153:
 15533 0b05 5553425F 		.ascii	"USB_midiInBuffer\000"
 15533      6D696469 
 15533      496E4275 
 15533      66666572 
 15533      00
 15534              	.LASF359:
 15535 0b16 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 15535      43313120 
 15535      352E342E 
 15535      31203230 
 15535      31363036 
 15536 0b49 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 15536      20726576 
 15536      6973696F 
 15536      6E203233 
 15536      37373135 
 15537 0b7c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 15537      66756E63 
 15537      74696F6E 
 15537      2D736563 
 15537      74696F6E 
 15538              	.LASF205:
 15539 0ba4 6B6E6F62 		.ascii	"knobPanelLightActive\000"
 15539      50616E65 
 15539      6C4C6967 
 15539      68744163 
 15539      74697665 
 15540              	.LASF123:
 15541 0bb9 73656E64 		.ascii	"sendMIDINoteOn\000"
 15541      4D494449 
 15541      4E6F7465 
 15541      4F6E00
 15542              	.LASF331:
 15543 0bc8 6D61696E 		.ascii	"main_counter\000"
 15543      5F636F75 
 15543      6E746572 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 326


 15543      00
 15544              	.LASF135:
 15545 0bd5 6D657373 		.ascii	"messageEnd\000"
 15545      61676545 
 15545      6E6400
 15546              	.LASF47:
 15547 0be0 46697273 		.ascii	"FirstLine\000"
 15547      744C696E 
 15547      6500
 15548              	.LASF193:
 15549 0bea 6475616C 		.ascii	"dualSlider\000"
 15549      536C6964 
 15549      657200
 15550              	.LASF70:
 15551 0bf5 72657374 		.ascii	"restartSystemCheck\000"
 15551      61727453 
 15551      79737465 
 15551      6D436865 
 15551      636B00
 15552              	.LASF257:
 15553 0c08 5553425F 		.ascii	"USB_check_flag\000"
 15553      63686563 
 15553      6B5F666C 
 15553      616700
 15554              	.LASF238:
 15555 0c17 6D657373 		.ascii	"messageArraySendCount\000"
 15555      61676541 
 15555      72726179 
 15555      53656E64 
 15555      436F756E 
 15556              	.LASF10:
 15557 0c2d 5F5F7569 		.ascii	"__uint32_t\000"
 15557      6E743332 
 15557      5F7400
 15558              	.LASF217:
 15559 0c38 73797365 		.ascii	"sysexWritePointer\000"
 15559      78577269 
 15559      7465506F 
 15559      696E7465 
 15559      7200
 15560              	.LASF12:
 15561 0c4a 6C6F6E67 		.ascii	"long long int\000"
 15561      206C6F6E 
 15561      6720696E 
 15561      7400
 15562              	.LASF195:
 15563 0c58 73747269 		.ascii	"stringRepresentation\000"
 15563      6E675265 
 15563      70726573 
 15563      656E7461 
 15563      74696F6E 
 15564              	.LASF270:
 15565 0c6d 72783154 		.ascii	"rx1TD\000"
 15565      4400
 15566              	.LASF83:
 15567 0c73 74656D70 		.ascii	"tempIntLow\000"
 15567      496E744C 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 327


 15567      6F7700
 15568              	.LASF137:
 15569 0c7e 73746F70 		.ascii	"stoppingPoint\000"
 15569      70696E67 
 15569      506F696E 
 15569      7400
 15570              	.LASF37:
 15571 0c8c 626C6F63 		.ascii	"blockingWrite\000"
 15571      6B696E67 
 15571      57726974 
 15571      6500
 15572              	.LASF274:
 15573 0c9a 72783343 		.ascii	"rx3Channel\000"
 15573      68616E6E 
 15573      656C00
 15574              	.LASF25:
 15575 0ca5 646F7562 		.ascii	"double\000"
 15575      6C6500
 15576              	.LASF360:
 15577 0cac 6D61696E 		.ascii	"main.c\000"
 15577      2E6300
 15578              	.LASF351:
 15579 0cb3 70726576 		.ascii	"prevNotes\000"
 15579      4E6F7465 
 15579      7300
 15580              	.LASF116:
 15581 0cbd 6C6F6732 		.ascii	"log2f_approx\000"
 15581      665F6170 
 15581      70726F78 
 15581      00
 15582              	.LASF207:
 15583 0cca 6E65636B 		.ascii	"neckPresetsByte\000"
 15583      50726573 
 15583      65747342 
 15583      79746500 
 15584              	.LASF197:
 15585 0cda 6D696469 		.ascii	"midiSendOn\000"
 15585      53656E64 
 15585      4F6E00
 15586              	.LASF232:
 15587 0ce5 73696E67 		.ascii	"singleParamValueHigh\000"
 15587      6C655061 
 15587      72616D56 
 15587      616C7565 
 15587      48696768 
 15588              	.LASF159:
 15589 0cfa 49544D5F 		.ascii	"ITM_RxBuffer\000"
 15589      52784275 
 15589      66666572 
 15589      00
 15590              	.LASF231:
 15591 0d07 73696E67 		.ascii	"singleParamToUpdateLow\000"
 15591      6C655061 
 15591      72616D54 
 15591      6F557064 
 15591      6174654C 
 15592              	.LASF64:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 328


 15593 0d1e 6F73746F 		.ascii	"ostop\000"
 15593      7000
 15594              	.LASF111:
 15595 0d24 74696D65 		.ascii	"timeout\000"
 15595      6F757400 
 15596              	.LASF24:
 15597 0d2c 666C6F61 		.ascii	"float\000"
 15597      7400
 15598              	.LASF319:
 15599 0d32 70726576 		.ascii	"prev_processed_pedals\000"
 15599      5F70726F 
 15599      63657373 
 15599      65645F70 
 15599      6564616C 
 15600              	.LASF304:
 15601 0d48 53504932 		.ascii	"SPI2started\000"
 15601      73746172 
 15601      74656400 
 15602              	.LASF289:
 15603 0d54 63757272 		.ascii	"currentPluckBuffer\000"
 15603      656E7450 
 15603      6C75636B 
 15603      42756666 
 15603      657200
 15604              	.LASF92:
 15605 0d67 6261724D 		.ascii	"barMIDI\000"
 15605      49444900 
 15606              	.LASF131:
 15607 0d6f 73656E64 		.ascii	"sendMIDIPitchBend\000"
 15607      4D494449 
 15607      50697463 
 15607      6842656E 
 15607      6400
 15608              	.LASF14:
 15609 0d81 756E7369 		.ascii	"unsigned int\000"
 15609      676E6564 
 15609      20696E74 
 15609      00
 15610              	.LASF337:
 15611 0d8e 70656461 		.ascii	"pedal_cc_assignments\000"
 15611      6C5F6363 
 15611      5F617373 
 15611      69676E6D 
 15611      656E7473 
 15612              	.LASF223:
 15613 0da3 72656365 		.ascii	"receivingSysex\000"
 15613      6976696E 
 15613      67537973 
 15613      657800
 15614              	.LASF148:
 15615 0db2 6361626C 		.ascii	"cable\000"
 15615      6500
 15616              	.LASF301:
 15617 0db8 70726576 		.ascii	"prevKnobs7bit\000"
 15617      4B6E6F62 
 15617      73376269 
 15617      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 329


 15618              	.LASF194:
 15619 0dc6 64656164 		.ascii	"deadZone\000"
 15619      5A6F6E65 
 15619      00
 15620              	.LASF71:
 15621 0dcf 56627573 		.ascii	"Vbus_function\000"
 15621      5F66756E 
 15621      6374696F 
 15621      6E00
 15622              	.LASF322:
 15623 0ddd 70726576 		.ascii	"prevPedals7bit\000"
 15623      50656461 
 15623      6C733762 
 15623      697400
 15624              	.LASF119:
 15625 0dec 76656C6F 		.ascii	"velocity\000"
 15625      63697479 
 15625      00
 15626              	.LASF75:
 15627 0df5 6C6F6164 		.ascii	"loadEEPROMdefaults\000"
 15627      45455052 
 15627      4F4D6465 
 15627      6661756C 
 15627      747300
 15628              	.LASF352:
 15629 0e08 63686563 		.ascii	"checkStatus\000"
 15629      6B537461 
 15629      74757300 
 15630              	.LASF27:
 15631 0e14 63797374 		.ascii	"cystatus\000"
 15631      61747573 
 15631      00
 15632              	.LASF300:
 15633 0e1d 6B6E6F62 		.ascii	"knobs7bit\000"
 15633      73376269 
 15633      7400
 15634              	.LASF69:
 15635 0e27 63616C63 		.ascii	"calculateStringRepDivider\000"
 15635      756C6174 
 15635      65537472 
 15635      696E6752 
 15635      65704469 
 15636              	.LASF118:
 15637 0e41 73747269 		.ascii	"string\000"
 15637      6E6700
 15638              	.LASF296:
 15639 0e48 6F666673 		.ascii	"offsetErrorCount\000"
 15639      65744572 
 15639      726F7243 
 15639      6F756E74 
 15639      00
 15640              	.LASF324:
 15641 0e59 70726F63 		.ascii	"processed_volumePedal\000"
 15641      65737365 
 15641      645F766F 
 15641      6C756D65 
 15641      50656461 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 330


 15642              	.LASF98:
 15643 0e6f 74656D70 		.ascii	"tempMIDI\000"
 15643      4D494449 
 15643      00
 15644              	.LASF277:
 15645 0e78 72784275 		.ascii	"rxBufferBar\000"
 15645      66666572 
 15645      42617200 
 15646              	.LASF213:
 15647 0e84 70726576 		.ascii	"prevLastParseCall\000"
 15647      4C617374 
 15647      50617273 
 15647      6543616C 
 15647      6C00
 15648              	.LASF272:
 15649 0e96 74784368 		.ascii	"txChannel\000"
 15649      616E6E65 
 15649      6C00
 15650              	.LASF318:
 15651 0ea0 70726F63 		.ascii	"processed_pedals\000"
 15651      65737365 
 15651      645F7065 
 15651      64616C73 
 15651      00
 15652              	.LASF333:
 15653 0eb1 636F7065 		.ascii	"copedentMapping\000"
 15653      64656E74 
 15653      4D617070 
 15653      696E6700 
 15654              	.LASF262:
 15655 0ec1 70726576 		.ascii	"prevAngle\000"
 15655      416E676C 
 15655      6500
 15656              	.LASF285:
 15657 0ecb 706C7563 		.ascii	"pluck_index\000"
 15657      6B5F696E 
 15657      64657800 
 15658              	.LASF29:
 15659 0ed7 6C6F6E67 		.ascii	"long double\000"
 15659      20646F75 
 15659      626C6500 
 15660              	.LASF112:
 15661 0ee3 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 15661      4D617374 
 15661      65725265 
 15661      6164426C 
 15661      6F636B69 
 15662              	.LASF290:
 15663 0efa 63757272 		.ascii	"currentBarBuffer\000"
 15663      656E7442 
 15663      61724275 
 15663      66666572 
 15663      00
 15664              	.LASF263:
 15665 0f0b 4144435F 		.ascii	"ADC_values\000"
 15665      76616C75 
 15665      657300
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 331


 15666              	.LASF292:
 15667 0f16 53504931 		.ascii	"SPI1ErrorCount\000"
 15667      4572726F 
 15667      72436F75 
 15667      6E7400
 15668              	.LASF265:
 15669 0f25 6D696469 		.ascii	"midiSent\000"
 15669      53656E74 
 15669      00
 15670              	.LASF149:
 15671 0f2e 6D696469 		.ascii	"midiMsg\000"
 15671      4D736700 
 15672              	.LASF0:
 15673 0f36 5F5F696E 		.ascii	"__int8_t\000"
 15673      74385F74 
 15673      00
 15674              	.LASF163:
 15675 0f3f 63757272 		.ascii	"currentNeck\000"
 15675      656E744E 
 15675      65636B00 
 15676              	.LASF171:
 15677 0f4b 65646974 		.ascii	"editMode\000"
 15677      4D6F6465 
 15677      00
 15678              	.LASF13:
 15679 0f54 6C6F6E67 		.ascii	"long long unsigned int\000"
 15679      206C6F6E 
 15679      6720756E 
 15679      7369676E 
 15679      65642069 
 15680              	.LASF18:
 15681 0f6b 75696E74 		.ascii	"uint16_t\000"
 15681      31365F74 
 15681      00
 15682              	.LASF144:
 15683 0f74 74656D70 		.ascii	"tempHigh\000"
 15683      48696768 
 15683      00
 15684              	.LASF251:
 15685 0f7d 74657374 		.ascii	"testVal\000"
 15685      56616C00 
 15686              	.LASF90:
 15687 0f85 70656461 		.ascii	"pedalsMIDI\000"
 15687      6C734D49 
 15687      444900
 15688              	.LASF271:
 15689 0f90 72783254 		.ascii	"rx2TD\000"
 15689      4400
 15690              	.LASF236:
 15691 0f96 636F6E74 		.ascii	"controlSmoothing\000"
 15691      726F6C53 
 15691      6D6F6F74 
 15691      68696E67 
 15691      00
 15692              	.LASF362:
 15693 0fa7 62726561 		.ascii	"breakFloat\000"
 15693      6B466C6F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 332


 15693      617400
 15694              	.LASF353:
 15695 0fb2 63686563 		.ascii	"checkBase\000"
 15695      6B426173 
 15695      6500
 15696              	.LASF72:
 15697 0fbc 73706973 		.ascii	"spis_2_ss\000"
 15697      5F325F73 
 15697      7300
 15698              	.LASF234:
 15699 0fc6 73656E64 		.ascii	"sendMappingChangeUpdate\000"
 15699      4D617070 
 15699      696E6743 
 15699      68616E67 
 15699      65557064 
 15700              	.LASF282:
 15701 0fde 616D4865 		.ascii	"amHere\000"
 15701      726500
 15702              	.LASF307:
 15703 0fe5 61727261 		.ascii	"array\000"
 15703      7900
 15704              	.LASF100:
 15705 0feb 7363616C 		.ascii	"scaledMIDI\000"
 15705      65644D49 
 15705      444900
 15706              	.LASF28:
 15707 0ff6 72656738 		.ascii	"reg8\000"
 15707      00
 15708              	.LASF227:
 15709 0ffb 636F7065 		.ascii	"copedentNumberToWrite\000"
 15709      64656E74 
 15709      4E756D62 
 15709      6572546F 
 15709      57726974 
 15710              	.LASF57:
 15711 1011 6D617043 		.ascii	"mapCountNext\000"
 15711      6F756E74 
 15711      4E657874 
 15711      00
 15712              	.LASF287:
 15713 101e 73706943 		.ascii	"spiCounter2\000"
 15713      6F756E74 
 15713      65723200 
 15714              	.LASF120:
 15715 102a 74656D70 		.ascii	"tempVel\000"
 15715      56656C00 
 15716              	.LASF253:
 15717 1032 75736241 		.ascii	"usbActivityCounter\000"
 15717      63746976 
 15717      69747943 
 15717      6F756E74 
 15717      657200
 15718              	.LASF188:
 15719 1045 7472616E 		.ascii	"transposeSemitones\000"
 15719      73706F73 
 15719      6553656D 
 15719      69746F6E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 333


 15719      657300
 15720              	.LASF249:
 15721 1058 70617273 		.ascii	"parseThatMF\000"
 15721      65546861 
 15721      744D4600 
 15722              	.LASF4:
 15723 1064 5F5F696E 		.ascii	"__int16_t\000"
 15723      7431365F 
 15723      7400
 15724              	.LASF56:
 15725 106e 696E6974 		.ascii	"initialVals\000"
 15725      69616C56 
 15725      616C7300 
 15726              	.LASF256:
 15727 107a 5553425F 		.ascii	"USB_active\000"
 15727      61637469 
 15727      766500
 15728              	.LASF181:
 15729 1085 66726574 		.ascii	"fretCalibrationMode\000"
 15729      43616C69 
 15729      62726174 
 15729      696F6E4D 
 15729      6F646500 
 15730              	.LASF229:
 15731 1099 73656E64 		.ascii	"sendSingleParamUpdate\000"
 15731      53696E67 
 15731      6C655061 
 15731      72616D55 
 15731      70646174 
 15732              	.LASF358:
 15733 10af 6E656172 		.ascii	"nearbyValues\000"
 15733      62795661 
 15733      6C756573 
 15733      00
 15734              	.LASF216:
 15735 10bc 73797365 		.ascii	"sysexBuffer\000"
 15735      78427566 
 15735      66657200 
 15736              	.LASF241:
 15737 10c8 62756643 		.ascii	"bufCount\000"
 15737      6F756E74 
 15737      00
 15738              	.LASF209:
 15739 10d1 70726576 		.ascii	"prevLastBufferBegin\000"
 15739      4C617374 
 15739      42756666 
 15739      65724265 
 15739      67696E00 
 15740              	.LASF85:
 15741 10e5 6D794B6E 		.ascii	"myKnob\000"
 15741      6F6200
 15742              	.LASF140:
 15743 10ec 74656D70 		.ascii	"tempChar\000"
 15743      43686172 
 15743      00
 15744              	.LASF350:
 15745 10f5 73747269 		.ascii	"stringRepDivider\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 334


 15745      6E675265 
 15745      70446976 
 15745      69646572 
 15745      00
 15746              	.LASF174:
 15747 1106 70617463 		.ascii	"patchNum\000"
 15747      684E756D 
 15747      00
 15748              	.LASF89:
 15749 110f 6D794D61 		.ascii	"myMappedPos\000"
 15749      70706564 
 15749      506F7300 
 15750              	.LASF349:
 15751 111b 70656461 		.ascii	"pedals_float\000"
 15751      6C735F66 
 15751      6C6F6174 
 15751      00
 15752              	.LASF315:
 15753 1128 70656461 		.ascii	"pedals_lowWithDeadZone\000"
 15753      6C735F6C 
 15753      6F775769 
 15753      74684465 
 15753      61645A6F 
 15754              	.LASF222:
 15755 113f 73797365 		.ascii	"sysexMessageStartPointsReadPosition\000"
 15755      784D6573 
 15755      73616765 
 15755      53746172 
 15755      74506F69 
 15756              	.LASF305:
 15757 1163 6D616372 		.ascii	"macroKnobValues7bit\000"
 15757      6F4B6E6F 
 15757      6256616C 
 15757      75657337 
 15757      62697400 
 15758              	.LASF21:
 15759 1177 75696E74 		.ascii	"uint8\000"
 15759      3800
 15760              	.LASF67:
 15761 117d 64656164 		.ascii	"deadZoneFloat\000"
 15761      5A6F6E65 
 15761      466C6F61 
 15761      7400
 15762              	.LASF184:
 15763 118b 70656461 		.ascii	"pedals_low\000"
 15763      6C735F6C 
 15763      6F7700
 15764              	.LASF94:
 15765 1196 70697463 		.ascii	"pitchBendAmount\000"
 15765      6842656E 
 15765      64416D6F 
 15765      756E7400 
 15766              	.LASF192:
 15767 11a6 70726576 		.ascii	"prevOctave\000"
 15767      4F637461 
 15767      766500
 15768              	.LASF5:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 335


 15769 11b1 73686F72 		.ascii	"short int\000"
 15769      7420696E 
 15769      7400
 15770              	.LASF239:
 15771 11bb 6D657373 		.ascii	"messageArraySize\000"
 15771      61676541 
 15771      72726179 
 15771      53697A65 
 15771      00
 15772              	.LASF183:
 15773 11cc 66726574 		.ascii	"fretMeasurements\000"
 15773      4D656173 
 15773      7572656D 
 15773      656E7473 
 15773      00
 15774              	.LASF109:
 15775 11dd 6D6F6465 		.ascii	"mode\000"
 15775      00
 15776              	.LASF103:
 15777 11e2 62756666 		.ascii	"bufferPointer\000"
 15777      6572506F 
 15777      696E7465 
 15777      7200
 15778              	.LASF169:
 15779 11f0 6E65636B 		.ascii	"neckByte\000"
 15779      42797465 
 15779      00
 15780              	.LASF345:
 15781 11f9 73747269 		.ascii	"stringMIDI\000"
 15781      6E674D49 
 15781      444900
 15782              	.LASF91:
 15783 1204 6F70656E 		.ascii	"openStringMIDI\000"
 15783      53747269 
 15783      6E674D49 
 15783      444900
 15784              	.LASF17:
 15785 1213 696E7431 		.ascii	"int16_t\000"
 15785      365F7400 
 15786              	.LASF141:
 15787 121b 70656461 		.ascii	"pedalToWrite\000"
 15787      6C546F57 
 15787      72697465 
 15787      00
 15788              	.LASF348:
 15789 1228 6D616372 		.ascii	"macroPageWhenMacroWriteStarted\000"
 15789      6F506167 
 15789      65576865 
 15789      6E4D6163 
 15789      726F5772 
 15790              	.LASF34:
 15791 1247 65657072 		.ascii	"eepromSize\000"
 15791      6F6D5369 
 15791      7A6500
 15792              	.LASF286:
 15793 1252 616D4865 		.ascii	"amHere2\000"
 15793      72653200 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 336


 15794              	.LASF344:
 15795 125a 73747269 		.ascii	"stringPitch\000"
 15795      6E675069 
 15795      74636800 
 15796              	.LASF35:
 15797 1266 77656172 		.ascii	"wearLevelingFactor\000"
 15797      4C657665 
 15797      6C696E67 
 15797      46616374 
 15797      6F7200
 15798              	.LASF151:
 15799 1279 5553425F 		.ascii	"USB_midiInPointer\000"
 15799      6D696469 
 15799      496E506F 
 15799      696E7465 
 15799      7200
 15800              	.LASF107:
 15801 128b 69324341 		.ascii	"i2CAddr\000"
 15801      64647200 
 15802              	.LASF259:
 15803 1293 696E4275 		.ascii	"inBuffer\000"
 15803      66666572 
 15803      00
 15804              	.LASF96:
 15805 129c 70656461 		.ascii	"pedalsMIDIDown\000"
 15805      6C734D49 
 15805      4449446F 
 15805      776E00
 15806              	.LASF281:
 15807 12ab 6D617853 		.ascii	"maxStrings\000"
 15807      7472696E 
 15807      677300
 15808              	.LASF79:
 15809 12b6 6C657474 		.ascii	"letter\000"
 15809      657200
 15810              	.LASF155:
 15811 12bd 5553425F 		.ascii	"USB_midiOutBuffer\000"
 15811      6D696469 
 15811      4F757442 
 15811      75666665 
 15811      7200
 15812              	.LASF267:
 15813 12cf 6D616372 		.ascii	"macroKnobValues\000"
 15813      6F4B6E6F 
 15813      6256616C 
 15813      75657300 
 15814              	.LASF314:
 15815 12df 6932635F 		.ascii	"i2c_skipped\000"
 15815      736B6970 
 15815      70656400 
 15816              	.LASF338:
 15817 12eb 6F70656E 		.ascii	"openStringFrequencies\000"
 15817      53747269 
 15817      6E674672 
 15817      65717565 
 15817      6E636965 
 15818              	.LASF321:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 337


 15819 1301 70656461 		.ascii	"pedals7bit\000"
 15819      6C733762 
 15819      697400
 15820              	.LASF303:
 15821 130c 70726576 		.ascii	"prev_7bit_volumePedal\000"
 15821      5F376269 
 15821      745F766F 
 15821      6C756D65 
 15821      50656461 
 15822              	.LASF258:
 15823 1322 6D617070 		.ascii	"mappingArray\000"
 15823      696E6741 
 15823      72726179 
 15823      00
 15824              	.LASF294:
 15825 132f 73706941 		.ascii	"spiAdjusted\000"
 15825      646A7573 
 15825      74656400 
 15826              	.LASF269:
 15827 133b 72783243 		.ascii	"rx2Channel\000"
 15827      68616E6E 
 15827      656C00
 15828              	.LASF291:
 15829 1346 706C7563 		.ascii	"pluckErrorCount\000"
 15829      6B457272 
 15829      6F72436F 
 15829      756E7400 
 15830              	.LASF182:
 15831 1356 6C657665 		.ascii	"leverCalibrationMode\000"
 15831      7243616C 
 15831      69627261 
 15831      74696F6E 
 15831      4D6F6465 
 15832              	.LASF152:
 15833 136b 5553425F 		.ascii	"USB_midi_in_ep\000"
 15833      6D696469 
 15833      5F696E5F 
 15833      657000
 15834              	.LASF105:
 15835 137a 446D6152 		.ascii	"DmaRxConfiguration\000"
 15835      78436F6E 
 15835      66696775 
 15835      72617469 
 15835      6F6E00
 15836              	.LASF20:
 15837 138d 75696E74 		.ascii	"uint32_t\000"
 15837      33325F74 
 15837      00
 15838              	.LASF196:
 15839 1396 6F637461 		.ascii	"octaveAction\000"
 15839      76654163 
 15839      74696F6E 
 15839      00
 15840              	.LASF255:
 15841 13a3 70726576 		.ascii	"prevVBUS\000"
 15841      56425553 
 15841      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 338


 15842              	.LASF275:
 15843 13ac 72783354 		.ascii	"rx3TD\000"
 15843      4400
 15844              	.LASF73:
 15845 13b2 63616C63 		.ascii	"calculatePedalRatios\000"
 15845      756C6174 
 15845      65506564 
 15845      616C5261 
 15845      74696F73 
 15846              	.LASF7:
 15847 13c7 73686F72 		.ascii	"short unsigned int\000"
 15847      7420756E 
 15847      7369676E 
 15847      65642069 
 15847      6E7400
 15848              	.LASF202:
 15849 13da 70726573 		.ascii	"presetNumberToStore\000"
 15849      65744E75 
 15849      6D626572 
 15849      546F5374 
 15849      6F726500 
 15850              	.LASF235:
 15851 13ee 70697463 		.ascii	"pitchSmoothing\000"
 15851      68536D6F 
 15851      6F746869 
 15851      6E6700
 15852              	.LASF58:
 15853 13fd 6D617070 		.ascii	"mapping\000"
 15853      696E6700 
 15854              	.LASF206:
 15855 1405 6E65636B 		.ascii	"neckPreset\000"
 15855      50726573 
 15855      657400
 15856              	.LASF121:
 15857 1410 6E6F7465 		.ascii	"noteToSend\000"
 15857      546F5365 
 15857      6E6400
 15858              	.LASF273:
 15859 141b 74785444 		.ascii	"txTD\000"
 15859      00
 15860              	.LASF8:
 15861 1420 5F5F696E 		.ascii	"__int32_t\000"
 15861      7433325F 
 15861      7400
 15862              	.LASF280:
 15863 142a 70726576 		.ascii	"prevBar\000"
 15863      42617200 
 15864              	.LASF336:
 15865 1432 70656461 		.ascii	"pedals\000"
 15865      6C7300
 15866              	.LASF328:
 15867 1439 66726574 		.ascii	"fretScalingInRatios\000"
 15867      5363616C 
 15867      696E6749 
 15867      6E526174 
 15867      696F7300 
 15868              	.LASF82:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccTBK8qi.s 			page 339


 15869 144d 74656D70 		.ascii	"tempIntHigh\000"
 15869      496E7448 
 15869      69676800 
 15870              	.LASF208:
 15871 1459 77686963 		.ascii	"whichMacroPageIsActive\000"
 15871      684D6163 
 15871      726F5061 
 15871      67654973 
 15871      41637469 
 15872              	.LASF33:
 15873 1470 6C617374 		.ascii	"lastWrRowAddr\000"
 15873      5772526F 
 15873      77416464 
 15873      7200
 15874              	.LASF190:
 15875 147e 7472616E 		.ascii	"transposeFloat\000"
 15875      73706F73 
 15875      65466C6F 
 15875      617400
 15876              	.LASF342:
 15877 148d 73747269 		.ascii	"stringFrequencies\000"
 15877      6E674672 
 15877      65717565 
 15877      6E636965 
 15877      7300
 15878              	.LASF22:
 15879 149f 75696E74 		.ascii	"uint16\000"
 15879      313600
 15880              	.LASF65:
 15881 14a6 6D617044 		.ascii	"mapDualSlider\000"
 15881      75616C53 
 15881      6C696465 
 15881      7200
 15882              	.LASF260:
 15883 14b4 6D794172 		.ascii	"myArray\000"
 15883      72617900 
 15884              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
